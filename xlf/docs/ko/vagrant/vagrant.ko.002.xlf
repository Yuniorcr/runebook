<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="vagrant">
    <body>
      <group id="vagrant">
        <trans-unit id="a73114ea8476250a5278171bdfa0174ef4844d3e" translate="yes" xml:space="preserve">
          <source>DHCP</source>
          <target state="translated">DHCP</target>
        </trans-unit>
        <trans-unit id="2060a0a708f20faa764025cdb75c574ac61a1aa9" translate="yes" xml:space="preserve">
          <source>DNS Not Working</source>
          <target state="translated">DNS가 작동하지 않습니다</target>
        </trans-unit>
        <trans-unit id="437a50fecd337f4568693e155281aa4f828dd98e" translate="yes" xml:space="preserve">
          <source>Data Bags</source>
          <target state="translated">데이터 백</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="ab3bedcdbdf526c0d1dd50a16fce89d57ed49d7e" translate="yes" xml:space="preserve">
          <source>Default Network Interface</source>
          <target state="translated">기본 네트워크 인터페이스</target>
        </trans-unit>
        <trans-unit id="8e0f3560b7b7c578e60d37c8cb0428d65a8858ee" translate="yes" xml:space="preserve">
          <source>Default Provider</source>
          <target state="translated">기본 공급자</target>
        </trans-unit>
        <trans-unit id="7157067c0c7bc52981a89abe3a6814131705c440" translate="yes" xml:space="preserve">
          <source>Default Router</source>
          <target state="translated">기본 라우터</target>
        </trans-unit>
        <trans-unit id="a659689dd74dc1cfe72d549bc485bfc4a28c9fe4" translate="yes" xml:space="preserve">
          <source>Default User Settings</source>
          <target state="translated">기본 사용자 설정</target>
        </trans-unit>
        <trans-unit id="e8dbe4760474073e756bb55c96338ee21bcbb30f" translate="yes" xml:space="preserve">
          <source>Default value is &lt;code&gt;false&lt;/code&gt; (minimal verbosity).</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다 (최소한 상세).</target>
        </trans-unit>
        <trans-unit id="e9ca46f01c2efc7fae2fd7b65a1d3c938aec2f70" translate="yes" xml:space="preserve">
          <source>Defining Multiple Machines</source>
          <target state="translated">여러 머신 정의</target>
        </trans-unit>
        <trans-unit id="86e7618d8ff9e2c7cdc50a0d26b78bfcc95c2c7e" translate="yes" xml:space="preserve">
          <source>Defining a Forwarded Port</source>
          <target state="translated">전달 된 포트 정의</target>
        </trans-unit>
        <trans-unit id="b5116cfb13658ed890f56b14217da2bcd12bbb3e" translate="yes" xml:space="preserve">
          <source>Definition Component</source>
          <target state="translated">정의 구성 요소</target>
        </trans-unit>
        <trans-unit id="58060c4b8ef932b85efa0e06693c787701644831" translate="yes" xml:space="preserve">
          <source>Definition and Implementation</source>
          <target state="translated">정의와 구현</target>
        </trans-unit>
        <trans-unit id="d474806b31f5d16516b23495358bce19a11a0c9e" translate="yes" xml:space="preserve">
          <source>Delete the &quot;Snapshots&quot; folder. It is of no use to the Vagrant Hyper-V provider and can only add to the size of the box if there are snapshots in that folder.</source>
          <target state="translated">&quot;스냅 샷&quot;폴더를 삭제하십시오. Vagrant Hyper-V 공급자는 아무 소용이 없으며 해당 폴더에 스냅 샷이있는 경우에만 상자 크기를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4ff0a4a1f8ad353cf269a1f056e0f5e166386a7" translate="yes" xml:space="preserve">
          <source>Depending on your setup, you may wish to manually override the default router configuration. This is required if you need access the Vagrant box from other networks over the public network. To do so, you can use a shell provisioner script:</source>
          <target state="translated">설정에 따라 기본 라우터 구성을 수동으로 무시할 수 있습니다. 공용 네트워크를 통해 다른 네트워크에서 Vagrant 상자에 액세스해야하는 경우에 필요합니다. 이를 위해 쉘 프로비저닝 스크립트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0f0591c03ef90790627e2c827a0496504ac8053" translate="yes" xml:space="preserve">
          <source>Depending on your setup, you may wish to manually set the IP of your bridged interface. To do so, add a &lt;code&gt;:ip&lt;/code&gt; clause to the network definition.</source>
          <target state="translated">설정에 따라 브리지 된 인터페이스의 IP를 수동으로 설정할 수 있습니다. 그렇게하려면 네트워크 정의에 &lt;code&gt;:ip&lt;/code&gt; 절을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="577ef7dc1516f4b3c43ddbe63327a8a039a0edec" translate="yes" xml:space="preserve">
          <source>Destroy</source>
          <target state="translated">Destroy</target>
        </trans-unit>
        <trans-unit id="8841fb5d8088872fef22c2cbfdb076e7415b1b0d" translate="yes" xml:space="preserve">
          <source>Disable &quot;Server Manager&quot; starting at login (for non-Core)</source>
          <target state="translated">로그인시 &quot;서버 관리자&quot;비활성화 (핵심이 아닌 경우)</target>
        </trans-unit>
        <trans-unit id="27834dd83e99bc65b81d35133f550bc876f983d4" translate="yes" xml:space="preserve">
          <source>Disable &quot;Shutdown Tracker&quot;</source>
          <target state="translated">&quot;종료 추적기&quot;비활성화</target>
        </trans-unit>
        <trans-unit id="a47de66f9df8cf13d878b3281afe2bc5d588b995" translate="yes" xml:space="preserve">
          <source>Disable Auto-Configuration</source>
          <target state="translated">자동 구성 비활성화</target>
        </trans-unit>
        <trans-unit id="5313a8e4734cc5aaaf275b9177c4b63457d1fa8a" translate="yes" xml:space="preserve">
          <source>Disable Vagrant's check for Hyper-V admin privileges and allow Vagrant to assume the current user has full access to Hyper-V. This is useful if the internal privilege check incorrectly determines the current user does not have access to Hyper-V.</source>
          <target state="translated">Vagrant의 Hyper-V 관리자 권한 확인을 비활성화하고 Vagrant가 현재 사용자에게 Hyper-V에 대한 모든 액세스 권한이 있다고 가정하도록 허용하십시오. 내부 권한 검사에서 현재 사용자에게 Hyper-V에 대한 액세스 권한이 없다고 잘못 판단한 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fc6a233a08964131539a167fe42f8e1026ebde3e" translate="yes" xml:space="preserve">
          <source>Disable any non-necessary hardware in a base box such as audio and USB controllers. These are generally unnecessary for Vagrant usage and, again, can be easily added via the Vagrantfile in most cases.</source>
          <target state="translated">오디오 및 USB 컨트롤러와 같은 기본 상자에서 불필요한 하드웨어를 비활성화하십시오. 이는 일반적으로 Vagrant 사용에 필요하지 않으며 대부분 Vagrantfile을 통해 쉽게 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b70504676b3c1f2c1a168602d062f47c5886bc06" translate="yes" xml:space="preserve">
          <source>Disable complex passwords</source>
          <target state="translated">복잡한 비밀번호 비활성화</target>
        </trans-unit>
        <trans-unit id="03bf0a54b86fdf600ed47b76df6625dec956b028" translate="yes" xml:space="preserve">
          <source>Disabling</source>
          <target state="translated">Disabling</target>
        </trans-unit>
        <trans-unit id="e1f722d866925d28bd8aec2d5aaa1b09086e9b3e" translate="yes" xml:space="preserve">
          <source>Disabling the default &lt;code&gt;/vagrant&lt;/code&gt; share can be done as follows:</source>
          <target state="translated">기본 &lt;code&gt;/vagrant&lt;/code&gt; 공유 비활성화는 다음과 같이 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6ff6be707a39b92e3c0960df5a5a40d5a593f7a" translate="yes" xml:space="preserve">
          <source>Disaster-case testing: machines dying, network partitions, slow networks, inconsistent world views, etc.</source>
          <target state="translated">재해 사례 테스트 : 머신 죽어가는 네트워크 파티션, 느린 네트워크, 일관성없는 월드 뷰 등</target>
        </trans-unit>
        <trans-unit id="b4dd35bafe12e6278a0cdeb31808b736fa962fcf" translate="yes" xml:space="preserve">
          <source>Discovering Boxes</source>
          <target state="translated">상자 발견</target>
        </trans-unit>
        <trans-unit id="cc1685cc00b09a79fc3f9b76d31989e3d880707b" translate="yes" xml:space="preserve">
          <source>Disk Space</source>
          <target state="translated">디스크 공간</target>
        </trans-unit>
        <trans-unit id="7a9d1b01d151b883db740c9857933103e8e69f41" translate="yes" xml:space="preserve">
          <source>Distributing the Box</source>
          <target state="translated">박스 배포</target>
        </trans-unit>
        <trans-unit id="c78ea12536d1d7a7d6bea44232c7de6b28a7eaaa" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;NOT&lt;/strong&gt; use the system Ruby - use a Ruby version manager like rvm or chruby</source>
          <target state="translated">시스템 Ruby를 사용 하지 &lt;strong&gt;마십시오.&lt;/strong&gt; rvm 또는 chruby와 같은 Ruby 버전 관리자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="138dc2e78352d29a5e1b91bfa99a6b4ee33252a2" translate="yes" xml:space="preserve">
          <source>Docker Base Boxes</source>
          <target state="translated">도커베이스 박스</target>
        </trans-unit>
        <trans-unit id="b7deb2dbabb0baabf7085da44699bf3e81b7e00a" translate="yes" xml:space="preserve">
          <source>Docker Basic Usage</source>
          <target state="translated">도커 기본 사용법</target>
        </trans-unit>
        <trans-unit id="efd512adaacf87b7abff3b86088aab7802e52a8c" translate="yes" xml:space="preserve">
          <source>Docker Boxes</source>
          <target state="translated">도커 박스</target>
        </trans-unit>
        <trans-unit id="c7473988660cc19eaaeee55841dfcf23e2f7f48b" translate="yes" xml:space="preserve">
          <source>Docker Commands</source>
          <target state="translated">도커 명령</target>
        </trans-unit>
        <trans-unit id="35643cdd6357b090416dac9582b9fcead674161a" translate="yes" xml:space="preserve">
          <source>Docker Configuration</source>
          <target state="translated">도커 구성</target>
        </trans-unit>
        <trans-unit id="faf05290781c1e0de4dc34697843de205c92b444" translate="yes" xml:space="preserve">
          <source>Docker Images</source>
          <target state="translated">도커 이미지</target>
        </trans-unit>
        <trans-unit id="00b8e74598125f7f259ec61b2260bb44eba86810" translate="yes" xml:space="preserve">
          <source>Docker Provisioner</source>
          <target state="translated">도커 프로 비저</target>
        </trans-unit>
        <trans-unit id="03426cb05b07ae9623f71e487c158e0745343c1e" translate="yes" xml:space="preserve">
          <source>Docker's &lt;a href=&quot;https://docs.docker.com/v17.09/engine/admin/volumes/bind-mounts/&quot;&gt;volume consistency&lt;/a&gt; setting can be specified using the &lt;code&gt;docker_consistency&lt;/code&gt; option when defining a synced folder. This can &lt;a href=&quot;https://docs.docker.com/docker-for-mac/osxfs-caching&quot;&gt;greatly improve performance on macOS&lt;/a&gt;. An example is shown using the &lt;code&gt;cached&lt;/code&gt; and &lt;code&gt;delegated&lt;/code&gt; settings:</source>
          <target state="translated">동기화 된 폴더를 정의 할 때 &lt;code&gt;docker_consistency&lt;/code&gt; 옵션을 사용하여 Docker의 &lt;a href=&quot;https://docs.docker.com/v17.09/engine/admin/volumes/bind-mounts/&quot;&gt;볼륨 일관성&lt;/a&gt; 설정을 지정할 수 있습니다 . 이것은 &lt;a href=&quot;https://docs.docker.com/docker-for-mac/osxfs-caching&quot;&gt;macOS의 성능을 크게 향상시킬&lt;/a&gt; 수 있습니다 . &lt;code&gt;cached&lt;/code&gt; 및 &lt;code&gt;delegated&lt;/code&gt; 설정을 사용하여 예를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b779f02a9d5a736d9f0658b3965a1a825be50995" translate="yes" xml:space="preserve">
          <source>Dockerfiles</source>
          <target state="translated">Dockerfiles</target>
        </trans-unit>
        <trans-unit id="386945f0725f56e75de9e9ce16ed1f144b097f7a" translate="yes" xml:space="preserve">
          <source>Download 1.0.5</source>
          <target state="translated">1.0.5 다운로드</target>
        </trans-unit>
        <trans-unit id="89c8fdb92db58d7e47628fa7bc4ec6ad1e4c3e8b" translate="yes" xml:space="preserve">
          <source>Download the installer package for the Linux distribution from the releases page and install Vagrant.</source>
          <target state="translated">릴리스 페이지에서 Linux 배포 용 설치 프로그램 패키지를 다운로드하고 Vagrant를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="6dda7e7a600e7b5ebfa533e4c3508a3bd163457d" translate="yes" xml:space="preserve">
          <source>Each component is explained below:</source>
          <target state="translated">각 구성 요소는 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a4dadef9e32c856489e539501f5b3cdfec68094" translate="yes" xml:space="preserve">
          <source>Each provider is responsible for having its own box format. This is actually an extremely simple step due to how generic boxes are. Before explaining you should get familiar with the general &lt;a href=&quot;../boxes/format&quot;&gt;box file format&lt;/a&gt;.</source>
          <target state="translated">각 공급자는 자체 상자 형식을 가지고 있습니다. 이것은 일반적인 상자의 방식으로 인해 실제로 매우 간단한 단계입니다. 설명하기 전에 일반 &lt;a href=&quot;../boxes/format&quot;&gt;상자 파일 형식에&lt;/a&gt; 익숙해 져야 합니다 .</target>
        </trans-unit>
        <trans-unit id="7e20c9b7d1ffc7023a01ca07f255fdd693586040" translate="yes" xml:space="preserve">
          <source>Each trigger is expected to be given a command key for when it should be fired during the Vagrant command lifecycle. These could be defined as a single key or an array which acts like a &lt;em&gt;whitelist&lt;/em&gt; for the defined trigger.</source>
          <target state="translated">각 트리거에는 Vagrant 명령 수명주기 동안 실행되어야하는시기에 대한 명령 키가 제공됩니다. 이들은 단일 키 또는 정의 된 트리거에 대한 &lt;em&gt;화이트리스트&lt;/em&gt; 처럼 작동하는 배열로 정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e64020dbeafc91f40beaf6012ff1decde6c0cfa8" translate="yes" xml:space="preserve">
          <source>Easy SSH sharing is incredibly useful if you want to give access to a colleague for troubleshooting ops issues. Additionally, it enables pair programming with a Vagrant environment, if you want!</source>
          <target state="translated">쉬운 SSH 공유는 ops 문제를 해결하기 위해 동료에게 액세스하려는 경우 매우 유용합니다. 또한 원하는 경우 Vagrant 환경과의 페어 프로그래밍이 가능합니다!</target>
        </trans-unit>
        <trans-unit id="350b59a4c11831c23109923648bac35e2d15ef5f" translate="yes" xml:space="preserve">
          <source>Easy. The only odd thing is the &lt;code&gt;UNSET_VALUE&lt;/code&gt; bits above. This is actually so that Vagrant can properly automatically merge multiple configurations. Merging is covered in the next section, and &lt;code&gt;UNSET_VALUE&lt;/code&gt; will be explained there.</source>
          <target state="translated">쉬운. 이상한 것은 위 의 &lt;code&gt;UNSET_VALUE&lt;/code&gt; 비트입니다. 이것은 실제로 Vagrant가 여러 구성을 올바르게 자동으로 병합 할 수 있도록합니다. 다음 섹션에서 병합에 대해 설명 하고 &lt;code&gt;UNSET_VALUE&lt;/code&gt; 에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="12d3e856e2ad0ddd8d9616f14646d9c8748d7c8d" translate="yes" xml:space="preserve">
          <source>Either of the following may be used to actually execute runners during provisioning.</source>
          <target state="translated">프로비저닝 중 실제로 러너를 실행하기 위해 다음 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edf00256605f69854fbb4e7a8053077f1dfe2086" translate="yes" xml:space="preserve">
          <source>Either of the following may be used to actually execute states during provisioning.</source>
          <target state="translated">프로비저닝 중 실제로 상태를 실행하는 데 다음 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a5f21aa01fdbcc6b8719f516e5a185b549f2947" translate="yes" xml:space="preserve">
          <source>Enable Auto-Upgrade of VMware Tools</source>
          <target state="translated">VMware Tools 자동 업그레이드 활성화</target>
        </trans-unit>
        <trans-unit id="ab6c4d9a6009e703e713b51ae1e148dbd59d9898" translate="yes" xml:space="preserve">
          <source>Enabling</source>
          <target state="translated">Enabling</target>
        </trans-unit>
        <trans-unit id="7cb12445593b25af6a86cf35f09cb6e94145ef4f" translate="yes" xml:space="preserve">
          <source>Enabling NFS Synced Folders</source>
          <target state="translated">NFS 동기화 폴더 활성화</target>
        </trans-unit>
        <trans-unit id="c29610490244f1bb3fc9b2eb302794c29b0a52eb" translate="yes" xml:space="preserve">
          <source>Enabling Networks</source>
          <target state="translated">네트워크 활성화</target>
        </trans-unit>
        <trans-unit id="e8713e94206387acb90340242a79abbfecf410b1" translate="yes" xml:space="preserve">
          <source>Ensure the Windows PowerShell feature is installed</source>
          <target state="translated">Windows PowerShell 기능이 설치되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="51a3930527691035138f5859073fc9ef33b5c51f" translate="yes" xml:space="preserve">
          <source>Environment Not Showing Up</source>
          <target state="translated">환경이 표시되지 않음</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="fae6e9255e277e75615fae0a5cdc700ab5f65226" translate="yes" xml:space="preserve">
          <source>Environmental Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="017b53c42e43b39e1f5aabf6f7280c2f777243a2" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">Environments</target>
        </trans-unit>
        <trans-unit id="5fff1f56919b006049c274c6c76fbbe56470ee4c" translate="yes" xml:space="preserve">
          <source>Error Handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="a253a734b1a98eafc0456c78ee4bf5cf74643470" translate="yes" xml:space="preserve">
          <source>Error handling in Vagrant is done entirely by raising Ruby exceptions. But Vagrant treats certain errors differently than others. If an error is raised that inherits from &lt;code&gt;Vagrant::Errors::VagrantError&lt;/code&gt;, then the &lt;code&gt;vagrant&lt;/code&gt; command will output the message of the error in nice red text to the console and exit with an exit status of 1.</source>
          <target state="translated">Vagrant의 오류 처리는 Ruby 예외를 발생시켜 전적으로 수행됩니다. 그러나 Vagrant는 특정 오류를 다른 오류와 다르게 처리합니다. 오류가 발생하면 그에서 상속 &lt;code&gt;Vagrant::Errors::VagrantError&lt;/code&gt; , 다음 &lt;code&gt;vagrant&lt;/code&gt; 명령 의지 출력 1의 종료 상태 콘솔 종료에 좋은 빨간색 텍스트 오류 메시지.</target>
        </trans-unit>
        <trans-unit id="8c886adf9ffaef8ff24d01f18fae5479d52dc0c6" translate="yes" xml:space="preserve">
          <source>Every Vagrant command accepts a &lt;code&gt;--machine-readable&lt;/code&gt; flag which enables machine readable output mode. In this mode, the output to the terminal is replaced with machine-friendly output.</source>
          <target state="translated">모든 Vagrant 명령은 기계 판독 가능 출력 모드를 활성화 하는 &lt;code&gt;--machine-readable&lt;/code&gt; 플래그를 허용 합니다. 이 모드에서 터미널로의 출력은 기계 친화적 출력으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="7f96abc5e8492bb34b9b80b839a811b0a57a7d70" translate="yes" xml:space="preserve">
          <source>Every network type has an identifier such as &lt;code&gt;&quot;forwarded_port&quot;&lt;/code&gt; in the above example. Following this is a set of configuration arguments that can differ for each network type. In the case of forwarded ports, two numeric arguments are expected: the port on the guest followed by the port on the host that the guest port can be accessed by.</source>
          <target state="translated">모든 네트워크 유형에는 위의 예에서 &lt;code&gt;&quot;forwarded_port&quot;&lt;/code&gt; 와 같은 식별자가 있습니다. 다음은 각 네트워크 유형마다 다를 수있는 구성 인수 세트입니다. 전달 된 포트의 경우 두 개의 숫자 인수가 필요합니다. 게스트의 포트 다음에 게스트 포트가 액세스 할 수있는 호스트의 포트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="45bf3a1b968e799b0c2aeec1a90d7986db784a4c" translate="yes" xml:space="preserve">
          <source>Every provisioner has a type, such as &lt;code&gt;&quot;shell&quot;&lt;/code&gt;, used as the first parameter to the provisioning configuration. Following that is basic key/value for configuring that specific provisioner. Instead of basic key/value, you can also use a Ruby block for a syntax that is more like variable assignment. The following is effectively the same as the prior example:</source>
          <target state="translated">모든 프로 비저에는 &lt;code&gt;&quot;shell&quot;&lt;/code&gt; 과 같은 유형 이 있으며 프로비저닝 구성의 첫 번째 매개 변수로 사용됩니다. 다음은 해당 특정 공급자를 구성하기위한 기본 키 / 값입니다. 기본 키 / 값 대신 변수 할당과 유사한 구문에 Ruby 블록을 사용할 수도 있습니다. 다음은 이전 예와 사실상 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7caf14679b24b16818715a78f37bf8a00e442b1a" translate="yes" xml:space="preserve">
          <source>Everything under &lt;code&gt;cfengine_files/&lt;/code&gt; in the Vagrant project directory will be recursively copied under &lt;code&gt;/var/cfengine/&lt;/code&gt; in the VM, on top of its default contents.</source>
          <target state="translated">Vagrant 프로젝트 디렉토리의 &lt;code&gt;cfengine_files/&lt;/code&gt; 아래에있는 모든 내용 은 VM의 &lt;code&gt;/var/cfengine/&lt;/code&gt; 아래 에 기본 내용 위에 반복적으로 복사됩니다 .</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="140d3b0b26f9839a1bb3746b87ccd4301912615a" translate="yes" xml:space="preserve">
          <source>Example Plugin</source>
          <target state="translated">플러그인 예</target>
        </trans-unit>
        <trans-unit id="9d55f725ac327a39eba1f697cf369929c155cd72" translate="yes" xml:space="preserve">
          <source>Example Provider: AWS</source>
          <target state="translated">공급자 예 : AWS</target>
        </trans-unit>
        <trans-unit id="e9b766f3ee188b94e592fec9231e6d9e5d9ddbd7" translate="yes" xml:space="preserve">
          <source>Example with &lt;a href=&quot;https://docs.ansible.com/ansible/intro_inventory.html#group-variables&quot;&gt;group variables&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.ansible.com/ansible/intro_inventory.html#group-variables&quot;&gt;그룹 변수가있는&lt;/a&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="2bf0d6d63041ffcf1af5da1d22ecfa973071a0ec" translate="yes" xml:space="preserve">
          <source>Example with the &lt;a href=&quot;ansible&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; provisioner</source>
          <target state="translated">&lt;a href=&quot;ansible&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt; provisioner를 사용한 예</target>
        </trans-unit>
        <trans-unit id="685b52f93ac9be1f55d498889d64aeb6f9ff4663" translate="yes" xml:space="preserve">
          <source>Example with the &lt;a href=&quot;ansible_local&quot;&gt;&lt;code&gt;ansible_local&lt;/code&gt;&lt;/a&gt; provisioner</source>
          <target state="translated">&lt;a href=&quot;ansible_local&quot;&gt; &lt;code&gt;ansible_local&lt;/code&gt; &lt;/a&gt; 프로 바이더를 사용한 예제</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="8ab2c6c8390f233c153264bb8ff619b236078272" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;['-o ControlMaster=no']&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;['-o ControlMaster=no']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="db74da57534ade40fb5dde8117995e757bc6f04b" translate="yes" xml:space="preserve">
          <source>Examples: &lt;code&gt;true&lt;/code&gt; (equivalent to &lt;code&gt;v&lt;/code&gt;), &lt;code&gt;-vvv&lt;/code&gt; (equivalent to &lt;code&gt;vvv&lt;/code&gt;), &lt;code&gt;vvvv&lt;/code&gt;.</source>
          <target state="translated">예 : &lt;code&gt;true&lt;/code&gt; (등가 &lt;code&gt;v&lt;/code&gt; ) &lt;code&gt;-vvv&lt;/code&gt; (등가 &lt;code&gt;vvv&lt;/code&gt; ) &lt;code&gt;vvvv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b07332d3b709e2bbb1e1c6b24c732c0431f59d77" translate="yes" xml:space="preserve">
          <source>Execute Runners</source>
          <target state="translated">주자 실행</target>
        </trans-unit>
        <trans-unit id="b812ecb61280d0c31b9db92ed5bf04383b49f082" translate="yes" xml:space="preserve">
          <source>Execute States</source>
          <target state="translated">실행 상태</target>
        </trans-unit>
        <trans-unit id="68d84b05964adaf67f028ebab6c6c03d3113852e" translate="yes" xml:space="preserve">
          <source>External Aliases</source>
          <target state="translated">외부 별명</target>
        </trans-unit>
        <trans-unit id="7b6fc545744998e6100da4ede7df8cd0c834e467" translate="yes" xml:space="preserve">
          <source>External Script</source>
          <target state="translated">외부 스크립트</target>
        </trans-unit>
        <trans-unit id="bab5dbc55b691efec22a133ca75b1339c3ea115c" translate="yes" xml:space="preserve">
          <source>FTP &amp;amp; SFTP Strategy</source>
          <target state="translated">FTP 및 SFTP 전략</target>
        </trans-unit>
        <trans-unit id="68809c3909e4a497d618d3680501d8bbcbb5278a" translate="yes" xml:space="preserve">
          <source>File Provisioner</source>
          <target state="translated">파일 프로 비져</target>
        </trans-unit>
        <trans-unit id="c64cccb1a9462b19b9b404bbb9a288826c35b6ec" translate="yes" xml:space="preserve">
          <source>File path or HTTP URL to a box in a &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;catalog&lt;/a&gt;. For HTTP, basic authentication is supported and &lt;code&gt;http_proxy&lt;/code&gt; environmental variables are respected. HTTPS is also supported.</source>
          <target state="translated">&lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;카탈로그&lt;/a&gt; 의 상자에 대한 파일 경로 또는 HTTP URL 입니다. HTTP의 경우 기본 인증이 지원되며 &lt;code&gt;http_proxy&lt;/code&gt; 환경 변수가 존중됩니다. HTTPS도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="04b0289baef62595e4a141f31c824195450fc0f6" translate="yes" xml:space="preserve">
          <source>File provisioning is a simple way to, for example, replicate your local ~/.gitconfig to the vagrant user's home directory on the guest machine so you will not have to run &lt;code&gt;git config --global&lt;/code&gt; every time you provision a new VM.</source>
          <target state="translated">예를 들어, 파일 프로비저닝은 로컬 ~ / .gitconfig를 게스트 머신의 방대한 사용자 홈 디렉토리에 복제하여 새 VM을 프로비저닝 할 때마다 &lt;code&gt;git config --global&lt;/code&gt; 을 실행할 필요가없는 간단한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="13440e33e415f41d2b9b1f3aa08c1792cccef6c9" translate="yes" xml:space="preserve">
          <source>Finally, create an archive of those contents (but &lt;em&gt;not&lt;/em&gt; the parent folder) using a tool such as &lt;code&gt;tar&lt;/code&gt;:</source>
          <target state="translated">마지막으로, 그 내용의 아카이브 (그러나 생성 &lt;em&gt;되지&lt;/em&gt; 상위 폴더)와 같은 도구를 사용하여 &lt;code&gt;tar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4cae33b0c47c4f4650dd2fceb7873b38f1a0abdb" translate="yes" xml:space="preserve">
          <source>Finally, if you would prefer to store the recipe as plain-text, you can set the recipe to the contents of a file:</source>
          <target state="translated">마지막으로, 레시피를 일반 텍스트로 저장하려면 레시피를 파일의 내용으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5babfc48c74ee617dc89552b3781f2e12163598" translate="yes" xml:space="preserve">
          <source>Finally, install the service. This will also enable the service.</source>
          <target state="translated">마지막으로 서비스를 설치하십시오. 이것은 또한 서비스를 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="283a8b7548f2889ab02cd23bce5de9af1bbaf9d8" translate="yes" xml:space="preserve">
          <source>Finally, run the shell script that matches your system to install the guest additions. For example, for Linux on x86, it is the following:</source>
          <target state="translated">마지막으로, 시스템과 일치하는 쉘 스크립트를 실행하여 게스트 추가를 설치하십시오. 예를 들어 x86 기반 Linux의 경우 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7cb80d4aa25891927149003fc67cd30712ba252f" translate="yes" xml:space="preserve">
          <source>Finally, we want to note that we are working on making it so that when Vagrant share is used, the Vagrant private key is actively rejected unless explicitly allowed. This feature is not yet done, however.</source>
          <target state="translated">마지막으로, 우리는 Vagrant share가 사용될 때 명시 적으로 허용되지 않는 한 Vagrant 개인 키가 적극적으로 거부되도록하기 위해 노력하고 있습니다. 그러나이 기능은 아직 수행되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="9c1826713cb97e040d948ea91ae2eec9309f769e" translate="yes" xml:space="preserve">
          <source>Finally, you can update boxes with &lt;code&gt;vagrant box update&lt;/code&gt;. This will download and install the new box. This &lt;em&gt;will not&lt;/em&gt; magically update running Vagrant environments. If a Vagrant environment is already running, you will have to destroy and recreate it to acquire the new updates in the box. The update command just downloads these updates locally.</source>
          <target state="translated">마지막으로 &lt;code&gt;vagrant box update&lt;/code&gt; 로 상자를 업데이트 할 수 있습니다 . 새 상자를 다운로드하여 설치합니다. 이 &lt;em&gt;되지 않습니다&lt;/em&gt; 마술 방랑 환경을 실행하고 업데이트합니다. Vagrant 환경이 이미 실행중인 경우 상자에서 새 업데이트를 얻으려면 해당 환경을 파괴하고 다시 작성해야합니다. update 명령은 이러한 업데이트를 로컬로 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="170da22bf3e622b51b502fd62187f409cbb080c2" translate="yes" xml:space="preserve">
          <source>First find out the name of the hypervisor:</source>
          <target state="translated">먼저 하이퍼 바이저의 이름을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="4ec95938a2f881b76993ede0b70847abac57d807" translate="yes" xml:space="preserve">
          <source>First, every provisioner is configured within your &lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; using the &lt;code&gt;config.vm.provision&lt;/code&gt; method call. For example, the Vagrantfile below enables shell provisioning:</source>
          <target state="translated">첫째, 모든 제공자는 내 구성 &lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; 은 Using &lt;code&gt;config.vm.provision&lt;/code&gt; 의 메서드 호출. 예를 들어, 아래의 Vagrantfile은 쉘 프로비저닝을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="20b4ddeaeabeeaee47211723e431ed75587c7206" translate="yes" xml:space="preserve">
          <source>First, please check your JUNK or SPAM folders. Since the license comes from an automated system, it might have been flagged as spam by your email provider. If you do not see the email there, please &lt;a href=&quot;mailto:support@hashicorp.com?subject=License%20Not%20Received&quot;&gt;contact support&lt;/a&gt; and include the original order number.</source>
          <target state="translated">먼저 JUNK 또는 SPAM 폴더를 확인하십시오. 라이센스는 자동화 된 시스템에서 제공되므로 이메일 제공 업체에서 스팸으로 표시되었을 수 있습니다. 해당 이메일이 보이지 않으면 &lt;a href=&quot;mailto:support@hashicorp.com?subject=License%20Not%20Received&quot;&gt;지원 부서에 연락&lt;/a&gt; 하여 원래 주문 번호를 알려주십시오 .</target>
        </trans-unit>
        <trans-unit id="e2bf9b1e8fed9d10e9760b67b480b8eb7d80609d" translate="yes" xml:space="preserve">
          <source>First, run the following command from the Vagrant repo:</source>
          <target state="translated">먼저 Vagrant 저장소에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1ad2bca13e9a42b379a588590bc702dbc661c87b" translate="yes" xml:space="preserve">
          <source>For *nix users, make sure to edit your &lt;code&gt;/etc/sudoers&lt;/code&gt; file with &lt;code&gt;visudo&lt;/code&gt;. It protects you against syntax errors which could leave you without the ability to gain elevated privileges.</source>
          <target state="translated">* nix 사용자의 경우 &lt;code&gt;visudo&lt;/code&gt; 로 &lt;code&gt;/etc/sudoers&lt;/code&gt; 파일 을 편집하십시오 . 높은 권한을 얻지 못한 채 구문 오류가 발생하지 않도록 보호합니다.</target>
        </trans-unit>
        <trans-unit id="3086a7103e10e409281430204f8d84050bc17314" translate="yes" xml:space="preserve">
          <source>For 1.0.x</source>
          <target state="translated">1.0.x의 경우</target>
        </trans-unit>
        <trans-unit id="a9edbfa02844989f9b27d9626d33153060568803" translate="yes" xml:space="preserve">
          <source>For 1.x</source>
          <target state="translated">1.x</target>
        </trans-unit>
        <trans-unit id="829fd504ea9c21fcaefa937f552a99893812dd18" translate="yes" xml:space="preserve">
          <source>For Fedora Linux, sudoers might look like this (given your user belongs to the vagrant group):</source>
          <target state="translated">Fedora Linux의 경우 sudoers는 다음과 같습니다 (사용자가 방랑자 그룹에 속하는 경우).</target>
        </trans-unit>
        <trans-unit id="e96358e49420389389056c0534cd6153145c23e2" translate="yes" xml:space="preserve">
          <source>For OS X, sudoers should have this entry:</source>
          <target state="translated">OS X의 경우 sudoers에는 다음 항목이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="56bc17ba2ebf0c7ef46c88668f1910a15d65641d" translate="yes" xml:space="preserve">
          <source>For POSIX-like machines, the shell provisioner executes scripts with SSH. For Windows guest machines that are configured to use WinRM, the shell provisioner executes PowerShell and Batch scripts over WinRM.</source>
          <target state="translated">POSIX와 유사한 시스템의 경우, 쉘 프로비저닝 프로그램은 SSH를 사용하여 스크립트를 실행합니다. WinRM을 사용하도록 구성된 Windows 게스트 컴퓨터의 경우 셸 프로 비져 너는 WinRM을 통해 PowerShell 및 Batch 스크립트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="36eda54c08a0afd6c9060aeefe4fd4842336ccff" translate="yes" xml:space="preserve">
          <source>For Ubuntu Linux , sudoers should look like this:</source>
          <target state="translated">Ubuntu Linux의 경우 sudoers는 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="8b5dd5b1fc144a7119c63ef09f2e9e0c35d1c132" translate="yes" xml:space="preserve">
          <source>For Windows guest machines, the inline script &lt;em&gt;must&lt;/em&gt; be PowerShell. Batch scripts are not allowed as inline scripts.</source>
          <target state="translated">Windows 게스트 시스템의 경우 인라인 스크립트 &lt;em&gt;는&lt;/em&gt; PowerShell &lt;em&gt;이어야&lt;/em&gt; 합니다. 배치 스크립트는 인라인 스크립트로 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="571dcb12f60659c297914c2424f50862bf8be009" translate="yes" xml:space="preserve">
          <source>For Windows installations, an SSH client is provided within the installer image. If no SSH client is found on the current PATH, Vagrant will use the SSH client it provided. Depending on the local environment used for running Vagrant, the installer provided SSH client may not work correctly. For example, when using a cygwin or msys2 shell the SSH client will fail to work as expected when run interactively. Installing the SSH package built for the current working environment will resolve this issue.</source>
          <target state="translated">Windows 설치의 경우 설치 프로그램 이미지 내에 SSH 클라이언트가 제공됩니다. 현재 PATH에 SSH 클라이언트가 없으면 Vagrant는 제공된 SSH 클라이언트를 사용합니다. Vagrant 실행에 사용 된 로컬 환경에 따라 설치 프로그램에서 제공 한 SSH 클라이언트가 올바르게 작동하지 않을 수 있습니다. 예를 들어 cygwin 또는 msys2 쉘을 사용하는 경우 대화식으로 실행할 때 SSH 클라이언트가 예상대로 작동하지 않습니다. 현재 작업 환경에 맞게 구축 된 SSH 패키지를 설치하면이 문제가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="63e19c1a7dc8fd7230527f4626c654b9dcd6bb77" translate="yes" xml:space="preserve">
          <source>For an example of a more advanced setup, look at the original &lt;a href=&quot;https://github.com/saltstack/salty-vagrant/tree/develop/example&quot;&gt;plugin&lt;/a&gt;.</source>
          <target state="translated">고급 설정의 예는 원래 &lt;a href=&quot;https://github.com/saltstack/salty-vagrant/tree/develop/example&quot;&gt;플러그인을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="392b305292e6e7d2585a5143e8784be5b266e11f" translate="yes" xml:space="preserve">
          <source>For automated testing, the &lt;a href=&quot;https://github.com/hashicorp/vagrant-spec&quot;&gt;vagrant-spec&lt;/a&gt; project provides helpers for both unit and acceptance testing plugins. See the giant README for that project for a detailed description of how to integrate vagrant-spec into your project. Vagrant itself (and all of its core plugins) use vagrant-spec for automated testing.</source>
          <target state="translated">자동 테스트의 경우, &lt;a href=&quot;https://github.com/hashicorp/vagrant-spec&quot;&gt;방랑자 스펙&lt;/a&gt; 프로젝트는 단위 및 승인 테스트 플러그인 모두에 대한 헬퍼를 제공합니다. vagrant-spec을 프로젝트에 통합하는 방법에 대한 자세한 설명은 해당 프로젝트의 거대한 README를 참조하십시오. 유랑 자체 (및 모든 핵심 플러그인)는 자동 테스트를 위해 유랑 스펙을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="29fe3a149612dcff2ddb4302774f99104b236c63" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;machine3&lt;/code&gt; and &lt;code&gt;group3&lt;/code&gt; in the example below would not be added to the generated inventory file:</source>
          <target state="translated">예를 들어 아래 예의 &lt;code&gt;machine3&lt;/code&gt; 및 &lt;code&gt;group3&lt;/code&gt; 은 생성 된 인벤토리 파일에 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="875a8c4aefbf73201099fff6ca6ca875dd68250d" translate="yes" xml:space="preserve">
          <source>For example, given the following configuration:</source>
          <target state="translated">예를 들어, 다음과 같은 구성이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7dbed3631dbf3674f6ab27caf6b11c594463d7d8" translate="yes" xml:space="preserve">
          <source>For example, here is how you would configure Docker to run a container with the Vagrant shared directory mounted inside of it:</source>
          <target state="translated">예를 들어, 여기에 Vagrant 공유 디렉토리가 마운트 된 컨테이너를 실행하도록 Docker를 구성하는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fec3c981bbbec52fb45762a1d0642ca68d247437" translate="yes" xml:space="preserve">
          <source>For example, if a new &lt;code&gt;CustomVMSRV&lt;/code&gt; VM integration service was added and Vagrant is not aware of this new service name, it can be provided as the key value explicitly:</source>
          <target state="translated">예를 들어, 새로운 &lt;code&gt;CustomVMSRV&lt;/code&gt; VM 통합 서비스가 추가되었고 Vagrant가이 새로운 서비스 이름을 인식하지 못하면 명시 적으로 키 값으로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6278c2fb69ebea380b3b51118156a24b3a18834e" translate="yes" xml:space="preserve">
          <source>For example, if you configure VMware Fusion and send it to an individual who does not have the VMware Fusion provider, Vagrant will silently ignore that part of the configuration.</source>
          <target state="translated">예를 들어, VMware Fusion을 구성하고 VMware Fusion 제공자가없는 개인에게 보내면 Vagrant는 해당 구성 부분을 자동으로 무시합니다.</target>
        </trans-unit>
        <trans-unit id="3a918ef100fac3fb4a629fcbd2a2407534e7f327" translate="yes" xml:space="preserve">
          <source>For example, the Ubuntu boxes provided by the Vagrant project (such as &quot;precise64&quot;) are base boxes. They were created from a minimal Ubuntu install from an ISO, rather than repackaging an existing environment.</source>
          <target state="translated">예를 들어, Vagrant 프로젝트에서 제공하는 Ubuntu 상자 (예 : &quot;precise64&quot;)는 기본 상자입니다. 기존 환경을 다시 패키징하지 않고 ISO의 최소 Ubuntu 설치로 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="db97b05dfa32098f33ed3d062a1771c36d362b78" translate="yes" xml:space="preserve">
          <source>For example, when using the VirtualBox provider:</source>
          <target state="translated">예를 들어 VirtualBox 공급자를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="8cf8c33e4b83a4eb89b80d2bd8017e31b09a155b" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;vagrant box add hashicorp/precise64&lt;/code&gt;. You can also quickly initialize a Vagrant environment with &lt;code&gt;vagrant init hashicorp/precise64&lt;/code&gt;.</source>
          <target state="translated">예를 들어 : &lt;code&gt;vagrant box add hashicorp/precise64&lt;/code&gt; 입니다. &lt;code&gt;vagrant init hashicorp/precise64&lt;/code&gt; 를 사용하여 Vagrant 환경을 빠르게 초기화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41ed3e5124064c7694c9c2b329dd0f61ef711b2c" translate="yes" xml:space="preserve">
          <source>For example: If the guest machine is running a web server listening on port 80, you can make a forwarded port mapping to port 8080 (or anything) on your host machine. You can then open your browser to &lt;code&gt;localhost:8080&lt;/code&gt; and browse the website, while all actual network data is being sent to the guest.</source>
          <target state="translated">예를 들어, 게스트 시스템이 포트 80에서 수신 대기하는 웹 서버를 실행중인 경우 호스트 시스템의 포트 8080 (또는 기타)에 전달 된 포트 맵핑을 작성할 수 있습니다. 그런 다음 브라우저를 &lt;code&gt;localhost:8080&lt;/code&gt; 으로 열고 웹 사이트를 탐색하고 모든 실제 네트워크 데이터가 게스트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="6abdf87ef0f957d269cfbf70b2e1ce5494ee7147" translate="yes" xml:space="preserve">
          <source>For examples, take a look at Vagrant's own internal plugins in the &lt;code&gt;plugins&lt;/code&gt; folder in Vagrant's source on GitHub.</source>
          <target state="translated">예를 들어 GitHub의 Vagrant 소스에 있는 &lt;code&gt;plugins&lt;/code&gt; 폴더에서 Vagrant의 내부 플러그인을 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="ed0b638ce71a18a7724f665a0f7eee457a10ebba" translate="yes" xml:space="preserve">
          <source>For linux-based guests, Vagrant uses the &lt;code&gt;shutdown&lt;/code&gt; command to gracefully terminate the machine. Due to the varying nature of operating systems, the &lt;code&gt;shutdown&lt;/code&gt; command may exist at many different locations in the guest's &lt;code&gt;$PATH&lt;/code&gt;. It is the guest machine's responsibility to properly populate the &lt;code&gt;$PATH&lt;/code&gt; with directory containing the &lt;code&gt;shutdown&lt;/code&gt; command.</source>
          <target state="translated">Linux 기반 게스트의 경우 Vagrant는 &lt;code&gt;shutdown&lt;/code&gt; 명령을 사용하여 시스템 을 정상적으로 종료합니다. 운영 체제의 특성이 다양하기 때문에 &lt;code&gt;shutdown&lt;/code&gt; 명령이 게스트의 &lt;code&gt;$PATH&lt;/code&gt; 의 여러 위치에 존재할 수 있습니다 . &lt;code&gt;shutdown&lt;/code&gt; 명령을 포함하는 디렉토리로 &lt;code&gt;$PATH&lt;/code&gt; 를 올바르게 채우는 것은 게스트 머신의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="f00620db244ad62120d48f99c7b8d908ee5a1508" translate="yes" xml:space="preserve">
          <source>For more complicated scripts, you may store them in a separate file and read them from the &lt;code&gt;Vagrantfile&lt;/code&gt; like so:</source>
          <target state="translated">보다 복잡한 스크립트의 경우 별도의 파일로 저장하고 &lt;code&gt;Vagrantfile&lt;/code&gt; 에서 다음 과 같이 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9387a5dfffefbaa9641c11984e44fdcfb60d7c77" translate="yes" xml:space="preserve">
          <source>For more information about transport protocols and NFS version 4 see:</source>
          <target state="translated">전송 프로토콜 및 NFS 버전 4에 대한 자세한 내용은 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="920e7bb8eb053949d8b8b1b4482234535875f40b" translate="yes" xml:space="preserve">
          <source>For more information about what options are available for triggers, see the &lt;a href=&quot;configuration&quot;&gt;configuration section&lt;/a&gt;.</source>
          <target state="translated">트리거에 사용 가능한 옵션에 대한 자세한 정보는 &lt;a href=&quot;configuration&quot;&gt;구성 섹션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="146ce694b9344d58bdf1256a98d668bfea952de2" translate="yes" xml:space="preserve">
          <source>For more information on plugin installation, please see the &lt;a href=&quot;../plugins/usage&quot;&gt;Vagrant plugin usage documentation&lt;/a&gt;.</source>
          <target state="translated">플러그인 설치에 대한 자세한 내용은 &lt;a href=&quot;../plugins/usage&quot;&gt;Vagrant 플러그인 사용 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7712321d11f51f37a1c0ae36d9b1fbf2d8dee4e5" translate="yes" xml:space="preserve">
          <source>For more information, read about the &lt;a href=&quot;box&quot;&gt;&lt;code&gt;vagrant box remove&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;box&quot;&gt; &lt;code&gt;vagrant box remove&lt;/code&gt; &lt;/a&gt; 명령 에 대해 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="d0f470be51b962ec5c9802cdd9eb81b334483ef4" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://github.com/PowerShell/Win32-OpenSSH/&quot;&gt;Win32-OpenSSH project page&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/PowerShell/Win32-OpenSSH/&quot;&gt;Win32-OpenSSH 프로젝트 페이지를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88d7c39c7bdba5fceed6c0f9922dbf2763bc1003" translate="yes" xml:space="preserve">
          <source>For most newer Linux distributions, the Hyper-V modules will be available out of the box.</source>
          <target state="translated">대부분의 최신 Linux 배포판에서는 Hyper-V 모듈을 즉시 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d88e68f20d1db4c84f019848ea8edc8377223ce" translate="yes" xml:space="preserve">
          <source>For most providers, forwarded ports by default bind to all interfaces. This means that other devices on your network can access the forwarded ports. If you want to restrict access, see the &lt;code&gt;guest_ip&lt;/code&gt; and &lt;code&gt;host_ip&lt;/code&gt; settings below.</source>
          <target state="translated">대부분의 공급자의 경우 기본적으로 전달 된 포트는 모든 인터페이스에 바인딩됩니다. 이는 네트워크의 다른 장치가 전달 된 포트에 액세스 할 수 있음을 의미합니다. 액세스를 제한하려면 아래의 &lt;code&gt;guest_ip&lt;/code&gt; 및 &lt;code&gt;host_ip&lt;/code&gt; 설정을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="610d2bc77a297caca9cf33f15f1e11df63a594ab" translate="yes" xml:space="preserve">
          <source>For now, this is only one step:</source>
          <target state="translated">현재로서는 한 단계 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="bce95eda04a34521af41f60f51b5116c004d3c85" translate="yes" xml:space="preserve">
          <source>For other users, we recommend the &lt;a href=&quot;https://vagrantcloud.com/bento&quot;&gt;Bento boxes&lt;/a&gt;. The Bento boxes are &lt;a href=&quot;https://github.com/chef/bento&quot;&gt;open source&lt;/a&gt; and built for a number of providers including VMware, Virtualbox, and Parallels. There are a variety of operating systems and versions available.</source>
          <target state="translated">다른 사용자에게는 &lt;a href=&quot;https://vagrantcloud.com/bento&quot;&gt;도시락 상자를&lt;/a&gt; 권장합니다 . Bento 박스는 &lt;a href=&quot;https://github.com/chef/bento&quot;&gt;오픈 소스&lt;/a&gt; 이며 VMware, Virtualbox 및 Parallels를 포함한 여러 공급 업체를 위해 구축되었습니다. 사용 가능한 다양한 운영 체제 및 버전이 있습니다.</target>
        </trans-unit>
        <trans-unit id="33c101f2a133e6aacbd2d43f58c2e03d62002108" translate="yes" xml:space="preserve">
          <source>For performance reasons, especially for Windows users, Vagrant uses a static binary to launch the actual Vagrant process. If you have &lt;em&gt;very&lt;/em&gt; early issues when launching Vagrant from the official installer, you can specify the &lt;code&gt;VAGRANT_DEBUG_LAUNCHER&lt;/code&gt; environment variable to output debugging information about the launch process.</source>
          <target state="translated">성능상의 이유로, 특히 Windows 사용자의 경우 Vagrant는 정적 바이너리를 사용하여 실제 Vagrant 프로세스를 시작합니다. 당신이 가지고있는 경우에 &lt;em&gt;매우&lt;/em&gt; 공식 설치에서 방랑을 시작할 때 초기에 문제를, 당신은 지정할 수 있습니다 &lt;code&gt;VAGRANT_DEBUG_LAUNCHER&lt;/code&gt; 의 발사 과정에 대한 출력 디버깅 정보에 대한 환경 변수를.</target>
        </trans-unit>
        <trans-unit id="40650997a6f5c5f9f85d36d0bf6d939b8db42f86" translate="yes" xml:space="preserve">
          <source>For some operating systems, additional configuration options for the static IP address are available such as setting the default gateway or MTU.</source>
          <target state="translated">일부 운영 체제의 경우 기본 게이트웨이 또는 MTU 설정과 같은 고정 IP 주소에 대한 추가 구성 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bc292e2ed57f270725b79e5af6e321e2622d93c" translate="yes" xml:space="preserve">
          <source>For the most up-to-date information on compatibility and supported versions of VMware Fusion and VMware Workstation, please visit the &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;Vagrant VMware product page&lt;/a&gt;. Please note that VMware Fusion and VMware Workstation are third-party products that must be purchased and installed separately prior to using the provider.</source>
          <target state="translated">호환성 및 지원되는 VMware Fusion 및 VMware Workstation 버전에 대한 최신 정보는 &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;Vagrant VMware 제품 페이지&lt;/a&gt; 를 방문 하십시오 . VMware Fusion 및 VMware Workstation은 공급 업체를 사용하기 전에 별도로 구입하여 설치해야하는 타사 제품입니다.</target>
        </trans-unit>
        <trans-unit id="998e3bd0abb6aba2b2282c7369872511e1a4685b" translate="yes" xml:space="preserve">
          <source>For this reason, it is recommended that you name the VM the same as the container. In the above example, it is unambiguous that the command to enter the Consul container is:</source>
          <target state="translated">이러한 이유로 VM과 컨테이너의 이름을 동일하게 지정하는 것이 좋습니다. 위의 예에서 Consul 컨테이너에 들어가는 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9217747c544ad4b1f8b2c03a9031ed232cac8d97" translate="yes" xml:space="preserve">
          <source>Force Paramiko Connection Mode</source>
          <target state="translated">강제 Paramiko 연결 모드</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="61524dc3add5e190355c7e3ac97f46fdba788bd3" translate="yes" xml:space="preserve">
          <source>Forwarded Port Protocols</source>
          <target state="translated">전달 된 포트 프로토콜</target>
        </trans-unit>
        <trans-unit id="5b1183527b2cbf006e04f3b4a5fdea5545e971ea" translate="yes" xml:space="preserve">
          <source>Forwarded Ports</source>
          <target state="translated">전달 된 포트</target>
        </trans-unit>
        <trans-unit id="21fd16d3ef51fb14e55e674a0b5654f622800a6c" translate="yes" xml:space="preserve">
          <source>Forwarded Ports Failing in Workstation on Windows</source>
          <target state="translated">Windows의 워크 스테이션에서 전달 된 포트가 실패 함</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">자주 묻는 질문</target>
        </trans-unit>
        <trans-unit id="a60b77c4946bd6e06a06539d2af6fa246527eb8f" translate="yes" xml:space="preserve">
          <source>Full Alphabetical List of Configuration Options</source>
          <target state="translated">전체 알파벳순 구성 옵션 목록</target>
        </trans-unit>
        <trans-unit id="4aff130167b88cc1cd23d8b36617957155bb7636" translate="yes" xml:space="preserve">
          <source>GUI vs. Headless</source>
          <target state="translated">GUI 대 헤드리스</target>
        </trans-unit>
        <trans-unit id="ae1134a1238a8f514bb3a285d917ed793be53a78" translate="yes" xml:space="preserve">
          <source>General settings:</source>
          <target state="translated">일반 설정:</target>
        </trans-unit>
        <trans-unit id="788a5f93113ee2001e6c21cb22dbf10f89a0f7a2" translate="yes" xml:space="preserve">
          <source>Global Status</source>
          <target state="translated">글로벌 상태</target>
        </trans-unit>
        <trans-unit id="c78cd7690049921889017e85d8047c6029312a7f" translate="yes" xml:space="preserve">
          <source>Global and machine-scoped triggers will execute in the order that they are defined within a Vagrantfile. Take for example an abstracted Vagrantfile:</source>
          <target state="translated">글로벌 및 머신 범위 트리거는 Vagrantfile 내에 정의 된 순서대로 실행됩니다. 추상 Vagrantfile을 예로 들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="d8c0e366bc2b83e7e48cfded57aae49e67174e71" translate="yes" xml:space="preserve">
          <source>Groups and Group Variables</source>
          <target state="translated">그룹과 그룹 변수</target>
        </trans-unit>
        <trans-unit id="adc5bd35c61a6402bba9c7f92c54bfa9d7c9bb28" translate="yes" xml:space="preserve">
          <source>Guest Inheritance</source>
          <target state="translated">손님 상속</target>
        </trans-unit>
        <trans-unit id="9adb724c3b2a8123ff5b50d5b8a468fca68472df" translate="yes" xml:space="preserve">
          <source>Guest capabilities are defined by calling the &lt;code&gt;guest_capability&lt;/code&gt; method, which takes two parameters: the guest to add the capability to, and the name of the capability itself. Then, the block argument returns a class that implements a method named the same as the capability. This is covered in more detail in the next section.</source>
          <target state="translated">게스트 기능은 &lt;code&gt;guest_capability&lt;/code&gt; 메서드 를 호출하여 정의됩니다.이 메서드는 두 가지 매개 변수, 즉 기능을 추가 할 게스트와 기능 자체의 이름을 갖 습니다. 그런 다음 block 인수는 기능과 같은 이름의 메서드를 구현하는 클래스를 반환합니다. 이에 대해서는 다음 섹션에서 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f73121f785476d31776fbb8ddee3a209f125029e" translate="yes" xml:space="preserve">
          <source>Guest capabilities augment &lt;a href=&quot;guests&quot;&gt;guests&lt;/a&gt; by attaching specific &quot;capabilities&quot; to the guest, which are actions that can be performed in the context of that guest operating system.</source>
          <target state="translated">게스트 기능은 &lt;a href=&quot;guests&quot;&gt;게스트&lt;/a&gt; 에 특정 &quot;기능&quot;을 첨부하여 게스트를 확장합니다.이 기능은 해당 게스트 운영 체제와 관련하여 수행 할 수있는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="3c23a67045a35d8dc1bd02b5088b1f1470636e89" translate="yes" xml:space="preserve">
          <source>Guests</source>
          <target state="translated">Guests</target>
        </trans-unit>
        <trans-unit id="374fe18f37b399c233bb03490dbb7475be1fd015" translate="yes" xml:space="preserve">
          <source>Guests are defined with the &lt;code&gt;guest&lt;/code&gt; method. The first argument is the name of the guest. This name is not actually used anywhere, but may in the future, so choose something helpful. Then, the block argument returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :guest)&lt;/code&gt; interface.</source>
          <target state="translated">손님은 &lt;code&gt;guest&lt;/code&gt; 방법 으로 정의됩니다 . 첫 번째 인수는 손님의 이름입니다. 이 이름은 실제로 어느 곳에서나 사용되지는 않지만 향후에는 도움이 될만한 것을 선택하십시오. 그런 다음 block 인수는 &lt;code&gt;Vagrant.plugin(2, :guest)&lt;/code&gt; 인터페이스 를 구현하는 클래스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="96b99ffdc2b4e748b53e1b4ee6d781d2bfa446ff" translate="yes" xml:space="preserve">
          <source>HTTP Sharing</source>
          <target state="translated">HTTP 공유</target>
        </trans-unit>
        <trans-unit id="245a6e1230efe3955828879fb337c2c0aa418279" translate="yes" xml:space="preserve">
          <source>HTTPS (SSL)</source>
          <target state="translated">HTTPS (SSL)</target>
        </trans-unit>
        <trans-unit id="cbc6ab8d850f8cff446447123804da23a703c293" translate="yes" xml:space="preserve">
          <source>Halt</source>
          <target state="translated">Halt</target>
        </trans-unit>
        <trans-unit id="01b127ca1ff00d6255a16df2ab1cbe2d604b6d8d" translate="yes" xml:space="preserve">
          <source>Hanging on Windows</source>
          <target state="translated">Windows에 매달려</target>
        </trans-unit>
        <trans-unit id="31fadc501c57a28d10bf14f5575243c5bceb9d01" translate="yes" xml:space="preserve">
          <source>Hashes, arrays, etc. can be used with the JSON configuration object. Basically, anything that can be turned cleanly into JSON works.</source>
          <target state="translated">해시, 배열 등을 JSON 구성 객체와 함께 사용할 수 있습니다. 기본적으로 JSON으로 깔끔하게 전환 할 수있는 모든 것이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a13a70312abd01a9b76851995036f7d656aba1a3" translate="yes" xml:space="preserve">
          <source>HashiCorp (the makers of Vagrant) publish a basic Ubuntu 12.04 (32 and 64-bit) box that is available for minimal use cases. It is highly optimized, small in size, and includes support for Virtualbox and VMware. You can use it like this:</source>
          <target state="translated">HashiCorp (Vagrant 제조업체)는 최소한의 사용 사례에 사용할 수있는 기본 Ubuntu 12.04 (32 비트 및 64 비트) 상자를 게시합니다. 매우 최적화되고 크기가 작으며 Virtualbox 및 VMware에 대한 지원을 포함합니다. 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4ccba1dbe5e9ee0246aed13df0aab2394e40e78" translate="yes" xml:space="preserve">
          <source>Heroku Strategy</source>
          <target state="translated">헤 로쿠 전략</target>
        </trans-unit>
        <trans-unit id="05b572a7fd6ab31b9adf660bb35a79ba11eb48a7" translate="yes" xml:space="preserve">
          <source>Historically, running complex environments such as these was done by flattening them onto a single machine. The problem with that is that it is an inaccurate model of the production setup, which can behave far differently.</source>
          <target state="translated">과거에는 이와 같은 복잡한 환경을 단일 시스템으로 병합하여 수행했습니다. 이것의 문제점은 그것이 매우 다르게 작동 할 수있는 생산 설정의 부정확 한 모델이라는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c9372860d943bbb17b7c97a937f2f258c8b06d35" translate="yes" xml:space="preserve">
          <source>Host Inheritance</source>
          <target state="translated">호스트 상속</target>
        </trans-unit>
        <trans-unit id="f6ce4018790fb617783af2d8c31e0715e6f7fa93" translate="yes" xml:space="preserve">
          <source>Host VM</source>
          <target state="translated">호스트 VM</target>
        </trans-unit>
        <trans-unit id="b5df0240465cba3d65b01d234240d25b74afcabb" translate="yes" xml:space="preserve">
          <source>Host Variables</source>
          <target state="translated">호스트 변수</target>
        </trans-unit>
        <trans-unit id="176478691693194ee564cfc6f95af16ced87d943" translate="yes" xml:space="preserve">
          <source>Host capabilities augment &lt;a href=&quot;hosts&quot;&gt;hosts&lt;/a&gt; by attaching specific &quot;capabilities&quot; to the host, which are actions that can be performed in the context of that host operating system.</source>
          <target state="translated">호스트 기능은 특정 &quot;기능&quot;을 &lt;a href=&quot;hosts&quot;&gt;호스트&lt;/a&gt; 에 연결하여 호스트 를 확장 합니다. 이 기능은 해당 호스트 운영 체제와 관련하여 수행 할 수있는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="166b485729566abb7b8e7e3770f65b1be133662c" translate="yes" xml:space="preserve">
          <source>Hosts are defined with the &lt;code&gt;host&lt;/code&gt; method. The first argument is the name of the host. This name is not actually used anywhere, but may in the future, so choose something helpful. Then, the block argument returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :host)&lt;/code&gt; interface.</source>
          <target state="translated">호스트는 &lt;code&gt;host&lt;/code&gt; 방법 으로 정의됩니다 . 첫 번째 인수는 호스트 이름입니다. 이 이름은 실제로 어느 곳에서나 사용되지는 않지만 향후에는 도움이 될만한 것을 선택하십시오. 그런 다음 block 인수는 &lt;code&gt;Vagrant.plugin(2, :host)&lt;/code&gt; 인터페이스 를 구현하는 클래스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="c7770825d259e8799b46436fdca91c978212c900" translate="yes" xml:space="preserve">
          <source>However, the IP address of the machine will be reported as part of the &lt;code&gt;vagrant up&lt;/code&gt;, and you can use that IP address as if it were a host only network.</source>
          <target state="translated">그러나 시스템의 IP 주소는 &lt;code&gt;vagrant up&lt;/code&gt; 의 일부로보고되며 해당 IP 주소를 마치 호스트 전용 네트워크 인 것처럼 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab6646c0a72b529e3a336bf030c5b7b24d8202fd" translate="yes" xml:space="preserve">
          <source>However, you may find after using Vagrant for some time that you prefer to use another provider as your default. In fact, this is quite common. To make this experience better, Vagrant allows specifying the default provider to use by setting the &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; environmental variable.</source>
          <target state="translated">그러나 Vagrant를 얼마 동안 사용한 후에는 다른 제공자를 기본값으로 사용하는 것을 선호 할 수 있습니다. 실제로 이것은 매우 일반적입니다. 이 환경을 개선하기 위해 Vagrant는 &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 환경 변수를 설정하여 사용할 기본 공급자를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="381220d6064e1fa85c0783726b20510ec6c718a9" translate="yes" xml:space="preserve">
          <source>Human-readable description of the state of the machine. This is the long version, and may be a paragraph or longer. targeted</source>
          <target state="translated">기계 상태에 대한 사람이 읽을 수있는 설명. 이것은 긴 버전이며 단락 이상일 수 있습니다. 타겟팅 된</target>
        </trans-unit>
        <trans-unit id="65b465dc76b5c0254e49d755871fb1b8208de016" translate="yes" xml:space="preserve">
          <source>Human-readable description of the state of the machine. This is the short version, limited to at most a sentence. targeted</source>
          <target state="translated">기계 상태에 대한 사람이 읽을 수있는 설명. 이것은 짧은 문장이며, 한 문장으로 제한됩니다. 타겟팅 된</target>
        </trans-unit>
        <trans-unit id="04ae3c2fb8a961f98300d10dba1021351741e77c" translate="yes" xml:space="preserve">
          <source>Hyper-V</source>
          <target state="translated">Hyper-V</target>
        </trans-unit>
        <trans-unit id="afba8dc3213629f66974f05d8f816322b11cc035" translate="yes" xml:space="preserve">
          <source>Hyper-V Base Boxes</source>
          <target state="translated">Hyper-V베이스 박스</target>
        </trans-unit>
        <trans-unit id="e63d032317365b2bd6225748ba37e29672ab5a89" translate="yes" xml:space="preserve">
          <source>Hyper-V Kernel Modules</source>
          <target state="translated">Hyper-V 커널 모듈</target>
        </trans-unit>
        <trans-unit id="860164fc7855ebf94efa9b1d80ebe1a6ea27a29f" translate="yes" xml:space="preserve">
          <source>Hyper-V also requires that you execute Vagrant with administrative privileges. Creating and managing virtual machines with Hyper-V requires admin rights. Vagrant will show you an error if it does not have the proper permissions.</source>
          <target state="translated">Hyper-V에서는 또한 관리자 권한으로 Vagrant를 실행해야합니다. Hyper-V를 사용하여 가상 머신을 생성하고 관리하려면 관리자 권한이 필요합니다. Vagrant는 적절한 권한이 없으면 오류를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0109a9ad16838d3a0127fe04ecd43c35cf04a198" translate="yes" xml:space="preserve">
          <source>Hyper-V must be enabled prior to using the provider. Most Windows installations will not have Hyper-V enabled by default. Hyper-V is available by default for almost all Windows Enterprise, Professional, or Education 8.1 and later installs. To enable Hyper-V, go to &quot;Programs and Features&quot;, click on &quot;Turn Windows features on or off&quot; and check the box next to &quot;Hyper-V&quot;. Or install via PowerShell with:</source>
          <target state="translated">공급자를 사용하기 전에 Hyper-V를 활성화해야합니다. 대부분의 Windows 설치에는 기본적으로 Hyper-V가 활성화되어 있지 않습니다. Hyper-V는 기본적으로 거의 모든 Windows Enterprise, Professional 또는 Education 8.1 이상 설치에 사용할 수 있습니다. Hyper-V를 활성화하려면 &quot;프로그램 및 기능&quot;으로 이동하여 &quot;Windows 기능 켜기 또는 끄기&quot;를 클릭하고 &quot;Hyper-V&quot;옆의 확인란을 선택하십시오. 또는 다음을 사용하여 PowerShell을 통해 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="1f76f0baf43aa985f8f1ac7f8110553318cfa98b" translate="yes" xml:space="preserve">
          <source>I understand that if you are not familiar with Ruby, the above may seem very advanced or foreign. But do not fear, what it is doing is quite simple: the script is assigned to a global variable &lt;code&gt;$script&lt;/code&gt;. This global variable contains a string which is then passed in as the inline script to the Vagrant configuration.</source>
          <target state="translated">Ruby에 익숙하지 않다면 위의 내용이 매우 고급이거나 외국인 것 같습니다. 그러나 두려워하지 마십시오. 스크립트는 전역 변수 &lt;code&gt;$script&lt;/code&gt; 할당됩니다 . 이 전역 변수에는 문자열이 포함되어 있으며 인라인 스크립트로 Vagrant 구성에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="76b87a32829da0e088c31c0164cdf7f5b10ecba9" translate="yes" xml:space="preserve">
          <source>IPv6</source>
          <target state="translated">IPv6</target>
        </trans-unit>
        <trans-unit id="fee1c93a312ceb8f17150ac426b3bf23c9f94d48" translate="yes" xml:space="preserve">
          <source>IPv6 supports for private networks was added in Vagrant 1.7.5 and may not work with every provider.</source>
          <target state="translated">개인 네트워크에 대한 IPv6 지원은 Vagrant 1.7.5에 추가되었으며 모든 제공 업체에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a74cf2a7ed34d8224de473217436254b6ce9ae17" translate="yes" xml:space="preserve">
          <source>If DNS is not working within your VM, then you may need to enable a DNS proxy (built-in to VirtualBox). Please &lt;a href=&quot;https://serverfault.com/questions/453185/vagrant-virtualbox-dns-10-0-2-3-not-working&quot;&gt;see the StackOverflow answers here&lt;/a&gt; for a guide on how to do that.</source>
          <target state="translated">VM 내에서 DNS가 작동하지 않으면 DNS 프록시 (VirtualBox에 내장)를 활성화해야합니다. 제발 &lt;a href=&quot;https://serverfault.com/questions/453185/vagrant-virtualbox-dns-10-0-2-3-not-working&quot;&gt;여기에 StackOverflow의 답변을 참조&lt;/a&gt; 하는 작업을 수행하는 방법에 대한 안내를 위해.</target>
        </trans-unit>
        <trans-unit id="0db013d323640b123a82929bba97356112cb928a" translate="yes" xml:space="preserve">
          <source>If Vagrant commands are hanging on Windows because they're communicating to VirtualBox, this may be caused by a permissions issue with VirtualBox. This is easy to fix. Starting VirtualBox as a normal user or as an administrator will prevent you from using it in the opposite way. Please keep in mind that when Vagrant interacts with VirtualBox, it will interact with it with the same access level as the console running Vagrant.</source>
          <target state="translated">Vagrant 명령이 VirtualBox와 통신하기 때문에 Windows에 걸려 있으면 VirtualBox의 권한 문제로 인해 발생할 수 있습니다. 이것은 쉽게 고칠 수 있습니다. VirtualBox를 일반 사용자 또는 관리자로 시작하면 반대 방향으로 사용할 수 없습니다. Vagrant는 VirtualBox와 상호 작용할 때 Vagrant를 실행하는 콘솔과 동일한 액세스 수준으로 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="1f93c7aa65004f5ce66b9a5367aa70ae1505a8da" translate="yes" xml:space="preserve">
          <source>If Vagrant detects it is running outside of the officially installer, the original environment will always be restored. You can disable this automatic jailbreak by setting &lt;code&gt;VAGRANT_SKIP_SUBPROCESS_JAILBREAK&lt;/code&gt;.</source>
          <target state="translated">Vagrant가 공식 설치 프로그램 외부에서 실행 중임을 감지하면 원래 환경이 항상 복원됩니다. &lt;code&gt;VAGRANT_SKIP_SUBPROCESS_JAILBREAK&lt;/code&gt; 를 설정 하여이 자동 탈옥을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad1881fb6ed6d4cb301d335cb2b0e64af21fc3a6" translate="yes" xml:space="preserve">
          <source>If Vagrant has trouble detecting the port of your servers in your environment, use the &lt;code&gt;--http&lt;/code&gt; and/or &lt;code&gt;--https&lt;/code&gt; flags to be more explicit.</source>
          <target state="translated">Vagrant가 사용자 환경에서 서버 포트를 감지하는 데 문제가있는 경우 &lt;code&gt;--http&lt;/code&gt; 및 / 또는 &lt;code&gt;--https&lt;/code&gt; 플래그를 사용하여보다 명확하게하십시오.</target>
        </trans-unit>
        <trans-unit id="122de160a898d9f722c4f17e7d4271b34be84c2e" translate="yes" xml:space="preserve">
          <source>If Vagrant still has not found any usable providers, it will error.</source>
          <target state="translated">Vagrant가 여전히 사용 가능한 공급자를 찾지 못하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ca6dee1c7213479347b55c4a7731b047a8deb3c0" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;--&lt;/code&gt; (two hyphens) are found on the command line, any arguments after this are passed directly into the &lt;code&gt;ssh&lt;/code&gt; executable. This allows you to pass any arbitrary commands to do things such as reverse tunneling down into the &lt;code&gt;ssh&lt;/code&gt; program.</source>
          <target state="translated">경우 &lt;code&gt;--&lt;/code&gt; (두 개의 하이픈이) 명령 행에서 찾을 수 있습니다,이 후 인수는 직접 전달되는 &lt;code&gt;ssh&lt;/code&gt; 를 실행. 이를 통해 임의의 명령을 전달하여 역방향 터널링과 같은 작업을 &lt;code&gt;ssh&lt;/code&gt; 프로그램 으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8f6f1d681fffa08644ab36c1f332f048044e360" translate="yes" xml:space="preserve">
          <source>If a Vagrant project directory is not within the user's home directory on the Windows system, certain actions that include permission checks may fail (like &lt;code&gt;vagrant ssh&lt;/code&gt;). When accessing Vagrant projects outside the WSL Vagrant will skip these permission checks when the project path is within the path defined in the &lt;code&gt;VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH&lt;/code&gt; environment variable. For example, if a user wants to run a Vagrant project from the WSL that is located at &lt;code&gt;C:\TestDir\vagrant-project&lt;/code&gt;:</source>
          <target state="translated">Vagrant 프로젝트 디렉토리가 Windows 시스템에서 사용자의 홈 디렉토리 내에 없으면 권한 점검을 포함한 특정 조치 ( &lt;code&gt;vagrant ssh&lt;/code&gt; 등 ) 가 실패 할 수 있습니다 . WSL 외부의 Vagrant 프로젝트에 액세스 할 때 Vagrant는 프로젝트 경로가 &lt;code&gt;VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH&lt;/code&gt; 환경 변수에 정의 된 경로 내에있을 때 이러한 권한 검사를 건너 뜁니다 . 예를 들어, 사용자가 &lt;code&gt;C:\TestDir\vagrant-project&lt;/code&gt; 에있는 WSL에서 Vagrant 프로젝트를 실행하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="0b464b443196b9abf7dc6290cf0843e4b82a7381" translate="yes" xml:space="preserve">
          <source>If a box has multiple providers, the exact provider must be specified with the &lt;code&gt;--provider&lt;/code&gt; flag. If a box has multiple versions, you can select what versions to delete with the &lt;code&gt;--box-version&lt;/code&gt; flag or remove all versions with the &lt;code&gt;--all&lt;/code&gt; flag.</source>
          <target state="translated">상자에 여러 공급자가있는 경우 &lt;code&gt;--provider&lt;/code&gt; 플래그를 사용하여 정확한 공급자를 지정해야합니다 . 박스에 여러 버전이있는 경우 &lt;code&gt;--box-version&lt;/code&gt; 플래그 로 삭제할 버전을 선택 하거나 &lt;code&gt;--all&lt;/code&gt; 플래그로 모든 버전을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a73ee12eedd4ebefe3b886ab2bf33c4085f604ea" translate="yes" xml:space="preserve">
          <source>If a first argument is given, it will prepopulate the &lt;code&gt;config.vm.box&lt;/code&gt; setting in the created Vagrantfile.</source>
          <target state="translated">첫 번째 인수가 제공되면 생성 된 Vagrant 파일 의 &lt;code&gt;config.vm.box&lt;/code&gt; 설정 이 미리 채워 집니다.</target>
        </trans-unit>
        <trans-unit id="eccb4d64ee2f9383eb7720b0dc5b1370641a039c" translate="yes" xml:space="preserve">
          <source>If a name is specified, only that single plugin will be updated. If a name is specified of a plugin that is not installed, this command will not install it.</source>
          <target state="translated">이름을 지정하면 해당 단일 플러그인 만 업데이트됩니다. 설치되지 않은 플러그인의 이름을 지정하면이 명령으로 설치되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5307745ffbab3b3943453157bf1f89fc147d6583" translate="yes" xml:space="preserve">
          <source>If a second argument is given, it will prepopulate the &lt;code&gt;config.vm.box_url&lt;/code&gt; setting in the created Vagrantfile.</source>
          <target state="translated">두 번째 인수가 제공되면 생성 된 Vagrantfile 의 &lt;code&gt;config.vm.box_url&lt;/code&gt; 설정 이 미리 채워 집니다.</target>
        </trans-unit>
        <trans-unit id="29eb6875d530a2f1235c2e36583e66a52fd58644" translate="yes" xml:space="preserve">
          <source>If an error occurs during the download or the download is interrupted with a Ctrl-C, then Vagrant will attempt to resume the download the next time it is requested. Vagrant will only attempt to resume a download for 24 hours after the initial download.</source>
          <target state="translated">다운로드 중 오류가 발생하거나 다운로드가 Ctrl-C로 중단되면 Vagrant는 다음에 요청 될 때 다운로드를 다시 시작하려고 시도합니다. Vagrant는 처음 다운로드 한 후 24 시간 동안 만 다운로드를 다시 시도합니다.</target>
        </trans-unit>
        <trans-unit id="a2054b7329ffbc30005c54924b9b893cb59fce2c" translate="yes" xml:space="preserve">
          <source>If an update is found, Vagrant will output a warning to the user letting them know an update is available. That user can choose to ignore the warning for now, or can update the box by running &lt;code&gt;vagrant box update&lt;/code&gt;.</source>
          <target state="translated">업데이트가 발견되면 Vagrant는 사용자에게 업데이트가 있음을 알리는 경고를 출력합니다. 해당 사용자는 현재 경고를 무시하거나 &lt;code&gt;vagrant box update&lt;/code&gt; 를 실행하여 상자를 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b4d0e28b595fffae81327617e3c8f5c98f8a2ba" translate="yes" xml:space="preserve">
          <source>If as part of running your Vagrant environment with VMware, you perform a kernel upgrade, it is likely that the VMware guest tools will stop working. This breaks features of Vagrant such as synced folders and sometimes networking as well.</source>
          <target state="translated">VMware에서 Vagrant 환경을 실행하는 과정에서 커널 업그레이드를 수행하면 VMware 게스트 도구가 작동하지 않을 수 있습니다. 동기화 된 폴더 및 때로는 네트워킹과 같은 Vagrant의 기능이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="0c1cdfc18b872acd64321d771e32f8156582cb6e" translate="yes" xml:space="preserve">
          <source>If automatic repair is not successful, refer to the &lt;a href=&quot;#plugin-expunge&quot;&gt;expunge&lt;/a&gt; command</source>
          <target state="translated">자동 복구에 실패하면 &lt;a href=&quot;#plugin-expunge&quot;&gt;expunge&lt;/a&gt; 명령을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="86c0266785e589c27dcc2919fd2fd7d047455c5a" translate="yes" xml:space="preserve">
          <source>If during mounting on Linux you are seeing an error message that includes the words &quot;wrong fs type,&quot; this is because the SMB kernel extension needs to be updated in the OS.</source>
          <target state="translated">Linux에 마운트하는 동안 &quot;wfs 유형이 잘못되었습니다&quot;라는 오류 메시지가 표시되면 OS에서 SMB 커널 확장을 업데이트해야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="ba648597ef5ddf0ddfeed151e865671f9a5358da" translate="yes" xml:space="preserve">
          <source>If installing Ansible directly on the Vagrant host is not an option in your development environment, you might be looking for the &lt;a href=&quot;ansible_local&quot;&gt;Ansible Local provisioner&lt;/a&gt; alternative.</source>
          <target state="translated">Vagrant 호스트에 Ansible을 직접 설치하는 것이 개발 환경의 옵션이 아닌 경우 &lt;a href=&quot;ansible_local&quot;&gt;Ansible Local provisioner&lt;/a&gt; 대안을 찾고있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="308faa1f95ea1b20b691d4c83a84a4df44cac07d" translate="yes" xml:space="preserve">
          <source>If more than one network interface is available on the host machine, Vagrant will ask you to choose which interface the virtual machine should bridge to. A default interface can be specified by adding a &lt;code&gt;:bridge&lt;/code&gt; clause to the network definition.</source>
          <target state="translated">호스트 시스템에서 둘 이상의 네트워크 인터페이스를 사용할 수있는 경우 Vagrant는 가상 시스템을 브리지 할 인터페이스를 선택하라는 메시지를 표시합니다. 네트워크 정의에 &lt;code&gt;:bridge&lt;/code&gt; 절을 추가하여 기본 인터페이스를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90dc25e3ca23122cdd95bb7d6f0ee330a0d09322" translate="yes" xml:space="preserve">
          <source>If multiple names are specified, multiple plugins will be installed. If flags are given below, the flags will apply to &lt;em&gt;all&lt;/em&gt; plugins being installed by the current command invocation.</source>
          <target state="translated">여러 개의 이름을 지정하면 여러 개의 플러그인이 설치됩니다. 플래그가 아래에 주어지면, 플래그는 현재 명령 호출에 의해 설치되는 &lt;em&gt;모든&lt;/em&gt; 플러그인에 적용 됩니다.</target>
        </trans-unit>
        <trans-unit id="76680bb384445bb03c0fffff2f47922f27bb46d5" translate="yes" xml:space="preserve">
          <source>If multiple plugins are given, multiple plugins will be uninstalled.</source>
          <target state="translated">여러 개의 플러그인이 제공되면 여러 개의 플러그인이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="8e5051617bd0bf86a2cf6c0aa0b5b5ae690f0101" translate="yes" xml:space="preserve">
          <source>If multiple plugins are required, they can be provided as an array:</source>
          <target state="translated">여러 개의 플러그인이 필요한 경우 배열로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8567de2663ebda7b64a2f1f23e9d6f6b788d2c92" translate="yes" xml:space="preserve">
          <source>If only &lt;code&gt;environment&lt;/code&gt; and &lt;code&gt;environment_path&lt;/code&gt; are specified, it will parse and use the manifest specified in the &lt;code&gt;environment.conf&lt;/code&gt; file. If &lt;code&gt;manifests_path&lt;/code&gt; and &lt;code&gt;manifest_file&lt;/code&gt; is specified along with the environment options, the manifest from the environment will be overridden by the specified &lt;code&gt;manifest_file&lt;/code&gt;. If &lt;code&gt;manifests_path&lt;/code&gt; and &lt;code&gt;manifest_file&lt;/code&gt; are specified without environments, the old non-environment mode will be used (which will fail on Puppet 4+).</source>
          <target state="translated">경우에만 &lt;code&gt;environment&lt;/code&gt; 및 &lt;code&gt;environment_path&lt;/code&gt; 가 지정되어, 그것은 구문 분석하고 지정된 매니페스트 사용 &lt;code&gt;environment.conf&lt;/code&gt; 의 파일을. 경우 &lt;code&gt;manifests_path&lt;/code&gt; 및 &lt;code&gt;manifest_file&lt;/code&gt; 가 환경 옵션과 함께 지정, 환경에서 매니페스트는 지정된 오버라이드 (override) 할 것이다 &lt;code&gt;manifest_file&lt;/code&gt; . 경우 &lt;code&gt;manifests_path&lt;/code&gt; 및 &lt;code&gt;manifest_file&lt;/code&gt; 이 환경없이 지정되어, 기존의 비 환경 모드 (4 + 인형에 실패하는)이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c69e4f21829cb0fdee3b10fa4be3706b672adb56" translate="yes" xml:space="preserve">
          <source>If required to copy to a destination where &lt;code&gt;vagrant&lt;/code&gt; user does not have permissions, use &lt;code&gt;&quot;--rsync-path='sudo rsync'&quot;&lt;/code&gt; to run rsync with sudo on the guest</source>
          <target state="translated">여기서 목적지로 복사하는 데 필요한 경우 &lt;code&gt;vagrant&lt;/code&gt; 사용자가 권한을 사용하지 않습니다 &lt;code&gt;&quot;--rsync-path='sudo rsync'&quot;&lt;/code&gt; 게스트에와 sudo rsync를 실행</target>
        </trans-unit>
        <trans-unit id="ecd82713964490534467ec1583efe73511d21d5e" translate="yes" xml:space="preserve">
          <source>If set, this will disable the ability to create symlinks with all virtualbox shared folders. Defaults to true if the option is not set. This can be overridden on a per-folder basis within your Vagrantfile config by settings the &lt;code&gt;SharedFoldersEnableSymlinksCreate&lt;/code&gt; option to true.</source>
          <target state="translated">설정하면 모든 virtualbox 공유 폴더와의 심볼릭 링크를 만드는 기능이 비활성화됩니다. 옵션이 설정되지 않은 경우 기본값은 true입니다. 이것은 &lt;code&gt;SharedFoldersEnableSymlinksCreate&lt;/code&gt; 옵션을 true 로 설정하여 Vagrantfile 구성 내에서 폴더별로 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b749f60fc355dbbf00b3bb86f913c756dab3081" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; environmental variable is set, it takes next priority and will be the provider chosen.</source>
          <target state="translated">는 IF &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 환경 변수가 설정되고, 그 다음에 우선하고 공급자가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="4125fe6898ea632de261da636ac9cb964f1ef42e" translate="yes" xml:space="preserve">
          <source>If the Vagrant environment or box you are using is protected with the Vagrant insecure keypair (most public boxes are), then SSH will be easily available to anyone who connects.</source>
          <target state="translated">사용중인 Vagrant 환경 또는 상자가 Vagrant의 안전하지 않은 키 쌍 (대부분의 공용 상자)으로 보호되는 경우 연결하는 모든 사람이 SSH를 쉽게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="843dca7d48c67917f7aba0a5990dc14f57e70968" translate="yes" xml:space="preserve">
          <source>If the command succeeds, then the guest additions are now installed!</source>
          <target state="translated">명령이 성공하면 게스트 추가가 설치됩니다!</target>
        </trans-unit>
        <trans-unit id="999386d5991d7ba4588663f50aaaf611c925dc1b" translate="yes" xml:space="preserve">
          <source>If the command you specify runs in the background (such as appending a &lt;code&gt;&amp;amp;&lt;/code&gt; to a shell command), it will be terminated almost immediately. This is because when Vagrant executes the command, it executes it within the context of a shell, and when the shell exits, all of the child processes also exit.</source>
          <target state="translated">지정한 명령이 백그라운드에서 실행되는 경우 (예 : &lt;code&gt;&amp;amp;&lt;/code&gt; 를 쉘 명령에 추가) 거의 즉시 종료됩니다. 이는 Vagrant가 명령을 실행할 때 쉘 컨텍스트 내에서 명령을 실행하고 쉘이 종료되면 모든 하위 프로세스도 종료되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="72207a21fb2db18d418182dc0633d25a4c27cba7" translate="yes" xml:space="preserve">
          <source>If the commands succeed, then the guest additions are now installed!</source>
          <target state="translated">명령이 성공하면 게스트 추가가 설치됩니다!</target>
        </trans-unit>
        <trans-unit id="84a7f54894cb42b818b75b40cdee36ad7c2e3f26" translate="yes" xml:space="preserve">
          <source>If the license is not installed correctly, you will see an error message.</source>
          <target state="translated">라이센스가 올바르게 설치되지 않으면 오류 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="8a9c15b32a58e88dc247e9b45e9bced12d64e4e5" translate="yes" xml:space="preserve">
          <source>If the newly created box does not depend on Vagrant's existing behavior of modifying this setting, it can disable Vagrant from applying the modification by adding a Vagrantfile to the box with the following content:</source>
          <target state="translated">새로 만든 상자가이 설정을 수정하는 Vagrant의 기존 동작에 의존하지 않으면 다음 내용이 포함 된 상자에 Vagrant 파일을 추가하여 Vagrant가 수정 사항을 적용하지 못하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06283395ecb7f714173e897024e28e928957db7c" translate="yes" xml:space="preserve">
          <source>If the plugin is already installed, this command will reinstall it with the latest version available.</source>
          <target state="translated">플러그인이 이미 설치되어 있으면이 명령은 사용 가능한 최신 버전으로 다시 설치합니다.</target>
        </trans-unit>
        <trans-unit id="e5950363a388bd24dfcc93de29b2d9856d9c91f2" translate="yes" xml:space="preserve">
          <source>If the private key is encrypted (the default behavior), then the connecting person will be prompted for the password to decrypt the private key.</source>
          <target state="translated">개인 키가 암호화 된 경우 (기본 동작) 연결하는 사람에게 개인 키를 해독하기위한 암호를 묻는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6e466711d9d571805b58bca081cae0e93c3a5d0d" translate="yes" xml:space="preserve">
          <source>If the system cannot run Linux containers natively, Vagrant automatically spins up a &quot;host VM&quot; to run Docker. This allows your Docker-based Vagrant environments to remain portable, without inconsistencies depending on the platform they are running on.</source>
          <target state="translated">시스템이 Linux 컨테이너를 기본적으로 실행할 수없는 경우 Vagrant는 자동으로 &quot;호스트 VM&quot;을 가동하여 Docker를 실행합니다. 이를 통해 Docker 기반 Vagrant 환경은 실행중인 플랫폼에 따라 불일치하지 않고 이식 가능한 상태를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0ad0e6a31b0ad0c8e15f2e174a79977c07bb64b" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;metadata.json&lt;/code&gt; file or the file does not contain valid JSON with at least a &quot;provider&quot; key, then Vagrant will error when adding the box, because it cannot verify the provider.</source>
          <target state="translated">거기에 더없는 경우 &lt;code&gt;metadata.json&lt;/code&gt; 의 파일이나 파일이 적어도 &quot;공급자&quot;키 유효 JSON을 포함하지 않는 상자를 추가 할 때 공급자를 확인할 수 없기 때문에, 다음 방랑은 오류가됩니다.</target>
        </trans-unit>
        <trans-unit id="008d7b58402744c3c8320adaff54903daf6d63c6" translate="yes" xml:space="preserve">
          <source>If there is no officially supported system package of the utility available, it may be possible to manually install utility. This applies to Linux platforms only. First, download the latest zip package from the releases page.</source>
          <target state="translated">공식적으로 지원되는 유틸리티의 시스템 패키지가없는 경우 수동으로 유틸리티를 설치할 수 있습니다. 이것은 Linux 플랫폼에만 적용됩니다. 먼저, 릴리스 페이지에서 최신 zip 패키지를 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="9e095030517daf7b7a34d8e19443d098b37c0f61" translate="yes" xml:space="preserve">
          <source>If this is set Vagrant will not stub the Vagrantfile when running &lt;code&gt;vagrant plugin&lt;/code&gt; commands. When this environment variable is set the &lt;code&gt;--local&lt;/code&gt; flag will not be required by &lt;code&gt;vagrant plugin&lt;/code&gt; commands to enable local project plugins.</source>
          <target state="translated">이것이 설정되면 Vagrant는 vagrant &lt;code&gt;vagrant plugin&lt;/code&gt; 명령을 실행할 때 Vagrantfile을 스텁하지 않습니다 . 이 환경 변수가 설정되면 로컬 프로젝트 플러그인을 활성화하기 위해 &lt;code&gt;vagrant plugin&lt;/code&gt; 명령에 &lt;code&gt;--local&lt;/code&gt; 플래그가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1d5b7d4b6772b77c369a46f51b95a62070c132b8" translate="yes" xml:space="preserve">
          <source>If this is set to any value, Vagrant will not prompt for confirmation prior to installing local plugins which have been defined within the local Vagrantfile.</source>
          <target state="translated">이 값을 설정하면 Vagrant는 로컬 Vagrantfile에 정의 된 로컬 플러그인을 설치하기 전에 확인 메시지를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1480992847750f92fb2a2b7707c112128793cba6" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will force colored output, even if it detected that there is no TTY or the current environment does not support it.</source>
          <target state="translated">이 값을 설정하면 Vagrant는 TTY가 없거나 현재 환경에서 지원하지 않는 경우에도 컬러 출력을 강제합니다.</target>
        </trans-unit>
        <trans-unit id="7f39829d05394c04b1ee15be9d74f13b1aee2f36" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will not error when a configured plugin source is unavailable. When installing a Vagrant plugin Vagrant will error and halt if a plugin source is inaccessible. In some cases it may be desirable to ignore inaccessible sources and continue with the plugin installation. Enabling this value will cause Vagrant to simply log the plugin source error and continue.</source>
          <target state="translated">이 값을 설정하면 구성된 플러그인 소스를 사용할 수 없을 때 Vagrant에서 오류가 발생하지 않습니다. Vagrant 플러그인을 설치할 때 플러그인 소스에 액세스 할 수 없으면 Vagrant는 오류가 발생하고 중지됩니다. 액세스 할 수없는 소스를 무시하고 플러그인 설치를 계속하는 것이 바람직한 경우도 있습니다. 이 값을 사용하면 Vagrant가 단순히 플러그인 소스 오류를 기록하고 계속합니다.</target>
        </trans-unit>
        <trans-unit id="68403fb9cfd2fc4cdb2592eb6c071952b9fa1340" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will not load any 3rd party plugins. This is useful if you install a plugin and it is introducing instability to Vagrant, or if you want a specific Vagrant environment to not load plugins.</source>
          <target state="translated">이 값을 설정하면 Vagrant는 타사 플러그인을로드하지 않습니다. 플러그인을 설치하고 Vagrant에 불안정성을 도입하거나 특정 Vagrant 환경에서 플러그인을로드하지 않으려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="75c60359056722c022b0cb9c74c092e43739a631" translate="yes" xml:space="preserve">
          <source>If this is set to any value, then Vagrant will not use any colorized output. This is useful if you are logging the output to a file or on a system that does not support colors.</source>
          <target state="translated">이 값을 설정하면 Vagrant는 색상이 지정된 출력을 사용하지 않습니다. 색상을 지원하지 않는 파일이나 시스템에 출력을 기록 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="60d988481ad5c80ddbe206b7e169e853444cd289" translate="yes" xml:space="preserve">
          <source>If this is set, Vagrant will &lt;em&gt;not&lt;/em&gt; wrap interactive processes with winpty where required.</source>
          <target state="translated">이것이 설정되면 Vagrant는 필요한 경우 대화식 프로세스를 winpty로 래핑 &lt;em&gt;하지&lt;/em&gt; 않습니다.</target>
        </trans-unit>
        <trans-unit id="532257eec275fbb5213287604c881682a92141f1" translate="yes" xml:space="preserve">
          <source>If this is set, Vagrant will not perform any parallel operations (such as parallel box provisioning). All operations will be performed in serial.</source>
          <target state="translated">이를 설정하면 Vagrant는 병렬 작업 (예 : 병렬 상자 프로비저닝)을 수행하지 않습니다. 모든 작업은 순차적으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="87a64cc39970e21f51a8c666ce17944341ac9625" translate="yes" xml:space="preserve">
          <source>If this is set, Vagrant will prefer using utility executables (like &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;rsync&lt;/code&gt;) from the local system instead of those vendored within the Vagrant installation.</source>
          <target state="translated">이것이 설정되면 Vagrant는 Vagrant 설치 내에서 공급 한 것 대신 로컬 시스템에서 유틸리티 실행 파일 ( &lt;code&gt;ssh&lt;/code&gt; 및 &lt;code&gt;rsync&lt;/code&gt; 등 )을 사용하는 것을 선호 합니다.</target>
        </trans-unit>
        <trans-unit id="3dfb5d4f83f5cb14ef752f46450bc56bf581400c" translate="yes" xml:space="preserve">
          <source>If this option is not specified, the latest version is always used. This is equivalent to specifying a constraint of &quot;&amp;gt;= 0&quot;.</source>
          <target state="translated">이 옵션을 지정하지 않으면 항상 최신 버전이 사용됩니다. 이는 &quot;&amp;gt; = 0&quot;제약 조건을 지정하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d1ad5da68067be56229bdc985c46dcea5c924a9b" translate="yes" xml:space="preserve">
          <source>If this option is set to &lt;code&gt;false&lt;/code&gt; Vagrant will set the Vagrant SSH username as a default Ansible remote user, but &lt;code&gt;remote_user&lt;/code&gt; parameters of your Ansible plays or tasks will still be taken into account and thus override the Vagrant configuration.</source>
          <target state="translated">이 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하면 Vagrant는 Vagrant SSH 사용자 이름을 기본 Ansible 원격 사용자로 설정하지만 Ansible 재생 또는 작업의 &lt;code&gt;remote_user&lt;/code&gt; 매개 변수는 여전히 고려되므로 Vagrant 구성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="6f0099c9402c627ce05e900c175ab5d156a68fbd" translate="yes" xml:space="preserve">
          <source>If this were placed in a Vagrantfile, after merging, the value of widgets would be &quot;2&quot;.</source>
          <target state="translated">이것을 Vagrantfile에 배치 한 경우 병합 후 위젯의 값은 &quot;2&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="5b1b46fbdef6945b1270b161905c594718300582" translate="yes" xml:space="preserve">
          <source>If updating the kernel extension is not an option, you can workaround the issue by specifying the following options on your synced folder:</source>
          <target state="translated">커널 확장 업데이트가 옵션이 아닌 경우 동기화 된 폴더에서 다음 옵션을 지정하여 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7fc0cb6c01a89f8648d053e3a815a57dc6bedc6" translate="yes" xml:space="preserve">
          <source>If you add this to an existing Vagrantfile that has a running guest machine, be sure to &lt;code&gt;vagrant reload&lt;/code&gt; to see your changes.</source>
          <target state="translated">실행중인 게스트 머신이있는 기존 Vagrantfile에이 파일을 추가하는 경우 변경 사항을 보려면 vagrant &lt;code&gt;vagrant reload&lt;/code&gt; 를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6ae28aea837068a814f97c3dc17a105a4d1da03a" translate="yes" xml:space="preserve">
          <source>If you already have a working CFEngine policy server, you can get a CFEngine client installed and bootstrapped by specifying its IP address:</source>
          <target state="translated">작동중인 CFEngine 정책 서버가 이미있는 경우 IP 주소를 지정하여 CFEngine 클라이언트를 설치하고 부트 스트랩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a378333600d31cb61fc02314d25ace2fb6d4e2b9" translate="yes" xml:space="preserve">
          <source>If you already started the Vagrant environment before setting &lt;code&gt;auto_config&lt;/code&gt;, the files it initially placed there will stay there. You will have to remove those files manually or destroy and recreate the machine.</source>
          <target state="translated">&lt;code&gt;auto_config&lt;/code&gt; 를 설정하기 전에 Vagrant 환경을 이미 시작한 경우 처음에 배치 된 파일은 그대로 유지됩니다. 해당 파일을 수동으로 제거하거나 시스템을 삭제 한 후 다시 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="6fa650c2d69a99a9f4c07c5526023a646b9b4837" translate="yes" xml:space="preserve">
          <source>If you are creating a base box for private use, you should try &lt;em&gt;not&lt;/em&gt; to follow these, as they open up your base box to security risks (known users, passwords, private keys, etc.).</source>
          <target state="translated">개인용으로 기본 상자를 작성하는 경우 보안 위험 (알려진 사용자, 비밀번호, 개인 키 등)에 대한 기본 상자를 열기 때문에이 상자를 따르지 &lt;em&gt;마십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6be574180131238ceecb60ebc292cd13e9b45871" translate="yes" xml:space="preserve">
          <source>If you are creating an AWS base box, do not force the AMI to allocate terabytes of EBS storage, for example, since the user can do that on their own. But you should default to mounting ephemeral drives, because they're free and provide a lot of disk space.</source>
          <target state="translated">예를 들어, AWS 기본 상자를 생성하는 경우 AMI가 테라 바이트의 EBS 스토리지를 강제로 할당하지 마십시오 (예 : 사용자가 직접 수행 할 수 있음). 그러나 임시 드라이브는 여유 공간이 있고 많은 디스크 공간을 제공하기 때문에 기본적으로 마운트해야합니다.</target>
        </trans-unit>
        <trans-unit id="3614738497c2b73975f97cc7a40ff8ff7be47ee1" translate="yes" xml:space="preserve">
          <source>If you are defining your triggers using the hash syntax, you must use the &lt;code&gt;Proc&lt;/code&gt; type for defining a ruby trigger.</source>
          <target state="translated">해시 구문을 사용하여 트리거 를 정의하는 경우 루비 트리거를 정의하기 위해 &lt;code&gt;Proc&lt;/code&gt; 유형을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e9cd939343ec4a33dddb9fb81067de0e222167d7" translate="yes" xml:space="preserve">
          <source>If you are developing a &lt;a href=&quot;../plugins/providers&quot;&gt;custom Vagrant provider&lt;/a&gt;, you will need to do a tiny bit more work in order for it to work well with Vagrant Share.</source>
          <target state="translated">&lt;a href=&quot;../plugins/providers&quot;&gt;사용자 정의 Vagrant 제공자를&lt;/a&gt; 개발하는 경우 Vagrant Share와 잘 작동하려면 조금 더 많은 작업을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="90aaa32ae9aa8553062534b1c42e2b946f34e059" translate="yes" xml:space="preserve">
          <source>If you are familiar with programming, this is similar to how languages have different variable scopes.</source>
          <target state="translated">프로그래밍에 익숙하다면 언어마다 변수 범위가 다른 방법과 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="9bc967af7076061339f66c7700e40d3bec06d231" translate="yes" xml:space="preserve">
          <source>If you are just getting started with Vagrant, box versioning is not too important, and we recommend learning about some other topics first. But if you are using Vagrant on a team or plan on creating your own boxes, versioning is very important. Luckily, having versioning built right in to Vagrant makes it easy to use and fit nicely into the Vagrant workflow.</source>
          <target state="translated">Vagrant를 시작한 경우 상자 버전 관리가 그다지 중요하지 않으므로 다른 주제에 대해 먼저 배우는 것이 좋습니다. 그러나 팀에서 Vagrant를 사용하거나 자신의 상자를 만들 계획이라면 버전 관리가 매우 중요합니다. 운 좋게도 Vagrant에 내장 된 버전 관리 기능을 사용하면 Vagrant 워크 플로에 사용하기 쉽고 적합합니다.</target>
        </trans-unit>
        <trans-unit id="a903f7cc5b73c536f84f4d740007dbc954b398d3" translate="yes" xml:space="preserve">
          <source>If you are just learning Chef for the first time, you probably want to start with the &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt; provisioner.</source>
          <target state="translated">처음으로 Chef를 배우는 경우 &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt; 제공 업체 로 시작하고 싶을 것입니다 .</target>
        </trans-unit>
        <trans-unit id="37d180e85252d06cbd145f7e580e5d72dc5240e9" translate="yes" xml:space="preserve">
          <source>If you are looking for a HashiCorp box:</source>
          <target state="translated">HashiCorp 상자를 찾고 있다면 :</target>
        </trans-unit>
        <trans-unit id="6415a65a3260aadd60e814146668c57a21213339" translate="yes" xml:space="preserve">
          <source>If you are running a Batch or PowerShell script for Windows, make sure that the external path has the proper extension (&quot;.bat&quot; or &quot;.ps1&quot;), because Windows uses this to determine what kind of file it is to execute. If you exclude this extension, it likely will not work.</source>
          <target state="translated">Windows 용 Batch 또는 PowerShell 스크립트를 실행중인 경우 Windows에서이 파일을 사용하여 실행할 파일 종류를 결정하므로 외부 경로의 확장자 ( &quot;.bat&quot;또는 &quot;.ps1&quot;)가 올바른지 확인하십시오. 이 확장을 제외하면 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6c63adf9ce4a8a339a49ff6df0618e0b4a8d30c" translate="yes" xml:space="preserve">
          <source>If you are running a common OS, VMware tools can often auto-upgrade themselves. This setting is disabled by default. The Vagrantfile settings below will enable auto-upgrading:</source>
          <target state="translated">공통 OS를 실행중인 경우 VMware 도구가 종종 자동 업그레이드 될 수 있습니다. 이 설정은 기본적으로 비활성화되어 있습니다. 아래의 Vagrantfile 설정은 자동 업그레이드를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="98918ea8d1c29e8ea562b881c227ce226b791ac0" translate="yes" xml:space="preserve">
          <source>If you are upgrading from Vagrant 1.0.x, please read the &lt;a href=&quot;upgrading-from-1-0&quot;&gt;specific page dedicated to that&lt;/a&gt;. This page covers upgrading Vagrant in general during the 1.x series.</source>
          <target state="translated">Vagrant 1.0.x에서 업그레이드하는 경우 &lt;a href=&quot;upgrading-from-1-0&quot;&gt;해당 전용 페이지&lt;/a&gt; 를 읽으십시오 . 이 페이지는 1.x 시리즈에서 일반적으로 Vagrant를 업그레이드하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="07a8df89c7b2d5ac2d583b64cbc4c3fcdd5716e7" translate="yes" xml:space="preserve">
          <source>If you are upgrading from the Vagrant VMware Workstation or Vagrant VMware Fusion plugins, please halt or destroy all VMware VMs currently being managed by Vagrant. Then continue with the instructions below.</source>
          <target state="translated">Vagrant VMware Workstation 또는 Vagrant VMware Fusion 플러그인에서 업그레이드하는 경우 Vagrant에서 현재 관리중인 모든 VMware VM을 중지하거나 제거하십시오. 그런 다음 아래 지침을 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="eb399afb3271307a57e2f7eb3959f0244b58e280" translate="yes" xml:space="preserve">
          <source>If you are using Puppet 4 or higher, you can provision using &lt;a href=&quot;https://docs.puppetlabs.com/puppet/latest/reference/environments.html&quot;&gt;Puppet Environments&lt;/a&gt; by specifying the name of the environment and the path on the local disk to the environment files:</source>
          <target state="translated">Puppet 4 이상을 사용 하는 경우 환경 이름과 로컬 디스크의 환경 파일 경로를 지정 하여 &lt;a href=&quot;https://docs.puppetlabs.com/puppet/latest/reference/environments.html&quot;&gt;Puppet 환경&lt;/a&gt; 을 사용하여 프로비저닝 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c1943077a8b42834d5f1bba461b03e310694e7f" translate="yes" xml:space="preserve">
          <source>If you are using the Vagrant VirtualBox &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt;, then VirtualBox shared folders are the default synced folder type. These synced folders use the VirtualBox shared folder system to sync file changes from the guest to the host and vice versa.</source>
          <target state="translated">Vagrant VirtualBox &lt;a href=&quot;../providers/index&quot;&gt;공급자를&lt;/a&gt; 사용하는 경우 VirtualBox 공유 폴더가 기본 동기화 폴더 유형입니다. 이러한 동기화 된 폴더는 VirtualBox 공유 폴더 시스템을 사용하여 게스트에서 호스트로 또는 그 반대로 파일 변경 사항을 동기화합니다.</target>
        </trans-unit>
        <trans-unit id="1960f265ca347f2b6fd99e745cda0d29f57f826e" translate="yes" xml:space="preserve">
          <source>If you are using the VirtualBox provider, you will also need to make sure you have a &lt;a href=&quot;../networking/private_network&quot;&gt;private network set up&lt;/a&gt;. This is due to a limitation of VirtualBox's built-in networking. With VMware, you do not need this.</source>
          <target state="translated">VirtualBox 공급자를 사용하는 경우 &lt;a href=&quot;../networking/private_network&quot;&gt;개인 네트워크가 설정되어&lt;/a&gt; 있는지 확인해야합니다 . 이것은 VirtualBox의 내장 네트워킹의 한계 때문입니다. VMware에서는이를 필요로하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a48f975b78a85e2e746ab7e08c5fe631e7f3ccf" translate="yes" xml:space="preserve">
          <source>If you are using the block format, you must specify it outside of the block, as shown below:</source>
          <target state="translated">블록 형식을 사용하는 경우 다음과 같이 블록 형식을 블록 외부에 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1323092752b24b52f5c663e5d8d8bed60021364" translate="yes" xml:space="preserve">
          <source>If you change or move your Vagrantfile, the &lt;code&gt;rsync-auto&lt;/code&gt; command will have to be restarted. For example, if you add synced folders to the Vagrantfile, or move the directory that contains the Vagrantfile, the &lt;code&gt;rsync-auto&lt;/code&gt; command will either not pick up the changes or may begin experiencing strange behavior.</source>
          <target state="translated">Vagrantfile을 변경하거나 이동하면 &lt;code&gt;rsync-auto&lt;/code&gt; 명령을 다시 시작해야합니다. 예를 들어, 동기화 된 폴더를 Vagrantfile에 추가하거나 Vagrantfile이 포함 된 디렉토리를 이동하면 &lt;code&gt;rsync-auto&lt;/code&gt; 명령이 변경 사항을 선택하지 않거나 이상한 동작이 시작될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f47b0d6246fcbcbe0400eb39d469031b96bc7d4b" translate="yes" xml:space="preserve">
          <source>If you define provisioners at multiple &quot;scope&quot; levels (such as globally in the configuration block, then in a &lt;a href=&quot;../multi-machine/index&quot;&gt;multi-machine&lt;/a&gt; definition, then maybe in a &lt;a href=&quot;../providers/configuration&quot;&gt;provider-specific override&lt;/a&gt;), then the outer scopes will always run &lt;em&gt;before&lt;/em&gt; any inner scopes. For example, in the Vagrantfile below:</source>
          <target state="translated">여러 &quot;범위&quot;수준 (예 : 구성 블록, &lt;a href=&quot;../multi-machine/index&quot;&gt;다중 시스템&lt;/a&gt; 정의, &lt;a href=&quot;../providers/configuration&quot;&gt;공급자 별 재정의 등&lt;/a&gt; )에서 공급자 를 정의 하면 외부 범위가 항상 내부 범위 &lt;em&gt;보다 먼저&lt;/em&gt; 실행됩니다 . 예를 들어, 아래의 Vagrantfile에서 :</target>
        </trans-unit>
        <trans-unit id="13bdd40ee0b2a0a6b9129fe303960b83f78d36a9" translate="yes" xml:space="preserve">
          <source>If you did not install a Desktop environment when you installed the operating system, as recommended to reduce size, the install of the VirtualBox additions should warn you about the lack of OpenGL or Window System Drivers, but you can safely ignore this.</source>
          <target state="translated">운영 체제를 설치할 때 데스크탑 환경을 설치하지 않은 경우 크기를 줄이려면 VirtualBox 추가를 설치하면 OpenGL 또는 Window 시스템 드라이버가 없다는 경고 메시지가 표시되지만이를 무시해도됩니다.</target>
        </trans-unit>
        <trans-unit id="93ce1849f3631a11c2c7fbfdc2a147afe9a38142" translate="yes" xml:space="preserve">
          <source>If you do not specify it or set it to &lt;code&gt;false&lt;/code&gt;, you must explicitly delete these entries from the Chef Server before you provision a new one with Chef Server. For example, using Chef's built-in &lt;code&gt;knife&lt;/code&gt; tool:</source>
          <target state="translated">지정하지 않거나 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 Chef Server로 새 항목을 프로비저닝하기 전에 Chef Server에서 이러한 항목을 명시 적으로 삭제해야합니다. 예를 들어 Chef의 내장 &lt;code&gt;knife&lt;/code&gt; 도구 사용 :</target>
        </trans-unit>
        <trans-unit id="1ba97b1395fd8602e8423deffc2bd1d4aed0871f" translate="yes" xml:space="preserve">
          <source>If you do not want backward compatibility and want to force users to support linked cloning, you can use &lt;code&gt;Vagrant.require_version&lt;/code&gt; with 1.8.</source>
          <target state="translated">이전 버전과의 호환성을 원하지 않고 사용자가 링크 된 복제를 지원하도록하려면 &lt;code&gt;Vagrant.require_version&lt;/code&gt; 을 1.8과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81661fb672342ba294877495c0a1988c1ca1a6a6" translate="yes" xml:space="preserve">
          <source>If you do not want to specify the full path to Vagrant (i.e. you just want to run &lt;code&gt;vagrant&lt;/code&gt;), you can create a symbolic link to your exec:</source>
          <target state="translated">Vagrant의 전체 경로를 지정하지 않으려는 경우 (즉 , &lt;code&gt;vagrant&lt;/code&gt; 를 실행하려는 경우 ) exec에 대한 심볼릭 링크를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb51cb7b79c0466a4e2fee379f7affd739c0b9c1" translate="yes" xml:space="preserve">
          <source>If you do not want to type your password on every &lt;code&gt;vagrant up&lt;/code&gt;, Vagrant uses thoughtfully crafted commands to make fine-grained sudoers modifications possible to avoid entering your password.</source>
          <target state="translated">모든 &lt;code&gt;vagrant up&lt;/code&gt; 에게 암호를 입력하지 않으려면 Vagrant는 신중하게 만들어진 명령을 사용하여 암호를 입력하지 않도록 세분화 된 sudoers를 수정할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="34853782179746fa1cba587e5b373405d2874b3b" translate="yes" xml:space="preserve">
          <source>If you don't want to edit &lt;code&gt;/etc/sudoers&lt;/code&gt; directly, you can create &lt;code&gt;/etc/sudoers.d/vagrant-syncedfolders&lt;/code&gt; with the appropriate entries, assuming &lt;code&gt;/etc/sudoers.d&lt;/code&gt; has been enabled.</source>
          <target state="translated">&lt;code&gt;/etc/sudoers&lt;/code&gt; 를 직접 편집하지 않으려면 &lt;code&gt;/etc/sudoers.d&lt;/code&gt; 가 활성화 되었다고 가정하고 적절한 항목으로 &lt;code&gt;/etc/sudoers.d/vagrant-syncedfolders&lt;/code&gt; 를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="becdfd93c82f1cba64d69ad12670c6236bc1b1b0" translate="yes" xml:space="preserve">
          <source>If you fail to do so, you will get the following error when Vagrant tries to provision the machine with Chef Client:</source>
          <target state="translated">그렇게하지 않으면 Vagrant가 Chef Client로 머신을 프로비저닝하려고 할 때 다음 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8a238db16b4d4352c78fcadc015536fd1fb1a98e" translate="yes" xml:space="preserve">
          <source>If you have any issues purchasing, installing, or using the Vagrant VMware plugins, please &lt;a href=&quot;mailto:support@hashicorp.com&quot;&gt;contact support&lt;/a&gt;. To expedite the support process, please include the &lt;a href=&quot;../other/debugging&quot;&gt;Vagrant debug output&lt;/a&gt; as a Gist if applicable. This will help us more quickly diagnose your issue.</source>
          <target state="translated">Vagrant VMware 플러그인을 구입, 설치 또는 사용하는 데 문제가있는 경우 &lt;a href=&quot;mailto:support@hashicorp.com&quot;&gt;지원 부서에 문의&lt;/a&gt; 하십시오 . 지원 프로세스를 신속하게 진행하려면 해당되는 경우 &lt;a href=&quot;../other/debugging&quot;&gt;Vagrant 디버그 출력&lt;/a&gt; 을 Gist로 포함하십시오 . 이렇게하면 문제를 더 빨리 진단하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="23762b7bea8be53f595ec7392dfd0f6238967a5f" translate="yes" xml:space="preserve">
          <source>If you have some policy or other files that you want to install by default on a VM, you can use the &lt;code&gt;files_path&lt;/code&gt; attribute:</source>
          <target state="translated">VM에 기본적으로 설치하려는 정책 또는 기타 파일이있는 경우 &lt;code&gt;files_path&lt;/code&gt; 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08d1218b213a6fa2e76108843edbd8bdf1b61fd0" translate="yes" xml:space="preserve">
          <source>If you just upgraded from a previous version of Vagrant, existing environments will not show up in global-status until they are destroyed and recreated.</source>
          <target state="translated">이전 버전의 Vagrant에서 방금 업그레이드 한 경우 기존 환경이 파괴되고 다시 생성 될 때까지 전역 상태에 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="abb898527eb59a82051fb5b7f6d3be6b9014f501" translate="yes" xml:space="preserve">
          <source>If you just want to check if there are updates available, use the &lt;code&gt;vagrant box outdated&lt;/code&gt; command.</source>
          <target state="translated">사용 가능한 업데이트가 있는지 확인하려면 &lt;code&gt;vagrant box outdated&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="23fb1e0293166de38f89aff7ecd76044de6df665" translate="yes" xml:space="preserve">
          <source>If you made a box for some other provider, be sure to specify the &lt;code&gt;--provider&lt;/code&gt; option to &lt;code&gt;vagrant up&lt;/code&gt;. If the up succeeded, then your box worked!</source>
          <target state="translated">다른 공급자를 위해 상자를 만든 경우 &lt;code&gt;--provider&lt;/code&gt; 옵션을 지정하여 vagrant &lt;code&gt;vagrant up&lt;/code&gt; . 성공하면 상자가 작동했습니다!</target>
        </trans-unit>
        <trans-unit id="7280ca3343488737a02fb9bb8c0ed7b54715bbb8" translate="yes" xml:space="preserve">
          <source>If you really need to use this connection mode though, it is possible to enable paramiko as illustrated in the following configuration examples:</source>
          <target state="translated">그래도이 연결 모드를 사용해야하는 경우 다음 구성 예에 설명 된대로 paramiko를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ff5bd9e8b30953b0e5c2638aa99bad2f4ad0d45" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;rake -T&lt;/code&gt; now, which lists all the available rake tasks, you should see that you have the &lt;code&gt;package&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; tasks. You can now develop your plugin and build it!</source>
          <target state="translated">사용 가능한 모든 레이크 작업을 나열 하는 &lt;code&gt;rake -T&lt;/code&gt; now 를 실행 하면 &lt;code&gt;package&lt;/code&gt; 및 &lt;code&gt;release&lt;/code&gt; 작업 이있는 것을 볼 수 있습니다 . 이제 플러그인을 개발하고 빌드 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="c0f75a207e168088170161d806ed96748fff1d86" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;vagrant init&lt;/code&gt; today, the Vagrantfile will be in roughly the following format:</source>
          <target state="translated">오늘 vagrant &lt;code&gt;vagrant init&lt;/code&gt; 을 실행 하면 Vagrantfile은 대략 다음과 같은 형식입니다.</target>
        </trans-unit>
        <trans-unit id="d78cf310ec97591e9bcef6e1b5b4c855a48095b3" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;vagrant&lt;/code&gt; by itself, help will be displayed showing all available subcommands. In addition to this, you can run any Vagrant command with the &lt;code&gt;-h&lt;/code&gt; flag to output help about that specific command. For example, try running &lt;code&gt;vagrant init -h&lt;/code&gt;. The help will output a one sentence synopsis of what the command does as well as a list of all the flags the command accepts.</source>
          <target state="translated">&lt;code&gt;vagrant&lt;/code&gt; 으로 vagrant 를 실행하면 사용 가능한 모든 부속 명령을 보여주는 도움말이 표시됩니다. 이 외에도 &lt;code&gt;-h&lt;/code&gt; 플래그 와 함께 Vagrant 명령을 실행하여 해당 특정 명령에 대한 도움말을 출력 할 수 있습니다 . 예를 들어, &lt;code&gt;vagrant init -h&lt;/code&gt; 를 실행 하십시오 . 도움말은 명령이 수행하는 작업에 대한 한 문장 개요와 명령이 허용하는 모든 플래그 목록을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="3f5f5fc98bcbf81f085ed001918a9cbbfd5958c1" translate="yes" xml:space="preserve">
          <source>If you specified a &lt;code&gt;--provider&lt;/code&gt; flag, you only need to do this for the &lt;code&gt;up&lt;/code&gt; command. Once a machine is up and running, Vagrant is able to see what provider is backing a running machine, so commands such as &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;suspend&lt;/code&gt;, etc. do not need to be told what provider to use.</source>
          <target state="translated">&lt;code&gt;--provider&lt;/code&gt; 플래그 를 지정한 경우 &lt;code&gt;up&lt;/code&gt; 명령에 대해서만이 작업을 수행하면됩니다 . 머신이 가동되면 Vagrant는 어떤 제공자가 실행중인 머신을 백업하는지 확인할 수 있으므로 &lt;code&gt;destroy&lt;/code&gt; , &lt;code&gt;suspend&lt;/code&gt; 등과 같은 명령에 어떤 제공자를 사용해야하는지 알 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f8c1b2c05e5572cd002bf9b54d9531b4df92a0d0" translate="yes" xml:space="preserve">
          <source>If you use a remote script as part of your provisioning process, you can pass in its URL as the &lt;code&gt;path&lt;/code&gt; argument as well:</source>
          <target state="translated">프로비저닝 프로세스의 일부로 원격 스크립트를 사용하는 경우 URL을 &lt;code&gt;path&lt;/code&gt; 인수로 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d72bffa4d2742d72f5fb762f31f2b5b4699585ea" translate="yes" xml:space="preserve">
          <source>If you use any Vagrant 1.0.x plugins, you must remove references to these from your Vagrantfile prior to upgrading. Vagrant 1.1+ introduces a new plugin format that will protect against this sort of incompatibility from ever happening again.</source>
          <target state="translated">Vagrant 1.0.x 플러그인을 사용하는 경우 업그레이드하기 전에 Vagrantfile에서 해당 플러그인에 대한 참조를 제거해야합니다. Vagrant 1.1 이상에서는 이런 종류의 비 호환성을 다시 방지하는 새로운 플러그인 형식이 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="f0976db38e607bbe9389a8225915d1cefc987807" translate="yes" xml:space="preserve">
          <source>If you use other HashiCorp tools like Packer and would prefer to configure this setting only once, you can set &lt;code&gt;CHECKPOINT_DISABLE&lt;/code&gt; instead.</source>
          <target state="translated">Packer와 같은 다른 HashiCorp 도구를 사용하고이 설정을 한 번만 구성하려는 경우 &lt;code&gt;CHECKPOINT_DISABLE&lt;/code&gt; 을 대신 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7c9ec49f025f888c5a4497c708225925a626c13" translate="yes" xml:space="preserve">
          <source>If you want to add or remove specific keys from the VMX file, you can do that:</source>
          <target state="translated">VMX 파일에서 특정 키를 추가하거나 제거하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="35306840118ee061c81ee6a71355de686c192839" translate="yes" xml:space="preserve">
          <source>If you want to apply a slightly different configuration to many multi-machine machines, you can use a loop to do this. For example, if you wanted to create three machines:</source>
          <target state="translated">많은 다중 기계 시스템에 약간 다른 구성을 적용하려면 루프를 사용하여이를 수행 할 수 있습니다. 예를 들어 세 개의 머신을 생성하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="0c3316f1d8fedc9b678089ea52a4adbd53d06771" translate="yes" xml:space="preserve">
          <source>If you want to apply a slightly different configuration to multiple machines, see &lt;a href=&quot;../vagrantfile/tips#loop-over-vm-definitions&quot;&gt;this tip&lt;/a&gt;.</source>
          <target state="translated">여러 시스템에 약간 다른 구성을 적용하려면 &lt;a href=&quot;../vagrantfile/tips#loop-over-vm-definitions&quot;&gt;이 팁을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9228ebee253a82697073032b4483cb748564726" translate="yes" xml:space="preserve">
          <source>If you want to apply a slightly different configuration to multiple machines, see &lt;a href=&quot;vagrantfile/tips#loop-over-vm-definitions&quot;&gt;this tip&lt;/a&gt;.</source>
          <target state="translated">여러 시스템에 약간 다른 구성을 적용하려면 &lt;a href=&quot;vagrantfile/tips#loop-over-vm-definitions&quot;&gt;이 팁을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="96caa180b7355159d78cb2225efd04543aad41c3" translate="yes" xml:space="preserve">
          <source>If you want to disable the creation of the publicly accessible endpoint, run &lt;code&gt;vagrant share&lt;/code&gt; with the &lt;code&gt;--disable-http&lt;/code&gt; flag. This will share your environment using one of the other methods available, and will not create the URL endpoint.</source>
          <target state="translated">공개적으로 액세스 할 수있는 엔드 포인트 생성을 비활성화 하려면 &lt;code&gt;--disable-http&lt;/code&gt; 플래그를 사용하여 &lt;code&gt;vagrant share&lt;/code&gt; 를 실행 하십시오 . 사용 가능한 다른 방법 중 하나를 사용하여 환경을 공유하고 URL 엔드 포인트를 작성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f766ead5b208a198c0a05f9e45c4cb82bcf0eee" translate="yes" xml:space="preserve">
          <source>If you want to have &lt;a href=&quot;https://example.com/install.sh&quot;&gt;https://example.com/install.sh&lt;/a&gt; as Omnibus script for your Linux/Unix installations, you should set this option to &lt;a href=&quot;https://example.com&quot;&gt;https://example.com&lt;/a&gt;</source>
          <target state="translated">당신이 원하는 경우 &lt;a href=&quot;https://example.com/install.sh&quot;&gt;https://example.com/install.sh를&lt;/a&gt; 리눅스 / 유닉스 설치에 대한 옴니버스 스크립트로, 당신은이 옵션을 설정해야합니다 &lt;a href=&quot;https://example.com&quot;&gt;https://example.com을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45dcce38722b1b108a9fa01f10121a148a4e5a9a" translate="yes" xml:space="preserve">
          <source>If you want to manually configure the network interface yourself, you can disable Vagrant's auto-configure feature by specifying &lt;code&gt;auto_config&lt;/code&gt;:</source>
          <target state="translated">네트워크 인터페이스를 직접 수동으로 구성하려는 경우 &lt;code&gt;auto_config&lt;/code&gt; 를 지정하여 Vagrant의 자동 구성 기능을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16e7a2d4f6432749c50ad7dbdf52e4d22aea84c3" translate="yes" xml:space="preserve">
          <source>If you want to manually configure the network interface yourself, you can disable auto-configuration by specifying &lt;code&gt;auto_config&lt;/code&gt;:</source>
          <target state="translated">네트워크 인터페이스를 직접 구성하려면 &lt;code&gt;auto_config&lt;/code&gt; 를 지정하여 자동 구성을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="035c530ef7a120afeea7404442b54780b379acb1" translate="yes" xml:space="preserve">
          <source>If you want to preserve the original ordering, you can specify the &lt;code&gt;preserve_order: true&lt;/code&gt; flag:</source>
          <target state="translated">원래 순서를 유지하려면 &lt;code&gt;preserve_order: true&lt;/code&gt; 플래그를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb4ec134f442c0e3ef97f6cb6defaa8124814824" translate="yes" xml:space="preserve">
          <source>If you want to run a standalone file, you can specify the &lt;code&gt;run_file&lt;/code&gt; parameter. The file will be copied to the VM and executed on its own using &lt;code&gt;cf-agent&lt;/code&gt;. Note that the file needs to be a standalone policy, including its own &lt;a href=&quot;https://cfengine.com/docs/3.5/reference-components.html#common-control&quot;&gt;&lt;code&gt;body common control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">독립형 파일을 실행하려는 경우 &lt;code&gt;run_file&lt;/code&gt; 매개 변수를 지정할 수 있습니다 . 파일이 VM에 복사되고 &lt;code&gt;cf-agent&lt;/code&gt; 를 사용하여 자체적으로 실행됩니다 . 파일은 자체 &lt;a href=&quot;https://cfengine.com/docs/3.5/reference-components.html#common-control&quot;&gt; &lt;code&gt;body common control&lt;/code&gt; &lt;/a&gt; 포함하여 독립형 정책이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="80eb9cb5acbae5a32279e53c02a58a79657a346f" translate="yes" xml:space="preserve">
          <source>If you want to upload a folder to your guest system, it can be accomplished by using a file provisioner seen below. When copied, the resulting folder on the guest will replace &lt;code&gt;folder&lt;/code&gt; as &lt;code&gt;newfolder&lt;/code&gt; and place its on the guest machine. Note that if you'd like the same folder name on your guest machine, make sure that the destination path has the same name as the folder on your host.</source>
          <target state="translated">게스트 시스템에 폴더를 업로드하려면 아래에 표시된 파일 제공자를 사용하여 폴더를 수행 할 수 있습니다. 복사하면 게스트의 결과 폴더가 &lt;code&gt;folder&lt;/code&gt; 를 &lt;code&gt;newfolder&lt;/code&gt; 폴더 로 바꾸고 게스트 컴퓨터에 배치합니다. 게스트 컴퓨터에서 동일한 폴더 이름을 원할 경우 대상 경로의 이름이 호스트의 폴더 이름과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="6baa5265aa1d7f0cd58c139b3767833c68940d92" translate="yes" xml:space="preserve">
          <source>If you want, you can mix and match multiple configuration versions in the same Vagrantfile. This is useful if you found some useful configuration snippet or something that you want to use. Example:</source>
          <target state="translated">원하는 경우 동일한 Vagrant 파일에서 여러 구성 버전을 혼합하여 일치시킬 수 있습니다. 유용한 구성 스 니펫이나 사용하려는 것을 발견 한 경우에 유용합니다. 예:</target>
        </trans-unit>
        <trans-unit id="0e1b7a7fa90b4cac28e56b78983f5b59e34de43e" translate="yes" xml:space="preserve">
          <source>If you wish to use VirtualBox on Windows, you must ensure that Hyper-V is not enabled on Windows. You can turn off the feature by running this Powershell command:</source>
          <target state="translated">Windows에서 VirtualBox를 사용하려면 Windows에서 Hyper-V가 활성화되어 있지 않아야합니다. 이 Powershell 명령을 실행하여 기능을 끌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14b24a3460fb82d9847213919672e9fddd6ae5bb" translate="yes" xml:space="preserve">
          <source>If you've never used a configuration management system before, it is recommended you start with basic &lt;a href=&quot;provisioning/shell&quot;&gt;shell scripts&lt;/a&gt; for provisioning.</source>
          <target state="translated">구성 관리 시스템을 사용해 본 적이 없다면 프로비저닝을위한 기본 &lt;a href=&quot;provisioning/shell&quot;&gt;셸 스크립트&lt;/a&gt; 로 시작하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="658e049ff5e6d1ce65c0735c832ce0ed219e99be" translate="yes" xml:space="preserve">
          <source>If you've never used a configuration management system before, it is recommended you start with basic &lt;a href=&quot;shell&quot;&gt;shell scripts&lt;/a&gt; for provisioning.</source>
          <target state="translated">구성 관리 시스템을 사용해 본 적이 없다면 프로비저닝을위한 기본 &lt;a href=&quot;shell&quot;&gt;셸 스크립트&lt;/a&gt; 로 시작하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="f46b2afe76b99f063395b5d042445e65da4fdb65" translate="yes" xml:space="preserve">
          <source>If your environment is not showing up, you may have to do a &lt;code&gt;vagrant destroy&lt;/code&gt; followed by a &lt;code&gt;vagrant up&lt;/code&gt;.</source>
          <target state="translated">당신의 환경이 나타나지 않으면, 당신은 &lt;code&gt;vagrant destroy&lt;/code&gt; 다음에 &lt;code&gt;vagrant up&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="de55a71c28bb75cdf5fa86242e091d8ba7044775" translate="yes" xml:space="preserve">
          <source>Implementations of commands should subclass &lt;code&gt;Vagrant.plugin(2, :command)&lt;/code&gt;, which is a Vagrant method that will return the proper superclass for a version 2 command. The implementation itself is quite simple, since the class needs to only implement a single method: &lt;code&gt;execute&lt;/code&gt;. Example:</source>
          <target state="translated">명령 구현은 &lt;code&gt;Vagrant.plugin(2, :command)&lt;/code&gt; 서브 클래스 여야 합니다. 이는 버전 2 명령에 적절한 수퍼 클래스를 리턴하는 Vagrant 메소드입니다. 클래스 자체는 &lt;code&gt;execute&lt;/code&gt; 단일 메소드 만 구현하면되므로 구현 자체는 매우 간단 합니다. 예:</target>
        </trans-unit>
        <trans-unit id="f91fe8a08e03d3cf30e03fd0893b721673f5e7bb" translate="yes" xml:space="preserve">
          <source>Implementations of configuration keys should subclass &lt;code&gt;Vagrant.plugin(2, :config)&lt;/code&gt;, which is a Vagrant method that will return the proper subclass for a version 2 configuration section. The implementation is very simple, and acts mostly as a plain Ruby object. Here is an example:</source>
          <target state="translated">구성 키의 구현은 &lt;code&gt;Vagrant.plugin(2, :config)&lt;/code&gt; 서브 클래스로 버전 2 구성 섹션에 대한 적절한 서브 클래스를 리턴하는 Vagrant 메소드입니다. 구현은 매우 간단하며 주로 일반 Ruby 객체로 작동합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6ea5217781a1e478018e2b2604bba26807c0c464" translate="yes" xml:space="preserve">
          <source>Implementations of guests subclass &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;guest&quot;)&lt;/code&gt;. Within this implementation, only the &lt;code&gt;detect?&lt;/code&gt; method needs to be implemented.</source>
          <target state="translated">손님 서브 클래스의 구현 &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;guest&quot;)&lt;/code&gt; . 이 구현에서 &lt;code&gt;detect?&lt;/code&gt; 만 ? 방법을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="f98fffcc6469eeb202ebe90d7deaf93ebd1179d3" translate="yes" xml:space="preserve">
          <source>Implementations of hosts subclass &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;host&quot;)&lt;/code&gt;. Within this implementation, only the &lt;code&gt;detect?&lt;/code&gt; method needs to be implemented.</source>
          <target state="translated">호스트 서브 클래스의 구현 &lt;code&gt;Vagrant.plugin(&quot;2&quot;, &quot;host&quot;)&lt;/code&gt; . 이 구현에서 &lt;code&gt;detect?&lt;/code&gt; 만 ? 방법을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="6b51fca94f133d6cf87edb364b9383f70da7b331" translate="yes" xml:space="preserve">
          <source>Implementations should be classes or modules that have a method with the same name as the capability. The method must be immediately accessible on the class returned from the &lt;code&gt;guest_capability&lt;/code&gt; component, meaning that if it is an instance method, an instance should be returned.</source>
          <target state="translated">구현은 기능과 이름이 같은 메소드를 가진 클래스 또는 모듈이어야합니다. &lt;code&gt;guest_capability&lt;/code&gt; 구성 요소 에서 반환 된 클래스에서 메서드에 즉시 액세스 할 수 있어야합니다. 즉 , 인스턴스 메서드 인 경우 인스턴스를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="b150f21e99d42623354868df823535a336d739e4" translate="yes" xml:space="preserve">
          <source>In Apache:</source>
          <target state="translated">아파치에서 :</target>
        </trans-unit>
        <trans-unit id="b35503ce6115c6b2a019190e9418019fe4a806ce" translate="yes" xml:space="preserve">
          <source>In Nginx:</source>
          <target state="translated">Nginx에서 :</target>
        </trans-unit>
        <trans-unit id="9c48feb50221e425fddba78a16379f8d6c3fc22b" translate="yes" xml:space="preserve">
          <source>In a multi-machine Vagrantfile, the name of the machine must be specified:</source>
          <target state="translated">다중 머신 Vagrantfile에서 머신 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="4114f78f26313807ed2b52500eb9e5d2c4a46913" translate="yes" xml:space="preserve">
          <source>In a nutshell, aliases are defined using a standard &lt;code&gt;key = value&lt;/code&gt; format, where the &lt;code&gt;key&lt;/code&gt; is the new Vagrant command, and the &lt;code&gt;value&lt;/code&gt; is the aliased command. Using this format, there are two types of aliases that can be defined: internal and external aliases.</source>
          <target state="translated">간단히 말해서, 별명은 표준 &lt;code&gt;key = value&lt;/code&gt; 형식을 사용하여 정의되며 , 여기서 &lt;code&gt;key&lt;/code&gt; 는 새 Vagrant 명령이고 &lt;code&gt;value&lt;/code&gt; 은 별명 명령입니다. 이 형식을 사용하면 정의 할 수있는 두 가지 유형의 별칭 (내부 및 외부 별칭)이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a26827692100ebbce1872cd7abb6d7d8bd0f9da" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Apply provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">위에 나열된 모든 옵션 외에도 Chef Apply 규정자는 &lt;a href=&quot;chef_common&quot;&gt;모든 Chef 규정 자에 대한 공통 옵션을&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="a8a2d0af1900e524ad72f0e75bbf6f7392180633" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Client provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">위에 나열된 모든 옵션 외에도 Chef Client 제공 업체는 &lt;a href=&quot;chef_common&quot;&gt;모든 Chef 제공 업체&lt;/a&gt; 의 공통 옵션을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="9fecfa841b9b959212f685b7667a9ff92fe13ff2" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Solo provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">위에 나열된 모든 옵션 외에도 Chef Solo 제공 업체는 &lt;a href=&quot;chef_common&quot;&gt;모든 Chef 제공 업체&lt;/a&gt; 의 공통 옵션을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="a8fee9448df4995a6b82332c1d43ee71b545dd01" translate="yes" xml:space="preserve">
          <source>In addition to all the options listed above, the Chef Zero provisioner supports the &lt;a href=&quot;chef_common&quot;&gt;common options for all Chef provisioners&lt;/a&gt;.</source>
          <target state="translated">위에 나열된 모든 옵션 외에도 Chef Zero 제공 업체는 &lt;a href=&quot;chef_common&quot;&gt;모든 Chef 제공 업체&lt;/a&gt; 의 공통 옵션을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="007cdee374ed7d6f9ff8bde8d7675fef51968825" translate="yes" xml:space="preserve">
          <source>In addition to disabling UAC in the control panel, you also must disable UAC in the registry. This may vary from Windows version to Windows version, but Windows 8/8.1 use the command below. This will allow some things like automated Puppet installs to work within Vagrant Windows base boxes.</source>
          <target state="translated">제어판에서 UAC를 비활성화하는 것 외에도 레지스트리에서 UAC를 비활성화해야합니다. Windows 버전마다 다를 수 있지만 Windows 8 / 8.1은 아래 명령을 사용합니다. 이를 통해 자동 Puppet 설치와 같은 일부가 Vagrant Windows 기본 상자 내에서 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="188e36f7fb35ed24bc50c559a6919dc62442fafe" translate="yes" xml:space="preserve">
          <source>In addition to pulling images, the Docker provisioner can run and start containers for you. This lets you automatically start services as part of &lt;code&gt;vagrant up&lt;/code&gt;.</source>
          <target state="translated">Docker provisioner는 이미지를 가져 오는 것 외에도 컨테이너를 실행하고 시작할 수 있습니다. 이를 통해 &lt;code&gt;vagrant up&lt;/code&gt; 일부로 서비스를 자동으로 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96b8d961014596413f6af6b88c2b02b65ddcf0e6" translate="yes" xml:space="preserve">
          <source>In addition to the commands listed in the sidebar and shown in &lt;code&gt;vagrant -h&lt;/code&gt;, Vagrant comes with some more commands that are hidden from basic help output. These commands are hidden because they're not useful to beginners or they're not commonly used. We call these commands &quot;non-primary subcommands&quot;.</source>
          <target state="translated">사이드 바에 나열되고 &lt;code&gt;vagrant -h&lt;/code&gt; 에 표시된 명령 외에도 Vagrant에는 기본 도움말 출력에서 ​​숨겨지는 몇 가지 명령이 추가로 제공됩니다. 이 명령은 초보자에게 유용하지 않거나 일반적으로 사용되지 않기 때문에 숨겨져 있습니다. 이러한 명령을 &quot;기본이 아닌 하위 명령&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="1462acf2a10b660c831a938eb3bf6d9d7a4305f8" translate="yes" xml:space="preserve">
          <source>In addition to the files from exporting a VirtualBox VM, there is the &quot;metadata.json&quot; file used by Vagrant itself.</source>
          <target state="translated">VirtualBox VM 내보내기 파일 외에 Vagrant 자체에서 사용하는 &quot;metadata.json&quot;파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d9c20533de18459ed25664e006925e45e8947a7" translate="yes" xml:space="preserve">
          <source>In addition to the name, the &lt;code&gt;run&lt;/code&gt; method accepts a set of options, all optional:</source>
          <target state="translated">이름 외에도 &lt;code&gt;run&lt;/code&gt; 메소드는 옵션 세트를 허용하며 모두 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="85d4d3cb0e71bd83d381beeba06d8968cf0adbb1" translate="yes" xml:space="preserve">
          <source>In addition to the options specified above, it is possible for Vagrant to specify alternate NFS arguments when mounting the NFS share by using the &lt;code&gt;mount_options&lt;/code&gt; key. For example, to use the &lt;code&gt;actimeo=2&lt;/code&gt; client mount option:</source>
          <target state="translated">위에서 지정한 옵션 외에도 Vagrant는 &lt;code&gt;mount_options&lt;/code&gt; 키 를 사용하여 NFS 공유를 마운트 할 때 대체 NFS 인수를 지정할 수 있습니다 . 예를 들어, &lt;code&gt;actimeo=2&lt;/code&gt; 클라이언트 마운트 옵션 을 사용하려면 다음 을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="d0a8c0b6d4d962c5ce975c22926170655e1e2341" translate="yes" xml:space="preserve">
          <source>In addition to the options that can be set, various functions are available and can be called to configure other aspects of the Docker provisioner. Most of these functions have examples in more detailed sections below.</source>
          <target state="translated">설정할 수있는 옵션 외에도 다양한 기능을 사용할 수 있으며 Docker 프로비저닝의 다른 측면을 구성하기 위해 호출 할 수 있습니다. 이러한 기능의 대부분은 아래에보다 자세한 섹션에 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddfb6c726045d7288122b0615131ef85e2bed55c" translate="yes" xml:space="preserve">
          <source>In addition to the software that should be installed based on the &lt;a href=&quot;../boxes/base&quot;&gt;general guide to creating base boxes&lt;/a&gt;, Hyper-V base boxes require some additional software.</source>
          <target state="translated">&lt;a href=&quot;../boxes/base&quot;&gt;기본 상자 작성&lt;/a&gt; 에 대한 일반 안내서를 기반으로 설치해야하는 소프트웨어 외에도 Hyper-V 기본 상자에는 추가 소프트웨어가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="93dd5310b147c0523ff45f50bb84516180f4d779" translate="yes" xml:space="preserve">
          <source>In addition to the software that should be installed based on the &lt;a href=&quot;../boxes/base&quot;&gt;general guide to creating base boxes&lt;/a&gt;, VirtualBox base boxes require some additional software.</source>
          <target state="translated">&lt;a href=&quot;../boxes/base&quot;&gt;기본 상자 작성&lt;/a&gt; 에 대한 일반 안내서를 기반으로 설치해야하는 소프트웨어 외에도 VirtualBox 기본 상자에는 추가 소프트웨어가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="85eb094f2eb20a01b4032f68152566493e4bd878" translate="yes" xml:space="preserve">
          <source>In addition to these options, the specific synced folder type might allow more options. See the documentation for your specific synced folder type for more details. The built-in synced folder types are documented in other pages available in the navigation for these docs.</source>
          <target state="translated">이러한 옵션 외에도 특정 동기화 폴더 유형에 더 많은 옵션이 허용 될 수 있습니다. 자세한 내용은 특정 동기화 폴더 유형에 대한 설명서를 참조하십시오. 내장 된 동기화 된 폴더 유형은 해당 문서의 탐색에서 사용 가능한 다른 페이지에 문서화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6aa497485be24a11611268b260d0728ffc31725c" translate="yes" xml:space="preserve">
          <source>In addition to these options, there are other features we've built to help:</source>
          <target state="translated">이러한 옵션 외에도, 우리가 돕기 위해 구축 한 다른 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7894e78b01d8e59ec28b3fe3927e0083064325fe" translate="yes" xml:space="preserve">
          <source>In addition to this, each &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt; may require additional software. For example, if you are making a base box for VirtualBox, you will want to include the VirtualBox guest additions so that shared folders work properly. But if you are making an AWS base box, this is not required.</source>
          <target state="translated">이 외에도 각 &lt;a href=&quot;../providers/index&quot;&gt;공급자&lt;/a&gt; 는 추가 소프트웨어가 필요할 수 있습니다. 예를 들어 VirtualBox의 기본 상자를 만드는 경우 공유 폴더가 제대로 작동하도록 VirtualBox 게스트 추가를 포함하려고합니다. 그러나 AWS 기본 상자를 만드는 경우에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d0b6c595417662f78bd3d05c8342776f94001469" translate="yes" xml:space="preserve">
          <source>In addition to this, feel free to install and configure any other software you want available by default for this base box.</source>
          <target state="translated">이 외에도이 기본 상자에 기본적으로 사용 가능한 다른 소프트웨어를 설치하고 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="861217abd4224f3d1ca090836001b500a9299d3b" translate="yes" xml:space="preserve">
          <source>In addition to this, you may put any data in the metadata as well as any files in the archive. Since Vagrant core itself does not care, it is up to your provider to handle the data of the box. Vagrant core just handles unpacking and verifying the box is for the proper provider.</source>
          <target state="translated">이 외에도 메타 데이터 및 아카이브의 파일에 데이터를 넣을 수 있습니다. Vagrant core 자체는 신경 쓰지 않으므로 상자의 데이터를 처리하는 것은 공급자의 책임입니다. 방랑 코어는 포장 풀기를 처리하고 상자가 적절한 공급자를위한 것인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a8b7fd52c2bbb45bbddefe59ade0707ef722799c" translate="yes" xml:space="preserve">
          <source>In case you need to run multiple containers based off the same image, you can do so by providing different names and specifying the &lt;code&gt;image&lt;/code&gt; parameter to it:</source>
          <target state="translated">동일한 이미지를 기반으로 여러 컨테이너를 실행해야하는 경우 다른 이름을 제공하고 &lt;code&gt;image&lt;/code&gt; 매개 변수를 지정하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="becca00b6183b4d392feec8113877b6b696a529e" translate="yes" xml:space="preserve">
          <source>In depth documentation and use cases of various Vagrant commands is available by reading the appropriate sub-section available in the left navigational area of this site.</source>
          <target state="translated">이 사이트의 왼쪽 탐색 영역에서 사용 가능한 적절한 하위 섹션을 읽으면 다양한 Vagrant 명령의 자세한 문서 및 사용 사례를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="125e127d54270944f3b745f8c5c86b7b0da158df" translate="yes" xml:space="preserve">
          <source>In fact, most of the core of Vagrant is &lt;a href=&quot;https://github.com/hashicorp/vagrant/tree/master/plugins&quot;&gt;implemented using plugins&lt;/a&gt;. Since Vagrant &lt;a href=&quot;https://en.wikipedia.org/wiki/Eating_your_own_dog_food&quot;&gt;dogfoods&lt;/a&gt; its own plugin API, you can be confident that the interface is stable and well supported.</source>
          <target state="translated">실제로 Vagrant의 핵심은 대부분 &lt;a href=&quot;https://github.com/hashicorp/vagrant/tree/master/plugins&quot;&gt;plugins를 사용하여 구현됩니다&lt;/a&gt; . Vagrant &lt;a href=&quot;https://en.wikipedia.org/wiki/Eating_your_own_dog_food&quot;&gt;dogfoods&lt;/a&gt; 는 자체 플러그인 API를 제공하므로 인터페이스가 안정적이며 잘 지원된다고 확신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50b05753a35d0f0d874bbc2c7b166c39de532885" translate="yes" xml:space="preserve">
          <source>In general, class methods are used for capabilities. For example, here is the implementation for the capability above:</source>
          <target state="translated">일반적으로 클래스 메소드는 기능에 사용됩니다. 예를 들어, 위의 기능에 대한 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4925f03ac27c5fb9c012887373e58744e3bd1923" translate="yes" xml:space="preserve">
          <source>In general, however, you will not need a box with the Docker provider.</source>
          <target state="translated">그러나 일반적으로 Docker 공급자와 함께 상자가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="351c43bb31c251ac1d50287d4765f096a451f845" translate="yes" xml:space="preserve">
          <source>In normal day-to-day usage, the &lt;code&gt;--provider&lt;/code&gt; flag is not necessary since Vagrant can usually pick the right provider for you. More details on how it does this is below.</source>
          <target state="translated">일반적인 일상적인 사용에서는 Vagrant가 일반적으로 적합한 공급자를 선택할 수 있으므로 &lt;code&gt;--provider&lt;/code&gt; 플래그가 필요하지 않습니다. 이를 수행하는 방법에 대한 자세한 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b60a6d2f396eac85d4022972700efc4549f43ed" translate="yes" xml:space="preserve">
          <source>In order to access the Vagrant environment created, Vagrant exposes some high-level networking options for things such as forwarded ports, connecting to a public network, or creating a private network.</source>
          <target state="translated">Vagrant는 생성 된 Vagrant 환경에 액세스하기 위해 전달 된 포트, 공용 네트워크에 연결 또는 개인 네트워크 생성과 같은 일부 고급 네트워킹 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="69c5cff806a4443a97c358fbd9825794bf8853fb" translate="yes" xml:space="preserve">
          <source>In order to determine the latest available Vagrant version, this command must make a network call. If you only want to see the currently installed version, use &lt;code&gt;vagrant --version&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 최신 Vagrant 버전을 확인하려면이 명령으로 네트워크를 호출해야합니다. 현재 설치된 버전 만 보려면 &lt;code&gt;vagrant --version&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="12a06c7393717c4b0c355cd189027835cd42ee24" translate="yes" xml:space="preserve">
          <source>In order to facilitate communication within machines in a multi-machine setup, the various &lt;a href=&quot;../networking/index&quot;&gt;networking&lt;/a&gt; options should be used. In particular, the &lt;a href=&quot;../networking/private_network&quot;&gt;private network&lt;/a&gt; can be used to make a private network between multiple machines and the host.</source>
          <target state="translated">다중 머신 설정에서 머신 내 통신을 용이하게하려면 다양한 &lt;a href=&quot;../networking/index&quot;&gt;네트워킹&lt;/a&gt; 옵션을 사용해야합니다. 특히, &lt;a href=&quot;../networking/private_network&quot;&gt;개인 네트워크는&lt;/a&gt; 여러 컴퓨터와 호스트 사이에 개인 네트워크를 만들기 위해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e06130620ca3cd44ce9c923077bfbb0387d99b34" translate="yes" xml:space="preserve">
          <source>In order to facilitate communication within machines in a multi-machine setup, the various &lt;a href=&quot;networking/index&quot;&gt;networking&lt;/a&gt; options should be used. In particular, the &lt;a href=&quot;networking/private_network&quot;&gt;private network&lt;/a&gt; can be used to make a private network between multiple machines and the host.</source>
          <target state="translated">다중 머신 설정에서 머신 내 통신을 용이하게하려면 다양한 &lt;a href=&quot;networking/index&quot;&gt;네트워킹&lt;/a&gt; 옵션을 사용해야합니다. 특히, &lt;a href=&quot;networking/private_network&quot;&gt;개인 네트워크는&lt;/a&gt; 여러 컴퓨터와 호스트 사이에 개인 네트워크를 만들기 위해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5c3f9915202b4353e08df3c10e06b499b972e48" translate="yes" xml:space="preserve">
          <source>In order to keep SSH speedy even when your machine or the Vagrant machine is not connected to the internet, set the &lt;code&gt;UseDNS&lt;/code&gt; configuration to &lt;code&gt;no&lt;/code&gt; in the SSH server configuration.</source>
          <target state="translated">컴퓨터 또는 Vagrant 컴퓨터가 인터넷에 연결되지 않은 경우에도 SSH 속도를 유지 하려면 SSH 서버 구성에서 &lt;code&gt;UseDNS&lt;/code&gt; 구성을 &lt;code&gt;no&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="303e72aa0d99b94db4896a381840698a85ca0e45" translate="yes" xml:space="preserve">
          <source>In order to use your locally-installed version of Vagrant in other projects, you will need to create a binstub and add it to your path.</source>
          <target state="translated">다른 프로젝트에서 로컬로 설치된 Vagrant 버전을 사용하려면 쓰레기통을 만들어 경로에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="4519d9da17a7c59fa3b98cb5a3c7741315bc4487" translate="yes" xml:space="preserve">
          <source>In particular, the command is actually:</source>
          <target state="translated">특히 명령은 실제로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5075044ecafb5446349abffaa94f7fc62b779b2c" translate="yes" xml:space="preserve">
          <source>In some cases the default shared folder implementations (such as VirtualBox shared folders) have high performance penalties. If you are seeing less than ideal performance with synced folders, &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_File_System_%28protocol%29&quot;&gt;NFS&lt;/a&gt; can offer a solution. Vagrant has built-in support to orchestrate the configuration of the NFS server on the host and guest for you.</source>
          <target state="translated">경우에 따라 기본 공유 폴더 구현 (VirtualBox 공유 폴더 등)에 성능이 저하 될 수 있습니다. 동기화 된 폴더의 성능이 이상적이지 않으면 &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_File_System_%28protocol%29&quot;&gt;NFS&lt;/a&gt; 가 솔루션을 제공 할 수 있습니다. Vagrant는 호스트 및 게스트에서 NFS 서버의 구성을 조정하기 위해 기본적으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7308259f6b01d16c8b9b04a419c1f382b9f7984b" translate="yes" xml:space="preserve">
          <source>In some cases, these options are &lt;em&gt;too&lt;/em&gt; high-level, and you may want to more finely tune and configure the network interfaces of the underlying machine. Most providers expose &lt;a href=&quot;../providers/configuration&quot;&gt;provider-specific configuration&lt;/a&gt; to do this, so please read the documentation for your specific provider to see what options are available.</source>
          <target state="translated">경우에 따라 이러한 옵션이 &lt;em&gt;너무&lt;/em&gt; 높기 때문에 기본 시스템의 네트워크 인터페이스를보다 세밀하게 조정하고 구성 할 수 있습니다. 대부분의 공급자 는이를 위해 &lt;a href=&quot;../providers/configuration&quot;&gt;공급자 별 구성&lt;/a&gt; 을 제공 하므로 사용 가능한 옵션에 대해서는 해당 공급자의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3f7f062937b79b2000fa35252aea5005a8482402" translate="yes" xml:space="preserve">
          <source>In such an arrangement, the &lt;code&gt;ansible.playbook&lt;/code&gt; path should be adjusted accordingly:</source>
          <target state="translated">이러한 배열에서 &lt;code&gt;ansible.playbook&lt;/code&gt; 경로는 그에 따라 조정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="14e351a7a16857982f6a5ed2e123fd17987aa344" translate="yes" xml:space="preserve">
          <source>In the above case, Vagrant will use the &quot;precise64&quot; box by default, but will use &quot;precise64_fusion&quot; if the VMware Fusion provider is used.</source>
          <target state="translated">위의 경우 Vagrant는 기본적으로 &quot;precise64&quot;상자를 사용하지만 VMware Fusion 제공자를 사용하는 경우 &quot;precise64_fusion&quot;을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cda88e028afc18c83cc0e74013fffdbedb717d18" translate="yes" xml:space="preserve">
          <source>In the above, only &quot;bar&quot; will be echoed, because the inline setting overloaded the outer provisioner. This overload is only effective within that scope: the &quot;web&quot; VM. If there were another VM defined, it would still echo &quot;foo&quot; unless it itself also overloaded the provisioner.</source>
          <target state="translated">위의 경우 인라인 설정에 외부 프로 비 저가 오버로드 되었기 때문에 &quot;bar&quot;만 에코됩니다. 이 과부하는 해당 범위 ( &quot;웹&quot;VM) 내에서만 유효합니다. 다른 VM이 정의 된 경우 자체 프로비저닝에도 과부하가 발생하지 않는 한 여전히 &quot;foo&quot;를 에코합니다.</target>
        </trans-unit>
        <trans-unit id="19c990a4e1f153c8a9031ce6dfcb4f451c06be36" translate="yes" xml:space="preserve">
          <source>In the case above, the Vagrantfile will only load if the version loading it is Vagrant 1.3.5 or greater.</source>
          <target state="translated">위의 경우 Vagrantfile은 파일을로드하는 버전이 Vagrant 1.3.5 이상인 경우에만로드됩니다.</target>
        </trans-unit>
        <trans-unit id="41976302d281e73917c4b37da018911cd3a7a52f" translate="yes" xml:space="preserve">
          <source>In the example above, the &quot;custom-key&quot; key will be set to &quot;value&quot; and the &quot;another-key&quot; key will be removed from the VMX file.</source>
          <target state="translated">위 예에서 &quot;custom-key&quot;키는 &quot;value&quot;로 설정되고 &quot;another-key&quot;키는 VMX 파일에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="5fbe92b978c963d9c568b7a3c39600527f61bea0" translate="yes" xml:space="preserve">
          <source>In the example above, the VM is modified to have a host CPU execution cap of 50%, meaning that no matter how much CPU is used in the VM, no more than 50% would be used on your own host machine. Some details:</source>
          <target state="translated">위의 예에서 VM은 호스트 CPU 실행 한도가 50 %가되도록 수정되었습니다. 즉, VM에서 사용되는 CPU 양에 관계없이 자체 호스트 시스템에서 50 % 이하가 사용됩니다. 일부 세부 사항 :</target>
        </trans-unit>
        <trans-unit id="49f723174e1ae5960dcb68dc4c92e6d5f554aba7" translate="yes" xml:space="preserve">
          <source>In the past, boxes were just &lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;tar files&lt;/a&gt; of VirtualBox exports. With Vagrant supporting multiple &lt;a href=&quot;../providers/index&quot;&gt;providers&lt;/a&gt; and &lt;a href=&quot;versioning&quot;&gt;versioning&lt;/a&gt; now, box files are slightly more complicated.</source>
          <target state="translated">과거에는 상자가 VirtualBox 내보내기의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Tar_(computing)&quot;&gt;tar 파일&lt;/a&gt; 이었습니다. Vagrant가 여러 &lt;a href=&quot;../providers/index&quot;&gt;공급자&lt;/a&gt; 및 &lt;a href=&quot;versioning&quot;&gt;버전 관리를&lt;/a&gt; 지원함에 따라 상자 파일이 약간 더 복잡해졌습니다.</target>
        </trans-unit>
        <trans-unit id="7aef12dc9dd0d649682504858729da2f7626cc2c" translate="yes" xml:space="preserve">
          <source>In the process of creating and managing a machine, providers generally need to store some sort of state somewhere. Vagrant provides each machine with a directory to store this state.</source>
          <target state="translated">컴퓨터를 생성하고 관리하는 과정에서 공급자는 일반적으로 어딘가에 어떤 종류의 상태를 저장해야합니다. Vagrant는 각 컴퓨터에이 상태를 저장할 디렉토리를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="78dd710ab58c86c81fa85763e88bc9dd73d26231" translate="yes" xml:space="preserve">
          <source>In this case, it asks for the machines in reverse order and calls the destroy action on each of them. If a user says &lt;code&gt;vagrant destroy foo&lt;/code&gt;, then the helper automatically only yields the &lt;code&gt;foo&lt;/code&gt; machine. If no parameter is given and it is a multi-machine environment, every machine in the environment is yielded, and so on. It just does the right thing.</source>
          <target state="translated">이 경우 머신을 역순으로 요청하고 각 머신에 대해 destroy 조치를 호출합니다. 사용자가 &lt;code&gt;vagrant destroy foo&lt;/code&gt; 라고 말하면 도우미는 자동으로 &lt;code&gt;foo&lt;/code&gt; 머신 만 생성합니다 . 매개 변수가 제공되지 않고 다중 머신 환경 인 경우 환경의 모든 머신이 생성됩니다. 그것은 단지 옳은 일을합니다.</target>
        </trans-unit>
        <trans-unit id="19b8817c816690cf508935092eb90f55f0f9273a" translate="yes" xml:space="preserve">
          <source>In this case, run &lt;code&gt;vagrant reload&lt;/code&gt; and things will begin working again.</source>
          <target state="translated">이 경우, &lt;code&gt;vagrant reload&lt;/code&gt; 를 실행 하면 작업이 다시 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="f99cd1d7c40acc4a88ff1702c55fe54c14db570e" translate="yes" xml:space="preserve">
          <source>In this case, we ask that you please &lt;a href=&quot;https://github.com/hashicorp/vagrant/issues&quot;&gt;open an issue&lt;/a&gt; requesting that certain information become available. We will most likely add it!</source>
          <target state="translated">이 경우 특정 정보를 사용할 수 있도록 요청 &lt;a href=&quot;https://github.com/hashicorp/vagrant/issues&quot;&gt;하는 문제&lt;/a&gt; 를여 십시오 . 우리는 아마 그것을 추가 할 것입니다!</target>
        </trans-unit>
        <trans-unit id="3274f421dc7af320f297106696bacc7d85ac91a2" translate="yes" xml:space="preserve">
          <source>In this case, we did not use &lt;code&gt;UNSET_VALUE&lt;/code&gt; for widgets because we did not need that behavior. We default to 0 and always merge by summing the two widgets. Now, if we ran the example above that had the 3 configuration blocks, the final value of widgets would be &quot;3&quot;.</source>
          <target state="translated">이 경우 위젯에 대해 &lt;code&gt;UNSET_VALUE&lt;/code&gt; 를 사용 하지 않았습니다. 해당 동작이 필요하지 않기 때문입니다. 기본값은 0이며 두 위젯을 합산하여 항상 병합합니다. 이제 3 개의 구성 블록이있는 위의 예제를 실행하면 위젯의 최종 값은 &quot;3&quot;이됩니다.</target>
        </trans-unit>
        <trans-unit id="2ad727e0635f07a9de3590092d0e3d14764e0773" translate="yes" xml:space="preserve">
          <source>In this case, we recommend changing or removing the insecure key from the Vagrant machine.</source>
          <target state="translated">이 경우 Vagrant 시스템에서 안전하지 않은 키를 변경하거나 제거하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c90bde7f908fafb4c54b7e377adf61070ee3dc24" translate="yes" xml:space="preserve">
          <source>In this example, the first network adapter that exists and can successfully be bridge will be used.</source>
          <target state="translated">이 예에서는 존재하며 성공적으로 브리지 될 수있는 첫 번째 네트워크 어댑터가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="36f9075e46533edccdfc88224c8710e29dc0c51f" translate="yes" xml:space="preserve">
          <source>In this generic case, the triggers would fire in the order: 1 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; 4</source>
          <target state="translated">이 일반적인 경우 트리거는 1-&amp;gt; 2-&amp;gt; 3-&amp;gt; 4 순서로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="08ced95e1b312e2ccadb809070caaf4fd0cc9117" translate="yes" xml:space="preserve">
          <source>In this scenario, the user must pass the name of the Vagrant Push to the subcommand:</source>
          <target state="translated">이 시나리오에서 사용자는 Vagrant Push의 이름을 하위 명령으로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="9375c821c7a45374d890b92dcb3e4d34acb1e10b" translate="yes" xml:space="preserve">
          <source>Inheritance is not done via standard Ruby class inheritance because Vagrant uses a custom &lt;a href=&quot;guest-capabilities&quot;&gt;capability-based&lt;/a&gt; system. Vagrant handles inheritance dispatch for you.</source>
          <target state="translated">Vagrant는 사용자 정의 &lt;a href=&quot;guest-capabilities&quot;&gt;기능 기반&lt;/a&gt; 시스템을 사용하므로 표준 Ruby 클래스 상속을 통해 상속이 수행되지 않습니다 . 방랑자는 상속 파견을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="289154b285f43a2236264bffc21f62fdcc0a5b89" translate="yes" xml:space="preserve">
          <source>Inheritance is not done via standard Ruby class inheritance because Vagrant uses a custom &lt;a href=&quot;host-capabilities&quot;&gt;capability-based&lt;/a&gt; system. Vagrant handles inheritance dispatch for you.</source>
          <target state="translated">Vagrant는 사용자 정의 &lt;a href=&quot;host-capabilities&quot;&gt;기능 기반&lt;/a&gt; 시스템을 사용하므로 표준 Ruby 클래스 상속을 통해 상속이 수행되지 않습니다 . 방랑자는 상속 파견을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="19682bdb9185a5fa9d763d414d0443d3a0bc2456" translate="yes" xml:space="preserve">
          <source>Init</source>
          <target state="translated">Init</target>
        </trans-unit>
        <trans-unit id="4cb1013d7655be19b2c151eaa69de3f49269dd43" translate="yes" xml:space="preserve">
          <source>Inline Scripts</source>
          <target state="translated">인라인 스크립트</target>
        </trans-unit>
        <trans-unit id="6629024a60d05342340d5cfc2f200bb4d383059a" translate="yes" xml:space="preserve">
          <source>Inspired in part by Git's own &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases&quot;&gt;alias functionality&lt;/a&gt;, aliases make your Vagrant experience simpler, easier, and more familiar by allowing you to create your own custom Vagrant commands.</source>
          <target state="translated">Git의 &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases&quot;&gt;별명 기능&lt;/a&gt; 에서 부분적으로 영감을 얻은 별명은 사용자 정의 Vagrant 명령을 작성하여 Vagrant 경험을 더 쉽고, 쉽고 친숙하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="61695f8fda1011f8f6d23b1eec870ef8f873249a" translate="yes" xml:space="preserve">
          <source>Install Galaxy Roles in a path owned by root</source>
          <target state="translated">루트가 소유 한 경로에 Galaxy 역할 설치</target>
        </trans-unit>
        <trans-unit id="39e6b5bb47d4b7c97106868d217774836877ed7e" translate="yes" xml:space="preserve">
          <source>Install Options</source>
          <target state="translated">설치 옵션</target>
        </trans-unit>
        <trans-unit id="deef52c209d94ab1ae7e1c1d8e71259c5cf9cff0" translate="yes" xml:space="preserve">
          <source>Install Ruby</source>
          <target state="translated">루비 설치</target>
        </trans-unit>
        <trans-unit id="85fb34175944cb271387c77ece22c9cd507702ec" translate="yes" xml:space="preserve">
          <source>Install it over the existing package</source>
          <target state="translated">기존 패키지 위에 설치</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="d0a1449242475cef5e2e29fe38f9472de6552a3f" translate="yes" xml:space="preserve">
          <source>Installation of the Vagrant VMware provider requires two steps. First the Vagrant VMware Utility must be installed. This can be done by downloading and installing the correct system package from the &lt;a href=&quot;https://www.vagrantup.com/vmware/downloads.html&quot;&gt;Vagrant VMware Utility downloads page&lt;/a&gt;.</source>
          <target state="translated">Vagrant VMware 제공자를 설치하려면 두 단계가 필요합니다. 먼저 Vagrant VMware Utility를 설치해야합니다. &lt;a href=&quot;https://www.vagrantup.com/vmware/downloads.html&quot;&gt;Vagrant VMware Utility 다운로드 페이지&lt;/a&gt; 에서 올바른 시스템 패키지를 다운로드하여 설치하면 됩니다 .</target>
        </trans-unit>
        <trans-unit id="de81c844d564b30d878532e4c90470ed210fce19" translate="yes" xml:space="preserve">
          <source>Installed Software</source>
          <target state="translated">설치된 소프트웨어</target>
        </trans-unit>
        <trans-unit id="e1ee1eba1aab7dd0716be28be222476c01a9b3b6" translate="yes" xml:space="preserve">
          <source>Installing Vagrant</source>
          <target state="translated">방랑자 설치</target>
        </trans-unit>
        <trans-unit id="ecf7bb32e7db797947e6bcbaf9191b5f3e6f9f4a" translate="yes" xml:space="preserve">
          <source>Installing Vagrant from Source</source>
          <target state="translated">소스에서 Vagrant 설치</target>
        </trans-unit>
        <trans-unit id="86808656e4f37cc66280db15fa551ef9f78065f0" translate="yes" xml:space="preserve">
          <source>Installing Vagrant from source is an advanced topic and is only recommended when using the official installer is not an option. This page details the steps and prerequisites for installing Vagrant from source.</source>
          <target state="translated">소스에서 Vagrant를 설치하는 것은 고급 주제이며 공식 설치 프로그램을 사용하는 것이 옵션이 아닌 경우에만 권장됩니다. 이 페이지는 소스에서 Vagrant를 설치하기위한 단계 및 전제 조건을 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="6b521cdc7b3987fbcc4be400f51d1959e18e1377" translate="yes" xml:space="preserve">
          <source>Installing Vagrant is extremely easy. Head over to the &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant downloads page&lt;/a&gt; and get the appropriate installer or package for your platform. Install the package using standard procedures for your operating system.</source>
          <target state="translated">Vagrant 설치는 매우 쉽습니다. 받는 동안 머리 &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;방랑 다운로드 페이지&lt;/a&gt; 및 플랫폼에 해당하는 설치 프로그램 또는 패키지를 얻을. 운영 체제의 표준 절차를 사용하여 패키지를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="7be34c5dd971bbb59f4c37955f0fa2890088274b" translate="yes" xml:space="preserve">
          <source>Installing a Vagrant plugin is easy, and should not take more than a few seconds.</source>
          <target state="translated">Vagrant 플러그인 설치는 쉽고 몇 초 이상 걸리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bc337bd17322a5244ebd660836e5bebbcf3e3f93" translate="yes" xml:space="preserve">
          <source>Installing boxes has not changed at all:</source>
          <target state="translated">박스 설치는 전혀 바뀌지 않았습니다 :</target>
        </trans-unit>
        <trans-unit id="1dede9eeb0e760b3630227cc72bb055a9c3a9cb5" translate="yes" xml:space="preserve">
          <source>Installing this is outside the scope of this page, but should be fairly straightforward.</source>
          <target state="translated">이것을 설치하는 것은이 페이지의 범위를 벗어나지 만, 매우 간단해야합니다.</target>
        </trans-unit>
        <trans-unit id="3d047846b6541c19520278c1cce53164caebe662" translate="yes" xml:space="preserve">
          <source>Instead of going in depth over each method that needs to be implemented, the documentation will cover high-level but important points to help you create your provider.</source>
          <target state="translated">구현해야하는 각 방법에 대해 심층적으로 다루지 않고 설명서는 공급자를 만드는 데 도움이되는 중요하지만 중요한 사항을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="150bb8da17865425768882abe67724cedc2f66d4" translate="yes" xml:space="preserve">
          <source>Instead of using the default &quot;cookbooks&quot; directory, a custom cookbooks path can also be set via the &lt;code&gt;cookbooks_path&lt;/code&gt; configuration directive:</source>
          <target state="translated">기본 &quot;cookbooks&quot;디렉토리를 사용하는 대신 &lt;code&gt;cookbooks_path&lt;/code&gt; 구성 지시문을 통해 사용자 정의 요리 책 경로를 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82ad37b40272594164bde4eb5edee07d4c5cb910" translate="yes" xml:space="preserve">
          <source>Internal Aliases</source>
          <target state="translated">내부 별칭</target>
        </trans-unit>
        <trans-unit id="6f13699119e4bc483b96662e92838b48b20d42c6" translate="yes" xml:space="preserve">
          <source>Internal command aliases call the CLI class directly, allowing you to alias one Vagrant command to another Vagrant command. This technique can be very useful for creating commands that you think &lt;em&gt;should&lt;/em&gt; exist. For example, if &lt;code&gt;vagrant stop&lt;/code&gt; feels more intuitive than &lt;code&gt;vagrant halt&lt;/code&gt;, the following alias definitions would make that change possible:</source>
          <target state="translated">내부 명령 별명은 CLI 클래스를 직접 호출하여 하나의 Vagrant 명령을 다른 Vagrant 명령에 별명을 지정할 수 있습니다. 이 기술 &lt;em&gt;은&lt;/em&gt; 존재 한다고 생각되는 명령을 만드는 데 매우 유용 할 수 있습니다 . 예를 들어, &lt;code&gt;vagrant stop&lt;/code&gt; 이 &lt;code&gt;vagrant halt&lt;/code&gt; 보다 직관적이라고 생각되는 경우 다음 별명 정의는 해당 변경을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="1bb4b577dac52326b21cbbd5ec5930844c0a41c6" translate="yes" xml:space="preserve">
          <source>It is &lt;strong&gt;extremely important&lt;/strong&gt; that the VMware plugin is upgraded to 1.0.0 or above. This release resolved critical security vulnerabilities. To learn more, please &lt;a href=&quot;https://www.hashicorp.com/blog/introducing-the-vagrant-vmware-desktop-plugin&quot;&gt;read our release announcement&lt;/a&gt;.</source>
          <target state="translated">이다 &lt;strong&gt;매우 중요&lt;/strong&gt; VM웨어 플러그인 1.0.0 이상으로 업그레이드된다. 이 릴리스에서는 중요한 보안 취약점이 해결되었습니다. 자세한 내용은 &lt;a href=&quot;https://www.hashicorp.com/blog/introducing-the-vagrant-vmware-desktop-plugin&quot;&gt;출시 발표&lt;/a&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="35d8d05b099c340cad27e302aa71ddb47fdedf39" translate="yes" xml:space="preserve">
          <source>It is a JSON document, structured in the following way:</source>
          <target state="translated">다음과 같은 방식으로 구성된 JSON 문서입니다.</target>
        </trans-unit>
        <trans-unit id="897a6c42c8ed99a19f05ce1a155b2640bfa4af1e" translate="yes" xml:space="preserve">
          <source>It is a somewhat odd syntax, but the tuple (two-element array) says that the path is located in the &quot;vm&quot; at &quot;/path/to/manifests&quot;.</source>
          <target state="translated">다소 이상한 구문이지만 튜플 (2 요소 배열)은 경로가 &quot;/ path / to / manifests&quot;의 &quot;vm&quot;에 있다고 말합니다.</target>
        </trans-unit>
        <trans-unit id="acffa3a403c188fa8b4731d6d80175cbcb44deb2" translate="yes" xml:space="preserve">
          <source>It is an &lt;em&gt;unsafe wildcard&lt;/em&gt; that can be used to apply Ansible options that are not (yet) supported by this Vagrant provisioner. As of Vagrant 1.7, &lt;code&gt;raw_arguments&lt;/code&gt; has the highest priority and its values can potentially override or break other Vagrant settings.</source>
          <target state="translated">이 Vagrant provisioner가 지원하지 않는 Ansible 옵션을 적용하는 데 사용할 수 있는 &lt;em&gt;안전하지 않은 와일드 카드&lt;/em&gt; 입니다. Vagrant 1.7부터 &lt;code&gt;raw_arguments&lt;/code&gt; 의 우선 순위가 가장 높으며 해당 값이 다른 Vagrant 설정을 대체하거나 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e084cec3c96699903f773baf707d5434bc942a97" translate="yes" xml:space="preserve">
          <source>It is an &lt;em&gt;unsafe wildcard&lt;/em&gt; that can be used to pass additional SSH settings to Ansible via &lt;code&gt;ANSIBLE_SSH_ARGS&lt;/code&gt; environment variable, overriding any other SSH arguments (e.g. defined in an &lt;a href=&quot;https://docs.ansible.com/intro_configuration.html#ssh-args&quot;&gt;&lt;code&gt;ansible.cfg&lt;/code&gt; configuration file&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;ANSIBLE_SSH_ARGS&lt;/code&gt; 환경 변수 를 통해 추가 SSH 설정을 Ansible에 전달 하고 다른 SSH 인수 (예 : &lt;a href=&quot;https://docs.ansible.com/intro_configuration.html#ssh-args&quot;&gt; &lt;code&gt;ansible.cfg&lt;/code&gt; &lt;/a&gt; 구성 파일에 정의)를 재정의하는 데 사용할 수 있는 &lt;em&gt;안전하지 않은 와일드 카드&lt;/em&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="dc015c9887fbc3dd36fc2cae5bf188cd1c34f74e" translate="yes" xml:space="preserve">
          <source>It is common when running multiple Vagrant machines to unknowingly create forwarded port definitions that collide with each other (two separate Vagrant projects forwarded to port 8080, for example). Vagrant includes built-in mechanism to detect this and correct it, automatically.</source>
          <target state="translated">여러 Vagrant 시스템을 실행하는 경우 서로 충돌하는 전달 포트 정의를 무의식적으로 작성하는 것이 일반적입니다 (예 : 두 개의 별도 Vagrant 프로젝트가 포트 8080으로 전달). Vagrant에는이를 감지하고 자동으로 수정하는 내장 메커니즘이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6367b7ecc6bcb3283c005497cbcf8a06bcdb73c" translate="yes" xml:space="preserve">
          <source>It is important for providers to carefully manage all the contents of this directory. Vagrant core itself does little to clean up this directory. Therefore, when a machine is destroyed, be sure to clean up all the state from this directory.</source>
          <target state="translated">제공자가이 디렉토리의 모든 내용을 신중하게 관리하는 것이 중요합니다. 유랑 코어 자체는이 디렉토리를 정리하는 데 거의 도움이되지 않습니다. 따라서 시스템이 손상되면이 디렉토리에서 모든 상태를 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="c190af92569f649d7d2e747ad0a9eb1b2b59129d" translate="yes" xml:space="preserve">
          <source>It is important to note that paths shared with the Windows system will not have Linux permissions enforced. For example, when a directory within the WSL is synced to a guest using the VirtualBox provider, any local permissions defined on that directory (or its contents) will not be visible from the guest. Likewise, any files created from the guest within the synced folder will be world readable/writeable in WSL.</source>
          <target state="translated">Windows 시스템과 공유되는 경로에는 Linux 권한이 적용되지 않습니다. 예를 들어 WSL 내의 디렉토리가 VirtualBox 공급자를 사용하여 게스트와 동기화되면 해당 디렉토리 (또는 그 내용)에 정의 된 모든 로컬 권한이 게스트에서 보이지 않습니다. 마찬가지로, 동기화 된 폴더 내에서 게스트로부터 생성 된 모든 파일은 WSL에서 세계적으로 읽기 / 쓰기가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="5496bc765a8f161db65998ac42f070983be77bec" translate="yes" xml:space="preserve">
          <source>It is quite easy, especially once you get comfortable with Vagrant, to forget whether your Vagrant machine is running, suspended, not created, etc. This command tells you the state of the underlying guest machine.</source>
          <target state="translated">특히 Vagrant에 익숙해지면 Vagrant 시스템이 실행 중, 일시 중단, 생성되지 않은지 여부를 잊어 버리는 것이 매우 쉽습니다.이 명령은 기본 게스트 시스템의 상태를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="bad72d3a1e8baa75cc08def0a47eeb3d868ee191" translate="yes" xml:space="preserve">
          <source>It is recommended you remove &lt;em&gt;all&lt;/em&gt; plugins before upgrading, and then slowly add back the plugins. This usually makes for a smoother upgrade process.</source>
          <target state="translated">업그레이드하기 전에 &lt;em&gt;모든&lt;/em&gt; 플러그인 을 제거한 다음 천천히 플러그인을 다시 추가하는 것이 좋습니다 . 일반적으로 업그레이드 프로세스가 더 원활 해집니다.</target>
        </trans-unit>
        <trans-unit id="a3c682ea9d28368f5cfc49a13e48e6044de0753f" translate="yes" xml:space="preserve">
          <source>It is up to the users to make sure that the static IP does not collide with any other machines on the same network.</source>
          <target state="translated">정적 IP가 동일한 네트워크의 다른 시스템과 충돌하지 않는 것은 사용자의 몫입니다.</target>
        </trans-unit>
        <trans-unit id="7bec321b3e1e37f8bb6d7a7b36f3a6056682d221" translate="yes" xml:space="preserve">
          <source>It will take a few minutes, but after it is complete, a file &quot;package.box&quot; should be in your working directory which is the new base box. At this point, you've successfully created a base box!</source>
          <target state="translated">몇 분이 걸리지 만 완료되면 &quot;package.box&quot;파일이 새 기본 상자 인 작업 디렉토리에 있어야합니다. 이제 기본 상자를 성공적으로 만들었습니다!</target>
        </trans-unit>
        <trans-unit id="9262141a69f1dd6340386b823517e429efde926d" translate="yes" xml:space="preserve">
          <source>Just about every aspect of Vagrant can be modified. However, Vagrant does expect some defaults which will cause your base box to &quot;just work&quot; out of the box. You should create these as defaults if you intend to publicly distribute your box.</source>
          <target state="translated">Vagrant의 거의 모든 측면을 수정할 수 있습니다. 그러나 Vagrant는 기본 상자가 기본 상자에서 &quot;작동&quot;할 수있는 몇 가지 기본값을 기대합니다. 박스를 공개적으로 배포하려면이를 기본값으로 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="ebf6d97edff6686b3d1107dd7b758e8c07aaf0aa" translate="yes" xml:space="preserve">
          <source>Just call &lt;code&gt;vagrant share --full&lt;/code&gt;. This will automatically share as many ports as possible for remote connections. Please see &lt;a href=&quot;security&quot;&gt;the Vagrant share security page&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;vagrant share --full&lt;/code&gt; 으로 전화하십시오 . 원격 연결을 위해 가능한 많은 포트를 자동으로 공유합니다. 자세한 내용 &lt;a href=&quot;security&quot;&gt;은 Vagrant share security 페이지&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="15c202708301e04c075e7945ae9cc1fb86aeb15f" translate="yes" xml:space="preserve">
          <source>Just like the cookbooks path, the roles path is relative to the project root if a relative path is given.</source>
          <target state="translated">요리 경로와 마찬가지로 역할 경로는 상대 경로가 지정된 경우 프로젝트 루트를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="51857f20d3fa5894a73b0e9023d7f7d7d56f0d13" translate="yes" xml:space="preserve">
          <source>Just like the manifests path, the modules path is relative to the project root if a relative path is given.</source>
          <target state="translated">매니페스트 경로와 마찬가지로 모듈 경로는 상대 경로가 제공되는 경우 프로젝트 루트를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="fc938e902af4c01d3d279e4cf77bf082778c8bb2" translate="yes" xml:space="preserve">
          <source>Just run &lt;code&gt;vagrant share --ssh&lt;/code&gt;!</source>
          <target state="translated">&lt;code&gt;vagrant share --ssh&lt;/code&gt; 실행 하십시오 !</target>
        </trans-unit>
        <trans-unit id="ebc747eb908160690df9c3f55c5991eb0aae522f" translate="yes" xml:space="preserve">
          <source>Just set &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; to the provider you wish to be the default. For example, if you use Vagrant with VMware Fusion, you can set the environmental variable to &lt;code&gt;vmware_fusion&lt;/code&gt; and it will be your default.</source>
          <target state="translated">그냥 설정 &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 을 기본으로 원하는 공급자에게. 예를 들어, VMware Fusion과 함께 Vagrant를 사용하는 경우 환경 변수를 &lt;code&gt;vmware_fusion&lt;/code&gt; 으로 설정하면 기본값이됩니다.</target>
        </trans-unit>
        <trans-unit id="c5f25ac50a53728965b5d0bb0a08270ea8640b0e" translate="yes" xml:space="preserve">
          <source>Kernel Upgrade</source>
          <target state="translated">커널 업그레이드</target>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="translated">알려진 문제</target>
        </trans-unit>
        <trans-unit id="f4b18ea17542167319e2291b9d2ea0febf135af9" translate="yes" xml:space="preserve">
          <source>Learn more about the VMware providers on the &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware provider&lt;/a&gt; page on the Vagrant website.</source>
          <target state="translated">Vagrant 웹 사이트 의 &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware 제공자&lt;/a&gt; 페이지에서 VMware 제공자에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="4c48e37ecacb5c1e106d9a3e740c3d7d75f91a5d" translate="yes" xml:space="preserve">
          <source>Let us go over the major pieces of what is going on here. Note from a general Ruby language perspective the above &lt;em&gt;should&lt;/em&gt; be familiar. The syntax should not scare you. If it does, then please familiarize with Ruby further before attempting to write a plugin.</source>
          <target state="translated">여기서 일어나고있는 주요 부분을 살펴 보겠습니다. 일반적인 루비 언어 관점에서 위의 내용 &lt;em&gt;은&lt;/em&gt; 익숙 &lt;em&gt;해야&lt;/em&gt; 합니다. 구문은 당신을 놀라게해서는 안됩니다. 그렇다면, 플러그인을 작성하기 전에 Ruby에 대해 더 잘 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="18285b7cf8263631452f27b5e08e47b199a95bc1" translate="yes" xml:space="preserve">
          <source>Let us look at some common examples first. See the bottom of this document for a comprehensive list of options.</source>
          <target state="translated">몇 가지 일반적인 예를 먼저 살펴 보겠습니다. 종합적인 옵션 목록은이 문서의 하단을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9631187804e28555f56341a4ce3d7bf5f2e72993" translate="yes" xml:space="preserve">
          <source>Licensed under the MPL 2.0 License.</source>
          <target state="translated">MPL 2.0 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="7299cf5273ae577ae48495d50f722c28e8a45f39" translate="yes" xml:space="preserve">
          <source>Like disk space, finding the right balance of the default amount of memory is important. For most providers, the user can modify the memory with the Vagrantfile, so do not use too much by default. It would be a poor user experience (and mildly shocking) if a &lt;code&gt;vagrant up&lt;/code&gt; from a base box instantly required many gigabytes of RAM. Instead, choose a value such as 512MB, which is usually enough to play around and do interesting things with a Vagrant machine, but can easily be increased when needed.</source>
          <target state="translated">디스크 공간과 마찬가지로 기본 메모리 양의 적절한 균형을 찾는 것이 중요합니다. 대부분의 공급자의 경우 사용자는 Vagrantfile로 메모리를 수정할 수 있으므로 기본적으로 너무 많이 사용하지 마십시오. 기본 박스에서 &lt;code&gt;vagrant up&lt;/code&gt; 에게 즉시 수 기가 바이트의 RAM이 필요한 경우 사용자 환경이 좋지 않고 충격 을 받습니다. 대신, 일반적으로 Vagrant 기계를 사용하여 재미있는 일을하기에 충분하지만 필요할 때 쉽게 증가시킬 수있는 512MB와 같은 값을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="d3032ff6770b4f78c6b3e63a6ce8ad89ddbbcb94" translate="yes" xml:space="preserve">
          <source>Limited Networking</source>
          <target state="translated">제한된 네트워킹</target>
        </trans-unit>
        <trans-unit id="a3dfad62980fa5dce2052f53e7080e6be08dcd2b" translate="yes" xml:space="preserve">
          <source>Linked Clones</source>
          <target state="translated">연결된 클론</target>
        </trans-unit>
        <trans-unit id="c5669935442f225f52c830c06b758a3bb474babd" translate="yes" xml:space="preserve">
          <source>Linked clones are based on a master VM, which is generated by importing the base box only once the first time it is required. For the linked clones only differencing disk images are created where the parent disk image belongs to the master VM.</source>
          <target state="translated">연결된 클론은 기본 VM을 처음 한 번만 가져 와서 생성하는 마스터 VM을 기반으로합니다. 연결된 클론의 경우 상위 디스크 이미지가 마스터 VM에 속하는 경우 차이점 디스크 이미지 만 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="32c0a0cfc259e4c0395e446c8bbc6756d8dbe5be" translate="yes" xml:space="preserve">
          <source>Linked clones are based on a master VM, which is generated by importing the base box only once the first time it is required. For the linked clones only differencing disk images are created where the parent disk image belongs to the master VM. To disable linked clones:</source>
          <target state="translated">연결된 클론은 기본 VM을 처음 한 번만 가져 와서 생성하는 마스터 VM을 기반으로합니다. 연결된 클론의 경우 상위 디스크 이미지가 마스터 VM에 속하는 경우 차이점 디스크 이미지 만 생성됩니다. 연결된 클론을 비활성화하려면</target>
        </trans-unit>
        <trans-unit id="e8f34b4cacce8c191b1cb7f540727673b6676a2e" translate="yes" xml:space="preserve">
          <source>Linux SysVinit</source>
          <target state="translated">리눅스 SysVinit</target>
        </trans-unit>
        <trans-unit id="7965fa86526dcd720771af8acfa50f127e1b5664" translate="yes" xml:space="preserve">
          <source>Linux runit</source>
          <target state="translated">리눅스 런잇</target>
        </trans-unit>
        <trans-unit id="ec492254b5fa039ff8711d87bbd0e2d836b1f882" translate="yes" xml:space="preserve">
          <source>Linux systemd</source>
          <target state="translated">리눅스 시스템</target>
        </trans-unit>
        <trans-unit id="86a21d1ceb6a05f8c1c8278d489a10f314571750" translate="yes" xml:space="preserve">
          <source>Linux, VirtualBox, and KVM</source>
          <target state="translated">Linux, VirtualBox 및 KVM</target>
        </trans-unit>
        <trans-unit id="a59d66452751aa92e05e149e3fed76a94badc0e1" translate="yes" xml:space="preserve">
          <source>Linux/Unix: &lt;a href=&quot;https://omnitruck.chef.io/install.sh&quot;&gt;https://omnitruck.chef.io/install.sh&lt;/a&gt;</source>
          <target state="translated">리눅스 / 유닉스 : &lt;a href=&quot;https://omnitruck.chef.io/install.sh&quot;&gt;https://omnitruck.chef.io/install.sh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a77a15878c3fb68f85f8870d956ef20f30691304" translate="yes" xml:space="preserve">
          <source>Listing Plugins</source>
          <target state="translated">플러그인 나열</target>
        </trans-unit>
        <trans-unit id="188d0b8bfe4242f2a761bfd9c491a07d596e6ca5" translate="yes" xml:space="preserve">
          <source>Load Order and Merging</source>
          <target state="translated">로드 순서 및 병합</target>
        </trans-unit>
        <trans-unit id="f94eb6b7de75022e95bf7191e1149558c2ad258e" translate="yes" xml:space="preserve">
          <source>Local Exec Strategy</source>
          <target state="translated">지역 집행 전략</target>
        </trans-unit>
        <trans-unit id="faf70c195fe4702b2d1cd60353884a2bf877d8fb" translate="yes" xml:space="preserve">
          <source>Local path:</source>
          <target state="translated">로컬 경로 :</target>
        </trans-unit>
        <trans-unit id="2c85f30c06a613036e1c2397e9f479468d24ba12" translate="yes" xml:space="preserve">
          <source>Log messages are very useful when troubleshooting issues, reporting bugs, or getting support. At the most verbose level, Vagrant outputs basically everything it is doing.</source>
          <target state="translated">로그 메시지는 문제를 해결하거나 버그를보고하거나 지원을받을 때 매우 유용합니다. 가장 장황한 수준에서 Vagrant는 기본적으로 수행중인 모든 것을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="4e5a2893bdcc7d239c1db72e4c4ffbe4bea73174" translate="yes" xml:space="preserve">
          <source>Login</source>
          <target state="translated">Login</target>
        </trans-unit>
        <trans-unit id="ccce3d00832d22d9466937b92787148330490e39" translate="yes" xml:space="preserve">
          <source>Lookup Path</source>
          <target state="translated">조회 경로</target>
        </trans-unit>
        <trans-unit id="88be6b1191964619df88e2a6a3fe6b9af996fa11" translate="yes" xml:space="preserve">
          <source>Loop Over VM Definitions</source>
          <target state="translated">VM 오버 루프 ​​정의</target>
        </trans-unit>
        <trans-unit id="78e4d673440f4b56e6465dd946f18be31eb5131f" translate="yes" xml:space="preserve">
          <source>Machine Readable Output</source>
          <target state="translated">기계 판독 가능 출력</target>
        </trans-unit>
        <trans-unit id="9cfb4a56511532bf0f038ea6ae40fa571c02a45d" translate="yes" xml:space="preserve">
          <source>Machine Settings</source>
          <target state="translated">기기 설정</target>
        </trans-unit>
        <trans-unit id="b4d873a8849693a165fd11437a3e8d6b4796741a" translate="yes" xml:space="preserve">
          <source>Machine State Changes</source>
          <target state="translated">머신 상태 변경</target>
        </trans-unit>
        <trans-unit id="9016947e13f004e02519e2b05e9d31f505d87b5a" translate="yes" xml:space="preserve">
          <source>Make sure you have the kernel headers properly installed. This varies by distro but is generally a package available via the package manager.</source>
          <target state="translated">커널 헤더가 올바르게 설치되어 있는지 확인하십시오. 배포판에 따라 다르지만 일반적으로 패키지 관리자를 통해 사용할 수있는 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="059be90b98bf0fdb8addd26472daa19831de1f3b" translate="yes" xml:space="preserve">
          <source>Making compatible boxes</source>
          <target state="translated">호환 상자 만들기</target>
        </trans-unit>
        <trans-unit id="a7dbbb4172263077674577b2683165b09aa78cdb" translate="yes" xml:space="preserve">
          <source>Manual Installation</source>
          <target state="translated">수동 설치</target>
        </trans-unit>
        <trans-unit id="f0589eefab901bb64b7675e3b557909b0f1fb09d" translate="yes" xml:space="preserve">
          <source>Manually Reinstalling VMware Tools</source>
          <target state="translated">VMware Tools 수동 재설치</target>
        </trans-unit>
        <trans-unit id="f817add89ecc18d1973664c3c20dc1e307e33993" translate="yes" xml:space="preserve">
          <source>Master Options</source>
          <target state="translated">마스터 옵션</target>
        </trans-unit>
        <trans-unit id="4071bb27bba440a9fb83bedd857f4628471ac26f" translate="yes" xml:space="preserve">
          <source>Masterless Quickstart</source>
          <target state="translated">마스터리스 퀵 스타트</target>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="78623d2da43c7d06ede96a1ebe4c605317b00dc5" translate="yes" xml:space="preserve">
          <source>Minimum Vagrant Version</source>
          <target state="translated">최소 방랑자 버전</target>
        </trans-unit>
        <trans-unit id="49a86032f1da90036093406a44944ea9b7d0a6a9" translate="yes" xml:space="preserve">
          <source>Minion Options</source>
          <target state="translated">미니언 옵션</target>
        </trans-unit>
        <trans-unit id="fd88ad0d64722bd0a649a1ac8ef3cd8ca0994adf" translate="yes" xml:space="preserve">
          <source>Missing Assets</source>
          <target state="translated">누락 된 자산</target>
        </trans-unit>
        <trans-unit id="e74219f2703b2481adffb6f792988fdc95033687" translate="yes" xml:space="preserve">
          <source>Modeling a distributed system and how they interact with each other.</source>
          <target state="translated">분산 시스템 모델링 및 상호 작용 방식</target>
        </trans-unit>
        <trans-unit id="53db0da600901f71f4a042626eea0275616b217f" translate="yes" xml:space="preserve">
          <source>Modes of operation</source>
          <target state="translated">작동 모드</target>
        </trans-unit>
        <trans-unit id="355a7f8f29d8ca52cfc6240229a9df1910f7e394" translate="yes" xml:space="preserve">
          <source>Modifying the Owner/Group</source>
          <target state="translated">소유자 / 그룹 수정</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="a4d758212e5822b45ab925bbb085f9b7d1830c4c" translate="yes" xml:space="preserve">
          <source>More Commands</source>
          <target state="translated">더 많은 명령</target>
        </trans-unit>
        <trans-unit id="da65f92a3ce0a19e582c80c419726eab4a93d13c" translate="yes" xml:space="preserve">
          <source>Most importantly, you must understand that by running &lt;code&gt;vagrant share&lt;/code&gt;, you are making your Vagrant environment accessible by anyone who knows the share name. When share is not running, it is not accessible.</source>
          <target state="translated">가장 중요한 것은 &lt;code&gt;vagrant share&lt;/code&gt; 를 실행 하면 공유 이름을 아는 사람이 Vagrant 환경에 액세스 할 수 있다는 것입니다. 공유가 실행되고 있지 않으면 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="63981058334463c31af6f701a3ebdab9c322150d" translate="yes" xml:space="preserve">
          <source>Most plugins are likely going to want to do some sort of input/output. Plugins should &lt;em&gt;never&lt;/em&gt; use Ruby's built-in &lt;code&gt;puts&lt;/code&gt; or &lt;code&gt;gets&lt;/code&gt; style methods. Instead, all input/output should go through some sort of Vagrant UI object. The Vagrant UI object properly handles cases where there is no TTY, output pipes are closed, there is no input pipe, etc.</source>
          <target state="translated">대부분의 플러그인은 일종의 입출력을 원할 것입니다. 플러그인해야 &lt;em&gt;결코&lt;/em&gt; 루비의 내장 사용하지 &lt;code&gt;puts&lt;/code&gt; 또는 &lt;code&gt;gets&lt;/code&gt; 스타일 방법을. 대신, 모든 입출력은 일종의 Vagrant UI 객체를 거쳐야합니다. Vagrant UI 객체는 TTY가 없거나 출력 파이프가 닫히고 입력 파이프가없는 경우를 올바르게 처리합니다.</target>
        </trans-unit>
        <trans-unit id="92d064b2eb9a92ddae125889b58c2a0c53092095" translate="yes" xml:space="preserve">
          <source>Most web frameworks or toolkits have settings or helpers to generate relative paths. For example, if you are a WordPress developer, the &lt;a href=&quot;http://wordpress.org/plugins/root-relative-urls/&quot;&gt;Root Relative URLs&lt;/a&gt; plugin will automatically do this for you.</source>
          <target state="translated">대부분의 웹 프레임 워크 또는 툴킷에는 상대 경로를 생성하기위한 설정 또는 헬퍼가 있습니다. 예를 들어 WordPress 개발자 인 경우 &lt;a href=&quot;http://wordpress.org/plugins/root-relative-urls/&quot;&gt;Root Relative URLs&lt;/a&gt; 플러그인이 자동으로이를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="3ff46c75a064b2e3a49e406010b81e587ad292de" translate="yes" xml:space="preserve">
          <source>Most web frameworks or toolkits have settings or helpers to generate relative paths. For example, if you are a WordPress developer, the &lt;a href=&quot;https://wordpress.org/plugins/root-relative-urls/&quot;&gt;Root Relative URLs&lt;/a&gt; plugin will automatically do this for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c361555bc73474d372cbe91fa9d3d9881eedcc5e" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;../providers/index&quot;&gt;Vagrant Providers&lt;/a&gt;, Vagrant Push also supports multiple backend declarations. Consider the common scenario of a staging and QA environment:</source>
          <target state="translated">&lt;a href=&quot;../providers/index&quot;&gt;Vagrant Providers&lt;/a&gt; 와 마찬가지로 Vagrant Push는 여러 백엔드 선언도 지원합니다. 준비 및 QA 환경의 일반적인 시나리오를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="1cd4726f9497a6693abcd91ec3607c6c9dba7f83" translate="yes" xml:space="preserve">
          <source>Much like the &lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; this environment variable normally does not need to be set. By setting this you will instruct Vagrant to &lt;em&gt;prefer&lt;/em&gt; providers defined in this environment variable for any &lt;em&gt;new&lt;/em&gt; Vagrant environments. Existing Vagrant environments will continue to use the provider they came &lt;code&gt;up&lt;/code&gt; with. Once you &lt;code&gt;vagrant destroy&lt;/code&gt; existing environments, this will take effect. A single provider can be defined within this environment variable or a comma delimited list of providers.</source>
          <target state="translated">&lt;code&gt;VAGRANT_DEFAULT_PROVIDER&lt;/code&gt; 와 마찬가지로이 환경 변수는 일반적으로 설정할 필요가 없습니다. 이것을 설정함으로써 Vagrant는 &lt;em&gt;새로운&lt;/em&gt; Vagrant 환경 에 대해이 환경 변수에 정의 된 제공자 를 &lt;em&gt;선호&lt;/em&gt; 하도록 지시 합니다. 기존의 방랑 환경은 온 공급자 사용하는 것 &lt;code&gt;up&lt;/code&gt; 로합니다. &lt;code&gt;vagrant destroy&lt;/code&gt; 기존 환경을 파괴 하면 이것이 적용됩니다. 이 환경 변수 또는 쉼표로 구분 된 공급자 목록 내에 단일 공급자를 정의 할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac0284118e68afde878bdc64f5781f06250a9ced" translate="yes" xml:space="preserve">
          <source>Multi-Machine</source>
          <target state="translated">Multi-Machine</target>
        </trans-unit>
        <trans-unit id="b627b5b1f9f4992c3331f0e0afb741d3b5a24c5b" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;config.vm.provider&lt;/code&gt; blocks can exist to configure multiple providers.</source>
          <target state="translated">여러 제공자를 구성하기 위해 여러 개의 &lt;code&gt;config.vm.provider&lt;/code&gt; 블록이 존재할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dcd4893db45ef15c048e79af54b86e439eddcde" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;config.vm.provision&lt;/code&gt; methods can be used to define multiple provisioners. These provisioners will be run in the order they're defined. This is useful for a variety of reasons, but most commonly it is used so that a shell script can bootstrap some of the system so that another provisioner can take over later.</source>
          <target state="translated">여러 &lt;code&gt;config.vm.provision&lt;/code&gt; 메소드를 사용하여 여러 프로비저닝자를 정의 할 수 있습니다. 이러한 프로 비져는 정의 된 순서대로 실행됩니다. 이것은 여러 가지 이유로 유용하지만 가장 일반적으로 쉘 스크립트가 시스템의 일부를 부트 스트랩하여 다른 프로비저닝자가 나중에 인계받을 수 있도록 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="afeae5ed9823bd1e76850c2240b5952186d20ad8" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;customize&lt;/code&gt; directives can be used. They will be executed in the order given.</source>
          <target state="translated">여러 &lt;code&gt;customize&lt;/code&gt; 지정 지시문을 사용할 수 있습니다. 주어진 순서대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="191f1257f0f4996c113b89ad6c9c68bbbf930cf3" translate="yes" xml:space="preserve">
          <source>Multiple Networks</source>
          <target state="translated">여러 네트워크</target>
        </trans-unit>
        <trans-unit id="916db0683f1cf7ccdac0cd55ab1c9c6575ce207b" translate="yes" xml:space="preserve">
          <source>Multiple Provisioners</source>
          <target state="translated">여러 제공자</target>
        </trans-unit>
        <trans-unit id="2e7b6686ca712bc664635d606515a9ab6e73fbee" translate="yes" xml:space="preserve">
          <source>Multiple machines are defined within the same project &lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; using the &lt;code&gt;config.vm.define&lt;/code&gt; method call. This configuration directive is a little funny, because it creates a Vagrant configuration within a configuration. An example shows this best:</source>
          <target state="translated">&lt;code&gt;config.vm.define&lt;/code&gt; 메소드 호출을 사용하여 동일한 프로젝트 &lt;a href=&quot;../vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; 내에 여러 머신이 정의되어 있습니다. 이 구성 지시문은 구성 내에 Vagrant 구성을 생성하기 때문에 약간 재미 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6093f38c0fb304b90fd5dcbe4e1cc992e8a7d506" translate="yes" xml:space="preserve">
          <source>Multiple machines are defined within the same project &lt;a href=&quot;vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; using the &lt;code&gt;config.vm.define&lt;/code&gt; method call. This configuration directive is a little funny, because it creates a Vagrant configuration within a configuration. An example shows this best:</source>
          <target state="translated">&lt;code&gt;config.vm.define&lt;/code&gt; 메소드 호출을 사용하여 동일한 프로젝트 &lt;a href=&quot;vagrantfile/index&quot;&gt;Vagrantfile&lt;/a&gt; 내에 여러 머신이 정의되어 있습니다. 이 구성 지시문은 구성 내에 Vagrant 구성을 생성하기 때문에 약간 재미 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1358e8c17e9a9bf263eeb803bf1b8d1a3cd2f316" translate="yes" xml:space="preserve">
          <source>Multiple machines within the same private network (also usually with the restriction that they're backed by the same &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt;) can communicate with each other on private networks.</source>
          <target state="translated">동일한 개인 네트워크 내의 여러 컴퓨터 (일반적으로 동일한 &lt;a href=&quot;../providers/index&quot;&gt;공급자&lt;/a&gt; 가 지원하는 제한이 있음 )는 개인 네트워크에서 서로 통신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="364ad6bfe990b0337759b6bf3530321e512a906c" translate="yes" xml:space="preserve">
          <source>Multiple networks can be defined by having multiple &lt;code&gt;config.vm.network&lt;/code&gt; calls within the Vagrantfile. The exact meaning of this can differ for each &lt;a href=&quot;../providers/index&quot;&gt;provider&lt;/a&gt;, but in general the order specifies the order in which the networks are enabled.</source>
          <target state="translated">&lt;code&gt;config.vm.network&lt;/code&gt; 내에 여러 개의 config.vm.network 호출을 사용하여 여러 네트워크를 정의 할 수 있습니다 . 이것의 정확한 의미는 각 &lt;a href=&quot;../providers/index&quot;&gt;공급자&lt;/a&gt; 마다 다를 수 있지만 일반적으로 순서는 네트워크가 활성화되는 순서를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="52edc78ca08ee69117f0cf6ce93dea0f59450cc3" translate="yes" xml:space="preserve">
          <source>Multiple requirements can be specified as well:</source>
          <target state="translated">여러 요구 사항도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db1218651fb5d285bf3469a4750e2db41f4b8b5f" translate="yes" xml:space="preserve">
          <source>NFS</source>
          <target state="translated">NFS</target>
        </trans-unit>
        <trans-unit id="de3d132416f8e67b88ec58e73539e1b94ea6da2c" translate="yes" xml:space="preserve">
          <source>NFS Global Options</source>
          <target state="translated">NFS 글로벌 옵션</target>
        </trans-unit>
        <trans-unit id="25d305941bc0f404d7211aa884a3174ed8cc7d00" translate="yes" xml:space="preserve">
          <source>NFS Synced Folder Options</source>
          <target state="translated">NFS 동기화 폴더 옵션</target>
        </trans-unit>
        <trans-unit id="27ac39d312c989da590f6d6ce0b20cced6008685" translate="yes" xml:space="preserve">
          <source>NFS synced folders have a set of options that can be specified that are unique to NFS. These are listed below. These options can be specified in the final part of the &lt;code&gt;config.vm.synced_folder&lt;/code&gt; definition, along with the &lt;code&gt;type&lt;/code&gt; option.</source>
          <target state="translated">NFS 동기화 폴더에는 NFS에 고유 한 옵션 세트를 지정할 수 있습니다. 이들은 아래에 나열되어 있습니다. 이러한 옵션은 &lt;code&gt;type&lt;/code&gt; 옵션 과 함께 &lt;code&gt;config.vm.synced_folder&lt;/code&gt; 정의 의 마지막 부분에서 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf69dc6536a2448b7024a6076b463e67228ec2a5" translate="yes" xml:space="preserve">
          <source>NFSv4.0 - &lt;a href=&quot;https://tools.ietf.org/html/rfc7530#section-3.1&quot;&gt;RFC7530&lt;/a&gt;</source>
          <target state="translated">NFSv4.0- &lt;a href=&quot;https://tools.ietf.org/html/rfc7530#section-3.1&quot;&gt;RFC7530&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29ae97a04c46e5d13cfcd3aa9ba948f7402c5b6e" translate="yes" xml:space="preserve">
          <source>NFSv4.1 - &lt;a href=&quot;https://tools.ietf.org/html/rfc5661#section-2.9.1&quot;&gt;RFC5661&lt;/a&gt;</source>
          <target state="translated">NFSv4.1- &lt;a href=&quot;https://tools.ietf.org/html/rfc5661#section-2.9.1&quot;&gt;RFC5661&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caa8524622dad7eb7a40561007fd7610b4529141" translate="yes" xml:space="preserve">
          <source>Name of a box installed into Vagrant.</source>
          <target state="translated">Vagrant에 설치된 상자의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="56af753cd8a9339a96ff1181471327e4cf51b2a9" translate="yes" xml:space="preserve">
          <source>Naming provisioners is simple. The first argument to &lt;code&gt;config.vm.provision&lt;/code&gt; becomes the name, and then a &lt;code&gt;type&lt;/code&gt; option is used to specify the provisioner type, such as &lt;code&gt;type: &quot;shell&quot;&lt;/code&gt; above.</source>
          <target state="translated">프로 비져 이름 지정은 간단합니다. &lt;code&gt;config.vm.provision&lt;/code&gt; 의 첫 번째 인수 가 이름이되고 &lt;code&gt;type&lt;/code&gt; 옵션은 위의 &lt;code&gt;type: &quot;shell&quot;&lt;/code&gt; 과 같은 provisioner 유형을 지정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b664f49b8a69ae8c03348868ec8e4949006c4829" translate="yes" xml:space="preserve">
          <source>Network disconnect</source>
          <target state="translated">네트워크 연결 끊기</target>
        </trans-unit>
        <trans-unit id="1e91748557010f07119a40ac844fcae91cc2e7a3" translate="yes" xml:space="preserve">
          <source>Networking</source>
          <target state="translated">Networking</target>
        </trans-unit>
        <trans-unit id="2eeb106af116d471136575e6cd629b959e9baa7d" translate="yes" xml:space="preserve">
          <source>Networks are automatically configured and enabled after they've been defined in the Vagrantfile as part of the &lt;code&gt;vagrant up&lt;/code&gt; or &lt;code&gt;vagrant reload&lt;/code&gt; process.</source>
          <target state="translated">네트워크는 Vagrant &lt;code&gt;vagrant up&lt;/code&gt; 또는 Vagrant &lt;code&gt;vagrant reload&lt;/code&gt; 프로세스의 일부로 Vagrantfile에 정의 된 후 자동으로 구성 및 활성화 됩니다.</target>
        </trans-unit>
        <trans-unit id="2b52cbc549f82c2c86c9f99818ab2657aa72070e" translate="yes" xml:space="preserve">
          <source>Newlines within the format are replaced with their respective standard escape sequence. Newlines become a literal &lt;code&gt;\n&lt;/code&gt; within the output. Carriage returns become a literal &lt;code&gt;\r&lt;/code&gt;.</source>
          <target state="translated">형식 내의 줄 바꿈은 해당 표준 이스케이프 시퀀스로 바뀝니다. 줄 바꿈 은 출력 내에서 리터럴 &lt;code&gt;\n&lt;/code&gt; 됩니다. 캐리지 리턴은 리터럴 &lt;code&gt;\r&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="294d5f6f53f529b9512adffbadb7daa5d93c399e" translate="yes" xml:space="preserve">
          <source>Next create a directory for the executable and unpack the executable as root.</source>
          <target state="translated">그런 다음 실행 파일의 디렉토리를 작성하고 실행 파일을 루트로 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="28a7587048090d12b6bf8333d8e3373b900d28b9" translate="yes" xml:space="preserve">
          <source>Next, &lt;code&gt;cd&lt;/code&gt; into that path. All commands will be run from this path:</source>
          <target state="translated">다음, &lt;code&gt;cd&lt;/code&gt; 해당 경로에. 모든 명령은이 경로에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="ebee4e60c95d98c8833c3ac2bcecd4876d16cb4c" translate="yes" xml:space="preserve">
          <source>Next, create a &lt;code&gt;Rakefile&lt;/code&gt; that has at the very least, the following contents:</source>
          <target state="translated">다음으로 최소한 다음 내용을 가진 &lt;code&gt;Rakefile&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c81d2d1e80deda5e8d7f189984ca00e8ff88b2e8" translate="yes" xml:space="preserve">
          <source>Next, install the Vagrant VMware provider plugin using the standard plugin installation procedure:</source>
          <target state="translated">다음으로 표준 플러그인 설치 절차를 사용하여 Vagrant VMware 제공자 플러그인을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="f9c0cdaa8a33ff3ef5f69311063a1a064db4d4f7" translate="yes" xml:space="preserve">
          <source>Next, make sure that the guest additions image is available by using the GUI and clicking on &quot;Devices&quot; followed by &quot;Install Guest Additions&quot;. Then mount the CD-ROM to some location. On Ubuntu, this usually looks like this:</source>
          <target state="translated">다음으로 GUI를 사용하고 &quot;장치&quot;와 &quot;게스트 추가 설치&quot;를 차례로 클릭하여 게스트 추가 이미지를 사용할 수 있는지 확인하십시오. 그런 다음 CD-ROM을 특정 위치에 마운트하십시오. 우분투에서는 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a5cc7077d4803cda51f435459fd28a20b0cbd658" translate="yes" xml:space="preserve">
          <source>Normally, the Chef Server is responsible for specifying the run list for the node. However, you can override what the Chef Server sends down by manually specifying a run list:</source>
          <target state="translated">일반적으로 Chef 서버는 노드의 실행 목록을 지정합니다. 그러나 실행 목록을 수동으로 지정하여 Chef 서버가 전송하는 내용을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cb68c4012bea3743b2cd179927229697763b1c7" translate="yes" xml:space="preserve">
          <source>Note that Vagrantfile stability for the new Vagrantfile syntax is not promised until 2.0 final. So while Vagrantfiles made for 1.0.x will &lt;a href=&quot;backwards-compatibility&quot;&gt;continue to work&lt;/a&gt;, newer Vagrantfiles may have backwards incompatible changes until 2.0 final.</source>
          <target state="translated">새로운 Vagrantfile 구문에 대한 Vagrantfile 안정성은 2.0 final까지 보장되지 않습니다. 따라서 1.0.x 용 Vagrantfile은 &lt;a href=&quot;backwards-compatibility&quot;&gt;계속 작동&lt;/a&gt; 하지만 최신 Vagrantfile은 2.0 최종 버전까지 호환되지 않는 변경 사항을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce60dac6bb9935ba60876ffae35c59e2649bcf7c" translate="yes" xml:space="preserve">
          <source>Note that any &lt;code&gt;vagrant plugin&lt;/code&gt; commands automatically do not load any plugins, so if you do install any unstable plugins, you can always use the &lt;code&gt;vagrant plugin&lt;/code&gt; commands without having to worry.</source>
          <target state="translated">참고 그 어떤 &lt;code&gt;vagrant plugin&lt;/code&gt; 명령을 자동으로 불안정한 플러그인을 설치하는 경우에 그래서, 당신은 항상 사용할 수있는 플러그인을로드하지 않는 &lt;code&gt;vagrant plugin&lt;/code&gt; 걱정할 필요없이 명령.</target>
        </trans-unit>
        <trans-unit id="cc18c52130b65224d962b183a0684a6db4a36796" translate="yes" xml:space="preserve">
          <source>Note that any client certificates, insecure download settings, and so on will apply to all URLs in this list. The URLs can also be local files by using the &lt;code&gt;file://&lt;/code&gt; scheme. For example: &quot;file:///tmp/test.box&quot;.</source>
          <target state="translated">모든 클라이언트 인증서, 안전하지 않은 다운로드 설정 등이이 목록의 모든 URL에 적용됩니다. &lt;code&gt;file://&lt;/code&gt; 체계를 사용하여 URL은 로컬 파일 일 수도 있습니다 . 예 : &quot;file : ///tmp/test.box&quot;</target>
        </trans-unit>
        <trans-unit id="90e19db251d8e7c2e0669ba79ba0db7ff82ecbb7" translate="yes" xml:space="preserve">
          <source>Note that as of the publishing of this guide, the Microsoft RDP Client for Mac does &lt;em&gt;not&lt;/em&gt; perform validation on the configuration file. This means if you specify an invalid configuration option or make a typographical error, the client will silently ignore the error and continue!</source>
          <target state="translated">이 가이드를 게시 할 때 Mac 용 Microsoft RDP 클라이언트 는 구성 파일에 대한 유효성 검사를 수행 하지 &lt;em&gt;않습니다&lt;/em&gt; . 즉, 잘못된 구성 옵션을 지정하거나 인쇄상의 오류가 발생하면 클라이언트는 자동으로 오류를 무시하고 계속합니다!</target>
        </trans-unit>
        <trans-unit id="1ceb8c186d09620ab0d3bb59def920f037362c86" translate="yes" xml:space="preserve">
          <source>Note that if you change any settings within the rsync synced folders such as exclude paths, you will need to &lt;code&gt;vagrant reload&lt;/code&gt; before this command will pick up those changes.</source>
          <target state="translated">경로 제외와 같은 rsync 동기화 폴더 내에서 설정을 변경하는 경우이 명령이 변경 사항을 적용하기 전에 &lt;code&gt;vagrant reload&lt;/code&gt; 를 분산 시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="feac1bff502ff7e12695de16a27f66139fcbfcac" translate="yes" xml:space="preserve">
          <source>Note that the &quot;name&quot; corresponds to the name of the VM, &lt;strong&gt;not&lt;/strong&gt; the name of the Docker container. Consider the following Vagrantfile:</source>
          <target state="translated">&quot;name&quot; 은 Docker 컨테이너의 이름이 &lt;strong&gt;아니라&lt;/strong&gt; VM 의 이름에 해당합니다. 다음 Vagrantfile을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="7ee6a0533cdebffc3ab170151736276d1cb15364" translate="yes" xml:space="preserve">
          <source>Note that the generated inventory file is stored as part of your local Vagrant environment in &lt;code&gt;.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory&lt;/code&gt;.</source>
          <target state="translated">생성 된 인벤토리 파일은 로컬 Vagrant 환경의 &lt;code&gt;.vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="6b76d48cd0fb62e0e80270a746219beb46df7019" translate="yes" xml:space="preserve">
          <source>Note that the generated inventory file is uploaded to the guest VM in a subdirectory of &lt;a href=&quot;ansible_local&quot;&gt;&lt;code&gt;tmp_path&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;/tmp/vagrant-ansible/inventory/vagrant_ansible_local_inventory&lt;/code&gt;.</source>
          <target state="translated">생성 된 자원 명세 파일은 &lt;a href=&quot;ansible_local&quot;&gt; &lt;code&gt;tmp_path&lt;/code&gt; &lt;/a&gt; 의 서브 디렉토리 ( 예 : &lt;code&gt;/tmp/vagrant-ansible/inventory/vagrant_ansible_local_inventory&lt;/code&gt; ) 의 게스트 VM에 업로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="a187f9b40ea2cdb8c0e4844bbad06a4a9b4e7020" translate="yes" xml:space="preserve">
          <source>Note that this does not work for every OS, so &lt;code&gt;vagrant up&lt;/code&gt; with the above settings, do a kernel upgrade, and do a &lt;code&gt;vagrant reload&lt;/code&gt;. If HGFS (synced folders) and everything appears to be working, great! If not, then read on...</source>
          <target state="translated">이것은 모든 OS에서 작동하지 않으므로 위의 설정으로 &lt;code&gt;vagrant up&lt;/code&gt; 하고 커널을 업그레이드하고 &lt;code&gt;vagrant reload&lt;/code&gt; . HGFS (동기화 된 폴더) 및 모든 것이 작동하는 것 같으면 좋습니다! 그렇지 않다면 계속 읽으십시오 ...</target>
        </trans-unit>
        <trans-unit id="067d1ea5e6fdb0517b86932e6d67b85630f4951b" translate="yes" xml:space="preserve">
          <source>Note that when the &lt;code&gt;verbose&lt;/code&gt; option is enabled, the &lt;code&gt;ansible-playbook&lt;/code&gt; command used by Vagrant will be displayed.</source>
          <target state="translated">때 참고 &lt;code&gt;verbose&lt;/code&gt; 옵션이 활성화되면, &lt;code&gt;ansible-playbook&lt;/code&gt; 방랑에서 사용하는 명령이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="660b70b0180040682f5a22718a39c86ea7b1e06b" translate="yes" xml:space="preserve">
          <source>Note that while you have to run a special command to list the non-primary subcommands, you do not have to do anything special to actually &lt;em&gt;run&lt;/em&gt; the non-primary subcommands. They're executed just like any other subcommand: &lt;code&gt;vagrant COMMAND&lt;/code&gt;.</source>
          <target state="translated">기본이 아닌 하위 명령을 나열하기 위해 특수 명령을 실행해야하지만 실제로 기본이 아닌 하위 명령을 &lt;em&gt;실행&lt;/em&gt; 하기 위해 특별한 작업을 수행 할 필요는 없습니다 . 다른 하위 명령 인 &lt;code&gt;vagrant COMMAND&lt;/code&gt; 와 마찬가지로 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="4a9ee32338df20dbb0b49795f42d4ca565b7db88" translate="yes" xml:space="preserve">
          <source>Note that you &lt;em&gt;will&lt;/em&gt; receive warnings that running Vagrant like this is not supported. It's true. It's not. You should listen to those warnings.</source>
          <target state="translated">이와 같이 Vagrant를 실행할 수 없다는 경고 메시지 &lt;em&gt;가 표시&lt;/em&gt; 됩니다. 사실입니다. 그렇지 않습니다. 당신은 그 경고를 들어야합니다.</target>
        </trans-unit>
        <trans-unit id="02b025a1ff9efb7c38cbdeac89776fd9326ddc5c" translate="yes" xml:space="preserve">
          <source>Note that, unlike with synced folders, files or directories that are uploaded will not be kept in sync. Continuing with the example above, if you make further changes to your local ~/.gitconfig, they will not be immediately reflected in the copy you uploaded to the guest machine.</source>
          <target state="translated">동기화 된 폴더와 달리 업로드 된 파일 또는 디렉토리는 동기화되지 않습니다. 위의 예를 계속하여 로컬 ~ / .gitconfig를 추가로 변경하면 게스트 컴퓨터에 업로드 한 사본에 즉시 반영되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0dee0bbba2502191673fe08619687e25d6dc9512" translate="yes" xml:space="preserve">
          <source>Note the above is fairly complex and may be guest OS specific, but we document the rough idea of how to do it because it is a common question.</source>
          <target state="translated">위의 내용은 상당히 복잡하고 게스트 운영 체제에 따라 다를 수 있지만 일반적인 질문이므로이를 수행하는 방법에 대한 대략적인 아이디어를 문서화했습니다.</target>
        </trans-unit>
        <trans-unit id="c402793aa54c9ef9717641922a9669adccd48aec" translate="yes" xml:space="preserve">
          <source>Note the share name at the end of calling &lt;code&gt;vagrant share --full&lt;/code&gt;, and give this to the person who wants to connect to your machine. They simply have to call &lt;code&gt;vagrant connect NAME&lt;/code&gt;. This will give them a static IP they can use to access your Vagrant environment.</source>
          <target state="translated">&lt;code&gt;vagrant share --full&lt;/code&gt; 을 호출 할 때 공유 이름 을 기록하고이를 컴퓨터에 연결하려는 사람에게 제공하십시오. 그들은 단순히 &lt;code&gt;vagrant connect NAME&lt;/code&gt; 을 호출해야합니다 . 이렇게하면 Vagrant 환경에 액세스하는 데 사용할 수있는 고정 IP가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a3127e09b87bc76889418d6f246689258a183972" translate="yes" xml:space="preserve">
          <source>Note: This option has no effect when the &lt;code&gt;inventory_path&lt;/code&gt; option is defined.</source>
          <target state="translated">참고 :이 옵션은 &lt;code&gt;inventory_path&lt;/code&gt; 옵션이 정의 된 경우 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="18caed559d444597fe912163b66d871eaef62ecd" translate="yes" xml:space="preserve">
          <source>Note: if an absolute path is given, the &lt;code&gt;ansible_local&lt;/code&gt; provisioner will assume that it corresponds to the exact location on the guest system.</source>
          <target state="translated">참고 : 절대 경로가 제공되면 &lt;code&gt;ansible_local&lt;/code&gt; 제공 업체는 게스트 시스템의 정확한 위치에 해당한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="1cac5fbf5904ff4099cff7e205a4477956738a22" translate="yes" xml:space="preserve">
          <source>Now that the trigger is defined, running the &lt;strong&gt;destroy&lt;/strong&gt; command will fire off the defined trigger before Vagrant destroys the machine.</source>
          <target state="translated">트리거가 정의 되었으므로 &lt;strong&gt;destroy&lt;/strong&gt; 명령을 실행하면 Vagrant가 시스템을 파괴하기 전에 정의 된 트리거가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="eb08a6211408dcd42186a6313f65bb79bbae65d3" translate="yes" xml:space="preserve">
          <source>Now, each component has a different API. Please visit the relevant section using the navigation to the left under &quot;Plugins&quot; to learn more about developing each type of component.</source>
          <target state="translated">이제 각 구성 요소마다 다른 API가 있습니다. 각 유형의 구성 요소 개발에 대한 자세한 내용을 보려면 &quot;플러그인&quot;아래의 왼쪽 탐색을 사용하여 관련 섹션을 방문하십시오.</target>
        </trans-unit>
        <trans-unit id="d03211815f53b3c71ee90e0c516c4715cae898b6" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;$vagrant&lt;/code&gt; variable in your Puppet manifests will equal &quot;1&quot;.</source>
          <target state="translated">이제 퍼펫 매니페스트 의 &lt;code&gt;$vagrant&lt;/code&gt; 변수는 &quot;1&quot;과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0a514cf330b40ca1c53c6800bcbfada4be6cf93d" translate="yes" xml:space="preserve">
          <source>Of course, if any Ruby in your Vagrantfile outside of basic variable assignment makes you uncomfortable, you can use an actual script file, documented in the next section.</source>
          <target state="translated">물론 기본 변수 할당 이외의 Vagrantfile에있는 루비로 인해 불편한 경우 다음 섹션에 설명 된 실제 스크립트 파일을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2faee913d33c8d54f7369ab5e83dfbec2224ef5" translate="yes" xml:space="preserve">
          <source>Of course, sometimes you want custom merge logic. Let us say we wanted our widgets to be additive. We can override the &lt;code&gt;merge&lt;/code&gt; method to do this:</source>
          <target state="translated">물론 때로는 사용자 지정 병합 논리를 원할 수도 있습니다. 위젯을 추가하고 싶다고 가정 해 봅시다. 우리 는 이것을하기 위해 &lt;code&gt;merge&lt;/code&gt; 메소드를 오버라이드 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="83a889bca8008d648cbc7c0d22db4ce488b32df0" translate="yes" xml:space="preserve">
          <source>Of course, you are able to put and name your manifests whatever you would like. You can override both the directory where Puppet looks for manifests with &lt;code&gt;manifests_path&lt;/code&gt;, and the manifest file used as the entry-point with &lt;code&gt;manifest_file&lt;/code&gt;:</source>
          <target state="translated">물론 원하는대로 매니페스트를 넣고 이름을 지정할 수 있습니다. 당신은 꼭두각시와 매니페스트를 검색 디렉토리를 모두 대체 할 수 있습니다 &lt;code&gt;manifests_path&lt;/code&gt; 과 함께 진입 점으로 사용 매니페스트 파일 &lt;code&gt;manifest_file&lt;/code&gt; 을 :</target>
        </trans-unit>
        <trans-unit id="7776ee775f2891bc8aaacf873531bc4a78235438" translate="yes" xml:space="preserve">
          <source>Official Boxes</source>
          <target state="translated">공식 박스</target>
        </trans-unit>
        <trans-unit id="5c2686a4906358c60506b8e81f6f3b0eec56b782" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Linux&lt;/strong&gt;:</source>
          <target state="translated">에 &lt;strong&gt;리눅스&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="652493caf1f232197dd2717e02431e61a85c3ab5" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Mac OS X&lt;/strong&gt;:</source>
          <target state="translated">에 &lt;strong&gt;맥 OS X&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="a737a9c79b77694e9dfaead6a78d114c2410237c" translate="yes" xml:space="preserve">
          <source>On &lt;strong&gt;Windows&lt;/strong&gt;</source>
          <target state="translated">에 &lt;strong&gt;윈도우&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf9f5d225b5cdd8237e849f8aded21566dbd79b0" translate="yes" xml:space="preserve">
          <source>On Darwin hosts, such as Mac OS X, the additional arguments are added to the generated RDP configuration file. Since these files can contain multiple options with different spacing, you &lt;em&gt;must&lt;/em&gt; quote multiple arguments. For example:</source>
          <target state="translated">Mac OS X와 ​​같은 Darwin 호스트에서는 추가 인수가 생성 된 RDP 구성 파일에 추가됩니다. 이러한 파일에는 간격이 다른 여러 옵션이 포함될 수 있으므로 여러 인수 &lt;em&gt;를&lt;/em&gt; 인용 &lt;em&gt;해야합니다&lt;/em&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e950a464438407bc3db7351e9229ed72e1693615" translate="yes" xml:space="preserve">
          <source>On Linux and Mac systems, this can be done by prepending the &lt;code&gt;vagrant&lt;/code&gt; command with an environmental variable declaration:</source>
          <target state="translated">Linux 및 Mac 시스템에서는 환경 변수 선언에 &lt;code&gt;vagrant&lt;/code&gt; 명령을 추가하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0e2cb88928f884cf17e6467f7b48e43952ddca5" translate="yes" xml:space="preserve">
          <source>On Linux and Mac, if you are saving the output to a file, you may need to redirect stderr and stdout using &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Linux 및 Mac에서 출력을 파일로 저장하는 경우 &lt;code&gt;&amp;amp;&amp;gt;&lt;/code&gt; 를 사용하여 stderr 및 stdout을 경로 재지 정해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e9e689e79a1b2299bbd716cdfd99c9fc80b96c1" translate="yes" xml:space="preserve">
          <source>On POSIX platforms these certificates can be found at:</source>
          <target state="translated">POSIX 플랫폼에서 이러한 인증서는 다음에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b6e4e382ccd5721fd6411fcddce1b738035728e" translate="yes" xml:space="preserve">
          <source>On RedHat-like systems, the latest Ansible release is installed from the &lt;a href=&quot;http://fedoraproject.org/wiki/EPEL&quot;&gt;EPEL&lt;/a&gt; repository.</source>
          <target state="translated">RedHat와 유사한 시스템에서 최신 Ansible 릴리스는 &lt;a href=&quot;http://fedoraproject.org/wiki/EPEL&quot;&gt;EPEL&lt;/a&gt; 저장소 에서 설치됩니다 .</target>
        </trans-unit>
        <trans-unit id="e15c7b6d88927072c328e6350702cbe11e550a55" translate="yes" xml:space="preserve">
          <source>On RedHat-like systems, the latest Ansible release is installed from the &lt;a href=&quot;https://fedoraproject.org/wiki/EPEL&quot;&gt;EPEL&lt;/a&gt; repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a62abb69755a504d48f2ade77691a5af3205435" translate="yes" xml:space="preserve">
          <source>On Ubuntu-like systems, the latest Ansible release is installed from the &lt;code&gt;ppa:ansible/ansible&lt;/code&gt; repository. The compatibility is maintained only for active long-term support (LTS) versions.</source>
          <target state="translated">Ubuntu와 유사한 시스템에서 최신 Ansible 릴리스는 &lt;code&gt;ppa:ansible/ansible&lt;/code&gt; 저장소 에서 설치됩니다 . 호환성은 활성 장기 지원 (LTS) 버전에 대해서만 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="76476af42d248b68fb80718f98507fd54c9317bf" translate="yes" xml:space="preserve">
          <source>On Windows guests, this requires PowerShell 3.0 or higher.</source>
          <target state="translated">Windows 게스트의 경우 PowerShell 3.0 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8d0e60b7704f3b9163a3642055f83c510282f335" translate="yes" xml:space="preserve">
          <source>On Windows in PowerShell (outputs to log and screen):</source>
          <target state="translated">Windows PowerShell의 경우 (로그 및 화면 출력) :</target>
        </trans-unit>
        <trans-unit id="2344acd3ab9f869011a68d9abd3d780ef6d284bc" translate="yes" xml:space="preserve">
          <source>On Windows platforms a service is created called &lt;code&gt;vagrant-vmware-utility&lt;/code&gt;. The service can be manually started using the services GUI (&lt;code&gt;services.msc&lt;/code&gt;) or by running the following command from a &lt;code&gt;cmd.exe&lt;/code&gt; in administrator mode:</source>
          <target state="translated">Windows 플랫폼에서 &lt;code&gt;vagrant-vmware-utility&lt;/code&gt; 라는 서비스가 작성 됩니다. 서비스는 서비스 GUI ( &lt;code&gt;services.msc&lt;/code&gt; )를 사용하거나 관리자 모드 의 &lt;code&gt;cmd.exe&lt;/code&gt; 에서 다음 명령을 실행 하여 수동으로 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9225e747f0a2b789bf5a37e3909c95176ccf9cd1" translate="yes" xml:space="preserve">
          <source>On Windows platforms these certificates can be found at:</source>
          <target state="translated">Windows 플랫폼에서이 인증서는 다음에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6231aff14e87e4a3de2e8164bfe5ed7fe4347d8" translate="yes" xml:space="preserve">
          <source>On Windows, if a file is not accessed for some period of time, it may disconnect from the guest and prevent the guest from accessing the SMB-mounted share. To prevent this, the following command can be used in a superuser shell. Note that you should research if this is the right option for you.</source>
          <target state="translated">Windows에서 일정 기간 동안 파일에 액세스하지 않으면 게스트와의 연결이 끊어져 게스트가 SMB 탑재 공유에 액세스하지 못할 수 있습니다. 이를 방지하기 위해 수퍼 유저 쉘에서 다음 명령을 사용할 수 있습니다. 이것이 올바른 옵션인지 조사해야합니다.</target>
        </trans-unit>
        <trans-unit id="705befe7c23abe1b3d4088a55c8692fd96fd14b9" translate="yes" xml:space="preserve">
          <source>On Windows, multiple steps are required:</source>
          <target state="translated">Windows에서는 여러 단계가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="cf58c8f6cef73feccef7a9ddf8c98218135b28d8" translate="yes" xml:space="preserve">
          <source>On Windows, rsync installed with Cygwin or MinGW will be detected by Vagrant and works well.</source>
          <target state="translated">Windows에서는 Cygwin 또는 MinGW와 함께 설치된 rsync가 Vagrant에 의해 감지되어 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="67ea0546a5dc80566bcbe86b909964292914dc23" translate="yes" xml:space="preserve">
          <source>On a simple vagrant project, the instance created will be named default.</source>
          <target state="translated">간단한 방랑 프로젝트에서는 생성 된 인스턴스의 이름이 default로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="4443390d9be6392a5425989b735865130a6ef05d" translate="yes" xml:space="preserve">
          <source>On a system with machines running from different projects, you could use the id as listed in &lt;code&gt;vagrant global-status&lt;/code&gt;</source>
          <target state="translated">다른 프로젝트에서 실행되는 컴퓨터가있는 시스템에서는 &lt;code&gt;vagrant global-status&lt;/code&gt; 나열된 ID를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fcef729e70a50da58caca15e03a190a0cb850b2" translate="yes" xml:space="preserve">
          <source>On all platforms, remove the &lt;code&gt;~/.vagrant.d&lt;/code&gt; directory to delete the user data. When debugging, the Vagrant support team may ask you to remove this directory. Before removing this directory, please make a backup.</source>
          <target state="translated">모든 플랫폼에서 &lt;code&gt;~/.vagrant.d&lt;/code&gt; 디렉토리를 제거 하여 사용자 데이터를 삭제하십시오. 디버깅 할 때 Vagrant 지원 팀이이 디렉토리를 제거하도록 요청할 수 있습니다. 이 디렉토리를 제거하기 전에 백업하십시오.</target>
        </trans-unit>
        <trans-unit id="c7d8c9bbcfc664a434a431312d9e05e2ae00cc27" translate="yes" xml:space="preserve">
          <source>On multi-machine setups, you can login to each vm using the name as displayed on &lt;code&gt;vagrant status&lt;/code&gt;</source>
          <target state="translated">다중 머신 설정에서, &lt;code&gt;vagrant status&lt;/code&gt; 표시된 이름을 사용하여 각 VM에 로그인 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="34afabb776125a02fce54da1cc8bec8880669a80" translate="yes" xml:space="preserve">
          <source>On the first &lt;code&gt;vagrant up&lt;/code&gt; that creates the environment, provisioning is run. If the environment was already created and the up is just resuming a machine or booting it up, they will not run unless the &lt;code&gt;--provision&lt;/code&gt; flag is explicitly provided.</source>
          <target state="translated">환경을 만드는 첫 번째 &lt;code&gt;vagrant up&lt;/code&gt; 에서 프로비저닝이 실행됩니다. 환경이 이미 생성되었고 가동이 시스템을 재개하거나 부팅하는 경우 &lt;code&gt;--provision&lt;/code&gt; 이 아니면 실행되지 않습니다. 플래그가 명시 적으로 제공 .</target>
        </trans-unit>
        <trans-unit id="1a33ff91c8827106a8b3cb9068d91d0661e61082" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;https://docs.ansible.com/intro_installation.html#installing-the-control-machine&quot;&gt;Ansible must obviously be installed&lt;/a&gt; on your guest machine(s).</source>
          <target state="translated">반면 &lt;a href=&quot;https://docs.ansible.com/intro_installation.html#installing-the-control-machine&quot;&gt;Ansible은 분명히 설치되어야합니다&lt;/a&gt; 게스트 머신에 .</target>
        </trans-unit>
        <trans-unit id="39e4c06ec344123d76fe3220f0eef731e420ca3e" translate="yes" xml:space="preserve">
          <source>Once a plugin is installed, it will automatically be loaded by Vagrant. Plugins which cannot be loaded should not crash Vagrant. Instead, Vagrant will show an error message that a plugin failed to load.</source>
          <target state="translated">플러그인이 설치되면 Vagrant에 의해 자동으로로드됩니다. 로드 할 수없는 플러그인은 Vagrant와 충돌하지 않아야합니다. 대신 Vagrant는 플러그인을로드하지 못했다는 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="7c9a7bb0f60a58d32a99620ee426aabbb705318f" translate="yes" xml:space="preserve">
          <source>Once a plugin is installed, you should refer to the plugin's documentation to see exactly how to use it. Plugins which add commands should be instantly available via &lt;code&gt;vagrant&lt;/code&gt;, provisioners should be available via &lt;code&gt;config.vm.provision&lt;/code&gt;, etc.</source>
          <target state="translated">플러그인이 설치되면 플러그인 설명서를 참조하여 플러그인 사용법을 정확하게 확인해야합니다. 명령을 통해 즉시 사용할 수 있어야 추가 플러그인 &lt;code&gt;vagrant&lt;/code&gt; , provisioners을 통해 사용할 수 있어야 &lt;code&gt;config.vm.provision&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="5c8593feb53f90b4b2b16fc951e5e5988aea5c8e" translate="yes" xml:space="preserve">
          <source>Once a provider is installed, you can use it by calling &lt;code&gt;vagrant up&lt;/code&gt; with the &lt;code&gt;--provider&lt;/code&gt; flag. This will force Vagrant to use that specific provider. No other configuration is necessary!</source>
          <target state="translated">공급자가 설치되면, 당신은 호출하여 사용할 수 있습니다 &lt;code&gt;vagrant up&lt;/code&gt; 와 &lt;code&gt;--provider&lt;/code&gt; 플래그. 이로 인해 Vagrant는 해당 특정 제공자를 사용하게됩니다. 다른 구성이 필요하지 않습니다!</target>
        </trans-unit>
        <trans-unit id="234d9f90bb05df7a4b8ea228ddf6bb38000e5120" translate="yes" xml:space="preserve">
          <source>Once the directory structure for a RubyGem is setup, you will want to modify your Gemfile. Here is the basic structure of a Gemfile for Vagrant plugin development:</source>
          <target state="translated">RubyGem의 디렉토리 구조가 설정되면 Gemfile을 수정해야합니다. Vagrant 플러그인 개발을위한 Gemfile의 기본 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41b5284ddbd26f537de0610a37e46d1219377e7d" translate="yes" xml:space="preserve">
          <source>Once the provider is installed, usage is straightforward and simple, as you would expect with Vagrant. Read into the relevant subsections found in the navigation to the left for more information.</source>
          <target state="translated">제공자가 설치되면 Vagrant와 마찬가지로 사용이 간단하고 간단합니다. 자세한 내용은 왼쪽 탐색에서 찾은 관련 하위 섹션을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="78111d405fc157765c9e1c25aa8e20b4b8cbda48" translate="yes" xml:space="preserve">
          <source>One of Vagrant's biggest strength is gracefully handling errors and reporting them in human-readable ways. Vagrant has always strongly believed that if a user sees a stack trace, it is a bug. It is expected that plugins will behave the same way, and Vagrant provides strong error handling mechanisms to assist with this.</source>
          <target state="translated">Vagrant의 가장 큰 장점 중 하나는 오류를 정상적으로 처리하고 사람이 읽을 수있는 방식으로보고하는 것입니다. Vagrant는 사용자가 스택 추적을 보면 버그라고 믿었습니다. 플러그인은 동일한 방식으로 작동 할 것으로 예상되며 Vagrant는이를 지원하는 강력한 오류 처리 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c3221511596bae4a217f590b4246742d27a6cc84" translate="yes" xml:space="preserve">
          <source>One of the following settings is required when using the Docker provider:</source>
          <target state="translated">Docker 공급자를 사용하려면 다음 설정 중 하나가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7e36a373e5b0047d7036689b92744d87646c4bc0" translate="yes" xml:space="preserve">
          <source>Only files which are committed to the Git repository will be pushed to Heroku. Additionally, the current working branch is always pushed to the Heroku, even if it is not the &quot;master&quot; branch.</source>
          <target state="translated">Git 리포지토리에 커밋 된 파일 만 Heroku로 푸시됩니다. 또한 현재 작업 지점은 &quot;마스터&quot;지점이 아니더라도 항상 Heroku로 푸시됩니다.</target>
        </trans-unit>
        <trans-unit id="d6d4116e9e8c0455c2e494ea531f5010deb4987c" translate="yes" xml:space="preserve">
          <source>Open &quot;System Preferences&quot;</source>
          <target state="translated">&quot;시스템 환경 설정&quot;을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="a177c45323864b272426e4836c2f96c0b21b91ef" translate="yes" xml:space="preserve">
          <source>Optimizing Box Size</source>
          <target state="translated">상자 크기 최적화</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="f05f8c87ffa8680c818675d1825fc86d52167c4b" translate="yes" xml:space="preserve">
          <source>Optionally, you can configure provisioners to run on every &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;reload&lt;/code&gt;. They will only be not run if the &lt;code&gt;--no-provision&lt;/code&gt; flag is explicitly specified. To do this set the &lt;code&gt;run&lt;/code&gt; option to &quot;always&quot;, as shown below:</source>
          <target state="translated">선택적으로 프로 비 &lt;code&gt;reload&lt;/code&gt; &lt;code&gt;up&lt;/code&gt; 또는 reload 마다 실행될 수 있도록 구성 할 수 있습니다 . &lt;code&gt;--no-provision&lt;/code&gt; 플래그가 명시 적으로 지정된 경우에만 실행되지 않습니다 . 이렇게하려면 아래와 같이 &lt;code&gt;run&lt;/code&gt; 옵션을 &quot;항상&quot;으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="c67772bd3d8fc11593f73b0750824c440b963ddd" translate="yes" xml:space="preserve">
          <source>Options Reference</source>
          <target state="translated">옵션 참조</target>
        </trans-unit>
        <trans-unit id="a32f733554f1073ac7e80074cbb7830cb8a926ed" translate="yes" xml:space="preserve">
          <source>Options for direct box files</source>
          <target state="translated">다이렉트 박스 파일 옵션</target>
        </trans-unit>
        <trans-unit id="db375c791f734b22782405e261cd74601764bd99" translate="yes" xml:space="preserve">
          <source>Or you could use the name:</source>
          <target state="translated">또는 이름을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="1bb7333303807ea65203eaea7c78ada490b61c4a" translate="yes" xml:space="preserve">
          <source>Other Configuration Options</source>
          <target state="translated">다른 구성 옵션</target>
        </trans-unit>
        <trans-unit id="c3d3c4866430b9fb40dc785b255d6960dd731ff7" translate="yes" xml:space="preserve">
          <source>Other Notes</source>
          <target state="translated">기타 사항</target>
        </trans-unit>
        <trans-unit id="04b0b62577accbcaf59e05940a29f4285007e510" translate="yes" xml:space="preserve">
          <source>Other Software</source>
          <target state="translated">다른 소프트웨어</target>
        </trans-unit>
        <trans-unit id="4faeabd5fd6405bc6eb3cd2f9f06d910bf133318" translate="yes" xml:space="preserve">
          <source>Other commands, such as &lt;code&gt;vagrant up&lt;/code&gt;, operate on &lt;em&gt;every&lt;/em&gt; machine by default. So if you ran &lt;code&gt;vagrant up&lt;/code&gt;, Vagrant would bring up both the web and DB machine. You could also optionally be specific and say &lt;code&gt;vagrant up web&lt;/code&gt; or &lt;code&gt;vagrant up db&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vagrant up&lt;/code&gt; 과 같은 다른 명령 은 기본적 으로 &lt;em&gt;모든&lt;/em&gt; 컴퓨터 에서 작동합니다 . 따라서 &lt;code&gt;vagrant up&lt;/code&gt; 을 실행하면 Vagrant는 웹과 DB 머신을 모두 불러옵니다. 당신은 또한 선택적으로 구체적 일 수 있고 &lt;code&gt;vagrant up web&lt;/code&gt; &lt;code&gt;vagrant up db&lt;/code&gt; 하거나 방을 위로 .</target>
        </trans-unit>
        <trans-unit id="ada6f3137a5717263c52f6705abaf804c43277ad" translate="yes" xml:space="preserve">
          <source>Other keys/values may be added to the metadata without issue. The value of the metadata file is passed opaquely into Vagrant and plugins can make use of it. At this point, Vagrant core does not use any other keys in this file.</source>
          <target state="translated">다른 키 / 값은 문제없이 메타 데이터에 추가 될 수 있습니다. 메타 데이터 파일의 값이 불투명하게 Vagrant로 전달되고 플러그인이이를 사용할 수 있습니다. 현재 Vagrant core는이 파일에서 다른 키를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d329619378ef97d68fb8b3f668dd9d93afcb427c" translate="yes" xml:space="preserve">
          <source>Other operating systems like Windows will blue screen if you attempt to bring up a VirtualBox VM with Hyper-V enabled. Below are a couple of ways to ensure you can use Vagrant and VirtualBox if another hypervisor is present.</source>
          <target state="translated">Hyper-V가 활성화 된 VirtualBox VM을 불러 오려고하면 Windows와 같은 다른 운영 체제에서 블루 스크린이 나타납니다. 다음은 다른 하이퍼 바이저가있는 경우 Vagrant 및 VirtualBox를 사용할 수있는 몇 가지 방법입니다.</target>
        </trans-unit>
        <trans-unit id="4de5e24dd0e733e251cccfd8a2a60b37b2bd2618" translate="yes" xml:space="preserve">
          <source>Other than the above, you are free to customize the base virtual machine as you see fit.</source>
          <target state="translated">위의 것 외에 기본 가상 머신을 원하는대로 자유롭게 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad7236b675bc68089ce5359759fecd273e8e0347" translate="yes" xml:space="preserve">
          <source>Other useful WSL related environment variables:</source>
          <target state="translated">다른 유용한 WSL 관련 환경 변수 :</target>
        </trans-unit>
        <trans-unit id="65dcb23497f37aa4b171e50414ace040d1cb3cc9" translate="yes" xml:space="preserve">
          <source>Otherwise, Vagrant reports an &quot;unexpected error&quot; that should be reported as a bug, and shows a full stack trace and other ugliness. Any stack traces should be considered bugs.</source>
          <target state="translated">그렇지 않으면, Vagrant는 버그로보고되어야하는 &quot;예기치 않은 오류&quot;를보고하고 전체 스택 추적 및 기타 추악함을 보여줍니다. 모든 스택 추적은 버그로 간주해야합니다.</target>
        </trans-unit>
        <trans-unit id="dbdc27f2acd2a76460ec1f586e89d94052c60da7" translate="yes" xml:space="preserve">
          <source>Output Control</source>
          <target state="translated">출력 제어</target>
        </trans-unit>
        <trans-unit id="bc533440e33f7e93c5572bc348f0389559438897" translate="yes" xml:space="preserve">
          <source>Overriding Configuration</source>
          <target state="translated">구성 재정의</target>
        </trans-unit>
        <trans-unit id="f4d5e691ede18cd7961678c6ed8e42848a1440d6" translate="yes" xml:space="preserve">
          <source>Overriding Provisioner Settings</source>
          <target state="translated">프로 비저 설정 무시</target>
        </trans-unit>
        <trans-unit id="6fbfe21e9d6c0cb71a8b5630e5336b1f690758ce" translate="yes" xml:space="preserve">
          <source>Overwrite host locale in ssh session</source>
          <target state="translated">SSH 세션에서 호스트 로캘 덮어 쓰기</target>
        </trans-unit>
        <trans-unit id="434d4f3e37f9fd24ac5f26cdf46de308956d6b9d" translate="yes" xml:space="preserve">
          <source>PATH modifications</source>
          <target state="translated">PATH 수정</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="a069a02ef0893a3eb85f0492ae17cad30b88e4f4" translate="yes" xml:space="preserve">
          <source>Package manager</source>
          <target state="translated">패키지 관리자</target>
        </trans-unit>
        <trans-unit id="3a39b68c35be609fae3db651a70893a29f102145" translate="yes" xml:space="preserve">
          <source>Packaging</source>
          <target state="translated">Packaging</target>
        </trans-unit>
        <trans-unit id="4972a31646d4577a3c6b100e61eef03b6fb5e06f" translate="yes" xml:space="preserve">
          <source>Packaging the Box</source>
          <target state="translated">상자 포장</target>
        </trans-unit>
        <trans-unit id="7c3587b27cacfeb72c385116e6c0d54e217ac9fe" translate="yes" xml:space="preserve">
          <source>Packaging the box into a &lt;code&gt;box&lt;/code&gt; file is provider-specific. Please refer to the provider-specific documentation for creating a base box. Some provider-specific guides are linked to towards the top of this page.</source>
          <target state="translated">박스를 &lt;code&gt;box&lt;/code&gt; 파일 로 패키징하는 것은 공급자마다 다릅니다. 기본 상자 생성에 대해서는 공급자 별 설명서를 참조하십시오. 일부 제공자 별 안내서는이 페이지의 상단으로 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0ee3b5b30760e86b572fdc1e791b89c89f9dfe6" translate="yes" xml:space="preserve">
          <source>Packer and Vagrant Cloud</source>
          <target state="translated">패커와 방랑자 클라우드</target>
        </trans-unit>
        <trans-unit id="97f0897a6ef4a3de50a24c9ae9ce9a32fcfc437e" translate="yes" xml:space="preserve">
          <source>Pageant on Windows</source>
          <target state="translated">Windows의 미인 대회</target>
        </trans-unit>
        <trans-unit id="fb7f75a523427d81e3000ff59131b5a7d5e28db6" translate="yes" xml:space="preserve">
          <source>Parallelization</source>
          <target state="translated">Parallelization</target>
        </trans-unit>
        <trans-unit id="ba72c3b9fe6c622444262b4b2e2befae473a4c14" translate="yes" xml:space="preserve">
          <source>Parsing Command-Line Options</source>
          <target state="translated">명령 줄 옵션 구문 분석</target>
        </trans-unit>
        <trans-unit id="b0caa7c9b059055d4aa9636c4bd36a48683e8e41" translate="yes" xml:space="preserve">
          <source>Password-less Sudo</source>
          <target state="translated">비밀번호가없는 Sudo</target>
        </trans-unit>
        <trans-unit id="c0329112004842c9af8fcbb64bd9457cf287ef3c" translate="yes" xml:space="preserve">
          <source>Perhaps Chef, Puppet, etc. but not strictly required.</source>
          <target state="translated">아마도 요리사, 꼭두각시 등은 아니지만 꼭 필요한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d5e939d67d81e71b3892782f02c41770bf16e5a8" translate="yes" xml:space="preserve">
          <source>Perhaps the easiest way to get started is with an inline script. An inline script is a script that is given to Vagrant directly within the Vagrantfile. An example is best:</source>
          <target state="translated">시작하는 가장 쉬운 방법은 인라인 스크립트를 사용하는 것입니다. 인라인 스크립트는 Vagrantfile 내에서 Vagrant에 직접 제공되는 스크립트입니다. 예가 가장 좋습니다 :</target>
        </trans-unit>
        <trans-unit id="2e855404482b376925bdfe0a30aa2945596ebd1d" translate="yes" xml:space="preserve">
          <source>Peripherals (Audio, USB, etc.)</source>
          <target state="translated">주변기기 (오디오, USB 등)</target>
        </trans-unit>
        <trans-unit id="95c8fd661d8ee0fab29935e6fff23a8aceb5a741" translate="yes" xml:space="preserve">
          <source>Persisting State</source>
          <target state="translated">지속 상태</target>
        </trans-unit>
        <trans-unit id="473e533f2cd92d3aef92708caa05ba1d8c70ec79" translate="yes" xml:space="preserve">
          <source>Pillar Data</source>
          <target state="translated">기둥 데이터</target>
        </trans-unit>
        <trans-unit id="6ba6ac708bd6d0215732f7f2f9aeaef0320ab964" translate="yes" xml:space="preserve">
          <source>Please &lt;a href=&quot;mailto:support@hashicorp.com?subject=Lost%20My%20License&amp;amp;body=Hello%20support!%20I%20seem%20to%20have%20misplaced%20my%20Vagrant%20VMware%20license.%20Could%20you%20please%20send%20it%20to%20me?%20Thanks!&quot;&gt;contact support&lt;/a&gt;. &lt;strong&gt;Note:&lt;/strong&gt; please contact support using the email address with which you made the original purchase. If you use an alternate email, you will be asked to verify that you are the owner of the requested license.</source>
          <target state="translated">&lt;a href=&quot;mailto:support@hashicorp.com?subject=Lost%20My%20License&amp;amp;body=Hello%20support!%20I%20seem%20to%20have%20misplaced%20my%20Vagrant%20VMware%20license.%20Could%20you%20please%20send%20it%20to%20me?%20Thanks!&quot;&gt;지원 부서에 문의&lt;/a&gt; 하십시오 . &lt;strong&gt;참고 :&lt;/strong&gt; 원래 구매시 사용한 이메일 주소를 사용하여 지원 센터에 문의하십시오. 대체 이메일을 사용하는 경우 요청 된 라이센스의 소유자인지 확인하라는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="36ec251c5ea8bb966c8d1c55cb37c8aca55f35e4" translate="yes" xml:space="preserve">
          <source>Please note - only one of the &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; options may be specified in a single push definition.</source>
          <target state="translated">참고 : &lt;code&gt;script&lt;/code&gt; 및 &lt;code&gt;inline&lt;/code&gt; 옵션 중 하나만 단일 푸시 정의에 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fec1b0ffd8cc7337d5b6f0aa2027c79fc1d4a597" translate="yes" xml:space="preserve">
          <source>Please note that, while the semantic versioning specification allows for more than three points and pre-release or beta versions, Vagrant boxes must be of the format &lt;code&gt;X.Y.Z&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;, and &lt;code&gt;Z&lt;/code&gt; are all positive integers.</source>
          <target state="translated">시맨틱 버전 관리 사양에서는 3 개 이상의 포인트와 시험판 또는 베타 버전을 사용할 수 있지만, Vagrant 박스는 &lt;code&gt;X.Y.Z&lt;/code&gt; 형식이어야합니다. 여기서 &lt;code&gt;X&lt;/code&gt; , &lt;code&gt;Y&lt;/code&gt; 및 &lt;code&gt;Z&lt;/code&gt; 는 모두 양의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="4c007c15cc4c7007fac0da40218b6754711cb262" translate="yes" xml:space="preserve">
          <source>Please refer to the documentation of any plugin you plan on using for more information on how to use it, but there is one common method for installation and plugin activation.</source>
          <target state="translated">사용 방법에 대한 자세한 정보는 사용하려는 플러그인의 문서를 참조하십시오. 그러나 설치 및 플러그인 활성화에는 한 가지 일반적인 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dc208f8ebe86aa9ee6a37d49d48058be5364bff" translate="yes" xml:space="preserve">
          <source>Plugin</source>
          <target state="translated">Plugin</target>
        </trans-unit>
        <trans-unit id="f8fddd14affbd6e7b24966e1233bbd717ce56306" translate="yes" xml:space="preserve">
          <source>Plugin Components</source>
          <target state="translated">플러그인 구성 요소</target>
        </trans-unit>
        <trans-unit id="bab7869f82336b2b8fec8abea5da2e47f5591c3e" translate="yes" xml:space="preserve">
          <source>Plugin Definition</source>
          <target state="translated">플러그인 정의</target>
        </trans-unit>
        <trans-unit id="3f0df59e7109183a93e3af4fe1cc1780cc8bcc09" translate="yes" xml:space="preserve">
          <source>Plugin Development Basics</source>
          <target state="translated">플러그인 개발 기초</target>
        </trans-unit>
        <trans-unit id="ee252f533687021f38e1700e78546247c33dca26" translate="yes" xml:space="preserve">
          <source>Plugin Development: Commands</source>
          <target state="translated">플러그인 개발 : 명령</target>
        </trans-unit>
        <trans-unit id="02604969cb33442328a1b710197a87350bd894ec" translate="yes" xml:space="preserve">
          <source>Plugin Development: Configuration</source>
          <target state="translated">플러그인 개발 : 구성</target>
        </trans-unit>
        <trans-unit id="6d0ac9411a6ec5186cae8dcbed5fa8be2ee01116" translate="yes" xml:space="preserve">
          <source>Plugin Development: Guest Capabilities</source>
          <target state="translated">플러그인 개발 : 게스트 기능</target>
        </trans-unit>
        <trans-unit id="df48d16b630a3d5e07bad2a258c0bb524982aa92" translate="yes" xml:space="preserve">
          <source>Plugin Development: Guests</source>
          <target state="translated">플러그인 개발 : 손님</target>
        </trans-unit>
        <trans-unit id="103c1ee98ca4589ca3c32d6937530757166ea1f5" translate="yes" xml:space="preserve">
          <source>Plugin Development: Host Capabilities</source>
          <target state="translated">플러그인 개발 : 호스트 기능</target>
        </trans-unit>
        <trans-unit id="319cee10563a88b20ab08f1879a4780a74d3639e" translate="yes" xml:space="preserve">
          <source>Plugin Development: Hosts</source>
          <target state="translated">플러그인 개발 : 호스트</target>
        </trans-unit>
        <trans-unit id="7de6187a5c98f26f94b034cbc9a0801c5d862f46" translate="yes" xml:space="preserve">
          <source>Plugin Development: Packaging &amp;amp; Distribution</source>
          <target state="translated">플러그인 개발 : 패키징 및 배포</target>
        </trans-unit>
        <trans-unit id="734ae1ad486b93fd90cf51ca00972ee99a90e037" translate="yes" xml:space="preserve">
          <source>Plugin Development: Providers</source>
          <target state="translated">플러그인 개발 : 공급자</target>
        </trans-unit>
        <trans-unit id="3d7aff1076fa90e69bfa0b4f0a3f305293f81c3c" translate="yes" xml:space="preserve">
          <source>Plugin Development: Provisioners</source>
          <target state="translated">플러그인 개발 : 프로 비져</target>
        </trans-unit>
        <trans-unit id="6bd60aa0fb93de8ff921f4e74d83d432d2e4f433" translate="yes" xml:space="preserve">
          <source>Plugin Expunge</source>
          <target state="translated">플러그인 정리</target>
        </trans-unit>
        <trans-unit id="c7e476efc8e8090b2f67f14fb7df8cebf9386a01" translate="yes" xml:space="preserve">
          <source>Plugin Install</source>
          <target state="translated">플러그인 설치</target>
        </trans-unit>
        <trans-unit id="ba9cf073e0e5aa498b1993556249705b80813f4a" translate="yes" xml:space="preserve">
          <source>Plugin License</source>
          <target state="translated">플러그인 라이센스</target>
        </trans-unit>
        <trans-unit id="324d1f65829ade92eb7f39056623b0418849964e" translate="yes" xml:space="preserve">
          <source>Plugin List</source>
          <target state="translated">플러그인 목록</target>
        </trans-unit>
        <trans-unit id="d1166e7f18a0a12093ee44388a40b106b016bf19" translate="yes" xml:space="preserve">
          <source>Plugin Repair</source>
          <target state="translated">플러그인 수리</target>
        </trans-unit>
        <trans-unit id="31c7de47c4cb847e69ae36cec4f80e1baba22638" translate="yes" xml:space="preserve">
          <source>Plugin Uninstall</source>
          <target state="translated">플러그인 제거</target>
        </trans-unit>
        <trans-unit id="db03cd9834289da85f1f7cfd4cd57b0ea41dbbdd" translate="yes" xml:space="preserve">
          <source>Plugin Update</source>
          <target state="translated">플러그인 업데이트</target>
        </trans-unit>
        <trans-unit id="307ed87b2d442accc9636618d31a7599857ae1cd" translate="yes" xml:space="preserve">
          <source>Plugin Usage</source>
          <target state="translated">플러그인 사용법</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="a21297e13e271b457dda87ec976c02dbaa7ea68e" translate="yes" xml:space="preserve">
          <source>Plugins are a great way to augment or change the behavior and functionality of Vagrant. Since plugins introduce additional external dependencies for users, they should be used as a last resort when attempting to do something with Vagrant.</source>
          <target state="translated">플러그인은 Vagrant의 동작과 기능을 향상 시키거나 변경하는 좋은 방법입니다. 플러그인은 사용자에게 추가적인 외부 종속성을 제공하므로 Vagrant로 무언가를 시도 할 때 최후의 수단으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f1fb48f5c9bd40c791679d6879fe76224124eeb8" translate="yes" xml:space="preserve">
          <source>Plugins are installed using &lt;code&gt;vagrant plugin install&lt;/code&gt;:</source>
          <target state="translated">플러그인은 &lt;code&gt;vagrant plugin install&lt;/code&gt; 을 사용하여 설치됩니다 .</target>
        </trans-unit>
        <trans-unit id="c9428d3a870f7ae1d463a5f95508eb1bc9f52fd7" translate="yes" xml:space="preserve">
          <source>Plugins are powerful, first-class citizens that extend Vagrant using a well-documented, stable API that can withstand major version upgrades.</source>
          <target state="translated">플러그인은 주요 버전 업그레이드를 견딜 수있는 잘 문서화 된 안정적인 API를 사용하여 Vagrant를 확장하는 강력한 일류 시민입니다.</target>
        </trans-unit>
        <trans-unit id="fd65af3e6362231d5e2f118f057aa772776f1cdb" translate="yes" xml:space="preserve">
          <source>Plugins are written using &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; and are packaged using &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems&lt;/a&gt;. Familiarity with Ruby is required, but the &lt;a href=&quot;packaging&quot;&gt;packaging and distribution&lt;/a&gt; section should help guide you to packaging your plugin into a RubyGem.</source>
          <target state="translated">플러그인은 &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby를&lt;/a&gt; 사용하여 작성 되며 &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems를&lt;/a&gt; 사용하여 패키지됩니다 . Ruby에 익숙해야하지만 &lt;a href=&quot;packaging&quot;&gt;패키징 및 배포&lt;/a&gt; 섹션은 플러그인을 RubyGem으로 패키징하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="de0086bb72406ab852d486463534f12f69a266fe" translate="yes" xml:space="preserve">
          <source>Plugins can also be defined as a Hash, which supports setting extra options for the plugins. When a Hash is used, the key is the name of the plugin, and the value is a Hash of options for the plugin. For example, to set an explicit version of a plugin to install:</source>
          <target state="translated">플러그인은 해시로 정의 할 수 있으며 플러그인에 대한 추가 옵션 설정을 지원합니다. 해시가 사용될 때 키는 플러그인의 이름이고 값은 플러그인에 대한 옵션의 해시입니다. 예를 들어, 명시적인 버전의 플러그인을 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="52472969d71595139f5a602f938e6213ab30f1f0" translate="yes" xml:space="preserve">
          <source>Plugins can be updated by running &lt;code&gt;vagrant plugin update&lt;/code&gt;. This will update every installed plugin to the latest version. You can update a specific plugin by calling &lt;code&gt;vagrant plugin update NAME&lt;/code&gt;. Vagrant will output what plugins were updated and to what version.</source>
          <target state="translated">&lt;code&gt;vagrant plugin update&lt;/code&gt; 를 실행하여 플러그인을 업데이트 할 수 있습니다 . 설치된 모든 플러그인을 최신 버전으로 업데이트합니다. &lt;code&gt;vagrant plugin update NAME&lt;/code&gt; 을 호출하여 특정 플러그인을 업데이트 할 수 있습니다 . Vagrant는 업데이트 된 플러그인과 버전을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="aa03256e7ba887e21466bc003b17f95d0430b412" translate="yes" xml:space="preserve">
          <source>Port Collisions and Correction</source>
          <target state="translated">포트 충돌 및 수정</target>
        </trans-unit>
        <trans-unit id="704f26f8e4cbc7a78caa19d49f73f72fe0b9bbf9" translate="yes" xml:space="preserve">
          <source>Port collision auto-correction must be manually enabled for each forwarded port, since it is often surprising when it occurs and can lead the Vagrant user to think that the port was not properly forwarded. Enabling auto correct is easy:</source>
          <target state="translated">포트 충돌 자동 수정은 포워딩 된 각 포트에 대해 수동으로 활성화해야합니다. 포트가 발생할 때 종종 놀라워 서 Vagrant 사용자는 포트가 올바르게 전달되지 않았다고 생각할 수 있습니다. 자동 수정을 사용하는 것은 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="b7489445f1de5c48435e194658861eb1dabcda4c" translate="yes" xml:space="preserve">
          <source>Port collision detection is always done. Vagrant will not allow you to define a forwarded port where the port on the host appears to be accepting traffic or connections.</source>
          <target state="translated">포트 충돌 감지는 항상 수행됩니다. Vagrant는 호스트의 포트가 트래픽 또는 연결을 수락하는 것처럼 보이는 전달 포트를 정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">가능한 값 :</target>
        </trans-unit>
        <trans-unit id="5c34f11767e3344552d1ea1633a63119f696d0a7" translate="yes" xml:space="preserve">
          <source>PowerShell</source>
          <target state="translated">PowerShell</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="6cef0f331ce37a13812be23711f420af6d599c45" translate="yes" xml:space="preserve">
          <source>Preseeding Keys</source>
          <target state="translated">미리 설정 키</target>
        </trans-unit>
        <trans-unit id="09f5c117cde18bc50ebc7371af87d35329150eb9" translate="yes" xml:space="preserve">
          <source>Preseeding keys is the recommended way to handle provisioning using a master. On a machine with salt installed, run &lt;code&gt;salt-key --gen-keys=[minion_id]&lt;/code&gt; to generate the necessary .pub and .pem files</source>
          <target state="translated">마스터를 사용하여 프로비저닝을 처리하는 데 권장되는 방법은 미리 설정 키입니다. salt가 설치된 머신에서 &lt;code&gt;salt-key --gen-keys=[minion_id]&lt;/code&gt; 를 실행하여 필요한 .pub 및 .pem 파일을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="db469a5de59cb236628c0b3fc79fd6baf7bd2fd3" translate="yes" xml:space="preserve">
          <source>Preventing Idle Disconnects</source>
          <target state="translated">유휴 연결 끊기 방지</target>
        </trans-unit>
        <trans-unit id="2333e0cdd7d35225095e81bcd769c5bbf621cb54" translate="yes" xml:space="preserve">
          <source>Prior to Vagrant 1.7.3, the &lt;code&gt;ansible_ssh_private_key_file&lt;/code&gt; variable was not set in generated inventory, but passed as command line argument to &lt;code&gt;ansible-playbook&lt;/code&gt; command.</source>
          <target state="translated">Vagrant 1.7.3 이전에는 &lt;code&gt;ansible_ssh_private_key_file&lt;/code&gt; 변수가 생성 된 인벤토리에 설정되지 않았지만 &lt;code&gt;ansible-playbook&lt;/code&gt; 명령에 명령 행 인수로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="90af8e5bcc607eda89942f96635ba15e0fcd4243" translate="yes" xml:space="preserve">
          <source>Prior to copying &lt;code&gt;~/path/to/host/folder&lt;/code&gt; to the guest machine:</source>
          <target state="translated">&lt;code&gt;~/path/to/host/folder&lt;/code&gt; 를 게스트 컴퓨터 로 복사하기 전에 :</target>
        </trans-unit>
        <trans-unit id="2f272a8f27cba713af722d5ac783d20e42e66e4e" translate="yes" xml:space="preserve">
          <source>Prior to developing a provider you should also be familiar with how &lt;a href=&quot;../providers/index&quot;&gt;providers work&lt;/a&gt; from a user standpoint.</source>
          <target state="translated">공급자를 개발하기 전에 사용자 관점에서 &lt;a href=&quot;../providers/index&quot;&gt;공급자가 작동&lt;/a&gt; 하는 방식도 잘 알고 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5f23b26e92b82fe43e39c137dc6f114f2c5985ba" translate="yes" xml:space="preserve">
          <source>Prior to packaging up a box, you should shrink the hard drives as much as possible. This can be done with &lt;code&gt;vmware-vdiskmanager&lt;/code&gt; which is usually found in &lt;code&gt;/Applications/VMware Fusion.app/Contents/Library&lt;/code&gt; for VMware Fusion. You first want to defragment then shrink the drive. Usage shown below:</source>
          <target state="translated">상자를 포장하기 전에 하드 드라이브를 최대한 줄이십시오. 이는 일반적으로 VMware Fusion의 &lt;code&gt;/Applications/VMware Fusion.app/Contents/Library&lt;/code&gt; 에 있는 &lt;code&gt;vmware-vdiskmanager&lt;/code&gt; 를 사용 하여 수행 할 수 있습니다 . 먼저 조각 모음을 한 다음 드라이브를 줄이려고합니다. 아래에 표시된 사용법 :</target>
        </trans-unit>
        <trans-unit id="86e1c1e2b3aa58e45922e47183c525cbe0748ff7" translate="yes" xml:space="preserve">
          <source>Prior to reading this page, please understand the &lt;a href=&quot;../boxes/format&quot;&gt;basics of the box file format&lt;/a&gt;.</source>
          <target state="translated">이 페이지를 읽기 전에 &lt;a href=&quot;../boxes/format&quot;&gt;박스 파일 형식&lt;/a&gt; 의 기본 사항을 이해하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab62748789ab9d75c220eba574819e6450ecd878" translate="yes" xml:space="preserve">
          <source>Prior to reading this, you should read the &lt;a href=&quot;../boxes/base&quot;&gt;general guide to creating base boxes&lt;/a&gt;. Actually, it would probably be most useful to keep this open in a separate tab as you may be referencing it frequently while creating a base box. That page contains important information about common software to install on the box.</source>
          <target state="translated">이 내용을 읽기 전에 &lt;a href=&quot;../boxes/base&quot;&gt;기본 상자 작성에&lt;/a&gt; 대한 일반 안내서를 읽어야합니다 . 실제로 기본 상자를 만드는 동안 자주 참조 할 수 있으므로 별도의 탭에서 열어 두는 것이 가장 유용 할 것입니다. 이 페이지에는 상자에 설치할 일반적인 소프트웨어에 대한 중요한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c8292e0cc9795dca66f5c0895032fc74cb0fd1b" translate="yes" xml:space="preserve">
          <source>Private API</source>
          <target state="translated">프라이빗 API</target>
        </trans-unit>
        <trans-unit id="bf27e3999f207d985edb9e85dcaa495381ecf761" translate="yes" xml:space="preserve">
          <source>Private Networks</source>
          <target state="translated">개인 네트워크</target>
        </trans-unit>
        <trans-unit id="b7f12468d75970828a181ace5b309d16ff80c6fc" translate="yes" xml:space="preserve">
          <source>Private and public networks are not currently supported.</source>
          <target state="translated">개인 및 공용 네트워크는 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd0f79d96bf2df445ecf882b250d6dfdffa8c9c0" translate="yes" xml:space="preserve">
          <source>Probably the most important concept to understand when building a provider is the provider &quot;action&quot; interface. It is the secret sauce that makes providers do the magic they do.</source>
          <target state="translated">프로 바이더를 구축 할 때 이해해야 할 가장 중요한 개념은 프로 바이더 &quot;액션&quot;인터페이스입니다. 공급자가 자신이하는 마술을하게하는 것은 비밀 소스입니다.</target>
        </trans-unit>
        <trans-unit id="6725719e977440da2029fd6edd3b7b5c53042827" translate="yes" xml:space="preserve">
          <source>Provider Class</source>
          <target state="translated">프로 바이더 클래스</target>
        </trans-unit>
        <trans-unit id="d31ae5331579aedbf72cf4312d16267433922d59" translate="yes" xml:space="preserve">
          <source>Provider Configuration</source>
          <target state="translated">공급자 구성</target>
        </trans-unit>
        <trans-unit id="97fabe3cdfaf32f1f4ed6e495f3d8eb64199e775" translate="yes" xml:space="preserve">
          <source>Provider Installation</source>
          <target state="translated">공급자 설치</target>
        </trans-unit>
        <trans-unit id="e196db10317c87a3357904acf68cbefa4828b0b7" translate="yes" xml:space="preserve">
          <source>Provider for an installed box.</source>
          <target state="translated">설치된 박스의 프로 바이더</target>
        </trans-unit>
        <trans-unit id="afda9c2e56adab1d963448b44cfaa7f310379db4" translate="yes" xml:space="preserve">
          <source>Provider settings</source>
          <target state="translated">공급자 설정</target>
        </trans-unit>
        <trans-unit id="ebfb2c881ecce0c77123bd453d848460606725d3" translate="yes" xml:space="preserve">
          <source>Provider-specific configuration is a special case of a normal &lt;a href=&quot;configuration&quot;&gt;configuration plugin&lt;/a&gt;. When defining the configuration component, name the configuration the same as the provider, and as a second parameter, specify &lt;code&gt;:provider&lt;/code&gt;, like so:</source>
          <target state="translated">공급자 별 구성은 일반적인 &lt;a href=&quot;configuration&quot;&gt;구성 플러그인&lt;/a&gt; 의 특별한 경우입니다 . 구성 컴포넌트를 정의 할 때 제공자와 동일하게 구성 이름을 지정하고 두 번째 매개 변수로 다음과 같이 &lt;code&gt;:provider&lt;/code&gt; 를 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="de007228736823833db83d1d55989fb6f0b9c744" translate="yes" xml:space="preserve">
          <source>Provider-specific guides for creating base boxes are linked below:</source>
          <target state="translated">기본 상자를 만들기위한 공급자 별 가이드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="87b7c08baed1c8e93db95b79bcdca55b631dd7bb" translate="yes" xml:space="preserve">
          <source>Providers</source>
          <target state="translated">Providers</target>
        </trans-unit>
        <trans-unit id="81826c7fd6a97a80a9ec18c5968832b525dc91f3" translate="yes" xml:space="preserve">
          <source>Providers are defined with the &lt;code&gt;provider&lt;/code&gt; method, which takes a single argument specifying the name of the provider. This is the name that is used with &lt;code&gt;vagrant up&lt;/code&gt; to specify the provider. So in the case above, our provider would be used by calling &lt;code&gt;vagrant up --provider=my_cloud&lt;/code&gt;.</source>
          <target state="translated">제공자는 제공자 이름으로 지정하는 단일 인수를 사용하는 &lt;code&gt;provider&lt;/code&gt; 메소드 로 정의됩니다 . 이것은 제공자를 지정 &lt;code&gt;vagrant up&lt;/code&gt; 위해 vagrant up 과 함께 사용되는 이름입니다 . 따라서 위의 경우, 우리의 제공자는 &lt;code&gt;vagrant up --provider=my_cloud&lt;/code&gt; 를 호출하여 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bafcc28c6a07f4f81684b1b939d98e87500cb5b8" translate="yes" xml:space="preserve">
          <source>Providers are distributed as Vagrant plugins, and are therefore installed using &lt;a href=&quot;../plugins/usage&quot;&gt;standard plugin installation steps&lt;/a&gt;. After installing a plugin which contains a provider, the provider should immediately be available.</source>
          <target state="translated">제공자는 Vagrant 플러그인으로 분배되므로 &lt;a href=&quot;../plugins/usage&quot;&gt;표준 플러그인 설치 단계를&lt;/a&gt; 사용하여 설치됩니다 . 제공자가 포함 된 플러그인을 설치 한 후 즉시 제공자를 사용할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="bfbec2e239b93896be15f1d19e981ac392769212" translate="yes" xml:space="preserve">
          <source>Providers can also override non-provider specific configuration, such as &lt;code&gt;config.vm.box&lt;/code&gt; and any other Vagrant configuration. This is done by specifying a second argument to &lt;code&gt;config.vm.provider&lt;/code&gt;. This argument is just like the normal &lt;code&gt;config&lt;/code&gt;, so set any settings you want, and they will be overridden only for that provider.</source>
          <target state="translated">공급자는 &lt;code&gt;config.vm.box&lt;/code&gt; 및 기타 Vagrant 구성과 같은 공급자 이외의 특정 구성을 재정의 할 수도 있습니다 . 이는 &lt;code&gt;config.vm.provider&lt;/code&gt; 에 두 번째 인수를 지정하여 수행됩니다 . 이 인수는 일반 &lt;code&gt;config&lt;/code&gt; 와 동일하므로 원하는 설정을 지정하면 해당 제공자에 대해서만 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="464bb650a5bd71760d1c40fbed79a29297ab06ea" translate="yes" xml:space="preserve">
          <source>Providers can explicitly enable parallelization by setting the &lt;code&gt;parallel&lt;/code&gt; option on the provider component:</source>
          <target state="translated">제공자는 제공자 컴포넌트 에서 &lt;code&gt;parallel&lt;/code&gt; 옵션을 설정하여 병렬화를 명시 적으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="98eb52aeceb6540964107c12578678f0dce94a57" translate="yes" xml:space="preserve">
          <source>Providers: Docker</source>
          <target state="translated">공급자 : Docker</target>
        </trans-unit>
        <trans-unit id="f0a94d7cf3630522cc12abafbd85812b55bc794f" translate="yes" xml:space="preserve">
          <source>Providers: Hyper-V</source>
          <target state="translated">공급자 : Hyper-V</target>
        </trans-unit>
        <trans-unit id="811e367de77dc79e4ce6fc3a9ccbceeeca8d63f1" translate="yes" xml:space="preserve">
          <source>Providers: VMware</source>
          <target state="translated">공급자 : VMware</target>
        </trans-unit>
        <trans-unit id="dc191b3de3b8fe89498371ad4948eb76f8440513" translate="yes" xml:space="preserve">
          <source>Providers: VirtualBox</source>
          <target state="translated">공급자 : VirtualBox</target>
        </trans-unit>
        <trans-unit id="e11d5b69e044e4357dad317ba5efc7f85c9d36f9" translate="yes" xml:space="preserve">
          <source>Provision</source>
          <target state="translated">Provision</target>
        </trans-unit>
        <trans-unit id="492cae57087b66cc496ea79c050d81eea04ad72f" translate="yes" xml:space="preserve">
          <source>Provisioner Class</source>
          <target state="translated">프로 비저 클래스</target>
        </trans-unit>
        <trans-unit id="8d4d857872521fd473a0c7009fe575e6cb8bf85f" translate="yes" xml:space="preserve">
          <source>Provisioners are defined with the &lt;code&gt;provisioner&lt;/code&gt; method, which takes a single argument specifying the name of the provisioner. This is the name that used with &lt;code&gt;config.vm.provision&lt;/code&gt; when configuring and enabling the provisioner. So in the case above, the provisioner would be enabled using &lt;code&gt;config.vm.provision :custom&lt;/code&gt;.</source>
          <target state="translated">프로 비 저는 &lt;code&gt;provisioner&lt;/code&gt; 메소드 로 정의되며 , 이는 provisioner 이름을 지정하는 단일 인수를 사용합니다. 이는 프로비저닝 &lt;code&gt;config.vm.provision&lt;/code&gt; 구성 및 활성화 할 때 config.vm.provision 과 함께 사용되는 이름입니다 . 따라서 위의 경우 프로 비 &lt;code&gt;config.vm.provision :custom&lt;/code&gt; 사용하여 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="47b98180bd9e07247e4e274945344f5920afaf97" translate="yes" xml:space="preserve">
          <source>Provisioners are run in three cases: the initial &lt;code&gt;vagrant up&lt;/code&gt;, &lt;code&gt;vagrant
provision&lt;/code&gt;, and &lt;code&gt;vagrant reload --provision&lt;/code&gt;.</source>
          <target state="translated">프로 &lt;code&gt;vagrant reload --provision&lt;/code&gt; 세 가지 경우로 실행됩니다 : 최초의 &lt;code&gt;vagrant up&lt;/code&gt; , &lt;code&gt;vagrant provision&lt;/code&gt; 및 방랑 재 장전 --provision .</target>
        </trans-unit>
        <trans-unit id="98f9726c6c5109e4119ddf49f56ee80453e32c43" translate="yes" xml:space="preserve">
          <source>Provisioners can also be named (since 1.7.0). These names are used cosmetically for output as well as overriding provisioner settings (covered further below). An example of naming provisioners is shown below:</source>
          <target state="translated">공급자는 1.7.0부터 이름을 지정할 수 있습니다. 이 이름은 프로 비져 설정을 재정의 할뿐만 아니라 출력용으로 외관상 사용됩니다 (아래에 자세히 설명). 프로 비져 이름 지정의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d7e44aa0ef53e65dff70eceb38ca6eddcd17f08d" translate="yes" xml:space="preserve">
          <source>Provisioners in Vagrant allow you to automatically install software, alter configurations, and more on the machine as part of the &lt;code&gt;vagrant up&lt;/code&gt; process.</source>
          <target state="translated">Vagrant의 프로 비져 너는 소프트웨어를 설치하고 구성을 변경하는 등의 작업을 시스템에 자동으로 설치 &lt;code&gt;vagrant up&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c9d0ab3f3dac367451a69c7589a11027c9b8cceb" translate="yes" xml:space="preserve">
          <source>Provisioning</source>
          <target state="translated">Provisioning</target>
        </trans-unit>
        <trans-unit id="6c2981376fcc7cbabad8af823f2bbd5a5a0bfc25" translate="yes" xml:space="preserve">
          <source>Provisioning happens at certain points during the lifetime of your Vagrant environment:</source>
          <target state="translated">프로비저닝은 Vagrant 환경의 수명 동안 특정 시점에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="80cd06b2b3a66f236079ad025921493ac3892ff0" translate="yes" xml:space="preserve">
          <source>Pruning Old Versions</source>
          <target state="translated">가지 치기 Old Versions</target>
        </trans-unit>
        <trans-unit id="55f077c3c0fe0e237e0e259799e5d62cfbff49c3" translate="yes" xml:space="preserve">
          <source>Public Action Hooks</source>
          <target state="translated">공공 행동 후크</target>
        </trans-unit>
        <trans-unit id="e1726ddf0953596aff1729b6129e2cf83bfec9a9" translate="yes" xml:space="preserve">
          <source>Public Networks</source>
          <target state="translated">공공 네트워크</target>
        </trans-unit>
        <trans-unit id="6e59895f1ba701338ff48b4e694b91bae92ccd8f" translate="yes" xml:space="preserve">
          <source>Publicly available base boxes usually use a root password of &quot;vagrant&quot; to keep things easy.</source>
          <target state="translated">공개적으로 사용 가능한 기본 상자는 보통 루트 암호 &quot;vagrant&quot;를 사용하여 작업을 쉽게합니다.</target>
        </trans-unit>
        <trans-unit id="658593a6d1dd741f6dac3a78e28e11fe8141daad" translate="yes" xml:space="preserve">
          <source>Pulling Images</source>
          <target state="translated">이미지 당기기</target>
        </trans-unit>
        <trans-unit id="5c95072045d7b4044d40a3d0b5f2652f10732e44" translate="yes" xml:space="preserve">
          <source>Puppet Agent Provisioner</source>
          <target state="translated">꼭두각시 요원</target>
        </trans-unit>
        <trans-unit id="5e3d6cd5dc4ec95b8c861dcd091a5acee982217f" translate="yes" xml:space="preserve">
          <source>Puppet Apply Provisioner</source>
          <target state="translated">꼭두각시 적용 제공자</target>
        </trans-unit>
        <trans-unit id="db5f087977c6a9a2503928e7773a032dde006e96" translate="yes" xml:space="preserve">
          <source>Puppet supports a lot of command-line flags. Basically any setting can be overridden on the command line. To give you the most power and flexibility possible with Puppet, Vagrant allows you to specify custom command line flags to use:</source>
          <target state="translated">Puppet은 많은 명령 줄 플래그를 지원합니다. 기본적으로 모든 설정을 명령 줄에서 재정의 할 수 있습니다. Puppet으로 최대한의 성능과 유연성을 제공하기 위해 Vagrant는 다음과 같이 사용할 사용자 지정 명령 줄 플래그를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f7f57b519fc9bc5683b4808641d3b33f53b6f9d" translate="yes" xml:space="preserve">
          <source>Push</source>
          <target state="translated">Push</target>
        </trans-unit>
        <trans-unit id="3aba153a826fad341c4a3f6c817541ab2b7108c0" translate="yes" xml:space="preserve">
          <source>Pushes are defined in an application's &lt;code&gt;Vagrantfile&lt;/code&gt; and are invoked using the &lt;code&gt;vagrant push&lt;/code&gt; subcommand. Much like other components of Vagrant, each Vagrant Push plugin has its own configuration options. Please consult the documentation for your Vagrant Push plugin for more information. Here is an example Vagrant Push configuration section in a &lt;code&gt;Vagrantfile&lt;/code&gt;:</source>
          <target state="translated">푸시는 애플리케이션의 &lt;code&gt;Vagrantfile&lt;/code&gt; 에서 정의되며 vagrant &lt;code&gt;vagrant push&lt;/code&gt; 하위 명령을 사용하여 호출됩니다 . Vagrant의 다른 구성 요소와 마찬가지로 각 Vagrant Push 플러그인에는 자체 구성 옵션이 있습니다. 자세한 내용은 Vagrant Push 플러그인 설명서를 참조하십시오. 다음은 &lt;code&gt;Vagrantfile&lt;/code&gt; 의 Vagrant Push 구성 섹션 예입니다 .</target>
        </trans-unit>
        <trans-unit id="f0f69dce73b963d04f4ba12ee684c0616f8c98e7" translate="yes" xml:space="preserve">
          <source>RDP</source>
          <target state="translated">RDP</target>
        </trans-unit>
        <trans-unit id="fc1eeee3f495cf79c779bf144f2937ef64153e02" translate="yes" xml:space="preserve">
          <source>RSync</source>
          <target state="translated">RSync</target>
        </trans-unit>
        <trans-unit id="15f6e6d43cbef5ca9fa668154a608b3495422a38" translate="yes" xml:space="preserve">
          <source>Raw Arguments</source>
          <target state="translated">원시 인수</target>
        </trans-unit>
        <trans-unit id="c85a610bb37e0881258e5404509513b77f8790f5" translate="yes" xml:space="preserve">
          <source>Raw Contents</source>
          <target state="translated">원시 내용</target>
        </trans-unit>
        <trans-unit id="ac73f42f8f25a73f0c7f2505ddbe94dfd252ced1" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;basic_usage&quot;&gt;basic usage&lt;/a&gt; page to get started with synced folders.</source>
          <target state="translated">&lt;a href=&quot;basic_usage&quot;&gt;기본 사용&lt;/a&gt; 페이지를 읽고 동기화 된 폴더를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="1aa764ad41643683e1d3140f17b530571e4ba462" translate="yes" xml:space="preserve">
          <source>Recent versions of Windows 10 now include Windows Subsystem for Linux (WSL) as an optional Windows feature. The WSL supports running a Linux environment within Windows. Vagrant support for WSL is still in development and should be considered &lt;em&gt;beta&lt;/em&gt;.</source>
          <target state="translated">최신 버전의 Windows 10에는 이제 WSL (Windows Subsystem for Linux)이 선택적 Windows 기능으로 포함되어 있습니다. WSL은 Windows 내에서 Linux 환경 실행을 지원합니다. WSL에 대한 유급 지원은 아직 개발 중이며 &lt;em&gt;베타&lt;/em&gt; 로 간주되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c49348a6d1fadb5cfd172c2822072cd7053f246a" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;../provisioning/shell&quot;&gt;Shell Provisioner&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../provisioning/shell&quot;&gt;Shell Provisioner를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26ca26ff7b3f63d0af3b21a798ea67d7e25eab3d" translate="yes" xml:space="preserve">
          <source>Relative URLs to assets is generally a best practice in general, so you should do this anyways!</source>
          <target state="translated">자산에 대한 상대 URL은 일반적으로 모범 사례이므로 어쨌든이 작업을 수행해야합니다!</target>
        </trans-unit>
        <trans-unit id="d9854d8707c8fa6a360bcf2236f94aa7e0caee44" translate="yes" xml:space="preserve">
          <source>Relative paths, such as above, are expanded relative to the location of the root Vagrantfile for your project. Absolute paths can also be used, as well as shortcuts such as &lt;code&gt;~&lt;/code&gt; (home directory) and &lt;code&gt;..&lt;/code&gt; (parent directory).</source>
          <target state="translated">위와 같은 상대 경로는 프로젝트의 루트 Vagrantfile 위치를 기준으로 확장됩니다. &lt;code&gt;~&lt;/code&gt; (홈 디렉토리) 및 &lt;code&gt;..&lt;/code&gt; (부모 디렉토리) 와 같은 바로 가기뿐만 아니라 절대 경로도 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cce7155371fc26686b89c7452337d8419692f31e" translate="yes" xml:space="preserve">
          <source>Reload</source>
          <target state="translated">Reload</target>
        </trans-unit>
        <trans-unit id="8986049e3449958932288d93a0a5a92062884ab2" translate="yes" xml:space="preserve">
          <source>Remember, some providers do not require any provider-specific configuration and work directly out of the box. Provider-specific configuration is meant as a way to expose more options to get the most of the provider of your choice. It is not meant as a roadblock to running against a specific provider.</source>
          <target state="translated">일부 공급자는 공급자 별 구성이 필요하지 않으며 즉시 사용할 수 있습니다. 공급자 별 구성은 더 많은 옵션을 제공하여 선택한 공급자를 최대한 활용할 수있는 방법입니다. 특정 제공자에 대한 실행의 장애물이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="148a74f77d346d65cdbbe9927734bd80d0fcf204" translate="yes" xml:space="preserve">
          <source>Remember, this will &lt;em&gt;override&lt;/em&gt; the run list specified on the Chef server itself.</source>
          <target state="translated">이것은 Chef 서버 자체에 지정된 실행 목록 &lt;em&gt;보다 우선&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f3631961b84238782dfbca29f29dc871472ad623" translate="yes" xml:space="preserve">
          <source>Remote path:</source>
          <target state="translated">원격 경로 :</target>
        </trans-unit>
        <trans-unit id="277ecb7ad28c11b3339645a4c038b688dcabff73" translate="yes" xml:space="preserve">
          <source>Remove any extraneous files from the &quot;vmwarevm&quot; folder and package it. Be sure to compress the tar with gzip (done below in a single command) since VMware hard disks are not compressed by default.</source>
          <target state="translated">&quot;vmwarevm&quot;폴더에서 불필요한 파일을 제거하고 패키지하십시오. VMware 하드 디스크는 기본적으로 압축되지 않으므로 gzip을 사용하여 tar를 압축하십시오 (단일 명령으로 아래에서 수행됨).</target>
        </trans-unit>
        <trans-unit id="34e79d75b1aee35755f29ea60797d9ebfe30a667" translate="yes" xml:space="preserve">
          <source>Removing User Data</source>
          <target state="translated">사용자 데이터 제거</target>
        </trans-unit>
        <trans-unit id="5687c325f0cb7c1747d216210c11dfa6e4ea62a2" translate="yes" xml:space="preserve">
          <source>Removing the Vagrant Program</source>
          <target state="translated">방랑자 프로그램 제거</target>
        </trans-unit>
        <trans-unit id="93a5deaa42c608bca4a8468a329a55eede7b9e98" translate="yes" xml:space="preserve">
          <source>Removing the Vagrant program will remove the &lt;code&gt;vagrant&lt;/code&gt; binary and all dependencies from your machine. After uninstalling the program, you can always &lt;a href=&quot;index&quot;&gt;reinstall&lt;/a&gt; again using standard methods.</source>
          <target state="translated">Vagrant 프로그램을 제거하면 컴퓨터에서 &lt;code&gt;vagrant&lt;/code&gt; 바이너리 및 모든 종속성 이 제거됩니다 . 프로그램을 제거한 후에는 항상 표준 방법을 사용하여 &lt;a href=&quot;index&quot;&gt;다시 설치할&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc3bb9c176b0543385fc104ce0b47df95d9fdcd7" translate="yes" xml:space="preserve">
          <source>Removing the user data will remove all &lt;a href=&quot;../boxes&quot;&gt;boxes&lt;/a&gt;, &lt;a href=&quot;../plugins/index&quot;&gt;plugins&lt;/a&gt;, license files, and any stored state that may be used by Vagrant. Removing the user data effectively makes Vagrant think it is a fresh install.</source>
          <target state="translated">사용자 데이터를 제거하면 모든 &lt;a href=&quot;../boxes&quot;&gt;상자&lt;/a&gt; , &lt;a href=&quot;../plugins/index&quot;&gt;플러그인&lt;/a&gt; , 라이센스 파일 및 Vagrant가 사용할 수있는 모든 저장된 상태 가 제거 됩니다. 사용자 데이터를 효과적으로 제거하면 Vagrant는 새로운 설치라고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="f6d254d0fbdf92295435966d020f5f3bbc2077e7" translate="yes" xml:space="preserve">
          <source>Replace &quot;USERNAME&quot; and &quot;PASSWORD&quot; with your SMB username and password.</source>
          <target state="translated">&quot;USERNAME&quot;및 &quot;PASSWORD&quot;를 SMB 사용자 이름 및 비밀번호로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="translated">Required</target>
        </trans-unit>
        <trans-unit id="0fa35b675bd94c1149907303408d74ebbeff8985" translate="yes" xml:space="preserve">
          <source>Restart your machine and try running vagrant again.</source>
          <target state="translated">컴퓨터를 다시 시작하고 방랑자를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="c533a596e181a2718a2c0eed31a78399a6dd5694" translate="yes" xml:space="preserve">
          <source>Restoring snapshot VMs using &lt;code&gt;vagrant snapshot pop&lt;/code&gt; or &lt;code&gt;vagrant snapshot restore&lt;/code&gt; will sometimes raise errors when mounting SMB shared folders, however these mounts will still work inside the guest.</source>
          <target state="translated">볼륨 스냅 &lt;code&gt;vagrant snapshot pop&lt;/code&gt; 또는 &lt;code&gt;vagrant snapshot restore&lt;/code&gt; 을 사용하여 스냅 샷 VM을 복원 하면 SMB 공유 폴더를 마운트 할 때 때때로 오류가 발생하지만 이러한 마운트는 여전히 게스트 내부에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b3bd0b5a70497bec4a02b7eb1cb0d4f37eb71a2a" translate="yes" xml:space="preserve">
          <source>Resume</source>
          <target state="translated">Resume</target>
        </trans-unit>
        <trans-unit id="52ffa4aa6ccdb4d2db31daa264d5638524cb24c4" translate="yes" xml:space="preserve">
          <source>Right click on the Windows button and select &amp;lsquo;Apps and Features&amp;rsquo;.</source>
          <target state="translated">Windows 버튼을 마우스 오른쪽 버튼으로 클릭하고 '앱 및 기능'을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="8b92c91ff18cbc3ea5d843eaefca04740f51a2f0" translate="yes" xml:space="preserve">
          <source>Root Password: &quot;vagrant&quot;</source>
          <target state="translated">루트 비밀번호 : &quot;vagrant&quot;</target>
        </trans-unit>
        <trans-unit id="15272a790175b27f9827705fd46f11c296938b05" translate="yes" xml:space="preserve">
          <source>Root Privilege Requirement</source>
          <target state="translated">루트 권한 요구 사항</target>
        </trans-unit>
        <trans-unit id="ee6c2fa5ac75494c1ba5e3973576a8597453db9e" translate="yes" xml:space="preserve">
          <source>Rsync</source>
          <target state="translated">Rsync</target>
        </trans-unit>
        <trans-unit id="3f7275e0a3bccd6ae7ece4d8e502c0fe0c2620c1" translate="yes" xml:space="preserve">
          <source>Rsync to a restricted folder</source>
          <target state="translated">제한된 폴더로 재 동기화</target>
        </trans-unit>
        <trans-unit id="760dc3325ab9fc7a0bfd1dd0935c20668cae4acd" translate="yes" xml:space="preserve">
          <source>Ruby Option</source>
          <target state="translated">루비 옵션</target>
        </trans-unit>
        <trans-unit id="b4ea9d17d37b7c4c42a72bf64d9072f5d6dedba6" translate="yes" xml:space="preserve">
          <source>Run Once, Always or Never</source>
          <target state="translated">항상 또는 한 번 실행</target>
        </trans-unit>
        <trans-unit id="5f0ffe3403b31c5418177cf28454937d5c2d2a67" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;bundle&lt;/code&gt; command with a required version* to install the requirements:</source>
          <target state="translated">필수 버전 *으로 &lt;code&gt;bundle&lt;/code&gt; 명령을 실행하여 요구 사항을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="a48f5801bbc41ef087bb5cf79bfe5c08972224bb" translate="yes" xml:space="preserve">
          <source>Runner Chef Provisioners</source>
          <target state="translated">러너 요리사 프로 비져</target>
        </trans-unit>
        <trans-unit id="c4d1ad1e64633fb86268d1f5696325d1e686ef4a" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;vagrant up&lt;/code&gt; would fire the before trigger to start tinyproxy, where as running either &lt;code&gt;vagrant destroy&lt;/code&gt; or &lt;code&gt;vagrant halt&lt;/code&gt; would stop tinyproxy.</source>
          <target state="translated">&lt;code&gt;vagrant up&lt;/code&gt; 실행 하면 이전 방아쇠를 시작하여 tinyproxy를 시작합니다. 여기서 &lt;code&gt;vagrant destroy&lt;/code&gt; 또는 방탕 &lt;code&gt;vagrant halt&lt;/code&gt; 를 실행하면 tinyproxy가 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="9881fb14582fa6a9b29b6b8fd53ecd23e253ff4b" translate="yes" xml:space="preserve">
          <source>Running Ansible</source>
          <target state="translated">Ansible 실행</target>
        </trans-unit>
        <trans-unit id="cb5a306f91f68cdf0d5dcb2a3504d8056f35bae3" translate="yes" xml:space="preserve">
          <source>Running Containers</source>
          <target state="translated">컨테이너 실행</target>
        </trans-unit>
        <trans-unit id="43ab1f3e0ec89693d5034bae5e41519af95d9058" translate="yes" xml:space="preserve">
          <source>Running Multiple Hypervisors</source>
          <target state="translated">여러 하이퍼 바이저 실행</target>
        </trans-unit>
        <trans-unit id="efedc79a98139b7f8945a94809ff10d5b525b722" translate="yes" xml:space="preserve">
          <source>Running Provisioners</source>
          <target state="translated">프로 비져 실행</target>
        </trans-unit>
        <trans-unit id="5b3bf2ef0101b1d96d6ba924357dfb5d7e118d8a" translate="yes" xml:space="preserve">
          <source>Running Vagrant will automatically regenerate any data necessary to run, so it is safe to remove the user data at any time.</source>
          <target state="translated">Vagrant를 실행하면 실행에 필요한 모든 데이터가 자동으로 재생되므로 언제든지 사용자 데이터를 제거하는 것이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="91c15146e992a23a0b6ec704321b95c9c39f76ba" translate="yes" xml:space="preserve">
          <source>Running a remote script to save a database on your host before &lt;strong&gt;destroy&lt;/strong&gt;ing a guest:</source>
          <target state="translated">게스트 를 &lt;strong&gt;제거&lt;/strong&gt; 하기 전에 원격 스크립트를 실행하여 호스트에 데이터베이스를 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="a06207dc24ff39a7c7e2fe4b5ca8e658aa95d654" translate="yes" xml:space="preserve">
          <source>Running a standalone file</source>
          <target state="translated">독립형 파일 실행</target>
        </trans-unit>
        <trans-unit id="299f14c384ba2a3d566731ee9f29ae20958c466b" translate="yes" xml:space="preserve">
          <source>Running containers can only be configured using the Ruby block syntax with the &lt;code&gt;do...end&lt;/code&gt; blocks. An example of running a container is shown below:</source>
          <target state="translated">실행 컨테이너는 &lt;code&gt;do...end&lt;/code&gt; 블록 과 함께 Ruby 블록 구문을 사용해서 만 구성 할 수 있습니다 . 컨테이너를 실행하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eebc48a0a4be8044d648003e0f5f7eb74958f0ab" translate="yes" xml:space="preserve">
          <source>Runs any configured &lt;a href=&quot;../provisioning/index&quot;&gt;provisioners&lt;/a&gt; against the running Vagrant managed machine.</source>
          <target state="translated">실행 중인 Vagrant 관리 시스템에 대해 구성된 &lt;a href=&quot;../provisioning/index&quot;&gt;프로비저닝&lt;/a&gt; 을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="515d2f8880ceb5c06495bd2cf0e912b5d83a7645" translate="yes" xml:space="preserve">
          <source>SMB</source>
          <target state="translated">SMB</target>
        </trans-unit>
        <trans-unit id="a593b63229eafe7e58f15146a340a39b3f09b8e0" translate="yes" xml:space="preserve">
          <source>SMB is built-in to Windows machines and provides a higher performance alternative to some other mechanisms such as VirtualBox shared folders.</source>
          <target state="translated">SMB는 Windows 시스템에 내장되어 있으며 VirtualBox 공유 폴더와 같은 다른 메커니즘에 대한 고성능 대안을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a866508075165416476b9b733cd19a020b4e4347" translate="yes" xml:space="preserve">
          <source>SMB is currently only supported when the host machine is Windows or macOS. The guest machine can be Windows, Linux, or macOS.</source>
          <target state="translated">SMB는 현재 호스트 시스템이 Windows 또는 macOS 인 경우에만 지원됩니다. 게스트 시스템은 Windows, Linux 또는 macOS 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="839226786b62bf95c9258e79140ac43890ceae07" translate="yes" xml:space="preserve">
          <source>SSH</source>
          <target state="translated">SSH</target>
        </trans-unit>
        <trans-unit id="6555dffb7012f77fdd857673a594ff08eebe6073" translate="yes" xml:space="preserve">
          <source>SSH Config</source>
          <target state="translated">SSH 구성</target>
        </trans-unit>
        <trans-unit id="690018a2fae43a2df194f92a8bb55df20815be6d" translate="yes" xml:space="preserve">
          <source>SSH Settings</source>
          <target state="translated">SSH 설정</target>
        </trans-unit>
        <trans-unit id="b244241a946ed4044c0679668cf7c8f5fbcaf3a7" translate="yes" xml:space="preserve">
          <source>SSH Sharing</source>
          <target state="translated">SSH 공유</target>
        </trans-unit>
        <trans-unit id="1e165fff543865fa80e55d2a14a9aaac5b280e7b" translate="yes" xml:space="preserve">
          <source>SSH Tweaks</source>
          <target state="translated">SSH 조정</target>
        </trans-unit>
        <trans-unit id="e9c7aad5e5511a7aaf64793d3dd6095a9b8fcbac" translate="yes" xml:space="preserve">
          <source>SSH client usage</source>
          <target state="translated">SSH 클라이언트 사용법</target>
        </trans-unit>
        <trans-unit id="2b916b14796715c56440b5ee68fd3189b233b021" translate="yes" xml:space="preserve">
          <source>SSH is not shared by default, it must explicitly be shared with the &lt;code&gt;--ssh&lt;/code&gt; flag.</source>
          <target state="translated">SSH는 기본적으로 공유되지 않으며 &lt;code&gt;--ssh&lt;/code&gt; 플래그 와 명시 적으로 공유해야합니다 .</target>
        </trans-unit>
        <trans-unit id="217eb2e392c82ba3db6c131ac70ee0b596dbd011" translate="yes" xml:space="preserve">
          <source>SSH keys are encrypted by default, using a password that is not transmitted to our servers or across the network at all.</source>
          <target state="translated">SSH 키는 기본적으로 서버 나 네트워크를 통해 전송되지 않는 비밀번호를 사용하여 암호화됩니다.</target>
        </trans-unit>
        <trans-unit id="17deb4cb21bc97b3f7f955a7011a9e4462b41ef7" translate="yes" xml:space="preserve">
          <source>SSH server with key-based authentication setup. If you want the box to work with default Vagrant settings, the SSH user must be set to accept the &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/keys/vagrant.pub&quot;&gt;insecure keypair&lt;/a&gt; that ships with Vagrant.</source>
          <target state="translated">키 기반 인증 설정이있는 SSH 서버. 상자가 기본 Vagrant 설정으로 작동하게하려면 SSH 사용자는 Vagrant와 함께 제공 되는 &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/keys/vagrant.pub&quot;&gt;안전하지 않은 키 쌍&lt;/a&gt; 을 허용하도록 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="789a9a0dabad2413ebf5b22aa8e6e7e50a34493a" translate="yes" xml:space="preserve">
          <source>SSH sharing is disabled by default as a security measure. To enable SSH sharing, simply supply the &lt;code&gt;--ssh&lt;/code&gt; flag when calling &lt;code&gt;vagrant share&lt;/code&gt;.</source>
          <target state="translated">SSH 공유는 기본적으로 보안 수단으로 비활성화되어 있습니다. SSH 공유를 활성화하려면 &lt;code&gt;--ssh&lt;/code&gt; &lt;code&gt;vagrant share&lt;/code&gt; 호출 할 때 간단히 --ssh 플래그 를 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="59c26a2c13ebe0486830b2c45841a43f25e5086c" translate="yes" xml:space="preserve">
          <source>SSH user so Vagrant can connect</source>
          <target state="translated">Vagrant가 연결할 수있는 SSH 사용자</target>
        </trans-unit>
        <trans-unit id="a9ceb47ef1ed86ec4407e8847c68abc12a18a9a8" translate="yes" xml:space="preserve">
          <source>Salt Provisioner</source>
          <target state="translated">소금 공급자</target>
        </trans-unit>
        <trans-unit id="5f11b099f7bb8a369c42c7bf8397f1adf57089d5" translate="yes" xml:space="preserve">
          <source>Salt states are &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt; documents that describes the current state a machine should be in, e.g. what packages should be installed, which services are running, and the contents of arbitrary files.</source>
          <target state="translated">솔트 상태는 시스템이 현재 있어야하는 상태, 예를 들어 어떤 패키지를 설치해야하는지, 어떤 서비스가 실행되고 있는지, 임의의 파일 내용을 설명하는 &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt; 문서입니다.</target>
        </trans-unit>
        <trans-unit id="0187268986b5811e6ccb989c40db00a819bf0f54" translate="yes" xml:space="preserve">
          <source>Script Arguments</source>
          <target state="translated">스크립트 인수</target>
        </trans-unit>
        <trans-unit id="f9aed37650af3c15dbdc2c7ab3e74a76ab729bf4" translate="yes" xml:space="preserve">
          <source>Securely authenticate to Vagrant Cloud using a username and password:</source>
          <target state="translated">사용자 이름과 비밀번호를 사용하여 Vagrant Cloud에 안전하게 인증하십시오.</target>
        </trans-unit>
        <trans-unit id="9a5f48f8fbfbbe8ab05de9df347d97688f8a6ee2" translate="yes" xml:space="preserve">
          <source>Securely authenticate with Vagrant Cloud using a token:</source>
          <target state="translated">토큰을 사용하여 Vagrant Cloud로 안전하게 인증하십시오.</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="a1d472af4fab2d0218bb06fc820035d4ec92031e" translate="yes" xml:space="preserve">
          <source>See official documentation &lt;a href=&quot;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">공식 문서를 참조 &lt;a href=&quot;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&quot;&gt;하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc58830e563b9080446ab665ce1fb93fb8766054" translate="yes" xml:space="preserve">
          <source>Select Turn Windows Features on or off.</source>
          <target state="translated">Windows 기능 켜기 또는 끄기를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="351b46ba7237ffcd5d099e148c5a40d462ea0c0b" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;limit = &quot;all&quot;&lt;/code&gt; can be used to make Ansible connect to all machines from the inventory file.</source>
          <target state="translated">&lt;code&gt;limit = &quot;all&quot;&lt;/code&gt; 설정 은 Ansible을 인벤토리 파일에서 모든 컴퓨터에 연결하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2504aaa7a7c92d82f4e0356fa70da70fbea1ba5c" translate="yes" xml:space="preserve">
          <source>Setting Up Your Project</source>
          <target state="translated">프로젝트 설정</target>
        </trans-unit>
        <trans-unit id="d2d752c8ea185c41e807aeec0b2c0413f43464b8" translate="yes" xml:space="preserve">
          <source>Setting up a CFEngine server and client</source>
          <target state="translated">CFEngine 서버 및 클라이언트 설정</target>
        </trans-unit>
        <trans-unit id="a52339f3d58246712ffa2e6b66eccc9cff12ef76" translate="yes" xml:space="preserve">
          <source>Settings in the VMX file control the behavior of the VMware virtual machine when it is booted. In the past Vagrant has removed the configured network device when creating a new instance and inserted a new configuration. With the introduction of &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/&quot;&gt;&quot;predictable network interface names&quot;&lt;/a&gt; this approach can cause unexpected behaviors or errors with VMware Vagrant boxes. While some boxes that use the predictable network interface names are configured to handle the VMX modifications Vagrant makes, it is better if Vagrant does not make the modification at all.</source>
          <target state="translated">VMX 파일의 설정은 부팅시 VMware 가상 머신의 동작을 제어합니다. 과거 Vagrant는 새 인스턴스를 만들 때 구성된 네트워크 장치를 제거하고 새 구성을 삽입했습니다. &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/&quot;&gt;&quot;예측 가능한 네트워크 인터페이스 이름&quot;&lt;/a&gt; 이 도입 되면서이 접근 방식은 VMware Vagrant 상자에 예기치 않은 동작 또는 오류를 유발할 수 있습니다. 예측 가능한 네트워크 인터페이스 이름을 사용하는 일부 상자는 Vagrant가 수행하는 VMX 수정 사항을 처리하도록 구성되어 있지만 Vagrant가 전혀 수정하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="adf30ad2392c91423e89409a2555b0e405cd23b4" translate="yes" xml:space="preserve">
          <source>Setup Requirements</source>
          <target state="translated">설치 요구 사항</target>
        </trans-unit>
        <trans-unit id="5559c15d37a2aa2d8d2cc5a1f9cd66dcff444bfc" translate="yes" xml:space="preserve">
          <source>Setup and Workflow</source>
          <target state="translated">설정 및 워크 플로우</target>
        </trans-unit>
        <trans-unit id="09ca55ca52d207f2cc1d9339e0226a88e9e96e2f" translate="yes" xml:space="preserve">
          <source>Share</source>
          <target state="translated">Share</target>
        </trans-unit>
        <trans-unit id="de046d95f037e961d1b2bc58bd5171a47d829a2e" translate="yes" xml:space="preserve">
          <source>Shared Ansible Options</source>
          <target state="translated">공유 가능한 옵션</target>
        </trans-unit>
        <trans-unit id="b2d145a89bb42a82426b052ee07767a85a521949" translate="yes" xml:space="preserve">
          <source>Shared Chef Options</source>
          <target state="translated">공유 셰프 옵션</target>
        </trans-unit>
        <trans-unit id="3b9e5648dd43c6819096d4cea9dd648d225d84bf" translate="yes" xml:space="preserve">
          <source>Shared web applications must use &lt;strong&gt;relative paths&lt;/strong&gt; for loading any local assets such as images, stylesheets, javascript.</source>
          <target state="translated">공유 웹 애플리케이션은 이미지, 스타일 시트, 자바 스크립트와 같은 로컬 자산을로드 하기 위해 &lt;strong&gt;상대 경로&lt;/strong&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c6884ad94d56f64e55961abd5a98defd4b2294dd" translate="yes" xml:space="preserve">
          <source>Sharing hostnames across Vagrant host and guests might be a good idea (e.g. with some Ansible configuration task, or with a plugin like &lt;a href=&quot;https://github.com/smdahlen/vagrant-hostmanager&quot;&gt;&lt;code&gt;vagrant-hostmanager&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Vagrant 호스트와 게스트에서 호스트 이름을 공유하는 것이 좋습니다 (예 : Ansible 구성 작업 또는 &lt;a href=&quot;https://github.com/smdahlen/vagrant-hostmanager&quot;&gt; &lt;code&gt;vagrant-hostmanager&lt;/code&gt; &lt;/a&gt; 와 같은 플러그인 사용 ).</target>
        </trans-unit>
        <trans-unit id="b50eee4ab1d64f9e39bb1f1749e50808a92c25ee" translate="yes" xml:space="preserve">
          <source>Sharing your Vagrant environment understandably raises a number of security concerns.</source>
          <target state="translated">Vagrant 환경을 공유하면 많은 보안 문제가 이해 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6598f846b9e84f2442f098508b153e73ce3c46e3" translate="yes" xml:space="preserve">
          <source>Shell Provisioner</source>
          <target state="translated">쉘 프로 비져</target>
        </trans-unit>
        <trans-unit id="79eed418f5bfb0172ac280748e2d84ef6a367471" translate="yes" xml:space="preserve">
          <source>Shell provisioning is ideal for users new to Vagrant who want to get up and running quickly and provides a strong alternative for users who are not comfortable with a full configuration management system such as Chef or Puppet.</source>
          <target state="translated">Shell provisioning은 Vagrant를 처음 사용하는 사용자에게 이상적이며 Chef 또는 Puppet과 같은 전체 구성 관리 시스템에 익숙하지 않은 사용자에게 강력한 대안을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="300b801a9bf1c86184360ce3b8636217c4d0fd19" translate="yes" xml:space="preserve">
          <source>Simplest Configuration</source>
          <target state="translated">가장 간단한 구성</target>
        </trans-unit>
        <trans-unit id="3a851e6092dc6df3b2bdc0044b889583f41601fb" translate="yes" xml:space="preserve">
          <source>Since Vagrant 1.5, boxes support versioning. This allows the people who make boxes to push updates to the box, and the people who use the box have a simple workflow for checking for updates, updating their boxes, and seeing what has changed.</source>
          <target state="translated">Vagrant 1.5부터 박스는 버전 관리를 지원합니다. 이를 통해 상자를 만드는 사람들은 상자로 업데이트를 푸시 할 수 있으며 상자를 사용하는 사람들은 업데이트 확인, 상자 업데이트 및 변경된 사항을 확인하는 간단한 워크 플로를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bda524c5532e335d6a1d890f1d601b1f791cad22" translate="yes" xml:space="preserve">
          <source>Since an Ansible playbook can include many files, you may also collect the related files in a &lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html#directory-layout&quot;&gt;directory structure&lt;/a&gt; like this:</source>
          <target state="translated">Ansible 플레이 북에는 많은 파일이 포함될 수 있으므로 다음 과 같은 &lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html#directory-layout&quot;&gt;디렉토리 구조로&lt;/a&gt; 관련 파일을 수집 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36950c14d83f856b25ce592be83ef8e72645f89b" translate="yes" xml:space="preserve">
          <source>Since single-line Chef recipes are rare, you can also specify the recipe using a &quot;heredoc&quot;:</source>
          <target state="translated">한 줄 요리사 레시피는 드물기 때문에 &quot;heredoc&quot;을 사용하여 레시피를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="490286fb680b60c49ec4b264430e69f91150fe80" translate="yes" xml:space="preserve">
          <source>Since you have access to the environment in every capability, capabilities can also call &lt;em&gt;other&lt;/em&gt; host capabilities. This is useful for using the inheritance mechanism of capabilities to potentially ask helpers for more information. For example, the &quot;linux&quot; guest has a &quot;nfs_check_command&quot; capability that returns the command to use to check if NFS is running.</source>
          <target state="translated">모든 기능에서 환경에 액세스 할 수 있으므로 기능은 &lt;em&gt;다른&lt;/em&gt; 호스트 기능을 호출 할 수도 있습니다. 이 기능은 상속 기능을 사용하여 헬퍼에게 자세한 정보를 요청하는 데 유용합니다. 예를 들어 &quot;linux&quot;게스트에는 &quot;nfs_check_command&quot;기능이있어 NFS가 실행 중인지 확인하는 데 사용할 명령을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="73bd51bf5c89c13a03591c296f43984ec88d9c7d" translate="yes" xml:space="preserve">
          <source>Since you have access to the machine in every capability, capabilities can also call &lt;em&gt;other&lt;/em&gt; capabilities. This is useful for using the inheritance mechanism of capabilities to potentially ask helpers for more information. For example, the &quot;redhat&quot; guest has a &quot;network_scripts_dir&quot; capability that simply returns the directory where networking scripts go.</source>
          <target state="translated">모든 기능에서 머신에 액세스 할 수 있으므로 기능은 &lt;em&gt;다른&lt;/em&gt; 기능을 호출 할 수도 있습니다. 이 기능은 상속 기능 메커니즘을 사용하여 잠재적으로 도우미에게 자세한 정보를 요청할 때 유용합니다. 예를 들어 &quot;redhat&quot;게스트에는 &quot;network_scripts_dir&quot;기능이있어 네트워킹 스크립트가있는 디렉토리를 간단히 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b08ae37ed0218a85800a574ce852c8c93ad73b28" translate="yes" xml:space="preserve">
          <source>Snapshot</source>
          <target state="translated">Snapshot</target>
        </trans-unit>
        <trans-unit id="e71c2ca1b3ecc431633695ab0f78c8d0466ad460" translate="yes" xml:space="preserve">
          <source>Snapshot Delete</source>
          <target state="translated">스냅 샷 삭제</target>
        </trans-unit>
        <trans-unit id="e736d731945ed97fc8089838f5600ae38751c50d" translate="yes" xml:space="preserve">
          <source>Snapshot List</source>
          <target state="translated">스냅 샷 목록</target>
        </trans-unit>
        <trans-unit id="651caca2c95290b2b6f12d107d935745d1ae7dcf" translate="yes" xml:space="preserve">
          <source>Snapshot Pop</source>
          <target state="translated">스냅 샷 팝</target>
        </trans-unit>
        <trans-unit id="93924b7aa44ce0118438bd0facf81f17db8a086a" translate="yes" xml:space="preserve">
          <source>Snapshot Push</source>
          <target state="translated">스냅 샷 푸시</target>
        </trans-unit>
        <trans-unit id="517f8c4e218c75f8e08b8f70f86aa390642366b5" translate="yes" xml:space="preserve">
          <source>Snapshot Restore</source>
          <target state="translated">스냅 샷 복원</target>
        </trans-unit>
        <trans-unit id="741fa11d1c5f94bc244337dbb275d216fc9225cd" translate="yes" xml:space="preserve">
          <source>Snapshot Save</source>
          <target state="translated">스냅 샷 저장</target>
        </trans-unit>
        <trans-unit id="55420c59a1c2e9a70f07a6fa02f0d228ffb87b76" translate="yes" xml:space="preserve">
          <source>Snapshots</source>
          <target state="translated">Snapshots</target>
        </trans-unit>
        <trans-unit id="04b9216726d7c09d9db92a26cd36cc3cd23aad6f" translate="yes" xml:space="preserve">
          <source>Snapshotting is not supported by every provider. If it is not supported, Vagrant will give you an error message.</source>
          <target state="translated">모든 공급자가 스냅 샷을 지원하지는 않습니다. 지원되지 않으면 Vagrant는 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="20cc8e7f4db2cff744401a2dac63b2035e464cb5" translate="yes" xml:space="preserve">
          <source>Some capabilities must also return values back to the caller, so be aware of that when implementing a capability.</source>
          <target state="translated">일부 기능은 또한 호출자에게 값을 다시 반환해야하므로 기능을 구현할 때이 점에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="8f4585a75ff363ccb4bca09fcead42d4cb00abbe" translate="yes" xml:space="preserve">
          <source>Some cases require the DHCP assigned default route to be untouched. In these cases one may specify the &lt;code&gt;use_dhcp_assigned_default_route&lt;/code&gt; option. As an example:</source>
          <target state="translated">경우에 따라 DHCP 할당 기본 경로를 그대로 유지해야합니다. 이 경우 &lt;code&gt;use_dhcp_assigned_default_route&lt;/code&gt; 옵션을 지정할 수 있습니다. 예로서:</target>
        </trans-unit>
        <trans-unit id="771475f27cc0b16aaa4d96b71258bde9ca95703d" translate="yes" xml:space="preserve">
          <source>Some of these options are for advanced usage only and should not be used unless you understand their purpose.</source>
          <target state="translated">이러한 옵션 중 일부는 고급 사용을위한 것이며 사용자가 목적을 이해하지 않으면 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="02edf67c04f8ec340ff580ac1a929baed2950a4e" translate="yes" xml:space="preserve">
          <source>Some providers require all &quot;child&quot; snapshots to be deleted first. Vagrant itself does not track what these children are. If this is the case (such as with VirtualBox), then you must be sure to delete the snapshots in the reverse order they were taken.</source>
          <target state="translated">일부 제공자는 모든 &quot;자식&quot;스냅 샷을 먼저 삭제해야합니다. 유랑 자체는이 아이들이 무엇인지 추적하지 않습니다. 이 경우 (VirtualBox와 같은 경우) 스냅 샷을 역순으로 삭제해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d97817aee740040a8822acd058cddef1ff67eeb" translate="yes" xml:space="preserve">
          <source>Sometimes it is preferable to mount folders with a different owner/group than the default SSH user. Keep in mind that these options will only affect the synced folder itself. If you want to modify the owner/group of the synced folder's parent folders use a script. It is possible to set these options:</source>
          <target state="translated">때로는 기본 SSH 사용자와 다른 소유자 / 그룹으로 폴더를 마운트하는 것이 좋습니다. 이 옵션은 동기화 된 폴더에만 영향을 미칩니다. 동기화 된 폴더 상위 폴더의 소유자 / 그룹을 수정하려면 스크립트를 사용하십시오. 다음 옵션을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97bd3d86c4e62195e7156605183cef12802cc7f1" translate="yes" xml:space="preserve">
          <source>Sometimes, certain hypervisors do not allow you to bring up virtual machines if more than one hypervisor is in use. If you are lucky, you might see the following error message come up when trying to bring up a virtual machine with Vagrant and VirtualBox:</source>
          <target state="translated">경우에 따라 특정 하이퍼 바이저에서 둘 이상의 하이퍼 바이저가 사용중인 경우 가상 머신을 가져올 수 없습니다. 운이 좋으면 Vagrant 및 VirtualBox가있는 가상 시스템을 시작하려고 할 때 다음 오류 메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b215125afddb6c9c07e3cf61e999ec04bef615fa" translate="yes" xml:space="preserve">
          <source>Specifying NFS Arguments</source>
          <target state="translated">NFS 인수 지정</target>
        </trans-unit>
        <trans-unit id="576eb42c00c2e4a957712016b90afc223caf1901" translate="yes" xml:space="preserve">
          <source>Specifying a Primary Machine</source>
          <target state="translated">기본 머신 지정</target>
        </trans-unit>
        <trans-unit id="bffa1f4fbf4d9359c3064dc236396e53a0a310b0" translate="yes" xml:space="preserve">
          <source>Specifying a Recipe</source>
          <target state="translated">레시피 지정</target>
        </trans-unit>
        <trans-unit id="22b7e12fd60726caf168ed8e6d87a9b8e4e0c348" translate="yes" xml:space="preserve">
          <source>Specifying a Run List</source>
          <target state="translated">실행 목록 지정</target>
        </trans-unit>
        <trans-unit id="fd2dc3f5213f54f765546e82663cdefd9c48195a" translate="yes" xml:space="preserve">
          <source>Specifying the Puppet Master</source>
          <target state="translated">퍼펫 마스터 지정</target>
        </trans-unit>
        <trans-unit id="a62206753e573d41113c78b8668b75bba34147c9" translate="yes" xml:space="preserve">
          <source>Static IP</source>
          <target state="translated">고정 IP</target>
        </trans-unit>
        <trans-unit id="cf386cc88936fa29ff85da1260ccb52096f5c02d" translate="yes" xml:space="preserve">
          <source>Static Inventory</source>
          <target state="translated">정적 인벤토리</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="4d3d0e6606322bb4c2c48d7743cd59c9bd7c4959" translate="yes" xml:space="preserve">
          <source>Support for symbolic links across synced folder implementations and host/guest combinations is not consistent. Vagrant does its best to make sure symbolic links work by configuring various hypervisors (such as VirtualBox), but some host/guest combinations still do not work properly. This can affect some development environments that rely on symbolic links.</source>
          <target state="translated">동기화 된 폴더 구현 및 호스트 / 게스트 조합에서 기호 링크 지원이 일관되지 않습니다. Vagrant는 다양한 하이퍼 바이저 (예 : VirtualBox)를 구성하여 심볼릭 링크가 작동하도록 최선을 다하지만 일부 호스트 / 게스트 조합은 여전히 ​​제대로 작동하지 않습니다. 이는 심볼릭 링크에 의존하는 일부 개발 환경에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="afcbb0471ae71578861bacefcb207d4da5d9a9d2" translate="yes" xml:space="preserve">
          <source>Support for synced folders within the WSL is implementation dependent. In most cases synced folders will not be supported when running Vagrant within WSL on a VolFs file system. Synced folder implementations must &quot;opt-in&quot; to supporting usage from VolFs file systems. To use synced folders from within the WSL that do not support VolFs file systems, move the Vagrant project directory to a DrvFs file system location (/mnt/c/ prefixed path for example).</source>
          <target state="translated">WSL 내에서 동기화 된 폴더 지원은 구현에 따라 다릅니다. 대부분의 경우 VolFs 파일 시스템의 WSL 내에서 Vagrant를 실행할 때는 동기화 된 폴더가 지원되지 않습니다. 동기화 된 폴더 구현은 VolF 파일 시스템에서의 사용을 지원하기 위해 &quot;선택&quot;해야합니다. VolF 파일 시스템을 지원하지 않는 WSL 내에서 동기화 된 폴더를 사용하려면 Vagrant 프로젝트 디렉토리를 DrvFs 파일 시스템 위치 (예 : / mnt / c / 접두사 경로)로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="1a245d3f09032bc3c88862f3cab74a5531ef4422" translate="yes" xml:space="preserve">
          <source>Supported Windows guest operating systems: - Windows 7 - Windows 8 - Windows Server 2008 - Windows Server 2008 R2 - Windows Server 2012 - Windows Server 2012 R2</source>
          <target state="translated">지원되는 Windows 게스트 운영 체제 :-Windows 7-Windows 8-Windows Server 2008-Windows Server 2008 R2-Windows Server 2012-Windows Server 2012 R2</target>
        </trans-unit>
        <trans-unit id="7f53e681dd396cc6096149b87700d39461bd99d3" translate="yes" xml:space="preserve">
          <source>Supported options are:</source>
          <target state="translated">지원되는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b24247fb5a9d8d8059901182187be57626f3ba71" translate="yes" xml:space="preserve">
          <source>Suspend</source>
          <target state="translated">Suspend</target>
        </trans-unit>
        <trans-unit id="37008620b710f26771f72ef684d0d762ce0c312d" translate="yes" xml:space="preserve">
          <source>Symbolic Links</source>
          <target state="translated">심볼릭 링크</target>
        </trans-unit>
        <trans-unit id="adad8dd96e48235b08d7745d5b736e09eb0802d7" translate="yes" xml:space="preserve">
          <source>Synced Folders</source>
          <target state="translated">동기화 된 폴더</target>
        </trans-unit>
        <trans-unit id="7e43ade39650fa3b1a0339c15739e674c618d1c2" translate="yes" xml:space="preserve">
          <source>Synced Folders and Networking</source>
          <target state="translated">동기화 된 폴더 및 네트워킹</target>
        </trans-unit>
        <trans-unit id="2f54572b1ce81515ed910267c00e8f7798210476" translate="yes" xml:space="preserve">
          <source>Synced folders are automatically setup during &lt;code&gt;vagrant up&lt;/code&gt; and &lt;code&gt;vagrant reload&lt;/code&gt;.</source>
          <target state="translated">동기화 된 폴더는 &lt;code&gt;vagrant up&lt;/code&gt; 및 &lt;code&gt;vagrant reload&lt;/code&gt; 중에 자동으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b7957ffbeffedb5aa6e697f028f2ac2c75c27ec" translate="yes" xml:space="preserve">
          <source>Synced folders are configured within your Vagrantfile using the &lt;code&gt;config.vm.synced_folder&lt;/code&gt; method. Usage of the configuration directive is very simple:</source>
          <target state="translated">동기화 된 폴더는 &lt;code&gt;config.vm.synced_folder&lt;/code&gt; 메소드를 사용하여 Vagrantfile 내에서 구성됩니다 . 구성 지시문의 사용법은 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="ee1df865332167437a0f4ec0a47084be11ee932f" translate="yes" xml:space="preserve">
          <source>Synced folders can be disabled by adding the &lt;code&gt;disabled&lt;/code&gt; option to any definition:</source>
          <target state="translated">모든 정의에 &lt;code&gt;disabled&lt;/code&gt; 옵션을 추가하여 동기화 된 폴더를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8d3ad345cae6fc13b2811825e748fd553bf89e0" translate="yes" xml:space="preserve">
          <source>Synced folders enable Vagrant to sync a folder on the host machine to the guest machine, allowing you to continue working on your project's files on your host machine, but use the resources in the guest machine to compile or run your project.</source>
          <target state="translated">동기화 된 폴더를 통해 Vagrant는 호스트 시스템의 폴더를 게스트 시스템과 동기화하여 호스트 시스템의 프로젝트 파일 작업을 계속할 수 있지만 게스트 시스템의 리소스를 사용하여 프로젝트를 컴파일하거나 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e8f4375b560e83228f9a653dc4b13d8dc4efb1ca" translate="yes" xml:space="preserve">
          <source>System Packages</source>
          <target state="translated">시스템 패키지</target>
        </trans-unit>
        <trans-unit id="5e2b5098bfa8f2048bfca043eee4908d63911dd8" translate="yes" xml:space="preserve">
          <source>Take a look at how the VirtualBox provider &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/providers/virtualbox/action.rb#L287&quot;&gt;uses actions to build up complicated multi-step processes&lt;/a&gt;. The AWS provider &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/blob/master/lib/vagrant-aws/action.rb&quot;&gt;uses a similar process&lt;/a&gt;.</source>
          <target state="translated">VirtualBox 제공자 &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/providers/virtualbox/action.rb#L287&quot;&gt;가 조치를 사용하여 복잡한 다단계 프로세스를 빌드&lt;/a&gt; 하는 방법을 살펴보십시오 . AWS 공급자 &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/blob/master/lib/vagrant-aws/action.rb&quot;&gt;는 비슷한 프로세스를 사용합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d40981346830c3f1d71a693a809fb51907324ae8" translate="yes" xml:space="preserve">
          <source>Testing Your Plugin</source>
          <target state="translated">플러그인 테스트</target>
        </trans-unit>
        <trans-unit id="80c8aa99f14a9f70a591e12d73d91b0e6acef44b" translate="yes" xml:space="preserve">
          <source>Testing an interface, such as an API to a service component.</source>
          <target state="translated">서비스 컴포넌트에 대한 API와 같은 인터페이스 테스트</target>
        </trans-unit>
        <trans-unit id="a7dab1e9f8910fe7320b1b8a1895bbe9035a8c89" translate="yes" xml:space="preserve">
          <source>Testing the Box</source>
          <target state="translated">상자 테스트</target>
        </trans-unit>
        <trans-unit id="0a92825914a95cb39c7abf8fcbd321891181ea61" translate="yes" xml:space="preserve">
          <source>That is the only change that is needed to enable parallelization.</source>
          <target state="translated">이것이 병렬화를 활성화하는 데 필요한 유일한 변경 사항입니다.</target>
        </trans-unit>
        <trans-unit id="e9199b7b6209502e7357ec113fdf231b20b0a7ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cli/rsync&quot;&gt;rsync&lt;/a&gt; and &lt;a href=&quot;../cli/rsync-auto&quot;&gt;rsync-auto&lt;/a&gt; commands can be used to force a resync and to automatically resync when changes occur in the filesystem. Without running these commands, Vagrant only syncs the folders on &lt;code&gt;vagrant up&lt;/code&gt; or &lt;code&gt;vagrant reload&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../cli/rsync&quot;&gt;rsync를&lt;/a&gt; 하고 &lt;a href=&quot;../cli/rsync-auto&quot;&gt;rsync를-자동&lt;/a&gt; 명령은 재 동기화를 강제로 변경이 파일 시스템에서 발생할 때 자동으로 재 동기화 할 수 있습니다. 이러한 명령을 실행하지 않으면 Vagrant는 &lt;code&gt;vagrant up&lt;/code&gt; 또는 &lt;code&gt;vagrant reload&lt;/code&gt; 에서만 폴더를 동기화합니다 .</target>
        </trans-unit>
        <trans-unit id="4f6fc1fab87e9386e3839fd0d49cdae34e906d8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../synced-folders/basic_usage&quot;&gt;default shared directory&lt;/a&gt; is enabled (&lt;code&gt;.&lt;/code&gt; &amp;rarr; &lt;code&gt;/vagrant&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../synced-folders/basic_usage&quot;&gt;기본 공유 디렉토리는&lt;/a&gt; 사용할 수 있습니다 ( &lt;code&gt;.&lt;/code&gt; &amp;rarr; &lt;code&gt;/vagrant&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e7d1addf05ea7ceb03a4f706908f4a5a57c5f00d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ansible_common#groups&quot;&gt;&lt;code&gt;groups&lt;/code&gt;&lt;/a&gt; option can be used to pass a hash of group names and group members to be included in the generated inventory file.</source>
          <target state="translated">&lt;a href=&quot;ansible_common#groups&quot;&gt; &lt;code&gt;groups&lt;/code&gt; &lt;/a&gt; 옵션은 생성 된 인벤토리 파일에 포함 할 그룹 이름과 그룹 멤버의 해시를 전달하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fe7cf6144ce7fedb77aafaac5b1f720144ab3e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ansible_common#version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; option is set to &lt;code&gt;&quot;latest&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;ansible_common#version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 옵션이 설정되어 &lt;code&gt;&quot;latest&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7742398c3479c2c73aaf1319e1797d8f6528eed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;format&quot;&gt;Box File Format&lt;/a&gt; provides more information about what else goes into a Vagrant box.</source>
          <target state="translated">&lt;a href=&quot;format&quot;&gt;상자의 파일 형식은&lt;/a&gt; 부랑자 상자에가는 사람에 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c46d2e4edc992bfcb4f86d2e846b1095a2258c42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;2&quot;&lt;/code&gt; in the first line above represents the version of the configuration object &lt;code&gt;config&lt;/code&gt; that will be used for configuration for that block (the section between the &lt;code&gt;do&lt;/code&gt; and the &lt;code&gt;end&lt;/code&gt;). This object can be very different from version to version.</source>
          <target state="translated">&lt;code&gt;&quot;2&quot;&lt;/code&gt; 첫번째 라인 위의 구성 객체의 버전을 나타내는 &lt;code&gt;config&lt;/code&gt; 하는 블록을 구성하는데 사용한다 ((가) 사이의 부분 &lt;code&gt;do&lt;/code&gt; 하고 &lt;code&gt;end&lt;/code&gt; ). 이 개체는 버전마다 매우 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cd0e3e52bf8a2c0b4181bb7636a743c12a50a6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--provider&lt;/code&gt; flag on a &lt;code&gt;vagrant up&lt;/code&gt; is chosen above all else, if it is present.</source>
          <target state="translated">&lt;code&gt;--provider&lt;/code&gt; &lt;code&gt;vagrant up&lt;/code&gt; 의 --provider 플래그 는 존재하는 경우 무엇보다도 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="06ab0ee04b4e21d27a0480248ee8641e64d87f52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--provision-with&lt;/code&gt; flag can be used if you only want to run a specific provisioner if you have multiple provisioners specified. For example, if you have a shell and Puppet provisioner and only want to run the shell one, you can do &lt;code&gt;vagrant provision --provision-with shell&lt;/code&gt;. The arguments to &lt;code&gt;--provision-with&lt;/code&gt; can be the provisioner type (such as &quot;shell&quot;) or the provisioner name (such as &quot;bootstrap&quot; from above).</source>
          <target state="translated">여러 프로 비 &lt;code&gt;--provision-with&lt;/code&gt; 지정된 경우 특정 프로 비 저너 만 실행하려는 경우 --provision-with 플래그를 사용할 수 있습니다. 예를 들어, 쉘 및 Puppet &lt;code&gt;vagrant provision --provision-with shell&lt;/code&gt; 있고 쉘 하나만 실행하려는 경우, vagrant provision --provision-with shell을 수행 할 수 있습니다 . &lt;code&gt;--provision-with&lt;/code&gt; 의 인수 는 프로 비저 유형 (예 : &quot;shell&quot;) 또는 프로 비저 이름 (예 : &quot;bootstrap&quot;) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3930fe3b53fbd27992dbdaea8a82a0b49737147b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:id&lt;/code&gt; special parameter is replaced with the ID of the virtual machine being created, so when a VBoxManage command requires an ID, you can pass this special parameter.</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; 특별한 매개 변수는 가상 머신의 ID로 대체되어 있으므로 VBoxManage 명령이 ID를 필요로 할 때, 당신은이 특별한 매개 변수를 전달할 수 있습니다 생성된다.</target>
        </trans-unit>
        <trans-unit id="caa6b207c1c1477e2ff865e950f7b574b8d60f26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_detected_errors&lt;/code&gt; method returns any errors already detected by Vagrant, such as unknown configuration keys. This returns an array of error messages, so be sure to turn it into the proper Hash object to return later.</source>
          <target state="translated">&lt;code&gt;_detected_errors&lt;/code&gt; 의 방법은 알 수없는 구성 키 이미 방랑에 의해 감지 오류를 반환합니다. 이 오류 메시지 배열을 반환하므로 나중에 반환 할 적절한 해시 개체로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c22639f6c79b1433f645c2089cf3673c1c843ec0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws&lt;/code&gt; box format is just a Vagrantfile defaulting some configuration. You can see an &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/tree/master/example_box&quot;&gt;example aws box unpacked here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;aws&lt;/code&gt; 상자 형식은 단지 몇 가지 설정을 디폴트로 Vagrantfile이다. 당신은 볼 수 있습니다 &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws/tree/master/example_box&quot;&gt;예를 들어, AWS 여기에 압축을 푼 상자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5543227f467f2bd4a76620433bab7e93307f414" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build_image&lt;/code&gt; function accepts options as a second parameter. Here are the available options:</source>
          <target state="translated">&lt;code&gt;build_image&lt;/code&gt; 의 함수는 두 번째 매개 변수 옵션을 받아 들인다. 사용 가능한 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a7b4ea8875837322ab43cb5d8720ff0df090358e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud auth&lt;/code&gt; command is for handling all things related to authorization with Vagrant Cloud.</source>
          <target state="translated">&lt;code&gt;cloud auth&lt;/code&gt; 명령은 방랑 클라우드와 인증에 관련된 모든 일을 처리하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="0e05bc47482a8727e9728125f7b2478f30b9b75a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud box&lt;/code&gt; command is used to manage life cycle operations for all &lt;code&gt;box&lt;/code&gt; entities on Vagrant Cloud.</source>
          <target state="translated">&lt;code&gt;cloud box&lt;/code&gt; 명령은 모든 수명주기 작업을 관리하는 데 사용되는 &lt;code&gt;box&lt;/code&gt; 방랑 클라우드에 엔티티.</target>
        </trans-unit>
        <trans-unit id="e49ba504c609dc4b9cc1eacce7457f3ecb32b0b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud provider&lt;/code&gt; command is used to manage the life cycle operations for all &lt;code&gt;provider&lt;/code&gt; entities on Vagrant Cloud.</source>
          <target state="translated">&lt;code&gt;cloud provider&lt;/code&gt; 명령은 모든 생명주기 작업을 관리하는 데 사용되는 &lt;code&gt;provider&lt;/code&gt; 방랑 클라우드에 엔티티.</target>
        </trans-unit>
        <trans-unit id="2ef2e3d0f91f1c6fc1946dd9334387ead56ba701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloud version&lt;/code&gt; command is used to manage life cycle operations for all &lt;code&gt;version&lt;/code&gt; entities for a box on Vagrant Cloud.</source>
          <target state="translated">&lt;code&gt;cloud version&lt;/code&gt; 명령은 모든 수명주기 작업을 관리하는 데 사용되는 &lt;code&gt;version&lt;/code&gt; 방랑 클라우드에 상자 엔티티.</target>
        </trans-unit>
        <trans-unit id="3095668aa1bff6d8e0f4d0a871a1cc9b0f2bdf49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; method is called early in the machine booting process to allow the provisioner to define new configuration on the machine, such as sharing folders, defining networks, etc. As an example, the &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/provisioners/chef/provisioner/chef_solo.rb#L24&quot;&gt;Chef solo provisioner&lt;/a&gt; uses this to define shared folders.</source>
          <target state="translated">&lt;code&gt;configure&lt;/code&gt; 방법은 제공자는 예를 들어 등, 네트워크를 정의 폴더를 공유로, 시스템에 새로운 구성을 정의 할 수 있도록 초기 시스템 부팅 과정에서 호출되면 &lt;a href=&quot;https://github.com/hashicorp/vagrant/blob/master/plugins/provisioners/chef/provisioner/chef_solo.rb#L24&quot;&gt;요리사 솔로 제공자가&lt;/a&gt; 공유 폴더를 정의하려면이 옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9dca778f5df43dffbf0b1eb5d753c7594a8eb5a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; command does not remove a box that may have been installed on your computer during &lt;code&gt;vagrant up&lt;/code&gt;. Thus, even if you run &lt;code&gt;vagrant destroy&lt;/code&gt;, the box installed in the system will still be present on the hard drive. To return your computer to the state as it was before &lt;code&gt;vagrant up&lt;/code&gt; command, you need to use &lt;code&gt;vagrant box remove&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 명령 중에 컴퓨터에 설치되었을 수 상자 제거하지 않습니다 &lt;code&gt;vagrant up&lt;/code&gt; . 따라서 &lt;code&gt;vagrant destroy&lt;/code&gt; 를 실행하더라도 시스템에 설치된 상자는 여전히 하드 드라이브에 있습니다. 컴퓨터를 &lt;code&gt;vagrant up&lt;/code&gt; 명령 이전 상태로 되돌리려면 &lt;code&gt;vagrant box remove&lt;/code&gt; 를 사용해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="e06d73776f82c6c494602141dd32fac54bb2f6d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;detect?&lt;/code&gt; method is called by Vagrant at some point after the machine is booted in order to determine what operating system the guest is running. If you detect that it is your operating system, return &lt;code&gt;true&lt;/code&gt; from &lt;code&gt;detect?&lt;/code&gt;. Otherwise, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;detect?&lt;/code&gt; 게스트가 실행중인 운영 체제를 확인하기 위해 시스템이 부팅 된 후 어느 시점에서 Vagrant가 메소드를 호출합니다. 운영 체제임을 감지하면 감지 에서 &lt;code&gt;true&lt;/code&gt; 를 리턴 &lt;code&gt;detect?&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbdfb20cc486dd12e0985b59e95d1f857e791a48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;detect?&lt;/code&gt; method is called by Vagrant very early on in its initialization process to determine if the OS that Vagrant is running on is this host. If you detect that it is your operating system, return &lt;code&gt;true&lt;/code&gt; from &lt;code&gt;detect?&lt;/code&gt;. Otherwise, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;detect?&lt;/code&gt; 이 메소드는 Vagrant가 실행중인 OS가이 호스트인지 확인하기 위해 초기화 프로세스 초기에 Vagrant에 의해 호출됩니다. 운영 체제임을 감지하면 감지 에서 &lt;code&gt;true&lt;/code&gt; 를 리턴 &lt;code&gt;detect?&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b57d8e81268d8735eecf4d1cb62c7fa0d1b6f83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;execute&lt;/code&gt; method is called when the command is invoked, and it should return the exit status (0 for success, anything else for error).</source>
          <target state="translated">&lt;code&gt;execute&lt;/code&gt; 방법은 명령이 호출 될 때라고하며 (에러, 성공을 위해 무엇을 0) 종료 상태를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b5671c2a3c03bbab4553b211e8d64205bcc3733" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize!&lt;/code&gt; method is called only once ever on the final configuration object in order to set defaults. If &lt;code&gt;finalize!&lt;/code&gt; is called, that configuration will never be merged again, it is final. This lets you detect any &lt;code&gt;UNSET_VALUE&lt;/code&gt; and set the proper default, as we do in the above example.</source>
          <target state="translated">&lt;code&gt;finalize!&lt;/code&gt; 메소드는 기본값을 설정하기 위해 최종 구성 오브젝트에서 한 번만 호출됩니다. &lt;code&gt;finalize!&lt;/code&gt; 하면 ! 이 구성은 다시 병합되지 않으며 최종입니다. 이를 통해 위의 예에서와 같이 &lt;code&gt;UNSET_VALUE&lt;/code&gt; 를 감지 하고 적절한 기본값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5abfe66513453924d0ac73baeb0288e81d1ae3c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;for i in  ...&lt;/code&gt; construct in Ruby actually modifies the value of &lt;code&gt;i&lt;/code&gt; for each iteration, rather than making a copy. Therefore, when you run this, every node will actually provision with the same text.</source>
          <target state="translated">Ruby 의 &lt;code&gt;for i in ...&lt;/code&gt; 구문은 실제로 사본을 작성하지 않고 각 반복마다 &lt;code&gt;i&lt;/code&gt; 값을 수정합니다 . 따라서이를 실행하면 모든 노드가 실제로 동일한 텍스트로 프로비저닝됩니다.</target>
        </trans-unit>
        <trans-unit id="8db1dfc6ddb3057a765d5cba7ea72016fce3c5a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse_options&lt;/code&gt; method is available which will parse the command line for you. It takes an &lt;a href=&quot;http://ruby-doc.org/stdlib-1.9.3/libdoc/optparse/rdoc/OptionParser.html&quot;&gt;OptionParser&lt;/a&gt; as an argument, and adds some common elements to it such as the &lt;code&gt;--help&lt;/code&gt; flag, automatically showing help if requested. View the API docs directly for more information.</source>
          <target state="translated">&lt;code&gt;parse_options&lt;/code&gt; 의 방법은 당신을 위해 명령 줄을 구문 분석 할 수 있습니다. 그것은 소요 &lt;a href=&quot;http://ruby-doc.org/stdlib-1.9.3/libdoc/optparse/rdoc/OptionParser.html&quot;&gt;OptionParser를&lt;/a&gt; 인수로하고, 같은으로 몇 가지 공통 요소를 추가 &lt;code&gt;--help&lt;/code&gt; 요청이있을 경우 자동으로 도움을 보여주는 플래그. 자세한 내용은 API 문서를 직접보십시오.</target>
        </trans-unit>
        <trans-unit id="b35b992657d43393ea004778b8fd4f1ac7312743" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse_options&lt;/code&gt; method is available which will parse the command line for you. It takes an &lt;a href=&quot;https://ruby-doc.org/stdlib-1.9.3/libdoc/optparse/rdoc/OptionParser.html&quot;&gt;OptionParser&lt;/a&gt; as an argument, and adds some common elements to it such as the &lt;code&gt;--help&lt;/code&gt; flag, automatically showing help if requested. View the API docs directly for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29246045eda8a44e1837dd83a070e7e69daa95da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playbook.yml&lt;/code&gt; file is stored in your Vagrant's project home directory.</source>
          <target state="translated">&lt;code&gt;playbook.yml&lt;/code&gt; 의 파일은 방랑의 프로젝트 홈 디렉토리에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="3c27be372193634ae1f9b9bff10185f18daf4030" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playbook&lt;/code&gt; option is strictly required by both Ansible provisioners (&lt;a href=&quot;ansible&quot;&gt;&lt;code&gt;ansible&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ansible_local&quot;&gt;&lt;code&gt;ansible_local&lt;/code&gt;&lt;/a&gt;), as illustrated in this basic Vagrantfile` configuration:</source>
          <target state="translated">&lt;code&gt;playbook&lt;/code&gt; 옵션 엄격히 (모두 Ansible provisioners에 필요한 &lt;a href=&quot;ansible&quot;&gt; &lt;code&gt;ansible&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;ansible_local&quot;&gt; &lt;code&gt;ansible_local&lt;/code&gt; &lt;/a&gt; 기본적인 Vagrantfile` 구성에 도시 된 바와 같이)</target>
        </trans-unit>
        <trans-unit id="e861ced1f8b5cafbf53d0a4de6a9b32e203c9c05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provision&lt;/code&gt; method is called when the machine is booted and ready for SSH connections. In this method, the provisioner should execute any commands that need to be executed.</source>
          <target state="translated">&lt;code&gt;provision&lt;/code&gt; 컴퓨터가 부팅 및 SSH 연결을위한 준비가 될 때 메서드가 호출됩니다. 이 방법에서 provisioner는 실행해야하는 모든 명령을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c556a245edf8af7cfea11c26e8e9ac9350b3b8c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;puppet_server&lt;/code&gt; provisioner takes various options. None are strictly required. They are listed below:</source>
          <target state="translated">&lt;code&gt;puppet_server&lt;/code&gt; 의 제공자는 다양한 옵션을합니다. 꼭 필요한 것은 없습니다. 그것들은 아래와 같습니다 :</target>
        </trans-unit>
        <trans-unit id="e118119882eed4b48c1b6e39401f3c96cdc9ae5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rsync-auto&lt;/code&gt; command does not currently handle machine state changes gracefully. For example, if you start the &lt;code&gt;rsync-auto&lt;/code&gt; command, then halt the guest machine, then make changes to some files, then boot it back up, &lt;code&gt;rsync-auto&lt;/code&gt; will not attempt to resync.</source>
          <target state="translated">&lt;code&gt;rsync-auto&lt;/code&gt; 명령은 현재 정상적으로 기계 상태 변경을 처리하지 않습니다. 예를 들어, &lt;code&gt;rsync-auto&lt;/code&gt; 명령을 시작한 다음 게스트 시스템을 중지 한 다음 일부 파일을 변경 한 다음 다시 부팅하면 &lt;code&gt;rsync-auto&lt;/code&gt; 가 재 동기화를 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3492a7febca42b2a6152991481af17957cfc7bbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_file&lt;/code&gt; parameter is mandatory if &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;:single_run&lt;/code&gt;, but can also be specified when &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;:bootstrap&lt;/code&gt; - in this case the file will be executed after the host has been bootstrapped.</source>
          <target state="translated">&lt;code&gt;run_file&lt;/code&gt; 경우 매개 변수는 필수입니다 &lt;code&gt;mode&lt;/code&gt; 로 설정되어 &lt;code&gt;:single_run&lt;/code&gt; 하지만 경우도 지정할 수 있습니다 &lt;code&gt;mode&lt;/code&gt; 로 설정되어 &lt;code&gt;:bootstrap&lt;/code&gt; 호스트가 부트 스트랩 한 후이 경우 파일이 실행됩니다 -.</target>
        </trans-unit>
        <trans-unit id="21a2cb9b2376d01fe13f0746f01152789fa06f28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vagrant box&lt;/code&gt; utility provides all the functionality for managing boxes. You can read the documentation on the &lt;a href=&quot;cli/box&quot;&gt;vagrant box&lt;/a&gt; command for more information.</source>
          <target state="translated">&lt;code&gt;vagrant box&lt;/code&gt; 유틸리티는 상자를 관리하기위한 모든 기능을 제공합니다. 자세한 내용 은 &lt;a href=&quot;cli/box&quot;&gt;vagrant box&lt;/a&gt; 명령에 대한 설명서를 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9011634bd80cb69484b8548d690e3d9e15d2c43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;virtualbox&lt;/code&gt; box format is just a flat directory of the contents of a &lt;code&gt;VBoxManage export&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;virtualbox&lt;/code&gt; 박스 형식은 내용의 단지 평평한 디렉토리입니다 &lt;code&gt;VBoxManage export&lt;/code&gt; 명령.</target>
        </trans-unit>
        <trans-unit id="cf837faef6812ab269b6fc2ead1cfa650dfafe22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vm_integration_services&lt;/code&gt; configuration option consists of a simple Hash. The key values are the names of VM integration services to enable or disable for the VM. Vagrant includes an internal mapping of known services which allows them to be provided in a &quot;snake case&quot; format. When a provided key is unknown, the key value is used &quot;as-is&quot; without any modifications.</source>
          <target state="translated">&lt;code&gt;vm_integration_services&lt;/code&gt; 의 구성 옵션은 간단한 해시로 구성되어 있습니다. 주요 값은 VM에 대해 활성화 또는 비활성화 할 VM 통합 서비스의 이름입니다. Vagrant에는 알려진 서비스에 대한 내부 매핑이 포함되어있어 &quot;뱀 사례&quot;형식으로 제공 될 수 있습니다. 제공된 키를 알 수없는 경우 키 값은 수정없이 &quot;있는 그대로&quot;사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e15c4c61982b3725df526d80f2bfda1a9ccbe6cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vmware_fusion&lt;/code&gt; box format is just a flat directory of the contents of a &lt;code&gt;vmwarevm&lt;/code&gt; folder, but only including the bare essential files for VMware to function.</source>
          <target state="translated">&lt;code&gt;vmware_fusion&lt;/code&gt; 의 상자 형식은 내용의 단지 평평한 디렉토리입니다 &lt;code&gt;vmwarevm&lt;/code&gt; 의 폴더 만 기능에 VM웨어의 베어 필수 파일을 포함.</target>
        </trans-unit>
        <trans-unit id="1284563dc4451fdb9467a66bfe7e0eeb1b812d25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with_target_vms&lt;/code&gt; method is a helper that helps you interact with the machines that Vagrant manages in a standard Vagrant way. This method automatically does the right thing in the case of multi-machine environments, handling target machines on the command line (&lt;code&gt;vagrant foo my-vm&lt;/code&gt;), etc. If you need to do any manipulation of a Vagrant machine, including SSH access, this helper should be used.</source>
          <target state="translated">&lt;code&gt;with_target_vms&lt;/code&gt; 의 방법은 방랑 표준 방랑 방식으로 관리하는 기계와 상호 작용을하는 데 도움이되는 도우미입니다. 이 방법은 다중 머신 환경의 경우 명령 행에서 대상 머신 처리 ( &lt;code&gt;vagrant foo my-vm&lt;/code&gt; ) 등의 경우 자동으로 올바른 작업 을 수행합니다. SSH 액세스를 포함하여 Vagrant 머신을 조작해야하는 경우 도우미를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="73edfaa557cd469a64abf2d8953db76645fa536c" translate="yes" xml:space="preserve">
          <source>The Ansible Configuration File</source>
          <target state="translated">Ansible 구성 파일</target>
        </trans-unit>
        <trans-unit id="fd8fcc51d6fe6fb84b4fd4c249e62c07f730209a" translate="yes" xml:space="preserve">
          <source>The Ansible Local provisioner requires that all the Ansible Playbook files are available on the guest machine, at the location referred by the &lt;code&gt;provisioning_path&lt;/code&gt; option. Usually these files are initially present on the host machine (as part of your Vagrant project), and it is quite easy to share them with a Vagrant &lt;a href=&quot;../synced-folders/index&quot;&gt;Synced Folder&lt;/a&gt;.</source>
          <target state="translated">Ansible Local 제공 업체에서는 모든 Ansible Playbook 파일을 &lt;code&gt;provisioning_path&lt;/code&gt; 옵션이 참조하는 위치의 게스트 시스템에서 사용할 수 있어야합니다 . 일반적으로 이러한 파일은 초기에 호스트 시스템에 (Vagrant 프로젝트의 일부로) 존재하며 Vagrant &lt;a href=&quot;../synced-folders/index&quot;&gt;Synced Folder&lt;/a&gt; 와 공유하기가 매우 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="10a7f0f21f63991527fa3cfe2cabc8769164f370" translate="yes" xml:space="preserve">
          <source>The Ansible provisioner is implemented with native OpenSSH support in mind, and there is no official support for &lt;a href=&quot;https://github.com/paramiko/paramiko/&quot;&gt;paramiko&lt;/a&gt; (A native Python SSHv2 protocol library).</source>
          <target state="translated">Ansible provisioner는 기본 OpenSSH 지원을 염두에두고 구현되며 &lt;a href=&quot;https://github.com/paramiko/paramiko/&quot;&gt;paramiko&lt;/a&gt; (기본 Python SSHv2 프로토콜 라이브러리)에 대한 공식 지원은 없습니다 .</target>
        </trans-unit>
        <trans-unit id="82ae0b5963090d09ecc0674f76be45ddf815ccb6" translate="yes" xml:space="preserve">
          <source>The CFEngine provisioner automatically installs the latest &lt;a href=&quot;https://cfengine.com/cfengine-linux-distros&quot;&gt;CFEngine Community packages&lt;/a&gt; on the VM, then configures and starts CFEngine according to your specification.</source>
          <target state="translated">CFEngine 프로비저닝 프로그램 은 VM에 최신 &lt;a href=&quot;https://cfengine.com/cfengine-linux-distros&quot;&gt;CFEngine 커뮤니티 패키지&lt;/a&gt; 를 자동으로 설치 한 다음 사용자의 사양에 따라 CFEngine을 구성하고 시작합니다.</target>
        </trans-unit>
        <trans-unit id="01f3d2fb72b94ceb1edbe65a75911cb383067db0" translate="yes" xml:space="preserve">
          <source>The Chef Zero provisioner is configured basically the same way as the Chef Solo provisioner. See the &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo documentations&lt;/a&gt; for more information.</source>
          <target state="translated">Chef Zero 프로비저닝은 기본적으로 Chef Solo 프로비저닝과 동일한 방식으로 구성됩니다. 자세한 내용은 &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="77f1120793ea13a83d268a5e70a28ec947338da8" translate="yes" xml:space="preserve">
          <source>The Docker provider &lt;em&gt;does not&lt;/em&gt; require a &lt;code&gt;config.vm.box&lt;/code&gt; setting. Since the &quot;base image&quot; for a Docker container is pulled from the Docker Index or built from a Dockerfile, the box does not add much value, and is optional for this provider.</source>
          <target state="translated">Docker 공급자 &lt;em&gt;는 &lt;/em&gt; &lt;code&gt;config.vm.box&lt;/code&gt; 설정이 필요 &lt;em&gt;하지 않습니다&lt;/em&gt; . Docker 컨테이너의 &quot;기본 이미지&quot;는 Docker Index에서 가져 오거나 Dockerfile에서 빌드되므로 상자에 많은 값이 추가되지 않으며이 제공자의 경우 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="daa3ebe1904d1a37367a0e15eba6a7e0b9a37f7b" translate="yes" xml:space="preserve">
          <source>The Docker provider does not require a Vagrant box. The &lt;code&gt;config.vm.box&lt;/code&gt; setting is completely optional.</source>
          <target state="translated">Docker 공급자는 Vagrant 상자가 필요하지 않습니다. &lt;code&gt;config.vm.box&lt;/code&gt; 의 설정은 완전히 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="0031988016df07765708a92b82091e288592a3f1" translate="yes" xml:space="preserve">
          <source>The Docker provider does not support specifying options for &lt;code&gt;owner&lt;/code&gt; or &lt;code&gt;group&lt;/code&gt; on folders synced with a docker container.</source>
          <target state="translated">Docker 공급자는 docker 컨테이너와 동기화 된 폴더 에서 &lt;code&gt;owner&lt;/code&gt; 또는 &lt;code&gt;group&lt;/code&gt; 에 대한 옵션 지정을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4e8b7fa766c1a57de1a3924edf231dca14d7a74f" translate="yes" xml:space="preserve">
          <source>The Docker provider exposes some additional Vagrant commands that are useful for interacting with Docker containers. This helps with your workflow on top of Vagrant so that you have full access to Docker underneath.</source>
          <target state="translated">Docker 공급자는 Docker 컨테이너와 상호 작용하는 데 유용한 추가 Vagrant 명령을 노출합니다. 이렇게하면 Vagrant 상단의 워크 플로가 도움이되므로 아래의 Docker에 완전히 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef3fca467c644e5b38e8b168a41b8089d4b6bf93" translate="yes" xml:space="preserve">
          <source>The Docker provider has some provider-specific configuration options you may set. A complete reference is shown below.</source>
          <target state="translated">Docker 공급자에는 일부 공급자 별 구성 옵션이 있습니다. 완전한 참조는 아래와 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae648dde653a9b3415ed377d5075b12635124097" translate="yes" xml:space="preserve">
          <source>The Docker provider in Vagrant behaves just like any other provider. If you are familiar with Vagrant already, then using the Docker provider should be intuitive and simple.</source>
          <target state="translated">Vagrant의 Docker 공급자는 다른 공급자와 마찬가지로 작동합니다. Vagrant에 이미 익숙하다면 Docker 공급자를 사용하는 것이 직관적이고 간단해야합니다.</target>
        </trans-unit>
        <trans-unit id="173b90dd0d720ad7cb2b2b8e7f83a995892683b1" translate="yes" xml:space="preserve">
          <source>The Dockerfile is rebuilt when &lt;code&gt;vagrant reload&lt;/code&gt; is called.</source>
          <target state="translated">Dockerfile은 vagrant &lt;code&gt;vagrant reload&lt;/code&gt; 가 호출 될 때 다시 빌드됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e92223aea2e8e6436c0f4fe210209d531b48eaf" translate="yes" xml:space="preserve">
          <source>The HTTPS share can be explicitly disabled using the &lt;code&gt;--disable-https&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--disable-https&lt;/code&gt; 플래그를 사용하여 HTTPS 공유를 명시 적으로 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3ab64a49736da571153aae8147040ab548cc542" translate="yes" xml:space="preserve">
          <source>The Hyper-V provider is compatible with Windows 8.1 and later only. Prior versions of Hyper-V do not include the necessary APIs for Vagrant to work.</source>
          <target state="translated">Hyper-V 공급자는 Windows 8.1 이상과 만 호환됩니다. 이전 버전의 Hyper-V에는 Vagrant가 작동하는 데 필요한 API가 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9af33b9f5ed9526d3baa6c3721acc3cafa148d02" translate="yes" xml:space="preserve">
          <source>The IDs in the output that look like &lt;code&gt;a1b2c3&lt;/code&gt; can be used to control the Vagrant machine from anywhere on the system. Any Vagrant command that takes a target machine (such as &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;halt&lt;/code&gt;, &lt;code&gt;destroy&lt;/code&gt;) can be used with this ID to control it. For example: &lt;code&gt;vagrant destroy a1b2c3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a1b2c3&lt;/code&gt; 처럼 보이는 출력의 ID 는 시스템의 어느 곳에서나 Vagrant 시스템을 제어하는 ​​데 사용할 수 있습니다. 대상 컴퓨터를 사용하는 모든 Vagrant 명령 (예 : &lt;code&gt;up&lt;/code&gt; , &lt;code&gt;halt&lt;/code&gt; , &lt;code&gt;destroy&lt;/code&gt; ) 을이 ID와 함께 사용하여 제어 할 수 있습니다. 예 : &lt;code&gt;vagrant destroy a1b2c3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e76fbc10650d9afb3e74e0eafdc4d074a53ec8d" translate="yes" xml:space="preserve">
          <source>The Inventory File</source>
          <target state="translated">재고 파일</target>
        </trans-unit>
        <trans-unit id="dfb56a9a529f952670570b4b9adbcdfee8921329" translate="yes" xml:space="preserve">
          <source>The MAC address of the first network interface (the NAT adapter) should be noted, since you will need to put it in a Vagrantfile later as the value for &lt;code&gt;config.vm.base_mac&lt;/code&gt;. To get this value, use the VirtualBox GUI.</source>
          <target state="translated">첫 번째 네트워크 인터페이스 (NAT 어댑터)의 MAC 주소는 나중에 &lt;code&gt;config.vm.base_mac&lt;/code&gt; 값으로 Vagrantfile 에 넣어야하므로주의해야합니다 . 이 값을 얻으려면 VirtualBox GUI를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="52021055f81aa74945d5ea1c6aea5dd52b78ccec" translate="yes" xml:space="preserve">
          <source>The OpenSSH compatible SSH config for a machine. This is usually the result of the &quot;ssh-config&quot; command. targeted</source>
          <target state="translated">머신에 대한 OpenSSH 호환 SSH 구성. 이것은 일반적으로 &quot;ssh-config&quot;명령의 결과입니다. 타겟팅 된</target>
        </trans-unit>
        <trans-unit id="474c14098f0fb3852d30c775c5eb1f79ef970516" translate="yes" xml:space="preserve">
          <source>The Playbook File</source>
          <target state="translated">플레이 북 파일</target>
        </trans-unit>
        <trans-unit id="b64c2c9147e5c81aba4034cb3f4087ad7640f4cd" translate="yes" xml:space="preserve">
          <source>The SMB synced folder type has a variety of options it accepts:</source>
          <target state="translated">SMB 동기화 폴더 유형에는 다음과 같은 다양한 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="da7efb4a06b7eb1756aa41d343b804640f0789a9" translate="yes" xml:space="preserve">
          <source>The SSH executable will not be able to access Pageant on Windows. While Vagrant is capable of accessing Pageant via internal libraries, the SSH executable does not have support for Pageant. This means keys from Pageant will not be available for forwarding when using the &lt;code&gt;vagrant ssh&lt;/code&gt; command.</source>
          <target state="translated">SSH 실행 파일은 Windows의 Pageant에 액세스 할 수 없습니다. Vagrant는 내부 라이브러리를 통해 Pageant에 액세스 할 수 있지만 SSH 실행 파일은 Pageant를 지원하지 않습니다. 이는 &lt;code&gt;vagrant ssh&lt;/code&gt; 명령을 사용할 때 Pageant의 키를 전달할 수 없음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="4c0542dd8849167ac56ffa62b6f913f560b8ddab" translate="yes" xml:space="preserve">
          <source>The SSH host addresses (and ports) must obviously be specified twice, in &lt;code&gt;Vagrantfile&lt;/code&gt; and &lt;code&gt;ansible.inventory_path&lt;/code&gt; files.</source>
          <target state="translated">SSH 호스트 주소 (및 포트)는 &lt;code&gt;Vagrantfile&lt;/code&gt; 및 &lt;code&gt;ansible.inventory_path&lt;/code&gt; 파일 에 분명히 두 번 지정되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="7fc2505108138f9e4c0a23b06d583484c9db9712" translate="yes" xml:space="preserve">
          <source>The VMware provider actually copies the entire virtual machine into this state directory, complete with virtual disk drives and everything.</source>
          <target state="translated">VMware 제공자는 실제로 전체 가상 머신을이 상태 디렉토리에 복사하고 가상 디스크 드라이브 및 모든 것을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="57e5e73dde5f5338a5de9a76367a9e3611ad791d" translate="yes" xml:space="preserve">
          <source>The Vagrant Ansible Local provisioner allows you to provision the guest using &lt;a href=&quot;http://ansible.com&quot;&gt;Ansible&lt;/a&gt; playbooks by executing &lt;strong&gt;&lt;code&gt;ansible-playbook&lt;/code&gt; directly on the guest machine&lt;/strong&gt;.</source>
          <target state="translated">Vagrant Ansible Local 프로 &lt;strong&gt; &lt;code&gt;ansible-playbook&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; 게스트 컴퓨터에서 직접 &lt;/strong&gt;&lt;strong&gt;ansible-playbook&lt;/strong&gt; 을 실행 하여 &lt;a href=&quot;http://ansible.com&quot;&gt;Ansible&lt;/a&gt; 플레이 북을 사용하여 게스트를 프로비저닝 할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba848486321c8fca01de8bdba83adcfc08d942fe" translate="yes" xml:space="preserve">
          <source>The Vagrant Ansible Local provisioner allows you to provision the guest using &lt;a href=&quot;https://ansible.com&quot;&gt;Ansible&lt;/a&gt; playbooks by executing &lt;strong&gt;&lt;code&gt;ansible-playbook&lt;/code&gt; directly on the guest machine&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cd4bfa8b01c1607feb7c29e90859bea04e7b2d" translate="yes" xml:space="preserve">
          <source>The Vagrant Ansible provisioner allows you to provision the guest using &lt;a href=&quot;http://ansible.com&quot;&gt;Ansible&lt;/a&gt; playbooks by executing &lt;strong&gt;&lt;code&gt;ansible-playbook&lt;/code&gt; from the Vagrant host&lt;/strong&gt;.</source>
          <target state="translated">Vagrant Ansible 제공자는 &lt;strong&gt;Vagrant 호스트에서 &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;ansible-playbook&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt; 을&lt;/strong&gt; 실행 하여 &lt;a href=&quot;http://ansible.com&quot;&gt;Ansible&lt;/a&gt; 플레이 북을 사용하여 게스트를 프로비저닝 할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e5c12ec749695da90d919ef1481305fb6f58c6e" translate="yes" xml:space="preserve">
          <source>The Vagrant Ansible provisioner allows you to provision the guest using &lt;a href=&quot;https://ansible.com&quot;&gt;Ansible&lt;/a&gt; playbooks by executing &lt;strong&gt;&lt;code&gt;ansible-playbook&lt;/code&gt; from the Vagrant host&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ff5af7e2668840e7d9b71591e648fffa84afbd" translate="yes" xml:space="preserve">
          <source>The Vagrant CFEngine provisioner allows you to provision the guest using &lt;a href=&quot;https://cfengine.com/&quot;&gt;CFEngine&lt;/a&gt;. It can set up both CFEngine policy servers and clients. You can configure both the policy server and the clients in a single &lt;a href=&quot;../multi-machine/index&quot;&gt;multi-machine &lt;code&gt;Vagrantfile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Vagrant CFEngine 프로비저닝을 사용하면 &lt;a href=&quot;https://cfengine.com/&quot;&gt;CFEngine을&lt;/a&gt; 사용하여 게스트를 프로비저닝 할 수 있습니다 . CFEngine 정책 서버와 클라이언트를 모두 설정할 수 있습니다. 단일 &lt;a href=&quot;../multi-machine/index&quot;&gt;다중 시스템 &lt;code&gt;Vagrantfile&lt;/code&gt; &lt;/a&gt; 에서 정책 서버와 클라이언트를 모두 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7dc9a2242b870a05adfe3f362130a5b30d9ea0b2" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Apply provisioner allows you to provision the guest using &lt;a href=&quot;https://www.getchef.com/&quot;&gt;Chef&lt;/a&gt;, specifically with &lt;a href=&quot;https://docs.getchef.com/ctl_chef_apply.html&quot;&gt;Chef Apply&lt;/a&gt;.</source>
          <target state="translated">Vagrant Chef Apply 제공 업체를 통해 &lt;a href=&quot;https://www.getchef.com/&quot;&gt;Chef&lt;/a&gt; , 특히 &lt;a href=&quot;https://docs.getchef.com/ctl_chef_apply.html&quot;&gt;Chef Apply를&lt;/a&gt; 사용하여 게스트를 프로비저닝 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="168a4577d39bea8471686aed91fd63d4abe52533" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Apply provisioner does not support data_bags. Please use a different Vagrant Chef provisioner if you need support for data_bags.</source>
          <target state="translated">Vagrant Chef Apply 제공자는 data_bag를 지원하지 않습니다. data_bags에 대한 지원이 필요한 경우 다른 Vagrant Chef 제공 업체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9ed67c500933ee9b7aa76e4d529ba2fe4a1f9b70" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Apply provisioner does not support roles. Please use a different Vagrant Chef provisioner if you need support for roles.</source>
          <target state="translated">Vagrant Chef Apply 제공자는 역할을 지원하지 않습니다. 역할에 대한 지원이 필요한 경우 다른 Vagrant Chef 제공 업체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b48a0b85b75819e39bb74775fd65765a414202f2" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Client provisioner allows you to provision the guest using &lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt;, specifically by connecting to an existing Chef Server and registering the Vagrant machine as a node within your infrastructure.</source>
          <target state="translated">Vagrant Chef Client 프로비저닝을 사용하면 특히 기존 Chef Server에 연결하고 Vagrant 시스템을 인프라 내의 노드로 등록 하여 &lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef를&lt;/a&gt; 사용하여 게스트를 프로비저닝 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="522d8e8ec324f5eaff5cccd2ed0227b3db2f3b97" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Solo provisioner allows you to provision the guest using &lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt;, specifically with &lt;a href=&quot;https://docs.chef.io/chef_solo.html&quot;&gt;Chef Solo&lt;/a&gt;.</source>
          <target state="translated">Vagrant Chef Solo 제공 업체에서는 &lt;a href=&quot;https://www.chef.io/chef/&quot;&gt;Chef&lt;/a&gt; , 특히 &lt;a href=&quot;https://docs.chef.io/chef_solo.html&quot;&gt;Chef Solo를&lt;/a&gt; 사용하여 게스트를 프로비저닝 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc22451bc2d9cdcde30babc6e04c0cc31da77eea" translate="yes" xml:space="preserve">
          <source>The Vagrant Chef Zero provisioner allows you to provision the guest using &lt;a href=&quot;https://www.getchef.com/chef/&quot;&gt;Chef&lt;/a&gt;, specifically with &lt;a href=&quot;https://docs.getchef.com/ctl_chef_client.html#run-in-local-mode&quot;&gt;Chef Zero/local mode&lt;/a&gt;.</source>
          <target state="translated">Vagrant Chef Zero 제공 업체에서는 &lt;a href=&quot;https://www.getchef.com/chef/&quot;&gt;Chef를&lt;/a&gt; 사용하여 특히 &lt;a href=&quot;https://docs.getchef.com/ctl_chef_client.html#run-in-local-mode&quot;&gt;Chef Zero / local 모드로&lt;/a&gt; 게스트를 프로비저닝 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="223cdd0e84697ec1390c5765d1dfe2b701e3648f" translate="yes" xml:space="preserve">
          <source>The Vagrant Docker provisioner can automatically install &lt;a href=&quot;https://www.docker.io&quot;&gt;Docker&lt;/a&gt;, pull Docker containers, and configure certain containers to run on boot.</source>
          <target state="translated">방랑 부두 노동자의 제공자가 자동으로 설치할 수 있습니다 &lt;a href=&quot;https://www.docker.io&quot;&gt;도커를&lt;/a&gt; , 부팅시 실행 도커 컨테이너 및 구성 특정 컨테이너를 당깁니다.</target>
        </trans-unit>
        <trans-unit id="e19ff9d4aa572631f5bdc4a6ae757fc90db896d4" translate="yes" xml:space="preserve">
          <source>The Vagrant Hyper-V provider has some provider-specific configuration options you may set. A complete reference is shown below:</source>
          <target state="translated">Vagrant Hyper-V 공급자에는 설정할 수있는 공급자 별 구성 옵션이 있습니다. 완전한 참조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="60ab073651b56cdcb793cbfe6bdc070f99f2ad78" translate="yes" xml:space="preserve">
          <source>The Vagrant Hyper-V provider is used just like any other provider. Please read the general &lt;a href=&quot;../providers/basic_usage&quot;&gt;basic usage&lt;/a&gt; page for providers.</source>
          <target state="translated">Vagrant Hyper-V 공급자는 다른 공급자와 마찬가지로 사용됩니다. 제공자 의 일반 &lt;a href=&quot;../providers/basic_usage&quot;&gt;기본 사용법&lt;/a&gt; 페이지를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="c0bebdc9e85b1b8e8a7dfe1ad9b6e1f730cd39e0" translate="yes" xml:space="preserve">
          <source>The Vagrant Hyper-V provider works in almost every way like the VirtualBox or VMware provider would, but has some limitations that are inherent to Hyper-V itself.</source>
          <target state="translated">Vagrant Hyper-V 공급자는 VirtualBox 또는 VMware 공급자와 거의 같은 방식으로 작동하지만 Hyper-V 자체에 고유 한 몇 가지 제한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc1c2001f25cd41a55e9b83aae7ab33365c82495" translate="yes" xml:space="preserve">
          <source>The Vagrant Puppet agent provisioner allows you to provision the guest using &lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet&lt;/a&gt;, specifically by calling &lt;code&gt;puppet agent&lt;/code&gt;, connecting to a Puppet master, and retrieving the set of modules and manifests from there.</source>
          <target state="translated">Vagrant Puppet 에이전트 프로비저닝을 사용하면 특히 &lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet &lt;/a&gt; &lt;code&gt;puppet agent&lt;/code&gt; 를 호출 하고 Puppet 마스터에 연결하고 모듈 및 매니페스트 세트를 검색 하여 Puppet을 사용하여 게스트를 프로비저닝 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5140749e3a4f4e2d40ea956cc77eb2e2061ff5e0" translate="yes" xml:space="preserve">
          <source>The Vagrant Puppet provisioner allows you to provision the guest using &lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet&lt;/a&gt;, specifically by calling &lt;code&gt;puppet apply&lt;/code&gt;, without a Puppet Master.</source>
          <target state="translated">Vagrant Puppet Provisioner를 사용하면 Puppet Master없이 &lt;a href=&quot;https://www.puppetlabs.com/puppet&quot;&gt;Puppet을&lt;/a&gt; 사용하여 게스트를 프로비저닝 할 수 있습니다 . 특히 Puppet &lt;code&gt;puppet apply&lt;/code&gt; 를 호출하면 됩니다 .</target>
        </trans-unit>
        <trans-unit id="efcb620a80a47e2175559d022ca9263734d63b76" translate="yes" xml:space="preserve">
          <source>The Vagrant Push FTP And SFTP strategy supports the following configuration options:</source>
          <target state="translated">Vagrant Push FTP And SFTP 전략은 다음 구성 옵션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="31929e0df6d194c451cffff94fe2744d20746d88" translate="yes" xml:space="preserve">
          <source>The Vagrant Push FTP and SFTP strategy is defined in the &lt;code&gt;Vagrantfile&lt;/code&gt; using the &lt;code&gt;ftp&lt;/code&gt; key:</source>
          <target state="translated">Vagrant Push FTP 및 SFTP 전략은 &lt;code&gt;ftp&lt;/code&gt; 키를 사용하여 &lt;code&gt;Vagrantfile&lt;/code&gt; 에 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="aa52f4ae9b67dcfdfdd6b8faeb0278c5dbce78b8" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Heroku strategy is defined in the &lt;code&gt;Vagrantfile&lt;/code&gt; using the &lt;code&gt;heroku&lt;/code&gt; key:</source>
          <target state="translated">Vagrant Push Heroku 전략은 &lt;code&gt;heroku&lt;/code&gt; 키를 사용하여 &lt;code&gt;Vagrantfile&lt;/code&gt; 에 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="566c7856be2455e62796137f681a22e46f077018" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Heroku strategy supports the following configuration options:</source>
          <target state="translated">Vagrant Push Heroku 전략은 다음 구성 옵션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2705d7ca4f26123d20d9ec777b2e81ced8ed2506" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Local Exec strategy allows the user to invoke an arbitrary shell command or script as part of a push.</source>
          <target state="translated">Vagrant Push Local Exec 전략을 통해 사용자는 푸시의 일부로 임의의 쉘 명령 또는 스크립트를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3521dfc71423350f6f3eefa3ed2ed094df2b3a81" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Local Exec strategy is defined in the &lt;code&gt;Vagrantfile&lt;/code&gt; using the &lt;code&gt;local-exec&lt;/code&gt; key:</source>
          <target state="translated">Vagrant Push Local Exec 전략은 &lt;code&gt;local-exec&lt;/code&gt; 키를 사용하여 &lt;code&gt;Vagrantfile&lt;/code&gt; 에 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="7235b31707d53bf15a0fa1b27747faa21bfca75b" translate="yes" xml:space="preserve">
          <source>The Vagrant Push Local Exec strategy supports the following configuration options:</source>
          <target state="translated">Vagrant Push Local Exec 전략은 다음 구성 옵션을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8c6837f0a622faef033a3d4e519eb29cb9299db3" translate="yes" xml:space="preserve">
          <source>The Vagrant Salt provisioner allows you to provision the guest using &lt;a href=&quot;http://saltstack.com/&quot;&gt;Salt&lt;/a&gt; states.</source>
          <target state="translated">Vagrant Salt 제공 업체에서는 &lt;a href=&quot;http://saltstack.com/&quot;&gt;Salt&lt;/a&gt; 상태를 사용하여 게스트를 프로비저닝 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca7976fab4f22af37ff3493cc91e3cc1ec027f26" translate="yes" xml:space="preserve">
          <source>The Vagrant Salt provisioner allows you to provision the guest using &lt;a href=&quot;https://saltstack.com/&quot;&gt;Salt&lt;/a&gt; states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee4ac3fae0d6669d702df5b6fa1278208e24489" translate="yes" xml:space="preserve">
          <source>The Vagrant Shell provisioner allows you to upload and execute a script within the guest machine.</source>
          <target state="translated">Vagrant Shell provisioner를 사용하면 게스트 컴퓨터 내에서 스크립트를 업로드하고 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17b8e3d1a6dbe5998462be8b7f74441739ba164b" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Desktop plugin can be updated directly from Vagrant. Run the following command to update Vagrant to the latest version of the Vagrant VMware Desktop plugin:</source>
          <target state="translated">Vagrant VMware Desktop 플러그인은 Vagrant에서 직접 업데이트 할 수 있습니다. 다음 명령을 실행하여 Vagrant를 최신 버전의 Vagrant VMware Desktop 플러그인으로 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="954f7e2af00c5a15f16a73da16d6c864596fdf59" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Fusion and Vagrant VMware Workstation plugins are not compatible with trial versions of the VMware products. We apologize for the inconvenience.</source>
          <target state="translated">Vagrant VMware Fusion 및 Vagrant VMware Workstation 플러그인은 시험판 버전의 VMware 제품과 호환되지 않습니다. 불편을 드려 죄송합니다.</target>
        </trans-unit>
        <trans-unit id="5e24cd4a5605e11b83489517550569ca7f9ba5d8" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility consists of a small service which runs on the host platform. When the utility installer package is installed, the service is configured to automatically start. If the plugin reports errors communicating with the service, it may have stopped for some reason. The most common cause of the service not being in a running state is the VMware application not being installed. The service can be started again by using the proper command below:</source>
          <target state="translated">Vagrant VMware Utility는 호스트 플랫폼에서 실행되는 소규모 서비스로 구성됩니다. 유틸리티 설치 프로그램 패키지가 설치되면 서비스가 자동으로 시작되도록 구성됩니다. 플러그인이 서비스와의 통신 오류를보고하면 어떤 이유로 중지되었을 수 있습니다. 서비스가 실행 중 상태가 아닌 가장 일반적인 원인은 VMware 애플리케이션이 설치되지 않았기 때문입니다. 아래의 적절한 명령을 사용하여 서비스를 다시 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4c61e9c394e8983a7018996ade2a9e59388b870" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility is provided as a system package. To install the utility, download and install the correct system package from the downloads page.</source>
          <target state="translated">Vagrant VMware Utility는 시스템 패키지로 제공됩니다. 유틸리티를 설치하려면 다운로드 페이지에서 올바른 시스템 패키지를 다운로드하여 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="234695a6ddb42c20be293bf17fc52a99c205f4f5" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility provides support for all users on the system using the Vagrant VMware Desktop plugin. If access restrictions to the Utility need to be applied to users on the system, this can be accomplished by restricting user access to the certificates used for connecting to the service.</source>
          <target state="translated">Vagrant VMware Utility는 Vagrant VMware Desktop 플러그인을 사용하여 시스템의 모든 사용자를 지원합니다. 유틸리티에 대한 액세스 제한을 시스템의 사용자에게 적용해야하는 경우 서비스에 연결하는 데 사용되는 인증서에 대한 사용자 액세스를 제한하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5fccabf8634251d3faf0e00d757b29b22b0804b" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware Utility provides the Vagrant VMware provider plugin access to various VMware functionalities. The Vagrant VMware Utility is required by the Vagrant VMware Desktop provider plugin.</source>
          <target state="translated">Vagrant VMware Utility는 다양한 VMware 기능에 대한 Vagrant VMware 제공자 플러그인 액세스를 제공합니다. Vagrant VMware Utility는 Vagrant VMware Desktop 공급자 플러그인에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a3c375de9278dedcf1ada101cbf99b0b11e1f899" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware plugin is a commercial product provided by &lt;a href=&quot;https://www.hashicorp.com&quot;&gt;HashiCorp&lt;/a&gt; and &lt;strong&gt;require the purchase of a license&lt;/strong&gt; to operate. To purchase a license, please visit the &lt;a href=&quot;https://www.vagrantup.com/vmware#buy-now&quot;&gt;Vagrant VMware provider&lt;/a&gt; page. Upon purchasing a license, you will receive a license file in your inbox. Download this file and save it to a temporary location on your computer.</source>
          <target state="translated">Vagrant VMware 플러그인은 &lt;a href=&quot;https://www.hashicorp.com&quot;&gt;HashiCorp에서&lt;/a&gt; 제공하는 상용 제품 이며 작동 &lt;strong&gt;하려면 라이센스&lt;/strong&gt; 를 &lt;strong&gt;구매&lt;/strong&gt; 해야합니다. 라이센스를 구매하려면 &lt;a href=&quot;https://www.vagrantup.com/vmware#buy-now&quot;&gt;Vagrant VMware 제공자&lt;/a&gt; 페이지 를 방문 하십시오. 라이센스를 구매하면받은 편지함에 라이센스 파일이 제공됩니다. 이 파일을 다운로드하여 컴퓨터의 임시 위치에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="2bfbe625f2f3f8ae14a5cca9799cf81ba9837d5c" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware plugin licenses are valid for specific VMware product versions at the time of purchase. When new versions of VMware products are released, significant changes to the plugin code are often required to support this new version. For this reason, you may need to upgrade your current license to work with the new version of the VMware product. Customers can check their license upgrade eligibility by visiting the &lt;a href=&quot;https://license.hashicorp.com/upgrade/vmware&quot;&gt;License Upgrade Center&lt;/a&gt; and entering the email address with which they made the original purchase.</source>
          <target state="translated">Vagrant VMware 플러그인 라이센스는 구매시 특정 VMware 제품 버전에 유효합니다. 새 버전의 VMware 제품이 출시되면이 새 버전을 지원하기 위해 플러그인 코드를 크게 변경해야하는 경우가 종종 있습니다. 이러한 이유로 새 버전의 VMware 제품을 사용하려면 현재 라이센스를 업그레이드해야합니다. 고객은 &lt;a href=&quot;https://license.hashicorp.com/upgrade/vmware&quot;&gt;라이센스 업그레이드 센터&lt;/a&gt; 를 방문 하여 원래 구매 한 이메일 주소를 입력 하여 라이센스 업그레이드 자격을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f96e304b4563556882e62a5990399efda43c54d" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware provider does not support parallel execution at this time. Specifying the &lt;code&gt;--parallel&lt;/code&gt; option will have no effect.</source>
          <target state="translated">Vagrant VMware 제공자는 현재 병렬 실행을 지원하지 않습니다. &lt;code&gt;--parallel&lt;/code&gt; 옵션을 지정해 도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f614f68c2eb3c1c5227e941a07b39f2629076b9e" translate="yes" xml:space="preserve">
          <source>The Vagrant VMware provider is used just like any other provider. Please read the general &lt;a href=&quot;../providers/basic_usage&quot;&gt;basic usage&lt;/a&gt; page for providers.</source>
          <target state="translated">Vagrant VMware 제공자는 다른 제공자와 마찬가지로 사용됩니다. 제공자 의 일반 &lt;a href=&quot;../providers/basic_usage&quot;&gt;기본 사용법&lt;/a&gt; 페이지를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="d9e0e74b40d3dd6889065de80c5b5759b6a7a0f5" translate="yes" xml:space="preserve">
          <source>The Vagrant VirtualBox provider does not support parallel execution at this time. Specifying the &lt;code&gt;--parallel&lt;/code&gt; option will have no effect.</source>
          <target state="translated">Vagrant VirtualBox 공급자는 현재 병렬 실행을 지원하지 않습니다. &lt;code&gt;--parallel&lt;/code&gt; 옵션을 지정해 도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="fb9eddda5f0fb17f2320f34729a6961bc5b89fd0" translate="yes" xml:space="preserve">
          <source>The Vagrant VirtualBox provider is used just like any other provider. Please read the general &lt;a href=&quot;../providers/basic_usage&quot;&gt;basic usage&lt;/a&gt; page for providers.</source>
          <target state="translated">Vagrant VirtualBox 공급자는 다른 공급자와 마찬가지로 사용됩니다. 제공자 의 일반 &lt;a href=&quot;../providers/basic_usage&quot;&gt;기본 사용법&lt;/a&gt; 페이지를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="51589b1f45e20b1edf75fde3b6a11045712449bc" translate="yes" xml:space="preserve">
          <source>The Vagrant VirtualBox provider supports using the private network as a VirtualBox &lt;a href=&quot;https://www.virtualbox.org/manual/ch06.html#network_internal&quot;&gt;internal network&lt;/a&gt;. By default, private networks are host-only networks, because those are the easiest to work with. However, internal networks can be enabled as well.</source>
          <target state="translated">Vagrant VirtualBox 공급자는 개인 네트워크를 VirtualBox &lt;a href=&quot;https://www.virtualbox.org/manual/ch06.html#network_internal&quot;&gt;내부 네트워크&lt;/a&gt; 로 사용하도록 지원 합니다 . 기본적으로 개인 네트워크는 작업하기 가장 쉬운 호스트 전용 네트워크입니다. 그러나 내부 네트워크도 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="655df8281b46805c0835fc84cdeb3b096f5af28e" translate="yes" xml:space="preserve">
          <source>The Vagrant file provisioner allows you to upload a file or directory from the host machine to the guest machine.</source>
          <target state="translated">Vagrant File provisioner를 사용하면 호스트 시스템에서 게스트 시스템으로 파일 또는 디렉토리를 업로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c1be47a6d85465c3c15143c3b342951113a8062" translate="yes" xml:space="preserve">
          <source>The Vagrantfile is a very flexible configuration format. Since it is just Ruby, there is a lot you can do with it. However, in that same vein, since it is Ruby, there are a lot of ways you can shoot yourself in the foot. When using some of the tips and tricks on this page, please take care to use them correctly.</source>
          <target state="translated">Vagrantfile은 매우 유연한 구성 형식입니다. 루비 일 뿐이므로 할 수있는 일이 많습니다. 그러나 같은 맥락에서 루비이기 때문에 발로 자신을 쏠 수있는 많은 방법이 있습니다. 이 페이지에서 몇 가지 팁과 요령을 사용할 때는 올바르게 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8ce781f3eb04f7990720e7d6c4a7cddaf7ca5247" translate="yes" xml:space="preserve">
          <source>The VirtualBox provider exposes some additional configuration options that allow you to more finely control your VirtualBox-powered Vagrant environments.</source>
          <target state="translated">VirtualBox 공급자는 VirtualBox 기반 Vagrant 환경을보다 세밀하게 제어 할 수있는 몇 가지 추가 구성 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="214673869ae424a091e15675a8cb6c1c6a7c2b58" translate="yes" xml:space="preserve">
          <source>The VirtualBox provider is compatible with VirtualBox versions 4.0.x, 4.1.x, 4.2.x, 4.3.x, 5.0.x, 5.1.x, and 5.2.x. Other versions are unsupported and the provider will display an error message. Please note that beta and pre-release versions of VirtualBox are not supported and may not be well-behaved.</source>
          <target state="translated">VirtualBox 공급자는 VirtualBox 버전 4.0.x, 4.1.x, 4.2.x, 4.3.x, 5.0.x, 5.1.x 및 5.2.x와 호환됩니다. 다른 버전은 지원되지 않으며 공급자는 오류 메시지를 표시합니다. VirtualBox 베타 및 시험판 버전은 지원되지 않으며 제대로 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e61ed438da3e957f7b7c7fd787a702fed2b2df1" translate="yes" xml:space="preserve">
          <source>The WinSSH communicator is built specifically for the Windows native port of OpenSSH. It does not rely on a POSIX-like environment which removes the requirement of extra software installation (like cygwin) for proper functionality.</source>
          <target state="translated">WinSSH 커뮤니케이터는 OpenSSH의 Windows 기본 포트를 위해 특별히 제작되었습니다. 올바른 기능을 위해 추가 소프트웨어 설치 (cygwin과 같은)가 필요없는 POSIX 유사 환경에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1694c2d8f26cc5c5a3aa07a410e25956e5681e15" translate="yes" xml:space="preserve">
          <source>The WinSSH communicator uses the same connection configuration options as the SSH communicator. These settings provide the information for the communicator to establish a connection to the VM.</source>
          <target state="translated">WinSSH 커뮤니케이터는 SSH 커뮤니케이터와 동일한 연결 구성 옵션을 사용합니다. 이 설정은 커뮤니케이터가 VM에 연결하는 데 필요한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a28d2802f77d90a6b1d2cc603804cc5c309ef558" translate="yes" xml:space="preserve">
          <source>The above alias, from within the context of an active Vagrant project, would print the CPU and memory utilization directly to the console:</source>
          <target state="translated">활성 Vagrant 프로젝트의 맥락에서 위의 별칭은 CPU 및 메모리 사용률을 콘솔에 직접 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="afe0beea3dafc4a7bcf504a81bcfb4e53090bf54" translate="yes" xml:space="preserve">
          <source>The above command on Windows will execute &lt;code&gt;mstsc.exe /span config.rdp&lt;/code&gt;, allowing your RDP to span multiple desktops.</source>
          <target state="translated">Windows에서 위의 명령은 &lt;code&gt;mstsc.exe /span config.rdp&lt;/code&gt; 실행 하여 RDP가 여러 데스크톱에 걸쳐있게합니다.</target>
        </trans-unit>
        <trans-unit id="6b09cc000aed0f47f1d02113249d3c9b2d0668f9" translate="yes" xml:space="preserve">
          <source>The above configuration will look for a &lt;code&gt;Dockerfile&lt;/code&gt; in the same directory as the Vagrantfile. When &lt;code&gt;vagrant up --provider=docker&lt;/code&gt; is run, Vagrant automatically builds that Dockerfile and starts a container based on that Dockerfile.</source>
          <target state="translated">위의 구성은 &lt;code&gt;Dockerfile&lt;/code&gt; 과 동일한 디렉토리에서 Dockerfile을 찾습니다. 때 &lt;code&gt;vagrant up --provider=docker&lt;/code&gt; 실행, 방랑 자동 Dockerfile 및 그 Dockerfile에 따라 컨테이너를 시작하도록 만든다.</target>
        </trans-unit>
        <trans-unit id="fcae45772c0ce97dee02f5bec704fb2acaa121a2" translate="yes" xml:space="preserve">
          <source>The above error message is because another hypervisor (like KVM) is in use. We must blacklist these in order for VirtualBox to run correctly.</source>
          <target state="translated">위의 오류 메시지는 다른 하이퍼 바이저 (예 : KVM)를 사용 중이기 때문입니다. VirtualBox가 올바르게 실행 되려면이를 블랙리스트에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="873e787e750d08edc0692932cac5613846b3b20b" translate="yes" xml:space="preserve">
          <source>The above would run &lt;code&gt;rake db:migrate&lt;/code&gt; in the context of an &lt;code&gt;app&lt;/code&gt; container.</source>
          <target state="translated">위 의 내용은 &lt;code&gt;app&lt;/code&gt; 컨테이너 의 컨텍스트에서 &lt;code&gt;rake db:migrate&lt;/code&gt; 를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="839a0c566cf3fb941e9f7b37b92dd8b664ca36be" translate="yes" xml:space="preserve">
          <source>The actual box file is the required portion for Vagrant. It is recommended you always use a metadata file alongside a box file, but direct box files are supported for legacy reasons in Vagrant.</source>
          <target state="translated">실제 박스 파일은 Vagrant에 필요한 부분입니다. 상자 파일과 함께 항상 메타 데이터 파일을 사용하는 것이 좋지만 Vagrant에서는 직통 상자 파일이 레거시 이유로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3945d23f39a0ae5b2e1d636145a49bffa27394bd" translate="yes" xml:space="preserve">
          <source>The argument to build an image is the path to give to &lt;code&gt;docker build&lt;/code&gt;. This must be a path that exists within the guest machine. If you need to get data to the guest machine, use a synced folder.</source>
          <target state="translated">이미지를 빌드하는 인수는 &lt;code&gt;docker build&lt;/code&gt; 에 제공하는 경로 입니다. 게스트 시스템 내에 존재하는 경로 여야합니다. 게스트 컴퓨터에 데이터를 가져와야 할 경우 동기화 된 폴더를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="94b949cd2133ef5330f34f5b82a414175f18e1e7" translate="yes" xml:space="preserve">
          <source>The attributes that can be set in a single-line are the attributes that are set with the &lt;code&gt;=&lt;/code&gt; style, such as &lt;code&gt;inline = &quot;echo hello&quot;&lt;/code&gt; above. If the style is instead more of a function call, such as &lt;code&gt;add_recipe &quot;foo&quot;&lt;/code&gt;, then this cannot be specified in a single line.</source>
          <target state="translated">한 줄로 설정할 수있는 속성은 위의 &lt;code&gt;inline = &quot;echo hello&quot;&lt;/code&gt; 와 같이 &lt;code&gt;=&lt;/code&gt; 스타일 로 설정되는 속성입니다 . 스타일이 대신 &lt;code&gt;add_recipe &quot;foo&quot;&lt;/code&gt; 와 같은 함수 호출 인 경우 한 줄로 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe75f21afd73554d0b9f41aa6ff4630d223aa653" translate="yes" xml:space="preserve">
          <source>The benefit of the block-based syntax is that with more than a couple options it can greatly improve readability. Additionally, some provisioners, like the Chef provisioner, have special methods that can be called within that block to ease configuration that cannot be done with the key/value approach, or you can use this syntax to pass arguments to a shell script.</source>
          <target state="translated">블록 기반 구문의 장점은 두 가지 이상의 옵션으로 가독성을 크게 향상시킬 수 있다는 것입니다. 또한 Chef 제공 업체와 같은 일부 제공 업체는 해당 블록 내에서 호출하여 키 / 값 접근 방식으로는 수행 할 수없는 구성을 쉽게하기 위해 특수 메소드를 사용하거나이 구문을 사용하여 인수를 쉘 스크립트에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8450e4b2545435a6a38bc9a988964cf5a19767a0" translate="yes" xml:space="preserve">
          <source>The best way to describe packaging and distribution is to look at how another plugin does it. The best example plugin available for this is &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt;.</source>
          <target state="translated">패키징 및 배포를 설명하는 가장 좋은 방법은 다른 플러그인이 어떻게 작동하는지 확인하는 것입니다. 이를위한 가장 좋은 플러그인 예는 &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e258f311e24b93bd8bb9942b6df25cf3068a7c7f" translate="yes" xml:space="preserve">
          <source>The best way to learn how to write a provider is to see how one is written in practice. To augment this documentation, please heavily study the &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt; plugin, which implements an AWS provider. The plugin is a good example of how to structure, test, and implement your plugin.</source>
          <target state="translated">공급자를 작성하는 방법을 배우는 가장 좋은 방법은 실제로 어떻게 작성되는지 확인하는 것입니다. 이 문서를 보강하려면 AWS 제공자를 구현하는 &lt;a href=&quot;https://github.com/mitchellh/vagrant-aws&quot;&gt;vagrant-aws&lt;/a&gt; 플러그인을 많이 연구하십시오 . 플러그인은 플러그인을 구성, 테스트 및 구현하는 방법에 대한 좋은 예입니다.</target>
        </trans-unit>
        <trans-unit id="d654c774dcdaff42a8020c36b29e32a291d13dbe" translate="yes" xml:space="preserve">
          <source>The block argument is where the &quot;clever lazy loading&quot; (mentioned above) comes into play. The component blocks should lazy load the actual file that contains the implementation of the component, and then return that component.</source>
          <target state="translated">블록 인수는 &quot;위에 언급 된)&quot;영리한 지연 로딩 &quot;이 작용하는 곳입니다. 구성 요소 블록은 구성 요소의 구현이 포함 된 실제 파일을 지연로드 한 다음 해당 구성 요소를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="c472463d16caf27117bf582262a3146a74965592" translate="yes" xml:space="preserve">
          <source>The block argument then lazily loads and returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :provider)&lt;/code&gt; interface, which is covered next.</source>
          <target state="translated">그런 다음 block 인수는 &lt;code&gt;Vagrant.plugin(2, :provider)&lt;/code&gt; 로드하고 다음에 다루는 Vagrant.plugin (2, : provider) 인터페이스 를 구현하는 클래스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="86e8304e192e618f0526e2ec2bc44f1c0dbd15d3" translate="yes" xml:space="preserve">
          <source>The block argument then lazily loads and returns a class that implements the &lt;code&gt;Vagrant.plugin(2, :provisioner)&lt;/code&gt; interface, which is covered next.</source>
          <target state="translated">그런 다음 block 인수는 &lt;code&gt;Vagrant.plugin(2, :provisioner)&lt;/code&gt; 로드하고 다음에 다루는 Vagrant.plugin (2, : provisioner) 인터페이스 를 구현하는 클래스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="88dfac7d672267c2af51c0f074c2376fa3cd985e" translate="yes" xml:space="preserve">
          <source>The box create command is used to create a new box entry on Vagrant Cloud.</source>
          <target state="translated">box create 명령은 Vagrant Cloud에서 새 상자 항목을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6d5b74923b83868e89a39312af21649991f6cb2a" translate="yes" xml:space="preserve">
          <source>The box delete command will &lt;em&gt;permanently&lt;/em&gt; delete the given box entry on Vagrant Cloud. Before making the request, it will ask if you are sure you want to delete the box.</source>
          <target state="translated">box delete 명령은 Vagrant Cloud에서 지정된 상자 항목을 &lt;em&gt;영구적으로&lt;/em&gt; 삭제합니다. 요청하기 전에 상자를 삭제할 것인지 묻습니다.</target>
        </trans-unit>
        <trans-unit id="e72c25f1b6eb4249e85ca8a6b2f2d531d752a5dc" translate="yes" xml:space="preserve">
          <source>The box show command will display information about the latest version for the given Vagrant box.</source>
          <target state="translated">box show 명령은 주어진 Vagrant 상자의 최신 버전에 대한 정보를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="496542174c182f29a6c14cdfe34ba0f66458e73f" translate="yes" xml:space="preserve">
          <source>The box update command will update an already created box on Vagrant Cloud with the given options.</source>
          <target state="translated">box update 명령은 Vagrant Cloud에서 이미 생성 된 상자를 주어진 옵션으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="3d392a9153967866d20774f0d34110fd601ac505" translate="yes" xml:space="preserve">
          <source>The box version configuration can be a specific version or a constraint of versions. Constraints can be any combination of the following: &lt;code&gt;= X&lt;/code&gt;, &lt;code&gt;&amp;gt; X&lt;/code&gt;, &lt;code&gt;&amp;lt; X&lt;/code&gt;, &lt;code&gt;&amp;gt;= X&lt;/code&gt;, &lt;code&gt;&amp;lt;= X&lt;/code&gt;, &lt;code&gt;~&amp;gt; X&lt;/code&gt;. You can combine multiple constraints by separating them with commas. All the constraints should be self explanatory except perhaps for &lt;code&gt;~&amp;gt;&lt;/code&gt;, known as the &quot;pessimistic constraint&quot;. Examples explain it best: &lt;code&gt;~&amp;gt; 1.0&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;= 1.0, &amp;lt; 2.0&lt;/code&gt;. And &lt;code&gt;~&amp;gt; 1.1.5&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;= 1.1.5, &amp;lt; 1.2.0&lt;/code&gt;.</source>
          <target state="translated">박스 버전 구성은 특정 버전이거나 버전의 제약 조건 일 수 있습니다. 제약 조건은 &lt;code&gt;= X&lt;/code&gt; , &lt;code&gt;&amp;gt; X&lt;/code&gt; , &lt;code&gt;&amp;lt; X&lt;/code&gt; , &lt;code&gt;&amp;gt;= X&lt;/code&gt; , &lt;code&gt;&amp;lt;= X&lt;/code&gt; , &lt;code&gt;~&amp;gt; X&lt;/code&gt; 있습니다. 여러 제약 조건을 쉼표로 구분하여 결합 할 수 있습니다. &quot;비관적 제약&quot;으로 알려진 &lt;code&gt;~&amp;gt;&lt;/code&gt; 를 제외한 모든 제약 조건은 설명이 필요합니다 . 예제는 가장 잘 설명합니다. &lt;code&gt;~&amp;gt; 1.0&lt;/code&gt; 은 &lt;code&gt;&amp;gt;= 1.0, &amp;lt; 2.0&lt;/code&gt; . 그리고 &lt;code&gt;~&amp;gt; 1.1.5&lt;/code&gt; 동일합니다 &lt;code&gt;&amp;gt;= 1.1.5, &amp;lt; 1.2.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c967fd4337be2bf821df7011cd5cfb7fe57ca1f6" translate="yes" xml:space="preserve">
          <source>The boxes on the public catalog work with many different &lt;a href=&quot;providers/index&quot;&gt;providers&lt;/a&gt;. Whether you are using Vagrant with VirtualBox, VMware, AWS, etc. you should be able to find a box you need.</source>
          <target state="translated">공개 카탈로그의 상자는 여러 다른 &lt;a href=&quot;providers/index&quot;&gt;제공자&lt;/a&gt; 와 함께 작동 합니다. VirtualBox, VMware, AWS 등과 함께 Vagrant를 사용하든 관계없이 필요한 상자를 찾을 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="419324f456296be59a19dcf1b0e987b17b76fad0" translate="yes" xml:space="preserve">
          <source>The change detection is optimized to use platform-specific APIs to listen for filesystem changes, and does not simply poll the directory.</source>
          <target state="translated">변경 감지는 플랫폼 별 API를 사용하여 파일 시스템 변경을 청취하도록 최적화되었으며 단순히 디렉토리를 폴링하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="53aa835adb19d8873e74507b51a5ce2919bb09ae" translate="yes" xml:space="preserve">
          <source>The change is only visible within the &lt;code&gt;Vagrantfile&lt;/code&gt;.</source>
          <target state="translated">변경 사항은 &lt;code&gt;Vagrantfile&lt;/code&gt; 내에서만 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd559d8e7254c67f27e391a72c250fc055aab441" translate="yes" xml:space="preserve">
          <source>The cloud create command creates a version entry for a box on Vagrant Cloud.</source>
          <target state="translated">cloud create 명령은 Vagrant Cloud에서 상자에 대한 버전 항목을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="39eab4705be325a968e122dad2e9d5d5364661fa" translate="yes" xml:space="preserve">
          <source>The cloud delete command deletes a version entry for a box on Vagrant Cloud. Before making the request, it will ask if you are sure you want to delete the version.</source>
          <target state="translated">cloud delete 명령은 Vagrant Cloud의 상자에 대한 버전 항목을 삭제합니다. 요청하기 전에 버전을 삭제할 것인지 묻습니다.</target>
        </trans-unit>
        <trans-unit id="139cec5990ca247857144af60936eebba73882f2" translate="yes" xml:space="preserve">
          <source>The cloud release command releases a version entry for a box on Vagrant Cloud if it already exists. Before making the request, it will ask if you are sure you want to release the version.</source>
          <target state="translated">클라우드 릴리스 명령은 Vagrant Cloud의 상자에 대한 버전 항목이 이미있는 경우이를 릴리스합니다. 요청하기 전에 버전을 릴리스 할 것인지 묻습니다.</target>
        </trans-unit>
        <trans-unit id="ba65891c2f9c57c4b7116f69e616939d5de67693" translate="yes" xml:space="preserve">
          <source>The cloud revoke command revokes a version entry for a box on Vagrant Cloud if it already exists. Before making the request, it will ask if you are sure you want to revoke the version.</source>
          <target state="translated">cloud revoke 명령은 Vagrant Cloud의 상자에 대한 버전 항목이 이미있는 경우이를 취소합니다. 요청하기 전에 버전을 취소 할 것인지 묻습니다.</target>
        </trans-unit>
        <trans-unit id="351775385095d04f667f26c9f57bb4d0f41b4591" translate="yes" xml:space="preserve">
          <source>The cloud search command will take a query and search Vagrant Cloud for any matching Vagrant boxes. Various filters can be applied to the results.</source>
          <target state="translated">cloud search 명령은 질의를 받고 Vagrant Cloud에서 일치하는 Vagrant 상자를 검색합니다. 다양한 필터를 결과에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fad06f9330bbb81ebdda4dfba80320bd4a79757" translate="yes" xml:space="preserve">
          <source>The configuration class returned from the &lt;code&gt;config&lt;/code&gt; component in the plugin is the same as any other &lt;a href=&quot;configuration&quot;&gt;configuration plugin&lt;/a&gt;, so read that page for more information. Vagrant automatically handles configuration validation and such just like any other configuration piece.</source>
          <target state="translated">플러그인 의 &lt;code&gt;config&lt;/code&gt; 컴포넌트에서 리턴 된 구성 클래스는 다른 &lt;a href=&quot;configuration&quot;&gt;구성 플러그인&lt;/a&gt; 과 동일 하므로 자세한 정보는 해당 페이지를 읽으십시오. Vagrant는 다른 구성 부분과 마찬가지로 구성 유효성 검사를 자동으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d10ed783945f4e0d5711e52e96e7db9ac55077c1" translate="yes" xml:space="preserve">
          <source>The configuration format should look very similar to how provisioners are configured. The &lt;code&gt;config.vm.provider&lt;/code&gt; takes a single parameter: the name of the provider being configured. Then, an inner block with custom configuration options is exposed that can be used to configure that provider.</source>
          <target state="translated">구성 형식은 프로 비 저가 구성되는 방식과 매우 유사해야합니다. &lt;code&gt;config.vm.provider&lt;/code&gt; 는 하나의 매개 변수를 : 공급자의 이름 구성된다. 그런 다음 해당 공급자를 구성하는 데 사용할 수있는 사용자 지정 구성 옵션이있는 내부 블록이 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="c1485204bc3ca0d0d56014da8e7bda70fc8db9e6" translate="yes" xml:space="preserve">
          <source>The configuration options below are specific to the WinSSH communicator.</source>
          <target state="translated">아래 구성 옵션은 WinSSH 커뮤니케이터에만 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="feab399f663dad7698f6f9ad4118020216dbd796" translate="yes" xml:space="preserve">
          <source>The configuration value can also be an array of paths on Chef 11.8.0 and newer. On older Chef versions only the first path is used.</source>
          <target state="translated">구성 값은 Chef 11.8.0 이상에서 경로 배열 일 수도 있습니다. 이전 Chef 버전에서는 첫 번째 경로 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d6a76f38a21bd934156afbb52b271b155e9c7857" translate="yes" xml:space="preserve">
          <source>The configuration value can also be an array of paths:</source>
          <target state="translated">구성 값은 경로의 배열 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="66ffcc51bc6e54dff621dea4bc988b16850e8b0d" translate="yes" xml:space="preserve">
          <source>The configured provisioners will not run again, by default. You can force the provisioners to re-run by specifying the &lt;code&gt;--provision&lt;/code&gt; flag.</source>
          <target state="translated">구성된 제공자는 기본적으로 다시 실행되지 않습니다. &lt;code&gt;--provision&lt;/code&gt; 플래그 를 지정하여 프로 비저를 강제로 다시 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01e42dd44193eb9fa1932d8d1dfa8664ea32d823" translate="yes" xml:space="preserve">
          <source>The connect command complements the &lt;a href=&quot;share&quot;&gt;share command&lt;/a&gt; by enabling access to shared environments. You can learn about all the details of Vagrant Share in the &lt;a href=&quot;../share/index&quot;&gt;Vagrant Share section&lt;/a&gt;.</source>
          <target state="translated">connect 명령은 공유 환경에 대한 액세스를 가능하게 하여 &lt;a href=&quot;share&quot;&gt;share 명령&lt;/a&gt; 을 보완 합니다. &lt;a href=&quot;../share/index&quot;&gt;Vagrant Share 섹션&lt;/a&gt; 에서 Vagrant Share에 대한 모든 세부 정보를 배울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bddb4cc34d4a9383ce781f83a5d1a6cadb5b92bc" translate="yes" xml:space="preserve">
          <source>The current Ansible version does not correspond to the &lt;a href=&quot;ansible_common#version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">현재 Ansible 버전이 &lt;a href=&quot;ansible_common#version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt; 옵션에 해당하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="26d379411462b5d473d25214bc24810042dcf27e" translate="yes" xml:space="preserve">
          <source>The default manifest is the environment's &lt;code&gt;manifests&lt;/code&gt; directory. If the environment has an &lt;code&gt;environment.conf&lt;/code&gt; the manifest path is parsed from there. Relative paths are assumed to be relative to the directory of the environment. If the manifest setting in &lt;code&gt;environment.conf&lt;/code&gt; use the Puppet variables &lt;code&gt;$codedir&lt;/code&gt; or &lt;code&gt;$environment&lt;/code&gt; they are resolved to the parent directory of &lt;code&gt;environment_path&lt;/code&gt; and &lt;code&gt;environment&lt;/code&gt; respectively.</source>
          <target state="translated">기본 매니페스트는 환경의 &lt;code&gt;manifests&lt;/code&gt; 디렉토리입니다. 환경이있는 경우 &lt;code&gt;environment.conf&lt;/code&gt; 를 매니페스트 경로는 거기에서 구문 분석됩니다. 상대 경로는 환경의 디렉토리에 상대적인 것으로 가정합니다. &lt;code&gt;environment.conf&lt;/code&gt; 의 매니페스트 설정 이 Puppet 변수 &lt;code&gt;$codedir&lt;/code&gt; 또는 &lt;code&gt;$environment&lt;/code&gt; 를 사용하는 경우 &lt;code&gt;environment_path&lt;/code&gt; 및 &lt;code&gt;environment&lt;/code&gt; 의 상위 디렉토리로 각각 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="15e857f0f7c2e075254963ac21481ec7b1ffee94" translate="yes" xml:space="preserve">
          <source>The default mode of operation is &lt;code&gt;:bootstrap&lt;/code&gt;, which results in CFEngine being bootstrapped according to the information provided in the &lt;code&gt;Vagrantfile&lt;/code&gt;. You can also set &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;:single_run&lt;/code&gt;, which will run &lt;code&gt;cf-agent&lt;/code&gt; once on the host to execute the file specified in the &lt;code&gt;run_file&lt;/code&gt; parameter, but will not bootstrap it, so it will not be executed periodically.</source>
          <target state="translated">기본 작동 모드는 &lt;code&gt;:bootstrap&lt;/code&gt; 이며, &lt;code&gt;Vagrantfile&lt;/code&gt; 에 제공된 정보에 따라 CFEngine이 부트 스트랩됩니다 . 또한 설정할 수 있습니다 &lt;code&gt;mode&lt;/code&gt; 로 &lt;code&gt;:single_run&lt;/code&gt; 실행, &lt;code&gt;cf-agent&lt;/code&gt; 에 지정된 파일을 실행하는 호스트에 한 번 &lt;code&gt;run_file&lt;/code&gt; 의 매개 변수를하지만, 정기적으로 실행되지 않도록, 그것을 부트 스트랩하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="295c14b508ace18dcecb3d01f75b058880b74090" translate="yes" xml:space="preserve">
          <source>The default template for a &lt;code&gt;powershell&lt;/code&gt; configured shell is:</source>
          <target state="translated">&lt;code&gt;powershell&lt;/code&gt; 구성 쉘 의 기본 템플리트 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc5d088069b599ff2690eeefab903a9c6c57dcc9" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;/tmp/vagrant-ansible&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;/tmp/vagrant-ansible&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0e00b1397a39a428491343f7d16c330f05f0d6ba" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;/vagrant&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;/vagrant&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a1fbbe185bdf92bf0e52d1cdb2795ada05740387" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;ansible-playbook&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;ansible-playbook&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6d1dcc6b3a394539acf783a764b41f856bcb2ec9" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af976fa886c4f7b664fc57e291778fd6b49e246c" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="eb0276c5182582138e187a187122154df4246bc2" translate="yes" xml:space="preserve">
          <source>The default value is set to the machine name (taken from &lt;code&gt;Vagrantfile&lt;/code&gt;) to ensure that &lt;code&gt;vagrant provision&lt;/code&gt; command only affect the expected machine.</source>
          <target state="translated">&lt;code&gt;Vagrantfile&lt;/code&gt; &lt;code&gt;vagrant provision&lt;/code&gt; 명령이 예상되는 머신에만 영향을 미치도록 기본값은 머신 이름 ( Vagrantfile 에서 가져옴 )으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1cf908871bebc8b9e427708c39520669a9f82295" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;install_mode&lt;/code&gt; is &lt;code&gt;:default&lt;/code&gt;, and any invalid value for this option will silently fall back to the default value.</source>
          <target state="translated">&lt;code&gt;install_mode&lt;/code&gt; 의 기본값 은 &lt;code&gt;:default&lt;/code&gt; 이며이 옵션에 유효하지 않은 값은 자동으로 기본값으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="ede72661f40bb0264715a640ae567b57ce4db328" translate="yes" xml:space="preserve">
          <source>The definition and implementation of host capabilities is identical to &lt;a href=&quot;guest-capabilities&quot;&gt;guest capabilities&lt;/a&gt;.</source>
          <target state="translated">호스트 기능의 정의 및 구현은 &lt;a href=&quot;guest-capabilities&quot;&gt;게스트 기능&lt;/a&gt; 과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="3179088ad1452eae162880e56b15b6232c8f82e9" translate="yes" xml:space="preserve">
          <source>The destination folder will be created as the user initiating the connection, this is &lt;code&gt;vagrant&lt;/code&gt; by default. This user requires the appropriate permissions on the destination folder.</source>
          <target state="translated">사용자가 연결을 시작하면 대상 폴더가 생성 되며 기본적 으로이 폴더는 &lt;code&gt;vagrant&lt;/code&gt; 입니다. 이 사용자는 대상 폴더에 대한 적절한 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="194c3bc39ba4532d690555f7bdd868ea6128507b" translate="yes" xml:space="preserve">
          <source>The destination machine must also have rsync installed, but Vagrant can automatically install rsync into many operating systems. If Vagrant is unable to automatically install rsync for your operating system, it will tell you.</source>
          <target state="translated">대상 컴퓨터에도 rsync가 설치되어 있어야하지만 Vagrant는 rsync를 여러 운영 체제에 자동으로 설치할 수 있습니다. Vagrant가 운영 체제에 rsync를 자동으로 설치할 수없는 경우 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="a504e790382fd222dd5bcc9b5aa617fab221f987" translate="yes" xml:space="preserve">
          <source>The destination machine must be able to mount SMB filesystems. On Linux the package to do this is usually called &lt;code&gt;smbfs&lt;/code&gt; or &lt;code&gt;cifs&lt;/code&gt;. Vagrant knows how to automatically install this for some operating systems.</source>
          <target state="translated">대상 시스템은 SMB 파일 시스템을 마운트 할 수 있어야합니다. Linux에서는이를 수행하기위한 패키지를 일반적으로 &lt;code&gt;smbfs&lt;/code&gt; 또는 &lt;code&gt;cifs&lt;/code&gt; 라고 합니다. Vagrant는 일부 운영 체제에 자동으로 설치하는 방법을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="3eb410ff21c59384a6290f02f5dd941445ee11bf" translate="yes" xml:space="preserve">
          <source>The details of each are covered in their specific section in the sidebar to the left. We also have a section where we go into detail about the security implications of this feature.</source>
          <target state="translated">각각의 세부 사항은 왼쪽 사이드 바의 특정 섹션에서 다룹니다. 또한이 기능의 보안 영향에 대해 자세히 설명하는 섹션도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2fad6a534752e2934475cc919feae5868cd68bc" translate="yes" xml:space="preserve">
          <source>The directory is available from the &lt;code&gt;data_dir&lt;/code&gt; attribute of the &lt;code&gt;Machine&lt;/code&gt; instance given to initialize your provider. Within middleware actions, the machine is always available via the &lt;code&gt;:machine&lt;/code&gt; key on the environment. The &lt;code&gt;data_dir&lt;/code&gt; attribute is a Ruby &lt;a href=&quot;http://www.ruby-doc.org/stdlib-1.9.3/libdoc/pathname/rdoc/Pathname.html&quot;&gt;Pathname&lt;/a&gt; object.</source>
          <target state="translated">디렉토리는 제공자를 초기화하기 위해 제공된 &lt;code&gt;Machine&lt;/code&gt; 인스턴스 의 &lt;code&gt;data_dir&lt;/code&gt; 속성 에서 사용 가능 합니다. 미들웨어 조치 내에서 시스템은 항상 환경 의 &lt;code&gt;:machine&lt;/code&gt; 키를 통해 사용 가능 합니다. &lt;code&gt;data_dir&lt;/code&gt; 의 속성은 루비 &lt;a href=&quot;http://www.ruby-doc.org/stdlib-1.9.3/libdoc/pathname/rdoc/Pathname.html&quot;&gt;경로 이름의&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="384052a2c32ee640f6f13508bb0ccaa684bf0b57" translate="yes" xml:space="preserve">
          <source>The directory is available from the &lt;code&gt;data_dir&lt;/code&gt; attribute of the &lt;code&gt;Machine&lt;/code&gt; instance given to initialize your provider. Within middleware actions, the machine is always available via the &lt;code&gt;:machine&lt;/code&gt; key on the environment. The &lt;code&gt;data_dir&lt;/code&gt; attribute is a Ruby &lt;a href=&quot;https://www.ruby-doc.org/stdlib-1.9.3/libdoc/pathname/rdoc/Pathname.html&quot;&gt;Pathname&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3965f1fb949f4c90a7730ecac5525cac78fac42a" translate="yes" xml:space="preserve">
          <source>The directory where the provider clones the virtual machine can be customized by setting the &lt;code&gt;VAGRANT_VMWARE_CLONE_DIRECTORY&lt;/code&gt; environmental variable. This does not need to be unique per project. Each project will get a different sub-directory within this folder. Therefore, it is safe to set this systemwide.</source>
          <target state="translated">제공자가 가상 ​​시스템을 복제하는 디렉토리는 &lt;code&gt;VAGRANT_VMWARE_CLONE_DIRECTORY&lt;/code&gt; 환경 변수를 설정하여 사용자 정의 할 수 있습니다 . 프로젝트마다 고유하지 않아도됩니다. 각 프로젝트는이 폴더 내에서 다른 하위 디렉토리를 갖게됩니다. 따라서이 시스템을 전체적으로 설정하는 것이 안전합니다.</target>
        </trans-unit>
        <trans-unit id="c92160aeef7626d9961dffff6421d5e7942d5f4d" translate="yes" xml:space="preserve">
          <source>The docker daemon cannot be run inside the Windows Subsystem for Linux. However, the daemon &lt;em&gt;can&lt;/em&gt; be run on Windows and accessed by Vagrant while running in the WSL. Once docker is installed and running on Windows, export the following environment variable to give Vagrant access:</source>
          <target state="translated">docker 데몬은 Linux 용 Windows 하위 시스템 내에서 실행할 수 없습니다. 그러나 데몬 &lt;em&gt;은&lt;/em&gt; Windows에서 실행될 &lt;em&gt;수&lt;/em&gt; 있으며 WSL에서 실행되는 동안 Vagrant가 액세스 할 &lt;em&gt;수&lt;/em&gt; 있습니다. docker가 Windows에 설치되어 실행되면 다음 환경 변수를 내보내 Vagrant 액세스 권한을 부여하십시오.</target>
        </trans-unit>
        <trans-unit id="6d8b85d33fb78f0c7af34dd108b5649eb2f8ebbb" translate="yes" xml:space="preserve">
          <source>The docker provisioner can automatically pull images from the Docker registry for you. There are two ways to specify images to pull. The first is as an array using &lt;code&gt;images&lt;/code&gt;:</source>
          <target state="translated">docker provisioner는 Docker 레지스트리에서 이미지를 자동으로 가져올 수 있습니다. 가져올 이미지를 지정하는 방법에는 두 가지가 있습니다. 첫 번째는 &lt;code&gt;images&lt;/code&gt; 사용하는 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="65827f06ec292e2e9423bcc0a3f29114e979f74d" translate="yes" xml:space="preserve">
          <source>The docker provisioner is ideal for organizations that are using Docker as a means to distribute things like their application or services. Or, if you are just getting started with Docker, the Docker provisioner provides the easiest possible way to begin using Docker since the provisioner automates installing Docker for you.</source>
          <target state="translated">docker provisioner는 Docker를 응용 프로그램이나 서비스와 같은 것을 배포하는 수단으로 사용하는 조직에 이상적입니다. 또는 Docker를 막 시작한 경우, Provisioner가 자동으로 Docker 설치를 자동화하므로 Docker provisioner는 Docker 사용을 시작하는 가장 쉬운 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ecbd2d2f7823d9825df69d70ed5155ef50cabda" translate="yes" xml:space="preserve">
          <source>The docker provisioner takes various options. None are required. If no options are required, the Docker provisioner will only install Docker for you (if it is not already installed).</source>
          <target state="translated">docker provisioner는 다양한 옵션을 사용합니다. 필요하지 않습니다. 옵션이 필요하지 않은 경우 Docker provisioner는 Docker 만 설치합니다 (아직 설치되지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="e8bca97d10c8017949198df0184c592fe9032538" translate="yes" xml:space="preserve">
          <source>The easiest way to find boxes is to look on the &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;public Vagrant box catalog&lt;/a&gt; for a box matching your use case. The catalog contains most major operating systems as bases, as well as specialized boxes to get you up and running quickly with LAMP stacks, Ruby, Python, etc.</source>
          <target state="translated">상자를 찾는 가장 쉬운 방법은 &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;공공 Vagrant 상자 카탈로그&lt;/a&gt; 에서 사용 사례와 일치하는 상자 를 찾는 것입니다 . 이 카탈로그에는 대부분의 주요 운영 체제가 기본으로 포함되어 있으며 LAMP 스택, Ruby, Python 등으로 빠르게 실행하고 실행할 수있는 특수 상자가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2ec0008856c5ec61cf8082347477d429d3ed0c3" translate="yes" xml:space="preserve">
          <source>The easiest way to get started with the Chef Apply provisioner is to just specify an inline &lt;a href=&quot;https://docs.chef.io/recipes.html&quot;&gt;Chef recipe&lt;/a&gt;. For example:</source>
          <target state="translated">Chef Apply 프로비저닝을 시작하는 가장 쉬운 방법은 인라인 &lt;a href=&quot;https://docs.chef.io/recipes.html&quot;&gt;Chef 레시피를&lt;/a&gt; 지정하는 것 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="264f292e511a7b85ec9460d6079b100ec3e295c4" translate="yes" xml:space="preserve">
          <source>The easiest way to get started with the Chef Solo provisioner is to just specify a &lt;a href=&quot;https://docs.chef.io/nodes.html#about-run-lists&quot;&gt;run list&lt;/a&gt;. This looks like:</source>
          <target state="translated">Chef Solo 제공 업체를 시작하는 가장 쉬운 방법은 &lt;a href=&quot;https://docs.chef.io/nodes.html#about-run-lists&quot;&gt;실행 목록을&lt;/a&gt; 지정하는 것 입니다. 이것은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="4740866a96c05b08c21ae07ffbfbc5c46c615edb" translate="yes" xml:space="preserve">
          <source>The easiest way to use a box is to add a box from the &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;publicly available catalog of Vagrant boxes&lt;/a&gt;. You can also add and share your own customized boxes on this website.</source>
          <target state="translated">상자를 사용하는 가장 쉬운 방법은 &lt;a href=&quot;https://vagrantcloud.com/boxes/search&quot;&gt;공개적으로 사용 가능한 Vagrant 상자 카탈로그&lt;/a&gt; 에서 상자를 추가하는 것 입니다 . 이 웹 사이트에서 사용자 정의 된 상자를 추가하고 공유 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="651f01b38ad95826a783ca248e3aec099dc6d790" translate="yes" xml:space="preserve">
          <source>The easiest way to use a private network is to allow the IP to be assigned via DHCP.</source>
          <target state="translated">개인 네트워크를 사용하는 가장 쉬운 방법은 DHCP를 통해 IP를 할당하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="44c015bfabfd408c4344374d84243ffedfff01ba" translate="yes" xml:space="preserve">
          <source>The easiest way to use a public network is to allow the IP to be assigned via DHCP. In this case, defining a public network is trivially easy:</source>
          <target state="translated">공용 네트워크를 사용하는 가장 쉬운 방법은 DHCP를 통해 IP를 할당하는 것입니다. 이 경우 공용 네트워크를 정의하는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="cbc607fe0435e7d6a7e629b47c70851af148777a" translate="yes" xml:space="preserve">
          <source>The equivalent behavior can be achieved by using the &lt;code&gt;--color&lt;/code&gt; flag on a command-by-command basis. This environmental variable is useful for setting this flag globally.</source>
          <target state="translated">명령별로 &lt;code&gt;--color&lt;/code&gt; 플래그를 사용하면 동등한 동작을 수행 할 수 있습니다 . 이 환경 변수는이 플래그를 전역 적으로 설정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fc91c9223c074a29c49353173f232b2ecb8be6bc" translate="yes" xml:space="preserve">
          <source>The equivalent behavior can be achieved by using the &lt;code&gt;--no-color&lt;/code&gt; flag on a command-by-command basis. This environmental variable is useful for setting this flag globally.</source>
          <target state="translated">명령별로 &lt;code&gt;--no-color&lt;/code&gt; 플래그를 사용하여 동등한 동작을 수행 할 수 있습니다 . 이 환경 변수는이 플래그를 전역 적으로 설정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b0da92688fe83ba9991be63d6a6743d3c5c75158" translate="yes" xml:space="preserve">
          <source>The equivalent of running a &lt;a href=&quot;halt&quot;&gt;halt&lt;/a&gt; followed by an &lt;a href=&quot;up&quot;&gt;up&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;halt&quot;&gt;중단&lt;/a&gt; 후 &lt;a href=&quot;up&quot;&gt;up&lt;/a&gt; 을 실행하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e1e6bcbe5712d4a4a629ac62e8933189b3ebd51d" translate="yes" xml:space="preserve">
          <source>The file provisioner is defined to include all files under &lt;code&gt;~/otherfolder&lt;/code&gt; to the new location &lt;code&gt;/remote/otherlocation&lt;/code&gt;. This idea can be achieved by simply having your destination folder differ from the source folder:</source>
          <target state="translated">파일 제공자는 &lt;code&gt;~/otherfolder&lt;/code&gt; 아래의 모든 파일을 새 위치 &lt;code&gt;/remote/otherlocation&lt;/code&gt; 에 포함하도록 정의되어 있습니다 . 대상 폴더를 원본 폴더와 다르게 설정하면이 아이디어를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c558df79c91f421f1143b12778258defc598e34" translate="yes" xml:space="preserve">
          <source>The file provisioner takes only two options, both of which are required:</source>
          <target state="translated">파일 제공 업체는 두 가지 옵션 만 취합니다. 두 옵션 모두 필요합니다.</target>
        </trans-unit>
        <trans-unit id="847823f7250ec47920477c806897e2ea79a6b916" translate="yes" xml:space="preserve">
          <source>The file uploads by the file provisioner are done as the &lt;em&gt;SSH or PowerShell user&lt;/em&gt;. This is important since these users generally do not have elevated privileges on their own. If you want to upload files to locations that require elevated privileges, we recommend uploading them to temporary locations and then using the &lt;a href=&quot;shell&quot;&gt;shell provisioner&lt;/a&gt; to move them into place.</source>
          <target state="translated">파일 제공자가 파일을 업로드하는 것은 &lt;em&gt;SSH 또는 PowerShell 사용자&lt;/em&gt; 로 수행됩니다 . 이러한 사용자에게는 일반적으로 높은 권한이 없기 때문에 중요합니다. 높은 권한이 필요한 위치에 파일을 업로드하려면 임시 위치에 파일을 업로드 한 다음 &lt;a href=&quot;shell&quot;&gt;셸 프로비저닝&lt;/a&gt; 을 사용하여 파일 을 제자리로 옮기는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d2e80c986911e8f98fa9220015e3c1967460c160" translate="yes" xml:space="preserve">
          <source>The files created by Vagrant depend on the OS. For example, for many Linux distros, this is &lt;code&gt;/etc/network/interfaces&lt;/code&gt;. In general you should look in the normal location that network interfaces are configured for your distro.</source>
          <target state="translated">Vagrant가 생성 한 파일은 OS에 따라 다릅니다. 예를 들어 많은 Linux 배포판의 경우 &lt;code&gt;/etc/network/interfaces&lt;/code&gt; 입니다. 일반적으로 배포에 맞게 네트워크 인터페이스가 구성된 일반 위치를 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="777edef029174b37d6034db346f6b4463b640098" translate="yes" xml:space="preserve">
          <source>The files that are strictly required for a VMware machine to function are: nvram, vmsd, vmx, vmxf, and vmdk files.</source>
          <target state="translated">VMware 시스템이 작동하는 데 꼭 필요한 파일은 다음과 같습니다. nvram, vmsd, vmx, vmxf 및 vmdk 파일.</target>
        </trans-unit>
        <trans-unit id="da031644e4cdb06b805c6e5cc5a77a49d6f1d311" translate="yes" xml:space="preserve">
          <source>The final &lt;code&gt;:auto_correct&lt;/code&gt; parameter set to true tells Vagrant to auto correct any collisions. During a &lt;code&gt;vagrant up&lt;/code&gt; or &lt;code&gt;vagrant reload&lt;/code&gt;, Vagrant will output information about any collisions detections and auto corrections made, so you can take notice and act accordingly.</source>
          <target state="translated">final &lt;code&gt;:auto_correct&lt;/code&gt; 매개 변수를 true로 설정하면 Vagrant가 충돌을 자동으로 수정하도록 지시합니다. 동안 &lt;code&gt;vagrant up&lt;/code&gt; 또는 &lt;code&gt;vagrant reload&lt;/code&gt; 당신이 통지을하고 그에 따라 행동 할 수 있도록, 어떤 충돌 탐지 및 자동 보정에 대한 방랑의 뜻 출력 정보를 보였습니다.</target>
        </trans-unit>
        <trans-unit id="748f7d937800bf78a406d843212c2613caf3e4e7" translate="yes" xml:space="preserve">
          <source>The first and simplest option is to not provide one to Vagrant at all. Vagrant will generate an inventory file encompassing all of the virtual machines it manages, and use it for provisioning machines.</source>
          <target state="translated">첫 번째이자 가장 간단한 옵션은 Vagrant에 전혀 제공하지 않는 것입니다. Vagrant는 관리하는 모든 가상 머신을 포함하는 인벤토리 파일을 생성하고이를 프로비저닝 머신에 사용합니다.</target>
        </trans-unit>
        <trans-unit id="34bdf2de403f2d33d9c73d5021ca2f883bc38e33" translate="yes" xml:space="preserve">
          <source>The first component of a successful Ansible provisioner setup is the Ansible playbook which contains the steps that should be run on the guest. Ansible's &lt;a href=&quot;https://docs.ansible.com/playbooks.html&quot;&gt;playbook documentation&lt;/a&gt; goes into great detail on how to author playbooks, and there are a number of &lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html&quot;&gt;best practices&lt;/a&gt; that can be applied to use Ansible's powerful features effectively.</source>
          <target state="translated">성공적인 Ansible provisioner 설정의 첫 번째 구성 요소는 게스트에서 실행해야하는 단계가 포함 된 Ansible 플레이 북입니다. Ansible의 &lt;a href=&quot;https://docs.ansible.com/playbooks.html&quot;&gt;플레이 북 문서&lt;/a&gt; 는 플레이 북을 작성 하는 방법에 대해 자세하게 설명되어 있으며 Ansible의 강력한 기능을 효과적으로 사용하기 위해 적용 할 수있는 &lt;a href=&quot;https://docs.ansible.com/playbooks_best_practices.html&quot;&gt;모범 사례&lt;/a&gt; 가 많이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c94693f4060365054677423411c66d764051f51" translate="yes" xml:space="preserve">
          <source>The first method that Vagrant can use to source a Docker container is via an image. This image can be from any Docker registry. An example is shown below:</source>
          <target state="translated">Vagrant가 Docker 컨테이너를 소싱하는 데 사용할 수있는 첫 번째 방법은 이미지를 사용하는 것입니다. 이 이미지는 모든 Docker 레지스트리에있을 수 있습니다. 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8238e5d50766917522ac84e1075a0c4fbdb38172" translate="yes" xml:space="preserve">
          <source>The first network interface (adapter 1) &lt;em&gt;must&lt;/em&gt; be a NAT adapter. Vagrant uses this to connect the first time.</source>
          <target state="translated">첫 번째 네트워크 인터페이스 (어댑터 1) &lt;em&gt;는&lt;/em&gt; NAT 어댑터 &lt;em&gt;여야합니다&lt;/em&gt; . Vagrant는 이것을 사용하여 처음으로 연결합니다.</target>
        </trans-unit>
        <trans-unit id="8bb1b60c45b914a4e214af7631b48804bd147e6d" translate="yes" xml:space="preserve">
          <source>The first parameter is a path to a directory on the host machine. If the path is relative, it is relative to the project root. The second parameter must be an absolute path of where to share the folder within the guest machine. This folder will be created (recursively, if it must) if it does not exist. By default, Vagrant mounts the synced folders with the owner/group set to the SSH user and any parent folders set to root.</source>
          <target state="translated">첫 번째 매개 변수는 호스트 시스템의 디렉토리에 대한 경로입니다. 경로가 상대적이면 프로젝트 루트를 기준으로합니다. 두 번째 매개 변수는 게스트 컴퓨터 내에서 폴더를 공유 할 수있는 절대 경로 여야합니다. 이 폴더는 존재하지 않는 경우 (필요한 경우 재귀 적으로) 작성됩니다. 기본적으로 Vagrant는 소유자 / 그룹이 SSH 사용자로 설정되고 상위 폴더가 root로 설정되어 동기화 된 폴더를 마운트합니다.</target>
        </trans-unit>
        <trans-unit id="0f2d20d98130731896bc0ae1140376aa036683b4" translate="yes" xml:space="preserve">
          <source>The first parameter is the name of the plugin, and the second parameter is the path to the license file on disk. Please be sure to replace &lt;code&gt;~/license.lic&lt;/code&gt; with the path where you temporarily saved the downloaded license file to disk. After you have installed the plugin license, you may remove the temporary file.</source>
          <target state="translated">첫 번째 매개 변수는 플러그인의 이름이고 두 번째 매개 변수는 디스크의 라이센스 파일 경로입니다. &lt;code&gt;~/license.lic&lt;/code&gt; 를 다운로드 한 라이센스 파일을 디스크에 임시로 저장 한 경로 로 바꾸십시오 . 플러그인 라이센스를 설치 한 후 임시 파일을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50da6361e3d6ac710e773c29dd24d4922bd5b763" translate="yes" xml:space="preserve">
          <source>The first thing to note is that individual components are defined by making a method call with the component name, such as &lt;code&gt;command&lt;/code&gt; or &lt;code&gt;provisioner&lt;/code&gt;. These in turn take some parameters. In the case of our example it is just the name of the command and the name of the provisioner. All component definitions then take a block argument (a callback) that must return the actual component implementation class.</source>
          <target state="translated">가장 먼저 알아 두어야 할 것은 개별 컴포넌트는 &lt;code&gt;command&lt;/code&gt; 또는 &lt;code&gt;provisioner&lt;/code&gt; 와 같은 컴포넌트 이름으로 메소드를 호출하여 정의 한다는 것 입니다. 이들은 차례로 몇 가지 매개 변수를 사용합니다. 예제의 경우 명령 이름과 프로 비저 이름입니다. 모든 컴포넌트 정의는 실제 컴포넌트 구현 클래스를 리턴해야하는 블록 인수 (콜백)를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3eb189ab8ebdb723cdc8e2ef309d507898137dba" translate="yes" xml:space="preserve">
          <source>The first two components are covered in more detail below.</source>
          <target state="translated">처음 두 구성 요소는 아래에서 더 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="bd6ac9d61f22f7b1c3130f3652a258333deccd6c" translate="yes" xml:space="preserve">
          <source>The following (optional) placeholders can be used in this command pattern:</source>
          <target state="translated">이 명령 패턴에는 다음과 같은 (선택적) 자리 표시자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e42b8508e693ff69149c5c15c4af3ca7be943574" translate="yes" xml:space="preserve">
          <source>The following action hooks are available in the core of Vagrant. Please note that this list is not exhaustive and additional hooks can be added via plugins.</source>
          <target state="translated">Vagrant의 핵심 기능은 다음과 같습니다. 이 목록은 전체가 아니며 플러그인을 통해 추가 후크를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d129e342f32c2516f74407ad65ad364585ef7493" translate="yes" xml:space="preserve">
          <source>The following command is invalid:</source>
          <target state="translated">다음 명령이 유효하지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="5cadb2ca6d9407e3d9a3ff16925d33437432f52c" translate="yes" xml:space="preserve">
          <source>The following commands will change the WinRM 1.1 port to what's expected by Vagrant:</source>
          <target state="translated">다음 명령은 WinRM 1.1 포트를 Vagrant가 예상 한 것으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f9edb8bd18990b21d0326da22d10e62fee12c860" translate="yes" xml:space="preserve">
          <source>The following is a basic example of two global triggers. One that runs &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;:up&lt;/code&gt; command and one that runs &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;:up&lt;/code&gt; command:</source>
          <target state="translated">다음은 두 개의 글로벌 트리거의 기본 예입니다. 하나는 그 실행 &lt;em&gt;전에 &lt;/em&gt; &lt;code&gt;:up&lt;/code&gt; 명령 한 것을 실행 &lt;em&gt;후 &lt;/em&gt; &lt;code&gt;:up&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="ac87f5542fd73725f120cbf23661c434e7562ed2" translate="yes" xml:space="preserve">
          <source>The following is an example of using RSync to sync a folder:</source>
          <target state="translated">다음은 RSync를 사용하여 폴더를 동기화하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="f93cf301537bf229555e5dfd08527fa004c49129" translate="yes" xml:space="preserve">
          <source>The following is an example of using SMB to sync a folder:</source>
          <target state="translated">다음은 SMB를 사용하여 폴더를 동기화하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="46ae98d249771f2c38884f47e2e20019bb27b0de" translate="yes" xml:space="preserve">
          <source>The following options are available to all Vagrant Chef provisioners. Many of these options are for advanced users only and should not be used unless you understand their purpose.</source>
          <target state="translated">모든 Vagrant Chef 제공 업체에서 다음 옵션을 사용할 수 있습니다. 이러한 옵션 중 다수는 고급 사용자를위한 것이며 사용자가 목적을 이해하지 않으면 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="2494af946e03843658f2ebc3b096d1820b3c3d1f" translate="yes" xml:space="preserve">
          <source>The following options are available to any of the Chef &quot;runner&quot; provisioners which include &lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt;, &lt;a href=&quot;chef_zero&quot;&gt;Chef Zero&lt;/a&gt;, and &lt;a href=&quot;chef_client&quot;&gt;Chef Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;chef_solo&quot;&gt;Chef Solo&lt;/a&gt; , &lt;a href=&quot;chef_zero&quot;&gt;Chef Zero&lt;/a&gt; 및 &lt;a href=&quot;chef_client&quot;&gt;Chef Client&lt;/a&gt; 를 포함하는 모든 Chef &quot;주자&quot;제공 업체에서 다음 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4849aa53548088deb21baf1c8f1998f5310a7331" translate="yes" xml:space="preserve">
          <source>The following options are available to both Vagrant Ansible provisioners:</source>
          <target state="translated">Vagrant Ansible 제공자 모두 다음 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a91025674068746c104cf678dff09a87e09a62d" translate="yes" xml:space="preserve">
          <source>The format is:</source>
          <target state="translated">형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1a4aa7fd9653223ead9e01b2a0bbd1cde3f72cbb" translate="yes" xml:space="preserve">
          <source>The forwarded port configuration expects two parameters, the port on the guest and the port on the host. Example:</source>
          <target state="translated">전달 된 포트 구성에는 게스트 포트와 호스트 포트의 두 매개 변수가 필요합니다. 예:</target>
        </trans-unit>
        <trans-unit id="98159261861cc41adbd18435599a90c3f00e97f8" translate="yes" xml:space="preserve">
          <source>The generation of group variables blocks (e.g. &lt;code&gt;[group1:vars]&lt;/code&gt;) is only possible since Vagrant 1.8.0. Note however that setting variables directly in the inventory is not the &lt;a href=&quot;https://docs.ansible.com/intro_inventory.html#splitting-out-host-and-group-specific-data&quot;&gt;preferred practice in Ansible&lt;/a&gt;. If possible, group (or host) variables should be set in &lt;code&gt;YAML&lt;/code&gt; files stored in the &lt;code&gt;group_vars/&lt;/code&gt; or &lt;code&gt;host_vars/&lt;/code&gt; directories in the playbook (or inventory) directory instead.</source>
          <target state="translated">그룹 변수 블록 (예 : &lt;code&gt;[group1:vars]&lt;/code&gt; ) 생성은 Vagrant 1.8.0 이후에만 가능합니다. 그러나 인벤토리에서 직접 변수를 설정 &lt;a href=&quot;https://docs.ansible.com/intro_inventory.html#splitting-out-host-and-group-specific-data&quot;&gt;하는 것은 Ansible&lt;/a&gt; 에서 선호되는 방법 이 아닙니다 . 가능하면 그룹 (또는 호스트) 변수는 대신 플레이 북 (또는 인벤토리) 디렉토리 의 &lt;code&gt;group_vars/&lt;/code&gt; 또는 &lt;code&gt;host_vars/&lt;/code&gt; 디렉토리에 저장된 &lt;code&gt;YAML&lt;/code&gt; 파일에 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="83d9dedaff322b492f91ef493478126b16b1a78d" translate="yes" xml:space="preserve">
          <source>The high-level networking options are meant to define an abstraction that works across multiple &lt;a href=&quot;../providers/index&quot;&gt;providers&lt;/a&gt;. This means that you can take your Vagrantfile you used to spin up a VirtualBox machine and you can reasonably expect that Vagrantfile to behave the same with something like VMware.</source>
          <target state="translated">고급 네트워킹 옵션은 여러 &lt;a href=&quot;../providers/index&quot;&gt;공급자에서&lt;/a&gt; 작동하는 추상화를 정의하기위한 것 입니다. 즉, VirtualBox 시스템을 가동하는 데 사용한 Vagrantfile을 가져 와서 Vagrantfile이 VMware와 같은 방식으로 작동 할 것으로 예상 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4edd384fba1ffbb8cfe3385f5bf6e2548b0c111" translate="yes" xml:space="preserve">
          <source>The host VM will be spun up at the first &lt;code&gt;vagrant up&lt;/code&gt; where the provider is Docker. To control this host VM, use the &lt;a href=&quot;../cli/global-status&quot;&gt;global-status command&lt;/a&gt; along with global control.</source>
          <target state="translated">호스트 VM은 제공자가 Docker 인 첫 번째 &lt;code&gt;vagrant up&lt;/code&gt; 에서 시작됩니다. 이 호스트 VM을 제어하려면 전역 제어와 함께 global &lt;a href=&quot;../cli/global-status&quot;&gt;-status 명령&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="264d95bef96de6ea0fb2e17650086d35580f3d04" translate="yes" xml:space="preserve">
          <source>The host will automatically be &lt;a href=&quot;https://cfengine.com/docs/3.5/manuals-architecture-networking.html#bootstrapping&quot;&gt;bootstrapped&lt;/a&gt; to itself to become a policy server.</source>
          <target state="translated">호스트는 자동으로 &lt;a href=&quot;https://cfengine.com/docs/3.5/manuals-architecture-networking.html#bootstrapping&quot;&gt;부트 스트랩&lt;/a&gt; 되어 정책 서버가됩니다.</target>
        </trans-unit>
        <trans-unit id="6270e1a5fd1415251621315a0a2369c7efc69174" translate="yes" xml:space="preserve">
          <source>The important thing to understand as a general user of Vagrant is that &lt;em&gt;within a single configuration section&lt;/em&gt;, only a single version can be used. You cannot use the new &lt;code&gt;config.vm.provider&lt;/code&gt; configurations in a version 1 configuration section. Likewise, &lt;code&gt;config.vm.forward_port&lt;/code&gt; will not work in a version 2 configuration section (it was renamed).</source>
          <target state="translated">Vagrant의 일반 사용자로서 이해해야 할 중요한 것은 &lt;em&gt;단일 구성 섹션 내&lt;/em&gt; 에서 단일 버전 만 사용할 수 있다는 것입니다. 버전 1 구성 섹션에서 새 &lt;code&gt;config.vm.provider&lt;/code&gt; 구성을 사용할 수 없습니다 . 마찬가지로 &lt;code&gt;config.vm.forward_port&lt;/code&gt; 는 버전 2 구성 섹션 (이름이 바 ()에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f646819715c591f9c26e7c701f6ec9f508a7605d" translate="yes" xml:space="preserve">
          <source>The information below is applicable to both Vagrant Ansible provisioners:</source>
          <target state="translated">아래 정보는 Vagrant Ansible 제공 업체 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa508531a87d7254791464076cf7f84ec513e71f" translate="yes" xml:space="preserve">
          <source>The installer will automatically add &lt;code&gt;vagrant&lt;/code&gt; to your system path so that it is available in terminals. If it is not found, please try logging out and logging back in to your system (this is particularly necessary sometimes for Windows).</source>
          <target state="translated">설치 프로그램은 자동으로 시스템 경로 에 &lt;code&gt;vagrant&lt;/code&gt; 를 추가 하여 터미널에서 사용할 수 있도록합니다. 찾을 수없는 경우 시스템에서 로그 아웃했다가 다시 로그인 해보십시오 (특히 Windows의 경우 특히 필요함).</target>
        </trans-unit>
        <trans-unit id="1bcead24504c7865c33b8c0faa96c4efa7ba4ed6" translate="yes" xml:space="preserve">
          <source>The installers will properly overwrite and remove old files. It is recommended that no other Vagrant processes are running during the upgrade process.</source>
          <target state="translated">설치 프로그램이 이전 파일을 덮어 쓰고 제거합니다. 업그레이드 프로세스 중에 다른 Vagrant 프로세스를 실행하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="af5693208da59b0a509a8fbcd2a248a9d3913511" translate="yes" xml:space="preserve">
          <source>The interface is available using the &lt;code&gt;vagrant&lt;/code&gt; command, and comes installed with Vagrant automatically. The &lt;code&gt;vagrant&lt;/code&gt; command in turn has many subcommands, such as &lt;code&gt;vagrant up&lt;/code&gt;, &lt;code&gt;vagrant destroy&lt;/code&gt;, etc.</source>
          <target state="translated">이 인터페이스는 &lt;code&gt;vagrant&lt;/code&gt; 명령을 사용하여 사용할 수 있으며 Vagrant와 함께 자동으로 설치됩니다. &lt;code&gt;vagrant&lt;/code&gt; 차례로 명령은 많은 하위 명령이 있습니다 &lt;code&gt;vagrant up&lt;/code&gt; , &lt;code&gt;vagrant destroy&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="79dc4a00c82078d6fa09606990009dcc4488ffa1" translate="yes" xml:space="preserve">
          <source>The list of common options for these two provisioners is documented in a &lt;a href=&quot;ansible_common&quot;&gt;separate documentation page&lt;/a&gt;.</source>
          <target state="translated">이 두 공급자의 공통 옵션 목록은 &lt;a href=&quot;ansible_common&quot;&gt;별도의 설명서 페이지에 설명되어&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5c26ccb9567093201ba60c343d026f8c7c7ab5d" translate="yes" xml:space="preserve">
          <source>The list of non-primary commands is below. Click on any command to learn more about it.</source>
          <target state="translated">기본이 아닌 명령 목록은 다음과 같습니다. 자세한 내용을 보려면 아무 명령이나 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="09bb09db968dcdde0378a1d5469e1eae43290b42" translate="yes" xml:space="preserve">
          <source>The login command is used to authenticate with &lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp's Vagrant Cloud&lt;/a&gt; server. Logging in is only necessary if you are accessing protected boxes.</source>
          <target state="translated">login 명령은 &lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp의 Vagrant Cloud&lt;/a&gt; 서버 를 인증하는 데 사용됩니다 . 보호 된 상자에 액세스하는 경우에만 로그인해야합니다.</target>
        </trans-unit>
        <trans-unit id="9211b3483e7f0564dca294d46dfdf303578219ee" translate="yes" xml:space="preserve">
          <source>The login command is used to authenticate with the &lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp's Vagrant Cloud&lt;/a&gt; server. Logging in is only necessary if you are accessing protected boxes or using &lt;a href=&quot;../share/index&quot;&gt;Vagrant Share&lt;/a&gt;.</source>
          <target state="translated">login 명령은 &lt;a href=&quot;https://www.vagrantup.com/docs/vagrant-cloud&quot;&gt;HashiCorp의 Vagrant Cloud&lt;/a&gt; 서버 를 인증하는 데 사용됩니다 . 로그인은 보호 된 박스에 액세스하거나 &lt;a href=&quot;../share/index&quot;&gt;Vagrant Share를&lt;/a&gt; 사용하는 경우에만 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="adff2fef5543cc18f4c5665ee9b4c55f1f6ab866" translate="yes" xml:space="preserve">
          <source>The machine names in &lt;code&gt;Vagrantfile&lt;/code&gt; and &lt;code&gt;ansible.inventory_path&lt;/code&gt; files should correspond, unless you use &lt;code&gt;ansible.limit&lt;/code&gt; option to reference the correct machines.</source>
          <target state="translated">올바른 시스템을 참조하기 위해 &lt;code&gt;ansible.limit&lt;/code&gt; 옵션을 사용하지 않으면 &lt;code&gt;Vagrantfile&lt;/code&gt; 및 &lt;code&gt;ansible.inventory_path&lt;/code&gt; 파일 의 시스템 이름 이 일치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="fa288ba63565014b90d08297a888deea2deab4c1" translate="yes" xml:space="preserve">
          <source>The machine readable format is a line-oriented, comma-delimited text format. This makes it extremely easy to parse using standard Unix tools such as awk or grep in addition to full programming languages like Ruby or Python.</source>
          <target state="translated">기계가 읽을 수있는 형식은 줄 방향의 쉼표로 구분 된 텍스트 형식입니다. 따라서 Ruby 또는 Python과 같은 전체 프로그래밍 언어 외에도 awk 또는 grep과 같은 표준 Unix 도구를 사용하여 구문 분석이 매우 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="91b610d4ae1c301e1870febe404cc4d6f22ec6d0" translate="yes" xml:space="preserve">
          <source>The machine-readable output is very new (released as part of Vagrant 1.4). We're still gathering use cases for it and building up the output for each of the commands. It is likely that what you may want to achieve with the machine-readable output is not possible due to missing information.</source>
          <target state="translated">기계가 읽을 수있는 출력은 매우 새롭습니다 (Vagrant 1.4의 일부로 릴리스 됨). 우리는 여전히 사용 사례를 수집하고 각 명령에 대한 출력을 작성합니다. 정보가 누락되어 기계가 읽을 수있는 출력으로 달성하려는 것이 불가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="add836f1ca0e4139c92193dca64a8861defb3077" translate="yes" xml:space="preserve">
          <source>The main advantage of the Ansible Local provisioner in comparison to the &lt;a href=&quot;ansible&quot;&gt;Ansible (remote) provisioner&lt;/a&gt; is that it does not require any additional software on your Vagrant host.</source>
          <target state="translated">&lt;a href=&quot;ansible&quot;&gt;Ansible (원격)&lt;/a&gt; Provisioner와 비교하여 Ansible Local Provisioner의 주요 장점은 Vagrant 호스트에 추가 소프트웨어가 필요하지 않다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c9ecebae11d8b2824d51041cc18e560e99d67c0b" translate="yes" xml:space="preserve">
          <source>The main difference from guest capabilities, however, is that instead of taking a machine as the first argument, all host capabilities take an instance of &lt;code&gt;Vagrant::Environment&lt;/code&gt; as their first argument.</source>
          <target state="translated">그러나 게스트 기능과의 주요 차이점은 시스템을 첫 번째 인수로 사용하는 대신 모든 호스트 기능이 &lt;code&gt;Vagrant::Environment&lt;/code&gt; 인스턴스를 첫 번째 인수로 사용한다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="e9c315c73b93b50bb5e932c4aafbe883c980f63e" translate="yes" xml:space="preserve">
          <source>The main functionality of this command is exposed via another level of subcommands:</source>
          <target state="translated">이 명령의 주요 기능은 다른 수준의 하위 명령을 통해 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="73ebdef54012596dfa5ff8edda5f69fa3678f944" translate="yes" xml:space="preserve">
          <source>The main functionality of this command is exposed via even more subcommands:</source>
          <target state="translated">이 명령의 주요 기능은 더 많은 하위 명령을 통해 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="47328eaaa39734c536c8988a58e0e128de4a0d24" translate="yes" xml:space="preserve">
          <source>The main functionality of this command is exposed via subcommands:</source>
          <target state="translated">이 명령의 주요 기능은 다음과 같은 하위 명령을 통해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="903871f2074e6c4ec0ff264a9cdc23ba7018b919" translate="yes" xml:space="preserve">
          <source>The metadata is an optional component for a box (but highly recommended) that enables &lt;a href=&quot;versioning&quot;&gt;versioning&lt;/a&gt;, updating, multiple providers from a single file, and more.</source>
          <target state="translated">메타 데이터는 &lt;a href=&quot;versioning&quot;&gt;버전 관리&lt;/a&gt; , 업데이트, 단일 파일의 여러 공급자 등 을 지원하는 상자 (옵션)의 선택적 구성 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="7f4e166a08d2de2976e6f93022ba88caad657999" translate="yes" xml:space="preserve">
          <source>The minimum required to use provision using Chef Client is to provide a URL to the Chef Server as well as the path to the validation key so that the node can register with the Chef Server:</source>
          <target state="translated">Chef Client를 사용하여 프로비저닝을 사용하는 데 필요한 최소값은 노드가 Chef Server에 등록 할 수 있도록 Chef 키에 대한 URL과 유효성 검증 키 경로를 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="965b322144c1a61840a376e0927c3f0d81087d83" translate="yes" xml:space="preserve">
          <source>The moment more than one machine is defined within a Vagrantfile, the usage of the various &lt;code&gt;vagrant&lt;/code&gt; commands changes slightly. The change should be mostly intuitive.</source>
          <target state="translated">하나 이상의 기계가 Vagrantfile 내에서 정의되는 순간, 여러 가지의 사용 &lt;code&gt;vagrant&lt;/code&gt; 명령이 약간 변경됩니다. 변경은 대부분 직관적이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0103d8091c6dc3bba5b9d3b88069b95c536687fd" translate="yes" xml:space="preserve">
          <source>The most common keys people look for are setting memory and CPUs. The example below sets both:</source>
          <target state="translated">사람들이 찾는 가장 일반적인 키는 메모리와 CPU 설정입니다. 아래 예제는 두 가지를 모두 설정합니다.</target>
        </trans-unit>
        <trans-unit id="cf6b4dfe46e1b32f95c61afb630f063661034ee7" translate="yes" xml:space="preserve">
          <source>The navigation will take you through each component of Vagrant. Click on a navigation item to get started, or read more about &lt;a href=&quot;https://www.vagrantup.com/intro/index.html&quot;&gt;why developers, designers, and operators choose Vagrant&lt;/a&gt; for their needs.</source>
          <target state="translated">내비게이션은 Vagrant의 각 구성 요소를 안내합니다. 탐색 항목을 클릭하여 시작하거나 &lt;a href=&quot;https://www.vagrantup.com/intro/index.html&quot;&gt;개발자, 디자이너 및 운영자&lt;/a&gt; 가 필요에 따라 Vagrant 를 선택 하는 이유 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="37141618a94e25d359ed7ecbcf48d8d69c2af639" translate="yes" xml:space="preserve">
          <source>The node name defaults to the hostname of the guest machine, but can be customized using the Vagrantfile:</source>
          <target state="translated">노드 이름의 기본값은 게스트 시스템의 호스트 이름이지만 Vagrantfile을 사용하여 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="381b69f1df34d96e61b1b8233bdcc222d2b77006" translate="yes" xml:space="preserve">
          <source>The node name that the agent registers as can be customized. Remember this is important because Puppet uses the node name as part of the process to compile the catalog the node will run.</source>
          <target state="translated">에이전트가 등록 할 수있는 노드 이름을 사용자 정의 할 수 있습니다. Puppet은 프로세스의 일부로 노드 이름을 사용하여 노드가 실행할 카탈로그를 컴파일하기 때문에 이것이 중요하다는 것을 기억하십시오.</target>
        </trans-unit>
        <trans-unit id="00880cf80002ac62982997c1bfd19511508b664c" translate="yes" xml:space="preserve">
          <source>The node will register with the Chef Server specified, download the proper run list for that node, and provision.</source>
          <target state="translated">노드는 지정된 Chef Server에 등록하고 해당 노드에 적합한 실행 목록을 다운로드 한 후 프로비저닝합니다.</target>
        </trans-unit>
        <trans-unit id="59aa85ec6c27735010a065cced6933ecf7ecd30c" translate="yes" xml:space="preserve">
          <source>The one we're interested in is &lt;code&gt;kvm_intel&lt;/code&gt;. You might have another.</source>
          <target state="translated">우리가 관심있는 것은 &lt;code&gt;kvm_intel&lt;/code&gt; 입니다. 다른 것이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a05b4300d12f9b475ab2c25bee472d579c41715e" translate="yes" xml:space="preserve">
          <source>The only requirement for your box format is that the &lt;code&gt;metadata.json&lt;/code&gt; file have a &lt;code&gt;provider&lt;/code&gt; key which matches the name of your provider you chose above.</source>
          <target state="translated">상자 형식의 유일한 요구 사항은 &lt;code&gt;metadata.json&lt;/code&gt; 파일에 위에서 선택한 공급자 이름과 일치 하는 &lt;code&gt;provider&lt;/code&gt; 키 가 있어야한다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="8a385b9fe94f6ac4aff502bb8619962659c1e778" translate="yes" xml:space="preserve">
          <source>The only thing about this Gemfile that may stand out as odd is the &quot;plugins&quot; group and putting your plugin in that group. Because &lt;code&gt;vagrant plugin&lt;/code&gt; commands do not work in development, this is how you &quot;install&quot; your plugin into Vagrant. Vagrant will automatically load any gems listed in the &quot;plugins&quot; group. Note that this also allows you to add multiple plugins to Vagrant for development, if your plugin works with another plugin.</source>
          <target state="translated">이 Gemfile에 대해 이상하게 눈에 띄는 것은 &quot;plugins&quot;그룹과 플러그인을 해당 그룹에 두는 것입니다. &lt;code&gt;vagrant plugin&lt;/code&gt; 명령은 개발에서 작동하지 않기 때문에 , 플러그인을 방랑자에 &quot;설치&quot;하는 방법입니다. Vagrant는 &quot;plugins&quot;그룹에 나열된 모든 gem을 자동으로로드합니다. 또한 플러그인이 다른 플러그인과 작동하는 경우 여러 플러그인을 Vagrant에 추가하여 개발할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b33cb7f67f3fa98cf42c0e5b338b09df62d1ad45" translate="yes" xml:space="preserve">
          <source>The options below only apply if you are adding a box file directly (when you are not using a catalog).</source>
          <target state="translated">아래 옵션은 상자 파일을 직접 추가하는 경우에만 적용됩니다 (카탈로그를 사용하지 않는 경우).</target>
        </trans-unit>
        <trans-unit id="c956ebc9d59c27e63eb0a608626f2d48dd9fc21b" translate="yes" xml:space="preserve">
          <source>The order of the calls to &lt;code&gt;add_recipe&lt;/code&gt; will specify the order of the run list. Earlier recipes added with &lt;code&gt;add_recipe&lt;/code&gt; are run before later recipes added.</source>
          <target state="translated">&lt;code&gt;add_recipe&lt;/code&gt; 호출 순서는 실행 목록의 순서를 지정합니다. &lt;code&gt;add_recipe&lt;/code&gt; 로 추가 된 이전 레시피 는 나중에 레시피를 추가하기 전에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e449305a0a783f05602f3c91e30a5daa6161a420" translate="yes" xml:space="preserve">
          <source>The ordering of the provisioners will be to echo &quot;foo&quot;, &quot;baz&quot;, then &quot;bar&quot; (note the second one might not be what you expect!). Remember: ordering is &lt;em&gt;outside in&lt;/em&gt;.</source>
          <target state="translated">프로 비 저의 순서는 &quot;foo&quot;, &quot;baz&quot;, &quot;bar&quot;를 에코하는 것입니다 (두 번째 것은 예상과 다를 수 있습니다!). 기억하세요 : 주문은 &lt;em&gt;외부에&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="179f9f0512842e005a61691f195bf5e68dfe56ee" translate="yes" xml:space="preserve">
          <source>The path &lt;code&gt;~/.vagrant.d/gems/*/vagrant-vmware-{fusion,workstation}&lt;/code&gt; should no longer exist. The gem &lt;code&gt;vagrant-vmware-desktop&lt;/code&gt; may exist since this is the name of the new plugin. If the old directories exist, remove them. An example for a Unix-like shell is shown below:</source>
          <target state="translated">경로 &lt;code&gt;~/.vagrant.d/gems/*/vagrant-vmware-{fusion,workstation}&lt;/code&gt; 해야 더 이상 존재한다. &lt;code&gt;vagrant-vmware-desktop&lt;/code&gt; gem 은 새로운 플러그인의 이름이므로 존재할 수 있습니다. 이전 디렉토리가 존재하면 제거하십시오. 유닉스 계열 쉘의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb04b4bb015e7623eb1681694519d7894d483b0d" translate="yes" xml:space="preserve">
          <source>The path can be relative or absolute. If it is relative, it is relative to the project root.</source>
          <target state="translated">경로는 상대적이거나 절대적 일 수 있습니다. 상대적인 경우 프로젝트 루트를 기준으로합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
