<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="pony">
    <body>
      <group id="pony">
        <trans-unit id="facf358cf6d93291c3db20c42b19b7d9063b1d9f" translate="yes" xml:space="preserve">
          <source>ANSINotify.apply()</source>
          <target state="translated">ANSINotify.apply()</target>
        </trans-unit>
        <trans-unit id="16969cfd4d5f41bb55bc3374331bea0cfa3f22b4" translate="yes" xml:space="preserve">
          <source>ANSINotify.closed()</source>
          <target state="translated">ANSINotify.closed()</target>
        </trans-unit>
        <trans-unit id="2fe5421508e115adf4690b7ae7ca64fc274f4f78" translate="yes" xml:space="preserve">
          <source>ANSINotify.delete()</source>
          <target state="translated">ANSINotify.delete()</target>
        </trans-unit>
        <trans-unit id="1db03701fa7d6d222f1306dad5e351efd2e815ba" translate="yes" xml:space="preserve">
          <source>ANSINotify.down()</source>
          <target state="translated">ANSINotify.down()</target>
        </trans-unit>
        <trans-unit id="5a62a38c00242b7146ce424910aa10c8fe67a27a" translate="yes" xml:space="preserve">
          <source>ANSINotify.end_key()</source>
          <target state="translated">ANSINotify.end_key()</target>
        </trans-unit>
        <trans-unit id="b402966362e983cd3f38bb4f4b620b1ffbc8e459" translate="yes" xml:space="preserve">
          <source>ANSINotify.fn_key()</source>
          <target state="translated">ANSINotify.fn_key()</target>
        </trans-unit>
        <trans-unit id="7a77d785769c03bf748ab5dfb756eaf1e50bfa64" translate="yes" xml:space="preserve">
          <source>ANSINotify.home()</source>
          <target state="translated">ANSINotify.home()</target>
        </trans-unit>
        <trans-unit id="384f23b0e8f1eec3af51a7c4d1419e6a77c66954" translate="yes" xml:space="preserve">
          <source>ANSINotify.insert()</source>
          <target state="translated">ANSINotify.insert()</target>
        </trans-unit>
        <trans-unit id="20660ab0e131922a3c8bc1722df20b4909dd65a1" translate="yes" xml:space="preserve">
          <source>ANSINotify.left()</source>
          <target state="translated">ANSINotify.left()</target>
        </trans-unit>
        <trans-unit id="c8d6adf13f4b6500e0387146fd1b12f3645c5259" translate="yes" xml:space="preserve">
          <source>ANSINotify.page_down()</source>
          <target state="translated">ANSINotify.page_down()</target>
        </trans-unit>
        <trans-unit id="fd77d4a5d564b1dc437660519b7ad084e9d5e01d" translate="yes" xml:space="preserve">
          <source>ANSINotify.page_up()</source>
          <target state="translated">ANSINotify.page_up()</target>
        </trans-unit>
        <trans-unit id="c352c24e984ffced623aeb083995a9caa9381ad7" translate="yes" xml:space="preserve">
          <source>ANSINotify.prompt()</source>
          <target state="translated">ANSINotify.prompt()</target>
        </trans-unit>
        <trans-unit id="c7253caf5fdf7d9da79f5f6147c22b4168360724" translate="yes" xml:space="preserve">
          <source>ANSINotify.right()</source>
          <target state="translated">ANSINotify.right()</target>
        </trans-unit>
        <trans-unit id="b0798a769b72a40929c2ba3ca2cce01a64c7d752" translate="yes" xml:space="preserve">
          <source>ANSINotify.size()</source>
          <target state="translated">ANSINotify.size()</target>
        </trans-unit>
        <trans-unit id="430905e8f7f76e42629fb60e33fffbfef58754d1" translate="yes" xml:space="preserve">
          <source>ANSINotify.up()</source>
          <target state="translated">ANSINotify.up()</target>
        </trans-unit>
        <trans-unit id="2018d974511a0c81d691aa3d33b49524bc30f247" translate="yes" xml:space="preserve">
          <source>ANSITerm</source>
          <target state="translated">ANSITerm</target>
        </trans-unit>
        <trans-unit id="3c6f996dc8d048be59586a37cac532470c2c1961" translate="yes" xml:space="preserve">
          <source>ANSITerm._delete()</source>
          <target state="translated">ANSITerm._delete()</target>
        </trans-unit>
        <trans-unit id="5f7e27a55e21e9afed03a57143f946c38029a244" translate="yes" xml:space="preserve">
          <source>ANSITerm._down()</source>
          <target state="translated">ANSITerm._down()</target>
        </trans-unit>
        <trans-unit id="5258393cf80c981d13fb1a19799327dd7831961b" translate="yes" xml:space="preserve">
          <source>ANSITerm._end()</source>
          <target state="translated">ANSITerm._end()</target>
        </trans-unit>
        <trans-unit id="d3ee22bd52bb33abd0caf41fa5d686a761604915" translate="yes" xml:space="preserve">
          <source>ANSITerm._esc_clear()</source>
          <target state="translated">ANSITerm._esc_clear()</target>
        </trans-unit>
        <trans-unit id="d2dde0edb342f82d56da9e40f3491fe4487d31b0" translate="yes" xml:space="preserve">
          <source>ANSITerm._esc_flush()</source>
          <target state="translated">ANSITerm._esc_flush()</target>
        </trans-unit>
        <trans-unit id="b603f1a64fc9a26a809619f5918bd6f9a29bdcfd" translate="yes" xml:space="preserve">
          <source>ANSITerm._fn_key()</source>
          <target state="translated">ANSITerm._fn_key()</target>
        </trans-unit>
        <trans-unit id="a6a856da0d9cf07562ad2021e95909f7643deb83" translate="yes" xml:space="preserve">
          <source>ANSITerm._home()</source>
          <target state="translated">ANSITerm._home()</target>
        </trans-unit>
        <trans-unit id="413456b74325c76a2d0431c25009d396030ae5e5" translate="yes" xml:space="preserve">
          <source>ANSITerm._insert()</source>
          <target state="translated">ANSITerm._insert()</target>
        </trans-unit>
        <trans-unit id="c1496386635c2988042f60082e0180507528dc01" translate="yes" xml:space="preserve">
          <source>ANSITerm._keypad()</source>
          <target state="translated">ANSITerm._keypad()</target>
        </trans-unit>
        <trans-unit id="68a49da32215afd5657537d65d35b7eb2c197f4f" translate="yes" xml:space="preserve">
          <source>ANSITerm._left()</source>
          <target state="translated">ANSITerm._left()</target>
        </trans-unit>
        <trans-unit id="8f4f2259335b55d6e1854f262f2f0bd810575c51" translate="yes" xml:space="preserve">
          <source>ANSITerm._mod()</source>
          <target state="translated">ANSITerm._mod()</target>
        </trans-unit>
        <trans-unit id="97ba685ae012e4588f193b470bc888bfaac0e14a" translate="yes" xml:space="preserve">
          <source>ANSITerm._page_down()</source>
          <target state="translated">ANSITerm._page_down()</target>
        </trans-unit>
        <trans-unit id="436edf63a7efef549100a524f88be58491dadc64" translate="yes" xml:space="preserve">
          <source>ANSITerm._page_up()</source>
          <target state="translated">ANSITerm._page_up()</target>
        </trans-unit>
        <trans-unit id="7a95d08fae4415f6cf542d08705d35f3831710f3" translate="yes" xml:space="preserve">
          <source>ANSITerm._right()</source>
          <target state="translated">ANSITerm._right()</target>
        </trans-unit>
        <trans-unit id="d01fa803382ed1e10c950fbd0a3296bffb8f5d45" translate="yes" xml:space="preserve">
          <source>ANSITerm._size()</source>
          <target state="translated">ANSITerm._size()</target>
        </trans-unit>
        <trans-unit id="94f2c29777dfa325687e2321134abb3e0bce17d8" translate="yes" xml:space="preserve">
          <source>ANSITerm._timeout()</source>
          <target state="translated">ANSITerm._timeout()</target>
        </trans-unit>
        <trans-unit id="7ce1c8631e26c7fc0932b13f669a12452cd4da57" translate="yes" xml:space="preserve">
          <source>ANSITerm._up()</source>
          <target state="translated">ANSITerm._up()</target>
        </trans-unit>
        <trans-unit id="e3a6c4142ed2259dbce2ccdd6fa5f7148748eebf" translate="yes" xml:space="preserve">
          <source>ANSITerm.apply()</source>
          <target state="translated">ANSITerm.apply()</target>
        </trans-unit>
        <trans-unit id="b4b9faabc60069d28f2358d99b9e11a5fdb961f3" translate="yes" xml:space="preserve">
          <source>ANSITerm.create()</source>
          <target state="translated">ANSITerm.create()</target>
        </trans-unit>
        <trans-unit id="b3e47a902ab9c3cf8804f4b0803a671ff49a7039" translate="yes" xml:space="preserve">
          <source>ANSITerm.dispose()</source>
          <target state="translated">ANSITerm.dispose()</target>
        </trans-unit>
        <trans-unit id="6651b864c24d3605c9545fdacc52d0d4a434273a" translate="yes" xml:space="preserve">
          <source>ANSITerm.prompt()</source>
          <target state="translated">ANSITerm.prompt()</target>
        </trans-unit>
        <trans-unit id="7bddf2857bcf7ca079d7084799e36af6beda9aba" translate="yes" xml:space="preserve">
          <source>ANSITerm.size()</source>
          <target state="translated">ANSITerm.size()</target>
        </trans-unit>
        <trans-unit id="d3a346da7300922c9faf4aaa2540bbc3a189ec50" translate="yes" xml:space="preserve">
          <source>API Philosophy</source>
          <target state="translated">API 철학</target>
        </trans-unit>
        <trans-unit id="278e1ccaf937389c81843e9708738640b4a782c4" translate="yes" xml:space="preserve">
          <source>A^</source>
          <target state="translated">A^</target>
        </trans-unit>
        <trans-unit id="0bccda649270ce4d3609de239f26f166fca1da66" translate="yes" xml:space="preserve">
          <source>A^ ?</source>
          <target state="translated">A ^?</target>
        </trans-unit>
        <trans-unit id="4e1b22db41d88abb08722b86e3c2595ec4d19040" translate="yes" xml:space="preserve">
          <source>Absolute filesystem path.</source>
          <target state="translated">절대 파일 시스템 경로.</target>
        </trans-unit>
        <trans-unit id="a28ba48dd0c6e5bbf382c6d28e869244a1542b98" translate="yes" xml:space="preserve">
          <source>Accept an iterable collection of String or Array[U8] val.</source>
          <target state="translated">반복 가능한 String 또는 Array [U8] val 콜렉션을 승인하십시오.</target>
        </trans-unit>
        <trans-unit id="5de7e5396934da529ad12f60edf75622e2859695" translate="yes" xml:space="preserve">
          <source>Accept connections as long as we have spawned fewer than our limit.</source>
          <target state="translated">한계보다 적게 생성 된 연결을 수락하십시오.</target>
        </trans-unit>
        <trans-unit id="bd7bc08259267f2bfd60a50cbcafc3a4a4b54635" translate="yes" xml:space="preserve">
          <source>Accessing elements can be done via the &lt;code&gt;apply(i: USize): this-&amp;gt;A ?&lt;/code&gt; method. The provided index might be out of bounds so &lt;code&gt;apply&lt;/code&gt; is partial and has to be called within a try-catch block or inside another partial method.</source>
          <target state="translated">&lt;code&gt;apply(i: USize): this-&amp;gt;A ?&lt;/code&gt; 를 통해 요소에 액세스 할 수 있습니다 . 방법. 제공된 인덱스가 범위를 벗어날 수 있으므로 &lt;code&gt;apply&lt;/code&gt; 는 부분적이며 try-catch 블록 또는 다른 부분 메서드 내에서 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="83d661e55e293b1c41da97828f64e2aee060e77a" translate="yes" xml:space="preserve">
          <source>Accessing elements can be done via the &lt;code&gt;apply(i: USize): this-&amp;gt;A ?&lt;/code&gt; method. The provided index might be out of bounds so &lt;code&gt;apply&lt;/code&gt; is partial and has to be called within a try-catch block or inside another partial method:</source>
          <target state="translated">요소에 액세스하려면 &lt;code&gt;apply(i: USize): this-&amp;gt;A ?&lt;/code&gt; 방법. 제공된 인덱스가 범위를 벗어날 수 있으므로 &lt;code&gt;apply&lt;/code&gt; 는 부분적이며 try-catch 블록 또는 다른 부분 메서드 내에서 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="1b2ad4d14799fabc40ae382b69b153685bd9f14e" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;y&lt;/code&gt; to this integer and return the result and a flag indicating overflow.</source>
          <target state="translated">추가 &lt;code&gt;y&lt;/code&gt; 이 정수로 그 결과 및 플래그 나타내는 오버 플로우를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="160b92087474d1430076f3a64f7a3eb3a996601f" translate="yes" xml:space="preserve">
          <source>Add K, V pairs from the iterator to the map.</source>
          <target state="translated">반복자에서 맵에 K, V 쌍을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8327c8f6af9d76a52750e242e49b22362a045642" translate="yes" xml:space="preserve">
          <source>Add a U128 to the end of the array. This is only allowed for an array of U8s.</source>
          <target state="translated">배열 끝에 U128을 추가하십시오. 이것은 U8 배열에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="0fdd3384e734eb55c1c3419befc81e5161dbfd6e" translate="yes" xml:space="preserve">
          <source>Add a U16 to the end of the array. This is only allowed for an array of U8s.</source>
          <target state="translated">배열의 끝에 U16을 추가하십시오. 이것은 U8 배열에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="eb7226379a710d2d4c922e3b8dba1587f34800c5" translate="yes" xml:space="preserve">
          <source>Add a U32 to the end of the array. This is only allowed for an array of U8s.</source>
          <target state="translated">배열의 끝에 U32를 추가하십시오. 이것은 U8 배열에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="ae0269c04e0f7981516b7e6dc196f27d04d8683e" translate="yes" xml:space="preserve">
          <source>Add a U64 to the end of the array. This is only allowed for an array of U8s.</source>
          <target state="translated">배열 끝에 U64를 추가하십시오. 이것은 U8 배열에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="22986f11969e518094e847ab291cccdf6037d693" translate="yes" xml:space="preserve">
          <source>Add a U8 to the end of the array. This is only allowed for an array of U8s.</source>
          <target state="translated">배열 끝에 U8을 추가하십시오. 이것은 U8 배열에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac1d816b0f4b677807449e6e6cb2e95b6e1220d0" translate="yes" xml:space="preserve">
          <source>Add a byte to the end of the string.</source>
          <target state="translated">문자열 끝에 바이트를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e704712743c4fa442824c6c31689e76086527d05" translate="yes" xml:space="preserve">
          <source>Add a chunk of data.</source>
          <target state="translated">데이터 청크를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="74504c093970afdd29442f1b604b0030b80ad74d" translate="yes" xml:space="preserve">
          <source>Add a line to the history, trimming an earlier line if necessary.</source>
          <target state="translated">히스토리에 라인을 추가하고 필요한 경우 이전 라인을 트리밍하십시오.</target>
        </trans-unit>
        <trans-unit id="9f2577703fe4e404e6ad4cf8e1a1119c2a59aa90" translate="yes" xml:space="preserve">
          <source>Add a multicast group. This can be limited to packets arriving on a specific interface.</source>
          <target state="translated">멀티 캐스트 그룹을 추가하십시오. 이것은 특정 인터페이스에 도착하는 패킷으로 제한 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ea70b103fef28834944657b36a49d21a28a1eac" translate="yes" xml:space="preserve">
          <source>Add a value to the set.</source>
          <target state="translated">세트에 값을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="904548b96a2cd872f09dfe4aea92148644685e3f" translate="yes" xml:space="preserve">
          <source>Add all the tests in this suite to the given test object. Typically the implementation of this function will be of the form:</source>
          <target state="translated">이 스위트의 모든 테스트를 주어진 테스트 오브젝트에 추가하십시오. 일반적으로이 기능의 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="95a62f893fe86d5dbf9271f255efccf10fe2de11" translate="yes" xml:space="preserve">
          <source>Add an actor to be disposed of.</source>
          <target state="translated">폐기 할 액터를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ac364477a4a39e53323c08ead3e9c823e2f2e9e2" translate="yes" xml:space="preserve">
          <source>Add an element to the beginning of the array.</source>
          <target state="translated">배열의 시작 부분에 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e8c6ec429014d3df50ad1739eca07b177e1f5cdc" translate="yes" xml:space="preserve">
          <source>Add an element to the end of the array.</source>
          <target state="translated">배열 끝에 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8b84277246376acacff87417c419e1328d3eb4f6" translate="yes" xml:space="preserve">
          <source>Add an element to the ring. If the ring is full, this will drop the oldest element in the ring. Returns true if an element was dropped.</source>
          <target state="translated">링에 요소를 추가하십시오. 링이 가득 찬 경우 링에서 가장 오래된 요소가 삭제됩니다. 요소가 삭제 된 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2974d18fa64e458611e59de8fbd6de004d62664f" translate="yes" xml:space="preserve">
          <source>Add everything in that to the set.</source>
          <target state="translated">그 세트의 모든 것을 세트에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="add8c03cb7b5fdabe6b579a901f45be925e867d6" translate="yes" xml:space="preserve">
          <source>Add indentation to the buf to the appropriate indent_level</source>
          <target state="translated">buf에 들여 쓰기를 적절한 indent_level에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="18819da7ad6db9c2c2f6d124e22766aac0a9550c" translate="yes" xml:space="preserve">
          <source>Add len elements to the end of the list, starting from the given offset.</source>
          <target state="translated">주어진 오프셋에서 시작하여 목록 끝에 len 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="859e6647e4da15845217fa7ab89e48b550f547ae" translate="yes" xml:space="preserve">
          <source>Add len iterated bytes to the end of the string, starting from the given offset.</source>
          <target state="translated">주어진 오프셋에서 시작하여 문자열 끝에 len 반복 바이트를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3e332b9c10f109d92f0c7a766727de81298f883c" translate="yes" xml:space="preserve">
          <source>Add len iterated elements to the end of the array, starting from the given offset.</source>
          <target state="translated">주어진 오프셋에서 시작하여 배열의 끝에 len 반복 된 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a495ccb0b40df9f338770cbf432e80495d05f724" translate="yes" xml:space="preserve">
          <source>Add len iterated elements to the end of the list, starting from the given offset.</source>
          <target state="translated">주어진 오프셋에서 시작하여 목록 끝에 len 반복 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="1b23af66d901858a6832e2718452a32b028ea84b" translate="yes" xml:space="preserve">
          <source>Add len iterated elements, starting from the given offset.</source>
          <target state="translated">주어진 오프셋부터 시작하여 반복되는 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="60639d41782aea789ac8d0799bddf245dd10941e" translate="yes" xml:space="preserve">
          <source>Add the K, V pairs from the given iterator to the map.</source>
          <target state="translated">주어진 반복자에서 K, V 쌍을 맵에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5e13ec8e7532b5359cd1f896ae3aaf1a5855b593" translate="yes" xml:space="preserve">
          <source>Add two promises into one promise that returns the result of both when they are fulfilled. If either of the promises is rejected then the new promise is also rejected.</source>
          <target state="translated">하나의 약속에 두 개의 약속을 추가하여 약속이 이행 될 때의 결과를 반환합니다. 약속 중 하나가 거부되면 새 약속도 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="23bc3fd0ea575b46dea1ae3ffe363d48a83b6c2c" translate="yes" xml:space="preserve">
          <source>Add y to this number.</source>
          <target state="translated">이 번호에 y를 더하십시오.</target>
        </trans-unit>
        <trans-unit id="d58b3662815299c346b313f4c264e08e3953ede6" translate="yes" xml:space="preserve">
          <source>Add, or change, a lookup mapping.</source>
          <target state="translated">조회 매핑을 추가하거나 변경합니다.</target>
        </trans-unit>
        <trans-unit id="7c127d1344c4968e69b3e1a9f972e9b460eeb0e8" translate="yes" xml:space="preserve">
          <source>Adding and removing elements to and from the end of the Array can be done via &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; methods. You could treat the array as a FIFO queue using those methods.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 및 &lt;code&gt;pop&lt;/code&gt; 메소드 를 통해 어레이의 끝에 요소를 추가하거나 제거 할 수 있습니다 . 이러한 방법을 사용하여 어레이를 FIFO 대기열로 취급 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85a54dc3526a6f9f6822f47b88405c3404eb2cba" translate="yes" xml:space="preserve">
          <source>Adding and removing elements to and from the end of the Array can be done via &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; methods. You could treat the array as a LIFO stack using those methods:</source>
          <target state="translated">배열의 끝에서 요소를 추가하고 제거하는 것은 &lt;code&gt;push&lt;/code&gt; 및 &lt;code&gt;pop&lt;/code&gt; 메서드 를 통해 수행 할 수 있습니다 . 다음 방법을 사용하여 어레이를 LIFO 스택으로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="b99060fa452b172ff23c52b1c443406720e79fac" translate="yes" xml:space="preserve">
          <source>Additional functions are provided to operate on a ListNode as part of a Linked List. These provide for prepending, appending, removal, and safe traversal in both directions. The Ponylang &lt;a href=&quot;collections-list&quot;&gt;collections.List&lt;/a&gt; class is the correct way to create these. &lt;em&gt;Do not attempt to create a Linked List using only ListNodes.&lt;/em&gt;</source>
          <target state="translated">Linked List의 일부로 ListNode에서 작동하기위한 추가 기능이 제공됩니다. 이것들은 양방향으로 선행, 추가, 제거 및 안전한 순회를 제공합니다. Ponylang &lt;a href=&quot;collections-list&quot;&gt;collections.List&lt;/a&gt; 클래스는이를 작성하는 올바른 방법입니다. &lt;em&gt;ListNode 만 사용하여 링크 된 목록을 작성하지 마십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="090654d9249888f1691705d707afb347cff05b28" translate="yes" xml:space="preserve">
          <source>Additionally on (at least some) 32 bit systems, the runtime function for checked 64 bit integer addition __mulodi4 is not available. So we shouldn't use: &lt;code&gt;@&quot;llvm.smul.with.overflow.i64&quot;[(I64, Bool)](this, y)&lt;/code&gt;</source>
          <target state="translated">또한 32 비트 시스템 (적어도 일부)에서는 검사 된 64 비트 정수 추가 __mulodi4에 대한 런타임 기능을 사용할 수 없습니다. &lt;code&gt;@&quot;llvm.smul.with.overflow.i64&quot;[(I64, Bool)](this, y)&lt;/code&gt; 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="735eca102fa555757d4c7e12be1064e272cb2cff" translate="yes" xml:space="preserve">
          <source>Adds a byte to the beginning of the string.</source>
          <target state="translated">문자열의 시작 부분에 바이트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f8e33afc2276d0d6abfac033efd36c106f7456b4" translate="yes" xml:space="preserve">
          <source>Adds a new named option to the parser configuration.</source>
          <target state="translated">파서 구성에 새로운 명명 된 옵션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6768ccd67ee3cc12ef684f69e8ea27d470988185" translate="yes" xml:space="preserve">
          <source>Adds a node to the head of the list.</source>
          <target state="translated">목록의 헤드에 노드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="661212a8145dee1de53050e7a8e74079a8fb475e" translate="yes" xml:space="preserve">
          <source>Adds a node to the tail of the list.</source>
          <target state="translated">목록의 끝에 노드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="da3bca275ea8d2f3730d3497c8ffef4bad3390e4" translate="yes" xml:space="preserve">
          <source>Adds a standard help option and, optionally command, to a root command.</source>
          <target state="translated">표준 도움말 옵션 및 선택적으로 명령을 루트 명령에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0eeead15234f9fe810c69b4c63a9c34ba67e3714" translate="yes" xml:space="preserve">
          <source>Adds a value to the head of the list.</source>
          <target state="translated">리스트의 헤드에 값을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="43c79ce354ba37206ee9d3cf019058b1433cdf6f" translate="yes" xml:space="preserve">
          <source>Adds a value to the tail of the list.</source>
          <target state="translated">목록의 꼬리에 값을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="13335fd7160c46cd216d4e72781bbc56b354bf2d" translate="yes" xml:space="preserve">
          <source>Adds an additional child command to this parent command.</source>
          <target state="translated">이 부모 명령에 추가 자식 명령을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2cb640760da90f9beaa063de507f31a25da524be" translate="yes" xml:space="preserve">
          <source>Adds an element to the beginning of the sequence.</source>
          <target state="translated">시퀀스의 시작 부분에 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="bd6d9e3b0212f690716640068a9be6bbe5953721" translate="yes" xml:space="preserve">
          <source>Adds an element to the end of the sequence.</source>
          <target state="translated">시퀀스의 끝에 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f777ac184351ab5c820cbcb8f46aa8da9931933e" translate="yes" xml:space="preserve">
          <source>Adjacent delimiters result in a zero length entry in the array. For example, &lt;code&gt;&quot;1,,2&quot;.split(&quot;,&quot;) =&amp;gt; [&quot;1&quot;, &quot;&quot;, &quot;2&quot;]&lt;/code&gt;.</source>
          <target state="translated">인접한 분리 문자는 배열에서 길이가 0 인 항목입니다. 예를 들어 &lt;code&gt;&quot;1,,2&quot;.split(&quot;,&quot;) =&amp;gt; [&quot;1&quot;, &quot;&quot;, &quot;2&quot;]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c27cdf6c1d32efcbb3d27f9d40addce0062ab956" translate="yes" xml:space="preserve">
          <source>Adjacent delimiters result in a zero length entry in the array. For example, &lt;code&gt;&quot;1CutCut2&quot;.split_by(&quot;Cut&quot;) =&amp;gt; [&quot;1&quot;, &quot;&quot;, &quot;2&quot;]&lt;/code&gt;.</source>
          <target state="translated">인접한 구분 기호는 배열에서 길이가 0 인 항목을 생성합니다. 예 : &lt;code&gt;&quot;1CutCut2&quot;.split_by(&quot;Cut&quot;) =&amp;gt; [&quot;1&quot;, &quot;&quot;, &quot;2&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cd2a77be1186c2def601acff4e7801a0766293b" translate="yes" xml:space="preserve">
          <source>After GC, an actor will next be GC'd at a heap memory usage N times its current value. This is a floating point value. Defaults to 2.0.</source>
          <target state="translated">GC 후에 액터는 힙 메모리 사용량의 N 배 현재 값으로 GC됩니다. 이것은 부동 소수점 값입니다. 기본값은 2.0입니다.</target>
        </trans-unit>
        <trans-unit id="9cbf4048913977367af967c5f26d0ea82aef96fc" translate="yes" xml:space="preserve">
          <source>After a successful reading operation &lt;code&gt;_buffer_cursor&lt;/code&gt; is updated.</source>
          <target state="translated">성공적인 읽기 작업 후 &lt;code&gt;_buffer_cursor&lt;/code&gt; 가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="742d5ff2b82878b6fb717375e951e643a07c4bf1" translate="yes" xml:space="preserve">
          <source>Aggregate test classes may themselves be aggregated. Every test list class may contain any combination of its own tests and aggregated lists.</source>
          <target state="translated">집계 테스트 클래스 자체가 집계 될 수 있습니다. 모든 테스트 목록 클래스에는 자체 테스트와 집계 된 목록의 조합이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9ba037c0e4c06d192c83e08070b15787f07daaa" translate="yes" xml:space="preserve">
          <source>Aggregation</source>
          <target state="translated">Aggregation</target>
        </trans-unit>
        <trans-unit id="c83b0ec2d98a2ca38077be2f03102aedeb0ab261" translate="yes" xml:space="preserve">
          <source>Align</source>
          <target state="translated">Align</target>
        </trans-unit>
        <trans-unit id="841de04deb468a8929dfb27c03a93d6a1c8f2d74" translate="yes" xml:space="preserve">
          <source>AlignCenter</source>
          <target state="translated">AlignCenter</target>
        </trans-unit>
        <trans-unit id="b9fc51e0dac8a470e4c47055621514f89888e5d5" translate="yes" xml:space="preserve">
          <source>AlignCenter.create()</source>
          <target state="translated">AlignCenter.create()</target>
        </trans-unit>
        <trans-unit id="cd13cf36309ad6bf71b92dc44b828209f40a9265" translate="yes" xml:space="preserve">
          <source>AlignCenter.eq()</source>
          <target state="translated">AlignCenter.eq()</target>
        </trans-unit>
        <trans-unit id="6bbe8749c2c76c04320bab294cdbbbb77226c253" translate="yes" xml:space="preserve">
          <source>AlignCenter.ne()</source>
          <target state="translated">AlignCenter.ne()</target>
        </trans-unit>
        <trans-unit id="94aa0f37574161ba1dbceadad9e47a91d18671d3" translate="yes" xml:space="preserve">
          <source>AlignLeft</source>
          <target state="translated">AlignLeft</target>
        </trans-unit>
        <trans-unit id="7968cca6c03a93221047f746eb4302f68fb09d1a" translate="yes" xml:space="preserve">
          <source>AlignLeft.create()</source>
          <target state="translated">AlignLeft.create()</target>
        </trans-unit>
        <trans-unit id="7834f0d105fb4762d5da69e0bd98b85c3573c360" translate="yes" xml:space="preserve">
          <source>AlignLeft.eq()</source>
          <target state="translated">AlignLeft.eq()</target>
        </trans-unit>
        <trans-unit id="106b762b7f6698f36274a4fd226ac802d3e17637" translate="yes" xml:space="preserve">
          <source>AlignLeft.ne()</source>
          <target state="translated">AlignLeft.ne()</target>
        </trans-unit>
        <trans-unit id="c25dacaba55a4c056439abf3b7e8f2ca1871b0de" translate="yes" xml:space="preserve">
          <source>AlignRight</source>
          <target state="translated">AlignRight</target>
        </trans-unit>
        <trans-unit id="eda5a1f0cfe0901cef9db7ab5363ca9fc5a8f204" translate="yes" xml:space="preserve">
          <source>AlignRight.create()</source>
          <target state="translated">AlignRight.create()</target>
        </trans-unit>
        <trans-unit id="85336a4f8639fca5e1b387a693620328df38e902" translate="yes" xml:space="preserve">
          <source>AlignRight.eq()</source>
          <target state="translated">AlignRight.eq()</target>
        </trans-unit>
        <trans-unit id="db38e8468eef6cb2fc0a0e14443ae862a2815881" translate="yes" xml:space="preserve">
          <source>AlignRight.ne()</source>
          <target state="translated">AlignRight.ne()</target>
        </trans-unit>
        <trans-unit id="99863562b18a4607cbbd8914a8b0f184ad01b711" translate="yes" xml:space="preserve">
          <source>All JSON data types.</source>
          <target state="translated">모든 JSON 데이터 유형</target>
        </trans-unit>
        <trans-unit id="df3fefb72187e398d1c53f341c9cf158e99aa310" translate="yes" xml:space="preserve">
          <source>All assert functions take an optional message argument. This is simply a string that is printed as part of the error message when the condition fails. It is intended to aid identifying what failed.</source>
          <target state="translated">모든 어설 션 함수는 선택적 메시지 인수를 사용합니다. 이것은 조건이 실패 할 때 오류 메시지의 일부로 인쇄되는 문자열입니다. 무엇이 실패했는지 식별하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="7da2b351363cd05d0cda760467a983bf3b320f58" translate="yes" xml:space="preserve">
          <source>All our tests have been handed to apply(), setup for finishing</source>
          <target state="translated">우리의 모든 테스트는 마무리를위한 setup (), setup으로 진행되었습니다.</target>
        </trans-unit>
        <trans-unit id="b8a7fb026b993f6c21a06361dbc63514b55667f0" translate="yes" xml:space="preserve">
          <source>Allows filtering of elements based on a stateful adapter, similar to &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 와 유사한 상태 저장 어댑터를 기반으로 요소를 필터링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86d2955e9fccc6c07cfa5a81ade2a93e2534ab5a" translate="yes" xml:space="preserve">
          <source>Allows stateful modification to the stream of elements from an iterator, similar to &lt;code&gt;filter_map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filter_map&lt;/code&gt; 과 유사한 반복자에서 요소 스트림의 상태 저장 수정을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="e4b81551986a7ab2792c0f1f9a9f1f9fff8b818f" translate="yes" xml:space="preserve">
          <source>Allows stateful transformaion of each element from the iterator, similar to &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 과 비슷한 반복자에서 각 요소의 상태 저장 변환을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="bf2f09676f6e6496aafb82103ff3dc1dc643c869" translate="yes" xml:space="preserve">
          <source>Allows stateful transformation of each element from the iterator, similar to &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; 과 유사하게 반복기에서 각 요소의 상태 저장 변환을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="1bd278d31d2d0e48ad58fe08a7e1121f99e4deb9" translate="yes" xml:space="preserve">
          <source>Also see https://bugs.llvm.org/show_bug.cgi?id=14469</source>
          <target state="translated">https://bugs.llvm.org/show_bug.cgi?id=14469 참조</target>
        </trans-unit>
        <trans-unit id="1d61adedfe5853c45af2c49d4a1a175a6a9546e4" translate="yes" xml:space="preserve">
          <source>Ambient access to the root capability is denied outside of the builtin package. Inside the builtin package, only Env creates a Root.</source>
          <target state="translated">기본 기능 외부에서 루트 기능에 대한 액세스가 거부되었습니다. 내장 패키지 내에서는 Env 만 루트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b09796e69253a421f0d0489dbb5a63b3ce976e24" translate="yes" xml:space="preserve">
          <source>AmbientAuth</source>
          <target state="translated">AmbientAuth</target>
        </trans-unit>
        <trans-unit id="39fb8d61882bc16456c55f1d82706a8c54833322" translate="yes" xml:space="preserve">
          <source>AmbientAuth._create()</source>
          <target state="translated">AmbientAuth._create()</target>
        </trans-unit>
        <trans-unit id="b4371aa8b72f5ec343c9d58f65e2e1fc6837a0e4" translate="yes" xml:space="preserve">
          <source>AmbientAuth.eq()</source>
          <target state="translated">AmbientAuth.eq()</target>
        </trans-unit>
        <trans-unit id="e62f4c2695e80a57b5891b949ba802d954b3400d" translate="yes" xml:space="preserve">
          <source>AmbientAuth.ne()</source>
          <target state="translated">AmbientAuth.ne()</target>
        </trans-unit>
        <trans-unit id="8b2b0abfa6d6634ed1084b72452ec0dec03aea1a" translate="yes" xml:space="preserve">
          <source>AmbiguousMatch</source>
          <target state="translated">AmbiguousMatch</target>
        </trans-unit>
        <trans-unit id="10b31dbb7aada50607829415d21254af1f4b2c58" translate="yes" xml:space="preserve">
          <source>AmbiguousMatch.create()</source>
          <target state="translated">AmbiguousMatch.create()</target>
        </trans-unit>
        <trans-unit id="646402f73f4d61b6148b80eb5e55d050793c9ebf" translate="yes" xml:space="preserve">
          <source>AmbiguousMatch.eq()</source>
          <target state="translated">AmbiguousMatch.eq()</target>
        </trans-unit>
        <trans-unit id="4f2dd9043725f801a246c9f0ad64684ec0b6621e" translate="yes" xml:space="preserve">
          <source>AmbiguousMatch.ne()</source>
          <target state="translated">AmbiguousMatch.ne()</target>
        </trans-unit>
        <trans-unit id="8fefda8e5d4a5b7e711ef8209910f3cae0802c02" translate="yes" xml:space="preserve">
          <source>Amount of idle time before a scheduler thread suspends itself to minimize resource consumption (max 1000 ms, min 1 ms). Defaults to 1 ms.</source>
          <target state="translated">자원 소비를 최소화하기 위해 스케줄러 스레드가 자체적으로 일시 중단되기 전까지의 유휴 시간입니다 (최대 1000ms, 최소 1ms). 기본값은 1ms입니다.</target>
        </trans-unit>
        <trans-unit id="55808d3c4ba7e357741604347fb56dc8c8a20034" translate="yes" xml:space="preserve">
          <source>An Iterator is considered exhausted, once its &lt;code&gt;has_next()&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;. Thus every call to &lt;code&gt;next()&lt;/code&gt; should be preceeded with a call to &lt;code&gt;has_next()&lt;/code&gt; to check for exhaustiveness.</source>
          <target state="translated">&lt;code&gt;has_next()&lt;/code&gt; 메소드가 &lt;code&gt;false&lt;/code&gt; 를 리턴 하면 반복자가 소진 된 것으로 간주됩니다 . 따라서 &lt;code&gt;next()&lt;/code&gt; 에 대한 모든 호출은 &lt;code&gt;has_next()&lt;/code&gt; 에 대한 호출로 시작 하여 철저한 지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="14522913200dfacc1012866996849a3c0ee8ed06" translate="yes" xml:space="preserve">
          <source>An accepted connection has closed. If we have dropped below the limit, try to accept new connections.</source>
          <target state="translated">허용 된 연결이 닫혔습니다. 한도 아래로 내려간 경우 새 연결을 수락하십시오.</target>
        </trans-unit>
        <trans-unit id="6add663ef714a2ff9afd38dbe4031c1fc4c3a884" translate="yes" xml:space="preserve">
          <source>An empty delimiter results in an array that contains a single element equal to the whole string.</source>
          <target state="translated">빈 분리 문자는 전체 문자열과 동일한 단일 요소를 포함하는 배열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="aaaf95aeb490ab1fea81f8a464f5937a67f73637" translate="yes" xml:space="preserve">
          <source>An empty event.</source>
          <target state="translated">빈 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="031500aa61a12311a78d9d99b9e90d3cd37da8c0" translate="yes" xml:space="preserve">
          <source>An empty string. Enough space for len bytes is reserved.</source>
          <target state="translated">빈 문자열. len 바이트를위한 충분한 공간이 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba446e89ca0e42f8f9f764ff105232181cd83949" translate="yes" xml:space="preserve">
          <source>An environment holds the command line and other values injected into the program by default by the runtime.</source>
          <target state="translated">환경은 기본적으로 런타임에 의해 프로그램에 주입 된 명령 행 및 기타 값을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="6a14da31294dedf80a06ab64bf187474fe979abe" translate="yes" xml:space="preserve">
          <source>An extended key.</source>
          <target state="translated">확장 키</target>
        </trans-unit>
        <trans-unit id="b96c7ec4be7b75d5fbb6a0ea77e6c734b9953ec1" translate="yes" xml:space="preserve">
          <source>An identity function for fulfilling promises.</source>
          <target state="translated">약속 이행을위한 정체성 기능.</target>
        </trans-unit>
        <trans-unit id="2e97621b3dce0aff4f997adcd5de90196d3fc4d4" translate="yes" xml:space="preserve">
          <source>An implementation of this function might look like:</source>
          <target state="translated">이 함수의 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a73c71c52fa289a1762f34b75f4697df1f086488" translate="yes" xml:space="preserve">
          <source>An interface representing an abstract Then. This allows for any Then that accepts an input of type A, regardless of the output type.</source>
          <target state="translated">추상을 나타내는 인터페이스 그러면 출력 유형에 관계없이 A 유형의 입력을 허용하는 모든 것이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="db02d69918ba77270438b6fc6b16d9ba7644b859" translate="yes" xml:space="preserve">
          <source>An interface used to asynchronously dispose of an actor.</source>
          <target state="translated">액터를 비동기 적으로 처리하는 데 사용되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="ce3d322f0230e1fad5e1550b3a4c08c903fa8e98" translate="yes" xml:space="preserve">
          <source>An iterator over the keys and values in a map.</source>
          <target state="translated">맵의 키와 값에 대한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="d46e8af2e27f4eda170e9fad58d2e7f00110436c" translate="yes" xml:space="preserve">
          <source>An iterator over the keys in a map.</source>
          <target state="translated">맵의 키에 대한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="8c3cade8170dba187ef7dbfdb0a4d2f4a2a09765" translate="yes" xml:space="preserve">
          <source>An iterator over the values in a map.</source>
          <target state="translated">맵의 값에 대한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="61e0953c5a3c8c167ca35b1d1b2dcd5174971527" translate="yes" xml:space="preserve">
          <source>An iterator over the values in a set.</source>
          <target state="translated">세트의 값에 대한 반복자입니다.</target>
        </trans-unit>
        <trans-unit id="9c7821810ddc11442303585ed06f5eddb454561d" translate="yes" xml:space="preserve">
          <source>An iterator which yields the current iteration count as well as the next value from the iterator.</source>
          <target state="translated">반복자의 다음 값뿐만 아니라 현재 반복 횟수를 산출하는 반복자.</target>
        </trans-unit>
        <trans-unit id="cb7c28c38332d58f4bd7e01b6600ab583dc33493" translate="yes" xml:space="preserve">
          <source>An optional type for anything that isn't a struct should be encoded as a union type, for example (A | None).</source>
          <target state="translated">구조체가 아닌 항목에 대한 선택적 형식은 예를 들어 (A | None)과 같은 공용체 형식으로 인코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="24663a1d51f47f85f9f10ac3d989f4883c529087" translate="yes" xml:space="preserve">
          <source>Any actor that needs to be able to tell the runtime to &quot;send me messages slower&quot; due to external conditions can do so via this package. Additionally, actors that maintain their own internal queues of any sort, say for buffering, are also prime candidates for using this package. If an actor's internal queue grows too large, it can call &lt;code&gt;Backpressure.apply&lt;/code&gt; to let the runtime know it is under pressure.</source>
          <target state="translated">외부 조건으로 인해 &quot;메시지를 느리게 보내도록&quot;런타임에 알려 주어야하는 모든 액터는이 패키지를 통해 그렇게 할 수 있습니다. 또한 버퍼링과 같은 자체 내부 큐를 유지 관리하는 액터도이 패키지를 사용하는 주요 후보입니다. 액터의 내부 큐가 너무 커지면 &lt;code&gt;Backpressure.apply&lt;/code&gt; 를 호출 하여 런타임에 압력을 받고 있음을 알릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74d1b4d3f4ffe708347e8f1406cc2af17ca04673" translate="yes" xml:space="preserve">
          <source>Any keys not in a section will be placed in the section &quot;&quot;</source>
          <target state="translated">섹션에없는 키는 &quot;&quot;섹션에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="ac042d952e2b997235e27d4ccd8686a81bc8045e" translate="yes" xml:space="preserve">
          <source>Any kind of fixture or environment necessary for executing a &lt;a href=&quot;ponytest-unittest&quot;&gt;UnitTest&lt;/a&gt; can be set up either in the tests constructor or in a function called &lt;a href=&quot;ponytest-unittest#set_up&quot;&gt;set_up()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ponytest-unittest&quot;&gt;UnitTest&lt;/a&gt; 실행에 필요한 모든 종류의 조명기 또는 환경 은 테스트 생성자 또는 &lt;a href=&quot;ponytest-unittest#set_up&quot;&gt;set_up ()&lt;/a&gt; 이라는 함수에서 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc0c8809c00f1aae5a28f573ac7036270e9b1a63" translate="yes" xml:space="preserve">
          <source>Any number of promises can be chained after this one.</source>
          <target state="translated">이 약속 후에는 많은 약속을 묶을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9493a0a2aaf2c5b9dcdc9fc274b6a2a64629a1cf" translate="yes" xml:space="preserve">
          <source>Any predicate is true of every member of the empty list.</source>
          <target state="translated">모든 술어는 빈 목록의 모든 구성원에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="7b2803e21f383918305af219cef28d06caf1d8bb" translate="yes" xml:space="preserve">
          <source>Any types needed by others in builtin.</source>
          <target state="translated">내장 된 다른 사람이 필요로하는 모든 유형</target>
        </trans-unit>
        <trans-unit id="feb11a24599170bc4fc35efc9e70985b7d9e2c9e" translate="yes" xml:space="preserve">
          <source>Anything with a hash method is hashable.</source>
          <target state="translated">해시 방법이있는 것은 해시 가능합니다.</target>
        </trans-unit>
        <trans-unit id="628dd8992e5d34cc5ae253411365a1631be38b96" translate="yes" xml:space="preserve">
          <source>Append a node to this one. If &lt;code&gt;that&lt;/code&gt; is already in a list, it is removed before it is appended. Returns true if &lt;code&gt;that&lt;/code&gt; was removed from another list.</source>
          <target state="translated">이 노드를 추가하십시오. &lt;code&gt;that&lt;/code&gt; 목록에 이미 있으면 추가되기 전에 제거됩니다. 경우에 true를 돌려줍니다 &lt;code&gt;that&lt;/code&gt; 다른 목록에서 제거되었다.</target>
        </trans-unit>
        <trans-unit id="dad977f0d94cb471b5464a77ca54696377b36b8c" translate="yes" xml:space="preserve">
          <source>Append len elements from a sequence, starting from the given offset.</source>
          <target state="translated">주어진 오프셋에서 시작하여 시퀀스에서 len 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3a9d2cc7e4362ce116842e293e09efb9c2091da5" translate="yes" xml:space="preserve">
          <source>Append the elements from a sequence, starting from the given offset.</source>
          <target state="translated">주어진 오프셋에서 시작하여 시퀀스에서 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="16c8f94670cde47b84c3000c9aedf2108a0c2c1d" translate="yes" xml:space="preserve">
          <source>Append the string representation of this array to the provided String.</source>
          <target state="translated">이 배열의 캐릭터 라인 표현을 제공된 String에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="087b175b4660cf5334e923d8c899a956d60e39f3" translate="yes" xml:space="preserve">
          <source>Append the string representation of this object to the provided String.</source>
          <target state="translated">이 객체의 캐릭터 라인 표현을 제공된 String에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b0ff4730916e293c610eed690ab944673dd9b321" translate="yes" xml:space="preserve">
          <source>Applies the supplied function to every element of the list in order.</source>
          <target state="translated">제공된 기능을 목록의 모든 요소에 순서대로 적용합니다.</target>
        </trans-unit>
        <trans-unit id="b7dcda68d6c1c537e400d01354f5cbfbe7d3faa0" translate="yes" xml:space="preserve">
          <source>Apply a function to every element, producing an accumulated value.</source>
          <target state="translated">모든 요소에 함수를 적용하여 누적 값을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="92d08e76c8eab89b494faf3d6ac37c94274b8b25" translate="yes" xml:space="preserve">
          <source>Apply slop bits to the expiration time and interval. This reduces the precision by the given number of bits, effectively quantizing time.</source>
          <target state="translated">만기 시간 및 간격에 슬로프 비트를 적용하십시오. 이것은 주어진 비트 수만큼 정밀도를 줄이고 시간을 효과적으로 양자화합니다.</target>
        </trans-unit>
        <trans-unit id="e9ba58b62fda3b64d5151f4f9ccb29b967426125" translate="yes" xml:space="preserve">
          <source>ApplyReleaseBackpressureAuth</source>
          <target state="translated">ApplyReleaseBackpressureAuth</target>
        </trans-unit>
        <trans-unit id="241d197d976d7f98822fe3425b8a0fff45809c30" translate="yes" xml:space="preserve">
          <source>ApplyReleaseBackpressureAuth.create()</source>
          <target state="translated">ApplyReleaseBackpressureAuth.create()</target>
        </trans-unit>
        <trans-unit id="ede66fdcb702d772e82ef3412d6f9d92a7d795bf" translate="yes" xml:space="preserve">
          <source>ApplyReleaseBackpressureAuth.eq()</source>
          <target state="translated">ApplyReleaseBackpressureAuth.eq()</target>
        </trans-unit>
        <trans-unit id="97f8e9a7ea604a6db11b46e4c648600a486113c8" translate="yes" xml:space="preserve">
          <source>ApplyReleaseBackpressureAuth.ne()</source>
          <target state="translated">ApplyReleaseBackpressureAuth.ne()</target>
        </trans-unit>
        <trans-unit id="13a0b5450627be6f7f94c65a7332fda721cc9823" translate="yes" xml:space="preserve">
          <source>Applying a function to every member of the empty list is a no-op.</source>
          <target state="translated">빈 목록의 모든 멤버에 함수를 적용하는 것은 아무 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d4bdd1327a7c3c6dee9bc607e387c24349710510" translate="yes" xml:space="preserve">
          <source>Arbitrary strings can be used for these names, but for large projects it is strongly recommended to use a hierarchical naming scheme to make it easier to select groups of tests.</source>
          <target state="translated">이러한 이름에는 임의의 문자열을 사용할 수 있지만 대규모 프로젝트의 경우 테스트 그룹을보다 쉽게 ​​선택할 수 있도록 계층 적 이름 지정 체계를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="27cb7fb1af71b4cc6c9c97447cc986c742906de1" translate="yes" xml:space="preserve">
          <source>Arg</source>
          <target state="translated">Arg</target>
        </trans-unit>
        <trans-unit id="036e1dd1caf6feb56168c144aaf97693c5eadf0f" translate="yes" xml:space="preserve">
          <source>Arg contains a spec and an effective value for a given arg.</source>
          <target state="translated">Arg는 주어진 arg에 대한 스펙과 유효 값을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="9ca646f1787a6256e7ac650c81a731a0836fc540" translate="yes" xml:space="preserve">
          <source>Arg._append()</source>
          <target state="translated">Arg._append()</target>
        </trans-unit>
        <trans-unit id="cec34a23d5d4dc172ea4a3822485dfe33c3b0c94" translate="yes" xml:space="preserve">
          <source>Arg.bool()</source>
          <target state="translated">Arg.bool()</target>
        </trans-unit>
        <trans-unit id="f64927f001cc6488497e71bccb58fbe4023bbbc9" translate="yes" xml:space="preserve">
          <source>Arg.create()</source>
          <target state="translated">Arg.create()</target>
        </trans-unit>
        <trans-unit id="8a8087a526e8aded7faa84e66b91e8b13b4599e8" translate="yes" xml:space="preserve">
          <source>Arg.deb_string()</source>
          <target state="translated">Arg.deb_string()</target>
        </trans-unit>
        <trans-unit id="4a03990485e491fde04ccebaf0ad5c839178bdb1" translate="yes" xml:space="preserve">
          <source>Arg.f64()</source>
          <target state="translated">Arg.f64()</target>
        </trans-unit>
        <trans-unit id="33ee9f5cf06f41d1a50a13c184e26c71c1d5a2d9" translate="yes" xml:space="preserve">
          <source>Arg.i64()</source>
          <target state="translated">Arg.i64()</target>
        </trans-unit>
        <trans-unit id="7effeca69bd130d22bf79caef05701f9ad02ce5e" translate="yes" xml:space="preserve">
          <source>Arg.spec()</source>
          <target state="translated">Arg.spec()</target>
        </trans-unit>
        <trans-unit id="b60cc049512b053a1c7803668d7769b76f9805c5" translate="yes" xml:space="preserve">
          <source>Arg.string()</source>
          <target state="translated">Arg.string()</target>
        </trans-unit>
        <trans-unit id="66fe80cd47eddc113169642cf76b1c5527ed5cc3" translate="yes" xml:space="preserve">
          <source>Arg.string_seq()</source>
          <target state="translated">Arg.string_seq()</target>
        </trans-unit>
        <trans-unit id="ef02702f651898e9863ff63190dcda09fd5ca94f" translate="yes" xml:space="preserve">
          <source>Arg.u64()</source>
          <target state="translated">Arg.u64()</target>
        </trans-unit>
        <trans-unit id="91609662376faefb3a2e8424136aaf80443deb11" translate="yes" xml:space="preserve">
          <source>ArgSpec</source>
          <target state="translated">ArgSpec</target>
        </trans-unit>
        <trans-unit id="58030331727e712e0df7e41b56dd34f3612678b5" translate="yes" xml:space="preserve">
          <source>ArgSpec describes the specification of a positional Arg(ument). They have a name, descr(iption), a typ(e), and a default value when they are not required.</source>
          <target state="translated">ArgSpec은 위치 Arg (ument)의 사양을 설명합니다. 이름, 설명 (iption), typ (e) 및 필요하지 않은 경우 기본값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad9522d88083d324060f23e15de1326724c3e33b" translate="yes" xml:space="preserve">
          <source>ArgSpec._default_p()</source>
          <target state="translated">ArgSpec._default_p()</target>
        </trans-unit>
        <trans-unit id="1487b43c67558c9e52bc94c47e6951d8255b9c6c" translate="yes" xml:space="preserve">
          <source>ArgSpec._init()</source>
          <target state="translated">ArgSpec._init()</target>
        </trans-unit>
        <trans-unit id="17bd5c0529dd295ab95b0cb583300c050a3cdf8c" translate="yes" xml:space="preserve">
          <source>ArgSpec._typ_p()</source>
          <target state="translated">ArgSpec._typ_p()</target>
        </trans-unit>
        <trans-unit id="b3e7e2574bfdd2e8295ff736247bfb2e6eb85182" translate="yes" xml:space="preserve">
          <source>ArgSpec.bool()</source>
          <target state="translated">ArgSpec.bool()</target>
        </trans-unit>
        <trans-unit id="d42ce53c3330343435e9b6f55326a861b3535e01" translate="yes" xml:space="preserve">
          <source>ArgSpec.deb_string()</source>
          <target state="translated">ArgSpec.deb_string()</target>
        </trans-unit>
        <trans-unit id="30a6b7cf5ebd820237fc320c45ef1dea841ef50e" translate="yes" xml:space="preserve">
          <source>ArgSpec.descr()</source>
          <target state="translated">ArgSpec.descr()</target>
        </trans-unit>
        <trans-unit id="e0ba1fe3569825b23c12a138322f7193b3fa73d8" translate="yes" xml:space="preserve">
          <source>ArgSpec.f64()</source>
          <target state="translated">ArgSpec.f64()</target>
        </trans-unit>
        <trans-unit id="adbdc1d91d4cd3eb89c336d4a89f5420aab72f34" translate="yes" xml:space="preserve">
          <source>ArgSpec.help_string()</source>
          <target state="translated">ArgSpec.help_string()</target>
        </trans-unit>
        <trans-unit id="da46080aacb463c7554c2d3f0f1d8ac299549411" translate="yes" xml:space="preserve">
          <source>ArgSpec.i64()</source>
          <target state="translated">ArgSpec.i64()</target>
        </trans-unit>
        <trans-unit id="0835ccc2b1075a039092abbe3c32834d2b76cc1f" translate="yes" xml:space="preserve">
          <source>ArgSpec.name()</source>
          <target state="translated">ArgSpec.name()</target>
        </trans-unit>
        <trans-unit id="3fe65d42a361500d36d9e7f586928580bf53e906" translate="yes" xml:space="preserve">
          <source>ArgSpec.required()</source>
          <target state="translated">ArgSpec.required()</target>
        </trans-unit>
        <trans-unit id="bc4f7d5ba9791bfe3daddbd08bb12c73bada2739" translate="yes" xml:space="preserve">
          <source>ArgSpec.string()</source>
          <target state="translated">ArgSpec.string()</target>
        </trans-unit>
        <trans-unit id="1509ca5534732c3474588096cd180496285bbda4" translate="yes" xml:space="preserve">
          <source>ArgSpec.string_seq()</source>
          <target state="translated">ArgSpec.string_seq()</target>
        </trans-unit>
        <trans-unit id="bbbcd5f7d67d7c0dc2221507cb69de01b94dafea" translate="yes" xml:space="preserve">
          <source>ArgSpec.u64()</source>
          <target state="translated">ArgSpec.u64()</target>
        </trans-unit>
        <trans-unit id="26fb7b1b3f38259475730e1455574981b00d36e0" translate="yes" xml:space="preserve">
          <source>Args always come after a leaf command, and are assigned in their positional order.</source>
          <target state="translated">Args는 항상 리프 명령 뒤에 오며 위치 순서대로 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="544a6c7aaee6225917648270bad0182978b0c657" translate="yes" xml:space="preserve">
          <source>ArgumentType</source>
          <target state="translated">ArgumentType</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="e373be602681b8caab5c39dbf3330523ce8faa76" translate="yes" xml:space="preserve">
          <source>Array allocates contiguous memory. It always allocates at least enough memory space to hold all of its elements. Space is the number of elements the Array can hold without allocating more memory. The &lt;code&gt;space()&lt;/code&gt; method returns the number of elements an Array can hold. The &lt;code&gt;size()&lt;/code&gt; method returns the number of elements the Array holds.</source>
          <target state="translated">배열은 연속 메모리를 할당합니다. 항상 모든 요소를 ​​보유하기에 충분한 메모리 공간을 할당합니다. 공간은 더 많은 메모리를 할당하지 않고 어레이가 보유 할 수있는 요소의 수입니다. &lt;code&gt;space()&lt;/code&gt; 메서드는 배열에 저장할 수있는 요소의 수를 돌려줍니다. &lt;code&gt;size()&lt;/code&gt; 메소드는 어레이 보유 요소의 수를 반환한다.</target>
        </trans-unit>
        <trans-unit id="d80ff70efdd35cf1b5a2d35a4e5bea82e6b6b9b5" translate="yes" xml:space="preserve">
          <source>Array._copy_to()</source>
          <target state="translated">Array._copy_to()</target>
        </trans-unit>
        <trans-unit id="851822f1d58bc41b5f4c96c332858ffdfa953139" translate="yes" xml:space="preserve">
          <source>Array._element_size()</source>
          <target state="translated">Array._element_size()</target>
        </trans-unit>
        <trans-unit id="1df2474d9271ca143e5ad3948220ed77df7299bd" translate="yes" xml:space="preserve">
          <source>Array.append()</source>
          <target state="translated">Array.append()</target>
        </trans-unit>
        <trans-unit id="4635f333d737fdd52bb7ca2f91ea1b98db383fb4" translate="yes" xml:space="preserve">
          <source>Array.apply()</source>
          <target state="translated">Array.apply()</target>
        </trans-unit>
        <trans-unit id="654dc70accc13d55e4a5bad2882a72e00f3ad2ed" translate="yes" xml:space="preserve">
          <source>Array.chop()</source>
          <target state="translated">Array.chop()</target>
        </trans-unit>
        <trans-unit id="9d22482380f957e8a12faa908cf369911ca93fe4" translate="yes" xml:space="preserve">
          <source>Array.clear()</source>
          <target state="translated">Array.clear()</target>
        </trans-unit>
        <trans-unit id="6c504e48951547f0d21aa34b7d6f62c059939ca4" translate="yes" xml:space="preserve">
          <source>Array.clone()</source>
          <target state="translated">Array.clone()</target>
        </trans-unit>
        <trans-unit id="a17f1eca19b242e5b60ba26ff10069d013314a6e" translate="yes" xml:space="preserve">
          <source>Array.compact()</source>
          <target state="translated">Array.compact()</target>
        </trans-unit>
        <trans-unit id="7f8120e970a68240bd85c0d320d5e295ae60efb1" translate="yes" xml:space="preserve">
          <source>Array.concat()</source>
          <target state="translated">Array.concat()</target>
        </trans-unit>
        <trans-unit id="3f953b06cdd689d909c31c216bc4ca016b187e08" translate="yes" xml:space="preserve">
          <source>Array.contains()</source>
          <target state="translated">Array.contains()</target>
        </trans-unit>
        <trans-unit id="99bea94b38b8b80cbcb56e904294fe2dfd7072b6" translate="yes" xml:space="preserve">
          <source>Array.copy_from()</source>
          <target state="translated">Array.copy_from()</target>
        </trans-unit>
        <trans-unit id="8f91466efa397f726e37123b68b3115ba2fbfbe0" translate="yes" xml:space="preserve">
          <source>Array.copy_to()</source>
          <target state="translated">Array.copy_to()</target>
        </trans-unit>
        <trans-unit id="cc898f9ac56d5df474016009a33fa406d293cb9b" translate="yes" xml:space="preserve">
          <source>Array.cpointer()</source>
          <target state="translated">Array.cpointer()</target>
        </trans-unit>
        <trans-unit id="3972da9498a60c48f32298cb2ba29592516cbf66" translate="yes" xml:space="preserve">
          <source>Array.create()</source>
          <target state="translated">Array.create()</target>
        </trans-unit>
        <trans-unit id="321e3389e5a036de94c6467c50ffb227f5d237d1" translate="yes" xml:space="preserve">
          <source>Array.delete()</source>
          <target state="translated">Array.delete()</target>
        </trans-unit>
        <trans-unit id="65c2c98cd09f39984d1bd51919958a2983fb6237" translate="yes" xml:space="preserve">
          <source>Array.find()</source>
          <target state="translated">Array.find()</target>
        </trans-unit>
        <trans-unit id="0a57c2f94dbf756bb58b125eabed545e2f31e409" translate="yes" xml:space="preserve">
          <source>Array.from_cpointer()</source>
          <target state="translated">Array.from_cpointer()</target>
        </trans-unit>
        <trans-unit id="50e2b6bc5b7e0a10e7a07ad225057c182b154d2f" translate="yes" xml:space="preserve">
          <source>Array.init()</source>
          <target state="translated">Array.init()</target>
        </trans-unit>
        <trans-unit id="452852518dea4c1028ee6a067649f9ec5d9dd1b1" translate="yes" xml:space="preserve">
          <source>Array.insert()</source>
          <target state="translated">Array.insert()</target>
        </trans-unit>
        <trans-unit id="e715ffd9cfb72d58f71317b6f909b1093f7b6a17" translate="yes" xml:space="preserve">
          <source>Array.keys()</source>
          <target state="translated">Array.keys()</target>
        </trans-unit>
        <trans-unit id="597f4a9f617d3cac6b4c38cfda3854a44eec8523" translate="yes" xml:space="preserve">
          <source>Array.pairs()</source>
          <target state="translated">Array.pairs()</target>
        </trans-unit>
        <trans-unit id="a9de03b6a688614583201b662b2f6a756c7fd69b" translate="yes" xml:space="preserve">
          <source>Array.permute()</source>
          <target state="translated">Array.permute()</target>
        </trans-unit>
        <trans-unit id="df1d374981aa2c51195c483bb7b3f173f6629489" translate="yes" xml:space="preserve">
          <source>Array.pop()</source>
          <target state="translated">Array.pop()</target>
        </trans-unit>
        <trans-unit id="60129d3294829838426397201529a7e53ce809c4" translate="yes" xml:space="preserve">
          <source>Array.push()</source>
          <target state="translated">Array.push()</target>
        </trans-unit>
        <trans-unit id="f4a67fa90103584e90ae9e51f22f450b1467ae71" translate="yes" xml:space="preserve">
          <source>Array.push_u128()</source>
          <target state="translated">Array.push_u128()</target>
        </trans-unit>
        <trans-unit id="9b28a6941d9b857bbdee25f53b48b09a60f44a2b" translate="yes" xml:space="preserve">
          <source>Array.push_u16()</source>
          <target state="translated">Array.push_u16()</target>
        </trans-unit>
        <trans-unit id="c3bc234ea742b3a1dfabf9eb17d8db9992075ebe" translate="yes" xml:space="preserve">
          <source>Array.push_u32()</source>
          <target state="translated">Array.push_u32()</target>
        </trans-unit>
        <trans-unit id="6b5746b41b2fe76fa0441e099cb5c108799eb858" translate="yes" xml:space="preserve">
          <source>Array.push_u64()</source>
          <target state="translated">Array.push_u64()</target>
        </trans-unit>
        <trans-unit id="820f34d63371c8eac96861f30c36ab7b7f49514f" translate="yes" xml:space="preserve">
          <source>Array.push_u8()</source>
          <target state="translated">Array.push_u8()</target>
        </trans-unit>
        <trans-unit id="cb364fc3fe25cf034f2614ea75b11a5df660c55e" translate="yes" xml:space="preserve">
          <source>Array.read_u128()</source>
          <target state="translated">Array.read_u128()</target>
        </trans-unit>
        <trans-unit id="85048a96a78d3097a2cd29d328553c8fb6cd9ad1" translate="yes" xml:space="preserve">
          <source>Array.read_u16()</source>
          <target state="translated">Array.read_u16()</target>
        </trans-unit>
        <trans-unit id="e682f6364961d8e00041d01b6b725cd655e42758" translate="yes" xml:space="preserve">
          <source>Array.read_u32()</source>
          <target state="translated">Array.read_u32()</target>
        </trans-unit>
        <trans-unit id="9e5a998b4f3cd79a166579f769753f89d504d056" translate="yes" xml:space="preserve">
          <source>Array.read_u64()</source>
          <target state="translated">Array.read_u64()</target>
        </trans-unit>
        <trans-unit id="3c367b2cadf205df04a4b939861b3283c7f7ea76" translate="yes" xml:space="preserve">
          <source>Array.read_u8()</source>
          <target state="translated">Array.read_u8()</target>
        </trans-unit>
        <trans-unit id="85783f4dbd92f3720be3881ca48520f431c4591b" translate="yes" xml:space="preserve">
          <source>Array.remove()</source>
          <target state="translated">Array.remove()</target>
        </trans-unit>
        <trans-unit id="cf957e071d783fa275d5e25f8d090365c01edea9" translate="yes" xml:space="preserve">
          <source>Array.reserve()</source>
          <target state="translated">Array.reserve()</target>
        </trans-unit>
        <trans-unit id="905ce0b21ef07c3d8d242c40cd6d50cce52bac38" translate="yes" xml:space="preserve">
          <source>Array.reverse()</source>
          <target state="translated">Array.reverse()</target>
        </trans-unit>
        <trans-unit id="4b2fa2533a5e5a5bb0973be532ec9f72dc8972e8" translate="yes" xml:space="preserve">
          <source>Array.reverse_in_place()</source>
          <target state="translated">Array.reverse_in_place()</target>
        </trans-unit>
        <trans-unit id="26ab44c5ec66143e911fe3d2cfa4a9a42e4fdf69" translate="yes" xml:space="preserve">
          <source>Array.rfind()</source>
          <target state="translated">Array.rfind()</target>
        </trans-unit>
        <trans-unit id="a2d09add6195e0224926af72155b0b0a4ed3fc44" translate="yes" xml:space="preserve">
          <source>Array.shift()</source>
          <target state="translated">Array.shift()</target>
        </trans-unit>
        <trans-unit id="d86ea32d35669536ad0d0bf5efa56e5658811b9f" translate="yes" xml:space="preserve">
          <source>Array.size()</source>
          <target state="translated">Array.size()</target>
        </trans-unit>
        <trans-unit id="3d19b41c2d11ba0e8689da80ce70255eb10a2ea0" translate="yes" xml:space="preserve">
          <source>Array.slice()</source>
          <target state="translated">Array.slice()</target>
        </trans-unit>
        <trans-unit id="689b24973ff30a1a9da62b4c2bf244806cb7b87c" translate="yes" xml:space="preserve">
          <source>Array.space()</source>
          <target state="translated">Array.space()</target>
        </trans-unit>
        <trans-unit id="5dc5e2af328a52ff82ca64f6c08c100c0695516b" translate="yes" xml:space="preserve">
          <source>Array.swap_elements()</source>
          <target state="translated">Array.swap_elements()</target>
        </trans-unit>
        <trans-unit id="e8f3ad37e02ee2c55dd9a1c92fc030d8815b92d9" translate="yes" xml:space="preserve">
          <source>Array.trim()</source>
          <target state="translated">Array.trim()</target>
        </trans-unit>
        <trans-unit id="3661c7b10b0ab56b9dae3e217e7aa6d2ac6dc611" translate="yes" xml:space="preserve">
          <source>Array.trim_in_place()</source>
          <target state="translated">Array.trim_in_place()</target>
        </trans-unit>
        <trans-unit id="56d64d7e2dfdf5ce2a9090cf63129e3919b12e63" translate="yes" xml:space="preserve">
          <source>Array.truncate()</source>
          <target state="translated">Array.truncate()</target>
        </trans-unit>
        <trans-unit id="ce343ee040c61d5a30ab4379015b4bbd02f1a388" translate="yes" xml:space="preserve">
          <source>Array.unchop()</source>
          <target state="translated">Array.unchop()</target>
        </trans-unit>
        <trans-unit id="7b1c7bd5482b7a00497ffbf9cbc068c00099ef6b" translate="yes" xml:space="preserve">
          <source>Array.undefined()</source>
          <target state="translated">Array.undefined()</target>
        </trans-unit>
        <trans-unit id="fad28543e8e94ec8c87fb5f43397e1cfa8549b8f" translate="yes" xml:space="preserve">
          <source>Array.unshift()</source>
          <target state="translated">Array.unshift()</target>
        </trans-unit>
        <trans-unit id="0a83acedc5f79c27dcf1380ba16975dda793f81a" translate="yes" xml:space="preserve">
          <source>Array.update()</source>
          <target state="translated">Array.update()</target>
        </trans-unit>
        <trans-unit id="242711ababfe4a2069068869d691711be8622e20" translate="yes" xml:space="preserve">
          <source>Array.update_u128()</source>
          <target state="translated">Array.update_u128()</target>
        </trans-unit>
        <trans-unit id="d40211a3bb81a589434fbedffb6c775fa7ae62c8" translate="yes" xml:space="preserve">
          <source>Array.update_u16()</source>
          <target state="translated">Array.update_u16()</target>
        </trans-unit>
        <trans-unit id="84451803c30f7210ef7293ee8c9ac757d5166665" translate="yes" xml:space="preserve">
          <source>Array.update_u32()</source>
          <target state="translated">Array.update_u32()</target>
        </trans-unit>
        <trans-unit id="95de06dd1c8ac57515e64f989fc18fda0ea1ef49" translate="yes" xml:space="preserve">
          <source>Array.update_u64()</source>
          <target state="translated">Array.update_u64()</target>
        </trans-unit>
        <trans-unit id="aa5f9572cec55bd28114a1d344aa718269c06ca5" translate="yes" xml:space="preserve">
          <source>Array.update_u8()</source>
          <target state="translated">Array.update_u8()</target>
        </trans-unit>
        <trans-unit id="99575dc505283b6173ff6f63bc577cafb912c741" translate="yes" xml:space="preserve">
          <source>Array.values()</source>
          <target state="translated">Array.values()</target>
        </trans-unit>
        <trans-unit id="6db16491dcbd3d381340a55aa3bab9824f890ef1" translate="yes" xml:space="preserve">
          <source>ArrayKeys</source>
          <target state="translated">ArrayKeys</target>
        </trans-unit>
        <trans-unit id="bd538671b605759189df347d5c384a5b0af16990" translate="yes" xml:space="preserve">
          <source>ArrayKeys.create()</source>
          <target state="translated">ArrayKeys.create()</target>
        </trans-unit>
        <trans-unit id="fcea61130b9b9d2741315f207d57076d88e3eaa7" translate="yes" xml:space="preserve">
          <source>ArrayKeys.has_next()</source>
          <target state="translated">ArrayKeys.has_next()</target>
        </trans-unit>
        <trans-unit id="4f99c3ca0731340c45dff8b067769d27a2996acd" translate="yes" xml:space="preserve">
          <source>ArrayKeys.next()</source>
          <target state="translated">ArrayKeys.next()</target>
        </trans-unit>
        <trans-unit id="820dc5a322bab96a1f5514d185189bff10cae645" translate="yes" xml:space="preserve">
          <source>ArrayKeys[A: A, B: &lt;a href=&quot;builtin-array&quot;&gt;Array&lt;/a&gt;[A] #read]</source>
          <target state="translated">배열 키 [A : A, B : &lt;a href=&quot;builtin-array&quot;&gt;배열&lt;/a&gt; [A] #read]</target>
        </trans-unit>
        <trans-unit id="2e7c7d12e62ff7c2ba1f8cda854e23d6ffe997fb" translate="yes" xml:space="preserve">
          <source>ArrayPairs</source>
          <target state="translated">ArrayPairs</target>
        </trans-unit>
        <trans-unit id="d4ebe6e259161905b32e8b781bf49cb35ef4f890" translate="yes" xml:space="preserve">
          <source>ArrayPairs.create()</source>
          <target state="translated">ArrayPairs.create()</target>
        </trans-unit>
        <trans-unit id="5254c39605f1fe582787652a8880d86de3d727f2" translate="yes" xml:space="preserve">
          <source>ArrayPairs.has_next()</source>
          <target state="translated">ArrayPairs.has_next()</target>
        </trans-unit>
        <trans-unit id="f7fae33e56947498d69f182e40435036b035a34e" translate="yes" xml:space="preserve">
          <source>ArrayPairs.next()</source>
          <target state="translated">ArrayPairs.next()</target>
        </trans-unit>
        <trans-unit id="313d1f49936de1361a2ff0878d54df1a7f5ca3b2" translate="yes" xml:space="preserve">
          <source>ArrayPairs[A: A, B: &lt;a href=&quot;builtin-array&quot;&gt;Array&lt;/a&gt;[A] #read]</source>
          <target state="translated">ArrayPairs [A : A, B : &lt;a href=&quot;builtin-array&quot;&gt;배열&lt;/a&gt; [A] # 읽기]</target>
        </trans-unit>
        <trans-unit id="eda62db9664b756a4600fae1f046e9aef193ba76" translate="yes" xml:space="preserve">
          <source>ArrayValues</source>
          <target state="translated">ArrayValues</target>
        </trans-unit>
        <trans-unit id="bc6df1216a0f5b96f1948e33c3fb5d5d65312a1a" translate="yes" xml:space="preserve">
          <source>ArrayValues.create()</source>
          <target state="translated">ArrayValues.create()</target>
        </trans-unit>
        <trans-unit id="54195702636d32e0522d52283a86bd3d7c5e4010" translate="yes" xml:space="preserve">
          <source>ArrayValues.has_next()</source>
          <target state="translated">ArrayValues.has_next()</target>
        </trans-unit>
        <trans-unit id="9aac4ec7f6e800c080228123a2edbe852d699e7d" translate="yes" xml:space="preserve">
          <source>ArrayValues.next()</source>
          <target state="translated">ArrayValues.next()</target>
        </trans-unit>
        <trans-unit id="d8c9db07ab02622baecfe8629443e43abf2adda4" translate="yes" xml:space="preserve">
          <source>ArrayValues.rewind()</source>
          <target state="translated">ArrayValues.rewind()</target>
        </trans-unit>
        <trans-unit id="9e50d773c2f83ade0255590fa1a5e9abb5e1c728" translate="yes" xml:space="preserve">
          <source>ArrayValues[A: A, B: &lt;a href=&quot;builtin-array&quot;&gt;Array&lt;/a&gt;[A] #read]</source>
          <target state="translated">ArrayValues ​​[A : A, B : &lt;a href=&quot;builtin-array&quot;&gt;배열&lt;/a&gt; [A] # 읽기]</target>
        </trans-unit>
        <trans-unit id="4058d781aefc06d0f1fa2874fed8a6e0698cf0a9" translate="yes" xml:space="preserve">
          <source>Array[A: A]</source>
          <target state="translated">배열 [A : A]</target>
        </trans-unit>
        <trans-unit id="8ea7219c837eb1b1a094c75fa7974e16710192f1" translate="yes" xml:space="preserve">
          <source>As a simple example, say we had a map with I64 values and we wanted to add 4 to the current value for key &quot;test&quot;, which let's say is currently 2. We call</source>
          <target state="translated">간단한 예를 들어, I64 값을 가진 맵이 있고 키 &quot;test&quot;의 현재 값에 4를 추가하려고한다고 가정합니다. 현재는 2입니다.</target>
        </trans-unit>
        <trans-unit id="c4e4db2ac1c6a70a368b6061c69d19561497d52e" translate="yes" xml:space="preserve">
          <source>As you would expect functions are provided to create a ListNode, update a ListNode's contained item, and pop the item from the ListNode.</source>
          <target state="translated">ListNode를 작성하고, ListNode에 포함 된 항목을 업데이트하고, ListNode에서 항목을 팝업하는 기능이 제공 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="54b3c6bdea3e8d4d3eb568b9fd683db70926a12f" translate="yes" xml:space="preserve">
          <source>As you would expect. functions are provided to perform all the common list operations such as creation, traversal, node addition and removal, iteration, mapping, filtering, etc.</source>
          <target state="translated">당신이 기대 한대로. 작성, 순회, 노드 추가 및 제거, 반복, 맵핑, 필터링 등과 같은 모든 공통 목록 조작을 수행하는 기능이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8a4e2f0448869a59380b812407ac395cbfac23eb" translate="yes" xml:space="preserve">
          <source>AsioEvent</source>
          <target state="translated">AsioEvent</target>
        </trans-unit>
        <trans-unit id="51f0c2600aaa1b381295af26da5437dc3f23417d" translate="yes" xml:space="preserve">
          <source>AsioEvent.create()</source>
          <target state="translated">AsioEvent.create()</target>
        </trans-unit>
        <trans-unit id="0ddec071a65b86880f1d69e30fa52e6471f14312" translate="yes" xml:space="preserve">
          <source>AsioEvent.disposable()</source>
          <target state="translated">AsioEvent.disposable()</target>
        </trans-unit>
        <trans-unit id="2de7acdc26de9cb8e7b7276477625a2a4bdf1178" translate="yes" xml:space="preserve">
          <source>AsioEvent.dispose()</source>
          <target state="translated">AsioEvent.dispose()</target>
        </trans-unit>
        <trans-unit id="d0afd244692b28fa08a3808dd7f398930a24f722" translate="yes" xml:space="preserve">
          <source>AsioEvent.eq()</source>
          <target state="translated">AsioEvent.eq()</target>
        </trans-unit>
        <trans-unit id="5147642f883a0204e6c3a23fcab363251bc02b34" translate="yes" xml:space="preserve">
          <source>AsioEvent.ne()</source>
          <target state="translated">AsioEvent.ne()</target>
        </trans-unit>
        <trans-unit id="bedd1e8758bf9f3a590fea491c9151e5b59f1dc9" translate="yes" xml:space="preserve">
          <source>AsioEvent.none()</source>
          <target state="translated">AsioEvent.none()</target>
        </trans-unit>
        <trans-unit id="7ccf7bf361fb32d5f0dcc66642598cf232111003" translate="yes" xml:space="preserve">
          <source>AsioEvent.oneshot()</source>
          <target state="translated">AsioEvent.oneshot()</target>
        </trans-unit>
        <trans-unit id="b55c585a223595cb56317f717fb7167f851f6ff3" translate="yes" xml:space="preserve">
          <source>AsioEvent.oneshotable()</source>
          <target state="translated">AsioEvent.oneshotable()</target>
        </trans-unit>
        <trans-unit id="fb61374233e14292443ddaa17e58ba03119aeb49" translate="yes" xml:space="preserve">
          <source>AsioEvent.read()</source>
          <target state="translated">AsioEvent.read()</target>
        </trans-unit>
        <trans-unit id="d6d65a80f5b4240ffd269cb6e837d93d0ed4c6c2" translate="yes" xml:space="preserve">
          <source>AsioEvent.read_write()</source>
          <target state="translated">AsioEvent.read_write()</target>
        </trans-unit>
        <trans-unit id="44944783e7548947f8a83324d05e0aabb69ed615" translate="yes" xml:space="preserve">
          <source>AsioEvent.read_write_oneshot()</source>
          <target state="translated">AsioEvent.read_write_oneshot()</target>
        </trans-unit>
        <trans-unit id="7b191a3d91b746f1dbb71b2d76590d786199dbac" translate="yes" xml:space="preserve">
          <source>AsioEvent.readable()</source>
          <target state="translated">AsioEvent.readable()</target>
        </trans-unit>
        <trans-unit id="0295fcbed2db88a4d0f97d4e2e318c9500e39925" translate="yes" xml:space="preserve">
          <source>AsioEvent.signal()</source>
          <target state="translated">AsioEvent.signal()</target>
        </trans-unit>
        <trans-unit id="6efe8454f17a327f639480388e11c01ee3b55236" translate="yes" xml:space="preserve">
          <source>AsioEvent.timer()</source>
          <target state="translated">AsioEvent.timer()</target>
        </trans-unit>
        <trans-unit id="bb6d8ca65b0728c1f3aa708114089ee51b4c9b7c" translate="yes" xml:space="preserve">
          <source>AsioEvent.write()</source>
          <target state="translated">AsioEvent.write()</target>
        </trans-unit>
        <trans-unit id="c45a5f9e0d2f32c0c140dd97b8dbec48ba47875f" translate="yes" xml:space="preserve">
          <source>AsioEvent.writeable()</source>
          <target state="translated">AsioEvent.writeable()</target>
        </trans-unit>
        <trans-unit id="d24d16279b1f8467f72477749320f2a043a741c5" translate="yes" xml:space="preserve">
          <source>AsioEventID</source>
          <target state="translated">AsioEventID</target>
        </trans-unit>
        <trans-unit id="2c4fd8e1fda9b49d92010235a009e5d1da814a17" translate="yes" xml:space="preserve">
          <source>AsioEventNotify</source>
          <target state="translated">AsioEventNotify</target>
        </trans-unit>
        <trans-unit id="a2450592c0ecd058485100fad8283247f48a66da" translate="yes" xml:space="preserve">
          <source>AsioEventNotify._event_notify()</source>
          <target state="translated">AsioEventNotify._event_notify()</target>
        </trans-unit>
        <trans-unit id="641e5cef136e691e5b34224681db7089343dde54" translate="yes" xml:space="preserve">
          <source>Asnychronous access to some output stream.</source>
          <target state="translated">일부 출력 스트림에 대한 비동기식 액세스</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="23506ab74796a5c0591deee7d494fa97aac56914" translate="yes" xml:space="preserve">
          <source>Assert package</source>
          <target state="translated">어설 션 패키지</target>
        </trans-unit>
        <trans-unit id="278bedc2da22e83754ac3f57961c72b9954c6177" translate="yes" xml:space="preserve">
          <source>Assert that the 2 given expressions are equal.</source>
          <target state="translated">주어진 두 표현이 같다고 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="8b504c7e102b3299d936a559ddb85efccf0c526f" translate="yes" xml:space="preserve">
          <source>Assert that the 2 given expressions are not equal.</source>
          <target state="translated">주어진 두 표현이 같지 않다고 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="77e55ae26370e64e085b434393f3ed837f2625ff" translate="yes" xml:space="preserve">
          <source>Assert that the 2 given expressions resolve to different instances.</source>
          <target state="translated">주어진 두 표현식이 다른 인스턴스로 해석된다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="689485531939da80c190a75df7e9d771cb1f3f5a" translate="yes" xml:space="preserve">
          <source>Assert that the 2 given expressions resolve to the same instance</source>
          <target state="translated">주어진 두 표현식이 같은 인스턴스로 해석되도록 주장</target>
        </trans-unit>
        <trans-unit id="260278efaa93dfb608a206aeb64e7049667cd99c" translate="yes" xml:space="preserve">
          <source>Assert that the contents of the 2 given ReadSeqs are equal ignoring order.</source>
          <target state="translated">주어진 2 개의 ReadSeq의 내용이 동일한 무시 순서인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fbf7eec6379d049ba4db9473c57f835870fb33b0" translate="yes" xml:space="preserve">
          <source>Assert that the contents of the 2 given ReadSeqs are equal.</source>
          <target state="translated">주어진 2 개의 ReadSeq의 내용이 동일하다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="3261b1ff00a9c53cda9d1255bc3aeab55513fdbb" translate="yes" xml:space="preserve">
          <source>Assert that the gived test function does not throw an error when run.</source>
          <target state="translated">주어진 테스트 기능이 실행될 때 오류가 발생하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="589ffb717fa36f8d745d1b9633a027110e62480b" translate="yes" xml:space="preserve">
          <source>Assert that the given expression is false.</source>
          <target state="translated">주어진 표현이 거짓이라고 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="f5ad86de6a66ebe1aecac141d4656b5e847baa2d" translate="yes" xml:space="preserve">
          <source>Assert that the given expression is true.</source>
          <target state="translated">주어진 표현이 참이라고 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="5aa34853555f658fa17a2f52ba2adc14fa4e96df" translate="yes" xml:space="preserve">
          <source>Assert that the given test function throws an error when run.</source>
          <target state="translated">주어진 테스트 함수가 실행될 때 오류가 발생하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="545be9eeb117334b6238d1b96d2f82364fd8d23e" translate="yes" xml:space="preserve">
          <source>Assert.apply()</source>
          <target state="translated">Assert.apply()</target>
        </trans-unit>
        <trans-unit id="e9a0ea030b973d1188bd6d65230045a7507c7e1a" translate="yes" xml:space="preserve">
          <source>Assert.create()</source>
          <target state="translated">Assert.create()</target>
        </trans-unit>
        <trans-unit id="c159d734d544b401541ae55f5930d6575ccd27c8" translate="yes" xml:space="preserve">
          <source>Assert.eq()</source>
          <target state="translated">Assert.eq()</target>
        </trans-unit>
        <trans-unit id="38a16b801b2e5f445b7b59fe51c1b5b4291a2b80" translate="yes" xml:space="preserve">
          <source>Assert.ne()</source>
          <target state="translated">Assert.ne()</target>
        </trans-unit>
        <trans-unit id="c4ca848e53b02b34fdd8632d92fb5a333e2ada26" translate="yes" xml:space="preserve">
          <source>AsyncBenchContinue</source>
          <target state="translated">AsyncBenchContinue</target>
        </trans-unit>
        <trans-unit id="16992833a909971c4fb9ff073553b28843dbccf8" translate="yes" xml:space="preserve">
          <source>AsyncBenchContinue._create()</source>
          <target state="translated">AsyncBenchContinue._create()</target>
        </trans-unit>
        <trans-unit id="ab3c0ec2f889423994c987af7243057def8ff92a" translate="yes" xml:space="preserve">
          <source>AsyncBenchContinue.complete()</source>
          <target state="translated">AsyncBenchContinue.complete()</target>
        </trans-unit>
        <trans-unit id="d8367d031f2a5db3ecc7dcb0b0f9466ff4f6f3f2" translate="yes" xml:space="preserve">
          <source>AsyncBenchContinue.fail()</source>
          <target state="translated">AsyncBenchContinue.fail()</target>
        </trans-unit>
        <trans-unit id="a8a03a92f7b3d70a23a61b77896870e89a50f2b0" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark</source>
          <target state="translated">AsyncMicroBenchmark</target>
        </trans-unit>
        <trans-unit id="1949003f590e03cafc51015a366cfc850619b629" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.after()</source>
          <target state="translated">AsyncMicroBenchmark.after()</target>
        </trans-unit>
        <trans-unit id="de7577ee77a2d8a883ca6e43f008cae83b930ee1" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.after_iteration()</source>
          <target state="translated">AsyncMicroBenchmark.after_iteration()</target>
        </trans-unit>
        <trans-unit id="62888bc187a8f548084be53019171adfb7c083cc" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.apply()</source>
          <target state="translated">AsyncMicroBenchmark.apply()</target>
        </trans-unit>
        <trans-unit id="9994edb61e0d195aa7d5ddd50b407755a5195641" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.before()</source>
          <target state="translated">AsyncMicroBenchmark.before()</target>
        </trans-unit>
        <trans-unit id="4fd36fc95f86590f7edccb29172791ce882dabdd" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.before_iteration()</source>
          <target state="translated">AsyncMicroBenchmark.before_iteration()</target>
        </trans-unit>
        <trans-unit id="68c449f179013152bd095dd279754b4aed9d0b6c" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.config()</source>
          <target state="translated">AsyncMicroBenchmark.config()</target>
        </trans-unit>
        <trans-unit id="c752e689922ec3651d74c1ea6007c6611f16c3eb" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.name()</source>
          <target state="translated">AsyncMicroBenchmark.name()</target>
        </trans-unit>
        <trans-unit id="927d35670f8856e4e7cbdd9dc588123a6c801edf" translate="yes" xml:space="preserve">
          <source>AsyncMicroBenchmark.overhead()</source>
          <target state="translated">AsyncMicroBenchmark.overhead()</target>
        </trans-unit>
        <trans-unit id="226be4cb248465d00536bd78293fd90329243f03" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark</source>
          <target state="translated">AsyncOverheadBenchmark</target>
        </trans-unit>
        <trans-unit id="367223b46b6c1b00a6f7f3a0f60f56291cb5afdf" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.after()</source>
          <target state="translated">AsyncOverheadBenchmark.after()</target>
        </trans-unit>
        <trans-unit id="5016ea0f921b4724a5b83605ce681a80fe79ca66" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.after_iteration()</source>
          <target state="translated">AsyncOverheadBenchmark.after_iteration()</target>
        </trans-unit>
        <trans-unit id="bab562d660e4d1d3774cc04343b1e2c66ec27beb" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.apply()</source>
          <target state="translated">AsyncOverheadBenchmark.apply()</target>
        </trans-unit>
        <trans-unit id="d424add3cf4103996913030077ffe8ee90ebc48c" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.before()</source>
          <target state="translated">AsyncOverheadBenchmark.before()</target>
        </trans-unit>
        <trans-unit id="585554293464c5f0d90721ac6e534d342c3981a7" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.before_iteration()</source>
          <target state="translated">AsyncOverheadBenchmark.before_iteration()</target>
        </trans-unit>
        <trans-unit id="34adbb62d02bee60108bb8625873d09c25e20ed5" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.config()</source>
          <target state="translated">AsyncOverheadBenchmark.config()</target>
        </trans-unit>
        <trans-unit id="c5afc22c57070d254cf21d073e3a84b256647843" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.create()</source>
          <target state="translated">AsyncOverheadBenchmark.create()</target>
        </trans-unit>
        <trans-unit id="60a8efe5cbc18e151eace402a104fc58709a826c" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.name()</source>
          <target state="translated">AsyncOverheadBenchmark.name()</target>
        </trans-unit>
        <trans-unit id="aa7c244f2870472f0d979f702c6d9d03b705ead5" translate="yes" xml:space="preserve">
          <source>AsyncOverheadBenchmark.overhead()</source>
          <target state="translated">AsyncOverheadBenchmark.overhead()</target>
        </trans-unit>
        <trans-unit id="1d3b7f9720bf42b4cf108ef0b33abfd60a3cddbe" translate="yes" xml:space="preserve">
          <source>Asynchronous access to a File object. Wraps file operations print, write, printv and writev. The File will be disposed through File._final.</source>
          <target state="translated">File 객체에 대한 비동기 액세스 파일 작업 print, write, printv 및 writev를 래핑합니다. 파일은 File._final을 통해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="32f4bd5c79eaf4b14e7b6ae808a9541981fc0661" translate="yes" xml:space="preserve">
          <source>Asynchronous access to some input stream.</source>
          <target state="translated">일부 입력 스트림에 대한 비동기 액세스</target>
        </trans-unit>
        <trans-unit id="59ee9c693cdd6b73e486cc431ad2af22019b902d" translate="yes" xml:space="preserve">
          <source>Asynchronous access to stdin. The constructor is private to ensure that access is provided only via an environment.</source>
          <target state="translated">stdin에 대한 비동기 액세스 환경을 통해서만 액세스가 제공되도록하기 위해 생성자는 비공개입니다.</target>
        </trans-unit>
        <trans-unit id="6490d9dfc9c937e539f0bb49d8ce5e3af84dfdb3" translate="yes" xml:space="preserve">
          <source>Asynchronous access to stdout and stderr. The constructors are private to ensure that access is provided only via an environment.</source>
          <target state="translated">stdout 및 stderr에 대한 비동기 액세스 생성자는 환경을 통해서만 액세스가 제공되도록하기 위해 비공개입니다.</target>
        </trans-unit>
        <trans-unit id="fc199432c07516e2433e59070f14f9d9b3aae338" translate="yes" xml:space="preserve">
          <source>Asynchronous benchmarks must provide this trait. The &lt;code&gt;apply&lt;/code&gt; method defines a single iteration in a sample. Each phase of the sample completes when the given &lt;code&gt;AsyncBenchContinue&lt;/code&gt; has its &lt;code&gt;complete&lt;/code&gt; method invoked. Setup and Teardown are defined by the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods respectively. The &lt;code&gt;before&lt;/code&gt; method runs before a sample of benchmarks and &lt;code&gt;after&lt;/code&gt; runs after the all iterations in the sample have completed. If your benchmark requires setup and/or teardown to occur beween each iteration of the benchmark, then you can use &lt;code&gt;before_iteration&lt;/code&gt; and &lt;code&gt;after_iteration&lt;/code&gt; methods respectively that run before/after each iteration.</source>
          <target state="translated">비동기 벤치 마크는이 특성을 제공해야합니다. 는 &lt;code&gt;apply&lt;/code&gt; 방법을 정의 샘플에서 단일 반복합니다. 주어진 &lt;code&gt;AsyncBenchContinue&lt;/code&gt; 에 &lt;code&gt;complete&lt;/code&gt; 메소드가 호출 되면 샘플의 각 단계가 완료 됩니다. 설치 및 분해가에 의해 정의 된 &lt;code&gt;before&lt;/code&gt; 과 &lt;code&gt;after&lt;/code&gt; 각각의 방법. &lt;code&gt;before&lt;/code&gt; 벤치 마크의 샘플 이전과 방법을 실행 &lt;code&gt;after&lt;/code&gt; 샘플의 모든 반복 한 후 실행을 완료했습니다. 벤치 마크 벤치 마크의 각 반복 beween 발생하는 설치 및 / 또는 분해를 필요로하는 경우에, 당신은 사용할 수 있습니다 &lt;code&gt;before_iteration&lt;/code&gt; 및 &lt;code&gt;after_iteration&lt;/code&gt; 을 각 반복 전 / 후에 각각 실행되는 메소드.</target>
        </trans-unit>
        <trans-unit id="9c3cde8b2b0bde78fc4d9fe07944657d40300248" translate="yes" xml:space="preserve">
          <source>At a high level, the runtime backpressure system works by adjusting the scheduling of actors. When an actor becomes overloaded, the Pony runtime will deprioritize scheduling the actors that are sending to it. This change in scheduling allows the overloaded actor to catch up.</source>
          <target state="translated">높은 수준에서 런타임 배압 시스템은 액터의 일정을 조정하여 작동합니다. 액터가 오버로드되면 Pony 런타임은 액터로 전송중인 액터 스케줄링을 우선 순위로 둡니다. 이 스케줄링 변경으로 과부하 된 액터가 따라 잡을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2aeeaaa0157505def2d1104fc6cc2627232c17d" translate="yes" xml:space="preserve">
          <source>Attaches a step asynchronously. If this promise has already been fulfilled or rejected, immediately fulfill or reject the incoming step. Otherwise, keep it in a list.</source>
          <target state="translated">단계를 비동기 적으로 연결합니다. 이 약속이 이미 이행되었거나 거부 된 경우 들어오는 단계를 즉시 이행하거나 거부하십시오. 그렇지 않으면 목록에 보관하십시오.</target>
        </trans-unit>
        <trans-unit id="8959fa9133d5e6407c33a0e7ed6767f4e8a38aa3" translate="yes" xml:space="preserve">
          <source>Attempt to get the value corresponding to k.</source>
          <target state="translated">k에 해당하는 값을 얻으려고 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="d03d7a0e128a91198d9a73e790bf9e8a9976341d" translate="yes" xml:space="preserve">
          <source>Attempt to open for read/write, creating if it doesn't exist, preserving the contents if it does exist. Set errno according to result.</source>
          <target state="translated">존재하지 않는 경우 컨텐츠를 작성하고 존재하지 않는 경우 작성하여 읽기 / 쓰기를 위해 열려고 시도하십시오. 결과에 따라 errno를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="cd7b566aa3d4d43e9462e9586db41461975245fe" translate="yes" xml:space="preserve">
          <source>Attempt to perform a graceful shutdown. Don't accept new writes. If the connection isn't muted then we won't finish closing until we get a zero length read. If the connection is muted, perform a hard close and shut down immediately.</source>
          <target state="translated">정상적으로 종료하려고합니다. 새로운 글을받지 마십시오. 연결이 음소거되지 않으면 길이가 0이 될 때까지 닫히지 않습니다. 연결이 음소거 된 경우 강제 종료를 수행하고 즉시 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="36ce6870762d1bca844140230ac7d88c8eb4af89" translate="yes" xml:space="preserve">
          <source>B ?</source>
          <target state="translated">B?</target>
        </trans-unit>
        <trans-unit id="d8dcec20350cf9c4760945806778845157eb1678" translate="yes" xml:space="preserve">
          <source>B-&amp;gt;A ?</source>
          <target state="translated">B-&amp;gt; A?</target>
        </trans-unit>
        <trans-unit id="17c48d99509b5053fbdadf8ae4a81e0dea3f02de" translate="yes" xml:space="preserve">
          <source>B^</source>
          <target state="translated">B^</target>
        </trans-unit>
        <trans-unit id="467994c7966de6f9dfecd538f0dbf150d760d079" translate="yes" xml:space="preserve">
          <source>B^ ?</source>
          <target state="translated">B ^?</target>
        </trans-unit>
        <trans-unit id="bfded4a21da8efbb2fa839d4b2207399ba6ad7be" translate="yes" xml:space="preserve">
          <source>Backpressure</source>
          <target state="translated">Backpressure</target>
        </trans-unit>
        <trans-unit id="e19c708c854baab6684484923cec9b51ebd36442" translate="yes" xml:space="preserve">
          <source>Backpressure Package</source>
          <target state="translated">배압 패키지</target>
        </trans-unit>
        <trans-unit id="f2781baf09726ca4fb67bbae509fc9f5dd0c8d97" translate="yes" xml:space="preserve">
          <source>Backpressure support</source>
          <target state="translated">배압 지원</target>
        </trans-unit>
        <trans-unit id="bc3ae9d5dd24a14d1f659533e82a4fdc876b87d9" translate="yes" xml:space="preserve">
          <source>Backpressure.apply()</source>
          <target state="translated">Backpressure.apply()</target>
        </trans-unit>
        <trans-unit id="bd70a462f53d7a878b0b808b40271394ef2c2ff3" translate="yes" xml:space="preserve">
          <source>Backpressure.create()</source>
          <target state="translated">Backpressure.create()</target>
        </trans-unit>
        <trans-unit id="43bd34f73dd619cfbaf92c87709317ae02948d22" translate="yes" xml:space="preserve">
          <source>Backpressure.eq()</source>
          <target state="translated">Backpressure.eq()</target>
        </trans-unit>
        <trans-unit id="6b4659e00620bb38f0be7932faa4c1a92381a366" translate="yes" xml:space="preserve">
          <source>Backpressure.ne()</source>
          <target state="translated">Backpressure.ne()</target>
        </trans-unit>
        <trans-unit id="6a265d4daa17b055f122766b385b2efa874637a9" translate="yes" xml:space="preserve">
          <source>Backpressure.release()</source>
          <target state="translated">Backpressure.release()</target>
        </trans-unit>
        <trans-unit id="f21ecfd543f0da1cb0043842ff8453b114789c2e" translate="yes" xml:space="preserve">
          <source>BackpressureAuth</source>
          <target state="translated">BackpressureAuth</target>
        </trans-unit>
        <trans-unit id="ba166ab3171ad98227bb55abb0750f76c77f141b" translate="yes" xml:space="preserve">
          <source>Backward delete.</source>
          <target state="translated">뒤로 삭제</target>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="6712e9c621a2192ef7107f7dc8b1a8334ef6f02f" translate="yes" xml:space="preserve">
          <source>Base64 package</source>
          <target state="translated">Base64 패키지</target>
        </trans-unit>
        <trans-unit id="2e30152e7163e1134aa8e50444c4b682efd71172" translate="yes" xml:space="preserve">
          <source>Base64._enc_byte()</source>
          <target state="translated">Base64._enc_byte()</target>
        </trans-unit>
        <trans-unit id="3b5ad063d3b3c900091b74cf1c22887221a22cdb" translate="yes" xml:space="preserve">
          <source>Base64.create()</source>
          <target state="translated">Base64.create()</target>
        </trans-unit>
        <trans-unit id="073422d4cc758767886dcbc85bd41bf69a93c5e9" translate="yes" xml:space="preserve">
          <source>Base64.decode()</source>
          <target state="translated">Base64.decode()</target>
        </trans-unit>
        <trans-unit id="36a889551cc5d0f5244a6c21a0c41a354b6db183" translate="yes" xml:space="preserve">
          <source>Base64.decode_url()</source>
          <target state="translated">Base64.decode_url()</target>
        </trans-unit>
        <trans-unit id="d60dbc75d1156f870b8671602101e1fb2cfe88e0" translate="yes" xml:space="preserve">
          <source>Base64.encode()</source>
          <target state="translated">Base64.encode()</target>
        </trans-unit>
        <trans-unit id="dcd4538f676fcf0f70eacadc886574cc9cf6eef8" translate="yes" xml:space="preserve">
          <source>Base64.encode_mime()</source>
          <target state="translated">Base64.encode_mime()</target>
        </trans-unit>
        <trans-unit id="ee3a2ad8e8490bd0266f0492fb4639b7f257656d" translate="yes" xml:space="preserve">
          <source>Base64.encode_pem()</source>
          <target state="translated">Base64.encode_pem()</target>
        </trans-unit>
        <trans-unit id="d5dacfadbae2a49a7bef13980542d7865b59bf1e" translate="yes" xml:space="preserve">
          <source>Base64.encode_url()</source>
          <target state="translated">Base64.encode_url()</target>
        </trans-unit>
        <trans-unit id="31dfd1cd33c21423536cd988f45526075ba46a9a" translate="yes" xml:space="preserve">
          <source>Base64.eq()</source>
          <target state="translated">Base64.eq()</target>
        </trans-unit>
        <trans-unit id="13910a51e12aa03e9863f116a902ca7f010773bc" translate="yes" xml:space="preserve">
          <source>Base64.ne()</source>
          <target state="translated">Base64.ne()</target>
        </trans-unit>
        <trans-unit id="2304c0c6eb7f8693b413872164916b0a32c41d79" translate="yes" xml:space="preserve">
          <source>Begin an IOCP read on Windows.</source>
          <target state="translated">Windows에서 IOCP 읽기를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="aeb0394cfb74ab4dc541fb4ea252de4f61f1e77c" translate="yes" xml:space="preserve">
          <source>Beginning of the line.</source>
          <target state="translated">라인의 시작.</target>
        </trans-unit>
        <trans-unit id="721254f386236baf80900614740fd815d7253fec" translate="yes" xml:space="preserve">
          <source>BenchConfig</source>
          <target state="translated">BenchConfig</target>
        </trans-unit>
        <trans-unit id="707fbff4e7a511607b1aea20a9042918262d08b1" translate="yes" xml:space="preserve">
          <source>BenchConfig.create()</source>
          <target state="translated">BenchConfig.create()</target>
        </trans-unit>
        <trans-unit id="0b64ae67ca1d607764d810af41bbbdfce1a68725" translate="yes" xml:space="preserve">
          <source>BenchConfig.max_iterations</source>
          <target state="translated">BenchConfig.max_iterations</target>
        </trans-unit>
        <trans-unit id="ddee6a47e97ef6d2275f71f4fe4534902415b3ac" translate="yes" xml:space="preserve">
          <source>BenchConfig.max_sample_time</source>
          <target state="translated">BenchConfig.max_sample_time</target>
        </trans-unit>
        <trans-unit id="3bf0607205c38fce4da656f977efbbddd0036820" translate="yes" xml:space="preserve">
          <source>BenchConfig.samples</source>
          <target state="translated">BenchConfig.samples</target>
        </trans-unit>
        <trans-unit id="9ed99e75a9b04f273de29c9fef2bd3fb53d2e2de" translate="yes" xml:space="preserve">
          <source>Benchmark</source>
          <target state="translated">Benchmark</target>
        </trans-unit>
        <trans-unit id="421de27414ca8874a61b867eb38832b91ba4443f" translate="yes" xml:space="preserve">
          <source>BenchmarkList</source>
          <target state="translated">BenchmarkList</target>
        </trans-unit>
        <trans-unit id="26d50f2db11edee82c8322e0ec50a56926fad3c1" translate="yes" xml:space="preserve">
          <source>BenchmarkList.benchmarks()</source>
          <target state="translated">BenchmarkList.benchmarks()</target>
        </trans-unit>
        <trans-unit id="f4b68b2fab22d221207f75497f220c953edad9fd" translate="yes" xml:space="preserve">
          <source>BinaryHeap</source>
          <target state="translated">BinaryHeap</target>
        </trans-unit>
        <trans-unit id="8934e723d9d8c33a60cb9d253076eaf431a82072" translate="yes" xml:space="preserve">
          <source>BinaryHeap._apply()</source>
          <target state="translated">BinaryHeap._apply()</target>
        </trans-unit>
        <trans-unit id="a8bc6973125a269060accac9356e224bfae4b6d8" translate="yes" xml:space="preserve">
          <source>BinaryHeap._make_heap()</source>
          <target state="translated">BinaryHeap._make_heap()</target>
        </trans-unit>
        <trans-unit id="4fb8f57629cd0c560ed2a90277cac9d6d7d1ebef" translate="yes" xml:space="preserve">
          <source>BinaryHeap._sift_down()</source>
          <target state="translated">BinaryHeap._sift_down()</target>
        </trans-unit>
        <trans-unit id="52f9870585adf031e3b32eb39489efa141be38dc" translate="yes" xml:space="preserve">
          <source>BinaryHeap._sift_up()</source>
          <target state="translated">BinaryHeap._sift_up()</target>
        </trans-unit>
        <trans-unit id="39eafaadefcf8cb43e693f8165bf57bfef360363" translate="yes" xml:space="preserve">
          <source>BinaryHeap.append()</source>
          <target state="translated">BinaryHeap.append()</target>
        </trans-unit>
        <trans-unit id="3ffcc80fc8b553ecec7d58db54805f9bdddc9eac" translate="yes" xml:space="preserve">
          <source>BinaryHeap.clear()</source>
          <target state="translated">BinaryHeap.clear()</target>
        </trans-unit>
        <trans-unit id="6e388c92926290f5d0a0f52968133bf07444ce64" translate="yes" xml:space="preserve">
          <source>BinaryHeap.concat()</source>
          <target state="translated">BinaryHeap.concat()</target>
        </trans-unit>
        <trans-unit id="38206d40a1ffdcda44b58744f8d3ff04d941b2fd" translate="yes" xml:space="preserve">
          <source>BinaryHeap.create()</source>
          <target state="translated">BinaryHeap.create()</target>
        </trans-unit>
        <trans-unit id="09bcb31068c100ac9d82b84dace67a1222df621f" translate="yes" xml:space="preserve">
          <source>BinaryHeap.peek()</source>
          <target state="translated">BinaryHeap.peek()</target>
        </trans-unit>
        <trans-unit id="bbab1055f8b4fea289a79efeef85c2fe50bdb8b6" translate="yes" xml:space="preserve">
          <source>BinaryHeap.pop()</source>
          <target state="translated">BinaryHeap.pop()</target>
        </trans-unit>
        <trans-unit id="8692e40c882911776b784a8f6e9743cbd7e68bcb" translate="yes" xml:space="preserve">
          <source>BinaryHeap.push()</source>
          <target state="translated">BinaryHeap.push()</target>
        </trans-unit>
        <trans-unit id="5d7a6fbd9fad5fb300753eb5bafeb128e81ae380" translate="yes" xml:space="preserve">
          <source>BinaryHeap.size()</source>
          <target state="translated">BinaryHeap.size()</target>
        </trans-unit>
        <trans-unit id="b61f927ef324f23e494ded041482eb80fb4211dc" translate="yes" xml:space="preserve">
          <source>BinaryHeap.values()</source>
          <target state="translated">BinaryHeap.values()</target>
        </trans-unit>
        <trans-unit id="5ebd4954565804ed0bbcce991f0d9a1270a55bfc" translate="yes" xml:space="preserve">
          <source>BinaryHeapPriority</source>
          <target state="translated">BinaryHeapPriority</target>
        </trans-unit>
        <trans-unit id="ab2588ab1938c13a5bec68dd625c49a796954d83" translate="yes" xml:space="preserve">
          <source>BinaryHeapPriority[A: &lt;a href=&quot;builtin-comparable&quot;&gt;Comparable&lt;/a&gt;[A] #read]</source>
          <target state="translated">BinaryHeapPriority [A : &lt;a href=&quot;builtin-comparable&quot;&gt;비교 가능&lt;/a&gt; [A] # 읽기]</target>
        </trans-unit>
        <trans-unit id="59f4d7711d34003c9b23b0ff63e64a69b775258b" translate="yes" xml:space="preserve">
          <source>BinaryHeap[A: &lt;a href=&quot;builtin-comparable&quot;&gt;Comparable&lt;/a&gt;[A] #read, P: (&lt;a href=&quot;collections-_binaryheappriority&quot;&gt;_BinaryHeapPriority&lt;/a&gt;[A] val &amp;amp; (&lt;a href=&quot;collections-minheappriority&quot;&gt;MinHeapPriority&lt;/a&gt;[A] val | &lt;a href=&quot;collections-maxheappriority&quot;&gt;MaxHeapPriority&lt;/a&gt;[A] val))]</source>
          <target state="translated">BinaryHeap [A ​​: &lt;a href=&quot;builtin-comparable&quot;&gt;비교 가능&lt;/a&gt; [A] # 읽기, P : ( &lt;a href=&quot;collections-_binaryheappriority&quot;&gt;_BinaryHeapPriority&lt;/a&gt; [A] val &amp;amp; ( &lt;a href=&quot;collections-minheappriority&quot;&gt;MinHeapPriority&lt;/a&gt; [A] val | &lt;a href=&quot;collections-maxheappriority&quot;&gt;MaxHeapPriority&lt;/a&gt; [A] val))]</target>
        </trans-unit>
        <trans-unit id="a45bb44496746df0731bc6f6fb8d169ec1b487cb" translate="yes" xml:space="preserve">
          <source>BinaryHeap[A: &lt;a href=&quot;builtin-comparable&quot;&gt;Comparable&lt;/a&gt;[A] #read, P: (_BinaryHeapPriority[A] val &amp;amp; (&lt;a href=&quot;collections-minheappriority&quot;&gt;MinHeapPriority&lt;/a&gt;[A] val | &lt;a href=&quot;collections-maxheappriority&quot;&gt;MaxHeapPriority&lt;/a&gt;[A] val))]</source>
          <target state="translated">BinaryHeap[A: &lt;a href=&quot;builtin-comparable&quot;&gt;Comparable&lt;/a&gt;[A] #read, P: (_BinaryHeapPriority[A] val &amp;amp; (&lt;a href=&quot;collections-minheappriority&quot;&gt;MinHeapPriority&lt;/a&gt;[A] val | &lt;a href=&quot;collections-maxheappriority&quot;&gt;MaxHeapPriority&lt;/a&gt;[A] val))]</target>
        </trans-unit>
        <trans-unit id="37f5bc6d6048b1f4ddcacf8d47eed50cc7f313ff" translate="yes" xml:space="preserve">
          <source>Black background.</source>
          <target state="translated">검정색 배경.</target>
        </trans-unit>
        <trans-unit id="9ffa7cb9700df4f233f066ac4dd4260feafbdb5d" translate="yes" xml:space="preserve">
          <source>Black text.</source>
          <target state="translated">검은 색 텍스트.</target>
        </trans-unit>
        <trans-unit id="3380ee61b41ccfa2a73e3bb6e0d16fd70fd177b2" translate="yes" xml:space="preserve">
          <source>Blinking text. Does nothing on Windows.</source>
          <target state="translated">깜박 거리는 텍스트. Windows에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="072d25b7ff0e476d3488dfcfa431e13d91dcfed7" translate="yes" xml:space="preserve">
          <source>Blue background.</source>
          <target state="translated">파란색 배경입니다.</target>
        </trans-unit>
        <trans-unit id="c1507b7c0cf5964ec8514849847367889eee2d14" translate="yes" xml:space="preserve">
          <source>Blue text.</source>
          <target state="translated">파란색 텍스트.</target>
        </trans-unit>
        <trans-unit id="700caf049631d494aaab673b8e51def3020a4f24" translate="yes" xml:space="preserve">
          <source>Bold text. Does nothing on Windows.</source>
          <target state="translated">굵은 텍스트. Windows에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="daf760a167a8047cee872015a8e80002f3b67442" translate="yes" xml:space="preserve">
          <source>Bool</source>
          <target state="translated">Bool</target>
        </trans-unit>
        <trans-unit id="32c1abcf8c37709579899f7fc53a9c285cb2271a" translate="yes" xml:space="preserve">
          <source>Bool.create()</source>
          <target state="translated">Bool.create()</target>
        </trans-unit>
        <trans-unit id="2a99cc16274631795b464fd0f16cae7b22f0b0d2" translate="yes" xml:space="preserve">
          <source>Bool.eq()</source>
          <target state="translated">Bool.eq()</target>
        </trans-unit>
        <trans-unit id="507bb73ed7c4b1fc25a8d72543c5d715be6d0ab7" translate="yes" xml:space="preserve">
          <source>Bool.ne()</source>
          <target state="translated">Bool.ne()</target>
        </trans-unit>
        <trans-unit id="ddf5f562782224ebb7274ab544f26696df594b88" translate="yes" xml:space="preserve">
          <source>Bool.op_and()</source>
          <target state="translated">Bool.op_and()</target>
        </trans-unit>
        <trans-unit id="b84162888a5f8a78eea685f0db0cd4a0b3384e44" translate="yes" xml:space="preserve">
          <source>Bool.op_not()</source>
          <target state="translated">Bool.op_not()</target>
        </trans-unit>
        <trans-unit id="535f6b9e196ecef4d78a0b78984f25ff2b6c30fa" translate="yes" xml:space="preserve">
          <source>Bool.op_or()</source>
          <target state="translated">Bool.op_or()</target>
        </trans-unit>
        <trans-unit id="ef72595a7974e6d10c40bebcbfe632d10e36ade1" translate="yes" xml:space="preserve">
          <source>Bool.op_xor()</source>
          <target state="translated">Bool.op_xor()</target>
        </trans-unit>
        <trans-unit id="e6211300ca811573d6a8b569a43af1a8483281d2" translate="yes" xml:space="preserve">
          <source>Bool.string()</source>
          <target state="translated">Bool.string()</target>
        </trans-unit>
        <trans-unit id="d64baa70cb7f0f025e9af46c888f8742d8fe5182" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;that_offset&lt;/code&gt; can be negative, in which case the offsets are computed from the end of the string.</source>
          <target state="translated">모두 &lt;code&gt;offset&lt;/code&gt; 및 &lt;code&gt;that_offset&lt;/code&gt; 는 오프셋이 문자열의 끝에서 계산되는 경우에 음극 일 수있다.</target>
        </trans-unit>
        <trans-unit id="e40f6c4251657b4e33ef1bc81a1cf71131b2094d" translate="yes" xml:space="preserve">
          <source>Bright blue background.</source>
          <target state="translated">밝은 파란색 배경.</target>
        </trans-unit>
        <trans-unit id="ed876d60069332f965d06ef2000d67375d21d5ad" translate="yes" xml:space="preserve">
          <source>Bright blue text.</source>
          <target state="translated">밝은 파란색 텍스트.</target>
        </trans-unit>
        <trans-unit id="e1aace6e81a5b1c13889d1c9aaca11d2d2109591" translate="yes" xml:space="preserve">
          <source>Bright cyan background.</source>
          <target state="translated">밝은 청록색 배경.</target>
        </trans-unit>
        <trans-unit id="a99013fba8ac7c0b46db4a3dd44c34752c0660e7" translate="yes" xml:space="preserve">
          <source>Bright cyan text.</source>
          <target state="translated">밝은 청록색 텍스트.</target>
        </trans-unit>
        <trans-unit id="a3368758481f315600685291977e575959611250" translate="yes" xml:space="preserve">
          <source>Bright green background.</source>
          <target state="translated">밝은 녹색 배경.</target>
        </trans-unit>
        <trans-unit id="b742d01e8fc08a2e707a565e96e7fe7f961bd8e9" translate="yes" xml:space="preserve">
          <source>Bright green text.</source>
          <target state="translated">밝은 녹색 텍스트.</target>
        </trans-unit>
        <trans-unit id="b713f6cb6b858a2604f5def0733263bf1c467e0d" translate="yes" xml:space="preserve">
          <source>Bright grey background.</source>
          <target state="translated">밝은 회색 배경.</target>
        </trans-unit>
        <trans-unit id="2ff128beb804fba58a850f3c785f50e408447d77" translate="yes" xml:space="preserve">
          <source>Bright grey text.</source>
          <target state="translated">밝은 회색 텍스트.</target>
        </trans-unit>
        <trans-unit id="92afb25492010d68238ae7fb827f2ce8cc6df80a" translate="yes" xml:space="preserve">
          <source>Bright magenta background.</source>
          <target state="translated">밝은 자홍색 배경.</target>
        </trans-unit>
        <trans-unit id="0fc5ce8025b88921fb1e7bbca187439afb350930" translate="yes" xml:space="preserve">
          <source>Bright magenta text.</source>
          <target state="translated">밝은 자홍색 텍스트.</target>
        </trans-unit>
        <trans-unit id="9274bf3a67bf25d6ad60b7d7d86c2570dc6fbc06" translate="yes" xml:space="preserve">
          <source>Bright red background.</source>
          <target state="translated">밝은 빨간색 배경.</target>
        </trans-unit>
        <trans-unit id="c256c024cd7be8744659ba47f29da6d072c57804" translate="yes" xml:space="preserve">
          <source>Bright red text.</source>
          <target state="translated">밝은 빨간색 텍스트.</target>
        </trans-unit>
        <trans-unit id="1446e4214746b310eeb7da8e628c5c8b1c041ac5" translate="yes" xml:space="preserve">
          <source>Bright yellow background.</source>
          <target state="translated">밝은 노란색 배경.</target>
        </trans-unit>
        <trans-unit id="979100ffe27a980d19829fa273fb48d5e153c805" translate="yes" xml:space="preserve">
          <source>Bright yellow text.</source>
          <target state="translated">밝은 노란색 텍스트.</target>
        </trans-unit>
        <trans-unit id="31d2c37d3dfee89057ffdd50d906c4f87d4dde7e" translate="yes" xml:space="preserve">
          <source>Buffered Package</source>
          <target state="translated">버퍼링 된 패키지</target>
        </trans-unit>
        <trans-unit id="fa169ac2ede100b67a6d498c343775fbe7417775" translate="yes" xml:space="preserve">
          <source>Build a Capsicum ID from an index and a bit position.</source>
          <target state="translated">인덱스와 비트 위치에서 Capsicum ID를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="ce8a8746da2bfd923758d663ee0264cd31a5bf7b" translate="yes" xml:space="preserve">
          <source>Build an artificial environment. A root capability may be supplied.</source>
          <target state="translated">인공적인 환경을 조성하십시오. 루트 기능이 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d89f58b3bac0a5bf75fa07420756414dfe5aaf5a" translate="yes" xml:space="preserve">
          <source>Builds a list by dropping elements from the front of the list until one fails to satisfy the provided predicate.</source>
          <target state="translated">제공된 술어를 충족시키지 못할 때까지 목록의 앞쪽에서 요소를 삭제하여 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="433e0599c31bbf81ebccb3aa5095e7d2520503a5" translate="yes" xml:space="preserve">
          <source>Builds a list by dropping the first n elements.</source>
          <target state="translated">처음 n 개의 요소를 삭제하여 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="42fe1b0604c1963a2b12ce3d997746d01e146fed" translate="yes" xml:space="preserve">
          <source>Builds a list of elements satisfying the provided predicate until one does not.</source>
          <target state="translated">제공된 술어를 만족시키지 않는 요소 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="67887f1c47dce97ab04c6780f756e160b57a2315" translate="yes" xml:space="preserve">
          <source>Builds a list of the first n elements.</source>
          <target state="translated">처음 n 개의 요소 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ad3472cdcd0c81d047514ea7602dd66a243a3419" translate="yes" xml:space="preserve">
          <source>Builds a new list by applying a function to every member of the list and using the elements of the resulting lists.</source>
          <target state="translated">목록의 모든 멤버에 함수를 적용하고 결과 목록의 요소를 사용하여 새 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="af360bef0c89030927b5bec35ad8dbd996f357a7" translate="yes" xml:space="preserve">
          <source>Builds a new list by applying a function to every member of the list.</source>
          <target state="translated">목록의 모든 멤버에 함수를 적용하여 새 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="8c777fd21aae1a111c13e4180f17d92ad1e4bea9" translate="yes" xml:space="preserve">
          <source>Builds a new list by reversing the elements in the list.</source>
          <target state="translated">목록의 요소를 반대로하여 새 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="840c2a89bc10a5e1dac3006c95ca55a3a09ecddc" translate="yes" xml:space="preserve">
          <source>Builds a new list from an Array</source>
          <target state="translated">배열에서 새 목록을 작성합니다</target>
        </trans-unit>
        <trans-unit id="61f07c577b586248fb975aece7ea337073deb2ba" translate="yes" xml:space="preserve">
          <source>Builds a new list from an element.</source>
          <target state="translated">요소에서 새 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="b94504c52807d8e2de0e2759c05af1dedd53161a" translate="yes" xml:space="preserve">
          <source>Builds a new list from an iterator</source>
          <target state="translated">반복자에서 새 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="bc7f07a54d482cfa18d64996b71c663f3505a6a9" translate="yes" xml:space="preserve">
          <source>Builds a new list from the sequence passed in.</source>
          <target state="translated">전달 된 시퀀스에서 새 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="37e3e94afaae51e75dba1a2bd47b01f8f7489e70" translate="yes" xml:space="preserve">
          <source>Builds a new list that is the concatenation of this list and the provided list.</source>
          <target state="translated">이리스트와 제공된리스트를 연결 한 새로운리스트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="94af24fa8a01ad379be7e099f09ff6885c6b5a40" translate="yes" xml:space="preserve">
          <source>Builds a new list with an element added to the front of this list.</source>
          <target state="translated">이리스트의 앞에 요소가 추가 된 새로운리스트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f5593fc0c4d734d85ab48b19ded1981d511955bd" translate="yes" xml:space="preserve">
          <source>Builds a new list with those elements that satisfy a provided predicate.</source>
          <target state="translated">제공된 조건자를 만족하는 요소로 새 목록을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a58b3e666a8d4cccd33c7faedbcf9c705de8ca8a" translate="yes" xml:space="preserve">
          <source>Builds a pair of lists, the first of which is made up of the elements satisfying the supplied predicate and the second of which is made up of those that do not.</source>
          <target state="translated">첫 번째 목록은 제공된 술어를 충족시키는 요소로 구성되고 두 번째 목록은 그렇지 않은 목록으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="ad797eb73c604f71010c4344c8594429025a1fcb" translate="yes" xml:space="preserve">
          <source>Builds an environment from the command line. This is done before the Main actor is created.</source>
          <target state="translated">명령 행에서 환경을 빌드합니다. 메인 액터가 생성되기 전에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="229cc153339003ab9f96c580dbecd47b5d7e08f5" translate="yes" xml:space="preserve">
          <source>Builds and returns the spec for a CLI with four bool options.</source>
          <target state="translated">4 가지 bool 옵션을 사용하여 CLI의 스펙을 빌드하고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c70a8b09f165470968ca2cc586f0e2d43bac8ca1" translate="yes" xml:space="preserve">
          <source>Builds and returns the spec for a CLI with short options of each type.</source>
          <target state="translated">각 유형의 짧은 옵션을 사용하여 CLI의 스펙을 빌드하고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ee4a81524f2cafa7c98e11ef526d85eecd947072" translate="yes" xml:space="preserve">
          <source>Builds and returns the spec for a sample chat client's CLI.</source>
          <target state="translated">샘플 채팅 클라이언트의 CLI에 대한 스펙을 빌드하고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="42cb4b49da59c900b64fd092d474a1e8c3520839" translate="yes" xml:space="preserve">
          <source>Builtin package</source>
          <target state="translated">내장 패키지</target>
        </trans-unit>
        <trans-unit id="0018c37e42699360eb2f5ebcf7957ec9eb900b19" translate="yes" xml:space="preserve">
          <source>Bureaucracy package</source>
          <target state="translated">관료주의 패키지</target>
        </trans-unit>
        <trans-unit id="28afe6ac2e329b7f09e239e07c663e5aeba6cb4b" translate="yes" xml:space="preserve">
          <source>By default all tests are run concurrently. This may be a problem for some tests, eg if they manipulate an external file or use a system resource. To fix this issue any number of tests may be put into an exclusion group.</source>
          <target state="translated">기본적으로 모든 테스트는 동시에 실행됩니다. 외부 파일을 조작하거나 시스템 리소스를 사용하는 등 일부 테스트에서는 문제가 될 수 있습니다. 이 문제를 해결하기 위해 많은 수의 테스트를 제외 그룹에 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2517089bb660ea6f2071d70481f04c16dfc094a0" translate="yes" xml:space="preserve">
          <source>By default label is empty. You can set it up by overriding &lt;code&gt;label(): String&lt;/code&gt; method in unit test.</source>
          <target state="translated">기본적으로 레이블은 비어 있습니다. 단위 테스트에서 &lt;code&gt;label(): String&lt;/code&gt; 메서드를 재정 의하여 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6f4687101a95a985850858500244da869545273" translate="yes" xml:space="preserve">
          <source>By default, packets sent to a multicast address will be received by the sending system if it has subscribed to that address. Disabling loopback prevents this.</source>
          <target state="translated">기본적으로 멀티 캐스트 주소로 전송 된 패킷은 해당 주소에 가입 한 경우 전송 시스템에서 수신합니다. 루프백을 비활성화하면이를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="850c8d8a4ec8a87bb8b6824c694f01594a1d524a" translate="yes" xml:space="preserve">
          <source>By default, the OS will choose which address is used to send packets bound for multicast addresses. This can be used to force a specific interface. To revert to allowing the OS to choose, call with an empty string.</source>
          <target state="translated">기본적으로 OS는 멀티 캐스트 주소에 바인딩 된 패킷을 보내는 데 사용할 주소를 선택합니다. 특정 인터페이스를 강제 실행하는 데 사용할 수 있습니다. OS가 선택할 수 있도록 되돌리려면 빈 문자열로 전화하십시오.</target>
        </trans-unit>
        <trans-unit id="8375e3763abda622901068c876082be7162a1bd5" translate="yes" xml:space="preserve">
          <source>By default, the results are printed to stdout like so:</source>
          <target state="translated">기본적으로 결과는 다음과 같이 표준 출력으로 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="4716fe4d7624bc9be61017ca03bd7dbda8351c9b" translate="yes" xml:space="preserve">
          <source>By default, the search starts at the first element of the array, returns the first instance of &lt;code&gt;value&lt;/code&gt; found, and uses object identity for comparison.</source>
          <target state="translated">기본적으로 검색은 배열의 첫 번째 요소에서 시작하여 발견 된 첫 번째 &lt;code&gt;value&lt;/code&gt; 인스턴스를 반환하며 비교를 위해 개체 ID를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="758d15e7d38b114d4f0f02084745650460b857d4" translate="yes" xml:space="preserve">
          <source>By default, the search starts at the first element of the vector, returns the first instance of &lt;code&gt;value&lt;/code&gt; found, and uses object identity for comparison.</source>
          <target state="translated">기본적으로 검색은 벡터의 첫 번째 요소에서 시작하여 발견 된 첫 번째 &lt;code&gt;value&lt;/code&gt; 인스턴스를 반환하며 비교를 위해 개체 ID를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="75b74600406627f8324c89d8cff6ce38006cbdf5" translate="yes" xml:space="preserve">
          <source>By default, the search starts at the last element of the array, returns the first instance of &lt;code&gt;value&lt;/code&gt; found, and uses object identity for comparison.</source>
          <target state="translated">기본적으로 검색은 배열의 마지막 요소에서 시작하여 발견 된 첫 번째 &lt;code&gt;value&lt;/code&gt; 인스턴스를 반환하며 비교를 위해 개체 ID를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b241a7f63b4a169436235e969ba11bdf30d3e92c" translate="yes" xml:space="preserve">
          <source>ByteSeq</source>
          <target state="translated">ByteSeq</target>
        </trans-unit>
        <trans-unit id="632bc383120a105486b03072d2fce99b446779f0" translate="yes" xml:space="preserve">
          <source>ByteSeqIter</source>
          <target state="translated">ByteSeqIter</target>
        </trans-unit>
        <trans-unit id="2d9d906d114c74fe8948cf68a058b379e8814b1b" translate="yes" xml:space="preserve">
          <source>ByteSeqIter.values()</source>
          <target state="translated">ByteSeqIter.values()</target>
        </trans-unit>
        <trans-unit id="cab282186b9927e13aa603ef2945e55de0e33ede" translate="yes" xml:space="preserve">
          <source>CLI Package</source>
          <target state="translated">CLI 패키지</target>
        </trans-unit>
        <trans-unit id="509670475491d1993f166598187a01d6801a9cf3" translate="yes" xml:space="preserve">
          <source>Calculate the hash of some type. This is an alias of the type parameter to allow data structures to hash things without consuming them.</source>
          <target state="translated">어떤 유형의 해시를 계산하십시오. 이것은 데이터 구조가 데이터를 소비하지 않고 해시하도록 허용하는 type 매개 변수의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="ffcf2297ab8f6dda54384bb1ad4791f2b9854ca3" translate="yes" xml:space="preserve">
          <source>Calculate the modulo after floored integer division, rounded towards negative infinity (&lt;code&gt;fld&lt;/code&gt;).</source>
          <target state="translated">음의 무한대 ( &lt;code&gt;fld&lt;/code&gt; )로 반올림 된 바닥 정수 분할 후 모듈로를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="152bfaa58fa03cd259fa7d0505048e6e57e6c570" translate="yes" xml:space="preserve">
          <source>Calculate the modulo of this number after floored division by &lt;code&gt;y&lt;/code&gt; and return the result and a flag indicating division by zero or overflow.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; 로 바닥 나누기 후이 숫자의 모듈로를 계산하고 결과와 0으로 나누기 또는 오버플로를 나타내는 플래그를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3fb2387c0fcce4e73b19d4d445b8e71be812f75a" translate="yes" xml:space="preserve">
          <source>Calculate the remainder after integer division, rounded towards zero (&lt;code&gt;div&lt;/code&gt;).</source>
          <target state="translated">정수 나누기 후 나머지를 0으로 반올림하여 계산합니다 ( &lt;code&gt;div&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="77ad684533c93acd48d2040f8f8bebe0fcf6c4d2" translate="yes" xml:space="preserve">
          <source>Calculate the remainder of this number divided by &lt;code&gt;y&lt;/code&gt; and return the result and a flag indicating division by zero or overflow.</source>
          <target state="translated">이 숫자의 나머지를 &lt;code&gt;y&lt;/code&gt; 로 나눈 값을 계산하고 결과와 0으로 나눈 값 또는 오버플로를 나타내는 플래그를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a4fe20685556b8e06006d6460a27cd89feded26" translate="yes" xml:space="preserve">
          <source>Calculates the modulo of this number after floored division by &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; 로 바닥을 나눈 후이 숫자의 모듈로를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="ed8f19dc58508be116cf0aaef72dabe5bcda2349" translate="yes" xml:space="preserve">
          <source>Calculates the modulo of this number and &lt;code&gt;y&lt;/code&gt; after floored division (&lt;code&gt;fld&lt;/code&gt;). The result has the sign of the divisor.</source>
          <target state="translated">바닥 나누기 ( &lt;code&gt;fld&lt;/code&gt; ) 후이 수와 &lt;code&gt;y&lt;/code&gt; 의 모듈로를 계산합니다 . 결과는 제수의 부호를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9bd3ecf5a93443e93f284e3f5906e8c9e2106ad8" translate="yes" xml:space="preserve">
          <source>Calculates the quotient of this number and &lt;code&gt;y&lt;/code&gt; and the remainder.</source>
          <target state="translated">이 수와 &lt;code&gt;y&lt;/code&gt; 및 나머지 의 몫을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="dac0f23f39478e75605cdb6d1f7a0cc90cc5f508" translate="yes" xml:space="preserve">
          <source>Calculates the remainder of this number divided by &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">이 수의 나머지를 &lt;code&gt;y&lt;/code&gt; 로 나눈 값을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="693247b38ab8409ec7a5e9094f59b460d16b9da0" translate="yes" xml:space="preserve">
          <source>Calculates the remainder of this number divided by y. The result has the sign of the dividend.</source>
          <target state="translated">이 숫자의 나머지를 y로 나눈 값을 계산합니다. 결과에는 배당금이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="dbea9f2f2e27a5aa2983af4a9d873ff5d43ef8eb" translate="yes" xml:space="preserve">
          <source>Call the &lt;code&gt;compact()&lt;/code&gt; method to ask the GC to reclaim unused space. There are no guarantees that the GC will actually reclaim any space.</source>
          <target state="translated">사용하지 않는 공간을 회수하도록 GC에 요청 하려면 &lt;code&gt;compact()&lt;/code&gt; 메서드를 호출하십시오 . GC가 실제로 공간을 확보 할 것이라는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a253fc044109cc0a6b7ccae03f737ce132cf47c" translate="yes" xml:space="preserve">
          <source>Call to fail an action, which will also cause the entire test to fail immediately, without waiting the rest of the outstanding actions.</source>
          <target state="translated">조치 실패를 요청하면 나머지 미해결 조치를 기다리지 않고 전체 테스트가 즉시 실패합니다.</target>
        </trans-unit>
        <trans-unit id="756164f83a5c37b8dee33555f80c86085b7e50b6" translate="yes" xml:space="preserve">
          <source>Call when ProcessMonitor terminates to cleanup ProcessNotify. We return the exit code of the child process.</source>
          <target state="translated">ProcessNotify를 정리하기 위해 ProcessMonitor가 종료 될 때 호출합니다. 자식 프로세스의 종료 코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e3cc4fcde192a29184309df223a26318b5a6ff09" translate="yes" xml:space="preserve">
          <source>Call when ProcessMonitor terminates to cleanup ProcessNotify. We return the exit status of the child process, it can be either an instance of &lt;a href=&quot;process-exited&quot;&gt;Exited&lt;/a&gt; if the process finished. The childs exit code can be retrieved using &lt;a href=&quot;process-exited#exit_code&quot;&gt;Exited.exit_code()&lt;/a&gt;.</source>
          <target state="translated">ProcessMonitor가 종료 될 때 호출하여 ProcessNotify를 정리합니다. 자식 프로세스의 종료 상태를 반환합니다 . 프로세스가 완료되면 &lt;a href=&quot;process-exited&quot;&gt;Exited&lt;/a&gt; 인스턴스가 될 수 있습니다 . &lt;a href=&quot;process-exited#exit_code&quot;&gt;자식의&lt;/a&gt; 종료 코드는 Exited.exit_code ()를 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c1188100cf4caf24f9d45dcc311ef3e22d77eb5" translate="yes" xml:space="preserve">
          <source>Called before before attempting to connect to the destination server In order to connect via proxy, return the host &amp;amp; service for the proxy server.</source>
          <target state="translated">대상 서버에 연결을 시도하기 전에 호출됩니다. 프록시를 통해 연결하려면 프록시 서버의 호스트 및 서비스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3390eb6b422e8db043fe7a2008de70a53b2e7f1d" translate="yes" xml:space="preserve">
          <source>Called if it wasn't possible to bind the listener to an address.</source>
          <target state="translated">리스너를 주소에 바인딩 할 수없는 경우 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f151c364eeea1a4964ffe827797b607c37a81f1b" translate="yes" xml:space="preserve">
          <source>Called if it wasn't possible to bind the socket to an address.</source>
          <target state="translated">소켓을 주소에 바인딩 할 수없는 경우 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a0c2c64ea75bc062a867d247cf28aed8e086a287" translate="yes" xml:space="preserve">
          <source>Called if name resolution succeeded for a TCPConnection and we are now waiting for a connection to the server to succeed. The count is the number of connections we're trying. The notifier will be informed each time the count changes, until a connection is made or connect_failed() is called.</source>
          <target state="translated">TCPConnection에 대한 이름 확인에 성공했으며 이제 서버 연결이 성공하기를 기다리는 중입니다. 카운트는 우리가 시도하는 연결 수입니다. 연결이 이루어 지거나 connect_failed ()가 호출 될 때까지 카운트가 변경 될 때마다 알리미에게 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="085db772c8c4e3cd77ca6ea8141345b452d6fb31" translate="yes" xml:space="preserve">
          <source>Called if the signal is disposed. This is also called if the notifier returns false.</source>
          <target state="translated">신호가 폐기되면 호출됩니다. 알리미가 false를 리턴하는 경우에도 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2a507887c51f1442793c3615f53acdcf4d22336c" translate="yes" xml:space="preserve">
          <source>Called if the timer is cancelled. This is also called if the notifier returns false from its &lt;code&gt;apply&lt;/code&gt; method.</source>
          <target state="translated">타이머가 취소되면 호출됩니다. 알리미가 &lt;code&gt;apply&lt;/code&gt; 메소드 에서 false를 리턴하는 경우에도 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f96e5ae0df657bcf0aeed651ef18591f992c8339" translate="yes" xml:space="preserve">
          <source>Called when ProcessMonitor terminates to cleanup ProcessNotify We receive the exit code of the child process from ProcessMonitor.</source>
          <target state="translated">정리를 위해 ProcessMonitor가 종료 될 때 호출됩니다. ProcessNotify ProcessMonitor에서 하위 프로세스의 종료 코드를받습니다.</target>
        </trans-unit>
        <trans-unit id="c7b6ca47f9a75962c9b8dd52e9d6d9f626ebaa14" translate="yes" xml:space="preserve">
          <source>Called when a TCPConnection is accepted by a TCPListener.</source>
          <target state="translated">TCPListener가 TCPConnection을 수락하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1c55c6b401f5e15102f9e2180e2134b84adfa296" translate="yes" xml:space="preserve">
          <source>Called when data is available on the stream.</source>
          <target state="translated">스트림에서 데이터를 사용할 수있을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8a26a94a4cf44c3c545f761f5cc7284991f7d1f2" translate="yes" xml:space="preserve">
          <source>Called when data is sent on the connection. This gives the notifier an opportunity to modify sent data before it is written. To swallow data, return an empty string.</source>
          <target state="translated">연결에서 데이터가 전송 될 때 호출됩니다. 이를 통해 알리미는 전송 된 데이터를 쓰기 전에 수정할 수 있습니다. 데이터를 삼키려면 빈 문자열을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="3eada5f5d986208ea8b723fe2eb3dc2468fb12b6" translate="yes" xml:space="preserve">
          <source>Called when multiple chunks of data are sent to the connection in a single call. This gives the notifier an opportunity to modify the sent data chunks before they are written. To swallow the send, return an empty Array[String].</source>
          <target state="translated">한 번의 호출로 여러 데이터 청크가 연결로 전송 될 때 호출됩니다. 이를 통해 알리미는 전송 된 데이터 청크를 쓰기 전에 수정할 수 있습니다. 송신을 삼키려면 빈 Array [String]을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="561ede13ef641cd1580f404623a80ca2e2a78f21" translate="yes" xml:space="preserve">
          <source>Called when new data is received on STDERR of the forked process</source>
          <target state="translated">분기 된 프로세스의 STDERR에서 새 데이터를 수신하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1133d847e19b3d056b9cef777bd18e3beb22cd3f" translate="yes" xml:space="preserve">
          <source>Called when new data is received on STDOUT of the forked process</source>
          <target state="translated">분기 프로세스의 STDOUT에 새 데이터가 수신되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="58a3c70bba547cff2cffc282aceb5daec80b0a8d" translate="yes" xml:space="preserve">
          <source>Called when new data is received on the connection. Return true if you want to continue receiving messages without yielding until you read max_size on the TCPConnection. Return false to cause the TCPConnection to yield now.</source>
          <target state="translated">연결에서 새 데이터가 수신되면 호출됩니다. TCPConnection에서 max_size를 읽을 때까지 양보하지 않고 메시지를 계속 받으려면 true를 리턴하십시오. TCPConnection이 생성되도록하려면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e1f3b20571f6e2fdb7295f86256250a146a3a79" translate="yes" xml:space="preserve">
          <source>Called when new data is received on the socket.</source>
          <target state="translated">소켓에서 새 데이터가 수신 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c6e147f68b88a4dc2bc4ff1a8cd8bcbcda264bc8" translate="yes" xml:space="preserve">
          <source>Called when no more data will arrive on the stream.</source>
          <target state="translated">더 이상 데이터가 스트림에 도착하지 않을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ca072c0e4133f004933fcd6a9448533a78797f00" translate="yes" xml:space="preserve">
          <source>Called when the connection has been told to expect a certain quantity of bytes. This allows nested notifiers to change the expected quantity, which allows a lower level protocol to handle any framing (e.g. SSL).</source>
          <target state="translated">연결이 특정 바이트 수를 예상하도록 지시되었을 때 호출됩니다. 이를 통해 중첩 된 알리미가 예상 수량을 변경하여 하위 레벨 프로토콜이 프레임 (예 : SSL)을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="87f607f88496b74e1166f82037807d62c526ccae" translate="yes" xml:space="preserve">
          <source>Called when the connection is closed.</source>
          <target state="translated">연결이 닫히면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="37d736d3a17ab87fa0841cfac79f9fce6519d4bf" translate="yes" xml:space="preserve">
          <source>Called when the connection starts experiencing TCP backpressure. You should respond to this by pausing additional calls to &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writev&lt;/code&gt; until you are informed that pressure has been released. Failure to respond to the &lt;code&gt;throttled&lt;/code&gt; notification will result in outgoing data queuing in the connection and increasing memory usage.</source>
          <target state="translated">연결에 TCP 역압이 발생하면 호출됩니다. 압력이 해제되었다는 메시지가 표시 될 때까지 &lt;code&gt;write&lt;/code&gt; 및 &lt;code&gt;writev&lt;/code&gt; 에 대한 추가 호출을 일시 중지하여 이에 응답해야합니다 . &lt;code&gt;throttled&lt;/code&gt; 알림 에 응답하지 않으면 연결에서 나가는 데이터 큐잉이 발생하고 메모리 사용량이 증가합니다.</target>
        </trans-unit>
        <trans-unit id="d074436e0feb6a01f84056eae629140dd2461003" translate="yes" xml:space="preserve">
          <source>Called when the connection stops experiencing TCP backpressure. Upon receiving this notification, you should feel free to start making calls to &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writev&lt;/code&gt; again.</source>
          <target state="translated">연결이 TCP 역압 발생을 멈출 때 호출됩니다. 이 알림을 받으면 언제든지 &lt;code&gt;write&lt;/code&gt; / &lt;code&gt;writev&lt;/code&gt; 호출을 시작해야 합니다.</target>
        </trans-unit>
        <trans-unit id="e13f46b283e9b782f3fb4fa82003c6d0d4bd4532" translate="yes" xml:space="preserve">
          <source>Called when the listener has been bound to an address.</source>
          <target state="translated">리스너가 주소에 바인딩되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a8d50106daaffd62788625b3cca890249089a231" translate="yes" xml:space="preserve">
          <source>Called when the listener is closed.</source>
          <target state="translated">리스너가 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="40b5242f591d950af8c706e3f6872ca7e608b4f5" translate="yes" xml:space="preserve">
          <source>Called when the previous promise is rejected.</source>
          <target state="translated">이전 약속이 거부되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="84ef4ee2e0c7237e1221425e60cdcb0b9f630842" translate="yes" xml:space="preserve">
          <source>Called when the process monitor has been told to expect a certain quantity of bytes. This allows nested notifiers to change the expected quantity, which allows a lower level protocol to handle any framing.</source>
          <target state="translated">프로세스 모니터가 특정 바이트 수를 예상하도록 지시되었을 때 호출됩니다. 이를 통해 중첩 된 알리미가 예상 수량을 변경하여 하위 레벨 프로토콜이 프레이밍을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="c03614b0a4c4ecae43d9aa84fcfcd694a6f9d4d8" translate="yes" xml:space="preserve">
          <source>Called when the signal is received, or when the AsioEventID can be destroyed.</source>
          <target state="translated">신호가 수신되거나 AsioEventID가 소멸 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7b81924926932447b92f13bb000d6ed5acde6fbb" translate="yes" xml:space="preserve">
          <source>Called when the socket has been bound to an address.</source>
          <target state="translated">소켓이 주소에 바인딩되었을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0970e02d9cddb591bda4674612ee5443cfa2c8ce" translate="yes" xml:space="preserve">
          <source>Called when the socket is closed.</source>
          <target state="translated">소켓이 닫힐 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8d5a81e271b1a0c5f489b6667330d2a7316b43c4" translate="yes" xml:space="preserve">
          <source>Called when we have failed to connect to all possible addresses for the server. At this point, the connection will never be established.</source>
          <target state="translated">서버의 가능한 모든 주소에 연결하지 못하면 호출됩니다. 이 시점에서 연결이 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ff0f58e7317425cba445b50ee30682b12fc67da" translate="yes" xml:space="preserve">
          <source>Called when we have successfully connected to the server.</source>
          <target state="translated">서버에 성공적으로 연결되면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="88d3dcdbe1a257aea4c594ff085f3be5d87a1ca4" translate="yes" xml:space="preserve">
          <source>Called with the result of the previous promise when it is fulfilled.</source>
          <target state="translated">이전 약속이 이행되면 결과로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d27b1a01c9ace68b71e587d655b869e4fad1c8c7" translate="yes" xml:space="preserve">
          <source>Called with the the number of times the signal has fired since this was last called. Return false to stop listening for the signal.</source>
          <target state="translated">신호가 마지막으로 호출 된 이후 신호가 발생한 횟수와 함께 호출됩니다. 신호 수신을 중지하려면 false를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="cafb27668c66ce4dbf0eb5d4b90bab8c9bc2e113" translate="yes" xml:space="preserve">
          <source>Called with the the number of times the timer has fired since this was last called. Usually, the value of &lt;code&gt;count&lt;/code&gt; will be 1. If it is not 1, it means that the timer isn't firing on schedule.</source>
          <target state="translated">이것이 마지막으로 호출 된 이후 타이머가 실행 된 횟수와 함께 호출됩니다. 일반적으로 &lt;code&gt;count&lt;/code&gt; 의 값은 1입니다. 1이 아닌 경우 일정에 따라 타이머가 실행되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a74e64d230d5078321b307494b17b1b7f469738c" translate="yes" xml:space="preserve">
          <source>Calling the complete method will finish the test immediately, without waiting for any outstanding actions to be completed.</source>
          <target state="translated">complete 메소드를 호출하면 미해결 조치가 완료 될 때까지 기다리지 않고 테스트가 즉시 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="603efa47643fa0e0ba312e2ea4849035da298982" translate="yes" xml:space="preserve">
          <source>Can be &lt;code&gt;None&lt;/code&gt; for artificially constructed &lt;code&gt;Env&lt;/code&gt; instances.</source>
          <target state="translated">인위적으로 구성된 &lt;code&gt;Env&lt;/code&gt; 인스턴스에는 &lt;code&gt;None&lt;/code&gt; 이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ff978b63f2629550f994436d34b7a55b2c0bc1d" translate="yes" xml:space="preserve">
          <source>Can be called in a long test to set up expectations for one or more actions that, when all completed, will complete the test.</source>
          <target state="translated">모두 완료되면 테스트를 완료 할 하나 이상의 조치에 대한 기대치를 설정하기 위해 장기 테스트에서 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3a1354d9bdb20c6070f44df59fa07e78df30109" translate="yes" xml:space="preserve">
          <source>Cancels a timer.</source>
          <target state="translated">타이머를 취소합니다.</target>
        </trans-unit>
        <trans-unit id="519213682325b7471db48707c69c12e2ead883ef" translate="yes" xml:space="preserve">
          <source>Cancels all pending timers.</source>
          <target state="translated">보류중인 모든 타이머를 취소합니다.</target>
        </trans-unit>
        <trans-unit id="b38fd978df2ce23922cc5abbf5f4b67237acf37b" translate="yes" xml:space="preserve">
          <source>Cap</source>
          <target state="translated">Cap</target>
        </trans-unit>
        <trans-unit id="bade2d86522398aa16f769d1d639abb7c977139c" translate="yes" xml:space="preserve">
          <source>Cap._id()</source>
          <target state="translated">Cap._id()</target>
        </trans-unit>
        <trans-unit id="439e691e4be6dfddab036fcf47f63f9677442504" translate="yes" xml:space="preserve">
          <source>Cap.accept()</source>
          <target state="translated">Cap.accept()</target>
        </trans-unit>
        <trans-unit id="623b464ea4d593a78996a1e4bc8f68023726d218" translate="yes" xml:space="preserve">
          <source>Cap.acl_check()</source>
          <target state="translated">Cap.acl_check()</target>
        </trans-unit>
        <trans-unit id="bf2e75b0c331e5ce8d218c5427153cbeb1dbec70" translate="yes" xml:space="preserve">
          <source>Cap.acl_delete()</source>
          <target state="translated">Cap.acl_delete()</target>
        </trans-unit>
        <trans-unit id="53d5bc355623e0d23fab0ea3fb9a8b20a0c7d1db" translate="yes" xml:space="preserve">
          <source>Cap.acl_get()</source>
          <target state="translated">Cap.acl_get()</target>
        </trans-unit>
        <trans-unit id="2ea47e7e25a96bcc5d09533e558e43f4002727f1" translate="yes" xml:space="preserve">
          <source>Cap.acl_set()</source>
          <target state="translated">Cap.acl_set()</target>
        </trans-unit>
        <trans-unit id="94232298b0a19909de5e087bad95f0daf28ae642" translate="yes" xml:space="preserve">
          <source>Cap.bind()</source>
          <target state="translated">Cap.bind()</target>
        </trans-unit>
        <trans-unit id="cd7ba7034d5e0ba0a2b86655be2f1998467b79ed" translate="yes" xml:space="preserve">
          <source>Cap.bindat()</source>
          <target state="translated">Cap.bindat()</target>
        </trans-unit>
        <trans-unit id="bf126c0702c4657323e25f2c3800d02f4322c691" translate="yes" xml:space="preserve">
          <source>Cap.chflagsat()</source>
          <target state="translated">Cap.chflagsat()</target>
        </trans-unit>
        <trans-unit id="2358ae9371efdec990e167ced00858eccdbd0ccc" translate="yes" xml:space="preserve">
          <source>Cap.connect()</source>
          <target state="translated">Cap.connect()</target>
        </trans-unit>
        <trans-unit id="9827bfcd4d62d151faaa4807020da8068595701b" translate="yes" xml:space="preserve">
          <source>Cap.connectat()</source>
          <target state="translated">Cap.connectat()</target>
        </trans-unit>
        <trans-unit id="1f2d29fe9bde2e1e196498a32fdd00ed42faf68e" translate="yes" xml:space="preserve">
          <source>Cap.creat()</source>
          <target state="translated">Cap.creat()</target>
        </trans-unit>
        <trans-unit id="5953054bd801a839073d48de5d11eb42868b8ce5" translate="yes" xml:space="preserve">
          <source>Cap.create()</source>
          <target state="translated">Cap.create()</target>
        </trans-unit>
        <trans-unit id="6606b41a4648329e2885c4fef171020d53a37424" translate="yes" xml:space="preserve">
          <source>Cap.enter()</source>
          <target state="translated">Cap.enter()</target>
        </trans-unit>
        <trans-unit id="831652c8c7274943cf9e18946e805e3956bd21e4" translate="yes" xml:space="preserve">
          <source>Cap.eq()</source>
          <target state="translated">Cap.eq()</target>
        </trans-unit>
        <trans-unit id="b95da343457a5966ed452f179024b46d5695699c" translate="yes" xml:space="preserve">
          <source>Cap.event()</source>
          <target state="translated">Cap.event()</target>
        </trans-unit>
        <trans-unit id="dd0eab6a96eb62894efda28b402bb38dd2916cb2" translate="yes" xml:space="preserve">
          <source>Cap.exattr_delete()</source>
          <target state="translated">Cap.exattr_delete()</target>
        </trans-unit>
        <trans-unit id="885261a1dd4f5551b2fd79be6a4d1979282d9596" translate="yes" xml:space="preserve">
          <source>Cap.exattr_get()</source>
          <target state="translated">Cap.exattr_get()</target>
        </trans-unit>
        <trans-unit id="3ca9647f2630d863a517611a2be53695cce6f04b" translate="yes" xml:space="preserve">
          <source>Cap.exattr_list()</source>
          <target state="translated">Cap.exattr_list()</target>
        </trans-unit>
        <trans-unit id="8aad15044bf2ffae5bee95bdf157e381987731af" translate="yes" xml:space="preserve">
          <source>Cap.exattr_set()</source>
          <target state="translated">Cap.exattr_set()</target>
        </trans-unit>
        <trans-unit id="43f75e4dae944e995ae966bf879b50c8c0ab0c1c" translate="yes" xml:space="preserve">
          <source>Cap.fchdir()</source>
          <target state="translated">Cap.fchdir()</target>
        </trans-unit>
        <trans-unit id="b68ce657740dbc5b8fc8735bd9f3111a409ecc92" translate="yes" xml:space="preserve">
          <source>Cap.fchflags()</source>
          <target state="translated">Cap.fchflags()</target>
        </trans-unit>
        <trans-unit id="3e280c94220bc61e9a5b06e2475fbba7dc8bad89" translate="yes" xml:space="preserve">
          <source>Cap.fchmod()</source>
          <target state="translated">Cap.fchmod()</target>
        </trans-unit>
        <trans-unit id="0fdacafdab336c044c77a4e98963e421ed7bb2bd" translate="yes" xml:space="preserve">
          <source>Cap.fchmodat()</source>
          <target state="translated">Cap.fchmodat()</target>
        </trans-unit>
        <trans-unit id="3124ded19639ffed321f845eda2cb62eb9d99631" translate="yes" xml:space="preserve">
          <source>Cap.fchown()</source>
          <target state="translated">Cap.fchown()</target>
        </trans-unit>
        <trans-unit id="e93b27d1bf313715ac09d0da392520e50f25d8a6" translate="yes" xml:space="preserve">
          <source>Cap.fchownat()</source>
          <target state="translated">Cap.fchownat()</target>
        </trans-unit>
        <trans-unit id="b3ebe87e2ad19d55efdff7a16a41b519a570bb2a" translate="yes" xml:space="preserve">
          <source>Cap.fcntl()</source>
          <target state="translated">Cap.fcntl()</target>
        </trans-unit>
        <trans-unit id="a1d3df622bb2fbf9108b883516d1d09c03f3b8c9" translate="yes" xml:space="preserve">
          <source>Cap.fexecve()</source>
          <target state="translated">Cap.fexecve()</target>
        </trans-unit>
        <trans-unit id="5905cd47b89aee2d61dc1bcc3556ce62defeb142" translate="yes" xml:space="preserve">
          <source>Cap.flock()</source>
          <target state="translated">Cap.flock()</target>
        </trans-unit>
        <trans-unit id="decfce702d4c400c3a77b949610cf07cc95620d8" translate="yes" xml:space="preserve">
          <source>Cap.fpathconf()</source>
          <target state="translated">Cap.fpathconf()</target>
        </trans-unit>
        <trans-unit id="de64c92bd1aaef613464dbbb2f7b9e07be0e2b2a" translate="yes" xml:space="preserve">
          <source>Cap.fsck()</source>
          <target state="translated">Cap.fsck()</target>
        </trans-unit>
        <trans-unit id="c123a4648896b7db884132ea5524d5e8d64d1dcb" translate="yes" xml:space="preserve">
          <source>Cap.fstat()</source>
          <target state="translated">Cap.fstat()</target>
        </trans-unit>
        <trans-unit id="eaa4be7b84916281e41ac12c2ad08bce0c2adc1f" translate="yes" xml:space="preserve">
          <source>Cap.fstatat()</source>
          <target state="translated">Cap.fstatat()</target>
        </trans-unit>
        <trans-unit id="884603a9738cf0111f458e9caec4854e35984dfc" translate="yes" xml:space="preserve">
          <source>Cap.fstatfs()</source>
          <target state="translated">Cap.fstatfs()</target>
        </trans-unit>
        <trans-unit id="78aeb07572337217470dda0b962a6e93e2d8da72" translate="yes" xml:space="preserve">
          <source>Cap.fsync()</source>
          <target state="translated">Cap.fsync()</target>
        </trans-unit>
        <trans-unit id="319da0149aa83cae9d42efdcb03cd46c2eec44b0" translate="yes" xml:space="preserve">
          <source>Cap.ftruncate()</source>
          <target state="translated">Cap.ftruncate()</target>
        </trans-unit>
        <trans-unit id="dfae5db74843554c93be48ac538c658f0d624bca" translate="yes" xml:space="preserve">
          <source>Cap.futimes()</source>
          <target state="translated">Cap.futimes()</target>
        </trans-unit>
        <trans-unit id="b459b581860a35d54bde2f64fa862eb747ce8cf0" translate="yes" xml:space="preserve">
          <source>Cap.futimesat()</source>
          <target state="translated">Cap.futimesat()</target>
        </trans-unit>
        <trans-unit id="37d778f3968e96dd8139e32504d17c86388cac02" translate="yes" xml:space="preserve">
          <source>Cap.getpeername()</source>
          <target state="translated">Cap.getpeername()</target>
        </trans-unit>
        <trans-unit id="375c955d6566a68bfee2799542a227e63b01ad79" translate="yes" xml:space="preserve">
          <source>Cap.getsockname()</source>
          <target state="translated">Cap.getsockname()</target>
        </trans-unit>
        <trans-unit id="83464065a3588934180770a3bf63725710ea0bfc" translate="yes" xml:space="preserve">
          <source>Cap.getsockopt()</source>
          <target state="translated">Cap.getsockopt()</target>
        </trans-unit>
        <trans-unit id="d3c7013ab4e1c3e08670e349067e2922e2dc3568" translate="yes" xml:space="preserve">
          <source>Cap.ioctl()</source>
          <target state="translated">Cap.ioctl()</target>
        </trans-unit>
        <trans-unit id="899d19d3c27f465aa6c868747fe006e9feca80d1" translate="yes" xml:space="preserve">
          <source>Cap.kqueue()</source>
          <target state="translated">Cap.kqueue()</target>
        </trans-unit>
        <trans-unit id="953746c196684348bd29ed2f3c23c935d538bcfa" translate="yes" xml:space="preserve">
          <source>Cap.kqueue_change()</source>
          <target state="translated">Cap.kqueue_change()</target>
        </trans-unit>
        <trans-unit id="ce93d3aa62cf8d4b7066a3919ece5470ae77b593" translate="yes" xml:space="preserve">
          <source>Cap.kqueue_event()</source>
          <target state="translated">Cap.kqueue_event()</target>
        </trans-unit>
        <trans-unit id="74e7285da2801b335f1a918bff382f2f910c71a0" translate="yes" xml:space="preserve">
          <source>Cap.linkat()</source>
          <target state="translated">Cap.linkat()</target>
        </trans-unit>
        <trans-unit id="e6ce6d0d46e108ca3c68077c86f68b25db5fc9ab" translate="yes" xml:space="preserve">
          <source>Cap.listen()</source>
          <target state="translated">Cap.listen()</target>
        </trans-unit>
        <trans-unit id="ccd90715de6a3a2845578f7c5fbf793fd6800eab" translate="yes" xml:space="preserve">
          <source>Cap.lookup()</source>
          <target state="translated">Cap.lookup()</target>
        </trans-unit>
        <trans-unit id="96f0f254963ad9fa0075abe8dd58a77489f217aa" translate="yes" xml:space="preserve">
          <source>Cap.mac_get()</source>
          <target state="translated">Cap.mac_get()</target>
        </trans-unit>
        <trans-unit id="6c3bcf6c55118ea0f7978ad8ff2f5c94e499d8e1" translate="yes" xml:space="preserve">
          <source>Cap.mac_set()</source>
          <target state="translated">Cap.mac_set()</target>
        </trans-unit>
        <trans-unit id="45c41d9b236fe4823b284af4d897aca9d4665952" translate="yes" xml:space="preserve">
          <source>Cap.mkdirat()</source>
          <target state="translated">Cap.mkdirat()</target>
        </trans-unit>
        <trans-unit id="9e877a5e62a328dea61b11a5da9585852a61e31e" translate="yes" xml:space="preserve">
          <source>Cap.mkfifoat()</source>
          <target state="translated">Cap.mkfifoat()</target>
        </trans-unit>
        <trans-unit id="d72c02cce6a37479a9e7cb235a96ef38ef1aa814" translate="yes" xml:space="preserve">
          <source>Cap.mknodat()</source>
          <target state="translated">Cap.mknodat()</target>
        </trans-unit>
        <trans-unit id="31790e48b2b871e1524dd9184439522e7c9bc9e9" translate="yes" xml:space="preserve">
          <source>Cap.mmap()</source>
          <target state="translated">Cap.mmap()</target>
        </trans-unit>
        <trans-unit id="dd1801724c29727a89d858e3a4efd92897ce3b4b" translate="yes" xml:space="preserve">
          <source>Cap.mmap_r()</source>
          <target state="translated">Cap.mmap_r()</target>
        </trans-unit>
        <trans-unit id="e31458d62094b2c0ef1c574103a2d6d8e0c09a22" translate="yes" xml:space="preserve">
          <source>Cap.mmap_rw()</source>
          <target state="translated">Cap.mmap_rw()</target>
        </trans-unit>
        <trans-unit id="74f3e81b84db306cfafec157db8fa26cee73d155" translate="yes" xml:space="preserve">
          <source>Cap.mmap_rwx()</source>
          <target state="translated">Cap.mmap_rwx()</target>
        </trans-unit>
        <trans-unit id="969c8d76a69755f808c44d1b37bb644816f89154" translate="yes" xml:space="preserve">
          <source>Cap.mmap_rx()</source>
          <target state="translated">Cap.mmap_rx()</target>
        </trans-unit>
        <trans-unit id="1976d281268b33b5eaa7e4da0b2ee1b73686ddbb" translate="yes" xml:space="preserve">
          <source>Cap.mmap_w()</source>
          <target state="translated">Cap.mmap_w()</target>
        </trans-unit>
        <trans-unit id="a295bac1798ff94bb1dd1248bbbf1db88d261bd9" translate="yes" xml:space="preserve">
          <source>Cap.mmap_wx()</source>
          <target state="translated">Cap.mmap_wx()</target>
        </trans-unit>
        <trans-unit id="591376c611dc2bedb19a034f95bc1d8a7fcfb877" translate="yes" xml:space="preserve">
          <source>Cap.mmap_x()</source>
          <target state="translated">Cap.mmap_x()</target>
        </trans-unit>
        <trans-unit id="cfd6592b462e31a43799dea731585e5616a8d3f7" translate="yes" xml:space="preserve">
          <source>Cap.ne()</source>
          <target state="translated">Cap.ne()</target>
        </trans-unit>
        <trans-unit id="909f9add5b4eaf9491e008e7ac7d0fc2126bd886" translate="yes" xml:space="preserve">
          <source>Cap.pdgetpid()</source>
          <target state="translated">Cap.pdgetpid()</target>
        </trans-unit>
        <trans-unit id="ef0ed744bcd158a6885b22ec8166462c0f1f3e0f" translate="yes" xml:space="preserve">
          <source>Cap.pdkill()</source>
          <target state="translated">Cap.pdkill()</target>
        </trans-unit>
        <trans-unit id="1cf842a93aad231c0c7a4d3199e4f2e9300c4e02" translate="yes" xml:space="preserve">
          <source>Cap.pdwait()</source>
          <target state="translated">Cap.pdwait()</target>
        </trans-unit>
        <trans-unit id="6f58fa8acf7177983cb9c6bd5e4a5b69eb41ca39" translate="yes" xml:space="preserve">
          <source>Cap.peeloff()</source>
          <target state="translated">Cap.peeloff()</target>
        </trans-unit>
        <trans-unit id="ac13908f73ad9c6bcbe411b8a5e95d03ccffb868" translate="yes" xml:space="preserve">
          <source>Cap.pread()</source>
          <target state="translated">Cap.pread()</target>
        </trans-unit>
        <trans-unit id="a55f114d4157ecf991e6dc239a80ade70ebb9259" translate="yes" xml:space="preserve">
          <source>Cap.pwrite()</source>
          <target state="translated">Cap.pwrite()</target>
        </trans-unit>
        <trans-unit id="1443e51c5127c8790782b8521ea05683f379a100" translate="yes" xml:space="preserve">
          <source>Cap.read()</source>
          <target state="translated">Cap.read()</target>
        </trans-unit>
        <trans-unit id="11adcc13099accb6a0ad7307f8cd433c0f9207c0" translate="yes" xml:space="preserve">
          <source>Cap.recv()</source>
          <target state="translated">Cap.recv()</target>
        </trans-unit>
        <trans-unit id="5904d0072a579d112a2556cccd590c1ae4fa0a79" translate="yes" xml:space="preserve">
          <source>Cap.renameat()</source>
          <target state="translated">Cap.renameat()</target>
        </trans-unit>
        <trans-unit id="ef211aa3e8057f31f434a40dd666409d48fdb6ea" translate="yes" xml:space="preserve">
          <source>Cap.seek()</source>
          <target state="translated">Cap.seek()</target>
        </trans-unit>
        <trans-unit id="471020e7d69e48042af29b8fcc22eea5add3df0d" translate="yes" xml:space="preserve">
          <source>Cap.seek_tell()</source>
          <target state="translated">Cap.seek_tell()</target>
        </trans-unit>
        <trans-unit id="3b2e83aca8cdc8968eafc2f5edcc0d64fc343390" translate="yes" xml:space="preserve">
          <source>Cap.sem_getvalue()</source>
          <target state="translated">Cap.sem_getvalue()</target>
        </trans-unit>
        <trans-unit id="bb36e03d049599330c087df9a1bdc4dc4357d0cd" translate="yes" xml:space="preserve">
          <source>Cap.sem_post()</source>
          <target state="translated">Cap.sem_post()</target>
        </trans-unit>
        <trans-unit id="3397bb7fb6124b4c3b285799cb020c0afb0b9470" translate="yes" xml:space="preserve">
          <source>Cap.sem_wait()</source>
          <target state="translated">Cap.sem_wait()</target>
        </trans-unit>
        <trans-unit id="17924d7f079c1fbe9dc4b0a9b46b7a7c9f80267d" translate="yes" xml:space="preserve">
          <source>Cap.send()</source>
          <target state="translated">Cap.send()</target>
        </trans-unit>
        <trans-unit id="b1fb857fec6d59006a303fbba89eecae3e1be5ed" translate="yes" xml:space="preserve">
          <source>Cap.setsockopt()</source>
          <target state="translated">Cap.setsockopt()</target>
        </trans-unit>
        <trans-unit id="6e717afea67069946c43b30a8eac99f8fd8d3d13" translate="yes" xml:space="preserve">
          <source>Cap.shutdown()</source>
          <target state="translated">Cap.shutdown()</target>
        </trans-unit>
        <trans-unit id="613127727254ea2e745b4e947d712a62ec3e314d" translate="yes" xml:space="preserve">
          <source>Cap.sock_client()</source>
          <target state="translated">Cap.sock_client()</target>
        </trans-unit>
        <trans-unit id="a865e929715c16490b5cc9db24fc53756918a968" translate="yes" xml:space="preserve">
          <source>Cap.sock_server()</source>
          <target state="translated">Cap.sock_server()</target>
        </trans-unit>
        <trans-unit id="3d58860943c2b8b9947a01e217fcf9ea2fc4e29c" translate="yes" xml:space="preserve">
          <source>Cap.symlinkat()</source>
          <target state="translated">Cap.symlinkat()</target>
        </trans-unit>
        <trans-unit id="54f93c562c7dad3cb56f74257de3ae4f85ab1e19" translate="yes" xml:space="preserve">
          <source>Cap.ttyhook()</source>
          <target state="translated">Cap.ttyhook()</target>
        </trans-unit>
        <trans-unit id="1cd8344e059c54b59bb5baf4fda8447b3c314add" translate="yes" xml:space="preserve">
          <source>Cap.unlinkat()</source>
          <target state="translated">Cap.unlinkat()</target>
        </trans-unit>
        <trans-unit id="01965c2e25e6912bcd2e4325b9ce0c3ff06d96c8" translate="yes" xml:space="preserve">
          <source>Cap.write()</source>
          <target state="translated">Cap.write()</target>
        </trans-unit>
        <trans-unit id="5084b4829a6590503f892dab9e1474034165eacc" translate="yes" xml:space="preserve">
          <source>CapError</source>
          <target state="translated">CapError</target>
        </trans-unit>
        <trans-unit id="d7e2e0e18b3b9e8817924aae3b114a512bff2721" translate="yes" xml:space="preserve">
          <source>CapError.create()</source>
          <target state="translated">CapError.create()</target>
        </trans-unit>
        <trans-unit id="f5722912856a4291fdca5713009af362f3bcc3e7" translate="yes" xml:space="preserve">
          <source>CapError.eq()</source>
          <target state="translated">CapError.eq()</target>
        </trans-unit>
        <trans-unit id="dc06588b1933336d1008fda109921f821dded64d" translate="yes" xml:space="preserve">
          <source>CapError.ne()</source>
          <target state="translated">CapError.ne()</target>
        </trans-unit>
        <trans-unit id="fa802ef5c5c70ebc66660ec078774475b263db93" translate="yes" xml:space="preserve">
          <source>CapRights</source>
          <target state="translated">CapRights</target>
        </trans-unit>
        <trans-unit id="10e6cc67b021a42da82c0f08aa698e1403d2d276" translate="yes" xml:space="preserve">
          <source>CapRights0</source>
          <target state="translated">CapRights0</target>
        </trans-unit>
        <trans-unit id="76d2a12e671cee1627c575ee7d6ce0bae478e4bd" translate="yes" xml:space="preserve">
          <source>CapRights0._version()</source>
          <target state="translated">CapRights0._version()</target>
        </trans-unit>
        <trans-unit id="e192ffb0e46086a3738186a4d6a1dfd75a144a3d" translate="yes" xml:space="preserve">
          <source>CapRights0.clear()</source>
          <target state="translated">CapRights0.clear()</target>
        </trans-unit>
        <trans-unit id="8e3a55a41ca2ecdbaec1eafcb2caeaa972e22d9f" translate="yes" xml:space="preserve">
          <source>CapRights0.contains()</source>
          <target state="translated">CapRights0.contains()</target>
        </trans-unit>
        <trans-unit id="ab028398da6cdb465d7845f896f311194c56c8fc" translate="yes" xml:space="preserve">
          <source>CapRights0.create()</source>
          <target state="translated">CapRights0.create()</target>
        </trans-unit>
        <trans-unit id="07fdc59c019628df050fb777271a48399b12d68d" translate="yes" xml:space="preserve">
          <source>CapRights0.descriptor()</source>
          <target state="translated">CapRights0.descriptor()</target>
        </trans-unit>
        <trans-unit id="30c32b8cae9121f90a66b1306e6d6831059a12f2" translate="yes" xml:space="preserve">
          <source>CapRights0.from()</source>
          <target state="translated">CapRights0.from()</target>
        </trans-unit>
        <trans-unit id="a6523c1c27a0351c540671c2aa4995d4a9f24640" translate="yes" xml:space="preserve">
          <source>CapRights0.limit()</source>
          <target state="translated">CapRights0.limit()</target>
        </trans-unit>
        <trans-unit id="24ace96a92a5dc42e5780370ffeae65a60acbb8f" translate="yes" xml:space="preserve">
          <source>CapRights0.merge()</source>
          <target state="translated">CapRights0.merge()</target>
        </trans-unit>
        <trans-unit id="2b9e9b642a805501bfc28639e2783313a2931407" translate="yes" xml:space="preserve">
          <source>CapRights0.remove()</source>
          <target state="translated">CapRights0.remove()</target>
        </trans-unit>
        <trans-unit id="f70049dc4b9b0eaab5d9bfcfa3a564466a965fc5" translate="yes" xml:space="preserve">
          <source>CapRights0.set()</source>
          <target state="translated">CapRights0.set()</target>
        </trans-unit>
        <trans-unit id="6ad3db202e0500a11f5d1c767fd0c8d1cdda0f78" translate="yes" xml:space="preserve">
          <source>CapRights0.unset()</source>
          <target state="translated">CapRights0.unset()</target>
        </trans-unit>
        <trans-unit id="c46c6c5df3e770afdb9ecde509fee9e199294969" translate="yes" xml:space="preserve">
          <source>CatArgs</source>
          <target state="translated">CatArgs</target>
        </trans-unit>
        <trans-unit id="ecda15245c66635d48fe57080d869b466c475db9" translate="yes" xml:space="preserve">
          <source>CatArgs.apply()</source>
          <target state="translated">CatArgs.apply()</target>
        </trans-unit>
        <trans-unit id="97e4b25603c3705bb4745549972358b1530e6193" translate="yes" xml:space="preserve">
          <source>CatArgs.create()</source>
          <target state="translated">CatArgs.create()</target>
        </trans-unit>
        <trans-unit id="0d8f25b0f311a8859ccb4c89db21cd32eeed6428" translate="yes" xml:space="preserve">
          <source>CatArgs.eq()</source>
          <target state="translated">CatArgs.eq()</target>
        </trans-unit>
        <trans-unit id="5b41c460c74a52b269d58adad1d017536967169f" translate="yes" xml:space="preserve">
          <source>CatArgs.ne()</source>
          <target state="translated">CatArgs.ne()</target>
        </trans-unit>
        <trans-unit id="50016e9679f032fc16c8a8bff324114e76836c71" translate="yes" xml:space="preserve">
          <source>CatPath</source>
          <target state="translated">CatPath</target>
        </trans-unit>
        <trans-unit id="a5c75eaaf34964bda37b1eae2d00c3c44de89e4d" translate="yes" xml:space="preserve">
          <source>CatPath.apply()</source>
          <target state="translated">CatPath.apply()</target>
        </trans-unit>
        <trans-unit id="8c7268c6ef6f9baa39d9d291bd18986fb2318595" translate="yes" xml:space="preserve">
          <source>CatPath.create()</source>
          <target state="translated">CatPath.create()</target>
        </trans-unit>
        <trans-unit id="867ba7445f16ed5d0c31d440fa066f095fe10681" translate="yes" xml:space="preserve">
          <source>CatPath.eq()</source>
          <target state="translated">CatPath.eq()</target>
        </trans-unit>
        <trans-unit id="8353aad948dbfbf2d5795f6fb6dabf12ab4ab530" translate="yes" xml:space="preserve">
          <source>CatPath.ne()</source>
          <target state="translated">CatPath.ne()</target>
        </trans-unit>
        <trans-unit id="09dbd187de708ee21b01806ae5b0ca883102654a" translate="yes" xml:space="preserve">
          <source>Caveat</source>
          <target state="translated">Caveat</target>
        </trans-unit>
        <trans-unit id="5f4ad89a20640633b841e762bcb8c934a3fab3d7" translate="yes" xml:space="preserve">
          <source>Chain a promise after this one.</source>
          <target state="translated">이것 뒤에 약속을 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="b5d8ed143290ac552865d4ef971fcb72a5f47100" translate="yes" xml:space="preserve">
          <source>Change the available space.</source>
          <target state="translated">사용 가능한 공간을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="fea0128037383a1a2e11702d937357e2e1376072" translate="yes" xml:space="preserve">
          <source>Change the file size. If it is made larger, the new contents are undefined.</source>
          <target state="translated">파일 크기를 변경하십시오. 더 커지면 새 내용이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1d06f64e845bf495978cb5195a847495a387703" translate="yes" xml:space="preserve">
          <source>Change the i-th byte. Raise an error if the index is out of bounds.</source>
          <target state="translated">i 번째 바이트를 변경하십시오. 인덱스가 범위를 벗어난 경우 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="75ca9d0ed7a5d1843445de07ba782b5fc64d697b" translate="yes" xml:space="preserve">
          <source>Change the i-th element, raising an error if the index is out of bounds.</source>
          <target state="translated">i 번째 요소를 변경하여 인덱스가 범위를 벗어나면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="761f02e08ac722eb9ade89dfea12bc7f072d6f0d" translate="yes" xml:space="preserve">
          <source>Change the i-th element, raising an error if the index is out of bounds. Returns the previous value, which may be None if the node has been popped but left on the list.</source>
          <target state="translated">i 번째 요소를 변경하여 인덱스가 범위를 벗어나면 오류가 발생합니다. 이전 값을 반환합니다. 노드가 팝되었지만 목록에 남아 있으면 None이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4d1354b2b68a0ced084c12d4899a26861d9f8f0" translate="yes" xml:space="preserve">
          <source>Change the notifier.</source>
          <target state="translated">알리미를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="774560b6a36d98ce4f41e1294d41c0d5ae2f717f" translate="yes" xml:space="preserve">
          <source>Changes a byte in the string, returning the previous byte at that offset. Raise an error if the offset is out of bounds.</source>
          <target state="translated">문자열에서 바이트를 변경하여 해당 오프셋에서 이전 바이트를 반환합니다. 오프셋이 범위를 벗어난 경우 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="d8e889a690f4a69fb0b43f0a14f0fc2ecf322e28" translate="yes" xml:space="preserve">
          <source>Changes each / in the path to the OS specific separator.</source>
          <target state="translated">경로에서 /를 OS 특정 구분 기호로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="7d809cfbdd7cb537407119a18c078c56b2f9d94d" translate="yes" xml:space="preserve">
          <source>Changes each OS specific separator in the path to /.</source>
          <target state="translated">경로의 각 OS 특정 구분 기호를 /로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="6e6155784d7bf1933a2fb9677918433cf5b1b224" translate="yes" xml:space="preserve">
          <source>Character position on line. Character positions start at 1.</source>
          <target state="translated">줄의 문자 위치. 문자 위치는 1에서 시작합니다.</target>
        </trans-unit>
        <trans-unit id="52d210fa928106a513abb2dbf3633a25c3b2cd5d" translate="yes" xml:space="preserve">
          <source>ChdirError</source>
          <target state="translated">ChdirError</target>
        </trans-unit>
        <trans-unit id="645eeeda6f87999418132752242950c6fa8709ea" translate="yes" xml:space="preserve">
          <source>Check that the 2 given expressions are equal.</source>
          <target state="translated">주어진 두 표현식이 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9deb5ed13975e97c3d1a5a44d1a96ed758777aa7" translate="yes" xml:space="preserve">
          <source>Check that the 2 given expressions are not equal.</source>
          <target state="translated">주어진 두 표현식이 같지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d5805b4f8f615b73fc376a94130f145694bd900e" translate="yes" xml:space="preserve">
          <source>Check that the 2 given expressions resolve to different instances.</source>
          <target state="translated">주어진 두 표현식이 다른 인스턴스로 해석되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="af14e58e99cfe2630c75ec40756ad88c552fd292" translate="yes" xml:space="preserve">
          <source>Check that the 2 given expressions resolve to the same instance</source>
          <target state="translated">주어진 두 표현식이 동일한 인스턴스로 해석되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="df2d930304fc8bba71ad934a44e58c338c929f44" translate="yes" xml:space="preserve">
          <source>Check that this is a superset of the rights in that.</source>
          <target state="translated">이것이 해당 권한의 상위 집합인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f9ff6c4fa00a3e0d0cf4a0288d84271ef5a1cf99" translate="yes" xml:space="preserve">
          <source>Check whether the node contains the provided key.</source>
          <target state="translated">노드에 제공된 키가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5822de53461496ea77c696732a66d642b234b2a8" translate="yes" xml:space="preserve">
          <source>Check whether the set contains the value.</source>
          <target state="translated">세트에 값이 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a6ba23beb5c10000a6212bc45912bc9ea61697d1" translate="yes" xml:space="preserve">
          <source>Check whether this number is +/-infinity</source>
          <target state="translated">이 숫자가 +/- 무한인지 확인</target>
        </trans-unit>
        <trans-unit id="7d0e12dcd48108424d0c336f339e86c081fed1ab" translate="yes" xml:space="preserve">
          <source>Check whether this number is NaN.</source>
          <target state="translated">이 숫자가 NaN인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7a2bf54028a8acd3fb814f47f0a1248675bfa791" translate="yes" xml:space="preserve">
          <source>Check whether this number is finite, ie not +/-infinity and not NaN.</source>
          <target state="translated">이 숫자가 유한인지, 즉 NaN이 아닌 +/- 무한이 아닌지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="612063547a5c3753b2ef1e0fb1aba04fa2cbe5b9" translate="yes" xml:space="preserve">
          <source>Checks whether the map contains the key k</source>
          <target state="translated">지도에 키 k가 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="bb360b70fd585bd9b8283250d9a816c82bd4547d" translate="yes" xml:space="preserve">
          <source>Checks whether the set contains the value.</source>
          <target state="translated">집합에 값이 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ed564ab8ce8614909bc09e9e80b04e59609dc4de" translate="yes" xml:space="preserve">
          <source>Checks whether two lists are equal.</source>
          <target state="translated">두 목록이 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0137da3d10a01eae6857f42e3c42cc5b82a33b04" translate="yes" xml:space="preserve">
          <source>Chops the array in half at the split point requested and returns both the left and right portions. The original array is trimmed in place and returned as the left portion. If the split point is larger than the array, the left portion is the original array and the right portion is a new empty array. Both arrays are isolated and mutable, as they do not share memory. The operation does not allocate a new array pointer nor copy elements.</source>
          <target state="translated">요청 된 분리 점에서 배열을 반으로 자르고 왼쪽과 오른쪽 부분을 모두 반환합니다. 원래 배열은 제자리에서 잘리고 왼쪽 부분으로 반환됩니다. 분할 점이 배열보다 큰 경우 왼쪽 부분은 원래 배열이고 오른쪽 부분은 비어있는 새 배열입니다. 두 어레이는 메모리를 공유하지 않기 때문에 분리되고 변경 가능합니다. 이 작업은 새 배열 포인터를 할당하거나 요소를 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="322bf4bcf461d3e8ab5afe7d0874834a8c8aa9f5" translate="yes" xml:space="preserve">
          <source>Chops the array in half at the split point requested and returns both the left and right portions. The original array is trimmed in place and returned as the left portion. If the split point is larger than the array, the left portion is the original array and the right portion is a new empty array. The operation does not allocate a new array pointer nor copy elements.</source>
          <target state="translated">요청 된 분할 지점에서 어레이를 반으로 자르고 왼쪽과 오른쪽 부분을 모두 반환합니다. 원래 배열은 제자리에서 잘리고 왼쪽 부분으로 반환됩니다. 분할 점이 배열보다 크면 왼쪽 부분은 원래 배열이고 오른쪽 부분은 새로운 빈 배열입니다. 이 작업은 새 배열 포인터를 할당하거나 요소를 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a6d926885966c331ecadf0554736845384ab34ca" translate="yes" xml:space="preserve">
          <source>Chops the string in half at the split point requested and returns both the left and right portions. The original string is trimmed in place and returned as the left portion. If the split point is larger than the string, the left portion is the original string and the right portion is a new empty string. Both strings are isolated and mutable, as they do not share memory. The operation does not allocate a new string pointer nor copy elements.</source>
          <target state="translated">요청 된 분리 점에서 문자열을 반으로 자르고 왼쪽과 오른쪽 부분을 모두 반환합니다. 원래 문자열이 제자리에서 잘리고 왼쪽 부분으로 반환됩니다. 분리 점이 문자열보다 큰 경우 왼쪽 부분은 원래 문자열이고 오른쪽 부분은 새로운 빈 문자열입니다. 두 문자열은 메모리를 공유하지 않기 때문에 분리되고 변경 가능합니다. 이 작업은 새로운 문자열 포인터 나 복사 요소를 할당하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4594fbaa404a32ca31b3c60a2eb423be4fd5307" translate="yes" xml:space="preserve">
          <source>Clear all of the any-user flags.</source>
          <target state="translated">모든 사용자 플래그를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="69c545783be9f5dc5846096f1f50d1464cce021e" translate="yes" xml:space="preserve">
          <source>Clear all of the group and any-user flags.</source>
          <target state="translated">모든 그룹 및 모든 사용자 플래그를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="abbaca6a88bd44aae173e0d7fe15a974949512f4" translate="yes" xml:space="preserve">
          <source>Clear all rights.</source>
          <target state="translated">모든 권리를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="6af9c191c70ed18644f3e6c23c53e1c9cef490ea" translate="yes" xml:space="preserve">
          <source>Clear the escape state.</source>
          <target state="translated">이스케이프 상태를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="a7164c8b293152980a18fb6a15691fbfa3cc4110" translate="yes" xml:space="preserve">
          <source>Clear the notifier in order to shut down input.</source>
          <target state="translated">입력을 종료하려면 알리미를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="3a5c043ef807a951d467cec0e642702e2c6d199d" translate="yes" xml:space="preserve">
          <source>Clear the queue.</source>
          <target state="translated">대기열을 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="c9358e00924e72a3eb8f75dec019b9457a6f5617" translate="yes" xml:space="preserve">
          <source>Clear the screen and move the cursor to the top left corner.</source>
          <target state="translated">화면을 지우고 커서를 왼쪽 상단으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="e273348f4afa8e9323159645e01300fa312510d1" translate="yes" xml:space="preserve">
          <source>Clear the screen.</source>
          <target state="translated">화면을 지우십시오.</target>
        </trans-unit>
        <trans-unit id="352315cd1af285e61887221526f6ca9d8f0eb71e" translate="yes" xml:space="preserve">
          <source>Clears the last error code set for this File. Clears the error indicator for the stream.</source>
          <target state="translated">이 파일에 설정된 마지막 오류 코드를 지 웁니다. 스트림의 오류 표시기를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="d4766fa7a1b7fb83d6a28b4dc3723e2bbadbe6bd" translate="yes" xml:space="preserve">
          <source>Clone the array. The new array contains references to the same elements that the old array contains, the elements themselves are not cloned.</source>
          <target state="translated">어레이를 복제하십시오. 새 배열에는 이전 배열에 포함 된 것과 동일한 요소에 대한 참조가 포함되며 요소 자체는 복제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d4d3743175485566e19ca73f89e6e4b39ec1ade" translate="yes" xml:space="preserve">
          <source>Clone the list.</source>
          <target state="translated">목록을 복제하십시오.</target>
        </trans-unit>
        <trans-unit id="109f16706a7d32053684a83ae31758127a3d0f77" translate="yes" xml:space="preserve">
          <source>Close all pipes and wait for the child process to exit.</source>
          <target state="translated">모든 파이프를 닫고 하위 프로세스가 종료 될 때까지 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="5554a3bdfb47a584e17bc37de750529d4f860894" translate="yes" xml:space="preserve">
          <source>Close the connection gracefully once all writes are sent.</source>
          <target state="translated">모든 쓰기가 전송되면 연결을 정상적으로 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="e35bb6f85733256bd9dd852d873f679150ed35bf" translate="yes" xml:space="preserve">
          <source>Close the directory.</source>
          <target state="translated">디렉토리를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="2ed127db5dd03e1b4a9da3ad14a9e8fcd320e305" translate="yes" xml:space="preserve">
          <source>Close the event.</source>
          <target state="translated">이벤트를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="3d6dcc6880dc0f57cca1fcef4b54bcb1beab9257" translate="yes" xml:space="preserve">
          <source>Close the far end of the pipe--the end that the other process will be using. This is used to cleanup this process' handles that it wont use.</source>
          <target state="translated">파이프의 끝 (다른 프로세스가 사용하는 끝)을 닫습니다. 이것은 사용하지 않는이 프로세스의 핸들을 정리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3b2aa32df78c9f5e3bb63a5a5bd813acb1329e2a" translate="yes" xml:space="preserve">
          <source>Close the file descriptor.</source>
          <target state="translated">파일 디스크립터를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="e2c115451ace317c65803db8091eb1e55ebeda50" translate="yes" xml:space="preserve">
          <source>Close the file.</source>
          <target state="translated">파일을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="f9358358135b4363c86ef8d0fe480b1ddc910ef7" translate="yes" xml:space="preserve">
          <source>Close the file. Future operations will do nothing.</source>
          <target state="translated">파일을 닫습니다. 미래의 작업은 아무 것도하지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="1a42cb226d1f4782141f3141fe3b1927bb1cc5c6" translate="yes" xml:space="preserve">
          <source>Close the near end of the pipe--the end that this process is using directly. Also handle unsubscribing the asio event (if there was one). File descriptors should always be closed &lt;em&gt;after&lt;/em&gt; unsubscribing its event, otherwise there is the possibility of reusing the file descriptor in another thread and then unsubscribing the reused file descriptor here! Unsubscribing and closing the file descriptor should be treated as one operation.</source>
          <target state="translated">파이프의 가장 가까운 끝 (이 프로세스가 직접 사용하는 끝)을 닫습니다. 또한 asio 이벤트의 구독을 취소하십시오 (있는 경우). 파일 디스크립터는 이벤트를 구독 취소 &lt;em&gt;한 후에&lt;/em&gt; 는 항상 닫아야합니다 . 그렇지 않으면 다른 스레드에서 파일 디스크립터를 재사용 한 다음 재사용 된 파일 디스크립터를 여기에서 등록 취소 할 수 있습니다! 파일 디스크립터를 구독 취소하고 닫는 것은 하나의 조작으로 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="a6dff5d154633e4f5c26ae4ec8ba32e04051e5ea" translate="yes" xml:space="preserve">
          <source>Collection of utility functions for converting various durations of time to nanoseconds, for passing to other functions in the time package.</source>
          <target state="translated">시간 패키지의 다른 기능으로 전달하기 위해 다양한 시간을 나노초로 변환하는 유틸리티 기능 모음입니다.</target>
        </trans-unit>
        <trans-unit id="3394cb6a18aa4cbe90763d5d6c7a09e3a8efd289" translate="yes" xml:space="preserve">
          <source>CollisionHash</source>
          <target state="translated">CollisionHash</target>
        </trans-unit>
        <trans-unit id="3075396b37a1a49bd05cd08c75a52526b6f26584" translate="yes" xml:space="preserve">
          <source>CollisionHash.create()</source>
          <target state="translated">CollisionHash.create()</target>
        </trans-unit>
        <trans-unit id="47671404ffa118c28a5bec61328d07c2c5ac3469" translate="yes" xml:space="preserve">
          <source>CollisionHash.eq()</source>
          <target state="translated">CollisionHash.eq()</target>
        </trans-unit>
        <trans-unit id="18f484327ae574bd7dcb1209a1b703ff1ba67275" translate="yes" xml:space="preserve">
          <source>CollisionHash.hash()</source>
          <target state="translated">CollisionHash.hash()</target>
        </trans-unit>
        <trans-unit id="9ebd23612a0ebd7caaf92b3a2912e7bbab062e81" translate="yes" xml:space="preserve">
          <source>CollisionHash.ne()</source>
          <target state="translated">CollisionHash.ne()</target>
        </trans-unit>
        <trans-unit id="5da399b24b1282b018415c72bca6587249c97c1f" translate="yes" xml:space="preserve">
          <source>Combines a provided value with the current value for the provided key using the provided function. If the provided key has not been added to the map yet, it sets its value to the provided value and ignores the provided function.</source>
          <target state="translated">제공된 기능을 사용하여 제공된 값을 제공된 키의 현재 값과 결합합니다. 제공된 키가 아직 맵에 추가되지 않은 경우 해당 값을 제공된 값으로 설정하고 제공된 기능을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="36588ebed008fff523554e69444f0e559338c869" translate="yes" xml:space="preserve">
          <source>Command contains all of the information describing a command with its spec and effective options and arguments, ready to use.</source>
          <target state="translated">명령에는 명령을 설명하는 사양과 효과적인 옵션 및 인수가 포함 된 명령을 설명하는 모든 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7beb387611453bcab130ac3531a34559e63f05c" translate="yes" xml:space="preserve">
          <source>Command._create()</source>
          <target state="translated">Command._create()</target>
        </trans-unit>
        <trans-unit id="53f3e2663837912e526e22da0c100c66749e4a6d" translate="yes" xml:space="preserve">
          <source>Command.arg()</source>
          <target state="translated">Command.arg()</target>
        </trans-unit>
        <trans-unit id="fb26a44a713f63e2fed0ac09ca55aa503652bda7" translate="yes" xml:space="preserve">
          <source>Command.fullname()</source>
          <target state="translated">Command.fullname()</target>
        </trans-unit>
        <trans-unit id="774896d04d92b8f9511eeb979323da47db994b01" translate="yes" xml:space="preserve">
          <source>Command.option()</source>
          <target state="translated">Command.option()</target>
        </trans-unit>
        <trans-unit id="13e9ccf50ac8f7bbf5760996f1cf57e1433b11fc" translate="yes" xml:space="preserve">
          <source>Command.spec()</source>
          <target state="translated">Command.spec()</target>
        </trans-unit>
        <trans-unit id="4b45c811e4d784f4ba79d7b0607b3230908c7fb4" translate="yes" xml:space="preserve">
          <source>Command.string()</source>
          <target state="translated">Command.string()</target>
        </trans-unit>
        <trans-unit id="9a3e012901bc2acd9b9f4ccd91118c575ebdb28d" translate="yes" xml:space="preserve">
          <source>CommandHelp</source>
          <target state="translated">CommandHelp</target>
        </trans-unit>
        <trans-unit id="3387ac77b4594fdeacff407199b631bf9d348843" translate="yes" xml:space="preserve">
          <source>CommandHelp encapsulates the information needed to generate a user help message for a given CommandSpec, optionally with a specific command identified to print help about. Use &lt;code&gt;Help.general()&lt;/code&gt; or &lt;code&gt;Help.for_command()&lt;/code&gt; to create a CommandHelp instance.</source>
          <target state="translated">CommandHelp는 주어진 CommandSpec에 대한 사용자 도움말 메시지를 생성하는 데 필요한 정보를 선택적으로 도움말을 인쇄하도록 식별 된 특정 명령과 함께 캡슐화합니다. 사용 &lt;code&gt;Help.general()&lt;/code&gt; 또는 &lt;code&gt;Help.for_command()&lt;/code&gt; CommandHelp 인스턴스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe85fa30f3bb25c43df5e3f345f7b757684991d2" translate="yes" xml:space="preserve">
          <source>CommandHelp._all_options()</source>
          <target state="translated">CommandHelp._all_options()</target>
        </trans-unit>
        <trans-unit id="90648d63b771d8a0d650028ef9e3869deb08a47d" translate="yes" xml:space="preserve">
          <source>CommandHelp._all_options_fill()</source>
          <target state="translated">CommandHelp._all_options_fill()</target>
        </trans-unit>
        <trans-unit id="3163b26886fd80a6c9e5802ab0f53f22cc8fc815" translate="yes" xml:space="preserve">
          <source>CommandHelp._any_options()</source>
          <target state="translated">CommandHelp._any_options()</target>
        </trans-unit>
        <trans-unit id="54d13fbbcbd37c3da5f62c3d32059ac692752061" translate="yes" xml:space="preserve">
          <source>CommandHelp._create()</source>
          <target state="translated">CommandHelp._create()</target>
        </trans-unit>
        <trans-unit id="389c5b8358f98151f16cd4cbf0810e8f70e00da6" translate="yes" xml:space="preserve">
          <source>CommandHelp._list_commands()</source>
          <target state="translated">CommandHelp._list_commands()</target>
        </trans-unit>
        <trans-unit id="0d8348faebbee27060a80f7ae1ee8257ddb826af" translate="yes" xml:space="preserve">
          <source>CommandHelp._write_args()</source>
          <target state="translated">CommandHelp._write_args()</target>
        </trans-unit>
        <trans-unit id="2f144231f86c8e9f9eb7813d60699d80215c14a0" translate="yes" xml:space="preserve">
          <source>CommandHelp._write_commands()</source>
          <target state="translated">CommandHelp._write_commands()</target>
        </trans-unit>
        <trans-unit id="42f9e49959ead76deabe40a301f35989d13137b6" translate="yes" xml:space="preserve">
          <source>CommandHelp._write_help()</source>
          <target state="translated">CommandHelp._write_help()</target>
        </trans-unit>
        <trans-unit id="0627c1ecc856bafa4f4013e0063623a97fbc5b24" translate="yes" xml:space="preserve">
          <source>CommandHelp._write_options()</source>
          <target state="translated">CommandHelp._write_options()</target>
        </trans-unit>
        <trans-unit id="e5332808fe67ef39dccb835a59ae53aa0dadbc34" translate="yes" xml:space="preserve">
          <source>CommandHelp._write_usage()</source>
          <target state="translated">CommandHelp._write_usage()</target>
        </trans-unit>
        <trans-unit id="121ef0dc4034863e6d31a013a45d66b21abc7d5b" translate="yes" xml:space="preserve">
          <source>CommandHelp.fullname()</source>
          <target state="translated">CommandHelp.fullname()</target>
        </trans-unit>
        <trans-unit id="43936281f6c48c6886bef23a4c15d59f32fb3ad3" translate="yes" xml:space="preserve">
          <source>CommandHelp.help_string()</source>
          <target state="translated">CommandHelp.help_string()</target>
        </trans-unit>
        <trans-unit id="8b61742a3db33a742a3f0f09648fd85c288a3060" translate="yes" xml:space="preserve">
          <source>CommandHelp.print_help()</source>
          <target state="translated">CommandHelp.print_help()</target>
        </trans-unit>
        <trans-unit id="07d72f7d6e3cbc1949b9f3adad17cdb39658224a" translate="yes" xml:space="preserve">
          <source>CommandHelp.string()</source>
          <target state="translated">CommandHelp.string()</target>
        </trans-unit>
        <trans-unit id="ce95e1cb13bd45c205d78820dc43af399ba789ca" translate="yes" xml:space="preserve">
          <source>CommandParser</source>
          <target state="translated">CommandParser</target>
        </trans-unit>
        <trans-unit id="ebd6c16c6fafc3f0a8dc0fb7faa1ea7b8b53843d" translate="yes" xml:space="preserve">
          <source>CommandParser._fullname()</source>
          <target state="translated">CommandParser._fullname()</target>
        </trans-unit>
        <trans-unit id="6a5c2b83b410dd170c9b8330db72024ab0d0a19a" translate="yes" xml:space="preserve">
          <source>CommandParser._help_name()</source>
          <target state="translated">CommandParser._help_name()</target>
        </trans-unit>
        <trans-unit id="60bc0ccf66dd5562406faa50ea5d3942a6388c4a" translate="yes" xml:space="preserve">
          <source>CommandParser._option_with_name()</source>
          <target state="translated">CommandParser._option_with_name()</target>
        </trans-unit>
        <trans-unit id="d691f262788fa16a42fbd8d306357a949db8bbcb" translate="yes" xml:space="preserve">
          <source>CommandParser._option_with_short()</source>
          <target state="translated">CommandParser._option_with_short()</target>
        </trans-unit>
        <trans-unit id="fb0642437730faf7ab2c8a448a8609d5f4f9e721" translate="yes" xml:space="preserve">
          <source>CommandParser._parse_arg()</source>
          <target state="translated">CommandParser._parse_arg()</target>
        </trans-unit>
        <trans-unit id="7081690d1211807971bc0891d7acba382376d428" translate="yes" xml:space="preserve">
          <source>CommandParser._parse_command()</source>
          <target state="translated">CommandParser._parse_command()</target>
        </trans-unit>
        <trans-unit id="6e13a4c422f22b3b1e7b14eae33d796c0e632004" translate="yes" xml:space="preserve">
          <source>CommandParser._parse_long_option()</source>
          <target state="translated">CommandParser._parse_long_option()</target>
        </trans-unit>
        <trans-unit id="c45b34508d3014011c2af6b43abec9ed685a3648" translate="yes" xml:space="preserve">
          <source>CommandParser._parse_short_options()</source>
          <target state="translated">CommandParser._parse_short_options()</target>
        </trans-unit>
        <trans-unit id="391e3c8ccdec514060627b8590ba8e510f6077cd" translate="yes" xml:space="preserve">
          <source>CommandParser._root_spec()</source>
          <target state="translated">CommandParser._root_spec()</target>
        </trans-unit>
        <trans-unit id="1fb5abe2955aa8a216e63ba3dcc90499992acf28" translate="yes" xml:space="preserve">
          <source>CommandParser._short_string()</source>
          <target state="translated">CommandParser._short_string()</target>
        </trans-unit>
        <trans-unit id="9bc1a701a5e51586252a7967f7601d0c9887f903" translate="yes" xml:space="preserve">
          <source>CommandParser._sub()</source>
          <target state="translated">CommandParser._sub()</target>
        </trans-unit>
        <trans-unit id="29c1305ee2d052b7b9bd84434d58dfb0e2b4be01" translate="yes" xml:space="preserve">
          <source>CommandParser.create()</source>
          <target state="translated">CommandParser.create()</target>
        </trans-unit>
        <trans-unit id="c8b4e2430ba62543ae867b821db440626131f87c" translate="yes" xml:space="preserve">
          <source>CommandParser.parse()</source>
          <target state="translated">CommandParser.parse()</target>
        </trans-unit>
        <trans-unit id="e78babf559575c73fe46154c1a61ab222a4fcb96" translate="yes" xml:space="preserve">
          <source>CommandSpec</source>
          <target state="translated">CommandSpec</target>
        </trans-unit>
        <trans-unit id="3eab73a922d205d13cf7a693f386da78d46ba897" translate="yes" xml:space="preserve">
          <source>CommandSpec describes the specification of a parent or leaf command. Each command has the following attributes:</source>
          <target state="translated">CommandSpec은 부모 또는 잎 명령의 사양을 설명합니다. 각 명령에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a447e3c0bdf2771c0e0c1c6d6cc919bf9caa4257" translate="yes" xml:space="preserve">
          <source>CommandSpec._assertName()</source>
          <target state="translated">CommandSpec._assertName()</target>
        </trans-unit>
        <trans-unit id="17c9802a15ed3e3725eccf80b6a4e5570bd71178" translate="yes" xml:space="preserve">
          <source>CommandSpec.add_command()</source>
          <target state="translated">CommandSpec.add_command()</target>
        </trans-unit>
        <trans-unit id="2f172b3126e4cc01c898e328173cb29b7f0d6762" translate="yes" xml:space="preserve">
          <source>CommandSpec.add_help()</source>
          <target state="translated">CommandSpec.add_help()</target>
        </trans-unit>
        <trans-unit id="1be08f6c93afaaa152b49accdc38613db1275603" translate="yes" xml:space="preserve">
          <source>CommandSpec.args()</source>
          <target state="translated">CommandSpec.args()</target>
        </trans-unit>
        <trans-unit id="249a258fd3747952a4a01aeb976f29b8796f1ce1" translate="yes" xml:space="preserve">
          <source>CommandSpec.commands()</source>
          <target state="translated">CommandSpec.commands()</target>
        </trans-unit>
        <trans-unit id="46a3268db98fe106034db0e5eb7ef44a00627249" translate="yes" xml:space="preserve">
          <source>CommandSpec.descr()</source>
          <target state="translated">CommandSpec.descr()</target>
        </trans-unit>
        <trans-unit id="55b918a705a119d0c7a5421b814fc00a52b03f3d" translate="yes" xml:space="preserve">
          <source>CommandSpec.help_name()</source>
          <target state="translated">CommandSpec.help_name()</target>
        </trans-unit>
        <trans-unit id="018f1f65c44227a1a06e0e70866eff75a879e9af" translate="yes" xml:space="preserve">
          <source>CommandSpec.help_string()</source>
          <target state="translated">CommandSpec.help_string()</target>
        </trans-unit>
        <trans-unit id="6bef838ce587c157f0be387abd9581c05e4c8b90" translate="yes" xml:space="preserve">
          <source>CommandSpec.is_leaf()</source>
          <target state="translated">CommandSpec.is_leaf()</target>
        </trans-unit>
        <trans-unit id="fc1d6a70af853d82dd6f62b7298a36dbec68a0c4" translate="yes" xml:space="preserve">
          <source>CommandSpec.is_parent()</source>
          <target state="translated">CommandSpec.is_parent()</target>
        </trans-unit>
        <trans-unit id="38173068672940151621bcb89ec0a0aba7b41d85" translate="yes" xml:space="preserve">
          <source>CommandSpec.leaf()</source>
          <target state="translated">CommandSpec.leaf()</target>
        </trans-unit>
        <trans-unit id="d2436f29f121528b386d9c99d7d51be7d19356b4" translate="yes" xml:space="preserve">
          <source>CommandSpec.name()</source>
          <target state="translated">CommandSpec.name()</target>
        </trans-unit>
        <trans-unit id="83c7cb3e8ce464839c1cb53248ed600b4f4b65fd" translate="yes" xml:space="preserve">
          <source>CommandSpec.options()</source>
          <target state="translated">CommandSpec.options()</target>
        </trans-unit>
        <trans-unit id="a07871a93c77524fe2cca871ececdc49598235e7" translate="yes" xml:space="preserve">
          <source>CommandSpec.parent()</source>
          <target state="translated">CommandSpec.parent()</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="5378b86b954f37b8d06b7249b583e7a1c9317596" translate="yes" xml:space="preserve">
          <source>CommonPrefix</source>
          <target state="translated">CommonPrefix</target>
        </trans-unit>
        <trans-unit id="c4dfe8c9b5a5170d5d160a09009c2404d6a9015a" translate="yes" xml:space="preserve">
          <source>CommonPrefix.apply()</source>
          <target state="translated">CommonPrefix.apply()</target>
        </trans-unit>
        <trans-unit id="a2d4f1ac6b64a15309718609e0d0785d9296a3f2" translate="yes" xml:space="preserve">
          <source>CommonPrefix.create()</source>
          <target state="translated">CommonPrefix.create()</target>
        </trans-unit>
        <trans-unit id="a988da3244bf7a8e051e1e871330333d0244f40c" translate="yes" xml:space="preserve">
          <source>CommonPrefix.eq()</source>
          <target state="translated">CommonPrefix.eq()</target>
        </trans-unit>
        <trans-unit id="cbc71510a5907d2aa372df4477d375eb9c0541b9" translate="yes" xml:space="preserve">
          <source>CommonPrefix.ne()</source>
          <target state="translated">CommonPrefix.ne()</target>
        </trans-unit>
        <trans-unit id="eadfd3f2fff5b46637c267d52d54cd4bbd4cc506" translate="yes" xml:space="preserve">
          <source>Comparable</source>
          <target state="translated">Comparable</target>
        </trans-unit>
        <trans-unit id="f3ed2c95105823e09fa7d71f75f4a44175c237b2" translate="yes" xml:space="preserve">
          <source>Comparable.compare()</source>
          <target state="translated">Comparable.compare()</target>
        </trans-unit>
        <trans-unit id="bf67da8c3cc8e2a814b14aaad023785703a29b24" translate="yes" xml:space="preserve">
          <source>Comparable.eq()</source>
          <target state="translated">Comparable.eq()</target>
        </trans-unit>
        <trans-unit id="3a93d4facde0dcfd8fb155cd228e85d5aa9148f2" translate="yes" xml:space="preserve">
          <source>Comparable.ge()</source>
          <target state="translated">Comparable.ge()</target>
        </trans-unit>
        <trans-unit id="6aa1cf9380afb173d2eea0742135bc89d2ec55d4" translate="yes" xml:space="preserve">
          <source>Comparable.gt()</source>
          <target state="translated">Comparable.gt()</target>
        </trans-unit>
        <trans-unit id="670b9f9638e102d66219c19ee8e0fe5c671043c0" translate="yes" xml:space="preserve">
          <source>Comparable.le()</source>
          <target state="translated">Comparable.le()</target>
        </trans-unit>
        <trans-unit id="1020f66b8be76eae9148bf35d05fe704b6273805" translate="yes" xml:space="preserve">
          <source>Comparable.lt()</source>
          <target state="translated">Comparable.lt()</target>
        </trans-unit>
        <trans-unit id="72fecebf94fe582f14dfa6ba6d2f0c1cd2fd3eb7" translate="yes" xml:space="preserve">
          <source>Comparable.ne()</source>
          <target state="translated">Comparable.ne()</target>
        </trans-unit>
        <trans-unit id="938d5f8fe3b59aa5746fed66eaccf69d1c59ec7c" translate="yes" xml:space="preserve">
          <source>Comparable[A: &lt;a href=&quot;index&quot;&gt;Comparable&lt;/a&gt;[A] #read]</source>
          <target state="translated">비교 가능 [A : &lt;a href=&quot;index&quot;&gt;비교 가능&lt;/a&gt; [A] #read]</target>
        </trans-unit>
        <trans-unit id="8d105cf44d3926289e65c1c83d8e37cb23fd049e" translate="yes" xml:space="preserve">
          <source>Compare</source>
          <target state="translated">Compare</target>
        </trans-unit>
        <trans-unit id="954799effb1fc4923bfe0302fdcc5ebac0c242f0" translate="yes" xml:space="preserve">
          <source>Completing all outstanding actions is enough to finish the test. There's no need to also call the complete method when the actions are finished.</source>
          <target state="translated">모든 미해결 작업을 완료하면 테스트를 마치기에 충분합니다. 작업이 완료 될 때 complete 메서드를 호출 할 필요도 없습니다.</target>
        </trans-unit>
        <trans-unit id="cb6736e6e5f59f363093f0d937c29578f0e0f8e2" translate="yes" xml:space="preserve">
          <source>Configurable decoding. The defaults are for RFC 4648. Missing padding is not an error. Non-base64 data, other than whitespace (which can appear at any time), is an error.</source>
          <target state="translated">구성 가능한 디코딩. 기본값은 RFC 4648입니다. 패딩 누락은 오류가 아닙니다. 공백이 아닌 base64 이외의 데이터 (언제나 나타날 수 있음)는 오류입니다.</target>
        </trans-unit>
        <trans-unit id="0bab1ffae0a3b74d0a22f1e6992f95f38fa6c0eb" translate="yes" xml:space="preserve">
          <source>Configurable encoding. The defaults are for RFC 4648.</source>
          <target state="translated">구성 가능한 인코딩. 기본값은 RFC 4648입니다.</target>
        </trans-unit>
        <trans-unit id="1fb096f6890d0f8562ec5617b435cea2f6448ab8" translate="yes" xml:space="preserve">
          <source>Configuration of a benchmark.</source>
          <target state="translated">벤치 마크 구성.</target>
        </trans-unit>
        <trans-unit id="5c294a84208dec55efaf36081e881d79eec382e8" translate="yes" xml:space="preserve">
          <source>Connect via IPv4 or IPv6. If &lt;code&gt;from&lt;/code&gt; is a non-empty string, the connection will be made from the specified interface.</source>
          <target state="translated">IPv4 또는 IPv6을 통해 연결하십시오. 경우 &lt;code&gt;from&lt;/code&gt; 비어 있지 않은 문자열 연결이 지정된 인터페이스에서 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="cf751665b8865d289f1799d57874e40e0fd3fa65" translate="yes" xml:space="preserve">
          <source>Connect via IPv4.</source>
          <target state="translated">IPv4를 통해 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="8df43aeb7197afbd4ee05cd43d07e3c87bfc386b" translate="yes" xml:space="preserve">
          <source>Connect via IPv6.</source>
          <target state="translated">IPv6을 통해 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="0fce782e49b19de850642908a7ec08707b6cfa53" translate="yes" xml:space="preserve">
          <source>Cons</source>
          <target state="translated">Cons</target>
        </trans-unit>
        <trans-unit id="249e04f1269b1917c3e182dec46d8fa438b1d9af" translate="yes" xml:space="preserve">
          <source>Cons._concat()</source>
          <target state="translated">Cons._concat()</target>
        </trans-unit>
        <trans-unit id="0f5aae2fe1acd8e6c64023e3b1773eef6188a33f" translate="yes" xml:space="preserve">
          <source>Cons._every()</source>
          <target state="translated">Cons._every()</target>
        </trans-unit>
        <trans-unit id="03056a24223e35ec95df509835ba5e2efb52fb65" translate="yes" xml:space="preserve">
          <source>Cons._exists()</source>
          <target state="translated">Cons._exists()</target>
        </trans-unit>
        <trans-unit id="61d1da405716b941a77072418838540c8426bd25" translate="yes" xml:space="preserve">
          <source>Cons._filter()</source>
          <target state="translated">Cons._filter()</target>
        </trans-unit>
        <trans-unit id="b9402c404f8acb9f8550c0e8ebab4d02c2093931" translate="yes" xml:space="preserve">
          <source>Cons._flat_map()</source>
          <target state="translated">Cons._flat_map()</target>
        </trans-unit>
        <trans-unit id="675b14502851b33336a85e8e1ecd6e1a395b9225" translate="yes" xml:space="preserve">
          <source>Cons._fold()</source>
          <target state="translated">Cons._fold()</target>
        </trans-unit>
        <trans-unit id="60bc76a12a76a4e8dd821097e7471b53c28ae891" translate="yes" xml:space="preserve">
          <source>Cons._for_each()</source>
          <target state="translated">Cons._for_each()</target>
        </trans-unit>
        <trans-unit id="c35bffa2c8274a3598582ceb1cd2c1720ba115ed" translate="yes" xml:space="preserve">
          <source>Cons._map()</source>
          <target state="translated">Cons._map()</target>
        </trans-unit>
        <trans-unit id="8e82c7952b52498c17d3eb8d2b7370b1740c9b1b" translate="yes" xml:space="preserve">
          <source>Cons._rev_prepend()</source>
          <target state="translated">Cons._rev_prepend()</target>
        </trans-unit>
        <trans-unit id="26388336d33fc5c4dfbd44f5c95f81b919622d48" translate="yes" xml:space="preserve">
          <source>Cons._reverse()</source>
          <target state="translated">Cons._reverse()</target>
        </trans-unit>
        <trans-unit id="8e09c25da4daafc6f67f52bdb36ad7b78ff073ca" translate="yes" xml:space="preserve">
          <source>Cons.apply()</source>
          <target state="translated">Cons.apply()</target>
        </trans-unit>
        <trans-unit id="d9862edc55e4478245188ac8741c62949c870a86" translate="yes" xml:space="preserve">
          <source>Cons.concat()</source>
          <target state="translated">Cons.concat()</target>
        </trans-unit>
        <trans-unit id="dc4e67303af92b879ef62f9ce07d0933a6044a22" translate="yes" xml:space="preserve">
          <source>Cons.create()</source>
          <target state="translated">Cons.create()</target>
        </trans-unit>
        <trans-unit id="64996c01dfacb18188f14df1de4bfcc698d81709" translate="yes" xml:space="preserve">
          <source>Cons.drop()</source>
          <target state="translated">Cons.drop()</target>
        </trans-unit>
        <trans-unit id="f67f63726aaeba57b5982253fecc1a396cba6641" translate="yes" xml:space="preserve">
          <source>Cons.drop_while()</source>
          <target state="translated">Cons.drop_while()</target>
        </trans-unit>
        <trans-unit id="7765bbb38f4e80b35d3516d6cd3a2977b1d7dead" translate="yes" xml:space="preserve">
          <source>Cons.every()</source>
          <target state="translated">Cons.every()</target>
        </trans-unit>
        <trans-unit id="8da08a7db2086b5a353df17a0c43e0ea7af08d26" translate="yes" xml:space="preserve">
          <source>Cons.exists()</source>
          <target state="translated">Cons.exists()</target>
        </trans-unit>
        <trans-unit id="f4f37b67c9cc40c8374bbb9a3bf31a8494b45494" translate="yes" xml:space="preserve">
          <source>Cons.filter()</source>
          <target state="translated">Cons.filter()</target>
        </trans-unit>
        <trans-unit id="c60e641e2c5080f6ca61b94ebc0bcd469661909e" translate="yes" xml:space="preserve">
          <source>Cons.flat_map()</source>
          <target state="translated">Cons.flat_map()</target>
        </trans-unit>
        <trans-unit id="a114b84d249495c208e827f7c0a3298eec891bc6" translate="yes" xml:space="preserve">
          <source>Cons.fold()</source>
          <target state="translated">Cons.fold()</target>
        </trans-unit>
        <trans-unit id="30866374217f832c487e62c2721181bc419fa4cb" translate="yes" xml:space="preserve">
          <source>Cons.for_each()</source>
          <target state="translated">Cons.for_each()</target>
        </trans-unit>
        <trans-unit id="4d441401f595ee8d6943032485f51a78afdac63f" translate="yes" xml:space="preserve">
          <source>Cons.head()</source>
          <target state="translated">Cons.head()</target>
        </trans-unit>
        <trans-unit id="d517a7fbb4b535f2c7c228d2f4129ed6020cf52f" translate="yes" xml:space="preserve">
          <source>Cons.is_empty()</source>
          <target state="translated">Cons.is_empty()</target>
        </trans-unit>
        <trans-unit id="0a16ef86e893f888640769815a76a17f889152af" translate="yes" xml:space="preserve">
          <source>Cons.is_non_empty()</source>
          <target state="translated">Cons.is_non_empty()</target>
        </trans-unit>
        <trans-unit id="a46d3dac1b1591f8513923bc8dd61c7153da3655" translate="yes" xml:space="preserve">
          <source>Cons.map()</source>
          <target state="translated">Cons.map()</target>
        </trans-unit>
        <trans-unit id="cea3c2f5619db35b59a3907a33e0ae9e9c976b48" translate="yes" xml:space="preserve">
          <source>Cons.partition()</source>
          <target state="translated">Cons.partition()</target>
        </trans-unit>
        <trans-unit id="726d5877fe1d82cbe7137d6f896e1be04b18d100" translate="yes" xml:space="preserve">
          <source>Cons.prepend()</source>
          <target state="translated">Cons.prepend()</target>
        </trans-unit>
        <trans-unit id="44abbb87dd7812fedf4846e32f02b988a6be637b" translate="yes" xml:space="preserve">
          <source>Cons.reverse()</source>
          <target state="translated">Cons.reverse()</target>
        </trans-unit>
        <trans-unit id="d7bb10526dedf55a2cfe93a5f7f22711201cb431" translate="yes" xml:space="preserve">
          <source>Cons.size()</source>
          <target state="translated">Cons.size()</target>
        </trans-unit>
        <trans-unit id="da1f1241d0bf88baea9fbdcda4e5114f7685c4c8" translate="yes" xml:space="preserve">
          <source>Cons.tail()</source>
          <target state="translated">Cons.tail()</target>
        </trans-unit>
        <trans-unit id="df510f1a35fb95417bbd6f04f35385d287d04a38" translate="yes" xml:space="preserve">
          <source>Cons.take()</source>
          <target state="translated">Cons.take()</target>
        </trans-unit>
        <trans-unit id="847474505a48ff84057388d62efcc92d74b57a5a" translate="yes" xml:space="preserve">
          <source>Cons.take_while()</source>
          <target state="translated">Cons.take_while()</target>
        </trans-unit>
        <trans-unit id="dc70e23c09f0adf41e22940f97a6be46b2734e65" translate="yes" xml:space="preserve">
          <source>Cons.values()</source>
          <target state="translated">Cons.values()</target>
        </trans-unit>
        <trans-unit id="d0706d27bacf8f36e8eec2bec4c809a6e293dcdc" translate="yes" xml:space="preserve">
          <source>Cons[A: A]</source>
          <target state="translated">단점 [A : A]</target>
        </trans-unit>
        <trans-unit id="60a5c966a71a24034f9238685790a526710ef75d" translate="yes" xml:space="preserve">
          <source>Constructors</source>
          <target state="translated">Constructors</target>
        </trans-unit>
        <trans-unit id="beef1aa7dbd226615e4523fb21a854e069cc5ed3" translate="yes" xml:space="preserve">
          <source>Contains functions preventing some compiler optimisations, namely dead code removal. This is useful for benchmarking purposes.</source>
          <target state="translated">일부 컴파일러 최적화, 즉 데드 코드 제거를 방지하는 기능이 포함되어 있습니다. 벤치마킹 목적에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1a7af57c7cc8987f6cf02888a693037cd387cb42" translate="yes" xml:space="preserve">
          <source>Contains runtime assertions. If you are looking for assertion that only run when your code was compiled with the &lt;code&gt;debug&lt;/code&gt; flag, check out &lt;code&gt;Assert&lt;/code&gt;. For assertions that are always enabled, check out &lt;code&gt;Fact&lt;/code&gt;.</source>
          <target state="translated">런타임 어설 션을 포함합니다. &lt;code&gt;debug&lt;/code&gt; 플래그로 코드를 컴파일 할 때만 실행되는 어설 션을 찾으려면 &lt;code&gt;Assert&lt;/code&gt; 를 확인하십시오 . 항상 활성화 된 어설 션에 대해서는 &lt;code&gt;Fact&lt;/code&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="6daf8a1e47144721e7b0ae22899179f21e050bb5" translate="yes" xml:space="preserve">
          <source>Contiguous, resizable memory to store elements of type A.</source>
          <target state="translated">유형 A의 요소를 저장하기위한 연속적이고 크기 조정 가능한 메모리</target>
        </trans-unit>
        <trans-unit id="0a7e52d4d6041e2fdb2e06fa2f28005d85d5e4f2" translate="yes" xml:space="preserve">
          <source>Convenience functions to fetch the option level and option name constants (arguments #2 and #3) for the &lt;code&gt;getsockopt(2)&lt;/code&gt; and &lt;code&gt;setsockopt(2)&lt;/code&gt; operating system calls.</source>
          <target state="translated">&lt;code&gt;getsockopt(2)&lt;/code&gt; 및 &lt;code&gt;setsockopt(2)&lt;/code&gt; 운영 체제 호출에 대한 옵션 레벨 및 옵션 이름 상수 (인수 # 2 및 # 3)를 페치하는 편의 함수 .</target>
        </trans-unit>
        <trans-unit id="2434e591de9f343ee7cf4b8c993581c9efc1c7f8" translate="yes" xml:space="preserve">
          <source>Convenience operations on file descriptors.</source>
          <target state="translated">파일 디스크립터에 대한 편의 조작.</target>
        </trans-unit>
        <trans-unit id="bc9ef5e1f70632b5c5ecc722db233822bb45b706" translate="yes" xml:space="preserve">
          <source>Convert an array of String parameters into an array of C pointers to same strings.</source>
          <target state="translated">String 매개 변수 배열을 동일한 문자열에 대한 C 포인터 배열로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="09ce131a0775f76844cbb532e359ae3075709a35" translate="yes" xml:space="preserve">
          <source>Convert from Pointer[A] to Pointer[B].</source>
          <target state="translated">포인터 [A]에서 포인터 [B]로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b32a406d16b799ed7a827f884013ed1d04091038" translate="yes" xml:space="preserve">
          <source>Convert the &lt;em&gt;whole&lt;/em&gt; string to the specified type. If there are any other characters in the string, or the integer found is out of range for the target type then an error is thrown.</source>
          <target state="translated">&lt;em&gt;전체&lt;/em&gt; 문자열을 지정된 유형으로 변환하십시오 . 문자열에 다른 문자가 있거나 찾은 정수가 대상 유형의 범위를 벗어난 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dd700ee7895b6c002448d959dd8b92dfb93a9084" translate="yes" xml:space="preserve">
          <source>Convert the pointer into an integer.</source>
          <target state="translated">포인터를 정수로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="a8bb5182d545e2e041df0743a74d7ec6ab99dbae" translate="yes" xml:space="preserve">
          <source>Convert this string starting at the given offset to a 32-bit floating point number (&lt;a href=&quot;builtin-f32&quot;&gt;F32&lt;/a&gt;).</source>
          <target state="translated">지정된 오프셋에서 시작하여이 문자열을 32 비트 부동 소수점 숫자 ( &lt;a href=&quot;builtin-f32&quot;&gt;F32&lt;/a&gt; )로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d27d3bb3a904a1b255763b3c809f505e5d635cea" translate="yes" xml:space="preserve">
          <source>Convert this string starting at the given offset to a 64-bit floating point number (&lt;a href=&quot;builtin-f64&quot;&gt;F64&lt;/a&gt;).</source>
          <target state="translated">지정된 오프셋에서 시작하여이 문자열을 64 비트 부동 소수점 숫자 ( &lt;a href=&quot;builtin-f64&quot;&gt;F64&lt;/a&gt; )로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f6b9a1671e97c50678babbfd20ecffcd50305343" translate="yes" xml:space="preserve">
          <source>Converts a wall-clock adjusted system time to absolute expiration time</source>
          <target state="translated">벽시계로 조정 된 시스템 시간을 절대 만료 시간으로 변환</target>
        </trans-unit>
        <trans-unit id="812bd385451eaad1b32372fed3e5a2cde5ef620d" translate="yes" xml:space="preserve">
          <source>Copy copy_len characters from this to that at specified offsets.</source>
          <target state="translated">여기에서 copy_len 문자를 지정된 오프셋에 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="50efaa91345ec6c65bd88cdef66f0e7a5a414acc" translate="yes" xml:space="preserve">
          <source>Copy copy_len elements from this to that at specified offsets.</source>
          <target state="translated">copy_len 요소를 지정된 오프셋의 요소로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="e9b7d36b04cb00c5365378ba3e719c15ed5a462b" translate="yes" xml:space="preserve">
          <source>Copy len elements from src(src_idx) to this(dst_idx). Only works for Array[U8].</source>
          <target state="translated">len 요소를 src (src_idx)에서 this (dst_idx)로 복사하십시오. 어레이 [U8]에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6fdff1e90c45a25dde66547fe56d3abde1ba44cb" translate="yes" xml:space="preserve">
          <source>Copy len elements from this(src_idx) to dst(dst_idx).</source>
          <target state="translated">len 요소를 this (src_idx)에서 dst (dst_idx)로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="581e05f88eb1e6af4f50f927b1a0540a202c600c" translate="yes" xml:space="preserve">
          <source>Copy n elements from this to that.</source>
          <target state="translated">이것으로부터 n 개의 요소를 이것으로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="ec1698fdf8cfda747dd28508fb07fe29783c871c" translate="yes" xml:space="preserve">
          <source>Count leading zeroes.</source>
          <target state="translated">선행 0을 세십시오.</target>
        </trans-unit>
        <trans-unit id="ae3c47d6b5efa92071f1ed5c8247c1d490443ab2" translate="yes" xml:space="preserve">
          <source>Count trailing zeroes.</source>
          <target state="translated">후행 0을 세십시오.</target>
        </trans-unit>
        <trans-unit id="c0e2942e29feea78cae762cb6d398cbe0d4074eb" translate="yes" xml:space="preserve">
          <source>Counts the non-overlapping occurrences of s in the string.</source>
          <target state="translated">문자열에서 겹치지 않는 s 횟수를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="5caae242707f728769f2e4216f7eed1a4e4e8237" translate="yes" xml:space="preserve">
          <source>Create a FileLines instance on a given file.</source>
          <target state="translated">주어진 파일에 FileLines 인스턴스를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="276955d5d37500d77e24ddae721a8937663501fa" translate="yes" xml:space="preserve">
          <source>Create a Json array from an actual array.</source>
          <target state="translated">실제 배열에서 Json 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e1382d2df4006c9a8e7a6c706a6fc3c401bd06bf" translate="yes" xml:space="preserve">
          <source>Create a Json object from a map.</source>
          <target state="translated">지도에서 Json 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="78ebddcafb2bc6d83548ad86cdcd7f96a3651b4d" translate="yes" xml:space="preserve">
          <source>Create a PonyTest object and use it to run the tests from the given TestList</source>
          <target state="translated">PonyTest 오브젝트를 작성하고 주어진 TestList에서 테스트를 실행하는 데 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8cfaca35b446d1db02d38d85a30f8d6a998ed6f1" translate="yes" xml:space="preserve">
          <source>Create a UTF-8 string from a single UTF-32 code point.</source>
          <target state="translated">단일 UTF-32 코드 포인트에서 UTF-8 문자열을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="1fe97dc068b4ae01c5b3260cb9ce2ce01b5cc090" translate="yes" xml:space="preserve">
          <source>Create a clone.</source>
          <target state="translated">복제본을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dbf926da4b5499e367e3f3b077b2ea670307d814" translate="yes" xml:space="preserve">
          <source>Create a clone. The element type may be different due to aliasing and viewpoint adaptation.</source>
          <target state="translated">복제본을 만듭니다. 요소 유형은 앨리어싱 및 관측점 적응으로 인해 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad950d94ed2bbe84def43842d164dfc9b1cb8cf4" translate="yes" xml:space="preserve">
          <source>Create a clone. The key and value types may be different due to aliasing and viewpoint adaptation.</source>
          <target state="translated">복제본을 만듭니다. 키 및 값 유형은 앨리어싱 및 관측점 적응으로 인해 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dffa2ccf1057bc181ea69b3ee631a732e01b341b" translate="yes" xml:space="preserve">
          <source>Create a date from a POSIX time. Negative arguments will be changed to zero.</source>
          <target state="translated">POSIX 시간에서 날짜를 작성하십시오. 음수 인수는 0으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="849f08d841d0c12801490a6d4c069f68fef508f4" translate="yes" xml:space="preserve">
          <source>Create a map with space for prealloc elements without triggering a resize. Defaults to 6.</source>
          <target state="translated">크기 조정을 트리거하지 않고 사전 할당 요소를위한 공간이있는 맵을 만듭니다. 기본값은 6입니다.</target>
        </trans-unit>
        <trans-unit id="a74b3c31ddba495f1a42c4683141e7d0a855007d" translate="yes" xml:space="preserve">
          <source>Create a new ANSI term.</source>
          <target state="translated">새로운 ANSI 용어를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8f75c3b0c4cf5db028d9d49c4e58ada7baf7a3de" translate="yes" xml:space="preserve">
          <source>Create a new TCPConnectionNotify to attach to a new TCPConnection for a newly established connection to the server.</source>
          <target state="translated">서버에 새로 설정된 연결을 위해 새 TCPConnection에 연결할 새 TCPConnectionNotify를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="538a23cd0115f593a54151eb34812848ddf31be3" translate="yes" xml:space="preserve">
          <source>Create a new TestHelper.</source>
          <target state="translated">새로운 TestHelper를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6d3e80857e8f6ddbcb0804166ad6b1325be31506" translate="yes" xml:space="preserve">
          <source>Create a new array that is a clone of a portion of this array. The range is exclusive and saturated. The new array contains references to the same elements that the old array contains, the elements themselves are not cloned.</source>
          <target state="translated">이 배열의 일부를 복제 한 새 배열을 만듭니다. 범위는 독점적이고 포화 상태입니다. 새 배열에는 이전 배열에 포함 된 것과 동일한 요소에 대한 참조가 포함되며 요소 자체는 복제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b1bc7947433eb88eda822965c6c51941598fa7a" translate="yes" xml:space="preserve">
          <source>Create a new array with the elements in reverse order. The new array contains references to the same elements that the old array contains, the elements themselves are not copied.</source>
          <target state="translated">요소를 역순으로 새 배열을 만듭니다. 새 배열에는 이전 배열에 포함 된 것과 동일한 요소에 대한 참조가 포함되며 요소 자체는 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e7dca2fcf58e9807beaed5dd2b918922e84415e3" translate="yes" xml:space="preserve">
          <source>Create a new array with the elements permuted. Permute to an arbitrary order that may include duplicates. An out of bounds index raises an error. The new array contains references to the same elements that the old array contains, the elements themselves are not copied.</source>
          <target state="translated">요소가 치환 된 새 배열을 만듭니다. 중복을 포함 할 수있는 임의의 순서로 치환 범위를 벗어난 인덱스는 오류를 발생시킵니다. 새 배열에는 이전 배열에 포함 된 것과 동일한 요소에 대한 참조가 포함되며 요소 자체는 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d5fac0b3205e8fea89be75ff36952a0730b9ec4" translate="yes" xml:space="preserve">
          <source>Create a new path. The caller must either provide the root capability or an existing FilePath.</source>
          <target state="translated">새로운 경로를 만듭니다. 호출자는 루트 기능 또는 기존 FilePath를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="81ea7bec4af41a8a4f2576553ae0ff08f3299eed" translate="yes" xml:space="preserve">
          <source>Create a new timer. The expiration time should be a nanosecond count until the first expiration. The interval should also be in nanoseconds.</source>
          <target state="translated">새 타이머를 만듭니다. 만료 시간은 첫 번째 만료까지 나노초 카운트 여야합니다. 간격도 나노초 단위 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a8b5eaad1c6c7e255463507d1f146d352e37d4fe" translate="yes" xml:space="preserve">
          <source>Create a node. Initially, it is not in any list.</source>
          <target state="translated">노드를 작성하십시오. 처음에는 목록에 없습니다.</target>
        </trans-unit>
        <trans-unit id="7f049c2b35c1fe5ca9959c96fd4e32daf2c7d80c" translate="yes" xml:space="preserve">
          <source>Create a promise that is fulfilled when all promises in the given sequence are fulfilled. If any promise in the sequence is rejected then the new promise is also rejected. The order that values appear in the final array is based on when each promise is fulfilled and not the order that they are given.</source>
          <target state="translated">주어진 순서대로 모든 약속이 이행되면 이행되는 약속을 작성하십시오. 순서의 약속이 거부되면 새 약속도 거부됩니다. 최종 배열에 값이 나타나는 순서는 각 약속이 이행되는 시점을 기준으로하며 주어진 순서가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b0b6e0281a43aa8ebf386ff9927990275de9ead3" translate="yes" xml:space="preserve">
          <source>Create a promise that is fulfilled when the receiver and all promises in the given iterator are fulfilled. If the receiver or any promise in the sequence is rejected then the new promise is also rejected.</source>
          <target state="translated">수신자와 주어진 반복자의 모든 약속이 이행 될 때 충족되는 약속을 작성하십시오. 수신자 또는 시퀀스의 약속이 거부되면 새 약속도 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="21e9f99ee5aab3a0b6908d838f1fa9ff6fd055bb" translate="yes" xml:space="preserve">
          <source>Create a readline handler to be passed to stdin. It begins blocked. Set an initial prompt on the ANSITerm to begin processing.</source>
          <target state="translated">stdin에 전달할 readline 핸들러를 작성하십시오. 차단되기 시작합니다. 처리를 시작하려면 ANSITerm에 초기 프롬프트를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9fa05ae1ffe63da7776bc3d0b93d6226766b2b88" translate="yes" xml:space="preserve">
          <source>Create a ring buffer with a fixed size. The size will be rounded up to the next power of 2.</source>
          <target state="translated">고정 된 크기의 링 버퍼를 만듭니다. 크기는 다음 2의 거듭 제곱으로 올림됩니다.</target>
        </trans-unit>
        <trans-unit id="8a52a83f87939bfec46e6c70b3f00b452d432889" translate="yes" xml:space="preserve">
          <source>Create a sequence, reserving space for len elements.</source>
          <target state="translated">len 요소를위한 공간을 확보하여 시퀀스를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="36e10e668f9d94e7494470854eeb301debb35b47" translate="yes" xml:space="preserve">
          <source>Create a set with the elements of both this and that.</source>
          <target state="translated">이것과 저것의 요소로 세트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c80a4e44ceb16366f8a1f4d7dc6ccf5439e453c4" translate="yes" xml:space="preserve">
          <source>Create a set with the elements of this that are not in that.</source>
          <target state="translated">이것에 포함되지 않은 요소로 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="92652a85f7033d82f4e3cf7bde3378f664e2c5fe" translate="yes" xml:space="preserve">
          <source>Create a set with the elements that are in both this and that.</source>
          <target state="translated">이것과 저것에있는 요소로 세트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="005e2503572f38e324f86100b1dcc640e5d6129a" translate="yes" xml:space="preserve">
          <source>Create a set with the elements that are in either set but not both.</source>
          <target state="translated">둘 중 하나만있는 요소를 사용하여 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e3cff007566d860c15ef72d4a1c5db612909b11b" translate="yes" xml:space="preserve">
          <source>Create a signal handler.</source>
          <target state="translated">신호 처리기를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e97ba182308e579f2a78d6f06c87d926b242e138" translate="yes" xml:space="preserve">
          <source>Create a string by copying a fixed number of bytes from a pointer.</source>
          <target state="translated">포인터에서 고정 된 수의 바이트를 복사하여 문자열을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="0cad7286fe5be77e77eab815fc0806197a8106ba" translate="yes" xml:space="preserve">
          <source>Create a string by copying a null-terminated C string. Note that the scan is unbounded; the pointed to data must be null-terminated within the allocated array to preserve memory safety. If a null pointer is given then an empty string is returned.</source>
          <target state="translated">널 종료 C 문자열을 복사하여 문자열을 작성하십시오. 스캔은 제한이 없습니다. 메모리 안전을 유지하려면 할당 된 배열 내에서 데이터를 가리키는 널 (NULL)로 끝나야합니다. 널 포인터가 제공되면 빈 문자열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="2facac7b33017c884c63099fcabae3a5455d9434" translate="yes" xml:space="preserve">
          <source>Create a string from an array, reusing the underlying data pointer</source>
          <target state="translated">기본 데이터 포인터를 재사용하여 배열에서 문자열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4bbdffd550e91be95e9fcce3da6657685730e282" translate="yes" xml:space="preserve">
          <source>Create a string from an array, reusing the underlying data pointer.</source>
          <target state="translated">기본 데이터 포인터를 재사용하여 배열에서 문자열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="12bb868a99fc807d84e81a2d1e41d432f3917282" translate="yes" xml:space="preserve">
          <source>Create a symlink to a file or directory.</source>
          <target state="translated">파일 또는 디렉토리에 대한 심볼릭 링크를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f7edb553f55d66fea08d5d51462ac90e3baa2d29" translate="yes" xml:space="preserve">
          <source>Create a temporary directory and returns a path to it. The directory's name will begin with &lt;code&gt;prefix&lt;/code&gt;. The caller must either provide the root capability or an existing FilePath.</source>
          <target state="translated">임시 디렉토리를 작성하고 경로를 리턴하십시오. 디렉토리 이름은 &lt;code&gt;prefix&lt;/code&gt; 로 시작 합니다 . 호출자는 루트 기능 또는 기존 FilePath를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe2322896bde770478cc070d9e77adbebc85baed" translate="yes" xml:space="preserve">
          <source>Create a timer handler with the specified number of slop bits. No slop bits means trying for nanosecond resolution. 10 slop bits is approximately microsecond resolution, 20 slop bits is approximately millisecond resolution.</source>
          <target state="translated">지정된 슬롭 비트 수로 타이머 처리기를 만듭니다. 슬롭 비트가 없다는 것은 나노초 해상도를 시도한다는 의미입니다. 10 슬롭 비트는 대략 마이크로 초 분해능이고, 20 슬롭 비트는 대략 밀리 초 분해능입니다.</target>
        </trans-unit>
        <trans-unit id="f4f457f67886458993be343b76ac425e2e52a5f9" translate="yes" xml:space="preserve">
          <source>Create a timing wheel at the given hierarchical level.</source>
          <target state="translated">주어진 계층 레벨에서 타이밍 휠을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="88030dda399830a9fc1110db118630076279670b" translate="yes" xml:space="preserve">
          <source>Create an array from a C-style pointer and length. The contents are not copied.</source>
          <target state="translated">C 스타일 포인터와 길이로 배열을 만듭니다. 내용이 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="47335c2c506f5f4506e7f6f609c70d1e2c188090" translate="yes" xml:space="preserve">
          <source>Create an array of len elements, all initialised to the given value.</source>
          <target state="translated">주어진 값으로 초기화 된 len 요소의 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c367fc0bf36beb4beb94f007e05ed51f2c8f163b" translate="yes" xml:space="preserve">
          <source>Create an array with space for prealloc elements without triggering a resize. Defaults to 6.</source>
          <target state="translated">크기 조정을 트리거하지 않고 사전 할당 요소를위한 공간이있는 배열을 만듭니다. 기본값은 6입니다.</target>
        </trans-unit>
        <trans-unit id="e73415fc5a115b578af206089938cdd018764eb2" translate="yes" xml:space="preserve">
          <source>Create an array with zero elements, but space for len elements.</source>
          <target state="translated">요소가 0이지만 len 요소를위한 공간이있는 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="77cf812f49d63e2e9972233e3da16aa67af4dc4d" translate="yes" xml:space="preserve">
          <source>Create an async stream for stderr.</source>
          <target state="translated">stderr에 대한 비동기 스트림을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="d079ca623d48c85b9457045eb51e47700e499aa5" translate="yes" xml:space="preserve">
          <source>Create an async stream for stdout.</source>
          <target state="translated">stdout에 대한 비동기 스트림을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="01715f9ec8e1fbe3fbefb2f2540db7ed0fe9f807" translate="yes" xml:space="preserve">
          <source>Create an asynchronous stdin provider.</source>
          <target state="translated">비동기 stdin 제공자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="5e32f1e5822295ea3d5ee4e0c3fc666b750b1476" translate="yes" xml:space="preserve">
          <source>Create an empty heap with space for &lt;code&gt;len&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; 요소를 위한 공간이있는 빈 힙을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec5db3a23cbe4542839871c95daa8617c3ce9c2c" translate="yes" xml:space="preserve">
          <source>Create an iterator that returns the given value forever.</source>
          <target state="translated">주어진 값을 영원히 리턴하는 반복자를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="03e4dcb0e36fde65a6fc561ecda86516b653e23d" translate="yes" xml:space="preserve">
          <source>Create infrastructure to communicate with a forked child process and register the asio events. Fork child process and notify our user about incoming data via the notifier.</source>
          <target state="translated">분기 하위 프로세스와 통신하고 ASIO 이벤트를 등록 할 인프라를 만듭니다. 자식 프로세스를 포크하고 사용자에게 알리미를 통해 들어오는 데이터를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="fc1ada374f2fee15703c325a6fab0ee84c6b7baf" translate="yes" xml:space="preserve">
          <source>Create with the specified seed. Returned values are deterministic for a given seed.</source>
          <target state="translated">지정된 시드로 작성하십시오. 반환 된 값은 주어진 시드에 대해 결정적입니다.</target>
        </trans-unit>
        <trans-unit id="8f40f57f9492b3e48f797cfcaf50c07df2a5569c" translate="yes" xml:space="preserve">
          <source>CreateFile</source>
          <target state="translated">CreateFile</target>
        </trans-unit>
        <trans-unit id="45e1c50cffa2565ad969c36de2e68753f5384ba1" translate="yes" xml:space="preserve">
          <source>CreateFile.apply()</source>
          <target state="translated">CreateFile.apply()</target>
        </trans-unit>
        <trans-unit id="170c1ba62c55db91f573a5ccc22e75fee85247aa" translate="yes" xml:space="preserve">
          <source>CreateFile.create()</source>
          <target state="translated">CreateFile.create()</target>
        </trans-unit>
        <trans-unit id="9659e0f2f7e74790671d1db22c49f45e7c693e6c" translate="yes" xml:space="preserve">
          <source>CreateFile.eq()</source>
          <target state="translated">CreateFile.eq()</target>
        </trans-unit>
        <trans-unit id="8871825092304627da68e4d63a489eb2727c03b1" translate="yes" xml:space="preserve">
          <source>CreateFile.ne()</source>
          <target state="translated">CreateFile.ne()</target>
        </trans-unit>
        <trans-unit id="53073dff08abd0d5a88fd8270b6a84c7fdebe7aa" translate="yes" xml:space="preserve">
          <source>Creates a UDP socket that can be used for sending and receiving UDP messages.</source>
          <target state="translated">UDP 메시지를 보내고받는 데 사용할 수있는 UDP 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4f378d1f55648f38a63912c3ae65ed67e82fca65" translate="yes" xml:space="preserve">
          <source>Creates a command help for a specific command that can print a detailed help message.</source>
          <target state="translated">자세한 도움말 메시지를 인쇄 할 수있는 특정 명령에 대한 명령 도움말을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7b09d82094684c3f365ffa3d93eeadec6ffc47f7" translate="yes" xml:space="preserve">
          <source>Creates a command help that can print a general program help message.</source>
          <target state="translated">일반 프로그램 도움말 메시지를 인쇄 할 수있는 명령 도움말을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="44ad5b1d259742a3082de0b624be4dfbe3919592" translate="yes" xml:space="preserve">
          <source>Creates a command spec that can accept options and arguments, but not child commands.</source>
          <target state="translated">하위 명령이 아닌 옵션 및 인수를 허용 할 수있는 명령 스펙을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="149c6429be3803570499ba76d48647e4a62bb749" translate="yes" xml:space="preserve">
          <source>Creates a command spec that can accept options and child commands, but not arguments.</source>
          <target state="translated">옵션과 자식 명령은 허용하지만 인수는 허용하지 않는 명령 사양을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="267b4c13bdce92c9deedb215ae2fcdf2cb239ee7" translate="yes" xml:space="preserve">
          <source>Creates a copy of the file descriptor oldfd using the file descriptor number specified in newfd. If the file descriptor newfd was previously open, it is silently closed before being reused. If dup2() fails because of EINTR we retry.</source>
          <target state="translated">newfd에 지정된 파일 디스크립터 번호를 사용하여 파일 디스크립터 oldfd의 사본을 작성합니다. 파일 디스크립터 newfd가 이전에 열린 경우 재사용하기 전에 자동으로 닫힙니다. EINTR로 인해 dup2 ()가 실패하면 다시 시도합니다.</target>
        </trans-unit>
        <trans-unit id="fb7ee2220a5c327d6582e737bdae6cd64f358034" translate="yes" xml:space="preserve">
          <source>Creates a directory relative to this one. Returns false if the path is not within this directory hierarchy or if FileMkdir permission is missing.</source>
          <target state="translated">이 디렉토리를 기준으로 디렉토리를 만듭니다. 경로가이 디렉토리 계층 내에 있지 않거나 FileMkdir 권한이없는 경우 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c8053f6d0cfa91a2ae81a559510d9c0d93ba649f" translate="yes" xml:space="preserve">
          <source>Creates a new parser for a given command spec.</source>
          <target state="translated">지정된 명령 스펙에 대한 새로운 파서를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="16c9dd37e273cb93bdf37f7c27d0a301bb0e1843" translate="yes" xml:space="preserve">
          <source>Creates a new timer with an absolute expiration time rather than a relative time. The expiration time is wall-clock adjusted system time.</source>
          <target state="translated">상대 시간이 아닌 절대 만료 시간으로 새 타이머를 만듭니다. 만료 시간은 벽시계로 조정 된 시스템 시간입니다.</target>
        </trans-unit>
        <trans-unit id="2aac648fbc02b7ddd6bf2dfcbab83848ac541440" translate="yes" xml:space="preserve">
          <source>Creates a nil pipe for use as a placeholder.</source>
          <target state="translated">자리 표시 자로 사용할 nil 파이프를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bce27afb9ce50ba8d84befec10f247d08ccf7687" translate="yes" xml:space="preserve">
          <source>Creates a string that is the common prefix of the supplied strings, possibly empty.</source>
          <target state="translated">제공된 문자열의 공통 접두사 인 문자열을 작성하며, 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdf4fc84808c93076f4698aa48c8680983cf2930" translate="yes" xml:space="preserve">
          <source>Creates an Arg with a Bool typed value that can be used like &lt;code&gt;&amp;lt;cmd&amp;gt; true&lt;/code&gt; to yield an arg value like &lt;code&gt;cmd.arg(&quot;opt&quot;).bool() == true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.arg(&quot;opt&quot;).bool() == true&lt;/code&gt; 와 같은 인수 값을 생성하기 위해 &lt;code&gt;&amp;lt;cmd&amp;gt; true&lt;/code&gt; 와 같이 사용할 수있는 Bool 유형 값으로 Arg를 작성 합니다 .</target>
        </trans-unit>
        <trans-unit id="70bdab3429acaa98750c528c71931adffb405183" translate="yes" xml:space="preserve">
          <source>Creates an Arg with a F64 typed value that can be used like &lt;code&gt;&amp;lt;cmd&amp;gt; 1.039&lt;/code&gt; to yield an arg value like &lt;code&gt;cmd.arg(&quot;ratio&quot;).f64() == F64(1.039)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.arg(&quot;ratio&quot;).f64() == F64(1.039)&lt;/code&gt; 와 같은 arg 값을 생성하기 위해 &lt;code&gt;&amp;lt;cmd&amp;gt; 1.039&lt;/code&gt; 와 같이 사용할 수있는 F64 유형 값으로 Arg를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="aebb79f26542af095919eadeb8554d746973e469" translate="yes" xml:space="preserve">
          <source>Creates an Arg with a ReadSeq[String] typed value that can be used like &lt;code&gt;&amp;lt;cmd&amp;gt; file1 file2 file3&lt;/code&gt; to yield a sequence of three strings equivalent to &lt;code&gt;cmd.arg(&quot;file&quot;).string_seq() (equiv) [&quot;file1&quot;; &quot;file2&quot;; &quot;file3&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;cmd&amp;gt; file1 file2 file3&lt;/code&gt; 과 같이 &lt;code&gt;cmd.arg(&quot;file&quot;).string_seq() (equiv) [&quot;file1&quot;; &quot;file2&quot;; &quot;file3&quot;]&lt;/code&gt; 해당하는 세 개의 문자열 시퀀스를 생성하는 데 사용할 수있는 ReadSeq [String] 유형의 값으로 Arg를 작성합니다 . ; &quot;file2&quot;; &quot;file3&quot;] .</target>
        </trans-unit>
        <trans-unit id="d46b72e0a0bad289509b18409a73fd22ee37d0fa" translate="yes" xml:space="preserve">
          <source>Creates an Arg with a String typed value that can be used like &lt;code&gt;&amp;lt;cmd&amp;gt; filename&lt;/code&gt; to yield an arg value &lt;code&gt;cmd.arg(&quot;file&quot;).string() == &quot;filename&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;cmd&amp;gt; filename&lt;/code&gt; 과 같이 사용 하여 arg 값 &lt;code&gt;cmd.arg(&quot;file&quot;).string() == &quot;filename&quot;&lt;/code&gt; 을 생성 할 수있는 String 형식의 값으로 Arg를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ca5825fd43bfcd942fbe74292a330203324e923c" translate="yes" xml:space="preserve">
          <source>Creates an Arg with an I64 typed value that can be used like &lt;code&gt;&amp;lt;cmd&amp;gt; 42&lt;/code&gt; to yield an arg value like &lt;code&gt;cmd.arg(&quot;count&quot;).i64() == I64(42)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.arg(&quot;count&quot;).i64() == I64(42)&lt;/code&gt; 와 같은 arg 값을 생성하기 위해 &lt;code&gt;&amp;lt;cmd&amp;gt; 42&lt;/code&gt; 와 같이 사용할 수있는 I64 유형의 값으로 Arg를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="0d749973a708c498bac6999cf7e9f6748e9f133a" translate="yes" xml:space="preserve">
          <source>Creates an Arg with an U64 typed value that can be used like &lt;code&gt;&amp;lt;cmd&amp;gt; 47&lt;/code&gt; to yield an arg value like &lt;code&gt;cmd.arg(&quot;count&quot;).u64() == U64(47)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.arg(&quot;count&quot;).u64() == U64(47)&lt;/code&gt; 과 같은 arg 값을 생성하기 위해 &lt;code&gt;&amp;lt;cmd&amp;gt; 47&lt;/code&gt; 과 같이 사용할 수있는 U64 유형 값으로 Arg를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="8429da372854dacdc92eae4930ac1e0258cd43e6" translate="yes" xml:space="preserve">
          <source>Creates an Option with a Bool typed value that can be used like &lt;code&gt;--opt&lt;/code&gt; or &lt;code&gt;-O&lt;/code&gt; or &lt;code&gt;--opt=true&lt;/code&gt; or &lt;code&gt;-O=true&lt;/code&gt; to yield an option value like &lt;code&gt;cmd.option(&quot;opt&quot;).bool() == true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.option(&quot;opt&quot;).bool() == true&lt;/code&gt; 와 같은 옵션 값을 생성하기 위해 &lt;code&gt;--opt&lt;/code&gt; 또는 &lt;code&gt;-O&lt;/code&gt; 또는 &lt;code&gt;--opt=true&lt;/code&gt; 또는 &lt;code&gt;-O=true&lt;/code&gt; 와 같이 사용할 수있는 Bool 유형의 값으로 Option을 만듭니다 . 사실 입니다.</target>
        </trans-unit>
        <trans-unit id="9ca562747581daf5e7fcfd2a071be2bde598f681" translate="yes" xml:space="preserve">
          <source>Creates an Option with a F64 typed value that can be used like &lt;code&gt;--ratio=1.039&lt;/code&gt; or &lt;code&gt;-R=1.039&lt;/code&gt; to yield an option value like &lt;code&gt;cmd.option(&quot;ratio&quot;).f64() == F64(1.039)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.option(&quot;ratio&quot;).f64() == F64(1.039)&lt;/code&gt; 와 같은 옵션 값을 생성하기 위해 &lt;code&gt;--ratio=1.039&lt;/code&gt; 또는 &lt;code&gt;-R=1.039&lt;/code&gt; 와 같이 사용할 수있는 F64 유형 값으로 Option을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="df8953e2ae88b43267f50472e4df05ed1fc5c9e6" translate="yes" xml:space="preserve">
          <source>Creates an Option with a ReadSeq[String] typed value that can be used like &lt;code&gt;--files=file1 --files=files2 --files=files2&lt;/code&gt; to yield a sequence of three strings equivalent to &lt;code&gt;cmd.option(&quot;ratio&quot;).string_seq() (equiv) [&quot;file1&quot;; &quot;file2&quot;; &quot;file3&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--files=file1 --files=files2 --files=files2&lt;/code&gt; 와 같이 &lt;code&gt;cmd.option(&quot;ratio&quot;).string_seq() (equiv) [&quot;file1&quot;; &quot;file2&quot;; &quot;file3&quot;]&lt;/code&gt; 해당하는 3 개의 문자열 시퀀스를 생성하는 데 사용할 수있는 ReadSeq [String] 유형 값을 사용하여 Option을 만듭니다 . () (같은) [ &quot;file1&quot;; &quot;file2&quot;; &quot;file3&quot;] .</target>
        </trans-unit>
        <trans-unit id="64881598b3ea0921aa8b08e2c7002781c6cf398e" translate="yes" xml:space="preserve">
          <source>Creates an Option with a String typed value that can be used like &lt;code&gt;--file=dir/filename&lt;/code&gt; or &lt;code&gt;-F=dir/filename&lt;/code&gt; or &lt;code&gt;-Fdir/filename&lt;/code&gt; to yield an option value like &lt;code&gt;cmd.option(&quot;file&quot;).string() == &quot;dir/filename&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.option(&quot;file&quot;).string() == &quot;dir/filename&quot;&lt;/code&gt; 과 같은 옵션 값을 생성하기 위해 &lt;code&gt;--file=dir/filename&lt;/code&gt; 또는 &lt;code&gt;-F=dir/filename&lt;/code&gt; 또는 &lt;code&gt;-Fdir/filename&lt;/code&gt; 과 같이 사용할 수있는 문자열 형식의 값으로 Option을 만듭니다 . == &quot;dir / filename&quot; .</target>
        </trans-unit>
        <trans-unit id="f6462e20ff2fefcdfc30f9f15f4831ab46ce497e" translate="yes" xml:space="preserve">
          <source>Creates an Option with an I64 typed value that can be used like &lt;code&gt;--count=42 -C=42&lt;/code&gt; to yield an option value like &lt;code&gt;cmd.option(&quot;count&quot;).i64() == I64(42)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.option(&quot;count&quot;).i64() == I64(42)&lt;/code&gt; 와 같은 옵션 값을 생성하기 위해 &lt;code&gt;--count=42 -C=42&lt;/code&gt; 와 같이 사용할 수있는 I64 유형의 값으로 Option을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b7e826ce44034f4f82eea8bb17b8240698d79268" translate="yes" xml:space="preserve">
          <source>Creates an Option with an U64 typed value that can be used like &lt;code&gt;--count=47 -C=47&lt;/code&gt; to yield an option value like &lt;code&gt;cmd.option(&quot;count&quot;).u64() == U64(47)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cmd.option(&quot;count&quot;).u64() == U64(47)&lt;/code&gt; 과 같은 옵션 값을 생성하기 위해 &lt;code&gt;--count=47 -C=47&lt;/code&gt; 과 같이 사용할 수있는 U64 유형 값으로 Option을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9e0da08c3cf4f5f8f3b79c2253cc7536254e29bd" translate="yes" xml:space="preserve">
          <source>Creates an incoming pipe.</source>
          <target state="translated">들어오는 파이프를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f863a96b93d3c1a01e30391d495e8c82a4ab0ab5" translate="yes" xml:space="preserve">
          <source>Creates an iterator for the given map.</source>
          <target state="translated">지정된 맵의 반복자를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="614b795a6755bddfd9a60ac0867e111a0408f78d" translate="yes" xml:space="preserve">
          <source>Creates an iterator for the given set.</source>
          <target state="translated">지정된 세트의 반복자를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ecc8c42bedcf34e093531ed104a4753a906dd0d1" translate="yes" xml:space="preserve">
          <source>Creates an outgoing pipe.</source>
          <target state="translated">나가는 파이프를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="565ef26b3cc98a8c307cb77b39980aafe98af396" translate="yes" xml:space="preserve">
          <source>Creates space for n new elements at the head, moving following elements. The array length before this should be len, and the available space should be at least n + len.</source>
          <target state="translated">다음 요소를 이동하면서 머리에 n 개의 새 요소를위한 공간을 만듭니다. 이 전의 배열 길이는 len이어야하고 사용 가능한 공간은 n + len 이상이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8ef470784d54c46ae8d99b293b53514e1f5a0029" translate="yes" xml:space="preserve">
          <source>Creates the directory. Will recursively create each element. Returns true if the directory exists when we're done, false if it does not. If we do not have the FileStat permission, this will return false even if the directory does exist.</source>
          <target state="translated">디렉토리를 작성합니다. 각 요소를 재귀 적으로 만듭니다. 완료시 디렉토리가 존재하면 true를, 그렇지 않으면 false를 리턴합니다. FileStat 권한이 없으면 디렉토리가 존재하더라도 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b97a032434af4d2f30e1d68fa9be7e02ace6e7b5" translate="yes" xml:space="preserve">
          <source>Creating an Array of String.</source>
          <target state="translated">문자열 배열 만들기</target>
        </trans-unit>
        <trans-unit id="aa6b29db00e733fe4ce29035bc509f45bda3f944" translate="yes" xml:space="preserve">
          <source>Creating an Array of String:</source>
          <target state="translated">문자열 배열 만들기 :</target>
        </trans-unit>
        <trans-unit id="635b3b555928de39add022de3bb6fe6bafc10854" translate="yes" xml:space="preserve">
          <source>Creating an empty Array of String, which may hold at least 10 elements before requesting more space.</source>
          <target state="translated">빈 문자열 배열 만들기-더 많은 공간을 요청하기 전에 10 개 이상의 요소를 보유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52814774e65569bc719b42babba169bc4ae3e6b8" translate="yes" xml:space="preserve">
          <source>Creating an empty Array of String, which may hold at least 10 elements before requesting more space:</source>
          <target state="translated">추가 공간을 요청하기 전에 최소 10 개의 요소를 보유 할 수있는 빈 문자열 배열 생성 :</target>
        </trans-unit>
        <trans-unit id="1d149db52f226450fa8244c0a6741e9e71cfb24f" translate="yes" xml:space="preserve">
          <source>Currently &lt;em&gt;does not&lt;/em&gt; support multi-line entries.</source>
          <target state="translated">현재 여러 줄 항목을 지원 &lt;em&gt;하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="75ed878fe27fbe9c062f6e4f97437be42650aca4" translate="yes" xml:space="preserve">
          <source>Custodian</source>
          <target state="translated">Custodian</target>
        </trans-unit>
        <trans-unit id="f28cddf65f729bcef15ca8d3262945fe02a64087" translate="yes" xml:space="preserve">
          <source>Custodian.apply()</source>
          <target state="translated">Custodian.apply()</target>
        </trans-unit>
        <trans-unit id="eec2c653a3d53ea0975b44596e18907d2d770272" translate="yes" xml:space="preserve">
          <source>Custodian.create()</source>
          <target state="translated">Custodian.create()</target>
        </trans-unit>
        <trans-unit id="9288761cea5e1974fb0c40b029eadebe461b2c35" translate="yes" xml:space="preserve">
          <source>Custodian.dispose()</source>
          <target state="translated">Custodian.dispose()</target>
        </trans-unit>
        <trans-unit id="5dc0a6904be9666dd967970bbb084309642c912b" translate="yes" xml:space="preserve">
          <source>Custodian.remove()</source>
          <target state="translated">Custodian.remove()</target>
        </trans-unit>
        <trans-unit id="adffcd35af7f272e174e3a6191b80694ea10a8ea" translate="yes" xml:space="preserve">
          <source>Custom formatting your logs</source>
          <target state="translated">로그 사용자 정의 형식</target>
        </trans-unit>
        <trans-unit id="e8a7ffb1122bac877879711ea968ff4a94982f68" translate="yes" xml:space="preserve">
          <source>Cuts the given range out of the string. Index range [&lt;code&gt;from&lt;/code&gt; .. &lt;code&gt;to&lt;/code&gt;) is half-open.</source>
          <target state="translated">주어진 범위를 문자열에서 잘라냅니다. .. &lt;code&gt;from&lt;/code&gt; . &lt;code&gt;to&lt;/code&gt; 인덱스 범위 는 반쯤 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b33d38a66316d24660463cf4903dc873f1b8e60" translate="yes" xml:space="preserve">
          <source>Cyan background.</source>
          <target state="translated">시안 색 배경입니다.</target>
        </trans-unit>
        <trans-unit id="b8515ad516e40a12438dc665a9adc9250ec65f07" translate="yes" xml:space="preserve">
          <source>Cyan text.</source>
          <target state="translated">청록색 텍스트.</target>
        </trans-unit>
        <trans-unit id="3ddc21b1eaa5ad6e57bb26bc517091c9b2d2e86d" translate="yes" xml:space="preserve">
          <source>DNS</source>
          <target state="translated">DNS</target>
        </trans-unit>
        <trans-unit id="4d71727c8439711d41d7f24a9f91fafdfc5980a9" translate="yes" xml:space="preserve">
          <source>DNS._resolve()</source>
          <target state="translated">DNS._resolve()</target>
        </trans-unit>
        <trans-unit id="2f05dcc6ba9f44bb78079f8304c818374bed5918" translate="yes" xml:space="preserve">
          <source>DNS.apply()</source>
          <target state="translated">DNS.apply()</target>
        </trans-unit>
        <trans-unit id="94a4447041bd1a828f20034d93599a8936cc69b4" translate="yes" xml:space="preserve">
          <source>DNS.broadcast_ip4()</source>
          <target state="translated">DNS.broadcast_ip4()</target>
        </trans-unit>
        <trans-unit id="1fe289e5c7ae2299eca58b8c8b66132a1dcb2901" translate="yes" xml:space="preserve">
          <source>DNS.broadcast_ip6()</source>
          <target state="translated">DNS.broadcast_ip6()</target>
        </trans-unit>
        <trans-unit id="1a6cbf7eb6fb544c992428c0afe0759f3cbe1193" translate="yes" xml:space="preserve">
          <source>DNS.create()</source>
          <target state="translated">DNS.create()</target>
        </trans-unit>
        <trans-unit id="f39da81833c0ae5ce0d118a6836d86e07bcbc29e" translate="yes" xml:space="preserve">
          <source>DNS.eq()</source>
          <target state="translated">DNS.eq()</target>
        </trans-unit>
        <trans-unit id="e5d4e403315d853f5a80f0a0f2bfd46ec02b7b9e" translate="yes" xml:space="preserve">
          <source>DNS.ip4()</source>
          <target state="translated">DNS.ip4()</target>
        </trans-unit>
        <trans-unit id="42009f4b754a7dca67f50510f2a8757d1540a5fa" translate="yes" xml:space="preserve">
          <source>DNS.ip6()</source>
          <target state="translated">DNS.ip6()</target>
        </trans-unit>
        <trans-unit id="c189ddd049d203bd886d3b4feb4cd1a81b3ce648" translate="yes" xml:space="preserve">
          <source>DNS.is_ip4()</source>
          <target state="translated">DNS.is_ip4()</target>
        </trans-unit>
        <trans-unit id="a89e0dea321c7d0f16d5a260e472a662983a144d" translate="yes" xml:space="preserve">
          <source>DNS.is_ip6()</source>
          <target state="translated">DNS.is_ip6()</target>
        </trans-unit>
        <trans-unit id="8c43d7e0500b4d97469af039c45345970ca523ec" translate="yes" xml:space="preserve">
          <source>DNS.ne()</source>
          <target state="translated">DNS.ne()</target>
        </trans-unit>
        <trans-unit id="e36ea4c4ea68aa8a453bcc7496b9b7c284f24019" translate="yes" xml:space="preserve">
          <source>DNSAuth</source>
          <target state="translated">DNSAuth</target>
        </trans-unit>
        <trans-unit id="92a13a511a2a4d0d537b744b3b205d1324635307" translate="yes" xml:space="preserve">
          <source>DNSAuth.create()</source>
          <target state="translated">DNSAuth.create()</target>
        </trans-unit>
        <trans-unit id="91727ae82014e850c5aafa5f20f03dcb04433d48" translate="yes" xml:space="preserve">
          <source>DNSAuth.eq()</source>
          <target state="translated">DNSAuth.eq()</target>
        </trans-unit>
        <trans-unit id="a2ecf49f5f3cf22ec744ade6d8efcf31aeb28789" translate="yes" xml:space="preserve">
          <source>DNSAuth.ne()</source>
          <target state="translated">DNSAuth.ne()</target>
        </trans-unit>
        <trans-unit id="c969b1fdd93e22c34fa19f8acfd3bb58f56911c7" translate="yes" xml:space="preserve">
          <source>DNSLookupAuth</source>
          <target state="translated">DNSLookupAuth</target>
        </trans-unit>
        <trans-unit id="019eccae470478deb6a06fd98d99442cfd03df5f" translate="yes" xml:space="preserve">
          <source>Data structures create instances internally. Use a primitive if possible.</source>
          <target state="translated">데이터 구조는 인스턴스를 내부적으로 만듭니다. 가능하면 기본 요소를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="5b2e0c32ed116f6b418c1debd08baac0b45a4e7f" translate="yes" xml:space="preserve">
          <source>Debug package</source>
          <target state="translated">디버그 패키지</target>
        </trans-unit>
        <trans-unit id="60b567c9853cebe33d148a860a04422286c95866" translate="yes" xml:space="preserve">
          <source>Debug._print()</source>
          <target state="translated">Debug._print()</target>
        </trans-unit>
        <trans-unit id="c2bbc2e595f42d47753f5eac36aa8ee96c19f787" translate="yes" xml:space="preserve">
          <source>Debug._stream()</source>
          <target state="translated">Debug._stream()</target>
        </trans-unit>
        <trans-unit id="04262ef0415de4eacd4b686aba460e41d80c7543" translate="yes" xml:space="preserve">
          <source>Debug.apply()</source>
          <target state="translated">Debug.apply()</target>
        </trans-unit>
        <trans-unit id="0d1d2629da4908edb9e362b193dec277bfd6204d" translate="yes" xml:space="preserve">
          <source>Debug.create()</source>
          <target state="translated">Debug.create()</target>
        </trans-unit>
        <trans-unit id="67558d4cbd7631f866c0e54a1c7e5c43490819d6" translate="yes" xml:space="preserve">
          <source>Debug.eq()</source>
          <target state="translated">Debug.eq()</target>
        </trans-unit>
        <trans-unit id="01011cb61f3374b19c7c6eed4790c13d20db3696" translate="yes" xml:space="preserve">
          <source>Debug.err()</source>
          <target state="translated">Debug.err()</target>
        </trans-unit>
        <trans-unit id="36860a25acd9d8bd1d2f0eba384653c5918c244b" translate="yes" xml:space="preserve">
          <source>Debug.ne()</source>
          <target state="translated">Debug.ne()</target>
        </trans-unit>
        <trans-unit id="0d80d1ce6bc48ff34a6a22fee374da75f01aad50" translate="yes" xml:space="preserve">
          <source>Debug.out()</source>
          <target state="translated">Debug.out()</target>
        </trans-unit>
        <trans-unit id="4aebe13ec2f908ad9453d2d9674fb90bc5b58d0c" translate="yes" xml:space="preserve">
          <source>DebugErr</source>
          <target state="translated">DebugErr</target>
        </trans-unit>
        <trans-unit id="f50a59f260d1901cbefef99b20bc64fea16fa54e" translate="yes" xml:space="preserve">
          <source>DebugErr.create()</source>
          <target state="translated">DebugErr.create()</target>
        </trans-unit>
        <trans-unit id="918cd3da4e718f7004b6c5fae3ce930a15d753e6" translate="yes" xml:space="preserve">
          <source>DebugErr.eq()</source>
          <target state="translated">DebugErr.eq()</target>
        </trans-unit>
        <trans-unit id="f9ddde696a05b441f6b365eb3e5e7349b0aac015" translate="yes" xml:space="preserve">
          <source>DebugErr.ne()</source>
          <target state="translated">DebugErr.ne()</target>
        </trans-unit>
        <trans-unit id="bb924a5d9f7e85b096406c41caf53c277da4974c" translate="yes" xml:space="preserve">
          <source>DebugOut</source>
          <target state="translated">DebugOut</target>
        </trans-unit>
        <trans-unit id="37d30287a7694dc7f915ca77d39a3f396de30ccb" translate="yes" xml:space="preserve">
          <source>DebugOut.create()</source>
          <target state="translated">DebugOut.create()</target>
        </trans-unit>
        <trans-unit id="864229ea8118aa90340e0ddbf64724de2679edb9" translate="yes" xml:space="preserve">
          <source>DebugOut.eq()</source>
          <target state="translated">DebugOut.eq()</target>
        </trans-unit>
        <trans-unit id="cd4f9c5e7d602d418d231be9a257764cfa017cde" translate="yes" xml:space="preserve">
          <source>DebugOut.ne()</source>
          <target state="translated">DebugOut.ne()</target>
        </trans-unit>
        <trans-unit id="1b29404de161ae4df5bebc8af0685e1c9b50cf52" translate="yes" xml:space="preserve">
          <source>DebugStream</source>
          <target state="translated">DebugStream</target>
        </trans-unit>
        <trans-unit id="cb665ec129c7b8ba69dc23d99a07f42b74fc15c2" translate="yes" xml:space="preserve">
          <source>Decode for URLs (RFC 4648).</source>
          <target state="translated">URL 디코딩 (RFC 4648).</target>
        </trans-unit>
        <trans-unit id="7b5ae60ccbc2daed519ed52ff752ea863bc91b73" translate="yes" xml:space="preserve">
          <source>Default benchmark for measuring asynchronous overhead.</source>
          <target state="translated">비동기 오버 헤드 측정을위한 기본 벤치 마크입니다.</target>
        </trans-unit>
        <trans-unit id="edd7ab5492b002f7464585ddd56fed5b8212287e" translate="yes" xml:space="preserve">
          <source>Default benchmark for measuring synchronous overhead.</source>
          <target state="translated">동기식 오버 ​​헤드 측정을위한 기본 벤치 마크입니다.</target>
        </trans-unit>
        <trans-unit id="fa678a97ffbbfd598a18f4f0fc312aee4f577cbc" translate="yes" xml:space="preserve">
          <source>Default constructor building a document containing a single null.</source>
          <target state="translated">단일 null을 포함하는 문서를 작성하는 기본 생성자</target>
        </trans-unit>
        <trans-unit id="def89ef12f84196a762380f4485e2d57faca02c8" translate="yes" xml:space="preserve">
          <source>Default implementation of a proxy that does not alter the supplied &lt;code&gt;TCPConnectionNotify&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;TCPConnectionNotify&lt;/code&gt; 를 변경하지 않는 프록시의 기본 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="356c4c55f6c673dd605afbf6dcfa1e98e42c63af" translate="yes" xml:space="preserve">
          <source>DefaultLogFormatter</source>
          <target state="translated">DefaultLogFormatter</target>
        </trans-unit>
        <trans-unit id="9064f4f8471bea0505d25ace95e3ecc8c30ee501" translate="yes" xml:space="preserve">
          <source>DefaultLogFormatter.apply()</source>
          <target state="translated">DefaultLogFormatter.apply()</target>
        </trans-unit>
        <trans-unit id="1f1fdf3a8549ef940822e0bd579b2a94d5f32e68" translate="yes" xml:space="preserve">
          <source>DefaultLogFormatter.create()</source>
          <target state="translated">DefaultLogFormatter.create()</target>
        </trans-unit>
        <trans-unit id="4ddf25e291bab50c1f473f8a6217ae084e065f7c" translate="yes" xml:space="preserve">
          <source>DefaultLogFormatter.eq()</source>
          <target state="translated">DefaultLogFormatter.eq()</target>
        </trans-unit>
        <trans-unit id="4b112684e442219a77281925e55863416d2564c8" translate="yes" xml:space="preserve">
          <source>DefaultLogFormatter.ne()</source>
          <target state="translated">DefaultLogFormatter.ne()</target>
        </trans-unit>
        <trans-unit id="9e0db0c28c2e5f1aff4d20cf09357d30f3935039" translate="yes" xml:space="preserve">
          <source>Defaults to a prealloc of 8.</source>
          <target state="translated">기본적으로 사전 할당은 8입니다.</target>
        </trans-unit>
        <trans-unit id="a5d17a9341bfe7350d9fe00c133d6c9bd0b03909" translate="yes" xml:space="preserve">
          <source>Defer garbage collection until an actor is using at least 2^N bytes. Defaults to 2^14.</source>
          <target state="translated">액터가 최소 2 ^ N 바이트를 사용할 때까지 가비지 수집을 연기합니다. 기본값은 2 ^ 14입니다.</target>
        </trans-unit>
        <trans-unit id="80e7c8b8cda2b2dd1194c82052b24241c9cb2ec9" translate="yes" xml:space="preserve">
          <source>Define the portable signal numbers. Other signals can be used, but they are not guaranteed to be portable.</source>
          <target state="translated">휴대용 신호 번호를 정의하십시오. 다른 신호를 사용할 수는 있지만 이식성이 보장되지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="70b2bc688e3f893eba06f0bea778ea9aa0615dd5" translate="yes" xml:space="preserve">
          <source>Delete a value from the map and return it. Raises an error if there was no value for the given key.</source>
          <target state="translated">지도에서 값을 삭제하고 반환하십시오. 주어진 키에 대한 값이 없으면 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="5dc3c62c3eaf97eaecb59e07fd541f63345db2e6" translate="yes" xml:space="preserve">
          <source>Delete an element from the array. Elements after this are moved down by one index, compacting the array. An out of bounds index raises an error. The deleted element is returned.</source>
          <target state="translated">배열에서 요소를 삭제하십시오. 그 이후의 요소는 하나의 인덱스만큼 아래로 이동하여 배열을 압축합니다. 범위를 벗어난 인덱스는 오류를 발생시킵니다. 삭제 된 요소가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d052887dd950dff5c3d4f211624ac2847a658913" translate="yes" xml:space="preserve">
          <source>Delete key.</source>
          <target state="translated">키를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="639d00f6a80741eaf5cf3b3087efc4854317fbc5" translate="yes" xml:space="preserve">
          <source>Delete len bytes at the supplied offset, compacting the string in place.</source>
          <target state="translated">제공된 오프셋에서 len 바이트를 삭제하여 문자열을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="f55299abbc2c8d0033043d71f8900984301216e2" translate="yes" xml:space="preserve">
          <source>Delete n elements from the head of pointer, compact remaining elements of the underlying array. The array length before this should be n + len. Returns the first deleted element.</source>
          <target state="translated">포인터의 헤드에서 n 개의 요소를 삭제하고 기본 배열의 나머지 요소를 압축하십시오. 이 전의 배열 길이는 n + len이어야합니다. 삭제 된 첫 번째 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="174c71b01cfe307f3bde5324b83755a153c0232c" translate="yes" xml:space="preserve">
          <source>Delete the previous word.</source>
          <target state="translated">이전 단어를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="4042f9c1c38851b9b90cda7defcc571d67226179" translate="yes" xml:space="preserve">
          <source>Deprectation warning</source>
          <target state="translated">기각 경고</target>
        </trans-unit>
        <trans-unit id="2f4172b3d2bed154d4bf4a46adfd43be5a21aec5" translate="yes" xml:space="preserve">
          <source>Deserialisation is fundamentally unsafe currently: there isn't yet a verification pass to check that the resulting object graph maintains a well-formed heap or that individual objects maintain any expected local invariants. However, if only &quot;trusted&quot; data (i.e. data produced by Pony serialisation from the same binary) is deserialised, it will always maintain a well-formed heap and all object invariants.</source>
          <target state="translated">역 직렬화는 현재 기본적으로 안전하지 않습니다. 결과 객체 그래프가 올바른 힙을 유지하는지 또는 개별 객체가 예상되는 로컬 불변량을 유지하는지 확인하는 확인 단계는 아직 없습니다. 그러나 &quot;신뢰할 수있는&quot;데이터 (예 : 동일한 바이너리에서 Pony 직렬화로 생성 된 데이터) 만 직렬화 해제하면 항상 올바른 형식의 힙과 모든 객체 불변성을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="ed04ed518bdca619bc00cccbc9bfbac07d853bb5" translate="yes" xml:space="preserve">
          <source>DeserialiseAuth</source>
          <target state="translated">DeserialiseAuth</target>
        </trans-unit>
        <trans-unit id="5962e707b50399eae576ee8ca6222eac6e21a727" translate="yes" xml:space="preserve">
          <source>DeserialiseAuth.create()</source>
          <target state="translated">DeserialiseAuth.create()</target>
        </trans-unit>
        <trans-unit id="606222beb5beeb91bf639df700666e73330b6cb5" translate="yes" xml:space="preserve">
          <source>DeserialiseAuth.eq()</source>
          <target state="translated">DeserialiseAuth.eq()</target>
        </trans-unit>
        <trans-unit id="9e364c0ba81e2327ed32158e537a0e372ea82a0d" translate="yes" xml:space="preserve">
          <source>DeserialiseAuth.ne()</source>
          <target state="translated">DeserialiseAuth.ne()</target>
        </trans-unit>
        <trans-unit id="6740a4e8321ba88781fe65a7cb458fe9fad33be9" translate="yes" xml:space="preserve">
          <source>Determine equality between two keys with the same hash. This is done with viewpoint adapted aliases to allow data structures to determine equality in a box fun without consuming keys.</source>
          <target state="translated">동일한 해시로 두 키 사이의 동등성을 결정하십시오. 이것은 데이터 구조가 키를 소비하지 않고 상자 재미에서 동등성을 결정할 수 있도록 관점 적응 별명으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8a7f35133f9aaff88abe7379cdd9a2c4e9d95edf" translate="yes" xml:space="preserve">
          <source>Determine equality by identity rather than structurally.</source>
          <target state="translated">구조적으로보다는 정체성으로 평등을 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="15fa311ba735deee775b3074ee873411107e1f36" translate="yes" xml:space="preserve">
          <source>Determine if a byte is a path list separator.</source>
          <target state="translated">바이트가 경로 목록 구분 기호인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="242e3301d12feb3cbc895725dbbfae1d4c539008" translate="yes" xml:space="preserve">
          <source>Determine if a byte is a path separator.</source>
          <target state="translated">바이트가 경로 구분 기호인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d9d72febc12438d8e2bc61323a39bc90d4fc96" translate="yes" xml:space="preserve">
          <source>Determine the base of an integer starting at the specified index. If a non-0 base is given use that. If given base is 0 read the base specifying prefix, if any, to detect base 2 or 16. If no base is specified and no prefix is found default to decimal. Note that a leading 0 does NOT imply octal. Report the base found and the number of characters in the prefix.</source>
          <target state="translated">지정된 인덱스에서 시작하는 정수의 밑을 결정합니다. 0이 아닌 기준이 주어지면 그것을 사용하십시오. 주어진 기준이 0이면 기준 지정 접두사 (있는 경우)를 읽고 기준 2 또는 16을 감지합니다. 기준이 지정되지 않고 접두사가없는 경우 기본값은 10 진수입니다. 선행 0은 8 진을 의미하지 않습니다. 찾은 기본과 접두사의 문자 수를보고하십시오.</target>
        </trans-unit>
        <trans-unit id="7927f138711ad7d18769bc4d0aebb15cfe001109" translate="yes" xml:space="preserve">
          <source>Dice</source>
          <target state="translated">Dice</target>
        </trans-unit>
        <trans-unit id="33cbf7883ed558f94306662a2c85c91af5e79719" translate="yes" xml:space="preserve">
          <source>Dice.apply()</source>
          <target state="translated">Dice.apply()</target>
        </trans-unit>
        <trans-unit id="a153805199544dcbb90d10c292c974e414af6747" translate="yes" xml:space="preserve">
          <source>Dice.create()</source>
          <target state="translated">Dice.create()</target>
        </trans-unit>
        <trans-unit id="db2d5f8e80182f31b2f5e3e0dca46eb1b54f3326" translate="yes" xml:space="preserve">
          <source>Dice.var()</source>
          <target state="translated">Dice.var()</target>
        </trans-unit>
        <trans-unit id="d6bea9a5a40ed9f2075710e66cddd0f9ce6d9ee8" translate="yes" xml:space="preserve">
          <source>Different data types require different amounts of memory. Array[U64] with size of 6 will take more memory than an Array[U8] of the same size.</source>
          <target state="translated">다른 데이터 유형에는 다른 양의 메모리가 필요합니다. 크기가 6 인 Array [U64]는 같은 크기의 Array [U8]보다 더 많은 메모리를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4b892fe0c040fa8a944037d1d2817c41ab7da958" translate="yes" xml:space="preserve">
          <source>Directory</source>
          <target state="translated">Directory</target>
        </trans-unit>
        <trans-unit id="117cea72cec28d7c6d614863080fc0fa9339eb1c" translate="yes" xml:space="preserve">
          <source>Directory._final()</source>
          <target state="translated">Directory._final()</target>
        </trans-unit>
        <trans-unit id="b74649a7fe5b4ff0bd25ce6b3513787671cc0d6c" translate="yes" xml:space="preserve">
          <source>Directory._relative()</source>
          <target state="translated">Directory._relative()</target>
        </trans-unit>
        <trans-unit id="b5fd8c5dfffb87e0f0712e6eeab750d7abd3ef25" translate="yes" xml:space="preserve">
          <source>Directory.chmod()</source>
          <target state="translated">Directory.chmod()</target>
        </trans-unit>
        <trans-unit id="27de7efdafbe2246baea5a123e168e8e6e8e584a" translate="yes" xml:space="preserve">
          <source>Directory.chmodat()</source>
          <target state="translated">Directory.chmodat()</target>
        </trans-unit>
        <trans-unit id="f65a15c80ddda32d0e946bfa79e9fa415c49bf88" translate="yes" xml:space="preserve">
          <source>Directory.chown()</source>
          <target state="translated">Directory.chown()</target>
        </trans-unit>
        <trans-unit id="8eca0cceb86cbb3bb2d80c89e559a75ff0142997" translate="yes" xml:space="preserve">
          <source>Directory.chownat()</source>
          <target state="translated">Directory.chownat()</target>
        </trans-unit>
        <trans-unit id="73865ec0a103aa0aff664a052a50107e40255d31" translate="yes" xml:space="preserve">
          <source>Directory.create()</source>
          <target state="translated">Directory.create()</target>
        </trans-unit>
        <trans-unit id="1a68bd15490bf89d9f8e03a77b177726587dbc94" translate="yes" xml:space="preserve">
          <source>Directory.create_file()</source>
          <target state="translated">Directory.create_file()</target>
        </trans-unit>
        <trans-unit id="155f06d35d0f2098e80d91a10dff5ec34d866a84" translate="yes" xml:space="preserve">
          <source>Directory.dispose()</source>
          <target state="translated">Directory.dispose()</target>
        </trans-unit>
        <trans-unit id="18f5f7e4b0c1ac5589c183a64b5674d4c9d9953b" translate="yes" xml:space="preserve">
          <source>Directory.entries()</source>
          <target state="translated">Directory.entries()</target>
        </trans-unit>
        <trans-unit id="45a0f931c730b327b807bbb08dd18075a777fc40" translate="yes" xml:space="preserve">
          <source>Directory.info()</source>
          <target state="translated">Directory.info()</target>
        </trans-unit>
        <trans-unit id="136083e2b14f8934730e602b3720c928378687eb" translate="yes" xml:space="preserve">
          <source>Directory.infoat()</source>
          <target state="translated">Directory.infoat()</target>
        </trans-unit>
        <trans-unit id="68ef28570a70be22c1e72c32ac0fd74241e3dc22" translate="yes" xml:space="preserve">
          <source>Directory.mkdir()</source>
          <target state="translated">Directory.mkdir()</target>
        </trans-unit>
        <trans-unit id="256706c7efe1fa81f6713ca2c85b9d66ee0b7ee3" translate="yes" xml:space="preserve">
          <source>Directory.open()</source>
          <target state="translated">Directory.open()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
