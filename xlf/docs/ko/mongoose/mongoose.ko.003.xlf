<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="mongoose">
    <body>
      <group id="mongoose">
        <trans-unit id="0b3458c3f3bcc6dd421d8a3fafec689c81e37f55" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.index()</source>
          <target state="translated">SchemaType.prototype.index()</target>
        </trans-unit>
        <trans-unit id="dd2f8a66d3f0973b091d779d52de67b2848cf6cd" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.ref()</source>
          <target state="translated">SchemaType.prototype.ref()</target>
        </trans-unit>
        <trans-unit id="3d45f41cf4865cf8d58f4e50a7dab78aba773666" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.required()</source>
          <target state="translated">SchemaType.prototype.required()</target>
        </trans-unit>
        <trans-unit id="3e516c9f0abbb092d87f93fc6fab9a945c938eea" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.select()</source>
          <target state="translated">SchemaType.prototype.select()</target>
        </trans-unit>
        <trans-unit id="20da7e2124ec9aec86e642977dca4ad0b2b0d508" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.set()</source>
          <target state="translated">SchemaType.prototype.set()</target>
        </trans-unit>
        <trans-unit id="a54119251774b58b140aef61010361948bd30d37" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.sparse()</source>
          <target state="translated">SchemaType.prototype.sparse()</target>
        </trans-unit>
        <trans-unit id="d0818b5f519920b4e47e8a445872b25c866148c3" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.text()</source>
          <target state="translated">SchemaType.prototype.text()</target>
        </trans-unit>
        <trans-unit id="8ce3babaf267230bb55de5fffc875ef55b912803" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.unique()</source>
          <target state="translated">SchemaType.prototype.unique()</target>
        </trans-unit>
        <trans-unit id="e4bd52b1ea6bd72b55a2de9ce42aa7d79f42d736" translate="yes" xml:space="preserve">
          <source>SchemaType.prototype.validate()</source>
          <target state="translated">SchemaType.prototype.validate()</target>
        </trans-unit>
        <trans-unit id="6014fe10ef3a3cc1a50e808e4caa4f1a84a67f5c" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions</source>
          <target state="translated">SchemaTypeOptions</target>
        </trans-unit>
        <trans-unit id="2dc6ad7f0948444e81a07cc3234a01b5be3563d1" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions()</source>
          <target state="translated">SchemaTypeOptions()</target>
        </trans-unit>
        <trans-unit id="7ffed4db9f34817c9581ca251e71f3bb5a404431" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.cast</source>
          <target state="translated">SchemaTypeOptions.prototype.cast</target>
        </trans-unit>
        <trans-unit id="16771b1eedbfbb367d5b18c1b65adc94fd2dbdd1" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.default</source>
          <target state="translated">SchemaTypeOptions.prototype.default</target>
        </trans-unit>
        <trans-unit id="11502509ed1544eb875f9c8b9ee80bde0dfebd66" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.immutable</source>
          <target state="translated">SchemaTypeOptions.prototype.immutable</target>
        </trans-unit>
        <trans-unit id="c781399ee17de93460ffec274e96707de9a6046c" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.index</source>
          <target state="translated">SchemaTypeOptions.prototype.index</target>
        </trans-unit>
        <trans-unit id="15895a6a39b4f36f34fff5761c1e7bbaf2631e90" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.ref</source>
          <target state="translated">SchemaTypeOptions.prototype.ref</target>
        </trans-unit>
        <trans-unit id="df9a231d60a6606cdc07ab5bd8a01e026c4776b8" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.required</source>
          <target state="translated">SchemaTypeOptions.prototype.required</target>
        </trans-unit>
        <trans-unit id="5f44b455a9f35c8d35215d4d741d79165a2999c7" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.select</source>
          <target state="translated">SchemaTypeOptions.prototype.select</target>
        </trans-unit>
        <trans-unit id="9855ee4de7f6f5b87d1d11bb865c1488706e0bef" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.sparse</source>
          <target state="translated">SchemaTypeOptions.prototype.sparse</target>
        </trans-unit>
        <trans-unit id="2b47ed67da562f585124fa231bedd4ffbe592f6e" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.text</source>
          <target state="translated">SchemaTypeOptions.prototype.text</target>
        </trans-unit>
        <trans-unit id="8e4346ca7d4d75486414b8ab31d181656e8b03ef" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.type</source>
          <target state="translated">SchemaTypeOptions.prototype.type</target>
        </trans-unit>
        <trans-unit id="dc16c884ec96c9c4a9c98e3a632d7fb6ff2e181b" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.unique</source>
          <target state="translated">SchemaTypeOptions.prototype.unique</target>
        </trans-unit>
        <trans-unit id="8ce99e83092309fe418ecb3607213f7c1602a5d1" translate="yes" xml:space="preserve">
          <source>SchemaTypeOptions.prototype.validate</source>
          <target state="translated">SchemaTypeOptions.prototype.validate</target>
        </trans-unit>
        <trans-unit id="905dc0072b274dd1ec36f2fdcda0637dd47ec9d9" translate="yes" xml:space="preserve">
          <source>SchemaTypes</source>
          <target state="translated">SchemaTypes</target>
        </trans-unit>
        <trans-unit id="2cd70cde4661025fa1be210fd32a7488da554fb6" translate="yes" xml:space="preserve">
          <source>SchemaTypes handle definition of path &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-default&quot;&gt;defaults&lt;/a&gt;, &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-validate&quot;&gt;validation&lt;/a&gt;, &lt;a href=&quot;#getters&quot;&gt;getters&lt;/a&gt;, &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-set&quot;&gt;setters&lt;/a&gt;, &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-select&quot;&gt;field selection defaults&lt;/a&gt; for &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query-js&quot;&gt;queries&lt;/a&gt;, and other general characteristics for Mongoose document properties.</source>
          <target state="translated">SchemaTypes 는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query-js&quot;&gt;쿼리&lt;/a&gt; 의 경로 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-default&quot;&gt;기본값&lt;/a&gt; , &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-validate&quot;&gt;유효성 검사&lt;/a&gt; , &lt;a href=&quot;#getters&quot;&gt;getter&lt;/a&gt; , &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-set&quot;&gt;setter&lt;/a&gt; , &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-select&quot;&gt;필드 선택 기본값의&lt;/a&gt; 정의를 처리 합니다. 몽구스 문서 속성 및 기타 일반적인 특성.</target>
        </trans-unit>
        <trans-unit id="db77ed065e4e0ae24d5474707494552cb72cf711" translate="yes" xml:space="preserve">
          <source>Schemas</source>
          <target state="translated">Schemas</target>
        </trans-unit>
        <trans-unit id="4110d243b21f4572bdbbb69767338156ebe0221d" translate="yes" xml:space="preserve">
          <source>Schemas are also &lt;a href=&quot;plugins&quot;&gt;pluggable&lt;/a&gt; which allows us to package up reusable features into plugins that can be shared with the community or just between your projects.</source>
          <target state="translated">스키마는 &lt;a href=&quot;plugins&quot;&gt;플러그 가능&lt;/a&gt; 하므로 재사용 가능한 기능을 플러그인으로 패키지하여 커뮤니티와 공유하거나 프로젝트간에 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="626ccd582ed809cafa3d9600763f499a624a3290" translate="yes" xml:space="preserve">
          <source>Schemas are pluggable, that is, they allow for applying pre-packaged capabilities to extend their functionality. This is a very powerful feature.</source>
          <target state="translated">스키마는 플러그 가능합니다. 즉, 사전 패키지 기능을 적용하여 기능을 확장 할 수 있습니다. 이것은 매우 강력한 기능입니다.</target>
        </trans-unit>
        <trans-unit id="0ac577eab5f8af63bf4164292e20150da170e77c" translate="yes" xml:space="preserve">
          <source>Schemas have a few configurable options which can be passed to the constructor or &lt;code&gt;set&lt;/code&gt; directly:</source>
          <target state="translated">스키마에는 구성자에게 전달하거나 직접 &lt;code&gt;set&lt;/code&gt; 수있는 몇 가지 구성 가능한 옵션이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9545310e8e98eb6e51258d4ab923d4ac114ecaf" translate="yes" xml:space="preserve">
          <source>Schemas not only define the structure of your document and casting of properties, they also define document &lt;a href=&quot;#methods&quot;&gt;instance methods&lt;/a&gt;, &lt;a href=&quot;#statics&quot;&gt;static Model methods&lt;/a&gt;, &lt;a href=&quot;#indexes&quot;&gt;compound indexes&lt;/a&gt;, and document lifecycle hooks called &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;.</source>
          <target state="translated">스키마는 문서의 구조와 속성 캐스팅을 정의 할뿐만 아니라 문서 &lt;a href=&quot;#methods&quot;&gt;인스턴스 메서드&lt;/a&gt; , &lt;a href=&quot;#statics&quot;&gt;정적 모델 메서드&lt;/a&gt; , &lt;a href=&quot;#indexes&quot;&gt;복합 인덱스&lt;/a&gt; 및 &lt;a href=&quot;middleware&quot;&gt;미들웨어&lt;/a&gt; 라는 문서 수명주기 후크 도 정의합니다. .</target>
        </trans-unit>
        <trans-unit id="5baf8707e03701d88d19923e73a01bf2496d770f" translate="yes" xml:space="preserve">
          <source>Schematype</source>
          <target state="translated">Schematype</target>
        </trans-unit>
        <trans-unit id="8c14dd772d3df269f75a7f2f466298d6bffd8c46" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../guide#toJSON&quot;&gt;schema options&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../guide#toJSON&quot;&gt;스키마 옵션&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1592ad7ac85f167f9c1f06f8e8d6bc205200831e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../guide#toObject&quot;&gt;schema options&lt;/a&gt; for some more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../guide#toObject&quot;&gt;스키마 옵션&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9580ae1682d459d748ca1a943b318ab1d815ba27" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/reference/faq/&quot;&gt;this page&lt;/a&gt; for more information about &lt;code&gt;connectTimeoutMS&lt;/code&gt; and &lt;code&gt;socketTimeoutMS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;connectTimeoutMS&lt;/code&gt; 및 &lt;code&gt;socketTimeoutMS&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/reference/faq/&quot;&gt;이 페이지&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ab18674ac44235e299697c900096f0ed5789649d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/reference/faq/&quot;&gt;this page&lt;/a&gt; for more information about &lt;code&gt;connectTimeoutMS&lt;/code&gt; and &lt;code&gt;socketTimeoutMS&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184bf8bf871a9820625409b7f205b8b9655f8e3b" translate="yes" xml:space="preserve">
          <source>See a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;full list of affected characters&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;영향을받는 문자&lt;/a&gt; 의 전체 목록을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b030ee159836a57470d6c1cb00022af42598f4fc" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.ensureIndexes&quot;&gt;Model#ensureIndexes&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.ensureIndexes&quot;&gt;Model # ensureIndexes&lt;/a&gt; 메서드 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe76959fdd18c000946c5cf42559df8d25475cc8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://docs.mongodb.org/manual/reference/connection-string/&quot;&gt;mongodb connection string spec&lt;/a&gt; for more detail.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://docs.mongodb.org/manual/reference/connection-string/&quot;&gt;mongodb 연결 문자열 사양&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c70d4fbcf03e943a919a2be2d67f6978c66fe7e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://thecodebarbarian.com/whats-new-in-mongoose-5-2-syncindexes&quot;&gt;introductory blog post&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;http://thecodebarbarian.com/whats-new-in-mongoose-5-2-syncindexes&quot;&gt;소개 블로그 게시물을&lt;/a&gt; 참조하십시오 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b7cdcf3ab547985be095a3520945b7b3fe649d55" translate="yes" xml:space="preserve">
          <source>See the chapter on &lt;a href=&quot;queries&quot;&gt;queries&lt;/a&gt; for more details on how to use the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query-js&quot;&gt;Query&lt;/a&gt; api.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#query-js&quot;&gt;Query&lt;/a&gt; API 사용 방법에 대한 자세한 내용 은 &lt;a href=&quot;queries&quot;&gt;쿼리&lt;/a&gt; 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3c14522d818cb0de14b9b700c9e311fa9211ea9" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;createIndex&lt;/code&gt; commands to mongo for each index declared in the schema. The &lt;code&gt;createIndex&lt;/code&gt; commands are sent in series.</source>
          <target state="translated">스키마에 선언 된 각 인덱스에 대해 &lt;code&gt;createIndex&lt;/code&gt; 명령을 mongo로 보냅니다 . &lt;code&gt;createIndex&lt;/code&gt; 의 명령은 직렬 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="4f62d9be279ebc2d9e6f9e01a2156c7453cc4200" translate="yes" xml:space="preserve">
          <source>Sends a replaceOne command with this document &lt;code&gt;_id&lt;/code&gt; as the query selector.</source>
          <target state="translated">이 문서 &lt;code&gt;_id&lt;/code&gt; 를 query selector로하여 replaceOne 명령을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="89c4a75b6214dac3f0279670d35b435aa2251b42" translate="yes" xml:space="preserve">
          <source>Sends an update command with this document &lt;code&gt;_id&lt;/code&gt; as the query selector.</source>
          <target state="translated">이 문서 &lt;code&gt;_id&lt;/code&gt; 를 쿼리 선택기로 사용하여 업데이트 명령을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7dde543f5b43d28df31fdd8e89569ba69b341b90" translate="yes" xml:space="preserve">
          <source>Sends an updateOne command with this document &lt;code&gt;_id&lt;/code&gt; as the query selector.</source>
          <target state="translated">이 문서 &lt;code&gt;_id&lt;/code&gt; 를 쿼리 선택기로 사용하여 updateOne 명령을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="88075cf41cbd3f2c7a0225f6daf97b3fcda6c2f0" translate="yes" xml:space="preserve">
          <source>Sends multiple &lt;code&gt;insertOne&lt;/code&gt;, &lt;code&gt;updateOne&lt;/code&gt;, &lt;code&gt;updateMany&lt;/code&gt;, &lt;code&gt;replaceOne&lt;/code&gt;, &lt;code&gt;deleteOne&lt;/code&gt;, and/or &lt;code&gt;deleteMany&lt;/code&gt; operations to the MongoDB server in one command. This is faster than sending multiple independent operations (like) if you use &lt;code&gt;create()&lt;/code&gt;) because with &lt;code&gt;bulkWrite()&lt;/code&gt; there is only one round trip to MongoDB.</source>
          <target state="translated">하나의 명령으로 여러 &lt;code&gt;insertOne&lt;/code&gt; , &lt;code&gt;updateOne&lt;/code&gt; , &lt;code&gt;updateMany&lt;/code&gt; , &lt;code&gt;replaceOne&lt;/code&gt; , &lt;code&gt;deleteOne&lt;/code&gt; 및 / 또는 &lt;code&gt;deleteMany&lt;/code&gt; 조작을 MongoDB 서버로 보냅니다. &lt;code&gt;bulkWrite()&lt;/code&gt; 를 사용하면 MongoDB로 한 번만 왕복하기 때문에 &lt;code&gt;create()&lt;/code&gt; 을 사용하면 여러 개의 독립적 인 작업 (예 :)을 보내는 것보다 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="372d9668b046d623991d0fa2b31d4989ee667989" translate="yes" xml:space="preserve">
          <source>Server Selection</source>
          <target state="translated">서버 선택</target>
        </trans-unit>
        <trans-unit id="03b99ee6b3f95d33b36b43df9cce5cd4db11c869" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;storeSubdocValidationError&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; on the child schema to make Mongoose only report the parent error.</source>
          <target state="translated">Mongoose가 상위 오류 &lt;code&gt;storeSubdocValidationError&lt;/code&gt; 하도록 하려면 하위 스키마 에서 storeSubdocValidationError 를 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="43c705e629b233c312037676068745ce6d6897ff" translate="yes" xml:space="preserve">
          <source>Set the model that this path refers to. This is the option that &lt;a href=&quot;../populate&quot;&gt;populate&lt;/a&gt; looks at to determine the foreign collection it should query.</source>
          <target state="translated">이 경로가 참조하는 모델을 설정하십시오. 이것은 &lt;a href=&quot;../populate&quot;&gt;채울&lt;/a&gt; 외부 콜렉션을 판별하기 위해 채우기에서 보는 옵션입니다 .</target>
        </trans-unit>
        <trans-unit id="003c43bf35778557b632b97731aeb86c76ab1da9" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; if this path should always be included in the results, &lt;code&gt;false&lt;/code&gt; if it should be excluded by default. This setting can be overridden at the query level.</source>
          <target state="translated">이 경로가 항상 결과에 포함되어야하는 경우 &lt;code&gt;true&lt;/code&gt; 로 설정하고 , &lt;code&gt;false&lt;/code&gt; 하고 기본적으로 제외해야하는 경우 로 설정하십시오. 이 설정은 쿼리 수준에서 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81b30280a514661a5791518860cc9f6efb2de27b" translate="yes" xml:space="preserve">
          <source>Sets a default &lt;a href=&quot;https://docs.mongodb.com/manual/reference/collation/&quot;&gt;collation&lt;/a&gt; for every query and aggregation. &lt;a href=&quot;http://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations&quot;&gt;Here's a beginner-friendly overview of collations&lt;/a&gt;.</source>
          <target state="translated">모든 쿼리 및 집계에 대한 기본 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/collation/&quot;&gt;데이터 정렬&lt;/a&gt; 을 설정합니다 . &lt;a href=&quot;http://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations&quot;&gt;데이터 정렬에 대한 초보자 친화적 인 개요는 다음과 같습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5da46b2db33635642a2ff866abd9a3bf7a2b5f98" translate="yes" xml:space="preserve">
          <source>Sets a default value for this SchemaType.</source>
          <target state="translated">이 SchemaType의 기본값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="cd62ff80162d6a42e9b179ae0c15334474f48449" translate="yes" xml:space="preserve">
          <source>Sets a path (if arity 2) Gets a path (if arity 1)</source>
          <target state="translated">경로를 설정합니다 (arity 2 인 경우). 경로를 가져옵니다 (arity 1 인 경우).</target>
        </trans-unit>
        <trans-unit id="e4a94dae1105ac4d561a11fc57f750459a794da1" translate="yes" xml:space="preserve">
          <source>Sets an option on this aggregation. This function will be deprecated in a future release. Use the &lt;a href=&quot;api#aggregate_Aggregate-cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api#aggregate_Aggregate-collation&quot;&gt;&lt;code&gt;collation()&lt;/code&gt;&lt;/a&gt;, etc. helpers to set individual options, or access &lt;code&gt;agg.options&lt;/code&gt; directly.</source>
          <target state="translated">이 집계에 대한 옵션을 설정합니다. 이 기능은 향후 릴리스에서 더 이상 사용되지 않습니다. 사용 &lt;a href=&quot;api#aggregate_Aggregate-cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;api#aggregate_Aggregate-collation&quot;&gt; &lt;code&gt;collation()&lt;/code&gt; &lt;/a&gt; 개별 옵션, 또는 액세스 설정 등 도우미를 &lt;code&gt;agg.options&lt;/code&gt; 을 직접.</target>
        </trans-unit>
        <trans-unit id="76ec2190825c3245a03f471cca659cc082da0aa2" translate="yes" xml:space="preserve">
          <source>Sets default &lt;code&gt;select()&lt;/code&gt; behavior for this path.</source>
          <target state="translated">이 경로의 기본 &lt;code&gt;select()&lt;/code&gt; 동작을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d1cc82d2224f858d1f7712673cd21d35bb97a061" translate="yes" xml:space="preserve">
          <source>Sets mongoose options</source>
          <target state="translated">몽구스 옵션을 설정합니다</target>
        </trans-unit>
        <trans-unit id="614de46244ebfc59a6a237e262559dd6bcf501a2" translate="yes" xml:space="preserve">
          <source>Sets query hints.</source>
          <target state="translated">쿼리 힌트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="69c4c9b3ed6d8fea188b8b1bb029c18e9416fc75" translate="yes" xml:space="preserve">
          <source>Sets query options. Some options only make sense for certain operations.</source>
          <target state="translated">쿼리 옵션을 설정합니다. 일부 옵션은 특정 작업에만 적합합니다.</target>
        </trans-unit>
        <trans-unit id="61ae247a0d5d03af593c36355370f1c082d51ffc" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/cursor.explain/&quot;&gt;&lt;code&gt;explain&lt;/code&gt; option&lt;/a&gt;, which makes this query return detailed execution stats instead of the actual query result. This method is useful for determining what index your queries use.</source>
          <target state="translated">&lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/cursor.explain/&quot;&gt; &lt;code&gt;explain&lt;/code&gt; 옵션을&lt;/a&gt; 설정 하여이 조회가 실제 조회 결과 대신 자세한 실행 통계를 리턴하도록합니다. 이 방법은 쿼리에서 사용하는 인덱스를 결정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d6bdc3dd74cf89ac0617c911fdb714f168ca82dc" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/cursor.maxTimeMS/&quot;&gt;maxTimeMS&lt;/a&gt; option. This will tell the MongoDB server to abort if the query or write op has been running for more than &lt;code&gt;ms&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/cursor.maxTimeMS/&quot;&gt;maxTimeMS&lt;/a&gt; 옵션을 설정합니다 . 그러면 쿼리 또는 쓰기 op가 &lt;code&gt;ms&lt;/code&gt; 밀리 초 이상 실행 된 경우 MongoDB 서버가 중단하도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="55299548090d38183925df82b396532f5e7cc09c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;MongoDB session&lt;/a&gt; associated with this query. Sessions are how you mark a query as part of a &lt;a href=&quot;../transactions&quot;&gt;transaction&lt;/a&gt;.</source>
          <target state="translated">이 쿼리와 관련된 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;MongoDB 세션을&lt;/a&gt; 설정합니다 . 세션은 쿼리를 &lt;a href=&quot;../transactions&quot;&gt;트랜잭션의&lt;/a&gt; 일부로 표시하는 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="f83f884d7b64ccd95957fcb8267de2ad0c13beb3" translate="yes" xml:space="preserve">
          <source>Sets the allowDiskUse option for the aggregation query (ignored for &amp;lt; 2.6.0)</source>
          <target state="translated">집계 쿼리에 대해 allowDiskUse 옵션을 설정합니다 (&amp;lt;2.6.0의 경우 무시).</target>
        </trans-unit>
        <trans-unit id="a23d208a203abaff418868b259c0cde81c6aa290" translate="yes" xml:space="preserve">
          <source>Sets the casted &lt;code&gt;val&lt;/code&gt; at index &lt;code&gt;i&lt;/code&gt; and marks the array modified.</source>
          <target state="translated">인덱스 &lt;code&gt;i&lt;/code&gt; 에서 캐스트 된 &lt;code&gt;val&lt;/code&gt; 을 설정하고 배열을 수정 된 것으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3fdba9fda1bc88117a520ec4b9d160b07c99f3be" translate="yes" xml:space="preserve">
          <source>Sets the current update operation to new value.</source>
          <target state="translated">현재 업데이트 작업을 새 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="22c080c85e6e5e0f67ece6061632673cef5489c0" translate="yes" xml:space="preserve">
          <source>Sets the cursor option option for the aggregation query (ignored for &amp;lt; 2.6.0). Note the different syntax below: .exec() returns a cursor object, and no callback is necessary.</source>
          <target state="translated">집계 쿼리의 커서 옵션 옵션을 설정합니다 (&amp;lt;2.6.0의 경우 무시). 아래의 다른 구문을 참고하십시오. .exec ()는 커서 객체를 반환하므로 콜백이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7a7166625202ad58c200d600ccba17fb626cc1ee" translate="yes" xml:space="preserve">
          <source>Sets the hint option for the aggregation query (ignored for &amp;lt; 3.6.0)</source>
          <target state="translated">집계 쿼리에 대한 힌트 옵션을 설정합니다 (&amp;lt;3.6.0에서는 무시).</target>
        </trans-unit>
        <trans-unit id="26047350c389dc95556604c10773960bd3f06d37" translate="yes" xml:space="preserve">
          <source>Sets the lean option.</source>
          <target state="translated">희박 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ada00c4e02dc1bedf2998e704cbbb2c9f4236687" translate="yes" xml:space="preserve">
          <source>Sets the query conditions to the provided JSON object.</source>
          <target state="translated">쿼리 조건을 제공된 JSON 객체로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8e09fc891bec82a66b6a48715f6019a4234e845e" translate="yes" xml:space="preserve">
          <source>Sets the readConcern level for the aggregation query.</source>
          <target state="translated">집계 쿼리에 대한 readConcern 레벨을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0f64ebb593696001860249e3839e67bceb74fc0f" translate="yes" xml:space="preserve">
          <source>Sets the readConcern option for the query.</source>
          <target state="translated">쿼리에 대한 readConcern 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e19083a4a1b60cfe93902e96c4509fa0ddbbb7c8" translate="yes" xml:space="preserve">
          <source>Sets the readPreference option for the aggregation query.</source>
          <target state="translated">집계 쿼리에 대한 readPreference 옵션을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c00c0ca35e198f2d39c893c62a6e73623b194eb2" translate="yes" xml:space="preserve">
          <source>Sets the session for this aggregation. Useful for &lt;a href=&quot;../transactions&quot;&gt;transactions&lt;/a&gt;.</source>
          <target state="translated">이 집계에 대한 세션을 설정합니다. &lt;a href=&quot;../transactions&quot;&gt;거래에&lt;/a&gt; 유용 합니다 .</target>
        </trans-unit>
        <trans-unit id="ebd00920c65fd096015d3df6cd9f13797b6e135f" translate="yes" xml:space="preserve">
          <source>Sets the sort order</source>
          <target state="translated">정렬 순서를 설정합니다</target>
        </trans-unit>
        <trans-unit id="635fef9f7ea549570c6d7a835f6e2af1f3cd528a" translate="yes" xml:space="preserve">
          <source>Sets the specified number of &lt;code&gt;mongod&lt;/code&gt; servers, or tag set of &lt;code&gt;mongod&lt;/code&gt; servers, that must acknowledge this write before this write is considered successful.</source>
          <target state="translated">세트 지정된 수의 &lt;code&gt;mongod&lt;/code&gt; 의 서버, 또는 태그 세트 &lt;code&gt;mongod&lt;/code&gt; 의 이 쓰기가 성공한 것으로 간주되기 전에이 쓰기를 인정해야 서버,.</target>
        </trans-unit>
        <trans-unit id="0a836a83dcb3e46f0995210f8dc18de58a743924" translate="yes" xml:space="preserve">
          <source>Sets the tailable option (for use with capped collections).</source>
          <target state="translated">테일러 블 옵션을 설정합니다 (캡이있는 컬렉션에 사용).</target>
        </trans-unit>
        <trans-unit id="408d2a571f2696dc5a93e67ad1f68588f3964590" translate="yes" xml:space="preserve">
          <source>Sets the value of a path, or many paths.</source>
          <target state="translated">경로 또는 여러 경로의 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="600db84e10bf2e4a01146dd462e8226dce08c4ac" translate="yes" xml:space="preserve">
          <source>Sets the value of the option &lt;code&gt;key&lt;/code&gt;. Equivalent to &lt;code&gt;conn.options[key] = val&lt;/code&gt;</source>
          <target state="translated">옵션 &lt;code&gt;key&lt;/code&gt; 의 값을 설정합니다 . 동등 &lt;code&gt;conn.options[key] = val&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2ddf461fc0add968ebc433bc5a7df6fbf9f8e37" translate="yes" xml:space="preserve">
          <source>Sets/gets a schema option.</source>
          <target state="translated">스키마 옵션을 설정 / 취득합니다.</target>
        </trans-unit>
        <trans-unit id="9461687d6ed2a293d72a1250e76956e07e62fbe1" translate="yes" xml:space="preserve">
          <source>Setter Order</source>
          <target state="translated">세터 순서</target>
        </trans-unit>
        <trans-unit id="2a57ff5fd34c53aa02935c137725d57e985fbf2e" translate="yes" xml:space="preserve">
          <source>Setters</source>
          <target state="translated">Setters</target>
        </trans-unit>
        <trans-unit id="6fdc7d42a66b8064dd46aad264961eccf5a193b2" translate="yes" xml:space="preserve">
          <source>Setters allow you to transform the data before it gets to the raw mongodb document or query.</source>
          <target state="translated">세터를 사용하면 원시 mongodb 문서 또는 쿼리에 도달하기 전에 데이터를 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5713b1457b31eb145fa6eee482de3323c4b92935" translate="yes" xml:space="preserve">
          <source>Setters are also passed a second argument, the schematype on which the setter was defined. This allows for tailored behavior based on options passed in the schema.</source>
          <target state="translated">세터에는 세터가 정의 된 스키마 유형 인 두 번째 인수도 전달됩니다. 이를 통해 스키마에 전달 된 옵션을 기반으로 맞춤형 동작을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4962bf22a046332d2a240040278c6dab8fac28d" translate="yes" xml:space="preserve">
          <source>Setters now run on queries by default, and the old &lt;code&gt;runSettersOnQuery&lt;/code&gt; option has been removed.</source>
          <target state="translated">세터는 이제 기본적으로 쿼리에서 실행되며 이전 &lt;code&gt;runSettersOnQuery&lt;/code&gt; 옵션이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="6bf37a74e62513bc14f67ec0383d11b3bd0eb7c8" translate="yes" xml:space="preserve">
          <source>Setters run in reverse order in 4.x:</source>
          <target state="translated">세터는 4.x에서 역순으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="ee96302bca3914cfd8377e73958b0a19a2a86b54" translate="yes" xml:space="preserve">
          <source>Setting Populated Fields</source>
          <target state="translated">채워진 필드 설정</target>
        </trans-unit>
        <trans-unit id="a90e1b4e4f7168be55e5742665d5885f1178f33f" translate="yes" xml:space="preserve">
          <source>Shortcut for creating a new Document from existing raw data, pre-saved in the DB. The document returned has no paths marked as modified initially.</source>
          <target state="translated">DB에 사전 저장된 기존 원시 데이터에서 새 문서를 작성하기위한 바로 가기입니다. 반환 된 문서에는 처음에 수정 된 것으로 표시된 경로가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9b8bc7de6eb4978fa2cd158939d03131adeaf8cb" translate="yes" xml:space="preserve">
          <source>Shortcut for saving one or more documents to the database. &lt;code&gt;MyModel.create(docs)&lt;/code&gt; does &lt;code&gt;new MyModel(doc).save()&lt;/code&gt; for every doc in docs.</source>
          <target state="translated">하나 이상의 문서를 데이터베이스에 저장하기위한 바로 가기입니다. &lt;code&gt;MyModel.create(docs)&lt;/code&gt; 는 &lt;code&gt;new MyModel(doc).save()&lt;/code&gt; 모든 문서에 대해 를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f75a5e6cc731636eb83059289858d816a2a0516e" translate="yes" xml:space="preserve">
          <source>Shortcut for validating an array of documents and inserting them into MongoDB if they're all valid. This function is faster than &lt;code&gt;.create()&lt;/code&gt; because it only sends one operation to the server, rather than one for each document.</source>
          <target state="translated">문서 배열의 유효성을 검사하고 모두 유효한 경우 MongoDB에 삽입하기위한 바로 가기 이 함수는 &lt;code&gt;.create()&lt;/code&gt; 보다 빠릅니다 . 각 문서마다 하나씩이 아닌 하나의 작업 만 서버로 전송하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="d9863be47431ac05f5f987539e17d0cd1f963532" translate="yes" xml:space="preserve">
          <source>Signal that we desire an increment of this documents version.</source>
          <target state="translated">이 문서 버전의 증분을 원한다는 신호를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="9ea85fb149d1732308cda7ec154faa6cf9da3c35" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ensureIndexes()&lt;/code&gt;, except for it uses the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#createIndex&quot;&gt;&lt;code&gt;createIndex&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#createIndex&quot;&gt; &lt;code&gt;createIndex&lt;/code&gt; &lt;/a&gt; 함수를 사용한다는 점을 제외하면 &lt;code&gt;ensureIndexes()&lt;/code&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="c3574bfda7adc54d097c771a22e628d6e5f6340a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ensureIndexes()&lt;/code&gt;, except for it uses the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#createIndex&quot;&gt;&lt;code&gt;createIndex&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df7252a38d10e4cb4802a66c2c8043ab71b8c55" translate="yes" xml:space="preserve">
          <source>Similarly, single subdocuments also have a shorthand whereby you can omit wrapping the schema with an instance of Schema. However, for historical reasons, this alternate declaration must be enabled via an option (either on the parent schema instantiation or on the mongoose instance).</source>
          <target state="translated">마찬가지로 단일 하위 문서에는 스키마 인스턴스로 스키마 래핑을 생략 할 수있는 축약 형도 있습니다. 그러나 역사적 이유로이 대체 선언은 옵션 (부모 스키마 인스턴스화 또는 몽구스 인스턴스)을 통해 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="e2384afc8d8b0fb06c68ee44c107e9482596b0db" translate="yes" xml:space="preserve">
          <source>Since Mixed is a schema-less type, you can change the value to anything else you like, but Mongoose loses the ability to auto detect and save those changes. To tell Mongoose that the value of a Mixed type has changed, you need to call &lt;code&gt;doc.markModified(path)&lt;/code&gt;, passing the path to the Mixed type you just changed.</source>
          <target state="translated">Mixed은 스키마가없는 유형이므로 값을 원하는 다른 값으로 변경할 수 있지만 Mongoose는 해당 변경 사항을 자동으로 감지하여 저장할 수 없습니다. Mongoose에 Mixed 유형의 값이 변경 &lt;code&gt;doc.markModified(path)&lt;/code&gt; 를 호출 하여 방금 변경 한 Mixed 유형으로 경로를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b42170fb4017777728cfb3dbf69cb99e21c1761" translate="yes" xml:space="preserve">
          <source>Since the Query class also supports &lt;code&gt;where&lt;/code&gt; you can continue chaining</source>
          <target state="translated">Query 클래스는 연결을 계속할 수 &lt;code&gt;where&lt;/code&gt; 도 지원하므로</target>
        </trans-unit>
        <trans-unit id="a2ea672db6b45dda41435c699de215842936f99f" translate="yes" xml:space="preserve">
          <source>Single nested discriminators</source>
          <target state="translated">단일 중첩 판별 기</target>
        </trans-unit>
        <trans-unit id="e49c3248b23487c3a99cd9f8be6fa63feb889d9b" translate="yes" xml:space="preserve">
          <source>Single nested subdocument SchemaType constructor.</source>
          <target state="translated">단일 중첩 하위 문서 SchemaType 생성자</target>
        </trans-unit>
        <trans-unit id="6d257fbebbb26ad856db057e29bd63e9d11315f8" translate="yes" xml:space="preserve">
          <source>SingleNestedPath</source>
          <target state="translated">SingleNestedPath</target>
        </trans-unit>
        <trans-unit id="8a638c3e0fc4d84d7ec508cbe0a26de5c35f9b4f" translate="yes" xml:space="preserve">
          <source>SingleNestedPath()</source>
          <target state="translated">SingleNestedPath()</target>
        </trans-unit>
        <trans-unit id="20ea594913005301752ddbe59716796c059e5e3f" translate="yes" xml:space="preserve">
          <source>SingleNestedPath.prototype.discriminator()</source>
          <target state="translated">SingleNestedPath.prototype.discriminator()</target>
        </trans-unit>
        <trans-unit id="9c75501ee318a161a132e200087b850f9491a9ad" translate="yes" xml:space="preserve">
          <source>So far so good. We've got a schema with one property, &lt;code&gt;name&lt;/code&gt;, which will be a &lt;code&gt;String&lt;/code&gt;. The next step is compiling our schema into a &lt;a href=&quot;models&quot;&gt;Model&lt;/a&gt;.</source>
          <target state="translated">여태까지는 그런대로 잘됐다. 우리는 하나의 속성 &lt;code&gt;name&lt;/code&gt; 을 가진 스키마를 가지고 있는데 이것은 &lt;code&gt;String&lt;/code&gt; 입니다. 다음 단계는 스키마를 &lt;a href=&quot;models&quot;&gt;Model&lt;/a&gt; 로 컴파일하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="56137a45fbd48efc402025824dcf8149734523aa" translate="yes" xml:space="preserve">
          <source>So far we haven't done anything much different. We've merely created a &lt;code&gt;Person&lt;/code&gt; and a &lt;code&gt;Story&lt;/code&gt;. Now let's take a look at populating our story's &lt;code&gt;author&lt;/code&gt; using the query builder:</source>
          <target state="translated">지금까지 우리는 크게 다른 것을하지 않았습니다. 우리는 단지 &lt;code&gt;Person&lt;/code&gt; 과 &lt;code&gt;Story&lt;/code&gt; 를 만들었습니다 . 이제 쿼리 작성기를 사용하여 스토리 &lt;code&gt;author&lt;/code&gt; 를 채우는 방법을 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="4ca3b9f52b6ea58ed0d85e27d0507dc91e03992a" translate="yes" xml:space="preserve">
          <source>So far we've created two &lt;a href=&quot;models&quot;&gt;Models&lt;/a&gt;. Our &lt;code&gt;Person&lt;/code&gt; model has its &lt;code&gt;stories&lt;/code&gt; field set to an array of &lt;code&gt;ObjectId&lt;/code&gt;s. The &lt;code&gt;ref&lt;/code&gt; option is what tells Mongoose which model to use during population, in our case the &lt;code&gt;Story&lt;/code&gt; model. All &lt;code&gt;_id&lt;/code&gt;s we store here must be document &lt;code&gt;_id&lt;/code&gt;s from the &lt;code&gt;Story&lt;/code&gt; model.</source>
          <target state="translated">지금까지 두 개의 &lt;a href=&quot;models&quot;&gt;Model을&lt;/a&gt; 만들었습니다 . 우리 &lt;code&gt;Person&lt;/code&gt; 모델은이 &lt;code&gt;stories&lt;/code&gt; 의 배열 필드 세트 &lt;code&gt;ObjectId&lt;/code&gt; 가 들. &lt;code&gt;ref&lt;/code&gt; 옵션은 우리의 케이스에, 인구 중에 사용하는 모델 몽구스 말해 무엇 &lt;code&gt;Story&lt;/code&gt; 모델. 여기에 저장하는 모든 &lt;code&gt;_id&lt;/code&gt; 는 &lt;code&gt;Story&lt;/code&gt; 모델 의 문서 &lt;code&gt;_id&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="4a94cf8a5a76930e51f2ecabd50cc26431843e14" translate="yes" xml:space="preserve">
          <source>So far we've seen how to connect to MongoDB using Mongoose's default connection. At times we may need multiple connections open to Mongo, each with different read/write settings, or maybe just to different databases for example. In these cases we can utilize &lt;code&gt;mongoose.createConnection()&lt;/code&gt; which accepts all the arguments already discussed and returns a fresh connection for you.</source>
          <target state="translated">지금까지 Mongoose의 기본 연결을 사용하여 MongoDB에 연결하는 방법을 살펴 보았습니다. 때때로 서로 다른 읽기 / 쓰기 설정을 가진 Mongo에 대한 다중 연결이 필요할 수도 있고, 예를 들어 다른 데이터베이스에 연결해야 할 수도 있습니다. 이 경우 &lt;code&gt;mongoose.createConnection()&lt;/code&gt; 을 사용 하여 이미 논의한 모든 인수를 허용하고 새로운 연결을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ffb8b990c2dd9991483752535e05bdac9f095871" translate="yes" xml:space="preserve">
          <source>So far you've only populated based on the &lt;code&gt;_id&lt;/code&gt; field. However, that's sometimes not the right choice. In particular, &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/model-referenced-one-to-many-relationships-between-documents/&quot;&gt;arrays that grow without bound are a MongoDB anti-pattern&lt;/a&gt;. Using mongoose virtuals, you can define more sophisticated relationships between documents.</source>
          <target state="translated">지금까지는 &lt;code&gt;_id&lt;/code&gt; 필드를 기준으로 채워졌습니다 . 그러나 때로는 올바른 선택이 아닙니다. 특히 &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/model-referenced-one-to-many-relationships-between-documents/&quot;&gt;바운드없이 성장하는 배열은 MongoDB anti-pattern&lt;/a&gt; 입니다. 몽구스 가상을 사용하면 문서간에보다 정교한 관계를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="986e8183535b80bbbfba94ac629b8611654e0ea5" translate="yes" xml:space="preserve">
          <source>Sometimes you need to query for things in mongodb using a JavaScript expression. You can do so via &lt;code&gt;find({ $where: javascript })&lt;/code&gt;, or you can use the mongoose shortcut method $where via a Query chain or from your mongoose Model.</source>
          <target state="translated">때로는 JavaScript 표현식을 사용하여 mongodb의 항목을 쿼리해야합니다. 당신은을 통해 그렇게 할 수 있습니다 &lt;code&gt;find({ $where: javascript })&lt;/code&gt; , 또는 어디 쿼리 체인을 통해 또는 몽구스 모델에서 몽구스 바로 가기 방법 $를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="247f76e25352927bc38b27aebc30da18d40b6196" translate="yes" xml:space="preserve">
          <source>Sometimes, you need to get the parent of a subdoc. You can access the parent using the &lt;code&gt;parent()&lt;/code&gt; function.</source>
          <target state="translated">때로는 하위 문서의 부모를 가져와야 할 수도 있습니다. &lt;code&gt;parent()&lt;/code&gt; 함수를 사용하여 부모에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f99d8b938af46e9b948397ecff2835882748420" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$box&lt;/code&gt; condition</source>
          <target state="translated">&lt;code&gt;$box&lt;/code&gt; 조건을 지정합니다</target>
        </trans-unit>
        <trans-unit id="285a5b6f0c8064ca65028c81224032153121f497" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$center&lt;/code&gt; or &lt;code&gt;$centerSphere&lt;/code&gt; condition.</source>
          <target state="translated">&lt;code&gt;$center&lt;/code&gt; 또는 &lt;code&gt;$centerSphere&lt;/code&gt; 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="15fe429d9789c6b1bc9f2b7d409686d5406f6963" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$geometry&lt;/code&gt; condition</source>
          <target state="translated">&lt;code&gt;$geometry&lt;/code&gt; 조건을 지정합니다</target>
        </trans-unit>
        <trans-unit id="615e9cb5228b5803d2c8d3b4a8a416028699d29a" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$gt&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$gt&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="e8d7bf0cc1e2a0fd0377b37142af9b3eb4e53464" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$gte&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$gte&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="391ff9efa294e6d731a16c33ee96d4c6c2497b2e" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$lt&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$lt&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="f77481fa019f0d162ad932537cd9b075f3785fe2" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$lte&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$lte&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="6c4b3493bdb6201f3958af910ea6dca2e2f95c1c" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$mod&lt;/code&gt; condition, filters documents for documents whose &lt;code&gt;path&lt;/code&gt; property is a number that is equal to &lt;code&gt;remainder&lt;/code&gt; modulo &lt;code&gt;divisor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$mod&lt;/code&gt; 조건을 지정하고 &lt;code&gt;path&lt;/code&gt; 특성이 &lt;code&gt;remainder&lt;/code&gt; 모듈로 &lt;code&gt;divisor&lt;/code&gt; 같은 숫자 인 문서에 대해 문서를 필터링합니다 .</target>
        </trans-unit>
        <trans-unit id="5da8cafeb3f00fc61e15dde6442d3371b5862fc6" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$ne&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$ne&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="fb012d91ec23ebca4f227828845a365c8fc38cc0" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$near&lt;/code&gt; or &lt;code&gt;$nearSphere&lt;/code&gt; condition</source>
          <target state="translated">&lt;code&gt;$near&lt;/code&gt; 또는 &lt;code&gt;$nearSphere&lt;/code&gt; 조건을 지정합니다</target>
        </trans-unit>
        <trans-unit id="683ae1cf07f36748afe0c0f66589965f93033210" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$polygon&lt;/code&gt; condition</source>
          <target state="translated">&lt;code&gt;$polygon&lt;/code&gt; 조건을 지정합니다</target>
        </trans-unit>
        <trans-unit id="f0dba4565709e475ed94471eb1edac7dded486ca" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$regex&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$regex&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="78471c1e3318c5ec175f5cee53649945ad89d0b3" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$size&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$size&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="fc1fad742ac977d7106e98495ebd7c8d12dfc286" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;$slice&lt;/code&gt; projection for an array.</source>
          <target state="translated">배열 의 &lt;code&gt;$slice&lt;/code&gt; 투영을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="50ea029c323fccd73d53b6e5be97cb924ceee467" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;maxDistance&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;maxDistance&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="fd4f2a0f39fa746205f142df7ba75d140bd91bb1" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;path&lt;/code&gt; for use with chaining.</source>
          <target state="translated">체인과 함께 사용할 &lt;code&gt;path&lt;/code&gt; 를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="5ceb6becddecc76677b299abf3721bcdb89926d4" translate="yes" xml:space="preserve">
          <source>Specifies a javascript function or expression to pass to MongoDBs query system.</source>
          <target state="translated">MongoDBs 쿼리 시스템에 전달할 자바 스크립트 함수 또는 표현식을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="decc01ba97656d637a06ff50f57b71ce7aee2e45" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;code&gt;$all&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$all&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="7ce6f324e42b23e5b8b65febd5bb87c02db9aeb8" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;code&gt;$elemMatch&lt;/code&gt; condition</source>
          <target state="translated">&lt;code&gt;$elemMatch&lt;/code&gt; 조건을 지정합니다</target>
        </trans-unit>
        <trans-unit id="29cac680633d218944db7478e954896675890829" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;code&gt;$exists&lt;/code&gt; condition</source>
          <target state="translated">&lt;code&gt;$exists&lt;/code&gt; 조건을 지정합니다</target>
        </trans-unit>
        <trans-unit id="76ec47e229998258f5a7758e5a1a2ebae7d95a24" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;code&gt;$in&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$in&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="228f2105551507f1813336538cd6b576fe8b61da" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;code&gt;$nin&lt;/code&gt; query condition.</source>
          <target state="translated">&lt;code&gt;$nin&lt;/code&gt; 쿼리 조건을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="4f4329472a485f11bfb70977890068e734d8f748" translate="yes" xml:space="preserve">
          <source>Specifies arguments for a &lt;code&gt;$and&lt;/code&gt; condition.</source>
          <target state="translated">&lt;code&gt;$and&lt;/code&gt; 조건에 대한 인수를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="922c342d2e1c2234d81e582620517a1453c80007" translate="yes" xml:space="preserve">
          <source>Specifies arguments for a &lt;code&gt;$nor&lt;/code&gt; condition.</source>
          <target state="translated">&lt;code&gt;$nor&lt;/code&gt; 조건에 대한 인수를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="fade7a4f51f943f5f7f885f541a725bece0dbafb" translate="yes" xml:space="preserve">
          <source>Specifies arguments for an &lt;code&gt;$or&lt;/code&gt; condition.</source>
          <target state="translated">&lt;code&gt;$or&lt;/code&gt; 조건에 대한 인수를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="7d00f91431686f297b58ef3f0c5bd7eb60f7e18c" translate="yes" xml:space="preserve">
          <source>Specifies paths which should be populated with other documents.</source>
          <target state="translated">다른 문서로 채워 져야하는 경로를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d2156f5f99c570a28a2280c6d4835fc5a6071962" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;code&gt;comment&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt; 옵션을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="fce4cdfcf68e8df13367c9ac59ac56cc22e63906" translate="yes" xml:space="preserve">
          <source>Specifies the batchSize option.</source>
          <target state="translated">batchSize 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dc467f9a141ff571010f20c0cb14c4efa3b6644f" translate="yes" xml:space="preserve">
          <source>Specifies the complementary comparison value for paths specified with &lt;code&gt;where()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;where()&lt;/code&gt; 지정된 경로에 대한 보완 비교 값을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bfe6276272bf1e7a5ae813efe85fad108afe22cf" translate="yes" xml:space="preserve">
          <source>Specifies the maxScan option.</source>
          <target state="translated">maxScan 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="e27a0e5805801657a617c2a53ba61264da651350" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of documents the query will return.</source>
          <target state="translated">쿼리가 반환 할 최대 문서 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0355a5120f998d53d7cae896c27ba9f38d453d79" translate="yes" xml:space="preserve">
          <source>Specifies the number of documents to skip.</source>
          <target state="translated">건너 뛸 문서 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="98bc9ce7ee57f2459015668ce09fa4921357b3c8" translate="yes" xml:space="preserve">
          <source>Specifies this query as a &lt;code&gt;count&lt;/code&gt; query.</source>
          <target state="translated">이 쿼리를 &lt;code&gt;count&lt;/code&gt; 쿼리로 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="31ec5815c51766c8bdd0cc2b69f10c7857226b91" translate="yes" xml:space="preserve">
          <source>Specifies this query as a &lt;code&gt;countDocuments()&lt;/code&gt; query. Behaves like &lt;code&gt;count()&lt;/code&gt;, except it always does a full collection scan when passed an empty filter &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">이 쿼리를 &lt;code&gt;countDocuments()&lt;/code&gt; 쿼리 로 지정 합니다. 빈 필터 &lt;code&gt;{}&lt;/code&gt; 를 전달할 때 항상 전체 콜렉션 스캔을 수행한다는 점을 제외하고 &lt;code&gt;count()&lt;/code&gt; 와 같이 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="56733f8020ea0ba5791e01af251f78134c3836be" translate="yes" xml:space="preserve">
          <source>Specifies this query as a &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; query. Faster than using &lt;code&gt;countDocuments()&lt;/code&gt; for large collections because &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; uses collection metadata rather than scanning the entire collection.</source>
          <target state="translated">이 쿼리를 &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; 쿼리 로 지정 합니다. 보다 빠른 사용 &lt;code&gt;countDocuments()&lt;/code&gt; 때문에 큰 모음을 &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; 수집 메타 데이터를 사용하기보다는 전체 컬렉션을 주사.</target>
        </trans-unit>
        <trans-unit id="f4d53106d7da4f559a92222a8b249e2fde67a1c7" translate="yes" xml:space="preserve">
          <source>Specifies this query as a &lt;code&gt;snapshot&lt;/code&gt; query.</source>
          <target state="translated">이 쿼리를 &lt;code&gt;snapshot&lt;/code&gt; 쿼리로 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="2f3c90992a3612839eacbaeed52c11dbfc292a80" translate="yes" xml:space="preserve">
          <source>Specifies which document fields to include or exclude (also known as the query &quot;projection&quot;)</source>
          <target state="translated">포함하거나 제외 할 문서 필드를 지정합니다 (쿼리 &quot;프로젝션&quot;이라고도 함)</target>
        </trans-unit>
        <trans-unit id="76d3b53a14400e11799552feffd005df3063a117" translate="yes" xml:space="preserve">
          <source>Statics</source>
          <target state="translated">Statics</target>
        </trans-unit>
        <trans-unit id="e57d568c127bd563c550032a6d57585538b22941" translate="yes" xml:space="preserve">
          <source>Storage layer for mongoose promises</source>
          <target state="translated">몽구스 약속을위한 스토리지 계층</target>
        </trans-unit>
        <trans-unit id="1e8325521df6e6903ede77955f9bf1a333363aed" translate="yes" xml:space="preserve">
          <source>Streaming</source>
          <target state="translated">Streaming</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="b7b0451f3dec15f35992bd1d1b8e7e7c66403eb1" translate="yes" xml:space="preserve">
          <source>SubDocument</source>
          <target state="translated">SubDocument</target>
        </trans-unit>
        <trans-unit id="edb9c846cc1ff2b06241985b73b7d00088b30a75" translate="yes" xml:space="preserve">
          <source>Subdocs may also be created without adding them to the array by using the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#types_documentarray_MongooseDocumentArray.create&quot;&gt;create&lt;/a&gt; method of MongooseArrays.</source>
          <target state="translated">MongooseArrays 의 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#types_documentarray_MongooseDocumentArray.create&quot;&gt;create&lt;/a&gt; 메소드를 사용하여 서브 도크를 배열에 추가하지 않고 서브 도크를 작성할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bf74bd647d0f2e5fe362a409eb850c102a263ca3" translate="yes" xml:space="preserve">
          <source>SubdocsArray SchemaType constructor</source>
          <target state="translated">SubdocsArray SchemaType 생성자</target>
        </trans-unit>
        <trans-unit id="17ee250a6d9726c4e852deb1f8b015abd5aeb13d" translate="yes" xml:space="preserve">
          <source>Subdocuments</source>
          <target state="translated">Subdocuments</target>
        </trans-unit>
        <trans-unit id="d1775c398a58cee65920fa5e47eb082d0ad1f916" translate="yes" xml:space="preserve">
          <source>Subdocuments are documents embedded in other documents. In Mongoose, this means you can nest schemas in other schemas. Mongoose has two distinct notions of subdocuments: arrays of subdocuments and single nested subdocuments.</source>
          <target state="translated">하위 문서는 다른 문서에 포함 된 문서입니다. 몽구스에서는 다른 스키마에 스키마를 중첩 할 수 있습니다. Mongoose에는 하위 문서의 두 가지 고유 개념 인 하위 문서 배열과 단일 중첩 하위 문서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="82d2007b5f68e5d2669fa48dc0a3bb4758c7d9ee" translate="yes" xml:space="preserve">
          <source>Subdocuments are similar to normal documents. Nested schemas can have &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;, &lt;a href=&quot;validation&quot;&gt;custom validation logic&lt;/a&gt;, virtuals, and any other feature top-level schemas can use. The major difference is that subdocuments are not saved individually, they are saved whenever their top-level parent document is saved.</source>
          <target state="translated">하위 문서는 일반 문서와 유사합니다. 중첩 된 스키마에는 &lt;a href=&quot;middleware&quot;&gt;미들웨어&lt;/a&gt; , &lt;a href=&quot;validation&quot;&gt;사용자 정의 유효성 검증 논리&lt;/a&gt; , 가상 및 기타 최상위 레벨 스키마가 사용할 수있는 기능이있을 수 있습니다. 주요 차이점은 하위 문서는 개별적으로 저장되지 않고 최상위 상위 문서가 저장 될 때마다 저장된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e2a9fc48856f042068cc5247db145a8692183f24" translate="yes" xml:space="preserve">
          <source>Subdocuments have &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt;&lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt; just like top-level documents. Calling &lt;code&gt;save()&lt;/code&gt; on the parent document triggers the &lt;code&gt;save()&lt;/code&gt; middleware for all its subdocuments, and the same for &lt;code&gt;validate()&lt;/code&gt; middleware.</source>
          <target state="translated">하위 문서는 최상위 문서와 마찬가지로 &lt;a href=&quot;middleware&quot;&gt;미들웨어를 &lt;/a&gt; &lt;code&gt;save&lt;/code&gt; 하고 &lt;code&gt;validate&lt;/code&gt; 합니다. 상위 문서에서 &lt;code&gt;save()&lt;/code&gt; 를 호출 하면 모든 하위 문서에 대해 &lt;code&gt;save()&lt;/code&gt; 미들웨어가 트리거되고 &lt;code&gt;validate()&lt;/code&gt; 미들웨어에 대해서도 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="2881617a56186fa3938f875297a2b782e7cdef38" translate="yes" xml:space="preserve">
          <source>Subdocuments' &lt;code&gt;pre('save')&lt;/code&gt; and &lt;code&gt;pre('validate')&lt;/code&gt; middleware execute &lt;strong&gt;before&lt;/strong&gt; the top-level document's &lt;code&gt;pre('save')&lt;/code&gt; but &lt;strong&gt;after&lt;/strong&gt; the top-level document's &lt;code&gt;pre('validate')&lt;/code&gt; middleware. This is because validating before &lt;code&gt;save()&lt;/code&gt; is actually a piece of built-in middleware.</source>
          <target state="translated">하위 문서 ' &lt;code&gt;pre('save')&lt;/code&gt; 및 &lt;code&gt;pre('validate')&lt;/code&gt; 실행 미들웨어 &lt;strong&gt;전에&lt;/strong&gt; 최상위 문서의 &lt;code&gt;pre('save')&lt;/code&gt; 하지만 &lt;strong&gt;이후&lt;/strong&gt; 최상위 문서의 &lt;code&gt;pre('validate')&lt;/code&gt; 미들웨어. &lt;code&gt;save()&lt;/code&gt; 이전의 유효성 검사 는 실제로 내장 미들웨어의 일부 이기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="f24fcf6bf262b7acfc14b9e23c3a31d6f3223640" translate="yes" xml:space="preserve">
          <source>Supported options are</source>
          <target state="translated">지원되는 옵션은</target>
        </trans-unit>
        <trans-unit id="1161a88ae1b055549ca052a0bf3f66d354ce06f4" translate="yes" xml:space="preserve">
          <source>Supported options include</source>
          <target state="translated">지원되는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b0118fb60f0cb02661a9ab0c5203f4444f535c7e" translate="yes" xml:space="preserve">
          <source>Suppose you are implementing user registration for a website. Users provide an email and password, which gets saved to mongodb. The email is a string that you will want to normalize to lower case, in order to avoid one email having more than one account -- e.g., otherwise, &lt;a href=&quot;mailto:avenue@q.com&quot;&gt;avenue@q.com&lt;/a&gt; can be registered for 2 accounts via &lt;a href=&quot;mailto:avenue@q.com&quot;&gt;avenue@q.com&lt;/a&gt; and &lt;a href=&quot;mailto:AvEnUe@Q.CoM&quot;&gt;AvEnUe@Q.CoM&lt;/a&gt;.</source>
          <target state="translated">웹 사이트에 대한 사용자 등록을 구현한다고 가정하십시오. 사용자는 이메일과 비밀번호를 제공하며 mongodb에 저장됩니다. 이메일은 당신이 하나의 이메일 계정을 두 개 이상 것을 방지하기 위해, 소문자로 정상화 할 것 문자열입니다 - 예를 들어, 그렇지 않으면 &lt;a href=&quot;mailto:avenue@q.com&quot;&gt;avenue@q.com를&lt;/a&gt; 통해이 개 계정을 등록 할 수 있습니다 &lt;a href=&quot;mailto:avenue@q.com&quot;&gt;avenue@q.com&lt;/a&gt; 및 &lt;a href=&quot;mailto:AvEnUe@Q.CoM&quot;&gt;AvEnUe@Q.CoM&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4332696fde183542483d0ac911bea2312d3b003" translate="yes" xml:space="preserve">
          <source>Suppose you are storing credit card numbers and you want to hide everything except the last 4 digits to the mongoose user. You can do so by defining a getter in the following way:</source>
          <target state="translated">신용 카드 번호를 저장하고 있으며 마지막 4 자리를 제외한 모든 것을 몽구스 사용자에게 숨기고 싶다고 가정하십시오. 다음과 같은 방법으로 게터를 정의하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5ebbf4b41c829b2f3ee8158696c38bce6cfeaae1" translate="yes" xml:space="preserve">
          <source>Suppose you created another discriminator to track events where a new user registered. These &lt;code&gt;SignedUpEvent&lt;/code&gt; instances will be stored in the same collection as generic events and &lt;code&gt;ClickedLinkEvent&lt;/code&gt; instances.</source>
          <target state="translated">새 사용자가 등록한 이벤트를 추적하기 위해 다른 판별기를 작성했다고 가정하십시오. 이러한 &lt;code&gt;SignedUpEvent&lt;/code&gt; 인스턴스는 일반 이벤트 및 &lt;code&gt;ClickedLinkEvent&lt;/code&gt; 인스턴스 와 동일한 컬렉션에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d99ac7176b9512d9f3a05f3efd4be4b4010185b" translate="yes" xml:space="preserve">
          <source>Suppose you have a &lt;code&gt;User&lt;/code&gt; collection and you want to obfuscate user emails to protect your users' privacy. Below is a basic &lt;code&gt;userSchema&lt;/code&gt; that obfuscates the user's email address.</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; 모음이 있고 사용자의 개인 정보를 보호하기 위해 사용자 전자 메일을 난독 처리하려고 한다고 가정 하십시오. 다음은 사용자의 이메일 주소를 난독 화 하는 기본 &lt;code&gt;userSchema&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6775e821edae02d31d7f527f8ab808c039b4dc01" translate="yes" xml:space="preserve">
          <source>Suppose you have a &lt;code&gt;User&lt;/code&gt; model. Every user has an &lt;code&gt;email&lt;/code&gt;, but you also want the email's domain. For example, the domain portion of 'test@gmail.com' is 'gmail.com'.</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; 모델 이 있다고 가정하십시오 . 모든 사용자에게는 &lt;code&gt;email&lt;/code&gt; 이 있지만 이메일 도메인도 원합니다. 예를 들어 'test@gmail.com'의 도메인 부분은 'gmail.com'입니다.</target>
        </trans-unit>
        <trans-unit id="7edcf4e765acf17a433248e1c4f2fe8d8d546d7c" translate="yes" xml:space="preserve">
          <source>Suppose you want to make sure all user emails in your database are lowercased to make it easy to search without worrying about case. Below is an example &lt;code&gt;userSchema&lt;/code&gt; that ensures emails are lowercased.</source>
          <target state="translated">대소 문자를 염려하지 않고 쉽게 검색 할 수 있도록 데이터베이스의 모든 사용자 이메일이 소문자인지 확인한다고 가정하십시오. 아래는 이메일을 소문자로 &lt;code&gt;userSchema&lt;/code&gt; 의 예 입니다.</target>
        </trans-unit>
        <trans-unit id="636c613b1878d7caf78bb915c47e035267b9d047" translate="yes" xml:space="preserve">
          <source>Suppose you want to print out the person's full name. You could do it yourself:</source>
          <target state="translated">그 사람의 성명을 인쇄한다고 가정하십시오. 스스로 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="809771c548fe16207499ca6b4fa81052592261b2" translate="yes" xml:space="preserve">
          <source>Suppose you wanted to track different types of events in a single collection. Every event will have a timestamp, but events that represent clicked links should have a URL. You can achieve this using the &lt;code&gt;model.discriminator()&lt;/code&gt; function. This function takes 3 parameters, a model name, a discriminator schema and an optional key (defaults to the model name). It returns a model whose schema is the union of the base schema and the discriminator schema.</source>
          <target state="translated">단일 콜렉션에서 다른 유형의 이벤트를 추적하려고한다고 가정하십시오. 모든 이벤트에는 타임 스탬프가 있지만 클릭 링크를 나타내는 이벤트에는 URL이 있어야합니다. &lt;code&gt;model.discriminator()&lt;/code&gt; . distinguishor () 함수를 사용하여이를 달성 할 수 있습니다 . 이 함수는 모델 이름, 판별 기 스키마 및 선택적 키 (기본값은 모델 이름)의 3 가지 매개 변수를 사용합니다. 스키마가 기본 스키마와 판별 자 스키마의 결합 인 모델을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c9ae3500a335eb3fb5e26e6ecc955383f12ede30" translate="yes" xml:space="preserve">
          <source>Switches to a different database using the same connection pool.</source>
          <target state="translated">동일한 연결 풀을 사용하여 다른 데이터베이스로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="58ace028a73f08152429272cbed03f777702890c" translate="yes" xml:space="preserve">
          <source>Synchronous Hooks</source>
          <target state="translated">동기 후크</target>
        </trans-unit>
        <trans-unit id="6f744a328b572de6b9800e354b4f257e527a1caa" translate="yes" xml:space="preserve">
          <source>Takes a populated field and returns it to its unpopulated state.</source>
          <target state="translated">채워진 필드를 가져 와서 채워지지 않은 상태로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="047e4406e91e39be4936e34821dea68bfba66d3c" translate="yes" xml:space="preserve">
          <source>That is because gridfs-stream relies on a &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/GridStore.html&quot;&gt;deprecated MongoDB driver class&lt;/a&gt;. You should instead use the &lt;a href=&quot;https://thecodebarbarian.com/mongodb-gridfs-stream&quot;&gt;MongoDB driver's own streaming API&lt;/a&gt;.</source>
          <target state="translated">gridfs-stream은 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/GridStore.html&quot;&gt;더 이상 사용되지 않는 MongoDB 드라이버 클래스&lt;/a&gt; 에 의존하기 때문 입니다. 대신 &lt;a href=&quot;https://thecodebarbarian.com/mongodb-gridfs-stream&quot;&gt;MongoDB 드라이버 자체의 스트리밍 API&lt;/a&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="141a30094da336bf9293173bc8605b14ac5f1d7d" translate="yes" xml:space="preserve">
          <source>That is because gridfs-stream relies on a &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/GridStore.html&quot;&gt;deprecated MongoDB driver class&lt;/a&gt;. You should instead use the &lt;a href=&quot;https://thecodebarbarian.com/mongodb-gridfs-stream&quot;&gt;MongoDB driver's own streaming API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0747a1456eafd071c3c70419a714ee4fae701c37" translate="yes" xml:space="preserve">
          <source>That's because mongoose buffers model function calls internally. This buffering is convenient, but also a common source of confusion. Mongoose will &lt;em&gt;not&lt;/em&gt; throw any errors by default if you use a model without connecting.</source>
          <target state="translated">몽구스 버퍼가 함수 호출을 내부적으로 버퍼하기 때문입니다. 이 버퍼링은 편리하지만 일반적인 혼란의 원인입니다. 연결하지 않고 모델을 사용하는 경우 몽구스는 기본적으로 오류를 발생 &lt;em&gt;시키지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5bda9646308400c0a8625a486fab312d75e4bfca" translate="yes" xml:space="preserve">
          <source>That's because, in order to avoid executing a separate query for each document, Mongoose instead queries for fans using &lt;code&gt;numDocuments * limit&lt;/code&gt; as the limit. As a workaround, you should populate each document individually:</source>
          <target state="translated">각 문서에 대해 별도의 쿼리를 실행하지 않기 위해 Mongoose는 대신 &lt;code&gt;numDocuments * limit&lt;/code&gt; 를 한계 로 사용하여 팬을 쿼리하기 때문 입니다. 이 문제를 해결하려면 각 문서를 개별적으로 채워야합니다.</target>
        </trans-unit>
        <trans-unit id="bc2d38b1680d308dd653c16f1f97cd96ddc45d4b" translate="yes" xml:space="preserve">
          <source>That's the end of our quick start. We created a schema, added a custom document method, saved and queried kittens in MongoDB using Mongoose. Head over to the &lt;a href=&quot;guide&quot;&gt;guide&lt;/a&gt;, or &lt;a href=&quot;https://mongoosejs.com/docs/api.html&quot;&gt;API docs&lt;/a&gt; for more.</source>
          <target state="translated">이것이 우리의 빠른 시작의 끝입니다. Mongoose를 사용하여 MongoDB에서 스키마를 생성하고 사용자 지정 문서 메서드를 추가하고 저장하고 쿼리 한 새끼 고양이를 만들었습니다. 받는 사람 향할 &lt;a href=&quot;guide&quot;&gt;가이드&lt;/a&gt; , 또는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html&quot;&gt;API 문서&lt;/a&gt; 이상.</target>
        </trans-unit>
        <trans-unit id="dcb05f0076e080d995a96c0d7674f5f6042045bb" translate="yes" xml:space="preserve">
          <source>The &amp;laquo;String|RegExp&amp;raquo; method name or regular expression to match method name</source>
          <target state="translated">메소드 이름과 일치하는&amp;laquo;String | RegExp&amp;raquo;메소드 이름 또는 정규식</target>
        </trans-unit>
        <trans-unit id="823540110fff3b8dd3256c7ccd0193fafefe16fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#error_MongooseError&quot;&gt;MongooseError&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;#error_MongooseError&quot;&gt;MongooseError의&lt;/a&gt; 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="978341993168022f314d2755a1d2687899b5c87f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://mongoosejs.com/docs/4.x/docs/connections.html#use-mongo-client&quot;&gt;&lt;code&gt;useMongoClient&lt;/code&gt; option&lt;/a&gt; was removed in Mongoose 5, it is now always &lt;code&gt;true&lt;/code&gt;. As a consequence, Mongoose 5 no longer supports several function signatures for &lt;code&gt;mongoose.connect()&lt;/code&gt; that worked in Mongoose 4.x if the &lt;code&gt;useMongoClient&lt;/code&gt; option was off. Below are some examples of &lt;code&gt;mongoose.connect()&lt;/code&gt; calls that do &lt;strong&gt;not&lt;/strong&gt; work in Mongoose 5.x.</source>
          <target state="translated">&lt;a href=&quot;http://mongoosejs.com/docs/4.x/docs/connections.html#use-mongo-client&quot;&gt; &lt;code&gt;useMongoClient&lt;/code&gt; 의 옵션&lt;/a&gt; 몽구스 5 제거하고, 지금은 항상 &lt;code&gt;true&lt;/code&gt; . 결과적으로 Mongoose 5는 더 이상 &lt;code&gt;useMongoClient&lt;/code&gt; 옵션이 꺼져 있으면 Mongoose 4.x에서 작동하는 &lt;code&gt;mongoose.connect()&lt;/code&gt; 대한 여러 함수 서명을 더 이상 지원하지 않습니다 . 다음은 Mongoose 5.x에서 작동 하지 &lt;strong&gt;않는 &lt;/strong&gt; &lt;code&gt;mongoose.connect()&lt;/code&gt; 호출의 예입니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0c5a437ddbcc8dd4ee541b09c177d843815a89c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.bulkWrite/#db.collection.bulkWrite&quot;&gt;supported operations&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.bulkWrite/#db.collection.bulkWrite&quot;&gt;지원 작업은&lt;/a&gt; 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="4f58b810095680be02cffddef94a8ac3b19851b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/aheckmann/mquery&quot;&gt;mquery&lt;/a&gt; query builder Mongoose uses.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/aheckmann/mquery&quot;&gt;mquery의&lt;/a&gt; 몽구스 빌더 쿼리를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8e1ee0477f58b2d8c9cea7cbee7db50f29296cba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/mongodb/node-mongodb-native&quot;&gt;node-mongodb-native&lt;/a&gt; driver Mongoose uses.</source>
          <target state="translated">Mongoose가 사용 하는 &lt;a href=&quot;https://github.com/mongodb/node-mongodb-native&quot;&gt;node-mongodb 기본&lt;/a&gt; 드라이버.</target>
        </trans-unit>
        <trans-unit id="513fcb03a6fa73bd8dc276231ebd752d4f6e08f3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-pipeline&quot;&gt;&lt;code&gt;Aggregate#pipeline()&lt;/code&gt; function&lt;/a&gt; lets you access the MongoDB aggregation pipeline that Mongoose will send to the MongoDB server. It is useful for adding stages to the beginning of the pipeline from middleware.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-pipeline&quot;&gt; &lt;code&gt;Aggregate#pipeline()&lt;/code&gt; 함수를&lt;/a&gt; 사용하면 몽구스가 MongoDB를 서버로 보낼 것이라는 MongoDB를 집계 파이프 라인에 액세스 할 수 있습니다. 미들웨어에서 파이프 라인의 시작 부분에 단계를 추가하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="73dfff5aa971b4a14a22d53b25a8773edd994fdd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model&quot;&gt;API docs&lt;/a&gt; cover many additional methods available like &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.count&quot;&gt;count&lt;/a&gt;, &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.mapReduce&quot;&gt;mapReduce&lt;/a&gt;, &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.aggregate&quot;&gt;aggregate&lt;/a&gt;, and &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.findOneAndRemove&quot;&gt;more&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model&quot;&gt;API 문서가&lt;/a&gt; 같은 많은 추가 방법을 사용할 다루 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.count&quot;&gt;계수&lt;/a&gt; , &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.mapReduce&quot;&gt;맵리 듀스&lt;/a&gt; , &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.aggregate&quot;&gt;골재&lt;/a&gt; , 그리고 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.findOneAndRemove&quot;&gt;더&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7a0c952f4c9bad39c9ec9d98a21b98c6eb92b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; function is generally the right way to update a document with Mongoose. With &lt;code&gt;save()&lt;/code&gt;, you get full &lt;a href=&quot;validation&quot;&gt;validation&lt;/a&gt; and &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; 함수는 일반적으로 몽구스와 문서를 업데이트 할 수있는 올바른 방법이다. 로 &lt;code&gt;save()&lt;/code&gt; , 당신은 전체 얻을 &lt;a href=&quot;validation&quot;&gt;검증&lt;/a&gt; 및 &lt;a href=&quot;middleware&quot;&gt;미들웨어를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92042480f295f15a1c50ac74fd04d6eaac4bcc4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;lean option&lt;/a&gt; tells Mongoose to skip &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.hydrate&quot;&gt;hydrating&lt;/a&gt; the result documents. This makes queries faster and less memory intensive, but the result documents are plain old JavaScript objects (POJOs), &lt;strong&gt;not&lt;/strong&gt;&lt;a href=&quot;../documents&quot;&gt;Mongoose documents&lt;/a&gt;. In this tutorial, you'll learn more about the tradeoffs of using &lt;code&gt;lean()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;린 옵션은&lt;/a&gt; 건너 뛸 몽구스를 알려줍니다 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.hydrate&quot;&gt;보습&lt;/a&gt; 결과 문서를. 이렇게하면 쿼리 속도가 빨라지고 메모리가 덜 소모되지만 결과 문서는 &lt;a href=&quot;../documents&quot;&gt;Mongoose 문서가 &lt;/a&gt;&lt;strong&gt;아닌&lt;/strong&gt; POJO (plain old JavaScript objects) 입니다. 이 자습서에서는 &lt;code&gt;lean()&lt;/code&gt; 사용의 장단점에 대해 자세히 알아 봅니다 .</target>
        </trans-unit>
        <trans-unit id="c81f9f69fa1d8840b5048ff215cccb941e1569f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$pushAll&lt;/code&gt; Operator</source>
          <target state="translated">&lt;code&gt;$pushAll&lt;/code&gt; 운영자</target>
        </trans-unit>
        <trans-unit id="b1465719f4454d5fb569ae7214f0f14b9a09dcc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.cursor()&lt;/code&gt; function triggers pre find hooks, but &lt;strong&gt;not&lt;/strong&gt; post find hooks.</source>
          <target state="translated">&lt;code&gt;.cursor()&lt;/code&gt; 함수를 트리거는 후크를 찾을 사전,하지만 &lt;strong&gt;하지&lt;/strong&gt; 포스트 찾기 후크.</target>
        </trans-unit>
        <trans-unit id="56b35efc4d52ce941667d54c10b501c99d0f3417" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Model.aggregate()&lt;/code&gt; function also supports transactions. Mongoose aggregations have a &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-session&quot;&gt;&lt;code&gt;session()&lt;/code&gt; helper&lt;/a&gt; that sets the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-option&quot;&gt;&lt;code&gt;session&lt;/code&gt; option&lt;/a&gt;. Below is an example of executing an aggregation within a transaction.</source>
          <target state="translated">&lt;code&gt;Model.aggregate()&lt;/code&gt; 함수는 트랜잭션을 지원한다. 몽구스 집계에는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-option&quot;&gt; &lt;code&gt;session&lt;/code&gt; &lt;/a&gt; 옵션 을 설정 하는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-session&quot;&gt; &lt;code&gt;session()&lt;/code&gt; 도우미&lt;/a&gt; 가 있습니다 . 아래는 트랜잭션 내에서 집계를 실행하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="c7b765eeca8dbd99e43f6d140fb8b8fed5aff720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Schema#virtual()&lt;/code&gt; function returns a &lt;a href=&quot;../api/virtualtype&quot;&gt;&lt;code&gt;VirtualType&lt;/code&gt; object&lt;/a&gt;. Unlike normal document properties, virtuals do not have any underlying value and Mongoose does not do any type coercion on virtuals. However, virtuals do have &lt;a href=&quot;getters-setters&quot;&gt;getters and setters&lt;/a&gt;, which make them ideal for computed properties, like the &lt;code&gt;domain&lt;/code&gt; example above.</source>
          <target state="translated">&lt;code&gt;Schema#virtual()&lt;/code&gt; 함수를 리턴한다 &lt;a href=&quot;../api/virtualtype&quot;&gt; &lt;code&gt;VirtualType&lt;/code&gt; 의 객체를&lt;/a&gt; . 일반 문서 속성과 달리 가상에는 기본 값이 없으며 Mongoose는 가상에 대해 유형 강제를 수행하지 않습니다. 그러나 가상에는 &lt;a href=&quot;getters-setters&quot;&gt;게터와 세터가&lt;/a&gt; 있으므로 위 의 &lt;code&gt;domain&lt;/code&gt; 예 와 같이 계산 된 속성에 이상적입니다 .</target>
        </trans-unit>
        <trans-unit id="3c70ead4a0c9eb1c7ad44f7fccf0f99eeaa708c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoIndex&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; by default. You can change this default by setting &lt;a href=&quot;api/mongoose#mongoose_Mongoose-set&quot;&gt;&lt;code&gt;mongoose.set('autoIndex', false);&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;autoIndex&lt;/code&gt; 옵션이 설정되어 &lt;code&gt;true&lt;/code&gt; 기본적으로. &lt;a href=&quot;api/mongoose#mongoose_Mongoose-set&quot;&gt; &lt;code&gt;mongoose.set('autoIndex', false);&lt;/code&gt; &lt;/a&gt; 를 설정하여이 기본값을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1cce98b0c3ddaf0f5ecaa1209af2883ec5539b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; function receives &lt;code&gt;(err, rawResponse)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 함수는 수신 &lt;code&gt;(err, rawResponse)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe10459687783a36d81c4fb30fef6dcff5f23461" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capped&lt;/code&gt; option may also be set to an object if you want to pass additional options like &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-max&quot;&gt;max&lt;/a&gt; or &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-autoIndexId&quot;&gt;autoIndexId&lt;/a&gt;. In this case you must explicitly pass the &lt;code&gt;size&lt;/code&gt; option, which is required.</source>
          <target state="translated">&lt;code&gt;capped&lt;/code&gt; 이 같은 추가 옵션을 전달하려면 옵션은 객체에 설정 될 수 있습니다 &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-max&quot;&gt;최대&lt;/a&gt; 또는 &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-autoIndexId&quot;&gt;autoIndexId을&lt;/a&gt; . 이 경우 필요한 &lt;code&gt;size&lt;/code&gt; 옵션을 명시 적으로 전달해야 합니다.</target>
        </trans-unit>
        <trans-unit id="123dced87ed91443617ba7b234f97746db23712b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capped&lt;/code&gt; option may also be set to an object if you want to pass additional options like &lt;a href=&quot;https://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-max&quot;&gt;max&lt;/a&gt; or &lt;a href=&quot;https://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-autoIndexId&quot;&gt;autoIndexId&lt;/a&gt;. In this case you must explicitly pass the &lt;code&gt;size&lt;/code&gt; option, which is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181e41d22383a9264dd22613ca4366d2fa746a3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;conditions&lt;/code&gt; are cast to their respective SchemaTypes before the command is sent.</source>
          <target state="translated">&lt;code&gt;conditions&lt;/code&gt; 명령이 전송되기 전에 각각의 SchemaTypes으로 캐스팅된다.</target>
        </trans-unit>
        <trans-unit id="27ab27ccdd0e30e4a1b770b3908d4f7fdaa87933" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;connect()&lt;/code&gt; function also accepts a callback parameter and returns a &lt;a href=&quot;promises&quot;&gt;promise&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;connect()&lt;/code&gt; 함수는 콜백 매개 변수를 허용하고 반환 &lt;a href=&quot;promises&quot;&gt;약속을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb4b749dbe557ef57b9fe9fa5418ef436d9a2fff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;connect&lt;/code&gt; method also accepts an &lt;code&gt;options&lt;/code&gt; object which will be passed on to the underlying MongoDB driver.</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; 방법은 또한 허용 &lt;code&gt;options&lt;/code&gt; 기본 MongoDB를 드라이버에 전달 될 객체.</target>
        </trans-unit>
        <trans-unit id="a8f8d4db3e1061a9828bccd318ebc55adad43729" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="f28919cdaa7b537dfa9725a7a7004ba95b0a9081" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;context&lt;/code&gt; option lets you set the value of &lt;code&gt;this&lt;/code&gt; in update validators to the underlying query.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 옵션을 사용하면 값 설정할 수 있습니다 &lt;code&gt;this&lt;/code&gt; 기본 쿼리에 업데이트 검사기에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c505e24ce7a22763c3514772511d798fb73822e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;countDocuments()&lt;/code&gt; function is similar to &lt;code&gt;count()&lt;/code&gt;, but there are a &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#countDocuments&quot;&gt;few operators that &lt;code&gt;countDocuments()&lt;/code&gt; does not support&lt;/a&gt;. Below are the operators that &lt;code&gt;count()&lt;/code&gt; supports but &lt;code&gt;countDocuments()&lt;/code&gt; does not, and the suggested replacement:</source>
          <target state="translated">&lt;code&gt;countDocuments()&lt;/code&gt; 기능이 유사하다는합니다 &lt;code&gt;count()&lt;/code&gt; 하지만, 거기에 &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#countDocuments&quot;&gt;있음을 몇 운영자 &lt;code&gt;countDocuments()&lt;/code&gt; 지원하지 않습니다는&lt;/a&gt; . 다음은 &lt;code&gt;count()&lt;/code&gt; 지원하지만 &lt;code&gt;countDocuments()&lt;/code&gt; 가 지원 하지 않는 연산자 와 제안 된 대체 연산자입니다 .</target>
        </trans-unit>
        <trans-unit id="ad5d615a32bbb718c0b80c9a63b5b09608843e36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errorMsg&lt;/code&gt; argument will become the message of the &lt;code&gt;ValidationError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;errorMsg&lt;/code&gt; 인수는의 메시지가 될 것이다 &lt;code&gt;ValidationError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de2524701ad2693ee0801033ae0ea8883437c7a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; are cast to their respective SchemaTypes before the command is sent. See our &lt;a href=&quot;../tutorials/query_casting&quot;&gt;query casting tutorial&lt;/a&gt; for more information on how Mongoose casts &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 명령이 전송되기 전에 각각의 SchemaTypes으로 캐스팅된다. 우리의 참조 &lt;a href=&quot;../tutorials/query_casting&quot;&gt;쿼리 주조 자습서를&lt;/a&gt; 몽구스 캐스트 방법에 대한 자세한 내용은 &lt;code&gt;filter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26735e30728655a91f546bc1fe742e3aefc9c2fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; is cast based on the Schema before sending the command.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 명령을 전송하기 전에 스키마를 기반으로 주조된다.</target>
        </trans-unit>
        <trans-unit id="6229d648e2d051646896749e5072915c795d2eb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;localField&lt;/code&gt; and &lt;code&gt;foreignField&lt;/code&gt; options. Mongoose will populate documents from the model in &lt;code&gt;ref&lt;/code&gt; whose &lt;code&gt;foreignField&lt;/code&gt; matches this document's &lt;code&gt;localField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;localField&lt;/code&gt; 및 &lt;code&gt;foreignField&lt;/code&gt; 옵션을 제공합니다. Mongoose는 모델의 문서를 &lt;code&gt;foreignField&lt;/code&gt; 가이 문서의 &lt;code&gt;localField&lt;/code&gt; 와 일치 하는 &lt;code&gt;ref&lt;/code&gt; 로 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="23cd9c9ebb066abc7eb46c7585b6bac502062402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lowercase&lt;/code&gt; option only works for strings. There are certain options which apply for all schema types, and some that apply for specific schema types.</source>
          <target state="translated">&lt;code&gt;lowercase&lt;/code&gt; 옵션은 문자열을 사용할 수 있습니다. 모든 스키마 유형에 적용되는 특정 옵션과 특정 스키마 유형에 적용되는 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4145fbc9515e031335e07089dd05b5efcd654b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;model.discriminator()&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;model.discriminator()&lt;/code&gt; . distinguishor () 함수</target>
        </trans-unit>
        <trans-unit id="e33a73b595f2fc09b4c35391b031d3539ae8c426" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; argument must contain &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;coordinates&lt;/code&gt; properties. - type {String} - coordinates {Array}</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 인수가 있어야합니다 &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;coordinates&lt;/code&gt; 속성을. -유형 {String}-좌표 {Array}</target>
        </trans-unit>
        <trans-unit id="97d982a4137b34f5f3d0fa8e09e766b6b99a03a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter to &lt;code&gt;toObject()&lt;/code&gt; and &lt;code&gt;toJSON()&lt;/code&gt; merge defaults rather than overwriting them.</source>
          <target state="translated">&lt;code&gt;toObject()&lt;/code&gt; 및 &lt;code&gt;toJSON()&lt;/code&gt; 의 &lt;code&gt;options&lt;/code&gt; 매개 변수는 기본값을 겹쳐 쓰지 않고 병합합니다.</target>
        </trans-unit>
        <trans-unit id="ad0beaa15a20759f5bcb08fd3b6f89257d49d6ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; passed in to the &lt;code&gt;QueryCursor&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 에 전달 &lt;code&gt;QueryCursor&lt;/code&gt; 의 생성자입니다.</target>
        </trans-unit>
        <trans-unit id="b2db084008e9516a796caa7abcea0a2d1872b17a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ref&lt;/code&gt; option, which tells Mongoose which model to populate documents from.</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; 에서 채우기 문서에 몽구스하는 모델을 말한다 옵션.</target>
        </trans-unit>
        <trans-unit id="78b8f9df41a109c0814d752eb54d7ee91da962f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refPath&lt;/code&gt; option is a more sophisticated alternative to &lt;code&gt;ref&lt;/code&gt;. If &lt;code&gt;ref&lt;/code&gt; is just a string, Mongoose will always query the same model to find the populated subdocs. With &lt;code&gt;refPath&lt;/code&gt;, you can configure what model Mongoose uses for each document.</source>
          <target state="translated">&lt;code&gt;refPath&lt;/code&gt; 의 옵션을 할 수있는보다 정교한 대안 &lt;code&gt;ref&lt;/code&gt; . 경우 &lt;code&gt;ref&lt;/code&gt; 단지 문자열, 몽구스는 항상 인구 subdocs을 찾기 위해 같은 모델을 쿼리합니다. 로 &lt;code&gt;refPath&lt;/code&gt; , 당신은 모델 몽구스 각 문서에 사용하는 것을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b6b49fef7e8da5ecdd93a0de2fa68cdda241911" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retainKeyOrder&lt;/code&gt; option was removed, mongoose will now always retain the same key position when cloning objects. If you have queries or indexes that rely on reverse key order, you will have to change them.</source>
          <target state="translated">&lt;code&gt;retainKeyOrder&lt;/code&gt; 의 개체를 복제 할 때 옵션을 제거하고, 몽구스는 이제 항상 동일한 키의 위치를 유지합니다. 리버스 키 순서에 의존하는 쿼리 또는 인덱스가있는 경우이를 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="5bac83d306854f75530f371b9ea56a7b1b0e8d9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;save()&lt;/code&gt; function triggers &lt;code&gt;validate()&lt;/code&gt; hooks, because mongoose has a built-in &lt;code&gt;pre('save')&lt;/code&gt; hook that calls &lt;code&gt;validate()&lt;/code&gt;. This means that all &lt;code&gt;pre('validate')&lt;/code&gt; and &lt;code&gt;post('validate')&lt;/code&gt; hooks get called &lt;strong&gt;before&lt;/strong&gt; any &lt;code&gt;pre('save')&lt;/code&gt; hooks.</source>
          <target state="translated">&lt;code&gt;save()&lt;/code&gt; 함수를 트리거 &lt;code&gt;validate()&lt;/code&gt; 몽구스가 내장되어 있기 때문에, 후크 &lt;code&gt;pre('save')&lt;/code&gt; 통화가 훅 &lt;code&gt;validate()&lt;/code&gt; . 이 수단 모든 &lt;code&gt;pre('validate')&lt;/code&gt; 과 &lt;code&gt;post('validate')&lt;/code&gt; 후크 호출되는 &lt;strong&gt;전에&lt;/strong&gt; 어떤 &lt;code&gt;pre('save')&lt;/code&gt; 후크.</target>
        </trans-unit>
        <trans-unit id="3faaf8af9aea9c1682bfddcd6bb0c2f97ade9326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;saveErrorIfNotFound&lt;/code&gt; option was removed, mongoose will now always error out from &lt;code&gt;save()&lt;/code&gt; if the underlying document was not found</source>
          <target state="translated">&lt;code&gt;saveErrorIfNotFound&lt;/code&gt; 의 옵션은 몽구스는 이제 항상으로부터 오류가 발생하지, 제거 &lt;code&gt;save()&lt;/code&gt; 기본 문서가 발견되지 않은 경우</target>
        </trans-unit>
        <trans-unit id="cdcad6c763da283eead9b253fc4ce5f4f2294683" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schema.path()&lt;/code&gt; Function</source>
          <target state="translated">&lt;code&gt;schema.path()&lt;/code&gt; 함수</target>
        </trans-unit>
        <trans-unit id="cbcf2b2bde399e251aae1b778ead6f1525c80156" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schema.path()&lt;/code&gt; function returns the instantiated schema type for a given path.</source>
          <target state="translated">&lt;code&gt;schema.path()&lt;/code&gt; 함수는 주어진 경로에 대한 인스턴스화 된 스키마 유형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="48a653771415c34ad9c79d7d3505c5f9cd0af2a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setDefaultsOnInsert&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;setDefaultsOnInsert&lt;/code&gt; 의 옵션</target>
        </trans-unit>
        <trans-unit id="8aec76678201bca71a346432db385f109c1c16d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setDefaultsOnInsert&lt;/code&gt; option relies on the &lt;a href=&quot;https://docs.mongodb.org/manual/reference/operator/update/setOnInsert/&quot;&gt;MongoDB &lt;code&gt;$setOnInsert&lt;/code&gt; operator&lt;/a&gt;. The &lt;code&gt;$setOnInsert&lt;/code&gt; operator was introduced in MongoDB 2.4. If you're using MongoDB server &amp;lt; 2.4.0, do &lt;strong&gt;not&lt;/strong&gt; use &lt;code&gt;setDefaultsOnInsert&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setDefaultsOnInsert&lt;/code&gt; 의 옵션에 의존 &lt;a href=&quot;https://docs.mongodb.org/manual/reference/operator/update/setOnInsert/&quot;&gt;MongoDB를 &lt;code&gt;$setOnInsert&lt;/code&gt; 운영자&lt;/a&gt; . &lt;code&gt;$setOnInsert&lt;/code&gt; 연산자는 MongoDB를 2.4에서 소개되었습니다. MongoDB 서버 &amp;lt;2.4.0을 사용하는 경우 &lt;code&gt;setDefaultsOnInsert&lt;/code&gt; 를 사용 하지 &lt;strong&gt;마십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8876420175f1b8de44da07329664cc335d729f60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shardKey&lt;/code&gt; option is used when we have a &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Sharding+Introduction&quot;&gt;sharded MongoDB architecture&lt;/a&gt;. Each sharded collection is given a shard key which must be present in all insert/update operations. We just need to set this schema option to the same shard key and we&amp;rsquo;ll be all set.</source>
          <target state="translated">&lt;code&gt;shardKey&lt;/code&gt; 의 우리가있을 때 옵션이 사용됩니다 &lt;a href=&quot;http://www.mongodb.org/display/DOCS/Sharding+Introduction&quot;&gt;분산됩니다 MongoDB의 아키텍처를&lt;/a&gt; . 각 샤드 모음에는 모든 삽입 / 업데이트 작업에 반드시 있어야하는 샤드 키가 제공됩니다. 이 스키마 옵션을 동일한 샤드 키로 설정하면 모든 설정이 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="9ada6f37bcb0c3e5c5853ae44bd35d0fae875a7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shardKey&lt;/code&gt; option is used when we have a &lt;a href=&quot;https://www.mongodb.org/display/DOCS/Sharding+Introduction&quot;&gt;sharded MongoDB architecture&lt;/a&gt;. Each sharded collection is given a shard key which must be present in all insert/update operations. We just need to set this schema option to the same shard key and we&amp;rsquo;ll be all set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d628bb082479d46b6c438a5702106c04596010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strict&lt;/code&gt; option does apply to updates.</source>
          <target state="translated">&lt;code&gt;strict&lt;/code&gt; 옵션은 업데이트를 적용 않습니다.</target>
        </trans-unit>
        <trans-unit id="3f140686906c42ee63d2587021c0500806ffb6c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strict&lt;/code&gt; option may also be set to &lt;code&gt;&quot;throw&quot;&lt;/code&gt; which will cause errors to be produced instead of dropping the bad data.</source>
          <target state="translated">&lt;code&gt;strict&lt;/code&gt; 옵션은 설정 될 수있다 &lt;code&gt;&quot;throw&quot;&lt;/code&gt; 오류 대신 잘못된 데이터를 삭제의 생산되게합니다.</target>
        </trans-unit>
        <trans-unit id="0b613e1121235052f44967c79c2129816f740bd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strictQuery&lt;/code&gt; Option</source>
          <target state="translated">&lt;code&gt;strictQuery&lt;/code&gt; 의 옵션</target>
        </trans-unit>
        <trans-unit id="6a7b56f0cd4465dedaf06ac93702c83784dd5bae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; Key</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 키</target>
        </trans-unit>
        <trans-unit id="0073e645b1741b0b654d0bbfd44accede43838fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; Option is Not a Validator</source>
          <target state="translated">&lt;code&gt;unique&lt;/code&gt; 옵션은 검사기이 아님</target>
        </trans-unit>
        <trans-unit id="e7221c601ef8a6a44862b42894d2f9a25a1e426f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useMongooseAggCursor&lt;/code&gt; option from 4.x is now always on. This is the new syntax for aggregation cursors in mongoose 5:</source>
          <target state="translated">4.x 의 &lt;code&gt;useMongooseAggCursor&lt;/code&gt; 옵션이 항상 켜져 있습니다. 다음은 mongoose 5의 집계 커서에 대한 새로운 구문입니다.</target>
        </trans-unit>
        <trans-unit id="597b7efb10a0c7d8b2c23f42d06e2c06583bc2e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useNewUrlParser&lt;/code&gt; Option</source>
          <target state="translated">&lt;code&gt;useNewUrlParser&lt;/code&gt; 의 옵션</target>
        </trans-unit>
        <trans-unit id="6e2ebd8b269ab7509a660ba66bd091146bcbc186" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useUnifiedTopology&lt;/code&gt; option removes support for several &lt;a href=&quot;connections#options&quot;&gt;connection options&lt;/a&gt; that are no longer relevant with the new topology engine:</source>
          <target state="translated">&lt;code&gt;useUnifiedTopology&lt;/code&gt; 의 옵션을 제거합니다 몇 가지에 대한 지원을 &lt;a href=&quot;connections#options&quot;&gt;연결 옵션을&lt;/a&gt; 더 이상 새로운 토폴로지 엔진과 관련된 :</target>
        </trans-unit>
        <trans-unit id="e61249646720f4785173e6eb8ddfacfbd119b795" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; argument (if passed) will be available through the &lt;code&gt;ValidationError.value&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 인수 (전달 된 경우)을 통해 사용할 수 &lt;code&gt;ValidationError.value&lt;/code&gt; 의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="46aa34cccc0ecc2d8a41e96db97bbaf32dd49407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;versionKey&lt;/code&gt; is a property set on each document when first created by Mongoose. This keys value contains the internal &lt;a href=&quot;http://aaronheckmann.tumblr.com/post/48943525537/mongoose-v3-part-1-versioning&quot;&gt;revision&lt;/a&gt; of the document. The &lt;code&gt;versionKey&lt;/code&gt; option is a string that represents the path to use for versioning. The default is &lt;code&gt;__v&lt;/code&gt;. If this conflicts with your application you can configure as such:</source>
          <target state="translated">&lt;code&gt;versionKey&lt;/code&gt; 는 제 몽구스 의해 생성 된 각각의 문서에 대한 속성을 설정한다. 이 키 값에는 문서 의 내부 &lt;a href=&quot;http://aaronheckmann.tumblr.com/post/48943525537/mongoose-v3-part-1-versioning&quot;&gt;개정&lt;/a&gt; 이 포함 됩니다. &lt;code&gt;versionKey&lt;/code&gt; 의 옵션은 버전에 사용할 경로를 나타내는 문자열입니다. 기본값은 &lt;code&gt;__v&lt;/code&gt; 입니다. 이것이 애플리케이션과 충돌하는 경우 다음과 같이 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e0157809afad8d998cf060417cf918a03caad96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withTransaction()&lt;/code&gt; Helper</source>
          <target state="translated">&lt;code&gt;withTransaction()&lt;/code&gt; 도우미</target>
        </trans-unit>
        <trans-unit id="c0d670c60333947fdbbb4243b5b1e5720e7b0adb" translate="yes" xml:space="preserve">
          <source>The ChangeStream object is an event emitter that emits the following events</source>
          <target state="translated">ChangeStream 객체는 다음 이벤트를 발생시키는 이벤트 이미 터입니다.</target>
        </trans-unit>
        <trans-unit id="b8754e719fb924eb03935341fe2023bfc8be1b46" translate="yes" xml:space="preserve">
          <source>The MongoDB Node.js driver rewrote the tool it uses to parse &lt;a href=&quot;https://docs.mongodb.com/manual/reference/connection-string/&quot;&gt;MongoDB connection strings&lt;/a&gt;. Because this is such a big change, they put the new connection string parser behind a flag. To turn on this option, pass the &lt;code&gt;useNewUrlParser&lt;/code&gt; option to &lt;a href=&quot;https://mongoosejs.com/docs/api.html#mongoose_Mongoose-connect&quot;&gt;&lt;code&gt;mongoose.connect()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://mongoosejs.com/docs/api.html#mongoose_Mongoose-createConnection&quot;&gt;&lt;code&gt;mongoose.createConnection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MongoDB Node.js 드라이버는 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/connection-string/&quot;&gt;MongoDB 연결 문자열&lt;/a&gt; 을 구문 분석하는 데 사용하는 도구를 다시 작성했습니다 . 이것은 큰 변화이기 때문에 새로운 연결 문자열 파서를 플래그 뒤에 넣습니다. 이 옵션을 켜려면 &lt;code&gt;useNewUrlParser&lt;/code&gt; 옵션을 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#mongoose_Mongoose-connect&quot;&gt; &lt;code&gt;mongoose.connect()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#mongoose_Mongoose-createConnection&quot;&gt; &lt;code&gt;mongoose.createConnection()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa0ac32cb769c45c3f6f1fb5a22f4200e178d543" translate="yes" xml:space="preserve">
          <source>The MongoDB docs have a full list of &lt;a href=&quot;https://docs.mongodb.com/manual/reference/connection-string/&quot;&gt;supported connection string options&lt;/a&gt;</source>
          <target state="translated">MongoDB 문서에는 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/connection-string/&quot;&gt;지원되는 연결 문자열 옵션&lt;/a&gt; 의 전체 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="720bb31dcc45bbd8e4bbc2f6e692ab373bb2a68d" translate="yes" xml:space="preserve">
          <source>The MongoDB driver's &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt; function&lt;/a&gt; is deprecated in favor of &lt;code&gt;deleteOne()&lt;/code&gt; and &lt;code&gt;deleteMany()&lt;/code&gt;. This is to comply with the &lt;a href=&quot;https://github.com/mongodb/specifications/blob/master/source/crud/crud.rst&quot;&gt;MongoDB CRUD specification&lt;/a&gt;, which aims to provide a consistent API for CRUD operations across all MongoDB drivers.</source>
          <target state="translated">MongoDB 드라이버의 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; 함수&lt;/a&gt; 는 &lt;code&gt;deleteOne()&lt;/code&gt; 및 &lt;code&gt;deleteMany()&lt;/code&gt; 대신 사용되지 않습니다 . 이것은 모든 MongoDB 드라이버에서 CRUD 작업을위한 일관된 API를 제공하는 것을 목표로 하는 &lt;a href=&quot;https://github.com/mongodb/specifications/blob/master/source/crud/crud.rst&quot;&gt;MongoDB CRUD 사양&lt;/a&gt; 을 준수 하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="87c7df57a26531ada54e1a05c8b7556647258ad0" translate="yes" xml:space="preserve">
          <source>The MongoDB driver's &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt; function&lt;/a&gt; is deprecated in favor of &lt;code&gt;deleteOne()&lt;/code&gt; and &lt;code&gt;deleteMany()&lt;/code&gt;. This is to comply with the &lt;a href=&quot;https://github.com/mongodb/specifications/blob/master/source/crud/crud.rst&quot;&gt;MongoDB CRUD specification&lt;/a&gt;, which aims to provide a consistent API for CRUD operations across all MongoDB drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de9dae52af28930827ea043104a411039c34059" translate="yes" xml:space="preserve">
          <source>The MongoDB server has deprecated the &lt;code&gt;count()&lt;/code&gt; function in favor of two separate functions, &lt;a href=&quot;#query_Query-countDocuments&quot;&gt;&lt;code&gt;countDocuments()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#query_Query-estimatedDocumentCount&quot;&gt;&lt;code&gt;estimatedDocumentCount()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MongoDB의 서버가 사용되지 않았습니다 &lt;code&gt;count()&lt;/code&gt; 두 개의 별개의 기능에 유리한 기능 &lt;a href=&quot;#query_Query-countDocuments&quot;&gt; &lt;code&gt;countDocuments()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#query_Query-estimatedDocumentCount&quot;&gt; &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97cf6b439cdcda57eedcb307b020e10091b63113" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#connection_Connection&quot;&gt;Connection&lt;/a&gt; constructor</source>
          <target state="translated">몽구스 &lt;a href=&quot;#connection_Connection&quot;&gt;연결&lt;/a&gt; 생성자</target>
        </trans-unit>
        <trans-unit id="9bfcf591eb6330d7d0953b00b581672e53136fa1" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#document-js&quot;&gt;Document&lt;/a&gt; constructor.</source>
          <target state="translated">몽구스 &lt;a href=&quot;#document-js&quot;&gt;문서&lt;/a&gt; 생성자.</target>
        </trans-unit>
        <trans-unit id="69dcb26250c5a072cf24fbba8afe963494efc13a" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#model_Model&quot;&gt;Model&lt;/a&gt; constructor.</source>
          <target state="translated">몽구스 &lt;a href=&quot;#model_Model&quot;&gt;모델&lt;/a&gt; 생성자.</target>
        </trans-unit>
        <trans-unit id="28594d5965e73ed545e784e4c4968c0e7db17971" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#promise_Promise&quot;&gt;Promise&lt;/a&gt; constructor.</source>
          <target state="translated">몽구스 &lt;a href=&quot;#promise_Promise&quot;&gt;약속&lt;/a&gt; 생성자.</target>
        </trans-unit>
        <trans-unit id="25645ef36abf330b3e4e521d871abc3d4ac3e906" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#query_Query&quot;&gt;Query&lt;/a&gt; constructor.</source>
          <target state="translated">몽구스 &lt;a href=&quot;#query_Query&quot;&gt;쿼리&lt;/a&gt; 생성자</target>
        </trans-unit>
        <trans-unit id="11c887870f9be6e98e4a4d3c8f0f1a87da2d0654" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#schema_Schema&quot;&gt;Schema&lt;/a&gt; constructor</source>
          <target state="translated">몽구스 &lt;a href=&quot;#schema_Schema&quot;&gt;스키마&lt;/a&gt; 생성자</target>
        </trans-unit>
        <trans-unit id="48ef895f4284fa674e1acc08e23308bf122c3ada" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#schematype_SchemaType&quot;&gt;SchemaType&lt;/a&gt; constructor</source>
          <target state="translated">몽구스 &lt;a href=&quot;#schematype_SchemaType&quot;&gt;스키마 타입&lt;/a&gt; 생성자</target>
        </trans-unit>
        <trans-unit id="860c2fd04205c922f55bd08fd4fb387afc10baaa" translate="yes" xml:space="preserve">
          <source>The Mongoose &lt;a href=&quot;#virtualtype_VirtualType&quot;&gt;VirtualType&lt;/a&gt; constructor</source>
          <target state="translated">몽구스 &lt;a href=&quot;#virtualtype_VirtualType&quot;&gt;VirtualType&lt;/a&gt; 생성자</target>
        </trans-unit>
        <trans-unit id="be0231e142edb149e492688f6eead8f9ff32b4a3" translate="yes" xml:space="preserve">
          <source>The Mongoose Aggregate constructor</source>
          <target state="translated">몽구스 어 그리 게이트 생성자</target>
        </trans-unit>
        <trans-unit id="c41f54945a1479fc6e5bade01fa6a00933e2d074" translate="yes" xml:space="preserve">
          <source>The Mongoose CastError constructor</source>
          <target state="translated">몽구스 CastError 생성자</target>
        </trans-unit>
        <trans-unit id="c73ed00fd9c9b864b109d4125d822c75d3adc040" translate="yes" xml:space="preserve">
          <source>The Mongoose Collection constructor</source>
          <target state="translated">몽구스 컬렉션 생성자</target>
        </trans-unit>
        <trans-unit id="a3b207722419d928bc7b7ce4e1782184dd68e9d4" translate="yes" xml:space="preserve">
          <source>The Mongoose Decimal128 &lt;a href=&quot;../schematypes&quot;&gt;SchemaType&lt;/a&gt;. Used for declaring paths in your schema that should be &lt;a href=&quot;http://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-decimal.html&quot;&gt;128-bit decimal floating points&lt;/a&gt;. Do not use this to create a new Decimal128 instance, use &lt;code&gt;mongoose.Types.Decimal128&lt;/code&gt; instead.</source>
          <target state="translated">몽구스 Decimal128 &lt;a href=&quot;../schematypes&quot;&gt;스키마 타입&lt;/a&gt; . 스키마에서 &lt;a href=&quot;http://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-decimal.html&quot;&gt;128 비트 10 진수 부동 소수점&lt;/a&gt; 이어야하는 경로를 선언하는 데 사용됩니다 . 이것을 사용하여 새 Decimal128 인스턴스를 만들지 말고 대신 &lt;code&gt;mongoose.Types.Decimal128&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="03c3b50c882ed794a6acf8b133f3d350416ad1f9" translate="yes" xml:space="preserve">
          <source>The Mongoose DocumentProvider constructor. Mongoose users should not have to use this directly</source>
          <target state="translated">몽구스 DocumentProvider 생성자. 몽구스 사용자는 이것을 직접 사용할 필요가 없습니다</target>
        </trans-unit>
        <trans-unit id="3fa12cad925d0c8cbe396f138b52410b733e5a01" translate="yes" xml:space="preserve">
          <source>The Mongoose Mixed &lt;a href=&quot;../schematypes&quot;&gt;SchemaType&lt;/a&gt;. Used for declaring paths in your schema that Mongoose's change tracking, casting, and validation should ignore.</source>
          <target state="translated">몽구스 혼합 &lt;a href=&quot;../schematypes&quot;&gt;SchemaType&lt;/a&gt; . Mongoose의 변경 내용 추적, 캐스팅 및 유효성 검사에서 무시해야 할 경로를 스키마에 선언하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bbb450189ab54653d3b9eda12aceb550fce93018" translate="yes" xml:space="preserve">
          <source>The Mongoose Number &lt;a href=&quot;../schematypes&quot;&gt;SchemaType&lt;/a&gt;. Used for declaring paths in your schema that Mongoose should cast to numbers.</source>
          <target state="translated">몽구스 수 &lt;a href=&quot;../schematypes&quot;&gt;SchemaType&lt;/a&gt; . 몽구스가 숫자로 캐스트 해야하는 스키마의 경로를 선언하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b8124b27af9f7a96bcbc73113092473f4fb05a65" translate="yes" xml:space="preserve">
          <source>The Mongoose ObjectId &lt;a href=&quot;../schematypes&quot;&gt;SchemaType&lt;/a&gt;. Used for declaring paths in your schema that should be &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/ObjectId/&quot;&gt;MongoDB ObjectIds&lt;/a&gt;. Do not use this to create a new ObjectId instance, use &lt;code&gt;mongoose.Types.ObjectId&lt;/code&gt; instead.</source>
          <target state="translated">Mongoose ObjectId &lt;a href=&quot;../schematypes&quot;&gt;SchemaType&lt;/a&gt; 입니다. 스키마에서 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/ObjectId/&quot;&gt;MongoDB ObjectIds&lt;/a&gt; 이어야하는 경로를 선언하는 데 사용됩니다 . 이것을 사용하여 새 ObjectId 인스턴스를 작성하지 말고 대신 &lt;code&gt;mongoose.Types.ObjectId&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b09314d939f0fba8ae75c303c3db3b513c0c719e" translate="yes" xml:space="preserve">
          <source>The Mongoose constructor</source>
          <target state="translated">몽구스 생성자</target>
        </trans-unit>
        <trans-unit id="5ad93459ab98768c8c558454b1b751ef4bce80cd" translate="yes" xml:space="preserve">
          <source>The Mongoose module's default connection. Equivalent to &lt;code&gt;mongoose.connections[0]&lt;/code&gt;, see &lt;a href=&quot;#mongoose_Mongoose-connections&quot;&gt;&lt;code&gt;connections&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">몽구스 모듈의 기본 연결입니다. &lt;code&gt;mongoose.connections[0]&lt;/code&gt; 과 동일합니다 ( &lt;a href=&quot;#mongoose_Mongoose-connections&quot;&gt; &lt;code&gt;connections&lt;/code&gt; &lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="bd6b01646ccb89f7b75c875f94e42e6962cd8af9" translate="yes" xml:space="preserve">
          <source>The Mongoose team maintains several plugins that add cool new features to Mongoose. Here's a couple:</source>
          <target state="translated">몽구스 팀은 몽구스에 멋진 새 기능을 추가하는 여러 플러그인을 유지 관리합니다. 몇 가지 있습니다 :</target>
        </trans-unit>
        <trans-unit id="9ca487d3e31fda13902a4cc9aafe7eae0b6e01df" translate="yes" xml:space="preserve">
          <source>The Mongoose version</source>
          <target state="translated">몽구스 버전</target>
        </trans-unit>
        <trans-unit id="521796996be8c1abac78e700da8e9cd3e3e5055e" translate="yes" xml:space="preserve">
          <source>The `$pushAll` Operator</source>
          <target state="translated">`$ pushAll` 연산자</target>
        </trans-unit>
        <trans-unit id="3b210db4e9a71616fa1fd53022087f17cc8b7b7d" translate="yes" xml:space="preserve">
          <source>The `schema.path()` Function</source>
          <target state="translated">`schema.path ()`함수</target>
        </trans-unit>
        <trans-unit id="2e89bfbc38cbd2324686869c79573a3ecdbdc729" translate="yes" xml:space="preserve">
          <source>The `type` Key</source>
          <target state="translated">`유형`키</target>
        </trans-unit>
        <trans-unit id="27377772e22c68d29e5add5b1612b24d2367cb44" translate="yes" xml:space="preserve">
          <source>The above code does &lt;strong&gt;not&lt;/strong&gt; work in 5.x, you &lt;strong&gt;must&lt;/strong&gt; wrap the &lt;code&gt;$match&lt;/code&gt; and &lt;code&gt;$skip&lt;/code&gt; stages in an array.</source>
          <target state="translated">위의 코드는 5.x에서 작동 하지 &lt;strong&gt;않으므로 &lt;/strong&gt; &lt;code&gt;$match&lt;/code&gt; 및 &lt;code&gt;$skip&lt;/code&gt; 스테이지를 배열로 랩핑 &lt;strong&gt;해야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="45c50fd485a9ff9f0910c42b37e7379403b3af3a" translate="yes" xml:space="preserve">
          <source>The above example doesn't explicitly declare &lt;code&gt;github&lt;/code&gt; or &lt;code&gt;twitter&lt;/code&gt; as paths, but, since &lt;code&gt;socialMediaHandles&lt;/code&gt; is a map, you can store arbitrary key/value pairs. However, since &lt;code&gt;socialMediaHandles&lt;/code&gt; is a map, you &lt;strong&gt;must&lt;/strong&gt; use &lt;code&gt;.get()&lt;/code&gt; to get the value of a key and &lt;code&gt;.set()&lt;/code&gt; to set the value of a key.</source>
          <target state="translated">위 예제는 &lt;code&gt;github&lt;/code&gt; 또는 &lt;code&gt;twitter&lt;/code&gt; 를 명시 적 으로 경로로 선언하지 않지만 &lt;code&gt;socialMediaHandles&lt;/code&gt; 는 맵이므로 임의의 키 / 값 쌍을 저장할 수 있습니다. 때문에, &lt;code&gt;socialMediaHandles&lt;/code&gt; 이 지도는, 당신은 &lt;strong&gt;해야한다&lt;/strong&gt; 사용 &lt;code&gt;.get()&lt;/code&gt; 키와 값 얻기 위하여 &lt;code&gt;.set()&lt;/code&gt; 키의 값을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="360baaba362e16370dd125dc874ecfcf76329ed6" translate="yes" xml:space="preserve">
          <source>The alias of each pref is also permitted so instead of having to type out 'secondaryPreferred' and getting the spelling wrong, we can simply pass 'sp'.</source>
          <target state="translated">각 pref의 별칭도 허용되므로 'secondaryPreferred'를 입력하고 철자를 잘못 입력하는 대신 'sp'를 전달하면됩니다.</target>
        </trans-unit>
        <trans-unit id="aa8007e368eac978e0e90cda4ded92aebeb14209" translate="yes" xml:space="preserve">
          <source>The allowed index types</source>
          <target state="translated">허용되는 색인 유형</target>
        </trans-unit>
        <trans-unit id="3b47468a46ee343186a82c5170fed665ad6edcf3" translate="yes" xml:space="preserve">
          <source>The argument is assigned to the most recent path passed to &lt;code&gt;where()&lt;/code&gt;.</source>
          <target state="translated">인수는 &lt;code&gt;where()&lt;/code&gt; 로 전달 된 가장 최근 경로에 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0029afbdad941df56c982190045be6def3faea6e" translate="yes" xml:space="preserve">
          <source>The callback is passed the pathname and the schemaType instance.</source>
          <target state="translated">콜백에는 경로 이름과 schemaType 인스턴스가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="68694ba06491ddc2d6637f9d2bb44f53651ea227" translate="yes" xml:space="preserve">
          <source>The callback will receive two parameters</source>
          <target state="translated">콜백에는 두 개의 매개 변수가 수신됩니다</target>
        </trans-unit>
        <trans-unit id="688b3b4a4aae4e7bb06708b2aad0c776883ac0f8" translate="yes" xml:space="preserve">
          <source>The constructor used for schematype options</source>
          <target state="translated">스키마 유형 옵션에 사용되는 생성자</target>
        </trans-unit>
        <trans-unit id="1b5d823fe490e53d71324a9c65d1c3d54c7f14ed" translate="yes" xml:space="preserve">
          <source>The default built-in validator error messages.</source>
          <target state="translated">기본 내장 유효성 검증기 오류 메시지.</target>
        </trans-unit>
        <trans-unit id="3ca469478a7cf92daee15c15d290344b85826330" translate="yes" xml:space="preserve">
          <source>The default value for this path. If a function, Mongoose executes the function and uses the return value as the default.</source>
          <target state="translated">이 경로의 기본값입니다. 함수 인 경우 Mongoose는 함수를 실행하고 반환 값을 기본값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="facfdf6d5718973cdc6b3d5630b009d759ba745e" translate="yes" xml:space="preserve">
          <source>The difference between the two is &lt;code&gt;countDocuments()&lt;/code&gt; can accept a filter parameter like &lt;a href=&quot;#query_Query-find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; function is faster, but can only tell you the total number of documents in a collection. You cannot pass a &lt;code&gt;filter&lt;/code&gt; to &lt;code&gt;estimatedDocumentCount()&lt;/code&gt;.</source>
          <target state="translated">이 둘의 차이점은 &lt;code&gt;countDocuments()&lt;/code&gt; 가 find () 와 같은 필터 매개 변수를 사용할 &lt;a href=&quot;#query_Query-find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; 입니다. &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; 함수는 빠르지 만 만 수집 당신에게 문서의 총 수를 알 수 있습니다. &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; 로 &lt;code&gt;filter&lt;/code&gt; 를 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="902f48c1aab060e8395f5deab7a7ecf313288fe9" translate="yes" xml:space="preserve">
          <source>The disadvantage of putting options in the query string is that query string options are harder to read. The advantage is that you only need a single configuration option, the URI, rather than separate options for &lt;code&gt;socketTimeoutMS&lt;/code&gt;, &lt;code&gt;connectTimeoutMS&lt;/code&gt;, etc. Best practice is to put options that likely differ between development and production, like &lt;code&gt;replicaSet&lt;/code&gt; or &lt;code&gt;ssl&lt;/code&gt;, in the connection string, and options that should remain constant, like &lt;code&gt;connectTimeoutMS&lt;/code&gt; or &lt;code&gt;poolSize&lt;/code&gt;, in the options object.</source>
          <target state="translated">쿼리 문자열에 옵션을 넣을 때의 단점은 쿼리 문자열 옵션을 읽기가 어렵다는 것입니다. 장점은 별도의 옵션이 아닌 단일 구성 옵션 인 URI 만 필요하다는 것입니다. &lt;code&gt;socketTimeoutMS&lt;/code&gt; , &lt;code&gt;connectTimeoutMS&lt;/code&gt; 등 . 모범 사례는 개발 및 프로덕션 (예 : &lt;code&gt;replicaSet&lt;/code&gt; 또는 &lt;code&gt;ssl&lt;/code&gt; 등)에 따라 다른 옵션을 연결 문자열에 배치하는 것입니다. 옵션 객체에서 &lt;code&gt;connectTimeoutMS&lt;/code&gt; 또는 &lt;code&gt;poolSize&lt;/code&gt; 와 같이 일정하게 유지되어야 하는 옵션.</target>
        </trans-unit>
        <trans-unit id="d97adad9a9095d61cfb54800b029c0b6d2951f1a" translate="yes" xml:space="preserve">
          <source>The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned).</source>
          <target state="translated">반환되는 문서는 몽구스 문서가 아닌 일반 자바 스크립트 객체입니다 (문서 형태가 반환 될 수 있으므로).</target>
        </trans-unit>
        <trans-unit id="66035ed300902a8c4652712cc264b9c13c028569" translate="yes" xml:space="preserve">
          <source>The documents returned from &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-populate&quot;&gt;query population&lt;/a&gt; become fully functional, &lt;code&gt;remove&lt;/code&gt;able, &lt;code&gt;save&lt;/code&gt;able documents unless the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;lean&lt;/a&gt; option is specified. Do not confuse them with &lt;a href=&quot;subdocs&quot;&gt;sub docs&lt;/a&gt;. Take caution when calling its remove method because you'll be removing it from the database, not just the array.</source>
          <target state="translated">에서 반환 된 문서 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-populate&quot;&gt; 쿼리 인구는&lt;/a&gt; , 완전한 기능을하게 &lt;code&gt;remove&lt;/code&gt; , 수 &lt;code&gt;save&lt;/code&gt; 를 제외 할 문서 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;린&lt;/a&gt; 옵션이 지정됩니다. &lt;a href=&quot;subdocs&quot;&gt;하위 문서&lt;/a&gt; 와 혼동하지 마십시오 . 배열뿐만 아니라 데이터베이스에서 제거 할 것이므로 remove 메서드를 호출 할 때주의하십시오.</target>
        </trans-unit>
        <trans-unit id="ae07d2ca61fd108aea888ed0156cbbb385a8d638" translate="yes" xml:space="preserve">
          <source>The documents schema.</source>
          <target state="translated">문서 스키마.</target>
        </trans-unit>
        <trans-unit id="7dfa9982b168a4f24647de31dcaba72d73f6c3d4" translate="yes" xml:space="preserve">
          <source>The downside of enabling &lt;code&gt;lean&lt;/code&gt; is that lean docs don't have:</source>
          <target state="translated">가능의 단점 &lt;code&gt;lean&lt;/code&gt; 린 워드 프로세서가 없다는 것입니다 :</target>
        </trans-unit>
        <trans-unit id="a98ebbd20caf342c636b2b78f8bc5d43eae6ef2a" translate="yes" xml:space="preserve">
          <source>The error message argument is optional. If not passed, the &lt;a href=&quot;#error_messages_MongooseError-messages&quot;&gt;default generic error message template&lt;/a&gt; will be used.</source>
          <target state="translated">오류 메시지 인수는 선택 사항입니다. 전달하지 않으면 &lt;a href=&quot;#error_messages_MongooseError-messages&quot;&gt;기본 일반 오류 메시지 템플릿&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ada6056e41b7a078c83a291015fe509f244b5df1" translate="yes" xml:space="preserve">
          <source>The example above uses the &lt;code&gt;Schema.methods&lt;/code&gt; object directly to save an instance method. You can also use the &lt;code&gt;Schema.method()&lt;/code&gt; helper as described &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schema_Schema-method&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">위의 예는 &lt;code&gt;Schema.methods&lt;/code&gt; 객체를 직접 사용하여 인스턴스 메소드를 저장합니다. &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schema_Schema-method&quot;&gt;여기에&lt;/a&gt; 설명 된대로 &lt;code&gt;Schema.method()&lt;/code&gt; 도우미를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94b114088126c9e3d7ed778de095e0bd9bf70c45" translate="yes" xml:space="preserve">
          <source>The exports object of the &lt;code&gt;mongoose&lt;/code&gt; module is an instance of this class. Most apps will only use this one instance.</source>
          <target state="translated">&lt;code&gt;mongoose&lt;/code&gt; 모듈 의 exports 객체 는이 클래스의 인스턴스입니다. 대부분의 앱은이 하나의 인스턴스 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c23f00089d4dccdbd380c168a3d7130adad37a68" translate="yes" xml:space="preserve">
          <source>The exports of the mongoose module is an instance of this class.</source>
          <target state="translated">몽구스 모듈 내보내기는이 클래스의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="127f62f61cd994c7b9e248af6d04d3b79d23c115" translate="yes" xml:space="preserve">
          <source>The first argument is the &lt;em&gt;singular&lt;/em&gt; name of the collection your model is for. ** Mongoose automatically looks for the plural, lowercased version of your model name. ** Thus, for the example above, the model Tank is for the &lt;strong&gt;tanks&lt;/strong&gt; collection in the database.</source>
          <target state="translated">첫 번째 주장은 &lt;em&gt;단수입니다&lt;/em&gt; 모델 이름입니다. ** 몽구스는 자동으로 모델 이름의 복수 소문자 버전을 찾습니다. ** 따라서 위의 예에서 &lt;strong&gt;탱크&lt;/strong&gt; 모델 은 데이터베이스 의 &lt;strong&gt;탱크&lt;/strong&gt; 수집을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="ee4c9346d4d5790a4650f2ee871a0183dfe59f1b" translate="yes" xml:space="preserve">
          <source>The first parameter to &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.find&quot;&gt;&lt;code&gt;Model.find()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-find&quot;&gt;&lt;code&gt;Query#find()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.findOne&quot;&gt;&lt;code&gt;Model.findOne()&lt;/code&gt;&lt;/a&gt;, etc. is called &lt;code&gt;filter&lt;/code&gt;. In older content this parameter is sometimes called &lt;code&gt;query&lt;/code&gt; or &lt;code&gt;conditions&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.find&quot;&gt; &lt;code&gt;Model.find()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-find&quot;&gt; &lt;code&gt;Query#find()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.findOne&quot;&gt; &lt;code&gt;Model.findOne()&lt;/code&gt; &lt;/a&gt; 등 의 첫 번째 매개 변수를 &lt;code&gt;filter&lt;/code&gt; 라고 합니다 . 이전 컨텐츠에서는이 매개 변수를 때때로 &lt;code&gt;query&lt;/code&gt; 라고 합니다. 또는 &lt;code&gt;conditions&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d00c640c142857a55fa5a1531467ac5d033fdb73" translate="yes" xml:space="preserve">
          <source>The first pull call will result in a atomic operation on the database, if pull is called repeatedly without saving the document, a $set operation is used on the complete array instead, overwriting possible changes that happened on the database in the meantime.</source>
          <target state="translated">첫 번째 끌어 오기 호출은 데이터베이스에서 원자 연산을 수행하며, 문서를 저장하지 않고 끌어 오기가 반복적으로 호출되면 $ set 연산이 전체 배열에서 대신 사용되며 그 동안 데이터베이스에서 발생한 가능한 변경 사항을 겹쳐 씁니다.</target>
        </trans-unit>
        <trans-unit id="5401c39b5bd5a66a079f8880008d62033725b4c3" translate="yes" xml:space="preserve">
          <source>The following are all the valid SchemaTypes in Mongoose. Mongoose plugins can also add custom SchemaTypes like &lt;a href=&quot;http://plugins.mongoosejs.io/plugins/int32&quot;&gt;int32&lt;/a&gt;. Check out &lt;a href=&quot;http://plugins.mongoosejs.io&quot;&gt;Mongoose's plugins search&lt;/a&gt; to find plugins.</source>
          <target state="translated">다음은 몽구스에 유효한 스키마 유형입니다. 몽구스 플러그인은 &lt;a href=&quot;http://plugins.mongoosejs.io/plugins/int32&quot;&gt;int32&lt;/a&gt; 와 같은 커스텀 스키마 타입을 추가 할 수도 있습니다 . 확인 &lt;a href=&quot;http://plugins.mongoosejs.io&quot;&gt;몽구스의 플러그인 검색&lt;/a&gt; 플러그인을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f88880b94d2defd8cee94454ad8709644900bd7a" translate="yes" xml:space="preserve">
          <source>The following options are for &lt;code&gt;findOneAndUpdate()&lt;/code&gt; and &lt;code&gt;findOneAndRemove()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;findOneAndUpdate()&lt;/code&gt; 및 &lt;code&gt;findOneAndRemove()&lt;/code&gt; 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e2990c38a6f9c5154f406402680655c4995b4db8" translate="yes" xml:space="preserve">
          <source>The following options are for all operations</source>
          <target state="translated">다음 옵션은 모든 작업을위한 것입니다</target>
        </trans-unit>
        <trans-unit id="a681479d8239731eb6093999c5b9b783d9e57db3" translate="yes" xml:space="preserve">
          <source>The following options are important for tuning Mongoose only if you are running &lt;strong&gt;without&lt;/strong&gt;&lt;a href=&quot;deprecations#useunifiedtopology&quot;&gt;the &lt;code&gt;useUnifiedTopology&lt;/code&gt; option&lt;/a&gt;:</source>
          <target state="translated">당신이 실행하는 경우에만 다음 옵션을 조정 몽구스 중요하다 &lt;strong&gt;없이 &lt;/strong&gt;&lt;a href=&quot;deprecations#useunifiedtopology&quot;&gt; &lt;code&gt;useUnifiedTopology&lt;/code&gt; 의&lt;/a&gt; 옵션 :</target>
        </trans-unit>
        <trans-unit id="a996cf485f54ccce54b6d85c0aea4c483bcc2eb8" translate="yes" xml:space="preserve">
          <source>The following options are only for &lt;code&gt;find()&lt;/code&gt;, &lt;code&gt;findOne()&lt;/code&gt;, &lt;code&gt;findById()&lt;/code&gt;, &lt;code&gt;findOneAndUpdate()&lt;/code&gt;, and &lt;code&gt;findByIdAndUpdate()&lt;/code&gt;:</source>
          <target state="translated">다음 옵션은 &lt;code&gt;find()&lt;/code&gt; , &lt;code&gt;findOne()&lt;/code&gt; , &lt;code&gt;findById()&lt;/code&gt; , &lt;code&gt;findOneAndUpdate()&lt;/code&gt; 및 &lt;code&gt;findByIdAndUpdate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="651f1fbf5cdd7dd19a248eea515b8dcdcfaeaf51" translate="yes" xml:space="preserve">
          <source>The following options are only for &lt;code&gt;find()&lt;/code&gt;:</source>
          <target state="translated">다음 옵션은 &lt;code&gt;find()&lt;/code&gt; 전용입니다 .</target>
        </trans-unit>
        <trans-unit id="ba0eff50a356bd93ec67f50a236df352caa9fa6d" translate="yes" xml:space="preserve">
          <source>The following options are only for all operations &lt;strong&gt;except&lt;/strong&gt;&lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;updateOne()&lt;/code&gt;, &lt;code&gt;updateMany()&lt;/code&gt;, &lt;code&gt;remove()&lt;/code&gt;, &lt;code&gt;deleteOne()&lt;/code&gt;, and &lt;code&gt;deleteMany()&lt;/code&gt;:</source>
          <target state="translated">다음 옵션은 &lt;code&gt;update()&lt;/code&gt; , &lt;code&gt;updateOne()&lt;/code&gt; , &lt;code&gt;updateMany()&lt;/code&gt; , &lt;code&gt;remove()&lt;/code&gt; , &lt;code&gt;deleteOne()&lt;/code&gt; 및 &lt;code&gt;deleteMany()&lt;/code&gt; &lt;strong&gt;제외한&lt;/strong&gt; 모든 작업에만 해당됩니다. .</target>
        </trans-unit>
        <trans-unit id="f1215b50e59f1131a19f1c5cd3b815db04470780" translate="yes" xml:space="preserve">
          <source>The following options are only for write operations: &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;updateOne()&lt;/code&gt;, &lt;code&gt;updateMany()&lt;/code&gt;, &lt;code&gt;replaceOne()&lt;/code&gt;, &lt;code&gt;findOneAndUpdate()&lt;/code&gt;, and &lt;code&gt;findByIdAndUpdate()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;update()&lt;/code&gt; , &lt;code&gt;updateOne()&lt;/code&gt; , &lt;code&gt;updateMany()&lt;/code&gt; , &lt;code&gt;replaceOne()&lt;/code&gt; , &lt;code&gt;findOneAndUpdate()&lt;/code&gt; 및 &lt;code&gt;findByIdAndUpdate()&lt;/code&gt; 옵션은 쓰기 작업에만 사용 됩니다. .</target>
        </trans-unit>
        <trans-unit id="9efb9fa31a8e1b00bb55433842f53ba0a23414ec" translate="yes" xml:space="preserve">
          <source>The function above is safe to use whether the existing string is already encoded or not.</source>
          <target state="translated">위의 함수는 기존 문자열이 이미 인코딩되어 있는지 여부에 상관없이 사용하기에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="4e96242523e086ea0bab03cd5535994b161f8012" translate="yes" xml:space="preserve">
          <source>The host name portion of the URI. If multiple hosts, such as a replica set, this will contain the first host name in the URI</source>
          <target state="translated">URI의 호스트 이름 부분. 복제 세트와 같은 여러 호스트가 URI의 첫 번째 호스트 이름을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="0751f1bebd1f02b5902051010508fd76416a4640" translate="yes" xml:space="preserve">
          <source>The model that &lt;code&gt;populate()&lt;/code&gt; should use if populating this path.</source>
          <target state="translated">&lt;code&gt;populate()&lt;/code&gt; 모델 ()이 경로 이 사용해야 .</target>
        </trans-unit>
        <trans-unit id="31ddcfd032cf9c9919fcbf00e0f57b079d18ad5b" translate="yes" xml:space="preserve">
          <source>The mongodb.Db instance, set when the connection is opened</source>
          <target state="translated">연결이 열릴 때 설정되는 mongodb.Db 인스턴스</target>
        </trans-unit>
        <trans-unit id="bdb8165b4fbea7e12cf8eda8f6b86365f129f781" translate="yes" xml:space="preserve">
          <source>The most important feature of transactions is the ability to roll back &lt;em&gt;all&lt;/em&gt; operations in the transaction using the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/Session.abortTransaction/&quot;&gt;&lt;code&gt;abortTransaction()&lt;/code&gt; function&lt;/a&gt;.</source>
          <target state="translated">트랜잭션의 가장 중요한 기능은 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/Session.abortTransaction/&quot;&gt; &lt;code&gt;abortTransaction()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 트랜잭션의 &lt;em&gt;모든&lt;/em&gt; 작업 을 롤백하는 기능 입니다.</target>
        </trans-unit>
        <trans-unit id="947c36d3863add1dfa4c7305f837bed1bcc16b09" translate="yes" xml:space="preserve">
          <source>The name of the database this connection points to.</source>
          <target state="translated">이 연결이 가리키는 데이터베이스의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d15ef6010dc7e54a4ccb760cc57494fd8e1b60c9" translate="yes" xml:space="preserve">
          <source>The name of the error. The name uniquely identifies this Mongoose error. The possible values are:</source>
          <target state="translated">오류의 이름입니다. 이름은이 몽구스 오류를 고유하게 식별합니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9300052a49dd5a3c2397132f962be7ca814acec9" translate="yes" xml:space="preserve">
          <source>The name of the model</source>
          <target state="translated">모델명</target>
        </trans-unit>
        <trans-unit id="1c78be9d97a30c776549365085f231d3a5281bd7" translate="yes" xml:space="preserve">
          <source>The operation is only executed when a callback is passed. To force execution without a callback, we must first call update() and then execute it by using the &lt;code&gt;exec()&lt;/code&gt; method.</source>
          <target state="translated">콜백이 전달 될 때만 작업이 실행됩니다. 콜백없이 강제 실행하려면 먼저 update ()를 호출 한 다음 &lt;code&gt;exec()&lt;/code&gt; 메소드를 사용하여 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="87cbf2fa313130c9e8de0d6297df3296f8ef2aad" translate="yes" xml:space="preserve">
          <source>The options defined on a schematype.</source>
          <target state="translated">스키마 유형에 정의 된 옵션.</target>
        </trans-unit>
        <trans-unit id="f92726739f742e69321ab332ebd33b3966a96800" translate="yes" xml:space="preserve">
          <source>The original object passed to the schema constructor</source>
          <target state="translated">스키마 생성자에 전달 된 원래 객체</target>
        </trans-unit>
        <trans-unit id="73d3e9ed738ad6769ee33dd73aac6bbcd06ab09c" translate="yes" xml:space="preserve">
          <source>The other key difference that update validators only run on the paths specified in the update. For instance, in the below example, because 'name' is not specified in the update operation, update validation will succeed.</source>
          <target state="translated">업데이트 유효성 검사기의 다른 주요 차이점은 업데이트에 지정된 경로에서만 실행됩니다. 예를 들어 아래 예에서 업데이트 작업에 'name'이 지정되어 있지 않으므로 업데이트 유효성 검사가 성공합니다.</target>
        </trans-unit>
        <trans-unit id="fba87bbaefd531a422147c9e43790301837d8e36" translate="yes" xml:space="preserve">
          <source>The other way is to use &lt;a href=&quot;api/model#model_Model.replaceOne&quot;&gt;&lt;code&gt;Model.replaceOne()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 방법은 &lt;a href=&quot;api/model#model_Model.replaceOne&quot;&gt; &lt;code&gt;Model.replaceOne()&lt;/code&gt; &lt;/a&gt; 을 사용하는 것입니다 입니다.</target>
        </trans-unit>
        <trans-unit id="ccb08c411af21b654a420360f5f7aaf14fd3e5e3" translate="yes" xml:space="preserve">
          <source>The output from the above &lt;a href=&quot;http://thecodebarbarian.com/80-20-guide-to-async-await-in-node.js.html&quot;&gt;async function&lt;/a&gt; will look like what you see below.</source>
          <target state="translated">위의 &lt;a href=&quot;http://thecodebarbarian.com/80-20-guide-to-async-await-in-node.js.html&quot;&gt;비동기 함수&lt;/a&gt; 의 출력 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="689f361594ed1d4c78e81735b62fbf93497a8d49" translate="yes" xml:space="preserve">
          <source>The password specified in the URI</source>
          <target state="translated">URI에 지정된 비밀번호</target>
        </trans-unit>
        <trans-unit id="4d10310ba20fd58327f20c484eeba4be3151d88e" translate="yes" xml:space="preserve">
          <source>The paths defined on this schema. The keys are the top-level paths in this schema, and the values are instances of the SchemaType class.</source>
          <target state="translated">이 스키마에 정의 된 경로 키는이 스키마의 최상위 경로이며 값은 SchemaType 클래스의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="a123c7194a45ce632febf82de85c7467c49934c7" translate="yes" xml:space="preserve">
          <source>The permitted SchemaTypes are:</source>
          <target state="translated">허용되는 SchemaType은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="62283553c59f71c78c4410e0ff64689952d2b548" translate="yes" xml:space="preserve">
          <source>The plugins that will be applied to all models created on this connection.</source>
          <target state="translated">이 연결에서 생성 된 모든 모델에 적용될 플러그인입니다.</target>
        </trans-unit>
        <trans-unit id="417b6627352823b18df3848759bac2edc1cbcb7a" translate="yes" xml:space="preserve">
          <source>The port portion of the URI. If multiple hosts, such as a replica set, this will contain the port from the first host name in the URI.</source>
          <target state="translated">URI의 포트 부분입니다. 복제 세트와 같은 여러 호스트가 URI에있는 첫 번째 호스트 이름의 포트를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="dbcb9d8855fb98e92d87bf4e6525ef92a360e8bd" translate="yes" xml:space="preserve">
          <source>The previous examples explicitly create a transaction and commits it. In practice, you'll want to use the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.2/api/ClientSession.html#withTransaction&quot;&gt;&lt;code&gt;session.withTransaction()&lt;/code&gt; helper&lt;/a&gt; instead. The &lt;code&gt;session.withTransaction()&lt;/code&gt; helper handles:</source>
          <target state="translated">이전 예제는 트랜잭션을 명시 적으로 작성하고 커미트합니다. 실제로 &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.2/api/ClientSession.html#withTransaction&quot;&gt; &lt;code&gt;session.withTransaction()&lt;/code&gt; 도우미를&lt;/a&gt; 대신 사용하고 싶을 것입니다. &lt;code&gt;session.withTransaction()&lt;/code&gt; 도우미 핸들 :</target>
        </trans-unit>
        <trans-unit id="c7bba3ff0fe8a2bfacf236b3d8184f2922ce23d7" translate="yes" xml:space="preserve">
          <source>The read option also allows us to specify &lt;em&gt;tag sets&lt;/em&gt;. These tell the &lt;a href=&quot;https://github.com/mongodb/node-mongodb-native/&quot;&gt;driver&lt;/a&gt; from which members of the replica-set it should attempt to read. Read more about tag sets &lt;a href=&quot;http://docs.mongodb.org/manual/applications/replication/#tag-sets&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">read 옵션을 사용하면 &lt;em&gt;태그 세트&lt;/em&gt; 를 지정할 수도 있습니다 . 이것들은 &lt;a href=&quot;https://github.com/mongodb/node-mongodb-native/&quot;&gt;드라이버&lt;/a&gt; 가 복제 세트의 어떤 멤버가 읽으려고하는지 알려줍니다 . 태그 세트에 대한 자세한 내용은 &lt;a href=&quot;http://docs.mongodb.org/manual/applications/replication/#tag-sets&quot;&gt;여기&lt;/a&gt; 및 &lt;a href=&quot;http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d75eb2d0c1a3bd94c924b254d40f25d6e9acee4c" translate="yes" xml:space="preserve">
          <source>The read option also allows us to specify &lt;em&gt;tag sets&lt;/em&gt;. These tell the &lt;a href=&quot;https://github.com/mongodb/node-mongodb-native/&quot;&gt;driver&lt;/a&gt; from which members of the replica-set it should attempt to read. Read more about tag sets &lt;a href=&quot;http://docs.mongodb.org/manual/applications/replication/#tag-sets&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ff7cfed58e272fad4a763aeb927e6105d435ab" translate="yes" xml:space="preserve">
          <source>The required validator uses the SchemaType's &lt;code&gt;checkRequired&lt;/code&gt; function to determine whether a given value satisfies the required validator. By default, a value satisfies the required validator if &lt;code&gt;val != null&lt;/code&gt; (that is, if the value is not null nor undefined). However, most built-in mongoose schema types override the default &lt;code&gt;checkRequired&lt;/code&gt; function:</source>
          <target state="translated">필수 유효성 검증기는 SchemaType의 &lt;code&gt;checkRequired&lt;/code&gt; 함수를 사용하여 지정된 값이 필수 유효성 검증기를 만족하는지 여부를 판별합니다. 기본적으로 값은 &lt;code&gt;val != null&lt;/code&gt; 인 경우 (즉, 값이 null이 아니거나 정의되지 않은 경우) 필수 유효성 검사기를 충족시킵니다 . 그러나 대부분의 내장 mongoose 스키마 유형은 기본 &lt;code&gt;checkRequired&lt;/code&gt; 함수를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="14c454dab0e9a6cc8d02aa45b4eb7996bb87c0ac" translate="yes" xml:space="preserve">
          <source>The return value of this method is used in calls to JSON.stringify(doc).</source>
          <target state="translated">이 메소드의 리턴 값은 JSON.stringify (doc) 호출에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="270d1710da43a81d23e6eafd5a8439f6ac561567" translate="yes" xml:space="preserve">
          <source>The returned promise resolves to a list of the dropped indexes' names as an array</source>
          <target state="translated">반환 된 약속은 삭제 된 인덱스 이름 목록을 배열로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4efe07db9b195bc8da84c5aac18935cbe97988e3" translate="yes" xml:space="preserve">
          <source>The schema &lt;code&gt;bufferCommands&lt;/code&gt; option overrides the global &lt;code&gt;bufferCommands&lt;/code&gt; option.</source>
          <target state="translated">스키마 &lt;code&gt;bufferCommands&lt;/code&gt; 옵션은 전역 &lt;code&gt;bufferCommands&lt;/code&gt; 옵션을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="25e2aa46603886213ddf29182e6e462695ceccf4" translate="yes" xml:space="preserve">
          <source>The strict option, (enabled by default), ensures that values passed to our model constructor that were not specified in our schema do not get saved to the db.</source>
          <target state="translated">엄격한 옵션 (기본적으로 활성화 됨)은 스키마에 지정되지 않은 모델 생성자에 전달 된 값이 db에 저장되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="3be6ec40cbac2813a93dec49c36ad070d484a4f6" translate="yes" xml:space="preserve">
          <source>The string version of this documents _id.</source>
          <target state="translated">이 문서의 문자열 버전은 _id입니다.</target>
        </trans-unit>
        <trans-unit id="75a1c74fdd82e0294b08a374d4ca491fa9c92b9e" translate="yes" xml:space="preserve">
          <source>The type to cast this path to.</source>
          <target state="translated">이 경로를 캐스트 할 유형입니다.</target>
        </trans-unit>
        <trans-unit id="74efba3f482c6c77951e195a0c6b08a24b03fb63" translate="yes" xml:space="preserve">
          <source>The underlying driver this Mongoose instance uses to communicate with the database. A driver is a Mongoose-specific interface that defines functions like &lt;code&gt;find()&lt;/code&gt;.</source>
          <target state="translated">이 Mongoose 인스턴스가 데이터베이스와 통신하는 데 사용하는 기본 드라이버입니다. 드라이버는 &lt;code&gt;find()&lt;/code&gt; 와 같은 함수를 정의하는 몽구스 전용 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="54e6a41a58db43df72eac42417f11ea782fba8ad" translate="yes" xml:space="preserve">
          <source>The username specified in the URI</source>
          <target state="translated">URI에 지정된 사용자 이름</target>
        </trans-unit>
        <trans-unit id="1488fa6e3c7ace647cb404eaae7c81bf49a2ec3d" translate="yes" xml:space="preserve">
          <source>The values &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; are not cast.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 및 &lt;code&gt;undefined&lt;/code&gt; 값 은 캐스트 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c4936ffe0364de63842cdc775db808c283ba2a5" translate="yes" xml:space="preserve">
          <source>The various Mongoose SchemaTypes.</source>
          <target state="translated">다양한 몽구스 스키마 유형.</target>
        </trans-unit>
        <trans-unit id="dac5aebace01bd23c7d1f1a470b3a532a87e5c47" translate="yes" xml:space="preserve">
          <source>The various Mongoose Types.</source>
          <target state="translated">다양한 몽구스 유형.</target>
        </trans-unit>
        <trans-unit id="67f43db144a24994b58a9f1266075e541309f24c" translate="yes" xml:space="preserve">
          <source>The various built-in Mongoose Schema Types.</source>
          <target state="translated">다양한 내장 몽구스 스키마 유형.</target>
        </trans-unit>
        <trans-unit id="daa400d64917284840e761d5b3122ee471491cd9" translate="yes" xml:space="preserve">
          <source>The way mongoose tells the difference between the different discriminator models is by the 'discriminator key', which is &lt;code&gt;__t&lt;/code&gt; by default. Mongoose adds a String path called &lt;code&gt;__t&lt;/code&gt; to your schemas that it uses to track which discriminator this document is an instance of.</source>
          <target state="translated">몽구스가 다른 판별 기 모델의 차이점을 알리는 방식은 기본적으로 &lt;code&gt;__t&lt;/code&gt; 인 '식별자 키' 입니다. Mongoose는 이 문서가 어떤 &lt;code&gt;__t&lt;/code&gt; 의 인스턴스인지 추적하는 데 사용하는 __t 라는 문자열 경로 를 스키마에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="c2dbf2cdc3d752ba9afae187e99e742568235c3b" translate="yes" xml:space="preserve">
          <source>There are 2 different ways to overwrite a document (replacing all keys in the document). One way is to use the &lt;a href=&quot;api/document#document_Document-overwrite&quot;&gt;&lt;code&gt;Document#overwrite()&lt;/code&gt; function&lt;/a&gt; followed by &lt;code&gt;save()&lt;/code&gt;.</source>
          <target state="translated">문서를 덮어 쓰는 방법은 두 가지가 있습니다 (문서의 모든 키를 대체 함). 한 가지 방법은 &lt;a href=&quot;api/document#document_Document-overwrite&quot;&gt; &lt;code&gt;Document#overwrite()&lt;/code&gt; 함수&lt;/a&gt; 와 &lt;code&gt;save()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c7ac39efdc9e6e8bfb36e688bf2c28d13cbc2c47" translate="yes" xml:space="preserve">
          <source>There are a couple of key differences between update validators and document validators. In the color validation function above, &lt;code&gt;this&lt;/code&gt; refers to the document being validated when using document validation. However, when running update validators, the document being updated may not be in the server's memory, so by default the value of &lt;code&gt;this&lt;/code&gt; is not defined.</source>
          <target state="translated">업데이트 유효성 검사기와 문서 유효성 검사기에는 몇 가지 주요 차이점이 있습니다. 위의 색상 유효성 검사 기능에서 &lt;code&gt;this&lt;/code&gt; 문서 유효성 검사를 사용할 때 유효성이 검사되는 문서를 나타냅니다. 그러나 업데이트 유효성 검사기를 실행할 때 업데이트중인 문서가 서버 메모리에 없을 수 있으므로 기본적 &lt;code&gt;this&lt;/code&gt; 값 이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4830a47bec2f35db4ccc2f420a16c359019560a" translate="yes" xml:space="preserve">
          <source>There are also minor differences in how &lt;code&gt;countDocuments()&lt;/code&gt; handles &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#countDocuments&quot;&gt;&lt;code&gt;$where&lt;/code&gt; and a couple geospatial operators&lt;/a&gt;. versus &lt;code&gt;count()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;countDocuments()&lt;/code&gt; 가 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#countDocuments&quot;&gt; &lt;code&gt;$where&lt;/code&gt; 와 몇 개의 지리 공간 연산자를&lt;/a&gt; 처리 하는 방식에도 약간의 차이가 있습니다 . vs &lt;code&gt;count()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90cfe0f0827d00cd9dc04986386734968b9a799d" translate="yes" xml:space="preserve">
          <source>There are also minor differences in how &lt;code&gt;countDocuments()&lt;/code&gt; handles &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#countDocuments&quot;&gt;&lt;code&gt;$where&lt;/code&gt; and a couple geospatial operators&lt;/a&gt;. versus &lt;code&gt;count()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2896df6966e65ea17dad1f7d3bca34831c7ee307" translate="yes" xml:space="preserve">
          <source>There are no intentional backwards breaking changes with the &lt;code&gt;useCreateIndex&lt;/code&gt; option, so you should be able to turn this option on without any code changes. If you discover any issues, please &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;open an issue on GitHub&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;useCreateIndex&lt;/code&gt; 옵션을 사용하여 의도적으로 거꾸로 변경 사항을 변경하지 않으므로 코드를 변경하지 않고도이 옵션을 설정할 수 있습니다. 문제가 발견되면 &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;GitHub에서 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11c62e050dc814672336d4c39a3a8e37bd2a9e69" translate="yes" xml:space="preserve">
          <source>There are no joins in MongoDB but sometimes we still want references to documents in other collections. This is where &lt;a href=&quot;populate&quot;&gt;population&lt;/a&gt; comes in. Read more about how to include documents from other collections in your query results &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-populate&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">MongoDB에는 조인이 없지만 때로는 다른 컬렉션의 문서에 대한 참조를 원합니다. 이곳은 &lt;a href=&quot;populate&quot;&gt;인구&lt;/a&gt; 가 모이는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-populate&quot;&gt;곳&lt;/a&gt; 입니다. 쿼리 결과에 다른 컬렉션의 문서를 포함시키는 방법에 대한 자세한 내용은 여기를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f851fa6db1d3d1d8a5e82ce18af74621d0af60e5" translate="yes" xml:space="preserve">
          <source>There are several &lt;a href=&quot;https://github.com/Automattic/mongoose/blob/master/History.md&quot;&gt;backwards-breaking changes&lt;/a&gt; you should be aware of when migrating from Mongoose 4.x to Mongoose 5.x.</source>
          <target state="translated">Mongoose 4.x에서 Mongoose 5.x로 마이그레이션 할 때주의해야 할 몇 가지 &lt;a href=&quot;https://github.com/Automattic/mongoose/blob/master/History.md&quot;&gt;변경 사항&lt;/a&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c527be22199a3614076b474e0129cb67f40c5fc6" translate="yes" xml:space="preserve">
          <source>There are several deprecations in the &lt;a href=&quot;http://npmjs.com/package/mongodb&quot;&gt;MongoDB Node.js driver&lt;/a&gt; that Mongoose users should be aware of. Mongoose provides options to work around these deprecation warnings, but you need to test whether these options cause any problems for your application. Please &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;report any issues on GitHub&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://npmjs.com/package/mongodb&quot;&gt;MongoDB Node.js 드라이버&lt;/a&gt; 에는 Mongoose 사용자가 알아야 할 몇 가지 사용 중단 이 있습니다. Mongoose는 이러한 지원 중단 경고를 해결할 수있는 옵션을 제공하지만 이러한 옵션으로 인해 응용 프로그램에 문제가 발생하는지 테스트해야합니다. 제발 &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;GitHub의에서 문제를보고&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0037cd09eb6164410368f5cd7ef5b2d93419ae06" translate="yes" xml:space="preserve">
          <source>There are several deprecations in the &lt;a href=&quot;https://npmjs.com/package/mongodb&quot;&gt;MongoDB Node.js driver&lt;/a&gt; that Mongoose users should be aware of. Mongoose provides options to work around these deprecation warnings, but you need to test whether these options cause any problems for your application. Please &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;report any issues on GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bed25f053e430f656049fd0a5775dd15bb019ad" translate="yes" xml:space="preserve">
          <source>There are several types of values that will be successfully cast to a Number.</source>
          <target state="translated">숫자로 캐스트되는 몇 가지 유형의 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8372d4a4936f2ff451d92a613fa2836bf8ed6b69" translate="yes" xml:space="preserve">
          <source>There are two classes of errors that can occur with a Mongoose connection.</source>
          <target state="translated">몽구스 연결에서 발생할 수있는 두 가지 종류의 오류가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7eb4a9c97a78671e72e082e17f038ad13c16ade" translate="yes" xml:space="preserve">
          <source>There are two perspectives here. First, you may want the &lt;code&gt;author&lt;/code&gt; know which stories are theirs. Usually, your schema should resolve one-to-many relationships by having a parent pointer in the 'many' side. But, if you have a good reason to want an array of child pointers, you can &lt;code&gt;push()&lt;/code&gt; documents onto the array as shown below.</source>
          <target state="translated">여기에는 두 가지 관점이 있습니다. 먼저, 어떤 이야기가 자신의 이야기인지 &lt;code&gt;author&lt;/code&gt; 에게 알려줄 수 있습니다. 일반적으로 스키마는 '다'쪽에 부모 포인터를 두어 일대 다 관계를 해결해야합니다. 그러나 자식 포인터 배열을 원할 충분한 이유가 있다면 아래 표시된 것처럼 문서를 배열에 &lt;code&gt;push()&lt;/code&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78eeb87bd814c21394d45be7d2298a800dff53d9" translate="yes" xml:space="preserve">
          <source>These operators return documents sorted by distance.</source>
          <target state="translated">이 연산자는 거리별로 정렬 된 문서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b4b3e943f47ee7e8199f861267aa426da488e0c4" translate="yes" xml:space="preserve">
          <source>Think about &lt;a href=&quot;https://thecodebarbarian.com/a-node-js-perspective-on-mongodb-4-transactions.html#transactions-with-mongoose&quot;&gt;modeling a bank account in Mongoose&lt;/a&gt;. To transfer money from account &lt;code&gt;A&lt;/code&gt; to account &lt;code&gt;B&lt;/code&gt;, you would decrement &lt;code&gt;A&lt;/code&gt;'s balance and increment &lt;code&gt;B&lt;/code&gt;'s balance. However, if &lt;code&gt;A&lt;/code&gt; only has a balance of $5 and you try to transfer $10, you want to abort the transaction and undo incrementing &lt;code&gt;B&lt;/code&gt;'s balance.</source>
          <target state="translated">&lt;a href=&quot;https://thecodebarbarian.com/a-node-js-perspective-on-mongodb-4-transactions.html#transactions-with-mongoose&quot;&gt;몽구스에서 은행 계좌 모델링에&lt;/a&gt; 대해 생각해보십시오 . 전송 돈 계정에서 계정에 &lt;code&gt;B&lt;/code&gt; , 당신은 감소 할 의 균형과 증가 &lt;code&gt;B&lt;/code&gt; 의 균형을. 그러나 &lt;code&gt;A&lt;/code&gt; 의 잔고가 5 달러이고 10 달러를 이체하려고하면 거래를 중단하고 &lt;code&gt;B&lt;/code&gt; 의 잔액 증분을 취소하려고합니다 . &lt;code&gt;A&lt;/code&gt; &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2774fea97dd90ccd409d294fec8d19694ddacb03" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://mongoosejs.com/docs/api.html#connection_Connection&quot;&gt;connection&lt;/a&gt; object is then used to create and retrieve &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model&quot;&gt;models&lt;/a&gt;. Models are &lt;strong&gt;always&lt;/strong&gt; scoped to a single connection.</source>
          <target state="translated">그런 다음 이 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#connection_Connection&quot;&gt;연결&lt;/a&gt; 개체를 사용하여 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model&quot;&gt;모델&lt;/a&gt; 을 만들고 검색 합니다 . 모델은 &lt;strong&gt;항상&lt;/strong&gt; 단일 연결로 범위가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="ab38f8c7b6c70190ec77845894bec17a3997da08" translate="yes" xml:space="preserve">
          <source>This allows us to perform a &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; combo:</source>
          <target state="translated">이를 통해 &lt;code&gt;find&lt;/code&gt; 및 &lt;code&gt;populate&lt;/code&gt; 콤보 를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4a2f2dccec13fc1324b15e05b7c171947ad49b7" translate="yes" xml:space="preserve">
          <source>This also affects the use of &lt;code&gt;doc.set()&lt;/code&gt; to set a property value.</source>
          <target state="translated">이는 또한 &lt;code&gt;doc.set()&lt;/code&gt; 을 사용하여 속성 값을 설정하는 데 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="ec4d0f865fe6af836aca0e50d60974fbd670f254" translate="yes" xml:space="preserve">
          <source>This behavior can be overridden by setting &lt;code&gt;minimize&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;. It will then store empty objects.</source>
          <target state="translated">&lt;code&gt;minimize&lt;/code&gt; 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하면이 동작을 무시할 수 있습니다 . 그런 다음 빈 객체를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="b30e3ff964f5538b57389086ac6ae6d8c5cbefba" translate="yes" xml:space="preserve">
          <source>This function calls the MongoDB driver's &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#deleteMany&quot;&gt;&lt;code&gt;Collection#deleteMany()&lt;/code&gt; function&lt;/a&gt;. The returned &lt;a href=&quot;../queries&quot;&gt;promise&lt;/a&gt; resolves to an object that contains 3 properties:</source>
          <target state="translated">이 함수는 MongoDB 드라이버의 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#deleteMany&quot;&gt; &lt;code&gt;Collection#deleteMany()&lt;/code&gt; 함수를 호출&lt;/a&gt; 합니다. 반환 된 &lt;a href=&quot;../queries&quot;&gt;약속&lt;/a&gt; 은 3 가지 속성이 포함 된 개체로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="58863114fe1b1aa4250bd1a28a12aadac0cf5ad5" translate="yes" xml:space="preserve">
          <source>This function calls the MongoDB driver's &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#deleteOne&quot;&gt;&lt;code&gt;Collection#deleteOne()&lt;/code&gt; function&lt;/a&gt;. The returned &lt;a href=&quot;../queries&quot;&gt;promise&lt;/a&gt; resolves to an object that contains 3 properties:</source>
          <target state="translated">이 함수는 MongoDB 드라이버의 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#deleteOne&quot;&gt; &lt;code&gt;Collection#deleteOne()&lt;/code&gt; 함수를 호출&lt;/a&gt; 합니다. 반환 된 &lt;a href=&quot;../queries&quot;&gt;약속&lt;/a&gt; 은 3 가지 속성이 포함 된 개체로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="db41e388efb5283a2e3dbece2464c711a5b48347" translate="yes" xml:space="preserve">
          <source>This function calls the MongoDB driver's &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#remove&quot;&gt;&lt;code&gt;Collection#remove()&lt;/code&gt; function&lt;/a&gt;. The returned &lt;a href=&quot;../queries&quot;&gt;promise&lt;/a&gt; resolves to an object that contains 3 properties:</source>
          <target state="translated">이 함수는 MongoDB 드라이버의 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#remove&quot;&gt; &lt;code&gt;Collection#remove()&lt;/code&gt; 함수를 호출&lt;/a&gt; 합니다. 반환 된 &lt;a href=&quot;../queries&quot;&gt;약속&lt;/a&gt; 은 3 가지 속성이 포함 된 개체로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="f32c019fc0720cb020197a02b3b7e01eb386a8ed" translate="yes" xml:space="preserve">
          <source>This function calls the MongoDB driver's &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#deleteMany&quot;&gt;&lt;code&gt;Collection#deleteMany()&lt;/code&gt; function&lt;/a&gt;. The returned &lt;a href=&quot;../queries&quot;&gt;promise&lt;/a&gt; resolves to an object that contains 3 properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1ac4896b13b58c1755a0bcae43ef147330f396" translate="yes" xml:space="preserve">
          <source>This function calls the MongoDB driver's &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#deleteOne&quot;&gt;&lt;code&gt;Collection#deleteOne()&lt;/code&gt; function&lt;/a&gt;. The returned &lt;a href=&quot;../queries&quot;&gt;promise&lt;/a&gt; resolves to an object that contains 3 properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd5c2b892bb5d2655c68117f133ac3246214ef7" translate="yes" xml:space="preserve">
          <source>This function calls the MongoDB driver's &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#remove&quot;&gt;&lt;code&gt;Collection#remove()&lt;/code&gt; function&lt;/a&gt;. The returned &lt;a href=&quot;../queries&quot;&gt;promise&lt;/a&gt; resolves to an object that contains 3 properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b11ed8b5c7a836b4d99d9edce7e429441d1ffd" translate="yes" xml:space="preserve">
          <source>This function differs slightly from &lt;code&gt;Model.findOneAndRemove()&lt;/code&gt; in that &lt;code&gt;findOneAndRemove()&lt;/code&gt; becomes a &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.findAndModify/&quot;&gt;MongoDB &lt;code&gt;findAndModify()&lt;/code&gt; command&lt;/a&gt;, as opposed to a &lt;code&gt;findOneAndDelete()&lt;/code&gt; command. For most mongoose use cases, this distinction is purely pedantic. You should use &lt;code&gt;findOneAndDelete()&lt;/code&gt; unless you have a good reason not to.</source>
          <target state="translated">약간 기능이 다르다 &lt;code&gt;Model.findOneAndRemove()&lt;/code&gt; 는 점에서 &lt;code&gt;findOneAndRemove()&lt;/code&gt; a가됩니다 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.findAndModify/&quot;&gt;MongoDB를 &lt;code&gt;findAndModify()&lt;/code&gt; 커맨드&lt;/a&gt; (A)에 반대되는 &lt;code&gt;findOneAndDelete()&lt;/code&gt; 명령. 대부분의 몽구스 유스 케이스의 경우이 구별은 전적으로 pedantic입니다. 적절한 이유가없는 한 &lt;code&gt;findOneAndDelete()&lt;/code&gt; 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5e4d56a4ee258f795e66fdfd1d93978f08571d18" translate="yes" xml:space="preserve">
          <source>This function does &lt;strong&gt;not&lt;/strong&gt; trigger any middleware, not &lt;code&gt;save()&lt;/code&gt; nor &lt;code&gt;update()&lt;/code&gt;. If you need to trigger &lt;code&gt;save()&lt;/code&gt; middleware for every document use &lt;a href=&quot;http://mongoosejs.com/docs/api.html#model_Model.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 함수는 &lt;code&gt;save()&lt;/code&gt; 또는 &lt;code&gt;update()&lt;/code&gt; 가 &lt;strong&gt;아닌&lt;/strong&gt; 미들웨어를 트리거 하지 &lt;strong&gt;않습니다&lt;/strong&gt; . 모든 문서에 대해 &lt;code&gt;save()&lt;/code&gt; 미들웨어 를 트리거해야하는 경우 대신 &lt;a href=&quot;http://mongoosejs.com/docs/api.html#model_Model.create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="839d2c7460a74a5345a524c346c45c48198a0d9f" translate="yes" xml:space="preserve">
          <source>This function does &lt;strong&gt;not&lt;/strong&gt; trigger any middleware. In particular, it does &lt;strong&gt;not&lt;/strong&gt; trigger aggregate middleware.</source>
          <target state="translated">이 기능은 미들웨어를 트리거 하지 &lt;strong&gt;않습니다&lt;/strong&gt; . 특히 집계 미들웨어를 트리거 하지 &lt;strong&gt;않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f1fdd40c5422161e50085bc8a0aed8b92b2b92ae" translate="yes" xml:space="preserve">
          <source>This function does &lt;strong&gt;not&lt;/strong&gt; trigger save middleware.</source>
          <target state="translated">이 기능은 미들웨어 저장을 트리거 하지 &lt;strong&gt;않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="23e383871528ff8b5026286c7a3a25f3dac90ff2" translate="yes" xml:space="preserve">
          <source>This function does not trigger any middleware</source>
          <target state="translated">이 기능은 미들웨어를 트리거하지 않습니다</target>
        </trans-unit>
        <trans-unit id="343b3b80e8ccacfc65b894df39e0d70a5251a49a" translate="yes" xml:space="preserve">
          <source>This function does not trigger any middleware.</source>
          <target state="translated">이 기능은 미들웨어를 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b7a474e2d95c489bae2e23dfd7d21d3152a8a35a" translate="yes" xml:space="preserve">
          <source>This function is responsible for building &lt;a href=&quot;https://docs.mongodb.com/manual/indexes/&quot;&gt;indexes&lt;/a&gt;, unless &lt;a href=&quot;http://mongoosejs.com/docs/guide.html#autoIndex&quot;&gt;&lt;code&gt;autoIndex&lt;/code&gt;&lt;/a&gt; is turned off.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;http://mongoosejs.com/docs/guide.html#autoIndex&quot;&gt; &lt;code&gt;autoIndex&lt;/code&gt; &lt;/a&gt; 가 해제되어 있지 않으면 &lt;a href=&quot;https://docs.mongodb.com/manual/indexes/&quot;&gt;인덱스 작성을&lt;/a&gt; 담당 합니다.</target>
        </trans-unit>
        <trans-unit id="f2d78849fdb8eabf54e40d250389dc35cfe04772" translate="yes" xml:space="preserve">
          <source>This function is useful for writing &lt;a href=&quot;../middleware&quot;&gt;query middleware&lt;/a&gt;.</source>
          <target state="translated">이 기능은 &lt;a href=&quot;../middleware&quot;&gt;쿼리 미들웨어&lt;/a&gt; 를 작성하는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="ffed7a650d05883d11986073abfc831789290c4f" translate="yes" xml:space="preserve">
          <source>This function triggers &lt;code&gt;init&lt;/code&gt;&lt;a href=&quot;../middleware&quot;&gt;middleware&lt;/a&gt;. Note that &lt;code&gt;init&lt;/code&gt; hooks are &lt;a href=&quot;../middleware#synchronous&quot;&gt;synchronous&lt;/a&gt;.</source>
          <target state="translated">이 기능은 &lt;code&gt;init&lt;/code&gt; &lt;a href=&quot;../middleware&quot;&gt;미들웨어를&lt;/a&gt; 트리거 합니다 . 하는 것으로 &lt;code&gt;init&lt;/code&gt; 후크는 &lt;a href=&quot;../middleware#synchronous&quot;&gt;동기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3901f95e6a5d55a4bc9cdea7a6aea481438c667f" translate="yes" xml:space="preserve">
          <source>This function triggers the following middleware.</source>
          <target state="translated">이 기능은 다음 미들웨어를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="3d9153e3119336c1823a2a498bed25fc148f5da8" translate="yes" xml:space="preserve">
          <source>This function triggers the following query middleware.</source>
          <target state="translated">이 함수는 다음 쿼리 미들웨어를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="7eaad747021ce563a1cd10d4581a7999163180ad" translate="yes" xml:space="preserve">
          <source>This getter exists on all documents by default. The getter can be disabled by setting the &lt;code&gt;id&lt;/code&gt;&lt;a href=&quot;../guide#id&quot;&gt;option&lt;/a&gt; of its &lt;code&gt;Schema&lt;/code&gt; to false at construction time.</source>
          <target state="translated">이 getter는 기본적으로 모든 문서에 존재합니다. 게터는 설정에 의해 비활성화 할 수 있습니다 &lt;code&gt;id&lt;/code&gt; &lt;a href=&quot;../guide#id&quot;&gt;옵션&lt;/a&gt; 의의 &lt;code&gt;Schema&lt;/code&gt; 건설시 false로.</target>
        </trans-unit>
        <trans-unit id="da75ad7c2233168e0710ede0fd906a600cb4c996" translate="yes" xml:space="preserve">
          <source>This helps prevent accidentally overwriting all documents in your collection with &lt;code&gt;{ name: 'jason bourne' }&lt;/code&gt;.</source>
          <target state="translated">이렇게하면 실수로 컬렉션의 모든 문서를 &lt;code&gt;{ name: 'jason bourne' }&lt;/code&gt; 로 덮어 쓰는 것을 방지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aa572228fc715a2efa6eb6a0b683bc65e2c56d01" translate="yes" xml:space="preserve">
          <source>This helps prevent accidentally overwriting your document with &lt;code&gt;{ name: 'jason bourne' }&lt;/code&gt;.</source>
          <target state="translated">이렇게하면 실수로 &lt;code&gt;{ name: 'jason bourne' }&lt;/code&gt; 문서를 덮어 쓰는 것을 방지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4505cdddcc97c0a6185629efb22ff59968e7e34b" translate="yes" xml:space="preserve">
          <source>This is known as a &quot;cross-database populate,&quot; because it enables you to populate across MongoDB databases and even across MongoDB instances.</source>
          <target state="translated">이를 &quot;데이터베이스 간 채우기&quot;라고합니다. 이는 MongoDB 데이터베이스와 심지어 MongoDB 인스턴스 전체를 채울 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="1d13861979b4b1e4e009ec3807259b50c1b0fe4e" translate="yes" xml:space="preserve">
          <source>This is the connection used by default for every model created using &lt;a href=&quot;#index_Mongoose-model&quot;&gt;mongoose.model&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;#index_Mongoose-model&quot;&gt;mongoose.model을&lt;/a&gt; 사용하여 작성된 모든 모델에 기본적으로 사용되는 연결 입니다.</target>
        </trans-unit>
        <trans-unit id="1db5d15f7224c157ac9ca13e99c22755e88efab8" translate="yes" xml:space="preserve">
          <source>This is the minimum needed to connect the &lt;code&gt;myapp&lt;/code&gt; database running locally on the default port (27017). If connecting fails on your machine, try using &lt;code&gt;127.0.0.1&lt;/code&gt; instead of &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">기본 포트 (27017)에서 로컬로 실행 되는 &lt;code&gt;myapp&lt;/code&gt; 데이터베이스 를 연결하는 데 필요한 최소값 입니다. 컴퓨터에서 연결에 실패하면 &lt;code&gt;localhost&lt;/code&gt; 대신 &lt;code&gt;127.0.0.1&lt;/code&gt; 을 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="fea684bf9b99c4a5887978812e118d1b961a9775" translate="yes" xml:space="preserve">
          <source>This is what mongoose uses to define virtual attributes via &lt;code&gt;Schema.prototype.virtual&lt;/code&gt;.</source>
          <target state="translated">이것이 mongoose가 &lt;code&gt;Schema.prototype.virtual&lt;/code&gt; 을 통해 가상 속성을 정의하는 데 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c1ade25590da3b2686e2276a91c78aca76cfc2cb" translate="yes" xml:space="preserve">
          <source>This means that you must add all middleware and &lt;a href=&quot;plugins&quot;&gt;plugins&lt;/a&gt;&lt;strong&gt;before&lt;/strong&gt; calling &lt;a href=&quot;api/mongoose#mongoose_Mongoose-model&quot;&gt;`mongoose.model()&lt;/a&gt;. The below script will print out &quot;Hello from pre save&quot;:</source>
          <target state="translated">이것은 &lt;a href=&quot;api/mongoose#mongoose_Mongoose-model&quot;&gt;`mongoose.model ()을&lt;/a&gt; 호출 &lt;strong&gt;하기 전에&lt;/strong&gt; 모든 미들웨어 및 &lt;a href=&quot;plugins&quot;&gt;플러그인을&lt;/a&gt; 추가해야 함을 의미합니다 . 아래 스크립트는 &quot;Hello from pre save&quot;를 출력합니다 :&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f45d8d20bc42850ff504fb9d83ec50d67281972b" translate="yes" xml:space="preserve">
          <source>This method accepts the same options as &lt;a href=&quot;#document_Document-toObject&quot;&gt;Document#toObject&lt;/a&gt;. To apply the options to every document of your schema by default, set your &lt;a href=&quot;#schema_Schema&quot;&gt;schemas&lt;/a&gt;&lt;code&gt;toJSON&lt;/code&gt; option to the same argument.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#document_Document-toObject&quot;&gt;Document # toObject&lt;/a&gt; 와 동일한 옵션을 허용합니다 . 기본적으로 스키마의 모든 문서에 옵션을 적용하려면 &lt;a href=&quot;#schema_Schema&quot;&gt;스키마를 &lt;/a&gt; &lt;code&gt;toJSON&lt;/code&gt; 설정 옵션을 동일한 인수로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="80aae80214acc3496732a61b6afbd2ae5bcd2466" translate="yes" xml:space="preserve">
          <source>This method is analagous to &lt;a href=&quot;https://lodash.com/docs/4.17.15#pick&quot;&gt;Lodash's &lt;code&gt;pick()&lt;/code&gt; function&lt;/a&gt; for Mongoose schemas.</source>
          <target state="translated">이 메소드는 몽구스 스키마에 대한 &lt;a href=&quot;https://lodash.com/docs/4.17.15#pick&quot;&gt;Lodash의 &lt;code&gt;pick()&lt;/code&gt; 함수&lt;/a&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="02438091674aa234cc7479a6babf4151ef1afb94" translate="yes" xml:space="preserve">
          <source>This method is called &lt;code&gt;pre&lt;/code&gt; save and if a validation rule is violated, &lt;a href=&quot;#model_Model-save&quot;&gt;save&lt;/a&gt; is aborted and the error is returned to your &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">이 메소드를 &lt;code&gt;pre&lt;/code&gt; 저장 이라고 하며 유효성 검사 규칙을 위반하면 &lt;a href=&quot;#model_Model-save&quot;&gt;저장&lt;/a&gt; 이 중단되고 오류가 &lt;code&gt;callback&lt;/code&gt; 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8485d66a649b5c9238e3e84031904b216443085" translate="yes" xml:space="preserve">
          <source>This method is deprecated. If you want to count the number of documents in a collection, e.g. &lt;code&gt;count({})&lt;/code&gt;, use the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.estimatedDocumentCount&quot;&gt;&lt;code&gt;estimatedDocumentCount()&lt;/code&gt; function&lt;/a&gt; instead. Otherwise, use the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.countDocuments&quot;&gt;&lt;code&gt;countDocuments()&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">이 방법은 더 이상 사용되지 않습니다. 당신이 컬렉션의 문서의 수를 계산하려면, 예를 들어, &lt;code&gt;count({})&lt;/code&gt; , 사용 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.estimatedDocumentCount&quot;&gt; &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; 기능을&lt;/a&gt; 대신. 그렇지 않으면 대신 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.countDocuments&quot;&gt; &lt;code&gt;countDocuments()&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cf7cf4b5016412321101452fc2a89e6a6c2140df" translate="yes" xml:space="preserve">
          <source>This method is deprecated. If you want to count the number of documents in a collection, e.g. &lt;code&gt;count({})&lt;/code&gt;, use the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-estimatedDocumentCount&quot;&gt;&lt;code&gt;estimatedDocumentCount()&lt;/code&gt; function&lt;/a&gt; instead. Otherwise, use the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-countDocuments&quot;&gt;&lt;code&gt;countDocuments()&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">이 방법은 더 이상 사용되지 않습니다. 당신이 컬렉션의 문서의 수를 계산하려면, 예를 들어, &lt;code&gt;count({})&lt;/code&gt; , 사용 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-estimatedDocumentCount&quot;&gt; &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; 기능을&lt;/a&gt; 대신. 그렇지 않으면 대신 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-countDocuments&quot;&gt; &lt;code&gt;countDocuments()&lt;/code&gt; &lt;/a&gt; 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="40115da61549deeb637e7679b25ea468c104dd83" translate="yes" xml:space="preserve">
          <source>This method is useful if you need synchronous validation.</source>
          <target state="translated">이 방법은 동기 유효성 검사가 필요한 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="872a06e7bb531beed25cd242d06f639f5d835e5b" translate="yes" xml:space="preserve">
          <source>This method sends a remove command directly to MongoDB, no Mongoose documents are involved. Because no Mongoose documents are involved, Mongoose does not execute &lt;a href=&quot;../middleware#types-of-middleware&quot;&gt;document middleware&lt;/a&gt;.</source>
          <target state="translated">이 방법은 Mongoose 문서가 포함되지 않은 제거 명령을 MongoDB로 직접 보냅니다. Mongoose 문서가 포함되어 있지 않으므로 Mongoose는 &lt;a href=&quot;../middleware#types-of-middleware&quot;&gt;문서 미들웨어를&lt;/a&gt; 실행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="29961f40c3782260023af7810c123ca5e2bd3dd5" translate="yes" xml:space="preserve">
          <source>This option affects the following model and query functions. There are no intentional backwards breaking changes, so you should be able to turn this option on without any code changes. If you discover any issues, please &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;open an issue on GitHub&lt;/a&gt;.</source>
          <target state="translated">이 옵션은 다음 모델 및 쿼리 기능에 영향을줍니다. 의도적으로 거꾸로 변경되는 변경 사항이 없으므로 코드 변경없이이 옵션을 켤 수 있습니다. 문제가 발견되면 &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;GitHub에서 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71cfa77b86431430e7367a1ac7727b97c1c10f65" translate="yes" xml:space="preserve">
          <source>This option is only valid for operations that write to the database</source>
          <target state="translated">이 옵션은 데이터베이스에 쓰는 작업에만 유효합니다</target>
        </trans-unit>
        <trans-unit id="4202cb2d9b6d900a88398fb721d05d34f2fd72f6" translate="yes" xml:space="preserve">
          <source>This performs a search for all documents with a name property that begins with &quot;Fluff&quot; and returns the result as an array of kittens to the callback.</source>
          <target state="translated">&quot;Fluff&quot;로 시작하는 이름 속성을 가진 모든 문서를 검색하고 결과를 새끼 고양이 배열로 콜백에 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e668400c4ba624d590881aa5359f370389f84aee" translate="yes" xml:space="preserve">
          <source>This property is read-only. Modifying this property is a no-op.</source>
          <target state="translated">이 속성은 읽기 전용입니다. 이 속성을 수정하는 것은 아무런 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4f8063a6648b6c98a3c9b71c6fa1a8fd6ad9ce80" translate="yes" xml:space="preserve">
          <source>This property is typically only useful for plugin authors and advanced users. You do not need to interact with this property at all to use mongoose.</source>
          <target state="translated">이 특성은 일반적으로 플러그인 작성자 및 고급 사용자에게만 유용합니다. 몽구스를 사용하기 위해이 속성과 전혀 상호 작용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d61893363ee35c36ba497d31ddb19d2d44574dae" translate="yes" xml:space="preserve">
          <source>This schema type's name, to defend against minifiers that mangle function names.</source>
          <target state="translated">이 스키마 유형의 이름으로 함수 이름을 혼란시키는 축소 기로부터 방어합니다.</target>
        </trans-unit>
        <trans-unit id="36e7df7ab0c8c3f544de045d21e6623b258f40ae" translate="yes" xml:space="preserve">
          <source>This value can be overridden at the model instance level by passing a second boolean argument:</source>
          <target state="translated">이 값은 두 번째 부울 인수를 전달하여 모델 인스턴스 레벨에서 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e564390c3807db384ec558cae06cf77d3a6404e" translate="yes" xml:space="preserve">
          <source>Thrown when a model with the given name was already registered on the connection. See &lt;a href=&quot;https://mongoosejs.com/docs/faq.html#overwrite-model-error&quot;&gt;the FAQ about &lt;code&gt;OverwriteModelError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 이름의 모델이 연결에 이미 등록 된 경우 발생합니다. &lt;a href=&quot;https://mongoosejs.com/docs/faq.html#overwrite-model-error&quot;&gt; &lt;code&gt;OverwriteModelError&lt;/code&gt; 에&lt;/a&gt; 대한 FAQ를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae59c207c2cee0b19322d994ed5c415cbd7f76f0" translate="yes" xml:space="preserve">
          <source>Thrown when you try to access a model that has not been registered yet</source>
          <target state="translated">아직 등록되지 않은 모델에 액세스하려고하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="113751998fc1bbfef523746b41311a6165ea6e7d" translate="yes" xml:space="preserve">
          <source>Thrown when your try to pass values to model contrtuctor that were not specified in schema or change immutable properties when &lt;code&gt;strict&lt;/code&gt; mode is &lt;code&gt;&quot;throw&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;strict&lt;/code&gt; 모드가 &lt;code&gt;&quot;throw&quot;&lt;/code&gt; 일 때 스키마에 지정되지 않은 불변의 속성을 변경하거나 스키마에 지정되지 않은 모델 contrtuctor에 값을 전달하려고하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b01f293943f4cc292c75269523345626cb9c6df4" translate="yes" xml:space="preserve">
          <source>To apply these options to every document of your schema by default, set your &lt;a href=&quot;#schema_Schema&quot;&gt;schemas&lt;/a&gt;&lt;code&gt;toObject&lt;/code&gt; option to the same argument.</source>
          <target state="translated">이러한 옵션을 기본적으로 스키마의 모든 문서에 적용하려면 &lt;a href=&quot;#schema_Schema&quot;&gt;스키마를 &lt;/a&gt; &lt;code&gt;toObject&lt;/code&gt; 옵션으로 동일한 인수로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f113b6041ddd052ed5fdd75568c63ffb5bc1c42d" translate="yes" xml:space="preserve">
          <source>To avoid these side-effects, a &lt;a href=&quot;subdocs&quot;&gt;Subdocument&lt;/a&gt; path may be used instead.</source>
          <target state="translated">이러한 부작용을 피하기 위해 &lt;a href=&quot;subdocs&quot;&gt;하위 문서&lt;/a&gt; 경로를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="052af526cc4c16093ce4e143d4ea3c8680399947" translate="yes" xml:space="preserve">
          <source>To bypass Mongoose's error messages and just copy the error message that the validator throws, do this:</source>
          <target state="translated">Mongoose의 오류 메시지를 무시하고 유효성 검사기가 던지는 오류 메시지를 복사하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b84d7839ac5dd39bd21270f93f20883f5aa58230" translate="yes" xml:space="preserve">
          <source>To check whether an object is empty, you can use the &lt;code&gt;$isEmpty()&lt;/code&gt; helper:</source>
          <target state="translated">객체가 비어 있는지 확인하려면 &lt;code&gt;$isEmpty()&lt;/code&gt; 도우미를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24dac5914bcc34f541d80c882a2edcb35c0b12ef" translate="yes" xml:space="preserve">
          <source>To connect to a replica set you pass a comma delimited list of hosts to connect to rather than a single host.</source>
          <target state="translated">복제 세트에 연결하려면 단일 호스트가 아닌 쉼표로 구분 된 호스트 목록을 전달하여 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="0172e6a99fbcd82b87f340f3971df5d07dab29c7" translate="yes" xml:space="preserve">
          <source>To connect to a single node replica set, specify the &lt;code&gt;replicaSet&lt;/code&gt; option.</source>
          <target state="translated">단일 노드 복제 세트에 연결하려면 &lt;code&gt;replicaSet&lt;/code&gt; 옵션을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="332fcc7443f8a2393880451fee744ed15cf62660" translate="yes" xml:space="preserve">
          <source>To create a new connection, use &lt;a href=&quot;#mongoose_Mongoose-createConnection&quot;&gt;&lt;code&gt;createConnection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">새 연결을 만들려면 &lt;a href=&quot;#mongoose_Mongoose-createConnection&quot;&gt; &lt;code&gt;createConnection()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d9a3bebb914e97da27500e71fc5719f019eee96d" translate="yes" xml:space="preserve">
          <source>To declare a path as a Buffer, you may use either the &lt;code&gt;Buffer&lt;/code&gt; global constructor or the string &lt;code&gt;'Buffer'&lt;/code&gt;.</source>
          <target state="translated">경로를 버퍼로 선언하려면 &lt;code&gt;Buffer&lt;/code&gt; 글로벌 생성자 또는 문자열 &lt;code&gt;'Buffer'&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0b1a3b0cd118fe9dfd04165913d7a3415ab2b72" translate="yes" xml:space="preserve">
          <source>To declare a path as a number, you may use either the &lt;code&gt;Number&lt;/code&gt; global constructor or the string &lt;code&gt;'Number'&lt;/code&gt;.</source>
          <target state="translated">경로를 숫자로 선언하려면 &lt;code&gt;Number&lt;/code&gt; 전역 생성자 또는 문자열 &lt;code&gt;'Number'&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abf97a81bd41e9a897c1550f16263734d53e999b" translate="yes" xml:space="preserve">
          <source>To declare a path as a string, you may use either the &lt;code&gt;String&lt;/code&gt; global constructor or the string &lt;code&gt;'String'&lt;/code&gt;.</source>
          <target state="translated">경로를 문자열로 선언하려면 &lt;code&gt;String&lt;/code&gt; 전역 생성자 또는 &lt;code&gt;'String'&lt;/code&gt; 문자열을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc47522572472fdfd47148df036fa84dc03d2a30" translate="yes" xml:space="preserve">
          <source>To disable buffering, turn off the &lt;a href=&quot;guide#bufferCommands&quot;&gt;&lt;code&gt;bufferCommands&lt;/code&gt; option on your schema&lt;/a&gt;. If you have &lt;code&gt;bufferCommands&lt;/code&gt; on and your connection is hanging, try turning &lt;code&gt;bufferCommands&lt;/code&gt; off to see if you haven't opened a connection properly. You can also disable &lt;code&gt;bufferCommands&lt;/code&gt; globally:</source>
          <target state="translated">버퍼링을 비활성화하려면 &lt;a href=&quot;guide#bufferCommands&quot;&gt;스키마&lt;/a&gt; 에서 &lt;code&gt;bufferCommands&lt;/code&gt; 옵션을 해제하십시오 . &lt;code&gt;bufferCommands&lt;/code&gt; 가 켜져 있고 연결이 정지 된 경우 , &lt;code&gt;bufferCommands&lt;/code&gt; 를 해제하여 연결이 제대로 열리지 않았는지 확인하십시오. 전역 적으로 &lt;code&gt;bufferCommands&lt;/code&gt; 를 비활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2878f06baa91df1287eaedfe74ddf1e0f72fd632" translate="yes" xml:space="preserve">
          <source>To disable running getters when converting a document to JSON, set the &lt;a href=&quot;../guide#toJSON&quot;&gt;&lt;code&gt;toJSON.getters&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; in your schema&lt;/a&gt; as shown below.</source>
          <target state="translated">문서를 JSON으로 변환 할 때 실행중인 getter를 사용하지 않으려면 아래 표시된대로 &lt;a href=&quot;../guide#toJSON&quot;&gt;스키마에서 &lt;/a&gt; &lt;code&gt;toJSON.getters&lt;/code&gt; 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e73688801207b5ae948d4f2917746b1b20ea6a3" translate="yes" xml:space="preserve">
          <source>To fix all deprecation warnings, follow the below steps:</source>
          <target state="translated">지원 중단 경고를 모두 해결하려면 다음 단계를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="66f4d2cc411323846d61e83783cc2f70d9679cba" translate="yes" xml:space="preserve">
          <source>To get the most out of MongoDB, you need to learn the basics of MongoDB schema design. SQL schema design (third normal form) was designed to &lt;a href=&quot;https://en.wikipedia.org/wiki/Third_normal_form&quot;&gt;minimize storage costs&lt;/a&gt;, whereas MongoDB schema design is about making common queries as fast as possible. The &lt;a href=&quot;https://www.mongodb.com/blog/post/6-rules-of-thumb-for-mongodb-schema-design-part-1&quot;&gt;&lt;em&gt;6 Rules of Thumb for MongoDB Schema Design&lt;/em&gt; blog series&lt;/a&gt; is an excellent resource for learning the basic rules for making your queries fast.</source>
          <target state="translated">MongoDB를 최대한 활용하려면 MongoDB 스키마 디자인의 기본 사항을 배워야합니다. SQL 스키마 디자인 (세 번째 일반 형식)은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Third_normal_form&quot;&gt;스토리지 비용&lt;/a&gt; 을 최소화 하도록 설계 되었지만 MongoDB 스키마 디자인은 일반적인 쿼리를 최대한 빨리 만드는 것입니다. &lt;a href=&quot;https://www.mongodb.com/blog/post/6-rules-of-thumb-for-mongodb-schema-design-part-1&quot;&gt;&lt;em&gt;MongoDB 스키마 디자인&lt;/em&gt; 블로그 시리즈&lt;/a&gt; 의 &lt;em&gt;6&lt;/em&gt; 가지 규칙은 쿼리를 빠르게 수행하기위한 기본 규칙을 익히는 데 유용한 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="bcdb91ac0de7bb24bebae0e022b287754c958098" translate="yes" xml:space="preserve">
          <source>To get/set the session associated with a given document, use &lt;a href=&quot;https://mongoosejs.com/docs/api.html#document_Document-%24session&quot;&gt;&lt;code&gt;doc.$session()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 문서와 관련된 세션을 가져 오거나 설정하려면 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#document_Document-%24session&quot;&gt; &lt;code&gt;doc.$session()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37a1e70b63b52a229fa8d7465663e0e7977d21d6" translate="yes" xml:space="preserve">
          <source>To handle errors after initial connection was established, you should listen for error events on the connection. However, you still need to handle initial connection errors as shown above.</source>
          <target state="translated">초기 연결이 설정된 후 오류를 처리하려면 연결에서 오류 이벤트를 수신해야합니다. 그러나 위에 표시된대로 여전히 초기 연결 오류를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="abcb8e5fa9bb636408c2e73b9e62cf7c375efa75" translate="yes" xml:space="preserve">
          <source>To handle initial connection errors, you should use &lt;code&gt;.catch()&lt;/code&gt; or &lt;code&gt;try/catch&lt;/code&gt; with async/await.</source>
          <target state="translated">초기 연결 오류를 처리하려면 &lt;code&gt;.catch()&lt;/code&gt; 또는 async / await와 함께 &lt;code&gt;try/catch&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5d9d440c928aac9d2a1821126a9f1d23b88e27a3" translate="yes" xml:space="preserve">
          <source>To have all virtuals show up in your &lt;code&gt;console.log&lt;/code&gt; output, set the &lt;code&gt;toObject&lt;/code&gt; option to &lt;code&gt;{ getters: true }&lt;/code&gt;:</source>
          <target state="translated">모든 가상이 &lt;code&gt;console.log&lt;/code&gt; 출력 에 표시되게하려면 &lt;code&gt;toObject&lt;/code&gt; 옵션을 &lt;code&gt;{ getters: true }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a27d5a468e2f83ebb9ebca77c875336eedb9ff8" translate="yes" xml:space="preserve">
          <source>To include virtuals in &lt;code&gt;res.json()&lt;/code&gt;, you need to set the &lt;a href=&quot;../guide#toJSON&quot;&gt;&lt;code&gt;toJSON&lt;/code&gt; schema option&lt;/a&gt; to &lt;code&gt;{ virtuals: true }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;res.json()&lt;/code&gt; 가상을 포함 시키려면 &lt;a href=&quot;../guide#toJSON&quot;&gt; &lt;code&gt;toJSON&lt;/code&gt; 스키마 옵션&lt;/a&gt; 을 &lt;code&gt;{ virtuals: true }&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e598ba71277fa907fa1b629cbcced5b66871e7b2" translate="yes" xml:space="preserve">
          <source>To make Mongoose throw an error if your &lt;code&gt;filter&lt;/code&gt; has a property that isn't in the schema, set &lt;code&gt;strictQuery&lt;/code&gt; to &lt;code&gt;'throw'&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 에 스키마에없는 속성이있는 경우 몽구스에서 오류가 발생하도록하려면 &lt;code&gt;strictQuery&lt;/code&gt; 를 &lt;code&gt;'throw'&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="809d1cc7cac1cc211b0797240c6c26a1d24ebaf6" translate="yes" xml:space="preserve">
          <source>To migrate, replace &lt;code&gt;count()&lt;/code&gt; with &lt;code&gt;countDocuments()&lt;/code&gt;&lt;em&gt;unless&lt;/em&gt; you do not pass any arguments to &lt;code&gt;count()&lt;/code&gt;. If you use &lt;code&gt;count()&lt;/code&gt; to count all documents in a collection as opposed to counting documents that match a query, use &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; instead of &lt;code&gt;countDocuments()&lt;/code&gt;.</source>
          <target state="translated">마이그레이션하려면, 대신 &lt;code&gt;count()&lt;/code&gt; 와 &lt;code&gt;countDocuments()&lt;/code&gt; &lt;em&gt;하지 않는 한&lt;/em&gt; 당신이 어떤 인수를 전달하지 않는 &lt;code&gt;count()&lt;/code&gt; . 당신이 사용하는 경우 &lt;code&gt;count()&lt;/code&gt; 쿼리와 일치하는 계산 서류에 반대 모음에있는 모든 문서를 계산하기 위해 사용 &lt;code&gt;estimatedDocumentCount()&lt;/code&gt; 대신 &lt;code&gt;countDocuments()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b54c43fd8c888a1d44d36c0b77b22eb16ce4591" translate="yes" xml:space="preserve">
          <source>To opt in to using the new topology engine, use the below line:</source>
          <target state="translated">새 토폴로지 엔진을 사용하려면 다음 행을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3397a1d17c5f8625b5a9f1953a91db4dbce09271" translate="yes" xml:space="preserve">
          <source>To opt out of selecting populated fields by default, set &lt;code&gt;selectPopulatedPaths&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your schema.</source>
          <target state="translated">기본적으로 채워진 필드를 선택하지 않으 려면 스키마에서 &lt;code&gt;selectPopulatedPaths&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="60ce16ebda0a7a2f8ff2e04f3400bbe07243d5a3" translate="yes" xml:space="preserve">
          <source>To overwrite this default, you need to set the default value to &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">이 기본값을 덮어 쓰려면 기본값을 &lt;code&gt;undefined&lt;/code&gt; 로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6a6bffc681a9e49ef88a4df27dff03110875dd1" translate="yes" xml:space="preserve">
          <source>To remove a document from a subdocument array we may pass an object with a matching &lt;code&gt;_id&lt;/code&gt;.</source>
          <target state="translated">하위 문서 배열에서 문서를 제거하기 위해 &lt;code&gt;_id&lt;/code&gt; 가 일치하는 객체를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b206aa34cf11893218412c231d6f621b732bfb81" translate="yes" xml:space="preserve">
          <source>To remove this deprecation warning, replace any usage of &lt;code&gt;remove()&lt;/code&gt; with &lt;code&gt;deleteMany()&lt;/code&gt;, &lt;em&gt;unless&lt;/em&gt; you specify the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.remove&quot;&gt;&lt;code&gt;single&lt;/code&gt; option to &lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;single&lt;/code&gt; option limited &lt;code&gt;remove()&lt;/code&gt; to deleting at most one document, so you should replace &lt;code&gt;remove(filter, { single: true })&lt;/code&gt; with &lt;code&gt;deleteOne(filter)&lt;/code&gt;.</source>
          <target state="translated">이 중단 경고를 제거하려면 모든 사용 대체 &lt;code&gt;remove()&lt;/code&gt; 와 &lt;code&gt;deleteMany()&lt;/code&gt; , &lt;em&gt;하지 않는 한&lt;/em&gt; 당신은 지정 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.remove&quot;&gt; &lt;code&gt;single&lt;/code&gt; 에 옵션 &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;single&lt;/code&gt; 옵션을 제한 &lt;code&gt;remove()&lt;/code&gt; 는 교체해야하므로, 대부분 하나 개의 문서에서 삭제하기 &lt;code&gt;remove(filter, { single: true })&lt;/code&gt; 와 &lt;code&gt;deleteOne(filter)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b92b2bcfbc9c2368392aea5e3235416d54827a0" translate="yes" xml:space="preserve">
          <source>To report an error in an init hook, you must throw a &lt;strong&gt;synchronous&lt;/strong&gt; error. Unlike all other middleware, init middleware does &lt;strong&gt;not&lt;/strong&gt; handle promise rejections.</source>
          <target state="translated">초기화 후크에서 오류를보고하려면 &lt;strong&gt;동기&lt;/strong&gt; 오류를 발생 시켜야합니다 . 다른 모든 미들웨어와 달리 init 미들웨어는 약속 거부를 처리 하지 &lt;strong&gt;않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6ca1388200037612c54d5fda2b148b08991012d5" translate="yes" xml:space="preserve">
          <source>To see all available &lt;code&gt;toJSON/toObject&lt;/code&gt; options, read &lt;a href=&quot;https://mongoosejs.com/docs/api.html#document_Document-toObject&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 &lt;code&gt;toJSON/toObject&lt;/code&gt; 옵션을 모두 보려면 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#document_Document-toObject&quot;&gt;이것을&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="aea51bf6b67555cc56f4e1d2e96dd8b1fac67cb6" translate="yes" xml:space="preserve">
          <source>To see all available &lt;code&gt;toObject&lt;/code&gt; options, read &lt;a href=&quot;https://mongoosejs.com/docs/api.html#document_Document-toObject&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 모든 &lt;code&gt;toObject&lt;/code&gt; 옵션 을 보려면 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#document_Document-toObject&quot;&gt;이것을&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="936b69dfe42dfaf73bdeccbc74a3a77bc01526ce" translate="yes" xml:space="preserve">
          <source>To skip getters on a one-off basis, use &lt;a href=&quot;../api/document#document_Document-get&quot;&gt;&lt;code&gt;user.get()&lt;/code&gt; with the &lt;code&gt;getters&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;&lt;/a&gt; as shown below.</source>
          <target state="translated">일회성으로 getter를 건너 뛰려면 아래에 표시된대로 &lt;a href=&quot;../api/document#document_Document-get&quot;&gt; &lt;code&gt;getters&lt;/code&gt; &lt;/a&gt; 옵션이 &lt;code&gt;false&lt;/code&gt; 로 설정된 &lt;code&gt;user.get()&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d977df13d00f522ba6977206c9f94ba7abcf7276" translate="yes" xml:space="preserve">
          <source>To specify a type of ObjectId, use &lt;code&gt;Schema.Types.ObjectId&lt;/code&gt; in your declaration.</source>
          <target state="translated">ObjectId 유형을 지정하려면 선언에서 &lt;code&gt;Schema.Types.ObjectId&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="a359a019005fcad390929cce06ceda6a4d6bc3c4" translate="yes" xml:space="preserve">
          <source>To test your app with &lt;code&gt;{ useNewUrlParser: true }&lt;/code&gt;, you only need to check whether your app successfully connects. Once Mongoose has successfully connected, the URL parser is no longer important. If you can't connect with &lt;code&gt;{ useNewUrlParser: true }&lt;/code&gt;, please &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;open an issue on GitHub&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{ useNewUrlParser: true }&lt;/code&gt; 앱을 테스트하려면 앱이 성공적으로 연결되어 있는지 확인하면됩니다. 몽구스가 성공적으로 연결되면 URL 파서는 더 이상 중요하지 않습니다. 당신이 연결할 수없는 경우 &lt;code&gt;{ useNewUrlParser: true }&lt;/code&gt; , 제발 &lt;a href=&quot;https://github.com/Automattic/mongoose/issues/new&quot;&gt;GitHub의에서 문제를 엽니 다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78ba82b776eb16d519dba6b0ef85765ec9591a74" translate="yes" xml:space="preserve">
          <source>To turn on update validators, set the &lt;code&gt;runValidators&lt;/code&gt; option for &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;updateOne()&lt;/code&gt;, &lt;code&gt;updateMany()&lt;/code&gt;, or &lt;code&gt;findOneAndUpdate()&lt;/code&gt;. Be careful: update validators are off by default because they have several caveats.</source>
          <target state="translated">업데이트 유효성 검사기를 설정하려면 &lt;code&gt;update()&lt;/code&gt; , &lt;code&gt;updateOne()&lt;/code&gt; , &lt;code&gt;updateMany()&lt;/code&gt; 또는 &lt;code&gt;findOneAndUpdate()&lt;/code&gt; 대해 &lt;code&gt;runValidators&lt;/code&gt; 옵션을 설정하십시오 . 주의 : 업데이트 유효성 검사기는 몇 가지주의 사항이 있으므로 기본적으로 해제되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2573edd3c492b4a15104150a4f2afe3d563f1937" translate="yes" xml:space="preserve">
          <source>To use our schema definition, we need to convert our &lt;code&gt;blogSchema&lt;/code&gt; into a &lt;a href=&quot;models&quot;&gt;Model&lt;/a&gt; we can work with. To do so, we pass it into &lt;code&gt;mongoose.model(modelName, schema)&lt;/code&gt;:</source>
          <target state="translated">스키마 정의를 사용하려면 &lt;code&gt;blogSchema&lt;/code&gt; 를 작업 할 수 있는 &lt;a href=&quot;models&quot;&gt;모델&lt;/a&gt; 로 변환해야합니다 . 이를 위해 &lt;code&gt;mongoose.model(modelName, schema)&lt;/code&gt; 로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="8cb6976397a5eaebe09dcd536f28428f12e9e44a" translate="yes" xml:space="preserve">
          <source>To use transactions with Mongoose, you should use Mongoose &lt;code&gt;&amp;gt;= 5.2.0&lt;/code&gt;. To check your current version of Mongoose, run &lt;code&gt;npm list | grep &quot;mongoose&quot;&lt;/code&gt; or check the &lt;a href=&quot;http://mongoosejs.com/docs/api.html#mongoose_Mongoose-version&quot;&gt;&lt;code&gt;mongoose.version&lt;/code&gt; property&lt;/a&gt;.</source>
          <target state="translated">Mongoose와의 거래를 사용하려면 Mongoose &lt;code&gt;&amp;gt;= 5.2.0&lt;/code&gt; 을 사용해야합니다 . 현재 몽구스 버전을 확인하려면 &lt;code&gt;npm list | grep &quot;mongoose&quot;&lt;/code&gt; 하거나 &lt;a href=&quot;http://mongoosejs.com/docs/api.html#mongoose_Mongoose-version&quot;&gt; &lt;code&gt;mongoose.version&lt;/code&gt; 속성을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f317a99ee120dd54a1d67c05597617f83f16f70" translate="yes" xml:space="preserve">
          <source>Transactions are built on &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;MongoDB sessions&lt;/a&gt;. To start a transaction, you first need to call &lt;a href=&quot;https://mongoosejs.com/docs/api.html#startsession_startSession&quot;&gt;&lt;code&gt;startSession()&lt;/code&gt;&lt;/a&gt; and then call the session's &lt;code&gt;startTransaction()&lt;/code&gt; function. To execute an operation in a transaction, you need to pass the &lt;code&gt;session&lt;/code&gt; as an option.</source>
          <target state="translated">트랜잭션은 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;MongoDB 세션을&lt;/a&gt; 기반으로 합니다 . 트랜잭션을 시작하려면 먼저 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#startsession_startSession&quot;&gt; &lt;code&gt;startSession()&lt;/code&gt; &lt;/a&gt; 을 호출 한 다음 세션의 &lt;code&gt;startTransaction()&lt;/code&gt; 함수 를 호출해야 합니다. 트랜잭션에서 작업을 실행하려면 &lt;code&gt;session&lt;/code&gt; 을 옵션으로 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c37cd8811830ee25b283b35d48ab42c4352b906e" translate="yes" xml:space="preserve">
          <source>Transactions in Mongoose</source>
          <target state="translated">몽구스 거래</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="a418b410b86c514d1d07f113c6c43d1b10966b97" translate="yes" xml:space="preserve">
          <source>Transform functions receive three arguments</source>
          <target state="translated">변환 함수는 세 개의 인수를받습니다</target>
        </trans-unit>
        <trans-unit id="75dbe2ac7ac3b40e7f67bd0bfead0594b6c3fd48" translate="yes" xml:space="preserve">
          <source>Transformations may also be applied inline, overridding any transform set in the options:</source>
          <target state="translated">옵션에서 변환 세트를 덮어 쓰면서 변환을 인라인으로 적용 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d22611e06d42f8df5d5fa668bb464d1c5c3306f9" translate="yes" xml:space="preserve">
          <source>Transforms, like all of these options, are also available for &lt;code&gt;toJSON&lt;/code&gt;. See &lt;a href=&quot;https://thecodebarbarian.com/the-80-20-guide-to-json-stringify-in-javascript.html&quot;&gt;this guide to &lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; to learn why &lt;code&gt;toJSON()&lt;/code&gt; and &lt;code&gt;toObject()&lt;/code&gt; are separate functions.</source>
          <target state="translated">이러한 모든 옵션과 마찬가지로 변환도 &lt;code&gt;toJSON&lt;/code&gt; 에 사용할 수 있습니다 . &lt;code&gt;toJSON()&lt;/code&gt; 과 &lt;code&gt;toObject()&lt;/code&gt; 가 별도의 함수 인 이유를 알아 보려면 &lt;a href=&quot;https://thecodebarbarian.com/the-80-20-guide-to-json-stringify-in-javascript.html&quot;&gt;이 &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt; 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e33d75090c9e345b7e0473bd80fbd3e57ff5adb1" translate="yes" xml:space="preserve">
          <source>Translate any aliases fields/conditions so the final query or document object is pure</source>
          <target state="translated">최종 조회 또는 문서 오브젝트가 순수하도록 별명 필드 / 조건을 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="ee3fb11d05c90c37311491cf33008925b13b487f" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">Type:</target>
        </trans-unit>
        <trans-unit id="1f872258569d2bca294ff7592d0b9210146eb9f9" translate="yes" xml:space="preserve">
          <source>Types of Middleware</source>
          <target state="translated">미들웨어의 종류</target>
        </trans-unit>
        <trans-unit id="1c02047b4473ab1d57fc7225f4164216e6bcfaf2" translate="yes" xml:space="preserve">
          <source>Types:</source>
          <target state="translated">Types:</target>
        </trans-unit>
        <trans-unit id="33b56e80d042241991053a18ae184feef7acd408" translate="yes" xml:space="preserve">
          <source>Under the hood, &lt;code&gt;MyModel.exists({ answer: 42 })&lt;/code&gt; is equivalent to &lt;code&gt;MyModel.findOne({ answer: 42 }).select({ _id: 1 }).lean().then(doc =&amp;gt; !!doc)&lt;/code&gt;</source>
          <target state="translated">후드에서 &lt;code&gt;MyModel.exists({ answer: 42 })&lt;/code&gt; 는 &lt;code&gt;MyModel.findOne({ answer: 42 }).select({ _id: 1 }).lean().then(doc =&amp;gt; !!doc)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f958d35ca1a419d82c51cf6484ae06a35741ed40" translate="yes" xml:space="preserve">
          <source>Under the hood, after executing a query, Mongoose converts the query results from POJOs to Mongoose documents. If you turn on the &lt;code&gt;lean&lt;/code&gt; option, Mongoose skips this step.</source>
          <target state="translated">후드 아래에서 쿼리를 실행 한 후 Mongoose는 POJO의 쿼리 결과를 Mongoose 문서로 변환합니다. &lt;code&gt;lean&lt;/code&gt; 옵션 을 켜면 Mongoose는이 단계를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="cfc76074b55c7203e97ce652c1ad739534ba47d2" translate="yes" xml:space="preserve">
          <source>Understanding Virtuals in Mongoose</source>
          <target state="translated">몽구스의 가상 이해</target>
        </trans-unit>
        <trans-unit id="c68e9910fc08e953c2132ac9290a454cdc92ae3c" translate="yes" xml:space="preserve">
          <source>Unfortunately, &lt;code&gt;createCollection()&lt;/code&gt; cannot change an existing collection. For example, if you add &lt;code&gt;capped: 1024&lt;/code&gt; to your schema and the existing collection is not capped, &lt;code&gt;createCollection()&lt;/code&gt; will throw an error. Generally, &lt;code&gt;autoCreate&lt;/code&gt; should be &lt;code&gt;false&lt;/code&gt; for production environments.</source>
          <target state="translated">불행하게도 &lt;code&gt;createCollection()&lt;/code&gt; 은 기존 컬렉션을 변경할 수 없습니다. 예를 들어, &lt;code&gt;capped: 1024&lt;/code&gt; 를 스키마에 추가 하고 기존 컬렉션이 캡핑되지 않은 경우 &lt;code&gt;createCollection()&lt;/code&gt; 에서 오류가 발생합니다. 일반적으로 프로덕션 환경 에서는 &lt;code&gt;autoCreate&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="22f3a0b327709bca66129149ce80d7bec11710ee" translate="yes" xml:space="preserve">
          <source>Unless it is running on a query with &lt;code&gt;setDefaultsOnInsert&lt;/code&gt;, a default function's &lt;code&gt;this&lt;/code&gt; refers to the document.</source>
          <target state="translated">가있는 쿼리를 실행하지 않는 한 &lt;code&gt;setDefaultsOnInsert&lt;/code&gt; , 기본 기능의 &lt;code&gt;this&lt;/code&gt; 문서를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f48d59e925049c5ed0dcb4ab6c04ab78b083cfd2" translate="yes" xml:space="preserve">
          <source>Unless you're an advanced user, do &lt;strong&gt;not&lt;/strong&gt; instantiate this class directly. Use &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-cursor&quot;&gt;&lt;code&gt;Aggregate#cursor()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">고급 사용자가 &lt;strong&gt;아닌&lt;/strong&gt; 한이 클래스를 직접 인스턴스화 하지 &lt;strong&gt;마십시오&lt;/strong&gt; . 사용 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-cursor&quot;&gt; &lt;code&gt;Aggregate#cursor()&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="19bcadf4e9401a7b0f67a086e8e877ff855006e5" translate="yes" xml:space="preserve">
          <source>Unless you're an advanced user, do &lt;strong&gt;not&lt;/strong&gt; instantiate this class directly. Use &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt;&lt;code&gt;Query#cursor()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">고급 사용자가 &lt;strong&gt;아닌&lt;/strong&gt; 한이 클래스를 직접 인스턴스화 하지 &lt;strong&gt;마십시오&lt;/strong&gt; . 사용 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt; &lt;code&gt;Query#cursor()&lt;/code&gt; &lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="f498ce9757c3b16a87602a27135788e6cf50e3c5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;autoIndex&lt;/code&gt;, &lt;code&gt;autoCreate&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; by default. You can change this default by setting &lt;a href=&quot;api/mongoose#mongoose_Mongoose-set&quot;&gt;&lt;code&gt;mongoose.set('autoCreate', true);&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">달리 &lt;code&gt;autoIndex&lt;/code&gt; , &lt;code&gt;autoCreate&lt;/code&gt; 이다 &lt;code&gt;false&lt;/code&gt; 기본적으로. &lt;a href=&quot;api/mongoose#mongoose_Mongoose-set&quot;&gt; &lt;code&gt;mongoose.set('autoCreate', true);&lt;/code&gt; &lt;/a&gt; 를 설정하여이 기본값을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43a8c8e71d21cb23734cc0784e37c3c67cd35cb1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;projection()&lt;/code&gt;, the &lt;code&gt;select()&lt;/code&gt; function modifies the current projection in place. This function overwrites the existing projection.</source>
          <target state="translated">달리 &lt;code&gt;projection()&lt;/code&gt; 는 &lt;code&gt;select()&lt;/code&gt; 대신에 함수 수정 현재 투영. 이 기능은 기존 투영을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="fe29553f68fac1e044365bdff0d8e31717e0bfb4" translate="yes" xml:space="preserve">
          <source>Update Validators</source>
          <target state="translated">유효성 검사기 업데이트</target>
        </trans-unit>
        <trans-unit id="919c276760d64d0ec5eb6527cb7c4375352399bf" translate="yes" xml:space="preserve">
          <source>Update Validators Only Run For Some Operations</source>
          <target state="translated">일부 작업에 대해서만 업데이트 유효성 검사기 실행</target>
        </trans-unit>
        <trans-unit id="dfe1423888f5b1c21393f01a1161cfe6111d8357" translate="yes" xml:space="preserve">
          <source>Update Validators Only Run On Updated Paths</source>
          <target state="translated">업데이트 유효성 검사기는 업데이트 된 경로에서만 실행</target>
        </trans-unit>
        <trans-unit id="91235b030982be308d620f905018cff43cd731e1" translate="yes" xml:space="preserve">
          <source>Update Validators and &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">업데이트 검사기 및 &lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1d4071cc605da1abb2adfa96ff1d84a75ee8326" translate="yes" xml:space="preserve">
          <source>Updates one document in the database without returning it.</source>
          <target state="translated">데이터베이스에서 하나의 문서를 반환하지 않고 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">Updating</target>
        </trans-unit>
        <trans-unit id="99fa3772a0220aadfec7971e2d5ace2a583bf7dd" translate="yes" xml:space="preserve">
          <source>Upper &amp;laquo;[Array]&amp;raquo; Right Coords</source>
          <target state="translated">상단&amp;laquo;[배열]&amp;raquo;오른쪽 좌표</target>
        </trans-unit>
        <trans-unit id="4df13ec4234f96a6f1f82fccdde77669b4c4b95c" translate="yes" xml:space="preserve">
          <source>Usage Notes</source>
          <target state="translated">사용법 메모</target>
        </trans-unit>
        <trans-unit id="bf370c8be14aec5bf067a647eb5d59e529d78b53" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;replaceOne()&lt;/code&gt; if you want to overwrite an entire document rather than using &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/model-data-for-atomic-operations/#pattern&quot;&gt;atomic&lt;/a&gt; operators like &lt;code&gt;$set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$set&lt;/code&gt; 와 같은 &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/model-data-for-atomic-operations/#pattern&quot;&gt;원자&lt;/a&gt; 연산자를 사용하지 않고 전체 문서를 덮어 &lt;code&gt;replaceOne()&lt;/code&gt; 려면 replaceOne ()을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7468b2b7e432f5b2e4f37f4d0c55b08b3d7656b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;replaceOne()&lt;/code&gt; if you want to overwrite an entire document rather than using atomic operators like &lt;code&gt;$set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$set&lt;/code&gt; 와 같은 원자 연산자를 사용하지 않고 전체 문서를 덮어 &lt;code&gt;replaceOne()&lt;/code&gt; 려면 replaceOne ()을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="2ac0f7588844d4da651d1086bf632657dc209615" translate="yes" xml:space="preserve">
          <source>Users looking to master MongoDB schema design in Node.js should look into &lt;a href=&quot;http://bit.ly/mongodb-schema-design&quot;&gt;&lt;em&gt;The Little MongoDB Schema Design Book&lt;/em&gt;&lt;/a&gt; by Christian Kvalheim, the original author of the &lt;a href=&quot;http://npmjs.com/package/mongodb&quot;&gt;MongoDB Node.js driver&lt;/a&gt;. This book shows you how to implement performant schemas for a laundry list of use cases, including ecommerce, wikis, and appointment bookings.</source>
          <target state="translated">Node.js에서 MongoDB 스키마 디자인을 마스터하려는 사용자 는 &lt;a href=&quot;http://npmjs.com/package/mongodb&quot;&gt;MongoDB Node.js 드라이버&lt;/a&gt; 의 원래 작성자 인 Christian Kvalheim의 &lt;a href=&quot;http://bit.ly/mongodb-schema-design&quot;&gt;&lt;em&gt;The Little MongoDB Schema Design Book&lt;/em&gt;&lt;/a&gt; 을 참조하십시오 . 이 책은 전자 상거래, Wiki 및 약속 예약을 포함한 사용 사례의 세탁 목록에 대한 성능 스키마를 구현하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b27c563b030d5f078e0efd6b6e084bc0ca75bf2b" translate="yes" xml:space="preserve">
          <source>Users looking to master MongoDB schema design in Node.js should look into &lt;a href=&quot;https://bit.ly/mongodb-schema-design&quot;&gt;&lt;em&gt;The Little MongoDB Schema Design Book&lt;/em&gt;&lt;/a&gt; by Christian Kvalheim, the original author of the &lt;a href=&quot;https://npmjs.com/package/mongodb&quot;&gt;MongoDB Node.js driver&lt;/a&gt;. This book shows you how to implement performant schemas for a laundry list of use cases, including ecommerce, wikis, and appointment bookings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cce20dae96abbe9087ae2d931cecc06aca92c38" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;lean()&lt;/code&gt; bypasses all Mongoose features, including &lt;a href=&quot;virtuals&quot;&gt;virtuals&lt;/a&gt;, &lt;a href=&quot;getters-setters&quot;&gt;getters/setters&lt;/a&gt;, and &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-default&quot;&gt;defaults&lt;/a&gt;. If you want to use these features with &lt;code&gt;lean()&lt;/code&gt;, you need to use the corresponding plugin:</source>
          <target state="translated">&lt;code&gt;lean()&lt;/code&gt; 사용하면 &lt;a href=&quot;virtuals&quot;&gt;virtuals&lt;/a&gt; , &lt;a href=&quot;getters-setters&quot;&gt;getters / setters&lt;/a&gt; 및 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-default&quot;&gt;defaults를&lt;/a&gt; 포함한 모든 Mongoose 기능이 무시됩니다 . 이 기능을 &lt;code&gt;lean()&lt;/code&gt; 과 함께 사용하려면 해당 플러그인을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="32cb247f00072e3c5aaaff1b90c697f3651c45fb" translate="yes" xml:space="preserve">
          <source>Using Lean</source>
          <target state="translated">린 사용</target>
        </trans-unit>
        <trans-unit id="e9b311d23dd9b58e7fa6da00429aabb2946648cc" translate="yes" xml:space="preserve">
          <source>Using discriminators with &lt;code&gt;Model.create()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Model.create()&lt;/code&gt; 와 함께 판별 자를 사용</target>
        </trans-unit>
        <trans-unit id="eb011281310a8377986514d2a678438ed864612e" translate="yes" xml:space="preserve">
          <source>Using this exposed access to the &lt;code&gt;Mixed&lt;/code&gt; SchemaType, we can use them in our schema.</source>
          <target state="translated">&lt;code&gt;Mixed&lt;/code&gt; 스키마 유형에 대한 노출 된 액세스를 사용하여 스키마에서이를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="107b78f65b4ad3113b241f9fece47478eb30950d" translate="yes" xml:space="preserve">
          <source>Using this exposed access to the &lt;code&gt;ObjectId&lt;/code&gt; type, we can construct ids on demand.</source>
          <target state="translated">&lt;code&gt;ObjectId&lt;/code&gt; 유형에 대한 이러한 노출 된 액세스를 사용하여 요청시 ID를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14e07bf1a08c6238fcea3aef0b467a87a7c35029" translate="yes" xml:space="preserve">
          <source>Valid options</source>
          <target state="translated">유효한 옵션</target>
        </trans-unit>
        <trans-unit id="850c962c3f063b586578621ee12bbb84d6f38bb7" translate="yes" xml:space="preserve">
          <source>Valid options:</source>
          <target state="translated">유효한 옵션 :</target>
        </trans-unit>
        <trans-unit id="f61e59d62b7eeb5e38a0d9a680e088c1afbb6f1f" translate="yes" xml:space="preserve">
          <source>Validating</source>
          <target state="translated">Validating</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="21e01fb19ea64886f4d64d5a6d8f7601d4d3b1b7" translate="yes" xml:space="preserve">
          <source>Validation Errors</source>
          <target state="translated">유효성 검사 오류</target>
        </trans-unit>
        <trans-unit id="16759be08d55e55382dc52d7900468ce5c715ff7" translate="yes" xml:space="preserve">
          <source>Validation is &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;. Mongoose registers validation as a &lt;code&gt;pre('save')&lt;/code&gt; hook on every schema by default.</source>
          <target state="translated">유효성 검사는 &lt;a href=&quot;middleware&quot;&gt;미들웨어&lt;/a&gt; 입니다. Mongoose는 유효성 검사를 기본적으로 모든 스키마 에서 &lt;code&gt;pre('save')&lt;/code&gt; 후크 로 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="bc4b29cf3e49405bb734572c4492e00be54bd5f8" translate="yes" xml:space="preserve">
          <source>Validation is asynchronously recursive; when you call &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt;Model#save&lt;/a&gt;, sub-document validation is executed as well. If an error occurs, your &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt;Model#save&lt;/a&gt; callback receives it</source>
          <target state="translated">유효성 검사는 비동기 적으로 재귀 적입니다. &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt;Model # save&lt;/a&gt; 를 호출하면 하위 문서 유효성 검사도 실행됩니다. 오류가 발생하면 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt;Model # save&lt;/a&gt; 콜백 이 오류를 수신합니다</target>
        </trans-unit>
        <trans-unit id="0c6f3056e69408a4557ed6188d986eb9fd974fb6" translate="yes" xml:space="preserve">
          <source>Validation is customizable</source>
          <target state="translated">검증은 사용자 정의 가능</target>
        </trans-unit>
        <trans-unit id="85f9fa48e6114a46e7b68868fdd2230765e4afc1" translate="yes" xml:space="preserve">
          <source>Validation is defined in the &lt;a href=&quot;schematypes&quot;&gt;SchemaType&lt;/a&gt;</source>
          <target state="translated">유효성 검사는 &lt;a href=&quot;schematypes&quot;&gt;SchemaType에&lt;/a&gt; 정의되어 있습니다</target>
        </trans-unit>
        <trans-unit id="2a7bf7d460707439b5db653d8388dd40fa4bd0fd" translate="yes" xml:space="preserve">
          <source>Validation occurs &lt;code&gt;pre('save')&lt;/code&gt; or whenever you manually execute &lt;a href=&quot;#document_Document-validate&quot;&gt;document#validate&lt;/a&gt;.</source>
          <target state="translated">유효성 검사는 &lt;code&gt;pre('save')&lt;/code&gt; 또는 &lt;a href=&quot;#document_Document-validate&quot;&gt;document # validate&lt;/a&gt; 를 수동으로 실행할 때마다 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="be38b272d29b2d69a9cec2a73673ca128a2e1b59" translate="yes" xml:space="preserve">
          <source>Validators always receive the value to validate as their first argument and must return &lt;code&gt;Boolean&lt;/code&gt;. Returning &lt;code&gt;false&lt;/code&gt; or throwing an error means validation failed.</source>
          <target state="translated">유효성 검사기는 항상 첫 번째 인수로 유효성을 검사 할 값을 받고 &lt;code&gt;Boolean&lt;/code&gt; 을 반환해야합니다 . &lt;code&gt;false&lt;/code&gt; 를 반환 하거나 오류를 발생 시키면 유효성 검사가 실패했음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="eb18438fb4b13d70314e85b1df697311f2ec4c22" translate="yes" xml:space="preserve">
          <source>Validators are not run on undefined values. The only exception is the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-required&quot;&gt;&lt;code&gt;required&lt;/code&gt; validator&lt;/a&gt;.</source>
          <target state="translated">유효성 검사기는 정의되지 않은 값에서 실행되지 않습니다. 유일한 예외는있다 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-required&quot;&gt; &lt;code&gt;required&lt;/code&gt; 검사기&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="572df22101374201e99260f1be21b4a44a8039c3" translate="yes" xml:space="preserve">
          <source>Values are cast to their appropriate types when using the findAndModify helpers. However, the below are not executed by default.</source>
          <target state="translated">findAndModify 헬퍼를 사용할 때 값이 적절한 유형으로 캐스트됩니다. 그러나 아래는 기본적으로 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d369480ef0f22b857ab064743290d4ceefa1a2f0" translate="yes" xml:space="preserve">
          <source>Version Requirements</source>
          <target state="translated">버전 요구 사항</target>
        </trans-unit>
        <trans-unit id="60f764dd6eac3ff8df0c9db4cade29426f8437f2" translate="yes" xml:space="preserve">
          <source>Virtual Setters</source>
          <target state="translated">가상 세터</target>
        </trans-unit>
        <trans-unit id="c1d8d66b7276e0c56d83ab3f0b77e81cf4f5c461" translate="yes" xml:space="preserve">
          <source>Virtual property setters are applied before other validation. So the example above would still work even if the &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; name fields were required.</source>
          <target state="translated">가상 속성 설정 기는 다른 유효성 검사 전에 적용됩니다. 위의 예는 여전히에서도 작동 할 수 있도록하는 경우 &lt;code&gt;first&lt;/code&gt; 와 &lt;code&gt;last&lt;/code&gt; 이름 필드가 필요했다.</target>
        </trans-unit>
        <trans-unit id="6adcd98f848658b51e083c4df470415a71eb8de7" translate="yes" xml:space="preserve">
          <source>VirtualType</source>
          <target state="translated">VirtualType</target>
        </trans-unit>
        <trans-unit id="5ab996c8a324b46008870fd5e708d6cb38862b11" translate="yes" xml:space="preserve">
          <source>VirtualType constructor</source>
          <target state="translated">VirtualType 생성자</target>
        </trans-unit>
        <trans-unit id="53a45986286f301b870eb427fb80c94cb37af984" translate="yes" xml:space="preserve">
          <source>VirtualType()</source>
          <target state="translated">VirtualType()</target>
        </trans-unit>
        <trans-unit id="bebd6521d66dd553423b34f897a6ce8e6b4eb066" translate="yes" xml:space="preserve">
          <source>VirtualType, &amp;laquo;Function(Any|&amp;raquo; Document)} fn</source>
          <target state="translated">VirtualType,&amp;laquo;함수 (임의 |&amp;raquo;문서)} fn</target>
        </trans-unit>
        <trans-unit id="29b1c8cb7dcc8269fcc59d0c38e88b7e76f4b572" translate="yes" xml:space="preserve">
          <source>VirtualType.prototype.applyGetters()</source>
          <target state="translated">VirtualType.prototype.applyGetters()</target>
        </trans-unit>
        <trans-unit id="cb7d4c66d75f763a52b3bc2968cb03567a15d5e5" translate="yes" xml:space="preserve">
          <source>VirtualType.prototype.applySetters()</source>
          <target state="translated">VirtualType.prototype.applySetters()</target>
        </trans-unit>
        <trans-unit id="15542fbc500e2b30049a7629cffdc3ec6fc4e3ed" translate="yes" xml:space="preserve">
          <source>VirtualType.prototype.get()</source>
          <target state="translated">VirtualType.prototype.get()</target>
        </trans-unit>
        <trans-unit id="d78a12c09d460d927a67f5d8733d87e71c676e14" translate="yes" xml:space="preserve">
          <source>VirtualType.prototype.set()</source>
          <target state="translated">VirtualType.prototype.set()</target>
        </trans-unit>
        <trans-unit id="3bd99de80f5684605609488cb06f7441d56c9c1a" translate="yes" xml:space="preserve">
          <source>Virtuals</source>
          <target state="translated">Virtuals</target>
        </trans-unit>
        <trans-unit id="652f55f62acf130a0e4c59cf55f93f9a0b954359" translate="yes" xml:space="preserve">
          <source>Virtuals are properties on Mongoose documents. If you use the &lt;a href=&quot;lean&quot;&gt;lean option&lt;/a&gt;, that means your queries return POJOs rather than full Mongoose documents. That means no virtuals if you use &lt;a href=&quot;../api/query#query_Query-lean&quot;&gt;&lt;code&gt;lean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">가상은 몽구스 문서의 속성입니다. &lt;a href=&quot;lean&quot;&gt;lean 옵션&lt;/a&gt; 을 사용하면 쿼리에서 전체 몽구스 문서가 아닌 POJO를 반환합니다. &lt;a href=&quot;../api/query#query_Query-lean&quot;&gt; &lt;code&gt;lean()&lt;/code&gt; &lt;/a&gt; 을 사용하면 가상이 없음을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="177a2737f397e7e152f9650ce782783a385808a1" translate="yes" xml:space="preserve">
          <source>Virtuals in JSON</source>
          <target state="translated">JSON의 가상</target>
        </trans-unit>
        <trans-unit id="60d505ccf3768856eb209dd4fc09403370ed70db" translate="yes" xml:space="preserve">
          <source>Virtuals in Mongoose Schemas</source>
          <target state="translated">몽구스 스키마의 가상</target>
        </trans-unit>
        <trans-unit id="6290a79065f5bc9c4f396a47f358f71df9044e59" translate="yes" xml:space="preserve">
          <source>Virtuals with Lean</source>
          <target state="translated">린과 가상</target>
        </trans-unit>
        <trans-unit id="baf74ab239a3c2e474e039f805d170fa16556a2d" translate="yes" xml:space="preserve">
          <source>Virtualtype</source>
          <target state="translated">Virtualtype</target>
        </trans-unit>
        <trans-unit id="10ebb6bb4e39c19e28483d39ded52467ae138f86" translate="yes" xml:space="preserve">
          <source>Want to learn how to check whether your favorite npm modules work with async/await without cobbling together contradictory answers from Google and Stack Overflow? Chapter 4 of Mastering Async/Await explains the basic principles for determining whether frameworks like React and Mongoose support async/await. &lt;a href=&quot;http://asyncawait.net/?utm_source=mongoosejs&amp;amp;utm_campaign=promises&quot;&gt;Get your copy!&lt;/a&gt;</source>
          <target state="translated">Google과 스택 오버플로의 모순 된 답변을 함께 묶지 않고 좋아하는 npm 모듈이 async / await와 작동하는지 확인하는 방법을 배우고 싶습니까? Async / Await 마스터 링의 4 장에서는 React 및 Mongoose와 같은 프레임 워크가 async / await를 지원하는지 여부를 결정하는 기본 원칙에 대해 설명합니다. &lt;a href=&quot;http://asyncawait.net/?utm_source=mongoosejs&amp;amp;utm_campaign=promises&quot;&gt;사본을 받으세요!&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1006170cba9af896712d2ef66b255393906716d6" translate="yes" xml:space="preserve">
          <source>Want to register a plugin for all schemas? The mongoose singleton has a &lt;code&gt;.plugin()&lt;/code&gt; function that registers a plugin for every schema. For example:</source>
          <target state="translated">모든 스키마에 플러그인을 등록하고 싶습니까? 몽구스 싱글 톤에는 모든 스키마에 대한 플러그인을 등록하는 &lt;code&gt;.plugin()&lt;/code&gt; 함수가 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="619b47f13cd1b3c39ba4ad14f2685ef7774d3ba9" translate="yes" xml:space="preserve">
          <source>We have a pending connection to the test database running on localhost. We now need to get notified if we connect successfully or if a connection error occurs:</source>
          <target state="translated">localhost에서 실행중인 테스트 데이터베이스에 연결이 보류 중입니다. 성공적으로 연결되거나 연결 오류가 발생하면 알림을 받아야합니다.</target>
        </trans-unit>
        <trans-unit id="bf367b581e27b8df47f8b2d1308c522b0c58abeb" translate="yes" xml:space="preserve">
          <source>We have talking kittens! But we still haven't saved anything to MongoDB. Each document can be saved to the database by calling its &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt;save&lt;/a&gt; method. The first argument to the callback will be an error if any occurred.</source>
          <target state="translated">우리는 고양이를 이야기하고 있습니다! 그러나 우리는 여전히 MongoDB에 아무것도 저장하지 않았습니다. &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-save&quot;&gt;save&lt;/a&gt; 메소드 를 호출하여 각 문서를 데이터베이스에 저장할 수 있습니다 . 콜백에 대한 첫 번째 인수는 발생한 경우 오류입니다.</target>
        </trans-unit>
        <trans-unit id="43e6b5e265d60bce5cb476a1d2897fdb521b20cf" translate="yes" xml:space="preserve">
          <source>We just added last-modified behavior to both our &lt;code&gt;Game&lt;/code&gt; and &lt;code&gt;Player&lt;/code&gt; schemas and declared an index on the &lt;code&gt;lastMod&lt;/code&gt; path of our Games to boot. Not bad for a few lines of code.</source>
          <target state="translated">방금 &lt;code&gt;Game&lt;/code&gt; 과 &lt;code&gt;Player&lt;/code&gt; 스키마 모두에 마지막으로 수정 된 동작을 추가하고 게임 의 &lt;code&gt;lastMod&lt;/code&gt; 경로 에 대한 색인을 선언했습니다 . 몇 줄의 코드에는 나쁘지 않습니다.</target>
        </trans-unit>
        <trans-unit id="212417e22893a228e20c575a17d210436169b802" translate="yes" xml:space="preserve">
          <source>We just logged all of the kittens in our db to the console. If we want to filter our kittens by name, Mongoose supports MongoDBs rich &lt;a href=&quot;queries&quot;&gt;querying&lt;/a&gt; syntax.</source>
          <target state="translated">우리는 방금 DB의 모든 새끼 고양이를 콘솔에 기록했습니다. 새끼 고양이를 이름으로 필터링하려면 Mongoose가 MongoDB의 풍부한 &lt;a href=&quot;queries&quot;&gt;쿼리&lt;/a&gt; 구문을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="e8f9bff32b562d5ee3873953d1e8e9bbf0d1657d" translate="yes" xml:space="preserve">
          <source>We may find however, if we use the &lt;code&gt;author&lt;/code&gt; object, we are unable to get a list of the stories. This is because no &lt;code&gt;story&lt;/code&gt; objects were ever 'pushed' onto &lt;code&gt;author.stories&lt;/code&gt;.</source>
          <target state="translated">그러나 &lt;code&gt;author&lt;/code&gt; 개체를 사용 하면 스토리 목록을 얻을 수 없습니다. &lt;code&gt;story&lt;/code&gt; 객체가 &lt;code&gt;author.stories&lt;/code&gt; 에 '푸시'된 적이 없기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="925cfa7a8c1834ebaa27192ca5b206e3f34dc513" translate="yes" xml:space="preserve">
          <source>We may need to perform a transformation of the resulting object based on some criteria, say to remove some sensitive information or return a custom object. In this case we set the optional &lt;code&gt;transform&lt;/code&gt; function.</source>
          <target state="translated">민감한 정보를 제거하거나 사용자 정의 객체를 반환하는 것과 같은 일부 기준에 따라 결과 객체의 변환을 수행해야 할 수도 있습니다. 이 경우 선택적 &lt;code&gt;transform&lt;/code&gt; 기능을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="1bca032db12a6aa87716df081ec4b68b678e2f38" translate="yes" xml:space="preserve">
          <source>We no longer have a pre-compiled version of mongoose for the browser. If you want to use mongoose schemas in the browser, you need to build your own bundle with browserify/webpack.</source>
          <target state="translated">더 이상 브라우저 용으로 사전 컴파일 된 몽구스 버전이 없습니다. 브라우저에서 몽구스 스키마를 사용하려면 browserify / webpack을 사용하여 고유 한 번들을 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="811e095c5174ddeb5e27c108fa370a8684e94d5e" translate="yes" xml:space="preserve">
          <source>What If There's No Foreign Document?</source>
          <target state="translated">외국 서류가없는 경우 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="098da26c7424264656fca48d304bd0fc645e3485" translate="yes" xml:space="preserve">
          <source>What if we only want a few specific fields returned for the populated documents? This can be accomplished by passing the usual &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-select&quot;&gt;field name syntax&lt;/a&gt; as the second argument to the populate method:</source>
          <target state="translated">채워진 문서에 대해 몇 개의 특정 필드 만 반환하려면 어떻게해야합니까? 이는 일반적인 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-select&quot;&gt;필드 이름 구문&lt;/a&gt; 을 두 번째 인수로 populate 메소드 에 전달하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1cad2223707bc15e56ae52ead49d25a991a74495" translate="yes" xml:space="preserve">
          <source>What if we wanted to populate multiple paths at the same time?</source>
          <target state="translated">여러 경로를 동시에 채우려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="8aad4f908677c3961387545372f642a9cf1a8aa5" translate="yes" xml:space="preserve">
          <source>What if we wanted to populate our fans array based on their age and select just their names?</source>
          <target state="translated">연령을 기준으로 팬 배열을 채우고 이름 만 선택하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="55fbe6043738a30f2e0ade69176d437db2bb1c98" translate="yes" xml:space="preserve">
          <source>What is a SchemaType?</source>
          <target state="translated">SchemaType이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="c265206f825ceddca490bf2edb38b96ddcda4807" translate="yes" xml:space="preserve">
          <source>What is a Subdocument?</source>
          <target state="translated">하위 문서 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="0af5c9cc9c4a891b199092c55e34d1acccfd46d7" translate="yes" xml:space="preserve">
          <source>When a Query is passed, conditions, field selection and options are merged.</source>
          <target state="translated">쿼리가 전달되면 조건, 필드 선택 및 옵션이 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="33b286afd79d82387fed828ac3a9938b4697ac1a" translate="yes" xml:space="preserve">
          <source>When called with one argument, the most recent path passed to &lt;code&gt;where()&lt;/code&gt; is used.</source>
          <target state="translated">하나의 인수로 호출하면 &lt;code&gt;where()&lt;/code&gt; 전달 된 가장 최근 경로 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="35de850a28a00849504093027a7db7a259f541c9" translate="yes" xml:space="preserve">
          <source>When executing a query with a &lt;code&gt;callback&lt;/code&gt; function, you specify your query as a JSON document. The JSON document's syntax is the same as the &lt;a href=&quot;http://docs.mongodb.org/manual/tutorial/query-documents/&quot;&gt;MongoDB shell&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 함수 로 쿼리를 실행할 때 쿼리를 JSON 문서로 지정합니다. JSON 문서의 구문은 &lt;a href=&quot;http://docs.mongodb.org/manual/tutorial/query-documents/&quot;&gt;MongoDB 쉘&lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b048cbc12ba06299dddf761ea21fcfabdecbb091" translate="yes" xml:space="preserve">
          <source>When to Use Lean</source>
          <target state="translated">린 사용시기</target>
        </trans-unit>
        <trans-unit id="f808f7a96ba0df2cfff7083d9147827689f5f9c4" translate="yes" xml:space="preserve">
          <source>When using string syntax, prefixing a path with &lt;code&gt;-&lt;/code&gt; will flag that path as excluded. When a path does not have the &lt;code&gt;-&lt;/code&gt; prefix, it is included. Lastly, if a path is prefixed with &lt;code&gt;+&lt;/code&gt;, it forces inclusion of the path, which is useful for paths excluded at the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-select&quot;&gt;schema level&lt;/a&gt;.</source>
          <target state="translated">문자열 구문을 사용할 때 경로 앞에 &lt;code&gt;-&lt;/code&gt; 를 붙이면 해당 경로가 제외 된 것으로 플래그가 지정됩니다. 경로에 &lt;code&gt;-&lt;/code&gt; 접두사 가 없으면 경로 가 포함됩니다. 마지막으로 경로 앞에 &lt;code&gt;+&lt;/code&gt; 가 붙으면 경로를 강제로 포함 시키므로 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schematype_SchemaType-select&quot;&gt;스키마 수준&lt;/a&gt; 에서 제외 된 경로에 유용 합니다 .</target>
        </trans-unit>
        <trans-unit id="7504c55747dd65991a388293fae8eb2b654b7cd2" translate="yes" xml:space="preserve">
          <source>When using update validators, &lt;code&gt;required&lt;/code&gt; validators &lt;strong&gt;only&lt;/strong&gt; fail when you try to explicitly &lt;code&gt;$unset&lt;/code&gt; the key.</source>
          <target state="translated">업데이트 유효성 검사기를 사용하는 경우, &lt;code&gt;required&lt;/code&gt; 검증자는 &lt;strong&gt;에만&lt;/strong&gt; 명시 적으로 시도 할 때 실패 &lt;code&gt;$unset&lt;/code&gt; 키를 누릅니다.</target>
        </trans-unit>
        <trans-unit id="843a11d7cd845d3a33f79c37e3463a840286ae75" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;mongoose.model()&lt;/code&gt; on a schema, Mongoose &lt;em&gt;compiles&lt;/em&gt; a model for you.</source>
          <target state="translated">스키마에서 &lt;code&gt;mongoose.model()&lt;/code&gt; 을 호출하면 Mongoose 가 모델을 &lt;em&gt;컴파일&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f739475357323d20db6c8b466c7db1a461d7f24e" translate="yes" xml:space="preserve">
          <source>When you enable &lt;code&gt;useUnifiedTopology&lt;/code&gt;, please remove those options from your &lt;a href=&quot;api/mongoose#mongoose_Mongoose-connect&quot;&gt;&lt;code&gt;mongoose.connect()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;api/mongoose#mongoose_Mongoose-createConnection&quot;&gt;&lt;code&gt;createConnection()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">&lt;code&gt;useUnifiedTopology&lt;/code&gt; 를 활성화하면 &lt;a href=&quot;api/mongoose#mongoose_Mongoose-connect&quot;&gt; &lt;code&gt;mongoose.connect()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;api/mongoose#mongoose_Mongoose-createConnection&quot;&gt; &lt;code&gt;createConnection()&lt;/code&gt; &lt;/a&gt; 호출 에서 해당 옵션을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="161c3775ea1434d4730085826b653a04d6e2f5b1" translate="yes" xml:space="preserve">
          <source>When you execute the query using &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-exec&quot;&gt;&lt;code&gt;Query#exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-then&quot;&gt;&lt;code&gt;Query#then()&lt;/code&gt;&lt;/a&gt;, Mongoose &lt;em&gt;casts&lt;/em&gt; the filter to match your schema.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-exec&quot;&gt; &lt;code&gt;Query#exec()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-then&quot;&gt; &lt;code&gt;Query#then()&lt;/code&gt; &lt;/a&gt; 사용하여 쿼리 를 실행하면 Mongoose가 스키마와 일치하도록 필터를 &lt;em&gt;캐스팅&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a46bfa36d1f227ba926cb507213be35fc0864eae" translate="yes" xml:space="preserve">
          <source>When you load documents from MongoDB using model functions like &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.findOne&quot;&gt;&lt;code&gt;findOne()&lt;/code&gt;&lt;/a&gt;, you get a Mongoose document back.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.findOne&quot;&gt; &lt;code&gt;findOne()&lt;/code&gt; &lt;/a&gt; 과 같은 모델 함수를 사용하여 MongoDB에서 문서를로드 하면 Mongoose 문서가 다시 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="d2ef74e3587640e676f5650ec286bc16df4757c3" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;Model.create()&lt;/code&gt;, mongoose will pull the correct type from the discriminator key for you.</source>
          <target state="translated">&lt;code&gt;Model.create()&lt;/code&gt; 를 사용하면 mongoose가 판별 기 키에서 올바른 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0df7053e1e8f80e95850100fb1e3418616aa607e" translate="yes" xml:space="preserve">
          <source>When your application starts up, Mongoose automatically calls &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#db.collection.createIndex&quot;&gt;&lt;code&gt;createIndex&lt;/code&gt;&lt;/a&gt; for each defined index in your schema. Mongoose will call &lt;code&gt;createIndex&lt;/code&gt; for each index sequentially, and emit an 'index' event on the model when all the &lt;code&gt;createIndex&lt;/code&gt; calls succeeded or when there was an error. While nice for development, it is recommended this behavior be disabled in production since index creation can cause a &lt;a href=&quot;https://docs.mongodb.com/manual/core/index-creation/#index-build-impact-on-database-performance&quot;&gt;significant performance impact&lt;/a&gt;. Disable the behavior by setting the &lt;code&gt;autoIndex&lt;/code&gt; option of your schema to &lt;code&gt;false&lt;/code&gt;, or globally on the connection by setting the option &lt;code&gt;autoIndex&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">애플리케이션이 시작되면 Mongoose는 스키마에서 정의 된 각 인덱스에 대해 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/method/db.collection.createIndex/#db.collection.createIndex&quot;&gt; &lt;code&gt;createIndex&lt;/code&gt; &lt;/a&gt; 를 자동으로 호출 합니다. Mongoose는 각 인덱스에 대해 &lt;code&gt;createIndex&lt;/code&gt; 를 순차적으로 호출 하고 모든 &lt;code&gt;createIndex&lt;/code&gt; 호출이 성공하거나 오류가 발생 하면 모델에서 'index'이벤트를 생성합니다 . 개발에는 좋지만 인덱스 생성으로 인해 &lt;a href=&quot;https://docs.mongodb.com/manual/core/index-creation/#index-build-impact-on-database-performance&quot;&gt;성능&lt;/a&gt; 이 크게 저하 될 수 있으므로 프로덕션 환경에서는이 동작을 비활성화하는 것이 좋습니다 . 설정에 따라 동작을 해제 &lt;code&gt;autoIndex&lt;/code&gt; 에 스키마의 옵션을 &lt;code&gt;false&lt;/code&gt; 옵션 설정하여 연결에 전 세계적으로, 또는 &lt;code&gt;autoIndex&lt;/code&gt; 에 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b7063ba415d912749d63590e5eaca2e3f392ca9" translate="yes" xml:space="preserve">
          <source>Whether to include or exclude this path by default when loading documents using &lt;code&gt;find()&lt;/code&gt;, &lt;code&gt;findOne()&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;find()&lt;/code&gt; , &lt;code&gt;findOne()&lt;/code&gt; 등을 사용하여 문서를로드 할 때 기본적으로이 경로를 포함할지 또는 제외할지 여부</target>
        </trans-unit>
        <trans-unit id="96cadc50c41cb616407a7f453a5588a0ff2e4747" translate="yes" xml:space="preserve">
          <source>With Mongoose Documents and &lt;code&gt;save()&lt;/code&gt;</source>
          <target state="translated">몽구스 문서와 &lt;code&gt;save()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81ef6fa71a51c71865d6dbaad3d0129a3585ba71" translate="yes" xml:space="preserve">
          <source>With Mongoose, everything is derived from a &lt;a href=&quot;guide&quot;&gt;Schema&lt;/a&gt;. Let's get a reference to it and define our kittens.</source>
          <target state="translated">몽구스를 사용하면 모든 것이 &lt;a href=&quot;guide&quot;&gt;스키마&lt;/a&gt; 에서 파생됩니다 . 그것에 대한 참조를 얻고 새끼 고양이를 정의합시다.</target>
        </trans-unit>
        <trans-unit id="635beaea38823de52fe377e65d5aa366b34c40c0" translate="yes" xml:space="preserve">
          <source>With the Aggregation Framework</source>
          <target state="translated">집계 프레임 워크</target>
        </trans-unit>
        <trans-unit id="dcf0912215c8eae2fe2e2f14fbf664356b1cd023" translate="yes" xml:space="preserve">
          <source>With transformations we can do a lot more than remove properties. We can even return completely new customized objects:</source>
          <target state="translated">변환을 사용하면 속성을 제거하는 것 이상을 할 수 있습니다. 완전히 새로운 맞춤형 객체를 반환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="223e719046b7b7fd5730d36e83d8efc28ad995c5" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/pop&quot;&gt;&lt;code&gt;Array#pop&lt;/code&gt;&lt;/a&gt; with proper change tracking.</source>
          <target state="translated">적절한 변경 내용 추적으로 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/pop&quot;&gt; &lt;code&gt;Array#pop&lt;/code&gt; &lt;/a&gt; 을 래핑합니다 .</target>
        </trans-unit>
        <trans-unit id="6f05b60989655081f776fae881204fdd9edcd921" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;&lt;code&gt;Array#push&lt;/code&gt;&lt;/a&gt; with proper change tracking.</source>
          <target state="translated">적절한 변경 내용 추적으로 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push&quot;&gt; &lt;code&gt;Array#push&lt;/code&gt; &lt;/a&gt; 를 래핑합니다 .</target>
        </trans-unit>
        <trans-unit id="530cc76906b1f03637421b8a98c61c8ff30af31d" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;&lt;code&gt;Array#sort&lt;/code&gt;&lt;/a&gt; with proper change tracking.</source>
          <target state="translated">적절한 변경 내용 추적으로 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt; &lt;code&gt;Array#sort&lt;/code&gt; &lt;/a&gt; 를 래핑합니다 .</target>
        </trans-unit>
        <trans-unit id="3e830477a9490dca27f3f55d817d59bc6087fdcb" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;&lt;code&gt;Array#splice&lt;/code&gt;&lt;/a&gt; with proper change tracking and casting.</source>
          <target state="translated">적절한 변경 내용 추적 및 캐스팅으로 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt; &lt;code&gt;Array#splice&lt;/code&gt; &lt;/a&gt; 를 래핑 합니다.</target>
        </trans-unit>
        <trans-unit id="6d3c469ae9cf1b84af090e629c35851abb00a865" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt;&lt;code&gt;Array#shift&lt;/code&gt;&lt;/a&gt; with proper change tracking.</source>
          <target state="translated">적절한 변경 추적으로 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt; &lt;code&gt;Array#shift&lt;/code&gt; &lt;/a&gt; 를 래핑합니다 .</target>
        </trans-unit>
        <trans-unit id="d4baaa7e489ceaa4f33ebb94e4efe046fae76844" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt;&lt;code&gt;Array#unshift&lt;/code&gt;&lt;/a&gt; with proper change tracking.</source>
          <target state="translated">적절한 변경 추적으로 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift&quot;&gt; &lt;code&gt;Array#unshift&lt;/code&gt; &lt;/a&gt; 를 래핑합니다 .</target>
        </trans-unit>
        <trans-unit id="507d52e5b1af82c3da610e59d0f321e8e7455d5e" translate="yes" xml:space="preserve">
          <source>Write operations like &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;updateOne()&lt;/code&gt;, &lt;code&gt;updateMany()&lt;/code&gt;, and &lt;code&gt;findOneAndUpdate()&lt;/code&gt; only check the top-level schema's strict mode setting.</source>
          <target state="translated">&lt;code&gt;update()&lt;/code&gt; , &lt;code&gt;updateOne()&lt;/code&gt; , &lt;code&gt;updateMany()&lt;/code&gt; 및 &lt;code&gt;findOneAndUpdate()&lt;/code&gt; 와 같은 쓰기 작업은 최상위 스키마의 엄격 모드 설정 만 확인합니다.</target>
        </trans-unit>
        <trans-unit id="677938555b04b8e4ca8c36d0ad58aba2990a5796" translate="yes" xml:space="preserve">
          <source>Yet more</source>
          <target state="translated">아직 더</target>
        </trans-unit>
        <trans-unit id="42a7089aa98a67767ba29a8bcb1f2b139f896a39" translate="yes" xml:space="preserve">
          <source>You &lt;strong&gt;cannot&lt;/strong&gt; access the document being updated in &lt;code&gt;pre('updateOne')&lt;/code&gt; or &lt;code&gt;pre('findOneAndUpdate')&lt;/code&gt; middleware. If you need to access the document that will be updated, you need to execute an explicit query for the document.</source>
          <target state="translated">당신은 &lt;strong&gt;할 수없는&lt;/strong&gt; 문서에 업데이트되는 액세스 &lt;code&gt;pre('updateOne')&lt;/code&gt; 또는 &lt;code&gt;pre('findOneAndUpdate')&lt;/code&gt; 미들웨어를. 업데이트 할 문서에 액세스해야하는 경우 문서에 대한 명시 적 쿼리를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="133369435434a35434d0d8bbf2164629187cc013" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;http://nodejs.org/api/stream.html&quot;&gt;stream&lt;/a&gt; query results from MongoDB. You need to call the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt;Query#cursor()&lt;/a&gt; function to return an instance of &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt;QueryCursor&lt;/a&gt;.</source>
          <target state="translated">MongoDB에서 쿼리 결과를 &lt;a href=&quot;http://nodejs.org/api/stream.html&quot;&gt;스트리밍&lt;/a&gt; 할 수 있습니다 . &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt;QueryCursor&lt;/a&gt; 인스턴스를 리턴 하려면 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt;Query # cursor ()&lt;/a&gt; 함수 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="770389d50c4ba69cb3fa5a4b5eb3c5ad0a4295aa" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://nodejs.org/api/stream.html&quot;&gt;stream&lt;/a&gt; query results from MongoDB. You need to call the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt;Query#cursor()&lt;/a&gt; function to return an instance of &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-cursor&quot;&gt;QueryCursor&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb71f3bf0518f2569c6569617fd37e218319aaa1" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;only&lt;/strong&gt; use this option on subdocuments. Mongoose can't save a document without knowing its id, so you will get an error if you try to save a document without an &lt;code&gt;_id&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 하위 문서 &lt;strong&gt;에서만&lt;/strong&gt; 사용할 수 있습니다 . Mongoose는 ID를 모르면 문서를 저장할 수 없으므로 &lt;code&gt;_id&lt;/code&gt; 없이 문서를 저장하려고하면 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="814ad22931c8ccfaa6ffb1fcb07f1e6163a1d77a" translate="yes" xml:space="preserve">
          <source>You can add any property you want to your SchemaType options. Many plugins rely on custom SchemaType options. For example, the &lt;a href=&quot;http://plugins.mongoosejs.io/plugins/autopopulate&quot;&gt;mongoose-autopopulate&lt;/a&gt; plugin automatically populates paths if you set &lt;code&gt;autopopulate: true&lt;/code&gt; in your SchemaType options. Mongoose comes with support for several built-in SchemaType options, like &lt;code&gt;lowercase&lt;/code&gt; in the above example.</source>
          <target state="translated">SchemaType 옵션에 원하는 속성을 추가 할 수 있습니다. 많은 플러그인은 사용자 정의 SchemaType 옵션을 사용합니다. 예를 들어, &lt;a href=&quot;http://plugins.mongoosejs.io/plugins/autopopulate&quot;&gt;mongoose-autopopulate&lt;/a&gt; 플러그인 은 SchemaType 옵션에서 &lt;code&gt;autopopulate: true&lt;/code&gt; 를 설정하면 경로를 자동으로 채 웁니다 . Mongoose는 위 예제의 &lt;code&gt;lowercase&lt;/code&gt; 와 같은 여러 내장 SchemaType 옵션을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="59945f70abd4bbef0dfe94b26b03312a6854ec7d" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;https://mongoosejs.com/docs/api.html#mongoose_Mongoose-set&quot;&gt;set the global &lt;code&gt;useNewUrlParser&lt;/code&gt; option&lt;/a&gt; to turn on &lt;code&gt;useNewUrlParser&lt;/code&gt; for every connection by default.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#mongoose_Mongoose-set&quot;&gt;전역 &lt;code&gt;useNewUrlParser&lt;/code&gt; 옵션&lt;/a&gt; 을 설정하여 기본적으로 모든 연결에 대해 &lt;code&gt;useNewUrlParser&lt;/code&gt; 를 켤 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05218a5fc2bfb2c85a3e0db20306cb5b3a09f49d" translate="yes" xml:space="preserve">
          <source>You can also add a custom setter to your virtual that will let you set both first name and last name via the &lt;code&gt;fullName&lt;/code&gt; virtual.</source>
          <target state="translated">&lt;code&gt;fullName&lt;/code&gt; 가상을 통해 이름과 성을 모두 설정할 수 있도록 사용자 정의 설정 기를 가상에 추가 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2cddf4fe06a82d737e8bb107681f2b671f765f57" translate="yes" xml:space="preserve">
          <source>You can also add query helper functions, which are like instance methods but for mongoose queries. Query helper methods let you extend mongoose's &lt;a href=&quot;queries&quot;&gt;chainable query builder API&lt;/a&gt;.</source>
          <target state="translated">인스턴스 메소드와 유사하지만 몽구스 쿼리를위한 쿼리 도우미 함수를 추가 할 수도 있습니다. 쿼리 도우미 메서드를 사용하면 몽구스의 &lt;a href=&quot;queries&quot;&gt;체인 가능한 쿼리 빌더 API&lt;/a&gt; 를 확장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a40d3fd38d810aae1503e5f7bcce2502c9e48a5" translate="yes" xml:space="preserve">
          <source>You can also add static functions to your model. There are 2 equivalent ways to add a static:</source>
          <target state="translated">정적 함수를 모델에 추가 할 수도 있습니다. 정적 요소를 추가하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5af5bb500c462ba3430b9ebe906c377b63de0285" translate="yes" xml:space="preserve">
          <source>You can also configure &lt;code&gt;useCreateIndex&lt;/code&gt; by passing it through the connection options.</source>
          <target state="translated">연결 옵션을 통해 &lt;code&gt;useCreateIndex&lt;/code&gt; 를 전달하여 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="daa996846aead711e57017895fd468904ba7d6c4" translate="yes" xml:space="preserve">
          <source>You can also configure &lt;code&gt;useFindAndModify&lt;/code&gt; by passing it through the connection options.</source>
          <target state="translated">연결 옵션을 통해 &lt;code&gt;useFindAndModify&lt;/code&gt; 를 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1165fbf652d857f74f5aa318608b64c283d79d7c" translate="yes" xml:space="preserve">
          <source>You can also connect to multiple &lt;a href=&quot;https://docs.mongodb.com/manual/reference/program/mongos/&quot;&gt;mongos&lt;/a&gt; instances for high availability in a sharded cluster. You do &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/tutorials/connect/#connect-to-sharded-cluster&quot;&gt;not need to pass any special options to connect to multiple mongos&lt;/a&gt; in mongoose 5.x.</source>
          <target state="translated">샤드 클러스터에서 고 가용성을 위해 여러 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/program/mongos/&quot;&gt;몽고&lt;/a&gt; 인스턴스에 연결할 수도 있습니다 . mongoose 5.x에서 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/tutorials/connect/#connect-to-sharded-cluster&quot;&gt;여러 몽고&lt;/a&gt; 에 연결하기 위해 특별한 옵션을 전달할 필요 는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d99077170c2a6d2580b53ae3181f447895bd4887" translate="yes" xml:space="preserve">
          <source>You can also connect to multiple &lt;a href=&quot;https://docs.mongodb.com/manual/reference/program/mongos/&quot;&gt;mongos&lt;/a&gt; instances for high availability in a sharded cluster. You do &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.0/tutorials/connect/#connect-to-sharded-cluster&quot;&gt;not need to pass any special options to connect to multiple mongos&lt;/a&gt; in mongoose 5.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c66b8927edef04cde75a6523bcc5190175cf14d" translate="yes" xml:space="preserve">
          <source>You can also declare aliases on nested paths. It is easier to use nested schemas and &lt;a href=&quot;subdocs&quot;&gt;subdocuments&lt;/a&gt;, but you can also declare nested path aliases inline as long as you use the full nested path &lt;code&gt;nested.myProp&lt;/code&gt; as the alias.</source>
          <target state="translated">중첩 된 경로에서 별칭을 선언 할 수도 있습니다. 중첩 된 스키마 및 &lt;a href=&quot;subdocs&quot;&gt;하위 문서&lt;/a&gt; 를 사용하는 것이 더 쉽지만 중첩 된 전체 경로 &lt;code&gt;nested.myProp&lt;/code&gt; 를 별칭으로 사용하는 경우 중첩 된 경로 별칭을 인라인으로 선언 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9a9e22d25e58ab45a809050bf3ca33aceb46cc2" translate="yes" xml:space="preserve">
          <source>You can also define &lt;a href=&quot;https://docs.mongodb.com/manual/indexes/&quot;&gt;MongoDB indexes&lt;/a&gt; using schema type options.</source>
          <target state="translated">스키마 유형 옵션을 사용하여 &lt;a href=&quot;https://docs.mongodb.com/manual/indexes/&quot;&gt;MongoDB 색인&lt;/a&gt; 을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a9d3e1a1db73d34e42f8e4976c3cecf4cff2030" translate="yes" xml:space="preserve">
          <source>You can also define discriminators on embedded document arrays. Embedded discriminators are different because the different discriminator types are stored in the same document array (within a document) rather than the same collection. In other words, embedded discriminators let you store subdocuments matching different schemas in the same array.</source>
          <target state="translated">포함 된 문서 배열에서 판별자를 정의 할 수도 있습니다. 다른 판별 기 유형이 동일한 콜렉션이 아닌 동일한 문서 배열 (문서 내)에 저장되기 때문에 임베디드 판별 기가 다릅니다. 다시 말해, 임베디드 판별자를 사용하면 다른 스키마와 일치하는 하위 문서를 동일한 배열에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b8f51d45bd98b72503a952b4c320b8a53736a5d" translate="yes" xml:space="preserve">
          <source>You can also define discriminators on single nested subdocuments, similar to how you can define discriminators on arrays of subdocuments.</source>
          <target state="translated">하위 문서 배열에서 판별자를 정의하는 방법과 유사하게 단일 중첩 하위 문서에서 판별자를 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="106e7bd1167ae148a496bb8c218c3e4a4e8c69ae" translate="yes" xml:space="preserve">
          <source>You can also define embedded discriminators on embedded discriminators. In the below example, &lt;code&gt;sub_events&lt;/code&gt; is an embedded discriminator, and for &lt;code&gt;sub_event&lt;/code&gt; keys with value 'SubEvent', &lt;code&gt;sub_events.events&lt;/code&gt; is an embedded discriminator.</source>
          <target state="translated">임베디드 판별 자에 임베디드 판별자를 정의 할 수도 있습니다. 아래 예에서, &lt;code&gt;sub_events&lt;/code&gt; 는 임베디드 판별하고,위한 &lt;code&gt;sub_event&lt;/code&gt; 값 'SubEvent'와 키 &lt;code&gt;sub_events.events&lt;/code&gt; 는 임베디드 판별이다.</target>
        </trans-unit>
        <trans-unit id="81832d7715c155f36e4f5ab554ed8572ddc107a9" translate="yes" xml:space="preserve">
          <source>You can also define hooks for the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.aggregate&quot;&gt;&lt;code&gt;Model.aggregate()&lt;/code&gt; function&lt;/a&gt;. In aggregation middleware functions, &lt;code&gt;this&lt;/code&gt; refers to the &lt;a href=&quot;https://mongoosejs.com/docs/api.html#Aggregate&quot;&gt;Mongoose &lt;code&gt;Aggregate&lt;/code&gt; object&lt;/a&gt;. For example, suppose you're implementing soft deletes on a &lt;code&gt;Customer&lt;/code&gt; model by adding an &lt;code&gt;isDeleted&lt;/code&gt; property. To make sure &lt;code&gt;aggregate()&lt;/code&gt; calls only look at customers that aren't soft deleted, you can use the below middleware to add a &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-match&quot;&gt;&lt;code&gt;$match&lt;/code&gt; stage&lt;/a&gt; to the beginning of each &lt;a href=&quot;https://docs.mongodb.com/manual/core/aggregation-pipeline/&quot;&gt;aggregation pipeline&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.aggregate&quot;&gt; &lt;code&gt;Model.aggregate()&lt;/code&gt; 함수에&lt;/a&gt; 대한 후크를 정의 할 수도 있습니다 . 집계 미들웨어 함수에서 &lt;code&gt;this&lt;/code&gt; &lt;a href=&quot;https://mongoosejs.com/docs/api.html#Aggregate&quot;&gt;Mongoose &lt;code&gt;Aggregate&lt;/code&gt; 오브젝트를&lt;/a&gt; 나타냅니다 . 예를 들어, &lt;code&gt;isDeleted&lt;/code&gt; 특성 을 추가하여 &lt;code&gt;Customer&lt;/code&gt; 모델에서 일시 삭제를 구현한다고 가정하십시오 . 확인하려면 &lt;code&gt;aggregate()&lt;/code&gt; 전용 소프트 삭제되지 않습니다 고객을 찾아 전화를, 당신은 추가 미들웨어 아래를 사용할 수 있습니다 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#aggregate_Aggregate-match&quot;&gt; &lt;code&gt;$match&lt;/code&gt; 단계를&lt;/a&gt; 각각의 시작 부분으로 &lt;a href=&quot;https://docs.mongodb.com/manual/core/aggregation-pipeline/&quot;&gt;집계 파이프 라인&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff4137390c695052ea652849b549ab67863a2958" translate="yes" xml:space="preserve">
          <source>You can also set the &lt;code&gt;default&lt;/code&gt; schema option to a function. Mongoose will execute that function and use the return value as the default.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 스키마 옵션을 함수로 설정할 수도 있습니다. Mongoose는 해당 기능을 실행하고 반환 값을 기본값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9022f13a6f503c4413f69212c8306384f17bda69" translate="yes" xml:space="preserve">
          <source>You can also specify driver options in your connection string as &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;parameters in the query string&lt;/a&gt; portion of the URI. This only applies to options passed to the MongoDB driver. You &lt;strong&gt;can't&lt;/strong&gt; set Mongoose-specific options like &lt;code&gt;bufferCommands&lt;/code&gt; in the query string.</source>
          <target state="translated">연결 문자열에 드라이버 옵션을 URI &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;의 쿼리 문자열&lt;/a&gt; 부분에 매개 변수 로 지정할 수도 있습니다 . 이것은 MongoDB 드라이버에 전달 된 옵션에만 적용됩니다. 당신이 &lt;strong&gt;할 수&lt;/strong&gt; 처럼 몽구스 별 옵션을 설정 &lt;code&gt;bufferCommands&lt;/code&gt; 쿼리 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4ee6977dab310db5a73bfd5253dfc6df67599a08" translate="yes" xml:space="preserve">
          <source>You can also specify several more parameters in the &lt;code&gt;uri&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; 에서 몇 가지 매개 변수를 더 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7581bd26fc4ae0a240bd17c076ed28331c642135" translate="yes" xml:space="preserve">
          <source>You can also use setters to modify other properties on the document. If you're setting a property &lt;code&gt;name&lt;/code&gt; on a document, the setter will run with &lt;code&gt;this&lt;/code&gt; as the document. Be careful, in mongoose 5 setters will also run when querying by &lt;code&gt;name&lt;/code&gt; with &lt;code&gt;this&lt;/code&gt; as the query.</source>
          <target state="translated">setter를 사용하여 문서의 다른 속성을 수정할 수도 있습니다. 문서에서 속성 &lt;code&gt;name&lt;/code&gt; 을 설정하는 경우 세터는 &lt;code&gt;this&lt;/code&gt; 를 문서로 실행 합니다. 로 조회 할 때 몽구스 5 개 손님들은 또한 실행됩니다,주의 &lt;code&gt;name&lt;/code&gt; 으로 &lt;code&gt;this&lt;/code&gt; 쿼리한다.</target>
        </trans-unit>
        <trans-unit id="848391d4927d9caedb90764611d10a7b8c6d311a" translate="yes" xml:space="preserve">
          <source>You can also use virtuals to set multiple properties at once as an alternative to &lt;a href=&quot;getters-setters#setters&quot;&gt;custom setters on normal properties&lt;/a&gt;. For example, suppose you have two string properties: &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;. You can create a virtual property &lt;code&gt;fullName&lt;/code&gt; that lets you set both of these properties at once. The key detail is that, in virtual getters and setters, &lt;code&gt;this&lt;/code&gt; refers to the document the virtual is attached to.</source>
          <target state="translated">가상 속성을 사용 &lt;a href=&quot;getters-setters#setters&quot;&gt;하여 일반 속성의 사용자 정의 설정 기&lt;/a&gt; 대신 여러 속성을 한 번에 설정할 수도 있습니다 . 예를 들어 &lt;code&gt;firstName&lt;/code&gt; 과 &lt;code&gt;lastName&lt;/code&gt; 이라는 두 개의 문자열 속성이 있다고 가정합니다 . 이 두 속성을 한 번에 설정할 수 있는 가상 속성 &lt;code&gt;fullName&lt;/code&gt; 을 만들 수 있습니다 . 중요한 세부 가상 게터와 세터에,이다 &lt;code&gt;this&lt;/code&gt; 가상에 부착되는 문서를 말한다.</target>
        </trans-unit>
        <trans-unit id="5ee26095b11cc461de7330ec5d79dbeb7704ff79" translate="yes" xml:space="preserve">
          <source>You can configure the timeout using the &lt;code&gt;serverSelectionTimeoutMS&lt;/code&gt; option to &lt;code&gt;mongoose.connect()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;serverSelectionTimeoutMS&lt;/code&gt; 옵션을 사용하여 &lt;code&gt;mongoose.connect()&lt;/code&gt; 시간 초과를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="298d6ad64f09ce565504ed404149bf300bb33639" translate="yes" xml:space="preserve">
          <source>You can configure this behavior using the &lt;a href=&quot;../guide#strictQuery&quot;&gt;&lt;code&gt;strictQuery&lt;/code&gt; option for schemas&lt;/a&gt;. This option is analagous to the &lt;a href=&quot;../guide#strict&quot;&gt;&lt;code&gt;strict&lt;/code&gt; option&lt;/a&gt;. Setting &lt;code&gt;strictQuery&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; removes non-schema properties from the filter:</source>
          <target state="translated">&lt;a href=&quot;../guide#strictQuery&quot;&gt;스키마에&lt;/a&gt; 대한 &lt;code&gt;strictQuery&lt;/code&gt; 옵션을 사용하여이 동작을 구성 할 수 있습니다 . 이 옵션은 &lt;a href=&quot;../guide#strict&quot;&gt; &lt;code&gt;strict&lt;/code&gt; 옵션&lt;/a&gt; 과 유사합니다 . &lt;code&gt;strictQuery&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 필터에서 스키마 이외의 속성이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="257ddde84c3cdf504f1a5e235ed20d6cddccaff9" translate="yes" xml:space="preserve">
          <source>You can connect to MongoDB with the &lt;code&gt;mongoose.connect()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;mongoose.connect()&lt;/code&gt; 메소드를 사용하여 MongoDB에 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a673dfb8730ff3be899e3cdbe2796965cfcb24f" translate="yes" xml:space="preserve">
          <source>You can declare a schema type using the type directly, or an object with a &lt;code&gt;type&lt;/code&gt; property.</source>
          <target state="translated">형식을 직접 사용하거나 &lt;code&gt;type&lt;/code&gt; 속성이 있는 개체를 사용하여 스키마 형식을 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="50ffe46bea9a5c4e0cdbe0b02b4c89a9523c0c45" translate="yes" xml:space="preserve">
          <source>You can find a full list of officially supported plugins on &lt;a href=&quot;https://plugins.mongoosejs.io/&quot;&gt;Mongoose's plugins search site&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://plugins.mongoosejs.io/&quot;&gt;Mongoose의 플러그인 검색 사이트&lt;/a&gt; 에서 공식적으로 지원되는 플러그인의 전체 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="439dd88de705a969af1eb5802383dd3f4483227c" translate="yes" xml:space="preserve">
          <source>You can find the return type of specific operations &lt;a href=&quot;https://mongoosejs.com/docs/api.html&quot;&gt;in the api docs&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://mongoosejs.com/docs/api.html&quot;&gt;API 문서에서&lt;/a&gt; 특정 작업의 반환 유형을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de0dcc89a053e021d04f0463178d015ccbd6f2ab" translate="yes" xml:space="preserve">
          <source>You can manually populate a property by setting it to a document. The document must be an instance of the model your &lt;code&gt;ref&lt;/code&gt; property refers to.</source>
          <target state="translated">속성을 문서로 설정하여 속성을 수동으로 채울 수 있습니다. 문서는 &lt;code&gt;ref&lt;/code&gt; 속성이 참조 하는 모델의 인스턴스 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="c9d260b8d6c030751f1c6399dc8dccf73962c53f" translate="yes" xml:space="preserve">
          <source>You can manually run validation using &lt;code&gt;doc.validate(callback)&lt;/code&gt; or &lt;code&gt;doc.validateSync()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;doc.validate(callback)&lt;/code&gt; 또는 &lt;code&gt;doc.validateSync()&lt;/code&gt; 사용하여 유효성 검사를 수동으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5b910ec69c8262a394f354a35137f24abc7f8ea" translate="yes" xml:space="preserve">
          <source>You can pass options to &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schema_Schema-pre&quot;&gt;&lt;code&gt;Schema.pre()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schema_Schema-post&quot;&gt;&lt;code&gt;Schema.post()&lt;/code&gt;&lt;/a&gt; to switch whether Mongoose calls your &lt;code&gt;remove()&lt;/code&gt; hook for &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-remove&quot;&gt;&lt;code&gt;Document.remove()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.remove&quot;&gt;&lt;code&gt;Model.remove()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Mongoose가 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model-remove&quot;&gt; &lt;code&gt;Document.remove()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.remove&quot;&gt; &lt;code&gt;Model.remove()&lt;/code&gt; &lt;/a&gt; 대해 &lt;code&gt;remove()&lt;/code&gt; 후크를 호출하는지 여부를 전환 하기 위해 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schema_Schema-pre&quot;&gt; &lt;code&gt;Schema.pre()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#schema_Schema-post&quot;&gt; &lt;code&gt;Schema.post()&lt;/code&gt; &lt;/a&gt; 에 옵션을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e588e2222001af4cc908f8532d4a7bb06290d4b" translate="yes" xml:space="preserve">
          <source>You can populate in either pre or post &lt;a href=&quot;http://mongoosejs.com/docs/middleware.html&quot;&gt;hooks&lt;/a&gt;. If you want to always populate a certain field, check out the &lt;a href=&quot;http://npmjs.com/package/mongoose-autopopulate&quot;&gt;mongoose-autopopulate plugin&lt;/a&gt;.</source>
          <target state="translated">사전 또는 사후 &lt;a href=&quot;http://mongoosejs.com/docs/middleware.html&quot;&gt;후크를&lt;/a&gt; 채울 수 있습니다 . 항상 특정 필드를 채우려면 &lt;a href=&quot;http://npmjs.com/package/mongoose-autopopulate&quot;&gt;mongoose-autopopulate plugin을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="49626fa9bd9cddaa1a9eb74a20bc8a627668ddc6" translate="yes" xml:space="preserve">
          <source>You can populate in either pre or post &lt;a href=&quot;http://mongoosejs.com/docs/middleware.html&quot;&gt;hooks&lt;/a&gt;. If you want to always populate a certain field, check out the &lt;a href=&quot;https://npmjs.com/package/mongoose-autopopulate&quot;&gt;mongoose-autopopulate plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db155297bc18321888cd97e8de2e54d00be1cf1" translate="yes" xml:space="preserve">
          <source>You can read more about &lt;a href=&quot;http://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-change-streams.html#change-streams-in-mongoose&quot;&gt;change streams in mongoose in this blog post&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-change-streams.html#change-streams-in-mongoose&quot;&gt;이 블로그 게시물에서 몽구스의 변경 스트림에&lt;/a&gt; 대해 자세히 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c75571a6d2034382cf4071ae48747b6abdb302d" translate="yes" xml:space="preserve">
          <source>You can set up email lower case normalization easily via a Mongoose setter.</source>
          <target state="translated">몽구스 세터를 통해 이메일 소문자 정규화를 쉽게 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8ad8fb9c43f1f9166c8e668e03264faef5535cf" translate="yes" xml:space="preserve">
          <source>You can think of a Mongoose schema as the configuration object for a Mongoose model. A SchemaType is then a configuration object for an individual property. A SchemaType says what type a given path should have, whether it has any getters/setters, and what values are valid for that path.</source>
          <target state="translated">Mongoose 스키마를 Mongoose 모델의 구성 객체로 생각할 수 있습니다. SchemaType은 개별 속성에 대한 구성 객체입니다. SchemaType은 주어진 경로가 가져야 할 유형, 게터 / 세터가 있는지 여부 및 해당 경로에 유효한 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="59475415e465215dc01e6b75c4f19f2b1a715e7f" translate="yes" xml:space="preserve">
          <source>You can use this function to inspect the schema type for a given path, including what validators it has and what the type is.</source>
          <target state="translated">이 함수를 사용하여 유효성 검사기 및 유형을 포함하여 지정된 경로에 대한 스키마 유형을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3a6ecd3eefeaa255d5b7c0f1dcda481378250da" translate="yes" xml:space="preserve">
          <source>You can work around this by setting the &lt;code&gt;_id&lt;/code&gt; option to false in the discriminator schema as shown below.</source>
          <target state="translated">아래 그림과 같이 판별 기 스키마에서 &lt;code&gt;_id&lt;/code&gt; 옵션을 false 로 설정하여이 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e88de49f6e989cbaed3fb6dafafc3cac346fe07e" translate="yes" xml:space="preserve">
          <source>You cannot pass parameters to the next pre middleware in the chain using &lt;code&gt;next()&lt;/code&gt; in mongoose 5.x. In mongoose 4, &lt;code&gt;next('Test')&lt;/code&gt; in pre middleware would call the next middleware with 'Test' as a parameter. Mongoose 5.x has removed support for this.</source>
          <target state="translated">mongoose 5.x에서 &lt;code&gt;next()&lt;/code&gt; 를 사용하여 체인의 다음 프리 미들웨어에 매개 변수를 전달할 수 없습니다 . 몽구스 4 에서 프리 미들웨어의 &lt;code&gt;next('Test')&lt;/code&gt; 는 매개 변수로 'Test'를 사용하여 다음 미들웨어를 호출합니다. Mongoose 5.x는 이에 대한 지원을 제거했습니다.</target>
        </trans-unit>
        <trans-unit id="80cdea880df70eaf9e67d56a694ef15faa32c88a" translate="yes" xml:space="preserve">
          <source>You may see the following deprecation warning if upgrading from 4.x to 5.x and you didn't use the &lt;code&gt;useMongoClient&lt;/code&gt; option in 4.x:</source>
          <target state="translated">4.x에서 5.x로 업그레이드하고 4.x에서 &lt;code&gt;useMongoClient&lt;/code&gt; 옵션을 사용하지 않은 경우 다음과 같은 지원 중단 경고가 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d21cbafaf753e3b9811cd0b7f05b4867cbd00f89" translate="yes" xml:space="preserve">
          <source>You might use asynchronous validators to retreive other documents from the database to validate against or to meet other I/O bound validation needs.</source>
          <target state="translated">비동기 유효성 검증기를 사용하여 데이터베이스에서 다른 문서를 검색하여 다른 I / O 바운드 유효성 검증 요구에 대해 유효성을 검증하거나 충족시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c69f8457a66437de5233a149574cb170620290a" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;getFilter()&lt;/code&gt; instead of &lt;code&gt;getQuery()&lt;/code&gt; where possible. &lt;code&gt;getQuery()&lt;/code&gt; will likely be deprecated in a future release.</source>
          <target state="translated">가능한 경우 &lt;code&gt;getQuery()&lt;/code&gt; 대신 &lt;code&gt;getFilter()&lt;/code&gt; 를 사용해야 합니다. &lt;code&gt;getQuery()&lt;/code&gt; 는 향후 릴리스에서 더 이상 사용되지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="c8504b5dd2dfe9b695ede90239657a3b08d71dff" translate="yes" xml:space="preserve">
          <source>Your First Transaction</source>
          <target state="translated">첫 거래</target>
        </trans-unit>
        <trans-unit id="99b41f41ddb4eea87802dd522d2ab82f398c1fbc" translate="yes" xml:space="preserve">
          <source>Your First Virtual</source>
          <target state="translated">첫 가상</target>
        </trans-unit>
        <trans-unit id="21a6fa2bccbaf65bd33cac259b8bafe4f6f33bba" translate="yes" xml:space="preserve">
          <source>Your schemas can define default values for certain paths. If you create a new document without that path set, the default will kick in.</source>
          <target state="translated">스키마는 특정 경로에 대한 기본값을 정의 할 수 있습니다. 해당 경로를 설정하지 않고 새 문서를 만들면 기본값이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="010b9e7b7b44147a1a38cbed5c87ef69debb4bd3" translate="yes" xml:space="preserve">
          <source>[arg] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[arg]&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="e80972ea9bf268cc047942360ba5e2381c1e9a89" translate="yes" xml:space="preserve">
          <source>[callback(err,doc)] &amp;laquo;Function&amp;raquo; Optional callback, executed upon completion. Receives &lt;code&gt;err&lt;/code&gt; and the &lt;code&gt;doc(s)&lt;/code&gt;.</source>
          <target state="translated">[callback (err, doc)]&amp;laquo;Function&amp;raquo;완료시 실행되는 선택적 콜백. &lt;code&gt;err&lt;/code&gt; 및 &lt;code&gt;doc(s)&lt;/code&gt; 받습니다 .</target>
        </trans-unit>
        <trans-unit id="980db659d24d0bc3d12001bc058a09d08fcb8559" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">[콜백]&amp;laquo;기능&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="f80634227e9ff3cc3b7cb665e87d7b049ebc1bde" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; When passed, population is invoked</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;전달되면 인구가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9b8e30f430cadd3464e5ff2d204952ab76a481a8" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; callback</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;콜백</target>
        </trans-unit>
        <trans-unit id="6ac1848ed0d4fe4033fb05b64c8f11d7ea111783" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; callback &lt;code&gt;function(error, bulkWriteOpResult) {}&lt;/code&gt;</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;콜백 &lt;code&gt;function(error, bulkWriteOpResult) {}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="543c8cda05a65c5557128326b173fb66948bf083" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; called after all connection close, or when first error occurred.</source>
          <target state="translated">[콜백]&amp;laquo;Function&amp;raquo;은 모든 연결 종료 후 또는 첫 번째 오류가 발생한 후 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="330fc72ae6285c61ebe009b775313f68949a679f" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; executed when all docs have been processed</source>
          <target state="translated">[콜백]&amp;laquo;문서&amp;raquo;모든 문서가 처리 될 때 실행</target>
        </trans-unit>
        <trans-unit id="34c7df95beed24e455c86523c05f8b223e52de47" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional</source>
          <target state="translated">[콜백]&amp;laquo;기능&amp;raquo;옵션</target>
        </trans-unit>
        <trans-unit id="ec9a1691fc56809de92079949c44dedc27007dcb" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional callback</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;선택적 콜백</target>
        </trans-unit>
        <trans-unit id="ac95758e51265dd1c3bab552c9bbd65d2ab61d3b" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional callback called after validation completes, passing an error if one occurred</source>
          <target state="translated">[콜백]&amp;laquo;Function&amp;raquo;유효성 검사가 완료된 후 호출 된 선택적 콜백, 오류 발생시 오류 전달</target>
        </trans-unit>
        <trans-unit id="a7c31cacc6f15cf907061f24a228b3eac7b30ec8" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional callback. If specified, a promise will &lt;strong&gt;not&lt;/strong&gt; be returned</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;선택적 콜백. 지정하면 약속이 반환 &lt;strong&gt;되지 않습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2665be6af34b63865b4dd09cbd5d82df566a6b0" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional params are (error, arr)</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;선택적 매개 변수는 (오류, arr)입니다.</target>
        </trans-unit>
        <trans-unit id="c064c5cfb327b3cebd43b694ca1c40c8f6f60c7b" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional params are (error, count)</source>
          <target state="translated">[콜백]&amp;laquo;Function&amp;raquo;옵션 매개 변수는 (오류, 카운트)</target>
        </trans-unit>
        <trans-unit id="d96b1b3b80cae27fb2931d6dad9e9c6caa532029" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional params are (error, doc), &lt;em&gt;unless&lt;/em&gt;&lt;code&gt;rawResult&lt;/code&gt; is used, in which case params are (error, writeOpResult)</source>
          <target state="translated">[콜백]&amp;laquo;Function&amp;raquo;선택적 params는 &lt;code&gt;rawResult&lt;/code&gt; 가 사용 &lt;em&gt;되지 않는 한&lt;/em&gt; (error, doc) 입니다.이 경우 params는 (error, writeOpResult)입니다.</target>
        </trans-unit>
        <trans-unit id="f81379fd7ee2b7721f679ff335d390339cfbb3f4" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional params are (error, document)</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;옵션 매개 변수는 (오류, 문서)</target>
        </trans-unit>
        <trans-unit id="623388470f80b1fc6f49f84e2106c0f4c928748b" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional params are (error, mongooseDeleteResult)</source>
          <target state="translated">[콜백]&amp;laquo;함수&amp;raquo;선택적 매개 변수는 (오류, mongooseDeleteResult)입니다.</target>
        </trans-unit>
        <trans-unit id="e063a63257d7b825ee200472c75c3bded32ab2a3" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; optional params depend on the function being called</source>
          <target state="translated">[콜백]&amp;laquo;Function&amp;raquo;선택적 params는 호출되는 함수에 따라 다릅니다</target>
        </trans-unit>
        <trans-unit id="8f764cbfc3d551d29b347aa09cac2d5dd0cbf8e0" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo; params are (error, writeOpResult)</source>
          <target state="translated">[콜백]&amp;laquo;Function&amp;raquo;매개 변수는 (오류, writeOpResult)</target>
        </trans-unit>
        <trans-unit id="3d2624beda2f4acb4da7eee25345e42ebf87770d" translate="yes" xml:space="preserve">
          <source>[callback] &amp;laquo;Function&amp;raquo;&lt;code&gt;function(error, res) {}&lt;/code&gt; where &lt;code&gt;res&lt;/code&gt; has 3 properties: &lt;code&gt;n&lt;/code&gt;, &lt;code&gt;nModified&lt;/code&gt;, &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">[콜백]&amp;laquo;Function&amp;raquo; &lt;code&gt;function(error, res) {}&lt;/code&gt; 여기서 &lt;code&gt;res&lt;/code&gt; 에는 &lt;code&gt;n&lt;/code&gt; , &lt;code&gt;nModified&lt;/code&gt; , &lt;code&gt;ok&lt;/code&gt; 의 3 가지 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b8c5bc47153a3d88dd68e8f3110668f1378f511" translate="yes" xml:space="preserve">
          <source>[cb] &amp;laquo;Function&amp;raquo; optional callback</source>
          <target state="translated">[cb]&amp;laquo;Function&amp;raquo;선택적 콜백</target>
        </trans-unit>
        <trans-unit id="444d9c60cbaa317767b19924809282828a1648b3" translate="yes" xml:space="preserve">
          <source>[collection] &amp;laquo;Object&amp;raquo; Mongoose collection</source>
          <target state="translated">[컬렉션]&amp;laquo;개체&amp;raquo;몽구스 컬렉션</target>
        </trans-unit>
        <trans-unit id="0fbc780737aa17ceeb2cad88c9b84abcb18c4485" translate="yes" xml:space="preserve">
          <source>[collection] &amp;laquo;String&amp;raquo; name (optional, inferred from model name)</source>
          <target state="translated">[컬렉션]&amp;laquo;문자열&amp;raquo;이름 (선택 사항, 모델 이름에서 유추)</target>
        </trans-unit>
        <trans-unit id="cf31816d3a8def64709153d6a6707f3894fa89d7" translate="yes" xml:space="preserve">
          <source>[collection] &amp;laquo;String&amp;raquo; name of mongodb collection (optional) if not given it will be induced from model name</source>
          <target state="translated">[collection]&amp;laquo;문자열&amp;raquo;mongodb 모음 이름 (선택 사항) 이름이 제공되지 않으면 모델 이름에서 유도됩니다.</target>
        </trans-unit>
        <trans-unit id="2442c5b80a600c7cd61545584daeddcfc952f3f8" translate="yes" xml:space="preserve">
          <source>[conditions] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[조건]&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="fdf4b96ffc04dbc095f10510dc1e79727b239fa2" translate="yes" xml:space="preserve">
          <source>[conditions] &amp;laquo;Object&amp;raquo; optional</source>
          <target state="translated">[조건]&amp;laquo;개체&amp;raquo;선택 사항</target>
        </trans-unit>
        <trans-unit id="2ae803cb6d1ab8fc1de367821780f65bc64b1c9c" translate="yes" xml:space="preserve">
          <source>[context] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[문맥]&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="4a5d5d1703f07640643ab88a5e89734ea67fe5e3" translate="yes" xml:space="preserve">
          <source>[coordinatePairs...] &amp;laquo;Array|Object&amp;raquo;</source>
          <target state="translated">[coordinatePairs ...]&amp;laquo;배열 | 개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="1cc5004bddf8c3897cb8e2fcb3bd6b804fc87206" translate="yes" xml:space="preserve">
          <source>[definition] &amp;laquo;Object|Schema|Array&amp;raquo; Can be one of: object describing schema paths, or schema to copy, or array of objects and schemas</source>
          <target state="translated">[정의]&amp;laquo;개체 | 스키마 | 배열&amp;raquo;스키마 경로를 설명하는 개체 또는 복사 할 스키마 또는 개체와 스키마의 배열 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11f29897e3522f2936d57aca711fabe7964ae37a" translate="yes" xml:space="preserve">
          <source>[doc] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[doc]&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="191e83004340ebe7eeb380525495665cbf706174" translate="yes" xml:space="preserve">
          <source>[doc] &amp;laquo;Object&amp;raquo; the update command</source>
          <target state="translated">[doc]&amp;laquo;개체&amp;raquo;업데이트 명령</target>
        </trans-unit>
        <trans-unit id="e21f139a89aba0956a4702432026d066e926bd14" translate="yes" xml:space="preserve">
          <source>[elseExpr] &amp;laquo;String|Object&amp;raquo; false case for the condition</source>
          <target state="translated">[elseExpr]&amp;laquo;문자열 | 개체&amp;raquo;조건에 대한 잘못된 경우</target>
        </trans-unit>
        <trans-unit id="5b8a056757ffb5b1789450621a0e3e7c4c1b1533" translate="yes" xml:space="preserve">
          <source>[err] &amp;laquo;Function|Error&amp;raquo; optional error to throw if no docs match &lt;code&gt;filter&lt;/code&gt;. If not specified, &lt;code&gt;orFail()&lt;/code&gt; will throw a &lt;code&gt;DocumentNotFoundError&lt;/code&gt;</source>
          <target state="translated">[err]&amp;laquo;Function | Error&amp;raquo; &lt;code&gt;filter&lt;/code&gt; 와 일치하는 문서가없는 경우 발생하는 선택적 오류 입니다. 지정하지 않으면 &lt;code&gt;orFail()&lt;/code&gt; 은 &lt;code&gt;DocumentNotFoundError&lt;/code&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="4f858670ae73ca484cb1fd05c7bb8251f6bf572c" translate="yes" xml:space="preserve">
          <source>[errorMsg] &amp;laquo;String|Function&amp;raquo; optional error message. If function, should return the error message as a string</source>
          <target state="translated">[errorMsg]&amp;laquo;문자열 | 함수&amp;raquo;선택적 오류 메시지. 함수 인 경우 오류 메시지를 문자열로 반환해야합니다</target>
        </trans-unit>
        <trans-unit id="62c1410a7110a131b48dbc09f6d474a93f334e31" translate="yes" xml:space="preserve">
          <source>[field] &amp;laquo;String&amp;raquo;</source>
          <target state="translated">[필드]&amp;laquo;문자열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="eb7655d93a8ecb34f5877046fae3a33208f580cf" translate="yes" xml:space="preserve">
          <source>[filter] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[필터]&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="466b7ffea362e97a91f4272f6e64fa638ec7170a" translate="yes" xml:space="preserve">
          <source>[filter] &amp;laquo;Object&amp;raquo; count documents that match this object</source>
          <target state="translated">[필터]&amp;laquo;개체&amp;raquo;이 개체와 일치하는 문서 수</target>
        </trans-unit>
        <trans-unit id="6433f244007171529ace68ddddedbfa7af539d41" translate="yes" xml:space="preserve">
          <source>[filter] &amp;laquo;Object&amp;raquo; mongodb selector</source>
          <target state="translated">[필터]&amp;laquo;객체&amp;raquo;mongodb 선택기</target>
        </trans-unit>
        <trans-unit id="cec4627766e2ba1e6303bb660133c3313ee74be4" translate="yes" xml:space="preserve">
          <source>[filter] &amp;laquo;Object|ObjectId&amp;raquo; mongodb selector. If not specified, returns all documents.</source>
          <target state="translated">[filter]&amp;laquo;Object | ObjectId&amp;raquo;mongodb 선택기. 지정하지 않으면 모든 문서를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36a976e67f99c4eaf65e1f9676b939c8ec4535eb" translate="yes" xml:space="preserve">
          <source>[filter] &amp;laquo;Object|Query&amp;raquo;</source>
          <target state="translated">[필터]&amp;laquo;개체 | 쿼리&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="5aa1654a356d372736fb7ff70e82844ad520fe33" translate="yes" xml:space="preserve">
          <source>[filter] &amp;laquo;Object|Query&amp;raquo; mongodb selector</source>
          <target state="translated">[필터]&amp;laquo;객체 | 쿼리&amp;raquo;mongodb 선택기</target>
        </trans-unit>
        <trans-unit id="e34cb7983195bd837cf708948a79b8a88950acd9" translate="yes" xml:space="preserve">
          <source>[fn] &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">[fn]&amp;laquo;기능&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="554da23f0bdd3df4472d2ba4b64bd1ce33afddba" translate="yes" xml:space="preserve">
          <source>[fn] &amp;laquo;Function&amp;raquo; optional callback</source>
          <target state="translated">[fn]&amp;laquo;Function&amp;raquo;선택적 콜백</target>
        </trans-unit>
        <trans-unit id="75e3cb3dc9c274a39fd6994f90d42294564a14f8" translate="yes" xml:space="preserve">
          <source>[fn] &amp;laquo;Function|null&amp;raquo; overwrites the function used to pluralize collection names</source>
          <target state="translated">[fn]&amp;laquo;Function | null&amp;raquo;은 컬렉션 이름을 복수화하는 데 사용 된 함수를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="7b7f17a99d225c14209ab9ec165734138376fba3" translate="yes" xml:space="preserve">
          <source>[fn] &amp;laquo;function(err|product)&amp;raquo; optional callback</source>
          <target state="translated">[fn]&amp;laquo;function (err | product)&amp;raquo;선택적 콜백</target>
        </trans-unit>
        <trans-unit id="75f390fd025bef29b84c334cd92204181e853b0d" translate="yes" xml:space="preserve">
          <source>[force] &amp;laquo;Boolean&amp;raquo; optional</source>
          <target state="translated">[강제]&amp;laquo;부울&amp;raquo;옵션</target>
        </trans-unit>
        <trans-unit id="993680d4601819bc97b14804913e11a529d1af6b" translate="yes" xml:space="preserve">
          <source>[instance] &amp;laquo;String&amp;raquo;</source>
          <target state="translated">[인스턴스]&amp;laquo;문자열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="38a6204b219600a35613f3110091df794b12f82b" translate="yes" xml:space="preserve">
          <source>[kind] &amp;laquo;String&amp;raquo; optional &lt;code&gt;kind&lt;/code&gt; property for the error</source>
          <target state="translated">[kind]&amp;laquo;문자열&amp;raquo; 오류에 대한 선택적 &lt;code&gt;kind&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="b11b253db1a57005a5eb42d0f5f67e6f9b943c3b" translate="yes" xml:space="preserve">
          <source>[match] &amp;laquo;Object&amp;raquo; Conditions for the population query</source>
          <target state="translated">[일치]&amp;laquo;개체&amp;raquo;모집단 쿼리 조건</target>
        </trans-unit>
        <trans-unit id="544aeb3ba8576f2e8b527044ab99288c4d3b358f" translate="yes" xml:space="preserve">
          <source>[message] &amp;laquo;String&amp;raquo; optional custom error message</source>
          <target state="translated">[메시지]&amp;laquo;문자열&amp;raquo;선택적 사용자 정의 오류 메시지</target>
        </trans-unit>
        <trans-unit id="ebaa032d520feec43f0ceeddc79366c481ee742e" translate="yes" xml:space="preserve">
          <source>[model] &amp;laquo;Model&amp;raquo; The model you wish to use for population. If not specified, populate will look up the model by the name in the Schema's &lt;code&gt;ref&lt;/code&gt; field.</source>
          <target state="translated">[모델]&amp;laquo;모델&amp;raquo;모집단에 사용하려는 모델입니다. 지정하지 않으면 채우기는 스키마 &lt;code&gt;ref&lt;/code&gt; 필드 에서 이름으로 모델을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="b91a068c56bc5ad8d9bfd549a5d3c195b55daa7f" translate="yes" xml:space="preserve">
          <source>[model] &amp;laquo;Model&amp;raquo; the model to cast to. If not set, defaults to &lt;code&gt;this.model&lt;/code&gt;</source>
          <target state="translated">[모델]&amp;laquo;모델&amp;raquo;캐스트 할 모델입니다. 설정하지 않으면 기본값은 &lt;code&gt;this.model&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7cabefa954e4297edd0aa9954dfe41a02870c47d" translate="yes" xml:space="preserve">
          <source>[model] &amp;laquo;Model&amp;raquo; the model to which the aggregate is to be bound</source>
          <target state="translated">[모델]&amp;laquo;모델&amp;raquo;집계를 바인딩 할 모델</target>
        </trans-unit>
        <trans-unit id="fb4610e3d902238c64e08937330d1e7013e6ef79" translate="yes" xml:space="preserve">
          <source>[model] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[모델]&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="dee8b5e0f0bfa6e6b0dcef8361550f9de5c2bc1c" translate="yes" xml:space="preserve">
          <source>[ms] &amp;laquo;Number&amp;raquo; The number of milliseconds</source>
          <target state="translated">[ms]&amp;laquo;Number&amp;raquo;밀리 초 수</target>
        </trans-unit>
        <trans-unit id="6b6e5ca0f2c19d6d57fbdca70cfd982d72f7aa33" translate="yes" xml:space="preserve">
          <source>[obj.message] &amp;laquo;String|Function&amp;raquo; optional error message. If function, should return the error message as a string</source>
          <target state="translated">[obj.message]&amp;laquo;문자열 | 함수&amp;raquo;선택적 오류 메시지. 함수 인 경우 오류 메시지를 문자열로 반환해야합니다</target>
        </trans-unit>
        <trans-unit id="4946e005d22b32add675fc205eef1b2f6466ce2c" translate="yes" xml:space="preserve">
          <source>[obj.propsParameter=false] &amp;laquo;Boolean&amp;raquo; If true, Mongoose will pass the validator properties object (with the &lt;code&gt;validator&lt;/code&gt; function, &lt;code&gt;message&lt;/code&gt;, etc.) as the 2nd arg to the validator function. This is disabled by default because many validators &lt;a href=&quot;https://github.com/chriso/validator.js#validators&quot;&gt;rely on positional args&lt;/a&gt;, so turning this on may cause unpredictable behavior in external validators.</source>
          <target state="translated">[obj.propsParameter = false]&amp;laquo;Boolean&amp;raquo;True 인 경우 Mongoose는 유효성 검사기 속성 개체 ( &lt;code&gt;validator&lt;/code&gt; 함수, &lt;code&gt;message&lt;/code&gt; 등)를 유효성 검사기 함수에 두 번째 인수로 전달합니다. 많은 유효성 검사기 &lt;a href=&quot;https://github.com/chriso/validator.js#validators&quot;&gt;가 위치 args에 의존&lt;/a&gt; 하기 때문에 기본적으로 비활성화되어 있으므로이 기능을 켜면 외부 유효성 검사기에서 예기치 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a67d5b3674b147dccd5477f1777691c1bd9662d5" translate="yes" xml:space="preserve">
          <source>[obj.validator] &amp;laquo;Function&amp;raquo; validator function. If the validator function returns &lt;code&gt;undefined&lt;/code&gt; or a truthy value, validation succeeds. If it returns &lt;a href=&quot;https://masteringjs.io/tutorials/fundamentals/falsy&quot;&gt;falsy&lt;/a&gt; (except &lt;code&gt;undefined&lt;/code&gt;) or throws an error, validation fails.</source>
          <target state="translated">[obj.validator]&amp;laquo;Function&amp;raquo;검사기 기능. 유효성 검사기 함수가 &lt;code&gt;undefined&lt;/code&gt; 값 또는 정확한 값을 반환 하면 유효성 검사가 성공합니다. &lt;a href=&quot;https://masteringjs.io/tutorials/fundamentals/falsy&quot;&gt;거짓&lt;/a&gt; 을 반환 하거나 ( &lt;code&gt;undefined&lt;/code&gt; 제외 ) 오류가 발생하면 유효성 검사가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="8dee350dece0a04d855dbff419eaf2a7a5e0f572" translate="yes" xml:space="preserve">
          <source>[obj] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[obj]&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="66e4c2435626e73866320aa5f1fbe55893480b05" translate="yes" xml:space="preserve">
          <source>[operation] &amp;laquo;String|Function&amp;raquo;</source>
          <target state="translated">[조작]&amp;laquo;문자열 | 함수&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="bdb7d835c2545449b20a454e39bf43a049bfd4dc" translate="yes" xml:space="preserve">
          <source>[ops.insertOne.document] &amp;laquo;Object&amp;raquo; The document to insert</source>
          <target state="translated">[ops.insertOne.document]&amp;laquo;Object&amp;raquo;삽입 할 문서</target>
        </trans-unit>
        <trans-unit id="4131924b915a6f9393a0af21f04e863bc018970e" translate="yes" xml:space="preserve">
          <source>[options.ErrorConstructor] &amp;laquo;Function&amp;raquo; custom error constructor. The constructor receives 1 parameter, an object containing the validator properties.</source>
          <target state="translated">[options.ErrorConstructor]&amp;laquo;Function&amp;raquo;사용자 정의 오류 생성자. 생성자는 유효성 검사기 속성이 포함 된 개체 인 1 개의 매개 변수를받습니다.</target>
        </trans-unit>
        <trans-unit id="0765840ced39839a6068d45dadc03ebf730f5d61" translate="yes" xml:space="preserve">
          <source>[options.aliases=true] &amp;laquo;Boolean&amp;raquo; if &lt;code&gt;options.virtuals = true&lt;/code&gt;, you can set &lt;code&gt;options.aliases = false&lt;/code&gt; to skip applying aliases. This option is a no-op if &lt;code&gt;options.virtuals = false&lt;/code&gt;.</source>
          <target state="translated">[options.aliases = true]&amp;laquo;Boolean&amp;raquo; &lt;code&gt;options.virtuals = true&lt;/code&gt; 인 경우 별명 적용을 건너 뛰도록 &lt;code&gt;options.aliases = false&lt;/code&gt; 를 설정할 수 있습니다 . &lt;code&gt;options.virtuals = false&lt;/code&gt; 경우이 옵션은 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c08d8f00c04373c45a82cdf4e6f3205651011706" translate="yes" xml:space="preserve">
          <source>[options.autoIndex=true] &amp;laquo;Boolean&amp;raquo; Mongoose-specific option. Set to false to disable automatic index creation for all models associated with this connection.</source>
          <target state="translated">[options.autoIndex = true]&amp;laquo;Boolean&amp;raquo;몽구스 관련 옵션입니다. 이 연결과 연관된 모든 모델에 대해 자동 색인 작성을 사용하지 않으려면 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a12a6f7f857ffeccc626eb58d8e57d4fefe1b2a0" translate="yes" xml:space="preserve">
          <source>[options.bufferCommands=true] &amp;laquo;Boolean&amp;raquo; Mongoose specific option. Set to false to &lt;a href=&quot;http://mongoosejs.com/docs/faq.html#callback_never_executes&quot;&gt;disable buffering&lt;/a&gt; on all models associated with this connection.</source>
          <target state="translated">[options.bufferCommands = true]&amp;laquo;Boolean&amp;raquo;몽구스 특정 옵션. 이 연결과 관련된 모든 모델에서 &lt;a href=&quot;http://mongoosejs.com/docs/faq.html#callback_never_executes&quot;&gt;버퍼링&lt;/a&gt; 을 비활성화 하려면 false로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="953cb3d8db0c89054271207c5519d90e6f56d091" translate="yes" xml:space="preserve">
          <source>[options.bufferMaxEntries] &amp;laquo;Number&amp;raquo; The MongoDB driver also has its own buffering mechanism that kicks in when the driver is disconnected. Set this option to 0 and set &lt;code&gt;bufferCommands&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; on your schemas if you want your database operations to fail immediately when the driver is not connected, as opposed to waiting for reconnection.</source>
          <target state="translated">[options.bufferMaxEntries]&amp;laquo;Number&amp;raquo;또한 MongoDB 드라이버에는 드라이버 연결이 끊어 질 때 자체 버퍼링 메커니즘이 있습니다. 다시 연결을 기다리는 대신 드라이버가 연결되지 않은 경우 데이터베이스 작업을 즉시 실패하게 하려면이 옵션을 0으로 설정하고 스키마에서 &lt;code&gt;bufferCommands&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="52262753c9060867792da9f09267726669dca503" translate="yes" xml:space="preserve">
          <source>[options.bypassDocumentValidation=false] &amp;laquo;Boolean&amp;raquo; If true, disable &lt;a href=&quot;https://docs.mongodb.com/manual/core/schema-validation/&quot;&gt;MongoDB server-side schema validation&lt;/a&gt; for all writes in this bulk.</source>
          <target state="translated">[options.bypassDocumentValidation = false]&amp;laquo;Boolean&amp;raquo;true 인 경우이 대량의 모든 쓰기에 대해 &lt;a href=&quot;https://docs.mongodb.com/manual/core/schema-validation/&quot;&gt;MongoDB 서버 측 스키마 유효성 검사&lt;/a&gt; 를 비활성화 합니다 .</target>
        </trans-unit>
        <trans-unit id="d49c97b4f0cbda59c2be81c587d58562b8308dbb" translate="yes" xml:space="preserve">
          <source>[options.causalConsistency=true] &amp;laquo;Boolean&amp;raquo; set to false to disable causal consistency</source>
          <target state="translated">[options.causalConsistency = true]&amp;laquo;부울&amp;raquo;인과 일관성을 비활성화하려면 false로 설정</target>
        </trans-unit>
        <trans-unit id="4bd841bc8add2b64659eb9e9d06b0dc9f983aab7" translate="yes" xml:space="preserve">
          <source>[options.checkKeys=true] &amp;laquo;Boolean&amp;raquo; the MongoDB driver prevents you from saving keys that start with '$' or contain '.' by default. Set this option to &lt;code&gt;false&lt;/code&gt; to skip that check. See &lt;a href=&quot;https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names&quot;&gt;restrictions on field names&lt;/a&gt;</source>
          <target state="translated">[options.checkKeys = true]&amp;laquo;Boolean&amp;raquo;MongoDB 드라이버는 '$'로 시작하거나 '.'를 포함하는 키를 저장하지 못하게합니다. 기본적으로. 해당 검사를 건너 뛰 려면이 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정 하십시오. &lt;a href=&quot;https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names&quot;&gt;필드 이름 제한 사항&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="e65a28da0d536ccc093b1e995b1ed45766c3d303" translate="yes" xml:space="preserve">
          <source>[options.clone=false] &amp;laquo;boolean&amp;raquo; When you do &lt;code&gt;BlogPost.find().populate('author')&lt;/code&gt;, blog posts with the same author will share 1 copy of an &lt;code&gt;author&lt;/code&gt; doc. Enable this option to make Mongoose clone populated docs before assigning them.</source>
          <target state="translated">[options.clone = false]&amp;laquo;boolean&amp;raquo; &lt;code&gt;BlogPost.find().populate('author')&lt;/code&gt; 를 수행하면 동일한 저자가있는 블로그 게시물은 &lt;code&gt;author&lt;/code&gt; 문서 1 부를 공유 합니다. Mongoose 복제 문서를 지정하기 전에 작성하려면이 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="01ff3388b53c8eaba26441e8a7e479aed99895ae" translate="yes" xml:space="preserve">
          <source>[options.connectTimeoutMS=30000] &amp;laquo;Number&amp;raquo; How long the MongoDB driver will wait before killing a socket due to inactivity &lt;em&gt;during initial connection&lt;/em&gt;. Defaults to 30000. This option is passed transparently to &lt;a href=&quot;https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback&quot;&gt;Node.js' &lt;code&gt;socket#setTimeout()&lt;/code&gt; function&lt;/a&gt;.</source>
          <target state="translated">[options.connectTimeoutMS = 30000]&amp;laquo;Number&amp;raquo; &lt;em&gt;초기 연결 중&lt;/em&gt; 비활성으로 인해 소켓을 종료하기 전에 MongoDB 드라이버가 대기하는 시간 입니다. 기본값은 30000입니다.이 옵션은 &lt;a href=&quot;https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback&quot;&gt;Node.js의 &lt;code&gt;socket#setTimeout()&lt;/code&gt; 함수에&lt;/a&gt; 투명하게 전달 됩니다 .</target>
        </trans-unit>
        <trans-unit id="362e591a0a3b17acc35f7df1ead34ecb04bf60e1" translate="yes" xml:space="preserve">
          <source>[options.count=false] &amp;laquo;Boolean&amp;raquo; Only works with populate virtuals. If &lt;a href=&quot;https://masteringjs.io/tutorials/fundamentals/truthy&quot;&gt;truthy&lt;/a&gt;, this populate virtual will contain the number of documents rather than the documents themselves when you &lt;code&gt;populate()&lt;/code&gt;.</source>
          <target state="translated">[options.count = false]&amp;laquo;Boolean&amp;raquo;채우기 가상에만 작동합니다. &lt;a href=&quot;https://masteringjs.io/tutorials/fundamentals/truthy&quot;&gt;진실&lt;/a&gt; 인 경우 ,이 채우기 가상에는 stuff &lt;code&gt;populate()&lt;/code&gt; 할 때 문서 자체가 아닌 문서 수가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="c575920b08e5ebc36ef03cb389a5947f137bad15" translate="yes" xml:space="preserve">
          <source>[options.count=false] &amp;laquo;boolean&amp;raquo; if you set this to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;populate()&lt;/code&gt; will set this virtual to the number of populated documents, as opposed to the documents themselves, using &lt;a href=&quot;api#query_Query-countDocuments&quot;&gt;&lt;code&gt;Query#countDocuments()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">당신이 설정 한 경우&amp;laquo;부울&amp;raquo;[options.count 거짓 =]를 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;populate()&lt;/code&gt; 문서 자체에 반대하여, 인구가 문서의 수에이 가상 설정됩니다 &lt;a href=&quot;api#query_Query-countDocuments&quot;&gt; &lt;code&gt;Query#countDocuments()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7846cf49ea8190e2cea5a2e259c4648cb4056c0c" translate="yes" xml:space="preserve">
          <source>[options.dbName] &amp;laquo;String&amp;raquo; The name of the database we want to use. If not provided, use database name from connection string.</source>
          <target state="translated">[options.dbName]&amp;laquo;문자열&amp;raquo;사용하려는 데이터베이스의 이름입니다. 제공되지 않은 경우 연결 문자열에서 데이터베이스 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bd74986c597251073dfc9ffffde98e147a25f93c" translate="yes" xml:space="preserve">
          <source>[options.depopulate=false] &amp;laquo;Boolean&amp;raquo; if true, replace any conventionally populated paths with the original id in the output. Has no affect on virtual populated paths.</source>
          <target state="translated">[options.depopulate = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 기존에 채워진 경로를 출력의 원래 ID로 바꿉니다. 가상으로 채워진 경로에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="104cda9b48b1a839642f8e97ae00361392fd70a4" translate="yes" xml:space="preserve">
          <source>[options.document] &amp;laquo;Boolean&amp;raquo; If &lt;code&gt;name&lt;/code&gt; is a hook for both document and query middleware, set to &lt;code&gt;true&lt;/code&gt; to run on document middleware.</source>
          <target state="translated">[options.document]&amp;laquo;Boolean&amp;raquo; &lt;code&gt;name&lt;/code&gt; 이 문서 및 쿼리 미들웨어 모두에 대한 후크 인 경우 문서 미들웨어에서 실행되도록 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3bdace7c6fafa8ad9b85e93c5fe66e6371c96c5" translate="yes" xml:space="preserve">
          <source>[options.expires=null] &amp;laquo;String&amp;raquo; Mongoose-specific syntactic sugar, uses &lt;a href=&quot;https://www.npmjs.com/package/ms&quot;&gt;ms&lt;/a&gt; to convert &lt;code&gt;expires&lt;/code&gt; option into seconds for the &lt;code&gt;expireAfterSeconds&lt;/code&gt; in the above link.</source>
          <target state="translated">[options.expires = null]&amp;laquo;문자열&amp;raquo;몽구스 관련 구문 설탕, &lt;a href=&quot;https://www.npmjs.com/package/ms&quot;&gt;ms&lt;/a&gt; 를 사용 하여 위의 링크에서 &lt;code&gt;expireAfterSeconds&lt;/code&gt; 에 대한 &lt;code&gt;expires&lt;/code&gt; 옵션을 초로 변환 합니다 .</target>
        </trans-unit>
        <trans-unit id="dafbe742804e0f45d223bc582f71bd0f7a8f7306" translate="yes" xml:space="preserve">
          <source>[options.family=0] &amp;laquo;Number&amp;raquo; Passed transparently to &lt;a href=&quot;https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback&quot;&gt;Node.js' &lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; function. May be either &lt;code&gt;0,&lt;/code&gt;4&lt;code&gt;, or&lt;/code&gt;6&lt;code&gt;.&lt;/code&gt;4&lt;code&gt;means use IPv4 only,&lt;/code&gt;6&lt;code&gt;means use IPv6 only,&lt;/code&gt;0` means try both.</source>
          <target state="translated">[options.family = 0]&amp;laquo;Number&amp;raquo; &lt;a href=&quot;https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback&quot;&gt;Node.js의 &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; 함수에 투명하게 전달 됩니다. &lt;code&gt;0,&lt;/code&gt; 4 &lt;code&gt;, or&lt;/code&gt; 6 일 수 있습니다 &lt;code&gt;.&lt;/code&gt; 4 &lt;code&gt;means use IPv4 only,&lt;/code&gt; 6 &lt;code&gt;means use IPv6 only,&lt;/code&gt; 0`은 모두 시도를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d0e6b58a687e9d3af575bbd25701815541e4fe52" translate="yes" xml:space="preserve">
          <source>[options.flattenMaps=false] &amp;laquo;Boolean&amp;raquo; if true, convert Maps to POJOs. Useful if you want to &lt;code&gt;JSON.stringify()&lt;/code&gt; the result of &lt;code&gt;toObject()&lt;/code&gt;.</source>
          <target state="translated">[options.flattenMaps = false]&amp;laquo;Boolean&amp;raquo;true 인 경우지도를 POJO로 변환합니다. &lt;code&gt;toObject()&lt;/code&gt; 의 결과 를 &lt;code&gt;JSON.stringify()&lt;/code&gt; 하려는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="bdea2ec38f53ea010c68d6f5f9b553be2505848c" translate="yes" xml:space="preserve">
          <source>[options.foreignField] &amp;laquo;String|Function&amp;raquo; Required for populate virtuals. See &lt;a href=&quot;populate#populate-virtuals&quot;&gt;populate virtual docs&lt;/a&gt; for more information.</source>
          <target state="translated">[options.foreignField]&amp;laquo;String | Function&amp;raquo;가상 채우기에 필요합니다. 자세한 내용은 &lt;a href=&quot;populate#populate-virtuals&quot;&gt;가상 문서 채우기&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b5670ed70f1a5264b0179f02d9cfe6bad8212393" translate="yes" xml:space="preserve">
          <source>[options.foreignField] &amp;laquo;string|function&amp;raquo; the foreign field to populate on if this is a populated virtual.</source>
          <target state="translated">[options.foreignField]&amp;laquo;string | function&amp;raquo;채워진 가상 인 경우 채울 외부 필드입니다.</target>
        </trans-unit>
        <trans-unit id="801bb4f3924e3fd2524c0c889dc223e326d749a0" translate="yes" xml:space="preserve">
          <source>[options.getters=false] &amp;laquo;Boolean&amp;raquo; if true, apply all getters, including virtuals</source>
          <target state="translated">[options.getters = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 가상을 포함한 모든 게터 적용</target>
        </trans-unit>
        <trans-unit id="87675bb258d464bbcb9e91daa0ddb9611a772f29" translate="yes" xml:space="preserve">
          <source>[options.getters=false] &amp;laquo;boolean&amp;raquo; if true, Mongoose will call any getters defined on the &lt;code&gt;localField&lt;/code&gt;. By default, Mongoose gets the raw value of &lt;code&gt;localField&lt;/code&gt;. For example, you would need to set this option to &lt;code&gt;true&lt;/code&gt; if you wanted to &lt;a href=&quot;../schematypes#schematype-options&quot;&gt;add a &lt;code&gt;lowercase&lt;/code&gt; getter to your &lt;code&gt;localField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">[options.getters = false]&amp;laquo;boolean&amp;raquo;true 인 경우 Mongoose는 &lt;code&gt;localField&lt;/code&gt; 에 정의 된 getter를 호출합니다 . 기본적으로 Mongoose는 &lt;code&gt;localField&lt;/code&gt; 의 원시 값을 가져 옵니다 . 예를 들어 &lt;a href=&quot;../schematypes#schematype-options&quot;&gt; &lt;code&gt;localField&lt;/code&gt; 에&lt;/a&gt; &lt;code&gt;lowercase&lt;/code&gt; getter를 추가 하려면 이 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="18a079e28e69030f7f16e7d2a85b0a41ce525a6d" translate="yes" xml:space="preserve">
          <source>[options.getters=false] &amp;laquo;boolean&amp;raquo; if you set this to &lt;code&gt;true&lt;/code&gt;, Mongoose will call any custom getters you defined on this virtual</source>
          <target state="translated">[options.getters = false]&amp;laquo;boolean&amp;raquo;이것을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 Mongoose는이 가상에 정의한 모든 사용자 지정 게터를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="1e52a50ca825bf4b0c8968b4061e46a4d4fabc36" translate="yes" xml:space="preserve">
          <source>[options.getters=true] &amp;laquo;Boolean&amp;raquo; If false, skip applying getters and just get the raw value</source>
          <target state="translated">[options.getters = true]&amp;laquo;Boolean&amp;raquo;false 인 경우 게터 적용을 건너 뛰고 원래 값만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e3ce64ce9f9330e7d1c64bb91d8b62356de021bc" translate="yes" xml:space="preserve">
          <source>[options.includeChildren=false] &amp;laquo;Boolean&amp;raquo; if true, returns children of modified paths as well. For example, if false, the list of modified paths for &lt;code&gt;doc.colors = { primary: 'blue' };&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; contain &lt;code&gt;colors.primary&lt;/code&gt;. If true, &lt;code&gt;modifiedPaths()&lt;/code&gt; will return an array that contains &lt;code&gt;colors.primary&lt;/code&gt;.</source>
          <target state="translated">[options.includeChildren = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 수정 된 경로의 자식도 반환합니다. 예를 들어, false 인 경우 &lt;code&gt;doc.colors = { primary: 'blue' };&lt;/code&gt; 대한 수정 된 경로 목록입니다 . 할 &lt;strong&gt;수 없습니다&lt;/strong&gt; 포함 &lt;code&gt;colors.primary&lt;/code&gt; . true 인 경우 &lt;code&gt;modifiedPaths()&lt;/code&gt; 는 &lt;code&gt;colors.primary&lt;/code&gt; 가 포함 된 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f66e03e5fd129e0984676cbb2c072c93daf5d0c0" translate="yes" xml:space="preserve">
          <source>[options.isRequired] &amp;laquo;Boolean|Function&amp;raquo; enable/disable the validator, or function that returns required boolean</source>
          <target state="translated">[options.isRequired]&amp;laquo;Boolean | Function&amp;raquo;유효성 검사기 또는 필수 부울을 반환하는 함수를 활성화 / 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="80f8dd3787a23e33be98881259a85462aa4f76aa" translate="yes" xml:space="preserve">
          <source>[options.j=true] &amp;laquo;Boolean&amp;raquo; If false, disable &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#j-option&quot;&gt;journal acknowledgement&lt;/a&gt;</source>
          <target state="translated">[options.j = true]&amp;laquo;Boolean&amp;raquo;false 인 경우 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#j-option&quot;&gt;저널 승인을&lt;/a&gt; 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="419122b42bb3f4ce6510497a26864a501dfbcd85" translate="yes" xml:space="preserve">
          <source>[options.j] &amp;laquo;Boolean&amp;raquo; set to true for MongoDB to wait until this &lt;code&gt;save()&lt;/code&gt; has been &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#j-option&quot;&gt;journaled before resolving the returned promise&lt;/a&gt;. Overrides the &lt;a href=&quot;../guide#writeConcern&quot;&gt;schema-level &lt;code&gt;writeConcern&lt;/code&gt; option&lt;/a&gt;</source>
          <target state="translated">[options.j]&amp;laquo;Boolean&amp;raquo; &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#j-option&quot;&gt;반환 된 promise를 해결하기 전에&lt;/a&gt; MongoDB가이 &lt;code&gt;save()&lt;/code&gt; 가 저널링 될 때까지 기다리려면 true로 설정 하십시오 . &lt;a href=&quot;../guide#writeConcern&quot;&gt;스키마 레벨 &lt;/a&gt; &lt;code&gt;writeConcern&lt;/code&gt; 옵션을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="29acb623740b6029f2c07f3077f525c80cec2301" translate="yes" xml:space="preserve">
          <source>[options.justOne=false] &amp;laquo;Boolean|Function&amp;raquo; Only works with populate virtuals. If &lt;a href=&quot;https://masteringjs.io/tutorials/fundamentals/truthy&quot;&gt;truthy&lt;/a&gt;, will be a single doc or &lt;code&gt;null&lt;/code&gt;. Otherwise, the populate virtual will be an array.</source>
          <target state="translated">[options.justOne = false]&amp;laquo;Boolean | Function&amp;raquo;가상 채우기에만 작동합니다. &lt;a href=&quot;https://masteringjs.io/tutorials/fundamentals/truthy&quot;&gt;진실한&lt;/a&gt; 경우 단일 문서 또는 &lt;code&gt;null&lt;/code&gt; 이 됩니다. 그렇지 않으면 채워진 가상이 배열이됩니다.</target>
        </trans-unit>
        <trans-unit id="67d1ba0d9efbab70824bd49492f1b64ac5a487fa" translate="yes" xml:space="preserve">
          <source>[options.justOne=false] &amp;laquo;boolean&amp;raquo; by default, a populated virtual is an array. If you set &lt;code&gt;justOne&lt;/code&gt;, the populated virtual will be a single doc or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">[options.justOne = false]&amp;laquo;boolean&amp;raquo;기본적으로 채워진 가상은 배열입니다. &lt;code&gt;justOne&lt;/code&gt; 을 설정 하면 채워진 가상은 단일 doc 또는 &lt;code&gt;null&lt;/code&gt; 이 됩니다.</target>
        </trans-unit>
        <trans-unit id="4ba2f015362cb9279b6ad39917b29bc098cf9d03" translate="yes" xml:space="preserve">
          <source>[options.lean] &amp;laquo;Object&amp;raquo; if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;&lt;code&gt;Query.lean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">[options.lean]&amp;laquo;Object&amp;raquo;진실하면 몽구스는 문서를 몽구스 문서가 아닌 일반 JavaScript 객체로 반환합니다. &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt; &lt;code&gt;Query.lean()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e1b265594854df2017513f11c26b8ffb064f3ed" translate="yes" xml:space="preserve">
          <source>[options.lean] &amp;laquo;Object&amp;raquo; if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;&lt;code&gt;Query.lean()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../tutorials/lean&quot;&gt;the Mongoose lean tutorial&lt;/a&gt;.</source>
          <target state="translated">[options.lean]&amp;laquo;Object&amp;raquo;진실하면 몽구스는 문서를 몽구스 문서가 아닌 일반 JavaScript 객체로 반환합니다. &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt; &lt;code&gt;Query.lean()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../tutorials/lean&quot;&gt;Mongoose lean tutorial을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d39e02ede3b3af6ce10dafaf71c04bd75c4ee698" translate="yes" xml:space="preserve">
          <source>[options.lean] &amp;laquo;Object&amp;raquo; if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;&lt;code&gt;Query.lean()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../tutorials/lean&quot;&gt;Mongoose lean tutorial&lt;/a&gt;.</source>
          <target state="translated">[options.lean]&amp;laquo;Object&amp;raquo;진실하면 몽구스는 문서를 몽구스 문서가 아닌 일반 JavaScript 객체로 반환합니다. &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt; &lt;code&gt;Query.lean()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../tutorials/lean&quot;&gt;Mongoose lean tutorial을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad3272158030996c196c33fb4181d1a129dff124" translate="yes" xml:space="preserve">
          <source>[options.lean] &amp;laquo;Object|Boolean&amp;raquo; if truthy, mongoose will return the document as a plain JavaScript object rather than a mongoose document. See &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt;&lt;code&gt;Query.lean()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../tutorials/lean&quot;&gt;Mongoose lean tutorial&lt;/a&gt;.</source>
          <target state="translated">[options.lean]&amp;laquo;Object | Boolean&amp;raquo;진실하면 몽구스는 문서를 몽구스 문서가 아닌 일반 JavaScript 객체로 반환합니다. &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-lean&quot;&gt; &lt;code&gt;Query.lean()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../tutorials/lean&quot;&gt;Mongoose lean tutorial을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcb5d1582c8c89b53256b4c00c893658995d3e47" translate="yes" xml:space="preserve">
          <source>[options.localField] &amp;laquo;String|Function&amp;raquo; Required for populate virtuals. See &lt;a href=&quot;populate#populate-virtuals&quot;&gt;populate virtual docs&lt;/a&gt; for more information.</source>
          <target state="translated">[options.localField]&amp;laquo;String | Function&amp;raquo;가상 채우기에 필요합니다. 자세한 내용은 &lt;a href=&quot;populate#populate-virtuals&quot;&gt;가상 문서 채우기&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a8a84f2b1231ec1737eb16242244196c3a9113b3" translate="yes" xml:space="preserve">
          <source>[options.localField] &amp;laquo;string|function&amp;raquo; the local field to populate on if this is a populated virtual.</source>
          <target state="translated">[options.localField]&amp;laquo;string | function&amp;raquo;채워진 가상 인 경우 채울 로컬 필드입니다.</target>
        </trans-unit>
        <trans-unit id="503deaf8a482b8e5e0cd7bb5e70d9e43da6cc7f5" translate="yes" xml:space="preserve">
          <source>[options.match=null] &amp;laquo;Object|Function&amp;raquo; Add an additional filter to the populate query. Can be a filter object containing &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/query-documents/&quot;&gt;MongoDB query syntax&lt;/a&gt;, or a function that returns a filter object.</source>
          <target state="translated">[options.match = null]&amp;laquo;Object | Function&amp;raquo;채우기 쿼리에 추가 필터를 추가합니다. &lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/query-documents/&quot;&gt;MongoDB 쿼리 구문을&lt;/a&gt; 포함하는 필터 객체 이거나 필터 객체를 반환하는 함수일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a765e00bb913065ae729f195a899529de79bb639" translate="yes" xml:space="preserve">
          <source>[options.minimize=true] &amp;laquo;Boolean&amp;raquo; if true, omit any empty objects from the output</source>
          <target state="translated">[options.minimize = true]&amp;laquo;Boolean&amp;raquo;true 인 경우 출력에서 ​​빈 객체를 생략합니다.</target>
        </trans-unit>
        <trans-unit id="9d97c3900a8464cb1bc42c3ad46ee5a4c5c3aeae" translate="yes" xml:space="preserve">
          <source>[options.multi=false] &amp;laquo;Boolean&amp;raquo; whether multiple documents should be updated or just the first one that matches &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">[options.multi = false]&amp;laquo;Boolean&amp;raquo;여러 문서를 업데이트해야하는지 아니면 &lt;code&gt;filter&lt;/code&gt; 와 일치하는 첫 번째 문서인지를 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="82e6b6fbecd3f85480fb1e4ff3e422f4842ed4f2" translate="yes" xml:space="preserve">
          <source>[options.multipleCastError] &amp;laquo;Boolean&amp;raquo; by default, mongoose only returns the first error that occurred in casting the query. Turn on this option to aggregate all the cast errors.</source>
          <target state="translated">[options.multipleCastError]&amp;laquo;Boolean&amp;raquo;기본적으로 mongoose는 쿼리를 캐스팅 할 때 발생한 첫 번째 오류 만 반환합니다. 모든 캐스트 오류를 ​​집계하려면이 옵션을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5fa049e6830be5c56ea50aab282b7a80349de37e" translate="yes" xml:space="preserve">
          <source>[options.omitUndefined=false] &amp;laquo;Boolean&amp;raquo; If true, delete any properties whose value is &lt;code&gt;undefined&lt;/code&gt; when casting an update. In other words, if this is set, Mongoose will delete &lt;code&gt;baz&lt;/code&gt; from the update in &lt;code&gt;Model.updateOne({}, { foo: 'bar', baz: undefined })&lt;/code&gt; before sending the update to the server.</source>
          <target state="translated">[options.omitUndefined = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 업데이트를 캐스팅 할 때 값이 &lt;code&gt;undefined&lt;/code&gt; 속성을 삭제합니다 . 즉, 설정되어 있으면 몽구스는 서버로 업데이트를 보내기 전에 &lt;code&gt;Model.updateOne({}, { foo: 'bar', baz: undefined })&lt;/code&gt; 의 업데이트에서 &lt;code&gt;baz&lt;/code&gt; 를 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="970f0ac06979d25692f892aa2c62a704079475ec" translate="yes" xml:space="preserve">
          <source>[options.options=null] &amp;laquo;Object&amp;raquo; Additional options like &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;lean&lt;/code&gt;.</source>
          <target state="translated">[options.options = null]&amp;laquo;Object&amp;raquo; &lt;code&gt;limit&lt;/code&gt; 및 &lt;code&gt;lean&lt;/code&gt; 과 같은 추가 옵션 .</target>
        </trans-unit>
        <trans-unit id="daaad032d34c1a16ae9014ddaf8b5a0c93543534" translate="yes" xml:space="preserve">
          <source>[options.ordered &amp;laquo;Boolean&amp;raquo; = true] if true, will fail fast on the first error encountered. If false, will insert all the documents it can and report errors later. An &lt;code&gt;insertMany()&lt;/code&gt; with &lt;code&gt;ordered = false&lt;/code&gt; is called an &quot;unordered&quot; &lt;code&gt;insertMany()&lt;/code&gt;.</source>
          <target state="translated">[options ordered&amp;laquo;Boolean&amp;raquo;= true] true 인 경우 첫 번째 오류가 발생하면 빠르게 실패합니다. false 인 경우 가능한 모든 문서를 삽입하고 나중에 오류를보고합니다. &lt;code&gt;ordered = false&lt;/code&gt; 인 &lt;code&gt;insertMany()&lt;/code&gt; 를 &quot;정렬되지 않은&quot; &lt;code&gt;insertMany()&lt;/code&gt; 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="68d3f221122ee631f94f0e7dd8081536824547b3" translate="yes" xml:space="preserve">
          <source>[options.ordered=true] &amp;laquo;Boolean&amp;raquo; If true, execute writes in order and stop at the first error. If false, execute writes in parallel and continue until all writes have either succeeded or errored.</source>
          <target state="translated">[options. order = true]&amp;laquo;Boolean&amp;raquo;true 인 경우 순서대로 쓰기를 실행하고 첫 번째 오류 발생시 중지합니다. False이면 쓰기를 병렬로 실행하고 모든 쓰기가 성공 또는 오류가 될 때까지 계속합니다.</target>
        </trans-unit>
        <trans-unit id="667ed323ee6615935f60e61c470e01711b0cb50e" translate="yes" xml:space="preserve">
          <source>[options.overwrite=false] &amp;laquo;Boolean&amp;raquo; By default, if you don't include any &lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/update/&quot;&gt;update operators&lt;/a&gt; in &lt;code&gt;doc&lt;/code&gt;, Mongoose will wrap &lt;code&gt;doc&lt;/code&gt; in &lt;code&gt;$set&lt;/code&gt; for you. This prevents you from accidentally overwriting the document. This option tells Mongoose to skip adding &lt;code&gt;$set&lt;/code&gt;.</source>
          <target state="translated">[options.overwrite = false]&amp;laquo;Boolean&amp;raquo;기본적 으로 &lt;code&gt;doc&lt;/code&gt; 에&lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/update/&quot;&gt;업데이트 연산자&lt;/a&gt; 를 포함하지 않으면 Mongoose가 &lt;code&gt;doc&lt;/code&gt; 를 &lt;code&gt;$set&lt;/code&gt; 에 래핑 합니다. 이렇게하면 실수로 문서를 덮어 쓰지 못하게됩니다. 이 옵션은 Mongoose에게 &lt;code&gt;$set&lt;/code&gt; 추가를 건너 뛰도록 지시 합니다 .</target>
        </trans-unit>
        <trans-unit id="9cdb265146b38041c4e622f88fe104e21e813f88" translate="yes" xml:space="preserve">
          <source>[options.parallel] &amp;laquo;Number&amp;raquo; the number of promises to execute in parallel. Defaults to 1.</source>
          <target state="translated">[options.parallel]&amp;laquo;Number&amp;raquo;병렬로 실행할 약속 수입니다. 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="be5d1489f6d49193d4930f20a8d35fefddaf37c4" translate="yes" xml:space="preserve">
          <source>[options.pass] &amp;laquo;String&amp;raquo; password for authentication, equivalent to &lt;code&gt;options.auth.password&lt;/code&gt;. Maintained for backwards compatibility.</source>
          <target state="translated">[options.pass]&amp;laquo;String&amp;raquo;인증을위한 비밀번호이며 &lt;code&gt;options.auth.password&lt;/code&gt; 와 같습니다 . 이전 버전과의 호환성을 위해 유지 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="94337e924e59a608b467da3d89a6f25ae18deadd" translate="yes" xml:space="preserve">
          <source>[options.path=null] &amp;laquo;String&amp;raquo; The path to populate.</source>
          <target state="translated">[options.path = null]&amp;laquo;String&amp;raquo;채울 경로입니다.</target>
        </trans-unit>
        <trans-unit id="ef20be50ca7a0daf2da20457b3554c87110c2bf6" translate="yes" xml:space="preserve">
          <source>[options.poolSize=5] &amp;laquo;Number&amp;raquo; The maximum number of sockets the MongoDB driver will keep open for this connection. By default, &lt;code&gt;poolSize&lt;/code&gt; is 5. Keep in mind that, as of MongoDB 3.4, MongoDB only allows one operation per socket at a time, so you may want to increase this if you find you have a few slow queries that are blocking faster queries from proceeding. See &lt;a href=&quot;http://thecodebarbarian.com/slow-trains-in-mongodb-and-nodejs&quot;&gt;Slow Trains in MongoDB and Node.js&lt;/a&gt;.</source>
          <target state="translated">[options.poolSize = 5]&amp;laquo;Number&amp;raquo;이 연결에 대해 MongoDB 드라이버가 열어 놓은 최대 소켓 수입니다. 기본적으로 &lt;code&gt;poolSize&lt;/code&gt; 는 5입니다. MongoDB 3.4부터 MongoDB는 한 번에 소켓 당 하나의 작업 만 허용하므로 빠른 쿼리를 차단하는 느린 쿼리가 몇 개있는 경우이 값을 늘리는 것이 좋습니다. 진행. &lt;a href=&quot;http://thecodebarbarian.com/slow-trains-in-mongodb-and-nodejs&quot;&gt;MongoDB 및 Node.js의 느린 열차를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43b3a97fe93297ce5a95a7965260039411678b2f" translate="yes" xml:space="preserve">
          <source>[options.promiseLibrary] &amp;laquo;Class&amp;raquo; Sets the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/MongoClient.html&quot;&gt;underlying driver's promise library&lt;/a&gt;.</source>
          <target state="translated">[options.promiseLibrary]&amp;laquo;Class&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/MongoClient.html&quot;&gt;기본 드라이버의 약속 라이브러리를&lt;/a&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9d3e354047848e284e1f6a1f23db3095eba32c6d" translate="yes" xml:space="preserve">
          <source>[options.promiseLibrary] &amp;laquo;Class&amp;raquo; Sets the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/MongoClient.html&quot;&gt;underlying driver's promise library&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318492de8d5d4663dd657cb90792c4d027a7f5ee" translate="yes" xml:space="preserve">
          <source>[options.query] &amp;laquo;Boolean&amp;raquo; If &lt;code&gt;name&lt;/code&gt; is a hook for both document and query middleware, set to &lt;code&gt;true&lt;/code&gt; to run on query middleware.</source>
          <target state="translated">[options.query]&amp;laquo;Boolean&amp;raquo; &lt;code&gt;name&lt;/code&gt; 이 문서 및 쿼리 미들웨어 모두에 대한 후크 인 경우 쿼리 미들웨어에서 실행되도록 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="9852a99c91b66d22a7b1e90eb8496bbe05a0361e" translate="yes" xml:space="preserve">
          <source>[options.rawResult &amp;laquo;Boolean&amp;raquo; = false] if false, the returned promise resolves to the documents that passed mongoose document validation. If &lt;code&gt;true&lt;/code&gt;, will return the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~insertWriteOpCallback&quot;&gt;raw result from the MongoDB driver&lt;/a&gt; with a &lt;code&gt;mongoose&lt;/code&gt; property that contains &lt;code&gt;validationErrors&lt;/code&gt; if this is an unordered &lt;code&gt;insertMany&lt;/code&gt;.</source>
          <target state="translated">[options.rawResult&amp;laquo;Boolean&amp;raquo;= false] false 인 경우 반환 된 약속은 몽구스 문서 유효성 검사를 통과 한 문서로 확인됩니다. 경우 &lt;code&gt;true&lt;/code&gt; 를 반환합니다 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~insertWriteOpCallback&quot;&gt;MongoDB를 드라이버에서 원시 결과를&lt;/a&gt; 와 &lt;code&gt;mongoose&lt;/code&gt; 포함 재산 &lt;code&gt;validationErrors&lt;/code&gt; 를 이 정렬되지 않은 경우 &lt;code&gt;insertMany&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aca6dbcd844212383a8a5bfb76d4bf9f544cb209" translate="yes" xml:space="preserve">
          <source>[options.rawResult &amp;laquo;Boolean&amp;raquo; = false] if false, the returned promise resolves to the documents that passed mongoose document validation. If &lt;code&gt;true&lt;/code&gt;, will return the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~insertWriteOpCallback&quot;&gt;raw result from the MongoDB driver&lt;/a&gt; with a &lt;code&gt;mongoose&lt;/code&gt; property that contains &lt;code&gt;validationErrors&lt;/code&gt; if this is an unordered &lt;code&gt;insertMany&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15182e22f0abc3e3402a9ad0e43d14a86c6820a0" translate="yes" xml:space="preserve">
          <source>[options.rawResult] &amp;laquo;Boolean&amp;raquo; if true, returns the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify&quot;&gt;raw result from the MongoDB driver&lt;/a&gt;</source>
          <target state="translated">[options.rawResult]&amp;laquo;Boolean&amp;raquo;true 인 경우 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify&quot;&gt;MongoDB 드라이버에서 원시 결과를&lt;/a&gt; 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="721ca9de695f4abffa9eda059a2ef45812fcf18e" translate="yes" xml:space="preserve">
          <source>[options.rawResult] &amp;laquo;Boolean&amp;raquo; if true, returns the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify&quot;&gt;raw result from the MongoDB driver&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bd671b6b5e49baae44ad89b48ef1b464c31a9b" translate="yes" xml:space="preserve">
          <source>[options.reconnectInterval=1000] &amp;laquo;Number&amp;raquo; See &lt;code&gt;reconnectTries&lt;/code&gt; option above.</source>
          <target state="translated">[options.reconnectInterval = 1000]&amp;laquo;번호&amp;raquo; 위의 &lt;code&gt;reconnectTries&lt;/code&gt; 옵션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="35b476df71f3cf1174c747ca934a3e8863646352" translate="yes" xml:space="preserve">
          <source>[options.reconnectTries=30] &amp;laquo;Number&amp;raquo; If you're connected to a single server or mongos proxy (as opposed to a replica set), the MongoDB driver will try to reconnect every &lt;code&gt;reconnectInterval&lt;/code&gt; milliseconds for &lt;code&gt;reconnectTries&lt;/code&gt; times, and give up afterward. When the driver gives up, the mongoose connection emits a &lt;code&gt;reconnectFailed&lt;/code&gt; event. This option does nothing for replica set connections.</source>
          <target state="translated">[options.reconnectTries = 30]&amp;laquo;번호&amp;raquo;(복제 세트에 반대) 단일 서버 또는 mongos 프록시에 연결되어있는 경우, MongoDB의 드라이버가 모든 다시 연결을 시도합니다 &lt;code&gt;reconnectInterval&lt;/code&gt; (밀리 초) &lt;code&gt;reconnectTries&lt;/code&gt; 의 시간을, 그리고 이후에 포기. 드라이버가 포기하면 몽구스 연결에서 &lt;code&gt;reconnectFailed&lt;/code&gt; 이벤트가 발생합니다 . 이 옵션은 복제 세트 연결에 대해서는 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b09532addc04cb998e0659f920d78edb09cfc486" translate="yes" xml:space="preserve">
          <source>[options.ref] &amp;laquo;String|Model&amp;raquo; model name or model instance. Marks this as a &lt;a href=&quot;populate#populate-virtuals&quot;&gt;populate virtual&lt;/a&gt;.</source>
          <target state="translated">[options.ref]&amp;laquo;문자열 | 모델&amp;raquo;모델 이름 또는 모델 인스턴스. 이것을 &lt;a href=&quot;populate#populate-virtuals&quot;&gt;가상 채우기&lt;/a&gt; 로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="15ef2370da3a372d782bc9b367b9ff1ad960dbd4" translate="yes" xml:space="preserve">
          <source>[options.ref] &amp;laquo;string|function&amp;raquo; if &lt;code&gt;ref&lt;/code&gt; is not nullish, this becomes a &lt;a href=&quot;../populate#populate-virtuals&quot;&gt;populated virtual&lt;/a&gt;</source>
          <target state="translated">[options.ref]&amp;laquo;string | function&amp;raquo; &lt;code&gt;ref&lt;/code&gt; 가 null이 아닌 경우 &lt;a href=&quot;../populate#populate-virtuals&quot;&gt;채워진 가상&lt;/a&gt; 이됩니다.</target>
        </trans-unit>
        <trans-unit id="d2dc7b8f5fcd9f19c9d63f1fa1a1e9b390eb9a76" translate="yes" xml:space="preserve">
          <source>[options.retainNullValues=false] &amp;laquo;boolean&amp;raquo; by default, Mongoose removes null and undefined values from populated arrays. Use this option to make &lt;code&gt;populate()&lt;/code&gt; retain &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; array entries.</source>
          <target state="translated">[options.retainNullValues ​​= false]&amp;laquo;boolean&amp;raquo;기본적으로 몽구스는 채워진 배열에서 null 및 undefined 값을 제거합니다. &lt;code&gt;populate()&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 및 &lt;code&gt;undefined&lt;/code&gt; 배열 항목을 보유 하게하려면이 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd467ef45ed981e3ff7a5ff4c2fb05c0edc7b1f4" translate="yes" xml:space="preserve">
          <source>[options.runValidators=false] &amp;laquo;Boolean&amp;raquo; if true, runs &lt;a href=&quot;../validation#update-validators&quot;&gt;update validators&lt;/a&gt; on this command. Update validators validate the update operation against the model's schema.</source>
          <target state="translated">[options.runValidators = false]&amp;laquo;Boolean&amp;raquo;true 인 경우이 명령에서 &lt;a href=&quot;../validation#update-validators&quot;&gt;업데이트 유효성 검사기&lt;/a&gt; 를 실행합니다. 업데이트 유효성 검사기는 모델 스키마에 대해 업데이트 작업의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="d1485e0f9d7ad7215ef2412f2e7969e42110f98f" translate="yes" xml:space="preserve">
          <source>[options.safe] &amp;laquo;Object&amp;raquo; (DEPRECATED) overrides &lt;a href=&quot;http://mongoosejs.com//docs/guide.html#safe&quot;&gt;schema's safe option&lt;/a&gt;</source>
          <target state="translated">[options.safe]&amp;laquo;Object&amp;raquo;(DEPRECATED)는 &lt;a href=&quot;http://mongoosejs.com//docs/guide.html#safe&quot;&gt;스키마의 안전 옵션을&lt;/a&gt; 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="fc41bc658e52e8f281df96ee021319562ca8dd37" translate="yes" xml:space="preserve">
          <source>[options.safe] &amp;laquo;Object&amp;raquo; (DEPRECATED) overrides &lt;a href=&quot;http://mongoosejs.com//docs/guide.html#safe&quot;&gt;schema's safe option&lt;/a&gt;. Use the &lt;code&gt;w&lt;/code&gt; option instead.</source>
          <target state="translated">[options.safe]&amp;laquo;Object&amp;raquo;(DEPRECATED)는 &lt;a href=&quot;http://mongoosejs.com//docs/guide.html#safe&quot;&gt;스키마의 safe 옵션을&lt;/a&gt; 재정의 합니다. 대신 &lt;code&gt;w&lt;/code&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="effc91cbd91b12cfc4683e2b7ae0e5b1f1a1d04c" translate="yes" xml:space="preserve">
          <source>[options.session=null] &amp;laquo;ClientSession&amp;raquo; The session associated with this bulk write. See &lt;a href=&quot;../transactions&quot;&gt;transactions docs&lt;/a&gt;.</source>
          <target state="translated">[options.session = null]&amp;laquo;ClientSession&amp;raquo;이 대량 쓰기와 관련된 세션입니다. &lt;a href=&quot;../transactions&quot;&gt;거래 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d340c14fc48876bb752036676f4e745474edf306" translate="yes" xml:space="preserve">
          <source>[options.session=null] &amp;laquo;ClientSession&amp;raquo; The session associated with this query. See &lt;a href=&quot;../transactions&quot;&gt;transactions docs&lt;/a&gt;.</source>
          <target state="translated">[options.session = null]&amp;laquo;ClientSession&amp;raquo;이 쿼리와 관련된 세션입니다. &lt;a href=&quot;../transactions&quot;&gt;거래 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="725f9eb2ffa02132898b5ec7dd90ddc5f2b02609" translate="yes" xml:space="preserve">
          <source>[options.session=null] &amp;laquo;Session&amp;raquo; the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;session&lt;/a&gt; associated with this operation.</source>
          <target state="translated">[options.session = null] 이 작업과 관련된 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;세션을&lt;/a&gt; &amp;laquo;세션&amp;raquo; 입니다.</target>
        </trans-unit>
        <trans-unit id="b6c14822fc666d0c6040549f4678caf8b246aac8" translate="yes" xml:space="preserve">
          <source>[options.session=null] &amp;laquo;Session&amp;raquo; the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;session&lt;/a&gt; associated with this operation. If not specified, defaults to the &lt;a href=&quot;api#document_Document-%24session&quot;&gt;document's associated session&lt;/a&gt;.</source>
          <target state="translated">[options.session = null] 이 작업과 관련된 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;세션을&lt;/a&gt; &amp;laquo;세션&amp;raquo; 입니다. 지정되지 않은 경우 기본값은 &lt;a href=&quot;api#document_Document-%24session&quot;&gt;문서의 연관된 세션&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9d9101536ea9c2a226c645cead4d0bb372fce43b" translate="yes" xml:space="preserve">
          <source>[options.session=null] &amp;laquo;Session&amp;raquo; the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;session&lt;/a&gt; associated with this save operation. If not specified, defaults to the &lt;a href=&quot;api#document_Document-%24session&quot;&gt;document's associated session&lt;/a&gt;.</source>
          <target state="translated">[options.session = null] 이 저장 작업과 관련된 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/server-sessions/&quot;&gt;세션을&lt;/a&gt; &amp;laquo;세션&amp;raquo; 입니다. 지정되지 않은 경우 기본값은 &lt;a href=&quot;api#document_Document-%24session&quot;&gt;문서의 연관된 세션&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7504dd89cb4411d5dfc1f80d983630aa301cae3b" translate="yes" xml:space="preserve">
          <source>[options.setDefaultsOnInsert=false] &amp;laquo;Boolean&amp;raquo; if this and &lt;code&gt;upsert&lt;/code&gt; are true, mongoose will apply the &lt;a href=&quot;http://mongoosejs.com/docs/defaults.html&quot;&gt;defaults&lt;/a&gt; specified in the model's schema if a new document is created. This option only works on MongoDB &amp;gt;= 2.4 because it relies on &lt;a href=&quot;https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/&quot;&gt;MongoDB's &lt;code&gt;$setOnInsert&lt;/code&gt; operator&lt;/a&gt;.</source>
          <target state="translated">[options.setDefaultsOnInsert = false]&amp;laquo;Boolean&amp;raquo;이 &lt;code&gt;upsert&lt;/code&gt; 과 upsert 가 true이면 mongoose는 새 문서가 생성 될 경우 모델 스키마에 지정된 &lt;a href=&quot;http://mongoosejs.com/docs/defaults.html&quot;&gt;기본값&lt;/a&gt; 을 적용합니다 . 이 옵션은 &lt;a href=&quot;https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/&quot;&gt;MongoDB의 &lt;code&gt;$setOnInsert&lt;/code&gt; 연산자를&lt;/a&gt; 사용하므로 MongoDB&amp;gt; = 2.4에서만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="399f917862eaefeb85b5a852c4775556e37c3f8f" translate="yes" xml:space="preserve">
          <source>[options.skipInvalidIds=false] &amp;laquo;Boolean&amp;raquo; By default, Mongoose throws a cast error if &lt;code&gt;localField&lt;/code&gt; and &lt;code&gt;foreignField&lt;/code&gt; schemas don't line up. If you enable this option, Mongoose will instead filter out any &lt;code&gt;localField&lt;/code&gt; properties that cannot be casted to &lt;code&gt;foreignField&lt;/code&gt;'s schema type.</source>
          <target state="translated">[options.skipInvalidIds = false]&amp;laquo;Boolean&amp;raquo;기본적으로 &lt;code&gt;localField&lt;/code&gt; 및 &lt;code&gt;foreignField&lt;/code&gt; 스키마가 정렬되지 않으면 Mongoose에서 캐스트 오류가 발생 합니다. 이 옵션을 사용하면 Mongoose는 &lt;code&gt;foreignField&lt;/code&gt; 의 스키마 유형 으로 캐스트 할 수없는 모든 &lt;code&gt;localField&lt;/code&gt; 속성을 필터링 합니다.</target>
        </trans-unit>
        <trans-unit id="5b1681bb83d26b60b85efb17b2b5c4779ea20b65" translate="yes" xml:space="preserve">
          <source>[options.socketTimeoutMS=30000] &amp;laquo;Number&amp;raquo; How long the MongoDB driver will wait before killing a socket due to inactivity &lt;em&gt;after initial connection&lt;/em&gt;. A socket may be inactive because of either no activity or a long-running operation. This is set to &lt;code&gt;30000&lt;/code&gt; by default, you should set this to 2-3x your longest running operation if you expect some of your database operations to run longer than 20 seconds. This option is passed to &lt;a href=&quot;https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback&quot;&gt;Node.js &lt;code&gt;socket#setTimeout()&lt;/code&gt; function&lt;/a&gt; after the MongoDB driver successfully completes.</source>
          <target state="translated">[options.socketTimeoutMS = 30000]&amp;laquo;Number&amp;raquo; &lt;em&gt;초기 연결 후&lt;/em&gt; 비활성 &lt;em&gt;상태&lt;/em&gt; 로 인해 소켓을 종료하기 전에 MongoDB 드라이버가 대기하는 시간 입니다. 활동이 없거나 장기 실행 조작으로 인해 소켓이 비활성 상태 일 수 있습니다. 기본적 으로 &lt;code&gt;30000&lt;/code&gt; 으로 설정되어 있으며 일부 데이터베이스 작업이 20 초 이상 실행될 것으로 예상되는 경우 가장 긴 실행 작업의 2-3 배로 설정해야합니다. 이 옵션은 MongoDB 드라이버가 성공적으로 완료된 후 &lt;a href=&quot;https://nodejs.org/api/net.html#net_socket_settimeout_timeout_callback&quot;&gt;Node.js &lt;code&gt;socket#setTimeout()&lt;/code&gt; 함수&lt;/a&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="a61e053c28f6fd0d06c19a66a6d7fdaca6e9451d" translate="yes" xml:space="preserve">
          <source>[options.strict] &amp;laquo;Boolean|String&amp;raquo; overwrites the schema's &lt;a href=&quot;http://mongoosejs.com/docs/guide.html#strict&quot;&gt;strict mode option&lt;/a&gt;</source>
          <target state="translated">[options.strict]&amp;laquo;Boolean | String&amp;raquo;은 스키마의 &lt;a href=&quot;http://mongoosejs.com/docs/guide.html#strict&quot;&gt;엄격 모드 옵션을&lt;/a&gt; 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="73ea6bee5c7f32f141d5162ef1f24bdf04bd71c0" translate="yes" xml:space="preserve">
          <source>[options.timestamps=null] &amp;laquo;Boolean&amp;raquo; If set to &lt;code&gt;false&lt;/code&gt; and &lt;a href=&quot;../guide#timestamps&quot;&gt;schema-level timestamps&lt;/a&gt; are enabled, skip timestamps for this update. Does nothing if schema-level timestamps are not set.</source>
          <target state="translated">[options.timestamps = null]&amp;laquo;Boolean&amp;raquo; &lt;code&gt;false&lt;/code&gt; 로 설정 하고 &lt;a href=&quot;../guide#timestamps&quot;&gt;스키마 수준 타임 스탬프&lt;/a&gt; 를 활성화 한 경우이 업데이트에 대한 타임 스탬프를 건너 뜁니다. 스키마 수준 타임 스탬프가 설정되지 않은 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d71a5726d58b8b95c05c9dedc2f7511e28fdf41c" translate="yes" xml:space="preserve">
          <source>[options.timestamps=true] &amp;laquo;Boolean&amp;raquo; if &lt;code&gt;false&lt;/code&gt; and &lt;a href=&quot;guide#timestamps&quot;&gt;timestamps&lt;/a&gt; are enabled, skip timestamps for this &lt;code&gt;save()&lt;/code&gt;.</source>
          <target state="translated">[options.timestamps = true]&amp;laquo;Boolean&amp;raquo; &lt;code&gt;false&lt;/code&gt; 및 &lt;a href=&quot;guide#timestamps&quot;&gt;타임 스탬프&lt;/a&gt; 가 활성화 된 경우이 &lt;code&gt;save()&lt;/code&gt; 타임 스탬프를 건너 뜁니다 .</target>
        </trans-unit>
        <trans-unit id="4e533692acdff507d6d10c0c55c48dfd56e0e465" translate="yes" xml:space="preserve">
          <source>[options.transform=null] &amp;laquo;Function|null&amp;raquo; if set, mongoose will call this function to allow you to transform the returned object</source>
          <target state="translated">[options.transform = null]&amp;laquo;Function | null&amp;raquo;설정하면 mongoose는이 함수를 호출하여 반환 된 객체를 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e300d3ad8a7b1549eba83263a4daa48de9277860" translate="yes" xml:space="preserve">
          <source>[options.upsert=false] &amp;laquo;Boolean&amp;raquo; if true, and no documents found, insert a new document</source>
          <target state="translated">[options.upsert = false]&amp;laquo;Boolean&amp;raquo;true이고 문서를 찾을 수 없으면 새 문서를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="70b3dff02bf893da403ea0167f55b82b5eac653f" translate="yes" xml:space="preserve">
          <source>[options.useCache=false] &amp;laquo;Boolean&amp;raquo; If true, cache results so calling &lt;code&gt;useDb()&lt;/code&gt; multiple times with the same name only creates 1 connection object.</source>
          <target state="translated">[options.useCache = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 동일한 이름으로 &lt;code&gt;useDb()&lt;/code&gt; 여러 번 호출하면 캐시 결과 가 1 개의 연결 개체 만 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="70c7846652f416a5f0ca74eca73015cbfc9054cd" translate="yes" xml:space="preserve">
          <source>[options.useCreateIndex=true] &amp;laquo;Boolean&amp;raquo; Mongoose-specific option. If &lt;code&gt;true&lt;/code&gt;, this connection will use &lt;a href=&quot;../deprecations#-ensureindex-&quot;&gt;&lt;code&gt;createIndex()&lt;/code&gt; instead of &lt;code&gt;ensureIndex()&lt;/code&gt;&lt;/a&gt; for automatic index builds via &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.init&quot;&gt;&lt;code&gt;Model.init()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">[options.useCreateIndex = true]&amp;laquo;Boolean&amp;raquo;몽구스 관련 옵션입니다. &lt;code&gt;true&lt;/code&gt; 인 경우 ,이 연결은 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#model_Model.init&quot;&gt; &lt;code&gt;Model.init()&lt;/code&gt; &lt;/a&gt; 를 통한 자동 인덱스 빌드를 위해 &lt;a href=&quot;../deprecations#-ensureindex-&quot;&gt; &lt;code&gt;ensureIndex()&lt;/code&gt; &lt;/a&gt; 대신 &lt;code&gt;createIndex()&lt;/code&gt; 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="4246585a26e68d5ed8c557c956fe2bb55213e069" translate="yes" xml:space="preserve">
          <source>[options.useFindAndModify=true] &amp;laquo;Boolean&amp;raquo; True by default. Set to &lt;code&gt;false&lt;/code&gt; to make &lt;code&gt;findOneAndUpdate()&lt;/code&gt; and &lt;code&gt;findOneAndRemove()&lt;/code&gt; use native &lt;code&gt;findOneAndUpdate()&lt;/code&gt; rather than &lt;code&gt;findAndModify()&lt;/code&gt;.</source>
          <target state="translated">[options.useFindAndModify = true]&amp;laquo;Boolean&amp;raquo;기본적으로 True입니다. 로 설정 &lt;code&gt;false&lt;/code&gt; 만들 &lt;code&gt;findOneAndUpdate()&lt;/code&gt; 와 &lt;code&gt;findOneAndRemove()&lt;/code&gt; 기본 사용 &lt;code&gt;findOneAndUpdate()&lt;/code&gt; 보다는 &lt;code&gt;findAndModify()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="376e2a40228d7fe371e4e47709f60bed33ddf6b7" translate="yes" xml:space="preserve">
          <source>[options.useMongooseAggCursor] &amp;laquo;Boolean&amp;raquo; use experimental mongoose-specific aggregation cursor (for &lt;code&gt;eachAsync()&lt;/code&gt; and other query cursor semantics)</source>
          <target state="translated">[options.useMongooseAggCursor]&amp;laquo;Boolean&amp;raquo;실험적인 몽구스 별 집계 커서를 사용합니다 ( &lt;code&gt;eachAsync()&lt;/code&gt; 및 기타 쿼리 커서 시맨틱에 대해)</target>
        </trans-unit>
        <trans-unit id="acb38a97b5b14cc9e9fab17539ec6d562d813609" translate="yes" xml:space="preserve">
          <source>[options.useNewUrlParser=false] &amp;laquo;Boolean&amp;raquo; False by default. Set to &lt;code&gt;true&lt;/code&gt; to make all connections set the &lt;code&gt;useNewUrlParser&lt;/code&gt; option by default.</source>
          <target state="translated">[options.useNewUrlParser = false]&amp;laquo;Boolean&amp;raquo;기본적으로 False입니다. 모든 연결 이 기본적으로 &lt;code&gt;useNewUrlParser&lt;/code&gt; 옵션을 설정하게 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="599cc1196aa387f267be408eac0f165cd6578ca3" translate="yes" xml:space="preserve">
          <source>[options.useNewUrlParser=false] &amp;laquo;Boolean&amp;raquo; False by default. Set to &lt;code&gt;true&lt;/code&gt; to opt in to the MongoDB driver's new URL parser logic.</source>
          <target state="translated">[options.useNewUrlParser = false]&amp;laquo;Boolean&amp;raquo;기본적으로 False입니다. MongoDB 드라이버의 새로운 URL 파서 로직을 선택 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed84b1f9341f4d07fd4d649016fc7e37e8169703" translate="yes" xml:space="preserve">
          <source>[options.useUnifiedTopology=false] &amp;laquo;Boolean&amp;raquo; False by default. Set to &lt;code&gt;true&lt;/code&gt; to make all connections set the &lt;code&gt;useUnifiedTopology&lt;/code&gt; option by default.</source>
          <target state="translated">[options.useUnifiedTopology = false]&amp;laquo;부울&amp;raquo;기본적으로 False입니다. 모든 연결 이 기본적으로 &lt;code&gt;useUnifiedTopology&lt;/code&gt; 옵션을 설정하게 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e0510c5697f2bda194f15db14cfac83b2e8a1cd" translate="yes" xml:space="preserve">
          <source>[options.useUnifiedTopology=false] &amp;laquo;Boolean&amp;raquo; False by default. Set to &lt;code&gt;true&lt;/code&gt; to opt in to the MongoDB driver's replica set and sharded cluster monitoring engine.</source>
          <target state="translated">[options.useUnifiedTopology = false]&amp;laquo;부울&amp;raquo;기본적으로 False입니다. MongoDB 드라이버의 복제 세트 및 샤드 클러스터 모니터링 엔진을 선택 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="80e9e45d2ad4964b99e4f611b65e0ae877b78915" translate="yes" xml:space="preserve">
          <source>[options.user] &amp;laquo;String&amp;raquo; username for authentication, equivalent to &lt;code&gt;options.auth.user&lt;/code&gt;. Maintained for backwards compatibility.</source>
          <target state="translated">[options.user]&amp;laquo;String&amp;raquo;인증 용 사용자 이름으로 &lt;code&gt;options.auth.user&lt;/code&gt; 와 같습니다 . 이전 버전과의 호환성을 위해 유지 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="d72a5267bfc3225b886ffd9d79b4f4f2e81faae1" translate="yes" xml:space="preserve">
          <source>[options.validateBeforeSave] &amp;laquo;Boolean&amp;raquo; set to false to save without validating.</source>
          <target state="translated">[options.validateBeforeSave]&amp;laquo;Boolean&amp;raquo;유효성 검사없이 저장하려면 false로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="315d2644eb4e9ea5a7c54b2fcf615f4e95f7aae3" translate="yes" xml:space="preserve">
          <source>[options.versionKey=true] &amp;laquo;Boolean&amp;raquo; if false, exclude the version key (&lt;code&gt;__v&lt;/code&gt; by default) from the output</source>
          <target state="translated">[options.versionKey = true]&amp;laquo;Boolean&amp;raquo;false 인 경우 출력에서 버전 키 ( 기본적으로 &lt;code&gt;__v&lt;/code&gt; )를 제외합니다.</target>
        </trans-unit>
        <trans-unit id="8a6559aaae71568d206768cc74bcfb552a5f40c4" translate="yes" xml:space="preserve">
          <source>[options.virtuals=false] &amp;laquo;Boolean&amp;raquo; Apply virtuals before getting this path</source>
          <target state="translated">[options.virtuals = false]&amp;laquo;Boolean&amp;raquo;이 경로를 가져 오기 전에 가상 적용</target>
        </trans-unit>
        <trans-unit id="f45bba4d3007959f6c5a7d79ebcdd693e4e5ed31" translate="yes" xml:space="preserve">
          <source>[options.virtuals=false] &amp;laquo;Boolean&amp;raquo; if true, apply virtuals, including aliases. Use &lt;code&gt;{ getters: true, virtuals: false }&lt;/code&gt; to just apply getters, not virtuals</source>
          <target state="translated">[options.virtuals = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 가상 본 (별칭 포함)을 적용합니다. 사용 &lt;code&gt;{ getters: true, virtuals: false }&lt;/code&gt; 단지 게터하지 virtuals에 적용하기</target>
        </trans-unit>
        <trans-unit id="68fecd9e8be5b64410e54dc6c5a6e3b6ce4ed1e4" translate="yes" xml:space="preserve">
          <source>[options.w=1] &amp;laquo;String|number&amp;raquo; The &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/&quot;&gt;write concern&lt;/a&gt;. See &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-w&quot;&gt;&lt;code&gt;Query#w()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">[options.w = 1]&amp;laquo;String | number&amp;raquo; &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/&quot;&gt;쓰기 문제&lt;/a&gt; 입니다. 자세한 내용은 &lt;a href=&quot;https://mongoosejs.com/docs/api.html#query_Query-w&quot;&gt; &lt;code&gt;Query#w()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ed229aec17ad56cb12b7c8707e46bb010a544bb4" translate="yes" xml:space="preserve">
          <source>[options.w] &amp;laquo;Number|String&amp;raquo; set the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#w-option&quot;&gt;write concern&lt;/a&gt;. Overrides the &lt;a href=&quot;../guide#writeConcern&quot;&gt;schema-level &lt;code&gt;writeConcern&lt;/code&gt; option&lt;/a&gt;</source>
          <target state="translated">[options.w]&amp;laquo;Number | String&amp;raquo; &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#w-option&quot;&gt;쓰기 우려를&lt;/a&gt; 설정합니다 . &lt;a href=&quot;../guide#writeConcern&quot;&gt;스키마 레벨 &lt;/a&gt; &lt;code&gt;writeConcern&lt;/code&gt; 옵션을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="72712c861f031b8b14bcddc5177f3a37f8a973da" translate="yes" xml:space="preserve">
          <source>[options.writeConcern=null] &amp;laquo;Object&amp;raquo; sets the &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/&quot;&gt;write concern&lt;/a&gt; for replica sets. Overrides the &lt;a href=&quot;../guide#writeConcern&quot;&gt;schema-level write concern&lt;/a&gt;</source>
          <target state="translated">[options.writeConcern = null]&amp;laquo;Object&amp;raquo;는 복제본 세트에 대한 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/&quot;&gt;쓰기 문제&lt;/a&gt; 를 설정합니다. &lt;a href=&quot;../guide#writeConcern&quot;&gt;스키마 수준 쓰기 문제를&lt;/a&gt; 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="82dfd1b6954ca059e2d758ec6ffa3a7a096dc30a" translate="yes" xml:space="preserve">
          <source>[options.wtimeout=null] &amp;laquo;number&amp;raquo; The &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#wtimeout&quot;&gt;write concern timeout&lt;/a&gt;.</source>
          <target state="translated">[options.wtimeout = null]&amp;laquo;number&amp;raquo; &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#wtimeout&quot;&gt;쓰기 우려 시간이 초과되었습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f89219f61b5990f37c254374bda594a0ead4c82e" translate="yes" xml:space="preserve">
          <source>[options.wtimeout] &amp;laquo;Number&amp;raquo; sets a &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#wtimeout&quot;&gt;timeout for the write concern&lt;/a&gt;. Overrides the &lt;a href=&quot;../guide#writeConcern&quot;&gt;schema-level &lt;code&gt;writeConcern&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">[options.wtimeout]&amp;laquo;Number&amp;raquo;는 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/write-concern/#wtimeout&quot;&gt;쓰기 문제에 대한 시간 초과를&lt;/a&gt; 설정합니다 . &lt;a href=&quot;../guide#writeConcern&quot;&gt;스키마 레벨 &lt;code&gt;writeConcern&lt;/code&gt; 옵션을&lt;/a&gt; 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="bfff4101e335f9dd73d37a6be41784f0d6aab377" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="3ccdf38bac7c5050dafcf7f2c64c03f1f9d1bf6c" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; Options for the population query (sort, etc)</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;채우기 쿼리 옵션 (정렬 등)</target>
        </trans-unit>
        <trans-unit id="f318c0e8a936c9607c0aea645202512b99251efb" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; Options passed down to &lt;code&gt;save()&lt;/code&gt;. To specify &lt;code&gt;options&lt;/code&gt;, &lt;code&gt;docs&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be an array, not a spread.</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;옵션은 &lt;code&gt;save()&lt;/code&gt; 로 전달되었습니다 . 지정하려면 &lt;code&gt;options&lt;/code&gt; , &lt;code&gt;docs&lt;/code&gt; &lt;strong&gt;있어야&lt;/strong&gt; 배열이 아닌 확산합니다.</target>
        </trans-unit>
        <trans-unit id="146954a988a7ba2673018567be83913f27df0d43" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; Options to pass to &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex&quot;&gt;MongoDB driver's &lt;code&gt;createIndex()&lt;/code&gt; function&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex&quot;&gt;MongoDB 드라이버의 &lt;/a&gt; &lt;code&gt;createIndex()&lt;/code&gt; 함수 에 전달하는 옵션</target>
        </trans-unit>
        <trans-unit id="701454bdc76c624046db7e05505d918ca7fd8006" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; Options to pass to &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex&quot;&gt;MongoDB driver's &lt;code&gt;createIndex()&lt;/code&gt; function&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4d8463a2f52bc9b4017e90a526ed7ab508f62b" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; Passed on to &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect&quot;&gt;http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect&quot;&gt;http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect로&lt;/a&gt; 전달</target>
        </trans-unit>
        <trans-unit id="27641ae9fae2fefa783a25d848727ade5c88ebcd" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; Passed on to &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect&quot;&gt;http://mongodb.github.io/node-mongodb-native/2.2/api/MongoClient.html#connect&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40338be72930ad9f72e748e9137a6a069f91a81c" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; internal options</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;내부 옵션</target>
        </trans-unit>
        <trans-unit id="22f2910a177036e194b1c0959b66ba2ec342f235" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; optional collection options</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;선택적 수집 옵션</target>
        </trans-unit>
        <trans-unit id="c96598671f5b574521feb4c3e3f5eb517755b70f" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; optional see &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-setOptions&quot;&gt;&lt;code&gt;Query.prototype.setOptions()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;선택 사항 &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-setOptions&quot;&gt; &lt;code&gt;Query.prototype.setOptions()&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="1320d592ba8b4ba77ca6b666815d0318e2455d27" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; optionally specify options that modify the behavior of the set</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;선택적으로 세트의 동작을 수정하는 옵션을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="11272572146e46bceeb664f9de283b14668a1195" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; options optional options</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;옵션 옵션 옵션</target>
        </trans-unit>
        <trans-unit id="21c0d1e3b356cb4aea1119ba6d964cb24029b5ea" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; options to pass to &lt;code&gt;ensureIndexes()&lt;/code&gt;</source>
          <target state="translated">[options] &lt;code&gt;ensureIndexes()&lt;/code&gt; 전달할&amp;laquo;Object&amp;raquo;옵션</target>
        </trans-unit>
        <trans-unit id="1163417627135cae3d66fa8142fa4ce5abf8eeae" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; options to pass to the schema constructor. Defaults to &lt;code&gt;this.options&lt;/code&gt; if not set.</source>
          <target state="translated">[옵션] 스키마 생성자에 전달할&amp;laquo;Object&amp;raquo;옵션. 설정되지 않은 경우 기본값은 &lt;code&gt;this.options&lt;/code&gt; . 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="9de0e023121cbf7c434202aa4bd799aa571e1f48" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; passed down to the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/api/MongoClient.html&quot;&gt;MongoDB driver's &lt;code&gt;connect()&lt;/code&gt; function&lt;/a&gt;, except for 4 mongoose-specific options explained below.</source>
          <target state="translated">[옵션]&amp;laquo;Object&amp;raquo;는 아래 설명 된 4 개의 몽구스 관련 옵션을 제외하고 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/api/MongoClient.html&quot;&gt;MongoDB 드라이버의 &lt;code&gt;connect()&lt;/code&gt; 함수로&lt;/a&gt; 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="34bdc56958f30743a3a8f754323f1c0044c28c1c" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; passed down to the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.0/api/MongoClient.html&quot;&gt;MongoDB driver's &lt;code&gt;connect()&lt;/code&gt; function&lt;/a&gt;, except for 4 mongoose-specific options explained below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467d75dc84454542ddb43dc00ca771a5926bd033" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; passed transparently to the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#estimatedDocumentCount&quot;&gt;MongoDB driver&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo;가 &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#estimatedDocumentCount&quot;&gt;MongoDB 드라이버에&lt;/a&gt; 투명하게 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="76b63162b2b55fb879d64f4756a91bf590d673a1" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; passed transparently to the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Collection.html#estimatedDocumentCount&quot;&gt;MongoDB driver&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64f6bfc309fe981d4df3efd2f166f844a18b2ad" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Db.html#createCollection&quot;&gt;MongoDB driver docs&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Db.html#createCollection&quot;&gt;MongoDB 드라이버 문서&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="bdb36ffe6721d31490658aa3b158cbab600bf113" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Db.html#createCollection&quot;&gt;MongoDB driver docs&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.1/api/Db.html#createCollection&quot;&gt;MongoDB 드라이버 문서&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="51780b0f57dd90b4da16e64303e37bf9dfaf20a5" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-setOptions&quot;&gt;&lt;code&gt;setOptions()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-setOptions&quot;&gt; &lt;code&gt;setOptions()&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="280eec4bd24a6eb943c579dca72eae81eb3240ea" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.2/api/Db.html#createCollection&quot;&gt;MongoDB driver docs&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d599d82dc25a606a470c6c42978a1806eadd8af5" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.1/api/Db.html#createCollection&quot;&gt;MongoDB driver docs&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71430e4583050c195a15950c699cb765671f569" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#insertMany&quot;&gt;mongodb driver options&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#insertMany&quot;&gt;mongodb 드라이버 옵션&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="23a84c64407747bca31cb657c569f7e96ee2ae6d" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/api/Collection.html#watch&quot;&gt;mongodb driver options&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/api/Collection.html#watch&quot;&gt;mongodb 드라이버 옵션&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="8c98f80a9d5580fe51629a6952c478566784585e" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/api/MongoClient.html#startSession&quot;&gt;mongodb driver options&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/3.0/api/MongoClient.html#startSession&quot;&gt;mongodb 드라이버 옵션&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="5026ad1e359afd80f4d9b14954fb3a32b7f266cb" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#insertMany&quot;&gt;mongodb driver options&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b48954d2dab818fdb7d71fee1ec5939c3c36ec" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.0/api/Collection.html#watch&quot;&gt;mongodb driver options&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e9299584a16c5a3e7654a89135209b9f0e1dc2" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;Object&amp;raquo; see the &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/3.0/api/MongoClient.html#startSession&quot;&gt;mongodb driver options&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3288bf85a5c3fbf25cc640e07cc25a2bf452d7f0" translate="yes" xml:space="preserve">
          <source>[options] &amp;laquo;SchemaTypeOptions&amp;raquo; See &lt;a href=&quot;schematypeoptions&quot;&gt;SchemaTypeOptions docs&lt;/a&gt;</source>
          <target state="translated">[옵션]&amp;laquo;스키마 유형 옵션&amp;raquo; &lt;a href=&quot;schematypeoptions&quot;&gt;SchemaTypeOptions 문서&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="a1629d4b65e4e4a1270b37da9e104156c03b7fe8" translate="yes" xml:space="preserve">
          <source>[opts.deleteMany.filter] &amp;laquo;Object&amp;raquo; Delete all documents that match this filter</source>
          <target state="translated">[opts.deleteMany.filter]&amp;laquo;개체&amp;raquo;이 필터와 일치하는 모든 문서를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="a7012113bd8c91732e0e4b68f320640d98c088d2" translate="yes" xml:space="preserve">
          <source>[opts.deleteOne.filter] &amp;laquo;Object&amp;raquo; Delete the first document that matches this filter</source>
          <target state="translated">[opts.deleteOne.filter]&amp;laquo;Object&amp;raquo;이 필터와 일치하는 첫 번째 문서를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="7956fbc6c6f862a01536bc59cfbef7b527c272bd" translate="yes" xml:space="preserve">
          <source>[opts.numberOfRetries] &amp;laquo;Number&amp;raquo; if cursor is exhausted, retry this many times before giving up</source>
          <target state="translated">[opts.numberOfRetries]&amp;laquo;Number&amp;raquo;커서가 소진 된 경우 포기하기 전에 여러 번 다시 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="52c5f6a2724ac8c4c280bd4fb5ef7ee5520202fa" translate="yes" xml:space="preserve">
          <source>[opts.replaceOne.filter] &amp;laquo;Object&amp;raquo; Replace the first document that matches this filter</source>
          <target state="translated">[opts.replaceOne.filter]&amp;laquo;Object&amp;raquo;이 필터와 일치하는 첫 번째 문서를 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="f68a9618cbca7e880c6753fcfc7cff6b8761262d" translate="yes" xml:space="preserve">
          <source>[opts.replaceOne.replacement] &amp;laquo;Object&amp;raquo; The replacement document</source>
          <target state="translated">[opts.replaceOne.replacement]&amp;laquo;개체&amp;raquo;교체 문서</target>
        </trans-unit>
        <trans-unit id="c97657bb7fa3959308282bacc940141207b40f6c" translate="yes" xml:space="preserve">
          <source>[opts.replaceOne.upsert=false] &amp;laquo;Boolean&amp;raquo; If true, insert a doc if no documents match &lt;code&gt;filter&lt;/code&gt;</source>
          <target state="translated">[opts.replaceOne.upsert = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 문서가 &lt;code&gt;filter&lt;/code&gt; 와 일치하지 않으면 문서를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="61f892b0290b1bdbbecb70e50fae512273e0c898" translate="yes" xml:space="preserve">
          <source>[opts.tailableRetryInterval] &amp;laquo;Number&amp;raquo; if cursor is exhausted, wait this many milliseconds before retrying</source>
          <target state="translated">[opts.tailableRetryInterval]&amp;laquo;Number&amp;raquo;커서가 소진 된 경우 재 시도하기 전에이 밀리 초 동안 기다립니다.</target>
        </trans-unit>
        <trans-unit id="7cd5cabd02004a7d6113927385ca55cb9298ffa8" translate="yes" xml:space="preserve">
          <source>[opts.updateMany.arrayFilters] &amp;laquo;Array&amp;raquo; The &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-array-filters.html&quot;&gt;array filters&lt;/a&gt; used in &lt;code&gt;update&lt;/code&gt;</source>
          <target state="translated">[opts.updateMany.arrayFilters]&amp;laquo;Array&amp;raquo; &lt;code&gt;update&lt;/code&gt; 사용 된 &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-array-filters.html&quot;&gt;배열 필터&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a28023d1cc071a8844dc64dea5cc56269476d818" translate="yes" xml:space="preserve">
          <source>[opts.updateMany.collation] &amp;laquo;Object&amp;raquo; The &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations&quot;&gt;MongoDB collation&lt;/a&gt; to use</source>
          <target state="translated">[opts.updateMany.collation]&amp;laquo;Object&amp;raquo; 사용할 &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations&quot;&gt;MongoDB 데이터 정렬&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6fd333db5503c2020b6f6857f7bd3367c01c43a3" translate="yes" xml:space="preserve">
          <source>[opts.updateMany.filter] &amp;laquo;Object&amp;raquo; Update all the documents that match this filter</source>
          <target state="translated">[opts.updateMany.filter]&amp;laquo;객체&amp;raquo;이 필터와 일치하는 모든 문서를 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="c09d95d2324ef0c46dee70169a5a0e3fa4a533d3" translate="yes" xml:space="preserve">
          <source>[opts.updateMany.update] &amp;laquo;Object&amp;raquo; An object containing &lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/update/&quot;&gt;update operators&lt;/a&gt;</source>
          <target state="translated">[opts.updateMany.update]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/update/&quot;&gt;업데이트 연산자를&lt;/a&gt; 포함하는 객체</target>
        </trans-unit>
        <trans-unit id="265493866d250ca28ddbcfa3e6942d2badbe2d65" translate="yes" xml:space="preserve">
          <source>[opts.updateMany.upsert=false] &amp;laquo;Boolean&amp;raquo; If true, insert a doc if no documents match &lt;code&gt;filter&lt;/code&gt;</source>
          <target state="translated">[opts.updateMany.upsert = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 문서가 &lt;code&gt;filter&lt;/code&gt; 와 일치하지 않으면 문서를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="522a219356b4fdd3d366263e1b7b88f2bb2ccf15" translate="yes" xml:space="preserve">
          <source>[opts.updateOne.arrayFilters] &amp;laquo;Array&amp;raquo; The &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-array-filters.html&quot;&gt;array filters&lt;/a&gt; used in &lt;code&gt;update&lt;/code&gt;</source>
          <target state="translated">[opts.updateOne.arrayFilters]&amp;laquo;Array&amp;raquo; &lt;code&gt;update&lt;/code&gt; 사용 된 &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-36-array-filters.html&quot;&gt;배열 필터&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06f73d74fb824a3fce0e8234d2464627a9834ae8" translate="yes" xml:space="preserve">
          <source>[opts.updateOne.collation] &amp;laquo;Object&amp;raquo; The &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations&quot;&gt;MongoDB collation&lt;/a&gt; to use</source>
          <target state="translated">[opts.updateOne.collation]&amp;laquo;Object&amp;raquo; 사용할 &lt;a href=&quot;https://thecodebarbarian.com/a-nodejs-perspective-on-mongodb-34-collations&quot;&gt;MongoDB 데이터 정렬&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="009020fc0acb05c97567f5e9580c50c0119fa5ad" translate="yes" xml:space="preserve">
          <source>[opts.updateOne.filter] &amp;laquo;Object&amp;raquo; Update the first document that matches this filter</source>
          <target state="translated">[opts.updateOne.filter]&amp;laquo;개체&amp;raquo;이 필터와 일치하는 첫 번째 문서를 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="30842c00916dcc74df7e5893123ac98e5761e03a" translate="yes" xml:space="preserve">
          <source>[opts.updateOne.update] &amp;laquo;Object&amp;raquo; An object containing &lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/update/&quot;&gt;update operators&lt;/a&gt;</source>
          <target state="translated">[opts.updateOne.update]&amp;laquo;객체&amp;raquo; &lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/update/&quot;&gt;업데이트 연산자를&lt;/a&gt; 포함하는 객체</target>
        </trans-unit>
        <trans-unit id="396135641eca70d8734709e1482cac0caca62f67" translate="yes" xml:space="preserve">
          <source>[opts.updateOne.upsert=false] &amp;laquo;Boolean&amp;raquo; If true, insert a doc if none match</source>
          <target state="translated">[opts.updateOne.upsert = false]&amp;laquo;Boolean&amp;raquo;true 인 경우 문서가 일치하지 않으면 문서를 삽입합니다</target>
        </trans-unit>
        <trans-unit id="5b34f11725f68e7c9312f2068578b646fea7937e" translate="yes" xml:space="preserve">
          <source>[opts] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[선택]&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="31e6ce8863b4edd49542d8a46043a23d951d19b9" translate="yes" xml:space="preserve">
          <source>[opts] &amp;laquo;Object&amp;raquo; optional options</source>
          <target state="translated">[선택]&amp;laquo;개체&amp;raquo;옵션 옵션</target>
        </trans-unit>
        <trans-unit id="061a591d0ae6bb338e65c732e049d51dba5c182d" translate="yes" xml:space="preserve">
          <source>[opts] &amp;laquo;Object&amp;raquo; options to set</source>
          <target state="translated">[선택]&amp;laquo;개체&amp;raquo;옵션 설정</target>
        </trans-unit>
        <trans-unit id="d1c3dfbe19ad09c48c4b6949d3a623d679b55c4f" translate="yes" xml:space="preserve">
          <source>[path] &amp;laquo;String&amp;raquo;</source>
          <target state="translated">[경로]&amp;laquo;문자열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="b04e4c3768fc8fe2d1fb3326849d7ae29f20f082" translate="yes" xml:space="preserve">
          <source>[path] &amp;laquo;String&amp;raquo; optional</source>
          <target state="translated">[경로]&amp;laquo;문자열&amp;raquo;선택 사항</target>
        </trans-unit>
        <trans-unit id="054b36c9b5d6b1e149c15b116596f268cc924520" translate="yes" xml:space="preserve">
          <source>[path] &amp;laquo;String|Array&amp;raquo;</source>
          <target state="translated">[경로]&amp;laquo;문자열 | 배열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="d3b2b9b05299da26f4417a914e793923d8fa0537" translate="yes" xml:space="preserve">
          <source>[path] &amp;laquo;String|Object&amp;raquo;</source>
          <target state="translated">[경로]&amp;laquo;문자열 | 개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="e1e2333b6fd1f58c8c085b0dd4fb5c16ee1e5269" translate="yes" xml:space="preserve">
          <source>[path] &amp;laquo;String|Object&amp;raquo; The path to populate or an options object</source>
          <target state="translated">[path]&amp;laquo;String | Object&amp;raquo;채울 경로 또는 옵션 개체</target>
        </trans-unit>
        <trans-unit id="28ff515c4160ee89dde91786c9026a0e0e07676d" translate="yes" xml:space="preserve">
          <source>[pathsToValidate] &amp;laquo;Array|String&amp;raquo; list of paths to validate. If set, Mongoose will validate only the modified paths that are in the given list.</source>
          <target state="translated">[pathsToValidate]&amp;laquo;Array | String&amp;raquo;확인할 경로 목록입니다. 설정하면 Mongoose는 주어진 목록에있는 수정 된 경로 만 확인합니다.</target>
        </trans-unit>
        <trans-unit id="df65b79de9a9532e77c24f1bfc07e1f0a28090b8" translate="yes" xml:space="preserve">
          <source>[pipeline] &amp;laquo;Array&amp;raquo;</source>
          <target state="translated">[파이프 라인]&amp;laquo;배열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="8985542eaf4aaefec3c3467a933adf5b7d32e3cf" translate="yes" xml:space="preserve">
          <source>[pipeline] &amp;laquo;Array&amp;raquo; aggregation pipeline as an array of objects</source>
          <target state="translated">[파이프 라인]&amp;laquo;배열&amp;raquo;개체 배열로서의 집계 파이프 라인</target>
        </trans-unit>
        <trans-unit id="bd2c6e9a332c011db87d4bc21f575d65e10f1844" translate="yes" xml:space="preserve">
          <source>[prefix] &amp;laquo;String&amp;raquo; path to prefix the newly added paths with</source>
          <target state="translated">[접두사]&amp;laquo;문자열&amp;raquo;경로로 새로 추가 된 경로의 접두사</target>
        </trans-unit>
        <trans-unit id="046ecd2fa43e5ce388c965a640b7b83b09feec7d" translate="yes" xml:space="preserve">
          <source>[projection] &amp;laquo;Object&amp;raquo; optional fields to return</source>
          <target state="translated">[투영]&amp;laquo;개체&amp;raquo;반환 할 선택적 필드</target>
        </trans-unit>
        <trans-unit id="9f148d1739736c98fa578d66c64c606e750252cb" translate="yes" xml:space="preserve">
          <source>[projection] &amp;laquo;Object|String&amp;raquo; optional fields to return, see &lt;a href=&quot;#query_Query-select&quot;&gt;&lt;code&gt;Query.prototype.select()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">[projection]&amp;laquo;Object | String&amp;raquo;반환 할 선택적 필드. &lt;a href=&quot;#query_Query-select&quot;&gt; &lt;code&gt;Query.prototype.select()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b196138d97f9ffafac32d9477cd17f92c9a36a81" translate="yes" xml:space="preserve">
          <source>[projection] &amp;laquo;Object|String&amp;raquo; optional fields to return, see &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-select&quot;&gt;&lt;code&gt;Query.prototype.select()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">[projection]&amp;laquo;Object | String&amp;raquo;반환 할 선택적 필드. &lt;a href=&quot;http://mongoosejs.com/docs/api.html#query_Query-select&quot;&gt; &lt;code&gt;Query.prototype.select()&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5fa468f8e5aeda80463dd1b33ac3d12b0b685f20" translate="yes" xml:space="preserve">
          <source>[reason] &amp;laquo;Error&amp;raquo; The original error that was thrown</source>
          <target state="translated">[이유]&amp;laquo;오류&amp;raquo;발생한 원래 오류</target>
        </trans-unit>
        <trans-unit id="ad460aeb08815880caa45078b44cf4b66c35ee08" translate="yes" xml:space="preserve">
          <source>[reject] &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">[거부]&amp;laquo;기능&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="52e4cfba92e055bf112b91abab743c99767e018a" translate="yes" xml:space="preserve">
          <source>[reject] &amp;laquo;Function&amp;raquo; errorCallback</source>
          <target state="translated">[거부]&amp;laquo;함수&amp;raquo;errorCallback</target>
        </trans-unit>
        <trans-unit id="f3e3dad1af2980ad8a9ce5a4909bb895bb2785be" translate="yes" xml:space="preserve">
          <source>[replacement] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[교체]&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="43824f2ca9b84ac8e37b9db5a35a8010fefa629b" translate="yes" xml:space="preserve">
          <source>[replacement] &amp;laquo;Object&amp;raquo; Replace with this document</source>
          <target state="translated">[교체]&amp;laquo;개체&amp;raquo;이 문서로 교체</target>
        </trans-unit>
        <trans-unit id="172bda40bb35d96c3a4d45786d1b5072204f2a9f" translate="yes" xml:space="preserve">
          <source>[resolve] &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">[해결]&amp;laquo;함수&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="b78ea54ae87f94ba2011622146e34f01bac0c482" translate="yes" xml:space="preserve">
          <source>[resolve] &amp;laquo;Function&amp;raquo; successCallback</source>
          <target state="translated">[해결]&amp;laquo;함수&amp;raquo;successCallback</target>
        </trans-unit>
        <trans-unit id="8a66075143038a78e87dd82eff8fca781b48072c" translate="yes" xml:space="preserve">
          <source>[schema] &amp;laquo;Schema&amp;raquo; a schema. necessary when defining a model</source>
          <target state="translated">[스키마]&amp;laquo;스키마&amp;raquo;스키마. 모델을 정의 할 때 필요</target>
        </trans-unit>
        <trans-unit id="cc8a74b68a62d55e4cdad22de874bce841c69bcd" translate="yes" xml:space="preserve">
          <source>[schema] &amp;laquo;Schema&amp;raquo; the schema to use.</source>
          <target state="translated">[스키마]&amp;laquo;스키마&amp;raquo;사용할 스키마.</target>
        </trans-unit>
        <trans-unit id="fdaf817ebd8f115d43007bfc1376195cf7ff70a6" translate="yes" xml:space="preserve">
          <source>[scope] &amp;laquo;Document&amp;raquo; the scope to run validators with</source>
          <target state="translated">[scope]&amp;laquo;문서&amp;raquo;로 유효성 검사기를 실행할 범위</target>
        </trans-unit>
        <trans-unit id="db7bea69c88ece9831ca1643082d474457903d42" translate="yes" xml:space="preserve">
          <source>[select] &amp;laquo;Object|String&amp;raquo; Field selection for the population query</source>
          <target state="translated">[select]&amp;laquo;Object | String&amp;raquo;채우기 쿼리에 대한 필드 선택</target>
        </trans-unit>
        <trans-unit id="04285304dd99acaadc3a87b44aff53b13819ee74" translate="yes" xml:space="preserve">
          <source>[session] &amp;laquo;ClientSession&amp;raquo; from &lt;code&gt;await conn.startSession()&lt;/code&gt;</source>
          <target state="translated">[세션]&amp;laquo;ClientSession&amp;raquo;from &lt;code&gt;await conn.startSession()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="868d735a155dd6e1c1cbfac3560440b1a8fb129a" translate="yes" xml:space="preserve">
          <source>[session] &amp;laquo;ClientSession&amp;raquo; overwrite the current session</source>
          <target state="translated">[세션]&amp;laquo;ClientSession&amp;raquo;이 현재 세션을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="60232d5131a1a3b8f19328814843055a12853272" translate="yes" xml:space="preserve">
          <source>[skipInit] &amp;laquo;Boolean&amp;raquo; whether to skip initialization (defaults to false)</source>
          <target state="translated">[skipInit]&amp;laquo;Boolean&amp;raquo;초기화 건너 뛰기 여부 (기본값은 false)</target>
        </trans-unit>
        <trans-unit id="aaea5fbbe3b4fce81fd514361a8066b6abeb5ac9" translate="yes" xml:space="preserve">
          <source>[tags] &amp;laquo;Array&amp;raquo; optional tags for this query</source>
          <target state="translated">[태그]&amp;laquo;배열&amp;raquo;이 쿼리에 대한 선택적 태그</target>
        </trans-unit>
        <trans-unit id="deb742b0c697ce71bbf27dae5e262f2ac6b8c7cf" translate="yes" xml:space="preserve">
          <source>[thenExpr] &amp;laquo;String|Object&amp;raquo; true case for the condition</source>
          <target state="translated">[thenExpr]&amp;laquo;문자열 | 개체&amp;raquo;조건에 대한 실제 경우</target>
        </trans-unit>
        <trans-unit id="c41e608de6c0d3eb38e611c0e9f15c508161e2a7" translate="yes" xml:space="preserve">
          <source>[type] &amp;laquo;Schema|String|Number|Buffer|*&amp;raquo; optionally specify a type for &quot;on-the-fly&quot; attributes</source>
          <target state="translated">[type]&amp;laquo;스키마 | 문자열 | 번호 | 버퍼 | *&amp;raquo;선택적으로 &quot;즉석&quot;속성의 유형을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7572236bae45946d55023823b4e7a88ae4107828" translate="yes" xml:space="preserve">
          <source>[type] &amp;laquo;Schema|String|Number|Buffer|*&amp;raquo; optionally specify a type for on-the-fly attributes</source>
          <target state="translated">[type]&amp;laquo;스키마 | 문자열 | 번호 | 버퍼 | *&amp;raquo;선택적으로 즉석 속성의 유형을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f39f5cb83bdeebc78ae0cbb7e8d2e152d767613e" translate="yes" xml:space="preserve">
          <source>[type] &amp;laquo;String&amp;raquo; optional validator type</source>
          <target state="translated">[type]&amp;laquo;문자열&amp;raquo;선택적 유효성 검사기 유형</target>
        </trans-unit>
        <trans-unit id="b34dcb1f71e2da62b88b524f703f28e45337d5fb" translate="yes" xml:space="preserve">
          <source>[update] &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">[업데이트]&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="4f35b6fadc00415d95c8e76cd6f884cbd215e0fc" translate="yes" xml:space="preserve">
          <source>[uri] &amp;laquo;String&amp;raquo; a mongodb:// URI</source>
          <target state="translated">[uri]&amp;laquo;문자열&amp;raquo;mongodb : // URI</target>
        </trans-unit>
        <trans-unit id="f540ea4eab42592dd17f641e89f0acfdbe39e422" translate="yes" xml:space="preserve">
          <source>[val] &amp;laquo;Any&amp;raquo; the value to set</source>
          <target state="translated">[val]&amp;laquo;Any&amp;raquo;설정할 값</target>
        </trans-unit>
        <trans-unit id="976d304c5de3b9116c0846c608823cc95cf558b7" translate="yes" xml:space="preserve">
          <source>[val] &amp;laquo;Boolean&amp;raquo; optional, overrides whether mongoose thinks the doc is deleted</source>
          <target state="translated">[val]&amp;laquo;Boolean&amp;raquo;옵션, 몽구스가 문서가 삭제되었다고 생각하는지 여부를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="e3ff2bcdf03b3675f9474b20d3ddf4c861af1f92" translate="yes" xml:space="preserve">
          <source>[val] &amp;laquo;Object&amp;raquo; optional value</source>
          <target state="translated">[val]&amp;laquo;객체&amp;raquo;선택적 값</target>
        </trans-unit>
        <trans-unit id="131f5c1eb94be8c3a8170b2b2e6208291545608b" translate="yes" xml:space="preserve">
          <source>[val] &amp;laquo;any&amp;raquo;</source>
          <target state="translated">[val]&amp;laquo;모든&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="c54d5de386c42e628f1022ccb98e2e74bab5cfdb" translate="yes" xml:space="preserve">
          <source>[value] &amp;laquo;Object&amp;raquo; if not passed, the current option value is returned</source>
          <target state="translated">[값]&amp;laquo;객체&amp;raquo;전달되지 않으면 현재 옵션 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2558e015bfae543190ad1ad0809da49d60de77ce" translate="yes" xml:space="preserve">
          <source>[value] &amp;laquo;String&amp;raquo; the string stored in the &lt;code&gt;discriminatorKey&lt;/code&gt; property. If not specified, Mongoose uses the &lt;code&gt;name&lt;/code&gt; parameter.</source>
          <target state="translated">[value]&amp;laquo;문자열&amp;raquo; &lt;code&gt;discriminatorKey&lt;/code&gt; 속성에 저장된 문자열 입니다. 지정하지 않으면 Mongoose는 &lt;code&gt;name&lt;/code&gt; 매개 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="54d3a4e242d5ca31c93fb0268337f44c987d148e" translate="yes" xml:space="preserve">
          <source>[verbose] &amp;laquo;String&amp;raquo; The verbosity mode. Either 'queryPlanner', 'executionStats', or 'allPlansExecution'. The default is 'queryPlanner'</source>
          <target state="translated">[verbose]&amp;laquo;String&amp;raquo;상세 모드입니다. 'queryPlanner', 'executionStats'또는 'allPlansExecution'입니다. 기본값은 'queryPlanner'입니다.</target>
        </trans-unit>
        <trans-unit id="771b48ec2d2010b6d267680edd5324bb6d093d8b" translate="yes" xml:space="preserve">
          <source>[virtualsOnly] &amp;laquo;Boolean&amp;raquo; if truthy, only pulls virtuals from the class, not methods or statics</source>
          <target state="translated">[virtualsOnly]&amp;laquo;Boolean&amp;raquo;진실이라면 메소드 나 스태틱이 아닌 클래스에서 가상 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a6526f25fbdfbb2678bba3fbc087623f3edb7400" translate="yes" xml:space="preserve">
          <source>_id</source>
          <target state="translated">_id</target>
        </trans-unit>
        <trans-unit id="2c1b410b0448e8acf1093fba44a7cb68cebdc3d8" translate="yes" xml:space="preserve">
          <source>_posts</source>
          <target state="translated">_posts</target>
        </trans-unit>
        <trans-unit id="3db112c9a052511091434d7c1dc84c8df58e2edd" translate="yes" xml:space="preserve">
          <source>_pres</source>
          <target state="translated">_pres</target>
        </trans-unit>
        <trans-unit id="e0be6b5bdb88e12b946dd86d1a6a806693c7a041" translate="yes" xml:space="preserve">
          <source>`bulkWrite()` results</source>
          <target state="translated">`bulkWrite ()`결과</target>
        </trans-unit>
        <trans-unit id="017447cbbcfca15054575f514c46c0243aa697c2" translate="yes" xml:space="preserve">
          <source>`getPromiseConstructor()`</source>
          <target state="translated">`getPromiseConstructor()`</target>
        </trans-unit>
        <trans-unit id="cfedfc38c97b55036d4f5e94af8f55d3c68b93f0" translate="yes" xml:space="preserve">
          <source>`numAffected` and `save()`</source>
          <target state="translated">`numAffected` 및`save ()`</target>
        </trans-unit>
        <trans-unit id="0749ab2a1c3ee970960dc83bab0110506732e99d" translate="yes" xml:space="preserve">
          <source>`remove()` and debouncing</source>
          <target state="translated">`remove ()`및 수신 거부</target>
        </trans-unit>
        <trans-unit id="179ac0ea737397c23445a957dc516adf4a41e27c" translate="yes" xml:space="preserve">
          <source>`required` validator for arrays</source>
          <target state="translated">배열의`필수`검증 자</target>
        </trans-unit>
        <trans-unit id="00f0dad55f9475102b9e8834b1847f404c937c74" translate="yes" xml:space="preserve">
          <source>`toObject()` Options</source>
          <target state="translated">`toObject ()`옵션</target>
        </trans-unit>
        <trans-unit id="5222107c12fc619054bccfd65bbeddef0556d2ed" translate="yes" xml:space="preserve">
          <source>agg &amp;laquo;Aggregate&amp;raquo;</source>
          <target state="translated">agg&amp;laquo;집계&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="e1ffb566107019d0965a193140bb5793546fb17e" translate="yes" xml:space="preserve">
          <source>aggregate</source>
          <target state="translated">aggregate</target>
        </trans-unit>
        <trans-unit id="128dd9378dcf9b6ca4417882581256e7fbec8a4b" translate="yes" xml:space="preserve">
          <source>area &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">&amp;laquo;객체&amp;raquo;영역</target>
        </trans-unit>
        <trans-unit id="b4e2e6851047192908c305723748928da1a86225" translate="yes" xml:space="preserve">
          <source>arg &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">인수&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="8bf0c57feecf4ea692eb87b1d26e2d6000984429" translate="yes" xml:space="preserve">
          <source>arg &amp;laquo;Object&amp;raquo; $group operator contents</source>
          <target state="translated">arg&amp;laquo;Object&amp;raquo;$ group 연산자 내용</target>
        </trans-unit>
        <trans-unit id="fbb4f74df5bd425b94f320167c76e6c9ef766f30" translate="yes" xml:space="preserve">
          <source>arg &amp;laquo;Object&amp;raquo; $match operator contents</source>
          <target state="translated">인수&amp;laquo;객체&amp;raquo;$ match 연산자 내용</target>
        </trans-unit>
        <trans-unit id="960678d944d946b17da396dbb594a3a309223847" translate="yes" xml:space="preserve">
          <source>arg &amp;laquo;Object&amp;raquo; field specification</source>
          <target state="translated">인수&amp;laquo;객체&amp;raquo;필드 사양</target>
        </trans-unit>
        <trans-unit id="ca624afc1728e9e26b445b1e0a9272b50ae3dfec" translate="yes" xml:space="preserve">
          <source>arg &amp;laquo;Object|String&amp;raquo;</source>
          <target state="translated">인수&amp;laquo;객체 | 문자열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="4076ca936f4854b75a102eb3864b096337b90358" translate="yes" xml:space="preserve">
          <source>arg &amp;laquo;Object|String&amp;raquo; field specification</source>
          <target state="translated">arg&amp;laquo;Object | String&amp;raquo;필드 사양</target>
        </trans-unit>
        <trans-unit id="9ba96d707e7861c499b319ff09a37f5b62f2fa07" translate="yes" xml:space="preserve">
          <source>arg &amp;laquo;Object|null&amp;raquo;</source>
          <target state="translated">arg&amp;laquo;Object | null&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="509d3139fef182b5f501bab010b97ca2b2a9fef4" translate="yes" xml:space="preserve">
          <source>args &amp;laquo;Array&amp;raquo; arguments to pass to the method</source>
          <target state="translated">메소드에 전달할&amp;laquo;Array&amp;raquo;인수 인수</target>
        </trans-unit>
        <trans-unit id="aab8f047db2f797e31a0190360bbc2612d6f99b5" translate="yes" xml:space="preserve">
          <source>argument &amp;laquo;String|Function&amp;raquo; is a javascript string or anonymous function</source>
          <target state="translated">&amp;laquo;String | Function&amp;raquo;인수는 자바 스크립트 문자열 또는 익명 함수입니다.</target>
        </trans-unit>
        <trans-unit id="72ddb4dd8a7ab44d2f48a15f93826fc1b9bc1967" translate="yes" xml:space="preserve">
          <source>array &amp;laquo;Array&amp;raquo; array of conditions</source>
          <target state="translated">배열&amp;laquo;배열&amp;raquo;조건 배열</target>
        </trans-unit>
        <trans-unit id="cce02b22aeb56aa88ea9648d2ccc966b8b7c54da" translate="yes" xml:space="preserve">
          <source>asynchronous defaults</source>
          <target state="translated">비동기 기본값</target>
        </trans-unit>
        <trans-unit id="48346c844696914f973b3390ea3f3a509de7acf4" translate="yes" xml:space="preserve">
          <source>asynchronous tasks that a certain action triggers</source>
          <target state="translated">특정 작업이 트리거하는 비동기 작업</target>
        </trans-unit>
        <trans-unit id="c898f52b1caf893ff9617ada1cfaf4e7d2353521" translate="yes" xml:space="preserve">
          <source>autoCreate</source>
          <target state="translated">autoCreate</target>
        </trans-unit>
        <trans-unit id="030c90523a398f15f67ebe96ef8126c5652fc603" translate="yes" xml:space="preserve">
          <source>autoIndex</source>
          <target state="translated">autoIndex</target>
        </trans-unit>
        <trans-unit id="c1f0f34e4d287efc95fa4161c41e313b4e2128e0" translate="yes" xml:space="preserve">
          <source>base &amp;laquo;Mongoose&amp;raquo; a mongoose instance</source>
          <target state="translated">기본&amp;laquo;몽구스&amp;raquo;몽구스 인스턴스</target>
        </trans-unit>
        <trans-unit id="183d70588ef64ba722e02da62ad0e38f27d42f5c" translate="yes" xml:space="preserve">
          <source>batchSize</source>
          <target state="translated">batchSize</target>
        </trans-unit>
        <trans-unit id="570e159bde3730d9d011daf8984d900656701c5f" translate="yes" xml:space="preserve">
          <source>bool &amp;laquo;Boolean&amp;raquo;</source>
          <target state="translated">부울&amp;laquo;부울&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="2c4e63747536498396bcdd570365eccd93cbbaee" translate="yes" xml:space="preserve">
          <source>bool &amp;laquo;Boolean&amp;raquo; defaults to true</source>
          <target state="translated">bool&amp;laquo;Boolean&amp;raquo;의 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="271d1dbcafa2a1fffcec82f602114a54deb13696" translate="yes" xml:space="preserve">
          <source>bool &amp;laquo;Boolean|Object&amp;raquo; defaults to true</source>
          <target state="translated">bool&amp;laquo;Boolean | Object&amp;raquo;의 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="09bee1030d3b6ba7a6ad05f4e959efe9c995b78d" translate="yes" xml:space="preserve">
          <source>boolean &amp;laquo;[options.allowDiskUse]&amp;raquo; if true, the MongoDB server will use the hard drive to store data during this aggregation</source>
          <target state="translated">부울&amp;laquo;[options.allowDiskUse]&amp;raquo;true 인 경우 MongoDB 서버는이 집계 중에 데이터를 저장하기 위해 하드 드라이브를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1bab6fa10b9986178a3346c648db3067517231b0" translate="yes" xml:space="preserve">
          <source>bufferCommands</source>
          <target state="translated">bufferCommands</target>
        </trans-unit>
        <trans-unit id="ca163537d31ce3f23f5b00db4033c08657a9139d" translate="yes" xml:space="preserve">
          <source>callback &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">콜백&amp;laquo;함수&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="8d9572918830ae83d7e0f11598e657a232de4d4e" translate="yes" xml:space="preserve">
          <source>capped</source>
          <target state="translated">capped</target>
        </trans-unit>
        <trans-unit id="85e1542029b937b73e3ac1243bfc28d39b96948e" translate="yes" xml:space="preserve">
          <source>caster &amp;laquo;Function|false&amp;raquo; Function that casts arbitrary values to this type, or throws an error if casting failed</source>
          <target state="translated">caster&amp;laquo;Function | false&amp;raquo;임의의 값을이 유형으로 캐스팅하거나 캐스팅이 실패하면 오류를 발생시키는 함수</target>
        </trans-unit>
        <trans-unit id="aee2faa2f3f246e441fe258e84a724ee788f649b" translate="yes" xml:space="preserve">
          <source>collation</source>
          <target state="translated">collation</target>
        </trans-unit>
        <trans-unit id="a7ae69fe28072da813cdc35f8f6e231abfadfbff" translate="yes" xml:space="preserve">
          <source>collation &amp;laquo;Object&amp;raquo; options</source>
          <target state="translated">데이터 정렬&amp;laquo;객체&amp;raquo;옵션</target>
        </trans-unit>
        <trans-unit id="2037de437c80264ccbce8a8b61d0bf9f593d2322" translate="yes" xml:space="preserve">
          <source>collection</source>
          <target state="translated">collection</target>
        </trans-unit>
        <trans-unit id="a76c2fa420066fcfbcfed7e10d9e3e6c78a1cf1a" translate="yes" xml:space="preserve">
          <source>collection &amp;laquo;string&amp;raquo; The collection to create</source>
          <target state="translated">모음&amp;laquo;문자열&amp;raquo;만들 모음</target>
        </trans-unit>
        <trans-unit id="f74fff156b3530f6ba1b0898a26e708dedd529b5" translate="yes" xml:space="preserve">
          <source>collection &amp;laquo;string&amp;raquo; The collection to delete</source>
          <target state="translated">모음&amp;laquo;문자열&amp;raquo;삭제할 모음</target>
        </trans-unit>
        <trans-unit id="118a9989815489c24b81b160782015890ed2085e" translate="yes" xml:space="preserve">
          <source>comment</source>
          <target state="translated">comment</target>
        </trans-unit>
        <trans-unit id="ed55c1a8a19dcb5ddb0646ed70cc9f73a11d942f" translate="yes" xml:space="preserve">
          <source>complex validation</source>
          <target state="translated">복잡한 검증</target>
        </trans-unit>
        <trans-unit id="f6e04709efc300f3b272bd7119a1d535a52caeef" translate="yes" xml:space="preserve">
          <source>conditions &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">조건&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="53d83d70e24c467280c8fa9f765d3c93db008095" translate="yes" xml:space="preserve">
          <source>conditions &amp;laquo;Object&amp;raquo; an object that specifies the match condition (required)</source>
          <target state="translated">조건&amp;laquo;개체&amp;raquo;일치 조건을 지정하는 개체 (필수)</target>
        </trans-unit>
        <trans-unit id="a0a950de2daec4f3681cbd8dd6aab8c3fd231bbb" translate="yes" xml:space="preserve">
          <source>constructor &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">생성자&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">count</target>
        </trans-unit>
        <trans-unit id="0352a8acc949c7df21fec16e566ba9a74e797a97" translate="yes" xml:space="preserve">
          <source>db</source>
          <target state="translated">db</target>
        </trans-unit>
        <trans-unit id="d73ac48b89e13a0c2761dc9720cd24fb31a9d0a4" translate="yes" xml:space="preserve">
          <source>debug output defaults to stdout instead of stderr</source>
          <target state="translated">디버그 출력의 기본값은 stderr 대신 stdout입니다.</target>
        </trans-unit>
        <trans-unit id="3b9d266e2ef305531f5a197b746021bf59090e45" translate="yes" xml:space="preserve">
          <source>defaults</source>
          <target state="translated">defaults</target>
        </trans-unit>
        <trans-unit id="c0bba31bc07cb2341bd94cac2c08453575aeb840" translate="yes" xml:space="preserve">
          <source>defaults. Use the &lt;code&gt;setDefaultsOnInsert&lt;/code&gt; option to override.</source>
          <target state="translated">기본값. &lt;code&gt;setDefaultsOnInsert&lt;/code&gt; 옵션을 사용하여 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="77b8958758ee39136bd7e29f7554835c8c42fbfb" translate="yes" xml:space="preserve">
          <source>deleteMany</source>
          <target state="translated">deleteMany</target>
        </trans-unit>
        <trans-unit id="5c96e7508d8206229def305821d201b515583f05" translate="yes" xml:space="preserve">
          <source>deleteOne</source>
          <target state="translated">deleteOne</target>
        </trans-unit>
        <trans-unit id="c8ca2f486fdddf1c7e435b02bfbe273eddda9802" translate="yes" xml:space="preserve">
          <source>doc &amp;laquo;Document&amp;raquo;</source>
          <target state="translated">doc&amp;laquo;문서&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="749fb067964eab08fd4f2a8cc5ff0bd7fc8671ca" translate="yes" xml:space="preserve">
          <source>doc &amp;laquo;Document&amp;raquo; The document this virtual is attached to</source>
          <target state="translated">doc&amp;laquo;Document&amp;raquo;이 가상이 첨부 된 문서</target>
        </trans-unit>
        <trans-unit id="c34234c34c44a25bbe3fa9a8feb4a895607889a3" translate="yes" xml:space="preserve">
          <source>doc &amp;laquo;Document&amp;raquo; a document to compare</source>
          <target state="translated">doc&amp;laquo;문서&amp;raquo;비교할 문서</target>
        </trans-unit>
        <trans-unit id="8de9dbc207c6df2224808e698386b80d5974de38" translate="yes" xml:space="preserve">
          <source>doc &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">doc&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="a116c299e44f27dad5e6ad73e43b9e1e47b0f8c9" translate="yes" xml:space="preserve">
          <source>doc &amp;laquo;Object&amp;raquo; document returned by mongo</source>
          <target state="translated">몽고에 의해 반환 된 doc&amp;laquo;Object&amp;raquo;문서</target>
        </trans-unit>
        <trans-unit id="69a1149f8bf565440ca7de1c54b2c2cfaeaebc7f" translate="yes" xml:space="preserve">
          <source>doc &amp;laquo;Object&amp;raquo; values for initial set</source>
          <target state="translated">초기 설정에 대한 doc&amp;laquo;Object&amp;raquo;값</target>
        </trans-unit>
        <trans-unit id="88b697ed1f247adcb0fa8ba87d377fd97f4b13b5" translate="yes" xml:space="preserve">
          <source>doc(s) &amp;laquo;Array|Object|*&amp;raquo;</source>
          <target state="translated">문서&amp;laquo;배열 | 개체 | *&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="92851e0ec9b53e859d1a3b55a1209e9c888fe504" translate="yes" xml:space="preserve">
          <source>docs &amp;laquo;Array|Object&amp;raquo; Documents to insert, as a spread or array</source>
          <target state="translated">docs&amp;laquo;Array | Object&amp;raquo;스프레드 또는 배열로 삽입 할 문서</target>
        </trans-unit>
        <trans-unit id="7bed87ff4991c8ffb075840c45f4a476a9696950" translate="yes" xml:space="preserve">
          <source>docs &amp;laquo;Document|Array&amp;raquo; Either a single document or array of documents to populate.</source>
          <target state="translated">docs&amp;laquo;Document | Array&amp;raquo;채울 단일 문서 또는 문서 배열입니다.</target>
        </trans-unit>
        <trans-unit id="2e96e89125f4c1aef797410a4bfdb32c0632ef0c" translate="yes" xml:space="preserve">
          <source>emit</source>
          <target state="translated">emit</target>
        </trans-unit>
        <trans-unit id="832041f3cefb5a8040a308d12638ec20a3f0084b" translate="yes" xml:space="preserve">
          <source>err &amp;laquo;Error|null&amp;raquo; if set, &lt;code&gt;exec()&lt;/code&gt; will fail fast before sending the query to MongoDB</source>
          <target state="translated">err&amp;laquo;Error | null&amp;raquo;설정되면 &lt;code&gt;exec()&lt;/code&gt; 는 쿼리를 MongoDB로 보내기 전에 빠르게 실패합니다.</target>
        </trans-unit>
        <trans-unit id="e58ece118d668e8f7f5c0194741ee5db95d7c027" translate="yes" xml:space="preserve">
          <source>errorMsg &amp;laquo;String|Error&amp;raquo; the error which states the reason &lt;code&gt;path&lt;/code&gt; was invalid</source>
          <target state="translated">errorMsg&amp;laquo;String | Error&amp;raquo;이유 &lt;code&gt;path&lt;/code&gt; 가 유효하지 않은 오류</target>
        </trans-unit>
        <trans-unit id="570043596e41f9067d43fbff99f1acb348a090bf" translate="yes" xml:space="preserve">
          <source>errors</source>
          <target state="translated">errors</target>
        </trans-unit>
        <trans-unit id="f7c1380a0d710f68237d428f1a0df358079a6be5" translate="yes" xml:space="preserve">
          <source>explain</source>
          <target state="translated">explain</target>
        </trans-unit>
        <trans-unit id="50815ce93d074801c0cd8b809c75bfa981a6af9f" translate="yes" xml:space="preserve">
          <source>expression &amp;laquo;Object&amp;raquo; redact options or conditional expression</source>
          <target state="translated">&amp;laquo;객체&amp;raquo;표현식 수정 옵션 또는 조건식</target>
        </trans-unit>
        <trans-unit id="45617234f19dd8b607713e11fb88e42e02797027" translate="yes" xml:space="preserve">
          <source>facet &amp;laquo;Object&amp;raquo; options</source>
          <target state="translated">패싯&amp;laquo;객체&amp;raquo;옵션</target>
        </trans-unit>
        <trans-unit id="5f138c3ebf297a1bb1cef7b749775737b25af805" translate="yes" xml:space="preserve">
          <source>field &amp;laquo;String&amp;raquo;</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;필드</target>
        </trans-unit>
        <trans-unit id="60e64bba4b35baaf6bfdef700374de0d165a4383" translate="yes" xml:space="preserve">
          <source>fields &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">&amp;laquo;개체&amp;raquo;필드</target>
        </trans-unit>
        <trans-unit id="f0904dcd3c2cd2690796f44301ad0ad388752d35" translate="yes" xml:space="preserve">
          <source>fields &amp;laquo;String&amp;raquo; the field(s) to unwind</source>
          <target state="translated">해제 할 필드&amp;laquo;문자열&amp;raquo;필드</target>
        </trans-unit>
        <trans-unit id="47fa60f9957a51e3880099c66990ef73be4946ef" translate="yes" xml:space="preserve">
          <source>filter &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">&amp;laquo;객체&amp;raquo;필터</target>
        </trans-unit>
        <trans-unit id="750806be16f338300867c95c086313870be94859" translate="yes" xml:space="preserve">
          <source>filter &amp;laquo;Object&amp;raquo; Replace the first document that matches this filter</source>
          <target state="translated">&amp;laquo;Object&amp;raquo;필터이 필터와 일치하는 첫 번째 문서를 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="d440013a1600362c687bb1bfd77892ad45e4d02e" translate="yes" xml:space="preserve">
          <source>filter &amp;laquo;Object|Function&amp;raquo;</source>
          <target state="translated">&amp;laquo;객체 | 함수&amp;raquo;필터</target>
        </trans-unit>
        <trans-unit id="98307db4e3e3f2ae2e0440fd52ce4dfd2e723e4d" translate="yes" xml:space="preserve">
          <source>filter &amp;laquo;Object|ObjectId&amp;raquo;</source>
          <target state="translated">&amp;laquo;Object | ObjectId&amp;raquo;필터</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="769a3cfe9eb742b22525fcce4ea165ec2198816e" translate="yes" xml:space="preserve">
          <source>findOne</source>
          <target state="translated">findOne</target>
        </trans-unit>
        <trans-unit id="a384eed022309f9465c7a9740b7a8ca8861063b1" translate="yes" xml:space="preserve">
          <source>findOneAndDelete</source>
          <target state="translated">findOneAndDelete</target>
        </trans-unit>
        <trans-unit id="28a36751fa78f77ac3a0e0496e20f9997ad65af6" translate="yes" xml:space="preserve">
          <source>findOneAndRemove</source>
          <target state="translated">findOneAndRemove</target>
        </trans-unit>
        <trans-unit id="3f7f722949da7db59c77d45c30941978fac2a4e8" translate="yes" xml:space="preserve">
          <source>findOneAndUpdate</source>
          <target state="translated">findOneAndUpdate</target>
        </trans-unit>
        <trans-unit id="e27068ff081da9dda40626a7af522c1e05cb3e08" translate="yes" xml:space="preserve">
          <source>flag &amp;laquo;String&amp;raquo;</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;플래그</target>
        </trans-unit>
        <trans-unit id="9205ae9e0fc4d81ad0dc0c029a2a06c775fb0b6f" translate="yes" xml:space="preserve">
          <source>fn &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">fn&amp;laquo;기능&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="85c43437d60cebb273b87e7866011ceb6dfc90db" translate="yes" xml:space="preserve">
          <source>fn &amp;laquo;Function&amp;raquo; callback</source>
          <target state="translated">fn&amp;laquo;함수&amp;raquo;콜백</target>
        </trans-unit>
        <trans-unit id="319c346b8441f7a604e5be327ecefac645cd316d" translate="yes" xml:space="preserve">
          <source>fn &amp;laquo;Function&amp;raquo; callback function</source>
          <target state="translated">fn&amp;laquo;함수&amp;raquo;콜백 함수</target>
        </trans-unit>
        <trans-unit id="9679e260acbd459d8e8a6825d0e609738585d135" translate="yes" xml:space="preserve">
          <source>fn &amp;laquo;Function&amp;raquo; function to run to transform the query result</source>
          <target state="translated">fn&amp;laquo;Function&amp;raquo;함수를 사용하여 쿼리 결과를 변환</target>
        </trans-unit>
        <trans-unit id="d8e5e07b24d0527279c6a47f26384db928b0e9ca" translate="yes" xml:space="preserve">
          <source>fn &amp;laquo;Function&amp;raquo; plugin callback</source>
          <target state="translated">fn&amp;laquo;Function&amp;raquo;플러그인 콜백</target>
        </trans-unit>
        <trans-unit id="c847ccde3433c752ee901ae888ef20fbf373e9f5" translate="yes" xml:space="preserve">
          <source>function Object() { [native code] }.prototype.options</source>
          <target state="translated">function Object () {[네이티브 코드]} .prototype.options</target>
        </trans-unit>
        <trans-unit id="0fec154210f86bed97b281c3a238f84ff07521fe" translate="yes" xml:space="preserve">
          <source>geoNear</source>
          <target state="translated">geoNear</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="eea55c6e095e948f0e8a9e72e66652f3b97f8b05" translate="yes" xml:space="preserve">
          <source>getter &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">게터&amp;laquo;기능&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="734c3c67dba099bc9f9d716c5b06aa5d84014b4f" translate="yes" xml:space="preserve">
          <source>hint</source>
          <target state="translated">hint</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">id</target>
        </trans-unit>
        <trans-unit id="9b2a6b8f7f2a7ddc2e0c41a3b0d22611548c863a" translate="yes" xml:space="preserve">
          <source>id &amp;laquo;Any&amp;raquo; value of &lt;code&gt;_id&lt;/code&gt; to query by</source>
          <target state="translated">조회 할 &lt;code&gt;_id&lt;/code&gt; 의 id&amp;laquo;Any&amp;raquo;값</target>
        </trans-unit>
        <trans-unit id="57b6bc5f6795ef39d76f1fe788b53c4dbe7a2ed6" translate="yes" xml:space="preserve">
          <source>id &amp;laquo;Object|Number|String&amp;raquo; value of &lt;code&gt;_id&lt;/code&gt; to query by</source>
          <target state="translated">조회 할 &lt;code&gt;_id&lt;/code&gt; 의 id&amp;laquo;Object | Number | String&amp;raquo;값</target>
        </trans-unit>
        <trans-unit id="a47f7f632a7edb7521a92b51c1738932c73a74f2" translate="yes" xml:space="preserve">
          <source>if you define a transform in &lt;code&gt;schema.options.toObject.transform&lt;/code&gt;, that transform will &lt;strong&gt;not&lt;/strong&gt; apply to subdocuments.</source>
          <target state="translated">&lt;code&gt;schema.options.toObject.transform&lt;/code&gt; 에서 변환을 정의하면 해당 변환은 하위 문서에 적용 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="d4bdfe83c1f541b0554bf8f3d80fbe03aa71df40" translate="yes" xml:space="preserve">
          <source>insertMany</source>
          <target state="translated">insertMany</target>
        </trans-unit>
        <trans-unit id="f56a037973771177e10a1f0523b6b6da23f3f5e8" translate="yes" xml:space="preserve">
          <source>invalidate &amp;laquo;Boolean&amp;raquo; refresh the cache</source>
          <target state="translated">무효화&amp;laquo;Boolean&amp;raquo;캐시 새로 고침</target>
        </trans-unit>
        <trans-unit id="053a53fea278e30829c5a8acd6395e26256f61f7" translate="yes" xml:space="preserve">
          <source>isModified</source>
          <target state="translated">isModified</target>
        </trans-unit>
        <trans-unit id="e3eab7b7f241437111d34070ed20461b82df853a" translate="yes" xml:space="preserve">
          <source>isNew</source>
          <target state="translated">isNew</target>
        </trans-unit>
        <trans-unit id="f4d51d0600c175158e342c38c89210d4b09bea85" translate="yes" xml:space="preserve">
          <source>js &amp;laquo;String|Function&amp;raquo; javascript string or function</source>
          <target state="translated">js&amp;laquo;문자열 | 함수&amp;raquo;자바 스크립트 문자열 또는 함수</target>
        </trans-unit>
        <trans-unit id="1eb6e27eabb57f3965f84221bd35eaaa46b3f659" translate="yes" xml:space="preserve">
          <source>justOne: optional boolean, if true Mongoose will always set &lt;code&gt;path&lt;/code&gt; to an array. Inferred from schema by default.</source>
          <target state="translated">justOne : 선택 사항 인 boolean. true이면 몽구스가 항상 &lt;code&gt;path&lt;/code&gt; 를 배열로 설정 합니다 . 기본적으로 스키마에서 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="f710437eff24c07b9ee051c462843e496cdb008e" translate="yes" xml:space="preserve">
          <source>key &amp;laquo;String&amp;raquo;</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;키</target>
        </trans-unit>
        <trans-unit id="385f7cc21a4534585a8beffbde4134cdb1bc5522" translate="yes" xml:space="preserve">
          <source>key &amp;laquo;String&amp;raquo; option name</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;옵션 이름</target>
        </trans-unit>
        <trans-unit id="8be47d2b8549b583955db4969ed9f932d4d42fb7" translate="yes" xml:space="preserve">
          <source>lean</source>
          <target state="translated">lean</target>
        </trans-unit>
        <trans-unit id="ec63c5bb7cdf237d1e4f10ce8107924754942202" translate="yes" xml:space="preserve">
          <source>level &amp;laquo;String&amp;raquo; one of the listed read concern level or their aliases</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;레벨이 나열된 읽기 우려 레벨 또는 해당 별명 중 하나</target>
        </trans-unit>
        <trans-unit id="e4d68c5a97e466323c2fbe2b655ab578066a1cd5" translate="yes" xml:space="preserve">
          <source>limit</source>
          <target state="translated">limit</target>
        </trans-unit>
        <trans-unit id="7884a9936d51d6996fe1794a1f7c4df46cbf8a14" translate="yes" xml:space="preserve">
          <source>listeners</source>
          <target state="translated">listeners</target>
        </trans-unit>
        <trans-unit id="012df06dcf6cc53270340fdfe328bc38cb199ae4" translate="yes" xml:space="preserve">
          <source>match: optional query conditions to match</source>
          <target state="translated">일치 : 선택적인 검색어 조건</target>
        </trans-unit>
        <trans-unit id="2af4127b75312cf31896dc2ad4329b9a88a9013c" translate="yes" xml:space="preserve">
          <source>maxTimeMS</source>
          <target state="translated">maxTimeMS</target>
        </trans-unit>
        <trans-unit id="c41127ffcff357347fcca99366d48c70dd560075" translate="yes" xml:space="preserve">
          <source>maxscan</source>
          <target state="translated">maxscan</target>
        </trans-unit>
        <trans-unit id="8079aecd5ac3ed318a65d03ba551f5844dc5375b" translate="yes" xml:space="preserve">
          <source>method &amp;laquo;String|Object&amp;raquo; name</source>
          <target state="translated">&amp;laquo;문자열 | 개체&amp;raquo;이름</target>
        </trans-unit>
        <trans-unit id="9460a52bdbeb3f581874c7fe69a184b765f897b5" translate="yes" xml:space="preserve">
          <source>middleware</source>
          <target state="translated">middleware</target>
        </trans-unit>
        <trans-unit id="0c3639c10994d885f997d2403c4fb64b10a118b3" translate="yes" xml:space="preserve">
          <source>minimize</source>
          <target state="translated">minimize</target>
        </trans-unit>
        <trans-unit id="d17b67a218527e38148792e33c2e360de44b784e" translate="yes" xml:space="preserve">
          <source>model &amp;laquo;Function&amp;raquo;</source>
          <target state="translated">&amp;laquo;기능&amp;raquo;모델</target>
        </trans-unit>
        <trans-unit id="c07ad4de981164dacf56e943a5574b329933c5f6" translate="yes" xml:space="preserve">
          <source>model: optional name of the model to use for population</source>
          <target state="translated">모델 : 모집단에 사용할 모델의 선택적 이름</target>
        </trans-unit>
        <trans-unit id="373232ac56e74b10277e8e5681ffc42cd1234925" translate="yes" xml:space="preserve">
          <source>modelName</source>
          <target state="translated">modelName</target>
        </trans-unit>
        <trans-unit id="c2c08643da534a9b85024b81dc5be654f892d8d5" translate="yes" xml:space="preserve">
          <source>mongoose-lean-defaults</source>
          <target state="translated">mongoose-lean-defaults</target>
        </trans-unit>
        <trans-unit id="2fe3038d72ff6a8c81a02a1b3dc5be9fa28c4d5e" translate="yes" xml:space="preserve">
          <source>mongoose-lean-getters</source>
          <target state="translated">mongoose-lean-getters</target>
        </trans-unit>
        <trans-unit id="b2caab238dcf9fe9ab0411108c88123ad598fe5d" translate="yes" xml:space="preserve">
          <source>mongoose-lean-virtuals</source>
          <target state="translated">mongoose-lean-virtuals</target>
        </trans-unit>
        <trans-unit id="628105c2c30f24b24f48ce705c8d1cd60bfc6c8d" translate="yes" xml:space="preserve">
          <source>ms &amp;laquo;number&amp;raquo; number of milliseconds to wait</source>
          <target state="translated">ms&amp;laquo;number&amp;raquo;대기 시간 (밀리 초)</target>
        </trans-unit>
        <trans-unit id="58527d9c3bfd77eee73cb00993f96ed5df364bbc" translate="yes" xml:space="preserve">
          <source>msg &amp;laquo;String&amp;raquo; Error message</source>
          <target state="translated">msg&amp;laquo;문자열&amp;raquo;오류 메시지</target>
        </trans-unit>
        <trans-unit id="48e7300e5a528c5d743e1a1e7f9a11a71bbf98d5" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String&amp;raquo;</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;이름</target>
        </trans-unit>
        <trans-unit id="ca5153ed1c07b43dcc9ba94b1a5ae7fd42a36ae3" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String&amp;raquo; The database name</source>
          <target state="translated">이름&amp;laquo;문자열&amp;raquo;데이터베이스 이름</target>
        </trans-unit>
        <trans-unit id="dac4ea76b7a6b6325784f401b4e18b6b170e98ab" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String&amp;raquo; discriminator model name</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;식별기 모델 이름</target>
        </trans-unit>
        <trans-unit id="84f349eb5f15c15a64b5bc2f453ae379c9a4f027" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String&amp;raquo; model name</source>
          <target state="translated">&amp;laquo;문자열&amp;raquo;모델 이름</target>
        </trans-unit>
        <trans-unit id="9228589dd36e46430b8de9463f6433632960ea89" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String&amp;raquo; name of the document method to call later</source>
          <target state="translated">name&amp;laquo;문자열&amp;raquo;나중에 호출 할 문서 메소드의 이름</target>
        </trans-unit>
        <trans-unit id="ea9a04300d1e6707a62812a70f0f09540805ace7" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String&amp;raquo; of the collection</source>
          <target state="translated">컬렉션의 이름&amp;laquo;문자열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="d8a037e7cca92b18e0b6029d859b5b4db9a57b9b" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String|Function&amp;raquo; model name or class extending Model</source>
          <target state="translated">&amp;laquo;문자열 | 함수&amp;raquo;모델 이름 또는 클래스 확장 모델</target>
        </trans-unit>
        <trans-unit id="1cecb3bc6a57e1fd040f46ff65273dba6dcb06fa" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String|Function&amp;raquo; the model name or class extending Model</source>
          <target state="translated">&amp;laquo;문자열 | 함수&amp;raquo;모델 이름 또는 클래스 확장 모델</target>
        </trans-unit>
        <trans-unit id="085a39d2983af3e28ec9594866b681c6dc343ae4" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String|Object&amp;raquo;</source>
          <target state="translated">&amp;laquo;문자열 | 개체&amp;raquo;이름</target>
        </trans-unit>
        <trans-unit id="21cce19d0fc78bdf5f467fb18de95d9d98b688b6" translate="yes" xml:space="preserve">
          <source>name &amp;laquo;String|RegExp&amp;raquo; if string, the name of the model to remove. If regexp, removes all models whose name matches the regexp.</source>
          <target state="translated">name&amp;laquo;String | RegExp&amp;raquo;문자열 인 경우 제거 할 모델의 이름입니다. 정규 표현식 인 경우 이름이 정규 표현식과 일치하는 모든 모델을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7a423043ecef6b6cd0c67a2d7157ee2fb8756202" translate="yes" xml:space="preserve">
          <source>new &amp;laquo;Object&amp;raquo; query conditions</source>
          <target state="translated">새로운&amp;laquo;객체&amp;raquo;쿼리 조건</target>
        </trans-unit>
        <trans-unit id="1047a5c4b010127664b2032b2e1121fd6a6f7266" translate="yes" xml:space="preserve">
          <source>new &amp;laquo;Object&amp;raquo; update operation</source>
          <target state="translated">새로운&amp;laquo;객체&amp;raquo;업데이트 작업</target>
        </trans-unit>
        <trans-unit id="313ca21a177e6c1d57b4f3001c3876e2237d9e47" translate="yes" xml:space="preserve">
          <source>num &amp;laquo;Number&amp;raquo; maximum number of records to pass to the next stage</source>
          <target state="translated">&amp;laquo;번호&amp;raquo;다음 단계로 전달할 최대 레코드 수</target>
        </trans-unit>
        <trans-unit id="042ce551a03a6f30506f67cd4d786a471f96e028" translate="yes" xml:space="preserve">
          <source>num &amp;laquo;Number&amp;raquo; number of records to skip before next stage</source>
          <target state="translated">num&amp;laquo;Number&amp;raquo;다음 단계 전에 건너 뛸 레코드 수</target>
        </trans-unit>
        <trans-unit id="fa47fa1c85fcdd613cba486fbdec1007a0672543" translate="yes" xml:space="preserve">
          <source>number &amp;laquo;[options.maxTimeMS]&amp;raquo; limits the time this aggregation will run, see &lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/meta/maxTimeMS/&quot;&gt;MongoDB docs on &lt;code&gt;maxTimeMS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&amp;laquo;[options.maxTimeMS]&amp;raquo;번호는이 집계가 실행되는 시간을 제한합니다 &lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/meta/maxTimeMS/&quot;&gt;. &lt;/a&gt; &lt;code&gt;maxTimeMS&lt;/code&gt; 의 MongoDB 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8b181627b784f97e0cc122d611aadb7d1d8ebdc" translate="yes" xml:space="preserve">
          <source>o &amp;laquo;Object&amp;raquo; an object specifying map-reduce options</source>
          <target state="translated">o 맵 감소 옵션을 지정하는 오브젝트&amp;laquo;Object&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="dff5f41d6cb85bc8e35e6bcc6aee2a2164e5e138" translate="yes" xml:space="preserve">
          <source>obj &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">obj&amp;laquo;객체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="fca524ffb096ec6b8b4044ec34b3eaea68765c87" translate="yes" xml:space="preserve">
          <source>obj &amp;laquo;Object&amp;raquo; the item to check</source>
          <target state="translated">obj&amp;laquo;Object&amp;raquo;점검 할 항목</target>
        </trans-unit>
        <trans-unit id="1e10740c40ef1f329faffd298a3e0009a7c33ae0" translate="yes" xml:space="preserve">
          <source>obj &amp;laquo;Object&amp;raquo; the item to look for</source>
          <target state="translated">obj&amp;laquo;Object&amp;raquo;찾을 항목</target>
        </trans-unit>
        <trans-unit id="305db22e05dd33a0d95d22f8d25802a41c4c1c65" translate="yes" xml:space="preserve">
          <source>obj &amp;laquo;Object&amp;raquo; the object to overwrite this document with</source>
          <target state="translated">obj&amp;laquo;Object&amp;raquo;이 문서를 덮어 쓸 개체</target>
        </trans-unit>
        <trans-unit id="3403709a5d0abd833d883411576ebd45bf0d8466" translate="yes" xml:space="preserve">
          <source>obj &amp;laquo;Object|Schema&amp;raquo; plain object with paths to add, or another schema</source>
          <target state="translated">obj&amp;laquo;Object | Schema&amp;raquo;추가 할 경로가있는 일반 객체 또는 다른 스키마</target>
        </trans-unit>
        <trans-unit id="04c1351dc82a55716c355250558424d1d2892f50" translate="yes" xml:space="preserve">
          <source>obj &amp;laquo;RegExp|Function|Object&amp;raquo; validator function, or hash describing options</source>
          <target state="translated">obj&amp;laquo;RegExp | 함수 | 개체&amp;raquo;유효성 검사기 함수 또는 해시 설명 옵션</target>
        </trans-unit>
        <trans-unit id="8f0ac8ea7a19431363142ab44b4372087e7459c1" translate="yes" xml:space="preserve">
          <source>object &amp;laquo;Object&amp;raquo; Must contain a &lt;code&gt;type&lt;/code&gt; property which is a String and a &lt;code&gt;coordinates&lt;/code&gt; property which is an Array. See the examples.</source>
          <target state="translated">object&amp;laquo;Object&amp;raquo; String 인 &lt;code&gt;type&lt;/code&gt; 속성과 Array 인 &lt;code&gt;coordinates&lt;/code&gt; 속성을 포함해야합니다 . 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b0d1ccd0eabdcc155c1a425e072c29275481d2a3" translate="yes" xml:space="preserve">
          <source>object &amp;laquo;[options.collation]&amp;raquo; see &lt;a href=&quot;docs/api#aggregate_Aggregate-collation&quot;&gt;&lt;code&gt;Aggregate.prototype.collation()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&amp;laquo;[options.collation]&amp;raquo;오브젝트는 &lt;a href=&quot;docs/api#aggregate_Aggregate-collation&quot;&gt; &lt;code&gt;Aggregate.prototype.collation()&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="687dee40db58b11dc42a4f228ed05b96f87d9075" translate="yes" xml:space="preserve">
          <source>omitUndefined: delete any properties whose value is &lt;code&gt;undefined&lt;/code&gt; when casting an update. In other words, if this is set, Mongoose will delete &lt;code&gt;baz&lt;/code&gt; from the update in &lt;code&gt;Model.updateOne({}, { foo: 'bar', baz: undefined })&lt;/code&gt; before sending the update to the server.</source>
          <target state="translated">omitUndefined : 업데이트를 캐스팅 할 때 값이 &lt;code&gt;undefined&lt;/code&gt; 속성을 삭제합니다 . 즉, 설정되어 있으면 몽구스는 서버로 업데이트를 보내기 전에 &lt;code&gt;Model.updateOne({}, { foo: 'bar', baz: undefined })&lt;/code&gt; 의 업데이트에서 &lt;code&gt;baz&lt;/code&gt; 를 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="db3d405b10675998c030223177d42e71b4e7a312" translate="yes" xml:space="preserve">
          <source>on</source>
          <target state="translated">on</target>
        </trans-unit>
        <trans-unit id="1863835675e3970e15e5c22411ef60824eb55591" translate="yes" xml:space="preserve">
          <source>once</source>
          <target state="translated">once</target>
        </trans-unit>
        <trans-unit id="c40d41cbffa3505e36b3285994c723ca7b956a40" translate="yes" xml:space="preserve">
          <source>ops &amp;laquo;Array&amp;raquo;</source>
          <target state="translated">ops&amp;laquo;배열&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="3c12f3659d93cacaafcd75f198a71fd2d6cb9182" translate="yes" xml:space="preserve">
          <source>ops &amp;laquo;Object&amp;raquo; operator(s) to append</source>
          <target state="translated">추가 할&amp;laquo;Object&amp;raquo;연산자</target>
        </trans-unit>
        <trans-unit id="cd39f71d5fcb40b7c18a1d7e377c0b8af92789b9" translate="yes" xml:space="preserve">
          <source>option: _id</source>
          <target state="translated">옵션 : _id</target>
        </trans-unit>
        <trans-unit id="a08cd54b503ad85e58b6c1037fd938ef9fe48a90" translate="yes" xml:space="preserve">
          <source>option: autoCreate</source>
          <target state="translated">옵션 : autoCreate</target>
        </trans-unit>
        <trans-unit id="7f32fe8f2b620f078a072bf4071cfc417025478c" translate="yes" xml:space="preserve">
          <source>option: autoIndex</source>
          <target state="translated">옵션 : autoIndex</target>
        </trans-unit>
        <trans-unit id="ef3961266d1acc928b5ddda08445c41980edd00a" translate="yes" xml:space="preserve">
          <source>option: bufferCommands</source>
          <target state="translated">옵션 : bufferCommands</target>
        </trans-unit>
        <trans-unit id="4aebe9e804a11b3706e9096412e18fac77abd084" translate="yes" xml:space="preserve">
          <source>option: capped</source>
          <target state="translated">옵션 : 출장</target>
        </trans-unit>
        <trans-unit id="3e7e27468696deb77278b8e5db711c6be0e261c3" translate="yes" xml:space="preserve">
          <source>option: collation</source>
          <target state="translated">옵션 : 데이터 정렬</target>
        </trans-unit>
        <trans-unit id="df5f3d772f9b6e05b6a797f9b84541faa800697c" translate="yes" xml:space="preserve">
          <source>option: collection</source>
          <target state="translated">옵션 : 수집</target>
        </trans-unit>
        <trans-unit id="3639569fe6dc4fa030e427e66044c0c3713a2471" translate="yes" xml:space="preserve">
          <source>option: id</source>
          <target state="translated">옵션 : id</target>
        </trans-unit>
        <trans-unit id="88367951e5063abbf6f8cdf7f51cc497de0bed09" translate="yes" xml:space="preserve">
          <source>option: minimize</source>
          <target state="translated">옵션 : 최소화</target>
        </trans-unit>
        <trans-unit id="1474855581cbf7b0f94379da1d7719888587ec05" translate="yes" xml:space="preserve">
          <source>option: read</source>
          <target state="translated">옵션 : 읽기</target>
        </trans-unit>
        <trans-unit id="5feb9a997521f34cf9397c8f92cce62b5325cd1a" translate="yes" xml:space="preserve">
          <source>option: selectPopulatedPaths</source>
          <target state="translated">옵션 : selectPopulatedPaths</target>
        </trans-unit>
        <trans-unit id="25e7c54aad1479a85a562fbf75c0f756f6e5f927" translate="yes" xml:space="preserve">
          <source>option: shardKey</source>
          <target state="translated">옵션 : shardKey</target>
        </trans-unit>
        <trans-unit id="022998903a0525dda5d7f3acbb528c91b1501a0a" translate="yes" xml:space="preserve">
          <source>option: skipVersioning</source>
          <target state="translated">옵션 : skipVersioning</target>
        </trans-unit>
        <trans-unit id="8340e5b6f05796c70d991c8bf1c766b24657c499" translate="yes" xml:space="preserve">
          <source>option: storeSubdocValidationError</source>
          <target state="translated">옵션 : storeSubdocValidationError</target>
        </trans-unit>
        <trans-unit id="52e24de1026eb9345d87c84095d351165114bb07" translate="yes" xml:space="preserve">
          <source>option: strict</source>
          <target state="translated">옵션 : 엄격</target>
        </trans-unit>
        <trans-unit id="894ef38102a9b6ca8ee502efd4c8b473c5714c29" translate="yes" xml:space="preserve">
          <source>option: strictQuery</source>
          <target state="translated">옵션 : strictQuery</target>
        </trans-unit>
        <trans-unit id="ae4c6f7253b993edd011007cb81c9119338f7553" translate="yes" xml:space="preserve">
          <source>option: timestamps</source>
          <target state="translated">옵션 : 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="b88810b3abc1976f5421a604d396128800c1a7a9" translate="yes" xml:space="preserve">
          <source>option: toJSON</source>
          <target state="translated">옵션 : toJSON</target>
        </trans-unit>
        <trans-unit id="a27693cc44c0a07dbe67fa27070edd98fa5836ce" translate="yes" xml:space="preserve">
          <source>option: toObject</source>
          <target state="translated">옵션 : toObject</target>
        </trans-unit>
        <trans-unit id="b6bdbcdee2d8a0940313f0fed9aa8d45ebc678f9" translate="yes" xml:space="preserve">
          <source>option: typeKey</source>
          <target state="translated">옵션 : typeKey</target>
        </trans-unit>
        <trans-unit id="20e81ae34e5cdbade7681433af200bb43c39e659" translate="yes" xml:space="preserve">
          <source>option: useNestedStrict</source>
          <target state="translated">옵션 : useNestedStrict</target>
        </trans-unit>
        <trans-unit id="39fd5a1442be104e349a19f9274466062d31ac82" translate="yes" xml:space="preserve">
          <source>option: validateBeforeSave</source>
          <target state="translated">옵션 : validateBeforeSave</target>
        </trans-unit>
        <trans-unit id="bcc196bfdc64b521e1bcc8b14853748809d6330f" translate="yes" xml:space="preserve">
          <source>option: versionKey</source>
          <target state="translated">옵션 : versionKey</target>
        </trans-unit>
        <trans-unit id="f3d239e373a28575c060e6b843c99b724fb77b4d" translate="yes" xml:space="preserve">
          <source>option: writeConcern</source>
          <target state="translated">옵션 : writeConcern</target>
        </trans-unit>
        <trans-unit id="6cac199cb2f2b1530df0b755aa189525cbf06fc1" translate="yes" xml:space="preserve">
          <source>optional &amp;laquo;[fields]&amp;raquo; object containing the fields that were selected in the query which returned this document. You do &lt;strong&gt;not&lt;/strong&gt; need to set this parameter to ensure Mongoose handles your &lt;a href=&quot;api#query_Query-select&quot;&gt;query projection&lt;/a&gt;.</source>
          <target state="translated">이 문서를 리턴 한 조회에서 선택된 필드를 포함하는 선택적&amp;laquo;[fields]&amp;raquo;오브젝트. Mongoose가 &lt;a href=&quot;api#query_Query-select&quot;&gt;쿼리 프로젝션을&lt;/a&gt; 처리하도록이 매개 변수를 설정할 필요 는 &lt;strong&gt;없습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4ae8e63b1849fd4829ef7bf30f9113a9cbe0bbdb" translate="yes" xml:space="preserve">
          <source>options &amp;laquo;Object&amp;raquo;</source>
          <target state="translated">옵션&amp;laquo;개체&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="d0687cd1dc44ebbdb6f39117bf0c6cc2aadb047a" translate="yes" xml:space="preserve">
          <source>options &amp;laquo;Object&amp;raquo; A hash of key/val (path, options) used for population.</source>
          <target state="translated">options&amp;laquo;Object&amp;raquo;채우기에 사용되는 키 / val (경로, 옵션)의 해시.</target>
        </trans-unit>
        <trans-unit id="1fe9203bfc9ebab41f98b39fc53a7269d8b34754" translate="yes" xml:space="preserve">
          <source>options &amp;laquo;Object&amp;raquo; for the geoSearch, some (near, maxDistance) are required</source>
          <target state="translated">geoSearch에 대한 옵션&amp;laquo;개체&amp;raquo;(일부, maxDistance)가 필요합니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
