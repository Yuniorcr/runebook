<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="933dce785b043ca243c006a08842ae98e2bfc54a" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;interimResults&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;interimResults&lt;/code&gt; 의 기본값 은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b912f301a5bbc2631003011d3cc00780acd67579" translate="yes" xml:space="preserve">
          <source>The default value for gain is 1; this keeps the current volume the same. Gain can be set to a minimum of about -3.4 and a max of about 3.4. Here we'll allow the boombox to move the gain up to 2 (double the original volume) and down to 0 (this will effectively mute our sound).</source>
          <target state="translated">게인의 기본값은 1입니다. 현재 볼륨을 동일하게 유지합니다. 게인은 최소 약 -3.4 및 최대 약 3.4로 설정할 수 있습니다. 여기에서 붐 박스가 게인을 최대 2 (원래 볼륨의 2 배)로, 0으로 낮추도록합니다 (사운드를 효과적으로 음소거합니다).</target>
        </trans-unit>
        <trans-unit id="750c418c522ac704dd457b72492d4e27261a09ed" translate="yes" xml:space="preserve">
          <source>The default value is 0.</source>
          <target state="translated">기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="ad6c9ad86a5d8173b84c871422669785d6da13f4" translate="yes" xml:space="preserve">
          <source>The default value is 1.</source>
          <target state="translated">기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="f2268ba18757fce3e451b5925d0b82813fcc9cb6" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;alphabetic&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;&quot;alphabetic&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c05d275b2ec59bd93303bcad11d4fb992340f741" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;inherit&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;&quot;inherit&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="39d5b693f8a823ad954238c2462b4a9837edacfc" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;&quot;start&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cbd606e7d9c64db86d0a04af873213380c3442cd" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;null&lt;/code&gt;, indicating that no additional details are available.</source>
          <target state="translated">기본값은 &lt;code&gt;null&lt;/code&gt; 이며 사용 가능한 추가 세부 사항이 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b359dc601c36a18fc6150b92e31fc55190cfceb4" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;vec4(0.0, 0.0, 0.0, 1.0)&lt;/code&gt; by default but we can specify a different default value with &lt;code&gt;&lt;a href=&quot;vertexattrib&quot;&gt;&lt;code&gt;gl.vertexAttrib[1234]f[v]()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;vec4(0.0, 0.0, 0.0, 1.0)&lt;/code&gt; 이지만 &lt;code&gt;&lt;a href=&quot;vertexattrib&quot;&gt;&lt;code&gt;gl.vertexAttrib[1234]f[v]()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 로 다른 기본값을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee87e5c57c0056880ccf5a54522cd23032b0b77e" translate="yes" xml:space="preserve">
          <source>The default value is the empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">기본값은 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="065cc37cecd779670f71ec3376963bbcfd5df213" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;appendWindowEnd&lt;/code&gt; is positive infinity.</source>
          <target state="translated">&lt;code&gt;appendWindowEnd&lt;/code&gt; 의 기본값 은 양의 무한대입니다.</target>
        </trans-unit>
        <trans-unit id="6763618c40169add87de556a07797e1f99af7696" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;appendWindowStart&lt;/code&gt; is the presentation start time, which is the beginning time of the playable media.</source>
          <target state="translated">&lt;code&gt;appendWindowStart&lt;/code&gt; 의 기본값 은 재생 가능한 미디어의 시작 시간 인 프레젠테이션 시작 시간입니다.</target>
        </trans-unit>
        <trans-unit id="94cda586e818d962065324054e646bb23fedabde" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;maxValue&lt;/code&gt; is the maximum positive single-precision floating-point value (+340,282,346,638,528,859,811,704,183,484,516,925,440).</source>
          <target state="translated">&lt;code&gt;maxValue&lt;/code&gt; 의 기본값 은 최대 양의 단 정밀도 부동 소수점 값 (+340,282,346,638,528,859,811,704,183,484,516,925,440)입니다.</target>
        </trans-unit>
        <trans-unit id="8d86eacf5846cfa607c52f5255004d3db8fc1258" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;minValue&lt;/code&gt; is the minimum negative single-precision floating-point value (-340,282,346,638,528,859,811,704,183,484,516,925,440), and the default value of &lt;code&gt;maxValue&lt;/code&gt; is the maximum positive single-precision floating-point value (+340,282,346,638,528,859,811,704,183,484,516,925,440).</source>
          <target state="translated">&lt;code&gt;minValue&lt;/code&gt; 의 기본값 은 최소 음의 단 정밀도 부동 소수점 값 (-340,282,346,638,528,859,811,704,183,484,516,925,440)이고 &lt;code&gt;maxValue&lt;/code&gt; 의 기본값 은 최대 양의 단 정밀도 부동 소수점 값 (+340,282,346,638,528,859,811,704,183,484,440)입니다.</target>
        </trans-unit>
        <trans-unit id="98bf7c9245fbed8579b5e4f1daffa4c4fe02a167" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;minValue&lt;/code&gt; is the minimum negative single-precision floating-point value (-340,282,346,638,528,859,811,704,183,484,516,925,440).</source>
          <target state="translated">&lt;code&gt;minValue&lt;/code&gt; 의 기본값 은 최소 음의 단일 정밀도 부동 소수점 값 (-340,282,346,638,528,859,811,704,183,484,516,925,440)입니다.</target>
        </trans-unit>
        <trans-unit id="08942b051ab57c6e635a0411372620fad2299b6f" translate="yes" xml:space="preserve">
          <source>The default value of the position vector is &lt;code&gt;(0,&lt;/code&gt;&lt;code&gt;0,&lt;/code&gt;&lt;code&gt;0)&lt;/code&gt;.</source>
          <target state="translated">위치 벡터의 기본값은 &lt;code&gt;(0,&lt;/code&gt; &lt;code&gt;0,&lt;/code&gt; &lt;code&gt;0)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d209c571b196da83aeafa72352c7b933f0a3b541" translate="yes" xml:space="preserve">
          <source>The default value when the effect has not been set, equivalent to all.</source>
          <target state="translated">효과가 설정되지 않은 경우 기본값은 모두와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="dc5151a2aa41524525b0b025a5761ab4baf2d29c" translate="yes" xml:space="preserve">
          <source>The default values for these properties will differ slightly by VR hardware, although they tend to be around 53&amp;deg; up and down, and 47&amp;deg; left and right, with zNear and zFar coming in at around 0.1m and 10000m respectively.</source>
          <target state="translated">이러한 속성의 기본값은 VR 하드웨어에 따라 약간 씩 다르지만 zNear 및 zFar는 각각 약 0.1m 및 10000m에 있으며 위아래로 약 53 &amp;deg;, 왼쪽 및 오른쪽으로 47 &amp;deg;입니다.</target>
        </trans-unit>
        <trans-unit id="1bd923aa6f52c36303f56ec79079058d511f458f" translate="yes" xml:space="preserve">
          <source>The degree of intersection between the target element and its root is the &lt;strong&gt;intersection ratio&lt;/strong&gt;. This is a representation of the percentage of the target element which is visible as a value between 0.0 and 1.0.</source>
          <target state="translated">대상 요소와 루트 간의 교차 정도는 &lt;strong&gt;교차 비율&lt;/strong&gt; 입니다. 0.0과 1.0 사이의 값으로 표시되는 대상 요소의 백분율을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0d8a1aed54585a7063e1958f05b21cb44c116d9" translate="yes" xml:space="preserve">
          <source>The delta values are specified in lines.</source>
          <target state="translated">델타 값은 행으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="927ddf0d6bcd9d720c1a9b3ea1a53fcb19dc85dd" translate="yes" xml:space="preserve">
          <source>The delta values are specified in pages.</source>
          <target state="translated">델타 값은 페이지에 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7930b50f825452a3f26d0dd0bdac0ce651bb539a" translate="yes" xml:space="preserve">
          <source>The delta values are specified in pixels.</source>
          <target state="translated">델타 값은 픽셀로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="b9d04931eb57e4e9b68345b5df4ff7bd4684326c" translate="yes" xml:space="preserve">
          <source>The dependent feature is currently under revision to be removed (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=214867&quot;&gt;bug 214867&lt;/a&gt;)</source>
          <target state="translated">종속 기능이 현재 수정 될 예정입니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=214867&quot;&gt;버그 214867&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d9acc65fafe02c34a460af6d5498d7aa363e5e5" translate="yes" xml:space="preserve">
          <source>The deprecated (and never part of the official specification) read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; returns an ID number (between 0 and 65,535) which uniquely identifies the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;. This ID is set at the time the data channel is created, either by the user agent (if &lt;a href=&quot;negotiated&quot;&gt;&lt;code&gt;RTCDataChannel.negotiated&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;) or by the site or app script (if &lt;code&gt;negotiated&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">더 이상 사용되지 않으며 (공식 사양의 일부는 아님) 읽기 전용 &lt;code&gt;RTCDataChannel&lt;/code&gt; 속성 &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; 은 RTCDataChannel 을 고유하게 식별하는 ID 번호 (0과 65,535 사이)를 &lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt; 합니다. 이 ID는 사용자 에이전트 ( &lt;a href=&quot;negotiated&quot;&gt; &lt;code&gt;RTCDataChannel.negotiated&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;false&lt;/code&gt; 인 경우 ) 또는 사이트 또는 앱 스크립트 ( &lt;code&gt;negotiated&lt;/code&gt; 경우 &lt;code&gt;true&lt;/code&gt; ) 가 데이터 채널을 작성할 때 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb9855febbb203a8bb04753026f933a2b3e4ffbd" translate="yes" xml:space="preserve">
          <source>The deprecated (and never part of the official specification) read-only &lt;code&gt;RTCDataChannel&lt;/code&gt; property &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; returns an ID number (between 0 and 65,535) which uniquely identifies the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">더 이상 사용되지 않으며 (공식 사양의 일부는 아님) 읽기 전용 &lt;code&gt;RTCDataChannel&lt;/code&gt; 속성 &lt;code&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/code&gt; 은 RTCDataChannel 을 고유하게 식별하는 ID 번호 (0과 65,535 사이)를 &lt;a href=&quot;rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8f4108f70334f5ce69da8fc05802f66fdafa886c" translate="yes" xml:space="preserve">
          <source>The deprecated &lt;a href=&quot;../blobbuilder&quot;&gt;&lt;code&gt;BlobBuilder&lt;/code&gt;&lt;/a&gt; which this constructor replaces.</source>
          <target state="translated">이 생성자가 대체하는 더 이상 사용되지 않는 &lt;a href=&quot;../blobbuilder&quot;&gt; &lt;code&gt;BlobBuilder&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4ce83baf8edb87e8ec6f56628860b0ea566f03b4" translate="yes" xml:space="preserve">
          <source>The depth testing is disabled by default. To enable or disable depth testing, use the &lt;a href=&quot;enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;disable&quot;&gt;&lt;code&gt;disable()&lt;/code&gt;&lt;/a&gt; methods with the argument &lt;code&gt;gl.DEPTH_TEST&lt;/code&gt;.</source>
          <target state="translated">심도 테스트는 기본적으로 비활성화되어 있습니다. 깊이 테스트를 활성화 또는 비활성화하려면 &lt;code&gt;gl.DEPTH_TEST&lt;/code&gt; 인수와 함께 &lt;a href=&quot;enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;disable&quot;&gt; &lt;code&gt;disable()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="54fefc2cd758c1fa84f84e7500d77077dee1fd1e" translate="yes" xml:space="preserve">
          <source>The description for the database.</source>
          <target state="translated">데이터베이스에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="96357666ba5d23345884aad9033f4a52b02be802" translate="yes" xml:space="preserve">
          <source>The desired sample rate for the &lt;code&gt;AudioContext&lt;/code&gt;, specified in samples per second. The value must be compatible with &lt;a href=&quot;../audiobuffer/samplerate&quot;&gt;&lt;code&gt;AudioBuffer.sampleRate&lt;/code&gt;&lt;/a&gt;. This value should typically be between 8,000 Hz and 96,000 Hz; the default will vary depending on the output device, but the sample rate 44,100 Hz is the most common.</source>
          <target state="translated">&lt;code&gt;AudioContext&lt;/code&gt; 에 대한 원하는 샘플 속도로, 초당 샘플 수로 지정됩니다. 값은 &lt;a href=&quot;../audiobuffer/samplerate&quot;&gt; &lt;code&gt;AudioBuffer.sampleRate&lt;/code&gt; &lt;/a&gt; 와 호환 가능해야합니다 . 이 값은 일반적으로 8,000Hz와 96,000Hz 사이 여야합니다. 기본값은 출력 장치에 따라 다르지만 샘플 속도 44,100 Hz가 가장 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="d37c4a2abdadfea85d743b512db3c6d26bcb6169" translate="yes" xml:space="preserve">
          <source>The desired subtree is located by finding an element with the ID &quot;someElement&quot;. A set of options for the observer is also established in the &lt;code&gt;observerOptions&lt;/code&gt; record. In it, we specify values of &lt;code&gt;true&lt;/code&gt; for both &lt;code&gt;childList&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt;, so we get the information we want.</source>
          <target state="translated">원하는 서브 트리는 ID가 &quot;someElement&quot;인 요소를 찾아서 찾습니다. 관찰자에 대한 일련의 옵션도에 설립 &lt;code&gt;observerOptions&lt;/code&gt; 기록. 여기에서 &lt;code&gt;childList&lt;/code&gt; 및 &lt;code&gt;attributes&lt;/code&gt; 모두 에 &lt;code&gt;true&lt;/code&gt; 값을 지정 하여 원하는 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e84db4c70642021b976272b8acd7797028a3001f" translate="yes" xml:space="preserve">
          <source>The destination node is not part of the same audio context as the source node.</source>
          <target state="translated">대상 노드가 소스 노드와 동일한 오디오 컨텍스트의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="bc54a67155ab62dac9044264330e7b3c27bddcf9" translate="yes" xml:space="preserve">
          <source>The developer-defined identifier for this &lt;code&gt;SyncEvent&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;SyncEvent&lt;/code&gt; 의 개발자 정의 식별자입니다 .</target>
        </trans-unit>
        <trans-unit id="9eeebf89ba90b43f3839ab3a37b36c359fd0a883" translate="yes" xml:space="preserve">
          <source>The device-specific index of the currently-claimed interface.</source>
          <target state="translated">현재 확인 된 인터페이스의 장치 별 색인입니다.</target>
        </trans-unit>
        <trans-unit id="4ca6fd89e4c223f77cf2a8c91044bd8bf4e7df99" translate="yes" xml:space="preserve">
          <source>The diagram below shows how this works; an input value, &lt;code&gt;N&lt;/code&gt;, is set as the value of the &lt;a href=&quot;../constantsourcenode/offset&quot;&gt;&lt;code&gt;ConstantSourceNode.offset&lt;/code&gt;&lt;/a&gt; property. The &lt;code&gt;ConstantSourceNode&lt;/code&gt; can have as many outputs as necessary; in this case, we've connected it to three nodes: two &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;s and a &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt;. So &lt;code&gt;N&lt;/code&gt; becomes the value of the specified parameter (&lt;a href=&quot;../gainnode/gain&quot;&gt;&lt;code&gt;gain&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;s and pan for the &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">아래 다이어그램은 이것이 어떻게 작동하는지 보여줍니다. 입력 값 &lt;code&gt;N&lt;/code&gt; 은 &lt;a href=&quot;../constantsourcenode/offset&quot;&gt; &lt;code&gt;ConstantSourceNode.offset&lt;/code&gt; &lt;/a&gt; 속성 값으로 설정됩니다 . &lt;code&gt;ConstantSourceNode&lt;/code&gt; 는 필요한만큼의 출력을 가질 수있다; 이 :이 경우, 우리는 세 개의 노드에 연결 한 &lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt; 들과 &lt;a href=&quot;../stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; &lt;/a&gt; . 그래서 &lt;code&gt;N&lt;/code&gt; 은 지정된 파라미터의 값 (된다 &lt;a href=&quot;../gainnode/gain&quot;&gt; &lt;code&gt;gain&lt;/code&gt; &lt;/a&gt; 위한 &lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt; S 및 납작 &lt;a href=&quot;../stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a48150c1d7914c664a8364a0cde7487e6e02777" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;set&quot;&gt;&lt;code&gt;FormData.set&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;append()&lt;/code&gt; is that if the specified key already exists, &lt;a href=&quot;set&quot;&gt;&lt;code&gt;FormData.set&lt;/code&gt;&lt;/a&gt; will overwrite all existing values with the new one, whereas &lt;code&gt;append()&lt;/code&gt; will append the new value onto the end of the existing set of values.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;FormData.set&lt;/code&gt; &lt;/a&gt; 과 &lt;code&gt;append()&lt;/code&gt; 의 차이점 은 지정된 키가 이미 존재하면 &lt;a href=&quot;set&quot;&gt; &lt;code&gt;FormData.set&lt;/code&gt; &lt;/a&gt; 은 기존 값을 모두 새 값으로 덮어 쓰지만 &lt;code&gt;append()&lt;/code&gt; 는 기존 값 세트의 끝에 새 값을 추가한다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="3b47f59354ed1cc1cc4b6c5d0acd76fc23ea29fa" translate="yes" xml:space="preserve">
          <source>The difference between &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Headers.set&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;append()&lt;/code&gt; is that if the specified header already exists and accepts multiple values, &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Headers.set&lt;/code&gt;&lt;/a&gt; will overwrite the existing value with the new one, whereas &lt;code&gt;append()&lt;/code&gt; will append the new value onto the end of the set of values.</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Headers.set&lt;/code&gt; &lt;/a&gt; 과 &lt;code&gt;append()&lt;/code&gt; 의 차이점 은 지정된 헤더가 이미 존재하고 여러 값을 허용하는 경우 &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Headers.set&lt;/code&gt; &lt;/a&gt; 은 기존 값을 새 값으로 겹쳐 쓰지만 &lt;code&gt;append()&lt;/code&gt; 는 새 값을 끝에 추가한다는 것입니다. 값 집합.</target>
        </trans-unit>
        <trans-unit id="72af720be29d1fe39fab72cff2dbe7eabbb192a1" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;set()&lt;/code&gt; and &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt; is that if the specified key does already exist, &lt;code&gt;set()&lt;/code&gt; will overwrite all existing values with the new one, whereas &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt; will append the new value onto the end of the existing set of values.</source>
          <target state="translated">&lt;code&gt;set()&lt;/code&gt; 과 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt; 의 차이점 은 지정된 키가 이미 존재하면 &lt;code&gt;set()&lt;/code&gt; 은 기존 값을 모두 새 값으로 겹쳐 쓰는 반면 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt; 는 기존 값 세트의 끝에 새 값을 추가한다는 것입니다. 가치.</target>
        </trans-unit>
        <trans-unit id="4115e568023227c1974dad2ab8b668737a50fdfd" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;set()&lt;/code&gt; and &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt; is that if the specified header already exists and accepts multiple values, &lt;code&gt;set()&lt;/code&gt; overwrites the existing value with the new one, whereas &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt; appends the new value to the end of the set of values.</source>
          <target state="translated">차이 &lt;code&gt;set()&lt;/code&gt; 하고 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; 가&lt;/a&gt; 지정한 헤더가 이미 존재하는 여러 값을 수락하는 경우이다 &lt;code&gt;set()&lt;/code&gt; 있는 반면, 새로운 하나 기존 값을 덮어 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; 이&lt;/a&gt; 세트의 마지막에 새로운 값을 추가 가치.</target>
        </trans-unit>
        <trans-unit id="369cc70618862397f2c59dfcdfbedd0115c5c9f8" translate="yes" xml:space="preserve">
          <source>The difference between these can best be described using the image on the right. A quadratic B&amp;eacute;zier curve has a start and an end point (blue dots) and just one &lt;strong&gt;control point&lt;/strong&gt; (indicated by the red dot) while a cubic B&amp;eacute;zier curve uses two control points.</source>
          <target state="translated">이들의 차이점은 오른쪽 이미지를 사용하여 가장 잘 설명 할 수 있습니다. 2 차 베 지어 곡선에는 시작점과 끝점 (파란색 점)과 단 하나의 &lt;strong&gt;제어점&lt;/strong&gt; (빨간색 점으로 표시)이 있으며, 3 차 베 지어 곡선에는 두 개의 제어점이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8dabd892711f4a0c0b9a61364b3f35b706c54d31" translate="yes" xml:space="preserve">
          <source>The difference is that when close is called, any previously enqueued chunks are written and finished with before the stream is closed.</source>
          <target state="translated">차이점은 close가 호출 될 때 스트림을 닫기 전에 이전에 대기중인 청크를 작성하고 완료한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bf21b6dec33c78a626e94c05893de32d81d91102" translate="yes" xml:space="preserve">
          <source>The digits 0-9</source>
          <target state="translated">숫자 0-9</target>
        </trans-unit>
        <trans-unit id="7d15e4d4459a52e8eb9c4e961fea8a1356256348" translate="yes" xml:space="preserve">
          <source>The directory and/or its contents may not be safe to access from a Web application.</source>
          <target state="translated">웹 응용 프로그램에서 디렉토리 및 / 또는 그 내용을 액세스하는 것이 안전하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03af1990a2cd1675a38597e00bc093d378aa25ae" translate="yes" xml:space="preserve">
          <source>The directory could not be removed for security reasons. Possible reasons include:</source>
          <target state="translated">보안상의 이유로 디렉토리를 제거 할 수 없습니다. 가능한 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7e5b4dd17df3f66abf7cac3e3000cadae315f097" translate="yes" xml:space="preserve">
          <source>The directory is not accessible; perhaps it's in use by another application or is locked at the operating system level.</source>
          <target state="translated">디렉토리에 액세스 할 수 없습니다. 다른 응용 프로그램에서 사용 중이거나 운영 체제 수준에서 잠겨있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2581231a1f550a1adb94b3530990d20d03277e50" translate="yes" xml:space="preserve">
          <source>The directory represented by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; no longer exists.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; 로&lt;/a&gt; 표시되는 디렉토리 가 더 이상 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9331ca3a8a59cb4899781eca75c7ca1914a1b5c5" translate="yes" xml:space="preserve">
          <source>The disconnected state</source>
          <target state="translated">연결이 끊긴 상태</target>
        </trans-unit>
        <trans-unit id="cb2c251d64a14d95703ae11a936de5a7d7dbf217" translate="yes" xml:space="preserve">
          <source>The disk or quota limit has been reached.</source>
          <target state="translated">디스크 또는 할당량 한도에 도달했습니다.</target>
        </trans-unit>
        <trans-unit id="33551bc2201d7496ab062237c73ae61e0d81eddf" translate="yes" xml:space="preserve">
          <source>The dispatched &lt;code&gt;hashchange&lt;/code&gt; event has the following fields:</source>
          <target state="translated">전달 된 &lt;code&gt;hashchange&lt;/code&gt; 이벤트에는 다음 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c793bd9015083bd55061a660dc4c6b60a06e30e" translate="yes" xml:space="preserve">
          <source>The dispatched event</source>
          <target state="translated">파견 된 이벤트</target>
        </trans-unit>
        <trans-unit id="93fece427eb94d9310d0bbea9b41f7637f2d5332" translate="yes" xml:space="preserve">
          <source>The distance from the eyes of the farthest point of the view. The furthest away things can be and still be in the view. If not specified, the default is used &amp;mdash; &lt;code&gt;10000.0&lt;/code&gt;.</source>
          <target state="translated">뷰에서 가장 먼 지점의 눈으로부터의 거리입니다. 가장 먼 곳은 여전히 ​​시야에있을 수 있습니다. 지정하지 않으면 기본값은 &lt;code&gt;10000.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1b8231a59a601000ceb0e5eaaf80f5090800c8b9" translate="yes" xml:space="preserve">
          <source>The distance from the eyes of the nearest point of the view. The closest things can be and still be in the view. If not specified, the default is used &amp;mdash; &lt;code&gt;0.01&lt;/code&gt;.</source>
          <target state="translated">뷰에서 가장 가까운 지점의 눈으로부터의 거리입니다. 가장 가까운 것들이 여전히 시야에있을 수 있습니다. 지정하지 않으면 기본값은 &lt;code&gt;0.01&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83aa59484c3af523a7be00d766fb07a503b2eedf" translate="yes" xml:space="preserve">
          <source>The document and all sub-resources have finished loading. The state indicates that the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event is about to fire.</source>
          <target state="translated">문서 및 모든 하위 자원의로드가 완료되었습니다. 상태는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트가 시작되고 있음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="034ff8f4b53af08bb2a0e6596c027c8329f51f63" translate="yes" xml:space="preserve">
          <source>The document containing the element isn't fully active; that is, it's not the current active document.</source>
          <target state="translated">요소가 포함 된 문서가 완전히 활성화되지 않았습니다. 즉, 현재 활성 문서가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="88c65a03e1d9f8218671d8636bbe4289709f7fc9" translate="yes" xml:space="preserve">
          <source>The document content</source>
          <target state="translated">문서 내용</target>
        </trans-unit>
        <trans-unit id="85f2a78b4555499118caae8742ac93dd934f82fc" translate="yes" xml:space="preserve">
          <source>The document has finished loading and the document has been parsed but sub-resources such as images, stylesheets and frames are still loading.</source>
          <target state="translated">문서가로드되고 문서가 구문 분석되었지만 이미지, 스타일 시트 및 프레임과 같은 하위 자원이 계속로드됩니다.</target>
        </trans-unit>
        <trans-unit id="56385fa6dffb5ff4dd8d06888f4412b7bae8ddb1" translate="yes" xml:space="preserve">
          <source>The document in which the payment request is taking place became inactive while the user interface was shown.</source>
          <target state="translated">사용자 인터페이스가 표시되는 동안 지불 요청이 발생한 문서가 비활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="171c6717e8f0310a3fb5cb57857ec159d2d89b0e" translate="yes" xml:space="preserve">
          <source>The document object's &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-active-sandboxing-flag-set&quot;&gt;active sandboxing flag set&lt;/a&gt; has the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#sandboxed-presentation-browsing-context-flag&quot;&gt;sandboxed presentation browsing context flag&lt;/a&gt; set.</source>
          <target state="translated">문서 객체의 &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-active-sandboxing-flag-set&quot;&gt;활성 샌드 박싱 플래그 세트&lt;/a&gt; 에는 &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#sandboxed-presentation-browsing-context-flag&quot;&gt;샌드 박스 프레젠테이션 브라우징 컨텍스트 플래그&lt;/a&gt; 세트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="98ed1f6d85ca9d2e6d5aab46590739d48043247c" translate="yes" xml:space="preserve">
          <source>The document text, in the default style, is rendered as the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</source>
          <target state="translated">기본 스타일의 문서 텍스트는 클라이언트 브라우저가 지원하는 첫 번째 글꼴로 렌더링됩니다. 로컬 시스템에 나열된 글꼴이 없으면 브라우저는 일반적으로 해당 시스템의 비례 또는 고정 너비 글꼴로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1a10ab96a0a1077cfd7ee9a8723eff3260f87ac0" translate="yes" xml:space="preserve">
          <source>The document's address.</source>
          <target state="translated">문서의 주소.</target>
        </trans-unit>
        <trans-unit id="798c2b9d9500fee1da194e6939d974012e5ad1b8" translate="yes" xml:space="preserve">
          <source>The domain portion of the current document's origin.</source>
          <target state="translated">현재 문서 원본의 도메인 부분.</target>
        </trans-unit>
        <trans-unit id="288f488b5bdf835f17adcd697075c1c9eefd5b4b" translate="yes" xml:space="preserve">
          <source>The drag data item's string data.</source>
          <target state="translated">드래그 데이터 아이템의 문자열 데이터.</target>
        </trans-unit>
        <trans-unit id="a013c066ba69320c4e342d8ec6ae150d0f0b6fae" translate="yes" xml:space="preserve">
          <source>The drag data item's type, typically a MIME type.</source>
          <target state="translated">드래그 데이터 아이템의 타입, 일반적으로 MIME 타입.</target>
        </trans-unit>
        <trans-unit id="1b34b2feb8735721b67afbb41abaabb3b63c4c54" translate="yes" xml:space="preserve">
          <source>The drag data store in which this list is kept is only writable while handling the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event. While handling &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;, the drag data store is in read-only mode, and this method silently does nothing. No exception is thrown.</source>
          <target state="translated">이 목록이 유지되는 드래그 데이터 저장소는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; 이벤트 를 처리하는 동안에 만 쓰기 가능 합니다. &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 을 처리하는 동안 드래그 데이터 저장소는 읽기 전용 모드이며이 메소드는 자동으로 아무 작업도 수행하지 않습니다. 예외는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fda22035918e10aad48a3b4e5d97020dffd65cf0" translate="yes" xml:space="preserve">
          <source>The drag data store is not in read/write mode, so the item can't be removed.</source>
          <target state="translated">드래그 데이터 저장소가 읽기 / 쓰기 모드가 아니므로 항목을 제거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a69fd93edaf850f7dcf0eb001a2435bce14623a8" translate="yes" xml:space="preserve">
          <source>The drag operations described in this document use the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; interface. This document does &lt;em&gt;not&lt;/em&gt; use the &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; interface nor the &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 문서에서 설명하는 드래그 작업은 &lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt; 인터페이스를 사용합니다 . 이 문서는 않습니다 &lt;em&gt;하지&lt;/em&gt; 사용 &lt;a href=&quot;../datatransferitem&quot;&gt; &lt;code&gt;DataTransferItem&lt;/code&gt; 의&lt;/a&gt; 인터페이스 나 &lt;a href=&quot;../datatransferitemlist&quot;&gt; &lt;code&gt;DataTransferItemList&lt;/code&gt; 의&lt;/a&gt; 인터페이스를.</target>
        </trans-unit>
        <trans-unit id="6e99b41ccb13271a4d79bc649bd34a2ad83b1836" translate="yes" xml:space="preserve">
          <source>The drag processing described in this document use the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; interface. This processing does &lt;em&gt;not&lt;/em&gt; use the &lt;a href=&quot;../datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; interface nor the &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 문서에서 설명하는 드래그 처리는 &lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt; 인터페이스를 사용합니다 . 이 처리는 않습니다 &lt;em&gt;하지&lt;/em&gt; 사용 &lt;a href=&quot;../datatransferitem&quot;&gt; &lt;code&gt;DataTransferItem&lt;/code&gt; 의&lt;/a&gt; 인터페이스 나 &lt;a href=&quot;../datatransferitemlist&quot;&gt; &lt;code&gt;DataTransferItemList&lt;/code&gt; 의&lt;/a&gt; 인터페이스를.</target>
        </trans-unit>
        <trans-unit id="1aa3e29e6d2814254066e60adeb061224f4ecc51" translate="yes" xml:space="preserve">
          <source>The drawing state</source>
          <target state="translated">드로잉 상태</target>
        </trans-unit>
        <trans-unit id="391db4f15b425b6c30383c8bc11d64a129259529" translate="yes" xml:space="preserve">
          <source>The drawing state that gets saved onto a stack consists of:</source>
          <target state="translated">스택에 저장되는 그리기 상태는 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="1debe0692dc840ab083bf2aa1799e34a607d3d53" translate="yes" xml:space="preserve">
          <source>The duplicate node returned by &lt;code&gt;cloneNode()&lt;/code&gt; is not part of the document until it is added to another node that is part of the document using &lt;a href=&quot;appendchild&quot;&gt;&lt;code&gt;Node.appendChild()&lt;/code&gt;&lt;/a&gt; or a similar method. It also has no parent until it is appended to another node.</source>
          <target state="translated">&lt;code&gt;cloneNode()&lt;/code&gt; 의해 리턴 된 중복 노드는 &lt;a href=&quot;appendchild&quot;&gt; &lt;code&gt;Node.appendChild()&lt;/code&gt; &lt;/a&gt; 또는 유사한 메소드를 사용하여 문서의 일부인 다른 노드에 추가 될 때까지 문서의 일부가 아닙니다 . 또한 다른 노드에 추가 될 때까지 부모가 없습니다.</target>
        </trans-unit>
        <trans-unit id="99986d15171171f818ff13b7d0db73d6e060c63e" translate="yes" xml:space="preserve">
          <source>The duration of the sound to be played, specified in seconds. If this parameter isn't specified, the sound plays until it reaches its natural conclusion or is stopped using the &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; method. Using this parameter is functionally identical to calling &lt;code&gt;start(when, offset)&lt;/code&gt; and then calling &lt;code&gt;stop(when+duration)&lt;/code&gt;.</source>
          <target state="translated">재생할 사운드 지속 시간 (초)입니다. 이 매개 변수를 지정하지 않으면 사운드는 자연스러운 결론에 도달하거나 &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 중지 될 때까지 재생 됩니다. 이 매개 변수를 사용하는 것은 기능적으로 &lt;code&gt;start(when, offset)&lt;/code&gt; 호출 후 &lt;code&gt;stop(when+duration)&lt;/code&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1ea6dd3ee8d7d180b98068fd0bb58ece5c447685" translate="yes" xml:space="preserve">
          <source>The easing to apply between keyframes can be specified by providing an &lt;code&gt;easing&lt;/code&gt; value as illustrated below.</source>
          <target state="translated">키 프레임 사이에 적용 할 &lt;code&gt;easing&lt;/code&gt; 는 아래 그림과 같이 여유 값을 제공하여 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c36c2d561e15721f7199c55cb6d8cd2bd3f88e12" translate="yes" xml:space="preserve">
          <source>The edge case</source>
          <target state="translated">가장자리 케이스</target>
        </trans-unit>
        <trans-unit id="ceca654f8b1fedab74ca304017d68f6bb4cc5957" translate="yes" xml:space="preserve">
          <source>The effect is clearly visible when using &lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt;&lt;code&gt;scissor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; to draw a square in the center of the canvas, by specifying its position and size in pixels. In the first canvas, we get the desired result. In the second, the square has the wrong shape, size, and position.</source>
          <target state="translated">&lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt; &lt;code&gt;scissor()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;webglrenderingcontext/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt; 를 사용하여 위치와 크기를 픽셀 단위로 지정하여 캔버스 중앙에 정사각형을 그릴 때 효과가 명확하게 나타납니다. 첫 번째 캔버스에서 원하는 결과를 얻습니다. 두 번째로, 사각형의 모양, 크기 및 위치가 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="a38c525acf6de8b697009e81e08a36abe2497efc" translate="yes" xml:space="preserve">
          <source>The element &lt;a href=&quot;../htmlelement/style&quot;&gt;&lt;code&gt;style&lt;/code&gt;&lt;/a&gt; property (see also the section &quot;DOM Style Object&quot; below) can also be used to get and set the styles on an element. However, this property only returns style attributes that have been set &lt;em&gt;in-line&lt;/em&gt; (e.g, &lt;code&gt;&amp;lt;td style=&quot;background-color: lightblue&quot;&amp;gt;&lt;/code&gt; returns the string &quot;&lt;code&gt;background-color:lightblue&lt;/code&gt;&quot;, or directly for that element using &lt;code&gt;element.style.propertyName&lt;/code&gt;, even though there may be other styles on the element from a stylesheet).</source>
          <target state="translated">요소 &lt;a href=&quot;../htmlelement/style&quot;&gt; &lt;code&gt;style&lt;/code&gt; &lt;/a&gt; 속성 (아래 &quot;DOM 스타일 개체&quot;섹션 참조)을 사용하여 요소의 스타일을 가져오고 설정할 수도 있습니다. 그러나이 속성은 &lt;em&gt;인라인&lt;/em&gt; 으로 설정된 스타일 속성 만 반환합니다 (예 : &lt;code&gt;&amp;lt;td style=&quot;background-color: lightblue&quot;&amp;gt;&lt;/code&gt; 는 &quot; &lt;code&gt;background-color:lightblue&lt;/code&gt; &quot; 문자열을 반환 하거나 &lt;code&gt;element.style.propertyName&lt;/code&gt; 사용하여 해당 요소에 대해 직접 반환합니다 . .propertyName ( 스타일 시트의 요소에 다른 스타일이있을 수 있음).</target>
        </trans-unit>
        <trans-unit id="2230adc9eaf1786683397ea1d15fff8eaf5cb88e" translate="yes" xml:space="preserve">
          <source>The element and its document are the same node.</source>
          <target state="translated">요소와 해당 문서는 동일한 노드입니다.</target>
        </trans-unit>
        <trans-unit id="a0a5d8c04b7b85bba7666924c0feadf666f087e1" translate="yes" xml:space="preserve">
          <source>The element goes into value mode when the contents of the &lt;code&gt;value&lt;/code&gt; property are set. The &lt;code&gt;value&lt;/code&gt; property otherwise behaves like the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; property. When the element is in value mode, the default value is accessible only through the &lt;code&gt;defaultValue&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 속성 의 내용 이 설정 되면 요소가 값 모드로 전환됩니다 . &lt;code&gt;value&lt;/code&gt; 속성은 그렇지처럼 동작 &lt;a href=&quot;node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt; 속성입니다. 요소가 값 모드 인 경우 &lt;code&gt;defaultValue&lt;/code&gt; 특성을 통해서만 기본값에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="726cda6fb64b42af7a567b884ae375b70db2fc05" translate="yes" xml:space="preserve">
          <source>The element holding the attribute.</source>
          <target state="translated">속성을 보유한 요소</target>
        </trans-unit>
        <trans-unit id="6882b0a115c5563d3e1f2aa7cc6b2f7936382c7e" translate="yes" xml:space="preserve">
          <source>The element is not contained by a document.</source>
          <target state="translated">요소가 문서에 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3835887cda98666beaa67e762f0e969fb5e4617a" translate="yes" xml:space="preserve">
          <source>The element is not permitted to use the &lt;code&gt;&quot;fullscreen&quot;&lt;/code&gt; feature, either because of Feature Policy configuration or other access control features.</source>
          <target state="translated">이 기능은 기능 정책 구성 또는 기타 액세스 제어 기능으로 인해 &lt;code&gt;&quot;fullscreen&quot;&lt;/code&gt; 기능 을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="03bae120200d5252afa6bd036c51e8427626bbb5" translate="yes" xml:space="preserve">
          <source>The element may not be scrolled completely to the top or bottom depending on the layout of other elements.</source>
          <target state="translated">다른 요소의 레이아웃에 따라 요소가 위쪽 또는 아래쪽으로 완전히 스크롤되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1925e40fbf4c25a60a28a354cae78328aa4addeb" translate="yes" xml:space="preserve">
          <source>The element may not be scrolled completely to the top or bottom, depending on the layout of other elements.</source>
          <target state="translated">다른 요소의 레이아웃에 따라 요소가 위쪽 또는 아래쪽으로 완전히 스크롤되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e6e42f89a20033a8fc6464aceefdc254e6f33ba" translate="yes" xml:space="preserve">
          <source>The element that is used as the viewport for checking visiblity of the target. Must be the ancestor of the target. Defaults to the browser viewport if not specified or if &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">대상의 가시성을 확인하기위한 뷰포트로 사용되는 요소입니다. 대상의 조상이어야합니다. 지정되지 않았거나 &lt;code&gt;null&lt;/code&gt; 인 경우 기본적으로 브라우저 뷰포트로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d01187a52f74b1a64fc391a719d1c12e8a912013" translate="yes" xml:space="preserve">
          <source>The element that was inserted, or &lt;code&gt;null&lt;/code&gt;, if the insertion failed.</source>
          <target state="translated">삽입 된 요소. 또는 삽입이 실패한 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b5dadbcc1e5deed214947b0e1b0b9a15b36d9ff" translate="yes" xml:space="preserve">
          <source>The element that's currently in full screen mode for this document.</source>
          <target state="translated">현재이 문서의 전체 화면 모드에있는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="48cf7a294542e36d54f76e3efa9a64ef66926e29" translate="yes" xml:space="preserve">
          <source>The element to be inserted into the tree.</source>
          <target state="translated">트리에 삽입 할 요소입니다.</target>
        </trans-unit>
        <trans-unit id="57266882c56c41949202acacd4c30dd306a64bad" translate="yes" xml:space="preserve">
          <source>The element to check whether it is focused or not.</source>
          <target state="translated">초점이 맞았는지 여부를 확인하는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="f6d3ce6143c18f6318f72b79d2a50a5d3c2ab10e" translate="yes" xml:space="preserve">
          <source>The element you are trying to attach to is already a shadow host.</source>
          <target state="translated">연결하려는 요소는 이미 섀도 호스트입니다.</target>
        </trans-unit>
        <trans-unit id="8a63d1d381c73831674e7632fa276542156e2195" translate="yes" xml:space="preserve">
          <source>The element's audio tracks are then scanned through using the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; method (although the &lt;a href=&quot;../htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;audioTracks&lt;/code&gt;&lt;/a&gt; property of a media element isn't actually a JavaScript array, it can be accessed like one for the most part).</source>
          <target state="translated">그런 다음 요소의 오디오 트랙은 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt; 메서드 를 사용하여 스캔됩니다 ( 미디어 요소 의 &lt;a href=&quot;../htmlmediaelement/audiotracks&quot;&gt; &lt;code&gt;audioTracks&lt;/code&gt; &lt;/a&gt; 속성은 실제로는 JavaScript 배열이 아니지만 대부분의 경우처럼 액세스 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="73fe352de67b1a5c61ffc87a5b95f726a109dea2" translate="yes" xml:space="preserve">
          <source>The elements belonging to this field set. The type of this property depends on the version of the spec that is implemented by the browser.</source>
          <target state="translated">이 필드 세트에 속하는 요소. 이 특성의 유형은 브라우저가 구현 한 스펙 버전에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c343e7815e70e2fa24f02342559d976ed9ee1e98" translate="yes" xml:space="preserve">
          <source>The elements properties returns an &lt;a href=&quot;htmlformcontrolscollection&quot;&gt;&lt;code&gt;HTMLFormControlsCollection&lt;/code&gt;&lt;/a&gt; instead of a raw &lt;a href=&quot;htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt;. This is mainly a technical change. The following method has been added: &lt;code&gt;checkValidity()&lt;/code&gt;. The following properties have been added: &lt;code&gt;autocomplete&lt;/code&gt;, &lt;code&gt;noValidate&lt;/code&gt;, and &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="translated">요소 속성은 원시 &lt;a href=&quot;htmlcollection&quot;&gt; &lt;code&gt;HTMLCollection&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;htmlformcontrolscollection&quot;&gt; &lt;code&gt;HTMLFormControlsCollection&lt;/code&gt; 을&lt;/a&gt; 반환합니다 . 이것은 주로 기술적 변화입니다. &lt;code&gt;checkValidity()&lt;/code&gt; 메소드가 추가되었습니다 . &lt;code&gt;autocomplete&lt;/code&gt; , &lt;code&gt;noValidate&lt;/code&gt; 및 &lt;code&gt;encoding&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f9576849387116d13de73da6773fdebec761e418" translate="yes" xml:space="preserve">
          <source>The elements which are included by &lt;code&gt;HTMLFormElement.elements&lt;/code&gt; and &lt;code&gt;HTMLFormElement.length&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;HTMLFormElement.elements&lt;/code&gt; 및 &lt;code&gt;HTMLFormElement.length&lt;/code&gt; 에 포함 된 요소 는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="038fbcc6991055e044b56d6700ed68b6a9094c75" translate="yes" xml:space="preserve">
          <source>The ellipse's major-axis radius. Must be non-negative.</source>
          <target state="translated">타원의 장축 반경입니다. 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="5e09f5508b6496b219b63b56715ad07daee738eb" translate="yes" xml:space="preserve">
          <source>The ellipse's minor-axis radius. Must be non-negative.</source>
          <target state="translated">타원의 보조 축 반경입니다. 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="a07352dfb71000fc17f79e87f630e37284604468" translate="yes" xml:space="preserve">
          <source>The embedded worker is now nested into a new custom &lt;code&gt;document.worker&lt;/code&gt; property.</source>
          <target state="translated">임베드 된 작업자는 이제 새 사용자 정의 &lt;code&gt;document.worker&lt;/code&gt; 속성에 중첩됩니다 .</target>
        </trans-unit>
        <trans-unit id="a1506c3ba865f18a6e5396d480f379988aa6f89c" translate="yes" xml:space="preserve">
          <source>The empty string</source>
          <target state="translated">빈 문자열</target>
        </trans-unit>
        <trans-unit id="5bf6d22713bb3baf8e65535dac9f19818721a3ea" translate="yes" xml:space="preserve">
          <source>The empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;)</source>
          <target state="translated">빈 문자열 ( &lt;code&gt;&quot;&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7e8f5760a22e16c2120219c908bdd89b47276c3a" translate="yes" xml:space="preserve">
          <source>The empty string is the default value of &lt;code&gt;destination&lt;/code&gt;. &lt;em&gt;What does it mean?&lt;/em&gt;</source>
          <target state="translated">빈 문자열은 &lt;code&gt;destination&lt;/code&gt; 의 기본값 입니다 . &lt;em&gt;무슨 뜻인가요?&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b2b2a843584cebc2c2e4fe1c9dcf3817abc6f72" translate="yes" xml:space="preserve">
          <source>The encoding or decoding operation failed (No legacy code value and constant name).</source>
          <target state="translated">인코딩 또는 디코딩 작업이 실패했습니다 (레거시 코드 값 및 상수 이름 없음).</target>
        </trans-unit>
        <trans-unit id="66368cab63ce34c6d2a7a4c550b6575908a2df90" translate="yes" xml:space="preserve">
          <source>The end of the seekable range to set in seconds measured from the beginning of the source. If the duration of the media source is positive infinity, then the &lt;a href=&quot;../timeranges&quot;&gt;&lt;code&gt;TimeRanges&lt;/code&gt;&lt;/a&gt; object returned by the &lt;a href=&quot;../htmlmediaelement/seekable&quot;&gt;&lt;code&gt;HTMLMediaElement.seekable&lt;/code&gt;&lt;/a&gt; property will have an end timestamp no less than this value.</source>
          <target state="translated">소스의 시작부터 측정 된 탐색 가능한 범위의 끝 (초)입니다. 미디어 소스의 지속 시간이 양의 무한대 인 경우 &lt;a href=&quot;../htmlmediaelement/seekable&quot;&gt; &lt;code&gt;HTMLMediaElement.seekable&lt;/code&gt; &lt;/a&gt; 속성에서 반환 된 &lt;a href=&quot;../timeranges&quot;&gt; &lt;code&gt;TimeRanges&lt;/code&gt; &lt;/a&gt; 객체 의 종료 타임 스탬프는이 값보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="1fd54f6dfa62e6e0d8c83111f94e9b1315644a45" translate="yes" xml:space="preserve">
          <source>The end time of the animation in milliseconds from the animation's start (if the &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt; is associated with an &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt;). (Also includes &lt;a href=&quot;../effecttiming/enddelay&quot;&gt;&lt;code&gt;EffectTiming.endDelay&lt;/code&gt;&lt;/a&gt; in that calculation.)</source>
          <target state="translated">애니메이션이 시작된 후 애니메이션의 종료 시간 (밀리 초)입니다 ( &lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffect&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;../animation&quot;&gt; &lt;code&gt;Animation&lt;/code&gt; &lt;/a&gt; 과 연결된 경우 ). 해당 계산에 &lt;a href=&quot;../effecttiming/enddelay&quot;&gt; &lt;code&gt;EffectTiming.endDelay&lt;/code&gt; &lt;/a&gt; 도 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="6ce9080bbd0720388d04e77db7152bf46eb1c951" translate="yes" xml:space="preserve">
          <source>The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.</source>
          <target state="translated">서버 장애로 인해 또는 브라우저가 연결을 연 페이지에서 브라우저를 탐색하여 엔드 포인트가 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="cc2e21c2768140f2a342a01112545534c98f1f74" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection because a data frame was received that is too large.</source>
          <target state="translated">너무 큰 데이터 프레임이 수신되었으므로 엔드 포인트가 연결을 종료하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe74cf3e4f563a749d1e026968f215bb333aac32" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).</source>
          <target state="translated">일치하지 않는 데이터 (예 : 텍스트 메시지 내의 비 UTF-8 데이터)가 포함 된 메시지가 수신되었으므로 엔드 포인트가 연결을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="a3391f58bb9350e1c72b28d0eaea0d9a9a5a1b9f" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.</source>
          <target state="translated">엔드 포인트가 정책을 위반하는 메시지를 수신했기 때문에 연결을 종료하고 있습니다. 이것은 코드 1003 및 1009가 적합하지 않을 때 사용되는 일반 상태 코드입니다.</target>
        </trans-unit>
        <trans-unit id="c48bdca4725363ecaffe97c6b9ecd829c2cd6152" translate="yes" xml:space="preserve">
          <source>The endpoint is terminating the connection due to a protocol error.</source>
          <target state="translated">프로토콜 오류로 인해 엔드 포인트가 연결을 종료하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="72f88e52a39b1d9214e289ffbb171fa3eb1ea67a" translate="yes" xml:space="preserve">
          <source>The endpoint takes the form of a custom URL pointing to a push server, which can be used to send a push message to the particular service worker instance that subscribed to the push service. For this reason, it is a good idea to keep your endpoint a secret, so others do not hijack it and abuse the push functionality.</source>
          <target state="translated">엔드 포인트는 푸시 서버를 가리키는 사용자 정의 URL 형식을 취하며, 이는 푸시 서비스에 가입 한 특정 서비스 워커 인스턴스에 푸시 메시지를 보내는 데 사용할 수 있습니다. 이러한 이유로 엔드 포인트를 비밀로 유지하는 것이 좋습니다. 따라서 다른 사람이 엔드 포인트를 가로 채서 푸시 기능을 남용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b9cc7a728887de3805969d4bb1f5ea61fe97b278" translate="yes" xml:space="preserve">
          <source>The ends of lines are rounded.</source>
          <target state="translated">선의 끝은 둥글다.</target>
        </trans-unit>
        <trans-unit id="9c40a63d672bcbba6fc6355e64ab3e78cabd9188" translate="yes" xml:space="preserve">
          <source>The ends of lines are squared off at the endpoints.</source>
          <target state="translated">선의 끝은 끝점에서 제곱됩니다.</target>
        </trans-unit>
        <trans-unit id="07b7f60971f0018ed0fee963d8387db77b0b3f91" translate="yes" xml:space="preserve">
          <source>The ends of lines are squared off at the endpoints. Default value.</source>
          <target state="translated">선의 끝은 끝점에서 제곱됩니다. 기본값.</target>
        </trans-unit>
        <trans-unit id="aba9d5d957f02159335dfd6c10e75abeed4a5e9d" translate="yes" xml:space="preserve">
          <source>The ends of lines are squared off by adding a box with an equal width and half the height of the line's thickness.</source>
          <target state="translated">선 두께의 너비와 높이가 같은 상자를 추가하여 선의 끝을 제곱합니다.</target>
        </trans-unit>
        <trans-unit id="e6bdf555a4f809d03783980554d6281fca259079" translate="yes" xml:space="preserve">
          <source>The entire exchange in a complicated diagram</source>
          <target state="translated">복잡한 다이어그램에서 전체 교환</target>
        </trans-unit>
        <trans-unit id="0021ea0dd58048d4d550b7190ae06c4102765fa3" translate="yes" xml:space="preserve">
          <source>The entire hierarchy counts</source>
          <target state="translated">전체 계층 수</target>
        </trans-unit>
        <trans-unit id="b14fbf4224667fbf0d50127b001983bd53365336" translate="yes" xml:space="preserve">
          <source>The entire read request has been completed.</source>
          <target state="translated">전체 읽기 요청이 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="7b7bbacb774adc666fb7e34454855f4d1e85e6ba" translate="yes" xml:space="preserve">
          <source>The entity name</source>
          <target state="translated">엔터티 이름</target>
        </trans-unit>
        <trans-unit id="aeafbe5b3438638f1ab5218a5ba8f2878d6898f2" translate="yes" xml:space="preserve">
          <source>The entry couldn't be removed due to permissions or other access constraints, or because there are too many calls being made on file resources.</source>
          <target state="translated">권한 또는 기타 액세스 제한으로 인해 또는 파일 자원에 대한 호출이 너무 많아 항목을 제거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="590d9e7505115b2fb6755515859cece7fbc90572" translate="yes" xml:space="preserve">
          <source>The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</source>
          <target state="translated">열거가 사전 정의 된 유형 중 하나가 아닌 값으로 설정되었습니다. 이 유형의 새 값을 정의하거나 기존 값을이 유형으로 전환하려고 시도하는 것은 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a66bd7791e62ded18713ccbd80305f061d4c4491" translate="yes" xml:space="preserve">
          <source>The equivalent of this element outside of frames: &lt;a href=&quot;htmlbodyelement&quot;&gt;&lt;code&gt;HTMLBodyElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 요소는 프레임 외부의 &lt;a href=&quot;htmlbodyelement&quot;&gt; &lt;code&gt;HTMLBodyElement&lt;/code&gt; 와 동일&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c85520e614e55e6129ff91f12f8f68ea58c42a73" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rel&quot;&gt;&lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmlareaelement/rel&quot;&gt;&lt;code&gt;HTMLAreaElement.rel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../htmlanchorelement/rel&quot;&gt; &lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../htmlareaelement/rel&quot;&gt; &lt;code&gt;HTMLAreaElement.rel&lt;/code&gt; &lt;/a&gt; 의 해당 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="fa093e10939d0ff93517eccd7872cd95bb69b27d" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt;&lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmlareaelement/rellist&quot;&gt;&lt;code&gt;HTMLAreaElement.relList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt; &lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../htmlareaelement/rellist&quot;&gt; &lt;code&gt;HTMLAreaElement.relList&lt;/code&gt; &lt;/a&gt; 의 동등한 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="3a08ce1d5b5708eb4a1087d0f3fca0b85369c0b1" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rel&quot;&gt;&lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rel&quot;&gt;&lt;code&gt;HTMLLinkElement.rel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">등가의 재산 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../htmlanchorelement/rel&quot;&gt; &lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../htmllinkelement/rel&quot;&gt; &lt;code&gt;HTMLLinkElement.rel&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a1856e12c8b0d00f618cf0ba72fa9efcaddc3ab" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt;&lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rellist&quot;&gt;&lt;code&gt;HTMLLinkElement.relList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../htmlanchorelement/rellist&quot;&gt; &lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../htmllinkelement/rellist&quot;&gt; &lt;code&gt;HTMLLinkElement.relList&lt;/code&gt; &lt;/a&gt; 의 동등한 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="56d2c23f9cda1bc3e034b14c5fade6bf650d77ba" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlareaelement/rel&quot;&gt;&lt;code&gt;HTMLAreaElement.rel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rel&quot;&gt;&lt;code&gt;HTMLLinkElement.rel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../htmlareaelement/rel&quot;&gt; &lt;code&gt;HTMLAreaElement.rel&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../htmllinkelement/rel&quot;&gt; &lt;code&gt;HTMLLinkElement.rel&lt;/code&gt; &lt;/a&gt; 의 해당 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="cc3fb443273be4c837972aa6ac77d91b176606b6" translate="yes" xml:space="preserve">
          <source>The equivalent property on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt;&lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../htmlareaelement/rellist&quot;&gt;&lt;code&gt;HTMLAreaElement.relList&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../htmllinkelement/rellist&quot;&gt;&lt;code&gt;HTMLLinkElement.relList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area&quot;&gt; &lt;code&gt;&amp;lt;area&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt; &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../htmlareaelement/rellist&quot;&gt; &lt;code&gt;HTMLAreaElement.relList&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../htmllinkelement/rellist&quot;&gt; &lt;code&gt;HTMLLinkElement.relList&lt;/code&gt; &lt;/a&gt; 의 동등한 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="ddeb03a2c0d9c5955fd031d2ef37c54485b14098" translate="yes" xml:space="preserve">
          <source>The error callback function, if provided when calling &lt;code&gt;getCurrentPosition()&lt;/code&gt; or &lt;code&gt;watchPosition()&lt;/code&gt;, expects a &lt;a href=&quot;positionerror&quot;&gt;PositionError&lt;/a&gt; object as its first parameter.</source>
          <target state="translated">&lt;code&gt;getCurrentPosition()&lt;/code&gt; 또는 &lt;code&gt;watchPosition()&lt;/code&gt; 호출 할 때 제공되는 오류 콜백 함수 는 &lt;a href=&quot;positionerror&quot;&gt;PositionError&lt;/a&gt; 객체를 첫 번째 매개 변수로 예상합니다 .</target>
        </trans-unit>
        <trans-unit id="b0bc55168632e2a1af048cb9e89962831a825ef9" translate="yes" xml:space="preserve">
          <source>The error callback is called if opening the stream doesn't work. This will happen for example if there's no compatible camera connected, or the user denied access.</source>
          <target state="translated">스트림 열기가 작동하지 않으면 오류 콜백이 호출됩니다. 예를 들어 호환되는 카메라가 연결되어 있지 않거나 사용자가 액세스를 거부 한 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9a356feae412db87505a1d3d41d10749c3ba6732" translate="yes" xml:space="preserve">
          <source>The error event has the following three fields that are of interest:</source>
          <target state="translated">오류 이벤트에는 다음과 같은 세 가지 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb2722be94ff4dc72dfe669bdaac42ebbf621af3" translate="yes" xml:space="preserve">
          <source>The error handler looks like this:</source>
          <target state="translated">오류 처리기는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="386509f8e36bcf1e978d02141cff25a5f1a1fef3" translate="yes" xml:space="preserve">
          <source>The error you want future interactions to fail with.</source>
          <target state="translated">향후 상호 작용에 실패하려는 오류입니다.</target>
        </trans-unit>
        <trans-unit id="5ce093e886808d68fc1ea2b94d4c872b60c0efd6" translate="yes" xml:space="preserve">
          <source>The event ID to set the &lt;a href=&quot;https://developer.mozilla.org/en/Server-sent_events/EventSource&quot;&gt;&lt;code&gt;EventSource&lt;/code&gt;&lt;/a&gt; object's last event ID value.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/Server-sent_events/EventSource&quot;&gt; &lt;code&gt;EventSource&lt;/code&gt; &lt;/a&gt; 객체의 마지막 이벤트 ID 값 을 설정하는 이벤트 ID입니다.</target>
        </trans-unit>
        <trans-unit id="03e8aa95e63a395f8bae26bc3a10a8292c799404" translate="yes" xml:space="preserve">
          <source>The event behavior depends on the specific platform. It will either behave like Windows or Mac depending on what the native event model does.</source>
          <target state="translated">이벤트 동작은 특정 플랫폼에 따라 다릅니다. 기본 이벤트 모델의 기능에 따라 Windows 또는 Mac처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d511d2ed879c97fdea062859c370d1074b482c0d" translate="yes" xml:space="preserve">
          <source>The event did not come directly from the user agent, but was instead dispatched by other code. another payment request is currently being processed, the current payment request is not currently being displayed to the user, or payment information is currently being updated.</source>
          <target state="translated">이벤트는 사용자 에이전트에서 직접 제공되지 않았지만 다른 코드에 의해 전달되었습니다. 다른 결제 요청이 현재 처리 중이거나 현재 결제 요청이 현재 사용자에게 표시되지 않거나 결제 정보가 현재 업데이트되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="93da8e098cb7af74118eb7922f56d76f01af2ac4" translate="yes" xml:space="preserve">
          <source>The event doesn't bubble and is cancelable; to prevent the default action from taking place, the worker can call the error event's &lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt; method.</source>
          <target state="translated">이벤트가 버블 링되지 않고 취소 가능합니다. 기본 작업이 수행되지 않도록 작업자는 오류 이벤트의 &lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b9f07d789dcf15c7fe78a00198b18abdc57b9ff" translate="yes" xml:space="preserve">
          <source>The event handler can determine the current state by calling the transport's &lt;a href=&quot;getselectedcandidatepair&quot;&gt;&lt;code&gt;getSelectedCandidatePair()&lt;/code&gt;&lt;/a&gt; method, which returns a &lt;a href=&quot;../rtcicecandidatepair&quot;&gt;&lt;code&gt;RTCIceCandidatePair&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../rtcicecandidatepair/local&quot;&gt;&lt;code&gt;RTCIceCandidatePair.local&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePair/global&quot;&gt;&lt;code&gt;RTCIceCandidatePair.global&lt;/code&gt;&lt;/a&gt; properties specify &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; objects describing the local and remote candidates that are currently being used.</source>
          <target state="translated">이벤트 핸들러는 전송의 &lt;a href=&quot;getselectedcandidatepair&quot;&gt; &lt;code&gt;getSelectedCandidatePair()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 현재 상태를 판별 할 수 있습니다.이 메소드 는 &lt;a href=&quot;../rtcicecandidatepair/local&quot;&gt; &lt;code&gt;RTCIceCandidatePair.local&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePair/global&quot;&gt; &lt;code&gt;RTCIceCandidatePair.global&lt;/code&gt; &lt;/a&gt; 특성 이 현재 사용중인 로컬 및 원격 후보를 설명하는 &lt;a href=&quot;../rtcicecandidate&quot;&gt; &lt;code&gt;RTCIceCandidate&lt;/code&gt; &lt;/a&gt; 오브젝트를 지정 하는 &lt;a href=&quot;../rtcicecandidatepair&quot;&gt; &lt;code&gt;RTCIceCandidatePair&lt;/code&gt; &lt;/a&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="71b16e9b37207b3e7272a3b9c02d2eae488fcaa1" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beginEvent&quot;&gt;beginEvent&lt;/a&gt;&lt;/code&gt; event .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beginEvent&quot;&gt;beginEvent&lt;/a&gt;&lt;/code&gt; 이벤트 의 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="5f4f73e3aebf9b6cfccb7a1872de96d6e8eb8d41" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicechange&quot;&gt;devicechange&lt;/a&gt;&lt;/code&gt; event. This event is delivered to the &lt;code&gt;MediaDevices&lt;/code&gt; object when a media input or output device is attached to or removed from the user's computer.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicechange&quot;&gt;devicechange&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 이벤트 핸들러입니다 . 이 이벤트는 미디어 입력 또는 출력 장치가 사용자 컴퓨터에 연결되거나 제거 될 때 &lt;code&gt;MediaDevices&lt;/code&gt; 개체 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="5040277582e03a1a8912d99a4f5a0ce7686bd381" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/endEvent&quot;&gt;endEvent&lt;/a&gt;&lt;/code&gt; event .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/endEvent&quot;&gt;endEvent&lt;/a&gt;&lt;/code&gt; 이벤트 의 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="166d09687fae3fb88b037364e25d12d4f374ae4b" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/enter&quot;&gt;enter&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/enter&quot;&gt;enter&lt;/a&gt;&lt;/code&gt; 이벤트 의 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="c083181e62a34007cc8c571ce82514923013269a" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="653b25354b112c64b13f157fc3f9d365bfadf319" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/repeatEvent&quot;&gt;repeatEvent&lt;/a&gt;&lt;/code&gt; event .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/repeatEvent&quot;&gt;repeatEvent&lt;/a&gt;&lt;/code&gt; 이벤트 의 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="91af9ea00dfe842e277105a44157f86a9b7557dd" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;abort&lt;/code&gt; event, fired when the transaction is aborted. This can happen due to:</source>
          <target state="translated">&lt;code&gt;abort&lt;/code&gt; 이벤트에 대한 이벤트 핸들러 는 트랜잭션이 중단되면 시작됩니다. 다음과 같은 이유로 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa9a07e6763ad20126aada1df275adf99c7f8ae1" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;addsourcebuffer&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;addsourcebuffer&lt;/code&gt; 이벤트에 대한 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="c995ef1762f6358e2c03aff83ffe7a713f877b51" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;complete&lt;/code&gt; event, thrown when the transaction completes successfully.</source>
          <target state="translated">트랜잭션이 성공적으로 완료되면 throw 되는 &lt;code&gt;complete&lt;/code&gt; 이벤트에 대한 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="aea0375fcc0739ced27a1401ded0ac46d8da7937" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;error&lt;/code&gt; event, thrown when the transaction fails to complete.</source>
          <target state="translated">트랜잭션이 완료되지 않으면 발생 하는 &lt;code&gt;error&lt;/code&gt; 이벤트 의 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="1adb42de0f4f7d68ca6998dd57b38f126ed038c5" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;removesourcebuffer&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;removesourcebuffer&lt;/code&gt; 이벤트에 대한 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="15d7fbc64f56b35632f931f620eba25e334aa737" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;sourceclose&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;sourceclose&lt;/code&gt; 이벤트 의 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="291058b107f22bd642f3123be1e7a51592f99ff7" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;sourceended&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;sourceended&lt;/code&gt; 이벤트에 대한 이벤트 핸들러 .</target>
        </trans-unit>
        <trans-unit id="f1dd1867f2830b0150299e9b4155f7c88a1220e4" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;sourceopen&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;sourceopen&lt;/code&gt; 이벤트 의 이벤트 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="a8b4c7bffaf3400a2dca09527b34005155c96f67" translate="yes" xml:space="preserve">
          <source>The event handler for the &lt;code&gt;upgradeneeded&lt;/code&gt; event, fired when a database of a bigger version number than the existing stored database is loaded.</source>
          <target state="translated">기존의 저장된 데이터베이스보다 큰 버전 번호의 데이터베이스가로드되면 &lt;code&gt;upgradeneeded&lt;/code&gt; 이벤트에 대한 이벤트 핸들러 가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="0e8039aced11b6fbc220df0b4d616ae7ee101eaf" translate="yes" xml:space="preserve">
          <source>The event handler for the blocked event.</source>
          <target state="translated">차단 된 이벤트에 대한 이벤트 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="9bff23c40b91e482f539c73950cafa28924eb130" translate="yes" xml:space="preserve">
          <source>The event handler for the blocked event. This event is triggered when the &lt;code&gt;upgradeneeded&lt;/code&gt; event should be triggered because of a version change but the database is still in use (i.e. not closed) somewhere, even after the &lt;code&gt;versionchange&lt;/code&gt; event was sent.</source>
          <target state="translated">차단 된 이벤트에 대한 이벤트 핸들러입니다. 이 이벤트는 버전 변경으로 인해 &lt;code&gt;upgradeneeded&lt;/code&gt; 이벤트가 트리거되어야하지만 &lt;code&gt;versionchange&lt;/code&gt; 이벤트가 전송 된 후에도 데이터베이스가 여전히 어딘가에서 사용 중이거나 닫히지 않을 때 트리거됩니다 .</target>
        </trans-unit>
        <trans-unit id="474e24637f0c7b170f692bdc37c79b796c698481" translate="yes" xml:space="preserve">
          <source>The event handler for the error event.</source>
          <target state="translated">오류 이벤트에 대한 이벤트 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="b12a9fcb953adc1ff46f112649eb68141ced8848" translate="yes" xml:space="preserve">
          <source>The event handler for the success event.</source>
          <target state="translated">성공 이벤트에 대한 이벤트 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="ee2e0c7d1c9168adbb72be87969cd134fa1bfc7d" translate="yes" xml:space="preserve">
          <source>The event handler function is a &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; object. Apart from the button(s) the event is fired on, the behaviour is exactly the same.</source>
          <target state="translated">이벤트 핸들러 함수는 &lt;a href=&quot;../mouseevent&quot;&gt; &lt;code&gt;MouseEvent&lt;/code&gt; &lt;/a&gt; 객체입니다. 이벤트가 발생하는 버튼 외에도 동작은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="377eba29fd6e2052b4c68c25f373ba946440db72" translate="yes" xml:space="preserve">
          <source>The event handler function to be registered.</source>
          <target state="translated">등록 할 이벤트 핸들러 기능.</target>
        </trans-unit>
        <trans-unit id="fdbdf60f3b9f1b22426face46c9a8058b6c48994" translate="yes" xml:space="preserve">
          <source>The event handler receives as its sole input an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object describing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/statechange&quot;&gt;statechange&lt;/a&gt;&lt;/code&gt; event which occurred. To determine the new state, examine the value of &lt;a href=&quot;state&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이벤트 핸들러는 발생한 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/statechange&quot;&gt;statechange&lt;/a&gt;&lt;/code&gt; 이벤트를 설명 하는 &lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 객체를 단독 입력으로받습니다 . 새로운 상태를 확인하려면 값 검사 &lt;a href=&quot;state&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d37ce8b3eabb565d31f262fde4f3d4563ec1847" translate="yes" xml:space="preserve">
          <source>The event handler takes one parameter, a success &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/success&quot;&gt;Event&lt;/a&gt; with type=&quot;success&quot;.</source>
          <target state="translated">이벤트 핸들러는 type = &quot;success&quot;인 성공 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/success&quot;&gt;이벤트&lt;/a&gt; 라는 하나의 매개 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="8ff7ee9251fcb0776d3e082247c74390f58de49b" translate="yes" xml:space="preserve">
          <source>The event handler takes one parameter, an error &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;Event&lt;/a&gt; with type=&quot;error&quot;.</source>
          <target state="translated">이벤트 핸들러는 type = &quot;error&quot; 인 error &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;Event&lt;/a&gt; 라는 하나의 매개 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="6923d47466cfda77238b4f540c7754d04cbf4118" translate="yes" xml:space="preserve">
          <source>The event handler that kicks everything off, of course, is the handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">물론 모든 것을 시작하는 이벤트 핸들러는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 이벤트 의 핸들러입니다 .</target>
        </trans-unit>
        <trans-unit id="49263a8901aa9cc0657885f3d9b5313cd1a359bd" translate="yes" xml:space="preserve">
          <source>The event handler uses the JavaScript &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt;instanceof&lt;/a&gt;&lt;/code&gt; operator to determine which type of track the event occurred on, then outputs to console a message indicating what kind of track it is and whether it's being added to or removed from the element.</source>
          <target state="translated">이벤트 핸들러는 JavaScript &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof&quot;&gt;instanceof&lt;/a&gt;&lt;/code&gt; 연산자를 사용하여 이벤트가 발생한 트랙 유형을 확인한 다음 트랙의 종류와 요소에 추가 또는 제거되고 있는지 여부를 나타내는 메시지를 콘솔에 출력합니다.</target>
        </trans-unit>
        <trans-unit id="012b99608104dc79662718480695b8f1a115baca" translate="yes" xml:space="preserve">
          <source>The event has arrived at &lt;a href=&quot;../eventtarget&quot;&gt;the event's target&lt;/a&gt;. Event listeners registered for this phase are called at this time. If &lt;a href=&quot;bubbles&quot;&gt;&lt;code&gt;Event.bubbles&lt;/code&gt;&lt;/a&gt; is false, processing the event is finished after this phase is complete.</source>
          <target state="translated">이벤트가 &lt;a href=&quot;../eventtarget&quot;&gt;이벤트 대상에&lt;/a&gt; 도착했습니다 . 이 단계에 등록 된 이벤트 리스너가 현재 호출됩니다. 경우 &lt;a href=&quot;bubbles&quot;&gt; &lt;code&gt;Event.bubbles&lt;/code&gt; 은&lt;/a&gt; 거짓, 이벤트를 처리하는이 단계가 완료되면 완성입니다.</target>
        </trans-unit>
        <trans-unit id="f6c6bbfdafa209797c365228853c93ace461e64c" translate="yes" xml:space="preserve">
          <source>The event is being propagated through the target's ancestor objects. This process starts with the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, then the &lt;a href=&quot;../htmlhtmlelement&quot;&gt;&lt;code&gt;HTMLHtmlElement&lt;/code&gt;&lt;/a&gt;, and so on through the elements until the target's parent is reached. &lt;a href=&quot;../eventlistener&quot;&gt;Event listeners&lt;/a&gt; registered for capture mode when &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt; was called are triggered during this phase.</source>
          <target state="translated">이벤트가 대상의 상위 개체를 통해 전파되고 있습니다. 이 프로세스 는 대상 부모에 도달 할 때까지 요소를 통해 &lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../htmlhtmlelement&quot;&gt; &lt;code&gt;HTMLHtmlElement&lt;/code&gt; &lt;/a&gt; 등으로 시작합니다 . &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 캡처 모드에 등록 된 &lt;a href=&quot;../eventlistener&quot;&gt;이벤트 리스너&lt;/a&gt; 는이 단계에서 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="32c28efe4407d8855023c0e7a9b138a6ce9a5841" translate="yes" xml:space="preserve">
          <source>The event is fired for all connections that are created when &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-monitoring-incoming-presentation-connections&quot;&gt;monitoring incoming presentation connections&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-monitoring-incoming-presentation-connections&quot;&gt;들어오는 프레젠테이션 연결을 모니터링&lt;/a&gt; 할 때 생성 된 모든 연결에 대해 이벤트가 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c6252a6f225cd48d15a933ca3c6b4199c527b71" translate="yes" xml:space="preserve">
          <source>The event is fired when a pointer becomes &lt;em&gt;active&lt;/em&gt;. For mouse, it is fired when the device transitions from no buttons depressed to at least one button depressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer.</source>
          <target state="translated">포인터가 &lt;em&gt;활성화&lt;/em&gt; 되면 이벤트가 시작됩니다 . 마우스의 경우 장치를 아무 버튼도 누르지 않은 상태에서 하나 이상의 버튼을 누른 상태로 전환하면 시작됩니다. 터치의 경우 디지타이저와 물리적 접촉 할 때 발생합니다. 펜의 경우 스타일러스가 디지타이저와 물리적으로 접촉하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="881127378492a3f198f3475b266aae8f0fd4e738" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object, whose &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property identifies the newly-added track.</source>
          <target state="translated">이벤트는 &lt;a href=&quot;../trackevent&quot;&gt; &lt;code&gt;TrackEvent&lt;/code&gt; &lt;/a&gt; 객체 의 형태로 이벤트 핸들러에 전달되며, &lt;a href=&quot;../trackevent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt; 속성은 새로 추가 된 트랙을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="d5d38a1f734b273d911dd6b95b97575a4a2dd558" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object, whose &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property identifies the track that was removed from the media element's &lt;code&gt;AudioTrackList&lt;/code&gt;.</source>
          <target state="translated">이벤트는 형태의 이벤트 핸들러에 전달 &lt;a href=&quot;../trackevent&quot;&gt; &lt;code&gt;TrackEvent&lt;/code&gt; 의&lt;/a&gt; 객체 &lt;a href=&quot;../trackevent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt; 속성을 식별 매체로부터 요소의 제거 된 트랙 &lt;code&gt;AudioTrackList&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="c2b50e5922990d87af15b8d254304a5ff249039f" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of a &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object, whose &lt;a href=&quot;../trackevent/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property identifies the track that was removed from the media element's &lt;code&gt;VideoTrackList&lt;/code&gt;.</source>
          <target state="translated">이벤트는 &lt;a href=&quot;../trackevent&quot;&gt; &lt;code&gt;TrackEvent&lt;/code&gt; &lt;/a&gt; 객체 의 형태로 이벤트 핸들러에 전달되며, &lt;a href=&quot;../trackevent/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt; 속성은 미디어 요소의 &lt;code&gt;VideoTrackList&lt;/code&gt; 에서 제거 된 트랙을 식별합니다 .</target>
        </trans-unit>
        <trans-unit id="057b513221ba1dcbb98c9809cb7839bad4a45801" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object; the event doesn't provide any additional information. To determine the new state of media's tracks, you'll have to look at their &lt;a href=&quot;../audiotrack/enabled&quot;&gt;&lt;code&gt;AudioTrack.enabled&lt;/code&gt;&lt;/a&gt; flags.</source>
          <target state="translated">이벤트는 &lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 객체 의 형태로 이벤트 핸들러에 전달됩니다 . 이벤트는 추가 정보를 제공하지 않습니다. 미디어 트랙의 새로운 상태를 확인하려면 &lt;a href=&quot;../audiotrack/enabled&quot;&gt; &lt;code&gt;AudioTrack.enabled&lt;/code&gt; &lt;/a&gt; 플래그를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="b77dc84785a0e9abfced7e32039b1f770a0277d0" translate="yes" xml:space="preserve">
          <source>The event is passed into the event handler in the form of an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object; the event doesn't provide any additional information. To determine the new state of media's tracks, you'll have to look at their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VideoTrack/enabled&quot;&gt;&lt;code&gt;VideoTrack.enabled&lt;/code&gt;&lt;/a&gt; flags.</source>
          <target state="translated">이벤트는 &lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 객체 의 형태로 이벤트 핸들러에 전달됩니다 . 이벤트는 추가 정보를 제공하지 않습니다. 미디어 트랙의 새로운 상태를 확인하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VideoTrack/enabled&quot;&gt; &lt;code&gt;VideoTrack.enabled&lt;/code&gt; &lt;/a&gt; 플래그를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c53a5e97d21d19d2014633532b40d8c666883a1" translate="yes" xml:space="preserve">
          <source>The event is propagating back up through the target's ancestors in reverse order, starting with the parent, and eventually reaching the containing &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;. This is known as bubbling, and occurs only if &lt;a href=&quot;bubbles&quot;&gt;&lt;code&gt;Event.bubbles&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;. &lt;a href=&quot;../eventlistener&quot;&gt;Event listeners&lt;/a&gt; registered for this phase are triggered during this process.</source>
          <target state="translated">이 이벤트는 부모에서 시작하여 대상의 조상을 통해 역순으로 다시 전파되어 결국 포함하는 &lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt; 에 도달합니다 . 이것을 버블 링이라고하며 &lt;a href=&quot;bubbles&quot;&gt; &lt;code&gt;Event.bubbles&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우에만 발생 합니다 . 이 단계에 등록 된 &lt;a href=&quot;../eventlistener&quot;&gt;이벤트 리스너&lt;/a&gt; 는이 프로세스 중에 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="61fbc8e51e55dc3704022dc555d714563ec4dc63" translate="yes" xml:space="preserve">
          <source>The event listener callback</source>
          <target state="translated">이벤트 리스너 콜백</target>
        </trans-unit>
        <trans-unit id="15d814057a46ababa2b6e015aa98e8575d368186" translate="yes" xml:space="preserve">
          <source>The event listener can be specified as either a callback function or as an object that implements &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt;, whose &lt;a href=&quot;../eventlistener/handleevent&quot;&gt;&lt;code&gt;handleEvent()&lt;/code&gt;&lt;/a&gt; method serves as the callback function.</source>
          <target state="translated">이벤트 리스너가 어느 콜백 함수 또는 구현하는 객체로 지정 될 수 &lt;a href=&quot;../eventlistener&quot;&gt; &lt;code&gt;EventListener&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../eventlistener/handleevent&quot;&gt; &lt;code&gt;handleEvent()&lt;/code&gt; &lt;/a&gt; 메소드는 콜백 함수로서 기능한다.</target>
        </trans-unit>
        <trans-unit id="518c33077d13e9ef921a9b77ebc4dcef34089213" translate="yes" xml:space="preserve">
          <source>The event object for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/result&quot;&gt;result&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/nomatch&quot;&gt;nomatch&lt;/a&gt;&lt;/code&gt; events, and contains all the data associated with an interim or final speech recognition result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/result&quot;&gt;result&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/nomatch&quot;&gt;nomatch&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 이벤트 객체 이며 중간 또는 최종 음성 인식 결과와 관련된 모든 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="325ca99660c33ab5c94119e7fc5d52067210150d" translate="yes" xml:space="preserve">
          <source>The event object is of type &lt;a href=&quot;../vrdisplayevent&quot;&gt;&lt;code&gt;VRDisplayEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이벤트 객체는 &lt;a href=&quot;../vrdisplayevent&quot;&gt; &lt;code&gt;VRDisplayEvent&lt;/code&gt; &lt;/a&gt; 유형 입니다 .</target>
        </trans-unit>
        <trans-unit id="416d4e70774d4d55c60ef485c4afb9ba9b75d97e" translate="yes" xml:space="preserve">
          <source>The event object of a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message_(ServiceWorker)&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event fired on a service worker (when a channel message is received on the &lt;a href=&quot;serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; from another context) &amp;mdash; extends the lifetime of such events.</source>
          <target state="translated">서비스 워커에서 발생 된 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message_(ServiceWorker)&quot;&gt;message&lt;/a&gt;&lt;/code&gt; 이벤트 의 이벤트 객체 ( 다른 컨텍스트 에서 &lt;a href=&quot;serviceworkerglobalscope&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt; &lt;/a&gt; 로 채널 메시지를 수신 한 경우 ) &amp;mdash; 해당 이벤트의 수명을 연장합니다.</target>
        </trans-unit>
        <trans-unit id="364f00a2efc461792f1179ba522dc36c9096616f" translate="yes" xml:space="preserve">
          <source>The event passed to the listener is an &lt;a href=&quot;../idbversionchangeevent&quot;&gt;&lt;code&gt;IDBVersionChangeEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리스너에 전달 된 이벤트는 &lt;a href=&quot;../idbversionchangeevent&quot;&gt; &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1bbb8501fd6c0787be9bab55b8d07f56e8960947" translate="yes" xml:space="preserve">
          <source>The event sent by the WebSocket object when a message is received from the server.</source>
          <target state="translated">서버에서 메시지를 수신 할 때 WebSocket 객체가 보낸 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="3b6187d9ea4d8efc63efccc30d2399951d3c9a97" translate="yes" xml:space="preserve">
          <source>The event sent by the WebSocket object when the connection closes.</source>
          <target state="translated">연결이 닫힐 때 WebSocket 객체가 보낸 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="a60d777a8bf84d534f926f3f0fe9703ae10c735f" translate="yes" xml:space="preserve">
          <source>The event stream is a simple stream of text data which must be encoded using UTF-8. Messages in the event stream are separated by a pair of newline characters. A colon as the first character of a line is in essence a comment, and is ignored.</source>
          <target state="translated">이벤트 스트림은 UTF-8을 사용하여 인코딩해야하는 간단한 텍스트 데이터 스트림입니다. 이벤트 스트림의 메시지는 개행 문자 쌍으로 구분됩니다. 줄의 첫 문자 인 콜론은 본질적으로 주석이며 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="333d73023a0e51754b80482740b531e64f5db3dc" translate="yes" xml:space="preserve">
          <source>The event that's fired when connection information changes and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; is fired on this object.</source>
          <target state="translated">연결 정보가 변경 되고이 객체 에서 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; 이 시작 되면 시작되는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="3538beecc929a15322b6255e86de2e9981be621b" translate="yes" xml:space="preserve">
          <source>The event was generated by a mouse device.</source>
          <target state="translated">마우스 장치가 이벤트를 생성했습니다.</target>
        </trans-unit>
        <trans-unit id="0aeb012a6255ae5c4a103bdb359c0a10353e8ef6" translate="yes" xml:space="preserve">
          <source>The event was generated by a pen or stylus device.</source>
          <target state="translated">이벤트는 펜 또는 스타일러스 장치에서 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="f2f041a8c8ef812afdbb618d861e9cad28c58344" translate="yes" xml:space="preserve">
          <source>The event was generated by a touch such as a finger.</source>
          <target state="translated">이벤트는 손가락과 같은 터치로 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="a78c36b36227256daba1f3887f119503f68d93ff" translate="yes" xml:space="preserve">
          <source>The event was originally introduced by Microsoft in Internet Explorer 4 and standardized in the HTML5 specification.</source>
          <target state="translated">이 이벤트는 원래 Internet Explorer 4에서 Microsoft에 의해 도입되었으며 HTML5 사양으로 표준화되었습니다.</target>
        </trans-unit>
        <trans-unit id="84cfe53f5a42517e01b6d9fc5947ae982a0ba31f" translate="yes" xml:space="preserve">
          <source>The event's pointer type, either the string &lt;code&gt;mouse&lt;/code&gt;, &lt;code&gt;pen&lt;/code&gt; or &lt;code&gt;touch&lt;/code&gt;.</source>
          <target state="translated">이벤트의 포인터 유형 (문자열 &lt;code&gt;mouse&lt;/code&gt; , &lt;code&gt;pen&lt;/code&gt; 또는 &lt;code&gt;touch&lt;/code&gt; ) 입니다.</target>
        </trans-unit>
        <trans-unit id="c70b6a9277f70335ccccd9a0ca900283992482e5" translate="yes" xml:space="preserve">
          <source>The event's target is the same &lt;a href=&quot;element&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt; that received the &lt;code&gt;touchstart&lt;/code&gt; event corresponding to the touch point, even if the touch point has moved outside that element.</source>
          <target state="translated">이벤트의 대상은 동일 &lt;a href=&quot;element&quot;&gt; &lt;code&gt;element&lt;/code&gt; &lt;/a&gt; 수신 &lt;code&gt;touchstart&lt;/code&gt; 의 터치 포인트가 그 소자 외부로 이동 된 경우에도, 터치 포인트에 대응하는 이벤트.</target>
        </trans-unit>
        <trans-unit id="abd69348450342abf63c2725f24c4d0a8dbf8caf" translate="yes" xml:space="preserve">
          <source>The events based on this interface are &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">이 인터페이스를 기반으로하는 이벤트는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="633a40125277bf4a9e9f79e143163e547924a45a" translate="yes" xml:space="preserve">
          <source>The events needed to handle generic pointer input are analogous to &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;mouse events&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;mousedown/pointerdown&lt;/code&gt;, &lt;code&gt;mousemove/pointermove&lt;/code&gt;, etc.). Consequently, pointer event types are intentionally similar to mouse event types. Additionally, a pointer event contains the usual properties present in mouse events (client coordinates, target element, button states, etc.) in addition to new properties for other forms of input: pressure, contact geometry, tilt, etc. In fact, the &lt;a href=&quot;pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface inherits all of the &lt;a href=&quot;mouseevent&quot;&gt;&lt;code&gt;MouseEvent's&lt;/code&gt;&lt;/a&gt; properties thus facilitating migrating content from mouse events to pointer events.</source>
          <target state="translated">일반 포인터 입력을 처리하는 데 필요한 이벤트는 &lt;a href=&quot;mouseevent&quot;&gt; &lt;code&gt;mouse events&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;mousedown/pointerdown&lt;/code&gt; , &lt;code&gt;mousemove/pointermove&lt;/code&gt; 등)와 유사합니다 . 결과적으로 포인터 이벤트 유형은 의도적으로 마우스 이벤트 유형과 유사합니다. 또한 포인터 이벤트에는 압력, 접촉 지오메트리, 기울기 등의 다른 입력 유형에 대한 새로운 속성 외에도 마우스 이벤트 (클라이언트 좌표, 대상 요소, 버튼 상태 등)에 존재하는 일반적인 속성이 포함됩니다. &lt;a href=&quot;pointerevent&quot;&gt; &lt;code&gt;PointerEvent&lt;/code&gt; &lt;/a&gt; 인터페이스는 모든 &lt;a href=&quot;mouseevent&quot;&gt; &lt;code&gt;MouseEvent's&lt;/code&gt; &lt;/a&gt; 속성을 상속 하므로 마우스 이벤트에서 포인터 이벤트로 컨텐츠를 쉽게 마이그레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2a814c43f5d425132a48ad8d280abb840a4ff06" translate="yes" xml:space="preserve">
          <source>The exact behavior of modal windows depends on the platform and on the Mozilla release version.</source>
          <target state="translated">모달 창의 정확한 동작은 플랫폼 및 Mozilla 릴리스 버전에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c097a16215f9c09d84b569daaa304a9bd1fa8efa" translate="yes" xml:space="preserve">
          <source>The exact circumstances and browser capabilities change over time, but the general philosophy of the browser vendors is to make the best effort to keep the data when possible.</source>
          <target state="translated">정확한 상황과 브라우저 기능은 시간이 지남에 따라 변하지 만 브라우저 공급 업체의 일반적인 철학은 가능한 경우 데이터를 유지하기 위해 최선을 다하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="92c236bb6935d17e0c6b1e874d88f1024505ba1a" translate="yes" xml:space="preserve">
          <source>The exact effect of this coordinate depends on each element. If the attribute is not specified, the effect is as if a value of &lt;code&gt;0&lt;/code&gt; were specified.</source>
          <target state="translated">이 좌표의 정확한 효과는 각 요소에 따라 다릅니다. 속성을 지정하지 않으면 값이 &lt;code&gt;0&lt;/code&gt; 으로 지정된 것처럼 효과가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="7ddfa1ab95605cf5b0611ce70f6e07c892959def" translate="yes" xml:space="preserve">
          <source>The exact effect of this coordinate depends on each element.If the attribute is not specified, the effect is as if a value of &lt;code&gt;0&lt;/code&gt; were specified.</source>
          <target state="translated">이 좌표의 정확한 효과는 각 요소에 따라 달라집니다. 특성을 지정하지 않으면 값이 &lt;code&gt;0&lt;/code&gt; 인 것처럼 효과가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="7db719df093965c969583d143320db6c5bc499bb" translate="yes" xml:space="preserve">
          <source>The exact validation technology depends on the payment handler, and merchant validation is entirely optional. In the end, the only thing that the web site or app is responsible for is fetching the merchant's validation key and passing it into the event's &lt;a href=&quot;../merchantvalidationevent/complete&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">정확한 유효성 검사 기술은 지불 처리기에 따라 다르며 판매자 유효성 검사는 전적으로 선택 사항입니다. 결국 웹 사이트 또는 앱이 담당하는 유일한 것은 판매자의 유효성 검사 키를 가져 와서 이벤트의 &lt;a href=&quot;../merchantvalidationevent/complete&quot;&gt; &lt;code&gt;complete()&lt;/code&gt; &lt;/a&gt; 메서드에 전달하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e1ae65f7095de79e42d15340e08038c55e3639da" translate="yes" xml:space="preserve">
          <source>The example below draws three different paths, demonstrating each of the three &lt;code&gt;lineJoin&lt;/code&gt; options.</source>
          <target state="translated">아래 예제는 세 가지 &lt;code&gt;lineJoin&lt;/code&gt; 옵션을 각각 보여주는 세 가지 경로를 그립니다 .</target>
        </trans-unit>
        <trans-unit id="22f94208043ca899cfd1fd698c8c72e08ecdf07f" translate="yes" xml:space="preserve">
          <source>The example below draws three different paths, demonstrating each of these three &lt;code&gt;lineJoin&lt;/code&gt; property settings; the output is shown above.</source>
          <target state="translated">아래 예제는 세 가지 &lt;code&gt;lineJoin&lt;/code&gt; 속성 설정을 각각 보여주는 세 가지 경로를 그립니다 . 출력은 위와 같습니다.</target>
        </trans-unit>
        <trans-unit id="3a6d432a11f87417869101e32920bc4f7afa19f9" translate="yes" xml:space="preserve">
          <source>The example below draws two triangles, one filled and one outlined.</source>
          <target state="translated">아래 예제는 채워진 삼각형과 윤곽선이있는 삼각형을 그립니다.</target>
        </trans-unit>
        <trans-unit id="78f64de305c881b56a5819537356ae3477fe2032" translate="yes" xml:space="preserve">
          <source>The example below first checks to see if the browser supports service workers. If supported, the code registers the service worker and determines if the page is actively controlled by the service worker. If it isn't, it prompts the user to reload the page so the service worker can take control. The code also reports any registration failures.</source>
          <target state="translated">아래 예제는 먼저 브라우저가 서비스 워커를 지원하는지 확인합니다. 지원되는 경우 코드는 서비스 워커를 등록하고 서비스 워커가 페이지를 활발하게 제어하는지 여부를 결정합니다. 그렇지 않은 경우 서비스 담당자가 제어 할 수 있도록 페이지를 다시로드하라는 메시지가 표시됩니다. 이 코드는 등록 실패도보고합니다.</target>
        </trans-unit>
        <trans-unit id="a21f51f86078e61a8538a5dff376f87463b710d0" translate="yes" xml:space="preserve">
          <source>The example below uses a simple fetch call to grab an image and display it in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; tag. You'll notice that since we are requesting an image, we need to run &lt;a href=&quot;body/blob&quot;&gt;&lt;code&gt;Body.blob()&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; implements body) to give the response its correct MIME type.</source>
          <target state="translated">아래 예제는 간단한 가져 오기 호출을 사용하여 이미지를 가져 와서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt; 태그로 표시합니다 . 이미지를 요청하고 있기 때문에 응답에 올바른 MIME 유형을 제공하려면 &lt;a href=&quot;body/blob&quot;&gt; &lt;code&gt;Body.blob()&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;bodys 를 실행 ) 를 실행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="bf91867dda3f6738ef23772cc44b82b623fbd36c" translate="yes" xml:space="preserve">
          <source>The example below watches the state of the ICE agent for a failure or unexpected closure and takes appropriate action, such as presenting an error message or attempting to restart the ICE agent.</source>
          <target state="translated">아래 예는 ICE 에이전트의 상태에 실패 또는 예상치 못한 종료가 있는지 확인하고 오류 메시지 표시 또는 ICE 에이전트 다시 시작과 같은 적절한 조치를 취합니다.</target>
        </trans-unit>
        <trans-unit id="81a485db6c54ac571dff7d2837860ae39779944a" translate="yes" xml:space="preserve">
          <source>The example below, which is based on the code from the article &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;, sets up a handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; events to send the candidates to the remote peer.</source>
          <target state="translated">&lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt; 기사의 코드를 기반으로하는 아래 예제 는 후보를 원격 피어로 보내기 위한 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 이벤트 처리기를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="1ff076e63d624494090166976810a11e9eca0e5e" translate="yes" xml:space="preserve">
          <source>The example creates an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element and lets the user assign either a valid music file to it, or a link to a file which doesn't exist. This lets us see the behavior of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event handler, which is received by an event handler we add to the &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; element itself.</source>
          <target state="translated">이 예에서는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 를 만들고 사용자가 유효한 음악 파일을 지정하거나 존재하지 않는 파일에 대한 링크를 지정할 수 있도록합니다. 이를 통해 &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; 요소 자체에 추가 한 이벤트 핸들러가 수신 하는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러 의 동작을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="873416eb8e9852f6e180efb00e04799b2f7c485a" translate="yes" xml:space="preserve">
          <source>The example describes repeated pieces of code that will be hidden from now on, as well as defining a JavaScript utility function to make WebGL initialization easier.</source>
          <target state="translated">이 예제에서는 WebGL 초기화를보다 쉽게하기 위해 JavaScript 유틸리티 함수를 정의 할뿐만 아니라 지금부터 숨겨 질 반복되는 코드를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2f9d358dac650cf6f5b343235672740978098030" translate="yes" xml:space="preserve">
          <source>The example explores the effect of setting (or not setting) the canvas size to its element size in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSS&quot;&gt;CSS&lt;/a&gt; pixels, as it appears in the browser window.</source>
          <target state="translated">이 예제에서는 브라우저 창에 나타나는 캔버스 크기를 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSS&quot;&gt;CSS&lt;/a&gt; 픽셀 의 요소 크기로 설정 (또는 설정하지 않음)하는 효과를 살펴 봅니다.</target>
        </trans-unit>
        <trans-unit id="775aa21bd51bf14efcbac6acf17dbd377e335d04" translate="yes" xml:space="preserve">
          <source>The example image above shows a scrollbar and an &lt;code&gt;offsetHeight&lt;/code&gt; which fits on the window. However, non-scrollable elements may have large &lt;code&gt;offsetHeight&lt;/code&gt; values, much larger than the visible content. These elements are typically contained within scrollable elements; consequently, these non-scrollable elements may be completely or partly invisible, depending on the &lt;code&gt;scrollTop&lt;/code&gt; setting of the scrollable container.</source>
          <target state="translated">위의 예제 이미지 는 창에 맞는 스크롤 막대와 &lt;code&gt;offsetHeight&lt;/code&gt; 높이를 보여줍니다 . 그러나 스크롤 할 수없는 요소는 보이는 내용보다 훨씬 큰 &lt;code&gt;offsetHeight&lt;/code&gt; 값을 가질 수 있습니다. 이러한 요소는 일반적으로 스크롤 가능한 요소 내에 포함됩니다. 결과적으로, 스크롤 할 수없는 컨테이너 의 &lt;code&gt;scrollTop&lt;/code&gt; 설정에 따라 이러한 비 스크롤 가능 요소는 완전히 또는 부분적으로 보이지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe6a0689a103b5968aa68ef14ffcf9549801c3c7" translate="yes" xml:space="preserve">
          <source>The example snippets in this article are taken from our WebSocket chat client/server sample. &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/websocket-chat&quot;&gt;See the code&lt;/a&gt;, then &lt;a href=&quot;https://mdn-samples.mozilla.org/s/websocket-chat&quot;&gt;try out the example for yourself&lt;/a&gt;. &lt;strong&gt;The example currently has a bug in it; it is trying to use insecure WebSockets but needs to be updated to use a secure one. We will fix this soon!&lt;/strong&gt;</source>
          <target state="translated">이 기사의 예제 스 니펫은 WebSocket 채팅 클라이언트 / 서버 샘플에서 가져온 것입니다. &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/websocket-chat&quot;&gt;코드&lt;/a&gt; 를 본 다음 &lt;a href=&quot;https://mdn-samples.mozilla.org/s/websocket-chat&quot;&gt;직접 예제를 사용해보십시오&lt;/a&gt; . &lt;strong&gt;이 예제에는 현재 버그가 있습니다. 안전하지 않은 WebSocket을 사용하려고하지만 안전한 것을 사용하도록 업데이트해야합니다. 우리는 이것을 곧 고칠 것입니다!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f25e736c8722982227eeb25d9a03b5ed63f1b9f1" translate="yes" xml:space="preserve">
          <source>The example, which pauses the video when you switch to another tab and plays again when you return to its tab, was created with the following code:</source>
          <target state="translated">다른 탭으로 전환 할 때 비디오를 일시 중지하고 해당 탭으로 돌아갈 때 다시 재생되는 예제는 다음 코드로 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="c02cd3f7e15fbbd4b51df1f2efaccfb38ef549b5" translate="yes" xml:space="preserve">
          <source>The examples are sorted in order of increasing difficulty. But rather than just presenting them in a single long list, they are additionally divided into topics. Sometimes we revisit a topic several times, such as when needing to discuss it initially at a basic level, and later at intermediate and advanced levels.</source>
          <target state="translated">난이도가 증가하는 순서대로 예제가 정렬됩니다. 그러나 그것들을 하나의 긴 목록으로 제시하는 대신에 주제로 추가로 나뉩니다. 때로는 기본 수준에서 토론하고 나중에 중급 및 고급 수준에서 논의해야 할 때와 같이 주제를 여러 번 다시 방문하기도합니다.</target>
        </trans-unit>
        <trans-unit id="10fac92da9399efbc7aceb186d7276c6b2bd9333" translate="yes" xml:space="preserve">
          <source>The examples described here should be taken together to get a better understanding of how service workers scope applies to a page.</source>
          <target state="translated">여기에 설명 된 예는 서비스 워커 범위가 페이지에 어떻게 적용되는지 이해하기 위해 함께 취해야합니다.</target>
        </trans-unit>
        <trans-unit id="a4f35e827cf90f5fa408491f19ef282af9f91bf3" translate="yes" xml:space="preserve">
          <source>The exception is if another element was already in full-screen mode when the current element was placed into full-screen mode using &lt;code&gt;requestFullscreen()&lt;/code&gt;. In that case, the previous full-screen element is restored to full-screen status instead. In essence, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Stack_(abstract_data_type)&quot;&gt;stack&lt;/a&gt; of full-screen elements is maintained.</source>
          <target state="translated">&lt;code&gt;requestFullscreen()&lt;/code&gt; 사용하여 현재 요소를 전체 화면 모드로 전환했을 때 다른 요소가 이미 전체 화면 모드 인 경우는 예외입니다 . 이 경우 이전의 전체 화면 요소가 전체 화면 상태로 복원됩니다. 본질적 으로 전체 화면 요소 의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Stack_(abstract_data_type)&quot;&gt;스택&lt;/a&gt; 이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="22226988c671f551ab2bc4ebd3599926f96a5964" translate="yes" xml:space="preserve">
          <source>The exception to this is Chrome, starting with version 56 (desktop, Chrome for android, and android webview), where the default value for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and calls to &lt;a href=&quot;event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; are not needed. To override this behavior, you simply set the &lt;code&gt;passive&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; as shown in the example below. This change prevents the listener from blocking page rendering while a user is scrolling. A demo is available on the &lt;a href=&quot;https://developers.google.com/web/updates/2016/06/passive-event-listeners&quot;&gt;Google Developer&lt;/a&gt; site.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; 의 기본값 이 &lt;code&gt;true&lt;/code&gt; 이고 &lt;a href=&quot;event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt; 호출 할 필요가없는 버전 56부터 시작하는 Chrome (데스크톱, Android 용 Chrome 및 Android 웹보기)은 예외 입니다. 이 동작을 무시하려면 아래 예와 같이 &lt;code&gt;passive&lt;/code&gt; 옵션을 &lt;code&gt;false&lt;/code&gt; 로 설정하면 됩니다. 이 변경은 사용자가 스크롤하는 동안 리스너가 페이지 렌더링을 차단하지 못하게합니다. 데모는 &lt;a href=&quot;https://developers.google.com/web/updates/2016/06/passive-event-listeners&quot;&gt;Google 개발자&lt;/a&gt; 사이트에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="30b0f285c8e2ca73b2fdc67c22882ba9aa5d84cc" translate="yes" xml:space="preserve">
          <source>The exception to this is if the worker script's origin is a globally unique identifier (for example, if its URL has a scheme of data or blob). In this case, the worker does inherit the CSP of the document or worker that created it.</source>
          <target state="translated">워커 스크립트의 출처가 전역 적으로 고유 한 식별자 인 경우 (예 : URL에 데이터 체계 또는 BLOB가있는 경우)는 예외입니다. 이 경우 작업자는 문서 또는 문서를 만든 작업자의 CSP를 상속합니다.</target>
        </trans-unit>
        <trans-unit id="f8519e2c3bfeefcc7dd7c21b04d3c9bc548ff322" translate="yes" xml:space="preserve">
          <source>The existing file or directory is removed and replaced with a new one, then the &lt;code&gt;successCallback&lt;/code&gt; is called with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt;, as appropriate.</source>
          <target state="translated">기존 파일 또는 디렉터리를 제거하고 새로 대체되는 &lt;code&gt;successCallback&lt;/code&gt; 이 불려 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt; &lt;code&gt;FileSystemFileEntry&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; &lt;/a&gt; 적절.</target>
        </trans-unit>
        <trans-unit id="4ff272e359e600a067730f5aba42a8ffbc75bf0f" translate="yes" xml:space="preserve">
          <source>The explanation of these two lines above can be found at &quot;Example of pushState() method&quot; section. Then suppose http://mozilla.org/bar.html executes the following JavaScript:</source>
          <target state="translated">위의 두 줄에 대한 설명은 &quot;pushState () 메소드의 예&quot;섹션에서 확인할 수 있습니다. 그런 다음 http://mozilla.org/bar.html이 다음 JavaScript를 실행한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="1277ac3fa87993a0996df3f4be0accd9524bd2b0" translate="yes" xml:space="preserve">
          <source>The explicit original target of the event (Mozilla-specific).</source>
          <target state="translated">이벤트의 명시 적 원래 대상 (Mozilla 특정).</target>
        </trans-unit>
        <trans-unit id="6910929879bb764792e06c30a4e30029bf5ccaa8" translate="yes" xml:space="preserve">
          <source>The extension is activated by default to privileged contexts (chrome context).</source>
          <target state="translated">확장은 기본적으로 권한있는 컨텍스트 (크롬 컨텍스트)로 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="c13a854923903e14f4079b976cdc6ca6c31b7642" translate="yes" xml:space="preserve">
          <source>The extensions selected by the server.</source>
          <target state="translated">서버가 선택한 확장.</target>
        </trans-unit>
        <trans-unit id="e309dfba5028c5803c72dbe68930bc337160cf10" translate="yes" xml:space="preserve">
          <source>The external &lt;code&gt;Node&lt;/code&gt; or &lt;code&gt;DocumentFragment&lt;/code&gt; to import into the current document.</source>
          <target state="translated">현재 문서로 가져올 외부 &lt;code&gt;Node&lt;/code&gt; 또는 &lt;code&gt;DocumentFragment&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac91a64226017517f660dfede885dfecdd15c3a0" translate="yes" xml:space="preserve">
          <source>The fallback content is displayed in browsers which do not support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;. Scripts can also check for support programmatically by simply testing for the presence of the &lt;code&gt;getContext()&lt;/code&gt; method. Our code snippet from above becomes something like this:</source>
          <target state="translated">대체 콘텐츠는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 를&lt;/a&gt; 지원하지 않는 브라우저에 표시됩니다 . 스크립트는 &lt;code&gt;getContext()&lt;/code&gt; 메소드 의 존재 여부를 테스트하여 프로그래밍 방식으로 지원을 확인할 수도 있습니다 . 위의 코드 스 니펫은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4b91aad8b5c89d86e1af945284e7f658835e0f0a" translate="yes" xml:space="preserve">
          <source>The fastest, most widely useable, most standard, and most future-ready way to solve the unicode problem is by transforming the UTF16 into UTF8-in-16 then use &lt;code&gt;btoa&lt;/code&gt; on the UTF8-in-16 string. To understand this deeper, UTF16 uses 16 bits as the smallest unit of measure whereas UTF8 uses 8 bits as the smallest unit of measure. This means that the smallest a UTF16 character can be is 16 bits (2 bytes) meanwhile the smallest a UTF8 character can be is 8 bits (1 byte). Then, UTF8-in-16 is making the string encoded as UTF-8, but storing it as a UTF-16 string by only using 8 (from UTF8) of the 16 bits in each unit of measure of a UTF-16 string. This method is incredibly efficient because all it takes is a single simple super fast &lt;code&gt;String.prototype.replace&lt;/code&gt; to convert between UTF-16 and UTF8-in-16. There is no need to encode the string as an array buffer then reencode it as a string. Rather, the below code simply and straightforwardly converts it in a single &lt;code&gt;String.prototype.replace&lt;/code&gt;.</source>
          <target state="translated">유니 코드 문제를 해결하기위한 가장 빠르고, 가장 널리 사용되는, 가장 표준이며, 가장 미래에 대비할 수있는 방법은 UTF16을 UTF8-in-16으로 변환 한 다음 UTF8-in-16 문자열에서 &lt;code&gt;btoa&lt;/code&gt; 를 사용하는 것 입니다. 이 깊이를 이해하기 위해 UTF16은 가장 작은 측정 단위로 16 비트를 사용하는 반면 UTF8은 가장 작은 측정 단위로 8 비트를 사용합니다. 이는 UTF16 문자의 최소값은 16 비트 (2 바이트) 인 반면 UTF8 문자의 최소값은 8 비트 (1 바이트)입니다. 그런 다음 UTF8-in-16은 문자열을 UTF-8로 인코딩하지만 UTF-16 문자열의 각 측정 단위에서 16 비트 중 8 비트 (UTF8에서) 만 사용하여 UTF-16 문자열로 저장합니다. 이 방법은 하나의 간단한 초고속 &lt;code&gt;String.prototype.replace&lt;/code&gt; 이기 때문에 매우 효율적입니다.UTF-16과 UTF8-in-16 사이를 변환합니다. 문자열을 배열 버퍼로 인코딩 한 다음 문자열로 다시 인코딩 할 필요가 없습니다. 오히려 아래 코드는 단일 &lt;code&gt;String.prototype.replace&lt;/code&gt; 로 간단하고 간단하게 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="1eb0439c89ec942edaf35bee7f451751e60e6db8" translate="yes" xml:space="preserve">
          <source>The feature flags are:</source>
          <target state="translated">기능 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d78931753a768075720670b6d0c635cb4bd6383e" translate="yes" xml:space="preserve">
          <source>The fetch operation is complete. This could mean that either the data transfer has been completed successfully or failed.</source>
          <target state="translated">페치 조작이 완료되었습니다. 이는 데이터 전송이 완료되었거나 실패했음을 의미 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56dbdd3e402541ac1d372f18c7d8b43d4a602ed5" translate="yes" xml:space="preserve">
          <source>The fetching of the associated resource was aborted by the user's request.</source>
          <target state="translated">사용자의 요청으로 인해 관련 리소스 가져 오기가 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="3fda7923e670cbb03dc610fc589565c64ea62572" translate="yes" xml:space="preserve">
          <source>The field &lt;code&gt;&quot;4234997325&quot;&lt;/code&gt; is the foundation.</source>
          <target state="translated">&lt;code&gt;&quot;4234997325&quot;&lt;/code&gt; 필드 가 기초입니다.</target>
        </trans-unit>
        <trans-unit id="aa6e03b19e42e2b21d5f72e46496dad12d3fe18b" translate="yes" xml:space="preserve">
          <source>The field of view (FOV) is the area that each of the user's eyes can reasonably be expected to see. It roughly takes the form of a pyramid shape, laid down on one side, with the apex inside the user's head, and the rest of the pyramid eminating from the user's eye. Each eye has it's own FOV, one slightly overlapping the other.</source>
          <target state="translated">시야 (FOV)는 각각의 사용자의 눈이 합리적으로 볼 수있는 영역이다. 그것은 대략 피라미드 모양의 형태를 취하고, 한쪽에는 머리가 뾰족하고, 나머지 피라미드는 사용자의 눈에서 빠져 나옵니다. 각 눈에는 자체 FOV가 있으며 하나는 다른 하나와 약간 겹칩니다.</target>
        </trans-unit>
        <trans-unit id="10d14155e011fc16ca9a27e8dac5391b405cc649" translate="yes" xml:space="preserve">
          <source>The field's value. In the two parameter version this is a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;, or if it is not, it is converted to a string. In the three parameter version this can be a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;. If none of these are specified the value is converted to a string.</source>
          <target state="translated">필드의 값 두 매개 변수 버전에서 이는 &lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt; 이거나 그렇지 않은 경우 문자열로 변환됩니다. 세 개의 매개 변수 버전에서 이는 &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt; 일 수 있습니다. . 이들 중 아무것도 지정되지 않으면 값이 문자열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="3354d8eb8f5abb92146eb5f3ad94f0724bc1bc2e" translate="yes" xml:space="preserve">
          <source>The field's value. This can be a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; (including subclasses such as &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">필드의 값 &lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; 일&lt;/a&gt; 수 있습니다 ( &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 과 같은 서브 클래스 포함). ).</target>
        </trans-unit>
        <trans-unit id="e3188488e0ada5fc9580eac41e3ef8e893115f68" translate="yes" xml:space="preserve">
          <source>The fifth field, &lt;code&gt;&quot;192.168.0.56&quot;&lt;/code&gt; is the IP address in this candidate's a-line string.</source>
          <target state="translated">다섯 번째 필드 인 &lt;code&gt;&quot;192.168.0.56&quot;&lt;/code&gt; 은이 후보의 a- 줄 문자열에있는 IP 주소입니다.</target>
        </trans-unit>
        <trans-unit id="ad8e058e84bf3bc453cf035cfc7f2bf238000df0" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="translated">파일 이름</target>
        </trans-unit>
        <trans-unit id="632ce2d43319e70accda4feb98f4a2f96d7c3c21" translate="yes" xml:space="preserve">
          <source>The file or directory cannot be read, typically due to permission problems that occur after a reference to a file has been acquired (for example, the file or directory is concurrently locked by another application).</source>
          <target state="translated">일반적으로 파일에 대한 참조를 얻은 후 발생하는 권한 문제 (예 : 파일 또는 디렉토리가 다른 응용 프로그램에 의해 동시에 잠겨 있음)로 인해 파일 또는 디렉토리를 읽을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eaf3af37a20cc4629e47a06fdf7218ad1df6dab6" translate="yes" xml:space="preserve">
          <source>The file or directory doesn't exist.</source>
          <target state="translated">파일 또는 디렉토리가 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="69fd751b10f330d57bc6830fca01b200cc5979a1" translate="yes" xml:space="preserve">
          <source>The file or directory is created, then a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; is passed to the &lt;code&gt;successCallback&lt;/code&gt;, as appropriate.</source>
          <target state="translated">파일 또는 디렉토리가 작성된 후 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt; &lt;code&gt;FileSystemFileEntry&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt; &lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt; &lt;/a&gt; 가 적절하게 &lt;code&gt;successCallback&lt;/code&gt; 으로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="80613ac1ccc857f1d9d499b91e6976c56d48ef78" translate="yes" xml:space="preserve">
          <source>The file or directory with the same path already exists.</source>
          <target state="translated">동일한 경로를 가진 파일 또는 디렉토리가 이미 존재합니다.</target>
        </trans-unit>
        <trans-unit id="b43a0beac9c2bfb7e5594bc005c840834e39c8cb" translate="yes" xml:space="preserve">
          <source>The file system's cached state is inconsistent with its state on disk, so the file could not be deleted for safety reasons.</source>
          <target state="translated">파일 시스템의 캐시 상태가 디스크의 상태와 일치하지 않으므로 안전상의 이유로 파일을 삭제할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="39b524be960a9c15e5e7e9a3446f024149a488e3" translate="yes" xml:space="preserve">
          <source>The file system's state doesn't permit modification.</source>
          <target state="translated">파일 시스템 상태는 수정을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d67f76631b2236dfe7e9bf0a70d93eddfe5873a" translate="yes" xml:space="preserve">
          <source>The file system's state doesn't permit removing the file or directory.</source>
          <target state="translated">파일 시스템 상태에서 파일 또는 디렉토리를 제거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5edbbc83f9720b889ab40000dfb7bed45bd9e759" translate="yes" xml:space="preserve">
          <source>The file's contents. This property is only valid after the read operation is complete, and the format of the data depends on which of the methods was used to initiate the read operation.</source>
          <target state="translated">파일 내용 이 속성은 읽기 작업이 완료된 후에 만 ​​유효하며 데이터 형식은 읽기 작업을 시작하는 데 사용 된 방법에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c380dfd7ffe5491af5513fac453ccd93bbe3d11b" translate="yes" xml:space="preserve">
          <source>The file's name as a read-only string. This is just the file name, and does not include any path information.</source>
          <target state="translated">파일의 이름은 읽기 전용 문자열입니다. 이것은 파일 이름 일 뿐이며 경로 정보를 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81070cd9d4541cf3bd6dbf57258163bcd7f563a9" translate="yes" xml:space="preserve">
          <source>The filename of the plugin file.</source>
          <target state="translated">플러그인 파일의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6b6536d8ffb16ab72dddc638d7282bff672a92d6" translate="yes" xml:space="preserve">
          <source>The filename reported to the server (a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;), when a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; is passed as the second parameter. The default filename for &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects is &quot;blob&quot;.</source>
          <target state="translated">&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 이 두 번째 매개 변수로 전달 될 때 서버에 파일 이름 ( &lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt; )이 보고됩니다 . &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 의 기본 파일 이름 개체 은 &quot;blob&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3de5eecaa230a26b7b686e9c16cefc8ea6fe277a" translate="yes" xml:space="preserve">
          <source>The filename reported to the server (a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;), when a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; is passed as the second parameter. The default filename for &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects is &quot;blob&quot;. The default filename for &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects is the file's filename.</source>
          <target state="translated">&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 이 두 번째 매개 변수로 전달 될 때 서버에 파일 이름 ( &lt;a href=&quot;../usvstring&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; &lt;/a&gt; )이 보고됩니다 . &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 개체 의 기본 파일 이름 은 &quot;blob&quot;입니다. &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체 의 기본 파일 이름 은 파일의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="89fa17885b340cacbae18cc7fef431b7aca99911" translate="yes" xml:space="preserve">
          <source>The files might be unsafe for access within a Web application.</source>
          <target state="translated">파일이 웹 응용 프로그램 내에서 액세스하기에 안전하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36ddc8290ee0db3747d1076d5ea8c8def7bc09bb" translate="yes" xml:space="preserve">
          <source>The fill rule to use (defaults to &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt;).</source>
          <target state="translated">사용할 채우기 규칙 (기본값은 &lt;code&gt;&quot;nonzero&quot;&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="9b46470f274d1f6dd46add5efe0bcc4cd3f42ee0" translate="yes" xml:space="preserve">
          <source>The filter button's &lt;code&gt;click&lt;/code&gt; handler then connects the &lt;code&gt;IIRFilter&lt;/code&gt; up to the graph, between the source and the detination:</source>
          <target state="translated">그런 다음 필터 버튼의 &lt;code&gt;click&lt;/code&gt; 핸들러는 &lt;code&gt;IIRFilter&lt;/code&gt; 를 소스와 detination 사이의 그래프에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="52f5498ede33ad9e1fce6a7fd3c59c1878954622" translate="yes" xml:space="preserve">
          <source>The filter parameters of biquad filters can be automated.</source>
          <target state="translated">바이 쿼드 필터의 필터 매개 변수를 자동화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bdb96218b2326296b6923a3a2b9d2c01e79ec29" translate="yes" xml:space="preserve">
          <source>The final benefit of using homogeneous coordinates is that they fit very nicely for multiplying against 4x4 matrices. A vertex must match at least one of the dimensions of a matrix in order to be multiplied against it. The 4x4 matrix can be used to encode a variety of useful transformations. In fact, the typical perspective matrix uses the division by the w component to achieve its transformation.</source>
          <target state="translated">동종 좌표 사용의 최종 이점은 4x4 행렬과 곱하기에 매우 적합하다는 것입니다. 꼭짓점을 곱하려면 꼭짓점이 행렬의 차원 중 하나 이상과 일치해야합니다. 4x4 매트릭스는 다양한 유용한 변환을 인코딩하는 데 사용될 수 있습니다. 실제로, 전형적인 원근 매트릭스는 변환을 달성하기 위해 w 성분에 의한 나눗셈을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="00605c111560c463640d3249808cfe2f47a9cd34" translate="yes" xml:space="preserve">
          <source>The final matrix is the view matrix that represents the camera's location in space. Imagine shooting a movie with a physical camera. This matrix represents the position and rotation of that physical camera.</source>
          <target state="translated">최종 행렬은 공간에서 카메라의 위치를 ​​나타내는 뷰 행렬입니다. 실제 카메라로 영화를 촬영한다고 상상해보십시오. 이 매트릭스는 물리적 카메라의 위치와 회전을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ad69495174843fb647a705e9427581feb52a59c5" translate="yes" xml:space="preserve">
          <source>The final playNoise() function</source>
          <target state="translated">마지막 playNoise () 함수</target>
        </trans-unit>
        <trans-unit id="324e91e258c535001184a64afe2522cde7ee2fe2" translate="yes" xml:space="preserve">
          <source>The final playPulse() function</source>
          <target state="translated">마지막 playPulse () 함수</target>
        </trans-unit>
        <trans-unit id="0b56a1bc1c34c4fae5e8638bab089638125649bc" translate="yes" xml:space="preserve">
          <source>The final playSample() function</source>
          <target state="translated">마지막 playSample () 함수</target>
        </trans-unit>
        <trans-unit id="3aaf2e530b4d5182665fdfc720b487947fa49a4d" translate="yes" xml:space="preserve">
          <source>The final playSweep() function</source>
          <target state="translated">마지막 playSweep () 함수</target>
        </trans-unit>
        <trans-unit id="fa8198bc1580cf36e261386c7aeb9306468e4f12" translate="yes" xml:space="preserve">
          <source>The final product is below.</source>
          <target state="translated">최종 제품은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="867be82d5ed9befcbda74db6c5fa227407af3135" translate="yes" xml:space="preserve">
          <source>The final state for the modified object tree looks like this:</source>
          <target state="translated">수정 된 객체 트리의 최종 상태는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d46e8cc4b5751bf83bfe5cd15af4c0ad3a07b92" translate="yes" xml:space="preserve">
          <source>The final step in all of this is to create the view matrix. Right now we can move the cube around world space. We can project everything to have perspective, but we still can't move the camera.</source>
          <target state="translated">이 모든 것의 마지막 단계는 뷰 매트릭스를 만드는 것입니다. 지금 우리는 월드 공간 주위로 큐브를 움직일 수 있습니다. 모든 것을 원근법으로 투영 할 수 있지만 카메라를 움직일 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce4584fb645860860a6b0db032e6df9eb79970b7" translate="yes" xml:space="preserve">
          <source>The final step is to begin sending the local video across the peer connection to the caller. This is done by adding each track in the stream by iterating over the list returned by &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;MediaStream.getTracks()&lt;/code&gt;&lt;/a&gt; and passing them to &lt;code&gt;addTrack()&lt;/code&gt; along with the &lt;code&gt;stream&lt;/code&gt; which they're a component of.</source>
          <target state="translated">마지막 단계는 피어 연결을 통해 로컬 비디오를 발신자에게 보내기 시작하는 것입니다. 이것은 &lt;a href=&quot;../mediastream/gettracks&quot;&gt; &lt;code&gt;MediaStream.getTracks()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된리스트를 반복하고 그것들을 구성 요소 인 &lt;code&gt;stream&lt;/code&gt; 과 함께 &lt;code&gt;addTrack()&lt;/code&gt; 전달 함으로써 스트림에 각 트랙을 추가함으로써 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="570539a8aa79f8bc40bc1f75446088e7f020130c" translate="yes" xml:space="preserve">
          <source>The final step is to call the event's &lt;a href=&quot;paymentrequestupdateevent/updatewith&quot;&gt;&lt;code&gt;updateWith()&lt;/code&gt;&lt;/a&gt; method, passing along the &lt;code&gt;updateDetails&lt;/code&gt; object. This lets the Payment Request API know to present the specified error or errors but to allow the user to keep trying to edit the address.</source>
          <target state="translated">마지막 단계는 이벤트의 &lt;a href=&quot;paymentrequestupdateevent/updatewith&quot;&gt; &lt;code&gt;updateWith()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하여 &lt;code&gt;updateDetails&lt;/code&gt; 객체를 전달하는 것입니다. 이를 통해 지불 요청 API는 지정된 오류를 제시하지만 사용자가 주소를 계속 편집하려고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd241113c1e5c0f46cced24fc28f6d78629fc37a" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; that matches at least one of the specified selectors or &lt;code&gt;null&lt;/code&gt; if no such element is found.</source>
          <target state="translated">지정된 선택기 중 하나 이상과 일치 하는 첫 번째 &lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; 이거나 해당 요소가 없으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="48b993b4eee70e24296cc068e08abb4f45676f1d" translate="yes" xml:space="preserve">
          <source>The first VR gaming attempts were big and expensive &amp;mdash; in 1991 Virtuality Group created a VR-ready arcade machine with goggles and ported popular titles like Pac-Man to virtual reality. Sega introduced their VR glasses at the Consumer Electronics Show in 1993. Companies were experimenting, but the market and consumers weren't convinced &amp;mdash; we had to wait until 2012 to see a real example of a successful VR project.</source>
          <target state="translated">최초의 VR 게임 시도는 크고 비쌌습니다. 1991 년 Virtuality Group은 고글을 갖춘 VR 지원 아케이드 머신을 만들고 Pac-Man과 같은 인기있는 타이틀을 가상 현실로 이식했습니다. Sega는 1993 년 Consumer Electronics Show에서 VR 안경을 선보였습니다. 기업들은 실험을했지만 시장과 소비자는 확신하지 못했습니다. 2012 년까지 기다려야 VR 프로젝트의 성공 사례를 볼 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="84d98db23377209c1bc30f4f2722526baf0d3ab7" translate="yes" xml:space="preserve">
          <source>The first WebVR-related code you'll meet is this following block:</source>
          <target state="translated">만나게 될 첫 번째 WebVR 관련 코드는 다음 블록입니다.</target>
        </trans-unit>
        <trans-unit id="3591de3d1ee4b24c8f6bd5bd5becf7eae3ad1d0a" translate="yes" xml:space="preserve">
          <source>The first and most common way to use constraints is to specify them when you call &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">제약 조건을 사용하는 첫 번째 가장 일반적인 방법은 &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;getUserMedia()&lt;/code&gt; &lt;/a&gt; 를 호출 할 때 제약 조건을 지정하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="331c1b6d80b6c3fc30bec4a4193823b222b3b294" translate="yes" xml:space="preserve">
          <source>The first and most important step is to ensure that your files are comprised of a container and codec that users' browsers support.</source>
          <target state="translated">가장 중요한 첫 번째 단계는 파일이 사용자 브라우저가 지원하는 컨테이너와 코덱으로 구성되어 있는지 확인하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8950b87744377556f8d6d7edb3e9c54abf49f635" translate="yes" xml:space="preserve">
          <source>The first argument must be an Element (passing a non-Element Node, like a #text Node, will throw an error). Starting in Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0), returned URL values now have quotes around the URL, like this: &lt;code&gt;url(&quot;http://foo.com/bar.jpg&quot;)&lt;/code&gt;.</source>
          <target state="translated">첫 번째 인수는 요소 여야합니다 (#text 노드와 같이 비 요소 노드를 전달하면 오류가 발생 함). Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)부터 &lt;code&gt;url(&quot;http://foo.com/bar.jpg&quot;)&lt;/code&gt; 와 같이 URL 주위에 따옴표가 반환되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2cfbc28c7d5f2806b45230c62b15184378f52a30" translate="yes" xml:space="preserve">
          <source>The first block of code in our app&amp;rsquo;s JavaScript file &amp;mdash; &lt;code&gt;app.js&lt;/code&gt; &amp;mdash; is as follows. This is our entry point into using service workers.</source>
          <target state="translated">앱의 JavaScript 파일 인 &lt;code&gt;app.js&lt;/code&gt; 의 첫 번째 코드 블록은 다음과 같습니다. 이것이 바로 서비스 워커 사용의 진입 점입니다.</target>
        </trans-unit>
        <trans-unit id="5f959c2327f01dee2fb370c127fa4bbfbfef53bc" translate="yes" xml:space="preserve">
          <source>The first box has a threshold for each percentage point of visibility; that is, the &lt;a href=&quot;intersectionobserver/thresholds&quot;&gt;&lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt;&lt;/a&gt; array is &lt;code&gt;[0.00, 0.01, 0.02, ..., 0.99, 1.00]&lt;/code&gt;.</source>
          <target state="translated">첫 번째 상자에는 각 가시성 백분율에 대한 임계 값이 있습니다. 즉, &lt;a href=&quot;intersectionobserver/thresholds&quot;&gt; &lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt; &lt;/a&gt; 배열은 &lt;code&gt;[0.00, 0.01, 0.02, ..., 0.99, 1.00]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b55ed6b72e6c7ff3b9e01a406f479b6de87a1388" translate="yes" xml:space="preserve">
          <source>The first byte, which currently has a value of 129, is a bitfield that breaks down as such:</source>
          <target state="translated">현재 값이 129 인 첫 번째 바이트는 다음과 같이 분류되는 비트 필드입니다.</target>
        </trans-unit>
        <trans-unit id="ca43fffdc4d1e175514fde1142052460fae3a8ef" translate="yes" xml:space="preserve">
          <source>The first call fails because the value of &lt;code&gt;useCapture&lt;/code&gt; doesn't match. The second succeeds, since &lt;code&gt;useCapture&lt;/code&gt; matches up.</source>
          <target state="translated">첫 번째 호출은 &lt;code&gt;useCapture&lt;/code&gt; 일치하지 않으므로 . 두 번째는 &lt;code&gt;useCapture&lt;/code&gt; 가 일치 하므로 성공 합니다.</target>
        </trans-unit>
        <trans-unit id="be59595a03723d63c603d9799011c1806e6b5160" translate="yes" xml:space="preserve">
          <source>The first call to &lt;code&gt;setAttribute()&lt;/code&gt; above shows changing the &lt;code&gt;name&lt;/code&gt; attribute's value to &quot;helloButton&quot;. You can see this using your browser's page inspector (&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/inspect-styles&quot;&gt;Chrome&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/f12-devtools-guide/dom-explorer&quot;&gt;Edge&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector&quot;&gt;Firefox&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Introduction/Introduction.html&quot;&gt;Safari&lt;/a&gt;).</source>
          <target state="translated">위의 &lt;code&gt;setAttribute()&lt;/code&gt; 대한 첫 번째 호출 은 &lt;code&gt;name&lt;/code&gt; 속성 값을 &quot;helloButton&quot;으로 변경하는 것을 보여줍니다 . 브라우저의 페이지 관리자 ( &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/inspect-styles&quot;&gt;Chrome&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/f12-devtools-guide/dom-explorer&quot;&gt;Edge&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector&quot;&gt;Firefox)를&lt;/a&gt; 사용하여이를 확인할 수 있습니다. , &lt;a href=&quot;https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Introduction/Introduction.html&quot;&gt;Safari&lt;/a&gt; )를 .</target>
        </trans-unit>
        <trans-unit id="99eaf7c8b732a2b8e8f019d46c798c4a6827d7af" translate="yes" xml:space="preserve">
          <source>The first column in the table will be labeled &lt;code&gt;(index)&lt;/code&gt;. If &lt;code&gt;data&lt;/code&gt; is an array, then its values will be the array indices. If &lt;code&gt;data&lt;/code&gt; is an object, then its values will be the property names. Note that (in Firefox) &lt;code&gt;console.table&lt;/code&gt; is limited to displaying 1000 rows (first row is the labeled index).</source>
          <target state="translated">테이블의 첫 번째 열은 &lt;code&gt;(index)&lt;/code&gt; 로 표시됩니다 . 경우 &lt;code&gt;data&lt;/code&gt; 배열 된 다음 그 값은 어레이 인덱스 될 것이다. 만약 &lt;code&gt;data&lt;/code&gt; 대상이며, 다음의 값은 속성 이름이 될 것입니다. (Firefox에서) &lt;code&gt;console.table&lt;/code&gt; 은 1000 개의 행을 표시하는 것으로 제한됩니다 (첫 번째 행은 레이블이 지정된 인덱스 임).</target>
        </trans-unit>
        <trans-unit id="84b8543c58d7845244cffa26d39a0f08f5c6dd53" translate="yes" xml:space="preserve">
          <source>The first definition looks like this, for example:</source>
          <target state="translated">첫 번째 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="788d6784a71d91536479eaf783074ddf5fc19c03" translate="yes" xml:space="preserve">
          <source>The first descendant element of &lt;code&gt;baseElement&lt;/code&gt; which matches the specified group of &lt;code&gt;selectors&lt;/code&gt;. The entire hierarchy of elements is considered when matching, including those outside the set of elements including &lt;code&gt;baseElement&lt;/code&gt; and its descendants; in other words, &lt;code&gt;selectors&lt;/code&gt; is first applied to the whole document, not the &lt;code&gt;baseElement&lt;/code&gt;, to generate an initial list of potential elements. The resulting elements are then examined to see if they are descendants of &lt;code&gt;baseElement&lt;/code&gt;. The first match of those remaining elements is returned by the &lt;code&gt;querySelector()&lt;/code&gt; method.</source>
          <target state="translated">지정된 &lt;code&gt;selectors&lt;/code&gt; 그룹과 일치하는 &lt;code&gt;baseElement&lt;/code&gt; 의 첫 번째 하위 요소입니다 . &lt;code&gt;baseElement&lt;/code&gt; 및 해당 하위 항목을 포함하여 요소 집합 외부의 요소를 포함하여 요소의 전체 계층 구조가 일치 할 때 고려됩니다 . 다시 말해, &lt;code&gt;selectors&lt;/code&gt; &lt;code&gt;baseElement&lt;/code&gt; 가 아닌 전체 문서에 먼저 적용되어 잠재적 요소의 초기 목록을 생성합니다. 그런 다음 결과 요소는 &lt;code&gt;baseElement&lt;/code&gt; 의 자손인지 검사합니다 . 나머지 요소의 첫 번째 일치는 &lt;code&gt;querySelector()&lt;/code&gt; 의해 리턴됩니다. 메소드에 .</target>
        </trans-unit>
        <trans-unit id="7e568e5722c78c70ce3da97d306917cda9f5ff6f" translate="yes" xml:space="preserve">
          <source>The first example logs text to the console.</source>
          <target state="translated">첫 번째 예는 텍스트를 콘솔에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="48414741b9083c04a7db4bfa41118f573396eda8" translate="yes" xml:space="preserve">
          <source>The first is a background gradient. As you can see, we assigned two colors at the same position. You do this to make very sharp color transitions&amp;mdash;in this case from white to green. Normally, it doesn't matter in what order you define the color stops, but in this special case, it does significantly. If you keep the assignments in the order you want them to appear, this won't be a problem.</source>
          <target state="translated">첫 번째는 배경 그라데이션입니다. 보시다시피, 우리는 같은 위치에 두 가지 색상을 할당했습니다. 이렇게하면 흰색에서 녹색으로 매우 선명한 색상 전환이 이루어집니다. 일반적으로 색상 정지 점을 정의하는 순서는 중요하지 않지만이 특수한 경우에는 중요합니다. 과제를 원하는 순서대로 유지하면 문제가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="df03a278897710c82f9b8a5aabc081e57111fba3" translate="yes" xml:space="preserve">
          <source>The first key to compare.</source>
          <target state="translated">비교할 첫 번째 열쇠.</target>
        </trans-unit>
        <trans-unit id="56c5ac737365711611e9afb70c4b2ab071d9d493" translate="yes" xml:space="preserve">
          <source>The first keyframe says that when the animation begins, the element should be rotated 90&amp;deg; to the left. That means that unless we specify otherwise using the &lt;code&gt;fill&lt;/code&gt; property, the instant the animation is started the element will be rotated to the left 90&amp;deg;, and then it will animate smoothly from there. Since by default the box isn't rotated,</source>
          <target state="translated">첫 번째 키 프레임은 애니메이션이 시작될 때 요소가 왼쪽으로 90 &amp;deg; 회전해야한다고 말합니다. 즉, &lt;code&gt;fill&lt;/code&gt; 사용하여 달리 지정하지 않는 한 속성을 애니메이션이 시작되는 순간 요소가 왼쪽으로 90 &amp;deg; 회전 한 다음 부드럽게 움직입니다. 기본적으로 상자는 회전하지 않기 때문에</target>
        </trans-unit>
        <trans-unit id="12e1545247441aee9395b9fe18c70dea3c04cc7a" translate="yes" xml:space="preserve">
          <source>The first line &amp;mdash; &lt;code&gt;#JSGF V1.0;&lt;/code&gt; &amp;mdash; states the format and version used. This always needs to be included first.</source>
          <target state="translated">첫 번째 줄 &amp;mdash; &lt;code&gt;#JSGF V1.0;&lt;/code&gt; &amp;mdash; 사용 된 형식과 버전을 나타냅니다. 이것은 항상 먼저 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0032b15fcff8370e6da1d2ee862f6b4019957aa1" translate="yes" xml:space="preserve">
          <source>The first line begins at (50, 50) and ends at (200, 50). The second line begins at (50, 90) and ends at (280, 120).</source>
          <target state="translated">첫 번째 줄은 (50, 50)에서 시작하여 (200, 50)에서 끝납니다. 두 번째 줄은 (50, 90)에서 시작하여 (280, 120)에서 끝납니다.</target>
        </trans-unit>
        <trans-unit id="f310f19db24cbc0f13fa489c2f82f957f6e78400" translate="yes" xml:space="preserve">
          <source>The first line demonstrates no settings. The second line might be used to overlay text on a sign or label. The third line might be used for a title. The last line might be used for an Asian language.</source>
          <target state="translated">첫 번째 줄에는 설정이 없습니다. 두 번째 줄은 기호 나 레이블에 텍스트를 오버레이하는 데 사용될 수 있습니다. 세 번째 줄은 제목으로 사용될 수 있습니다. 마지막 줄은 아시아 언어에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8720f6c1fb151d8970e3680f1b8357a23b00d6ef" translate="yes" xml:space="preserve">
          <source>The first line in the script retrieves the node in the DOM representing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element by calling the &lt;a href=&quot;../../document/getelementbyid&quot;&gt;&lt;code&gt;document.getElementById()&lt;/code&gt;&lt;/a&gt; method. Once you have the element node, you can access the drawing context using its &lt;code&gt;getContext()&lt;/code&gt; method.</source>
          <target state="translated">스크립트의 첫 번째 행 은 &lt;a href=&quot;../../document/getelementbyid&quot;&gt; &lt;code&gt;document.getElementById()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소를 나타내는 DOM에서 노드를 검색합니다 . 요소 노드가 있으면 &lt;code&gt;getContext()&lt;/code&gt; 사용하여 그리기 컨텍스트에 액세스 할 수 있습니다. 메소드를 .</target>
        </trans-unit>
        <trans-unit id="ae7c7c03c7360630f867284fc7182182ad3395ec" translate="yes" xml:space="preserve">
          <source>The first line is started with a time, which is the starting time for showing the text that appears underneath</source>
          <target state="translated">첫 번째 줄은 시간으로 시작되며, 이는 아래에 나타나는 텍스트를 표시하기위한 시작 시간입니다.</target>
        </trans-unit>
        <trans-unit id="c762a7e9fc09434c8ef1809437846680dafd5952" translate="yes" xml:space="preserve">
          <source>The first line of WebVTT is standardized similar in the way some other languages require you to put headers as the file starts to indicate the file type. One the very first line you have to write</source>
          <target state="translated">WebVTT의 첫 번째 줄은 파일 형식을 나타 내기 시작할 때 다른 언어에서 헤더를 넣도록 요구하는 방식과 비슷하게 표준화되어 있습니다. 하나는 가장 먼저 쓸 줄입니다.</target>
        </trans-unit>
        <trans-unit id="85eb65ea5aca3a19a2efd2f1831b0b0802e8a5d9" translate="yes" xml:space="preserve">
          <source>The first line of code in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event handler shown below takes the channel from the event object and saves it locally for use by the code handling data traffic.</source>
          <target state="translated">아래에 표시된 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러 의 첫 번째 코드 행은 이벤트 오브젝트에서 채널을 가져와 코드 처리 데이터 트래픽에서 사용하기 위해 로컬로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="814bacfed31bb1772ed089a172a9fc56132d192c" translate="yes" xml:space="preserve">
          <source>The first line of our &lt;code&gt;ontrack&lt;/code&gt; event handler takes the first stream in the incoming track and sets the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attribute to that. This connects that stream of video to the element so that it begins to be presented to the user. The second line of code simply enables a &quot;hang up&quot; button, which the user can use to disconnect from the call.</source>
          <target state="translated">&lt;code&gt;ontrack&lt;/code&gt; 이벤트 핸들러 의 첫 번째 줄은 들어오는 트랙에서 첫 번째 스트림을 가져 와서 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; 를 설정합니다 속성을 . 이것은 비디오 스트림을 요소에 연결하여 사용자에게 제공되기 시작합니다. 두 번째 코드 줄은 단순히 &quot;전화 끊기&quot;버튼을 활성화하여 사용자가 통화 연결을 끊는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1eccd03321a1a3ca70c68f6dcf86895e6f82b2d1" translate="yes" xml:space="preserve">
          <source>The first matrix discussed below is the model matrix, which defines how you take your original model data and move it around in 3d world space. In order to take world space coordinates and move them into the clip space cube, a projection matrix is needed. A common matrix used for projection is the perspective matrix, which mimics the effects of a typical camera. Finally if you want to move the camera around, a view matrix is needed to define the location of the camera in the scene.</source>
          <target state="translated">아래에서 논의되는 첫 번째 행렬은 모델 행렬로, 원본 모델 데이터를 가져와 3D 월드 공간에서 이동하는 방법을 정의합니다. 월드 공간 좌표를 가져 와서 클립 공간 큐브로 이동하려면 투영 행렬이 필요합니다. 프로젝션에 사용되는 일반적인 매트릭스는 일반적인 카메라의 효과를 모방 한 투시 매트릭스입니다. 마지막으로 카메라를 움직이려면 장면에서 카메라의 위치를 ​​정의하기 위해 뷰 매트릭스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8c46dc496bf04ad9c6faaadb9ecd69a6d6f71470" translate="yes" xml:space="preserve">
          <source>The first notable code is as follows:</source>
          <target state="translated">주목할만한 첫 번째 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b88b7739664f5b7b87ce008264e7879d9a49a5cb" translate="yes" xml:space="preserve">
          <source>The first object can contain up to five members, only the first of which is required:</source>
          <target state="translated">첫 번째 개체는 최대 5 개의 멤버를 포함 할 수 있으며 첫 번째 멤버 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0ba52a20378945a7c52cad1f3de86e43f721726f" translate="yes" xml:space="preserve">
          <source>The first object can contain up to four members, all of which are optional:</source>
          <target state="translated">첫 번째 개체는 최대 4 개의 멤버를 포함 할 수 있으며 모두 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="49c6f93028565865ddb86377d4c5e7363ac609e7" translate="yes" xml:space="preserve">
          <source>The first of the transformation methods we'll look at is &lt;code&gt;translate()&lt;/code&gt;. This method is used to move the canvas and its origin to a different point in the grid.</source>
          <target state="translated">우리가 살펴볼 첫 번째 변환 방법은 &lt;code&gt;translate()&lt;/code&gt; 입니다. 이 방법은 캔버스와 원점을 그리드의 다른 지점으로 이동하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0663eafe01d74cd0ec5c9a55b98a40413018a3ef" translate="yes" xml:space="preserve">
          <source>The first of these three (&lt;code&gt;supportedInstruments&lt;/code&gt; in the example below) contains a &lt;code&gt;data&lt;/code&gt; property that has to conform to the structure defined by the &lt;a href=&quot;basiccardrequest&quot;&gt;&lt;code&gt;BasicCardRequest&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="translated">이 세 가지 중 첫 번째 ( 아래 예에서 &lt;code&gt;supportedInstruments&lt;/code&gt; )에는 &lt;a href=&quot;basiccardrequest&quot;&gt; &lt;code&gt;BasicCardRequest&lt;/code&gt; &lt;/a&gt; 사전에 정의 된 구조를 준수 해야하는 &lt;code&gt;data&lt;/code&gt; 속성이 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dff69f57fd921105cbdd3324668330cb01e2c34b" translate="yes" xml:space="preserve">
          <source>The first of these three (&lt;code&gt;supportedInstruments&lt;/code&gt; in the example below) contains a &lt;code&gt;data&lt;/code&gt; property that has to conform to the structure defined by the &lt;code&gt;BasicCardRequest&lt;/code&gt; dictionary.</source>
          <target state="translated">이 세 가지 중 첫 번째 ( 아래 예에서 &lt;code&gt;supportedInstruments&lt;/code&gt; )에는 &lt;code&gt;BasicCardRequest&lt;/code&gt; 사전에 정의 된 구조를 준수 해야하는 &lt;code&gt;data&lt;/code&gt; 속성이 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="324e8636181eff63275fedac32484dc4bb32178d" translate="yes" xml:space="preserve">
          <source>The first of three properties that declare the USB protocol version supported by the device.</source>
          <target state="translated">장치가 지원하는 USB 프로토콜 버전을 선언하는 세 가지 속성 중 첫 번째 속성입니다.</target>
        </trans-unit>
        <trans-unit id="8bcc9c9f16fe7cfff6c58038c277f32e05b28e9f" translate="yes" xml:space="preserve">
          <source>The first panel on the left contains two components: a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, which will receive the stream from WebRTC, and a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; the user clicks to capture a video frame.</source>
          <target state="translated">왼쪽의 첫 번째 패널에는 WebRTC에서 스트림을 수신 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소와 사용자가 비디오 프레임을 캡처하기 위해 클릭 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt; 의 두 가지 구성 요소가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb12318e19ba283ab4a766a97df70ee2463af95d" translate="yes" xml:space="preserve">
          <source>The first row will be used specially for the site header. The rows are sized the same way as the columns: the first one is automatically sized and the one uses the remaining space, but at least enough space to provide room for all elements within it.</source>
          <target state="translated">첫 번째 행은 사이트 헤더에 특별히 사용됩니다. 행은 열과 같은 방식으로 크기가 조정됩니다. 첫 번째 행은 자동으로 크기가 조정되고 나머지 공간은 사용하지만 나머지 공간을 사용하지만 그 안에있는 모든 요소를위한 공간을 제공하기에 충분한 공간이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a998a25838e2f1a0b424915fd35a349e54c8cfe5" translate="yes" xml:space="preserve">
          <source>The first section of the JavaScript code establishes some variables we'll be using. &lt;code&gt;shipSize&lt;/code&gt; contains the size of the ship the player is moving around, for convenience. &lt;code&gt;position&lt;/code&gt; is used to track the position of the ship within the play field. &lt;code&gt;moveRate&lt;/code&gt; and &lt;code&gt;turnRate&lt;/code&gt; are the number of pixels forward and backward each keystroke moves the ship and how many degrees of rotation the left and right steering controls apply per keystroke. angle is the current amount of rotation applied to the ship, in degrees; it starts at 0&amp;deg; (pointing straight up). Finally, &lt;code&gt;spaceship&lt;/code&gt; is set to refer to the element with the ID &lt;code&gt;&quot;spaceship&quot;&lt;/code&gt;, which is the SVG polygon representing the ship the player controls.</source>
          <target state="translated">JavaScript 코드의 첫 번째 섹션에서는 사용할 변수를 설정합니다. &lt;code&gt;shipSize&lt;/code&gt; 에는 편의상 플레이어가 이동중인 선박의 크기가 포함됩니다. &lt;code&gt;position&lt;/code&gt; 은 플레이 필드 내에서 선박의 위치를 ​​추적하는 데 사용됩니다. &lt;code&gt;moveRate&lt;/code&gt; 및 &lt;code&gt;turnRate&lt;/code&gt; 는 각 키 스트로크가 선박을 이동하는 전후방 픽셀 수와 키 스트로크 당 왼쪽 및 오른쪽 조향 컨트롤이 적용되는 회전 각도입니다. 각도는 선박에 적용되는 현재 회 전량 (도)입니다. 0 &amp;deg;에서 시작합니다 (똑바로 위를 가리킴). 마지막으로 &lt;code&gt;spaceship&lt;/code&gt; 은 플레이어가 조종하는 함선을 나타내는 SVG 다각형 인 ID &lt;code&gt;&quot;spaceship&quot;&lt;/code&gt; 가진 요소를 참조하도록 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="aa4f6aad281236508bdc5dd1e595f70c65b32150" translate="yes" xml:space="preserve">
          <source>The first simple example returns a reference to the HTML/document node:</source>
          <target state="translated">첫 번째 간단한 예는 HTML / 문서 노드에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ade840b580aecdd53b7e0528de1f70732e92c821" translate="yes" xml:space="preserve">
          <source>The first step is to clear the canvas to our background color; then we establish the camera's perspective. We set a field of view of 45&amp;deg;, with a width to height ratio that match the display dimensions of our canvas. We also specify that we only want objects between 0.1 and 100 units from the camera to be rendered.</source>
          <target state="translated">첫 번째 단계는 캔버스를 배경색으로 지우는 것입니다. 카메라의 관점을 설정합니다. 캔버스의 디스플레이 크기와 일치하는 너비 대 높이 비율로 시야각을 45 &amp;deg;로 설정했습니다. 또한 카메라에서 0.1에서 100 단위 사이의 객체 만 렌더링되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a8f304eae576b4ee0032e287dae3d42260f7c1bc" translate="yes" xml:space="preserve">
          <source>The first step is to create the &quot;local&quot; end of the connection. This is the peer that will send out the connection request. The next step is to create the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; by calling &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; and set up event listeners to monitor the channel so that we know when it's opened and closed (that is, when the channel is connected or disconnected within that peer connection).</source>
          <target state="translated">첫 번째 단계는 연결의 &quot;로컬&quot;끝을 만드는 것입니다. 연결 요청을 보낼 피어입니다. 다음 단계는 &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt; 을 생성하고 채널이 언제 닫히는 지 (즉, 해당 피어 연결 내에서 채널이 연결 또는 연결 해제 될 때) 알 수 있도록 채널을 모니터링하도록 이벤트 리스너를 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0062939136a14fb605806e1485b434b162f86150" translate="yes" xml:space="preserve">
          <source>The first step is to create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element that we'll use to retrieve the video frames:</source>
          <target state="translated">첫 번째 단계는 비디오 프레임을 검색하는 데 사용할 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 를 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4e407d9cacc94b5b5551fdec66bd790651bdb8d8" translate="yes" xml:space="preserve">
          <source>The first step is to draw a large rectangle with the default settings. Next we save this state and make changes to the fill color. We then draw the second and smaller blue rectangle and save the state. Again we change some drawing settings and draw the third semi-transparent white rectangle.</source>
          <target state="translated">첫 번째 단계는 기본 설정으로 큰 사각형을 그리는 것입니다. 다음으로이 상태를 저장하고 채우기 색상을 변경합니다. 그런 다음 두 번째 작은 파란색 사각형을 그리고 상태를 저장합니다. 다시 일부 도면 설정을 변경하고 세 번째 반투명 흰색 사각형을 그립니다.</target>
        </trans-unit>
        <trans-unit id="207764676e9c61ea662fca3178dfee2bab5d6ed7" translate="yes" xml:space="preserve">
          <source>The first step is to establish a drop zone. Exactly what part of your content will accept drops may vary depending on the design of your application, but making an element receive drop events is easy:</source>
          <target state="translated">첫 번째 단계는 드롭 존을 설정하는 것입니다. 정확히 어떤 콘텐츠 부분에서 방울을 허용할지는 응용 프로그램의 디자인에 따라 다를 수 있지만 요소가 방울 이벤트를 받도록 만드는 것은 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="5a6684de2548095891a9f0ad19ae35c2cb392ae9" translate="yes" xml:space="preserve">
          <source>The first step to create a path is to call the &lt;code&gt;beginPath()&lt;/code&gt;. Internally, paths are stored as a list of sub-paths (lines, arcs, etc) which together form a shape. Every time this method is called, the list is reset and we can start drawing new shapes.</source>
          <target state="translated">경로를 만드는 첫 번째 단계는 &lt;code&gt;beginPath()&lt;/code&gt; 를 호출하는 것 입니다. 내부적으로 경로는 함께 모양을 형성하는 하위 경로 (선, 호 등) 목록으로 저장됩니다. 이 메소드가 호출 될 때마다 목록이 재설정되고 새로운 도형 그리기를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="063a9c8226e5d39039546cedc5b82e4e70c60028" translate="yes" xml:space="preserve">
          <source>The first thing that needs to be done in order to draw a frame of the animation is to clear the background to the desired color. In this case, we set the viewport based on the size of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, call &lt;a href=&quot;../webglrenderingcontext/clearcolor&quot;&gt;&lt;code&gt;clearColor()&lt;/code&gt;&lt;/a&gt; to set the color to use when clearing content, then we clear the buffer with &lt;a href=&quot;../webglrenderingcontext/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">애니메이션의 프레임을 그리려면 가장 먼저해야 할 일은 배경을 원하는 색상으로 지우는 것입니다. 이 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 의 크기를 기준으로 뷰포트 를 설정하고 &lt;a href=&quot;../webglrenderingcontext/clearcolor&quot;&gt; &lt;code&gt;clearColor()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 내용을 지울 때 사용할 색상을 설정 한 다음 &lt;a href=&quot;../webglrenderingcontext/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt; 버퍼를 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="72cb0ebc88a5c4036599a647e321be8f9d4a7830" translate="yes" xml:space="preserve">
          <source>The first thing the callback does is check to see if the video is even playing; if it's not, the callback returns immediately without doing anything.</source>
          <target state="translated">콜백이하는 첫 번째 일은 비디오가 재생 중인지 확인하는 것입니다. 그렇지 않으면 콜백은 아무것도하지 않고 즉시 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8693740eea5f6abbaf373c983e5de198aafbe2f9" translate="yes" xml:space="preserve">
          <source>The first thing to do is add code to load the textures. In our case, we'll be using a single texture, mapped onto all six sides of our rotating cube, but the same technique can be used for any number of textures.</source>
          <target state="translated">가장 먼저 할 일은 텍스처를로드하는 코드를 추가하는 것입니다. 이 경우 회전 큐브의 6면 모두에 매핑 된 단일 텍스처를 사용하지만 동일한 수의 텍스처에 동일한 기술을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b7f9205cd8c72fdf57651e4619e5c2502b4e02c" translate="yes" xml:space="preserve">
          <source>The first thing to do is update the vertex shader so it generates a shading value for each vertex based on the ambient lighting as well as the directional lighting. Let's take a look at the code:</source>
          <target state="translated">가장 먼저해야 할 일은 정점 셰이더를 업데이트하여 주변 조명과 방향 조명을 기반으로 각 정점에 대한 음영 값을 생성하는 것입니다. 코드를 살펴 보자.</target>
        </trans-unit>
        <trans-unit id="77ce80f3b2f2f8ebbfc8f86367fabf0eef60182b" translate="yes" xml:space="preserve">
          <source>The first thing we do here is obtain a reference to the canvas, assigning it to a variable named &lt;code&gt;canvas&lt;/code&gt;.</source>
          <target state="translated">우리가 여기서 할 첫 번째 일은라는 변수에 할당, 캔버스에 대한 참조를 얻을 수 있습니다 &lt;code&gt;canvas&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7bea653c8205f818f029e7042b96bfc967e8d1d" translate="yes" xml:space="preserve">
          <source>The first thing we do is transform the normal based on the current orientation of the cube, by multiplying the vertex's normal by the normal matrix. We can then compute the amount of directional lighting that needs to be applied to the vertex by calculating the dot product of the transformed normal and the directional vector (that is, the direction from which the light is coming). If this value is less than zero, then we pin the value to zero, since you can't have less than zero light.</source>
          <target state="translated">가장 먼저 할 일은 정점의 법선에 법선 행렬을 곱하여 큐브의 현재 방향에 따라 법선을 변환하는 것입니다. 그런 다음 변환 된 법선의 점 곱과 방향 벡터 (즉, 빛이 들어오는 방향)를 계산하여 정점에 적용해야하는 방향 조명의 양을 계산할 수 있습니다. 이 값이 0보다 작 으면 조명이 0보다 작을 수 없으므로 값을 0으로 고정합니다.</target>
        </trans-unit>
        <trans-unit id="77852bdf723ba997cd81a7d39a590572ce9a606c" translate="yes" xml:space="preserve">
          <source>The first thing we need is to create a &lt;a href=&quot;keyframe_formats&quot;&gt;Keyframe Object&lt;/a&gt; corresponding to our CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt; block:</source>
          <target state="translated">가장 먼저 필요한 것은 CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt; 블록에 해당 하는 &lt;a href=&quot;keyframe_formats&quot;&gt;Keyframe 객체&lt;/a&gt; 를 만드는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="a7d1fc5114cdf309756a426f29260d53da95c62e" translate="yes" xml:space="preserve">
          <source>The first thing we need to do is generate the array of normals for all the vertices that comprise our cube. Since a cube is a very simple object, this is easy to do; obviously for more complex objects, calculating the normals will be more involved.</source>
          <target state="translated">가장 먼저해야 할 일은 큐브를 구성하는 모든 정점에 대한 법선 배열을 생성하는 것입니다. 큐브는 매우 간단한 개체이므로 쉽게 수행 할 수 있습니다. 더 복잡한 객체의 경우 법선을 계산하는 것이 더 복잡합니다.</target>
        </trans-unit>
        <trans-unit id="55d175edecccbfd3a880db1fc61649487256a546" translate="yes" xml:space="preserve">
          <source>The first thing you need in order to use WebGL for rendering is a canvas. The HTML fragment below declares a canvas that our sample will draw into.</source>
          <target state="translated">렌더링에 WebGL을 사용하기 위해 가장 먼저 필요한 것은 캔버스입니다. 아래의 HTML 조각은 샘플이 그릴 캔버스를 선언합니다.</target>
        </trans-unit>
        <trans-unit id="19a3d52a59d032cdbf11ded6025dc61908af8c3c" translate="yes" xml:space="preserve">
          <source>The first thing you'll want to do with almost all of the requests you generate is to add success and error handlers:</source>
          <target state="translated">생성하는 거의 모든 요청으로 가장 먼저 할 일은 성공 및 오류 처리기를 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="eee14c558540f5f107e55b1cedcd9cd0b3768376" translate="yes" xml:space="preserve">
          <source>The first three of these event handlers are required; you have to handle them to do anything involving streamed media with WebRTC. The rest aren't strictly required but can be useful, and we'll explore them. There are a few other events available that we're not using in this example, as well. Here's a summary of each of the event handlers we will be implementing:</source>
          <target state="translated">이 이벤트 핸들러 중 처음 세 개가 필요합니다. WebRTC를 사용하여 스트리밍 미디어와 관련된 모든 작업을 수행해야합니다. 나머지는 엄격하게 요구되지는 않지만 유용 할 수 있으므로 살펴 보겠습니다. 이 예에서는 사용하지 않는 몇 가지 다른 이벤트도 있습니다. 다음은 구현할 각 이벤트 핸들러에 대한 요약입니다.</target>
        </trans-unit>
        <trans-unit id="a2098a43f643599fe2d4fbd1f0fd80cf441d747c" translate="yes" xml:space="preserve">
          <source>The first two arcs create the face's eyes. The last arc creates the mouth.</source>
          <target state="translated">처음 두 개의 호는 얼굴의 눈을 만듭니다. 마지막 호는 입을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="60718c67064461436d741d3fd820665d6d80ee99" translate="yes" xml:space="preserve">
          <source>The first type of constructor (see above) creates a completely new &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt; object instance. Its parameters are:</source>
          <target state="translated">첫 번째 유형의 생성자 (위 참조)는 완전히 새로운 &lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffect&lt;/code&gt; &lt;/a&gt; 객체 인스턴스를 만듭니다 . 매개 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa546f8f27bb41b5a3c8960b9a781c92776c998b" translate="yes" xml:space="preserve">
          <source>The first, basic, example just serializes an entire document into a string containing XML.</source>
          <target state="translated">첫 번째 기본 예제는 전체 문서를 XML이 포함 된 문자열로 직렬화합니다.</target>
        </trans-unit>
        <trans-unit id="77b1a43231322655a850d2ff2cfe117cd856cae2" translate="yes" xml:space="preserve">
          <source>The focus event is raised when the user sets focus on the given element.</source>
          <target state="translated">사용자가 주어진 요소에 초점을 설정하면 포커스 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c7a05c0489240d6580075e9fbbd2b8853a2e6e73" translate="yes" xml:space="preserve">
          <source>The focus of a selection is the end point of the selection. When making a selection with a mouse, the focus is where in the document the mouse button is released. As the user changes the selection using the mouse or the keyboard, the focus is the end of the selection that moves.&lt;strong&gt; Note:&lt;/strong&gt; This is not the same as the focused &lt;em&gt;element&lt;/em&gt; of the document, as returned by &lt;a href=&quot;documentorshadowroot/activeelement&quot;&gt;&lt;code&gt;document.activeElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택의 초점은 선택의 끝점입니다. 마우스로 선택하면 문서에서 마우스 버튼을 놓는 위치에 초점이 맞춰집니다. 사용자가 마우스 또는 키보드를 사용하여 선택을 변경하면 초점이 이동하는 선택의 끝입니다. &lt;strong&gt;참고 :&lt;/strong&gt; 이것은 document.activeElement에 의해 반환되는 &lt;a href=&quot;documentorshadowroot/activeelement&quot;&gt; &lt;code&gt;document.activeElement&lt;/code&gt; &lt;/a&gt; 의 포커스 된 &lt;em&gt;요소&lt;/em&gt; 와 동일하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6f56d6b8d689bd2fcf50d0223d3e45857570e470" translate="yes" xml:space="preserve">
          <source>The follow-up panel</source>
          <target state="translated">후속 패널</target>
        </trans-unit>
        <trans-unit id="430a2cd34bce7e790b11b7ba7c9852617c29977c" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event handler calls &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; to turn off the browser's default drag and drop handler.</source>
          <target state="translated">다음 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러는 &lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 브라우저의 기본 드래그 앤 드롭 핸들러를 끕니다.</target>
        </trans-unit>
        <trans-unit id="6df8775ab4000277f7c015378ca4cc89f1b0442b" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;AudioNode&lt;/code&gt; children default to this value</source>
          <target state="translated">다음 &lt;code&gt;AudioNode&lt;/code&gt; 자식은이 값을 기본값으로 사용합니다</target>
        </trans-unit>
        <trans-unit id="b150fd49b07c76c7ae14da01f587ecaa7728e16f" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;computeViewMatrix()&lt;/code&gt; method animates the view matrix by moving it in and out, and left and right.</source>
          <target state="translated">다음 &lt;code&gt;computeViewMatrix()&lt;/code&gt; 메서드는 뷰 매트릭스를 좌우로 움직여 뷰 애니메이션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="039e8f3c9160d04661fa2124421015225f8a61f6" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;get()&lt;/code&gt; function will only return the first &lt;code&gt;username&lt;/code&gt; value appended:</source>
          <target state="translated">다음 &lt;code&gt;get()&lt;/code&gt; 함수는 추가 된 첫 번째 &lt;code&gt;username&lt;/code&gt; 값만 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e156f2a1f42585e7d2f4f5e3aaec4ea9ca939da0" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;getAll()&lt;/code&gt; function will return both &lt;code&gt;username&lt;/code&gt; values in an array:</source>
          <target state="translated">다음 &lt;code&gt;getAll()&lt;/code&gt; 함수는 두 &lt;code&gt;username&lt;/code&gt; 값을 배열로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="faecd11c0a75eaef9b48a40c5d251627dd4aea4f" translate="yes" xml:space="preserve">
          <source>The following CSS styles our example content.</source>
          <target state="translated">다음 CSS는 예제 컨텐츠의 스타일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2fc34dcabc4882dc34ab3bb284e340584bd82662" translate="yes" xml:space="preserve">
          <source>The following JavaScript code checks whether &lt;code&gt;margin&lt;/code&gt; is marked as important in a CSS selector rule:</source>
          <target state="translated">다음 JavaScript 코드는 CSS 선택기 규칙에서 &lt;code&gt;margin&lt;/code&gt; 이 중요로 표시되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="38406b5e895456e23f4860dfaf2a5e4d18dad538" translate="yes" xml:space="preserve">
          <source>The following JavaScript code gets an object containing the computed RGB values of the &lt;code&gt;color&lt;/code&gt; CSS property:</source>
          <target state="translated">다음 JavaScript 코드는 &lt;code&gt;color&lt;/code&gt; CSS 속성 의 계산 된 RGB 값을 포함하는 객체를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="22cfa8ee8aaf69a0d411882feaa074cc8b566ac9" translate="yes" xml:space="preserve">
          <source>The following JavaScript code gets the parent CSS style rule from a &lt;a href=&quot;../cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">다음 JavaScript 코드는 &lt;a href=&quot;../cssstyledeclaration&quot;&gt; &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; &lt;/a&gt; 에서 부모 CSS 스타일 규칙을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="bc4d3fce0f346bd0ad1bae4e1de92e03adcad50c" translate="yes" xml:space="preserve">
          <source>The following JavaScript code is stored in the &quot;fibonacci.js&quot; file referenced by the HTML in the next section.</source>
          <target state="translated">다음 JavaScript 코드는 다음 섹션에서 HTML이 참조하는 &quot;fibonacci.js&quot;파일에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="50412f81043c8d74ca0cefee68b215adab69e01b" translate="yes" xml:space="preserve">
          <source>The following JavaScript code queries the value of the &lt;code&gt;margin&lt;/code&gt; property in a CSS selector rule:</source>
          <target state="translated">다음 JavaScript 코드 는 CSS 선택기 규칙에서 &lt;code&gt;margin&lt;/code&gt; 속성 값을 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="45913e0025c23b35f14bbe901be2f58b23f757f2" translate="yes" xml:space="preserve">
          <source>The following JavaScript code removes the &lt;code&gt;background-color&lt;/code&gt; CSS property from a selector rule:</source>
          <target state="translated">다음 JavaScript 코드는 선택기 규칙에서 &lt;code&gt;background-color&lt;/code&gt; CSS 속성을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="8d91e24500469ecb9c82d52fc101ca3a14d4166d" translate="yes" xml:space="preserve">
          <source>The following JavaScript code sets a new value for the &lt;code&gt;border-width&lt;/code&gt; CSS property on a selector rule:</source>
          <target state="translated">다음 JavaScript 코드는 선택기 규칙 에서 &lt;code&gt;border-width&lt;/code&gt; CSS 속성에 새 값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="2dd6542222dede66d988926a0fe318bf49dd8290" translate="yes" xml:space="preserve">
          <source>The following additions to the &lt;a href=&quot;service_worker_api&quot;&gt;Service Worker API&lt;/a&gt; have been specified in the Push API spec to provide an entry point for using Push messages. They also monitor and respond to push and subscription change events.</source>
          <target state="translated">푸시 메시지 사용에 대한 진입 점을 제공하기 위해 &lt;a href=&quot;service_worker_api&quot;&gt;서비스 API API에&lt;/a&gt; 다음 추가 사항 이 푸시 API 사양에 지정되었습니다. 또한 푸시 및 구독 변경 이벤트를 모니터링하고 이에 응답합니다.</target>
        </trans-unit>
        <trans-unit id="d5a466234281074801c2e2787cfc06cc0acabb36" translate="yes" xml:space="preserve">
          <source>The following are event handlers (and their corresponding event handler event types) which must be supported, as event handler IDL attributes, by objects implementing the &lt;a href=&quot;https://www.w3.org/TR/2016/CR-presentation-api-20160714/#idl-def-presentationrequest&quot;&gt;&lt;code&gt;PresentationRequest&lt;/code&gt;&lt;/a&gt; interface:</source>
          <target state="translated">다음은 &lt;a href=&quot;https://www.w3.org/TR/2016/CR-presentation-api-20160714/#idl-def-presentationrequest&quot;&gt; &lt;code&gt;PresentationRequest&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 객체에 의해 이벤트 핸들러 IDL 속성으로 지원되어야하는 이벤트 핸들러 및 해당 이벤트 핸들러 이벤트 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="ca3425b1c140e84b56345fa4c0569cf1eb9a345d" translate="yes" xml:space="preserve">
          <source>The following attribute has been added: &lt;code&gt;menu&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;menu&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="196d63ae2327a694814be8b448c0c0471587918f" translate="yes" xml:space="preserve">
          <source>The following attributes have been added: &lt;code&gt;autofocus&lt;/code&gt;, &lt;code&gt;formAction&lt;/code&gt;, &lt;code&gt;formEnctype&lt;/code&gt;, &lt;code&gt;formMethod&lt;/code&gt;, &lt;code&gt;formNoValidate&lt;/code&gt;, &lt;code&gt;formTarget&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, &lt;code&gt;validationMessage&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;autofocus&lt;/code&gt; , &lt;code&gt;formAction&lt;/code&gt; , &lt;code&gt;formEnctype&lt;/code&gt; , &lt;code&gt;formMethod&lt;/code&gt; , &lt;code&gt;formNoValidate&lt;/code&gt; , &lt;code&gt;formTarget&lt;/code&gt; , &lt;code&gt;labels&lt;/code&gt; , &lt;code&gt;validity&lt;/code&gt; , &lt;code&gt;validationMessage&lt;/code&gt; 및 &lt;code&gt;willValidate&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="20dd8841b7bbde5acaa3d0e6ed13e0069b6c8c7f" translate="yes" xml:space="preserve">
          <source>The following attributes have been added: &lt;code&gt;autofocus&lt;/code&gt;, &lt;code&gt;placeholder&lt;/code&gt;, &lt;code&gt;dirName&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;maxLength&lt;/code&gt;, &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;textLength&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;selectionStart&lt;/code&gt;, &lt;code&gt;selectionEnd&lt;/code&gt;, &lt;code&gt;selectionDirection&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, &lt;code&gt;validationMessage&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">다음 속성이 추가되었습니다 : &lt;code&gt;autofocus&lt;/code&gt; , &lt;code&gt;placeholder&lt;/code&gt; , &lt;code&gt;dirName&lt;/code&gt; , &lt;code&gt;wrap&lt;/code&gt; , &lt;code&gt;maxLength&lt;/code&gt; , &lt;code&gt;required&lt;/code&gt; , &lt;code&gt;textLength&lt;/code&gt; , &lt;code&gt;labels&lt;/code&gt; , &lt;code&gt;selectionStart&lt;/code&gt; , &lt;code&gt;selectionEnd&lt;/code&gt; 에 , &lt;code&gt;selectionDirection&lt;/code&gt; , &lt;code&gt;validity&lt;/code&gt; , &lt;code&gt;validationMessage&lt;/code&gt; 및 &lt;code&gt;willValidate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5958886151679d2e4a96d3d5c1cbefc33fbb905d" translate="yes" xml:space="preserve">
          <source>The following call selects &lt;code&gt;gl.TEXTURE1&lt;/code&gt; as the current texture. Subsequent calls that modify the texture state will affect this texture.</source>
          <target state="translated">다음 호출은 &lt;code&gt;gl.TEXTURE1&lt;/code&gt; 을 현재 텍스처로 선택합니다 . 텍스처 상태를 수정하는 후속 호출은이 텍스처에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="692e1c402ec7cc757de9b225f15dbc6efeb957e3" translate="yes" xml:space="preserve">
          <source>The following code attaches pre-existing shaders to a &lt;a href=&quot;../webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 코드는 기존 셰이더를 &lt;a href=&quot;../webglprogram&quot;&gt; &lt;code&gt;WebGLProgram&lt;/code&gt; 에 연결&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="07c0a514c23ea5ef3234d15be0ddca240274f592" translate="yes" xml:space="preserve">
          <source>The following code creates a request for a database to be opened asychronously, after which the database is opened when the request's &lt;code&gt;onsuccess&lt;/code&gt; handler is fired:</source>
          <target state="translated">다음 코드는 데이터베이스가 &lt;code&gt;onsuccess&lt;/code&gt; 으로 열리도록 요청을 생성 한 후 요청의 성공 핸들러가 실행될 때 데이터베이스가 열립니다 .</target>
        </trans-unit>
        <trans-unit id="8cb19c9a1efe8804fdb091b2bfc18c69d641e3b1" translate="yes" xml:space="preserve">
          <source>The following code demonstrates creating both 2D and 3D points.</source>
          <target state="translated">다음 코드는 2D 및 3D 점을 모두 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="02b6be469c1e8e4be8af64b3c6609931fea39eb7" translate="yes" xml:space="preserve">
          <source>The following code demonstrates the use of the functions above. It iterates over the children of an element (whose children are all elements) to find the one whose text is &lt;code&gt;&quot;This is the third paragraph&quot;&lt;/code&gt;, and then changes the class attribute and the contents of that paragraph.</source>
          <target state="translated">다음 코드는 위의 기능을 사용하는 방법을 보여줍니다. 요소의 자식 (모든 자식 인 요소)을 반복하여 텍스트가 &lt;code&gt;&quot;This is the third paragraph&quot;&lt;/code&gt; 인 텍스트를 찾은 다음 클래스 특성과 해당 단락의 내용을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="6092562c92a609118336f93b9f0d46545a71db18" translate="yes" xml:space="preserve">
          <source>The following code example demonstrates the use of a JavaScript object following the assertion:</source>
          <target state="translated">다음 코드 예제에서는 어설 션 다음에 JavaScript 객체를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7add4cb234313d7a64f6b6d8334c989eb68f3f57" translate="yes" xml:space="preserve">
          <source>The following code example shows the use of &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;Performance.now()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt; method returns a &lt;em&gt;timestamp&lt;/em&gt; (of type &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt;) that is a discrete point in time. By calling this method before and after a task, the time it takes to do the task can be measured.</source>
          <target state="translated">다음 코드 예제에서는 &lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;Performance.now()&lt;/code&gt; &lt;/a&gt; 메서드 사용을 보여줍니다 . &lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt; 메소드는 반환 &lt;em&gt;소인&lt;/em&gt; (타입 &lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; &lt;/a&gt; 시간 이산 점이다). 작업 전후에이 메소드를 호출하여 작업을 수행하는 데 걸리는 시간을 측정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de6b6a5a55f4a77afb320e3b4be4def705111336" translate="yes" xml:space="preserve">
          <source>The following code gets the precision format of a &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; with a &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; precision type.</source>
          <target state="translated">다음 코드는 &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; 정밀도 유형을 가진 &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; 의 정밀도 형식을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="76c3b93d88f4df998b0679c3d20ee38299be4f57" translate="yes" xml:space="preserve">
          <source>The following code is taken from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;Chrome's Grab Frame - Take Photo Sample&lt;/a&gt;. Since &lt;code&gt;ImageCapture&lt;/code&gt; requires some place to capture an image from, the example below starts with a device's media device (in other words a camera).</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;Chrome의 Grab Frame-Take Photo Sample&lt;/a&gt; 에서 가져온 것입니다 . &lt;code&gt;ImageCapture&lt;/code&gt; 는 이미지를 캡처 할 장소가 필요 하므로 아래 예는 장치의 미디어 장치 (즉, 카메라)로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="39c8d6dd06d844097a2a28f5005649906b84ca4c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-component&lt;/a&gt; 예제 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;실제 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d52376d318549331dfe749e666bba226c099e12c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; 예제 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;실제 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b8637c867255f1eb90613948d7d2faa99a9a6978" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). Note how we use the &lt;a href=&quot;customelementregistry/define&quot;&gt;&lt;code&gt;CustomElementRegistry.define()&lt;/code&gt;&lt;/a&gt; method to define the custom element after creating its class.</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; 예제 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;실제 참조&lt;/a&gt; ). 클래스를 만든 후 &lt;a href=&quot;customelementregistry/define&quot;&gt; &lt;code&gt;CustomElementRegistry.define()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 사용자 지정 요소를 정의하는 방법에 유의하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fa3bd934780dbeadbe97fd790a7aaa6912ed51f" translate="yes" xml:space="preserve">
          <source>The following code sample defines a method on the &lt;code&gt;CubeDemo&lt;/code&gt; object that will create the model matrix. It uses custom functions to create and multiply matrices as defined in the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt; shared code. The new function looks like this:</source>
          <target state="translated">다음 코드 샘플은 모델 매트릭스를 작성하는 &lt;code&gt;CubeDemo&lt;/code&gt; 오브젝트 의 메소드를 정의합니다 . &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt; 공유 코드에 정의 된대로 사용자 정의 함수를 사용하여 행렬을 작성하고 곱 합니다. 새로운 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b6e719942df99d2615faf9f5247f9942c32fba4" translate="yes" xml:space="preserve">
          <source>The following code snippet compares a previously saved pointer id with the identifier of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event that was just fired.</source>
          <target state="translated">다음 코드 스 니펫은 이전에 저장된 포인터 ID를 방금 발생한 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; 이벤트 의 식별자와 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="775c66860654f1a482346d46ae04ed76415aed56" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates the difference between the values obtained using the element's &lt;code&gt;style&lt;/code&gt; property and that obtained using the &lt;code&gt;getComputedStyle()&lt;/code&gt; method:</source>
          <target state="translated">다음 코드 스 니펫은 요소의 &lt;code&gt;style&lt;/code&gt; 속성을 사용하여 얻은 값 과 &lt;code&gt;getComputedStyle()&lt;/code&gt; 메서드를 사용하여 얻은 값의 차이를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9298bde68914cf6707f3e2d818ffd112c34d4610" translate="yes" xml:space="preserve">
          <source>The following code snippet shows &lt;code&gt;worker.js&lt;/code&gt;, in which an &lt;code&gt;onmessage&lt;/code&gt; handler is used to handle messages from the main script. Inside the handler a calculation is done from which a result message is created; this is then sent back to the main thread using &lt;code&gt;postMessage(workerResult);&lt;/code&gt;</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;worker.js&lt;/code&gt; 를 보여줍니다 . &lt;code&gt;onmessage&lt;/code&gt; 핸들러는 기본 스크립트의 메시지를 처리하는 데 사용됩니다. 핸들러 내에서 결과 메시지가 작성되는 계산이 수행됩니다. 그런 다음 &lt;code&gt;postMessage(workerResult);&lt;/code&gt; 사용하여 기본 스레드로 다시 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="f84e1e466d6bde7cf7eb1afd492a36554328cb67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onclose&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드 스 니펫은 작업자 내부에 설정된 &lt;code&gt;onclose&lt;/code&gt; 핸들러를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0a8b4d5b9ae6479895aad9dbd1e192d837527ee0" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onerror&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드를 보여주는 &lt;code&gt;onerror&lt;/code&gt; 노동자 내부 핸들러 세트 :</target>
        </trans-unit>
        <trans-unit id="26c2e6e12bff62f674132dce872aede59a8207ad" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onlanguagechange&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드 스 니펫은 작업자 내부에 설정된 &lt;code&gt;onlanguagechange&lt;/code&gt; 핸들러를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a5da936e6566ad6f261c704691dd7d2ce78f9b17" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onoffline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드 스 니펫은 작업자 내부에 설정된 온 &lt;code&gt;onoffline&lt;/code&gt; 핸들러를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4b52b00d0167dbda85b110225e8b485594ec894e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;ononline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드를 보여주는 &lt;code&gt;ononline&lt;/code&gt; 노동자 내부 핸들러 세트 :</target>
        </trans-unit>
        <trans-unit id="9a575193e3b6b0a60e4c783a9fbc7f6e374694b7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;SharedWorker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;SharedWorker()&lt;/code&gt; 생성자를 사용하여 &lt;a href=&quot;../sharedworker&quot;&gt; &lt;code&gt;SharedWorker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 그 이후의 객체 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="785eff56b7904ef3540f819687a7da47cd632ad7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and setting up of an &lt;code&gt;onerror&lt;/code&gt; handler on the resulting object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 결과 객체에서 &lt;code&gt;onerror&lt;/code&gt; 핸들러를 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="78b1ae7ceeb12798d5ae473746b5fae9596d9c8e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. A &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;Worker.onmessage&lt;/code&gt;&lt;/a&gt; handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만드는 방법을 보여줍니다 . 양식 입력 내부의 값이 &lt;code&gt;first&lt;/code&gt; 변경 되면 메시지가 작업자에게 전달 됩니다. &lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;Worker.onmessage&lt;/code&gt; 의&lt;/a&gt; 핸들러는 메시지가 노동자에서 다시 전달됩니다 다루는 또한 존재한다.</target>
        </trans-unit>
        <trans-unit id="a6a4fd75ef54e0087c447be211a279bf142d2036" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor, which is then immediately terminated.</source>
          <target state="translated">다음 코드 조각은 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만든 다음 즉시 종료되는 과정을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a02745d765c6148ec37a0dd6f786382463ff1b85" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. An onmessage handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만드는 방법을 보여줍니다 . 양식 입력 내부의 값이 &lt;code&gt;first&lt;/code&gt; 변경 되면 메시지가 작업자에게 전달 됩니다. 메시지를 처리하기 위해 onmessage 핸들러도 존재하며 작업자로부터 다시 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="ca44ddd5172033f656a689ae1bb0d67a63839b67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;Worker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;Worker()&lt;/code&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 그 이후의 객체 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="07affcc78a8d1acb22a1aceb23820650d9665a1d" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용 하여 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 해당 객체의 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2956808150f3932960cf6d4904d8de0af14e6b77" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; object using the &lt;code&gt;FileReader()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;FileReader()&lt;/code&gt; 생성자를 사용하여 &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; 오브젝트 작성 및 후속 오브젝트 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fdecd25957058a333fa80ad0b3860361575d9a02" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Multiple scripts can then access the worker through a &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; object accessed using the &lt;code&gt;SharedWorker.port&lt;/code&gt; property &amp;mdash; the port is started using its &lt;code&gt;start()&lt;/code&gt; method:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;code&gt;SharedWorker&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 . 그러면 여러 스크립트가 &lt;code&gt;SharedWorker.port&lt;/code&gt; 속성을 사용하여 액세스 한 &lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; 객체를 통해 작업자에 액세스 할 수 있습니다 . 포트는 &lt;code&gt;start()&lt;/code&gt; 메서드를 사용하여 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="7fef72d3c85f272409a601154a01fc9b4faf6121" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker/sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Both scripts contain this:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;sharedworker/sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;code&gt;SharedWorker&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 . 두 스크립트 모두 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="3b543166718695298820dc044d5e81c7c0e926bd" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how you can measure a text and get its width.</source>
          <target state="translated">다음 코드 스 니펫은 텍스트를 측정하고 너비를 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3f79234f8c9f517e6c44fae4e48b4d13e779d1bb" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. When either of two form inputs (&lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt;) have their values changed, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; events invoke &lt;code&gt;postMessage()&lt;/code&gt; to send the value of both inputs to the current worker.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만드는 방법을 보여줍니다 . 두 양식 입력 ( &lt;code&gt;first&lt;/code&gt; 및 &lt;code&gt;second&lt;/code&gt; ) 중 하나의 값이 변경되면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; events를 호출하여 &lt;code&gt;postMessage()&lt;/code&gt; 를 호출 하여 두 입력의 값을 현재 작업자에게 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b5d39e7325eb2c5b4fcdeb658dbc547caf41bf55" translate="yes" xml:space="preserve">
          <source>The following code snippet will slow down all animations on a page by halving their &lt;a href=&quot;../animation/playbackrate&quot;&gt;&lt;code&gt;Animation.playbackRate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;../animation/playbackrate&quot;&gt; &lt;code&gt;Animation.playbackRate&lt;/code&gt; &lt;/a&gt; 를 반으로 줄여 페이지의 모든 애니메이션 속도를 늦 춥니 다 .</target>
        </trans-unit>
        <trans-unit id="3ca3137616bf2b32c50802fc9cf0145d207d5a43" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;navigator.clipboard&lt;/code&gt; to access the system clipboard in order to read the contents of the clipboard.</source>
          <target state="translated">다음 코드는 &lt;code&gt;navigator.clipboard&lt;/code&gt; 를 사용하여 클립 보드의 내용을 읽기 위해 시스템 클립 보드에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="c346630a666a1c7ab1339f8a30e481800a97a5c4" translate="yes" xml:space="preserve">
          <source>The following code waits until all animations running on the element &lt;code&gt;elem&lt;/code&gt; have finished, then deletes the element from the DOM tree:</source>
          <target state="translated">다음 코드는 요소 &lt;code&gt;elem&lt;/code&gt; 에서 실행중인 모든 애니메이션 이 완료 될 때까지 기다린 다음 DOM 트리에서 요소를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="b9155d2103e72dd3ab11c30554d60373bb32b44f" translate="yes" xml:space="preserve">
          <source>The following code, if included in a page at the root of a site, would apply to exactly the same pages as the example above. Remember the scope, when included, uses the page's location as its base. Alternatively, if this code were included in a page at &lt;code&gt;example.com/product/description.html&lt;/code&gt;, the scope of &lt;code&gt;'./'&lt;/code&gt; would mean that the service worker only applies to resources under &lt;code&gt;example.com/product&lt;/code&gt;. If I needed to register a service worker on &lt;code&gt;example.com/product/description.html&lt;/code&gt; that applied to all of &lt;code&gt;example.com&lt;/code&gt;, I would leave off the scope as above.</source>
          <target state="translated">다음 코드는 사이트 루트의 페이지에 포함 된 경우 위 예제와 정확히 동일한 페이지에 적용됩니다. 포함 된 경우 범위는 페이지의 위치를 ​​기준으로 사용합니다. 또는이 코드가 &lt;code&gt;example.com/product/description.html&lt;/code&gt; 의 페이지에 포함 된 경우 &lt;code&gt;'./'&lt;/code&gt; 범위 는 서비스 워커가 &lt;code&gt;example.com/product&lt;/code&gt; 아래의 리소스에만 적용됨을 의미합니다 . 나는에서 서비스 노동자 등록하기 위해 필요한 경우 &lt;code&gt;example.com/product/description.html&lt;/code&gt; 모두에 적용 &lt;code&gt;example.com&lt;/code&gt; 을 , 나는 위와 같이 범위를 떠날 것이다.</target>
        </trans-unit>
        <trans-unit id="d491fd2b65326bcc2d9548ada2c065f112cca208" translate="yes" xml:space="preserve">
          <source>The following code:</source>
          <target state="translated">다음 코드 :</target>
        </trans-unit>
        <trans-unit id="cb4e5e69ea18c167c5a50d823ab464f0707bbace" translate="yes" xml:space="preserve">
          <source>The following conditions raise an exception:</source>
          <target state="translated">다음과 같은 조건에서는 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ab9ae87765be155d9e9bcac89d20e1e7953183bb" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;sfactor&lt;/em&gt; and &lt;em&gt;dfactor&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;sfactor&lt;/em&gt; 및 &lt;em&gt;dfactor&lt;/em&gt; 에는 다음 상수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce2850370b8167a2cfb32d9defec8e846c8161a3" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;srcRGB&lt;/em&gt;, &lt;em&gt;dstRGB&lt;/em&gt;, &lt;em&gt;srcAlpha&lt;/em&gt;, and &lt;em&gt;dstAlpha&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;srcRGB&lt;/em&gt; , &lt;em&gt;dstRGB&lt;/em&gt; , &lt;em&gt;srcAlpha&lt;/em&gt; 및 &lt;em&gt;dstAlpha에&lt;/em&gt; 다음 상수를 사용할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1bfd67154540d68c74b98a6321b9be4de6783ead" translate="yes" xml:space="preserve">
          <source>The following constants have been deprecated and should not be used anymore.</source>
          <target state="translated">다음 상수는 더 이상 사용되지 않으며 더 이상 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="07ba7334b6e4056b80922f48347622631221d500" translate="yes" xml:space="preserve">
          <source>The following demonstrates a real-world use of the &lt;code&gt;eachNode&lt;/code&gt; function: searching for text on a web-page. We use a wrapper function named &lt;code&gt;grep&lt;/code&gt; to do the searching:</source>
          <target state="translated">다음은 &lt;code&gt;eachNode&lt;/code&gt; 함수를 실제로 사용하는 방법을 보여줍니다 . 웹 페이지에서 텍스트 검색. 검색을 수행하기 위해 &lt;code&gt;grep&lt;/code&gt; 이라는 랩퍼 함수를 ​​사용합니다 .</target>
        </trans-unit>
        <trans-unit id="41461c74510317c4f6145d3b1224ea046fb95f44" translate="yes" xml:space="preserve">
          <source>The following describes the steps that occur during a drag and drop operation.</source>
          <target state="translated">다음은 끌어서 놓기 작업 중에 발생하는 단계를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8ae28d060623c1f98acb168ec0893392f29ec99f" translate="yes" xml:space="preserve">
          <source>The following diagram from the &lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; demonstrates the various baselines supported by the &lt;code&gt;textBaseline&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; 의 다음 다이어그램 은 &lt;code&gt;textBaseline&lt;/code&gt; 속성이 지원하는 다양한 기준을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="168b10292f96e49a74e65557076296df25e53007" translate="yes" xml:space="preserve">
          <source>The following diagram from the &lt;a href=&quot;https://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; demonstrates the various baselines supported by the &lt;code&gt;textBaseline&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d63726f92cadc2f136766602168941477729be" translate="yes" xml:space="preserve">
          <source>The following documents describe how to use touch events and include example code:</source>
          <target state="translated">다음 문서는 터치 이벤트를 사용하는 방법을 설명하고 예제 코드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="2ec4d49e2df92aba478e5086879fbc30de9ab5d1" translate="yes" xml:space="preserve">
          <source>The following elements can use the &lt;code&gt;cx&lt;/code&gt; attribute</source>
          <target state="translated">다음 요소는 &lt;code&gt;cx&lt;/code&gt; 속성을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2c0a9969617d890fe812be742a41a24d2198c718" translate="yes" xml:space="preserve">
          <source>The following equivalence returns &lt;code&gt;true&lt;/code&gt; if an element is at the end of its scroll, &lt;code&gt;false&lt;/code&gt; if it isn't.</source>
          <target state="translated">다음 등가 반환 &lt;code&gt;true&lt;/code&gt; 요소가 그 스크롤의 끝에있는 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="d411998731f7e0069944923912244d337b11d120" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when calling this method.</source>
          <target state="translated">이 메소드를 호출 할 때 다음 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5433af10c3012bba69dc3a9a2920d1481b87028b" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when setting a new value for this property.</source>
          <target state="translated">이 속성에 새 값을 설정할 때 다음 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d094cbed75236d22908ba8793257298d72ebb58" translate="yes" xml:space="preserve">
          <source>The following errors may occur; to check for errors after &lt;code&gt;getUniformLocation()&lt;/code&gt; returns, call &lt;a href=&quot;geterror&quot;&gt;&lt;code&gt;getError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음과 같은 오류가 발생할 수 있습니다. &lt;code&gt;getUniformLocation()&lt;/code&gt; 반환 된 후 오류를 확인하려면 &lt;a href=&quot;geterror&quot;&gt; &lt;code&gt;getError()&lt;/code&gt; &lt;/a&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="533d186fe2d300e6097dcf59eeeb1fa1a74b191f" translate="yes" xml:space="preserve">
          <source>The following events are listed in the spec, but do not currently seem to be implemented anywhere as yet.</source>
          <target state="translated">다음 이벤트는 사양에 나열되어 있지만 현재 어느 곳에서도 구현되지 않은 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="f4da571c91381cb06a937f12193ffcad883aa639" translate="yes" xml:space="preserve">
          <source>The following events can be triggered on an upload object and used to monitor the state of the upload process:</source>
          <target state="translated">다음과 같은 이벤트가 업로드 객체에서 트리거되어 업로드 프로세스의 상태를 모니터링하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da7bbaecae40d9f33dd8a209e99744eb1c0c9592" translate="yes" xml:space="preserve">
          <source>The following example (from the &lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt;) shows a theoretical analytics code that attempts to submit data to a server by using a synchronous XMLHttpRequest in an unload handler. This results in the unloading of the page to be delayed.</source>
          <target state="translated">&lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt; 의 다음 예제 는 언로드 핸들러에서 동기 XMLHttpRequest를 사용하여 서버에 데이터를 제출하려고하는 이론적 분석 코드를 보여줍니다. 이로 인해 페이지 언로드가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="6eccf72506bb36ad8cc98678d998c82dbb302e72" translate="yes" xml:space="preserve">
          <source>The following example adds a &lt;code&gt;ProgressEvent&lt;/code&gt; to a new &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHTTPRequest&lt;/code&gt;&lt;/a&gt; and uses it to display the status of the request.</source>
          <target state="translated">다음 예제에서는 새 &lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHTTPRequest&lt;/code&gt; 에&lt;/a&gt; &lt;code&gt;ProgressEvent&lt;/code&gt; 를 추가하고 이를 사용하여 요청 상태를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0f16b7c83152a8a728921d0884db42ccfe44c6b7" translate="yes" xml:space="preserve">
          <source>The following example autosaves the contents of a text field, and if the browser is accidentally refreshed, restores the text field content so that no writing is lost.</source>
          <target state="translated">다음 예제는 텍스트 필드의 내용을 자동 저장하고 실수로 브라우저를 새로 고치면 텍스트 필드 내용을 복원하여 쓰기가 손실되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="cb6dece3fa9bda3ba581551a33ecb59eac605ce1" translate="yes" xml:space="preserve">
          <source>The following example calls the &lt;code&gt;flashtext()&lt;/code&gt; function once a second until the Stop button is pressed.</source>
          <target state="translated">다음 예제 는 Stop 버튼을 누를 때까지 1 초에 한 번 &lt;code&gt;flashtext()&lt;/code&gt; 함수 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a1a47bfae0d8fb231f36f7aaf8142a231ba68043" translate="yes" xml:space="preserve">
          <source>The following example captures all keypresses.</source>
          <target state="translated">다음 예제는 모든 키 누르기를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="e38813eaf70fc464620e48f4b1063d81bcb72744" translate="yes" xml:space="preserve">
          <source>The following example captures the &quot;W&quot;, &quot;A&quot;, &quot;S&quot;, and &quot;D&quot; keys. It captures these keys regardless of which modifiers are used with the key press. Assuming a standard US QWERTY layout, registering &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; ensures that &quot;W&quot;, Shift+&quot;W&quot;, Control+&quot;W&quot;, Control+Shift+&quot;W&quot;, and all other key modifier combinations with &quot;W&quot; are sent to the app. The same applies to for &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt;, &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; and &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &quot;W&quot;, &quot;A&quot;, &quot;S&quot;및 &quot;D&quot;키를 캡처합니다. 키 누름과 함께 사용되는 수정 자에 관계없이 이러한 키를 캡처합니다. 표준 US QWERTY 레이아웃을 가정 할 때 &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; 를 등록 하면 &quot;W&quot;, Shift + &quot;W&quot;, Control + &quot;W&quot;, Control + Shift + &quot;W&quot;및 &quot;W&quot;와의 다른 모든 키 수정 자 조합이 앱으로 전송됩니다. &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt; , &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt; 에도 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fdf5d1af88595c220201eb81131ed3df7ae8e530" translate="yes" xml:space="preserve">
          <source>The following example causes a newly installed service worker to progress into the &lt;code&gt;activating&lt;/code&gt; state, regardless of whether there is already an active service worker.</source>
          <target state="translated">다음 예제 는 이미 활성화 된 서비스 워커가 있는지 여부에 관계없이 새로 설치된 서비스 워커가 &lt;code&gt;activating&lt;/code&gt; 상태 로 진행되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="f9106ab353d01668f40b8e4a793e8f32b6125408" translate="yes" xml:space="preserve">
          <source>The following example checks all &lt;code&gt;PerformanceEntry&lt;/code&gt; properties to see if the browser supports them and if so, write their values to the console.</source>
          <target state="translated">다음 예제에서는 모든 &lt;code&gt;PerformanceEntry&lt;/code&gt; 속성을 확인하여 브라우저가 해당 속성을 지원하는지 확인하고 해당하는 경우 값을 콘솔에 씁니다.</target>
        </trans-unit>
        <trans-unit id="d356565ed5f3dd072ee4363f9a0d214d6f62ea99" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;a href=&quot;../formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object with an appended &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRF token&lt;/a&gt;. It then stores the form object in the additionalData parameter, before sending it to server in a call to &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRF 토큰&lt;/a&gt; 이 추가 된 &lt;a href=&quot;../formdata&quot;&gt; &lt;code&gt;FormData&lt;/code&gt; &lt;/a&gt; 객체 를 만듭니다 . 그런 다음 &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt; 호출로 양식 객체를 additionalData 매개 변수에 서버에 보내기 전에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="84c8da872076116102ffdc018105267705612bdd" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; handler and when that event is fired, the handler calls &lt;code&gt;sendBeacon()&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; 핸들러 를 작성하고 해당 이벤트가 발생하면 핸들러는 &lt;code&gt;sendBeacon()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9b07dfcd216a3258aa9c76afc3be6a9dbea92c4a" translate="yes" xml:space="preserve">
          <source>The following example creates a new media session and assigns action handlers to it:</source>
          <target state="translated">다음 예제는 새로운 미디어 세션을 생성하고 액션 핸들러를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="75ff81017b5d4e13126fddb621e00510c8761629" translate="yes" xml:space="preserve">
          <source>The following example demonstrates &lt;code&gt;setInterval()&lt;/code&gt;'s basic syntax.</source>
          <target state="translated">다음 예제는 &lt;code&gt;setInterval()&lt;/code&gt; 의 기본 구문을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b143d34a8bda993f3eeed8ce9d5fe04ce5ca3f4a" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how a popup window can change the URL of the window that opened it. Before attempting to change the URL, it checks that the current window has an opener using the &lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt; property and that the opener isn't closed:</source>
          <target state="translated">다음 예제는 팝업 창에서 열린 창의 URL을 변경하는 방법을 보여줍니다. URL을 변경하기 전에 &lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt; 속성을 사용하여 현재 창 에 오프너가 있는지와 오프너가 닫히지 않았는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="96f439883149adbaf9e9a5fb875500f83926d862" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how invalid text input can be stopped from reaching the input field with &lt;code&gt;preventDefault()&lt;/code&gt;. Nowadays, you should usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;native HTML form validation&lt;/a&gt; instead.</source>
          <target state="translated">다음 예제는 &lt;code&gt;preventDefault()&lt;/code&gt; 유효하지 않은 텍스트 입력이 입력 필드에 도달하지 못하게하는 방법을 보여줍니다 . 요즘에는 일반적으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;기본 HTML 양식 유효성 검사를&lt;/a&gt; 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d115a980cf80419a5e42998b96b2fb220ca24575" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to get the location- or layout-specific string associated with the key that corresponds to the 'W' key on an English QWERTY keyboard.</source>
          <target state="translated">다음 예제는 영어 QWERTY 키보드의 'W'키에 해당하는 키와 연관된 위치 또는 레이아웃 특정 문자열을 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6a1f90bebe83ef56f548801b18cc524554e82137" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the usage of these two methods.</source>
          <target state="translated">다음 예제는이 두 가지 방법의 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3d6d7a660f7806ffb3fa5307cb73bf74be7fc6bc" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using these three properties.</source>
          <target state="translated">다음 예제는이 세 가지 속성을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="aad2ea2e1e3c8eaeb54be5a776c3c6ccb948dfbb" translate="yes" xml:space="preserve">
          <source>The following example displays a button to open a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there, either button will close the dialog.</source>
          <target state="translated">다음 예제는 &lt;code&gt;showModal()&lt;/code&gt; 메소드 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 단추를 표시합니다 . 거기에서 두 버튼 중 하나가 대화 상자를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="7d23059d7a9b94c8e97be5c01cd635ee29b89394" translate="yes" xml:space="preserve">
          <source>The following example displays information about the installed plugin(s).</source>
          <target state="translated">다음 예제는 설치된 플러그인에 대한 정보를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="81066703b0caadc4fa0ff211f98b6c7251222695" translate="yes" xml:space="preserve">
          <source>The following example extracts the details from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt; 오브젝트에서 &lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt; 에서 리턴 된 약속으로 세부 사항을 추출합니다 . 실제 구현에서이 데이터는 결제 서버로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="25e39a1e409efa9bbcca7b383c65d562cbfabe47" translate="yes" xml:space="preserve">
          <source>The following example extracts the method name from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt; 오브젝트에서 &lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt; 에서 리턴 된 약속으로 메소드 이름을 추출합니다 . 실제 구현에서이 데이터는 결제 서버로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="dbf470caff1de817651b6cf06db79034f566198d" translate="yes" xml:space="preserve">
          <source>The following example finishes all the animations on a single element, regardless of their direction of playback.</source>
          <target state="translated">다음 예제에서는 재생 방향에 관계없이 모든 요소를 ​​단일 요소에서 마무리합니다.</target>
        </trans-unit>
        <trans-unit id="0b71b2fbef0e5f6700dd695b9f07771024e2d970" translate="yes" xml:space="preserve">
          <source>The following example first checks whether a cache called 'v1' exists. If so, we add a list of assets to it. If not (meaning the &lt;code&gt;has()&lt;/code&gt; promise would reject) then we run some kind of cache set-up function.</source>
          <target state="translated">다음 예제는 먼저 'v1'이라는 캐시가 있는지 확인합니다. 그렇다면 자산 목록을 추가합니다. 그렇지 않은 경우 ( &lt;code&gt;has()&lt;/code&gt; promise가 거부 함을 의미 함 ) 일종의 캐시 설정 함수를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="a567cd1a114322f599117ece33641e09256a1195" translate="yes" xml:space="preserve">
          <source>The following example function returns the version of the Shockwave Flash plugin.</source>
          <target state="translated">다음 예제 함수는 Shockwave Flash 플러그인 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="194490be2e10b4b41e6ede90dbe2c0a1d7326b7d" translate="yes" xml:space="preserve">
          <source>The following example goes through all nodes in the body, reduces the set of nodes to elements, simply passes through as acceptable each node (it could reduce the set in the &lt;code&gt;acceptNode()&lt;/code&gt; method instead), and then makes use of tree walker iterator that is created to advance through the nodes (now all elements) and push them into an array.</source>
          <target state="translated">다음 예제는 본문의 모든 노드를 통과하고 노드 세트를 요소로 줄이고 단순히 허용 가능한 각 노드를 통과합니다 ( &lt;code&gt;acceptNode()&lt;/code&gt; 메소드 의 세트를 대신 줄일 수 있음 ). 그런 다음 트리 워커 반복자를 사용합니다. 노드 (현재 모든 요소)를 통과하여 배열로 밀어 넣기 위해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="db3e9a5322525c5d5ca85411ef8409f9bc0d919c" translate="yes" xml:space="preserve">
          <source>The following example hints that the quality of filtering when generating mipmap images should be most efficient instead of best quality.</source>
          <target state="translated">다음 예제는 밉맵 이미지를 생성 할 때 필터링 품질이 최상의 품질 대신 가장 효율적이어야한다는 것을 암시합니다.</target>
        </trans-unit>
        <trans-unit id="35b51224b0799135bdce530675ce5c8453a3b3bc" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a bound key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; &amp;mdash; a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">다음 예제는 바운드 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; 선언합니다 . &amp;mdash; &quot;A&quot;와 &quot;F&quot;사이의 범위. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 해당 범위 내에 키가있는 레코드 만 검색 함을 의미합니다. 이 범위에는 개방 범위 여야한다고 선언하지 않았으므로 &quot;A&quot;및 &quot;F&quot;값이 포함됩니다. IDBKeyRange.bound ( &quot;A&quot;, &quot;F&quot;, true, true);를 사용하면 범위에는 &quot;A&quot;와 &quot;F&quot;가 포함되지 않으며 그 사이의 값만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ddb30353976928d50d5a53d164c7b0047a41ca3e" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; &amp;mdash; a range that includes everything between &quot;F&quot; and &quot;W&quot; but not including them &amp;mdash; since both the upper and lower bounds have been declared as open (&lt;code&gt;true&lt;/code&gt;). We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">다음 예제는 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; 선언 합니다. 상한과 하한이 모두 개방 ( &lt;code&gt;true&lt;/code&gt; ) 으로 선언되었으므로 &quot;F&quot;와 &quot;W&quot;사이를 포함하지만 범위를 포함하지 않는 범위 입니다. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="b204b38aaabde66e48b16c02660e8fb750ae89b6" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare a &lt;code&gt;keyRangeValue&lt;/code&gt; as a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">다음 예제는 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue&lt;/code&gt; 를 &quot;A&quot;와 &quot;F&quot;값 사이의 범위로 선언합니다 . 트랜잭션 ( &lt;a href=&quot;idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 해당 범위 내에 키가있는 레코드 만 검색 함을 의미합니다. 이 범위에는 개방 범위 여야한다고 선언하지 않았으므로 &quot;A&quot;및 &quot;F&quot;값이 포함됩니다. IDBKeyRange.bound ( &quot;A&quot;, &quot;F&quot;, true, true);를 사용하면 범위에는 &quot;A&quot;와 &quot;F&quot;가 포함되지 않으며 그 사이의 값만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="02f4b77bc763c2252e0525b61c03dbfe8f753566" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a lower bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everthing after it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;F&quot; and all that come after it. If we used &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt;, then the range would not include &quot;F&quot;; only the values after it.</source>
          <target state="translated">다음 예제는 하한 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; 선언합니다 . &amp;mdash; &quot;F&quot;값과 그 이후의 값을 포함하는 범위입니다. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 키 값이 &quot;F&quot;인 레코드와 그 뒤에 오는 모든 레코드 만 검색 함을 의미합니다. &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt; 사용 했다면; 범위는 &quot;F&quot;를 포함하지 않습니다. 그 뒤에 값만 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb7b06a83b98a8307c1918f9823f142d4b61cbf5" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an only key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; &amp;mdash; a range that only includes the value &quot;A&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;A&quot;.</source>
          <target state="translated">다음 예제는 유일한 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; 선언합니다 . &amp;mdash; &quot;A&quot;값만 포함하는 범위입니다. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 키 값이 &quot;A&quot;인 레코드 만 검색 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f81660c916b5714cab9e857713d7d142f8eca7eb" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an upper bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everything before it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">다음 예제는 상한 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; 선언합니다 . &amp;mdash; 값 &quot;F&quot;와 그 이전의 모든 것을 포함하는 범위. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="4e090a3f27eb36a7c6335c49f3de512b8cd5f335" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는이 인터페이스의 여러 기능을 보여줍니다. 사용자 지정 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 을 만드는 방법을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5ed73bdbaf82aa2eccfdf99f72137cfd2afeb74a" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는이 인터페이스의 여러 기능을 보여줍니다. 사용자 지정 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 을 만드는 방법을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8660e7e32ee5dde47e9329ee74093427dbff1047" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, recreating a sine wave from a periodic wave.</source>
          <target state="translated">다음 예제는 &lt;code&gt;createPeriodicWave()&lt;/code&gt; 의 간단한 사용법을 보여 주기 때문에 주기적 웨이브에서 사인파를 재생성합니다.</target>
        </trans-unit>
        <trans-unit id="bab3fad291454de1fc35966fb217fd19aee0b9a1" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">다음 예제 는 간단한 사인파를 포함하는 &lt;a href=&quot;../periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt; 객체 를 만들기 위해 &lt;code&gt;createPeriodicWave()&lt;/code&gt; 의 간단한 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1823a7f0b766ef4dbe854d69b017db28e818b125" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">다음 예제 는 간단한 사인파를 포함하는 &lt;a href=&quot;periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt; 객체 를 만들기 위해 &lt;code&gt;createPeriodicWave()&lt;/code&gt; 의 간단한 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e805d3e838ed10d317e4e32471a16c3d652b48bb" translate="yes" xml:space="preserve">
          <source>The following example illustrates this property's usage.</source>
          <target state="translated">다음 예제는이 속성의 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="78d6f1a441d319a767fb2ee0acd033b95f92146a" translate="yes" xml:space="preserve">
          <source>The following example illustrates using the resource timing properties to calculate the amount of time the following phases take: redirection (&lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt;&lt;code&gt;redirectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt;&lt;code&gt;redirectEnd&lt;/code&gt;&lt;/a&gt; ), DNS lookup (&lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt;&lt;code&gt;domainLookupStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt;&lt;code&gt;domainLookupEnd&lt;/code&gt;&lt;/a&gt;), TCP handshake (&lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt;&lt;code&gt;connectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt;&lt;code&gt;connectEnd&lt;/code&gt;&lt;/a&gt;), and response (&lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt;&lt;code&gt;responseStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This example also calculates the time from the start of the fetch and request start phases (&lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt;&lt;code&gt;fetchStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt;&lt;code&gt;requestStart&lt;/code&gt;&lt;/a&gt;, respectively), until the response has ended (&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This timing data provides a detailed profile of the resource loading phases and this data can be used to help identify performance bottlenecks.</source>
          <target state="translated">다음 예제는 자원 타이밍 특성을 사용하여 경로 재 지정 ( &lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt; &lt;code&gt;redirectStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt; &lt;code&gt;redirectEnd&lt;/code&gt; &lt;/a&gt; ), DNS 조회 ( &lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt; &lt;code&gt;domainLookupStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt; &lt;code&gt;domainLookupEnd&lt;/code&gt; &lt;/a&gt; ), TCP 핸드 셰이크 ( &lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt; &lt;code&gt;connectStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt; &lt;code&gt;connectEnd&lt;/code&gt; &lt;/a&gt; ) 및 응답 ( &lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt; &lt;code&gt;responseStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; &lt;/a&gt; ) 단계에 걸리는 시간을 계산하는 방법을 보여줍니다. . 이 예제는 또한 페치 및 요청 시작 단계의 시작 ( 각각 &lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt; &lt;code&gt;fetchStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt; &lt;code&gt;requestStart&lt;/code&gt; &lt;/a&gt; )에서 응답이 종료 될 때까지의 시간 ( &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; )을 계산합니다.&lt;/a&gt;). 이 타이밍 데이터는 리소스로드 단계에 대한 자세한 프로파일을 제공하며이 데이터를 사용하여 성능 병목 현상을 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe3d3e53544e9413c755229f7715f1249ca26a6f" translate="yes" xml:space="preserve">
          <source>The following example is a little more complex than the ones we've seen above. It draws 12 different arcs all with different angles and fills.</source>
          <target state="translated">다음 예제는 위에서 본 것보다 약간 더 복잡합니다. 각기 다른 각도와 채우기로 12 개의 서로 다른 호를 그립니다.</target>
        </trans-unit>
        <trans-unit id="9091b5147a452e35edfa55027dfd27012dfc464a" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">다음 예제는 우리의 &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionensorvrdevice&lt;/a&gt; 데모 에서 발췌 한 것으로 WebVR API를 사용하여 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 루프 의 각 프레임에서 간단한 &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt; 장면 의 뷰를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="8c9e5c16e4e1cba1dac8c0d2f23753d75b3c3ca7" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">다음 예제는 우리의 &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionensorvrdevice&lt;/a&gt; 데모 에서 발췌 한 것으로 WebVR API를 사용하여 &lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 루프 의 각 프레임에서 간단한 &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt; 장면 의 뷰를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="a73ee493927b61af16297c354a50245955261d69" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; demo (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). You can see that we use &lt;code&gt;attachShadow()&lt;/code&gt; in the middle of the code to create a shadow root, which we then attach our custom element's contents to.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; 데모 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;실제 참조&lt;/a&gt; ). 당신은 우리가 사용하는 것을 볼 수 있습니다 &lt;code&gt;attachShadow()&lt;/code&gt; 우리가 다음 우리의 사용자 정의 요소의 내용을 첨부 그림자 루트를 만들 코드의 중간에.</target>
        </trans-unit>
        <trans-unit id="27237dac61ebabd3ac7aafdb0a8fd9b70dac05f8" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2899fbc7afb781eb94370e94f0d5c8355aa2f07" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9378cdd85dabef22c84dd593e8f474bb1100ef" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt;&lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt;&lt;/a&gt; method is used to access information about each eye &amp;mdash; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt;&lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;recommendedfieldofview&quot;&gt;&lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt;&lt;/a&gt; &amp;mdash; which are used for rendering calulations later on.</source>
          <target state="translated">다음 예는 Mozilla VR 팀의 &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; 코드 ( &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js 파일&lt;/a&gt; )에서 발췌 한 것 입니다. 코드 초기에 &lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt; &lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt; &lt;/a&gt; 메소드는 각 계산 에 대한 정보 ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt; &lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;recommendedfieldofview&quot;&gt; &lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt; )&lt;/a&gt; 에 액세스하여 나중에 계산을 렌더링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4c83038ff4deee70f3d0d107a275cd2c4ed87d96" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;code&gt;getEyeParameters()&lt;/code&gt; method is used to access information about each eye, which is then used for rendering calulations later on.</source>
          <target state="translated">다음 예는 Mozilla VR 팀의 &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; 코드 ( &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js 파일&lt;/a&gt; )에서 발췌 한 것 입니다. 코드 초반에 &lt;code&gt;getEyeParameters()&lt;/code&gt; 메소드는 각 눈에 대한 정보에 액세스하는 데 사용되며 나중에 계산을 렌더링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="11ca9d29fc77585ce775ce9b31a46f2e7e1505ca" translate="yes" xml:space="preserve">
          <source>The following example logs the product name and serial number of paired devices to the console. For information on pairing devices, see &lt;a href=&quot;requestdevice&quot;&gt;&lt;code&gt;USB.requestDevice()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 페어링 된 장치의 제품 이름 및 일련 번호를 콘솔에 기록합니다. 장치 페어링에 대한 자세한 내용은 &lt;a href=&quot;requestdevice&quot;&gt; &lt;code&gt;USB.requestDevice()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4bcd07c1f5c495fd38e7674c48afc61f7ab14e11" translate="yes" xml:space="preserve">
          <source>The following example looks for one of two USB devices. Notice that two product IDs are specified. Both are passed to &lt;code&gt;requestDevice()&lt;/code&gt;. This triggers a user-agent flow that prompts the user to select a device for pairing. Only the selected device is passed to &lt;code&gt;then()&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 두 개의 USB 장치 중 하나를 찾습니다. 두 개의 제품 ID가 지정되어 있습니다. 둘 다 &lt;code&gt;requestDevice()&lt;/code&gt; 로 전달됩니다 . 그러면 사용자에게 페어링 할 장치를 선택하라는 메시지가 표시되는 사용자 에이전트 흐름이 트리거됩니다. 선택된 장치 만 &lt;code&gt;then()&lt;/code&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c03c947dc1246c1861de8c740f9704078b64672" translate="yes" xml:space="preserve">
          <source>The following example monitors the connection using the &lt;code&gt;change&lt;/code&gt; event and logs changes as they occur.</source>
          <target state="translated">다음 예제는 &lt;code&gt;change&lt;/code&gt; 이벤트를 사용하여 연결을 모니터링하고 변경이 발생할 때이를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="d303269a86cd7e58b2c609ffa15d7d105cba440d" translate="yes" xml:space="preserve">
          <source>The following example positions a container &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 5 pixels from the top and 10 pixels from the left of the page.</source>
          <target state="translated">다음 예제에서는 컨테이너 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 위쪽에서 5 픽셀, 페이지 왼쪽에서 10 픽셀로 배치합니다.</target>
        </trans-unit>
        <trans-unit id="bb2d51b94b9a60b51094f2475685d4009bca7e1d" translate="yes" xml:space="preserve">
          <source>The following example prints the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; properties of each &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element named &lt;code&gt;&quot;box&quot;&lt;/code&gt;:</source>
          <target state="translated">다음 예는 &lt;code&gt;&quot;box&quot;&lt;/code&gt; 라는 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 요소 에 각 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 태그 의 &lt;a href=&quot;node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt; 속성을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="6115eab559d31910e7acfcf0b01f54a368b902fe" translate="yes" xml:space="preserve">
          <source>The following example provides a box where the lists of items and formats dropped on it are displayed.</source>
          <target state="translated">다음 예제는 항목 및 형식 목록을 표시하는 상자를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1dc60c447a843173e8c9bbcaf99edbaf2826f787" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The &lt;code&gt;readyState&lt;/code&gt; of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 하면 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 속성을 업데이트 한 다음 업데이트 된 레코드를 다른 요청의 개체 저장소에 다시 넣습니다. 두 번째 요청 의 &lt;code&gt;readyState&lt;/code&gt; 가 개발자 콘솔에 기록됩니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f4dff4f23e6550cf000485223936c19a4e248468" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The &lt;code&gt;readyState&lt;/code&gt; of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0336a4eabdc583e95680a3d0f1c0e8d996a6622" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 하면 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 속성을 업데이트 한 다음 업데이트 된 레코드를 다른 요청의 개체 저장소에 다시 넣습니다. 두 번째 요청의 소스는 개발자 콘솔에 기록됩니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fa3245380ac31c8e2f527344301f533e5a33967b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae97566e7a056d9130e6a429269fa84ca1510fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the requests is logged to the developer console &amp;mdash; both originate from the same transaction. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 하면 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 속성을 업데이트 한 다음 업데이트 된 레코드를 다른 요청의 개체 저장소에 다시 넣습니다. 요청 소스는 개발자 콘솔에 기록되며 둘 다 동일한 트랜잭션에서 발생합니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8007e2944ef7ba7d9a0c0d56df0dd9d6db153e49" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the requests is logged to the developer console &amp;mdash; both originate from the same transaction. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf0b7548845980c1d5dcad28742d81af7aedc0b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. Also included at the bottom is an &lt;code&gt;onerror&lt;/code&gt; function that reports what the error was if the request fails. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 는 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 특성을 업데이트 한 다음 업데이트 된 레코드를 다시 오브젝트 저장소에 넣습니다. 또한 요청 실패시 오류가 무엇인지보고 하는 &lt;code&gt;onerror&lt;/code&gt; 함수도 맨 아래에 포함됩니다 . 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4198e9f1f8be525e2fd46ec8117239969eec7163" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. Also included at the bottom is an &lt;code&gt;onerror&lt;/code&gt; function that reports what the error was if the request fails. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07e5d312940b7b80d5322d83eef5ba6ff2866f3" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 는 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 특성을 업데이트 한 다음 업데이트 된 레코드를 다시 오브젝트 저장소에 넣습니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="aec6a7f9feb785e72e5d430774813695ffd76a95" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850f99390f095f5e272ec1904dbe78d472bbe2fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title; when that request is successful the &lt;code&gt;onsuccess&lt;/code&gt; function gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request with &lt;code&gt;put()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청합니다. 해당 요청이 성공하면 &lt;code&gt;onsuccess&lt;/code&gt; 는 함수가에서 관련 기록을 얻을 수 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; (로 사용할 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 를 ) 레코드의 하나 개의 속성을 업데이트 한 다음에 다른 요청에서 객체 저장소에 업데이트 된 레코드 다시 넣 &lt;code&gt;put()&lt;/code&gt; . 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f18a9b66d635f84cd75156159ef97aa9a0fead2b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title; when that request is successful the &lt;code&gt;onsuccess&lt;/code&gt; function gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request with &lt;code&gt;put()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990f96c3487ac24e580f88dcf924b2bb93b884c0" translate="yes" xml:space="preserve">
          <source>The following example resets the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property to its defaults.</source>
          <target state="translated">다음 예제는 CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt; 특성을 기본값으로 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a4c1a57c4ca6684fa2f2d56c1548fee41c8ad915" translate="yes" xml:space="preserve">
          <source>The following example returns the data associated with the best-supported format:</source>
          <target state="translated">다음 예제는 가장 지원되는 형식과 관련된 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2c576708ef5aaa02518bb5f857c48818940df581" translate="yes" xml:space="preserve">
          <source>The following example runs through the attribute nodes for the element in the document with id &quot;paragraph&quot;, and prints each attribute's value.</source>
          <target state="translated">다음 예제는 ID가 &quot;paragraph&quot;인 문서의 요소에 대한 속성 노드를 통해 실행되고 각 속성의 값을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="64636f22e839bb76e65af4be7439cec7abf92938" translate="yes" xml:space="preserve">
          <source>The following example sends payment information to a secure server using the &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;. It calls &lt;code&gt;complete()&lt;/code&gt; with an answer appropriate to the status in the response.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API를&lt;/a&gt; 사용하여 지불 정보를 보안 서버로 보냅니다 . 응답의 상태에 맞는 응답으로 &lt;code&gt;complete()&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="53abf31adeec8a09dcd20df96daf7c3014d8ae99" translate="yes" xml:space="preserve">
          <source>The following example sets a callback function on the &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; 특성 에 콜백 함수를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d3f7dbc2eb06624059a847a0d173430eea3c2d5d" translate="yes" xml:space="preserve">
          <source>The following example sets up a timeout to clear the payment request that might have been abandoned or neglected.</source>
          <target state="translated">다음 예는 포기되거나 무시되었을 수있는 지불 요청을 지우는 제한 시간을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="177b489e63fd126ecc71555c3891a912111adbae" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers for pausing and playing:</source>
          <target state="translated">다음 예제는 일시 정지 및 재생을위한 이벤트 핸들러를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4c5c78a1b0be981f77893b3d54c69156c847461d" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers, for pausing and playing:</source>
          <target state="translated">다음 예제는 일시 정지 및 재생을위한 이벤트 핸들러를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="46edbb0e256976b59fccba6f12043d13b9f70932" translate="yes" xml:space="preserve">
          <source>The following example sets up two simple buttons in a web page and hooks them to the &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;clearTimeout()&lt;/code&gt; routines. Pressing the first button will set a timeout which calls an alert dialog after two seconds and stores the timeout id for use by &lt;code&gt;clearTimeout()&lt;/code&gt;. You may optionally cancel this timeout by pressing on the second button.</source>
          <target state="translated">다음 예제는 웹 페이지에 두 개의 간단한 버튼을 설정하고 &lt;code&gt;setTimeout()&lt;/code&gt; 및 &lt;code&gt;clearTimeout()&lt;/code&gt; 루틴에 연결합니다. 첫 번째 버튼을 누르면 2 초 후에 경고 대화 상자를 호출하고 &lt;code&gt;clearTimeout()&lt;/code&gt; 에서 사용할 시간 초과 ID를 저장하는 시간 초과가 설정 됩니다. 선택적으로 두 번째 버튼을 눌러이 시간 초과를 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68d80a26b4b4a08ede321cf5bbcc2808f91817ac" translate="yes" xml:space="preserve">
          <source>The following example shows &quot;id&quot; in an alert dialog.</source>
          <target state="translated">다음 예제는 경고 대화 상자에서 &quot;id&quot;를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ed8d0f3f3df4dbbdb0877d093b925f1c6421132a" translate="yes" xml:space="preserve">
          <source>The following example shows &lt;code&gt;claimInterface()&lt;/code&gt; in the context of connecting to a USB device.</source>
          <target state="translated">다음 예제는 USB 장치 연결과 관련된 &lt;code&gt;claimInterface()&lt;/code&gt; 를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="855ee09d899529aa4e90342910c83a3624fafa6f" translate="yes" xml:space="preserve">
          <source>The following example shows a drop handler getting the source element's id from the drag data and then using the id to move the source element to the drop element.</source>
          <target state="translated">다음 예제는 드래그 데이터에서 소스 요소의 ID를 가져온 다음 ID를 사용하여 소스 요소를 드롭 요소로 이동하는 드롭 핸들러를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d0251c10297ab70e23d75732aa24809f1b880b02" translate="yes" xml:space="preserve">
          <source>The following example shows a pointer capture being released (when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs. The browser does this automatically when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">다음의 예를 보여줍니다 때 포인터 캡처 (출시되고 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; 의 이벤트가 발생합니다.하면 브라우저가 자동으로 수행 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ba3a2e0ca4ef19be9eb47ce63292c20cb6416871" translate="yes" xml:space="preserve">
          <source>The following example shows a possible use of the &lt;code&gt;size&lt;/code&gt; property:</source>
          <target state="translated">다음 예제는 &lt;code&gt;size&lt;/code&gt; 속성 의 가능한 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="705a4a5a7a7b30bdae2c02e4e01f6b9d2e1058c9" translate="yes" xml:space="preserve">
          <source>The following example shows a sample definition of the first parameter of the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor, the &lt;code&gt;data&lt;/code&gt; property of which contains &lt;code&gt;supportedNetworks&lt;/code&gt; and &lt;code&gt;supportedTypes&lt;/code&gt; properties.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest()&lt;/code&gt; &lt;/a&gt; 생성자 의 첫 번째 매개 변수에 대한 샘플 정의를 보여줍니다. 여기에는 &lt;code&gt;data&lt;/code&gt; 특성에 &lt;code&gt;supportedNetworks&lt;/code&gt; 및 &lt;code&gt;supportedTypes&lt;/code&gt; 특성 이 포함 됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f21bef05c016cada064653ab1afeee017aa62b2" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;a href=&quot;htmldialogelement/showmodal&quot;&gt;&lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt;&lt;/a&gt; function. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;htmldialogelement/close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; function), or submit the form via the submit button.</source>
          <target state="translated">다음 예제는 클릭 할 때 &lt;a href=&quot;htmldialogelement/showmodal&quot;&gt; &lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt; &lt;/a&gt; 함수 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 간단한 버튼을 보여줍니다 . 거기서 &lt;em&gt;취소&lt;/em&gt; 단추를 클릭하여 대화 상자를 &lt;a href=&quot;htmldialogelement/close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt; 함수를 통해) 제출 단추를 통해 양식을 제출할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7eec4b00bae065e274bf4292ff9be05ad0c0d68" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;show()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">다음 예제는 클릭 할 때 &lt;code&gt;show()&lt;/code&gt; 메서드 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 간단한 버튼을 보여줍니다 . 거기서 &lt;em&gt;취소&lt;/em&gt; 단추를 클릭하여 대화 상자를 &lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt; 메소드를 통해) 제출 단추를 통해 양식을 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc1e841e69d6dcaef8b6a67cf0b94228e3d3d5ea" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">다음 예제는 클릭 할 때 &lt;code&gt;showModal()&lt;/code&gt; 메서드 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 간단한 버튼을 보여줍니다 . 거기서 &lt;em&gt;취소&lt;/em&gt; 단추를 클릭하여 대화 상자를 &lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt; 메소드를 통해) 제출 단추를 통해 양식을 제출할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dfb22cef2e2a04dc51023e4d17c1de72e8f465b" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server by using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;sendBeacon()&lt;/code&gt; 메소드를 사용하여 서버에 데이터를 제출하는 이론적 분석 코드 패턴을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="89f75f9fb0dc0323340f2fcc02eca76baa2a4696" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;sendBeacon()&lt;/code&gt; 메소드를 사용하여 서버에 데이터를 제출하는 이론적 분석 코드 패턴을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d0f36ea4bdd89f07960216ebd320f28329b5a515" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code that attempts to submit data to a server by using a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; in an unload handler. This results in the unload of the page to be delayed.</source>
          <target state="translated">다음 예제는 언로드 핸들러에서 동기 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 를 사용하여 서버에 데이터를 제출하려고하는 이론적 분석 코드를 보여줍니다 . 이로 인해 페이지 언로드가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="87f8c6dcf867bf56ad304750f42e1a5447693d96" translate="yes" xml:space="preserve">
          <source>The following example shows an existing chat window or creates a new one when the user clicks a notification.</source>
          <target state="translated">다음 예는 기존 대화 창을 보여 주거나 사용자가 알림을 클릭하면 새 대화 창을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5a87c35f32473ca8c38be4c14c9fc4c23d2ad805" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;../audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt; 를 통해로드 된 트랙을 가져 와서 처리하고 입력 트랙 (버퍼)의 각 오디오 샘플에 약간의 백색 노이즈를 추가하고 &lt;a href=&quot;../audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; 를&lt;/a&gt; 통해 재생 하는 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; 의 기본 사용법을 보여줍니다 . 각 채널과 각 샘플 프레임에 대해 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 함수는 연관된 &lt;code&gt;audioProcessingEvent&lt;/code&gt; 를 사용하여이를 사용하여 입력 버퍼의 각 채널과 각 채널의 각 샘플을 반복하고 결과를 설정하기 전에 소량의 백색 잡음을 추가합니다. 각 경우에 출력 샘플이됩니다.</target>
        </trans-unit>
        <trans-unit id="cf9a772fd3f90faf43aa600df6c164eeba40d69e" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt; 를 통해로드 된 트랙을 가져 와서 처리하고 입력 트랙 (버퍼)의 각 오디오 샘플에 약간의 백색 노이즈를 추가하고 &lt;a href=&quot;audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; 를&lt;/a&gt; 통해 재생 하는 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; 의 기본 사용법을 보여줍니다 . 각 채널과 각 샘플 프레임에 대해 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 함수는 연관된 &lt;code&gt;audioProcessingEvent&lt;/code&gt; 를 사용하여이를 사용하여 입력 버퍼의 각 채널과 각 채널의 각 샘플을 반복하고 결과를 설정하기 전에 소량의 백색 잡음을 추가합니다. 각 경우에 출력 샘플이됩니다.</target>
        </trans-unit>
        <trans-unit id="42ab16254b249cb27fc9204b2d611a2328fb9237" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to connect a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; to an &lt;code&gt;AnalyserNode&lt;/code&gt;. While the audio is playing, we collect the frequency data repeatedly with &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; and draw a &quot;winamp bargraph style&quot; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">의 다음의 예를 보여줍니다 기본적인 사용법 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; 는&lt;/a&gt; 연결 &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; 를&lt;/a&gt; 에 &lt;code&gt;AnalyserNode&lt;/code&gt; . 오디오가 재생되는 동안 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt; 사용하여 주파수 데이터를 반복적으로 수집하고 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 &quot;winamp bargraph style&quot;을 그립니다 .</target>
        </trans-unit>
        <trans-unit id="d2f7e3d29f51cfc546fa304e3493e74139e45a64" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">다음의 예를 보여 기본적인 사용법 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; 는&lt;/a&gt; 크리에이트하는 &lt;code&gt;GainNode&lt;/code&gt; 후 소거하는 데 사용되며, 음소거 버튼이 변경하여 클릭 할 때 오디오를 뮤트 해제 &lt;code&gt;gain&lt;/code&gt; 특성 값.</target>
        </trans-unit>
        <trans-unit id="d6e8c9153bd9934791313aa228815e4a1b8ef407" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 주파수 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;winamp bargraph style&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="334ec7627146f2cc6408c2ae9be54803b82b263a" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ceb5663ea45fa8eb7a948ffd2a87e564f8a58c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 주파수 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;winamp bargraph style&quot;출력을 그립니다. 더 많은 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="60a89ee025ef0ca5ff74a457b786f45f59cfe768" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b99b3956bcc6ea6b5e5e90476bd61de62dbf1a15" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt; demo (see the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 응용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt; 데모를 확인하십시오 ( &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;소스 코드&lt;/a&gt; 도 참조 ).</target>
        </trans-unit>
        <trans-unit id="6db4b9d609d45f2f06fc4a8f52a8bbca8601f9a4" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3ebd5fd192d61507741492c46c698d926380166c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 오실레이터 노드를 만들기위한 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 의 기본 사용법을 보여줍니다 . 적용된 예제는 &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="970ede63530c43cef97b110a18bfac0384762aab" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For an applied example, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8b77398e7663408d24572e6b6dd698160eb069" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 오실레이터 노드를 만들기위한 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 의 기본 사용법을 보여줍니다 . 적용된 예제 / 정보는 &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="e3065d316b690be1685d16493d383d679386fc58" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96539704fe1ed36695d989f58aad156fb66c366" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">다음의 예를 보여 기본적인 사용법 &lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; 는&lt;/a&gt; 크리에이트하는 &lt;code&gt;GainNode&lt;/code&gt; 후 소거하는 데 사용되며, 음소거 버튼이 변경하여 클릭 할 때 오디오를 뮤트 해제 &lt;code&gt;gain&lt;/code&gt; 특성 값.</target>
        </trans-unit>
        <trans-unit id="a9747c9f8c3bb979569330ffa761f53d29558850" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="67ce9e5ccb7d7881b13a2c1d3cbd89dbb23060f9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node and to start playing a tone on it. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 오실레이터 노드를 생성하고 톤을 재생하기 위해 &lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 의 기본 사용법을 보여줍니다 . 적용된 예제는 &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="2265789afba71696acbb48701658e6f13bc6b258" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node and to start playing a tone on it. For an applied example, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10035dff9da9a9cf27f0e78f7c0f415f921b864" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">다음 예제는 Biquad 필터 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 완전한 작동 예를 보려면 &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;음성 변경-오 메틱&lt;/a&gt; 데모를 확인하십시오 ( &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;소스 코드&lt;/a&gt; 도보십시오).</target>
        </trans-unit>
        <trans-unit id="5e790c8caa2130c5c5f71fc4cdf41b47706aee96" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">다음 예제는 Biquad 필터 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 완전한 작동 예를 보려면 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;음성 변경-오 메틱&lt;/a&gt; 데모를 확인하십시오 ( &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;소스 코드&lt;/a&gt; 도보십시오).</target>
        </trans-unit>
        <trans-unit id="d419e6879edf66df35afcb16bc5b46def800d8fc" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node.</source>
          <target state="translated">다음 예제는 Convolver 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ec8b1964f1b8449c90dea469a4e77f282d04d4d9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node. The basic premise is that you create an AudioBuffer containing a sound sample to be used as an ambience to shape the convolution (called the &lt;em&gt;impulse response&lt;/em&gt;,) and apply that to the convolver. The example below uses a short sample of a concert hall crowd, so the reverb effect applied is really deep and echoey.</source>
          <target state="translated">다음 예제는 Convolver 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 기본 전제는 컨볼 루션 ( &lt;em&gt;임펄스 응답&lt;/em&gt; 이라고 함)을 형성하기위한 분위기로 사용되는 사운드 샘플이 포함 된 AudioBuffer를 만들어이를 컨 볼버에 적용하는 것입니다. 아래 예는 콘서트 홀 군중의 짧은 샘플을 사용하므로 적용된 리버브 효과는 실제로 깊고 반향입니다.</target>
        </trans-unit>
        <trans-unit id="d9c348a7a6d70c6ff50f28ddacbe7e644dc9ef17" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a wave shaper node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt; demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 WaveContextr 노드를 작성하기위한 AudioContext의 기본 사용법을 보여줍니다. 적용된 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic &lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="76006f4529336a01a4736eb02cddcc961a882daa" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a wave shaper node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt; demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1cd519e0fac827e01535358e2b808f81b03596" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an Analyser node, then use requestAnimationFrame() to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 AudioContext를 사용하여 분석기 노드를 만든 다음 requestAnimationFrame ()을 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="544a4cb84984c5d452e79acde5d675be4fe422c5" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code); also see our &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; page for more information.</source>
          <target state="translated">다음 예제는 오실레이터 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 응용 예제 / 정보에 &lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;대해서는 &lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;확인하십시오 ( 관련 코드는 app.js 참조 ). 자세한 내용 은 &lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9e4e034ebc3eba7b88c84bde5c51b54632d84dae" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code); also see our &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; page for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6518b2d0b60eee0f55b63cdd4c525befb50caaf1" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMarks()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;clearMarks()&lt;/code&gt; 메소드 의 두 가지 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="767065d5ac6c188eab3c99130b840193a899a63d" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMeasures()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;clearMeasures()&lt;/code&gt; 메소드 의 두 가지 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="201d597b58c76c0725b95a0987335fa0f8db3fb1" translate="yes" xml:space="preserve">
          <source>The following example shows feature detection for the Media Session API. It then instantiates a metadata object for the session, and adds event handlers for the user control actions:</source>
          <target state="translated">다음 예는 미디어 세션 API의 기능 감지를 보여줍니다. 그런 다음 세션의 메타 데이터 개체를 인스턴스화하고 사용자 컨트롤 작업에 대한 이벤트 처리기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0ac8600345a07c8b847e3a0f363d38d6b1c8692e" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;mark()&lt;/code&gt; is used to create an application-defined &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;peformance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">다음 예는 &lt;code&gt;mark()&lt;/code&gt; 를 사용 하여 브라우저의 성능 항목 버퍼에서 응용 프로그램 정의 &lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;peformance entry&lt;/code&gt; &lt;/a&gt; 을 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3d9634aea270d1ee77918f9ec397709546f2e081" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;measure()&lt;/code&gt; is used to create a new &lt;em&gt;measure&lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">다음 예제는 &lt;code&gt;measure()&lt;/code&gt; 를 사용 하여 브라우저 성능 항목 버퍼에서 새 &lt;em&gt;측정 값 &lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;performance entry&lt;/code&gt; &lt;/a&gt; 을 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e1b60b080c32c75c7a6f4eb54f545aab50566e44" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object from a URL string.</source>
          <target state="translated">다음 예제는 URL 문자열에서 &lt;a href=&quot;../urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt; 객체 를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9a14d8066371c9b7c2ac9ca18d0e40d2d88b2902" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an area for receiving dropped files:</source>
          <target state="translated">다음 예제는 삭제 된 파일을 수신하기위한 영역을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8bc204ff21a909d29114194801ae6e06760cad3c" translate="yes" xml:space="preserve">
          <source>The following example shows how to register two observers: the first one registers for several event types and the second observer only registers for one event type.</source>
          <target state="translated">다음 예제는 두 개의 옵저버를 등록하는 방법을 보여줍니다. 첫 번째는 여러 이벤트 유형에 등록하고 두 번째 옵저버는 하나의 이벤트 유형에 대해서만 등록합니다.</target>
        </trans-unit>
        <trans-unit id="e1196fd43be06d94c1ba87b6a6013b1837cb0d45" translate="yes" xml:space="preserve">
          <source>The following example shows how to test for and clear a &lt;code&gt;'stall'&lt;/code&gt; condition in the result of a data transfer.</source>
          <target state="translated">다음 예는 데이터 전송 결과에서 &lt;code&gt;'stall'&lt;/code&gt; 조건 을 테스트하고 지우는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f9f91198697099e264c7db491f37b9ff589e2137" translate="yes" xml:space="preserve">
          <source>The following example shows how to update the payment sheet as it's being presented to the end-user.</source>
          <target state="translated">다음 예는 최종 사용자에게 제공되는 결제 시트를 업데이트하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2fac85cabdd57f827bd41b560875a5da02180055" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;finish()&lt;/code&gt; method and catch an &lt;code&gt;InvalidState&lt;/code&gt; error.</source>
          <target state="translated">다음 예제는 &lt;code&gt;finish()&lt;/code&gt; 메소드 를 사용하고 &lt;code&gt;InvalidState&lt;/code&gt; 오류를 포착하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9707b001d18380a2a47667559b4f827cc506834d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;mode&lt;/code&gt; option for readers and writers.</source>
          <target state="translated">다음 예는 독자와 작가에게 &lt;code&gt;mode&lt;/code&gt; 옵션 을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="24382fee2acb14c7acd876c809360a40dcb6cd0d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this property.</source>
          <target state="translated">다음 예제는이 속성을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f6500a051169147e204ed47e488ed0becdda17cc" translate="yes" xml:space="preserve">
          <source>The following example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify both the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">다음 예는 스테레오 트랙 (예 : 음악)을 분리하고 왼쪽 및 오른쪽 채널을 다르게 처리하는 방법을 보여줍니다. 이들을 사용하려면 연결할 채널 색인과 연결할 채널 색인을 모두 지정할 수 있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; &lt;/a&gt; 메소드 의 두 번째 및 세 번째 매개 변수를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="673d126c604f92225bb72fa3f2e312150b77f3a6" translate="yes" xml:space="preserve">
          <source>The following example shows minimal functionality and focuses instead on showing the complete context of instantiating a &lt;code&gt;PaymentRequest&lt;/code&gt; object.</source>
          <target state="translated">다음 예제는 최소한의 기능을 보여주고 대신 &lt;code&gt;PaymentRequest&lt;/code&gt; 객체 를 인스턴스화하는 완전한 컨텍스트를 표시하는 데 중점을 둡니다 .</target>
        </trans-unit>
        <trans-unit id="f2f0a117106320051ec8f4c04032a855363c87e7" translate="yes" xml:space="preserve">
          <source>The following example shows pointer capture being set on an element.</source>
          <target state="translated">다음 예제는 요소에서 설정되는 포인터 캡처를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="11a920ce7314e8f5f07f05319ec174856a969530" translate="yes" xml:space="preserve">
          <source>The following example shows the basic use of the &lt;code&gt;request()&lt;/code&gt; method with an asynchronous function as the callback. Once the callback is invoked, no other running code on this orign can hold `'my_resource'` until the callback returns.</source>
          <target state="translated">다음 예제는 콜백으로 비동기 함수와 함께 &lt;code&gt;request()&lt;/code&gt; 메소드 의 기본 사용법을 보여줍니다 . 콜백이 호출되면이 orign에서 실행중인 다른 코드는 콜백이 반환 될 때까지 'my_resource'를 유지할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9778f1dbf547fda12a38deba634bb5652a303a82" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는 사용자 정의 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 을 작성하는 방법을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c13aaf1ca7614e8c48feb2ed74c903915d7d1794" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는 사용자 정의 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 을 작성하는 방법을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b0fb33f6195c46408861bb4574ab2e64295f35d" translate="yes" xml:space="preserve">
          <source>The following example shows the implementation of a fetch event that uses a preloaded response.</source>
          <target state="translated">다음 예제는 사전로드 된 응답을 사용하는 페치 이벤트의 구현을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3f3e205fb1239ca5373b0433f4a24433b6e076d8" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;duration&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;duration&lt;/code&gt; 속성을 사용하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3c712f8b9dace25890e3b31e9196a67834497383" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;entryType&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;entryType&lt;/code&gt; 속성 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4876b66305b9121a957b8075983954194fde2002" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; properties alongside images of varying dimensions:</source>
          <target state="translated">다음 예제는 다양한 치수의 이미지와 함께 &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; 속성을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c01a708afcd2a65bcdbd8257238b8b6b86ebdfa1" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;name&lt;/code&gt; 속성 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="92845b02be15ab1b985e66dd0b2501507224ed13" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onkeypress&lt;/code&gt; event during a digitation into a form field in order to filter the typed characters:</source>
          <target state="translated">다음 예제는 입력 된 문자를 필터링하기 위해 양식 필드에 디지털화하는 동안 &lt;code&gt;onkeypress&lt;/code&gt; 이벤트를 사용하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7f4f376de3fe0171cbc4ffb0b861d12e69f63398" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onmousemove&lt;/code&gt; event with a javaScript tooltip.</source>
          <target state="translated">다음 예제는 &lt;code&gt;onmousemove&lt;/code&gt; 툴팁과 함께 onmousemove 이벤트 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="400ba02e6efdd886c269e97431fe228eec477af9" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;startTime&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;startTime&lt;/code&gt; 속성 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f5279b0b84800499bd9b9c03f8ff414dbe27ce85" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;toJSON()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;toJSON()&lt;/code&gt; 메소드 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="790f6e1e59103e012c1df0838542d78d707ba633" translate="yes" xml:space="preserve">
          <source>The following example shows two uses of the &lt;code&gt;ready&lt;/code&gt; property. The first uses &lt;code&gt;ready&lt;/code&gt; to ensure that the &lt;code&gt;WritableStream&lt;/code&gt; is done writing and thus able to receive data before sending a binary chunk. The second also checks whether the the &lt;code&gt;WritableStream&lt;/code&gt; is done writing, but this time because the writing must be finished before the writer can be closed.</source>
          <target state="translated">다음 예제는 &lt;code&gt;ready&lt;/code&gt; 속성 의 두 가지 사용법을 보여줍니다 . 첫 번째는 &lt;code&gt;WritableStream&lt;/code&gt; 이 쓰기 를 완료하고 바이너리 청크를 보내기 전에 데이터를 수신 할 수 있도록하기 위해 &lt;code&gt;ready&lt;/code&gt; 를 사용합니다 . 두 번째는 &lt;code&gt;WritableStream&lt;/code&gt; 이 쓰기 를 완료 했는지 확인 하지만 이번에는 쓰기를 끝내기 전에 쓰기를 완료해야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="913d88c16faba66028294d185d5390a8ff403089" translate="yes" xml:space="preserve">
          <source>The following example simulates typewriter by first clearing and then slowly typing content into the &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; that matches a specified group of selectors.</source>
          <target state="translated">다음 예제 는 지정된 선택기 그룹과 일치하는 &lt;a href=&quot;../nodelist&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; 에&lt;/a&gt; 컨텐츠를 지우고 천천히 입력하여 타자기를 시뮬레이트 합니다.</target>
        </trans-unit>
        <trans-unit id="24c68e32b3009378a12189d166b455d237cb02e7" translate="yes" xml:space="preserve">
          <source>The following example snippet is taken from our expanding-list-web-component example (see it live also). In this case, our custom element extends the &lt;a href=&quot;../htmlulistelement&quot;&gt;&lt;code&gt;HTMLUListElement&lt;/code&gt;&lt;/a&gt;, which represents the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">다음 예제 스 니펫은 확장 목록 웹 구성 요소 예제에서 가져온 것입니다 (실제 참조). 이 경우 사용자 정의 요소 는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 를 나타내는 &lt;a href=&quot;../htmlulistelement&quot;&gt; &lt;code&gt;HTMLUListElement&lt;/code&gt; 를&lt;/a&gt; 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="ccb869b4735a71f30fafd9007990aa5e8154a417" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and moves it in front of the listener after 1 second, behind the listener after 2 seconds, and back to the listener's position after 3 seconds. Note that in this case, the change will mainly affect the timbre and perceived volume of the sound.</source>
          <target state="translated">다음 예제는 발진기를 시작하여 1 초 후에 리스너 앞, 2 초 후에 리스너 뒤에, 3 초 후에 리스너의 위치로 다시 이동합니다. 이 경우, 변경은 주로 음색의 음량과 지각 된 음량에 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="c8bd99fb6a07ebfd16dffe834746f96fb3de907a" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and pans it above the listener after 1 second, below the listener after 2 seconds, and back to the center after 3 seconds. Note that in this case, the change will mainly affect the timbre of the oscillator, as it's a simple mono wave.</source>
          <target state="translated">다음 예제는 발진기를 시작하고 1 초 후에 리스너 위로, 2 초 후에 리스너 아래로, 3 초 후에 중앙으로 다시 이동합니다. 이 경우 변경은 단순한 모노 웨이브이기 때문에 오실레이터의 음색에 주로 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="ed62b529aaa91ca42671d3cb897ade885b5c2d98" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator, and pans it to the left after 1 second, to the right after 2 seconds, and back to the center after 3 seconds.</source>
          <target state="translated">다음 예제는 발진기를 시작하여 1 초 후에 왼쪽으로, 2 초 후에 오른쪽으로, 3 초 후에 중앙으로 다시 이동합니다.</target>
        </trans-unit>
        <trans-unit id="2ebcff91173c5a4d6adfd0be41e2a5a62d5a5d62" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;a href=&quot;../pushevent&quot;&gt;&lt;code&gt;PushEvent&lt;/code&gt;&lt;/a&gt; and displays it on all of the service worker's clients. The data payload of the push message is available in the event object's &lt;code&gt;data&lt;/code&gt; property (&lt;a href=&quot;../pushevent/data&quot;&gt;&lt;code&gt;PushEvent.data&lt;/code&gt;&lt;/a&gt;, which contains a &lt;a href=&quot;../pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; object.)</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../pushevent&quot;&gt; &lt;code&gt;PushEvent&lt;/code&gt; &lt;/a&gt; 에서 데이터를 가져와 모든 서비스 워커의 클라이언트에 표시합니다. 푸시 메시지의 데이터 페이로드는 이벤트 객체의에서 사용할 &lt;code&gt;data&lt;/code&gt; 속성 ( &lt;a href=&quot;../pushevent/data&quot;&gt; &lt;code&gt;PushEvent.data&lt;/code&gt; &lt;/a&gt; 포함, &lt;a href=&quot;../pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; 의&lt;/a&gt; 객체를.)</target>
        </trans-unit>
        <trans-unit id="9ca190c23e8fe845a41d4cf375a355c8052fa962" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;code&gt;PushEvent&lt;/code&gt; and displays it on all of the service worker's clients.</source>
          <target state="translated">다음 예제는 &lt;code&gt;PushEvent&lt;/code&gt; 에서 데이터를 가져와 모든 서비스 워커의 클라이언트에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9b553504d5b37fce7cd61e0ad37d0e0226ee8ef4" translate="yes" xml:space="preserve">
          <source>The following example takes data from a PushEvent and displays it on all of the service workers' clients.</source>
          <target state="translated">다음 예제는 PushEvent에서 데이터를 가져와 모든 서비스 워커의 클라이언트에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d1ca73f426d6b3ab4e2caddc6a971035a5770380" translate="yes" xml:space="preserve">
          <source>The following example tests whether a plugin is available for the application/pdf mime type and if so, which plugin that is.</source>
          <target state="translated">다음 예제는 application / pdf mime 유형에 플러그인을 사용할 수 있는지 여부와 가능한 경우 어떤 플러그인인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="7d18190b5ad40d5dba90405dd6dc0bffd8bf922f" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;claim()&lt;/code&gt; inside service worker's &quot;&lt;code&gt;activate&lt;/code&gt;&quot; event listener so that clients loaded in the same scope do not need to be reloaded before their fetches will go through this service worker.</source>
          <target state="translated">다음 예제에서는 서비스 워커의 &quot; &lt;code&gt;activate&lt;/code&gt; &quot;이벤트 리스너 에서 &lt;code&gt;claim()&lt;/code&gt; 사용 하므로 페치가이 서비스 워커를 통과하기 전에 동일한 범위에로드 된 클라이언트를 다시로드 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9bf8274744618f824cb8cd33401e03ca3df661b6" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;nextHopProtocol&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;nextHopProtocol&lt;/code&gt; 속성을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="98a3e01bb1ea05beb7c5258ae3d9619f2cf3dd15" translate="yes" xml:space="preserve">
          <source>The following example uses the beforeinstallprompt event handler to make an install button operable, by using the event inside a click handler.</source>
          <target state="translated">다음 예제는 beforeinstallprompt 이벤트 핸들러를 사용하여 클릭 핸들러 내부의 이벤트를 사용하여 설치 단추를 작동 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="deed3fbc5b32cc39c5336ce13ec84c76cdccdbc3" translate="yes" xml:space="preserve">
          <source>The following example uses the default value of &lt;code&gt;scope&lt;/code&gt; (by omitting it). The service worker in this case will control &lt;code&gt;example.com/index.html&lt;/code&gt; as well as pages underneath it, like &lt;code&gt;example.com/product/description.html&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &lt;code&gt;scope&lt;/code&gt; 의 기본값 을 생략하여 사용합니다. 이 경우 서비스 노동자는 제어 할 &lt;code&gt;example.com/index.html&lt;/code&gt; 페이지처럼, 그것을 아래뿐만 아니라 &lt;code&gt;example.com/product/description.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58c2b71b6bda82d8e4f2d04eaa2bfcbb66806236" translate="yes" xml:space="preserve">
          <source>The following example uses this property to test for the existence of a USBConfiguration property to select a configuration before claiming an interface.</source>
          <target state="translated">다음 예제는이 특성을 사용하여 인터페이스를 청구하기 전에 USBConfiguration 특성이 존재하는지 테스트하여 구성을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="9868c4aa3a49b3c141a541f1150589eb14c51e29" translate="yes" xml:space="preserve">
          <source>The following example was adapted from &lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;이 블로그 게시물&lt;/a&gt; 에서 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d1d7527225e80273023721439aa3d8fdc2244624" translate="yes" xml:space="preserve">
          <source>The following example was adapted from &lt;a href=&quot;https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2ef2f48d56b7190c80d6d945b8fbc26eaac266" translate="yes" xml:space="preserve">
          <source>The following example will do something after the user types the word &quot;exit&quot; in any point of a page.</source>
          <target state="translated">다음 예제는 사용자가 페이지의 어느 지점에서나 &quot;exit&quot;라는 단어를 입력 한 후 무언가를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0148dd02e5aba9031325708640951708a88c1671" translate="yes" xml:space="preserve">
          <source>The following example will show the rangeCount every second. Select text in the browser to see it change.</source>
          <target state="translated">다음 예제는 초마다 rangeCount를 보여줍니다. 변경 내용을 보려면 브라우저에서 텍스트를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="5d74cac7b141bf68b7b90bb1e9d607b722e6e260" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses &lt;code&gt;getVideoTracks()&lt;/code&gt; to retrieve a track for passing to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt;&lt;code&gt;ImageCapture()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출 된 다음 예제 는 &lt;code&gt;getVideoTracks()&lt;/code&gt; 를 사용 하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt; &lt;code&gt;ImageCapture()&lt;/code&gt; &lt;/a&gt; 생성자 에 전달할 트랙을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="4bdb7c10cd1aa2ea9ce4019a8fee2f11d76ccc9e" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; to modify the size of an input range.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출한 다음 예제 는 &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="735419a02f63cbfe9f099ff618da4b9b89686b25" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출한 다음 예제 는 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다. 이 예제는 또한 장치의 &lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 에서 검색된 &lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; 을&lt;/a&gt; 사용하여 &lt;code&gt;ImageCapture&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d47e61ef5db7b087231285e6d30526695006aa9a" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출한 다음 예제 는 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다. 이 예제는 또한 장치의 &lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 에서 검색된 &lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; 을&lt;/a&gt; 사용하여 &lt;code&gt;ImageCapture&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6f368a60eeb43922f4fe5b4b9f4c49d5bf5d3ded" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoSettings()&lt;/code&gt; to modify the size of an input range. This example also shows how the ImageCapture object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출한 다음 예제 는 &lt;code&gt;getPhotoSettings()&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다. 이 예제는 또한 장치의 &lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 에서 검색된 &lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; 을&lt;/a&gt; 사용하여 ImageCapture 객체를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8f8a19722133c1ea455e5abb4fe2f372654ada60" translate="yes" xml:space="preserve">
          <source>The following example, taken from the WebVR spec, finds the first available &lt;code&gt;HMDVRDevice&lt;/code&gt; and its associated &lt;a href=&quot;positionsensorvrdevice&quot;&gt;&lt;code&gt;PositionSensorVRDevice&lt;/code&gt;&lt;/a&gt;, if it has one.</source>
          <target state="translated">WebVR 스펙에서 가져온 다음 예제는 사용 가능한 첫 번째 &lt;code&gt;HMDVRDevice&lt;/code&gt; 및 연관된 &lt;a href=&quot;positionsensorvrdevice&quot;&gt; &lt;code&gt;PositionSensorVRDevice&lt;/code&gt; &lt;/a&gt; (있는 경우)를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="27d98c26605ad9ae19e79ccc13cdfb4cd0be16f1" translate="yes" xml:space="preserve">
          <source>The following example, the value of size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">다음 예제에서는 모든 &quot; &lt;code&gt;resource&lt;/code&gt; &quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 이벤트 의 크기 특성 값 이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="a74953b245c7e7b2e65fbd4b6752e20e8a1c913a" translate="yes" xml:space="preserve">
          <source>The following example, the value of the size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">다음 예제에서는 모든 &quot; &lt;code&gt;resource&lt;/code&gt; &quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 이벤트 의 크기 특성 값 이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="db92b07504cf60573c93d71f7a584f49a40e21bc" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;인텔 오리엔테이션 폰 데모를&lt;/a&gt; 기반으로하는 다음 예제 는 초당 60 번의 빈도로 &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; 를 인스턴스화합니다 . 읽을 때마다 &lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt; 을 사용 하여 전화기의 시각적 모델을 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="faeada3c9f8138ed5c764668bc526abb27d92a55" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. (Note that the Intel demo this is based on uses the &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt;.) On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;인텔의 오리엔테이션 폰 데모를&lt;/a&gt; 기반으로하는 다음 예제 는 초당 60 번의 빈도로 &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; 를 인스턴스화합니다 . (이를 기반으로하는 Intel 데모는 &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt; 를 사용합니다 .) 각 판독에서 &lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt; 을 사용 하여 전화기의 시각적 모델을 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="0e9be9ccf6aaca2db19080340f5bf6effce1617f" translate="yes" xml:space="preserve">
          <source>The following examples are screenshots from the attached file.</source>
          <target state="translated">다음 예는 첨부 파일의 스크린 샷입니다.</target>
        </trans-unit>
        <trans-unit id="febdc7f77ee1e378fdb7983060b04d9078c5548a" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode and name properties are passed in the call to &lt;a href=&quot;lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 모드 및 이름 특성이 &lt;a href=&quot;lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; &lt;/a&gt; 호출에서 전달되는 방법을 보여줍니다 . &lt;code&gt;LockManager&lt;/code&gt; 는 &lt;a href=&quot;navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; 가&lt;/a&gt; 반환 한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="aea84d7771e836ef26e5cfa682717ab7b0670a1e" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 모드 특성이 &lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; &lt;/a&gt; 호출에서 전달 된 방법을 보여줍니다 . &lt;code&gt;LockManager&lt;/code&gt; 는 &lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; 가&lt;/a&gt; 반환 한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="24c1ef3007f1e18404b508ad7b4f8b184159ed4b" translate="yes" xml:space="preserve">
          <source>The following examples show how the name property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 name 속성이 &lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; &lt;/a&gt; 호출에서 전달 된 방법을 보여줍니다 . &lt;code&gt;LockManager&lt;/code&gt; 는 &lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; 가&lt;/a&gt; 반환 한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="3b63252171bdd483df676b3e519fc5383a295d21" translate="yes" xml:space="preserve">
          <source>The following exceptions can be raised by this method:</source>
          <target state="translated">이 방법으로 다음과 같은 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94737e1025dd41a1f555fb83fe451a64d957615b" translate="yes" xml:space="preserve">
          <source>The following fairly verbose snippet could be used if you wanted to first check whether notifications are supported, then check if permission has been granted for the current origin to send notifications, then request permission if required, before then sending a notification.</source>
          <target state="translated">먼저 알림이 지원되는지 여부를 확인한 다음 현재 발신자가 알림을 보낼 수있는 권한이 부여되었는지 확인한 다음 필요한 경우 권한을 요청한 후 알림을 보내려면 다음과 같은 매우 상세한 스 니펫을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97270a71b3f307dbf5b479f5e623f0dfc2c361bd" translate="yes" xml:space="preserve">
          <source>The following features require the &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; privilege, otherwise they will be ignored. Chrome scripts have this privilege automatically, others have to request it from the PrivilegeManager.</source>
          <target state="translated">다음 기능에는 &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; 권한이 필요합니다 . 그렇지 않으면 무시됩니다. Chrome 스크립트에는이 권한이 자동으로 부여되고 다른 사용자는 PrivilegeManager에 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="ffe08c31f8f2de545ea35d64da0c17067c56c848" translate="yes" xml:space="preserve">
          <source>The following fields are initialized to &lt;code&gt;null&lt;/code&gt; if they are not included in the &lt;a href=&quot;candidate&quot;&gt;&lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt;&lt;/a&gt; property: &lt;a href=&quot;foundation&quot;&gt;&lt;code&gt;foundation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;component&quot;&gt;&lt;code&gt;component&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;port&quot;&gt;&lt;code&gt;port&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tcptype&quot;&gt;&lt;code&gt;tcpType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relatedaddress&quot;&gt;&lt;code&gt;relatedAddress&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;relatedport&quot;&gt;&lt;code&gt;relatedPort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;candidate&quot;&gt; &lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt; &lt;/a&gt; 특성에 포함되지 않은 &lt;a href=&quot;foundation&quot;&gt; &lt;code&gt;foundation&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;component&quot;&gt; &lt;code&gt;component&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;priority&quot;&gt; &lt;code&gt;priority&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ip&quot;&gt; &lt;code&gt;ip&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;protocol&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;port&quot;&gt; &lt;code&gt;port&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tcptype&quot;&gt; &lt;code&gt;tcpType&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;relatedaddress&quot;&gt; &lt;code&gt;relatedAddress&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;relatedport&quot;&gt; &lt;code&gt;relatedPort&lt;/code&gt; &lt;/a&gt; 필드는 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="bca50c7f82bf8444ab26f5ba763468a2fb85b21d" translate="yes" xml:space="preserve">
          <source>The following figure shows the difference between &lt;code&gt;outerHeight&lt;/code&gt; and &lt;code&gt;innerHeight&lt;/code&gt;.</source>
          <target state="translated">다음 그림은 &lt;code&gt;outerHeight&lt;/code&gt; 와 &lt;code&gt;innerHeight&lt;/code&gt; 의 차이점을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="85993a51834b24eb9e0801e8b6f47efb69bf9929" translate="yes" xml:space="preserve">
          <source>The following function adds three data items to the local storage for the current domain, then returns the number of items in the storage:</source>
          <target state="translated">다음 함수는 세 개의 데이터 항목을 현재 도메인의 로컬 저장소에 추가 한 다음 저장소의 항목 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5481722ed64977b6ae2707736f3839dd2204677e" translate="yes" xml:space="preserve">
          <source>The following function calls a function recursively for each node contained by a root node (including the root itself):</source>
          <target state="translated">다음 함수는 루트 노드 (루트 자체 포함)에 포함 된 각 노드에 대해 함수를 재귀 적으로 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f29118e3cbf3c3119f236d85d72dfd7c5ddd1b19" translate="yes" xml:space="preserve">
          <source>The following function creates three data entries in local storage, then deletes them using &lt;code&gt;clear()&lt;/code&gt;.</source>
          <target state="translated">다음 함수는 로컬 저장소에 세 개의 데이터 항목을 만든 다음 &lt;code&gt;clear()&lt;/code&gt; 사용하여 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="8c59f04f94c110412685e25067fd79a7ad968f04" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage, then removes the &lt;code&gt;image&lt;/code&gt; data item.</source>
          <target state="translated">다음 기능은 로컬 저장소 내에 3 개의 데이터 항목을 만든 다음 &lt;code&gt;image&lt;/code&gt; 데이터 항목 을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="c726c324b2ef771544dc8d8843ed7ed613eba477" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage.</source>
          <target state="translated">다음 기능은 로컬 저장소 내에 3 개의 데이터 항목을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a245266c521a157e3b0ab4ee4747b646579e8db1" translate="yes" xml:space="preserve">
          <source>The following function implements such a strategy. It assumes base64-js imported as &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt;. Note that TextEncoderLite only works with UTF-8.</source>
          <target state="translated">다음 함수는 이러한 전략을 구현합니다. base64-js를 &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt; 로 가져온 것으로 가정합니다 . TextEncoderLite는 UTF-8에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="322089a75937578eb39cb596132bbb12324c87f0" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys and gets the value set for each key:</source>
          <target state="translated">다음 기능은 로컬 스토리지 키를 반복하고 각 키에 설정된 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e377fff921b5d64d21fb78200793e78ce73ee9f5" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys:</source>
          <target state="translated">다음 기능은 로컬 스토리지 키를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="d280adc56c877d6601ff48aa27747aa07012585b" translate="yes" xml:space="preserve">
          <source>The following function retrieves three data items from local storage, then uses them to set custom styles on a page.</source>
          <target state="translated">다음 함수는 로컬 저장소에서 세 개의 데이터 항목을 검색 한 다음이를 사용하여 페이지에서 사용자 정의 스타일을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b7b8bee67da30dc571e12693bb9aa523d6b9439e" translate="yes" xml:space="preserve">
          <source>The following gets the number of explicitly set styles on the following HTML element:</source>
          <target state="translated">다음은 다음 HTML 요소에서 명시 적으로 설정된 스타일 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c7174a30b7048940e586ca2432c1dfc7530a8b8d" translate="yes" xml:space="preserve">
          <source>The following interfaces all inherit from &lt;code&gt;Node&lt;/code&gt;&amp;rsquo;s methods and properties: &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt;&lt;code&gt;CharacterData&lt;/code&gt;&lt;/a&gt; (which &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;comment&quot;&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;cdatasection&quot;&gt;&lt;code&gt;CDATASection&lt;/code&gt;&lt;/a&gt; inherit), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt;&lt;code&gt;ProcessingInstruction&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documenttype&quot;&gt;&lt;code&gt;DocumentType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt;&lt;code&gt;EntityReference&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음 인터페이스는 모두 &lt;code&gt;Node&lt;/code&gt; 의 메소드 및 특성 에서 상속됩니다 . &lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;attr&quot;&gt; &lt;code&gt;Attr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt; &lt;code&gt;CharacterData&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;comment&quot;&gt; &lt;code&gt;Comment&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cdatasection&quot;&gt; &lt;code&gt;CDATASection&lt;/code&gt; 이&lt;/a&gt; 상속 함), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt; &lt;code&gt;ProcessingInstruction&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;documenttype&quot;&gt; &lt;code&gt;DocumentType&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt; &lt;code&gt;Notation&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt; &lt;code&gt;Entity&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt; &lt;code&gt;EntityReference&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a021cb24ae8e384026dfa371fdd382f37c5e9ffd" translate="yes" xml:space="preserve">
          <source>The following interfaces are included in the spec for purposes such as defining features used in multiple other places, or to serve as bases for multiple interfaces which can all be used as values of the same properties. You wouldn't directly use these in web development work, but they may be interesting for library authors to understand how the technology works so their implementations can be more effective, or for browser engineers looking for an easier reference than the spec provides.</source>
          <target state="translated">다음 인터페이스는 여러 다른 장소에서 사용되는 기능 정의와 같은 목적으로 또는 동일한 속성의 값으로 사용할 수있는 여러 인터페이스의 기반으로 사용하기 위해 사양에 포함되어 있습니다. 웹 개발 작업에서 직접 사용하지는 않지만 라이브러리 작성자는 기술이 어떻게 작동하는지 이해하여 구현이 더 효과적 일 수 있거나 사양이 제공하는 것보다 쉬운 참조를 찾고있는 브라우저 엔지니어에게 흥미로울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07134442d211d7db7601d0757b95753d772d781b" translate="yes" xml:space="preserve">
          <source>The following interfaces were defined in old versions of the Web Audio API spec, but are now obsolete and have been replaced by other interfaces.</source>
          <target state="translated">다음 인터페이스는 이전 버전의 Web Audio API 사양에서 정의되었지만 이제는 사용되지 않으며 다른 인터페이스로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="a9a470057028792dfc9fc1d7fcfc260bd063a1b3" translate="yes" xml:space="preserve">
          <source>The following is a brief list of common APIs in web and XML page scripting using the DOM.</source>
          <target state="translated">다음은 DOM을 사용하는 웹 및 XML 페이지 스크립팅의 일반적인 API 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2a0d98bd8137ccf5a2b1fe68d9d1408d675977e0" translate="yes" xml:space="preserve">
          <source>The following is a collection of tips to improve canvas performance.</source>
          <target state="translated">다음은 캔버스 성능을 개선하기위한 팁 모음입니다.</target>
        </trans-unit>
        <trans-unit id="44e9a24b4cb089c24adbfa0962b3605667b65759" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object and prepopulates it with key/value pairs from a form:</source>
          <target state="translated">다음 줄은 빈 &lt;code&gt;FormData&lt;/code&gt; 객체를 만들어 폼의 키 / 값 쌍으로 미리 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cde7c8cddf7ea566e202267a9500398411eeee16" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object:</source>
          <target state="translated">다음 줄은 빈 &lt;code&gt;FormData&lt;/code&gt; 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="81786697aa2915baa6eb1367d4520712fcfd6a90" translate="yes" xml:space="preserve">
          <source>The following line of code fetches the first file in the node's file list as a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">다음 코드 줄은 노드 파일 목록의 첫 번째 파일을 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체 로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="426e6e385386c94cdacea844c2a1f319cf0e51fe" translate="yes" xml:space="preserve">
          <source>The following logs &quot;x&quot; to the console.</source>
          <target state="translated">다음은 콘솔에 &quot;x&quot;를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="963c5a6e0aa3be83f64697774ff54e0d5e933af8" translate="yes" xml:space="preserve">
          <source>The following method has been added: &lt;code&gt;requestAutocomplete()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;requestAutocomplete()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="dcbe7ab86dddca8525df7d71f73e7feaee0ef08e" translate="yes" xml:space="preserve">
          <source>The following method was obsoleted long ago and was never implemented in all major browsers.</source>
          <target state="translated">다음 방법은 오래 전에 폐기되었으며 모든 주요 브라우저에서 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e2935dacf46c413c9b6802dd367e7e4a0743412c" translate="yes" xml:space="preserve">
          <source>The following methods and properties control how lines are drawn.</source>
          <target state="translated">다음 방법과 속성은 선을 그리는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="7a183f23fcb5b911e13e7161d484ab51c50cf954" translate="yes" xml:space="preserve">
          <source>The following methods are provided for drawing text. See also the &lt;a href=&quot;textmetrics&quot;&gt;&lt;code&gt;TextMetrics&lt;/code&gt;&lt;/a&gt; object for text properties.</source>
          <target state="translated">텍스트를 그리기 위해 다음과 같은 방법이 제공됩니다. 텍스트 속성에 대해서는 &lt;a href=&quot;textmetrics&quot;&gt; &lt;code&gt;TextMetrics&lt;/code&gt; &lt;/a&gt; 객체를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26c5f80976aa0be20738820e4fd8d05bdd5546d7" translate="yes" xml:space="preserve">
          <source>The following methods can be used to manipulate paths of objects.</source>
          <target state="translated">다음 방법을 사용하여 객체의 경로를 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4d1432c2dbf68bc107ddaffb6824018b2b6a47d" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt; and &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;checkValidity()&lt;/code&gt; 및 &lt;code&gt;setCustomValidity()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ff83193d8b7ea273739091d1b8a35da05b1c896f" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;, and &lt;code&gt;setSelectionRange()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;checkValidity()&lt;/code&gt; , &lt;code&gt;setCustomValidity()&lt;/code&gt; 및 &lt;code&gt;setSelectionRange()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="347b28106a91303e7112d8d47d1611f7c438ea69" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;checkValidity()&lt;/code&gt; , &lt;code&gt;setCustomValidity()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5a677c389659993fbee65633d9d269505fc3e2b0" translate="yes" xml:space="preserve">
          <source>The following methods have been added: checkValidity(), setCustomValidity(), setSelectionRange(), stepUp(), and stepDown().</source>
          <target state="translated">checkValidity (), setCustomValidity (), setSelectionRange (), stepUp () 및 stepDown () 메소드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="844b0ae147b2e4a66f7638c3b13f724b9789d4c4" translate="yes" xml:space="preserve">
          <source>The following methods have been deprecated:</source>
          <target state="translated">다음 메소드는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7e23c0fb22ffdd5bcbd559ff503b4cc560f6235a" translate="yes" xml:space="preserve">
          <source>The following more complex example will, 1 second from now, start playing 10 seconds worth of sound starting 3 seconds into the audio buffer.</source>
          <target state="translated">다음보다 복잡한 예제는 지금부터 1 초 후에 오디오 버퍼에서 3 초부터 시작하여 10 초 분량의 사운드를 재생하기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="0ce8afa470b4e22e25f79b369d753eab44f0ce8d" translate="yes" xml:space="preserve">
          <source>The following new functions can be used in GLSL shader code, if this extension is enabled:</source>
          <target state="translated">이 확장이 활성화 된 경우 GLSL 셰이더 코드에서 다음과 같은 새로운 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bb6ed2aea11e5dbc04bcda8f08fcc90ca8f615d" translate="yes" xml:space="preserve">
          <source>The following non-standard properties and methods were removed in Gecko 7 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt;&lt;code&gt;File.fileName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt;&lt;code&gt;File.fileSize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt;&lt;code&gt;File.getAsBinary()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt;&lt;code&gt;File.getAsDataURL()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt;&lt;code&gt;File.getAsText(string encoding)&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;bug 661876&lt;/a&gt;). Standard properties &lt;a href=&quot;file/name&quot;&gt;&lt;code&gt;File.name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;blob/size&quot;&gt;&lt;code&gt;Blob.size&lt;/code&gt;&lt;/a&gt;, and methods on &lt;a href=&quot;filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">Gecko 7 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)에서 비표준 속성 및 메소드는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt; &lt;code&gt;File.fileName&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt; &lt;code&gt;File.fileSize&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt; &lt;code&gt;File.getAsBinary()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt; &lt;code&gt;File.getAsDataURL()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt; &lt;code&gt;File.getAsText(string encoding)&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;버그 661876&lt;/a&gt; ). &lt;a href=&quot;filereader&quot;&gt; &lt;code&gt;FileReader&lt;/code&gt; 의&lt;/a&gt; 표준 속성 &lt;a href=&quot;file/name&quot;&gt; &lt;code&gt;File.name&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;blob/size&quot;&gt; &lt;code&gt;Blob.size&lt;/code&gt; &lt;/a&gt; 및 메서드를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7999e22162b843d28c2c7d7dadc1ae47ec77a0f9" translate="yes" xml:space="preserve">
          <source>The following options are currently not shipped anywhere, but will be added in the near future.</source>
          <target state="translated">다음 옵션은 현재 어디에도 제공되지 않지만 가까운 시일 내에 추가 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="0bca0b366d186075a610ccacd7763ba77630576a" translate="yes" xml:space="preserve">
          <source>The following options are listed in the most up-to-date spec, but are not supported in any browsers yet. It is advisable to keep checking back regularly to see if the status of these has updated, and let us know if you find any out of date information.</source>
          <target state="translated">다음 옵션은 최신 사양으로 나열되어 있지만 아직 모든 브라우저에서 지원되지 않습니다. 이러한 상태가 업데이트되었는지 정기적으로 다시 확인하고 오래된 정보가 있는지 알려주는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="dab6ae7d177978b8ad4a5f7a04acf9f23d4f35e0" translate="yes" xml:space="preserve">
          <source>The following polyfill for both &lt;code&gt;classList&lt;/code&gt; and &lt;code&gt;DOMTokenList&lt;/code&gt; ensures &lt;strong&gt;full&lt;/strong&gt; compliance (coverage) for all standard methods and properties of &lt;code&gt;Element.prototype.classList&lt;/code&gt; for &lt;strong&gt;IE10&lt;/strong&gt;-&lt;strong&gt;IE11 &lt;/strong&gt;browsers plus &lt;em&gt;nearly&lt;/em&gt; compliant behavior for &lt;strong&gt;IE 6-9&lt;/strong&gt;. Check it out:</source>
          <target state="translated">모두 다음 polyfill &lt;code&gt;classList&lt;/code&gt; 및 &lt;code&gt;DOMTokenList&lt;/code&gt; 는 보장 &lt;strong&gt;전체&lt;/strong&gt; 모든 표준 방법 및 속성에 대한 준수 (적용 범위) &lt;code&gt;Element.prototype.classList&lt;/code&gt; 에 대한 &lt;strong&gt;IE10&lt;/strong&gt; - &lt;strong&gt;IE11&lt;/strong&gt; 브라우저 플러스 &lt;em&gt;거의&lt;/em&gt; 호환 행동 &lt;strong&gt;IE 6-9&lt;/strong&gt; . 확인 해봐:</target>
        </trans-unit>
        <trans-unit id="b40c6195c1bf4082ae2e2c16ad99c64b92884a32" translate="yes" xml:space="preserve">
          <source>The following properties and methods provide general information and functionality to deal with the WebGL context:</source>
          <target state="translated">다음 특성 및 메소드는 WebGL 컨텍스트를 처리하기위한 일반 정보 및 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8cac2f579b1df11f92fc2cf3f414c007ee1107cd" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;long&lt;/code&gt;, instead of &lt;code&gt;DOMString&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 지금 &lt;code&gt;long&lt;/code&gt; 대신, &lt;code&gt;DOMString&lt;/code&gt; : &lt;code&gt;height&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;hspace&lt;/code&gt; 과 &lt;code&gt;vspace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="540ae2db3a026ae0b18dc8bb97dbd4a7b77d125d" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;unsigned long&lt;/code&gt;, instead of &lt;code&gt;long&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 지금 &lt;code&gt;unsigned long&lt;/code&gt; 대신, &lt;code&gt;long&lt;/code&gt; : &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bccfa5536c7256b5d16ac87aaa01c85ef8ce1cf" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;aLink&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;background&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, and &lt;code&gt;vLink&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;aLink&lt;/code&gt; , &lt;code&gt;bgColor&lt;/code&gt; , &lt;code&gt;background&lt;/code&gt; , &lt;code&gt;link&lt;/code&gt; , &lt;code&gt;text&lt;/code&gt; 및 &lt;code&gt;vLink&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a28057a0939cfe25855eb347f2adca794ea2098c" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;archive&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;codeBase&lt;/code&gt;, &lt;code&gt;codeType&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;standby&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 이제 사용되지 않습니다 : &lt;code&gt;align&lt;/code&gt; , &lt;code&gt;archive&lt;/code&gt; , &lt;code&gt;border&lt;/code&gt; , &lt;code&gt;code&lt;/code&gt; , &lt;code&gt;codeBase&lt;/code&gt; , &lt;code&gt;codeType&lt;/code&gt; , &lt;code&gt;declare&lt;/code&gt; , &lt;code&gt;hspace&lt;/code&gt; , &lt;code&gt;standby&lt;/code&gt; 와 &lt;code&gt;vspace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40e41974a4b98c8371ff98df7e6df6de6a9955b2" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;coords&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; , &lt;code&gt;coords&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;rev&lt;/code&gt; 및 &lt;code&gt;shape&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="033de105010b52742d2a10e0342cba893c4f499d" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; , &lt;code&gt;rev&lt;/code&gt; 및 &lt;code&gt;shape&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="485a8f05dc0f225d0a0ceedea0acef1e0e685a9a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;htmlFor,&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 이제 사용되지 않습니다 : &lt;code&gt;htmlFor,&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0596aede7b1e37bc1664dc66a6995aed451bd02a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;vspace&lt;/code&gt;, and &lt;code&gt;longdesc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; , &lt;code&gt;border&lt;/code&gt; , &lt;code&gt;align&lt;/code&gt; , &lt;code&gt;hspace&lt;/code&gt; , &lt;code&gt;vspace&lt;/code&gt; 및 &lt;code&gt;longdesc&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5f412282e5e7b092d0b22291afbc7c828c2654ad" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;scrolling&lt;/code&gt;, &lt;code&gt;marginWidth&lt;/code&gt;, &lt;code&gt;marginHeight&lt;/code&gt;, &lt;code&gt;longDesc&lt;/code&gt;, &lt;code&gt;frameBorder&lt;/code&gt;, and &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scrolling&lt;/code&gt; , &lt;code&gt;marginWidth&lt;/code&gt; , &lt;code&gt;marginHeight&lt;/code&gt; , &lt;code&gt;longDesc&lt;/code&gt; , &lt;code&gt;frameBorder&lt;/code&gt; 및 &lt;code&gt;align&lt;/code&gt; 속성은 이제 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ede688820ee2b35999d497dfdc00136c858b23b4" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;valueType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;valueType&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b3b8f0eeb230be61b2fe7e4de9ebb4b606f844a6" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: align and useMap.</source>
          <target state="translated">align 및 useMap 속성은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad77311e62c8dfe88fd1e4714b17641bb468b386" translate="yes" xml:space="preserve">
          <source>The following properties are obsolete and should no longer be used, but may still be present in some browser versions.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않으며 더 이상 사용되지 않아야하지만 일부 브라우저 버전에는 여전히있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd659134cecfb8ed19671e5846f553a38447d2fe" translate="yes" xml:space="preserve">
          <source>The following properties control how text is laid out.</source>
          <target state="translated">다음 속성은 텍스트 레이아웃 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="fcc56d9d42e1aeac5f778c3ec9e184c2ade16b45" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;crossorigin&lt;/code&gt;, &lt;code&gt;naturalWidth&lt;/code&gt;, &lt;code&gt;naturalHeight&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;crossorigin&lt;/code&gt; , &lt;code&gt;naturalWidth&lt;/code&gt; , &lt;code&gt;naturalHeight&lt;/code&gt; 및 &lt;code&gt;complete&lt;/code&gt; 속성이 추가 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="45af66c5828b7df3ca154ed8cfcacdfa24beb299" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;elements&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;valdiationMessage&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; , &lt;code&gt;elements&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;valdiationMessage&lt;/code&gt; , &lt;code&gt;validity&lt;/code&gt; 및 &lt;code&gt;willValidate&lt;/code&gt; 특성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9106c2f83ca823c1dbb62a4c66db05e31bee862e" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;hostname&lt;/code&gt; , &lt;code&gt;media&lt;/code&gt; , &lt;code&gt;pathname&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;protocol&lt;/code&gt; , &lt;code&gt;relList&lt;/code&gt; , &lt;code&gt;search&lt;/code&gt; 및 &lt;code&gt;text&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e5ce65405e3d1bf1df9d794039e6605f1b36dd9f" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;onafterprint&lt;/code&gt;, &lt;code&gt;onbeforeprint&lt;/code&gt;, &lt;code&gt;onbeforeunload&lt;/code&gt;, &lt;code&gt;onblur&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;onfocus&lt;/code&gt;, &lt;code&gt;onhashchange&lt;/code&gt;, &lt;code&gt;onload&lt;/code&gt;, &lt;code&gt;onmessage&lt;/code&gt;, &lt;code&gt;onoffline&lt;/code&gt;, &lt;code&gt;ononline&lt;/code&gt;, &lt;code&gt;onpopstate&lt;/code&gt;, &lt;code&gt;onresize&lt;/code&gt;, &lt;code&gt;onstorage&lt;/code&gt;, and &lt;code&gt;onunload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onafterprint&lt;/code&gt; , &lt;code&gt;onbeforeprint&lt;/code&gt; , &lt;code&gt;onbeforeunload&lt;/code&gt; , &lt;code&gt;onblur&lt;/code&gt; , &lt;code&gt;onerror&lt;/code&gt; , &lt;code&gt;onfocus&lt;/code&gt; , &lt;code&gt;onhashchange&lt;/code&gt; , &lt;code&gt;onload&lt;/code&gt; , &lt;code&gt;onmessage&lt;/code&gt; , &lt;code&gt;onoffline&lt;/code&gt; , &lt;code&gt;ononline&lt;/code&gt; , &lt;code&gt;onpopstate&lt;/code&gt; , &lt;code&gt;onresize&lt;/code&gt; , &lt;code&gt;onstorage&lt;/code&gt; 및 &lt;code&gt;onunload&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a68891bf522f8b6bd307ffd86d58976d54b29f94" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;rel&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;hreflang&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;hash&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rel&lt;/code&gt; , &lt;code&gt;relList&lt;/code&gt; , &lt;code&gt;media&lt;/code&gt; , &lt;code&gt;hreflang&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;hostname&lt;/code&gt; , &lt;code&gt;pathname&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;protocol&lt;/code&gt; , &lt;code&gt;search&lt;/code&gt; 및 &lt;code&gt;hash&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="baf05f7eb800ee38c56a3a8baa12017aced053a3" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;relList&lt;/code&gt;, and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;relList&lt;/code&gt; 및 &lt;code&gt;sizes&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="549966605855e353cd122e4b189c5c5bd1960ada" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcdoc&lt;/code&gt;, &lt;code&gt;sandbox&lt;/code&gt;, and &lt;code&gt;contentWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;srcdoc&lt;/code&gt; , &lt;code&gt;sandbox&lt;/code&gt; 및 &lt;code&gt;contentWindow&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="232b67171d17ab56813888110c8e2cc90c47eaca" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcset&lt;/code&gt;, &lt;code&gt;currentSrc&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;srcset&lt;/code&gt; , &lt;code&gt;currentSrc&lt;/code&gt; 및 &lt;code&gt;sizes&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a3a7dc190265feccf6bf2c4c5bc88c02a907e808" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;typeMustMatch&lt;/code&gt;, &lt;code&gt;contentWindow&lt;/code&gt;, &lt;code&gt;willValidate&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;validationMessage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typeMustMatch&lt;/code&gt; , &lt;code&gt;contentWindow&lt;/code&gt; , &lt;code&gt;willValidate&lt;/code&gt; , &lt;code&gt;validity&lt;/code&gt; 및 &lt;code&gt;validationMessage&lt;/code&gt; 특성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="927bd4b56683a253cd71c65593ef09d3afb2d262" translate="yes" xml:space="preserve">
          <source>The following properties have been added: autocomplete, autofocus, dirName, files, formAction, formEncType, formMethod, formNoValidate, formTarget, height, indeterminate, labels, list, max, min, multiple, pattern, placeholder, required, selectionDirection, selectionEnd, selectionStart, step, validationMessage, validity, valueAsDate, valueAsNumber, width, and willValidate.</source>
          <target state="translated">자동 완성, 자동 초점, dirName, 파일, formAction, formEncType, formMethod, formNoValidate, formTarget, 높이, 불확정, 레이블, 목록, 최대, 최소, 다중, 패턴, 자리 표시 자, 필수, selectionDirection, selectionEnd, selectionStart 속성이 추가되었습니다. , step, validationMessage, validity, valueAsDate, valueAsNumber, width 및 willValidate입니다.</target>
        </trans-unit>
        <trans-unit id="b9c33d1fdbc81019ebb51db1cee10b3e7c4d247b" translate="yes" xml:space="preserve">
          <source>The following properties have been deprecated. Where available, the appropriate replacement is provided.</source>
          <target state="translated">다음 속성이 더 이상 사용되지 않습니다. 가능한 경우 적절한 교체가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6ceac8a5e280ec3f9c80acfd40b4e66ef249da1e" translate="yes" xml:space="preserve">
          <source>The following properties have been obsoleted: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;axis&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;ch&lt;/code&gt;, &lt;code&gt;chOff&lt;/code&gt;, &lt;code&gt;noWrap&lt;/code&gt;, and &lt;code&gt;vAlign&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; , &lt;code&gt;axis&lt;/code&gt; , &lt;code&gt;bgColor&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;ch&lt;/code&gt; , &lt;code&gt;chOff&lt;/code&gt; , &lt;code&gt;noWrap&lt;/code&gt; 및 &lt;code&gt;vAlign&lt;/code&gt; 속성은 폐기되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ba7ec829e748cc25bede51fb0e2a5704ec26a816" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;allowFullscreen&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allowFullscreen&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ae9ec60baa162331f203be7299ebce783b46bc75" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">다음 속성이 추가되었습니다 : &lt;code&gt;control&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4ea2922e4142c8c188c4d96c3856b3948ab5596" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;download&lt;/code&gt;.</source>
          <target state="translated">다음 속성이 추가되었습니다 : &lt;code&gt;download&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="980d30ca747c998299ab98797c9d5b281e41f2b7" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;scoped&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scoped&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8a8340e636b5f60ab51b727a2f2f98697c0a645b" translate="yes" xml:space="preserve">
          <source>The following property has been removed: &lt;code&gt;profile&lt;/code&gt;.</source>
          <target state="translated">다음 특성이 제거되었습니다 : &lt;code&gt;profile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a004dfcc4e2fb6306e02db51b6e2aa8c9926ea1b" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않습니다 : &lt;code&gt;align&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd8bdb68205c26b3479df47bb389f878b2a56a31" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;nohref&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 이제 사용되지 않습니다 : &lt;code&gt;nohref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b201f43503b0631e93f31e7e2f9c5f1eafd78cfb" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">다음 특성이 더 이상 사용되지 않습니다 : &lt;code&gt;scheme&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf1b9d2030a0ad21d36ec803f5cf39fd22de9f2a" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않습니다 : &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25ae194a75b8f2ff70996b25da37203a84313673" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않습니다 : &lt;code&gt;width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a66d5ab9a4ebbed41a434981b6a6e2112f4a86a" translate="yes" xml:space="preserve">
          <source>The following requests both audio and video without any specific requirements:</source>
          <target state="translated">다음은 특정 요구 사항없이 오디오 및 비디오를 모두 요청합니다.</target>
        </trans-unit>
        <trans-unit id="8d449485bc3e48e7ba6cfba963eddbf84784d3f7" translate="yes" xml:space="preserve">
          <source>The following sample is not optimized. It does not make use of .NET 4.5 Websocket support.</source>
          <target state="translated">다음 샘플은 최적화되지 않았습니다. .NET 4.5 Websocket 지원을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a4390c0b3b9e6eb1850207aad3e4d78393d8f404" translate="yes" xml:space="preserve">
          <source>The following script illustrates the use of &lt;code&gt;createJavaScriptNode()&lt;/code&gt;:</source>
          <target state="translated">다음 스크립트는 &lt;code&gt;createJavaScriptNode()&lt;/code&gt; 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2efc08fc5fafa2d1a99ec29aaeae8e8165d2599f" translate="yes" xml:space="preserve">
          <source>The following shows how to specify a basic and advanced set of constraints. It specifies that the page or web app needs a width between 640 and 1280 and a height between 480 and 720, with the later number in each pair being preferred. The advanced property further specifies that an image size of 1920 by 1280 is the preferred or an aspect ratio of 1.333 if that is not available. Note that these constraints also illustrate what the spec refers to as a &lt;em&gt;backoff strategy&lt;/em&gt;.</source>
          <target state="translated">다음은 기본 및 고급 제한 조건 세트를 지정하는 방법을 보여줍니다. 페이지 또는 웹 앱에 640-1280 사이의 너비와 480-720 사이의 높이가 필요하며 각 쌍의 이후 숫자가 선호됨을 지정합니다. 고급 속성은 1920 x 1280의 이미지 크기를 사용할 수없는 경우 기본 크기 또는 1.333의 종횡비로 지정합니다. 이러한 제약 조건은 사양이 &lt;em&gt;백 오프 전략&lt;/em&gt; 이라고하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9fcee6ef9722b7fbb31ee3dc2c9420a162e09331" translate="yes" xml:space="preserve">
          <source>The following simple code snippet, registers a single handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; events. When the &lt;code&gt;src&lt;/code&gt; element is touched, the element's width and height will be calculate based on the touch point's &lt;code&gt;radiusX&lt;/code&gt; and &lt;code&gt;radiusY&lt;/code&gt; values and the element will then be rotated using the touch point's &lt;code&gt;rotationAngle&lt;/code&gt;.</source>
          <target state="translated">다음의 간단한 코드 스 니펫은 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 단일 핸들러를 등록 합니다. 때 &lt;code&gt;src&lt;/code&gt; 소자가 접촉되어, 소자의 폭과 높이를 계산 접촉점의 기반으로한다 &lt;code&gt;radiusX&lt;/code&gt; 및 &lt;code&gt;radiusY&lt;/code&gt; 값 요소는 터치 포인트의 사용 회전한다 &lt;code&gt;rotationAngle&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="6bbdb29db1d0c94109f1a7c92a3292460db82004" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video chunk by chunk as fast as possible, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음의 간단한 예제는 가능한 한 빨리 비디오를 청크로로드하여 가능한 빨리 재생합니다. 이 예는 Nick Desaulniers가 작성했으며 &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;여기에서 실시간&lt;/a&gt; 으로 볼 수 있습니다 ( 추가 조사를 위해 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스&lt;/a&gt; 를 다운로드 할 수도 있습니다).</target>
        </trans-unit>
        <trans-unit id="f1b420ca084c2dd3c6476717b349b9ebab07a132" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video chunk by chunk as fast as possible, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9daee8c94d2e723d971c30ced2186df50e1d60f" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video with &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 간단한 예제는 &lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 로 비디오를로드하여 최대한 빨리 재생합니다. 이 예는 Nick Desaulniers가 작성했으며 &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;여기에서 실시간&lt;/a&gt; 으로 볼 수 있습니다 ( 추가 조사를 위해 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스&lt;/a&gt; 를 다운로드 할 수도 있습니다).</target>
        </trans-unit>
        <trans-unit id="b39617e8d87b8095454b5e917c246ec1988eb6cf" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video with &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a55e4d8bfb84a88b63ff842a0ace53c76094e91" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, an then adds an event handler to a button so you can explicitly update the service worker whenever desired:</source>
          <target state="translated">다음의 간단한 예제는 서비스 워커 예제를 등록한 다음 버튼에 이벤트 핸들러를 추가하여 원하는 때마다 서비스 워커를 명시 적으로 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="617fc251290155a680172f5f4801ef9cb2ba30f6" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, but then immediately unregisters it again:</source>
          <target state="translated">다음 간단한 예제는 서비스 워커 예제를 등록한 다음 즉시 다시 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="b51fb322fb3194ebc213fd36c4afcd7969fb5f83" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView()&lt;/code&gt;&lt;/a&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;code&gt;setFieldOfView()&lt;/code&gt; method (the default &lt;code&gt;zNear&lt;/code&gt; and &lt;code&gt;zFar&lt;/code&gt; values are always used, in this case.)</source>
          <target state="translated">다음의 간단한 예는 위, 오른쪽, 아래 및 왼쪽에 대해 네 개의 지정된 각도 값으로 사용자 정의 시야를 설정하는 데 사용할 수있는 함수를 보여줍니다. &lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView()&lt;/code&gt; &lt;/a&gt; 생성자는 생성하는데 사용된다 &lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; 의&lt;/a&gt; 다음에 공급되는 입력되는 값으로부터 오브젝트 &lt;code&gt;setFieldOfView()&lt;/code&gt; 메소드 (기본 &lt;code&gt;zNear&lt;/code&gt; 및 &lt;code&gt;zFar&lt;/code&gt; 값은 항상 이러한 경우, 사용한다.)</target>
        </trans-unit>
        <trans-unit id="5a7d41c5f1fb0748bc1a09a0e883699ed5b53cd4" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;code&gt;VRFieldOfView()&lt;/code&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt;&lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">다음의 간단한 예는 위, 오른쪽, 아래 및 왼쪽에 대해 네 개의 지정된 각도 값으로 사용자 정의 시야를 설정하는 데 사용할 수있는 함수를 보여줍니다. &lt;code&gt;VRFieldOfView()&lt;/code&gt; 생성자는 생성하는데 사용된다 &lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; 의&lt;/a&gt; 다음에 공급되는 공급 값으로부터 오브젝트 &lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt; &lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt; 의&lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="7f3908dd528be5154d6daac0a0350f268b9df9c3" translate="yes" xml:space="preserve">
          <source>The following simple example shows how to create an &lt;code&gt;AudioBuffer&lt;/code&gt; and fill it with random white noise. You can find the full source code at our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt; repository; a &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;running live&lt;/a&gt; version is also available.</source>
          <target state="translated">다음의 간단한 예제는 &lt;code&gt;AudioBuffer&lt;/code&gt; 를 만들어 임의의 흰색 노이즈로 채우는 방법을 보여줍니다 . &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt; 저장소 에서 전체 소스 코드를 찾을 수 있습니다 . &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;실행 라이브&lt;/a&gt; 버전도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aaed96607a9eb8989fd88d3b37348479fa11ee0" translate="yes" xml:space="preserve">
          <source>The following simple example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">다음의 간단한 예는 스테레오 트랙 (예 : 음악)을 분리하고 왼쪽 및 오른쪽 채널을 다르게 처리하는 방법을 보여줍니다. 이를 사용하려면 연결할 채널의 색인과 연결할 채널의 색인을 지정할 수 있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; &lt;/a&gt; 메소드 의 두 번째 및 세 번째 매개 변수를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1ec998ed871fe631ecf6cff26f43ec1a15898cfa" translate="yes" xml:space="preserve">
          <source>The following sized formats become &lt;strong&gt;color-renderable&lt;/strong&gt;:</source>
          <target state="translated">다음 크기의 형식은 &lt;strong&gt;색상 렌더링이 가능합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a334cac117a121f75de4d55a7d0d4d6eb76a64a1" translate="yes" xml:space="preserve">
          <source>The following snippet (see our &lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice example&lt;/a&gt;) returns an array of all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt;&lt;code&gt;VRDevice&lt;/code&gt;&lt;/a&gt;s connected to your computer via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt;&lt;code&gt;Navigator.getVRDevices()&lt;/code&gt;&lt;/a&gt;. For each connected device it then prints out the &lt;code&gt;hardwareUnitId&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt;&lt;code&gt;VRDevice.deviceId&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt;&lt;code&gt;VRDevice.deviceName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 코드 조각 ( &lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice 예제&lt;/a&gt; 참조 )은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt; &lt;code&gt;Navigator.getVRDevices()&lt;/code&gt; &lt;/a&gt; 를 통해 컴퓨터에 연결된 모든 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt; &lt;code&gt;VRDevice&lt;/code&gt; &lt;/a&gt; 의 배열을 반환합니다 . 연결된 각 장치에 대해 &lt;code&gt;hardwareUnitId&lt;/code&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt; &lt;code&gt;VRDevice.deviceId&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt; &lt;code&gt;VRDevice.deviceName&lt;/code&gt; &lt;/a&gt; 을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="cde53a874f7c6fc47a640da7638ac0ffec1b1d05" translate="yes" xml:space="preserve">
          <source>The following snippet (see our &lt;a href=&quot;https://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice example&lt;/a&gt;) returns an array of all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt;&lt;code&gt;VRDevice&lt;/code&gt;&lt;/a&gt;s connected to your computer via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt;&lt;code&gt;Navigator.getVRDevices()&lt;/code&gt;&lt;/a&gt;. For each connected device it then prints out the &lt;code&gt;hardwareUnitId&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt;&lt;code&gt;VRDevice.deviceId&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt;&lt;code&gt;VRDevice.deviceName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457f5d04c88565917f43dfac13214bd074e2fa88" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's local &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 스 니펫은 현재 도메인의 로컬 &lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt; 객체에 액세스하고 &lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt; 사용하여 데이터 아이템을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="fed9e87e119969d675a88209e404113a28406dd4" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's session &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 스 니펫은 현재 도메인의 세션 &lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt; 객체에 액세스하고 &lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt; 사용하여 데이터 항목을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ba0244756728a50c0765beef0b4721b1698b3625" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;서비스 작업자 사용&lt;/a&gt; 에서 제공됩니다 . 자세한 내용은 거기로 가십시오.</target>
        </trans-unit>
        <trans-unit id="240c5a73fff654922ff506bc2264d123bdd90528" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;서비스 작업자 사용&lt;/a&gt; 에서 제공됩니다 . 자세한 내용은 거기로 가십시오.</target>
        </trans-unit>
        <trans-unit id="de570ef0cc4fd015eda992f4688f44ba889a97c9" translate="yes" xml:space="preserve">
          <source>The following snippet fires a notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 알림을 발생시킵니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성되면 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="2514c9568e3a7b89e3d9c897679c74245d0200c3" translate="yes" xml:space="preserve">
          <source>The following snippet is based on a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 코드는 닉 Desaulniers에 의해 작성된 간단한 예를 기반으로 ( &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;라이브 전체 데모를 보거나&lt;/a&gt; , 또는 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스 다운로드&lt;/a&gt; 더 조사를.)</target>
        </trans-unit>
        <trans-unit id="0663ef0fa746c52073e4b6f3972be72551d1f2d0" translate="yes" xml:space="preserve">
          <source>The following snippet is based on a simple example written by Nick Desaulniers (&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72325033b7e522f00c5fb59a2aee669eb1445c62" translate="yes" xml:space="preserve">
          <source>The following snippet is excerpted from our &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;Speech synthesiser demo&lt;/a&gt;.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;음성 합성기 데모&lt;/a&gt; 에서 발췌 한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="df97881cdcc699da0872492a819dff3185d0ccb3" translate="yes" xml:space="preserve">
          <source>The following snippet is from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 코드는 닉 Desaulniers에 의해 작성된 간단한 예에서이다 ( &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;라이브 전체 데모를 보거나&lt;/a&gt; , 또는 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스 다운로드&lt;/a&gt; 더 조사를.)</target>
        </trans-unit>
        <trans-unit id="fc6c748d558b6d2393252ecfe846cda2d47e4412" translate="yes" xml:space="preserve">
          <source>The following snippet is from a simple example written by Nick Desaulniers (&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3422ae4b7d1141eefbeae98d1ff9ed4b5faff0" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to create a notification that also triggers a device vibration; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 장치 진동을 트리거하는 알림을 작성하기위한 것입니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성 된 다음 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="1f9b70c1893a9f85337dc0f6282c583f813de3bd" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a notification that renotifies the user after it has been replaced; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 사용자가 교체 된 후이를 알리는 알림을 발생시킵니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성 된 다음 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="54a960e1233f36c8039008ae1581c185d1566349" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a silent notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 자동 알림을 실행하기위한 것입니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성 된 다음 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="43c6c8734f601a5eed0db097efa6b6695a66a1b5" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 코드는 닉 Desaulniers에 의해 작성된 간단한 예에서 가져옵니다 ( &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;라이브 전체 데모를 보거나&lt;/a&gt; , 또는 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스 다운로드&lt;/a&gt; 더 조사를.)</target>
        </trans-unit>
        <trans-unit id="019e579b23d69d441b7af9eb0ef5935a676ea332" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from a simple example written by Nick Desaulniers (&lt;a href=&quot;https://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb73a2cb8b33cc2c1b40bb31d4d41bbf7c64336" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;code&gt;onstatechange&lt;/code&gt; hander is used to log the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; to the console every time it changes.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states 데모&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ) &lt;code&gt;onstatechange&lt;/code&gt; 처리기 는 콘솔이 변경 될 때마다 현재 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt; 를 기록하는 데 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="38c6adaeda835cb4f4b23b37a7a925fd9aa8ae00" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;a href=&quot;../audiocontext/suspend&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext 상태 데모&lt;/a&gt; 에서 가져옵니다 ( &lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ). suspend / resume 버튼을 클릭하면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt; 가 쿼리됩니다. &lt;code&gt;running&lt;/code&gt; 경우 &lt;a href=&quot;../audiocontext/suspend&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 가 호출됩니다. 이 경우 &lt;code&gt;suspended&lt;/code&gt; , &lt;code&gt;resume()&lt;/code&gt; 호출된다. 각각의 경우, 약속이 해결되면 버튼의 텍스트 레이블이 적절하게 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="91143cc5df98401da6439e3a0f4134788f38b5f0" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;suspend()&lt;/code&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext 상태 데모&lt;/a&gt; 에서 가져옵니다 ( &lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ). suspend / resume 버튼을 클릭하면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt; 가 쿼리됩니다. &lt;code&gt;running&lt;/code&gt; 경우 &lt;code&gt;suspend()&lt;/code&gt; 가 호출됩니다. 이 경우 &lt;code&gt;suspended&lt;/code&gt; , &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt; &lt;code&gt;resume()&lt;/code&gt; &lt;/a&gt; 호출된다. 각각의 경우, 약속이 해결되면 버튼의 텍스트 레이블이 적절하게 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="857017b4004eeb5ca2389ecaa5a43cdb4e712efd" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;code&gt;onstatechange&lt;/code&gt; hander is used to log the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; to the console every time it changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd28e39601f32dc230e035de310aea9f43dc823" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;a href=&quot;../audiocontext/suspend&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2b960462780d255da40654553b3effa67728b1" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;suspend()&lt;/code&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278711f80cd4f70bd587e31deb1ba93ca8206029" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchange example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchange 예제&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;실제 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f43d25a9601cb720c4f6f5fb7d2a5b4e47df6467" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt;&lt;code&gt;AudioContext.onstatechange&lt;/code&gt;&lt;/a&gt; hander is used to log the current state to the console every time it changes.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContext states 데모&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;실제로 실행&lt;/a&gt; 되는 것을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt; &lt;code&gt;AudioContext.onstatechange&lt;/code&gt; &lt;/a&gt; ). AudioContext.onstatechange 처리기 는 현재 상태가 변경 될 때마다 콘솔에 기록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2cc52709cb8d1588f44ef12f2f804dc6f1d560dc" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the stop button is clicked, &lt;code&gt;close()&lt;/code&gt; is called. When the promise resolves, the example is reset to its beginning state.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContext states 데모&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ). 중지 버튼을 클릭하면 &lt;code&gt;close()&lt;/code&gt; 가 호출됩니다. 약속이 해결되면 예제가 시작 상태로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4fe202609423894409975fd964be992d57404a90" translate="yes" xml:space="preserve">
          <source>The following snippet requests permission from the user, then logs a different result to the console depending on the users' choice.</source>
          <target state="translated">다음 스 니펫은 사용자의 권한을 요청한 다음 사용자의 선택에 따라 다른 결과를 콘솔에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="9014c78a57a156cfb97e3754e18015825789076c" translate="yes" xml:space="preserve">
          <source>The following snippet shows the results of testing for the existence of &lt;code&gt;username&lt;/code&gt; in the &lt;code&gt;FormData&lt;/code&gt; object, before and after appending a &lt;code&gt;username&lt;/code&gt; value to it with &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">코드 조각 쇼를의 존재 여부를 테스트 한 결과 다음과 같은 &lt;code&gt;username&lt;/code&gt; 에 &lt;code&gt;FormData&lt;/code&gt; 전과 추가 후, 객체 &lt;code&gt;username&lt;/code&gt; 과 가치를 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; 를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="14ce2d252042d387adc5b9436e0a2bb3a7228baf" translate="yes" xml:space="preserve">
          <source>The following snippets are taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;life-cycle-callbacks&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;see it live also&lt;/a&gt;), which creates an element that displays a square of a size and color specified in the element's attributes.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;수명주기 콜백&lt;/a&gt; 예제 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;실제 참조)에서 가져 와서&lt;/a&gt; 요소 속성에 지정된 크기와 색상의 제곱을 표시하는 요소를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="67ef3f9dc7d5caba906229758a1ef9d8bfceaa22" translate="yes" xml:space="preserve">
          <source>The following special attributes may also be specified:</source>
          <target state="translated">다음과 같은 특수 속성도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f96fae6ce5ceff5ac67507957a759cce4424df0" translate="yes" xml:space="preserve">
          <source>The following strings are permitted values for the facing mode. These may represent separate cameras, or they may represent directions in which an adjustable camera can be pointed.</source>
          <target state="translated">다음 문자열은 페이싱 모드에 허용되는 값입니다. 이들은 별도의 카메라를 나타내거나 조정 가능한 카메라를 가리킬 수있는 방향을 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b869ceb7f13de7970a1ce24e07ddc38b172a5db1" translate="yes" xml:space="preserve">
          <source>The following strings represent the possible orientation requirements you may specify.</source>
          <target state="translated">다음 문자열은 지정할 수있는 가능한 방향 요구 사항을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="099adc8329d830f794c00acd033b1da0b448b1ab" translate="yes" xml:space="preserve">
          <source>The following strings will be displayed in the user's console:</source>
          <target state="translated">사용자 콘솔에 다음 문자열이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="2f172756246c880f3029487fd72e505a75fca45a" translate="yes" xml:space="preserve">
          <source>The following table briefly describes these data types.</source>
          <target state="translated">다음 표는 이러한 데이터 유형을 간략하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="587d2f2a8aaeeadc0c0001bb3f9aa1f4b4a19bea" translate="yes" xml:space="preserve">
          <source>The following table shows the different ways the keys are supplied:</source>
          <target state="translated">다음 표는 키가 제공되는 다양한 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="37eab136705d14ae80a537b8e821daf9f9baf8e4" translate="yes" xml:space="preserve">
          <source>The following table shows the return values for different elements:</source>
          <target state="translated">다음 표는 다른 요소에 대한 리턴 값을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6939c3cf5d5b611835b8cd9c48b653edb97f3222" translate="yes" xml:space="preserve">
          <source>The following tables show what code values are used for each native scancode or virtual keycode on major platforms. Because some browsers choose to interpret physical keys differently, there are some differences in which keys map to which codes. These tables show those variations when known.</source>
          <target state="translated">다음 표는 주요 플랫폼에서 각 원시 스캔 코드 또는 가상 키 코드에 사용되는 코드 값을 보여줍니다. 일부 브라우저는 실제 키를 다르게 해석하도록 선택하기 때문에 키와 코드를 매핑하는 데 약간의 차이가 있습니다. 이 표는 알려진 경우 이러한 변형을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="af4521bc495383ef37b6bffc2fc840203d23a965" translate="yes" xml:space="preserve">
          <source>The following tags are the HTML tags allowed in a cue and require opening and closing tags (e.g. &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">다음 태그는 큐에 허용되는 HTML 태그이며 열기 및 닫기 태그가 필요합니다 (예 : &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dff431f40d7ff60d18d6833fbddc178194c47f3a" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.confirm and DOM:window.alert Dialog boxes are modal windows; they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">DOM : window.confirm 및 DOM : window.alert 대화 상자는 모달 창입니다. 대화 상자가 닫힐 때까지 사용자가 나머지 프로그램 인터페이스에 액세스하지 못하게합니다. 이러한 이유로 대화 상자 (또는 모달 창)를 만드는 함수를 과도하게 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cc96ab269e85a3c2dc2cf5a1982bf7fae6b0eacb" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.alert Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window). And regardless, there are very good reasons to &lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;avoid using dialog boxes for confirmation&lt;/a&gt;.</source>
          <target state="translated">이 글에서는 DOM : window.prompt와 DOM : window.alert 텍스트를 공유합니다. 대화 상자는 모달 창입니다. 대화 상자가 닫힐 때까지 사용자가 나머지 프로그램 인터페이스에 액세스 할 수 없습니다. 이러한 이유로 대화 상자 (또는 모달 창)를 만드는 함수를 과도하게 사용해서는 안됩니다. 그럼에도 &lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;불구하고 확인&lt;/a&gt; 을 위해 대화 상자를 사용하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="15e06a226e5cbfcfe7eeef8afee245aef503569f" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.confirm Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">DOM : window.prompt 및 DOM : window.confirm 대화 상자는 모달 창이며, 대화 상자가 닫힐 때까지 사용자가 나머지 프로그램 인터페이스에 액세스 할 수 없습니다. 이러한 이유로 대화 상자 (또는 모달 창)를 만드는 함수를 과도하게 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="4a320c8e0d82a5ff008d8131b1a9708ec9aa9d7d" translate="yes" xml:space="preserve">
          <source>The following types are also permitted as descendants of the root node, in addition to &lt;code&gt;Node&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 및 &lt;code&gt;Attr&lt;/code&gt; 외에도 루트 노드의 하위 항목으로 다음 유형이 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="44df6ec9f734ad3e2857bb208a65af405d15858b" translate="yes" xml:space="preserve">
          <source>The following types are used in &lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt; 인터페이스 에는 다음 유형이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="12f6529433316717f49ccef56d04b522bdd179f1" translate="yes" xml:space="preserve">
          <source>The following would set up a simple audio graph, featuring an &lt;code&gt;AudioDestinationNode&lt;/code&gt; with &lt;code&gt;maxChannelCount&lt;/code&gt; of 2:</source>
          <target state="translated">다음은 &lt;code&gt;maxChannelCount&lt;/code&gt; 가 2 인 &lt;code&gt;AudioDestinationNode&lt;/code&gt; 를 특징으로하는 간단한 오디오 그래프를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c3dfc201b0ad1a5f86d4eaab4e4f4a4ab7820a4a" translate="yes" xml:space="preserve">
          <source>The font source. This can be either:</source>
          <target state="translated">폰트 소스. 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e1c1c17699a8587a876e229f70d9cdefa7b050" translate="yes" xml:space="preserve">
          <source>The form controls in the returned collection are in the same order in which they appear in the form by following a preorder, depth-first traversal of the tree. This is called &lt;strong&gt;tree order&lt;/strong&gt;.</source>
          <target state="translated">반환 된 컬렉션의 폼 컨트롤은 순서대로 트리의 깊이 우선 순회를 따라 폼에 나타나는 순서와 같습니다. 이것을 &lt;strong&gt;트리 순서&lt;/strong&gt; 라고 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="124a0f04f43a018ba98a8d22bd1275aa2d6b26a9" translate="yes" xml:space="preserve">
          <source>The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the &lt;strong&gt;form&lt;/strong&gt; attribute on the parent fieldset element. Otherwise, it returns null.</source>
          <target state="translated">이 전설이 속한 형태. 범례에 fieldset 요소가 부모 인 경우이 속성 은 부모 fieldset 요소 의 &lt;strong&gt;form&lt;/strong&gt; 속성 과 동일한 값을 반환합니다 . 그렇지 않으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="70f3b6ba6a96241580d1a54f82c3d94867d47693" translate="yes" xml:space="preserve">
          <source>The format of the ID string is not defined by the specification, so you cannot reliably make any assumptions about the contents of the string, or assume that the format of the string will remain unchanged for a given object type.</source>
          <target state="translated">ID 문자열의 형식은 사양에서 정의되지 않으므로 문자열의 내용에 대해 확실하게 가정하거나 문자열 형식이 지정된 객체 유형에 대해 변경되지 않은 것으로 가정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b8a4ee2e37ccf04ab80c411770e74d74cd1d9357" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntax:</source>
          <target state="translated">문자열 형식은 다음 HTML 마이크로 구문 중 하나를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="b07887490e8e70b0a98f842832497826704c2208" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntaxes:</source>
          <target state="translated">문자열의 형식은 다음 HTML 마이크로 구문 중 하나를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="cd54e78ac53c76fd1d9c1efce5fd1406ad0f9364" translate="yes" xml:space="preserve">
          <source>The format of this message (as is the case with everything you do when handling signaling) is entirely up to you, depending on your needs; you can provide other information as required.</source>
          <target state="translated">이 메시지의 형식은 (신호 처리시 수행하는 모든 작업과 마찬가지로) 필요에 따라 전적으로 귀하에게 달려 있습니다. 필요에 따라 다른 정보를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d6a24afb0dece7dca5485bc27e2ff6b4f4a4a3b" translate="yes" xml:space="preserve">
          <source>The formats are Unicode strings giving the type or format of the data, generally given by a MIME type. Some values that are not MIME types are special-cased for legacy reasons (for example &quot;&lt;code&gt;text&lt;/code&gt;&quot;).</source>
          <target state="translated">형식은 일반적으로 MIME 형식으로 제공되는 데이터 형식 또는 형식을 제공하는 유니 코드 문자열입니다. MIME 유형이 아닌 일부 값은 레거시 이유로 특수한 경우입니다 (예 : &quot; &lt;code&gt;text&lt;/code&gt; &quot;).</target>
        </trans-unit>
        <trans-unit id="0087f6fd7646cd44d6104055d0b94fe848721be5" translate="yes" xml:space="preserve">
          <source>The formula for the blending color can be described like this: color(RGBA) = (sourceColor * &lt;em&gt;sfactor&lt;/em&gt;) + (destinationColor * &lt;em&gt;dfactor&lt;/em&gt;). The RBGA values are between 0 and 1.</source>
          <target state="translated">블렌딩 색상의 공식은 다음과 같이 설명 할 수 있습니다 : color (RGBA) = (sourceColor * &lt;em&gt;sfactor&lt;/em&gt; ) + (destinationColor * &lt;em&gt;dfactor&lt;/em&gt; ). RBGA 값은 0과 1 사이입니다.</target>
        </trans-unit>
        <trans-unit id="6818150b763e509afd9bc5e39880ecc483e16e2e" translate="yes" xml:space="preserve">
          <source>The formulas for the blending factors can be described like this (all RGBA values are between 0 and 1):</source>
          <target state="translated">혼합 계수에 대한 공식은 다음과 같이 설명 할 수 있습니다 (모든 RGBA 값은 0과 1 사이 임).</target>
        </trans-unit>
        <trans-unit id="e3e901979eacdd6ab73765b7b88f936e346f65f1" translate="yes" xml:space="preserve">
          <source>The forward properties represent the 3D coordinate position of the listener's forward direction (e.g. the direction they are facing in), while the up properties represent the 3D coordinate position of the top of the listener's head. These two together can nicely set the direction.</source>
          <target state="translated">앞으로 속성은 리스너 앞으로 방향의 3D 좌표 위치 (예 : 향하는 방향)를 나타내고 위로 속성은 리스너 머리 상단의 3D 좌표 위치를 나타냅니다. 이 둘은 함께 방향을 정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="041c138364aae62ecff69158e7c7a54a6fd35776" translate="yes" xml:space="preserve">
          <source>The four arguments work as follows.</source>
          <target state="translated">네 가지 주장은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1011d851c082a9b956ab13e54bd720393d521e67" translate="yes" xml:space="preserve">
          <source>The fragment is not &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;percent-decoded&lt;/a&gt;. If the URL does not have a fragment identifier, this property contains an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">프래그먼트는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;퍼센트 디코딩&lt;/a&gt; 되지 않습니다 . URL에 조각 식별자가없는 경우이 속성에는 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="e3af9acb9c95cf8e0f793580905b93e7a1b87001" translate="yes" xml:space="preserve">
          <source>The fragment shader</source>
          <target state="translated">프래그먼트 셰이더</target>
        </trans-unit>
        <trans-unit id="3df0104722963f36d878a0873d227d82b7fdd249" translate="yes" xml:space="preserve">
          <source>The fragment shader likewise needs to be updated:</source>
          <target state="translated">프래그먼트 셰이더도 마찬가지로 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="64fa5fd9f42ec961467a9058b9d13d5c91b99add" translate="yes" xml:space="preserve">
          <source>The fragment shader now needs to be updated to take into account the lighting value computed by the vertex shader:</source>
          <target state="translated">버텍스 셰이더가 계산 한 조명 값을 고려하여 프래그먼트 셰이더를 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a612e7bbe8d0fe6988d26a61483b15a1bc0a8f2" translate="yes" xml:space="preserve">
          <source>The frame should subsequently be rendered using the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; and matrices provided by the last call to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt;&lt;code&gt;getFrameData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이후 프레임은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt; &lt;code&gt;getFrameData()&lt;/code&gt; &lt;/a&gt; 에 대한 마지막 호출에서 제공 한 &lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt; 및 행렬을 사용하여 렌더링되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2b3d3dea05d6834ea613bf164db65c8fe6e7da20" translate="yes" xml:space="preserve">
          <source>The frequency (in &lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;hertz&lt;/a&gt;) of the periodic waveform. Its default is 440.</source>
          <target state="translated">주기적 파형 의 주파수 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;헤르츠 단위&lt;/a&gt; ). 기본값은 440입니다.</target>
        </trans-unit>
        <trans-unit id="d484ec59c9af026e80edb2fe0d23c7da19757ee1" translate="yes" xml:space="preserve">
          <source>The frequency with the maximal &lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;group delay&lt;/a&gt;, that is, the frequency where the center of the phase transition occurs.</source>
          <target state="translated">최대 &lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;그룹 지연&lt;/a&gt; 이있는 주파수, 즉 위상 전이의 중심이 발생하는 주파수입니다.</target>
        </trans-unit>
        <trans-unit id="774b22b0b621bb4340160d716ac0c32b1e939a89" translate="yes" xml:space="preserve">
          <source>The frequency with the maximal &lt;a href=&quot;https://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;group delay&lt;/a&gt;, that is, the frequency where the center of the phase transition occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fce4873ad033b593cf32077135a92543ed925f8" translate="yes" xml:space="preserve">
          <source>The full &lt;code&gt;RTCStatsReport&lt;/code&gt; interface is made up of a mapping of strings to subdictionaries which contain the statistics for each category, such as ICE candidate or media stream statistics. Each of these subdictionaries has in common the following values:</source>
          <target state="translated">전체 &lt;code&gt;RTCStatsReport&lt;/code&gt; 인터페이스는 문자열을 ICE 후보 또는 미디어 스트림 통계와 같은 각 범주에 대한 통계를 포함하는 하위 사전 에 맵핑하여 구성됩니다. 이러한 각 사전은 공통적으로 다음과 같은 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ffa910ae7144ef34b200855cd6208b4a0b52608a" translate="yes" xml:space="preserve">
          <source>The function can be defined to take an &lt;code&gt;event&lt;/code&gt; parameter. &lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;The return value is treated in a special way, described in the HTML specification&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 매개 변수 를 사용하도록 함수를 정의 할 수 있습니다 . &lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;리턴 값은 HTML 스펙에 설명 된 특수한 방식으로 처리됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82990abb038bdb45a1f9904cc6954390447c0f92" translate="yes" xml:space="preserve">
          <source>The function can be defined to take an &lt;code&gt;event&lt;/code&gt; parameter. &lt;a href=&quot;https://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;The return value is treated in a special way, described in the HTML specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f1ad93ba06b0d818b5733ec2a57a841c9efb3c" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Chrome 58.</source>
          <target state="translated">안전하지 않은 컨텍스트에는 기능이 없습니다. Chrome 58까지는 적용되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="b834639c76d4175964d23be8eebc0c701bc271ae" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Opera 45.</source>
          <target state="translated">안전하지 않은 컨텍스트에는 기능이 없습니다. 이것은 Opera 45까지 시행되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="7d289fbe4c0a20118120133713010873ee91a8b8" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until version 58.</source>
          <target state="translated">안전하지 않은 컨텍스트에는 기능이 없습니다. 버전 58까지는 적용되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="13779048c72a0341f84d6e3b9c7129317fe74d21" translate="yes" xml:space="preserve">
          <source>The function should return &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt;, which causes the TreeWalker to return the node, &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt;, which causes the TreeWalker to ignore the entire subtree, or &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt; 를 반환하여 TreeWalker가 &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt; 노드를 반환 하게하여 TreeWalker가 전체 하위 트리 또는 &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt; 를 무시하도록합니다 .</target>
        </trans-unit>
        <trans-unit id="9cc7d21d3594f11e9287cbb36ea5d03221e53307" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked (read/write). It is called with three arguments: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the daemon - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and backwards (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is decreasing or not) &amp;ndash; see above. If the &lt;code&gt;myDaemon.task&lt;/code&gt; function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused.</source>
          <target state="translated">반복적으로 호출되는 함수 (읽기 / 쓰기) &lt;em&gt;인덱스&lt;/em&gt; (각 호출의 반복 인덱스), &lt;em&gt;길이&lt;/em&gt; (데몬에 지정된 총 호출 수-finite 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; ) 및 역방향 ( &lt;em&gt;인덱스&lt;/em&gt; 가 감소 하는지 여부를 나타내는 부울)의 세 인수로 호출됩니다. &amp;ndash; 위 참조 . 는 IF &lt;code&gt;myDaemon.task&lt;/code&gt; 의 함수가 반환 &lt;code&gt;false&lt;/code&gt; 값을 &lt;em&gt;데몬이&lt;/em&gt; 일시 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="ff919696a16860f3c446ef35472c58705a8c1296" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked . &lt;strong&gt;It is called with three parameters&lt;/strong&gt;: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the &lt;em&gt;daemon&lt;/em&gt; - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and &lt;em&gt;backwards&lt;/em&gt; (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is increasing or decreasing). It is something like &lt;em&gt;callback&lt;/em&gt;.call(&lt;em&gt;thisObject&lt;/em&gt;, &lt;em&gt;index&lt;/em&gt;, &lt;em&gt;length&lt;/em&gt;, &lt;em&gt;backwards&lt;/em&gt;). &lt;strong&gt;If the callback function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused&lt;/strong&gt;.</source>
          <target state="translated">반복적으로 호출되는 함수입니다. &lt;strong&gt;그것은 세 개의 매개 변수로 호출&lt;/strong&gt; : &lt;em&gt;인덱스&lt;/em&gt; (각각의 호출의 반복 인덱스), &lt;em&gt;길이&lt;/em&gt; (합계에 할당 된 호출의 수 &lt;em&gt;데몬&lt;/em&gt; - 유한 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; )과 &lt;em&gt;뒤쪽&lt;/em&gt; (여부를 나타내는 부울 &lt;em&gt;인덱스가&lt;/em&gt; 증가 또는 감소된다). 그것은 같은 것입니다 &lt;em&gt;콜백&lt;/em&gt; .call ( &lt;em&gt;에서 thisObject&lt;/em&gt; , &lt;em&gt;인덱스&lt;/em&gt; , &lt;em&gt;길이&lt;/em&gt; , &lt;em&gt;뒤쪽&lt;/em&gt; ). &lt;strong&gt;콜백 함수가 &lt;code&gt;false&lt;/code&gt; 값을 반환 하면 &lt;em&gt;데몬&lt;/em&gt; 이 일시 중지 된 것&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2c512c5c25a4008fb0fa7e237ea0d8bc60871432" translate="yes" xml:space="preserve">
          <source>The function that we will be using is part of the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt;. It takes an array of matrices and multiplies them together. In WebGL shader code, this is built into the language and the * operator can be used. Additionally this example uses a scale and translate function which return matrices as defined above.</source>
          <target state="translated">우리가 사용할 &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;기능&lt;/a&gt; 은 유틸리티 기능의 일부입니다 . 행렬 배열을 취하고 함께 곱합니다. WebGL 셰이더 코드에서는 언어에 내장되어 있으며 * 연산자를 사용할 수 있습니다. 또한이 예제에서는 위에서 정의한대로 행렬을 반환하는 스케일 및 변환 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f8f3b51a9e8bb8d9b3e6e122bcfcfc0d2161b028" translate="yes" xml:space="preserve">
          <source>The function to be executed (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;function&lt;/a&gt;).</source>
          <target state="translated">실행할 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;기능&lt;/a&gt; ( function ).</target>
        </trans-unit>
        <trans-unit id="39c8e71128af91596336eb452e7286ea0d2aa576" translate="yes" xml:space="preserve">
          <source>The function to call when it's time to update your animation for the next repaint. The callback function is passed one single argument, a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; returned from &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;performance.now()&lt;/code&gt;&lt;/a&gt;, indicating the point in time when &lt;code&gt;requestAnimationFrame()&lt;/code&gt; starts to execute callback functions.</source>
          <target state="translated">다음 다시 그리기를 위해 애니메이션을 업데이트 할 때 호출하는 함수입니다. 콜백 함수에는 &lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;performance.now()&lt;/code&gt; &lt;/a&gt; 에서 반환 된 &lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; 라는&lt;/a&gt; 단일 인수가 전달 되어 &lt;code&gt;requestAnimationFrame()&lt;/code&gt; 이 콜백 함수 실행을 시작 하는 시점을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="118ddaf0d7e0d038f313fb7b5e3733d8da360196" translate="yes" xml:space="preserve">
          <source>The function to execute for each element, taking three arguments:</source>
          <target state="translated">세 가지 인수를 사용하여 각 요소에 대해 실행할 함수 :</target>
        </trans-unit>
        <trans-unit id="4bc7abcba83af8b98f18914055591a42c5efab95" translate="yes" xml:space="preserve">
          <source>The function was called with an empty list of store names.</source>
          <target state="translated">비어있는 상점 이름 목록으로 함수가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="1663bc9a623697e9b83a522640506562341c8556" translate="yes" xml:space="preserve">
          <source>The function we'll be using as our task handler&amp;mdash;that is, the function that will be used as the value of the task object's &lt;code&gt;handler&lt;/code&gt; property&amp;mdash;is &lt;code&gt;logTaskHandler&lt;/code&gt;(). It's a simple function that outputs a bunch of stuff to the log for each task. In your own application, you'd replace this code with whatever task it is you wish to perform during idle time. Just remember that anything you want to do that changes the DOM needs to be handled through &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">태스크 핸들러로 사용할 함수, 즉 태스크 객체의 &lt;code&gt;handler&lt;/code&gt; 속성 값으로 사용될 함수 는 &lt;code&gt;logTaskHandler&lt;/code&gt; ()입니다. 각 작업의 로그에 많은 것들을 출력하는 간단한 기능입니다. 자신의 응용 프로그램 에서이 코드를 유휴 시간 동안 수행하려는 작업으로 바꿉니다. &lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt; 통해 DOM을 변경하기 위해 수행하려는 모든 작업을 기억하십시오 .</target>
        </trans-unit>
        <trans-unit id="018b1f6ee20d9b15c623644706ca5374bf085d12" translate="yes" xml:space="preserve">
          <source>The functions are used to log event activity to the application window, to support debugging and learning about the event flow.</source>
          <target state="translated">이 함수는 이벤트 활동을 응용 프로그램 창에 기록하고 이벤트 흐름에 대한 디버깅 및 학습을 지원하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="17b2e9fd5d662441712345f7eb618e097ccd34a4" translate="yes" xml:space="preserve">
          <source>The functions invoked inside the constructor simply return the required object parameters:</source>
          <target state="translated">생성자 내에서 호출 된 함수는 필요한 객체 매개 변수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20d85c0c3b2679dda5186febb3376fe7275c45ee" translate="yes" xml:space="preserve">
          <source>The gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is instantly applied, causing unaesthetic 'clicks' in the resulting audio. To prevent this from happening, never change the value directly but use the exponential interpolation methods on the &lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">게인은 시간이 지남에 따라 변하는 단위가없는 값으로, 모든 입력 채널의 각 해당 샘플에 곱해집니다. 수정하면 새로운 게인이 즉시 적용되어 결과적인 오디오에 미학적 '클릭'이 발생합니다. 이를 방지하려면 값을 직접 변경하지 &lt;a href=&quot;audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt; 인터페이스 에서 지수 보간 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="eaabf74fc177ea1394fb602c44a4fe5fd06cc393" translate="yes" xml:space="preserve">
          <source>The gathering state indicates whether or not the ICE agent has begun gathering candidates, and if so, whether or not gathering has finished. Its possible values are:</source>
          <target state="translated">수집 상태는 ICE 에이전트가 수집 후보를 시작했는지 여부와, 그렇다면 수집이 완료되었는지 여부를 나타냅니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="785a9fed1f671752be81692bc482955696c534a2" translate="yes" xml:space="preserve">
          <source>The generated object is 100 pixels wide and 50 pixels tall, making 5,000 pixels in all. Each pixel within an &lt;code&gt;ImageData&lt;/code&gt; object consists of four array values, so the object's &lt;a href=&quot;../imagedata/data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; property has a length of 4 &amp;times; 5,000, or 20,000.</source>
          <target state="translated">생성 된 객체의 너비는 100 픽셀, 높이는 50 픽셀이므로 모두 5,000 픽셀입니다. &lt;code&gt;ImageData&lt;/code&gt; 객체 내의 각 픽셀 은 4 개의 배열 값으로 구성되므로 객체의 &lt;a href=&quot;../imagedata/data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; 속성 길이는 4 &amp;times; 5,000 또는 20,000입니다.</target>
        </trans-unit>
        <trans-unit id="67bea8f0b32d9137a521d9e2514558f1502e539a" translate="yes" xml:space="preserve">
          <source>The generic syntax skeleton looks like this:</source>
          <target state="translated">일반적인 구문 골격은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0aeecffd6a3d66a9905b2dbf4cd36162a802c40f" translate="yes" xml:space="preserve">
          <source>The geolocation object</source>
          <target state="translated">지리적 위치 객체</target>
        </trans-unit>
        <trans-unit id="7b75b60fdb1488ade59db9302acd940a599daa7e" translate="yes" xml:space="preserve">
          <source>The given URL does not match another URL. (Legacy code value: &lt;code&gt;21&lt;/code&gt; and legacy constant name: &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt;)</source>
          <target state="translated">지정된 URL이 다른 URL과 일치하지 않습니다. (레거시 코드 값 : &lt;code&gt;21&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="628bfb259be7a4fa1db2d527e3b85167e6cdad06" translate="yes" xml:space="preserve">
          <source>The global limit is a &quot;soft limit&quot; since there's a chance that some space will be freed and the operation can continue.</source>
          <target state="translated">일부 공간이 비워지고 작업을 계속할 수 있으므로 전역 제한은 &quot;소프트 제한&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="36c3c80fb28b9c6e79d4ea20192420f8464a8db0" translate="yes" xml:space="preserve">
          <source>The global scope of workers. This objects defines &lt;a href=&quot;#workerscope&quot;&gt;worker-specific functions&lt;/a&gt;.</source>
          <target state="translated">노동자의 글로벌 범위. 이 객체는 &lt;a href=&quot;#workerscope&quot;&gt;작업자 별 기능을&lt;/a&gt; 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="7c077e2bc8896d8e1a3ac81c57a3fa9085b0fa6f" translate="yes" xml:space="preserve">
          <source>The grammar</source>
          <target state="translated">문법</target>
        </trans-unit>
        <trans-unit id="a8587c7b422a4ad7c17d1f12c5019e4a8e5d5ad9" translate="yes" xml:space="preserve">
          <source>The grammar format used is &lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt; (&lt;strong&gt;JSGF&lt;/strong&gt;) &amp;mdash; you can find a lot more about it at the previous link to its spec. However, for now let's just run through it quickly:</source>
          <target state="translated">사용되는 문법 형식은 &lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech 문법 형식&lt;/a&gt; ( &lt;strong&gt;JSGF&lt;/strong&gt; ) - 당신은 그것의 사양에 이전 링크에서 더 그것에 대해 많이 찾을 수 있습니다. 그러나 지금 당장 빨리 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="37ebd6d4ec595cf505d9c85f1c2e5509fced29a6" translate="yes" xml:space="preserve">
          <source>The grammar format used is &lt;a href=&quot;https://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt; (&lt;strong&gt;JSGF&lt;/strong&gt;) &amp;mdash; you can find a lot more about it at the previous link to its spec. However, for now let's just run through it quickly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7126ef3f8a2e144f217353ede8f0f395dc857c" translate="yes" xml:space="preserve">
          <source>The grid</source>
          <target state="translated">그리드</target>
        </trans-unit>
        <trans-unit id="b94977a7bcdf0de930dedcd030e9115ea68daa7b" translate="yes" xml:space="preserve">
          <source>The group ID is not usable across multiple browsing sessions. However, it can be used to ensure that audio input and output are both being performed on the same headset, for example, or to ensure that the built-in camera and microphone on a phone are being used for video conferencing purposes.</source>
          <target state="translated">여러 브라우징 세션에서 그룹 ID를 사용할 수 없습니다. 그러나 예를 들어 오디오 입력 및 출력이 모두 동일한 헤드셋에서 수행되도록하거나 전화의 내장 카메라 및 마이크가 화상 회의용으로 사용되도록하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49f2ad6a68766544272001845469929b3d0171ee" translate="yes" xml:space="preserve">
          <source>The group limit is also called the &quot;hard limit&quot;: it doesn't trigger origin eviction.</source>
          <target state="translated">그룹 제한은 &quot;하드 제한&quot;이라고도합니다. 원점 제거를 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0df9f5bce3448710ec4c641e898d60e69be1ba01" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;../sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">자이로 스코프는 일반적으로 &lt;a href=&quot;../sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt; 이벤트 콜백 에서 읽습니다 . 아래 예에서 이것은 초당 60 번 발생합니다.</target>
        </trans-unit>
        <trans-unit id="882926dabaed7a6bcbafe8d08a874c87f2d765cd" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">자이로 스코프는 일반적으로 &lt;a href=&quot;sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt; 이벤트 콜백 에서 읽습니다 . 아래 예에서 이것은 초당 60 번 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf1e30de157aad7c9c8ca63b30b4c4456e03753a" translate="yes" xml:space="preserve">
          <source>The handle returned by the &lt;a href=&quot;requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; call that you want to unregister.</source>
          <target state="translated">등록을 취소하려는 &lt;a href=&quot;requestanimationframe&quot;&gt; &lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt; 호출에 의해 반환 된 핸들 입니다.</target>
        </trans-unit>
        <trans-unit id="6a6911c94143ab79b4594c2e64266e7249222c2f" translate="yes" xml:space="preserve">
          <source>The handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event is free to process the drag data in an application specific way. Typically, an application will use the &lt;a href=&quot;datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; method to retrieve drag items and process them accordingly. Additionally, application semantics may differ depending on the value of the &lt;a href=&quot;datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; and/or the state of modifier keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 이벤트 의 핸들러 는 응용 프로그램 특정 방식으로 드래그 데이터를 처리 할 수 ​​있습니다. 일반적으로 응용 프로그램은 &lt;a href=&quot;datatransfer/getdata&quot;&gt; &lt;code&gt;getData()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 드래그 항목을 검색하고 그에 따라 처리합니다. 또한 응용 프로그램 시맨틱은 &lt;a href=&quot;datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt; 값 및 / 또는 수정 자 키 상태에 따라 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="028e597e68ef221f6fab8aec24401ac514256c42" translate="yes" xml:space="preserve">
          <source>The handshake is the &quot;Web&quot; in WebSockets. It's the bridge from HTTP to WS. In the handshake, details of the connection are negotiated, and either party can back out before completion if the terms are unfavorable. The server must be careful to understand everything the client asks for, otherwise security issues will be introduced.</source>
          <target state="translated">악수는 WebSockets의 &quot;웹&quot;입니다. HTTP에서 WS 로의 브릿지입니다. 핸드 셰이크에서 연결에 대한 세부 사항이 협상되며 조건이 좋지 않은 경우 어느 당사자도 완료 전에 철회 할 수 있습니다. 서버는 클라이언트가 요구하는 모든 것을 이해하도록주의해야합니다. 그렇지 않으면 보안 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="acb45443dc0323133b5342c3b627edc96183ba35" translate="yes" xml:space="preserve">
          <source>The hashchange event</source>
          <target state="translated">해시 변경 이벤트</target>
        </trans-unit>
        <trans-unit id="8fef2e5095e098313bf831bb7ab07cc47c996341" translate="yes" xml:space="preserve">
          <source>The header</source>
          <target state="translated">헤더</target>
        </trans-unit>
        <trans-unit id="8fc9ed6d785e10be433289507738b0c8578d5508" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current column group that do not already have a scope applied to them. This value is only allowed if the cell is in a column group.</source>
          <target state="translated">머리글 셀은 아직 범위가 적용되지 않은 현재 열 그룹의 모든 셀에 적용됩니다. 이 값은 셀이 열 그룹에있는 경우에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="cb07d9fb73079b2efbc4310a05e51e58116d85c3" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current row group that do not already have a scope applied to them. This value is only allowed if the cell is in a row group.</source>
          <target state="translated">머리글 셀은 현재 행 그룹에 아직 범위가 적용되지 않은 모든 셀에 적용됩니다. 이 값은 셀이 행 그룹에있는 경우에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="5cf0c4b4afe871220746a968aa309813a16018ab" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same column (or columns, if &lt;code&gt;colspan&lt;/code&gt; is used as well), until either the end of the column or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the column establishes a new scope.</source>
          <target state="translated">머리글 셀 은 열의 끝 또는 열의 다른 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 가 새 범위를 설정할 때까지 동일한 열 (또는 &lt;code&gt;colspan&lt;/code&gt; 을 사용하는 경우 열)의 다음 셀에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec11a0b2eb6ccf34714b1e6169b4ff4756556640" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same row (or rows, if &lt;code&gt;rowspan&lt;/code&gt; is used as well), until either the end of the row or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the same row establishes a new scope.</source>
          <target state="translated">머리글 셀 은 행의 끝이나 같은 행의 다른 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 가 새 범위를 설정할 때까지 동일한 행 (또는 &lt;code&gt;rowspan&lt;/code&gt; 이 사용되는 경우 행)의 다음 셀에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="21bc35e4e8cd01a607804d0ab8a46f86c9af6f92" translate="yes" xml:space="preserve">
          <source>The header cell has no predefined scope; the user agent will establish the scope based on contextual clues.</source>
          <target state="translated">헤더 셀에는 사전 정의 된 범위가 없습니다. 사용자 에이전트는 상황 단서에 따라 범위를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="677f5ec4023059fe1cfc57a225bb79b0add95606" translate="yes" xml:space="preserve">
          <source>The header is fairly simple, since for this example all it contains is some text. Its style looks like this:</source>
          <target state="translated">이 예제에서는 헤더가 텍스트이기 때문에 헤더는 매우 간단합니다. 스타일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="070f1e647da215ad888d0969167e0dcbf3485a21" translate="yes" xml:space="preserve">
          <source>The height (magnitude on the Y axis), in CSS pixels, of the contact geometry of the pointer.</source>
          <target state="translated">포인터의 접촉 지오메트리의 높이 (Y 축 크기) (CSS 픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="e39ca26ed973f60fcff1f9e24234b9045aee728c" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRect&lt;/code&gt; 의 높이입니다 .</target>
        </trans-unit>
        <trans-unit id="34f838a2061b900af071c9a9c5fa3d0a55bdb78d" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRectReadOnly&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRectReadOnly&lt;/code&gt; 의 높이입니다 .</target>
        </trans-unit>
        <trans-unit id="fb7b31ed73aeb5d6b461284454c9ec84b76c6859" translate="yes" xml:space="preserve">
          <source>The height of the bounds.</source>
          <target state="translated">경계의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="1ce51c099997a2e659e72e34569a70ace26de77f" translate="yes" xml:space="preserve">
          <source>The height of the event's contact area (in CSS pixels).</source>
          <target state="translated">이벤트 접촉 영역의 높이입니다 (CSS 픽셀 단위).</target>
        </trans-unit>
        <trans-unit id="23019d9c8925de1387057b03ae5baf8ae91adfad" translate="yes" xml:space="preserve">
          <source>The height of the image (i.e., the value for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; attribute).</source>
          <target state="translated">이미지의 높이 (즉, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; 속성 의 값 )</target>
        </trans-unit>
        <trans-unit id="9900bf4be748cebf8b3eed614db614bccb7cdd5e" translate="yes" xml:space="preserve">
          <source>The height of the image in pixels.</source>
          <target state="translated">이미지의 높이 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="546400b2a914b39dbbc597d9bd690245f06c22c7" translate="yes" xml:space="preserve">
          <source>The height of the offscreen canvas.</source>
          <target state="translated">오프 스크린 캔버스의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="2302805078772e9435c24e06666e909f706716c3" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageBitmap&lt;/code&gt; will be extracted. This value can be negative.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; 을 추출 할 사각형의 높이입니다 . 이 값은 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc436760d672f74e02a879dcb3da36a5090ce866" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageData&lt;/code&gt; will be extracted. Positive values are down, and negative are up.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; 가 추출 될 사각형의 높이입니다 . 양수 값은 감소하고 음수는 증가합니다.</target>
        </trans-unit>
        <trans-unit id="7a63ab000024777ce854d706337a587e757dfa56" translate="yes" xml:space="preserve">
          <source>The height of the rule.</source>
          <target state="translated">규칙의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="b6139595ac3e62eb729d43ca2875adf7e1fee739" translate="yes" xml:space="preserve">
          <source>The height of the sub-rectangle of the source &lt;code&gt;image&lt;/code&gt; to draw into the destination context.</source>
          <target state="translated">대상 컨텍스트에 그릴 소스 &lt;code&gt;image&lt;/code&gt; 사각형의 높이입니다 .</target>
        </trans-unit>
        <trans-unit id="e2c78b354aa26985893add977f22ad35048def0e" translate="yes" xml:space="preserve">
          <source>The height to draw the &lt;code&gt;image&lt;/code&gt; in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</source>
          <target state="translated">대상 캔버스에 &lt;code&gt;image&lt;/code&gt; 를 그리는 높이 입니다. 이것은 그려진 이미지의 스케일링을 허용합니다. 지정하지 않으면 이미지를 그릴 때 높이가 조정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42b9482f137b42f6d2c2652741f341496a9b4ed5" translate="yes" xml:space="preserve">
          <source>The height to give the new &lt;code&gt;ImageData&lt;/code&gt; object. A negative value flips the rectangle around the horizontal axis.</source>
          <target state="translated">새 &lt;code&gt;ImageData&lt;/code&gt; 객체 를 제공 할 높이 입니다. 음수 값은 가로 축 주위의 사각형을 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="5492b1fbeab33f939d26d4ab7f3557d9f700297f" translate="yes" xml:space="preserve">
          <source>The higher &lt;code&gt;firCount&lt;/code&gt; is, the more often frames were dropped, which may be an indication that the media's bit rate is too high for the available bandwidth, or that the receiving device is overburdened and is therefore unable to process the incoming data.</source>
          <target state="translated">&lt;code&gt;firCount&lt;/code&gt; 가 높을수록 프레임이 더 자주 삭제됩니다. 이는 미디어의 비트 전송률이 사용 가능한 대역폭에 비해 너무 높거나 수신 장치에 과부하가 발생하여 수신 데이터를 처리 할 수 ​​없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f88e0162e2a2462c00ce9015a13e8b520b542a07" translate="yes" xml:space="preserve">
          <source>The history of VR</source>
          <target state="translated">VR의 역사</target>
        </trans-unit>
        <trans-unit id="5bd28d46e0ce015344fed89ff0108f67372f94a0" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point, relative to the left edge of the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt;.</source>
          <target state="translated">현재 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;뷰포트&lt;/a&gt; 의 왼쪽 모서리를 기준으로 한 점의 가로 좌표입니다 .</target>
        </trans-unit>
        <trans-unit id="6aaedd7be22a6bd8de7d1ac18c3d2120e179a4ed" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point.</source>
          <target state="translated">점의 가로 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="8a5adefafdc8be83181d5593e5a6132f1fe3fe1b" translate="yes" xml:space="preserve">
          <source>The human-readable description of the connected database.</source>
          <target state="translated">연결된 데이터베이스에 대한 사람이 읽을 수있는 설명입니다.</target>
        </trans-unit>
        <trans-unit id="65a2c610333142a8ac66463288fd361b6973e7cf" translate="yes" xml:space="preserve">
          <source>The idea of notification tags is that more than one notification can share the same tag, linking them together. One notification can then be programmatically replaced with another to avoid the users' screen being filled up with a huge number of similar notifications.</source>
          <target state="translated">알림 태그의 개념은 둘 이상의 알림이 동일한 태그를 공유하여 서로 연결할 수 있다는 것입니다. 그런 다음 하나의 알림을 프로그래밍 방식으로 다른 알림으로 대체하여 사용자의 화면에 수많은 유사한 알림이 채워지지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d3310c1441dcc638e3bc51207608ab6fbe78712" translate="yes" xml:space="preserve">
          <source>The identification tag of the media stream with which the candidate is associated, or &lt;code&gt;null&lt;/code&gt; if there is no associated media stream. The default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">후보가 관련된 미디어 스트림의 식별 태그. 또는 관련된 미디어 스트림이없는 경우는 &lt;code&gt;null&lt;/code&gt; 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3e5030f2cabe76d4a4a1d8e8d27b94ee979f5e73" translate="yes" xml:space="preserve">
          <source>The identifier is a name that identifies the cue. It can be used to reference the cue from a script. It must not contain a newline and cannot contain the string &quot;&lt;code&gt;--&amp;gt;&quot;&lt;/code&gt;. It must end with a single newline. They do not have to be unique, although it is common to number them (e.g. 1, 2, 3, ...).</source>
          <target state="translated">식별자는 큐를 식별하는 이름입니다. 스크립트에서 큐를 참조하는 데 사용할 수 있습니다. 개행 문자를 포함 할 수 없으며 문자열 &quot; &lt;code&gt;--&amp;gt;&quot;&lt;/code&gt; 포함 할 수 없습니다 . 단일 줄 바꿈으로 끝나야합니다. 번호를 지정하는 것이 일반적이지만 (예 : 1, 2, 3, ...) 고유 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="abfd34fa21b846f4eec39755053ebd711ae26a9f" translate="yes" xml:space="preserve">
          <source>The identifier of the repeated action you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setInterval()&lt;/code&gt;.</source>
          <target state="translated">취소하려는 반복 작업의 식별자입니다. 이 ID는 &lt;code&gt;setInterval()&lt;/code&gt; 에 대한 해당 호출에 의해 리턴되었습니다 .</target>
        </trans-unit>
        <trans-unit id="76a322d4de247e544cb9e52b7a9b0cafb87e2323" translate="yes" xml:space="preserve">
          <source>The identifier of the timeout you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="translated">취소하려는 시간 초과의 식별자입니다. 이 ID는 &lt;code&gt;setTimeout()&lt;/code&gt; 에 대한 해당 호출에 의해 리턴되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ef36f77da7251a3dee31b989a9d6c62f25e71ebc" translate="yes" xml:space="preserve">
          <source>The identifier to check, i.e. the name of the cookie (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;)</source>
          <target state="translated">확인할 식별자, 즉 쿠키 이름 ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9021370e68fe07a54e9f9e4d4c20d66c9630c558" translate="yes" xml:space="preserve">
          <source>The identity provider wasn't able to provide an identity assertion.</source>
          <target state="translated">자격 증명 공급자가 자격 증명 어설 션을 제공 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2ccf402b00c180cce436af6f758ac17c8e150db8" translate="yes" xml:space="preserve">
          <source>The image has no image data.</source>
          <target state="translated">이미지에 이미지 데이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0e06aae1f6a88dfa00da74e1b74dbc26f3890839" translate="yes" xml:space="preserve">
          <source>The image is not loaded yet. Use &lt;code&gt;.complete === true&lt;/code&gt; and &lt;code&gt;.onload&lt;/code&gt; to determine when it is ready.</source>
          <target state="translated">이미지가 아직로드되지 않았습니다. 사용 &lt;code&gt;.complete === true&lt;/code&gt; 및 &lt;code&gt;.onload&lt;/code&gt; 는 이 준비가되면 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f7d5758180a3d86c68a04955618213723b58b935" translate="yes" xml:space="preserve">
          <source>The image will typically be an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt; element but it can also be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; or any other image element. The method's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates are offsets where the image should appear relative to the mouse pointer.</source>
          <target state="translated">이미지는 일반적으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소이지만 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 다른 이미지 요소 일 수도 있습니다. 메소드의 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 좌표는 이미지가 마우스 포인터를 기준으로 표시되는 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="47c1b19dc684abb15f884cd0bba62b2d663ffb2b" translate="yes" xml:space="preserve">
          <source>The implementation may have stripped out insignificant whitespace while parsing the selector. If set to a selector string which cannot be parsed, a SyntaxError is thrown.</source>
          <target state="translated">구현자가 선택기를 구문 분석하는 동안 중요하지 않은 공백을 제거했을 수 있습니다. 구문 분석 할 수없는 선택기 문자열로 설정하면 SyntaxError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7f0011b9907260bfee190baa50c6baacc569b8f6" translate="yes" xml:space="preserve">
          <source>The implementation of our shim for &lt;a href=&quot;window/cancelidlecallback&quot;&gt;&lt;code&gt;cancelIdleCallback()&lt;/code&gt;&lt;/a&gt; is much simpler:</source>
          <target state="translated">&lt;a href=&quot;window/cancelidlecallback&quot;&gt; &lt;code&gt;cancelIdleCallback()&lt;/code&gt; &lt;/a&gt; 에 대한 shim 구현 은 훨씬 간단합니다.</target>
        </trans-unit>
        <trans-unit id="41c1664c417a216c50b1ba1a8b515b50603428ab" translate="yes" xml:space="preserve">
          <source>The implementation of the code needed to interface with a particular payment method provider in order to process payments.</source>
          <target state="translated">지불을 처리하기 위해 특정 지불 방법 제공자와 인터페이스하는 데 필요한 코드 구현.</target>
        </trans-unit>
        <trans-unit id="f7680068b3f6bac7238e497f47fcbff52227c588" translate="yes" xml:space="preserve">
          <source>The implementation status of pointer events in browsers is &lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;relatively low&lt;/a&gt; with IE11 and Edge having complete implementations. Firefox's implementation has been withdrawn because of &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;bug 1166347&lt;/a&gt;.</source>
          <target state="translated">브라우저에서 포인터 이벤트의 구현 상태는 IE11 및 Edge가 완전히 구현되어 &lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;상대적으로 낮&lt;/a&gt; 습니다. &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;버그 1166347로&lt;/a&gt; 인해 Firefox의 구현이 철회되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0ecb40b7dd68c15098f2eefb05d6952cc58fd0de" translate="yes" xml:space="preserve">
          <source>The implementation status of pointer events in browsers is &lt;a href=&quot;https://caniuse.com/#search=pointer&quot;&gt;relatively low&lt;/a&gt; with IE11 and Edge having complete implementations. Firefox's implementation has been withdrawn because of &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;bug 1166347&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a3565092409d0134c9059a403ebe25cd44703a" translate="yes" xml:space="preserve">
          <source>The imported node is not yet included in the document tree. To include it, you need to call an insertion method such as &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;appendChild()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../node/insertbefore&quot;&gt;&lt;code&gt;insertBefore()&lt;/code&gt;&lt;/a&gt; with a node that &lt;em&gt;is&lt;/em&gt; currently in the document tree.</source>
          <target state="translated">가져온 노드는 아직 문서 트리에 포함되어 있지 않습니다. 를 포함하려면, 당신은 같은 삽입 메서드를 호출 할 필요 &lt;a href=&quot;../node/appendchild&quot;&gt; &lt;code&gt;appendChild()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../node/insertbefore&quot;&gt; &lt;code&gt;insertBefore()&lt;/code&gt; &lt;/a&gt; 노드와 &lt;em&gt;인&lt;/em&gt; 문서 트리에서 현재.</target>
        </trans-unit>
        <trans-unit id="61647f41eded3642881c1b974f211c024664fd3c" translate="yes" xml:space="preserve">
          <source>The incoming stream is attached to the &lt;code&gt;&quot;received_video&quot;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and the &quot;Hang Up&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element is enabled so the user can hang up the call.</source>
          <target state="translated">수신 스트림이 &lt;code&gt;&quot;received_video&quot;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 연결되고 &quot;Hang Up&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소가 활성화되어 사용자가 전화를 끊을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8d2af1c11e53111323437c66cd6ebf95226234c" translate="yes" xml:space="preserve">
          <source>The index is a persistent key-value storage where the value part of its records is the key part of a record in the referenced object store. The records in an index are automatically populated whenever records in the referenced object store are inserted, updated, or deleted. Each record in an index can point to only one record in its referenced object store, but several indexes can reference the same object store. When the object store changes, all indexes that refers to the object store are automatically updated.</source>
          <target state="translated">인덱스는 레코드의 값 부분이 참조 된 오브젝트 저장소에서 레코드의 핵심 부분 인 영구 키-값 스토리지입니다. 참조 된 오브젝트 저장소의 레코드가 삽입, 업데이트 또는 삭제 될 때마다 인덱스의 레코드가 자동으로 채워집니다. 인덱스의 각 레코드는 참조 된 오브젝트 저장소에서 하나의 레코드 만 가리킬 수 있지만 여러 인덱스가 동일한 오브젝트 저장소를 참조 할 수 있습니다. 객체 저장소가 변경되면 객체 저장소를 참조하는 모든 인덱스가 자동으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="5caf3eae625b862e9744df6202e03dcfa974da91" translate="yes" xml:space="preserve">
          <source>The index is not in the allowed range. For example, this can be thrown by the &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object. (Legacy code value: &lt;code&gt;1&lt;/code&gt; and legacy constant name: &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt;)</source>
          <target state="translated">색인이 허용 된 범위에 있지 않습니다. 예를 들어, 이것은 &lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 개체에 의해 발생할 수 있습니다 . (레거시 코드 값 : &lt;code&gt;1&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ecc7fb0e3966e29d229b56d8007d3ec84e459e4c" translate="yes" xml:space="preserve">
          <source>The index of one of the interfaces supported by the device. Interfaces are device-specific.</source>
          <target state="translated">장치가 지원하는 인터페이스 중 하나의 색인입니다. 인터페이스는 장치마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b67062da059f5db8635cd18c0d9e2971deb6f05c" translate="yes" xml:space="preserve">
          <source>The index of the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object to retrieve. The index is a number in the range of 0 to one less than the length of the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">검색 할 &lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt; 객체 의 인덱스입니다 . 색인은 &lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; &lt;/a&gt; 의 길이보다 0에서 1 사이의 숫자 입니다.</target>
        </trans-unit>
        <trans-unit id="7bf862af2bbac6295dbdd6c94670c47269d08e98" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the NodeList.</source>
          <target state="translated">NodeList에서 처리중인 현재 요소의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="cc1ff8860b10df902ebff81881a58b531468f649" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array.</source>
          <target state="translated">배열에서 처리중인 현재 요소의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="b83dc200bf061d713d7d8b647e7347cc792a810c" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed.</source>
          <target state="translated">처리중인 현재 요소의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="ab857101f2b25c7f314198c13aafd59e6c6393d3" translate="yes" xml:space="preserve">
          <source>The index of the currently selected track, if any, or &lt;code&gt;&amp;minus;1&lt;/code&gt; otherwise. .</source>
          <target state="translated">현재 선택된 트랙의 인덱스 (있는 경우) 또는 그렇지 않은 경우 &lt;code&gt;&amp;minus;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66059b748974278daf492b3a6150404e9c015c3b" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">반환하려는 &lt;a href=&quot;../sourcebuffer&quot;&gt; &lt;code&gt;SourceBuffer&lt;/code&gt; &lt;/a&gt; 객체 의 인덱스 위치입니다 .</target>
        </trans-unit>
        <trans-unit id="91de6b281bf82a8409c27eac6824e59cd36e2e76" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../trackdefault&quot;&gt;&lt;code&gt;TrackDefault&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">반환하려는 &lt;a href=&quot;../trackdefault&quot;&gt; &lt;code&gt;TrackDefault&lt;/code&gt; &lt;/a&gt; 객체 의 인덱스 위치입니다 .</target>
        </trans-unit>
        <trans-unit id="d5ec857e15b7ca94530a52d181920354c38b8c9a" translate="yes" xml:space="preserve">
          <source>The index, or its object store, has been deleted; or the current transaction is not an upgrade transaction. You can only rename indexes during upgrade transactions; that is, when the mode is &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt;.</source>
          <target state="translated">색인 또는 해당 객체 저장소가 삭제되었습니다. 또는 현재 트랜잭션이 업그레이드 트랜잭션이 아닙니다. 업그레이드 트랜잭션 중에 만 인덱스 이름을 바꿀 수 있습니다. 즉, 모드가 &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt; 인 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="b2e60486c580d0a0bb60584736ac5bf86565a28c" translate="yes" xml:space="preserve">
          <source>The information is accessed through the &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">정보는 &lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; 특성을 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="69293766aa78b7800b75687b2f6f7b0b2a2a9c12" translate="yes" xml:space="preserve">
          <source>The information provided is based on the last ten seconds of media received.</source>
          <target state="translated">제공된 정보는 최근 10 초 동안 수신 한 미디어를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="02ce20c8ea65e30641ca7f36e374b0dea6906590" translate="yes" xml:space="preserve">
          <source>The information we need to exchange is the Offer and Answer which just contains the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; mentioned below.</source>
          <target state="translated">교환해야 할 정보는 아래에 언급 된 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; 만 포함하는 제안 및 답변입니다 .</target>
        </trans-unit>
        <trans-unit id="9ad1ac79a38eff40c368d0d2da3eb4074d7fc087" translate="yes" xml:space="preserve">
          <source>The initTimeEvent method is used to initialize the value of a TimeEvent created through the DocumentEvent interface. This method may only be called before the TimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary.</source>
          <target state="translated">initTimeEvent 메소드는 DocumentEvent 인터페이스를 통해 작성된 TimeEvent 값을 초기화하는 데 사용됩니다. 이 메소드는 dispatchEvent 메소드를 통해 TimeEvent를 전달하기 전에 만 호출 할 수 있지만 필요한 경우 해당 단계 동안 여러 번 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c435ff3251bf15470a0a76bcc9fd6141fb6f630" translate="yes" xml:space="preserve">
          <source>The initial definition of the API of WebRTC.</source>
          <target state="translated">WebRTC API의 초기 정의.</target>
        </trans-unit>
        <trans-unit id="8d02431012098639b8c2598302c6373f95779f46" translate="yes" xml:space="preserve">
          <source>The initial definition of the object conveying the stream of media content.</source>
          <target state="translated">미디어 컨텐츠의 스트림을 전달하는 객체의 초기 정의.</target>
        </trans-unit>
        <trans-unit id="4ea3961ad5d4b44133d07b3a491c8034f4eb66d1" translate="yes" xml:space="preserve">
          <source>The initial definition on how to obtain stream of content from DOM Elements</source>
          <target state="translated">DOM Elements에서 컨텐츠 스트림을 얻는 방법에 대한 초기 정의</target>
        </trans-unit>
        <trans-unit id="b471c326596744d46e1159b88da83e7372151dd8" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;timestampOffset&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;timestampOffset&lt;/code&gt; 의 초기 값 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="bd7b4e609456ff4e052c1246bd502b94de2628c1" translate="yes" xml:space="preserve">
          <source>The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the &quot;standard&quot; view, i.e., based on attributes on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;&lt;/a&gt; element such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt;) or on a &quot;custom&quot; view (i.e., a hyperlink into a particular &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt;&lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt;&lt;/a&gt; or other element). If the initial view is the &quot;standard&quot; view, then this attribute is &lt;code&gt;false&lt;/code&gt;. If the initial view is a &quot;custom&quot; view, then this attribute is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">현재 가장 안쪽에있는 SVG 문서 조각의 초기보기 (즉, 확대 및 이동 전)는 &quot;표준&quot;보기, 즉 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt; &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 (예 : &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt; 등 )의 속성을 기반으로 하거나 &quot;사용자 정의&quot;보기 ( 즉, 특정 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt; &lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 다른 요소에 대한 하이퍼 링크 ). 초기보기가 &quot;표준&quot;보기 인 경우이 속성은 &lt;code&gt;false&lt;/code&gt; 입니다. 초기보기가 &quot;사용자 정의&quot;보기 인 경우이 속성은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="66363a709ecb12db93fee7fad2250201826e6040" translate="yes" xml:space="preserve">
          <source>The input/output read operation failed (No legacy code value and constant name).</source>
          <target state="translated">입 / 출력 읽기 조작이 실패했습니다 (레거시 코드 값 및 상수 이름 없음).</target>
        </trans-unit>
        <trans-unit id="45132766641fa0600b00a0d2ded9649fae31c043" translate="yes" xml:space="preserve">
          <source>The install event is fired when an install is successfully completed. The install event is generally used to populate your browser&amp;rsquo;s offline caching capabilities with the assets you need to run your app offline. To do this, we use Service Worker&amp;rsquo;s brand new storage API &amp;mdash; &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt; &amp;mdash; a global object on the service worker that allows us to store assets delivered by responses, and keyed by their requests. This API works in a similar way to the browser&amp;rsquo;s standard cache, but it is specific to your domain. It persists until you tell it not to &amp;mdash; again, you have full control.</source>
          <target state="translated">설치가 성공적으로 완료되면 설치 이벤트가 시작됩니다. 설치 이벤트는 일반적으로 브라우저의 오프라인 캐싱 기능을 앱을 오프라인으로 실행하는 데 필요한 자산으로 채우는 데 사용됩니다. 이를 위해 Service Worker의 새로운 스토리지 API 인 &lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt; 를 사용하여 응답으로 전달되고 요청에 따라 키가 지정된 자산을 저장할 수있는 서비스 워커의 글로벌 객체입니다. 이 API는 브라우저의 표준 캐시와 유사한 방식으로 작동하지만 도메인에 따라 다릅니다. 다시 말하지 않으면 완전히 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f6d533575dca4b047f9a9e8eac8a1e0c1821662" translate="yes" xml:space="preserve">
          <source>The instrument by which payment is submitted, such as a credit card or online payment service.</source>
          <target state="translated">신용 카드 또는 온라인 지불 서비스와 같이 지불이 제출되는 도구.</target>
        </trans-unit>
        <trans-unit id="f9787a36b74dcb77f1c6d92e71cf0fb1018f2122" translate="yes" xml:space="preserve">
          <source>The interface &lt;a href=&quot;idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; is derived from &lt;code&gt;IDBRequest&lt;/code&gt;.</source>
          <target state="translated">인터페이스 &lt;a href=&quot;idbopendbrequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; 는&lt;/a&gt; 로부터 유도된다 &lt;code&gt;IDBRequest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1586ceae149c3f1f6571cc12c6a6b49b07b42a07" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties which are listed in the order in which they are recorded for the fetching of a single resource. An alphabetical listing is shown in the navigation, at left.</source>
          <target state="translated">또한이 인터페이스는 단일 리소스 가져 오기를 위해 기록 된 순서대로 나열된 다음 속성을 지원합니다. 탐색 목록에 왼쪽에 알파벳순 목록이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="348c57b421d51d4da2f638e38a4d72e871bea062" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties:</source>
          <target state="translated">이 인터페이스는 다음 속성도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1ab0596d2edf9246a634d5554a2710557598c081" translate="yes" xml:space="preserve">
          <source>The interface consists of master controls, which allow us to play/stop the sequencer, and adjust the BPM (beats per minute) to speed up or slow down the &quot;music&quot;.</source>
          <target state="translated">인터페이스는 마스터 컨트롤로 구성되어있어 시퀀서를 재생 / 중지하고 BPM (분당 비트 수)을 조정하여 &quot;음악&quot;의 속도를 높이거나 늦출 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="407842243ba3bfd86b2b17daa56df451116b6929" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvaspattern&quot;&gt;&lt;code&gt;CanvasPattern&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../canvaspattern&quot;&gt; &lt;code&gt;CanvasPattern&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c31415fa45bbade510bd4d6eb4a7a29db463afb" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbce26c8a8f32df63eeba5225e888721c01c1242" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는, 그것을 정의 &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09bc4849716b6bd03cd6699c6ad0bde1c67085ee" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="739586ffbfb11d860f8093ebc9cd864ebac8e295" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../htmlmediaelement&quot;&gt; &lt;code&gt;HTMLMediaElement&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88c2747119091f7708a563c0d930d015d391ab25" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmltrackelement&quot;&gt;&lt;code&gt;HTMLTrackElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../htmltrackelement&quot;&gt; &lt;code&gt;HTMLTrackElement&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cee15d4f73fca209487f4be41a66596304378c12" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../mediaerror&quot;&gt;&lt;code&gt;MediaError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는, 그것을 정의 &lt;a href=&quot;../mediaerror&quot;&gt; &lt;code&gt;MediaError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3b6598e7db413a16e827a1e5b1ed5436e574fc8" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../path2d&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는, 그것을 정의하는 &lt;a href=&quot;../path2d&quot;&gt; &lt;code&gt;Path2D&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a366dd3834caf1e7c9e93372fddb5bccacf7de70" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메서드를 정의하는 인터페이스 &lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3cd20f50462042424e847a898746f78f51a51e" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스,이 방법을 정의 &lt;a href=&quot;../imagebitmap&quot;&gt; &lt;code&gt;ImageBitmap&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4295c90e14090be33103d6861da7bb56bf248b5" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 &lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt; &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c30b008ac3791f8827753a507fcfe3c4fc386c27" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드 인 &lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; 를&lt;/a&gt; 정의하는 인터페이스</target>
        </trans-unit>
        <trans-unit id="1844e07a1a6cb93faf1e42a489322e1cbfdbffcf" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드 인 &lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; 를&lt;/a&gt; 정의하는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="75da6d6c041ca38f1711d4b22d5473ccf737b5d1" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 &lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a1185a313900e50ffa7fca7f64bedc7fc9bde" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasgradient&quot;&gt;&lt;code&gt;CanvasGradient&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 : &lt;a href=&quot;../canvasgradient&quot;&gt; &lt;code&gt;CanvasGradient&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6159ab1a0e001b753fc80c7503d37d685addf47" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 : &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f381c85144455856c15264cce5dfcba6dcd6f67" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 속성을 정의하는 인터페이스 : &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4190f636c5f94b490aa753630bd1fc1f86fe89df" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는이 속성을 정의 : &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6463c0a91e8eaae381c941ec9ed922d50a6c4e2" translate="yes" xml:space="preserve">
          <source>The interface for the owner object</source>
          <target state="translated">소유자 객체의 인터페이스</target>
        </trans-unit>
        <trans-unit id="5298f0cfd7036ab1542876f1fa2864e22dcc0aae" translate="yes" xml:space="preserve">
          <source>The interface implementing this property: &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">: 인터페이스는이 속성을 구현 &lt;a href=&quot;../htmltableelement&quot;&gt; &lt;code&gt;HTMLTableElement&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05b96684055565c7a89cea05b0d9d61d21d96ecd" translate="yes" xml:space="preserve">
          <source>The interface it belongs to, &lt;a href=&quot;../geolocation&quot;&gt;&lt;code&gt;Geolocation&lt;/code&gt;&lt;/a&gt;, and the way to access it &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt;&lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스가 속한 인터페이스, &lt;a href=&quot;../geolocation&quot;&gt; &lt;code&gt;Geolocation&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt; &lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt; &lt;/a&gt; 에 액세스하는 방법 .</target>
        </trans-unit>
        <trans-unit id="aeb1f85c339e16e7c965aae2f5ca47cc37388bac" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodefilter&quot;&gt;&lt;code&gt;NodeFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">속한 인터페이스 : &lt;a href=&quot;../nodefilter&quot;&gt; &lt;code&gt;NodeFilter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c38f187e583de7f72fe36b4490afbf568450741" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">속한 인터페이스 : &lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec55632ee4a409f9ef75bd8ec5c856999d7648be" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">속한 인터페이스 : &lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7278619e61c8579f78d86e03f7781b1579084fe7" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">: 인터페이스는이 속한 &lt;a href=&quot;../url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f381c2c684cf9744f3fc05c0b0410d18eb80c8fb" translate="yes" xml:space="preserve">
          <source>The interface of the &lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt; provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the &lt;code&gt;credential&lt;/code&gt; member of the &lt;code&gt;init&lt;/code&gt; object for global &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt; 의 인터페이스는 사용자 이름 / 암호 쌍에 대한 정보를 제공합니다. 브라우저를 지원할 때,이 클래스의 인스턴스는 전역 &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt; 위해 &lt;code&gt;init&lt;/code&gt; 객체 의 &lt;code&gt;credential&lt;/code&gt; 멤버 로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2b0cd221411d551c9e4eeb01dec1aca55f7b759" translate="yes" xml:space="preserve">
          <source>The interface of the object it creates: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 생성 객체의 인터페이스 : &lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3e7077536882ebea4c9419888860140f265d8d7" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the &lt;a href=&quot;mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods; returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">&lt;a href=&quot;mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt; 및 decodeInfo &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 돌려 주어진 약속의 인터페이스 . 테스트 한 미디어 구성이 지원되고, 부드럽고, 전력 효율적인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="95ffc84a9a04373960151e54ae5381df48ae073b" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the the &lt;a href=&quot;../mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">&lt;a href=&quot;../mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt; 및 codingInfo &lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 반환 된 약속의 인터페이스는 테스트 된 미디어 구성이 지원되는지, 매끄럽고 powerEfficient인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8bf30b04ea044cef865f5f8ff8a4fd68b9d4ee67" translate="yes" xml:space="preserve">
          <source>The interface of the returned value, &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 값의 인터페이스 &lt;a href=&quot;../location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e242217621f1167956579e10892d15e6cd7edea4" translate="yes" xml:space="preserve">
          <source>The interface of the the &lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; provides an object represents a certificate that an &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; uses to authenticate.</source>
          <target state="translated">&lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; 의 인터페이스 는 &lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 이 인증 하는 데 사용 하는 인증서를 객체로 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="41db531f6013fb6ea8d50a1a010693a900161ee9" translate="yes" xml:space="preserve">
          <source>The interface that represents errors thrown by the MediaStream Recording API. Its &lt;a href=&quot;mediarecordererrorevent/error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; that specifies that error occurred.</source>
          <target state="translated">MediaStream Recording API에서 발생한 오류를 나타내는 인터페이스입니다. 그것의 &lt;a href=&quot;mediarecordererrorevent/error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt; 속성은입니다 &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 지정 오류가 발생했음을 것이다.</target>
        </trans-unit>
        <trans-unit id="539b691936c73ffac3bc933b434b424fe2c3cb42" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">: 인터페이스는이 속성에 속하는 &lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="618038d08d9fea210e7695c10467fcf20ae5b8e9" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는이 부동산에 속하는 : &lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66dfcc0a5dcfffa02636c957cfa59eb0ba675baf" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">인터페이스의 속성 은 리디렉션 시작 및 종료 시간, 가져 오기 시작, DNS 조회 시작 및 종료 시간, 응답 시작 및 종료 시간 등과 같은 네트워크 이벤트에 대한 &lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;em&gt;리소스로드 타임 라인&lt;/em&gt; 을 만듭니다 .이 인터페이스에는 다른 속성도 제공됩니다. 페치 된 자원의 크기 및 페치 를 시작한 자원 의 &lt;em&gt;유형&lt;/em&gt; 에 대한 데이터 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8095ea3ad68881483ee7d7cad0e3a6d13c5fb792" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc.. Additionally, the interface extends &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; with other properties which provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">인터페이스의 속성 은 리디렉션 시작 및 종료 시간, 가져 오기 시작, DNS 조회 시작 및 종료 시간, 응답 시작 및 종료 시간 등과 같은 네트워크 이벤트에 대한 &lt;a href=&quot;domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;em&gt;리소스로드 타임 라인&lt;/em&gt; 을 만듭니다. 또한 인터페이스는 다음 과 같이 &lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt; 를 확장합니다. 페치 된 자원의 크기와 페치 를 시작한 자원 의 &lt;em&gt;유형&lt;/em&gt; 에 대한 데이터를 제공하는 기타 특성 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96b06f86d0b86353bdba641db118148b7c60b0ee" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;high-resolution timestamps&lt;/a&gt; for network events such as redirect start and end times, DNS lookup start and end times, request start, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">인터페이스의 속성 은 리디렉션 시작 및 종료 시간, DNS 조회 시작 및 종료 시간, 요청 시작, 응답 시작 및 종료 시간 등과 같은 네트워크 이벤트에 대한 &lt;a href=&quot;domhighrestimestamp&quot;&gt;고해상도 타임 스탬프&lt;/a&gt; 가 포함 된 &lt;em&gt;리소스로드 타임 라인&lt;/em&gt; 을 만듭니다 .이 인터페이스에는 다른 속성도 제공됩니다. 페치 된 자원의 크기 및 페치 를 시작한 자원 의 &lt;em&gt;유형&lt;/em&gt; 에 대한 데이터 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="336b8c0f074dee4820ed71b35fa86bb4dd1b46c6" translate="yes" xml:space="preserve">
          <source>The interface:</source>
          <target state="translated">인터페이스 :</target>
        </trans-unit>
        <trans-unit id="84091c643115a9215d55c9d55a348492976290d7" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;code&gt;High Resolution Time&lt;/code&gt; standard which has two levels:</source>
          <target state="translated">이 문서에서 설명하는 인터페이스 는 다음 두 가지 수준의 &lt;code&gt;High Resolution Time&lt;/code&gt; 표준에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="33e8d4b6156f7fd7db871b356ca9b2ea71c92e97" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;strong&gt;Performance Timeline&lt;/strong&gt; standard which has two levels:</source>
          <target state="translated">이 문서에서 설명하는 인터페이스 는 다음 두 가지 수준 의 &lt;strong&gt;성능 타임 라인&lt;/strong&gt; 표준에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="09380fbe60824f1b7236f80ede7d4e2372d6bade" translate="yes" xml:space="preserve">
          <source>The interfaces related to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt; are referenced under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGL&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebGLRenderingContext&lt;/code&gt; 와 관련된 인터페이스 는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGL에서&lt;/a&gt; 참조됩니다 .</target>
        </trans-unit>
        <trans-unit id="aaff9627d1120f1f8f30d0dbb36b911b3d4e842f" translate="yes" xml:space="preserve">
          <source>The interfaces that it allows to be use as image sources are the following:</source>
          <target state="translated">이미지 소스로 사용할 수있는 인터페이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="17d96adbf82ef27098abb4d0cc3dcafb077bf739" translate="yes" xml:space="preserve">
          <source>The intersection root and root margin</source>
          <target state="translated">교차 루트와 루트 마진</target>
        </trans-unit>
        <trans-unit id="05ea4a2920b10c138f7ace947447c5f1da2d100c" translate="yes" xml:space="preserve">
          <source>The interval that this operation is allowed to take to acquire locks on all the objects stores and indexes identified in &lt;code&gt;storeNames&lt;/code&gt;.</source>
          <target state="translated">이 조작이 &lt;code&gt;storeNames&lt;/code&gt; 에서 식별 된 모든 오브젝트 저장소 및 인덱스에 대한 잠금을 획득하는 데 허용되는 간격입니다 .</target>
        </trans-unit>
        <trans-unit id="3eb926157324dcd68c93c19d08b965f35645ebd6" translate="yes" xml:space="preserve">
          <source>The introduction of new input mechanisms results in increased application complexity to handle various input events, such as key events, mouse events, pen/stylus events, and touch events. To help address this problem, the &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events standard&lt;/a&gt;&lt;em&gt;defines events and related interfaces for handling hardware agnostic pointer input from devices including a mouse, pen, touchscreen, etc.&lt;/em&gt;. That is, the abstract &lt;em&gt;pointer&lt;/em&gt; creates a unified input model that can represent a contact point for a finger, pen/stylus or mouse.</source>
          <target state="translated">새로운 입력 메커니즘의 도입으로 주요 이벤트, 마우스 이벤트, 펜 / 스타일러스 이벤트 및 터치 이벤트와 같은 다양한 입력 이벤트를 처리하기 위해 응용 프로그램의 복잡성이 증가합니다. 이 문제를 해결하기 위해 &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;포인터 이벤트 표준 &lt;/a&gt;&lt;em&gt;은 마우스, 펜, 터치 스크린 등의 장치에서 하드웨어 독립적 포인터 입력을 처리하기위한 이벤트 및 관련 인터페이스를 정의합니다&lt;/em&gt; . 즉, 추상 &lt;em&gt;포인터&lt;/em&gt; 는 손가락, 펜 / 스타일러스 또는 마우스의 접점을 나타낼 수있는 통합 된 입력 모델을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9d6de852f11d3af304de244249a0fc6ce4f1d83c" translate="yes" xml:space="preserve">
          <source>The introduction of new input mechanisms results in increased application complexity to handle various input events, such as key events, mouse events, pen/stylus events, and touch events. To help address this problem, the &lt;a href=&quot;https://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events standard&lt;/a&gt;&lt;em&gt;defines events and related interfaces for handling hardware agnostic pointer input from devices including a mouse, pen, touchscreen, etc.&lt;/em&gt;. That is, the abstract &lt;em&gt;pointer&lt;/em&gt; creates a unified input model that can represent a contact point for a finger, pen/stylus or mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb9f95510dfcd52f47283d63812d3b38ccfdc76" translate="yes" xml:space="preserve">
          <source>The issue</source>
          <target state="translated">문제</target>
        </trans-unit>
        <trans-unit id="8f8da4b4e8269a0c03a44e750d7550c096ec982b" translate="yes" xml:space="preserve">
          <source>The item may not be dropped.</source>
          <target state="translated">아이템을 떨어 뜨릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="65a44245b173376cd7e34a331aa502b23a71bdbf" translate="yes" xml:space="preserve">
          <source>The item you wish to update (or insert).</source>
          <target state="translated">업데이트 (또는 삽입)하려는 항목입니다.</target>
        </trans-unit>
        <trans-unit id="12b90b70e812db945fca73c7ee81205442fcf32a" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSValueList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSValueList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 색인을 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19014f936c326668ea2ca49937a45a65d80c8fe3" translate="yes" xml:space="preserve">
          <source>The items in the collection of nodes are objects and not strings. To get data from node objects, use their properties (e.g. &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; to get the name, etc.).</source>
          <target state="translated">노드 모음의 항목은 문자열이 아닌 객체입니다. 노드 객체에서 데이터를 가져 오려면 해당 속성 (예 : &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; 등)을 사용하여 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1ed765510dec72b93a3437e7a05cf08d7bf7037b" translate="yes" xml:space="preserve">
          <source>The key = &lt;strong&gt;z&lt;/strong&gt;</source>
          <target state="translated">열쇠 = &lt;strong&gt;z&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e5f1dbfe9dee996a1a03522a884acd5b831e3d6" translate="yes" xml:space="preserve">
          <source>The key bits to take away from this are:</source>
          <target state="translated">이것에서 빼낼 핵심 비트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f4210dbf3b02cfa151ceac0a8d8faa5e79054d7b" translate="yes" xml:space="preserve">
          <source>The key change here is that instead of fetching the vertex color, we're fetching the texture coordinates and passing them to the vertex shader; this will indicate the location within the texture corresponding to the vertex.</source>
          <target state="translated">여기서 중요한 변화는 정점 색상을 가져 오는 대신 텍스처 좌표를 가져와 정점 셰이더에 전달한다는 것입니다. 이것은 정점에 해당하는 텍스처 내 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="839ae84ae813d9ba3e334df960d534e9bfc5051f" translate="yes" xml:space="preserve">
          <source>The key difference here is that for each vertex, we pass its color using a &lt;code&gt;varying&lt;/code&gt; to the fragment shader.</source>
          <target state="translated">여기서 중요한 차이점은 각 정점마다 조각 셰이더에 &lt;code&gt;varying&lt;/code&gt; 색을 사용하여 색상을 전달한다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="f15e79e3ad726a6eba111ac63901e860731ca800" translate="yes" xml:space="preserve">
          <source>The key for the record at the cursor's &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;position&lt;/a&gt;.</source>
          <target state="translated">커서 &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;위치&lt;/a&gt; 의 레코드 키 .</target>
        </trans-unit>
        <trans-unit id="192aee5c47f2716449ab102e49cc31ce4a4e0518" translate="yes" xml:space="preserve">
          <source>The key for the stored record.</source>
          <target state="translated">저장된 레코드의 키입니다.</target>
        </trans-unit>
        <trans-unit id="6f2c3975f2000d1b80af15edb055b357b5add06a" translate="yes" xml:space="preserve">
          <source>The key has only one version, or can't be distinguished between the left and right versions of the key, and was not pressed on the numeric keypad or a key that is considered to be part of the keypad.</source>
          <target state="translated">키에는 버전이 하나만 있거나 왼쪽과 오른쪽 버전을 구별 할 수 없으며 숫자 키패드 나 키패드의 일부로 간주되는 키를 누르지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="34cb9fcb12f5003653d832e173841dd3cb519bd3" translate="yes" xml:space="preserve">
          <source>The key here is connecting the graph correctly, and also starting both oscillators:</source>
          <target state="translated">여기서 핵심은 그래프를 올바르게 연결하고 두 발진기를 시작하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a4d85226d43fbca0da6814f3a48caaef559ad393" translate="yes" xml:space="preserve">
          <source>The key is greater than or equal to this cursor's position and this cursor's direction is &lt;code&gt;prev&lt;/code&gt; or &lt;code&gt;prevunique&lt;/code&gt;.</source>
          <target state="translated">키가이 커서의 위치보다 크 거나 &lt;code&gt;prevunique&lt;/code&gt; 커서의 방향이 &lt;code&gt;prev&lt;/code&gt; 또는 prevunique 입니다.</target>
        </trans-unit>
        <trans-unit id="0aa6707942ff8ec6cfcc98023af97c687bbc7ff2" translate="yes" xml:space="preserve">
          <source>The key is less than or equal to this cursor's position and the cursor's direction is &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;nextunique&lt;/code&gt;.</source>
          <target state="translated">키가이 커서의 위치보다 작거나 같고 커서 방향이 &lt;code&gt;next&lt;/code&gt; 또는 &lt;code&gt;nextunique&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9f8e7e7f111ec47f68e534f4a806fa00ac2b734" translate="yes" xml:space="preserve">
          <source>The key is not a valid key.</source>
          <target state="translated">키가 유효한 키가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="89ba803d9ccc0b7d292ec0a987eb694cd130f540" translate="yes" xml:space="preserve">
          <source>The key of an element to search for in the map.</source>
          <target state="translated">지도에서 검색 할 요소의 키입니다.</target>
        </trans-unit>
        <trans-unit id="6682ef34c8531cbce3f2f9c8c513065b078d1f42" translate="yes" xml:space="preserve">
          <source>The key of the item to return from the map.</source>
          <target state="translated">지도에서 반환 할 항목의 키입니다.</target>
        </trans-unit>
        <trans-unit id="8e743125121265e42aca612b4ad4320cba650c60" translate="yes" xml:space="preserve">
          <source>The key of the record to be deleted, or an &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; to delete all records with keys in range.</source>
          <target state="translated">삭제할 레코드의 키 또는 범위에 키가있는 모든 레코드를 삭제 하는 &lt;a href=&quot;../idbkeyrange&quot;&gt; &lt;code&gt;IDBKeyRange&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36621c09eecc06761cbf034dbf2e1364e45c1975" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key or is null.</source>
          <target state="translated">제공된 키 또는 키 범위에 유효하지 않은 키가 있거나 널입니다.</target>
        </trans-unit>
        <trans-unit id="5469e34fb81e65f021a705f22386fe5d2d22c0b5" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key.</source>
          <target state="translated">제공된 키 또는 키 범위에 유효하지 않은 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d94fa87b9cd3f44b1cd4de7b5f7ab503a505876" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be counted.</source>
          <target state="translated">계산할 레코드를 식별하는 키 또는 키 범위입니다.</target>
        </trans-unit>
        <trans-unit id="bccb616f056dc7cd3fe50b9d7cf455a16187b2c6" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be retrieved.</source>
          <target state="translated">검색 할 레코드를 식별하는 키 또는 키 범위입니다.</target>
        </trans-unit>
        <trans-unit id="2688e8757b682681e72208df33c54ad3285da191" translate="yes" xml:space="preserve">
          <source>The key parameter may have any of the following conditions:</source>
          <target state="translated">키 매개 변수는 다음 조건 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="867a8ea3be0506e9509bb10dc676ea2f56df51ae" translate="yes" xml:space="preserve">
          <source>The key parameter was provided but does not contain a valid key.</source>
          <target state="translated">키 매개 변수가 제공되었지만 유효한 키를 포함하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e42629fcd872de243cb3908c73e213a0e269aad3" translate="yes" xml:space="preserve">
          <source>The key path for the index to use. Note that it is possible to create an index with an empty &lt;code&gt;keyPath&lt;/code&gt;, and also to pass in a sequence (array) as a &lt;code&gt;keyPath&lt;/code&gt;.</source>
          <target state="translated">사용할 인덱스의 키 경로입니다. 이 빈으로 인덱스를 작성하는 것이 가능하다 &lt;code&gt;keyPath&lt;/code&gt; , 또한 같은 서열 (배열)에 전달하는 &lt;code&gt;keyPath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9b765cfcdb4ca0356039bb9aebc8b845126d242" translate="yes" xml:space="preserve">
          <source>The key path of the current index is logged to the console: it should be returned as &lt;code&gt;lName&lt;/code&gt;.</source>
          <target state="translated">현재 색인의 키 경로가 콘솔에 로그됩니다 . &lt;code&gt;lName&lt;/code&gt; 으로 리턴되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="151e23165d553ba4ff3ecc0a0349dbe861efb206" translate="yes" xml:space="preserve">
          <source>The key path used by the new index.</source>
          <target state="translated">새 인덱스에서 사용하는 키 경로입니다.</target>
        </trans-unit>
        <trans-unit id="361a2fde03ec7860c0bc7c8d8b89dd0fdd31282a" translate="yes" xml:space="preserve">
          <source>The key range to be queried. If a single valid key is passed, this will default to a range containing only that key. If nothing is passed, this will default to a key range that selects all the records in this object store.</source>
          <target state="translated">쿼리 할 키 범위입니다. 유효한 단일 키가 전달되면 기본적으로 해당 키만 포함 된 범위로 설정됩니다. 아무것도 전달되지 않으면 기본적으로이 객체 저장소의 모든 레코드를 선택하는 키 범위로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="67daf28bdc41bbc759694518b484a008fc29e251" translate="yes" xml:space="preserve">
          <source>The key range to use as the cursor's range.</source>
          <target state="translated">커서 범위로 사용할 키 범위입니다.</target>
        </trans-unit>
        <trans-unit id="af33071c7b4e2359c4c00ff74c68b1babd5d82fd" translate="yes" xml:space="preserve">
          <source>The key that identifies the record to be retrieved.</source>
          <target state="translated">검색 할 레코드를 식별하는 키입니다.</target>
        </trans-unit>
        <trans-unit id="6b4b46b53d9839db99a9425a11064ea9909b7ee7" translate="yes" xml:space="preserve">
          <source>The key to be used to identify the record.</source>
          <target state="translated">레코드를 식별하는 데 사용되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="1fdf6e9c95d583e5e0876a5868e648cbfc84c1b6" translate="yes" xml:space="preserve">
          <source>The key to position the cursor at.</source>
          <target state="translated">커서를 놓을 키입니다.</target>
        </trans-unit>
        <trans-unit id="c682fc397e753d1c0d868d1c003d23412ed998cb" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null.</source>
          <target state="translated">레코드를 식별하는 데 사용되는 키입니다. 지정하지 않으면 null이됩니다.</target>
        </trans-unit>
        <trans-unit id="30075c2a6927cfea55a7e4d8986e1253d1981fde" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null. If the object store has a key generator (e.g. autoincrement) the key of the object must be passed in to update the object.</source>
          <target state="translated">레코드를 식별하는 데 사용되는 키입니다. 지정하지 않으면 null이됩니다. 객체 저장소에 키 생성기 (예 : 자동 증분)가있는 경우 객체를 업데이트하려면 객체의 키를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="493cf1d1e74b75f78372abc1912fe52be61208c4" translate="yes" xml:space="preserve">
          <source>The key to which to move the cursor's position.</source>
          <target state="translated">커서 위치를 이동할 키입니다.</target>
        </trans-unit>
        <trans-unit id="b3bad5a1e956a0e4867df06685c0d2e87567135f" translate="yes" xml:space="preserve">
          <source>The key was a button on a game controller or a joystick on a mobile device.</source>
          <target state="translated">열쇠는 게임 컨트롤러의 버튼이거나 모바일 장치의 조이스틱이었습니다.</target>
        </trans-unit>
        <trans-unit id="cc57735dfcc679de2c5685a62b981f145801bc35" translate="yes" xml:space="preserve">
          <source>The key was on a mobile device; this can be on either a physical keypad or a virtual keyboard.</source>
          <target state="translated">열쇠는 휴대 기기에있었습니다. 이것은 실제 키패드 또는 가상 키보드에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40527e4fceb3e2126b2c515e200b6cf73051521c" translate="yes" xml:space="preserve">
          <source>The key was on the numeric keypad, or has a virtual key code that corresponds to the numeric keypad.</source>
          <target state="translated">키가 숫자 키패드에 있거나 숫자 키패드에 해당하는 가상 키 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d24c02cba586837216f3b2068b4e2937fc5de0f8" translate="yes" xml:space="preserve">
          <source>The key was the left-hand version of the key; for example, the left-hand</source>
          <target state="translated">키는 왼쪽 버전이었습니다. 예를 들어, 왼쪽</target>
        </trans-unit>
        <trans-unit id="e5a9032c9d30fc7148705d2f2591409eec53addf" translate="yes" xml:space="preserve">
          <source>The key was the right-hand version of the key; for example, the right-hand</source>
          <target state="translated">열쇠는 열쇠의 오른쪽 버전이었습니다. 예를 들어, 오른손</target>
        </trans-unit>
        <trans-unit id="1270c174b220e24a3377e4ba802e78a3a9be3dff" translate="yes" xml:space="preserve">
          <source>The key whose value is changing as a result of this event.</source>
          <target state="translated">이 이벤트의 결과로 값이 변경되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="7192b4a1edb91d4b777660c729182dd1560ada81" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned</source>
          <target state="translated">값을 반환하려는 키</target>
        </trans-unit>
        <trans-unit id="adfb14ab21961c3042507b76d9f886f75c9c8318" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned.</source>
          <target state="translated">값을 반환하려는 키입니다.</target>
        </trans-unit>
        <trans-unit id="b5f93027642b2967f7ba552cb5a6794d0446bf37" translate="yes" xml:space="preserve">
          <source>The key's new value.</source>
          <target state="translated">키의 새로운 가치.</target>
        </trans-unit>
        <trans-unit id="bcb57f63776a7d4a6c9afed5f91254aadbad8b98" translate="yes" xml:space="preserve">
          <source>The key's old value.</source>
          <target state="translated">키의 이전 값.</target>
        </trans-unit>
        <trans-unit id="7f76c6b2c5bda1e950d51d378999359849f255f5" translate="yes" xml:space="preserve">
          <source>The keyboard</source>
          <target state="translated">키보드</target>
        </trans-unit>
        <trans-unit id="785d40c49ae7d183fa7a21b102146104261dc8e8" translate="yes" xml:space="preserve">
          <source>The keyframeEffect is &lt;strong&gt;accumulated&lt;/strong&gt; on to the underlying value: &lt;code&gt;blur(5)&lt;/code&gt;.</source>
          <target state="translated">keyframeEffect는 기본 값인 &lt;code&gt;blur(5)&lt;/code&gt; 에 &lt;strong&gt;누적&lt;/strong&gt; 됩니다 .</target>
        </trans-unit>
        <trans-unit id="94f16f5a41187e1166716ffaebeac3bd28482ca2" translate="yes" xml:space="preserve">
          <source>The keypress event &lt;strong&gt;should&lt;/strong&gt; be raised when the user presses a key on the keyboard. However, not all browsers fire keypress events for certain keys.</source>
          <target state="translated">사용자가 키보드에서 키를 누르면 키 누르기 이벤트 &lt;strong&gt;가&lt;/strong&gt; 발생 &lt;strong&gt;해야&lt;/strong&gt; 합니다. 그러나 모든 브라우저가 특정 키에 대해 키 누르기 이벤트를 발생시키는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="cbf8e170c7f694cba63b8fa37d8f9d2871be0083" translate="yes" xml:space="preserve">
          <source>The keyup event is raised when the user releases a key that's been pressed.</source>
          <target state="translated">사용자가 누른 키를 놓으면 키업 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b55d97857332acbb459f32cabcf215ae7557960e" translate="yes" xml:space="preserve">
          <source>The kind of change that took place (either a change to the list of children or a change to an attribute) is detected by looking at the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt;&lt;code&gt;mutation.type&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt; &lt;code&gt;mutation.type&lt;/code&gt; &lt;/a&gt; 속성 을 보면 발생한 변경 종류 (자식 목록 변경 또는 특성 변경)가 감지됩니다 .</target>
        </trans-unit>
        <trans-unit id="5c48a2ceab27ce3680069083dc2cbd28009ca936" translate="yes" xml:space="preserve">
          <source>The kinds available for audio tracks are:</source>
          <target state="translated">오디오 트랙에 사용할 수있는 종류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d53bb75ade94ed31212d22e391697e1ff2a3679f" translate="yes" xml:space="preserve">
          <source>The kinds available for video tracks are:</source>
          <target state="translated">비디오 트랙에 사용할 수있는 종류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7b361bd7e0d5d74ac8813cc9735af5840eca145c" translate="yes" xml:space="preserve">
          <source>The label and/or protocol string is too long; these cannot be longer than 65,535 bytes (bytes, rather than characters).</source>
          <target state="translated">레이블 및 / 또는 프로토콜 문자열이 너무 깁니다. 65,535 바이트 (문자가 아닌 바이트)를 초과 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2320addd9492913e5914aec07c23611ab7bc6d67" translate="yes" xml:space="preserve">
          <source>The language code of the notification as specified in the constructor's &lt;code&gt;options&lt;/code&gt; parameter.</source>
          <target state="translated">생성자의 &lt;code&gt;options&lt;/code&gt; 매개 변수에 지정된 알림의 언어 코드입니다 .</target>
        </trans-unit>
        <trans-unit id="4bc1c1f724790abf32447f656dfb92df32bd125f" translate="yes" xml:space="preserve">
          <source>The language code returned by this property is defined in the &lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;Tags for Identifying Languages (BCP47)&lt;/em&gt;&lt;/a&gt; IETF document. Common examples include &quot;en&quot; for English, &quot;ja&quot; for Japanese, &quot;es&quot; for Spanish and so on. The default value of this attribute is &lt;code&gt;unknown&lt;/code&gt;. Note that this attribute, though valid at the individual element level described here, is most often specified for the root element of the document.</source>
          <target state="translated">이 특성에 의해 리턴되는 언어 코드는 언어 &lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;식별 태그 (BCP47)&lt;/em&gt;&lt;/a&gt; IETF 문서에 정의되어 있습니다. 일반적인 예에는 영어의 경우 &quot;en&quot;, 일본어의 경우 &quot;ja&quot;, 스페인어의 경우 &quot;es&quot;등이 있습니다. 이 속성의 기본값은 &lt;code&gt;unknown&lt;/code&gt; . 이 속성은 여기에 설명 된 개별 요소 레벨에서 유효하지만 문서의 루트 요소에 대해 가장 자주 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="4987e96e6986297fb2f725f49d7c23b05097dbf0" translate="yes" xml:space="preserve">
          <source>The language itself is specified using a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 language tag&lt;/a&gt;. See the Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 letter language codes&lt;/a&gt; page for a simple reference.</source>
          <target state="translated">언어 자체는 &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 언어 태그를&lt;/a&gt; 나타내는 &lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; 을&lt;/a&gt; 사용하여 지정 됩니다 . 간단한 참조 는 Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 문자 언어 코드&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="03f1e94543be4f95daec90263f35a54ed56861c8" translate="yes" xml:space="preserve">
          <source>The language itself is specified using a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a &lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 language tag&lt;/a&gt;. See the Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 letter language codes&lt;/a&gt; page for a simple reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e4087ba337405b3a9b453774b84a0685fedf98" translate="yes" xml:space="preserve">
          <source>The language was not supported.</source>
          <target state="translated">언어가 지원되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="b0b07dd7d614eeb60bd3cf2fd1aa603997a5de3e" translate="yes" xml:space="preserve">
          <source>The last bit of code adds a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the stop button using &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">코드의 마지막 비트는 &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt; 사용하여 중지 버튼 에서 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 핸들러를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5b066a32955a10ad46e892f98de6f1d37f7ec635" translate="yes" xml:space="preserve">
          <source>The last box has thresholds each 25%.</source>
          <target state="translated">마지막 상자에는 각 25 %의 임계 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="79033c5a78365c5cdff3b580d1a7e54abdb7ecd0" translate="yes" xml:space="preserve">
          <source>The last candidate to be signaled this way by the remote peer will be a special candidate denoting end-of-candidates. Out of interest, end-of-candidates may be manually indicated as follows:</source>
          <target state="translated">원격 피어가이 방법으로 신호를 보낸 마지막 후보는 후보자 끝을 나타내는 특수 후보가됩니다. 관심이없는 후보자는 다음과 같이 수동으로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d87f88141eadb5bdabe7b1e1d4e09d8f17dbba8" translate="yes" xml:space="preserve">
          <source>The last color stop in each of the four gradients uses a fully transparent color. If you want to have a nice transition from this to the previous color stop, both colors should be equal. This isn't very obvious from the code because it uses two different CSS color methods as a demonstration, but in the first gradient &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt;.</source>
          <target state="translated">네 가지 그라디언트 각각의 마지막 색상 정지 점은 완전히 투명한 색상을 사용합니다. 이 색상을 이전 색상 정지 점으로 멋지게 전환하려면 두 색상이 같아야합니다. 이것은 두 가지 CSS 색상 방법을 데모로 사용하기 때문에 코드에서 분명하지 않지만 첫 번째 그라디언트에서는 &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d20b5925dc805c0f499ab58420f0ed328ac07175" translate="yes" xml:space="preserve">
          <source>The last keyframe says that the animation's final frame should draw the animation rotated 90&amp;deg; to the right from its original orientation.</source>
          <target state="translated">마지막 키 프레임은 애니메이션의 마지막 프레임이 원래 방향에서 오른쪽으로 90 &amp;deg; 회전 된 애니메이션을 그려야한다고 말합니다.</target>
        </trans-unit>
        <trans-unit id="cb70956ca1253ba3077f035042b417412983bf93" translate="yes" xml:space="preserve">
          <source>The last line contained in this function is a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt;&lt;/a&gt; call, which runs the &lt;code&gt;reportGamepads()&lt;/code&gt; function after a 1 second delay. Why do we need to do this? First of all, VR controllers will only be ready after their associated VR headset is active, so we need to invoke this after &lt;code&gt;getVRDisplays()&lt;/code&gt; has been called and returned the display information. Second, the Gamepad API is much older than the WebVR API, and not promise-based. As you'll see later, the &lt;code&gt;getGamepads()&lt;/code&gt; method is synchronous, and just returns the &lt;code&gt;Gamepad&lt;/code&gt; objects immediately &amp;mdash; it doesn't wait for the controller to be ready to report information. Unless you wait for a little while, returned information may not be accurate (at least, this is what we found in our tests).</source>
          <target state="translated">이 함수에 포함 된 마지막 줄은 &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; &lt;/a&gt; 호출이며 1 초 지연 후 &lt;code&gt;reportGamepads()&lt;/code&gt; 함수 를 실행합니다 . 왜 이렇게해야합니까? 우선 VR 컨트롤러는 연결된 VR 헤드셋이 활성화 된 후에 만 ​​준비되므로 &lt;code&gt;getVRDisplays()&lt;/code&gt; 가 호출되고 디스플레이 정보가 반환 된 후에 이를 호출해야합니다 . 둘째, 게임 패드 API는 약속 기반이 아닌 WebVR API보다 훨씬 오래되었습니다. 나중에 볼 수 있듯이 &lt;code&gt;getGamepads()&lt;/code&gt; 메서드는 동기식이며 &lt;code&gt;Gamepad&lt;/code&gt; 만 반환합니다.즉시 개체 &amp;mdash; 컨트롤러가 정보를보고 할 준비가 될 때까지 기다리지 않습니다. 잠시 기다리지 않으면 반환 된 정보가 정확하지 않을 수 있습니다 (적어도 테스트에서 찾은 것임).</target>
        </trans-unit>
        <trans-unit id="7d599ed7b8a42f11652d468a0d232ab7c33dc2e5" translate="yes" xml:space="preserve">
          <source>The last line could be simplified to:</source>
          <target state="translated">마지막 줄은 다음과 같이 단순화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d77e50ae88c50271c2cb28136fc36f82e901256" translate="yes" xml:space="preserve">
          <source>The last of three properties that declare the USB protocol version supported by the device.</source>
          <target state="translated">장치가 지원하는 USB 프로토콜 버전을 선언하는 세 가지 속성 중 마지막.</target>
        </trans-unit>
        <trans-unit id="34baddfe12a5a5f50b24934516856a87dbc3b0a2" translate="yes" xml:space="preserve">
          <source>The last part of the code simply updates the &lt;code&gt;pitch&lt;/code&gt;/&lt;code&gt;rate&lt;/code&gt; values displayed in the UI, each time the slider positions are moved.</source>
          <target state="translated">코드의 마지막 부분은 슬라이더 위치가 움직일 때마다 UI에 표시 되는 &lt;code&gt;pitch&lt;/code&gt; / &lt;code&gt;rate&lt;/code&gt; 값을 단순히 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="ec856fb858019878d9f8ced26d4113caf7988f3a" translate="yes" xml:space="preserve">
          <source>The last part of the rendering loop involves us calling &lt;a href=&quot;../vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt; &amp;mdash; now all the work has been done and we've rendered the display on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, this method then submits the frame to the VR display so it is displayed on there as well.</source>
          <target state="translated">렌더링 루프의 마지막 부분은 &lt;a href=&quot;../vrdisplay/submitframe&quot;&gt; &lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt; &lt;/a&gt; 호출하는 것과 관련이 있습니다. 이제 모든 작업이 완료되었으며 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 디스플레이를 렌더링 한 다음이 메서드는 프레임을 VR 디스플레이에 제출하여 표시되도록합니다. 거기에.</target>
        </trans-unit>
        <trans-unit id="9195c9bfab4b64ce7140326bf3e1629cbed43290" translate="yes" xml:space="preserve">
          <source>The last significant piece of the puzzle: code that displays, for the user's reference, a list of the constrainable properties which their browser supports. Each property is a link to its documentation on MDN for the user's convenience. See the &lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;Example&lt;/a&gt; in &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints()&lt;/a&gt; for details on how this code works.</source>
          <target state="translated">퍼즐의 마지막 중요한 부분 : 사용자가 참조 할 수 있도록 브라우저가 지원하는 제한 가능한 속성 목록을 표시하는 코드입니다. 각 속성은 사용자 편의를 위해 MDN 관련 문서에 대한 링크입니다. 이 코드의 작동 방식에 대한 자세한 내용 은 &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints ()&lt;/a&gt; 의 &lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;예제&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d89deff0bfa30d0a2451b9502c471d2517af2c6c" translate="yes" xml:space="preserve">
          <source>The last step of filling in the w component can actually be accomplished with a simple matrix. Start with the identity matrix:</source>
          <target state="translated">w 컴포넌트를 채우는 마지막 단계는 실제로 간단한 매트릭스로 수행 할 수 있습니다. 항등 행렬로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="067ca26823af4dc05a63d5370f6423572c52d1d6" translate="yes" xml:space="preserve">
          <source>The last thing the callback does is call &lt;code&gt;setTimeout()&lt;/code&gt; to schedule itself to be called again as soon as possible. In the real world, you would probably schedule this to be done based on knowledge of the video's frame rate.</source>
          <target state="translated">콜백이하는 마지막 작업은 &lt;code&gt;setTimeout()&lt;/code&gt; 을 호출하여 가능한 빨리 다시 호출되도록 예약하는 것입니다. 실제로는 비디오의 프레임 속도에 대한 지식을 바탕으로이 작업을 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f134de0e4ce37ae41c15bc1d8855fb82ffe86c05" translate="yes" xml:space="preserve">
          <source>The last thing to do here is set the &lt;code&gt;initialRun&lt;/code&gt; variable to &lt;code&gt;false&lt;/code&gt;, as the initial run is now over.</source>
          <target state="translated">마지막 실행은 이제 초기 실행이 &lt;code&gt;initialRun&lt;/code&gt; 변수를 &lt;code&gt;false&lt;/code&gt; 로 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="dc25d4ee0d1e230ce2778ef0b95f0e68cfa9d621" translate="yes" xml:space="preserve">
          <source>The last thing we need to do in order to begin connecting our peers is to create a connection offer.</source>
          <target state="translated">동료를 연결하기 위해 마지막으로해야 할 일은 연결 제안을 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="75b96b94809c6003406d03408c5e923b24267fba" translate="yes" xml:space="preserve">
          <source>The last two handlers are there to handle cases where speech was recognised that wasn't in the defined grammar, or an error occured. &lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt;&lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt;&lt;/a&gt; seems to be supposed to handle the first case mentioned, although note that at the moment it doesn't seem to fire correctly in Firefox or Chrome; it just returns whatever was recognised anyway:</source>
          <target state="translated">마지막 두 핸들러는 정의 된 문법에없는 음성이 인식되거나 오류가 발생한 경우를 처리하기 위해 존재합니다. &lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt; &lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt; &lt;/a&gt; 는 언급 된 첫 번째 사례를 처리하는 것으로 보이지만 현재 Firefox 또는 Chrome에서는 올바르게 실행되지 않습니다. 어쨌든 인식 된 것을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d4fbd2e17b097cdc2fc2bd3589cc6e2ce286eeb5" translate="yes" xml:space="preserve">
          <source>The last way is to generate your own sound, which can be done with either an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; or by creating a buffer and populating it with your own data. Check out the &lt;a href=&quot;advanced_techniques&quot;&gt;tutorial here for creating your own instrument&lt;/a&gt; for information on creating sounds with oscillators and buffers.</source>
          <target state="translated">마지막 방법은 &lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt; 하거나 버퍼를 생성하여 자신의 데이터 로 채울 수있는 자체 사운드 를 생성하는 것입니다. 오실레이터와 버퍼로 사운드를 만드는 방법에 대한 정보는 &lt;a href=&quot;advanced_techniques&quot;&gt;자체 악기 만들기에&lt;/a&gt; 대한 자습서를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0df62567dddb9a61427aa37a6b9f83b2a0940019" translate="yes" xml:space="preserve">
          <source>The latest spec has updated this method to a promise-based syntax that works like this:</source>
          <target state="translated">최신 사양에서는이 방법을 다음과 같은 약속 기반 구문으로 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="c112df114cea7aee58c85eec22260049a206b052" translate="yes" xml:space="preserve">
          <source>The left (&lt;code&gt;L&lt;/code&gt; and &lt;code&gt;SL&lt;/code&gt;), right (&lt;code&gt;R&lt;/code&gt; and &lt;code&gt;SR&lt;/code&gt;) and central channels are all mixed together. The surround channels are slightly attenuated and the regular lateral channels are power-compensated to make them count as a single channel by multiplying by &lt;code&gt;&amp;radic;2/2&lt;/code&gt;. The subwoofer (&lt;code&gt;LFE&lt;/code&gt;) channel is lost.</source>
          <target state="translated">왼쪽 ( &lt;code&gt;L&lt;/code&gt; 및 &lt;code&gt;SL&lt;/code&gt; ), 오른쪽 ( &lt;code&gt;R&lt;/code&gt; 및 &lt;code&gt;SR&lt;/code&gt; ) 및 중앙 채널이 모두 혼합되어 있습니다. 서라운드 채널은 약간 감쇠되며 일반 측면 채널은 &lt;code&gt;&amp;radic;2/2&lt;/code&gt; 를 곱하여 단일 채널로 계산되도록 전력 보상됩니다 . 서브 우퍼 ( &lt;code&gt;LFE&lt;/code&gt; ) 채널이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="8b361aef24ec293ed9fdf21d200a82b14e7ebefb" translate="yes" xml:space="preserve">
          <source>The left offset of the bounds.</source>
          <target state="translated">경계의 왼쪽 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="3deffa6bdd6f1859714ee9f5419eb48e584052f7" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; event can be used to create a living &lt;code&gt;classList&lt;/code&gt; mockup thanks to a &lt;code&gt;Element.prototype.className&lt;/code&gt; property that fires the specified event once it is changed.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; 이벤트는 지정된 이벤트가 변경되면 발생 하는 &lt;code&gt;Element.prototype.className&lt;/code&gt; 속성으로 인해 살아있는 &lt;code&gt;classList&lt;/code&gt; 모형 을 만드는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="991ee95f476371686a49139b801d252cad4655db" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigation&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancenavigation&quot;&gt;&lt;code&gt;PerformanceNavigation&lt;/code&gt;&lt;/a&gt; object representing the type of navigation that occurs in the given browsing context, such as the number of redirections needed to fetch the resource.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigation&lt;/code&gt; 읽기 전용 속성 은 리소스를 가져 오는 데 필요한 리디렉션 수와 같이 지정된 탐색 컨텍스트에서 발생하는 탐색 유형을 나타내는 &lt;a href=&quot;../performancenavigation&quot;&gt; &lt;code&gt;PerformanceNavigation&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b669d6807ccf1cfbe482bbddfbc335eb55e21a3d" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.timing&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; object containing latency-related performance information.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.timing&lt;/code&gt; 읽기 전용 속성은 대기 시간 관련 성능 정보가 포함 된 &lt;a href=&quot;../performancetiming&quot;&gt; &lt;code&gt;PerformanceTiming&lt;/code&gt; &lt;/a&gt; 개체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="226101c19f1d7ea020442ab860991c2ced0375ce" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectCount&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; representing the number of REDIRECTs done before reaching the page.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectCount&lt;/code&gt; 읽기 전용 속성 은 페이지에 도달하기 전에 수행 된 REDIRECT 수를 나타내는 &lt;code&gt;unsigned short&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1d7651c61cf6df6c99b779f1cb47c197f52e4637" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.type&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; containing a constant describing how the navigation to this page was done. Possible values are:</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.type&lt;/code&gt; 읽기 전용 속성은 이 페이지 탐색 방법을 설명하는 상수를 포함 하는 &lt;code&gt;unsigned short&lt;/code&gt; 를 반환합니다 . 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7751a05a46cb461f6928cc01ccc6bfb41b3b59d0" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment end time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectEnd&lt;/code&gt; 읽기 전용 속성 은 연결이 네트워크에서 열리는 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 전송 계층에서 오류를보고하고 연결 설정이 다시 시작되면 마지막 연결 설정 종료 시간이 제공됩니다. 지속적 연결이 사용되는 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 모든 보안 연결 핸드 셰이크 또는 SOCKS 인증이 종료되면 연결이 열린 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="5e8518f5d3524cb6abc645f41c2a0b56e1cd3a61" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment start time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectStart&lt;/code&gt; 읽기 전용 속성은 연결을 열기위한 요청이 네트워크로 전송되는 UNIX 에포크 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 전송 계층에서 오류를보고하고 연결 설정이 다시 시작되면 마지막 연결 설정 시작 시간이 제공됩니다. 지속적 연결이 사용되는 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ac255ec52b31ad62e317bef3cb4616880f070f84" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domComplete&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'complete'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domComplete&lt;/code&gt; 는 읽기 전용 속성의 반환을 &lt;code&gt;unsigned long long&lt;/code&gt; 파서 그 때입니다 주 문서에 그 작업이 완료되면, 유닉스 시대 이후 밀리 초에, 순간을 나타내는 &lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; 가&lt;/a&gt; 로 변경 &lt;code&gt;'complete'&lt;/code&gt; 하고, 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f464d3a9b36a7555db972e109e729df0662b306a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in milliseconds since the UNIX epoch, right after all the scripts that need to be executed as soon as possible, in order or not, has been executed.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; 읽기 전용 속성은 가능한 한 빨리, 순서대로 실행해야하는 모든 스크립트가 실행 된 직후 UNIX epoch 이후 밀리 초 단위를 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="118852e6cd5d77518b33a873ce86e3ef63d53f22" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right before the parser sent the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; event, that is right after all the scripts that need to be executed right after parsing has been executed.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; 읽기 전용 특성은 구문 분석기가 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; 이벤트를 전송하기 직전 , 즉 구문 분석 후 바로 실행해야하는 모든 스크립트 바로 다음에 유닉스 시대 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 리턴합니다. 처형되었다.</target>
        </trans-unit>
        <trans-unit id="c7bf348d5e545c8dee00a32759e591a7412fc209" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domInteractive&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'interactive'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domInteractive&lt;/code&gt; 는 읽기 전용 속성의 반환을 &lt;code&gt;unsigned long long&lt;/code&gt; 파서 그 때입니다 주 문서에 그 작업이 완료되면, 유닉스 시대 이후 밀리 초에, 순간을 나타내는 &lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; 가&lt;/a&gt; 로 변경 &lt;code&gt;'interactive'&lt;/code&gt; 하고, 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="03dfd3ffba9e555ad75bac281e9a2e746728a5c4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domLoading&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser started its work, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'loading'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domLoading&lt;/code&gt; 읽기 전용 속성은 파서가 작업을 시작한 시점, 즉 &lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;'loading'&lt;/code&gt; 으로 변경되고 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생하는 시점 (UNIX epoch) 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다. 던졌습니다.</target>
        </trans-unit>
        <trans-unit id="d608e73cb2b1f6a7e9fe499082775a5dd0b0d623" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupEnd&lt;/code&gt; 읽기 전용 속성 은 도메인 조회가 완료된 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 지속적 연결이 사용되거나 정보가 캐시 또는 로컬 자원에 저장된 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="adf40546d2d607c3a1be0c577385207611bcc1ec" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupStart&lt;/code&gt; 읽기 전용 속성 은 도메인 조회가 시작되는 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 지속적 연결이 사용되거나 정보가 캐시 또는 로컬 자원에 저장된 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ee2a8b4fb6a44cb3f9127070711872c829f618bd" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.fetchStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is &lt;em&gt;before&lt;/em&gt; the check to any application cache.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.fetchStart&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 (epoch) 이후 몇 밀리 초 단위로 브라우저가 HTTP 요청을 사용하여 문서를 페치 할 준비가 된 순간을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 리턴합니다 . 이 순간은 응용 프로그램 캐시를 확인 &lt;em&gt;하기 전&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cb673292bb1c1718569717750f71aa718fdfc0d4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventEnd&lt;/code&gt; 읽기 전용 속성은 UNIX 이벤트가 발생한 후 ( &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러가 종료 된 후, 즉로드 이벤트가 완료된 이후) 밀리 초 단위 로 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이 이벤트가 아직 전송되지 않았거나 아직 완료되지 않은 경우 &lt;code&gt;0.&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d605e5d9b460554f7b34223da6b5c6fa81d776b2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event was sent for the current document. If this event has not yet been sent, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventStart&lt;/code&gt; 읽기 전용 속성 은 현재 문서에 대해 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트가 전송 된 시점 (UNIX epoch) 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이 이벤트가 아직 전송되지 않은 경우 &lt;code&gt;0.&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cb18e8242f4599f9e6e56706171236c04003fc27" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigationStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigationStart&lt;/code&gt; 읽기 전용 속성 은 동일한 탐색 컨텍스트에서 이전 문서에서 언로드 프롬프트가 종료 된 직후 UNIX 에포크 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이전 문서가없는 경우이 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="71ea8521182e56178fca35d3d97284c7e660d2c9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectEnd&lt;/code&gt; 읽기 전용 속성은 UNIX epoch 이후 마지막 HTTP 리디렉션이 완료된 후 즉, HTTP 응답의 마지막 바이트가 수신 된 시점을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 리디렉션이 없거나 리디렉션 중 하나의 원점이 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="be97e9a3c9498cb11974bb502b92e931ff7d7ca2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectStart&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 첫 번째 HTTP 리디렉션이 시작된 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 리디렉션이 없거나 리디렉션 중 하나의 원점이 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c2ee882c39baa6766799112f8d4f188d261ec2df" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.requestStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.requestStart&lt;/code&gt; 읽기 전용 속성은 브라우저가 서버 또는 캐시에서 실제 문서를 얻기 위해 요청을 보낸 UNIX UNIX 시대 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 요청 시작 후 전송 계층이 실패하고 연결이 다시 열리면이 특성은 새 요청에 해당하는 시간으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="161423cb0f8696c0a1f22f2f2509456ff7852724" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache or from a local resource.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseEnd&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 브라우저가 응답의 마지막 바이트를 받았을 때 또는 서버에서이 문제가 발생한 경우 연결이 닫힐 때까지의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 캐시 또는 로컬 리소스에서</target>
        </trans-unit>
        <trans-unit id="995636fd3adbd5e1e1bf4c159a6e0d6cecc105ee" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment in time (in milliseconds since the UNIX epoch) when the browser received the first byte of the response from the server, cache, or local resource.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseStart&lt;/code&gt; 읽기 전용 특성은 브라우저가 서버, 캐시 또는 로컬 자원으로부터 응답의 첫 번째 바이트를 수신 한 시간 (UNIX epoch 이후 밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="3391ab6e530362c3c546a8edb123c7074511744a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.secureConnectionStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the secure connection handshake starts. If no such connection is requested, it returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.secureConnectionStart&lt;/code&gt; 읽기 전용 속성 은 보안 연결 핸드 셰이크가 시작되는 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 이러한 연결이 요청되지 않으면 &lt;code&gt;0&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e978baf26aacb3860584a49e53518cf8203dc79a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventEnd&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 이벤트 처리기가 완료된 시점을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이전 문서가 없거나 이전 문서 또는 필요한 리디렉션 중 하나가 동일한 출처가 아닌 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1c346cfcad772624e21c3caae0f1ba82de16086e" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event has been thrown. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventStart&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 이벤트가 발생한 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이전 문서가 없거나 이전 문서 또는 필요한 리디렉션 중 하나가 동일한 출처가 아닌 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a09c9e0ff5b7eff186935e496eb51661102e5db9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;PerformanceNavigation&lt;/code&gt; interface represents information about how the navigation to the current document was done.</source>
          <target state="translated">레거시 &lt;code&gt;PerformanceNavigation&lt;/code&gt; 인터페이스는 현재 문서를 탐색하는 방법에 대한 정보를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="03cf84e2a1418f35c66f1abc2a0ea73dfbc1221b" translate="yes" xml:space="preserve">
          <source>The legacy miscelleanous encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;'x-user-defined'&lt;/code&gt;.</source>
          <target state="translated">레거시 기타 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;'x-user-defined'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="107e2f36965d453dab08ad335ad94a668a4f286b" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (simplified) encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 중국어 (간체) 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a8a5835a2e8a1f5ec7e27d5bae3f4d80218d0e9" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (traditional) encoding: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 중국어 (번체) 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f451bd6ace68cc71d8226268b330cdb99242f9f" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Japanese encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 일본어 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2776496780c85245ee819a70dbb614637574ce6" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Korean encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 한국어 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt; , 및 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="992cfc9bc19b3fba8793b0bb64fa18ad6effc447" translate="yes" xml:space="preserve">
          <source>The legacy single-byte encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 단일 바이트 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3573556a9ad431ddcfbdd8000f2d7338da0ca8fc" translate="yes" xml:space="preserve">
          <source>The length of time in milliseconds that the animation's effects will run. This is equal to the &lt;a href=&quot;../effecttiming/duration&quot;&gt;iteration duration&lt;/a&gt; multiplied by the &lt;a href=&quot;../effecttiming/iterations&quot;&gt;iteration count&lt;/a&gt;.</source>
          <target state="translated">애니메이션 효과가 실행될 시간 (밀리 초)입니다. &lt;a href=&quot;../effecttiming/iterations&quot;&gt;반복 횟수&lt;/a&gt; 에 반복 횟수를 곱한 &lt;a href=&quot;../effecttiming/duration&quot;&gt;반복&lt;/a&gt; 주기와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5862e03466770c37062a2f977ebc77f035c1474d" translate="yes" xml:space="preserve">
          <source>The length of time, in milliseconds, to wait between tones. The browser will enforce a minimum value of 30 ms (that is, if you specify a lower value, 30 ms will be used instead); the default is 70 ms.</source>
          <target state="translated">톤 사이에서 대기하는 시간 (밀리 초)입니다. 브라우저는 최소 30ms의 값을 적용합니다 (즉, 더 낮은 값을 지정하면 30ms가 대신 사용됨). 기본값은 70ms입니다.</target>
        </trans-unit>
        <trans-unit id="0111f2ae0e188a0206cb4c68143ee4ad23564f60" translate="yes" xml:space="preserve">
          <source>The letters A-D</source>
          <target state="translated">편지 AD</target>
        </trans-unit>
        <trans-unit id="62c01630e4e7a2c34fddf0b6ea92c9b52e9bb15b" translate="yes" xml:space="preserve">
          <source>The level of the ambient light in &lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;lux&lt;/a&gt;.</source>
          <target state="translated">주변 광 레벨 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;lux)&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5d20631ddcf8499c56ada461011dd7fb5e5aa65c" translate="yes" xml:space="preserve">
          <source>The lifetime of a service worker registration is beyond that of the &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects.</source>
          <target state="translated">서비스 워커 등록 의 수명은 해당 서비스 워커 클라이언트의 수명 내에서이를 나타내는 &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; 객체의 수명을 초과합니다 . 브라우저는 활성 &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; 개체 의 영구 목록을 유지 관리 합니다.</target>
        </trans-unit>
        <trans-unit id="45f0e24c51a82152e5c4cc0b26a57a9b47fb7fe9" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; deserves special notice. This uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt; (a new feature of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6&lt;/a&gt;) to assign the values of the first three items in the array returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt;&lt;code&gt;String.match()&lt;/code&gt;&lt;/a&gt; to the variables &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;direction&lt;/code&gt;. We do this because the value of &lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt;&lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt;&lt;/a&gt; is a single string that includes both the media type and the direction the media flows, such as &quot;audioinput&quot; or &quot;videooutput&quot;. This line, then, pulls out the type (&quot;audio&quot; or &quot;video&quot;) and direction (&quot;input&quot; or &quot;output&quot;) so they can be used to construct the string displayed in the list.</source>
          <target state="translated">라인 &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; 특별한 통지가 필요합니다. 이것은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;Destructuring assignment&lt;/a&gt; ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6&lt;/a&gt; 의 새로운 기능 )를 사용하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt; &lt;code&gt;String.match()&lt;/code&gt; &lt;/a&gt; 에 의해 반환 된 배열의 처음 세 항목 값을 &lt;code&gt;kind&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;direction&lt;/code&gt; 변수 에 할당합니다 . &lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt; &lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt; &lt;/a&gt; 의 값 때문에&quot;audioinput&quot;또는 &quot;videooutput&quot;과 같이 미디어 유형과 미디어가 흐르는 방향을 모두 포함하는 단일 문자열입니다. 그런 다음이 줄은 유형 ( &quot;audio&quot;또는 &quot;video&quot;)과 방향 ( &quot;input&quot;또는 &quot;output&quot;)을 가져 와서 목록에 표시된 문자열을 구성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="477ed0b11b70ecb616e18cd2d328c9322fbe0907" translate="yes" xml:space="preserve">
          <source>The line begins at (30, 50) and ends at (150, 100).</source>
          <target state="translated">줄은 (30, 50)에서 시작하여 (150, 100)에서 끝납니다.</target>
        </trans-unit>
        <trans-unit id="37afa4f4a4e5a0440375bf5c79eeec6928c43daf" translate="yes" xml:space="preserve">
          <source>The line height is the height of the first line of the cue as it appears on the video</source>
          <target state="translated">라인 높이는 비디오에 나타나는 큐의 첫 번째 라인의 높이입니다</target>
        </trans-unit>
        <trans-unit id="a35b61b88bc9c4a13be7c851bb1aa48c22507f5f" translate="yes" xml:space="preserve">
          <source>The line number in the document or worker at which the violation occurred.</source>
          <target state="translated">위반이 발생한 문서 또는 작업자의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="ef5b420f030b6e7986aba8ce5f7fdd36c3e3b8af" translate="yes" xml:space="preserve">
          <source>The line number of the script file on which the error occurred.</source>
          <target state="translated">오류가 발생한 스크립트 파일의 행 번호입니다.</target>
        </trans-unit>
        <trans-unit id="092a475fe70500fefe52960a23f4d3ec27b6a092" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;&quot;butt&quot;&lt;/code&gt; option. It's drawn completely flush with the guides. The second is set to use the &lt;code&gt;&quot;round&quot;&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;&quot;square&quot;&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">왼쪽의 줄은 기본 &lt;code&gt;&quot;butt&quot;&lt;/code&gt; 옵션을 사용합니다. 가이드와 완전히 같은 높이로 그려져 있습니다. 두 번째는 &lt;code&gt;&quot;round&quot;&lt;/code&gt; 옵션 을 사용하도록 설정되어 있습니다 . 이렇게하면 선 너비의 절반 인 반지름을 가진 반원이 끝에 추가됩니다. 오른쪽 줄은 &lt;code&gt;&quot;square&quot;&lt;/code&gt; 옵션을 사용합니다 . 그러면 선 두께의 너비와 높이가 같은 상자가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b0645312db6f85fd07e3d592af78842c6105586d" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;butt&lt;/code&gt; option. You'll notice that it's drawn completely flush with the guides. The second is set to use the &lt;code&gt;round&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;square&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">왼쪽의 줄은 기본 &lt;code&gt;butt&lt;/code&gt; 옵션을 사용합니다 . 가이드와 완전히 닿아 있음을 알 수 있습니다. 두 번째는 &lt;code&gt;round&lt;/code&gt; 옵션 을 사용하도록 설정되어 있습니다 . 이렇게하면 선 너비의 절반 인 반지름을 가진 반원이 끝에 추가됩니다. 오른쪽의 선은 &lt;code&gt;square&lt;/code&gt; 옵션을 사용합니다 . 그러면 선 두께의 너비와 높이가 같은 상자가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="13a263019ac0aaa3ee14c6b3a09d74fcc05aca0e" translate="yes" xml:space="preserve">
          <source>The line width is the thickness of the stroke centered on the given path. In other words, the area that's drawn extends to half the line width on either side of the path. Because canvas coordinates do not directly reference pixels, special care must be taken to obtain crisp horizontal and vertical lines.</source>
          <target state="translated">선 너비는 주어진 경로를 중심으로 한 획의 두께입니다. 즉, 그려진 영역이 경로의 양쪽에서 선 너비의 절반으로 확장됩니다. 캔버스 좌표는 픽셀을 직접 참조하지 않으므로 선명하고 수평선이 잘 보이도록 특별한주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="7d4d358573d94c8aafa5daa3567d2132ed11770a" translate="yes" xml:space="preserve">
          <source>The lines are separated by semi-colons, just like in JavaScript.</source>
          <target state="translated">JavaScript와 마찬가지로 줄은 세미콜론으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="02118de50ed60268754384b2c843ee4cf1c8e67e" translate="yes" xml:space="preserve">
          <source>The list of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;supported media formats&lt;/a&gt; varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;지원되는 미디어 형식&lt;/a&gt; 목록은 브라우저마다 다릅니다. 모든 관련 브라우저가 지원하는 단일 형식으로 비디오를 제공하거나 지원해야하는 모든 브라우저가 다룰 수 있도록 충분히 다른 형식으로 여러 비디오 소스를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1693d38a2f7928031b482f2ef043dde59e03fc2" translate="yes" xml:space="preserve">
          <source>The list of available style sheet sets is constructed by enumerating all the style sheets available for the document, in the order in which they're listed in the &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt;&lt;code&gt;document.styleSheets&lt;/code&gt;&lt;/a&gt; attribute, adding the &lt;code&gt;title&lt;/code&gt; of each style sheet that has a title to the list. Duplicates are dropped from the list (using a case-sensitive comparison).</source>
          <target state="translated">사용 가능한 스타일 시트 세트 목록은 문서에 사용 가능한 모든 스타일 시트를 &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt; &lt;code&gt;document.styleSheets&lt;/code&gt; &lt;/a&gt; 속성에 나열된 순서대로 나열 하고 &lt;code&gt;title&lt;/code&gt; 이있는 각 스타일 시트의 제목을 목록에 추가하여 구성됩니다. . 대소 문자 구분 비교를 사용하여 목록에서 중복이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="d263f9f26ecf473c5a3d74ba8cf9500edc40b3e4" translate="yes" xml:space="preserve">
          <source>The list of constraints specified is empty, or has all constraints set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 제한 조건 목록이 비어 있거나 모든 제한 조건이 &lt;code&gt;false&lt;/code&gt; 로 설정되었습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
