<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="7ed7011a166bb7780337e87818a9da717d8ccd62" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;cache/store&quot;&gt;&lt;code&gt;ActiveSupport::Cache::Store&lt;/code&gt;&lt;/a&gt; for documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb2d19543443075820eea9280dd6ae38c8d4820" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;cache/store&quot;&gt;ActiveSupport::Cache::Store&lt;/a&gt; for documentation.</source>
          <target state="translated">설명서는 &lt;a href=&quot;cache/store&quot;&gt;ActiveSupport :: Cache :: Store&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ad13a44df68c0699a821dc7059b8249c3595098" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;connectionpool#method-i-clear_reloadable_connections-21&quot;&gt;&lt;code&gt;ConnectionPool#clear_reloadable_connections!&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f2ffa19a32978f7bb1611ec965c4bfd666b292" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;connectionpool#method-i-clear_reloadable_connections-21&quot;&gt;ActiveRecord::ConnectionAdapters::ConnectionPool#clear_reloadable_connections!&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;connectionpool#method-i-clear_reloadable_connections-21&quot;&gt;ActiveRecord :: ConnectionAdapters :: ConnectionPool # clear_reloadable_connections를&lt;/a&gt; 참조하십시오 ! 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="228839ab0c4f81e67dc30d9999cc503d4ce389f1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;connectionpool#method-i-flush-21&quot;&gt;&lt;code&gt;ConnectionPool#flush!&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5dbad842f373692d117663296813d26fcb4d20" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;connectionpool#method-i-flush-21&quot;&gt;ActiveRecord::ConnectionAdapters::ConnectionPool#flush!&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;connectionpool#method-i-flush-21&quot;&gt;ActiveRecord :: ConnectionAdapters :: ConnectionPool # flush를&lt;/a&gt; 참조하십시오 ! 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="b2066230443b1e9c38d36886d4b0163224578bd9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dev.mysql.com/doc/mysql-errors/en/server-error-reference.html&quot;&gt;dev.mysql.com/doc/mysql-errors/en/server-error-reference.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab44018f92ce8ac599b8b44df02350e53b2c704" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/error-messages-server.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/error-messages-server.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/error-messages-server.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/error-messages-server.html을&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="e958149ccf5958881ff5d77877f52ea3de66817e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html&quot;&gt;dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html&quot;&gt;dev.mysql.com/doc/refman/8.0/en/optimizer-hints.html&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="13ed78e79c0c49d299113765aab2fbd1d86fb041" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/optimizer-hints.html&quot;&gt;dev.mysql.com/doc/refman/en/optimizer-hints.html&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe1e879e70eaf6bfcb697b2c56e97d1ad96a083" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionMailer/Base.html&quot;&gt;API docs&lt;/a&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionMailer/Base.html&quot;&gt;API 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="07ca273b05f48a4c0c805d1ab6c61b5c0922bea0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-button_to&quot;&gt;the API Documentation for more information&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3244076afbc39fb52288c24e561586bdf32711fd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to&quot;&gt;the API Documentation for more information&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b933887a81fa7e87d4c0164810395275cb8c9839" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;ISO 8601&lt;/a&gt; for more information. This method allows negative parts to be present in pattern. If invalid string is provided, it will raise &lt;code&gt;ActiveSupport::Duration::ISO8601Parser::ParsingError&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601#Durations&quot;&gt;ISO 8601&lt;/a&gt; 을 참조하십시오. 이 방법을 사용하면 네거티브 부분이 패턴으로 나타날 수 있습니다. 유효하지 않은 문자열이 제공되면 &lt;code&gt;ActiveSupport::Duration::ISO8601Parser::ParsingError&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="bdc904363034a3582ab69849c54ecadb11521cae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/flavorjones/loofah&quot;&gt;Loofah&amp;rsquo;s documentation&lt;/a&gt; for more information about defining custom Loofah::Scrubber objects.</source>
          <target state="translated">참조 &lt;a href=&quot;https://github.com/flavorjones/loofah&quot;&gt;수세미의 설명서를&lt;/a&gt; 수세미 :: 스크러버 객체를 사용자 정의에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="e99445babba16a5b1f6b05404210752a02c7d111" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;Rails HTML Sanitizer&lt;/a&gt; for documentation about Rails::Html scrubbers.</source>
          <target state="translated">Rails :: Html 스크러버에 대한 설명서는 &lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;Rails HTML Sanitizer&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="23e97c3b0dfae84b67103ba3a8989aca1e7ebed5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails/issues/26404&quot;&gt;#26404&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rails/rails/issues/26404&quot;&gt;# 26404&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fce6a8160e1fc0d9cbd999e08681f987c35176ec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails/pull/13271&quot;&gt;this pull request&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rails/rails/pull/13271&quot;&gt;이 풀 요청&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="70c9f697db4bafd44d2041b26760f04d57c4ad8e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails/pull/14488&quot;&gt;#14488&lt;/a&gt; and &lt;a href=&quot;https://github.com/rails/rails/pull/16537&quot;&gt;#16537&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rails/rails/pull/14488&quot;&gt;# 14488&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/rails/rails/pull/16537&quot;&gt;# 16537&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9250e3a088add564074fc129eda0805b703a540b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails/pull/16526&quot;&gt;#16526&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rails/rails/pull/16526&quot;&gt;# 16526&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="83649f0cd9172cf95ecb5805d9d34494ebc549e5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails/pull/17227&quot;&gt;#17227&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rails/rails/pull/17227&quot;&gt;# 17227&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c46b893ff56ed8d2ac2a052db7a0bd8a36e8d209" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails/pull/18411&quot;&gt;#18411&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rails/rails/pull/18411&quot;&gt;# 18411&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="acab9b6ec64ceb739987887ab5bdda6c27301682" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/rails/rails/pull/19034&quot;&gt;#19034&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/rails/rails/pull/19034&quot;&gt;# 19034&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2eaa4a6f341fbfde37bf0ad102d977bf1a4ed05d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml&quot;&gt;github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml&lt;/a&gt; for more examples.</source>
          <target state="translated">자세한 예는 &lt;a href=&quot;https://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml&quot;&gt;github.com/svenfuchs/rails-i18n/blob/master/rails/locale/en.yml&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0aa15a1a9108165831d420c655f0cb9301cc4481" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://redis.io/commands/KEYS&quot;&gt;redis.io/commands/KEYS&lt;/a&gt; for more.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://redis.io/commands/KEYS&quot;&gt;redis.io/commands/KEYS&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a03c1f7a3152a85d2e19441504f8ee6bfe6665c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://ruby-concurrency.github.io/concurrent-ruby/master/Concurrent/ThreadPoolExecutor.html&quot;&gt;Concurrent::ThreadPoolExecutor&lt;/a&gt; for executor options.</source>
          <target state="translated">실행기 옵션에 대해서는 &lt;a href=&quot;https://ruby-concurrency.github.io/concurrent-ruby/master/Concurrent/ThreadPoolExecutor.html&quot;&gt;Concurrent :: ThreadPoolExecutor&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3807ec223506f39402d12761b9e81d52bd24e60" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.postgresql.org/docs/current/static/errcodes-appendix.html&quot;&gt;www.postgresql.org/docs/current/static/errcodes-appendix.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/static/errcodes-appendix.html&quot;&gt;www.postgresql.org/docs/current/static/errcodes-appendix.html을&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="7e5d1f7f69896d43ceccdfda28a1a3933ca8808c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.rubydoc.info/github/svenfuchs/i18n/master/I18n/Backend/Base:localize&quot;&gt;www.rubydoc.info/github/svenfuchs/i18n/master/I18n/Backend/Base:localize&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.rubydoc.info/github/svenfuchs/i18n/master/I18n/Backend/Base:localize&quot;&gt;www.rubydoc.info/github/svenfuchs/i18n/master/I18n/Backend/Base:localize&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3869ac68e8b54836621fd04578b4ecd19cc382df" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;module/concerning&quot;&gt;&lt;code&gt;Module::Concerning&lt;/code&gt;&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a037d51b6b8d2322744d094f6597e9b0ce838b42" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;module/concerning&quot;&gt;Module::Concerning&lt;/a&gt; for more.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;module/concerning&quot;&gt;Module :: Concerning&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60fc0e5966ea2e9db8a4074112d3085d16f3702c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;object#method-i-try&quot;&gt;&lt;code&gt;Object#try&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166d73bdd4c40ca1c03a1590ca7083f4b6732255" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;object#method-i-try&quot;&gt;Object#try&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;object#method-i-try&quot;&gt;Object # try&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="cdb2dadac250f35417b8147dce2071a88116a05c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;object#method-i-try-21&quot;&gt;&lt;code&gt;Object#try!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ce7bbbfa6a295278ec983479e5782425a38c55" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;object#method-i-try-21&quot;&gt;Object#try!&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;object#method-i-try-21&quot;&gt;Object # try를&lt;/a&gt; 참조하십시오 !</target>
        </trans-unit>
        <trans-unit id="b16af01bbb93133eb8635b7e956590bf9306d8f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;parameters#method-i-require&quot;&gt;&lt;code&gt;ActionController::Parameters.require&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;parameters#method-i-permit&quot;&gt;&lt;code&gt;ActionController::Parameters.permit&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a006934072c8d7ee50788a557e02d8c1af8eab" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;parameters#method-i-require&quot;&gt;ActionController::Parameters#require&lt;/a&gt; and &lt;a href=&quot;parameters#method-i-permit&quot;&gt;ActionController::Parameters#permit&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;parameters#method-i-require&quot;&gt;ActionController :: Parameters # require&lt;/a&gt; 및 &lt;a href=&quot;parameters#method-i-permit&quot;&gt;ActionController :: Parameters # permit&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e803699c8c9b075833c02acd990b63c9869288ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;querymethods/wherechain&quot;&gt;&lt;code&gt;WhereChain&lt;/code&gt;&lt;/a&gt; for more details on not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60afbd3151e760662d11eeac25751325eef48ee2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;querymethods/wherechain&quot;&gt;WhereChain&lt;/a&gt; for more details on not.</source>
          <target state="translated">&lt;a href=&quot;querymethods/wherechain&quot;&gt;not에&lt;/a&gt; 대한 자세한 내용 은 WhereChain 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eec3418b28d31ca5c18bf79fae3c2189a913b00e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;representable#method-i-preview&quot;&gt;#preview&lt;/a&gt; and &lt;a href=&quot;representable#method-i-variant&quot;&gt;#variant&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;representable#method-i-preview&quot;&gt;#preview&lt;/a&gt; 및 &lt;a href=&quot;representable#method-i-variant&quot;&gt;#variant&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4003c99e4d249184df00a36a8174594b2e0cd661" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;representable#method-i-preview&quot;&gt;&lt;code&gt;ActiveStorage::Blob#preview&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;representable#method-i-variant&quot;&gt;&lt;code&gt;ActiveStorage::Blob#variant&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b405a1b5b1f93de0eb8931c57f72fc2dc4ac30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; for more information on controller response objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a011f781311e4e75cd90ddbfe1165477d1c379" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;response&quot;&gt;Response&lt;/a&gt; for more information on controller response objects.</source>
          <target state="translated">제어기 응답 오브젝트에 대한 자세한 정보는 &lt;a href=&quot;response&quot;&gt;응답&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14b6593cf56a737795cfdc2eaa06674ae5782e37" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-add_check_constraint&quot;&gt;connection.add_check_constraint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e88c627c1027b80e477bc6240f50ba238b6aafc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-add_foreign_key&quot;&gt;connection.add_foreign_key&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-add_foreign_key&quot;&gt;연결을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="045b089ccfc54015819afd33e7cf4cef46e29b05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-add_index&quot;&gt;connection.add_index&lt;/a&gt; for details of the options you can use.</source>
          <target state="translated">사용할 수있는 옵션에 대한 자세한 내용은 &lt;a href=&quot;schemastatements#method-i-add_index&quot;&gt;connection.add_index&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c723026f4d9e7847563f761d3415e4468f0c2e98" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-add_reference&quot;&gt;connection.add_reference&lt;/a&gt; for details of the options you can use.</source>
          <target state="translated">사용할 수있는 옵션에 대한 자세한 내용은 &lt;a href=&quot;schemastatements#method-i-add_reference&quot;&gt;connection.add_reference&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0b018a73bcabc700806e4ad346b432c976b56cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-add_timestamps&quot;&gt;connection.add_timestamps&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-add_timestamps&quot;&gt;connection.add_timestamps를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c0ba3b4c2a7f74ff2c751249ddbd4968f1fd2c91" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-change_column_default&quot;&gt;connection.change_column_default&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-change_column_default&quot;&gt;connection.change_column_default를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2c9990c96165efffb34ac6220ae24520e177e8a1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-change_column_null&quot;&gt;connection.change_column_null&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba14a4a233c6368256f88495854e28e2700accb2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-column_exists-3F&quot;&gt;connection.column_exists?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-column_exists-3F&quot;&gt;connection.column_exists?를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="10131f575c755e3438ea32773962f6571b489731" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-foreign_key_exists-3F&quot;&gt;connection.foreign_key_exists?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-foreign_key_exists-3F&quot;&gt;connection.foreign_key_exists를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="daf423b943b8dec7efb196bd6da76e1dc8f91eea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-index_exists-3F&quot;&gt;connection.index_exists?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-index_exists-3F&quot;&gt;connection.index_exists?를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ba067144d3cf75433eaf3b7ae03f3ac6a5eab2a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-remove_check_constraint&quot;&gt;connection.remove_check_constraint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1f59faf6834d99df1e0db42481dd59336d14aa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-remove_columns&quot;&gt;connection.remove_columns&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-remove_columns&quot;&gt;연결을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="853dd90363e0612f5de4141516305a7a81934890" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-remove_foreign_key&quot;&gt;connection.remove_foreign_key&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-remove_foreign_key&quot;&gt;connection.remove_foreign_key를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="43943f39f0f99fd00553f5020a5482f2203791a3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-remove_index&quot;&gt;connection.remove_index&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-remove_index&quot;&gt;connection.remove_index를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8e63a657bf2d36aefba295853a42ddf411b3e94e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-remove_reference&quot;&gt;connection.remove_reference&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-remove_reference&quot;&gt;연결을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7b8b39dfcfa5a9e042ea0498051575ef317a7f1d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-remove_timestamps&quot;&gt;connection.remove_timestamps&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-remove_timestamps&quot;&gt;connection.remove_timestamps를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2aef82b271b3963aeea783779c4ef68679ef6a14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-rename_column&quot;&gt;connection.rename_column&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-rename_column&quot;&gt;연결을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2143316a125a9ac6230d3faedd29eaac226568d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;schemastatements#method-i-rename_index&quot;&gt;connection.rename_index&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;schemastatements#method-i-rename_index&quot;&gt;연결을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="19b1d9a9efc2f89eb496589c83c666cd3749b703" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;scoping#method-i-namespace&quot;&gt;&lt;code&gt;ActionDispatch::Routing::Mapper::Scoping#namespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8a3c4935a1e0a012f2682c9d6c8fa98d429f87" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;scoping#method-i-namespace&quot;&gt;ActionDispatch::Routing::Mapper::Scoping#namespace&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;scoping#method-i-namespace&quot;&gt;ActionDispatch :: Routing :: Mapper :: Scoping # namespace를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1142689d1a91396e92ff2577aff312ba23867ffa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;&lt;code&gt;TableDefinition#column&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ef0b547ae4ea4330c1d439690fc4ce1af4eecd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;&lt;code&gt;TableDefinition#column&lt;/code&gt;&lt;/a&gt; for details of the options you can use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2266a49ae2bb4b6b796d443b548cfd05144d7a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;ActiveRecord::ConnectionAdapters::TableDefinition#column&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;ActiveRecord :: ConnectionAdapters :: TableDefinition # column을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4db4dcc91af31320e1bde895848fea5e8bfd97b5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;ActiveRecord::ConnectionAdapters::TableDefinition#column&lt;/a&gt; for details of the options you can use.</source>
          <target state="translated">참조 &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;액티브 :: ConnectionAdapters :: TableDefinition # 열&lt;/a&gt; 사용할 수있는 옵션에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="73adb3d3928f89770a2cb152868377f05e80df03" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;transactions/classmethods&quot;&gt;&lt;code&gt;ActiveRecord::Transactions::ClassMethods&lt;/code&gt;&lt;/a&gt; for documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f69f7f20735a5fe44f29d765eeb39ffe2150c4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;transactions/classmethods&quot;&gt;ActiveRecord::Transactions::ClassMethods&lt;/a&gt; for documentation.</source>
          <target state="translated">설명서는 &lt;a href=&quot;transactions/classmethods&quot;&gt;ActiveRecord :: Transactions :: ClassMethods&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94b3df3a5401d580ce645bf321f2b989dc22ab5f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;#find_in&lt;/code&gt; for a list of file extensions that will be taken into account.</source>
          <target state="translated">&lt;code&gt;#find_in&lt;/code&gt; 파일 확장자 목록은 #find_in 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b2f604d4646514550ffc827677c5ccb6d294df92" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;ActionMailbox::Base&lt;/code&gt; for how to specify routing.</source>
          <target state="translated">라우팅을 지정하는 방법 은 &lt;code&gt;ActionMailbox::Base&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9899b8cd4bef6c3109ac53ae06075409e7c6e30e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;ActiveRecord::Inheritance#discriminate_class_for_record&lt;/code&gt; to see how this &amp;ldquo;single-table&amp;rdquo; inheritance mapping is implemented.</source>
          <target state="translated">이 &quot;단일 테이블&quot;상속 매핑이 어떻게 구현되는지 보려면 &lt;code&gt;ActiveRecord::Inheritance#discriminate_class_for_record&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="259babce32a24268d163eb9a39220fd196864ac9" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;ActiveRecord::Persistence#insert_all!&lt;/code&gt; for more.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::Persistence#insert_all!&lt;/code&gt; 참조하십시오 ! 이상.</target>
        </trans-unit>
        <trans-unit id="210456e22171ae05d61d163b6c6278a34ae76e84" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;ActiveRecord::Persistence#insert_all&lt;/code&gt; for documentation.</source>
          <target state="translated">설명서는 &lt;code&gt;ActiveRecord::Persistence#insert_all&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad681a3f14143284084d0a8554cce06b56ac63a0" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;ActiveRecord::Persistence#upsert_all&lt;/code&gt; for documentation.</source>
          <target state="translated">설명서는 &lt;code&gt;ActiveRecord::Persistence#upsert_all&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="df65d6469eb5e814cd16632b2464cf4597fb3ddd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Renderers.add&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Renderers.add&lt;/code&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d1d4b898103318bcf76657d7bf6b911dfb9279d3" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Renderers.remove&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Renderers.remove&lt;/code&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5cb8c70ced9330d62c5420762415e9365f28e4f0" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Responder#api_behavior&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Responder#api_behavior&lt;/code&gt; 참조</target>
        </trans-unit>
        <trans-unit id="2ef31f0d79222b3d816282c2d5058b106a81a57e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Scoping#constraints&lt;/code&gt; for more examples with its scope equivalent.</source>
          <target state="translated">범위가 동등한 추가 예제는 범위 &lt;code&gt;Scoping#constraints&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97cc36b063c561cc5d0bdf767f94f7c192f0cda1" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Scoping#defaults&lt;/code&gt; for its scope equivalent.</source>
          <target state="translated">해당 범위는 &lt;code&gt;Scoping#defaults&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="39954a5afddfa57cd39ac16ae3a7f97a3f010392" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Scoping#namespace&lt;/code&gt; for its scope equivalent.</source>
          <target state="translated">해당 범위는 &lt;code&gt;Scoping#namespace&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c373310d9a51b54b4381c2530fb54e3e5ed2765" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;number_to_human&lt;/code&gt; if you want to pretty-print a generic number.</source>
          <target state="translated">일반 번호를 예쁘게 인쇄하려면 &lt;code&gt;number_to_human&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1735d6264853d6538665f2110b8129e83ee114b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;number_to_human_size&lt;/code&gt; if you want to print a file size.</source>
          <target state="translated">파일 크기를 인쇄하려면 &lt;code&gt;number_to_human_size&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="595415c220b3cf263e5dcc4712682018e5b83881" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;send_file&lt;/code&gt; for more information on HTTP Content-* headers and caching.</source>
          <target state="translated">HTTP Content- * 헤더 및 캐싱에 대한 자세한 정보는 &lt;code&gt;send_file&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6aa9a78101503cc2f3ec9ac538bf92a3c5aa4da0" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;skip_before_action&lt;/code&gt; for allowed options.</source>
          <target state="translated">허용 된 옵션 은 &lt;code&gt;skip_before_action&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5be4634ee752a31d2461bf4f08a714ae8c6ce45" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;start_exclusive&lt;/code&gt; for other options.</source>
          <target state="translated">다른 옵션에 대해서는 &lt;code&gt;start_exclusive&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1b0d29dbdfca9dd32b63c31a977ea4e856fb9c8" translate="yes" xml:space="preserve">
          <source>See RFC 4122 for details of &lt;a href=&quot;uuid&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; at: &lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt;www.ietf.org/rfc/rfc4122.txt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943e08c4f6acb1e3f7e951048628694196a5f5e4" translate="yes" xml:space="preserve">
          <source>See RFC 4122 for details of &lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt; at: &lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt;www.ietf.org/rfc/rfc4122.txt&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt; 에 대한 자세한 내용은 RFC 4122를 참조하십시오 . &lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt;www.ietf.org/rfc/rfc4122.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="602e8e9019bce6e6c6fc4e3a8b5b4ac7c1bb8149" translate="yes" xml:space="preserve">
          <source>See Rack::Utils::SYMBOL_TO_STATUS_CODE for a full list of valid &lt;code&gt;status&lt;/code&gt; symbols.</source>
          <target state="translated">유효한 &lt;code&gt;status&lt;/code&gt; 기호 의 전체 목록은 Rack :: Utils :: SYMBOL_TO_STATUS_CODE를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50893981a6a0571ba24c798b70d81b307665a77d" translate="yes" xml:space="preserve">
          <source>See `READ_QUERY` for the queries that are blocked by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ec0f1f61913ecc69780edd30577183c31ef548" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#autoloading-in-the-test-environment&quot;&gt;Autoloading in the Test Environment&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#autoloading-in-the-test-environment&quot;&gt;테스트 환경에서 자동로드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1af17761f98fb31739d6858dcf55d7dd7a6d033" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;calculations#method-i-ids&quot;&gt;&lt;code&gt;ids&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27f64af6416613b76d02b102d6bba611178bf9d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;calculations#method-i-ids&quot;&gt;ids&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-ids&quot;&gt;ids&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fcfc387e8ece84a6606c8d033fd845becbf67cf" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;inflector#method-i-deconstantize&quot;&gt;&lt;code&gt;deconstantize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4be909ddc91b8d224bbde8721663e7aa928904" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;inflector#method-i-deconstantize&quot;&gt;deconstantize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;inflector#method-i-deconstantize&quot;&gt;deconstantize&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="66c5f0c4523090846a18b6ff785709ee1db5aab4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;inflector#method-i-demodulize&quot;&gt;&lt;code&gt;demodulize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fe671747108f48c8cdddfb8de3872054cda5e3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;inflector#method-i-demodulize&quot;&gt;demodulize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;inflector#method-i-demodulize&quot;&gt;복조&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93fb75239fefb061e10d8608784b342687b0b38e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;table&quot;&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/a&gt; for details on all of the various column transformations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cac18e8af4fc4521087b4cb96067e829044cbd4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;table&quot;&gt;Table&lt;/a&gt; for details on all of the various column transformations.</source>
          <target state="translated">다양한 열 변환에 대한 자세한 내용은 &lt;a href=&quot;table&quot;&gt;표&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="25eeccc029ed8d07bbe7984c6e3e0d7d2ce7172a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;&lt;code&gt;TableDefinition#column&lt;/code&gt;&lt;/a&gt; for details on how to create columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a94632735ea4ca16fcae1bde3ca95b5c877c06" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;ActiveRecord::ConnectionAdapters::TableDefinition#column&lt;/a&gt; for details on how to create columns.</source>
          <target state="translated">&lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;열&lt;/a&gt; 을 만드는 방법에 대한 자세한 내용은 ActiveRecord :: ConnectionAdapters :: TableDefinition # column 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="40f998d0aada16bc27a8d3a12478e9d17f9f02ed" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;deconstantize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;deconstantize&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9677e29c778c6923bbf3cfedd43beb64f5786844" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;demodulize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;demodulize&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="76169a49c26f965b05529d04c490bee0aecf7264" translate="yes" xml:space="preserve">
          <source>See also Instance Public methods below for more details.</source>
          <target state="translated">자세한 내용은 아래의 인스턴스 퍼블릭 메서드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="82b36257b18cee3aa058356e165825cbd0705908" translate="yes" xml:space="preserve">
          <source>See docs on the &lt;a href=&quot;flash/flashhash&quot;&gt;&lt;code&gt;FlashHash&lt;/code&gt;&lt;/a&gt; class for more details about the flash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0acbb0b2953c43baa880528dbf38baeb31a2365" translate="yes" xml:space="preserve">
          <source>See docs on the &lt;a href=&quot;flash/flashhash&quot;&gt;FlashHash&lt;/a&gt; class for more details about the flash.</source>
          <target state="translated">플래시에 대한 자세한 내용은 &lt;a href=&quot;flash/flashhash&quot;&gt;FlashHash&lt;/a&gt; 클래스의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49cec52bec4fb9883b8066666b1f30e1dc9018cb" translate="yes" xml:space="preserve">
          <source>See if error matches provided &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; exactly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c11ce88b6133d8b6844e689042609862d8cce9" translate="yes" xml:space="preserve">
          <source>See if error matches provided &lt;code&gt;attribute&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21738a5a150ea22683bafcdffdeb7b9a80ad5de" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../connectionadapters/databasestatements#method-i-transaction&quot;&gt;&lt;code&gt;ConnectionAdapters::DatabaseStatements#transaction&lt;/code&gt;&lt;/a&gt; API docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b268cf638aa1bccac3babb22f3a90b2b84c326" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../connectionadapters/databasestatements#method-i-transaction&quot;&gt;ActiveRecord::ConnectionAdapters::DatabaseStatements#transaction&lt;/a&gt; API docs.</source>
          <target state="translated">&lt;a href=&quot;../connectionadapters/databasestatements#method-i-transaction&quot;&gt;ActiveRecord :: ConnectionAdapters :: DatabaseStatements # transaction&lt;/a&gt; API 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9057e34e860a767d752644a7187fb9ab99d87ea6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/rails/actioncable-examples&quot;&gt;rails/actioncable-examples&lt;/a&gt; repository for a full example of how to set up Action Cable in a Rails app and adding channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9954b16661558732d03bc7aef1c6ae303b83f9d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/rails/actioncable-examples&quot;&gt;rails/actioncable-examples&lt;/a&gt; repository for a full example of how to setup Action Cable in a Rails app and adding channels.</source>
          <target state="translated">Rails 앱에서 액션 케이블을 설정하고 채널을 추가하는 방법에 대한 전체 &lt;a href=&quot;https://github.com/rails/actioncable-examples&quot;&gt;예제&lt;/a&gt; 는 rails / actioncable-examples 저장소를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="477eee6cfce34f1286c24228fe18deaa9750916c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/rails/jbuilder#jbuilder&quot;&gt;Jbuilder documentation&lt;/a&gt; for more examples and information.</source>
          <target state="translated">더 많은 예제와 정보 는 &lt;a href=&quot;https://github.com/rails/jbuilder#jbuilder&quot;&gt;Jbuilder 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="56346ec70401ff79b272d138d974a8d678eb8d41" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://www.rubydoc.info/github/mperham/dalli/Dalli%2FClient:initialize&quot;&gt;&lt;code&gt;Dalli::Client&lt;/code&gt; documentation&lt;/a&gt; for supported address types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4fad17c0a6284db99bfe817f5b890c54e56b60" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;integration/requesthelpers&quot;&gt;request helpers documentation&lt;/a&gt; for help on how to use &lt;code&gt;get&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 등의 사용법에 대한 도움말 은 &lt;a href=&quot;integration/requesthelpers&quot;&gt;요청 헬퍼 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c6bbcfc8d528f28f96dd9bf7986387c615a6f58" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;rails_on_rack#internal-middleware-stack&quot;&gt;internal middleware&lt;/a&gt; section of the Rack guide for further information on them.</source>
          <target state="translated">이에 대한 자세한 내용은 랙 안내서 의 &lt;a href=&quot;rails_on_rack#internal-middleware-stack&quot;&gt;내부 미들웨어&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="afe7f1cf96e5e0cafda12b2520b517810c6ad325" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;ActiveSupport::MessageVerifier&lt;/code&gt; documentation for more information.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;ActiveSupport::MessageVerifier&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ae9cf5568da42e8719fce0efa6b7648147a806d7" translate="yes" xml:space="preserve">
          <source>See the API documentation for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Channel/TestCase.html&quot;&gt;&lt;code&gt;ActionCable::Channel::TestCase&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Channel/TestCase.html&quot;&gt; &lt;code&gt;ActionCable::Channel::TestCase&lt;/code&gt; &lt;/a&gt; 대한 API 문서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d345a0dc46bcddeb43dcca2b0d81ff0f080897c5" translate="yes" xml:space="preserve">
          <source>See the API documentation for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Connection/TestCase.html&quot;&gt;&lt;code&gt;ActionCable::Connection::TestCase&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Connection/TestCase.html&quot;&gt; &lt;code&gt;ActionCable::Connection::TestCase&lt;/code&gt; &lt;/a&gt; 대한 API 문서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0c3601c0fd59deb6f819c18ff8bffccc4e09bb20" translate="yes" xml:space="preserve">
          <source>See the docs for the &lt;code&gt;ActionView::FormHelper.fields&lt;/code&gt; helper method.</source>
          <target state="translated">&lt;code&gt;ActionView::FormHelper.fields&lt;/code&gt; 도우미 메소드에 대한 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e3eda24966bd38a97a0171d3fbb38189dcbbf72" translate="yes" xml:space="preserve">
          <source>See the following:</source>
          <target state="translated">다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="405a4961d6ba07927cf24343e5fadb0b00f7716d" translate="yes" xml:space="preserve">
          <source>See the mapping rules in table_name and the full example in files/activerecord/README_rdoc.html for more insight.</source>
          <target state="translated">자세한 내용은 table_name의 매핑 규칙과 files / activerecord / README_rdoc.html의 전체 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="258dbfcb17b67a6be0d5970257f02ceda38c9ec0" translate="yes" xml:space="preserve">
          <source>See usage and options by asking for help:</source>
          <target state="translated">도움을 요청하여 사용법 및 옵션을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a3560fcd7315a9b42450432fe765eb73fcde64ad" translate="yes" xml:space="preserve">
          <source>Segment Constraints</source>
          <target state="translated">세그먼트 제약</target>
        </trans-unit>
        <trans-unit id="21710959a1a08ed755e427479e3010f656d7a56b" translate="yes" xml:space="preserve">
          <source>Select Boxes and Model Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3333988ab98c2379833024bcdb9a975209b35def" translate="yes" xml:space="preserve">
          <source>Select Boxes for Dealing with Model Objects</source>
          <target state="translated">모델 객체 다루기위한 선택 상자</target>
        </trans-unit>
        <trans-unit id="0e404e192c705be2126a673b610acaf05286d0de" translate="yes" xml:space="preserve">
          <source>Select Boxes for Individual Temporal Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95dd0a3408c740446e7ea929f86b28c1ecef45e" translate="yes" xml:space="preserve">
          <source>Select boxes in HTML require a significant amount of markup (one &lt;code&gt;OPTION&lt;/code&gt; element for each option to choose from), therefore it makes the most sense for them to be dynamically generated.</source>
          <target state="translated">HTML의 선택 상자에는 상당한 양의 마크 업 ( 각 옵션마다 선택할 수있는 &lt;code&gt;OPTION&lt;/code&gt; 요소)이 필요하므로 동적으로 생성되는 것이 가장 적합합니다.</target>
        </trans-unit>
        <trans-unit id="d6f9fe3e0c56483cd241d75d924953378662717c" translate="yes" xml:space="preserve">
          <source>Select boxes in HTML require a significant amount of markup - one &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element for each option to choose from. So Rails provides helper methods to reduce this burden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3aa667a05e710a067baef08aff72b4bae9af41" translate="yes" xml:space="preserve">
          <source>Selecting Specific Fields</source>
          <target state="translated">특정 필드 선택</target>
        </trans-unit>
        <trans-unit id="2b4b48487d727d1f0867f15971831f9ddbd2ac3e" translate="yes" xml:space="preserve">
          <source>Self Joins</source>
          <target state="translated">자체 조인</target>
        </trans-unit>
        <trans-unit id="3123b69c254772aae0e2c419932d71ec872b4c07" translate="yes" xml:space="preserve">
          <source>Send a finish notification with &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;payload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;payload&lt;/code&gt; 가 포함 된 완료 알림을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9a8bca73fd79db4c31f8ea2ca1befed7482c3847" translate="yes" xml:space="preserve">
          <source>Send a start notification with &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;payload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;payload&lt;/code&gt; 로 시작 알림을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="b7ee52047606a0fdde560b86d89e677b7bc0a111" translate="yes" xml:space="preserve">
          <source>Send the file stored at &lt;code&gt;path&lt;/code&gt; as the response body.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 저장된 파일을 응답 본문으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="02aeda1fbc54ad57d4edbdedae20b974cf9c1400" translate="yes" xml:space="preserve">
          <source>Send the missing method to &lt;code&gt;time&lt;/code&gt; instance, and wrap result in a new &lt;a href=&quot;timewithzone&quot;&gt;&lt;code&gt;TimeWithZone&lt;/code&gt;&lt;/a&gt; with the existing &lt;code&gt;time_zone&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb16f33ed701221ac151bf04d6d72db917aaf500" translate="yes" xml:space="preserve">
          <source>Send the missing method to &lt;code&gt;time&lt;/code&gt; instance, and wrap result in a new &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; with the existing &lt;code&gt;time_zone&lt;/code&gt;.</source>
          <target state="translated">누락 된 메소드를 &lt;code&gt;time&lt;/code&gt; 인스턴스로 전송하고 기존 &lt;code&gt;time_zone&lt;/code&gt; 으로 새 &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; 으로 결과를 랩핑 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fbef9bd60e793c768cb13c835edd22d428f5422" translate="yes" xml:space="preserve">
          <source>SendGrid</source>
          <target state="translated">SendGrid</target>
        </trans-unit>
        <trans-unit id="671a6fc1bffae1273f1c36845d96724d0463b25c" translate="yes" xml:space="preserve">
          <source>Sending Emails</source>
          <target state="translated">이메일 보내기</target>
        </trans-unit>
        <trans-unit id="023bd64921fc5c4ca44aad85331543272477b4fb" translate="yes" xml:space="preserve">
          <source>Sending Emails with Dynamic Delivery Options</source>
          <target state="translated">동적 전달 옵션을 사용하여 이메일 보내기</target>
        </trans-unit>
        <trans-unit id="2dfd5dc62ac40b04320f91e24d72a02dd4b87d2d" translate="yes" xml:space="preserve">
          <source>Sending Emails without Template Rendering</source>
          <target state="translated">템플릿 렌더링없이 이메일 보내기</target>
        </trans-unit>
        <trans-unit id="f6af644a6a47122fee8047cd0a0ca4042f66564f" translate="yes" xml:space="preserve">
          <source>Sending Files</source>
          <target state="translated">파일 보내기</target>
        </trans-unit>
        <trans-unit id="f0662ea4ce2ba05b7f07ad1199c4b10caa58025d" translate="yes" xml:space="preserve">
          <source>Sending Messages</source>
          <target state="translated">메시지 보내기</target>
        </trans-unit>
        <trans-unit id="304904f7f73f8740fbf7551b8629fe5a710c6942" translate="yes" xml:space="preserve">
          <source>Sending Multipart Emails</source>
          <target state="translated">멀티 파트 이메일 전송</target>
        </trans-unit>
        <trans-unit id="e734bc1dc9c526b52a0a7b9eb2e199e81edc474a" translate="yes" xml:space="preserve">
          <source>Sending attachment in emails is easy:</source>
          <target state="translated">이메일로 첨부 파일을 보내는 것은 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="5eb5279fa870f46ef7f94665716a33ad74791933" translate="yes" xml:space="preserve">
          <source>Sending mail</source>
          <target state="translated">메일 보내기</target>
        </trans-unit>
        <trans-unit id="642a2f883f79a5c6fe862403a6bd06c6035adf87" translate="yes" xml:space="preserve">
          <source>Sends any console called in the instance of a new application up to the &lt;code&gt;console&lt;/code&gt; method defined in &lt;a href=&quot;railtie&quot;&gt;&lt;code&gt;Rails::Railtie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467de7aa4f29de633fe149fbdd34d2b0a8e517b2" translate="yes" xml:space="preserve">
          <source>Sends any console called in the instance of a new application up to the &lt;code&gt;console&lt;/code&gt; method defined in &lt;a href=&quot;railtie&quot;&gt;Rails::Railtie&lt;/a&gt;.</source>
          <target state="translated">새 응용 프로그램의 인스턴스에서 호출 된 &lt;code&gt;console&lt;/code&gt; 을 &lt;a href=&quot;railtie&quot;&gt;Rails :: Railtie에&lt;/a&gt; 정의 된 콘솔 메소드로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="be9c9ad312b75ef542ee7b10bb8b1d635926e8b7" translate="yes" xml:space="preserve">
          <source>Sends any generators called in the instance of a new application up to the &lt;code&gt;generators&lt;/code&gt; method defined in &lt;a href=&quot;railtie&quot;&gt;&lt;code&gt;Rails::Railtie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9b15e619e28b361cdd6a2c2584f870ccc42501" translate="yes" xml:space="preserve">
          <source>Sends any generators called in the instance of a new application up to the &lt;code&gt;generators&lt;/code&gt; method defined in &lt;a href=&quot;railtie&quot;&gt;Rails::Railtie&lt;/a&gt;.</source>
          <target state="translated">새 응용 프로그램의 인스턴스에서 호출 된 &lt;code&gt;generators&lt;/code&gt; 를 &lt;a href=&quot;railtie&quot;&gt;Rails :: Railtie에&lt;/a&gt; 정의 된 생성기 메서드 까지 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="5cfffb6cb2cef80593cf5facf2bd654c42f94069" translate="yes" xml:space="preserve">
          <source>Sends any runner called in the instance of a new application up to the &lt;code&gt;runner&lt;/code&gt; method defined in &lt;a href=&quot;railtie&quot;&gt;&lt;code&gt;Rails::Railtie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac34d16783936b238c687d91017978a8f8aff7b6" translate="yes" xml:space="preserve">
          <source>Sends any runner called in the instance of a new application up to the &lt;code&gt;runner&lt;/code&gt; method defined in &lt;a href=&quot;railtie&quot;&gt;Rails::Railtie&lt;/a&gt;.</source>
          <target state="translated">새 응용 프로그램의 인스턴스에서 호출 된 &lt;code&gt;runner&lt;/code&gt; 를 &lt;a href=&quot;railtie&quot;&gt;Rails :: Railtie에&lt;/a&gt; 정의 된 러너 메소드 까지 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="9dd390e8f5d85d063c93630d19dc36d46d7d477e" translate="yes" xml:space="preserve">
          <source>Sends any server called in the instance of a new application up to the &lt;code&gt;server&lt;/code&gt; method defined in &lt;a href=&quot;railtie&quot;&gt;&lt;code&gt;Rails::Railtie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7050a5a843fe296d26e1728ab01e9c4843fdff" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;isolate_namespace&lt;/code&gt; method up to the class method.</source>
          <target state="translated">&lt;code&gt;isolate_namespace&lt;/code&gt; 메소드를 클래스 메소드로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="af1acda14951ddcc3c4bf533c51e0650f733ca10" translate="yes" xml:space="preserve">
          <source>Sends the file. This uses a server-appropriate method (such as X-Sendfile) via the Rack::Sendfile middleware. The header to use is set via &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt;. Your server can also configure this for you by setting the X-Sendfile-Type header.</source>
          <target state="translated">파일을 보냅니다. Rack :: Sendfile 미들웨어를 통해 서버에 적합한 방법 (예 : X-Sendfile)을 사용합니다. 사용할 헤더는 &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; 를 통해 설정됩니다 . 서버는 X-Sendfile-Type 헤더를 설정하여이를 대신 구성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c81acedd1636118272244a9174c66bfd04e9807" translate="yes" xml:space="preserve">
          <source>Sends the given binary data to the browser. This method is similar to &lt;code&gt;render plain: data&lt;/code&gt;, but also allows you to specify whether the browser should display the response as a file attachment (i.e. in a download dialog) or as inline data. You may also set the content type, the file name, and other things.</source>
          <target state="translated">주어진 이진 데이터를 브라우저로 보냅니다. 이 방법은 &lt;code&gt;render plain: data&lt;/code&gt; 과 유사 하지만 브라우저가 응답을 파일 첨부 (예 : 다운로드 대화 상자) 또는 인라인 데이터로 표시해야하는지 여부를 지정할 수도 있습니다. 컨텐츠 유형, 파일 이름 및 기타 사항을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1086e23e5f75e1a40c0f494c0ce7e5160d2700a0" translate="yes" xml:space="preserve">
          <source>Sends the initializers to the &lt;code&gt;initializer&lt;/code&gt; method defined in the &lt;code&gt;Rails::Initializable&lt;/code&gt; module. Each &lt;a href=&quot;application&quot;&gt;&lt;code&gt;Rails::Application&lt;/code&gt;&lt;/a&gt; class has its own set of initializers, as defined by the &lt;code&gt;Initializable&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640bb98208eb306a7d289fd8a5accd0f8959703a" translate="yes" xml:space="preserve">
          <source>Sends the initializers to the &lt;code&gt;initializer&lt;/code&gt; method defined in the Rails::Initializable module. Each &lt;a href=&quot;application&quot;&gt;Rails::Application&lt;/a&gt; class has its own set of initializers, as defined by the Initializable module.</source>
          <target state="translated">이니셜 라이저를 Rails :: Initializable 모듈에 정의 된 &lt;code&gt;initializer&lt;/code&gt; 메소드 로 보냅니다 . 각 &lt;a href=&quot;application&quot;&gt;Rails :: Application&lt;/a&gt; 클래스에는 Initializable 모듈에서 정의한대로 자체 이니셜 라이저 세트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="32c54a430fd5867681ac3eacaedd80815466ce8a" translate="yes" xml:space="preserve">
          <source>Separate Assets &amp;amp; Precompiling</source>
          <target state="translated">별도의 자산 및 사전 컴파일</target>
        </trans-unit>
        <trans-unit id="9e94bc65c82b9cd9b6cb8b8d42f682ad6779d6cc" translate="yes" xml:space="preserve">
          <source>Separate Assets and Precompiling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89282363da677473acdbf45f0831bde9f4d3b6c4" translate="yes" xml:space="preserve">
          <source>Serialization</source>
          <target state="translated">Serialization</target>
        </trans-unit>
        <trans-unit id="1ae9ec4f94fc1e332a7d794875aa89d6263a49d8" translate="yes" xml:space="preserve">
          <source>Serialization#serializable_hash</source>
          <target state="translated">Serialization#serializable_hash</target>
        </trans-unit>
        <trans-unit id="34f34cc81f01b9046f28247b46d6ae928812b3ac" translate="yes" xml:space="preserve">
          <source>Serialized attributes</source>
          <target state="translated">직렬화 된 속성</target>
        </trans-unit>
        <trans-unit id="71796031218483adb9338df6ac1fe8ad1217e178" translate="yes" xml:space="preserve">
          <source>Serializers</source>
          <target state="translated">Serializers</target>
        </trans-unit>
        <trans-unit id="acd97503c1e742c5b2e7d5aa81efbf87413f746e" translate="yes" xml:space="preserve">
          <source>Serializers::JSON</source>
          <target state="translated">Serializers::JSON</target>
        </trans-unit>
        <trans-unit id="30c0ab84f370070d666699e1db35fc2149c216dc" translate="yes" xml:space="preserve">
          <source>Serializers::JSON#as_json</source>
          <target state="translated">Serializers::JSON#as_json</target>
        </trans-unit>
        <trans-unit id="303c7351e4bd1391578d307fbea6d4c90cf9b38a" translate="yes" xml:space="preserve">
          <source>Serializers::JSON#from_json</source>
          <target state="translated">Serializers::JSON#from_json</target>
        </trans-unit>
        <trans-unit id="1849bed613c75cec7dca36bee73720387ffdf24d" translate="yes" xml:space="preserve">
          <source>Serializers::ObjectSerializer</source>
          <target state="translated">Serializers::ObjectSerializer</target>
        </trans-unit>
        <trans-unit id="b3668e0a5cc2b2656066a5b4ed9d32727b0317c3" translate="yes" xml:space="preserve">
          <source>Serializers::ObjectSerializer#deserialize</source>
          <target state="translated">Serializers::ObjectSerializer#deserialize</target>
        </trans-unit>
        <trans-unit id="1043ee33db4467019debc8d2d3a0fd43113332a0" translate="yes" xml:space="preserve">
          <source>Serializers::ObjectSerializer#klass</source>
          <target state="translated">Serializers::ObjectSerializer#klass</target>
        </trans-unit>
        <trans-unit id="99feeeaacf0633dec4e751a1e629a8b07537e79e" translate="yes" xml:space="preserve">
          <source>Serializers::ObjectSerializer#serialize</source>
          <target state="translated">Serializers::ObjectSerializer#serialize</target>
        </trans-unit>
        <trans-unit id="9c203425b666d0cfc0e5ca8bff856911b5b12995" translate="yes" xml:space="preserve">
          <source>Serializers::ObjectSerializer#serialize?</source>
          <target state="translated">Serializers::ObjectSerializer#serialize?</target>
        </trans-unit>
        <trans-unit id="eb78dcf3dc299d68ee53c9d82c9d55a1e45b4167" translate="yes" xml:space="preserve">
          <source>Serializes a set of arguments. Intrinsic types that can safely be serialized without mutation are returned as-is. Arrays/Hashes are serialized element by element. All other types are serialized using GlobalID.</source>
          <target state="translated">인수 세트를 직렬화합니다. 돌연변이없이 안전하게 직렬화 할 수있는 내장 유형은 그대로 반환됩니다. 배열 / 해시는 요소별로 직렬화됩니다. 다른 모든 유형은 GlobalID를 사용하여 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="bdb11f87a4accfd6fc8cbd58291c823022552a4c" translate="yes" xml:space="preserve">
          <source>Serializes an argument to a JSON primitive type.</source>
          <target state="translated">인수를 JSON 기본 유형으로 직렬화합니다.</target>
        </trans-unit>
        <trans-unit id="72f2430598d5549c9e09ff4be134b465d4f2de95" translate="yes" xml:space="preserve">
          <source>Serializes the relation objects &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8391ce7046294d29680eaa5499f32752db78fe" translate="yes" xml:space="preserve">
          <source>Serializes the relation objects &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;.</source>
          <target state="translated">관계형 객체 &lt;a href=&quot;../array&quot;&gt;Array를&lt;/a&gt; 직렬화합니다 .</target>
        </trans-unit>
        <trans-unit id="89acb0a24aa1942f438c0a5b34d614c969e757bb" translate="yes" xml:space="preserve">
          <source>Server-Side Components</source>
          <target state="translated">서버 측 구성 요소</target>
        </trans-unit>
        <trans-unit id="05508b9c507ab98e227d02216c9bc8b51e920da1" translate="yes" xml:space="preserve">
          <source>Server-Side Concerns</source>
          <target state="translated">서버 측 문제</target>
        </trans-unit>
        <trans-unit id="230bddf618c88e66eb0f729f912f688ccbb1e384" translate="yes" xml:space="preserve">
          <source>Server::Base</source>
          <target state="translated">Server::Base</target>
        </trans-unit>
        <trans-unit id="675d63c3e91d3fdf37c5e158ddcc4c166911ed99" translate="yes" xml:space="preserve">
          <source>Server::Base#call</source>
          <target state="translated">Server::Base#call</target>
        </trans-unit>
        <trans-unit id="5af9fdc915a1f584d157d94b3b2bdd0292f72820" translate="yes" xml:space="preserve">
          <source>Server::Base#config</source>
          <target state="translated">Server::Base#config</target>
        </trans-unit>
        <trans-unit id="a25bc12894eb81674c9b6868bee6759e60a2319f" translate="yes" xml:space="preserve">
          <source>Server::Base#connection_identifiers</source>
          <target state="translated">Server::Base#connection_identifiers</target>
        </trans-unit>
        <trans-unit id="8d94a44ccc89b9583bf94c7ef4137e9540de6cc3" translate="yes" xml:space="preserve">
          <source>Server::Base#disconnect</source>
          <target state="translated">Server::Base#disconnect</target>
        </trans-unit>
        <trans-unit id="47a4d996d07b7b4f2de14dc1caf1c706ecffb97b" translate="yes" xml:space="preserve">
          <source>Server::Base#event_loop</source>
          <target state="translated">Server::Base#event_loop</target>
        </trans-unit>
        <trans-unit id="b2e792721f7f694c114f8f742714bed08f8fc2e9" translate="yes" xml:space="preserve">
          <source>Server::Base#mutex</source>
          <target state="translated">Server::Base#mutex</target>
        </trans-unit>
        <trans-unit id="3b436db3bbb2cf8cd52e628ff6fb1a53b5527788" translate="yes" xml:space="preserve">
          <source>Server::Base#pubsub</source>
          <target state="translated">Server::Base#pubsub</target>
        </trans-unit>
        <trans-unit id="a41f314a47ee47a818afeeb4c19d66048eb11b31" translate="yes" xml:space="preserve">
          <source>Server::Base#remote_connections</source>
          <target state="translated">Server::Base#remote_connections</target>
        </trans-unit>
        <trans-unit id="99e13735645f13e2a1673643196ea4f731672bdc" translate="yes" xml:space="preserve">
          <source>Server::Base#restart</source>
          <target state="translated">Server::Base#restart</target>
        </trans-unit>
        <trans-unit id="379c8b216409b8072990a3433cb3217845c18031" translate="yes" xml:space="preserve">
          <source>Server::Base#worker_pool</source>
          <target state="translated">Server::Base#worker_pool</target>
        </trans-unit>
        <trans-unit id="15c8ed630a13912a350e23e63cd1fe7fba5c0178" translate="yes" xml:space="preserve">
          <source>Server::Base::logger</source>
          <target state="translated">Server::Base::logger</target>
        </trans-unit>
        <trans-unit id="9f50a05ea543dd8fc050de3ff769e4a53b557b06" translate="yes" xml:space="preserve">
          <source>Server::Base::new</source>
          <target state="translated">Server::Base::new</target>
        </trans-unit>
        <trans-unit id="ab25bf4c1d566022f1fe3cd5f000147d3f6f7395" translate="yes" xml:space="preserve">
          <source>Server::Broadcasting</source>
          <target state="translated">Server::Broadcasting</target>
        </trans-unit>
        <trans-unit id="6eb5134fd42a2df2cce38e2f8c4d05c80c3c5134" translate="yes" xml:space="preserve">
          <source>Server::Broadcasting#broadcast</source>
          <target state="translated">Server::Broadcasting#broadcast</target>
        </trans-unit>
        <trans-unit id="3615c614c22da3258f6c84736e997e8f5dd2dc69" translate="yes" xml:space="preserve">
          <source>Server::Broadcasting#broadcaster_for</source>
          <target state="translated">Server::Broadcasting#broadcaster_for</target>
        </trans-unit>
        <trans-unit id="6226fbda7901428652ab04f2eff2cb6ae2e7b21b" translate="yes" xml:space="preserve">
          <source>Server::Configuration</source>
          <target state="translated">Server::Configuration</target>
        </trans-unit>
        <trans-unit id="e706678bc0db21ca998ebba711b190bdd381368f" translate="yes" xml:space="preserve">
          <source>Server::Configuration#allow_same_origin_as_host</source>
          <target state="translated">Server::Configuration#allow_same_origin_as_host</target>
        </trans-unit>
        <trans-unit id="223acb0822a7d4341675598caa907c88ea24a3a2" translate="yes" xml:space="preserve">
          <source>Server::Configuration#allowed_request_origins</source>
          <target state="translated">Server::Configuration#allowed_request_origins</target>
        </trans-unit>
        <trans-unit id="73e8e82097487faac95160e531d4532d8479f361" translate="yes" xml:space="preserve">
          <source>Server::Configuration#cable</source>
          <target state="translated">Server::Configuration#cable</target>
        </trans-unit>
        <trans-unit id="3ee53f6850ef15b56677061887f27b661d8c344c" translate="yes" xml:space="preserve">
          <source>Server::Configuration#connection_class</source>
          <target state="translated">Server::Configuration#connection_class</target>
        </trans-unit>
        <trans-unit id="db710c595731563bc94e0468a51bd60cc0224d2e" translate="yes" xml:space="preserve">
          <source>Server::Configuration#disable_request_forgery_protection</source>
          <target state="translated">Server::Configuration#disable_request_forgery_protection</target>
        </trans-unit>
        <trans-unit id="19c59da7bd903ccd8b3aedd4045675c1b1f65021" translate="yes" xml:space="preserve">
          <source>Server::Configuration#log_tags</source>
          <target state="translated">Server::Configuration#log_tags</target>
        </trans-unit>
        <trans-unit id="7ea82da6c1ec4eec6c708889a4cd29b3ee2fdef4" translate="yes" xml:space="preserve">
          <source>Server::Configuration#logger</source>
          <target state="translated">Server::Configuration#logger</target>
        </trans-unit>
        <trans-unit id="04e04a2aeb3193f5eee13b357b938e8473e85bf5" translate="yes" xml:space="preserve">
          <source>Server::Configuration#mount_path</source>
          <target state="translated">Server::Configuration#mount_path</target>
        </trans-unit>
        <trans-unit id="7474c8ab89a79f788ed5579e19854b5009881e9d" translate="yes" xml:space="preserve">
          <source>Server::Configuration#pubsub_adapter</source>
          <target state="translated">Server::Configuration#pubsub_adapter</target>
        </trans-unit>
        <trans-unit id="a9dcfe888b92a19ee6f736a9ae54f2222c92c870" translate="yes" xml:space="preserve">
          <source>Server::Configuration#url</source>
          <target state="translated">Server::Configuration#url</target>
        </trans-unit>
        <trans-unit id="f34b6f10a0329e094a5fe53d4350b33ae709cda9" translate="yes" xml:space="preserve">
          <source>Server::Configuration#worker_pool_size</source>
          <target state="translated">Server::Configuration#worker_pool_size</target>
        </trans-unit>
        <trans-unit id="db741d9598fbfbf542cd90d6057123200b42a224" translate="yes" xml:space="preserve">
          <source>Server::Configuration::new</source>
          <target state="translated">Server::Configuration::new</target>
        </trans-unit>
        <trans-unit id="363af81ea36073e2766ddb0af600e4a1ec64b6b2" translate="yes" xml:space="preserve">
          <source>Serves files stored with the disk service in the same way that the cloud services do. This means using expiring, signed URLs that are meant for immediate access, not permanent linking. Always go through the BlobsController, or your own authenticated controller, rather than directly to the service URL.</source>
          <target state="translated">클라우드 서비스와 동일한 방식으로 디스크 서비스에 저장된 파일을 제공합니다. 이는 영구 링크가 아니라 즉시 액세스 할 수 있도록 만료되고 서명 된 URL을 사용함을 의미합니다. 항상 서비스 URL로 직접 이동하지 않고 BlobsController 또는 자체 인증 된 컨트롤러를 통과하십시오.</target>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">Service</target>
        </trans-unit>
        <trans-unit id="ae89b1f741ac41b119455f4c1a5a2ba3a3de0c73" translate="yes" xml:space="preserve">
          <source>Service#delete</source>
          <target state="translated">Service#delete</target>
        </trans-unit>
        <trans-unit id="ec1663415aa13d972538ba4c5c7aa48a6d182471" translate="yes" xml:space="preserve">
          <source>Service#delete_prefixed</source>
          <target state="translated">Service#delete_prefixed</target>
        </trans-unit>
        <trans-unit id="ff81205faef92fb9d46b21b668fbab38f15473a5" translate="yes" xml:space="preserve">
          <source>Service#download</source>
          <target state="translated">Service#download</target>
        </trans-unit>
        <trans-unit id="246922ed0a48d4e50cd6f5e1b60fe4cf92c2504a" translate="yes" xml:space="preserve">
          <source>Service#download_chunk</source>
          <target state="translated">Service#download_chunk</target>
        </trans-unit>
        <trans-unit id="877d28c6ada6b1b8a8d802885a0bca39655c185a" translate="yes" xml:space="preserve">
          <source>Service#exist?</source>
          <target state="translated">Service#exist?</target>
        </trans-unit>
        <trans-unit id="63e87b05efde6e85ea7cb420efe6b49cea676f6b" translate="yes" xml:space="preserve">
          <source>Service#headers_for_direct_upload</source>
          <target state="translated">Service#headers_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="72cf59d445e2150b1795af7de737f8d572222b76" translate="yes" xml:space="preserve">
          <source>Service#open</source>
          <target state="translated">Service#open</target>
        </trans-unit>
        <trans-unit id="5f856e199173f3a396690642df3dc375994c1bc9" translate="yes" xml:space="preserve">
          <source>Service#update_metadata</source>
          <target state="translated">Service#update_metadata</target>
        </trans-unit>
        <trans-unit id="646a2ad2e3cc8df225f4043cd43e572a20260844" translate="yes" xml:space="preserve">
          <source>Service#upload</source>
          <target state="translated">Service#upload</target>
        </trans-unit>
        <trans-unit id="8357f534dc4ea6bb70a265bb7d51ad17b943289b" translate="yes" xml:space="preserve">
          <source>Service#url</source>
          <target state="translated">Service#url</target>
        </trans-unit>
        <trans-unit id="af9244e475a52530d906c40bfe1c0d38fc8b6afd" translate="yes" xml:space="preserve">
          <source>Service#url_for_direct_upload</source>
          <target state="translated">Service#url_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="f5c7d4e45ab8fee9744696f284ea29a914e156f5" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService</source>
          <target state="translated">Service::AzureStorageService</target>
        </trans-unit>
        <trans-unit id="f5306362af5aad495e157ef11dfcbe7b3b48a3e1" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#blobs</source>
          <target state="translated">Service::AzureStorageService#blobs</target>
        </trans-unit>
        <trans-unit id="39accd17cef34ecbed9d437743cce771c389549e" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#client</source>
          <target state="translated">Service::AzureStorageService#client</target>
        </trans-unit>
        <trans-unit id="59e16f07c8d882f243df9e25ec18e660cd2a91b9" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#container</source>
          <target state="translated">Service::AzureStorageService#container</target>
        </trans-unit>
        <trans-unit id="c233c907f77bb362142284184cffd76cec782db7" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#delete</source>
          <target state="translated">Service::AzureStorageService#delete</target>
        </trans-unit>
        <trans-unit id="6652802b59e13d38b62cbe34c7ec58456c61b6e2" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#delete_prefixed</source>
          <target state="translated">Service::AzureStorageService#delete_prefixed</target>
        </trans-unit>
        <trans-unit id="c1560d7a4c750bfef0efb0edda1c64ca65bd86b0" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#download</source>
          <target state="translated">Service::AzureStorageService#download</target>
        </trans-unit>
        <trans-unit id="33168e1a448d53fed56de91f991775e429eede6b" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#download_chunk</source>
          <target state="translated">Service::AzureStorageService#download_chunk</target>
        </trans-unit>
        <trans-unit id="63a10ac54a528ba1f9fa57e7a8a71b7d16cd85d5" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#exist?</source>
          <target state="translated">Service::AzureStorageService#exist?</target>
        </trans-unit>
        <trans-unit id="16ec2f6c65e27f8f2f5d22da54b95f2aa7192928" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#headers_for_direct_upload</source>
          <target state="translated">Service::AzureStorageService#headers_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="582b5711e3665a270d78d7a4799b0e81d22ea53e" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#signer</source>
          <target state="translated">Service::AzureStorageService#signer</target>
        </trans-unit>
        <trans-unit id="dce1a6e7a9a1d31b1657da1871ab757e10406742" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#upload</source>
          <target state="translated">Service::AzureStorageService#upload</target>
        </trans-unit>
        <trans-unit id="c8e793fc629e863a2bcd9fcb2d2f7546d8163baf" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#url</source>
          <target state="translated">Service::AzureStorageService#url</target>
        </trans-unit>
        <trans-unit id="a629313467ab461033ab18893297c624908d5d6e" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService#url_for_direct_upload</source>
          <target state="translated">Service::AzureStorageService#url_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="556ed5bcd82c70836e2b6295d80aa5769eb308d7" translate="yes" xml:space="preserve">
          <source>Service::AzureStorageService::new</source>
          <target state="translated">Service::AzureStorageService::new</target>
        </trans-unit>
        <trans-unit id="3360be5212ed8c07fbdbbb06974e77b5314ec1f8" translate="yes" xml:space="preserve">
          <source>Service::DiskService</source>
          <target state="translated">Service::DiskService</target>
        </trans-unit>
        <trans-unit id="1d61ecb44ab74340dae4ebb7f1ed6df50d0ceef4" translate="yes" xml:space="preserve">
          <source>Service::DiskService#delete</source>
          <target state="translated">Service::DiskService#delete</target>
        </trans-unit>
        <trans-unit id="08bcf3b3bf83c0b227a0b18fb8bb1d101510e2a0" translate="yes" xml:space="preserve">
          <source>Service::DiskService#delete_prefixed</source>
          <target state="translated">Service::DiskService#delete_prefixed</target>
        </trans-unit>
        <trans-unit id="b71293eb00c6e9f0dfd55e9206ee930a61179520" translate="yes" xml:space="preserve">
          <source>Service::DiskService#download</source>
          <target state="translated">Service::DiskService#download</target>
        </trans-unit>
        <trans-unit id="8f3b343bf7b7db29ab8ef955596fd0319c6a323a" translate="yes" xml:space="preserve">
          <source>Service::DiskService#download_chunk</source>
          <target state="translated">Service::DiskService#download_chunk</target>
        </trans-unit>
        <trans-unit id="9cc52354d23d3a76fc9344cf04b998d72e6955af" translate="yes" xml:space="preserve">
          <source>Service::DiskService#exist?</source>
          <target state="translated">Service::DiskService#exist?</target>
        </trans-unit>
        <trans-unit id="70a600bb8e92efdc61eb87103a076d5ae3cb0239" translate="yes" xml:space="preserve">
          <source>Service::DiskService#headers_for_direct_upload</source>
          <target state="translated">Service::DiskService#headers_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="c25f39588778da64c113a9f109aa7887a510885a" translate="yes" xml:space="preserve">
          <source>Service::DiskService#root</source>
          <target state="translated">Service::DiskService#root</target>
        </trans-unit>
        <trans-unit id="9f8ba0869caef676c431d882a75b357933a6be82" translate="yes" xml:space="preserve">
          <source>Service::DiskService#upload</source>
          <target state="translated">Service::DiskService#upload</target>
        </trans-unit>
        <trans-unit id="962452a3bbbca1fe4f84c73e33f229fc48672fd1" translate="yes" xml:space="preserve">
          <source>Service::DiskService#url</source>
          <target state="translated">Service::DiskService#url</target>
        </trans-unit>
        <trans-unit id="2211cf6163eb8b645154b9c65586f97ff96ab7ca" translate="yes" xml:space="preserve">
          <source>Service::DiskService#url_for_direct_upload</source>
          <target state="translated">Service::DiskService#url_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="717a37281fca63b31d69c0dab9e2903ecc1a0415" translate="yes" xml:space="preserve">
          <source>Service::DiskService::new</source>
          <target state="translated">Service::DiskService::new</target>
        </trans-unit>
        <trans-unit id="8a9166d15f1dc8370a37b6d1a4099dbaebff1398" translate="yes" xml:space="preserve">
          <source>Service::GCSService</source>
          <target state="translated">Service::GCSService</target>
        </trans-unit>
        <trans-unit id="e70ade69f301a050e527cc6990b9175af10125f3" translate="yes" xml:space="preserve">
          <source>Service::GCSService#delete</source>
          <target state="translated">Service::GCSService#delete</target>
        </trans-unit>
        <trans-unit id="5f61597165d7418a7878b61d3b42a4d5a28864d8" translate="yes" xml:space="preserve">
          <source>Service::GCSService#delete_prefixed</source>
          <target state="translated">Service::GCSService#delete_prefixed</target>
        </trans-unit>
        <trans-unit id="70ae659a244e4a303436a2a4960a93618ebca554" translate="yes" xml:space="preserve">
          <source>Service::GCSService#download</source>
          <target state="translated">Service::GCSService#download</target>
        </trans-unit>
        <trans-unit id="5749735278cb9bf1f45d5506c3753cdca994c542" translate="yes" xml:space="preserve">
          <source>Service::GCSService#download_chunk</source>
          <target state="translated">Service::GCSService#download_chunk</target>
        </trans-unit>
        <trans-unit id="1074edb0c6869314680a484c6ad993d9a695663f" translate="yes" xml:space="preserve">
          <source>Service::GCSService#exist?</source>
          <target state="translated">Service::GCSService#exist?</target>
        </trans-unit>
        <trans-unit id="8a0e50e87b3a57ab0f57869fb9747343958fb711" translate="yes" xml:space="preserve">
          <source>Service::GCSService#headers_for_direct_upload</source>
          <target state="translated">Service::GCSService#headers_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="845fa94330b18291b8e197dbcedd8eeef4f3b2f2" translate="yes" xml:space="preserve">
          <source>Service::GCSService#update_metadata</source>
          <target state="translated">Service::GCSService#update_metadata</target>
        </trans-unit>
        <trans-unit id="3531c36be7579cd8195253865660baa8be08e412" translate="yes" xml:space="preserve">
          <source>Service::GCSService#upload</source>
          <target state="translated">Service::GCSService#upload</target>
        </trans-unit>
        <trans-unit id="bbc3eff352a8df56521a4872a328dfefcacc67a4" translate="yes" xml:space="preserve">
          <source>Service::GCSService#url</source>
          <target state="translated">Service::GCSService#url</target>
        </trans-unit>
        <trans-unit id="082c0f0ab6ef7c56f0d28e63fa2cd7b8979cb4cb" translate="yes" xml:space="preserve">
          <source>Service::GCSService#url_for_direct_upload</source>
          <target state="translated">Service::GCSService#url_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="4050ab488cca8f292f72eeecffdba57bf87a3810" translate="yes" xml:space="preserve">
          <source>Service::GCSService::new</source>
          <target state="translated">Service::GCSService::new</target>
        </trans-unit>
        <trans-unit id="0062f37feca48965ee159f634360673ae90762bc" translate="yes" xml:space="preserve">
          <source>Service::MirrorService</source>
          <target state="translated">Service::MirrorService</target>
        </trans-unit>
        <trans-unit id="66418ee009228ae6d56ba77849c45461356cb963" translate="yes" xml:space="preserve">
          <source>Service::MirrorService#delete</source>
          <target state="translated">Service::MirrorService#delete</target>
        </trans-unit>
        <trans-unit id="6a850b593e958c0bcfbdbba675683dbb69eecba8" translate="yes" xml:space="preserve">
          <source>Service::MirrorService#delete_prefixed</source>
          <target state="translated">Service::MirrorService#delete_prefixed</target>
        </trans-unit>
        <trans-unit id="aa17c629b284f366b388221e5c5c71261ec90fbf" translate="yes" xml:space="preserve">
          <source>Service::MirrorService#mirrors</source>
          <target state="translated">Service::MirrorService#mirrors</target>
        </trans-unit>
        <trans-unit id="fc20eb17267645998189ec5df266e1bcacb57d79" translate="yes" xml:space="preserve">
          <source>Service::MirrorService#primary</source>
          <target state="translated">Service::MirrorService#primary</target>
        </trans-unit>
        <trans-unit id="98b0bc00703cfb0ddf9a2a4c80cc28078721ad90" translate="yes" xml:space="preserve">
          <source>Service::MirrorService#upload</source>
          <target state="translated">Service::MirrorService#upload</target>
        </trans-unit>
        <trans-unit id="f02d98475b57519230bc86a173881fccbfca82af" translate="yes" xml:space="preserve">
          <source>Service::MirrorService::new</source>
          <target state="translated">Service::MirrorService::new</target>
        </trans-unit>
        <trans-unit id="cfb67d630f4f3909bd34ff9fd58e9f8a2ce833c4" translate="yes" xml:space="preserve">
          <source>Service::S3Service</source>
          <target state="translated">Service::S3Service</target>
        </trans-unit>
        <trans-unit id="19c96dd063af2047484a8919013e706eac5751ad" translate="yes" xml:space="preserve">
          <source>Service::S3Service#bucket</source>
          <target state="translated">Service::S3Service#bucket</target>
        </trans-unit>
        <trans-unit id="feee05ffe8c089799cf0391284907602a0670106" translate="yes" xml:space="preserve">
          <source>Service::S3Service#client</source>
          <target state="translated">Service::S3Service#client</target>
        </trans-unit>
        <trans-unit id="3ca271e2987048550bfbed37b98f931229bc8843" translate="yes" xml:space="preserve">
          <source>Service::S3Service#delete</source>
          <target state="translated">Service::S3Service#delete</target>
        </trans-unit>
        <trans-unit id="7dbbaaecd162864e59aafbb766fd2942241c67f3" translate="yes" xml:space="preserve">
          <source>Service::S3Service#delete_prefixed</source>
          <target state="translated">Service::S3Service#delete_prefixed</target>
        </trans-unit>
        <trans-unit id="2ceabf45a68213f3edc98a0f17d5f6bfcefe3170" translate="yes" xml:space="preserve">
          <source>Service::S3Service#download</source>
          <target state="translated">Service::S3Service#download</target>
        </trans-unit>
        <trans-unit id="3d20dfb53c90f6fb246acf83f4f2283483e99e5e" translate="yes" xml:space="preserve">
          <source>Service::S3Service#download_chunk</source>
          <target state="translated">Service::S3Service#download_chunk</target>
        </trans-unit>
        <trans-unit id="05d5c68e087ecfe0df676b1a4947187aca236ea2" translate="yes" xml:space="preserve">
          <source>Service::S3Service#exist?</source>
          <target state="translated">Service::S3Service#exist?</target>
        </trans-unit>
        <trans-unit id="d4bcaea39c675f82cf54370b1bf2eaf842e13382" translate="yes" xml:space="preserve">
          <source>Service::S3Service#headers_for_direct_upload</source>
          <target state="translated">Service::S3Service#headers_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="ebd3c263711f6de5a730ec1d6446c089a8de0d56" translate="yes" xml:space="preserve">
          <source>Service::S3Service#upload</source>
          <target state="translated">Service::S3Service#upload</target>
        </trans-unit>
        <trans-unit id="8feaea290da7f515d9932e0a3c5797597641fb48" translate="yes" xml:space="preserve">
          <source>Service::S3Service#upload_options</source>
          <target state="translated">Service::S3Service#upload_options</target>
        </trans-unit>
        <trans-unit id="ddca94b2fa3def96d5ca27120cf139d10d817bb6" translate="yes" xml:space="preserve">
          <source>Service::S3Service#url</source>
          <target state="translated">Service::S3Service#url</target>
        </trans-unit>
        <trans-unit id="822f8e6d1ea49f27250e96ebf4190ef43adabd69" translate="yes" xml:space="preserve">
          <source>Service::S3Service#url_for_direct_upload</source>
          <target state="translated">Service::S3Service#url_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="7d9e4bc700be340d4cc1c5118005f706a1552e6a" translate="yes" xml:space="preserve">
          <source>Service::S3Service::new</source>
          <target state="translated">Service::S3Service::new</target>
        </trans-unit>
        <trans-unit id="9f50e1bbfbf3751a0568ecdce3b27126f4da4174" translate="yes" xml:space="preserve">
          <source>Service::configure</source>
          <target state="translated">Service::configure</target>
        </trans-unit>
        <trans-unit id="f7f1997c6cd1aa051279675742272a956e7db628" translate="yes" xml:space="preserve">
          <source>Session</source>
          <target state="translated">Session</target>
        </trans-unit>
        <trans-unit id="63112904f7f43bcd91d90c91cb32dc2c048c18cf" translate="yes" xml:space="preserve">
          <source>Session Expiry</source>
          <target state="translated">세션 만료</target>
        </trans-unit>
        <trans-unit id="c8b6e793dd782e47107366d97684b1da6d71d8de" translate="yes" xml:space="preserve">
          <source>Session Fixation</source>
          <target state="translated">세션 고정</target>
        </trans-unit>
        <trans-unit id="5319e9ea13cff6b5a4df98132097ff401f2d5f3d" translate="yes" xml:space="preserve">
          <source>Session Fixation - Countermeasures</source>
          <target state="translated">세션 수정-대책</target>
        </trans-unit>
        <trans-unit id="4efb8ccebbf5d914201f1f08ee681aebd5a590c4" translate="yes" xml:space="preserve">
          <source>Session Hijacking</source>
          <target state="translated">세션 도용</target>
        </trans-unit>
        <trans-unit id="8083af2fb46038a7fe98a73486d2b235f7142b36" translate="yes" xml:space="preserve">
          <source>Session Storage</source>
          <target state="translated">세션 저장</target>
        </trans-unit>
        <trans-unit id="4e7b59fbd0a3bcae818038b504c8ec8185f7ea75" translate="yes" xml:space="preserve">
          <source>Session cookies do not invalidate themselves and can be maliciously reused. It may be a good idea to have your application invalidate old session cookies using a stored timestamp.</source>
          <target state="translated">세션 쿠키는 스스로 무효화되지 않으며 악의적으로 재사용 될 수 있습니다. 저장된 타임 스탬프를 사용하여 응용 프로그램이 이전 세션 쿠키를 무효화하도록하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8accfba9c5c26b7a5d783ce7cbf636396ade1ca5" translate="yes" xml:space="preserve">
          <source>Session values are stored using key/value pairs like a hash:</source>
          <target state="translated">세션 값은 해시와 같은 키 / 값 쌍을 사용하여 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="3a7f0ff441a5a22d80b04cc13471f1cea012b4e7" translate="yes" xml:space="preserve">
          <source>Session::CacheStore</source>
          <target state="translated">Session::CacheStore</target>
        </trans-unit>
        <trans-unit id="2054510018c72692f5dbfcc03520fe4b183f4275" translate="yes" xml:space="preserve">
          <source>Session::CacheStore#delete_session</source>
          <target state="translated">Session::CacheStore#delete_session</target>
        </trans-unit>
        <trans-unit id="70ce18d5c7b388f1c2dc7a7dea80961653c2dc33" translate="yes" xml:space="preserve">
          <source>Session::CacheStore#find_session</source>
          <target state="translated">Session::CacheStore#find_session</target>
        </trans-unit>
        <trans-unit id="0917edae98fa410bc182262040fcb14b0085e84e" translate="yes" xml:space="preserve">
          <source>Session::CacheStore#write_session</source>
          <target state="translated">Session::CacheStore#write_session</target>
        </trans-unit>
        <trans-unit id="77e63bd7ff60daea5a9e26f83a1745601058ca26" translate="yes" xml:space="preserve">
          <source>Session::CacheStore::new</source>
          <target state="translated">Session::CacheStore::new</target>
        </trans-unit>
        <trans-unit id="5e3f05b4320371c9df55f626e4b1e12f61ad93a8" translate="yes" xml:space="preserve">
          <source>Session::CookieStore</source>
          <target state="translated">Session::CookieStore</target>
        </trans-unit>
        <trans-unit id="e344a485a90d3ac2d071d2dd5e73a54aad6747ec" translate="yes" xml:space="preserve">
          <source>Session::CookieStore#delete_session</source>
          <target state="translated">Session::CookieStore#delete_session</target>
        </trans-unit>
        <trans-unit id="c3ef5bc71e64fe1521b74b977806c4df250d9945" translate="yes" xml:space="preserve">
          <source>Session::CookieStore#load_session</source>
          <target state="translated">Session::CookieStore#load_session</target>
        </trans-unit>
        <trans-unit id="b23e01b27ee8dabbe7bef1f8998a999563cdad23" translate="yes" xml:space="preserve">
          <source>Session::CookieStore::new</source>
          <target state="translated">Session::CookieStore::new</target>
        </trans-unit>
        <trans-unit id="bf48f4c11d5414e59f9fb20af6688c7289454bac" translate="yes" xml:space="preserve">
          <source>Session::MemCacheStore</source>
          <target state="translated">Session::MemCacheStore</target>
        </trans-unit>
        <trans-unit id="b10fc9b22d40a648b5ae5531801abd8d3b886755" translate="yes" xml:space="preserve">
          <source>Session::MemCacheStore::new</source>
          <target state="translated">Session::MemCacheStore::new</target>
        </trans-unit>
        <trans-unit id="e11e37a9253b34ff1c7224447e143fabca1be9fd" translate="yes" xml:space="preserve">
          <source>Sessions</source>
          <target state="translated">Sessions</target>
        </trans-unit>
        <trans-unit id="57ab94e8a912498b6e986d720425f3bada4e8c24" translate="yes" xml:space="preserve">
          <source>Sessions allow you to store objects in between requests. This is useful for objects that are not yet ready to be persisted, such as a Signup object constructed in a multi-paged process, or objects that don't change much and are needed all the time, such as a User object for a system that requires login. The session should not be used, however, as a cache for objects where it's likely they could be changed unknowingly. It's usually too much work to keep it all synchronized &amp;ndash; something databases already excel at.</source>
          <target state="translated">세션을 사용하면 요청 사이에 객체를 저장할 수 있습니다. 이것은 다중 페이지 프로세스로 구성된 Signup 객체와 같이 아직 유지되지 않은 객체 또는 시스템의 User 객체와 같이 많이 변경되지 않고 항상 필요한 객체에 유용합니다. 로그인이 필요합니다. 그러나 세션을 무의식적으로 변경 될 가능성이있는 객체의 캐시로 사용해서는 안됩니다. 일반적으로 데이터베이스를 모두 동기화하는 데 너무 많은 노력이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2348ceb43f3fadc3970ab360c6a7fe83707ea373" translate="yes" xml:space="preserve">
          <source>Sessions are lazily loaded. If you don't access sessions in your action's code, they will not be loaded. Hence you will never need to disable sessions, just not accessing them will do the job.</source>
          <target state="translated">세션이 느리게로드됩니다. 액션 코드에서 세션에 액세스하지 않으면 세션이로드되지 않습니다. 따라서 세션을 비활성화 할 필요가 없으며 액세스하지 않으면 작업이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="99ba2ccf0bae92e2a984a0b34a438c11fd45a884" translate="yes" xml:space="preserve">
          <source>Sessions are stored by default in a browser cookie that's cryptographically signed, but unencrypted. This prevents the user from tampering with the session but also allows them to see its contents.</source>
          <target state="translated">세션은 기본적으로 암호화 방식으로 서명되었지만 암호화되지 않은 브라우저 쿠키에 저장됩니다. 이렇게하면 사용자가 세션을 무단으로 변경할 수 없지만 내용을 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2d2e6517f8a42a59e855d9328cc3ecefbfbb60f" translate="yes" xml:space="preserve">
          <source>Sessions enable the application to maintain user-specific state, while users interact with the application. For example, sessions allow users to authenticate once and remain signed in for future requests.</source>
          <target state="translated">세션을 통해 응용 프로그램은 사용자 별 상태를 유지하면서 사용자는 응용 프로그램과 상호 작용할 수 있습니다. 예를 들어 세션을 통해 사용자는 한 번 인증하고 향후 요청을 위해 로그인 상태를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27d04c85128c8cec753573243c764c9674554462" translate="yes" xml:space="preserve">
          <source>Sessions typically contain at most a user_id and flash message; both fit within the 4096 bytes cookie size limit. A CookieOverflow exception is raised if you attempt to store more than 4096 bytes of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb70586a0cfcea39cf852bdbe5b73477d1f218d" translate="yes" xml:space="preserve">
          <source>Sessions typically contain at most a user_id and flash message; both fit within the 4K cookie size limit. A CookieOverflow exception is raised if you attempt to store more than 4K of data.</source>
          <target state="translated">세션에는 일반적으로 최대 user_id 및 플래시 메시지가 포함됩니다. 둘 다 4K 쿠키 크기 제한에 맞습니다. 4K 이상의 데이터를 저장하려고하면 CookieOverflow 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bc64ac8cf876a414e1952bfdf5a95bfc47abbaa1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;config.action_mailer.perform_caching&lt;/code&gt; in your config to determine whether your Action Mailer views should support caching.</source>
          <target state="translated">구성에서 &lt;code&gt;config.action_mailer.perform_caching&lt;/code&gt; 을 설정 하여 Action Mailer보기가 캐싱을 지원해야하는지 여부를 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="2a4b3f6939e8ce756e9a4dfe688a18c6015142fc" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;config.ssl_options&lt;/code&gt; with &lt;code&gt;hsts: { ... }&lt;/code&gt; to configure HSTS:</source>
          <target state="translated">HSTS를 구성하려면 &lt;code&gt;hsts: { ... }&lt;/code&gt; 로 &lt;code&gt;config.ssl_options&lt;/code&gt; 를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8915281b7675b3815373c9bfe177e53e08b96de7" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;shallow: false&lt;/code&gt; on a child resource to ignore a parent's shallow parameter.</source>
          <target state="translated">부모의 얕은 매개 변수를 무시하려면 자식 리소스에 &lt;code&gt;shallow: false&lt;/code&gt; 를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2adedbc3753ebf3e167f84d443e9e843bcc2321" translate="yes" xml:space="preserve">
          <source>Set a different log level per request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25aa801d755c2b4d50c790cf711ae694d41c17e" translate="yes" xml:space="preserve">
          <source>Set a session in the cache.</source>
          <target state="translated">캐시에서 세션을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2017dcb0c1e3a46c52330385c3d6d0c147016f84" translate="yes" xml:space="preserve">
          <source>Set cache read and write timeouts relatively low. Regenerating a cached value is often faster than waiting more than a second to retrieve it. Both read and write timeouts default to 1 second, but may be set lower if your network is consistently low-latency.</source>
          <target state="translated">캐시 읽기 및 쓰기 시간 초과를 상대적으로 낮게 설정하십시오. 캐시 된 값을 재생성하는 것이 1 초 이상 기다린 것보다 더 빠릅니다. 읽기 및 쓰기 시간 제한은 기본적으로 1 초이지만 네트워크의 지연 시간이 지속적으로 낮 으면 낮게 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a029aa70c90e5a4ddfc8921d9264f3015a5f9790" translate="yes" xml:space="preserve">
          <source>Set color by using a symbol or one of the defined constants. If a third option is set to &lt;code&gt;true&lt;/code&gt;, it also adds bold to the string. This is based on the Highline implementation and will automatically append &lt;a href=&quot;logsubscriber#CLEAR&quot;&gt;&lt;code&gt;CLEAR&lt;/code&gt;&lt;/a&gt; to the end of the returned &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366709f696cbdf4951268d883d887ac7c0002569" translate="yes" xml:space="preserve">
          <source>Set color by using a symbol or one of the defined constants. If a third option is set to &lt;code&gt;true&lt;/code&gt;, it also adds bold to the string. This is based on the Highline implementation and will automatically append &lt;a href=&quot;logsubscriber#CLEAR&quot;&gt;CLEAR&lt;/a&gt; to the end of the returned &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">기호 또는 정의 된 상수 중 하나를 사용하여 색상을 설정하십시오. 세 번째 옵션이 &lt;code&gt;true&lt;/code&gt; 로 설정 되면 문자열에 굵게 표시됩니다. 이것은 Highline 구현을 기반으로 하며 반환 된 &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; 의 끝에 &lt;a href=&quot;logsubscriber#CLEAR&quot;&gt;CLEAR&lt;/a&gt; 를 자동으로 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="f141e9d7cb62fe4dd042ff76c4fc99b79bb2df73" translate="yes" xml:space="preserve">
          <source>Set sensible client HTTP timeouts and retry limits for your application. In certain failure scenarios, the default AWS client configuration may cause connections to be held for up to several minutes and lead to request queuing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db3a2566fc45295b071231aeb98943fabee3d4d" translate="yes" xml:space="preserve">
          <source>Set the authorized user for this session</source>
          <target state="translated">이 세션에 권한이 부여 된 사용자 설정</target>
        </trans-unit>
        <trans-unit id="52b637a40ceb04a9d6d6c9973a14d93248bb197f" translate="yes" xml:space="preserve">
          <source>Set the client message level.</source>
          <target state="translated">클라이언트 메시지 레벨을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="4a234b36ca3758dd96a948e4b383d291379788af" translate="yes" xml:space="preserve">
          <source>Set the column to use for optimistic locking. Defaults to &lt;code&gt;lock_version&lt;/code&gt;.</source>
          <target state="translated">낙관적 잠금에 사용할 열을 설정하십시오. 기본값은 &lt;code&gt;lock_version&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5f368ef0ae3a3c054157e3aa0b639801cafa386f" translate="yes" xml:space="preserve">
          <source>Set the following in your config to enable HSTS when using subdomains:</source>
          <target state="translated">하위 도메인을 사용할 때 HSTS를 사용하도록 구성에서 다음을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d40008e47365b99f31bd11bd44cda4a8e6d05eb6" translate="yes" xml:space="preserve">
          <source>Set the form builder to be used as the default for all forms in the views rendered by this controller and its subclasses.</source>
          <target state="translated">이 제어기 및 해당 서브 클래스가 렌더링하는보기에서 모든 양식의 기본값으로 사용되도록 양식 빌더를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2fa6a510440a4c07c0fbd15babb8fc72a7479e30" translate="yes" xml:space="preserve">
          <source>Set the sequence to the max value of the table's column.</source>
          <target state="translated">시퀀스를 테이블 열의 최대 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="984a5bb3ecb7c59ea7521bdf62b171aa4fd52bed" translate="yes" xml:space="preserve">
          <source>Set the view paths.</source>
          <target state="translated">보기 경로를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="7d2b947a37db0bcaf0cef5d2b69132c8cb87df5b" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;true&lt;/code&gt; if this is an abstract class (see &lt;code&gt;abstract_class?&lt;/code&gt;). If you are using inheritance with Active Record and don't want a class to be considered as part of the STI hierarchy, you must set this to true. &lt;code&gt;ApplicationRecord&lt;/code&gt;, for example, is generated as an abstract class.</source>
          <target state="translated">이것이 추상 클래스 인 경우 이것을 &lt;code&gt;true&lt;/code&gt; 로 설정 하십시오 ( &lt;code&gt;abstract_class?&lt;/code&gt; 참조 ). Active Record에서 상속을 사용하고 클래스를 STI 계층 구조의 일부로 간주하지 않으려면이를 true로 설정해야합니다. 예를 들어 &lt;code&gt;ApplicationRecord&lt;/code&gt; 는 추상 클래스로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="02978e0cbc470359ce585e6f6c44f95b202b9a43" translate="yes" xml:space="preserve">
          <source>Set this to true to make this a bulk alter query, such as</source>
          <target state="translated">이것을 대량 변경 쿼리로 만들려면 이것을 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="e1ddfa849513a7196d38ffcce6f0eae8ef827190" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;:cascade&lt;/code&gt; to drop dependent objects as well. Defaults to false.</source>
          <target state="translated">종속 오브젝트도 삭제 하려면 &lt;code&gt;:cascade&lt;/code&gt; 로 설정하십시오 . 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="57f3f5d1d0e3540e86f5bf956bd8091ffec049d7" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to drop temporary table. Defaults to false.</source>
          <target state="translated">임시 테이블을 삭제 하려면 &lt;code&gt;true&lt;/code&gt; 로 설정 하십시오. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="c28b27045de5605b9a07642ed487f4c32664d9e3" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to only drop the table if it exists. Defaults to false.</source>
          <target state="translated">테이블이 존재하는 경우에만 테이블을 삭제하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="12ac8d33b62919ddaca561abd528ff8b97d8f25e" translate="yes" xml:space="preserve">
          <source>Set to true to avoid raising an error when the table already exists. Defaults to false.</source>
          <target state="translated">테이블이 이미 존재하는 경우 오류가 발생하지 않도록하려면 true로 설정하십시오. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="37261f2f5b6d0862d8d7c57b8599659aef040c29" translate="yes" xml:space="preserve">
          <source>Set to true to drop the table before creating it. Defaults to false.</source>
          <target state="translated">테이블을 작성하기 전에 삭제하려면 true로 설정하십시오. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="bcc1430a76b44a480498f450171906c13383f059" translate="yes" xml:space="preserve">
          <source>Set to true to drop the table before creating it. Set to &lt;code&gt;:cascade&lt;/code&gt; to drop dependent objects as well. Defaults to false.</source>
          <target state="translated">테이블을 작성하기 전에 삭제하려면 true로 설정하십시오. 종속 오브젝트도 삭제 하려면 &lt;code&gt;:cascade&lt;/code&gt; 로 설정하십시오 . 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="b3431a3a1c44ba03d04131120b396e0d875e0fef" translate="yes" xml:space="preserve">
          <source>Set up hook for parallel testing. This can be used if you have multiple databases or any behavior that needs to be run after the process is forked but before the tests run.</source>
          <target state="translated">병렬 테스트를위한 후크를 설정하십시오. 프로세스가 분기 된 후이지만 테스트가 실행되기 전에 실행해야하는 여러 데이터베이스 나 동작이있는 경우에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a33169e1f8af31dff16eaf20cdab515ab1be7ed" translate="yes" xml:space="preserve">
          <source>Set up test connection with the specified identifiers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd8df22f4964a88d401ae46ee2b49cf886787bd" translate="yes" xml:space="preserve">
          <source>Set whether table names should be the pluralized versions of the corresponding class names. If true, the default table name for a Product class will be &amp;ldquo;products&amp;rdquo;. If false, it would just be &amp;ldquo;product&amp;rdquo;. See table_name for the full rules on table/class naming. This is true, by default.</source>
          <target state="translated">테이블 이름이 해당 클래스 이름의 복수 버전이어야하는지 여부를 설정하십시오. true 인 경우 Product 클래스의 기본 테이블 이름은 &quot;products&quot;입니다. False이면 &quot;제품&quot;일뿐입니다. 테이블 / 클래스 이름 지정에 대한 전체 규칙은 table_name을 참조하십시오. 이것은 기본적으로 사실입니다.</target>
        </trans-unit>
        <trans-unit id="b43a920b0a6f830b9d37ce98ef6d2b08374fcbae" translate="yes" xml:space="preserve">
          <source>SetCurrent</source>
          <target state="translated">SetCurrent</target>
        </trans-unit>
        <trans-unit id="c7f44eed2c4df85b5cebcf328b76779abec61486" translate="yes" xml:space="preserve">
          <source>Sets $VERBOSE for the duration of the block and back to its original value afterwards.</source>
          <target state="translated">블록 지속 시간 동안 $ VERBOSE를 설정하고 나중에 원래 값으로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="51fe28272e377118a6c4bac2caea9535290d9151" translate="yes" xml:space="preserve">
          <source>Sets $VERBOSE to &lt;code&gt;nil&lt;/code&gt; for the duration of the block and back to its original value afterwards.</source>
          <target state="translated">블록 지속 시간 동안 $ VERBOSE를 &lt;code&gt;nil&lt;/code&gt; 로 설정 한 후 원래 값으로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="a2b4e0fabd97a75d3a82d964c9d4ead30dfb4b7a" translate="yes" xml:space="preserve">
          <source>Sets $VERBOSE to &lt;code&gt;true&lt;/code&gt; for the duration of the block and back to its original value afterwards.</source>
          <target state="translated">블록 지속 시간 동안 $ VERBOSE를 &lt;code&gt;true&lt;/code&gt; 로 설정 한 후 원래 값으로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="875821e0b942364cf286a5c6269404377541c97e" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Date.beginning_of_week&lt;/code&gt; to a week start (e.g. :monday) for current request/thread.</source>
          <target state="translated">설정 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 를 현재 요청 / 스레드 (월요일 예) 일주일의 시작.</target>
        </trans-unit>
        <trans-unit id="2e9bae05229d27a2481d422ecbe48460186e9a42" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Time.zone&lt;/code&gt; to a TimeZone object for the current request/thread.</source>
          <target state="translated">&lt;code&gt;Time.zone&lt;/code&gt; 을 현재 요청 / 스레드에 대한 TimeZone 객체로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="3589c59f95713f406905caf6a50c7e635228f0b8" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;env[&quot;rack.multithread&quot;]&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt; and wraps the application within a Mutex.</source>
          <target state="translated">세트 &lt;code&gt;env[&quot;rack.multithread&quot;]&lt;/code&gt; 에 플래그를 &lt;code&gt;false&lt;/code&gt; 과 뮤텍스 내 응용 프로그램을 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="01a53420ea6dea10adbd580ca6f078700111adde" translate="yes" xml:space="preserve">
          <source>Sets a WWW-Authenticate header to let the client know a token is desired.</source>
          <target state="translated">클라이언트에게 토큰이 필요하다는 것을 알리기 위해 WWW-Authenticate 헤더를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a1f6d67e2b6daed21f904b080e5fa986d20eccb2" translate="yes" xml:space="preserve">
          <source>Sets a flash that will not be available to the next action, only to the current.</source>
          <target state="translated">다음 동작에서는 사용할 수없고 현재 만 사용할 수있는 플래시를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="af66b2cc87f71b6b4a7f5d0be6754d897a07c014" translate="yes" xml:space="preserve">
          <source>Sets a new default value for a column.</source>
          <target state="translated">열의 새 기본값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="df8d8bf078c75caef833d12368576b18781fa8ea" translate="yes" xml:space="preserve">
          <source>Sets a new default value for a column:</source>
          <target state="translated">열의 새 기본값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ac43141b812c9225d28868487733ba5ba189259d" translate="yes" xml:space="preserve">
          <source>Sets an HTTP 1.1 Cache-Control header of &lt;code&gt;no-cache&lt;/code&gt;. This means the resource will be marked as stale, so clients must always revalidate. Intermediate/browser caches may still store the asset.</source>
          <target state="translated">&lt;code&gt;no-cache&lt;/code&gt; 의 HTTP 1.1 Cache-Control 헤더를 설정 합니다 . 즉, 리소스가 오래된 것으로 표시되므로 클라이언트는 항상 다시 확인해야합니다. 중간 / 브라우저 캐시는 여전히 자산을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a94080e51f223a10f8e90bf397c368e76d76aee" translate="yes" xml:space="preserve">
          <source>Sets an HTTP 1.1 Cache-Control header. Defaults to issuing a &lt;code&gt;private&lt;/code&gt; instruction, so that intermediate caches must not cache the response.</source>
          <target state="translated">HTTP 1.1 Cache-Control 헤더를 설정합니다. 중간 캐시가 응답을 캐시하지 않도록 &lt;code&gt;private&lt;/code&gt; 명령 을 발행하도록 기본 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e071631c07f3ba57671a219d12c3c46e6b43446" translate="yes" xml:space="preserve">
          <source>Sets an X-Runtime header, containing the time (in seconds) taken to execute the request.</source>
          <target state="translated">요청을 실행하는 데 걸린 시간 (초)을 포함하는 X- 런타임 헤더를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4025fb0f915228e144e139d09d04cdf08e512e9c" translate="yes" xml:space="preserve">
          <source>Sets an array of names of environments where destructive actions should be prohibited.</source>
          <target state="translated">파괴적인 행동을 금지해야하는 환경 이름 배열을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="be614b4b4d72495777ea2ef286f54a0a2a1205e3" translate="yes" xml:space="preserve">
          <source>Sets attributes to be used when creating new records from a relation object.</source>
          <target state="translated">관계 객체에서 새 레코드를 만들 때 사용할 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="198e3bd869ff43312db34a6194a0f8f02726e5f5" translate="yes" xml:space="preserve">
          <source>Sets cookies for the request.</source>
          <target state="translated">요청 쿠키를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="354d005ddfafc9923882cf0efa77f58d5e00761c" translate="yes" xml:space="preserve">
          <source>Sets defaults for parameters</source>
          <target state="translated">매개 변수의 기본값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="c3fc63a2e6ac2c13f9893479d5477fdbfc3aa5ca" translate="yes" xml:space="preserve">
          <source>Sets log tags, logs the request, calls the app, and flushes the logs.</source>
          <target state="translated">로그 태그를 설정하고 요청을 기록하며 앱을 호출하고 로그를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="9b596de798dffa52ce54b6100fd42db45dc1c956" translate="yes" xml:space="preserve">
          <source>Sets or removes a &lt;code&gt;NOT NULL&lt;/code&gt; constraint on a column. The &lt;code&gt;null&lt;/code&gt; flag indicates whether the value can be &lt;code&gt;NULL&lt;/code&gt;. For example</source>
          <target state="translated">열에서 &lt;code&gt;NOT NULL&lt;/code&gt; 제약 조건을 설정하거나 제거합니다 . &lt;code&gt;null&lt;/code&gt; 플래그 값이 될 수 있는지 여부를 나타내는 &lt;code&gt;NULL&lt;/code&gt; . 예를 들어</target>
        </trans-unit>
        <trans-unit id="c04788036e8163c0f06061321c9e01dc15d611f1" translate="yes" xml:space="preserve">
          <source>Sets or removes a NOT NULL constraint on a column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e58eecc8fcbf4adecbba7943c7031cd98cf70d8" translate="yes" xml:space="preserve">
          <source>Sets readonly attributes for the returned relation. If value is true (default), attempting to update a record will result in an error.</source>
          <target state="translated">리턴 된 관계에 대한 읽기 전용 속성을 설정합니다. 값이 true (기본값)이면 레코드를 업데이트하려고하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c41af3af30fe2906bdb701a390a89b32f35123e5" translate="yes" xml:space="preserve">
          <source>Sets server specific X-Sendfile header. Configure this via &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; option.</source>
          <target state="translated">서버 특정 X-Sendfile 헤더를 설정합니다. &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; 옵션을 통해이를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7581a3842a0cb59769ebe9dd2349c7ec2b8f35d4" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;base#method-c-base_name&quot;&gt;::base_name&lt;/a&gt; taking into account the current class namespace.</source>
          <target state="translated">현재 클래스 네임 스페이스를 고려 하여 &lt;a href=&quot;base#method-c-base_name&quot;&gt;:: base_name&lt;/a&gt; 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="6049ec6dfba1100391599013b410499e611f7c27" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;base#method-c-base_name&quot;&gt;&lt;code&gt;base_name&lt;/code&gt;&lt;/a&gt; taking into account the current class namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9513da43aad9a4628e139f035e4985b18d2d9ec2" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;ActiveStorage::Current.host&lt;/code&gt; attribute, which the disk service uses to generate URLs. Include this concern in custom controllers that call &lt;a href=&quot;blob#method-i-service_url&quot;&gt;ActiveStorage::Blob#service_url&lt;/a&gt;, &lt;a href=&quot;variant#method-i-service_url&quot;&gt;ActiveStorage::Variant#service_url&lt;/a&gt;, or &lt;a href=&quot;preview#method-i-service_url&quot;&gt;ActiveStorage::Preview#service_url&lt;/a&gt; so the disk service can generate URLs using the same host, protocol, and base path as the current request.</source>
          <target state="translated">디스크 서비스가 URL을 생성하는 데 사용 하는 &lt;code&gt;ActiveStorage::Current.host&lt;/code&gt; 속성을 설정 합니다. 디스크 서비스가 현재 요청과 동일한 호스트, 프로토콜 및 기본 경로를 사용하여 URL을 생성 할 수 있도록 &lt;a href=&quot;blob#method-i-service_url&quot;&gt;ActiveStorage :: Blob # service_url&lt;/a&gt; , &lt;a href=&quot;variant#method-i-service_url&quot;&gt;ActiveStorage :: Variant # service_url&lt;/a&gt; 또는 &lt;a href=&quot;preview#method-i-service_url&quot;&gt;ActiveStorage :: Preview # service_url&lt;/a&gt; 을 호출하는 사용자 정의 컨트롤러에이 문제를 포함하십시오 . .</target>
        </trans-unit>
        <trans-unit id="c1a0b031101bfddaf1a2cb7d8119b0465845fdff" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;ActiveStorage::Current.host&lt;/code&gt; attribute, which the disk service uses to generate URLs. Include this concern in custom controllers that call &lt;a href=&quot;blob#method-i-url&quot;&gt;&lt;code&gt;ActiveStorage::Blob#url&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;variant#method-i-url&quot;&gt;&lt;code&gt;ActiveStorage::Variant#url&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;preview#method-i-url&quot;&gt;&lt;code&gt;ActiveStorage::Preview#url&lt;/code&gt;&lt;/a&gt; so the disk service can generate URLs using the same host, protocol, and base path as the current request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7c33860818c60edf26b0dcef17263f527d7e96" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Rails&lt;/code&gt; environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad1d814505c510e9594336ab5bca5ba912e8b2f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;etag&lt;/code&gt; and/or &lt;code&gt;last_modified&lt;/code&gt; on the response and checks it against the client request. If the request doesn't match the options provided, the request is considered stale and should be generated from scratch. Otherwise, it's fresh and we don't need to generate anything and a reply of &lt;code&gt;304 Not
Modified&lt;/code&gt; is sent.</source>
          <target state="translated">응답 에서 &lt;code&gt;etag&lt;/code&gt; 및 / 또는 &lt;code&gt;last_modified&lt;/code&gt; 를 설정하고 클라이언트 요청과 비교하여 확인합니다. 요청이 제공된 옵션과 일치하지 않으면 요청이 오래된 것으로 간주되어 처음부터 생성되어야합니다. 그렇지 않으면, 그것은 신선하고 우리는 아무것도 생성 할 필요가 없으며 &lt;code&gt;304 Not Modified&lt;/code&gt; 의 응답 이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="b375a11a9e13b9d4bf6ce51d8ac63fb0974ed3a9" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;etag&lt;/code&gt;, &lt;code&gt;last_modified&lt;/code&gt;, or both on the response and renders a &lt;code&gt;304 Not Modified&lt;/code&gt; response if the request is already fresh.</source>
          <target state="translated">응답 에서 &lt;code&gt;etag&lt;/code&gt; , &lt;code&gt;last_modified&lt;/code&gt; 또는 둘 다 설정하고 요청이 이미 최신 인 경우 &lt;code&gt;304 Not Modified&lt;/code&gt; 응답을 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="da274ce7a2209d253ee67fb5714569736821721b" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;permitted&lt;/code&gt; attribute to &lt;code&gt;true&lt;/code&gt;. This can be used to pass mass assignment. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;permitted&lt;/code&gt; 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정 합니다 . 대량 할당을 통과하는 데 사용할 수 있습니다. &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9bd595b5f3e2065b79518d2a7fff593a390d44eb" translate="yes" xml:space="preserve">
          <source>Sets the HTTP character set. In case of &lt;code&gt;nil&lt;/code&gt; parameter it sets the charset to &lt;code&gt;default_charset&lt;/code&gt;.</source>
          <target state="translated">HTTP 문자 세트를 설정합니다. &lt;code&gt;nil&lt;/code&gt; 매개 변수의 경우 문자 집합을 &lt;code&gt;default_charset&lt;/code&gt; 으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="183f4b5c7e99d6db7ba06da8ddaf43e7f3d5325b" translate="yes" xml:space="preserve">
          <source>Sets the HTTP response's content MIME type. For example, in the controller you could write this:</source>
          <target state="translated">HTTP 응답의 컨텐츠 MIME 유형을 설정합니다. 예를 들어 컨트롤러에서 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb33c90de9632e71830f8795f855446816c0413b" translate="yes" xml:space="preserve">
          <source>Sets the HTTP status code.</source>
          <target state="translated">HTTP 상태 코드를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9503c6c532bcca221a7dd0242c54ac04dae3c2a6" translate="yes" xml:space="preserve">
          <source>Sets the Rails environment.</source>
          <target state="translated">Rails 환경을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a3e64fad54b8fb9649cad266099d7a189fa9a147" translate="yes" xml:space="preserve">
          <source>Sets the behavior for disallowed deprecations (those configured by &lt;a href=&quot;disallowed#attribute-i-disallowed_warnings&quot;&gt;&lt;code&gt;ActiveSupport::Deprecation.disallowed_warnings=&lt;/code&gt;&lt;/a&gt;) to the specified value. As with &lt;code&gt;behavior=&lt;/code&gt;, this can be a single value, array, or an object that responds to &lt;code&gt;call&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213772044812da2192fa34280a5e3049c14ba8d4" translate="yes" xml:space="preserve">
          <source>Sets the behavior to the specified value. Can be a single value, array, or an object that responds to &lt;code&gt;call&lt;/code&gt;.</source>
          <target state="translated">동작을 지정된 값으로 설정합니다. 단일 값, 배열 또는 &lt;code&gt;call&lt;/code&gt; 에 응답하는 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc44f40ecf609175c799a2c26a115bdad4f1c77f" translate="yes" xml:space="preserve">
          <source>Sets the column to sort records by when no explicit order clause is used during an ordered finder call. Useful when the primary key is not an auto-incrementing integer, for example when it's a UUID. Note that using a non-unique column can result in non-deterministic results.</source>
          <target state="translated">순서 지정 파인더 호출 중에 명시 적 순서 절이 사용되지 않을 때 기준으로 레코드를 정렬하도록 열을 설정합니다. 기본 키가 자동 증가 정수가 아닌 경우 (예 : UUID 인 경우) 유용합니다. 고유하지 않은 열을 사용하면 결정적이지 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5518ba4b4f30413c687fe3e0597f90571503831a" translate="yes" xml:space="preserve">
          <source>Sets the column to sort records by when no explicit order clause is used during an ordered finder call. Useful when the primary key is not an auto-incrementing integer, for example when it's a UUID. Records are subsorted by the primary key if it exists to ensure deterministic results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0191305ff15a33dde4177d96fe6147d3c07df20" translate="yes" xml:space="preserve">
          <source>Sets the columns names the model should ignore. Ignored columns won't have attribute accessors defined, and won't be referenced in SQL queries.</source>
          <target state="translated">모델이 무시해야하는 열 이름을 설정합니다. 무시 된 열에는 속성 접근자가 정의되어 있지 않으며 SQL 쿼리에서 참조되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e7a23951ef99ccb4154d8a948df8c23fe8f3c11" translate="yes" xml:space="preserve">
          <source>Sets the controller class name. Useful if the name can't be inferred from test class. Normalizes &lt;code&gt;controller_class&lt;/code&gt; before using.</source>
          <target state="translated">컨트롤러 클래스 이름을 설정합니다. 테스트 클래스에서 이름을 유추 할 수없는 경우에 유용합니다. 사용하기 전에 &lt;code&gt;controller_class&lt;/code&gt; 를 정규화하십시오 .</target>
        </trans-unit>
        <trans-unit id="36911a63c792786bd030a9f66e9559e46d12c957" translate="yes" xml:space="preserve">
          <source>Sets the criteria used to identify deprecation messages which should be disallowed. Can be an array containing strings, symbols, or regular expressions. (Symbols are treated as strings). These are compared against the text of the generated deprecation warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98bec79679d345c54bdccb67170dfb8f1afff74" translate="yes" xml:space="preserve">
          <source>Sets the default wrapper key or model which will be used to determine wrapper key and attribute names. Called automatically when the module is inherited.</source>
          <target state="translated">랩퍼 키 및 속성 이름을 판별하는 데 사용될 기본 랩퍼 키 또는 모델을 설정합니다. 모듈이 상속되면 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0755eb0e83afe7cc75c91fe1921c2c7c093757ff" translate="yes" xml:space="preserve">
          <source>Sets the defaults through app configuration:</source>
          <target state="translated">앱 구성을 통해 기본값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2ff31b1692387dbaf307820a5d66eff63a6b6eed" translate="yes" xml:space="preserve">
          <source>Sets the format by string extension, which can be used to force custom formats that are not controlled by the extension.</source>
          <target state="translated">확장명으로 제어되지 않는 사용자 정의 형식을 강제 실행하는 데 사용할 수있는 문자열 확장명으로 형식을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a0c247e932345931803af673dff309126bdb6b86" translate="yes" xml:space="preserve">
          <source>Sets the formats by string extensions. This differs from &lt;a href=&quot;mimenegotiation#method-i-format-3D&quot;&gt;&lt;code&gt;format=&lt;/code&gt;&lt;/a&gt; by allowing you to set multiple, ordered formats, which is useful when you want to have a fallback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b727d92261862d82a0f74ae05c26f02ff38cb015" translate="yes" xml:space="preserve">
          <source>Sets the formats by string extensions. This differs from &lt;a href=&quot;mimenegotiation#method-i-format-3D&quot;&gt;format=&lt;/a&gt; by allowing you to set multiple, ordered formats, which is useful when you want to have a fallback.</source>
          <target state="translated">문자열 확장자로 형식을 설정합니다. 이것은 여러 가지 정렬 된 형식을 설정할 수 있다는 점에서 &lt;a href=&quot;mimenegotiation#method-i-format-3D&quot;&gt;format =&lt;/a&gt; 과 다릅니다 . 이는 대체를 원할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f9384a70a4bdd127f441c94800c74a0f10b8b4af" translate="yes" xml:space="preserve">
          <source>Sets the given value for the key mapped to @env.</source>
          <target state="translated">@env에 매핑 된 키의 지정된 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="bf47572d2aebbb31296b2ff0e31653fbebe055b8" translate="yes" xml:space="preserve">
          <source>Sets the model &lt;code&gt;attributes&lt;/code&gt; from a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57797d5b7b4648c3f4395a913e68b730d9316a4" translate="yes" xml:space="preserve">
          <source>Sets the model &lt;code&gt;attributes&lt;/code&gt; from a &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; string. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; 문자열 에서 모델 &lt;code&gt;attributes&lt;/code&gt; 을 설정합니다 . &lt;code&gt;self&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="68fc23bfb0d21758af42e6ab4cacef11bc2413bc" translate="yes" xml:space="preserve">
          <source>Sets the model class for a fixture when the class name cannot be inferred from the fixture name.</source>
          <target state="translated">조명기 이름에서 클래스 이름을 유추 할 수없는 경우 조명기의 모델 클래스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="9e61d21dc4866f90d68d4b8d02b8d60ff9d6fb11" translate="yes" xml:space="preserve">
          <source>Sets the name of the internal metadata table.</source>
          <target state="translated">내부 메타 데이터 테이블의 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="dda6f8490f1ee3c2d3429005c8157a3056da4ac0" translate="yes" xml:space="preserve">
          <source>Sets the name of the primary key column.</source>
          <target state="translated">기본 키 열의 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1117cd05146b5d419c9b37fca72fe0bf00939c0b" translate="yes" xml:space="preserve">
          <source>Sets the name of the schema migrations table.</source>
          <target state="translated">스키마 마이그레이션 테이블의 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5801597043169a8b69be2ceec09ed14871eab4a0" translate="yes" xml:space="preserve">
          <source>Sets the name of the sequence to use when generating ids to the given value, or (if the value is &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) to the value returned by the given block. This is required for Oracle and is useful for any database which relies on sequences for primary key generation.</source>
          <target state="translated">주어진 값으로 id를 생성 할 때 또는 주어진 값이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 인 경우 주어진 블록에서 반환 된 값 으로 사용할 시퀀스 이름을 설정합니다 . 이것은 Oracle에 필요하며 기본 키 생성을 위해 시퀀스를 사용하는 모든 데이터베이스에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="4fb25e2a2e488606ce165b4f5493dd8c3d3625f1" translate="yes" xml:space="preserve">
          <source>Sets the name of the wrapper key, or the model which &lt;code&gt;ParamsWrapper&lt;/code&gt; would use to determine the attribute names from.</source>
          <target state="translated">래퍼 키의 이름 또는 &lt;code&gt;ParamsWrapper&lt;/code&gt; 가 속성 이름을 결정하는 데 사용할 모델을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="377f98104a23edcff65cc1e62b9d97fe6024a5e8" translate="yes" xml:space="preserve">
          <source>Sets the order in which test cases are run.</source>
          <target state="translated">테스트 사례가 실행되는 순서를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2937ddcee47eacbe40e42cda33eb9a64dd2f4a72" translate="yes" xml:space="preserve">
          <source>Sets the prefix string to prepend to every table name. So if set to &amp;ldquo;basecamp_&amp;rdquo;, all table names will be named like &amp;ldquo;basecamp_projects&amp;rdquo;, &amp;ldquo;basecamp_people&amp;rdquo;, etc. This is a convenient way of creating a namespace for tables in a shared database. By default, the prefix is the empty string.</source>
          <target state="translated">모든 테이블 이름 앞에 접두사 문자열을 설정합니다. 따라서&amp;ldquo;basecamp_&amp;rdquo;로 설정하면 모든 테이블 이름은&amp;ldquo;basecamp_projects&amp;rdquo;,&amp;ldquo;basecamp_people&amp;rdquo;등과 같이 이름이 지정됩니다. 이는 공유 데이터베이스에서 테이블의 네임 스페이스를 작성하는 편리한 방법입니다. 기본적으로 접두사는 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9a04ad29afdb9a2c17167e5d2c441d2155dc90f4" translate="yes" xml:space="preserve">
          <source>Sets the prefix type that will be prepended to every primary key column name. The options are &lt;code&gt;:table_name&lt;/code&gt; and &lt;code&gt;:table_name_with_underscore&lt;/code&gt;. If the first is specified, the Product class will look for &amp;ldquo;productid&amp;rdquo; instead of &amp;ldquo;id&amp;rdquo; as the primary column. If the latter is specified, the Product class will look for &amp;ldquo;product_id&amp;rdquo; instead of &amp;ldquo;id&amp;rdquo;. Remember that this is a global setting for all Active Records.</source>
          <target state="translated">모든 기본 키 열 이름 앞에 추가 할 접두사 유형을 설정합니다. 옵션은 &lt;code&gt;:table_name&lt;/code&gt; 및 &lt;code&gt;:table_name_with_underscore&lt;/code&gt; 입니다. 첫 번째가 지정되면 Product 클래스는 기본 열로 &quot;id&quot;대신 &quot;productid&quot;를 찾습니다. 후자가 지정되면 Product 클래스는 &quot;id&quot;대신 &quot;product_id&quot;를 찾습니다. 이것은 모든 활성 레코드에 대한 전역 설정입니다.</target>
        </trans-unit>
        <trans-unit id="5b43787634cecea2580fbe643879e5c9d4cb31a5" translate="yes" xml:space="preserve">
          <source>Sets the primary key column's value.</source>
          <target state="translated">기본 키 열의 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0dac6258bd333fb99a18033f5978d7c066b79f23" translate="yes" xml:space="preserve">
          <source>Sets the record to strict_loading mode. This will raise an error if the record tries to lazily load an association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b255f285a86745b76111df49eade488ce3025d5f" translate="yes" xml:space="preserve">
          <source>Sets the returned relation to &lt;a href=&quot;querymethods#method-i-strict_loading&quot;&gt;&lt;code&gt;strict_loading&lt;/code&gt;&lt;/a&gt; mode. This will raise an error if the record tries to lazily load an association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bc608d4cfb23cb71f5ab448c5eaa2635f29901" translate="yes" xml:space="preserve">
          <source>Sets the schema search path to a string of comma-separated schema names. Names beginning with $ have to be quoted (e.g. $user =&amp;gt; '$user'). See: &lt;a href=&quot;https://www.postgresql.org/docs/current/static/ddl-schemas.html&quot;&gt;www.postgresql.org/docs/current/static/ddl-schemas.html&lt;/a&gt;</source>
          <target state="translated">스키마 검색 경로를 쉼표로 구분 된 스키마 이름 문자열로 설정합니다. $로 시작하는 이름은 따옴표로 묶어야합니다 (예 : $ user =&amp;gt; '$ user'). 참조 : &lt;a href=&quot;https://www.postgresql.org/docs/current/static/ddl-schemas.html&quot;&gt;www.postgresql.org/docs/current/static/ddl-schemas.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1cfcc7627b1f0b343d383ce2f5d1893949bd77f1" translate="yes" xml:space="preserve">
          <source>Sets the table name explicitly. Example:</source>
          <target state="translated">테이블 이름을 명시 적으로 설정합니다. 예:</target>
        </trans-unit>
        <trans-unit id="5d8aba6cca3616dbbcc9d1f7c550fcf3504726cb" translate="yes" xml:space="preserve">
          <source>Sets the table name, overriding the default.</source>
          <target state="translated">기본값을 재정 의하여 테이블 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6e94c5f6f545f46cc77dba55204df1a6276c727a" translate="yes" xml:space="preserve">
          <source>Sets the value of &lt;a href=&quot;classmethods#method-i-inheritance_column&quot;&gt;#inheritance_column&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-inheritance_column&quot;&gt;#inheritance_column&lt;/a&gt; 의 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="dbb331e31ec8f793af39a2e3cc8c98e4dfd56330" translate="yes" xml:space="preserve">
          <source>Sets the value of &lt;a href=&quot;classmethods#method-i-inheritance_column&quot;&gt;&lt;code&gt;inheritance_column&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fbb4b80dafa7d85972db33f2e4b721ba6143c1" translate="yes" xml:space="preserve">
          <source>Sets the variant for template.</source>
          <target state="translated">템플릿의 변형을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8abc3d762b1756037946aa6d26ca2a4f8f32351d" translate="yes" xml:space="preserve">
          <source>Sets up the flash keys. Only available if &lt;code&gt;config.action_controller.session_store&lt;/code&gt; is set to a value.</source>
          <target state="translated">플래시 키를 설정합니다. &lt;code&gt;config.action_controller.session_store&lt;/code&gt; 가 값으로 설정된 경우에만 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="073f313fb44e409618fa2585b16710e28a768eb1" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;:expires_in&lt;/code&gt; will set an expiration time on the cache. All caches support auto-expiring content after a specified number of seconds. This value can be specified as an option to the constructor (in which case all entries will be affected), or it can be supplied to the &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; method to effect just one entry.</source>
          <target state="translated">설정 &lt;code&gt;:expires_in&lt;/code&gt; 캐시에 만료 시간을 설정합니다. 모든 캐시는 지정된 시간 (초) 후에 자동 만료 컨텐츠를 지원합니다. 이 값은 생성자에 대한 옵션으로 지정하거나 (이 경우 모든 항목이 영향을 받음) 하나의 항목에만 적용 되도록 &lt;code&gt;fetch&lt;/code&gt; 또는 &lt;code&gt;write&lt;/code&gt; 메소드에 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="319cf08e0b434886e658c990b10bd70108d9132c" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;:race_condition_ttl&lt;/code&gt; is very useful in situations where a cache entry is used very frequently and is under heavy load. If a cache expires and due to heavy load several different processes will try to read data natively and then they all will try to write to cache. To avoid that case the first process to find an expired cache entry will bump the cache expiration time by the value set in &lt;code&gt;:race_condition_ttl&lt;/code&gt;. Yes, this process is extending the time for a stale value by another few seconds. Because of extended life of the previous cache, other processes will continue to use slightly stale data for a just a bit longer. In the meantime that first process will go ahead and will write into cache the new value. After that all the processes will start getting the new value. The key is to keep &lt;code&gt;:race_condition_ttl&lt;/code&gt; small.</source>
          <target state="translated">&lt;code&gt;:race_condition_ttl&lt;/code&gt; 설정 은 캐시 항목이 매우 자주 사용되고로드가 많은 상황에서 매우 유용합니다. 캐시가 만료되고 과부하로 인해 여러 다른 프로세스가 기본적으로 데이터를 읽으려고 시도하고 모두 캐시에 쓰려고 시도합니다. 이러한 경우를 피하기 위해 만료 된 캐시 항목을 찾는 첫 번째 프로세스는 다음과 &lt;code&gt;:race_condition_ttl&lt;/code&gt; 설정된 값만큼 캐시 만료 시간을 초과합니다.. 예,이 프로세스는 오래된 값의 시간을 몇 초 더 연장합니다. 이전 캐시의 수명이 연장 되었기 때문에 다른 프로세스는 약간 오래된 데이터를 조금 더 오래 계속 사용합니다. 그 동안 첫 번째 프로세스가 진행되어 새로운 값을 캐시에 기록합니다. 그 후 모든 프로세스는 새로운 가치를 얻기 시작합니다. 핵심은 &lt;code&gt;:race_condition_ttl&lt;/code&gt; 을 작게 유지하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="ebb8034fbd1b7cd50257c72d12dce3de5500c5f5" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;:version&lt;/code&gt; verifies the cache stored under &lt;code&gt;name&lt;/code&gt; is of the same version. nil is returned on mismatches despite contents. This feature is used to support recyclable cache keys.</source>
          <target state="translated">&lt;code&gt;:version&lt;/code&gt; 설정 은 &lt;code&gt;name&lt;/code&gt; 아래에 저장된 캐시 가 동일한 버전인지 확인합니다. 내용에도 불구하고 불일치시 nil이 리턴됩니다. 이 기능은 재활용 가능한 캐시 키를 지원하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9d102a117295afdb02423aa5b29b75ede53e3ddb" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;compress: false&lt;/code&gt; disables compression of the cache entry.</source>
          <target state="translated">&lt;code&gt;compress: false&lt;/code&gt; 설정 하면 캐시 항목의 압축이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="f19c7d7322c289bbdb51ea5138907662207f02ae" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;skip_nil: true&lt;/code&gt; will not cache nil result:</source>
          <target state="translated">&lt;code&gt;skip_nil: true&lt;/code&gt; 설정 은 nil 결과를 캐시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c8ece87f64466110c18bef99bf41fd2df0aabfa" translate="yes" xml:space="preserve">
          <source>Setting HTML options</source>
          <target state="translated">HTML 옵션 설정</target>
        </trans-unit>
        <trans-unit id="9db2985c0b166d84c7846f0386e53dfdc413ac6b" translate="yes" xml:space="preserve">
          <source>Setting Headers and CGI variables</source>
          <target state="translated">헤더 및 CGI 변수 설정</target>
        </trans-unit>
        <trans-unit id="6e049cf29496a783ca880f2b488c4e4e0d5392cc" translate="yes" xml:space="preserve">
          <source>Setting Inverses</source>
          <target state="translated">역수 설정</target>
        </trans-unit>
        <trans-unit id="a1f89bd291f0df57c8581b0dd547a58a60c92b7b" translate="yes" xml:space="preserve">
          <source>Setting and Passing a Locale</source>
          <target state="translated">로캘 설정 및 전달</target>
        </trans-unit>
        <trans-unit id="a22892c652d87ad73ed58688f4faaf0c56d13745" translate="yes" xml:space="preserve">
          <source>Setting behaviors only affects deprecations that happen after boot time. &lt;a href=&quot;../deprecation&quot;&gt;&lt;code&gt;Deprecation&lt;/code&gt;&lt;/a&gt; warnings raised by gems are not affected by this setting because they happen before Rails boots up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff58908bceb7aac5a0f1b5f6bda823a099248baf" translate="yes" xml:space="preserve">
          <source>Setting behaviors only affects deprecations that happen after boot time. &lt;a href=&quot;../deprecation&quot;&gt;Deprecation&lt;/a&gt; warnings raised by gems are not affected by this setting because they happen before Rails boots up.</source>
          <target state="translated">동작 설정은 부팅 후 발생하는 지원 중단에만 영향을줍니다. gem에서 발생하는 &lt;a href=&quot;../deprecation&quot;&gt;사용 중단&lt;/a&gt; 경고는 Rails가 부팅되기 전에 발생하므로이 설정의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5467fb89c0ccf50acafbe3fc70d9e899b85f3e2b" translate="yes" xml:space="preserve">
          <source>Setting behaviors only affects deprecations that happen after boot time. For more information you can read the documentation of the &lt;code&gt;behavior=&lt;/code&gt; method.</source>
          <target state="translated">동작 설정은 부팅 후 발생하는 지원 중단에만 영향을줍니다. 자세한 정보는 &lt;code&gt;behavior=&lt;/code&gt; 메소드 의 문서를 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2242210cc481f4d161ec5c238f5a17355dad75f2" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;:as&lt;/code&gt; option indicates that this is a polymorphic association, as discussed &lt;a href=&quot;#polymorphic-associations&quot;&gt;earlier in this guide&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; 옵션을 설정하면 &lt;a href=&quot;#polymorphic-associations&quot;&gt;이 안내서의 앞부분에서&lt;/a&gt; 설명한대로 다형성 연관임을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ec390dc8fa5cc572a5c3b49fde979ae1f814426a" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;:as&lt;/code&gt; option indicates that this is a polymorphic association. Polymorphic associations were discussed in detail &lt;a href=&quot;#polymorphic-associations&quot;&gt;earlier in this guide&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; 옵션을 설정하면 이것이 다형성 연관임을 나타냅니다. 다형성 연관성에 대해서는 &lt;a href=&quot;#polymorphic-associations&quot;&gt;이 안내서의 앞부분에서&lt;/a&gt; 자세히 설명했습니다 .</target>
        </trans-unit>
        <trans-unit id="78334244e72ecd1a32b545d0bd3d1479bf5b6240" translate="yes" xml:space="preserve">
          <source>Setting the Application Home Page</source>
          <target state="translated">응용 프로그램 홈 페이지 설정</target>
        </trans-unit>
        <trans-unit id="cb8ef10be1c6e4c18efa42cc9216e68fab9d750e" translate="yes" xml:space="preserve">
          <source>Setting the Backend</source>
          <target state="translated">백엔드 설정</target>
        </trans-unit>
        <trans-unit id="1f4a554df62a102fc095ba6f20e698d055a49732" translate="yes" xml:space="preserve">
          <source>Setting the default to &lt;code&gt;nil&lt;/code&gt; effectively drops the default:</source>
          <target state="translated">기본값을 &lt;code&gt;nil&lt;/code&gt; 로 설정하면 기본값이 효과적으로 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="3200120544bb2975a999a1851a1244d7fd0f436d" translate="yes" xml:space="preserve">
          <source>Setting the layout to &lt;code&gt;nil&lt;/code&gt; forces it to be looked up in the filesystem and fallbacks to the parent behavior if none exists. Setting it to &lt;code&gt;nil&lt;/code&gt; is useful to re-enable template lookup overriding a previous configuration set in the parent:</source>
          <target state="translated">레이아웃을 &lt;code&gt;nil&lt;/code&gt; 로 설정하면 파일 시스템에서 레이아웃을 강제로 검색하고 존재하지 않는 경우 상위 동작으로 폴백합니다. 로 설정 &lt;code&gt;nil&lt;/code&gt; 에 유용하다 부모의 이전 구성 설정을 무시 템플릿 조회를 다시 활성화 :</target>
        </trans-unit>
        <trans-unit id="07a863f82a9e13c0184987cef48a3b4e30ed06c3" translate="yes" xml:space="preserve">
          <source>Setting the method</source>
          <target state="translated">방법 설정</target>
        </trans-unit>
        <trans-unit id="0ffa6b0f744cbc85d7b1813d836d9dd6abb72482" translate="yes" xml:space="preserve">
          <source>Setting this up is simple.</source>
          <target state="translated">이것을 설정하는 것은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="3ef7922e8449a32ac9e7f143eeaaed221f9fbeb1" translate="yes" xml:space="preserve">
          <source>Setting up your application</source>
          <target state="translated">응용 프로그램 설정</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Settings</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="5638e444e552b6db9f433d8e0d789ad2f09001ec" translate="yes" xml:space="preserve">
          <source>Setup test connection with the specified identifiers:</source>
          <target state="translated">지정된 식별자로 테스트 연결을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d201d83c369f5ee001a841aa0c801d28497a110d" translate="yes" xml:space="preserve">
          <source>Setup the Database</source>
          <target state="translated">데이터베이스 설정</target>
        </trans-unit>
        <trans-unit id="a28a8ada8bdc7d99b9bf64e96d122eb7c2b1fe7f" translate="yes" xml:space="preserve">
          <source>Setup the Rails Application for Internationalization</source>
          <target state="translated">국제화를위한 Rails 애플리케이션 설정</target>
        </trans-unit>
        <trans-unit id="d481f00240737246757b5039c311cb51272cfc04" translate="yes" xml:space="preserve">
          <source>Several classes in Rails overwrite this method.</source>
          <target state="translated">Rails의 여러 클래스가이 메서드를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="157672747fef1afe6b26bb00ba7c42fad9f003b7" translate="yes" xml:space="preserve">
          <source>Several gems can help with this:</source>
          <target state="translated">몇 가지 보석이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a794a8960179250a980b6ff134694ff665df71e3" translate="yes" xml:space="preserve">
          <source>Several methods are provided in migrations that allow you to control all this:</source>
          <target state="translated">이 모든 것을 제어 할 수있는 몇 가지 방법이 마이그레이션에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="943d08a5e49fd1222f68e5f08098bc5b6e546494" translate="yes" xml:space="preserve">
          <source>Severe Security Issues</source>
          <target state="translated">심각한 보안 문제</target>
        </trans-unit>
        <trans-unit id="b40f8c6b312aa78981283ac7bcf07d39753f5f58" translate="yes" xml:space="preserve">
          <source>Sharding</source>
          <target state="translated">Sharding</target>
        </trans-unit>
        <trans-unit id="8879bf04e1d787722708c372189abff0ad359b40" translate="yes" xml:space="preserve">
          <source>Shards are declared in the three-tier config like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9c8ee4d68d6a21badd4962cfbc9ffa885325da" translate="yes" xml:space="preserve">
          <source>Shared Partial Caching</source>
          <target state="translated">공유 부분 캐싱</target>
        </trans-unit>
        <trans-unit id="6304d24226306f28bdb577c7ad86870b1d48a515" translate="yes" xml:space="preserve">
          <source>Sharing behavior with concerns and controllers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bc07e1b06e9b128672c074c1935dc3f2ae4f63" translate="yes" xml:space="preserve">
          <source>Short-hand examples</source>
          <target state="translated">속기 예제</target>
        </trans-unit>
        <trans-unit id="11ffafa14b15f894a3f28fe629d5d8463c639244" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-months_ago&quot;&gt;#months_ago&lt;/a&gt;(1).</source>
          <target state="translated">에 대한 짧은 손 &lt;a href=&quot;calculations#method-i-months_ago&quot;&gt;#months_ago&lt;/a&gt; (1).</target>
        </trans-unit>
        <trans-unit id="e78b8ce239ceb540a12c1c9603043f685c1aa6b6" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-months_ago&quot;&gt;#months_ago&lt;/a&gt;(3).</source>
          <target state="translated">에 대한 짧은 손 &lt;a href=&quot;calculations#method-i-months_ago&quot;&gt;#months_ago&lt;/a&gt; (3 참조).</target>
        </trans-unit>
        <trans-unit id="8abe324d9c82e5fa1960cf42bd4b96caea4617ec" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-months_ago&quot;&gt;&lt;code&gt;months_ago&lt;/code&gt;&lt;/a&gt;(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b49968d19baa4985469ccfc85686dfeaf3c1e3" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-months_ago&quot;&gt;&lt;code&gt;months_ago&lt;/code&gt;&lt;/a&gt;(3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c682326b5f38d5c96147556b6160e05abc58daa" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-months_since&quot;&gt;#months_since&lt;/a&gt;(3)</source>
          <target state="translated">에 대한 짧은 손 &lt;a href=&quot;calculations#method-i-months_since&quot;&gt;#months_since&lt;/a&gt; (3)</target>
        </trans-unit>
        <trans-unit id="671946631e26673a1acf6fbe2d62298c9d79cc4e" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-months_since&quot;&gt;&lt;code&gt;months_since&lt;/code&gt;&lt;/a&gt;(3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d248e0e05e0c6db52bc88d7152b32f7a57d6da" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-years_ago&quot;&gt;#years_ago&lt;/a&gt;(1).</source>
          <target state="translated">에 대한 짧은 손 &lt;a href=&quot;calculations#method-i-years_ago&quot;&gt;#years_ago&lt;/a&gt; (1).</target>
        </trans-unit>
        <trans-unit id="42afe388edd76d83eda101686ffab055017eaf43" translate="yes" xml:space="preserve">
          <source>Short-hand for &lt;a href=&quot;calculations#method-i-years_ago&quot;&gt;&lt;code&gt;years_ago&lt;/code&gt;&lt;/a&gt;(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858d1ddd22a4f11e5ff793dca70295370af6eb54" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;Rack::Test::UploadedFile.new(File.join(ActionDispatch::IntegrationTest.file_fixture_path, path), type)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bbf60bcfe44a89fd337caf24bff2cbd2430c7d" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;Rack::Test::UploadedFile.new(File.join(ActionDispatch::IntegrationTest.fixture_path,
path), type)&lt;/code&gt;:</source>
          <target state="translated">에 대한 바로 가기 &lt;code&gt;Rack::Test::UploadedFile.new(File.join(ActionDispatch::IntegrationTest.fixture_path, path), type)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8edb2799730bdc443329c787ce80a30869b3eb1b" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;after_commit :hook, on: :create&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;after_commit :hook, on: :create&lt;/code&gt; 바로 가기입니다 .</target>
        </trans-unit>
        <trans-unit id="af91c5d0893cb989e9e4147ff5648cbbcf3cf6fa" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;after_commit :hook, on: :destroy&lt;/code&gt;.</source>
          <target state="translated">바로 가기에 대한 &lt;code&gt;after_commit :hook, on: :destroy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5046027583c2e0db93f0693ad76795ae086275c" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;after_commit :hook, on: :update&lt;/code&gt;.</source>
          <target state="translated">바로 가기 &lt;code&gt;after_commit :hook, on: :update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a8f663f50ddd30cdbe11ed9c4f299297ba87901" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;after_commit :hook, on: [ :create, :update ]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;after_commit :hook, on: [ :create, :update ]&lt;/code&gt; 바로 가기 : [: create, : update] .</target>
        </trans-unit>
        <trans-unit id="49cd721b595199c0b0a758299b55a51bfcac8f7a" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.close&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tempfile.close&lt;/code&gt; 의 단축키입니다 .</target>
        </trans-unit>
        <trans-unit id="1edc69f7b5b7822f0479c811690dd6d412da6798" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.eof?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tempfile.eof?&lt;/code&gt; 바로 가기 ? .</target>
        </trans-unit>
        <trans-unit id="7716a0479809149ad41124c6dcfe3483ee97595f" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.open&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tempfile.open&lt;/code&gt; 바로 가기 .</target>
        </trans-unit>
        <trans-unit id="255bf70f0ce00a30ca13478c46d6c566558b2684" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.path&lt;/code&gt;.</source>
          <target state="translated">에 대한 바로 가기 &lt;code&gt;tempfile.path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8383ee1de3f9d2b3047d9c0f6f641bab300a1962" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.read&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tempfile.read&lt;/code&gt; 바로 가기 .</target>
        </trans-unit>
        <trans-unit id="52bde16965a1de7e6fd22f2901c49da91b1d8bdd" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.rewind&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tempfile.rewind&lt;/code&gt; 바로 가기 .</target>
        </trans-unit>
        <trans-unit id="b53fba2aede9e7f6d1b96a23423b05776befeb26" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.size&lt;/code&gt;.</source>
          <target state="translated">에 대한 바로 가기 &lt;code&gt;tempfile.size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc9a49fb2cfb88bfd214e9b806e6d89453183775" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;tempfile.to_path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tempfile.to_path&lt;/code&gt; 의 단축키입니다 .</target>
        </trans-unit>
        <trans-unit id="d26f9d6ad94065db0c4a03e375778ba0160ef612" translate="yes" xml:space="preserve">
          <source>Shortcut helper that returns all the &lt;a href=&quot;api&quot;&gt;&lt;code&gt;ActionController::API&lt;/code&gt;&lt;/a&gt; modules except the ones passed as arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac815c5dd0316828fb846fc8272ae6a68f08e3b" translate="yes" xml:space="preserve">
          <source>Shortcut helper that returns all the &lt;a href=&quot;api&quot;&gt;ActionController::API&lt;/a&gt; modules except the ones passed as arguments:</source>
          <target state="translated">인수로 전달 된 모듈을 제외한 모든 &lt;a href=&quot;api&quot;&gt;ActionController :: API&lt;/a&gt; 모듈 을 반환하는 바로 가기 도우미 :</target>
        </trans-unit>
        <trans-unit id="23b41472a0f17fcbc40726e48234ec823d4ea400" translate="yes" xml:space="preserve">
          <source>Shortcut helper that returns all the modules included in &lt;a href=&quot;base&quot;&gt;&lt;code&gt;ActionController::Base&lt;/code&gt;&lt;/a&gt; except the ones passed as arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a13b306a8c8bdb0984a91c8fb5addfb9c9ff06" translate="yes" xml:space="preserve">
          <source>Shortcut helper that returns all the modules included in &lt;a href=&quot;base&quot;&gt;ActionController::Base&lt;/a&gt; except the ones passed as arguments:</source>
          <target state="translated">인수로 전달 된 모듈을 제외하고 &lt;a href=&quot;base&quot;&gt;ActionController :: Base에&lt;/a&gt; 포함 된 모든 모듈을 리턴하는 바로 가기 헬퍼 :</target>
        </trans-unit>
        <trans-unit id="2644474520952bede63ba52e9df7bffb5022a302" translate="yes" xml:space="preserve">
          <source>Shorthand for wrapping routes in a specific RESTful context. Valid values are &lt;code&gt;:member&lt;/code&gt;, &lt;code&gt;:collection&lt;/code&gt;, and &lt;code&gt;:new&lt;/code&gt;. Only use within &lt;code&gt;resource(s)&lt;/code&gt; block. For example:</source>
          <target state="translated">특정 RESTful 컨텍스트에서 라우트를 줄 바꿈하기위한 축약입니다. 유효한 값은 &lt;code&gt;:member&lt;/code&gt; , &lt;code&gt;:collection&lt;/code&gt; 및 &lt;code&gt;:new&lt;/code&gt; 입니다. &lt;code&gt;resource(s)&lt;/code&gt; 블록 내에서만 사용하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2eee144fcaae57b557bd9094b3685f5fcb57ed2f" translate="yes" xml:space="preserve">
          <source>Shorthand to decrypt any encrypted configurations or files.</source>
          <target state="translated">암호화 된 구성 또는 파일을 해독하는 속기입니다.</target>
        </trans-unit>
        <trans-unit id="433a92b65e3dfa8c12b1915711081664a27c2d9f" translate="yes" xml:space="preserve">
          <source>Should be used with order.</source>
          <target state="translated">주문과 함께 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3d0313bec30b3bae6f7e24c6ac968a44eaa599ed" translate="yes" xml:space="preserve">
          <source>Should primary key values be selected from their corresponding sequence before the insert statement? If true, next_sequence_value is called before each insert to set the record's primary key.</source>
          <target state="translated">insert 문 전에 해당 순서에서 기본 키 값을 선택해야합니까? true 인 경우 레코드의 기본 키를 설정하기 위해 각 삽입 전에 next_sequence_value가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="852afd47e530f7c318578326ab076256e1a0ae11" translate="yes" xml:space="preserve">
          <source>Should you wish to create a database constraint to prevent possible violations of a uniqueness validation using the &lt;code&gt;:scope&lt;/code&gt; option, you must create a unique index on both columns in your database. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/multiple-column-indexes.html&quot;&gt;the MySQL manual&lt;/a&gt; for more details about multiple column indexes or &lt;a href=&quot;https://www.postgresql.org/docs/current/static/ddl-constraints.html&quot;&gt;the PostgreSQL manual&lt;/a&gt; for examples of unique constraints that refer to a group of columns.</source>
          <target state="translated">&lt;code&gt;:scope&lt;/code&gt; 옵션을 사용하여 고유성 유효성 검증의 위반을 방지하기 위해 데이터베이스 제한 조건을 작성하려면 데이터베이스의 두 열 모두에 고유 색인을 작성해야합니다. 참조 &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/multiple-column-indexes.html&quot;&gt;MySQL의 설명서&lt;/a&gt; 다중 열 인덱스 나에 대한 자세한 내용은 &lt;a href=&quot;https://www.postgresql.org/docs/current/static/ddl-constraints.html&quot;&gt;PostgreSQL의 설명서&lt;/a&gt; 열 그룹을 참조 고유 제한 조건의 예를 들어.</target>
        </trans-unit>
        <trans-unit id="9a98c9c6edc15698dcbbff5ac377644b2e2792ea" translate="yes" xml:space="preserve">
          <source>Should you wish to create a database constraint to prevent possible violations of a uniqueness validation using the &lt;code&gt;:scope&lt;/code&gt; option, you must create a unique index on both columns in your database. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/multiple-column-indexes.html&quot;&gt;the MySQL manual&lt;/a&gt; for more details about multiple column indexes or &lt;a href=&quot;https://www.postgresql.org/docs/current/static/ddl-constraints.html&quot;&gt;the PostgreSQL manual&lt;/a&gt; for examples of unique constraints that refer to a group of columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4631eed240058a939a1d85e2af352b769d9ab46a" translate="yes" xml:space="preserve">
          <source>Shoulda then can tell generators to search for test_unit generators when some of them are not available by adding a fallback:</source>
          <target state="translated">그러면 shoulda는 폴백을 추가하여 생성기 중 일부를 사용할 수없는 경우 생성기에게 test_unit 생성기를 검색하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0193674035fb5e5bc435a0705a7d4c4e47f77310" translate="yes" xml:space="preserve">
          <source>Show a 404 page in the browser:</source>
          <target state="translated">브라우저에 404 페이지를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="5770fa74493d925f193549290197d8447a8fda40" translate="yes" xml:space="preserve">
          <source>Show a JPEG in the browser:</source>
          <target state="translated">브라우저에 JPEG를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="dafa1913b9721c7cced785671b894105311c5f66" translate="yes" xml:space="preserve">
          <source>Show help message with available generators.</source>
          <target state="translated">사용 가능한 생성기와 함께 도움말 메시지를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="655c9394cc6f564bde6061950315fb3591ca890c" translate="yes" xml:space="preserve">
          <source>Showing Articles</source>
          <target state="translated">기사 표시</target>
        </trans-unit>
        <trans-unit id="e1c85cdd38121860563242ddb722f08f4ba2a1c3" translate="yes" xml:space="preserve">
          <source>Showing a List of Articles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7723ad4772bdc75f9548eb7ee7621b9d433cb693" translate="yes" xml:space="preserve">
          <source>Showing a Single Article</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23ed7dadf824139070a98bdf95c37c300982377" translate="yes" xml:space="preserve">
          <source>Sidekiq</source>
          <target state="translated">Sidekiq</target>
        </trans-unit>
        <trans-unit id="333d1db2a611a7467fe7887bfdfb0559a06fd027" translate="yes" xml:space="preserve">
          <source>Sidekiq adapter for Active Job</source>
          <target state="translated">활성 작업용 Sidekiq 어댑터</target>
        </trans-unit>
        <trans-unit id="4e08e7622ba56e82bcc1ef49c4edfc50ebd8bed3" translate="yes" xml:space="preserve">
          <source>Signal that the thread is finished with the current connection. &lt;a href=&quot;connectionpool#method-i-release_connection&quot;&gt;&lt;code&gt;release_connection&lt;/code&gt;&lt;/a&gt; releases the connection-thread association and returns the connection to the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df867832e5738922ac3993df179d5f7eb1912bd4" translate="yes" xml:space="preserve">
          <source>Signal that the thread is finished with the current connection. &lt;a href=&quot;connectionpool#method-i-release_connection&quot;&gt;release_connection&lt;/a&gt; releases the connection-thread association and returns the connection to the pool.</source>
          <target state="translated">스레드가 현재 연결로 완료되었음을 알립니다. &lt;a href=&quot;connectionpool#method-i-release_connection&quot;&gt;release_connection&lt;/a&gt; 은 연결 스레드 연관을 해제하고 연결을 풀로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6a206321251fcb77e76f04d3082b79582ec71024" translate="yes" xml:space="preserve">
          <source>Signature of calls to UJS's event handlers has changed. Unlike the version with jQuery, all custom events return only one parameter: &lt;code&gt;event&lt;/code&gt;. In this parameter, there is an additional attribute &lt;code&gt;detail&lt;/code&gt; which contains an array of extra parameters.</source>
          <target state="translated">UJS의 이벤트 핸들러에 대한 호출 서명이 변경되었습니다. jQuery가 포함 된 버전과 달리 모든 사용자 정의 이벤트는 하나의 매개 변수 &lt;code&gt;event&lt;/code&gt; 만 반환합니다 . 이 매개 변수 에는 추가 매개 변수 배열이 포함 된 추가 속성 &lt;code&gt;detail&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="db2c2a9116e73d8f4a3b0f699f28e09fed485b02" translate="yes" xml:space="preserve">
          <source>Signature of calls to UJS's event handlers has changed. Unlike the version with jQuery, all custom events return only one parameter: &lt;code&gt;event&lt;/code&gt;. In this parameter, there is an additional attribute &lt;code&gt;detail&lt;/code&gt; which contains an array of extra parameters. For information about the previously used &lt;code&gt;jquery-ujs&lt;/code&gt; in Rails 5 and earlier, read the &lt;a href=&quot;https://github.com/rails/jquery-ujs/wiki/ajax&quot;&gt;&lt;code&gt;jquery-ujs&lt;/code&gt; wiki&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cf0392296064579858651f856889aadbc2805e" translate="yes" xml:space="preserve">
          <source>Signatures</source>
          <target state="translated">Signatures</target>
        </trans-unit>
        <trans-unit id="62b23a2463aa4a9bac6516900cb02ee26c669c3e" translate="yes" xml:space="preserve">
          <source>Silence deprecation warnings within the block.</source>
          <target state="translated">블록 내에서 더 이상 사용되지 않는 경고.</target>
        </trans-unit>
        <trans-unit id="0e949873a03c7e70cfa4c2108a5b6f74f7986da5" translate="yes" xml:space="preserve">
          <source>Silences the logger for the duration of the block.</source>
          <target state="translated">블록 기간 동안 로거를 침묵시킵니다.</target>
        </trans-unit>
        <trans-unit id="d945ff88e3b670986d9b6fc77ad08e7bc9d5a7db" translate="yes" xml:space="preserve">
          <source>Silences the logger within a block.</source>
          <target state="translated">블록 내에서 로거를 침묵시킵니다.</target>
        </trans-unit>
        <trans-unit id="a4d48858e53cf3e050f2f939ce69f5baae52a175" translate="yes" xml:space="preserve">
          <source>Silences the logger.</source>
          <target state="translated">로거를 음소거합니다.</target>
        </trans-unit>
        <trans-unit id="19285667a820e102407753171e14f9c0c6abb69e" translate="yes" xml:space="preserve">
          <source>Silencing Warnings and Exceptions</source>
          <target state="translated">소음 경고 및 예외</target>
        </trans-unit>
        <trans-unit id="73f166057bd2b65a1cd73c76f8b2e36ec88b143c" translate="yes" xml:space="preserve">
          <source>Silencing exceptions is also possible with &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Kernel.html#method-i-suppress&quot;&gt;&lt;code&gt;suppress&lt;/code&gt;&lt;/a&gt;. This method receives an arbitrary number of exception classes. If an exception is raised during the execution of the block and is &lt;code&gt;kind_of?&lt;/code&gt; any of the arguments, &lt;code&gt;suppress&lt;/code&gt; captures it and returns silently. Otherwise the exception is not captured:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b37d9ee51616c6ec34e13067c246ec5b9d49c4e" translate="yes" xml:space="preserve">
          <source>Silencing exceptions is also possible with &lt;code&gt;suppress&lt;/code&gt;. This method receives an arbitrary number of exception classes. If an exception is raised during the execution of the block and is &lt;code&gt;kind_of?&lt;/code&gt; any of the arguments, &lt;code&gt;suppress&lt;/code&gt; captures it and returns silently. Otherwise the exception is not captured:</source>
          <target state="translated">&lt;code&gt;suppress&lt;/code&gt; 를 사용 하여 소음 예외도 가능합니다 . 이 메소드는 임의의 수의 예외 클래스를 수신합니다. 블록을 실행하는 동안 예외가 발생하고 &lt;code&gt;kind_of?&lt;/code&gt; 인수 중 하나라도 &lt;code&gt;suppress&lt;/code&gt; 하면 인수를 캡처하여 자동으로 리턴합니다. 그렇지 않으면 예외가 캡처되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3043f77f3e3e7ada691306c0b21f4077ba52e6aa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;relation#method-i-create&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; on the base class. Raises an exception if a validation error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30e9c3151c99b55484e489df35cbb9e443c697e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;relation#method-i-create&quot;&gt;create&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; on the base class. Raises an exception if a validation error occurs.</source>
          <target state="translated">유사 제품에 &lt;a href=&quot;relation#method-i-create&quot;&gt;생성&lt;/a&gt; 하지만, 호출은 &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;만들! &lt;/a&gt;기본 수업에. 유효성 검사 오류가 발생하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="348701ccf381d23bd3937e3623aff1c136bada0c" translate="yes" xml:space="preserve">
          <source>Similar to interceptors, you must register observers using &lt;code&gt;register_observer&lt;/code&gt;. You can do this in an initializer file like &lt;code&gt;config/initializers/email_delivery_observer.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585241fbbed890823dbe248276f33cb2329546e4" translate="yes" xml:space="preserve">
          <source>Similar to other callbacks in Rails, the &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; methods can also be used by passing a block, lambda, or method name as a symbol to call.</source>
          <target state="translated">Rails의 다른 콜백과 마찬가지로 블록, 람다 또는 메소드 이름을 호출 할 심볼로 전달 하여 &lt;code&gt;setup&lt;/code&gt; 및 &lt;code&gt;teardown&lt;/code&gt; 메소드를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ade4bc6509060c9451700d011f98feeaea316e9" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;(?)&lt;/code&gt; replacement style of params, you can also specify keys in your conditions string along with a corresponding keys/values hash:</source>
          <target state="translated">&lt;code&gt;(?)&lt;/code&gt; 대체 스타일의 params와 유사하게 조건 키에 해당 키 / 값 해시와 함께 키를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9df17b152e5de2cacd599fc9be052f733257ee6c" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;:start&lt;/code&gt; option, &lt;code&gt;:finish&lt;/code&gt; allows you to configure the last ID of the sequence whenever the highest ID is not the one you need. This would be useful, for example, if you wanted to run a batch process using a subset of records based on &lt;code&gt;:start&lt;/code&gt; and &lt;code&gt;:finish&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:start&lt;/code&gt; 옵션과 마찬가지로 &lt;code&gt;:finish&lt;/code&gt; 를 사용하면 가장 높은 ID가 필요한 ID가 아닐 때마다 시퀀스의 마지막 ID를 구성 할 수 있습니다. 예를 들어, &lt;code&gt;:start&lt;/code&gt; 및 &lt;code&gt;:finish&lt;/code&gt; 기반의 레코드 서브 세트를 사용하여 배치 프로세스를 실행하려는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="aaaccd49de59da147a81dfea8d0a31658036b0c2" translate="yes" xml:space="preserve">
          <source>Similar to the Layout Inheritance logic, if a template or partial is not found in the conventional path, the controller will look for a template or partial to render in its inheritance chain. For example:</source>
          <target state="translated">레이아웃 상속 로직과 유사하게 기존 경로에서 템플릿 또는 부분을 찾을 수없는 경우 컨트롤러는 상속 체인에서 렌더링 할 템플릿 또는 부분을 찾습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="695606fd1c0a7a9d926c9b61fe10dd2f87ddf499" translate="yes" xml:space="preserve">
          <source>Similar to the normal callbacks that hook into the life cycle of an Active Record object, you can also define callbacks that get triggered when you add an object to or remove an object from an association collection.</source>
          <target state="translated">활성 레코드 개체의 수명주기에 연결되는 일반 콜백과 유사하게 개체를 연결 컬렉션에 추가하거나 제거 할 때 트리거되는 콜백을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a64fce2045de9a662c3eaf568db7ba854339e8a8" translate="yes" xml:space="preserve">
          <source>Similarly to System Tests, files uploaded during Integration Tests will not be automatically cleaned up. If you want to clear the files, you can do it in an &lt;code&gt;after_teardown&lt;/code&gt; callback. Doing it here ensures that all connections created during the test are complete and you won't receive an error from Active Storage saying it can't find a file.</source>
          <target state="translated">시스템 테스트와 마찬가지로 통합 테스트 중에 업로드 된 파일은 자동으로 정리되지 않습니다. 파일을 지우려면 &lt;code&gt;after_teardown&lt;/code&gt; 콜백 에서 수행 할 수 있습니다 . 여기서 수행하면 테스트 중에 생성 된 모든 연결이 완료되고 Active Storage에서 파일을 찾을 수 없다는 오류가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e08f2db0a9d8bc39fb3a12c7663a4ceb55365a6b" translate="yes" xml:space="preserve">
          <source>Similarly you can go through a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; association on the join model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48546cfafa0cc772daa98c1d4cf7c84ddd69398" translate="yes" xml:space="preserve">
          <source>Similarly you can go through a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; association on the join model:</source>
          <target state="translated">마찬가지로 조인 모델에서 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 연결을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc4fb6a726563143c1c04086d201d673d7729dd3" translate="yes" xml:space="preserve">
          <source>Similarly,</source>
          <target state="translated">Similarly,</target>
        </trans-unit>
        <trans-unit id="5e94b010123177f4b407d3f725ceaf6ff6cdbc99" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-from&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; returns the tail from the element at the passed index to the end. If the index is greater than the length of the array, it returns an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6ea315ecbe2cb9262f126a0482352070549c4d" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-since&quot;&gt;&lt;code&gt;since&lt;/code&gt;&lt;/a&gt; moves forward:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806562895d5af40c31c40fc165782ac3423e2940" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;from&lt;/code&gt; returns the tail from the element at the passed index to the end. If the index is greater than the length of the array, it returns an empty array.</source>
          <target state="translated">마찬가지로 &lt;code&gt;from&lt;/code&gt; 은 전달 된 인덱스의 요소에서 끝까지 꼬리 를 반환합니다. 인덱스가 배열의 길이보다 크면 빈 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="823520fbbf69df93831e662a9e22dab5f1079f6a" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;lib()&lt;/code&gt; creates a file in the &lt;code&gt;lib/&lt;/code&gt; directory and &lt;code&gt;vendor()&lt;/code&gt; creates a file in the &lt;code&gt;vendor/&lt;/code&gt; directory.</source>
          <target state="translated">마찬가지로 &lt;code&gt;lib()&lt;/code&gt; 는 &lt;code&gt;lib/&lt;/code&gt; 디렉토리 에 파일을 작성 하고 &lt;code&gt;vendor()&lt;/code&gt; 는 &lt;code&gt;vendor/&lt;/code&gt; 디렉토리에 파일을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="ff325505620a01583c8d68068783cab97b165eb4" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;render :nothing&lt;/code&gt; is also removed and you should use the &lt;code&gt;head&lt;/code&gt; method to send responses that contain only headers. For example, &lt;code&gt;head :ok&lt;/code&gt; sends a 200 response with no body to render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5974f678df19ae54b99c747fcd5bb44117b5140" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;since&lt;/code&gt; moves forward:</source>
          <target state="translated">유사하게, &lt;code&gt;since&lt;/code&gt; 전진 :</target>
        </trans-unit>
        <trans-unit id="b2329f1ade7205a10179b4b8c15d32985ac70202" translate="yes" xml:space="preserve">
          <source>Similarly, a simple hash without a statement will generate conditions based on equality with the SQL AND operator. For instance:</source>
          <target state="translated">마찬가지로, 명령문이없는 간단한 해시는 SQL AND 연산자와의 동등성에 따라 조건을 생성합니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="0785d76353aeb4c3a94624a05a7d413689bccb50" translate="yes" xml:space="preserve">
          <source>Similarly, if any of the &lt;code&gt;before_remove&lt;/code&gt; callbacks throw an exception, the object will not be removed from the collection.</source>
          <target state="translated">마찬가지로 &lt;code&gt;before_remove&lt;/code&gt; 콜백 중 하나가 예외를 throw하면 컬렉션에서 객체가 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f47d527c0c86fbae774ab2a16a4f749b6f9c6f2" translate="yes" xml:space="preserve">
          <source>Similarly, if minutes are zeroed, then seconds are too (unless it has given a value):</source>
          <target state="translated">마찬가지로 분이 0으로 설정되면 초도 역시 값을 제공하지 않는 한 :</target>
        </trans-unit>
        <trans-unit id="03eb58b7c7e7e685c07bfdbb00619b4bda4fe38c" translate="yes" xml:space="preserve">
          <source>Similarly, if you want it to also look up in the rails namespace, you just need to provide the :in value:</source>
          <target state="translated">마찬가지로 rails 네임 스페이스에서도 조회하려면 : in 값만 제공하면됩니다.</target>
        </trans-unit>
        <trans-unit id="941d435eae335610b820271b3500152c8c637229" translate="yes" xml:space="preserve">
          <source>Similarly, in the Rails console, if you have a user instance and reload:</source>
          <target state="translated">마찬가지로 레일스 콘솔에서 사용자 인스턴스가 있고 다시로드하는 경우 :</target>
        </trans-unit>
        <trans-unit id="5fca9025f3bd3799b63f239043c39a443bdef7a2" translate="yes" xml:space="preserve">
          <source>Similarly, it is only safe to perform an unload/reload when no application code is in mid-execution: after the reload, the &lt;code&gt;User&lt;/code&gt; constant, for example, may point to a different class. Without this rule, a poorly-timed reload would mean &lt;code&gt;User.new.class == User&lt;/code&gt;, or even &lt;code&gt;User == User&lt;/code&gt;, could be false.</source>
          <target state="translated">마찬가지로 실행 중 응용 프로그램 코드가없는 경우에만 언로드 / 다시로드를 수행하는 것이 안전합니다. 예를 들어 다시로드 한 후 &lt;code&gt;User&lt;/code&gt; 상수는 다른 클래스를 가리킬 수 있습니다. 이 규칙이 없으면 재로드 시간이 &lt;code&gt;User.new.class == User&lt;/code&gt; 또는 &lt;code&gt;User == User&lt;/code&gt; 가 잘못 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84416df61fc2ffa9cca8fe2946b2d418de16f0d7" translate="yes" xml:space="preserve">
          <source>Similarly, module creation using the &lt;code&gt;module&lt;/code&gt; keyword as in</source>
          <target state="translated">마찬가지로 &lt;code&gt;module&lt;/code&gt; 키워드를 사용하여</target>
        </trans-unit>
        <trans-unit id="30d7aa147060cb2e997e84c75d302a8b3911919e" translate="yes" xml:space="preserve">
          <source>Similarly, we can append paths:</source>
          <target state="translated">마찬가지로 경로를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4585d198d7124d59cef2e29618ac097b4e50978b" translate="yes" xml:space="preserve">
          <source>Similarly, you can generate a migration to remove a column from the command line:</source>
          <target state="translated">마찬가지로 명령 줄에서 열을 제거하기 위해 마이그레이션을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9d7d47e90352b07c9b7c085f224bcbfdabaeff5" translate="yes" xml:space="preserve">
          <source>Similarly, you can retrieve &lt;code&gt;@product.pictures&lt;/code&gt;.</source>
          <target state="translated">마찬가지로 &lt;code&gt;@product.pictures&lt;/code&gt; 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c8d2689732c9ee9f176c92a96cb856ad45fe3f9e" translate="yes" xml:space="preserve">
          <source>Similarly, you can use the &lt;code&gt;asset_path&lt;/code&gt; helper in CoffeeScript files with &lt;code&gt;erb&lt;/code&gt; extension (e.g., &lt;code&gt;application.coffee.erb&lt;/code&gt;):</source>
          <target state="translated">마찬가지로 &lt;code&gt;erb&lt;/code&gt; 확장자를 가진 CoffeeScript 파일에서 &lt;code&gt;asset_path&lt;/code&gt; 헬퍼를 사용할 수 있습니다 (예 : &lt;code&gt;application.coffee.erb&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="54c37fd91b05e571b889fd82a89cce9f98599ed3" translate="yes" xml:space="preserve">
          <source>Simple &lt;a href=&quot;token&quot;&gt;&lt;code&gt;Token&lt;/code&gt;&lt;/a&gt; example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b55b4bbf22e661000fe5c59ce1522188f37eb46" translate="yes" xml:space="preserve">
          <source>Simple &lt;a href=&quot;token&quot;&gt;Token&lt;/a&gt; example:</source>
          <target state="translated">간단한 &lt;a href=&quot;token&quot;&gt;토큰&lt;/a&gt; 예 :</target>
        </trans-unit>
        <trans-unit id="f69a6d9d30d9d67e1d2f51d89ede2ef55a3c7f4d" translate="yes" xml:space="preserve">
          <source>Simple Basic example</source>
          <target state="translated">간단한 기본 예</target>
        </trans-unit>
        <trans-unit id="3f175d389144fd7058e79ab8ddddf02e7c045b49" translate="yes" xml:space="preserve">
          <source>Simple Digest example</source>
          <target state="translated">간단한 다이제스트 예</target>
        </trans-unit>
        <trans-unit id="9ffb2958091ffbef95acd473936527d3c6257271" translate="yes" xml:space="preserve">
          <source>Simple download:</source>
          <target state="translated">간단한 다운로드 :</target>
        </trans-unit>
        <trans-unit id="58550eb7ecb2f13baf24cd91c1032ecb6aebb58e" translate="yes" xml:space="preserve">
          <source>Simple formatter which only displays the message.</source>
          <target state="translated">메시지 만 표시하는 간단한 포맷터</target>
        </trans-unit>
        <trans-unit id="a418ab726df3acb6cb940caf827a61c3fd0495d7" translate="yes" xml:space="preserve">
          <source>Simple memory backed cache. This cache is not thread safe and is intended only for serving as a temporary memory cache for a single thread.</source>
          <target state="translated">간단한 메모리 백업 캐시. 이 캐시는 스레드로부터 안전하지 않으며 단일 스레드의 임시 메모리 캐시로만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ffa1aa3a24dc79f541326784142d0ceaaf3775c8" translate="yes" xml:space="preserve">
          <source>Simple, efficient background processing for Ruby. Sidekiq uses threads to handle many jobs at the same time in the same process. It does not require Rails but will integrate tightly with it to make background processing dead simple.</source>
          <target state="translated">Ruby를위한 간단하고 효율적인 백그라운드 처리. Sidekiq는 스레드를 사용하여 동일한 프로세스에서 동시에 많은 작업을 처리합니다. Rails는 필요하지 않지만 백그라운드 프로세싱을 간단하게하기 위해 밀접하게 통합됩니다.</target>
        </trans-unit>
        <trans-unit id="e181ef792b8d98d2b618afb6c4fa50553c065a8d" translate="yes" xml:space="preserve">
          <source>Simply pass a file name like &quot;../../../etc/passwd&quot; to download the server's login information. A simple solution against this, is to &lt;em&gt;check that the requested file is in the expected directory&lt;/em&gt;:</source>
          <target state="translated">&quot;../../../etc/passwd&quot;와 같은 파일 이름을 전달하여 서버의 로그인 정보를 다운로드하십시오. 이에 대한 간단한 해결책 &lt;em&gt;은 요청 된 파일이 예상 디렉토리에 있는지 확인하는 것입니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d6289e7104f6c09e541fedb477922ab57cd396af" translate="yes" xml:space="preserve">
          <source>Simply use &lt;a href=&quot;../connectionhandling#method-i-connection&quot;&gt;ActiveRecord::Base.connection&lt;/a&gt; as with Active Record 2.1 and earlier (pre-connection-pooling). Eventually, when you're done with the connection(s) and wish it to be returned to the pool, you call &lt;a href=&quot;connectionhandler#method-i-clear_active_connections-21&quot;&gt;ActiveRecord::Base.clear_active_connections!&lt;/a&gt;. This will be the default behavior for Active Record when used in conjunction with Action Pack's request handling cycle.</source>
          <target state="translated">Active Record 2.1 및 이전 버전과 마찬가지로 &lt;a href=&quot;../connectionhandling#method-i-connection&quot;&gt;ActiveRecord :: Base.connection&lt;/a&gt; 을 사용하기 만하면됩니다 (연결 전 풀링). 결국, 연결을 마치고 풀로 &lt;a href=&quot;connectionhandler#method-i-clear_active_connections-21&quot;&gt;되돌리려면 ActiveRecord :: Base.clear_active_connections! &lt;/a&gt;. 이것은 Action Pack의 요청 처리주기와 함께 사용될 때 Active Record의 기본 동작입니다.</target>
        </trans-unit>
        <trans-unit id="eb12353bd4c58b286926ee0bb693828cfd6f9ebd" translate="yes" xml:space="preserve">
          <source>Simulate a DELETE request with the given parameters and set/volley the response. See &lt;code&gt;get&lt;/code&gt; for more details.</source>
          <target state="translated">주어진 매개 변수로 DELETE 요청을 시뮬레이션하고 응답을 설정 / 발리합니다. 자세한 내용은 &lt;code&gt;get&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ae40aaa29a492786034fe7fd7c5dad86b059e57" translate="yes" xml:space="preserve">
          <source>Simulate a GET request with the given parameters.</source>
          <target state="translated">주어진 매개 변수로 GET 요청을 시뮬레이션하십시오.</target>
        </trans-unit>
        <trans-unit id="80d4b0280bf9e776c0c3c47f99387a4ad0b9c227" translate="yes" xml:space="preserve">
          <source>Simulate a HEAD request with the given parameters and set/volley the response. See &lt;code&gt;get&lt;/code&gt; for more details.</source>
          <target state="translated">주어진 매개 변수를 사용하여 HEAD 요청을 시뮬레이션하고 응답을 설정 / 설정하십시오. 자세한 내용은 &lt;code&gt;get&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1c37a80a39760ec283c1e95a8e205a6fd58a1644" translate="yes" xml:space="preserve">
          <source>Simulate a PATCH request with the given parameters and set/volley the response. See &lt;code&gt;get&lt;/code&gt; for more details.</source>
          <target state="translated">주어진 매개 변수를 사용하여 PATCH 요청을 시뮬레이션하고 응답을 설정 / 설정하십시오. 자세한 내용은 &lt;code&gt;get&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="47f9a7acf53f8a03a8bf4b584484fb51bceb3186" translate="yes" xml:space="preserve">
          <source>Simulate a POST request with the given parameters and set/volley the response. See &lt;code&gt;get&lt;/code&gt; for more details.</source>
          <target state="translated">주어진 매개 변수를 사용하여 POST 요청을 시뮬레이션하고 응답을 설정 / 설정하십시오. 자세한 내용은 &lt;code&gt;get&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ead1d9b5997c064f26ffafd1baaa1e07785e8dff" translate="yes" xml:space="preserve">
          <source>Simulate a PUT request with the given parameters and set/volley the response. See &lt;code&gt;get&lt;/code&gt; for more details.</source>
          <target state="translated">주어진 매개 변수를 사용하여 PUT 요청을 시뮬레이션하고 응답을 설정 / 설정하십시오. 자세한 내용은 &lt;code&gt;get&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5056f9ec4cf3aeb7e78febe7edf1136ef70360d6" translate="yes" xml:space="preserve">
          <source>Simulate a connection attempt by calling &lt;code&gt;connect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; 를 호출하여 연결 시도를 시뮬레이션하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4361ab811eb89a95e36f61ee81ac06c6f03e46e" translate="yes" xml:space="preserve">
          <source>Simulate an HTTP request to &lt;code&gt;action&lt;/code&gt; by specifying request method, parameters and set/volley the response.</source>
          <target state="translated">요청 메소드, 매개 변수를 지정하고 응답을 설정 / 배설하여 HTTP 요청에 대한 &lt;code&gt;action&lt;/code&gt; 을 시뮬레이션 하십시오.</target>
        </trans-unit>
        <trans-unit id="245dcc7f533b16d533170b914f5fcaccb4396239" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;railtie&quot;&gt;&lt;code&gt;Rails::Railtie&lt;/code&gt;&lt;/a&gt; cannot be instantiated, any methods that call &lt;code&gt;instance&lt;/code&gt; are intended to be called only on subclasses of a &lt;a href=&quot;railtie&quot;&gt;&lt;code&gt;Railtie&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08601c8db0fa28cdaae2da24fc0bea686dfcde72" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;railtie&quot;&gt;Rails::Railtie&lt;/a&gt; cannot be instantiated, any methods that call &lt;code&gt;instance&lt;/code&gt; are intended to be called only on subclasses of a &lt;a href=&quot;railtie&quot;&gt;Railtie&lt;/a&gt;.</source>
          <target state="translated">이후 &lt;a href=&quot;railtie&quot;&gt;레일 :: Railtie가&lt;/a&gt; 인스턴스화 할 수없는, 호출이 어떤 방법 &lt;code&gt;instance&lt;/code&gt; 만의 서브 클래스에서 호출하기위한 것이다 &lt;a href=&quot;railtie&quot;&gt;Railtie&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7f7b0ec2b77f9c26c13c8c47b202e8e901b0889" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;ActionController::Metal&lt;/code&gt; controllers cannot render, the controller must include &lt;code&gt;AbstractController::Rendering&lt;/code&gt;, &lt;code&gt;ActionController::Rendering&lt;/code&gt;, and &lt;code&gt;ActionController::Renderers&lt;/code&gt;, and have at least one renderer.</source>
          <target state="translated">이후 &lt;code&gt;ActionController::Metal&lt;/code&gt; 컨트롤러를 렌더링 할 수 컨트롤러가 포함되어야합니다 &lt;code&gt;AbstractController::Rendering&lt;/code&gt; , &lt;code&gt;ActionController::Rendering&lt;/code&gt; 및 &lt;code&gt;ActionController::Renderers&lt;/code&gt; , 적어도 하나의 렌더러를 가지고있다.</target>
        </trans-unit>
        <trans-unit id="23fce5a3f3ee6e01b490249ea633940672651f98" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;DateTime&lt;/code&gt; is not DST-aware you can end up in a non-existing point in time with no warning or error telling you so.</source>
          <target state="translated">이후 &lt;code&gt;DateTime&lt;/code&gt; DST를 인식하지 그렇게 말하고 어떤 경고 나 오류와 시간이 존재하지 않는 점에서 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3bb4ae803676c9c1b9f093d431f06db7d4011f0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;false.blank?&lt;/code&gt; is true, if you want to validate the presence of a boolean field you should use one of the following validations:</source>
          <target state="translated">&lt;code&gt;false.blank?&lt;/code&gt; 부터 ? 부울 필드가 있는지 확인하려면 다음 유효성 검사 중 하나를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c9a7dd0c368383af9c3b8c3a7214f0c322828823" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;false.present?&lt;/code&gt; is false, if you want to validate the absence of a boolean field you should use &lt;code&gt;validates :field_name, exclusion: { in: [true, false] }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false.present?&lt;/code&gt; 이후 ? 부울 필드가 없는지 &lt;code&gt;validates :field_name, exclusion: { in: [true, false] }&lt;/code&gt; 하려면 validates : field_name, exclusion : {in : [true, false]} 을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d950e25a5b76c0d409b89859069376977b125bc" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;web-console&lt;/code&gt; evaluates plain Ruby code remotely on the server, don't try to use it in production.</source>
          <target state="translated">&lt;code&gt;web-console&lt;/code&gt; 은 서버에서 원격으로 일반 Ruby 코드를 평가 하므로 프로덕션 환경에서는 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a5d2ea6bb89d365280fe13905cecd5a67657ce1c" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;with_options&lt;/code&gt; forwards calls to its receiver they can be nested. Each nesting level will merge inherited defaults in addition to their own.</source>
          <target state="translated">이후 &lt;code&gt;with_options&lt;/code&gt; 이 전달 리시버 호출 그들은 중첩 될 수 있습니다. 각 중첩 수준은 상속 된 기본값과 자체 기본값을 병합합니다.</target>
        </trans-unit>
        <trans-unit id="8149c03564c999d819297ea64deee8de75cb4940" translate="yes" xml:space="preserve">
          <source>Since Action Cable is used at different levels inside your application, you'll need to test both the channels, connection classes themselves, and that other entities broadcast correct messages.</source>
          <target state="translated">Action Cable은 응용 프로그램 내에서 서로 다른 수준에서 사용되므로 채널, 연결 클래스 자체 및 다른 엔터티가 올바른 메시지를 브로드 캐스트하는지 테스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="7c2d5a6d51fa286fc341a373613bbdea4e8ce51b" translate="yes" xml:space="preserve">
          <source>Since HTML and JavaScript requests are typically made from the browser, we need to ensure to verify request authenticity for the web browser. We can use session-oriented authentication for these types of requests, by using the &lt;code&gt;protect_from_forgery&lt;/code&gt; method in our controllers.</source>
          <target state="translated">HTML 및 JavaScript 요청은 일반적으로 브라우저에서 이루어 지므로 웹 브라우저에 대한 요청 진위 여부를 확인해야합니다. 컨트롤러에서 &lt;code&gt;protect_from_forgery&lt;/code&gt; 메소드를 사용하여 이러한 유형의 요청에 세션 지향 인증을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81528ec448a0b44f65741f2f6b53addb0d73824a" translate="yes" xml:space="preserve">
          <source>Since Rails 3.0, generators are built on top of &lt;a href=&quot;https://github.com/erikhuda/thor&quot;&gt;Thor&lt;/a&gt;. Thor provides powerful options for parsing and a great API for manipulating files. For instance, let's build a generator that creates an initializer file named &lt;code&gt;initializer.rb&lt;/code&gt; inside &lt;code&gt;config/initializers&lt;/code&gt;.</source>
          <target state="translated">Rails 3.0부터 &lt;a href=&quot;https://github.com/erikhuda/thor&quot;&gt;Thor&lt;/a&gt; 위에 생성기가 생성됩니다 . Thor는 파싱을위한 강력한 옵션과 파일 조작을위한 훌륭한 API를 제공합니다. 예를 들어, &lt;code&gt;config/initializers&lt;/code&gt; 안에 &lt;code&gt;initializer.rb&lt;/code&gt; 라는 이니셜 라이저 파일을 생성하는 생성기를 빌드 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="75070826b32ef1d49655e10f95c9fc706ca2f24d" translate="yes" xml:space="preserve">
          <source>Since Rails 3.0, this is easy to do due to the hooks concept. Our new helper does not need to be focused in one specific test framework, it can simply provide a hook and a test framework just needs to implement this hook in order to be compatible.</source>
          <target state="translated">Rails 3.0부터는 후크 개념으로 인해 쉽게 수행 할 수 있습니다. 우리의 새로운 도우미는 하나의 특정 테스트 프레임 워크에 초점을 맞출 필요가 없으며 단순히 후크를 제공 할 수 있으며 테스트 프레임 워크는이 후크를 구현하기 만하면 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="6b12c112b07be0a713656dc6731fee33f00d683f" translate="yes" xml:space="preserve">
          <source>Since Rails checks the top-level namespace &lt;code&gt;User&lt;/code&gt; gets autoloaded just fine the first time the &lt;code&gt;user&lt;/code&gt; method is invoked. You only get the exception if the &lt;code&gt;User&lt;/code&gt; constant is known at that point, in particular in a &lt;em&gt;second&lt;/em&gt; call to &lt;code&gt;user&lt;/code&gt;:</source>
          <target state="translated">레일 검사 이후 최상위 네임 스페이스 &lt;code&gt;User&lt;/code&gt; 단지 처음으로 미세 자동으로 적재됩니다 &lt;code&gt;user&lt;/code&gt; 메소드가 호출된다. 그 시점에서, 특히 &lt;code&gt;user&lt;/code&gt; 에 대한 &lt;em&gt;두 번째&lt;/em&gt; 호출 에서 &lt;code&gt;User&lt;/code&gt; 상수가 알려진 경우에만 예외가 발생합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d036f4f228ef580720a6781e483065832fa4a7e4" translate="yes" xml:space="preserve">
          <source>Since Rails doesn't restrict the symbols that you use to set I18n.locale, you can leverage this system to display different content depending on anything you like. For example, suppose you have some &quot;expert&quot; users that should see different pages from &quot;normal&quot; users. You could add the following to &lt;code&gt;app/controllers/application.rb&lt;/code&gt;:</source>
          <target state="translated">Rails는 I18n.locale을 설정하는 데 사용하는 기호를 제한하지 않기 때문에이 시스템을 활용하여 원하는 내용에 따라 다른 컨텐츠를 표시 할 수 있습니다. 예를 들어, &quot;일반&quot;사용자와 다른 페이지를 볼 수있는 &quot;전문가&quot;사용자가 있다고 가정합니다. &lt;code&gt;app/controllers/application.rb&lt;/code&gt; 에 다음을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86d1ed22d1346bb464c5198706ffe87567f6a766" translate="yes" xml:space="preserve">
          <source>Since Ruby is a dynamic language, some code will cause different Rails frameworks to load. Take this snippet for instance:</source>
          <target state="translated">Ruby는 동적 언어이므로 일부 코드로 인해 다른 Rails 프레임 워크가로드 될 수 있습니다. 이 스 니펫을 예로 들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="837353e77da05a1579b00d60a353395a974fa411" translate="yes" xml:space="preserve">
          <source>Since all your controllers inherit from ApplicationController, they will use &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; if no other layout is specified or provided.</source>
          <target state="translated">모든 컨트롤러는 ApplicationController에서 상속되므로 다른 레이아웃을 지정하거나 제공하지 않으면 &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="a7817e46097e7dc12905e210219b4af7aa51b464" translate="yes" xml:space="preserve">
          <source>Since filenames on the load path are shared across gems, be sure that files you load through a railtie have unique names.</source>
          <target state="translated">로드 경로의 파일 이름은 젬간에 공유되므로 레일을 통해로드하는 파일의 이름은 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="6520c3d3b73a2ffe81d795ac7d8a2a18a387b3c9" translate="yes" xml:space="preserve">
          <source>Since fixtures are a testing construct, we use them in our unit and functional tests. There are two ways to use the fixtures, but first let's take a look at a sample unit test:</source>
          <target state="translated">고정물은 테스트 구조이므로 단위 및 기능 테스트에 사용합니다. 조명기를 사용하는 방법은 두 가지가 있지만 먼저 샘플 단위 테스트를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="8bb0cac962d1c344f493a08a09e0a517c801a789" translate="yes" xml:space="preserve">
          <source>Since in this case the name of the generated method is composed of the target object and target method names, the &lt;code&gt;:to&lt;/code&gt; option must be a method name.</source>
          <target state="translated">이 경우 생성 된 메소드의 이름은 대상 오브젝트 및 대상 메소드 이름으로 구성되므로 &lt;code&gt;:to&lt;/code&gt; 옵션은 메소드 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="ab139d63404dff462dc520e7f623b4efc9be75fa" translate="yes" xml:space="preserve">
          <source>Since it is possible to embed ERB in your &lt;code&gt;config/database.yml&lt;/code&gt; it is best practice to explicitly show you are using the &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; to connect to your database. This is especially useful in production since you should not commit secrets like your database password into your source control (such as Git).</source>
          <target state="translated">&lt;code&gt;config/database.yml&lt;/code&gt; 에 ERB를 포함 할 수 있으므로 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 을 사용하여 데이터베이스에 연결하고 있음을 명시 적으로 표시하는 것이 가장 좋습니다 . 데이터베이스 암호와 같은 비밀을 소스 제어 (예 : Git)에 커밋해서는 안되므로 프로덕션 환경에서 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e9f4738f88a3d458e64f0551dc9a7d6ecf230ee0" translate="yes" xml:space="preserve">
          <source>Since it's just a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, all of the information on &lt;code&gt;form_with&lt;/code&gt; also applies.</source>
          <target state="translated">그냥 이후 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 에 모든 정보 &lt;code&gt;form_with&lt;/code&gt; 은 에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="afff38a6a841fc28bfd2a634f26a61e485d5aeac" translate="yes" xml:space="preserve">
          <source>Since jobs run in parallel to your Rails application, most queuing libraries require that you start a library-specific queuing service (in addition to starting your Rails app) for the job processing to work. Refer to library documentation for instructions on starting your queue backend.</source>
          <target state="translated">작업이 Rails 애플리케이션과 병렬로 실행되기 때문에 대부분의 대기열 라이브러리는 작업 처리가 작동하도록 라이브러리 특정 대기열 서비스 (Rails 앱을 시작하는 것 외에도)를 시작해야합니다. 대기열 백엔드 시작에 대한 지시 사항은 라이브러리 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="73494a969c71c710ebb395a4f20bd85d6226ae1f" translate="yes" xml:space="preserve">
          <source>Since only one table is loaded at a time, conditions or orders cannot reference tables other than the main one. If this is the case, Active Record falls back to the previously used &lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; based strategy. For example:</source>
          <target state="translated">한 번에 하나의 테이블 만로드되므로 조건 또는 순서는 기본 테이블 이외의 테이블을 참조 할 수 없습니다. 이 경우 Active Record는 이전에 사용한 &lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; 기반 전략으로 돌아갑니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="93ff2408125421dba3c27ae137f9e9eef6adc6e9" translate="yes" xml:space="preserve">
          <source>Since pool is not in the &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; provided connection information its information is merged in. Since &lt;code&gt;adapter&lt;/code&gt; is duplicate, the &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; connection information wins.</source>
          <target state="translated">풀이 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 에 제공된 연결 정보에 없으므로 해당 정보가 병합됩니다. &lt;code&gt;adapter&lt;/code&gt; 가 중복되어 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 연결 정보가 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="6e4627e7042c6cfc9023032fa82c17031973f8e1" translate="yes" xml:space="preserve">
          <source>Since processes will not share cache data when using &lt;code&gt;:memory_store&lt;/code&gt;, it will not be possible to manually read, write, or expire the cache via the Rails console.</source>
          <target state="translated">&lt;code&gt;:memory_store&lt;/code&gt; 를 사용할 때는 프로세스가 캐시 데이터를 공유 하지 않으므로 Rails 콘솔을 통해 캐시를 수동으로 읽거나 쓰거나 만료 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9aaec5f3d7a66e0f1f0028cf4565da8e4e12bd4e" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;notice&lt;/code&gt; and &lt;code&gt;alert&lt;/code&gt; keys are a common idiom, convenience accessors are available:</source>
          <target state="translated">이후 &lt;code&gt;notice&lt;/code&gt; 및 &lt;code&gt;alert&lt;/code&gt; 키가 공통 관용구이며, 편리한 접근을 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5f9588c2502a06c70ce23247d46b14d7ab74ec76" translate="yes" xml:space="preserve">
          <source>Since the IP address may not be needed, we store the object here without calculating the IP to keep from slowing down the majority of requests. For those requests that do need to know the IP, the &lt;a href=&quot;remoteip/getip#method-i-calculate_ip&quot;&gt;&lt;code&gt;GetIp#calculate_ip&lt;/code&gt;&lt;/a&gt; method will calculate the memoized client IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de71397c47fe8235cd9de4a2650397a6c5dbd38" translate="yes" xml:space="preserve">
          <source>Since the IP address may not be needed, we store the object here without calculating the IP to keep from slowing down the majority of requests. For those requests that do need to know the IP, the &lt;a href=&quot;remoteip/getip#method-i-calculate_ip&quot;&gt;ActionDispatch::RemoteIp::GetIp#calculate_ip&lt;/a&gt; method will calculate the memoized client IP address.</source>
          <target state="translated">IP 주소가 필요하지 않을 수 있으므로 대부분의 요청이 느려지지 않도록 IP를 계산하지 않고 객체를 여기에 저장합니다. IP를 알아야하는 요청의 경우 &lt;a href=&quot;remoteip/getip#method-i-calculate_ip&quot;&gt;ActionDispatch :: RemoteIp :: GetIp # calculate_ip&lt;/a&gt; 메소드는 메모리 화 된 클라이언트 IP 주소를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="bc6e06016bbdbd20c2d5d24525c6c819566708da" translate="yes" xml:space="preserve">
          <source>Since the connection pooling is handled inside of Active Record by default, all application servers (Thin, Puma, Unicorn etc.) should behave the same. The database connection pool is initially empty. As demand for connections increases it will create them until it reaches the connection pool limit.</source>
          <target state="translated">연결 풀링은 기본적으로 Active Record 내부에서 처리되므로 모든 응용 프로그램 서버 (Thin, Puma, Unicorn 등)는 동일하게 작동해야합니다. 데이터베이스 연결 풀이 처음에 비어 있습니다. 연결 요구가 증가함에 따라 연결 풀 제한에 도달 할 때까지 연결이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="c95100ae5a1b94aaae448c6e0e5770dbb4dff8da" translate="yes" xml:space="preserve">
          <source>Since the connection pooling is handled inside of Active Record by default, all application servers (Thin, Puma, Unicorn, etc.) should behave the same. The database connection pool is initially empty. As demand for connections increases it will create them until it reaches the connection pool limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937911717a3add254583eaf6c8908a19d35075ca" translate="yes" xml:space="preserve">
          <source>Since the lookup is exhausted without success, a similar search for a directory is performed, we are going to see why in the &lt;a href=&quot;#automatic-modules&quot;&gt;next section&lt;/a&gt;:</source>
          <target state="translated">조회가 성공하지 않고 소진되었으므로 디렉토리에 대한 유사한 검색이 수행되므로 &lt;a href=&quot;#automatic-modules&quot;&gt;다음 섹션&lt;/a&gt; 에서 이유를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="15e111e4237fb0cbb145baaf5d6e92da0116cbe6" translate="yes" xml:space="preserve">
          <source>Since the return value of &lt;code&gt;default_url_options&lt;/code&gt; is cached per request, the URLs in a locale selector cannot be generated invoking helpers in a loop that sets the corresponding &lt;code&gt;I18n.locale&lt;/code&gt; in each iteration. Instead, leave &lt;code&gt;I18n.locale&lt;/code&gt; untouched, and pass an explicit &lt;code&gt;:locale&lt;/code&gt; option to the helper, or edit &lt;code&gt;request.original_fullpath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;default_url_options&lt;/code&gt; 의 반환 값은 요청마다 캐시 되므로 로캘 선택기의 URL 은 각 반복에서 해당 &lt;code&gt;I18n.locale&lt;/code&gt; 을 설정하는 루프에서 도우미를 호출하여 생성 할 수 없습니다 . 대신 &lt;code&gt;I18n.locale&lt;/code&gt; 을 그대로 두고 도우미에 명시 적 &lt;code&gt;:locale&lt;/code&gt; 옵션을 전달 하거나 &lt;code&gt;request.original_fullpath&lt;/code&gt; 를 편집하십시오 .</target>
        </trans-unit>
        <trans-unit id="514f881e3fbcf45cd09ff19fe93c6d553072b04a" translate="yes" xml:space="preserve">
          <source>Since there are two ways to configure your connection (using &lt;code&gt;config/database.yml&lt;/code&gt; or using an environment variable) it is important to understand how they can interact.</source>
          <target state="translated">연결을 구성하는 두 가지 방법 ( &lt;code&gt;config/database.yml&lt;/code&gt; 사용 또는 환경 변수 사용)이 있으므로 상호 작용 방식을 이해하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="fb9a79b3fe37d17b076ae520a59064b28ee7c339" translate="yes" xml:space="preserve">
          <source>Since this incineration is set for the future, it'll automatically ignore any &lt;code&gt;InboundEmail&lt;/code&gt;s that have already been deleted and discard itself if so.</source>
          <target state="translated">이 소각은 향후에 설정되므로 이미 삭제 된 모든 &lt;code&gt;InboundEmail&lt;/code&gt; 은 자동으로 무시 하고 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="b6a06bc8cf87dcf261c832053fec2a2e9e008b92" translate="yes" xml:space="preserve">
          <source>Since this is a frequent mistake, the format validator (validates_format_of) now raises an exception if the provided regular expression starts with ^ or ends with $. If you do need to use ^ and $ instead of \A and \z (which is rare), you can set the :multiline option to true, like so:</source>
          <target state="translated">자주 발생하는 실수이므로 제공된 정규식이 ^로 시작하거나 $로 끝나는 경우 형식 유효성 검사기 (validates_format_of)에서 예외가 발생합니다. \ A와 \ z 대신에 ^와 $를 사용해야하는 경우에는 드물지만 : multiline 옵션을 true로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a80015205edd9e9d41fb2e0cf090b1c62521532" translate="yes" xml:space="preserve">
          <source>Since this is a regular Ruby source file you can use all of its features to help you define your routes but be careful with variable names as they can clash with the DSL methods of the router.</source>
          <target state="translated">이 파일은 일반적인 Ruby 소스 파일이므로 모든 기능을 사용하여 경로를 정의하는 데 도움을 줄 수 있지만 라우터의 DSL 방법과 충돌 할 수 있으므로 변수 이름에주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="b42720c80b4b74a5d26f9406a0bab2ffdef61f29" translate="yes" xml:space="preserve">
          <source>Since using &lt;code&gt;after_commit&lt;/code&gt; callback only on create, update, or delete is common, there are aliases for those operations:</source>
          <target state="translated">작성, 업데이트 또는 삭제시에만 &lt;code&gt;after_commit&lt;/code&gt; 콜백을 사용하는 것이 일반적이므로 해당 조작에 대한 별명이 있습니다.</target>
        </trans-unit>
        <trans-unit id="25d492b4352d42755ea849b9a7b387f6febb12d7" translate="yes" xml:space="preserve">
          <source>Since using the &lt;code&gt;after_commit&lt;/code&gt; callback only on create, update, or delete is common, there are aliases for those operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844bf90fab048dd263df7b599d51a6792c28f7c9" translate="yes" xml:space="preserve">
          <source>Since we changed the &lt;code&gt;author_class&lt;/code&gt; method to return a &lt;code&gt;Class&lt;/code&gt; instead of a &lt;code&gt;String&lt;/code&gt;, we must also modify our &lt;code&gt;belongs_to&lt;/code&gt; definition in the &lt;code&gt;Blorgh::Article&lt;/code&gt; model:</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 대신 &lt;code&gt;Class&lt;/code&gt; 를 반환 하도록 &lt;code&gt;author_class&lt;/code&gt; 메소드를 변경 &lt;code&gt;Blorgh::Article&lt;/code&gt; 모델 에서 &lt;code&gt;belongs_to&lt;/code&gt; 정의 도 수정해야합니다 :</target>
        </trans-unit>
        <trans-unit id="d17b88c6c83a42899fa5e4fd56d6b23ee1cc145a" translate="yes" xml:space="preserve">
          <source>Since we don't want to output the value returned by &lt;code&gt;@articles.each&lt;/code&gt;, we've enclosed that code in &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;. But, since we &lt;em&gt;do&lt;/em&gt; want to output the value returned by &lt;code&gt;article.title&lt;/code&gt; (for each article), we've enclosed that code in &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398a16b25fce0a713a422558ebdbc07e66d60594" translate="yes" xml:space="preserve">
          <source>Since we have a controller and a view to work with, let's generate the next piece: a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c43fc528d3ccee16f0d6bf0cd42002e7731fdd" translate="yes" xml:space="preserve">
          <source>Since we need to know all instance methods before attaching the log subscriber, the line above should be called after your &lt;code&gt;ActiveRecord::LogSubscriber&lt;/code&gt; definition.</source>
          <target state="translated">로그 구독자를 연결하기 전에 모든 인스턴스 메소드를 알아야하므로 위 행은 &lt;code&gt;ActiveRecord::LogSubscriber&lt;/code&gt; 정의 후에 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fac40be2bb0904ce3a3c5901d84af7aff89d4ed7" translate="yes" xml:space="preserve">
          <source>Since you can now mount an engine inside application's routes, you do not have direct access to &lt;code&gt;Engine&lt;/code&gt;'s &lt;code&gt;url_helpers&lt;/code&gt; inside &lt;code&gt;Application&lt;/code&gt;. When you mount an engine in an application's routes, a special helper is created to allow you to do that. Consider such a scenario:</source>
          <target state="translated">이제 애플리케이션의 경로에 엔진을 마운트 할 수 있으므로 &lt;code&gt;Application&lt;/code&gt; 내의 &lt;code&gt;Engine&lt;/code&gt; 의 &lt;code&gt;url_helpers&lt;/code&gt; 에 직접 액세스 할 수 없습니다 . 응용 프로그램 경로에 엔진을 마운트하면이를 수행 할 수 있도록 특수 도우미가 만들어집니다. 이러한 시나리오를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="78324332fa433ec8196797bff29216842cc815a9" translate="yes" xml:space="preserve">
          <source>Since your custom jobs can be queued at different levels inside your application, you'll need to test both the jobs themselves (their behavior when they get enqueued) and that other entities correctly enqueue them.</source>
          <target state="translated">사용자 지정 작업은 응용 프로그램 내에서 서로 다른 수준으로 대기 할 수 있으므로 작업 자체 (대기열에있을 때의 동작)와 다른 엔터티가 올바르게 대기열에 넣는 작업을 모두 테스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b133d88c1a11a2504ec7f0802f4a64c745597bf" translate="yes" xml:space="preserve">
          <source>Single Table Inheritance</source>
          <target state="translated">단일 테이블 상속</target>
        </trans-unit>
        <trans-unit id="5b5ed7b5bc7e895baedb2ccf6526bb1fb92ae4a7" translate="yes" xml:space="preserve">
          <source>Single Table Inheritance (STI)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e81a92be1ea8ba2afb85e461ae8359b4306ad3" translate="yes" xml:space="preserve">
          <source>Single Table Inheritance (STI) is a feature of Active Record that enables storing a hierarchy of models in one single table. The API of such models is aware of the hierarchy and encapsulates some common needs. For example, given these classes:</source>
          <target state="translated">STI (Single Table Inheritance)는 하나의 단일 테이블에 모델 계층 구조를 저장할 수있는 Active Record의 기능입니다. 이러한 모델의 API는 계층 구조를 인식하고 몇 가지 일반적인 요구를 캡슐화합니다. 예를 들어 다음과 같은 클래스가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c8c74a547c530b61b09111d7b3aea2fee5e55edf" translate="yes" xml:space="preserve">
          <source>Single Table Inheritance is a feature that doesn't play well with lazy loading. Reason is, its API generally needs to be able to enumerate the STI hierarchy to work correctly, whereas lazy loading defers loading classes until they are referenced. You can't enumerate what you haven't referenced yet.</source>
          <target state="translated">단일 테이블 상속은 지연 로딩에서 잘 작동하지 않는 기능입니다. 이유는 일반적으로 API가 올바르게 작동하기 위해 STI 계층 구조를 열거 할 수 있어야하는 반면, 지연로드는 참조 될 때까지로드 클래스를 연기하는 것입니다. 아직 참조하지 않은 것을 열거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3354316197856c467e768932aab8802f32f6aa94" translate="yes" xml:space="preserve">
          <source>Single aggregate value: The single value is type cast to &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; for COUNT, &lt;code&gt;Float&lt;/code&gt; for AVG, and the given column's type for everything else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b273dbf7f3afb156c056d3b029a701b4e1dc059b" translate="yes" xml:space="preserve">
          <source>Single aggregate value: The single value is type cast to &lt;a href=&quot;../integer&quot;&gt;Integer&lt;/a&gt; for COUNT, Float for AVG, and the given column's type for everything else.</source>
          <target state="translated">단일 집계 값 : 단일 값은 COUNT의 경우 &lt;a href=&quot;../integer&quot;&gt;정수&lt;/a&gt; 로, 유형 은 AVG의 경우, 다른 모든 항목의 경우 제공된 열의 유형으로 캐스트됩니다 .</target>
        </trans-unit>
        <trans-unit id="39680f09ad98b7fcdc9f85ec906415abf8801cd8" translate="yes" xml:space="preserve">
          <source>Single table inheritance</source>
          <target state="translated">단일 테이블 상속</target>
        </trans-unit>
        <trans-unit id="964bd87e4bd8158c3246a0ad49d1a5eb6a613ef3" translate="yes" xml:space="preserve">
          <source>Singular Resources</source>
          <target state="translated">단수 자원</target>
        </trans-unit>
        <trans-unit id="cba7c0cce0753bcb2998aa91de8bb3e0f159fb3f" translate="yes" xml:space="preserve">
          <source>Singular associations (one-to-one)</source>
          <target state="translated">단수 연관 (일대일)</target>
        </trans-unit>
        <trans-unit id="136c9a55cf7f35c917c777f08c3361d7f0d8b441" translate="yes" xml:space="preserve">
          <source>Singular forms are aliased so you are able to say:</source>
          <target state="translated">단수형은 별명이므로 다음과 같이 말할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bffce4ec80552790dcff2192314fd5640f381da" translate="yes" xml:space="preserve">
          <source>Singular names are not handled correctly:</source>
          <target state="translated">단수 이름이 올바르게 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e8a8f3f52578adcf1233137dcab410dc63cbdbd" translate="yes" xml:space="preserve">
          <source>Size of collection</source>
          <target state="translated">컬렉션의 크기</target>
        </trans-unit>
        <trans-unit id="cddfa83eeff4991adfecd4bc6459409b4931180e" translate="yes" xml:space="preserve">
          <source>Skip .gitignore file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953dbc2bfd5d70c551c0b73c20f5cf057ffcc8f8" translate="yes" xml:space="preserve">
          <source>Skip Action Cable files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd73c5b74d59e63a10aa772a9fdab5b21784e10f" translate="yes" xml:space="preserve">
          <source>Skip Action Mailer files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01243d5f4cd7e8e6404a84cde110f325b7e3112b" translate="yes" xml:space="preserve">
          <source>Skip Action Text gem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5a18d061321d6a6e0768752020c04c4b458229" translate="yes" xml:space="preserve">
          <source>Skip Active Record files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf74401917336d5212f92c9f5db42051cd90c8f" translate="yes" xml:space="preserve">
          <source>Skip Active Storage files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d892d6eabc3fcaeb302e486ddd3b6224e54246e" translate="yes" xml:space="preserve">
          <source>Skip JavaScript files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540194674f35b866c32f72256247658cb2a52a16" translate="yes" xml:space="preserve">
          <source>Skip Puma related files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ff5ee5c495e0e28dbabc4c4a4b0faff392ecd5" translate="yes" xml:space="preserve">
          <source>Skip Sprockets files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0c71938e5513c6d9e70ab8176c95f3ac0bba7b" translate="yes" xml:space="preserve">
          <source>Skip a callback after actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="translated">작업 후 콜백을 건너 뜁니다. 매개 변수에 대한 자세한 내용 은 &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="43cf19def5e1a1339f1a5fd26b5cef912617d5ea" translate="yes" xml:space="preserve">
          <source>Skip a callback after actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;&lt;code&gt;_insert_callbacks&lt;/code&gt;&lt;/a&gt; for parameter details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3aaa2af87c772c088867e6b79c9cbf6fc61a41a" translate="yes" xml:space="preserve">
          <source>Skip a callback around actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="translated">액션 주위의 콜백을 건너 뜁니다. 매개 변수에 대한 자세한 내용 은 &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="1e8cc7069267c629ff79f278661fd7371afc4037" translate="yes" xml:space="preserve">
          <source>Skip a callback around actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;&lt;code&gt;_insert_callbacks&lt;/code&gt;&lt;/a&gt; for parameter details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deadc66d7c47731a58204842ddf2fe333aa4c89" translate="yes" xml:space="preserve">
          <source>Skip a callback before actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="translated">작업 전에 콜백을 건너 뜁니다. 매개 변수에 대한 자세한 내용 은 &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="f67766db61b2253a84cfb999206435e7ff2ae792" translate="yes" xml:space="preserve">
          <source>Skip a callback before actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;&lt;code&gt;_insert_callbacks&lt;/code&gt;&lt;/a&gt; for parameter details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748d3968f08889167bf852158bfae04c3fbcda4c" translate="yes" xml:space="preserve">
          <source>Skip a previously set callback. Like &lt;code&gt;set_callback&lt;/code&gt;, &lt;code&gt;:if&lt;/code&gt; or &lt;code&gt;:unless&lt;/code&gt; options may be passed in order to control when the callback is skipped.</source>
          <target state="translated">이전에 설정된 콜백을 건너 뜁니다. 마찬가지로 &lt;code&gt;set_callback&lt;/code&gt; , &lt;code&gt;:if&lt;/code&gt; 나 &lt;code&gt;:unless&lt;/code&gt; 옵션을 제어하기 위해 전달 될 수있는 콜백이 생략되는 경우.</target>
        </trans-unit>
        <trans-unit id="deb646b4c9c55af22c9f419fa4caf7a31b0785fd" translate="yes" xml:space="preserve">
          <source>Skip bootsnap gem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbede759fc9b377db92c88abeaa904b32c23992" translate="yes" xml:space="preserve">
          <source>Skip source control .keep files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523eb594598027c80b77845ca24a1093781b6d08" translate="yes" xml:space="preserve">
          <source>Skip system test files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de1111cf25a39ac8ab18a0f5d9389275d6d6e8d" translate="yes" xml:space="preserve">
          <source>Skip test files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a446279c092b07084da578513b46ba23f516da11" translate="yes" xml:space="preserve">
          <source>Skip turbolinks gem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1ef9f1ecc8b1a5248ace834dc8c7953b889c40" translate="yes" xml:space="preserve">
          <source>Skipping Callbacks</source>
          <target state="translated">콜백 건너 뛰기</target>
        </trans-unit>
        <trans-unit id="3de3554466187c5df8509ac5d1f77fad67b22efd" translate="yes" xml:space="preserve">
          <source>Skipping Validations</source>
          <target state="translated">검증 건너 뛰기</target>
        </trans-unit>
        <trans-unit id="0b8d3bff7b282e8424f968f9e948b9dc2006e7fb" translate="yes" xml:space="preserve">
          <source>Slicing</source>
          <target state="translated">Slicing</target>
        </trans-unit>
        <trans-unit id="8d2b2d015bbba4712c276518940d0fde148920d4" translate="yes" xml:space="preserve">
          <source>Small macro to add ruby as an option to the generator with proper default value plus an instance helper method called shebang.</source>
          <target state="translated">적절한 기본값과 shebang이라는 인스턴스 헬퍼 메소드를 사용하여 생성기에 옵션으로 루비를 추가하는 작은 매크로.</target>
        </trans-unit>
        <trans-unit id="bacca391addb1d5ea01320b0aefde7a8812344ed" translate="yes" xml:space="preserve">
          <source>Sneakers</source>
          <target state="translated">Sneakers</target>
        </trans-unit>
        <trans-unit id="18283ebb9704237459b661e8eea133ede6aaa231" translate="yes" xml:space="preserve">
          <source>Sneakers adapter for Active Job</source>
          <target state="translated">활동적인 작업을위한 스니커즈 어댑터</target>
        </trans-unit>
        <trans-unit id="2bf6d1f199a6352eae4a43c353049a14516fa1ba" translate="yes" xml:space="preserve">
          <source>Sniff the cookie in an insecure network. A wireless LAN can be an example of such a network. In an unencrypted wireless LAN, it is especially easy to listen to the traffic of all connected clients. For the web application builder this means to &lt;em&gt;provide a secure connection over SSL&lt;/em&gt;. In Rails 3.1 and later, this could be accomplished by always forcing SSL connection in your application config file:</source>
          <target state="translated">안전하지 않은 네트워크에서 쿠키를 스니핑하십시오. 무선 LAN은 이러한 네트워크의 예일 수 있습니다. 암호화되지 않은 무선 LAN에서는 연결된 모든 클라이언트의 트래픽을 듣는 것이 특히 쉽습니다. 웹 응용 프로그램 빌더의 경우 이는 &lt;em&gt;SSL을 통한 보안 연결&lt;/em&gt; 을 &lt;em&gt;제공&lt;/em&gt; 한다는 의미 입니다. Rails 3.1 이상에서는 항상 애플리케이션 설정 파일에서 SSL 연결을 강제 실행하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36a22d776331316c2fe1fdfe4a2d0ec66f399cc2" translate="yes" xml:space="preserve">
          <source>So &lt;em&gt;attack vectors for Header Injection are based on the injection of CRLF characters in a header field.&lt;/em&gt; And what could an attacker do with a false redirection? They could redirect to a phishing site that looks the same as yours, but ask to login again (and sends the login credentials to the attacker). Or they could install malicious software through browser security holes on that site. Rails 2.1.2 escapes these characters for the Location field in the &lt;code&gt;redirect_to&lt;/code&gt; method. &lt;em&gt;Make sure you do it yourself when you build other header fields with user input.&lt;/em&gt;</source>
          <target state="translated">따라서 &lt;em&gt;헤더 삽입에 대한 공격 벡터는 헤더 필드에 CRLF 문자를 주입하는 것을 기반으로합니다. &lt;/em&gt;그리고 침입자는 잘못된 리디렉션으로 무엇을 할 수 있습니까? 그들은 귀하와 동일한 피싱 사이트로 리디렉션 할 수 있지만 다시 로그인을 요청하고 로그인 자격 증명을 공격자에게 보냅니다. 또는 해당 사이트의 브라우저 보안 허점을 통해 악성 소프트웨어를 설치할 수 있습니다. Rails 2.1.2는 &lt;code&gt;redirect_to&lt;/code&gt; 메소드 의 Location 필드에서이 문자들을 이스케이프합니다 . &lt;em&gt;사용자 입력으로 다른 헤더 필드를 만들 때 직접 수행해야합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0341fb32c07b4244b1e700e080f6ed54be0fa999" translate="yes" xml:space="preserve">
          <source>So far, we've covered the &quot;R&quot; (Read) of CRUD. We will eventually cover the &quot;C&quot; (Create), &quot;U&quot; (Update), and &quot;D&quot; (Delete). As you might have guessed, we will do so by adding new routes, controller actions, and views. Whenever we have such a combination of routes, controller actions, and views that work together to perform CRUD operations on an entity, we call that entity a &lt;em&gt;resource&lt;/em&gt;. For example, in our application, we would say an article is a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6885f961d7c10dbcb6644a4b6b8c3888d7cbac" translate="yes" xml:space="preserve">
          <source>So far, we've discussed routes, controllers, actions, and views. All of these are typical pieces of a web application that follows the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC (Model-View-Controller)&lt;/a&gt; pattern. MVC is a design pattern that divides the responsibilities of an application to make it easier to reason about. Rails follows this design pattern by convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1fdd6bb559ec92207c6b513feaf5f8ec58bd9d" translate="yes" xml:space="preserve">
          <source>So first, let's add the delete link in the &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; partial:</source>
          <target state="translated">먼저 &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; 부분에 삭제 링크를 추가해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="3e659a4aeeb3a24ba8d4616e7f9ee1e37e219754" translate="yes" xml:space="preserve">
          <source>So first, we'll wire up the Article show template (&lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;) to let us make a new comment:</source>
          <target state="translated">먼저 기사 표시 템플릿 ( &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; )을 연결하여 새로운 의견을 제시합니다.</target>
        </trans-unit>
        <trans-unit id="663030613cba72da1300efdd122528c3de899769" translate="yes" xml:space="preserve">
          <source>So for example, if you are sending this JSON content:</source>
          <target state="translated">예를 들어이 JSON 컨텐츠를 보내는 경우 :</target>
        </trans-unit>
        <trans-unit id="547166c4574d2fdd3323e5154b3505de54f7c665" translate="yes" xml:space="preserve">
          <source>So that &lt;code&gt;self&lt;/code&gt;&lt;code&gt;acts_like?(:time)&lt;/code&gt;.</source>
          <target state="translated">그래서 &lt;code&gt;self&lt;/code&gt; &lt;code&gt;acts_like?(:time)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a82119b5a025f1d8592133ca05e639acbc3d5dc" translate="yes" xml:space="preserve">
          <source>So that would give you:</source>
          <target state="translated">그래서 그것은 당신에게 줄 것입니다 :</target>
        </trans-unit>
        <trans-unit id="6f9425cf993740ce8dcb66dd0524b5038b917c3c" translate="yes" xml:space="preserve">
          <source>So the payload is in the style attribute. But there are no quotes allowed in the payload, because single and double quotes have already been used. But JavaScript has a handy &lt;code&gt;eval()&lt;/code&gt; function which executes any string as code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d448448d8f1156262d386aefdd4a8656b26de5" translate="yes" xml:space="preserve">
          <source>So the payload is in the style attribute. But there are no quotes allowed in the payload, because single and double quotes have already been used. But JavaScript has a handy eval() function which executes any string as code.</source>
          <target state="translated">따라서 페이로드는 스타일 속성에 있습니다. 그러나 작은 따옴표와 큰 따옴표가 이미 사용되었으므로 페이로드에 따옴표가 허용되지 않습니다. 그러나 JavaScript에는 모든 문자열을 코드로 실행하는 편리한 eval () 함수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="459da2e04394151d279408b1b04fc4d6e076c8ec" translate="yes" xml:space="preserve">
          <source>So the values are scoped within the Thread.current space under the class name of the module.</source>
          <target state="translated">따라서 값은 Thread.current 공간 내에서 모듈의 클래스 이름 아래에 있습니다.</target>
        </trans-unit>
        <trans-unit id="269ba714c689e29a9952e870c5b88c37ad7d462e" translate="yes" xml:space="preserve">
          <source>So this example for rendering all the products:</source>
          <target state="translated">따라서 모든 제품을 렌더링하는 예제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5c22d762559bdf43a7b1431eba21c24832dbe598" translate="yes" xml:space="preserve">
          <source>So when passing such a model record, Rails infers the URL and method.</source>
          <target state="translated">따라서 그러한 모델 레코드를 전달할 때 Rails는 URL과 메소드를 유추합니다.</target>
        </trans-unit>
        <trans-unit id="d7cd0d59ad93af98a63ca031c0d0dd6706d7280e" translate="yes" xml:space="preserve">
          <source>So you specify the object you want to be messaged on a given callback. When that callback is triggered, the object has a method by the name of the callback messaged. You can make these callbacks more flexible by passing in other initialization data such as the name of the attribute to work with:</source>
          <target state="translated">따라서 주어진 콜백에서 메시지를 보내려는 객체를 지정합니다. 해당 콜백이 트리거되면 객체는 메시지를 보낸 콜백 이름으로 메소드를 갖습니다. 작업 할 속성 이름과 같은 다른 초기화 데이터를 전달하여 이러한 콜백을보다 유연하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eba727693650ff1f4048d128ae76034326618e44" translate="yes" xml:space="preserve">
          <source>So, all of the following equivalent lookups will return the &lt;code&gt;:short&lt;/code&gt; date format &lt;code&gt;&quot;%b %d&quot;&lt;/code&gt;:</source>
          <target state="translated">따라서 다음과 같은 동등한 조회는 모두 &lt;code&gt;:short&lt;/code&gt; 날짜 형식 &lt;code&gt;&quot;%b %d&quot;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6d760144cbefdaa9df3aaa55690f762154f3f82d" translate="yes" xml:space="preserve">
          <source>So, for example, instead of the default error message &lt;code&gt;&quot;cannot be blank&quot;&lt;/code&gt; you could use the attribute name like this : &lt;code&gt;&quot;Please fill in your %{attribute}&quot;&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 기본 오류 메시지 &lt;code&gt;&quot;cannot be blank&quot;&lt;/code&gt; 대신 다음과 같은 속성 이름을 사용할 수 있습니다. &lt;code&gt;&quot;Please fill in your %{attribute}&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1b3fadcf15fa5f26208625f190c75c819296322" translate="yes" xml:space="preserve">
          <source>So, in the previous example, if &lt;code&gt;PostsController&lt;/code&gt; is not defined when the file is interpreted Rails autoloading is not going to be triggered, Ruby will just define the controller.</source>
          <target state="translated">따라서 이전 예제 에서 파일 해석시 &lt;code&gt;PostsController&lt;/code&gt; 가 정의되지 않은 경우 Rails 자동로드가 트리거되지 않을 경우 Ruby는 컨트롤러를 정의하기 만합니다.</target>
        </trans-unit>
        <trans-unit id="eb0bdfb16aef90abc63d52423dc49bf9469d8ea8" translate="yes" xml:space="preserve">
          <source>So, in the process of &lt;em&gt;internationalizing&lt;/em&gt; your Rails application you have to:</source>
          <target state="translated">따라서 Rails 애플리케이션을 &lt;em&gt;국제화&lt;/em&gt; 하는 과정에서 다음을 수행 해야합니다.</target>
        </trans-unit>
        <trans-unit id="081ae573fc7c5d6538af8dc43c96cde33f2a9a2f" translate="yes" xml:space="preserve">
          <source>So, it is in general not equivalent to what Ruby would do in the same spot, had a real constant be evaluated.</source>
          <target state="translated">따라서 일반적으로 루비가 동일한 지점에서 수행하는 것과 동등하지 않으며 실제 상수가 평가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f565891e9fc28f9796df86cada91d1f283e16140" translate="yes" xml:space="preserve">
          <source>So, it not only doesn't end in &lt;code&gt;A&lt;/code&gt;, which does not even belong to the nesting, but it also contains &lt;code&gt;X::Y&lt;/code&gt;, which is independent from &lt;code&gt;A::B&lt;/code&gt;.</source>
          <target state="translated">따라서 중첩으로도 포함되지 않은 &lt;code&gt;A&lt;/code&gt; 로 끝나는 것이 아니라 &lt;code&gt;A::B&lt;/code&gt; 독립적 인 &lt;code&gt;X::Y&lt;/code&gt; 도 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="9166402d637b4c986215860aa35b4aca8fb609bd" translate="yes" xml:space="preserve">
          <source>So, let's add a typical &lt;code&gt;destroy&lt;/code&gt; action to &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;, below the &lt;code&gt;update&lt;/code&gt; action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac24190b05f32618eeb318196ff4e4c2cd2a220" translate="yes" xml:space="preserve">
          <source>So, let's internationalize a simple Rails application from the ground up in the next chapters!</source>
          <target state="translated">다음 장에서 간단한 Rails 애플리케이션을 처음부터 국제화 해 봅시다!</target>
        </trans-unit>
        <trans-unit id="d61fa6718d92ad75dade88c21c785dacafcbe980" translate="yes" xml:space="preserve">
          <source>Solutions to common autoloading gotchas</source>
          <target state="translated">일반적인 자동 로딩 문제 해결</target>
        </trans-unit>
        <trans-unit id="639e2aafc30e6bd1823b94eef6efe9ce22e7c867" translate="yes" xml:space="preserve">
          <source>Some Rack servers concatenate repeated headers, like &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2&quot;&gt;HTTP RFC 2616&lt;/a&gt; requires. Some Rack servers simply drop preceding headers, and only report the value that was &lt;a href=&quot;http://andre.arko.net/2011/12/26/repeated-headers-and-ruby-web-servers&quot;&gt;given in the last header&lt;/a&gt;. If you are behind multiple proxy servers (like NGINX to HAProxy to Unicorn) then you should test your Rack server to make sure your data is good.</source>
          <target state="translated">일부 랙 서버는 &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2&quot;&gt;HTTP RFC 2616에&lt;/a&gt; 필요한 것과 같이 반복되는 헤더를 연결 합니다. 일부 랙 서버는 단순히 선행 헤더를 삭제 &lt;a href=&quot;http://andre.arko.net/2011/12/26/repeated-headers-and-ruby-web-servers&quot;&gt;하고 마지막 헤더&lt;/a&gt; 에 제공된 값만보고합니다 . 여러 프록시 서버 뒤에있는 경우 (NGINX에서 HAProxy에서 Unicorn로) 랙 서버를 테스트하여 데이터가 양호한 지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="76e0a05cfea308474c8e6016384fc5f8fe3a6814" translate="yes" xml:space="preserve">
          <source>Some Rack servers concatenate repeated headers, like &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2&quot;&gt;HTTP RFC 2616&lt;/a&gt; requires. Some Rack servers simply drop preceding headers, and only report the value that was &lt;a href=&quot;https://andre.arko.net/2011/12/26/repeated-headers-and-ruby-web-servers&quot;&gt;given in the last header&lt;/a&gt;. If you are behind multiple proxy servers (like NGINX to HAProxy to Unicorn) then you should test your Rack server to make sure your data is good.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f2e4c3e2d9250a50f0ec9c6dfbc876f87186a2" translate="yes" xml:space="preserve">
          <source>Some adapters may support additional options; see the adapter specific API docs for further information.</source>
          <target state="translated">일부 어댑터는 추가 옵션을 지원할 수 있습니다. 자세한 정보는 어댑터 별 API 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e02d0ea68388f1a5aca6f6331bd12fb3c073f1f8" translate="yes" xml:space="preserve">
          <source>Some cache implementation may optimize this method.</source>
          <target state="translated">일부 캐시 구현은이 방법을 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22a99ee78a464d23e413764971063331ab262a92" translate="yes" xml:space="preserve">
          <source>Some commands cannot be reversed. If you care to define how to move up and down in these cases, you should define the &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; methods as before.</source>
          <target state="translated">일부 명령은 되돌릴 수 없습니다. 당신이 정의하는 신경 경우 어떻게 이동하고 이러한 경우 아래로, 당신은 정의해야합니다 &lt;code&gt;up&lt;/code&gt; 및 &lt;code&gt;down&lt;/code&gt; 이전과 방법을.</target>
        </trans-unit>
        <trans-unit id="acbccdbf68446579681db1db9f645f4c921a89bd" translate="yes" xml:space="preserve">
          <source>Some common modules you might want to add:</source>
          <target state="translated">추가하려는 몇 가지 일반적인 모듈 :</target>
        </trans-unit>
        <trans-unit id="2ccbc56884e438c261868175bf3abdb7682cbc3b" translate="yes" xml:space="preserve">
          <source>Some commonly used &lt;a href=&quot;#column-modifiers&quot;&gt;type modifiers&lt;/a&gt; can be passed directly on the command line. They are enclosed by curly braces and follow the field type:</source>
          <target state="translated">일반적으로 사용되는 일부 &lt;a href=&quot;#column-modifiers&quot;&gt;유형 수정자는&lt;/a&gt; 명령 행에서 직접 전달 될 수 있습니다. 중괄호로 묶고 필드 유형을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="abdd0870e7d5561056334a82c8be6bd690fee6af" translate="yes" xml:space="preserve">
          <source>Some drivers require browser capabilities to be passed as a block instead of through the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">일부 드라이버는 &lt;code&gt;options&lt;/code&gt; 해시 대신 브라우저 기능을 블록으로 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5bd0dc1b029806cd1653e46816c3d73177f3c7c5" translate="yes" xml:space="preserve">
          <source>Some engines choose to use this file to put global configuration options for their engine. It's a relatively good idea, so if you want to offer configuration options, the file where your engine's &lt;code&gt;module&lt;/code&gt; is defined is perfect for that. Place the methods inside the module and you'll be good to go.</source>
          <target state="translated">일부 엔진은이 파일을 사용하여 엔진에 대한 전역 구성 옵션을 선택합니다. 상대적으로 좋은 아이디어이므로 구성 옵션을 제공하려면 엔진 &lt;code&gt;module&lt;/code&gt; 이 정의 된 파일 이 적합합니다. 메소드를 모듈 안에 넣으면 좋을 것입니다.</target>
        </trans-unit>
        <trans-unit id="0b0b7b39663d630836476f0f8e55ebeb35233fd6" translate="yes" xml:space="preserve">
          <source>Some extensions can only be made to work with knowledge of the association's internals. Extensions can access relevant state using the following methods (where &lt;code&gt;items&lt;/code&gt; is the name of the association):</source>
          <target state="translated">일부 확장은 협회 내부에 대한 지식으로 만 작동하도록 할 수 있습니다. 확장은 다음 방법을 사용하여 관련 상태에 액세스 할 수 있습니다 (여기서 &lt;code&gt;items&lt;/code&gt; 은 연관 이름 임).</target>
        </trans-unit>
        <trans-unit id="012b0b0b7019094a8d3703407837ccd5a4d5bd6a" translate="yes" xml:space="preserve">
          <source>Some features of Action View are tied to Active Record, but that doesn't mean Action View depends on Active Record. Action View is an independent package that can be used with any sort of Ruby libraries.</source>
          <target state="translated">동작보기의 일부 기능은 활성 레코드와 연결되어 있지만 동작보기가 활성 레코드에 의존하는 것은 아닙니다. Action View는 모든 종류의 Ruby 라이브러리와 함께 사용할 수있는 독립적 인 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="1ce42bce8b7533ed61df9cff307f393368b37bbf" translate="yes" xml:space="preserve">
          <source>Some implementations may not support all methods beyond the basic cache methods of &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;exist?&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt;.</source>
          <target state="translated">일부 구현은 기본 캐시 메소드 인 &lt;code&gt;fetch&lt;/code&gt; , &lt;code&gt;write&lt;/code&gt; , &lt;code&gt;read&lt;/code&gt; 등의 모든 메소드를 지원하지 않을 수 &lt;code&gt;exist?&lt;/code&gt; 을 &lt;code&gt;delete&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c57ad4221b4b2489b3697c146e6a288361c268c2" translate="yes" xml:space="preserve">
          <source>Some implementations may not support this method.</source>
          <target state="translated">일부 구현에서는이 방법을 지원하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cc2b40a58e318609a42ad261e97c48e83ff6ee4" translate="yes" xml:space="preserve">
          <source>Some non-image blobs can be previewed: that is, they can be presented as images. A video blob can be previewed by extracting its first frame, and a PDF blob can be previewed by extracting its first page.</source>
          <target state="translated">이미지가 아닌 일부 얼룩을 미리 볼 수 있습니다. 즉, 이미지로 표시 할 수 있습니다. 첫 번째 프레임을 추출하여 비디오 블롭을 미리 볼 수 있고 첫 번째 페이지를 추출하여 PDF 블롭을 미리 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fadf5415820639e14342b0da5f1c3db366eaa54" translate="yes" xml:space="preserve">
          <source>Some non-image files can be previewed: that is, they can be presented as images. For example, a video file can be previewed by extracting its first frame. Out of the box, Active Storage supports previewing videos and PDF documents.</source>
          <target state="translated">이미지가 아닌 일부 파일을 미리 볼 수 있습니다. 즉, 이미지로 표시 할 수 있습니다. 예를 들어 비디오 파일은 첫 번째 프레임을 추출하여 미리 볼 수 있습니다. 기본적으로 Active Storage는 비디오 및 PDF 문서 미리보기를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="981df9d15870636ee442fc3b4fa072adfb8f1d63" translate="yes" xml:space="preserve">
          <source>Some non-image files can be previewed: that is, they can be presented as images. For example, a video file can be previewed by extracting its first frame. Out of the box, Active Storage supports previewing videos and PDF documents. To create a link to a lazily-generated preview, use the attachment's &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Blob/Representable.html#method-i-preview&quot;&gt;&lt;code&gt;preview&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a4fb7a899ec215af9678a4164bc8fde5777012" translate="yes" xml:space="preserve">
          <source>Some other tools to go further with the translation process of your application</source>
          <target state="translated">응용 프로그램의 번역 프로세스를 진행하는 다른 도구</target>
        </trans-unit>
        <trans-unit id="a324dea7fc9a2e196bcaee0d8c8b6b1102e7d8a8" translate="yes" xml:space="preserve">
          <source>Some parts of Rails can also be configured externally by supplying environment variables. The following environment variables are recognized by various parts of Rails:</source>
          <target state="translated">환경 변수를 제공하여 Rails의 일부를 외부에서 구성 할 수도 있습니다. 다음 환경 변수는 Rails의 다양한 부분에서 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="0e63f31c83cfffa801ba4ac52c8e5ed159e38583" translate="yes" xml:space="preserve">
          <source>Some parts of your application, notably routing, are not yet set up at the point where the &lt;code&gt;after_initialize&lt;/code&gt; block is called.</source>
          <target state="translated">애플리케이션의 일부, 특히 라우팅은 &lt;code&gt;after_initialize&lt;/code&gt; 블록이 호출 되는 시점에 아직 설정되지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="31f92cc3efa12a735cdb87dc805fef4752ac97b2" translate="yes" xml:space="preserve">
          <source>Some projects want something like &lt;code&gt;app/api/base.rb&lt;/code&gt; to define &lt;code&gt;API::Base&lt;/code&gt;, and add &lt;code&gt;app&lt;/code&gt; to the autoload paths to accomplish that in &lt;code&gt;classic&lt;/code&gt; mode. Since Rails adds all subdirectories of &lt;code&gt;app&lt;/code&gt; to the autoload paths automatically, we have another situation in which there are nested root directories, so that setup no longer works. Similar principle we explained above with &lt;code&gt;concerns&lt;/code&gt;.</source>
          <target state="translated">일부 프로젝트는 &lt;code&gt;app/api/base.rb&lt;/code&gt; 와 같은 &lt;code&gt;API::Base&lt;/code&gt; 를 정의 하고 자동 모드 에 &lt;code&gt;app&lt;/code&gt; 을 추가 하여 &lt;code&gt;classic&lt;/code&gt; 모드 에서이를 수행 합니다. Rails는 자동로드 경로 에 &lt;code&gt;app&lt;/code&gt; 모든 하위 디렉토리를 자동으로 추가하기 때문에 루트 디렉토리가 중첩되어 설정이 더 이상 작동하지 않는 또 다른 상황이 있습니다. 비슷한 원리로 우리는 위에서 &lt;code&gt;concerns&lt;/code&gt; 가지고 설명했다 .</target>
        </trans-unit>
        <trans-unit id="49d43d0bd985a9db78999c33d930cad73582dd4f" translate="yes" xml:space="preserve">
          <source>Some transformations are destructive in a manner that cannot be reversed. Migrations of that kind should raise an &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; exception in their &lt;code&gt;down&lt;/code&gt; method.</source>
          <target state="translated">일부 변형은 되돌릴 수없는 방식으로 파괴적입니다. 이러한 종류의 마이그레이션은 &lt;code&gt;down&lt;/code&gt; 메소드 에서 &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; 예외를 발생시켜야 합니다 .</target>
        </trans-unit>
        <trans-unit id="2156219cd3ed983c5611b3829e82177a4f9628ec" translate="yes" xml:space="preserve">
          <source>Sometimes application code requires that callbacks execute in a specific order. For example, a &lt;code&gt;before_destroy&lt;/code&gt; callback (&lt;code&gt;log_children&lt;/code&gt; in this case) should be executed before records in the &lt;code&gt;children&lt;/code&gt; association are destroyed by the &lt;code&gt;dependent: :destroy&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1175d58ab8cc83e11600e1579e07f73192d1c005" translate="yes" xml:space="preserve">
          <source>Sometimes inexperienced developers think of &lt;code&gt;redirect_to&lt;/code&gt; as a sort of &lt;code&gt;goto&lt;/code&gt; command, moving execution from one place to another in your Rails code. This is &lt;em&gt;not&lt;/em&gt; correct. Your code stops running and waits for a new request from the browser. It just happens that you've told the browser what request it should make next, by sending back an HTTP 302 status code.</source>
          <target state="translated">경험이 부족한 개발자는 &lt;code&gt;redirect_to&lt;/code&gt; 를 일종의 &lt;code&gt;goto&lt;/code&gt; 명령 으로 생각 하여 Rails 코드에서 한 곳에서 다른 곳으로 실행을 이동합니다. 이것은 정확 &lt;em&gt;하지 않습니다&lt;/em&gt; . 코드 실행이 중지되고 브라우저의 새 요청을 기다립니다. HTTP 302 상태 코드를 다시 보내 브라우저에 다음에 어떤 요청을해야하는지 알려주었습니다.</target>
        </trans-unit>
        <trans-unit id="3c04851e2df3606facf9426c9ac1a3470704789a" translate="yes" xml:space="preserve">
          <source>Sometimes it is not possible or convenient to declare the valid keys of a hash parameter or its internal structure. Just map to an empty hash:</source>
          <target state="translated">해시 매개 변수 또는 내부 구조의 유효한 키를 선언하는 것이 불가능하거나 편리하지 않은 경우가 있습니다. 빈 해시로 매핑하십시오.</target>
        </trans-unit>
        <trans-unit id="e1a5aac90a7beeb064ddaa7cfd604a5c2715cb48" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to have access to the owner object when building the query. The owner is passed as a parameter to the block. For example, the following association would find all events that occur on the user's birthday:</source>
          <target state="translated">때로는 쿼리를 작성할 때 소유자 객체에 액세스하는 것이 유용합니다. 소유자는 블록에 매개 변수로 전달됩니다. 예를 들어, 다음 연관은 사용자의 생일에 발생하는 모든 이벤트를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="2bbd92c08db2e00a86598d29d2a210739404e13a" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to have multiple validations use one condition. It can be easily achieved using &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-with_options&quot;&gt;&lt;code&gt;with_options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c0f7c826271acfb85dc8d01def71f45cc6cf0" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to have multiple validations use one condition. It can be easily achieved using &lt;code&gt;with_options&lt;/code&gt;.</source>
          <target state="translated">여러 검증에서 하나의 조건을 사용하는 것이 유용한 경우도 있습니다. &lt;code&gt;with_options&lt;/code&gt; 를 사용하면 쉽게 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="806bfa8f6c9c40953e9c40e5b929ecaf7feb9b46" translate="yes" xml:space="preserve">
          <source>Sometimes it will make sense to validate an object only when a given predicate is satisfied. You can do that by using the &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; options, which can take a symbol, a &lt;code&gt;Proc&lt;/code&gt; or an &lt;code&gt;Array&lt;/code&gt;. You may use the &lt;code&gt;:if&lt;/code&gt; option when you want to specify when the validation &lt;strong&gt;should&lt;/strong&gt; happen. If you want to specify when the validation &lt;strong&gt;should not&lt;/strong&gt; happen, then you may use the &lt;code&gt;:unless&lt;/code&gt; option.</source>
          <target state="translated">주어진 술어가 만족 될 때만 오브젝트의 유효성을 검증하는 것이 이치에 맞습니다. 당신은을 사용하여 해당 작업을 수행 할 수 있습니다 &lt;code&gt;:if&lt;/code&gt; 와 &lt;code&gt;:unless&lt;/code&gt; 상징하는 취할 수있는 옵션, &lt;code&gt;Proc&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; . 당신은을 사용할 수 있습니다 &lt;code&gt;:if&lt;/code&gt; 에는 유효성 검사시기를 지정하고자 할 때 선택 &lt;strong&gt;해야&lt;/strong&gt; 발생합니다. 유효성 검사 &lt;strong&gt;가 수행되지 않아야&lt;/strong&gt; 하는시기를 지정 하려면 &lt;code&gt;:unless&lt;/code&gt; 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0fa51c3c43cae44b1f6487b1407dbb7c4858da4a" translate="yes" xml:space="preserve">
          <source>Sometimes it's desirable to filter out from log files some sensitive locations your application is redirecting to. You can do that by using the &lt;code&gt;config.filter_redirect&lt;/code&gt; configuration option:</source>
          <target state="translated">때로는 응용 프로그램이 리디렉션되는 민감한 위치를 로그 파일에서 필터링하는 것이 바람직합니다. &lt;code&gt;config.filter_redirect&lt;/code&gt; 구성 옵션 을 사용하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed5b349ad929e1f8b99a8a5db115fb944e252d8b" translate="yes" xml:space="preserve">
          <source>Sometimes the callback methods that you'll write will be useful enough to be reused by other models. Active Record makes it possible to create classes that encapsulate the callback methods, so it becomes very easy to reuse them.</source>
          <target state="translated">때로는 작성하는 콜백 메소드가 다른 모델에서 재사용하기에 충분히 유용 할 수 있습니다. Active Record를 사용하면 콜백 메소드를 캡슐화하는 클래스를 작성할 수 있으므로 재사용이 매우 쉬워집니다.</target>
        </trans-unit>
        <trans-unit id="8e335c0390b6a2c3a20532aa9646d8b2206c0344" translate="yes" xml:space="preserve">
          <source>Sometimes the callback methods that you'll write will be useful enough to be reused by other models. Active Record makes it possible to create classes that encapsulate the callback methods, so they can be reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaab67ce17ac80d9d95e7c90dfdd8acc5415155" translate="yes" xml:space="preserve">
          <source>Sometimes the code needs that the callbacks execute in a specific order. For example, a &lt;code&gt;before_destroy&lt;/code&gt; callback (&lt;code&gt;log_children&lt;/code&gt; in this case) should be executed before the children get destroyed by the &lt;code&gt;dependent: :destroy&lt;/code&gt; option.</source>
          <target state="translated">때로는 코드에서 콜백을 특정 순서로 실행해야합니다. 예를 들어, 자식이 &lt;code&gt;dependent: :destroy&lt;/code&gt; 옵션에 의해 파괴되기 전에 &lt;code&gt;before_destroy&lt;/code&gt; 콜백 ( 이 경우 &lt;code&gt;log_children&lt;/code&gt; )을 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bb93a9df230055d711ba16d0ffbc3138d0ff4fab" translate="yes" xml:space="preserve">
          <source>Sometimes we may need more information about each error beside its message. Each error is encapsulated as an &lt;code&gt;ActiveModel::Error&lt;/code&gt; object, and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Errors.html#method-i-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; method is the most common way of access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b813be917edfa92b272904aff35a7c104b222861" translate="yes" xml:space="preserve">
          <source>Sometimes we want to cache response, for example a static page, that never gets expired. To achieve this, we can use &lt;code&gt;http_cache_forever&lt;/code&gt; helper and by doing so browser and proxies will cache it indefinitely.</source>
          <target state="translated">때로는 만료되지 않는 정적 페이지와 같은 응답을 캐시하려고합니다. 이를 위해 &lt;code&gt;http_cache_forever&lt;/code&gt; 헬퍼를 사용 하면 브라우저와 프록시가 무기한으로 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="33431bbc0d57c3220576993d932bba29f50ce791" translate="yes" xml:space="preserve">
          <source>Sometimes when submitting data to an external resource, like a payment gateway, the fields that can be used in the form are limited by an external API and it may be undesirable to generate an &lt;code&gt;authenticity_token&lt;/code&gt;. To not send a token, simply pass &lt;code&gt;false&lt;/code&gt; to the &lt;code&gt;:authenticity_token&lt;/code&gt; option:</source>
          <target state="translated">지불 게이트웨이와 같은 외부 자원에 데이터를 제출할 때 양식에 사용할 수있는 필드가 외부 API에 의해 제한되므로 &lt;code&gt;authenticity_token&lt;/code&gt; 을 생성하는 것이 바람직하지 않을 수 있습니다 . 토큰을 보내지 않으려면 단순히 &lt;code&gt;:authenticity_token&lt;/code&gt; 옵션에 &lt;code&gt;false&lt;/code&gt; 를 전달 하십시오 .</target>
        </trans-unit>
        <trans-unit id="10d15bed3374c2996525b94716e6774265d7976f" translate="yes" xml:space="preserve">
          <source>Sometimes you do not want to subscribe to an event for the entire life of the application. There are two ways to unsubscribe.</source>
          <target state="translated">때로는 응용 프로그램의 전체 수명 동안 이벤트에 가입하고 싶지 않습니다. 탈퇴하는 방법에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cbff01064b6caff4f8a4c2aebd7f80982684010" translate="yes" xml:space="preserve">
          <source>Sometimes you don't care about the content of the fixtures as much as you care about the volume. In these cases, you can mix &lt;code&gt;ERB&lt;/code&gt; in with your YAML fixtures to create a bunch of fixtures for load testing, like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb586e1026d32e3f563113c8cd0bf37268edb23" translate="yes" xml:space="preserve">
          <source>Sometimes you don't care about the content of the fixtures as much as you care about the volume. In these cases, you can mix ERB in with your YAML fixtures to create a bunch of fixtures for load testing, like:</source>
          <target state="translated">때때로 당신은 당신이 볼륨에 대한 관심만큼 조명기의 내용에 관심이 없습니다. 이 경우 ERB를 YAML 픽스처와 혼합하여 다음과 같이로드 테스트를위한 픽스처를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b243f95e94a7888bcb94a26edb8be675e16266e7" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to isolate engine, but use helpers that are defined for it. If you want to share just a few specific helpers you can add them to application's helpers in ApplicationController:</source>
          <target state="translated">때로는 엔진을 분리하고 싶지만 정의 된 헬퍼를 사용하십시오. 몇 가지 특정 도우미 만 공유하려면 ApplicationController의 응용 프로그램 도우미에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26c5d5794e9c9ce569ca58a5af31be4618c8dec0" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to send a file to the user instead of rendering an HTML page. All controllers in Rails have the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/DataStreaming.html#method-i-send_data&quot;&gt;&lt;code&gt;send_data&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/DataStreaming.html#method-i-send_file&quot;&gt;&lt;code&gt;send_file&lt;/code&gt;&lt;/a&gt; methods, which will both stream data to the client. &lt;code&gt;send_file&lt;/code&gt; is a convenience method that lets you provide the name of a file on the disk and it will stream the contents of that file for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef44a6353c07c96f20fcbacbe8fec9be1c637614" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to send a file to the user instead of rendering an HTML page. All controllers in Rails have the &lt;code&gt;send_data&lt;/code&gt; and the &lt;code&gt;send_file&lt;/code&gt; methods, which will both stream data to the client. &lt;code&gt;send_file&lt;/code&gt; is a convenience method that lets you provide the name of a file on the disk and it will stream the contents of that file for you.</source>
          <target state="translated">때로는 HTML 페이지를 렌더링하는 대신 파일을 사용자에게 보내려고 할 수 있습니다. Rails의 모든 컨트롤러에는 &lt;code&gt;send_data&lt;/code&gt; 및 &lt;code&gt;send_file&lt;/code&gt; 메소드가 있으며,이 메소드는 모두 클라이언트로 데이터를 스트리밍합니다. &lt;code&gt;send_file&lt;/code&gt; 은 디스크에 파일 이름을 제공 할 수있는 편리한 방법이며 해당 파일의 내용을 스트리밍합니다.</target>
        </trans-unit>
        <trans-unit id="0e0379ea51bf56a083b447eac426a84eaf2d5f55" translate="yes" xml:space="preserve">
          <source>Sometimes you need to attach a file that doesn&amp;rsquo;t arrive via an HTTP request. For example, you may want to attach a file you generated on disk or downloaded from a user-submitted URL. You may also want to attach a fixture file in a model test. To do that, provide a Hash containing at least an open IO object and a filename:</source>
          <target state="translated">때로는 HTTP 요청을 통해 도착하지 않는 파일을 첨부해야합니다. 예를 들어 디스크에서 생성하거나 사용자가 제출 한 URL에서 다운로드 한 파일을 첨부 할 수 있습니다. 모델 테스트에서 조명기 파일을 첨부 할 수도 있습니다. 이를 위해서는 최소한 열린 IO 객체와 파일 이름을 포함하는 해시를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="fc8cba81e63b8e7aff4d169aaa87a5258fa54be4" translate="yes" xml:space="preserve">
          <source>Sometimes you need to cache a particular value or query result instead of caching view fragments. Rails' caching mechanism works great for storing &lt;strong&gt;any&lt;/strong&gt; kind of information.</source>
          <target state="translated">때때로 뷰 조각을 캐싱하는 대신 특정 값 또는 쿼리 결과를 캐시해야합니다. Rails의 캐싱 메커니즘은 &lt;strong&gt;모든&lt;/strong&gt; 종류의 정보 를 저장하는 데 효과적 입니다.</target>
        </trans-unit>
        <trans-unit id="64de16e91c52bfaa8ffdb8fcbb39548c8a5732ab" translate="yes" xml:space="preserve">
          <source>Sometimes you need to process a blob after it&amp;rsquo;s uploaded&amp;mdash;for example, to convert it to a different format. Use &lt;code&gt;ActiveStorage::Blob#download&lt;/code&gt; to read a blob&amp;rsquo;s binary data into memory:</source>
          <target state="translated">Blob을 업로드 한 후 다른 형식으로 변환하기 위해 Blob을 처리해야하는 경우가 있습니다. &lt;code&gt;ActiveStorage::Blob#download&lt;/code&gt; 를 사용 하여 blob의 이진 데이터를 메모리로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="c4489ab05d7eb1e6b3989303d36be2af005da633" translate="yes" xml:space="preserve">
          <source>Sometimes you need to process a blob after it&amp;rsquo;s uploaded&amp;mdash;for example, to convert it to a different format. Use the attachment's &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Blob.html#method-i-download&quot;&gt;&lt;code&gt;download&lt;/code&gt;&lt;/a&gt; method to read a blob&amp;rsquo;s binary data into memory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3ddb7670da52ddc35e9ee938e8e75ac77b4ba1" translate="yes" xml:space="preserve">
          <source>Sometimes you need to set up the session and cookie variables for a test. To do this just assign a value to the session or cookie collection:</source>
          <target state="translated">때로는 테스트를 위해 세션 및 쿠키 변수를 설정해야합니다. 이렇게하려면 세션 또는 쿠키 모음에 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="4aedae8b0dc510d858ac862cd1594adf848336cd" translate="yes" xml:space="preserve">
          <source>Sometimes you want to be able to read the raw attribute data without having the column-determined typecast run its course first. That can be done by using the &lt;code&gt;&amp;lt;attribute&amp;gt;_before_type_cast&lt;/code&gt; accessors that all attributes have. For example, if your Account model has a &lt;code&gt;balance&lt;/code&gt; attribute, you can call &lt;code&gt;account.balance_before_type_cast&lt;/code&gt; or &lt;code&gt;account.id_before_type_cast&lt;/code&gt;.</source>
          <target state="translated">때로는 열 결정된 typecast가 먼저 코스를 실행하지 않고 원시 속성 데이터를 읽을 수 있기를 원합니다. 모든 속성에있는 &lt;code&gt;&amp;lt;attribute&amp;gt;_before_type_cast&lt;/code&gt; 접근 자를 사용하면 됩니다. 예를 들어, 계정 모델에 &lt;code&gt;balance&lt;/code&gt; 속성 이있는 경우 &lt;code&gt;account.balance_before_type_cast&lt;/code&gt; 또는 &lt;code&gt;account.id_before_type_cast&lt;/code&gt; 를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49d4074beeb7c93559808203685fb780a8c50bd1" translate="yes" xml:space="preserve">
          <source>Sometimes you wish to show the name of the person instead of just their email address when they receive the email. The trick to doing that is to format the email address in the format &lt;code&gt;&quot;Full Name&quot; &amp;lt;email&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">이메일을받을 때 이메일 주소 대신 사람의 이름을 표시하려는 경우가 있습니다. 이를 수행하는 요령은 이메일 주소를 &lt;code&gt;&quot;Full Name&quot; &amp;lt;email&amp;gt;&lt;/code&gt; 형식으로 포맷하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="3c5d326b415afa5381e9efda17bd74fc0a4b1643" translate="yes" xml:space="preserve">
          <source>Sometimes you wish to show the name of the person instead of just their email address when they receive the email. You can use &lt;code&gt;email_address_with_name&lt;/code&gt; for that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9ab3dcf7dfac6150213638953cbbd774ea91ae" translate="yes" xml:space="preserve">
          <source>Sometimes you'll have template dependencies that can't be derived at all. This is typically the case when rendering happens in helpers. Here's an example:</source>
          <target state="translated">때로는 전혀 파생 될 수없는 템플릿 종속성이있을 수 있습니다. 이것은 일반적으로 도우미에서 렌더링이 발생하는 경우입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c21c99123bd84f91575af15fa475b039243781f1" translate="yes" xml:space="preserve">
          <source>Sometimes you'll have template dependencies that can't be derived at all. This is typically the case when you have template rendering that happens in helpers. Here's an example:</source>
          <target state="translated">때로는 전혀 파생 될 수없는 템플릿 종속성이있을 수 있습니다. 일반적으로 도우미에서 발생하는 템플릿 렌더링이있는 경우에 해당합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0298e15ef7fcf403fa4d119b20e04be1bf749936" translate="yes" xml:space="preserve">
          <source>Sometimes you'll want to add a column in a migration and populate it immediately after. In that case, you'll need to make a call to &lt;code&gt;Base#reset_column_information&lt;/code&gt; in order to ensure that the model has the latest column data from after the new column was added. Example:</source>
          <target state="translated">때때로 마이그레이션에 열을 추가하고 즉시 열을 채우려 고 할 수 있습니다. 이 경우 새 열을 추가 한 후 모델에 최신 열 데이터가 포함되도록 &lt;code&gt;Base#reset_column_information&lt;/code&gt; 을 호출해야합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="32a7a741888121e5bd8b161f350cf1dd152745ef" translate="yes" xml:space="preserve">
          <source>Sometimes your migration will do something which is just plain irreversible; for example, it might destroy some data. In such cases, you can raise &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; in your &lt;code&gt;down&lt;/code&gt; block. If someone tries to revert your migration, an error message will be displayed saying that it can't be done.</source>
          <target state="translated">때때로 이주는 돌이킬 수없는 단순한 일을 할 것입니다. 예를 들어 일부 데이터가 손상 될 수 있습니다. 이러한 경우 &lt;code&gt;down&lt;/code&gt; 블록 에서 &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; 을 올릴 수 있습니다 . 누군가 마이그레이션을 되돌리려 고하면 수행 할 수 없다는 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a5ab51b57e4805fb41bee91c53a83c9e91908662" translate="yes" xml:space="preserve">
          <source>Sometimes, you have a resource that clients always look up without referencing an ID. A common example, /profile always shows the profile of the currently logged in user. In this case, you can use a singular resource to map /profile (rather than /profile/:id) to the show action.</source>
          <target state="translated">때로는 클라이언트가 ID를 참조하지 않고 조회하는 리소스가 있습니다. 일반적인 예인 / profile은 항상 현재 로그인 한 사용자의 프로필을 보여줍니다. 이 경우 단일 자원을 사용하여 / profile / : id가 아닌 / profile을 show 조치에 맵핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="546121a7dab1a4264cb88f873279ee4930ab1d76" translate="yes" xml:space="preserve">
          <source>Sometimes, you have a resource that clients always look up without referencing an ID. A common example, /profile always shows the profile of the currently logged in user. In this case, you can use a singular resource to map /profile (rather than /profile/:id) to the show action:</source>
          <target state="translated">때로는 클라이언트가 ID를 참조하지 않고 조회하는 리소스가 있습니다. 일반적인 예인 / profile은 항상 현재 로그인 한 사용자의 프로필을 보여줍니다. 이 경우 단일 자원을 사용하여 / profile / : id 대신 / profile을 show 조치에 맵핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9821aa65e416c54fbfb0e34583b018fdb941aa5a" translate="yes" xml:space="preserve">
          <source>Sometimes, you have a resource that clients always look up without referencing an ID. For example, you would like &lt;code&gt;/profile&lt;/code&gt; to always show the profile of the currently logged in user. In this case, you can use a singular resource to map &lt;code&gt;/profile&lt;/code&gt; (rather than &lt;code&gt;/profile/:id&lt;/code&gt;) to the &lt;code&gt;show&lt;/code&gt; action:</source>
          <target state="translated">때로는 클라이언트가 ID를 참조하지 않고 조회하는 리소스가 있습니다. 예를 들어, &lt;code&gt;/profile&lt;/code&gt; 이 항상 현재 로그인 한 사용자의 프로필을 표시하도록하려고합니다. 이 경우, 당신은 매핑 할 단일 리소스를 사용할 수 있습니다 &lt;code&gt;/profile&lt;/code&gt; (보다는 &lt;code&gt;/profile/:id&lt;/code&gt; 받는 사람) &lt;code&gt;show&lt;/code&gt; 조치를 :</target>
        </trans-unit>
        <trans-unit id="0c22ba230a1ed66afa8072d7055673aae401ef35" translate="yes" xml:space="preserve">
          <source>Sometimes, you may not want or be able to compile assets on the production server. For instance, you may have limited write access to your production filesystem, or you may plan to deploy frequently without making any changes to your assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18588ba9588729a0bf11a0e540c18d32a4558c52" translate="yes" xml:space="preserve">
          <source>Sometimes, you may want to prevent some pages of your application to be visible on search sites like Google, Bing, Yahoo, or Duck Duck Go. The robots that index these sites will first analyze the &lt;code&gt;http://your-site.com/robots.txt&lt;/code&gt; file to know which pages it is allowed to index.</source>
          <target state="translated">때로는 응용 프로그램의 일부 페이지가 Google, Bing, Yahoo 또는 Duck Duck Go와 같은 검색 사이트에 표시되지 않도록 할 수 있습니다. 이러한 사이트를 색인하는 로봇은 먼저 &lt;code&gt;http://your-site.com/robots.txt&lt;/code&gt; 파일을 분석하여 색인을 생성 할 수있는 페이지를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e1e27c0054a21465319cde97e694530bd24339d2" translate="yes" xml:space="preserve">
          <source>Sometimes, you may want to share fields and behavior between different models. Let's say we have Car, Motorcycle, and Bicycle models. We will want to share the &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;price&lt;/code&gt; fields and some methods for all of them, but having some specific behavior for each, and separated controllers too.</source>
          <target state="translated">때로는 다른 모델간에 필드와 동작을 공유하려고 할 수 있습니다. 자동차, 오토바이 및 자전거 모델이 있다고 가정 해 봅시다. &lt;code&gt;color&lt;/code&gt; 및 &lt;code&gt;price&lt;/code&gt; 필드와 모든 방법에 대한 몇 가지 방법 을 공유하고 각각에 대해 특정 동작을 수행하고 컨트롤러를 분리하려고합니다.</target>
        </trans-unit>
        <trans-unit id="e6c51f9b6ef06a1464e380f603a5374986275129" translate="yes" xml:space="preserve">
          <source>Sooner or later, most Rails developers will see the error message &quot;Can only render or redirect once per action&quot;. While this is annoying, it's relatively easy to fix. Usually it happens because of a fundamental misunderstanding of the way that &lt;code&gt;render&lt;/code&gt; works.</source>
          <target state="translated">조만간 대부분의 Rails 개발자들은 &quot;작업 당 한 번만 렌더링하거나 리디렉션 할 수 있습니다&quot;라는 오류 메시지를 보게됩니다. 이것은 성가 시지만 비교적 쉽게 고칠 수 있습니다. 일반적으로 &lt;code&gt;render&lt;/code&gt; 작동 방식에 대한 근본적인 오해로 인해 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="7bdd165a481c7aa816d352fe33656feacc3c8d28" translate="yes" xml:space="preserve">
          <source>Sort through the various IP address headers, looking for the IP most likely to be the address of the actual remote client making this request.</source>
          <target state="translated">다양한 IP 주소 헤더를 정렬하여이 요청을하는 실제 원격 클라이언트의 주소 일 가능성이 가장 높은 IP를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="d09ba380a0c2361c460cc9a3ccaa945d28ef61c4" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor</source>
          <target state="translated">SourceAnnotationExtractor</target>
        </trans-unit>
        <trans-unit id="5482a68ef43c637689bec6a442a1d3acc636a786" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor#display</source>
          <target state="translated">SourceAnnotationExtractor#display</target>
        </trans-unit>
        <trans-unit id="e7a66f7425ddb187f9dcc8f8df06a20bcea69da6" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor#extract_annotations_from</source>
          <target state="translated">SourceAnnotationExtractor#extract_annotations_from</target>
        </trans-unit>
        <trans-unit id="fdc04db5109a2859337ac2b3ba6c5808566129db" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor#find</source>
          <target state="translated">SourceAnnotationExtractor#find</target>
        </trans-unit>
        <trans-unit id="b2636aa55dda5a020380bc878d9eac92b72e4302" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor#find_in</source>
          <target state="translated">SourceAnnotationExtractor#find_in</target>
        </trans-unit>
        <trans-unit id="6b27fad1615133c4a3cd64065f87ca1dbc3e97b9" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor#tag</source>
          <target state="translated">SourceAnnotationExtractor#tag</target>
        </trans-unit>
        <trans-unit id="927fb266f3e3360f474cd7a0665d263cc8a460fa" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation</source>
          <target state="translated">SourceAnnotationExtractor::Annotation</target>
        </trans-unit>
        <trans-unit id="ca3e27dbf340caff55cc11e0cf6fe57a55428525" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation#to_s</source>
          <target state="translated">SourceAnnotationExtractor::Annotation#to_s</target>
        </trans-unit>
        <trans-unit id="80ab6a0be76ce99b08d36c2d692dc9e96c509d22" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation::directories</source>
          <target state="translated">SourceAnnotationExtractor::Annotation::directories</target>
        </trans-unit>
        <trans-unit id="d1057a9993333a60ebfe1d1ae1310d55cdf0134e" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation::extensions</source>
          <target state="translated">SourceAnnotationExtractor::Annotation::extensions</target>
        </trans-unit>
        <trans-unit id="feed024322ee2a1069c0891c232ed9da6762ada3" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation::register_directories</source>
          <target state="translated">SourceAnnotationExtractor::Annotation::register_directories</target>
        </trans-unit>
        <trans-unit id="ad678d2fb4ccb863b5664792c66a5cffce7398f6" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation::register_extensions</source>
          <target state="translated">SourceAnnotationExtractor::Annotation::register_extensions</target>
        </trans-unit>
        <trans-unit id="a5a79c0ac5b48348aa3825b1a9ef593794466f04" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation::register_tags</source>
          <target state="translated">SourceAnnotationExtractor::Annotation::register_tags</target>
        </trans-unit>
        <trans-unit id="ae95b9b997d92ec149736a86ae55d11f27ff9cc8" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::Annotation::tags</source>
          <target state="translated">SourceAnnotationExtractor::Annotation::tags</target>
        </trans-unit>
        <trans-unit id="28635467b0cb2ccb387308c58280c73065485395" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::enumerate</source>
          <target state="translated">SourceAnnotationExtractor::enumerate</target>
        </trans-unit>
        <trans-unit id="73bdc7ab302c6f6629a825b60c95a9c65a801977" translate="yes" xml:space="preserve">
          <source>SourceAnnotationExtractor::new</source>
          <target state="translated">SourceAnnotationExtractor::new</target>
        </trans-unit>
        <trans-unit id="31b61123ccbccac8855d652a6c8ed6da520016af" translate="yes" xml:space="preserve">
          <source>Sources may be paths to JavaScript files. Relative paths are assumed to be relative to &lt;code&gt;assets/javascripts&lt;/code&gt;, full paths are assumed to be relative to the document root. Relative paths are idiomatic, use absolute paths only when needed.</source>
          <target state="translated">소스는 JavaScript 파일의 경로 일 수 있습니다. 상대 경로는 &lt;code&gt;assets/javascripts&lt;/code&gt; 에 상대적인 것으로 가정하고 전체 경로는 문서 루트에 상대적인 것으로 가정합니다. 상대 경로는 관용적이며 필요한 경우에만 절대 경로를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fac2d07e97aeb0877dc2a2bac23ef3a6cb4ba986" translate="yes" xml:space="preserve">
          <source>Special features:</source>
          <target state="translated">특징 :</target>
        </trans-unit>
        <trans-unit id="1ff74bb4dfd9917012b52e83db57b21942a3fa6f" translate="yes" xml:space="preserve">
          <source>Special instance variables</source>
          <target state="translated">특수 인스턴스 변수</target>
        </trans-unit>
        <trans-unit id="93a7e480fca31e54d3a1bf415987f972c987379d" translate="yes" xml:space="preserve">
          <source>Special methods</source>
          <target state="translated">특별한 방법</target>
        </trans-unit>
        <trans-unit id="4af57eba847e3cf2725b588c58458cf772cbc93f" translate="yes" xml:space="preserve">
          <source>Specific directories can be explicitly set using the &lt;code&gt;:dirs&lt;/code&gt; key in &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 에서 &lt;code&gt;:dirs&lt;/code&gt; 키를 사용하여 특정 디렉토리를 명시 적으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5790c74acb8f5d696fd43e03c734d005bd944d5" translate="yes" xml:space="preserve">
          <source>Specifically for &lt;code&gt;around_action&lt;/code&gt;, the block also yields in the &lt;code&gt;action&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb802eb1ee79c5b27bc9c23c21a620b0c083065e" translate="yes" xml:space="preserve">
          <source>Specifically performs these transformations:</source>
          <target state="translated">이러한 변환을 구체적으로 수행합니다.</target>
        </trans-unit>
        <trans-unit id="cde80943fac84c55c1e3863fe39ee1a8aaa06faa" translate="yes" xml:space="preserve">
          <source>Specifically, it performs these transformations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfe67187fc913c3d83dc6af8d54778678e1f2ec" translate="yes" xml:space="preserve">
          <source>Specifically, performs these transformations:</source>
          <target state="translated">특히 다음과 같은 변환을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="d9ff7d39e693899b2fb01c2af7e0b9aad8efd43b" translate="yes" xml:space="preserve">
          <source>Specifically:</source>
          <target state="translated">Specifically:</target>
        </trans-unit>
        <trans-unit id="ed43c80255b2107bd9bb720eaa83c9c92b12114e" translate="yes" xml:space="preserve">
          <source>Specifies a Join Model through which to perform the query. Options for &lt;code&gt;:class_name&lt;/code&gt;, &lt;code&gt;:primary_key&lt;/code&gt;, and &lt;code&gt;:foreign_key&lt;/code&gt; are ignored, as the association uses the source reflection. You can only use a &lt;code&gt;:through&lt;/code&gt; query through a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; association on the join model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0bdde06d07aab22546ac6a6b532fd4009adb8f" translate="yes" xml:space="preserve">
          <source>Specifies a Join Model through which to perform the query. Options for &lt;code&gt;:class_name&lt;/code&gt;, &lt;code&gt;:primary_key&lt;/code&gt;, and &lt;code&gt;:foreign_key&lt;/code&gt; are ignored, as the association uses the source reflection. You can only use a &lt;code&gt;:through&lt;/code&gt; query through a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; association on the join model.</source>
          <target state="translated">쿼리를 수행하는 데 사용할 조인 모델을 지정합니다. 옵션 &lt;code&gt;:class_name&lt;/code&gt; 을 , &lt;code&gt;:primary_key&lt;/code&gt; 와 , 그리고 &lt;code&gt;:foreign_key&lt;/code&gt; 이 협회는 소스 반사를 사용하기 때문에, 무시됩니다. 조인 모델 에서는 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 또는 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 연결을 통해서만 &lt;code&gt;:through&lt;/code&gt; 쿼리를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aae67c493e6f1a2408aa18f00d193a760c563d04" translate="yes" xml:space="preserve">
          <source>Specifies a gem dependency of the application.</source>
          <target state="translated">응용 프로그램의 gem 종속성을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="97313da8de06e04f3bdf4d5f952ae2257bac51f6" translate="yes" xml:space="preserve">
          <source>Specifies a humanized form of a string by a regular expression rule or by a string mapping. When using a regular expression based replacement, the normal humanize formatting is called after the replacement. When a string is used, the human form should be specified as desired (example: 'The name', not 'the_name').</source>
          <target state="translated">정규식 규칙 또는 문자열 매핑으로 사람 화 된 문자열 형식을 지정합니다. 정규식 기반 대체를 사용하는 경우 대체 후에 일반 휴먼 라이즈 형식이 호출됩니다. 문자열을 사용하는 경우 휴먼 양식을 원하는대로 지정해야합니다 (예 : 'the_name'이 아닌 'The name').</target>
        </trans-unit>
        <trans-unit id="497bd2e2f7d95dff3f019f51563ec431fc530a0e" translate="yes" xml:space="preserve">
          <source>Specifies a limit for the number of records to retrieve.</source>
          <target state="translated">검색 할 레코드 수의 한계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="35d84a139665c91ab89a74016d812bf07cfa0015" translate="yes" xml:space="preserve">
          <source>Specifies a many-to-many relationship with another class. This associates two classes via an intermediate join table. Unless the join table is explicitly specified as an option, it is guessed using the lexical order of the class names. So a join between Developer and Project will give the default join table name of &amp;ldquo;developers_projects&amp;rdquo; because &amp;ldquo;D&amp;rdquo; precedes &amp;ldquo;P&amp;rdquo; alphabetically. Note that this precedence is calculated using the &lt;code&gt;&amp;lt;&lt;/code&gt; operator for &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. This means that if the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered of higher lexical precedence than the shorter one. For example, one would expect the tables &amp;ldquo;paper_boxes&amp;rdquo; and &amp;ldquo;papers&amp;rdquo; to generate a join table name of &amp;ldquo;papers_paper_boxes&amp;rdquo; because of the length of the name &amp;ldquo;paper_boxes&amp;rdquo;, but it in fact generates a join table name of &amp;ldquo;paper_boxes_papers&amp;rdquo;. Be aware of this caveat, and use the custom &lt;code&gt;:join_table&lt;/code&gt; option if you need to. If your tables share a common prefix, it will only appear once at the beginning. For example, the tables &amp;ldquo;catalog_categories&amp;rdquo; and &amp;ldquo;catalog_products&amp;rdquo; generate a join table name of &amp;ldquo;catalog_categories_products&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe09c4e9e2b9c459105f3660498de67b8607a911" translate="yes" xml:space="preserve">
          <source>Specifies a many-to-many relationship with another class. This associates two classes via an intermediate join table. Unless the join table is explicitly specified as an option, it is guessed using the lexical order of the class names. So a join between Developer and Project will give the default join table name of &amp;ldquo;developers_projects&amp;rdquo; because &amp;ldquo;D&amp;rdquo; precedes &amp;ldquo;P&amp;rdquo; alphabetically. Note that this precedence is calculated using the &lt;code&gt;&amp;lt;&lt;/code&gt; operator for &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;. This means that if the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered of higher lexical precedence than the shorter one. For example, one would expect the tables &amp;ldquo;paper_boxes&amp;rdquo; and &amp;ldquo;papers&amp;rdquo; to generate a join table name of &amp;ldquo;papers_paper_boxes&amp;rdquo; because of the length of the name &amp;ldquo;paper_boxes&amp;rdquo;, but it in fact generates a join table name of &amp;ldquo;paper_boxes_papers&amp;rdquo;. Be aware of this caveat, and use the custom &lt;code&gt;:join_table&lt;/code&gt; option if you need to. If your tables share a common prefix, it will only appear once at the beginning. For example, the tables &amp;ldquo;catalog_categories&amp;rdquo; and &amp;ldquo;catalog_products&amp;rdquo; generate a join table name of &amp;ldquo;catalog_categories_products&amp;rdquo;.</source>
          <target state="translated">다른 클래스와 다 대다 관계를 지정합니다. 중간 조인 테이블을 통해 두 클래스를 연결합니다. 조인 테이블이 옵션으로 명시 적으로 지정되지 않으면 클래스 이름의 어휘 순서를 사용하여 추측됩니다. 따라서&amp;ldquo;D&amp;rdquo;가&amp;ldquo;P&amp;rdquo;앞에 알파벳순으로 있기 때문에 Developer와 Project 간의 조인은 기본 조인 테이블 이름에&amp;ldquo;developers_projects&amp;rdquo;를 부여합니다. 이 우선 순위는 &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; 의 &lt;code&gt;&amp;lt;&lt;/code&gt; 연산자를 사용하여 계산됩니다.. 이는 문자열의 길이가 서로 다르고 가장 짧은 길이와 비교할 때 문자열이 동일한 경우 더 긴 문자열이 짧은 것보다 높은 어휘 우선 순위로 간주됩니다. 예를 들어, &quot;paper_boxes&quot;및 &quot;papers&quot;테이블은 &quot;paper_boxes&quot;라는 이름의 길이로 인해 &quot;papers_paper_boxes&quot;의 조인 테이블 이름을 생성하지만 실제로는 &quot;paper_boxes_papers&quot;의 조인 테이블 이름을 생성합니다. 이 경고에주의하고 필요한 경우 custom &lt;code&gt;:join_table&lt;/code&gt; 옵션을 사용하십시오 . 테이블이 공통 접두사를 공유하는 경우 처음에 한 번만 나타납니다. 예를 들어, &quot;catalog_categories&quot;및 &quot;catalog_products&quot;테이블은 &quot;catalog_categories_products&quot;의 조인 테이블 이름을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a49975effc908442d753877bf979f24ae760dd0e" translate="yes" xml:space="preserve">
          <source>Specifies a module or array of modules that will be extended into the association object returned. Useful for defining methods on associations, especially when they should be shared between multiple association objects.</source>
          <target state="translated">리턴 된 연관 오브젝트로 확장 될 모듈 또는 모듈 배열을 지정합니다. 연관에서 메소드를 정의하는 데 특히, 여러 연관 오브젝트간에 공유되어야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5773bbaec0df3c2c8227e76ede82be19307fa4a8" translate="yes" xml:space="preserve">
          <source>Specifies a new acronym. An acronym must be specified as it will appear in a camelized string. An underscore string that contains the acronym will retain the acronym when passed to &lt;code&gt;camelize&lt;/code&gt;, &lt;code&gt;humanize&lt;/code&gt;, or &lt;code&gt;titleize&lt;/code&gt;. A camelized string that contains the acronym will maintain the acronym when titleized or humanized, and will convert the acronym into a non-delimited single lowercase word when passed to &lt;code&gt;underscore&lt;/code&gt;.</source>
          <target state="translated">새로운 약어를 지정합니다. 낙타 문자열에 나타날 약어를 지정해야합니다. 약어를 포함하는 밑줄 문자열은 &lt;code&gt;camelize&lt;/code&gt; , &lt;code&gt;humanize&lt;/code&gt; 또는 &lt;code&gt;titleize&lt;/code&gt; 로 전달 될 때 약어를 유지합니다 . 약어가 포함 된 낙타 문자열은 제목이 있거나 인간화 될 때 약어를 유지하며 &lt;code&gt;underscore&lt;/code&gt; 전달 될 때 약어를 구분되지 않은 단일 소문자로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8c92231b602b642675647b55d36bfb2ba59dc313" translate="yes" xml:space="preserve">
          <source>Specifies a new irregular that applies to both pluralization and singularization at the same time. This can only be used for strings, not regular expressions. You simply pass the irregular in singular and plural form.</source>
          <target state="translated">복수 및 단 수화에 동시에 적용되는 새로운 불규칙을 지정합니다. 정규 표현식이 아닌 문자열에만 사용할 수 있습니다. 당신은 단순히 불규칙을 단수와 복수의 형태로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="12a3acd3f57b124d25f27e8afb0a0641d0ce3f9d" translate="yes" xml:space="preserve">
          <source>Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular expression. The replacement should always be a string that may include references to the matched data from the rule.</source>
          <target state="translated">새로운 복수 규칙 및 대체 규칙을 지정합니다. 규칙은 문자열 또는 정규식 일 수 있습니다. 대체는 항상 규칙에서 일치하는 데이터에 대한 참조를 포함 할 수있는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0fe24c8b47ec5801abdd1631a08ae2e02844bda1" translate="yes" xml:space="preserve">
          <source>Specifies a new singularization rule and its replacement. The rule can either be a string or a regular expression. The replacement should always be a string that may include references to the matched data from the rule.</source>
          <target state="translated">새 단 수화 규칙 및 대체를 지정합니다. 규칙은 문자열 또는 정규식 일 수 있습니다. 대체는 항상 규칙에서 일치하는 데이터에 대한 참조를 포함 할 수있는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="76e91936e0990326c304e2ab01286b643a9d43d1" translate="yes" xml:space="preserve">
          <source>Specifies a one-to-many association. The following methods for retrieval and query of collections of associated objects will be added:</source>
          <target state="translated">일대 다 연관을 지정합니다. 관련 객체 컬렉션의 검색 및 조회를위한 다음 방법이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9f3c4f50acc7e3d94fd50167c749cd1a7ef24ac7" translate="yes" xml:space="preserve">
          <source>Specifies a one-to-one association with another class. This method should only be used if the other class contains the foreign key. If the current class contains the foreign key, then you should use &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; instead. See also ActiveRecord::Associations::ClassMethods's overview on when to use &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; and when to use &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191187e1c4d2e58c0f2c2cd4617d4a533667c793" translate="yes" xml:space="preserve">
          <source>Specifies a one-to-one association with another class. This method should only be used if the other class contains the foreign key. If the current class contains the foreign key, then you should use &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; instead. See also ActiveRecord::Associations::ClassMethods's overview on when to use &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; and when to use &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;.</source>
          <target state="translated">다른 클래스와 일대일 연관을 지정합니다. 이 메소드는 다른 클래스에 외래 키가 포함 된 경우에만 사용해야합니다. 현재 클래스에 외래 키가 포함 된 경우, &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to를&lt;/a&gt; 대신 사용해야 합니다. &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 사용 시기 및 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 사용시기에 대한 ActiveRecord :: Associations :: ClassMethods 개요도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a4dba289ae131f0a3e2a8fdff1aadc2e3785611" translate="yes" xml:space="preserve">
          <source>Specifies a one-to-one association with another class. This method should only be used if this class contains the foreign key. If the other class contains the foreign key, then you should use &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; instead. See also ActiveRecord::Associations::ClassMethods's overview on when to use &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; and when to use &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80cf3b603f5dcc767e145fe2229165b67d97724" translate="yes" xml:space="preserve">
          <source>Specifies a one-to-one association with another class. This method should only be used if this class contains the foreign key. If the other class contains the foreign key, then you should use &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; instead. See also ActiveRecord::Associations::ClassMethods's overview on when to use &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; and when to use &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;.</source>
          <target state="translated">다른 클래스와 일대일 연관을 지정합니다. 이 메소드는이 클래스에 외래 키가 포함 된 경우에만 사용해야합니다. 다른 클래스에 외래 키가 포함되어 있으면 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one을&lt;/a&gt; 대신 사용해야 합니다. &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 사용 시기 및 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 사용시기에 대한 ActiveRecord :: Associations :: ClassMethods 개요도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3009143be75dd6a29e3500c322cf140dc1928c99" translate="yes" xml:space="preserve">
          <source>Specifies a polymorphic interface (See &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45efdcc74feb0f063b7be11327735c1f00cec40" translate="yes" xml:space="preserve">
          <source>Specifies a polymorphic interface (See &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;).</source>
          <target state="translated">다형성 인터페이스를 지정합니다 ( &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b6eb5ac257a24db94c6a1351b9bd9c29aff9ecb8" translate="yes" xml:space="preserve">
          <source>Specifies an association through which to perform the query. This can be any other type of association, including other &lt;code&gt;:through&lt;/code&gt; associations. Options for &lt;code&gt;:class_name&lt;/code&gt;, &lt;code&gt;:primary_key&lt;/code&gt; and &lt;code&gt;:foreign_key&lt;/code&gt; are ignored, as the association uses the source reflection.</source>
          <target state="translated">쿼리를 수행 할 연결을 지정합니다. 다른 &lt;code&gt;:through&lt;/code&gt; 연관을 포함하여 다른 유형의 연관 일 수 있습니다 . 연결이 소스 리플렉션을 사용하므로 &lt;code&gt;:class_name&lt;/code&gt; , &lt;code&gt;:primary_key&lt;/code&gt; 및 &lt;code&gt;:foreign_key&lt;/code&gt; 에 대한 옵션 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="164520bb8417268b5e847126890b073a412613d3" translate="yes" xml:space="preserve">
          <source>Specifies an instance method to be called on the owner. The method must return true in order for the associated records to be deleted in a background job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d206b3aed6f0aa58164f4538b439b810de3a67" translate="yes" xml:space="preserve">
          <source>Specifies columns which shouldn't be exposed while calling &lt;code&gt;#inspect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#inspect&lt;/code&gt; 를 호출하는 동안 노출되지 않아야하는 열을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="b07a8febd503b31d249d384b96c661a366e20312" translate="yes" xml:space="preserve">
          <source>Specifies locking settings (default to &lt;code&gt;true&lt;/code&gt;). For more information on locking, please see &lt;code&gt;ActiveRecord::Locking&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e13ff060fa28f84989e6f6f2c3d6981bc90dd05" translate="yes" xml:space="preserve">
          <source>Specifies locking settings (default to &lt;code&gt;true&lt;/code&gt;). For more information on locking, please see ActiveRecord::Locking.</source>
          <target state="translated">잠금 설정을 지정합니다 (기본값은 &lt;code&gt;true&lt;/code&gt; ). 잠금에 대한 자세한 내용은 ActiveRecord :: Locking을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="97d46425821c91360f211489773a35b33c354282" translate="yes" xml:space="preserve">
          <source>Specifies table from which the records will be fetched. For example:</source>
          <target state="translated">레코드를 가져올 테이블을 지정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57638fe46c02c3573bfe99603405c1a4cad77931" translate="yes" xml:space="preserve">
          <source>Specifies the name of the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; association on the associated object that is the inverse of this &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; association. See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f852caabb04f141177755d8e707b7afbe47401" translate="yes" xml:space="preserve">
          <source>Specifies the name of the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; association on the associated object that is the inverse of this &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; association. See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a72c5652a3fedf402e36b02edd76ede1411b6b9" translate="yes" xml:space="preserve">
          <source>Specifies the name of the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; association on the associated object that is the inverse of this &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; association. See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.</source>
          <target state="translated">이 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; 연관과 반대 인 연관된 오브젝트 에서 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 연관 의 이름을 지정합니다 . 자세한 내용은 양방향 연결에 대한 ActiveRecord :: Associations :: ClassMethods 개요를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8b07abe39e032f758ecd1d9057056d8bdc5be748" translate="yes" xml:space="preserve">
          <source>Specifies the name of the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; association on the associated object that is the inverse of this &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; association. See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.</source>
          <target state="translated">이 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 연관과 반대 인 연관된 오브젝트 에서 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 연관 의 이름을 지정합니다 . 자세한 내용은 양방향 연결에 대한 ActiveRecord :: Associations :: ClassMethods 개요를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ea5542642a6f88c4e9bfb88b55319f58ecdf9173" translate="yes" xml:space="preserve">
          <source>Specifies the name of the &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; association on the associated object that is the inverse of this &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; association. See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a077ae553584190a84c5e0d8089075e47f7b709" translate="yes" xml:space="preserve">
          <source>Specifies the name of the &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; association on the associated object that is the inverse of this &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; association. See ActiveRecord::Associations::ClassMethods's overview on Bi-directional associations for more detail.</source>
          <target state="translated">이 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 연관과 반대 인 연관된 객체에 대한 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 또는 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; 연관 의 이름을 지정합니다 . 자세한 내용은 양방향 연결에 대한 ActiveRecord :: Associations :: ClassMethods 개요를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b5f86652e142f240f808ad28a1accc3bc8146f92" translate="yes" xml:space="preserve">
          <source>Specifies the name of the queue to process the job on.</source>
          <target state="translated">작업을 처리 할 큐 이름을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="59ee5c5465bd12c13bb84cdad89dbf83206bdf14" translate="yes" xml:space="preserve">
          <source>Specifies the number of rows to skip before returning rows.</source>
          <target state="translated">행을 리턴하기 전에 건너 뛸 행 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="47ae845c87cf3279f2141e90b1426824be55100c" translate="yes" xml:space="preserve">
          <source>Specifies the priority of the queue to create the job with.</source>
          <target state="translated">작업을 작성할 큐의 우선 순위를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="83ae9a08e23486bcdfba2e22d27bd502ac2b610e" translate="yes" xml:space="preserve">
          <source>Specifies the queue adapter to use with all Active Job test helpers.</source>
          <target state="translated">모든 활성 작업 테스트 헬퍼와 함께 사용할 큐 어댑터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c273e81afbbb87896db2dda5b2515ac9aa8d757a" translate="yes" xml:space="preserve">
          <source>Specifies the relation between a single attachment and the model.</source>
          <target state="translated">단일 첨부 파일과 모델 간의 관계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="206524e3a7ee1aad9b71de35d221fdc93f871fa3" translate="yes" xml:space="preserve">
          <source>Specifies the relation between multiple attachments and the model.</source>
          <target state="translated">여러 첨부 파일과 모델 간의 관계를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="886ddd9bf84eec365c5c77192990b5a9cd3f164b" translate="yes" xml:space="preserve">
          <source>Specifies the source association name used by &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries. Only use it if the name cannot be inferred from the association. &lt;code&gt;has_many :subscribers, through: :subscriptions&lt;/code&gt; will look for either &lt;code&gt;:subscribers&lt;/code&gt; or &lt;code&gt;:subscriber&lt;/code&gt; on Subscription, unless a &lt;code&gt;:source&lt;/code&gt; is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd97744ba14130b3a9d7a806b5c4d5ea99b07000" translate="yes" xml:space="preserve">
          <source>Specifies the source association name used by &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries. Only use it if the name cannot be inferred from the association. &lt;code&gt;has_many :subscribers, through:
:subscriptions&lt;/code&gt; will look for either &lt;code&gt;:subscribers&lt;/code&gt; or &lt;code&gt;:subscriber&lt;/code&gt; on Subscription, unless a &lt;code&gt;:source&lt;/code&gt; is given.</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 조회에 사용되는 소스 연관 이름을 지정 합니다. 이름을 연관에서 유추 할 수없는 경우에만 사용하십시오. &lt;code&gt;has_many :subscribers, through: :subscriptions&lt;/code&gt; 는 &lt;code&gt;:source&lt;/code&gt; 를 지정 하지 않으면 Subscription에서 &lt;code&gt;:subscribers&lt;/code&gt; 또는 &lt;code&gt;:subscriber&lt;/code&gt; 를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="98d2bd22447f4e3cca7075243a0a7dd67b71c822" translate="yes" xml:space="preserve">
          <source>Specifies the source association name used by &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries. Only use it if the name cannot be inferred from the association. &lt;code&gt;has_one :favorite, through: :favorites&lt;/code&gt; will look for a &lt;code&gt;:favorite&lt;/code&gt; on Favorite, unless a &lt;code&gt;:source&lt;/code&gt; is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277e7c7ac697e944e9536f91fc5dbf9fdae5fd3d" translate="yes" xml:space="preserve">
          <source>Specifies the source association name used by &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries. Only use it if the name cannot be inferred from the association. &lt;code&gt;has_one :favorite, through: :favorites&lt;/code&gt; will look for a &lt;code&gt;:favorite&lt;/code&gt; on Favorite, unless a &lt;code&gt;:source&lt;/code&gt; is given.</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 쿼리에 사용되는 소스 연결 이름을 지정 합니다. 이름을 연관에서 유추 할 수없는 경우에만 사용하십시오. &lt;code&gt;has_one :favorite, through: :favorites&lt;/code&gt; A의 모양 &lt;code&gt;:favorite&lt;/code&gt; 하지 않는 한, 즐겨 찾기에 &lt;code&gt;:source&lt;/code&gt; 주어진다.</target>
        </trans-unit>
        <trans-unit id="adbc0953842e1162f7a6464171984c86fa426143" translate="yes" xml:space="preserve">
          <source>Specifies type of the source association used by &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries where the source association is a polymorphic &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8701300cfb234df49803a159f3c9549487ef738a" translate="yes" xml:space="preserve">
          <source>Specifies type of the source association used by &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries where the source association is a polymorphic &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;.</source>
          <target state="translated">소스 연관이 다형성 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to 인 &lt;/a&gt;&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 쿼리에 의해 사용되는 소스 연관의 유형을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="7c3860a5135fac1bde306d9639f26b4c32c218ad" translate="yes" xml:space="preserve">
          <source>Specifies type of the source association used by &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries where the source association is a polymorphic &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c7e7f31eb36a0a498fce37f588d4aabd6a9eb5" translate="yes" xml:space="preserve">
          <source>Specifies type of the source association used by &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; queries where the source association is a polymorphic &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;.</source>
          <target state="translated">소스 연관이 다형성 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to 인 &lt;/a&gt;&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 쿼리에 의해 사용되는 소스 연관의 유형을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="3f37bee7001e66a53036dce523de0321b55c7733" translate="yes" xml:space="preserve">
          <source>Specifies whether the records should be unique or not.</source>
          <target state="translated">레코드가 고유해야하는지 여부를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="76f35f9f62fc508378a4d94946408633de5583ee" translate="yes" xml:space="preserve">
          <source>Specifies whether the records should be unique or not. For example:</source>
          <target state="translated">레코드가 고유해야하는지 여부를 지정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8f04fceb21e7dd90c71e062128d6e76116300d1f" translate="yes" xml:space="preserve">
          <source>Specifies words that are uncountable and should not be inflected.</source>
          <target state="translated">계산할 수없고 활용해서는 안되는 단어를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="5ebe1693be4c270b8cf226f69241902b498ac17d" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;options&lt;/code&gt; with additional translating options.</source>
          <target state="translated">추가 번역 옵션으로 &lt;code&gt;options&lt;/code&gt; 을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d7e66b98abb2a573166f38b116c1d11ffe0ef4a" translate="yes" xml:space="preserve">
          <source>Specify binary encoding for parameters for a given action.</source>
          <target state="translated">지정된 조치의 매개 변수에 2 진 인코딩을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="d952bcd3f96500e2c14cc9a6bbf0ac568ed5d009" translate="yes" xml:space="preserve">
          <source>Specify either an argument or a block.</source>
          <target state="translated">인수 또는 블록을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="3dc99ea253debb40eb07a9af0988e4b3db7a4d4d" translate="yes" xml:space="preserve">
          <source>Specify optimizer hints to be used in the SELECT statement.</source>
          <target state="translated">SELECT 문에 사용될 최적화 힌트를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="85c66c083df063e41c51a870d80bc4aabc120fc6" translate="yes" xml:space="preserve">
          <source>Specify relationships to be included in the result set. For example:</source>
          <target state="translated">결과 집합에 포함 할 관계를 지정하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86595ed74563dfdb981c8f6e79053187369eaca3" translate="yes" xml:space="preserve">
          <source>Specify that a given action's parameters should all be encoded as ASCII-8BIT (it &amp;ldquo;skips&amp;rdquo; the encoding default of UTF-8).</source>
          <target state="translated">지정된 조치의 매개 변수가 모두 ASCII-8BIT로 인코딩되도록 지정하십시오 (인코딩 기본값 UTF-8을 &quot;건너 뛰기&quot;).</target>
        </trans-unit>
        <trans-unit id="4a2fa3cb741e2d46cd835ae3e701c1bcd66cbd5d" translate="yes" xml:space="preserve">
          <source>Specify the backend queue provider. The default queue adapter is the &lt;code&gt;:async&lt;/code&gt; queue. See &lt;a href=&quot;../queueadapters&quot;&gt;&lt;code&gt;QueueAdapters&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55823b908779657eb16a820be966ff2143acda87" translate="yes" xml:space="preserve">
          <source>Specify the backend queue provider. The default queue adapter is the &lt;code&gt;:async&lt;/code&gt; queue. See &lt;a href=&quot;../queueadapters&quot;&gt;QueueAdapters&lt;/a&gt; for more information.</source>
          <target state="translated">백엔드 큐 제공자를 지정하십시오. 기본 큐 어댑터는 &lt;code&gt;:async&lt;/code&gt; 큐입니다. 자세한 정보는 &lt;a href=&quot;../queueadapters&quot;&gt;QueueAdapters&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="885aa862bc6e44cdfa845c8426e91ba27b7211a4" translate="yes" xml:space="preserve">
          <source>Specify the class name of the association. Use it only if that name can't be inferred from the association name. So &lt;code&gt;belongs_to
:author&lt;/code&gt; will by default be linked to the Author class, but if the real class name is Person, you'll have to specify it with this option.</source>
          <target state="translated">연관의 클래스 이름을 지정하십시오. 해당 이름을 연관 이름에서 유추 할 수없는 경우에만 사용하십시오. 따라서 &lt;code&gt;belongs_to :author&lt;/code&gt; 는 기본적으로 Author 클래스에 연결되지만 실제 클래스 이름이 Person 인 경우이 옵션으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="70a5e6fb65da82a2fb4f602e75bb6e666b6cd024" translate="yes" xml:space="preserve">
          <source>Specify the class name of the association. Use it only if that name can't be inferred from the association name. So &lt;code&gt;has_and_belongs_to_many :projects&lt;/code&gt; will by default be linked to the Project class, but if the real class name is SuperProject, you'll have to specify it with this option.</source>
          <target state="translated">연관의 클래스 이름을 지정하십시오. 해당 이름을 연관 이름에서 유추 할 수없는 경우에만 사용하십시오. 따라서 &lt;code&gt;has_and_belongs_to_many :projects&lt;/code&gt; 는 기본적으로 Project 클래스에 연결되지만 실제 클래스 이름이 SuperProject 인 경우이 옵션을 사용하여 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2b273573d0250f10e426bfe9e12638866178792" translate="yes" xml:space="preserve">
          <source>Specify the class name of the association. Use it only if that name can't be inferred from the association name. So &lt;code&gt;has_many
:products&lt;/code&gt; will by default be linked to the &lt;code&gt;Product&lt;/code&gt; class, but if the real class name is &lt;code&gt;SpecialProduct&lt;/code&gt;, you'll have to specify it with this option.</source>
          <target state="translated">연관의 클래스 이름을 지정하십시오. 해당 이름을 연관 이름에서 유추 할 수없는 경우에만 사용하십시오. 따라서 &lt;code&gt;has_many :products&lt;/code&gt; 는 기본적으로 &lt;code&gt;Product&lt;/code&gt; 클래스에 연결 되지만 실제 클래스 이름이 &lt;code&gt;SpecialProduct&lt;/code&gt; 인 경우이 옵션을 사용하여 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2d33c470a825930ab28b6a939252c71c8c144f47" translate="yes" xml:space="preserve">
          <source>Specify the class name of the association. Use it only if that name can't be inferred from the association name. So &lt;code&gt;has_one
:manager&lt;/code&gt; will by default be linked to the Manager class, but if the real class name is Person, you'll have to specify it with this option.</source>
          <target state="translated">연관의 클래스 이름을 지정하십시오. 해당 이름을 연관 이름에서 유추 할 수없는 경우에만 사용하십시오. 따라서 &lt;code&gt;has_one :manager&lt;/code&gt; 는 기본적으로 Manager 클래스에 연결되지만 실제 클래스 이름이 Person 인 경우이 옵션을 사용하여 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="225e927248eca6d940464c669ee43e6f9eb299e3" translate="yes" xml:space="preserve">
          <source>Specify the column used to store the associated object's type, if this is a polymorphic association. By default this is guessed to be the name of the association with a &amp;ldquo;_type&amp;rdquo; suffix. So a class that defines a &lt;code&gt;belongs_to :taggable, polymorphic: true&lt;/code&gt; association will use &amp;ldquo;taggable_type&amp;rdquo; as the default &lt;code&gt;:foreign_type&lt;/code&gt;.</source>
          <target state="translated">연관된 오브젝트 유형을 저장하는 데 사용되는 열이 다형성 연관 인 경우 지정하십시오. 기본적으로 이것은&amp;ldquo;_type&amp;rdquo;접미사와의 연결 이름으로 추측됩니다. 따라서 &lt;code&gt;belongs_to :taggable, polymorphic: true&lt;/code&gt; 연관 을 정의하는 클래스는 &amp;ldquo;taggable_type&amp;rdquo;을 기본 &lt;code&gt;:foreign_type&lt;/code&gt; 으로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="ebe40e3cc390f08c2ce384f3ba7b14096b00fb56" translate="yes" xml:space="preserve">
          <source>Specify the column used to store the associated object's type, if this is a polymorphic association. By default this is guessed to be the name of the polymorphic association specified on &amp;ldquo;as&amp;rdquo; option with a &amp;ldquo;_type&amp;rdquo; suffix. So a class that defines a &lt;code&gt;has_many :tags, as: :taggable&lt;/code&gt; association will use &amp;ldquo;taggable_type&amp;rdquo; as the default &lt;code&gt;:foreign_type&lt;/code&gt;.</source>
          <target state="translated">연관된 오브젝트 유형을 저장하는 데 사용되는 열이 다형성 연관 인 경우 지정하십시오. 기본적으로 이것은&amp;ldquo;_type&amp;rdquo;접미사가있는&amp;ldquo;as&amp;rdquo;옵션에 지정된 다형성 연관의 이름 인 것으로 추측됩니다. 따라서 &lt;code&gt;has_many :tags, as: :taggable&lt;/code&gt; 연관은 has_many : tags 를 정의하는 클래스는 &quot;taggable_type&quot;을 기본 &lt;code&gt;:foreign_type&lt;/code&gt; 으로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="aca786970e05c6d7f529287932956735638bed3c" translate="yes" xml:space="preserve">
          <source>Specify the column used to store the associated object's type, if this is a polymorphic association. By default this is guessed to be the name of the polymorphic association specified on &amp;ldquo;as&amp;rdquo; option with a &amp;ldquo;_type&amp;rdquo; suffix. So a class that defines a &lt;code&gt;has_one :tag, as: :taggable&lt;/code&gt; association will use &amp;ldquo;taggable_type&amp;rdquo; as the default &lt;code&gt;:foreign_type&lt;/code&gt;.</source>
          <target state="translated">연관된 오브젝트 유형을 저장하는 데 사용되는 열이 다형성 연관 인 경우 지정하십시오. 기본적으로 이것은&amp;ldquo;_type&amp;rdquo;접미사가있는&amp;ldquo;as&amp;rdquo;옵션에 지정된 다형성 연관의 이름 인 것으로 추측됩니다. 따라서 &lt;code&gt;has_one :tag, as: :taggable&lt;/code&gt; 연관은 has_one : tag 를 정의하는 클래스는 &quot;taggable_type&quot;을 기본 &lt;code&gt;:foreign_type&lt;/code&gt; 으로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="6611892652b6e4ff42dd6caed240bb8f77b48bfa" translate="yes" xml:space="preserve">
          <source>Specify the encoding for a parameter on an action. If not specified the default is UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d86492300b287457533a3fc66445ab081502e4" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association on the receiving side of the association. By default this is guessed to be the name of the associated class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So if a Person class makes a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; association to Project, the association will use &amp;ldquo;project_id&amp;rdquo; as the default &lt;code&gt;:association_foreign_key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e2c11e67c5dd736c36d56590671bf2afa0b845" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association on the receiving side of the association. By default this is guessed to be the name of the associated class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So if a Person class makes a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; association to Project, the association will use &amp;ldquo;project_id&amp;rdquo; as the default &lt;code&gt;:association_foreign_key&lt;/code&gt;.</source>
          <target state="translated">연관 수신 측에서 연관에 사용되는 외래 키를 지정하십시오. 기본적으로이 이름은 연관된 클래스의 이름이며 소문자로 표시되고 접미사로&amp;ldquo;_id&amp;rdquo;가 붙습니다. 따라서 Person 클래스가 프로젝트에 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; 연관을 작성하면 연관은 &quot;project_id&quot;를 기본값 &lt;code&gt;:association_foreign_key&lt;/code&gt; 로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="80e0350f2d4322606364411ef6b3c1dfc406ad6c" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association. By default this is guessed to be the name of the association with an &amp;ldquo;_id&amp;rdquo; suffix. So a class that defines a &lt;code&gt;belongs_to :person&lt;/code&gt; association will use &amp;ldquo;person_id&amp;rdquo; as the default &lt;code&gt;:foreign_key&lt;/code&gt;. Similarly, &lt;code&gt;belongs_to :favorite_person, class_name: &quot;Person&quot;&lt;/code&gt; will use a foreign key of &amp;ldquo;favorite_person_id&amp;rdquo;.</source>
          <target state="translated">연관에 사용되는 외래 키를 지정하십시오. 기본적으로 이것은&amp;ldquo;_id&amp;rdquo;접미사와의 연결 이름으로 추측됩니다. 따라서 &lt;code&gt;belongs_to :person&lt;/code&gt; 연관 을 정의하는 클래스는 &amp;ldquo;person_id&amp;rdquo;를 기본 &lt;code&gt;:foreign_key&lt;/code&gt; 로 사용 합니다. 마찬가지로, &lt;code&gt;belongs_to :favorite_person, class_name: &quot;Person&quot;&lt;/code&gt; 은 &quot;favorite_person_id&quot;의 ​​외래 키를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1232936c60f89b0ff5a83989d56aa994415757be" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association. By default this is guessed to be the name of this class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So a Person class that makes a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; association to Project will use &amp;ldquo;person_id&amp;rdquo; as the default &lt;code&gt;:foreign_key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83b08ea9ac04cbf6da0bd4b47b0a19defc92997" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association. By default this is guessed to be the name of this class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So a Person class that makes a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; association to Project will use &amp;ldquo;person_id&amp;rdquo; as the default &lt;code&gt;:foreign_key&lt;/code&gt;.</source>
          <target state="translated">연관에 사용되는 외래 키를 지정하십시오. 기본적으로 이것은이 클래스의 이름이 소문자이고 &quot;_id&quot;접미어로 추측됩니다. 따라서 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; 를 Project에 연관 시키는 Person 클래스는 &quot;person_id&quot;를 기본값 &lt;code&gt;:foreign_key&lt;/code&gt; 로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="97c8a0a98c187528c917336177cdc63a4478c80d" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association. By default this is guessed to be the name of this class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So a Person class that makes a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; association will use &amp;ldquo;person_id&amp;rdquo; as the default &lt;code&gt;:foreign_key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac165ad7018cf39f7055e03af4fbe06c3dd2ee98" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association. By default this is guessed to be the name of this class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So a Person class that makes a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; association will use &amp;ldquo;person_id&amp;rdquo; as the default &lt;code&gt;:foreign_key&lt;/code&gt;.</source>
          <target state="translated">연관에 사용되는 외래 키를 지정하십시오. 기본적으로 이것은이 클래스의 이름이 소문자이고 &quot;_id&quot;접미어로 추측됩니다. 따라서 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; 연관 을 작성하는 Person 클래스는 &quot;person_id&quot;를 기본값 &lt;code&gt;:foreign_key&lt;/code&gt; 로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="4efc36e14f1187409a34be370af1a0a2c92ddfe0" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association. By default this is guessed to be the name of this class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So a Person class that makes a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; association will use &amp;ldquo;person_id&amp;rdquo; as the default &lt;code&gt;:foreign_key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418e68cc079803c5ca4710d43bcb06a747293c69" translate="yes" xml:space="preserve">
          <source>Specify the foreign key used for the association. By default this is guessed to be the name of this class in lower-case and &amp;ldquo;_id&amp;rdquo; suffixed. So a Person class that makes a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; association will use &amp;ldquo;person_id&amp;rdquo; as the default &lt;code&gt;:foreign_key&lt;/code&gt;.</source>
          <target state="translated">연관에 사용되는 외래 키를 지정하십시오. 기본적으로 이것은이 클래스의 이름이 소문자이고 &quot;_id&quot;접미어로 추측됩니다. 따라서 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 연관 을 만드는 Person 클래스는 &quot;person_id&quot;를 기본값 &lt;code&gt;:foreign_key&lt;/code&gt; 로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="1a29d5f3630b11a255e7b8ab841b7e36ec40765f" translate="yes" xml:space="preserve">
          <source>Specify the layout to use for this class.</source>
          <target state="translated">이 클래스에 사용할 레이아웃을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9e1a94495c3662425c496be9343da1635a331141" translate="yes" xml:space="preserve">
          <source>Specify the method that returns the primary key of associated object used for the association. By default this is &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">연관에 사용 된 연관된 오브젝트의 기본 키를 리턴하는 메소드를 지정하십시오. 기본적으로 이것은 &lt;code&gt;id&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="08e12d1c0c341aefbdddfdb9fed12aea57b0a8fd" translate="yes" xml:space="preserve">
          <source>Specify the method that returns the primary key used for the association. By default this is &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">연관에 사용 된 기본 키를 리턴하는 메소드를 지정하십시오. 기본적으로 이것은 &lt;code&gt;id&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dab45fea74e16eacf512452806b6d81962031dee" translate="yes" xml:space="preserve">
          <source>Specify the name of the column to use as the primary key for the association. By default this is &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">연관의 기본 키로 사용할 열 이름을 지정하십시오. 기본적으로 이것은 &lt;code&gt;id&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6ed4870ec22baf8b77559d6b3488e1be9d825fea" translate="yes" xml:space="preserve">
          <source>Specify the name of the join table if the default based on lexical order isn't what you want. &lt;strong&gt;WARNING:&lt;/strong&gt; If you're overwriting the table name of either class, the &lt;code&gt;table_name&lt;/code&gt; method MUST be declared underneath any &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; declaration in order to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8d991fe97c6d10ca259daf546b590a79f70062" translate="yes" xml:space="preserve">
          <source>Specify the name of the join table if the default based on lexical order isn't what you want. &lt;strong&gt;WARNING:&lt;/strong&gt; If you're overwriting the table name of either class, the &lt;code&gt;table_name&lt;/code&gt; method MUST be declared underneath any &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; declaration in order to work.</source>
          <target state="translated">어휘 순서에 따른 기본값이 원하는 것이 아닌 경우 결합 테이블의 이름을 지정하십시오. &lt;strong&gt;경고 :&lt;/strong&gt; 어느 클래스의 테이블 이름을 덮어 쓰는 경우 작동하려면 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; 선언 아래 &lt;code&gt;table_name&lt;/code&gt; 메소드를 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d7c1c97489bd76bb4fb1c357d1d4c7212df163bf" translate="yes" xml:space="preserve">
          <source>Specify this association is a polymorphic association by passing &lt;code&gt;true&lt;/code&gt;. Note: If you've enabled the counter cache, then you may want to add the counter cache attribute to the &lt;code&gt;attr_readonly&lt;/code&gt; list in the associated classes (e.g. &lt;code&gt;class
Post; attr_readonly :comments_count; end&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 를 전달하여이 연관이 다형성 연관임을 지정하십시오 . 참고 : 카운터 캐시를 활성화 한 경우 연결된 클래스 의 &lt;code&gt;attr_readonly&lt;/code&gt; 목록에 카운터 캐시 속성을 추가 할 수 있습니다 (예 : &lt;code&gt;class Post; attr_readonly :comments_count; end&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b37d627e2d35b74b7acc89769bc6aa03d24ae539" translate="yes" xml:space="preserve">
          <source>Specify whether or not the session should mimic a secure HTTPS request.</source>
          <target state="translated">세션이 보안 HTTPS 요청을 모방해야하는지 여부를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="8f90cd188c94ff438b63ca4775438d2d50939ca5" translate="yes" xml:space="preserve">
          <source>Specifying Conditions on Eager Loaded Associations</source>
          <target state="translated">열망 된로드 된 연관에 조건 지정</target>
        </trans-unit>
        <trans-unit id="badad5d000b173432028b69520e39fc48ef3ee34" translate="yes" xml:space="preserve">
          <source>Specifying Constraints</source>
          <target state="translated">제약 조건 지정</target>
        </trans-unit>
        <trans-unit id="41fc5d76713cc80fa202d0b1dce4b7224a7a9fd6" translate="yes" xml:space="preserve">
          <source>Specifying a Controller to Use</source>
          <target state="translated">사용할 컨트롤러 지정</target>
        </trans-unit>
        <trans-unit id="e671c125d388a318e613291417f6e629ff5df030" translate="yes" xml:space="preserve">
          <source>Specifying connection identifiers</source>
          <target state="translated">연결 식별자 지정</target>
        </trans-unit>
        <trans-unit id="838f99467accb7a6580d92f0d66cdc2683142373" translate="yes" xml:space="preserve">
          <source>Specifying foreign keys in fixtures can be very fragile, not to mention difficult to read. Since Active Record can figure out the ID of any fixture from its label, you can specify FK's by label instead of ID.</source>
          <target state="translated">조명기에서 외래 키를 지정하는 것은 읽기 어려울 정도로 말할 것도없이 매우 취약합니다. Active Record는 레이블에서 조명기의 ID를 알아낼 수 있으므로 ID 대신 레이블로 FK를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c6e82bfb1740e9395d4ce7a9772d3d1d42f9688" translate="yes" xml:space="preserve">
          <source>Specifying:</source>
          <target state="translated">Specifying:</target>
        </trans-unit>
        <trans-unit id="7a86646db863e5b3be076646cd48d46e5b757867" translate="yes" xml:space="preserve">
          <source>Splits or iterates over the array in &lt;code&gt;number&lt;/code&gt; of groups, padding any remaining slots with &lt;code&gt;fill_with&lt;/code&gt; unless it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">배열이 &lt;code&gt;number&lt;/code&gt; 그룹으로 분할되거나 반복되어 &lt;code&gt;false&lt;/code&gt; 가 아닌 한 &lt;code&gt;fill_with&lt;/code&gt; 로 나머지 슬롯을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="55822158c40b4f9518997cbd575a11ed73a1c924" translate="yes" xml:space="preserve">
          <source>Splits or iterates over the array in groups of size &lt;code&gt;number&lt;/code&gt;, padding any remaining slots with &lt;code&gt;fill_with&lt;/code&gt; unless it is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">크기 &lt;code&gt;number&lt;/code&gt; 그룹으로 배열을 분할하거나 반복하여 &lt;code&gt;false&lt;/code&gt; 가 아닌 한 나머지 슬롯을 &lt;code&gt;fill_with&lt;/code&gt; 로 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="89677615c2ec030bc5542abbacb5c286b12096fe" translate="yes" xml:space="preserve">
          <source>Spring</source>
          <target state="translated">Spring</target>
        </trans-unit>
        <trans-unit id="7127aa5fa59c9abc757cff2204cb8d590029ed5d" translate="yes" xml:space="preserve">
          <source>Spring reloads the application code if something changes. In the &lt;code&gt;test&lt;/code&gt; environment you need to enable reloading for that to work:</source>
          <target state="translated">Spring은 무언가가 변경되면 애플리케이션 코드를 다시로드합니다. 에서 &lt;code&gt;test&lt;/code&gt; 환경 당신은 일에 그것에 대해 다시로드 활성화해야합니다 :</target>
        </trans-unit>
        <trans-unit id="6dcebd81cfd763cdbe024fd43b26618f50cdee93" translate="yes" xml:space="preserve">
          <source>Springify your binstubs with &lt;code&gt;bundle exec spring binstub --all&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bundle exec spring binstub --all&lt;/code&gt; 사용하여 binstub을 스프링 화하십시오 .</target>
        </trans-unit>
        <trans-unit id="77ecab1b28a222b2eb0f08a4bc966b8031011d38" translate="yes" xml:space="preserve">
          <source>Sprockets also sets the &lt;code&gt;Cache-Control&lt;/code&gt; HTTP header to &lt;code&gt;max-age=31536000&lt;/code&gt;. This signals all caches between your server and the client browser that this content (the file served) can be cached for 1 year. The effect of this is to reduce the number of requests for this asset from your server; the asset has a good chance of being in the local browser cache or some intermediate cache.</source>
          <target state="translated">Sprockets는 또한 &lt;code&gt;Cache-Control&lt;/code&gt; HTTP 헤더를 &lt;code&gt;max-age=31536000&lt;/code&gt; 으로 설정 합니다. 이는 서버와 클라이언트 브라우저 간의 모든 캐시에이 컨텐츠 (제공된 파일)를 1 년 동안 캐시 할 수 있음을 나타냅니다. 그 결과 서버에서이 자산에 대한 요청 수가 줄어 듭니다. 자산이 로컬 브라우저 캐시 또는 일부 중간 캐시에있을 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="ac09c2fe68b4659344d9b2e652cd2c7158914a39" translate="yes" xml:space="preserve">
          <source>Sprockets concatenates all JavaScript files into one master &lt;code&gt;.js&lt;/code&gt; file and all CSS files into one master &lt;code&gt;.css&lt;/code&gt; file. As you'll learn later in this guide, you can customize this strategy to group files any way you like. In production, Rails inserts an SHA256 fingerprint into each filename so that the file is cached by the web browser. You can invalidate the cache by altering this fingerprint, which happens automatically whenever you change the file contents.</source>
          <target state="translated">스프로킷은 모든 JavaScript 파일을 하나의 마스터 &lt;code&gt;.js&lt;/code&gt; 파일로 연결 하고 모든 CSS 파일을 하나의 마스터 &lt;code&gt;.css&lt;/code&gt; 파일로 연결합니다. 이 가이드의 뒷부분에서 배우 겠지만이 전략을 사용자 지정하여 원하는 방식으로 파일을 그룹화 할 수 있습니다. 프로덕션 환경에서 Rails는 파일이 웹 브라우저에 의해 캐시되도록 각 파일 이름에 SHA256 지문을 삽입합니다. 파일 내용을 변경할 때마다 자동으로 발생하는이 지문을 변경하여 캐시를 무효화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f387bc2faffb12649890a08259893ebd3ff6daa" translate="yes" xml:space="preserve">
          <source>Sprockets does not add any new methods to access your assets - you still use the familiar &lt;code&gt;javascript_include_tag&lt;/code&gt; and &lt;code&gt;stylesheet_link_tag&lt;/code&gt;:</source>
          <target state="translated">스프로킷은 자산에 액세스하기위한 새로운 방법을 추가하지 않습니다. 여전히 익숙한 &lt;code&gt;javascript_include_tag&lt;/code&gt; 및 &lt;code&gt;stylesheet_link_tag&lt;/code&gt; 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b13764af9f148291c25a397e3142ef6b35bfaebb" translate="yes" xml:space="preserve">
          <source>Sprockets uses Processors, Transformers, Compressors, and Exporters to extend Sprockets functionality. Have a look at &lt;a href=&quot;https://github.com/rails/sprockets/blob/master/guides/extending_sprockets.md&quot;&gt;Extending Sprockets&lt;/a&gt; to learn more. Here we registered a preprocessor to add a comment to the end of text/css (&lt;code&gt;.css&lt;/code&gt;) files.</source>
          <target state="translated">Sprockets는 프로세서, 변압기, 압축기 및 수출기를 사용하여 Sprockets 기능을 확장합니다. 한 번 봐 가지고 &lt;a href=&quot;https://github.com/rails/sprockets/blob/master/guides/extending_sprockets.md&quot;&gt;톱니 확장&lt;/a&gt; 자세한 내용을. 여기에서는 text / css ( &lt;code&gt;.css&lt;/code&gt; ) 파일 끝에 주석을 추가하기 위해 전처리기를 등록했습니다 .</target>
        </trans-unit>
        <trans-unit id="7565b4913500cb7bd5a658ee5b78fa21ce96b025" translate="yes" xml:space="preserve">
          <source>Sprockets uses files named &lt;code&gt;index&lt;/code&gt; (with the relevant extensions) for a special purpose.</source>
          <target state="translated">Sprockets는 특별한 목적을 위해 &lt;code&gt;index&lt;/code&gt; 라는 파일 (확장자 포함)을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="199cb6bc94954c0426aaaf16efcfb331999692e9" translate="yes" xml:space="preserve">
          <source>Sprockets uses manifest files to determine which assets to include and serve. These manifest files contain &lt;em&gt;directives&lt;/em&gt; - instructions that tell Sprockets which files to require in order to build a single CSS or JavaScript file. With these directives, Sprockets loads the files specified, processes them if necessary, concatenates them into one single file, and then compresses them (based on value of &lt;code&gt;Rails.application.config.assets.js_compressor&lt;/code&gt;). By serving one file rather than many, the load time of pages can be greatly reduced because the browser makes fewer requests. Compression also reduces file size, enabling the browser to download them faster.</source>
          <target state="translated">스프로킷은 매니페스트 파일을 사용하여 포함하고 제공 할 자산을 결정합니다. 이 매니페스트 파일에는 &lt;em&gt;지시문&lt;/em&gt; 이 포함되어 있습니다. &lt;em&gt;지시문&lt;/em&gt; 은 단일 CSS 또는 JavaScript 파일을 빌드하는 데 필요한 파일을 Sprockets에 알려줍니다. 이러한 지시문을 사용하여 Sprockets는 지정된 파일을로드하고 필요한 경우 처리 한 후 하나의 단일 파일로 연결 한 다음 압축합니다 ( &lt;code&gt;Rails.application.config.assets.js_compressor&lt;/code&gt; 값에 따라 ). 많은 파일이 아닌 하나의 파일을 제공함으로써 브라우저가 요청을 적게하기 때문에 페이지의로드 시간을 크게 줄일 수 있습니다. 압축은 또한 파일 크기를 줄여 브라우저가 더 빨리 다운로드 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="ea2fadf113309ae22d55b43e43b08e5d0b03213a" translate="yes" xml:space="preserve">
          <source>Sprockets will also look through the paths specified in &lt;code&gt;config.assets.paths&lt;/code&gt;, which includes the standard application paths and any paths added by Rails engines.</source>
          <target state="translated">스프로킷은 또한 표준 애플리케이션 경로와 Rails 엔진이 추가 한 경로를 포함하는 &lt;code&gt;config.assets.paths&lt;/code&gt; 에 지정된 경로를 살펴 봅니다 .</target>
        </trans-unit>
        <trans-unit id="46d0fe2daaa4f1858226d1c239a8cddc764eb858" translate="yes" xml:space="preserve">
          <source>SqlServer: &lt;code&gt;:precision&lt;/code&gt; [1..38], &lt;code&gt;:scale&lt;/code&gt; [0..38]. Default (38,0).</source>
          <target state="translated">SqlServer : &lt;code&gt;:precision&lt;/code&gt; [1..38], &lt;code&gt;:scale&lt;/code&gt; [0..38]. 기본값 (38,0).</target>
        </trans-unit>
        <trans-unit id="615d1c4837a689f9b4efbdc327b67ba8089a1737" translate="yes" xml:space="preserve">
          <source>Stable, Autogenerated IDs</source>
          <target state="translated">안정적이고 자동 생성 된 ID</target>
        </trans-unit>
        <trans-unit id="afad13aea5bcf6c4ecc20fa264b9795665fe4333" translate="yes" xml:space="preserve">
          <source>Stable, autogenerated IDs</source>
          <target state="translated">안정적이고 자동 생성 된 ID</target>
        </trans-unit>
        <trans-unit id="76db759a841b010afed436c6a66ac5ebea4d8d1e" translate="yes" xml:space="preserve">
          <source>Stand-Alone Active Support</source>
          <target state="translated">독립형 활성 지원</target>
        </trans-unit>
        <trans-unit id="1d10323c27ec5f9982ad73377fd582ff949840f8" translate="yes" xml:space="preserve">
          <source>Standalone</source>
          <target state="translated">Standalone</target>
        </trans-unit>
        <trans-unit id="c8d0927de99b47225b3f6cb4fb5e8c2b14a078e4" translate="yes" xml:space="preserve">
          <source>Standard configuration options (&lt;code&gt;:on&lt;/code&gt;, &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt;), which are available on the class version of &lt;code&gt;validates_with&lt;/code&gt;, should instead be placed on the &lt;code&gt;validates&lt;/code&gt; method as these are applied and tested in the callback.</source>
          <target state="translated">&lt;code&gt;validates_with&lt;/code&gt; 클래스 버전에서 사용 가능한 표준 구성 옵션 ( &lt;code&gt;:on&lt;/code&gt; , &lt;code&gt;:if&lt;/code&gt; 및 &lt;code&gt;:unless&lt;/code&gt; ) 은 콜백에서 적용 및 테스트 될 때 &lt;code&gt;validates&lt;/code&gt; 메소드 에 배치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f26a1ddbb78925032da81ac42c3a4d582ed50ba" translate="yes" xml:space="preserve">
          <source>StandardError</source>
          <target state="translated">StandardError</target>
        </trans-unit>
        <trans-unit id="477344d232738a1940fb13fed234ad833fbb080f" translate="yes" xml:space="preserve">
          <source>Start Here</source>
          <target state="translated">여기에서 시작하십시오</target>
        </trans-unit>
        <trans-unit id="3390431059d011633232d5d5149050478b09e423" translate="yes" xml:space="preserve">
          <source>Start streaming from the named &lt;code&gt;broadcasting&lt;/code&gt; pubsub queue. Optionally, you can pass a &lt;code&gt;callback&lt;/code&gt; that'll be used instead of the default of just transmitting the updates straight to the subscriber. Pass &lt;code&gt;coder: ActiveSupport::JSON&lt;/code&gt; to decode messages as JSON before passing to the callback. Defaults to &lt;code&gt;coder: nil&lt;/code&gt; which does no decoding, passes raw messages.</source>
          <target state="translated">이름 지정된 &lt;code&gt;broadcasting&lt;/code&gt; pubsub 큐 에서 스트리밍을 시작하십시오 . 선택적으로 업데이트를 구독자에게 바로 전송하는 대신 기본적으로 사용되는 &lt;code&gt;callback&lt;/code&gt; 을 전달할 수 있습니다 . 전달 &lt;code&gt;coder: ActiveSupport::JSON&lt;/code&gt; 은 콜백에 전달하기 전에 메시지를 JSON으로 디코딩합니다. 기본적으로 &lt;code&gt;coder: nil&lt;/code&gt; 은 디코딩하지 않고 원시 메시지를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="4c70b4153270784145514567fc8ccd3f8651f8c2" translate="yes" xml:space="preserve">
          <source>Start streaming the pubsub queue for the &lt;code&gt;model&lt;/code&gt; in this channel. Optionally, you can pass a &lt;code&gt;callback&lt;/code&gt; that'll be used instead of the default of just transmitting the updates straight to the subscriber.</source>
          <target state="translated">이 채널 에서 &lt;code&gt;model&lt;/code&gt; 의 pubsub 큐 스트리밍을 시작하십시오 . 선택적으로 업데이트를 구독자에게 바로 전송하는 대신 기본적으로 사용되는 &lt;code&gt;callback&lt;/code&gt; 을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e606f88cb97405a2021b27b1621034cb0699afaf" translate="yes" xml:space="preserve">
          <source>Started GET &amp;ldquo;/session/new&amp;rdquo; for 127.0.0.1 at 2012-09-26 14:51:42 -0700</source>
          <target state="translated">2012-09-26 14:51:42 -0700에서 127.0.0.1에 대한 &quot;/ session / new&quot;GET 시작</target>
        </trans-unit>
        <trans-unit id="7bcf6547cb31361cfe053a6c56f162fe533ef178" translate="yes" xml:space="preserve">
          <source>Starting the Backend</source>
          <target state="translated">백엔드 시작</target>
        </trans-unit>
        <trans-unit id="9603728e42349f4f328c1221f2dceee879953324" translate="yes" xml:space="preserve">
          <source>Starting up the Web Server</source>
          <target state="translated">웹 서버 시작</target>
        </trans-unit>
        <trans-unit id="6877845679f40739019603593367f5c06633009e" translate="yes" xml:space="preserve">
          <source>Starts a form tag that points the action to a URL configured with &lt;code&gt;url_for_options&lt;/code&gt; just like &lt;code&gt;ActionController::Base#url_for&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActionController::Base#url_for&lt;/code&gt; 와 같이 &lt;code&gt;url_for_options&lt;/code&gt; 로 구성된 URL을 조치를 가리키는 양식 태그를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="c6c181d343d8842af28b370b9f7956e6ed763a4c" translate="yes" xml:space="preserve">
          <source>Starts a form tag that points the action to a URL configured with &lt;code&gt;url_for_options&lt;/code&gt; just like ActionController::Base#url_for. The method for the form defaults to POST.</source>
          <target state="translated">ActionController :: Base # url_for와 같이 &lt;code&gt;url_for_options&lt;/code&gt; 로 구성된 URL을 조치를 가리키는 양식 태그를 시작합니다 . 양식의 방법은 기본적으로 POST입니다.</target>
        </trans-unit>
        <trans-unit id="7a7b5c5d1987e4bcde7a61798432e1fa62eaff7c" translate="yes" xml:space="preserve">
          <source>StatementTimeout</source>
          <target state="translated">StatementTimeout</target>
        </trans-unit>
        <trans-unit id="a5c8da6c409b3396d49583451e5d88c90288d8e0" translate="yes" xml:space="preserve">
          <source>Statements after &lt;code&gt;redirect_to&lt;/code&gt; in our controller get executed, so &lt;code&gt;redirect_to&lt;/code&gt; doesn't stop the execution of the function. To terminate the execution of the function immediately after the &lt;code&gt;redirect_to&lt;/code&gt;, use return.</source>
          <target state="translated">컨트롤러에서 &lt;code&gt;redirect_to&lt;/code&gt; 이후의 명령문 이 실행되므로 &lt;code&gt;redirect_to&lt;/code&gt; 는 함수 실행을 중지하지 않습니다. &lt;code&gt;redirect_to&lt;/code&gt; 직후에 함수 실행을 종료하려면 return을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="af92969a73d6478fcb802c1a76b95af4d1cc533c" translate="yes" xml:space="preserve">
          <source>Static</source>
          <target state="translated">Static</target>
        </trans-unit>
        <trans-unit id="038391114739af9945958226e259492fbda7c1be" translate="yes" xml:space="preserve">
          <source>Static Segments</source>
          <target state="translated">정적 세그먼트</target>
        </trans-unit>
        <trans-unit id="2e5eaca9e57d33af5533d63cdc799eb62a3e5ddf" translate="yes" xml:space="preserve">
          <source>Static#call</source>
          <target state="translated">Static#call</target>
        </trans-unit>
        <trans-unit id="acc9a648cd3240999feeeb5c892f2af94cf4db48" translate="yes" xml:space="preserve">
          <source>Static::new</source>
          <target state="translated">Static::new</target>
        </trans-unit>
        <trans-unit id="83f35fdcf43eb7934900986f5ca93fbf00ccf340" translate="yes" xml:space="preserve">
          <source>Step by Step</source>
          <target state="translated">단계별</target>
        </trans-unit>
        <trans-unit id="319c6dffe302722f1fe1e99fbea7196cf0c45430" translate="yes" xml:space="preserve">
          <source>Stoppable events</source>
          <target state="translated">멈춤 가능한 이벤트</target>
        </trans-unit>
        <trans-unit id="8c13d19b0addd989941e6ed2b0bbe19028362ad8" translate="yes" xml:space="preserve">
          <source>Store the resulting dictionaries somewhere.</source>
          <target state="translated">결과 사전을 어딘가에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="9504854f781e848fc54c4d2477b61b706e65ce8a" translate="yes" xml:space="preserve">
          <source>Store#read_store_attribute</source>
          <target state="translated">Store#read_store_attribute</target>
        </trans-unit>
        <trans-unit id="b8dfd11da6a4f2e8423b2f84b8c9d2be0f567a36" translate="yes" xml:space="preserve">
          <source>Store#write_store_attribute</source>
          <target state="translated">Store#write_store_attribute</target>
        </trans-unit>
        <trans-unit id="fc7523f61bf8e7e5c204726c00d765694778e007" translate="yes" xml:space="preserve">
          <source>Store::local_stored_attributes</source>
          <target state="translated">Store::local_stored_attributes</target>
        </trans-unit>
        <trans-unit id="391315e9479eff8941ea52446ba7470d1abe4381" translate="yes" xml:space="preserve">
          <source>Stores some of the &lt;code&gt;Rails&lt;/code&gt; initial environment parameters which will be used by middlewares and engines to configure themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf57482a99343fbc640bc42de7e0226edb2223d" translate="yes" xml:space="preserve">
          <source>Stores some of the Rails initial environment parameters which will be used by middlewares and engines to configure themselves.</source>
          <target state="translated">미들웨어 및 엔진이 자체 구성을 위해 사용하는 일부 Rails 초기 환경 매개 변수를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="04ea6a4ff4a01680d4b0732061b62bd88db496aa" translate="yes" xml:space="preserve">
          <source>Storing the ha1 hash: MD5(username:realm:password), is better than storing a plain password. If the password file or database is compromised, the attacker would be able to use the ha1 hash to authenticate as the user at this &lt;code&gt;realm&lt;/code&gt;, but would not have the user's password to try using at other sites.</source>
          <target state="translated">ha1 해시 저장 : MD5 (username : realm : password)는 일반 비밀번호를 저장하는 것보다 낫습니다. 비밀번호 파일 또는 데이터베이스가 손상된 경우 공격자는 ha1 해시를 사용하여이 &lt;code&gt;realm&lt;/code&gt; 의 사용자로 인증 할 수 있지만 다른 사이트에서 사용하기 위해 사용자의 비밀번호는 가지고 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e8325521df6e6903ede77955f9bf1a333363aed" translate="yes" xml:space="preserve">
          <source>Streaming</source>
          <target state="translated">Streaming</target>
        </trans-unit>
        <trans-unit id="35f6a851e42b26a581af7488b4e6c97f3d9edf01" translate="yes" xml:space="preserve">
          <source>Streaming and File Downloads</source>
          <target state="translated">스트리밍 및 파일 다운로드</target>
        </trans-unit>
        <trans-unit id="192ee001fb014ad09dfca9f18f6839bbe436fa76" translate="yes" xml:space="preserve">
          <source>Streaming arbitrary data is an extremely powerful tool. As shown in the previous examples, you can choose when and what to send across a response stream. However, you should also note the following things:</source>
          <target state="translated">임의의 데이터 스트리밍은 매우 강력한 도구입니다. 이전 예에서와 같이 응답 스트림을 통해 언제, 무엇을 전송할 것인지 선택할 수 있습니다. 그러나 다음 사항도 참고해야합니다.</target>
        </trans-unit>
        <trans-unit id="74985da267c6803b262f117de72af2d02e48029f" translate="yes" xml:space="preserve">
          <source>Streams</source>
          <target state="translated">Streams</target>
        </trans-unit>
        <trans-unit id="a44d219b82cbb08d6ea4bab1c16e360bad239585" translate="yes" xml:space="preserve">
          <source>Strict Validations</source>
          <target state="translated">엄격한 검증</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="7aca66c7ec7a4c792eb79f36bb1ecfb0a5e508ec" translate="yes" xml:space="preserve">
          <source>String#at</source>
          <target state="translated">String#at</target>
        </trans-unit>
        <trans-unit id="6100cc069a1d3bea7f3f18e280e8c4f03bfccb7f" translate="yes" xml:space="preserve">
          <source>String#from</source>
          <target state="translated">String#from</target>
        </trans-unit>
        <trans-unit id="9977e7c72a2512a46640cc0cdc4e7ac04ae50b67" translate="yes" xml:space="preserve">
          <source>String#last</source>
          <target state="translated">String#last</target>
        </trans-unit>
        <trans-unit id="e1277632def52b9d696a2f08ce5b40a1a9f64175" translate="yes" xml:space="preserve">
          <source>String#to</source>
          <target state="translated">String#to</target>
        </trans-unit>
        <trans-unit id="b045f0b3a287dd1172445a70eb4ee204434dd9fd" translate="yes" xml:space="preserve">
          <source>StringInquirer</source>
          <target state="translated">StringInquirer</target>
        </trans-unit>
        <trans-unit id="b47e266eec75ea9b0ff7dc8d77699f0ce31cffa5" translate="yes" xml:space="preserve">
          <source>Strings are considered to be &lt;em&gt;unsafe&lt;/em&gt; by default:</source>
          <target state="translated">문자열은 기본적 으로 &lt;em&gt;안전하지 않은&lt;/em&gt; 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="84b249ddb512b46a5e2cbb34558ad46b2b214c2a" translate="yes" xml:space="preserve">
          <source>Strips all HTML tags from &lt;code&gt;html&lt;/code&gt;, including comments and special characters.</source>
          <target state="translated">주석 및 특수 문자를 포함하여 &lt;code&gt;html&lt;/code&gt; 에서 모든 HTML 태그를 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="401e4794eb9d27cf669af09313d76be50ac6d891" translate="yes" xml:space="preserve">
          <source>Strips all HTML tags from the html, including comments. This functionality is powered by the rails-html-sanitizer gem.</source>
          <target state="translated">주석을 포함하여 HTML에서 모든 HTML 태그를 제거합니다. 이 기능은 rails-html-sanitizer gem에 의해 구동됩니다.</target>
        </trans-unit>
        <trans-unit id="dd489406c1b756709cd42bf56a7b3cd2c70e145c" translate="yes" xml:space="preserve">
          <source>Strips all link tags from &lt;code&gt;html&lt;/code&gt; leaving just the link text.</source>
          <target state="translated">링크 텍스트 만 남기고 &lt;code&gt;html&lt;/code&gt; 에서 모든 링크 태그를 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="7a4c4d7a574dfee85453e08901b18410dcf7dc6b" translate="yes" xml:space="preserve">
          <source>Strips all link tags from text leaving just the link text.</source>
          <target state="translated">링크 텍스트 만 남기고 텍스트에서 모든 링크 태그를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="bda0366bad34ec3e654dc5aa2e015351c79b45ec" translate="yes" xml:space="preserve">
          <source>Strips indentation in heredocs.</source>
          <target state="translated">heredocs에서 들여 쓰기를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b3772399bac118b9ac05d55e54c3e832f6f78d8c" translate="yes" xml:space="preserve">
          <source>Strong ETags are considered byte-for-byte identical. They allow a browser or proxy cache to support &lt;a href=&quot;../../../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; requests, useful for paging through a PDF file or scrubbing through a video. Some CDNs only support strong ETags and will ignore weak ETags entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fa5327e4e1a1393c3e84e9a8fa380742d482fb" translate="yes" xml:space="preserve">
          <source>Strong ETags are considered byte-for-byte identical. They allow a browser or proxy cache to support &lt;a href=&quot;../../../range&quot;&gt;Range&lt;/a&gt; requests, useful for paging through a PDF file or scrubbing through a video. Some CDNs only support strong ETags and will ignore weak ETags entirely.</source>
          <target state="translated">강력한 ETag는 바이트 단위 동일하다고 간주됩니다. 브라우저 또는 프록시 캐시가 &lt;a href=&quot;../../../range&quot;&gt;범위&lt;/a&gt; 요청 을 지원 하여 PDF 파일을 페이징하거나 비디오를 스크러빙하는 데 유용합니다. 일부 CDN은 강력한 ETag 만 지원하며 약한 ETag는 완전히 무시합니다.</target>
        </trans-unit>
        <trans-unit id="372e29ad81d51edeb8dec5bcafbeaac686348fb6" translate="yes" xml:space="preserve">
          <source>Strong Parameters</source>
          <target state="translated">강력한 매개 변수</target>
        </trans-unit>
        <trans-unit id="f9c20f0e77037ca26119ee07680d1b682fcaf8e0" translate="yes" xml:space="preserve">
          <source>Strong v/s Weak ETags</source>
          <target state="translated">강한 v / s 약한 ETag</target>
        </trans-unit>
        <trans-unit id="e6ad7ced857223c1588ddd933f4821f92b73e58e" translate="yes" xml:space="preserve">
          <source>StrongParameters</source>
          <target state="translated">StrongParameters</target>
        </trans-unit>
        <trans-unit id="9573a3f85dd0628732029021a858a48321b86bb7" translate="yes" xml:space="preserve">
          <source>StrongParameters#params</source>
          <target state="translated">StrongParameters#params</target>
        </trans-unit>
        <trans-unit id="eda6fc838db7766c3ce2185c447e5567d9d8f706" translate="yes" xml:space="preserve">
          <source>StrongParameters#params=</source>
          <target state="translated">StrongParameters#params=</target>
        </trans-unit>
        <trans-unit id="fac54cb7827ec9cbcf328aea07d359a1fb61c56d" translate="yes" xml:space="preserve">
          <source>Struct.new(:line, :tag, :text)</source>
          <target state="translated">Struct.new (: line, : tag, : text)</target>
        </trans-unit>
        <trans-unit id="9b783c40f9ae28c67ffedf6b7ac63ce40e5bfad3" translate="yes" xml:space="preserve">
          <source>Structuring Layouts</source>
          <target state="translated">구조 레이아웃</target>
        </trans-unit>
        <trans-unit id="577f879ea561929d58760376d09a963be361d62b" translate="yes" xml:space="preserve">
          <source>Stub `stream_from` to track streams for the channel. Add public aliases for `subscription_confirmation_sent?` and `subscription_rejected?`.</source>
          <target state="translated">`stream_from`을 스텁하여 채널의 스트림을 추적하십시오. `subscription_confirmation_sent?`및`subscription_rejected?`에 대한 공개 별명을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8a540dc63b82395ff517cc2d44d374af7126ff09" translate="yes" xml:space="preserve">
          <source>Subclasses &amp;amp; Descendants</source>
          <target state="translated">서브 클래스 및 자손</target>
        </trans-unit>
        <trans-unit id="87d60be7c38e6bec86dfec036bf666168843f1f0" translate="yes" xml:space="preserve">
          <source>Subclasses and Descendants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc5c609905c1214985fc61197845eeeecb34239" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;ActionController::Base&lt;/code&gt; are protected by default with the &lt;code&gt;:exception&lt;/code&gt; strategy, which raises an &lt;code&gt;ActionController::InvalidAuthenticityToken&lt;/code&gt; error on unverified requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bf96aed4c7ad74e13f0bbe219e5661f8aa0d6e" translate="yes" xml:space="preserve">
          <source>Subject of the mail</source>
          <target state="translated">우편의 제목</target>
        </trans-unit>
        <trans-unit id="e446a90b58af94d64b8a59e125e0713da4697f6b" translate="yes" xml:space="preserve">
          <source>Submitted form data is put into the &lt;code&gt;params&lt;/code&gt; Hash, alongside captured route parameters. Thus, the &lt;code&gt;create&lt;/code&gt; action can access the submitted title via &lt;code&gt;params[:article][:title]&lt;/code&gt; and the submitted body via &lt;code&gt;params[:article][:body]&lt;/code&gt;. We could pass these values individually to &lt;code&gt;Article.new&lt;/code&gt;, but that would be verbose and possibly error-prone. And it would become worse as we add more fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cc599688b5a3532c17882df9ea310b0ee22570" translate="yes" xml:space="preserve">
          <source>Subscribe While a Block Runs</source>
          <target state="translated">블록이 실행되는 동안 구독</target>
        </trans-unit>
        <trans-unit id="507ed395e553adb98d85d517842087c5a38d0dab" translate="yes" xml:space="preserve">
          <source>Subscribe to a given event name with the passed &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="translated">전달 된 &lt;code&gt;block&lt;/code&gt; 을 사용하여 주어진 이벤트 이름을 구독하십시오 .</target>
        </trans-unit>
        <trans-unit id="79de4a850f8cd914e08095c8d86d3096d3dc1734" translate="yes" xml:space="preserve">
          <source>Subscribe to the Rails security &lt;a href=&quot;https://groups.google.com/forum/#!forum/rubyonrails-security&quot;&gt;mailing list&lt;/a&gt;.</source>
          <target state="translated">Rails 보안 &lt;a href=&quot;https://groups.google.com/forum/#!forum/rubyonrails-security&quot;&gt;메일 링리스트에&lt;/a&gt; 가입 하십시오 .</target>
        </trans-unit>
        <trans-unit id="93912b5fd52541bbb237ea00705f0c9a29411d97" translate="yes" xml:space="preserve">
          <source>Subscribe to the channel under test. Optionally pass subscription parameters as a &lt;a href=&quot;../../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25003e234056e1839774d9e4feb586528d08c14d" translate="yes" xml:space="preserve">
          <source>Subscribe to the channel under test. Optionally pass subscription parameters as a &lt;a href=&quot;../../../hash&quot;&gt;Hash&lt;/a&gt;.</source>
          <target state="translated">테스트중인 채널을 구독하십시오. 선택적으로 구독 매개 변수를 &lt;a href=&quot;../../../hash&quot;&gt;Hash&lt;/a&gt; 로 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="16b20e68bb281a3bd7e3649e8fa90b958868b4f8" translate="yes" xml:space="preserve">
          <source>Subscriber</source>
          <target state="translated">Subscriber</target>
        </trans-unit>
        <trans-unit id="6f13df39a03f7577fd7dff463e4c31b98c1f1fe2" translate="yes" xml:space="preserve">
          <source>Subscribers</source>
          <target state="translated">Subscribers</target>
        </trans-unit>
        <trans-unit id="c59cac1615815b2801d50eb6a6128f79e6123bd9" translate="yes" xml:space="preserve">
          <source>Subscribers using a regexp or other pattern-matching object will remain subscribed to all events that match their original pattern, unless those events match a string passed to `unsubscribe`:</source>
          <target state="translated">정규 표현식이나 다른 패턴 일치 객체를 사용하는 가입자는 해당 이벤트가 '구독 취소'로 전달 된 문자열과 일치하지 않는 한 원래 패턴과 일치하는 모든 이벤트를 계속 구독합니다.</target>
        </trans-unit>
        <trans-unit id="625ec023fc0108feafd040158b9473e9d205e5cd" translate="yes" xml:space="preserve">
          <source>Subscribing to an event</source>
          <target state="translated">이벤트 구독</target>
        </trans-unit>
        <trans-unit id="231395de64abd491f9a7b27fe4193fb3ed9cd853" translate="yes" xml:space="preserve">
          <source>Subscribing to an event is easy. Use &lt;code&gt;ActiveSupport::Notifications.subscribe&lt;/code&gt; with a block to listen to any notification.</source>
          <target state="translated">이벤트를 쉽게 구독 할 수 있습니다. 블록으로 &lt;code&gt;ActiveSupport::Notifications.subscribe&lt;/code&gt; 를 사용 하여 모든 알림을 청취하십시오.</target>
        </trans-unit>
        <trans-unit id="702df9f3517327d6a8a249fcd292c96fc8f8c180" translate="yes" xml:space="preserve">
          <source>Subscription Adapter</source>
          <target state="translated">구독 어댑터</target>
        </trans-unit>
        <trans-unit id="5697fd85adbd13bf85f28712f9a136e80cc8067e" translate="yes" xml:space="preserve">
          <source>Subscriptions</source>
          <target state="translated">Subscriptions</target>
        </trans-unit>
        <trans-unit id="ff835d8dd510709fc31f47635b9f005bfd4db8cf" translate="yes" xml:space="preserve">
          <source>Subsequent calls to order on the same relation will be appended. For example:</source>
          <target state="translated">같은 관계에서 주문에 대한 후속 호출이 추가됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f28208be67a73faf2caaceb50fb78da55decb76d" translate="yes" xml:space="preserve">
          <source>Subsequent to the file being uploaded server-side to the service via &lt;code&gt;create_after_upload!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;create_after_upload!&lt;/code&gt; 를 통해 파일을 서버 측 서비스에 업로드 한 후 ! .</target>
        </trans-unit>
        <trans-unit id="1ee2c9d95ff6510fa437c14eb4289a2ff82fa336" translate="yes" xml:space="preserve">
          <source>Subtracts an interval of time and returns a new &lt;a href=&quot;timewithzone&quot;&gt;&lt;code&gt;TimeWithZone&lt;/code&gt;&lt;/a&gt; object unless the other value `acts_like?` time. Then it will return a &lt;code&gt;Float&lt;/code&gt; of the difference between the two times that represents the difference between the current object's time and the &lt;code&gt;other&lt;/code&gt; time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979f3a019ab008c009daab8febe80b609ead16b7" translate="yes" xml:space="preserve">
          <source>Subtracts an interval of time and returns a new &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; object unless the other value `acts_like?` time. Then it will return a Float of the difference between the two times that represents the difference between the current object's time and the &lt;code&gt;other&lt;/code&gt; time.</source>
          <target state="translated">다른 값`acts_like?`시간이 아닌 한 시간 간격을 &lt;a href=&quot;timewithzone&quot;&gt;빼고&lt;/a&gt; 새로운 TimeWithZone 객체를 반환합니다 . 그런 다음 현재 객체의 시간과 &lt;code&gt;other&lt;/code&gt; 시간 의 차이를 나타내는 두 번의 차이의 부동 소수점을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="094be45b7ca7a8e41bf4965da544bd34567a50e0" translate="yes" xml:space="preserve">
          <source>Subtracts an interval of time from the current object's time and returns the result as a new &lt;a href=&quot;timewithzone&quot;&gt;&lt;code&gt;TimeWithZone&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d813740814578218109fba9a27c5cbb7019f46" translate="yes" xml:space="preserve">
          <source>Subtracts an interval of time from the current object's time and returns the result as a new &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; object.</source>
          <target state="translated">현재 객체의 시간에서 시간 간격을 &lt;a href=&quot;timewithzone&quot;&gt;빼고&lt;/a&gt; 결과를 새로운 TimeWithZone 객체 로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6d7019430d99d4b3fcfe81c9b2c0185887786b8c" translate="yes" xml:space="preserve">
          <source>Subtracts another &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; from this &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; values are treated as seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e61fabb7e50ad1a369cd42d300db7a63d1128b" translate="yes" xml:space="preserve">
          <source>Subtracts another &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; or a &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; from this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;. &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; values are treated as seconds.</source>
          <target state="translated">이 &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; 에서 다른 &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; 또는 &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; 을 뺍니다 . &lt;a href=&quot;../numeric&quot;&gt;숫자&lt;/a&gt; 값은 초로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="301400cbac8a5522faf132838c9a8542df7c0da2" translate="yes" xml:space="preserve">
          <source>Sucker Punch</source>
          <target state="translated">빨판 펀치</target>
        </trans-unit>
        <trans-unit id="832a0022546f31343c2a592da2fe4d3dd93fd712" translate="yes" xml:space="preserve">
          <source>Sucker Punch adapter for Active Job</source>
          <target state="translated">활성 작업을위한 빨판 펀치 어댑터</target>
        </trans-unit>
        <trans-unit id="ae5ab643cb550774aaca759f427ff885555960c1" translate="yes" xml:space="preserve">
          <source>Sucker Punch is a single-process Ruby asynchronous processing library. This reduces the cost of hosting on a service like Heroku along with the memory footprint of having to maintain additional jobs if hosting on a dedicated server. All queues can run within a single application (e.g. Rails, Sinatra, etc.) process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380c96bb3ab21964280206e0e71296308edb1ea5" translate="yes" xml:space="preserve">
          <source>Sucker Punch is a single-process Ruby asynchronous processing library. This reduces the cost of hosting on a service like Heroku along with the memory footprint of having to maintain additional jobs if hosting on a dedicated server. All queues can run within a single application (eg. Rails, Sinatra, etc.) process.</source>
          <target state="translated">Sucker Punch는 단일 프로세스 Ruby 비동기 처리 라이브러리입니다. 이는 전용 서버에서 호스팅하는 경우 추가 작업을 유지해야하는 메모리 공간과 함께 Heroku와 같은 서비스에서 호스팅하는 비용을 줄입니다. 모든 대기열은 단일 응용 프로그램 (예 : Rails, Sinatra 등) 프로세스 내에서 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55def06ef8f1600ccd99614df91de64b76a84710" translate="yes" xml:space="preserve">
          <source>Suite of assertions to test routes generated by Rails and the handling of requests made to them.</source>
          <target state="translated">Rails가 생성 한 라우트를 테스트하기위한 어설 션 세트 및 요청 처리.</target>
        </trans-unit>
        <trans-unit id="fc9ce14b28c6f2c3b72caf056ca604b2b96f7d2b" translate="yes" xml:space="preserve">
          <source>Sum</source>
          <target state="translated">Sum</target>
        </trans-unit>
        <trans-unit id="a14aa7327048cddf69e5ff64456d10b2f83ab8e7" translate="yes" xml:space="preserve">
          <source>Superclass for &lt;a href=&quot;../actioncontroller&quot;&gt;&lt;code&gt;ActionController&lt;/code&gt;&lt;/a&gt; functional tests. Functional tests allow you to test a single controller action per test method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24262a45db4d161c9006621695f56a1bd47ad303" translate="yes" xml:space="preserve">
          <source>Superclass for &lt;a href=&quot;../actioncontroller&quot;&gt;ActionController&lt;/a&gt; functional tests. Functional tests allow you to test a single controller action per test method.</source>
          <target state="translated">&lt;a href=&quot;../actioncontroller&quot;&gt;ActionController&lt;/a&gt; 기능 테스트를 위한 수퍼 클래스 . 기능 테스트를 통해 테스트 방법마다 단일 컨트롤러 동작을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="903af6ddba5c11814fffc31d0703b3c576a1d9f8" translate="yes" xml:space="preserve">
          <source>Superclass for Action Cable channel functional tests.</source>
          <target state="translated">Action Cable 채널 기능 테스트를위한 수퍼 클래스.</target>
        </trans-unit>
        <trans-unit id="4ec7e34292e03f923d0471ad925211bc8291d59d" translate="yes" xml:space="preserve">
          <source>Superclass for all database execution errors.</source>
          <target state="translated">모든 데이터베이스 실행 오류에 대한 수퍼 클래스</target>
        </trans-unit>
        <trans-unit id="540f5d8fdc8280ed1f622f4cad20a4f007e8a845" translate="yes" xml:space="preserve">
          <source>Superclass for errors that have been aborted (either by client or server).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7acdedcefd6d0cef74bf827412727124de3f818" translate="yes" xml:space="preserve">
          <source>Superclass for the evaluation contexts used by &lt;code&gt;ERB&lt;/code&gt; fixtures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52a90425b1b70b16916267003e91d93a8fd7861" translate="yes" xml:space="preserve">
          <source>Superclass for the evaluation contexts used by ERB fixtures.</source>
          <target state="translated">ERB 픽스쳐가 사용하는 평가 컨텍스트를위한 수퍼 클래스.</target>
        </trans-unit>
        <trans-unit id="fe97687c91ba17c2df83823e939a7e57acd41463" translate="yes" xml:space="preserve">
          <source>Support for YAML defaults</source>
          <target state="translated">YAML 기본값 지원</target>
        </trans-unit>
        <trans-unit id="a8dedcc6914c497c35b06e372d67140fc548c21a" translate="yes" xml:space="preserve">
          <source>Support for basic, digest, or token HTTP authentication:</source>
          <target state="translated">기본, 다이제스트 또는 토큰 HTTP 인증 지원 :</target>
        </trans-unit>
        <trans-unit id="ef6e10d5c48658ba49c9dbd0df687d6bb3f5d375" translate="yes" xml:space="preserve">
          <source>Support for parsing XML parameters has been extracted into a gem named &lt;code&gt;actionpack-xml_parser&lt;/code&gt;.</source>
          <target state="translated">XML 매개 변수 구문 분석에 대한 지원이 &lt;code&gt;actionpack-xml_parser&lt;/code&gt; 라는 gem으로 추출되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0e477f230a76431e262cdbb28cbf50edf224a60d" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;encode_json&lt;/code&gt; hook</source>
          <target state="translated">&lt;code&gt;encode_json&lt;/code&gt; 후크 지원</target>
        </trans-unit>
        <trans-unit id="0f487ba2540991716280679dc9e72980e433d485" translate="yes" xml:space="preserve">
          <source>Support of the Rails framework is divided into four groups: New features, bug fixes, security issues, and severe security issues. They are handled as follows, all versions in &lt;code&gt;X.Y.Z&lt;/code&gt; format.</source>
          <target state="translated">Rails 프레임 워크 지원은 새로운 기능, 버그 수정, 보안 문제 및 심각한 보안 문제의 네 그룹으로 나뉩니다. &lt;code&gt;X.Y.Z&lt;/code&gt; 형식의 모든 버전은 다음과 같이 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="5236363bec24b59513b58a4a7c15b976a190e8fc" translate="yes" xml:space="preserve">
          <source>Support of the Rails framework is divided into four groups: New features, bug fixes, security issues, and severe security issues. They are handled as follows, all versions, except for security releases, in &lt;code&gt;X.Y.Z&lt;/code&gt;, format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0377706508a1a8ffc7b2445d9c4711ecfe46bce" translate="yes" xml:space="preserve">
          <source>Supported options:</source>
          <target state="translated">지원되는 옵션 :</target>
        </trans-unit>
        <trans-unit id="b8bd727993a3ef646ebfbc8b3e4ec95bb22e84b1" translate="yes" xml:space="preserve">
          <source>Supported types for arguments</source>
          <target state="translated">인수에 지원되는 유형</target>
        </trans-unit>
        <trans-unit id="801578d1d06b0498f389b5bb1d0766bb8c1e5bc6" translate="yes" xml:space="preserve">
          <source>Supporting polymorphic relationships is a little bit more complicated, since Active Record needs to know what type your association is pointing at. Something like this should look familiar:</source>
          <target state="translated">다형성 관계를 지원하는 것은 약간 더 복잡합니다. Active Record는 어떤 유형의 연결을 가리키는 지 알아야하기 때문입니다. 이와 비슷한 것이 익숙해 보일 것입니다.</target>
        </trans-unit>
        <trans-unit id="3820158b0fc129eec745e83611668190fcc5797f" translate="yes" xml:space="preserve">
          <source>Supports Memcached-like sharding across Redises with Redis::Distributed.</source>
          <target state="translated">Redis :: Distributed를 사용하여 Redises에서 Memcached와 같은 샤딩을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2ddcc77ee0dbfd6244922750694bb918fc9afb95" translate="yes" xml:space="preserve">
          <source>Supports Redis KEYS glob patterns:</source>
          <target state="translated">Redis KEYS glob 패턴을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="db0d714d929fa801e05f92a5b913d229a0597ef7" translate="yes" xml:space="preserve">
          <source>Supports vanilla Redis, hiredis, and Redis::Distributed.</source>
          <target state="translated">바닐라 Redis, hiredis 및 Redis :: Distributed를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="18b4964675b1cd3cd8d3fb3adfa8c16dafeafea2" translate="yes" xml:space="preserve">
          <source>Suppose an application has a back office whose controllers are stored in &lt;code&gt;app/controllers/admin&lt;/code&gt;. If the &lt;code&gt;Admin&lt;/code&gt; module is not yet loaded when &lt;code&gt;Admin::UsersController&lt;/code&gt; is hit, Rails needs first to autoload the constant &lt;code&gt;Admin&lt;/code&gt;.</source>
          <target state="translated">애플리케이션에 컨트롤러가 &lt;code&gt;app/controllers/admin&lt;/code&gt; 에 저장된 백 오피스가 있다고 가정 하십시오 . 상기 중간 &lt;code&gt;Admin&lt;/code&gt; 경우 모듈이 아직로드되지 않은 &lt;code&gt;Admin::UsersController&lt;/code&gt; 인기이며, 레일은 상수의 자동로드 먼저해야 &lt;code&gt;Admin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7837dd1c94b5cb5759cca35488f69c778f36446a" translate="yes" xml:space="preserve">
          <source>Suppose we want to set the 'locked' attribute to &lt;code&gt;false&lt;/code&gt; if we're creating a new record, but we don't want to include it in the query. So we want to find the client named &quot;Andy&quot;, or if that client doesn't exist, create a client named &quot;Andy&quot; which is not locked.</source>
          <target state="translated">새 레코드를 작성하는 경우 'locked'속성을 &lt;code&gt;false&lt;/code&gt; 로 설정하려고 하지만 쿼리에 포함하지 않으려 고한다고 가정하십시오. 따라서 &quot;Andy&quot;라는 이름의 클라이언트를 찾거나 해당 클라이언트가 없으면 &quot;Andy&quot;라는 이름의 클라이언트를 작성하여 잠그지 마십시오.</target>
        </trans-unit>
        <trans-unit id="694d769fd5318ff03d2cfff6a33dff2ea913ec91" translate="yes" xml:space="preserve">
          <source>Suppose we want to set the 'locked' attribute to &lt;code&gt;false&lt;/code&gt; if we're creating a new record, but we don't want to include it in the query. So we want to find the customer named &quot;Andy&quot;, or if that customer doesn't exist, create a customer named &quot;Andy&quot; which is not locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad450dd8e471cd06e75d26ef921ab65c010a7e8" translate="yes" xml:space="preserve">
          <source>Suppose you have the following &lt;code&gt;ApplicationController&lt;/code&gt; layout:</source>
          <target state="translated">다음 &lt;code&gt;ApplicationController&lt;/code&gt; 레이아웃 이 있다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d11bbf1d07f3d43cd223bb80894692584f27f55" translate="yes" xml:space="preserve">
          <source>Suppose you want to find a client named 'Andy', and if there's none, create one. You can do so by running:</source>
          <target state="translated">'Andy'라는 이름의 클라이언트를 찾고 싶지 않다면 이름을 작성한다고 가정하십시오. 다음을 실행하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="164221a7e6400e952b8351f54a9329eb68d0a645" translate="yes" xml:space="preserve">
          <source>Suppose you want to find a customer named &quot;Andy&quot;, and if there's none, create one. You can do so by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74748fd2ce1853df2d624ceae27d6cff178f8bbb" translate="yes" xml:space="preserve">
          <source>Supposing we use the same &lt;code&gt;_box&lt;/code&gt; partial from above, this would produce the same output as the previous example.</source>
          <target state="translated">위에서 동일한 &lt;code&gt;_box&lt;/code&gt; 부분을 사용한다고 가정하면 이전 예제와 동일한 출력이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ecb095a1d31fe57faf4030aeca0620792d462a67" translate="yes" xml:space="preserve">
          <source>Supposing you have an action that adds a new person, optionally creating their company (by name) if it does not already exist, without web-services, it might look like this:</source>
          <target state="translated">웹 서비스가없는 경우 새 사람을 추가하고 선택적으로 회사 (이름별로)를 작성하는 조치가 있다고 가정하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2215e21b3e8eab906ba2b0d344f18a3c944554f" translate="yes" xml:space="preserve">
          <source>Suppresses logger output for asset requests.</source>
          <target state="translated">자산 요청에 대한 로거 출력을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="bcae4260789113e711f6533263005d75038f3860" translate="yes" xml:space="preserve">
          <source>Suppressor</source>
          <target state="translated">Suppressor</target>
        </trans-unit>
        <trans-unit id="e697510e0dc70abe4f2d625af0e99c4d736cd4f6" translate="yes" xml:space="preserve">
          <source>Surround string with single quotes if there is no quotes. Otherwise fall back to double quotes</source>
          <target state="translated">따옴표가 없으면 작은 따옴표로 묶습니다. 그렇지 않으면 큰 따옴표로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="521fb7097b70476a3e1f5e4b812e25f28991cb8f" translate="yes" xml:space="preserve">
          <source>Switches</source>
          <target state="translated">Switches</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="83c10bd7cb5e68bfcc1e6740c4f8828d95cffc70" translate="yes" xml:space="preserve">
          <source>Synchronously deletes the attachment and &lt;a href=&quot;blob#method-i-purge&quot;&gt;purges the blob&lt;/a&gt;.</source>
          <target state="translated">첨부 파일을 동 &lt;a href=&quot;blob#method-i-purge&quot;&gt;기적으로 삭제하고 blob을 제거합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="feb7b286d3df45fe6154980884296c21ba52d056" translate="yes" xml:space="preserve">
          <source>System Test configuration options</source>
          <target state="translated">시스템 테스트 구성 옵션</target>
        </trans-unit>
        <trans-unit id="7321567c1645835acdd615d9fd0005a2b3a61ff1" translate="yes" xml:space="preserve">
          <source>System Testing</source>
          <target state="translated">시스템 테스트</target>
        </trans-unit>
        <trans-unit id="03b36ad7cfb863944816cacaf4fb1e5d8c7555f0" translate="yes" xml:space="preserve">
          <source>System tests allow you to test user interactions with your application, running tests in either a real or a headless browser. System tests use Capybara under the hood.</source>
          <target state="translated">시스템 테스트를 통해 실제 브라우저 또는 헤드리스 브라우저에서 테스트를 실행하여 응용 프로그램과의 사용자 상호 작용을 테스트 할 수 있습니다. 시스템 테스트는 후드 아래에서 Capybara를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d9b102a58115c6aadfb64f4319e8e8e4b589ec06" translate="yes" xml:space="preserve">
          <source>System tests clean up test data by rolling back a transaction. Because destroy is never called on an object, the attached files are never cleaned up. If you want to clear the files, you can do it in an &lt;code&gt;after_teardown&lt;/code&gt; callback. Doing it here ensures that all connections created during the test are complete and you won't receive an error from Active Storage saying it can't find a file.</source>
          <target state="translated">시스템 테스트는 트랜잭션을 롤백하여 테스트 데이터를 정리합니다. 오브젝트에서 destroy가 호출되지 않으므로 첨부 된 파일이 정리되지 않습니다. 파일을 지우려면 &lt;code&gt;after_teardown&lt;/code&gt; 콜백 에서 수행 할 수 있습니다 . 여기서 수행하면 테스트 중에 생성 된 모든 연결이 완료되고 Active Storage에서 파일을 찾을 수 없다는 오류가 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1156c7a0363fcf22ca25f6102b6c8c549235d8bd" translate="yes" xml:space="preserve">
          <source>System tests let you test applications in the browser. Because system tests use a real browser experience, you can test all of your JavaScript easily from your test suite.</source>
          <target state="translated">시스템 테스트를 통해 브라우저에서 응용 프로그램을 테스트 할 수 있습니다. 시스템 테스트는 실제 브라우저 환경을 사용하므로 테스트 스위트에서 모든 JavaScript를 쉽게 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c77084d21acae6f8c2d4222b6d473c40b6d2eaf4" translate="yes" xml:space="preserve">
          <source>SystemTestCase</source>
          <target state="translated">SystemTestCase</target>
        </trans-unit>
        <trans-unit id="46dc0d3f321794633fd0c4a556d79d4c85d508b2" translate="yes" xml:space="preserve">
          <source>SystemTestCase::driven_by</source>
          <target state="translated">SystemTestCase::driven_by</target>
        </trans-unit>
        <trans-unit id="f9549ffb9fc58054defacc4f194375cda4042343" translate="yes" xml:space="preserve">
          <source>TAG_PREFIXES</source>
          <target state="translated">TAG_PREFIXES</target>
        </trans-unit>
        <trans-unit id="a84061340fa8cb0fb8ed991006db301d314149ef" translate="yes" xml:space="preserve">
          <source>TAG_TYPES</source>
          <target state="translated">TAG_TYPES</target>
        </trans-unit>
        <trans-unit id="055e75774170e1877813218f0e2eab812a3858bb" translate="yes" xml:space="preserve">
          <source>TERABYTE</source>
          <target state="translated">TERABYTE</target>
        </trans-unit>
        <trans-unit id="b7845ed63315e19f79b6f587db2845951a920e8e" translate="yes" xml:space="preserve">
          <source>TERMINATOR</source>
          <target state="translated">TERMINATOR</target>
        </trans-unit>
        <trans-unit id="4e74750220b607df053346351e7dc44867c52d38" translate="yes" xml:space="preserve">
          <source>TODO This should be broken apart into AD::Request::Session and probably be included by the session middleware.</source>
          <target state="translated">TODO 이것은 AD :: Request :: Session으로 분리되어야하며 아마도 세션 미들웨어에 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb5059f80352e807395706f9e9cd3d2cd449728e" translate="yes" xml:space="preserve">
          <source>TOKEN_KEY</source>
          <target state="translated">TOKEN_KEY</target>
        </trans-unit>
        <trans-unit id="8c909df47790e0c75fe7152350f29f93ff67ad45" translate="yes" xml:space="preserve">
          <source>TOKEN_REGEX</source>
          <target state="translated">TOKEN_REGEX</target>
        </trans-unit>
        <trans-unit id="233afe6bd93e5cc12d4160127b2c56cf3855e4e6" translate="yes" xml:space="preserve">
          <source>TRAILING_STAR_REGEXP</source>
          <target state="translated">TRAILING_STAR_REGEXP</target>
        </trans-unit>
        <trans-unit id="7db07191d94b47216e39fc6c70336641ddf25a9f" translate="yes" xml:space="preserve">
          <source>TRUSTED_PROXIES</source>
          <target state="translated">TRUSTED_PROXIES</target>
        </trans-unit>
        <trans-unit id="6807e0735b6059d7a99f2ec2389b4167294c34b5" translate="yes" xml:space="preserve">
          <source>Table / Schema</source>
          <target state="translated">테이블 / 스키마</target>
        </trans-unit>
        <trans-unit id="a718ab92137990bec263184e8eb00254c478179d" translate="yes" xml:space="preserve">
          <source>Table Aliasing</source>
          <target state="translated">테이블 별칭</target>
        </trans-unit>
        <trans-unit id="0ab839ed3b8ed404e1dbbba2076ea0f547184960" translate="yes" xml:space="preserve">
          <source>Table aliases are automatically truncated according to the maximum length of table identifiers according to the specific database.</source>
          <target state="translated">테이블 별명은 특정 데이터베이스에 따라 테이블 ID의 최대 길이에 따라 자동으로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="038c47a8f7df80e532f13b0c12580ccf60b70c2e" translate="yes" xml:space="preserve">
          <source>TagHelper</source>
          <target state="translated">TagHelper</target>
        </trans-unit>
        <trans-unit id="bb33f29c4a1d21b28dc40804eddd2d69ea5d0938" translate="yes" xml:space="preserve">
          <source>TagHelper#rich_text_area_tag</source>
          <target state="translated">TagHelper#rich_text_area_tag</target>
        </trans-unit>
        <trans-unit id="eca0e79cafc77f47eb9c8c218542610a51ce7d3b" translate="yes" xml:space="preserve">
          <source>Tagged Logging</source>
          <target state="translated">태그 된 로깅</target>
        </trans-unit>
        <trans-unit id="d73054e08c4e9b1654c368ff22d698ff3723a14e" translate="yes" xml:space="preserve">
          <source>TaggedLogging</source>
          <target state="translated">TaggedLogging</target>
        </trans-unit>
        <trans-unit id="47d8ff52eec9de9f2cc923b503fbaff3780bf2bc" translate="yes" xml:space="preserve">
          <source>TaggedLogging#flush</source>
          <target state="translated">TaggedLogging#flush</target>
        </trans-unit>
        <trans-unit id="3bcacd6ce7f2f56780a308e3dfa17158cb7834fc" translate="yes" xml:space="preserve">
          <source>TaggedLogging#tagged</source>
          <target state="translated">TaggedLogging#tagged</target>
        </trans-unit>
        <trans-unit id="e5207dbb761b482765d04cf1e0f51241d8cd49a2" translate="yes" xml:space="preserve">
          <source>TaggedLogging::new</source>
          <target state="translated">TaggedLogging::new</target>
        </trans-unit>
        <trans-unit id="96de2c5e218ef5002dfeff7c4351f7077746be3e" translate="yes" xml:space="preserve">
          <source>Tags can pass content to embed within it:</source>
          <target state="translated">태그는 컨텐츠를 전달하여 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1616c055ee36c429b40247275c77135a2316f8d" translate="yes" xml:space="preserve">
          <source>Take a signed permanent reference for a blob and turn it into an expiring service URL for download. Note: These URLs are publicly accessible. If you need to enforce access protection beyond the security-through-obscurity factor of the signed blob references, you'll need to implement your own authenticated redirection controller.</source>
          <target state="translated">Blob에 대한 서명 된 영구 참조를 가져 와서 만료되는 서비스 URL로 변환하여 다운로드하십시오. 참고 :이 URL은 공개적으로 액세스 할 수 있습니다. 서명 된 Blob 참조의 보안을 통한 보안 요소를 넘어서 액세스 보호를 강화해야하는 경우 자체 인증 된 리디렉션 컨트롤러를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b477286ef60f876305a6a465f03c8fb03fb83d7" translate="yes" xml:space="preserve">
          <source>Take a signed permanent reference for a blob representation and turn it into an expiring service URL for download. Note: These URLs are publicly accessible. If you need to enforce access protection beyond the security-through-obscurity factor of the signed blob and variation reference, you'll need to implement your own authenticated redirection controller.</source>
          <target state="translated">Blob 표현에 대한 서명 된 영구 참조를 가져 와서 만료되는 서비스 URL로 변환하여 다운로드하십시오. 참고 :이 URL은 공개적으로 액세스 할 수 있습니다. 서명 된 Blob 및 변형 참조의 보안을 통한 불확실성 요소를 넘어서 액세스 보호를 강화해야하는 경우 자체 인증 된 리디렉션 컨트롤러를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="04696b2453d8ff7ac5959375ac8137654bf9ea9e" translate="yes" xml:space="preserve">
          <source>Take a simple example where the layout expects the template to tell which title to use:</source>
          <target state="translated">레이아웃에서 템플릿이 사용할 제목을 알려주는 간단한 예제를 보자.</target>
        </trans-unit>
        <trans-unit id="02d2d9cd65513be9e3502248262cb253ec7afc36" translate="yes" xml:space="preserve">
          <source>Take callback names and an optional callback proc, normalize them, then call the block with each callback. This allows us to abstract the normalization across several methods that use it.</source>
          <target state="translated">콜백 이름과 선택적 콜백 프로 시저를 가져 와서 정규화 한 다음 각 콜백으로 블록을 호출하십시오. 이를 통해이를 사용하는 여러 방법에서 정규화를 추상화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3572f9fc73fbf64ca31b938f3430daf2755021fb" translate="yes" xml:space="preserve">
          <source>Take care to allow:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08157dd667277244caf647513c42fc94e94d213e" translate="yes" xml:space="preserve">
          <source>Take into account that &lt;code&gt;reverse_merge!&lt;/code&gt; may change the hash in the caller, which may or may not be a good idea.</source>
          <target state="translated">그 &lt;code&gt;reverse_merge!&lt;/code&gt; 를 고려하십시오 ! 호출자의 해시를 변경할 수 있으며 이는 좋은 생각 일 수도 있고 아닐 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d69e3a256a140ee269a0eb844cc081701064bb6" translate="yes" xml:space="preserve">
          <source>Take note that in that last case, the results are sorted in ascending order:</source>
          <target state="translated">마지막 경우 결과는 오름차순으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="b15e3a6dd12898641a30022da99d55159242c667" translate="yes" xml:space="preserve">
          <source>Take that &lt;code&gt;attachable_sgid&lt;/code&gt; and ask your frontend to insert it in rich text content using an &lt;code&gt;&amp;lt;action-text-attachment&amp;gt;&lt;/code&gt; tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534a7ed75c29ff95c79fbd24a14c2fdbb855abca" translate="yes" xml:space="preserve">
          <source>Take the &lt;code&gt;uglifier&lt;/code&gt; gem, for example. This gem wraps &lt;a href=&quot;https://github.com/mishoo/UglifyJS&quot;&gt;UglifyJS&lt;/a&gt; (written for NodeJS) in Ruby. It compresses your code by removing white space and comments, shortening local variable names, and performing other micro-optimizations such as changing &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; statements to ternary operators where possible.</source>
          <target state="translated">예를 들어, &lt;code&gt;uglifier&lt;/code&gt; 보석을 사용 하십시오 . 이 gem 은 Ruby에서 &lt;a href=&quot;https://github.com/mishoo/UglifyJS&quot;&gt;UglifyJS&lt;/a&gt; ( NodeJS로 작성)를 감 쌉니다 . 공백과 주석을 제거하고 로컬 변수 이름을 줄이며 &lt;code&gt;if&lt;/code&gt; 및 &lt;code&gt;else&lt;/code&gt; 문을 가능한 경우 삼항 연산자 로 변경하는 것과 같은 다른 미세 최적화를 수행하여 코드를 압축합니다 .</target>
        </trans-unit>
        <trans-unit id="97458793447e253c29fa9cbd7697be51f88b72ca" translate="yes" xml:space="preserve">
          <source>Take the following route definition as an example:</source>
          <target state="translated">다음 경로 정의를 예로 들어 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="00ab0668cc4037d13a78d51b2de2f3350c9bf1d0" translate="yes" xml:space="preserve">
          <source>Take the text and format it, indented two spaces for each line, and wrapped at 72 columns:</source>
          <target state="translated">텍스트를 가져 와서 서식을 지정하고 각 줄에 공백을 두 개씩 들여 쓰고 72 열로 줄 바꿈합니다.</target>
        </trans-unit>
        <trans-unit id="80827ac08d589be82ab5b75a2e510da9a7cd38c0" translate="yes" xml:space="preserve">
          <source>Takes &lt;a href=&quot;token#method-i-raw_params&quot;&gt;#raw_params&lt;/a&gt; and turns it into an array of parameters</source>
          <target state="translated">취하고 &lt;a href=&quot;token#method-i-raw_params&quot;&gt;#raw_params&lt;/a&gt; 파라미터들의 배열 및 회전을</target>
        </trans-unit>
        <trans-unit id="d8a230b0e70671206b15f327b1fb43343c239afa" translate="yes" xml:space="preserve">
          <source>Takes &lt;a href=&quot;token#method-i-raw_params&quot;&gt;&lt;code&gt;raw_params&lt;/code&gt;&lt;/a&gt; and turns it into an array of parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e260df2f7f4d21e3db25f1e10c2c0292dfc55bf0" translate="yes" xml:space="preserve">
          <source>Takes a &lt;code&gt;workers&lt;/code&gt; argument that controls how many times the process is forked. For each process a new database will be created suffixed with the worker number.</source>
          <target state="translated">소요 &lt;code&gt;workers&lt;/code&gt; 통제가 몇 번이나 프로세스가 포크 것을 주장. 각 프로세스마다 작업자 번호가 붙은 새로운 데이터베이스가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="73e8bea27e03a91d0b0382ae6d5a774f07343fa2" translate="yes" xml:space="preserve">
          <source>Takes a PP and prettily prints this record to it, allowing you to get a nice result from &lt;code&gt;pp record&lt;/code&gt; when pp is required.</source>
          <target state="translated">PP를 가져 와서이 레코드를 예쁘게 인쇄하여 pp가 필요할 때 pp &lt;code&gt;pp record&lt;/code&gt; 에서 좋은 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="722622396c0849ef712a4da3e31d4e5eec9ced81" translate="yes" xml:space="preserve">
          <source>Takes a block as an argument and suppresses any output generated by the block.</source>
          <target state="translated">블록을 인수로 사용하고 블록에서 생성 된 출력을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="d114eb5f1bc121ebb9d30bf7396084cdc4e4dd92" translate="yes" xml:space="preserve">
          <source>Takes a message argument and outputs it as is. A second boolean argument can be passed to specify whether to indent or not.</source>
          <target state="translated">메시지 인수를 받아서 그대로 출력합니다. 들여 쓰기 여부를 지정하기 위해 두 번째 부울 인수를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9991f402c10632d0d25b1be4c6c65a27d2ce7a5e" translate="yes" xml:space="preserve">
          <source>Takes a path to a file. If the file is found, has valid encoding, and has correct read permissions, the return value is a URI-escaped string representing the filename. Otherwise, false is returned.</source>
          <target state="translated">파일의 경로를 사용합니다. 파일이 발견되고 유효한 인코딩이 있고 올바른 읽기 권한이있는 경우 반환 값은 파일 이름을 나타내는 URI 이스케이프 된 문자열입니다. 그렇지 않으면 false가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a118d88e1345a61585a699f8f43a9cfdfa482eee" translate="yes" xml:space="preserve">
          <source>Takes a screenshot of the current page in the browser if the test failed.</source>
          <target state="translated">테스트에 실패한 경우 브라우저에서 현재 페이지의 스크린 샷을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a904476056859e92bcc9f33efdb63755b84adffb" translate="yes" xml:space="preserve">
          <source>Takes a screenshot of the current page in the browser.</source>
          <target state="translated">브라우저에서 현재 페이지의 스크린 샷을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="31e1a9a4deced66bfaa21c00bd039d1768be9d23" translate="yes" xml:space="preserve">
          <source>Takes in an array of nested modules and extracts the last module</source>
          <target state="translated">중첩 모듈의 배열을 가져 와서 마지막 모듈을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="499478e0a853c9a543410dbe5b69960c7d83c08e" translate="yes" xml:space="preserve">
          <source>Takes same options as &lt;a href=&quot;base#method-i-match&quot;&gt;match&lt;/a&gt; as well as:</source>
          <target state="translated">&lt;a href=&quot;base#method-i-match&quot;&gt;일치&lt;/a&gt; 및 다음 과 같은 옵션 을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d8b6d206a345676b80a5d0dc0d5123fc0f1bedd6" translate="yes" xml:space="preserve">
          <source>Takes same options as &lt;a href=&quot;resources#method-i-resources&quot;&gt;resources&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;resources#method-i-resources&quot;&gt;자원&lt;/a&gt; 과 동일한 옵션을 사용 합니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
