<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="83252175577cff3fec0bf4b1d1b478d05b61359e" translate="yes" xml:space="preserve">
          <source>Takes same options as &lt;code&gt;Base#match&lt;/code&gt; and &lt;code&gt;Resources#resources&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Base#match&lt;/code&gt; 및 &lt;code&gt;Resources#resources&lt;/code&gt; 와 동일한 옵션을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="fb31df6bbff65d639d70ca3fa844d6812f0e7ad9" translate="yes" xml:space="preserve">
          <source>Target a specific controller with &lt;code&gt;-c&lt;/code&gt;, or grep routes using &lt;code&gt;-g&lt;/code&gt;. Useful in conjunction with &lt;code&gt;--expanded&lt;/code&gt; which displays routes vertically.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 또는 &lt;code&gt;-g&lt;/code&gt; 를 사용하여 grep 경로를 사용하여 특정 컨트롤러를 대상으로합니다 . 경로를 세로로 표시 하는 &lt;code&gt;--expanded&lt;/code&gt; 와 함께 사용하면 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="0892020a0cdd8c6ec728a7ae7349611e6bf37a4c" translate="yes" xml:space="preserve">
          <source>Technically other types of keys are accepted:</source>
          <target state="translated">기술적으로 다른 유형의 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="bf7c0e5122af6fbdc8e2493c1ca46d3002391c7c" translate="yes" xml:space="preserve">
          <source>Technically this method can be used to fetch terminal values:</source>
          <target state="translated">기술적으로이 방법을 사용하여 터미널 값을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ef22b6c4f4be2de9c868066d9e70180113d906f" translate="yes" xml:space="preserve">
          <source>Technically, a route can have even more than one wildcard segment. The matcher assigns segments to parameters in an intuitive way. For example:</source>
          <target state="translated">기술적으로 경로는 둘 이상의 와일드 카드 세그먼트를 가질 수 있습니다. 매처는 세그먼트를 직관적 인 방식으로 매개 변수에 지정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="425a0d6802fca95a8c56ab4c699f4d3ed56fd416" translate="yes" xml:space="preserve">
          <source>Technically, however, controllers could configure &lt;code&gt;helpers_path&lt;/code&gt; to point to a directory in &lt;code&gt;$LOAD_PATH&lt;/code&gt; that was not in the autoload paths. That use case is no longer supported out of the box. If the helper module is not autoloadable, the application is responsible for loading it before calling &lt;code&gt;helper&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09234dd0d54b4dac62a69875a96c7dba4dab7ffb" translate="yes" xml:space="preserve">
          <source>Technically, it looks for the least indented line in the whole string, and removes that amount of leading whitespace.</source>
          <target state="translated">기술적으로 전체 문자열에서 들여 쓰기가 가장 적은 줄을 찾아 해당 공백 양을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="da90f4490ac0a7a4c19d09950e536af9fda11b99" translate="yes" xml:space="preserve">
          <source>Technically, it looks for the least indented non-empty line in the whole string, and removes that amount of leading whitespace.</source>
          <target state="translated">엄밀히 말하면 전체 문자열에서 가장 들여 쓰기되지 않은 빈 줄을 찾아 해당 공백을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="85c6acdfae02d5da422da59f20d9b2382fc20bcd" translate="yes" xml:space="preserve">
          <source>Tell Action Mailbox to accept emails from Mailgun:</source>
          <target state="translated">Mailgun의 이메일을 수락하도록 Action Mailbox에 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="7c7794919f526dfab440f9f984fe50ec88e654dd" translate="yes" xml:space="preserve">
          <source>Tell Action Mailbox to accept emails from Mandrill:</source>
          <target state="translated">Mandrill의 이메일을 받도록 Action Mailbox에 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="004e8569a68dee9e8f7eea4e8dea53ea7978520b" translate="yes" xml:space="preserve">
          <source>Tell Action Mailbox to accept emails from Postmark:</source>
          <target state="translated">Postmark의 이메일을 수락하도록 Action Mailbox에 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="8bd9f466b88ee9c472108886ec525453bf214da3" translate="yes" xml:space="preserve">
          <source>Tell Action Mailbox to accept emails from SendGrid:</source>
          <target state="translated">Send Mailbox의 이메일을 수락하도록 Action Mailbox에 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="c23ccdf27384c9ca7eb0a0b36e13222d4799c25e" translate="yes" xml:space="preserve">
          <source>Tell Action Mailbox to accept emails from an SMTP relay:</source>
          <target state="translated">SMTP 릴레이에서 전자 메일을 받도록 Action Mailbox에 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="bf1793c33bffea42c2250ff33c826b23c3cd059f" translate="yes" xml:space="preserve">
          <source>Tell Active Storage which service to use by setting &lt;code&gt;Rails.application.config.active_storage.service&lt;/code&gt;. Because each environment will likely use a different service, it is recommended to do this on a per-environment basis. To use the disk service from the previous example in the development environment, you would add the following to &lt;code&gt;config/environments/development.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Rails.application.config.active_storage.service&lt;/code&gt; 를 설정하여 사용할 서비스를 Active Storage에 알려 주십시오 . 각 환경은 다른 서비스를 사용하기 때문에 환경별로이를 수행하는 것이 좋습니다. 개발 환경에서 이전 예제의 디스크 서비스를 사용하려면 &lt;code&gt;config/environments/development.rb&lt;/code&gt; 에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="1970188a38fa2dfa746826ff189edd026ac40f80" translate="yes" xml:space="preserve">
          <source>Tell Rails how to set, preserve, and switch locales.</source>
          <target state="translated">Rails에 로케일을 설정, 유지 및 전환하는 방법을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="e349249451f4dcca763123bc3400d6bee9fd5c02" translate="yes" xml:space="preserve">
          <source>Tell Rails where to find locale dictionaries.</source>
          <target state="translated">로케일 사전을 찾을 수있는 곳을 Rails에 알려주십시오.</target>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="translated">Template</target>
        </trans-unit>
        <trans-unit id="e6f1ec42ae0af9f2599a77525cba82e65dfc5e18" translate="yes" xml:space="preserve">
          <source>Template API</source>
          <target state="translated">템플릿 API</target>
        </trans-unit>
        <trans-unit id="27db086ed1982e3939e97c9d1de883e62fe48717" translate="yes" xml:space="preserve">
          <source>Template digest</source>
          <target state="translated">템플릿 다이제스트</target>
        </trans-unit>
        <trans-unit id="a988abdac750fcba1801b94fb0f125fbab5a3afc" translate="yes" xml:space="preserve">
          <source>Template#encode!</source>
          <target state="translated">Template#encode!</target>
        </trans-unit>
        <trans-unit id="75caeea506c740afca670a3e0fe29e58e8240864" translate="yes" xml:space="preserve">
          <source>Template#format</source>
          <target state="translated">Template#format</target>
        </trans-unit>
        <trans-unit id="44b92e2f18b7f3c5926b2e8a248fd303933be0b1" translate="yes" xml:space="preserve">
          <source>Template#formats</source>
          <target state="translated">Template#formats</target>
        </trans-unit>
        <trans-unit id="437534ff0a64d844edcb21c7a69fc7fdf34239d8" translate="yes" xml:space="preserve">
          <source>Template#formats=</source>
          <target state="translated">Template#formats=</target>
        </trans-unit>
        <trans-unit id="5510da485bab99464c13795f7c1e8bea259ff569" translate="yes" xml:space="preserve">
          <source>Template#handler</source>
          <target state="translated">Template#handler</target>
        </trans-unit>
        <trans-unit id="bee4407d7aac10a500cb3a4aa20095ecaa41694c" translate="yes" xml:space="preserve">
          <source>Template#identifier</source>
          <target state="translated">Template#identifier</target>
        </trans-unit>
        <trans-unit id="9c93ef01230a4b0c6e9413e6b724e1025921ffbe" translate="yes" xml:space="preserve">
          <source>Template#inspect</source>
          <target state="translated">Template#inspect</target>
        </trans-unit>
        <trans-unit id="2aa6be504f9af0b81c6e7341db1162355e416923" translate="yes" xml:space="preserve">
          <source>Template#local_assigns</source>
          <target state="translated">Template#local_assigns</target>
        </trans-unit>
        <trans-unit id="534da4c572d07a2acf374b496b9ab7c02b24b681" translate="yes" xml:space="preserve">
          <source>Template#locals</source>
          <target state="translated">Template#locals</target>
        </trans-unit>
        <trans-unit id="42677365fa1ed52fe4caa914830df00663bc9fcf" translate="yes" xml:space="preserve">
          <source>Template#locals=</source>
          <target state="translated">Template#locals=</target>
        </trans-unit>
        <trans-unit id="7d8427241318884f4dcd368982c121714984667c" translate="yes" xml:space="preserve">
          <source>Template#original_encoding</source>
          <target state="translated">Template#original_encoding</target>
        </trans-unit>
        <trans-unit id="8a2d972e9283235d30f1e211bd8094c84fe08da2" translate="yes" xml:space="preserve">
          <source>Template#refresh</source>
          <target state="translated">Template#refresh</target>
        </trans-unit>
        <trans-unit id="7e512ed8fc7a00338ed2cfed6bb9cd5778abcc47" translate="yes" xml:space="preserve">
          <source>Template#render</source>
          <target state="translated">Template#render</target>
        </trans-unit>
        <trans-unit id="18e6fde14cb20ee39a2943fb5ecb61b51a889efd" translate="yes" xml:space="preserve">
          <source>Template#short_identifier</source>
          <target state="translated">Template#short_identifier</target>
        </trans-unit>
        <trans-unit id="d249d55d024d39938d21edf3672823a8857fc8d1" translate="yes" xml:space="preserve">
          <source>Template#source</source>
          <target state="translated">Template#source</target>
        </trans-unit>
        <trans-unit id="85eb26f509caaab1ddc7b2d4fff2bcbdeb396d49" translate="yes" xml:space="preserve">
          <source>Template#supports_streaming?</source>
          <target state="translated">Template#supports_streaming?</target>
        </trans-unit>
        <trans-unit id="92b0c49bf608156b505d2c3eb633b7fbbcd71578" translate="yes" xml:space="preserve">
          <source>Template#type</source>
          <target state="translated">Template#type</target>
        </trans-unit>
        <trans-unit id="ee935fcbf9498f428b2ec4cb6c074e152e85ca1c" translate="yes" xml:space="preserve">
          <source>Template#updated_at</source>
          <target state="translated">Template#updated_at</target>
        </trans-unit>
        <trans-unit id="a1766375955dc5f62a079cb3efd634ef30a4ebd3" translate="yes" xml:space="preserve">
          <source>Template#variable</source>
          <target state="translated">Template#variable</target>
        </trans-unit>
        <trans-unit id="2ab0e16f4491eb7a4b4a9e82a11afe59a022a8f6" translate="yes" xml:space="preserve">
          <source>Template#variant</source>
          <target state="translated">Template#variant</target>
        </trans-unit>
        <trans-unit id="c89a5d28897e212012f3efe6b3d69a0031ad9786" translate="yes" xml:space="preserve">
          <source>Template#variants</source>
          <target state="translated">Template#variants</target>
        </trans-unit>
        <trans-unit id="5ffb23c29909cc087160fe2ff49d32d34cd53f9d" translate="yes" xml:space="preserve">
          <source>Template#variants=</source>
          <target state="translated">Template#variants=</target>
        </trans-unit>
        <trans-unit id="b4de236c80cb6ba141bf2456243d18ec31693dea" translate="yes" xml:space="preserve">
          <source>Template#virtual_path</source>
          <target state="translated">Template#virtual_path</target>
        </trans-unit>
        <trans-unit id="20e257c5089a124df3221445ac9030387ae172f6" translate="yes" xml:space="preserve">
          <source>Template#virtual_path=</source>
          <target state="translated">Template#virtual_path=</target>
        </trans-unit>
        <trans-unit id="e380bd72a674340c87fd31ebf091103ee699b516" translate="yes" xml:space="preserve">
          <source>Template::finalize_compiled_template_methods</source>
          <target state="translated">Template::finalize_compiled_template_methods</target>
        </trans-unit>
        <trans-unit id="a4a78bc50cc15ce74ce7d6b08ba68c8cff2d7902" translate="yes" xml:space="preserve">
          <source>Template::finalize_compiled_template_methods=</source>
          <target state="translated">Template::finalize_compiled_template_methods=</target>
        </trans-unit>
        <trans-unit id="31cf835ff6cca4055ff672e5471b442194bed455" translate="yes" xml:space="preserve">
          <source>Template::new</source>
          <target state="translated">Template::new</target>
        </trans-unit>
        <trans-unit id="dccdca2628d9b37c054cb25df79bd849837986aa" translate="yes" xml:space="preserve">
          <source>TemplateError</source>
          <target state="translated">TemplateError</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="8750acb81f707d74be6d6f1a9ae71cafdd679224" translate="yes" xml:space="preserve">
          <source>Templates don't have to be stored on the local system, the &lt;code&gt;-m&lt;/code&gt; option also supports online templates:</source>
          <target state="translated">템플릿은 로컬 시스템에 저장할 필요가 없으며 &lt;code&gt;-m&lt;/code&gt; 옵션은 온라인 템플릿도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a9c021d25388b1c36184057f5b9e846bb0fba19c" translate="yes" xml:space="preserve">
          <source>Templates in the collection not already cached are written to cache.</source>
          <target state="translated">아직 캐시되지 않은 컬렉션의 템플릿은 캐시에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="80bfd647cf3e8afda59a70978d9fcc1b513845be" translate="yes" xml:space="preserve">
          <source>Templates, Partials, and Layouts</source>
          <target state="translated">템플릿, 부분 및 레이아웃</target>
        </trans-unit>
        <trans-unit id="a8fd79cf7ca310836dc3efd1147c1023d5fc20b1" translate="yes" xml:space="preserve">
          <source>Temporarily give up all held Share locks while executing the supplied block, allowing any &lt;code&gt;compatible&lt;/code&gt; exclusive lock request to proceed.</source>
          <target state="translated">제공된 블록을 실행하는 동안 보류 된 모든 공유 잠금을 일시적으로 포기하여 &lt;code&gt;compatible&lt;/code&gt; 독점 잠금 요청을 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b81216bc5901aea2c5cca49af2e45eb4190dd8d" translate="yes" xml:space="preserve">
          <source>Temporary Subscriptions</source>
          <target state="translated">임시 가입</target>
        </trans-unit>
        <trans-unit id="14d9fae7ff38145ff674aa620216bc205178c6dd" translate="yes" xml:space="preserve">
          <source>Temporary files (like cache and pid files).</source>
          <target state="translated">캐시 및 pid 파일과 같은 임시 파일</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="a89b0dbcd302d4f9ba9ec7aca5a0f8a1ccc06a1a" translate="yes" xml:space="preserve">
          <source>Test Coverage</source>
          <target state="translated">테스트 범위</target>
        </trans-unit>
        <trans-unit id="91debbd7909f53f0f0dda96fef1638811dd165a7" translate="yes" xml:space="preserve">
          <source>Test Mode: Ditto development mode.</source>
          <target state="translated">테스트 모드 : Ditto 개발 모드.</target>
        </trans-unit>
        <trans-unit id="f77f19383df82a67888e2e9df641885912ee303b" translate="yes" xml:space="preserve">
          <source>Test adapter for Active Job</source>
          <target state="translated">활성 작업용 테스트 어댑터</target>
        </trans-unit>
        <trans-unit id="9f539a2e722fc44f789dfad6474958f56b919df4" translate="yes" xml:space="preserve">
          <source>Test cases can use begin+rollback to isolate their changes to the database instead of having to delete+insert for every test case.</source>
          <target state="translated">테스트 케이스는 begin + rollback을 사용하여 모든 테스트 케이스에 대해 삭제 + 삽입하는 대신 데이터베이스에 대한 변경 사항을 분리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="5136085a12b174930954dcf2fe15567c3c66f2cf" translate="yes" xml:space="preserve">
          <source>Test helpers</source>
          <target state="translated">테스트 도우미</target>
        </trans-unit>
        <trans-unit id="44058f4cacb363bbf7a1fa46cd5fc79819f1b662" translate="yes" xml:space="preserve">
          <source>Test if any threads are currently waiting on the queue.</source>
          <target state="translated">현재 큐에서 대기중인 스레드가 있는지 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="084ff63b1922c0ad9eb2f7699aa72dceb5c3d081" translate="yes" xml:space="preserve">
          <source>Test numeric difference between the return value of an expression as a result of what is evaluated in the yielded block.</source>
          <target state="translated">양보 된 블록에서 평가 된 결과로 표현의 반환 값 사이의 숫자 차이를 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="c9b0bfb40611a91c3cc526c68e3b7ec7f4ea3193" translate="yes" xml:space="preserve">
          <source>Test that the result of evaluating an expression is changed after invoking the passed in block.</source>
          <target state="translated">전달 된 블록을 호출 한 후 표현식 평가 결과가 변경되는지 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="c6dcbe46a43cf592e434d9d4c0c0423c479a0ce0" translate="yes" xml:space="preserve">
          <source>Test the result of evaluating an expression is not changed after invoking the passed in block.</source>
          <target state="translated">전달 된 블록을 호출 한 후 표현식이 변경되지 않은지 평가 한 결과를 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="15df5dddf30d65534a6e9dbf13158abb26d90fd3" translate="yes" xml:space="preserve">
          <source>Testing &lt;code&gt;flash&lt;/code&gt; notices</source>
          <target state="translated">&lt;code&gt;flash&lt;/code&gt; 알림 테스트</target>
        </trans-unit>
        <trans-unit id="f02449fad497f5746672e6db83c7b975d0ed40ca" translate="yes" xml:space="preserve">
          <source>Testing Action Cable</source>
          <target state="translated">테스트 액션 케이블</target>
        </trans-unit>
        <trans-unit id="e309e778695eab20a3a8bc01dba2b39e99684bfe" translate="yes" xml:space="preserve">
          <source>Testing Helpers</source>
          <target state="translated">헬퍼 테스트</target>
        </trans-unit>
        <trans-unit id="c757636c5ff71450c83aeb2b9ba36f516c29a6af" translate="yes" xml:space="preserve">
          <source>Testing Jobs</source>
          <target state="translated">테스트 작업</target>
        </trans-unit>
        <trans-unit id="f4b91554e9db5c8e9bd5cb2d98af991860f91b2e" translate="yes" xml:space="preserve">
          <source>Testing Parallel Transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1cec33acef2da69a41a9b2a6fbab0917acf803" translate="yes" xml:space="preserve">
          <source>Testing Rails Applications</source>
          <target state="translated">레일 테스트</target>
        </trans-unit>
        <trans-unit id="3beda4357979b576777318de0cd80c86b2eba9a4" translate="yes" xml:space="preserve">
          <source>Testing Routes</source>
          <target state="translated">테스트 경로</target>
        </trans-unit>
        <trans-unit id="36eda9c408d9007d8fcffeae891ca0570fb93eb9" translate="yes" xml:space="preserve">
          <source>Testing Time-Dependent Code</source>
          <target state="translated">시간 종속 코드 테스트</target>
        </trans-unit>
        <trans-unit id="27930d6adb941d651dc7113c11aaa10a6ece41d0" translate="yes" xml:space="preserve">
          <source>Testing Views</source>
          <target state="translated">테스트 뷰</target>
        </trans-unit>
        <trans-unit id="dd9ee71a2010a9b6e9741fadf4dcdc3de2e7b394" translate="yes" xml:space="preserve">
          <source>Testing XHR (AJAX) requests</source>
          <target state="translated">XHR (AJAX) 요청 테스트</target>
        </trans-unit>
        <trans-unit id="c17d65ba14a6bcd81f9c22f0a76d367efe003011" translate="yes" xml:space="preserve">
          <source>Testing Your Mailers</source>
          <target state="translated">메일러 테스트</target>
        </trans-unit>
        <trans-unit id="00c9371970622bce1caee73822f975e97fb208f7" translate="yes" xml:space="preserve">
          <source>Testing Your Newly Generated Plugin</source>
          <target state="translated">새로 생성 된 플러그인 테스트</target>
        </trans-unit>
        <trans-unit id="5f19bff0b2ee387a07413a50e1c8e32dbe06e496" translate="yes" xml:space="preserve">
          <source>Testing an Engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b5aa2573986d4ba08f8799057c1c2d76676552" translate="yes" xml:space="preserve">
          <source>Testing an engine</source>
          <target state="translated">엔진 테스트</target>
        </trans-unit>
        <trans-unit id="2f6b155456d3a55a2b9be9939622a8ad937dd49c" translate="yes" xml:space="preserve">
          <source>Testing broadcasting</source>
          <target state="translated">방송 테스트</target>
        </trans-unit>
        <trans-unit id="be81effb259a9625916ca370950bd77325f0ecdf" translate="yes" xml:space="preserve">
          <source>Testing controller internals</source>
          <target state="translated">컨트롤러 내부 테스트</target>
        </trans-unit>
        <trans-unit id="88285115476c8432d0aa5f67436f3f4089bf51fe" translate="yes" xml:space="preserve">
          <source>Testing harness for the comment model</source>
          <target state="translated">주석 모델의 하네스 테스트</target>
        </trans-unit>
        <trans-unit id="1581a87ff10028a8433ac829c419f8ce4baaa470" translate="yes" xml:space="preserve">
          <source>Testing mailboxes</source>
          <target state="translated">사서함 테스트</target>
        </trans-unit>
        <trans-unit id="cbc3eb31b5f1649ce6df88bb1dce233aab3e6761" translate="yes" xml:space="preserve">
          <source>Testing mailer classes requires some specific tools to do a thorough job.</source>
          <target state="translated">메일러 클래스를 테스트하려면 철저한 작업을 수행하기위한 특정 도구가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5416316810fe2cf1b0935afa9b68152a41caf0d7" translate="yes" xml:space="preserve">
          <source>Testing membership still loops, but it's going to be faster than our own loop that converts values. Also, we are not going to build a new array object per fetch.</source>
          <target state="translated">멤버쉽 테스트는 계속 반복되지만 값을 변환하는 자체 루프보다 빠릅니다. 또한 가져 오기마다 새로운 배열 객체를 만들지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="858aabd21a4b208b4990451877453e2f43803b2b" translate="yes" xml:space="preserve">
          <source>Testing named routes</source>
          <target state="translated">명명 된 경로 테스트</target>
        </trans-unit>
        <trans-unit id="a96b0403a66bd2cdd9fd2035807e3b98555843ff" translate="yes" xml:space="preserve">
          <source>Testing support was woven into the Rails fabric from the beginning. It wasn't an &quot;oh! let's bolt on support for running tests because they're new and cool&quot; epiphany.</source>
          <target state="translated">테스트 지원은 처음부터 Rails 패브릭에 짜여졌습니다. &quot;아! 새롭고 시원하기 때문에 테스트 실행에 대한 지원을 시작하자&quot;는 아니었다.</target>
        </trans-unit>
        <trans-unit id="6d933869eb687d1a93233e716600f55cc0d9511c" translate="yes" xml:space="preserve">
          <source>Testing the response to your request by asserting the presence of key HTML elements and their content is a common way to test the views of your application. Like route tests, view tests reside in &lt;code&gt;test/controllers/&lt;/code&gt; or are part of controller tests. The &lt;code&gt;assert_select&lt;/code&gt; method allows you to query HTML elements of the response by using a simple yet powerful syntax.</source>
          <target state="translated">주요 HTML 요소와 해당 내용의 존재를 확인하여 요청에 대한 응답을 테스트하는 것이 응용 프로그램의 뷰를 테스트하는 일반적인 방법입니다. 경로 테스트와 마찬가지로보기 테스트는 &lt;code&gt;test/controllers/&lt;/code&gt; 있거나 컨트롤러 테스트의 일부입니다. &lt;code&gt;assert_select&lt;/code&gt; 의 방법은 아직 강력한 구문을 간단한을 사용하여 응답의 쿼리 HTML 요소로 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b975b53956e5b4022f33f796326d8440fac5084b" translate="yes" xml:space="preserve">
          <source>Tests if a response body is set. Used to determine if the &lt;code&gt;process_action&lt;/code&gt; callback needs to be terminated in &lt;code&gt;AbstractController::Callbacks&lt;/code&gt;.</source>
          <target state="translated">응답 본문이 설정되어 있는지 테스트합니다. &lt;code&gt;AbstractController::Callbacks&lt;/code&gt; 에서 &lt;code&gt;process_action&lt;/code&gt; 콜백을 종료 해야하는지 여부를 판별하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="67baecdf6ad8c853dcc7bd51bacc60ecaddb0834" translate="yes" xml:space="preserve">
          <source>Tests if render or redirect has already happened.</source>
          <target state="translated">렌더링 또는 리디렉션이 이미 발생했는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="a916676dc22150c80edaf0e5035702e3aad3f08d" translate="yes" xml:space="preserve">
          <source>Textile Injection</source>
          <target state="translated">섬유 주입</target>
        </trans-unit>
        <trans-unit id="ce4993745bb791939aa2db5b830778a18882d0ab" translate="yes" xml:space="preserve">
          <source>That action implicitly responds to all formats, but formats can also be explicitly enumerated:</source>
          <target state="translated">이 작업은 모든 형식에 암시 적으로 응답하지만 형식을 명시 적으로 열거 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="029b91809967eb4bc65f21376015f976e28321b5" translate="yes" xml:space="preserve">
          <source>That block runs when the application boots, and every time code is reloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3f9c329f208b68d6211b0f38ee6c43fca539bd" translate="yes" xml:space="preserve">
          <source>That code depends on the execution path.</source>
          <target state="translated">이 코드는 실행 경로에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6f81c7db4c172b40fd85be5c3f2e5def3677eacb" translate="yes" xml:space="preserve">
          <source>That code returns right away, you are just subscribing to &amp;ldquo;render&amp;rdquo; events. The block is saved and will be called whenever someone instruments &amp;ldquo;render&amp;rdquo;:</source>
          <target state="translated">이 코드는 즉시 반환되며, &quot;렌더링&quot;이벤트를 구독하고 있습니다. 블록은 저장되며 누군가 &quot;렌더링&quot;할 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1e768896f2099f5b20209f22f36bdb90d96c0e3f" translate="yes" xml:space="preserve">
          <source>That code will pull in the partial from &lt;code&gt;app/views/shared/_menu.html.erb&lt;/code&gt;.</source>
          <target state="translated">이 코드는 &lt;code&gt;app/views/shared/_menu.html.erb&lt;/code&gt; 에서 부분을 가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="53da4ba21c26bc31882ad8e059725174aa6b09ce" translate="yes" xml:space="preserve">
          <source>That completes the comment function of the blogging engine. Now it's time to use it within an application.</source>
          <target state="translated">블로깅 엔진의 코멘트 기능이 완성되었습니다. 이제 응용 프로그램 내에서 사용할 차례입니다.</target>
        </trans-unit>
        <trans-unit id="b5f855fdb395c8bbe0020aa47af7e54b9dadde1e" translate="yes" xml:space="preserve">
          <source>That does not even put the entire Active Support in memory upfront indeed, some stuff is configured via &lt;code&gt;autoload&lt;/code&gt;, so it is only loaded if used.</source>
          <target state="translated">그것은 실제로 전체 액티브 서포트를 메모리에 미리 넣지 않으며 일부 항목은 &lt;code&gt;autoload&lt;/code&gt; 를 통해 구성 되므로 사용되는 경우에만로드됩니다.</target>
        </trans-unit>
        <trans-unit id="ece9ddb52132adcef0786c7d0fa102944e2787e0" translate="yes" xml:space="preserve">
          <source>That does not match Ruby semantics because &lt;code&gt;Foo&lt;/code&gt; is not in the nesting, and won't work at all in &lt;code&gt;zeitwerk&lt;/code&gt; mode. If you find such corner case you can use the qualified name &lt;code&gt;Foo::Wadus&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Foo&lt;/code&gt; 가 중첩에 있지 않고 &lt;code&gt;zeitwerk&lt;/code&gt; 모드 에서는 전혀 작동하지 않기 때문에 Ruby 의미와 일치하지 않습니다 . 그러한 코너 케이스를 찾으면 &lt;code&gt;Foo::Wadus&lt;/code&gt; 정규화 된 이름을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24a576279892b73d2575f07ca9df3896b3a8fc01" translate="yes" xml:space="preserve">
          <source>That does not mean you're stuck with these limitations, though. The Ruby I18n gem makes it very easy to exchange the Simple backend implementation with something else that fits better for your needs, by passing a backend instance to the &lt;code&gt;I18n.backend=&lt;/code&gt; setter.</source>
          <target state="translated">그렇다고해서 이러한 한계에 갇혀 있다는 것은 아닙니다. Ruby I18n gem은 백엔드 인스턴스를 &lt;code&gt;I18n.backend=&lt;/code&gt; setter 로 전달하여 Simple 백엔드 구현을 사용자의 요구에 더 적합한 다른 것으로 쉽게 교환 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="15807c6eae8d11d4a2006abac6ccb3ff9abc900c" translate="yes" xml:space="preserve">
          <source>That environment is no different than the default ones, start a server with &lt;code&gt;bin/rails server -e staging&lt;/code&gt;, a console with &lt;code&gt;bin/rails console -e staging&lt;/code&gt;, &lt;code&gt;Rails.env.staging?&lt;/code&gt; works, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4019b6d948fdf56234665c8cfef2131e917e46" translate="yes" xml:space="preserve">
          <source>That environment is no different than the default ones, start a server with &lt;code&gt;rails server -e staging&lt;/code&gt;, a console with &lt;code&gt;rails console -e staging&lt;/code&gt;, &lt;code&gt;Rails.env.staging?&lt;/code&gt; works, etc.</source>
          <target state="translated">그 환경이 기본 것보다 다른이와 서버를 시작하지 &lt;code&gt;rails server -e staging&lt;/code&gt; 가진 콘솔 &lt;code&gt;rails console -e staging&lt;/code&gt; , &lt;code&gt;Rails.env.staging?&lt;/code&gt; 작품 등</target>
        </trans-unit>
        <trans-unit id="2d2c1504f222a2c1ca8ac9b002226cbe01c01134" translate="yes" xml:space="preserve">
          <source>That first executes the block and then notifies all subscribers once done.</source>
          <target state="translated">먼저 블록을 실행 한 다음 모든 가입자에게 한 번 통지합니다.</target>
        </trans-unit>
        <trans-unit id="c9e8bd10c57fb6d4f16dcf8f09fee57f44dc8da7" translate="yes" xml:space="preserve">
          <source>That idiom may convey &lt;em&gt;grouping&lt;/em&gt; to the reader as well. For example, say you want to send a newsletter whose language depends on the user. Somewhere in the mailer you could group locale-dependent bits like this:</source>
          <target state="translated">이 관용구는 &lt;em&gt;그룹화&lt;/em&gt; 를 독자에게 전달할 수도 있습니다. 예를 들어, 언어가 사용자에 따라 다른 뉴스 레터를 보내려고한다고 가정하십시오. 메일러 어딘가에 다음과 같이 로케일 종속 비트를 그룹화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c22581285b8dfcd73fdfca03cbe8d8fd970e4912" translate="yes" xml:space="preserve">
          <source>That is not a bug, the query includes all &lt;em&gt;known&lt;/em&gt; descendants of &lt;code&gt;Rectangle&lt;/code&gt;.</source>
          <target state="translated">이것은 버그가 아니며 쿼리에는 &lt;code&gt;Rectangle&lt;/code&gt; 의&lt;em&gt;알려진&lt;/em&gt; 모든 자손이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d62c3e6981eec14788d4b285f05dd95b08925cd" translate="yes" xml:space="preserve">
          <source>That is what &lt;code&gt;delegate&lt;/code&gt; does for you:</source>
          <target state="translated">이것이 &lt;code&gt;delegate&lt;/code&gt; 이 당신을 위해하는 일입니다.</target>
        </trans-unit>
        <trans-unit id="e59bb5ef1bd5209e36baf54d8171a81d25b01372" translate="yes" xml:space="preserve">
          <source>That is why we talk about &lt;em&gt;constant&lt;/em&gt; autoloading, Rails has the ability to load constants on the fly.</source>
          <target state="translated">그래서 우리는 &lt;em&gt;지속적인&lt;/em&gt; 자동 로딩 에 대해 이야기합니다 . Rails는 상수를 즉시로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8e33e066d832e6b9bb13721a10ba606e5883e59" translate="yes" xml:space="preserve">
          <source>That is,</source>
          <target state="translated">그건,</target>
        </trans-unit>
        <trans-unit id="7702b46a26c7069e2ad4b3e1d6985a651f44c089" translate="yes" xml:space="preserve">
          <source>That may be handy if upgrading to Rails 6 in different phases, but classic mode is discouraged for new applications.</source>
          <target state="translated">다른 단계에서 Rails 6으로 업그레이드하는 경우 편리하지만 새 응용 프로그램에서는 클래식 모드를 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="39ee893b0d13309f83464fc59425f185d72e1d06" translate="yes" xml:space="preserve">
          <source>That may be handy if you need to preload STIs or configure a custom inflector, for example.</source>
          <target state="translated">예를 들어 STI를 사전로드하거나 사용자 정의 인플 렉터를 구성해야하는 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06298edc42151d93ebdb407ae147bc7ed8dbc145" translate="yes" xml:space="preserve">
          <source>That may be handy to compute method names in a language that follows that convention, for example JavaScript.</source>
          <target state="translated">JavaScript와 같이 해당 규칙을 따르는 언어로 메소드 이름을 계산하는 것이 편리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="b49fb4b854805fcd494633c0a640ffec4a5183b6" translate="yes" xml:space="preserve">
          <source>That may speed legit &lt;code&gt;require&lt;/code&gt; calls a bit, since there are less lookups. Also, if your application uses &lt;a href=&quot;https://github.com/Shopify/bootsnap&quot;&gt;Bootsnap&lt;/a&gt;, that saves the library from building unnecessary indexes, and saves the RAM they would need.</source>
          <target state="translated">즉 합법적는 속도가 빨라질 수 있습니다 &lt;code&gt;require&lt;/code&gt; 덜 조회가 있기 때문에, 전화를 조금. 또한 응용 프로그램에서 &lt;a href=&quot;https://github.com/Shopify/bootsnap&quot;&gt;Bootsnap을&lt;/a&gt; 사용 하면 불필요한 인덱스를 작성하지 않아도 라이브러리가 저장되고 필요한 RAM이 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="0c88e9d9d34556bf7fcdb7ff1a90e7f217c2d1ff" translate="yes" xml:space="preserve">
          <source>That means that you can require it like this:</source>
          <target state="translated">즉, 다음과 같이 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21c07f860afd0ef05c780224dd9b5a430b319d87" translate="yes" xml:space="preserve">
          <source>That said, it's recommended to change the calls to raw &lt;code&gt;resize&lt;/code&gt; for &lt;code&gt;image_processing&lt;/code&gt; macros as they also sharpen the thumbnail after resizing. For example, instead of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d172f05feb9afa315e08d56bcb0b405e7f87d093" translate="yes" xml:space="preserve">
          <source>That said, when streaming, you need to properly check your templates and choose when to use &lt;code&gt;provide&lt;/code&gt; and &lt;code&gt;content_for&lt;/code&gt;.</source>
          <target state="translated">스트리밍 할 때 템플릿을 올바르게 확인하고 &lt;code&gt;provide&lt;/code&gt; 및 &lt;code&gt;content_for&lt;/code&gt; 를 사용할시기를 선택해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eb3573ece5a90fa144f82252b4a13874f6817d32" translate="yes" xml:space="preserve">
          <source>That syntactic sugar is used a lot in Rails to avoid positional arguments where there would be too many, offering instead interfaces that emulate named parameters. In particular it is very idiomatic to use a trailing hash for options.</source>
          <target state="translated">이 구문 설탕은 Rails에서 너무 많이 사용되는 위치 인수를 피하기 위해 많이 사용되며 대신 명명 된 매개 변수를 에뮬레이트하는 인터페이스를 제공합니다. 특히 옵션에 후행 해시를 사용하는 것은 매우 관용적입니다.</target>
        </trans-unit>
        <trans-unit id="954237c18ab9b95989e14710a2a9c4bb3423e56f" translate="yes" xml:space="preserve">
          <source>That technique still depends on &lt;code&gt;String#camelize&lt;/code&gt;, though, because that is what the default inflectors use as fallback. If you instead prefer not to depend on Active Support inflections at all and have absolute control over inflections, configure the inflectors to be instances of &lt;code&gt;Zeitwerk::Inflector&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cef66da724ce0d1e0e3a78ea18c92c1cdc458c" translate="yes" xml:space="preserve">
          <source>That will place &lt;code&gt;script&lt;/code&gt; tags for your default set of JavaScript files on the page; this technique is useful if you'll only be using these scripts in a few views.</source>
          <target state="translated">그러면 페이지에 기본 JavaScript 파일 세트에 대한 &lt;code&gt;script&lt;/code&gt; 태그 가 배치 됩니다. 이 기법은 몇 가지보기에서만 이러한 스크립트를 사용하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7a92e3377de3938c7286c918aa563c7f9c131f6a" translate="yes" xml:space="preserve">
          <source>That would add something like &amp;ldquo;Process data files (345.2ms)&amp;rdquo; to the log, which you can then use to compare timings when optimizing your code.</source>
          <target state="translated">그러면&amp;ldquo;프로세스 데이터 파일 (345.2ms)&amp;rdquo;과 같은 것이 로그에 추가되어 코드 최적화시 타이밍을 비교하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f23cf4d5a2e097ae20f2581c0d4f0df92efe46b" translate="yes" xml:space="preserve">
          <source>That'll create the &lt;code&gt;app/components&lt;/code&gt; directory and put &lt;code&gt;foo.rb&lt;/code&gt; in there.</source>
          <target state="translated">&lt;code&gt;app/components&lt;/code&gt; 디렉토리를 생성하고 거기 에 &lt;code&gt;foo.rb&lt;/code&gt; 를 넣 습니다.</target>
        </trans-unit>
        <trans-unit id="9739eb4bce7cc4b1ad8a53b15fb4744e003f2195" translate="yes" xml:space="preserve">
          <source>That's a little bit better, but what about multiple links that have the same effect?</source>
          <target state="translated">조금 나아졌지 만 동일한 효과를 가진 여러 링크는 어떻습니까?</target>
        </trans-unit>
        <trans-unit id="ce8a1c0e4b527351113079c7704709f896516e54" translate="yes" xml:space="preserve">
          <source>That's how you typically work with resources.</source>
          <target state="translated">이것이 일반적으로 자원을 다루는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="e93f4cf2c16977aa0828b84202ee64df60519c65" translate="yes" xml:space="preserve">
          <source>That's it!</source>
          <target state="translated">그게 다야!</target>
        </trans-unit>
        <trans-unit id="d05b46ead4ca78bb00c6fe99342067ed3323a458" translate="yes" xml:space="preserve">
          <source>That's it! Uploads begin upon form submission.</source>
          <target state="translated">그게 다야! 양식 제출시 업로드가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="363fea70f776a925725d9c37d77891c3571eaaff" translate="yes" xml:space="preserve">
          <source>That's it. The News views will use the new layout, hiding the top menu and adding a new right menu inside the &quot;content&quot; div.</source>
          <target state="translated">그게 다야. 뉴스보기는 새 레이아웃을 사용하여 최상위 메뉴를 숨기고 &quot;콘텐츠&quot;div 내에 새 오른쪽 메뉴를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="168a4527a7795a04ef6dc0c3871fa1e7c8b7e4de" translate="yes" xml:space="preserve">
          <source>That's what you want the bulk of the time. New comment creates a new Notification. But there may well be off cases, like copying a commentable and its comments, where you don't want that. So you'd have a concern something like this:</source>
          <target state="translated">그것이 당신이 원하는 대부분의 시간입니다. 새로운 코멘트는 새로운 알림을 만듭니다. 그러나 주석 작성 및 주석 복사와 같이 원하지 않는 경우가 있습니다. 따라서 다음과 같은 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf4dee0188a07f2400c57ee1c5d1195b29503ae8" translate="yes" xml:space="preserve">
          <source>The &quot;Welcome aboard&quot; page is the &lt;em&gt;smoke test&lt;/em&gt; for a new Rails application: it makes sure that you have your software configured correctly enough to serve a page.</source>
          <target state="translated">&quot;Welcome aboard&quot;페이지는 새로운 Rails 애플리케이션에 대한 &lt;em&gt;연기 테스트&lt;/em&gt; 입니다. 페이지를 제공 할 수 있도록 소프트웨어를 올바르게 구성했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="211dd150950bba2a9d78db4168c6ff53c7da0f93" translate="yes" xml:space="preserve">
          <source>The &quot;Yay! You're on Rails!&quot; page is the &lt;em&gt;smoke test&lt;/em&gt; for a new Rails application: it makes sure that you have your software configured correctly enough to serve a page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af072efeaa05ddb76a2c9285266e138ca94f42df" translate="yes" xml:space="preserve">
          <source>The &quot;role&quot; in the &lt;code&gt;connected_to&lt;/code&gt; call looks up the connections that are connected on that connection handler (or role). The &lt;code&gt;reading&lt;/code&gt; connection handler will hold all the connections that were connected via &lt;code&gt;connects_to&lt;/code&gt; with the role name of &lt;code&gt;reading&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;connected_to&lt;/code&gt; 호출 의 &quot;역할&quot;은 해당 연결 처리기 (또는 역할)에 연결된 연결을 찾습니다. &lt;code&gt;reading&lt;/code&gt; 연결 처리기를 통해 연결된 모든 연결 개최한다 &lt;code&gt;connects_to&lt;/code&gt; 의 역할 이름으로 &lt;code&gt;reading&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d48e1ee5a98a7d2ed01d63a5da586a276d95250b" translate="yes" xml:space="preserve">
          <source>The (&lt;code&gt;:references&lt;/code&gt;) keyword used in the bash command is a special data type for models. It creates a new column on your database table with the provided model name appended with an &lt;code&gt;_id&lt;/code&gt; that can hold integer values. To get a better understanding, analyze the &lt;code&gt;db/schema.rb&lt;/code&gt; file after running the migration.</source>
          <target state="translated">bash 명령에 사용 된 ( &lt;code&gt;:references&lt;/code&gt; ) 키워드는 모델의 특수 데이터 유형입니다. 정수 값을 보유 할 수 있는 &lt;code&gt;_id&lt;/code&gt; 가 추가 된 제공된 모델 이름으로 데이터베이스 테이블에 새 열을 작성 합니다. 더 잘 이해하려면 마이그레이션을 실행 한 후 &lt;code&gt;db/schema.rb&lt;/code&gt; 파일을 분석하십시오 .</target>
        </trans-unit>
        <trans-unit id="559c6f509da8b502c0dec8768154122c729b822b" translate="yes" xml:space="preserve">
          <source>The :as and :object options</source>
          <target state="translated">: as 및 : object 옵션</target>
        </trans-unit>
        <trans-unit id="9bf03fa09c5433018c285b404387e3054c25dfeb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; Helper primarily creates select/option tags for different kinds of dates and times or date and time elements. All of the select-type methods share a number of common options that are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c904230ea5c4a3c778541f72b97fae0cdf2a9d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../date&quot;&gt;Date&lt;/a&gt; Helper primarily creates select/option tags for different kinds of dates and times or date and time elements. All of the select-type methods share a number of common options that are as follows:</source>
          <target state="translated">&lt;a href=&quot;../../date&quot;&gt;날짜&lt;/a&gt; 도우미는 주로 날짜와 시간 또는 날짜와 시간 요소의 서로 다른 종류의 선택 / 옵션 태그를 생성합니다. 모든 선택 유형 방법은 다음과 같은 여러 공통 옵션을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="e656ad43a62c3d813f6c7356ab575fb9c518cd54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;application&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; is also responsible for building the middleware stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0054734ede68c7a4f50447426137180fe4c23d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;application&quot;&gt;Application&lt;/a&gt; is also responsible for building the middleware stack.</source>
          <target state="translated">&lt;a href=&quot;application&quot;&gt;응용 프로그램은&lt;/a&gt; 또한 미들웨어 스택을 구축하기위한 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cfc8d36804f6e24895f238930e685db4dfd80d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;application#method-i-secret_key_base&quot;&gt;#secret_key_base&lt;/a&gt; is used as the input secret to the application's key generator, which in turn is used to create all MessageVerifiers/MessageEncryptors, including the ones that sign and encrypt cookies.</source>
          <target state="translated">&lt;a href=&quot;application#method-i-secret_key_base&quot;&gt;#secret_key_base가&lt;/a&gt; 차례로 서명 및 암호화 쿠키 것을 포함한 모든 MessageVerifiers / MessageEncryptors을 만드는 데 사용되는 응용 프로그램의 키 생성기에 입력 비밀로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="685a0ad08ad2a4d228b0e40ed2c9ab6181c8b888" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;application#method-i-secret_key_base&quot;&gt;&lt;code&gt;secret_key_base&lt;/code&gt;&lt;/a&gt; is used as the input secret to the application's key generator, which in turn is used to create all MessageVerifiers/MessageEncryptors, including the ones that sign and encrypt cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f567265f84e9c09853db3ac6ae12267b463362f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;batches#method-i-find_each&quot;&gt;&lt;code&gt;find_each&lt;/code&gt;&lt;/a&gt; method uses &lt;a href=&quot;batches#method-i-find_in_batches&quot;&gt;&lt;code&gt;find_in_batches&lt;/code&gt;&lt;/a&gt; with a batch size of 1000 (or as specified by the &lt;code&gt;:batch_size&lt;/code&gt; option).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3189f82d4273b6a375724e9691bc4638f9be2090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;batches#method-i-find_each&quot;&gt;find_each&lt;/a&gt; method uses &lt;a href=&quot;batches#method-i-find_in_batches&quot;&gt;find_in_batches&lt;/a&gt; with a batch size of 1000 (or as specified by the &lt;code&gt;:batch_size&lt;/code&gt; option).</source>
          <target state="translated">&lt;a href=&quot;batches#method-i-find_each&quot;&gt;find_each에&lt;/a&gt; 있어서 사용 &lt;a href=&quot;batches#method-i-find_in_batches&quot;&gt;find_in_batches을&lt;/a&gt; (1000)의 배치 사이즈 (또는 지정된대로 &lt;code&gt;:batch_size&lt;/code&gt; 옵션).</target>
        </trans-unit>
        <trans-unit id="03ed0c7f6049f5b10ef3e403b89b207d8621bbd7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classmethods#method-i-default_scope&quot;&gt;&lt;code&gt;default_scope&lt;/code&gt;&lt;/a&gt; is also applied while creating/building a record. It is not applied while updating a record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c568a4a14d4b7f217f7eaaddea80ee90e6ae2d30" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classmethods#method-i-default_scope&quot;&gt;default_scope&lt;/a&gt; is also applied while creating/building a record. It is not applied while updating a record.</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-default_scope&quot;&gt;default_scope는&lt;/a&gt; 기록을 구축 / 작성하는 동안도 적용된다. 레코드를 업데이트하는 동안 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30ebabb1daafb897831e0ab9c44d9d2c8e2e42c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classmethods#method-i-transaction&quot;&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/a&gt; method is also available as a model instance method. For example, you can also do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b298a52c1f512dd4e9635bdbc6c5c1efacb2982e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classmethods#method-i-transaction&quot;&gt;transaction&lt;/a&gt; method is also available as a model instance method. For example, you can also do this:</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-transaction&quot;&gt;거래&lt;/a&gt; 방법은 모델 인스턴스 방법으로 사용할 수 있습니다. 예를 들어 다음을 수행 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bb234f07d8c2831a1b76c979b9d6b1e483894b8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;connectionhandler&quot;&gt;&lt;code&gt;ConnectionHandler&lt;/code&gt;&lt;/a&gt; class is not coupled with the Active models, as it has no knowledge about the model. The model needs to pass a connection specification name to the handler, in order to look up the correct connection pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261bc3f27bcfd410fb1140e954de0fd2e215e7d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;connectionhandler&quot;&gt;ConnectionHandler&lt;/a&gt; class is not coupled with the Active models, as it has no knowledge about the model. The model needs to pass a specification name to the handler, in order to look up the correct connection pool.</source>
          <target state="translated">&lt;a href=&quot;connectionhandler&quot;&gt;ConnectionHandler의&lt;/a&gt; 는 모델에 대한 지식이 없기 때문에 클래스는, 활성 모델과 결합되지 않습니다. 올바른 연결 풀을 찾으려면 모델이 스펙 이름을 핸들러에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="e9580135db45cd5e002408f59d963c84a0eb041b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;databaseselector&quot;&gt;&lt;code&gt;DatabaseSelector&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Middleware&lt;/code&gt; provides a framework for automatically swapping from the primary to the replica database connection. Rails provides a basic framework to determine when to swap and allows for applications to write custom strategy classes to override the default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff3c5bb0465d3c0362a71937800d9619714b7d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;databaseselector&quot;&gt;DatabaseSelector&lt;/a&gt;Middleware provides a framework for automatically swapping from the primary to the replica database connection. Rails provides a basic framework to determine when to swap and allows for applications to write custom strategy classes to override the default behavior.</source>
          <target state="translated">&lt;a href=&quot;databaseselector&quot;&gt;DatabaseSelector&lt;/a&gt; 미들웨어가 자동으로 복제 데이터베이스 연결에 차에서 교환을위한 프레임 워크를 제공합니다. Rails는 스왑시기를 결정하는 기본 프레임 워크를 제공하고 애플리케이션이 기본 동작을 재정의하기 위해 사용자 정의 전략 클래스를 작성할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="5e72c1700fc3f73534e38f61cdbe5b3b90a3c7fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;formhelper#method-i-form_for&quot;&gt;#form_for&lt;/a&gt; method automatically includes the model id as a hidden field in the form. This is used to maintain the correlation between the form data and its associated model. Some ORM systems do not use IDs on nested models so in this case you want to be able to disable the hidden id.</source>
          <target state="translated">&lt;a href=&quot;formhelper#method-i-form_for&quot;&gt;#form_for의&lt;/a&gt; 방법은 자동 형태의 숨겨진 필드로 모델 ID를 포함합니다. 양식 데이터와 관련 모델 간의 상관 관계를 유지하는 데 사용됩니다. 일부 ORM 시스템은 중첩 모델에서 ID를 사용하지 않으므로이 경우 숨겨진 ID를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92c7afd535838a55adf78c438c61be1c7a400eb3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;formhelper#method-i-form_for&quot;&gt;&lt;code&gt;form_for&lt;/code&gt;&lt;/a&gt; method automatically includes the model id as a hidden field in the form. This is used to maintain the correlation between the form data and its associated model. Some ORM systems do not use IDs on nested models so in this case you want to be able to disable the hidden id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16631b448b5f21b2823f76de763b01053b48f24f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;getip&quot;&gt;&lt;code&gt;GetIp&lt;/code&gt;&lt;/a&gt; class exists as a way to defer processing of the request data into an actual IP address. If the &lt;a href=&quot;../request#method-i-remote_ip&quot;&gt;&lt;code&gt;ActionDispatch::Request#remote_ip&lt;/code&gt;&lt;/a&gt; method is called, this class will calculate the value and then memoize it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9e35f6ee0a47f892194874e01bbfb8e13f9178" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;getip&quot;&gt;GetIp&lt;/a&gt; class exists as a way to defer processing of the request data into an actual IP address. If the &lt;a href=&quot;../request#method-i-remote_ip&quot;&gt;ActionDispatch::Request#remote_ip&lt;/a&gt; method is called, this class will calculate the value and then memoize it.</source>
          <target state="translated">&lt;a href=&quot;getip&quot;&gt;GetIp의&lt;/a&gt; 클래스의 실제 IP 주소에 상기 요청 된 데이터 처리를 지연하기위한 방법으로 존재한다. 는 IF &lt;a href=&quot;../request#method-i-remote_ip&quot;&gt;ActionDispatch :: 요청 #의 remote_ip의&lt;/a&gt; 메소드가 호출 될 때,이 클래스는 값을 계산 한 다음 memoize 것입니다.</target>
        </trans-unit>
        <trans-unit id="ac5886a6eceaddecba8fcab9b5ccbeaf7b4ada05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.securiteam.com/securitynews/5LP051FHPE.html&quot;&gt;moz-binding&lt;/a&gt; CSS property proved to be another way to introduce JavaScript in CSS in Gecko-based browsers (Firefox, for example).</source>
          <target state="translated">&lt;a href=&quot;http://www.securiteam.com/securitynews/5LP051FHPE.html&quot;&gt;MOZ 결합&lt;/a&gt; CSS 속성 (예를 들어, 파이어 폭스) Gecko 기반 브라우저에서 CSS에서 자바 스크립트를 소개하는 또 다른 방법이 될 입증했다.</target>
        </trans-unit>
        <trans-unit id="a694c845448b989193ceea97802b63d0b7cb7189" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://api.rubyonrails.org/v4.1/classes/ActionDispatch/Assertions/TagAssertions.html&quot;&gt;&lt;code&gt;TagAssertions&lt;/code&gt; module&lt;/a&gt; (containing methods such as &lt;code&gt;assert_tag&lt;/code&gt;), &lt;a href=&quot;https://github.com/rails/rails/blob/6061472b8c310158a2a2e8e9a6b81a1aef6b60fe/actionpack/lib/action_dispatch/testing/assertions/dom.rb&quot;&gt;has been deprecated&lt;/a&gt; in favor of the &lt;code&gt;assert_select&lt;/code&gt; methods from the &lt;code&gt;SelectorAssertions&lt;/code&gt; module, which has been extracted into the &lt;a href=&quot;https://github.com/rails/rails-dom-testing&quot;&gt;rails-dom-testing gem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://api.rubyonrails.org/v4.1/classes/ActionDispatch/Assertions/TagAssertions.html&quot;&gt; &lt;code&gt;TagAssertions&lt;/code&gt; 의 모듈&lt;/a&gt; (예를 들어 방법 &lt;code&gt;assert_tag&lt;/code&gt; 는 ) &lt;a href=&quot;https://github.com/rails/rails/blob/6061472b8c310158a2a2e8e9a6b81a1aef6b60fe/actionpack/lib/action_dispatch/testing/assertions/dom.rb&quot;&gt;사용되지&lt;/a&gt; 의 대신 &lt;code&gt;assert_select&lt;/code&gt; 용 로부터 방법 &lt;code&gt;SelectorAssertions&lt;/code&gt; 의 으로 추출 된 모듈 &lt;a href=&quot;https://github.com/rails/rails-dom-testing&quot;&gt;레일-DOM 테스팅 일품&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e706eb1ac784c698f8fecbbddcfea7e15d2ba66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://discuss.rubyonrails.org/c/rubyonrails-talk&quot;&gt;Ruby on Rails mailing list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac744619360ab47cb6f0c78d59c9baa26d08fc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/Head.html#method-i-head&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; method can be used to send responses with only headers to the browser. The &lt;code&gt;head&lt;/code&gt; method accepts a number or symbol (see &lt;a href=&quot;#the-status-option&quot;&gt;reference table&lt;/a&gt;) representing an HTTP status code. The options argument is interpreted as a hash of header names and values. For example, you can return only an error header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60b35221fe00b4de4cc8e000026ee7c3ff53fbd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Assertions/RoutingAssertions.html#method-i-assert_routing&quot;&gt;&lt;code&gt;assert_routing&lt;/code&gt;&lt;/a&gt; assertion checks the route both ways: it tests that the path generates the options, and that the options generate the path. Thus, it combines the functions of &lt;code&gt;assert_generates&lt;/code&gt; and &lt;code&gt;assert_recognizes&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad49d91791f22ed9a7ded85a8583023191cca21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/CustomUrls.html#method-i-resolve&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; method allows customizing polymorphic mapping of models. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877c46130ad25d6150c691118afbf8181a61a9e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-audio_tag&quot;&gt;&lt;code&gt;audio_tag&lt;/code&gt;&lt;/a&gt; helper builds an HTML 5 &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/audios&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e0444e6bf2bb1da4ac2073be63621e3db31dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-auto_discovery_link_tag&quot;&gt;&lt;code&gt;auto_discovery_link_tag&lt;/code&gt;&lt;/a&gt; helper builds HTML that most browsers and feed readers can use to detect the presence of RSS, Atom, or JSON feeds. It takes the type of the link (&lt;code&gt;:rss&lt;/code&gt;, &lt;code&gt;:atom&lt;/code&gt;, or &lt;code&gt;:json&lt;/code&gt;), a hash of options that are passed through to url_for, and a hash of options for the tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64da4247686358976d9c5c5b1274f8dd8888c98c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_tag&quot;&gt;&lt;code&gt;image_tag&lt;/code&gt;&lt;/a&gt; helper builds an HTML &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/images&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1fc1c52fc594e469a1f915265d2ea2bf60a752" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-javascript_include_tag&quot;&gt;&lt;code&gt;javascript_include_tag&lt;/code&gt;&lt;/a&gt; helper returns an HTML &lt;code&gt;script&lt;/code&gt; tag for each source provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe3d689ba28d9f1bd81242c26b6f780252a63f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-stylesheet_link_tag&quot;&gt;&lt;code&gt;stylesheet_link_tag&lt;/code&gt;&lt;/a&gt; helper returns an HTML &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag for each source provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c03ef3f746c27c2be2fcc8df8f767404da0ac6c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-video_tag&quot;&gt;&lt;code&gt;video_tag&lt;/code&gt;&lt;/a&gt; helper builds an HTML 5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/videos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df912261d98fd857885425eb08d78c3ad276b65c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for&quot;&gt;&lt;code&gt;content_for&lt;/code&gt;&lt;/a&gt; method allows you to insert content into a named &lt;code&gt;yield&lt;/code&gt; block in your layout. For example, this view would work with the layout that you just saw:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a2f1ee489c869910dc993b0e9842cca3dd97e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_with&quot;&gt;&lt;code&gt;form_with&lt;/code&gt;&lt;/a&gt; helper method instantiates a form builder. In the &lt;code&gt;form_with&lt;/code&gt; block we call methods like &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-text_field&quot;&gt;&lt;code&gt;text_field&lt;/code&gt;&lt;/a&gt; on the form builder to output the appropriate form elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d0cc513ea0a8ee05933d0c3dff9c95006c579f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Errors.html#method-i-add&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; method creates the error object by taking the &lt;code&gt;attribute&lt;/code&gt;, the error &lt;code&gt;type&lt;/code&gt; and additional options hash. This is useful for writing your own validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f42b7c364cb0f85cf13944493e53139005e496c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Errors.html#method-i-full_message&quot;&gt;&lt;code&gt;full_message&lt;/code&gt;&lt;/a&gt; method generates a more user-friendly message, with the capitalized attribute name prepended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbd003ab59d10e827d8f12d6f9a330ec002b6d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Errors.html#method-i-full_messages_for&quot;&gt;&lt;code&gt;full_messages_for&lt;/code&gt;&lt;/a&gt; method returns an array of user-friendly error messages for a specified attribute. If there are no errors for that attribute, the array will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866a328a9153b0a878c7f1a4298c96c4c6e266f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_with&quot;&gt;&lt;code&gt;validates_with&lt;/code&gt;&lt;/a&gt; helper takes a class, or a list of classes to use for validation. There is no default error message for &lt;code&gt;validates_with&lt;/code&gt;. You must manually add errors to the record's errors collection in the validator class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77eb3e53c129c32cec1a241ef096cf1cafffd933" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; association supports these options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b95ae90a8ebe1961b267f47161e9901a0745a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; association supports these options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d265e8be934a21f76040220bb8097c53ef5c758" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; association supports these options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1592d93d97b8c8597a723318826c7e779b2c0a4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; association supports these options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95124b98164264349edc0ad56ba16100f40e055" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-3C-3C&quot;&gt;&lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt; method adds one or more objects to the collection by creating records in the join table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f59218bed8798283a401930b1b05fde5094a56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-3C-3C&quot;&gt;&lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt; method adds one or more objects to the collection by setting their foreign keys to the primary key of the calling model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6427408d112113d646fa47ad534a81b16e113c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-build&quot;&gt;&lt;code&gt;collection.build&lt;/code&gt;&lt;/a&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, and the link through the join table will be created, but the associated object will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2fec5f4197acf7c7dcf2321581324373d791fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-build&quot;&gt;&lt;code&gt;collection.build&lt;/code&gt;&lt;/a&gt; method returns a single or array of new objects of the associated type. The object(s) will be instantiated from the passed attributes, and the link through their foreign key will be created, but the associated objects will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c5072a5f64e93548c69b219e8d83301afaaa95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-clear&quot;&gt;&lt;code&gt;collection.clear&lt;/code&gt;&lt;/a&gt; method removes all objects from the collection according to the strategy specified by the &lt;code&gt;dependent&lt;/code&gt; option. If no option is given, it follows the default strategy. The default strategy for &lt;code&gt;has_many :through&lt;/code&gt; associations is &lt;code&gt;delete_all&lt;/code&gt;, and for &lt;code&gt;has_many&lt;/code&gt; associations is to set the foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f4f1d116b3494b2219e1afc83e798f74bef094" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-clear&quot;&gt;&lt;code&gt;collection.clear&lt;/code&gt;&lt;/a&gt; method removes every object from the collection by deleting the rows from the joining table. This does not destroy the associated objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c431f5772210b8187d385d22867910c36fefc38c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-create&quot;&gt;&lt;code&gt;collection.create&lt;/code&gt;&lt;/a&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, the link through the join table will be created, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ad265af073a3e4988377a0f820abe81b4d1101" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-create&quot;&gt;&lt;code&gt;collection.create&lt;/code&gt;&lt;/a&gt; method returns a single or array of new objects of the associated type. The object(s) will be instantiated from the passed attributes, the link through its foreign key will be created, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03ecd9a613291a8ed108403d2644cc00aed5511" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-delete&quot;&gt;&lt;code&gt;collection.delete&lt;/code&gt;&lt;/a&gt; method removes one or more objects from the collection by deleting records in the join table. This does not destroy the objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063b0f3b1dcaa0de1ac2efecca6a498c105b9d99" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-delete&quot;&gt;&lt;code&gt;collection.delete&lt;/code&gt;&lt;/a&gt; method removes one or more objects from the collection by setting their foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98657258746712309c663f49b5cacb29b3323f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-destroy&quot;&gt;&lt;code&gt;collection.destroy&lt;/code&gt;&lt;/a&gt; method removes one or more objects from the collection by deleting records in the join table. This does not destroy the objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd5acbc5a86c5463b61d9f44a780201c75f73cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-destroy&quot;&gt;&lt;code&gt;collection.destroy&lt;/code&gt;&lt;/a&gt; method removes one or more objects from the collection by running &lt;code&gt;destroy&lt;/code&gt; on each object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bbb5c3ac81d83123c7c94426208cbb6c114aca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-empty-3F&quot;&gt;&lt;code&gt;collection.empty?&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; if the collection does not contain any associated objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83128f6be0714298c49f7dad0babfb92e4fa9ca7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-find&quot;&gt;&lt;code&gt;collection.find&lt;/code&gt;&lt;/a&gt; method finds objects within the collection's table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175615e9e52ceccbe322018d5145e7520713a765" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-reload&quot;&gt;&lt;code&gt;collection.reload&lt;/code&gt;&lt;/a&gt; method returns a Relation of all of the associated objects, forcing a database read. If there are no associated objects, it returns an empty Relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ec346051e0b8ee0cc39ec5b0817d46f9cb01bd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Associations/CollectionProxy.html#method-i-size&quot;&gt;&lt;code&gt;collection.size&lt;/code&gt;&lt;/a&gt; method returns the number of objects in the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7c828b06e8cd43f6b689c9a245a57678bf1dfd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-find_each&quot;&gt;&lt;code&gt;find_each&lt;/code&gt;&lt;/a&gt; method retrieves records in batches and then yields &lt;em&gt;each&lt;/em&gt; one to the block. In the following example, &lt;code&gt;find_each&lt;/code&gt; retrieves customers in batches of 1000 and yields them to the block one by one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8bfb472d021b9469583134bd3cd89b263463ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-find_in_batches&quot;&gt;&lt;code&gt;find_in_batches&lt;/code&gt;&lt;/a&gt; method is similar to &lt;code&gt;find_each&lt;/code&gt;, since both retrieve batches of records. The difference is that &lt;code&gt;find_in_batches&lt;/code&gt; yields &lt;em&gt;batches&lt;/em&gt; to the block as an array of models, instead of individually. The following example will yield to the supplied block an array of up to 1000 customers at a time, with the final block containing any remaining customers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf6624d3d29a0109fc8436ea320cddb4adc85ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_find&quot;&gt;&lt;code&gt;after_find&lt;/code&gt;&lt;/a&gt; callback will be called whenever Active Record loads a record from the database. &lt;code&gt;after_find&lt;/code&gt; is called before &lt;code&gt;after_initialize&lt;/code&gt; if both are defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343a6a76674fbdde0a4f5fb97ada8231c101d3b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_initialize&quot;&gt;&lt;code&gt;after_initialize&lt;/code&gt;&lt;/a&gt; callback will be called whenever an Active Record object is instantiated, either by directly using &lt;code&gt;new&lt;/code&gt; or when a record is loaded from the database. It can be useful to avoid the need to directly override your Active Record &lt;code&gt;initialize&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b144d0387ec0d55d2ee08c158fb2fd9848b9d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Callbacks/ClassMethods.html#method-i-after_touch&quot;&gt;&lt;code&gt;after_touch&lt;/code&gt;&lt;/a&gt; callback will be called whenever an Active Record object is touched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37344ac886c6a1f3e352892bc5c1b514ae23f00d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table&quot;&gt;&lt;code&gt;create_table&lt;/code&gt;&lt;/a&gt; method is one of the most fundamental, but most of the time, will be generated for you from using a model or scaffold generator. A typical use would be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdf306a8e2f8c5e55732e9650561e1078b1dfb7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F&quot;&gt;&lt;code&gt;collection.exists?&lt;/code&gt;&lt;/a&gt; method checks whether an object meeting the supplied conditions exists in the collection's table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b31c57d69bb67355892f81081118b5d45ca575" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-find_by&quot;&gt;&lt;code&gt;find_by&lt;/code&gt;&lt;/a&gt; method finds the first record matching some conditions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151692a6f51ecd5c29d4f98cd1857173506d3bf2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-find_by-21&quot;&gt;&lt;code&gt;find_by!&lt;/code&gt;&lt;/a&gt; method behaves exactly like &lt;code&gt;find_by&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb8567c00209167d1d1383395448c381ec67c40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-first&quot;&gt;&lt;code&gt;first&lt;/code&gt;&lt;/a&gt; method finds the first record ordered by primary key (default). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa99826227e09f753995721aae097b94c98f958" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-first-21&quot;&gt;&lt;code&gt;first!&lt;/code&gt;&lt;/a&gt; method behaves exactly like &lt;code&gt;first&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a59992ec7b3cf8212fa5d9bc05ccc967be98ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-last&quot;&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt; method finds the last record ordered by primary key (default). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722fd822ec76bc5e96534ad193eb226c690d9285" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-last-21&quot;&gt;&lt;code&gt;last!&lt;/code&gt;&lt;/a&gt; method behaves exactly like &lt;code&gt;last&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c45f53e6d7defd658ea0799847d8c218de007c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; method retrieves a record without any implicit ordering. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1325b5a76d38ed69cd05f540485365405c97f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-take-21&quot;&gt;&lt;code&gt;take!&lt;/code&gt;&lt;/a&gt; method behaves exactly like &lt;code&gt;take&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5d53951d1e39147efa929f1f7acb561fc1226b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-none&quot;&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt; method returns a chainable relation with no records. Any subsequent conditions chained to the returned relation will continue generating empty relations. This is useful in scenarios where you need a chainable response to a method or a scope that could return zero results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54742291d5c568c4182f40b9f381e3499aec5832" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-reorder&quot;&gt;&lt;code&gt;reorder&lt;/code&gt;&lt;/a&gt; method overrides the default scope order. For example if the class definition includes this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa791e7af09e499ac78b50ae7816a18e7d1def10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-reselect&quot;&gt;&lt;code&gt;reselect&lt;/code&gt;&lt;/a&gt; method overrides an existing select statement. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7c90da60982d92119c93f7144ca11fc37b11f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-reverse_order&quot;&gt;&lt;code&gt;reverse_order&lt;/code&gt;&lt;/a&gt; method reverses the ordering clause if specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9503c0d1789853077482cc1f87c37897b32fd5ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-rewhere&quot;&gt;&lt;code&gt;rewhere&lt;/code&gt;&lt;/a&gt; method overrides an existing, named &lt;code&gt;where&lt;/code&gt; condition. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c31dad64af8fa15052485c1be612bce66ca0cb9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-where&quot;&gt;&lt;code&gt;collection.where&lt;/code&gt;&lt;/a&gt; method finds objects within the collection based on the conditions supplied but the objects are loaded lazily meaning that the database is queried only when the object(s) are accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a100b9a368a4e00d747d745710b11cba4f6de53" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/QueryMethods.html#method-i-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; method allows you to specify conditions to limit the records returned, representing the &lt;code&gt;WHERE&lt;/code&gt;-part of the SQL statement. Conditions can either be specified as a string, array, or hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa773e5f576033a4a5ef38c6cf6164b59f4b30ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Relation.html#method-i-find_or_create_by&quot;&gt;&lt;code&gt;find_or_create_by&lt;/code&gt;&lt;/a&gt; method checks whether a record with the specified attributes exists. If it doesn't, then &lt;code&gt;create&lt;/code&gt; is called. Let's see an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24351ef7a804be5d32236e1f72f1a796978c2778" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Relation.html#method-i-find_or_initialize_by&quot;&gt;&lt;code&gt;find_or_initialize_by&lt;/code&gt;&lt;/a&gt; method will work just like &lt;code&gt;find_or_create_by&lt;/code&gt; but it will call &lt;code&gt;new&lt;/code&gt; instead of &lt;code&gt;create&lt;/code&gt;. This means that a new model instance will be created in memory but won't be saved to the database. Continuing with the &lt;code&gt;find_or_create_by&lt;/code&gt; example, we now want the customer named 'Nina':</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35998da462e0310cf9969fb6552042393406f49e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Validations.html#method-i-valid-3F&quot;&gt;&lt;code&gt;valid?&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Validations.html#method-i-invalid-3F&quot;&gt;&lt;code&gt;invalid?&lt;/code&gt;&lt;/a&gt; methods only provide a summary status on validity. However you can dig deeper into each individual error by using various methods from the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Validations.html#method-i-errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1438ab298e4b056b9941e086ef6bb2b5dd1f61cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Attached/Model.html#method-i-has_many_attached&quot;&gt;&lt;code&gt;has_many_attached&lt;/code&gt;&lt;/a&gt; macro sets up a one-to-many relationship between records and files. Each record can have many files attached to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f7db4212351ce3e00830abee538e96f6a42a38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Attached/Model.html#method-i-has_one_attached&quot;&gt;&lt;code&gt;has_one_attached&lt;/code&gt;&lt;/a&gt; macro sets up a one-to-one mapping between records and files. Each record can have one file attached to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514704d2d2248f0a8b822f020a64248c6e1291e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Class.html#method-i-descendants&quot;&gt;&lt;code&gt;descendants&lt;/code&gt;&lt;/a&gt; method returns all classes that are &lt;code&gt;&amp;lt;&lt;/code&gt; than its receiver:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a496fba61ed54fcea88253cd39f1ee6f4810bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Class.html#method-i-subclasses&quot;&gt;&lt;code&gt;subclasses&lt;/code&gt;&lt;/a&gt; method returns the subclasses of the receiver:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a643f840208cd7c574cbed6e711b6f86dc017d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-module_parent&quot;&gt;&lt;code&gt;module_parent&lt;/code&gt;&lt;/a&gt; method on a nested named module returns the module that contains its corresponding constant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0ed5868ca045eedf2c343ca3cf63068ab160bf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-module_parent_name&quot;&gt;&lt;code&gt;module_parent_name&lt;/code&gt;&lt;/a&gt; method on a nested named module returns the fully qualified name of the module that contains its corresponding constant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a9d6f76e80e4e22f862a420791787c3a1b030d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-deep_dup&quot;&gt;&lt;code&gt;deep_dup&lt;/code&gt;&lt;/a&gt; method returns a deep copy of a given object. Normally, when you &lt;code&gt;dup&lt;/code&gt; an object that contains other objects, Ruby does not &lt;code&gt;dup&lt;/code&gt; them, so it creates a shallow copy of the object. If you have an array with a string, for example, it will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f8d0e86c3633be8b26b9fcd721a2e218637757" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-presence&quot;&gt;&lt;code&gt;presence&lt;/code&gt;&lt;/a&gt; method returns its receiver if &lt;code&gt;present?&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. It is useful for idioms like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fe08eb740d499144fff3da6794aab2c0174171" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-to_query&quot;&gt;&lt;code&gt;to_query&lt;/code&gt;&lt;/a&gt; method constructs a query string that associates a given &lt;code&gt;key&lt;/code&gt; with the return value of &lt;code&gt;to_param&lt;/code&gt;. For example, with the following &lt;code&gt;to_param&lt;/code&gt; definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f0062d0b21fc5bc290ee5ba87dab0abdebec19" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-at&quot;&gt;&lt;code&gt;at&lt;/code&gt;&lt;/a&gt; method returns the character of the string at position &lt;code&gt;position&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b25449450b8de099aafae48f48fab86548210" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-first&quot;&gt;&lt;code&gt;first&lt;/code&gt;&lt;/a&gt; method returns a substring containing the first &lt;code&gt;limit&lt;/code&gt; characters of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc7a054e0e1b868819708fcc57a0dd4f3dda5ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-from&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method returns the substring of the string starting at position &lt;code&gt;position&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f6b40a188d93e092cca2dc6e792e700c9a97bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-indent&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt; method indents the lines in the receiver:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5063e6bea20f7dabcce2fbe3907180bbaf302596" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-indent-21&quot;&gt;&lt;code&gt;indent!&lt;/code&gt;&lt;/a&gt; method performs indentation in-place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfd2134990a2863710f2c8e11ff74dac3ff6631" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-inquiry&quot;&gt;&lt;code&gt;inquiry&lt;/code&gt;&lt;/a&gt; method converts a string into a &lt;code&gt;StringInquirer&lt;/code&gt; object making equality checks prettier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a20c26de27a8e0041d233ae2b33822525f35582" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-last&quot;&gt;&lt;code&gt;last&lt;/code&gt;&lt;/a&gt; method returns a substring containing the last &lt;code&gt;limit&lt;/code&gt; characters of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75211245a1c8cc295701bb7d5be16f3e990a63a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-singularize&quot;&gt;&lt;code&gt;singularize&lt;/code&gt;&lt;/a&gt; method is the inverse of &lt;code&gt;pluralize&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0bc64c9435bccade34d65fe560deab50577967" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-to&quot;&gt;&lt;code&gt;to&lt;/code&gt;&lt;/a&gt; method returns the substring of the string up to position &lt;code&gt;position&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daea83b9fd6b436428a0b06d769841ce27585f73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://groups.google.com/group/rubyonrails-talk&quot;&gt;Ruby on Rails mailing list&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://groups.google.com/group/rubyonrails-talk&quot;&gt;레일 메일 링리스트에 루비&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="676f80b78a6efb7968cadd8a7a713d07cfa6edf8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.railstutorial.org/book&quot;&gt;Ruby on Rails Tutorial&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.railstutorial.org/book&quot;&gt;레일 튜토리얼에 루비&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a37fc068fc6521c2e1a00b10e49ba6351de0ea49" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.securiteam.com/securitynews/5LP051FHPE.html&quot;&gt;moz-binding&lt;/a&gt; CSS property proved to be another way to introduce JavaScript in CSS in Gecko-based browsers (Firefox, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de98df7609ac53515b88c2b836906330c083880b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9&quot;&gt;cache control header&lt;/a&gt; is a W3C specification that describes how a request can be cached. When no CDN is used, a browser will use this information to cache contents. This is very helpful for assets that are not modified so that a browser does not need to re-download a website's CSS or JavaScript on every request. Generally we want our Rails server to tell our CDN (and browser) that the asset is &quot;public&quot;, that means any cache can store the request. Also we commonly want to set &lt;code&gt;max-age&lt;/code&gt; which is how long the cache will store the object before invalidating the cache. The &lt;code&gt;max-age&lt;/code&gt; value is set to seconds with a maximum possible value of &lt;code&gt;31536000&lt;/code&gt; which is one year. You can do this in your Rails application by setting</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9&quot;&gt;캐시 제어 헤더는&lt;/a&gt; 요청을 캐시 할 수있는 방법을 설명하는 W3C 사양입니다. CDN을 사용하지 않으면 브라우저는이 정보를 사용하여 내용을 캐시합니다. 이는 브라우저가 모든 요청에서 웹 사이트의 CSS 또는 JavaScript를 다시 다운로드 할 필요가 없도록 수정되지 않은 자산에 매우 유용합니다. 일반적으로 우리는 Rails 서버가 CDN (및 브라우저)에 자산이 &quot;public&quot;임을 알리기를 원합니다. 이는 모든 캐시가 요청을 저장할 수 있음을 의미합니다. 또한 일반적으로 캐시를 무효화하기 전에 캐시가 객체를 저장하는 시간 인 &lt;code&gt;max-age&lt;/code&gt; 를 설정하려고 합니다. &lt;code&gt;max-age&lt;/code&gt; 값의 가능한 최대 값 (초)으로 설정되어 &lt;code&gt;31536000&lt;/code&gt; 1 년입니다. Rails 애플리케이션에서이를 설정하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe48602bab3bf0121faae0525720959c41a152ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;index&quot;&gt;Ruby on Rails Guides&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;레일 가이드에 루비&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2a767eff26dcec7a10dd1291725a86b8517e35d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inflector&quot;&gt;&lt;code&gt;Inflector&lt;/code&gt;&lt;/a&gt; transforms words from singular to plural, class names to table names, modularized class names to ones without, and class names to foreign keys. The default inflections for pluralization, singularization, and uncountable words are kept in inflections.rb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8793e08ceca2e5c463ad8a2a149f6846d821162" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inflector&quot;&gt;Inflector&lt;/a&gt; transforms words from singular to plural, class names to table names, modularized class names to ones without, and class names to foreign keys. The default inflections for pluralization, singularization, and uncountable words are kept in inflections.rb.</source>
          <target state="translated">&lt;a href=&quot;inflector&quot;&gt;인플의&lt;/a&gt; 에서 변환 단어 단수 복수, 외래 키에없는 것, 그리고 클래스 이름을 테이블 이름, 모듈화 클래스 이름에 클래스 이름. 복수형, 단수형 및 셀 수없는 단어에 대한 기본 변곡은 inflections.rb에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="7dd16d82f328c90fd355e114c85e41f099e74d93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;irc://irc.freenode.net/#rubyonrails&quot;&gt;#rubyonrails&lt;/a&gt; channel on irc.freenode.net</source>
          <target state="translated">irc.freenode.net 의 &lt;a href=&quot;irc://irc.freenode.net/#rubyonrails&quot;&gt;#rubyonrails&lt;/a&gt; 채널</target>
        </trans-unit>
        <trans-unit id="e99c9a76f707b4aa558869b5e91070c55e7c3c0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts &amp;amp; Rendering Guide&lt;/a&gt; explains this in more detail.</source>
          <target state="translated">&lt;a href=&quot;layouts_and_rendering&quot;&gt;레이아웃 및 렌더링 가이드&lt;/a&gt; 더 자세하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="072f09ff317da6395a624b054fc7b3ccbb47da29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts and Rendering Guide&lt;/a&gt; explains this in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a15295b0a99ad07c6943064c4e63aaef26451f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;renderer&quot;&gt;&lt;code&gt;Renderer&lt;/code&gt;&lt;/a&gt; will parse the options from the &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;render_body&lt;/code&gt; method and render a partial or a template based on the options. The &lt;code&gt;TemplateRenderer&lt;/code&gt; and &lt;code&gt;PartialRenderer&lt;/code&gt; objects are wrappers which do all the setup and logic necessary to render a view and a new object is created each time &lt;code&gt;render&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1f12b1da6851092c076486248eaafcd73d1d92" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;renderer&quot;&gt;Renderer&lt;/a&gt; will parse the options from the &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;render_body&lt;/code&gt; method and render a partial or a template based on the options. The &lt;code&gt;TemplateRenderer&lt;/code&gt; and &lt;code&gt;PartialRenderer&lt;/code&gt; objects are wrappers which do all the setup and logic necessary to render a view and a new object is created each time &lt;code&gt;render&lt;/code&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;renderer&quot;&gt;렌더러&lt;/a&gt; 로부터 옵션 구문 분석 &lt;code&gt;render&lt;/code&gt; 또는 &lt;code&gt;render_body&lt;/code&gt; 방법과 부분 또는 옵션에 따라 템플릿을 렌더링합니다. &lt;code&gt;TemplateRenderer&lt;/code&gt; 및 &lt;code&gt;PartialRenderer&lt;/code&gt; 개체보기를 렌더링하는 데 필요한 설정 및 로직을 모두 수행 래퍼 새로운 객체마다 생성됩니다 &lt;code&gt;render&lt;/code&gt; 이라고합니다.</target>
        </trans-unit>
        <trans-unit id="4a279250ecb53da187654feab3be7b026b1f729c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;richtext&quot;&gt;&lt;code&gt;RichText&lt;/code&gt;&lt;/a&gt; record holds the content produced by the Trix editor in a serialized &lt;code&gt;body&lt;/code&gt; attribute. It also holds all the references to the embedded files, which are stored using Active Storage. This record is then associated with the Active Record model the application desires to have rich text content using the &lt;code&gt;has_rich_text&lt;/code&gt; class method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8e2542d9b4643b4728b2c24985be0da08ae74a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt; record holds the content produced by the Trix editor in a serialized &lt;code&gt;body&lt;/code&gt; attribute. It also holds all the references to the embedded files, which are stored using Active Storage. This record is then associated with the Active Record model the application desires to have rich text content using the &lt;code&gt;has_rich_text&lt;/code&gt; class method.</source>
          <target state="translated">&lt;a href=&quot;richtext&quot;&gt;서식있는 텍스트&lt;/a&gt; 레코드는 일련의 트릭스 편집기에 의해 생성 된 콘텐츠를 보유하고 &lt;code&gt;body&lt;/code&gt; 속성을. 또한 Active Storage를 사용하여 저장된 내장 파일에 대한 모든 참조를 보유합니다. 그런 다음이 레코드는 응용 프로그램이 &lt;code&gt;has_rich_text&lt;/code&gt; 클래스 메소드를 사용하여 리치 텍스트 컨텐츠를 갖기를 원하는 활성 레코드 모델과 연관됩니다 .</target>
        </trans-unit>
        <trans-unit id="71da76d957e10958c03bb23b1f517780c651bbc1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sanitizehelper&quot;&gt;&lt;code&gt;SanitizeHelper&lt;/code&gt;&lt;/a&gt; module provides a set of methods for scrubbing text of undesired HTML elements. These helper methods extend Action View making them callable within your template files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38da1c72c68070bb4df53e815adfffaae3b56293" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sanitizehelper&quot;&gt;SanitizeHelper&lt;/a&gt; module provides a set of methods for scrubbing text of undesired HTML elements. These helper methods extend Action View making them callable within your template files.</source>
          <target state="translated">&lt;a href=&quot;sanitizehelper&quot;&gt;SanitizeHelper의&lt;/a&gt; 모듈은 원하지 않는 HTML 요소의 텍스트를 스크러빙 방법의 집합을 제공합니다. 이 헬퍼 메소드는 템플리트 파일 내에서 호출 할 수 있도록 조치보기를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="e2b867af373e117260a75ce6dea38c17e75d940d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;securecomparerotator&quot;&gt;&lt;code&gt;ActiveSupport::SecureCompareRotator&lt;/code&gt;&lt;/a&gt; is a wrapper around &lt;code&gt;ActiveSupport::SecurityUtils.secure_compare&lt;/code&gt; and allows you to rotate a previously defined value to a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aeaa555bf0ae986fab284085599376e99a05e09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;security&quot;&gt;Security Guide&lt;/a&gt; has more about this and a lot of other security-related issues that you should be aware of when developing a web application.</source>
          <target state="translated">&lt;a href=&quot;security&quot;&gt;보안 가이드&lt;/a&gt; 이 당신이 웹 애플리케이션을 개발할 때주의해야하는 기타 보안 관련 문제의 많은에 대한 자세한있다.</target>
        </trans-unit>
        <trans-unit id="958ee654031b54500f16681aec9f86f2cad92bbb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;session#attribute-i-remote_addr&quot;&gt;#remote_addr&lt;/a&gt; used in the last request.</source>
          <target state="translated">&lt;a href=&quot;session#attribute-i-remote_addr&quot;&gt;#remote_addr&lt;/a&gt; 마지막 요청에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0d75d1e1f12046efa5c7c2be525636338780c20d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;session#attribute-i-remote_addr&quot;&gt;&lt;code&gt;remote_addr&lt;/code&gt;&lt;/a&gt; used in the last request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b38b628aaf15c824f7ca30e8601b36c8c045a89" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;texthelper&quot;&gt;&lt;code&gt;TextHelper&lt;/code&gt;&lt;/a&gt; module provides a set of methods for filtering, formatting and transforming strings, which can reduce the amount of inline Ruby code in your views. These helper methods extend Action View making them callable within your template files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5945571a8ced080126f503e3ff3c4dadf1c8ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;texthelper&quot;&gt;TextHelper&lt;/a&gt; module provides a set of methods for filtering, formatting and transforming strings, which can reduce the amount of inline Ruby code in your views. These helper methods extend Action View making them callable within your template files.</source>
          <target state="translated">&lt;a href=&quot;texthelper&quot;&gt;TextHelper의&lt;/a&gt; 모듈은 필터링 포맷 및 뷰에서 인라인 루비 코드의 양을 줄일 수있는 문자열을 변환하는 방법의 세트를 제공한다. 이 헬퍼 메소드는 템플리트 파일 내에서 호출 할 수 있도록 조치보기를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="68509948128382ab4d3839b4fbd66661a094dfc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class serves as a wrapper around TZInfo::Timezone instances. It allows us to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917c36aa1c0f73e61c01109543064fb98ceb2654" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt; class serves as a wrapper around TZInfo::Timezone instances. It allows us to do the following:</source>
          <target state="translated">&lt;a href=&quot;timezone&quot;&gt;시간대의&lt;/a&gt; 클래스는 TZInfo :: 시간대 인스턴스의 래퍼 역할을합니다. 이를 통해 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc24421e16c8fa0feec68670b4a18ee53130582e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;unicode&quot;&gt;&lt;code&gt;Unicode&lt;/code&gt;&lt;/a&gt; version that is supported by the implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88d4996921266f4620f00041489241493ebb076" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;unicode&quot;&gt;Unicode&lt;/a&gt; version that is supported by the implementation</source>
          <target state="translated">&lt;a href=&quot;unicode&quot;&gt;유니 코드&lt;/a&gt; 구현에 의해 지원되는 버전</target>
        </trans-unit>
        <trans-unit id="28a47febaca078cb6da04aeacf7bed2756a147a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mountable&lt;/code&gt; option tells the generator that you want to create a &quot;mountable&quot; and namespace-isolated engine. This generator will provide the same skeleton structure as would the &lt;code&gt;--full&lt;/code&gt; option. The &lt;code&gt;--full&lt;/code&gt; option tells the generator that you want to create an engine, including a skeleton structure that provides the following:</source>
          <target state="translated">&lt;code&gt;--mountable&lt;/code&gt; 옵션은 &quot;마운트&quot;네임 스페이스 절연 엔진을 만들 것인지 발전기를 알려줍니다. 이 생성기는 &lt;code&gt;--full&lt;/code&gt; 옵션 과 동일한 골격 구조를 제공합니다 . &lt;code&gt;--full&lt;/code&gt; 옵션은 다음을 제공하는 골격 구조를 포함하는 엔진을 만들 것을 발전기를 알려줍니다 :</target>
        </trans-unit>
        <trans-unit id="a31a32da1e13841a06036adefa9f0ce3ffe7bf6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mountable&lt;/code&gt; option will add to the &lt;code&gt;--full&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;--mountable&lt;/code&gt; 옵션에 추가됩니다 &lt;code&gt;--full&lt;/code&gt; 옵션 :</target>
        </trans-unit>
        <trans-unit id="1cee14827d08f7dbf8ff0e3f38f3a845d3fd202b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-b&lt;/code&gt; option binds Rails to the specified IP, by default it is localhost. You can run a server as a daemon by passing a &lt;code&gt;-d&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;-b&lt;/code&gt; 은 localhost입니다 기본적으로 옵션 바인딩은 지정된 IP로 레일. &lt;code&gt;-d&lt;/code&gt; 옵션 을 전달하여 서버를 데몬으로 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7745367da6a6589cf590599c2b25a5c35718b6f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:allow_blank&lt;/code&gt; option is similar to the &lt;code&gt;:allow_nil&lt;/code&gt; option. This option will let validation pass if the attribute's value is &lt;code&gt;blank?&lt;/code&gt;, like &lt;code&gt;nil&lt;/code&gt; or an empty string for example.</source>
          <target state="translated">&lt;code&gt;:allow_blank&lt;/code&gt; 의 옵션은 비슷합니다 &lt;code&gt;:allow_nil&lt;/code&gt; 옵션을 선택합니다. 이 옵션을 사용하면 속성 값이 &lt;code&gt;blank?&lt;/code&gt; 있으면 유효성 검사를 통과 할 수 있습니까? 예를 들어 &lt;code&gt;nil&lt;/code&gt; 또는 빈 문자열 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0a7dc78687bf59aec5a1cf84126b6c699e0c0cc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:allow_nil&lt;/code&gt; option skips the validation when the value being validated is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:allow_nil&lt;/code&gt; 옵션은 값이 검증되고 검증 건너 뜁니다 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7fc394632435d57f94dd290f6cb0bf23c5d802b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:as&lt;/code&gt; option lets you override the normal naming for the named route helpers. For example:</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; 옵션이 있습니다 명명 된 경로 도우미에 대한 일반 이름보다 우선합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c894466ba90f3dc16de466d84d6825a9e1830d2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:as&lt;/code&gt; option may be used when rendering partials.</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; 파셜을 렌더링 할 때 옵션을 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="ae26e393c502265acb97179057642282b551c57c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:as&lt;/code&gt; option overrides the automatically-generated name for the resource in nested route helpers. For example:</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; 옵션이 중첩 된 경로 도우미의 리소스에 대한 자동으로 생성 된 이름을 재정의합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41c7a6f671a46a5697ee3a45561bbf891ff95e69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:batch_size&lt;/code&gt; option allows you to specify the number of records to be retrieved in each batch, before being passed individually to the block. For example, to retrieve records in batches of 5000:</source>
          <target state="translated">&lt;code&gt;:batch_size&lt;/code&gt; 옵션은 레코드의 번호가 블록에 개별적으로 전달되기 전에, 각 배치에서 검색 할 지정할 수 있습니다. 예를 들어, 5000 단위로 레코드를 검색하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e691995ccde41ad605241f34eab4e951f9d732d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:controller&lt;/code&gt; option lets you explicitly specify a controller to use for the resource. For example:</source>
          <target state="translated">&lt;code&gt;:controller&lt;/code&gt; 옵션을 사용하면 명시 적으로 리소스를 사용하는 컨트롤러를 지정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="292c456fe0e276257c118bcd9442b2ae2aa88470" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:count&lt;/code&gt; interpolation variable has a special role in that it both is interpolated to the translation and used to pick a pluralization from the translations according to the pluralization rules defined in the pluralization backend. By default, only the English pluralization rules are applied.</source>
          <target state="translated">&lt;code&gt;:count&lt;/code&gt; 보간 변수는 모두 번역에 보간과 복수화 백엔드에 정의 된 복수화 규칙에 따라 번역에서 복수화를 선택하는 데 사용되는 것을 특별한 역할을한다. 기본적으로 영어 복수 규칙 만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c8c9bbd139a784cdeba19fab7c52f51e8cf82f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:counter_cache&lt;/code&gt; option can be used to make finding the number of belonging objects more efficient. Consider these models:</source>
          <target state="translated">&lt;code&gt;:counter_cache&lt;/code&gt; 의 옵션은 객체를보다 효율적 소속의 수를 찾을 수 있도록하는 데 사용할 수 있습니다. 다음 모델을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="e25153a45dd1aa53e746f9349c48c09991180c68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:debug&lt;/code&gt; option is redundant if debug mode is already on.</source>
          <target state="translated">&lt;code&gt;:debug&lt;/code&gt; 디버그 모드가 이미 켜져있는 경우 옵션은 중복입니다.</target>
        </trans-unit>
        <trans-unit id="fa325e355306a799628c5b98499926d49b2a8dd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:dependent&lt;/code&gt; option can have different values which specify how the deletion is done. For more information, see the documentation for this option on the different specific association types. When no option is given, the behavior is to do nothing with the associated records when destroying a record.</source>
          <target state="translated">&lt;code&gt;:dependent&lt;/code&gt; 옵션은 삭제가 수행하는 방법을 지정하는 다른 값을 가질 수 있습니다. 자세한 정보는 다른 특정 연관 유형에 대한이 옵션의 문서를 참조하십시오. 옵션을 지정하지 않으면 레코드를 삭제할 때 관련 레코드와 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="2f5d2d501585bc8f55259e8b0161ff54396d0108" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:destroy&lt;/code&gt; and &lt;code&gt;:delete_all&lt;/code&gt; options also affect the semantics of the &lt;code&gt;collection.delete&lt;/code&gt; and &lt;code&gt;collection=&lt;/code&gt; methods by causing them to destroy associated objects when they are removed from the collection.</source>
          <target state="translated">&lt;code&gt;:destroy&lt;/code&gt; 와 &lt;code&gt;:delete_all&lt;/code&gt; 옵션도의 의미에 영향을 &lt;code&gt;collection.delete&lt;/code&gt; 및 &lt;code&gt;collection=&lt;/code&gt; 그들은 컬렉션에서 제거 할 때 관련된 오브젝트를 파괴를 일으켜 방법.</target>
        </trans-unit>
        <trans-unit id="d8c6a623c208fc9933af1acc6839da24472e0610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:except&lt;/code&gt; option specifies a route or list of routes that Rails should &lt;em&gt;not&lt;/em&gt; create:</source>
          <target state="translated">&lt;code&gt;:except&lt;/code&gt; 옵션은 경로 또는 레일을해야한다고 경로의 목록을 지정 &lt;em&gt;하지&lt;/em&gt; 만듭니다 :</target>
        </trans-unit>
        <trans-unit id="26daae7abab493bc4cfea145f93fbcfe6ad2b81c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:force&lt;/code&gt; option is useful when you're calling some other method to ask whether you should force a cache write. Otherwise, it's clearer to just call &lt;code&gt;Cache#write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; 당신이 캐시 쓰기를 할 것인지를 묻는 다른 메소드를 호출 할 때 유용합니다. 그렇지 않으면 &lt;code&gt;Cache#write&lt;/code&gt; 를 호출하는 것이 더 명확합니다 .</target>
        </trans-unit>
        <trans-unit id="2696c1bee386e09903f0cb4f6dfa58cce345908c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:foreign_key&lt;/code&gt; and &lt;code&gt;:association_foreign_key&lt;/code&gt; options are useful when setting up a many-to-many self-join. For example:</source>
          <target state="translated">&lt;code&gt;:foreign_key&lt;/code&gt; 와 &lt;code&gt;:association_foreign_key&lt;/code&gt; 의 다 대다 자체 조인 설정할 때 옵션이 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="deb069581b1d26703133d1c4d0bb057db473cf0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:inverse_of&lt;/code&gt; option specifies the name of the &lt;code&gt;belongs_to&lt;/code&gt; association that is the inverse of this association.</source>
          <target state="translated">&lt;code&gt;:inverse_of&lt;/code&gt; 옵션은 이름 지정 &lt;code&gt;belongs_to&lt;/code&gt; 의 이러한 관계의 역수 연관.</target>
        </trans-unit>
        <trans-unit id="86c1b1f7637bbf5a9bfd940ec141a7bd2ef3f1b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:inverse_of&lt;/code&gt; option specifies the name of the &lt;code&gt;has_many&lt;/code&gt; or &lt;code&gt;has_one&lt;/code&gt; association that is the inverse of this association.</source>
          <target state="translated">&lt;code&gt;:inverse_of&lt;/code&gt; 옵션은 이름 지정 &lt;code&gt;has_many&lt;/code&gt; 또는 &lt;code&gt;has_one&lt;/code&gt; 이 관계의 역수 연관.</target>
        </trans-unit>
        <trans-unit id="7c9204754bbd3552c2fce1c9c1c31fba357c0462" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:model&lt;/code&gt; argument of &lt;code&gt;form_with&lt;/code&gt; allows us to bind the form builder object to a model object. This means that the form will be scoped to that model object, and the form's fields will be populated with values from that model object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2858db3bd177b9f0370fcc2ef7920a8257be347a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:on&lt;/code&gt; option lets you specify when the validation should happen. The default behavior for all the built-in validation helpers is to be run on save (both when you're creating a new record and when you're updating it). If you want to change it, you can use &lt;code&gt;on: :create&lt;/code&gt; to run the validation only when a new record is created or &lt;code&gt;on: :update&lt;/code&gt; to run the validation only when a record is updated.</source>
          <target state="translated">&lt;code&gt;:on&lt;/code&gt; 옵션은 검증이 발생해야 할 때 지정할 수 있습니다. 내장 된 모든 유효성 검사 도우미의 기본 동작은 저장시 (새 레코드를 만들 때와 업데이트 할 때) 실행되는 것입니다. 변경하려면 &lt;code&gt;on: :create&lt;/code&gt; 를 사용 하여 새 레코드가 생성 될 때만 유효성 검사를 실행하거나 &lt;code&gt;on: :update&lt;/code&gt; 를 사용하여 레코드가 업데이트 될 때만 유효성 검사를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="848c1a5f8ce665bec81bf2358864856f7db2703e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:on&lt;/code&gt; option specifies when a callback will be fired. If you don't supply the &lt;code&gt;:on&lt;/code&gt; option the callback will fire for every action.</source>
          <target state="translated">&lt;code&gt;:on&lt;/code&gt; 옵션을 지정하는 콜백이 발사 될 때. &lt;code&gt;:on&lt;/code&gt; 옵션을 제공하지 않으면 모든 작업에 대해 콜백이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1cb24f09350b9feaa2734b838de0933ed88c438d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:only&lt;/code&gt; and &lt;code&gt;:except&lt;/code&gt; options can be used to limit the attributes included, and work similar to the &lt;code&gt;attributes&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;:only&lt;/code&gt; 와 &lt;code&gt;:except&lt;/code&gt; 옵션이 포함 된 속성을 제한 할 수 있고, 유사 작업 &lt;code&gt;attributes&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="1f040e498acfaa176f80797566d22af51cb60565" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:param&lt;/code&gt; option overrides the default resource identifier &lt;code&gt;:id&lt;/code&gt; (name of the &lt;a href=&quot;routing#dynamic-segments&quot;&gt;dynamic segment&lt;/a&gt; used to generate the routes). You can access that segment from your controller using &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:param&lt;/code&gt; 옵션은 기본 리소스 식별자를 오버라이드 (override) &lt;code&gt;:id&lt;/code&gt; (의 이름을 &lt;a href=&quot;routing#dynamic-segments&quot;&gt;동적 세그먼트&lt;/a&gt; 경로를 생성하는 데 사용). &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt; 사용하여 컨트롤러에서 해당 세그먼트에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91be0f44a2f6d7abcff0e1ee9634e98883d0d56a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:path&lt;/code&gt;, &lt;code&gt;:as&lt;/code&gt;, &lt;code&gt;:module&lt;/code&gt;, &lt;code&gt;:shallow_path&lt;/code&gt; and &lt;code&gt;:shallow_prefix&lt;/code&gt; options all default to the name of the namespace.</source>
          <target state="translated">&lt;code&gt;:path&lt;/code&gt; , &lt;code&gt;:as&lt;/code&gt; , &lt;code&gt;:module&lt;/code&gt; , &lt;code&gt;:shallow_path&lt;/code&gt; 과 &lt;code&gt;:shallow_prefix&lt;/code&gt; 의 옵션 네임 스페이스의 이름으로 모든 기본.</target>
        </trans-unit>
        <trans-unit id="1cda9cd8b5e64e9d56669135cf4bce2c9023cc41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:path_names&lt;/code&gt; option lets you override the automatically-generated &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; segments in paths:</source>
          <target state="translated">&lt;code&gt;:path_names&lt;/code&gt; 의 옵션은 자동으로 생성 된 재정의 할 &lt;code&gt;new&lt;/code&gt; 및 &lt;code&gt;edit&lt;/code&gt; 경로의 세그먼트를 :</target>
        </trans-unit>
        <trans-unit id="4152ad9053d8410855811afa4d2dd1a03aadb061" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:prefix&lt;/code&gt; option is the key used to retrieve the hash of date components from the &lt;code&gt;params&lt;/code&gt; hash. Here it was set to &lt;code&gt;start_date&lt;/code&gt;, if omitted it will default to &lt;code&gt;date&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; 옵션에서 날짜 구성 요소의 해시 검색하는 데 사용되는 키입니다 &lt;code&gt;params&lt;/code&gt; 해시를. 여기서 &lt;code&gt;start_date&lt;/code&gt; 로 설정되어 있으며 생략하면 기본값이 &lt;code&gt;date&lt;/code&gt; 로 설정 됩니다 .</target>
        </trans-unit>
        <trans-unit id="c9ee026ad460113bb0501877d8801521fc596d2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:shallow_prefix&lt;/code&gt; option adds the specified parameter to the named route helpers:</source>
          <target state="translated">&lt;code&gt;:shallow_prefix&lt;/code&gt; 의 옵션은 지정된 경로 도우미로 지정된 매개 변수를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="8052ed415f969ce656c9c4487ab9b7b1dcb497db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:source&lt;/code&gt; option specifies the source association name for a &lt;code&gt;has_many :through&lt;/code&gt; association. You only need to use this option if the name of the source association cannot be automatically inferred from the association name.</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; 옵션은 대한 소스 연결 이름을 지정 &lt;code&gt;has_many :through&lt;/code&gt; 연결. 소스 연관 이름을 연관 이름에서 자동으로 추론 할 수없는 경우에만이 옵션을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="81e187b37149ac27035f9755fa4af6c96d9b2e3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:source&lt;/code&gt; option specifies the source association name for a &lt;code&gt;has_one :through&lt;/code&gt; association.</source>
          <target state="translated">&lt;code&gt;:source&lt;/code&gt; 옵션은 대한 소스 연결 이름을 지정 &lt;code&gt;has_one :through&lt;/code&gt; 연결.</target>
        </trans-unit>
        <trans-unit id="8542647b437fdb753ab220a4ecf2d0b655ab2b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:source_type&lt;/code&gt; option specifies the source association type for a &lt;code&gt;has_many :through&lt;/code&gt; association that proceeds through a polymorphic association.</source>
          <target state="translated">&lt;code&gt;:source_type&lt;/code&gt; 옵션을위한 소스 연결 유형을 지정 &lt;code&gt;has_many :through&lt;/code&gt; 연결하는 다형성 연관을 통해 진행한다.</target>
        </trans-unit>
        <trans-unit id="5efa326f329c0932358427b872da8e3b7c0957ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:source_type&lt;/code&gt; option specifies the source association type for a &lt;code&gt;has_one :through&lt;/code&gt; association that proceeds through a polymorphic association.</source>
          <target state="translated">&lt;code&gt;:source_type&lt;/code&gt; 옵션을위한 소스 연결 유형을 지정 &lt;code&gt;has_one :through&lt;/code&gt; 연결하는 다형성 연관을 통해 진행한다.</target>
        </trans-unit>
        <trans-unit id="6f299f9a212488b3cde726fc3ba2f5b7f8d04c7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:through&lt;/code&gt; option specifies a join model through which to perform the query. &lt;code&gt;has_many :through&lt;/code&gt; associations provide a way to implement many-to-many relationships, as discussed &lt;a href=&quot;#the-has-many-through-association&quot;&gt;earlier in this guide&lt;/a&gt;.</source>
          <target state="translated">는 &lt;code&gt;:through&lt;/code&gt; 옵션을 지정하는 쿼리를 수행하기를 통해 모델을 가입 할 수 있습니다. &lt;code&gt;has_many :through&lt;/code&gt; 연관 &lt;a href=&quot;#the-has-many-through-association&quot;&gt;은이 안내서의 앞부분에서&lt;/a&gt; 설명한대로 다 대다 관계를 구현하는 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2e9557156abaea6c7fbe15e0c4c7758aa427c47c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:through&lt;/code&gt; option specifies a join model through which to perform the query. &lt;code&gt;has_one :through&lt;/code&gt; associations were discussed in detail &lt;a href=&quot;#the-has-one-through-association&quot;&gt;earlier in this guide&lt;/a&gt;.</source>
          <target state="translated">는 &lt;code&gt;:through&lt;/code&gt; 옵션을 지정하는 쿼리를 수행하기를 통해 모델을 가입 할 수 있습니다. &lt;code&gt;has_one :through&lt;/code&gt; 연관은 &lt;a href=&quot;#the-has-one-through-association&quot;&gt;이 안내서의 앞부분에서&lt;/a&gt; 자세히 설명했습니다 .</target>
        </trans-unit>
        <trans-unit id="0377d88c2d0c583cca57f0d48f4694242d3931aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:value_method&lt;/code&gt; and &lt;code&gt;:text_method&lt;/code&gt; parameters are methods to be called on each member of &lt;code&gt;collection&lt;/code&gt;. The return values are used as the &lt;code&gt;value&lt;/code&gt; attribute and contents of each &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tag, respectively. They can also be any object that responds to &lt;code&gt;call&lt;/code&gt;, such as a &lt;code&gt;proc&lt;/code&gt;, that will be called for each member of the &lt;code&gt;collection&lt;/code&gt; to retrieve the value/text.</source>
          <target state="translated">&lt;code&gt;:value_method&lt;/code&gt; 과 &lt;code&gt;:text_method&lt;/code&gt; 파라미터있는 방법은 각각의 부재에서 호출되는 &lt;code&gt;collection&lt;/code&gt; . 반환 값은 각각 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 태그 의 &lt;code&gt;value&lt;/code&gt; 속성과 내용으로 사용됩니다 . 또한 &lt;code&gt;collection&lt;/code&gt; 의 각 멤버가 값 / 텍스트를 검색하기 위해 호출 할 &lt;code&gt;proc&lt;/code&gt; 와 같은 &lt;code&gt;call&lt;/code&gt; 에 응답하는 모든 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e8e671f57a429e4781c7a29cf97fa964cf7a4356" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:value_method&lt;/code&gt; and &lt;code&gt;:text_method&lt;/code&gt; parameters are methods to be called on each member of &lt;code&gt;collection&lt;/code&gt;. The return values are used as the &lt;code&gt;value&lt;/code&gt; attribute and contents of each check box tag, respectively. They can also be any object that responds to &lt;code&gt;call&lt;/code&gt;, such as a &lt;code&gt;proc&lt;/code&gt;, that will be called for each member of the &lt;code&gt;collection&lt;/code&gt; to retrieve the value/text.</source>
          <target state="translated">&lt;code&gt;:value_method&lt;/code&gt; 과 &lt;code&gt;:text_method&lt;/code&gt; 파라미터있는 방법은 각각의 부재에서 호출되는 &lt;code&gt;collection&lt;/code&gt; . 반환 값은 각 확인란 태그 의 &lt;code&gt;value&lt;/code&gt; 특성과 내용으로 각각 사용됩니다 . 또한 &lt;code&gt;collection&lt;/code&gt; 의 각 멤버가 값 / 텍스트를 검색하기 위해 호출 할 &lt;code&gt;proc&lt;/code&gt; 와 같은 &lt;code&gt;call&lt;/code&gt; 에 응답하는 모든 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82db8871070d23b557651bd9b85f7c2e1b95fb35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:value_method&lt;/code&gt; and &lt;code&gt;:text_method&lt;/code&gt; parameters are methods to be called on each member of &lt;code&gt;collection&lt;/code&gt;. The return values are used as the &lt;code&gt;value&lt;/code&gt; attribute and contents of each radio button tag, respectively. They can also be any object that responds to &lt;code&gt;call&lt;/code&gt;, such as a &lt;code&gt;proc&lt;/code&gt;, that will be called for each member of the &lt;code&gt;collection&lt;/code&gt; to retrieve the value/text.</source>
          <target state="translated">&lt;code&gt;:value_method&lt;/code&gt; 과 &lt;code&gt;:text_method&lt;/code&gt; 파라미터있는 방법은 각각의 부재에서 호출되는 &lt;code&gt;collection&lt;/code&gt; . 반환 값은 각각의 라디오 버튼 태그 의 &lt;code&gt;value&lt;/code&gt; 속성과 내용으로 사용됩니다 . 또한 &lt;code&gt;collection&lt;/code&gt; 의 각 멤버가 값 / 텍스트를 검색하기 위해 호출 할 &lt;code&gt;proc&lt;/code&gt; 와 같은 &lt;code&gt;call&lt;/code&gt; 에 응답하는 모든 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1288e57d419dd6039e2c3a0099f9798303225628" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@article&lt;/code&gt; object is available to any partials rendered in the view because we defined it as an instance variable.</source>
          <target state="translated">&lt;code&gt;@article&lt;/code&gt; 의 목적은 우리가 인스턴스 변수로 정의되므로 뷰 렌더링되는 파셜 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="864b90d45eec455a2ff00ac9d80d74d285c013cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;API&lt;/code&gt; has the same methods as &lt;a href=&quot;../../activerecord&quot;&gt;&lt;code&gt;ActiveRecord&lt;/code&gt;&lt;/a&gt;, but each method returns a string that matches the ORM &lt;code&gt;API&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a9686bfae327dbe1333af874d0f48d9e0e68c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;APP_PATH&lt;/code&gt; constant will be used later in &lt;code&gt;rails/commands&lt;/code&gt;. The &lt;code&gt;config/boot&lt;/code&gt; file referenced here is the &lt;code&gt;config/boot.rb&lt;/code&gt; file in our application which is responsible for loading Bundler and setting it up.</source>
          <target state="translated">&lt;code&gt;APP_PATH&lt;/code&gt; 의 상수에서 나중에 사용될 &lt;code&gt;rails/commands&lt;/code&gt; . 여기에서 참조 된 &lt;code&gt;config/boot&lt;/code&gt; 파일은 Bundler를로드하고 설정하는 응용 프로그램 의 &lt;code&gt;config/boot.rb&lt;/code&gt; 파일입니다.</target>
        </trans-unit>
        <trans-unit id="0abd6a2fc15c8113379e5b9593c34c6022f95cbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Accept-Language&lt;/code&gt; HTTP header indicates the preferred language for request's response. Browsers &lt;a href=&quot;http://www.w3.org/International/questions/qa-lang-priorities&quot;&gt;set this header value based on the user's language preference settings&lt;/a&gt;, making it a good first choice when inferring a locale.</source>
          <target state="translated">&lt;code&gt;Accept-Language&lt;/code&gt; HTTP 헤더는 요청의 응답에 대한 기본 언어를 나타냅니다. 브라우저 &lt;a href=&quot;http://www.w3.org/International/questions/qa-lang-priorities&quot;&gt;는 사용자의 언어 환경 설정에&lt;/a&gt; 따라이 헤더 값을 설정 하므로 로케일을 유추 할 때 가장 먼저 선택하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5b0f3c166ef7f45a91e1254dfa71348a0bf9e846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionCable.startDebugging()&lt;/code&gt; and &lt;code&gt;ActionCable.stopDebugging()&lt;/code&gt; methods have been removed and replaced with the property &lt;code&gt;ActionCable.logger.enabled&lt;/code&gt;. If you are using these methods you will need to make these changes:</source>
          <target state="translated">&lt;code&gt;ActionCable.startDebugging()&lt;/code&gt; 및 &lt;code&gt;ActionCable.stopDebugging()&lt;/code&gt; 메소드는 제거되고 재산권 치환 된 &lt;code&gt;ActionCable.logger.enabled&lt;/code&gt; . 이러한 방법을 사용하는 경우 다음과 같이 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4cb0740f950fd2e528eb993c8ad9e51225ee8aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionDispatch::Request&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8617a6a529ef1d67e05d36ce95b4f099f7b3846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionMailer::Base.deliveries&lt;/code&gt; array is only reset automatically in &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; and &lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt; tests. If you want to have a clean slate outside these test cases, you can reset it manually with: &lt;code&gt;ActionMailer::Base.deliveries.clear&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ActionMailer::Base.deliveries&lt;/code&gt; 배열은 자동 리셋 &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; 및 &lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt; 테스트. 이러한 테스트 사례 이외의 깨끗한 슬레이트를 원할 경우 &lt;code&gt;ActionMailer::Base.deliveries.clear&lt;/code&gt; 하여 수동으로 재설정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dec93f2fc310490b42484ea22c3c9b7ee82d2c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; class is a wrapper around a delegate that will call your method to generate the mail. If you want direct access to the delegator, or &lt;code&gt;Mail::Message&lt;/code&gt;, you can call the &lt;code&gt;message&lt;/code&gt; method on the &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 클래스는 메일을 생성하기 위해 메소드를 호출 대리자의 래퍼입니다. 위임자 또는 &lt;code&gt;Mail::Message&lt;/code&gt; 직접 액세스하려는 경우 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 객체 에서 &lt;code&gt;message&lt;/code&gt; 메소드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="724df8a46bcc5abcdb75a18b25034ed59946263f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; class is used by &lt;a href=&quot;base&quot;&gt;&lt;code&gt;ActionMailer::Base&lt;/code&gt;&lt;/a&gt; when creating a new mailer. &lt;code&gt;MessageDelivery&lt;/code&gt; is a wrapper (&lt;code&gt;Delegator&lt;/code&gt; subclass) around a lazy created &lt;code&gt;Mail::Message&lt;/code&gt;. You can get direct access to the &lt;code&gt;Mail::Message&lt;/code&gt;, deliver the email or schedule the email to be sent through Active Job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4331b6721a13fcfe7770e1cceb07998d04ec2ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; class is used by &lt;a href=&quot;base&quot;&gt;ActionMailer::Base&lt;/a&gt; when creating a new mailer. &lt;code&gt;MessageDelivery&lt;/code&gt; is a wrapper (&lt;code&gt;Delegator&lt;/code&gt; subclass) around a lazy created &lt;code&gt;Mail::Message&lt;/code&gt;. You can get direct access to the &lt;code&gt;Mail::Message&lt;/code&gt;, deliver the email or schedule the email to be sent through Active Job.</source>
          <target state="translated">&lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 클래스에 의해 사용되는 &lt;a href=&quot;base&quot;&gt;ActionMailer :: 자료&lt;/a&gt; 새로운 메일러를 만들 때. &lt;code&gt;MessageDelivery&lt;/code&gt; 는 지연 생성 된 &lt;code&gt;Mail::Message&lt;/code&gt; 주위 의 랩퍼 ( &lt;code&gt;Delegator&lt;/code&gt; 서브 클래스) 입니다. &lt;code&gt;Mail::Message&lt;/code&gt; 직접 액세스 하거나 이메일을 전달하거나 활성 작업을 통해 이메일을 발송하도록 스케줄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f8b065b132ca0228bb9b12b89407ad6edcbcb87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActiveModel::AttributeMethods&lt;/code&gt; module can add custom prefixes and suffixes on methods of a class. It is used by defining the prefixes and suffixes and which methods on the object will use them.</source>
          <target state="translated">&lt;code&gt;ActiveModel::AttributeMethods&lt;/code&gt; 모듈은 클래스의 메서드에서 사용자 정의 접두사와 접미사를 추가 할 수 있습니다. 접두사와 접미사를 정의하고 개체의 어떤 메서드에서 접두사와 접미사를 사용할지 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1a13a9b64a8e5e0132933cff970f2c7b11d046be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActiveModel::Validations&lt;/code&gt; module adds the ability to validate objects like in Active Record.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Validations&lt;/code&gt; 모듈은 액티브 레코드처럼, 검증 객체에 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="90cf0fe7f5b116b1f1475bc23b99131b756f6ffc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Application&lt;/code&gt; class adds a couple more paths to this set. And as in your &lt;code&gt;Application&lt;/code&gt;, all folders under &lt;code&gt;app&lt;/code&gt; are automatically added to the load path. If you have an &lt;code&gt;app/services&lt;/code&gt; folder for example, it will be added by default.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 클래스는이 세트에 몇 이상의 경로를 추가합니다. 그리고 &lt;code&gt;Application&lt;/code&gt; 에서처럼 &lt;code&gt;app&lt;/code&gt; 아래의 모든 폴더 가 자동으로로드 경로에 추가됩니다. 당신이있는 경우 &lt;code&gt;app/services&lt;/code&gt; 예를 들어 폴더는 기본적으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="995282b43e33743ec793eb6540e1f2c4e4c0612a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ApplicationController&lt;/code&gt; class inside an engine is named just like a Rails application in order to make it easier for you to convert your applications into engines.</source>
          <target state="translated">엔진 내부 의 &lt;code&gt;ApplicationController&lt;/code&gt; 클래스는 애플리케이션을 엔진으로 쉽게 변환 할 수 있도록 Rails 애플리케이션과 같이 이름이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="dcc72d2ebe727fca6de8bcf5a46106ef5e2bf0a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArticleTest&lt;/code&gt; class defines a &lt;em&gt;test case&lt;/em&gt; because it inherits from &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;. &lt;code&gt;ArticleTest&lt;/code&gt; thus has all the methods available from &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;. Later in this guide, we'll see some of the methods it gives us.</source>
          <target state="translated">&lt;code&gt;ArticleTest&lt;/code&gt; 의 클래스는 정의 &lt;em&gt;테스트 케이스&lt;/em&gt; 가 상속 때문에 &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; . 따라서 &lt;code&gt;ArticleTest&lt;/code&gt; 에는 &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; 에서 사용 가능한 모든 메소드가 있습니다 . 이 가이드의 뒷부분에서 우리가 제공하는 방법 중 일부를 보게됩니다.</target>
        </trans-unit>
        <trans-unit id="6fe455c29cc86d41c9fc4aeddbc07e87e2893468" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArticlesController&lt;/code&gt; class inherits from &lt;code&gt;Blorgh::ApplicationController&lt;/code&gt;, not the application's &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ArticlesController&lt;/code&gt; 의 에서 클래스 상속 &lt;code&gt;Blorgh::ApplicationController&lt;/code&gt; 이 아닌 응용 프로그램의 &lt;code&gt;ApplicationController&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52e3b46c39c89d87670d20296e3c925061f35a9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BankController&lt;/code&gt; uses the &amp;ldquo;bank&amp;rdquo; layout.</source>
          <target state="translated">&lt;code&gt;BankController&lt;/code&gt; 은 은 &quot;은행&quot;레이아웃을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="70e5726fee6f341f37fbb1aa3bd3b3474106f916" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Blorgh::Article&lt;/code&gt; model should then have some code to convert the &lt;code&gt;author_name&lt;/code&gt; field into an actual &lt;code&gt;User&lt;/code&gt; object and associate it as that article's &lt;code&gt;author&lt;/code&gt; before the article is saved. It will also need to have an &lt;code&gt;attr_accessor&lt;/code&gt; set up for this field, so that the setter and getter methods are defined for it.</source>
          <target state="translated">그런 다음 &lt;code&gt;Blorgh::Article&lt;/code&gt; 모델에 &lt;code&gt;author_name&lt;/code&gt; 필드를 실제 &lt;code&gt;User&lt;/code&gt; 객체 로 변환 하고 기사를 저장하기 전에 해당 기사의 &lt;code&gt;author&lt;/code&gt; 로 연결하는 코드가 있어야합니다 . 또한 setter 및 getter 메소드가 정의되도록이 필드에 대해 &lt;code&gt;attr_accessor&lt;/code&gt; 를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="9215b60a92a952bfbcd421ada3a8af006baecfeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Concerns::&lt;/code&gt; namespace worked with the classic autoloader as a side-effect of the implementation, but it was not really an intended behavior. An application using &lt;code&gt;Concerns::&lt;/code&gt; needs to rename those classes and modules to be able to run in &lt;code&gt;zeitwerk&lt;/code&gt; mode.</source>
          <target state="translated">&lt;code&gt;Concerns::&lt;/code&gt; 네임 스페이스는 구현의 부작용으로 고전 자동 로더와 함께 일하지만, 정말 의도 된 행동이 아니었다. &lt;code&gt;Concerns::&lt;/code&gt; 사용하는 응용 프로그램 은 &lt;code&gt;zeitwerk&lt;/code&gt; 모드 에서 실행할 수 있도록 해당 클래스와 모듈의 이름을 바꿔야 합니다.</target>
        </trans-unit>
        <trans-unit id="4728f29a44252f3c0763faa754540d9c7a85845e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Configuration&lt;/code&gt; instance used to configure the &lt;code&gt;Rails&lt;/code&gt; environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8232b3112a03b35d7d55cec93247fa9acf5289d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CookieStore&lt;/code&gt; uses the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-encrypted&quot;&gt;encrypted&lt;/a&gt; cookie jar to provide a secure, encrypted location to store session data. Cookie-based sessions thus provide both integrity as well as confidentiality to their contents. The encryption key, as well as the verification key used for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-signed&quot;&gt;signed&lt;/a&gt; cookies, is derived from the &lt;code&gt;secret_key_base&lt;/code&gt; configuration value.</source>
          <target state="translated">&lt;code&gt;CookieStore&lt;/code&gt; 용도 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-encrypted&quot;&gt;암호화&lt;/a&gt; 저장 세션 데이터에 대한 보안, 암호화 된 위치를 제공하기 위해 쿠키 항아리. 따라서 쿠키 기반 세션은 내용에 대한 무결성과 기밀성을 모두 제공합니다. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Cookies/ChainedCookieJars.html#method-i-signed&quot;&gt;서명 된&lt;/a&gt; 쿠키에 사용 된 확인 키뿐만 아니라 암호화 키 는 &lt;code&gt;secret_key_base&lt;/code&gt; 구성 값 에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="a567707ba3618c845930fb33cfc7fef61732f0bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CurrencyController&lt;/code&gt; inherits the layout from BankController.</source>
          <target state="translated">&lt;code&gt;CurrencyController&lt;/code&gt; 는 BankController에서 레이아웃을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="9e62f90f79df75fbb185ca8d4adf379735c32c66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dungeon&lt;/code&gt; instances &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;t.dungeon&lt;/code&gt; in the above example refer to the same in-memory instance since the association matches the name of the class. The result would be the same if we added &lt;code&gt;:inverse_of&lt;/code&gt; to our model definitions:</source>
          <target state="translated">&lt;code&gt;Dungeon&lt;/code&gt; 인스턴스 &lt;code&gt;d&lt;/code&gt; 및 &lt;code&gt;t.dungeon&lt;/code&gt; 연관 클래스의 이름과 일치 때문에 상기 예에서 동일한 메모리 인스턴스를 참조. 모델 정의에 : &lt;code&gt;:inverse_of&lt;/code&gt; 를 추가하면 결과는 같습니다.</target>
        </trans-unit>
        <trans-unit id="512bdbc16f725c80265087dcc852e9088fdb8508" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EmployeeController&lt;/code&gt; uses the &amp;ldquo;employee&amp;rdquo; layout, because it set the layout to &lt;code&gt;nil&lt;/code&gt;, resetting the parent configuration.</source>
          <target state="translated">&lt;code&gt;EmployeeController&lt;/code&gt; 그것의 레이아웃 설정 때문에 &quot;직원&quot;레이아웃을 사용 &lt;code&gt;nil&lt;/code&gt; 부모 구성을 재설정.</target>
        </trans-unit>
        <trans-unit id="30d309ca5055b500c4b666677e00c3e8db0a2c02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExchangeController&lt;/code&gt; uses the &amp;ldquo;exchange&amp;rdquo; layout.</source>
          <target state="translated">&lt;code&gt;ExchangeController&lt;/code&gt; 은 은 &quot;교환&quot;레이아웃을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="446e5d3ada5afccce0c4d2329738bdb9df2d23ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FormBuilder&lt;/code&gt; object can be thought of as serving as a proxy for the methods in the &lt;code&gt;FormHelper&lt;/code&gt; module. This class, however, allows you to call methods with the model object you are building the form for.</source>
          <target state="translated">&lt;code&gt;FormBuilder&lt;/code&gt; 의 목적은 방법에 대한 프록시로서 기능하는 것으로 생각 될 수 &lt;code&gt;FormHelper&lt;/code&gt; 용 모듈. 그러나이 클래스를 사용하면 양식을 작성하려는 모델 객체로 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13ef95dd28af1dbc27ca71c6b0dc671ec1901510" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;I18n.locale&lt;/code&gt; defaults to &lt;code&gt;I18n.default_locale&lt;/code&gt; which defaults to :&lt;code&gt;en&lt;/code&gt;. The default locale can be set like this:</source>
          <target state="translated">&lt;code&gt;I18n.locale&lt;/code&gt; 의 기본값 &lt;code&gt;I18n.default_locale&lt;/code&gt; 에있는 기본값 : &lt;code&gt;en&lt;/code&gt; . 기본 로케일은 다음과 같이 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddb92b53d2fbde8c6af3b5d7156374887195ac9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InboundEmail&lt;/code&gt; is an Active Record that keeps a reference to the raw email stored in Active Storage and tracks the status of processing. By default, incoming emails will go through the following lifecycle:</source>
          <target state="translated">&lt;code&gt;InboundEmail&lt;/code&gt; 는 활성 저장소에 저장된 원시 전자 메일에 대한 참조를 유지하고 처리 상태를 추적하는 액티브 레코드이다. 기본적으로 수신 이메일은 다음 수명주기를 거칩니다.</target>
        </trans-unit>
        <trans-unit id="d28b616a355cfd7302f884aa71c76c6db8e1618b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;InformationController&lt;/code&gt; uses the &amp;ldquo;information&amp;rdquo; layout, explicitly set.</source>
          <target state="translated">&lt;code&gt;InformationController&lt;/code&gt; 은 은 &quot;정보&quot;레이아웃, 명시 적으로 설정을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3f5174d48a308eee6290d167708394c1dd616f56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Message-ID&lt;/code&gt; as specified by rfc822 is supposed to be a unique identifier for that individual email. That makes it an ideal tracking token for debugging and forensics, just like &lt;code&gt;X-Request-Id&lt;/code&gt; does for web request.</source>
          <target state="translated">&lt;code&gt;Message-ID&lt;/code&gt; RFC822에 의해 지정된는 개별 이메일에 대한 고유 식별자 있어야한다. 따라서 &lt;code&gt;X-Request-Id&lt;/code&gt; 가 웹 요청에하는 것처럼 디버깅 및 법의학에 이상적인 추적 토큰이됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b07a952fe0f2cc702d13f12860a2ced66050694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PUT&lt;/code&gt; request method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcd9fe2dd65ed179d6f83c92caaf5c04f3f9a2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path&lt;/code&gt; object is simply an enumerable and allows you to easily add extra paths:</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; 객체는 열거 간단하고 쉽게 추가 경로를 추가 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bdb9381a7c99a1ca93b6db726e0fe6f6e344dcfc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rack::Builder.parse_file&lt;/code&gt; method here takes the content from this &lt;code&gt;config.ru&lt;/code&gt; file and parses it using this code:</source>
          <target state="translated">&lt;code&gt;Rack::Builder.parse_file&lt;/code&gt; 여기 방법이에서 콘텐츠 소요 &lt;code&gt;config.ru&lt;/code&gt; 의 파일이 코드를 사용하여 구문 분석을 :</target>
        </trans-unit>
        <trans-unit id="780ec8946d6d975ef4d543524480fec8a1302f16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rails.application.routes.draw do ... end&lt;/code&gt; block that wraps your route definitions is required to establish the scope for the router DSL and must not be deleted.</source>
          <target state="translated">&lt;code&gt;Rails.application.routes.draw do ... end&lt;/code&gt; 라우터 DSL의 범위를 설정하는 데 필요한 경로 정의를 감싸고 삭제하지 않아야 블록.</target>
        </trans-unit>
        <trans-unit id="12a63717254fae15846708f3d8a04f5bd94ba915" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rails.root/tmp&lt;/code&gt; directory is, like the *nix /tmp directory, the holding place for temporary files like process id files and cached actions.</source>
          <target state="translated">&lt;code&gt;Rails.root/tmp&lt;/code&gt; 디렉토리, 인 * nix에서 스크립트 / tmp를 디렉토리, 프로세스 ID 파일과 캐시 행동 같은 임시 파일에 대한 유지 곳있다.</target>
        </trans-unit>
        <trans-unit id="34fb54473f3a1dabd314dd2222f27ff56a751712" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rails::Application&lt;/code&gt; class, as defined in &lt;code&gt;railties/lib/rails/application.rb&lt;/code&gt; defines &lt;code&gt;bootstrap&lt;/code&gt;, &lt;code&gt;railtie&lt;/code&gt;, and &lt;code&gt;finisher&lt;/code&gt; initializers. The &lt;code&gt;bootstrap&lt;/code&gt; initializers prepare the application (like initializing the logger) while the &lt;code&gt;finisher&lt;/code&gt; initializers (like building the middleware stack) are run last. The &lt;code&gt;railtie&lt;/code&gt; initializers are the initializers which have been defined on the &lt;code&gt;Rails::Application&lt;/code&gt; itself and are run between the &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;finishers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rails::Application&lt;/code&gt; 클래스에 정의 된 &lt;code&gt;railties/lib/rails/application.rb&lt;/code&gt; 을 정의 &lt;code&gt;bootstrap&lt;/code&gt; , &lt;code&gt;railtie&lt;/code&gt; 및 &lt;code&gt;finisher&lt;/code&gt; 초기화합니다. &lt;code&gt;bootstrap&lt;/code&gt; 그동안 (로거를 초기화 같은) 초기화 응용 프로그램을 준비 &lt;code&gt;finisher&lt;/code&gt; (미들웨어 스택을 구축하는 등의) 초기화가 마지막으로 실행됩니다. &lt;code&gt;railtie&lt;/code&gt; 의 초기화는에 정의 된 이니셜이다 &lt;code&gt;Rails::Application&lt;/code&gt; 자체와 사이에 실행되는 &lt;code&gt;bootstrap&lt;/code&gt; 및 &lt;code&gt;finishers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63d1ad47d1e7f4302683af470619daeb2273dd73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rails::Server&lt;/code&gt; class is defined in this file by inheriting from &lt;code&gt;Rack::Server&lt;/code&gt;. When &lt;code&gt;Rails::Server.new&lt;/code&gt; is called, this calls the &lt;code&gt;initialize&lt;/code&gt; method in &lt;code&gt;rails/commands/server/server_command.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Rails::Server&lt;/code&gt; 클래스에서 상속하여이 파일에 정의 된 &lt;code&gt;Rack::Server&lt;/code&gt; . 때 &lt;code&gt;Rails::Server.new&lt;/code&gt; 라고하며, 이것은 호출 &lt;code&gt;initialize&lt;/code&gt; 의 방법 &lt;code&gt;rails/commands/server/server_command.rb&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="05b5c9dcc941205e4fc8484e5cb7dc0727bbc5cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rails::Server&lt;/code&gt; inherits from &lt;code&gt;Rack::Server&lt;/code&gt; and calls the &lt;code&gt;Rack::Server#start&lt;/code&gt; method this way:</source>
          <target state="translated">&lt;code&gt;Rails::Server&lt;/code&gt; 에서 상속 &lt;code&gt;Rack::Server&lt;/code&gt; 와 호출 &lt;code&gt;Rack::Server#start&lt;/code&gt; 방법이 방법 :</target>
        </trans-unit>
        <trans-unit id="722775e1da416f6ba7bae33dfd7d5f26fc52669d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rails&lt;/code&gt; environment;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c5aca4e1de8575156496d7b15c4d47b9fe9363" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQLite3&lt;/code&gt; adapter works with the sqlite3-ruby drivers (available as gem from &lt;a href=&quot;https://rubygems.org/gems/sqlite3&quot;&gt;rubygems.org/gems/sqlite3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79c182480194b2438e94677109762e762e63025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ScreenshotHelper&lt;/code&gt; is a helper designed to capture screenshots of your tests. This can be helpful for viewing the browser at the point a test failed, or to view screenshots later for debugging.</source>
          <target state="translated">&lt;code&gt;ScreenshotHelper&lt;/code&gt; 은 당신의 검사 결과의 캡처 스크린 샷에 설계 도우미입니다. 테스트에 실패한 시점에서 브라우저를 보거나 나중에 디버깅을 위해 스크린 샷을 보는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="e80d8531c4648515a82be3858eccc3cd90ba5c71" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String&lt;/code&gt; MIME type of the request.</source>
          <target state="translated">요청 의 &lt;code&gt;String&lt;/code&gt; MIME 유형입니다.</target>
        </trans-unit>
        <trans-unit id="8eb94e6a4f6516c608728ffc088d7f02808f5c96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TellerController&lt;/code&gt; also uses the &amp;ldquo;information&amp;rdquo; layout, because the parent explicitly set it.</source>
          <target state="translated">&lt;code&gt;TellerController&lt;/code&gt; 는 부모가 명시 적으로 설정하기 때문에 또한 &quot;정보&quot;레이아웃을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ed9c022121591947b6319500340680df7d8c5afc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TillController&lt;/code&gt; does not use a layout at all.</source>
          <target state="translated">&lt;code&gt;TillController&lt;/code&gt; 는 전혀 레이아웃을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f42154dc918af702dc2de6a35668a6e9564594e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VaultController&lt;/code&gt; chooses a layout dynamically by calling the &lt;code&gt;access_level_layout&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;VaultController&lt;/code&gt; 는 발신하여 레이아웃을 동적으로 선택 &lt;code&gt;access_level_layout&lt;/code&gt; 의 방법.</target>
        </trans-unit>
        <trans-unit id="f5b74b8d88911be8233b7161cba1081373bf25d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebNotificationsChannel.broadcast_to&lt;/code&gt; call places a message in the current subscription adapter's pubsub queue under a separate broadcasting name for each user. For a user with an ID of 1, the broadcasting name would be &lt;code&gt;web_notifications:1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebNotificationsChannel.broadcast_to&lt;/code&gt; 의 호출은 각 사용자에 대해 별도의 방송 이름으로 현재 가입 어댑터의 pubsub 큐에 메시지를 배치합니다. ID가 1 인 사용자의 경우 브로드 캐스트 이름은 &lt;code&gt;web_notifications:1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac5d2dd4da0f88c0bb967d3ae082f07cf6c89da2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WebNotificationsChannel.broadcast_to&lt;/code&gt; call places a message in the current subscription adapter's pubsub queue under a separate broadcasting name for each user. The default pubsub queue for Action Cable is &lt;code&gt;redis&lt;/code&gt; in production and &lt;code&gt;async&lt;/code&gt; in development and test environments. For a user with an ID of 1, the broadcasting name would be &lt;code&gt;web_notifications:1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebNotificationsChannel.broadcast_to&lt;/code&gt; 의 호출은 각 사용자에 대해 별도의 방송 이름으로 현재 가입 어댑터의 pubsub 큐에 메시지를 배치합니다. Action Cable의 기본 pubsub 큐 는 프로덕션에서 &lt;code&gt;redis&lt;/code&gt; 이고 개발 및 테스트 환경에서 &lt;code&gt;async&lt;/code&gt; 입니다. ID가 1 인 사용자의 경우 브로드 캐스트 이름은 &lt;code&gt;web_notifications:1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="489de8bc423b62f305c4ced795938cfa23d0fa57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; method returns a valid Rack application for the Rails router to dispatch to.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 방법은 파견에에 라우터 레일에 대한 올바른 랙 응용 프로그램을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="37ee48f4b4b99e6d99333401d2bbcf1a69bfa300" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;activerecord-deprecated_finders&lt;/code&gt; gem is no longer supported in Rails 5.</source>
          <target state="translated">&lt;code&gt;activerecord-deprecated_finders&lt;/code&gt; 보석은 더 이상 레일 (5)에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a68821c94d0ef2eb923072ed5726f47809e49a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add&lt;/code&gt; method accepts the following options as arguments: &lt;a href=&quot;root#method-i-eager_load&quot;&gt;#eager_load&lt;/a&gt;, autoload, &lt;a href=&quot;root#method-i-autoload_once&quot;&gt;#autoload_once&lt;/a&gt;, and glob.</source>
          <target state="translated">&lt;code&gt;add&lt;/code&gt; : 방법은 인수로 다음과 같은 옵션을 받아 &lt;a href=&quot;root#method-i-eager_load&quot;&gt;#eager_load&lt;/a&gt; , 자동로드, &lt;a href=&quot;root#method-i-autoload_once&quot;&gt;#autoload_once&lt;/a&gt; 및 글로브입니다.</target>
        </trans-unit>
        <trans-unit id="f09e7f563953c981a3c0a0e66f8a7a9778941c28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add&lt;/code&gt; method accepts the following options as arguments: &lt;a href=&quot;root#method-i-eager_load&quot;&gt;&lt;code&gt;eager_load&lt;/code&gt;&lt;/a&gt;, autoload, &lt;a href=&quot;root#method-i-autoload_once&quot;&gt;&lt;code&gt;autoload_once&lt;/code&gt;&lt;/a&gt;, and glob.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6df5698ac314752a07ae5afb85ff8a7e829e920" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add&lt;/code&gt; method lets you add an error message related to a particular attribute. It takes as arguments the attribute and the error message.</source>
          <target state="translated">&lt;code&gt;add&lt;/code&gt; 방법은 특정 속성에 관련된 오류 메시지를 추가 할 수 있습니다. 속성 및 오류 메시지를 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f4359fd85422b72835e2eb432161232ec7be96ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after_find&lt;/code&gt; callback will be called whenever Active Record loads a record from the database. &lt;code&gt;after_find&lt;/code&gt; is called before &lt;code&gt;after_initialize&lt;/code&gt; if both are defined.</source>
          <target state="translated">&lt;code&gt;after_find&lt;/code&gt; 콜백은 데이터베이스에서 레코드 때마다 액티브 레코드로드를 호출됩니다. &lt;code&gt;after_find&lt;/code&gt; 는 둘 다 정의 된 경우 &lt;code&gt;after_initialize&lt;/code&gt; 전에 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="c2dcf034a922fdda0fdd2391002757aa1743f26c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after_initialize&lt;/code&gt; and &lt;code&gt;after_find&lt;/code&gt; callbacks have no &lt;code&gt;before_*&lt;/code&gt; counterparts, but they can be registered just like the other Active Record callbacks.</source>
          <target state="translated">&lt;code&gt;after_initialize&lt;/code&gt; 와 &lt;code&gt;after_find&lt;/code&gt; 콜백은 더 없다 &lt;code&gt;before_*&lt;/code&gt; 대응을하지만, 그들은 단지 다른 액티브 레코드 콜백처럼 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="986ba74ea390f9f2a28b3b1a5ce90b135012938f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after_initialize&lt;/code&gt; callback is triggered every time a new object of the class is initialized.</source>
          <target state="translated">&lt;code&gt;after_initialize&lt;/code&gt; 의 콜백 클래스의 새로운 객체가 초기화 될 때마다 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="3466fc342afa60293cb131b7b31e285f10c1afaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after_initialize&lt;/code&gt; callback will be called whenever an Active Record object is instantiated, either by directly using &lt;code&gt;new&lt;/code&gt; or when a record is loaded from the database. It can be useful to avoid the need to directly override your Active Record &lt;code&gt;initialize&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;after_initialize&lt;/code&gt; 액티브 레코드 객체가 인스턴스화 될 때마다 콜백이 직접 사용하여 호출 될 &lt;code&gt;new&lt;/code&gt; 또는 레코드가 데이터베이스에서로드 될 때. Active Record &lt;code&gt;initialize&lt;/code&gt; 메소드 를 직접 대체 할 필요가 없도록하는 것이 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8190ffa40891dbaada92ba09a3c27935c245862f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after_touch&lt;/code&gt; callback will be called whenever an Active Record object is touched.</source>
          <target state="translated">&lt;code&gt;after_touch&lt;/code&gt; 액티브 레코드 객체가 터치 할 때마다 콜백이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3faf7c5697e0c5912622f8172afb8259c89553ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app/views/users/_user.html.erb&lt;/code&gt; partial contains the following:</source>
          <target state="translated">&lt;code&gt;app/views/users/_user.html.erb&lt;/code&gt; 부분은 다음을 포함합니다</target>
        </trans-unit>
        <trans-unit id="daa7967904c796b301f5a144fd59e89ffb1a36bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; method here is defined like so:</source>
          <target state="translated">여기서 &lt;code&gt;app&lt;/code&gt; 메소드는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ad1a8b5ee37aabfb2fe44e022ca83ab9488aa067" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;application_system_test_case.rb&lt;/code&gt; holds the default configuration for your system tests.</source>
          <target state="translated">&lt;code&gt;application_system_test_case.rb&lt;/code&gt; 는 시스템 테스트를위한 기본 구성을 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef7da1c9cab78d0e3ad6571c5ada1b9dae7127f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; argument also accepts a proc which will get passed the actual job's arguments. Your proc needs to return a boolean value determining if the job's arguments matches your expectation. This is useful to check only for a subset of arguments.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 인수는 실제 작업의 인수를 전달 얻을 것이다 발동을 받아들입니다. 귀하의 proc은 직업의 인수가 귀하의 기대치와 일치하는지 여부를 결정하는 부울 값을 반환해야합니다. 이는 인수의 서브 세트 만 점검하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9cee6ead745fefabcca8a3eb89d510783b0bd567" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;articles_path&lt;/code&gt; helper tells Rails to point the form to the URI Pattern associated with the &lt;code&gt;articles&lt;/code&gt; prefix; and the form will (by default) send a &lt;code&gt;POST&lt;/code&gt; request to that route. This is associated with the &lt;code&gt;create&lt;/code&gt; action of the current controller, the &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;articles_path&lt;/code&gt; 의 도우미는과 관련된 URI 패턴의 형태를 가리 키도록 레일을 알려줍니다 &lt;code&gt;articles&lt;/code&gt; 접두사를; 양식은 기본적으로 &lt;code&gt;POST&lt;/code&gt; 요청을 해당 경로로 보냅니다 . 이는 현재 컨트롤러 ( &lt;code&gt;ArticlesController&lt;/code&gt; ) 의 &lt;code&gt;create&lt;/code&gt; 조치 와 연관됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f90d906d34fc152167959be09451a5b3e0dee57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as&lt;/code&gt; option passes an &amp;ldquo;application/json&amp;rdquo; Accept header (thereby setting the request format to JSON unless overridden), sets the content type to &amp;ldquo;application/json&amp;rdquo; and encodes the parameters as JSON.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 옵션은 &quot;응용 프로그램 / JSON을&quot;통과 &quot;응용 프로그램 / JSON&quot;에 콘텐츠 형식을 설정하고 JSON과 같은 매개 변수를 인코딩 (함으로써 오버라이드 (override)하지 않는 한 JSON에 요청 형식을 설정) 헤더에 동의합니다.</target>
        </trans-unit>
        <trans-unit id="978ab81b21128cded8f6402a12991cf27afd7f26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as_json&lt;/code&gt; method, similar to &lt;code&gt;serializable_hash&lt;/code&gt;, provides a Hash representing the model.</source>
          <target state="translated">&lt;code&gt;as_json&lt;/code&gt; 의 유사 방법, &lt;code&gt;serializable_hash&lt;/code&gt; 는 모델을 나타내는 해시를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="16ea7af1e8bda3242e0a4b7e4ea21e654f157a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assert_emails&lt;/code&gt; method is not tied to a particular deliver method and will work with emails delivered with either the &lt;code&gt;deliver_now&lt;/code&gt; or &lt;code&gt;deliver_later&lt;/code&gt; method. If we explicitly want to assert that the email has been enqueued we can use the &lt;code&gt;assert_enqueued_emails&lt;/code&gt; method. More information can be found in the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionMailer/TestHelper.html&quot;&gt;documentation here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;assert_emails&lt;/code&gt; 의 방법은 방법을 제공하고, 하나와 함께 제공 이메일로 작동합니다 특정에 연결되지 않은 &lt;code&gt;deliver_now&lt;/code&gt; 또는 &lt;code&gt;deliver_later&lt;/code&gt; 의 방법. 이메일이 대기열에 추가되었다고 명시 적으로 주장하려는 경우 &lt;code&gt;assert_enqueued_emails&lt;/code&gt; 메소드를 사용할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionMailer/TestHelper.html&quot;&gt;여기 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="168b638dbf32b91b876a243e23d48b9517dbf41f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assert_routing&lt;/code&gt; assertion checks the route both ways: it tests that the path generates the options, and that the options generate the path. Thus, it combines the functions of &lt;code&gt;assert_generates&lt;/code&gt; and &lt;code&gt;assert_recognizes&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;assert_routing&lt;/code&gt; 주장 검사 경로 두 가지 :이 경로 옵션을 생성하는 테스트, 그리고 옵션의 경로를 생성 할 것이다. 따라서 &lt;code&gt;assert_generates&lt;/code&gt; 와 &lt;code&gt;assert_recognizes&lt;/code&gt; 의 기능을 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="ab874f7e30f3c283b9369f9e07f8f9a75b8f7d92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;association&lt;/code&gt; method returns the associated object, if any. If no associated object is found, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;association&lt;/code&gt; (있는 경우) 방법은 관련 개체를 반환합니다. 연결된 객체가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="476e0dbf3b7e0cea0d8386eb35697c5545d28de9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;association=&lt;/code&gt; method assigns an associated object to this object. Behind the scenes, this means extracting the primary key from the associated object and setting this object's foreign key to the same value.</source>
          <target state="translated">&lt;code&gt;association=&lt;/code&gt; 방법 양수인이 오브젝트에 관련된 오브젝트. 장면 뒤에서 이것은 연관된 객체에서 기본 키를 추출하고이 객체의 외래 키를 동일한 값으로 설정하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="87d788d6aa7f5da07bd82517271257b60c5d9a02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;association=&lt;/code&gt; method assigns an associated object to this object. Behind the scenes, this means extracting the primary key from this object and setting the associated object's foreign key to the same value.</source>
          <target state="translated">&lt;code&gt;association=&lt;/code&gt; 방법 양수인이 오브젝트에 관련된 오브젝트. 배후에서, 이것은이 객체에서 기본 키를 추출하고 연결된 객체의 외래 키를 동일한 값으로 설정하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="13980a08f48177fa04e380b7bb2c52201ce94a98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter can be either a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Hashes. These Hashes describe the attributes on the objects that are to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c5843e1da487d3cfc06ae80bc37eb3a0552966" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter can be either a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Hashes. These describe which attributes to be created on the object, or multiple objects when given an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4156503e04aa58ba86fc17c228914c4236e76ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter can be either a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; or an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; of Hashes. These Hashes describe the attributes on the objects that are to be created.</source>
          <target state="translated">는 &lt;code&gt;attributes&lt;/code&gt; 매개 변수가 될 수 있습니다 &lt;a href=&quot;../../hash&quot;&gt;해시&lt;/a&gt; 또는 &lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; 해시의. 이 해시는 생성 될 객체의 속성을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="cda693db66bf994b658cdb64082c47f90d3c9707" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter can be either a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; or an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; of Hashes. These describe which attributes to be created on the object, or multiple objects when given an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; of Hashes.</source>
          <target state="translated">는 &lt;code&gt;attributes&lt;/code&gt; 매개 변수가 될 수 있습니다 &lt;a href=&quot;../../hash&quot;&gt;해시&lt;/a&gt; 또는 &lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; 해시의. 이것들은 객체에 생성 될 속성 또는 해시 &lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; 이 주어질 때 여러 객체를 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="804cc5485eaa7dc8ae65e8520bef0588ebfe90e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter is an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of Hashes. Every &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; determines the attributes for a single row and must have the same keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e8c8afb26a8d0550889ece9847f4da4ed02a6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributes&lt;/code&gt; parameter is an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; of Hashes. Every &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; determines the attributes for a single row and must have the same keys.</source>
          <target state="translated">는 &lt;code&gt;attributes&lt;/code&gt; 매개 변수가있다 &lt;a href=&quot;../../array&quot;&gt;배열&lt;/a&gt; 해시의. 모든 &lt;a href=&quot;../../hash&quot;&gt;해시&lt;/a&gt; 는 단일 행의 속성을 결정하며 동일한 키를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="ef4e53a226622662f666129b309d1689851b494a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;audio_tag&lt;/code&gt; helper builds an HTML 5 &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/audios&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;audio_tag&lt;/code&gt; 의 도우미는 HTML 5 기반으로 &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; 지정된 파일에 태그를. 기본적으로 파일은 &lt;code&gt;public/audios&lt;/code&gt; 에서로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="8fcc7d30359ba20c6b5c0513a057ca3443d5a048" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; block must return the user's password or the ha1 digest hash so the framework can appropriately hash to check the user's credentials. Returning &lt;code&gt;nil&lt;/code&gt; will cause authentication to fail.</source>
          <target state="translated">&lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; 의 블록은 프레임 워크가 적절하게 해시가 사용자의 자격 증명을 확인할 수 있도록 사용자의 암호 또는 HA1 해시 다이제스트 반환해야합니다. &lt;code&gt;nil&lt;/code&gt; 을 반환 하면 인증이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="07b464c19356fc247976ab29163633961fa421f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;authenticate_unsafely&lt;/code&gt; method inserts the parameters directly into the query and is thus susceptible to SQL-injection attacks if the &lt;code&gt;user_name&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; parameters come directly from an HTTP request. The &lt;code&gt;authenticate_safely&lt;/code&gt; and &lt;code&gt;authenticate_safely_simply&lt;/code&gt; both will sanitize the &lt;code&gt;user_name&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; before inserting them in the query, which will ensure that an attacker can't escape the query and fake the login (or worse).</source>
          <target state="translated">&lt;code&gt;authenticate_unsafely&lt;/code&gt; 방법은 직접 쿼리에 매개 변수를 삽입하고있는 경우 SQL 주입 공격에 따라서 취약 &lt;code&gt;user_name&lt;/code&gt; 및 &lt;code&gt;password&lt;/code&gt; 매개 변수는 HTTP 요청에서 직접. 는 &lt;code&gt;authenticate_safely&lt;/code&gt; 및 &lt;code&gt;authenticate_safely_simply&lt;/code&gt; 모두는 살균한다 &lt;code&gt;user_name&lt;/code&gt; 과 &lt;code&gt;password&lt;/code&gt; 공격자가 쿼리 및 가짜 로그인 (또는 악화)를 벗어날 수 있도록 할 것이다 쿼리에를 삽입하기 전에.</target>
        </trans-unit>
        <trans-unit id="b1a6368975d0a9e05935cb9b020d9002161c79c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto_discovery_link_tag&lt;/code&gt; helper builds HTML that most browsers and feed readers can use to detect the presence of RSS, Atom, or JSON feeds. It takes the type of the link (&lt;code&gt;:rss&lt;/code&gt;, &lt;code&gt;:atom&lt;/code&gt;, or &lt;code&gt;:json&lt;/code&gt;), a hash of options that are passed through to url_for, and a hash of options for the tag:</source>
          <target state="translated">&lt;code&gt;auto_discovery_link_tag&lt;/code&gt; 의 도우미는 대부분의 브라우저와 피드 리더는 RSS, 아톰, 또는 JSON 피드의 존재를 감지하는 데 사용할 수있는 HTML을 구축합니다. 링크의 유형 ( &lt;code&gt;:rss&lt;/code&gt; , &lt;code&gt;:atom&lt;/code&gt; 또는 &lt;code&gt;:json&lt;/code&gt; ), url_for로 전달되는 옵션의 해시 및 태그의 옵션의 해시를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="93ef8a18a0958a1d6344ef5ae021376ed58c4816" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongs_to&lt;/code&gt; Association</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 협회</target>
        </trans-unit>
        <trans-unit id="daacc4f15537eab1ef54a042d9ee2b25a00b5957" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongs_to&lt;/code&gt; association creates a one-to-one match with another model. In database terms, this association says that this class contains the foreign key. If the other class contains the foreign key, then you should use &lt;code&gt;has_one&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 의 관계는 다른 모델과 일대일 대응을 만듭니다. 데이터베이스 용어로이 연결은이 클래스에 외래 키가 포함되어 있다고 말합니다. 다른 클래스에 외래 키가 포함되어 있으면 &lt;code&gt;has_one&lt;/code&gt; 을 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="e600885b0c485e521aabc43a3f5904587aa3ab46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongs_to&lt;/code&gt; association supports these options:</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 의 협회는이 옵션을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="460ddbc14c667f81b70bea4902771b5db57d5cc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bin/rails db:migrate&lt;/code&gt; command needs to be run here to ensure that our application has the &lt;code&gt;users&lt;/code&gt; table for future use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901fc09b22b54c5c48df2cb2e7a9aba07ac1c979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bin/rails db:reset&lt;/code&gt; command will drop the database and set it up again. This is functionally equivalent to &lt;code&gt;bin/rails db:drop db:setup&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e043d2f535a5d52c92d30b5c598e04ca5afb301" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bin/rails db:setup&lt;/code&gt; command will create the database, load the schema, and initialize it with the seed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d7923e5d87880c38ed7a569f8cbd2c3e3fc10e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bin/rails generate&lt;/code&gt; command uses templates to create a whole lot of things. Running &lt;code&gt;bin/rails generate&lt;/code&gt; by itself gives a list of available generators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cfefd00c1ac5f3605adbc7e2165fd501a291b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bin/rails server&lt;/code&gt; command launches a web server named Puma which comes bundled with Rails. You'll use this any time you want to access your application through a web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239366ae72fd5c1d9d5e49f33633a6e0e0bce17c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;block&lt;/code&gt; will receive five parameters with information about the event:</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; 이벤트에 대한 정보와 5 개 개의 매개 변수를받을 것이다 :</target>
        </trans-unit>
        <trans-unit id="1a4b6d715b8daf1902eeb4abfab67c675d0e54c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blog&lt;/code&gt; directory has a number of auto-generated files and folders that make up the structure of a Rails application. Most of the work in this tutorial will happen in the &lt;code&gt;app&lt;/code&gt; folder, but here's a basic rundown on the function of each of the files and folders that Rails created by default:</source>
          <target state="translated">&lt;code&gt;blog&lt;/code&gt; 디렉토리는 Rails 애플리케이션의 구조를 만들어 자동으로 생성 된 파일 및 폴더의 번호가 있습니다. 이 튜토리얼의 대부분의 작업은 &lt;code&gt;app&lt;/code&gt; 폴더에서 이루어 지지만, Rails가 기본적으로 생성 한 각 파일과 폴더의 기능에 대한 기본 요약은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="26c79ef706bc4d4aad5340fd0ef25673235f536d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blog&lt;/code&gt; directory will have a number of generated files and folders that make up the structure of a Rails application. Most of the work in this tutorial will happen in the &lt;code&gt;app&lt;/code&gt; folder, but here's a basic rundown on the function of each of the files and folders that Rails creates by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f03bea6398fe6c1ed26c879de514ff9caf65c7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;body&lt;/code&gt; param is required by Sprockets.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; PARAM은 톱니 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3134ea964c8a80a7b2090c68a8df79d719c116f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;box&lt;/code&gt; layout simply wraps the &lt;code&gt;_article&lt;/code&gt; partial in a &lt;code&gt;div&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;box&lt;/code&gt; 레이아웃은 단순히 랩 &lt;code&gt;_article&lt;/code&gt; A의 일부 &lt;code&gt;div&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="40ba52a7c21c638df1e45032e79561bce1402224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build_association&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, and the link through its foreign key will be set, but the associated object will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="translated">&lt;code&gt;build_association&lt;/code&gt; 의 방법은 관련 유형의 새 개체를 반환합니다. 이 객체는 전달 된 속성에서 인스턴스화되고 외래 키를 통한 링크는 설정되지만 관련 객체는 아직 저장 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e2a44e348f4a472b4365912e2287829ce7d17427" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build_association&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, and the link through this object's foreign key will be set, but the associated object will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="translated">&lt;code&gt;build_association&lt;/code&gt; 의 방법은 관련 유형의 새 개체를 반환합니다. 이 객체는 전달 된 속성에서 인스턴스화되며이 객체의 외래 키를 통한 링크는 설정되지만 관련 객체는 아직 저장 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a8483fcebc98c253f8c944baa529a8a326217ba6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cached: true&lt;/code&gt; will make Action View's rendering read several templates from cache at once instead of one call per template.</source>
          <target state="translated">&lt;code&gt;cached: true&lt;/code&gt; 액션 뷰의 렌더링 번 대신 템플릿 당 하나 개의 통화에서 캐시에서 여러 템플릿을 읽게됩니다.</target>
        </trans-unit>
        <trans-unit id="a9ccc58789e06b5780acca188cdfd5ea8c3ea857" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capture&lt;/code&gt; method allows you to extract part of a template into a variable. You can then use this variable anywhere in your templates or layout.</source>
          <target state="translated">&lt;code&gt;capture&lt;/code&gt; 방법을 사용하면 변수에 템플릿의 일부를 추출 할 수 있습니다. 그런 다음 템플릿이나 레이아웃의 어느 곳에서나이 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4de7f88df38279a3722cff216b9b16c2e45b9e77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;change&lt;/code&gt; method is the primary way of writing migrations. It works for the majority of cases, where Active Record knows how to reverse the migration automatically. Currently, the &lt;code&gt;change&lt;/code&gt; method supports only these migration definitions:</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 방법은 마이그레이션을 작성하는 기본 방법입니다. Active Record가 마이그레이션을 자동으로 되 돌리는 방법을 알고있는 대부분의 경우에 작동합니다. 현재 &lt;code&gt;change&lt;/code&gt; 방법은 다음 마이그레이션 정의 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="52363d1f5d46bcb294b35d60ee3388ba22f43eac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear&lt;/code&gt; method is used when you intentionally want to clear all the messages in the &lt;code&gt;errors&lt;/code&gt; collection. Of course, calling &lt;code&gt;errors.clear&lt;/code&gt; upon an invalid object won't actually make it valid: the &lt;code&gt;errors&lt;/code&gt; collection will now be empty, but the next time you call &lt;code&gt;valid?&lt;/code&gt; or any method that tries to save this object to the database, the validations will run again. If any of the validations fail, the &lt;code&gt;errors&lt;/code&gt; collection will be filled again.</source>
          <target state="translated">&lt;code&gt;clear&lt;/code&gt; 의도적으로 모든 메시지를 삭제하고자 할 때 방법이 사용되는 &lt;code&gt;errors&lt;/code&gt; 모음. 물론 유효하지 않은 객체에 대해 &lt;code&gt;errors.clear&lt;/code&gt; 를 호출 하면 실제로 유효하지 않습니다. 이제 &lt;code&gt;errors&lt;/code&gt; 모음이 비어 있지만 다음에 호출 할 때는 &lt;code&gt;valid?&lt;/code&gt; 또는이 개체를 데이터베이스에 저장하려고 시도하는 방법이면 유효성 검사가 다시 실행됩니다. 유효성 검사 중 하나라도 실패하면 &lt;code&gt;errors&lt;/code&gt; 수집이 다시 채워집니다.</target>
        </trans-unit>
        <trans-unit id="f377508743deb9df3e3d25346cd40d65ed86f08e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear&lt;/code&gt; method is used when you intentionally want to clear the &lt;code&gt;errors&lt;/code&gt; collection. Of course, calling &lt;code&gt;errors.clear&lt;/code&gt; upon an invalid object won't actually make it valid: the &lt;code&gt;errors&lt;/code&gt; collection will now be empty, but the next time you call &lt;code&gt;valid?&lt;/code&gt; or any method that tries to save this object to the database, the validations will run again. If any of the validations fail, the &lt;code&gt;errors&lt;/code&gt; collection will be filled again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747426e03fbb67e61fd2ae08fcc3cfb653a768ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; method adds one or more objects to the collection by creating records in the join table.</source>
          <target state="translated">&lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; 방법 조인 테이블의 레코드를 생성하여 수집하는 하나 개 이상의 객체를 추가한다.</target>
        </trans-unit>
        <trans-unit id="52c2e305157f0a7acd1f52b19c909ce36a4af12d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; method adds one or more objects to the collection by setting their foreign keys to the primary key of the calling model.</source>
          <target state="translated">&lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; 메소드 호출 모델의 기본 키에 자신의 외래 키를 설정하여 컬렉션에 하나 개 이상의 객체를 추가한다.</target>
        </trans-unit>
        <trans-unit id="0bda4b98ab37ef84ebed66286bb597e3970c7422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.build&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, and the link through the join table will be created, but the associated object will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="translated">&lt;code&gt;collection.build&lt;/code&gt; 의 방법은 관련 유형의 새 개체를 반환합니다. 이 오브젝트는 전달 된 속성에서 인스턴스화되고 결합 테이블을 통한 링크가 작성되지만 연관된 오브젝트는 아직 저장 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="da44299648048b8c8fd4e652c2a5ca454c468e1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.build&lt;/code&gt; method returns a single or array of new objects of the associated type. The object(s) will be instantiated from the passed attributes, and the link through their foreign key will be created, but the associated objects will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="translated">&lt;code&gt;collection.build&lt;/code&gt; 의 방법은 단일 또는 관련 유형의 새 개체의 배열을 반환합니다. 전달 된 속성에서 객체가 인스턴스화되고 외래 키를 통한 링크가 생성되지만 관련 객체는 아직 저장 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c64eb83a83c405a15636c5df770868b792e1feb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.clear&lt;/code&gt; method removes all objects from the collection according to the strategy specified by the &lt;code&gt;dependent&lt;/code&gt; option. If no option is given, it follows the default strategy. The default strategy for &lt;code&gt;has_many :through&lt;/code&gt; associations is &lt;code&gt;delete_all&lt;/code&gt;, and for &lt;code&gt;has_many&lt;/code&gt; associations is to set the foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection.clear&lt;/code&gt; 방법은에 의해 지정된 전략에 따라 컬렉션에서 모든 개체를 제거 &lt;code&gt;dependent&lt;/code&gt; 옵션을 선택합니다. 옵션이 제공되지 않으면 기본 전략을 따릅니다. &lt;code&gt;has_many :through&lt;/code&gt; 연관 의 기본 전략 은 &lt;code&gt;delete_all&lt;/code&gt; 이며 &lt;code&gt;has_many&lt;/code&gt; 연관의 경우 외래 키를 &lt;code&gt;NULL&lt;/code&gt; 로 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e57955c9268a65980fe9cbdb9519ca7edb4fda95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.clear&lt;/code&gt; method removes every object from the collection by deleting the rows from the joining table. This does not destroy the associated objects.</source>
          <target state="translated">&lt;code&gt;collection.clear&lt;/code&gt; 방법은 가입 테이블에서 행을 삭제하여 컬렉션에서 모든 객체를 제거합니다. 연결된 객체가 손상되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="79aea364e14abf64ed5b39bad446dff98746df59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.create&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, the link through the join table will be created, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">&lt;code&gt;collection.create&lt;/code&gt; 의 방법은 관련 유형의 새 개체를 반환합니다. 이 오브젝트는 전달 된 속성에서 인스턴스화되고 결합 테이블을 통한 링크가 작성되며 연관된 모델에 지정된 모든 유효성 검증을 통과하면 연관된 오브젝트 &lt;em&gt;가&lt;/em&gt; 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="1f1d86ca6c46c7edff29fe46d1d4bf565405a9f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.create&lt;/code&gt; method returns a single or array of new objects of the associated type. The object(s) will be instantiated from the passed attributes, the link through its foreign key will be created, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">&lt;code&gt;collection.create&lt;/code&gt; 의 방법은 단일 또는 관련 유형의 새 개체의 배열을 반환합니다. 전달 된 속성에서 객체가 인스턴스화되고 외래 키를 통한 링크가 생성되며 연결된 모델에 지정된 모든 유효성 검사를 통과하면 관련 객체 &lt;em&gt;가&lt;/em&gt; 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="3f94a02d5529be33dd9be69fd479c955d67ac228" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.delete&lt;/code&gt; method removes one or more objects from the collection by deleting records in the join table. This does not destroy the objects.</source>
          <target state="translated">&lt;code&gt;collection.delete&lt;/code&gt; 의 방법은 테이블을 조인에서 레코드를 삭제하여 컬렉션에서 하나 이상의 개체를 제거합니다. 이것은 객체를 파괴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1cff808e84834ec38fabb007acbd37987ea6cd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.delete&lt;/code&gt; method removes one or more objects from the collection by setting their foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection.delete&lt;/code&gt; 의 방법은 자신의 외래 키를 설정하여 컬렉션에서 하나 이상의 개체를 제거 &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e024fd3e84ada74d6a57d4ac8f10d7498ff038cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.destroy&lt;/code&gt; method removes one or more objects from the collection by deleting records in the join table. This does not destroy the objects.</source>
          <target state="translated">&lt;code&gt;collection.destroy&lt;/code&gt; 의 방법은 테이블을 조인에서 레코드를 삭제하여 컬렉션에서 하나 이상의 개체를 제거합니다. 이것은 객체를 파괴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86960d901693f692a364bb363e848dfc5b9ad8ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.destroy&lt;/code&gt; method removes one or more objects from the collection by running &lt;code&gt;destroy&lt;/code&gt; on each object.</source>
          <target state="translated">&lt;code&gt;collection.destroy&lt;/code&gt; 의 방법을 실행하여 컬렉션에서 하나 이상의 개체를 제거 &lt;code&gt;destroy&lt;/code&gt; 각 개체에.</target>
        </trans-unit>
        <trans-unit id="dccf6e678bc8fa88ffc5ac217bb601392c83279d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.empty?&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the collection does not contain any associated objects.</source>
          <target state="translated">&lt;code&gt;collection.empty?&lt;/code&gt; 컬렉션에 연결된 개체가없는 경우 메서드는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="2078c200f57bc84e51d0e94e10a5f288f37d2bd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.exists?&lt;/code&gt; method checks whether an object meeting the supplied conditions exists in the collection. It uses the same syntax and options as &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F&quot;&gt;&lt;code&gt;ActiveRecord::Base.exists?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;collection.exists?&lt;/code&gt; 메소드는 제공된 조건을 충족하는 오브젝트가 콜렉션에 존재하는지 확인합니다. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F&quot;&gt; &lt;code&gt;ActiveRecord::Base.exists?&lt;/code&gt; &lt;/a&gt; 와 동일한 구문 및 옵션을 사용합니까? .</target>
        </trans-unit>
        <trans-unit id="0f39d9f47ccaaecc0652f9871a10515043c71e24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.find&lt;/code&gt; method finds objects within the collection. It uses the same syntax and options as &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-find&quot;&gt;&lt;code&gt;ActiveRecord::Base.find&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;collection.find&lt;/code&gt; 방법의 발견 컬렉션 내에서 객체. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-find&quot;&gt; &lt;code&gt;ActiveRecord::Base.find&lt;/code&gt; &lt;/a&gt; 와 동일한 구문 및 옵션을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="7bf6cbd5227f99cf9aafbac09b4cee01b2d29f9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.reload&lt;/code&gt; method returns a Relation of all of the associated objects, forcing a database read. If there are no associated objects, it returns an empty Relation.</source>
          <target state="translated">&lt;code&gt;collection.reload&lt;/code&gt; 의 방법은 데이터베이스 읽기를 강요 관련된 모든 객체의 관계를 반환합니다. 연결된 객체가 없으면 빈 관계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5b6961f00cdeaf4f39851a5c526f17f9d49e753c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.size&lt;/code&gt; method returns the number of objects in the collection.</source>
          <target state="translated">&lt;code&gt;collection.size&lt;/code&gt; 의 방법은 컬렉션의 개체 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="73b01b4a44936bdc17f5df3c4b75af136e09f5e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.where&lt;/code&gt; method finds objects within the collection based on the conditions supplied but the objects are loaded lazily meaning that the database is queried only when the object(s) are accessed.</source>
          <target state="translated">&lt;code&gt;collection.where&lt;/code&gt; 의 방법 발견은 주어진 조건에 따라 집합 내의 개체하지만 객체는 객체 (들)에 액세스 할 때 데이터베이스에서만 쿼리 즉 느리게 로딩된다.</target>
        </trans-unit>
        <trans-unit id="18fdcd242505e917fac431cfc51df7e21bfaeaf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection&lt;/code&gt; method returns a Relation of all of the associated objects. If there are no associated objects, it returns an empty Relation.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; 방법은 관련된 모든 객체의 관계를 반환합니다. 연결된 객체가 없으면 빈 관계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bfaaefd4db4f3cd04e948d95b96abdd865effecd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection=&lt;/code&gt; method makes the collection contain only the supplied objects, by adding and deleting as appropriate. The changes are persisted to the database.</source>
          <target state="translated">&lt;code&gt;collection=&lt;/code&gt; 방법은 컬렉션 추가하고 적절하게 삭제함으로써, 반드시 제공된 객체를 포함한다. 변경 사항은 데이터베이스에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="80da358faf92686bc07d4079e2d51f85ba78e6cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_check_boxes&lt;/code&gt; Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02931b7a2424b056602a2e9f4abad13fb4dd391" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_radio_buttons&lt;/code&gt; Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7251c743e78ad94d8ab95381a61bb3e2cae7f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_select&lt;/code&gt; Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37e627506324620457a4e0665ed9847e99698ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_select&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;time_zone_select&lt;/code&gt; methods take an &lt;code&gt;options&lt;/code&gt; parameter, a hash:</source>
          <target state="translated">&lt;code&gt;collection_select&lt;/code&gt; 은 , &lt;code&gt;select&lt;/code&gt; 및 &lt;code&gt;time_zone_select&lt;/code&gt; 방법은 걸릴 &lt;code&gt;options&lt;/code&gt; 매개 변수 해시를 :</target>
        </trans-unit>
        <trans-unit id="42b13ad548b39d592b9e016b4ba688178912bda7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_singular_ids&lt;/code&gt; method returns an array of the ids of the objects in the collection.</source>
          <target state="translated">&lt;code&gt;collection_singular_ids&lt;/code&gt; 의 방법은 컬렉션 내의 오브젝트 ID의 배열을 반환한다.</target>
        </trans-unit>
        <trans-unit id="b23d977aaa3c3719b6d91d2ec216cbcb0f193d0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_singular_ids=&lt;/code&gt; method makes the collection contain only the objects identified by the supplied primary key values, by adding and deleting as appropriate. The changes are persisted to the database.</source>
          <target state="translated">&lt;code&gt;collection_singular_ids=&lt;/code&gt; 방법은 컬렉션 추가하고 적절하게 삭제함으로써, 제공된 차 키 값에 의해 식별되는 오브젝트 만 포함한다. 변경 사항은 데이터베이스에 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="e952b938d58d6084d7b7f0b5dd92fc081db2f4b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;comment_counter&lt;/code&gt; local variable is given to us by the &lt;code&gt;&amp;lt;%= render
@article.comments %&amp;gt;&lt;/code&gt; call, which will define it automatically and increment the counter as it iterates through each comment. It's used in this example to display a small number next to each comment when it's created.</source>
          <target state="translated">&lt;code&gt;comment_counter&lt;/code&gt; 지역 변수는 우리에게 주어진 &lt;code&gt;&amp;lt;%= render @article.comments %&amp;gt;&lt;/code&gt; 자동으로 정의하고 각 주석을 통해 반복 할 때마다 카운터를 증가시킵니다 전화를. 이 예제에서는 생성 될 때 각 주석 옆에 작은 숫자를 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b5a18ffd54b8d06fa059d1aa72036ea6be911b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;comments&lt;/code&gt; resource here will have the following routes generated for it:</source>
          <target state="translated">&lt;code&gt;comments&lt;/code&gt; 자원은 여기에 대해 생성 된 다음과 같은 경로를해야합니다 :</target>
        </trans-unit>
        <trans-unit id="bcddb145915983f232e89d8b60105fdad174ef82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config.assets.compress&lt;/code&gt; option should be changed to &lt;code&gt;config.assets.js_compressor&lt;/code&gt; like so for instance:</source>
          <target state="translated">&lt;code&gt;config.assets.compress&lt;/code&gt; 의 옵션을 변경해야 &lt;code&gt;config.assets.js_compressor&lt;/code&gt; 그래서 예를 들어 같은 :</target>
        </trans-unit>
        <trans-unit id="81ea9d1a743856ce330b80944082aed773e77cd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config/database.yml&lt;/code&gt; file can contain ERB tags &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;. Anything in the tags will be evaluated as Ruby code. You can use this to pull out data from an environment variable or to perform calculations to generate the needed connection information.</source>
          <target state="translated">&lt;code&gt;config/database.yml&lt;/code&gt; 파일 ERB 태그를 포함 할 수있는 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; . 태그의 모든 것은 루비 코드로 평가됩니다. 이를 사용하여 환경 변수에서 데이터를 가져 오거나 계산을 수행하여 필요한 연결 정보를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b5b26498ab5ce6ae7e3eaf238a18e4fe8751e40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config/database.yml&lt;/code&gt; file contains sections for three different environments in which Rails can run by default:</source>
          <target state="translated">&lt;code&gt;config/database.yml&lt;/code&gt; 파일 레일 기본적으로 실행할 수있는 세 가지 환경에 대한 섹션이 포함되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="74c73fa4b2e006ca55453702148e60d6bfabbf9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;console&lt;/code&gt; command lets you interact with your Rails application from the command line. On the underside, &lt;code&gt;bin/rails console&lt;/code&gt; uses IRB, so if you've ever used it, you'll be right at home. This is useful for testing out quick ideas with code and changing data server-side without touching the website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb767edbee15e6b4db32c2ef7f30c52f1f8b7aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;console&lt;/code&gt; command lets you interact with your Rails application from the command line. On the underside, &lt;code&gt;rails console&lt;/code&gt; uses IRB, so if you've ever used it, you'll be right at home. This is useful for testing out quick ideas with code and changing data server-side without touching the website.</source>
          <target state="translated">&lt;code&gt;console&lt;/code&gt; 명령은 명령 줄에서 레일즈 응용 프로그램을 상호 작용할 수 있습니다. 밑면에서 &lt;code&gt;rails console&lt;/code&gt; 은 IRB를 사용하므로,이를 사용한 적이 있다면 집에있을 것입니다. 웹 사이트를 건드리지 않고 코드로 빠른 아이디어를 테스트하고 데이터를 서버 측에서 변경하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cf7909e4645ce0f8e3bc57c99609c96524b74007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content_for&lt;/code&gt; method allows you to insert content into a named &lt;code&gt;yield&lt;/code&gt; block in your layout. For example, this view would work with the layout that you just saw:</source>
          <target state="translated">&lt;code&gt;content_for&lt;/code&gt; 방법은 당신이 이름에 내용을 삽입 할 수 있습니다 &lt;code&gt;yield&lt;/code&gt; 레이아웃의 블록. 예를 들어,이보기는 방금 본 레이아웃에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b57aacef775f5d5de17020f91a0370ba1db4293c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content_for&lt;/code&gt; method is very helpful when your layout contains distinct regions such as sidebars and footers that should get their own blocks of content inserted. It's also useful for inserting tags that load page-specific JavaScript or css files into the header of an otherwise generic layout.</source>
          <target state="translated">&lt;code&gt;content_for&lt;/code&gt; 레이아웃은 삽입 된 콘텐츠를 자신의 블록을 받아야 사이드 바 및 바닥 글 등의 특정 영역이 포함 된 경우 방법은 매우 유용합니다. 또한 페이지 별 JavaScript 또는 CSS 파일을로드하는 태그를 그렇지 않은 경우 일반 레이아웃의 헤더에 삽입하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="aab664074b37797d37b390251f951e24712d74a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; action instantiates a new article with values for the title and body, and attempts to save it. If the article is saved successfully, the action redirects the browser to the article's page at &lt;code&gt;&quot;http://localhost:3000/articles/#{@article.id}&quot;&lt;/code&gt;. Else, the action redisplays the form by rendering &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;. The title and body here are dummy values. After we create the form, we will come back and change these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee85edc9c6c2aca0740d9a87c79c1479e3bb5d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_association&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, the link through its foreign key will be set, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">&lt;code&gt;create_association&lt;/code&gt; 의 방법은 관련 유형의 새 개체를 반환합니다. 이 객체는 전달 된 속성에서 인스턴스화되고 외래 키를 통한 링크가 설정되며 연결된 모델에 지정된 모든 유효성 검사를 통과하면 관련 객체 &lt;em&gt;가&lt;/em&gt; 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="15fecea2b55267fcd907c56315c3dd462ead23df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_association&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, the link through this object's foreign key will be set, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">&lt;code&gt;create_association&lt;/code&gt; 의 방법은 관련 유형의 새 개체를 반환합니다. 이 객체는 전달 된 속성에서 인스턴스화되고이 객체의 외래 키를 통한 링크가 설정되며 연결된 모델에 지정된 모든 유효성 검사를 통과하면 관련 객체 &lt;em&gt;가&lt;/em&gt; 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="415ddd2cfe56689235d4b9ff68703679c48f943a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_table&lt;/code&gt; method is one of the most fundamental, but most of the time, will be generated for you from using a model or scaffold generator. A typical use would be</source>
          <target state="translated">&lt;code&gt;create_table&lt;/code&gt; 방법은 가장 기본적인 중 하나이지만, 대부분의 시간은 모델 또는 비계 생성기를 사용하는 당신을 위해 생성됩니다. 일반적인 용도는</target>
        </trans-unit>
        <trans-unit id="f6699b3d74329991c080b37c2d9b976441fb85e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;custom_proxies&lt;/code&gt; argument can take an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of string, IPAddr, or &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; objects which will be used instead of &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt;. If a single string, IPAddr, or &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; object is provided, it will be used in addition to &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt;. Any proxy setup will put the value you want in the middle (or at the beginning) of the X-Forwarded-For list, with your proxy servers after it. If your proxies aren't removed, pass them in via the &lt;code&gt;custom_proxies&lt;/code&gt; parameter. That way, the middleware will ignore those IP addresses, and return the one that you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c057485bb8f81f79e0625b19f3e5ee882e09353" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;custom_proxies&lt;/code&gt; argument can take an &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt; of string, IPAddr, or Regexp objects which will be used instead of &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt;. If a single string, IPAddr, or Regexp object is provided, it will be used in addition to &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt;. Any proxy setup will put the value you want in the middle (or at the beginning) of the X-Forwarded-For list, with your proxy servers after it. If your proxies aren't removed, pass them in via the &lt;code&gt;custom_proxies&lt;/code&gt; parameter. That way, the middleware will ignore those IP addresses, and return the one that you want.</source>
          <target state="translated">&lt;code&gt;custom_proxies&lt;/code&gt; 의 인수는 취할 수 &lt;a href=&quot;../array&quot;&gt;배열&lt;/a&gt; 대신 사용됩니다 문자열, IPADDR, 또는 정규 표현식 객체의 &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt; 을 . 하나의 문자열이, IPADDR, 또는 정규 표현식 객체가 제공되는 경우, 추가로 사용됩니다 &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt; . 모든 프록시 설정은 원하는 값을 X-Forwarded-For 목록의 중간 (또는 시작 부분)에 프록시 서버와 함께 배치합니다. 프록시가 제거되지 않은 경우 &lt;code&gt;custom_proxies&lt;/code&gt; 매개 변수 를 통해 전달하십시오 . 이렇게하면 미들웨어가 해당 IP 주소를 무시하고 원하는 IP 주소를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c41ad3da2e0319cfebdab41da97da525b45dbc0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database.yml&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;database.yml&lt;/code&gt; 을의 다음과 같다 :</target>
        </trans-unit>
        <trans-unit id="7d1859ca9424072fe323d72e6dd2599b2ab66287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; argument for &lt;code&gt;connected_to&lt;/code&gt; will take a symbol or a config hash.</source>
          <target state="translated">&lt;code&gt;connected_to&lt;/code&gt; 의 &lt;code&gt;database&lt;/code&gt; 인수 는 기호 또는 구성 해시를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="db3d724cfc4019016e901b91b11e52305a4a8714" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;db/schema.rb&lt;/code&gt; or &lt;code&gt;db/structure.sql&lt;/code&gt; is a snapshot of the current state of your database and is the authoritative source for rebuilding that database. This makes it possible to delete old migration files.</source>
          <target state="translated">&lt;code&gt;db/schema.rb&lt;/code&gt; 또는 &lt;code&gt;db/structure.sql&lt;/code&gt; 된 스냅 샷 데이터베이스의 현재 상태와 해당 데이터베이스를 다시 작성에 대한 권위있는 소스입니다. 이전 마이그레이션 파일을 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3959eb49c6c937e7b51e91468daafd97372bf861" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;db:migrate:redo&lt;/code&gt; command is a shortcut for doing a rollback and then migrating back up again. As with the &lt;code&gt;db:rollback&lt;/code&gt; command, you can use the &lt;code&gt;STEP&lt;/code&gt; parameter if you need to go more than one version back, for example:</source>
          <target state="translated">&lt;code&gt;db:migrate:redo&lt;/code&gt; 명령은 롤백을 수행 한 후 최대 다시 마이그레이션에 대한 바로 가기입니다. 와 마찬가지로 &lt;code&gt;db:rollback&lt;/code&gt; 명령, 당신은 사용할 수 있습니다 &lt;code&gt;STEP&lt;/code&gt; 의 당신은 예를 들어, 하나의 버전 다시보다 더 이동해야하는 경우 매개 변수를 :</target>
        </trans-unit>
        <trans-unit id="75cef429e1feebd2a6d33d0cbdbdbdc2ea720667" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug&lt;/code&gt; helper will return a &amp;lt;pre&amp;gt; tag that renders the object using the YAML format. This will generate human-readable data from any object. For example, if you have this code in a view:</source>
          <target state="translated">&lt;code&gt;debug&lt;/code&gt; 도우미는 YAML 형식을 사용하여 객체를 렌더링하는 &amp;lt;전&amp;gt; 태그를 반환합니다. 모든 객체에서 사람이 읽을 수있는 데이터를 생성합니다. 예를 들어,보기에이 코드가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="b493d0854984f2584246afbcb36a7be9ece90272" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deep_dup&lt;/code&gt; method returns a deep copy of a given object. Normally, when you &lt;code&gt;dup&lt;/code&gt; an object that contains other objects, Ruby does not &lt;code&gt;dup&lt;/code&gt; them, so it creates a shallow copy of the object. If you have an array with a string, for example, it will look like this:</source>
          <target state="translated">&lt;code&gt;deep_dup&lt;/code&gt; 방법은 주어진 객체의 전체 복사본을 반환합니다. 일반적으로,이 때 &lt;code&gt;dup&lt;/code&gt; 다른 개체를 포함하는 개체를, 루비하지 않습니다 &lt;code&gt;dup&lt;/code&gt; 는 개체의 단순 복사본을 생성, 그래서 그들을. 예를 들어 문자열이있는 배열이있는 경우 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d355c3365b621ded8bdfdde3fa1040a426821f06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default&lt;/code&gt; and &lt;code&gt;scope&lt;/code&gt; keywords are reserved and can't be used as variable names. If used, an &lt;code&gt;I18n::ReservedInterpolationKey&lt;/code&gt; exception is raised. If a translation expects an interpolation variable, but this has not been passed to &lt;code&gt;#translate&lt;/code&gt;, an &lt;code&gt;I18n::MissingInterpolationArgument&lt;/code&gt; exception is raised.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 및 &lt;code&gt;scope&lt;/code&gt; 키워드는 예약되어 변수 이름으로 사용할 수 없습니다. 사용되는 경우 &lt;code&gt;I18n::ReservedInterpolationKey&lt;/code&gt; 예외가 발생합니다. 변환에 보간 변수가 필요하지만 &lt;code&gt;#translate&lt;/code&gt; 로 전달되지 않은 경우 &lt;code&gt;I18n::MissingInterpolationArgument&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0efd92da2bceb986cab71b9630a216f1f94a3f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default_scope&lt;/code&gt; is also applied while creating/building a record when the scope arguments are given as a &lt;code&gt;Hash&lt;/code&gt;. It is not applied while updating a record. E.g.:</source>
          <target state="translated">&lt;code&gt;default_scope&lt;/code&gt; 은 또한 범위를 인수로 주어진이 때 기록 건축 / 만드는 동안인가 &lt;code&gt;Hash&lt;/code&gt; . 레코드를 업데이트하는 동안 적용되지 않습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="f2d51c1146ecac1b7522a33b089ece83ff01d819" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaults&lt;/code&gt; parameter is unused.</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; 매개 변수는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="10515ea55b6aaa14662e42d4f249c7bdf7584ed9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delegate&lt;/code&gt; macro accepts several methods:</source>
          <target state="translated">&lt;code&gt;delegate&lt;/code&gt; 매크로는 여러 가지 방법을 받아 들인다 :</target>
        </trans-unit>
        <trans-unit id="d9862d702a5231c262fe75d4cdd615251c770144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; method in collection associations can now receive &lt;code&gt;Integer&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; arguments as record ids, besides records, pretty much like the &lt;code&gt;destroy&lt;/code&gt; method does. Previously it raised &lt;code&gt;ActiveRecord::AssociationTypeMismatch&lt;/code&gt; for such arguments. From Rails 4.0 on &lt;code&gt;delete&lt;/code&gt; automatically tries to find the records matching the given ids before deleting them.</source>
          <target state="translated">콜렉션 연관 의 &lt;code&gt;delete&lt;/code&gt; 메소드는 이제 &lt;code&gt;destroy&lt;/code&gt; 메소드 와 거의 비슷하게 레코드 외에 &lt;code&gt;Integer&lt;/code&gt; 또는 &lt;code&gt;String&lt;/code&gt; 인수를 레코드 ID로 수신 할 수 있습니다 . 이전에는 이러한 인수에 대해 &lt;code&gt;ActiveRecord::AssociationTypeMismatch&lt;/code&gt; 발생했습니다 . &lt;code&gt;delete&lt;/code&gt; Rails 4.0부터는 주어진 ID와 일치하는 레코드를 삭제하기 전에 자동으로 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6252c621b15137a9455c19049b370dfca7fa87ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; routing method should be used for routes that destroy resources. If this was left as a typical &lt;code&gt;get&lt;/code&gt; route, it could be possible for people to craft malicious URLs like this:</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 라우팅 방법은 자원을 파괴하는 경로를 사용해야합니다. 이것이 일반적인 &lt;code&gt;get&lt;/code&gt; 경로 로 남은 경우 사람들이 다음과 같은 악성 URL을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b37ac1a053bd42ff87ff2e12ac547bf6084b7ab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;descendants&lt;/code&gt; method returns all classes that are &lt;code&gt;&amp;lt;&lt;/code&gt; than its receiver:</source>
          <target state="translated">&lt;code&gt;descendants&lt;/code&gt; 방법은 모든 클래스 반환 &lt;code&gt;&amp;lt;&lt;/code&gt; 리시버보다를 :</target>
        </trans-unit>
        <trans-unit id="ef21143e3e81b3f23cf97789ab3396558081f9e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; action fetches the article from the database, and calls &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-destroy&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt; on it. Then, it redirects the browser to the root path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d85c3ba681016840334511693e1c6850e3d79c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; action redirects to the application's &lt;code&gt;root_url&lt;/code&gt;, where the message will be displayed. Note that it's entirely up to the next action to decide what, if anything, it will do with what the previous action put in the flash. It's conventional to display any error alerts or notices from the flash in the application's layout:</source>
          <target state="translated">는 &lt;code&gt;destroy&lt;/code&gt; 응용 프로그램의에 액션 리디렉션 &lt;code&gt;root_url&lt;/code&gt; 메시지가 표시됩니다. 이전 액션이 플래시에 어떤 영향을 미치는지 결정하는 것은 전적으로 다음 액션에 달려 있습니다. 응용 프로그램 레이아웃에서 플래시의 오류 경고 또는 알림을 표시하는 것이 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="c21e61cb7247256721b1b304dc61c75bbdff3a81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; action will find the article we are looking at, locate the comment within the &lt;code&gt;@article.comments&lt;/code&gt; collection, and then remove it from the database and send us back to the show action for the article.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 우리가 찾고있는 문서를 찾을 행동은 내 의견 찾을 &lt;code&gt;@article.comments&lt;/code&gt; 수집, 다음 데이터베이스에서 제거하고 기사의 show 액션으로 우리를 다시 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a254d60cd7f9d05012eea0abcf72cf44d6a965e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;development&lt;/code&gt; environment is used on your development/local computer as you interact manually with the application.</source>
          <target state="translated">&lt;code&gt;development&lt;/code&gt; 환경은 응용 프로그램과 상호 작용 수동으로 개발 / 로컬 컴퓨터에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="793dd0d609355dd91493a40856db4e7bac65ca4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;div_radio_button&lt;/code&gt; code from above can now be used as follows:</source>
          <target state="translated">위의 &lt;code&gt;div_radio_button&lt;/code&gt; 코드를 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04d3819f2490117215396990c85b6d2c2099121e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;download_pdf&lt;/code&gt; action in the example above will call a private method which actually generates the PDF document and returns it as a string. This string will then be streamed to the client as a file download and a filename will be suggested to the user. Sometimes when streaming files to the user, you may not want them to download the file. Take images, for example, which can be embedded into HTML pages. To tell the browser a file is not meant to be downloaded, you can set the &lt;code&gt;:disposition&lt;/code&gt; option to &quot;inline&quot;. The opposite and default value for this option is &quot;attachment&quot;.</source>
          <target state="translated">위 예제 의 &lt;code&gt;download_pdf&lt;/code&gt; 액션은 실제로 PDF 문서를 생성하고이를 문자열로 반환하는 private 메소드를 호출합니다. 이 문자열은 파일 다운로드로 클라이언트에 스트리밍되고 파일 이름이 사용자에게 제안됩니다. 때로는 파일을 사용자에게 스트리밍 할 때 파일을 다운로드하지 않을 수 있습니다. 예를 들어 HTML 페이지에 포함 할 수있는 이미지를 촬영하십시오. 브라우저에 파일을 다운로드하지 않으려면 &lt;code&gt;:disposition&lt;/code&gt; 옵션을 &quot;inline&quot;으로 설정하면 됩니다. 이 옵션의 반대 및 기본값은 &quot;첨부 파일&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="9d7bc099c8b213d834357af60f221de083d4e3ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;edit&lt;/code&gt; action fetches the article from the database, and stores it in &lt;code&gt;@article&lt;/code&gt; so that it can be used when building the form. By default, the &lt;code&gt;edit&lt;/code&gt; action will render &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302a65d72eda980fa138b8f99f35f1838dd35a0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enum&lt;/code&gt; macro maps an integer column to a set of possible values.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; 매크로 가능한 값들의 세트에 정수 열을 맵핑한다.</target>
        </trans-unit>
        <trans-unit id="b6487e0965716eaafd2c3411e802dbf83b1ebffc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error_on_ignore&lt;/code&gt; option overrides the application config to specify if an error should be raised when a specific order is present in the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680d859d659528ea29dc798cbd6d7fb95120da45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors.full_messages&lt;/code&gt; method (or its equivalent, &lt;code&gt;errors.to_a&lt;/code&gt;) returns the error messages in a user-friendly format, with the capitalized attribute name prepended to each message, as shown in the examples below.</source>
          <target state="translated">&lt;code&gt;errors.full_messages&lt;/code&gt; 의 방법 (또는 그와 동등한, &lt;code&gt;errors.to_a&lt;/code&gt; 는 ) 아래 예와 같이, 각각의 메시지 앞에 추가 대문자 속성 이름, 사용자 친화적 인 형태로 에러 메시지를 반환한다.</target>
        </trans-unit>
        <trans-unit id="488696fa028cd11d97d679929db26b06e557f911" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eval()&lt;/code&gt; function is a nightmare for restricted list input filters, as it allows the style attribute to hide the word &quot;innerHTML&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be084dae615fd05f276a20e304dbd1661339942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exclusion&lt;/code&gt; helper has an option &lt;code&gt;:in&lt;/code&gt; that receives the set of values that will not be accepted for the validated attributes. The &lt;code&gt;:in&lt;/code&gt; option has an alias called &lt;code&gt;:within&lt;/code&gt; that you can use for the same purpose, if you'd like to. This example uses the &lt;code&gt;:message&lt;/code&gt; option to show how you can include the attribute's value. For full options to the message argument please see the &lt;a href=&quot;#message&quot;&gt;message documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;exclusion&lt;/code&gt; 도우미는 옵션이 있습니다 &lt;code&gt;:in&lt;/code&gt; 그 유효성이 검증 된 속성에 대해 허용되지 않습니다 값 세트를받습니다. 는 &lt;code&gt;:in&lt;/code&gt; 옵션라는 별칭이 &lt;code&gt;:within&lt;/code&gt; 당신이 원하는 경우, 같은 목적으로 사용할 수 있습니다. 이 예제는 &lt;code&gt;:message&lt;/code&gt; 옵션을 사용 하여 속성 값을 포함하는 방법을 보여줍니다. 메시지 인수에 대한 전체 옵션은 &lt;a href=&quot;#message&quot;&gt;메시지 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="027d9be8c0f72dc7f6ad32ab9c17f75b4b37a3e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exists?&lt;/code&gt; method also takes multiple values, but the catch is that it will return &lt;code&gt;true&lt;/code&gt; if any one of those records exists.</source>
          <target state="translated">은 &lt;code&gt;exists?&lt;/code&gt; 이 메소드는 여러 값을 취하지 만, 그 레코드 중 하나가 존재하면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="720fefad47378a68be993bc0b6ff732d169a96d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expression&lt;/code&gt; parameter will be ignored if present. It can be helpful to provide this in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, &lt;code&gt;expression&lt;/code&gt; will be used by &lt;a href=&quot;schemastatements#method-i-add_check_constraint&quot;&gt;&lt;code&gt;add_check_constraint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb4ebc6ce4fc6fd7fa99d5a532549a67f6bb54e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extending&lt;/code&gt; method specifies a named module to extend the association proxy. Association extensions are discussed in detail &lt;a href=&quot;#association-extensions&quot;&gt;later in this guide&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;extending&lt;/code&gt; 방법은 연관 프록시 확장하는 모듈의 이름을 지정한다. 연결 확장에 대해서는 &lt;a href=&quot;#association-extensions&quot;&gt;이 가이드의 뒷부분에서&lt;/a&gt; 자세히 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="54a74e3ec495e190713f8a3009fabb5c19b1430e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extension&lt;/code&gt; argument allows you to pass a block into a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;#has_and_belongs_to_many&lt;/a&gt; association. This is useful for adding new finders, creators and other factory-type methods to be used as part of the association.</source>
          <target state="translated">&lt;code&gt;extension&lt;/code&gt; 인수는 당신이에 블록을 전달할 수 있습니다 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;#has_and_belongs_to_many의&lt;/a&gt; 협회. 이는 새로운 파인더, 작성자 및 기타 팩토리 유형 메소드를 추가하여 연관의 일부로 사용하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5b4e4be15a5554d0468dd0717e81876bcc263ab8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extension&lt;/code&gt; argument allows you to pass a block into a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; association. This is useful for adding new finders, creators and other factory-type methods to be used as part of the association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1f2ffe32fde6785207ea099518f4814d3bc55b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extension&lt;/code&gt; argument allows you to pass a block into a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;#has_many&lt;/a&gt; association. This is useful for adding new finders, creators and other factory-type methods to be used as part of the association.</source>
          <target state="translated">&lt;code&gt;extension&lt;/code&gt; 인수는 당신이에 블록을 전달할 수 있습니다 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;#has_many의&lt;/a&gt; 협회. 이는 새로운 파인더, 작성자 및 기타 팩토리 유형 메소드를 추가하여 연관의 일부로 사용하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a581de790ecbc50cf65008fb5159c785b241471a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extension&lt;/code&gt; argument allows you to pass a block into a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; association. This is useful for adding new finders, creators and other factory-type methods to be used as part of the association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5d5c953a2fbc0f3b6e6dfcf6e85f31dcd54aaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extras&lt;/code&gt; hash allows you to specify options that would normally be provided as a query string to the action. The &lt;code&gt;message&lt;/code&gt; parameter allows you to specify a custom error message to display upon failure.</source>
          <target state="translated">&lt;code&gt;extras&lt;/code&gt; 해시는 일반적으로 작업에 쿼리 문자열로 제공 될 것이다 옵션을 지정할 수 있습니다. &lt;code&gt;message&lt;/code&gt; 매개 변수는 장애에 표시 할 사용자 지정 오류 메시지를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3f85bcfda088d84a51b11ba937c03dcc8165173" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fields_for&lt;/code&gt; Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1895a4603c8d1474d1635c3d4d969d69334d7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fields_for&lt;/code&gt; yields a form builder. The parameters' name will be what &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; expects. For example, when creating a user with 2 addresses, the submitted parameters would look like:</source>
          <target state="translated">&lt;code&gt;fields_for&lt;/code&gt; 는 양식 빌더를 얻을 수 있습니다. 매개 변수의 이름은 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 가 기대 하는 이름입니다 . 예를 들어, 주소가 2 개인 사용자를 작성할 때 제출 된 매개 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="799c5f4334b11a22099289d7df13055f9c21a6bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method will raise an &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception if no matching record is found.</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; 방법은 올릴 것이다 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 일치 레코드를 찾을 수없는 경우 예외를.</target>
        </trans-unit>
        <trans-unit id="1533c80d477480d7066aa763788f092fca9e885a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method will raise an &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception unless a matching record is found for &lt;strong&gt;all&lt;/strong&gt; of the supplied primary keys.</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; 방법은 올릴 것이다 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 일치하는 레코드를 찾을되지 않는 예외를 &lt;strong&gt;모두&lt;/strong&gt; 제공되는 기본 키의.</target>
        </trans-unit>
        <trans-unit id="63b6a2239c4baaf6fda412a24e05cc4530881b20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_by!&lt;/code&gt; method behaves exactly like &lt;code&gt;find_by&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found. For example:</source>
          <target state="translated">&lt;code&gt;find_by!&lt;/code&gt; 이 메서드 는 일치하는 레코드가 없으면 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 발생 &lt;code&gt;find_by&lt;/code&gt; 점을 제외하고 find_by 와 똑같이 동작합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="20e937bb20da5bd568c6dd7d794226eb2667add3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_by&lt;/code&gt; method finds the first record matching some conditions. For example:</source>
          <target state="translated">&lt;code&gt;find_by&lt;/code&gt; 방법은 특정 조건과 일치하는 상기 제 레코드를 찾는다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4ad4e5671336f3d13dac0a9ba0003917813c7ffd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_by_*&lt;/code&gt; and &lt;code&gt;find_by_*!&lt;/code&gt; methods are dynamic finders generated automatically for every attribute. Learn more about them at the &lt;a href=&quot;active_record_querying#dynamic-finders&quot;&gt;Dynamic finders section&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;find_by_*&lt;/code&gt; 및 &lt;code&gt;find_by_*!&lt;/code&gt; 메소드는 모든 속성에 대해 자동으로 생성되는 동적 파인더입니다. &lt;a href=&quot;active_record_querying#dynamic-finders&quot;&gt;동적 파인더 섹션&lt;/a&gt; 에서 이에 대해 자세히 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="12f7cd64b69f5769cebd13d0d9ee39bd4203da76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_each&lt;/code&gt; and &lt;code&gt;find_in_batches&lt;/code&gt; methods are intended for use in the batch processing of a large number of records that wouldn't fit in memory all at once. If you just need to loop over a thousand records the regular find methods are the preferred option.</source>
          <target state="translated">&lt;code&gt;find_each&lt;/code&gt; 및 &lt;code&gt;find_in_batches&lt;/code&gt; 방법은 모두 한 번에 메모리에 맞지 않는 것 많은 수의 레코드의 일괄 처리에 사용하기위한 것입니다. 수천 개의 레코드를 반복해야하는 경우 일반 찾기 방법이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="117c36d726970df8a08e1c3d127237f2e2e5bc62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_each&lt;/code&gt; method retrieves records in batches and then yields &lt;em&gt;each&lt;/em&gt; one to the block. In the following example, &lt;code&gt;find_each&lt;/code&gt; retrieves users in batches of 1000 and yields them to the block one by one:</source>
          <target state="translated">&lt;code&gt;find_each&lt;/code&gt; 에 있어서 일괄 적으로 레코드를 검색하고 수득 &lt;em&gt;각&lt;/em&gt; 블록에 하나. 다음 예제에서 &lt;code&gt;find_each&lt;/code&gt; 는 1000 단위로 사용자를 검색하여 하나씩 블록에 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5fd7bc75c818774b29b3aa8e727f31bb56804fd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_in_batches&lt;/code&gt; method accepts the same options as &lt;code&gt;find_each&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;find_in_batches&lt;/code&gt; 의 방법과 같은 옵션을 받아 &lt;code&gt;find_each&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b0ee8632a0e1cda9491333d01678c3f18ec938ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_in_batches&lt;/code&gt; method accepts the same options as &lt;code&gt;find_each&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7b4cacd74f1745152d358909ca6b5f582de89e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_in_batches&lt;/code&gt; method is similar to &lt;code&gt;find_each&lt;/code&gt;, since both retrieve batches of records. The difference is that &lt;code&gt;find_in_batches&lt;/code&gt; yields &lt;em&gt;batches&lt;/em&gt; to the block as an array of models, instead of individually. The following example will yield to the supplied block an array of up to 1000 invoices at a time, with the final block containing any remaining invoices:</source>
          <target state="translated">&lt;code&gt;find_in_batches&lt;/code&gt; 의 방법과 유사하다 &lt;code&gt;find_each&lt;/code&gt; 모두 레코드의 일괄 처리를 검색하기 때문에. 차이점은 &lt;code&gt;find_in_batches&lt;/code&gt; 는 개별적으로가 아니라 모델의 배열로 블록에 &lt;em&gt;배치&lt;/em&gt; 를 생성 한다는 것입니다. 다음 예제는 제공된 블록에 한 번에 최대 1000 개의 송장 배열을 생성하고 마지막 블록에는 남은 송장이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6159f520e181d7df651dcb14058e80d760f3616c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_or_create_by&lt;/code&gt; method checks whether a record with the specified attributes exists. If it doesn't, then &lt;code&gt;create&lt;/code&gt; is called. Let's see an example.</source>
          <target state="translated">&lt;code&gt;find_or_create_by&lt;/code&gt; 방법을 확인 지정된 속성을 가진 레코드가 존재하는지 여부. 그렇지 않으면 &lt;code&gt;create&lt;/code&gt; 가 호출됩니다. 예를 보자.</target>
        </trans-unit>
        <trans-unit id="78010177e32b144c3eb611cb4727270fa751e68a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_or_initialize_by&lt;/code&gt; method will work just like &lt;code&gt;find_or_create_by&lt;/code&gt; but it will call &lt;code&gt;new&lt;/code&gt; instead of &lt;code&gt;create&lt;/code&gt;. This means that a new model instance will be created in memory but won't be saved to the database. Continuing with the &lt;code&gt;find_or_create_by&lt;/code&gt; example, we now want the client named 'Nick':</source>
          <target state="translated">&lt;code&gt;find_or_initialize_by&lt;/code&gt; 의 방법처럼 작동 &lt;code&gt;find_or_create_by&lt;/code&gt; 하지만 호출 &lt;code&gt;new&lt;/code&gt; 대신 &lt;code&gt;create&lt;/code&gt; . 이는 새 모델 인스턴스가 메모리에 생성되지만 데이터베이스에는 저장되지 않음을 의미합니다. &lt;code&gt;find_or_create_by&lt;/code&gt; 예제로 계속해서 , 우리는 'Nick'이라는 클라이언트를 원합니다 :</target>
        </trans-unit>
        <trans-unit id="4279bf93cd2682d12ab693772c33e38bf902ae3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finish&lt;/code&gt; option allows specifying the ending ID of the records to be retrieved. The code below shows the case of retrieving customers in batches, up to the customer with ID: 7000:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bfb14e15cd31edc4264528b391597824a39d14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first!&lt;/code&gt; method behaves exactly like &lt;code&gt;first&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="translated">첫 &lt;code&gt;first!&lt;/code&gt; 이 메서드 는 일치하는 레코드가 없으면 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 발생 시킨다는 점을 제외하고는 정확히 &lt;code&gt;first&lt;/code&gt; 처럼 동작합니다 .</target>
        </trans-unit>
        <trans-unit id="6a1a13d1386958cd6c653bb308bb0491ae16eb9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; method finds the first record ordered by primary key (default). For example:</source>
          <target state="translated">첫 &lt;code&gt;first&lt;/code&gt; 방법은 기본 키로 정렬 된 첫 번째 레코드를 찾습니다 (기본값). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f0fb551b67c343e2cbfc70d0613f5d2b8370f1a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; if no matching record is found and no exception will be raised.</source>
          <target state="translated">첫 &lt;code&gt;first&lt;/code&gt; 메소드는 일치하는 레코드가없고 예외가 발생 &lt;code&gt;nil&lt;/code&gt; 않으면 nil을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="ea5ce53b46ae0e7a449d83e1f68edbcaa2b0afff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;force_ssl&lt;/code&gt; method on controllers has been deprecated and will be removed in Rails 6.1. You are encouraged to enable &lt;code&gt;config.force_ssl&lt;/code&gt; to enforce HTTPS connections throughout your application. If you need to exempt certain endpoints from redirection, you can use &lt;code&gt;config.ssl_options&lt;/code&gt; to configure that behavior.</source>
          <target state="translated">컨트롤러 의 &lt;code&gt;force_ssl&lt;/code&gt; 메소드는 더 이상 사용되지 않으며 Rails 6.1에서 제거 될 것입니다. 응용 프로그램 전체에서 HTTPS 연결을 적용 하려면 &lt;code&gt;config.force_ssl&lt;/code&gt; 을 활성화하는 것이 좋습니다 . 특정 엔드 포인트를 리디렉션에서 제외해야하는 경우 &lt;code&gt;config.ssl_options&lt;/code&gt; 를 사용 하여 해당 동작을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="344b9c8a8ca4e68f1a7c0f83112c009f61ba5ac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form_authenticity_token&lt;/code&gt; generates a valid authentication token. That's useful in places where Rails does not add it automatically, like in custom Ajax calls.</source>
          <target state="translated">&lt;code&gt;form_authenticity_token&lt;/code&gt; 는 유효한 인증 토큰을 생성한다. 이는 커스텀 Ajax 호출과 같이 Rails가 자동으로 추가하지 않는 곳에서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="83c8cda0a7befe81fa34ed9e2be2e9caffacbb87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form_with&lt;/code&gt; method automatically includes the model id as a hidden field in the form. This is used to maintain the correlation between the form data and its associated model. Some ORM systems do not use IDs on nested models so in this case you want to be able to disable the hidden id.</source>
          <target state="translated">&lt;code&gt;form_with&lt;/code&gt; 의 방법은 자동 형태의 숨겨진 필드로 모델 ID를 포함합니다. 양식 데이터와 관련 모델 간의 상관 관계를 유지하는 데 사용됩니다. 일부 ORM 시스템은 중첩 모델에서 ID를 사용하지 않으므로이 경우 숨겨진 ID를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69b130065a1e0f0936a7a4c2a9440c1ccdf9ed14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form_with&lt;/code&gt; method yields a &lt;strong&gt;form builder&lt;/strong&gt; object (the &lt;code&gt;f&lt;/code&gt; variable).</source>
          <target state="translated">&lt;code&gt;form_with&lt;/code&gt; 의 방법은 수득 &lt;strong&gt;형태 빌더&lt;/strong&gt; 객체 ( &lt;code&gt;f&lt;/code&gt; 변수).</target>
        </trans-unit>
        <trans-unit id="44b683ea2740c611d87c006631f44e94224b00ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method kicks off the web request and populates the results into the &lt;code&gt;@response&lt;/code&gt;. It can accept up to 6 arguments:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 에 웹 요청 및 채우는 결과를 방법 차기 &lt;code&gt;@response&lt;/code&gt; . 최대 6 개의 인수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="684e7970be410bc1763730f6ba7c50c76eba1826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;given_day_in_next_week&lt;/code&gt; defaults to the beginning of the week which is determined by &lt;code&gt;Date.beginning_of_week&lt;/code&gt; or &lt;code&gt;config.beginning_of_week&lt;/code&gt; when set.</source>
          <target state="translated">&lt;code&gt;given_day_in_next_week&lt;/code&gt; 에 의해 결정된다 주초 기본값 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 또는 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 때 세트.</target>
        </trans-unit>
        <trans-unit id="fd64719a3e7570f62505c4a5411d3c9a04fdcb58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;group&lt;/code&gt; method supplies an attribute name to group the result set by, using a &lt;code&gt;GROUP BY&lt;/code&gt; clause in the finder SQL.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; 방법은 사용에 의해 그룹에 결과 집합을 속성 이름을 제공 &lt;code&gt;GROUP BY&lt;/code&gt; 파인더 SQL에서 절.</target>
        </trans-unit>
        <trans-unit id="7bccb856953557417d83909f7ee9f194969cc46d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; Association</source>
          <target state="translated">&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 협회</target>
        </trans-unit>
        <trans-unit id="990ad7e13d9022e01031f9bf91820b53a9d094e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association creates a many-to-many relationship with another model. In database terms, this associates two classes via an intermediate join table that includes foreign keys referring to each of the classes.</source>
          <target state="translated">&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 의 연관은 다른 모델 대다 관계를 생성한다. 데이터베이스 용어로 이것은 각 클래스를 참조하는 외래 키를 포함하는 중간 조인 테이블을 통해 두 클래스를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cffbff7161adc30713ca9ac8aa68e31364d2c6ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association supports these options:</source>
          <target state="translated">&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 의 협회는이 옵션을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="4c339ffc43e59d5b7bac471326071768bad11a0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many :through&lt;/code&gt; Association</source>
          <target state="translated">&lt;code&gt;has_many :through&lt;/code&gt; 협회</target>
        </trans-unit>
        <trans-unit id="0320dc713b5b5162baacb06b3460aea3196f3d92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many :through&lt;/code&gt; association is also useful for setting up &quot;shortcuts&quot; through nested &lt;code&gt;has_many&lt;/code&gt; associations. For example, if a document has many sections, and a section has many paragraphs, you may sometimes want to get a simple collection of all paragraphs in the document. You could set that up this way:</source>
          <target state="translated">&lt;code&gt;has_many :through&lt;/code&gt; 협회는 중첩을 통해 &quot;바로 가기&quot;를 설정하는 데 유용 &lt;code&gt;has_many&lt;/code&gt; 의 협회. 예를 들어, 문서에 섹션이 많고 섹션에 단락이 많은 경우 문서의 모든 단락을 간단하게 수집 할 수 있습니다. 이런 식으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91762b98054d56233edda898e227d94549207b8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many&lt;/code&gt; Association</source>
          <target state="translated">&lt;code&gt;has_many&lt;/code&gt; 협회</target>
        </trans-unit>
        <trans-unit id="f5f8222264d2a934b6a2f0314860a01f8c5dd183" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many&lt;/code&gt; association creates a one-to-many relationship with another model. In database terms, this association says that the other class will have a foreign key that refers to instances of this class.</source>
          <target state="translated">&lt;code&gt;has_many&lt;/code&gt; 의 연관은 다른 모델에 일대 다 관계를 생성한다. 데이터베이스 용어로이 연관은 다른 클래스에이 클래스의 인스턴스를 참조하는 외래 키가있을 것이라고 말합니다.</target>
        </trans-unit>
        <trans-unit id="cd4c76225002c233fb6f5aaa5ed1cb5cb57aa2e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many&lt;/code&gt; association supports these options:</source>
          <target state="translated">&lt;code&gt;has_many&lt;/code&gt; 의 협회는이 옵션을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="988b6859618033e3bb9a1f92e122ae95323801aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many_attached&lt;/code&gt; macro sets up a one-to-many relationship between records and files. Each record can have many files attached to it.</source>
          <target state="translated">&lt;code&gt;has_many_attached&lt;/code&gt; 기록과 파일 간의 일대 다 관계 매크로 설정합니다. 각 레코드에는 많은 파일이 첨부 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd6ec3cb173d0126311c08fe199fe6a9dfaad806" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one :through&lt;/code&gt; Association</source>
          <target state="translated">&lt;code&gt;has_one :through&lt;/code&gt; 협회</target>
        </trans-unit>
        <trans-unit id="17ffb0a0d0319348df4ab2443529d1f4904e218e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one&lt;/code&gt; Association</source>
          <target state="translated">&lt;code&gt;has_one&lt;/code&gt; 협회</target>
        </trans-unit>
        <trans-unit id="747dba40bbb7c673870bd76088956d8cb5402a92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one&lt;/code&gt; association creates a one-to-one match with another model. In database terms, this association says that the other class contains the foreign key. If this class contains the foreign key, then you should use &lt;code&gt;belongs_to&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;has_one&lt;/code&gt; 의 관계는 다른 모델과 일대일 대응을 만듭니다. 데이터베이스 용어로이 연관은 다른 클래스에 외래 키가 포함되어 있다고 말합니다. 이 클래스에 외래 키가 포함되어 있으면 &lt;code&gt;belongs_to&lt;/code&gt; 를 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c993fa09f4ebc59995e28ea1df0b80627218145e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one&lt;/code&gt; association supports these options:</source>
          <target state="translated">&lt;code&gt;has_one&lt;/code&gt; 의 협회는이 옵션을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="97b25b608327cbb38067515dd761a2bb2b7b5c97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one_attached&lt;/code&gt; macro sets up a one-to-one mapping between records and files. Each record can have one file attached to it.</source>
          <target state="translated">&lt;code&gt;has_one_attached&lt;/code&gt; 기록과 파일 사이의 일대일 매핑 매크로 설정합니다. 각 레코드에는 하나의 파일이 첨부 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16c2a4f91819f8b86c509d7a07ac7d73161aa050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;head&lt;/code&gt; method can be used to send responses with only headers to the browser. The &lt;code&gt;head&lt;/code&gt; method accepts a number or symbol (see &lt;a href=&quot;#the-status-option&quot;&gt;reference table&lt;/a&gt;) representing an HTTP status code. The options argument is interpreted as a hash of header names and values. For example, you can return only an error header:</source>
          <target state="translated">&lt;code&gt;head&lt;/code&gt; 방법은 브라우저 만 헤더와 응답을 보내는 데 사용할 수 있습니다. &lt;code&gt;head&lt;/code&gt; 있어서 숫자 또는 기호 (참조 허용 &lt;a href=&quot;#the-status-option&quot;&gt;기준 테이블&lt;/a&gt; HTTP 상태 코드를 나타내는). 옵션 인수는 헤더 이름과 값의 해시로 해석됩니다. 예를 들어 오류 헤더 만 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8293b26d129f95bbddddfcb98829fe4fda5149e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;helper&lt;/code&gt; class method can take a series of helper module names, a block, or both.</source>
          <target state="translated">&lt;code&gt;helper&lt;/code&gt; 클래스 메소드는 도우미 모듈 이름, 블록, 또는이 둘의 시리즈를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f30e95aaff4cf59fe2e5182f59eeb343115dbb95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;helper&lt;/code&gt; class method in controllers uses &lt;code&gt;String#constantize&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21d9b5aa0da0f73ed93d8f9453e61e0eeb514e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;helpers&lt;/code&gt;, &lt;code&gt;mailers&lt;/code&gt;, and &lt;code&gt;models&lt;/code&gt; directories are meant to hold tests for view helpers, mailers, and models, respectively. The &lt;code&gt;channels&lt;/code&gt; directory is meant to hold tests for Action Cable connection and channels. The &lt;code&gt;controllers&lt;/code&gt; directory is meant to hold tests for controllers, routes, and views. The &lt;code&gt;integration&lt;/code&gt; directory is meant to hold tests for interactions between controllers.</source>
          <target state="translated">&lt;code&gt;helpers&lt;/code&gt; , &lt;code&gt;mailers&lt;/code&gt; 및 &lt;code&gt;models&lt;/code&gt; 디렉토리는 각각보기 도우미, 우편물 및 모델에 대한 테스트를 유지하기위한 것입니다. &lt;code&gt;channels&lt;/code&gt; 디렉토리는 동작 케이블 연결 및 채널 홀드 시험을 의미한다. &lt;code&gt;controllers&lt;/code&gt; 디렉토리는 컨트롤러, 경로 및 뷰 보류 테스트하기위한 것입니다. &lt;code&gt;integration&lt;/code&gt; 디렉토리는 컨트롤러 사이의 상호 작용에 대한 보류 테스트하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="f9629cd03e80abdcaefb23ca9fc28d655daa8ff2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;created_at&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; attributes of the object are now set. Rails did this for us when we saved the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e1462ad66cf4f6068f520debadf44e4c54fe3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;image_tag&lt;/code&gt; helper builds an HTML &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/images&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;image_tag&lt;/code&gt; 도우미는 HTML 기반으로 &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; 지정된 파일에 태그를. 기본적으로 파일은 &lt;code&gt;public/images&lt;/code&gt; 에서로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="925aed193e567156d3b8bff8e407b7d17dcd02c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inclusion&lt;/code&gt; helper has an option &lt;code&gt;:in&lt;/code&gt; that receives the set of values that will be accepted. The &lt;code&gt;:in&lt;/code&gt; option has an alias called &lt;code&gt;:within&lt;/code&gt; that you can use for the same purpose, if you'd like to. The previous example uses the &lt;code&gt;:message&lt;/code&gt; option to show how you can include the attribute's value. For full options please see the &lt;a href=&quot;#message&quot;&gt;message documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;inclusion&lt;/code&gt; 도우미는 옵션이 있습니다 &lt;code&gt;:in&lt;/code&gt; 그 허용됩니다 값 세트를받습니다. 는 &lt;code&gt;:in&lt;/code&gt; 옵션라는 별칭이 &lt;code&gt;:within&lt;/code&gt; 당신이 원하는 경우, 같은 목적으로 사용할 수 있습니다. 이전 예제에서는 &lt;code&gt;:message&lt;/code&gt; 옵션을 사용 하여 속성 값을 포함하는 방법을 보여줍니다. 전체 옵션에 대해서는 &lt;a href=&quot;#message&quot;&gt;메시지 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d77d8e7832ddfe4407eeae4a6fbbf808f4ad4747" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indent!&lt;/code&gt; method performs indentation in-place.</source>
          <target state="translated">&lt;code&gt;indent!&lt;/code&gt; 메소드는 들여 쓰기를 제자리에서 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1fd731bde6a26a951b6c650ba83ab6b4ff8f3429" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; action is empty. When an action does not explicitly render a view (or otherwise trigger an HTTP response), Rails will automatically render a view that matches the name of the controller and action. Convention Over Configuration! Views are located in the &lt;code&gt;app/views&lt;/code&gt; directory. So the &lt;code&gt;index&lt;/code&gt; action will render &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3ad7510caab92f7937d91ad875fbb3e1d42e25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; action uses the &lt;code&gt;Article&lt;/code&gt; model to fetch all articles in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f94b3d78b6eb65988b0f525e0dd3017e47aeff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;info&lt;/code&gt; hash is optional, and if given is used to define metadata about the current schema (currently, only the schema's version):</source>
          <target state="translated">&lt;code&gt;info&lt;/code&gt; 해시는 선택 사항이며, 주어진 경우 현재 스키마 (현재는 스키마의 버전)에 대한 메타 데이터를 정의하는 데 사용됩니다 :</target>
        </trans-unit>
        <trans-unit id="d6043a5ac1dd3bda69ff91de1e86b4cbd79537d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize!&lt;/code&gt; method looks like this:</source>
          <target state="translated">&lt;code&gt;initialize!&lt;/code&gt; 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e815e929a8a1b21e10c40e9bae542b99fe343fcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; method in &lt;code&gt;Rack::Server&lt;/code&gt; simply sets a couple of variables:</source>
          <target state="translated">&lt;code&gt;Rack::Server&lt;/code&gt; 의 &lt;code&gt;initialize&lt;/code&gt; 메소드는 단순히 몇 가지 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="42845f280e2b722116571ccf27fe9f03241cd55f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; method in &lt;code&gt;Rack::Server&lt;/code&gt; simply sets several variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d933a4dec33afb4edf7cb6141c5ca44070aed0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; method of &lt;code&gt;Rack::Builder&lt;/code&gt; will take the block here and execute it within an instance of &lt;code&gt;Rack::Builder&lt;/code&gt;. This is where the majority of the initialization process of Rails happens. The &lt;code&gt;require&lt;/code&gt; line for &lt;code&gt;config/environment.rb&lt;/code&gt; in &lt;code&gt;config.ru&lt;/code&gt; is the first to run:</source>
          <target state="translated">&lt;code&gt;Rack::Builder&lt;/code&gt; 의 &lt;code&gt;initialize&lt;/code&gt; 메소드는 여기서 블록을 가져와 &lt;code&gt;Rack::Builder&lt;/code&gt; 인스턴스 내에서 실행합니다 . Rails의 초기화 과정이 대부분 발생합니다. (가) &lt;code&gt;require&lt;/code&gt; 에 라인을 &lt;code&gt;config/environment.rb&lt;/code&gt; 있는 &lt;code&gt;config.ru&lt;/code&gt; 실행 처음이다 :</target>
        </trans-unit>
        <trans-unit id="eb8cf7bc7fde4ca0f2119f95fa23bd1458b04a97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initializer&lt;/code&gt; method takes three arguments with the first being the name for the initializer and the second being an options hash (not shown here) and the third being a block. The &lt;code&gt;:before&lt;/code&gt; key in the options hash can be specified to specify which initializer this new initializer must run before, and the &lt;code&gt;:after&lt;/code&gt; key will specify which initializer to run this initializer &lt;em&gt;after&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;initializer&lt;/code&gt; 방법은, 먼저 초기화에 대한 이름 인 두 번째 옵션은 해시 (여기되지 않음)과 블록 인 인 세 번째 인자 걸린다. 옵션 해시 의 &lt;code&gt;:before&lt;/code&gt; 키는이 새 이니셜 라이저가 이전에 실행해야하는 이니셜 라이저를 지정하기 위해 지정 될 수 있으며 &lt;code&gt;:after&lt;/code&gt; 키는이 이니셜 라이저를 &lt;em&gt;이후&lt;/em&gt; 에 실행할 이니셜 라이저를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="0cbb628221c6b56bd4cc12f278d4d7ec1fad447e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inquiry&lt;/code&gt; method converts a string into a &lt;code&gt;StringInquirer&lt;/code&gt; object making equality checks prettier.</source>
          <target state="translated">&lt;code&gt;inquiry&lt;/code&gt; 방법은로 문자열을 변환 &lt;code&gt;StringInquirer&lt;/code&gt; 의 평등 검사가 예뻐 만드는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4368356824c1f90a719a11b26d9d2b80cca5b47a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ip_spoofing_check&lt;/code&gt; option is on by default. When on, an exception is raised if it looks like the client is trying to lie about its own IP address. It makes sense to turn off this check on sites aimed at non-IP clients (like WAP devices), or behind proxies that set headers in an incorrect or confusing way (like AWS ELB).</source>
          <target state="translated">&lt;code&gt;ip_spoofing_check&lt;/code&gt; 의 옵션은 기본적으로 켜져 있습니다. 설정하면 클라이언트가 자신의 IP 주소에 대해 거짓말을하는 것처럼 보이는 경우 예외가 발생합니다. IP 클라이언트가 아닌 클라이언트 (WAP 디바이스 등)를 대상으로하거나 AWS ELB와 같이 부정확하거나 혼동되는 방식으로 헤더를 설정 한 프록시 뒤에있는 사이트에서는이 확인을 해제하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b09401c9b414a2395b8d42f97438cccb9d785a4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isolate_namespace&lt;/code&gt; method here deserves special notice. This call is responsible for isolating the controllers, models, routes, and other things into their own namespace, away from similar components inside the application. Without this, there is a possibility that the engine's components could &quot;leak&quot; into the application, causing unwanted disruption, or that important engine components could be overridden by similarly named things within the application. One of the examples of such conflicts is helpers. Without calling &lt;code&gt;isolate_namespace&lt;/code&gt;, the engine's helpers would be included in an application's controllers.</source>
          <target state="translated">여기서 &lt;code&gt;isolate_namespace&lt;/code&gt; 메소드는 특별한주의를 기울여야 합니다. 이 호출은 컨트롤러, 모델, 라우트 및 기타 사항을 응용 프로그램 내부의 유사한 구성 요소와 별도로 고유 네임 스페이스로 격리합니다. 이것이 없으면 엔진 구성 요소가 응용 프로그램에 &quot;누설&quot;되어 원치 않는 중단이 발생하거나 응용 프로그램 내에서 비슷한 이름의 항목으로 인해 중요한 엔진 구성 요소가 재정의 될 수 있습니다. 그러한 갈등의 예 중 하나는 조력자입니다. &lt;code&gt;isolate_namespace&lt;/code&gt; 를 호출하지 않으면 엔진의 헬퍼가 애플리케이션의 컨트롤러에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="210734494bd9582718be117c54236d0ce2f71684" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javascript_include_tag&lt;/code&gt; helper returns an HTML &lt;code&gt;script&lt;/code&gt; tag for each source provided.</source>
          <target state="translated">&lt;code&gt;javascript_include_tag&lt;/code&gt; 의 도우미는 HTML 반환 &lt;code&gt;script&lt;/code&gt; 제공 각 소스에 대한 태그를.</target>
        </trans-unit>
        <trans-unit id="395b2f4e52dd2af3fff86366e9d256770074e3a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; argument can also respond to &lt;code&gt;cache_key&lt;/code&gt; or &lt;code&gt;to_param&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 인수도에 응답 할 수 있습니다 &lt;code&gt;cache_key&lt;/code&gt; 또는 &lt;code&gt;to_param&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d196e27638d0ab8144821979efc4319dd575947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last!&lt;/code&gt; method behaves exactly like &lt;code&gt;last&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="translated">&lt;code&gt;last!&lt;/code&gt; 이 메서드 는 일치하는 레코드가 없으면 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 발생 시킨다는 점을 제외하고는 정확히 &lt;code&gt;last&lt;/code&gt; 처럼 동작합니다 .</target>
        </trans-unit>
        <trans-unit id="e4f7263f68aef61de417c358848e682be43e5c06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; method finds the last record ordered by primary key (default). For example:</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; 방법은 기본 키 (기본값)으로 정렬 마지막 레코드를 찾습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="64d5bd344522049e769fc7e252235d647288a734" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; if no matching record is found and no exception will be raised.</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; 메소드가 반환 &lt;code&gt;nil&lt;/code&gt; 을 일치하는 기록이 발견되지 않고, 예외가 발생되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a629205deccecaae41339c758aaf5cab1094b60f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; may be anything that can evaluate to a string via to_s. It should look like an integer, or an Arel SQL literal.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 그리고 to_s를 통해 문자열로 평가할 수있는 일이 될 수 있습니다. 정수 또는 Arel SQL 리터럴과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="6863f1f9bdb068d9211a342efe3ace4921baf955" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; method lets you restrict the total number of objects that will be fetched through an association.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 방법은 당신이 협회를 통해 인출 될 것입니다 개체의 총 수를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93dafc5d57f7c4f2df3b95398b538516ed45fdb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link_to&lt;/code&gt; method is one of Rails' built-in view helpers. It creates a hyperlink based on text to display and where to go - in this case, to the path for articles.</source>
          <target state="translated">&lt;code&gt;link_to&lt;/code&gt; 방법은 레일 '내장에서보기 도우미 중 하나입니다. 표시 할 텍스트와 이동 위치 (이 경우 기사 경로)를 기반으로 하이퍼 링크를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d2ef0bb7823f7404afca03b304638d73f26532cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mail&lt;/code&gt; method, if not passed a block, will inspect your views and send all the views with the same name as the method, so the above action would send the &lt;code&gt;welcome.text.erb&lt;/code&gt; view file as well as the &lt;code&gt;welcome.html.erb&lt;/code&gt; view file in a &lt;code&gt;multipart/alternative&lt;/code&gt; email.</source>
          <target state="translated">&lt;code&gt;mail&lt;/code&gt; 블록을 통과하지 않으면 위의 작업이 보낼 것입니다, 그래서 방법은, 귀하의 의견을 검사하고 메소드와 같은 이름을 가진 모든 의견을 보내드립니다 &lt;code&gt;welcome.text.erb&lt;/code&gt; 뿐만 아니라보기 파일을 &lt;code&gt;welcome.html.erb&lt;/code&gt; &lt;code&gt;multipart/alternative&lt;/code&gt; 이메일로 파일을 봅니다 .</target>
        </trans-unit>
        <trans-unit id="64bef344d8bafd389738a69f91f6d48578dbc8d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;marshal_dump&lt;/code&gt; and &lt;code&gt;_dump&lt;/code&gt; methods are exempt from delegation due to possible interference when calling &lt;code&gt;Marshal.dump(object)&lt;/code&gt;, should the delegation target method of &lt;code&gt;object&lt;/code&gt; add or remove instance variables.</source>
          <target state="translated">&lt;code&gt;marshal_dump&lt;/code&gt; 및 &lt;code&gt;_dump&lt;/code&gt; 호출 할 때 위임 방법에서 간섭을 일으킬 수 있으므로 면제 &lt;code&gt;Marshal.dump(object)&lt;/code&gt; ,해야 위임 대상있어서 &lt;code&gt;object&lt;/code&gt; 추가 또는 삭제 인스턴스 변수.</target>
        </trans-unit>
        <trans-unit id="2dda7e6e1d7a859abcdcd7093c062fa329eb30a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mass_assignment_sanitizer&lt;/code&gt; configuration setting should also be added to &lt;code&gt;config/environments/test.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;mass_assignment_sanitizer&lt;/code&gt; 의 구성 설정도 추가해야합니다 &lt;code&gt;config/environments/test.rb&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1d2229bad9d20be4d5c14231e078e5bed654f193" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; parameter allows you to pass in an error message that is displayed upon failure.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 매개 변수는 실패에 표시되는 오류 메시지를 전달 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4692d88e80909e2abfa7e56cbda2dce78df9f4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module_parent&lt;/code&gt; method on a nested named module returns the module that contains its corresponding constant:</source>
          <target state="translated">중첩 된 명명 된 모듈 의 &lt;code&gt;module_parent&lt;/code&gt; 메소드는 해당 상수를 포함하는 모듈을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b955e08bb61f3588b54c4779732b1848ec4f0c42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module_parent_name&lt;/code&gt; method on a nested named module returns the fully qualified name of the module that contains its corresponding constant:</source>
          <target state="translated">중첩 된 명명 된 모듈 의 &lt;code&gt;module_parent_name&lt;/code&gt; 메소드는 해당 상수를 포함하는 모듈의 완전한 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e110b06f1da8ca5b78b8c4e2e0e1c08716055da2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;namespace&lt;/code&gt; scope will automatically add &lt;code&gt;:as&lt;/code&gt; as well as &lt;code&gt;:module&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; prefixes.</source>
          <target state="translated">&lt;code&gt;namespace&lt;/code&gt; 범위가 자동으로 추가됩니다 &lt;code&gt;:as&lt;/code&gt; 뿐만 아니라 &lt;code&gt;:module&lt;/code&gt; 과 &lt;code&gt;:path&lt;/code&gt; 접두사를.</target>
        </trans-unit>
        <trans-unit id="355b25963d736b2edf7258e1fc0e5b6a801c0c69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; action instantiates a new article, but does not save it. This article will be used in the view when building the form. By default, the &lt;code&gt;new&lt;/code&gt; action will render &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;, which we will create next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca791e115afb12d1675478a6b277d337d19197b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; action is now creating a new instance variable called &lt;code&gt;@article&lt;/code&gt;, and you'll see why that is in just a few moments.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 조치는 지금이라는 새로운 인스턴스 변수 만드는 &lt;code&gt;@article&lt;/code&gt; 을 , 그리고 그 몇 순간에 당신은 왜 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dbe1c959706ba4c12410c4ae5ad42676358e85f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;none&lt;/code&gt; method returns a chainable relation with no records. Any subsequent conditions chained to the returned relation will continue generating empty relations. This is useful in scenarios where you need a chainable response to a method or a scope that could return zero results.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; 메서드는 기록이있는 체인 방식의 관계를 반환합니다. 리턴 된 관계에 연결된 모든 후속 조건은 계속 빈 관계를 생성합니다. 이는 0 개의 결과를 반환 할 수있는 메서드 또는 범위에 대한 연결 가능한 응답이 필요한 시나리오에서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8aef3a8817f4235a86b882fb368e88d769094dc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;number_to_currency&lt;/code&gt;, &lt;code&gt;number_with_precision&lt;/code&gt;, &lt;code&gt;number_to_percentage&lt;/code&gt;, &lt;code&gt;number_with_delimiter&lt;/code&gt;, and &lt;code&gt;number_to_human_size&lt;/code&gt; helpers use the number format settings located in the &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L37&quot;&gt;number&lt;/a&gt; scope.</source>
          <target state="translated">&lt;code&gt;number_to_currency&lt;/code&gt; , &lt;code&gt;number_with_precision&lt;/code&gt; , &lt;code&gt;number_to_percentage&lt;/code&gt; , &lt;code&gt;number_with_delimiter&lt;/code&gt; 및 &lt;code&gt;number_to_human_size&lt;/code&gt; 의 도우미가에있는 숫자 형식 설정을 사용하는 &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L37&quot;&gt;번호&lt;/a&gt; 범위를.</target>
        </trans-unit>
        <trans-unit id="eb2caecbac1e3a41d5817cf394dd84287443eb03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; option can be used to directly specify which object is rendered into the partial; useful when the template's object is elsewhere (e.g. in a different instance variable or in a local variable).</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; 옵션은 직접 부분적으로 렌더링되는 오브젝트를 지정하는데 사용될 수있다; 템플릿의 객체가 다른 곳에있을 때 유용합니다 (예 : 다른 인스턴스 변수 또는 로컬 변수).</target>
        </trans-unit>
        <trans-unit id="15dc0abfaa617e737b51863f4174d38cbd829c38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; method lets you specify the starting offset for fetching objects via an association. For example, &lt;code&gt;-&amp;gt; { offset(11) }&lt;/code&gt; will skip the first 11 records.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 방법은 협회를 통해 객체를 가져 오는에 대한 개시 오프셋 (offset)를 지정할 수 있습니다. 예를 들어, &lt;code&gt;-&amp;gt; { offset(11) }&lt;/code&gt; 은 처음 11 개의 레코드를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="77c1c66e8d05e9af003c64e1262319407e478374" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; method lets you specify the starting offset for fetching objects via an association. For example, if you set &lt;code&gt;offset(11)&lt;/code&gt;, it will skip the first 11 records.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 방법은 협회를 통해 객체를 가져 오는에 대한 개시 오프셋 (offset)를 지정할 수 있습니다. 예를 들어, &lt;code&gt;offset(11)&lt;/code&gt; 을 설정 하면 처음 11 개 레코드를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="f2fd7c57aa0e10956a4792e2c96ade737d0ddde6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; are passed directly to the &lt;code&gt;belongs_to&lt;/code&gt; call, so this is where you declare &lt;code&gt;dependent&lt;/code&gt; etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4b71e152963d17b925de3d6e47ccc8b5fcaee8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same keys as &lt;a href=&quot;../schemastatements#method-i-add_check_constraint&quot;&gt;add_check_constraint&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82334672065635b4f19c688accdc8a95575615a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same keys as &lt;a href=&quot;schemastatements#method-i-add_foreign_key&quot;&gt;#add_foreign_key&lt;/a&gt; with an addition of</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 해시는 같은 키를 받아 &lt;a href=&quot;schemastatements#method-i-add_foreign_key&quot;&gt;#add_foreign_key을&lt;/a&gt; 의 추가와 함께</target>
        </trans-unit>
        <trans-unit id="04f51111630e91a4806eb1d5da55e3df6ddbb68f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same keys as &lt;a href=&quot;schemastatements#method-i-add_foreign_key&quot;&gt;&lt;code&gt;SchemaStatements#add_foreign_key&lt;/code&gt;&lt;/a&gt; with an addition of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f26f90bfe39c40f22dd7d79c62cd21ab2dd6b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same keys as SchemaStatements#add_foreign_key.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 해시 SchemaStatements 번호의 add_foreign_key과 같은 키를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="233878fefa4f6993f4e6f5ec1818e5bb0379fab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same options as &lt;code&gt;url_for&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 해시와 같은 옵션을 받아 &lt;code&gt;url_for&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="1bef9f9982c6deff18008de93564cb624e7ea8c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash can be used with attributes with no value like (&lt;code&gt;disabled&lt;/code&gt; and &lt;code&gt;readonly&lt;/code&gt;), which you can give a value of true in the &lt;code&gt;options&lt;/code&gt; hash. You can use symbols or strings for the attribute names.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 해시 (같은 값없이 속성을 사용할 수 있습니다 &lt;code&gt;disabled&lt;/code&gt; 및 &lt;code&gt;readonly&lt;/code&gt; 당신이에 true 값을 제공 할 수 있습니다), &lt;code&gt;options&lt;/code&gt; 해시. 속성 이름에 기호 또는 문자열을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f258ac1e3cd63f1069683f25d07a803b0e381bdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash can include the following keys:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 해시는 다음 키를 포함 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="88b2044b2765a19a12f430e88806032c881746a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash is passed downwards:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 해시 통과 아래입니다 :</target>
        </trans-unit>
        <trans-unit id="52b8a463e8a7b937f0e298a783a9634891e4d51e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter takes a hash with any of these keys: &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, &lt;code&gt;:hours&lt;/code&gt;, &lt;code&gt;:minutes&lt;/code&gt;, &lt;code&gt;:seconds&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 이 키 중 하나와 해시를 취 매개 변수 : &lt;code&gt;:years&lt;/code&gt; , &lt;code&gt;:months&lt;/code&gt; , &lt;code&gt;:weeks&lt;/code&gt; , &lt;code&gt;:days&lt;/code&gt; , &lt;code&gt;:hours&lt;/code&gt; , &lt;code&gt;:minutes&lt;/code&gt; , &lt;code&gt;:seconds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5159943b41f8754e74b0dcfeee4e2c01bede8a26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options[:config]&lt;/code&gt; value defaults to &lt;code&gt;config.ru&lt;/code&gt; which contains this:</source>
          <target state="translated">&lt;code&gt;options[:config]&lt;/code&gt; 에 대한 디폴트 값은 &lt;code&gt;config.ru&lt;/code&gt; 이 포함되어 있습니다 :</target>
        </trans-unit>
        <trans-unit id="81355a8a084d3ec1d4336bde462d2bfcb0e6803f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;order&lt;/code&gt; method dictates the order in which associated objects will be received (in the syntax used by an SQL &lt;code&gt;ORDER BY&lt;/code&gt; clause).</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; 방법 지시 (AN SQL에서 사용되는 구문에 관련 오브젝트가 수신되는 순서 &lt;code&gt;ORDER BY&lt;/code&gt; 의 절).</target>
        </trans-unit>
        <trans-unit id="0f58260847673fd06f904238242c4986e4cabccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parallelize_setup&lt;/code&gt; method is called right after the processes are forked. The &lt;code&gt;parallelize_teardown&lt;/code&gt; method is called right before the processes are closed.</source>
          <target state="translated">&lt;code&gt;parallelize_setup&lt;/code&gt; 의 프로세스가 포크 후 방법은 바로 호출된다. &lt;code&gt;parallelize_teardown&lt;/code&gt; 의 프로세스가 종료되기 전에 방법은 바로 호출된다.</target>
        </trans-unit>
        <trans-unit id="99d07f59c39ca0960a8e1e3fd108379947f6f596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; hash is not limited to one-dimensional keys and values. It can contain nested arrays and hashes. To send an array of values, append an empty pair of square brackets &quot;[]&quot; to the key name:</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 해시 일차원 키와 값에 한정되지 않는다. 중첩 배열과 해시를 포함 할 수 있습니다. 값의 배열을 보내려면 키 쌍에 빈 대괄호 &quot;[]&quot;쌍을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6239b1c09f5aaaa54cafda9b1a57b0fa6ebf7e0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; hash will always contain the &lt;code&gt;:controller&lt;/code&gt; and &lt;code&gt;:action&lt;/code&gt; keys, but you should use the methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/Metal.html#method-i-controller_name&quot;&gt;&lt;code&gt;controller_name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/AbstractController/Base.html#method-i-action_name&quot;&gt;&lt;code&gt;action_name&lt;/code&gt;&lt;/a&gt; instead to access these values. Any other parameters defined by the routing, such as &lt;code&gt;:id&lt;/code&gt;, will also be available. As an example, consider a listing of clients where the list can show either active or inactive clients. We can add a route which captures the &lt;code&gt;:status&lt;/code&gt; parameter in a &quot;pretty&quot; URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc658a3f446cb8a8a972e259ffe7e8b1d0c86ff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; hash will always contain the &lt;code&gt;:controller&lt;/code&gt; and &lt;code&gt;:action&lt;/code&gt; keys, but you should use the methods &lt;code&gt;controller_name&lt;/code&gt; and &lt;code&gt;action_name&lt;/code&gt; instead to access these values. Any other parameters defined by the routing, such as &lt;code&gt;:id&lt;/code&gt;, will also be available. As an example, consider a listing of clients where the list can show either active or inactive clients. We can add a route which captures the &lt;code&gt;:status&lt;/code&gt; parameter in a &quot;pretty&quot; URL:</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 해시는 항상 포함됩니다 &lt;code&gt;:controller&lt;/code&gt; 및 &lt;code&gt;:action&lt;/code&gt; 키를,하지만 당신은 방법을 사용해야합니다 &lt;code&gt;controller_name&lt;/code&gt; 과 &lt;code&gt;action_name&lt;/code&gt; 액세스 대신이 값을. 라우팅에 의해 정의 된 다른 매개 변수 (예 &lt;code&gt;:id&lt;/code&gt; )도 사용할 수 있습니다. 예를 들어, 목록이 활성 또는 비활성 클라이언트를 표시 할 수있는 클라이언트 목록을 고려하십시오. &quot;pretty&quot;URL에서 &lt;code&gt;:status&lt;/code&gt; 매개 변수 를 캡처하는 경로를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebe6591f871aeb257c13a5ccdbc3912607f65b19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; object acts like a Hash, but lets you use symbols and strings interchangeably as keys.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 객체는 해시 같은 역할을하지만 키로 상호 교환 기호와 문자열을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ffa62b0f52258df4b98f9c2d2c5c49d327c41e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; will also include any parameters from the query string. For example, with this route:</source>
          <target state="translated">이 &lt;code&gt;params&lt;/code&gt; 변수에는 쿼리 문자열의 매개 변수도 포함됩니다. 예를 들어이 경로를 사용하면</target>
        </trans-unit>
        <trans-unit id="460759985e7c91f3604cb13e28098a536fedbec9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; change makes Sprockets use a different URL for serving assets in development mode, and pass all requests to Sprockets. The prefix is still set to &lt;code&gt;/assets&lt;/code&gt; in the production environment. Without this change, the application would serve the precompiled assets from &lt;code&gt;/assets&lt;/code&gt; in development, and you would not see any local changes until you compile assets again.</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; 변화는 톱니가 개발 모드에 자산을 제공하기위한 다른 URL을 사용하고, 톱니에 대한 모든 요청을 전달합니다. 프로덕션 환경에서는 접두사가 여전히 &lt;code&gt;/assets&lt;/code&gt; 로 설정되어 있습니다. 이 변경 사항이 없으면 응용 프로그램은 개발중인 &lt;code&gt;/assets&lt;/code&gt; 에서 사전 컴파일 된 자산을 제공하므로 자산을 다시 컴파일 할 때까지 로컬 변경 사항이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d191a69b7f80bba0c53acf74330c66d5f3045a7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;presence&lt;/code&gt; method returns its receiver if &lt;code&gt;present?&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. It is useful for idioms like this:</source>
          <target state="translated">&lt;code&gt;presence&lt;/code&gt; 방법은 수신기의 경우 반환 &lt;code&gt;present?&lt;/code&gt; 그리고는 &lt;code&gt;nil&lt;/code&gt; , 그렇지. 다음과 같은 관용구에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="30aac7526a4d04e818ddc2edd7f3e6feeabd5821" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;production&lt;/code&gt; environment is used when you deploy your application for the world to use.</source>
          <target state="translated">&lt;code&gt;production&lt;/code&gt; 이 사용하는 세계에 대한 응용 프로그램을 배포 할 때 환경이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6b2604ea7c0d6684b35fc204cfb671e038ba1657" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protected_attributes&lt;/code&gt; gem is no longer supported in Rails 5.</source>
          <target state="translated">&lt;code&gt;protected_attributes&lt;/code&gt; 의 보석은 더 이상 레일 (5)에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8019779e958edd656a6bbbb8f4e51c5112725eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails db:migrate&lt;/code&gt; command needs to be run here to ensure that our application has the &lt;code&gt;users&lt;/code&gt; table for future use.</source>
          <target state="translated">&lt;code&gt;rails db:migrate&lt;/code&gt; 명령은 우리의 응용 프로그램이 있는지 확인하려면 여기를 실행해야하는 &lt;code&gt;users&lt;/code&gt; 향후 사용을 위해 테이블을.</target>
        </trans-unit>
        <trans-unit id="5d810de5c7cf4f0510f5cb85c0a4fc14508e6078" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails db:reset&lt;/code&gt; command will drop the database and set it up again. This is functionally equivalent to &lt;code&gt;rails db:drop db:setup&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails db:reset&lt;/code&gt; 명령은 데이터베이스를 삭제하고 다시 설정합니다. 이것은 기능적으로 &lt;code&gt;rails db:drop db:setup&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a745961032af95b5ffc9718dee6cf39a9435fe19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails db:setup&lt;/code&gt; command will create the database, load the schema, and initialize it with the seed data.</source>
          <target state="translated">&lt;code&gt;rails db:setup&lt;/code&gt; 명령이 스키마를 데이터베이스를 생성로드 및 종자 데이터를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f753b17b3a855c5b955535febb622c728d3a01a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails generate&lt;/code&gt; command uses templates to create a whole lot of things. Running &lt;code&gt;rails generate&lt;/code&gt; by itself gives a list of available generators:</source>
          <target state="translated">&lt;code&gt;rails generate&lt;/code&gt; 명령을 사용하는 템플릿 사물의 전체를 많이 만들 수 있습니다. 실행 &lt;code&gt;rails generate&lt;/code&gt; 가능한 발전기의 목록은 그 자체로 제공합니다</target>
        </trans-unit>
        <trans-unit id="e10bc93faabcae783aad93be82a9263c515fe6a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails server&lt;/code&gt; command launches a web server named Puma which comes bundled with Rails. You'll use this any time you want to access your application through a web browser.</source>
          <target state="translated">는 &lt;code&gt;rails server&lt;/code&gt; 명령 출시 레일과 함께 제공되는 푸마라는 이름의 웹 서버를. 웹 브라우저를 통해 응용 프로그램에 액세스하려는 경우 언제든지이 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="856e7d1a72bb43c8034a0eeba1725262865a59b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails&lt;/code&gt; in the command &lt;code&gt;rails server&lt;/code&gt; is a ruby executable in your load path. This executable contains the following lines:</source>
          <target state="translated">&lt;code&gt;rails&lt;/code&gt; 명령에는 &lt;code&gt;rails server&lt;/code&gt; 부하 경로에서 루비 실행 파일입니다. 이 실행 파일에는 다음 줄이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f73a8a72ff4008b41a69bd7ae69aa453d80578d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw&lt;/code&gt; helper calls &lt;code&gt;html_safe&lt;/code&gt; for you:</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; 도우미 호출 &lt;code&gt;html_safe&lt;/code&gt; 당신을 위해 :</target>
        </trans-unit>
        <trans-unit id="4ff579f13be9f5a047f32881693454aef1037470" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; helper can also cache individual templates rendered for a collection. It can even one up the previous example with &lt;code&gt;each&lt;/code&gt; by reading all cache templates at once instead of one by one. This is done by passing &lt;code&gt;cached: true&lt;/code&gt; when rendering the collection:</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 도우미는 또한 컬렉션에 대한 렌더링 개별 템플릿을 캐시 할 수 있습니다. 모든 캐시 템플릿을 &lt;code&gt;each&lt;/code&gt; 읽지 않고 한 번에 하나씩 읽어서 이전 예제를 하나로 만들 수도 있습니다 . 컬렉션을 렌더링 할 때 &lt;code&gt;cached: true&lt;/code&gt; 를 전달 하면됩니다.</target>
        </trans-unit>
        <trans-unit id="165f3b8f711d92b6cd136faa486fafc9b24bb7c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method can do without a view completely, if you're willing to use the &lt;code&gt;:inline&lt;/code&gt; option to supply ERB as part of the method call. This is perfectly valid:</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 당신이 사용하고자하는 경우 방법은 완전히보기없이 할 수 &lt;code&gt;:inline&lt;/code&gt; 메서드 호출의 일부로 공급 ERB에 대한 옵션을 선택합니다. 이것은 완벽하게 유효합니다 :</target>
        </trans-unit>
        <trans-unit id="733a882de1c1e6400a9cfd13f2c40a35ce15c94c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method here is taking a very simple hash with a key of &lt;code&gt;:plain&lt;/code&gt; and value of &lt;code&gt;params[:article].inspect&lt;/code&gt;. The &lt;code&gt;params&lt;/code&gt; method is the object which represents the parameters (or fields) coming in from the form. The &lt;code&gt;params&lt;/code&gt; method returns an &lt;code&gt;ActionController::Parameters&lt;/code&gt; object, which allows you to access the keys of the hash using either strings or symbols. In this situation, the only parameters that matter are the ones from the form.</source>
          <target state="translated">여기서 &lt;code&gt;render&lt;/code&gt; 메소드는 &lt;code&gt;:plain&lt;/code&gt; 키 와 &lt;code&gt;params[:article].inspect&lt;/code&gt; 값으로 매우 간단한 해시를 사용합니다 . &lt;code&gt;params&lt;/code&gt; 있어서, 상기 파라미터들 (또는 필드)의 형태에서 들어오는 나타내는 오브젝트이다. &lt;code&gt;params&lt;/code&gt; 방법을 다시 표시 &lt;code&gt;ActionController::Parameters&lt;/code&gt; 는 문자열 또는 기호를 사용하여 해시의 키에 액세스 할 수 있도록 객체. 이 상황에서 중요한 매개 변수는 양식의 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="215859271da22edb5037c0e406abee5b2136db7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reorder&lt;/code&gt; method overrides the default scope order. For example:</source>
          <target state="translated">&lt;code&gt;reorder&lt;/code&gt; 방법은 기본 범위 순서를 무시합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="82d41c6ec3db0472c61f038efb37182e6f5618fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request&lt;/code&gt; Object</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="4cde4b61de54df6c90bf6be6006a2191eeb28f5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;require_tree&lt;/code&gt; directive tells Sprockets to recursively include &lt;em&gt;all&lt;/em&gt; JavaScript files in the specified directory into the output. These paths must be specified relative to the manifest file. You can also use the &lt;code&gt;require_directory&lt;/code&gt; directive which includes all JavaScript files only in the directory specified, without recursion.</source>
          <target state="translated">&lt;code&gt;require_tree&lt;/code&gt; 의 지시어는 반복적으로 포함에 톱니 알려줍니다 &lt;em&gt;모든&lt;/em&gt; 출력에 지정된 디렉토리에 자바 스크립트 파일을. 이러한 경로는 매니페스트 파일을 기준으로 지정해야합니다. 또한 재귀없이 지정된 디렉토리에서만 모든 JavaScript 파일을 포함 하는 &lt;code&gt;require_directory&lt;/code&gt; 지시문을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bcb8dba4bd5390bf4a1e6a4ef6c8f64056e4c8a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reselect&lt;/code&gt; method overrides an existing select statement. For example:</source>
          <target state="translated">&lt;code&gt;reselect&lt;/code&gt; 방법은 기존 SELECT 문을 무시합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="511dd58b52c6e6960c4e97f83646beb31c3362f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resolve&lt;/code&gt; method allows customizing polymorphic mapping of models. For example:</source>
          <target state="translated">&lt;code&gt;resolve&lt;/code&gt; 방법은 모델의 다형성 매핑을 사용자 정의 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="63f3eec81f17e5e67ba595ae4eb7658100a782ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resources&lt;/code&gt; method also sets up URL and path helper methods that we can use to keep our code from depending on a specific route configuration. The values in the &quot;Prefix&quot; column above plus a suffix of &lt;code&gt;_url&lt;/code&gt; or &lt;code&gt;_path&lt;/code&gt; form the names of these helpers. For example, the &lt;code&gt;article_path&lt;/code&gt; helper returns &lt;code&gt;&quot;/articles/#{article.id}&quot;&lt;/code&gt; when given an article. We can use it to tidy up our links in &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719208d2b6dc747a9f7d5a078cd40cb087cd1d1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; Object</source>
          <target state="translated">&lt;code&gt;response&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="cf7a7cbbd0cd00939772258d2249a2957170d034" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse_order&lt;/code&gt; method accepts &lt;strong&gt;no&lt;/strong&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd966c2717d53315097ee93b83209f36ff780fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse_order&lt;/code&gt; method reverses the ordering clause if specified.</source>
          <target state="translated">&lt;code&gt;reverse_order&lt;/code&gt; 지정한 경우 방법은 주문 절을 반전시킵니다.</target>
        </trans-unit>
        <trans-unit id="6178a7a6ac2036a9eff7c4ec9e4e239cdf56392b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;revert&lt;/code&gt; method also accepts a block of instructions to reverse. This could be useful to revert selected parts of previous migrations. For example, let's imagine that &lt;code&gt;ExampleMigration&lt;/code&gt; is committed and it is later decided it would be best to use Active Record validations, in place of the &lt;code&gt;CHECK&lt;/code&gt; constraint, to verify the zipcode.</source>
          <target state="translated">&lt;code&gt;revert&lt;/code&gt; 방법은 리버스 명령들의 블록을 받아 들인다. 이전 마이그레이션에서 선택한 부분을 되 돌리는 데 유용 할 수 있습니다. 예를 들어 &lt;code&gt;ExampleMigration&lt;/code&gt; 이 커밋되고 나중에 &lt;code&gt;CHECK&lt;/code&gt; 제약 조건 대신 Active Record 유효성 검사 를 사용하여 우편 번호를 확인하는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="974d37374d8c671ae8578960538e6a04b18e04d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;revert&lt;/code&gt; method can be helpful when writing a new migration to undo previous migrations in whole or in part (see &lt;a href=&quot;#reverting-previous-migrations&quot;&gt;Reverting Previous Migrations&lt;/a&gt; above).</source>
          <target state="translated">&lt;code&gt;revert&lt;/code&gt; 의 전부 또는 일부를 취소 이전 마이그레이션 (참조에 대한 새로운 마이그레이션을 작성할 때 방법은 도움이 될 수 있습니다 &lt;a href=&quot;#reverting-previous-migrations&quot;&gt;이전 마이그레이션 되돌리기&lt;/a&gt; 위).</target>
        </trans-unit>
        <trans-unit id="9d205c768adeae2ccae3ad6686e3cb7311fe2147" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rewhere&lt;/code&gt; method overrides an existing, named where condition. For example:</source>
          <target state="translated">&lt;code&gt;rewhere&lt;/code&gt; 의 방법은이 곳 조건이라는 기존보다 우선합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb49cc4771c30e552fbd32c7086499f40195d7a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root&lt;/code&gt; route only routes &lt;code&gt;GET&lt;/code&gt; requests to the action.</source>
          <target state="translated">&lt;code&gt;root&lt;/code&gt; 경로는 노선 &lt;code&gt;GET&lt;/code&gt; 작업 요청을.</target>
        </trans-unit>
        <trans-unit id="a6ed7f28279db3db360582e45431b41c1011f54e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_initializers&lt;/code&gt; code itself is tricky. What Rails is doing here is traversing all the class ancestors looking for those that respond to an &lt;code&gt;initializers&lt;/code&gt; method. It then sorts the ancestors by name, and runs them. For example, the &lt;code&gt;Engine&lt;/code&gt; class will make all the engines available by providing an &lt;code&gt;initializers&lt;/code&gt; method on them.</source>
          <target state="translated">&lt;code&gt;run_initializers&lt;/code&gt; 의 코드 자체는 까다 롭습니다. Rails가 여기서하는 일은 &lt;code&gt;initializers&lt;/code&gt; 메소드에 응답하는 클래스를 찾는 모든 클래스 조상을 순회하는 것입니다 . 그런 다음 조상을 이름별로 정렬하고 실행합니다. 예를 들어 &lt;code&gt;Engine&lt;/code&gt; 클래스는 &lt;code&gt;initializers&lt;/code&gt; 메소드를 제공하여 모든 엔진을 사용할 수있게 합니다.</target>
        </trans-unit>
        <trans-unit id="029bbe250a2a951e17d3262b18bb5fb66ea4e28c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass-rails&lt;/code&gt; gem is automatically used for CSS compression if included in the &lt;code&gt;Gemfile&lt;/code&gt; and no &lt;code&gt;config.assets.css_compressor&lt;/code&gt; option is set.</source>
          <target state="translated">&lt;code&gt;sass-rails&lt;/code&gt; 에 포함하면 보석이 자동으로 CSS 압축에 사용되는 &lt;code&gt;Gemfile&lt;/code&gt; 더 &lt;code&gt;config.assets.css_compressor&lt;/code&gt; 의 옵션이 설정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d45c792f31fe05e604435719cd4e528a90aadad4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; method lets you override the SQL &lt;code&gt;SELECT&lt;/code&gt; clause that is used to retrieve data about the associated object. By default, Rails retrieves all columns.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 방법을 사용하면 SQL 재정의 할 수 &lt;code&gt;SELECT&lt;/code&gt; 의 관련 개체에 대한 데이터를 검색하는 데 사용되는 절을. 기본적으로 Rails는 모든 열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="470ede3c07878b0d5ce0cac029155fb229ceb42a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; method lets you override the SQL &lt;code&gt;SELECT&lt;/code&gt; clause that is used to retrieve data about the associated objects. By default, Rails retrieves all columns.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; 방법을 사용하면 SQL 재정의 할 수 &lt;code&gt;SELECT&lt;/code&gt; 의 관련 개체에 대한 데이터를 검색하는 데 사용되는 절을. 기본적으로 Rails는 모든 열을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="b01a0de3c555c240ce70e23c379248155e06194a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select_*&lt;/code&gt; family of helpers take as their first argument an instance of &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, or &lt;code&gt;DateTime&lt;/code&gt; that is used as the currently selected value. You may omit this parameter, in which case the current date is used. For example:</source>
          <target state="translated">&lt;code&gt;select_*&lt;/code&gt; 헬퍼의 가족은 자신의 첫 번째 인수로의 인스턴스 걸릴 &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; , 또는 &lt;code&gt;DateTime&lt;/code&gt; 현재 선택된 값으로 사용됩니다. 이 매개 변수를 생략 할 수 있으며이 경우 현재 날짜가 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c0fce4263ad3a09537727fcc8146f97ac64f72c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selected&lt;/code&gt; parameter must be either &lt;code&gt;nil&lt;/code&gt;, or a string that names an &lt;a href=&quot;../../activesupport/timezone&quot;&gt;&lt;code&gt;ActiveSupport::TimeZone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aefbcedb30dbd6567f5253a1883f41b650dd429" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selected&lt;/code&gt; parameter must be either &lt;code&gt;nil&lt;/code&gt;, or a string that names an &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport::TimeZone&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;selected&lt;/code&gt; 매개 변수이어야합니다 &lt;code&gt;nil&lt;/code&gt; , 또는 문자열 이름을한다는 &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport :: 시간대&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe848ea6858d33fcfc6cf7ec8404c22fe8dfbfa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;send_early_hints&lt;/code&gt; method accepts a hash of links as follows:</source>
          <target state="translated">&lt;code&gt;send_early_hints&lt;/code&gt; 의 메서드는 다음과 같이 링크의 해시를 허용합니다</target>
        </trans-unit>
        <trans-unit id="c9bcd16a96b262d3703aada51fe66fc8fe1da0c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_author&lt;/code&gt; method in the &lt;code&gt;Blorgh::Article&lt;/code&gt; model should also use this class:</source>
          <target state="translated">&lt;code&gt;Blorgh::Article&lt;/code&gt; 모델 의 &lt;code&gt;set_author&lt;/code&gt; 메소드 도이 클래스를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9679ebab247813d491583d5018968660c55b1778" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shallow&lt;/code&gt; method of the DSL creates a scope inside of which every nesting is shallow. This generates the same routes as the previous example:</source>
          <target state="translated">DSL 의 &lt;code&gt;shallow&lt;/code&gt; 방법은 모든 중첩이 얕은 범위를 만듭니다. 이전 예제와 동일한 경로가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c5374fc7bad63600340a2b984649ccead588c324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;show&lt;/code&gt; action calls &lt;code&gt;Article.find&lt;/code&gt; (&lt;a href=&quot;#using-a-model-to-interact-with-the-database&quot;&gt;mentioned previously&lt;/a&gt;) with the ID captured by the route parameter. The returned article is stored in the &lt;code&gt;@article&lt;/code&gt; instance variable, so it is accessible by the view. By default, the &lt;code&gt;show&lt;/code&gt; action will render &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e78e6f176cdc03622a61cf9b3a5939510e015d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; method returns the total number of error messages for the object.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 방법은 개체에 대한 오류 메시지의 총 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="95c466b813160a5869745b4a5f52af18d2406394" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; method returns the total number of errors for the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f18ffe49ae279bf3e247c1494d4d00a3a47c779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sql&lt;/code&gt; parameter is a full SQL query as a string. It will be called as is; there will be no database agnostic conversions performed. This should be a last resort because using database-specific terms will lock you into using that particular database engine, or require you to change your call if you switch engines.</source>
          <target state="translated">&lt;code&gt;sql&lt;/code&gt; 매개 변수는 문자열로 전체 SQL 쿼리입니다. 그대로 호출됩니다. 데이터베이스에 관계없이 변환이 수행되지 않습니다. 데이터베이스 별 용어를 사용하면 특정 데이터베이스 엔진을 사용할 수 없게되거나 엔진을 전환 할 경우 통화를 변경해야하므로 이는 최후의 수단입니다.</target>
        </trans-unit>
        <trans-unit id="2a062066953843612e152a13726a2313a4f7cf25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;finish&lt;/code&gt; values above represent monotonic time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfde4023b23558d22805ba408ab66eade83d7fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; option allows specifying the beginning ID from where records will be selected. As mentioned before, by default records are fetched in ascending order of the primary key. For example, to retrieve customers starting on ID: 5000 in batches of 2500 records, the following code can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23aaaa02a8a9386d5ad24467ff74665edeeaf0b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stylesheet_link_tag&lt;/code&gt; helper returns an HTML &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag for each source provided.</source>
          <target state="translated">&lt;code&gt;stylesheet_link_tag&lt;/code&gt; 의 도우미는 HTML 반환 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 제공 각 소스에 대한 태그를.</target>
        </trans-unit>
        <trans-unit id="194dc076a7d69a7c21f87fdbade43b55cb03d20f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subclasses&lt;/code&gt; method returns the subclasses of the receiver:</source>
          <target state="translated">&lt;code&gt;subclasses&lt;/code&gt; 방법은 수신기의 서브 클래스를 반환</target>
        </trans-unit>
        <trans-unit id="f1fb13cdbd34f03a4ed8b6202e3d52f897527006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribe&lt;/code&gt; method returns a subscriber object:</source>
          <target state="translated">는 &lt;code&gt;subscribe&lt;/code&gt; 메서드가 반환을 가입자 개체를 :</target>
        </trans-unit>
        <trans-unit id="7517e8f69a3f11d6bf2dd894424b71961e16e85c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;super&lt;/code&gt; method will call &lt;code&gt;Rack::Server.start&lt;/code&gt; which begins its definition as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4813ab4f370a4419f11fbfacb67109254c7695b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;super&lt;/code&gt; method will call &lt;code&gt;Rack::Server.start&lt;/code&gt; which begins its definition like this:</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; 방법은 호출 &lt;code&gt;Rack::Server.start&lt;/code&gt; 다음과 같이 정의를 시작합니다 :</target>
        </trans-unit>
        <trans-unit id="039af7b58f5bcb13ffe0355e617b6f338974c393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;t.references&lt;/code&gt; line creates an integer column called &lt;code&gt;article_id&lt;/code&gt;, an index for it, and a foreign key constraint that points to the &lt;code&gt;id&lt;/code&gt; column of the &lt;code&gt;articles&lt;/code&gt; table. Go ahead and run the migration:</source>
          <target state="translated">&lt;code&gt;t.references&lt;/code&gt; 의 라인라는 정수 열 생성 &lt;code&gt;article_id&lt;/code&gt; 를 , 그것을 위해 인덱스 및 포인트가 외래 키 제약 &lt;code&gt;id&lt;/code&gt; 의 칼럼 &lt;code&gt;articles&lt;/code&gt; 테이블을. 계속해서 마이그레이션을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="552b36d59c2f885f1540170dd6ce5d223e1ad9f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take!&lt;/code&gt; method behaves exactly like &lt;code&gt;take&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="translated">&lt;code&gt;take!&lt;/code&gt; 이 메소드 는 일치하는 레코드가 없으면 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 발생 시킨다는 점을 제외하고 &lt;code&gt;take&lt;/code&gt; 와 정확히 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="3d867d8e76972eed1ca32771f86e357e8946bbff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take&lt;/code&gt; method retrieves a record without any implicit ordering. For example:</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; 메서드는 암시 적 순서없이 기록을 검색합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ab23d40b84da426b638ca1624e56d7bbde28a7b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; if no record is found and no exception will be raised.</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; 메소드가 반환 &lt;code&gt;nil&lt;/code&gt; 을 더 기록이 발견되지 않고, 예외가 발생되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83836a7d3a3d29f487e62b58a8e7d0c925e91944" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take_screenshot&lt;/code&gt; helper method can be included anywhere in your tests to take a screenshot of the browser.</source>
          <target state="translated">&lt;code&gt;take_screenshot&lt;/code&gt; 의 도우미 메서드는 브라우저의 스크린 샷을 당신의 시험에서 어느 곳을 포함 할 수있다.</target>
        </trans-unit>
        <trans-unit id="186f978915d5da16498fc2a31ce5738b6e7a61d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; result set is not loaded until needed. For example,</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 필요할 때까지 결과 세트가로드되지 않습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="d6caaddc3c48d3dbe705a48fef1cd8c4ce0ede76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; directory is where tests for the engine will go. To test the engine, there is a cut-down version of a Rails application embedded within it at &lt;code&gt;test/dummy&lt;/code&gt;. This application will mount the engine in the &lt;code&gt;test/dummy/config/routes.rb&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 엔진에 대한 테스트가 갈 곳 디렉토리입니다. 엔진을 테스트하기 위해 test &lt;code&gt;test/dummy&lt;/code&gt; 엔진 내에 포함 된 Rails 애플리케이션의 컷 다운 버전이 있습니다. 이 응용 프로그램은 엔진을 &lt;code&gt;test/dummy/config/routes.rb&lt;/code&gt; 파일에 마운트 합니다.</target>
        </trans-unit>
        <trans-unit id="b71371631fafbfc0ff3a4609264ec18900eb44ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; directory should be treated like a typical Rails testing environment, allowing for unit, functional, and integration tests.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 디렉토리는 전형적인 레일, 환경 시험 장치, 기능 및 통합 테스트를 허용처럼 취급되어야한다.</target>
        </trans-unit>
        <trans-unit id="5004018241d9fedd09f648b2beaf6672bc5926c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; environment is used when running automated tests.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 자동화 된 테스트를 실행할 때 환경이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cd770f311d6bb1e03d0ab6b309f15428d9f10e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test_helper.rb&lt;/code&gt; file holds the default configuration for your tests.</source>
          <target state="translated">&lt;code&gt;test_helper.rb&lt;/code&gt; 의 파일은 테스트의 기본 구성을 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="b45bff0931d256831572e50dafddadbd42b3679c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tmp:&lt;/code&gt; namespaced commands will help you clear and create the &lt;code&gt;Rails.root/tmp&lt;/code&gt; directory:</source>
          <target state="translated">&lt;code&gt;tmp:&lt;/code&gt; 네임 스페이스 명령은 취소 돕고 만듭니다 &lt;code&gt;Rails.root/tmp&lt;/code&gt; 디렉토리를 :</target>
        </trans-unit>
        <trans-unit id="1ea0aa9f98de14affd66ef910261ea292d087ab3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;to_s&lt;/code&gt; method from the Time class can be wrapped in a helper method to display a custom message if a Time object is blank:</source>
          <target state="translated">Time 클래스 의 &lt;code&gt;to_s&lt;/code&gt; 메소드는 Time 오브젝트가 비어있는 경우 사용자 정의 메시지를 표시하기 위해 헬퍼 메소드로 랩핑 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48dfe3a8392aaf7467b50e78ee4608869d75ff1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;translate&lt;/code&gt; method also takes a &lt;code&gt;:scope&lt;/code&gt; option which can contain one or more additional keys that will be used to specify a &quot;namespace&quot; or scope for a translation key:</source>
          <target state="translated">또한 &lt;code&gt;translate&lt;/code&gt; 메소드는 &lt;code&gt;:scope&lt;/code&gt; 옵션을 사용하는데, 여기에는 &quot;namespace&quot;또는 번역 키의 범위를 지정하는 데 사용되는 하나 이상의 추가 키가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e7b91934dd423361fe5b4d7f4c04cecdccaab4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;traps&lt;/code&gt; association on &lt;code&gt;Dungeon&lt;/code&gt; and the &lt;code&gt;dungeon&lt;/code&gt; association on &lt;code&gt;Trap&lt;/code&gt; are the inverse of each other, and the inverse of the &lt;code&gt;dungeon&lt;/code&gt; association on &lt;code&gt;EvilWizard&lt;/code&gt; is the &lt;code&gt;evil_wizard&lt;/code&gt; association on &lt;code&gt;Dungeon&lt;/code&gt; (and vice-versa). By default, Active Record can guess the inverse of the association based on the name of the class. The result is the following:</source>
          <target state="translated">&lt;code&gt;traps&lt;/code&gt; 에 연관 &lt;code&gt;Dungeon&lt;/code&gt; 과 &lt;code&gt;dungeon&lt;/code&gt; 에 연관 &lt;code&gt;Trap&lt;/code&gt; 서로 반대이고, 상기의 역 &lt;code&gt;dungeon&lt;/code&gt; 에 연관 &lt;code&gt;EvilWizard&lt;/code&gt; 은 은 IS &lt;code&gt;evil_wizard&lt;/code&gt; 의 에 연관 &lt;code&gt;Dungeon&lt;/code&gt; (반대로). 기본적으로 Active Record는 클래스 이름을 기준으로 연관의 역수를 추측 할 수 있습니다. 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6724829cb876053437c8424b093188cf287267b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trix&lt;/code&gt; stylesheet should be imported into &lt;code&gt;actiontext.scss&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23653461ee89c6237ceb36c9426d4bea3907534" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters will be ignored if present. It can be helpful to provide these in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; will be used by &lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;&lt;code&gt;add_column&lt;/code&gt;&lt;/a&gt;. Indexes on the column are automatically removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b608af069145d7a1a229cd8736c90ecbb1e2808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters will be ignored if present. It can be helpful to provide these in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; will be used by &lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;add_column&lt;/a&gt;. Indexes on the column are automatically removed.</source>
          <target state="translated">존재하는 경우 &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 매개 변수는 무시됩니다. 이를 마이그레이션의 &lt;code&gt;change&lt;/code&gt; 방법 으로 제공하면 되돌릴 수 있습니다. 이 경우 &lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;add_column&lt;/a&gt; 에서 &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;options&lt;/code&gt; 을 사용합니다 . 열의 색인이 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="74f20ebf68e4d50c0c1c19380093127edbdf2148" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is normally one of the migrations native types, which is one of the following: &lt;code&gt;:primary_key&lt;/code&gt;, &lt;code&gt;:string&lt;/code&gt;, &lt;code&gt;:text&lt;/code&gt;, &lt;code&gt;:integer&lt;/code&gt;, &lt;code&gt;:bigint&lt;/code&gt;, &lt;code&gt;:float&lt;/code&gt;, &lt;code&gt;:decimal&lt;/code&gt;, &lt;code&gt;:numeric&lt;/code&gt;, &lt;code&gt;:datetime&lt;/code&gt;, &lt;code&gt;:time&lt;/code&gt;, &lt;code&gt;:date&lt;/code&gt;, &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:boolean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; : 매개 변수는 일반적으로 마이그레이션 기본 다음 중 하나입니다 유형 중 하나입니다 &lt;code&gt;:primary_key&lt;/code&gt; 와 , &lt;code&gt;:string&lt;/code&gt; , &lt;code&gt;:text&lt;/code&gt; , &lt;code&gt;:integer&lt;/code&gt; , &lt;code&gt;:bigint&lt;/code&gt; , &lt;code&gt;:float&lt;/code&gt; , &lt;code&gt;:decimal&lt;/code&gt; , &lt;code&gt;:numeric&lt;/code&gt; , &lt;code&gt;:datetime&lt;/code&gt; , &lt;code&gt;:time&lt;/code&gt; , &lt;code&gt;:date&lt;/code&gt; , &lt;code&gt;:binary&lt;/code&gt; , &lt;code&gt;:boolean&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3140800d394b93c0a01e479e1118f21de654888d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; action (re-)fetches the article from the database, and attempts to update it with the submitted form data filtered by &lt;code&gt;article_params&lt;/code&gt;. If no validations fail and the update is successful, the action redirects the browser to the article's page. Else, the action redisplays the form, with error messages, by rendering &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909c1e2f7e1700ca721bfb300acd87916d137b8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;users&lt;/code&gt; resource here will have the following routes generated for it:</source>
          <target state="translated">여기에 있는 &lt;code&gt;users&lt;/code&gt; 리소스에는 다음과 같은 경로가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="7b64979286dc25c90c1549f6b8c3de8ea8f19a2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valid?&lt;/code&gt; method will verify that the errors collection is empty, so your custom validation methods should add errors to it when you wish validation to fail:</source>
          <target state="translated">&lt;code&gt;valid?&lt;/code&gt; 메소드는 오류 콜렉션이 비어 있는지 확인하므로 사용자 정의 유효성 검증 메소드는 유효성 검증에 실패하려는 경우 오류를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="51da5d2d391d1141e0b796d1f1e389987efeacf9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validates_with&lt;/code&gt; helper takes a class, or a list of classes to use for validation. There is no default error message for &lt;code&gt;validates_with&lt;/code&gt;. You must manually add errors to the record's errors collection in the validator class.</source>
          <target state="translated">&lt;code&gt;validates_with&lt;/code&gt; 의 도우미 클래스를 취하거나, 클래스의 목록 확인을 위해 사용하는. &lt;code&gt;validates_with&lt;/code&gt; 에 대한 기본 오류 메시지는 없습니다 . 유효성 검증기 클래스의 레코드 오류 콜렉션에 수동으로 오류를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="7223765fdb4392dac5134b286d36fda58b5447c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;var&lt;/code&gt; method is the most convenient way to show variables and their values. Let's have &lt;code&gt;byebug&lt;/code&gt; help us with it.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 방법은 변수와 값을 표시하는 가장 편리한 방법입니다. 의가 보자 &lt;code&gt;byebug&lt;/code&gt; 그것으로 도움이 우리를.</target>
        </trans-unit>
        <trans-unit id="db56453ade5f0bcdfd93cb86efe38e07aeea201a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;video_tag&lt;/code&gt; helper builds an HTML 5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/videos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;video_tag&lt;/code&gt; 의 도우미는 HTML 5 기반으로 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 지정된 파일에 태그를. 기본적으로 파일은 &lt;code&gt;public/videos&lt;/code&gt; 에서로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="786f5cd577d9cf7c08731cfd3c22f2b4d08a4b01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method allows you to specify conditions to limit the records returned, representing the &lt;code&gt;WHERE&lt;/code&gt;-part of the SQL statement. Conditions can either be specified as a string, array, or hash.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 방법은 당신이 나타내는 레코드가 반환 제한하는 조건을 지정할 수 있습니다 &lt;code&gt;WHERE&lt;/code&gt; part의 SQL 문을. 조건은 문자열, 배열 또는 해시로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05a4f9cbdfb67dd3d7071bbe8edd4c8495a28fff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method lets you specify the conditions that the associated object must meet.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 방법은 당신이 연관된 객체가 충족해야하는 조건을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c19f48c1a86ef523c124f8954e3c372f6c11764a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; methods on this cache accept two additional options that take advantage of features specific to memcached. You can specify &lt;code&gt;:raw&lt;/code&gt; to send a value directly to the server with no serialization. The value must be a string or number. You can use memcached direct operations like &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt; only on raw values. You can also specify &lt;code&gt;:unless_exist&lt;/code&gt; if you don't want memcached to overwrite an existing entry.</source>
          <target state="translated">이 캐시 의 &lt;code&gt;write&lt;/code&gt; 및 &lt;code&gt;fetch&lt;/code&gt; 메소드는 memcached 관련 기능을 이용하는 두 가지 추가 옵션을 허용합니다. 직렬화없이 서버로 직접 값을 보내려면 &lt;code&gt;:raw&lt;/code&gt; 를 지정할 수 있습니다 . 값은 문자열 또는 숫자 여야합니다. 원시 값에 대해서만 &lt;code&gt;increment&lt;/code&gt; 및 &lt;code&gt;decrement&lt;/code&gt; 와 같은 memcached 직접 조작을 사용할 수 있습니다 . memcached가 기존 항목을 덮어 쓰지 않게하려면 &lt;code&gt;:unless_exist&lt;/code&gt; 를 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="afa4bfe437a4fc0805dd6be42774dd49262312e4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;nesting&lt;/em&gt; at any given place is the collection of enclosing nested class and module objects outwards. The nesting at any given place can be inspected with &lt;code&gt;Module.nesting&lt;/code&gt;. For example, in the previous example, the nesting at (1) is</source>
          <target state="translated">&lt;em&gt;중첩&lt;/em&gt; 주어진 장소에서 중첩 클래스를 둘러싸의 수집과 모듈은 바깥쪽으로 객체. 특정 장소에서의 중첩은 &lt;code&gt;Module.nesting&lt;/code&gt; 으로 검사 할 수 있습니다 . 예를 들어, 이전 예에서 (1)의 중첩은</target>
        </trans-unit>
        <trans-unit id="c5a3ef47071c621cb202c268e30836a0a9eec39c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;translations load path&lt;/strong&gt; (&lt;code&gt;I18n.load_path&lt;/code&gt;) is an array of paths to files that will be loaded automatically. Configuring this path allows for customization of translations directory structure and file naming scheme.</source>
          <target state="translated">&lt;strong&gt;번역 부하 경로&lt;/strong&gt; ( &lt;code&gt;I18n.load_path&lt;/code&gt; 는 ) 자동으로로드 될 파일 경로의 배열이다. 이 경로를 구성하면 변환 디렉토리 구조 및 파일 이름 지정 체계를 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c8e2c108ab1661c368de4fb28ecc573b8e018ab" translate="yes" xml:space="preserve">
          <source>The API for supporting horizontal sharding in Rails is similar to the multiple database / vertical sharding API that's existed since Rails 6.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d5174bea0411f873c2bb5dd4bc4ed345931f0a" translate="yes" xml:space="preserve">
          <source>The API has the same methods as &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;, but each method returns a string that matches the ORM API.</source>
          <target state="translated">API에는 &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt; 와 동일한 메소드가 있지만 각 메소드는 ORM API와 일치하는 문자열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="55e793a2888b49a29894bdca339ead6c9fe679c8" translate="yes" xml:space="preserve">
          <source>The Accept header to send.</source>
          <target state="translated">보낼 Accept 헤더입니다.</target>
        </trans-unit>
        <trans-unit id="6d5f016001371703e3307c75f0487c4b68163b8b" translate="yes" xml:space="preserve">
          <source>The Action Cable JavaScript package has been converted from CoffeeScript to ES2015, and we now publish the source code in the npm distribution.</source>
          <target state="translated">Action Cable JavaScript 패키지가 CoffeeScript에서 ES2015로 변환되었으며, 이제 npm 배포판에 소스 코드를 게시합니다.</target>
        </trans-unit>
        <trans-unit id="d4cdb1176348337a161b520cc8ddf9d538ca5295" translate="yes" xml:space="preserve">
          <source>The Action Cable server implements the Rack socket hijacking API, thereby allowing the use of a multithreaded pattern for managing connections internally, irrespective of whether the application server is multi-threaded or not.</source>
          <target state="translated">Action Cable 서버는 랙 소켓 하이재킹 API를 구현하여 애플리케이션 서버가 멀티 스레드인지 여부에 관계없이 내부적으로 연결을 관리하기 위해 멀티 스레드 패턴을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c476dfe6844359be0597b529c523d1db0da895f" translate="yes" xml:space="preserve">
          <source>The Active Record Pattern</source>
          <target state="translated">활성 레코드 패턴</target>
        </trans-unit>
        <trans-unit id="c991c23e383794b1a2ce5fb6ec92d816927cb078" translate="yes" xml:space="preserve">
          <source>The Active Record pattern implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Method_chaining&quot;&gt;Method Chaining&lt;/a&gt;, which allow us to use multiple Active Record methods together in a simple and straightforward way.</source>
          <target state="translated">Active Record 패턴은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Method_chaining&quot;&gt;Method Chaining을&lt;/a&gt; 구현 하여 단순하고 간단한 방식으로 여러 Active Record 메소드를 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0878293154da66102be3276c6af12ef4384d6b2d" translate="yes" xml:space="preserve">
          <source>The Active Record way claims that intelligence belongs in your models, not in the database. As such, features such as triggers or constraints, which push some of that intelligence back into the database, are not heavily used.</source>
          <target state="translated">Active Record 방식은 지능이 데이터베이스가 아닌 모델에 속한다고 주장합니다. 따라서 일부 인텔리전스를 데이터베이스로 다시 가져 오는 트리거 또는 제약 조건과 같은 기능은 많이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="437d5c829ecb969158193552a1e5f1fcea031bd9" translate="yes" xml:space="preserve">
          <source>The Article model is directly available to users of the application, so - following the best practices for developing with Rails - you should declare it &lt;strong&gt;a resource&lt;/strong&gt;:</source>
          <target state="translated">기사 모델은 애플리케이션 사용자가 직접 사용할 수 있으므로 Rails로 개발하기위한 모범 사례에 &lt;strong&gt;따라 리소스를&lt;/strong&gt; 선언해야 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="62aeb8f445266c127d5322b7e3e47469fab89364" translate="yes" xml:space="preserve">
          <source>The Asset Pipeline</source>
          <target state="translated">자산 파이프 라인</target>
        </trans-unit>
        <trans-unit id="bf015d4f3767ea2825797ed8725414de46523dc4" translate="yes" xml:space="preserve">
          <source>The Async adapter runs jobs with an in-process thread pool.</source>
          <target state="translated">비동기 어댑터는 프로세스 중 스레드 풀로 작업을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="fa08b5bc17bc0e5cf864e09a2b41bfab03da6a03" translate="yes" xml:space="preserve">
          <source>The Atom spec defines five elements (content rights title subtitle summary) which may directly contain xhtml content if type: 'xhtml' is specified as an attribute. If so, this helper will take care of the enclosing div and xhtml namespace declaration. Example usage:</source>
          <target state="translated">Atom 스펙은 type : 'xhtml'이 속성으로 지정된 경우 xhtml 컨텐츠를 직접 포함 할 수있는 5 가지 요소 (콘텐츠 권리 제목 자막 요약)를 정의합니다. 그렇다면이 도우미는 둘러싸는 div 및 xhtml 네임 스페이스 선언을 처리합니다. 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="f2059d1c5a7ee7ea550ab849fa2357509e7e68c2" translate="yes" xml:space="preserve">
          <source>The Basic Configuration</source>
          <target state="translated">기본 구성</target>
        </trans-unit>
        <trans-unit id="7e1ba6fb909a534eed2ef634c34f5b5fb5818eb5" translate="yes" xml:space="preserve">
          <source>The Basics of Creating Rails Plugins</source>
          <target state="translated">Rails 플러그인 생성의 기초</target>
        </trans-unit>
        <trans-unit id="cd15cbd8be53475b1988d013b85b6bbc6577b599" translate="yes" xml:space="preserve">
          <source>The CDN you provisioned should give you a custom subdomain for your application such as &lt;code&gt;mycdnsubdomain.fictional-cdn.com&lt;/code&gt; (note fictional-cdn.com is not a valid CDN provider at the time of this writing). Now that you have configured your CDN server, you need to tell browsers to use your CDN to grab assets instead of your Rails server directly. You can do this by configuring Rails to set your CDN as the asset host instead of using a relative path. To set your asset host in Rails, you need to set &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; in &lt;code&gt;config/environments/production.rb&lt;/code&gt;:</source>
          <target state="translated">프로비저닝 한 CDN은 &lt;code&gt;mycdnsubdomain.fictional-cdn.com&lt;/code&gt; 과 같이 응용 프로그램에 대한 사용자 지정 하위 도메인을 제공해야합니다 (이 문서 작성 시점에서 fictional-cdn.com은 유효한 CDN 공급자가 아닙니다). CDN 서버를 구성 했으므로 CDN을 사용하여 Rails 서버 대신 자산을 가져 오도록 브라우저에 지시해야합니다. 상대 경로를 사용하는 대신 CDN을 자산 호스트로 설정하도록 Rails를 구성하여이를 수행 할 수 있습니다. Rails에서 자산 호스트를 설정하려면 &lt;code&gt;config/environments/production.rb&lt;/code&gt; 에서 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 를 설정해야합니다 :</target>
        </trans-unit>
        <trans-unit id="9fe05366f0b627c2df9a51d6ac648e9c91a6bdc0" translate="yes" xml:space="preserve">
          <source>The CDN you provisioned should give you a custom subdomain for your application such as &lt;code&gt;mycdnsubdomain.fictional-cdn.com&lt;/code&gt; (note fictional-cdn.com is not a valid CDN provider at the time of this writing). Now that you have configured your CDN server, you need to tell browsers to use your CDN to grab assets instead of your Rails server directly. You can do this by configuring Rails to set your CDN as the asset host instead of using a relative path. To set your asset host in Rails, you need to set &lt;code&gt;config.asset_host&lt;/code&gt; in &lt;code&gt;config/environments/production.rb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81392c8289de98f90b53fc390efe8b4af5493be" translate="yes" xml:space="preserve">
          <source>The Chars object tries to be as interchangeable with &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; objects as possible: sorting and comparing between &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; and Char work like expected. The bang! methods change the internal string representation in the Chars object. Interoperability problems can be resolved easily with a &lt;code&gt;to_s&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cea6c7fe74b0f93c1f9ab54fa152d0c2e279f8e" translate="yes" xml:space="preserve">
          <source>The Chars object tries to be as interchangeable with &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; objects as possible: sorting and comparing between &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; and Char work like expected. The bang! methods change the internal string representation in the Chars object. Interoperability problems can be resolved easily with a &lt;code&gt;to_s&lt;/code&gt; call.</source>
          <target state="translated">Chars 객체는 가능한 한 &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; 객체 와 상호 교환이 가능합니다. &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; 과 Char의 정렬 및 비교는 예상대로 작동합니다. 쾅! 메소드는 Chars 객체의 내부 문자열 표현을 변경합니다. &lt;code&gt;to_s&lt;/code&gt; 호출로 상호 운용성 문제를 쉽게 해결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="03e12ed22cac9637ee0a620316efab5b04dd783a" translate="yes" xml:space="preserve">
          <source>The Comment model</source>
          <target state="translated">댓글 모델</target>
        </trans-unit>
        <trans-unit id="61562e3418ad09bfee7afa928e1cdff150afeb86" translate="yes" xml:space="preserve">
          <source>The Comments controller</source>
          <target state="translated">댓글 컨트롤러</target>
        </trans-unit>
        <trans-unit id="238e63febc701a9b94f9f64b1bc7f8600b013b00" translate="yes" xml:space="preserve">
          <source>The Configuration instance used to configure the Rails environment</source>
          <target state="translated">Rails 환경을 구성하는 데 사용되는 구성 인스턴스</target>
        </trans-unit>
        <trans-unit id="80e5bda96278b404ea778422412db8e1453da854" translate="yes" xml:space="preserve">
          <source>The Content-Type header returned in the response can differ from what Rails 6.0 returned, more specifically if your application uses &lt;code&gt;respond_to { |format| format.any }&lt;/code&gt;. The Content-Type will now be based on the given block rather than the request's format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a1adaa03161aa757dfdd7900a0e22880fc1a32" translate="yes" xml:space="preserve">
          <source>The Context</source>
          <target state="translated">문맥</target>
        </trans-unit>
        <trans-unit id="650fce6a189ad476c932744182820a86cd85c4ed" translate="yes" xml:space="preserve">
          <source>The Controller</source>
          <target state="translated">컨트롤러</target>
        </trans-unit>
        <trans-unit id="e37cd191bc90ccf488a78e204b6fc81493a5691d" translate="yes" xml:space="preserve">
          <source>The CookieStore can store around 4kB of data - much less than the others - but this is usually enough. Storing large amounts of data in the session is discouraged no matter which session store your application uses. You should especially avoid storing complex objects (anything other than basic Ruby objects, the most common example being model instances) in the session, as the server might not be able to reassemble them between requests, which will result in an error.</source>
          <target state="translated">CookieStore는 다른 것보다 훨씬 적은 약 4kB의 데이터를 저장할 수 있지만 일반적으로 충분합니다. 응용 프로그램이 사용하는 세션 저장소에 관계없이 세션에 많은 양의 데이터를 저장하지 않는 것이 좋습니다. 서버가 요청간에 객체를 다시 어셈블 할 수 없으므로 오류가 발생할 수 있으므로 세션에 복잡한 객체 (기본 Ruby 객체 이외의 다른 모델, 가장 일반적인 예는 모델 인스턴스)를 저장하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="86eff91d59ca64665a2213ad359d3b128048b761" translate="yes" xml:space="preserve">
          <source>The CookieStore can store around 4kB of data - much less than the others - but this is usually enough. Storing large amounts of data in the session is discouraged no matter which session store your application uses. You should especially avoid storing complex objects (such as model instances) in the session, as the server might not be able to reassemble them between requests, which will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388ca69f840860706f49139a7e82fe3c50fa738a" translate="yes" xml:space="preserve">
          <source>The DOM class convention is to use the singular form of an object or class.</source>
          <target state="translated">DOM 클래스 규칙은 객체 또는 클래스의 단일 형식을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b84555bfbd95f52af7de1fb3b917316088e87148" translate="yes" xml:space="preserve">
          <source>The DOM id convention is to use the singular form of an object or class with the id following an underscore. If no id is found, prefix with &amp;ldquo;new_&amp;rdquo; instead.</source>
          <target state="translated">DOM id 규칙은 밑줄 다음에 id가있는 단일 형식의 객체 또는 클래스를 사용하는 것입니다. 아이디가 없으면 대신 &quot;new_&quot;를 접두사로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="014b99805115373da3292429d6b5602d56b4cc92" translate="yes" xml:space="preserve">
          <source>The Default 500 and 404 Templates</source>
          <target state="translated">기본 500 및 404 템플릿</target>
        </trans-unit>
        <trans-unit id="92a7fa0dee4d5e230991e27d9bfc308cea86ce43" translate="yes" xml:space="preserve">
          <source>The ERB code in the view is evaluated to output HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd403f7a8d76d19d9bb9d3ded23ba251e716e1e" translate="yes" xml:space="preserve">
          <source>The Executor always has important work to do, like database connection management. When &lt;code&gt;cache_classes&lt;/code&gt; and &lt;code&gt;eager_load&lt;/code&gt; are both true (&lt;code&gt;production&lt;/code&gt;), no autoloading or class reloading will occur, so it does not need the Load Interlock. If either of those are false (&lt;code&gt;development&lt;/code&gt;), then the Executor will use the Load Interlock to ensure constants are only loaded when it is safe.</source>
          <target state="translated">Executor는 데이터베이스 연결 관리와 같은 중요한 작업을 항상 수행합니다. 때 &lt;code&gt;cache_classes&lt;/code&gt; 및 &lt;code&gt;eager_load&lt;/code&gt; 이 모두 사실 (있는 &lt;code&gt;production&lt;/code&gt; )는로드 연동을 필요로하지 않도록, 더 자동 로딩 또는 클래스 다시로드가 발생하지 않습니다. 둘 중 하나라도 거짓 인 경우 ( &lt;code&gt;development&lt;/code&gt; ), Executor는 Load Interlock을 사용하여 상수가 안전 할 때만로드되도록합니다.</target>
        </trans-unit>
        <trans-unit id="75336e82f6983b96195933e136772c6606001209" translate="yes" xml:space="preserve">
          <source>The Executor automatically acquires a &lt;code&gt;running&lt;/code&gt; lock for the duration of its block, and autoload knows when to upgrade to a &lt;code&gt;load&lt;/code&gt; lock, and switch back to &lt;code&gt;running&lt;/code&gt; again afterwards.</source>
          <target state="translated">Executor 는 블록 기간 동안 자동으로 &lt;code&gt;running&lt;/code&gt; 잠금을 획득하고 , 자동 &lt;code&gt;load&lt;/code&gt; 는 로드 잠금 으로 업그레이드 할시기를 알고 나중에 다시 &lt;code&gt;running&lt;/code&gt; 전환 합니다.</target>
        </trans-unit>
        <trans-unit id="e9f08908119107f5db3031447da1ce37388431b6" translate="yes" xml:space="preserve">
          <source>The Executor consists of two callbacks: &lt;code&gt;to_run&lt;/code&gt; and &lt;code&gt;to_complete&lt;/code&gt;. The Run callback is called before the application code, and the Complete callback is called after.</source>
          <target state="translated">실행기는 두 개의 콜백 ( &lt;code&gt;to_run&lt;/code&gt; 및 &lt;code&gt;to_complete&lt;/code&gt; )으로 구성 됩니다. Run 콜백은 응용 프로그램 코드보다 먼저 호출되고 Complete 콜백은 이후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="45a617537bd07da4443c0b99fc8d1f05a6994528" translate="yes" xml:space="preserve">
          <source>The Executor is safely re-entrant; if it is already active on the current thread, &lt;code&gt;wrap&lt;/code&gt; is a no-op.</source>
          <target state="translated">집행자는 안전하게 재진입한다. 현재 스레드에서 이미 활성화 된 경우 &lt;code&gt;wrap&lt;/code&gt; 은 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8fb3b8ff046a74e5630fe92937b42561babff75e" translate="yes" xml:space="preserve">
          <source>The Executor will put the current thread into &lt;code&gt;running&lt;/code&gt; mode in the Load Interlock. This operation will block temporarily if another thread is currently either autoloading a constant or unloading/reloading the application.</source>
          <target state="translated">Executor는 현재 쓰레드를 Load Interlock에서 &lt;code&gt;running&lt;/code&gt; 모드 로 전환합니다. 다른 스레드가 현재 상수를 자동로드하거나 응용 프로그램을 언로드 / 재로드하는 경우이 작업은 일시적으로 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="fa4a43b8bf736684e934066bbea210768dd1dd1a" translate="yes" xml:space="preserve">
          <source>The Feature-Policy header has been renamed to Permissions-Policy. The Permissions-Policy requires a different implementation and isn't yet supported by all browsers. To avoid having to rename this middleware in the future we use the new name for the middleware but keep the old header name and implementation for now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2505bfbdb161d7a745f8f681afd58a70fea8e2e1" translate="yes" xml:space="preserve">
          <source>The Flash</source>
          <target state="translated">플래시</target>
        </trans-unit>
        <trans-unit id="acb817e66f48334fcea25df1629a6dc4c5749d27" translate="yes" xml:space="preserve">
          <source>The Gartner Group, however, estimates that 75% of attacks are at the web application layer, and found out &quot;that out of 300 audited sites, 97% are vulnerable to attack&quot;. This is because web applications are relatively easy to attack, as they are simple to understand and manipulate, even by the lay person.</source>
          <target state="translated">그러나 가트너 그룹은 75 %의 공격이 웹 애플리케이션 계층에 있다고 추정하고 &quot;감사 한 300 개의 사이트 중 97 %가 공격에 취약하다&quot;는 사실을 발견했습니다. 이것은 평범한 사람조차 이해하기 쉽고 조작하기 쉬운 웹 응용 프로그램을 비교적 공격하기 쉽기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="72c8a581a8b0fe9bb67d895a76de753b4c5d3c55" translate="yes" xml:space="preserve">
          <source>The HTML generated for this would be (modulus formatting):</source>
          <target state="translated">이를 위해 생성 된 HTML은 다음과 같습니다 (모듈러스 형식화).</target>
        </trans-unit>
        <trans-unit id="5edfbd463ec7bca173f09112f6284f3dbbc7cfb4" translate="yes" xml:space="preserve">
          <source>The HTML generated for this would be:</source>
          <target state="translated">이를 위해 생성 된 HTML은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="50f731bf3cc87314f9c9f75bec0eb8bea16e0b6f" translate="yes" xml:space="preserve">
          <source>The HTML specification says unchecked check boxes are not successful, and thus web browsers do not send them. Unfortunately this introduces a gotcha: if an &lt;code&gt;Invoice&lt;/code&gt; model has a &lt;code&gt;paid&lt;/code&gt; flag, and in the form that edits a paid invoice the user unchecks its check box, no &lt;code&gt;paid&lt;/code&gt; parameter is sent. So, any mass-assignment idiom like</source>
          <target state="translated">HTML 사양에서는 선택하지 않은 확인란이 실패하여 웹 브라우저가이를 보내지 않는다고 말합니다. 불행하게도 이것은 &lt;code&gt;Invoice&lt;/code&gt; 도입합니다. 송장 모델에 &lt;code&gt;paid&lt;/code&gt; 플래그가 있고 유료 송장을 편집하는 형식으로 사용자가 해당 확인란의 선택을 취소하면 &lt;code&gt;paid&lt;/code&gt; 매개 변수가 전송 되지 않습니다 . 따라서 질량 할당 관용구는</target>
        </trans-unit>
        <trans-unit id="01dc141b6d496b878e8e7ebe0606ccd209357e04" translate="yes" xml:space="preserve">
          <source>The HTML specification says when &lt;code&gt;multiple&lt;/code&gt; parameter passed to select and all options got deselected web browsers do not send any value to server. Unfortunately this introduces a gotcha: if a &lt;code&gt;User&lt;/code&gt; model has many &lt;code&gt;roles&lt;/code&gt; and have &lt;code&gt;role_ids&lt;/code&gt; accessor, and in the form that edits roles of the user the user deselects all roles from &lt;code&gt;role_ids&lt;/code&gt; multiple select box, no &lt;code&gt;role_ids&lt;/code&gt; parameter is sent. So, any mass-assignment idiom like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561b8f280fcf9fe1d7be986e8c7bf7171b53ad45" translate="yes" xml:space="preserve">
          <source>The HTML specification says when &lt;code&gt;multiple&lt;/code&gt; parameter passed to select and all options got deselected web browsers do not send any value to server. Unfortunately this introduces a gotcha: if an &lt;code&gt;User&lt;/code&gt; model has many &lt;code&gt;roles&lt;/code&gt; and have &lt;code&gt;role_ids&lt;/code&gt; accessor, and in the form that edits roles of the user the user deselects all roles from &lt;code&gt;role_ids&lt;/code&gt; multiple select box, no &lt;code&gt;role_ids&lt;/code&gt; parameter is sent. So, any mass-assignment idiom like</source>
          <target state="translated">HTML 사양에 따르면 &lt;code&gt;multiple&lt;/code&gt; 매개 변수가 select에 전달되고 모든 옵션이 선택 취소 된 경우 웹 브라우저가 서버에 값을 보내지 않습니다. 불행히도 이것은 &lt;code&gt;User&lt;/code&gt; 모델에 많은 &lt;code&gt;roles&lt;/code&gt; 있고 &lt;code&gt;role_ids&lt;/code&gt; 접근자가있는 경우 사용자의 역할을 편집하는 형식으로 &lt;code&gt;role_ids&lt;/code&gt; 다중 선택 상자 에서 모든 역할을 선택 취소하면 &lt;code&gt;role_ids&lt;/code&gt; 매개 변수가 전송 되지 않습니다 . 따라서 질량 할당 관용구는</target>
        </trans-unit>
        <trans-unit id="3f0041908b4b4bfd5dd709624c1e43cb18c24394" translate="yes" xml:space="preserve">
          <source>The HTML specification says when nothing is selected on a collection of radio buttons web browsers do not send any value to server. Unfortunately this introduces a gotcha: if a &lt;code&gt;User&lt;/code&gt; model has a &lt;code&gt;category_id&lt;/code&gt; field and in the form no category is selected, no &lt;code&gt;category_id&lt;/code&gt; parameter is sent. So, any strong parameters idiom like:</source>
          <target state="translated">HTML 사양에 따르면 라디오 버튼 모음에서 아무것도 선택하지 않으면 웹 브라우저는 서버에 값을 보내지 않습니다. 유감스럽게도 &lt;code&gt;User&lt;/code&gt; 모델에 &lt;code&gt;category_id&lt;/code&gt; 필드가 있고 범주가 선택되지 않은 형식 인 경우 &lt;code&gt;category_id&lt;/code&gt; 매개 변수가 전송 되지 않습니다 . 따라서 강력한 매개 변수 관용구는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f9671636efea31cc6fb67c1628270deba9f54723" translate="yes" xml:space="preserve">
          <source>The HTTP method used for the request.</source>
          <target state="translated">요청에 사용 된 HTTP 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="8438c391a65a4d84a0a1b9361d30e878c7739074" translate="yes" xml:space="preserve">
          <source>The HTTP protocol basically provides two main types of requests - GET and POST (DELETE, PUT, and PATCH should be used like POST). The World Wide Web Consortium (W3C) provides a checklist for choosing HTTP GET or POST:</source>
          <target state="translated">HTTP 프로토콜은 기본적으로 GET 및 POST의 두 가지 주요 요청 유형을 제공합니다 (DELETE, PUT 및 PATCH는 POST와 같이 사용해야 함). W3C (World Wide Web Consortium)는 HTTP GET 또는 POST를 선택하기위한 점검 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f6151c5f4ec17089bb792c86658138e1ec1847e3" translate="yes" xml:space="preserve">
          <source>The HTTP status code for the response, like 200 for a successful request or 404 for file not found.</source>
          <target state="translated">성공적인 요청의 경우 200 또는 파일의 경우 404와 같은 응답의 HTTP 상태 코드입니다.</target>
        </trans-unit>
        <trans-unit id="00d3a26093b532d414271679dbec9e6e2a73f34f" translate="yes" xml:space="preserve">
          <source>The HTTP status code.</source>
          <target state="translated">HTTP 상태 코드</target>
        </trans-unit>
        <trans-unit id="c869f06c0412e1c18b764dcdd4db3189abeed4c4" translate="yes" xml:space="preserve">
          <source>The HTTP verb used (if the route doesn't respond to all verbs)</source>
          <target state="translated">사용 된 HTTP 동사 (경로가 모든 동사에 응답하지 않는 경우)</target>
        </trans-unit>
        <trans-unit id="58b72fee534ffa7b9863e14bb030a14129cf1689" translate="yes" xml:space="preserve">
          <source>The I18n API defines the following exceptions that will be raised by backends when the corresponding unexpected conditions occur:</source>
          <target state="translated">I18n API는 해당 예기치 않은 조건이 발생할 때 백엔드에서 발생하는 다음 예외를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="3f776bc1e6f04254a055047cf44eb1ce42e19b30" translate="yes" xml:space="preserve">
          <source>The I18n API described in this guide is primarily intended for translating interface strings. If you are looking to translate model content (e.g. blog posts), you will need a different solution to help with this.</source>
          <target state="translated">이 안내서에 설명 된 I18n API는 주로 인터페이스 문자열을 번역하기위한 것입니다. 모델 컨텐츠 (예 : 블로그 게시물)를 번역하려는 경우이를 위해 다른 솔루션이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b84fdeefd4f3de8bdbe34a4d9309382548aacc9a" translate="yes" xml:space="preserve">
          <source>The I18n API will catch all of these exceptions when they are thrown in the backend and pass them to the default_exception_handler method. This method will re-raise all exceptions except for &lt;code&gt;MissingTranslationData&lt;/code&gt; exceptions. When a &lt;code&gt;MissingTranslationData&lt;/code&gt; exception has been caught, it will return the exception's error message string containing the missing key/scope.</source>
          <target state="translated">I18n API는 백엔드에서 throw 될 때 이러한 예외를 모두 포착하여 default_exception_handler 메소드로 전달합니다. 이 메소드는 &lt;code&gt;MissingTranslationData&lt;/code&gt; 예외를 제외한 모든 예외를 다시 발생시킵니다. 때 &lt;code&gt;MissingTranslationData&lt;/code&gt; 의 예외가 잡힌되었습니다, 그것은 누락 된 키 / 범위를 포함하는 예외의 오류 메시지 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5176c661f763c5f64792b55880936106ad4867fd" translate="yes" xml:space="preserve">
          <source>The I18n gem provides a Pluralization backend that can be used to enable locale-specific rules. Include it to the Simple backend, then add the localized pluralization algorithms to translation store, as &lt;code&gt;i18n.plural.rule&lt;/code&gt;.</source>
          <target state="translated">I18n gem은 로캘 별 규칙을 활성화하는 데 사용할 수있는 Pluralization 백엔드를 제공합니다. 이를 단순 백엔드에 포함시킨 다음 현지화 된 복수화 알고리즘을 번역 저장소에 &lt;code&gt;i18n.plural.rule&lt;/code&gt; 로 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ffc295b865af5f7e8df8aa5588c7c113e36461b" translate="yes" xml:space="preserve">
          <source>The I18n library will use &lt;strong&gt;English&lt;/strong&gt; as a &lt;strong&gt;default locale&lt;/strong&gt;, i.e. if a different locale is not set, &lt;code&gt;:en&lt;/code&gt; will be used for looking up translations.</source>
          <target state="translated">I18n 라이브러리는 &lt;strong&gt;영어&lt;/strong&gt; 를 &lt;strong&gt;기본 로케일로 사용합니다&lt;/strong&gt; . 즉, 다른 로케일이 설정되지 않은 경우 &lt;code&gt;:en&lt;/code&gt; 이 번역을 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="78001ab8dd2e74a370f820afc118839e328baae4" translate="yes" xml:space="preserve">
          <source>The IP address of the client making the request can be used to infer the client's region and thus their locale. Services such as &lt;a href=&quot;http://www.maxmind.com/app/geolitecountry&quot;&gt;GeoIP Lite Country&lt;/a&gt; or gems like &lt;a href=&quot;https://github.com/alexreisner/geocoder&quot;&gt;geocoder&lt;/a&gt; can be used to implement this approach.</source>
          <target state="translated">요청을하는 클라이언트의 IP 주소는 클라이언트의 지역 및 그 로케일을 유추하는 데 사용될 수 있습니다. &lt;a href=&quot;http://www.maxmind.com/app/geolitecountry&quot;&gt;GeoIP Lite Country&lt;/a&gt; 와 같은 서비스 또는 &lt;a href=&quot;https://github.com/alexreisner/geocoder&quot;&gt;geocoder&lt;/a&gt; 와 같은 gem을 사용하여이 방법을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3fc261360a76b743e82f1c59ab21837cd1b4510" translate="yes" xml:space="preserve">
          <source>The IP address of the client.</source>
          <target state="translated">클라이언트의 IP 주소</target>
        </trans-unit>
        <trans-unit id="805cd68838c38454ac0296fdd39138c33d07b47f" translate="yes" xml:space="preserve">
          <source>The JSON encoder in Rails 4.1 has been rewritten to take advantage of the JSON gem. For most applications, this should be a transparent change. However, as part of the rewrite, the following features have been removed from the encoder:</source>
          <target state="translated">Rails 4.1의 JSON 인코더는 JSON gem을 활용하기 위해 다시 작성되었습니다. 대부분의 응용 프로그램에서 이것은 투명한 변경이어야합니다. 그러나 다시 쓰기의 일부로 다음 기능이 인코더에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="6ee74dcd0b48fe9d8a0549d0dab99caf52bc54d5" translate="yes" xml:space="preserve">
          <source>The Load Interlock allows autoloading and reloading to be enabled in a multi-threaded runtime environment.</source>
          <target state="translated">로드 인터록을 사용하면 다중 스레드 런타임 환경에서 자동로드 및 다시로드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0066f1020e13839690b68171c9c79efdae49082e" translate="yes" xml:space="preserve">
          <source>The Logger</source>
          <target state="translated">로거</target>
        </trans-unit>
        <trans-unit id="eb1d2ad016c09651c6e672d3bbec314bb16cc9f9" translate="yes" xml:space="preserve">
          <source>The Low-Down on Fixtures</source>
          <target state="translated">비품의 로우 다운</target>
        </trans-unit>
        <trans-unit id="4efd89956b023e4f734c9e7b62864d1e8137e6b7" translate="yes" xml:space="preserve">
          <source>The MIME type of the HTTP request, such as Mime.</source>
          <target state="translated">HTTP 요청의 MIME 유형 (예 : Mime)</target>
        </trans-unit>
        <trans-unit id="acd24d6d5cb6a9f5800a5ffad9287bdc4bb26ccf" translate="yes" xml:space="preserve">
          <source>The MySQL adapter adds one additional configuration option:</source>
          <target state="translated">MySQL 어댑터는 하나의 추가 구성 옵션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3c84e45d278374333357b9276a241aca8efccd8b" translate="yes" xml:space="preserve">
          <source>The Object Life Cycle</source>
          <target state="translated">객체 수명주기</target>
        </trans-unit>
        <trans-unit id="98f2bbb0f67f9b09d323527720d93b69faf00d50" translate="yes" xml:space="preserve">
          <source>The Overall Architecture of the Library</source>
          <target state="translated">도서관의 전체 아키텍처</target>
        </trans-unit>
        <trans-unit id="2e6caff8462f9eed2c3308f7ae4c782815a5a81f" translate="yes" xml:space="preserve">
          <source>The PostgreSQL adapter adds one additional configuration option:</source>
          <target state="translated">PostgreSQL 어댑터는 하나의 추가 구성 옵션을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="797285a5529ca40d8ceaff9e2ba1aca92e64887a" translate="yes" xml:space="preserve">
          <source>The PostgreSQL adapter uses Active Record's connection pool, and thus the application's &lt;code&gt;config/database.yml&lt;/code&gt; database configuration, for its connection. This may change in the future. &lt;a href=&quot;https://github.com/rails/rails/issues/27214&quot;&gt;#27214&lt;/a&gt;</source>
          <target state="translated">PostgreSQL 어댑터는 연결을 위해 Active Record의 연결 풀과 애플리케이션의 &lt;code&gt;config/database.yml&lt;/code&gt; 데이터베이스 구성을 사용합니다. 향후 변경 될 수 있습니다. &lt;a href=&quot;https://github.com/rails/rails/issues/27214&quot;&gt;# 27214&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82edc0df5cb4ce3a1e8a8538ebb647f5bf208d63" translate="yes" xml:space="preserve">
          <source>The PostgreSQL adapter works with the native C (&lt;a href=&quot;https://bitbucket.org/ged/ruby-pg&quot;&gt;bitbucket.org/ged/ruby-pg&lt;/a&gt;) driver.</source>
          <target state="translated">PostgreSQL 어댑터는 네이티브 C ( &lt;a href=&quot;https://bitbucket.org/ged/ruby-pg&quot;&gt;bitbucket.org/ged/ruby-pg&lt;/a&gt; ) 드라이버 와 함께 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="7ca8c25a9c3b07a01f0820588ecbd3f5909419dd" translate="yes" xml:space="preserve">
          <source>The PostgreSQL adapter works with the native C (&lt;a href=&quot;https://github.com/ged/ruby-pg&quot;&gt;github.com/ged/ruby-pg&lt;/a&gt;) driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc823aa9daad3a923502fbafa41a04a8554d952" translate="yes" xml:space="preserve">
          <source>The Public I18n API</source>
          <target state="translated">공개 I18n API</target>
        </trans-unit>
        <trans-unit id="4ee35b8c1b691b08db3bdbe0256144ced1cee71d" translate="yes" xml:space="preserve">
          <source>The Purpose of Active Job</source>
          <target state="translated">활동적인 직업의 목적</target>
        </trans-unit>
        <trans-unit id="823c1a0091442b782c0e1668bc5aaf1b4f1f90f5" translate="yes" xml:space="preserve">
          <source>The Purpose of the Rails Router</source>
          <target state="translated">레일스 라우터의 목적</target>
        </trans-unit>
        <trans-unit id="51c22eed0065efc3555e03456648dab85e559aef" translate="yes" xml:space="preserve">
          <source>The Query String</source>
          <target state="translated">쿼리 문자열</target>
        </trans-unit>
        <trans-unit id="035bae956c3ed41d7d32de1e706edbb0e2eb039c" translate="yes" xml:space="preserve">
          <source>The Rails Advanced Command Line</source>
          <target state="translated">레일스 어드밴스드 커맨드 라인</target>
        </trans-unit>
        <trans-unit id="04795c00f3224f73f84948a0c1b60589db3b1a7b" translate="yes" xml:space="preserve">
          <source>The Rails Command Line</source>
          <target state="translated">레일스 커맨드 라인</target>
        </trans-unit>
        <trans-unit id="88a3d15a4e54b01428b036ceb885418ae6638e2b" translate="yes" xml:space="preserve">
          <source>The Rails Executor separates application code from framework code: any time the framework invokes code you've written in your application, it will be wrapped by the Executor.</source>
          <target state="translated">Rails Executor는 애플리케이션 코드를 프레임 워크 코드와 분리합니다. 프레임 워크가 애플리케이션에서 작성한 코드를 호출 할 때마다 Executor에 의해 랩핑됩니다.</target>
        </trans-unit>
        <trans-unit id="2f680a004274bb183c69fa22ff0ed3836a4e7d58" translate="yes" xml:space="preserve">
          <source>The Rails Initialization Process</source>
          <target state="translated">레일즈 초기화 프로세스</target>
        </trans-unit>
        <trans-unit id="40b90d2be490ac85e4afd082c51767a902a0b57e" translate="yes" xml:space="preserve">
          <source>The Rails Test Runner</source>
          <target state="translated">레일즈 테스트 러너</target>
        </trans-unit>
        <trans-unit id="e21e7573f446b6773b246324ac22155fda204953" translate="yes" xml:space="preserve">
          <source>The Rails core team has stated patches for the inflections library will not be accepted in order to avoid breaking legacy applications which may be relying on errant inflections. If you discover an incorrect inflection and require it for your application or wish to define rules for languages other than English, please correct or add them yourself (explained below).</source>
          <target state="translated">Rails의 핵심 팀은 잘못된 변곡에 의존 할 수있는 레거시 응용 프로그램의 중단을 피하기 위해 변곡 라이브러리에 대한 패치는 허용되지 않을 것이라고 언급했습니다. 잘못된 변곡을 발견하여 응용 프로그램에 요구하거나 영어 이외의 언어에 대한 규칙을 정의하려는 경우 직접 수정하거나 추가하십시오 (아래 설명).</target>
        </trans-unit>
        <trans-unit id="ff87ad6b1e96b780f28e55c9eebab32afd566d1a" translate="yes" xml:space="preserve">
          <source>The Rails environment;</source>
          <target state="translated">Rails 환경;</target>
        </trans-unit>
        <trans-unit id="95ee7e0b9ac7f4840ef97ae6dc2dad314a98ae35" translate="yes" xml:space="preserve">
          <source>The Rails framework components use these tools to manage their own concurrency needs too.</source>
          <target state="translated">Rails 프레임 워크 컴포넌트는 이러한 툴을 사용하여 자체 동시성 요구도 관리합니다.</target>
        </trans-unit>
        <trans-unit id="d74133a805ebbdaee19ace506605a8d40d4ea5f7" translate="yes" xml:space="preserve">
          <source>The Rails framework encourages RESTful design of your applications, which means you'll be making a lot of &quot;PATCH&quot;, &quot;PUT&quot;, and &quot;DELETE&quot; requests (besides &quot;GET&quot; and &quot;POST&quot;). However, most browsers &lt;em&gt;don't support&lt;/em&gt; methods other than &quot;GET&quot; and &quot;POST&quot; when it comes to submitting forms.</source>
          <target state="translated">Rails 프레임 워크는 애플리케이션의 RESTful 디자인을 권장합니다. 즉, &quot;PATCH&quot;, &quot;PUT&quot;및 &quot;DELETE&quot;요청을 많이 수행하게됩니다 ( &quot;GET&quot;및 &quot;POST&quot;제외). 그러나 대부분의 브라우저 &lt;em&gt;는&lt;/em&gt; 양식을 제출할 때 &quot;GET&quot;및 &quot;POST&quot;이외의 방법을 &lt;em&gt;지원하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ca74aea3b00b63d989ab4ef5c91331bc9e61c181" translate="yes" xml:space="preserve">
          <source>The Rails framework provides a large number of helpers for working with assets, dates, forms, numbers and model objects, to name a few. These helpers are available to all templates by default.</source>
          <target state="translated">Rails 프레임 워크는 자산, 날짜, 양식, 숫자 및 모델 객체를 다루는 데 도움이되는 많은 도우미를 제공합니다. 이러한 도우미는 기본적으로 모든 템플릿에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c41247006949c5d3d9f932c821a6c3cf8f4698c7" translate="yes" xml:space="preserve">
          <source>The Rails logger is still not ready in &lt;code&gt;config/application.rb&lt;/code&gt;, but it is in initializers:</source>
          <target state="translated">Rails 로거는 여전히 &lt;code&gt;config/application.rb&lt;/code&gt; 에서 준비되지 않았지만 초기화 프로그램 에 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a733d5d1f65b90aaed94e807b50100a618408998" translate="yes" xml:space="preserve">
          <source>The Rails package has several tools to help create and apply migrations.</source>
          <target state="translated">Rails 패키지에는 마이그레이션을 만들고 적용하는 데 도움이되는 몇 가지 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="593159354abcc7d9d78af190a120bc0af6170627" translate="yes" xml:space="preserve">
          <source>The Rails philosophy includes two major guiding principles:</source>
          <target state="translated">Rails 철학에는 두 가지 주요 지침 원칙이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1835bcf02caa027a953dba44a83aec4d6618834d" translate="yes" xml:space="preserve">
          <source>The Rails router maps the root route to the &lt;code&gt;index&lt;/code&gt; action of &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda932bf81a4b19c4d705c223d0b8a2d173cc1f3" translate="yes" xml:space="preserve">
          <source>The Rails router recognizes URLs and dispatches them to a controller's action, or to a Rack application. It can also generate paths and URLs, avoiding the need to hardcode strings in your views.</source>
          <target state="translated">Rails 라우터는 URL을 인식하여이를 컨트롤러의 작업 또는 랙 응용 프로그램으로 발송합니다. 또한 뷰에서 문자열을 하드 코딩 할 필요없이 경로와 URL을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a8a034a3468de652837bb7bef00583aaa629f6d" translate="yes" xml:space="preserve">
          <source>The Rails team strongly encourages you to write your CoffeeScript (and JavaScript) in this style, and you can expect that many libraries will also follow this pattern.</source>
          <target state="translated">Rails 팀은이 스타일로 CoffeeScript (및 JavaScript)를 작성하도록 강력히 권장하며 많은 라이브러리가이 패턴을 따를 것으로 예상 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a826a423a820b9f720b5b58cbba295c504f9247" translate="yes" xml:space="preserve">
          <source>The Rails templates API is easy to understand. Here's an example of a typical Rails template:</source>
          <target state="translated">Rails 템플릿 API는 이해하기 쉽습니다. 일반적인 Rails 템플릿의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="632b26a07949b11988987eee440a5719dc26a9d8" translate="yes" xml:space="preserve">
          <source>The Redis adapter requires users to provide a URL pointing to the Redis server. Additionally, a &lt;code&gt;channel_prefix&lt;/code&gt; may be provided to avoid channel name collisions when using the same Redis server for multiple applications. See the &lt;a href=&quot;https://redis.io/topics/pubsub#database-amp-scoping&quot;&gt;Redis PubSub documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Redis 어댑터를 사용하려면 사용자가 Redis 서버를 가리키는 URL을 제공해야합니다. 또한 여러 애플리케이션에 동일한 Redis 서버를 사용할 때 채널 이름 충돌을 피하기 위해 &lt;code&gt;channel_prefix&lt;/code&gt; 가 제공 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://redis.io/topics/pubsub#database-amp-scoping&quot;&gt;Redis PubSub 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3c704b7ebbdeafd48ffdd5317faa6e6b92774c98" translate="yes" xml:space="preserve">
          <source>The Redis cache store takes advantage of Redis support for automatic eviction when it reaches max memory, allowing it to behave much like a Memcached cache server.</source>
          <target state="translated">Redis 캐시 저장소는 최대 메모리에 도달 할 때 자동 제거에 대한 Redis 지원을 활용하여 Memcached 캐시 서버와 매우 유사하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3afd49deda20ee111e85e89523cd5f862cb2d618" translate="yes" xml:space="preserve">
          <source>The Reloader also provides &lt;code&gt;to_run&lt;/code&gt; and &lt;code&gt;to_complete&lt;/code&gt; callbacks; they are invoked at the same points as those of the Executor, but only when the current execution has initiated an application reload. When no reload is deemed necessary, the Reloader will invoke the wrapped block with no other callbacks.</source>
          <target state="translated">리 로더는 또한 &lt;code&gt;to_run&lt;/code&gt; 및 &lt;code&gt;to_complete&lt;/code&gt; 콜백을 제공합니다 . 이들은 현재 실행이 응용 프로그램 재로드를 시작한 경우에만 Executor와 같은 지점에서 호출됩니다. 재로드가 필요하지 않은 것으로 간주되면 리 로더는 다른 콜백없이 래핑 된 블록을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="27f7a0ffc99388b49237665de5ff68303700f136" translate="yes" xml:space="preserve">
          <source>The Reloader is only suitable where a long-running framework-level process repeatedly calls into application code, such as for a web server or job queue. Rails automatically wraps web requests and Active Job workers, so you'll rarely need to invoke the Reloader for yourself. Always consider whether the Executor is a better fit for your use case.</source>
          <target state="translated">Reloader는 장기 실행 프레임 워크 레벨 프로세스가 웹 서버 또는 작업 큐와 같은 애플리케이션 코드를 반복적으로 호출하는 경우에만 적합합니다. Rails는 자동으로 웹 요청과 활동 작업 작업자를 랩핑하므로 리 로더를 직접 호출 할 필요가 거의 없습니다. 집행자가 귀하의 사용 사례에 더 적합한 지 항상 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="c4920f22e9905615d85ce18cbe0e6bf2d8b790db" translate="yes" xml:space="preserve">
          <source>The Reloader only checks for file changes when &lt;code&gt;cache_classes&lt;/code&gt; is false and &lt;code&gt;reload_classes_only_on_change&lt;/code&gt; is true (which is the default in the &lt;code&gt;development&lt;/code&gt; environment).</source>
          <target state="translated">&lt;code&gt;reload_classes_only_on_change&lt;/code&gt; 는 &lt;code&gt;cache_classes&lt;/code&gt; 가 false이고 reload_classes_only_on_change 가 true ( &lt;code&gt;development&lt;/code&gt; 환경 의 기본값) 인 경우에만 파일 변경 사항을 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="3d92ef5461af56707e01485e0f7ae7d305f30718" translate="yes" xml:space="preserve">
          <source>The Request and Response Objects</source>
          <target state="translated">요청 및 응답 객체</target>
        </trans-unit>
        <trans-unit id="ac77713566ecac234db86f07a2d605d8bef7929a" translate="yes" xml:space="preserve">
          <source>The Ruby I18n (shorthand for &lt;em&gt;internationalization&lt;/em&gt;) gem which is shipped with Ruby on Rails (starting from Rails 2.2) provides an easy-to-use and extensible framework for &lt;strong&gt;translating your application to a single custom language&lt;/strong&gt; other than English or for &lt;strong&gt;providing multi-language support&lt;/strong&gt; in your application.</source>
          <target state="translated">루비 국제화 (속기 &lt;em&gt;국제화&lt;/em&gt; ) 루비 온 레일즈와 함께 제공되는 보석 (레일 2.2부터 시작)을 위해 사용하기 쉽고 확장 가능한 프레임 워크 제공 &lt;strong&gt;한 사용자 정의 언어로 응용 프로그램을 번역하는&lt;/strong&gt; 영어 이외의 나에 대한 &lt;strong&gt;다중 언어를 제공하는&lt;/strong&gt; 응용 프로그램에서 &lt;strong&gt;지원&lt;/strong&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="42aacfdd276ea141df87aa8835afc941f3ccc4c6" translate="yes" xml:space="preserve">
          <source>The Ruby I18n framework provides you with all necessary means for internationalization/localization of your Rails application. You may, also use various gems available to add additional functionality or features. See the &lt;a href=&quot;https://github.com/svenfuchs/rails-i18n&quot;&gt;rails-i18n gem&lt;/a&gt; for more information.</source>
          <target state="translated">Ruby I18n 프레임 워크는 Rails 애플리케이션의 국제화 / 현지화에 필요한 모든 수단을 제공합니다. 사용 가능한 다양한 보석을 사용하여 기능을 추가 할 수도 있습니다. 자세한 내용은 &lt;a href=&quot;https://github.com/svenfuchs/rails-i18n&quot;&gt;rails-i18n gem&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8e337110e0c683f629e6bb18b30ce5e3b59cc397" translate="yes" xml:space="preserve">
          <source>The Ruby side of things is built on top of &lt;a href=&quot;https://github.com/faye/websocket-driver-ruby&quot;&gt;websocket-driver&lt;/a&gt;, &lt;a href=&quot;https://github.com/celluloid/nio4r&quot;&gt;nio4r&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;concurrent-ruby&lt;/a&gt;.</source>
          <target state="translated">사물의 루비 쪽은 &lt;a href=&quot;https://github.com/faye/websocket-driver-ruby&quot;&gt;websocket-driver&lt;/a&gt; , &lt;a href=&quot;https://github.com/celluloid/nio4r&quot;&gt;nio4r&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;동시 루비&lt;/a&gt; 위에 구축됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b6723a4f8c0d953e73e03aae1b14fc27c7512db" translate="yes" xml:space="preserve">
          <source>The SQL block comment delimiters, &amp;ldquo;/*&amp;rdquo; and &amp;ldquo;*/&amp;rdquo;, will be added automatically.</source>
          <target state="translated">SQL 블록 주석 분리 문자&amp;ldquo;/ *&amp;rdquo;및&amp;ldquo;* /&amp;rdquo;가 자동으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a3ff3f0c959e89d4d9826baccc445991894a616c" translate="yes" xml:space="preserve">
          <source>The SQL equivalent of the above is:</source>
          <target state="translated">위와 동등한 SQL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="48ee3db9f90bca3492f769cd0e217a07c48877b5" translate="yes" xml:space="preserve">
          <source>The SQL generated by this method looks like this:</source>
          <target state="translated">이 방법으로 생성 된 SQL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3c52f2acac81f8672d8952a4c611589f1d6d04f3" translate="yes" xml:space="preserve">
          <source>The SQL query used by this find call will be somewhat like:</source>
          <target state="translated">이 찾기 호출에서 사용되는 SQL 쿼리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ec1b1bcef208ca24dd0a059757079680286748f" translate="yes" xml:space="preserve">
          <source>The SQL standard says the default scale should be 0, &lt;code&gt;:scale&lt;/code&gt; &amp;lt;= &lt;code&gt;:precision&lt;/code&gt;, and makes no comments about the requirements of &lt;code&gt;:precision&lt;/code&gt;.</source>
          <target state="translated">표준 SQL 기본 스케일은 0이어야한다 말한다 &lt;code&gt;:scale&lt;/code&gt; &amp;lt;= &lt;code&gt;:precision&lt;/code&gt; , 그리고 요구 사항에 대해 언급하지 않습니다 &lt;code&gt;:precision&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82f607296c32433c4cb7befd9993fe8cccfea80b" translate="yes" xml:space="preserve">
          <source>The SQL that would be executed would be something like this:</source>
          <target state="translated">실행될 SQL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c1f6c9e636ac2a9f9ff0f0206994c40e67707fdf" translate="yes" xml:space="preserve">
          <source>The SQL that would be executed:</source>
          <target state="translated">실행될 SQL :</target>
        </trans-unit>
        <trans-unit id="8143ba5cf6e9b775e16dedc348918b2663c90343" translate="yes" xml:space="preserve">
          <source>The SQLite3 adapter works SQLite 3.6.16 or newer with the sqlite3-ruby drivers (available as gem from &lt;a href=&quot;https://rubygems.org/gems/sqlite3&quot;&gt;rubygems.org/gems/sqlite3&lt;/a&gt;).</source>
          <target state="translated">SQLite3 어댑터는 sqlite3-ruby 드라이버 ( &lt;a href=&quot;https://rubygems.org/gems/sqlite3&quot;&gt;rubygems.org/gems/sqlite3&lt;/a&gt; 에서 gem으로 사용 가능)와 함께 SQLite 3.6.16 이상을 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="e8f7e80a80f6468d8f9ae5d5de949af73d120a75" translate="yes" xml:space="preserve">
          <source>The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements.</source>
          <target state="translated">SanitizeHelper 모듈은 원하지 않는 HTML 요소의 텍스트를 스크러빙하기위한 일련의 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="69b4e4cb76edfd97771ce996cb3f21bee81207c1" translate="yes" xml:space="preserve">
          <source>The Select and Option Tags</source>
          <target state="translated">선택 및 옵션 태그</target>
        </trans-unit>
        <trans-unit id="fd5aaa349d586181e9c831d5189a8981895b58d8" translate="yes" xml:space="preserve">
          <source>The Shell</source>
          <target state="translated">껍질</target>
        </trans-unit>
        <trans-unit id="ccd5038386b0375e4cca123c96f2d46e26ad35c9" translate="yes" xml:space="preserve">
          <source>The Simple backend shipped with Active Support allows you to store translations in both plain Ruby and YAML format.&lt;sup id=&quot;footnote-2-ref&quot;&gt;&lt;a href=&quot;#footnote-2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">Active Support와 함께 제공되는 단순 백엔드는 일반 Ruby 및 YAML 형식으로 번역을 저장할 수 있습니다. &lt;sup id=&quot;footnote-2-ref&quot;&gt;&lt;a href=&quot;#footnote-2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="44f540d6a81a77dfe961b48b208b2e50861d6943" translate="yes" xml:space="preserve">
          <source>The Test Database</source>
          <target state="translated">테스트 데이터베이스</target>
        </trans-unit>
        <trans-unit id="4551ad2147cfbe96a34eb24767274883e46642f9" translate="yes" xml:space="preserve">
          <source>The Test Environment</source>
          <target state="translated">테스트 환경</target>
        </trans-unit>
        <trans-unit id="7b8b577799c7cd20afbbb4c696c99be3f86d5986" translate="yes" xml:space="preserve">
          <source>The Three Hashes of the Apocalypse</source>
          <target state="translated">묵시록의 세 가지 해시</target>
        </trans-unit>
        <trans-unit id="074d2bba09f66b0ffbe5affc5c1d5beed0e1ee24" translate="yes" xml:space="preserve">
          <source>The Turbolinks gem.</source>
          <target state="translated">터보 링크 보석.</target>
        </trans-unit>
        <trans-unit id="889fe8495df2cc2ff8ba2185e5e0df25779c0bf2" translate="yes" xml:space="preserve">
          <source>The Types of Associations</source>
          <target state="translated">협회의 유형</target>
        </trans-unit>
        <trans-unit id="118d27c20bdd84af2faa31057e475c43ad77fd11" translate="yes" xml:space="preserve">
          <source>The UNION statement connects two SQL queries and returns the data in one set. An attacker can use it to read arbitrary data from the database. Let's take the example from above:</source>
          <target state="translated">UNION 문은 두 개의 SQL 쿼리를 연결하고 한 세트의 데이터를 반환합니다. 침입자는이를 사용하여 데이터베이스에서 임의의 데이터를 읽을 수 있습니다. 위에서 예제를 보자.</target>
        </trans-unit>
        <trans-unit id="c67be5b4a37fd08a53752aa322ac424ca3d80813" translate="yes" xml:space="preserve">
          <source>The URI of the controller action you are requesting. This can be in the form of a string or a route helper (e.g. &lt;code&gt;articles_url&lt;/code&gt;).</source>
          <target state="translated">요청한 컨트롤러 작업의 URI입니다. 문자열 또는 경로 도우미 형식 일 수 있습니다 (예 : &lt;code&gt;articles_url&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1a09ce01af578355210f828c8be6872f13ef3ec2" translate="yes" xml:space="preserve">
          <source>The URL pattern to match</source>
          <target state="translated">일치하는 URL 패턴</target>
        </trans-unit>
        <trans-unit id="224ff9feebc0dca5825aaec3ef51c1cbb6fd7b32" translate="yes" xml:space="preserve">
          <source>The URL the client is being redirected to, if any.</source>
          <target state="translated">클라이언트가 리디렉션되는 URL입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="30bc92ff4cc52c0f2fe25a6261b7a8aa165e6769" translate="yes" xml:space="preserve">
          <source>The URL will be http://localhost:3000/greetings/hello.</source>
          <target state="translated">URL은 http : // localhost : 3000 / greetings / hello입니다.</target>
        </trans-unit>
        <trans-unit id="7e2c09e26eec62441ea0fb0a75f4fa90c6807fb2" translate="yes" xml:space="preserve">
          <source>The Update Task</source>
          <target state="translated">업데이트 작업</target>
        </trans-unit>
        <trans-unit id="e66d0a1d165c09f974cce4589624585a59b072f3" translate="yes" xml:space="preserve">
          <source>The Upgrade Process</source>
          <target state="translated">업그레이드 과정</target>
        </trans-unit>
        <trans-unit id="ee6880520f2ade45dd630ac080bcb6b84b14bdab" translate="yes" xml:space="preserve">
          <source>The WebSocket server doesn't have access to the session, but it has access to the cookies. This can be used when you need to handle authentication. You can see one way of doing that with Devise in this &lt;a href=&quot;https://greg.molnar.io/blog/actioncable-devise-authentication/&quot;&gt;article&lt;/a&gt;.</source>
          <target state="translated">WebSocket 서버는 세션에 액세스 할 수 없지만 쿠키에는 액세스 할 수 있습니다. 인증을 처리해야 할 때 사용할 수 있습니다. 이 &lt;a href=&quot;https://greg.molnar.io/blog/actioncable-devise-authentication/&quot;&gt;기사&lt;/a&gt; 에서 Devise를 사용하여 한 가지 방법을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4d90a33c3b15a9fe985897b10c527204739b11d6" translate="yes" xml:space="preserve">
          <source>The X-Sendfile header is a directive to the web server to ignore the response from the application, and instead serve a specified file from disk. This option is off by default, but can be enabled if your server supports it. When enabled, this passes responsibility for serving the file to the web server, which is faster. Have a look at &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/DataStreaming.html#method-i-send_file&quot;&gt;send_file&lt;/a&gt; on how to use this feature.</source>
          <target state="translated">X-Sendfile 헤더는 응용 프로그램의 응답을 무시하고 대신 디스크에서 지정된 파일을 제공하도록 웹 서버에 대한 지시문입니다. 이 옵션은 기본적으로 해제되어 있지만 서버에서 지원하는 경우 활성화 할 수 있습니다. 활성화되면 파일을 웹 서버에 제공하는 책임이 더 빠릅니다. 한 번 봐 가지고 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/DataStreaming.html#method-i-send_file&quot;&gt;send_file&lt;/a&gt; 이 기능을 사용하는 방법에 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2e6b86fdb23fbddf5d458a1e31cd113b26be790" translate="yes" xml:space="preserve">
          <source>The XML serializer of models uses this method to dasherize node names:</source>
          <target state="translated">모델의 XML serializer는이 방법을 사용하여 노드 이름을 대시합니다.</target>
        </trans-unit>
        <trans-unit id="4d4d9cc06a5435e5a861665944f1af59ae407b13" translate="yes" xml:space="preserve">
          <source>The Zeitwerk instances managing your application are available at</source>
          <target state="translated">애플리케이션을 관리하는 Zeitwerk 인스턴스는</target>
        </trans-unit>
        <trans-unit id="99d7379157f8fd9c44a683315c173317d4abe69d" translate="yes" xml:space="preserve">
          <source>The `&amp;ldquo;%{attribute} %{message}&amp;rdquo;` error format can be overridden with either</source>
          <target state="translated">'% {attribute} % {message}'오류 형식은 다음 중 하나로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ac7566800fde6c78d2fde9cdc964d45f3dba592" translate="yes" xml:space="preserve">
          <source>The ability to access a params hash.</source>
          <target state="translated">params hash에 액세스하는 기능</target>
        </trans-unit>
        <trans-unit id="99a9c260613085a62b40ef65baea6234d501c155" translate="yes" xml:space="preserve">
          <source>The ability to utilise layouts and partials.</source>
          <target state="translated">레이아웃과 부분을 활용하는 기능.</target>
        </trans-unit>
        <trans-unit id="9299e4fd9a1abfa8cd0b3397ccd93dbb30b79799" translate="yes" xml:space="preserve">
          <source>The above allows you to do:</source>
          <target state="translated">위의 방법으로 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f7f61b78ae6248f37388b0ba18d1c9a120df9947" translate="yes" xml:space="preserve">
          <source>The above are a subset of assertions that minitest supports. For an exhaustive &amp;amp; more up-to-date list, please check &lt;a href=&quot;http://docs.seattlerb.org/minitest/&quot;&gt;Minitest API documentation&lt;/a&gt;, specifically &lt;a href=&quot;http://docs.seattlerb.org/minitest/Minitest/Assertions.html&quot;&gt;&lt;code&gt;Minitest::Assertions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위의 내용은 최소한의 지원을 제공하는 주장의 일부입니다. 전체 목록과 최신 목록을 보려면 &lt;a href=&quot;http://docs.seattlerb.org/minitest/&quot;&gt;Minitest API documentation&lt;/a&gt; , 특히 &lt;a href=&quot;http://docs.seattlerb.org/minitest/Minitest/Assertions.html&quot;&gt; &lt;code&gt;Minitest::Assertions&lt;/code&gt; &lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e96c640d214ad6ce3629349ac57901dd79560eba" translate="yes" xml:space="preserve">
          <source>The above are the entry points to the framework, so they are responsible for ensuring their respective threads are protected, and deciding whether a reload is necessary. Other components only need to use the Executor when they spawn additional threads.</source>
          <target state="translated">위의 내용은 프레임 워크의 진입 점이므로 각 스레드를 보호하고 재로드가 필요한지 여부를 결정해야합니다. 다른 구성 요소는 추가 스레드를 생성 할 때 Executor 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="86fc06a8bd9b865d72212523ad1d2095c5dba558" translate="yes" xml:space="preserve">
          <source>The above calls to &lt;a href=&quot;classmethods#method-i-scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt;&lt;/a&gt; define class methods &lt;code&gt;Shirt.red&lt;/code&gt; and &lt;code&gt;Shirt.dry_clean_only&lt;/code&gt;. &lt;code&gt;Shirt.red&lt;/code&gt;, in effect, represents the query &lt;code&gt;Shirt.where(color: 'red')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aeaeb2946270f1ca3880251f48504cd2adb8b8b" translate="yes" xml:space="preserve">
          <source>The above calls to &lt;a href=&quot;classmethods#method-i-scope&quot;&gt;scope&lt;/a&gt; define class methods &lt;code&gt;Shirt.red&lt;/code&gt; and &lt;code&gt;Shirt.dry_clean_only&lt;/code&gt;. &lt;code&gt;Shirt.red&lt;/code&gt;, in effect, represents the query &lt;code&gt;Shirt.where(color: 'red')&lt;/code&gt;.</source>
          <target state="translated">위의 &lt;a href=&quot;classmethods#method-i-scope&quot;&gt;범위&lt;/a&gt; 호출 은 클래스 메소드 &lt;code&gt;Shirt.red&lt;/code&gt; 및 &lt;code&gt;Shirt.dry_clean_only&lt;/code&gt; 를 정의 합니다. &lt;code&gt;Shirt.red&lt;/code&gt; 는 &lt;code&gt;Shirt.where(color: 'red')&lt;/code&gt; 쿼리를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="333dc05e53733069b4c66544cc0447cb09af75f4" translate="yes" xml:space="preserve">
          <source>The above code creates a new method &lt;code&gt;div_radio_button&lt;/code&gt; which wraps a div around the new radio button. Note that when options are passed in, you must call &lt;code&gt;objectify_options&lt;/code&gt; in order for the model object to get correctly passed to the method. If &lt;code&gt;objectify_options&lt;/code&gt; is not called, then the newly created helper will not be linked back to the model.</source>
          <target state="translated">위의 코드 는 새로운 라디오 버튼 주위에 div를 감싸는 새로운 메소드 &lt;code&gt;div_radio_button&lt;/code&gt; 을 만듭니다 . 옵션이 전달 될 때 모델 객체가 메소드에 올바르게 전달 되려면 &lt;code&gt;objectify_options&lt;/code&gt; 를 호출해야합니다 . 경우 &lt;code&gt;objectify_options&lt;/code&gt; 가 호출되지 않습니다, 다음 새로 만든 도우미 다시 모델에 연결되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3abb5f31cc2fe98f063d8d0e604260f77565c29d" translate="yes" xml:space="preserve">
          <source>The above code is a mixture of HTML and &lt;em&gt;ERB&lt;/em&gt;. ERB is a templating system that evaluates Ruby code embedded in a document. Here, we can see two types of ERB tags: &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;. The &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; tag means &quot;evaluate the enclosed Ruby code.&quot; The &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; tag means &quot;evaluate the enclosed Ruby code, and output the value it returns.&quot; Anything you could write in a regular Ruby program can go inside these ERB tags, though it's usually best to keep the contents of ERB tags short, for readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87c9495db322543a265138e150e9a1e5fec5dbd" translate="yes" xml:space="preserve">
          <source>The above code is the same as our form in &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;, except that all occurrences of &lt;code&gt;@article&lt;/code&gt; have been replaced with &lt;code&gt;article&lt;/code&gt;. Because partials are shared code, it is best practice that they do not depend on specific instance variables set by a controller action. Instead, we will pass the article to the partial as a local variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d46ac95b0d8d36f9261f2a5ca369c3866c13669" translate="yes" xml:space="preserve">
          <source>The above code sends the next line only after the singer has completed the previous line.</source>
          <target state="translated">위 코드는 가수가 이전 줄을 완료 한 후에 만 ​​다음 줄을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="803eb105f9f7cbc0c7e4e1643e3cb6b23529dfb8" translate="yes" xml:space="preserve">
          <source>The above code will execute just &lt;strong&gt;2&lt;/strong&gt; queries, as opposed to &lt;strong&gt;11&lt;/strong&gt; queries in the previous case:</source>
          <target state="translated">위의 코드는 이전의 경우 &lt;strong&gt;11 개의&lt;/strong&gt; 쿼리 와 달리 &lt;strong&gt;2 개의&lt;/strong&gt; 쿼리 만 실행 합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cd4efb617a7fc9e41e0c91d777b42961eaabd0a" translate="yes" xml:space="preserve">
          <source>The above code will keep a persistent connection with the browser and send 100 messages of &lt;code&gt;&quot;hello world\n&quot;&lt;/code&gt;, each one second apart.</source>
          <target state="translated">위의 코드는 브라우저와 지속적으로 연결되어 있으며 1 초 간격 으로 &lt;code&gt;&quot;hello world\n&quot;&lt;/code&gt; 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="06ed41b8974172e2024fe67cddd4885b67fed26a" translate="yes" xml:space="preserve">
          <source>The above code will load all the comments and all of their associated authors and gravatars. You can mix and match any combination of symbols, arrays, and hashes to retrieve the associations you want to load.</source>
          <target state="translated">위의 코드는 모든 주석과 관련 작성자 및 그라바타를 모두로드합니다. 심볼, 배열 및 해시의 조합을 혼합하여 일치시키려는로드를 연관시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5008900696401673bf09ac6edc201e88c7f704eb" translate="yes" xml:space="preserve">
          <source>The above code will put the following line into &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">위의 코드는 다음 줄을 &lt;code&gt;Gemfile&lt;/code&gt; 에 넣 습니다 .</target>
        </trans-unit>
        <trans-unit id="f3cfad1c129d3cb4168ebeef7de404377a78ae6b" translate="yes" xml:space="preserve">
          <source>The above code will render something like this:</source>
          <target state="translated">위의 코드는 다음과 같이 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="cda7b27130cd0d8392911a7c1b552935b99feae1" translate="yes" xml:space="preserve">
          <source>The above command creates a new root object and adds &amp;ldquo;app/controllers&amp;rdquo; as a path. This means we can get a &lt;code&gt;Rails::Paths::Path&lt;/code&gt; object back like below:</source>
          <target state="translated">위 명령은 새로운 루트 객체를 생성하고&amp;ldquo;앱 / 컨트롤러&amp;rdquo;를 경로로 추가합니다. 즉, 아래와 같이 &lt;code&gt;Rails::Paths::Path&lt;/code&gt; 객체를 다시 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21adbcdcc9c588834a54ae91663e685f9573a361" translate="yes" xml:space="preserve">
          <source>The above creates &lt;code&gt;lib/tasks/bootstrap.rake&lt;/code&gt; with a &lt;code&gt;boot:strap&lt;/code&gt; rake task.</source>
          <target state="translated">위의 내용은 &lt;code&gt;boot:strap&lt;/code&gt; 레이크 작업으로 &lt;code&gt;lib/tasks/bootstrap.rake&lt;/code&gt; 를 생성 합니다 .</target>
        </trans-unit>
        <trans-unit id="9b2052de2e0ef8a9f9937a0b6634c8b93020776e" translate="yes" xml:space="preserve">
          <source>The above example will now change /posts/new to /posts/brand_new.</source>
          <target state="translated">위의 예는 이제 / posts / new를 / posts / brand_new로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="c40abd9828061ab6077a0eac3687cfc218a726b6" translate="yes" xml:space="preserve">
          <source>The above inputs would result in &lt;code&gt;params[:start_date]&lt;/code&gt; being a hash with keys &lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;. To get an actual &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, or &lt;code&gt;DateTime&lt;/code&gt; object you would have to extract these values and pass them to the appropriate constructor, for example:</source>
          <target state="translated">위의 입력은 &lt;code&gt;params[:start_date]&lt;/code&gt; 가 키가 &lt;code&gt;:year&lt;/code&gt; , &lt;code&gt;:month&lt;/code&gt; , &lt;code&gt;:day&lt;/code&gt; 인 해시 입니다 . 실제 &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; 또는 &lt;code&gt;DateTime&lt;/code&gt; 객체 를 얻으려면 이러한 값을 추출하여 적절한 생성자에 전달해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="66cda868f6fc20fd14d5b7af309fe1788514078b" translate="yes" xml:space="preserve">
          <source>The above is equivalent to:</source>
          <target state="translated">위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b11b94e39c8ebd45d8aa9d1e8b8fa0034a1b4bd" translate="yes" xml:space="preserve">
          <source>The above method can be placed in the &lt;code&gt;ApplicationController&lt;/code&gt; and will be called when a CSRF token is not present or is incorrect on a non-GET request.</source>
          <target state="translated">위의 메소드는 &lt;code&gt;ApplicationController&lt;/code&gt; 에 위치 할 수 있으며 비 GET 요청에서 CSRF 토큰이 없거나 올바르지 않은 경우 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="084842552bdf468007e85432716d1181acbd4e51" translate="yes" xml:space="preserve">
          <source>The above migration creates a method named &lt;code&gt;change&lt;/code&gt; which will be called when you run this migration. The action defined in this method is also reversible, which means Rails knows how to reverse the change made by this migration, in case you want to reverse it later. When you run this migration it will create an &lt;code&gt;articles&lt;/code&gt; table with one string column and a text column. It also creates two timestamp fields to allow Rails to track article creation and update times.</source>
          <target state="translated">위의 마이그레이션은 이 마이그레이션을 실행할 때 호출되는 &lt;code&gt;change&lt;/code&gt; 라는 메서드를 만듭니다 . 이 방법으로 정의 된 작업도 되돌릴 수 있습니다. 이는 나중에 변경하려는 경우를 대비하여 Rails가이 마이그레이션으로 변경 한 사항을 되 돌리는 방법을 알고 있음을 의미합니다. 이 마이그레이션을 실행하면 하나의 문자열 열과 텍스트 열이 있는 &lt;code&gt;articles&lt;/code&gt; 테이블 이 생성 됩니다. 또한 Rails가 기사 생성 및 업데이트 시간을 추적 할 수 있도록 두 개의 타임 스탬프 필드를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f9d12e717709e2e82725a2d8dd9d915d594877bd" translate="yes" xml:space="preserve">
          <source>The above output shows an &lt;code&gt;INSERT INTO &quot;articles&quot; ...&lt;/code&gt; database query. This indicates that the article has been inserted into our table. And if we take a look at the &lt;code&gt;article&lt;/code&gt; object again, we see something interesting has happened:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2081bff9ce4c1de0f2a3baa9acaa7e3aa193a443" translate="yes" xml:space="preserve">
          <source>The above returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;clients&lt;/code&gt; table is empty and &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">위의 경우 &lt;code&gt;clients&lt;/code&gt; 테이블이 비어 있으면 &lt;code&gt;false&lt;/code&gt; 를, 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30540c1dc7394771198c79a1226617d9ee7473fd" translate="yes" xml:space="preserve">
          <source>The above returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;customers&lt;/code&gt; table is empty and &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a2259ed564f17322e9e93ec92fc820ba4abdaa" translate="yes" xml:space="preserve">
          <source>The above returns &lt;code&gt;true&lt;/code&gt; if there is at least one client with the &lt;code&gt;first_name&lt;/code&gt; 'Ryan' and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">위의 내용은 &lt;code&gt;first_name&lt;/code&gt; 이 'Ryan'인 클라이언트가 하나 이상 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0d386e8c9a1aea007217b8017545895a23b7b2fb" translate="yes" xml:space="preserve">
          <source>The above returns &lt;code&gt;true&lt;/code&gt; if there is at least one customer with the &lt;code&gt;first_name&lt;/code&gt; 'Ryan' and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741a44e0eadfb12bb82ba1bc8ee02c6ee7e16594" translate="yes" xml:space="preserve">
          <source>The above session produces the following SQL for a MySQL backend:</source>
          <target state="translated">위 세션은 MySQL 백엔드에 대해 다음 SQL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="eb79507ca343976d6fe284ecb89e3baf8c55aa6c" translate="yes" xml:space="preserve">
          <source>The above should generate:</source>
          <target state="translated">위의 내용은 다음을 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="a7d55be777d62e8c226bb4dc4fa51a123043fd58" translate="yes" xml:space="preserve">
          <source>The above three ways of rendering (rendering another template within the controller, rendering a template within another controller, and rendering an arbitrary file on the file system) are actually variants of the same action.</source>
          <target state="translated">위의 세 가지 렌더링 방법 (컨트롤러 내에서 다른 템플릿 렌더링, 다른 컨트롤러 내에서 템플릿 렌더링 및 파일 시스템에서 임의의 파일 렌더링)은 실제로 동일한 동작의 변형입니다.</target>
        </trans-unit>
        <trans-unit id="5ad6770323cbccf42bdaaa9d90ac032a44e41801" translate="yes" xml:space="preserve">
          <source>The above two ways of rendering (rendering the template of another action in the same controller, and rendering the template of another action in a different controller) are actually variants of the same operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2c5591869abf4b65b38276a779f93ca75e3f8b" translate="yes" xml:space="preserve">
          <source>The above will start a cable server on port 28080.</source>
          <target state="translated">위는 포트 28080에서 케이블 서버를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="4718acd5158219e392bc97351223f6f32d152dcf" translate="yes" xml:space="preserve">
          <source>The acronym, however, must occur as a delimited unit and not be part of another word for conversions to recognize it:</source>
          <target state="translated">그러나 약어는 구분 된 단위로 나타나야하며 변환에서 인식 할 수있는 다른 단어의 일부가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="4dfee46b00dea4df8ec13bc55371a4aa2ff5b5f8" translate="yes" xml:space="preserve">
          <source>The action</source>
          <target state="translated">행동</target>
        </trans-unit>
        <trans-unit id="c8a70bf93b527ef8019fa644660d5f525054e6c7" translate="yes" xml:space="preserve">
          <source>The actual URL in this example will be encoded as &quot;/clients?ids%5b%5d=1&amp;amp;ids%5b%5d=2&amp;amp;ids%5b%5d=3&quot; as the &quot;[&quot; and &quot;]&quot; characters are not allowed in URLs. Most of the time you don't have to worry about this because the browser will encode it for you, and Rails will decode it automatically, but if you ever find yourself having to send those requests to the server manually you should keep this in mind.</source>
          <target state="translated">이 예에서 실제 URL은 &quot;/&quot;및 &quot;]&quot;문자가 URL에 허용되지 않으므로 &quot;/ clients? ids % 5b % 5d = 1 &amp;amp; ids % 5b % 5d = 2 &amp;amp; ids % 5b % 5d = 3&quot;로 인코딩됩니다. 브라우저가 자동으로 인코딩하고 Rails가 자동으로 디코딩하기 때문에 걱정할 필요가 없습니다. 그러나 수동으로 요청을 서버로 보내야하는 경우에는이를 명심해야합니다. .</target>
        </trans-unit>
        <trans-unit id="0bc31e7fe5c26aa453e3b9b806025004a0d38777" translate="yes" xml:space="preserve">
          <source>The actual action names aren't changed by this option. The two paths shown would still route to the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; actions.</source>
          <target state="translated">실제 작업 이름은이 옵션으로 변경되지 않습니다. 표시된 두 경로는 여전히 &lt;code&gt;new&lt;/code&gt; 작업 및 &lt;code&gt;edit&lt;/code&gt; 작업으로 라우팅됩니다 .</target>
        </trans-unit>
        <trans-unit id="11aaebf40b365f6139f79cc89d2bb569a1df3da4" translate="yes" xml:space="preserve">
          <source>The actual array of &lt;code&gt;Error&lt;/code&gt; objects This method is aliased to &lt;code&gt;objects&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8f767e536a7eab6c28a28ee958f2354a95ab65" translate="yes" xml:space="preserve">
          <source>The actual before_action that is used to verify the CSRF token. Don't override this directly. Provide your own forgery protection strategy instead. If you override, you'll disable same-origin &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; verification.</source>
          <target state="translated">CSRF 토큰을 확인하는 데 사용되는 실제 before_action. 이것을 직접 무시하지 마십시오. 대신 자신의 위조 방지 전략을 제공하십시오. 재정의하면 동일 출처 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 확인 이 사용 중지 됩니다.</target>
        </trans-unit>
        <trans-unit id="d3421f7b3e0e5c676942813e39ba280bb8ec3251" translate="yes" xml:space="preserve">
          <source>The actual file is accessible via the &lt;code&gt;tempfile&lt;/code&gt; accessor, though some of its interface is available directly for convenience.</source>
          <target state="translated">실제 파일은 &lt;code&gt;tempfile&lt;/code&gt; 파일 접근 자를 통해 액세스 할 수 있지만 일부 인터페이스는 편의를 위해 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d860e48de9b9205aa74ce3904d07501023b838f" translate="yes" xml:space="preserve">
          <source>The actual incineration is done via the &lt;code&gt;IncinerationJob&lt;/code&gt; that's scheduled to run after &lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; time. This value is by default set to &lt;code&gt;30.days&lt;/code&gt;, but you can change it in your production.rb configuration. (Note that this far-future incineration scheduling relies on your job queue being able to hold jobs for that long.)</source>
          <target state="translated">실제 소각은 &lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; 시간 이후에 예정된 &lt;code&gt;IncinerationJob&lt;/code&gt; 을 통해 수행됩니다 . 이 값은 기본적으로 &lt;code&gt;30.days&lt;/code&gt; 로 설정 되지만 production.rb 구성에서 변경할 수 있습니다. (이 장래의 소각 일정은 작업 대기열을 오랫동안 보유 할 수있는 작업 대기열에 의존합니다.)</target>
        </trans-unit>
        <trans-unit id="13257434654ac01724661197b667bfb98c00a4e4" translate="yes" xml:space="preserve">
          <source>The actual method that is called is determined by calling method_for_action. If no method can handle the action, then an &lt;a href=&quot;actionnotfound&quot;&gt;&lt;code&gt;AbstractController::ActionNotFound&lt;/code&gt;&lt;/a&gt; error is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b535db32f4b8e6c49f06a143c6d9848467dd2543" translate="yes" xml:space="preserve">
          <source>The actual method that is called is determined by calling method_for_action. If no method can handle the action, then an &lt;a href=&quot;actionnotfound&quot;&gt;AbstractController::ActionNotFound&lt;/a&gt; error is raised.</source>
          <target state="translated">호출되는 실제 메소드는 method_for_action을 호출하여 결정됩니다. 메소드가 조치를 처리 할 수없는 경우 &lt;a href=&quot;actionnotfound&quot;&gt;AbstractController :: ActionNotFound&lt;/a&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3a63053bbf82b11790da7704223ce0765d21dc88" translate="yes" xml:space="preserve">
          <source>The actual rendering is done by nested classes of the module &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Template/Handlers.html&quot;&gt;&lt;code&gt;ActionView::Template::Handlers&lt;/code&gt;&lt;/a&gt;. This guide does not dig into that process, but it's important to know that the file extension on your view controls the choice of template handler.</source>
          <target state="translated">실제 렌더링은 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Template/Handlers.html&quot;&gt; &lt;code&gt;ActionView::Template::Handlers&lt;/code&gt; &lt;/a&gt; 모듈의 중첩 클래스에 의해 수행됩니다 . 이 가이드는 해당 프로세스를 다루지는 않지만 뷰의 파일 확장자가 템플릿 처리기의 선택을 제어한다는 것을 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="2eace6d8c317af052d4a9ce36f70996f4f18477c" translate="yes" xml:space="preserve">
          <source>The adapter does not support setting the isolation level</source>
          <target state="translated">어댑터가 분리 레벨 설정을 지원하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f58fae5bb8a41020e3e5cc9b2cc0494b730cb5f4" translate="yes" xml:space="preserve">
          <source>The adapter uses a &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;Concurrent Ruby&lt;/a&gt; thread pool to schedule and execute jobs. Since jobs share a single thread pool, long-running jobs will block short-lived jobs. Fine for dev/test; bad for production.</source>
          <target state="translated">어댑터는 &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;동시 Ruby&lt;/a&gt; 스레드 풀을 사용하여 작업을 스케줄하고 실행합니다. 작업은 단일 스레드 풀을 공유하므로 장기 실행 작업은 단기 작업을 차단합니다. 개발 / 테스트에 적합; 생산에 나쁘다.</target>
        </trans-unit>
        <trans-unit id="5ed49990b114649e9cf864cab935d54f830e410f" translate="yes" xml:space="preserve">
          <source>The adapters will add their own data as well.</source>
          <target state="translated">어댑터는 자체 데이터도 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f8d0cf85bdd1178136b864d2a0322afc33f58b8d" translate="yes" xml:space="preserve">
          <source>The added &lt;code&gt;password_confirmation&lt;/code&gt; attribute is virtual; it exists only as an in-memory attribute for validating the password. To achieve this, the validation adds accessors to the model for the confirmation attribute.</source>
          <target state="translated">추가 된 &lt;code&gt;password_confirmation&lt;/code&gt; 속성은 virtual입니다. 암호를 확인하기위한 메모리 내 속성으로 만 존재합니다. 이를 위해 유효성 검사는 확인 속성에 대한 접근자를 모델에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9cbba5c44f15bf44eb1bb7c847d1598bf89ac630" translate="yes" xml:space="preserve">
          <source>The advantage of Russian doll caching is that if a single product is updated, all the other inner fragments can be reused when regenerating the outer fragment.</source>
          <target state="translated">러시아 인형 캐싱의 장점은 단일 제품이 업데이트되면 외부 조각을 재생성 할 때 다른 모든 내부 조각을 재사용 할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7508b7e3879dc7eed43e6755794e11a2266cc714" translate="yes" xml:space="preserve">
          <source>The algorithm for pluralizations in &lt;code&gt;:en&lt;/code&gt; is as simple as:</source>
          <target state="translated">&lt;code&gt;:en&lt;/code&gt; 의 복수화 알고리즘은 다음과 같이 간단합니다.</target>
        </trans-unit>
        <trans-unit id="e18d5d5609f189d8ba9dd39d7a528cbb3376f58a" translate="yes" xml:space="preserve">
          <source>The answer is that it is assumed that deletion on an association is about removing the &lt;em&gt;link&lt;/em&gt; between the owner and the associated object(s), rather than necessarily the associated objects themselves. So with &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;, the join records will be deleted, but the associated records won't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95f184af6a22fac572c69661f48cdfc6fc482d3" translate="yes" xml:space="preserve">
          <source>The answer is that it is assumed that deletion on an association is about removing the &lt;em&gt;link&lt;/em&gt; between the owner and the associated object(s), rather than necessarily the associated objects themselves. So with &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;, the join records will be deleted, but the associated records won't.</source>
          <target state="translated">답은 연관을 삭제 하는 것이 반드시 연관된 오브젝트 자체가 아니라 소유자와 연관된 오브젝트 사이의 &lt;em&gt;링크&lt;/em&gt; 를 제거하는 것이라고 가정합니다 . 따라서 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; 및 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 를 사용하면 결합 레코드는 삭제되지만 관련 레코드는 삭제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="353bd424fd13e095ac75fc42f9927d735d0d1c2f" translate="yes" xml:space="preserve">
          <source>The appearance example was all about exposing server functionality to client-side invocation over the WebSocket connection. But the great thing about WebSockets is that it's a two-way street. So now let's show an example where the server invokes an action on the client.</source>
          <target state="translated">모양 예제는 WebSocket 연결을 통해 서버 기능을 클라이언트 측 호출에 노출시키는 것입니다. 그러나 WebSockets의 장점은 양방향 거리라는 것입니다. 이제 서버가 클라이언트에서 작업을 호출하는 예를 보여 드리겠습니다.</target>
        </trans-unit>
        <trans-unit id="8fde979a35183a10d65ad95dba16fa9e6c002a01" translate="yes" xml:space="preserve">
          <source>The application is also responsible for setting up and executing the booting process. From the moment you require &amp;ldquo;config/application.rb&amp;rdquo; in your app, the booting process goes like this:</source>
          <target state="translated">응용 프로그램은 부팅 프로세스를 설정하고 실행하는 역할도합니다. 앱에&amp;ldquo;config / application.rb&amp;rdquo;가 필요한 순간부터 부팅 프로세스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d0a1ecb7f1256fe4d16764400ce4d4d5314c359" translate="yes" xml:space="preserve">
          <source>The application object is also responsible for holding the routes and reloading routes whenever the files change in development.</source>
          <target state="translated">응용 프로그램 객체는 또한 파일이 개발 중에 변경 될 때마다 경로를 유지하고 경로를 다시로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="d6a741da9207ca1806a38069676ef5f5dd1bcfc7" translate="yes" xml:space="preserve">
          <source>The application template is evaluated in the context of a &lt;code&gt;Rails::Generators::AppGenerator&lt;/code&gt; instance. It uses the &lt;code&gt;apply&lt;/code&gt; action provided by &lt;a href=&quot;https://github.com/erikhuda/thor/blob/master/lib/thor/actions.rb#L207&quot;&gt;Thor&lt;/a&gt;. This means you can extend and change the instance to match your needs.</source>
          <target state="translated">애플리케이션 템플릿은 &lt;code&gt;Rails::Generators::AppGenerator&lt;/code&gt; 인스턴스 의 컨텍스트에서 평가됩니다 . &lt;a href=&quot;https://github.com/erikhuda/thor/blob/master/lib/thor/actions.rb#L207&quot;&gt;Thor에서&lt;/a&gt; 제공 하는 &lt;code&gt;apply&lt;/code&gt; 조치를 사용합니다 . 즉, 필요에 따라 인스턴스를 확장하고 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dec3a7a24a96aaf43fbf4abc6394e973811786a2" translate="yes" xml:space="preserve">
          <source>The are several things to notice here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57608d3d8a63da3b4eeb802f9cffbdf520f3d3af" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length of the random string to be generated.</source>
          <target state="translated">인수 &lt;em&gt;n&lt;/em&gt; 은 생성 될 무작위 문자열의 길이를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a5de69b46e606eb78424a600549646ba791e34a5" translate="yes" xml:space="preserve">
          <source>The argument can be either an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; or a regular &lt;code&gt;Hash&lt;/code&gt;. In either case the merge respects the semantics of indifferent access.</source>
          <target state="translated">인수는 &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; 또는 일반 &lt;code&gt;Hash&lt;/code&gt; 일 수 있습니다. 두 경우 모두 병합은 무관 한 액세스의 의미를 존중합니다.</target>
        </trans-unit>
        <trans-unit id="5c30784dd868d0b2a3de1d8c041fd8b543b7be28" translate="yes" xml:space="preserve">
          <source>The argument passed to the block is a special kind of builder for this collection, which has the ability to generate the label and check box for the current item in the collection, with proper text and value. Using it, you can change the label and check box display order or even use the label as wrapper, as in the example above.</source>
          <target state="translated">블록에 전달 된 인수는이 컬렉션에 대한 특수한 종류의 빌더이며, 적절한 텍스트와 값을 사용하여 컬렉션의 현재 항목에 대한 레이블과 확인란을 생성 할 수 있습니다. 이를 사용하면 위의 예와 같이 레이블 및 확인란 표시 순서를 변경하거나 레이블을 래퍼로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1e3d901aa2a402261442ec2c7ebd8329f10aa33" translate="yes" xml:space="preserve">
          <source>The argument passed to the block is a special kind of builder for this collection, which has the ability to generate the label and radio button for the current item in the collection, with proper text and value. Using it, you can change the label and radio button display order or even use the label as wrapper, as in the example above.</source>
          <target state="translated">블록에 전달 된 인수는이 컬렉션에 대한 특수한 종류의 빌더이며, 적절한 텍스트와 값을 사용하여 컬렉션의 현재 항목에 대한 레이블과 라디오 버튼을 생성 할 수 있습니다. 이를 사용하면 위의 예와 같이 레이블 및 단일 선택 단추 표시 순서를 변경하거나 레이블을 랩퍼로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1a9576f4a2b223a09361d11dd1dc6b658ae1532" translate="yes" xml:space="preserve">
          <source>The argument to the method can also be an array of fields.</source>
          <target state="translated">메소드에 대한 인수는 필드 배열 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d61b8b36e01219e1fd275a42844d956d215f5ac" translate="yes" xml:space="preserve">
          <source>The arguments</source>
          <target state="translated">인수</target>
        </trans-unit>
        <trans-unit id="3776f5a0aedeb28f7cb9712e3745cec1ace990df" translate="yes" xml:space="preserve">
          <source>The arguments can be either an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; or a regular &lt;code&gt;Hash&lt;/code&gt;. In either case the merge respects the semantics of indifferent access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355e19400456a3fe1f26ca11cc6c7b7a8ecf2d0d" translate="yes" xml:space="preserve">
          <source>The array of autoload paths can be extended by mutating &lt;code&gt;config.autoload_paths&lt;/code&gt;, in &lt;code&gt;config/application.rb&lt;/code&gt;, but nowadays this is discouraged.</source>
          <target state="translated">&lt;code&gt;config/application.rb&lt;/code&gt; 에서 &lt;code&gt;config.autoload_paths&lt;/code&gt; 를 변경하여 자동로드 경로 배열을 확장 할 수 있지만 현재는 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="943fbe6c6be26526a4abc96639fa39121c1412ac" translate="yes" xml:space="preserve">
          <source>The array of names of environments where destructive actions should be prohibited. By default, the value is &lt;code&gt;[&quot;production&quot;]&lt;/code&gt;.</source>
          <target state="translated">파괴적인 행동을 금지해야하는 환경 이름의 배열. 기본적으로 값은 &lt;code&gt;[&quot;production&quot;]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a30865759f8ba34ea99a4762dc963aa4ce5642fe" translate="yes" xml:space="preserve">
          <source>The array or hash form is only available in model instances. You can try &lt;code&gt;sanitize_sql()&lt;/code&gt; elsewhere. &lt;em&gt;Make it a habit to think about the security consequences when using an external string in SQL&lt;/em&gt;.</source>
          <target state="translated">배열 또는 해시 양식은 모델 인스턴스에서만 사용할 수 있습니다. 다른 곳에서 &lt;code&gt;sanitize_sql()&lt;/code&gt; 시도 할 수 있습니다 . &lt;em&gt;SQL에서 외부 문자열을 사용할 때 보안 결과에 대해 생각하는 습관을들이십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ea4e3572396cf97dec471b476f6e4fb172527901" translate="yes" xml:space="preserve">
          <source>The assertion is useful to test side effects. The passed block can be anything that can be converted to string with to_s.</source>
          <target state="translated">어설 션은 부작용을 테스트하는 데 유용합니다. 전달 된 블록은 to_s를 사용하여 문자열로 변환 할 수있는 모든 것이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c93d658e05dd9a1c5eae6aef5c9a16bc9ced6067" translate="yes" xml:space="preserve">
          <source>The asset pipeline automatically evaluates ERB. This means if you add an &lt;code&gt;erb&lt;/code&gt; extension to a CSS asset (for example, &lt;code&gt;application.css.erb&lt;/code&gt;), then helpers like &lt;code&gt;asset_path&lt;/code&gt; are available in your CSS rules:</source>
          <target state="translated">자산 파이프 라인은 ERB를 자동으로 평가합니다. 즉 , CSS 자산에 &lt;code&gt;erb&lt;/code&gt; 확장자를 추가하면 (예 : &lt;code&gt;application.css.erb&lt;/code&gt; ) &lt;code&gt;asset_path&lt;/code&gt; 와 같은 헬퍼를 CSS 규칙에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a3011fda96b1ca8753841bf3b898af6dbd4f057" translate="yes" xml:space="preserve">
          <source>The asset pipeline is implemented by the &lt;a href=&quot;https://github.com/rails/sprockets-rails&quot;&gt;sprockets-rails&lt;/a&gt; gem, and is enabled by default. You can disable it while creating a new application by passing the &lt;code&gt;--skip-sprockets&lt;/code&gt; option.</source>
          <target state="translated">자산 파이프 라인은 &lt;a href=&quot;https://github.com/rails/sprockets-rails&quot;&gt;스프로킷 레일&lt;/a&gt; 보석으로 구현되며 기본적으로 활성화되어 있습니다. &lt;code&gt;--skip-sprockets&lt;/code&gt; 옵션 을 전달하여 새 응용 프로그램을 만드는 동안 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f878c6151e69b269ab4433fa5848e5efa53bde9b" translate="yes" xml:space="preserve">
          <source>The asset pipeline provides a framework to concatenate and minify or compress JavaScript and CSS assets. It also adds the ability to write these assets in other languages and pre-processors such as CoffeeScript, Sass, and ERB. It allows assets in your application to be automatically combined with assets from other gems.</source>
          <target state="translated">자산 파이프 라인은 JavaScript 및 CSS 자산을 연결하고 최소화하거나 압축하는 프레임 워크를 제공합니다. 또한 이러한 자산을 다른 언어 및 CoffeeScript, Sass 및 ERB와 같은 프리 프로세서로 작성할 수있는 기능이 추가되었습니다. 응용 프로그램의 자산을 다른 보석의 자산과 자동으로 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77a3d803d07d408010feccc57fa433b773c69c13" translate="yes" xml:space="preserve">
          <source>The asset pipeline requires the following additions:</source>
          <target state="translated">자산 파이프 라인에는 다음을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="19c2634961d0114744cf44d7e53035db78254155" translate="yes" xml:space="preserve">
          <source>The asset precompile task in your deployment tool (&lt;em&gt;e.g.,&lt;/em&gt; Capistrano) should be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020ec0a3484e16c339a2ef064894893cf7244347" translate="yes" xml:space="preserve">
          <source>The asset tag helpers do &lt;em&gt;not&lt;/em&gt; verify the existence of the assets at the specified locations; they simply assume that you know what you're doing and generate the link.</source>
          <target state="translated">자산 태그 도우미는 지정된 위치에 자산이 있는지 확인 하지 &lt;em&gt;않습니다&lt;/em&gt; . 그들은 단순히 당신이하고있는 것을 알고 링크를 생성한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="0fc7be0de976ccd2622628358c16d6f5f67c7961" translate="yes" xml:space="preserve">
          <source>The association methods module is included immediately after the generated attributes methods module, meaning an association will override the methods for an attribute with the same name.</source>
          <target state="translated">연관 메소드 모듈은 생성 된 속성 메소드 모듈 바로 뒤에 포함됩니다. 즉, 연관은 동일한 이름을 가진 속성의 메소드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="e55dd8733ce7e8c29594190c08e43e1a9e8c9dd8" translate="yes" xml:space="preserve">
          <source>The async adapter is intended for development/testing and should not be used in production.</source>
          <target state="translated">비동기 어댑터는 개발 / 테스트 용이므로 프로덕션 환경에서 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="3e1a7da90bdc196924fb861662b91e7b9e28a1e0" translate="yes" xml:space="preserve">
          <source>The attacker creates a valid session ID: They load the login page of the web application where they want to fix the session, and take the session ID in the cookie from the response (see number 1 and 2 in the image).</source>
          <target state="translated">공격자는 유효한 세션 ID를 만듭니다. 세션을 수정하려는 웹 응용 프로그램의 로그인 페이지를로드하고 응답에서 쿠키의 세션 ID를 가져옵니다 (이미지의 번호 1 및 2 참조).</target>
        </trans-unit>
        <trans-unit id="4be31d12233318ca5b32a5c7576e0a8a66ea7e83" translate="yes" xml:space="preserve">
          <source>The attacker forces the user's browser into using this session ID (see number 3 in the image). As you may not change a cookie of another domain (because of the same origin policy), the attacker has to run a JavaScript from the domain of the target web application. Injecting the JavaScript code into the application by XSS accomplishes this attack. Here is an example: &lt;code&gt;&amp;lt;script&amp;gt;document.cookie=&quot;_session_id=16d5b78abb28e3d6206b60f22a03c8d9&quot;;&amp;lt;/script&amp;gt;&lt;/code&gt;. Read more about XSS and injection later on.</source>
          <target state="translated">공격자는 사용자의 브라우저가이 세션 ID를 사용하도록 강제합니다 (이미지의 3 번 참조). 동일한 원본 정책으로 인해 다른 도메인의 쿠키를 변경할 수 없으므로 공격자는 대상 웹 응용 프로그램의 도메인에서 JavaScript를 실행해야합니다. XSS가 JavaScript 코드를 응용 프로그램에 삽입하면이 공격이 수행됩니다. 예는 다음과 같습니다. &lt;code&gt;&amp;lt;script&amp;gt;document.cookie=&quot;_session_id=16d5b78abb28e3d6206b60f22a03c8d9&quot;;&amp;lt;/script&amp;gt;&lt;/code&gt; . 나중에 XSS 및 주입에 대해 자세히 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="472aaec9cf17ab5457945e279dd6b89369f1abcb" translate="yes" xml:space="preserve">
          <source>The attacker lures the victim to the infected page with the JavaScript code. By viewing the page, the victim's browser will change the session ID to the trap session ID.</source>
          <target state="translated">공격자는 JavaScript 코드를 사용하여 감염된 페이지로 피해자를 유인합니다. 페이지를 보면, 피해자의 브라우저가 세션 ID를 트랩 세션 ID로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1d7484930a38883801baf19ed274c8a6f14ef377" translate="yes" xml:space="preserve">
          <source>The attribute is also allowed on form submit buttons. This allows you to customize the warning message depending on the button which was activated. In this case, you should &lt;strong&gt;not&lt;/strong&gt; have &lt;code&gt;data-confirm&lt;/code&gt; on the form itself.</source>
          <target state="translated">속성은 양식 제출 단추에서도 허용됩니다. 활성화 된 버튼에 따라 경고 메시지를 사용자 정의 할 수 있습니다. 이 경우에, 당신은해야 &lt;strong&gt;하지&lt;/strong&gt; 이 &lt;code&gt;data-confirm&lt;/code&gt; 양식 자체에 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e7ba74405d043fac8cffb4688e871995459f16e" translate="yes" xml:space="preserve">
          <source>The attribute name must be a valid method name in Ruby.</source>
          <target state="translated">속성 이름은 Ruby에서 유효한 메소드 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="01bd08ab38493ef1cfca3cc0ec8930ecbc89b8d4" translate="yes" xml:space="preserve">
          <source>The attribute of &lt;code&gt;base&lt;/code&gt; which the error belongs to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f710237a4cdfb777c8c502e54db11bea3253d7" translate="yes" xml:space="preserve">
          <source>The attribute writer is named after the association, which means that in the following example, two new methods are added to your model:</source>
          <target state="translated">속성 작성기는 연결의 이름을 따서 명명됩니다. 이는 다음 예에서 두 가지 새로운 방법이 모델에 추가됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b1adaffe133610f0521b942bc7e0a2ed64cf70bf" translate="yes" xml:space="preserve">
          <source>The autoloading &lt;code&gt;zeitwerk&lt;/code&gt; mode is enabled by default in Rails 6 applications running on CRuby:</source>
          <target state="translated">자동 로딩 &lt;code&gt;zeitwerk&lt;/code&gt; 모드는 CRuby 에서 실행되는 Rails 6 애플리케이션에서 기본적으로 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="c28d53b61b687127dfcd2ba3a731fea2faa397f6" translate="yes" xml:space="preserve">
          <source>The automatic connection switching in Rails is relatively primitive and deliberately doesn't do a whole lot. The goal is a system that demonstrates how to do automatic connection switching that was flexible enough to be customizable by app developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a5f61ccda015537358800f0ed14b17759b5b24" translate="yes" xml:space="preserve">
          <source>The automatic connection switching in Rails is relatively primitive and deliberately doesn't do a whole lot. The goal was a system that demonstrated how to do automatic connection switching that was flexible enough to be customizable by app developers.</source>
          <target state="translated">Rails의 자동 연결 전환은 비교적 원시적이며 의도적으로 많은 작업을 수행하지 않습니다. 목표는 앱 개발자가 사용자 정의 할 수있을 정도로 유연한 자동 연결 전환을 수행하는 방법을 보여주는 시스템이었습니다.</target>
        </trans-unit>
        <trans-unit id="cd498d8f00a55adbd388db8254946597ced7c8ea" translate="yes" xml:space="preserve">
          <source>The automatic guessing of the inverse association uses a heuristic based on the name of the class, so it may not work for all associations, especially the ones with non-standard names.</source>
          <target state="translated">역 연관의 자동 추측은 클래스 이름을 기반으로하는 휴리스틱을 사용하므로 모든 연관, 특히 비표준 이름을 가진 연관에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fca70fc363db0694103c1c3ee5d464d957e1244a" translate="yes" xml:space="preserve">
          <source>The auxiliary file is written in a standard directory for temporary files, but you can pass a directory of your choice as second argument.</source>
          <target state="translated">보조 파일은 임시 파일의 표준 디렉토리에 작성되지만 선택한 디렉토리를 두 ​​번째 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b0da80781abc5c9cb6bed2a2370dad19e10b560" translate="yes" xml:space="preserve">
          <source>The available log levels are: &lt;code&gt;:debug&lt;/code&gt;, &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:warn&lt;/code&gt;, &lt;code&gt;:error&lt;/code&gt;, &lt;code&gt;:fatal&lt;/code&gt;, and &lt;code&gt;:unknown&lt;/code&gt;, corresponding to the log level numbers from 0 up to 5, respectively. To change the default log level, use</source>
          <target state="translated">사용 가능한 로그 레벨은 다음 &lt;code&gt;:debug&lt;/code&gt; 같습니다. : debug , &lt;code&gt;:info&lt;/code&gt; , &lt;code&gt;:warn&lt;/code&gt; , &lt;code&gt;:error&lt;/code&gt; , &lt;code&gt;:fatal&lt;/code&gt; 및 &lt;code&gt;:unknown&lt;/code&gt; 은 각각 0에서 5까지의 로그 레벨 번호에 해당합니다. 기본 로그 수준을 변경하려면</target>
        </trans-unit>
        <trans-unit id="fca1ba2bb526fb57febfb060696498224cd1049e" translate="yes" xml:space="preserve">
          <source>The available paths in an engine are:</source>
          <target state="translated">엔진에서 사용 가능한 경로는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb8d0fec98ef93ac9f78e7dfd28d986dc0cd2738" translate="yes" xml:space="preserve">
          <source>The available services are:</source>
          <target state="translated">사용 가능한 서비스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ef6b1867b4c9436cd93c4b9cfa16ca0f109c4dea" translate="yes" xml:space="preserve">
          <source>The available variables are the same as if you were running the code line by line. After all, that's what debugging is.</source>
          <target state="translated">사용 가능한 변수는 코드를 한 줄씩 실행하는 것과 같습니다. 결국, 그것이 디버깅입니다.</target>
        </trans-unit>
        <trans-unit id="3e6568f0d6fca19e054683295306fc2923394571" translate="yes" xml:space="preserve">
          <source>The backend lazy-loads these translations when a translation is looked up for the first time. This backend can be swapped with something else even after translations have already been announced.</source>
          <target state="translated">백엔드는 번역을 처음 조회 할 때 이러한 번역을 지연로드합니다. 이 백엔드는 번역이 이미 발표 된 후에도 다른 것으로 교체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ad438901d54f922f7e3a38fbb64669716721c2e" translate="yes" xml:space="preserve">
          <source>The bang versions (e.g. &lt;code&gt;save!&lt;/code&gt;) raise an exception if the record is invalid. The non-bang versions don't: &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;create&lt;/code&gt; just returns the object.</source>
          <target state="translated">뱅 버전 (예 : &lt;code&gt;save!&lt;/code&gt; )은 레코드가 유효하지 않은 경우 예외를 발생시킵니다. : 비 뱅 버전은하지 않는 &lt;code&gt;save&lt;/code&gt; 및 &lt;code&gt;update&lt;/code&gt; 반환 &lt;code&gt;false&lt;/code&gt; , 그리고 &lt;code&gt;create&lt;/code&gt; 단지 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6355e953f2936d5f178c7527da157ad66257c9d0" translate="yes" xml:space="preserve">
          <source>The bang versions (e.g. &lt;code&gt;save!&lt;/code&gt;) raise an exception if the record is invalid. The non-bang versions don't: &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;create&lt;/code&gt; returns the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d4d2b30d3f29b1f5a9302fcfcde5019f96fad5" translate="yes" xml:space="preserve">
          <source>The base class for all Action Mailbox ingress controllers.</source>
          <target state="translated">모든 Action Mailbox 수신 컨트롤러의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="fd76dbe2c67c754bf19c5b00612085a2ebb4cc46" translate="yes" xml:space="preserve">
          <source>The base class for all Active Storage controllers.</source>
          <target state="translated">모든 Active Storage 컨트롤러의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b0359296c2d971bb520b61869223dc237fbef902" translate="yes" xml:space="preserve">
          <source>The base class for all application mailboxes. Not intended to be inherited from directly. Inherit from &lt;code&gt;ApplicationMailbox&lt;/code&gt; instead, as that's where the app-specific routing is configured. This routing is specified in the following ways:</source>
          <target state="translated">모든 응용 프로그램 사서함의 기본 클래스입니다. 직접 상속되지 않습니다. 대신 앱별 라우팅이 구성되어 있으므로 &lt;code&gt;ApplicationMailbox&lt;/code&gt; 에서 상속하십시오 . 이 라우팅은 다음과 같은 방식으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="0514ba9362faf5e557150c734ea710fda9e209d8" translate="yes" xml:space="preserve">
          <source>The basename of the file in the client.</source>
          <target state="translated">클라이언트에서 파일의 기본 이름입니다.</target>
        </trans-unit>
        <trans-unit id="354bf92980b650e2e529e6489176a97f3181b18f" translate="yes" xml:space="preserve">
          <source>The basic idea is that &lt;code&gt;:only =&amp;gt; :index&lt;/code&gt; gets converted to &lt;code&gt;:if =&amp;gt; proc {|c| c.action_name == &quot;index&quot; }&lt;/code&gt;.</source>
          <target state="translated">기본 아이디어는 &lt;code&gt;:only =&amp;gt; :index&lt;/code&gt; 가 &lt;code&gt;:if =&amp;gt; proc {|c| c.action_name == &quot;index&quot; }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3341838bd6d04f628d28e8b08b6c39bd9610e33a" translate="yes" xml:space="preserve">
          <source>The basic idea is that given</source>
          <target state="translated">기본 아이디어는</target>
        </trans-unit>
        <trans-unit id="97784f6c14c00e72c6eeaa70b198d4868255bce2" translate="yes" xml:space="preserve">
          <source>The basic principles of MVC (Model, View, Controller) and RESTful design.</source>
          <target state="translated">MVC (모델, 뷰, 컨트롤러) 및 RESTful 디자인의 기본 원칙.</target>
        </trans-unit>
        <trans-unit id="3b73c2346832dbfb68e3f58b0769a3474d8edbcf" translate="yes" xml:space="preserve">
          <source>The basics of Ajax.</source>
          <target state="translated">Ajax의 기본 사항.</target>
        </trans-unit>
        <trans-unit id="139e7c28bc4fac9ee5dfd3a3d5d10a14eb9708cf" translate="yes" xml:space="preserve">
          <source>The beauty of system testing is that it is similar to integration testing in that it tests the user's interaction with your controller, model, and view, but system testing is much more robust and actually tests your application as if a real user were using it. Going forward, you can test anything that the user themselves would do in your application such as commenting, deleting articles, publishing draft articles, etc.</source>
          <target state="translated">시스템 테스트의 장점은 사용자가 컨트롤러, 모델 및 뷰와의 상호 작용을 테스트한다는 점에서 통합 테스트와 유사하지만 시스템 테스트는 훨씬 강력하며 실제 사용자가 사용하는 것처럼 애플리케이션을 실제로 테스트한다는 것입니다. 앞으로 주석 달기, 기사 삭제, 초안 기사 게시 등과 같이 사용자가 응용 프로그램에서 수행하는 모든 작업을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2a45f963646700d1f65d81d8560e98bd6909900" translate="yes" xml:space="preserve">
          <source>The benefits of the asset pipeline.</source>
          <target state="translated">자산 파이프 라인의 이점.</target>
        </trans-unit>
        <trans-unit id="dfac1aea55482241755d17a1599538fb1664d25b" translate="yes" xml:space="preserve">
          <source>The best &lt;em&gt;solution against it is not to store this kind of data in a session, but in the database&lt;/em&gt;. In this case store the credit in the database and the &lt;code&gt;logged_in_user_id&lt;/code&gt; in the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5df1eea74d738dad34595b55bcf14eb6952a3a" translate="yes" xml:space="preserve">
          <source>The best &lt;em&gt;solution against it is not to store this kind of data in a session, but in the database&lt;/em&gt;. In this case store the credit in the database and the logged_in_user_id in the session.</source>
          <target state="translated">이에 대한 가장 좋은 &lt;em&gt;해결책은 이러한 종류의 데이터를 세션에 저장하는 것이 아니라 데이터베이스에 저장하는 것&lt;/em&gt; 입니다. 이 경우 크레딧을 데이터베이스에 저장하고 세션에서 logs_in_user_id를 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="7b8ad0381a4c987306f2cb168ce73b88e410de21" translate="yes" xml:space="preserve">
          <source>The best place to add a module is in your &lt;code&gt;ApplicationController&lt;/code&gt;, but you can also add modules to individual controllers.</source>
          <target state="translated">모듈을 추가하는 가장 좋은 곳은 &lt;code&gt;ApplicationController&lt;/code&gt; 에 있지만 개별 컨트롤러에 모듈을 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4b5ed9443e66b3e0110749709b60139c3380001" translate="yes" xml:space="preserve">
          <source>The best way to be sure that your application still works after upgrading is to have good test coverage before you start the process. If you don't have automated tests that exercise the bulk of your application, you'll need to spend time manually exercising all the parts that have changed. In the case of a Rails upgrade, that will mean every single piece of functionality in the application. Do yourself a favor and make sure your test coverage is good &lt;em&gt;before&lt;/em&gt; you start an upgrade.</source>
          <target state="translated">업그레이드 후에도 응용 프로그램이 계속 작동하는지 확인하는 가장 좋은 방법은 프로세스를 시작하기 전에 테스트 범위를 넓히는 것입니다. 대부분의 응용 프로그램을 테스트하는 자동화 된 테스트가없는 경우 변경된 모든 부품을 수동으로 연습하는 데 시간을 소비해야합니다. Rails 업그레이드의 경우 이는 애플리케이션의 모든 단일 기능을 의미합니다. 업그레이드를 시작 &lt;em&gt;하기 전에&lt;/em&gt; 자신에게 유리한 입장을 취하고 테스트 적용 범위가 양호한 지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3d872feade1acb29bcd57807ca7d41970991f9d" translate="yes" xml:space="preserve">
          <source>The best way to follow what the loaders are doing is to inspect their activity.</source>
          <target state="translated">로더가하는 일을 따르는 가장 좋은 방법은 활동을 점검하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7cfb77e11e82da7663f457bc5a1147bff6a3dfe2" translate="yes" xml:space="preserve">
          <source>The best way to read this guide is to follow it step by step. All steps are essential to run this example application and no additional code or steps are needed.</source>
          <target state="translated">이 안내서를 읽는 가장 좋은 방법은 단계별로 따르는 것입니다. 이 예제 애플리케이션을 실행하려면 모든 단계가 필수적이며 추가 코드 나 단계가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a2b50ab89ed47c343fdd3e342181514c408e3d5d" translate="yes" xml:space="preserve">
          <source>The best way to use this is by doing recyclable key-based cache expiration on top of a cache store like Memcached or Redis that'll automatically kick out old entries.</source>
          <target state="translated">이것을 사용하는 가장 좋은 방법은 Memcached 또는 Redis와 같은 캐시 저장소에서 재활용 가능한 키 기반 캐시 만료를 수행하여 오래된 항목을 자동으로 시작하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="71772b8fb2f4b466d969e8e4d46babbcf646c9f3" translate="yes" xml:space="preserve">
          <source>The best way to work around this problem is to add a unique index to the database table using &lt;a href=&quot;../connectionadapters/schemastatements#method-i-add_index&quot;&gt;connection.add_index&lt;/a&gt;. In the rare case that a race condition occurs, the database will guarantee the field's uniqueness.</source>
          <target state="translated">이 문제를 해결하는 가장 좋은 방법은 &lt;a href=&quot;../connectionadapters/schemastatements#method-i-add_index&quot;&gt;connection.add_index를&lt;/a&gt; 사용하여 데이터베이스 테이블에 고유 인덱스를 추가하는 것 입니다. 드문 경우이지만 경쟁 조건이 발생하면 데이터베이스는 필드의 고유성을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="adb17d60435cd58ba82f08adc8591fefc01e70ee" translate="yes" xml:space="preserve">
          <source>The block argument of the &lt;code&gt;initializer&lt;/code&gt; method is the instance of the application itself, and so we can access the configuration on it by using the &lt;code&gt;config&lt;/code&gt; method as done in the example.</source>
          <target state="translated">&lt;code&gt;initializer&lt;/code&gt; 메소드 의 블록 인수는 애플리케이션 자체의 인스턴스이므로 예제에서 수행 한대로 &lt;code&gt;config&lt;/code&gt; 메소드를 사용하여 구성에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="caaa4fd86f379445e99ffabab0eee855f27afa89" translate="yes" xml:space="preserve">
          <source>The block form supports filtering. If the &lt;code&gt;:only&lt;/code&gt; option is specified, then only the listed job(s) will not be performed.</source>
          <target state="translated">블록 형태는 필터링을 지원합니다. 는 IF &lt;code&gt;:only&lt;/code&gt; 옵션을 지정, 만 나열된 작업 (들)을 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26d5b2739dfdb39220eba018836ffc384a52f3e7" translate="yes" xml:space="preserve">
          <source>The block in the &lt;code&gt;subscribe&lt;/code&gt; call gets the name of the event, start timestamp, end timestamp, a string with a unique identifier for that event's instrumenter (something like &amp;ldquo;535801666f04d0298cd6&amp;rdquo;), and a hash with the payload, in that order.</source>
          <target state="translated">&lt;code&gt;subscribe&lt;/code&gt; 호출 의 블록 은 이벤트 이름, 시작 타임 스탬프, 종료 타임 스탬프, 해당 이벤트의 기기에 대한 고유 식별자가있는 문자열 ( &quot;535801666f04d0298cd6&quot;등) 및 페이로드가 포함 된 해시를 순서대로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1cc5d52d9718a61420c1b73dd368fe9cb04a4603" translate="yes" xml:space="preserve">
          <source>The block receives the following arguments:</source>
          <target state="translated">블록은 다음과 같은 인수를받습니다.</target>
        </trans-unit>
        <trans-unit id="c5f3cc776a881a65a70477c8470d7ee47f5932e1" translate="yes" xml:space="preserve">
          <source>The block receives the record, the attribute's name, and the attribute's value. You can do anything you like to check for valid data within the block. If your validation fails, you should add an error message to the model, therefore making it invalid.</source>
          <target state="translated">블록은 레코드, 속성 이름 및 속성 값을받습니다. 블록 내에서 유효한 데이터를 확인하려는 모든 작업을 수행 할 수 있습니다. 유효성 검사에 실패하면 모델에 오류 메시지를 추가하여 유효하지 않게해야합니다.</target>
        </trans-unit>
        <trans-unit id="38a4f50ef49fb55c33b0029fdccbc5e7d246f077" translate="yes" xml:space="preserve">
          <source>The block receives the record, the attribute's name, and the attribute's value. You can do anything you like to check for valid data within the block. If your validation fails, you should add an error to the model, therefore making it invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc7e6fbe0f58390efcaaa176ed65f3ad8037794" translate="yes" xml:space="preserve">
          <source>The block syntax also allows you to customize the part headers if desired:</source>
          <target state="translated">블록 구문을 사용하면 원하는 경우 부품 헤더를 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80bfc2cdef2492355bfa550b3bf082d136bf5e1e" translate="yes" xml:space="preserve">
          <source>The block syntax is also useful in providing information specific to a part:</source>
          <target state="translated">블록 구문은 부품 관련 정보를 제공하는 데에도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="61669ac19ca4302d41af19d88cf28cfd8b55fefc" translate="yes" xml:space="preserve">
          <source>The block version of redirect allows for the easy encapsulation of any logic associated with the redirect in question. Either the params and request are supplied as arguments, or just params, depending of how many arguments your block accepts. A string is required as a return value.</source>
          <target state="translated">리디렉션의 블록 버전을 사용하면 해당 리디렉션과 관련된 모든 논리를 쉽게 캡슐화 할 수 있습니다. 매개 변수와 요청은 블록으로 허용되는 인수 수에 따라 인수로 제공되거나 매개 변수로 제공됩니다. 반환 값으로 문자열이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="73a19852ff729852791eb4cf72a4ea37280b2756" translate="yes" xml:space="preserve">
          <source>The block will be passed an instance of &lt;code&gt;&amp;lt;Driver&amp;gt;::Options&lt;/code&gt; where you can define the capabilities you want. Please refer to your driver documentation to learn about supported options.</source>
          <target state="translated">블록에는 원하는 기능을 정의 할 수있는 &lt;code&gt;&amp;lt;Driver&amp;gt;::Options&lt;/code&gt; 인스턴스가 전달됩니다 . 지원되는 옵션에 대한 자세한 내용은 드라이버 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0aa523374f201c463856cfce5f5635f277140ee6" translate="yes" xml:space="preserve">
          <source>The block will be run without doing anything. All database statements that happen within the block are effectively appended to the already open database transaction.</source>
          <target state="translated">아무것도하지 않고 블록이 실행됩니다. 블록 내에서 발생하는 모든 데이터베이스 문은 이미 열려있는 데이터베이스 트랜잭션에 효과적으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="40ae4060cc10353f22b7cd78ee03f141631014ca" translate="yes" xml:space="preserve">
          <source>The block will only be executed if the client is being created. The second time we run this code, the block will be ignored.</source>
          <target state="translated">클라이언트가 생성되는 경우에만 블록이 실행됩니다. 이 코드를 두 번째로 실행하면 블록이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b5339e711ead9907a2ee8e4dba3276738d63c74f" translate="yes" xml:space="preserve">
          <source>The block will only be executed if the customer is being created. The second time we run this code, the block will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be97ed4602139a7a506baea761907565044556e5" translate="yes" xml:space="preserve">
          <source>The bottom form will call the &lt;code&gt;create&lt;/code&gt; action on the &lt;code&gt;UsersController&lt;/code&gt;. Because the form's remote option is set to true, the request will be posted to the &lt;code&gt;UsersController&lt;/code&gt; as an Ajax request, looking for JavaScript. In order to serve that request, the &lt;code&gt;create&lt;/code&gt; action of your controller would look like this:</source>
          <target state="translated">맨 아래 양식은 &lt;code&gt;UsersController&lt;/code&gt; 에서 &lt;code&gt;create&lt;/code&gt; 조치를 호출합니다 . 폼의 remote 옵션이 true로 설정 &lt;code&gt;UsersController&lt;/code&gt; 요청은 JavaScript를 찾기 위해 Ajax 요청으로 UsersController에 게시됩니다 . 해당 요청을 처리하기 위해 컨트롤러 의 &lt;code&gt;create&lt;/code&gt; 조치는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b7272648236f9ad37efa3e5de443aa0e35b49a23" translate="yes" xml:space="preserve">
          <source>The browser makes a request: &lt;code&gt;GET http://localhost:3000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd9e979a08fdef32b1d7a6d2105255de16e8948" translate="yes" xml:space="preserve">
          <source>The builder methods &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;check_box&lt;/code&gt; also accept extra HTML options:</source>
          <target state="translated">빌더 메소드 &lt;code&gt;label&lt;/code&gt; 및 &lt;code&gt;check_box&lt;/code&gt; 는 추가 HTML 옵션도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="7c57627e121234f1b558999cf69b228dc10eb497" translate="yes" xml:space="preserve">
          <source>The builder methods &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;radio_button&lt;/code&gt; also accept extra HTML options:</source>
          <target state="translated">빌더 메소드 &lt;code&gt;label&lt;/code&gt; 및 &lt;code&gt;radio_button&lt;/code&gt; 은 추가 HTML 옵션도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="a589cc48c0ceff9cfef89e767e0c28b3788894fc" translate="yes" xml:space="preserve">
          <source>The built-in previewers rely on third-party system libraries. Specifically, the built-in video previewer requires &lt;a href=&quot;https://www.ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt;. Two PDF previewers are provided: one requires &lt;a href=&quot;https://poppler.freedesktop.org&quot;&gt;Poppler&lt;/a&gt;, and the other requires &lt;a href=&quot;https://mupdf.com&quot;&gt;muPDF&lt;/a&gt; (version 1.8 or newer). To preview PDFs, install either Poppler or muPDF.</source>
          <target state="translated">내장 미리보기 프로그램은 타사 시스템 라이브러리를 사용합니다. 특히 내장 비디오 미리보기에는 &lt;a href=&quot;https://www.ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt; 가 필요합니다 . 두 개의 PDF 미리보기가 제공됩니다. 하나는 &lt;a href=&quot;https://poppler.freedesktop.org&quot;&gt;Poppler&lt;/a&gt; 가 필요하고 다른 하나는 &lt;a href=&quot;https://mupdf.com&quot;&gt;muPDF&lt;/a&gt; (버전 1.8 이상)가 필요합니다. PDF를 미리 보려면 Poppler 또는 muPDF를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="d47119e78249232b1aeb5a5723f32e21fe0c857c" translate="yes" xml:space="preserve">
          <source>The bundled ActiveRecord::ConnectionAdapters distinguish unique index constraint errors from other types of database errors by throwing an &lt;a href=&quot;../recordnotunique&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt;&lt;/a&gt; exception. For other adapters you will have to parse the (database-specific) exception message to detect such a case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0db978acd87eba4fe90cf76850afede1a41cfca" translate="yes" xml:space="preserve">
          <source>The bundled ActiveRecord::ConnectionAdapters distinguish unique index constraint errors from other types of database errors by throwing an &lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord::RecordNotUnique&lt;/a&gt; exception. For other adapters you will have to parse the (database-specific) exception message to detect such a case.</source>
          <target state="translated">번들로 제공되는 ActiveRecord :: ConnectionAdapters는 &lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord :: RecordNotUnique&lt;/a&gt; 예외를 발생시켜 다른 유형의 데이터베이스 오류와 고유 인덱스 제약 조건 오류를 구별 합니다 . 다른 어댑터의 경우 이러한 경우를 감지하기 위해 (데이터베이스 별) 예외 메시지를 구문 분석해야합니다.</target>
        </trans-unit>
        <trans-unit id="9af11b8b548eca91a377d8c9d48134b4d4aba9da" translate="yes" xml:space="preserve">
          <source>The cable servers can be separated from your normal application server. It's still a Rack application, but it is its own Rack application. The recommended basic setup is as follows:</source>
          <target state="translated">케이블 서버는 일반 응용 프로그램 서버와 분리 될 수 있습니다. 여전히 랙 응용 프로그램이지만 자체 랙 응용 프로그램입니다. 권장되는 기본 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc4f7d12feba94bbfb7fa24ce8fc851cb8a3c09e" translate="yes" xml:space="preserve">
          <source>The caching method changed between Rails 3.x and 4.0. You should &lt;a href=&quot;https://guides.rubyonrails.org/caching_with_rails.html#activesupport-cache-store&quot;&gt;change the cache namespace&lt;/a&gt; and roll out with a cold cache.</source>
          <target state="translated">캐싱 방법은 Rails 3.x와 4.0 사이에서 변경되었습니다. &lt;a href=&quot;https://guides.rubyonrails.org/caching_with_rails.html#activesupport-cache-store&quot;&gt;캐시 네임 스페이스를 변경하고&lt;/a&gt; 콜드 캐시로 롤아웃 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="940974ebea639855c356755dfb99ea6a3861125c" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;str.first(n)&lt;/code&gt; is equivalent to &lt;code&gt;str.to(n-1)&lt;/code&gt; if &lt;code&gt;n&lt;/code&gt; &amp;gt; 0, and returns an empty string for &lt;code&gt;n&lt;/code&gt; == 0.</source>
          <target state="translated">&lt;code&gt;str.first(n)&lt;/code&gt; 호출 은 &lt;code&gt;n&lt;/code&gt; &amp;gt; 0 인 경우 &lt;code&gt;str.to(n-1)&lt;/code&gt; 과 동일 하며 &lt;code&gt;n&lt;/code&gt; == 0에 대해 빈 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="833c68ae0ff28d5dc9c986e34e3da0f69c98f213" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;str.last(n)&lt;/code&gt; is equivalent to &lt;code&gt;str.from(-n)&lt;/code&gt; if &lt;code&gt;n&lt;/code&gt; &amp;gt; 0, and returns an empty string for &lt;code&gt;n&lt;/code&gt; == 0.</source>
          <target state="translated">&lt;code&gt;str.last(n)&lt;/code&gt; 호출 은 &lt;code&gt;n&lt;/code&gt; &amp;gt; 0 인 경우 &lt;code&gt;str.from(-n)&lt;/code&gt; 과 동일 하며 &lt;code&gt;n&lt;/code&gt; == 0에 대해 빈 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="289d98db77c6803f750f49b881c86fb83a1740c1" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;create_table&lt;/code&gt; specifies how the &lt;code&gt;articles&lt;/code&gt; table should be constructed. By default, the &lt;code&gt;create_table&lt;/code&gt; method adds an &lt;code&gt;id&lt;/code&gt; column as an auto-incrementing primary key. So the first record in the table will have an &lt;code&gt;id&lt;/code&gt; of 1, the next record will have an &lt;code&gt;id&lt;/code&gt; of 2, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd262d49ac02ad093f21a4c44e0f8d9da2a38d1" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;stale?&lt;/code&gt; will compare the &lt;code&gt;If-Modified-Since&lt;/code&gt; header in the request with &lt;code&gt;@post.updated_at&lt;/code&gt;. If the header is newer than the last modified, this action will return a &quot;304 Not Modified&quot; response. Otherwise, it will render the response and include a &lt;code&gt;Last-Modified&lt;/code&gt; header in it.</source>
          <target state="translated">&lt;code&gt;stale?&lt;/code&gt; 전화 ? 요청 의 &lt;code&gt;If-Modified-Since&lt;/code&gt; 헤더를 &lt;code&gt;@post.updated_at&lt;/code&gt; 과 비교합니다 . 헤더가 마지막으로 수정 된 것보다 최신 인 경우이 작업은 &quot;304 Not Modified&quot;응답을 반환합니다. 그렇지 않으면 응답을 렌더링하고 &lt;code&gt;Last-Modified&lt;/code&gt; 헤더를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="bec300411ed42dc8fd8c704fa67d4cdaa9736042" translate="yes" xml:space="preserve">
          <source>The callback can be specified as a symbol naming an instance method; as a proc, lambda, or block; or as an object that responds to a certain method determined by the &lt;code&gt;:scope&lt;/code&gt; argument to &lt;code&gt;define_callbacks&lt;/code&gt;.</source>
          <target state="translated">콜백은 인스턴스 메소드를 명명하는 심볼로 지정할 수 있습니다. proc, lambda 또는 block으로; 또는 &lt;code&gt;:scope&lt;/code&gt; 인수에 의해 &lt;code&gt;define_callbacks&lt;/code&gt; 에 의해 결정된 특정 메소드에 응답하는 객체로서 .</target>
        </trans-unit>
        <trans-unit id="c0144d847fe6227e22630e607a1ac2c22b100548" translate="yes" xml:space="preserve">
          <source>The callback chain is accessible via the &lt;code&gt;_*_callbacks&lt;/code&gt; method on an object. Active Model Callbacks support &lt;code&gt;:before&lt;/code&gt;, &lt;code&gt;:after&lt;/code&gt; and &lt;code&gt;:around&lt;/code&gt; as values for the &lt;code&gt;kind&lt;/code&gt; property. The &lt;code&gt;kind&lt;/code&gt; property defines what part of the chain the callback runs in.</source>
          <target state="translated">콜백 체인은 객체 의 &lt;code&gt;_*_callbacks&lt;/code&gt; 메소드를 통해 액세스 할 수 있습니다 . 활성 모델 콜백 은 &lt;code&gt;kind&lt;/code&gt; 속성의 값으로 &lt;code&gt;:before&lt;/code&gt; , &lt;code&gt;:after&lt;/code&gt; 및 &lt;code&gt;:around&lt;/code&gt; 를 지원합니다 . &lt;code&gt;kind&lt;/code&gt; 콜백에서 실행 체인의 어떤 부분 속성을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ced64514dadc85e7a45902c82df5f158760ecefb" translate="yes" xml:space="preserve">
          <source>The callback objects have methods named after the callback called with the record as the only parameter, such as:</source>
          <target state="translated">콜백 객체에는 다음과 같은 유일한 매개 변수로 레코드와 함께 호출 된 콜백 이름이 지정된 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdbd9eccba5bd5b7285092c65f704cd90f4be3f3" translate="yes" xml:space="preserve">
          <source>The callback only runs when all the &lt;code&gt;:if&lt;/code&gt; conditions and none of the &lt;code&gt;:unless&lt;/code&gt; conditions are evaluated to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">콜백은 모든 &lt;code&gt;:if&lt;/code&gt; 조건이 있고 &lt;code&gt;:unless&lt;/code&gt; 조건이 &lt;code&gt;true&lt;/code&gt; 로 평가 되지 않는 경우 에만 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="77e7c816645fffb0a5b04100cbb7d18b7fb9b070" translate="yes" xml:space="preserve">
          <source>The callbacks gets executed even if &lt;code&gt;--skip-bundle&lt;/code&gt; and/or &lt;code&gt;--skip-spring&lt;/code&gt; has been passed.</source>
          <target state="translated">&lt;code&gt;--skip-bundle&lt;/code&gt; 및 / 또는 &lt;code&gt;--skip-spring&lt;/code&gt; 이 전달 된 경우에도 콜백이 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="97f831f93b6a1f8242aab9535f18bc367e2e8fb6" translate="yes" xml:space="preserve">
          <source>The capitalization of the first word can be turned off by setting the &lt;code&gt;:capitalize&lt;/code&gt; option to false (default is true).</source>
          <target state="translated">&lt;code&gt;:capitalize&lt;/code&gt; 옵션을 false 로 설정하여 첫 단어의 대문자를 끌 수 있습니다 (기본값은 true).</target>
        </trans-unit>
        <trans-unit id="35068c0b99fe0172d1d7159a2e5bf5702ff3b360" translate="yes" xml:space="preserve">
          <source>The capitalization of the first word can be turned off by setting the optional parameter &lt;code&gt;capitalize&lt;/code&gt; to false. By default, this parameter is true.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;capitalize&lt;/code&gt; 를 false 로 설정하면 첫 단어의 대문자를 끌 수 있습니다 . 기본적으로이 매개 변수는 true입니다.</target>
        </trans-unit>
        <trans-unit id="5f620443bb879b96a6e5c90f933cfdcef1a2518a" translate="yes" xml:space="preserve">
          <source>The capture method can be used in &lt;code&gt;ERB&lt;/code&gt; templates&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7505289652865a62f15db2bf2880fe217d91218d" translate="yes" xml:space="preserve">
          <source>The capture method can be used in ERB templates&amp;hellip;</source>
          <target state="translated">캡처 방법은 ERB 템플릿에서 사용할 수 있습니다&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="48566d75bef04d45de50b007f3f9a7090182b482" translate="yes" xml:space="preserve">
          <source>The capture method extracts part of a template as a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object. You can then use this object anywhere in your templates, layout, or helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c2dbb421ebf30117a200669e773362d65e7054" translate="yes" xml:space="preserve">
          <source>The capture method extracts part of a template as a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; object. You can then use this object anywhere in your templates, layout, or helpers.</source>
          <target state="translated">캡처 방법은 템플릿의 일부를 &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; 객체 로 추출 합니다. 그런 다음 템플릿, 레이아웃 또는 도우미의 어느 곳에서나이 개체를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6038704237cf96642934bb442e0da7a55ec883a" translate="yes" xml:space="preserve">
          <source>The captured variable can then be used anywhere else.</source>
          <target state="translated">그런 다음 캡처 된 변수를 다른 곳에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a7cca56328d52d2a11596166f75f3e5651a8081" translate="yes" xml:space="preserve">
          <source>The channel has been instructed to stream everything that arrives at &lt;code&gt;web_notifications:1&lt;/code&gt; directly to the client by invoking the &lt;code&gt;received&lt;/code&gt; callback.</source>
          <target state="translated">&lt;code&gt;received&lt;/code&gt; 콜백 을 호출하여 &lt;code&gt;web_notifications:1&lt;/code&gt; 에 도착하는 모든 것을 클라이언트로 직접 스트리밍하도록 채널에 지시했습니다 .</target>
        </trans-unit>
        <trans-unit id="4b9de0a84a384ce524e586226d5b0f40e2186f22" translate="yes" xml:space="preserve">
          <source>The channel has been instructed to stream everything that arrives at &lt;code&gt;web_notifications:1&lt;/code&gt; directly to the client by invoking the &lt;code&gt;received&lt;/code&gt; callback. The data passed as argument is the hash sent as the second parameter to the server-side broadcast call, JSON encoded for the trip across the wire and unpacked for the data argument arriving as &lt;code&gt;received&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;received&lt;/code&gt; 콜백 을 호출하여 &lt;code&gt;web_notifications:1&lt;/code&gt; 에 도착하는 모든 것을 클라이언트로 직접 스트리밍하도록 채널에 지시했습니다 . 인수로 전달 된 데이터는 두 번째 매개 변수로 서버 측 브로드 캐스트 호출에 전송 된 해시입니다. JSON은 유선으로의 트립을 위해 인코딩되고 &lt;code&gt;received&lt;/code&gt; 도착한 데이터 인수에 대해 압축이 풀 립니다.</target>
        </trans-unit>
        <trans-unit id="6baa8358f54c0de7f5162dbaeb03235b5c79ab40" translate="yes" xml:space="preserve">
          <source>The channel provides the basic structure of grouping behavior into logical units when communicating over the WebSocket connection. You can think of a channel like a form of controller, but one that's capable of pushing content to the subscriber in addition to simply responding to the subscriber's direct requests.</source>
          <target state="translated">채널은 WebSocket 연결을 통해 통신 할 때 동작을 논리 단위로 그룹화하는 기본 구조를 제공합니다. 채널을 컨트롤러 형태로 생각할 수 있지만 가입자의 직접 요청에 단순히 응답하는 것 외에도 가입자에게 콘텐츠를 푸시 할 수있는 채널을 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6d579397c5bdac0fe33ecdf6e2a0cdff8bc330e" translate="yes" xml:space="preserve">
          <source>The character set being used for the response. Default is &quot;utf-8&quot;.</source>
          <target state="translated">응답에 사용되는 문자 세트입니다. 기본값은 &quot;utf-8&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="71882d36ed0d03f3e65d077d09fd3ffab83a0a54" translate="yes" xml:space="preserve">
          <source>The charset of the response. HTML wants to know the encoding of the content you're giving them, so we need to send that along.</source>
          <target state="translated">응답의 문자셋. HTML은 사용자가 제공하는 콘텐츠의 인코딩을 알고 싶어하므로이를 함께 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="65188e551d2286e8dce2576c678a2674897adda4" translate="yes" xml:space="preserve">
          <source>The cipher text and initialization vector are base64 encoded and returned to you.</source>
          <target state="translated">암호문 및 초기화 벡터는 base64로 인코딩되어 사용자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b673759369e7231ead32eb00ab425afce042f51f" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;DateTime&lt;/code&gt; is a subclass of &lt;code&gt;Date&lt;/code&gt; so by loading &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; you inherit these methods and their aliases, except that they will always return datetimes.</source>
          <target state="translated">클래스 &lt;code&gt;DateTime&lt;/code&gt; 의 서브 클래스 &lt;code&gt;Date&lt;/code&gt; 그래서 로딩으로 &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; 그들은 항상 날짜 시간을 반환하는 것을 제외하고는, 이러한 방법과 자신의 별명을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="6968c660131cb878dd7653f49687204b7db61a98" translate="yes" xml:space="preserve">
          <source>The class &lt;strong&gt;is&lt;/strong&gt; defined in &lt;code&gt;Rack::Server&lt;/code&gt;, but is overwritten in &lt;code&gt;Rails::Server&lt;/code&gt; to take different arguments. Its &lt;code&gt;parse!&lt;/code&gt; method looks like this:</source>
          <target state="translated">이 클래스 &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;Rack::Server&lt;/code&gt; 정의되어 있지만 &lt;code&gt;Rails::Server&lt;/code&gt; 로 덮어 써서 다른 인수를 취합니다. 그 &lt;code&gt;parse!&lt;/code&gt; 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2d9472e83f43b35d872e4a578ebf8461fa5e4488" translate="yes" xml:space="preserve">
          <source>The class object following a &lt;code&gt;class&lt;/code&gt; keyword gets pushed when its body is executed, and popped after it.</source>
          <target state="translated">본문이 실행될 때 &lt;code&gt;class&lt;/code&gt; 키워드 뒤의 클래스 객체 가 푸시되고 그 다음에 팝됩니다.</target>
        </trans-unit>
        <trans-unit id="af86f952fa9511ca82932ee1393dc187d0ec2258" translate="yes" xml:space="preserve">
          <source>The class of the object that will be serialized.</source>
          <target state="translated">직렬화 될 객체의 클래스.</target>
        </trans-unit>
        <trans-unit id="797a1dd2cc5cebd603b7016f718bd2c5d32ce0b1" translate="yes" xml:space="preserve">
          <source>The client of a WebSocket connection is called the &lt;em&gt;consumer&lt;/em&gt;. In Action Cable the consumer is created by the client-side JavaScript framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a3142b2051edb930ee46b026db101e1fddf3f3" translate="yes" xml:space="preserve">
          <source>The code evaluating &lt;code&gt;Hotel::Image&lt;/code&gt; needs to make sure &lt;code&gt;app/models/hotel/image.rb&lt;/code&gt; has been loaded, possibly with &lt;code&gt;require_dependency&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hotel::Image&lt;/code&gt; 평가하는 코드는 &lt;code&gt;app/models/hotel/image.rb&lt;/code&gt; 가로드 되어 있는지 , &lt;code&gt;require_dependency&lt;/code&gt; 로로드 되었는지 확인해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="f2abcc6222e668f83e74fb7940530a8065dda4e1" translate="yes" xml:space="preserve">
          <source>The code executed within &lt;code&gt;after_commit&lt;/code&gt; or &lt;code&gt;after_rollback&lt;/code&gt; callbacks is itself not enclosed within a transaction.</source>
          <target state="translated">&lt;code&gt;after_commit&lt;/code&gt; 또는 &lt;code&gt;after_rollback&lt;/code&gt; 콜백 내에서 실행 된 코드 자체는 트랜잭션 내에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d8f19278505fd168de6c555f502a1dfd0b17e712" translate="yes" xml:space="preserve">
          <source>The code is equivalent to:</source>
          <target state="translated">코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b0315c0a4d2c5d7db5ad3c357745a96d7a8f7a40" translate="yes" xml:space="preserve">
          <source>The coder</source>
          <target state="translated">코더</target>
        </trans-unit>
        <trans-unit id="9d50665bddf50354931c2dafee55e08156cf93ff" translate="yes" xml:space="preserve">
          <source>The collection of join models can be managed via the &lt;a href=&quot;#has-many-association-reference&quot;&gt;&lt;code&gt;has_many&lt;/code&gt; association methods&lt;/a&gt;. For example, if you assign:</source>
          <target state="translated">조인 모델 모음은 &lt;a href=&quot;#has-many-association-reference&quot;&gt; &lt;code&gt;has_many&lt;/code&gt; 연관 방법을&lt;/a&gt; 통해 관리 할 수 ​​있습니다 . 예를 들어 다음을 할당하면</target>
        </trans-unit>
        <trans-unit id="ffc68b1561cf18b53a6825ca34ebd3013c124934" translate="yes" xml:space="preserve">
          <source>The collection proxy returned by &lt;code&gt;blog.posts&lt;/code&gt; is built from a &lt;code&gt;:has_many&lt;/code&gt;&lt;code&gt;association&lt;/code&gt;, and delegates to a collection of posts as the &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;blog.posts&lt;/code&gt; 에 의해 리턴 된 콜렉션 프록시 는 &lt;code&gt;:has_many&lt;/code&gt; &lt;code&gt;association&lt;/code&gt; 에서 빌드되며 &lt;code&gt;target&lt;/code&gt; 으로서 게시물 콜렉션에 위임됩니다 .</target>
        </trans-unit>
        <trans-unit id="6182787d0262c6c7b1359fe37e373545a1c0bed3" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;catch exception-name&lt;/code&gt; (or just &lt;code&gt;cat exception-name&lt;/code&gt;) can be used to intercept an exception of type &lt;em&gt;exception-name&lt;/em&gt; when there would otherwise be no handler for it.</source>
          <target state="translated">명령 &lt;code&gt;catch exception-name&lt;/code&gt; (또는 &lt;code&gt;cat exception-name&lt;/code&gt; ) 형식의 예외 차단하는 데 사용할 수있는 &lt;em&gt;예외 이름을&lt;/em&gt; 그렇지 않은 경우에 대한 핸들러가 없을 것이다 때.</target>
        </trans-unit>
        <trans-unit id="80da790259c679e4e01e02f3c1ec2a6cdb498e07" translate="yes" xml:space="preserve">
          <source>The command also generates a &lt;code&gt;.sprockets-manifest-randomhex.json&lt;/code&gt; (where &lt;code&gt;randomhex&lt;/code&gt; is a 16-byte random hex string) that contains a list with all your assets and their respective fingerprints. This is used by the Rails helper methods to avoid handing the mapping requests back to Sprockets. A typical manifest file looks like:</source>
          <target state="translated">이 명령은 또한 생성 &lt;code&gt;.sprockets-manifest-randomhex.json&lt;/code&gt; ( &lt;code&gt;randomhex&lt;/code&gt; 는 자산 및 각각의 지문 모두와 목록을 포함하는 16 바이트 임의의 16 진수 문자열입니다). 이는 Rails 헬퍼 메소드에서 매핑 요청을 다시 스프라켓으로 전달하는 것을 피하기 위해 사용됩니다. 일반적인 매니페스트 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bc549bd20274f0695384007247bbbda10162ffc6" translate="yes" xml:space="preserve">
          <source>The command is:</source>
          <target state="translated">명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fa70b028a21d0022e10ac55779cf6987002c2c13" translate="yes" xml:space="preserve">
          <source>The command line arguments are accessed through the &lt;code&gt;options&lt;/code&gt; method inside the generator class. e.g:</source>
          <target state="translated">명령 행 인수는 생성기 클래스 내의 &lt;code&gt;options&lt;/code&gt; 메소드를 통해 액세스됩니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="50897c7387dd65acb1ce53195bdacd181d1481d4" translate="yes" xml:space="preserve">
          <source>The command will display output indicating that the table was created:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2883a7196ed191d0b1930e857380aaceb624c12" translate="yes" xml:space="preserve">
          <source>The comments resource here will have the following routes generated for it:</source>
          <target state="translated">여기에 설명 리소스에는 다음과 같은 경로가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="1ca196984fa3076e444df6fe8fba096623852a03" translate="yes" xml:space="preserve">
          <source>The common admin interface works like this: it's located at &lt;a href=&quot;http://www.example.com/admin&quot;&gt;www.example.com/admin&lt;/a&gt;, may be accessed only if the admin flag is set in the User model, re-displays user input and allows the admin to delete/add/edit whatever data desired. Here are some thoughts about this:</source>
          <target state="translated">일반적인 관리 인터페이스는 다음과 같이 작동합니다. &lt;a href=&quot;http://www.example.com/admin&quot;&gt;www.example.com/admin&lt;/a&gt; 에 있으며, admin 플래그가 사용자 모델에 설정되어 있고 사용자 입력을 다시 표시하고 관리자가 무엇이든 삭제 / 추가 / 편집 할 수있는 경우에만 액세스 할 수 있습니다. 원하는 데이터. 여기에 대한 몇 가지 생각이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbc2f83d5a1ad109565a4d74b0b6682016333b02" translate="yes" xml:space="preserve">
          <source>The complete &lt;code&gt;ArticlesController&lt;/code&gt; in the &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; file should now look like this:</source>
          <target state="translated">전체 &lt;code&gt;ArticlesController&lt;/code&gt; 에서 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 파일은 이제 다음과 같아야합니다 :</target>
        </trans-unit>
        <trans-unit id="99863ff5886b28045cd1462c63f145b1dd9d863d" translate="yes" xml:space="preserve">
          <source>The complete key</source>
          <target state="translated">완전한 키</target>
        </trans-unit>
        <trans-unit id="e53929ec98b2233f0d54281d4c3c091285f783c3" translate="yes" xml:space="preserve">
          <source>The complete path</source>
          <target state="translated">완전한 경로</target>
        </trans-unit>
        <trans-unit id="1c27854a720a25987ef08e89474e0a1a6ecf7142" translate="yes" xml:space="preserve">
          <source>The compressor config settings for CSS and JavaScript also take any object. This object must have a &lt;code&gt;compress&lt;/code&gt; method that takes a string as the sole argument and it must return a string.</source>
          <target state="translated">CSS 및 JavaScript에 대한 컴프레서 구성 설정에는 모든 개체가 사용됩니다. 이 객체 에는 문자열을 유일한 인수로 사용 하는 &lt;code&gt;compress&lt;/code&gt; 메서드가 있어야하며 문자열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="ba08f59113b11226b0617d5a0de72beaf8f9a124" translate="yes" xml:space="preserve">
          <source>The concept of sessions in Rails, what to put in there and popular attack methods.</source>
          <target state="translated">Rails의 세션 개념, 거기에 넣을 대상 및 인기있는 공격 방법.</target>
        </trans-unit>
        <trans-unit id="d5de646b54e2f7c5029b74a8b4e4fa98d6731e57" translate="yes" xml:space="preserve">
          <source>The concepts of database migrations, validations, and callbacks.</source>
          <target state="translated">데이터베이스 마이그레이션, 유효성 검사 및 콜백의 개념</target>
        </trans-unit>
        <trans-unit id="0aac594320228947fb8fa734325687d3f3454def" translate="yes" xml:space="preserve">
          <source>The concern object, if supplied, should respond to &lt;code&gt;call&lt;/code&gt;, which will receive two parameters:</source>
          <target state="translated">관심 객체가 제공되는 경우 &lt;code&gt;call&lt;/code&gt; 에 응답해야하며이 매개 변수에는 두 개의 매개 변수가 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="87d7af408c36bb88fd6928d35557c2a7c87d58ad" translate="yes" xml:space="preserve">
          <source>The configuration is by default global for all your models, but you can override it on a per model basis. This should help you migrate all your models to have their associations required by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63f0d5d4473dcccd1b3ca31ae61a55113c2a709" translate="yes" xml:space="preserve">
          <source>The console autoloads, the test suite autoloads, and of course the application autoloads.</source>
          <target state="translated">콘솔 자동로드, 테스트 스위트 자동로드 및 응용 프로그램 자동로드.</target>
        </trans-unit>
        <trans-unit id="aabbadbe522f11b3d0d499a83d76f7386f175280" translate="yes" xml:space="preserve">
          <source>The console executes pure Ruby code: You can define and instantiate custom classes, create new models, and inspect variables.</source>
          <target state="translated">콘솔은 순수 Ruby 코드를 실행합니다. 사용자 정의 클래스를 정의 및 인스턴스화하고 새 모델을 작성하며 변수를 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7220a786640255689868500968affcdf580ec6d9" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;A&lt;/code&gt; may no longer exist, some code could have removed it from &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">상수 &lt;code&gt;A&lt;/code&gt; 가 더 이상 존재하지 않을 수 있으며 일부 코드는 &lt;code&gt;Object&lt;/code&gt; 에서 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b63f60bb1f9563c7247d9bacbad6fe17817b660" translate="yes" xml:space="preserve">
          <source>The constant WidgetsController can be resolved from the name. The following code will resolve the constant:</source>
          <target state="translated">상수 WidgetsController는 이름에서 확인할 수 있습니다. 다음 코드는 상수를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="674c1279d8b2dacd6774e80d3eac1f6f865f5df4" translate="yes" xml:space="preserve">
          <source>The constant is looked up in the parent and its ancestors. In Ruby &amp;gt;= 2.5, &lt;code&gt;Object&lt;/code&gt; is skipped if present among the ancestors. &lt;code&gt;Kernel&lt;/code&gt; and &lt;code&gt;BasicObject&lt;/code&gt; are still checked though.</source>
          <target state="translated">상수는 부모와 조상에서 조회됩니다. Ruby&amp;gt; = 2.5 에서 조상 사이에 &lt;code&gt;Object&lt;/code&gt; 가 있으면 건너 뜁니다. 그래도 &lt;code&gt;Kernel&lt;/code&gt; 과 &lt;code&gt;BasicObject&lt;/code&gt; 는 점검됩니다.</target>
        </trans-unit>
        <trans-unit id="9ad7a2850eac3bf4a282e7f6f9c00d5db0b9ff02" translate="yes" xml:space="preserve">
          <source>The constraint name. Defaults to &lt;code&gt;chk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082b680fd1c3b37550d012a6b71e24a4e0b9e577" translate="yes" xml:space="preserve">
          <source>The constraint name. Defaults to &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">제약 조건 이름. 기본값은 &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a2e3639f8fef012d7a8c083c1d6181192ee280b5" translate="yes" xml:space="preserve">
          <source>The consumer can optionally take an argument that specifies the URL to connect to. This can be a string, or a function that returns a string that will be called when the WebSocket is opened.</source>
          <target state="translated">소비자는 선택적으로 연결할 URL을 지정하는 인수를 취할 수 있습니다. 문자열이거나 WebSocket을 열 때 호출 될 문자열을 반환하는 함수일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20f6ba7495c1ca28ab054f3520e5fac50e367c5d" translate="yes" xml:space="preserve">
          <source>The content type of the response.</source>
          <target state="translated">응답의 컨텐츠 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e5c334ab1d810760f26bd9954ec98a6cbf41eef3" translate="yes" xml:space="preserve">
          <source>The content type requested by the client.</source>
          <target state="translated">클라이언트가 요청한 컨텐츠 유형.</target>
        </trans-unit>
        <trans-unit id="6e881217ecc3145c8db968851552e51cd8f45bf0" translate="yes" xml:space="preserve">
          <source>The contents of the block, and therefore the string interpolation, are only evaluated if debug is enabled. This performance savings are only really noticeable with large amounts of logging, but it's a good practice to employ.</source>
          <target state="translated">블록의 내용 및 따라서 문자열 보간은 디버그가 활성화 된 경우에만 평가됩니다. 이 성능 절감은 대량의 로깅을 통해서만 눈에 띄지 만 채택하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7d621c311adb11f8027c2dcc7b29dc66f7c07bdd" translate="yes" xml:space="preserve">
          <source>The contents of the nonce are implementation dependent. The quality of the implementation depends on a good choice. A nonce might, for example, be constructed as the base 64 encoding of</source>
          <target state="translated">nonce의 내용은 구현에 따라 다릅니다. 구현의 질은 좋은 선택에 달려 있습니다. 예를 들어 nonce는 기본 64 인코딩으로 구성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79cd1b7501b6b6f01a8ed691037aa929e5a70570" translate="yes" xml:space="preserve">
          <source>The controller generator is expecting parameters in the form of &lt;code&gt;generate controller ControllerName action1 action2&lt;/code&gt;. Let's make a &lt;code&gt;Greetings&lt;/code&gt; controller with an action of &lt;strong&gt;hello&lt;/strong&gt;, which will say something nice to us.</source>
          <target state="translated">컨트롤러 생성기는 &lt;code&gt;generate controller ControllerName action1 action2&lt;/code&gt; 형식의 매개 변수를 예상 합니다. &lt;strong&gt;hello&lt;/strong&gt; 액션을 사용하여 &lt;code&gt;Greetings&lt;/code&gt; 컨트롤러를 만들어 봅시다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8e08338cd0b1efee95e6b15a145de00ca8c2592" translate="yes" xml:space="preserve">
          <source>The controller generator will then try to invoke the following generators:</source>
          <target state="translated">그런 다음 컨트롤러 생성기는 다음 생성기를 호출하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="04cae75b5b556346c3da0fc2b55f4f5406e79d74" translate="yes" xml:space="preserve">
          <source>The controller instance that will be tested.</source>
          <target state="translated">테스트 할 컨트롤러 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="ba4e4a23e337dd486854ab7fd4de7b5b21c9ce42" translate="yes" xml:space="preserve">
          <source>The controller name</source>
          <target state="translated">컨트롤러 이름</target>
        </trans-unit>
        <trans-unit id="52b3d62a80b893c0af96954722743dc733ac244f" translate="yes" xml:space="preserve">
          <source>The controller naming convention differs from the naming convention of models, which are expected to be named in singular form.</source>
          <target state="translated">컨트롤러 이름 지정 규칙은 모델의 이름 지정 규칙과 다르며 단일 형식으로 이름이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a90a98546ad209e6f30fc6ff251c11291addd85d" translate="yes" xml:space="preserve">
          <source>The controller specifies a form builder as its default:</source>
          <target state="translated">컨트롤러는 양식 빌더를 기본값으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7be5224e20df3dc10e5cf3e8d85eaa5d4b308f70" translate="yes" xml:space="preserve">
          <source>The controller would receive the form data again in &lt;code&gt;params[:person]&lt;/code&gt;, ready to be passed to &lt;code&gt;Person#update&lt;/code&gt;:</source>
          <target state="translated">컨트롤러는 &lt;code&gt;params[:person]&lt;/code&gt; 에서 양식 데이터를 다시 수신하여 &lt;code&gt;Person#update&lt;/code&gt; 에 전달 될 준비를합니다 .</target>
        </trans-unit>
        <trans-unit id="e93c04fcb7f426a21bc3c650cf6a666d160cdd94" translate="yes" xml:space="preserve">
          <source>The cookie is then automatically sent to the connection instance when a new connection is attempted, and you use that to set the &lt;code&gt;current_user&lt;/code&gt;. By identifying the connection by this same current user, you're also ensuring that you can later retrieve all open connections by a given user (and potentially disconnect them all if the user is deleted or unauthorized).</source>
          <target state="translated">그런 다음 쿠키는 새 연결을 시도 할 때 연결 인스턴스로 자동 전송되며이를 사용하여 &lt;code&gt;current_user&lt;/code&gt; 를 설정합니다 . 동일한 현재 사용자가 연결을 식별하면 나중에 지정된 사용자가 열려있는 모든 연결을 검색 할 수 있습니다 (사용자가 삭제되거나 권한이없는 경우 연결을 모두 끊을 수 있음).</target>
        </trans-unit>
        <trans-unit id="3b978663c88fcd057d23578b5892ec1015819225" translate="yes" xml:space="preserve">
          <source>The cookie jar used for storage is automatically configured to be the best possible option given your application's configuration.</source>
          <target state="translated">스토리지에 사용되는 쿠키 jar는 애플리케이션 구성에 따라 가능한 최상의 옵션으로 자동 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a1a69e495ad347de251d66e9dc711b0b85146a28" translate="yes" xml:space="preserve">
          <source>The cookies being read are the ones received along with the request, the cookies being written will be sent out with the response. Reading a cookie does not get the cookie object itself back, just the value it holds.</source>
          <target state="translated">읽고있는 쿠키는 요청과 함께 수신 된 쿠키이며, 작성된 쿠키는 응답과 함께 발송됩니다. 쿠키를 읽으면 쿠키 개체 자체를 다시 가져 오지 않고 쿠키 값만 유지합니다.</target>
        </trans-unit>
        <trans-unit id="bce8aae5e66d8d741542bce7b5f0c2e2f41b3d2f" translate="yes" xml:space="preserve">
          <source>The cookies for the current request. See &lt;a href=&quot;../actiondispatch/cookies&quot;&gt;&lt;code&gt;ActionDispatch::Cookies&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ec0a6c857355d2a77edc69892b6454accdc087" translate="yes" xml:space="preserve">
          <source>The cookies of the request that initiated the WebSocket connection. Useful for performing authorization checks.</source>
          <target state="translated">WebSocket 연결을 시작한 요청 쿠키. 권한 확인을 수행하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d24e6f7bfad20509e5ec611cc5185e0596d388f6" translate="yes" xml:space="preserve">
          <source>The core features of Active Storage require the following permissions: &lt;code&gt;s3:ListBucket&lt;/code&gt;, &lt;code&gt;s3:PutObject&lt;/code&gt;, &lt;code&gt;s3:GetObject&lt;/code&gt;, and &lt;code&gt;s3:DeleteObject&lt;/code&gt;. If you have additional upload options configured such as setting ACLs then additional permissions may be required.</source>
          <target state="translated">Active Storage의 핵심 기능에는 &lt;code&gt;s3:ListBucket&lt;/code&gt; , &lt;code&gt;s3:PutObject&lt;/code&gt; , &lt;code&gt;s3:GetObject&lt;/code&gt; 및 &lt;code&gt;s3:DeleteObject&lt;/code&gt; 권한이 필요합니다 . ACL 설정과 같은 추가 업로드 옵션이 구성된 경우 추가 권한이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89dba8ea66f6ccf7268e1acbe6bfce7be69806f0" translate="yes" xml:space="preserve">
          <source>The core method of this helper, &lt;code&gt;form_for&lt;/code&gt;, gives you the ability to create a form for a model instance; for example, let's say that you have a model Person and want to create a new instance of it:</source>
          <target state="translated">이 헬퍼의 핵심 메소드 인 &lt;code&gt;form_for&lt;/code&gt; 는 모델 인스턴스의 양식을 작성하는 기능을 제공합니다. 예를 들어, Person 모델이 있고 새로운 인스턴스를 작성하려고한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="22182258bb24434e2f5ce14455e2da22cd0f35b3" translate="yes" xml:space="preserve">
          <source>The corresponding migration might look like this:</source>
          <target state="translated">해당 마이그레이션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5e2f3e193087bef642d879558a359d9a7d2b3b7c" translate="yes" xml:space="preserve">
          <source>The corresponding route helper would be &lt;code&gt;publisher_magazine_photo_url&lt;/code&gt;, requiring you to specify objects at all three levels. Indeed, this situation is confusing enough that a popular &lt;a href=&quot;http://weblog.jamisbuck.org/2007/2/5/nesting-resources&quot;&gt;article&lt;/a&gt; by Jamis Buck proposes a rule of thumb for good Rails design:</source>
          <target state="translated">해당 경로 도우미는 &lt;code&gt;publisher_magazine_photo_url&lt;/code&gt; 이므로 세 수준에서 모두 개체를 지정해야합니다. 실제로 이러한 상황은 Jamis Buck 의 인기있는 &lt;a href=&quot;http://weblog.jamisbuck.org/2007/2/5/nesting-resources&quot;&gt;기사&lt;/a&gt; 가 훌륭한 Rails 디자인을위한 경험 법칙을 제안 할 정도로 충분히 혼란스러워합니다 .</target>
        </trans-unit>
        <trans-unit id="d600c0a250e0928ac6de22ac20a4fbd9eca881c9" translate="yes" xml:space="preserve">
          <source>The corresponding view &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; using &lt;code&gt;form_with&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 사용 하는 해당보기 app / views / articles / &lt;code&gt;form_with&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6a577608768a71c2c08295f75630ffb78a1a65cf" translate="yes" xml:space="preserve">
          <source>The currency unit and number formatting of the current locale will be used unless otherwise specified in the provided options. No currency conversion is performed. If the user is given a way to change their locale, they will also be able to change the relative value of the currency displayed with this helper. If your application will ever support multiple locales, you may want to specify a constant &lt;code&gt;:locale&lt;/code&gt; option or consider using a library capable of currency conversion.</source>
          <target state="translated">제공된 옵션에서 달리 지정하지 않는 한 현재 로캘의 통화 단위 및 숫자 형식이 사용됩니다. 통화 변환이 수행되지 않습니다. 사용자에게 로케일을 변경할 수있는 방법이 제공되면이 헬퍼와 함께 표시되는 통화의 상대적인 값을 변경할 수도 있습니다. 응용 프로그램에서 여러 로캘을 지원하는 경우 상수 &lt;code&gt;:locale&lt;/code&gt; 옵션 을 지정 하거나 통화 변환이 가능한 라이브러리를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="88858758e548e1fb8c2e4b0554808d46b298c330" translate="yes" xml:space="preserve">
          <source>The current frame is marked with &lt;code&gt;--&amp;gt;&lt;/code&gt;. You can move anywhere you want in this trace (thus changing the context) by using the &lt;code&gt;frame n&lt;/code&gt; command, where &lt;em&gt;n&lt;/em&gt; is the specified frame number. If you do that, &lt;code&gt;byebug&lt;/code&gt; will display your new context.</source>
          <target state="translated">현재 프레임은 &lt;code&gt;--&amp;gt;&lt;/code&gt; 로 표시됩니다 . &lt;code&gt;frame n&lt;/code&gt; 명령 을 사용하여이 추적에서 원하는 곳으로 이동할 수 있습니다 (따라서 컨텍스트 변경) . 여기서 &lt;em&gt;n&lt;/em&gt; 은 지정된 프레임 번호입니다. 그렇게하면 &lt;code&gt;byebug&lt;/code&gt; 가 새로운 컨텍스트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="de70478027d378d1cfe8224088c01c2644f724e1" translate="yes" xml:space="preserve">
          <source>The current iteration of the partial.</source>
          <target state="translated">부분의 현재 반복입니다.</target>
        </trans-unit>
        <trans-unit id="6268442757ea009174f8acb5e84aea3dd8362229" translate="yes" xml:space="preserve">
          <source>The current object being rendered, as well as the object_counter, will be available as local variables inside the layout template under the same names as available in the partial.</source>
          <target state="translated">렌더링중인 현재 객체와 object_counter는 레이아웃 템플릿 내에서 부분 변수에서 사용 가능한 것과 동일한 이름으로 로컬 변수로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="092a267cca37a3c80e64302819266668fd7ce2e6" translate="yes" xml:space="preserve">
          <source>The current release series and the next most recent one will receive patches and new versions in case of a security issue.</source>
          <target state="translated">현재 릴리스 시리즈와 다음 최신 릴리스는 보안 문제가 발생할 경우 패치와 새 버전을받습니다.</target>
        </trans-unit>
        <trans-unit id="db3df1fb6d3274ad11672b0473e07a249bd10979" translate="yes" xml:space="preserve">
          <source>The custom &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; class is automatically merged with the options of a nested &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; call, unless it's explicitly set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00f9e9305d96c7b29411c21ba3b7035edab6ba5" translate="yes" xml:space="preserve">
          <source>The custom &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; class is automatically merged with the options of a nested &lt;code&gt;fields&lt;/code&gt; call, unless it's explicitly set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fe7ad050bfe08450ff7b69abfaee12f63ea922" translate="yes" xml:space="preserve">
          <source>The custom &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; class is automatically merged with the options of a nested &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; call, unless it's explicitly set.</source>
          <target state="translated">사용자 정의 &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; 클래스는 명시 적으로 설정되어 있지 않으면 중첩 된 &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; 호출 옵션과 자동으로 병합됩니다 .</target>
        </trans-unit>
        <trans-unit id="680d7ec1de33e8fa716b48ba4e0e304e4df83a85" translate="yes" xml:space="preserve">
          <source>The custom &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; class is automatically merged with the options of a nested &lt;code&gt;fields&lt;/code&gt; call, unless it's explicitly set.</source>
          <target state="translated">사용자 정의 &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; 클래스는 명시 적으로 설정되어 있지 않으면 중첩 된 &lt;code&gt;fields&lt;/code&gt; 호출 옵션과 자동으로 병합됩니다 .</target>
        </trans-unit>
        <trans-unit id="49271f8c4deb70ba6d14f37c6d32084ffa8bbedf" translate="yes" xml:space="preserve">
          <source>The customer class now has the following methods to manipulate the value objects:</source>
          <target state="translated">customer 클래스에는 값 객체를 조작하는 다음과 같은 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bca32f42178d269b7ad52489086de0093555240" translate="yes" xml:space="preserve">
          <source>The database kwarg is deprecated and will be removed in 6.2.0 without replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5d4b3c92a99df5c5226c0136446a9d44e487fa" translate="yes" xml:space="preserve">
          <source>The debugger can also help you if you want to learn about the Rails source code but don't know where to start. Just debug any request to your application and use this guide to learn how to move from the code you have written into the underlying Rails code.</source>
          <target state="translated">Rails 소스 코드에 대해 배우고 싶지만 시작 위치를 모르는 경우 디버거가 도움이 될 수 있습니다. 애플리케이션에 대한 요청을 디버그하고이 가이드를 사용하여 작성한 Rails 코드에서 작성한 코드에서 이동하는 방법을 배우십시오.</target>
        </trans-unit>
        <trans-unit id="b5935b676f3b260677cf3404e8139a226e615c40" translate="yes" xml:space="preserve">
          <source>The debugger can list, stop, resume, and switch between running threads by using the &lt;code&gt;thread&lt;/code&gt; command (or the abbreviated &lt;code&gt;th&lt;/code&gt;). This command has a handful of options:</source>
          <target state="translated">디버거는 &lt;code&gt;thread&lt;/code&gt; 명령 (또는 축약 된 &lt;code&gt;th&lt;/code&gt; ) 을 사용하여 실행중인 스레드를 나열, 중지, 재개 및 전환 할 수 있습니다 . 이 명령에는 몇 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="40c1b56945614754ba8bcd9b896199640af123be" translate="yes" xml:space="preserve">
          <source>The debugger creates a context when a stopping point or an event is reached. The context has information about the suspended program which enables the debugger to inspect the frame stack, evaluate variables from the perspective of the debugged program, and know the place where the debugged program is stopped.</source>
          <target state="translated">디버거는 중지 지점 또는 이벤트에 도달하면 컨텍스트를 작성합니다. 이 컨텍스트에는 디버거가 프레임 스택을 검사하고 디버깅 된 프로그램의 관점에서 변수를 평가하며 디버깅 된 프로그램이 중지 된 위치를 알 수 있도록하는 일시 중단 된 프로그램에 대한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="21886789df11ea9338c71bc1e713dc0ce0b78495" translate="yes" xml:space="preserve">
          <source>The declaration can also include an &lt;code&gt;options&lt;/code&gt; hash to specialize the behavior of the association.</source>
          <target state="translated">선언에는 연결 동작을 특수화하기위한 해시 &lt;code&gt;options&lt;/code&gt; 도 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49199abadcd9f974ed88dc3d7ccd19edc4680383" translate="yes" xml:space="preserve">
          <source>The declaration may include an &lt;code&gt;options&lt;/code&gt; hash to specialize the behavior of the association.</source>
          <target state="translated">선언에는 연관 동작을 특수화하기 위한 &lt;code&gt;options&lt;/code&gt; 해시 가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="36ad4ffacf5446ac468457067baa5ce51ef75fec" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; Controller stack includes all renderers, which means you can use &lt;code&gt;render :json&lt;/code&gt; and brothers freely in your controllers. Keep in mind that templates are not going to be rendered, so you need to ensure your controller is calling either &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;redirect_to&lt;/code&gt; in all actions, otherwise it will return 204 No Content.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
