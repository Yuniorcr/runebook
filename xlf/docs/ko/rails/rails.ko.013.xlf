<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="9e8cbe1039a0add9d6b2533f721c67ea577d677d" translate="yes" xml:space="preserve">
          <source>Does this adapter support datetime with precision?</source>
          <target state="translated">이 어댑터는 날짜 시간을 정확하게 지원합니까?</target>
        </trans-unit>
        <trans-unit id="4eb203ef190989c33ec085c741bcc1d4c4e2aa5b" translate="yes" xml:space="preserve">
          <source>Does this adapter support explain?</source>
          <target state="translated">이 어댑터는 설명을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="07e38d1cba66215779c568118967106883877bb2" translate="yes" xml:space="preserve">
          <source>Does this adapter support expression indices?</source>
          <target state="translated">이 어댑터는 표현식 색인을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="02bba9c451a331c226f572d1b305e4e4faf4d70f" translate="yes" xml:space="preserve">
          <source>Does this adapter support foreign/external tables?</source>
          <target state="translated">이 어댑터는 외부 / 외부 테이블을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="c90c24dc39fd27e62082a5f6c3f826b60d5cf23a" translate="yes" xml:space="preserve">
          <source>Does this adapter support index sort order?</source>
          <target state="translated">이 어댑터는 색인 정렬 순서를 지원합니까?</target>
        </trans-unit>
        <trans-unit id="a83aebc48f4696ed46716c6287db17548da2e36e" translate="yes" xml:space="preserve">
          <source>Does this adapter support json data type?</source>
          <target state="translated">이 어댑터는 json 데이터 유형을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="d9416ed9b6453a25c9c484b85053f6af2467fbfd" translate="yes" xml:space="preserve">
          <source>Does this adapter support materialized views?</source>
          <target state="translated">이 어댑터는 구체화 된 뷰를 지원합니까?</target>
        </trans-unit>
        <trans-unit id="5722017b0f72ba1cfe51b2d010bb86f92e3b32b1" translate="yes" xml:space="preserve">
          <source>Does this adapter support metadata comments on database objects (tables, columns, indexes)?</source>
          <target state="translated">이 어댑터는 데이터베이스 오브젝트 (테이블, 컬럼, 인덱스)에 대한 메타 데이터 주석을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="07d8d5301c93ced72a36e7b3930cce11cc76ed86" translate="yes" xml:space="preserve">
          <source>Does this adapter support multi-value insert?</source>
          <target state="translated">이 어댑터는 다중 값 삽입을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="f9aec6bdd4ccafd4a4495ee9f61ea9a8216f28c9" translate="yes" xml:space="preserve">
          <source>Does this adapter support optimizer hints?</source>
          <target state="translated">이 어댑터는 최적화 힌트를 지원합니까?</target>
        </trans-unit>
        <trans-unit id="c230d75eaaec4e347c1032f3131a8791c974f6ac" translate="yes" xml:space="preserve">
          <source>Does this adapter support partial indices?</source>
          <target state="translated">이 어댑터는 부분 인덱스를 지원합니까?</target>
        </trans-unit>
        <trans-unit id="fc76d299342bb4a8119f0984a43bcd3cbfd11bae" translate="yes" xml:space="preserve">
          <source>Does this adapter support savepoints?</source>
          <target state="translated">이 어댑터는 저장 점을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="25c4f7a0cfd9ff804b1d9eccbb5b4e60e1f89978" translate="yes" xml:space="preserve">
          <source>Does this adapter support setting the isolation level for a transaction?</source>
          <target state="translated">이 어댑터는 트랜잭션의 격리 레벨 설정을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="b2488593b410dd51f3e974f20beb47378ad8de34" translate="yes" xml:space="preserve">
          <source>Does this adapter support views?</source>
          <target state="translated">이 어댑터는보기를 지원합니까?</target>
        </trans-unit>
        <trans-unit id="eb457f9e2dca4d86ec2c43dc22d48013d4e48157" translate="yes" xml:space="preserve">
          <source>Does this adapter support virtual columns?</source>
          <target state="translated">이 어댑터는 가상 열을 지원합니까?</target>
        </trans-unit>
        <trans-unit id="ffd0fc20dac7efed32e5fb4bea0f86d4f50c7778" translate="yes" xml:space="preserve">
          <source>Doing so affects how Active Support inflects globally. That may be fine in some applications, but you can also customize how to camelize individual basenames independently from Active Support by passing a collection of overrides to the default inflectors:</source>
          <target state="translated">그렇게하면 Active Support가 전 세계적으로 활용되는 방식에 영향을 미칩니다. 일부 응용 프로그램에서는 괜찮을 수 있지만 재정의 모음을 기본 inflector에 전달하여 Active Support와 독립적으로 개별 기본 이름을 낙타 화하는 방법을 사용자 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="01e3f410978a2dd64b547bb14daef20eb5d37752" translate="yes" xml:space="preserve">
          <source>Don't be fooled by security by obfuscation and JavaScript security. Developer tools let you review and change every form's hidden fields. &lt;em&gt;JavaScript can be used to validate user input data, but certainly not to prevent attackers from sending malicious requests with unexpected values&lt;/em&gt;. The Firebug addon for Mozilla Firefox logs every request and may repeat and change them. That is an easy way to bypass any JavaScript validations. And there are even client-side proxies that allow you to intercept any request and response from and to the Internet.</source>
          <target state="translated">난독 화 및 JavaScript 보안에 의한 보안에 속지 마십시오. 개발자 도구를 사용하면 모든 양식의 숨겨진 필드를 검토하고 변경할 수 있습니다. &lt;em&gt;JavaScript는 사용자 입력 데이터의 유효성을 검사하는 데 사용될 수 있지만 공격자가 예상치 못한 값으로 악의적 인 요청을 보내지 못하도록 막지는 못합니다&lt;/em&gt; . Mozilla Firefox 용 Firebug 애드온은 모든 요청을 기록하며 반복하여 변경할 수 있습니다. JavaScript 검증을 우회하는 쉬운 방법입니다. 또한 인터넷에서 요청 및 응답을 가로 챌 수있는 클라이언트 측 프록시도 있습니다.</target>
        </trans-unit>
        <trans-unit id="302a820b2e67ecf2c457af1ca69ed89748415635" translate="yes" xml:space="preserve">
          <source>Don't create a Gemfile</source>
          <target state="translated">Gemfile을 생성하지 마십시오</target>
        </trans-unit>
        <trans-unit id="f8752af95efd5e4d0cfab547ee31b5e6899a1302" translate="yes" xml:space="preserve">
          <source>Don't create associations that have the same name as &lt;a href=&quot;../core&quot;&gt;instance methods&lt;/a&gt; of &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. Since the association adds a method with that name to its model, using an association with the same name as one provided by &lt;code&gt;ActiveRecord::Base&lt;/code&gt; will override the method inherited through &lt;code&gt;ActiveRecord::Base&lt;/code&gt; and will break things. For instance, &lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;connection&lt;/code&gt; would be bad choices for association names, because those names already exist in the list of &lt;code&gt;ActiveRecord::Base&lt;/code&gt; instance methods.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::Base&lt;/code&gt; 의 &lt;a href=&quot;../core&quot;&gt;인스턴스 메소드&lt;/a&gt; 와 이름이 같은 연관을 작성하지 마십시오 . 연관은 해당 이름을 가진 메소드를 모델에 추가하기 때문에 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 제공하는 것과 동일한 이름을 가진 연관을 사용하면 ActiveRecord :: Base 를 통해 상속 된 메소드를 겹쳐 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 됩니다. 예를 들어, &lt;code&gt;attributes&lt;/code&gt; 및 &lt;code&gt;connection&lt;/code&gt; 은 이름이 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 인스턴스 메소드 목록에 이미 존재하므로 연관 이름에 대해 잘못된 선택입니다 .</target>
        </trans-unit>
        <trans-unit id="b7adf9bf5b3848aa98d125daf7b318a481686d96" translate="yes" xml:space="preserve">
          <source>Don't forget to call &lt;code&gt;follow_redirect!&lt;/code&gt; if you plan to make subsequent requests after a redirect is made.</source>
          <target state="translated">&lt;code&gt;follow_redirect!&lt;/code&gt; 를 호출하는 것을 잊지 마십시오 ! 리디렉션 후 후속 요청을하려는 경우</target>
        </trans-unit>
        <trans-unit id="330ebeda4136ab1daf881b32294677ad91af413c" translate="yes" xml:space="preserve">
          <source>Don't forget to review the difference, to see if there were any unexpected changes.</source>
          <target state="translated">예상치 못한 변화가 있는지 확인하기 위해 차이점을 검토하는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="2becd45658e9213c324f75d075645044e82c3a46" translate="yes" xml:space="preserve">
          <source>Don't forget to run &lt;code&gt;bundle install&lt;/code&gt; as usual. By specifying it as a gem within the &lt;code&gt;Gemfile&lt;/code&gt;, Bundler will load it as such, parsing this &lt;code&gt;blorgh.gemspec&lt;/code&gt; file and requiring a file within the &lt;code&gt;lib&lt;/code&gt; directory called &lt;code&gt;lib/blorgh.rb&lt;/code&gt;. This file requires the &lt;code&gt;blorgh/engine.rb&lt;/code&gt; file (located at &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt;) and defines a base module called &lt;code&gt;Blorgh&lt;/code&gt;.</source>
          <target state="translated">평소처럼 &lt;code&gt;bundle install&lt;/code&gt; 를 실행하는 것을 잊지 마십시오 . 내에서 보석으로 지정하여 &lt;code&gt;Gemfile&lt;/code&gt; , Bundler를이 구문 분석, 등을로드 &lt;code&gt;blorgh.gemspec&lt;/code&gt; 파일을하고 내 파일 요구 &lt;code&gt;lib&lt;/code&gt; 라는 디렉토리 &lt;code&gt;lib/blorgh.rb&lt;/code&gt; . 이 파일은 필요 &lt;code&gt;blorgh/engine.rb&lt;/code&gt; (에있는 파일을 &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; )과라는 기본 모듈 정의 &lt;code&gt;Blorgh&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="7d9f003bd3e9c61fc1c260a584538f163bcce17c" translate="yes" xml:space="preserve">
          <source>Don't forget to update the permitted params in your controller to also include the &lt;code&gt;_destroy&lt;/code&gt; field:</source>
          <target state="translated">&lt;code&gt;_destroy&lt;/code&gt; 필드 도 포함하도록 컨트롤러에서 허용 된 매개 변수를 업데이트하는 것을 잊지 마십시오 :</target>
        </trans-unit>
        <trans-unit id="106b565769df651b3db3c9e062f0cb710adb680a" translate="yes" xml:space="preserve">
          <source>Don't generate configuration that depends on the listen gem</source>
          <target state="translated">listen gem에 의존하는 구성을 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="ff5ae065f2cb39ea45953c49fcdef22bfef43fe0" translate="yes" xml:space="preserve">
          <source>Don't give a deprecation warning on inspect since test/unit and error logs rely on it for diagnostics.</source>
          <target state="translated">검사 / 장치 및 오류 로그는 진단에 의존하므로 검사시 사용 중단 경고를 표시하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="cf9f0f4ca3582c5303ad8f37d77388bd3997a4c2" translate="yes" xml:space="preserve">
          <source>Don't install Spring application preloader</source>
          <target state="translated">Spring 애플리케이션 프리 로더를 설치하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="941eddb7c55c4b0c375a3a184895962095c1d368" translate="yes" xml:space="preserve">
          <source>Don't try to correct user input using restricted lists:</source>
          <target state="translated">제한된 목록을 사용하여 사용자 입력을 수정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c3183a30dfc03b03912390381fa91238dfec15d7" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;require&lt;/code&gt; because it will break the automatic reloading of classes in the development environment - using &lt;code&gt;require_dependency&lt;/code&gt; ensures that classes are loaded and unloaded in the correct manner.</source>
          <target state="translated">개발 환경에서 클래스의 자동 재로드가 중단 될 수 있으므로 &lt;code&gt;require&lt;/code&gt; 를 사용하지 마십시오. &lt;code&gt;require_dependency&lt;/code&gt; 를 사용 하면 클래스가 올바른 방식으로로드 및 언로드됩니다.</target>
        </trans-unit>
        <trans-unit id="f59ea55e2b3d18d8dcc54d83515207083371df21" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;validates_associated&lt;/code&gt; on both ends of your associations. They would call each other in an infinite loop.</source>
          <target state="translated">협회의 양쪽 끝에 &lt;code&gt;validates_associated&lt;/code&gt; 를 사용하지 마십시오 . 그들은 무한 루프에서 서로를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="9fe53022776b66774766532dea4b88ca825f5762" translate="yes" xml:space="preserve">
          <source>Downcases all words except acronyms.</source>
          <target state="translated">약어를 제외한 모든 단어를 소문자로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0ffee85a0948187406fe4a576118f3aac488b8f4" translate="yes" xml:space="preserve">
          <source>Download a dynamically-generated tarball:</source>
          <target state="translated">동적으로 생성 된 타르볼을 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="9b4592f9ae45a647155e857c8bbbe5e38c83f01e" translate="yes" xml:space="preserve">
          <source>Downloading</source>
          <target state="translated">Downloading</target>
        </trans-unit>
        <trans-unit id="092aff6faf0efb6004353a9fdd25b7face9bb283" translate="yes" xml:space="preserve">
          <source>Downloading Files</source>
          <target state="translated">파일 다운로드</target>
        </trans-unit>
        <trans-unit id="f6f7e09cc462242cb2a8eaf9478dec3e3e913e59" translate="yes" xml:space="preserve">
          <source>Downloading#download_blob_to</source>
          <target state="translated">Downloading#download_blob_to</target>
        </trans-unit>
        <trans-unit id="9420eba24a3eb5cc1b3a8c7b549697a747f3dbfd" translate="yes" xml:space="preserve">
          <source>Downloading#download_blob_to_tempfile</source>
          <target state="translated">Downloading#download_blob_to_tempfile</target>
        </trans-unit>
        <trans-unit id="61f603a55288442407db469890acaad69938c082" translate="yes" xml:space="preserve">
          <source>Downloading#tempdir</source>
          <target state="translated">Downloading#tempdir</target>
        </trans-unit>
        <trans-unit id="38e238f1297297afc206bb2a168d45779653272a" translate="yes" xml:space="preserve">
          <source>Downloading::included</source>
          <target state="translated">Downloading::included</target>
        </trans-unit>
        <trans-unit id="e7c60316725827d27462a0bc9755f23a7eac2253" translate="yes" xml:space="preserve">
          <source>Downloads the blob to a tempfile on disk. Yields the tempfile.</source>
          <target state="translated">Blob을 디스크의 임시 파일로 다운로드합니다. 임시 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f92a5809979a99336b08c0f90f150361a6c524ff" translate="yes" xml:space="preserve">
          <source>Downloads the file associated with this blob. If no block is given, the entire file is read into memory and returned. That'll use a lot of RAM for very large files. If a block is given, then the download is streamed and yielded in chunks.</source>
          <target state="translated">이 Blob과 관련된 파일을 다운로드합니다. 블록이 제공되지 않으면 전체 파일이 메모리로 읽혀 리턴됩니다. 매우 큰 파일에는 많은 RAM이 사용됩니다. 블록이 제공되면 다운로드가 스트리밍되고 청크 단위로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="177a5a44fe047464feb9e56be80f267685bc48ab" translate="yes" xml:space="preserve">
          <source>Downloads the file associated with this variant. If no block is given, the entire file is read into memory and returned. That'll use a lot of RAM for very large files. If a block is given, then the download is streamed and yielded in chunks.</source>
          <target state="translated">이 변종과 관련된 파일을 다운로드합니다. 블록이 지정되지 않으면 전체 파일을 메모리로 읽어와 반환합니다. 대용량 파일에는 많은 RAM이 사용됩니다. 블록이 주어지면 다운로드가 스트리밍되고 청크로 양보됩니다.</target>
        </trans-unit>
        <trans-unit id="04bd8b1fc7aa9640542a09cf4ab5055f1469f07a" translate="yes" xml:space="preserve">
          <source>Drawing routes from external files can be very useful to organise a large set of routes into multiple organised ones. You could have a &lt;code&gt;admin.rb&lt;/code&gt; route that contains all the routes for the admin area, another &lt;code&gt;api.rb&lt;/code&gt; file to route API related resources, etc...</source>
          <target state="translated">외부 파일에서 경로를 그리는 것은 많은 경로 세트를 여러 개의 구성된 경로로 구성하는 데 매우 유용 할 수 있습니다. 관리 영역에 대한 모든 경로를 포함 하는 &lt;code&gt;admin.rb&lt;/code&gt; 경로, API 관련 리소스를 라우팅하기위한 또 다른 &lt;code&gt;api.rb&lt;/code&gt; 파일 등을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1d85eff62cd535367dee87c8baa038bad6018cd" translate="yes" xml:space="preserve">
          <source>Drops a table from the database.</source>
          <target state="translated">데이터베이스에서 테이블을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="dff9be90d7eaacfa8d9e37d97537fd8b0f6b87d1" translate="yes" xml:space="preserve">
          <source>Drops the database specified on the &lt;code&gt;name&lt;/code&gt; attribute and creates it again using the provided &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 속성 에 지정된 데이터베이스를 삭제하고 제공된 &lt;code&gt;options&lt;/code&gt; 사용하여 다시 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="09f191b92142a5ee1d80205b0b1b5281c780fe0e" translate="yes" xml:space="preserve">
          <source>Drops the join table specified by the given arguments. See &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;&lt;code&gt;create_join_table&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">주어진 인수로 지정된 결합 테이블을 삭제합니다. 자세한 내용은 &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt; &lt;code&gt;create_join_table&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="725a1a51f84be7a83ee91c813ebf831f5295bdb8" translate="yes" xml:space="preserve">
          <source>Drops the join table specified by the given arguments. See &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt; for details.</source>
          <target state="translated">주어진 인수로 지정된 조인 테이블을 삭제합니다. 자세한 내용은 &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e60267d84b1de5dc4057dce9dbe2b0040be6de44" translate="yes" xml:space="preserve">
          <source>Drops the schema for the given schema name.</source>
          <target state="translated">주어진 스키마 이름에 대한 스키마를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="a65ef1d5d3e5f373f034e118173aad13717290c3" translate="yes" xml:space="preserve">
          <source>Duck-types as a Date-like class. See &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;&lt;code&gt;Object#acts_like?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Date-like 클래스로 Duck-types. 참조 &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt; &lt;code&gt;Object#acts_like?&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0972c734eebe116aadc2a5c3ecf1944c142e5f5e" translate="yes" xml:space="preserve">
          <source>Duck-types as a Date-like class. See &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object#acts_like?&lt;/a&gt;.</source>
          <target state="translated">날짜와 같은 클래스로 오리 유형. &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object # acts_like?를&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="9c1666dff78e62a454106e8e6c5689187982aae8" translate="yes" xml:space="preserve">
          <source>Duck-types as a Time-like class. See &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;&lt;code&gt;Object#acts_like?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Time-like 클래스로 Duck-types. 참조 &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt; &lt;code&gt;Object#acts_like?&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b8f51aee98e5ec767758073637664b2ad081021" translate="yes" xml:space="preserve">
          <source>Duck-types as a Time-like class. See &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object#acts_like?&lt;/a&gt;.</source>
          <target state="translated">시간과 같은 클래스로 오리 유형. &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object # acts_like?를&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="a4bb023601e5dc76d0e99ed84b6bf304423e1039" translate="yes" xml:space="preserve">
          <source>Due to frequent misuse of &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;, you need to pass the &lt;code&gt;multiline: true&lt;/code&gt; option in case you use any of these two anchors in the provided regular expression. In most cases, you should be using &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 과 &lt;code&gt;$&lt;/code&gt; 를 자주 오용하기 때문에 제공된 정규식에서이 두 앵커 중 하나를 사용하는 경우 &lt;code&gt;multiline: true&lt;/code&gt; 옵션 을 전달해야합니다 . 대부분의 경우 &lt;code&gt;\A&lt;/code&gt; 및 &lt;code&gt;\z&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d9695aa53dd79b40c699dc464376cf7ac0f12e78" translate="yes" xml:space="preserve">
          <source>Due to the chmod operation &lt;code&gt;atomic_write&lt;/code&gt; performs, if the target file has an ACL set on it this ACL will be recalculated/modified.</source>
          <target state="translated">chmod 조작 &lt;code&gt;atomic_write&lt;/code&gt; 가 수행 하기 때문에 대상 파일에 ACL이 설정되어 있으면이 ACL이 다시 계산 / 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="45ca117cb0e4b5bb41602bf4205a11f1da11a5d6" translate="yes" xml:space="preserve">
          <source>Due to the migration's name and the column specification after it, Rails will automatically know that you want to add a column to a specific table and write that into the migration for you. You don't need to tell it any more than this.</source>
          <target state="translated">마이그레이션 이름과 그 이후의 열 사양으로 인해 Rails는 자동으로 특정 테이블에 열을 추가하고이를 마이그레이션에 쓰려는 것을 자동으로 인식합니다. 이것보다 더 이상 말할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="34657d2a9d129225cb1e6113454ff53114ac869f" translate="yes" xml:space="preserve">
          <source>Due to the way Active Record interprets parameters in combination with the way that Rack parses query parameters it was possible to issue unexpected database queries with &lt;code&gt;IS NULL&lt;/code&gt; where clauses. As a response to that security issue (&lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/8SA-M3as7A8/Mr9fi9X4kNgJ&quot;&gt;CVE-2012-2660&lt;/a&gt;, &lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/jILZ34tAHF4/7x0hLH-o0-IJ&quot;&gt;CVE-2012-2694&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/CVE-2012-2660/rubyonrails-security/c7jT-EeN9eI/L0u4e87zYGMJ&quot;&gt;CVE-2013-0155&lt;/a&gt;) &lt;code&gt;deep_munge&lt;/code&gt; method was introduced as a solution to keep Rails secure by default.</source>
          <target state="translated">랙이 쿼리 매개 변수를 구문 분석하는 방식과 함께 Active Record가 매개 변수를 해석하는 방식으로 인해 &lt;code&gt;IS NULL&lt;/code&gt; where 절을 사용 하여 예기치 않은 데이터베이스 쿼리를 실행할 수있었습니다 . 보안 문제 ( &lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/8SA-M3as7A8/Mr9fi9X4kNgJ&quot;&gt;CVE-2012-2660&lt;/a&gt; , &lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/jILZ34tAHF4/7x0hLH-o0-IJ&quot;&gt;CVE-2012-2694&lt;/a&gt; 및 &lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/CVE-2012-2660/rubyonrails-security/c7jT-EeN9eI/L0u4e87zYGMJ&quot;&gt;CVE-2013-0155&lt;/a&gt; )에 대한 &lt;code&gt;deep_munge&lt;/code&gt; 으로 기본적으로 Rails를 안전하게 유지하기위한 솔루션으로 deep_munge 방법이 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="45317cd6a360a890200ff4aea363b110e758e71b" translate="yes" xml:space="preserve">
          <source>Dump the fixture data into a method in case you want to access it directly</source>
          <target state="translated">픽스처 데이터를 메소드에 직접 덤프하려는 경우 메소드에 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="66109e6dfd2344936d6f58d9fcf4ae1a60c91098" translate="yes" xml:space="preserve">
          <source>Dumping schema caches for multiple databases</source>
          <target state="translated">여러 데이터베이스에 대한 스키마 캐시 덤프</target>
        </trans-unit>
        <trans-unit id="813d9fb3e691a22d125972e22886b26259c1cf21" translate="yes" xml:space="preserve">
          <source>Dumps objects in &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; (JavaScript &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; Notation). See &lt;a href=&quot;http://www.json.org&quot;&gt;www.json.org&lt;/a&gt; for more info.</source>
          <target state="translated">&lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; (JavaScript &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; Notation)으로 객체를 덤프합니다 . 자세한 내용은 &lt;a href=&quot;http://www.json.org&quot;&gt;www.json.org&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4f962786c318e6d8a4694c8d188f5ab8c5b1f7f" translate="yes" xml:space="preserve">
          <source>Dumps objects in &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; (JavaScript &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt; Notation). See &lt;a href=&quot;http://www.json.org&quot;&gt;www.json.org&lt;/a&gt; for more info.</source>
          <target state="translated">&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; (JavaScript &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt; Notation)으로 객체를 덤프합니다 . 자세한 내용은 &lt;a href=&quot;http://www.json.org&quot;&gt;www.json.org&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="345cb96f43977963753166fc9aa0d247e48c075c" translate="yes" xml:space="preserve">
          <source>Duped objects have no id assigned and are treated as new records. Note that this is a &amp;ldquo;shallow&amp;rdquo; copy as it copies the object's attributes only, not its associations. The extent of a &amp;ldquo;deep&amp;rdquo; copy is application specific and is therefore left to the application to implement according to its need. The dup method does not preserve the timestamps (created|updated)_(at|on).</source>
          <target state="translated">Duped 개체에는 할당 된 ID가 없으며 새 레코드로 취급됩니다. 이 개체는 개체의 연결이 아니라 개체의 특성 만 복사하므로 &quot;얕은&quot;복사본입니다. &quot;심층&quot;복사본의 범위는 응용 프로그램에 따라 다르므로 필요에 따라 응용 프로그램에서 구현해야합니다. dup 방법은 타임 스탬프 (생성 된 | 업데이트 된) _ (at | on)를 유지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f75681e8d81ebb045245dae8d40dea9d892c025" translate="yes" xml:space="preserve">
          <source>Duplicating</source>
          <target state="translated">Duplicating</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="09b44e3660d40c66f8f2d4e9f9c8bed5fa2546fe" translate="yes" xml:space="preserve">
          <source>Duration (seconds)</source>
          <target state="translated">지속 시간 (초)</target>
        </trans-unit>
        <trans-unit id="f8dec88b87fe41fbccbc7a44d87758d45618646f" translate="yes" xml:space="preserve">
          <source>Duration#%</source>
          <target state="translated">Duration#%</target>
        </trans-unit>
        <trans-unit id="e26c0b8bbe0851187e71d403be76ae5d6cdadec0" translate="yes" xml:space="preserve">
          <source>Duration#&amp;lt;=&amp;gt;</source>
          <target state="translated">Duration#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="47b2a0ced71e66f037f05eea9eba34c4bfc4047c" translate="yes" xml:space="preserve">
          <source>Duration#*</source>
          <target state="translated">Duration#*</target>
        </trans-unit>
        <trans-unit id="997836a32ab23f5be77e30da8e9e672b9c923d4c" translate="yes" xml:space="preserve">
          <source>Duration#+</source>
          <target state="translated">Duration#+</target>
        </trans-unit>
        <trans-unit id="1e2797d79930007b4f277e69a4bc95776ff8877f" translate="yes" xml:space="preserve">
          <source>Duration#-</source>
          <target state="translated">Duration#-</target>
        </trans-unit>
        <trans-unit id="6a1ca03cff6654a8b6a8412630cd8d28a34d40dc" translate="yes" xml:space="preserve">
          <source>Duration#/</source>
          <target state="translated">Duration#/</target>
        </trans-unit>
        <trans-unit id="3c45ced6dffe7e61d67b3a06fceba1a31fe1e9bf" translate="yes" xml:space="preserve">
          <source>Duration#==</source>
          <target state="translated">Duration#==</target>
        </trans-unit>
        <trans-unit id="0a32b58a5e6bc49e728f8a3b172fe6655454ddf1" translate="yes" xml:space="preserve">
          <source>Duration#after</source>
          <target state="translated">Duration#after</target>
        </trans-unit>
        <trans-unit id="42e08005c8f6dd55a8e18345de7eb6fd4af6f2b6" translate="yes" xml:space="preserve">
          <source>Duration#ago</source>
          <target state="translated">Duration#ago</target>
        </trans-unit>
        <trans-unit id="77076f5737d953772adf2e196e3616b63d884458" translate="yes" xml:space="preserve">
          <source>Duration#before</source>
          <target state="translated">Duration#before</target>
        </trans-unit>
        <trans-unit id="d1a7641f42113a3de4f450a63f1be7729fe96a03" translate="yes" xml:space="preserve">
          <source>Duration#eql?</source>
          <target state="translated">Duration#eql?</target>
        </trans-unit>
        <trans-unit id="091758cff011f04552b5f1185ede7921c6363305" translate="yes" xml:space="preserve">
          <source>Duration#from_now</source>
          <target state="translated">Duration#from_now</target>
        </trans-unit>
        <trans-unit id="b8d9e965fb3263786bc11a3d40cfc31084dad12c" translate="yes" xml:space="preserve">
          <source>Duration#hash</source>
          <target state="translated">Duration#hash</target>
        </trans-unit>
        <trans-unit id="e072a21625623681758be577fc51e03066d1fef2" translate="yes" xml:space="preserve">
          <source>Duration#iso8601</source>
          <target state="translated">Duration#iso8601</target>
        </trans-unit>
        <trans-unit id="0dfa5653e27b3b9551d177a89d8ad236ce517900" translate="yes" xml:space="preserve">
          <source>Duration#parts</source>
          <target state="translated">Duration#parts</target>
        </trans-unit>
        <trans-unit id="40d7dbec34be539f8a9731cef6c68813b00fa65f" translate="yes" xml:space="preserve">
          <source>Duration#since</source>
          <target state="translated">Duration#since</target>
        </trans-unit>
        <trans-unit id="fc8febb017d9c7ce749de3172c7a2fda17130d18" translate="yes" xml:space="preserve">
          <source>Duration#to_i</source>
          <target state="translated">Duration#to_i</target>
        </trans-unit>
        <trans-unit id="2c247e108474207d3b0f5c2ecb0c691a98b693b8" translate="yes" xml:space="preserve">
          <source>Duration#to_s</source>
          <target state="translated">Duration#to_s</target>
        </trans-unit>
        <trans-unit id="b7945de93883a969aa7283840479a5c78fb95c8a" translate="yes" xml:space="preserve">
          <source>Duration#until</source>
          <target state="translated">Duration#until</target>
        </trans-unit>
        <trans-unit id="bbdffaa148637456798694aaa0f696471c7c1db9" translate="yes" xml:space="preserve">
          <source>Duration#value</source>
          <target state="translated">Duration#value</target>
        </trans-unit>
        <trans-unit id="c2b9e389b6243b24ad43949ead5053aa6077fd7f" translate="yes" xml:space="preserve">
          <source>Duration::build</source>
          <target state="translated">Duration::build</target>
        </trans-unit>
        <trans-unit id="21341c3232d338483355ac0ed95cb9df5bcd8b5f" translate="yes" xml:space="preserve">
          <source>Duration::parse</source>
          <target state="translated">Duration::parse</target>
        </trans-unit>
        <trans-unit id="0fed9c72bd4c832820c4a574688a05097012a340" translate="yes" xml:space="preserve">
          <source>Durations can be added to and subtracted from dates:</source>
          <target state="translated">날짜에 기간을 더하거나 뺄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29e45a360779a8a0dec64360e0c21e522f6258ff" translate="yes" xml:space="preserve">
          <source>Durations can be added to and subtracted from datetimes:</source>
          <target state="translated">날짜 시간에 기간을 더하거나 뺄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d0ac3829e11b020b4656df58b2881123674c99f" translate="yes" xml:space="preserve">
          <source>Durations can be added to and subtracted from time objects:</source>
          <target state="translated">시간 객체에 기간을 더하거나 뺄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54a17512123660cd42ea021c319e5f116ad2cfb6" translate="yes" xml:space="preserve">
          <source>During the normal operation of a Rails application, objects may be created, updated, and destroyed. Active Record provides hooks into this &lt;em&gt;object life cycle&lt;/em&gt; so that you can control your application and its data.</source>
          <target state="translated">Rails 애플리케이션이 정상적으로 작동하는 동안 객체가 생성, 업데이트 및 파괴 될 수 있습니다. Active Record는이 &lt;em&gt;개체 수명주기에&lt;/em&gt; 대한 연결 고리를 제공 하므로 응용 프로그램 및 해당 데이터를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f56abd5511d0a2cff8b383170f9bbbb6e4af9d3c" translate="yes" xml:space="preserve">
          <source>During the precompilation phase an SHA256 is generated from the contents of the compiled files, and inserted into the filenames as they are written to disk. These fingerprinted names are used by the Rails helpers in place of the manifest name.</source>
          <target state="translated">사전 컴파일 단계 중에 SHA256이 컴파일 된 파일의 컨텐츠에서 생성되어 디스크에 기록 될 때 파일 이름에 삽입됩니다. 이러한 지문 이름은 매니페스트 이름 대신 Rails 헬퍼가 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e4f64096177ea8a14d10eab478194cb8b568c8a4" translate="yes" xml:space="preserve">
          <source>During the processing of the inbound email, the status will be tracked. Before processing begins, the email will normally have the &lt;code&gt;pending&lt;/code&gt; status. Once processing begins, just before callbacks and the &lt;code&gt;#process&lt;/code&gt; method is called, the status is changed to &lt;code&gt;processing&lt;/code&gt;. If processing is allowed to complete, the status is changed to &lt;code&gt;delivered&lt;/code&gt;. If a bounce is triggered, then &lt;code&gt;bounced&lt;/code&gt;. If an unhandled exception is bubbled up, then &lt;code&gt;failed&lt;/code&gt;.</source>
          <target state="translated">인바운드 이메일을 처리하는 동안 상태가 추적됩니다. 처리가 시작되기 전에 전자 메일은 일반적으로 &lt;code&gt;pending&lt;/code&gt; 상태입니다. 처리가 시작되면 콜백 및 &lt;code&gt;#process&lt;/code&gt; 메소드가 호출 되기 직전 에 상태가 &lt;code&gt;processing&lt;/code&gt; 로 변경됩니다 . 처리가 완료되면 상태가 &lt;code&gt;delivered&lt;/code&gt; 로 변경 됩니다 . 바운스가 트리거되면 &lt;code&gt;bounced&lt;/code&gt; 됩니다. 처리되지 않은 예외가 발생하면 &lt;code&gt;failed&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c0e18d151e6c159495620ca34c70a6c5b3237e24" translate="yes" xml:space="preserve">
          <source>During the second half of 2007, there were 88 vulnerabilities reported in Mozilla browsers, 22 in Safari, 18 in IE, and 12 in Opera. The &lt;a href=&quot;http://eval.symantec.com/mktginfo/enterprise/white_papers/b-whitepaper_internet_security_threat_report_xiii_04-2008.en-us.pdf&quot;&gt;Symantec Global Internet Security threat report&lt;/a&gt; also documented 239 browser plug-in vulnerabilities in the last six months of 2007. &lt;a href=&quot;http://pandalabs.pandasecurity.com/mpack-uncovered/&quot;&gt;Mpack&lt;/a&gt; is a very active and up-to-date attack framework which exploits these vulnerabilities. For criminal hackers, it is very attractive to exploit an SQL-Injection vulnerability in a web application framework and insert malicious code in every textual table column. In April 2008 more than 510,000 sites were hacked like this, among them the British government, United Nations, and many more high profile targets.</source>
          <target state="translated">2007 년 하반기에는 Mozilla 브라우저에서 88 건, Safari에서 22 건, IE에서 18 건, Opera에서 12 건의 취약점이보고되었습니다. &lt;a href=&quot;http://eval.symantec.com/mktginfo/enterprise/white_papers/b-whitepaper_internet_security_threat_report_xiii_04-2008.en-us.pdf&quot;&gt;시만텍 글로벌 인터넷 보안 위협 보고서는&lt;/a&gt; 또한 239 브라우저 플러그 인 2007 년의 지난 6 개월 동안의 취약점 문서화 &lt;a href=&quot;http://pandalabs.pandasecurity.com/mpack-uncovered/&quot;&gt;Mpack을가&lt;/a&gt; 이러한 취약점을 악용하는 매우 활동하고 최신 공격 프레임 워크입니다. 범죄 해커에게는 웹 응용 프로그램 프레임 워크에서 SQL-Injection 취약점을 악용하고 모든 텍스트 테이블 열에 악성 코드를 삽입하는 것이 매우 매력적입니다. 2008 년 4 월에 5 억 개가 넘는 사이트가 영국 정부, 유엔 및 더 많은 주요 대상 중에서 이와 같이 해킹되었습니다.</target>
        </trans-unit>
        <trans-unit id="83c00f17cc1b1966754ccb154ff79ddaed600527" translate="yes" xml:space="preserve">
          <source>Dynamic Finders</source>
          <target state="translated">동적 파인더</target>
        </trans-unit>
        <trans-unit id="f68c1eed8a5b13c48c7ec75c21b7357e122568cd" translate="yes" xml:space="preserve">
          <source>Dynamic Segments</source>
          <target state="translated">동적 세그먼트</target>
        </trans-unit>
        <trans-unit id="733c8456ebc6bc6df1aeb57f372f8ec7a993cccc" translate="yes" xml:space="preserve">
          <source>Dynamic attribute-based finders</source>
          <target state="translated">동적 속성 기반 파인더</target>
        </trans-unit>
        <trans-unit id="11ae3ba0c59f05baca348e47713ac96a99886720" translate="yes" xml:space="preserve">
          <source>Dynamic attribute-based finders are a mildly deprecated way of getting (and/or creating) objects by simple queries without turning to SQL. They work by appending the name of an attribute to &lt;code&gt;find_by_&lt;/code&gt; like &lt;code&gt;Person.find_by_user_name&lt;/code&gt;. Instead of writing &lt;code&gt;Person.find_by(user_name: user_name)&lt;/code&gt;, you can use &lt;code&gt;Person.find_by_user_name(user_name)&lt;/code&gt;.</source>
          <target state="translated">동적 속성 기반 파인더는 SQL로 전환하지 않고 간단한 쿼리로 객체를 가져 오거나 생성하는 방식이 약간 더 이상 사용되지 않습니다. &lt;code&gt;Person.find_by_user_name&lt;/code&gt; 과 같이 &lt;code&gt;find_by_&lt;/code&gt; 에 속성 이름을 추가하여 작동합니다 . &lt;code&gt;Person.find_by(user_name: user_name)&lt;/code&gt; 을 쓰는 대신 &lt;code&gt;Person.find_by_user_name(user_name)&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a58a10333a817337c510676f32925aefaafb1c1d" translate="yes" xml:space="preserve">
          <source>Dynamic fixtures with</source>
          <target state="translated">다이나믹 비품</target>
        </trans-unit>
        <trans-unit id="fe41360d436a069c77566ee0b8d0ec4ea6acb912" translate="yes" xml:space="preserve">
          <source>Dynamic request matching</source>
          <target state="translated">동적 요청 일치</target>
        </trans-unit>
        <trans-unit id="97aa4c35888bbc9904b7ce614b6b953ecd8e12aa" translate="yes" xml:space="preserve">
          <source>Dynamic web applications usually build pages with a variety of components not all of which have the same caching characteristics. When different parts of the page need to be cached and expired separately you can use Fragment Caching.</source>
          <target state="translated">동적 웹 애플리케이션은 일반적으로 모두 동일한 캐싱 특성을 갖지 않는 다양한 구성 요소로 페이지를 빌드합니다. 페이지의 다른 부분을 별도로 캐시하고 만료해야 할 경우 조각 캐싱을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5657fba145a29885c79e6bb48c5399dea9be007" translate="yes" xml:space="preserve">
          <source>E.g., the following first tries to translate the key &lt;code&gt;:missing&lt;/code&gt; and then the key &lt;code&gt;:also_missing.&lt;/code&gt; As both do not yield a result, the string &quot;Not here&quot; will be returned:</source>
          <target state="translated">예를 들어, 다음은 먼저 키 &lt;code&gt;:missing&lt;/code&gt; 과 키 &lt;code&gt;:also_missing.&lt;/code&gt; 을 번역하려고 시도합니다 . 둘 다 결과를 얻지 못하므로 &quot;Not here&quot;문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5c631f17e65e0c38b7ad57b2882c2f9148ff8b3e" translate="yes" xml:space="preserve">
          <source>EMPTY_ARRAY</source>
          <target state="translated">EMPTY_ARRAY</target>
        </trans-unit>
        <trans-unit id="22484388f6414226d6b7b69a73cac7707bd9dcdd" translate="yes" xml:space="preserve">
          <source>EMPTY_HASH</source>
          <target state="translated">EMPTY_HASH</target>
        </trans-unit>
        <trans-unit id="df04091edb728ce7c5976e8034d0309a8db5de88" translate="yes" xml:space="preserve">
          <source>ENCODED_BLANKS</source>
          <target state="translated">ENCODED_BLANKS</target>
        </trans-unit>
        <trans-unit id="123db01616ae893c74a6bce3290f05dff40b09af" translate="yes" xml:space="preserve">
          <source>ENCRYPTED_COOKIE_CIPHER</source>
          <target state="translated">ENCRYPTED_COOKIE_CIPHER</target>
        </trans-unit>
        <trans-unit id="5493fc703229265b50dd603a06ccd61b019bbe13" translate="yes" xml:space="preserve">
          <source>ENCRYPTED_COOKIE_SALT</source>
          <target state="translated">ENCRYPTED_COOKIE_SALT</target>
        </trans-unit>
        <trans-unit id="55303e0d565f956497053eebfbb90447f26d8d70" translate="yes" xml:space="preserve">
          <source>ENCRYPTED_SIGNED_COOKIE_SALT</source>
          <target state="translated">ENCRYPTED_SIGNED_COOKIE_SALT</target>
        </trans-unit>
        <trans-unit id="39a4a4584ae2892a45e34a2fc2326c7aeea651aa" translate="yes" xml:space="preserve">
          <source>ENUM values can't be dropped currently. You can read why &lt;a href=&quot;https://www.postgresql.org/message-id/29F36C7C98AB09499B1A209D48EAA615B7653DBC8A@mail2a.alliedtesting.com&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">현재 ENUM 값을 삭제할 수 없습니다. 당신은 왜 &lt;a href=&quot;https://www.postgresql.org/message-id/29F36C7C98AB09499B1A209D48EAA615B7653DBC8A@mail2a.alliedtesting.com&quot;&gt;여기&lt;/a&gt; 를 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="48b9d6e86b0b225a5a69a769d4cf524608050356" translate="yes" xml:space="preserve">
          <source>ENV_METHODS</source>
          <target state="translated">ENV_METHODS</target>
        </trans-unit>
        <trans-unit id="2859d8584ea8c10b85a549c283d13f20ca15f6d8" translate="yes" xml:space="preserve">
          <source>ERB</source>
          <target state="translated">ERB</target>
        </trans-unit>
        <trans-unit id="0e97c9043580ce7d05c27b2762984b51031e1686" translate="yes" xml:space="preserve">
          <source>ERB allows you to embed Ruby code within templates. The YAML fixture format is pre-processed with ERB when Rails loads fixtures. This allows you to use Ruby to help you generate some sample data. For example, the following code generates a thousand users:</source>
          <target state="translated">ERB를 사용하면 템플릿 내에 Ruby 코드를 포함시킬 수 있습니다. YAML 픽스처 형식은 Rails가 픽스처를로드 할 때 ERB로 사전 처리됩니다. 이를 통해 Ruby를 사용하여 일부 샘플 데이터를 생성 할 수 있습니다. 예를 들어 다음 코드는 수천 명의 사용자를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3a5dfd275ff2454e177db7aac7dca9b213289a76" translate="yes" xml:space="preserve">
          <source>ERB::Util</source>
          <target state="translated">ERB::Util</target>
        </trans-unit>
        <trans-unit id="be7f211dd76129d250a3e1f5d60f6b55ba9180c5" translate="yes" xml:space="preserve">
          <source>ER_BAD_DB_ERROR</source>
          <target state="translated">ER_BAD_DB_ERROR</target>
        </trans-unit>
        <trans-unit id="0896f62d6d9ccbcefd87b1eb853f6ef2fd1e70d1" translate="yes" xml:space="preserve">
          <source>ER_CANNOT_ADD_FOREIGN</source>
          <target state="translated">ER_CANNOT_ADD_FOREIGN</target>
        </trans-unit>
        <trans-unit id="163091c84801711301a8e7ad4e09e4388f6efecc" translate="yes" xml:space="preserve">
          <source>ER_CANNOT_CREATE_TABLE</source>
          <target state="translated">ER_CANNOT_CREATE_TABLE</target>
        </trans-unit>
        <trans-unit id="e7ae3550307b816e5bf924801d7c0f5632363a38" translate="yes" xml:space="preserve">
          <source>ER_DATA_TOO_LONG</source>
          <target state="translated">ER_DATA_TOO_LONG</target>
        </trans-unit>
        <trans-unit id="539644399620ab00b72bd5e42ef4f1bc1cf68de8" translate="yes" xml:space="preserve">
          <source>ER_DB_CREATE_EXISTS</source>
          <target state="translated">ER_DB_CREATE_EXISTS</target>
        </trans-unit>
        <trans-unit id="a292993b1dd8419979c2f30a85eb342c63f2de90" translate="yes" xml:space="preserve">
          <source>ER_DO_NOT_HAVE_DEFAULT</source>
          <target state="translated">ER_DO_NOT_HAVE_DEFAULT</target>
        </trans-unit>
        <trans-unit id="13b7cd8f7b89497549422e84d877cd1d6d418907" translate="yes" xml:space="preserve">
          <source>ER_DUP_ENTRY</source>
          <target state="translated">ER_DUP_ENTRY</target>
        </trans-unit>
        <trans-unit id="25a8291aff6a0219317ebe0d0d1ed62a383ac32c" translate="yes" xml:space="preserve">
          <source>ER_FILSORT_ABORT</source>
          <target state="translated">ER_FILSORT_ABORT</target>
        </trans-unit>
        <trans-unit id="d2dad7489363846e69940863dfa0e5ebba66c4e0" translate="yes" xml:space="preserve">
          <source>ER_FK_INCOMPATIBLE_COLUMNS</source>
          <target state="translated">ER_FK_INCOMPATIBLE_COLUMNS</target>
        </trans-unit>
        <trans-unit id="7cf7ceebe2bc21aae5ffd3db898991faeeac33f9" translate="yes" xml:space="preserve">
          <source>ER_LOCK_DEADLOCK</source>
          <target state="translated">ER_LOCK_DEADLOCK</target>
        </trans-unit>
        <trans-unit id="c2ec2faad0e1eea9134946d386565fc626b7064c" translate="yes" xml:space="preserve">
          <source>ER_LOCK_WAIT_TIMEOUT</source>
          <target state="translated">ER_LOCK_WAIT_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="f93bde7ed3cc79159dba18652513fd878726a1e2" translate="yes" xml:space="preserve">
          <source>ER_NOT_NULL_VIOLATION</source>
          <target state="translated">ER_NOT_NULL_VIOLATION</target>
        </trans-unit>
        <trans-unit id="7af01830eaef67599967a844de73924e514a56b1" translate="yes" xml:space="preserve">
          <source>ER_NO_REFERENCED_ROW</source>
          <target state="translated">ER_NO_REFERENCED_ROW</target>
        </trans-unit>
        <trans-unit id="071ca8ae424c8fd08f6e254281b454c4fdaee3b2" translate="yes" xml:space="preserve">
          <source>ER_NO_REFERENCED_ROW_2</source>
          <target state="translated">ER_NO_REFERENCED_ROW_2</target>
        </trans-unit>
        <trans-unit id="184734755842519c06a205bd926e709a74dd4f4d" translate="yes" xml:space="preserve">
          <source>ER_OUT_OF_RANGE</source>
          <target state="translated">ER_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="7d0aee09634274bd7bfd445c6cf0c663f85170d5" translate="yes" xml:space="preserve">
          <source>ER_QUERY_INTERRUPTED</source>
          <target state="translated">ER_QUERY_INTERRUPTED</target>
        </trans-unit>
        <trans-unit id="4c2bc5f5a078b948702a23d7ed148601dde4c12b" translate="yes" xml:space="preserve">
          <source>ER_QUERY_TIMEOUT</source>
          <target state="translated">ER_QUERY_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="0f1e872b7eff6185618aedbb5b85eb48ecb29dc1" translate="yes" xml:space="preserve">
          <source>ER_ROW_IS_REFERENCED</source>
          <target state="translated">ER_ROW_IS_REFERENCED</target>
        </trans-unit>
        <trans-unit id="d891596401568b0a0b64e38c1bf47ca0e392a4b4" translate="yes" xml:space="preserve">
          <source>ER_ROW_IS_REFERENCED_2</source>
          <target state="translated">ER_ROW_IS_REFERENCED_2</target>
        </trans-unit>
        <trans-unit id="70ad8b294efaedbe6a1e59add42766e2a16a26a1" translate="yes" xml:space="preserve">
          <source>ESCAPE_KEY_CHARS</source>
          <target state="translated">ESCAPE_KEY_CHARS</target>
        </trans-unit>
        <trans-unit id="1dee7dc80b0ccd9c50d4278650e1686e85cd585f" translate="yes" xml:space="preserve">
          <source>EVENT_NAME</source>
          <target state="translated">EVENT_NAME</target>
        </trans-unit>
        <trans-unit id="55f4d66e5f356667218b9a5021677bf4bac7eb0d" translate="yes" xml:space="preserve">
          <source>EXABYTE</source>
          <target state="translated">EXABYTE</target>
        </trans-unit>
        <trans-unit id="21202e46aca74d795eece8945ec8e8b1522daa55" translate="yes" xml:space="preserve">
          <source>EXCLUDE_PARAMETERS</source>
          <target state="translated">EXCLUDE_PARAMETERS</target>
        </trans-unit>
        <trans-unit id="9a673a6981a22d79b67046ad1463de973c3c163b" translate="yes" xml:space="preserve">
          <source>EXTENSION_LOOKUP</source>
          <target state="translated">EXTENSION_LOOKUP</target>
        </trans-unit>
        <trans-unit id="eca35f3afd9bb8358d3822cf7d57622041389896" translate="yes" xml:space="preserve">
          <source>Each action results in a response, which holds the headers and document to be sent to the user's browser. The actual response object is generated automatically through the use of renders and redirects and requires no user intervention.</source>
          <target state="translated">각 조치는 응답을 생성하며,이 응답은 사용자의 브라우저로 전송 될 헤더 및 문서를 보유합니다. 실제 응답 객체는 렌더링 및 리디렉션을 사용하여 자동으로 생성되며 사용자 개입이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4af94e6f91869e51828396f28c16655ea7074187" translate="yes" xml:space="preserve">
          <source>Each channel can then again be streaming zero or more broadcastings. A broadcasting is a pubsub link where anything transmitted by the broadcaster is sent directly to the channel subscribers who are streaming that named broadcasting.</source>
          <target state="translated">각 채널은 다시 0 개 이상의 방송을 스트리밍 할 수 있습니다. 브로드 캐스팅은 브로드 캐스터가 전송 한 모든 것이 해당 명명 된 브로드 캐스트를 스트리밍하는 채널 가입자에게 직접 전송되는 pubsub 링크입니다.</target>
        </trans-unit>
        <trans-unit id="b34705548fe49e7f38372207cb5e35a0f5b3560e" translate="yes" xml:space="preserve">
          <source>Each comment belongs to one article.</source>
          <target state="translated">각 의견은 하나의 기사에 속합니다.</target>
        </trans-unit>
        <trans-unit id="bcdb5114235f0c15d821edab5dae518a94d8d59f" translate="yes" xml:space="preserve">
          <source>Each consumer can in turn subscribe to multiple &lt;em&gt;channels&lt;/em&gt;. Each channel encapsulates a logical unit of work, similar to what a controller does in a regular MVC setup. For example, you could have a &lt;code&gt;ChatChannel&lt;/code&gt; and an &lt;code&gt;AppearancesChannel&lt;/code&gt;, and a consumer could be subscribed to either or to both of these channels. At the very least, a consumer should be subscribed to one channel.</source>
          <target state="translated">각 소비자는 차례로 여러 &lt;em&gt;채널&lt;/em&gt; 을 구독 할 수 있습니다 . 각 채널은 일반 MVC 설정에서 컨트롤러가 수행하는 작업과 유사하게 논리적 작업 단위를 캡슐화합니다. 예를 들어 &lt;code&gt;ChatChannel&lt;/code&gt; 및 &lt;code&gt;AppearancesChannel&lt;/code&gt; 을 가질 수 있으며 소비자는 이러한 채널 중 하나 또는 둘 모두를 구독 할 수 있습니다. 최소한 소비자는 하나의 채널을 구독해야합니다.</target>
        </trans-unit>
        <trans-unit id="5804a881d5125e80dbda299575002107f234e1b2" translate="yes" xml:space="preserve">
          <source>Each consumer can in turn subscribe to multiple cable channels. Each channel encapsulates a logical unit of work, similar to what a controller does in a regular MVC setup. For example, you could have a &lt;code&gt;ChatChannel&lt;/code&gt; and an &lt;code&gt;AppearancesChannel&lt;/code&gt;, and a consumer could be subscribed to either or to both of these channels. At the very least, a consumer should be subscribed to one channel.</source>
          <target state="translated">각 소비자는 차례로 여러 케이블 채널을 구독 할 수 있습니다. 각 채널은 일반적인 MVC 설정에서 컨트롤러가하는 것과 유사한 논리적 작업 단위를 캡슐화합니다. 예를 들어, &lt;code&gt;ChatChannel&lt;/code&gt; 및 &lt;code&gt;AppearancesChannel&lt;/code&gt; 을 가질 수 있으며 소비자는 이러한 채널 중 하나 또는 둘 다에 가입 할 수 있습니다. 최소한 소비자는 하나의 채널을 구독해야합니다.</target>
        </trans-unit>
        <trans-unit id="93e15c1febcd000e010d9dd48e40cea295711dd7" translate="yes" xml:space="preserve">
          <source>Each environment's configuration can be modified similarly. In this case, we can modify our test environment by changing the options found in &lt;code&gt;config/environments/test.rb&lt;/code&gt;.</source>
          <target state="translated">각 환경의 구성을 유사하게 수정할 수 있습니다. 이 경우 &lt;code&gt;config/environments/test.rb&lt;/code&gt; 에있는 옵션을 변경하여 테스트 환경을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="62fff8ae57d2602dbb6fa8fec76fb04c47b16f21" translate="yes" xml:space="preserve">
          <source>Each fixture is given a name followed by an indented list of colon-separated key/value pairs. Records are typically separated by a blank line. You can place comments in a fixture file by using the # character in the first column.</source>
          <target state="translated">각 조명기에는 이름과 콜론으로 구분 된 키 / 값 쌍의 들여 쓰기 목록이 표시됩니다. 레코드는 일반적으로 빈 줄로 구분됩니다. 첫 번째 열에서 # 문자를 사용하여 조명기 파일에 주석을 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c3c27c173a90e43c42915cf6e254e21301a97c3" translate="yes" xml:space="preserve">
          <source>Each helper accepts an arbitrary number of attribute names, so with a single line of code you can add the same kind of validation to several attributes.</source>
          <target state="translated">각 도우미는 임의의 수의 속성 이름을 허용하므로 한 줄의 코드로 여러 종류의 속성에 동일한 종류의 유효성 검사를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f30a5229075bb5840d6cfd30ff769ef1b9d193fc" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Author&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Author&lt;/code&gt; 모델 의 각 인스턴스 에는 다음과 같은 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c720b8fcee7bdf8bf56ea9268cd91fb8e5711bd8" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Book&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Book&lt;/code&gt; 모델 의 각 인스턴스 에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5258e30e47c48c54ba567cd490ba2893cbbe753b" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Part&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Part&lt;/code&gt; 모델 의 각 인스턴스 에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c545528ae3300684abb7def65a58a9aa60b111c" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Supplier&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Supplier&lt;/code&gt; 모델 의 각 인스턴스 에는 다음과 같은 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b06a46b8e5542bca5542d6f2d4707633702d9ff" translate="yes" xml:space="preserve">
          <source>Each job uses the &lt;code&gt;I18n.locale&lt;/code&gt; set when the job was created. This is useful if you send emails asynchronously:</source>
          <target state="translated">각 작업은 작업이 생성 될 때 설정된 &lt;code&gt;I18n.locale&lt;/code&gt; 을 사용합니다 . 이것은 이메일을 비동기 적으로 보내는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1f3e37ed7b979503b80c75083ac3e84e70e381f0" translate="yes" xml:space="preserve">
          <source>Each job uses the &lt;code&gt;I18n.locale&lt;/code&gt; set when the job was created. Useful if you send emails asynchronously:</source>
          <target state="translated">각 작업은 작업을 만들 때 &lt;code&gt;I18n.locale&lt;/code&gt; 세트를 사용합니다 . 이메일을 비동기 적으로 보내는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cad151b800b1ed18aac1d3d33a3047ed4e2b948c" translate="yes" xml:space="preserve">
          <source>Each of these classes include &lt;code&gt;Minitest::Assertions&lt;/code&gt;, allowing us to use all of the basic assertions in our tests.</source>
          <target state="translated">이러한 각 클래스에는 &lt;code&gt;Minitest::Assertions&lt;/code&gt; 포함되어 있어 테스트에서 모든 기본 어설 션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18cb07f68f8c34fad2542625456fd42a036202c5" translate="yes" xml:space="preserve">
          <source>Each of these fixtures has two unique identifiers: one for the database and one for the humans. Why don't we generate the primary key instead? Hashing each fixture's label yields a consistent ID:</source>
          <target state="translated">각 조명기에는 데이터베이스와 사람을위한 두 가지 고유 식별자가 있습니다. 기본 키를 대신 생성하지 않는 이유는 무엇입니까? 각 조명기의 레이블을 해싱하면 일관된 ID가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="0c2f2c5887d7edef51d0ecbe2c5110951f923385" translate="yes" xml:space="preserve">
          <source>Each of these helpers has a corresponding &lt;code&gt;_url&lt;/code&gt; helper (such as &lt;code&gt;photos_url&lt;/code&gt;) which returns the same path prefixed with the current host, port, and path prefix.</source>
          <target state="translated">이 헬퍼 각각에는 해당 &lt;code&gt;_url&lt;/code&gt; 헬퍼 (예 : &lt;code&gt;photos_url&lt;/code&gt; )가있어 현재 호스트, 포트 및 경로 접두사가 앞에 붙은 동일한 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4c8269be01f57a4aed32e59c7ef622858a221620" translate="yes" xml:space="preserve">
          <source>Each response stream creates a new thread and copies over the thread local variables from the original thread. Having too many thread local variables can negatively impact performance. Similarly, a large number of threads can also hinder performance.</source>
          <target state="translated">각 응답 스트림은 새 스레드를 작성하고 원래 스레드에서 스레드 로컬 변수를 복사합니다. 스레드 로컬 변수가 너무 많으면 성능에 부정적인 영향을 줄 수 있습니다. 마찬가지로 많은 수의 스레드도 성능을 방해 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2074a01cf1c6e0219769d0f339b164daf1f09f8" translate="yes" xml:space="preserve">
          <source>Each thread should be wrapped before it runs application code, so if your application manually delegates work to other threads, such as via &lt;code&gt;Thread.new&lt;/code&gt; or Concurrent Ruby features that use thread pools, you should immediately wrap the block:</source>
          <target state="translated">각 스레드는 애플리케이션 코드를 실행하기 전에 랩핑되어야하므로 애플리케이션이 스레드 풀을 사용하는 &lt;code&gt;Thread.new&lt;/code&gt; 또는 Concurrent Ruby 기능을 통해 다른 스레드에 수동으로 작업을 위임 하는 경우 즉시 블록을 랩핑해야합니다.</target>
        </trans-unit>
        <trans-unit id="1ce3aba2f9aca465338abed4f26b1886f0627377" translate="yes" xml:space="preserve">
          <source>Each would be rendered and added as a separate part to the message, with the corresponding content type. The content type for the entire message is automatically set to &lt;code&gt;multipart/alternative&lt;/code&gt;, which indicates that the email contains multiple different representations of the same email body. The same instance variables defined in the action are passed to all email templates.</source>
          <target state="translated">각각은 해당 컨텐츠 유형과 함께 메시지에 별도의 파트로 렌더링 및 추가됩니다. 전체 메시지의 컨텐츠 유형이 자동으로 &lt;code&gt;multipart/alternative&lt;/code&gt; 로 설정되어 이메일에 동일한 이메일 본문의 여러 다른 표현이 포함되어 있음을 나타냅니다. 조치에 정의 된 동일한 인스턴스 변수가 모든 이메일 템플리트로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="fae80e446045ebe7e57d9510b77e77012bb01de8" translate="yes" xml:space="preserve">
          <source>Eager Loading</source>
          <target state="translated">열망하는 로딩</target>
        </trans-unit>
        <trans-unit id="9350ecdd2c2889ca23ac2e3eec86a079599d7b75" translate="yes" xml:space="preserve">
          <source>Eager Loading Associations</source>
          <target state="translated">열망하는 로딩 협회</target>
        </trans-unit>
        <trans-unit id="912165e05f8d574125a2f111ec3daa7c8830fb8b" translate="yes" xml:space="preserve">
          <source>Eager Loading Multiple Associations</source>
          <target state="translated">여러 협회를 열망</target>
        </trans-unit>
        <trans-unit id="dacc7e71ce925103108adcdbefbf23f6226a4993" translate="yes" xml:space="preserve">
          <source>Eager loading is a way to find objects of a certain class and a number of named associations. It is one of the easiest ways to prevent the dreaded N+1 problem in which fetching 100 posts that each need to display their author triggers 101 database queries. Through the use of eager loading, the number of queries will be reduced from 101 to 2.</source>
          <target state="translated">열망 로딩은 특정 클래스의 객체와 여러 명명 된 연관을 찾는 방법입니다. 각각의 작성자를 표시해야하는 100 개의 게시물을 가져 오면 101 개의 데이터베이스 쿼리가 트리거되는 두려운 N + 1 문제를 방지하는 가장 쉬운 방법 중 하나입니다. 열망하는로드를 사용하면 쿼리 수가 101에서 2로 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="051707242050b7ebfde67a26268ece5f0f326f06" translate="yes" xml:space="preserve">
          <source>Eager loading is controlled by the flag &lt;code&gt;config.eager_load&lt;/code&gt;, which is enabled by default in &lt;code&gt;production&lt;/code&gt; mode.</source>
          <target state="translated">열망 로딩은 &lt;code&gt;config.eager_load&lt;/code&gt; 플래그에 의해 제어되며, 기본적으로 &lt;code&gt;production&lt;/code&gt; 모드 에서 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="ba717ef838ccde4f2e734561435846ac76af6179" translate="yes" xml:space="preserve">
          <source>Eager loading is supported with polymorphic associations.</source>
          <target state="translated">다형성 연관을 통해 열망 로딩이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ae90c19c57b1d094145aae31c58578781c86ea92" translate="yes" xml:space="preserve">
          <source>Eager loading is the mechanism for loading the associated records of the objects returned by &lt;code&gt;Model.find&lt;/code&gt; using as few queries as possible.</source>
          <target state="translated">Eager 로딩은 가능한 한 적은 쿼리를 사용하여 &lt;code&gt;Model.find&lt;/code&gt; 에 의해 반환 된 개체의 관련 레코드를로드하는 메커니즘입니다 .</target>
        </trans-unit>
        <trans-unit id="5959126d169ca15f749c39f51f377e1d35caac41" translate="yes" xml:space="preserve">
          <source>Eager loading may trigger more than one query under the hood, and some queries may need the results of previous ones. Because of that, &lt;code&gt;explain&lt;/code&gt; actually executes the query, and then asks for the query plans. For example,</source>
          <target state="translated">열망이로드되면 후드에서 둘 이상의 쿼리가 트리거 될 수 있으며 일부 쿼리는 이전 쿼리의 결과가 필요할 수 있습니다. 따라서 &lt;code&gt;explain&lt;/code&gt; 실제로 쿼리를 실행 한 다음 쿼리 계획을 요청합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="1e02e1ca91ab8dcaeb06771a8fffcb85094922e0" translate="yes" xml:space="preserve">
          <source>Eager loading of associations</source>
          <target state="translated">협회의 빠른 로딩</target>
        </trans-unit>
        <trans-unit id="3258971760e0ab7ef620986fb66c6a32aa64fae5" translate="yes" xml:space="preserve">
          <source>Eager loading the application is part of the boot process, so top-level constants are fine and are still autoloaded, no need to require their files.</source>
          <target state="translated">응용 프로그램을 빨리로드하는 것은 부팅 프로세스의 일부이므로 최상위 상수는 문제가없고 여전히 자동로드되므로 파일이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="61424a801099d8e96932235000c1571a14625d96" translate="yes" xml:space="preserve">
          <source>Eager loads the application code.</source>
          <target state="translated">Eager는 애플리케이션 코드를로드합니다.</target>
        </trans-unit>
        <trans-unit id="75348415f57949afd6ea37601c49ae0a46ac7736" translate="yes" xml:space="preserve">
          <source>Early Hints is an HTTP/2 status code that indicates hints to help a client start making preparations for processing the final response.</source>
          <target state="translated">Early Hints는 클라이언트가 최종 응답 처리 준비를 시작하는 데 도움이되는 힌트를 나타내는 HTTP / 2 상태 코드입니다.</target>
        </trans-unit>
        <trans-unit id="70dd860f4b89ba7ed69b40ce7dbdbe80449d801c" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;form_with&lt;/code&gt; line inside &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; to look like this:</source>
          <target state="translated">편집 &lt;code&gt;form_with&lt;/code&gt; 의 라인 내부의 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 이처럼 보이도록 :</target>
        </trans-unit>
        <trans-unit id="3b9ba1a2515114c2d31fe79b93a1d942f595ac41" translate="yes" xml:space="preserve">
          <source>Editing</source>
          <target state="translated">Editing</target>
        </trans-unit>
        <trans-unit id="423141acb5d1e4759e1da322e80d39eeb9648915" translate="yes" xml:space="preserve">
          <source>Efficiently downloads blob data into the given file.</source>
          <target state="translated">지정된 파일에 BLOB 데이터를 효율적으로 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="ae1a2b14f7f3853248ef6cf5db788ccf2ffd3148" translate="yes" xml:space="preserve">
          <source>Either return &lt;code&gt;self&lt;/code&gt; or the time in the local system timezone depending on the setting of &lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt; 의 설정에 따라 &lt;code&gt;self&lt;/code&gt; 또는 로컬 시스템 시간대의 시간을 리턴 하십시오 .</target>
        </trans-unit>
        <trans-unit id="050d1175210a40bf0844823a9bb849c662276584" translate="yes" xml:space="preserve">
          <source>Either return an instance of &lt;code&gt;Time&lt;/code&gt; with the same UTC offset as &lt;code&gt;self&lt;/code&gt; or an instance of &lt;code&gt;Time&lt;/code&gt; representing the same time in the local system timezone depending on the setting of on the setting of &lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt;.</source>
          <target state="translated">하나의 인스턴스 반환 &lt;code&gt;Time&lt;/code&gt; 으로 오프셋 같은 UTC와 &lt;code&gt;self&lt;/code&gt; 또는 인스턴스 &lt;code&gt;Time&lt;/code&gt; 의 설정에의 설정에 따라 로컬 시스템 시간대에 동시에 나타내는 &lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="dc851f6f2821c7088e81374ab3e41f76054be825" translate="yes" xml:space="preserve">
          <source>Ellipsis can be customized with the &lt;code&gt;:omission&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;:omission&lt;/code&gt; 옵션을 사용하여 줄임표를 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc170086385405745bfe59476bba424abef09c0f" translate="yes" xml:space="preserve">
          <source>Email clients have no web context and so paths have no base URL to form complete web addresses. Thus, you should always use the &quot;_url&quot; variant of named route helpers.</source>
          <target state="translated">이메일 클라이언트에는 웹 컨텍스트가 없으므로 경로에는 완전한 웹 주소를 형성하기위한 기본 URL이 없습니다. 따라서 항상 명명 된 경로 도우미의 &quot;_url&quot;변형을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="84447a1c0827cf078d961b05565d9f5a7bb2cb6b" translate="yes" xml:space="preserve">
          <source>Email clients have no web context and so paths have no base URL to form complete web addresses. Thus, you should always use the &lt;code&gt;*_url&lt;/code&gt; variant of named route helpers.</source>
          <target state="translated">이메일 클라이언트에는 웹 컨텍스트가 없으므로 경로에는 완전한 웹 주소를 형성하는 기본 URL이 없습니다. 따라서 항상 명명 된 경로 도우미 의 &lt;code&gt;*_url&lt;/code&gt; 변형을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7b65c2f37b13ae80b2f9b96bc1eb6692bf54810c" translate="yes" xml:space="preserve">
          <source>Emails by default are sent in plain text, so a sample view for our model example might look like this:</source>
          <target state="translated">이메일은 기본적으로 일반 텍스트로 전송되므로 모델 예제의 샘플보기는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b11b2b6c93f7c7c33b6c792b7d09ff158ec677ad" translate="yes" xml:space="preserve">
          <source>Emails do not support relative path links.</source>
          <target state="translated">이메일은 상대 경로 링크를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fdaceaca92490afcd58d2953e317b868293966c9" translate="yes" xml:space="preserve">
          <source>Embed in a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to clear all previous ANSI sequences.</source>
          <target state="translated">A의 삽입 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 이전의 모든 ANSI 시퀀스를 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d528e738b7cedb7cdacda857cfe8d8e5bf016b91" translate="yes" xml:space="preserve">
          <source>Embed in a &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; to clear all previous ANSI sequences.</source>
          <target state="translated">A의 삽입 &lt;a href=&quot;../string&quot;&gt;문자열&lt;/a&gt; 이전의 모든 ANSI 시퀀스를 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28aff15ec5a0131ccfe8e7fb36403c88736cb72f" translate="yes" xml:space="preserve">
          <source>Empty objects as &lt;code&gt;{}&lt;/code&gt;, in the case of &lt;code&gt;Hash&lt;/code&gt;, or &lt;code&gt;[]&lt;/code&gt;, in the case of &lt;code&gt;Array&lt;/code&gt;, will always be persisted as null.</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; 의 경우 &lt;code&gt;{}&lt;/code&gt; , 또는 &lt;code&gt;Array&lt;/code&gt; 의 경우 &lt;code&gt;[]&lt;/code&gt; 로 비어있는 객체 는 항상 null로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="c7b2e521b15b784152f847d902e6c37a6af2a01a" translate="yes" xml:space="preserve">
          <source>Empty strings are coerced to &lt;code&gt;nil&lt;/code&gt;</source>
          <target state="translated">빈 문자열은 &lt;code&gt;nil&lt;/code&gt; 로 강제됩니다</target>
        </trans-unit>
        <trans-unit id="6e73cb05c3d7d3e92f1256a6b058428b81ffc0a1" translate="yes" xml:space="preserve">
          <source>Enable the query cache within the block if Active Record is configured. If it's not, it will execute the given block.</source>
          <target state="translated">활성 레코드가 구성된 경우 블록 내에서 쿼리 캐시를 활성화하십시오. 그렇지 않으면 주어진 블록을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="bafaca210bfa8c6835204ce797fd4aa8c7032dfd" translate="yes" xml:space="preserve">
          <source>Enable the query cache within the block.</source>
          <target state="translated">블록 내에서 쿼리 캐시를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="a69dbe124393f3b2fee1cd57adbc05970d926973" translate="yes" xml:space="preserve">
          <source>Enabled by default for apps that use Action View. Disable by setting</source>
          <target state="translated">동작보기를 사용하는 앱에 대해서는 기본적으로 활성화되어 있습니다. 설정하여 비활성화</target>
        </trans-unit>
        <trans-unit id="4e22518c67be4eebd9680af285e8cfd3dc00ff34" translate="yes" xml:space="preserve">
          <source>Enables more predictable duck-typing on String-like classes. See &lt;code&gt;Object#acts_like?&lt;/code&gt;.</source>
          <target state="translated">문자열과 유사한 클래스에서 더 예측 가능한 오리 타이핑을 가능하게합니다. &lt;code&gt;Object#acts_like?&lt;/code&gt; 를 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="954ff34b3e0e17603433776ca887130da8b4eaf8" translate="yes" xml:space="preserve">
          <source>Enables the formatting of numbers in a variety of ways.</source>
          <target state="translated">다양한 방법으로 숫자 서식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0aaa69584f2038f18cc582966547038c952fa725" translate="yes" xml:space="preserve">
          <source>Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes</source>
          <target state="translated">45.bytes + 2.6.megabytes와 같은 바이트 계산 및 선언 사용 가능</target>
        </trans-unit>
        <trans-unit id="898a7a613ed036a56c6dcf367702a1bad0c62b43" translate="yes" xml:space="preserve">
          <source>Enables the use of time calculations and declarations, like &lt;code&gt;4.months + 5.years&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;4.months + 5.years&lt;/code&gt; 와 같은 시간 계산 및 선언을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a3b78a116fffa1f9bb314606c7a7722f85a5a6b" translate="yes" xml:space="preserve">
          <source>Enables the use of time calculations and declarations, like &lt;code&gt;45.minutes + 2.hours + 4.weeks&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;45.minutes + 2.hours + 4.weeks&lt;/code&gt; 와 같은 시간 계산 및 선언을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6883a433b93d4277369312ea29d8f843e7f1dd66" translate="yes" xml:space="preserve">
          <source>Enables you to run a command from the given directory. For example, if you have a copy of edge rails that you wish to symlink from your new apps, you can do this:</source>
          <target state="translated">주어진 디렉토리에서 명령을 실행할 수 있습니다. 예를 들어, 새 앱에서 심볼릭 링크하려는 에지 레일 사본이있는 경우 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bca62f8f15ea4e3ded26846656c30bcc079d0b7d" translate="yes" xml:space="preserve">
          <source>Enabling Zeitwerk Mode</source>
          <target state="translated">Zeitwerk 모드 활성화</target>
        </trans-unit>
        <trans-unit id="0d1bf48adb9ae44c5d0751e8acc44c91c2f91c16" translate="yes" xml:space="preserve">
          <source>Enabling nested attributes on a one-to-one association allows you to create the member and avatar in one go:</source>
          <target state="translated">일대일 연관에서 중첩 속성을 사용하면 한 번에 구성원과 아바타를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61288a763c83954a689a0afacc6d57f06e742d97" translate="yes" xml:space="preserve">
          <source>Encapsulates a route, which can then be matched against an inbound_email and provide a lookup of the matching mailbox class. See examples for the different route addresses and how to use them in the &lt;code&gt;ActionMailbox::Base&lt;/code&gt; documentation.</source>
          <target state="translated">경로를 캡슐화하여 inbound_email과 일치시키고 일치하는 사서함 클래스를 조회 할 수 있습니다. &lt;code&gt;ActionMailbox::Base&lt;/code&gt; 문서 에서 다른 경로 주소와 사용 방법에 대한 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3b0fc3dba82c4256c2eeb54495a86297d422ee2" translate="yes" xml:space="preserve">
          <source>Encapsulates a string representing a filename to provide convenient access to parts of it and sanitization. A &lt;a href=&quot;filename&quot;&gt;&lt;code&gt;Filename&lt;/code&gt;&lt;/a&gt; instance is returned by &lt;a href=&quot;blob#method-i-filename&quot;&gt;&lt;code&gt;ActiveStorage::Blob#filename&lt;/code&gt;&lt;/a&gt;, and is comparable so it can be used for sorting.</source>
          <target state="translated">파일 이름을 나타내는 문자열을 캡슐화하여 파일의 일부에 대한 편리한 액세스와 삭제를 제공합니다. &lt;a href=&quot;filename&quot;&gt; &lt;code&gt;Filename&lt;/code&gt; &lt;/a&gt; 인스턴스에 의해 반환되는 &lt;a href=&quot;blob#method-i-filename&quot;&gt; &lt;code&gt;ActiveStorage::Blob#filename&lt;/code&gt; &lt;/a&gt; , 그리고이 정렬에 사용할 수 있도록 대등하다.</target>
        </trans-unit>
        <trans-unit id="e1c997d4f4bf08e5c5dfb7baf3b5da6f59c25036" translate="yes" xml:space="preserve">
          <source>Encapsulates a string representing a filename to provide convenient access to parts of it and sanitization. A &lt;a href=&quot;filename&quot;&gt;Filename&lt;/a&gt; instance is returned by &lt;a href=&quot;blob#method-i-filename&quot;&gt;ActiveStorage::Blob#filename&lt;/a&gt;, and is comparable so it can be used for sorting.</source>
          <target state="translated">파일 이름을 나타내는 문자열을 캡슐화하여 파일의 일부에 액세스하고 삭제하는 것이 편리합니다. &lt;a href=&quot;filename&quot;&gt;파일 이름&lt;/a&gt; 인스턴스에 의해 반환되는 &lt;a href=&quot;blob#method-i-filename&quot;&gt;ActiveStorage :: 물방울 번호 파일 이름&lt;/a&gt; , 그리고이 정렬에 사용할 수 있도록 대등하다.</target>
        </trans-unit>
        <trans-unit id="771a1a79515429a88d60588cf6906dcd49f10d70" translate="yes" xml:space="preserve">
          <source>Encapsulates the interaction with the view flow so it returns the correct buffer on &lt;code&gt;yield&lt;/code&gt;. This is usually overwritten by helpers to add more behavior.</source>
          <target state="translated">뷰 플로우와의 상호 작용을 캡슐화하여 &lt;code&gt;yield&lt;/code&gt; 에 따라 올바른 버퍼를 반환합니다 . 이것은 일반적으로 도우미가 더 많은 동작을 추가하기 위해 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="5411544e5526c2370c6f87d72b3d7c79a4b244ec" translate="yes" xml:space="preserve">
          <source>Encapsulates the notion of a MIME type. Can be used at render time, for example, with:</source>
          <target state="translated">MIME 타입의 개념을 캡슐화합니다. 예를 들어 다음을 사용하여 렌더링시 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b0ff8bcacc045e1f56b61e351924db66e9e23a6" translate="yes" xml:space="preserve">
          <source>Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.</source>
          <target state="translated">확인을 통해 비밀번호 또는 이메일 주소 필드의 유효성을 검증하려는 패턴을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="6368ea1261559c54fe45dc6c849ebe5673b7d6a7" translate="yes" xml:space="preserve">
          <source>Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar agreement).</source>
          <target state="translated">서비스 약관 확인란 (또는 유사한 계약)의 승인을 확인하려는 패턴을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="5f1ce3b628a3d4173cb84f27894888c7b8ef714f" translate="yes" xml:space="preserve">
          <source>Encapsulates the routes that live on the ApplicationMailbox and performs the actual routing when an inbound_email is received.</source>
          <target state="translated">ApplicationMailbox에있는 경로를 캡슐화하고 inbound_email이 수신 될 때 실제 라우팅을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a0f519d92037e1831f51507835c0f23af941e1a9" translate="yes" xml:space="preserve">
          <source>Encodes the given token and options into an Authorization header value.</source>
          <target state="translated">주어진 토큰과 옵션을 Authorization 헤더 값으로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="f019e6fd7597d6e6329a49a2af01ddc32dfb45f7" translate="yes" xml:space="preserve">
          <source>Encrypt and sign a message. We need to sign the message in order to avoid padding attacks. Reference: &lt;a href=&quot;https://www.limited-entropy.com/padding-oracle-attacks&quot;&gt;www.limited-entropy.com/padding-oracle-attacks&lt;/a&gt;/.</source>
          <target state="translated">메시지를 암호화하고 서명하십시오. 패딩 공격을 피하기 위해 메시지에 서명해야합니다. 참조 : &lt;a href=&quot;https://www.limited-entropy.com/padding-oracle-attacks&quot;&gt;www.limited-entropy.com/padding-oracle-attacks&lt;/a&gt; /.</target>
        </trans-unit>
        <trans-unit id="e5f402e6a9afe87240a69b26a03b8b5f8db7d586" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration</source>
          <target state="translated">EncryptedConfiguration</target>
        </trans-unit>
        <trans-unit id="0a28d0ed8f8d09994e6fdbb4ea59460aa2bf7bde" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration#config</source>
          <target state="translated">EncryptedConfiguration#config</target>
        </trans-unit>
        <trans-unit id="03d2c63e3f023ad51ed63c8a1ca6c7a518295ace" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration#read</source>
          <target state="translated">EncryptedConfiguration#read</target>
        </trans-unit>
        <trans-unit id="986b435d35df58d8ff4b8f1739b4db0bbf2f2e62" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration#write</source>
          <target state="translated">EncryptedConfiguration#write</target>
        </trans-unit>
        <trans-unit id="bbc3a00665f6fe4a8564a09368a7be0475b958dd" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration::new</source>
          <target state="translated">EncryptedConfiguration::new</target>
        </trans-unit>
        <trans-unit id="e08a3d5f04d5216d959301eb87e93666943f3adb" translate="yes" xml:space="preserve">
          <source>EncryptedFile</source>
          <target state="translated">EncryptedFile</target>
        </trans-unit>
        <trans-unit id="92ec6350888ffe872e05e17513441db29281fdeb" translate="yes" xml:space="preserve">
          <source>Endpoint</source>
          <target state="translated">Endpoint</target>
        </trans-unit>
        <trans-unit id="99fec96a617dac566ab043a2ba61131972415bd6" translate="yes" xml:space="preserve">
          <source>Enforces strict loading every time an associated record is loaded through this association.</source>
          <target state="translated">이 연결을 통해 연결된 레코드가로드 될 때마다 엄격한로드를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="437ad2c629b9d24891af652cdf20f67f1082812f" translate="yes" xml:space="preserve">
          <source>Enforces strict loading every time the associated record is loaded through this association.</source>
          <target state="translated">이 연결을 통해 연결된 레코드가로드 될 때마다 엄격한로드를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="c1f65ddb75ed7d97e701168af35171410be8f9e7" translate="yes" xml:space="preserve">
          <source>Engine</source>
          <target state="translated">Engine</target>
        </trans-unit>
        <trans-unit id="ae9325970529b18d890e28016fd20626f289707e" translate="yes" xml:space="preserve">
          <source>Engine Setup</source>
          <target state="translated">엔진 설정</target>
        </trans-unit>
        <trans-unit id="e8809eda578aa991d807dd996bc36bbf039a946a" translate="yes" xml:space="preserve">
          <source>Engine model and controller classes can be extended by open classing them in the main Rails application (since model and controller classes are just Ruby classes that inherit Rails specific functionality). Open classing an Engine class redefines it for use in the main application.</source>
          <target state="translated">모델과 컨트롤러 클래스는 Rails 전용 기능을 상속하는 Ruby 클래스이기 때문에 엔진 모델과 컨트롤러 클래스는 기본 Rails 애플리케이션에서 클래스를 개방하여 확장 할 수 있습니다. 엔진 클래스 열기 클래스는 기본 애플리케이션에서 사용할 수 있도록 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="383ce5fe88fc10582f15a9542b170d2d01170639" translate="yes" xml:space="preserve">
          <source>Engine models and controllers can be reopened by the parent application to extend or decorate them.</source>
          <target state="translated">엔진 모델 및 컨트롤러는 상위 애플리케이션에서 다시 열어 확장하거나 장식 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84e0799d2bf6142c49f0a80de2e01cd120955405" translate="yes" xml:space="preserve">
          <source>Engine setup</source>
          <target state="translated">엔진 설정</target>
        </trans-unit>
        <trans-unit id="7987281d22f5a65b5d5974f63cb43bb88c300cdc" translate="yes" xml:space="preserve">
          <source>Engineering notation is still supported:</source>
          <target state="translated">공학 표기법은 여전히 ​​지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b2c7104486895707b792252e4aa3edfcfeda062e" translate="yes" xml:space="preserve">
          <source>Engines are also closely related to plugins. The two share a common &lt;code&gt;lib&lt;/code&gt; directory structure, and are both generated using the &lt;code&gt;rails plugin new&lt;/code&gt; generator. The difference is that an engine is considered a &quot;full plugin&quot; by Rails (as indicated by the &lt;code&gt;--full&lt;/code&gt; option that's passed to the generator command). We'll actually be using the &lt;code&gt;--mountable&lt;/code&gt; option here, which includes all the features of &lt;code&gt;--full&lt;/code&gt;, and then some. This guide will refer to these &quot;full plugins&quot; simply as &quot;engines&quot; throughout. An engine &lt;strong&gt;can&lt;/strong&gt; be a plugin, and a plugin &lt;strong&gt;can&lt;/strong&gt; be an engine.</source>
          <target state="translated">엔진은 플러그인과 밀접한 관련이 있습니다. 이 둘은 공통 &lt;code&gt;lib&lt;/code&gt; 디렉토리 구조를 공유하며 &lt;code&gt;rails plugin new&lt;/code&gt; generator를 사용하여 생성됩니다. 차이점은 엔진이 Rails에 의해 &quot;전체 플러그인&quot;으로 간주된다는 것입니다 ( 제너레이터 명령에 전달 되는 &lt;code&gt;--full&lt;/code&gt; 옵션으로 표시됨). 여기서는 &lt;code&gt;--full&lt;/code&gt; 의 모든 기능 과 일부 기능이 포함 된 &lt;code&gt;--mountable&lt;/code&gt; 옵션을 사용합니다 . 이 안내서에서는 이러한 &quot;풀 플러그인&quot;을 간단히 &quot;엔진&quot;이라고합니다. 엔진 &lt;strong&gt;은&lt;/strong&gt; 플러그인 일 &lt;strong&gt;수&lt;/strong&gt; 있고 플러그인 &lt;strong&gt;은&lt;/strong&gt; 엔진 일 &lt;strong&gt;수&lt;/strong&gt; 있습니다.&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ac750367dc7050cffcd3faaf207427bd63078ca" translate="yes" xml:space="preserve">
          <source>Engines can also be isolated from their host applications. This means that an application is able to have a path provided by a routing helper such as &lt;code&gt;articles_path&lt;/code&gt; and use an engine that also provides a path also called &lt;code&gt;articles_path&lt;/code&gt;, and the two would not clash. Along with this, controllers, models and table names are also namespaced. You'll see how to do this later in this guide.</source>
          <target state="translated">호스트 응용 프로그램에서 엔진을 분리 할 수도 있습니다. 응용 프로그램이 같은 라우팅 도우미가 제공하는 경로를 가질 수 있음이 수단 &lt;code&gt;articles_path&lt;/code&gt; 을 또한라고도 경로를 제공하는 엔진 사용 &lt;code&gt;articles_path&lt;/code&gt; 을 , 두가 충돌하지 것입니다. 이와 함께 컨트롤러, 모델 및 테이블 이름도 네임 스페이스입니다. 이 가이드의 후반부에이 작업을 수행하는 방법이 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb3d7fb2419b44742c45c914996677dfdcd7a318" translate="yes" xml:space="preserve">
          <source>Engines can be considered miniature applications that provide functionality to their host applications. A Rails application is actually just a &quot;supercharged&quot; engine, with the &lt;code&gt;Rails::Application&lt;/code&gt; class inheriting a lot of its behavior from &lt;code&gt;Rails::Engine&lt;/code&gt;.</source>
          <target state="translated">엔진은 호스트 응용 프로그램에 기능을 제공하는 소형 응용 프로그램으로 간주 될 수 있습니다. Rails 애플리케이션은 실제로 &quot;supercharged&quot;엔진이며 &lt;code&gt;Rails::Application&lt;/code&gt; 클래스는 &lt;code&gt;Rails::Engine&lt;/code&gt; 의 많은 동작을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="a649a659bd1543af196091f7856c7c10c971c309" translate="yes" xml:space="preserve">
          <source>Engines can have their own migrations. The default path for migrations is exactly the same as in application: &lt;code&gt;db/migrate&lt;/code&gt;</source>
          <target state="translated">엔진은 자체 마이그레이션을 가질 수 있습니다. 이주의 기본 경로는 응용 프로그램에서와 동일합니다. &lt;code&gt;db/migrate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c5636ddc1ba5cab7c754f7f7aa0435207e3d235" translate="yes" xml:space="preserve">
          <source>Engines that do not control the mode in which their parent application runs should call &lt;code&gt;require_dependency&lt;/code&gt; where needed in case the runtime mode is &lt;code&gt;:classic&lt;/code&gt;.</source>
          <target state="translated">상위 애플리케이션이 실행되는 모드를 제어하지 않는 엔진 은 런타임 모드가 &lt;code&gt;:classic&lt;/code&gt; 인 경우 필요한 경우 &lt;code&gt;require_dependency&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="81db2ae7e806922fe208c1724ff570eb09c29fe6" translate="yes" xml:space="preserve">
          <source>Enhance &lt;a href=&quot;../../testhelper&quot;&gt;&lt;code&gt;TestHelper&lt;/code&gt;&lt;/a&gt; assertions to handle non-String broadcastings</source>
          <target state="translated">문자열이 아닌 브로드 캐스팅을 처리하도록 &lt;a href=&quot;../../testhelper&quot;&gt; &lt;code&gt;TestHelper&lt;/code&gt; &lt;/a&gt; 어설 션 향상</target>
        </trans-unit>
        <trans-unit id="136d2ef98b655d5da8f44caf216a8541cd4f1427" translate="yes" xml:space="preserve">
          <source>Enhance &lt;a href=&quot;../../testhelper&quot;&gt;TestHelper&lt;/a&gt; assertions to handle non-String broadcastings</source>
          <target state="translated">비 문자열 브로드 캐스트를 처리하기 위해 &lt;a href=&quot;../../testhelper&quot;&gt;TestHelper&lt;/a&gt; 어설 션 향상</target>
        </trans-unit>
        <trans-unit id="1a3066f5ae0c7a1b5e56529f04fa52fd7f987aa6" translate="yes" xml:space="preserve">
          <source>Enqueue a &lt;code&gt;RoutingJob&lt;/code&gt; for this &lt;code&gt;InboundEmail&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;InboundEmail&lt;/code&gt; 의 &lt;code&gt;RoutingJob&lt;/code&gt; 을 큐에 넣 습니다 .</target>
        </trans-unit>
        <trans-unit id="71ef37ae9be7bf0437405689a42d828d8fa44093" translate="yes" xml:space="preserve">
          <source>Enqueue a job like so:</source>
          <target state="translated">다음과 같이 직업을 대기열에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="45442d2256e3bc7f8528e8f2a5c051a9242d65d5" translate="yes" xml:space="preserve">
          <source>Enqueue the Job</source>
          <target state="translated">직업을 큐에 넣다</target>
        </trans-unit>
        <trans-unit id="e8b2ad4092fb6926562799dc7216c619a0f67e76" translate="yes" xml:space="preserve">
          <source>Enqueues an &lt;a href=&quot;../analyzejob&quot;&gt;&lt;code&gt;ActiveStorage::AnalyzeJob&lt;/code&gt;&lt;/a&gt; which calls &lt;a href=&quot;analyzable#method-i-analyze&quot;&gt;&lt;code&gt;analyze&lt;/code&gt;&lt;/a&gt;, or calls &lt;a href=&quot;analyzable#method-i-analyze&quot;&gt;&lt;code&gt;analyze&lt;/code&gt;&lt;/a&gt; inline based on analyzer class configuration.</source>
          <target state="translated">큐에 넣습니다 &lt;a href=&quot;../analyzejob&quot;&gt; &lt;code&gt;ActiveStorage::AnalyzeJob&lt;/code&gt; &lt;/a&gt; 호출 &lt;a href=&quot;analyzable#method-i-analyze&quot;&gt; &lt;code&gt;analyze&lt;/code&gt; &lt;/a&gt; , 또는 전화는 &lt;a href=&quot;analyzable#method-i-analyze&quot;&gt; &lt;code&gt;analyze&lt;/code&gt; &lt;/a&gt; 인라인 분석 클래스 구성에 따라.</target>
        </trans-unit>
        <trans-unit id="4881f9c886061781c2500440829ba4300c1237cd" translate="yes" xml:space="preserve">
          <source>Enqueues an &lt;a href=&quot;../analyzejob&quot;&gt;ActiveStorage::AnalyzeJob&lt;/a&gt; which calls &lt;a href=&quot;analyzable#method-i-analyze&quot;&gt;analyze&lt;/a&gt;.</source>
          <target state="translated">큐에 넣습니다 &lt;a href=&quot;../analyzejob&quot;&gt;ActiveStorage :: AnalyzeJob&lt;/a&gt; 호출 &lt;a href=&quot;analyzable#method-i-analyze&quot;&gt;분석&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7815ae1d5b080e29fcf85c6f165322bc54576354" translate="yes" xml:space="preserve">
          <source>Enqueues an &lt;a href=&quot;purgejob&quot;&gt;&lt;code&gt;ActiveStorage::PurgeJob&lt;/code&gt;&lt;/a&gt; to call &lt;a href=&quot;blob#method-i-purge&quot;&gt;&lt;code&gt;purge&lt;/code&gt;&lt;/a&gt;. This is the recommended way to purge blobs from a transaction, an Active Record callback, or in any other real-time scenario.</source>
          <target state="translated">&lt;a href=&quot;blob#method-i-purge&quot;&gt; &lt;code&gt;purge&lt;/code&gt; &lt;/a&gt; 를 호출하기 위해 &lt;a href=&quot;purgejob&quot;&gt; &lt;code&gt;ActiveStorage::PurgeJob&lt;/code&gt; &lt;/a&gt; 을 대기열에 넣 습니다 . 트랜잭션, Active Record 콜백 또는 기타 실시간 시나리오에서 Blob을 제거하는 데 권장되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a3e7706f9e73a451c3e016acb422f145974d825d" translate="yes" xml:space="preserve">
          <source>Enqueues an &lt;a href=&quot;purgejob&quot;&gt;ActiveStorage::PurgeJob&lt;/a&gt; to call &lt;a href=&quot;blob#method-i-purge&quot;&gt;purge&lt;/a&gt;. This is the recommended way to purge blobs from a transaction, an Active Record callback, or in any other real-time scenario.</source>
          <target state="translated">&lt;a href=&quot;blob#method-i-purge&quot;&gt;purge&lt;/a&gt; 를 호출하기 위해 &lt;a href=&quot;purgejob&quot;&gt;ActiveStorage :: PurgeJob&lt;/a&gt; 을 큐에 넣 습니다 . 트랜잭션, 활성 레코드 콜백 또는 기타 실시간 시나리오에서 Blob을 제거하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b170eb18a288318712c977dc6362f9ba05a459e5" translate="yes" xml:space="preserve">
          <source>Enqueues the email to be delivered through Active Job. When the job runs it will send the email using &lt;code&gt;deliver_now!&lt;/code&gt;. That means that the message will be sent bypassing checking &lt;code&gt;perform_deliveries&lt;/code&gt; and &lt;code&gt;raise_delivery_errors&lt;/code&gt;, so use with caution.</source>
          <target state="translated">활성 작업을 통해 전달 될 이메일을 큐에 넣습니다. 작업이 실행되면 &lt;code&gt;deliver_now!&lt;/code&gt; 를 사용하여 이메일을 보냅니다. . 즉 , &lt;code&gt;perform_deliveries&lt;/code&gt; 및 &lt;code&gt;raise_delivery_errors&lt;/code&gt; 를 확인하지 않고 메시지가 전송 되므로주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7b5e7be8ece8a85487b60285ad2ba4540d17cdc4" translate="yes" xml:space="preserve">
          <source>Enqueues the email to be delivered through Active Job. When the job runs it will send the email using &lt;code&gt;deliver_now&lt;/code&gt;.</source>
          <target state="translated">활성 작업을 통해 전달 될 이메일을 큐에 넣습니다. 작업이 실행되면 &lt;code&gt;deliver_now&lt;/code&gt; 를 사용하여 이메일을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="e968dd3a76a9a804382da132cbb907189e05dd3e" translate="yes" xml:space="preserve">
          <source>Enqueues the given &lt;code&gt;message&lt;/code&gt; for delivery and changes the inbound email's status to &lt;code&gt;:bounced&lt;/code&gt;.</source>
          <target state="translated">전달을 위해 지정된 &lt;code&gt;message&lt;/code&gt; 를 큐에 넣고 인바운드 이메일의 상태를 &lt;code&gt;:bounced&lt;/code&gt; bounced로 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="4d0689e1252dd70b1cb58b5fc757dce2a5bac316" translate="yes" xml:space="preserve">
          <source>Enqueues the job to be performed by the queue adapter.</source>
          <target state="translated">큐 어댑터가 수행 할 작업을 큐에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="506a2f25a01829af4d425620405d7c616d65589c" translate="yes" xml:space="preserve">
          <source>Enqueuing</source>
          <target state="translated">Enqueuing</target>
        </trans-unit>
        <trans-unit id="2a62ebec9ebb00ac5e43de63b263492bd3681589" translate="yes" xml:space="preserve">
          <source>Enqueuing#enqueue</source>
          <target state="translated">Enqueuing#enqueue</target>
        </trans-unit>
        <trans-unit id="c5aec89b4c1298faa3b90d32ae84636c6a56023d" translate="yes" xml:space="preserve">
          <source>Enqueuing::ClassMethods</source>
          <target state="translated">Enqueuing::ClassMethods</target>
        </trans-unit>
        <trans-unit id="c8a89357e7cf785997b0a4bda19476bec80d661b" translate="yes" xml:space="preserve">
          <source>Enqueuing::ClassMethods#job_or_instantiate</source>
          <target state="translated">Enqueuing::ClassMethods#job_or_instantiate</target>
        </trans-unit>
        <trans-unit id="af9f5b1cfbd96eb3ca78c660855e6e9a1dc660a3" translate="yes" xml:space="preserve">
          <source>Enqueuing::ClassMethods#perform_later</source>
          <target state="translated">Enqueuing::ClassMethods#perform_later</target>
        </trans-unit>
        <trans-unit id="2c61819644f71723d12aa60f84baffeca891dd9b" translate="yes" xml:space="preserve">
          <source>Ensure proxy class responds to all methods that underlying time instance responds to.</source>
          <target state="translated">프록시 클래스가 기본 시간 인스턴스가 응답하는 모든 메소드에 응답하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="575fe304dd94c1def843a31f6ee03da0a7d7efca" translate="yes" xml:space="preserve">
          <source>Ensure that the &lt;code&gt;InboundEmail&lt;/code&gt; is automatically scheduled for later incineration if the status has been changed to &lt;code&gt;processed&lt;/code&gt;. The later incineration will be invoked at the time specified by the &lt;code&gt;ActionMailbox.incinerate_after&lt;/code&gt; time using the &lt;code&gt;IncinerationJob&lt;/code&gt;.</source>
          <target state="translated">상태가 &lt;code&gt;processed&lt;/code&gt; 으로 변경된 경우 나중에 소각을 위해 &lt;code&gt;InboundEmail&lt;/code&gt; 이 자동으로 예약되어 있는지 확인하십시오 . 이후 소각은 &lt;code&gt;IncinerationJob&lt;/code&gt; 을 사용하여 &lt;code&gt;ActionMailbox.incinerate_after&lt;/code&gt; 시간에 지정된 시간에 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b0952b04163d00a5ce6a4fae5eb2bbbd9cce028" translate="yes" xml:space="preserve">
          <source>Ensure you have a firm grasp of the &lt;code&gt;params&lt;/code&gt; method, as you'll use it fairly regularly. Let's consider an example URL: &lt;strong&gt;&lt;a href=&quot;http://www.example.com/?username=dhh&amp;amp;email=dhh@email.com&quot;&gt;http://www.example.com/?username=dhh&amp;amp;email=dhh@email.com&lt;/a&gt;&lt;/strong&gt;. In this URL, &lt;code&gt;params[:username]&lt;/code&gt; would equal &quot;dhh&quot; and &lt;code&gt;params[:email]&lt;/code&gt; would equal &quot;&lt;a href=&quot;mailto:dhh@email.com&quot;&gt;dhh@email.com&lt;/a&gt;&quot;.</source>
          <target state="translated">상당히 정기적으로 사용하므로 &lt;code&gt;params&lt;/code&gt; 방법을 확실히 파악하십시오 . URL의 예로 &lt;strong&gt;&lt;a href=&quot;http://www.example.com/?username=dhh&amp;amp;email=dhh@email.com&quot;&gt;http://www.example.com/?username=dhh&amp;amp;email=dhh@email.com을&lt;/a&gt;&lt;/strong&gt; 고려 &lt;strong&gt;하십시오&lt;/strong&gt; . 이 URL에서 &lt;code&gt;params[:username]&lt;/code&gt; 은 &quot; &lt;a href=&quot;mailto:dhh@email.com&quot;&gt;dhh&lt;/a&gt; &quot; , &lt;code&gt;params[:email]&lt;/code&gt; 은 &quot; dhh@email.com &quot; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b72a4335a8917969a93618a97e2363f9c2a18a16" translate="yes" xml:space="preserve">
          <source>Ensure you have support for i18n.</source>
          <target state="translated">i18n을 지원하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4c2aca24da8837584c8c4ab90b462c259e6ae73f" translate="yes" xml:space="preserve">
          <source>Ensures failure. This is useful to explicitly mark a test that isn't finished yet.</source>
          <target state="translated">실패를 보장합니다. 아직 완료되지 않은 테스트를 명시 적으로 표시하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="1c79f14d826ff83c716eabc672c90984d32d75ba" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected != actual&lt;/code&gt; is true.</source>
          <target state="translated">보장 &lt;code&gt;expected != actual&lt;/code&gt; 사실이다.</target>
        </trans-unit>
        <trans-unit id="683a4be942171b912e181a0be2707ca5b3fc474c" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected == actual&lt;/code&gt; is true.</source>
          <target state="translated">보장 &lt;code&gt;expected == actual&lt;/code&gt; 사실이다.</target>
        </trans-unit>
        <trans-unit id="6667dd27c2ef970b5f1db88e01bf07d1c28c7c40" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected.equal?(actual)&lt;/code&gt; is false.</source>
          <target state="translated">expect.equal &lt;code&gt;expected.equal?(actual)&lt;/code&gt; 이 false인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5448e877aa1e40111d23f8d0f97eeb25617c28bf" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected.equal?(actual)&lt;/code&gt; is true.</source>
          <target state="translated">expect.equal &lt;code&gt;expected.equal?(actual)&lt;/code&gt; 이 true인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="be824e29f4ab1167ef0dd187a6b756c2f2cb0dcb" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.nil?&lt;/code&gt; is false.</source>
          <target state="translated">&lt;code&gt;obj.nil?&lt;/code&gt; 보장 합니까? 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="d6e38bc450373142febc839d62dfd3f4845a7223" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.nil?&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;obj.nil?&lt;/code&gt; 보장 합니까? 사실이다.</target>
        </trans-unit>
        <trans-unit id="b870540718b2e6eb1e96afce9ada15037b2f1d9c" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.predicate&lt;/code&gt; is false, e.g. &lt;code&gt;assert_not_predicate str, :empty?&lt;/code&gt;</source>
          <target state="translated">것을 보장 &lt;code&gt;obj.predicate&lt;/code&gt; 은 거짓, 예를 들어 &lt;code&gt;assert_not_predicate str, :empty?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acffc91f5c507ab6f9b45fc26eb128605f7d2484" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.predicate&lt;/code&gt; is true, e.g. &lt;code&gt;assert_predicate str, :empty?&lt;/code&gt;</source>
          <target state="translated">보장은 &lt;code&gt;obj.predicate&lt;/code&gt; 는 사실이다, 예를 들어 &lt;code&gt;assert_predicate str, :empty?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa247983b4e92277eb89092ef5ba6705050a6afc" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; is false.</source>
          <target state="translated">보장 &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; false입니다.</target>
        </trans-unit>
        <trans-unit id="eee51f35cb86ac65fa6ae356f6024f36c48e4c04" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; is true.</source>
          <target state="translated">보장 &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; 사실이다.</target>
        </trans-unit>
        <trans-unit id="c279b21d3cbb32ead7bc63a9b02325cac6714ba1" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; does not respond to &lt;code&gt;symbol&lt;/code&gt;.</source>
          <target state="translated">보장 &lt;code&gt;obj&lt;/code&gt; 가 응답하지 않습니다 &lt;code&gt;symbol&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c2cb97bcc4605112501211df86ab5204ea98a04" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;empty?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가 &lt;code&gt;empty?&lt;/code&gt; 있는지 확인 하시겠습니까? .</target>
        </trans-unit>
        <trans-unit id="cf44d6919a55466c5ae2bb7e2a6a9627e47db0db" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is an instance of &lt;code&gt;class&lt;/code&gt; or is descending from it.</source>
          <target state="translated">보장 &lt;code&gt;obj&lt;/code&gt; 가 의 인스턴스 &lt;code&gt;class&lt;/code&gt; 또는 그것에서 하강한다.</target>
        </trans-unit>
        <trans-unit id="598f9988c504580bc3762d8848684cd60c2bf583" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is an instance of &lt;code&gt;class&lt;/code&gt;.</source>
          <target state="translated">보장 &lt;code&gt;obj&lt;/code&gt; 가 의 인스턴스 &lt;code&gt;class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c62cf5f2d9ada35d6c51c2ec32a04aa56bfdc69a" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is in &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가 &lt;code&gt;collection&lt;/code&gt; 내에 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="43e8a3ea381b934279b9e2a84ae382eba12f83e1" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not &lt;code&gt;empty?&lt;/code&gt;.</source>
          <target state="translated">보장 &lt;code&gt;obj&lt;/code&gt; 가 되지 &lt;code&gt;empty?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae3d2416faa35633be9296271cdba60389ed4ebc" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not an instance of &lt;code&gt;class&lt;/code&gt; and is not descending from it.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가 &lt;code&gt;class&lt;/code&gt; 의 인스턴스가 아니며 그 하위 클래스 가 아닌지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3ef4d88c37c6d8556aa018846e16b06f0129285a" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not an instance of &lt;code&gt;class&lt;/code&gt;.</source>
          <target state="translated">보장 &lt;code&gt;obj&lt;/code&gt; 가 의 인스턴스가 아닌 &lt;code&gt;class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b34ad23d5732c4bf151bf197987c909bcbf8ff41" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not in &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">보장 &lt;code&gt;obj&lt;/code&gt; 가 아닌 &lt;code&gt;collection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e7f59f0a85a6a7b7e30c8ddc0c06c9df431459e" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; responds to &lt;code&gt;symbol&lt;/code&gt;.</source>
          <target state="translated">보장이 &lt;code&gt;obj&lt;/code&gt; 에 응답 &lt;code&gt;symbol&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f3b0c4c76319bb1da181d3e068f0ee1a1574c1f" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;test&lt;/code&gt; is false.</source>
          <target state="translated">보장 &lt;code&gt;test&lt;/code&gt; false입니다.</target>
        </trans-unit>
        <trans-unit id="6a9cf4c36b8c7ae83621d236404a539c7a3a094f" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;test&lt;/code&gt; is true.</source>
          <target state="translated">보장 &lt;code&gt;test&lt;/code&gt; 사실이다.</target>
        </trans-unit>
        <trans-unit id="4db77c7c7ef5ec762c6344d84317a5dc20b0b9b8" translate="yes" xml:space="preserve">
          <source>Ensures that a string doesn't match the regular expression.</source>
          <target state="translated">문자열이 정규식과 일치하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="d393901cdba2fdce7454062ff766735335ce9315" translate="yes" xml:space="preserve">
          <source>Ensures that a string matches the regular expression.</source>
          <target state="translated">문자열이 정규식과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7e008e7327e4114351b83c3079e31c70d2596bfa" translate="yes" xml:space="preserve">
          <source>Ensures that the given block doesn't raise any exceptions.</source>
          <target state="translated">주어진 블록이 예외를 일으키지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="336d5bfedd1c18fdab2f37f21e8370cb24a5192f" translate="yes" xml:space="preserve">
          <source>Ensures that the given block raises one of the given exceptions.</source>
          <target state="translated">주어진 블록이 주어진 예외 중 하나를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="0be08c2e1c4081aa38cf9d865d0172381f72d204" translate="yes" xml:space="preserve">
          <source>Ensures that the given block throws the symbol.</source>
          <target state="translated">주어진 블록이 기호를 던지도록합니다.</target>
        </trans-unit>
        <trans-unit id="2ff10787478626bd653e6bf2d182a3477c4e5a00" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are not within &lt;code&gt;delta&lt;/code&gt; of each other.</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 되는 숫자 와 &lt;code&gt;actual&lt;/code&gt; 숫자 가 서로 &lt;code&gt;delta&lt;/code&gt; 내에 있지 않은지 확인</target>
        </trans-unit>
        <trans-unit id="678ecd8183bb0fb5651361e5e6ee09f33726b956" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are within &lt;code&gt;delta&lt;/code&gt; of each other.</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 되는 숫자 와 &lt;code&gt;actual&lt;/code&gt; 숫자 가 서로의 &lt;code&gt;delta&lt;/code&gt; 내에 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="e91de6d54fa950dd237c482d44a1a3f976606799" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; don't have a relative error less than &lt;code&gt;epsilon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 된 숫자 와 &lt;code&gt;actual&lt;/code&gt; 숫자 가 &lt;code&gt;epsilon&lt;/code&gt; 보다 작은 상대 오류를 갖지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="4959a290fc0bb3a2fcb337cf1dd73cea2bb062be" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; have a relative error less than &lt;code&gt;epsilon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 된 숫자 와 &lt;code&gt;actual&lt;/code&gt; 숫자 가 &lt;code&gt;epsilon&lt;/code&gt; 보다 작은 상대 오류를 갖도록합니다 .</target>
        </trans-unit>
        <trans-unit id="7ecefbdc85726028f3b481ddf3ab5e9ae11e78c4" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; have a relative error not less than &lt;code&gt;epsilon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expected&lt;/code&gt; 숫자 와 &lt;code&gt;actual&lt;/code&gt; 숫자에 &lt;code&gt;epsilon&lt;/code&gt; 이상의 상대 오차가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="c3bde5efdd9870d135261a55f860a6d6cace9f5b" translate="yes" xml:space="preserve">
          <source>Enters an exclusive section, but allows dependency loading while blocked</source>
          <target state="translated">독점 섹션을 입력하지만 차단 된 상태에서 종속성로드를 허용</target>
        </trans-unit>
        <trans-unit id="6f84f289f88ff6d345a316cf81c4c074e6349dad" translate="yes" xml:space="preserve">
          <source>Entries set via &lt;code&gt;now&lt;/code&gt; are accessed the same way as standard entries: &lt;code&gt;flash['my-key']&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;now&lt;/code&gt; 통해 설정된 항목 은 표준 항목과 동일한 방식으로 액세스합니다 : &lt;code&gt;flash['my-key']&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abab8484fb22420fea23aac7ece86fbfc8e48d3f" translate="yes" xml:space="preserve">
          <source>Enum#enum</source>
          <target state="translated">Enum#enum</target>
        </trans-unit>
        <trans-unit id="83df7a7ef8fa21dd3116045758d3e9407ca3149d" translate="yes" xml:space="preserve">
          <source>Enumerable</source>
          <target state="translated">Enumerable</target>
        </trans-unit>
        <trans-unit id="426cd02dc6e8596b4d542b66509e0ececb3dbac7" translate="yes" xml:space="preserve">
          <source>Enumerable#sum</source>
          <target state="translated">Enumerable#sum</target>
        </trans-unit>
        <trans-unit id="b0366a10ef9d6d3ef8c64dd51eeccb78bad1656a" translate="yes" xml:space="preserve">
          <source>Enumerated Types</source>
          <target state="translated">열거 형</target>
        </trans-unit>
        <trans-unit id="f3104dd45718e6d1ac6a03b91ae67193ae8361f0" translate="yes" xml:space="preserve">
          <source>Enums</source>
          <target state="translated">Enums</target>
        </trans-unit>
        <trans-unit id="3f285368b384f623960bf30ca3091c2771355872" translate="yes" xml:space="preserve">
          <source>Environment-specific configuration files</source>
          <target state="translated">환경 별 구성 파일</target>
        </trans-unit>
        <trans-unit id="a5d6845644132c12327b02ba21e2b33bca7e2a9f" translate="yes" xml:space="preserve">
          <source>Environmental Security</source>
          <target state="translated">환경 보안</target>
        </trans-unit>
        <trans-unit id="74d352b7558c4fb4031084a42ffca7c0f0a3d828" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[-2]&lt;/code&gt;.</source>
          <target state="translated">같음 &lt;code&gt;self[-2]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38d6e00bd35a3376e7f79408f0d8e4c8fa3c3815" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[-3]&lt;/code&gt;.</source>
          <target state="translated">같음 &lt;code&gt;self[-3]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d951bb360b24689f80a48e47e96fd75eeaf3ec8" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[1]&lt;/code&gt;.</source>
          <target state="translated">같음 &lt;code&gt;self[1]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ea01ce23249ea3018734c931331b76f20f2bcc7" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[2]&lt;/code&gt;.</source>
          <target state="translated">같음 &lt;code&gt;self[2]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab3b100f69f609aa656dfc2e4519dc316d6fe54d" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[3]&lt;/code&gt;.</source>
          <target state="translated">같음 &lt;code&gt;self[3]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c64569ff943ff17f37ae52541c085f3e6a96381a" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[41]&lt;/code&gt;. Also known as accessing &amp;ldquo;the reddit&amp;rdquo;.</source>
          <target state="translated">같음 &lt;code&gt;self[41]&lt;/code&gt; . &quot;레딧&quot;에 액세스하는 것으로도 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef798b3b89fa80546b5033762536df81ce868fab" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[4]&lt;/code&gt;.</source>
          <target state="translated">같음 &lt;code&gt;self[4]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9529f7f73404bd0b9ea23ff594ca10bb7f129473" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;#==&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#==&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a44342d5dd041328124842669324242ab418d0e4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;Array#==&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the two arrays contain the same number of elements and if each element is equal to the corresponding element in the &lt;code&gt;other&lt;/code&gt; array, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Array#==&lt;/code&gt; 와 같습니다 . 반환 &lt;code&gt;true&lt;/code&gt; 두 개의 어레이는 같은 수의 요소를 포함하는 경우, 각 요소는 대응하는 요소에 동일한 경우는 &lt;code&gt;other&lt;/code&gt; 달리 반환 배열 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd2a30837c0870d190c02ae372f807ee655408c3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#!~&lt;/code&gt;. Match the class name against the given regexp. Returns &lt;code&gt;true&lt;/code&gt; if there is no match, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String#!~&lt;/code&gt; 와 같습니다 . 주어진 정규 표현식과 클래스 이름을 일치시킵니다. 일치하는 것이 없으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="42bd8da63398730dba38bfeeaed86357b2daddc0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#&amp;lt;=&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String#&amp;lt;=&amp;gt;&lt;/code&gt; &amp;lt;=&amp;gt;와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b06a62f603f4b035b415575bc6e91d435c8334e3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#==&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the class name and &lt;code&gt;other&lt;/code&gt; are equal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String#==&lt;/code&gt; 와 같습니다 . 클래스 이름과 &lt;code&gt;other&lt;/code&gt; 가 같으면 &lt;code&gt;false&lt;/code&gt; , 그렇지 않으면 false를 반환 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fc3a0a3e6c5f066c967122c180393d2866c4248" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#=~&lt;/code&gt;. Match the class name against the given regexp. Returns the position where the match starts or &lt;code&gt;nil&lt;/code&gt; if there is no match.</source>
          <target state="translated">&lt;code&gt;String#=~&lt;/code&gt; 와 같습니다 . 주어진 정규 표현식과 클래스 이름을 일치시킵니다. 일치하는 위치를 반환하고 일치하는 것이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="bd80d55c74c4aa16e8cc87c1c392fe6ac5fc11a8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#eql?&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the class name and &lt;code&gt;other&lt;/code&gt; have the same length and content, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String#eql?&lt;/code&gt; 동일 합니까? . 반환 &lt;code&gt;true&lt;/code&gt; 클래스 이름의 경우와 &lt;code&gt;other&lt;/code&gt; 그렇지 않은 같은 길이와 내용이 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71fe2b4fad96809ecf7b2fb6196123edf17f28b6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#match?&lt;/code&gt;. Match the class name against the given regexp. Returns &lt;code&gt;true&lt;/code&gt; if there is a match, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String#match?&lt;/code&gt; 와 동일 합니까? . 주어진 정규 표현식과 클래스 이름을 일치시킵니다. 일치하는 것이 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="1a2e9b1d20bab8469979f40361921883d9b6848f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;delete_all&lt;/code&gt;. The difference is that returns &lt;code&gt;self&lt;/code&gt;, instead of an array with the deleted objects, so methods can be chained. See &lt;code&gt;delete_all&lt;/code&gt; for more information. Note that because &lt;code&gt;delete_all&lt;/code&gt; removes records by directly running an SQL query into the database, the &lt;code&gt;updated_at&lt;/code&gt; column of the object is not changed.</source>
          <target state="translated">&lt;code&gt;delete_all&lt;/code&gt; 과 같습니다 . 차이점은 삭제 된 객체가있는 배열 대신 &lt;code&gt;self&lt;/code&gt; 를 반환 하므로 메소드를 체인으로 묶을 수 있다는 것입니다. 자세한 내용은 &lt;code&gt;delete_all&lt;/code&gt; 을 참조하십시오. &lt;code&gt;delete_all&lt;/code&gt; 은 데이터베이스에서 SQL 쿼리를 직접 실행하여 레코드를 제거 하므로 개체 의 &lt;code&gt;updated_at&lt;/code&gt; 열은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c71d7ffc556e7cdbb9fa9d98e079f820949cd4c7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;to_s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_s&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f5c6dccedce7c8297887031f9156c91f4eed4a75" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;update_columns(name =&amp;gt; value)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;update_columns(name =&amp;gt; value)&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="701178c42cea561c9f957b4f4cd35ce1576b3b8b" translate="yes" xml:space="preserve">
          <source>Equivalent to Hash#keep_if, but returns &lt;code&gt;nil&lt;/code&gt; if no changes were made.</source>
          <target state="translated">Hash # keep_if와 동일하지만 변경 사항이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="047da798a59af25860bb890088e92344094aa749" translate="yes" xml:space="preserve">
          <source>Error generated by &lt;code&gt;delegate&lt;/code&gt; when a method is called on &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;allow_nil&lt;/code&gt; option is not used.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 에서 메소드가 호출 되고 &lt;code&gt;allow_nil&lt;/code&gt; 옵션이 사용되지 않을 때 &lt;code&gt;delegate&lt;/code&gt; 의해 생성 된 오류 .</target>
        </trans-unit>
        <trans-unit id="7b858f3888fecebf1f9b1c35a28d2802c22670ae" translate="yes" xml:space="preserve">
          <source>Error handling in transaction callbacks</source>
          <target state="translated">트랜잭션 콜백에서 오류 처리</target>
        </trans-unit>
        <trans-unit id="8207a4468e770cb82ac0bc41b74e2bdfb394055e" translate="yes" xml:space="preserve">
          <source>Error messages are first looked up in &lt;code&gt;activemodel.errors.models.MODEL.attributes.ATTRIBUTE.MESSAGE&lt;/code&gt;, if it's not there, it's looked up in &lt;code&gt;activemodel.errors.models.MODEL.MESSAGE&lt;/code&gt; and if that is not there also, it returns the translation of the default message (e.g. &lt;code&gt;activemodel.errors.messages.MESSAGE&lt;/code&gt;). The translated model name, translated attribute name and the value are available for interpolation.</source>
          <target state="translated">오류 메시지는 먼저 조회됩니다 &lt;code&gt;activemodel.errors.models.MODEL.attributes.ATTRIBUTE.MESSAGE&lt;/code&gt; 그렇지가 있다면, 그것은에서보고있어, &lt;code&gt;activemodel.errors.models.MODEL.MESSAGE&lt;/code&gt; 하고도 존재하지 않는 경우, 그것은을 반환 기본 메시지의 번역 (예 : &lt;code&gt;activemodel.errors.messages.MESSAGE&lt;/code&gt; ). 변환 된 모델 이름, 변환 된 속성 이름 및 값을 보간에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="9258378e5efacba333e76765a0073ad0bf278152" translate="yes" xml:space="preserve">
          <source>Errors added to &lt;code&gt;record.errors[:base]&lt;/code&gt; relate to the state of the record as a whole, and not to a specific attribute.</source>
          <target state="translated">&lt;code&gt;record.errors[:base]&lt;/code&gt; 추가 된 오류 는 특정 속성이 아니라 레코드의 전체 상태와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0f90d3754a0e1215fd915f2d77646659e883042" translate="yes" xml:space="preserve">
          <source>Escape carrier returns and single and double quotes for JavaScript segments.</source>
          <target state="translated">JavaScript 세그먼트에 대한 이스케이프 캐리어 리턴 및 작은 따옴표 및 큰 따옴표.</target>
        </trans-unit>
        <trans-unit id="0bc760285c65884937f9aa2830cbae336cf8bbfb" translate="yes" xml:space="preserve">
          <source>Escapes binary strings for bytea input to the database.</source>
          <target state="translated">데이터베이스에 대한 bytea 입력을위한 이진 문자열을 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="f116a1a28620fca683f1c1f63db4fd3eeca687df" translate="yes" xml:space="preserve">
          <source>Escapes carriage returns and single and double quotes for JavaScript segments.</source>
          <target state="translated">JavaScript 세그먼트의 캐리지 리턴과 작은 따옴표 및 큰 따옴표를 이스케이프 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a65d456d7d4dc877db334711ca3d9f5b8e0f82c9" translate="yes" xml:space="preserve">
          <source>Especially for XSS, it is important to do &lt;em&gt;permitted input filtering instead of restricted&lt;/em&gt;. Permitted list filtering states the values allowed as opposed to the values not allowed. Restricted lists are never complete.</source>
          <target state="translated">특히 XSS의 경우 limited &lt;em&gt;대신 허용 된 입력 필터링&lt;/em&gt; 을 수행하는 것이 중요합니다 . 허용 된 목록 필터링은 허용되지 않는 값과 반대로 허용 된 값을 나타냅니다. 제한된 목록은 완전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="50919693f2d7a86b0c64b4b79d4a6db465494bdd" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the database. Accepts a hash as input where the &lt;code&gt;:adapter&lt;/code&gt; key must be specified with the name of a database adapter (in lower-case) example for regular databases (MySQL, PostgreSQL, etc):</source>
          <target state="translated">데이터베이스에 대한 연결을 설정합니다. 일반 데이터베이스 (MySQL, PostgreSQL 등)의 데이터베이스 어댑터 이름 (소문자)으로 &lt;code&gt;:adapter&lt;/code&gt; 키를 지정해야하는 경우 해시를 입력으로 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="79ca4ae748c48005395d93f3e8c50b1b92003392" translate="yes" xml:space="preserve">
          <source>EtagWithFlash</source>
          <target state="translated">EtagWithFlash</target>
        </trans-unit>
        <trans-unit id="3c36aff318b45b430a2dbdc4d3bf1027aecc2533" translate="yes" xml:space="preserve">
          <source>EtagWithTemplateDigest</source>
          <target state="translated">EtagWithTemplateDigest</target>
        </trans-unit>
        <trans-unit id="9f3953ce2ace414d71208e614028fee10db663f9" translate="yes" xml:space="preserve">
          <source>Eval the given block. All methods available to the current connection adapter are available within the block, so you can easily use the database definition DSL to build up your schema ( &lt;a href=&quot;connectionadapters/schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt;, &lt;a href=&quot;connectionadapters/schemastatements#method-i-add_index&quot;&gt;add_index&lt;/a&gt;, etc.).</source>
          <target state="translated">주어진 블록을 평가합니다. 현재 연결 어댑터에 사용 가능한 모든 메소드가 블록 내에서 사용 가능하므로 데이터베이스 정의 DSL을 사용하여 스키마를 쉽게 작성할 수 있습니다 ( &lt;a href=&quot;connectionadapters/schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt; , &lt;a href=&quot;connectionadapters/schemastatements#method-i-add_index&quot;&gt;add_index&lt;/a&gt; 등).</target>
        </trans-unit>
        <trans-unit id="b74f0e391125276c44777683d5f8f78e319245c2" translate="yes" xml:space="preserve">
          <source>Evaluate given block in context of base class, so that you can write class macros here. When you define more than one &lt;code&gt;included&lt;/code&gt; block, it raises an exception.</source>
          <target state="translated">여기에서 클래스 매크로를 작성할 수 있도록 기본 클래스의 컨텍스트에서 지정된 블록을 평가하십시오. &lt;code&gt;included&lt;/code&gt; 블록을 두 개 이상 정의 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3ba4c3a71a12065c547d1041ab2b4de347550b31" translate="yes" xml:space="preserve">
          <source>Evaluate given block in context of base class, so that you can write class macros here. When you define more than one &lt;code&gt;prepended&lt;/code&gt; block, it raises an exception.</source>
          <target state="translated">기본 클래스의 컨텍스트에서 주어진 블록을 평가하여 여기에 클래스 매크로를 작성할 수 있습니다. 둘 이상의 &lt;code&gt;prepended&lt;/code&gt; 블록 을 정의 하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="93d52d6df369e2b485008f62cadb0c87ec30733e" translate="yes" xml:space="preserve">
          <source>Even if the file &lt;code&gt;app/models/square.rb&lt;/code&gt; exists and defines the &lt;code&gt;Square&lt;/code&gt; class, if no code yet used that class, &lt;code&gt;Rectangle.all&lt;/code&gt; issues the query</source>
          <target state="translated">&lt;code&gt;app/models/square.rb&lt;/code&gt; 파일 이 존재하고 &lt;code&gt;Square&lt;/code&gt; 클래스를 정의한 경우에도 해당 클래스를 사용하는 코드가 없으면 &lt;code&gt;Rectangle.all&lt;/code&gt; 이 쿼리를 실행합니다</target>
        </trans-unit>
        <trans-unit id="79f0d7b2cecc676c44f9e5e5ea7efae466c11543" translate="yes" xml:space="preserve">
          <source>Even more, they are totally independent, take for instance</source>
          <target state="translated">훨씬 더, 그들은 완전히 독립적입니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="2776d9c3f737f26c17c6800b368879c070720b93" translate="yes" xml:space="preserve">
          <source>Even though Active Record lets you specify conditions on the eager loaded associations just like &lt;code&gt;joins&lt;/code&gt;, the recommended way is to use &lt;a href=&quot;#joining-tables&quot;&gt;joins&lt;/a&gt; instead.</source>
          <target state="translated">Active Record를 사용하면 &lt;code&gt;joins&lt;/code&gt; 과 같은 열악한로드 된 연관에 대한 조건을 지정할 수 있지만 권장되는 방법은 대신 &lt;a href=&quot;#joining-tables&quot;&gt;join&lt;/a&gt; 을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c34671a5f366faaadfc65a027e470773ba5973f9" translate="yes" xml:space="preserve">
          <source>Event data (&lt;code&gt;event.detail&lt;/code&gt;)</source>
          <target state="translated">이벤트 데이터 ( &lt;code&gt;event.detail&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8e10d77c1933bff4e0983cac1331b5eaa79948b7" translate="yes" xml:space="preserve">
          <source>Event name</source>
          <target state="translated">행사 명</target>
        </trans-unit>
        <trans-unit id="0dd646aaea37691c5d0eea4f57121eec7468b20b" translate="yes" xml:space="preserve">
          <source>Event target</source>
          <target state="translated">이벤트 대상</target>
        </trans-unit>
        <trans-unit id="4f6e300b6625239223b9894fb9509005c5b82001" translate="yes" xml:space="preserve">
          <source>Evented File System Monitor</source>
          <target state="translated">이벤트 파일 시스템 모니터</target>
        </trans-unit>
        <trans-unit id="5bd57422294ff575a67dbfa586d5637e1c132560" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;frequency&lt;/code&gt; seconds, the reaper will call &lt;code&gt;reap&lt;/code&gt; and &lt;code&gt;flush&lt;/code&gt; on &lt;code&gt;pool&lt;/code&gt;. A reaper instantiated with a zero frequency will never reap the connection pool.</source>
          <target state="translated">모든 &lt;code&gt;frequency&lt;/code&gt; 초는 죽음의 사신이 호출 &lt;code&gt;reap&lt;/code&gt; 과 &lt;code&gt;flush&lt;/code&gt; 에 &lt;code&gt;pool&lt;/code&gt; . 빈도가 0 인 인스턴스자는 연결 풀을 가져 오지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70eb59645531b46119ab3606d96581f576a54f36" translate="yes" xml:space="preserve">
          <source>Every HTTP response from your Rails application receives the following default security headers.</source>
          <target state="translated">Rails 애플리케이션의 모든 HTTP 응답에는 다음과 같은 기본 보안 헤더가 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="3e236a2044c36be30ae89a40e83ed05a8dd292e9" translate="yes" xml:space="preserve">
          <source>Every Rails application comes with a standard set of middleware which it uses in this order in the development environment:</source>
          <target state="translated">모든 Rails 애플리케이션에는 개발 환경에서 다음 순서로 사용하는 표준 미들웨어 세트가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b715a6bbea612c2372e73b7bb47f6bdea0c53671" translate="yes" xml:space="preserve">
          <source>Every accessor comes with dirty tracking methods (&lt;code&gt;key_changed?&lt;/code&gt;, &lt;code&gt;key_was&lt;/code&gt; and &lt;code&gt;key_change&lt;/code&gt;) and methods to access the changes made during the last save (&lt;code&gt;saved_change_to_key?&lt;/code&gt;, &lt;code&gt;saved_change_to_key&lt;/code&gt; and &lt;code&gt;key_before_last_save&lt;/code&gt;).</source>
          <target state="translated">모든 접근은 더러운 추적 방법 (함께 제공 &lt;code&gt;key_changed?&lt;/code&gt; , &lt;code&gt;key_was&lt;/code&gt; 및 &lt;code&gt;key_change&lt;/code&gt; (저장 지난 동안의 변경 사항에 액세스 할) 및 방법 &lt;code&gt;saved_change_to_key?&lt;/code&gt; , &lt;code&gt;saved_change_to_key&lt;/code&gt; 및 &lt;code&gt;key_before_last_save&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="70196de75780c9079d5bf0fcc9708526405b54ad" translate="yes" xml:space="preserve">
          <source>Every element of &lt;code&gt;config.autoload_paths&lt;/code&gt; should represent the top-level namespace (&lt;code&gt;Object&lt;/code&gt;) and they cannot be nested in consequence (with the exception of &lt;code&gt;concerns&lt;/code&gt; directories explained above).</source>
          <target state="translated">&lt;code&gt;config.autoload_paths&lt;/code&gt; 의 모든 요소는 최상위 네임 스페이스 ( &lt;code&gt;Object&lt;/code&gt; )를 나타내야하며 결과적으로 중첩 될 수 없습니다 ( 위에 설명 된 &lt;code&gt;concerns&lt;/code&gt; 디렉토리 제외 ).</target>
        </trans-unit>
        <trans-unit id="47eec6a9966bb83778f0afb3a0dcc341f010cbb8" translate="yes" xml:space="preserve">
          <source>Every helper method dependent on &lt;code&gt;url_for&lt;/code&gt; (e.g. helpers for named routes like &lt;code&gt;root_path&lt;/code&gt; or &lt;code&gt;root_url&lt;/code&gt;, resource routes like &lt;code&gt;books_path&lt;/code&gt; or &lt;code&gt;books_url&lt;/code&gt;, etc.) will now &lt;strong&gt;automatically include the locale in the query string&lt;/strong&gt;, like this: &lt;code&gt;http://localhost:3001/?locale=ja&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;url_for&lt;/code&gt; 에 의존하는 모든 도우미 메서드 (예 : &lt;code&gt;root_path&lt;/code&gt; 또는 &lt;code&gt;root_url&lt;/code&gt; 과 같은 명명 된 경로의 도우미 , &lt;code&gt;books_path&lt;/code&gt; 또는 &lt;code&gt;books_url&lt;/code&gt; 과 같은 리소스 경로 등)는 이제 &lt;strong&gt;다음&lt;/strong&gt; 과 같이 &lt;strong&gt;쿼리 문자열에 로캘을 자동으로 포함합니다&lt;/strong&gt; . &lt;code&gt;http://localhost:3001/?locale=ja&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21fd0826ffc34b1aa63e1b86bdf1d9cc687eb3dc" translate="yes" xml:space="preserve">
          <source>Every major component of &lt;code&gt;Rails&lt;/code&gt; (Action Mailer, Action Controller, Active Record, etc.) implements a railtie. Each of them is responsible for their own initialization. This makes &lt;code&gt;Rails&lt;/code&gt; itself absent of any component hooks, allowing other components to be used in place of any of the &lt;code&gt;Rails&lt;/code&gt; defaults.</source>
          <target state="translated">&lt;code&gt;Rails&lt;/code&gt; 의 모든 주요 구성 요소 (Action Mailer, Action Controller, Active Record 등)는 railtie를 구현합니다. 그들 각각은 자체 초기화를 담당합니다. 이로 인해 &lt;code&gt;Rails&lt;/code&gt; 자체에 구성 요소 후크가 없으므로 &lt;code&gt;Rails&lt;/code&gt; 기본값 대신 다른 구성 요소를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33fccb879f0a7098f0b9bc519ced9f64955e93d6" translate="yes" xml:space="preserve">
          <source>Every major component of Rails (Action Mailer, Action Controller, Active Record, etc.) implements a railtie. Each of them is responsible for their own initialization. This makes Rails itself absent of any component hooks, allowing other components to be used in place of any of the Rails defaults.</source>
          <target state="translated">Rails의 모든 주요 구성 요소 (Action Mailer, Action Controller, Active Record 등)는 Railtie를 구현합니다. 그들 각각은 자신의 초기화를 담당합니다. 이렇게하면 Rails 자체에 구성 요소 후크가 없어서 Rails 기본값 대신 다른 구성 요소를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a8b42dba95dd6927e91b2879ccc4f50c8215de4" translate="yes" xml:space="preserve">
          <source>Every new user gets an activation code to activate their account when they get an e-mail with a link in it. After activating the account, the activation_code columns will be set to NULL in the database. If someone requested a URL like these, they would be logged in as the first activated user found in the database (and chances are that this is the administrator):</source>
          <target state="translated">모든 새 사용자는 링크가 포함 된 전자 메일을받을 때 계정을 활성화하기위한 활성화 코드를받습니다. 계정을 활성화 한 후 데이터베이스에서 activation_code 열이 NULL로 설정됩니다. 누군가 이와 같은 URL을 요청한 경우 데이터베이스에서 처음으로 활성화 된 사용자로 로그인됩니다 (그리고 이것이 관리자 일 가능성이 있습니다).</target>
        </trans-unit>
        <trans-unit id="732af181ae71d0774ea9ea1167c81b1f4e77b325" translate="yes" xml:space="preserve">
          <source>Every partial also has a local variable with the same name as the partial (minus the leading underscore). You can pass an object in to this local variable via the &lt;code&gt;:object&lt;/code&gt; option:</source>
          <target state="translated">모든 부분에는 부분과 이름이 같은 지역 변수가 있습니다 (선행 밑줄을 뺀 값). &lt;code&gt;:object&lt;/code&gt; 옵션을 통해 객체를이 로컬 변수에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="abc6c50a7c402432fcefdf8992692c76692ae3a1" translate="yes" xml:space="preserve">
          <source>Every test may contain one or more assertions, with no restriction as to how many assertions are allowed. Only when all the assertions are successful will the test pass.</source>
          <target state="translated">모든 테스트에는 허용되는 어설 션 수에 대한 제한없이 하나 이상의 어설 션이 포함될 수 있습니다. 모든 어설 션이 성공한 경우에만 테스트에 통과합니다.</target>
        </trans-unit>
        <trans-unit id="afb8fcc25098d62457498c6eeef5b099a4fd72ef" translate="yes" xml:space="preserve">
          <source>Everything except for the &lt;code&gt;form_with&lt;/code&gt; declaration remained the same. The reason we can use this shorter, simpler &lt;code&gt;form_with&lt;/code&gt; declaration to stand in for either of the other forms is that &lt;code&gt;@article&lt;/code&gt; is a &lt;em&gt;resource&lt;/em&gt; corresponding to a full set of RESTful routes, and Rails is able to infer which URI and method to use. For more information about this use of &lt;code&gt;form_with&lt;/code&gt;, see &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_with-label-Resource-oriented+style&quot;&gt;Resource-oriented style&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;form_with&lt;/code&gt; 선언을 제외한 모든 것은 동일하게 유지되었습니다. 이 더 짧고 간단한 &lt;code&gt;form_with&lt;/code&gt; 선언을 다른 형식 중 하나에 사용할 수있는 이유는 &lt;code&gt;@article&lt;/code&gt; 이 전체 RESTful 라우트 세트에 해당 하는 &lt;em&gt;자원&lt;/em&gt; 이고 Rails가 사용할 URI 및 메소드를 유추 할 수 있기 때문입니다. &lt;code&gt;form_with&lt;/code&gt; 사용에 대한 자세한 정보는 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_with-label-Resource-oriented+style&quot;&gt;자원 지향 스타일을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="85101b15ec72cd78eb55e176d898d4e1e83fbd2b" translate="yes" xml:space="preserve">
          <source>Everything this generator has created is neatly namespaced. The controller's class is defined within the &lt;code&gt;Blorgh&lt;/code&gt; module:</source>
          <target state="translated">이 생성기가 만든 모든 것은 깔끔하게 네임 스페이스됩니다. 컨트롤러 클래스는 &lt;code&gt;Blorgh&lt;/code&gt; 모듈 내에 정의되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e682bf1d37e967f003dd3c123ff39791a431febb" translate="yes" xml:space="preserve">
          <source>Everything you need to know to install Rails and create your first application.</source>
          <target state="translated">Rails를 설치하고 첫 번째 응용 프로그램을 만들기 위해 알아야 할 모든 것.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="0178e103c00a74c7959443394834bae4d79d3e83" translate="yes" xml:space="preserve">
          <source>Example (for MySQL):</source>
          <target state="translated">예 (MySQL의 경우) :</target>
        </trans-unit>
        <trans-unit id="e4be2efc740b1d9b4cceecd671c3e3c4966cd79b" translate="yes" xml:space="preserve">
          <source>Example (for PostgreSQL with pg_hint_plan):</source>
          <target state="translated">예 (pg_hint_plan을 사용하는 PostgreSQL의 경우) :</target>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">실시 예 1</target>
        </trans-unit>
        <trans-unit id="ebb0a8154996562bf3644bd53887f39664b2c5c9" translate="yes" xml:space="preserve">
          <source>Example 1: User Appearances</source>
          <target state="translated">예 1 : 사용자 모양</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">실시 예 2</target>
        </trans-unit>
        <trans-unit id="6576b29369e3a2f1e12fec8044472c7e8d7b0409" translate="yes" xml:space="preserve">
          <source>Example 2: Receiving New Web Notifications</source>
          <target state="translated">예 2 : 새 웹 알림 받기</target>
        </trans-unit>
        <trans-unit id="fbf4dab701189a344fa5ab06d7b87c11a74e3da0" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">실시 예 3</target>
        </trans-unit>
        <trans-unit id="34ec5a67938ede7a842f9516985b65bd854fd17d" translate="yes" xml:space="preserve">
          <source>Example Action Mailer Configuration</source>
          <target state="translated">조치 메일러 구성 예</target>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="0fc0ab406c6c6be47c9cd758eca5c6bb79653c3d" translate="yes" xml:space="preserve">
          <source>Example calling &lt;code&gt;create&lt;/code&gt; action and sending two params:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; action을 호출 하고 두 개의 매개 변수를 보내는 예제 :</target>
        </trans-unit>
        <trans-unit id="e70bba7d484c2062cb83575bc4b50e51410b4b39" translate="yes" xml:space="preserve">
          <source>Example controller overrides:</source>
          <target state="translated">컨트롤러 재정의 예 :</target>
        </trans-unit>
        <trans-unit id="51fb649202a15eed3306ff7c1ec71568caaab9db" translate="yes" xml:space="preserve">
          <source>Example for SQLite database:</source>
          <target state="translated">SQLite 데이터베이스의 예 :</target>
        </trans-unit>
        <trans-unit id="5191ba01976154d1169b43b99803a3bad775f872" translate="yes" xml:space="preserve">
          <source>Example for deleting:</source>
          <target state="translated">삭제 예 :</target>
        </trans-unit>
        <trans-unit id="7e2a6b26be4e697658b2fb7a69a0f31b77d715fd" translate="yes" xml:space="preserve">
          <source>Example for find with a lock: Imagine two concurrent transactions: each will read &lt;code&gt;person.visits == 2&lt;/code&gt;, add 1 to it, and save, resulting in two saves of &lt;code&gt;person.visits = 3&lt;/code&gt;. By locking the row, the second transaction has to wait until the first is finished; we get the expected &lt;code&gt;person.visits == 4&lt;/code&gt;.</source>
          <target state="translated">잠금이있는 find의 예 : 두 개의 동시 트랜잭션을 상상해보십시오. 각 트랜잭션이 &lt;code&gt;person.visits == 2&lt;/code&gt; 를 읽고 1을 추가 한 후 저장하면 &lt;code&gt;person.visits = 3&lt;/code&gt; 두 번 저장 됩니다. 행을 잠그면 두 번째 트랜잭션은 첫 번째 트랜잭션이 완료 될 때까지 기다려야합니다. 예상 &lt;code&gt;person.visits == 4&lt;/code&gt; 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="17853fff50896ae3c5477d3963f09af901f2878f" translate="yes" xml:space="preserve">
          <source>Example global policy:</source>
          <target state="translated">글로벌 정책 예 :</target>
        </trans-unit>
        <trans-unit id="6c300cc8e430d704d09a0ae0704e3c1499745dd7" translate="yes" xml:space="preserve">
          <source>Example object structure for use with this method:</source>
          <target state="translated">이 방법과 함께 사용하기위한 예제 객체 구조 :</target>
        </trans-unit>
        <trans-unit id="27626cc2a4778547e8a7af1c8b9a390fa121d1b3" translate="yes" xml:space="preserve">
          <source>Example of a more complex migration that also needs to initialize data:</source>
          <target state="translated">데이터를 초기화해야하는보다 복잡한 마이그레이션의 예 :</target>
        </trans-unit>
        <trans-unit id="09fff215a9ba6b6b686626b5fcc8a95ec265f154" translate="yes" xml:space="preserve">
          <source>Example of a simple migration:</source>
          <target state="translated">간단한 마이그레이션의 예 :</target>
        </trans-unit>
        <trans-unit id="927aa803d6176a0d9095808b8905b0db1e98aec9" translate="yes" xml:space="preserve">
          <source>Example of vulnerable code that could be used by attacker, if &lt;code&gt;deep_munge&lt;/code&gt; wasn't performed is:</source>
          <target state="translated">&lt;code&gt;deep_munge&lt;/code&gt; 가 수행되지 않은 경우 공격자가 사용할 수있는 취약한 코드의 예 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2e4ccc244461fd2a12825ef96a60da2329e2ce3c" translate="yes" xml:space="preserve">
          <source>Example output:</source>
          <target state="translated">출력 예 :</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="a802b46c7c9d3fa85d4f3ca6553ccaf535349b85" translate="yes" xml:space="preserve">
          <source>Example using &lt;a href=&quot;classmethods#method-i-has_secure_token&quot;&gt;&lt;code&gt;has_secure_token&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-has_secure_token&quot;&gt; &lt;code&gt;has_secure_token&lt;/code&gt; 을&lt;/a&gt; 사용한 예</target>
        </trans-unit>
        <trans-unit id="f26ed3ec911f99ca90b4cb4a4ac973d6436223db" translate="yes" xml:space="preserve">
          <source>Example using &lt;a href=&quot;classmethods#method-i-has_secure_token&quot;&gt;has_secure_token&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;classmethods#method-i-has_secure_token&quot;&gt;has_secure_token을&lt;/a&gt; 사용하는 예</target>
        </trans-unit>
        <trans-unit id="2e6d83d61924bab10f2da3a1d2d6e99e977e3329" translate="yes" xml:space="preserve">
          <source>Example using Active Record (which automatically includes &lt;a href=&quot;../securepassword&quot;&gt;&lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Active Record를 사용하는 예 (자동으로 &lt;a href=&quot;../securepassword&quot;&gt; &lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt; &lt;/a&gt; ) :</target>
        </trans-unit>
        <trans-unit id="812b1d83402bcb1ab8b20ec92d201184082f4096" translate="yes" xml:space="preserve">
          <source>Example using Active Record (which automatically includes &lt;a href=&quot;../securepassword&quot;&gt;ActiveModel::SecurePassword&lt;/a&gt;):</source>
          <target state="translated">Active Record를 사용하는 예제 ( &lt;a href=&quot;../securepassword&quot;&gt;ActiveModel :: SecurePassword&lt;/a&gt; 자동으로 포함 ) :</target>
        </trans-unit>
        <trans-unit id="33b01708809c7e2836ce9b016922604bfb27aef8" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;:include&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;:include&lt;/code&gt; 옵션이있는 예</target>
        </trans-unit>
        <trans-unit id="e0df306032141652ccb0779d2f6c0166f33970b4" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;@post.person_id =&amp;gt; 2&lt;/code&gt;:</source>
          <target state="translated">예는 &lt;code&gt;@post.person_id =&amp;gt; 2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="bd36b0d2741684c20b1b7493510751e40de58c7e" translate="yes" xml:space="preserve">
          <source>Example: Calling the &lt;code&gt;:show&lt;/code&gt; action for the first &lt;code&gt;Article&lt;/code&gt;, passing in an &lt;code&gt;HTTP_REFERER&lt;/code&gt; header:</source>
          <target state="translated">예 : 첫 번째 &lt;code&gt;Article&lt;/code&gt; 에 대해 &lt;code&gt;:show&lt;/code&gt; 액션을 호출하여 &lt;code&gt;HTTP_REFERER&lt;/code&gt; 헤더를 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="9e6d3afdafda219dea96dd077bdd8227d7175d39" translate="yes" xml:space="preserve">
          <source>Examples of &lt;code&gt;in?&lt;/code&gt;:</source>
          <target state="translated">의 예는 &lt;code&gt;in?&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9d21d804c4ec6be4388bdc8ffff4622626e06591" translate="yes" xml:space="preserve">
          <source>Examples of calling methods on the returned &lt;a href=&quot;batches/batchenumerator&quot;&gt;&lt;code&gt;BatchEnumerator&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">반환 된 &lt;a href=&quot;batches/batchenumerator&quot;&gt; &lt;code&gt;BatchEnumerator&lt;/code&gt; &lt;/a&gt; 개체 에 대한 호출 메서드의 예 :</target>
        </trans-unit>
        <trans-unit id="e0087908949a85c2c707909afa0e04ab7eabd8f2" translate="yes" xml:space="preserve">
          <source>Examples of calling methods on the returned &lt;a href=&quot;batches/batchenumerator&quot;&gt;BatchEnumerator&lt;/a&gt; object:</source>
          <target state="translated">리턴 된 &lt;a href=&quot;batches/batchenumerator&quot;&gt;BatchEnumerator&lt;/a&gt; 오브젝트 에서 메소드를 호출하는 예 :</target>
        </trans-unit>
        <trans-unit id="7ad9f8e3aebd0e5af11c08a490079daf3efc93b9" translate="yes" xml:space="preserve">
          <source>Examples of reading:</source>
          <target state="translated">독서의 예 :</target>
        </trans-unit>
        <trans-unit id="6b5bea21483cbaba11f47e563b491712cd328829" translate="yes" xml:space="preserve">
          <source>Examples of usage:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="7f8a716c7dae95bed0cb5f791996789de63dfa6b" translate="yes" xml:space="preserve">
          <source>Examples of using the default rails validators:</source>
          <target state="translated">기본 레일 유효성 검사기 사용 예 :</target>
        </trans-unit>
        <trans-unit id="87c9b736c3a5688944794a28c53aff77fea8ae2f" translate="yes" xml:space="preserve">
          <source>Examples of writing:</source>
          <target state="translated">작문의 예 :</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="761970702b542f86fca9c972ac8eeef987d589f4" translate="yes" xml:space="preserve">
          <source>Except for hashes, given an unescaped &lt;code&gt;key&lt;/code&gt; this method constructs the part of a query string that would map such key to what &lt;code&gt;to_param&lt;/code&gt; returns. For example, given</source>
          <target state="translated">해시를 제외하고, 이스케이프 처리되지 않은 &lt;code&gt;key&lt;/code&gt; 주어지면 이 메소드는 그러한 키를 &lt;code&gt;to_param&lt;/code&gt; 이 리턴 하는 것에 맵핑하는 쿼리 문자열 부분을 구성 합니다. 예를 들어, 주어진</target>
        </trans-unit>
        <trans-unit id="8f34232b2bd714ba318a50178df210d760e21de3" translate="yes" xml:space="preserve">
          <source>Exception that can be raised to stop migrations from being rolled back. For example the following migration is not reversible. Rolling back this migration will raise an &lt;a href=&quot;irreversiblemigration&quot;&gt;ActiveRecord::IrreversibleMigration&lt;/a&gt; error.</source>
          <target state="translated">마이그레이션이 롤백되는 것을 막기 위해 예외가 발생할 수 있습니다. 예를 들어 다음 마이그레이션은 되돌릴 수 없습니다. 이 마이그레이션을 롤백하면 &lt;a href=&quot;irreversiblemigration&quot;&gt;ActiveRecord :: IrreversibleMigration&lt;/a&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="0e0313971bf91b98c582cad08feed10832718358" translate="yes" xml:space="preserve">
          <source>Exceptions can be handled at the class level using the familiar &lt;code&gt;Rescuable&lt;/code&gt; approach:</source>
          <target state="translated">친숙한 &lt;code&gt;Rescuable&lt;/code&gt; 접근 방식을 사용하여 클래스 수준에서 예외를 처리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="954bbd429f949a44be9288f30636016f8b4535e6" translate="yes" xml:space="preserve">
          <source>Exceptions raised inside exception handlers are not propagated up.</source>
          <target state="translated">예외 처리기 내에서 발생한 예외는 전파되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3385200c8dbcfc96408b858080468c66bd6a4c12" translate="yes" xml:space="preserve">
          <source>Exceptions#retry_job</source>
          <target state="translated">Exceptions#retry_job</target>
        </trans-unit>
        <trans-unit id="a03eecb0afef4d2898897b050e5ff5f2a2436125" translate="yes" xml:space="preserve">
          <source>Exceptions::ClassMethods</source>
          <target state="translated">Exceptions::ClassMethods</target>
        </trans-unit>
        <trans-unit id="683c60828def65777f78b6aed19bc527642b569a" translate="yes" xml:space="preserve">
          <source>Exceptions::ClassMethods#discard_on</source>
          <target state="translated">Exceptions::ClassMethods#discard_on</target>
        </trans-unit>
        <trans-unit id="1222e1b8267ab9c9168636f14c5e97b989369e14" translate="yes" xml:space="preserve">
          <source>Exceptions::ClassMethods#retry_on</source>
          <target state="translated">Exceptions::ClassMethods#retry_on</target>
        </trans-unit>
        <trans-unit id="3e4ac9f05a188bfa180afc1802ebf7c33fea43a7" translate="yes" xml:space="preserve">
          <source>Executable Code in File Uploads</source>
          <target state="translated">파일 업로드시 실행 가능한 코드</target>
        </trans-unit>
        <trans-unit id="6897628c4e1cb73a8eaf2ff3d263eb775be0721f" translate="yes" xml:space="preserve">
          <source>Execute the block given if updated.</source>
          <target state="translated">업데이트 된 경우 주어진 블록을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="01ec6a328e2f9b09926b0e8220e998084ec8f969" translate="yes" xml:space="preserve">
          <source>Execute the supplied block while holding an exclusive lock, preventing any other thread from being inside a run_interlock block at the same time.</source>
          <target state="translated">배타적 잠금을 유지하면서 제공된 블록을 실행하여 다른 스레드가 동시에 run_interlock 블록 안에있는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="bfca9a2c493a75521cd537b362b8247dd2deaeda" translate="yes" xml:space="preserve">
          <source>Execute the supplied block while holding the Exclusive lock. If &lt;code&gt;no_wait&lt;/code&gt; is set and the lock is not immediately available, returns &lt;code&gt;nil&lt;/code&gt; without yielding. Otherwise, returns the result of the block.</source>
          <target state="translated">독점 잠금을 유지 한 채 제공된 블록을 실행하십시오. 경우 &lt;code&gt;no_wait&lt;/code&gt; 설정하고 잠금을 즉시 사용 가능하지 않은, 반환 &lt;code&gt;nil&lt;/code&gt; 을 산출하지 않고. 그렇지 않으면 블록의 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="41270aaed37b6c508a45a878307aac11b8bfe70a" translate="yes" xml:space="preserve">
          <source>Execute the supplied block while holding the Share lock.</source>
          <target state="translated">공유 잠금을 유지 한 상태에서 제공된 블록을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="dcf404d10f2f52490c6b84fd30ea1a42176bbd5a" translate="yes" xml:space="preserve">
          <source>Execute the supplied block without interference from any concurrent loads.</source>
          <target state="translated">동시로드의 방해없이 제공된 블록을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f5fb33e1b50f3e54af157464f3c616a7ad960ee2" translate="yes" xml:space="preserve">
          <source>Execute this migration in the named direction</source>
          <target state="translated">명명 된 방향으로이 마이그레이션을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="91834f7fd5a2006d667e02788083889a1c720d87" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">바인드 대용으로 &lt;code&gt;binds&lt;/code&gt; 를 사용하여이 연결의 컨텍스트에서 &lt;code&gt;sql&lt;/code&gt; 문을 실행 합니다. 실행 된 &lt;code&gt;sql&lt;/code&gt; 문과 함께 &lt;code&gt;name&lt;/code&gt; 이 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="483184be42fde04fcd38977a69e908d3c880cbb5" translate="yes" xml:space="preserve">
          <source>Executes a custom SQL query against your database and returns all the results. The results will be returned as an array, with the requested columns encapsulated as attributes of the model you call this method from. For example, if you call &lt;code&gt;Product.find_by_sql&lt;/code&gt;, then the results will be returned in a &lt;code&gt;Product&lt;/code&gt; object with the attributes you specified in the SQL query.</source>
          <target state="translated">데이터베이스에 대해 사용자 지정 SQL 쿼리를 실행하고 모든 결과를 반환합니다. 요청 된 열이이 메소드를 호출하는 모델의 속성으로 캡슐화 된 결과가 배열로 리턴됩니다. 예를 들어 &lt;code&gt;Product.find_by_sql&lt;/code&gt; 을 호출 하면 SQL 쿼리에 지정한 속성을 사용하여 &lt;code&gt;Product&lt;/code&gt; 개체 에 결과가 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="89cc0ab821805c90789117e6688667a713f2aa33" translate="yes" xml:space="preserve">
          <source>Executes a system command, capturing its binary output in a tempfile. Yields the tempfile.</source>
          <target state="translated">이진 출력을 임시 파일로 캡처하여 시스템 명령을 실행합니다. 임시 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d7c18c6ad39667a00e57eee8644983c5b3f94993" translate="yes" xml:space="preserve">
          <source>Executes an INSERT query and returns the new record's ID</source>
          <target state="translated">INSERT 쿼리를 실행하고 새 레코드의 ID를 반환</target>
        </trans-unit>
        <trans-unit id="5cdbf210ef5afaaed18c39d313a546f6024896b0" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement, returning a PG::Result object on success or raising a PG::Error exception otherwise. Note: the PG::Result object is manually memory managed; if you don't need it specifically, you may want consider the &lt;code&gt;exec_query&lt;/code&gt; wrapper.</source>
          <target state="translated">성공시 PG :: Result 객체를 반환하거나 그렇지 않으면 PG :: Error 예외를 발생시키는 SQL 문을 실행합니다. 참고 : PG :: Result 객체는 수동으로 메모리 관리됩니다. 특별히 필요하지 않은 경우 &lt;code&gt;exec_query&lt;/code&gt; 래퍼를 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1647e371073ad04a1a13783cb27d4ed9efb0eff1" translate="yes" xml:space="preserve">
          <source>Executes an arbitrary command. Just like the backticks. Let's say you want to remove the &lt;code&gt;README.rdoc&lt;/code&gt; file:</source>
          <target state="translated">임의의 명령을 실행합니다. 백틱처럼. &lt;code&gt;README.rdoc&lt;/code&gt; 파일 을 제거한다고 가정 해 봅시다 .</target>
        </trans-unit>
        <trans-unit id="007dfd990cf4ecbe4c3ab7b43dfc8995158ac21a" translate="yes" xml:space="preserve">
          <source>Executes delete &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">바인드 대용으로 &lt;code&gt;binds&lt;/code&gt; 를 사용하여이 연결의 컨텍스트에서 delete &lt;code&gt;sql&lt;/code&gt; 문을 실행 합니다. 실행 된 &lt;code&gt;sql&lt;/code&gt; 문과 함께 &lt;code&gt;name&lt;/code&gt; 이 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="68931881d00ac225254ec719704d85851a68f83e" translate="yes" xml:space="preserve">
          <source>Executes insert &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">바인드 대용으로 &lt;code&gt;binds&lt;/code&gt; 를 사용하여이 연결의 컨텍스트에서 insert &lt;code&gt;sql&lt;/code&gt; 문을 실행 합니다. 실행 된 &lt;code&gt;sql&lt;/code&gt; 문과 함께 &lt;code&gt;name&lt;/code&gt; 이 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="90b3bcc7990053de6fd80b91cdd147345ff420da" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in the context of this connection and returns the raw result from the connection adapter. Note: depending on your database connector, the result returned by this method may be manually memory managed. Consider using the &lt;a href=&quot;databasestatements#method-i-exec_query&quot;&gt;#exec_query&lt;/a&gt; wrapper instead.</source>
          <target state="translated">이 연결의 컨텍스트에서 SQL 문을 실행하고 연결 어댑터에서 원시 결과를 리턴합니다. 참고 : 데이터베이스 커넥터에 따라이 방법으로 리턴 된 결과는 수동으로 메모리 관리 될 수 있습니다. &lt;a href=&quot;databasestatements#method-i-exec_query&quot;&gt;#exec_query&lt;/a&gt; 래퍼를 대신 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="095a1d29f417a515e3cac1e62eeac55673fa083b" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in the context of this connection and returns the raw result from the connection adapter. Note: depending on your database connector, the result returned by this method may be manually memory managed. Consider using the &lt;a href=&quot;databasestatements#method-i-exec_query&quot;&gt;&lt;code&gt;exec_query&lt;/code&gt;&lt;/a&gt; wrapper instead.</source>
          <target state="translated">이 연결의 컨텍스트에서 SQL 문을 실행하고 연결 어댑터에서 원시 결과를 반환합니다. 참고 : 데이터베이스 커넥터에 따라이 메서드에서 반환 된 결과는 수동으로 메모리를 관리 할 수 ​​있습니다. 대신 &lt;a href=&quot;databasestatements#method-i-exec_query&quot;&gt; &lt;code&gt;exec_query&lt;/code&gt; &lt;/a&gt; 래퍼를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1b16a352708922fde1361c6f5ed05e77b8f06fea" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in the context of this connection.</source>
          <target state="translated">이 연결의 컨텍스트에서 SQL 문을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c702fad82490424f3a6ffc8fe3cc79b899b4c3f8" translate="yes" xml:space="preserve">
          <source>Executes the delete statement and returns the number of rows affected.</source>
          <target state="translated">delete 문을 실행하고 영향을받는 행 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc2a334164e33eaee73c9e4647e8815522a2ecf1" translate="yes" xml:space="preserve">
          <source>Executes the given block and updates the latest watched files and timestamp.</source>
          <target state="translated">주어진 블록을 실행하고 가장 최근에 본 파일과 타임 스탬프를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="2c924a499f11b325de2a53b7c642ec31ffcf166d" translate="yes" xml:space="preserve">
          <source>Executes the truncate statement.</source>
          <target state="translated">잘라 내기 문을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="4466d364d92720cd14540817202f736f2af412e6" translate="yes" xml:space="preserve">
          <source>Executes the update statement and returns the number of rows affected.</source>
          <target state="translated">update 문을 실행하고 영향을받는 행 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="15f2d98aabc8adc4d9008469480d9e486231e2ee" translate="yes" xml:space="preserve">
          <source>Executes update &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">바인드 대용으로 &lt;code&gt;binds&lt;/code&gt; 를 사용하여이 연결의 컨텍스트에서 update &lt;code&gt;sql&lt;/code&gt; 문을 실행 합니다. 실행 된 &lt;code&gt;sql&lt;/code&gt; 문과 함께 &lt;code&gt;name&lt;/code&gt; 이 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="6d525b71568c2d982f46feb96b332bedcdc6e4a0" translate="yes" xml:space="preserve">
          <source>Execution</source>
          <target state="translated">Execution</target>
        </trans-unit>
        <trans-unit id="a21e3f3c3f8823a51f9d0d7d0efa01561ee8d0d3" translate="yes" xml:space="preserve">
          <source>Execution#perform</source>
          <target state="translated">Execution#perform</target>
        </trans-unit>
        <trans-unit id="e73f2a772067808e320afde3ad3e7b591bb1106e" translate="yes" xml:space="preserve">
          <source>Execution#perform_now</source>
          <target state="translated">Execution#perform_now</target>
        </trans-unit>
        <trans-unit id="b82feace2f44d7e8e136d1688aa894120bcca0f4" translate="yes" xml:space="preserve">
          <source>Execution::ClassMethods</source>
          <target state="translated">Execution::ClassMethods</target>
        </trans-unit>
        <trans-unit id="0dfb6be09e4d57719171bc7f9dfc9a7339b0abe5" translate="yes" xml:space="preserve">
          <source>Execution::ClassMethods#perform_now</source>
          <target state="translated">Execution::ClassMethods#perform_now</target>
        </trans-unit>
        <trans-unit id="76edb34b71e328ce169115f987d077b5dc463375" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper</source>
          <target state="translated">ExecutionWrapper</target>
        </trans-unit>
        <trans-unit id="d686fe386f26950f154afadef5b04cde3d9bd1d2" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper#complete!</source>
          <target state="translated">ExecutionWrapper#complete!</target>
        </trans-unit>
        <trans-unit id="8e35e94100695ebe0894add8c0b165d13e019fae" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::active</source>
          <target state="translated">ExecutionWrapper::active</target>
        </trans-unit>
        <trans-unit id="7a07bc6eb55ef35e1a3806ed755a6d65a5035402" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::register_hook</source>
          <target state="translated">ExecutionWrapper::register_hook</target>
        </trans-unit>
        <trans-unit id="31ef29c701f51bca647a8057229c1b3929362595" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::run!</source>
          <target state="translated">ExecutionWrapper::run!</target>
        </trans-unit>
        <trans-unit id="1a97f1c517d7cc434872da05add840e7884afc20" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::to_complete</source>
          <target state="translated">ExecutionWrapper::to_complete</target>
        </trans-unit>
        <trans-unit id="58f732cc0de2631edbdd1055a6a16a7887f4fc52" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::to_run</source>
          <target state="translated">ExecutionWrapper::to_run</target>
        </trans-unit>
        <trans-unit id="ba4e373828555318f20b4bc288f2125acb9401f1" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::wrap</source>
          <target state="translated">ExecutionWrapper::wrap</target>
        </trans-unit>
        <trans-unit id="c1f6604b7486fef57febf39070b6b5f55ece6c6b" translate="yes" xml:space="preserve">
          <source>Executor</source>
          <target state="translated">Executor</target>
        </trans-unit>
        <trans-unit id="89a7ec45635687124e38ffbc1b18cf36a307bd00" translate="yes" xml:space="preserve">
          <source>Exert &lt;a href=&quot;behavior#method-i-disconnect&quot;&gt;&lt;code&gt;disconnect&lt;/code&gt;&lt;/a&gt; on the connection under test.</source>
          <target state="translated">발휘 &lt;a href=&quot;behavior#method-i-disconnect&quot;&gt; &lt;code&gt;disconnect&lt;/code&gt; &lt;/a&gt; 시험 연결합니다.</target>
        </trans-unit>
        <trans-unit id="938eae645b4d9aee17a2e6f97d091b441944b14d" translate="yes" xml:space="preserve">
          <source>Exert &lt;a href=&quot;behavior#method-i-disconnect&quot;&gt;disconnect&lt;/a&gt; on the connection under test.</source>
          <target state="translated">발휘 &lt;a href=&quot;behavior#method-i-disconnect&quot;&gt;분리&lt;/a&gt; 시험 연결합니다.</target>
        </trans-unit>
        <trans-unit id="7583a1ed65c546121bd433318e910d5ad66b5cad" translate="yes" xml:space="preserve">
          <source>Exim</source>
          <target state="translated">Exim</target>
        </trans-unit>
        <trans-unit id="a930d9f44591122f4d975fe7b76e3529ac39484f" translate="yes" xml:space="preserve">
          <source>Exim (&amp;lt;tt&amp;gt;bin/rails action_mailbox:ingress:exim)</source>
          <target state="translated">엑심 (&amp;lt;tt&amp;gt; bin / rails action_mailbox : ingress : exim)</target>
        </trans-unit>
        <trans-unit id="fe7aedbd74125d3f9d4319d72241f50478b41cde" translate="yes" xml:space="preserve">
          <source>Existence of Objects</source>
          <target state="translated">개체의 존재</target>
        </trans-unit>
        <trans-unit id="3b663f4528a64cd398799ab69240f548985ecf39" translate="yes" xml:space="preserve">
          <source>Existing applications can opt in to this new behavior by setting &lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. The old behavior will be deprecated in Rails 6.1 and removed in a subsequent release.</source>
          <target state="translated">기존 애플리케이션은 &lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하여이 새로운 동작을 선택할 수 있습니다 . 이전 동작은 Rails 6.1에서 더 이상 사용되지 않으며 후속 릴리스에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="17ed3d19ace876055e098699c14c65fedd0f0d70" translate="yes" xml:space="preserve">
          <source>Expands all paths against the root and return all unique values.</source>
          <target state="translated">루트에 대한 모든 경로를 확장하고 모든 고유 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="629fe0a66aeb391ad4cf93d03c6a2a7c418f8c79" translate="yes" xml:space="preserve">
          <source>Expands out the &lt;code&gt;key&lt;/code&gt; argument into a key that can be used for the cache store. Optionally accepts a namespace, and all keys will be scoped within that namespace.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 인수를 캐시 저장소에 사용할 수있는 키로 확장합니다 . 선택적으로 네임 스페이스를 허용하며 모든 키는 해당 네임 스페이스 내에서 범위가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="c629ed535f5c56361403cca4a35ab93670a1640a" translate="yes" xml:space="preserve">
          <source>Expects arguments in the same format as &lt;a href=&quot;core#method-c-new&quot;&gt;ActiveRecord::Base.new&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;core#method-c-new&quot;&gt;ActiveRecord :: Base.new&lt;/a&gt; 와 동일한 형식의 인수가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="1bd9cb694b0d986699fe91049b7550d968d56067" translate="yes" xml:space="preserve">
          <source>Expects arguments in the same format as &lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;ActiveRecord::Base.create&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;ActiveRecord :: Base.create&lt;/a&gt; 와 동일한 형식의 인수가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="96e02d62e8a5b91d5d9c3f16d64b5657d5c9c445" translate="yes" xml:space="preserve">
          <source>Expects arguments in the same format as &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;ActiveRecord::Base.create!&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;ActiveRecord :: Base.create&lt;/a&gt; 와 동일한 형식의 인수를 예상합니다! .</target>
        </trans-unit>
        <trans-unit id="ccb0476f83c1c801ae3e425da0a72aec98093240" translate="yes" xml:space="preserve">
          <source>Expiry in signed or encrypted cookie is now embedded in the cookies values</source>
          <target state="translated">서명되거나 암호화 된 쿠키의 만료가 이제 쿠키 값에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="185fe4cf8d580178cf4b7cb871610d34d9f1a925" translate="yes" xml:space="preserve">
          <source>Explaining how Rack works is not really in the scope of this guide. In case you are not familiar with Rack's basics, you should check out the &lt;a href=&quot;#resources&quot;&gt;Resources&lt;/a&gt; section below.</source>
          <target state="translated">랙 작동 방식에 대한 설명은이 안내서에서 다루지 않습니다. Rack의 기본 사항에 익숙하지 않은 경우 아래 의 &lt;a href=&quot;#resources&quot;&gt;리소스&lt;/a&gt; 섹션을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8154f4d42663882bdee3a5fa4fc8e5313298b558" translate="yes" xml:space="preserve">
          <source>Explicit block use for &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; 대한 명시 적 블록 사용</target>
        </trans-unit>
        <trans-unit id="4bd4881d11401b91cc1ab481d555cbe8f277a4f0" translate="yes" xml:space="preserve">
          <source>Explicit dependencies</source>
          <target state="translated">명시 적 종속성</target>
        </trans-unit>
        <trans-unit id="195f251241709d131b74886fa57fa568e097ef00" translate="yes" xml:space="preserve">
          <source>Explicitly passing a locale:</source>
          <target state="translated">로케일을 명시 적으로 전달 :</target>
        </trans-unit>
        <trans-unit id="73d747d5e66b80b521d289f5f4525ebc0603783b" translate="yes" xml:space="preserve">
          <source>Expose one or more attributes within a block. Old values are returned after the block concludes. Example demonstrating the common use of needing to set Current attributes outside the request-cycle:</source>
          <target state="translated">블록 내에 하나 이상의 속성을 노출하십시오. 블록이 끝나면 이전 값이 반환됩니다. 요청주기 외부에서 현재 속성을 설정해야하는 일반적인 사용법을 보여주는 예 :</target>
        </trans-unit>
        <trans-unit id="ca7c9a9f809bcf6ba4f834c8fd222e6957b29427" translate="yes" xml:space="preserve">
          <source>Extend core Ruby classes like Hash and String.</source>
          <target state="translated">해시 및 문자열과 같은 핵심 Ruby 클래스를 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="7cec80a7b857612410db1cd668f5560329ffb829" translate="yes" xml:space="preserve">
          <source>Extended modules for your application.</source>
          <target state="translated">어플리케이션을위한 확장 모듈.</target>
        </trans-unit>
        <trans-unit id="d6c5d2e4a03ba2cddcff56256d15a08a8e4baee8" translate="yes" xml:space="preserve">
          <source>Extending Core Classes</source>
          <target state="translated">핵심 클래스 확장</target>
        </trans-unit>
        <trans-unit id="3a49199cf9f2a60298769431ea7beadd4e082cbf" translate="yes" xml:space="preserve">
          <source>Extending Rails</source>
          <target state="translated">확장 레일</target>
        </trans-unit>
        <trans-unit id="5892a4a539fbe9dba80a4e1a6e224657d13a68e8" translate="yes" xml:space="preserve">
          <source>Extends &lt;code&gt;Array#to_s&lt;/code&gt; to convert a collection of elements into a comma separated id list if &lt;code&gt;:db&lt;/code&gt; argument is given as the format.</source>
          <target state="translated">&lt;code&gt;:db&lt;/code&gt; 인수가 형식으로 지정된 경우 요소 모음을 쉼표로 구분 된 id 목록으로 변환하도록 &lt;code&gt;Array#to_s&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="c00a094c1074622ae0260a5e7256e1c1f6969590" translate="yes" xml:space="preserve">
          <source>Extends the default Range#=== to support range comparisons.</source>
          <target state="translated">범위 비교를 지원하도록 기본 범위 # ===를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="68e988bb8001f0e6eccc57d6eab580a4163fe5b8" translate="yes" xml:space="preserve">
          <source>Extends the default Range#cover? to support range comparisons.</source>
          <target state="translated">기본 Range # cover를 확장 하시겠습니까? 범위 비교를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3a8d564936c012c67661e189ea9e54828d6624b4" translate="yes" xml:space="preserve">
          <source>Extends the default Range#include? to support range comparisons.</source>
          <target state="translated">기본 범위를 포함합니다. #include? 범위 비교를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="55510833f161abd5eeb2c81606cb9ff6dc86e9d1" translate="yes" xml:space="preserve">
          <source>Extends the module object with class/module and instance accessors for class/module attributes, just like the native attr* accessors for instance attributes, but does so on a per-thread basis.</source>
          <target state="translated">인스턴스 속성에 대한 기본 attr * 접근 자와 마찬가지로 클래스 / 모듈 속성에 대한 클래스 / 모듈 및 인스턴스 접근자를 사용하여 모듈 객체를 확장하지만 스레드별로 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ba730a47e84dfbea8c6d0ae64bfa8508dde90a37" translate="yes" xml:space="preserve">
          <source>Extends the module object with class/module and instance accessors for class/module attributes, just like the native attr* accessors for instance attributes.</source>
          <target state="translated">인스턴스 속성의 기본 attr * 접근 자와 마찬가지로 클래스 / 모듈 속성의 클래스 / 모듈 및 인스턴스 접근자를 사용하여 모듈 객체를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="4e02948a963806f6725aeac76c7a94fd629c5eaa" translate="yes" xml:space="preserve">
          <source>Extension examples:</source>
          <target state="translated">확장 예 :</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="245394779a4b49a9b0f72ccaea15033127e0d222" translate="yes" xml:space="preserve">
          <source>Extensions can refer to the internals of the association proxy using these three attributes of the &lt;code&gt;proxy_association&lt;/code&gt; accessor:</source>
          <target state="translated">확장은 &lt;code&gt;proxy_association&lt;/code&gt; 접근 자의 세 가지 속성을 사용하여 연결 프록시의 내부를 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f59ce310e169376f6367a5003dfb6bdf9d85840f" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="c703904ec8c4731a70a494149ce0d481155eb4e9" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;BigDecimal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 로의 확장</target>
        </trans-unit>
        <trans-unit id="383a64ddac151f20917e899bed4fdfe431609f62" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="162d5d8dc72c0fa90cc9c84a95a7a0ed2c292be5" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Date&lt;/code&gt;</source>
          <target state="translated">에 대한 확장 &lt;code&gt;Date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d045e298f9da75f68fbcbc30b2d3f0db1338d708" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;DateTime&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DateTime&lt;/code&gt; 으로의 확장</target>
        </trans-unit>
        <trans-unit id="3bbb83b4bbf3660bf820bd13f2655a0bf1f78080" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Enumerable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Enumerable&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="624f2a6730126a04f098b1699cdaa442b8435d4a" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;File&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 확장자</target>
        </trans-unit>
        <trans-unit id="17e2ed99471adf8f5a891c07056c1942bcbdbde5" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Hash&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="3943b8538130f07a69c81e22904da52c6e5e3598" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="061d7075edf225f14b0384f93056ab26d2169f9d" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;LoadError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LoadError&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="91833ab551593d77164eda4260cd4cef65efb401" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Marshal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Marshal&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="2a81f675e29bc3bdb0f1c13a24770f0d474559dc" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Module&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="7ee9e47ab72c74bd29a9e03793f2e219ffb6794e" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;NameError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NameError&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="8e78ed8af09af2e97bd6d96722e0b5563e13b3f8" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Numeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Numeric&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="aa997262e94bff495c851061a34c497a8b3231d7" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Range&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Range&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="e6fdfd34da789649ff4403006f17407f462ac645" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Regexp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Regexp&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="f8b6bfa42b322f64f018a6aecb78cd8d69c4a284" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="68cc968ccdc1911f72a845deac4f40e3c73af135" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Symbol&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol&lt;/code&gt; 확장</target>
        </trans-unit>
        <trans-unit id="3968883ccd97912cb3b4f351aedd20207be3247e" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Time&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Time&lt;/code&gt; 연장</target>
        </trans-unit>
        <trans-unit id="7f54ed86df05d02ce0e8f2bffabf15f35f2753a5" translate="yes" xml:space="preserve">
          <source>Extensions to All Objects</source>
          <target state="translated">모든 객체에 대한 확장</target>
        </trans-unit>
        <trans-unit id="8fdb5d77c0ea69e962db331c0331d4ccd1f6e481" translate="yes" xml:space="preserve">
          <source>External dependencies</source>
          <target state="translated">외부 의존성</target>
        </trans-unit>
        <trans-unit id="28f6e88a00ce14d69d26ec23348c552c37770c9e" translate="yes" xml:space="preserve">
          <source>External redirects</source>
          <target state="translated">외부 리디렉션</target>
        </trans-unit>
        <trans-unit id="62ce7e3a9d3fa6133806c9d4f3d1fa8786497f63" translate="yes" xml:space="preserve">
          <source>Extra options on the associations, as defined in the &lt;code&gt;AssociationReflection::INVALID_AUTOMATIC_INVERSE_OPTIONS&lt;/code&gt; constant, or a custom scope, will also prevent the association's inverse from being found automatically.</source>
          <target state="translated">&lt;code&gt;AssociationReflection::INVALID_AUTOMATIC_INVERSE_OPTIONS&lt;/code&gt; 상수 또는 사용자 지정 범위에 정의 된대로 연결에 대한 추가 옵션 은 연결의 역이 자동으로 발견되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="ae07dff6f5a1fc924a4c6050b0295f323269e752" translate="yes" xml:space="preserve">
          <source>Extra parameters (event.detail)</source>
          <target state="translated">추가 매개 변수 (event.detail)</target>
        </trans-unit>
        <trans-unit id="b2a6a853c7efd9afbb6bab6801cc0b1451ed61b4" translate="yes" xml:space="preserve">
          <source>Extract the action name from the passed data and process it via the channel. The process will ensure that the action requested is a public method on the channel declared by the user (so not one of the callbacks like &lt;a href=&quot;base#method-i-subscribed&quot;&gt;&lt;code&gt;subscribed&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">전달 된 데이터에서 작업 이름을 추출하고 채널을 통해 처리합니다. 이 프로세스는 요청 된 작업이 사용자가 선언 한 채널의 공개 메소드인지 확인합니다 ( &lt;a href=&quot;base#method-i-subscribed&quot;&gt; &lt;code&gt;subscribed&lt;/code&gt; &lt;/a&gt; 와 같은 콜백 중 하나가 아님 ).</target>
        </trans-unit>
        <trans-unit id="00585eb1cda77d4c4fd2d07bad0caca2dd071983" translate="yes" xml:space="preserve">
          <source>Extract the action name from the passed data and process it via the channel. The process will ensure that the action requested is a public method on the channel declared by the user (so not one of the callbacks like &lt;a href=&quot;base#method-i-subscribed&quot;&gt;subscribed&lt;/a&gt;).</source>
          <target state="translated">전달 된 데이터에서 조치 이름을 추출하고 채널을 통해 처리하십시오. 이 프로세스는 요청 된 작업이 사용자가 선언 한 채널에서 공개 된 메소드인지 확인합니다 (따라서 &lt;a href=&quot;base#method-i-subscribed&quot;&gt;subscribed&lt;/a&gt; 와 같은 콜백 중 하나는 아님 ).</target>
        </trans-unit>
        <trans-unit id="1d5c7c48753572242bfd539838e81e861ec7836f" translate="yes" xml:space="preserve">
          <source>Extract the given key from each element in the enumerable.</source>
          <target state="translated">열거 형의 각 요소에서 주어진 키를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="32a3880f082cded1807a2148a6dae8ee079d4432" translate="yes" xml:space="preserve">
          <source>Extract the given key from the first element in the enumerable.</source>
          <target state="translated">열거 형의 첫 번째 요소에서 주어진 키를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="dcf232522c960197f7d5bcf61fc205d57a465555" translate="yes" xml:space="preserve">
          <source>Extract the name of the missing constant from the exception message.</source>
          <target state="translated">예외 메시지에서 누락 된 상수의 이름을 추출하십시오.</target>
        </trans-unit>
        <trans-unit id="c3c5fb3f17e9d85f7a9245cfaf12b6962f3248a0" translate="yes" xml:space="preserve">
          <source>Extracting</source>
          <target state="translated">Extracting</target>
        </trans-unit>
        <trans-unit id="fa4d6235b74145266bf8aabfe31883f9d2c5a00b" translate="yes" xml:space="preserve">
          <source>Extracting a plain old Ruby object to encapsulate it and collaborate or delegate to the original object is often a good choice, but when there's no additional state to encapsulate or we're making DSL-style declarations about the parent class, introducing new collaborators can obfuscate rather than simplify.</source>
          <target state="translated">캡슐화하기 위해 평범한 오래된 Ruby 객체를 추출하고 원래 객체로 공동 작업 또는 위임하는 것이 종종 좋은 선택이지만 캡슐화 할 추가 상태가 없거나 상위 클래스에 대한 DSL 스타일 선언을 할 때 새로운 공동 작업자를 혼란스럽게 만들 수 있습니다. 단순화하기보다는.</target>
        </trans-unit>
        <trans-unit id="427b4d9c68c51271bc839097d57764a7257fefcd" translate="yes" xml:space="preserve">
          <source>Extracting previews requires third-party applications, FFmpeg for video and muPDF for PDFs, and on macOS also XQuartz and Poppler. These libraries are not provided by Rails. You must install them yourself to use the built-in previewers. Before you install and use third-party software, make sure you understand the licensing implications of doing so.</source>
          <target state="translated">미리보기를 추출하려면 타사 응용 프로그램, 비디오 용 FFmpeg 및 PDF 용 muPDF 및 macOS에서도 XQuartz 및 Poppler가 필요합니다. 이 라이브러리는 Rails에서 제공하지 않습니다. 내장 미리보기를 사용하려면 직접 설치해야합니다. 타사 소프트웨어를 설치하고 사용하기 전에 라이센스의 영향을 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="db0e83e58f24badbb8b778a9e10a23cb1546a0f2" translate="yes" xml:space="preserve">
          <source>Extracting previews requires third-party applications: FFmpeg v3.4+ for video and muPDF for PDFs, and on macOS also XQuartz and Poppler. These libraries are not provided by Rails. You must install them yourself to use the built-in previewers. Before you install and use third-party software, make sure you understand the licensing implications of doing so.</source>
          <target state="translated">미리보기를 추출하려면 타사 애플리케이션 (비디오 용 FFmpeg v3.4 +, PDF 용 muPDF, macOS에서도 XQuartz 및 Poppler)이 필요합니다. 이러한 라이브러리는 Rails에서 제공하지 않습니다. 기본 제공 미리보기를 사용하려면 직접 설치해야합니다. 타사 소프트웨어를 설치하고 사용하기 전에이를 수행하는 라이선스의 의미를 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="b2adc3f59132ddd99117cdcbd5c98bce93c428ee" translate="yes" xml:space="preserve">
          <source>Extracts a named &lt;code&gt;association&lt;/code&gt; from the relation. The named association is first preloaded, then the individual association records are collected from the relation. Like so:</source>
          <target state="translated">관계에서 명명 된 &lt;code&gt;association&lt;/code&gt; 을 추출합니다 . 명명 된 연관이 먼저 사전로드 된 후 개별 연관 레코드가 관계에서 수집됩니다. 이렇게 :</target>
        </trans-unit>
        <trans-unit id="11476d9c98f007a92c91402a99c50dd16f32e510" translate="yes" xml:space="preserve">
          <source>Extracts an excerpt from &lt;code&gt;text&lt;/code&gt; that matches the first instance of &lt;code&gt;phrase&lt;/code&gt;. The &lt;code&gt;:radius&lt;/code&gt; option expands the excerpt on each side of the first occurrence of &lt;code&gt;phrase&lt;/code&gt; by the number of characters defined in &lt;code&gt;:radius&lt;/code&gt; (which defaults to 100). If the excerpt radius overflows the beginning or end of the &lt;code&gt;text&lt;/code&gt;, then the &lt;code&gt;:omission&lt;/code&gt; option (which defaults to &amp;ldquo;&amp;hellip;&amp;rdquo;) will be prepended/appended accordingly. Use the &lt;code&gt;:separator&lt;/code&gt; option to choose the delimitation. The resulting string will be stripped in any case. If the &lt;code&gt;phrase&lt;/code&gt; isn't found, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;phrase&lt;/code&gt; 의 첫 번째 인스턴스와 일치하는 &lt;code&gt;text&lt;/code&gt; 에서 발췌를 추출합니다 . &lt;code&gt;:radius&lt;/code&gt; 옵션 처음 나타나는 양쪽의 발췌 확대 &lt;code&gt;phrase&lt;/code&gt; 에 정의 된 문자의 수에 의해 &lt;code&gt;:radius&lt;/code&gt; (100 기본값). 발췌 반경이 시작 또는 끝 넘는 경우, &lt;code&gt;text&lt;/code&gt; , 다음 &lt;code&gt;:omission&lt;/code&gt; 옵션 (디폴트는 &quot;...&quot;) 앞에 추가 /, 추가 된 따라 될 것입니다. &lt;code&gt;:separator&lt;/code&gt; 옵션을 사용하여 구분 을 선택하십시오. 결과 문자열은 어떤 경우에도 제거됩니다. 는 IF &lt;code&gt;phrase&lt;/code&gt; 발견되지 않는, &lt;code&gt;nil&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="07718ae3dc7d5ed90ae3fbd132ce9d4a0260b9ec" translate="yes" xml:space="preserve">
          <source>Extracts and stores metadata from the file associated with this blob using a relevant analyzer. Active Storage comes with built-in analyzers for images and videos. See &lt;a href=&quot;../analyzer/imageanalyzer&quot;&gt;&lt;code&gt;ActiveStorage::Analyzer::ImageAnalyzer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../analyzer/videoanalyzer&quot;&gt;&lt;code&gt;ActiveStorage::Analyzer::VideoAnalyzer&lt;/code&gt;&lt;/a&gt; for information about the specific attributes they extract and the third-party libraries they require.</source>
          <target state="translated">관련 분석기를 사용하여이 Blob과 연결된 파일에서 메타 데이터를 추출하고 저장합니다. Active Storage는 이미지 및 비디오 용 내장 분석기와 함께 제공됩니다. 참조 &lt;a href=&quot;../analyzer/imageanalyzer&quot;&gt; &lt;code&gt;ActiveStorage::Analyzer::ImageAnalyzer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../analyzer/videoanalyzer&quot;&gt; &lt;code&gt;ActiveStorage::Analyzer::VideoAnalyzer&lt;/code&gt; &lt;/a&gt; 특정 그들이 추출 속성과 그들이 필요로하는 타사 라이브러리에 대한 자세한 내용.</target>
        </trans-unit>
        <trans-unit id="a33eaf43ab612e6d64826fe1cd5a1ef2d8bd127e" translate="yes" xml:space="preserve">
          <source>Extracts and stores metadata from the file associated with this blob using a relevant analyzer. Active Storage comes with built-in analyzers for images and videos. See &lt;a href=&quot;../analyzer/imageanalyzer&quot;&gt;ActiveStorage::Analyzer::ImageAnalyzer&lt;/a&gt; and &lt;a href=&quot;../analyzer/videoanalyzer&quot;&gt;ActiveStorage::Analyzer::VideoAnalyzer&lt;/a&gt; for information about the specific attributes they extract and the third-party libraries they require.</source>
          <target state="translated">관련 분석기를 사용하여이 얼룩과 관련된 파일에서 메타 데이터를 추출하고 저장합니다. Active Storage에는 이미지 및 비디오를위한 분석기가 내장되어 있습니다. 참조 &lt;a href=&quot;../analyzer/imageanalyzer&quot;&gt;ActiveStorage :: 분석기 :: ImageAnalyzer&lt;/a&gt; 및 &lt;a href=&quot;../analyzer/videoanalyzer&quot;&gt;ActiveStorage :: 분석기 :: VideoAnalyzer을&lt;/a&gt; 특정 그들이 추출 속성과 그들이 필요로하는 타사 라이브러리에 대한 자세한 내용.</target>
        </trans-unit>
        <trans-unit id="a81cf921dac6df26b4828c7dac03b0c3c023b350" translate="yes" xml:space="preserve">
          <source>Extracts options from a set of arguments. Removes and returns the last element in the array if it's a hash, otherwise returns a blank hash.</source>
          <target state="translated">인수 세트에서 옵션을 추출합니다. 해시 인 경우 배열의 마지막 요소를 제거하고 반환합니다. 그렇지 않으면 빈 해시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c322b3f9b24d20295ac483f734722ee8715992e7" translate="yes" xml:space="preserve">
          <source>Extracts the following from a video blob:</source>
          <target state="translated">비디오 얼룩에서 다음을 추출합니다.</target>
        </trans-unit>
        <trans-unit id="0f080546949418564c80bb10e5d15845f1e350a7" translate="yes" xml:space="preserve">
          <source>Extracts the nested parameter from the given &lt;code&gt;keys&lt;/code&gt; by calling &lt;code&gt;dig&lt;/code&gt; at each step. Returns &lt;code&gt;nil&lt;/code&gt; if any intermediate step is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">각 단계에서 &lt;code&gt;dig&lt;/code&gt; 를 호출 하여 주어진 &lt;code&gt;keys&lt;/code&gt; 에서 중첩 매개 변수를 추출합니다 . 반환 &lt;code&gt;nil&lt;/code&gt; 을 중간 단계 인 경우 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b1137cfdea605cc4137d9b69d1f8f0bdf46f70d" translate="yes" xml:space="preserve">
          <source>Extracts width and height in pixels from an image blob.</source>
          <target state="translated">이미지 얼룩에서 너비와 높이를 픽셀 단위로 추출합니다.</target>
        </trans-unit>
        <trans-unit id="61563acc9954aa655d5371c4c48196aaeaa874f7" translate="yes" xml:space="preserve">
          <source>FALSE_VALUES</source>
          <target state="translated">FALSE_VALUES</target>
        </trans-unit>
        <trans-unit id="b26991df929a633ab76ebfb72ba772665aab30a3" translate="yes" xml:space="preserve">
          <source>FILENAME_MAX_SIZE</source>
          <target state="translated">FILENAME_MAX_SIZE</target>
        </trans-unit>
        <trans-unit id="b4fbad6881a6502973f74dc6aab223ae74eaff93" translate="yes" xml:space="preserve">
          <source>FILEPATH_MAX_SIZE</source>
          <target state="translated">FILEPATH_MAX_SIZE</target>
        </trans-unit>
        <trans-unit id="212fe1c02214066f8d99afc4c17fc99bec1520c1" translate="yes" xml:space="preserve">
          <source>FIXME: We are avoiding to use alias because a bug on thor that make this method public and add it to the task list.</source>
          <target state="translated">FIXME :이 메소드를 공개하고 태스크 목록에 추가하는 버그가 있으므로 별칭 사용을 피하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="4499ff78a47f7731554d3c1afe1035caa145a9f9" translate="yes" xml:space="preserve">
          <source>FOREIGN_KEY_VIOLATION</source>
          <target state="translated">FOREIGN_KEY_VIOLATION</target>
        </trans-unit>
        <trans-unit id="f7c27219f0337c970173ee182b4949d4cbf0a8e6" translate="yes" xml:space="preserve">
          <source>FORMATTED_GEMS_PATTERN</source>
          <target state="translated">FORMATTED_GEMS_PATTERN</target>
        </trans-unit>
        <trans-unit id="6921bf34079ef3387900e70753234f95f564ca4a" translate="yes" xml:space="preserve">
          <source>FROZEN_EMPTY_ARRAY</source>
          <target state="translated">FROZEN_EMPTY_ARRAY</target>
        </trans-unit>
        <trans-unit id="56c182896fc771396384cbf42a7e1f9abfd081d7" translate="yes" xml:space="preserve">
          <source>FROZEN_EMPTY_HASH</source>
          <target state="translated">FROZEN_EMPTY_HASH</target>
        </trans-unit>
        <trans-unit id="a812cd4fcfd760f2bf9199f801f6cc43f0c7c96f" translate="yes" xml:space="preserve">
          <source>Failed: An exception was raised during the specific mailbox's execution of the &lt;code&gt;#process&lt;/code&gt; method.</source>
          <target state="translated">실패 : 특정 사서함이 &lt;code&gt;#process&lt;/code&gt; 메서드를 실행하는 동안 예외가 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="d790d7b87bd35629e0110833db400f03c9ba8086" translate="yes" xml:space="preserve">
          <source>Failing to close the response stream will leave the corresponding socket open forever. Make sure to call &lt;code&gt;close&lt;/code&gt; whenever you are using a response stream.</source>
          <target state="translated">응답 스트림을 닫지 않으면 해당 소켓이 영원히 열린 상태로 유지됩니다. 응답 스트림을 사용할 때마다 &lt;code&gt;close&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e4b3d1af3371878c3957e5abeca4a4081663faf" translate="yes" xml:space="preserve">
          <source>Failsafe: Raises errors.</source>
          <target state="translated">비상 안전 : 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="0630b13c6ea5636c6136a1e9aa2cb3a9cda63f8f" translate="yes" xml:space="preserve">
          <source>Fallbacks allow your generators to have a single responsibility, increasing code reuse and reducing the amount of duplication.</source>
          <target state="translated">폴백을 사용하면 생성기에서 단일 책임을 수행 할 수 있으므로 코드 재사용이 증가하고 복제 양이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="46b6f4438b61c10c203ae6dcd53eb7281cbea3cc" translate="yes" xml:space="preserve">
          <source>False for method objects; true otherwise.</source>
          <target state="translated">메소드 객체에 대한 거짓; 그렇지 않으면 true입니다.</target>
        </trans-unit>
        <trans-unit id="0d9c2b81e82b07d10af56e40a76d70f4b979549b" translate="yes" xml:space="preserve">
          <source>FalseClass</source>
          <target state="translated">FalseClass</target>
        </trans-unit>
        <trans-unit id="94c2bca4ad98d8339598ea11d52434ed0523e683" translate="yes" xml:space="preserve">
          <source>Fault tolerant. If the Redis server is unavailable, no exceptions are raised. &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; fetches are all misses and writes are dropped.</source>
          <target state="translated">내결함성. Redis 서버를 사용할 수없는 경우 예외가 발생하지 않습니다. &lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt; 가져 오기는 모두 누락이며 쓰기가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="5ceb155dd5ad13b2e8d1bb7fc25e250819973096" translate="yes" xml:space="preserve">
          <source>Fault tolerant. If the Redis server is unavailable, no exceptions are raised. &lt;a href=&quot;../cache&quot;&gt;Cache&lt;/a&gt; fetches are all misses and writes are dropped.</source>
          <target state="translated">내결함성. Redis 서버를 사용할 수 없으면 예외가 발생하지 않습니다. &lt;a href=&quot;../cache&quot;&gt;캐시&lt;/a&gt; 페치는 모두 누락되어 쓰기가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">Feedback</target>
        </trans-unit>
        <trans-unit id="c44774addc42c860b569f9d0d957fb465f368942" translate="yes" xml:space="preserve">
          <source>Fetches data from the cache, using the given key. If there is data in the cache with the given key, then that data is returned.</source>
          <target state="translated">주어진 키를 사용하여 캐시에서 데이터를 가져옵니다. 주어진 키를 가진 캐시에 데이터가 있으면 해당 데이터가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7faa87879e6774befdaef35603952bf2f52ff567" translate="yes" xml:space="preserve">
          <source>Fetches data from the cache, using the given keys. If there is data in the cache with the given keys, then that data is returned. Otherwise, the supplied block is called for each key for which there was no data, and the result will be written to the cache and returned. Therefore, you need to pass a block that returns the data to be written to the cache. If you do not want to write the cache when the cache is not found, use &lt;a href=&quot;store#method-i-read_multi&quot;&gt;&lt;code&gt;read_multi&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 키를 사용하여 캐시에서 데이터를 가져옵니다. 지정된 키가있는 데이터가 캐시에 있으면 해당 데이터가 반환됩니다. 그렇지 않으면 데이터가없는 각 키에 대해 제공된 블록이 호출되고 결과가 캐시에 기록되고 반환됩니다. 따라서 캐시에 쓸 데이터를 반환하는 블록을 전달해야합니다. 캐시를 찾을 수 없을 때 캐시를 쓰지 않으려면 &lt;a href=&quot;store#method-i-read_multi&quot;&gt; &lt;code&gt;read_multi&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f56b37f210e04d2f886a8b20294a91a0c36ce6ad" translate="yes" xml:space="preserve">
          <source>Fetches data from the cache, using the given keys. If there is data in the cache with the given keys, then that data is returned. Otherwise, the supplied block is called for each key for which there was no data, and the result will be written to the cache and returned. Therefore, you need to pass a block that returns the data to be written to the cache. If you do not want to write the cache when the cache is not found, use &lt;a href=&quot;store#method-i-read_multi&quot;&gt;read_multi&lt;/a&gt;.</source>
          <target state="translated">주어진 키를 사용하여 캐시에서 데이터를 가져옵니다. 주어진 키를 가진 캐시에 데이터가 있으면 해당 데이터가 반환됩니다. 그렇지 않으면, 데이터가없는 각 키에 대해 제공된 블록이 호출되고 결과는 캐시에 기록되고 리턴됩니다. 따라서 캐시에 쓸 데이터를 반환하는 블록을 전달해야합니다. 캐시를 찾을 수 없을 때 캐시를 쓰지 않으려면 &lt;a href=&quot;store#method-i-read_multi&quot;&gt;read_multi를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="87da8b91604262ad6d91e4f90e37c53120c65327" translate="yes" xml:space="preserve">
          <source>Fields can be symbols or strings. Values can be single values, arrays, or ranges.</source>
          <target state="translated">필드는 기호 또는 문자열 일 수 있습니다. 값은 단일 값, 배열 또는 범위 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8d910abe09fefcd525189ff56b85ac0cd235c45" translate="yes" xml:space="preserve">
          <source>Fields can only appear once in email headers while other fields such as &lt;code&gt;X-Anything&lt;/code&gt; can appear multiple times.</source>
          <target state="translated">전자 메일 헤더에는 필드가 한 번만 나타날 수 있지만 &lt;code&gt;X-Anything&lt;/code&gt; 과 같은 다른 필드 는 여러 번 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="95a9dfcd4100cffd3bbfdd8cd63e61e7ac690c07" translate="yes" xml:space="preserve">
          <source>File Downloads</source>
          <target state="translated">파일 다운로드</target>
        </trans-unit>
        <trans-unit id="c09ab9ea91985578fea6798c7cff8723d2b9441b" translate="yes" xml:space="preserve">
          <source>File Uploads</source>
          <target state="translated">파일 업로드</target>
        </trans-unit>
        <trans-unit id="1c2c00423fba9ab231586e428829389b766aad71" translate="yes" xml:space="preserve">
          <source>File or blob exists or not</source>
          <target state="translated">파일 또는 얼룩이 존재하는지 여부</target>
        </trans-unit>
        <trans-unit id="0ab4ebd63f13c58c61f8bd12d7686f9c91d0af5e" translate="yes" xml:space="preserve">
          <source>File/Directory</source>
          <target state="translated">File/Directory</target>
        </trans-unit>
        <trans-unit id="a096bca18609c324b5d895acd7b35f853e8aa39e" translate="yes" xml:space="preserve">
          <source>File/Folder</source>
          <target state="translated">File/Folder</target>
        </trans-unit>
        <trans-unit id="0ac6dbee4d8f540761408e72685ba06c2b71eae5" translate="yes" xml:space="preserve">
          <source>FileHandler</source>
          <target state="translated">FileHandler</target>
        </trans-unit>
        <trans-unit id="843d23f30b0e1bad8d210261eb4898e2a5ad1980" translate="yes" xml:space="preserve">
          <source>FileHandler#call</source>
          <target state="translated">FileHandler#call</target>
        </trans-unit>
        <trans-unit id="505865877caaff7ebaeded01de3d0ed28746e827" translate="yes" xml:space="preserve">
          <source>FileHandler#match?</source>
          <target state="translated">FileHandler#match?</target>
        </trans-unit>
        <trans-unit id="66cc01abca04b24b98f50188566d1f5714bb56cb" translate="yes" xml:space="preserve">
          <source>FileHandler#serve</source>
          <target state="translated">FileHandler#serve</target>
        </trans-unit>
        <trans-unit id="bcd90c2de2ada508aebed682e3dff23934c79551" translate="yes" xml:space="preserve">
          <source>FileHandler::new</source>
          <target state="translated">FileHandler::new</target>
        </trans-unit>
        <trans-unit id="e6709799f8af742671a570e2fa5b4572a7407d6a" translate="yes" xml:space="preserve">
          <source>FileSystemResolver</source>
          <target state="translated">FileSystemResolver</target>
        </trans-unit>
        <trans-unit id="2d545e8154aab736060f5e6f5d5dea2d84841bb8" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#==</source>
          <target state="translated">FileSystemResolver#==</target>
        </trans-unit>
        <trans-unit id="6dc8770eca1e87a288321fdeaba2a529a8a89c5a" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#eql?</source>
          <target state="translated">FileSystemResolver#eql?</target>
        </trans-unit>
        <trans-unit id="7bfdf6c2e4438489ae387e3d03fb4bf3b045831c" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#path</source>
          <target state="translated">FileSystemResolver#path</target>
        </trans-unit>
        <trans-unit id="9b890d2b480b436489d9faafe444637ffa8fcf11" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#to_path</source>
          <target state="translated">FileSystemResolver#to_path</target>
        </trans-unit>
        <trans-unit id="98a42bb1006433052c6bfcfdaf757c145714ec5e" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#to_s</source>
          <target state="translated">FileSystemResolver#to_s</target>
        </trans-unit>
        <trans-unit id="6072fc412d41aed240094921437ffed862d5a730" translate="yes" xml:space="preserve">
          <source>FileSystemResolver::new</source>
          <target state="translated">FileSystemResolver::new</target>
        </trans-unit>
        <trans-unit id="dc862eb2b99e73bfd42412e418cbade1639d3ec2" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker</source>
          <target state="translated">FileUpdateChecker</target>
        </trans-unit>
        <trans-unit id="f2e1c392711c7dae7f60483670f69ce5ad5d172f" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker#execute</source>
          <target state="translated">FileUpdateChecker#execute</target>
        </trans-unit>
        <trans-unit id="dd88a118e92e658c25fca050d8629be7325f8b3f" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker#execute_if_updated</source>
          <target state="translated">FileUpdateChecker#execute_if_updated</target>
        </trans-unit>
        <trans-unit id="9cb0490cf1d3845c161e299cf76d0c4751436e0e" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker#updated?</source>
          <target state="translated">FileUpdateChecker#updated?</target>
        </trans-unit>
        <trans-unit id="040b287a62de3f3a857cd258b5b442c468af1083" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker::new</source>
          <target state="translated">FileUpdateChecker::new</target>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="fd38857d242d84c9b3e72ab8a5c3ca5bd1779bca" translate="yes" xml:space="preserve">
          <source>Filename#&amp;lt;=&amp;gt;</source>
          <target state="translated">Filename#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0fedeadb8d48b202c23e40399d266dc504eed29c" translate="yes" xml:space="preserve">
          <source>Filename#as_json</source>
          <target state="translated">Filename#as_json</target>
        </trans-unit>
        <trans-unit id="4c7e73304a01eb0288ffec09fb235d2c52896f90" translate="yes" xml:space="preserve">
          <source>Filename#base</source>
          <target state="translated">Filename#base</target>
        </trans-unit>
        <trans-unit id="f6785722507c0f627c2a182e45b35d36ace3e28f" translate="yes" xml:space="preserve">
          <source>Filename#extension</source>
          <target state="translated">Filename#extension</target>
        </trans-unit>
        <trans-unit id="9063ce6395ed39fc24d0cc308731acbbf8e6e6d5" translate="yes" xml:space="preserve">
          <source>Filename#extension_with_delimiter</source>
          <target state="translated">Filename#extension_with_delimiter</target>
        </trans-unit>
        <trans-unit id="d109deefe0ba0943de0aaff15204472049c0d33e" translate="yes" xml:space="preserve">
          <source>Filename#extension_without_delimiter</source>
          <target state="translated">Filename#extension_without_delimiter</target>
        </trans-unit>
        <trans-unit id="750e6669da69c9a36000d59408b9eab28fa022e2" translate="yes" xml:space="preserve">
          <source>Filename#sanitized</source>
          <target state="translated">Filename#sanitized</target>
        </trans-unit>
        <trans-unit id="47ccb2013ef431f110dc17946532bd26b9d72f55" translate="yes" xml:space="preserve">
          <source>Filename#to_json</source>
          <target state="translated">Filename#to_json</target>
        </trans-unit>
        <trans-unit id="083d553a1e09b72b176a0a03c127e29ca22911a5" translate="yes" xml:space="preserve">
          <source>Filename#to_s</source>
          <target state="translated">Filename#to_s</target>
        </trans-unit>
        <trans-unit id="e25e4318610c636210e481224b00eaba26db2d15" translate="yes" xml:space="preserve">
          <source>Filename::new</source>
          <target state="translated">Filename::new</target>
        </trans-unit>
        <trans-unit id="491d964bf519b4f588bc37ecbe5f26c90630e684" translate="yes" xml:space="preserve">
          <source>Filename::wrap</source>
          <target state="translated">Filename::wrap</target>
        </trans-unit>
        <trans-unit id="56775c15a18cc2c09aac7e08966401bd4e5ab388" translate="yes" xml:space="preserve">
          <source>Files are served from the primary service.</source>
          <target state="translated">파일은 기본 서비스에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9416aca12d73acfba38531e63e62b58118463d79" translate="yes" xml:space="preserve">
          <source>Files defining constants to be autoloaded should never be &lt;code&gt;require&lt;/code&gt;d:</source>
          <target state="translated">자동로드 할 상수를 정의하는 파일 &lt;code&gt;require&lt;/code&gt; d 가 필요 하지 않아야 합니다 .</target>
        </trans-unit>
        <trans-unit id="fc51867b9e499b3a5642e0eea0c1b39149abfdc5" translate="yes" xml:space="preserve">
          <source>Files without a template handler in their extension will be rendered using the raw handler. Previously Rails would render files using the ERB template handler.</source>
          <target state="translated">확장명에 템플릿 핸들러가없는 파일은 원시 핸들러를 사용하여 렌더링됩니다. 이전에는 Rails가 ERB 템플릿 핸들러를 사용하여 파일을 렌더링했습니다.</target>
        </trans-unit>
        <trans-unit id="16803118d16ec89a451d4c2d71a4dd329c1a8c8c" translate="yes" xml:space="preserve">
          <source>Filter that halted the action</source>
          <target state="translated">동작을 정지시킨 필터</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="f31c728f71abe5347f705c917c7ed4d7dd78c919" translate="yes" xml:space="preserve">
          <source>Filters are inherited, so if you set a filter on &lt;code&gt;ApplicationController&lt;/code&gt;, it will be run on every controller in your application.</source>
          <target state="translated">필터는 상속되므로 &lt;code&gt;ApplicationController&lt;/code&gt; 에서 필터를 설정하면 애플리케이션의 모든 컨트롤러에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="15fab00f08ea5675ac3cad78e778d86715726a86" translate="yes" xml:space="preserve">
          <source>Filters are methods that are run &quot;before&quot;, &quot;after&quot; or &quot;around&quot; a controller action.</source>
          <target state="translated">필터는 컨트롤러 작업 &quot;전&quot;, &quot;후&quot;또는 &quot;주변&quot;에서 실행되는 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="7aff3253798f95ad628c64f14a3cfff692009b0b" translate="yes" xml:space="preserve">
          <source>Filters are used to modify lines of data, while silencers are used to remove lines entirely. The typical filter use case is to remove lengthy path information from the start of each line, and view file paths relevant to the app directory instead of the file system root. The typical silencer use case is to exclude the output of a noisy library from the backtrace, so that you can focus on the rest.</source>
          <target state="translated">필터는 데이터 라인을 수정하는 데 사용되고, 소음기는 라인을 완전히 제거하는 데 사용됩니다. 일반적인 필터 사용 사례는 각 줄의 시작 부분에서 긴 경로 정보를 제거하고 파일 시스템 루트 대신 앱 디렉토리와 관련된 파일 경로를 보는 것입니다. 일반적인 소음기 사용 사례는 잡음이있는 라이브러리의 출력을 역 추적에서 제외하여 나머지에 집중할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="26f77a0d2e8cb3f6cb688876f1e59471a3757c58" translate="yes" xml:space="preserve">
          <source>Filters can be specified with a block or a symbol to a method in the mailer class similar to controllers.</source>
          <target state="translated">컨트롤러와 유사한 메일러 클래스의 메소드에 블록 또는 기호로 필터를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f3a9f32d7621c6c414177d52d0e336cdf8343bb" translate="yes" xml:space="preserve">
          <source>Finally we can assert that our response was successful and our new article is readable on the page.</source>
          <target state="translated">마지막으로 응답이 성공적이며 페이지에서 새 기사를 읽을 수 있다고 주장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb42236d5e59c4075f8b7f2a9b799c55e2ae1c34" translate="yes" xml:space="preserve">
          <source>Finally, Action Mailer also supports passing &lt;code&gt;Proc&lt;/code&gt; and &lt;code&gt;Lambda&lt;/code&gt; objects into the default hash, so you can define methods that evaluate as the message is being generated:</source>
          <target state="translated">마지막으로 Action Mailer는 &lt;code&gt;Proc&lt;/code&gt; 및 &lt;code&gt;Lambda&lt;/code&gt; 객체를 기본 해시에 전달하는 기능도 지원 하므로 메시지 생성시 평가되는 메소드를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f575c7f442b7d2f89f790d1e32ae5186fcde00f9" translate="yes" xml:space="preserve">
          <source>Finally, add a 'Destroy' link to your &lt;code&gt;index&lt;/code&gt; action template (&lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;) to wrap everything together.</source>
          <target state="translated">마지막으로 &lt;code&gt;index&lt;/code&gt; 작업 템플릿 ( &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; )에 '파괴'링크를 추가하여 모든 것을 하나로 묶으십시오.</target>
        </trans-unit>
        <trans-unit id="03cade7255b9c5fd46cf7165b884577c99295897" translate="yes" xml:space="preserve">
          <source>Finally, add a link to the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; template to go back to the &lt;code&gt;index&lt;/code&gt; action as well, so that people who are viewing a single article can go back and view the whole list again:</source>
          <target state="translated">마지막으로 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 템플릿 에 대한 링크를 추가 하여 &lt;code&gt;index&lt;/code&gt; 작업으로 돌아가 단일 기사를 보는 사람들이 다시 전체 목록을 볼 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="139c973215dad87a3d5bd543aa0d2247a5932895" translate="yes" xml:space="preserve">
          <source>Finally, add the configuration in the relevant &lt;code&gt;config/environments/*.rb&lt;/code&gt; file:</source>
          <target state="translated">마지막으로 관련 &lt;code&gt;config/environments/*.rb&lt;/code&gt; 파일에 구성을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="b600f274b2b076b0d1f21dc2618434bf7de84584" translate="yes" xml:space="preserve">
          <source>Finally, all the above styles can be mixed together, and the &lt;code&gt;helper&lt;/code&gt; method can be invoked with a mix of &lt;code&gt;symbols&lt;/code&gt;, &lt;code&gt;strings&lt;/code&gt;, &lt;code&gt;modules&lt;/code&gt; and blocks.</source>
          <target state="translated">마지막으로 위의 모든 스타일을 함께 혼합 할 수 있으며, &lt;code&gt;symbols&lt;/code&gt; , &lt;code&gt;strings&lt;/code&gt; , &lt;code&gt;modules&lt;/code&gt; 및 블록을 혼합 하여 &lt;code&gt;helper&lt;/code&gt; 메서드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce8b02ce620cfd37bbb413ccdbc3e1a4d65357b5" translate="yes" xml:space="preserve">
          <source>Finally, an object which responds to call can be supplied to redirect, allowing you to reuse common redirect routes. The call method must accept two arguments, params and request, and return a string.</source>
          <target state="translated">마지막으로 통화에 응답하는 객체를 제공하여 리디렉션 할 수 있으므로 일반적인 리디렉션 경로를 재사용 할 수 있습니다. 호출 메소드는 params와 request라는 두 개의 인수를 허용하고 문자열을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="b33dc64ae26f912f4c31d8e5c4c7e6e6cf970513" translate="yes" xml:space="preserve">
          <source>Finally, assuming we have two event instances, one which has a time and one which does not, the output might look like this:</source>
          <target state="translated">마지막으로 두 개의 이벤트 인스턴스가 있다고 가정하면 하나는 시간이 있고 다른 하나는 시간이 없습니다. 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="adaf661621fea24a902486be28e925bee86aae2e" translate="yes" xml:space="preserve">
          <source>Finally, create the &lt;code&gt;core_ext.rb&lt;/code&gt; file and add the &lt;code&gt;to_squawk&lt;/code&gt; method:</source>
          <target state="translated">마지막으로 &lt;code&gt;core_ext.rb&lt;/code&gt; 파일을 생성 하고 &lt;code&gt;to_squawk&lt;/code&gt; 메소드를 추가하십시오 :</target>
        </trans-unit>
        <trans-unit id="829c3bc35737a22372a8de554947328a06e81184" translate="yes" xml:space="preserve">
          <source>Finally, engines would not have been possible without the work of James Adam, Piotr Sarnacki, the Rails Core Team, and a number of other people. If you ever meet them, don't forget to say thanks!</source>
          <target state="translated">마지막으로 James Adam, Piotr Sarnacki, Rails Core Team 및 기타 여러 사람들의 노력 없이는 엔진을 사용할 수 없었습니다. 당신이 그들을 만나면, 감사를 말하는 것을 잊지 마십시오!</target>
        </trans-unit>
        <trans-unit id="492a2b83bf4fb9e53ae20e9ed5978d21658bddcc" translate="yes" xml:space="preserve">
          <source>Finally, if a block is provided, both &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; will yield the new object to that block for initialization:</source>
          <target state="translated">마지막으로 블록이 제공되면 &lt;code&gt;create&lt;/code&gt; 와 &lt;code&gt;new&lt;/code&gt; 모두 초기화를 위해 해당 블록에 새 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="68a0dc62c08212c07ce612fb67c95922debebbf3" translate="yes" xml:space="preserve">
          <source>Finally, if we DON'T find a template AND the request isn't a browser page load, then we implicitly respond with &lt;code&gt;204 No
Content&lt;/code&gt;.</source>
          <target state="translated">마지막으로 템플릿을 찾지 못하고 요청이 브라우저 페이지로드가 아닌 경우 &lt;code&gt;204 No Content&lt;/code&gt; 암시 적으로 응답 합니다.</target>
        </trans-unit>
        <trans-unit id="3a7ed780accc2a01e9ed5109abf1108d3b018218" translate="yes" xml:space="preserve">
          <source>Finally, if you want to generate a URL to an engine's route using &lt;code&gt;polymorphic_url&lt;/code&gt;, you also need to pass the engine helper. Let's say that you want to create a form pointing to one of the engine's routes. All you need to do is pass the helper as the first element in array with attributes for URL:</source>
          <target state="translated">마지막으로 &lt;code&gt;polymorphic_url&lt;/code&gt; 을 사용하여 엔진 경로에 대한 URL을 생성 하려면 엔진 헬퍼도 전달해야합니다. 엔진의 경로 중 하나를 가리키는 양식을 만들고 싶다고 가정 해 봅시다. URL 속성이있는 배열의 첫 번째 요소로 도우미를 전달하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4c74e5924ea0a0e12578e9009f61ab0f0864a494" translate="yes" xml:space="preserve">
          <source>Finally, in order to use the read-only replica in your application you'll need to activate the middleware for automatic switching.</source>
          <target state="translated">마지막으로, 응용 프로그램에서 읽기 전용 복제본을 사용하려면 자동 전환을 위해 미들웨어를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="374ad5e141477535b828a2568fde5eedbbff598e" translate="yes" xml:space="preserve">
          <source>Finally, inside &lt;code&gt;app/controllers/application_controller.rb&lt;/code&gt;, instead of:</source>
          <target state="translated">마지막으로 &lt;code&gt;app/controllers/application_controller.rb&lt;/code&gt; 에서 다음 대신</target>
        </trans-unit>
        <trans-unit id="8b42f2f63de029368a9c5a8e74cb6a7218001e7a" translate="yes" xml:space="preserve">
          <source>Finally, it's also possible to explicitly map the relation between attribute and database integer with a hash:</source>
          <target state="translated">마지막으로, 속성과 데이터베이스 정수 사이의 관계를 해시로 명시 적으로 매핑 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="174eb5882f8cdb973e07ead01041e26f346678b5" translate="yes" xml:space="preserve">
          <source>Finally, routes will also be isolated within the engine. This is one of the most important parts about namespacing, and is discussed later in the &lt;a href=&quot;#routes&quot;&gt;Routes&lt;/a&gt; section of this guide.</source>
          <target state="translated">마지막으로 경로는 엔진 내에서 격리됩니다. 이것은 네임 스페이스에있어 가장 중요한 부분 중 하나 &lt;a href=&quot;#routes&quot;&gt;이며이&lt;/a&gt; 가이드 의 경로 섹션 에서 나중에 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="c71d62af8b62828279c0719617957707da219971" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;Path&lt;/code&gt; object also provides a few helpers:</source>
          <target state="translated">마지막으로 &lt;code&gt;Path&lt;/code&gt; 객체는 몇 가지 도우미를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b943e31a4b051dd3dac93832ffdab45484a7a906" translate="yes" xml:space="preserve">
          <source>Finally, the assets for this resource are generated in one file: &lt;code&gt;app/assets/stylesheets/blorgh/articles.css&lt;/code&gt;. You'll see how to use these a little later.</source>
          <target state="translated">마지막으로이 자원의 자산은 하나의 파일 &lt;code&gt;app/assets/stylesheets/blorgh/articles.css&lt;/code&gt; 에 생성 됩니다. 이것들을 조금 나중에 사용하는 방법을 보게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="7b655c7bb20789d12d470b9969c9c9dd4e90e2cc" translate="yes" xml:space="preserve">
          <source>Finally, the author's name should be displayed on the article's page. Add this code above the &quot;Title&quot; output inside &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt;:</source>
          <target state="translated">마지막으로 저자의 이름이 기사 페이지에 표시되어야합니다. &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; 내의 &quot;Title&quot;출력 위에이 코드를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a93a8845cc26c7d2b8707a1bef04d921fedc88e" translate="yes" xml:space="preserve">
          <source>Finally, the block can take block arguments, which can be passed in by &lt;code&gt;yield&lt;/code&gt;:</source>
          <target state="translated">마지막으로, 블록은 블록 인수를 취할 수 있으며 &lt;code&gt;yield&lt;/code&gt; 는 다음과 같이 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d07638cfce2083b47d7c947c5522bb669a962b53" translate="yes" xml:space="preserve">
          <source>Finally, the options &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt;, &lt;code&gt;:on&lt;/code&gt;, &lt;code&gt;:allow_blank&lt;/code&gt;, &lt;code&gt;:allow_nil&lt;/code&gt;, &lt;code&gt;:strict&lt;/code&gt; and &lt;code&gt;:message&lt;/code&gt; can be given to one specific validator, as a hash:</source>
          <target state="translated">마지막으로 &lt;code&gt;:if&lt;/code&gt; , &lt;code&gt;:unless&lt;/code&gt; , &lt;code&gt;:on&lt;/code&gt; , &lt;code&gt;:allow_blank&lt;/code&gt; , &lt;code&gt;:allow_nil&lt;/code&gt; , &lt;code&gt;:strict&lt;/code&gt; 및 &lt;code&gt;:message&lt;/code&gt; 옵션 은 하나의 특정 유효성 검사기에 해시로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c081c91333423a3af77961aa522c91a7aea6b82" translate="yes" xml:space="preserve">
          <source>Finally, this method supports a &lt;code&gt;:default&lt;/code&gt; option, which selects a default &lt;a href=&quot;../../activesupport/timezone&quot;&gt;&lt;code&gt;ActiveSupport::TimeZone&lt;/code&gt;&lt;/a&gt; if the object's time zone is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">마지막으로이 메소드는 객체의 시간대가 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본 &lt;a href=&quot;../../activesupport/timezone&quot;&gt; &lt;code&gt;ActiveSupport::TimeZone&lt;/code&gt; &lt;/a&gt; 을 선택 하는 &lt;code&gt;:default&lt;/code&gt; 옵션을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="d9705ba4378bc87609fc055a72d8a74cfddebd70" translate="yes" xml:space="preserve">
          <source>Finally, this method supports a &lt;code&gt;:default&lt;/code&gt; option, which selects a default &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport::TimeZone&lt;/a&gt; if the object's time zone is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">마지막으로,이 메소드는 &lt;code&gt;:default&lt;/code&gt; 옵션을 지원합니다 . 이 옵션 은 객체의 시간대가 &lt;code&gt;nil&lt;/code&gt; 인 경우 기본 &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport :: TimeZone&lt;/a&gt; 을 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="478e157bff161ff6fc0168e6bf5c5951fc77bff8" translate="yes" xml:space="preserve">
          <source>Finally, we add a tag to the connection-specific logger with the name of the current user to easily distinguish their messages in the log.</source>
          <target state="translated">마지막으로 현재 사용자 이름으로 연결 별 로거에 태그를 추가하여 로그에서 메시지를 쉽게 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb4ea78af5efba91db3b55abaa0a7ef9c80c910c" translate="yes" xml:space="preserve">
          <source>Finally, we arrive at the &quot;D&quot; (Delete) of CRUD. Deleting a resource is a simpler process than creating or updating. It only requires a route and a controller action. And our resourceful routing (&lt;code&gt;resources :articles&lt;/code&gt;) already provides the route, which maps &lt;code&gt;DELETE /articles/:id&lt;/code&gt; requests to the &lt;code&gt;destroy&lt;/code&gt; action of &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">마지막으로 CRUD의 &quot;D&quot;(삭제)에 도달합니다. 리소스 삭제는 생성 또는 업데이트보다 더 간단한 프로세스입니다. 경로와 컨트롤러 작업 만 필요합니다. 그리고 우리의 리소스가 풍부한 라우팅 ( &lt;code&gt;resources :articles&lt;/code&gt; )은 이미 &lt;code&gt;DELETE /articles/:id&lt;/code&gt; 요청을 &lt;code&gt;ArticlesController&lt;/code&gt; 의 &lt;code&gt;destroy&lt;/code&gt; 작업에 매핑하는 경로를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="bd476f1476dca89e182815a527c0f96c315ac2eb" translate="yes" xml:space="preserve">
          <source>Finally, we want to show a link to the &lt;code&gt;edit&lt;/code&gt; action in the list of all the articles, so let's add that now to &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; to make it appear next to the &quot;Show&quot; link:</source>
          <target state="translated">마지막으로 모든 기사 목록에 &lt;code&gt;edit&lt;/code&gt; 작업에 대한 링크를 표시하려고 합니다. 이제 &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; 에 추가하여 &quot;표시&quot;링크 옆에 표시되도록하겠습니다.</target>
        </trans-unit>
        <trans-unit id="1f0fe56a52063f1c32e1f0c72e84d01aba01b4e6" translate="yes" xml:space="preserve">
          <source>Finally, you can also pass &lt;code&gt;:before&lt;/code&gt; and &lt;code&gt;:after&lt;/code&gt; as options to &lt;code&gt;initializer&lt;/code&gt;, in case you want to couple it with a specific step in the initialization process.</source>
          <target state="translated">마지막으로, 초기화 프로세스의 특정 단계와 옵션 을 결합하려는 경우 &lt;code&gt;:before&lt;/code&gt; 및 &lt;code&gt;:after&lt;/code&gt; 를 &lt;code&gt;initializer&lt;/code&gt; 에 옵션으로 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4666eb65f50e1cd0e387ae6a5867ca372157f9df" translate="yes" xml:space="preserve">
          <source>Finally, you can indicate specific attributes of a model for which time zone conversion should not applied, for instance by setting:</source>
          <target state="translated">마지막으로 다음과 같이 시간대 변환을 적용하지 않아야하는 모델의 특정 속성을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1e3c96698852416cd20a4df2f6bdb998567ffdf" translate="yes" xml:space="preserve">
          <source>Finally, you can pass true as the third argument to silence all log activity (other than the timing information) from inside the block. This is great for boiling down a noisy block to just a single statement that produces one log line:</source>
          <target state="translated">마지막으로 블록 내부에서 모든 로그 활동 (타이밍 정보 제외)을 침묵시키는 세 번째 인수로 true를 전달할 수 있습니다. 이것은 하나의 로그 라인을 생성하는 단일 명령문으로 시끄러운 블록을 비등시키는 데 좋습니다.</target>
        </trans-unit>
        <trans-unit id="23b1361eebca5b7c2c6243a16f54794b8466f461" translate="yes" xml:space="preserve">
          <source>Finally, you'll need Node.js and Yarn installed to manage your application's JavaScript.</source>
          <target state="translated">마지막으로 애플리케이션의 JavaScript를 관리하려면 Node.js와 Yarn이 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9fcff6ca0851ddc76aecc6177ef02fd2fcaea1a9" translate="yes" xml:space="preserve">
          <source>Find a Memory Leak</source>
          <target state="translated">메모리 누수 찾기</target>
        </trans-unit>
        <trans-unit id="7ba6665f9014534ac6c73918c508bb647afbbafe" translate="yes" xml:space="preserve">
          <source>Find a mailer preview by its underscored class name.</source>
          <target state="translated">밑줄로 표시된 클래스 이름으로 메일러 미리보기를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="3a460275e8fd50d61838b4f36297f4652376fbb0" translate="yes" xml:space="preserve">
          <source>Find by id - This can either be a specific id (1), a list of ids (1, 5, 6), or an array of ids ([5, 6, 10]). If one or more records cannot be found for the requested ids, then &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt; will be raised. If the primary key is an integer, find by id coerces its arguments by using &lt;code&gt;to_i&lt;/code&gt;.</source>
          <target state="translated">ID로 찾기-특정 ID (1), ID 목록 (1, 5, 6) 또는 ID 배열 ([5, 6, 10]) 일 수 있습니다. 요청 된 ID에 대해 하나 이상의 레코드를 찾을 수없는 경우 &lt;a href=&quot;recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt; 가 발생합니다. 기본 키가 정수인 경우 find by id는 &lt;code&gt;to_i&lt;/code&gt; 를 사용하여 인수를 강제합니다 .</target>
        </trans-unit>
        <trans-unit id="9c0453bf999e0278a601f80a5bbc54c2474e916d" translate="yes" xml:space="preserve">
          <source>Find by id - This can either be a specific id (1), a list of ids (1, 5, 6), or an array of ids ([5, 6, 10]). If one or more records cannot be found for the requested ids, then &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; will be raised. If the primary key is an integer, find by id coerces its arguments by using &lt;code&gt;to_i&lt;/code&gt;.</source>
          <target state="translated">id로 찾기-특정 id (1), id 목록 (1, 5, 6) 또는 id 배열 ([5, 6, 10]) 일 수 있습니다. 요청한 ID에 대해 하나 이상의 레코드를 찾을 수 없으면 &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt; 가 발생합니다. 기본 키가 정수인 경우, id로 찾기는 &lt;code&gt;to_i&lt;/code&gt; 를 사용하여 인수를 강제합니다 .</target>
        </trans-unit>
        <trans-unit id="5ce7e654217389659a73282d75bb4e56f82f26dd" translate="yes" xml:space="preserve">
          <source>Find or Build a New Object</source>
          <target state="translated">새 객체 찾기 또는 빌드</target>
        </trans-unit>
        <trans-unit id="98f88643ed770b3cc049b1217652794cf03ff8ff" translate="yes" xml:space="preserve">
          <source>Find the fifth record. If no order is defined it will order by primary key.</source>
          <target state="translated">다섯 번째 레코드를 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="091b73d8ba451d291a884bf2b22f6909b540e0b6" translate="yes" xml:space="preserve">
          <source>Find the first record (or first N records if a parameter is supplied). If no order is defined it will order by primary key.</source>
          <target state="translated">첫 번째 레코드 (또는 매개 변수가 제공된 경우 첫 번째 N 레코드)를 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="491520c3542cd99259336effa1911b49dc2ff469" translate="yes" xml:space="preserve">
          <source>Find the forty-second record. Also known as accessing &amp;ldquo;the reddit&amp;rdquo;. If no order is defined it will order by primary key.</source>
          <target state="translated">42 번째 레코드를 찾으십시오. &quot;레딧&quot;에 액세스하는 것으로도 알려져 있습니다. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="c16c67b7f03eb3f75212f27b0f678b039374ad05" translate="yes" xml:space="preserve">
          <source>Find the fourth record. If no order is defined it will order by primary key.</source>
          <target state="translated">네 번째 레코드를 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="01fb5f5bc10b256e6399b2c29d9bd94e6249b6ec" translate="yes" xml:space="preserve">
          <source>Find the installation instructions at the &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js website&lt;/a&gt; and verify it's installed correctly with the following command:</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js 웹 사이트&lt;/a&gt; 에서 설치 지침을 찾아 다음 명령을 사용하여 올바르게 설치되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="28a525677ee48b8edcecfc0abd5eae8d21669011" translate="yes" xml:space="preserve">
          <source>Find the last record (or last N records if a parameter is supplied). If no order is defined it will order by primary key.</source>
          <target state="translated">마지막 레코드 (또는 매개 변수가 제공된 경우 마지막 N 레코드)를 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="e6539305627fc6b9587a7ac3f29111baf283a287" translate="yes" xml:space="preserve">
          <source>Find the second record. If no order is defined it will order by primary key.</source>
          <target state="translated">두 번째 레코드를 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="f56b5e7d6cfa22ee40237bb41195a40b813cb901" translate="yes" xml:space="preserve">
          <source>Find the second-to-last record. If no order is defined it will order by primary key.</source>
          <target state="translated">마지막 기록을 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="846b3ffe7f4e8d5da7e6360691693a1345749b9a" translate="yes" xml:space="preserve">
          <source>Find the third record. If no order is defined it will order by primary key.</source>
          <target state="translated">세 번째 레코드를 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="8197116a1029a8745a9278865919e04a5ffaced3" translate="yes" xml:space="preserve">
          <source>Find the third-to-last record. If no order is defined it will order by primary key.</source>
          <target state="translated">마지막 세 번째 레코드를 찾으십시오. 주문이 정의되지 않은 경우 기본 키로 주문합니다.</target>
        </trans-unit>
        <trans-unit id="4dc35b9dcac7ec993dd29c15967b44ed13159220" translate="yes" xml:space="preserve">
          <source>Find with lock</source>
          <target state="translated">자물쇠로 찾기</target>
        </trans-unit>
        <trans-unit id="5b449d5f34e1bf85876f9e2068fb3b412e19b061" translate="yes" xml:space="preserve">
          <source>Finder methods that return a collection, such as &lt;code&gt;where&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt;, return an instance of &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Relation.html&quot;&gt;&lt;code&gt;ActiveRecord::Relation&lt;/code&gt;&lt;/a&gt;. Methods that find a single entity, such as &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;first&lt;/code&gt;, return a single instance of the model.</source>
          <target state="translated">컬렉션을 반환하는 Finder 메서드 (예 : &lt;code&gt;where&lt;/code&gt; 및 &lt;code&gt;group&lt;/code&gt; )는 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Relation.html&quot;&gt; &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; &lt;/a&gt; 의 인스턴스를 반환합니다 . &lt;code&gt;find&lt;/code&gt; 및 &lt;code&gt;first&lt;/code&gt; 와 같이 단일 항목을 찾는 메서드 는 모델의 단일 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="34e1ed0d804f7e3155b9832ddfe3ecf227111138" translate="yes" xml:space="preserve">
          <source>Finder methods that return a collection, such as &lt;code&gt;where&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt;, return an instance of &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;. Methods that find a single entity, such as &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;first&lt;/code&gt;, return a single instance of the model.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 및 &lt;code&gt;group&lt;/code&gt; 과 같은 컬렉션을 반환하는 Finder 메서드 는 &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; 의 인스턴스를 반환합니다 . &lt;code&gt;find&lt;/code&gt; 및 &lt;code&gt;first&lt;/code&gt; 와 같은 단일 엔티티를 찾는 메소드 는 모델의 단일 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="548ae92a416c3f503fa44ebb3c9040c86fa7ea7e" translate="yes" xml:space="preserve">
          <source>Finding by SQL</source>
          <target state="translated">SQL로 찾기</target>
        </trans-unit>
        <trans-unit id="08df9bdda2892c79adeb17ed89c666becf3a5b62" translate="yes" xml:space="preserve">
          <source>Finding records by a value object</source>
          <target state="translated">값 객체로 레코드 찾기</target>
        </trans-unit>
        <trans-unit id="51f561c64213857723841ba2525faa2cd8bc93ae" translate="yes" xml:space="preserve">
          <source>Finds an associated object according to the same rules as &lt;a href=&quot;../findermethods#method-i-find&quot;&gt;&lt;code&gt;ActiveRecord::FinderMethods#find&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../findermethods#method-i-find&quot;&gt; &lt;code&gt;ActiveRecord::FinderMethods#find&lt;/code&gt; &lt;/a&gt; 와 동일한 규칙에 따라 연관된 객체를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="c6563f3077a10bf44719cb63033ad802c7db05b6" translate="yes" xml:space="preserve">
          <source>Finds an associated object according to the same rules as &lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord::FinderMethods#find&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord :: FinderMethods # find&lt;/a&gt; 와 동일한 규칙에 따라 연관된 객체를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="501c1a9c3381ed858946680e3e1fb8f391fe0fad" translate="yes" xml:space="preserve">
          <source>Finds an associated object responding to the &lt;code&gt;id&lt;/code&gt; and that meets the condition that it has to be associated with this object. Uses the same rules as &lt;a href=&quot;../findermethods#method-i-find&quot;&gt;&lt;code&gt;ActiveRecord::FinderMethods#find&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 응답 하고이 개체와 연결되어야하는 조건을 충족 하는 연결된 개체를 찾습니다 . &lt;a href=&quot;../findermethods#method-i-find&quot;&gt; &lt;code&gt;ActiveRecord::FinderMethods#find&lt;/code&gt; &lt;/a&gt; 와 동일한 규칙을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="73cbe0c727f0fb277e048633a708d7a861c21237" translate="yes" xml:space="preserve">
          <source>Finds an associated object responding to the &lt;code&gt;id&lt;/code&gt; and that meets the condition that it has to be associated with this object. Uses the same rules as &lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord::FinderMethods#find&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 에 응답 하고이 객체와 연결되어야하는 조건을 만족 하는 관련 객체를 찾습니다 . &lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord :: FinderMethods # find&lt;/a&gt; 와 동일한 규칙을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b60e65e966f4b1213cebe2a51aa2329d5d9a9a8f" translate="yes" xml:space="preserve">
          <source>Finds an object in the collection responding to the &lt;code&gt;id&lt;/code&gt;. Uses the same rules as ActiveRecord::Base.find. Returns &lt;a href=&quot;../recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt; error if the object cannot be found.</source>
          <target state="translated">컬렉션에서 &lt;code&gt;id&lt;/code&gt; 에 응답하는 개체를 찾습니다 . ActiveRecord :: Base.find와 동일한 규칙을 사용합니다. 개체를 찾을 수없는 경우 &lt;a href=&quot;../recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt; 오류를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4991c6478cdc94568603f1d22b24a96cea06113d" translate="yes" xml:space="preserve">
          <source>Finds an object in the collection responding to the &lt;code&gt;id&lt;/code&gt;. Uses the same rules as ActiveRecord::Base.find. Returns &lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error if the object cannot be found.</source>
          <target state="translated">컬렉션에서 &lt;code&gt;id&lt;/code&gt; 에 응답하는 객체를 찾습니다 . ActiveRecord :: Base.find와 동일한 규칙을 사용합니다. 개체를 찾을 수 없으면 &lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt; 오류를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4dba752f2d08677693987222ad7374fd301b7db3" translate="yes" xml:space="preserve">
          <source>Finds and deletes all records matching the specified conditions. This is short-hand for &lt;code&gt;relation.where(condition).delete_all&lt;/code&gt;. Returns the number of rows affected.</source>
          <target state="translated">지정된 조건과 일치하는 모든 레코드를 찾아 삭제합니다. 이 짧은 - 손으로 &lt;code&gt;relation.where(condition).delete_all&lt;/code&gt; . 영향을받는 행 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c968d472a5497d35d179162ebf612f74eb113fd" translate="yes" xml:space="preserve">
          <source>Finds and destroys all records matching the specified conditions. This is short-hand for &lt;code&gt;relation.where(condition).destroy_all&lt;/code&gt;. Returns the collection of objects that were destroyed.</source>
          <target state="translated">지정된 조건과 일치하는 모든 레코드를 찾아서 삭제합니다. &lt;code&gt;relation.where(condition).destroy_all&lt;/code&gt; 약칭 입니다. 파괴 된 개체의 컬렉션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d6dc4976836983fd162e0a0e0e9b15168e06574a" translate="yes" xml:space="preserve">
          <source>Finds engine with given path.</source>
          <target state="translated">주어진 경로를 가진 엔진을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="7eabf70383defe78c6d95bb2f4ebfea8bd3281c8" translate="yes" xml:space="preserve">
          <source>Finds the correct table name given an Active Record object. Uses the Active Record object's own table_name, or pre/suffix from the options passed in.</source>
          <target state="translated">활성 레코드 오브젝트가 제공된 올바른 테이블 이름을 찾습니다. Active Record 오브젝트 자체의 table_name 또는 전달 된 옵션의 pre / suffix를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="feef1e8958111b8f3cc60e81be143205460c6df4" translate="yes" xml:space="preserve">
          <source>Finds the first record matching the specified conditions. There is no implied ordering so if order matters, you should specify it yourself.</source>
          <target state="translated">지정된 조건과 일치하는 첫 번째 레코드를 찾습니다. 묵시적 순서는 없으므로 순서가 중요하면 직접 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d3a9a90d7d0edf29bf3acbe365f4193c1f082a3" translate="yes" xml:space="preserve">
          <source>Finds the first record with the given attributes, or creates a record with the attributes if one is not found:</source>
          <target state="translated">주어진 속성이있는 첫 번째 레코드를 찾거나 속성이없는 경우 해당 레코드가있는 레코드를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1100a7a70db4bed1615634a5ee2d9b3a4f05d6b7" translate="yes" xml:space="preserve">
          <source>Fingerprint will be added to the filename if config.assets.digest is set to true.</source>
          <target state="translated">config.assets.digest가 true로 설정되면 지문이 파일 이름에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9c6df9e50147d842fa401ced316d9e6f32c5473f" translate="yes" xml:space="preserve">
          <source>Fingerprinting fixes these problems by avoiding query strings, and by ensuring that filenames are consistent based on their content.</source>
          <target state="translated">지문은 쿼리 문자열을 피하고 파일 이름이 내용에 따라 일관성을 유지함으로써 이러한 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="5e6084437e6e2040ca3c36ea6e7383c25f524c99" translate="yes" xml:space="preserve">
          <source>Fingerprinting is a technique that makes the name of a file dependent on the contents of the file. When the file contents change, the filename is also changed. For content that is static or infrequently changed, this provides an easy way to tell whether two versions of a file are identical, even across different servers or deployment dates.</source>
          <target state="translated">핑거 프린팅은 파일의 내용에 따라 파일 이름을 만드는 기술입니다. 파일 내용이 변경되면 파일 이름도 변경됩니다. 정적이거나 드물게 변경되는 컨텐츠의 경우, 다른 서버 또는 배치 날짜에서도 파일의 두 버전이 동일한 지 쉽게 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9046913994857b4e35448b82a310a21f6ff0236" translate="yes" xml:space="preserve">
          <source>Fingerprinting is enabled by default for both the development and production environments. You can enable or disable it in your configuration through the &lt;code&gt;config.assets.digest&lt;/code&gt; option.</source>
          <target state="translated">지문은 개발 및 프로덕션 환경 모두에서 기본적으로 사용됩니다. &lt;code&gt;config.assets.digest&lt;/code&gt; 옵션을 통해 구성에서 활성화 또는 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d1ef8fdbaecb63ee2b6ed896dd0d703a1090268" translate="yes" xml:space="preserve">
          <source>Fire the SQL query and retrieve the corresponding results from the database.</source>
          <target state="translated">SQL 쿼리를 시작하고 데이터베이스에서 해당 결과를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="3ee3566e68960cae5a422876aa81094530bf22b8" translate="yes" xml:space="preserve">
          <source>Fire up your server using &lt;code&gt;bin/rails server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bin/rails server&lt;/code&gt; 를 사용하여 서버를 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1cac63ef7981908e32675c25d1a4cb7e30a0088" translate="yes" xml:space="preserve">
          <source>Fire up your server using &lt;code&gt;rails server&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails server&lt;/code&gt; 를 사용하여 서버를 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b15caf9936cfa74e6a5bda763dfeda0d85733fb" translate="yes" xml:space="preserve">
          <source>Fired</source>
          <target state="translated">Fired</target>
        </trans-unit>
        <trans-unit id="2a84db8c8b5067e14875e0b737ffcd8c6171a2d6" translate="yes" xml:space="preserve">
          <source>First Contact</source>
          <target state="translated">첫 연락</target>
        </trans-unit>
        <trans-unit id="863e9a7269cd28886907c16a3adb00f35c657965" translate="yes" xml:space="preserve">
          <source>First additional parameter is used as the signature key for &lt;code&gt;MessageVerifier&lt;/code&gt;. This allows you to specify keys to encrypt and sign data.</source>
          <target state="translated">첫 번째 추가 매개 변수는 &lt;code&gt;MessageVerifier&lt;/code&gt; 의 서명 키로 사용됩니다 . 이를 통해 데이터를 암호화하고 서명 할 키를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2128360c9ec4ef8ca60516472b3542d54d6ac365" translate="yes" xml:space="preserve">
          <source>First configurable block to run. Called before any initializers are run.</source>
          <target state="translated">구성 가능한 첫 번째 블록. 초기화 프로그램이 실행되기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9448b50087a5d19b0cb647d27cf8b4a279df40e0" translate="yes" xml:space="preserve">
          <source>First it checks for &lt;code&gt;posts_controller/post.rb&lt;/code&gt; in &lt;code&gt;autoload_paths&lt;/code&gt;:</source>
          <target state="translated">먼저 &lt;code&gt;autoload_paths&lt;/code&gt; 에서 &lt;code&gt;posts_controller/post.rb&lt;/code&gt; 를 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="69c8a440e7e512cf2de9109a7d456b91bd77d107" translate="yes" xml:space="preserve">
          <source>First, add &lt;code&gt;gem 'web-console', '~&amp;gt; 2.0'&lt;/code&gt; to the &lt;code&gt;:development&lt;/code&gt; group in your &lt;code&gt;Gemfile&lt;/code&gt; and run &lt;code&gt;bundle install&lt;/code&gt; (it won't have been included when you upgraded Rails). Once it's been installed, you can simply drop a reference to the console helper (i.e., &lt;code&gt;&amp;lt;%= console %&amp;gt;&lt;/code&gt;) into any view you want to enable it for. A console will also be provided on any error page you view in your development environment.</source>
          <target state="translated">먼저 &lt;code&gt;gem 'web-console', '~&amp;gt; 2.0'&lt;/code&gt; 을 &lt;code&gt;Gemfile&lt;/code&gt; 의 &lt;code&gt;:development&lt;/code&gt; 그룹에 추가 하고 &lt;code&gt;bundle install&lt;/code&gt; 실행 하십시오 (Rails를 업그레이드 할 때는 포함되지 않았습니다). 설치가 완료되면 콘솔 도우미에 대한 참조 ( &lt;code&gt;&amp;lt;%= console %&amp;gt;&lt;/code&gt; )를 활성화하려는보기에 놓기 만하면 됩니다. 개발 환경에서 보는 오류 페이지에도 콘솔이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f105d568f28bb12ecf0236d484b15f0147dc79c1" translate="yes" xml:space="preserve">
          <source>First, add the &lt;code&gt;connection_pool&lt;/code&gt; gem to your Gemfile:</source>
          <target state="translated">먼저 Gemfile에 &lt;code&gt;connection_pool&lt;/code&gt; gem을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="707fa26249b2899f5aadf2e25b8f7b81d47e66a0" translate="yes" xml:space="preserve">
          <source>First, extend &lt;a href=&quot;callbacks&quot;&gt;&lt;code&gt;ActiveModel::Callbacks&lt;/code&gt;&lt;/a&gt; from the class you are creating:</source>
          <target state="translated">먼저 만들고있는 클래스에서 &lt;a href=&quot;callbacks&quot;&gt; &lt;code&gt;ActiveModel::Callbacks&lt;/code&gt; &lt;/a&gt; 를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="4bb4517f6cf6252c239581e43788a114f055c45b" translate="yes" xml:space="preserve">
          <source>First, extend &lt;a href=&quot;callbacks&quot;&gt;ActiveModel::Callbacks&lt;/a&gt; from the class you are creating:</source>
          <target state="translated">먼저 만들고있는 클래스에서 &lt;a href=&quot;callbacks&quot;&gt;ActiveModel :: Callbacks&lt;/a&gt; 를 확장하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6460b753e52401f8a06071b50ac9d96903bb654" translate="yes" xml:space="preserve">
          <source>First, if we DO find a template, it's rendered. Template lookup accounts for the action name, locales, format, variant, template handlers, and more (see &lt;code&gt;render&lt;/code&gt; for details).</source>
          <target state="translated">먼저 템플릿을 찾으면 렌더링됩니다. 템플릿 조회는 작업 이름, 로캘, 형식, 변형, 템플릿 핸들러 등 을 설명합니다 (자세한 내용 은 &lt;code&gt;render&lt;/code&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="b70e23e888bf036d56178f3270da3b6e91046d92" translate="yes" xml:space="preserve">
          <source>First, include &lt;a href=&quot;callbacks&quot;&gt;&lt;code&gt;ActiveModel::Validations::Callbacks&lt;/code&gt;&lt;/a&gt; from the class you are creating:</source>
          <target state="translated">먼저 생성중인 클래스의 &lt;a href=&quot;callbacks&quot;&gt; &lt;code&gt;ActiveModel::Validations::Callbacks&lt;/code&gt; &lt;/a&gt; 을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6e7140044459c2577a8e1500aeea87640e667265" translate="yes" xml:space="preserve">
          <source>First, include &lt;a href=&quot;callbacks&quot;&gt;ActiveModel::Validations::Callbacks&lt;/a&gt; from the class you are creating:</source>
          <target state="translated">먼저 만들려는 클래스의 &lt;a href=&quot;callbacks&quot;&gt;ActiveModel :: Validations :: Callbacks&lt;/a&gt; 를 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="5db0606f89013bb317a55858cca353f0367242c7" translate="yes" xml:space="preserve">
          <source>First, it will ensure that any thrown &lt;code&gt;MissingTranslation&lt;/code&gt; messages will be rendered as inline spans that:</source>
          <target state="translated">먼저, &lt;code&gt;MissingTranslation&lt;/code&gt; 메시지가 다음과 같은 인라인 범위로 렌더링되도록합니다.</target>
        </trans-unit>
        <trans-unit id="9bb14f9cfcd912493deba51e2cfc99a05c93cfd0" translate="yes" xml:space="preserve">
          <source>First, let's create a &lt;code&gt;User&lt;/code&gt; scaffold:</source>
          <target state="translated">먼저 &lt;code&gt;User&lt;/code&gt; 스캐 폴드를 만들어 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="124c07d29c8949c0c45ef452750117078d66cfbe" translate="yes" xml:space="preserve">
          <source>First, let's create a simple &lt;code&gt;User&lt;/code&gt; scaffold:</source>
          <target state="translated">먼저 간단한 &lt;code&gt;User&lt;/code&gt; 스캐 폴드를 만들어 봅시다 :</target>
        </trans-unit>
        <trans-unit id="8536e4356e9816f44f42adcd3c7e021105306608" translate="yes" xml:space="preserve">
          <source>First, let's generate the base Vehicle model:</source>
          <target state="translated">먼저 기본 Vehicle 모델을 생성 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="527d1596e469f5fe1f51f86ad2fddf13aad401c8" translate="yes" xml:space="preserve">
          <source>First, notice that we are inheriting from &lt;code&gt;Rails::Generators::NamedBase&lt;/code&gt; instead of &lt;code&gt;Rails::Generators::Base&lt;/code&gt;. This means that our generator expects at least one argument, which will be the name of the initializer, and will be available in our code in the variable &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">먼저, 통지 우리가 상속되는 &lt;code&gt;Rails::Generators::NamedBase&lt;/code&gt; 대신 &lt;code&gt;Rails::Generators::Base&lt;/code&gt; . 즉, 생성기는 이니셜 라이저의 이름이 될 하나 이상의 인수를 예상하며 변수 &lt;code&gt;name&lt;/code&gt; 의 코드에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eaa4f66b819d957c1cd2205f57684022146f1efc" translate="yes" xml:space="preserve">
          <source>First, one uses the &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt; or &lt;code&gt;head&lt;/code&gt; method to simulate an HTTP request.</source>
          <target state="translated">먼저 &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;post&lt;/code&gt; , &lt;code&gt;patch&lt;/code&gt; , &lt;code&gt;put&lt;/code&gt; , &lt;code&gt;delete&lt;/code&gt; 또는 &lt;code&gt;head&lt;/code&gt; 메소드를 사용하여 HTTP 요청을 시뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="c568a45aca6b79eb9efb04ff988e438ccab9eb4e" translate="yes" xml:space="preserve">
          <source>First, one uses the &lt;code&gt;subscribe&lt;/code&gt; method to simulate subscription creation.</source>
          <target state="translated">먼저 &lt;code&gt;subscribe&lt;/code&gt; 메소드를 사용하여 subscription 작성을 시뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="ffc0f9a53e3c4957fd6e6f284ffe0f8c6858dfab" translate="yes" xml:space="preserve">
          <source>First, take a look at &lt;code&gt;app/models/comment.rb&lt;/code&gt;:</source>
          <target state="translated">먼저 &lt;code&gt;app/models/comment.rb&lt;/code&gt; 를 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="28bec0e2e79a6098e09f2effd434672e2367b710" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;author_name&lt;/code&gt; text field needs to be added to the &lt;code&gt;app/views/blorgh/articles/_form.html.erb&lt;/code&gt; partial inside the engine. This can be added above the &lt;code&gt;title&lt;/code&gt; field with this code:</source>
          <target state="translated">먼저 &lt;code&gt;author_name&lt;/code&gt; 텍스트 필드를 엔진 내부의 &lt;code&gt;app/views/blorgh/articles/_form.html.erb&lt;/code&gt; 부분에 추가해야합니다 . 다음 코드를 사용 하여 &lt;code&gt;title&lt;/code&gt; 필드 위에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e83a846b9320cf0febabdfb1d99e8f8defdabe22" translate="yes" xml:space="preserve">
          <source>First, the database name for the &lt;code&gt;primary&lt;/code&gt; and &lt;code&gt;primary_replica&lt;/code&gt; should be the same because they contain the same data. This is also the case for &lt;code&gt;animals&lt;/code&gt; and &lt;code&gt;animals_replica&lt;/code&gt;.</source>
          <target state="translated">첫째, &lt;code&gt;primary&lt;/code&gt; 및 &lt;code&gt;primary_replica&lt;/code&gt; 의 데이터베이스 이름 은 동일한 데이터를 포함하므로 동일해야합니다. 이는 &lt;code&gt;animals&lt;/code&gt; 및 &lt;code&gt;animals_replica&lt;/code&gt; 의 경우에도 해당 됩니다.</target>
        </trans-unit>
        <trans-unit id="7b7b740fab55e112a3c784c68fb18fe1d94b5077" translate="yes" xml:space="preserve">
          <source>First, the database name for the primary and replica should be the same because they contain the same data. Second, the username for the primary and replica should be different, and the replica user's permissions should be to read and not write.</source>
          <target state="translated">먼저 기본 및 복제본의 데이터베이스 이름이 동일한 데이터를 포함하므로 동일해야합니다. 둘째, 기본 및 복제본의 사용자 이름이 달라야하며 복제본 사용자의 권한은 읽고 쓸 수 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="1468a039e189502b3dd31c3150cee48f6a6236f4" translate="yes" xml:space="preserve">
          <source>First, the engine needs to be specified inside the application's &lt;code&gt;Gemfile&lt;/code&gt;. If there isn't an application handy to test this out in, generate one using the &lt;code&gt;rails new&lt;/code&gt; command outside of the engine directory like this:</source>
          <target state="translated">먼저 엔진은 응용 프로그램의 &lt;code&gt;Gemfile&lt;/code&gt; 안에 지정해야합니다 . 이것을 테스트하는 데 편리한 응용 프로그램이 없다면 다음 과 같이 엔진 디렉토리 외부 에서 &lt;code&gt;rails new&lt;/code&gt; 명령을 사용하여 생성 하십시오.</target>
        </trans-unit>
        <trans-unit id="cbc622a4646f4694023946c9dc089c090ea7d75c" translate="yes" xml:space="preserve">
          <source>First, to tell Mail to turn an attachment into an inline attachment, you just call &lt;code&gt;#inline&lt;/code&gt; on the attachments method within your Mailer:</source>
          <target state="translated">먼저, Mail에게 첨부 파일을 인라인 첨부 파일로 &lt;code&gt;#inline&lt;/code&gt; 라고 지시 하려면 Mailer 내의 첨부 파일 메소드에서 #inline 을 호출 하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="c4c51da04699781ff96429f545394da6cb2b57fb" translate="yes" xml:space="preserve">
          <source>First, we declare that this connection can be identified by its current_user. This allows us to later be able to find all connections established for that current_user (and potentially disconnect them). You can declare as many identification indexes as you like. Declaring an identification means that an attr_accessor is automatically set for that key.</source>
          <target state="translated">먼저이 연결을 current_user로 식별 할 수 있다고 선언합니다. 이를 통해 나중에 해당 current_user에 대해 설정된 모든 연결을 찾고 잠재적으로 연결을 끊을 수 있습니다. 원하는만큼 식별 색인을 선언 할 수 있습니다. 식별을 선언하면 해당 키에 대해 attr_accessor가 자동으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="6b68688153987d6439de8175f29c07d67a7eb9b9" translate="yes" xml:space="preserve">
          <source>First, we will make a comment partial to extract showing all the comments for the article. Create the file &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; and put the following into it:</source>
          <target state="translated">먼저 기사에 대한 모든 의견을 표시하기 위해 의견을 부분적으로 작성합니다. &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; 파일을 작성하고 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="8bb52362b88dc56354b3f3e3e600169f5cafd5d7" translate="yes" xml:space="preserve">
          <source>First, when the &lt;code&gt;module&lt;/code&gt; keyword is processed, the interpreter creates a new entry in the constant table of the class object stored in the &lt;code&gt;Object&lt;/code&gt; constant. Said entry associates the name &quot;Colors&quot; to a newly created module object. Furthermore, the interpreter sets the name of the new module object to be the string &quot;Colors&quot;.</source>
          <target state="translated">먼저 &lt;code&gt;module&lt;/code&gt; 키워드가 처리 될 때 인터프리터는 &lt;code&gt;Object&lt;/code&gt; 상수에 저장된 클래스 객체의 상수 테이블에 새 항목을 만듭니다 . 상기 엔트리는 &quot;Colors&quot;라는 이름을 새로 생성 된 모듈 객체와 연관시킨다. 또한 인터프리터는 새 모듈 객체의 이름을 문자열 &quot;Colors&quot;로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1e1190be35c6213124c2d02d648e330fab1e14a4" translate="yes" xml:space="preserve">
          <source>First: takes a block so it can be used just like &lt;code&gt;Array#select&lt;/code&gt;.</source>
          <target state="translated">첫 번째 : &lt;code&gt;Array#select&lt;/code&gt; 처럼 사용할 수 있도록 블록을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="edd3bdb78d6bb3eb4a0f3e13e554d2fb4983c0df" translate="yes" xml:space="preserve">
          <source>Firstly, &lt;code&gt;super&lt;/code&gt; is called which calls the &lt;code&gt;initialize&lt;/code&gt; method on &lt;code&gt;Rack::Server&lt;/code&gt;.</source>
          <target state="translated">먼저, &lt;code&gt;super&lt;/code&gt; 가 호출되어 &lt;code&gt;Rack::Server&lt;/code&gt; 에서 &lt;code&gt;initialize&lt;/code&gt; 메소드 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="05f798e3c3068887b6710efdd9705a38be82d573" translate="yes" xml:space="preserve">
          <source>Firstly, you need a place within the application to create a new article. A great place for that would be at &lt;code&gt;/articles/new&lt;/code&gt;. With the route already defined, requests can now be made to &lt;code&gt;/articles/new&lt;/code&gt; in the application. Navigate to http://localhost:3000/articles/new and you'll see a routing error:</source>
          <target state="translated">먼저, 새 기사를 작성하려면 애플리케이션 내에 위치가 필요합니다. 이를위한 좋은 장소는 &lt;code&gt;/articles/new&lt;/code&gt; 입니다. 경로가 이미 정의되어 있으면 이제 응용 프로그램에서 &lt;code&gt;/articles/new&lt;/code&gt; 에 요청할 수 있습니다 . http : // localhost : 3000 / articles / new로 이동하면 라우팅 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1b9189d91e82e8f7905b5124c7bafaca424e6f4a" translate="yes" xml:space="preserve">
          <source>Fix tests and deprecated features.</source>
          <target state="translated">테스트 및 더 이상 사용되지 않는 기능 수정</target>
        </trans-unit>
        <trans-unit id="2c32a616d9744ed6d811f633a73a67b1c4191e13" translate="yes" xml:space="preserve">
          <source>Fixture label interpolation</source>
          <target state="translated">고정구 라벨 보간</target>
        </trans-unit>
        <trans-unit id="5765732c82bf230e595c76b18afa6b128afcee0c" translate="yes" xml:space="preserve">
          <source>Fixtures are a way of organizing data that you want to test against; in short, sample data.</source>
          <target state="translated">고정물은 테스트하려는 데이터를 구성하는 방법입니다. 간단히 말해 샘플 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="743e121f5dd2e84df8ebe7b2fe8791a6d5c189b4" translate="yes" xml:space="preserve">
          <source>Fixtures are a way of organizing test data; they reside in the &lt;code&gt;fixtures&lt;/code&gt; directory.</source>
          <target state="translated">비품은 테스트 데이터를 구성하는 방법입니다. 그것들은 &lt;code&gt;fixtures&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="710514649f0f9c8bc09e196fb1f42dec62e101fd" translate="yes" xml:space="preserve">
          <source>Fixtures are instances of Active Record. As mentioned in point #3 above, you can access the object directly because it is automatically available as a method whose scope is local of the test case. For example:</source>
          <target state="translated">비품은 Active Record의 인스턴스입니다. 위의 3 번 지점에서 언급했듯이, 개체가 범위가 테스트 사례의 로컬 인 메서드로 자동으로 제공되므로 개체에 직접 액세스 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fea93790bd4818efe4da3235b0d6dd8cd36067ff" translate="yes" xml:space="preserve">
          <source>Fixtures are not designed to create every object that your tests need, and are best managed when only used for default data that can be applied to the common case.</source>
          <target state="translated">픽스처는 테스트에 필요한 모든 오브젝트를 작성하도록 설계되지 않았으며 일반적인 경우에 적용 할 수있는 기본 데이터에만 사용될 때 가장 잘 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="b0ff77a8f2eca13b03e22bfd5fbffd68987e2612" translate="yes" xml:space="preserve">
          <source>Fixtures that don't specify an ID get some extra features:</source>
          <target state="translated">ID를 지정하지 않은 비품에는 몇 가지 추가 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="923914245da303901960616cc70ead07d0ef00ba" translate="yes" xml:space="preserve">
          <source>Flash message keys are &lt;a href=&quot;https://github.com/rails/rails/commit/a668beffd64106a1e1fedb71cc25eaaa11baf0c1&quot;&gt;normalized to strings&lt;/a&gt;. They can still be accessed using either symbols or strings. Looping through the flash will always yield string keys:</source>
          <target state="translated">플래시 메시지 키는 &lt;a href=&quot;https://github.com/rails/rails/commit/a668beffd64106a1e1fedb71cc25eaaa11baf0c1&quot;&gt;문자열&lt;/a&gt; 로 정규화됩니다 . 여전히 기호 나 문자열을 사용하여 액세스 할 수 있습니다. 플래시를 반복하면 항상 문자열 키가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="90530fd8e1d8bca388a24d68d18ccceb0d823f58" translate="yes" xml:space="preserve">
          <source>Flash structure changes</source>
          <target state="translated">플래시 구조 변경</target>
        </trans-unit>
        <trans-unit id="914d129a758d1e705286234c2680eac661c2ff4c" translate="yes" xml:space="preserve">
          <source>Flash::ClassMethods</source>
          <target state="translated">Flash::ClassMethods</target>
        </trans-unit>
        <trans-unit id="b16193581b3d368cbb2e12880d5c34d491ad02d5" translate="yes" xml:space="preserve">
          <source>Flash::ClassMethods#add_flash_types</source>
          <target state="translated">Flash::ClassMethods#add_flash_types</target>
        </trans-unit>
        <trans-unit id="ff2976e56a14fbd5732f9bed144d90d36fbfaaf7" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash</source>
          <target state="translated">Flash::FlashHash</target>
        </trans-unit>
        <trans-unit id="90a6de1d98d934560f0f6214351ff218b25ba49f" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#[]</source>
          <target state="translated">Flash::FlashHash#[]</target>
        </trans-unit>
        <trans-unit id="a7844d6863374bb4cf63688429c357c8ec2a8f11" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#[]=</source>
          <target state="translated">Flash::FlashHash#[]=</target>
        </trans-unit>
        <trans-unit id="3b0177b63a77d61047e4eb70c2f9db3013809131" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#alert</source>
          <target state="translated">Flash::FlashHash#alert</target>
        </trans-unit>
        <trans-unit id="e66c2fb938c51adfed41f4f587380f9b48cabb53" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#alert=</source>
          <target state="translated">Flash::FlashHash#alert=</target>
        </trans-unit>
        <trans-unit id="fa87b5296a2a9e31b0cc54a0a7f5e49b37f457b8" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#clear</source>
          <target state="translated">Flash::FlashHash#clear</target>
        </trans-unit>
        <trans-unit id="21580702e8381935742b7dc79e297b81cfc6e156" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#delete</source>
          <target state="translated">Flash::FlashHash#delete</target>
        </trans-unit>
        <trans-unit id="5f9de39bd326468234a087b4180d945a6ce991f8" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#discard</source>
          <target state="translated">Flash::FlashHash#discard</target>
        </trans-unit>
        <trans-unit id="dc6d12f451b75c3cf3f67a3672b6ef450dba0428" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#each</source>
          <target state="translated">Flash::FlashHash#each</target>
        </trans-unit>
        <trans-unit id="c691c15d595052a24998640a0d5f6c0791b2ae3a" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#empty?</source>
          <target state="translated">Flash::FlashHash#empty?</target>
        </trans-unit>
        <trans-unit id="2912a95457ec9674999495b256c63e94d2a24279" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#initialize_copy</source>
          <target state="translated">Flash::FlashHash#initialize_copy</target>
        </trans-unit>
        <trans-unit id="00a8d9e3720db0924004cd134f47880f5444a242" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#keep</source>
          <target state="translated">Flash::FlashHash#keep</target>
        </trans-unit>
        <trans-unit id="3d4918dd1c695100c39b4843a2c216c104d0bbc1" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#key?</source>
          <target state="translated">Flash::FlashHash#key?</target>
        </trans-unit>
        <trans-unit id="fea881a4cb9f8765da53e3c782414fd6548172ff" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#keys</source>
          <target state="translated">Flash::FlashHash#keys</target>
        </trans-unit>
        <trans-unit id="76e6eb2a7027538c3319ca84aca9bb8cdab68e8c" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#notice</source>
          <target state="translated">Flash::FlashHash#notice</target>
        </trans-unit>
        <trans-unit id="a205f20f2db06e67952d265eb61ae9f90ce0bcc8" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#notice=</source>
          <target state="translated">Flash::FlashHash#notice=</target>
        </trans-unit>
        <trans-unit id="48d338ea5883e01b9b79b8a1fa5cd9a1d5a4cc28" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#now</source>
          <target state="translated">Flash::FlashHash#now</target>
        </trans-unit>
        <trans-unit id="05a2ed8fdc166a90a0c84cf637171e38c9c6c72b" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#now_is_loaded?</source>
          <target state="translated">Flash::FlashHash#now_is_loaded?</target>
        </trans-unit>
        <trans-unit id="34b5bc63547d6e36bf6f32dea9ff05bbc5a74f88" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#stringify_array</source>
          <target state="translated">Flash::FlashHash#stringify_array</target>
        </trans-unit>
        <trans-unit id="0a6f1001ce329b84775d32431a7a5ca102ab2824" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#to_hash</source>
          <target state="translated">Flash::FlashHash#to_hash</target>
        </trans-unit>
        <trans-unit id="18d4cbc27879bc99bd85d55d150f66570417c8db" translate="yes" xml:space="preserve">
          <source>Flash::RequestMethods</source>
          <target state="translated">Flash::RequestMethods</target>
        </trans-unit>
        <trans-unit id="e07699e7f813ba51ed1fe9a4ed1ec3efee17ea9c" translate="yes" xml:space="preserve">
          <source>Flash::RequestMethods#flash</source>
          <target state="translated">Flash::RequestMethods#flash</target>
        </trans-unit>
        <trans-unit id="4adaadbb2b4901a2d33f5c2c45ce61a5265338b4" translate="yes" xml:space="preserve">
          <source>Flash::RequestMethods#flash=</source>
          <target state="translated">Flash::RequestMethods#flash=</target>
        </trans-unit>
        <trans-unit id="e5f6c48133ba7a0375b6ea7262638e214c44eb1f" translate="yes" xml:space="preserve">
          <source>Flash::new</source>
          <target state="translated">Flash::new</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="0d7b4882ce084594064d8a213ce7d218d38a740a" translate="yes" xml:space="preserve">
          <source>Flush all &lt;a href=&quot;logsubscriber#method-c-log_subscribers&quot;&gt;::log_subscribers&lt;/a&gt;' logger.</source>
          <target state="translated">&lt;a href=&quot;logsubscriber#method-c-log_subscribers&quot;&gt;:: log_subscribers&lt;/a&gt; '로거를 모두 비 웁니다 .</target>
        </trans-unit>
        <trans-unit id="a94f35eabcbd76b2dc630dc4203927248c094c86" translate="yes" xml:space="preserve">
          <source>Flush all &lt;a href=&quot;logsubscriber#method-c-log_subscribers&quot;&gt;&lt;code&gt;log_subscribers&lt;/code&gt;&lt;/a&gt;' logger.</source>
          <target state="translated">모든 &lt;a href=&quot;logsubscriber#method-c-log_subscribers&quot;&gt; &lt;code&gt;log_subscribers&lt;/code&gt; &lt;/a&gt; '로거를 비 웁니다 .</target>
        </trans-unit>
        <trans-unit id="6f475c6adddac90040c881f45e7ef615c0f76125" translate="yes" xml:space="preserve">
          <source>Follow a single redirect response. If the last response was not a redirect, an exception will be raised. Otherwise, the redirect is performed on the location header. Any arguments are passed to the underlying call to `get`.</source>
          <target state="translated">단일 리디렉션 응답을 따르십시오. 마지막 응답이 경로 재 지정이 아닌 경우 예외가 발생합니다. 그렇지 않으면 위치 헤더에서 리디렉션이 수행됩니다. 모든 인수는`get`에 대한 기본 호출로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="0fcc5447f3b0bce23b0eab61c94cb2bc1d4013cd" translate="yes" xml:space="preserve">
          <source>Follow a single redirect response. If the last response was not a redirect, an exception will be raised. Otherwise, the redirect is performed on the location header. If the redirection is a 307 or 308 redirect, the same HTTP verb will be used when redirecting, otherwise a GET request will be performed. Any arguments are passed to the underlying request.</source>
          <target state="translated">단일 리디렉션 응답을 따릅니다. 마지막 응답이 리디렉션이 아닌 경우 예외가 발생합니다. 그렇지 않으면 위치 헤더에서 리디렉션이 수행됩니다. 리디렉션이 307 또는 308 리디렉션이면 리디렉션 할 때 동일한 HTTP 동사가 사용됩니다. 그렇지 않으면 GET 요청이 수행됩니다. 모든 인수는 기본 요청에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="7b4d42135d907481dc1f27709879cbb4076cf181" translate="yes" xml:space="preserve">
          <source>Following the &lt;em&gt;convention over configuration&lt;/em&gt; philosophy, Rails I18n provides reasonable default translation strings. When different translation strings are needed, they can be overridden.</source>
          <target state="translated">&lt;em&gt;구성&lt;/em&gt; 철학에 대한 &lt;em&gt;협약에&lt;/em&gt; 따라 Rails I18n은 합리적인 기본 변환 문자열을 제공합니다. 다른 번역 문자열이 필요한 경우 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35b4cbffb8d15ff81bab1ce137494ca254c6c41d" translate="yes" xml:space="preserve">
          <source>Following this convention will allow you to use the default route generators (e.g. &lt;code&gt;resources&lt;/code&gt;, etc) without needing to qualify each &lt;code&gt;:path&lt;/code&gt; or &lt;code&gt;:controller&lt;/code&gt;, and will keep named route helpers' usage consistent throughout your application. See &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts &amp;amp; Rendering Guide&lt;/a&gt; for more details.</source>
          <target state="translated">이 규칙을 따르면 각 &lt;code&gt;:path&lt;/code&gt; 또는 &lt;code&gt;:controller&lt;/code&gt; 를 한정 할 필요없이 기본 경로 생성기 (예 : &lt;code&gt;resources&lt;/code&gt; 등)를 사용할 수 있으며 응용 프로그램 전체에서 명명 된 경로 도우미의 사용이 일관되게 유지됩니다. 자세한 내용은 &lt;a href=&quot;layouts_and_rendering&quot;&gt;레이아웃 및 렌더링 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cf17b55424ae67c8978d1821f2a70d8b3a078e65" translate="yes" xml:space="preserve">
          <source>Following this convention will allow you to use the default route generators (e.g. &lt;code&gt;resources&lt;/code&gt;, etc) without needing to qualify each &lt;code&gt;:path&lt;/code&gt; or &lt;code&gt;:controller&lt;/code&gt;, and will keep named route helpers' usage consistent throughout your application. See &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts and Rendering Guide&lt;/a&gt; for more details.</source>
          <target state="translated">이 규칙을 따르면 각 &lt;code&gt;:path&lt;/code&gt; 또는 &lt;code&gt;:controller&lt;/code&gt; 를 한정 할 필요없이 기본 경로 생성기 (예 : &lt;code&gt;resources&lt;/code&gt; 등)를 사용할 수 있으며 애플리케이션 전체에서 명명 된 경로 도우미의 사용을 일관되게 유지할 수 있습니다. 자세한 내용은 &lt;a href=&quot;layouts_and_rendering&quot;&gt;레이아웃 및 렌더링 가이드&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="ccf4556f36e648e3ac1bb37dae5dc943f81fa512" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; controllers, the implicit response is always &lt;code&gt;204 No Content&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; 의&lt;/a&gt; 컨트롤러, 암시 적 응답은 항상 &lt;code&gt;204 No Content&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8042d1fa8c46f59b6ac0427027ba3251f625ac0" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; controllers, the implicit response is always &lt;code&gt;204 No Content&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;api&quot;&gt;API의&lt;/a&gt; 컨트롤러, 암시 적 응답은 항상 &lt;code&gt;204 No Content&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a5c05049a4041001442d45336b0bef10363d6f2" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; are the same: they cause the records in the join table to be removed.</source>
          <target state="translated">들어 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt; &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;delete&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt; 동일한 경우 : 테이블을 조인 그들은 제거 할 레코드를 유발한다.</target>
        </trans-unit>
        <trans-unit id="845d136019bc185b8437ca6c3b5a4fda2886ba8d" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;, &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; are the same: they cause the records in the join table to be removed.</source>
          <target state="translated">들어 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; , &lt;code&gt;delete&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt; 동일한 경우 : 테이블을 조인 그들은 제거 할 레코드를 유발한다.</target>
        </trans-unit>
        <trans-unit id="6c803bd448ca48ccb345be8286821ec41bb0a4ca" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;destroy&lt;/code&gt; and &lt;code&gt;destroy_all&lt;/code&gt; will always call the &lt;code&gt;destroy&lt;/code&gt; method of the record(s) being removed so that callbacks are run. However &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt; will either do the deletion according to the strategy specified by the &lt;code&gt;:dependent&lt;/code&gt; option, or if no &lt;code&gt;:dependent&lt;/code&gt; option is given, then it will follow the default strategy. The default strategy is to do nothing (leave the foreign keys with the parent ids set), except for &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;, where the default strategy is &lt;code&gt;delete_all&lt;/code&gt; (delete the join records, without running their callbacks).</source>
          <target state="translated">들어 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt; &lt;code&gt;has_many&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;destroy&lt;/code&gt; 및 &lt;code&gt;destroy_all&lt;/code&gt; 는 항상 호출됩니다 &lt;code&gt;destroy&lt;/code&gt; 콜백이 실행되도록 제거되는 레코드 (들)의 방법을. 그러나 &lt;code&gt;delete&lt;/code&gt; 및 &lt;code&gt;delete_all&lt;/code&gt; 은 &lt;code&gt;:dependent&lt;/code&gt; 옵션에 지정된 전략에 따라 삭제를 수행 하거나 &lt;code&gt;:dependent&lt;/code&gt; 옵션이 지정 되지 않은 경우 기본 전략을 따릅니다. 기본 전략은 기본 전략이 &lt;code&gt;delete_all&lt;/code&gt; (콜백을 실행하지 않고 조인 레코드 삭제 ) 인 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt; &lt;code&gt;has_many&lt;/code&gt; &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 를 제외하고는 아무것도하지 않는 것입니다 (상위 ID가 설정된 외래 키는 그대로 둡니다 ).</target>
        </trans-unit>
        <trans-unit id="2f6871afc36b5eb296d00ee92f9388f5220a04d2" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;, &lt;code&gt;destroy&lt;/code&gt; and &lt;code&gt;destroy_all&lt;/code&gt; will always call the &lt;code&gt;destroy&lt;/code&gt; method of the record(s) being removed so that callbacks are run. However &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt; will either do the deletion according to the strategy specified by the &lt;code&gt;:dependent&lt;/code&gt; option, or if no &lt;code&gt;:dependent&lt;/code&gt; option is given, then it will follow the default strategy. The default strategy is to do nothing (leave the foreign keys with the parent ids set), except for &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;, where the default strategy is &lt;code&gt;delete_all&lt;/code&gt; (delete the join records, without running their callbacks).</source>
          <target state="translated">들어 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; , &lt;code&gt;destroy&lt;/code&gt; 및 &lt;code&gt;destroy_all&lt;/code&gt; 는 항상 호출됩니다 &lt;code&gt;destroy&lt;/code&gt; 콜백이 실행되도록 제거되는 레코드 (들)의 방법을. 그러나 &lt;code&gt;delete&lt;/code&gt; 및 &lt;code&gt;delete_all&lt;/code&gt; 은 &lt;code&gt;:dependent&lt;/code&gt; 옵션으로 지정된 전략에 따라 삭제를 수행 하거나 &lt;code&gt;:dependent&lt;/code&gt; 옵션이 지정 되지 않은 경우 기본 전략을 따릅니다. 기본 전략은 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 를 제외하고 아무것도하지 않는 것입니다 (부모 ID가 설정된 외래 키는 그대로 두십시오) . 여기서 기본 전략은 &lt;code&gt;delete_all&lt;/code&gt; 입니다 (콜백을 실행하지 않고 결합 레코드 삭제).</target>
        </trans-unit>
        <trans-unit id="904678ef8c40284a4397b4b526da6ed401299ec8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many :through&lt;/code&gt; associations, the default deletion strategy is &lt;code&gt;:delete_all&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;code&gt;has_many :through&lt;/code&gt; 협회, 기본 삭제 전략이다 &lt;code&gt;:delete_all&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1f47476879fee98e87b6542011fd00597d9910b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many&lt;/code&gt; associations, the default deletion strategy is &lt;code&gt;:nullify&lt;/code&gt;. This sets the foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;code&gt;has_many&lt;/code&gt; 협회, 기본 삭제 전략이다 &lt;code&gt;:nullify&lt;/code&gt; . 외래 키를 &lt;code&gt;NULL&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="99d551518d4f38e155ebc21db3ed28e506c5c1b0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;rails server&lt;/code&gt; the equivalent of the following command is executed:</source>
          <target state="translated">들면 &lt;code&gt;rails server&lt;/code&gt; 다음 명령의 등가 실행한다 :</target>
        </trans-unit>
        <trans-unit id="d78e4858b6e5f03c64f70654748fbc0e9a1f8195" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;countermeasures against CSRF in administration interfaces and Intranet applications, refer to the countermeasures in the CSRF section&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;관리 인터페이스 및 인트라넷 응용 프로그램에서 CSRF에&lt;/em&gt; 대한 &lt;em&gt;대책은 CSRF 섹션의 대책을 참조하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="d207a7d4fe314030cfc83d683d2201d468256aca" translate="yes" xml:space="preserve">
          <source>For AJAX requests other than GETs, extract the &amp;ldquo;csrf-token&amp;rdquo; from the meta-tag and send as the &amp;ldquo;X-CSRF-Token&amp;rdquo; HTTP header. If you are using rails-ujs this happens automatically.</source>
          <target state="translated">GET 이외의 AJAX 요청의 경우 메타 태그에서 &quot;csrf-token&quot;을 추출하여 &quot;X-CSRF-Token&quot;HTTP 헤더로 보내십시오. rails-ujs를 사용하는 경우 자동으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0b45c7c547dfe153af7b5c2bffc2318f587d77f3" translate="yes" xml:space="preserve">
          <source>For Apache:</source>
          <target state="translated">Apache의 경우 :</target>
        </trans-unit>
        <trans-unit id="5b16c65687851e9f77536de961a201d18686a384" translate="yes" xml:space="preserve">
          <source>For NGINX:</source>
          <target state="translated">NGINX의 경우 :</target>
        </trans-unit>
        <trans-unit id="2ee9c3eca46b810b3e5c354af5b98d30bb8322e1" translate="yes" xml:space="preserve">
          <source>For a Rails::Command::TestCommand placed in &lt;code&gt;rails/command/test_command.rb&lt;/code&gt; would return &lt;code&gt;rails/test&lt;/code&gt;.</source>
          <target state="translated">rails :: Command :: TestCommand의 경우 &lt;code&gt;rails/command/test_command.rb&lt;/code&gt; 에 있으면 &lt;code&gt;rails/test&lt;/code&gt; 가 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="0337e09e3f5441269fd60fb9e46feba5fe0005f4" translate="yes" xml:space="preserve">
          <source>For a cache-only Redis server, set &lt;code&gt;maxmemory-policy&lt;/code&gt; to one of the variants of allkeys. Redis 4+ supports least-frequently-used eviction (&lt;code&gt;allkeys-lfu&lt;/code&gt;), an excellent default choice. Redis 3 and earlier should use least-recently-used eviction (&lt;code&gt;allkeys-lru&lt;/code&gt;).</source>
          <target state="translated">캐시 전용 Redis 서버의 경우 &lt;code&gt;maxmemory-policy&lt;/code&gt; 를 모든 키 변형 중 하나로 설정 하십시오. Redis 4+는 가장 기본적으로 사용되는 가장 적은 빈도의 제거 ( &lt;code&gt;allkeys-lfu&lt;/code&gt; )를 지원합니다. Redis 3 이하 버전은 가장 최근에 사용한 퇴거 ( &lt;code&gt;allkeys-lru&lt;/code&gt; )를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2705926361d3741b615af29f48a9b2d2f6a9a658" translate="yes" xml:space="preserve">
          <source>For a complete writeup of possible configurations see the &lt;a href=&quot;configuring#configuring-action-mailer&quot;&gt;Configuring Action Mailer&lt;/a&gt; in our Configuring Rails Applications guide.</source>
          <target state="translated">가능한 구성을 완전히 작성하려면 Rails 응용 프로그램 구성 안내서의 &lt;a href=&quot;configuring#configuring-action-mailer&quot;&gt;작업 메일러&lt;/a&gt; 구성을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5329458c35cd39efd8df6906876b1124af456158" translate="yes" xml:space="preserve">
          <source>For a freshly generated Rails application, this might produce something like:</source>
          <target state="translated">새로 생성 된 Rails 애플리케이션의 경우 다음과 같이 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d43d5cb8e17443e1207469d2744b9d253a0aaab" translate="yes" xml:space="preserve">
          <source>For a full list of all configuration options, see the &lt;code&gt;ActionCable::Server::Configuration&lt;/code&gt; class.</source>
          <target state="translated">모든 구성 옵션의 전체 목록은 &lt;code&gt;ActionCable::Server::Configuration&lt;/code&gt; 클래스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fbd474b6f355fe3d66739bb18c38b38cce6fb587" translate="yes" xml:space="preserve">
          <source>For a list of available field types for the &lt;code&gt;type&lt;/code&gt; parameter, refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column&quot;&gt;API documentation&lt;/a&gt; for the add_column method for the &lt;code&gt;SchemaStatements&lt;/code&gt; module. The &lt;code&gt;index&lt;/code&gt; parameter generates a corresponding index for the column.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 매개 변수 에 사용 가능한 필드 유형 목록은 &lt;code&gt;SchemaStatements&lt;/code&gt; 모듈 의 add_column 메소드에 대한 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column&quot;&gt;API 문서&lt;/a&gt; 를 참조하십시오 . &lt;code&gt;index&lt;/code&gt; 파라미터 열의 대응하는 인덱스를 생성한다.</target>
        </trans-unit>
        <trans-unit id="a632cdfeaf0496b79aedd8c39ba65af9bbf75d4a" translate="yes" xml:space="preserve">
          <source>For a list of commands that are reversible, please see &lt;code&gt;ActiveRecord::Migration::CommandRecorder&lt;/code&gt;.</source>
          <target state="translated">되돌릴 수있는 명령 목록은 &lt;code&gt;ActiveRecord::Migration::CommandRecorder&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="308c98d5f29c4938d3ab80d8d4f526fffe9ff1fb" translate="yes" xml:space="preserve">
          <source>For a one-to-one association, this option allows you to specify how nested attributes are going to be used when an associated record already exists. In general, an existing record may either be updated with the new set of attribute values or be replaced by a wholly new record containing those values. By default the &lt;code&gt;:update_only&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt; and the nested attributes are used to update the existing record only if they include the record's &lt;code&gt;:id&lt;/code&gt; value. Otherwise a new record will be instantiated and used to replace the existing one. However if the &lt;code&gt;:update_only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;, the nested attributes are used to update the record's attributes always, regardless of whether the &lt;code&gt;:id&lt;/code&gt; is present. The option is ignored for collection associations.</source>
          <target state="translated">일대일 연관의 경우이 옵션을 사용하면 연관된 레코드가 이미 존재하는 경우 중첩 된 속성이 사용되는 방법을 지정할 수 있습니다. 일반적으로 기존 레코드는 새로운 속성 값 세트로 업데이트되거나 해당 값을 포함하는 완전히 새로운 레코드로 대체 될 수 있습니다. 기본적으로 &lt;code&gt;:update_only&lt;/code&gt; 옵션은 &lt;code&gt;false&lt;/code&gt; 이며 중첩 속성은 레코드의 &lt;code&gt;:id&lt;/code&gt; 값 을 포함하는 경우에만 기존 레코드를 업데이트하는 데 사용됩니다 . 그렇지 않으면 새 레코드가 인스턴스화되어 기존 레코드를 대체하는 데 사용됩니다. 그러나 &lt;code&gt;:update_only&lt;/code&gt; 옵션이 &lt;code&gt;true&lt;/code&gt; 인 경우 중첩 속성은 &lt;code&gt;:id&lt;/code&gt; 여부에 관계없이 항상 레코드 속성을 업데이트하는 데 사용됩니다 .존재합니다. 컬렉션 연관에 대해서는이 옵션이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bf4637a27cc000ab50c08001e55a209040599bf6" translate="yes" xml:space="preserve">
          <source>For all of these options, see the documentation for &lt;a href=&quot;urlfor&quot;&gt;url_for&lt;/a&gt;.</source>
          <target state="translated">이러한 모든 옵션에 대해서는 &lt;a href=&quot;urlfor&quot;&gt;url_for&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d526585a5f54a30a8eaef44ad2dcfe222f18618" translate="yes" xml:space="preserve">
          <source>For all other controllers, we use these heuristics to decide whether to render a template, raise an error for a missing template, or respond with &lt;code&gt;204 No Content&lt;/code&gt;:</source>
          <target state="translated">다른 모든 컨트롤러의 경우 이러한 휴리스틱을 사용하여 템플릿 렌더링, 누락 된 템플릿 오류 발생 또는 &lt;code&gt;204 No Content&lt;/code&gt; 응답 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="5f26755f9baea0b86d2c7a04cf2ea08dea99177e" translate="yes" xml:space="preserve">
          <source>For an attacker, of course, this is not useful, as the victim will see their own cookie. The next example will try to load an image from the URL &lt;a href=&quot;http://www.attacker.com/&quot;&gt;http://www.attacker.com/&lt;/a&gt; plus the cookie. Of course this URL does not exist, so the browser displays nothing. But the attacker can review their web server's access log files to see the victim's cookie.</source>
          <target state="translated">물론 공격자에게는 피해자가 자신의 쿠키를 볼 수 있으므로 유용하지 않습니다. 다음 예제는 URL &lt;a href=&quot;http://www.attacker.com/&quot;&gt;http://www.attacker.com/&lt;/a&gt; 과 쿠키 에서 이미지를로드하려고 시도합니다 . 물론이 URL은 존재하지 않으므로 브라우저는 아무것도 표시하지 않습니다. 그러나 공격자는 웹 서버의 액세스 로그 파일을 검토하여 피해자의 쿠키를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5cf0aca39dc93ecd2e542900ba6ef327c3a3185" translate="yes" xml:space="preserve">
          <source>For an input of &lt;code&gt;'application'&lt;/code&gt;, returns &lt;code&gt;[Mime[:html], Mime[:js], Mime[:xml], Mime[:yaml], Mime[:atom],
Mime[:json], Mime[:rss], Mime[:url_encoded_form]&lt;/code&gt;.</source>
          <target state="translated">의 입력 용 &lt;code&gt;'application'&lt;/code&gt; , 복귀 &lt;code&gt;[Mime[:html], Mime[:js], Mime[:xml], Mime[:yaml], Mime[:atom], Mime[:json], Mime[:rss], Mime[:url_encoded_form]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f619e6e883062cd542c7646212939b88f9d7b987" translate="yes" xml:space="preserve">
          <source>For an input of &lt;code&gt;'text'&lt;/code&gt;, returns &lt;code&gt;[Mime[:json],
Mime[:xml], Mime[:ics], Mime[:html], Mime[:css], Mime[:csv], Mime[:js],
Mime[:yaml], Mime[:text]&lt;/code&gt;.</source>
          <target state="translated">의 입력 용 &lt;code&gt;'text'&lt;/code&gt; , 복귀 &lt;code&gt;[Mime[:json], Mime[:xml], Mime[:ics], Mime[:html], Mime[:css], Mime[:csv], Mime[:js], Mime[:yaml], Mime[:text]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="082dff27f19a82b3d87be40920fb464199499b2a" translate="yes" xml:space="preserve">
          <source>For any file added with &lt;code&gt;rails encrypted:edit&lt;/code&gt; call &lt;code&gt;read&lt;/code&gt; to decrypt the file with the master key. The master key is either stored in &lt;code&gt;config/master.key&lt;/code&gt; or &lt;code&gt;ENV[&quot;RAILS_MASTER_KEY&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails encrypted:edit&lt;/code&gt; 추가 된 파일의 경우 : 마스터 키로 파일을 해독 하려면 통화 &lt;code&gt;read&lt;/code&gt; 를 편집 하십시오 . 마스터 키는 &lt;code&gt;config/master.key&lt;/code&gt; 또는 &lt;code&gt;ENV[&quot;RAILS_MASTER_KEY&quot;]&lt;/code&gt; 에 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="16d26752c642996579bf038d8c203e189752946a" translate="yes" xml:space="preserve">
          <source>For associations to reference one another by name, you can use the fixture name instead of specifying the &lt;code&gt;id:&lt;/code&gt; attribute on the associated fixtures. Rails will auto assign a primary key to be consistent between runs. For more information on this association behavior please read the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API documentation&lt;/a&gt;.</source>
          <target state="translated">연관이 이름으로 서로를 참조하기 위해 연관된 조명기에서 &lt;code&gt;id:&lt;/code&gt; 속성을 지정하는 대신 조명기 이름을 사용할 수 있습니다 . Rails는 런간에 일관된 기본 키를 자동으로 할당합니다. 이 연관 동작에 대한 자세한 정보는 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API 문서&lt;/a&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="1098f27c8ef7ae7912308db5dd97ca40b959116f" translate="yes" xml:space="preserve">
          <source>For backwards compatibility.</source>
          <target state="translated">이전 버전과의 호환성을 위해.</target>
        </trans-unit>
        <trans-unit id="ec16a42f04f744d11d0a82df5d22d4b3fd300d5d" translate="yes" xml:space="preserve">
          <source>For cases where you may want to connect to a database outside of the model, you can use &lt;code&gt;connected_to&lt;/code&gt; with a &lt;code&gt;database&lt;/code&gt; argument. The &lt;code&gt;database&lt;/code&gt; argument expects a symbol that corresponds to the database key in your config.</source>
          <target state="translated">모델 외부의 데이터베이스에 연결하려는 경우 &lt;code&gt;database&lt;/code&gt; 인수 와 함께 &lt;code&gt;connected_to&lt;/code&gt; 를 사용할 수 있습니다 . &lt;code&gt;database&lt;/code&gt; 인수는 기대하고 귀하의 설정에서 데이터베이스 키에 해당하는 기호.</target>
        </trans-unit>
        <trans-unit id="66a8616d9c6b20605c5f326d3773ea1901499627" translate="yes" xml:space="preserve">
          <source>For collections rendered such:</source>
          <target state="translated">다음과 같이 렌더링 된 컬렉션의 경우 :</target>
        </trans-unit>
        <trans-unit id="1ea9d25b8081ac747b2f34d48957ab89bdc7b74e" translate="yes" xml:space="preserve">
          <source>For content that is shared among all pages in your application, you can use partials directly from layouts.</source>
          <target state="translated">응용 프로그램의 모든 페이지에서 공유되는 내용의 경우 레이아웃에서 직접 부분을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d38c6436d48efb2171e61e4ad2e08c22898571c" translate="yes" xml:space="preserve">
          <source>For convenience &lt;code&gt;class_attribute&lt;/code&gt; also defines an instance predicate which is the double negation of what the instance reader returns. In the examples above it would be called &lt;code&gt;x?&lt;/code&gt;.</source>
          <target state="translated">편의상 &lt;code&gt;class_attribute&lt;/code&gt; 는 인스턴스 리더가 리턴하는 것의 이중 부정 인 인스턴스 술어도 정의합니다. 위의 예에서는 &lt;code&gt;x?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3ab28284918f43aedd7e55ecddc2142a68c368e" translate="yes" xml:space="preserve">
          <source>For convenience reasons, mailers provide a shortcut for ActionController::UrlFor#url_for. So within mailers, you only have to type &lt;code&gt;url_for&lt;/code&gt; instead of 'ActionController::UrlFor#url_for' in full. However, mailers don't have hostname information, and you still have to provide the &lt;code&gt;:host&lt;/code&gt; argument or set the default host that will be used in all mailers using the configuration option &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt;. For more information on &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for&lt;/a&gt; in mailers read the ActionMailer#Base documentation.</source>
          <target state="translated">편의상 메일러는 ActionController :: UrlFor # url_for에 대한 바로 가기를 제공합니다. 따라서 메일러에서는 'ActionController :: UrlFor # url_for'대신 &lt;code&gt;url_for&lt;/code&gt; 만 입력 하면 됩니다. 그러나 메일러는 호스트 이름 정보를 가지고 있지 않으며, 여전히 &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt; 구성 옵션을 사용하여 모든 호스트가 사용할 호스트를 &lt;code&gt;:host&lt;/code&gt; 인수 를 제공 하거나 기본 호스트를 설정해야합니다 . 메일러의 &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for&lt;/a&gt; 에 대한 자세한 내용 은 ActionMailer # Base 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8778f7588cd5c084bd84cb8ee997efeb0cdb4353" translate="yes" xml:space="preserve">
          <source>For convenience reasons, mailers provide a shortcut for ActionController::UrlFor#url_for. So within mailers, you only have to type &lt;code&gt;url_for&lt;/code&gt; instead of 'ActionController::UrlFor#url_for' in full. However, mailers don't have hostname information, and you still have to provide the &lt;code&gt;:host&lt;/code&gt; argument or set the default host that will be used in all mailers using the configuration option &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt;. For more information on &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;&lt;code&gt;url_for&lt;/code&gt;&lt;/a&gt; in mailers read the ActionMailer#Base documentation.</source>
          <target state="translated">편의상 메일러는 ActionController :: UrlFor # url_for에 대한 바로 가기를 제공합니다. 따라서 메일러 내 에서 'ActionController :: UrlFor # url_for'대신 &lt;code&gt;url_for&lt;/code&gt; 만 입력 하면 됩니다. 그러나 메일러에는 호스트 이름 정보가 없으므로 여전히 &lt;code&gt;:host&lt;/code&gt; 인수 를 제공 하거나 구성 옵션 &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt; 를 사용하여 모든 메일러에서 사용할 기본 호스트를 설정해야합니다 . 메일러의 &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt; &lt;code&gt;url_for&lt;/code&gt; &lt;/a&gt; 에 대한 자세한 내용 은 ActionMailer # Base 문서를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="bd0724c7b15780dba73c5d667fdaee1258b7598b" translate="yes" xml:space="preserve">
          <source>For convenience, an instance predicate method is defined as well. To skip it, pass &lt;code&gt;instance_predicate: false&lt;/code&gt;.</source>
          <target state="translated">편의상 인스턴스 술어 메소드도 정의됩니다. 건너 뛰려면 &lt;code&gt;instance_predicate: false&lt;/code&gt; 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="6814ad5f45e05f234d12c7e5f13bb4e74c7f69a3" translate="yes" xml:space="preserve">
          <source>For creating Rails integration tests, we use the &lt;code&gt;test/integration&lt;/code&gt; directory for our application. Rails provides a generator to create an integration test skeleton for us.</source>
          <target state="translated">Rails 통합 테스트를 생성 하기 위해 애플리케이션에 &lt;code&gt;test/integration&lt;/code&gt; 디렉토리를 사용합니다 . Rails는 통합 테스트 스켈레톤을 생성하기위한 생성기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ba11a64102f043ec9929cba436a6e2209917fd9e" translate="yes" xml:space="preserve">
          <source>For creating Rails system tests, you use the &lt;code&gt;test/system&lt;/code&gt; directory in your application. Rails provides a generator to create a system test skeleton for you.</source>
          <target state="translated">Rails 시스템 테스트를 작성하려면 애플리케이션에서 &lt;code&gt;test/system&lt;/code&gt; 디렉토리를 사용하십시오. Rails는 시스템 테스트 스켈레톤을 생성하는 생성기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="be092b7fcc3a480411e1c8129b43d20c1d0a0551" translate="yes" xml:space="preserve">
          <source>For dealing with the integration test runner, see &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/Runner.html&quot;&gt;&lt;code&gt;ActionDispatch::Integration::Runner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">통합 테스트 러너를 처리하려면 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/Runner.html&quot;&gt; &lt;code&gt;ActionDispatch::Integration::Runner&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1348c58cf69f7ed1bfedaa08c497250897d8b430" translate="yes" xml:space="preserve">
          <source>For details on which formats use which options, see &lt;a href=&quot;numberhelper&quot;&gt;&lt;code&gt;ActiveSupport::NumberHelper&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">어떤 형식이 어떤 옵션을 사용하는지에 대한 자세한 내용은 &lt;a href=&quot;numberhelper&quot;&gt; &lt;code&gt;ActiveSupport::NumberHelper&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="80c24097fa1d78bb11621d9b5ca806a4e1837ced" translate="yes" xml:space="preserve">
          <source>For details on which formats use which options, see &lt;a href=&quot;numberhelper&quot;&gt;ActiveSupport::NumberHelper&lt;/a&gt;</source>
          <target state="translated">어떤 형식이 어떤 옵션을 사용하는지에 대한 자세한 내용은 &lt;a href=&quot;numberhelper&quot;&gt;ActiveSupport :: NumberHelper를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b00e2b8c47409365d97d4e6f528ec01bcde3521d" translate="yes" xml:space="preserve">
          <source>For each controller there is an associated directory in the &lt;code&gt;app/views&lt;/code&gt; directory which holds the template files that make up the views associated with that controller. These files are used to display the view that results from each controller action.</source>
          <target state="translated">각 컨트롤러마다 &lt;code&gt;app/views&lt;/code&gt; 디렉토리에 해당 디렉토리와 연관된 보기를 구성하는 템플리트 파일을 보유 하는 연관된 디렉토리 가 있습니다. 이 파일은 각 제어기 조치의 결과보기를 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2cecb5f25de0d043523d188ca061eb02e3555352" translate="yes" xml:space="preserve">
          <source>For each hash that does &lt;em&gt;not&lt;/em&gt; have an &lt;code&gt;id&lt;/code&gt; key a new record will be instantiated, unless the hash also contains a &lt;code&gt;_destroy&lt;/code&gt; key that evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">않는 각 해시 들어 &lt;em&gt;하지&lt;/em&gt; 이 &lt;code&gt;id&lt;/code&gt; 해시도 포함하지 않는 한, 새로운 기록 인스턴스화됩니다 키를 &lt;code&gt;_destroy&lt;/code&gt; 의 그 평가하여 핵심 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ef6f78942df1ab7a99ec3ab7779fcee5bd00b4f" translate="yes" xml:space="preserve">
          <source>For each of these helpers, you may specify a date or time object instead of a number as the default value, and the appropriate temporal component will be extracted and used.</source>
          <target state="translated">이러한 각 도우미에 대해 기본값으로 숫자 대신 날짜 또는 시간 개체를 지정할 수 있으며 적절한 시간 구성 요소가 추출되어 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2d6a6cfdf650d1f7334b2020902fa0a4e0153a" translate="yes" xml:space="preserve">
          <source>For ease of comparison the examples above left out the submit button, as well as the auto generated hidden fields that enable UTF-8 support and adds an authenticity token needed for cross site request forgery protection.</source>
          <target state="translated">쉽게 비교할 수 있도록 위의 예에서는 제출 단추와 UTF-8 지원을 가능하게하고 사이트 간 요청 위조 방지에 필요한 인증 토큰을 추가하는 자동 생성 된 숨겨진 필드를 생략했습니다.</target>
        </trans-unit>
        <trans-unit id="7a0f62db19f30623c30bc4c5827412523d0b10d8" translate="yes" xml:space="preserve">
          <source>For enqueuing and executing jobs in production you need to set up a queuing backend, that is to say you need to decide for a 3rd-party queuing library that Rails should use. Rails itself only provides an in-process queuing system, which only keeps the jobs in RAM. If the process crashes or the machine is reset, then all outstanding jobs are lost with the default async backend. This may be fine for smaller apps or non-critical jobs, but most production apps will need to pick a persistent backend.</source>
          <target state="translated">프로덕션 환경에서 작업을 대기열에 넣고 실행하려면 대기열에 백엔드를 설정해야합니다. 즉, Rails가 사용해야하는 타사 대기열 라이브러리를 결정해야합니다. Rails 자체는 프로세스 대기열 시스템 만 제공하며,이 시스템은 작업을 RAM에 보관합니다. 프로세스가 충돌하거나 머신이 재설정되면 기본 비동기 백엔드로 모든 미해결 작업이 유실됩니다. 소규모 앱이나 중요하지 않은 작업에는 문제가 없지만 대부분의 프로덕션 앱은 지속적인 백엔드를 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="31d8ce1d8fc6f2ecf0d84b77e0ccd30e15fd1f79" translate="yes" xml:space="preserve">
          <source>For enqueuing and executing jobs in production you need to set up a queuing backend, that is to say you need to decide on a 3rd-party queuing library that Rails should use. Rails itself only provides an in-process queuing system, which only keeps the jobs in RAM. If the process crashes or the machine is reset, then all outstanding jobs are lost with the default async backend. This may be fine for smaller apps or non-critical jobs, but most production apps will need to pick a persistent backend.</source>
          <target state="translated">프로덕션에서 작업을 대기열에 추가하고 실행하려면 대기열 백엔드를 설정해야합니다. 즉, Rails에서 사용해야하는 타사 대기열 라이브러리를 결정해야합니다. Rails 자체는 작업을 RAM에 보관하는 인 프로세스 대기열 시스템 만 제공합니다. 프로세스가 충돌하거나 시스템이 재설정되면 모든 미해결 작업이 기본 비동기 백엔드로 손실됩니다. 소규모 앱이나 중요하지 않은 작업에는 적합 할 수 있지만 대부분의 프로덕션 앱은 영구 백엔드를 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="d167a2a52bdbdd52a8b201c55c0c657d5293e77f" translate="yes" xml:space="preserve">
          <source>For every WebSocket accepted by the server, a connection object is instantiated. This object becomes the parent of all the &lt;em&gt;channel subscriptions&lt;/em&gt; that are created from there on. The connection itself does not deal with any specific application logic beyond authentication and authorization. The client of a WebSocket connection is called the connection &lt;em&gt;consumer&lt;/em&gt;. An individual user will create one consumer-connection pair per browser tab, window, or device they have open.</source>
          <target state="translated">서버에서 허용하는 모든 WebSocket에 대해 연결 개체가 인스턴스화됩니다. 이 개체는 여기에서 생성되는 모든 &lt;em&gt;채널 구독&lt;/em&gt; 의 부모 가됩니다. 연결 자체는 인증 및 권한 부여 이외의 특정 응용 프로그램 논리를 처리하지 않습니다. WebSocket 연결의 클라이언트를 연결 &lt;em&gt;소비자&lt;/em&gt; 라고합니다 . 개별 사용자는 브라우저 탭, 창 또는 열려있는 장치 당 하나의 소비자 연결 쌍을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8e682e2b778a8dbfb10273d2e9c331645794b73d" translate="yes" xml:space="preserve">
          <source>For every WebSocket connection the Action Cable server accepts, a &lt;code&gt;Connection&lt;/code&gt; object will be instantiated. This instance becomes the parent of all of the channel subscriptions that are created from there on. Incoming messages are then routed to these channel subscriptions based on an identifier sent by the Action Cable consumer. The &lt;code&gt;Connection&lt;/code&gt; itself does not deal with any specific application logic beyond authentication and authorization.</source>
          <target state="translated">Action Cable 서버가 수락하는 모든 WebSocket 연결에 대해 &lt;code&gt;Connection&lt;/code&gt; 개체가 인스턴스화됩니다. 이 인스턴스는 여기에서 생성되는 모든 채널 구독의 상위가됩니다. 수신 메시지는 Action Cable 소비자가 보낸 식별자를 기반으로 이러한 채널 구독으로 라우팅됩니다. &lt;code&gt;Connection&lt;/code&gt; 자체가 인증 및 권한 부여를 넘어 특정 애플리케이션 로직을 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb9a20b3c2af7b1f9af89bbaaaf814a196aae626" translate="yes" xml:space="preserve">
          <source>For every WebSocket connection the Action Cable server accepts, a Connection object will be instantiated. This instance becomes the parent of all of the channel subscriptions that are created from there on. Incoming messages are then routed to these channel subscriptions based on an identifier sent by the Action Cable consumer. The Connection itself does not deal with any specific application logic beyond authentication and authorization.</source>
          <target state="translated">Action Cable 서버가 허용하는 모든 WebSocket 연결에 대해 Connection 객체가 인스턴스화됩니다. 이 인스턴스는 거기서 생성 된 모든 채널 구독의 부모가됩니다. 그런 다음 수신 케이블은 Action Cable 소비자가 보낸 식별자를 기반으로 이러한 채널 구독으로 라우팅됩니다. Connection 자체는 인증 및 권한 부여 이외의 특정 응용 프로그램 논리를 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b53bd9e5262d08ab39415e772674388f395185ec" translate="yes" xml:space="preserve">
          <source>For every field (also known as an attribute) you define in your table, Active Record provides a finder method. If you have a field called &lt;code&gt;first_name&lt;/code&gt; on your &lt;code&gt;Client&lt;/code&gt; model for example, you get &lt;code&gt;find_by_first_name&lt;/code&gt; for free from Active Record. If you have a &lt;code&gt;locked&lt;/code&gt; field on the &lt;code&gt;Client&lt;/code&gt; model, you also get &lt;code&gt;find_by_locked&lt;/code&gt; method.</source>
          <target state="translated">테이블에 정의한 모든 필드 (속성이라고도 함)에 대해 Active Record는 파인더 메소드를 제공합니다. 당신이라는 필드가있는 경우 &lt;code&gt;first_name&lt;/code&gt; 당신의 &lt;code&gt;Client&lt;/code&gt; 예를 들어 모델을, 당신은 얻을 &lt;code&gt;find_by_first_name&lt;/code&gt; 을 액티브 레코드에서 무료로. &lt;code&gt;Client&lt;/code&gt; 모델 에 &lt;code&gt;locked&lt;/code&gt; 필드 가 있으면 &lt;code&gt;find_by_locked&lt;/code&gt; 메소드 도 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53ce0131956600f6d8b0d982090843e3ae7e2509" translate="yes" xml:space="preserve">
          <source>For every field (also known as an attribute) you define in your table, Active Record provides a finder method. If you have a field called &lt;code&gt;first_name&lt;/code&gt; on your &lt;code&gt;Customer&lt;/code&gt; model for example, you get the instance method &lt;code&gt;find_by_first_name&lt;/code&gt; for free from Active Record. If you also have a &lt;code&gt;locked&lt;/code&gt; field on the &lt;code&gt;Customer&lt;/code&gt; model, you also get &lt;code&gt;find_by_locked&lt;/code&gt; method.</source>
          <target state="translated">테이블에서 정의하는 모든 필드 (속성이라고도 함)에 대해 Active Record는 찾기 방법을 제공합니다. 당신이라는 필드가있는 경우 &lt;code&gt;first_name&lt;/code&gt; 당신의 &lt;code&gt;Customer&lt;/code&gt; , 예를 들어 모델을, 당신은 인스턴스 메소드 얻을 &lt;code&gt;find_by_first_name&lt;/code&gt; 을 액티브 레코드에서 무료로. &lt;code&gt;Customer&lt;/code&gt; 모델 에도 &lt;code&gt;locked&lt;/code&gt; 필드 가있는 경우 &lt;code&gt;find_by_locked&lt;/code&gt; 메서드도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="72f825998b8ea48ba6e57af6666f388f344c45f1" translate="yes" xml:space="preserve">
          <source>For every form input, an ID attribute is generated from its name (&lt;code&gt;&quot;q&quot;&lt;/code&gt; in above example). These IDs can be very useful for CSS styling or manipulation of form controls with JavaScript.</source>
          <target state="translated">모든 양식 입력에 대해 이름에서 ID 속성이 생성됩니다 ( 위 예에서 &lt;code&gt;&quot;q&quot;&lt;/code&gt; ). 이 ID는 CSS 스타일링 또는 JavaScript를 사용한 양식 컨트롤 조작에 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3f1bb2d1fc0e73d106dce92978cc0b789edcdc81" translate="yes" xml:space="preserve">
          <source>For every instance of your server you create and for every worker your server spawns, you will also have a new instance of Action Cable, but the use of Redis keeps messages synced across connections.</source>
          <target state="translated">사용자가 생성 한 모든 서버 인스턴스와 서버가 생성하는 모든 작업자에 대해 새로운 Action Cable 인스턴스가 있지만 Redis를 사용하면 연결간에 메시지가 동기화됩니다.</target>
        </trans-unit>
        <trans-unit id="b131d46a980c58a828cd718fe23664c9b290464e" translate="yes" xml:space="preserve">
          <source>For every request, the router determines the value of the &lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; keys. These determine which controller and action are called. The remaining request parameters, the session (if one is available), and the full request with all the HTTP headers are made available to the action through accessor methods. Then the action is performed.</source>
          <target state="translated">모든 요청에 ​​대해 라우터는 &lt;code&gt;controller&lt;/code&gt; 및 &lt;code&gt;action&lt;/code&gt; 키 의 값을 결정합니다 . 이것들은 어떤 컨트롤러와 액션이 호출되는지를 결정합니다. 나머지 요청 매개 변수, 세션 (사용 가능한 경우) 및 모든 HTTP 헤더가 포함 된 전체 요청은 액세서 메소드를 통해 조치에 사용 가능합니다. 그런 다음 작업이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="7a9ee99a2d46a1ade9d8c8f3457e7e52a88dc82b" translate="yes" xml:space="preserve">
          <source>For every single method defined as a core extension this guide has a note that says where such a method is defined. In the case of &lt;code&gt;blank?&lt;/code&gt; the note reads:</source>
          <target state="translated">핵심 확장으로 정의 된 모든 단일 메소드에 대해이 안내서에는 이러한 메소드가 정의 된 위치에 대한 참고 사항이 있습니다. &lt;code&gt;blank?&lt;/code&gt; 의 경우 ? 메모는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="06b2288ca9dc28befebd61b3de5c073f19acb9b6" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;ActionMailer::Base&lt;/code&gt; defines:</source>
          <target state="translated">예를 들어 &lt;code&gt;ActionMailer::Base&lt;/code&gt; 는 다음을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="f02fe19ccd76cbac2b638bd3e627674e8170c275" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; return themselves. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_param&quot;&gt;&lt;code&gt;Array#to_param&lt;/code&gt;&lt;/a&gt; calls &lt;code&gt;to_param&lt;/code&gt; on the elements and joins the result with &quot;/&quot;:</source>
          <target state="translated">예를 들어 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 는 자신을 반환합니다. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_param&quot;&gt; &lt;code&gt;Array#to_param&lt;/code&gt; &lt;/a&gt; 호출 &lt;code&gt;to_param&lt;/code&gt; 를 요소와 &quot;/&quot;로 결과를 조인</target>
        </trans-unit>
        <trans-unit id="524bf3ca9dadf5f247a4e2dc9bdde0724ffacf98" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; return themselves. &lt;code&gt;Array#to_param&lt;/code&gt; calls &lt;code&gt;to_param&lt;/code&gt; on the elements and joins the result with &quot;/&quot;:</source>
          <target state="translated">예를 들어 &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; 및 &lt;code&gt;false&lt;/code&gt; 는 스스로를 반환합니다. &lt;code&gt;Array#to_param&lt;/code&gt; 호출 &lt;code&gt;to_param&lt;/code&gt; 를 요소와 &quot;/&quot;로 결과를 조인</target>
        </trans-unit>
        <trans-unit id="c413fbbe5dd9cd3a858b2b4096dbe032a4a77e73" translate="yes" xml:space="preserve">
          <source>For example a Ruby Hash providing translations can look like this:</source>
          <target state="translated">예를 들어 번역을 제공하는 Ruby Hash는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="170196ddc4d09ce4cda34f4c4c5ee56ae2abcd1a" translate="yes" xml:space="preserve">
          <source>For example by overwriting the &lt;code&gt;source_paths&lt;/code&gt; method to contain the location of your template. Now methods like &lt;code&gt;copy_file&lt;/code&gt; will accept relative paths to your template's location.</source>
          <target state="translated">예를 들어, 템플릿의 위치를 ​​포함하도록 &lt;code&gt;source_paths&lt;/code&gt; 메서드를 덮어 씁니다 . 이제 &lt;code&gt;copy_file&lt;/code&gt; 과 같은 메소드는 템플릿 위치에 대한 상대 경로를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="de3e0784f50a9883d2ee2bc8d15f7c79df866699" translate="yes" xml:space="preserve">
          <source>For example if the response contains two ordered lists, each with four nested list elements then the following tests will both pass.</source>
          <target state="translated">예를 들어 응답에 두 개의 정렬 된 목록이 있고 각각 네 개의 중첩 된 목록 요소가있는 경우 다음 테스트가 모두 통과됩니다.</target>
        </trans-unit>
        <trans-unit id="8f20c4dda23afb7d89aae13ee9bf300fad784d5b" translate="yes" xml:space="preserve">
          <source>For example in</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="1b9c7d94226539f8fd01b1ea618c55e3afbb516c" translate="yes" xml:space="preserve">
          <source>For example it might be worth running your tests with an identical setup to production (&lt;code&gt;config.eager_load = true&lt;/code&gt;, &lt;code&gt;config.cache_classes = true&lt;/code&gt;) in order to catch any problems before they hit production (this is compensation for the lack of dev-prod parity). However this will slow down the boot time for individual tests on a dev machine (and is not immediately compatible with spring see below). So one possibility is to do this on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;CI&lt;/a&gt; machine only (which should run without spring).</source>
          <target state="translated">예를 들어 프로덕션 환경에 오기 전에 문제를 포착하기 위해 프로덕션 환경에 동일한 설정 ( &lt;code&gt;config.eager_load = true&lt;/code&gt; , &lt;code&gt;config.cache_classes = true&lt;/code&gt; )으로 테스트를 실행하는 것이 좋습니다 ( dev-prod 패리티 부족에 대한 보상입니다) ). 그러나 이것은 dev 머신에서 개별 테스트의 부팅 시간을 늦출 것입니다 (아래의 스프링과 즉시 호환되지는 않습니다). 따라서 &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;CI&lt;/a&gt; 시스템에서만 이 작업을 수행 할 수 있습니다 (스프링없이 실행해야 함).</target>
        </trans-unit>
        <trans-unit id="9a1f033634c9496c771fcdc1b0219b81a432b2f7" translate="yes" xml:space="preserve">
          <source>For example the &lt;code&gt;animals&lt;/code&gt; database would look for migrations in the &lt;code&gt;db/animals_migrate&lt;/code&gt; directory and &lt;code&gt;primary&lt;/code&gt; would look in &lt;code&gt;db/migrate&lt;/code&gt;. Rails generators now take a &lt;code&gt;--database&lt;/code&gt; option so that the file is generated in the correct directory. The command can be run like so:</source>
          <target state="translated">예를 들어 &lt;code&gt;animals&lt;/code&gt; 데이터베이스는 &lt;code&gt;db/animals_migrate&lt;/code&gt; 디렉토리 에서 &lt;code&gt;db/migrate&lt;/code&gt; 찾고 &lt;code&gt;primary&lt;/code&gt; 는 db / migrate 에서 찾습니다 . Rails 생성기는 이제 파일이 올바른 디렉토리에 생성되도록 &lt;code&gt;--database&lt;/code&gt; 옵션을 사용합니다. 명령은 다음과 같이 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="defc1940a4dd0193e647323988081968494c879e" translate="yes" xml:space="preserve">
          <source>For example the &lt;code&gt;animals&lt;/code&gt; database would look in the &lt;code&gt;db/animals_migrate&lt;/code&gt; directory and &lt;code&gt;primary&lt;/code&gt; would look in &lt;code&gt;db/migrate&lt;/code&gt;. Rails generators now take a &lt;code&gt;--database&lt;/code&gt; option so that the file is generated in the correct directory. The command can be run like so:</source>
          <target state="translated">예를 들어, &lt;code&gt;animals&lt;/code&gt; 데이터베이스는 &lt;code&gt;db/animals_migrate&lt;/code&gt; 디렉토리 에서 찾고 &lt;code&gt;primary&lt;/code&gt; 는 &lt;code&gt;db/migrate&lt;/code&gt; 에서 찾습니다 . Rails 생성기는 이제 &lt;code&gt;--database&lt;/code&gt; 옵션을 사용하여 파일이 올바른 디렉토리에 생성되도록합니다. 명령은 다음과 같이 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4164d6bdf84d42ceee89df70e0b8125f8655ce78" translate="yes" xml:space="preserve">
          <source>For example this:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1f34fa7be257762cd81671d8c28f862d285ae2b1" translate="yes" xml:space="preserve">
          <source>For example when you add the following translations:</source>
          <target state="translated">예를 들어 다음 번역을 추가 할 때</target>
        </trans-unit>
        <trans-unit id="bbdd64b6edc3015b0feb8ab4bbd89640d7033a07" translate="yes" xml:space="preserve">
          <source>For example you can define the following in your locale (e.g. en.yml).</source>
          <target state="translated">예를 들어 로케일에서 다음을 정의 할 수 있습니다 (예 : en.yml).</target>
        </trans-unit>
        <trans-unit id="f60c607e3474a7900b265d55fcc3418a0e547bdd" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;Post.all&lt;/code&gt; may return Comments, Messages, and Emails by storing the record's subclass in a &lt;code&gt;type&lt;/code&gt; attribute. By calling &lt;code&gt;instantiate&lt;/code&gt; instead of &lt;code&gt;new&lt;/code&gt;, finder methods ensure they get new instances of the appropriate class for each record.</source>
          <target state="translated">예를 들어 &lt;code&gt;Post.all&lt;/code&gt; 은 레코드의 하위 클래스를 &lt;code&gt;type&lt;/code&gt; 속성 에 저장하여 주석, 메시지 및 전자 메일을 반환 할 수 있습니다 . &lt;code&gt;new&lt;/code&gt; 대신 &lt;code&gt;instantiate&lt;/code&gt; 를 호출 하면 파인더 메소드는 각 레코드에 적합한 클래스의 새 인스턴스를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="eaf66d1a44d2101e495b85580babbc259bf80ce4" translate="yes" xml:space="preserve">
          <source>For example, Action Pack uses this method to load the class that provides a certain session store:</source>
          <target state="translated">예를 들어 Action Pack은이 메소드를 사용하여 특정 세션 저장소를 제공하는 클래스를로드합니다.</target>
        </trans-unit>
        <trans-unit id="6154e45261d0b097d4040e06da7bb873708d6ed7" translate="yes" xml:space="preserve">
          <source>For example, Action Pack uses this method to write asset cache files like &lt;code&gt;all.css&lt;/code&gt;:</source>
          <target state="translated">예를 들어 Action Pack은이 방법을 사용하여 &lt;code&gt;all.css&lt;/code&gt; 와 같은 자산 캐시 파일을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="f01913d378e84495849e02f59c9d9f6816d499c8" translate="yes" xml:space="preserve">
          <source>For example, MemCacheStore's &lt;a href=&quot;store#method-i-write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method supports the &lt;code&gt;:raw&lt;/code&gt; option, which tells the memcached server to store all values as strings. We can use this option with &lt;a href=&quot;store#method-i-fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt; too:</source>
          <target state="translated">예를 들어 MemCacheStore의 &lt;a href=&quot;store#method-i-write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메서드는 모든 값을 문자열로 저장하도록 memcached 서버에 지시하는 &lt;code&gt;:raw&lt;/code&gt; 옵션을 지원합니다 . 이 옵션을 &lt;a href=&quot;store#method-i-fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt; 에도 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27f7d44904c062a7f688e153aa6aa342262647e5" translate="yes" xml:space="preserve">
          <source>For example, MemCacheStore's &lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt; method supports the &lt;code&gt;:raw&lt;/code&gt; option, which tells the memcached server to store all values as strings. We can use this option with &lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt; too:</source>
          <target state="translated">예를 들어 MemCacheStore의 &lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt; 메소드는 &lt;code&gt;:raw&lt;/code&gt; 옵션을 지원 하여 memcached 서버에 모든 값을 문자열로 저장하도록 지시합니다. 이 옵션을 &lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt; 와 함께 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d3d5d287bffd32896b1c0eaa3c12bd6d88e384f" translate="yes" xml:space="preserve">
          <source>For example, RedCloth translates &lt;code&gt;_test_&lt;/code&gt; to &amp;lt;em&amp;gt;test&amp;lt;em&amp;gt;, which makes the text italic. However, up to the current version 3.0.4, it is still vulnerable to XSS. Get the &lt;a href=&quot;http://www.redcloth.org&quot;&gt;all-new version 4&lt;/a&gt; that removed serious bugs. However, even that version has &lt;a href=&quot;http://www.rorsecurity.info/journal/2008/10/13/new-redcloth-security.html&quot;&gt;some security bugs&lt;/a&gt;, so the countermeasures still apply. Here is an example for version 3.0.4:</source>
          <target state="translated">예를 들어 RedCloth는 &lt;code&gt;_test_&lt;/code&gt; 를 &amp;lt;em&amp;gt; test &amp;lt;em&amp;gt;으로 변환하여 텍스트를 기울임 꼴로 만듭니다. 그러나 현재 버전 3.0.4까지는 여전히 XSS에 취약합니다. 가져 오기 &lt;a href=&quot;http://www.redcloth.org&quot;&gt;모든 새로운 버전 4&lt;/a&gt; 심각한 버그를 제거했습니다. 그러나 해당 버전에도 &lt;a href=&quot;http://www.rorsecurity.info/journal/2008/10/13/new-redcloth-security.html&quot;&gt;일부 보안 버그&lt;/a&gt; 가 있으므로 대책이 여전히 적용됩니다. 다음은 버전 3.0.4의 예입니다.</target>
        </trans-unit>
        <trans-unit id="d4d3955f74ed045f84c7b155838dd250660b2cbf" translate="yes" xml:space="preserve">
          <source>For example, RedCloth translates &lt;code&gt;_test_&lt;/code&gt; to &lt;code&gt;&amp;lt;em&amp;gt;test&amp;lt;em&amp;gt;&lt;/code&gt;, which makes the text italic. However, up to the current version 3.0.4, it is still vulnerable to XSS. Get the &lt;a href=&quot;http://www.redcloth.org&quot;&gt;all-new version 4&lt;/a&gt; that removed serious bugs. However, even that version has &lt;a href=&quot;http://www.rorsecurity.info/journal/2008/10/13/new-redcloth-security.html&quot;&gt;some security bugs&lt;/a&gt;, so the countermeasures still apply. Here is an example for version 3.0.4:</source>
          <target state="translated">예를 들어 RedCloth는 &lt;code&gt;_test_&lt;/code&gt; 를 &lt;code&gt;&amp;lt;em&amp;gt;test&amp;lt;em&amp;gt;&lt;/code&gt; 변환 하여 텍스트를 기울임 꼴로 만듭니다. 그러나 현재 버전 3.0.4까지는 여전히 XSS에 취약합니다. 가져 오기 &lt;a href=&quot;http://www.redcloth.org&quot;&gt;모든 새로운 버전 4&lt;/a&gt; 심각한 버그를 제거했습니다. 그러나 해당 버전에도 &lt;a href=&quot;http://www.rorsecurity.info/journal/2008/10/13/new-redcloth-security.html&quot;&gt;보안 버그&lt;/a&gt; 가 있으므로 대책이 여전히 적용됩니다. 다음은 버전 3.0.4의 예입니다.</target>
        </trans-unit>
        <trans-unit id="b12eec00a4e2551721df22edd14a78ffe57682d1" translate="yes" xml:space="preserve">
          <source>For example, Twitter uses its &lt;a href=&quot;https://developer.twitter.com/&quot;&gt;public API&lt;/a&gt; in its web application, which is built as a static site that consumes JSON resources.</source>
          <target state="translated">예를 들어 Twitter는 웹 응용 프로그램에서 &lt;a href=&quot;https://developer.twitter.com/&quot;&gt;공개 API&lt;/a&gt; 를 사용하며,이 API 는 JSON 리소스를 사용하는 정적 사이트로 구축됩니다.</target>
        </trans-unit>
        <trans-unit id="53c9a73f0a024ecacf20e02eb9ca2d972148c7dc" translate="yes" xml:space="preserve">
          <source>For example, a controller would use it like this:</source>
          <target state="translated">예를 들어 컨트롤러는 다음과 같이 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fb02a3c0026a19d8bd25648a0ba6b337c4028ddb" translate="yes" xml:space="preserve">
          <source>For example, a proc can be used to match a range of times:</source>
          <target state="translated">예를 들어 proc을 사용하여 시간 범위를 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f36807628302cb7f63d61ec9b00c720c3a66328e" translate="yes" xml:space="preserve">
          <source>For example, an Active Record User with the &lt;code&gt;name&lt;/code&gt; attribute has a &lt;code&gt;name?&lt;/code&gt; method that you can call to determine whether the user has a name:</source>
          <target state="translated">예를 들어, &lt;code&gt;name&lt;/code&gt; 속성이있는 활성 레코드 사용자 는 &lt;code&gt;name?&lt;/code&gt; 사용자가 이름을 가지고 있는지 확인하기 위해 호출 할 수있는 메소드 :</target>
        </trans-unit>
        <trans-unit id="cd8ddc78651c1fe92b18ef46e19aa0d7820ac326" translate="yes" xml:space="preserve">
          <source>For example, an extension doing any of the following would need a railtie:</source>
          <target state="translated">예를 들어 다음 중 하나를 수행하는 확장 프로그램에는 레일이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="71ecf83b433a16d76fdbf6a525918a0408c7f7a4" translate="yes" xml:space="preserve">
          <source>For example, assuming &lt;code&gt;User&lt;/code&gt; is not yet loaded, the following will deadlock:</source>
          <target state="translated">예를 들어 &lt;code&gt;User&lt;/code&gt; 가 아직로드되지 않았다고 가정 하면 다음과 같은 교착 상태가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e6d6e2ba2b5ca72099050bc51954934eb60bffb4" translate="yes" xml:space="preserve">
          <source>For example, consider</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="5720879c0c094489b8e07786876daa4b930a6b9c" translate="yes" xml:space="preserve">
          <source>For example, consider the following &lt;code&gt;Category&lt;/code&gt;, &lt;code&gt;Article&lt;/code&gt;, &lt;code&gt;Comment&lt;/code&gt;, &lt;code&gt;Guest&lt;/code&gt; and &lt;code&gt;Tag&lt;/code&gt; models:</source>
          <target state="translated">예를 들어, 다음 &lt;code&gt;Category&lt;/code&gt; , &lt;code&gt;Article&lt;/code&gt; , &lt;code&gt;Comment&lt;/code&gt; , &lt;code&gt;Guest&lt;/code&gt; 및 &lt;code&gt;Tag&lt;/code&gt; 모델을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="5abbc53eb87a910fb8d7fa5fdf0d4aca34fda66f" translate="yes" xml:space="preserve">
          <source>For example, consider the following model declarations:</source>
          <target state="translated">예를 들어, 다음 모델 선언을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="44c06d067e94e94d58cc740894d6023d5a1b6889" translate="yes" xml:space="preserve">
          <source>For example, consider the following situation:</source>
          <target state="translated">예를 들어 다음 상황을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="2a73be60895a600be896f0c57ef39e8b845fc9df" translate="yes" xml:space="preserve">
          <source>For example, given</source>
          <target state="translated">예를 들어, 주어진</target>
        </trans-unit>
        <trans-unit id="3f70c84ca388e65cf93ecde1b7ce6555b37b8c51" translate="yes" xml:space="preserve">
          <source>For example, given a form builder:</source>
          <target state="translated">예를 들어, 양식 빌더가 제공된 경우 :</target>
        </trans-unit>
        <trans-unit id="5d702ce4ea2a9355c7a77e5b441c13b923ca4449" translate="yes" xml:space="preserve">
          <source>For example, given a model &lt;code&gt;User&lt;/code&gt; with attributes of &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;occupation&lt;/code&gt;, the &lt;code&gt;create&lt;/code&gt; method call will create and save a new record into the database:</source>
          <target state="translated">예를 들어, &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;occupation&lt;/code&gt; 속성이있는 &lt;code&gt;User&lt;/code&gt; 모델이 있는 경우 &lt;code&gt;create&lt;/code&gt; 메소드 호출은 새 레코드를 작성하여 데이터베이스에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="5b78f964eb518c9469a449c41552f6df4d3de769" translate="yes" xml:space="preserve">
          <source>For example, given a model where you want to drop the &amp;ldquo;category&amp;rdquo; attribute, first mark it as ignored:</source>
          <target state="translated">예를 들어 &quot;category&quot;속성을 삭제하려는 모델이있는 경우 먼저 무시 된 것으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="64569a533ba06e7284237e51230e081160c7bb88" translate="yes" xml:space="preserve">
          <source>For example, given this &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Enum.html#method-i-enum&quot;&gt;&lt;code&gt;enum&lt;/code&gt;&lt;/a&gt; declaration:</source>
          <target state="translated">예를 들어 다음 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Enum.html#method-i-enum&quot;&gt; &lt;code&gt;enum&lt;/code&gt; &lt;/a&gt; 선언이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="34bf18f557c03a50fd99ecfb17e5272886b2287f" translate="yes" xml:space="preserve">
          <source>For example, given we have a &lt;code&gt;users&lt;/code&gt; table with &lt;code&gt;guid&lt;/code&gt; as the primary key. If we want a separate &lt;code&gt;todos&lt;/code&gt; table to hold the foreign key &lt;code&gt;user_id&lt;/code&gt; in the &lt;code&gt;guid&lt;/code&gt; column, then we can use &lt;code&gt;primary_key&lt;/code&gt; to achieve this like so:</source>
          <target state="translated">예를 들어 &lt;code&gt;guid&lt;/code&gt; 를 기본 키로 사용 하는 &lt;code&gt;users&lt;/code&gt; 테이블 이 있다고 가정합니다 . 우리는 별도의 원하는 경우 &lt;code&gt;todos&lt;/code&gt; 표는 외래 키 개최 &lt;code&gt;user_id&lt;/code&gt; 에 &lt;code&gt;guid&lt;/code&gt; 열, 우리는 사용할 수 &lt;code&gt;primary_key&lt;/code&gt; 와 과 같이이를 달성하기 위해 :</target>
        </trans-unit>
        <trans-unit id="22c7c440681326a44ffce536da1a198f33839b8a" translate="yes" xml:space="preserve">
          <source>For example, here's a pattern of creating notifications when new comments are posted. (The notification may in turn trigger an email, a push notification, or just appear in the UI somewhere):</source>
          <target state="translated">예를 들어 다음은 새 댓글이 게시 될 때 알림을 작성하는 패턴입니다. (알림은 차례로 이메일, 푸시 알림을 트리거하거나 UI 어딘가에 나타날 수 있습니다) :</target>
        </trans-unit>
        <trans-unit id="a2fca68232055287dee2b01c190d9af0dfc643ba" translate="yes" xml:space="preserve">
          <source>For example, here's a small section of the &lt;code&gt;bin/rails routes&lt;/code&gt; output for a RESTful route:</source>
          <target state="translated">예를 들어 다음 은 RESTful 경로에 대한 &lt;code&gt;bin/rails routes&lt;/code&gt; 출력 의 작은 섹션입니다 .</target>
        </trans-unit>
        <trans-unit id="8e1aca8cba6f8183d74233f15b01caf147dec177" translate="yes" xml:space="preserve">
          <source>For example, here's a small section of the &lt;code&gt;rails routes&lt;/code&gt; output for a RESTful route:</source>
          <target state="translated">예를 들어, 다음 은 RESTful 경로에 대한 &lt;code&gt;rails routes&lt;/code&gt; 출력 의 작은 섹션입니다 .</target>
        </trans-unit>
        <trans-unit id="7f94503578c2fbc3b86e869fc30148b6a6329e29" translate="yes" xml:space="preserve">
          <source>For example, here's some code that will trigger this error:</source>
          <target state="translated">예를 들어이 오류를 발생시키는 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bf5d03ceef19f28d80efa1487f18c1a8d026069c" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;UsersHelper&lt;/code&gt; is implemented in &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt;, the module is autoloadable, you do not need (and should not write) a &lt;code&gt;require&lt;/code&gt; call for it:</source>
          <target state="translated">예를 들어, &lt;code&gt;UsersHelper&lt;/code&gt; 가 &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt; 에 구현 된 경우 , 모듈은 자동로드 가능하며, &lt;code&gt;require&lt;/code&gt; 호출 이 필요 하지 않으며 작성하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="b375441949d8cc18b809e9a7067ce453aaacc656" translate="yes" xml:space="preserve">
          <source>For example, if an initializer stores and caches a certain class object</source>
          <target state="translated">예를 들어, 이니셜 라이저가 특정 클래스 객체를 저장하고 캐시하는 경우</target>
        </trans-unit>
        <trans-unit id="d6fbc159e5997fbbb3a0a980d619a1d1945deb4f" translate="yes" xml:space="preserve">
          <source>For example, if each supplier in your application has only one account, you'd declare the supplier model like this:</source>
          <target state="translated">예를 들어 애플리케이션의 각 공급 업체에 하나의 계정 만있는 경우 다음과 같이 공급 업체 모델을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="f0d467439f1634faea77923c6458790d1b88215b" translate="yes" xml:space="preserve">
          <source>For example, if the following templates exist:</source>
          <target state="translated">예를 들어 다음과 같은 템플릿이있는 경우</target>
        </trans-unit>
        <trans-unit id="b153b66cd2b084d8e0224d5dde74d748867621b7" translate="yes" xml:space="preserve">
          <source>For example, if the user invoke the controller generator as:</source>
          <target state="translated">예를 들어, 사용자가 다음과 같이 컨트롤러 생성기를 호출하는 경우</target>
        </trans-unit>
        <trans-unit id="c390bd482a93ce5733a8ce30310b3833619189c6" translate="yes" xml:space="preserve">
          <source>For example, if this code triggers autoloading</source>
          <target state="translated">예를 들어이 코드가 자동로드를 트리거하는 경우</target>
        </trans-unit>
        <trans-unit id="9ac1d7c152b8b5872b72d15664fe6ebda91004f8" translate="yes" xml:space="preserve">
          <source>For example, if we have a &lt;code&gt;User&lt;/code&gt; model with &lt;code&gt;category_ids&lt;/code&gt; field and we have the following code in our update action:</source>
          <target state="translated">예를 들어, &lt;code&gt;category_ids&lt;/code&gt; 필드 가있는 &lt;code&gt;User&lt;/code&gt; 모델 이 있고 업데이트 조치에 다음 코드가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="5a3271be1fa5f37381a3eecd0466074ae33e476c" translate="yes" xml:space="preserve">
          <source>For example, if we have an &lt;code&gt;@article&lt;/code&gt; model object like:</source>
          <target state="translated">예를 들어, 다음 과 같은 &lt;code&gt;@article&lt;/code&gt; 모델 객체 가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="9527832e1e9fcfe3bb90b44513273f467f05cf86" translate="yes" xml:space="preserve">
          <source>For example, if you generate a &lt;code&gt;ProjectsController&lt;/code&gt;, Rails will also add a new file at &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt;. By default these files will be ready to use by your application immediately using the &lt;code&gt;require_tree&lt;/code&gt; directive. See &lt;a href=&quot;#manifest-files-and-directives&quot;&gt;Manifest Files and Directives&lt;/a&gt; for more details on require_tree.</source>
          <target state="translated">예를 들어 &lt;code&gt;ProjectsController&lt;/code&gt; 를 생성하면 Rails는 &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; 에 새 파일도 추가합니다 . 기본적으로 이러한 파일은 &lt;code&gt;require_tree&lt;/code&gt; 지시문을 사용하여 응용 프로그램에서 즉시 사용할 수 있습니다. require_tree에 대한 자세한 내용 은 &lt;a href=&quot;#manifest-files-and-directives&quot;&gt;매니페스트 파일 및 지시문&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e3de426c9f417afe3d71314ad675f3b5749bf7b" translate="yes" xml:space="preserve">
          <source>For example, if you have a jQuery library with many modules, which is stored in &lt;code&gt;lib/assets/javascripts/library_name&lt;/code&gt;, the file &lt;code&gt;lib/assets/javascripts/library_name/index.js&lt;/code&gt; serves as the manifest for all files in this library. This file could include a list of all the required files in order, or a simple &lt;code&gt;require_tree&lt;/code&gt; directive.</source>
          <target state="translated">당신이 저장되어있는 많은 모듈과 jQuery 라이브러리이있는 경우 예를 들어, &lt;code&gt;lib/assets/javascripts/library_name&lt;/code&gt; , 파일 &lt;code&gt;lib/assets/javascripts/library_name/index.js&lt;/code&gt; 이 라이브러리에있는 모든 파일에 대한 매니페스트 역할을합니다. 이 파일에는 필요한 모든 파일 목록이 순서대로 포함되거나 간단한 &lt;code&gt;require_tree&lt;/code&gt; 지시문 이 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6ddeb14e2a35362bc4455266673f721c7a9ab04" translate="yes" xml:space="preserve">
          <source>For example, if you need to source a gem from &lt;code&gt;&quot;http://gems.github.com&quot;&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;&quot;http://gems.github.com&quot;&lt;/code&gt; 에서 gem을 제공해야하는 경우 :</target>
        </trans-unit>
        <trans-unit id="6659ed58a0e23d309c2880738533927eaf158f0e" translate="yes" xml:space="preserve">
          <source>For example, if you want to find a collection of the dates on which orders were created:</source>
          <target state="translated">예를 들어, 주문이 작성된 날짜 콜렉션을 찾으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9a671054948cc7afeffc8e29a1070a79e25d5ddf" translate="yes" xml:space="preserve">
          <source>For example, if you want to load &lt;code&gt;rspec-rails&lt;/code&gt; only in the &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; groups:</source>
          <target state="translated">예를 들어, &lt;code&gt;development&lt;/code&gt; 및 &lt;code&gt;test&lt;/code&gt; 그룹 에서만 &lt;code&gt;rspec-rails&lt;/code&gt; 을로드하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="f7dd3a783227cfeb7097ea5857fe80f176b221fe" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to cache each product on a page, you could use this code:</source>
          <target state="translated">예를 들어, 페이지에서 각 제품을 캐시하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d8f0559e6fd22508415f77cad6b8ee5d7057fed" translate="yes" xml:space="preserve">
          <source>For example, if you're getting a set of records and want to order them in ascending order by the &lt;code&gt;created_at&lt;/code&gt; field in your table:</source>
          <target state="translated">예를 들어, 레코드 세트를 가져 와서 테이블 의 &lt;code&gt;created_at&lt;/code&gt; 필드에 따라 오름차순으로 정렬하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="1a3f9cf891059c22ed145464705ba954596ae85f" translate="yes" xml:space="preserve">
          <source>For example, if you're in a console session and edit some file behind the scenes, the code can be reloaded with the &lt;code&gt;reload!&lt;/code&gt; command:</source>
          <target state="translated">예를 들어, 콘솔 세션에 있고 장면 뒤에서 일부 파일을 편집하면 코드를 다시로드하여 다시로드 할 수 있습니다 &lt;code&gt;reload!&lt;/code&gt; 명령:</target>
        </trans-unit>
        <trans-unit id="782fec9b21b7646dda3d0eb34ec8b2d6162d8ebb" translate="yes" xml:space="preserve">
          <source>For example, if your application depends on the gems &lt;code&gt;bj&lt;/code&gt; and &lt;code&gt;nokogiri&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 애플리케이션이 gem &lt;code&gt;bj&lt;/code&gt; 및 &lt;code&gt;nokogiri&lt;/code&gt; 에 의존하는 경우 :</target>
        </trans-unit>
        <trans-unit id="7169085c220c519e1edea4ed09c8fa931b19c7ce" translate="yes" xml:space="preserve">
          <source>For example, imagine a loop iterating over each person in &lt;code&gt;@project.people&lt;/code&gt; to generate an input tag:</source>
          <target state="translated">예를 들어, &lt;code&gt;@project.people&lt;/code&gt; 각 사용자를 반복 하여 입력 태그를 생성하는 루프를 상상해보십시오 .</target>
        </trans-unit>
        <trans-unit id="2905bc04aacafe3526782bf59ac3eed7ed47b8b9" translate="yes" xml:space="preserve">
          <source>For example, in &lt;code&gt;classic&lt;/code&gt; mode defining classes or modules in namespaces with qualified constants this way</source>
          <target state="translated">예를 들어, &lt;code&gt;classic&lt;/code&gt; 모드에서 이러한 방식으로 정규화 된 상수를 사용하여 네임 스페이스의 클래스 또는 모듈을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="efcfb301607d26518c50a702c119e7c9a0df3c39" translate="yes" xml:space="preserve">
          <source>For example, in a controller:</source>
          <target state="translated">예를 들어, 컨트롤러에서 :</target>
        </trans-unit>
        <trans-unit id="f8cbf57c9587f427c012838696f67e39dc0f8fc0" translate="yes" xml:space="preserve">
          <source>For example, in a website where changes have an approval workflow an administrator could be able to preview them easily, just apply them within a transaction:</source>
          <target state="translated">예를 들어, 변경 사항에 승인 워크 플로가있는 웹 사이트에서 관리자는 변경 내용을 쉽게 미리 볼 수 있으며 트랜잭션 내에 적용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="e6ed0f4dcda9c5cec61ea8e10efd86b7c7e49bf1" translate="yes" xml:space="preserve">
          <source>For example, in a website where changes have an approval workflow, an administrator could preview them easily by applying them within a transaction:</source>
          <target state="translated">예를 들어, 변경 사항에 승인 워크 플로가있는 웹 사이트에서 관리자는 트랜잭션 내에서 변경 사항을 적용하여 쉽게 미리 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d6e63bf405ff82c5a72da7af38f2f421fa09608" translate="yes" xml:space="preserve">
          <source>For example, in order to override the engine model</source>
          <target state="translated">예를 들어 엔진 모델을 재정의하려면</target>
        </trans-unit>
        <trans-unit id="e951031c44cba831fe22b1d299a3dbdd271956ba" translate="yes" xml:space="preserve">
          <source>For example, in the previous situation</source>
          <target state="translated">예를 들어, 이전 상황에서</target>
        </trans-unit>
        <trans-unit id="36d128602c2cef23c043bbcd4130bfdbe9dfb553" translate="yes" xml:space="preserve">
          <source>For example, in the resource generator, the controller should be invoked with a pluralized class name. But by default it is invoked with the same name as the resource generator, which is singular. To change this, we can give a block to customize how the controller can be invoked.</source>
          <target state="translated">예를 들어, 리소스 생성기에서 컨트롤러는 복수 클래스 이름으로 호출해야합니다. 그러나 기본적으로 단일 이름 인 자원 생성기와 동일한 이름으로 호출됩니다. 이를 변경하기 위해 컨트롤러 호출 방법을 사용자 정의하는 블록을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8571fb001c03edee3f9a1dff5eb161b62067de8" translate="yes" xml:space="preserve">
          <source>For example, instead of:</source>
          <target state="translated">예를 들어,</target>
        </trans-unit>
        <trans-unit id="1b439da15a9be37391ce2b6a2e5716c35650e42e" translate="yes" xml:space="preserve">
          <source>For example, let's say we have a list of cities for the user to choose from. We can use the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; helper like so:</source>
          <target state="translated">예를 들어 사용자가 선택할 수있는 도시 목록이 있다고 가정 해 보겠습니다. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt; 도우미를 다음과 같이 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88b214eaacb21e54b79699baf45df9ed09ba848e" translate="yes" xml:space="preserve">
          <source>For example, let's say we have a standard application layout, but also a special page that requires certain JavaScript that the rest of the site doesn't need. We can use &lt;code&gt;content_for&lt;/code&gt; to include this JavaScript on our special page without fattening up the rest of the site.</source>
          <target state="translated">예를 들어 표준 응용 프로그램 레이아웃이 있지만 사이트의 나머지 부분에는 필요하지 않은 특정 JavaScript가 필요한 특수 페이지가 있다고 가정 해 봅시다. 우리는 &lt;code&gt;content_for&lt;/code&gt; 를 사용 하여 사이트의 나머지 부분을 정리하지 않고도 특수 페이지에이 JavaScript를 포함 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a9881d30ebc25cc189703f067fb870c32f67e33" translate="yes" xml:space="preserve">
          <source>For example, let's suppose you want to place your controllers in &lt;code&gt;lib/controllers&lt;/code&gt;. You can set that as an option:</source>
          <target state="translated">예를 들어 컨트롤러를 &lt;code&gt;lib/controllers&lt;/code&gt; 에 배치한다고 가정 해 봅시다 . 옵션으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bafcdf5aa866e5cc3911b99b712779009517427" translate="yes" xml:space="preserve">
          <source>For example, posts that are missing a related author:</source>
          <target state="translated">예를 들어 관련 작성자가 누락 된 게시물은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a74c1e94448cc74dbce02c6fa10a73825bf08b3" translate="yes" xml:space="preserve">
          <source>For example, running</source>
          <target state="translated">예를 들어, 달리기</target>
        </trans-unit>
        <trans-unit id="bbedede484566197089ec444807b7fef28561224" translate="yes" xml:space="preserve">
          <source>For example, shoulda is considered a test_framework and is an extension of test_unit. However, most part of shoulda generators are similar to test_unit ones.</source>
          <target state="translated">예를 들어 shoulda는 test_framework로 간주되며 test_unit의 확장입니다. 그러나 shoulda 생성기의 대부분은 test_unit 생성기와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="010460143995bd631fd29219aa3815c4c396ec21" translate="yes" xml:space="preserve">
          <source>For example, something like</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="78a3ab5bfacf66d125db92261ba899909863fec8" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have 5 models, with the following hierarchy:</source>
          <target state="translated">예를 들어, 다음 계층 구조를 가진 5 개의 모델이 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="6bbfc9324e0a230cb4f88f2e8997c7d8401ca77a" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have a User model, and that you have a &lt;code&gt;resources :users&lt;/code&gt; route. Normally, &lt;code&gt;user_path&lt;/code&gt; will construct a path with the user object's 'id' in it:</source>
          <target state="translated">예를 들어, User 모델이 있고 &lt;code&gt;resources :users&lt;/code&gt; 라우트 가 있다고 가정하십시오 . 일반적으로 &lt;code&gt;user_path&lt;/code&gt; 는 사용자 객체의 'id'가 포함 된 경로를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="68db63f6b91bd3f69689a588ca99fef570cbdc01" translate="yes" xml:space="preserve">
          <source>For example, suppose you have an &lt;code&gt;ArticlesController&lt;/code&gt; with a show action. By default, calling this action will render &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;. But if you set &lt;code&gt;I18n.locale = :de&lt;/code&gt;, then &lt;code&gt;app/views/articles/show.de.html.erb&lt;/code&gt; will be rendered instead. If the localized template isn't present, the undecorated version will be used. This means you're not required to provide localized views for all cases, but they will be preferred and used if available.</source>
          <target state="translated">예를 들어, show 조치 가있는 &lt;code&gt;ArticlesController&lt;/code&gt; 가 있다고 가정하십시오 . 기본적으로이 작업을 호출하면 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 가 렌더링 됩니다 . 사용자가 설정하지만 &lt;code&gt;I18n.locale = :de&lt;/code&gt; , 다음 &lt;code&gt;app/views/articles/show.de.html.erb&lt;/code&gt; 대신 렌더링됩니다. 현지화 된 템플릿이 없으면 데코레이션되지 않은 버전이 사용됩니다. 즉, 모든 경우에 대해 현지화 된보기를 제공 할 필요는 없지만 가능하면 선호되고 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c12e578c04af498b50aad3f4930bbd0596b6b9e9" translate="yes" xml:space="preserve">
          <source>For example, suppose your application has a &lt;code&gt;Message&lt;/code&gt; model. If you want each message to have many images, define the &lt;code&gt;Message&lt;/code&gt; model like this:</source>
          <target state="translated">예를 들어, 응용 프로그램에 &lt;code&gt;Message&lt;/code&gt; 모델 이 있다고 가정하십시오 . 각 메시지에 많은 이미지가 포함되도록하려면 다음 과 같이 &lt;code&gt;Message&lt;/code&gt; 모델을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="e856ca406a28871271dfd09494fffd474135afe9" translate="yes" xml:space="preserve">
          <source>For example, suppose your application has a &lt;code&gt;User&lt;/code&gt; model. If you want each user to have an avatar, define the &lt;code&gt;User&lt;/code&gt; model like this:</source>
          <target state="translated">예를 들어, 응용 프로그램에 &lt;code&gt;User&lt;/code&gt; 모델 이 있다고 가정하십시오 . 각 사용자가 아바타를 갖도록하려면 다음 과 같이 &lt;code&gt;User&lt;/code&gt; 모델을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="4845e35b532e0a6ae9c9a6d5abf067c22b3f608c" translate="yes" xml:space="preserve">
          <source>For example, take the following view:</source>
          <target state="translated">예를 들어 다음과 같은보기를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="80e06363e5de0de055babf944403b3f5a3aa2393" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;NetworkResource&lt;/code&gt; model has &lt;code&gt;network_address&lt;/code&gt; and &lt;code&gt;cidr_range&lt;/code&gt; attributes that should be aggregated using the &lt;code&gt;NetAddr::CIDR&lt;/code&gt; value class (&lt;a href=&quot;http://www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&quot;&gt;www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&lt;/a&gt;). The constructor for the value class is called &lt;code&gt;create&lt;/code&gt; and it expects a CIDR address string as a parameter. New values can be assigned to the value object using either another &lt;code&gt;NetAddr::CIDR&lt;/code&gt; object, a string or an array. The &lt;code&gt;:constructor&lt;/code&gt; and &lt;code&gt;:converter&lt;/code&gt; options can be used to meet these requirements:</source>
          <target state="translated">예를 들어, &lt;code&gt;NetworkResource&lt;/code&gt; 모델에는 &lt;code&gt;NetAddr::CIDR&lt;/code&gt; 값 클래스 ( &lt;a href=&quot;http://www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&quot;&gt;www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&lt;/a&gt; )를 사용하여 집계해야하는 &lt;code&gt;network_address&lt;/code&gt; 및 &lt;code&gt;cidr_range&lt;/code&gt; 속성이 있습니다 . 값 클래스의 생성자는 &lt;code&gt;create&lt;/code&gt; 라고 하며 CIDR 주소 문자열을 매개 변수로 예상합니다. 다른 &lt;code&gt;NetAddr::CIDR&lt;/code&gt; 객체, 문자열 또는 배열을 사용하여 값 객체에 새 값을 할당 할 수 있습니다 . &lt;code&gt;:constructor&lt;/code&gt; 와 &lt;code&gt;:converter&lt;/code&gt; 옵션은 이러한 요구 사항을 충족하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0b71f7d6bfdd7fb47942cfd63208d4f23e777aa2" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;NetworkResource&lt;/code&gt; model has &lt;code&gt;network_address&lt;/code&gt; and &lt;code&gt;cidr_range&lt;/code&gt; attributes that should be aggregated using the &lt;code&gt;NetAddr::CIDR&lt;/code&gt; value class (&lt;a href=&quot;https://www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&quot;&gt;www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&lt;/a&gt;). The constructor for the value class is called &lt;code&gt;create&lt;/code&gt; and it expects a CIDR address string as a parameter. New values can be assigned to the value object using either another &lt;code&gt;NetAddr::CIDR&lt;/code&gt; object, a string or an array. The &lt;code&gt;:constructor&lt;/code&gt; and &lt;code&gt;:converter&lt;/code&gt; options can be used to meet these requirements:</source>
          <target state="translated">예를 들어 &lt;code&gt;NetworkResource&lt;/code&gt; 모델에는 &lt;code&gt;NetAddr::CIDR&lt;/code&gt; 값 클래스 ( &lt;a href=&quot;https://www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&quot;&gt;www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&lt;/a&gt; )를 사용하여 집계해야하는 &lt;code&gt;network_address&lt;/code&gt; 및 &lt;code&gt;cidr_range&lt;/code&gt; 속성이 있습니다 . 값 클래스의 생성자는 &lt;code&gt;create&lt;/code&gt; 라고 하며 CIDR 주소 문자열을 매개 변수로 예상합니다. 다른 &lt;code&gt;NetAddr::CIDR&lt;/code&gt; 개체, 문자열 또는 배열을 사용하여 값 개체에 새 값을 할당 할 수 있습니다 . &lt;code&gt;:constructor&lt;/code&gt; 와 &lt;code&gt;:converter&lt;/code&gt; 옵션은 이러한 요구 사항을 충족하는 데 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="67f87ec70b0394b6278116e1b6cbea8b351e6a69" translate="yes" xml:space="preserve">
          <source>For example, the dependencies mechanism uses them:</source>
          <target state="translated">예를 들어, 종속성 메커니즘은 다음을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e53b6db9fd02c64bffe49a780016740ac429fb42" translate="yes" xml:space="preserve">
          <source>For example, the file &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt; should define &lt;code&gt;UsersHelper&lt;/code&gt; and the file &lt;code&gt;app/controllers/admin/payments_controller.rb&lt;/code&gt; should define &lt;code&gt;Admin::PaymentsController&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 파일 &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt; 정의해야 &lt;code&gt;UsersHelper&lt;/code&gt; 및 파일 &lt;code&gt;app/controllers/admin/payments_controller.rb&lt;/code&gt; 정의해야 &lt;code&gt;Admin::PaymentsController&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6fd907db20ec40e116bd681b46742c041fc1078" translate="yes" xml:space="preserve">
          <source>For example, the file cache store deserializes this way:</source>
          <target state="translated">예를 들어, 파일 캐시 저장소는 다음과 같이 직렬화를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="490a67d0890a942494c7806a48b87974455d4a27" translate="yes" xml:space="preserve">
          <source>For example, the following code would raise this exception:</source>
          <target state="translated">예를 들어 다음 코드는이 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="6e0bf0da571ebaa2761cff539a8aeec320175f38" translate="yes" xml:space="preserve">
          <source>For example, the following database.yml&amp;hellip;</source>
          <target state="translated">예를 들어, 다음 database.yml&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="97eee7a0d4a084452cc8f1838f80f6a2969b9586" translate="yes" xml:space="preserve">
          <source>For example, the following demo integration test prints the body of the controller response to the console:</source>
          <target state="translated">예를 들어, 다음 데모 통합 테스트는 컨트롤러 응답의 본문을 콘솔에 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="490f24b70c9dbfd4d048b909cc4d0a3848bd6feb" translate="yes" xml:space="preserve">
          <source>For example, the following escaped ERB tag would be needed in the template (note the extra &lt;code&gt;%&lt;/code&gt;)...</source>
          <target state="translated">예를 들어 템플릿에 다음 이스케이프 된 ERB 태그가 필요합니다 (추가 &lt;code&gt;%&lt;/code&gt; 참고 ).</target>
        </trans-unit>
        <trans-unit id="f06e230ea0a7d2054b21c224c8a3198aa9211615" translate="yes" xml:space="preserve">
          <source>For example, the following routes would allow for &lt;code&gt;articles&lt;/code&gt; with &lt;code&gt;to_param&lt;/code&gt; values like &lt;code&gt;1-hello-world&lt;/code&gt; that always begin with a number and &lt;code&gt;users&lt;/code&gt; with &lt;code&gt;to_param&lt;/code&gt; values like &lt;code&gt;david&lt;/code&gt; that never begin with a number to share the root namespace:</source>
          <target state="translated">예를 들어, 다음 경로는 항상 숫자로 시작하는 &lt;code&gt;1-hello-world&lt;/code&gt; 와 같은 &lt;code&gt;to_param&lt;/code&gt; 값을 가진 &lt;code&gt;articles&lt;/code&gt; 와 루트 네임 스페이스를 공유하기 위해 숫자로 시작하지 않는 &lt;code&gt;david&lt;/code&gt; 와 같은 &lt;code&gt;to_param&lt;/code&gt; 값을 가진 &lt;code&gt;users&lt;/code&gt; 를 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="9941c9fe1adbe50c3828b65548ca33f878b31284" translate="yes" xml:space="preserve">
          <source>For example, the parent namespace of the string &quot;A::B::C&quot; is the string &quot;A::B&quot;, the parent namespace of &quot;A::B&quot; is &quot;A&quot;, and the parent namespace of &quot;A&quot; is &quot;&quot;.</source>
          <target state="translated">예를 들어, 문자열 &quot;A :: B :: C&quot;의 부모 네임 스페이스는 문자열 &quot;A :: B&quot;이고 &quot;A :: B&quot;의 부모 네임 스페이스는 &quot;A&quot;이고, 부모 네임 스페이스 &quot;A는 &quot;는&quot; &quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2dfbc7c1d66e137a08f7d24d6f0c1205a5d7ea87" translate="yes" xml:space="preserve">
          <source>For example, the value returned for the missing translation key &lt;code&gt;&quot;blog.post.title&quot;&lt;/code&gt; will be:</source>
          <target state="translated">예를 들어 누락 된 번역 키 &lt;code&gt;&quot;blog.post.title&quot;&lt;/code&gt; 에 대해 반환 된 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6c9ab8367f005b2e5df0fa87e9f15f334106fe55" translate="yes" xml:space="preserve">
          <source>For example, there is a hook provided within Active Record that is called every time Active Record uses an SQL query on a database. This hook could be &lt;strong&gt;subscribed&lt;/strong&gt; to, and used to track the number of queries during a certain action. There's another hook around the processing of an action of a controller. This could be used, for instance, to track how long a specific action has taken.</source>
          <target state="translated">예를 들어 Active Record에는 Active Record가 데이터베이스에서 SQL 쿼리를 사용할 때마다 호출되는 후크가 있습니다. 이 후크는 &lt;strong&gt;구독&lt;/strong&gt; 할 수 있으며 특정 조치 동안 쿼리 수를 추적하는 데 사용됩니다. 컨트롤러의 동작 처리와 관련하여 또 다른 연결 고리가 있습니다. 예를 들어 특정 작업이 얼마나 오래 걸 렸는지 추적하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a1be83731d63aff3e646756e901c8c9245afb01" translate="yes" xml:space="preserve">
          <source>For example, there is no point in defining reloadable Rack middleware, because changes would not be reflected in the instance stored in the middleware stack anyway. If &lt;code&gt;lib/my_app/middleware/foo.rb&lt;/code&gt; defines a middleware class, then in &lt;code&gt;config/application.rb&lt;/code&gt; you write:</source>
          <target state="translated">예를 들어, 변경 사항이 미들웨어 스택에 저장된 인스턴스에 반영되지 않기 때문에 다시로드 가능한 랙 미들웨어를 정의 할 필요가 없습니다. 만약 &lt;code&gt;lib/my_app/middleware/foo.rb&lt;/code&gt; 정의하는 미들웨어 클래스 다음의 &lt;code&gt;config/application.rb&lt;/code&gt; 당신이 쓰는 :</target>
        </trans-unit>
        <trans-unit id="61335b399ca0c612135a585163da22e19756f471" translate="yes" xml:space="preserve">
          <source>For example, these files:</source>
          <target state="translated">예를 들어, 다음 파일들 :</target>
        </trans-unit>
        <trans-unit id="a16d0540bdd1b18440994f0a0a04ae5a41964453" translate="yes" xml:space="preserve">
          <source>For example, this method from &lt;code&gt;ActionController::HttpAuthentication::Token::ControllerMethods&lt;/code&gt; uses &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-blank-3F&quot;&gt;&lt;code&gt;blank?&lt;/code&gt;&lt;/a&gt; for checking whether a token is present:</source>
          <target state="translated">예를 들어, &lt;code&gt;ActionController::HttpAuthentication::Token::ControllerMethods&lt;/code&gt; 의이 메서드 는 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-blank-3F&quot;&gt; &lt;code&gt;blank?&lt;/code&gt; &lt;/a&gt;토큰이 있는지 확인하기 위해 :</target>
        </trans-unit>
        <trans-unit id="3999170f0726b8fac607bc2d27b50c91c05916df" translate="yes" xml:space="preserve">
          <source>For example, this method from &lt;code&gt;ActionController::HttpAuthentication::Token::ControllerMethods&lt;/code&gt; uses &lt;code&gt;blank?&lt;/code&gt; for checking whether a token is present:</source>
          <target state="translated">예를 들어 &lt;code&gt;ActionController::HttpAuthentication::Token::ControllerMethods&lt;/code&gt; 의이 메소드 는 &lt;code&gt;blank?&lt;/code&gt; 토큰이 있는지 확인하기 위해 :</target>
        </trans-unit>
        <trans-unit id="98ebdb02a528bccda95b366823ebd1275442f856" translate="yes" xml:space="preserve">
          <source>For example, this migration:</source>
          <target state="translated">예를 들어이 마이그레이션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5bbf42caeaf86a1c53263fef527f68e943bb49b6" translate="yes" xml:space="preserve">
          <source>For example, to create a new person you typically set up a new instance of &lt;code&gt;Person&lt;/code&gt; in the &lt;code&gt;PeopleController#new&lt;/code&gt; action, &lt;code&gt;@person&lt;/code&gt;, and in the view template pass that object to &lt;code&gt;form_for&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 일반적으로의 새로운 인스턴스 설정 새로운 사람 만드는 &lt;code&gt;Person&lt;/code&gt; 에 &lt;code&gt;PeopleController#new&lt;/code&gt; 액션, &lt;code&gt;@person&lt;/code&gt; 을 하고 뷰 템플릿에 해당 개체를 전달 &lt;code&gt;form_for&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="64e9e771cfbff8100cd38dc964351777518c5aef" translate="yes" xml:space="preserve">
          <source>For example, to generate the Car model:</source>
          <target state="translated">예를 들어 자동차 모델을 생성하려면</target>
        </trans-unit>
        <trans-unit id="8f22d5103aea20aca31669ecb1130c11aaa26df6" translate="yes" xml:space="preserve">
          <source>For example, to select only &lt;code&gt;isbn&lt;/code&gt; and &lt;code&gt;out_of_print&lt;/code&gt; columns:</source>
          <target state="translated">예를 들어 &lt;code&gt;isbn&lt;/code&gt; 및 &lt;code&gt;out_of_print&lt;/code&gt; 열만 선택하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe27f8ed8f16b226d7835e951757e8037d9ea3b7" translate="yes" xml:space="preserve">
          <source>For example, to select only &lt;code&gt;viewable_by&lt;/code&gt; and &lt;code&gt;locked&lt;/code&gt; columns:</source>
          <target state="translated">예를 들어 &lt;code&gt;viewable_by&lt;/code&gt; 및 &lt;code&gt;locked&lt;/code&gt; 열만 선택하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f0cd0136a1136eeaa29d065b51c137f356aec8d" translate="yes" xml:space="preserve">
          <source>For example, to send newsletters only to customers with the primary key starting from 2000 up to 10000:</source>
          <target state="translated">예를 들어 2000부터 10000까지의 기본 키를 사용하는 고객에게만 뉴스 레터를 보내려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="dbea109f2ad30fcbb3b77f5ed8d8200c2d18b327" translate="yes" xml:space="preserve">
          <source>For example, to send newsletters only to customers with the primary key starting from 2000:</source>
          <target state="translated">예를 들어 2000 년부터 기본 키를 사용하는 고객에게만 뉴스 레터를 보내려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="2a9ed07923bb7b4a64450b13fd75255c4d38e870" translate="yes" xml:space="preserve">
          <source>For example, to send newsletters only to users with the primary key starting from 2000 up to 10000:</source>
          <target state="translated">예를 들어, 기본 키가 2000에서 10000까지 인 사용자에게만 뉴스 레터를 보내려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="1ca45333de25723015609c73a0ca791bc369a34a" translate="yes" xml:space="preserve">
          <source>For example, to send newsletters only to users with the primary key starting from 2000:</source>
          <target state="translated">예를 들어, 2000 년부터 기본 키가있는 사용자에게만 뉴스 레터를 보내려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="75e8559e97cd9d81dfe888624c855d15c3e1e85b" translate="yes" xml:space="preserve">
          <source>For example, when an action of &lt;code&gt;ArticlesController&lt;/code&gt; is called Rails tries optimistically to use &lt;code&gt;ArticlesHelper&lt;/code&gt;. It is OK that the helper module does not exist, so if an exception for that constant name is raised it should be silenced. But it could be the case that &lt;code&gt;articles_helper.rb&lt;/code&gt; raises a &lt;code&gt;NameError&lt;/code&gt; due to an actual unknown constant. That should be reraised. The method &lt;code&gt;missing_name?&lt;/code&gt; provides a way to distinguish both cases:</source>
          <target state="translated">예를 들어, &lt;code&gt;ArticlesController&lt;/code&gt; 의 조치를 Rails라고하면 &lt;code&gt;ArticlesHelper&lt;/code&gt; 를 낙관적으로 사용하려고합니다 . 도우미 모듈이 존재하지 않는 것이 좋습니다. 따라서 해당 상수 이름에 대한 예외가 발생하면 침묵해야합니다. 그러나 &lt;code&gt;articles_helper.rb&lt;/code&gt; 가 실제로 알 수없는 상수로 인해 &lt;code&gt;NameError&lt;/code&gt; 를 발생 시키는 경우 일 수 있습니다 . 다시 제기해야합니다. 방법 &lt;code&gt;missing_name?&lt;/code&gt; 두 경우를 구별하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d190ca2b52d936f728d86a17363fcf644839beef" translate="yes" xml:space="preserve">
          <source>For example, when an action of &lt;code&gt;ArticlesController&lt;/code&gt; is called Rails tries to load &lt;code&gt;articles_helper.rb&lt;/code&gt;, but that file may not exist. That's fine, the helper module is not mandatory so Rails silences a load error. But it could be the case that the helper module does exist and in turn requires another library that is missing. In that case Rails must reraise the exception. The method &lt;code&gt;is_missing?&lt;/code&gt; provides a way to distinguish both cases:</source>
          <target state="translated">예를 들어 &lt;code&gt;ArticlesController&lt;/code&gt; 의 조치 가 Rails 인 경우 &lt;code&gt;articles_helper.rb&lt;/code&gt; 를로드하려고 시도 하지만 해당 파일이 존재하지 않을 수 있습니다. 좋습니다. 헬퍼 모듈은 필수가 아니기 때문에 Rails는로드 오류를 침묵시킵니다. 그러나 도우미 모듈이 존재하고 누락 된 다른 라이브러리가 필요할 수 있습니다. 이 경우 Rails는 예외를 철회해야합니다. 방법은 &lt;code&gt;is_missing?&lt;/code&gt; 두 경우를 구별하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="14a8fa466f2f73212535fb97c32b0556e76e1304" translate="yes" xml:space="preserve">
          <source>For example, when there are two placeholders with only one value supplied:</source>
          <target state="translated">예를 들어 하나의 값만 제공 한 두 개의 자리 표시자가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="0c5be9961c5068063b6e241f83fe32897da5d624" translate="yes" xml:space="preserve">
          <source>For example, with a &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt; file containing the following lines:</source>
          <target state="translated">예를 들어, 다음 행을 포함 하는 &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt; 파일을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="40ff51d77659af819e801bb7d6c51c09bd30772c" translate="yes" xml:space="preserve">
          <source>For example, with allow_unsafe_raw_sql set to :disabled, the following code would raise this exception:</source>
          <target state="translated">예를 들어 allow_unsafe_raw_sql을 : disabled로 설정하면 다음 코드에서이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="611ace70746d4380f4a8f14e806d54c55f63cbb2" translate="yes" xml:space="preserve">
          <source>For example, you can replace the Simple backend with the Chain backend to chain multiple backends together. This is useful when you want to use standard translations with a Simple backend but store custom application translations in a database or other backends.</source>
          <target state="translated">예를 들어 단순 백엔드를 체인 백엔드로 교체하여 여러 백엔드를 함께 연결할 수 있습니다. 이는 단순 백엔드와 함께 표준 번역을 사용하지만 데이터베이스 나 다른 백엔드에 사용자 정의 응용 프로그램 번역을 저장하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fe93712629946bf83ed492ad22d25c6ce33f7b7e" translate="yes" xml:space="preserve">
          <source>For example, you could add this setting to &lt;code&gt;config/application.rb&lt;/code&gt; file:</source>
          <target state="translated">예를 들어,이 설정을 &lt;code&gt;config/application.rb&lt;/code&gt; 파일에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac5f9196086b6ceee7828bfa87b707a6c8025386" translate="yes" xml:space="preserve">
          <source>For example, you could do this in your controller to rollback a transaction:</source>
          <target state="translated">예를 들어, 컨트롤러에서이를 수행하여 트랜잭션을 롤백 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c785eed18ff9bb13ef5bad692ce60a163e1267c" translate="yes" xml:space="preserve">
          <source>For example, you could verify the contents on the title element in your response with:</source>
          <target state="translated">예를 들어 다음과 같이 응답에서 title 요소의 내용을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7aa8456e4361405b140cc1ca2ae4ad3a248dfeb" translate="yes" xml:space="preserve">
          <source>For example, you may want to prefix all fragment cache keys with a global version identifier, so you can easily invalidate all caches.</source>
          <target state="translated">예를 들어, 모든 조각 캐시 키 앞에 글로벌 버전 식별자를 붙여서 모든 캐시를 쉽게 무효화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a181e84d1ff2bbcf954d2b7f5274157933bb511f" translate="yes" xml:space="preserve">
          <source>For example, you might have an Admin model inheriting from User:</source>
          <target state="translated">예를 들어 User에서 상속되는 Admin 모델이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58fad6d6b9386ff3807adb3569a7d932329d86df" translate="yes" xml:space="preserve">
          <source>For example, your &lt;code&gt;config/locales&lt;/code&gt; directory could look like this:</source>
          <target state="translated">예를 들어, &lt;code&gt;config/locales&lt;/code&gt; 디렉토리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1f09c1df5807f61288532308ca86c2ddfc3dade7" translate="yes" xml:space="preserve">
          <source>For fields generated in this way using the &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;:person&lt;/code&gt; also happens to be the name of an instance variable &lt;code&gt;@person&lt;/code&gt;, the default value of the field shown when the form is initially displayed (e.g. in the situation where you are editing an existing record) will be the value of the corresponding attribute of &lt;code&gt;@person&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;formbuilder&quot;&gt; &lt;code&gt;FormBuilder&lt;/code&gt; 를&lt;/a&gt; 사용하여 이러한 방식으로 생성 된 필드의 경우 &lt;code&gt;:person&lt;/code&gt; 이 인스턴스 변수 &lt;code&gt;@person&lt;/code&gt; 의 이름 인 경우 양식이 처음 표시 될 때 표시되는 필드의 기본값입니다 (예 : 기존 record)는 &lt;code&gt;@person&lt;/code&gt; 의 해당 속성 값입니다 .</target>
        </trans-unit>
        <trans-unit id="b3b00774a71fe0cf727bd4e0da1b27be0435fc60" translate="yes" xml:space="preserve">
          <source>For fields generated in this way using the &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;, if &lt;code&gt;:person&lt;/code&gt; also happens to be the name of an instance variable &lt;code&gt;@person&lt;/code&gt;, the default value of the field shown when the form is initially displayed (e.g. in the situation where you are editing an existing record) will be the value of the corresponding attribute of &lt;code&gt;@person&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder를&lt;/a&gt; 사용하여 이러한 방식으로 생성 된 필드의 경우, &lt;code&gt;:person&lt;/code&gt; 도 인스턴스 변수 &lt;code&gt;@person&lt;/code&gt; 의 이름 인 경우 양식이 처음 표시 될 때 표시되는 필드의 기본값 (예 : 기존 편집중인 상황) record)는 &lt;code&gt;@person&lt;/code&gt; 의 해당 속성 값입니다 .</target>
        </trans-unit>
        <trans-unit id="5c2cb5e44535088c1b16f9f8031b8806c4b68f4e" translate="yes" xml:space="preserve">
          <source>For full options to the message argument please see the &lt;a href=&quot;#message&quot;&gt;message documentation&lt;/a&gt;.</source>
          <target state="translated">메시지 인수에 대한 전체 옵션은 &lt;a href=&quot;#message&quot;&gt;메시지 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d5a28476d189c846e3cbe161eac9fe11110dfb4" translate="yes" xml:space="preserve">
          <source>For further customizability, it is possible to suppress the default validations by passing &lt;code&gt;validations: false&lt;/code&gt; as an argument.</source>
          <target state="translated">추가 사용자 정의를 위해 &lt;code&gt;validations: false&lt;/code&gt; 인수로 false 를 전달하여 기본 유효성 검증을 억제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="081785e33ee38d94a2b1fe967089455bd6b360e6" translate="yes" xml:space="preserve">
          <source>For further details have a look at the docs of your production web server: - &lt;a href=&quot;https://tn123.org/mod_xsendfile/&quot;&gt;Apache&lt;/a&gt; - &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile/&quot;&gt;NGINX&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 프로덕션 웹 서버의 문서를 살펴보십시오.- &lt;a href=&quot;https://tn123.org/mod_xsendfile/&quot;&gt;Apache&lt;/a&gt; - &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile/&quot;&gt;NGINX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aee428c034bfedd0bd9c4b170c81d041282ffc75" translate="yes" xml:space="preserve">
          <source>For further information on how to install Valgrind and use with Ruby, refer to &lt;a href=&quot;http://blog.evanweaver.com/articles/2008/02/05/valgrind-and-ruby/&quot;&gt;Valgrind and Ruby&lt;/a&gt; by Evan Weaver.</source>
          <target state="translated">Valgrind를 설치하고 Ruby와 함께 사용하는 방법에 대한 자세한 내용은 Evan Weaver의 &lt;a href=&quot;http://blog.evanweaver.com/articles/2008/02/05/valgrind-and-ruby/&quot;&gt;Valgrind 및 Ruby&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ecf6ae785e0904c423796f5f8ab202f5902b31a" translate="yes" xml:space="preserve">
          <source>For further information on how to install Valgrind and use with Ruby, refer to &lt;a href=&quot;https://blog.evanweaver.com/2008/02/05/valgrind-and-ruby/&quot;&gt;Valgrind and Ruby&lt;/a&gt; by Evan Weaver.</source>
          <target state="translated">Valgrind를 설치하고 Ruby와 함께 사용하는 방법에 대한 자세한 내용은 Evan Weaver의 &lt;a href=&quot;https://blog.evanweaver.com/2008/02/05/valgrind-and-ruby/&quot;&gt;Valgrind 및 Ruby&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4f497bd8fccf35ad1f3c9f4cf110528be8c261a" translate="yes" xml:space="preserve">
          <source>For good tests, you'll need to give some thought to setting up test data. In Rails, you can handle this by defining and customizing fixtures. You can find comprehensive documentation in the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API documentation&lt;/a&gt;.</source>
          <target state="translated">좋은 테스트를 위해서는 테스트 데이터 설정을 고려해야합니다. Rails에서는 조명기를 정의하고 커스터마이징하여이를 처리 할 수 ​​있습니다. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API 문서&lt;/a&gt; 에서 포괄적 인 문서를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0021e110456041c0e68a4a209cf0e9cafe7d3d33" translate="yes" xml:space="preserve">
          <source>For hash conditions, you can either use the table name in the key, or use a sub-hash.</source>
          <target state="translated">해시 조건의 경우 키에서 테이블 이름을 사용하거나 하위 해시를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ba0312eadb3d440f516045a2e2a8e59be856db8" translate="yes" xml:space="preserve">
          <source>For historical reasons, this callback may run twice. The code it executes must be idempotent.</source>
          <target state="translated">역사적 이유로이 콜백은 두 번 실행될 수 있습니다. 실행되는 코드는 멱등이어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc5d86a2f562335d3250e949505a4a77029c422e" translate="yes" xml:space="preserve">
          <source>For instance to change the digest used for signed cookies from SHA1 to SHA256, you would first assign the new configuration value:</source>
          <target state="translated">예를 들어 서명 된 쿠키에 사용되는 다이제스트를 SHA1에서 SHA256으로 변경하려면 먼저 새 구성 값을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="533bda3f16ed04a12da250098304a2e8ad5e028d" translate="yes" xml:space="preserve">
          <source>For instance, &lt;code&gt;time.ago(24.hours)&lt;/code&gt; will move back exactly 24 hours, while &lt;code&gt;time.ago(1.day)&lt;/code&gt; will move back 23-25 hours, depending on the day.</source>
          <target state="translated">예를 들어 &lt;code&gt;time.ago(24.hours)&lt;/code&gt; 는 정확히 24 시간 뒤로 이동하고 &lt;code&gt;time.ago(1.day)&lt;/code&gt; 는 요일에 따라 23-25 ​​시간 뒤로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="e0555f051ef622a3759d8d901430f34f55ed3098" translate="yes" xml:space="preserve">
          <source>For instance, a time + 24.hours will advance exactly 24 hours, while a time + 1.day will advance 23-25 hours, depending on the day.</source>
          <target state="translated">예를 들어 시간 + 24.hours는 정확히 24 시간 전진하고 time + 1.day는 요일에 따라 23-25 ​​시간 전진합니다.</target>
        </trans-unit>
        <trans-unit id="432a889b80998873943abef346adc1b161cc8720" translate="yes" xml:space="preserve">
          <source>For instance, a time - 24.hours will go subtract exactly 24 hours, while a time - 1.day will subtract 23-25 hours, depending on the day.</source>
          <target state="translated">예를 들어, 시간-24.hours는 정확히 24 시간을 빼고 time-1.day는 요일에 따라 23-25 ​​시간을 뺍니다.</target>
        </trans-unit>
        <trans-unit id="8a5acdeb653805919d86d1a9ce5df8284eda2146" translate="yes" xml:space="preserve">
          <source>For instance, if you have PostsController and a template named &lt;code&gt;app/views/layouts/posts.html.erb&lt;/code&gt;, that template will be used for all actions in PostsController and controllers inheriting from PostsController.</source>
          <target state="translated">예를 들어 PostsController 및 &lt;code&gt;app/views/layouts/posts.html.erb&lt;/code&gt; 라는 템플릿이있는 경우 해당 템플릿은 PostsController 및 PostsController에서 상속 된 컨트롤러의 모든 작업에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b7f39ec3506ee6c0bc87f33e6db2dd27d026352d" translate="yes" xml:space="preserve">
          <source>For instance, let's store all &amp;ldquo;render&amp;rdquo; events in an array:</source>
          <target state="translated">예를 들어, 모든 &quot;렌더링&quot;이벤트를 배열로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="e6b770f4448e5e929fd693b2aaaf6da25cd3d99e" translate="yes" xml:space="preserve">
          <source>For instance, running:</source>
          <target state="translated">예를 들어 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="37c287dde897ab69c30222f02c065a07a96212ca" translate="yes" xml:space="preserve">
          <source>For instance, the following example would go to the application's &lt;code&gt;articles_path&lt;/code&gt; if that template was rendered from the application, or the engine's &lt;code&gt;articles_path&lt;/code&gt; if it was rendered from the engine:</source>
          <target state="translated">예를 들어, 다음 예제는 해당 템플리트가 애플리케이션에서 렌더링 된 경우 애플리케이션의 &lt;code&gt;articles_path&lt;/code&gt; 로 이동 하고 엔진에서 렌더링 된 경우 엔진의 &lt;code&gt;articles_path&lt;/code&gt; 로 이동 합니다.</target>
        </trans-unit>
        <trans-unit id="a81fa2a9148de4c026b9fc2333a65b051bc87daf" translate="yes" xml:space="preserve">
          <source>For instance, the template above using &lt;code&gt;provide&lt;/code&gt; would be:</source>
          <target state="translated">예를 들어, &lt;code&gt;provide&lt;/code&gt; 를 사용 하는 위의 템플릿 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3ab7760c833a84bf1f465cf1c517bdef6d100866" translate="yes" xml:space="preserve">
          <source>For instance, using the &lt;code&gt;stale?&lt;/code&gt; method:</source>
          <target state="translated">예를 들어, &lt;code&gt;stale?&lt;/code&gt; 방법:</target>
        </trans-unit>
        <trans-unit id="081fac8d5083588ca7d68cac1d678ec147120595" translate="yes" xml:space="preserve">
          <source>For instance, while this definition is similar to the previous one:</source>
          <target state="translated">예를 들어이 정의는 이전 정의와 비슷하지만</target>
        </trans-unit>
        <trans-unit id="27dfaa219f0e366a79492958c9bb99ce19f7d38e" translate="yes" xml:space="preserve">
          <source>For locales, simply place the locale files in the &lt;code&gt;config/locales&lt;/code&gt; directory, just like you would in an application.</source>
          <target state="translated">로케일의 경우 응용 프로그램에서와 같이 로케일 파일을 &lt;code&gt;config/locales&lt;/code&gt; 디렉토리에 두십시오.</target>
        </trans-unit>
        <trans-unit id="1cc53aeab1e696d9a231a484c3b1e7b0a5e98758" translate="yes" xml:space="preserve">
          <source>For many resources, loose upgrades are sufficient: if a thread is awaiting a lock, it is not running any other code. With &lt;code&gt;purpose&lt;/code&gt; matching, it is possible to yield only to other threads whose activity will not interfere.</source>
          <target state="translated">많은 리소스의 경우 느슨한 업그레이드로 충분합니다. 스레드가 잠금을 기다리고 있으면 다른 코드를 실행하지 않습니다. &lt;code&gt;purpose&lt;/code&gt; 일치를 사용하면 활동이 방해받지 않는 다른 스레드에만 양보 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5521045641d7f6a5a91fd297e7d0c34f96dd7b89" translate="yes" xml:space="preserve">
          <source>For more advanced conditions or to reuse an existing named scope, &lt;code&gt;Relation#merge&lt;/code&gt; may be used. First, let's add a new named scope to the Order model:</source>
          <target state="translated">고급 조건을 사용하거나 기존의 명명 된 범위를 재사용하려면 &lt;code&gt;Relation#merge&lt;/code&gt; 를 사용할 수 있습니다. 먼저 Order 모델에 새 명명 된 범위를 추가해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="491f0c99580efadec9c3647959402c6c32a56252" translate="yes" xml:space="preserve">
          <source>For more complex cases, such as conversion to or from your application domain objects, consider using the &lt;a href=&quot;../../attributes&quot;&gt;&lt;code&gt;ActiveRecord::Attributes&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">애플리케이션 도메인 개체와의 변환과 같은 더 복잡한 경우에는 &lt;a href=&quot;../../attributes&quot;&gt; &lt;code&gt;ActiveRecord::Attributes&lt;/code&gt; &lt;/a&gt; API를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="dff4c1585245da6606f3072f0d97226c836eb452" translate="yes" xml:space="preserve">
          <source>For more complex cases, such as conversion to or from your application domain objects, consider using the &lt;a href=&quot;../../attributes&quot;&gt;ActiveRecord::Attributes&lt;/a&gt; API.</source>
          <target state="translated">응용 프로그램 도메인 개체와의 변환과 같은보다 복잡한 경우에는 &lt;a href=&quot;../../attributes&quot;&gt;ActiveRecord :: Attributes&lt;/a&gt; API 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4a60e17c61b23f54793b61438b571a3881e6c6f" translate="yes" xml:space="preserve">
          <source>For more complex examples such as defining alternate character sets or self-encoding text first, please refer to the &lt;a href=&quot;https://github.com/mikel/mail&quot;&gt;Mail&lt;/a&gt; library.</source>
          <target state="translated">대체 문자 세트 또는 자체 인코딩 텍스트 정의와 같은보다 복잡한 예는 &lt;a href=&quot;https://github.com/mikel/mail&quot;&gt;메일&lt;/a&gt; 라이브러리 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9aa008521c931e74225ae51f6e60a1b686bfb21" translate="yes" xml:space="preserve">
          <source>For more detailed information on other functionalities available, please refer to the specific modules included in &lt;code&gt;ActiveModel::Model&lt;/code&gt; (see below).</source>
          <target state="translated">사용 가능한 다른 기능에 대한 자세한 내용은 &lt;code&gt;ActiveModel::Model&lt;/code&gt; 포함 된 특정 모듈을 참조하십시오 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="0908267f30f307c13ec11e1e41e611132b4c66e1" translate="yes" xml:space="preserve">
          <source>For more details and examples of individual methods, check the API documentation. In particular the documentation for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::SchemaStatements&lt;/code&gt;&lt;/a&gt; (which provides the methods available in the &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; methods), &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::TableDefinition&lt;/code&gt;&lt;/a&gt; (which provides the methods available on the object yielded by &lt;code&gt;create_table&lt;/code&gt;) and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/Table.html&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::Table&lt;/code&gt;&lt;/a&gt; (which provides the methods available on the object yielded by &lt;code&gt;change_table&lt;/code&gt;).</source>
          <target state="translated">개별 메소드의 세부 사항 및 예제는 API 문서를 확인하십시오. 특히 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html&quot;&gt; &lt;code&gt;ActiveRecord::ConnectionAdapters::SchemaStatements&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;change&lt;/code&gt; , &lt;code&gt;up&lt;/code&gt; 및 &lt;code&gt;down&lt;/code&gt; 메소드 에서 사용 가능한 메소드 제공 ), &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html&quot;&gt; &lt;code&gt;ActiveRecord::ConnectionAdapters::TableDefinition&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;create_table&lt;/code&gt; 에서 생성 한 오브젝트에서 사용 가능한 메소드 제공 ) 및 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/Table.html&quot;&gt; &lt;code&gt;ActiveRecord::ConnectionAdapters::Table&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;change_table&lt;/code&gt; 에 의해 생성 된 객체에서 사용 가능한 메소드를 제공합니다 ).</target>
        </trans-unit>
        <trans-unit id="c939f8468b13f744506bd78b635c3536376d0146" translate="yes" xml:space="preserve">
          <source>For more details on creating custom types, see the documentation for &lt;a href=&quot;../../activemodel/type/value&quot;&gt;&lt;code&gt;ActiveModel::Type::Value&lt;/code&gt;&lt;/a&gt;. For more details on registering your types to be referenced by a symbol, see &lt;a href=&quot;../type#method-c-register&quot;&gt;&lt;code&gt;ActiveRecord::Type.register&lt;/code&gt;&lt;/a&gt;. You can also pass a type object directly, in place of a symbol.</source>
          <target state="translated">커스텀 유형 생성에 대한 자세한 내용은 &lt;a href=&quot;../../activemodel/type/value&quot;&gt; &lt;code&gt;ActiveModel::Type::Value&lt;/code&gt; &lt;/a&gt; 문서를 참조하세요 . 심볼에서 참조 할 유형을 등록하는 방법에 대한 자세한 내용은 &lt;a href=&quot;../type#method-c-register&quot;&gt; &lt;code&gt;ActiveRecord::Type.register&lt;/code&gt; &lt;/a&gt; 참조하십시오 . 기호 대신 유형 객체를 직접 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb2c9db80b50eb0ad9e15f68cf408e7b7893d292" translate="yes" xml:space="preserve">
          <source>For more details on creating custom types, see the documentation for &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel::Type::Value&lt;/a&gt;. For more details on registering your types to be referenced by a symbol, see &lt;a href=&quot;../type#method-c-register&quot;&gt;ActiveRecord::Type.register&lt;/a&gt;. You can also pass a type object directly, in place of a symbol.</source>
          <target state="translated">사용자 정의 유형 작성에 대한 자세한 정보는 &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel :: Type :: Value&lt;/a&gt; 문서를 참조하십시오 . 기호로 참조 할 유형을 등록하는 방법에 대한 자세한 내용은 &lt;a href=&quot;../type#method-c-register&quot;&gt;ActiveRecord :: Type.register를&lt;/a&gt; 참조하십시오 . 심볼 대신 유형 객체를 직접 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d1ead23b1228be53c887ea5c02f5e35de106075" translate="yes" xml:space="preserve">
          <source>For more details on key rotation with encrypted and signed messages as well as the various options the &lt;code&gt;rotate&lt;/code&gt; method accepts, please refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageEncryptor.html&quot;&gt;MessageEncryptor API&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageVerifier.html&quot;&gt;MessageVerifier API&lt;/a&gt; documentation.</source>
          <target state="translated">암호화 및 서명 된 메시지를 사용한 키 순환 및 &lt;code&gt;rotate&lt;/code&gt; 방법이 허용 하는 다양한 옵션에 대한 자세한 내용은 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageEncryptor.html&quot;&gt;MessageEncryptor API&lt;/a&gt; 및 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageVerifier.html&quot;&gt;MessageVerifier API&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1da2a7e63edaa3e19544b269ac230e7df25f63ce" translate="yes" xml:space="preserve">
          <source>For more details on the routing process, see &lt;a href=&quot;routing&quot;&gt;Rails Routing from the Outside In&lt;/a&gt;.</source>
          <target state="translated">라우팅 프로세스에 대한 자세한 내용 &lt;a href=&quot;routing&quot;&gt;은 외부에서 레일 라우팅을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd7edc0799806823826db064d0716eca378f0a8a" translate="yes" xml:space="preserve">
          <source>For more details read the &lt;a href=&quot;migration&quot;&gt;&amp;ldquo;Transactional Migrations&amp;rdquo; section above&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;migration&quot;&gt;위&lt;/a&gt; 의 &quot;트랜잭션 마이그레이션&quot;섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2e2e5876de4851bed71d4264251fa966d17185d" translate="yes" xml:space="preserve">
          <source>For more details, including other events you can bind to, check out &lt;a href=&quot;https://github.com/turbolinks/turbolinks/blob/master/README.md&quot;&gt;the Turbolinks README&lt;/a&gt;.</source>
          <target state="translated">바인딩 할 수있는 다른 이벤트를 포함하여 자세한 내용 &lt;a href=&quot;https://github.com/turbolinks/turbolinks/blob/master/README.md&quot;&gt;은 Turbolinks README를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f047931c6182258700f5ddb25dead735c079a39" translate="yes" xml:space="preserve">
          <source>For more information about migrations, refer to &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations&lt;/a&gt;.</source>
          <target state="translated">마이그레이션에 대한 자세한 정보는 &lt;a href=&quot;active_record_migrations&quot;&gt;활성 레코드 마이그레이션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9db8a6ccd414e6feeb2eeaa9c727089fae50b398" translate="yes" xml:space="preserve">
          <source>For more information about publishing gems to RubyGems, see: &lt;a href=&quot;https://guides.rubygems.org/publishing&quot;&gt;Publishing your gem&lt;/a&gt;.</source>
          <target state="translated">RubyGems에 gem을 게시하는 방법에 대한 자세한 내용은 &lt;a href=&quot;https://guides.rubygems.org/publishing&quot;&gt;gem 게시를&lt;/a&gt; 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="bde075bd772de835a77c4dadee48206f95fa03ca" translate="yes" xml:space="preserve">
          <source>For more information about routing, refer to &lt;a href=&quot;routing&quot;&gt;Rails Routing from the Outside In&lt;/a&gt;.</source>
          <target state="translated">라우팅에 대한 자세한 정보 &lt;a href=&quot;routing&quot;&gt;는 외부 입력에서 Rails 라우팅을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="296ae149337d5142aeecdb050f8414fb7d14a454" translate="yes" xml:space="preserve">
          <source>For more information about specifying conditions as a hash or array, see the Conditions section in the introduction to &lt;a href=&quot;base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">조건을 해시 또는 배열로 지정하는 방법에 대한 자세한 내용은 &lt;a href=&quot;base&quot;&gt; &lt;code&gt;ActiveRecord::Base&lt;/code&gt; &lt;/a&gt; 소개의 조건 섹션을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="303c583b575361bde9efaec26506f8c3e4254406" translate="yes" xml:space="preserve">
          <source>For more information about specifying conditions as a hash or array, see the Conditions section in the introduction to &lt;a href=&quot;base&quot;&gt;ActiveRecord::Base&lt;/a&gt;.</source>
          <target state="translated">조건을 해시 또는 배열로 지정하는 방법에 대한 자세한 내용은 &lt;a href=&quot;base&quot;&gt;ActiveRecord :: Base&lt;/a&gt; 소개의 조건 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="376d660a224bef3e942f5388acf4fca8b5da6c53" translate="yes" xml:space="preserve">
          <source>For more information about the methods defined on the Chars proxy see &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;&lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt;&lt;/a&gt;. For information about how to change the default Multibyte behavior see &lt;a href=&quot;activesupport/multibyte&quot;&gt;&lt;code&gt;ActiveSupport::Multibyte&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Chars 프록시에 정의 된 메서드에 대한 자세한 내용은 &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt; &lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt; &lt;/a&gt; 참조하십시오 . 기본 멀티 바이트 동작을 변경하는 방법에 대한 정보는 &lt;a href=&quot;activesupport/multibyte&quot;&gt; &lt;code&gt;ActiveSupport::Multibyte&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbe1f64595cd21c7163f2bf2a314a52327d58a2d" translate="yes" xml:space="preserve">
          <source>For more information about the methods defined on the Chars proxy see &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport::Multibyte::Chars&lt;/a&gt;. For information about how to change the default Multibyte behavior see &lt;a href=&quot;activesupport/multibyte&quot;&gt;ActiveSupport::Multibyte&lt;/a&gt;.</source>
          <target state="translated">Chars 프록시에 정의 된 메소드에 대한 자세한 정보는 &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport :: Multibyte :: Chars를&lt;/a&gt; 참조하십시오 . 기본 멀티 바이트 동작을 변경하는 방법에 대한 자세한 내용은 &lt;a href=&quot;activesupport/multibyte&quot;&gt;ActiveSupport :: Multibyte를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="63c7b1418ccd5d52f028a056b1bb15cb26845066" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;Minitest&lt;/code&gt;, refer to &lt;a href=&quot;http://docs.seattlerb.org/minitest&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Minitest&lt;/code&gt; 에 대한 자세한 내용은 &lt;a href=&quot;http://docs.seattlerb.org/minitest&quot;&gt;해당 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c89d0fa21e82bf517c533b3cdf12b3cc0323591" translate="yes" xml:space="preserve">
          <source>For more information on Active Record associations, see the &lt;a href=&quot;association_basics&quot;&gt;Active Record Associations&lt;/a&gt; guide.</source>
          <target state="translated">액티브 레코드 협회에 대한 자세한 내용은 참조 &lt;a href=&quot;association_basics&quot;&gt;액티브 레코드 협회&lt;/a&gt; 가이드.</target>
        </trans-unit>
        <trans-unit id="fc249d76b1155b7966298297ad0e4c41612e374f" translate="yes" xml:space="preserve">
          <source>For more information on Builder please consult the &lt;a href=&quot;https://github.com/jimweirich/builder&quot;&gt;source code&lt;/a&gt;.</source>
          <target state="translated">Builder에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/jimweirich/builder&quot;&gt;소스 코드&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94d19f4d66c8605ad2dbd8f63a90b898427fb8c8" translate="yes" xml:space="preserve">
          <source>For more information on Rails' routing system and the associated conventions, please see &lt;a href=&quot;routing&quot;&gt;Rails Routing from the Outside In&lt;/a&gt; guide.</source>
          <target state="translated">Rails의 라우팅 시스템 및 관련 규칙에 대한 자세한 내용 &lt;a href=&quot;routing&quot;&gt;은 외부에서 Rails 라우팅&lt;/a&gt; 가이드 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a84e9b0b629c050823dc494ec0d1ae82724357b" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 5.0 please see the release notes.</source>
          <target state="translated">Rails 5.0의 변경 사항에 대한 자세한 내용은 릴리스 정보를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8de5ee863f676d9c75f258741e542824b0a5394d" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 5.1 please see the release notes.</source>
          <target state="translated">Rails 5.1의 변경 사항에 대한 자세한 내용은 릴리스 정보를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="332de34b15281a0ae0bc57b18259d33941fc8d22" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 5.2 please see the release notes.</source>
          <target state="translated">Rails 5.2의 변경 사항에 대한 자세한 내용은 릴리스 정보를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c80de18adbdcb0e36c093c7cbf9b193728745ba9" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 6.0 please see the release notes.</source>
          <target state="translated">Rails 6.0의 변경 사항에 대한 자세한 내용은 릴리스 정보를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5a2d2b29a1d7a82a68af4422bb455f072f3f68ac" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 6.1 please see the release notes.</source>
          <target state="translated">Rails 6.1의 변경 사항에 대한 자세한 내용은 릴리스 노트를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c45e3ae53af05ab84c03c41845bc9759d435437d" translate="yes" xml:space="preserve">
          <source>For more information on routing assertions available in Rails, see the API documentation for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Assertions/RoutingAssertions.html&quot;&gt;&lt;code&gt;ActionDispatch::Assertions::RoutingAssertions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Rails에서 사용 가능한 라우팅 어설 션에 대한 자세한 정보는 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Assertions/RoutingAssertions.html&quot;&gt; &lt;code&gt;ActionDispatch::Assertions::RoutingAssertions&lt;/code&gt; &lt;/a&gt; 대한 API 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fc4fd48f1f8311edd9c91d896c75feceda42021" translate="yes" xml:space="preserve">
          <source>For more information on routing, see the &lt;a href=&quot;routing&quot;&gt;Rails Routing&lt;/a&gt; guide.</source>
          <target state="translated">라우팅에 대한 자세한 내용은 &lt;a href=&quot;routing&quot;&gt;Rails Routing&lt;/a&gt; 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e819aaa04ac2ab8f15aa80776b49cb044ce902c" translate="yes" xml:space="preserve">
          <source>For more information on the dangers of SQL injection, see the &lt;a href=&quot;security#sql-injection&quot;&gt;Ruby on Rails Security Guide&lt;/a&gt;.</source>
          <target state="translated">SQL 삽입의 위험에 대한 자세한 정보는 &lt;a href=&quot;security#sql-injection&quot;&gt;Ruby on Rails 보안 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2368c0d305ed909a17ef9dd6a2c18a2864d74b8a" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;../migration&quot;&gt;&amp;ldquo;Transactional Migrations&amp;rdquo; section&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../migration&quot;&gt;&amp;ldquo;트랜잭션 마이그레이션&amp;rdquo;섹션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="754a6d63416a85f1c57896f56a1c4b93856ce437" translate="yes" xml:space="preserve">
          <source>For more information, read the &lt;a href=&quot;asset_pipeline&quot;&gt;Asset Pipeline guide&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;asset_pipeline&quot;&gt;자산 파이프 라인 안내서를&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="5073d9c5360dd34de2568a65a085dd60bee58b32" translate="yes" xml:space="preserve">
          <source>For more information, refer to the reference above and &lt;a href=&quot;https://weblog.rubyonrails.org/2012/3/21/strong-parameters/&quot;&gt;this blog article about Strong Parameters&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 위의 참조 및 &lt;a href=&quot;https://weblog.rubyonrails.org/2012/3/21/strong-parameters/&quot;&gt;강력한 매개 변수에 대한이 블로그 기사를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0822b506a154bfc70930e9cc6e2aca2d9d286424" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation for the &lt;code&gt;:inverse_of&lt;/code&gt; option.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;:inverse_of&lt;/code&gt; 옵션 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d2cfa7b3f1dd7721f53c3b2fdcd19226a336d96b" translate="yes" xml:space="preserve">
          <source>For more installation methods for most Operating Systems take a look at &lt;a href=&quot;https://www.ruby-lang.org/en/documentation/installation/&quot;&gt;ruby-lang.org&lt;/a&gt;.</source>
          <target state="translated">대부분의 운영 체제에 대한 추가 설치 방법은 &lt;a href=&quot;https://www.ruby-lang.org/en/documentation/installation/&quot;&gt;ruby-lang.org를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccb72b198f77ca4c9b9cb1ea79ba163707ea7f58" translate="yes" xml:space="preserve">
          <source>For more on PATCH and why this change was made, see &lt;a href=&quot;https://weblog.rubyonrails.org/2012/2/26/edge-rails-patch-is-the-new-primary-http-method-for-updates/&quot;&gt;this post&lt;/a&gt; on the Rails blog.</source>
          <target state="translated">PATCH 및 변경 사항에 대한 자세한 내용 은 Rails 블로그 &lt;a href=&quot;https://weblog.rubyonrails.org/2012/2/26/edge-rails-patch-is-the-new-primary-http-method-for-updates/&quot;&gt;에서이 게시물&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bdca84b31d7108a5f2c3ae47fec4220b568cd710" translate="yes" xml:space="preserve">
          <source>For more, see &lt;code&gt;Routing::Mapper::Resources#resources&lt;/code&gt;, &lt;code&gt;Routing::Mapper::Scoping#namespace&lt;/code&gt;, and &lt;code&gt;Routing::Mapper::Scoping#scope&lt;/code&gt;.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;Routing::Mapper::Resources#resources&lt;/code&gt; , &lt;code&gt;Routing::Mapper::Scoping#namespace&lt;/code&gt; 및 &lt;code&gt;Routing::Mapper::Scoping#scope&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d73b0e21c09aef6c741098eafb10774dfe69ab34" translate="yes" xml:space="preserve">
          <source>For most conventional &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt; applications, the controller will receive the request (this is invisible to you as the developer), fetch or save data from a model, and use a view to create HTML output. If your controller needs to do things a little differently, that's not a problem, this is just the most common way for a controller to work.</source>
          <target state="translated">대부분의 기존 &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt; 애플리케이션의 경우 컨트롤러는 요청을 수신 (개발자에게는 보이지 않음)하고 모델에서 데이터를 가져 오거나 저장하며보기를 사용하여 HTML 출력을 작성합니다. 컨트롤러가 약간 다르게 작동해야한다면 문제가되지 않습니다. 이것이 컨트롤러가 작동하는 가장 일반적인 방법입니다.</target>
        </trans-unit>
        <trans-unit id="14f79245b7c0875beb69c5cde91cdc7ffc338c48" translate="yes" xml:space="preserve">
          <source>For most stores, this ID is used to look up the session data on the server, e.g. in a database table. There is one exception, and that is the default and recommended session store - the CookieStore - which stores all session data in the cookie itself (the ID is still available to you if you need it). This has the advantage of being very lightweight and it requires zero setup in a new application in order to use the session. The cookie data is cryptographically signed to make it tamper-proof. And it is also encrypted so anyone with access to it can't read its contents. (Rails will not accept it if it has been edited).</source>
          <target state="translated">대부분의 상점에서이 ID는 서버 (예 : 데이터베이스 테이블)에서 세션 데이터를 검색하는 데 사용됩니다. 한 가지 예외가 있으며 이는 쿠키 세션에 모든 세션 데이터를 저장하는 기본 및 권장 세션 저장소 인 CookieStore입니다 (필요한 경우 ID를 계속 사용할 수 있음). 이것은 매우 가볍다는 장점이 있으며 세션을 사용하려면 새 응용 프로그램에서 설정이 필요하지 않습니다. 쿠키 데이터는 변조 방지를 위해 암호화되어 서명됩니다. 또한 암호화되어 있으므로 액세스 권한이있는 사람은 누구나 내용을 읽을 수 없습니다. (레일은 편집 된 경우 승인하지 않습니다).</target>
        </trans-unit>
        <trans-unit id="d27bf22080191b365296dff989dd68e9d0ccde8c" translate="yes" xml:space="preserve">
          <source>For namespaced controllers you can use the directory notation. For example:</source>
          <target state="translated">네임 스페이스 컨트롤러의 경우 디렉토리 표기법을 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7e76de24984c2f2b9a6610a13156cbaabcc22df2" translate="yes" xml:space="preserve">
          <source>For namespaced routes, like &lt;code&gt;admin_post_url&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;admin_post_url&lt;/code&gt; 과 같은 네임 스페이스 경로 :</target>
        </trans-unit>
        <trans-unit id="4926bebd110be3befd2e5e561af80d930839b577" translate="yes" xml:space="preserve">
          <source>For now, just keep in mind that common functionality like Rails engines, I18n and Rails configuration are all being defined here.</source>
          <target state="translated">지금은 Rails 엔진, I18n 및 Rails 구성과 같은 공통 기능이 모두 여기에 정의되어 있음을 명심하십시오.</target>
        </trans-unit>
        <trans-unit id="1a9ae327f85c22d64750df780636ef6dc327979d" translate="yes" xml:space="preserve">
          <source>For one-to-one nested associations, if you build the new (in-memory) child object yourself before assignment, then this module will not overwrite it, e.g.:</source>
          <target state="translated">일대일 중첩 연결의 경우 할당 전에 새로운 메모리 내 하위 개체를 직접 빌드하면이 모듈이이를 덮어 쓰지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="23697fa05e0fecf96d86467c88fbae1ec74b93b6" translate="yes" xml:space="preserve">
          <source>For options, please see the parent section, &lt;a href=&quot;#calculations&quot;&gt;Calculations&lt;/a&gt;.</source>
          <target state="translated">옵션에 대해서는 상위 섹션 인 &lt;a href=&quot;#calculations&quot;&gt;계산을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5aa9f654f30613a573da0c9198aec456093a6d53" translate="yes" xml:space="preserve">
          <source>For options, see &lt;code&gt;Base#match&lt;/code&gt;. For &lt;code&gt;:shallow_path&lt;/code&gt; option, see &lt;code&gt;Resources#resources&lt;/code&gt;.</source>
          <target state="translated">옵션은 &lt;code&gt;Base#match&lt;/code&gt; 를 참조하십시오 . 의 경우 &lt;code&gt;:shallow_path&lt;/code&gt; 의 옵션 참조 &lt;code&gt;Resources#resources&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65cbed0c063602b9267b0f40ad0e90635837a12c" translate="yes" xml:space="preserve">
          <source>For options, see &lt;code&gt;match&lt;/code&gt;, as &lt;code&gt;mount&lt;/code&gt; uses it internally.</source>
          <target state="translated">옵션을 참조 &lt;code&gt;match&lt;/code&gt; 로, &lt;code&gt;mount&lt;/code&gt; 내부적으로 사용에게 그것을.</target>
        </trans-unit>
        <trans-unit id="ebd8b4f4b24ff91f7b22992befc303194d511b64" translate="yes" xml:space="preserve">
          <source>For options, see &lt;code&gt;match&lt;/code&gt;, as &lt;code&gt;root&lt;/code&gt; uses it internally.</source>
          <target state="translated">옵션 은 &lt;code&gt;root&lt;/code&gt; 가 내부적으로 사용하므로 &lt;code&gt;match&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e4f6b1e9b66b1b4691a655d00d7de12ee029372" translate="yes" xml:space="preserve">
          <source>For other actions, you just need to insert the action name as the first element of the array:</source>
          <target state="translated">다른 작업의 경우 작업 이름을 배열의 첫 번째 요소로 삽입하면됩니다.</target>
        </trans-unit>
        <trans-unit id="ebc00acf0da313bcef402e8042442480cbc019d2" translate="yes" xml:space="preserve">
          <source>For other durations please refer to the time extensions to &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">다른 기간은 &lt;code&gt;Integer&lt;/code&gt; 의 시간 확장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4bb00db033a10a802ad177adc98015ab561ad9c" translate="yes" xml:space="preserve">
          <source>For other durations please refer to the time extensions to &lt;code&gt;Numeric&lt;/code&gt;.</source>
          <target state="translated">다른 기간은 &lt;code&gt;Numeric&lt;/code&gt; 의 시간 연장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7225651934596fb993ff0c588eba6818b534b7e" translate="yes" xml:space="preserve">
          <source>For redirects within the same controller, you can even call follow_redirect and the redirect will be followed, triggering another action call which can then be asserted against.</source>
          <target state="translated">동일한 컨트롤러 내에서 리디렉션의 경우 follow_redirect를 호출 할 수도 있고 리디렉션이 수행되어 다른 작업 호출이 트리거되어 다른 어설 션이 발생 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20a210a81ad03206eaa1d76224a480c22cc33a76" translate="yes" xml:space="preserve">
          <source>For removing objects from the session, you can either assign a single key to &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">세션에서 객체를 제거하기 위해 단일 키를 &lt;code&gt;nil&lt;/code&gt; 에 할당 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d60d3b627d051edc6f33ed8fd3ab3e989c35eec6" translate="yes" xml:space="preserve">
          <source>For routes that don't fit the &lt;code&gt;resources&lt;/code&gt; mold, you can use the HTTP helper methods &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resources&lt;/code&gt; 금형에 맞지 않는 경로의 경우 HTTP 도우미 메소드 &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;post&lt;/code&gt; , &lt;code&gt;patch&lt;/code&gt; , &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;delete&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5943f5bf0047015c862144ae1384ea5c7c5c7238" translate="yes" xml:space="preserve">
          <source>For session management</source>
          <target state="translated">세션 관리</target>
        </trans-unit>
        <trans-unit id="78a648be68b6570f7c46bf8d963aac0b312be8e4" translate="yes" xml:space="preserve">
          <source>For several reasons the Simple backend shipped with Active Support only does the &quot;simplest thing that could possibly work&quot; &lt;em&gt;for Ruby on Rails&lt;/em&gt;&lt;sup id=&quot;footnote-3-ref&quot;&gt;&lt;a href=&quot;#footnote-3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; ... which means that it is only guaranteed to work for English and, as a side effect, languages that are very similar to English. Also, the simple backend is only capable of reading translations but cannot dynamically store them to any format.</source>
          <target state="translated">여러 가지 이유로 Active Support와 함께 제공된 단순 백엔드 &lt;em&gt;는 Ruby on Rails &lt;/em&gt;&lt;sup id=&quot;footnote-3-ref&quot;&gt;&lt;a href=&quot;#footnote-3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;em&gt; 에 대해&lt;/em&gt; &quot;가장 작동 할 수있는 가장 간단한 것&quot;만 수행합니다 . 이는 영어 및 부작용으로 언어에 대해서만 작동한다는 보장입니다. 영어와 매우 비슷합니다. 또한 단순 백엔드는 번역을 읽을 수만 있지만 동적으로 어떤 형식으로도 저장할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6ccb771b1868d49f80bdb1a24b4a3c514653b4ad" translate="yes" xml:space="preserve">
          <source>For severe security issues all releases in the current major series, and also the last major release series will receive patches and new versions. The classification of the security issue is judged by the core team.</source>
          <target state="translated">심각한 보안 문제의 경우 현재 주요 시리즈의 모든 릴리스와 마지막 주요 릴리스 시리즈에 패치와 새 버전이 제공됩니다. 보안 문제의 분류는 핵심 팀이 판단합니다.</target>
        </trans-unit>
        <trans-unit id="91d5ba8c29185f97581dc34197746ed83f5d7a05" translate="yes" xml:space="preserve">
          <source>For severe security issues all releases in the current major series, and also the last release in the previous major series will receive patches and new versions. The classification of the security issue is judged by the core team.</source>
          <target state="translated">심각한 보안 문제의 경우 현재 주요 시리즈의 모든 릴리스와 이전 주요 시리즈의 마지막 릴리스에도 패치와 새 버전이 제공됩니다. 보안 문제의 분류는 핵심 팀에서 판단합니다.</target>
        </trans-unit>
        <trans-unit id="bec5bd652cf6324b81872307c77c37a3cbcb54c5" translate="yes" xml:space="preserve">
          <source>For simple class modifications, use &lt;code&gt;Class#class_eval&lt;/code&gt;. For complex class modifications, consider using &lt;code&gt;ActiveSupport::Concern&lt;/code&gt;.</source>
          <target state="translated">간단한 클래스 수정을 위해서는 &lt;code&gt;Class#class_eval&lt;/code&gt; 을 사용하십시오 . 복잡한 클래스 수정의 경우 &lt;code&gt;ActiveSupport::Concern&lt;/code&gt; 사용을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e00b3463c5c916c2c8cf0901ca46393d8019388" translate="yes" xml:space="preserve">
          <source>For the curious, &lt;code&gt;'articles#index'&lt;/code&gt; actually expands out to &lt;code&gt;ArticlesController.action(:index)&lt;/code&gt;, which returns a valid Rack application.</source>
          <target state="translated">궁금한 점은 &lt;code&gt;'articles#index'&lt;/code&gt; 가 실제로 &lt;code&gt;ArticlesController.action(:index)&lt;/code&gt; 확장되어 유효한 랙 응용 프로그램을 반환한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="76d1aab46d62d4fe6b039884d455728672c8a1b7" translate="yes" xml:space="preserve">
          <source>For the purpose of this guide pretend for a moment that you are an avid bird watcher. Your favorite bird is the Yaffle, and you want to create a plugin that allows other developers to share in the Yaffle goodness.</source>
          <target state="translated">이 안내서의 목적 상 당신이 열렬한 조류 관찰자 인 것처럼 가장하십시오. 가장 좋아하는 새는 Yaffle이며 다른 개발자가 Yaffle의 장점을 공유 할 수있는 플러그인을 만들려고합니다.</target>
        </trans-unit>
        <trans-unit id="6d48d180d0d8ae88ec8e27b38717e261eebe1164" translate="yes" xml:space="preserve">
          <source>For the purposes of unit testing a mailer, fixtures are used to provide an example of how the output &lt;em&gt;should&lt;/em&gt; look. Because these are example emails, and not Active Record data like the other fixtures, they are kept in their own subdirectory apart from the other fixtures. The name of the directory within &lt;code&gt;test/fixtures&lt;/code&gt; directly corresponds to the name of the mailer. So, for a mailer named &lt;code&gt;UserMailer&lt;/code&gt;, the fixtures should reside in &lt;code&gt;test/fixtures/user_mailer&lt;/code&gt; directory.</source>
          <target state="translated">메일러의 단위 테스트를 위해, 조명기를 사용하여 출력 &lt;em&gt;이&lt;/em&gt; 어떻게 보일지에 대한 예를 제공합니다 . 이들은 다른 조명기와 같이 Active Record 데이터가 아닌 예제 이메일이므로 다른 조명기와는 별도로 자체 하위 디렉토리에 보관됩니다. &lt;code&gt;test/fixtures&lt;/code&gt; 내의 디렉토리 이름은 메일러의 이름과 직접 일치합니다. 따라서 &lt;code&gt;UserMailer&lt;/code&gt; 라는 메일러의 경우, 조명기들은 &lt;code&gt;test/fixtures/user_mailer&lt;/code&gt; 디렉토리 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="0c65e6174e8fd13909d886c8d11f8aa569e80ad3" translate="yes" xml:space="preserve">
          <source>For the second way, use &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; in both models. This requires a join table that has no corresponding model or primary key.</source>
          <target state="translated">두 번째 방법 은 두 모델 모두에서 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt; &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; &lt;/a&gt; 를 사용하는 것 입니다. 이를 위해서는 해당 모델이나 기본 키가없는 조인 테이블이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3350c645746b50e40b536232c6b1ab96b40c7909" translate="yes" xml:space="preserve">
          <source>For the second way, use &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; in both models. This requires a join table that has no corresponding model or primary key.</source>
          <target state="translated">두 번째 방법 으로 두 모델 모두에서 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; 를 사용하십시오 . 이에 대응하는 모델이나 기본 키가없는 조인 테이블이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0b9d027367e66ff1880ca5f7c8411883f9682c8d" translate="yes" xml:space="preserve">
          <source>For the vast majority of applications this change needs no action. But in the very rare event that your application needs autoloading while running in production mode, set &lt;code&gt;Rails.application.config.enable_dependency_loading&lt;/code&gt; to true.</source>
          <target state="translated">대다수의 응용 프로그램에 대해이 변경은 별도의 조치가 필요하지 않습니다. 그러나 드물지만 프로덕션 모드에서 실행하는 동안 응용 프로그램에 자동로드가 필요한 경우 &lt;code&gt;Rails.application.config.enable_dependency_loading&lt;/code&gt; 을 true로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e1278d89b271b898dc739177bd648c1daec7436" translate="yes" xml:space="preserve">
          <source>For the vast majority of applications this change needs no action. But in the very rare event that your application needs autoloading while running in production, set &lt;code&gt;Rails.application.config.enable_dependency_loading&lt;/code&gt; to true.</source>
          <target state="translated">대부분의 애플리케이션에서이 변경은 조치가 필요하지 않습니다. 그러나 애플리케이션이 프로덕션에서 실행되는 동안 자동로드가 필요한 매우 드문 경우 &lt;code&gt;Rails.application.config.enable_dependency_loading&lt;/code&gt; 을 true로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c28492b4fcdb58ad07d0e63466f4dc02fd025baf" translate="yes" xml:space="preserve">
          <source>For these helpers the first argument is the name of an instance variable and the second is the name of a method (usually an attribute) to call on that object. Rails will set the value of the input control to the return value of that method for the object and set an appropriate input name. If your controller has defined &lt;code&gt;@person&lt;/code&gt; and that person's name is Henry then a form containing:</source>
          <target state="translated">이러한 헬퍼의 경우 첫 번째 인수는 인스턴스 변수의 이름이고 두 번째 인수는 해당 오브젝트에서 호출 할 메소드 (일반적으로 속성)의 이름입니다. Rails는 입력 컨트롤의 값을 객체의 해당 메소드의 반환 값으로 설정하고 적절한 입력 이름을 설정합니다. 컨트롤러가 &lt;code&gt;@person&lt;/code&gt; 을 정의 하고 해당 사람의 이름이 Henry 인 경우 다음을 포함하는 양식입니다.</target>
        </trans-unit>
        <trans-unit id="5e738173d2db847682b2dec420d36522d33747e3" translate="yes" xml:space="preserve">
          <source>For this section, make sure to run the commands in the root of the &lt;code&gt;blorgh&lt;/code&gt; engine's directory.</source>
          <target state="translated">이 섹션의 경우 &lt;code&gt;blorgh&lt;/code&gt; 엔진 디렉토리 의 루트에서 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ea73237c6c463516bc6d0a1fe4b30b6fe5cfe21" translate="yes" xml:space="preserve">
          <source>For top-level or anonymous modules &lt;code&gt;module_parent_name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">최상위 또는 익명 모듈의 경우 &lt;code&gt;module_parent_name&lt;/code&gt; 은 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e4282455476c88f2d4e5c51401dbaff576f5efde" translate="yes" xml:space="preserve">
          <source>For very simple APIs, this may be true. However, even in very HTML-heavy applications, most of an application's logic lives outside of the view layer.</source>
          <target state="translated">매우 간단한 API의 경우 이것이 사실 일 수 있습니다. 그러나 HTML이 많은 응용 프로그램에서도 대부분의 응용 프로그램 논리는 뷰 계층 외부에 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9d5977690a0068c8a87050146c913c589fdd3d1" translate="yes" xml:space="preserve">
          <source>Force HTTPS protocol</source>
          <target state="translated">강제 HTTPS 프로토콜</target>
        </trans-unit>
        <trans-unit id="fcbe57b83435ddb7acb09f8ade93a9531aaa98bd" translate="yes" xml:space="preserve">
          <source>Force SSL</source>
          <target state="translated">SSL 강제</target>
        </trans-unit>
        <trans-unit id="d4cd9ef2fc9fb7d2d87e08a816391dbefd83e9ab" translate="yes" xml:space="preserve">
          <source>Force default layout behavior with inheritance</source>
          <target state="translated">상속으로 기본 레이아웃 동작 강제</target>
        </trans-unit>
        <trans-unit id="020dff7089d2be223511ba9a0984d9c8de56f52e" translate="yes" xml:space="preserve">
          <source>Forces eager loading by performing a LEFT OUTER JOIN on &lt;code&gt;args&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 에서 LEFT OUTER JOIN을 수행하여 열망을 강제로 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="229cba24f1bb4c835f8a78d7c5224cde3cf74c3f" translate="yes" xml:space="preserve">
          <source>Forces reloading of relation.</source>
          <target state="translated">관계를 다시로드합니다.</target>
        </trans-unit>
        <trans-unit id="35efe543522796c977403286a276da9177a3f032" translate="yes" xml:space="preserve">
          <source>Foreign Key Support</source>
          <target state="translated">외래 키 지원</target>
        </trans-unit>
        <trans-unit id="2ee372205e15d8140654b1f5e4b497dd3fb87773" translate="yes" xml:space="preserve">
          <source>Foreign Keys</source>
          <target state="translated">외래 키</target>
        </trans-unit>
        <trans-unit id="517e7ff813e2f1e921375b0753564383b30d4b6e" translate="yes" xml:space="preserve">
          <source>Foreign keys can also be removed:</source>
          <target state="translated">외래 키도 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f3b6b5ab77f8e3b5b876460f080af20f2660c5b" translate="yes" xml:space="preserve">
          <source>Form helpers are designed to make working with models much easier compared to using just standard HTML elements by providing a set of methods for creating forms based on your models. This helper generates the HTML for forms, providing a method for each sort of input (e.g., text, password, select, and so on). When the form is submitted (i.e., when the user hits the submit button or form.submit is called via JavaScript), the form inputs will be bundled into the params object and passed back to the controller.</source>
          <target state="translated">양식 헬퍼는 모델을 기반으로 양식을 작성하기위한 일련의 메소드를 제공하여 표준 HTML 요소를 사용하는 것보다 훨씬 쉽게 모델을 사용할 수 있도록 설계되었습니다. 이 도우미는 양식에 대한 HTML을 생성하여 각 종류의 입력 (예 : 텍스트, 암호, 선택 등)에 대한 방법을 제공합니다. 양식이 제출되면 (즉, 사용자가 제출 단추를 누르거나 form.submit이 JavaScript를 통해 호출 될 때) 양식 입력이 params 오브젝트에 번들되어 컨트롤러로 다시 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="da3f04cf61327b139ac43f511ef4b0add12bb3fe" translate="yes" xml:space="preserve">
          <source>Form helpers are designed to make working with resources much easier compared to using vanilla HTML.</source>
          <target state="translated">폼 헬퍼는 바닐라 HTML을 사용하는 것에 비해 리소스 작업이 훨씬 쉬워 지도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="7d62480bc24ce94d867c462b5ea1a053b2304271" translate="yes" xml:space="preserve">
          <source>Form to external resources</source>
          <target state="translated">외부 자원 양식</target>
        </trans-unit>
        <trans-unit id="a42baa6a9386bdd8611f928ea9a5d31b72dc2b2b" translate="yes" xml:space="preserve">
          <source>FormBuilder</source>
          <target state="translated">FormBuilder</target>
        </trans-unit>
        <trans-unit id="fa6e949cce9c1a0b48fbef71036f5979f9b2fa2e" translate="yes" xml:space="preserve">
          <source>FormBuilder#default_form_builder</source>
          <target state="translated">FormBuilder#default_form_builder</target>
        </trans-unit>
        <trans-unit id="8ca3791edc7e92e058ef4a781902a111a01c2767" translate="yes" xml:space="preserve">
          <source>FormBuilder::ClassMethods</source>
          <target state="translated">FormBuilder::ClassMethods</target>
        </trans-unit>
        <trans-unit id="f06439debceded59abd717cf998c78b07967adc6" translate="yes" xml:space="preserve">
          <source>FormBuilder::ClassMethods#default_form_builder</source>
          <target state="translated">FormBuilder::ClassMethods#default_form_builder</target>
        </trans-unit>
        <trans-unit id="60c7e3bd2a7ae88a97397841cb221353c5893842" translate="yes" xml:space="preserve">
          <source>FormHelper</source>
          <target state="translated">FormHelper</target>
        </trans-unit>
        <trans-unit id="2c8e14faa240cc7ef6841b9e737dc4bf9a433878" translate="yes" xml:space="preserve">
          <source>FormOptionsHelper</source>
          <target state="translated">FormOptionsHelper</target>
        </trans-unit>
        <trans-unit id="8ff66420ce0286ed3e95edc21fb03e009325fed5" translate="yes" xml:space="preserve">
          <source>FormTagHelper</source>
          <target state="translated">FormTagHelper</target>
        </trans-unit>
        <trans-unit id="12984e06c56fe528d2ad1a23d2911b11cbe0eaaf" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; as a percentage string (e.g., 65%). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">포맷 &lt;code&gt;number&lt;/code&gt; 비율 문자열로 (예를 들어, 65 %). &lt;code&gt;options&lt;/code&gt; 해시 에서 형식을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79eb2ae76ca6ec449a6d3ee45c763c126d185edd" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; into a currency string (e.g., $13.65). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">포맷 &lt;code&gt;number&lt;/code&gt; 통화 문자열로 (예를 들어, $ 13.65). &lt;code&gt;options&lt;/code&gt; 해시 에서 형식을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d15e696b4343693f24051d95e145307d3556641c" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; into a phone number (US by default e.g., (555) 123-9876). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">포맷합니다 &lt;code&gt;number&lt;/code&gt; 전화 번호 (기본 예에 의하여 미국, (555) 123-9876)로. &lt;code&gt;options&lt;/code&gt; 해시 에서 형식을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9087826827238bee72040680877f1be50e16a6d0" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; with grouped thousands using &lt;code&gt;delimiter&lt;/code&gt; (e.g., 12,324). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">포맷 &lt;code&gt;number&lt;/code&gt; 사용하여 그룹화 수천 &lt;code&gt;delimiter&lt;/code&gt; (예 : 12324). &lt;code&gt;options&lt;/code&gt; 해시 에서 형식을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ce25360a16bad11c97ab22f6ccdccef057ce5f3" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; with the specified level of &lt;code&gt;:precision&lt;/code&gt; (e.g., 112.32 has a precision of 2 if &lt;code&gt;:significant&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, and 5 if &lt;code&gt;:significant&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">포맷합니다 &lt;code&gt;number&lt;/code&gt; 의 지정된 레벨 &lt;code&gt;:precision&lt;/code&gt; (예를 들면, 112.32는 경우 2의 정밀도를 가지고 &lt;code&gt;:significant&lt;/code&gt; 있다 &lt;code&gt;false&lt;/code&gt; , 그리고 경우 5 &lt;code&gt;:significant&lt;/code&gt; 있다 &lt;code&gt;true&lt;/code&gt; ). &lt;code&gt;options&lt;/code&gt; 해시 에서 형식을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8dc776b091b3382b38aed0c280d9ec9d779a97d9" translate="yes" xml:space="preserve">
          <source>Formats a number as a percentage string.</source>
          <target state="translated">숫자를 백분율 문자열로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="24137e01ee4942302bce4b292209b1180f939f0a" translate="yes" xml:space="preserve">
          <source>Formats a number into a currency string (e.g., $13.65).</source>
          <target state="translated">숫자를 통화 문자열로 형식화합니다 (예 : $ 13.65).</target>
        </trans-unit>
        <trans-unit id="977f52c1b073e41b3adf1f2c49f4a70d8da74e01" translate="yes" xml:space="preserve">
          <source>Formats a number into a phone number (US by default).</source>
          <target state="translated">전화 번호로 숫자를 포맷합니다 (기본적으로 미국).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
