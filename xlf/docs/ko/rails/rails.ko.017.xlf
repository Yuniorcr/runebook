<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="ba917a0f4aba99c86e775d91895afeb4b93ff99a" translate="yes" xml:space="preserve">
          <source>More advanced use of the command line is focused around finding useful (even surprising at times) options in the utilities, and fitting those to your needs and specific work flow. Listed here are some tricks up Rails' sleeve.</source>
          <target state="translated">명령 행의 고급 사용은 유틸리티에서 유용한 (때때로 놀라운) 옵션을 찾고 사용자의 요구와 특정 작업 흐름에 맞추는 데 중점을 둡니다. 여기에 Rails의 소매를 다루는 요령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">더 많은 예</target>
        </trans-unit>
        <trans-unit id="80a6b992b86c1ba7e1983d83fe134aaae1109b0e" translate="yes" xml:space="preserve">
          <source>More information about migrations can be found in the &lt;a href=&quot;active_record_migrations&quot;&gt;Migrations&lt;/a&gt; guide.</source>
          <target state="translated">마이그레이션에 대한 자세한 내용은 &lt;a href=&quot;active_record_migrations&quot;&gt;마이그레이션&lt;/a&gt; 안내서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3ed35b03edc8d1bfacf529e6c1db32d37eb5e37f" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;&lt;code&gt;ActiveJob::Core::ClassMethods#set&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6053fd77164aa71fabc62e1525d3a4af41ecd65" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob::Core::ClassMethods#set&lt;/a&gt;</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob :: Core :: ClassMethods # set&lt;/a&gt; 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a85b705b6839888932e068d061c266aa144e7aa" translate="yes" xml:space="preserve">
          <source>More precisely, if the web server is running and application files have been modified, Rails unloads all autoloaded constants just before the next request is processed. That way, application classes or modules used during that request are going to be autoloaded, thus picking up their current implementation in the file system.</source>
          <target state="translated">보다 정확하게는 웹 서버가 실행 중이고 응용 프로그램 파일이 수정 된 경우 Rails는 다음 요청이 처리되기 직전에 모든 자동로드 된 상수를 언로드합니다. 이렇게하면 요청 중에 사용 된 응용 프로그램 클래스 또는 모듈이 자동로드되어 파일 시스템에서 현재 구현을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="3a7a86c3c7bb6f061ed4b7dd4612a07ea2e55494" translate="yes" xml:space="preserve">
          <source>More reading:</source>
          <target state="translated">더 많은 독서 :</target>
        </trans-unit>
        <trans-unit id="1bc0107abee30f824ef23a770858703e03f38a74" translate="yes" xml:space="preserve">
          <source>Moreover, &lt;code&gt;Kernel#require&lt;/code&gt; loads files once, but development is much more smooth if code gets refreshed when it changes without restarting the server. It would be nice to be able to use &lt;code&gt;Kernel#load&lt;/code&gt; in development, and &lt;code&gt;Kernel#require&lt;/code&gt; in production.</source>
          <target state="translated">또한 &lt;code&gt;Kernel#require&lt;/code&gt; 는 파일을 한 번로드하지만 서버를 다시 시작하지 않고 코드를 변경할 때 코드를 새로 고치면 개발이 훨씬 매끄 럽습니다. 개발에 &lt;code&gt;Kernel#load&lt;/code&gt; 를 사용 하고 프로덕션에 &lt;code&gt;Kernel#require&lt;/code&gt; 를 사용할 수 있다면 좋을 것 입니다.</target>
        </trans-unit>
        <trans-unit id="d327e6ec6a6af69476c66c4050cf30edbe14a000" translate="yes" xml:space="preserve">
          <source>Moreover, it gracefully handles module dependencies. Given a &lt;code&gt;Foo&lt;/code&gt; module and a &lt;code&gt;Bar&lt;/code&gt; module which depends on the former, we would typically write the following:</source>
          <target state="translated">또한 모듈 종속성을 정상적으로 처리합니다. 전자에 의존 하는 &lt;code&gt;Foo&lt;/code&gt; 모듈과 &lt;code&gt;Bar&lt;/code&gt; 모듈이 주어지면 일반적으로 다음과 같이 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1336dbab8404ab8354f8b7e595d9f9da94e52e6a" translate="yes" xml:space="preserve">
          <source>Moreover, since the test class extends from &lt;code&gt;ActionView::TestCase&lt;/code&gt;, you have access to Rails' helper methods such as &lt;code&gt;link_to&lt;/code&gt; or &lt;code&gt;pluralize&lt;/code&gt;.</source>
          <target state="translated">또한 테스트 클래스는 &lt;code&gt;ActionView::TestCase&lt;/code&gt; 에서 확장 되므로 &lt;code&gt;link_to&lt;/code&gt; 또는 &lt;code&gt;pluralize&lt;/code&gt; 와 같은 Rails의 도우미 메소드에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88b40b9cf93fa0667fdbc7fa5d068e722af43930" translate="yes" xml:space="preserve">
          <source>Most CDNs will cache contents of an asset based on the complete URL. This means that a request to</source>
          <target state="translated">대부분의 CDN은 전체 URL을 기반으로 자산의 컨텐츠를 캐시합니다. 이것은</target>
        </trans-unit>
        <trans-unit id="f008a7d63f26d69778b0b37e05dd3fcfe81eed47" translate="yes" xml:space="preserve">
          <source>Most WYSIWYG editors are wrappers around HTML&amp;rsquo;s &lt;code&gt;contenteditable&lt;/code&gt; and &lt;code&gt;execCommand&lt;/code&gt; APIs, designed by Microsoft to support live editing of web pages in Internet Explorer 5.5, and &lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;eventually reverse-engineered&lt;/a&gt; and copied by other browsers.</source>
          <target state="translated">대부분의 WYSIWYG 편집기는 Internet Explorer 5.5에서 웹 페이지를 실시간 편집 할 수 있도록 Microsoft에서 설계 한 HTML의 &lt;code&gt;contenteditable&lt;/code&gt; 및 &lt;code&gt;execCommand&lt;/code&gt; API에 대한 래퍼 이며 , 다른 브라우저에서 &lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;리버스 엔지니어링&lt;/a&gt; 및 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="ab978ad55eb3ed14757f1864bfc815a255aea29c" translate="yes" xml:space="preserve">
          <source>Most applications need to keep track of state for users that interact with the application. This could be the contents of a shopping basket, or the user id of the currently logged in user. This kind of user-specific state can be stored in the session.</source>
          <target state="translated">대부분의 응용 프로그램은 응용 프로그램과 상호 작용하는 사용자의 상태를 추적해야합니다. 장바구니 내용 또는 현재 로그인 한 사용자의 사용자 ID 일 수 있습니다. 이러한 종류의 사용자 별 상태는 세션에 저장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="133d632a5c7bc56c3f2c19e3db9d200e367fc939" translate="yes" xml:space="preserve">
          <source>Most bots are really dumb. They crawl the web and put their spam into every form's field they can find. Negative CAPTCHAs take advantage of that and include a &quot;honeypot&quot; field in the form which will be hidden from the human user by CSS or JavaScript.</source>
          <target state="translated">대부분의 봇은 정말 바보입니다. 웹을 크롤링하고 찾을 수있는 모든 양식의 필드에 스팸을 넣습니다. 네거티브 보안 문자는이를 활용하여 CSS 또는 JavaScript에 의해 사용자에게 숨겨지는 &quot;허니팟&quot;필드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="bf0776721a91b86a474e68e52f939aa617b046e9" translate="yes" xml:space="preserve">
          <source>Most commonly, the streamed broadcast is sent straight to the subscriber on the client-side. The channel just acts as a connector between the two parties (the broadcaster and the channel subscriber). Here's an example of a channel that allows subscribers to get all new comments on a given page:</source>
          <target state="translated">가장 일반적으로 스트리밍 된 브로드 캐스트는 클라이언트 측의 구독자에게 직접 전송됩니다. 채널은 두 당사자 (방송사 및 채널 가입자) 간의 커넥터 역할을합니다. 구독자가 지정된 페이지에서 모든 새로운 댓글을받을 수있는 채널의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6bc330b7ded91a1d90bd743f5169cca15ece50bb" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that supports true nested transactions that we're aware of, is MS-SQL.</source>
          <target state="translated">대부분의 데이터베이스는 진정한 중첩 트랜잭션을 지원하지 않습니다. 글을 쓰는 시점에서 우리가 알고있는 진정한 중첩 트랜잭션을 지원하는 유일한 데이터베이스는 MS-SQL입니다.</target>
        </trans-unit>
        <trans-unit id="58ceee0a51c6eda13292b80b4053139906be4f6b" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL. Because of this, Active Record emulates nested transactions by using savepoints on MySQL and PostgreSQL. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/savepoint.html&lt;/a&gt; for more information about savepoints.</source>
          <target state="translated">대부분의 데이터베이스는 진정한 중첩 트랜잭션을 지원하지 않습니다. 글을 쓰는 시점에서 우리가 알고있는 유일한 중첩 트랜잭션을 지원하는 유일한 데이터베이스는 MS-SQL입니다. 이 때문에 Active Record는 MySQL 및 PostgreSQL에서 저장 점을 사용하여 중첩 된 트랜잭션을 에뮬레이트합니다. 저장 점에 대한 자세한 내용은 &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/savepoint.html&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="559241ef317795a676c6fda0598b936471fba822" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL. Because of this, Active Record emulates nested transactions by using savepoints. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/en/savepoint.html&lt;/a&gt; for more information about savepoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523cf2e23b0af5d149ca0c1cf81d6fcdfeb6bb03" translate="yes" xml:space="preserve">
          <source>Most important of these are of course the controller, located at &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; and the view, located at &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;.</source>
          <target state="translated">이들 중 가장 중요한 것은 물론 &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; 에있는 컨트롤러 와 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 에있는보기 입니다.</target>
        </trans-unit>
        <trans-unit id="206cc7806b5824567f552027393f40e4e3d5b31f" translate="yes" xml:space="preserve">
          <source>Most likely your application is going to contain bugs or otherwise throw an exception that needs to be handled. For example, if the user follows a link to a resource that no longer exists in the database, Active Record will throw the &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception.</source>
          <target state="translated">응용 프로그램에 버그가 포함되어 있거나 처리해야 할 예외가 발생했을 가능성이 높습니다. 예를 들어, 사용자가 데이터베이스에 더 이상 존재하지 않는 리소스에 대한 링크를 따라 가면 Active Record는 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="1d53cfefc19e9e67195ba8f79217ade0838cd9b3" translate="yes" xml:space="preserve">
          <source>Most methods expect a &lt;code&gt;number&lt;/code&gt; argument, and will return it unchanged if can't be converted into a valid number.</source>
          <target state="translated">대부분의 메소드는 &lt;code&gt;number&lt;/code&gt; 인수를 예상 하며 유효한 숫자로 변환 할 수없는 경우 변경하지 않고 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="eccfd56b24b3d8bc52ff7d0ed06cbf4578f063b0" translate="yes" xml:space="preserve">
          <source>Most of the adapters support multiple queues. With Active Job you can schedule the job to run on a specific queue:</source>
          <target state="translated">대부분의 어댑터는 여러 큐를 지원합니다. 활성 작업을 사용하면 특정 큐에서 작업이 실행되도록 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e655e97128927bac82c4977add5f48a088fef9a" translate="yes" xml:space="preserve">
          <source>Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided by &lt;a href=&quot;schemastatements&quot;&gt;&lt;code&gt;SchemaStatements&lt;/code&gt;&lt;/a&gt; are very useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee7e8c5aedcd813f43d22b5dfb2bc83dced0847" translate="yes" xml:space="preserve">
          <source>Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided by &lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements&lt;/a&gt; are very useful.</source>
          <target state="translated">어댑터의 대부분의 메소드는 마이그레이션 중에 유용합니다. 특히 &lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements에서&lt;/a&gt; 제공하는 인스턴스 메소드 는 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="48b34b3aab7d85bd74d4b838155569578ab804d8" translate="yes" xml:space="preserve">
          <source>Most of the queries here are happening in the controller. In order to benefit from streaming you would want to rewrite it as:</source>
          <target state="translated">여기서 대부분의 쿼리는 컨트롤러에서 발생합니다. 스트리밍의 이점을 얻으려면 다음과 같이 다시 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="497bca5cc5e9c844d37444e5315fa4c8d45fc350" translate="yes" xml:space="preserve">
          <source>Most people don't clear out the cookies after working at a public terminal. So if the last user didn't log out of a web application, you would be able to use it as this user. Provide the user with a &lt;em&gt;log-out button&lt;/em&gt; in the web application, and &lt;em&gt;make it prominent&lt;/em&gt;.</source>
          <target state="translated">대부분의 사람들은 공공 터미널에서 일한 후 쿠키를 지우지 않습니다. 따라서 마지막 사용자가 웹 응용 프로그램에서 로그 아웃하지 않은 경우이 사용자로 사용할 수 있습니다. 웹 애플리케이션에서 사용자에게 &lt;em&gt;로그 아웃 버튼&lt;/em&gt; 을 제공하고 &lt;em&gt;눈에 잘 띄도록하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="571b335d230721224ba2cc7dd94150881d920e90" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to &lt;code&gt;render&lt;/code&gt; in the template itself. Here are some examples of render calls that &lt;code&gt;ActionView::Digestor&lt;/code&gt; knows how to decode:</source>
          <target state="translated">대부분의 템플릿 종속성은 템플릿 자체에서 &lt;code&gt;render&lt;/code&gt; 하기위한 호출에서 파생 될 수 있습니다 . &lt;code&gt;ActionView::Digestor&lt;/code&gt; 가 디코딩하는 방법을 알고있는 렌더링 호출의 예는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5e4bf900addd8f529d8a91a4897d35ae99eedb25" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to render in the template itself. Here are some examples of render calls that Cache Digests knows how to decode:</source>
          <target state="translated">대부분의 템플릿 종속성은 템플릿 자체에서 렌더링하기위한 호출에서 파생 될 수 있습니다. 캐시 다이제스트가 디코딩하는 방법을 알고있는 렌더링 호출의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b723d7488a6748257fd951690affee4ed1b12a30" translate="yes" xml:space="preserve">
          <source>Most text helpers that generate HTML output sanitize the given input by default, but do not escape it. This means HTML tags will appear in the page but all malicious code will be removed. Let's look at some examples using the &lt;code&gt;simple_format&lt;/code&gt; method:</source>
          <target state="translated">HTML 출력을 생성하는 대부분의 텍스트 도우미는 기본적으로 지정된 입력을 삭제하지만 이스케이프하지는 않습니다. 즉, HTML 태그가 페이지에 나타나지만 모든 악성 코드가 제거됩니다. &lt;code&gt;simple_format&lt;/code&gt; 메소드를 사용하여 몇 가지 예를 살펴 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="6c4acaae05139d290e7eb7c3702ecdfb4740715e" translate="yes" xml:space="preserve">
          <source>Most times you only care about the data itself. Here is a shortcut to just get the data.</source>
          <target state="translated">대부분의 경우 데이터 자체에만 관심이 있습니다. 다음은 데이터를 얻는 바로 가기입니다.</target>
        </trans-unit>
        <trans-unit id="5be95de95c3a694cdfaa9b01f941d8b4d82957f5" translate="yes" xml:space="preserve">
          <source>Mount a Rack-based application to be used within the application.</source>
          <target state="translated">응용 프로그램 내에서 사용할 랙 기반 응용 프로그램을 마운트하십시오.</target>
        </trans-unit>
        <trans-unit id="e66103f0e1c609f714c07a70bc4e128e09dc1a34" translate="yes" xml:space="preserve">
          <source>Mount priority</source>
          <target state="translated">마운트 우선 순위</target>
        </trans-unit>
        <trans-unit id="65e4ece6255d32204ed3ced596b87d73f3245e49" translate="yes" xml:space="preserve">
          <source>Mounting the Engine</source>
          <target state="translated">엔진 장착</target>
        </trans-unit>
        <trans-unit id="68e27a2147826a19a93ca554aefc33b75b0f0e77" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version after your current version.</source>
          <target state="translated">현재 버전 이후의 최신 패치 버전으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="69755f4dfaa3969fcb5b25c274c95fbd2193790b" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version of the next minor version.</source>
          <target state="translated">다음 부 버전의 최신 패치 버전으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="567bb626e54c5a63b6fa8bf66c31f36df6d87141" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;form_with&lt;/code&gt; a &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; instance associated with the scope or model is yielded, so any generated field names are prefixed with either the passed scope or the scope inferred from the &lt;code&gt;:model&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2a29dbde4926cfbfe6b23506f21556494d10f9" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;form_with&lt;/code&gt; a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; instance associated with the scope or model is yielded, so any generated field names are prefixed with either the passed scope or the scope inferred from the &lt;code&gt;:model&lt;/code&gt;.</source>
          <target state="translated">흡사 &lt;code&gt;form_with&lt;/code&gt; &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder의&lt;/a&gt; 임의의 생성 된 필드 이름이 통과 범위 또는 범위로부터 추론하거나 접두어 있도록 범위 또는 모델과 연관된 인스턴스가 수득되는 &lt;code&gt;:model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c669cfe6f565d5e96b459b6a859e113771af92a" translate="yes" xml:space="preserve">
          <source>Much of Action Controller's functionality is implemented as Middlewares. The following list explains the purpose of each of them:</source>
          <target state="translated">대부분의 Action Controller 기능은 미들웨어로 구현됩니다. 다음 목록은 각각의 목적을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="fdad3ac6d447afe1cd48c10de24f4c825fd91666" translate="yes" xml:space="preserve">
          <source>MultiJSON has reached its &lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;end-of-life&lt;/a&gt; and has been removed from Rails.</source>
          <target state="translated">MultiJSON는 도달 &lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;끝 생활을&lt;/a&gt; 하고 레일에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="577e584a04dfea954500058f69395d5b90b186e3" translate="yes" xml:space="preserve">
          <source>Multibyte</source>
          <target state="translated">Multibyte</target>
        </trans-unit>
        <trans-unit id="44b3146bc43b4204d4d02b6c17400bdc44be353f" translate="yes" xml:space="preserve">
          <source>Multibyte proxy</source>
          <target state="translated">멀티 바이트 프록시</target>
        </trans-unit>
        <trans-unit id="dbfe775843033ba1d1d04a0b95553ec396faea3b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars</source>
          <target state="translated">Multibyte::Chars</target>
        </trans-unit>
        <trans-unit id="a77c779095fcad786d63d02ed4f10da364a918f8" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#compose</source>
          <target state="translated">Multibyte::Chars#compose</target>
        </trans-unit>
        <trans-unit id="3a71236f57c99aa27508902711cb5b914367a5af" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#decompose</source>
          <target state="translated">Multibyte::Chars#decompose</target>
        </trans-unit>
        <trans-unit id="c3aed8a0bd7f2e27cc61c4584bdef95c2754574b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#grapheme_length</source>
          <target state="translated">Multibyte::Chars#grapheme_length</target>
        </trans-unit>
        <trans-unit id="2cb346ad51d1b8e1ab5d6fdd3b0e315e78fe54d3" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#limit</source>
          <target state="translated">Multibyte::Chars#limit</target>
        </trans-unit>
        <trans-unit id="edb500693690502b4ce906e2d6de066647b583de" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#method_missing</source>
          <target state="translated">Multibyte::Chars#method_missing</target>
        </trans-unit>
        <trans-unit id="c9aff960c5a6365bbe220c67d92ca35bf231b25f" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#normalize</source>
          <target state="translated">Multibyte::Chars#normalize</target>
        </trans-unit>
        <trans-unit id="61fd0c3d0704b5be2b2ddc64f01f05d3cdfae11e" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#respond_to_missing?</source>
          <target state="translated">Multibyte::Chars#respond_to_missing?</target>
        </trans-unit>
        <trans-unit id="fcac9f6b46e0d66cd3b2e48b54cb4838d98b1d70" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#reverse</source>
          <target state="translated">Multibyte::Chars#reverse</target>
        </trans-unit>
        <trans-unit id="29c57575d0fe497cfc6df410d77261ee859bff5c" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#slice!</source>
          <target state="translated">Multibyte::Chars#slice!</target>
        </trans-unit>
        <trans-unit id="60924aa309b322723072e8b5d1d25f3bfc84f185" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#split</source>
          <target state="translated">Multibyte::Chars#split</target>
        </trans-unit>
        <trans-unit id="c54415b49d5dd255e971711f05c0921ca91f9567" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#tidy_bytes</source>
          <target state="translated">Multibyte::Chars#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="5696a1b68036edfea1149f28955c5171aaa066dd" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titlecase</source>
          <target state="translated">Multibyte::Chars#titlecase</target>
        </trans-unit>
        <trans-unit id="29562d818637c005447d41a14c53e35ca819d736" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titleize</source>
          <target state="translated">Multibyte::Chars#titleize</target>
        </trans-unit>
        <trans-unit id="3c0ba0b40fbfb06c8ff8eb5ac6b1a814a13abe65" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_s</source>
          <target state="translated">Multibyte::Chars#to_s</target>
        </trans-unit>
        <trans-unit id="4e507c3e7ade2459ad387acbc199ef65753f44e1" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_str</source>
          <target state="translated">Multibyte::Chars#to_str</target>
        </trans-unit>
        <trans-unit id="e0852a435607775956151f2d12a44d374e367131" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#wrapped_string</source>
          <target state="translated">Multibyte::Chars#wrapped_string</target>
        </trans-unit>
        <trans-unit id="f1b49e7f7cacefac11c721baed55601e72598ac0" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::consumes?</source>
          <target state="translated">Multibyte::Chars::consumes?</target>
        </trans-unit>
        <trans-unit id="25b5a149fcfab95d5e9ac1f6c3bc6b238d1a76b6" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::new</source>
          <target state="translated">Multibyte::Chars::new</target>
        </trans-unit>
        <trans-unit id="dd207e116a1881d14e8755e2dd8afad68ca66404" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode</source>
          <target state="translated">Multibyte::Unicode</target>
        </trans-unit>
        <trans-unit id="99e5ba7441254093fd472ba8b48bd5cf04210a9c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#compose</source>
          <target state="translated">Multibyte::Unicode#compose</target>
        </trans-unit>
        <trans-unit id="6a9bf80aa3e8755c3b8785c2e82d94106dafbbea" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#decompose</source>
          <target state="translated">Multibyte::Unicode#decompose</target>
        </trans-unit>
        <trans-unit id="3ab6d7fd74955bfcdd88d1183d496821920971c7" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#default_normalization_form</source>
          <target state="translated">Multibyte::Unicode#default_normalization_form</target>
        </trans-unit>
        <trans-unit id="2f590db3a14c669921995363de50c9aa7b62f029" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#normalize</source>
          <target state="translated">Multibyte::Unicode#normalize</target>
        </trans-unit>
        <trans-unit id="497c9088f01c7ac11114f3ce775aac42f7b50b8c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#pack_graphemes</source>
          <target state="translated">Multibyte::Unicode#pack_graphemes</target>
        </trans-unit>
        <trans-unit id="93ea9b938b0c09536d97df26cee8e9d7797e904e" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#tidy_bytes</source>
          <target state="translated">Multibyte::Unicode#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="f24dbeb8438b74efbec9b1765decb2e0a554ecd2" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#unpack_graphemes</source>
          <target state="translated">Multibyte::Unicode#unpack_graphemes</target>
        </trans-unit>
        <trans-unit id="8478db7c1329df5939eeb843202273bc3ca6f4fd" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class</source>
          <target state="translated">Multibyte::proxy_class</target>
        </trans-unit>
        <trans-unit id="5b6a01d724fec572618c3d6bbaca05853b8359ee" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class=</source>
          <target state="translated">Multibyte::proxy_class=</target>
        </trans-unit>
        <trans-unit id="1c0b905d64b0517973b54b47221309dc3ae10f49" translate="yes" xml:space="preserve">
          <source>Multipart Emails</source>
          <target state="translated">멀티 파트 이메일</target>
        </trans-unit>
        <trans-unit id="bb49c6706b5ec72ba15cb3e74cd18b230c613911" translate="yes" xml:space="preserve">
          <source>Multipart messages can also be used implicitly because Action Mailer will automatically detect and use multipart templates, where each template is named after the name of the action, followed by the content type. Each such detected template will be added to the message, as a separate part.</source>
          <target state="translated">Action Mailer는 멀티 파트 템플릿을 자동으로 감지하고 사용하기 때문에 멀티 파트 메시지도 암시 적으로 사용할 수 있습니다. 여기서 각 템플릿의 이름은 액션 이름 뒤에 컨텐츠 유형이 붙습니다. 탐지 된 각 템플릿은 별도의 부분으로 메시지에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5afb1cbb87b4c678f1749be244babe3f86a208c0" translate="yes" xml:space="preserve">
          <source>Multiple Applications</source>
          <target state="translated">여러 응용</target>
        </trans-unit>
        <trans-unit id="be88eb95f46dc97a706ddd49f5cd1af0da18459d" translate="yes" xml:space="preserve">
          <source>Multiple Conditions for Callbacks</source>
          <target state="translated">콜백에 대한 여러 조건</target>
        </trans-unit>
        <trans-unit id="08c54482647fa51932f62b990e2f89b4da939bdd" translate="yes" xml:space="preserve">
          <source>Multiple Databases with Active Record</source>
          <target state="translated">활성 레코드가있는 여러 데이터베이스</target>
        </trans-unit>
        <trans-unit id="2f1749c5f39d08135c935affc6ac69182f5bb4c0" translate="yes" xml:space="preserve">
          <source>Multiple delegates to the same target are allowed:</source>
          <target state="translated">동일한 대상에 대한 여러 대의원이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="38f3de59be21ca6540293770d2cd9c3d3037f833" translate="yes" xml:space="preserve">
          <source>Multiple joins:</source>
          <target state="translated">여러 조인 :</target>
        </trans-unit>
        <trans-unit id="20aff80eb14d75fd5040fa242c1b2eceb165bbca" translate="yes" xml:space="preserve">
          <source>Multiple primary databases and a replica for each</source>
          <target state="translated">여러 개의 기본 데이터베이스 및 각각에 대한 복제본</target>
        </trans-unit>
        <trans-unit id="1226f9211654c62fbd0f20c3a9246d880bbd4293" translate="yes" xml:space="preserve">
          <source>Multiple writer databases and a replica for each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee06ae209cee3e1793aab88b680177467f7df6f" translate="yes" xml:space="preserve">
          <source>Multiplies this &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951e59425d6c39d5b290427731b5200017ee438a" translate="yes" xml:space="preserve">
          <source>Multiplies this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">이 &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; 에 &lt;a href=&quot;../numeric&quot;&gt;Numeric을 곱해&lt;/a&gt; 새로운 &lt;a href=&quot;duration&quot;&gt;Duration를&lt;/a&gt; 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="05ad5edf0857ae96f7e8e591fea83fc0be2cbb1d" translate="yes" xml:space="preserve">
          <source>Mutator methods called on Relation</source>
          <target state="translated">관계에서 호출되는 뮤 테이터 메소드</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="04f6be056c62007ce171d677af3018f64ae6643c" translate="yes" xml:space="preserve">
          <source>MySQL doesn't support DDL transactions. If you perform a DDL operation, then any created savepoints will be automatically released. For example, if you've created a savepoint, then you execute a CREATE TABLE statement, then the savepoint that was created will be automatically released.</source>
          <target state="translated">MySQL은 DDL 트랜잭션을 지원하지 않습니다. DDL 작업을 수행하면 생성 된 저장 점이 자동으로 해제됩니다. 예를 들어, 저장 점을 작성한 경우 CREATE TABLE 문을 실행하면 작성된 저장 점이 자동으로 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="27c321d50bbcd9b5772400c058a31390e2decc62" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN Output Format&lt;/a&gt;</source>
          <target state="translated">MySQL : &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN 출력 형식&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdfb725f6f0e69817041da42add99b5bdb995776" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/explain-output.html&quot;&gt;EXPLAIN Output Format&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09679f1a4e7693179ccf0966910ba55b4da55040" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;code&gt;:precision&lt;/code&gt; [1..63], &lt;code&gt;:scale&lt;/code&gt; [0..30]. Default is (10,0).</source>
          <target state="translated">MySQL : &lt;code&gt;:precision&lt;/code&gt; [1..63], &lt;code&gt;:scale&lt;/code&gt; [0..30] 기본값은 (10,0)입니다.</target>
        </trans-unit>
        <trans-unit id="9f6ce4a25a9c51664b4dcdfc725f8eefd86a4c19" translate="yes" xml:space="preserve">
          <source>MySpace blocked many tags, but allowed CSS. So the worm's author put JavaScript into CSS like this:</source>
          <target state="translated">MySpace는 많은 태그를 차단했지만 CSS는 허용했습니다. 웜의 저자는 다음과 같이 JavaScript를 CSS에 넣었습니다.</target>
        </trans-unit>
        <trans-unit id="06ec39473e78b6ba391da473c04b8788442c949f" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not run in a separate process, and therefore doesn't support retries.</source>
          <target state="translated">N / A : 어댑터가 별도의 프로세스에서 실행되지 않으므로 재 시도를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9089a789f0069c4bce0cc6730a22c574fd4aa9e0" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing, and therefore sorting them.</source>
          <target state="translated">N / A : 어댑터가 큐잉을 지원하지 않으므로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="a0fcee9ccee4f7f243b5a494a4b2459fafb9c16a" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing.</source>
          <target state="translated">N / A : 어댑터가 큐잉을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90355c194c9abb6ca5245c0286a948195ec867f6" translate="yes" xml:space="preserve">
          <source>N/A: This adapter does not run in a separate process, and therefore timeout is unsupported.</source>
          <target state="translated">N / A :이 어댑터는 별도의 프로세스에서 실행되지 않으므로 시간 종료가 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e0aabc7fc6e90c4c16eb42d4f9847ec6f8b51711" translate="yes" xml:space="preserve">
          <source>NAME_COMPILABLE_REGEXP</source>
          <target state="translated">NAME_COMPILABLE_REGEXP</target>
        </trans-unit>
        <trans-unit id="364b0ae6cebce8b9b4faf58d96a008e3e0acd1b0" translate="yes" xml:space="preserve">
          <source>NATIVE_DATABASE_TYPES</source>
          <target state="translated">NATIVE_DATABASE_TYPES</target>
        </trans-unit>
        <trans-unit id="34b8b86577c6bd56c6ad5b564be28cd2f908903d" translate="yes" xml:space="preserve">
          <source>NB: The output may still contain unescaped '&amp;lt;', '&amp;gt;', '&amp;amp;' characters and confuse browsers.</source>
          <target state="translated">주의 : 출력에는 여전히 이스케이프 처리되지 않은 '&amp;lt;', '&amp;gt;', '&amp;amp;'문자 및 혼란스러운 브라우저가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66aabd91fc41cc4635aad94dc77d93a0e2eac67b" translate="yes" xml:space="preserve">
          <source>NEW</source>
          <target state="translated">NEW</target>
        </trans-unit>
        <trans-unit id="dadac5bcf4c6b4db403b0dcea4d07dd23acca6ba" translate="yes" xml:space="preserve">
          <source>NORMALIZATION_FORMS</source>
          <target state="translated">NORMALIZATION_FORMS</target>
        </trans-unit>
        <trans-unit id="5050fdd648c2c3c100230e8520feff151e76b22f" translate="yes" xml:space="preserve">
          <source>NOT Conditions</source>
          <target state="translated">NOT 조건</target>
        </trans-unit>
        <trans-unit id="6f4c044303492a84dc9ba161a054727b65adabe0" translate="yes" xml:space="preserve">
          <source>NOTE! Unless told otherwise, Rails expects an action to render a template with the same name, contained in a folder named after its controller. If this controller is an API responding with 204 (No Content), which does not require a template, then this error will occur when trying to access it via browser, since we expect an HTML template to be rendered for such requests. If that's the case, carry on.</source>
          <target state="translated">노트! 달리 언급하지 않는 한, Rails는 컨트롤러의 이름을 딴 폴더에 포함 된 동일한 이름의 템플릿을 액션으로 렌더링 할 것으로 예상합니다. 이 컨트롤러가 템플릿이 필요없는 204 (컨텐츠 없음)로 응답하는 API 인 경우 이러한 요청에 대해 HTML 템플릿이 렌더링 될 것으로 예상되므로 브라우저를 통해 액세스하려고하면이 오류가 발생합니다. 이 경우 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="b1514b2ceda44e8e38aab4c4cd4e588f35b833e1" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;test&quot;&gt;&lt;code&gt;Test&lt;/code&gt;&lt;/a&gt; adapter extends the &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; adapter, so it could be used in system tests too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c9b907d5e9772f96c352467530121723a24dcc" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; adapter extends the &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; adapter, so it could be used in system tests too.</source>
          <target state="translated">참고 : &lt;a href=&quot;test&quot;&gt;테스트&lt;/a&gt; 어댑터는 &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; 어댑터를 확장 하므로 시스템 테스트에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82b300c91ff4f01a70796137110481c8c73e629a" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;method_name&lt;/code&gt; passed to &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">참고 : &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks에&lt;/a&gt; 전달 된 &lt;code&gt;method_name&lt;/code&gt; 은 &lt;code&gt;!&lt;/code&gt; 로 끝나서 는 안됩니다 . , &lt;code&gt;?&lt;/code&gt; 또는 &lt;code&gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1f01e821d2105736464d9a1834f5f53a57aca84" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;method_name&lt;/code&gt; passed to &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;&lt;code&gt;define_model_callbacks&lt;/code&gt;&lt;/a&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0ce667a0ad77170e45745c759f9a92c263c9f7" translate="yes" xml:space="preserve">
          <source>NOTE: By its nature, batch processing is subject to race conditions if other processes are modifying the database.</source>
          <target state="translated">참고 : 다른 프로세스가 데이터베이스를 수정하는 경우 배치 처리는 경쟁 조건에 따라 달라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77b33c7bf4dc36bae9675fcf16d7f5676777c7ff" translate="yes" xml:space="preserve">
          <source>NOTE: Calling &lt;code&gt;validate&lt;/code&gt; multiple times on the same method will overwrite previous definitions.</source>
          <target state="translated">참고 : 동일한 방법으로 여러 번 &lt;code&gt;validate&lt;/code&gt; 호출 하면 이전 정의를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="c1244e2875a89e59d59e46c3fbb7b9c9041b6c73" translate="yes" xml:space="preserve">
          <source>NOTE: Calling the same callback multiple times will overwrite previous callback definitions.</source>
          <target state="translated">참고 : 동일한 콜백을 여러 번 호출하면 이전 콜백 정의를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="459a5611b4fb3651cbcf5fb40048074d44f62f2e" translate="yes" xml:space="preserve">
          <source>NOTE: Discarded selects will default to 1. So if no month select is available, January will be assumed.</source>
          <target state="translated">참고 : 삭제 된 선택은 기본적으로 1로 설정됩니다. 따라서 사용할 수있는 월을 선택하지 않으면 1 월이 가정됩니다.</target>
        </trans-unit>
        <trans-unit id="35bb5d930d5344ab9c4661a4a291c03f392618bf" translate="yes" xml:space="preserve">
          <source>NOTE: Each nesting level will merge inherited defaults in addition to their own.</source>
          <target state="translated">참고 : 각 중첩 수준은 상속 된 기본값과 고유 한 기본값을 병합합니다.</target>
        </trans-unit>
        <trans-unit id="e780dd9cbb0eaceca23a69ca7ca982d3efb3e44a" translate="yes" xml:space="preserve">
          <source>NOTE: If you are going to iterate through each record, you should call each_record on the yielded BatchEnumerator:</source>
          <target state="translated">참고 : 각 레코드를 반복하려면 생성 된 BatchEnumerator에서 each_record를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="c165b1ec162ea38175fc46f3bdc9c823fddf560e" translate="yes" xml:space="preserve">
          <source>NOTE: If you are using structured database data types (e.g. PostgreSQL &lt;code&gt;hstore&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt;, or MySQL 5.7+ &lt;code&gt;json&lt;/code&gt;) there is no need for the serialization provided by .store. Simply use .store_accessor instead to generate the accessor methods. Be aware that these columns use a string keyed hash and do not allow access using a symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9110f77a80c94aa7c9d01ac9563f7305028fc714" translate="yes" xml:space="preserve">
          <source>NOTE: If you are using structured database data types (eg. PostgreSQL &lt;code&gt;hstore&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt;, or MySQL 5.7+ &lt;code&gt;json&lt;/code&gt;) there is no need for the serialization provided by .store. Simply use .store_accessor instead to generate the accessor methods. Be aware that these columns use a string keyed hash and do not allow access using a symbol.</source>
          <target state="translated">참고 : 구조화 된 데이터베이스 데이터 유형 (예 : PostgreSQL &lt;code&gt;hstore&lt;/code&gt; / &lt;code&gt;json&lt;/code&gt; 또는 MySQL 5.7+ &lt;code&gt;json&lt;/code&gt; )을 사용하는 경우 .store에서 제공 한 직렬화가 필요하지 않습니다. 접근 자 메서드를 생성하려면 대신 .store_accessor를 사용하십시오. 이 열은 문자열 키 해시를 사용하며 기호를 사용한 액세스를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5aa3f2e463dee8d6a93b822667caffdd28ed89f" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering consistent. Therefore the primary key must be orderable, e.g. an integer or a string.</source>
          <target state="translated">참고 : 주문을 설정할 수 없습니다. 배치 순서가 일관되도록 기본 키 ( &quot;id ASC&quot;)에서 오름차순으로 자동 설정됩니다. 따라서 기본 키 (예 : 정수 또는 문자열)를 정렬 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="dde7531f52bc0c757ff3d34c5fe675032ed0dc59" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering work. This also means that this method only works when the primary key is orderable (e.g. an integer or string).</source>
          <target state="translated">참고 : 주문을 설정할 수 없습니다. 배치 순서가 작동하도록 기본 키 ( &quot;id ASC&quot;)에서 오름차순으로 자동 설정됩니다. 또한이 방법은 기본 키를 주문할 수있는 경우에만 작동합니다 (예 : 정수 또는 문자열).</target>
        </trans-unit>
        <trans-unit id="29f14cc49202f0a1b0bb8a6f8ce37815657aef23" translate="yes" xml:space="preserve">
          <source>NOTE: Must be subscribed.</source>
          <target state="translated">참고 : 구독해야합니다.</target>
        </trans-unit>
        <trans-unit id="6dc6141be1468034c8070346d640d8a829f5f57d" translate="yes" xml:space="preserve">
          <source>NOTE: Only the option tags are returned, you have to wrap this call in a regular HTML select tag.</source>
          <target state="translated">참고 : 옵션 태그 만 반환되므로이 호출을 일반 HTML 선택 태그로 래핑해야합니다.</target>
        </trans-unit>
        <trans-unit id="23e989d5cf34d6bf2d00ade49c344f06feede155" translate="yes" xml:space="preserve">
          <source>NOTE: Order can be ascending (:asc) or descending (:desc). It is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;). This also means that this method only works when the primary key is orderable (e.g. an integer or string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6943a719f65fb990d18007df480f8c42cd9b18c1" translate="yes" xml:space="preserve">
          <source>NOTE: Other URL helpers can be called in the block but be careful not to invoke your custom URL helper again otherwise it will result in a stack overflow error.</source>
          <target state="translated">참고 : 다른 URL 도우미를 블록에서 호출 할 수 있지만 사용자 정의 URL 도우미를 다시 호출하지 않도록주의하십시오. 그렇지 않으면 스택 오버플로 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b156bf73ae0bbaecb78b98c9bfa46bc9edd1b4e2" translate="yes" xml:space="preserve">
          <source>NOTE: Ruby 2.4 and later support native Unicode case mappings:</source>
          <target state="translated">참고 : Ruby 2.4 이상은 기본 유니 코드 대소 문자 매핑을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d739e914d4cbb746ba24e8856710882ef4ceb321" translate="yes" xml:space="preserve">
          <source>NOTE: The :local timezone is Ruby's &lt;strong&gt;process&lt;/strong&gt; timezone, i.e. ENV.</source>
          <target state="translated">참고 : : local 시간대는 Ruby의 &lt;strong&gt;프로세스&lt;/strong&gt; 시간대입니다 (예 : ENV).</target>
        </trans-unit>
        <trans-unit id="70a7e32800af02b9f8831a9f78781ff3e3c0fa4e" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;direct&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">참고 : &lt;code&gt;namespace&lt;/code&gt; 나 &lt;code&gt;scope&lt;/code&gt; 와 같은 범위 블록 내에서 &lt;code&gt;direct&lt;/code&gt; 메서드를 사용할 수 없으며 오류가 감지되면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="84504c0e05d0a3bcbefa67ca6b2d127e74bce741" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;resolve&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">참고 : &lt;code&gt;resolve&lt;/code&gt; 메서드는 &lt;code&gt;namespace&lt;/code&gt; 또는 &lt;code&gt;scope&lt;/code&gt; 와 같은 범위 블록 내에서 사용할 수 없으며 오류가 감지되면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2e424a8b8f539c8c51767bfb36b1996ecd86b6d7" translate="yes" xml:space="preserve">
          <source>NOTE: The HTML options &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;multiple&lt;/code&gt; can all be treated as booleans. So specifying &lt;code&gt;disabled: true&lt;/code&gt; will give &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt;.</source>
          <target state="translated">참고 : HTML 옵션 &lt;code&gt;disabled&lt;/code&gt; , &lt;code&gt;readonly&lt;/code&gt; 및 &lt;code&gt;multiple&lt;/code&gt; 은 모두 부울로 처리 될 수 있습니다. 따라서 &lt;code&gt;disabled: true&lt;/code&gt; 를 지정 하면 &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="4273e9c86cc14cbdf878c0d79b4f8635103aeab2" translate="yes" xml:space="preserve">
          <source>NOTE: The default validations with the exception of &lt;code&gt;uniqueness&lt;/code&gt; will work. For example, if you want to check for &lt;code&gt;uniqueness&lt;/code&gt; with &lt;code&gt;hstore&lt;/code&gt; you will need to use a custom validation to handle it.</source>
          <target state="translated">참고 : &lt;code&gt;uniqueness&lt;/code&gt; 을 제외한 기본 유효성 검사 가 작동합니다. 예를 들어, 당신이 확인하고 싶은 경우 &lt;code&gt;uniqueness&lt;/code&gt; 과 &lt;code&gt;hstore&lt;/code&gt; 당신이 그것을 처리하기 위해 사용자 지정 유효성 검사를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ec2abfcf21d7eecb069b20fd390f5d0cd5e855b1" translate="yes" xml:space="preserve">
          <source>NOTE: The formatting and content of this middleware's output is intended for human consumption, and should be expected to change between releases.</source>
          <target state="translated">참고 :이 미들웨어 출력의 형식과 내용은 사람이 사용하기위한 것이며 릴리스간에 변경되어야합니다.</target>
        </trans-unit>
        <trans-unit id="df6a3d05f48d5164f01397df599343fc4f7b977f" translate="yes" xml:space="preserve">
          <source>NOTE: The returned records are in the same order as the ids you provide. If you want the results to be sorted by database, you can use &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt;&lt;/a&gt; method and provide an explicit &lt;a href=&quot;querymethods#method-i-order&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#order&lt;/code&gt;&lt;/a&gt; option. But &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt;&lt;/a&gt; method doesn't raise &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba561ebdca75e4e27ed2d7158136f74d0787b8fb" translate="yes" xml:space="preserve">
          <source>NOTE: The returned records are in the same order as the ids you provide. If you want the results to be sorted by database, you can use &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method and provide an explicit &lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord::QueryMethods#order&lt;/a&gt; option. But &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method doesn't raise &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt;.</source>
          <target state="translated">참고 : 반환 된 레코드는 제공 한 ID와 순서가 같습니다. 데이터베이스별로 결과를 정렬하려면 &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods # where&lt;/a&gt; 메소드를 사용하고 명시적인 &lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord :: QueryMethods # order&lt;/a&gt; 옵션을 제공하십시오. 그러나 &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods # where&lt;/a&gt; 메소드는 &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound를 발생&lt;/a&gt; 시키지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d051f3032ec6e426d27e0a95cae128b377cb5dff" translate="yes" xml:space="preserve">
          <source>NOTE: There is no &lt;code&gt;key_will_change!&lt;/code&gt; method for accessors, use &lt;code&gt;store_will_change!&lt;/code&gt; instead.</source>
          <target state="translated">참고 : &lt;code&gt;key_will_change!&lt;/code&gt; 는 없습니다 ! 접근 &lt;code&gt;store_will_change!&lt;/code&gt; 위한 방법은 store_will_change를 사용 하십시오! 대신에.</target>
        </trans-unit>
        <trans-unit id="762c4a804d75ee92e1459fdc1f1254495115d31d" translate="yes" xml:space="preserve">
          <source>NOTE: This approach has been deprecated for end-user code in favor of &lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt; and friends. Please use that approach instead.</source>
          <target state="translated">참고 :이 방법은 &lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt; 및 친구들을 위해 최종 사용자 코드에서 사용되지 않습니다 . 대신이 방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d0de1ac13c80a92b6f77a642c82b1dcfb7e1d9e9" translate="yes" xml:space="preserve">
          <source>NOTE: This check is performed only if &lt;code&gt;password_confirmation&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;. To require confirmation, make sure to add a presence check for the confirmation attribute:</source>
          <target state="translated">참고 :이 확인은 &lt;code&gt;password_confirmation&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우에만 수행됩니다 . 확인을 요구하려면 확인 속성에 대한 존재 확인을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="84dd77619c472769d8bdcac15ddd778d56672d39" translate="yes" xml:space="preserve">
          <source>NOTE: This custom behavior only applies to simple polymorphic URLs where a single model instance is passed and not more complicated forms, e.g:</source>
          <target state="translated">참고 :이 사용자 지정 동작은 단일 모델 인스턴스가 전달되고 더 복잡한 형식이 아닌 단순한 다형성 URL에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="951ec43c360ce92554228518ef500aed9eae55c6" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail if the association hasn't been assigned. If you want to ensure that the association is both present and guaranteed to be valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;validates_presence_of&lt;/a&gt;.</source>
          <target state="translated">참고 : 연결이 할당되지 않은 경우이 유효성 검사가 실패하지 않습니다. 연결이 존재하고 유효한지 &lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;확인&lt;/a&gt; 하려면 validates_presence_of 도 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e4e81557c5494f5f1a9d85acc000f2a8822047be" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail while using it with an association if the latter was assigned but not valid. If you want to ensure that it is both present and valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;validates_associated&lt;/a&gt;.</source>
          <target state="translated">참고 :이 유효성 검사는 연결이 할당되었지만 유효하지 않은 연결과 함께 사용할 때 실패하지 않습니다. 존재하고 유효한지 &lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;확인&lt;/a&gt; 하려면 validates_related 도 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d5f9e20a8fba6546eac5061bae525520123d4e92" translate="yes" xml:space="preserve">
          <source>NOTE: This won't affect any &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; objects that have already been created, e.g. any model timestamp attributes that have been read before the block will remain in the application's default timezone.</source>
          <target state="translated">참고 : 이것은 이미 생성 된 &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; 개체 (예 : 블록 전에 읽은 모델 타임 스탬프 특성)는 응용 프로그램의 기본 시간대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="01485856ed54cb882a5920d009b94f662f247905" translate="yes" xml:space="preserve">
          <source>NOTE: You cannot call class methods implicitly inside of with_options. You can access these methods using the class name instead:</source>
          <target state="translated">참고 : with_options 내에서 암시 적으로 클래스 메서드를 호출 할 수 없습니다. 대신 클래스 이름을 사용하여 이러한 메소드에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="001af184a34c3b7f841644c2049b13fde9247dcf" translate="yes" xml:space="preserve">
          <source>NOTE: queue_classic supports job scheduling since version 3.1. For older versions you can use the queue_classic-later gem.</source>
          <target state="translated">참고 : queue_classic은 버전 3.1 이후 작업 예약을 지원합니다. 이전 버전의 경우 queue_classic-later gem을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa2e3aa9db1f23e790f7456ee1a1e5d29681ed24" translate="yes" xml:space="preserve">
          <source>NOT_NULL_VIOLATION</source>
          <target state="translated">NOT_NULL_VIOLATION</target>
        </trans-unit>
        <trans-unit id="d2a96aa7908b40b3466fee80b9d1ee30c01975eb" translate="yes" xml:space="preserve">
          <source>NO_CACHE</source>
          <target state="translated">NO_CACHE</target>
        </trans-unit>
        <trans-unit id="00b1f4e9b252474c44034ab40ad8a0aa89bcea94" translate="yes" xml:space="preserve">
          <source>NO_CONTENT_CODES</source>
          <target state="translated">NO_CONTENT_CODES</target>
        </trans-unit>
        <trans-unit id="150876396a763bfc0cea64c9d8c23622329252d0" translate="yes" xml:space="preserve">
          <source>NO_STORE</source>
          <target state="translated">NO_STORE</target>
        </trans-unit>
        <trans-unit id="d21e27fa2aab628c195a197ed9f03845aeb79542" translate="yes" xml:space="preserve">
          <source>NULL_ORIGIN_MESSAGE</source>
          <target state="translated">NULL_ORIGIN_MESSAGE</target>
        </trans-unit>
        <trans-unit id="99a01813d236bc88b0d2843edbc671a623558b8d" translate="yes" xml:space="preserve">
          <source>NUMERIC_VALUE_OUT_OF_RANGE</source>
          <target state="translated">NUMERIC_VALUE_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="70baa5f2e3ea149d3efba73d8ae1136c8b2465d4" translate="yes" xml:space="preserve">
          <source>Name of gem where method is deprecated</source>
          <target state="translated">메소드가 사용되지 않는 gem의 이름</target>
        </trans-unit>
        <trans-unit id="32e659ad4b09e8447ec3181bf0a4d92b88b4c1c6" translate="yes" xml:space="preserve">
          <source>Name of the channel class</source>
          <target state="translated">채널 클래스의 이름</target>
        </trans-unit>
        <trans-unit id="71a2fbae76fe99fa8a275b3c0d7d46236e5b55a9" translate="yes" xml:space="preserve">
          <source>Name of the mailer class</source>
          <target state="translated">메일러 클래스의 이름</target>
        </trans-unit>
        <trans-unit id="031346423a1b0ce1d227b1b30affcb044013a924" translate="yes" xml:space="preserve">
          <source>Name of the middleware</source>
          <target state="translated">미들웨어의 이름</target>
        </trans-unit>
        <trans-unit id="78457f7d39785050562a7dff3d2e99a2e0e79866" translate="yes" xml:space="preserve">
          <source>Name of the operation</source>
          <target state="translated">작업 명</target>
        </trans-unit>
        <trans-unit id="03122e3a5b21f57d2d883c6a0a49357e202d911c" translate="yes" xml:space="preserve">
          <source>Name of the service</source>
          <target state="translated">서비스 이름</target>
        </trans-unit>
        <trans-unit id="485336a1ad820f743cd287405e70730b21d6ded3" translate="yes" xml:space="preserve">
          <source>Name of the store class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4922e237a35b808877d9a82e3b4f1d76a9d175" translate="yes" xml:space="preserve">
          <source>Name#!~</source>
          <target state="translated">Name#!~</target>
        </trans-unit>
        <trans-unit id="e792f5520042a09fdd9b5e1e673cfeee3c77200f" translate="yes" xml:space="preserve">
          <source>Name#&amp;lt;=&amp;gt;</source>
          <target state="translated">Name#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1179728f0d5f43d5293a76a78366464d8a60734c" translate="yes" xml:space="preserve">
          <source>Name#==</source>
          <target state="translated">Name#==</target>
        </trans-unit>
        <trans-unit id="72068bf4dc62054d1aa334d91a8f73f1a4df79d4" translate="yes" xml:space="preserve">
          <source>Name#===</source>
          <target state="translated">Name#===</target>
        </trans-unit>
        <trans-unit id="7e2c499ce65cfd2fc2c0d8d2ec1ae1cf9580ba97" translate="yes" xml:space="preserve">
          <source>Name#=~</source>
          <target state="translated">Name#=~</target>
        </trans-unit>
        <trans-unit id="e3a602bd022b88eb5fde04d80ef58513bf53d879" translate="yes" xml:space="preserve">
          <source>Name#cache_key</source>
          <target state="translated">Name#cache_key</target>
        </trans-unit>
        <trans-unit id="4681debcf82ac876bdf9bce21fce76c198d4aa93" translate="yes" xml:space="preserve">
          <source>Name#collection</source>
          <target state="translated">Name#collection</target>
        </trans-unit>
        <trans-unit id="ddf13fdc6f4b9d40165f558c9f93bad094528b73" translate="yes" xml:space="preserve">
          <source>Name#element</source>
          <target state="translated">Name#element</target>
        </trans-unit>
        <trans-unit id="463ae0c60d41feba7ad71200788dc4337d894175" translate="yes" xml:space="preserve">
          <source>Name#eql?</source>
          <target state="translated">Name#eql?</target>
        </trans-unit>
        <trans-unit id="98daf91647588f6bd7efd46dce99631c206bb5c1" translate="yes" xml:space="preserve">
          <source>Name#human</source>
          <target state="translated">Name#human</target>
        </trans-unit>
        <trans-unit id="c97e546358582b5a5ba1ea7bdf50be71b53e922b" translate="yes" xml:space="preserve">
          <source>Name#i18n_key</source>
          <target state="translated">Name#i18n_key</target>
        </trans-unit>
        <trans-unit id="c22528385d14458160cc452921eaab5c5a7bdce5" translate="yes" xml:space="preserve">
          <source>Name#match?</source>
          <target state="translated">Name#match?</target>
        </trans-unit>
        <trans-unit id="eee58f9d0bbf2eb7debc13e44da843d09fd29e93" translate="yes" xml:space="preserve">
          <source>Name#name</source>
          <target state="translated">Name#name</target>
        </trans-unit>
        <trans-unit id="18b2ab85207f22841861f5f4e4e3c8548355b26c" translate="yes" xml:space="preserve">
          <source>Name#param_key</source>
          <target state="translated">Name#param_key</target>
        </trans-unit>
        <trans-unit id="d7cc97c1964b5845cb4a881ef26f71711ce1bde7" translate="yes" xml:space="preserve">
          <source>Name#plural</source>
          <target state="translated">Name#plural</target>
        </trans-unit>
        <trans-unit id="c5f2701a378862cb6c909900693c993cdb5a070a" translate="yes" xml:space="preserve">
          <source>Name#route_key</source>
          <target state="translated">Name#route_key</target>
        </trans-unit>
        <trans-unit id="ea2815d1e3255ea3fe84eecd0b1534fda2f22333" translate="yes" xml:space="preserve">
          <source>Name#singular</source>
          <target state="translated">Name#singular</target>
        </trans-unit>
        <trans-unit id="3f1cb4167052af9701bd98eaab092beb46b304fb" translate="yes" xml:space="preserve">
          <source>Name#singular_route_key</source>
          <target state="translated">Name#singular_route_key</target>
        </trans-unit>
        <trans-unit id="5a69bdd1ef58b83bac730aaf7e46814d70697147" translate="yes" xml:space="preserve">
          <source>Name#to_s</source>
          <target state="translated">Name#to_s</target>
        </trans-unit>
        <trans-unit id="7ce74ccf007c0a9889745b2a5abd494e855bfcfa" translate="yes" xml:space="preserve">
          <source>Name#to_str</source>
          <target state="translated">Name#to_str</target>
        </trans-unit>
        <trans-unit id="055abe0c93806fd5fddede2eb9dd54fec55fd4c4" translate="yes" xml:space="preserve">
          <source>Name::new</source>
          <target state="translated">Name::new</target>
        </trans-unit>
        <trans-unit id="552b247919a3a4142c7193f3218e6c006dc56731" translate="yes" xml:space="preserve">
          <source>NameError</source>
          <target state="translated">NameError</target>
        </trans-unit>
        <trans-unit id="cd2bcf0c29669d641e5e068f2807dc580ed514d4" translate="yes" xml:space="preserve">
          <source>NameError#missing_name</source>
          <target state="translated">NameError#missing_name</target>
        </trans-unit>
        <trans-unit id="6519308d40a377cea33b21720a5e1eee430463f7" translate="yes" xml:space="preserve">
          <source>NameError#missing_name?</source>
          <target state="translated">NameError#missing_name?</target>
        </trans-unit>
        <trans-unit id="83cd88833f32f706e162e5b2c5207612273bba68" translate="yes" xml:space="preserve">
          <source>Named Route Helper</source>
          <target state="translated">명명 된 경로 도우미</target>
        </trans-unit>
        <trans-unit id="6243d7a9ebe509fa90d17fc1dec58ea6b19bcd3f" translate="yes" xml:space="preserve">
          <source>Named routes</source>
          <target state="translated">명명 된 노선</target>
        </trans-unit>
        <trans-unit id="fb73760ca2f5e5b7055b35a7dfc2d2a936f9ee3d" translate="yes" xml:space="preserve">
          <source>Named scopes can also have extensions, just as with &lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; declarations:</source>
          <target state="translated">명명 된 범위는 &lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; 선언 과 마찬가지로 확장명을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c53b64fd17c082e6beb4e1aca64ab7d44f35aa7e" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;config/routes.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;config/routes.rb&lt;/code&gt; 에 대한 네임 스페이스 격리 :</target>
        </trans-unit>
        <trans-unit id="79e8ca566bc6852923638a4ac14a1f95414dd757" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; 에 대한 네임 스페이스 격리 :</target>
        </trans-unit>
        <trans-unit id="2d56b45380481a0442803331c3b08a5174717f0e" translate="yes" xml:space="preserve">
          <source>Namespaces are supported. The following calls include &lt;code&gt;Foo::BarHelper&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">명명 규칙</target>
        </trans-unit>
        <trans-unit id="3c2aa7c616223e41c395f07cffdda74786d5855d" translate="yes" xml:space="preserve">
          <source>Naming Routes</source>
          <target state="translated">이름 지정 경로</target>
        </trans-unit>
        <trans-unit id="727e70bd9d31b16f99e09131ffa84f73d9c0cdab" translate="yes" xml:space="preserve">
          <source>Naming conflicts of this kind are rare in practice, but if one occurs, &lt;code&gt;require_dependency&lt;/code&gt; provides a solution by ensuring that the constant needed to trigger the heuristic is defined in the conflicting place.</source>
          <target state="translated">이러한 종류의 이름 충돌은 실제로는 드물지만, 발생하는 경우 &lt;code&gt;require_dependency&lt;/code&gt; 는 휴리스틱을 트리거하는 데 필요한 상수가 충돌하는 장소에 정의되도록하여 솔루션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="003199f690943e090431ea9315afa6128057cf84" translate="yes" xml:space="preserve">
          <source>Naming#model_name</source>
          <target state="translated">Naming#model_name</target>
        </trans-unit>
        <trans-unit id="37b2dfaa964981c5857c8884cc0c8a3ba035ecb2" translate="yes" xml:space="preserve">
          <source>Naming::param_key</source>
          <target state="translated">Naming::param_key</target>
        </trans-unit>
        <trans-unit id="15a5e01708eab09298595ec3df33c78823c5effa" translate="yes" xml:space="preserve">
          <source>Naming::plural</source>
          <target state="translated">Naming::plural</target>
        </trans-unit>
        <trans-unit id="e94910e8a8fee93c260867ec51d1f9417720d305" translate="yes" xml:space="preserve">
          <source>Naming::route_key</source>
          <target state="translated">Naming::route_key</target>
        </trans-unit>
        <trans-unit id="b08cbd482856c7e71807d58479b402a5eb900c01" translate="yes" xml:space="preserve">
          <source>Naming::singular</source>
          <target state="translated">Naming::singular</target>
        </trans-unit>
        <trans-unit id="e81567d4f4bc1b7dbbb3dc05722255fd642072fd" translate="yes" xml:space="preserve">
          <source>Naming::singular_route_key</source>
          <target state="translated">Naming::singular_route_key</target>
        </trans-unit>
        <trans-unit id="607b36733fc1c205aa141382646fa32e1828d2be" translate="yes" xml:space="preserve">
          <source>Naming::uncountable?</source>
          <target state="translated">Naming::uncountable?</target>
        </trans-unit>
        <trans-unit id="c7fccf3309993cfc8b035745c98b4d3c7546b8da" translate="yes" xml:space="preserve">
          <source>Neither of these rails commands do anything you could not do with &lt;code&gt;db:migrate&lt;/code&gt;. They are simply more convenient, since you do not need to explicitly specify the version to migrate to.</source>
          <target state="translated">이 rails 명령 중 어느 것도 &lt;code&gt;db:migrate&lt;/code&gt; 로 수행 할 수없는 작업을 수행하지 않습니다 . 마이그레이션 할 버전을 명시 적으로 지정할 필요가 없기 때문에 더 편리합니다.</target>
        </trans-unit>
        <trans-unit id="adf5561db875bd103af28bb2ff6b642ea0049140" translate="yes" xml:space="preserve">
          <source>Neither of these rails commands do anything you could not do with &lt;code&gt;db:migrate&lt;/code&gt;. They are there for convenience, since you do not need to explicitly specify the version to migrate to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e509697d698a7906a469d4a7b75c6a68f919eb56" translate="yes" xml:space="preserve">
          <source>Nested Associations</source>
          <target state="translated">중첩 된 협회</target>
        </trans-unit>
        <trans-unit id="7fba4d7bfc8f67d21d0ab22eb56f0af865916a65" translate="yes" xml:space="preserve">
          <source>Nested Attributes Examples</source>
          <target state="translated">중첩 된 속성 예</target>
        </trans-unit>
        <trans-unit id="4c468c4b63e979418047fd8eb368f74fa116c4f0" translate="yes" xml:space="preserve">
          <source>Nested Forms</source>
          <target state="translated">중첩 양식</target>
        </trans-unit>
        <trans-unit id="248022a870eb27897fa53e16452caafdbdabcf57" translate="yes" xml:space="preserve">
          <source>Nested Resources</source>
          <target state="translated">중첩 된 리소스</target>
        </trans-unit>
        <trans-unit id="a886336ca42a0ed213b8b9ef83363bbd6b3472ac" translate="yes" xml:space="preserve">
          <source>Nested attribute writers are normal setter methods named after an association. The most common way of defining these writers is either with &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; in a model definition or by defining a method with the proper name. For example: the attribute writer for the association &lt;code&gt;:address&lt;/code&gt; is called &lt;code&gt;address_attributes=&lt;/code&gt;.</source>
          <target state="translated">중첩 된 속성 작성기는 연관 이름을 따서 명명 된 일반 세터 메소드입니다. 이러한 작성자를 정의하는 가장 일반적인 방법은 모델 정의에서 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 를 사용하거나 적절한 이름으로 메소드를 정의하는 것입니다. 예를 들어 : association &lt;code&gt;:address&lt;/code&gt; 에 대한 속성 작성기 는 &lt;code&gt;address_attributes=&lt;/code&gt; 라고 합니다.</target>
        </trans-unit>
        <trans-unit id="8dba121940b3381c7ce96a44cb7145f206ea973c" translate="yes" xml:space="preserve">
          <source>Nested attributes allow you to save attributes on associated records through the parent. By default nested attribute updating is turned off and you can enable it using the &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; class method. When you enable nested attributes an attribute writer is defined on the model.</source>
          <target state="translated">중첩 된 속성을 사용하면 부모를 통해 연결된 레코드에 속성을 저장할 수 있습니다. 중첩 속성 업데이트는 기본적으로 해제되어 있으며 &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; 클래스 메서드를 사용하여 활성화 할 수 있습니다 . 중첩 된 속성을 사용하면 속성 작성기가 모델에 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="06dc580c13292fd55390e8a982f7a12ab899090b" translate="yes" xml:space="preserve">
          <source>Nested attributes allow you to save attributes on associated records through the parent. By default nested attribute updating is turned off and you can enable it using the &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; class method. When you enable nested attributes an attribute writer is defined on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f1637e9c296faeb50bd64d9b1abd9662cb9a3a" translate="yes" xml:space="preserve">
          <source>Nested attributes for an associated collection can also be passed in the form of a hash of hashes instead of an array of hashes:</source>
          <target state="translated">관련 컬렉션에 대한 중첩 속성은 해시 배열 대신 해시 해시 형식으로 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a35878c09308aa9049fa9b9a6d7c7e15c3dfe08" translate="yes" xml:space="preserve">
          <source>Nested classes are given table names prefixed by the singular form of the parent's table name. Enclosing modules are not considered.</source>
          <target state="translated">중첩 클래스에는 부모 테이블 이름의 단일 형식이 접두사로 붙인 테이블 이름이 제공됩니다. 인클로저 모듈은 고려되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="63f019e717e0ab6a9f532990a577c18fa3ae04dc" translate="yes" xml:space="preserve">
          <source>Nested joins:</source>
          <target state="translated">중첩 조인 :</target>
        </trans-unit>
        <trans-unit id="c66f56f1f5c5f4b1c4c4c05d227838c7dc604645" translate="yes" xml:space="preserve">
          <source>Nested resources and/or namespaces are also supported, as illustrated in the example:</source>
          <target state="translated">예제와 같이 중첩 된 리소스 및 / 또는 네임 스페이스도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ca2f14466890989a0ffb68ac10638261362707cc" translate="yes" xml:space="preserve">
          <source>Nested routes allow you to capture this relationship in your routing. In this case, you could include this route declaration:</source>
          <target state="translated">중첩 된 경로를 사용하면 라우팅에서이 관계를 캡처 할 수 있습니다. 이 경우 다음 경로 선언을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="127f49081f658cece5f3811cf0dc1334ffa1512f" translate="yes" xml:space="preserve">
          <source>Nested transactions</source>
          <target state="translated">중첩 된 거래</target>
        </trans-unit>
        <trans-unit id="c835d6d0c484ded0471029d4ba8a6d1f070134ea" translate="yes" xml:space="preserve">
          <source>Nested transactions support</source>
          <target state="translated">중첩 트랜잭션 지원</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="091718b4816f1f70d7c2f882eaebf502f50ff1e1" translate="yes" xml:space="preserve">
          <source>Nesting and Qualified Constants</source>
          <target state="translated">중첩 및 한정 상수</target>
        </trans-unit>
        <trans-unit id="4970c28f364d041c28f5d5ff2bc88daf1a13ad01" translate="yes" xml:space="preserve">
          <source>Network Address Types</source>
          <target state="translated">네트워크 주소 유형</target>
        </trans-unit>
        <trans-unit id="4e76369081894cf103d91859c60296711dc576f5" translate="yes" xml:space="preserve">
          <source>Network traffic is mostly based on the limited Western alphabet, so new character encodings, such as Unicode, emerged, to transmit characters in other languages. But, this is also a threat to web applications, as malicious code can be hidden in different encodings that the web browser might be able to process, but the web application might not. Here is an attack vector in UTF-8 encoding:</source>
          <target state="translated">네트워크 트래픽은 주로 제한된 서양 알파벳을 기반으로하므로 유니 코드와 같은 새로운 문자 인코딩이 등장하여 다른 언어로 문자를 전송합니다. 그러나 악의적 인 코드는 웹 브라우저가 처리 할 수있는 다른 인코딩으로 숨겨 질 수 있지만 웹 응용 프로그램은 그렇지 않을 수 있으므로 웹 응용 프로그램에 위협이됩니다. UTF-8 인코딩의 공격 벡터는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e4bdcfda250e0eb886b5666e1dc9ecfd1c81c93" translate="yes" xml:space="preserve">
          <source>Nevertheless, integration tests may want to inspect controller responses in more detail, and that's when Response can be useful for application developers. &lt;code&gt;Integration&lt;/code&gt; test methods such as ActionDispatch::Integration::Session#get and ActionDispatch::Integration::Session#post return objects of type &lt;a href=&quot;testresponse&quot;&gt;&lt;code&gt;TestResponse&lt;/code&gt;&lt;/a&gt; (which are of course also of type Response).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869ed4b7fdab7fee2a402b5ed8ba08fa65a80dda" translate="yes" xml:space="preserve">
          <source>Nevertheless, integration tests may want to inspect controller responses in more detail, and that's when Response can be useful for application developers. Integration test methods such as &lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch::Integration::RequestHelpers#get&lt;/a&gt; and &lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch::Integration::RequestHelpers#post&lt;/a&gt; return objects of type &lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt; (which are of course also of type Response).</source>
          <target state="translated">그럼에도 불구하고 통합 테스트는 컨트롤러 응답을보다 자세히 검사하기를 원할 수 있으며, 그 때 응용 프로그램 개발자에게 Response가 유용 할 수 있습니다. 같은 통합 시험 방법 &lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch :: 통합 :: RequestHelpers # GET&lt;/a&gt; 및 &lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch :: 통합 :: # 포스트 RequestHelpers&lt;/a&gt; 반환 타입의 객체 &lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt; (유형 응답의 과정도의있는).</target>
        </trans-unit>
        <trans-unit id="025519ea3f483eb11a3c8608b8a731eee0947b1b" translate="yes" xml:space="preserve">
          <source>New Features</source>
          <target state="translated">새로운 기능</target>
        </trans-unit>
        <trans-unit id="59f7814b9783bf405ce9a2b8a2eb91a07086d026" translate="yes" xml:space="preserve">
          <source>New Framework Defaults</source>
          <target state="translated">새로운 프레임 워크 기본값</target>
        </trans-unit>
        <trans-unit id="b5ef8f1886747fec7c06f3960b7cf02d2cd47dae" translate="yes" xml:space="preserve">
          <source>New Rails applications no longer generate functional style controller tests and they should only be used for backward compatibility. Integration style controller tests perform actual requests, whereas functional style controller tests merely simulate a request. Besides, integration tests are as fast as functional tests and provide lot of helpers such as &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;parsed_body&lt;/code&gt; for effective testing of controller actions including even &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c45ae6d5b92c7fc2da8f10d18dfa0aa37127c7" translate="yes" xml:space="preserve">
          <source>New Rails applications no longer generate functional style controller tests and they should only be used for backward compatibility. Integration style controller tests perform actual requests, whereas functional style controller tests merely simulate a request. Besides, integration tests are as fast as functional tests and provide lot of helpers such as &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;parsed_body&lt;/code&gt; for effective testing of controller actions including even &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; endpoints.</source>
          <target state="translated">새로운 Rails 애플리케이션은 더 이상 기능적 스타일 컨트롤러 테스트를 생성하지 않으며 이전 버전과의 호환성을 위해서만 사용해야합니다. 통합 스타일 컨트롤러 테스트는 실제 요청을 수행하지만 기능 스타일 컨트롤러 테스트는 요청을 시뮬레이션하기 만합니다. 게다가, 통합 테스트는 기능 테스트만큼 빠르게하고 같은 헬퍼 많이 제공 &lt;code&gt;as&lt;/code&gt; , &lt;code&gt;parsed_body&lt;/code&gt; 도 포함 컨트롤러 액션의 효과적인 테스트를위한 &lt;a href=&quot;api&quot;&gt;API의&lt;/a&gt; 엔드 포인트.</target>
        </trans-unit>
        <trans-unit id="7cf53ae5b6704e72f88c820669c6bc32c67a8631" translate="yes" xml:space="preserve">
          <source>New Rails projects are configured to use this implementation in development environment by default.</source>
          <target state="translated">새로운 Rails 프로젝트는 기본적으로 개발 환경에서이 구현을 사용하도록 구성되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c95d63982a47c2016210ea389140872807a5f6e4" translate="yes" xml:space="preserve">
          <source>New applications should use &lt;code&gt;zeitwerk&lt;/code&gt; mode (which is the default), and applications being upgrade are strongly encouraged to migrate to &lt;code&gt;zeitwerk&lt;/code&gt; mode. Please check the &lt;a href=&quot;upgrading_ruby_on_rails#autoloading&quot;&gt;&lt;em&gt;Upgrading Ruby on Rails&lt;/em&gt;&lt;/a&gt; guide for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c893b28bccafb88f76f9633609b9c93a062f23a" translate="yes" xml:space="preserve">
          <source>New applications will include these lines commented out in the production.rb.</source>
          <target state="translated">새로운 응용 프로그램에는 production.rb에 주석 처리 된 이러한 행이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4943683ac5afab318415394f93a1c063933cd2e1" translate="yes" xml:space="preserve">
          <source>New features are only added to the master branch and will not be made available in point releases.</source>
          <target state="translated">새로운 기능은 마스터 브랜치에만 추가되며 포인트 릴리스에서는 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ccaf4b4268072c64d096dcb7ec72db000a572a03" translate="yes" xml:space="preserve">
          <source>New features, may contain API changes (Serve as major versions of Semver). Breaking changes are paired with deprecation notices in the previous minor or major release.</source>
          <target state="translated">새로운 기능에는 API 변경 사항이 포함될 수 있습니다 (Semver의 주요 버전으로 제공). 주요 변경 사항은 이전 부 릴리스 또는 주요 릴리스에서 사용 중단 알림과 쌍을 이룹니다.</target>
        </trans-unit>
        <trans-unit id="6c84fb1c0af34488ee6f00a9554a1204b67cf86b" translate="yes" xml:space="preserve">
          <source>New features, will likely contain API changes. The difference between Rails' minor and major releases is the magnitude of breaking changes, and usually reserved for special occasions.</source>
          <target state="translated">새로운 기능에는 API 변경 사항이 포함될 수 있습니다. Rails의 마이너 릴리스와 메이저 릴리스의 차이점은 주요 변경 사항의 크기이며 일반적으로 특별한 경우를 위해 예약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="850c22852ead9d4a27eec9acc5dd2785ed98f6a9" translate="yes" xml:space="preserve">
          <source>New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes but not yet saved (pass a hash with key names matching the associated table column names). In both instances, valid attribute keys are determined by the column names of the associated table &amp;ndash; hence you can't have attributes that aren't part of the table columns.</source>
          <target state="translated">새 객체는 비어 있거나 (구성 매개 변수를 전달하지 않음) 속성을 사용하여 사전 설정되어 있지만 아직 저장되지 않은 상태로 인스턴스화 할 수 있습니다 (관련 테이블 열 이름과 일치하는 키 이름을 가진 해시를 전달). 두 경우 모두 유효한 속성 키는 연결된 테이블의 열 이름에 따라 결정되므로 테이블 열의 일부가 아닌 속성을 가질 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="58e4f9e6427a21080bbdeb14fdcf91252bfb5031" translate="yes" xml:space="preserve">
          <source>New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may already have been loaded.</source>
          <target state="translated">새로운 규칙이 맨 위에 추가됩니다. 위의 예에서 문어에 대한 불규칙한 규칙은 이제 실행되는 복수 및 단수 규칙 중 첫 번째 규칙이됩니다. 이를 통해 규칙이 이미로드 된 규칙보다 먼저 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e5b6589f6e1b2065a2343b20e9cdbdd4af676bc1" translate="yes" xml:space="preserve">
          <source>Next the message contains &lt;code&gt;request.formats&lt;/code&gt; which specifies the format of template to be served in response. It is set to &lt;code&gt;text/html&lt;/code&gt; as we requested this page via browser, so Rails is looking for an HTML template.</source>
          <target state="translated">다음으로 메시지에는 &lt;code&gt;request.formats&lt;/code&gt; 가 포함되어 있으며 응답으로 제공 할 템플릿의 형식을 지정합니다. 브라우저를 통해이 페이지를 요청했을 때 &lt;code&gt;text/html&lt;/code&gt; 로 설정 되었으므로 Rails는 HTML 템플릿을 찾고 있습니다.</target>
        </trans-unit>
        <trans-unit id="6767b8acbd10fc0b00f829278ae1fa51ceecbf6f" translate="yes" xml:space="preserve">
          <source>Next we need to &lt;em&gt;internationalize&lt;/em&gt; our application by abstracting every locale-specific element. Finally, we need to &lt;em&gt;localize&lt;/em&gt; it by providing necessary translations for these abstracts.</source>
          <target state="translated">다음으로 모든 로케일 별 요소를 추상화하여 응용 프로그램 을 &lt;em&gt;국제화&lt;/em&gt; 해야합니다 . 마지막으로 이러한 초록에 필요한 번역을 제공 하여 &lt;em&gt;현지화&lt;/em&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="109a21d6ff6f2d60ba3c1008a17050d0acac596e" translate="yes" xml:space="preserve">
          <source>Next, let's look at our first assertion:</source>
          <target state="translated">다음으로 첫 번째 주장을 보자.</target>
        </trans-unit>
        <trans-unit id="7ca4fd27013d4638016458828bb8bcf5542d52ea" translate="yes" xml:space="preserve">
          <source>Next, pass the &lt;code&gt;:pool_size&lt;/code&gt; and/or &lt;code&gt;:pool_timeout&lt;/code&gt; options when configuring the cache store:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313433b09f8307e7e5ca150e5483eea4b6548eb6" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;scaffold_controller&lt;/code&gt; generator is invoked, generating a controller called &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; (at &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt;) and its related views at &lt;code&gt;app/views/blorgh/articles&lt;/code&gt;. This generator also generates tests for the controller (&lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; and &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt;) and a helper (&lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt;).</source>
          <target state="translated">다음으로 &lt;code&gt;scaffold_controller&lt;/code&gt; 생성기가 호출되어 &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; ( &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt; 에서 ) 라는 컨트롤러 와 &lt;code&gt;app/views/blorgh/articles&lt;/code&gt; 에서 관련 뷰를 생성 합니다 . 이 생성기는 컨트롤러 ( &lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; 및 &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt; ) 및 도우미 ( &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; )에 대한 테스트도 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="40bc064bdc43c09c7cef9fb43ea119e01e614001" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;test_unit&lt;/code&gt; generator is invoked for this model, generating a model test at &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; (rather than &lt;code&gt;test/models/article_test.rb&lt;/code&gt;) and a fixture at &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; (rather than &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt;).</source>
          <target state="translated">다음은 &lt;code&gt;test_unit&lt;/code&gt; 의 발전기에서 모형 시험을 생성이 모델 호출 &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; (보다는 &lt;code&gt;test/models/article_test.rb&lt;/code&gt; )과의 고정구 &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; ( 보다는 &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="652c33338cb22e43de7f0560517c2ebd49ae8f39" translate="yes" xml:space="preserve">
          <source>Next, the partial that this line will render needs to exist. Create a new directory at &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; and in it a new file called &lt;code&gt;_form.html.erb&lt;/code&gt; which has this content to create the required partial:</source>
          <target state="translated">다음으로이 라인이 렌더링 할 부분이 존재해야합니다. &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; 에 새 디렉토리 를 만들고 여기에 &lt;code&gt;_form.html.erb&lt;/code&gt; 라는 새 파일 을 만들어 필요한 부분을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="acf9d80ade823a9926ce223f831b819c233b8f93" translate="yes" xml:space="preserve">
          <source>Next, there needs to be a form so that comments can be created on an article. To add this, put this line underneath the call to &lt;code&gt;render @article.comments&lt;/code&gt; in &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt;:</source>
          <target state="translated">다음으로 기사에 주석을 작성할 수있는 양식이 필요합니다. 이것을 추가하려면 &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; 에서 &lt;code&gt;render @article.comments&lt;/code&gt; 를 렌더링 하는 호출 아래에이 행을 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="5ff2d584c2e41a9b0f9b33f4ba937921760355d0" translate="yes" xml:space="preserve">
          <source>Next, we need to create the &lt;code&gt;update&lt;/code&gt; action in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;. Add it between the &lt;code&gt;create&lt;/code&gt; action and the &lt;code&gt;private&lt;/code&gt; method:</source>
          <target state="translated">다음 으로 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 에 &lt;code&gt;update&lt;/code&gt; 작업 을 만들어야합니다 . &lt;code&gt;create&lt;/code&gt; 조치와 &lt;code&gt;private&lt;/code&gt; 메소드 사이에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4802c4e596e6d343d4a0852de355df71a877078" translate="yes" xml:space="preserve">
          <source>Next, we need to update our &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; method to permit the new form parameter:</source>
          <target state="translated">다음으로, 새로운 폼 매개 변수를 허용하도록 &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; 메소드를 업데이트해야합니다 :</target>
        </trans-unit>
        <trans-unit id="06fff06f79987e2925e5b74dcec7e5507faadd75" translate="yes" xml:space="preserve">
          <source>Next, we need to update our &lt;code&gt;Blorgh::ArticlesController#article_params&lt;/code&gt; method to permit the new form parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a60c317f25c93fd22981b24bd2d350ba9acf0c" translate="yes" xml:space="preserve">
          <source>Next, we will generate the Car model that inherits from Vehicle. For this, we can use the &lt;code&gt;--parent=PARENT&lt;/code&gt; option, which will generate a model that inherits from the specified parent and without equivalent migration (since the table already exists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35efe3520fc6014820c61a3334ada013d78945e" translate="yes" xml:space="preserve">
          <source>Next, we will generate the three models that inherit from Vehicle. For this, we can use the &lt;code&gt;--parent=PARENT&lt;/code&gt; option, which will generate a model that inherits from the specified parent and without equivalent migration (since the table already exists).</source>
          <target state="translated">다음으로 Vehicle에서 상속 된 세 가지 모델을 생성합니다. 이를 위해 &lt;code&gt;--parent=PARENT&lt;/code&gt; 옵션을 사용할 수 있습니다.이 옵션은 지정된 상위에서 상속되며 동등한 마이그레이션없이 (테이블이 이미 존재하므로) 모델을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="599b45c8b1a4abe02f50f7999c00f774c6c961f6" translate="yes" xml:space="preserve">
          <source>Next, you have to tell Rails where your actual home page is located.</source>
          <target state="translated">다음으로 실제 홈페이지 위치를 Rails에 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="21536ceec565955083fa95fe3b89d4e6ea3c5479" translate="yes" xml:space="preserve">
          <source>Nice!</source>
          <target state="translated">Nice!</target>
        </trans-unit>
        <trans-unit id="4b8add796b363b6597a08923490d74903e475356" translate="yes" xml:space="preserve">
          <source>Nil values can be cached.</source>
          <target state="translated">유효하지 않은 값을 캐시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15e1d872b31958c396eaac1d61b9e46aa2f5531f" translate="yes" xml:space="preserve">
          <source>NilClass</source>
          <target state="translated">NilClass</target>
        </trans-unit>
        <trans-unit id="7714fef354b8c1d34f1ea5bdaf4f7461127e5c71" translate="yes" xml:space="preserve">
          <source>NilClass#try</source>
          <target state="translated">NilClass#try</target>
        </trans-unit>
        <trans-unit id="44d04e33768b6d74220565215cdeaf0ed068ca29" translate="yes" xml:space="preserve">
          <source>NilClass#try!</source>
          <target state="translated">NilClass#try!</target>
        </trans-unit>
        <trans-unit id="740f91509e986665a00d7ba80ec5edfc9035eb72" translate="yes" xml:space="preserve">
          <source>No CORS configuration is required for the Disk service since it shares your app&amp;rsquo;s origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158227f6a11ceb02d0183bb376e17da5f25f7553" translate="yes" xml:space="preserve">
          <source>No args - Returns &lt;code&gt;false&lt;/code&gt; if the relation is empty, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">인수 없음- 관계가 비어 있으면 &lt;code&gt;false&lt;/code&gt; 를 , &lt;code&gt;true&lt;/code&gt; 않으면 true를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="8a3f27db7e37442a5e3cfabfca8ff608e7a3a15c" translate="yes" xml:space="preserve">
          <source>No expiry is set on cache entries by default. Redis is expected to be configured with an eviction policy that automatically deletes least-recently or -frequently used keys when it reaches max memory. See &lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io/topics/lru-cache&lt;/a&gt; for cache server setup.</source>
          <target state="translated">캐시 항목에는 기본적으로 만료가 설정되어 있지 않습니다. Redis는 최대 메모리에 도달하면 가장 최근에 또는 자주 사용하는 키를 자동으로 삭제하는 제거 정책으로 구성해야합니다. 캐시 서버 설정에 대해서는 &lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io/topics/lru-cache&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ecec418cda521616578d32392c1ebbdd160c1be8" translate="yes" xml:space="preserve">
          <source>No further processing</source>
          <target state="translated">더 이상 처리하지 않음</target>
        </trans-unit>
        <trans-unit id="db97ed13f2ed7f611f5ba31f10f0d82c2012ecc9" translate="yes" xml:space="preserve">
          <source>No namespace is set by default. Provide one if the Redis cache server is shared with other apps: &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt;.</source>
          <target state="translated">네임 스페이스는 기본적으로 설정되어 있지 않습니다. Redis 캐시 서버가 다른 앱과 공유되는 경우 하나를 제공하십시오 : &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2870967411d1177319bcb2013fe0d0d70d0c373c" translate="yes" xml:space="preserve">
          <source>No query is performed if the relation is loaded; the given record is compared to the records in memory. If the relation is unloaded, an efficient existence query is performed, as in &lt;a href=&quot;findermethods#method-i-exists-3F&quot;&gt;&lt;code&gt;exists?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221a5c8be43af1725cb6eacac4221d7dd3fe4e70" translate="yes" xml:space="preserve">
          <source>No: Does not allow the priority of jobs to be configured.</source>
          <target state="translated">아니오 : 작업 우선 순위를 구성 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a2a5882be7f25ccecdb39e6626a88b6d1f4e5100" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the number of retries to be configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c462fcdbca133972f704e7fdc3ae4c7b6599f666" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the priority of jobs to be configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ad6734478cb826e9104f29f3625932ace44a8f" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the timeout of jobs to be configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16763f29fae6d620d661620376b81b8978bfbd1d" translate="yes" xml:space="preserve">
          <source>No: The adapter will run jobs at the next opportunity and cannot use perform_later.</source>
          <target state="translated">아니오 : 어댑터는 다음 기회에 작업을 실행하며 perform_later를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="255548651b6f315ea8148ee71a1dcca3c1b3706e" translate="yes" xml:space="preserve">
          <source>No: The job is run in the same process.</source>
          <target state="translated">아니오 : 작업이 동일한 프로세스에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="444ea91c7df550f94f3d747738c1f1a3466e0cc6" translate="yes" xml:space="preserve">
          <source>NoMethodError</source>
          <target state="translated">NoMethodError</target>
        </trans-unit>
        <trans-unit id="7bdb712b7ee9cb1572c977c6c62388b01305f84f" translate="yes" xml:space="preserve">
          <source>NoTouching</source>
          <target state="translated">NoTouching</target>
        </trans-unit>
        <trans-unit id="4409378f8e0b176c22d8f84d1d9f6e7b19f6bf2f" translate="yes" xml:space="preserve">
          <source>NoTouching#no_touching?</source>
          <target state="translated">NoTouching#no_touching?</target>
        </trans-unit>
        <trans-unit id="c47a7fa1d4ed36caf76d6aae9c8337d194a32586" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods</source>
          <target state="translated">NoTouching::ClassMethods</target>
        </trans-unit>
        <trans-unit id="ba98193055fdb0c7813315b4239b68f38d2b05af" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods#no_touching</source>
          <target state="translated">NoTouching::ClassMethods#no_touching</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="ef59dd33658fd629a399aabbada1e44d1143840c" translate="yes" xml:space="preserve">
          <source>Noisy syntax.</source>
          <target state="translated">시끄러운 구문.</target>
        </trans-unit>
        <trans-unit id="a0542163c0ba3f59fb289f1dc9e8dba5d3af2730" translate="yes" xml:space="preserve">
          <source>Non-Resourceful Routes</source>
          <target state="translated">비효율적 인 경로</target>
        </trans-unit>
        <trans-unit id="c55db06fa97f077282c5464f82b0f22e2389c4ca" translate="yes" xml:space="preserve">
          <source>Non-resourceful routes</source>
          <target state="translated">비자 원 경로</target>
        </trans-unit>
        <trans-unit id="fd0b7793c252e73868462c36c6ba36d9dd714b74" translate="yes" xml:space="preserve">
          <source>Non-significant zeros after the decimal separator are stripped out by default (set &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to change that):</source>
          <target state="translated">소수점 구분 기호 다음에 중요하지 않은 0은 기본적으로 제거됩니다 ( 변경하려면 &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 ).</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="356a42c934b09cbbe5bf46e0b7b4b0ced1bcb0a1" translate="yes" xml:space="preserve">
          <source>Normal callbacks hook into the life cycle of Active Record objects, allowing you to work with those objects at various points. For example, you can use a &lt;code&gt;:before_save&lt;/code&gt; callback to cause something to happen just before an object is saved.</source>
          <target state="translated">일반 콜백은 Active Record 객체의 수명주기에 연결되므로 다양한 시점에서 해당 객체로 작업 할 수 있습니다. 예를 들어, &lt;code&gt;:before_save&lt;/code&gt; 콜백을 사용하면 객체가 저장되기 직전에 무언가가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a13e9d32efa4b424c6392e61c6acc0eb80b45b5" translate="yes" xml:space="preserve">
          <source>Normal use:</source>
          <target state="translated">정상적인 사용 :</target>
        </trans-unit>
        <trans-unit id="1ab70b8dd2f6d458c3ed264ce52d8181dab57e68" translate="yes" xml:space="preserve">
          <source>Normalize args by converting &lt;code&gt;render &quot;foo&quot;&lt;/code&gt; to &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; and &lt;code&gt;render
&quot;foo/bar&quot;&lt;/code&gt; to &lt;code&gt;render :file =&amp;gt;
&quot;foo/bar&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;render &quot;foo&quot;&lt;/code&gt; 를 &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; 하고 &lt;code&gt;render &quot;foo/bar&quot;&lt;/code&gt; 를 &lt;code&gt;render :file =&amp;gt; &quot;foo/bar&quot;&lt;/code&gt; 로 변환하여 인수를 정규화 하십시오 .</target>
        </trans-unit>
        <trans-unit id="76ebf82afd9f2e7f802d7312d3d247b17cb36365" translate="yes" xml:space="preserve">
          <source>Normalize options.</source>
          <target state="translated">옵션을 정규화하십시오.</target>
        </trans-unit>
        <trans-unit id="cfe63d1d809fb134b05b3d5638fd48aa6ce84994" translate="yes" xml:space="preserve">
          <source>Normalizes arguments, options and then delegates &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt; and sticks the result in &lt;code&gt;self.response_body&lt;/code&gt;.</source>
          <target state="translated">인수, 옵션을 정규화 한 다음 &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt; 를 위임 하고 결과를 &lt;code&gt;self.response_body&lt;/code&gt; 에 붙 입니다.</target>
        </trans-unit>
        <trans-unit id="4c34340e1f59b977fa03f74950eb939084626d08" translate="yes" xml:space="preserve">
          <source>Normalizes arguments, options and then delegates &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;&lt;code&gt;render_to_body&lt;/code&gt;&lt;/a&gt; and sticks the result in &lt;code&gt;self.response_body&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8d8521ec1f363e13523415591e2d1d5a9b1bbc" translate="yes" xml:space="preserve">
          <source>Normally Rails ignores duplicate parameter names. If the parameter name contains an empty set of square brackets &lt;code&gt;[]&lt;/code&gt; then they will be accumulated in an array. If you wanted users to be able to input multiple phone numbers, you could place this in the form:</source>
          <target state="translated">일반적으로 Rails는 중복 매개 변수 이름을 무시합니다. 매개 변수 이름에 빈 대괄호 &lt;code&gt;[]&lt;/code&gt; 가 포함되어 있으면 배열에 누적됩니다. 사용자가 여러 전화 번호를 입력 할 수있게하려면 다음 형식으로 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="247f896aa006f08e05bcedcbde424ceee9131fe0" translate="yes" xml:space="preserve">
          <source>Normally Rails ignores duplicate parameter names. If the parameter name ends with an empty set of square brackets &lt;code&gt;[]&lt;/code&gt; then they will be accumulated in an array. If you wanted users to be able to input multiple phone numbers, you could place this in the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08e0da51423cc8cb2840120eee1ece651d5987b" translate="yes" xml:space="preserve">
          <source>Normally when you create controllers, helpers and models inside an engine, they are treated as if they were created inside the application itself. This means that all helpers and named routes from the application will be available to your engine's controllers as well.</source>
          <target state="translated">일반적으로 엔진 내부에 컨트롤러, 도우미 및 모델을 만들면 마치 응용 프로그램 내부에서 만든 것처럼 처리됩니다. 즉, 응용 프로그램의 모든 도우미와 명명 된 경로를 엔진 컨트롤러에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ef9f817caabf9bb9efcc4d6d589e7a64ec3f630" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;ApplicationController&lt;/code&gt; is the only controller that inherits from &lt;code&gt;ActionController::API&lt;/code&gt;. All other controllers in turn inherit from &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;ApplicationController&lt;/code&gt; 는 &lt;code&gt;ActionController::API&lt;/code&gt; 에서 상속하는 유일한 컨트롤러입니다 . 다른 모든 컨트롤러는 차례로 &lt;code&gt;ApplicationController&lt;/code&gt; 로부터 상속받습니다 .</target>
        </trans-unit>
        <trans-unit id="b1813582ee34406c4e4de37d56648ffafa91b226" translate="yes" xml:space="preserve">
          <source>Normally, this mechanism is used on a per-client basis. The cache middleware allows us to share this caching mechanism across clients. We can enable cross-client caching in the call to &lt;code&gt;stale?&lt;/code&gt;:</source>
          <target state="translated">일반적으로이 메커니즘은 클라이언트별로 사용됩니다. 캐시 미들웨어를 사용하면 클라이언트간에이 캐싱 메커니즘을 공유 할 수 있습니다. &lt;code&gt;stale?&lt;/code&gt; 호출에서 클라이언트 간 캐싱을 활성화 할 수 있습니까? :</target>
        </trans-unit>
        <trans-unit id="8f8bb15dfb81f5ed071f554d571757b2eb818782" translate="yes" xml:space="preserve">
          <source>Normally, you do not have to call this method directly at all. Use the &lt;code&gt;create_and_upload!&lt;/code&gt; class method instead. If you do use this method directly, make sure you are using it on a persisted &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; as otherwise another blob's data might get overwritten on the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997531dd7ea0389626b86133c48895591fcda728" translate="yes" xml:space="preserve">
          <source>Normally, you do not have to call this method directly at all. Use the factory class methods of &lt;code&gt;build_after_upload&lt;/code&gt; and &lt;code&gt;create_after_upload!&lt;/code&gt;.</source>
          <target state="translated">일반적으로이 메소드를 직접 호출 할 필요는 없습니다. &lt;code&gt;build_after_upload&lt;/code&gt; 및 &lt;code&gt;create_after_upload!&lt;/code&gt; 의 팩토리 클래스 메소드를 사용하십시오 ! .</target>
        </trans-unit>
        <trans-unit id="cf5007b07c89f0ace0d40e4bbc19ce4ffe7536c3" translate="yes" xml:space="preserve">
          <source>Not all migrations change the schema. Some just fix the data:</source>
          <target state="translated">모든 마이그레이션이 스키마를 변경하는 것은 아닙니다. 일부는 데이터를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="2fca96ad94b6af17e7dbcc07cff7f6d533f7b221" translate="yes" xml:space="preserve">
          <source>Not all web servers support streaming out-of-the-box. You need to check the instructions for each of them.</source>
          <target state="translated">모든 웹 서버가 기본 스트리밍을 지원하지는 않습니다. 각각에 대한 지침을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="06657b8133ea9b4e185fb080234e3a0364fad6ca" translate="yes" xml:space="preserve">
          <source>Not very DRY, eh? We can fix this by using events instead. We'll add a &lt;code&gt;data-*&lt;/code&gt; attribute to our link, and then bind a handler to the click event of every link that has that attribute:</source>
          <target state="translated">그리 건조하지 않습니까? 대신 이벤트를 사용하여이 문제를 해결할 수 있습니다. 링크에 &lt;code&gt;data-*&lt;/code&gt; 속성을 추가 한 다음 해당 속성이있는 모든 링크의 click 이벤트에 핸들러를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="8a01dd84a7593bdb2c8fb765b3146a0f514f25b7" translate="yes" xml:space="preserve">
          <source>NotNullViolation</source>
          <target state="translated">NotNullViolation</target>
        </trans-unit>
        <trans-unit id="9e126b084c1db58a37584261f9012e35f671ac72" translate="yes" xml:space="preserve">
          <source>Notably, the Rails routing system calls &lt;code&gt;to_param&lt;/code&gt; on models to get a value for the &lt;code&gt;:id&lt;/code&gt; placeholder. &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; returns the &lt;code&gt;id&lt;/code&gt; of a model, but you can redefine that method in your models. For example, given</source>
          <target state="translated">특히 Rails 라우팅 시스템은 모델에서 &lt;code&gt;to_param&lt;/code&gt; 을 호출 하여 &lt;code&gt;:id&lt;/code&gt; 자리 표시 자에 대한 값을 얻습니다 . &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; 은 모델 의 &lt;code&gt;id&lt;/code&gt; 를 반환 하지만 모델에서 해당 메소드를 재정의 할 수 있습니다. 예를 들어, 주어진</target>
        </trans-unit>
        <trans-unit id="3ae806db7c0984a3428e2d88329b2a10cf8332e7" translate="yes" xml:space="preserve">
          <source>Note about replacing already defined headers:</source>
          <target state="translated">이미 정의 된 헤더 교체에 대한 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="c095fd5765c7e05c2ff1778309b8fa41345203ed" translate="yes" xml:space="preserve">
          <source>Note also that destroying a record preserves its ID in the model instance, so deleted models are still comparable.</source>
          <target state="translated">또한 레코드를 삭제하면 모델 인스턴스에서 해당 ID가 유지되므로 삭제 된 모델은 여전히 ​​비슷합니다.</target>
        </trans-unit>
        <trans-unit id="7694cc2f1f0145560dfa9380500275db32ac89c8" translate="yes" xml:space="preserve">
          <source>Note an object is not required to implement all APIs in order to work with Action Pack. This module only intends to provide guidance in case you want all features out of the box.</source>
          <target state="translated">Action Pack으로 작업하기 위해 객체가 모든 API를 구현할 필요는 없습니다. 이 모듈은 모든 기능을 즉시 사용하려는 경우에만 지침을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d151fd14b51016b3cc7c384691610fb0bb532780" translate="yes" xml:space="preserve">
          <source>Note here that the routes are drawn upon the &lt;code&gt;Blorgh::Engine&lt;/code&gt; object rather than the &lt;code&gt;YourApp::Application&lt;/code&gt; class. This is so that the engine routes are confined to the engine itself and can be mounted at a specific point as shown in the &lt;a href=&quot;#test-directory&quot;&gt;test directory&lt;/a&gt; section. It also causes the engine's routes to be isolated from those routes that are within the application. The &lt;a href=&quot;#routes&quot;&gt;Routes&lt;/a&gt; section of this guide describes it in detail.</source>
          <target state="translated">여기서 경로는 &lt;code&gt;YourApp::Application&lt;/code&gt; 클래스가 아닌 &lt;code&gt;Blorgh::Engine&lt;/code&gt; 객체에 그려집니다 . 이는 엔진 경로가 엔진 자체에 국한되어 &lt;a href=&quot;#test-directory&quot;&gt;테스트 디렉토리&lt;/a&gt; 섹션에 표시된대로 특정 지점에 마운트 될 수 있도록하기위한 것 입니다. 또한 엔진 경로가 응용 프로그램 내에있는 경로와 격리되도록합니다. 이 안내서 의 &lt;a href=&quot;#routes&quot;&gt;경로&lt;/a&gt; 섹션에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="24c5cab7750f2ca8837b173b4a826ddf4d2d4cca" translate="yes" xml:space="preserve">
          <source>Note in particular that truncation takes into account the length of the omission string.</source>
          <target state="translated">특히 잘림은 생략 문자열의 길이를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="78b28b6681145d5417ac3c0780f932b9f655ecb1" translate="yes" xml:space="preserve">
          <source>Note in the previous example only one key was symbolized.</source>
          <target state="translated">이전 예제에서는 하나의 키만 상징되었습니다.</target>
        </trans-unit>
        <trans-unit id="2cf0874701acc0cffe506f4241beac6925cd1806" translate="yes" xml:space="preserve">
          <source>Note in the previous example that increments may be negative.</source>
          <target state="translated">이전 예제에서 증분은 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9212787e26354a3c8b4c889cac5d5888c2c0c12" translate="yes" xml:space="preserve">
          <source>Note that &quot;%0d%0a&quot; is URL-encoded for &quot;\r\n&quot; which is a carriage-return and line-feed (CRLF) in Ruby. So the resulting HTTP header for the second example will be the following because the second Location header field overwrites the first.</source>
          <target state="translated">&quot;% 0d % 0a&quot;는 루비에서 CRLF (carriage-return and line-feed) 인 &quot;\ r \ n&quot;에 대해 URL 인코딩됩니다. 두 번째 예제의 결과 헤더는 다음과 같습니다. 두 번째 Location 헤더 필드가 첫 번째 헤더를 덮어 쓰기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="c66d170fe2e3fe3157ac0fda9773660aea982fef" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;TRUNCATE&amp;rdquo; is also a MySQL DDL statement!</source>
          <target state="translated">&amp;ldquo;TRUNCATE&amp;rdquo;도 MySQL DDL 문입니다.</target>
        </trans-unit>
        <trans-unit id="8c4c2b62825cd7958528fd2b7d9a56ab165a975a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;:autosave&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44c012e2aa14d3cf71de66005ce218c80932da4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;ActiveRecord::NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/a&gt; sets &lt;code&gt;:autosave&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">참고 &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;accepts_nested_attributes_for 액티브 :: NestedAttributes :: ClassMethods 번호&lt;/a&gt; 설정 &lt;code&gt;:autosave&lt;/code&gt; 에 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="665fc2c9ac295036d5b41cca93f31cb2679d5b58" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; only applications don't include this module or a session middleware by default, and so don't require CSRF protection to be configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38923273a1ac5388fdafcc0d052b80b100edca09" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">참고 것을 &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for는&lt;/a&gt; 자동으로 레코드의 ID를 저장하는 숨겨진 필드를 생성합니다. 이 숨겨진 필드가 필요하지 않은 상황이 있으며 &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; 가 자동으로 렌더링 되지 않도록 &lt;code&gt;include_id: false&lt;/code&gt; 를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="369d34c452a0924a66d60a14807dc6912723427b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; from rendering it automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fa56f7cb58d6bceba0d8992232bc1ce70dad69" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">참고 것을 &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for는&lt;/a&gt; 자동으로 레코드의 ID를 저장하는 숨겨진 필드를 생성합니다. 이 숨겨진 필드가 필요하지 않은 상황이 있으며 &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; 가 자동으로 렌더링 되지 않도록 &lt;code&gt;include_id: false&lt;/code&gt; 를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db52c8295caa155c6a4c02476acb794c6f44402f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; from rendering it automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6baf90f202a6f42a23fe78dcfdfc40689608ba" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;some setups are unsupported&lt;/a&gt;.</source>
          <target state="translated">참고 &lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;일부 설정은 지원되지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a8b8ef8e6c7fa666e58bf31c01e9fc50f8306bd1" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;&lt;code&gt;includes&lt;/code&gt;&lt;/a&gt; works with association names while &lt;a href=&quot;querymethods#method-i-references&quot;&gt;&lt;code&gt;references&lt;/code&gt;&lt;/a&gt; needs the actual table name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d319a82de5469887e65f4e1b3e5b326d201bb0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;includes&lt;/a&gt; works with association names while &lt;a href=&quot;querymethods#method-i-references&quot;&gt;references&lt;/a&gt; needs the actual table name.</source>
          <target state="translated">&lt;a href=&quot;querymethods#method-i-references&quot;&gt;참조&lt;/a&gt; 에는 실제 테이블 이름이 필요한 반면 연관 이름에 대한 작업 이 &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;포함됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2fc790da857a2db72a54644ec80ca81a48894c76" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;&lt;code&gt;create_join_table&lt;/code&gt;&lt;/a&gt; does not create any indices by default; you can use its block form to do so yourself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e687fc1dc77b6bcff094a5807d77a44d345aed" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt; does not create any indices by default; you can use its block form to do so yourself:</source>
          <target state="translated">참고 &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table은&lt;/a&gt; 기본적으로 어떤 인덱스를 생성하지 않습니다; 블록 형식을 사용하여 직접 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23bdc84508523e0b51533fa029acb1aad34f1ad8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;%0d%0a&lt;/code&gt; is URL-encoded for &lt;code&gt;\r\n&lt;/code&gt; which is a carriage-return and line-feed (CRLF) in Ruby. So the resulting HTTP header for the second example will be the following because the second Location header field overwrites the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c811d3f55dffacb3921985a1c74934b15a7fe8d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt; and &lt;code&gt;:id&lt;/code&gt; are interpreted as URL query parameters and thus available through &lt;code&gt;params&lt;/code&gt; in an action.</source>
          <target state="translated">참고 &lt;code&gt;:controller&lt;/code&gt; , &lt;code&gt;:action&lt;/code&gt; 과 &lt;code&gt;:id&lt;/code&gt; URL 쿼리 매개 변수로 해석을 통해, 따라서 사용할 수 있습니다 &lt;code&gt;params&lt;/code&gt; 동작한다.</target>
        </trans-unit>
        <trans-unit id="dc3176ed2b3dd187522e4366e6d013975d35837d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; is implemented using Rails' callback system, which works by processing callbacks in order. Therefore, other callbacks declared either before or after the &lt;code&gt;:dependent&lt;/code&gt; option can affect what it does.</source>
          <target state="translated">참고 &lt;code&gt;:dependent&lt;/code&gt; 위해 콜백을 처리하여 작동 레일 '콜백 시스템을 사용하여 구현된다. 따라서 &lt;code&gt;:dependent&lt;/code&gt; 옵션 앞이나 뒤에 선언 된 다른 콜백은 콜백에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61ee456413f64827d2ca2c628715ca0ad954c218" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored for &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ce03a2af56f6db4c7888f2270689c9d52b7eb4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored for &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">참고 &lt;code&gt;:dependent&lt;/code&gt; 옵션이 무시됩니다 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 협회.</target>
        </trans-unit>
        <trans-unit id="325dbc5769cb675d6be42dbd169dff67360c0183" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored when using &lt;code&gt;:through&lt;/code&gt; option.</source>
          <target state="translated">그 참고 &lt;code&gt;:dependent&lt;/code&gt; 사용할 때 옵션이 무시됩니다 &lt;code&gt;:through&lt;/code&gt; 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="dc0da45d44e4ef2c4f7a2df800102b6112ec456b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:if&lt;/code&gt; has priority over &lt;code&gt;:except&lt;/code&gt; in case they are used together.</source>
          <target state="translated">참고 &lt;code&gt;:if&lt;/code&gt; 우선 순위가 이상 &lt;code&gt;:except&lt;/code&gt; 경우에 그들이 함께 사용된다.</target>
        </trans-unit>
        <trans-unit id="7a64c122b47cf95270a43e85eeebf6bb50d00438" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:only&lt;/code&gt; has priority over &lt;code&gt;:if&lt;/code&gt; in case they are used together.</source>
          <target state="translated">참고 &lt;code&gt;:only&lt;/code&gt; 보다 우선 순위가 &lt;code&gt;:if&lt;/code&gt; 경우에 그들은 함께 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="565db700fe7dd945135cedb2356482108c2bba25" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ActiveModel::Validations&lt;/code&gt; automatically adds an &lt;code&gt;errors&lt;/code&gt; method to your instances initialized with a new &lt;code&gt;ActiveModel::Errors&lt;/code&gt; object, so there is no need for you to do this manually.</source>
          <target state="translated">참고 것을 &lt;code&gt;ActiveModel::Validations&lt;/code&gt; 자동으로 추가하는 &lt;code&gt;errors&lt;/code&gt; 인스턴스에 대한 방법은 새로 초기화 &lt;code&gt;ActiveModel::Errors&lt;/code&gt; 객체, 그래서 당신은 수동으로 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="82ddc1fd214cfcde0937046ec7f0683ab8c3bf5c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;autosave: false&lt;/code&gt; is not same as not declaring &lt;code&gt;:autosave&lt;/code&gt;. When the &lt;code&gt;:autosave&lt;/code&gt; option is not present then new association records are saved but the updated association records are not saved.</source>
          <target state="translated">참고 &lt;code&gt;autosave: false&lt;/code&gt; 선언되지 동일하지 않습니다 &lt;code&gt;:autosave&lt;/code&gt; . 때 &lt;code&gt;:autosave&lt;/code&gt; 옵션이 존재하지 않는 다음 새 연결 기록이 저장되지만 업데이트 관련 기록이 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76f8d19661e649fb882e69053f8d42ed894a3438" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classify&lt;/code&gt; returns a class name as a string. You can get the actual class object by invoking &lt;code&gt;constantize&lt;/code&gt; on it, explained next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d80f72f917064aa72f4120b7e0525fbac8be68" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classify&lt;/code&gt; returns a class name as a string. You can get the actual class object invoking &lt;code&gt;constantize&lt;/code&gt; on it, explained next.</source>
          <target state="translated">참고 &lt;code&gt;classify&lt;/code&gt; 반환 문자열로 클래스 이름을. 실제 클래스 객체를 호출하면 &lt;code&gt;constantize&lt;/code&gt; 를 얻을 수 있습니다 ( 다음 설명 참조).</target>
        </trans-unit>
        <trans-unit id="e8826cfe8cd304f02e5cc7fd9cd0269556f124f1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;connected_to&lt;/code&gt; with a role will look up an existing connection and switch using the connection specification name. This means that if you pass an unknown role like &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; you will get an error that says &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool for 'ActiveRecord::Base' found for the 'nonexistent' role.)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c01f02771dd2025c81366f7b4ab305fdcf9eff" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;connected_to&lt;/code&gt; with a role will look up an existing connection and switch using the connection specification name. This means that if you pass an unknown role like &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; you will get an error that says &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found
for the 'nonexistent' role.)&lt;/code&gt;</source>
          <target state="translated">참고 &lt;code&gt;connected_to&lt;/code&gt; 기존 연결을 조회하는 역할을하고 연결 사양 이름을 사용하여 전환 할 수 있습니다. 이는 &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; 와 같은 알 수없는 역할을 전달하면 &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found for the 'nonexistent' role.)&lt;/code&gt; 라는 오류가 발생 함을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="d25a94880736f451c356dfd25b8f9700646689b1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;content_for&lt;/code&gt; concatenates (default) the blocks it is given for a particular identifier in order. For example:</source>
          <target state="translated">참고 &lt;code&gt;content_for&lt;/code&gt; 연접 (디폴트 값)가 블록을 위해 특정 식별자에 대해 설명한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f709bc03cc9989b690018bd7796015bd85e42d21" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;deliver_later&lt;/code&gt; will execute your method from the background job.</source>
          <target state="translated">참고 &lt;code&gt;deliver_later&lt;/code&gt; 가 배경 직장에서 당신의 방법을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ace384731e2681d12d2903467f1e2b7abe234a6d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;reverse_update&lt;/code&gt; has no bang.</source>
          <target state="translated">참고 &lt;code&gt;reverse_update&lt;/code&gt; 가 더 빅뱅이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6d41aeffaefbf99cbff2faf9bf36f1aca03dbce1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;save&lt;/code&gt; also has the ability to skip validations if passed &lt;code&gt;validate:
false&lt;/code&gt; as an argument. This technique should be used with caution.</source>
          <target state="translated">주 &lt;code&gt;save&lt;/code&gt; 또한 전달 된 경우 검증을 건너 뛸 수있는 능력이 &lt;code&gt;validate: false&lt;/code&gt; 인수로합니다. 이 기술은주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b7d5cbfbac8088c113bb0b0c3ed27a94993f432" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;touch&lt;/code&gt; must be used on a persisted object, or else an &lt;a href=&quot;activerecorderror&quot;&gt;&lt;code&gt;ActiveRecordError&lt;/code&gt;&lt;/a&gt; will be thrown. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9f6fa6da45470fd512ddf42d74032a3e93aecc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;touch&lt;/code&gt; must be used on a persisted object, or else an &lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError&lt;/a&gt; will be thrown. For example:</source>
          <target state="translated">참고 &lt;code&gt;touch&lt;/code&gt; 지속 된 개체를 사용해야합니다, 또는 다른 &lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError가&lt;/a&gt; 발생합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75b7777607c65a529660c21ee27ce9672d7f3d16" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;try&lt;/code&gt; will swallow no-method errors, returning nil instead. If you want to protect against typos, use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-try-21&quot;&gt;&lt;code&gt;try!&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9543a285676c6581ed0cdcd17dc85dccd1e4f6a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;try&lt;/code&gt; will swallow no-method errors, returning nil instead. If you want to protect against typos, use &lt;code&gt;try!&lt;/code&gt; instead:</source>
          <target state="translated">참고 &lt;code&gt;try&lt;/code&gt; 대신 전무를 반환없는 방법의 오류를 삼킬 것이다. 오타를 방지하려면 &lt;code&gt;try!&lt;/code&gt; 사용하십시오 ! 대신 :</target>
        </trans-unit>
        <trans-unit id="723edf597c0f2c3bfba4a36a28e7ff66ad9453dc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;where(...)&lt;/code&gt; returns a relation, not an array like the old finders. If you require an &lt;code&gt;Array&lt;/code&gt;, use &lt;code&gt;where(...).to_a&lt;/code&gt;.</source>
          <target state="translated">참고이 &lt;code&gt;where(...)&lt;/code&gt; 관계가 아닌 기존의 측정기와 같은 배열을 반환합니다. 당신은 필요한 경우 &lt;code&gt;Array&lt;/code&gt; 사용 &lt;code&gt;where(...).to_a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89aeb743b6e9b920399d003494bf2bc2791d70d4" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;cross-site scripting (XSS) vulnerabilities bypass all CSRF protections&lt;/em&gt;. XSS gives the attacker access to all elements on a page, so they can read the CSRF security token from a form or directly submit the form. Read &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;more about XSS&lt;/a&gt; later.</source>
          <target state="translated">그주의 &lt;em&gt;모든 CSRF 보호 우회 크로스 사이트 스크립팅 (XSS) 취약점을&lt;/em&gt; . XSS는 공격자가 페이지의 모든 요소에 액세스 할 수 있도록하여 양식에서 CSRF 보안 토큰을 읽거나 양식을 직접 제출할 수 있습니다. &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;XSS에 대한 자세한 내용은&lt;/a&gt; 나중에 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="7947c734a16dab7b02f65f3261e5ec81aacc1fd7" translate="yes" xml:space="preserve">
          <source>Note that Active Record models will automatically detect their primary key. This can be avoided by using &lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key=&lt;/a&gt; on the model to define the key explicitly.</source>
          <target state="translated">Active Record 모델은 기본 키를 자동으로 감지합니다. 모델에서 &lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key =&lt;/a&gt; 를 사용하여 키를 명시 적으로 정의하면 이를 피할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22356cd337b0c6c9dab8adae88cbd559bed7ad97" translate="yes" xml:space="preserve">
          <source>Note that an &quot;around&quot; filter also wraps rendering. In particular, if in the example above, the view itself reads from the database (e.g. via a scope), it will do so within the transaction and thus present the data to preview.</source>
          <target state="translated">&quot;주변&quot;필터도 렌더링을 래핑합니다. 특히, 위의 예에서보기 자체가 데이터베이스에서 (예 : 범위를 통해) 읽는 경우 트랜잭션 내에서이를 수행하여 미리 볼 데이터를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d9752283d4766c4457e128a0a519b849a1dfc3e0" translate="yes" xml:space="preserve">
          <source>Note that an &quot;around&quot; filter also wraps rendering. In particular, in the example above, if the view itself reads from the database (e.g. via a scope), it will do so within the transaction and thus present the data to preview.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c38c998a3ea7a672e44bb1c497e9aae87c43e8" translate="yes" xml:space="preserve">
          <source>Note that an object instantiated with &lt;code&gt;new&lt;/code&gt; will not report errors even if it's technically invalid, because validations are automatically run only when the object is saved, such as with the &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;save&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 또는 &lt;code&gt;save&lt;/code&gt; 메소드 와 같이 오브젝트가 저장 될 때만 유효성 검증이 자동으로 실행되므로, &lt;code&gt;new&lt;/code&gt; 로 인스턴스화 된 오브젝트 는 기술적으로 유효하지 않더라도 오류를보고하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6f1c15a9adf9cf7aefea6b6a4f52f3bdd59c79b7" translate="yes" xml:space="preserve">
          <source>Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.</source>
          <target state="translated">식별자로 표시된 항목은 연결에서 생성 된 모든 채널 인스턴스에서 동일한 이름으로 대리인을 자동으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f40e349444c4026fd16949229b30604f440850f5" translate="yes" xml:space="preserve">
          <source>Note that appending directly to &lt;code&gt;I18n.load_path&lt;/code&gt; instead of to the application's configured i18n will &lt;em&gt;not&lt;/em&gt; override translations from external gems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf442486084fb72e4ad77056cb08bfbaed774fb" translate="yes" xml:space="preserve">
          <source>Note that appending directly to &lt;code&gt;I18n.load_paths&lt;/code&gt; instead of to the application's configured i18n will &lt;em&gt;not&lt;/em&gt; override translations from external gems.</source>
          <target state="translated">응용 프로그램의 구성된 i18n 대신 &lt;code&gt;I18n.load_paths&lt;/code&gt; 에 직접 추가 하면 외부 gem의 변환이 재정의 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e8e8087a6dd1f253f818fe2957d00759d30903a1" translate="yes" xml:space="preserve">
          <source>Note that autosave will only trigger for already-persisted association records if the records themselves have been changed. This is to protect against &lt;code&gt;SystemStackError&lt;/code&gt; caused by circular association validations. The one exception is if a custom validation context is used, in which case the validations will always fire on the associated records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a4821ec5868bd38360ccd2974f3d24f5c11f98" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the Postmark ingress can learn its password. You should only use the Postmark ingress over HTTPS.</source>
          <target state="translated">기본 인증은 암호화되지 않은 HTTP를 통해 안전하지 않습니다. 포스트 마크 수신에 대한 일반 텍스트 요청을 가로채는 공격자는 암호를 배울 수 있습니다. HTTPS를 통한 소인 수신 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5374749430d739cb1e5e2cfb76a02f30988ae462" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the SendGrid ingress can learn its password. You should only use the SendGrid ingress over HTTPS.</source>
          <target state="translated">기본 인증은 암호화되지 않은 HTTP를 통해 안전하지 않습니다. SendGrid 수신에 대한 일반 텍스트 요청을 가로채는 공격자는 암호를 배울 수 있습니다. HTTPS를 통한 SendGrid 수신 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="57ec50d8410464d568b5c05fc066b0c1779894de" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the ingress can learn its password. You should only use this ingress over HTTPS.</source>
          <target state="translated">기본 인증은 암호화되지 않은 HTTP를 통해 안전하지 않습니다. 침입에 대한 일반 텍스트 요청을 가로채는 공격자는 암호를 배울 수 있습니다. 이 수신은 HTTPS를 통해서만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="78dbd1cc164b82b4dcb8b006687d565c7961a7a4" translate="yes" xml:space="preserve">
          <source>Note that being unreachable does not imply being anonymous:</source>
          <target state="translated">연결할 수 없다고해서 익명 인 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e8d3ecb667ba792a097afde3710779d973b5d3cf" translate="yes" xml:space="preserve">
          <source>Note that building your own string from user input may expose your application to injection attacks if not done properly. As an alternative, it is recommended to use one of the following methods.</source>
          <target state="translated">사용자 입력으로 자신의 문자열을 작성하면 제대로 수행되지 않으면 응용 프로그램이 주입 공격에 노출 될 수 있습니다. 대안으로 다음 방법 중 하나를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="88c3e83adab9320795c50aab4d553ec7f849c321" translate="yes" xml:space="preserve">
          <source>Note that changing your secret_key_base will invalidate all existing session. Additionally, you should take care to make sure you are not relying on the ability to decode signed cookies generated by your app in external applications or JavaScript before changing it.</source>
          <target state="translated">secret_key_base를 변경하면 모든 기존 세션이 무효화됩니다. 또한 앱을 변경하기 전에 외부 응용 프로그램이나 JavaScript에서 앱에서 생성 된 서명 된 쿠키를 해독하는 기능에 의존하지 않도록주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="6df0738b3ba5e7544dc16135160c562824d55adc" translate="yes" xml:space="preserve">
          <source>Note that checking for uniqueness using something like &lt;code&gt;include?&lt;/code&gt; is subject to race conditions. Do not attempt to use &lt;code&gt;include?&lt;/code&gt; to enforce distinctness in an association. For instance, using the article example from above, the following code would be racy because multiple users could be attempting this at the same time:</source>
          <target state="translated">&lt;code&gt;include?&lt;/code&gt; 와 같은 것을 사용하여 고유성을 검사 합니까? 경쟁 조건이 적용됩니다. &lt;code&gt;include?&lt;/code&gt; 를 사용하지 않습니까? 협회에서 구별을 시행합니다. 예를 들어, 위의 기사 예제를 사용하면 여러 사용자가 동시에 시도 할 수 있기 때문에 다음 코드가 불쾌 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae15203738a3a52937b4eae19c6cd23f7d2a5d67" translate="yes" xml:space="preserve">
          <source>Note that core extensions define &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt;:</source>
          <target state="translated">핵심 확장은 &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt; 를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="aab3b21d54b61763e1564b0cc5ab99fbc9bfb2e4" translate="yes" xml:space="preserve">
          <source>Note that if a query matches multiple records, &lt;code&gt;find_by&lt;/code&gt; will fetch only the first one and ignore the others (see the &lt;code&gt;LIMIT 1&lt;/code&gt; statement above).</source>
          <target state="translated">쿼리가 여러 레코드와 일치하면 &lt;code&gt;find_by&lt;/code&gt; 는 첫 번째 레코드 만 가져오고 다른 레코드 는 무시합니다 ( 위 의 &lt;code&gt;LIMIT 1&lt;/code&gt; 문 참조).</target>
        </trans-unit>
        <trans-unit id="4f44b8fe38600ce94c3eb35df237f1de437ac4de" translate="yes" xml:space="preserve">
          <source>Note that if the target is not &lt;code&gt;nil&lt;/code&gt; then the call is attempted regardless of the &lt;code&gt;:allow_nil&lt;/code&gt; option, and thus an exception is still raised if said object does not respond to the method:</source>
          <target state="translated">대상이 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 &lt;code&gt;:allow_nil&lt;/code&gt; 옵션에 관계없이 호출이 시도 되므로 해당 오브젝트가 메소드에 응답하지 않으면 예외가 계속 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b72ef2b72c287b15edb8d7e8e3522050aa85ca8a" translate="yes" xml:space="preserve">
          <source>Note that if you do not specify the &lt;code&gt;:inverse_of&lt;/code&gt; option, then Active Record will try to automatically guess the inverse association based on heuristics.</source>
          <target state="translated">&lt;code&gt;:inverse_of&lt;/code&gt; 옵션을 지정하지 않으면 Active Record는 휴리스틱을 기반으로 역 연관을 자동으로 추측하려고합니다.</target>
        </trans-unit>
        <trans-unit id="5dbde3470700eeb4eeaddf252a725a2d26c26cf8" translate="yes" xml:space="preserve">
          <source>Note that if you return a path without a leading slash then the URL is prefixed with the current SCRIPT_NAME environment variable. This is typically '/' but may be different in a mounted engine or where the application is deployed to a subdirectory of a website.</source>
          <target state="translated">슬래시없이 경로를 반환하면 URL 앞에 현재 SCRIPT_NAME 환경 변수가 붙습니다. 일반적으로 '/'이지만 탑재 된 엔진 또는 응용 프로그램이 웹 사이트의 하위 디렉터리에 배포 된 경우 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c61f8e19cb72840c59ad034d835c6608ba8ae691" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;code&gt;permit&lt;/code&gt; in a key that points to a hash, it won't allow all the hash. You also need to specify which attributes inside the hash should be permitted.</source>
          <target state="translated">당신이 사용하는 경우주의 &lt;code&gt;permit&lt;/code&gt; 키의 해시 점은, 모든 해시를 허용하지 않습니다. 또한 해시 내부에서 어떤 속성을 허용해야하는지 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1fc227d776d965752397dbfd3f1acdf5bc6a2ed1" translate="yes" xml:space="preserve">
          <source>Note that if you want to immediately require dependencies when the engine is required, you should require them before the engine's initialization. For example:</source>
          <target state="translated">엔진이 필요할 때 종속성을 즉시 요구하려면 엔진을 초기화하기 전에 종속성을 요구해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa297c0fe95f42b1a1cac85dbe866912a193d048" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent&lt;/code&gt; returns &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;module_parent&lt;/code&gt; 는 &lt;code&gt;Object&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="01b4e173af86d46b015dbb7131d2e90d6a871b4b" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent_name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;module_parent_name&lt;/code&gt; 은 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="29d18aa10fe13a77b68f28afe44d33a98a83b983" translate="yes" xml:space="preserve">
          <source>Note that in the above example, to disallow the creation of a plain &lt;code&gt;Polygon&lt;/code&gt;, you should use &lt;code&gt;validates :type, presence:
true&lt;/code&gt;, instead of setting it as an abstract class. This way, &lt;code&gt;Polygon&lt;/code&gt; will stay in the hierarchy, and Active Record will continue to correctly derive the table name.</source>
          <target state="translated">위의 예에서 일반 &lt;code&gt;Polygon&lt;/code&gt; 을 만들 수 없도록 하려면 추상 클래스로 설정하는 대신 &lt;code&gt;validates :type, presence: true&lt;/code&gt; 를 사용해야합니다 . 이런 식으로 &lt;code&gt;Polygon&lt;/code&gt; 은 계층 구조에 유지되며 Active Record는 계속해서 테이블 이름을 올바르게 파생시킵니다.</target>
        </trans-unit>
        <trans-unit id="37ee3be5d2ed36a645c1e37b3a6a3854e08fb2cc" translate="yes" xml:space="preserve">
          <source>Note that interceptors need to be registered both with &lt;code&gt;register_interceptor&lt;/code&gt; and &lt;code&gt;register_preview_interceptor&lt;/code&gt; if they should operate on both sending and previewing emails.</source>
          <target state="translated">인터셉터와 함께 모두 등록해야합니다 &lt;code&gt;register_interceptor&lt;/code&gt; 및 &lt;code&gt;register_preview_interceptor&lt;/code&gt; 가 모두 전송하고 미리 이메일을 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="e002c10e961f1c824fc07296b73d779cf5dde89f" translate="yes" xml:space="preserve">
          <source>Note that it also means that associations marked for destruction won't be destroyed directly. They will however still be marked for destruction.</source>
          <target state="translated">또한 파괴 표시가 된 연결은 직접 파괴되지 않습니다. 그러나 그들은 여전히 ​​멸망의 대상이 될 것이다.</target>
        </trans-unit>
        <trans-unit id="f3a0409f0e1222b726a5d13c3e9b75b2f1cb2598" translate="yes" xml:space="preserve">
          <source>Note that it handles both ASCII and Unicode whitespace.</source>
          <target state="translated">ASCII 및 유니 코드 공백을 모두 처리합니다.</target>
        </trans-unit>
        <trans-unit id="072cbc6561b444de9cb58baa2b73bc9a7f982077" translate="yes" xml:space="preserve">
          <source>Note that it is also possible to assign a flash message as part of the redirection. You can assign &lt;code&gt;:notice&lt;/code&gt;, &lt;code&gt;:alert&lt;/code&gt; or the general purpose &lt;code&gt;:flash&lt;/code&gt;:</source>
          <target state="translated">리디렉션의 일부로 플래시 메시지를 할당 할 수도 있습니다. &lt;code&gt;:notice&lt;/code&gt; , &lt;code&gt;:alert&lt;/code&gt; 또는 일반 용도 &lt;code&gt;:flash&lt;/code&gt; 를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dcc3e916a86372cb28ffccd804eefdd6ebdbdcff" translate="yes" xml:space="preserve">
          <source>Note that it's still possible to generate a race condition in the database in the same way that &lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt; can. You're encouraged to add a unique index in the database to deal with this even more unlikely scenario.</source>
          <target state="translated">&lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt; 와 동일한 방식으로 데이터베이스에서 경쟁 조건을 생성 할 수 있습니다. 이 시나리오를 다루기 위해 데이터베이스에 고유 인덱스를 추가하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4109a799327f6050b01b125eed5872d092866ad4" translate="yes" xml:space="preserve">
          <source>Note that keys are treated differently than &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;&lt;code&gt;HashWithIndifferentAccess&lt;/code&gt;&lt;/a&gt;, meaning that string and symbol keys will not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cce95eb30e93b5a6838836fe15a98374b38e1be" translate="yes" xml:space="preserve">
          <source>Note that keys are treated differently than &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccess&lt;/a&gt;, meaning that string and symbol keys will not match.</source>
          <target state="translated">키는 &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccess&lt;/a&gt; 와 다르게 취급 되므로 문자열 및 기호 키가 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad94e60a7f2b7c1f49651af5196003959035f01b" translate="yes" xml:space="preserve">
          <source>Note that negative CAPTCHAs are only effective against dumb bots and won't suffice to protect critical applications from targeted bots. Still, the negative and positive CAPTCHAs can be combined to increase the performance, e.g., if the &quot;honeypot&quot; field is not empty (bot detected), you won't need to verify the positive CAPTCHA, which would require an HTTPS request to Google ReCaptcha before computing the response.</source>
          <target state="translated">네거티브 보안 문자는 바보 로봇에만 효과적이며 대상 로봇으로부터 중요한 애플리케이션을 보호하기에 충분하지 않습니다. 그래도 음수 및 양수 CAPTCHA를 결합하여 성능을 향상시킬 수 있습니다. 예를 들어 &quot;허니팟&quot;필드가 비어 있지 않은 경우 (봇 감지) Google에 HTTPS 요청이 필요한 양수 CAPTCHA를 확인할 필요가 없습니다. 응답을 계산하기 전에 다시 계산하십시오.</target>
        </trans-unit>
        <trans-unit id="b604cb6faa93098b0d6c2b2506cc1683cb7ae6ca" translate="yes" xml:space="preserve">
          <source>Note that new records are different from any other record by definition, unless the other record is the receiver itself. Besides, if you fetch existing records with &lt;code&gt;select&lt;/code&gt; and leave the ID out, you're on your own, this predicate will return false.</source>
          <target state="translated">다른 레코드가 수신자 자체가 아닌 한 새 레코드는 정의에 따라 다른 레코드와 다릅니다. 또한 &lt;code&gt;select&lt;/code&gt; 를 사용 하여 기존 레코드를 가져 와서 ID를 남겨두면 혼자서이 술어는 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="22c983e77149090556408a4b167a572de601b14a" translate="yes" xml:space="preserve">
          <source>Note that now there can be more than one router in your application, and it's better to avoid passing requests through many routers. Consider this situation:</source>
          <target state="translated">이제 응용 프로그램에 둘 이상의 라우터가있을 수 있으며 많은 라우터를 통해 요청을 전달하지 않는 것이 좋습니다. 이 상황을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="bb19839e635e04134fc7b559e09ccea24da6e26b" translate="yes" xml:space="preserve">
          <source>Note that numbers are not mentioned. In particular, 0 and 0.0 are &lt;strong&gt;not&lt;/strong&gt; blank.</source>
          <target state="translated">숫자는 언급되지 않았습니다. 특히 0과 0.0은 공백 이 &lt;strong&gt;아닙니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a7419129c6af853c63a695a7e5692fb54165cfa7" translate="yes" xml:space="preserve">
          <source>Note that partials are not supported to be rendered with streaming, so in such cases, we just wrap them in an array.</source>
          <target state="translated">스트리밍으로 렌더링 할 수있는 부분은 지원되지 않으므로 이러한 경우에는 배열로 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="1d8ce99c954ddc9604f86aea355eee9cdf6e8de2" translate="yes" xml:space="preserve">
          <source>Note that passing custom disallowed types will override the default types, which are &lt;code&gt;Symbol&lt;/code&gt; and YAML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae24f5949134ca75ea07bd1f7b2e67eacecdb162" translate="yes" xml:space="preserve">
          <source>Note that passing custom disallowed types will override the default types, which are Symbol and YAML.</source>
          <target state="translated">허용되지 않는 사용자 정의 유형을 전달하면 기본 유형 인 Symbol 및 YAML이 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b84d9529ac53faf44afee2779503602281d1a9c0" translate="yes" xml:space="preserve">
          <source>Note that running the &lt;code&gt;db:migrate&lt;/code&gt; command also invokes the &lt;code&gt;db:schema:dump&lt;/code&gt; command, which will update your &lt;code&gt;db/schema.rb&lt;/code&gt; file to match the structure of your database.</source>
          <target state="translated">&lt;code&gt;db:migrate&lt;/code&gt; 명령 을 실행하면 db : &lt;code&gt;db:schema:dump&lt;/code&gt; 명령이 호출되어 데이터베이스 구조와 일치하도록 &lt;code&gt;db/schema.rb&lt;/code&gt; 파일 이 업데이트 됩니다.</target>
        </trans-unit>
        <trans-unit id="41ece01fe72a7508a1b0c964b1a65ee164b23bb9" translate="yes" xml:space="preserve">
          <source>Note that setting the UUID primary key default value to &lt;code&gt;nil&lt;/code&gt; will require you to assure that you always provide a UUID value before saving a record (as primary keys cannot be &lt;code&gt;nil&lt;/code&gt;). This might be done via the &lt;code&gt;SecureRandom.uuid&lt;/code&gt; method and a &lt;code&gt;before_save&lt;/code&gt; callback, for instance.</source>
          <target state="translated">UUID 기본 키 기본값을 &lt;code&gt;nil&lt;/code&gt; 로 설정하면 레코드를 저장하기 전에 항상 UUID 값을 제공해야합니다 (기본 키는 &lt;code&gt;nil&lt;/code&gt; 일 수 없음 ). 예를 들어 &lt;code&gt;SecureRandom.uuid&lt;/code&gt; 메소드와 &lt;code&gt;before_save&lt;/code&gt; 콜백을 통해 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="289fcb6dd0c2e250498b73e7a017f254410a24ff" translate="yes" xml:space="preserve">
          <source>Note that some databases are configured to perform case-insensitive searches anyway.</source>
          <target state="translated">일부 데이터베이스는 대소 문자를 구분하지 않는 검색을 수행하도록 구성되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="350f976200592f01983e5260d34b1c6c064ed87c" translate="yes" xml:space="preserve">
          <source>Note that some of the migrations may be skipped if a migration with the same name already exists in application. In such a situation you must decide whether to leave that migration or rename the migration in the application and rerun copying migrations.</source>
          <target state="translated">동일한 이름의 마이그레이션이 응용 프로그램에 이미 존재하는 경우 일부 마이그레이션을 건너 뛸 수 있습니다. 이러한 상황에서는 해당 마이그레이션을 유지할지 또는 애플리케이션에서 마이그레이션의 이름을 바꾸고 마이그레이션 마이그레이션을 다시 실행해야하는지 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="56eed9c041b6163206a5e9b6cdce438725ed6596" translate="yes" xml:space="preserve">
          <source>Note that the +do end+ syntax for the redirect block wouldn't work, as Ruby would pass the block to &lt;code&gt;get&lt;/code&gt; instead of &lt;code&gt;redirect&lt;/code&gt;. Use &lt;code&gt;{ ... }&lt;/code&gt; instead.</source>
          <target state="translated">루비가 블록 통과하는 것처럼 참고 +는 리디렉션 차단할 수없는 일을 끝 + 구문을 할 것을 &lt;code&gt;get&lt;/code&gt; 대신 &lt;code&gt;redirect&lt;/code&gt; . 대신 &lt;code&gt;{ ... }&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b42c6a4a4341fd9958532c716f1eb5ee92beecb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:as&lt;/code&gt; option given to mount takes the &lt;code&gt;engine_name&lt;/code&gt; as default, so most of the time you can simply omit it.</source>
          <target state="translated">것을 참고 &lt;code&gt;:as&lt;/code&gt; 마운트 주어진 옵션 소요 &lt;code&gt;engine_name&lt;/code&gt; 가장 당신은 단순히 그것을 생략 할 수있는 시간이 너무 기본으로합니다.</target>
        </trans-unit>
        <trans-unit id="7a468e9d4e4a4f9bded222303b80c21107fd3a82" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:autosave&lt;/code&gt; option is automatically enabled on every association that &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; is used for.</source>
          <target state="translated">있습니다 &lt;code&gt;:autosave&lt;/code&gt; 옵션이 자동으로 모든 연결에 사용할 수 &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for가&lt;/a&gt; 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="79d9df15e5b15a29b5f9331ea392518b5e21c328" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:autosave&lt;/code&gt; option is automatically enabled on every association that &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; is used for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f9248fbb6cde034e039397fee13f9a82a3513e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">있습니다 &lt;code&gt;projects_attributes=&lt;/code&gt; 작가 방법이 실제로 필요 &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; 올바르게에 식별 &lt;code&gt;:projects&lt;/code&gt; 모음으로, 올바른 지표가 양식 마크 업에 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="114bb58c314f2b8afeaf68327a1ff48a67af8edf" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba717142b3857ce76f41cd84a25f35a3e8fb25a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">있습니다 &lt;code&gt;projects_attributes=&lt;/code&gt; 작가 방법이 실제로 필요 &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; 올바르게에 식별 &lt;code&gt;:projects&lt;/code&gt; 모음으로, 올바른 지표가 양식 마크 업에 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7d8668f5eb710bd6a65908c913b5ec27fb10b34e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fe7c790c83e9c2b8372df6432ade06d4a90302" translate="yes" xml:space="preserve">
          <source>Note that the MD5 is taken of the entire template file, not just what's within the cache do/end call. So it's possible that changing something outside of that call will still expire the cache.</source>
          <target state="translated">MD5는 캐시 수행 / 종료 호출 내에있는 것만이 아니라 전체 템플릿 파일에서 가져옵니다. 따라서 호출 외부에서 무언가를 변경해도 캐시가 만료 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9d218f2ca0876e04a64af92cc587d9b53ea48ef" translate="yes" xml:space="preserve">
          <source>Note that the above code is database-agnostic: it will run in MySQL, PostgreSQL, Oracle, and others. You can learn more about migrations in the &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations guide&lt;/a&gt;.</source>
          <target state="translated">위 코드는 데이터베이스에 구애받지 않으며 MySQL, PostgreSQL, Oracle 등에서 실행됩니다. 마이그레이션에 대한 자세한 내용은 &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71620954de70d1be268160bad4cd86ec4e084773" translate="yes" xml:space="preserve">
          <source>Note that the closing tag cannot be of the style &lt;code&gt;-%&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">닫는 태그는 &lt;code&gt;-%&amp;gt;&lt;/code&gt; 스타일 일 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="6e7d6c161996279e55e9a7f8cd6bc7d438276479" translate="yes" xml:space="preserve">
          <source>Note that the default error messages are plural (e.g., &quot;is too short (minimum is %{count} characters)&quot;). For this reason, when &lt;code&gt;:minimum&lt;/code&gt; is 1 you should provide a custom message or use &lt;code&gt;presence: true&lt;/code&gt; instead. When &lt;code&gt;:in&lt;/code&gt; or &lt;code&gt;:within&lt;/code&gt; have a lower limit of 1, you should either provide a custom message or call &lt;code&gt;presence&lt;/code&gt; prior to &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686dd5a3681eb94aa1b29e89f703ca327c41ee3d" translate="yes" xml:space="preserve">
          <source>Note that the default error messages are plural (e.g., &quot;is too short (minimum is %{count} characters)&quot;). For this reason, when &lt;code&gt;:minimum&lt;/code&gt; is 1 you should provide a personalized message or use &lt;code&gt;presence: true&lt;/code&gt; instead. When &lt;code&gt;:in&lt;/code&gt; or &lt;code&gt;:within&lt;/code&gt; have a lower limit of 1, you should either provide a personalized message or call &lt;code&gt;presence&lt;/code&gt; prior to &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">기본 오류 메시지는 복수입니다 (예 : &quot;너무 짧습니다 (최소 %% 문자)&quot;). 이러한 이유로 &lt;code&gt;:minimum&lt;/code&gt; 이 1 인 경우 개인화 된 메시지를 제공하거나 &lt;code&gt;presence: true&lt;/code&gt; 사용해야 합니다. 대신 true 입니다. 때 &lt;code&gt;:in&lt;/code&gt; 나 &lt;code&gt;:within&lt;/code&gt; 하나의 하한을 가지고, 당신도 개인 메시지 나 전화 제공해야 &lt;code&gt;presence&lt;/code&gt; 하기 전에 &lt;code&gt;length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1f0fde9874f69ccb2896442786f865a18ee23ff" translate="yes" xml:space="preserve">
          <source>Note that the endpoint, default values, and submit button label are tailored for &lt;code&gt;@person&lt;/code&gt;. That works that way because the involved helpers know whether the resource is a new record or not, and generate HTML accordingly.</source>
          <target state="translated">엔드 포인트, 기본값 및 제출 단추 레이블은 &lt;code&gt;@person&lt;/code&gt; 에 맞게 조정되었습니다 . 관련된 도우미가 리소스가 새로운 레코드인지 여부를 알고 그에 따라 HTML을 생성하기 때문에 그렇게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="88b5d730eba76cc27fd97c8d6e638a4e37441c7b" translate="yes" xml:space="preserve">
          <source>Note that the filter in this case uses &lt;code&gt;send&lt;/code&gt; because the &lt;code&gt;logged_in?&lt;/code&gt; method is private and the filter does not run in the scope of the controller. This is not the recommended way to implement this particular filter, but in more simple cases it might be useful.</source>
          <target state="translated">이 경우 용도의 필터가 있습니다 &lt;code&gt;send&lt;/code&gt; 때문에 &lt;code&gt;logged_in?&lt;/code&gt; 메소드는 개인용이며 필터가 컨트롤러 범위에서 실행되지 않습니다. 이 특정 필터를 구현하는 데 권장되는 방법은 아니지만보다 간단한 경우에는 유용 ​​할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74eb99d06a69d4b54123aca3dbb5b9ad46d3f318" translate="yes" xml:space="preserve">
          <source>Note that the filter in this case uses &lt;code&gt;send&lt;/code&gt; because the &lt;code&gt;logged_in?&lt;/code&gt; method is private and the filter does not run in the scope of the controller. This is not the recommended way to implement this particular filter, but in simpler cases it might be useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7678e438c40cc3477299adc32378f068a1ddef" translate="yes" xml:space="preserve">
          <source>Note that the implicit render done by ActionController detects if &lt;code&gt;render&lt;/code&gt; has been called, so the following will work without errors:</source>
          <target state="translated">ActionController가 수행 한 암시 적 렌더링 은 &lt;code&gt;render&lt;/code&gt; 이 호출되었는지 감지 하므로 오류없이 다음이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="be5be3e7764ae5644163769bf7cfc5d6fd2d1a1e" translate="yes" xml:space="preserve">
          <source>Note that the model is &lt;em&gt;not&lt;/em&gt; yet removed from the database:</source>
          <target state="translated">데이터베이스에서 모델이 아직 제거 &lt;em&gt;되지&lt;/em&gt; 않았습니다.</target>
        </trans-unit>
        <trans-unit id="954907bb7af2f55cb897a52cdad3e0923f08a201" translate="yes" xml:space="preserve">
          <source>Note that the model will &lt;em&gt;not&lt;/em&gt; be destroyed until the parent is saved.</source>
          <target state="translated">부모가 저장 될 때까지 모델이 삭제 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="02a01b211c29bd75de844342e9c04d4a40fbfccc" translate="yes" xml:space="preserve">
          <source>Note that the partial layout has access to the local &lt;code&gt;article&lt;/code&gt; variable that was passed into the &lt;code&gt;render&lt;/code&gt; call. However, unlike application-wide layouts, partial layouts still have the underscore prefix.</source>
          <target state="translated">부분 레이아웃은 &lt;code&gt;render&lt;/code&gt; 호출 에 전달 된 로컬 &lt;code&gt;article&lt;/code&gt; 변수에 액세스 할 수 있습니다. 그러나 응용 프로그램 전체 레이아웃과 달리 부분 레이아웃에는 여전히 밑줄 접두사가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c3e84c4e2bb503561ce5906bf724d8b22651774" translate="yes" xml:space="preserve">
          <source>Note that the prefix takes scopes into account as well, so relations between &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;Catalog::Product&lt;/code&gt; or &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;CatalogProduct&lt;/code&gt; need to be updated similarly.</source>
          <target state="translated">접두어도 범위를 고려하므로 &lt;code&gt;Catalog::Category&lt;/code&gt; 와 &lt;code&gt;Catalog::Product&lt;/code&gt; 또는 &lt;code&gt;Catalog::Category&lt;/code&gt; 와 &lt;code&gt;CatalogProduct&lt;/code&gt; 간의 관계 도 비슷하게 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="3f0b56e9abd80e969b8d26b5222d80ad053541d7" translate="yes" xml:space="preserve">
          <source>Note that the proc/lambda is evaluated right at the start of the mail message generation, so if you set something in the default hash using a proc, and then set the same thing inside of your mailer method, it will get overwritten by the mailer method.</source>
          <target state="translated">proc / lambda는 메일 메시지 생성이 시작될 때 바로 평가되므로 proc를 사용하여 기본 해시에서 무언가를 설정 한 다음 메일러 메소드 내에서 동일한 것을 설정하면 메일러가이를 덮어 씁니다. 방법.</target>
        </trans-unit>
        <trans-unit id="4e5c95326e028fed2d2db8bde9be22b9c550d75e" translate="yes" xml:space="preserve">
          <source>Note that the proxy is rendered under a different view context. This may cause incorrect behaviour with capture methods. Consider using &lt;a href=&quot;../../abstractcontroller/helpers/classmethods#method-i-helper&quot;&gt;helper&lt;/a&gt; instead when using &lt;code&gt;capture&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d1d39da63c97db09a691dee40a2f72872404f2" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified.</source>
          <target state="translated">요청 방법이 확인되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="fcc36a612f1887cd847fa353befaf752f6184ff5" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified. The different methods are available to make the tests more expressive.</source>
          <target state="translated">요청 방법이 확인되지 않았습니다. 시험을 더욱 표현하기 위해 다양한 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a17d9050880b0000053a7919d1eaaab1da7ea52f" translate="yes" xml:space="preserve">
          <source>Note that the return value of validation methods is not relevant. It's not possible to halt the validate callback chain.</source>
          <target state="translated">유효성 검사 방법의 반환 값은 관련이 없습니다. 유효성 검사 콜백 체인을 중지 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6264af4b7ec518a4c0d4264b64656418078b121d" translate="yes" xml:space="preserve">
          <source>Note that the usec for the time passed will be set to 0 to prevent rounding errors with external services, like MySQL (which will round instead of floor, leading to off-by-one-second errors).</source>
          <target state="translated">전달 된 시간의 usec는 MySQL과 같은 외부 서비스에서 반올림 오류를 방지하기 위해 0으로 설정됩니다 (마침표 대신 반올림하여 1 초 단위 오류가 발생 함).</target>
        </trans-unit>
        <trans-unit id="09aeb0d119ddd40cd5438bcd1ca87c38a2dc4212" translate="yes" xml:space="preserve">
          <source>Note that the validator is initialized only once for the whole application life cycle, and not on each validation run.</source>
          <target state="translated">유효성 검사기는 전체 유효성 검사 실행이 아닌 전체 응용 프로그램 수명주기 동안 한 번만 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="46848172b64a0977b58ec6feefd30b9073bc4ca6" translate="yes" xml:space="preserve">
          <source>Note that the validator will be initialized &lt;em&gt;only once&lt;/em&gt; for the whole application life cycle, and not on each validation run, so be careful about using instance variables inside it.</source>
          <target state="translated">유효성 검사기는 전체 유효성 검사 실행이 아닌 전체 응용 프로그램 수명주기 동안 &lt;em&gt;한 번만&lt;/em&gt; 초기화 되므로 인스턴스 변수 사용에주의하십시오.</target>
        </trans-unit>
        <trans-unit id="9dafb7ab1f43dd01f8c7c62c8b916b3286eee444" translate="yes" xml:space="preserve">
          <source>Note that these methods do not strictly require &lt;code&gt;Post&lt;/code&gt; to be a subclass of &lt;a href=&quot;../activerecord/base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;. Any &lt;code&gt;Post&lt;/code&gt; class will work as long as its instances respond to &lt;code&gt;to_key&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;, given that &lt;code&gt;model_name&lt;/code&gt; responds to &lt;code&gt;param_key&lt;/code&gt;. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0dd2d063090bea5af276a745916be1df9fd6a9" translate="yes" xml:space="preserve">
          <source>Note that these methods do not strictly require &lt;code&gt;Post&lt;/code&gt; to be a subclass of &lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord::Base&lt;/a&gt;. Any &lt;code&gt;Post&lt;/code&gt; class will work as long as its instances respond to &lt;code&gt;to_key&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;, given that &lt;code&gt;model_name&lt;/code&gt; responds to &lt;code&gt;param_key&lt;/code&gt;. For instance:</source>
          <target state="translated">이러한 메소드는 &lt;code&gt;Post&lt;/code&gt; 가 &lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord :: Base&lt;/a&gt; 의 서브 클래스 인 것을 엄격하게 요구하지는 않습니다 . 모든 &lt;code&gt;Post&lt;/code&gt; 의 인스턴스가 응답으로 클래스는 한 작동 &lt;code&gt;to_key&lt;/code&gt; 및 &lt;code&gt;model_name&lt;/code&gt; 점을 감안, &lt;code&gt;model_name&lt;/code&gt; 응답 &lt;code&gt;param_key&lt;/code&gt; . 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="bc9001a2a86f3ffa7a896a66019a9acaefea21e1" translate="yes" xml:space="preserve">
          <source>Note that this conversion makes some assumptions about the duration of some periods, e.g. months are always 1/12 of year and years are 365.2425 days:</source>
          <target state="translated">이 변환은 일부 기간 (예 : 월은 항상 1/12, 연도는 365.2425 일)에 대한 몇 가지 가정을합니다.</target>
        </trans-unit>
        <trans-unit id="77cc080b11bb02e1e002cb526197387a11eb18f5" translate="yes" xml:space="preserve">
          <source>Note that this is simply 'syntactic sugar' for defining an actual class method:</source>
          <target state="translated">이것은 실제 클래스 메소드를 정의하기위한 단순히 '구문 설탕'입니다.</target>
        </trans-unit>
        <trans-unit id="b0ebd4a9a6512094d1e187bcc14bccbc19a4f2eb" translate="yes" xml:space="preserve">
          <source>Note that this method actually runs the queries, since the results of some are needed by the next ones when eager loading is going on.</source>
          <target state="translated">이 메소드는 실제로로드가 진행될 때 다음 결과가 필요하기 때문에 실제로 쿼리를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="400d486fc3da7592d3e9fa738dc428190cc7b83a" translate="yes" xml:space="preserve">
          <source>Note that this module is completely decoupled from HTTP - the only requirement is a valid &lt;code&gt;_routes&lt;/code&gt; implementation.</source>
          <target state="translated">이 모듈은 HTTP와 완전히 분리되어 있습니다. 유일한 요구 사항은 유효한 &lt;code&gt;_routes&lt;/code&gt; 구현입니다.</target>
        </trans-unit>
        <trans-unit id="6a867944d9d1c972ce2678c23acf249fcb7f57d6" translate="yes" xml:space="preserve">
          <source>Note that this only protects you against the most common mistake when using the format validator - you always need to keep in mind that ^ and $ match the &lt;strong&gt;line&lt;/strong&gt; beginning and line end in Ruby, and not the beginning and end of a string.</source>
          <target state="translated">이것은 형식 유효성 검사기를 사용할 때 가장 일반적인 실수로부터 보호합니다. ^와 $는 항상 문자열의 시작과 끝이 아니라 Ruby 의 &lt;strong&gt;줄&lt;/strong&gt; 시작과 줄 끝과 일치한다는 것을 명심해야 합니다.</target>
        </trans-unit>
        <trans-unit id="40e976053cd24cf89ca5afb4e56aca4c1a475bf8" translate="yes" xml:space="preserve">
          <source>Note that this option was added as a security measure, to ensure user input cannot be used as locale information unless it is previously known. Therefore, it's recommended not to disable this option unless you have a strong reason for doing so.</source>
          <target state="translated">이전에 알려지지 않은 경우 사용자 입력을 로케일 정보로 사용할 수 없도록하기 위해이 옵션이 보안 조치로 추가되었습니다. 따라서 강력한 이유가없는 한이 옵션을 비활성화하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="dcd7cad2f920a22df3327dba7bec9bcba84d5107" translate="yes" xml:space="preserve">
          <source>Note that this option will not affect Active Support callbacks since they never halted the chain when any value was returned.</source>
          <target state="translated">이 옵션은 값이 반환 될 때 체인을 중단하지 않았기 때문에 활성 지원 콜백에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fbd22df73644dceb2d81a8d497944e60fc8cb29d" translate="yes" xml:space="preserve">
          <source>Note that this protects you only from automatic bots, targeted tailor-made bots cannot be stopped by this. So &lt;em&gt;negative CAPTCHAs might not be good to protect login forms&lt;/em&gt;.</source>
          <target state="translated">이 기능은 자동 봇에서만 보호되므로, 맞춤형 맞춤형 봇은 이에 의해 중지 될 수 없습니다. 따라서 &lt;em&gt;부정적인 보안 문자는 로그인 양식을 보호하는 데 좋지 않을 수 있습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1c8f134d1a5ae3dfb5037cd0d0c9a0e0c1fbc96d" translate="yes" xml:space="preserve">
          <source>Note that this will also delete records marked as &lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;#readonly?&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;#readonly?&lt;/a&gt; 로 표시된 레코드도 삭제됩니다 . .</target>
        </trans-unit>
        <trans-unit id="620da313e90e0691449cfa180d7b0fbfd2313d4c" translate="yes" xml:space="preserve">
          <source>Note that this will clear anything that is being used to validate the model for both the &lt;code&gt;validates_with&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; methods. It clears the validators that are created with an invocation of &lt;code&gt;validates_with&lt;/code&gt; and the callbacks that are set by an invocation of &lt;code&gt;validate&lt;/code&gt;.</source>
          <target state="translated">이렇게하면 &lt;code&gt;validates_with&lt;/code&gt; 및 &lt;code&gt;validate&lt;/code&gt; 메소드 모두에 대해 모델의 유효성을 검증하는 데 사용되는 모든 항목이 지워집니다. 그것의 호출에 생성되는 소거 검증 &lt;code&gt;validates_with&lt;/code&gt; 과의 호출에 의해 설정되는 콜백 &lt;code&gt;validate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59556d783955e645825d2046dcb1ae4013692a97" translate="yes" xml:space="preserve">
          <source>Note that to create a variant it's necessary to download the entire blob file from the service. Because of this process, you also want to be considerate about when the variant is actually processed. You shouldn't be processing variants inline in a template, for example. Delay the processing to an on-demand controller, like the one provided in &lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage::RepresentationsController&lt;/a&gt;.</source>
          <target state="translated">변형을 만들려면 서비스에서 전체 Blob 파일을 다운로드해야합니다. 이 프로세스로 인해 변형이 실제로 처리되는시기도 고려해야합니다. 예를 들어 템플릿에서 변형을 인라인으로 처리해서는 안됩니다. &lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage :: RepresentationsController에&lt;/a&gt; 제공된 것과 같은 주문형 컨트롤러에 대한 처리를 지연시킵니다 .</target>
        </trans-unit>
        <trans-unit id="4d39e8f3493c6dc9309106568079112d38562f43" translate="yes" xml:space="preserve">
          <source>Note that to create a variant it's necessary to download the entire blob file from the service. Because of this process, you also want to be considerate about when the variant is actually processed. You shouldn't be processing variants inline in a template, for example. Delay the processing to an on-demand controller, like the one provided in ActiveStorage::RepresentationsController.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd0b997f03075f0fd5f7d6476535e63dc8ab0e2" translate="yes" xml:space="preserve">
          <source>Note that unless you have a specific reason to do so, you should prefer using &lt;code&gt;before_action&lt;/code&gt; rather than &lt;code&gt;after_action&lt;/code&gt; in your Action Mailer classes so that headers are parsed properly.</source>
          <target state="translated">특별한 이유가없는 한, 헤더가 올바르게 구문 분석되도록 Action Mailer 클래스에서 &lt;code&gt;before_action&lt;/code&gt; 대신 &lt;code&gt;after_action&lt;/code&gt; 을 사용 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c297a0082106a309bccb2c304dff13f9d16faac5" translate="yes" xml:space="preserve">
          <source>Note that we define the change that we want to happen moving forward in time. Before this migration is run, there will be no table. After, the table will exist. Active Record knows how to reverse this migration as well: if we roll this migration back, it will remove the table.</source>
          <target state="translated">우리는 앞으로 나아가고 자하는 변화를 정의합니다. 이 마이그레이션이 실행되기 전에 테이블이 없습니다. 그 후에 테이블이 존재합니다. Active Record는이 마이그레이션을 취소하는 방법도 알고 있습니다.이 마이그레이션을 롤백하면 테이블이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="2e926ed7e503e22b4111ceb30ccb88dce58134ae" translate="yes" xml:space="preserve">
          <source>Note that we don't have explicit render at the end of the index action in accordance with &quot;convention over configuration&quot; principle. The rule is that if you do not explicitly render something at the end of a controller action, Rails will automatically look for the &lt;code&gt;action_name.html.erb&lt;/code&gt; template in the controller's view path and render it. So in this case, Rails will render the &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; file.</source>
          <target state="translated">&quot;컨벤션 오버 컨벤션&quot;원칙에 따라 인덱스 작업이 끝날 때 명시적인 렌더링이 없습니다. 규칙은 컨트롤러 작업이 끝날 때 무언가를 명시 적으로 렌더링하지 않으면 Rails는 컨트롤러의보기 경로에서 &lt;code&gt;action_name.html.erb&lt;/code&gt; 템플릿을 자동으로 찾아 렌더링합니다. 따라서이 경우 Rails는 &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; 파일을 렌더링 합니다.</target>
        </trans-unit>
        <trans-unit id="fc309473d6129fce9427ca4ffd7a719d23d30f2b" translate="yes" xml:space="preserve">
          <source>Note that we needed to instantiate a new &lt;code&gt;PictureFileCallbacks&lt;/code&gt; object, since we declared our callback as an instance method. This is particularly useful if the callbacks make use of the state of the instantiated object. Often, however, it will make more sense to declare the callbacks as class methods:</source>
          <target state="translated">콜백을 인스턴스 메소드로 선언했기 때문에 새로운 &lt;code&gt;PictureFileCallbacks&lt;/code&gt; 객체 를 인스턴스화해야했습니다 . 이는 콜백이 인스턴스화 된 객체의 상태를 사용하는 경우 특히 유용합니다. 그러나 종종 콜백을 클래스 메소드로 선언하는 것이 더 합리적입니다.</target>
        </trans-unit>
        <trans-unit id="2f078fa0d6abee21360b3c264683efe5cc570183" translate="yes" xml:space="preserve">
          <source>Note that we used Mime for the csv mime type as it comes with Rails. For a custom renderer, you'll need to register a mime type with &lt;code&gt;Mime::Type.register&lt;/code&gt;.</source>
          <target state="translated">Rails와 함께 제공되는 csv mime 유형에는 Mime을 사용했습니다. 커스텀 렌더러의 경우 &lt;code&gt;Mime::Type.register&lt;/code&gt; mime 유형을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="493e11f2139307e1b857ae2583c8a70294f296ed" translate="yes" xml:space="preserve">
          <source>Note that when an array is used, the implicit mapping from the values to database integers is derived from the order the values appear in the array. In the example, &lt;code&gt;:active&lt;/code&gt; is mapped to &lt;code&gt;0&lt;/code&gt; as it's the first element, and &lt;code&gt;:archived&lt;/code&gt; is mapped to &lt;code&gt;1&lt;/code&gt;. In general, the &lt;code&gt;i&lt;/code&gt;-th element is mapped to &lt;code&gt;i-1&lt;/code&gt; in the database.</source>
          <target state="translated">배열을 사용하는 경우 값에서 데이터베이스 정수로의 암시 적 매핑은 값이 배열에 나타나는 순서에서 파생됩니다. 이 예에서 &lt;code&gt;:active&lt;/code&gt; 는 첫 번째 요소이므로 &lt;code&gt;0&lt;/code&gt; 에 매핑 되고 &lt;code&gt;:archived&lt;/code&gt; 는 &lt;code&gt;1&lt;/code&gt; 에 매핑됩니다 . 일반적으로 &lt;code&gt;i&lt;/code&gt; 번째 요소는 데이터베이스에서 &lt;code&gt;i-1&lt;/code&gt; 에 맵핑 됩니다.</target>
        </trans-unit>
        <trans-unit id="a00c8ea81b965636b156aa7e6e263970a293bd34" translate="yes" xml:space="preserve">
          <source>Note that while for session values you can set the key to &lt;code&gt;nil&lt;/code&gt;, to delete a cookie value you should use &lt;code&gt;cookies.delete(:key)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c316595d7f1cc476b48b9d06316e2c4531c197bc" translate="yes" xml:space="preserve">
          <source>Note that while for session values you set the key to &lt;code&gt;nil&lt;/code&gt;, to delete a cookie value you should use &lt;code&gt;cookies.delete(:key)&lt;/code&gt;.</source>
          <target state="translated">세션 값의 경우 키를 &lt;code&gt;nil&lt;/code&gt; 로 설정하고 쿠키 값을 삭제하려면 &lt;code&gt;cookies.delete(:key)&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="375abaf21583ac20acd9292c3b8eefbb701bc9fb" translate="yes" xml:space="preserve">
          <source>Note that you can define &lt;code&gt;perform&lt;/code&gt; with as many arguments as you want.</source>
          <target state="translated">원하는만큼 많은 인수로 &lt;code&gt;perform&lt;/code&gt; 을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88cfa3abeb2458e86a60f8ec1b460db8fb10e9dc" translate="yes" xml:space="preserve">
          <source>Note that you can define your own XML parameter parser which would allow you to describe multiple entities in a single request (i.e., by wrapping them all in a single root node), but if you just go with the flow and accept Rails' defaults, life will be much easier.</source>
          <target state="translated">단일 요청에서 여러 엔티티를 설명 할 수있는 고유 한 XML 매개 변수 구문 분석기를 정의 할 수 있습니다 (예 : 단일 루트 노드로 모두 랩핑하여). 인생은 훨씬 쉬울 것입니다.</target>
        </trans-unit>
        <trans-unit id="94fcc4bd31806b338f29c759262bfc0f506b7150" translate="yes" xml:space="preserve">
          <source>Note that you cannot pass a &lt;code&gt;Numeric&lt;/code&gt; value to &lt;code&gt;time_ago_in_words&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;time_ago_in_words&lt;/code&gt; 에 &lt;code&gt;Numeric&lt;/code&gt; 값을 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="15c7bb86a644e7c14c0fe1129c9177d3ba3b4c4c" translate="yes" xml:space="preserve">
          <source>Note that you don't need to add a &lt;code&gt;content&lt;/code&gt; field to your &lt;code&gt;messages&lt;/code&gt; table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1061c05c09718d57e4b98d385870b473c4dab2" translate="yes" xml:space="preserve">
          <source>Note that you must specify the extension of the image.</source>
          <target state="translated">이미지의 확장자를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="dae165417f9c9af178cba47577008af33ab94075" translate="yes" xml:space="preserve">
          <source>Note that your database must support the raw SQL, that you pass in to the &lt;code&gt;lock&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe12ac2a13ce2a7fd2002400594427d3dac75d7" translate="yes" xml:space="preserve">
          <source>Note that, by default, &lt;code&gt;ActiveModel::Model&lt;/code&gt; implements &lt;code&gt;persisted?&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt;, which is the most common case. You may want to override it in your class to simulate a different scenario:</source>
          <target state="translated">기본적으로 &lt;code&gt;ActiveModel::Model&lt;/code&gt; 은 &lt;code&gt;persisted?&lt;/code&gt; 구현 됩니까? 가장 일반적인 경우 인 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다. 다른 시나리오를 시뮬레이트하기 위해 클래스에서이를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4cd0cb42d00d8cf72a3e4771ba48575883bef6c" translate="yes" xml:space="preserve">
          <source>Note that, in accordance with &lt;code&gt;form_with&lt;/code&gt; conventions, the field names in the two forms above will also differ. That is, the field name in the first form will be &lt;code&gt;person[picture]&lt;/code&gt; (accessible via &lt;code&gt;params[:person][:picture]&lt;/code&gt;), and the field name in the second form will be just &lt;code&gt;picture&lt;/code&gt; (accessible via &lt;code&gt;params[:picture]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0eb83f0bd048cfc7a18f5b34d2c2a7f0774a58" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt;. Now, the form will be submitted by Ajax rather than by the browser's normal submit mechanism.</source>
          <target state="translated">&lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt; 를 참고하십시오 . 이제 양식은 브라우저의 일반적인 제출 메커니즘이 아닌 Ajax에 의해 제출됩니다.</target>
        </trans-unit>
        <trans-unit id="9c1859ac871cf8a9f915bb5ab32044e4e003fbbe" translate="yes" xml:space="preserve">
          <source>Note the following caveats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b50c32f894b15a18965fc17ad0b160bd64ca480" translate="yes" xml:space="preserve">
          <source>Note the subtle difference between the two: &lt;code&gt;assert_routing&lt;/code&gt; tests that a URL fits options while &lt;code&gt;assert_recognizes&lt;/code&gt; tests that a URL breaks into parameters properly.</source>
          <target state="translated">둘 사이의 미묘한 차이를 참고 : &lt;code&gt;assert_routing&lt;/code&gt; 테스트를 URL에 잠시 옵션을 맞는 것을 &lt;code&gt;assert_recognizes&lt;/code&gt; 의 시험이 매개 변수로 URL 바꿈이 제대로.</target>
        </trans-unit>
        <trans-unit id="64a72b7714830d8e8def9655dd5179990d52e442" translate="yes" xml:space="preserve">
          <source>Note you can't append with &lt;code&gt;atomic_write&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;atomic_write&lt;/code&gt; 를 추가 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e012da3c873f5e7f25a227356956d77d8cbb45da" translate="yes" xml:space="preserve">
          <source>Note, all the attributes for all the cases are kept in the same table. Read more: &lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</source>
          <target state="translated">모든 경우에 대한 모든 속성은 동일한 테이블에 유지됩니다. 더 읽기 : &lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e23d909c309df5b8483a6d80a959b1e4ab0714c" translate="yes" xml:space="preserve">
          <source>Note, however, the extra bit at the top of that action:</source>
          <target state="translated">그러나 해당 작업의 상단에있는 추가 비트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a11bc31bbee6149856fb4cc76f9292762b870e2b" translate="yes" xml:space="preserve">
          <source>Note, if data was written with the &lt;code&gt;:expires_in&lt;/code&gt; or &lt;code&gt;:version&lt;/code&gt; options, both of these conditions are applied before the data is returned.</source>
          <target state="translated">데이터가 &lt;code&gt;:expires_in&lt;/code&gt; 또는 &lt;code&gt;:version&lt;/code&gt; 옵션 으로 작성된 경우 데이터가 리턴되기 전에이 두 조건이 모두 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="173438e96ca17bd100e0efb41be6765ffc5dc263" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; hash will apply to all callbacks defined on that method call. To get around this you can call the &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; method as many times as you need.</source>
          <target state="translated">참고 &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; 해시는 메서드 호출에 정의 된 모든 콜백에 적용됩니다. 이 문제를 해결하기 위해 &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; 메소드를 필요한 횟수만큼 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d812865558d117bdf49f2b3d5ad28d74e27b13f" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; hash will apply to all callbacks defined on that method call. To get around this you can call the &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;&lt;code&gt;define_model_callbacks&lt;/code&gt;&lt;/a&gt; method as many times as you need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e730840f4cf0c423b310013d1509281bf488401d" translate="yes" xml:space="preserve">
          <source>Note, this method will return nil if ActiveRecord::Base.cache_versioning is set to &lt;code&gt;false&lt;/code&gt; (which it is by default until Rails 6.0).</source>
          <target state="translated">ActiveRecord :: Base.cache_versioning이 &lt;code&gt;false&lt;/code&gt; 로 설정되면 (기본적으로 Rails 6.0까지) 이 메소드는 nil을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="b45a3f550d439e7107e510c56807fa2b019b9caf" translate="yes" xml:space="preserve">
          <source>Note, this method will return nil if ActiveRecord::Base.cache_versioning is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3444d2211e13b8f88da9fc93d4c1ee9b636bb8" translate="yes" xml:space="preserve">
          <source>Note, you should use &lt;code&gt;return false&lt;/code&gt; to prevent an event for &lt;code&gt;jquery-ujs&lt;/code&gt; and &lt;code&gt;event.preventDefault()&lt;/code&gt; for &lt;code&gt;rails-ujs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86af99f3964446c447ca9ff5afc05885736a4b0" translate="yes" xml:space="preserve">
          <source>Note, you should use &lt;code&gt;return false&lt;/code&gt; to prevent event for &lt;code&gt;jquery-ujs&lt;/code&gt; and &lt;code&gt;e.preventDefault()&lt;/code&gt; for &lt;code&gt;rails-ujs&lt;/code&gt;</source>
          <target state="translated">참고, 당신은 사용해야 &lt;code&gt;return false&lt;/code&gt; 위한 이벤트 방지하기 위해 &lt;code&gt;jquery-ujs&lt;/code&gt; 및 &lt;code&gt;e.preventDefault()&lt;/code&gt; 에 대한 &lt;code&gt;rails-ujs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91573f6985f0c4b16cbd786a58cd14db5f991daf" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;:id&lt;/code&gt; is always present.</source>
          <target state="translated">참고 : &lt;code&gt;:id&lt;/code&gt; 는 항상 존재합니다.</target>
        </trans-unit>
        <trans-unit id="62cada94601411d3b4156a354a18714f3cfb615f" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;MySQL&lt;/code&gt; only supports index order from 8.0.1 onwards (earlier versions accepted the syntax but ignored it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8634df8460327a401d547cd66d1daa13389930f3" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;yield&lt;/code&gt; can still be used to retrieve the stored content, but calling &lt;code&gt;yield&lt;/code&gt; doesn't work in helper modules, while &lt;code&gt;content_for&lt;/code&gt; does.</source>
          <target state="translated">참고 : &lt;code&gt;yield&lt;/code&gt; 는 여전히 저장된 컨텐츠를 검색하는 데 사용될 수 있지만 &lt;code&gt;content_for&lt;/code&gt; 는 헬퍼 모듈에서 &lt;code&gt;yield&lt;/code&gt; 를 호출하는 것은 작동 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8da99924f8d120d0211cdf5e26cda8c8a164764e" translate="yes" xml:space="preserve">
          <source>Note: Acronyms that are passed to &lt;code&gt;pluralize&lt;/code&gt; will no longer be recognized, since the acronym will not occur as a delimited unit in the pluralized result. To work around this, you must specify the pluralized form as an acronym as well:</source>
          <target state="translated">참고 : &lt;code&gt;pluralize&lt;/code&gt; 으로 전달 된 약어는 복수형 결과에서 구분 된 단위로 표시되지 않으므로 더 이상 인식되지 않습니다. 이 문제를 해결하려면 복수 형식도 약어로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="cc77ba91f6d6dff22900edccd870686c14ce0dec" translate="yes" xml:space="preserve">
          <source>Note: Although it is often much faster than the alternative, &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt;, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8c7e5a63f17d1875bad1c59c527c97a6dd626d" translate="yes" xml:space="preserve">
          <source>Note: Although it is often much faster than the alternative, &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt;, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.</source>
          <target state="translated">참고 : 대체 방법보다 훨씬 빠르지 만 &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt; 는 콜백을 건너 뛰면 참조 무결성을 보장하거나 다른 필수 작업을 수행하는 애플리케이션의 비즈니스 로직을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e9ece58e771c7dc934cee4b84518319fbbf0ee9" translate="yes" xml:space="preserve">
          <source>Note: As Active Record callbacks are not triggered, this method will not automatically update &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; columns.</source>
          <target state="translated">참고 : Active Record 콜백은 트리거되지 &lt;code&gt;updated_at&lt;/code&gt; 메소드는 updated_at / &lt;code&gt;updated_on&lt;/code&gt; 열을 자동으로 업데이트하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b382d38463c4b9772db0f0e4f20597ea1d44539b" translate="yes" xml:space="preserve">
          <source>Note: Fixtures are unordered. If you want ordered fixtures, use the omap YAML type. See &lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; for the specification. You will need ordered fixtures when you have foreign key constraints on keys in the same table. This is commonly needed for tree structures. Example:</source>
          <target state="translated">참고 : 비품은 순서가 없습니다. 주문 된 조명기를 원한다면 omap YAML 타입을 사용하십시오. 사양 은 &lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; 을 참조하십시오 . 동일한 테이블의 키에 외래 키 제약 조건이있는 경우 정렬 된 비품이 필요합니다. 이것은 일반적으로 트리 구조에 필요합니다. 예:</target>
        </trans-unit>
        <trans-unit id="6bdee0660c95430cdd80faf743049e2449f20e2c" translate="yes" xml:space="preserve">
          <source>Note: Fixtures are unordered. If you want ordered fixtures, use the omap YAML type. See &lt;a href=&quot;https://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; for the specification. You will need ordered fixtures when you have foreign key constraints on keys in the same table. This is commonly needed for tree structures. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f911ece33a8889898f780391535eeae25b4645" translate="yes" xml:space="preserve">
          <source>Note: If the day is not included as an option but the month is, the day will be set to the 1st to ensure that all month choices are valid.</source>
          <target state="translated">참고 : 요일이 옵션으로 포함되어 있지 않지만 월이 포함 된 경우 모든 월 선택이 유효하도록 요일이 1 일로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5c365c37375888e18bc3f7fffc3e3409ead7ea82" translate="yes" xml:space="preserve">
          <source>Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once. It generates at least one SQL &lt;code&gt;DELETE&lt;/code&gt; query per record (or possibly more, to enforce your callbacks). If you want to delete many rows quickly, without concern for their associations or callbacks, use &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;&lt;code&gt;delete_all&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455ad7b304457d0818b156a5d5a258e87af23432" translate="yes" xml:space="preserve">
          <source>Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once. It generates at least one SQL &lt;code&gt;DELETE&lt;/code&gt; query per record (or possibly more, to enforce your callbacks). If you want to delete many rows quickly, without concern for their associations or callbacks, use &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt; instead.</source>
          <target state="translated">참고 : 한 번에 많은 레코드를 제거 할 때 각 레코드의 인스턴스화, 콜백 실행 및 삭제에 시간이 오래 걸릴 수 있습니다. 레코드 당 하나 이상의 SQL &lt;code&gt;DELETE&lt;/code&gt; 쿼리를 생성합니다 (또는 콜백을 강화하기 위해 더 많을 수도 있음). 연관 또는 콜백에 대한 걱정없이 많은 행을 빠르게 삭제하려면 &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all을&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="acacd3efece89a8db79dda6270478358ee24035b" translate="yes" xml:space="preserve">
          <source>Note: Joining, eager loading and preloading of these associations is not possible. These operations happen before instance creation and the scope will be called with a &lt;code&gt;nil&lt;/code&gt; argument.</source>
          <target state="translated">참고 : 이러한 연관의 결합, 열성적인로드 및 사전로드는 불가능합니다. 이러한 작업은 인스턴스 생성 전에 발생하며 범위는 &lt;code&gt;nil&lt;/code&gt; 인수 와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="308e33031d5f89bc20b7a0f4592db047a4d56233" translate="yes" xml:space="preserve">
          <source>Note: MySQL only supports index order from 8.0.1 onwards (earlier versions accepted the syntax but ignored it).</source>
          <target state="translated">참고 : MySQL은 8.0.1 이후의 색인 순서 만 지원합니다 (이전 버전은 구문을 수락했지만 무시했습니다).</target>
        </trans-unit>
        <trans-unit id="2c2f8f1f61d9a03d6edf900890dd17a404d9fe19" translate="yes" xml:space="preserve">
          <source>Note: Not supported by &lt;code&gt;MySQL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124f350c136512944ed0f6dcf73a12862c334ad1" translate="yes" xml:space="preserve">
          <source>Note: Partial indexes are only supported for PostgreSQL and SQLite 3.8.0+.</source>
          <target state="translated">참고 : 부분 인덱스는 PostgreSQL 및 SQLite 3.8.0 이상에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="42fb334b409ac2f28567a18c3f74b4bcf9726af2" translate="yes" xml:space="preserve">
          <source>Note: Partial indexes are only supported for PostgreSQL and SQLite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d6873d18327e72cbed60ce10d25503c5b6ff17" translate="yes" xml:space="preserve">
          <source>Note: SQLite doesn't support index length.</source>
          <target state="translated">참고 : SQLite는 인덱스 길이를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2dfc9a11d5d1fa70f8585fb64a2db0c1f6ce0546" translate="yes" xml:space="preserve">
          <source>Note: SSEs are not currently supported by IE. However, they are supported by Chrome, Firefox, Opera, and Safari.</source>
          <target state="translated">참고 : SSE는 현재 IE에서 지원되지 않습니다. 그러나 Chrome, Firefox, Opera 및 Safari에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="edebfe049fe010222ebf5af3b99dfdb7bfb59cc1" translate="yes" xml:space="preserve">
          <source>Note: Since Rails doesn't know which database is the replica for your writer you will need to add this to the abstract class after you're done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7c763a29b125ebac02b340adfd08afb47105eb" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;attachable_type=&lt;/code&gt; method is being called when assigning an &lt;code&gt;attachable&lt;/code&gt;. The &lt;code&gt;class_name&lt;/code&gt; of the &lt;code&gt;attachable&lt;/code&gt; is passed as a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86cc9acd3cc4679a14049283572db943a13a4c8" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;attachable_type=&lt;/code&gt; method is being called when assigning an &lt;code&gt;attachable&lt;/code&gt;. The &lt;code&gt;class_name&lt;/code&gt; of the &lt;code&gt;attachable&lt;/code&gt; is passed as a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">주 : &lt;code&gt;attachable_type=&lt;/code&gt; 할당 될 때 방법이 호출되고 &lt;code&gt;attachable&lt;/code&gt; . &lt;code&gt;class_name&lt;/code&gt; 에 의 &lt;code&gt;attachable&lt;/code&gt; A와 전달되는 &lt;a href=&quot;../../string&quot;&gt;문자열&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b32677b2c1945dcf62d2c8edf09310b4dc2135f1" translate="yes" xml:space="preserve">
          <source>Note: The adapter provided by this method must provide some additional methods from those expected of a standard &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; in order to be used with the active job test helpers. Refer to &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt;.</source>
          <target state="translated">참고 :이 방법으로 제공되는 어댑터 는 활성 작업 테스트 헬퍼와 함께 사용하기 위해 표준 &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; 에서 예상되는 몇 가지 추가 방법을 제공해야합니다 . &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="db49b8fb43e5b880d2e4b216b1307840d408a679" translate="yes" xml:space="preserve">
          <source>Note: The new instance will share a link to the same attributes as the original class. Therefore the sti column value will still be the same. Any change to the attributes on either instance will affect both instances. If you want to change the sti column as well, use &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;&lt;code&gt;becomes!&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856990d094574273e23f235fcf21d1ef8d7d3679" translate="yes" xml:space="preserve">
          <source>Note: The new instance will share a link to the same attributes as the original class. Therefore the sti column value will still be the same. Any change to the attributes on either instance will affect both instances. If you want to change the sti column as well, use &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;becomes!&lt;/a&gt; instead.</source>
          <target state="translated">참고 : 새 인스턴스는 원래 클래스와 동일한 속성에 대한 링크를 공유합니다. 따라서 sti 컬럼 값은 여전히 ​​동일합니다. 각 인스턴스에서 속성을 변경하면 두 인스턴스 모두에 영향을 미칩니다. sti 컬럼도 바꾸고 싶다면, 사용 &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;이됩니다! &lt;/a&gt;대신에.</target>
        </trans-unit>
        <trans-unit id="e495b3a8620060a6500fb583012fa4372f4b9ce5" translate="yes" xml:space="preserve">
          <source>Note: The old instance's sti column value will be changed too, as both objects share the same set of attributes.</source>
          <target state="translated">참고 : 두 개체 모두 동일한 속성 집합을 공유하므로 이전 인스턴스의 sti 열 값도 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="da5de37a9fe710621b520911dc22e6273fdacef4" translate="yes" xml:space="preserve">
          <source>Note: The precision is the total number of significant digits, and the scale is the number of digits that can be stored following the decimal point. For example, the number 123.45 has a precision of 5 and a scale of 2. A decimal with a precision of 5 and a scale of 2 can range from -999.99 to 999.99.</source>
          <target state="translated">참고 : 정밀도는 유효 유효 자릿수의 총계이며, 스케일은 소수점 다음에 저장할 수있는 자릿수입니다. 예를 들어 숫자 123.45의 정밀도는 5이고 스케일은 2입니다. 정밀도가 5이고 소수 자릿수가 2 인 소수는 -999.99에서 999.99 사이입니다.</target>
        </trans-unit>
        <trans-unit id="7e51e35c9bfbf1212b52250689598e0b6edbcfee" translate="yes" xml:space="preserve">
          <source>Note: This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;&lt;code&gt;FormOptionsHelper&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;&lt;code&gt;DateHelper&lt;/code&gt;&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;&lt;code&gt;FormOptionsHelper#collection_select&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;&lt;code&gt;DateHelper#datetime_select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9065955578098ed0bb8bd025f933ad59c21c6e6" translate="yes" xml:space="preserve">
          <source>Note: This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_select&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView::Helpers::DateHelper#datetime_select&lt;/a&gt;.</source>
          <target state="translated">참고 : 이는 &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper # collection_select&lt;/a&gt; 및 &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView :: Helpers :: DateHelper # datetime_select&lt;/a&gt; 와 같이 기본으로 오브젝트와 함께 작동하도록 설계된 &lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt; 및 &lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt; 의 메소드에서도 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="c2352219e415aacb6ef215e56a9cd402e35a6e9a" translate="yes" xml:space="preserve">
          <source>Note: This assertion is simply a shortcut for:</source>
          <target state="translated">참고 :이 어설 션은 다음에 대한 바로 가기입니다.</target>
        </trans-unit>
        <trans-unit id="ef0e993df538909451f4951854e2341a7ebc0570" translate="yes" xml:space="preserve">
          <source>Note: This is an optimization of &lt;code&gt;Enumerable#excluding&lt;/code&gt; that uses &lt;code&gt;Array#-&lt;/code&gt; instead of &lt;code&gt;Array#reject&lt;/code&gt; for performance reasons.</source>
          <target state="translated">참고 : 이것은 성능상의 이유로 &lt;code&gt;Array#reject&lt;/code&gt; 대신 &lt;code&gt;Array#-&lt;/code&gt; 를 사용하는 &lt;code&gt;Enumerable#excluding&lt;/code&gt; 최적화입니다 .</target>
        </trans-unit>
        <trans-unit id="863ca249317e9c0dbb645dce430c3cd0b6faa965" translate="yes" xml:space="preserve">
          <source>Note: This is purely a browser performance optimization and is not meant for server load balancing. See &lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time&lt;/a&gt;/ for background and &lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt; for connection limit data.</source>
          <target state="translated">참고 : 이것은 순수한 브라우저 성능 최적화이며 서버로드 밸런싱을위한 것은 아닙니다. 배경 은 &lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time&lt;/a&gt; / 및 연결 제한 데이터는 &lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a3287c1634d93a72d137f0d950e3c604c3df357" translate="yes" xml:space="preserve">
          <source>Note: To turn off all caching provided by Action Controller, set</source>
          <target state="translated">참고 : Action Controller에서 제공하는 모든 캐싱을 끄려면</target>
        </trans-unit>
        <trans-unit id="5b440437b3604be9608bede173ea6d8501bdfdc8" translate="yes" xml:space="preserve">
          <source>Note: Updating a large number of records will run an UPDATE query for each record, which may cause a performance issue. When running callbacks is not needed for each record update, it is preferred to use &lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt; for updating all records in a single query.</source>
          <target state="translated">참고 : 많은 수의 레코드를 업데이트하면 각 레코드에 대해 UPDATE 쿼리가 실행되어 성능 문제가 발생할 수 있습니다. 각 레코드 업데이트에 콜백을 실행할 필요가없는 경우 단일 쿼리에서 모든 레코드를 업데이트 하기 위해 &lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt; 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="62b50481c99d023afaf5455de8ac79fe5a963dac" translate="yes" xml:space="preserve">
          <source>Note: You can't pass in a condition as a string (like &lt;code&gt;name =
'Jamie'&lt;/code&gt;), since it would be sanitized and then queried against the primary key column, like &lt;code&gt;id = 'name =
\'Jamie\''&lt;/code&gt;.</source>
          <target state="translated">참고 : 조건을 문자열로 전달할 수 없습니다 ( &lt;code&gt;name = 'Jamie'&lt;/code&gt; ). 소독 된 다음 &lt;code&gt;id = 'name = \'Jamie\''&lt;/code&gt; 와 같은 기본 키 열에 대해 쿼리되기 때문에 조건을 문자열 (예 : name = 'Jamie' ) 로 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0d75342d001759e22c93da271a1e94d775d9beba" translate="yes" xml:space="preserve">
          <source>Note: not all valid &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt; expressions are valid &lt;a href=&quot;calculations#method-i-count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; expressions. The specifics differ between databases. In invalid cases, an error from the database is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e95bdc13adc134c9b83e94f1ac9f03cf6cfc487" translate="yes" xml:space="preserve">
          <source>Note: not all valid &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt; expressions are valid &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; expressions. The specifics differ between databases. In invalid cases, an error from the database is thrown.</source>
          <target state="translated">참고 : 모든 유효한 &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation # select&lt;/a&gt; 표현식이 유효한 &lt;a href=&quot;calculations#method-i-count&quot;&gt;계수&lt;/a&gt; 표현식 인 것은 아닙니다 . 데이터베이스마다 세부 사항이 다릅니다. 유효하지 않은 경우 데이터베이스에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="711fa045d5bab865319e265bf87d0a98a6d2ee1b" translate="yes" xml:space="preserve">
          <source>Note: only supported by &lt;code&gt;MySQL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb90894dfb9810668140dd5abc132702407b2049" translate="yes" xml:space="preserve">
          <source>Note: only supported by MySQL.</source>
          <target state="translated">참고 : MySQL에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="11012fa2ff042b2ccc5930b6e83ce185707b0ecd" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL</source>
          <target state="translated">참고 : PostgreSQL에서만 지원</target>
        </trans-unit>
        <trans-unit id="e98240c921e487203c2cf455698f4a0b6816698a" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL and &lt;code&gt;MySQL&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b979edd03dc476656559cc41b1e4a6d868f05723" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL and MySQL</source>
          <target state="translated">참고 : PostgreSQL 및 MySQL에서만 지원</target>
        </trans-unit>
        <trans-unit id="d4570c3579af0b879f140c7b30b54ae99eeeb839" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL.</source>
          <target state="translated">참고 : PostgreSQL에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9a83e4f90833243e0c6406c5f754ff630641257d" translate="yes" xml:space="preserve">
          <source>Note: this feature is not available with the threaded parallelization.</source>
          <target state="translated">참고 :이 기능은 스레드 병렬 처리에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="205d08dcd8d151326e23421d0d1ac6edc18b3313" translate="yes" xml:space="preserve">
          <source>Note: use &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt; to match the start and end of the string, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; match the start/end of a line.</source>
          <target state="translated">참고 : 문자열의 시작과 끝을 일치 시키 려면 &lt;code&gt;\A&lt;/code&gt; 와 &lt;code&gt;\z&lt;/code&gt; 를 사용 하고 , 줄의 시작과 끝을 &lt;code&gt;^&lt;/code&gt; 와 &lt;code&gt;$&lt;/code&gt; 와 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="773ff38978dbfe8d2f1950aaff40b3a6289527ac" translate="yes" xml:space="preserve">
          <source>Note: when using &lt;code&gt;controller&lt;/code&gt;, the route is simply named after the method you call on the block parameter rather than map.</source>
          <target state="translated">참고 : &lt;code&gt;controller&lt;/code&gt; 를 사용할 때 경로는 map이 아닌 block 매개 변수를 호출하는 메서드의 이름을 따서 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="186ee9e469f8ca1542732840e3e0f13195377443" translate="yes" xml:space="preserve">
          <source>Notice how the &lt;code&gt;edit&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; actions resemble the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39429a684161fc0c5605d56b46f44c1c03d8efe8" translate="yes" xml:space="preserve">
          <source>Notice how the short-style &lt;code&gt;form_with&lt;/code&gt; invocation is conveniently the same, regardless of the record being new or existing. Record identification is smart enough to figure out if the record is new by asking &lt;code&gt;record.new_record?&lt;/code&gt;. It also selects the correct path to submit to, and the name based on the class of the object.</source>
          <target state="translated">짧은 스타일 &lt;code&gt;form_with&lt;/code&gt; 호출이 레코드가 새 레코드인지 기존 레코드인지에 관계없이 편리하게 어떻게 동일한 지 확인하십시오. 레코드 식별은 &lt;code&gt;record.new_record?&lt;/code&gt; 를 요청하여 레코드가 새로운 것인지 알아낼 수있을 정도로 똑똑합니다 . . 또한 제출할 올바른 경로와 오브젝트 클래스를 기반으로 이름을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="75bd1184347256b109b4e2f947e344ffd54e712e" translate="yes" xml:space="preserve">
          <source>Notice how the short-style &lt;code&gt;form_with&lt;/code&gt; invocation is conveniently the same, regardless of the record being new or existing. Record identification is smart enough to figure out if the record is new by asking &lt;code&gt;record.persisted?&lt;/code&gt;. It also selects the correct path to submit to, and the name based on the class of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4ecc2e4f41f048a095e5f69279b44bdb2f223b" translate="yes" xml:space="preserve">
          <source>Notice that &amp;ldquo;rails:generators:test_unit&amp;rdquo; could be loaded as well, what &lt;code&gt;Rails&lt;/code&gt; looks for is the first and last parts of the namespace. This is what allows any test framework to hook into &lt;code&gt;Rails&lt;/code&gt; as long as it provides any of the hooks above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0f7457358771ccbf92d92a4d763b28aca85961" translate="yes" xml:space="preserve">
          <source>Notice that &amp;ldquo;rails:generators:test_unit&amp;rdquo; could be loaded as well, what Rails looks for is the first and last parts of the namespace. This is what allows any test framework to hook into Rails as long as it provides any of the hooks above.</source>
          <target state="translated">&amp;ldquo;rails : generators : test_unit&amp;rdquo;도로드 할 수 있습니다. Rails가 찾는 것은 네임 스페이스의 첫 부분과 마지막 부분입니다. 위의 후크를 제공하는 한 테스트 프레임 워크를 Rails에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ea40f338b226864feab0df23f1c0706c1e21c74" translate="yes" xml:space="preserve">
          <source>Notice that :stream only works with templates. &lt;code&gt;Rendering&lt;/code&gt; :json or :xml with :stream won't work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5549615aaa370893e3ea8fcbb7c259a1259ddcf" translate="yes" xml:space="preserve">
          <source>Notice that :stream only works with templates. Rendering :json or :xml with :stream won't work.</source>
          <target state="translated">: stream은 템플릿에서만 작동합니다. : stream으로 렌더링 : json 또는 : xml이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="320e974e71e96a6cbd1aead6a719dcffd232a3a4" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; may return false and &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; returns true because this method considers actions that are also available through other means, for example, implicit render ones.</source>
          <target state="translated">공지 사항이 &lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; 거짓과 반환 할 수 있습니다 &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; 이 방법은 예를 들어, 다른 수단을 통해 사용할 수있는 행동, 암시 적 렌더링 사람을 고려하기 때문에 true를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="fe43ee640ff6bcab6590900f5e5cb91b851fec67" translate="yes" xml:space="preserve">
          <source>Notice that in this example we used the &lt;code&gt;cache_key_with_version&lt;/code&gt; method, so the resulting cache key will be something like &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt;. &lt;code&gt;cache_key_with_version&lt;/code&gt; generates a string based on the model's class name, &lt;code&gt;id&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; attributes. This is a common convention and has the benefit of invalidating the cache whenever the product is updated. In general, when you use low-level caching for instance level information, you need to generate a cache key.</source>
          <target state="translated">이 예제에서는 &lt;code&gt;cache_key_with_version&lt;/code&gt; 메소드를 사용 했으므로 결과 캐시 키는 &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt; 와 같습니다 . &lt;code&gt;cache_key_with_version&lt;/code&gt; 은 모델의 클래스 이름, &lt;code&gt;id&lt;/code&gt; 및 &lt;code&gt;updated_at&lt;/code&gt; 속성을 기반으로 문자열을 생성 합니다. 이것은 일반적인 규칙이며 제품이 업데이트 될 때마다 캐시를 ​​무효화하는 이점이 있습니다. 일반적으로 인스턴스 레벨 정보에 저수준 캐싱을 사용하는 경우 캐시 키를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="335c6423429f476890129005da902f572747e332" translate="yes" xml:space="preserve">
          <source>Notice that inside the &lt;code&gt;create&lt;/code&gt; action we use &lt;code&gt;render&lt;/code&gt; instead of &lt;code&gt;redirect_to&lt;/code&gt; when &lt;code&gt;save&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;render&lt;/code&gt; method is used so that the &lt;code&gt;@article&lt;/code&gt; object is passed back to the &lt;code&gt;new&lt;/code&gt; template when it is rendered. This rendering is done within the same request as the form submission, whereas the &lt;code&gt;redirect_to&lt;/code&gt; will tell the browser to issue another request.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 액션 내에서 &lt;code&gt;save&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 &lt;code&gt;redirect_to&lt;/code&gt; 대신 &lt;code&gt;render&lt;/code&gt; 를 사용 합니다 . &lt;code&gt;render&lt;/code&gt; 방법은되도록 사용 &lt;code&gt;@article&lt;/code&gt; 의 객체가 다시 전달되는 &lt;code&gt;new&lt;/code&gt; 렌더링 될 때 템플릿입니다. 이 렌더링은 양식 제출과 동일한 요청 내에서 수행되는 반면 &lt;code&gt;redirect_to&lt;/code&gt; 는 브라우저에 다른 요청을 발행하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="200ef77ed6574c244c4ae9bf1d5933c2dfdd03d7" translate="yes" xml:space="preserve">
          <source>Notice that no &lt;code&gt;:id&lt;/code&gt; parameter was provided to the first &lt;code&gt;url_for&lt;/code&gt; call and the helper used the one from the route's path. Any path parameter implicitly used by &lt;code&gt;url_for&lt;/code&gt; can always be overwritten like shown on the last &lt;code&gt;url_for&lt;/code&gt; calls.</source>
          <target state="translated">첫 번째 &lt;code&gt;url_for&lt;/code&gt; 호출에 &lt;code&gt;:id&lt;/code&gt; 매개 변수가 제공 되지 않았 으며 도우미는 경로의 경로 에서이 매개 변수를 사용했습니다. &lt;code&gt;url_for&lt;/code&gt; 에서 내재적으로 사용하는 모든 경로 매개 변수 는 마지막 &lt;code&gt;url_for&lt;/code&gt; 호출 에서 표시된 것처럼 항상 덮어 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="519aa6a6e5d6afab6a7e2eb41a4439a4f9329106" translate="yes" xml:space="preserve">
          <source>Notice that only &lt;em&gt;one&lt;/em&gt; migration was copied over here. This is because the first two migrations were copied over the first time this command was run.</source>
          <target state="translated">여기 에는 &lt;em&gt;하나의&lt;/em&gt; 마이그레이션 만 복사되었습니다. 이 명령이 처음 실행될 때 처음 두 마이그레이션이 복사 되었기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="419d31f54a68e03dee82c2e50065319e6a66420a" translate="yes" xml:space="preserve">
          <source>Notice that the appropriate option was automatically marked &lt;code&gt;selected=&quot;selected&quot;&lt;/code&gt;. Since this select box was bound to a model, we didn't need to specify a &lt;code&gt;:selected&lt;/code&gt; argument!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df50d170a97756a976395374fdf8c24cc9971e57" translate="yes" xml:space="preserve">
          <source>Notice that the third parameter, the options array, is the same kind of argument you pass to &lt;code&gt;options_for_select&lt;/code&gt;. One advantage here is that you don't have to worry about pre-selecting the correct city if the user already has one - Rails will do this for you by reading from the &lt;code&gt;@person.city_id&lt;/code&gt; attribute.</source>
          <target state="translated">옵션 배열 인 세 번째 매개 변수는 &lt;code&gt;options_for_select&lt;/code&gt; 에 전달하는 것과 같은 종류의 인수 입니다. 여기서 한 가지 장점은 사용자가 이미 도시를 가지고있는 경우 올바른 도시를 미리 선택하는 것에 대해 걱정할 필요가 없다는 것입니다. Rails는 &lt;code&gt;@person.city_id&lt;/code&gt; 속성 에서 읽어서 이를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="1908ba1c531a2b8259e8a292905b0338f0a4c049" translate="yes" xml:space="preserve">
          <source>Notice that when you add a path using &lt;code&gt;add&lt;/code&gt;, the path object created already contains the path with the same path value given to &lt;code&gt;add&lt;/code&gt;. In some situations, you may not want this behavior, so you can give &lt;code&gt;:with&lt;/code&gt; as option.</source>
          <target state="translated">add를 사용하여 경로를 &lt;code&gt;add&lt;/code&gt; 하면 생성 된 경로 객체에 이미 &lt;code&gt;add&lt;/code&gt; 에 지정된 경로 값을 가진 경로가 포함 됩니다. 경우에 따라이 동작을 원하지 않을 수도 있으므로 &lt;code&gt;:with&lt;/code&gt; 를 옵션으로 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e96537918e8234317029fed3fe4ff72457100b0" translate="yes" xml:space="preserve">
          <source>Notice that, when the form is submitted, there will be no single value in the &lt;code&gt;params&lt;/code&gt; hash that contains the full date. Instead, there will be several values with special names like &lt;code&gt;&quot;birth_date(1i)&quot;&lt;/code&gt;. Active Record knows how to assemble these specially-named values into a full date or time, based on the declared type of the model attribute. So we can pass &lt;code&gt;params[:person]&lt;/code&gt; to e.g. &lt;code&gt;Person.new&lt;/code&gt; or &lt;code&gt;Person#update&lt;/code&gt; just like we would if the form used a single field to represent the full date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c8b7d455b3180c88c20d2969451f82d99fc72d" translate="yes" xml:space="preserve">
          <source>Notice the 'E' in the output. It denotes a test with error.</source>
          <target state="translated">출력에서 'E'를 확인하십시오. 오류가있는 테스트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="87b70343665b3497b68b2af72f1fe352646fe9bf" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;category&lt;/code&gt; key of the &lt;code&gt;first&lt;/code&gt; article found in &lt;code&gt;fixtures/articles.yml&lt;/code&gt; has a value of &lt;code&gt;about&lt;/code&gt;. This tells Rails to load the category &lt;code&gt;about&lt;/code&gt; found in &lt;code&gt;fixtures/categories.yml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fixtures/articles.yml&lt;/code&gt; 에있는 &lt;code&gt;first&lt;/code&gt; 기사 의 &lt;code&gt;category&lt;/code&gt; 키 값은 &lt;code&gt;about&lt;/code&gt; 입니다. 이 범주를로드 레일을 알려줍니다 &lt;code&gt;about&lt;/code&gt; 에서 발견 &lt;code&gt;fixtures/categories.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f050ea2079c865a020ea6021b3e47525fb921cf9" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;format.js&lt;/code&gt; in the &lt;code&gt;respond_to&lt;/code&gt; block: that allows the controller to respond to your Ajax request. You then have a corresponding &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; view file that generates the actual JavaScript code that will be sent and executed on the client side.</source>
          <target state="translated">&lt;code&gt;respond_to&lt;/code&gt; 블록 의 &lt;code&gt;format.js&lt;/code&gt; 에 주목하십시오. 그러면 컨트롤러가 Ajax 요청에 응답 할 수 있습니다. 그런 다음 클라이언트 측에서 전송 및 실행될 실제 JavaScript 코드를 생성 하는 해당 &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; 보기 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="da94c85a23270499590d74673ddcfe2ffd4b3938" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;only_path: true&lt;/code&gt; part. This is because &lt;a href=&quot;urlfor&quot;&gt;&lt;code&gt;UrlFor&lt;/code&gt;&lt;/a&gt; has no information about the website hostname that your Rails app is serving. So if you want to include the hostname as well, then you must also pass the &lt;code&gt;:host&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679dcd5834f1e3b85618c3828ff5a6c00ccaf1be" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;only_path: true&lt;/code&gt; part. This is because &lt;a href=&quot;urlfor&quot;&gt;UrlFor&lt;/a&gt; has no information about the website hostname that your Rails app is serving. So if you want to include the hostname as well, then you must also pass the &lt;code&gt;:host&lt;/code&gt; argument:</source>
          <target state="translated">통지 &lt;code&gt;only_path: true&lt;/code&gt; 부분. &lt;a href=&quot;urlfor&quot;&gt;UrlFor에&lt;/a&gt; Rails 앱이 제공하는 웹 사이트 호스트 이름에 대한 정보 가 없기 때문 입니다. 따라서 호스트 이름도 포함 시키려면 &lt;code&gt;:host&lt;/code&gt; 인수 도 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e55f230dbbf5a74dbcd7017f3fcdd6a43cc06c8b" translate="yes" xml:space="preserve">
          <source>Notice we're starting to see some duplication in these three tests, they both access the same Article fixture data. We can D.R.Y. this up by using the &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; methods provided by &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;.</source>
          <target state="translated">이 세 가지 테스트에서 중복이 발생하기 시작했으며 둘 다 동일한 Article Fixture 데이터에 액세스합니다. &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; 제공 하는 &lt;code&gt;setup&lt;/code&gt; 및 &lt;code&gt;teardown&lt;/code&gt; 메소드 를 사용하여이를 건조시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="8c8eaaf882c955457360616271c1ee8f60912482" translate="yes" xml:space="preserve">
          <source>Notifies the logs that the request has begun. After the request is complete, flushes all the logs.</source>
          <target state="translated">요청이 시작되었음을 로그에 알립니다. 요청이 완료되면 모든 로그를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="b083a26e6e8d5c85e90f954d51b377ab9d6cb915" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;@articles&lt;/code&gt; is included in the instance variables, because the line defining it was executed.</source>
          <target state="translated">이제 &lt;code&gt;@articles&lt;/code&gt; 가 인스턴스 변수에 포함됩니다.이를 정의하는 행이 실행 되었기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="1b042097ab2d91df48ebb6afa5f5c762fbec1027" translate="yes" xml:space="preserve">
          <source>Now add a rotation for the old SHA1 digest so existing cookies are seamlessly upgraded to the new SHA256 digest.</source>
          <target state="translated">이제 기존 쿠키가 새 SHA256 다이제스트로 완벽하게 업그레이드되도록 이전 SHA1 다이제스트에 회전을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c41bff3fa5ccfd1232f6ff1584724f94b31f90aa" translate="yes" xml:space="preserve">
          <source>Now all of the following will produce the expected join queries using &lt;code&gt;INNER JOIN&lt;/code&gt;:</source>
          <target state="translated">이제 다음은 모두 &lt;code&gt;INNER JOIN&lt;/code&gt; 을 사용하여 예상되는 조인 쿼리를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="20b7f51321bce2db86858d9563944349508848d5" translate="yes" xml:space="preserve">
          <source>Now all you have to do is change that timestamp when the helper method changes.</source>
          <target state="translated">이제 헬퍼 메소드가 변경 될 때 해당 타임 스탬프를 변경하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="7fa3370358927296e6f19b98512db3f680400c6c" translate="yes" xml:space="preserve">
          <source>Now if we execute &lt;code&gt;@todo = @user.todos.create&lt;/code&gt; then the &lt;code&gt;@todo&lt;/code&gt; record's &lt;code&gt;user_id&lt;/code&gt; value will be the &lt;code&gt;guid&lt;/code&gt; value of &lt;code&gt;@user&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@todo = @user.todos.create&lt;/code&gt; 를 실행 하면 &lt;code&gt;@todo&lt;/code&gt; 레코드의 &lt;code&gt;user_id&lt;/code&gt; 값은 &lt;code&gt;@user&lt;/code&gt; 의 &lt;code&gt;guid&lt;/code&gt; 값이 됩니다 .</target>
        </trans-unit>
        <trans-unit id="be04c0ceb80dcbf0f5dc7603a36d5f8eb4fa4974" translate="yes" xml:space="preserve">
          <source>Now if we run our tests, we should see it pass:</source>
          <target state="translated">이제 테스트를 실행하면 다음과 같은 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="786773a8b554b8bb590eedf207af886d2f83e1b8" translate="yes" xml:space="preserve">
          <source>Now if you go to http://localhost:3000/articles you will see a list of all the articles that you have created.</source>
          <target state="translated">이제 http : // localhost : 3000 / articles로 이동하면 작성한 모든 기사 목록이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1ab2226544af01e8b9dc9c006fa565e96f7bfd6d" translate="yes" xml:space="preserve">
          <source>Now if you try to create a new article, you will be greeted with a basic HTTP Authentication challenge:</source>
          <target state="translated">이제 새 기사를 작성하려고하면 기본 HTTP 인증 챌린지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="02e279c3aab36157f4c5efb237f845b1ef1d7aec" translate="yes" xml:space="preserve">
          <source>Now it &lt;em&gt;is&lt;/em&gt; removed from the database:</source>
          <target state="translated">이제이 &lt;em&gt;되는&lt;/em&gt; 데이터베이스에서 제거 :</target>
        </trans-unit>
        <trans-unit id="5a02a8ec468f1bdf1e925cf94532d06e0367288b" translate="yes" xml:space="preserve">
          <source>Now it does this instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d061bef62245b1ff344a1120ecc9711baf3295" translate="yes" xml:space="preserve">
          <source>Now it is possible to create an instance of &lt;code&gt;Person&lt;/code&gt; and set attributes using &lt;code&gt;from_json&lt;/code&gt;.</source>
          <target state="translated">이제 &lt;code&gt;Person&lt;/code&gt; 인스턴스를 작성하고 &lt;code&gt;from_json&lt;/code&gt; 을 사용하여 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe05d7f983e2d38c65ce6aec823f42b31eef96f0" translate="yes" xml:space="preserve">
          <source>Now it's possible to access attributes from the database through the value objects instead. If you choose to name the composition the same as the attribute's name, it will be the only way to access that attribute. That's the case with our &lt;code&gt;balance&lt;/code&gt; attribute. You interact with the value objects just like you would with any other attribute:</source>
          <target state="translated">이제 값 객체를 통해 데이터베이스에서 속성에 액세스 할 수 있습니다. 컴포지션 이름을 속성 이름과 동일하게 지정하면 해당 속성에 액세스 할 수있는 유일한 방법입니다. 우리의 &lt;code&gt;balance&lt;/code&gt; 속성에 해당합니다. 다른 속성과 마찬가지로 값 객체와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="a0e723b1bc4f979da3f44583460af0278ed8ce41" translate="yes" xml:space="preserve">
          <source>Now it's time to explore your application. A good place to start is by asking the debugger for help. Type: &lt;code&gt;help&lt;/code&gt;</source>
          <target state="translated">이제 응용 프로그램을 살펴볼 차례입니다. 시작하기에 좋은 곳은 디버거에 도움을 요청하는 것입니다. 유형 : &lt;code&gt;help&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c36aeda334567b9baa41e06b510c8356bcd1cd8" translate="yes" xml:space="preserve">
          <source>Now let's add a link at the bottom of &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; so that we can delete an article from its own page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d346dc9770f3e643ac5bd68ca3943f083eeb299b" translate="yes" xml:space="preserve">
          <source>Now let's open that file and write our first assertion:</source>
          <target state="translated">이제 해당 파일을 열고 첫 번째 어설 션을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="1cae19a080fb992409b81b543049cc89e8ba18c3" translate="yes" xml:space="preserve">
          <source>Now let's set &lt;code&gt;distinct&lt;/code&gt;:</source>
          <target state="translated">이제 &lt;code&gt;distinct&lt;/code&gt; 하게 설정합시다 .</target>
        </trans-unit>
        <trans-unit id="5b9c7c93bfb7eceac813cc301b7376f2f1f280a2" translate="yes" xml:space="preserve">
          <source>Now let's test the flow for creating a new article in our blog.</source>
          <target state="translated">이제 블로그에서 새 기사를 작성하는 과정을 테스트 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="33fd0b45cc2d594e81d58237663c5baec9a5d5f1" translate="yes" xml:space="preserve">
          <source>Now our generator can be invoked as follows:</source>
          <target state="translated">이제 생성기를 다음과 같이 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce6dc94f4dbd0d8d43c18c69be65ff332773fa5b" translate="yes" xml:space="preserve">
          <source>Now people will only need to go to the root of the engine to see all the articles, rather than visiting &lt;code&gt;/articles&lt;/code&gt;. This means that instead of &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt;, you only need to go to &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; now.</source>
          <target state="translated">이제 사람들은 &lt;code&gt;/articles&lt;/code&gt; 를 방문하지 않고 모든 기사를 보려면 엔진의 루트로 가면됩니다 . 대신이 수단 &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt; , 만에 갈 필요 &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; 지금.</target>
        </trans-unit>
        <trans-unit id="5c83a55a45b2f01ea698594c8b3e1ad5455f11bf" translate="yes" xml:space="preserve">
          <source>Now routes such as &lt;code&gt;/posts/1&lt;/code&gt; will no longer be valid, but &lt;code&gt;/posts/1.1&lt;/code&gt; will be. The &lt;code&gt;id&lt;/code&gt; parameter must match the constraint passed in for this example.</source>
          <target state="translated">이제 &lt;code&gt;/posts/1&lt;/code&gt; 과 같은 경로 는 더 이상 유효하지 않지만 &lt;code&gt;/posts/1.1&lt;/code&gt; 은 유효 합니다. &lt;code&gt;id&lt;/code&gt; 매개 변수는이 예를 들어 전달 된 제약 조건을 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="6a4dcaaa6423147b18b2f6af18138b7623923251" translate="yes" xml:space="preserve">
          <source>Now that the engine can create new articles, it only makes sense to add commenting functionality as well. To do this, you'll need to generate a comment model, a comment controller, and then modify the articles scaffold to display comments and allow people to create new ones.</source>
          <target state="translated">이제 엔진이 새로운 기사를 작성할 수 있으므로 주석 기능도 추가하는 것이 좋습니다. 이렇게하려면 주석 모델, 주석 컨트롤러를 생성 한 다음 기사 스캐 폴드를 수정하여 주석을 표시하고 사람들이 새로운 주석을 작성할 수 있도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c44fc71b44ba9309c0138d0b212288263a8e6f9" translate="yes" xml:space="preserve">
          <source>Now that we have a new database, let's set up the connection model. In order to use the new database we need to create a new abstract class and connect to the animals databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11605a07ad419c26e10776711e573a3cc8abc17e" translate="yes" xml:space="preserve">
          <source>Now that we have a new database, let's set up the model. In order to use the new database we need to create a new abstract class and connect to the animals databases.</source>
          <target state="translated">이제 새로운 데이터베이스가 생겼으니 모델을 설정해 봅시다. 새로운 데이터베이스를 사용하려면 새로운 추상 클래스를 만들고 동물 데이터베이스에 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="2f8046c8539acb5480a428fc7d6605e3ecb484cf" translate="yes" xml:space="preserve">
          <source>Now that we have a user model to play with, we will edit the &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; file, make it instruct the &lt;code&gt;UserMailer&lt;/code&gt; to deliver an email to the newly created user by editing the create action and inserting a call to &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; right after the user is successfully saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732e32122270aef4b9252cc8512ef28b55fe61ee" translate="yes" xml:space="preserve">
          <source>Now that we have a user model to play with, we will just edit the &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; make it instruct the &lt;code&gt;UserMailer&lt;/code&gt; to deliver an email to the newly created user by editing the create action and inserting a call to &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; right after the user is successfully saved.</source>
          <target state="translated">이제 우리는 함께 플레이 할 수있는 사용자 모델을 가지고, 우리는 단지 편집합니다 &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; 지시를 할 &lt;code&gt;UserMailer&lt;/code&gt; (가) 조치를 만들고 편집하고의 호출에 삽입하여 새로 만든 사용자에게 이메일을 전달하기 위해 &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; 은 사용자가 성공적으로 저장된 직후입니다.</target>
        </trans-unit>
        <trans-unit id="08df1c22724db06d31f5eb1a44dd158696e53cf7" translate="yes" xml:space="preserve">
          <source>Now that we have articles and comments working, take a look at the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; template. It is getting long and awkward. We can use partials to clean it up.</source>
          <target state="translated">이제 기사와 의견이 작성 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 템플릿을 살펴보십시오 . 점점 어색 해지고 있습니다. 부분을 ​​사용하여 정리할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7a57569c29b3772ca2726e0da0891ffdcc0c35a" translate="yes" xml:space="preserve">
          <source>Now that we have made the controller and view, we need to tell Rails when we want &quot;Hello, Rails!&quot; to show up. In our case, we want it to show up when we navigate to the root URL of our site, http://localhost:3000. At the moment, &quot;Welcome aboard&quot; is occupying that spot.</source>
          <target state="translated">이제 컨트롤러와 뷰를 만들었으므로 &quot;Hello, Rails!&quot;를 원할 때 Rails에 알려야합니다. 표시합니다. 이 경우 사이트의 루트 URL (http : // localhost : 3000)로 이동할 때 표시되기를 원합니다. 현재 &quot;환영합니다&quot;가 그 자리를 차지하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="c78bf8c3d9d311c23bfefc91cd38fcc387615966" translate="yes" xml:space="preserve">
          <source>Now that we have the &lt;code&gt;database.yml&lt;/code&gt; and the new model set up it's time to create the databases. Rails 6.0 ships with all the rails tasks you need to use multiple databases in Rails.</source>
          <target state="translated">이제 &lt;code&gt;database.yml&lt;/code&gt; 과 새 모델을 설정 했으므로 이제 데이터베이스 를 만들 차례입니다. Rails 6.0은 Rails에서 여러 데이터베이스를 사용해야하는 모든 Rails 작업과 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3658b4e2bb9053598deec9119146b32737b682f1" translate="yes" xml:space="preserve">
          <source>Now that you have a module that modifies the input data, it's time to register it as a preprocessor for your mime type.</source>
          <target state="translated">입력 데이터를 수정하는 모듈이 생겼으므로 이제 MIME 유형의 전처리기로 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e3f00f9dc7d411f9b208e29217940a44d10cc9f" translate="yes" xml:space="preserve">
          <source>Now that you've seen how generators can be used &lt;em&gt;inside&lt;/em&gt; an application, did you know they can also be used to &lt;em&gt;generate&lt;/em&gt; applications too? This kind of generator is referred to as a &quot;template&quot;. This is a brief overview of the Templates API. For detailed documentation see the &lt;a href=&quot;rails_application_templates&quot;&gt;Rails Application Templates guide&lt;/a&gt;.</source>
          <target state="translated">애플리케이션 &lt;em&gt;내부&lt;/em&gt; 에서 생성기를 사용하는 방법을 살펴 봤 으므로 애플리케이션 을 &lt;em&gt;생성&lt;/em&gt; 하는 데에도 생성기를 사용할 수 있다는 것을 알고 있습니까? 이러한 종류의 생성기를 &quot;템플릿&quot;이라고합니다. 템플릿 API에 대한 간략한 개요입니다. 자세한 설명서는 &lt;a href=&quot;rails_application_templates&quot;&gt;Rails Application Templates 안내서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b78e5d03ac7a3268586ac2691c80bb6bf5d06b9" translate="yes" xml:space="preserve">
          <source>Now that you've seen how to create a controller, an action, and a view, let's create something with a bit more substance.</source>
          <target state="translated">이제 컨트롤러, 액션 및 뷰를 만드는 방법을 살펴 봤으니 조금 더 물질로 무언가를 만들어 봅시다.</target>
        </trans-unit>
        <trans-unit id="c42baaa9718f13d5c8222d8c8a7cd9c934c39cef" translate="yes" xml:space="preserve">
          <source>Now that you've seen your first Rails application, you should feel free to update it and experiment on your own.</source>
          <target state="translated">첫 번째 Rails 애플리케이션을 보았으므로 자유롭게 업데이트하고 직접 실험 해보십시오.</target>
        </trans-unit>
        <trans-unit id="4ebf0a06c02ac9ca1316bd4928cbe3c564c0f180" translate="yes" xml:space="preserve">
          <source>Now the behavior is clear, that we are only using the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt;.</source>
          <target state="translated">이제 동작은 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 의 연결 정보 만 사용한다는 것이 분명 합니다.</target>
        </trans-unit>
        <trans-unit id="b49ba3604f078f72baacf288b548a11038388574" translate="yes" xml:space="preserve">
          <source>Now the header can pick up on the &lt;code&gt;@page_title&lt;/code&gt; variable and use it for outputting a title tag:</source>
          <target state="translated">이제 헤더는 &lt;code&gt;@page_title&lt;/code&gt; 변수 에서 선택 하여 제목 태그를 출력하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e18d36f17b1d90839ac5dcdbcb33a0e9b504751" translate="yes" xml:space="preserve">
          <source>Now the test should pass. Let us verify by running the test again:</source>
          <target state="translated">이제 테스트를 통과해야합니다. 테스트를 다시 실행하여 확인합시다 :</target>
        </trans-unit>
        <trans-unit id="778539dc21c575db8a2ca83a7cff62a7c06e5c4c" translate="yes" xml:space="preserve">
          <source>Now the user can request to get a PDF version of a client just by adding &quot;.pdf&quot; to the URL:</source>
          <target state="translated">이제 사용자는 URL에 &quot;.pdf&quot;를 추가하여 PDF 버전의 클라이언트를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a84530ec9df04e7cc3d58660fb582a3729c51d42" translate="yes" xml:space="preserve">
          <source>Now to get this test to pass we can add a model level validation for the &lt;em&gt;title&lt;/em&gt; field.</source>
          <target state="translated">이제이 테스트를 통과하기 위해 &lt;em&gt;제목&lt;/em&gt; 필드에 대한 모델 레벨 유효성 검사를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bdb3107b7872fa0e6980316eb5e2a631d7af22a4" translate="yes" xml:space="preserve">
          <source>Now we can interact with the table using our model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a958ea46193df5a82d613575f59b32d9769fb6" translate="yes" xml:space="preserve">
          <source>Now we can see our &quot;Hello, Rails!&quot; text when we visit http://localhost:3000, confirming that the &lt;code&gt;root&lt;/code&gt; route is also mapped to the &lt;code&gt;index&lt;/code&gt; action of &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6c5e52a2403642e17d46449214a4ddd4e65765" translate="yes" xml:space="preserve">
          <source>Now we can see the article when we visit http://localhost:3000/articles/1!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188b483bccd4381f8ec9c5e1a3d636878fd9e47c" translate="yes" xml:space="preserve">
          <source>Now we can see the new description by invoking &lt;code&gt;--help&lt;/code&gt; on the new generator. The second way to add a description is by creating a file named &lt;code&gt;USAGE&lt;/code&gt; in the same directory as our generator. We are going to do that in the next step.</source>
          <target state="translated">이제 새로운 생성기에서 &lt;code&gt;--help&lt;/code&gt; 를 호출하여 새로운 설명을 볼 수 있습니다 . 설명을 추가하는 두 번째 방법은 생성기와 동일한 디렉토리에 &lt;code&gt;USAGE&lt;/code&gt; 라는 파일을 작성하는 것입니다. 다음 단계에서 그렇게 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="417969e5c8e508f01b009c421da4c0a0d5501235" translate="yes" xml:space="preserve">
          <source>Now we can use &lt;code&gt;Relation#merge&lt;/code&gt; to merge in the &lt;code&gt;created_in_time_range&lt;/code&gt; scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8c1cf15d98c430fe3bb86da45effb16f18c7e1" translate="yes" xml:space="preserve">
          <source>Now we move on to the &quot;C&quot; (Create) of CRUD. Typically, in web applications, creating a new resource is a multi-step process. First, the user requests a form to fill out. Then, the user submits the form. If there are no errors, then the resource is created and some kind of confirmation is displayed. Else, the form is redisplayed with error messages, and the process is repeated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddc1e5eddf99199ed2f4f24b64350725bf5572a" translate="yes" xml:space="preserve">
          <source>Now we're going to add a system test to our blog application. We'll demonstrate writing a system test by visiting the index page and creating a new blog article.</source>
          <target state="translated">이제 블로그 애플리케이션에 시스템 테스트를 추가하겠습니다. 인덱스 페이지를 방문하여 새 블로그 기사를 작성하여 시스템 테스트 작성을 시연합니다.</target>
        </trans-unit>
        <trans-unit id="6b1be2e7a39917788e5f531bf999ce9e2f7f2121" translate="yes" xml:space="preserve">
          <source>Now what if that number could vary, say as an argument from somewhere? The find would then take the form:</source>
          <target state="translated">이제 그 숫자가 다를 수 있다면 어딘가에서 논거로 말합니까? 그런 다음 찾기는 다음과 같은 형식을 취합니다.</target>
        </trans-unit>
        <trans-unit id="bd19300ee7bde487c7b46e35b59d4d10c498b143" translate="yes" xml:space="preserve">
          <source>Now what if that title could vary, say as an argument from somewhere? The find would then take the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9be071256fdc4d57319b64f14682dd8cf34cb5" translate="yes" xml:space="preserve">
          <source>Now when a new request for the index action is processed, the layout will vary depending on whether the person accessing is logged in or not.</source>
          <target state="translated">이제 인덱스 작업에 대한 새 요청이 처리되면 액세스하는 사람의 로그인 여부에 따라 레이아웃이 달라집니다.</target>
        </trans-unit>
        <trans-unit id="0c0ba2bf78d8878cf9ee6fce1e060d440d88a4de" translate="yes" xml:space="preserve">
          <source>Now when your application serves an asset in production, the CDN will store the asset for up to a year. Since most CDNs also cache headers of the request, this &lt;code&gt;Cache-Control&lt;/code&gt; will be passed along to all future browsers seeking this asset, the browser then knows that it can store this asset for a very long time before needing to re-request it.</source>
          <target state="translated">이제 응용 프로그램이 프로덕션 자산을 제공 할 때 CDN은 최대 1 년 동안 자산을 ​​저장합니다. 대부분의 CDN은 요청의 헤더도 캐시하므로이 &lt;code&gt;Cache-Control&lt;/code&gt; 은이 자산을 찾는 모든 향후 브라우저로 전달되므로 브라우저는이 자산을 다시 요청하기 전에이 자산을 매우 오랫동안 저장할 수 있음을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="7397dca47478e57252a6d04e34f47f3cce91cb32" translate="yes" xml:space="preserve">
          <source>Now with all the pieces in place, an action will take place that will associate an author - represented by a record in the &lt;code&gt;users&lt;/code&gt; table - with an article, represented by the &lt;code&gt;blorgh_articles&lt;/code&gt; table from the engine.</source>
          <target state="translated">이제 모든 조각이 제자리에 있으면 &lt;code&gt;users&lt;/code&gt; 테이블 의 레코드로 표시되는 작성자 와 엔진 의 &lt;code&gt;blorgh_articles&lt;/code&gt; 테이블로 표시되는 기사 를 연결하는 작업이 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="f4861027a7a7732f007bb28f69aa885ad4bd3bb6" translate="yes" xml:space="preserve">
          <source>Now you can access a serialized Hash of your object using the &lt;code&gt;serializable_hash&lt;/code&gt; method.</source>
          <target state="translated">이제 &lt;code&gt;serializable_hash&lt;/code&gt; 메소드를 사용하여 객체의 직렬화 된 해시에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bbd491ea2cb97bc75ae16420f9d81e845ecc38d4" translate="yes" xml:space="preserve">
          <source>Now you can add articles and comments to your blog and have them show up in the right places.</source>
          <target state="translated">이제 블로그에 기사와 의견을 추가하고 올바른 장소에 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a63f6b7032dcb040af6139789b42742fda3dbb90" translate="yes" xml:space="preserve">
          <source>Now you can create the necessary database tables in your testing database by navigating to your dummy app and migrating the database. First, run:</source>
          <target state="translated">이제 더미 앱으로 이동하고 데이터베이스를 마이그레이션하여 테스트 데이터베이스에서 필요한 데이터베이스 테이블을 작성할 수 있습니다. 먼저 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1b509fba0e74de20ecdb10b71addfc8cad75a3af" translate="yes" xml:space="preserve">
          <source>Now you can display an image inside your email.</source>
          <target state="translated">이제 이메일 안에 이미지를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e04b515bb030c9b6a664234a0b6eaa9a8d60e0d" translate="yes" xml:space="preserve">
          <source>Now you can have different transliterations for each locale:</source>
          <target state="translated">이제 각 로케일마다 다른 음역을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eab971757273773013b3ebe215faa414d52873bf" translate="yes" xml:space="preserve">
          <source>Now you can list a bunch of entries, call +Entry#title+, and polymorphism will provide you with the answer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57d5608f4f021228ff74f81e7c98fcad5341756" translate="yes" xml:space="preserve">
          <source>Now you can listen to this event with:</source>
          <target state="translated">이제 다음을 통해이 이벤트를들을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc952f88284ef46aa74b35dfcd65bb65ac57e4b3" translate="yes" xml:space="preserve">
          <source>Now you can mount your engine in application's routes just like that:</source>
          <target state="translated">이제 다음과 같이 애플리케이션 경로에 엔진을 마운트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ccd6733a35b358bf2c7b29305f2ea242bc88d8b" translate="yes" xml:space="preserve">
          <source>Now you can mount your engine in application's routes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cca2a620bb0efd6c8b31ea33601ec518093b64d" translate="yes" xml:space="preserve">
          <source>Now you can see even more output in the console from running the tests:</source>
          <target state="translated">이제 콘솔에서 테스트를 실행하면 더 많은 출력을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef124558e731720d7cd6ee04cfa0fa14595c87e3" translate="yes" xml:space="preserve">
          <source>Now you can simply do:</source>
          <target state="translated">이제 간단하게 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="97015d7f10515896d46f145fc9b204e09622e272" translate="yes" xml:space="preserve">
          <source>Now you can try running all the tests and they should pass.</source>
          <target state="translated">이제 모든 테스트를 실행할 수 있으며 통과해야합니다.</target>
        </trans-unit>
        <trans-unit id="a1f2c06b04c1d3ffade749660a4a8d51b3ca9356" translate="yes" xml:space="preserve">
          <source>Now you should know where you are in the running trace and be able to print the available variables. But let's continue and move on with the application execution.</source>
          <target state="translated">이제 실행중인 추적 위치를 알고 사용 가능한 변수를 인쇄 할 수 있어야합니다. 그러나 계속해서 응용 프로그램 실행으로 넘어 갑시다.</target>
        </trans-unit>
        <trans-unit id="87bb8627d78df2d32264c8cfee94fb35d59902db" translate="yes" xml:space="preserve">
          <source>Now you'll get a nice error message when saving an article without a title when you attempt to do just that on the new article form http://localhost:3000/articles/new:</source>
          <target state="translated">이제 새 기사 양식 http : // localhost : 3000 / articles / new에서 제목을 지정하지 않고 기사를 저장할 때 멋진 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6c963ec9ca58ea98b17b6c7555bcaae882d53c98" translate="yes" xml:space="preserve">
          <source>Now, &lt;code&gt;Engine&lt;/code&gt; will get only requests that were not handled by &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">이제 &lt;code&gt;Engine&lt;/code&gt; 은 &lt;code&gt;Application&lt;/code&gt; 에서 처리하지 않은 요청 만받습니다 .</target>
        </trans-unit>
        <trans-unit id="203cf7090ffd765e9f27dc2ab3d7d30952df1c61" translate="yes" xml:space="preserve">
          <source>Now, a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; would succeed, but a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; (which would ordinarily be routed to the &lt;code&gt;create&lt;/code&gt; action) will fail.</source>
          <target state="translated">이제, &lt;code&gt;GET&lt;/code&gt; 의 에 요청 &lt;code&gt;/photos&lt;/code&gt; 성공할 것이다, 그러나 &lt;code&gt;POST&lt;/code&gt; 의 에 요청 &lt;code&gt;/photos&lt;/code&gt; (통상적으로 라우팅 될 것입니다 &lt;code&gt;create&lt;/code&gt; 작업이) 실패합니다.</target>
        </trans-unit>
        <trans-unit id="af62ed7bdece7af2a862042c75463d54724457e7" translate="yes" xml:space="preserve">
          <source>Now, add another link in &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;, underneath the form, to go back to the &lt;code&gt;index&lt;/code&gt; action:</source>
          <target state="translated">이제 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 에 양식 아래 에 다른 링크를 추가 하여 &lt;code&gt;index&lt;/code&gt; 작업 으로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="8e12adc83e98da965b0202dae25d3e358044f67f" translate="yes" xml:space="preserve">
          <source>Now, create a new file &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; with the following content:</source>
          <target state="translated">이제 다음 내용으로 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 파일을 새로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="ab84c9773432db7232bd695fe13dcece6e69f43e" translate="yes" xml:space="preserve">
          <source>Now, if the current user is a special user, they'll get a special layout when viewing a product.</source>
          <target state="translated">현재 사용자가 특별 사용자 인 경우 제품을 볼 때 특별한 레이아웃이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d155cc0c54a8c1103fe54c9484e37a19028bfcab" translate="yes" xml:space="preserve">
          <source>Now, if you POST to &lt;code&gt;/posts/:id&lt;/code&gt;, it will route to the &lt;code&gt;create_comment&lt;/code&gt; action. A GET on the same URL will route to the &lt;code&gt;show&lt;/code&gt; action.</source>
          <target state="translated">이제 &lt;code&gt;/posts/:id&lt;/code&gt; 에 POST 하면 &lt;code&gt;create_comment&lt;/code&gt; 작업으로 라우팅됩니다 . 동일한 URL에서 GET은 &lt;code&gt;show&lt;/code&gt; 액션으로 라우팅됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd01ddc663c761677d7838ff6ebae0d36785cd0e" translate="yes" xml:space="preserve">
          <source>Now, if you create a Comment scaffold, you will see that the shoulda generators are being invoked, and at the end, they are just falling back to TestUnit generators:</source>
          <target state="translated">이제 주석 스캐 폴드를 생성하면 생성자가 호출되고 마지막에 TestUnit 생성기로 넘어가는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48e2d05fe59b341a812b4b192d936fbdab98a334" translate="yes" xml:space="preserve">
          <source>Now, if you noticed, we first wrote a test which fails for a desired functionality, then we wrote some code which adds the functionality and finally we ensured that our test passes. This approach to software development is referred to as &lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;&lt;em&gt;Test-Driven Development&lt;/em&gt; (TDD)&lt;/a&gt;.</source>
          <target state="translated">자, 우리는 먼저 원하는 기능에 실패한 테스트를 작성한 다음 기능을 추가하는 코드를 작성하여 테스트를 통과했습니다. 소프트웨어 개발에 대한 이러한 접근 방식을 &lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;TDD ( &lt;/a&gt;&lt;em&gt;Test-Driven Development&lt;/em&gt; )라고 합니다.</target>
        </trans-unit>
        <trans-unit id="27b8380c7a32dfa3423cdfea7f660ff2643ddae5" translate="yes" xml:space="preserve">
          <source>Now, let's update the &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; view to use this new partial, rewriting it completely:</source>
          <target state="translated">이제 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 보기를 업데이트 하여이 새로운 부분을 사용하여 완전히 다시 작성해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="217df5a8b404551ff72f541302f83740782a2f6c" translate="yes" xml:space="preserve">
          <source>Now, suppose we wanted to add a new book for an existing author. We'd need to do something like this:</source>
          <target state="translated">이제 기존 저자를 위해 새 책을 추가하려고한다고 가정합니다. 다음과 같이해야합니다.</target>
        </trans-unit>
        <trans-unit id="11c9105ae03fd512b3df4b1b95b94556311d85ad" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;LoginsController&lt;/code&gt;'s &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions will work as before without requiring the user to be logged in. The &lt;code&gt;:only&lt;/code&gt; option is used to skip this filter only for these actions, and there is also an &lt;code&gt;:except&lt;/code&gt; option which works the other way. These options can be used when adding filters too, so you can add a filter which only runs for selected actions in the first place.</source>
          <target state="translated">이제, &lt;code&gt;LoginsController&lt;/code&gt; 의 &lt;code&gt;new&lt;/code&gt; 와 &lt;code&gt;create&lt;/code&gt; 작업은 로그인하는 사용자가 필요없이 이전과 같이 작동합니다. &lt;code&gt;:only&lt;/code&gt; 옵션은 이러한 작업을 위해이 필터를 건너 뛸 사용하고, 또한이된다 &lt;code&gt;:except&lt;/code&gt; 다른 작업 옵션 방법. 이 옵션은 필터를 추가 할 때도 사용할 수 있으므로 선택한 작업에 대해서만 실행되는 필터를 처음에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="622fed2ef3f7a6ad2876c081d2afd526d0fbaa2b" translate="yes" xml:space="preserve">
          <source>Now, we can remove the duplicated logic from each model and instead include our new &lt;code&gt;Visible&lt;/code&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbcfc0b858782509a12208646a29cda7e06af98" translate="yes" xml:space="preserve">
          <source>Now, when &lt;code&gt;Topic#destroy&lt;/code&gt; is run only &lt;code&gt;destroy_author&lt;/code&gt; is called. When &lt;code&gt;Reply#destroy&lt;/code&gt; is run, both &lt;code&gt;destroy_author&lt;/code&gt; and &lt;code&gt;destroy_readers&lt;/code&gt; are called.</source>
          <target state="translated">이제 &lt;code&gt;Topic#destroy&lt;/code&gt; 가 실행될 때 &lt;code&gt;destroy_author&lt;/code&gt; 만 호출 됩니다. &lt;code&gt;Reply#destroy&lt;/code&gt; 가 실행될 때 &lt;code&gt;destroy_author&lt;/code&gt; 와 &lt;code&gt;destroy_readers&lt;/code&gt; 가 모두 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c9f281387742abe67e917f18111764c49c4a38a8" translate="yes" xml:space="preserve">
          <source>Now, when the helper generator is invoked and TestUnit is configured as the test framework, it will try to invoke both &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; and &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt;. Since none of those are defined, we can tell our generator to invoke &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; instead, which is defined since it's a Rails generator. To do that, we just need to add:</source>
          <target state="translated">이제 헬퍼 생성기가 호출되고 TestUnit이 테스트 프레임 워크로 구성되면 &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; 및 &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt; 모두 호출하려고합니다 . 이들 중 어느 것도 정의되지 않았으므로 생성기에게 대신 &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; 를 호출하도록 지시 할 수 있습니다. 대신 Rails 생성기이므로 정의되어 있습니다. 그렇게하려면 다음을 추가하면됩니다.</target>
        </trans-unit>
        <trans-unit id="738f4ee5f2fdec6e2acb7a14ba46229776b15fe5" translate="yes" xml:space="preserve">
          <source>Now, when this view is rendered, it will show an error message which tells you that the translations for the keys &lt;code&gt;:hello_world&lt;/code&gt; and &lt;code&gt;:hello_flash&lt;/code&gt; are missing.</source>
          <target state="translated">이제이 뷰가 렌더링되면 &lt;code&gt;:hello_world&lt;/code&gt; 및 &lt;code&gt;:hello_flash&lt;/code&gt; 키에 대한 번역 이 누락 되었음을 알리는 오류 메시지가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="d961b6eae818de7e713f0e8ff2517e62b85cc0f1" translate="yes" xml:space="preserve">
          <source>Now, when you add the &lt;code&gt;_destroy&lt;/code&gt; key to the attributes hash, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model:</source>
          <target state="translated">이제 &lt;code&gt;_destroy&lt;/code&gt; 키를 속성 해시에 추가하고 &lt;code&gt;true&lt;/code&gt; 값으로 평가 하면 관련 모델이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="0e48bab7662e8b7cbf063bf165fef96ea50592a7" translate="yes" xml:space="preserve">
          <source>Now, when you call the &lt;code&gt;books_path&lt;/code&gt; method you should get &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; (for the default locale). A URL like &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; should load the Dutch locale, then, and following calls to &lt;code&gt;books_path&lt;/code&gt; should return &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; (because the locale changed).</source>
          <target state="translated">이제 &lt;code&gt;books_path&lt;/code&gt; 메소드 를 호출하면 &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; (기본 로케일)가 표시됩니다. &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; 와 같은 URL 은 네덜란드어 로캘을로드 한 다음 &lt;code&gt;books_path&lt;/code&gt; 에 대한 다음 호출 은 &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; 를 반환해야 합니다 (로캘이 변경 되었기 때문).</target>
        </trans-unit>
        <trans-unit id="19855c7053a8ed3b95df3cc097e2804353c5dd70" translate="yes" xml:space="preserve">
          <source>Now, when you use a form element with the &lt;code&gt;_destroy&lt;/code&gt; parameter, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model (e.g. 1, '1', true, or 'true'):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce4fc5d00e68ba3c104ef525a4771ac4977bf97" translate="yes" xml:space="preserve">
          <source>Now, when you use a form element with the &lt;code&gt;_destroy&lt;/code&gt; parameter, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model (eg. 1, '1', true, or 'true'):</source>
          <target state="translated">이제 &lt;code&gt;_destroy&lt;/code&gt; 매개 변수 와 함께 양식 요소 를 &lt;code&gt;true&lt;/code&gt; 로 평가되는 값과 함께 사용 하면 관련 모델 (예 : 1, '1', true 또는 'true')이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="c809e2c5ebb44a808f82d543f4edd794de0e3536" translate="yes" xml:space="preserve">
          <source>Now, you can use the &lt;code&gt;my_engine&lt;/code&gt; helper inside your application:</source>
          <target state="translated">이제 애플리케이션 내 에서 &lt;code&gt;my_engine&lt;/code&gt; 도우미를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4766e0bf16611e8438a6d53eae97d9cadc5e5fec" translate="yes" xml:space="preserve">
          <source>Null Relation</source>
          <target state="translated">널 관계</target>
        </trans-unit>
        <trans-unit id="6bfcf0cddffdd3930b31edb810e7c1a87b793877" translate="yes" xml:space="preserve">
          <source>NullContentTypeHeader</source>
          <target state="translated">NullContentTypeHeader</target>
        </trans-unit>
        <trans-unit id="350e7d8f18b3ca80dc7b075c15a357bcc83872b7" translate="yes" xml:space="preserve">
          <source>Number of partials fetched from cache</source>
          <target state="translated">캐시에서 가져온 부분의 수</target>
        </trans-unit>
        <trans-unit id="cba15084808a7129a67b592d7bb6d70a61b0c406" translate="yes" xml:space="preserve">
          <source>Number of records that instantiated</source>
          <target state="translated">인스턴스화 된 레코드 수</target>
        </trans-unit>
        <trans-unit id="098c6454bdf4bbfd58663e390aac0c78846ac19f" translate="yes" xml:space="preserve">
          <source>Number of times this job has been executed (which increments on every retry, like after an exception).</source>
          <target state="translated">이 작업이 실행 된 횟수 (예외 후와 같이 재 시도마다 증가)</target>
        </trans-unit>
        <trans-unit id="5a4142ed71d8bb3054e10546418ff4a5622d023e" translate="yes" xml:space="preserve">
          <source>NumberHelper</source>
          <target state="translated">NumberHelper</target>
        </trans-unit>
        <trans-unit id="e8a3239000961222e1a51d13b52ce2170d11bf3c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_currency</source>
          <target state="translated">NumberHelper#number_to_currency</target>
        </trans-unit>
        <trans-unit id="555aef064435c32aa56c039a2f381ca70e713e6f" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_delimited</source>
          <target state="translated">NumberHelper#number_to_delimited</target>
        </trans-unit>
        <trans-unit id="2dd770bd60283e3854630a4d0d8df6af7bd610ac" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human</source>
          <target state="translated">NumberHelper#number_to_human</target>
        </trans-unit>
        <trans-unit id="1fea276bc8c34fa1c7fdb9af9f635fa51c1df32c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human_size</source>
          <target state="translated">NumberHelper#number_to_human_size</target>
        </trans-unit>
        <trans-unit id="163d0b5ad6620cb0466941a558c9a8e6395ad76a" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_percentage</source>
          <target state="translated">NumberHelper#number_to_percentage</target>
        </trans-unit>
        <trans-unit id="3032cb4f231eabf9b822856e17819cc9c788b1b4" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_phone</source>
          <target state="translated">NumberHelper#number_to_phone</target>
        </trans-unit>
        <trans-unit id="0f6e1785b3fe36f01f15a022f1a3f306675fc079" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_rounded</source>
          <target state="translated">NumberHelper#number_to_rounded</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="12952380314ef25dafac5a0d3d04de5fd7fb9c09" translate="yes" xml:space="preserve">
          <source>Numeric#byte</source>
          <target state="translated">Numeric#byte</target>
        </trans-unit>
        <trans-unit id="0ddc3e9e09e8db25e967665e786a23d0a466a10b" translate="yes" xml:space="preserve">
          <source>Numeric#day</source>
          <target state="translated">Numeric#day</target>
        </trans-unit>
        <trans-unit id="dd3c906dfbdea7498b422ab9b53b0b7717f9aafb" translate="yes" xml:space="preserve">
          <source>Numeric#days</source>
          <target state="translated">Numeric#days</target>
        </trans-unit>
        <trans-unit id="5cd1ac9a871955b8caf1eb6d97ffd59c4cb670fc" translate="yes" xml:space="preserve">
          <source>Numeric#hour</source>
          <target state="translated">Numeric#hour</target>
        </trans-unit>
        <trans-unit id="3b25fa4cb288ad452bbae28d5073d2083b0bf7d1" translate="yes" xml:space="preserve">
          <source>Numeric#week</source>
          <target state="translated">Numeric#week</target>
        </trans-unit>
        <trans-unit id="65454a128af7fcaafe8438725972801b014cf09f" translate="yes" xml:space="preserve">
          <source>NumericWithFormat</source>
          <target state="translated">NumericWithFormat</target>
        </trans-unit>
        <trans-unit id="ee86027f7732f7a471be8d5533de0f308291513a" translate="yes" xml:space="preserve">
          <source>NumericWithFormat#to_s</source>
          <target state="translated">NumericWithFormat#to_s</target>
        </trans-unit>
        <trans-unit id="af80f83e91cb2acf5105c5c35c83d3f1e00891aa" translate="yes" xml:space="preserve">
          <source>OK! Now let's add a timestamp to the view, so we can demo the &lt;strong&gt;date/time localization&lt;/strong&gt; feature as well. To localize the time format you pass the Time object to &lt;code&gt;I18n.l&lt;/code&gt; or (preferably) use Rails' &lt;code&gt;#l&lt;/code&gt; helper. You can pick a format by passing the &lt;code&gt;:format&lt;/code&gt; option - by default the &lt;code&gt;:default&lt;/code&gt; format is used.</source>
          <target state="translated">확인! 이제 뷰에 타임 스탬프를 추가하여 &lt;strong&gt;날짜 / 시간 현지화&lt;/strong&gt; 기능도 시연 할 수 있습니다. 시간 형식을 현지화하려면 Time 객체를 &lt;code&gt;I18n.l&lt;/code&gt; 에 전달 하거나 (바람직하게는) Rails의 &lt;code&gt;#l&lt;/code&gt; 도우미를 사용하십시오. &lt;code&gt;:format&lt;/code&gt; 옵션 을 전달하여 형식을 선택할 수 있습니다 &lt;code&gt;:default&lt;/code&gt; 으로 : default 형식이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="34925fb12c571f21781ddda3d56ad6f2dbfb5eef" translate="yes" xml:space="preserve">
          <source>OK! Now you've initialized I18n support for your Ruby on Rails application and told it which locale to use and how to preserve it between requests.</source>
          <target state="translated">확인! 이제 Ruby on Rails 애플리케이션에 대한 I18n 지원을 초기화하고 사용할 로케일과 요청간에이를 유지하는 방법을 알려주었습니다.</target>
        </trans-unit>
        <trans-unit id="d3f5ef0a7a41f4b5fa47c99b3d228787fec02b73" translate="yes" xml:space="preserve">
          <source>ONE_AS_ONE</source>
          <target state="translated">ONE_AS_ONE</target>
        </trans-unit>
        <trans-unit id="5b8e5d05306b818cd2c3ac786d2bf461455a0998" translate="yes" xml:space="preserve">
          <source>OPTION_AS_ERROR_MESSAGE</source>
          <target state="translated">OPTION_AS_ERROR_MESSAGE</target>
        </trans-unit>
        <trans-unit id="a4f0a12e44c14fb9d2ef8fa325826433a689af64" translate="yes" xml:space="preserve">
          <source>OR Conditions</source>
          <target state="translated">또는 조건</target>
        </trans-unit>
        <trans-unit id="6673abff0e25535a62fa142e46784d8906594513" translate="yes" xml:space="preserve">
          <source>ORDER_IGNORE_MESSAGE</source>
          <target state="translated">ORDER_IGNORE_MESSAGE</target>
        </trans-unit>
        <trans-unit id="c8210fd944bd4d72ef2903592cc6cc8d86ecac8c" translate="yes" xml:space="preserve">
          <source>ORIG_ARGV</source>
          <target state="translated">ORIG_ARGV</target>
        </trans-unit>
        <trans-unit id="ce95b74a7293928d321b45eeb0f7c306f65f50ed" translate="yes" xml:space="preserve">
          <source>Obfuscation</source>
          <target state="translated">Obfuscation</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="4ad73191edfacc818048e43fbc454750d4108003" translate="yes" xml:space="preserve">
          <source>Object ID of the connection object</source>
          <target state="translated">연결 객체의 객체 ID</target>
        </trans-unit>
        <trans-unit id="c42e56fb93a2d54b07af5e3e41ea98848a0a41a5" translate="yes" xml:space="preserve">
          <source>Object Relational Mapping</source>
          <target state="translated">객체 관계형 매핑</target>
        </trans-unit>
        <trans-unit id="782f438afdfb9026987c9473bad03c906cfd0f60" translate="yes" xml:space="preserve">
          <source>Object#in?</source>
          <target state="translated">Object#in?</target>
        </trans-unit>
        <trans-unit id="4577f031b57b33b7448915bf92f1c64db21a412a" translate="yes" xml:space="preserve">
          <source>Object#try</source>
          <target state="translated">Object#try</target>
        </trans-unit>
        <trans-unit id="c7179c7e846b1bd1edbe3601ad7107bcadbe4c20" translate="yes" xml:space="preserve">
          <source>Object#try!</source>
          <target state="translated">Object#try!</target>
        </trans-unit>
        <trans-unit id="8dde3eba34db3a98fea0cf0d796447bbd2b08546" translate="yes" xml:space="preserve">
          <source>Objects will &lt;em&gt;always&lt;/em&gt; be removed from the database, ignoring the &lt;code&gt;:dependent&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;:dependent&lt;/code&gt; 옵션을 무시하고 개체는 &lt;em&gt;항상&lt;/em&gt; 데이터베이스에서 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="77ca99176e0a69f92635c323c9ee512f8f14ada0" translate="yes" xml:space="preserve">
          <source>Objects will be deleted if they're associated with &lt;code&gt;dependent: :destroy&lt;/code&gt;, just like &lt;code&gt;dependent: :delete_all&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dependent: :delete_all&lt;/code&gt; 과 같이 dependent : : &lt;code&gt;dependent: :destroy&lt;/code&gt; 와 연결된 객체는 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="01833b16e8925d797ee8b329aeb71e620190951f" translate="yes" xml:space="preserve">
          <source>Objects you pass in are expected to return a compliant object from a call to &lt;code&gt;to_model&lt;/code&gt;. It is perfectly fine for &lt;code&gt;to_model&lt;/code&gt; to return &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">전달하는 객체는 &lt;code&gt;to_model&lt;/code&gt; 호출에서 호환 객체를 반환해야합니다 . &lt;code&gt;to_model&lt;/code&gt; 이 &lt;code&gt;self&lt;/code&gt; 를 반환하는 것은 완벽합니다 .</target>
        </trans-unit>
        <trans-unit id="46252b9dc1831ea83a33362e66afebb86d2829cc" translate="yes" xml:space="preserve">
          <source>Observe in the previous example that consecutive separators result in empty arrays.</source>
          <target state="translated">앞의 예제에서 연속적인 구분 기호로 인해 빈 배열이 생깁니다.</target>
        </trans-unit>
        <trans-unit id="693db33a45a855769a9f6c58107b187af35b357a" translate="yes" xml:space="preserve">
          <source>Observers give you access to the email message after it has been sent. An observer class must implement the &lt;code&gt;:delivered_email(message)&lt;/code&gt; method, which will be called after the email is sent.</source>
          <target state="translated">관찰자는 이메일 메시지를 보낸 후 액세스 할 수 있습니다. 옵저버 클래스는 &lt;code&gt;:delivered_email(message)&lt;/code&gt; 메소드를 구현해야 하며 이메일이 전송 된 후 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b7d87645b295e2af8697514a4ed7e203d9756fec" translate="yes" xml:space="preserve">
          <source>Observing Emails</source>
          <target state="translated">이메일 관찰</target>
        </trans-unit>
        <trans-unit id="6a768711003c1ef2dc5501f4971819a6899578df" translate="yes" xml:space="preserve">
          <source>Observing and Intercepting Mails</source>
          <target state="translated">메일 관찰 및 차단</target>
        </trans-unit>
        <trans-unit id="0aca28a7f797bbddbbd6a37fd849e0be2ba581ec" translate="yes" xml:space="preserve">
          <source>Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking clause to append the end of the SELECT statement or pass true for &amp;ldquo;FOR UPDATE&amp;rdquo; (the default, an exclusive row lock). Returns the locked record.</source>
          <target state="translated">이 레코드의 행 잠금을 확보하십시오. 요청 된 잠금을 얻기 위해 레코드를 다시로드합니다. SELECT 문의 끝을 추가하기 위해 SQL 잠금 절을 전달하거나&amp;ldquo;FOR UPDATE&amp;rdquo;(기본값, 독점 행 잠금)에 대해 true를 전달하십시오. 잠긴 레코드를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b4ae6d585a88c7d20f2576d348e9bfc2db75cee" translate="yes" xml:space="preserve">
          <source>Obtaining (checking out) a connection</source>
          <target state="translated">연결 확보 (체크 아웃)</target>
        </trans-unit>
        <trans-unit id="e58dee129363861edbe872680dfc6fe4570a8245" translate="yes" xml:space="preserve">
          <source>Obviously, you'll want to be a bit more sophisticated than that, but it's a start.</source>
          <target state="translated">분명히, 당신은 그것보다 조금 더 정교하고 싶겠지 만 시작입니다.</target>
        </trans-unit>
        <trans-unit id="0d21c185b8ddd71aeb92646342d282b983be3fe4" translate="yes" xml:space="preserve">
          <source>Occasionally you may need to explicitly eager_load by using &lt;code&gt;Rails
.application.eager_load!&lt;/code&gt; in the setup of your tests -- this might occur if your &lt;a href=&quot;https://stackoverflow.com/questions/25796409/in-rails-how-can-i-eager-load-all-code-before-a-specific-rspec-test&quot;&gt;tests involve multithreading&lt;/a&gt;.</source>
          <target state="translated">때때로 &lt;code&gt;Rails .application.eager_load!&lt;/code&gt; 를 사용하여 명시 적으로 eager_load를 사용해야 할 수도 있습니다 ! 테스트 설정에서 &amp;ndash; &lt;a href=&quot;https://stackoverflow.com/questions/25796409/in-rails-how-can-i-eager-load-all-code-before-a-specific-rspec-test&quot;&gt;테스트에 멀티 스레딩이 포함 된&lt;/a&gt; 경우 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="175826294ba674ea84cf26b6bb6839a682114a0a" translate="yes" xml:space="preserve">
          <source>Occasionally you need to display just a single date component such as a year or a month. Rails provides a series of helpers for this, one for each component &lt;code&gt;select_year&lt;/code&gt;, &lt;code&gt;select_month&lt;/code&gt;, &lt;code&gt;select_day&lt;/code&gt;, &lt;code&gt;select_hour&lt;/code&gt;, &lt;code&gt;select_minute&lt;/code&gt;, &lt;code&gt;select_second&lt;/code&gt;. These helpers are fairly straightforward. By default they will generate an input field named after the time component (for example, &quot;year&quot; for &lt;code&gt;select_year&lt;/code&gt;, &quot;month&quot; for &lt;code&gt;select_month&lt;/code&gt; etc.) although this can be overridden with the &lt;code&gt;:field_name&lt;/code&gt; option. The &lt;code&gt;:prefix&lt;/code&gt; option works in the same way that it does for &lt;code&gt;select_date&lt;/code&gt; and &lt;code&gt;select_time&lt;/code&gt; and has the same default value.</source>
          <target state="translated">경우에 따라 연도 또는 월과 같은 단일 날짜 구성 요소 만 표시해야합니다. Rails는이를 위해 각각의 컴포넌트 &lt;code&gt;select_year&lt;/code&gt; , &lt;code&gt;select_month&lt;/code&gt; , &lt;code&gt;select_day&lt;/code&gt; , &lt;code&gt;select_hour&lt;/code&gt; , &lt;code&gt;select_minute&lt;/code&gt; , &lt;code&gt;select_second&lt;/code&gt; 에 대해 일련의 헬퍼를 제공합니다 . 이 도우미는 매우 간단합니다. 기본적으로 시간 구성 요소의 이름을 딴 입력 필드 (예 : &lt;code&gt;select_year&lt;/code&gt; 의 &quot;year&quot;, select_month 의 &quot;month&quot; 등) 를 &lt;code&gt;select_month&lt;/code&gt; .이 필드는 &lt;code&gt;:field_name&lt;/code&gt; 옵션 으로 대체 할 수 있습니다 . &lt;code&gt;:prefix&lt;/code&gt; 옵션은 같은 방식으로 작동 그것을 위해하는 것을 &lt;code&gt;select_date&lt;/code&gt; 및 &lt;code&gt;select_time&lt;/code&gt; 이며 동일한 기본값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3cbff9964263e47edad93b998a04c0380c6b4f06" translate="yes" xml:space="preserve">
          <source>Occasionally you will make a mistake when writing a migration. If you have already run the migration, then you cannot just edit the migration and run the migration again: Rails thinks it has already run the migration and so will do nothing when you run &lt;code&gt;bin/rails db:migrate&lt;/code&gt;. You must rollback the migration (for example with &lt;code&gt;bin/rails db:rollback&lt;/code&gt;), edit your migration, and then run &lt;code&gt;bin/rails db:migrate&lt;/code&gt; to run the corrected version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3bbd9b2013f62289bec19ff77a0ab1e6d379ac" translate="yes" xml:space="preserve">
          <source>Occasionally you will make a mistake when writing a migration. If you have already run the migration, then you cannot just edit the migration and run the migration again: Rails thinks it has already run the migration and so will do nothing when you run &lt;code&gt;rails db:migrate&lt;/code&gt;. You must rollback the migration (for example with &lt;code&gt;rails db:rollback&lt;/code&gt;), edit your migration, and then run &lt;code&gt;rails db:migrate&lt;/code&gt; to run the corrected version.</source>
          <target state="translated">때때로 마이그레이션을 작성할 때 실수를 할 수 있습니다. 마이그레이션을 이미 실행 한 경우 마이그레이션을 편집하고 마이그레이션을 다시 실행할 수 없습니다. Rails는 마이그레이션을 이미 실행했다고 생각하므로 &lt;code&gt;rails db:migrate&lt;/code&gt; 를 실행할 때 아무 것도 수행하지 않습니다 . 마이그레이션을 롤백 (예 &lt;code&gt;rails db:rollback&lt;/code&gt; )하고 마이그레이션을 편집 한 다음 &lt;code&gt;rails db:migrate&lt;/code&gt; 를 실행하여 올바른 버전을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="10e792bd00a99b3e1f974aa939eaac10eb676be3" translate="yes" xml:space="preserve">
          <source>Of course, calculating timestamps is no fun, so Active Record provides a generator to handle making it for you:</source>
          <target state="translated">물론 타임 스탬프를 계산하는 것은 재미 있지 않으므로 Active Record는 다음을 처리하는 생성기를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cc4010c4ad109e781e24b28c96b213ace81b2b52" translate="yes" xml:space="preserve">
          <source>Of course, if the application eager loads on boot, that is already accomplished. When it does not, it is in practice enough to instantiate the existing types in the database, which in development or test modes is usually fine. One way to do that is to throw this module into the &lt;code&gt;lib&lt;/code&gt; directory:</source>
          <target state="translated">물론 부팅시 응용 프로그램 열망이로드되면 이미 완료된 것입니다. 그렇지 않은 경우 실제로는 데이터베이스에서 기존 유형을 인스턴스화하기에 충분합니다. 개발 또는 테스트 모드에서는 일반적으로 적합합니다. 이를 수행하는 한 가지 방법은이 모듈을 &lt;code&gt;lib&lt;/code&gt; 디렉토리에 넣는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="8e4b613f1200debf00104a7d9324fd9bb7922e4b" translate="yes" xml:space="preserve">
          <source>Of course, the Rails boot process also glues together all registered components. For example, the Rails boot process is what uses your &lt;code&gt;config/database.yml&lt;/code&gt; file when configuring Active Record.</source>
          <target state="translated">물론 Rails 부팅 프로세스는 등록 된 모든 구성 요소를 서로 연결합니다. 예를 들어 Rails 부팅 프로세스는 Active Record를 구성 할 때 &lt;code&gt;config/database.yml&lt;/code&gt; 파일을 사용하는 프로세스입니다 .</target>
        </trans-unit>
        <trans-unit id="78f92e1f3e6228f262ba831d9d821b07d9bd0ab6" translate="yes" xml:space="preserve">
          <source>Of course, the most common way of specifying a layout is still just as a plain template name:</source>
          <target state="translated">물론 레이아웃을 지정하는 가장 일반적인 방법은 여전히 ​​일반 템플릿 이름과 같습니다.</target>
        </trans-unit>
        <trans-unit id="518c11a35f81fb097eea3275505af4254f7da8d6" translate="yes" xml:space="preserve">
          <source>Of course, this example is anything but elaborate and doesn't improve on the default exception handling at all, but once you can catch all those exceptions you're free to do whatever you want with them. For example, you could create custom exception classes that will be thrown when a user doesn't have access to a certain section of your application:</source>
          <target state="translated">물론,이 예제는 정교하고 기본 예외 처리를 전혀 개선하지는 않지만 일단 모든 예외를 포착 할 수 있으면 원하는대로 무엇이든 할 수 있습니다. 예를 들어, 사용자가 애플리케이션의 특정 섹션에 액세스 할 수 없을 때 발생하는 사용자 정의 예외 클래스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a33df8426a8a4b2ff3fed3a9cec145eb8ee044bb" translate="yes" xml:space="preserve">
          <source>Of course, using &lt;code&gt;require&lt;/code&gt; in autoloaded files to load ordinary 3rd party libraries is fine, and Rails is able to distinguish their constants, they are not marked as autoloaded.</source>
          <target state="translated">물론 일반 타사 라이브러리를로드하기 위해 자동로드 된 파일에서 &lt;code&gt;require&lt;/code&gt; 를 사용 하는 것이 좋으며 Rails는 상수를 구별 할 수 있으며 자동로드 된 것으로 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ccee0e956089abbe7c4e00b4b79e0eefe175e9a6" translate="yes" xml:space="preserve">
          <source>Of course, you can also query them directly if the scopes don't fit your needs:</source>
          <target state="translated">물론 범위가 요구 사항에 맞지 않으면 직접 쿼리 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="23e9f48eed74793bb1697af713aaddf96ce9e867" translate="yes" xml:space="preserve">
          <source>Of course, you can use the more advanced constraints available in non-resourceful routes in this context.</source>
          <target state="translated">물론이 컨텍스트에서 리소스가없는 경로에서 사용 가능한 고급 제약 조건을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38b952fd703726662a492bf2933dece70330fa1e" translate="yes" xml:space="preserve">
          <source>Of course, you need to take special care of the root URL (usually &quot;homepage&quot; or &quot;dashboard&quot;) of your application. A URL like &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; will not work automatically, because the &lt;code&gt;root to: &quot;books#index&quot;&lt;/code&gt; declaration in your &lt;code&gt;routes.rb&lt;/code&gt; doesn't take locale into account. (And rightly so: there's only one &quot;root&quot; URL.)</source>
          <target state="translated">물론 응용 프로그램의 루트 URL (일반적으로 &quot;홈페이지&quot;또는 &quot;대시 보드&quot;)에 특별한주의를 기울여야합니다. 같은 URL &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; 때문에, 자동으로 작동하지 않습니다 &lt;code&gt;root to: &quot;books#index&quot;&lt;/code&gt; 당신의 선언 &lt;code&gt;routes.rb&lt;/code&gt; 이 계정에 로케일을지지 않습니다. (정확하게는 &quot;루트&quot;URL이 하나뿐입니다.)</target>
        </trans-unit>
        <trans-unit id="522e1ee3f7c0d77499dec3f1d397d0900efa532e" translate="yes" xml:space="preserve">
          <source>Of course, you need to take special care of the root URL (usually &quot;homepage&quot; or &quot;dashboard&quot;) of your application. A URL like &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; will not work automatically, because the &lt;code&gt;root to: &quot;dashboard#index&quot;&lt;/code&gt; declaration in your &lt;code&gt;routes.rb&lt;/code&gt; doesn't take locale into account. (And rightly so: there's only one &quot;root&quot; URL.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2dba64e87728235370f20557710affb44af9dc" translate="yes" xml:space="preserve">
          <source>Official Rack Website</source>
          <target state="translated">공식 랙 웹 사이트</target>
        </trans-unit>
        <trans-unit id="dd1d49fae73e799baf2444a358616e40cdcf62fa" translate="yes" xml:space="preserve">
          <source>Official Ruby Programming Language website</source>
          <target state="translated">공식 루비 프로그래밍 언어 웹 사이트</target>
        </trans-unit>
        <trans-unit id="95620979d30f60c5618328e75a5e42f4e93f415d" translate="yes" xml:space="preserve">
          <source>Often this can be simplified by passing just the name of the model object to &lt;code&gt;fields_for&lt;/code&gt; -</source>
          <target state="translated">종종이에 모델 객체의 이름 만 전달하여 단순화 할 수 &lt;code&gt;fields_for&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="dfc8dea3503f3da65ac428e919d1bcc1e3dbca07" translate="yes" xml:space="preserve">
          <source>Often, additional reloading actions need to be performed either just before or just after the Class Unload, so the Reloader also provides &lt;code&gt;before_class_unload&lt;/code&gt; and &lt;code&gt;after_class_unload&lt;/code&gt; callbacks.</source>
          <target state="translated">종종 클래스 재로드 직전 또는 직후에 추가 재로드 작업을 수행해야하므로 리 로더는 &lt;code&gt;before_class_unload&lt;/code&gt; 및 &lt;code&gt;after_class_unload&lt;/code&gt; 콜백 도 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ce7d9d2ca9708d829304177ad2e9e5cc2ad978ed" translate="yes" xml:space="preserve">
          <source>Often, we want to generate a set of choices in a form from a collection of objects. For example, when we want the user to choose from cities in our database, and we have a &lt;code&gt;City&lt;/code&gt; model like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84fafe478eddda3091745c0f9518cebab98a91f" translate="yes" xml:space="preserve">
          <source>Old Migrations</source>
          <target state="translated">이전 마이그레이션</target>
        </trans-unit>
        <trans-unit id="24bb13ed52b652c3b72cf88a37fbba09f3ebf2a2" translate="yes" xml:space="preserve">
          <source>Omitted params are not checked for a match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241c63c8293a4785c5d54a58bad0cc5b1e258e85" translate="yes" xml:space="preserve">
          <source>On Active Record models with no &lt;code&gt;:include&lt;/code&gt; or &lt;code&gt;:exclude&lt;/code&gt; option set, it will only wrap the parameters returned by the class method &lt;code&gt;attribute_names&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:include&lt;/code&gt; 또는 &lt;code&gt;:exclude&lt;/code&gt; 옵션이 설정 되지 않은 Active Record 모델에서는 &lt;code&gt;attribute_names&lt;/code&gt; 클래스 메소드가 리턴 한 매개 변수 만 랩핑 합니다 .</target>
        </trans-unit>
        <trans-unit id="598560785c247f274acc5c4070fa99bda2929e8b" translate="yes" xml:space="preserve">
          <source>On Linux and macOS no additional gems are needed, but some are required &lt;a href=&quot;https://github.com/guard/listen#on-bsd&quot;&gt;for *BSD&lt;/a&gt; and &lt;a href=&quot;https://github.com/guard/listen#on-windows&quot;&gt;for Windows&lt;/a&gt;.</source>
          <target state="translated">Linux 및 macOS에서는 추가 gem이 필요하지 않지만 일부는 &lt;a href=&quot;https://github.com/guard/listen#on-bsd&quot;&gt;* BSD&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/guard/listen#on-windows&quot;&gt;Windows에&lt;/a&gt; 필요 합니다 .</target>
        </trans-unit>
        <trans-unit id="cb7e9843bd82c1dece41d7312bfec068efcb57d0" translate="yes" xml:space="preserve">
          <source>On Load hooks are the API that allow you to hook into this initialization process without violating the load contract with Rails. This will also mitigate boot performance degradation and avoid conflicts.</source>
          <target state="translated">온로드 후크는 Rails와의로드 계약을 위반하지 않고이 초기화 프로세스에 연결할 수있는 API입니다. 또한 부팅 성능 저하를 완화하고 충돌을 피합니다.</target>
        </trans-unit>
        <trans-unit id="872c870642d0d9df40e9bfdbae27a194c26c0aa3" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt; will return the first record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">사용하여 정렬 된 컬렉션 &lt;code&gt;order&lt;/code&gt; , &lt;code&gt;first&lt;/code&gt; 로 지정된 속성에 의해 정렬 된 첫 번째 레코드 반환합니다 &lt;code&gt;order&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0750b86b4eede7e1e2ca1d1769894bc80255bcf4" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt; will return the last record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">사용하여 정렬 된 컬렉션 &lt;code&gt;order&lt;/code&gt; , &lt;code&gt;last&lt;/code&gt; 의 지정된 속성에 의해 주문의 마지막 레코드 반환 &lt;code&gt;order&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a2467f7374b9793dc3ba2d4e7642f2c8e5375ca" translate="yes" xml:space="preserve">
          <source>On a development machine you can then have your tests running with whatever is fastest (ideally &lt;code&gt;config.eager_load = false&lt;/code&gt;).</source>
          <target state="translated">그런 다음 개발 시스템에서 가장 빠른 속도로 테스트를 실행할 수 있습니다 (이상적으로 &lt;code&gt;config.eager_load = false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a44ed84ddb9890ee1584a9f13e6252cda115659d" translate="yes" xml:space="preserve">
          <source>On databases that support transactions with statements that change the schema, migrations are wrapped in a transaction. If the database does not support this then when a migration fails the parts of it that succeeded will not be rolled back. You will have to rollback the changes that were made by hand.</source>
          <target state="translated">스키마를 변경하는 명령문으로 트랜잭션을 지원하는 데이터베이스에서 마이그레이션은 트랜잭션으로 랩핑됩니다. 데이터베이스가이를 지원하지 않으면 마이그레이션이 실패 할 때 성공한 일부가 롤백되지 않습니다. 직접 변경 한 사항을 롤백해야합니다.</target>
        </trans-unit>
        <trans-unit id="c47764139884e82b7760d1abdd50920217d5e2f8" translate="yes" xml:space="preserve">
          <source>On initialization, the &lt;a href=&quot;activemodel&quot;&gt;&lt;code&gt;ActiveModel&lt;/code&gt;&lt;/a&gt; accepts the instance name that will receive the calls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4699ab936180f05f03c55b16dc89707b9176ceab" translate="yes" xml:space="preserve">
          <source>On initialization, the &lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt; accepts the instance name that will receive the calls:</source>
          <target state="translated">초기화시 &lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt; 은 호출을 수신 할 인스턴스 이름을 승인합니다.</target>
        </trans-unit>
        <trans-unit id="3677477a5da402fcf2a3027549647c384b11c412" translate="yes" xml:space="preserve">
          <source>On pages generated by &lt;code&gt;NewsController&lt;/code&gt;, you want to hide the top menu and add a right menu:</source>
          <target state="translated">&lt;code&gt;NewsController&lt;/code&gt; 에 의해 생성 된 페이지 에서 최상위 메뉴를 숨기고 올바른 메뉴를 추가하려고합니다.</target>
        </trans-unit>
        <trans-unit id="e3978129c990bfbab0ce7685859285114469c81e" translate="yes" xml:space="preserve">
          <source>On reload, &lt;code&gt;MockedGateway&lt;/code&gt; is reloaded, but &lt;code&gt;$PAYMENT_GATEWAY&lt;/code&gt; is not updated because initializers only run on boot. Therefore, it won't reflect the changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de926fabb5507cf2933e374222b53742ae1be3df" translate="yes" xml:space="preserve">
          <source>On shared hosts, Apache sometimes doesn't pass authentication headers to FCGI instances. If your environment matches this description and you cannot authenticate, try this rule in your Apache setup:</source>
          <target state="translated">공유 호스트에서 Apache는 때때로 인증 헤더를 FCGI 인스턴스로 전달하지 않습니다. 환경이이 설명과 일치하고 인증 할 수없는 경우 Apache 설정에서이 규칙을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="140918e50b4e7ad423def44526255934da360a32" translate="yes" xml:space="preserve">
          <source>On the contrary, if &lt;code&gt;ApplicationController&lt;/code&gt; is unknown, the constant is considered missing and an autoload is going to be attempted by Rails.</source>
          <target state="translated">반대로 &lt;code&gt;ApplicationController&lt;/code&gt; 를 알 수없는 경우 상수가 누락 된 것으로 간주되어 Rails에서 자동로드를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="c30fcff3ad290c7e2077c5cfff2182462066e036" translate="yes" xml:space="preserve">
          <source>On the first request the assets are compiled and cached as outlined in &lt;a href=&quot;#assets-cache-store&quot;&gt;Assets Cache Store&lt;/a&gt;, and the manifest names used in the helpers are altered to include the SHA256 hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe29c24a5a157c6c342e90762e65fd621a7bd0ef" translate="yes" xml:space="preserve">
          <source>On the first request the assets are compiled and cached as outlined in development above, and the manifest names used in the helpers are altered to include the SHA256 hash.</source>
          <target state="translated">첫 번째 요청에서 자산은 위의 개발에서 설명한대로 컴파일 및 캐시되고 도우미에 사용 된 매니페스트 이름이 SHA256 해시를 포함하도록 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="2678d1eb020d93b21282ea2cf8ee0358c77e86bb" translate="yes" xml:space="preserve">
          <source>On the last line of the block is a call to &lt;code&gt;t.timestamps&lt;/code&gt;. This method defines two additional columns named &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;. As we will see, Rails will manage these for us, setting the values when we create or update a model object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc09fb3938a1c14c6c6718858f7b5cf8ec6c494" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-advance&quot;&gt;&lt;code&gt;advance&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-change&quot;&gt;&lt;code&gt;change&lt;/code&gt;&lt;/a&gt; are also defined and support more options, they are documented below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7885ae34fbf360b8d8a78a1dba62e8f9926afe" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;advance&lt;/code&gt; and &lt;code&gt;change&lt;/code&gt; are also defined and support more options, they are documented below.</source>
          <target state="translated">반면, &lt;code&gt;advance&lt;/code&gt; 및 &lt;code&gt;change&lt;/code&gt; 도 정의되어 있으며 더 많은 옵션을 지원하며 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbb58821191368609ffb6e4a4ecef873588437b9" translate="yes" xml:space="preserve">
          <source>On the other hand, some calls need to be changed to make caching work properly. For instance, if you're passing a custom collection, you'll need to change:</source>
          <target state="translated">반면 캐싱이 제대로 작동하려면 일부 통화를 변경해야합니다. 예를 들어, 사용자 지정 컬렉션을 전달하는 경우 다음을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="93f46accb2f7cefa982f2385fd4474294bc9c94e" translate="yes" xml:space="preserve">
          <source>On the other hand, when multiple conditions define whether or not a validation should happen, an &lt;code&gt;Array&lt;/code&gt; can be used. Moreover, you can apply both &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; to the same validation.</source>
          <target state="translated">한편, 여러 조건이 유효성 검사를 수행할지 여부를 정의 할 때 &lt;code&gt;Array&lt;/code&gt; 사용할 수 있습니다. 또한 동일한 유효성 검사에 &lt;code&gt;:if&lt;/code&gt; 및 &lt;code&gt;:unless&lt;/code&gt; 를 모두 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c276557e9fbc03eb8cd74022dd70a23fd6917d1" translate="yes" xml:space="preserve">
          <source>On top of the collections, you have the complete URL that a given action redirected to available in &lt;code&gt;redirect_to_url&lt;/code&gt;.</source>
          <target state="translated">컬렉션 위에는 지정된 작업이 redirect_to_url에서 사용 가능한 것으로 &lt;code&gt;redirect_to_url&lt;/code&gt; 전체 URL이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd06efef0d17c2ad10c85691f22c4e0b376101b5" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;config/boot.rb&lt;/code&gt; has finished, the next file that is required is &lt;code&gt;rails/commands&lt;/code&gt;, which helps in expanding aliases. In the current case, the &lt;code&gt;ARGV&lt;/code&gt; array simply contains &lt;code&gt;server&lt;/code&gt; which will be passed over:</source>
          <target state="translated">&lt;code&gt;config/boot.rb&lt;/code&gt; 가 완료 되면 필요한 다음 파일은 &lt;code&gt;rails/commands&lt;/code&gt; 이며, 이는 별명 확장에 도움이됩니다. 현재의 경우, &lt;code&gt;ARGV&lt;/code&gt; 배열은 단순히 전달 될 &lt;code&gt;server&lt;/code&gt; 를 포함 합니다 :</target>
        </trans-unit>
        <trans-unit id="b7c485a6e3178c1fb597f4c90ba8fa66c72ba125" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;&lt;code&gt;composed_of&lt;/code&gt;&lt;/a&gt; relationship is specified for a model, records can be loaded from the database by specifying an instance of the value object in the conditions hash. The following example finds all customers with &lt;code&gt;address_street&lt;/code&gt; equal to &amp;ldquo;May Street&amp;rdquo; and &lt;code&gt;address_city&lt;/code&gt; equal to &amp;ldquo;Chicago&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32abcc0a8a37ed0baf8f7b2bb77797ece6faa56f" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;composed_of&lt;/a&gt; relationship is specified for a model, records can be loaded from the database by specifying an instance of the value object in the conditions hash. The following example finds all customers with &lt;code&gt;address_street&lt;/code&gt; equal to &amp;ldquo;May Street&amp;rdquo; and &lt;code&gt;address_city&lt;/code&gt; equal to &amp;ldquo;Chicago&amp;rdquo;:</source>
          <target state="translated">모델에 &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;configured_of&lt;/a&gt; 관계가 지정 되면 조건 해시에서 값 오브젝트의 인스턴스를 지정하여 데이터베이스에서 레코드를로드 할 수 있습니다. 다음 예는 &lt;code&gt;address_street&lt;/code&gt; 가 &quot;May Street&quot;이고 &lt;code&gt;address_city&lt;/code&gt; 가 &quot;Chicago&quot;인 모든 고객을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="eb700a2f08bb886db26d24fcc7aeb84fcb61bf3e" translate="yes" xml:space="preserve">
          <source>Once a file has been uploaded, there are a multitude of potential tasks, ranging from where to store the files (on Disk, Amazon S3, etc), associating them with models, resizing image files, and generating thumbnails, etc. &lt;a href=&quot;active_storage_overview&quot;&gt;Active Storage&lt;/a&gt; is designed to assist with these tasks.</source>
          <target state="translated">파일이 업로드되면 파일을 저장할 위치 (디스크, Amazon S3 등), 모델과 연결, 이미지 파일 크기 조정 및 썸네일 생성 등 다양한 잠재적 작업이 있습니다. &lt;a href=&quot;active_storage_overview&quot;&gt;Active Storage&lt;/a&gt; 는 이러한 작업을 지원하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="9ae845b5ac74396339357b98d0fbe2f8795db5fa" translate="yes" xml:space="preserve">
          <source>Once a mailer action and template are defined, you can deliver your message or defer its creation and delivery for later:</source>
          <target state="translated">메일러 조치 및 템플리트가 정의되면 메시지를 전달하거나 나중에 작성 및 전달을 연기 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b684bfa426d4701425f18ff80e07c01638bd0c35" translate="yes" xml:space="preserve">
          <source>Once an Active Record object has been retrieved, its attributes can be modified and it can be saved to the database.</source>
          <target state="translated">활성 레코드 오브젝트가 검색되면 해당 속성을 수정하여 데이터베이스에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f0fb844d06a05cbbf389493b98ebd0a77466fc8" translate="yes" xml:space="preserve">
          <source>Once our chunk of behavior starts pushing the scroll-to-understand-it boundary, we give in and move it to a separate file. At this size, the increased overhead can be a reasonable tradeoff even if it reduces our at-a-glance perception of how things work.</source>
          <target state="translated">우리의 행동 덩어리가 스크롤하여 이해하기 쉬운 경계를 밀기 시작하면, 우리는 그것을주고 별도의 파일로 옮깁니다. 이 크기에서 오버 헤드가 증가하면 상황이 어떻게 작동하는지 한눈에 파악하지 않아도 합리적인 트레이드 오프가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d6f741183f1515d1f5d59eb9b0930fde6a4d1c6" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;InboundEmail&lt;/code&gt; has reached the status of being either &lt;code&gt;delivered&lt;/code&gt;, &lt;code&gt;failed&lt;/code&gt;, or &lt;code&gt;bounced&lt;/code&gt;, it'll count as having been &lt;code&gt;#processed?&lt;/code&gt;. Once processed, the &lt;code&gt;InboundEmail&lt;/code&gt; will be scheduled for automatic incineration at a later point.</source>
          <target state="translated">한 번 &lt;code&gt;InboundEmail&lt;/code&gt; 가 하나되는 상태에 도달 한 &lt;code&gt;delivered&lt;/code&gt; , &lt;code&gt;failed&lt;/code&gt; 또는 &lt;code&gt;bounced&lt;/code&gt; , 그것은 된 것으로 간주합니다 &lt;code&gt;#processed?&lt;/code&gt; . 처리가 완료되면 &lt;code&gt;InboundEmail&lt;/code&gt; 은 나중에 자동 소각 일정 이 잡 힙니다 .</target>
        </trans-unit>
        <trans-unit id="3aaa0edd16747144273d0ecd37353ec152bf6c37" translate="yes" xml:space="preserve">
          <source>Once users with SHA1 digested signed cookies should no longer have a chance to have their cookies rewritten, remove the rotation.</source>
          <target state="translated">SHA1 다이제스트 서명 된 쿠키를 사용하는 사용자가 더 이상 쿠키를 다시 작성할 기회가 없으면 로테이션을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="281c76c1b19423718ff2464b5623c5a6fb716258" translate="yes" xml:space="preserve">
          <source>Once we have made the new comment, we send the user back to the original article using the &lt;code&gt;article_path(@article)&lt;/code&gt; helper. As we have already seen, this calls the &lt;code&gt;show&lt;/code&gt; action of the &lt;code&gt;ArticlesController&lt;/code&gt; which in turn renders the &lt;code&gt;show.html.erb&lt;/code&gt; template. This is where we want the comment to show, so let's add that to the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;.</source>
          <target state="translated">새로운 의견을 제시하면 &lt;code&gt;article_path(@article)&lt;/code&gt; 도우미를 사용하여 사용자를 원래 기사로 다시 보냅니다 . 이미 살펴본 것처럼 &lt;code&gt;ArticlesController&lt;/code&gt; 의 &lt;code&gt;show&lt;/code&gt; 액션을 호출 하여 &lt;code&gt;show.html.erb&lt;/code&gt; 템플릿 을 렌더링합니다 . 주석을 표시 할 위치이므로 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 에 주석을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb223775171386c6c0a22f5de44dc3f9db8c2839" translate="yes" xml:space="preserve">
          <source>Once you have configured your server and your CDN when you serve a webpage that has an asset:</source>
          <target state="translated">자산이있는 웹 페이지를 제공 할 때 서버와 CDN을 구성한 후 :</target>
        </trans-unit>
        <trans-unit id="e3b19612cb485d184e45f8395a5657419dbf087f" translate="yes" xml:space="preserve">
          <source>Once you have created your migration using one of the generators it's time to get to work!</source>
          <target state="translated">생성기 중 하나를 사용하여 마이그레이션을 생성했으면 이제 작업해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe8af5f46a77f239597c4362061aa7aecb214d4a" translate="yes" xml:space="preserve">
          <source>Once you have this unique index, attempting to add the article to a person twice will raise an &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; error:</source>
          <target state="translated">이 고유 인덱스가 있으면 기사를 사람에게 두 번 추가하려고하면 &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="05e500386e8888e50bcaafff45919de6c32f66f2" translate="yes" xml:space="preserve">
          <source>Once you've configured the application server, you must proxy requests to it by configuring your web server appropriately. For example your NGINX config may include:</source>
          <target state="translated">응용 프로그램 서버를 구성한 후에는 웹 서버를 적절히 구성하여 요청을 프록시해야합니다. 예를 들어 NGINX 구성에는 다음이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76d9ad0fe6675cc2a1a974cc2bfe7c1f295677c2" translate="yes" xml:space="preserve">
          <source>Once you've created a model and added validations, if that model is created via a web form, you probably want to display an error message when one of the validations fail.</source>
          <target state="translated">모델을 만들고 유효성 검사를 추가 한 후 해당 모델이 웹 양식을 통해 생성 된 경우 유효성 검사 중 하나가 실패하면 오류 메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="664bf9ff587f9b7229629113c738857030c6de27" translate="yes" xml:space="preserve">
          <source>Once your README is solid, go through and add rdoc comments to all of the methods that developers will use. It's also customary to add &lt;code&gt;#:nodoc:&lt;/code&gt; comments to those parts of the code that are not included in the public API.</source>
          <target state="translated">README가 확실 해지면 개발자가 사용할 모든 메소드에 rdoc 주석을 추가하십시오. 공용 API에 포함되지 않은 코드 부분에 &lt;code&gt;#:nodoc:&lt;/code&gt; 주석 을 추가하는 것도 일반적 입니다.</target>
        </trans-unit>
        <trans-unit id="7cdd6eb4ac963f5c83d7049e92388c653554b164" translate="yes" xml:space="preserve">
          <source>Once your comments are good to go, navigate to your plugin directory and run:</source>
          <target state="translated">의견이 있으면 플러그인 디렉토리로 이동하여 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="06b89364f39a831c161354043334591a09417103" translate="yes" xml:space="preserve">
          <source>Once your plugin is stable and you are ready to deploy, do everyone else a favor and document it! Luckily, writing documentation for your plugin is easy.</source>
          <target state="translated">플러그인이 안정적이고 배포 할 준비가되면 다른 모든 사람들에게 호의를 베풀고 문서화하십시오! 운 좋게도 플러그인에 대한 문서를 작성하는 것은 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="60cd3e1b38563fd269488b075cfb5c9ad562a629" translate="yes" xml:space="preserve">
          <source>One article can have many comments.</source>
          <target state="translated">한 기사에 많은 의견이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c46ab4cd5b6744ee339c80d8a6f96dc75c460ad" translate="yes" xml:space="preserve">
          <source>One can additionally pass a hash as an argument to unscope specific &lt;code&gt;:where&lt;/code&gt; values. This is done by passing a hash with a single key-value pair. The key should be &lt;code&gt;:where&lt;/code&gt; and the value should be the where value to unscope. For example:</source>
          <target state="translated">범위를 지정하지 않은 특정 &lt;code&gt;:where&lt;/code&gt; 값에 대한 인수로 해시를 추가로 전달할 수 있습니다 . 단일 키-값 쌍으로 해시를 전달하면됩니다. 키는 &lt;code&gt;:where&lt;/code&gt; 여야하며 값은 범위를 지정하지 않는 where 값이어야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4930c9beef86b19c8b6f488e0dbc23b3e8f631e4" translate="yes" xml:space="preserve">
          <source>One common task is to inspect the contents of a variable. Rails provides three different ways to do this:</source>
          <target state="translated">일반적인 작업 중 하나는 변수의 내용을 검사하는 것입니다. Rails는이를위한 세 가지 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e459071ea49b553ce1ea05c61b3cf666f45e7e9e" translate="yes" xml:space="preserve">
          <source>One could think about doing some &lt;a href=&quot;#require-dependency&quot;&gt;&lt;code&gt;require_dependency&lt;/code&gt;&lt;/a&gt; calls in an initializer to make sure certain constants are loaded upfront, for example as an attempt to address the &lt;a href=&quot;#autoloading-and-sti&quot;&gt;gotcha with STIs&lt;/a&gt;.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;#autoloading-and-sti&quot;&gt;STI를 사용&lt;/a&gt; 하여 문제 를 해결하려는 시도와 같이 특정 상수가 사전에로드되도록 초기화 프로그램에서 &lt;a href=&quot;#require-dependency&quot;&gt; &lt;code&gt;require_dependency&lt;/code&gt; &lt;/a&gt; 호출을 수행하는 것에 대해 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed948b58a36bf16e3900d341f4b7a15b389baad5" translate="yes" xml:space="preserve">
          <source>One exception is the &lt;a href=&quot;../rollback&quot;&gt;&lt;code&gt;ActiveRecord::Rollback&lt;/code&gt;&lt;/a&gt; exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc22f527fe95efb8d4c108c9990bb666b0e1b55d" translate="yes" xml:space="preserve">
          <source>One exception is the &lt;a href=&quot;../rollback&quot;&gt;ActiveRecord::Rollback&lt;/a&gt; exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.</source>
          <target state="translated">한 가지 예외는 &lt;a href=&quot;../rollback&quot;&gt;ActiveRecord :: Rollback&lt;/a&gt; 예외입니다.이 예외는 발생시 ROLLBACK을 트리거하지만 트랜잭션 블록에서 다시 발생하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="470be94c0a730bbafb8f17dd2546bbba150b60bf" translate="yes" xml:space="preserve">
          <source>One final thing is that the &lt;code&gt;articles&lt;/code&gt; resource for this engine should be the root of the engine. Whenever someone goes to the root path where the engine is mounted, they should be shown a list of articles. This can be made to happen if this line is inserted into the &lt;code&gt;config/routes.rb&lt;/code&gt; file inside the engine:</source>
          <target state="translated">마지막 으로이 엔진 의 &lt;code&gt;articles&lt;/code&gt; 리소스는 엔진의 루트 여야합니다. 누군가 엔진이 장착 된 루트 경로로 갈 때마다 기사 목록이 표시되어야합니다. 이 줄이 엔진 내부의 &lt;code&gt;config/routes.rb&lt;/code&gt; 파일에 삽입되면 이런 일이 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0402b4436a00e695f872e750277a2c085d1e020" translate="yes" xml:space="preserve">
          <source>One important caveat is that &lt;code&gt;default_scope&lt;/code&gt; will be prepended in &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt; conditions.</source>
          <target state="translated">한 가지 중요한주의 사항은 &lt;code&gt;default_scope&lt;/code&gt; 가 &lt;code&gt;scope&lt;/code&gt; 및 &lt;code&gt;where&lt;/code&gt; 조건 앞에 추가 된다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="246e3b48455f1d814518444a63e1c43b2a9f76d1" translate="yes" xml:space="preserve">
          <source>One key consideration for successfully internationalizing an application is to avoid making incorrect assumptions about grammar rules when abstracting localized code. Grammar rules that seem fundamental in one locale may not hold true in another one.</source>
          <target state="translated">응용 프로그램을 성공적으로 국제화하기위한 주요 고려 사항은 지역화 된 코드를 추상화 할 때 문법 규칙에 대한 잘못된 가정을 피하는 것입니다. 한 로케일에서 기본으로 보이는 문법 규칙은 다른 로케일에서는 적용되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f46bc5971c53449743e1084790d667e812021e1a" translate="yes" xml:space="preserve">
          <source>One last feature about generators which is quite useful for plugin generators is fallbacks. For example, imagine that you want to add a feature on top of TestUnit like &lt;a href=&quot;https://github.com/thoughtbot/shoulda&quot;&gt;shoulda&lt;/a&gt; does. Since TestUnit already implements all generators required by Rails and shoulda just wants to overwrite part of it, there is no need for shoulda to reimplement some generators again, it can simply tell Rails to use a &lt;code&gt;TestUnit&lt;/code&gt; generator if none was found under the &lt;code&gt;Shoulda&lt;/code&gt; namespace.</source>
          <target state="translated">플러그인 생성기에 매우 유용한 생성기의 마지막 기능 중 하나는 폴백입니다. 예를 들어, &lt;a href=&quot;https://github.com/thoughtbot/shoulda&quot;&gt;shoulda&lt;/a&gt; 처럼 TestUnit 위에 기능을 추가한다고 가정하십시오 . TestUnit은 이미 Rails에 필요한 모든 생성기를 구현하고 일부는 덮어 쓰기를 원하기 때문에 일부 생성기를 다시 구현해야 할 필요가 없으므로 &lt;code&gt;Shoulda&lt;/code&gt; 네임 스페이스에 아무것도없는 경우 Rails에 &lt;code&gt;TestUnit&lt;/code&gt; 생성기 를 사용하도록 지시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e7d88f87768ec37728cb502a78042ec7cf07282" translate="yes" xml:space="preserve">
          <source>One more example: Calling the &lt;code&gt;:create&lt;/code&gt; action to create a new article, passing in text for the &lt;code&gt;title&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;, as JSON request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76431a8dde340b2752187d0362cbab4d1a2a066" translate="yes" xml:space="preserve">
          <source>One of the most basic forms you see on the web is a search form. This form contains:</source>
          <target state="translated">웹에서 볼 수있는 가장 기본적인 양식 중 하나는 검색 양식입니다. 이 양식에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5c95f415ebc17087356f0093b18162c4379df3d6" translate="yes" xml:space="preserve">
          <source>One of the most common jobs in a modern web application is sending emails outside of the request-response cycle, so the user doesn't have to wait on it. Active Job is integrated with Action Mailer so you can easily send emails asynchronously:</source>
          <target state="translated">최신 웹 응용 프로그램에서 가장 일반적인 작업 중 하나는 요청-응답주기 외부에서 전자 메일을 보내는 것이므로 사용자가 기다릴 필요가 없습니다. 활성 작업은 Action Mailer와 통합되어 있으므로 이메일을 쉽게 비동기식으로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a82e02c89534b4ce708fde1e165b76a228bb4c9" translate="yes" xml:space="preserve">
          <source>One of the options for compressing CSS is YUI. The &lt;a href=&quot;https://yui.github.io/yuicompressor/css.html&quot;&gt;YUI CSS compressor&lt;/a&gt; provides minification.</source>
          <target state="translated">CSS 압축 옵션 중 하나는 YUI입니다. &lt;a href=&quot;https://yui.github.io/yuicompressor/css.html&quot;&gt;YUI의 CSS 압축기는&lt;/a&gt; 축약을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a4251f3c32016070331a0f392559cfb61e10e484" translate="yes" xml:space="preserve">
          <source>One option you have is to set the locale from the domain name where your application runs. For example, we want &lt;code&gt;www.example.com&lt;/code&gt; to load the English (or default) locale, and &lt;code&gt;www.example.es&lt;/code&gt; to load the Spanish locale. Thus the &lt;em&gt;top-level domain name&lt;/em&gt; is used for locale setting. This has several advantages:</source>
          <target state="translated">한 가지 옵션은 응용 프로그램이 실행되는 도메인 이름에서 로캘을 설정하는 것입니다. 예를 들어 &lt;code&gt;www.example.com&lt;/code&gt; 에서 영어 (또는 기본) 로캘 을로드 하고 &lt;code&gt;www.example.es&lt;/code&gt; 를 사용하여 스페인어 로캘을로드하려고합니다. 따라서 &lt;em&gt;최상위 도메인 이름&lt;/em&gt; 은 로캘 설정에 사용됩니다. 여기에는 몇 가지 장점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="64fc2fa5bac989aa066db43eaa04574b09961fcd" translate="yes" xml:space="preserve">
          <source>One possibility is to set the expiry time-stamp of the cookie with the session ID. However the client can edit cookies that are stored in the web browser so expiring sessions on the server is safer. Here is an example of how to &lt;em&gt;expire sessions in a database table&lt;/em&gt;. Call &lt;code&gt;Session.sweep(&quot;20 minutes&quot;)&lt;/code&gt; to expire sessions that were used longer than 20 minutes ago.</source>
          <target state="translated">한 가지 가능성은 세션 ID로 쿠키의 만료 시간 소인을 설정하는 것입니다. 그러나 클라이언트는 웹 브라우저에 저장된 쿠키를 편집 할 수 있으므로 서버에서 세션 만료가 더 안전합니다. 다음은 &lt;em&gt;데이터베이스 테이블에서 세션&lt;/em&gt; 을 &lt;em&gt;만료&lt;/em&gt; 하는 방법의 예입니다 . 20 분 전에 사용 된 세션을 만료 시키려면 &lt;code&gt;Session.sweep(&quot;20 minutes&quot;)&lt;/code&gt; 을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="68b0cd63505ae7d2b6a8ce1dba053ca4c7b65211" translate="yes" xml:space="preserve">
          <source>One real use case example would be to rotate a basic auth credentials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca890416fb094b3ddfd3cf8fb7b195c7d30af1f" translate="yes" xml:space="preserve">
          <source>One reason you may wish to call this method explicitly is between queries that ask the database to randomize results. Otherwise the cache would see the same SQL query and repeatedly return the same result each time, silently undermining the randomness you were expecting.</source>
          <target state="translated">이 메소드를 명시 적으로 호출하려는 한 가지 이유는 데이터베이스에 결과를 무작위 화하도록 요청하는 쿼리 사이에 있습니다. 그렇지 않으면 캐시는 동일한 SQL 쿼리를보고 매번 동일한 결과를 반복해서 반환하므로 예상했던 임의성을 자동으로 손상시킵니다.</target>
        </trans-unit>
        <trans-unit id="1061b56869ce9ecfe7b946f0d5d4545fb2d2e66c" translate="yes" xml:space="preserve">
          <source>One should restart the entire transaction if an &lt;a href=&quot;../statementinvalid&quot;&gt;&lt;code&gt;ActiveRecord::StatementInvalid&lt;/code&gt;&lt;/a&gt; occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09ce296cc38437a13514732993c15e3e11a75f8" translate="yes" xml:space="preserve">
          <source>One should restart the entire transaction if an &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord::StatementInvalid&lt;/a&gt; occurred.</source>
          <target state="translated">&lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord :: StatementInvalid&lt;/a&gt; 가 발생한 경우 전체 트랜잭션을 다시 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="88484856dcbc8c0609510a8e6e9274137c98f286" translate="yes" xml:space="preserve">
          <source>One such application server you can use is &lt;a href=&quot;https://bogomips.org/unicorn/&quot;&gt;Unicorn&lt;/a&gt; to run behind a reverse proxy.</source>
          <target state="translated">이러한 응용 프로그램 서버 중 하나는 &lt;a href=&quot;https://bogomips.org/unicorn/&quot;&gt;Unicorn&lt;/a&gt; 으로 리버스 프록시 뒤에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e37bddf42c0d0970c5b853c0883f240cfcd7e97c" translate="yes" xml:space="preserve">
          <source>One way to avoid deep nesting (as recommended above) is to generate the collection actions scoped under the parent, so as to get a sense of the hierarchy, but to not nest the member actions. In other words, to only build routes with the minimal amount of information to uniquely identify the resource, like this:</source>
          <target state="translated">딥 네 스팅을 피하는 한 가지 방법 (위에서 권장)은 상위 계층에서 수집 된 액션을 생성하여 계층 구조를 이해하지만 멤버 액션은 중첩하지 않는 것입니다. 다시 말해, 다음과 같이 리소스를 고유하게 식별하기 위해 최소한의 정보로 경로 만 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="430a9e43756de70083d399ed83ba156a19e29b44" translate="yes" xml:space="preserve">
          <source>One way to avoid this is to &lt;code&gt;unscope&lt;/code&gt; the includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4925d61b004a9041a23947e53a1641d645c142e" translate="yes" xml:space="preserve">
          <source>One way to check the headers are cached properly in your CDN is by using &lt;a href=&quot;https://explainshell.com/explain?cmd=curl+-I+http%3A%2F%2Fwww.example.com&quot;&gt;curl&lt;/a&gt;. You can request the headers from both your server and your CDN to verify they are the same:</source>
          <target state="translated">CDN에 헤더가 올바르게 캐시되어 있는지 확인하는 한 가지 방법은 &lt;a href=&quot;https://explainshell.com/explain?cmd=curl+-I+http%3A%2F%2Fwww.example.com&quot;&gt;curl&lt;/a&gt; 을 사용하는 것 입니다. 서버와 CDN 모두에서 헤더가 동일한 지 확인하도록 헤더를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86d261fa582670a8e042e910d33f5f376cfb98bf" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines: as a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looked like this:</source>
          <target state="translated">부분 부분을 사용하는 한 가지 방법은 부분 루틴을 서브 루틴과 동등한 것으로 취급하는 것입니다. 세부 사항을보기 밖으로 이동하여 진행 상황을보다 쉽게 ​​파악할 수있는 방법입니다. 예를 들어 다음과 같은 뷰가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10c415290a3667c6831ad121a2104951591264e2" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines; a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looks like this:</source>
          <target state="translated">부분을 ​​사용하는 한 가지 방법은 이들을 서브 루틴과 동등한 것으로 취급하는 것입니다. 상황을보다 쉽게 ​​파악할 수 있도록 세부 정보를보기 밖으로 이동시키는 방법. 예를 들어 다음과 같은 뷰가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="964ce9a18a0f2d237ce83f269c1ef2f591a32a27" translate="yes" xml:space="preserve">
          <source>One-to-many</source>
          <target state="translated">One-to-many</target>
        </trans-unit>
        <trans-unit id="dfba1b36f2cfd7ce46bc5a8cfbc0d7290fb9c82e" translate="yes" xml:space="preserve">
          <source>One-to-many Example</source>
          <target state="translated">일대 다 예제</target>
        </trans-unit>
        <trans-unit id="261f46f06dea79f5ef7997cf1cc6cb23aeabfbd2" translate="yes" xml:space="preserve">
          <source>One-to-one</source>
          <target state="translated">One-to-one</target>
        </trans-unit>
        <trans-unit id="19832bb6d166dd4f18d0ac476a6edbfe61d74927" translate="yes" xml:space="preserve">
          <source>One-to-one Example</source>
          <target state="translated">일대일 예</target>
        </trans-unit>
        <trans-unit id="bd135e9223295b1a34af00dc168625632ddce4ef" translate="yes" xml:space="preserve">
          <source>One-to-one associations</source>
          <target state="translated">일대일 협회</target>
        </trans-unit>
        <trans-unit id="d88f2fb493481e9ef2424236dfa3c3110a1024a0" translate="yes" xml:space="preserve">
          <source>Only GET and HEAD requests are served. POST and other HTTP methods are handed off to the main app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cf6a3be534018b9353cc94282a82862a2fa988" translate="yes" xml:space="preserve">
          <source>Only bug fixes, no API changes, no new features. Except as necessary for security fixes.</source>
          <target state="translated">버그 수정, API 변경 없음, 새로운 기능 없음. 보안 수정에 필요한 경우를 제외하고.</target>
        </trans-unit>
        <trans-unit id="d34302dff8ebb28f6311974ae0500fbaf9ce0fa8" translate="yes" xml:space="preserve">
          <source>Only displays the screenshot path. This is the default value.</source>
          <target state="translated">스크린 샷 경로 만 표시합니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="742072d9be1eda7528ca794b5657d960ee0b2371" translate="yes" xml:space="preserve">
          <source>Only equality, range, and subset checking are possible with Hash conditions.</source>
          <target state="translated">해시 조건에서는 동등성, 범위 및 서브 세트 검사 만 가능합니다.</target>
        </trans-unit>
        <trans-unit id="35ff5e0d2029e0e75fc3fc44ee87d6b8c8264d5a" translate="yes" xml:space="preserve">
          <source>Only files in the root directory are served; path traversal is denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea92c339437a1c8e9e5808873fb7ac4143f27fa" translate="yes" xml:space="preserve">
          <source>Only generate routes for the given actions.</source>
          <target state="translated">주어진 작업에 대한 경로 만 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="ca99a5d2669d6851ee378f86d51ad62b685bfa3c" translate="yes" xml:space="preserve">
          <source>Only long-running &quot;top level&quot; processes should invoke the Reloader, because if it determines a reload is needed, it will block until all other threads have completed any Executor invocations.</source>
          <target state="translated">재로드가 필요하다고 판단되면 다른 모든 스레드가 Executor 호출을 완료 할 때까지 차단되므로 장기 실행 &quot;최상위 레벨&quot;프로세스 만 Reloader를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="307f86dd0241c519ac2a2916c2c14365af45ecd6" translate="yes" xml:space="preserve">
          <source>Only one console can be rendered per request. Otherwise &lt;code&gt;web-console&lt;/code&gt; will raise an error on the second &lt;code&gt;console&lt;/code&gt; invocation.</source>
          <target state="translated">요청 당 하나의 콘솔 만 렌더링 할 수 있습니다. 그렇지 않으면 &lt;code&gt;web-console&lt;/code&gt; 이 두 번째 &lt;code&gt;console&lt;/code&gt; 호출 에서 오류를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="2e46e99ce898fa5c16055d4175c91c423d5eb141" translate="yes" xml:space="preserve">
          <source>Only one thread may load or unload at a time, and to do either, it must wait until no other threads are running application code. If a thread is waiting to perform a load, it doesn't prevent other threads from loading (in fact, they'll cooperate, and each perform their queued load in turn, before all resuming running together).</source>
          <target state="translated">한 번에 하나의 스레드 만로드 또는 언로드 될 수 있으며 둘 중 하나를 수행하려면 다른 스레드가 애플리케이션 코드를 실행하지 않을 때까지 기다려야합니다. 스레드가로드를 수행하기 위해 대기하는 경우 다른 스레드가로드되는 것을 막지 않습니다 (사실, 스레드가 모두 다시 실행되기 전에 협력하여 각각 큐에 대기 한로드를 수행함).</target>
        </trans-unit>
        <trans-unit id="c0ef82ab895b3dc529ae273b0f6382d3b4a29356" translate="yes" xml:space="preserve">
          <source>Only permitted scalars pass the filter. For example, given</source>
          <target state="translated">허용 된 스칼라 만 필터를 통과합니다. 예를 들어, 주어진</target>
        </trans-unit>
        <trans-unit id="b9344c8916cbe73a1ce3670d6a11a8abeb404e3a" translate="yes" xml:space="preserve">
          <source>Only public methods are callable as actions. It is a best practice to lower the visibility of methods (with &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;protected&lt;/code&gt;) which are not intended to be actions, like auxiliary methods or filters.</source>
          <target state="translated">공개 메소드 만 조치로 호출 할 수 있습니다. 보조 방법이나 필터와 같은 동작이 아닌 방법 ( &lt;code&gt;private&lt;/code&gt; 또는 &lt;code&gt;protected&lt;/code&gt; ) 의 가시성을 낮추는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d8ab6c3748240960e305c2097c949a0547062fd6" translate="yes" xml:space="preserve">
          <source>Only supplied params will be matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380e223700816b88abe0b7deb99ebafb3ebebb51" translate="yes" xml:space="preserve">
          <source>Only supported on the &lt;code&gt;MySQL&lt;/code&gt; and PostgreSQL adapter, ignored elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e93b5d895bc12656b7b6de1a04216e25563fc5" translate="yes" xml:space="preserve">
          <source>Only supported on the MySQL and PostgreSQL adapter, ignored elsewhere.</source>
          <target state="translated">MySQL 및 PostgreSQL 어댑터에서만 지원되며 다른 곳에서는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7108ad7c547043fec67334a0fc4cd6553fa6d275" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;optgroup&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; tags are returned, so you still have to wrap the output in an appropriate &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="translated">만 &lt;code&gt;optgroup&lt;/code&gt; 및 &lt;code&gt;option&lt;/code&gt; 당신은 여전히 적절한 출력을 포장 할 수 있도록 태그, 반환되는 &lt;code&gt;select&lt;/code&gt; 태그입니다.</target>
        </trans-unit>
        <trans-unit id="22c30b7d7ef2840e2f43312cf613f3a108641d2a" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;option&lt;/code&gt; tags are returned, you have to wrap this call in a regular HTML &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="translated">만 &lt;code&gt;option&lt;/code&gt; 태그 반환, 당신은 일반 HTML에서이 호출 래핑이 &lt;code&gt;select&lt;/code&gt; 태그를.</target>
        </trans-unit>
        <trans-unit id="36c97789a02eb54c6346a54b044513164e1d31d2" translate="yes" xml:space="preserve">
          <source>Only the directory notation is supported. Specifying the controller with Ruby constant notation (e.g. &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt;) can lead to routing problems and results in a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f293a9b728eca5c422b1c90cc270c6c7c359207c" translate="yes" xml:space="preserve">
          <source>Only the directory notation is supported. Specifying the controller with Ruby constant notation (eg. &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt;) can lead to routing problems and results in a warning.</source>
          <target state="translated">디렉토리 표기법 만 지원됩니다. Ruby 상수 표기법으로 컨트롤러를 지정하면 (예 &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt; ) 라우팅 문제가 발생하고 경고가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5e66c7fa1859400ed2d95ed4cac3113bddf009f" translate="yes" xml:space="preserve">
          <source>Only the latest release series will receive bug fixes. When enough bugs are fixed and its deemed worthy to release a new gem, this is the branch it happens from.</source>
          <target state="translated">최신 릴리스 시리즈 만 버그 수정을받습니다. 충분한 버그가 수정되어 새로운 보석을 출시 할 가치가있는 것으로 판단되는 경우, 이것이 발생하는 지점입니다.</target>
        </trans-unit>
        <trans-unit id="7d4ced645bf45d22038b24432f2481e5ff66d1f6" translate="yes" xml:space="preserve">
          <source>Only useful if the &lt;code&gt;:autosave&lt;/code&gt; option on the parent is enabled for this associated model.</source>
          <target state="translated">이 연관된 모델에 대해 상위 의 &lt;code&gt;:autosave&lt;/code&gt; 옵션이 사용 가능한 경우에만 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="d3a44af13cbb71470ce7f94311d2355d7c2907d1" translate="yes" xml:space="preserve">
          <source>Opaque based on digest of secret key</source>
          <target state="translated">비밀 키 다이제스트를 기반으로하는 불투명</target>
        </trans-unit>
        <trans-unit id="9dcd96383cc8de5fbb7b0490f160fcf0708a8d1e" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; and modify it as follows:</source>
          <target state="translated">&lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 를 열고 다음과 같이 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="5e5febdcd8c7fe18a9d53035d58afbd18e5a23de" translate="yes" xml:space="preserve">
          <source>Open a new session instance. If a block is given, the new session is yielded to the block before being returned.</source>
          <target state="translated">새 세션 인스턴스를 엽니 다. 블록이 제공되면 새 세션이 리턴되기 전에 블록에 양보됩니다.</target>
        </trans-unit>
        <trans-unit id="3de22d522f2006b25c0bcecd1a2ef1748833ee69" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; file in your text editor. Delete all of the existing code in the file, and replace it with the following single line of code:</source>
          <target state="translated">오픈 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 텍스트 편집기에서 파일을. 파일에서 기존 코드를 모두 삭제하고 다음 단일 코드 줄로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="02e3daa19d6d3cf34179e2e9bbb764f5410786c3" translate="yes" xml:space="preserve">
          <source>Open the file &lt;code&gt;config/routes.rb&lt;/code&gt; in your editor.</source>
          <target state="translated">편집기에서 &lt;code&gt;config/routes.rb&lt;/code&gt; 파일 을여십시오.</target>
        </trans-unit>
        <trans-unit id="7dca4768f25a21ed4853295312eaa6669f3aa6c5" translate="yes" xml:space="preserve">
          <source>Open up a command line prompt. On macOS open Terminal.app, on Windows choose &quot;Run&quot; from your Start menu and type 'cmd.exe'. Any commands prefaced with a dollar sign &lt;code&gt;$&lt;/code&gt; should be run in the command line. Verify that you have a current version of Ruby installed:</source>
          <target state="translated">명령 행 프롬프트를여십시오. macOS의 Terminal.app을 열고 Windows의 경우 시작 메뉴에서 &quot;실행&quot;을 선택하고 'cmd.exe'를 입력하십시오. 달러 기호 &lt;code&gt;$&lt;/code&gt; 가 앞에 붙은 모든 명령 은 명령 행에서 실행해야합니다. 최신 버전의 Ruby가 설치되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="86bdc2a13b041c56a678da3c47890ae868206eb0" translate="yes" xml:space="preserve">
          <source>Open up a command line prompt. On macOS open Terminal.app; on Windows choose &quot;Run&quot; from your Start menu and type &lt;code&gt;cmd.exe&lt;/code&gt;. Any commands prefaced with a dollar sign &lt;code&gt;$&lt;/code&gt; should be run in the command line. Verify that you have a current version of Ruby installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e9f7d79c40866ef09256da578e53ce9fdfbd93" translate="yes" xml:space="preserve">
          <source>OpenSSLCipherError</source>
          <target state="translated">OpenSSLCipherError</target>
        </trans-unit>
        <trans-unit id="1764bd75f367f984cde9cc7a149bc71b74585fdf" translate="yes" xml:space="preserve">
          <source>Opens a new tempfile in &lt;a href=&quot;downloading#method-i-tempdir&quot;&gt;tempdir&lt;/a&gt; and copies blob data into it. Yields the tempfile.</source>
          <target state="translated">&lt;a href=&quot;downloading#method-i-tempdir&quot;&gt;tempdir&lt;/a&gt; 에서 새 임시 파일을 열고 Blob 데이터를 복사합니다. 임시 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3865e51eb9f5969b8c0e66213c28ed627ca736e5" translate="yes" xml:space="preserve">
          <source>Opt in to the new default behavior by setting &lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. The old behavior will be deprecated in Rails 6.1 and removed in a subsequent release.</source>
          <target state="translated">&lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하여 새 기본 동작을 선택하십시오 . 이전 동작은 Rails 6.1에서 더 이상 사용되지 않으며 후속 릴리스에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="778c618117429ef2dedad8c828b71d5371cf6e0f" translate="yes" xml:space="preserve">
          <source>Optimistic Locking</source>
          <target state="translated">낙관적 잠금</target>
        </trans-unit>
        <trans-unit id="02b4d21eac77f9a198165f97088f163752a3a876" translate="yes" xml:space="preserve">
          <source>Optimistic locking allows multiple users to access the same record for edits, and assumes a minimum of conflicts with the data. It does this by checking whether another process has made changes to a record since it was opened. An &lt;code&gt;ActiveRecord::StaleObjectError&lt;/code&gt; exception is thrown if that has occurred and the update is ignored.</source>
          <target state="translated">낙관적 잠금을 사용하면 여러 사용자가 편집을 위해 동일한 레코드에 액세스 할 수 있으며 데이터와의 최소 충돌을 가정합니다. 다른 프로세스가 레코드를 연 이후로 레코드를 변경했는지 여부를 확인하여이를 수행합니다. &lt;code&gt;ActiveRecord::StaleObjectError&lt;/code&gt; 그가 발생하면 예외가 발생하고 업데이트는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="440efb9593998e73e042de8d5c13a39973de6702" translate="yes" xml:space="preserve">
          <source>Optimize caching</source>
          <target state="translated">캐싱 최적화</target>
        </trans-unit>
        <trans-unit id="5d109ee234bd237eb8e8affab4902dda9120464f" translate="yes" xml:space="preserve">
          <source>Opting Out</source>
          <target state="translated">탈퇴</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="7bd1d4d5e812e0b7f35050f21e80c418d4c57944" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;:dependent =&amp;gt; :restrict&lt;/code&gt; has been removed from &lt;code&gt;belongs_to&lt;/code&gt;. If you want to prevent deleting the object if there are any associated objects, you can set &lt;code&gt;:dependent =&amp;gt; :destroy&lt;/code&gt; and return &lt;code&gt;false&lt;/code&gt; after checking for existence of association from any of the associated object's destroy callbacks.</source>
          <target state="translated">옵션 &lt;code&gt;:dependent =&amp;gt; :restrict&lt;/code&gt; 가 &lt;code&gt;belongs_to&lt;/code&gt; 에서 제거되었습니다 . 연결된 객체가있는 경우 객체를 삭제하지 않으려면 연결된 객체의 destroy 콜백에서 연결이 있는지 확인한 후 &lt;code&gt;:dependent =&amp;gt; :destroy&lt;/code&gt; 하고 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="50371dc72490b25b93552e7d1508d1aaab544e6d" translate="yes" xml:space="preserve">
          <source>Option Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90caa34c648ca28307163b49f20388699c1c8bb" translate="yes" xml:space="preserve">
          <source>Option Tags from a Collection of Arbitrary Objects</source>
          <target state="translated">임의 객체 모음의 옵션 태그</target>
        </trans-unit>
        <trans-unit id="e460ab9059f609299a4f0391c888d23b7f0608d5" translate="yes" xml:space="preserve">
          <source>Option examples:</source>
          <target state="translated">옵션 예 :</target>
        </trans-unit>
        <trans-unit id="46865efd2e3d2d4f8219e6a941cb11286e86fada" translate="yes" xml:space="preserve">
          <source>Option to encode &lt;code&gt;BigDecimal&lt;/code&gt; objects as numbers instead of strings</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; 객체를 문자열 대신 숫자 로 인코딩하는 옵션</target>
        </trans-unit>
        <trans-unit id="69c339ec350a719390694866ea431c63a56be5b7" translate="yes" xml:space="preserve">
          <source>Optionally provide a Hash of credentials instead of a keyfile path:</source>
          <target state="translated">선택적으로 키 파일 경로 대신 자격 증명 해시를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="f7350253ff699685bca9e1cd76f42967abc3f13e" translate="yes" xml:space="preserve">
          <source>Optionally provide client and upload options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="e4d76dd552da264fbd8e54798493528d066d02e5" translate="yes" xml:space="preserve">
          <source>Options (conditions)</source>
          <target state="translated">옵션 (조건)</target>
        </trans-unit>
        <trans-unit id="48c5131188beb296ea713be70b28310e57cba19e" translate="yes" xml:space="preserve">
          <source>Options Extraction</source>
          <target state="translated">옵션 추출</target>
        </trans-unit>
        <trans-unit id="74f705646e3b59d91301d39cc8bd9297b7ea126a" translate="yes" xml:space="preserve">
          <source>Options applying to all assets</source>
          <target state="translated">모든 자산에 적용되는 옵션</target>
        </trans-unit>
        <trans-unit id="cad7db2ddf2757e883ec8b8dac1c23428f0a5f28" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation.</source>
          <target state="translated">옵션은 기본 캐시 구현으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3d5cd85068734c29bbb9be8ed9b5362af5558f84" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation. For example:</source>
          <target state="translated">옵션은 기본 캐시 구현으로 전달됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="translated">옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bc30f96776b234df9f8ca32270e650d3093fcef1" translate="yes" xml:space="preserve">
          <source>Options may also be used by concerns defined in a block by accepting a block parameter. So, using a block, you might do something as simple as limit the actions available on certain resources, passing standard resource options through the concern:</source>
          <target state="translated">블록 매개 변수를 승인하여 블록에 정의 된 사항에 따라 옵션을 사용할 수도 있습니다. 따라서 블록을 사용하면 특정 리소스에서 사용 가능한 작업을 제한하는 간단한 작업을 수행하여 표준 리소스 옵션을 문제를 통해 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="208dc3d066da1d162c0b160a18e93bcc147bb701" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload when writing to the store</source>
          <target state="translated">가져 오기 위해 전달 된 옵션은 상점에 쓸 때 페이로드와 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="13471d65e3d4b8c4006e33f8b92e1a0c32cbcc49" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload.</source>
          <target state="translated">가져 오기 위해 전달 된 옵션은 페이로드와 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="ad3fd1b2e2af3b184336a3df7528447495096cac" translate="yes" xml:space="preserve">
          <source>Or a URL:</source>
          <target state="translated">또는 URL :</target>
        </trans-unit>
        <trans-unit id="a3bc0242c5a25d6a0347f3cd2adf504a9a8659e2" translate="yes" xml:space="preserve">
          <source>Or a collection to be used:</source>
          <target state="translated">또는 사용할 컬렉션 :</target>
        </trans-unit>
        <trans-unit id="c3e798b02ecc9f5ce86d6a37704149b2bd459266" translate="yes" xml:space="preserve">
          <source>Or consider deleting an author, and ensuring that all of its books get deleted as well:</source>
          <target state="translated">또는 저자를 삭제하고 해당 책이 모두 삭제되도록하십시오.</target>
        </trans-unit>
        <trans-unit id="bb3a2413eccaa37c9edca7d7508e154b05c37f49" translate="yes" xml:space="preserve">
          <source>Or equivalently, if &lt;code&gt;TenderloveMigration&lt;/code&gt; is defined as in the documentation for Migration:</source>
          <target state="translated">또는 &lt;code&gt;TenderloveMigration&lt;/code&gt; 이 마이그레이션 문서에서 정의한 경우와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="83d46f7649085a0fc5bd6642728d7255f64346fb" translate="yes" xml:space="preserve">
          <source>Or even multiple scope parameters. For example, making sure that a teacher can only be on the schedule once per semester for a particular class.</source>
          <target state="translated">또는 여러 범위 매개 변수도 가능합니다. 예를 들어, 교사가 특정 수업에 대해 한 학기당 한 번만 일정에있을 수 있도록하십시오.</target>
        </trans-unit>
        <trans-unit id="4775e203194ef68c0ffff0b45e0260781cbe7d36" translate="yes" xml:space="preserve">
          <source>Or even to render a special view:</source>
          <target state="translated">또는 특수한 뷰를 렌더링 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcf071d5d4043c8f993b4afe346faf72c15a6d61" translate="yes" xml:space="preserve">
          <source>Or if the format is json:</source>
          <target state="translated">또는 형식이 json 인 경우 :</target>
        </trans-unit>
        <trans-unit id="28ad3309395a57ea267e47d84de8180ed1521394" translate="yes" xml:space="preserve">
          <source>Or in a view:</source>
          <target state="translated">또는보기에서 :</target>
        </trans-unit>
        <trans-unit id="1f13b33e63742fa01f4b9868b2094bcb1f7b7f66" translate="yes" xml:space="preserve">
          <source>Or in the &lt;code&gt;Initializer&lt;/code&gt; section, add &lt;em&gt;any&lt;/em&gt; of the following</source>
          <target state="translated">또는 &lt;code&gt;Initializer&lt;/code&gt; 섹션 에서 다음 &lt;em&gt;중&lt;/em&gt; 하나를 추가 &lt;em&gt;하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b05b4787f0b112e93549bd08dd3c395127fe3054" translate="yes" xml:space="preserve">
          <source>Or on a relation:</source>
          <target state="translated">또는 관계 :</target>
        </trans-unit>
        <trans-unit id="dd960357e2da48b048bf1b0f86562d2ec982a889" translate="yes" xml:space="preserve">
          <source>Or on an association consisting of &lt;code&gt;Article&lt;/code&gt; objects:</source>
          <target state="translated">또는 &lt;code&gt;Article&lt;/code&gt; 객체 로 구성된 연결에서 :</target>
        </trans-unit>
        <trans-unit id="0ab5c4590547794ec7e0f2f7c1e5ea69636d74fa" translate="yes" xml:space="preserve">
          <source>Or on an association consisting of &lt;code&gt;Book&lt;/code&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c76bf3671450a6e5c1752c98d78e3e9357ea980" translate="yes" xml:space="preserve">
          <source>Or ordering by multiple fields:</source>
          <target state="translated">또는 여러 필드로 주문 :</target>
        </trans-unit>
        <trans-unit id="353ed84771564a4d91061f6b253d2d768af09ea7" translate="yes" xml:space="preserve">
          <source>Or pass &lt;code&gt;instance_accessor: false&lt;/code&gt;, to omit both instance methods.</source>
          <target state="translated">또는 &lt;code&gt;instance_accessor: false&lt;/code&gt; 전달 하여 두 인스턴스 메소드를 모두 생략하십시오.</target>
        </trans-unit>
        <trans-unit id="38d614a80bf893429ce0e36be6a4449bc948530a" translate="yes" xml:space="preserve">
          <source>Or similarly:</source>
          <target state="translated">또는 유사하게 :</target>
        </trans-unit>
        <trans-unit id="feb96942494fc6e6e25d0e604bc699226c9dcdc9" translate="yes" xml:space="preserve">
          <source>Or the attacker places the code into the onmouseover event handler of an image:</source>
          <target state="translated">또는 공격자가 코드를 이미지의 onmouseover 이벤트 핸들러에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="262059292b81bef2d8cda70b0d63b5f36908f7fe" translate="yes" xml:space="preserve">
          <source>Or to decrypt with a file, that should be version control ignored, relative to &lt;code&gt;Rails.root&lt;/code&gt;:</source>
          <target state="translated">또는 파일로 해독하려면 &lt;code&gt;Rails.root&lt;/code&gt; 와 관련하여 버전 제어를 무시해야합니다 .</target>
        </trans-unit>
        <trans-unit id="99e051f74960fbfe6c295f8f87ebe121ad9175f6" translate="yes" xml:space="preserve">
          <source>Or we can run a single test file by passing the &lt;code&gt;bin/rails test&lt;/code&gt; command the filename containing the test cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbccef96008262323edcfb1744318c09d39a853" translate="yes" xml:space="preserve">
          <source>Or we can run a single test file by passing the &lt;code&gt;rails test&lt;/code&gt; command the filename containing the test cases.</source>
          <target state="translated">또는 &lt;code&gt;rails test&lt;/code&gt; 명령에 테스트 사례가 포함 된 파일 이름 을 전달하여 단일 테스트 파일을 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4e4c5e6da356d13d896e512ce82a61a1cb72041" translate="yes" xml:space="preserve">
          <source>Or with a block where self points to the current record to be validated:</source>
          <target state="translated">또는 self가 유효성을 검사 할 현재 레코드를 가리키는 블록으로 :</target>
        </trans-unit>
        <trans-unit id="e55fad0f3a803ecc0ba8d73b4df09ad1bcaf83a4" translate="yes" xml:space="preserve">
          <source>Or you can insert a middleware to exact position by using indexes. For example, if you want to insert &lt;code&gt;Magical::Unicorns&lt;/code&gt; middleware on top of the stack, you can do it, like so:</source>
          <target state="translated">또는 색인을 사용하여 미들웨어를 정확한 위치에 삽입 할 수 있습니다. 예를 들어, 스택 위에 &lt;code&gt;Magical::Unicorns&lt;/code&gt; 미들웨어 를 삽입 하려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="86788b76f62cc7d80ba88d052aa89714577b6e5b" translate="yes" xml:space="preserve">
          <source>Or you can remove them.</source>
          <target state="translated">또는 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f4aa987b22d11cbdd89561b2a3cf032b29fb407" translate="yes" xml:space="preserve">
          <source>Or you can set an array of locales as fallback, like so:</source>
          <target state="translated">또는 다음과 같이 로케일 배열을 폴백으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a790a45649781a5473f7e61e6f5b7a3f6f9a4f75" translate="yes" xml:space="preserve">
          <source>Or you can set different fallbacks for locales individually. For example, if you want to use &lt;code&gt;:tr&lt;/code&gt; for &lt;code&gt;:az&lt;/code&gt; and &lt;code&gt;:de&lt;/code&gt;, &lt;code&gt;:en&lt;/code&gt; for &lt;code&gt;:da&lt;/code&gt; as fallbacks, you can do it, like so:</source>
          <target state="translated">또는 로케일마다 다른 폴백을 개별적으로 설정할 수 있습니다. 예를 들어, 사용하려는 경우 &lt;code&gt;:tr&lt;/code&gt; 에 대한 &lt;code&gt;:az&lt;/code&gt; 과 &lt;code&gt;:de&lt;/code&gt; , &lt;code&gt;:en&lt;/code&gt; 를 위해 &lt;code&gt;:da&lt;/code&gt; 폴백 (fallback)와 같은, 당신과 같이, 그것을 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ee000edaf91e9f280fa400956381a99a973a4786" translate="yes" xml:space="preserve">
          <source>Or you can use other HTTP headers to convey other information:</source>
          <target state="translated">또는 다른 HTTP 헤더를 사용하여 다른 정보를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82f92b3302dc3f5a54ed01bf773c005412f4d003" translate="yes" xml:space="preserve">
          <source>Or, &quot;whaaat my tests are failing!!!?&quot; or &quot;my &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; widget is busted!!&quot;</source>
          <target state="translated">또는 &quot;내 테스트가 실패 했습니까 !!!?&quot; 또는 &quot;내 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 위젯이 사용중입니다 !!&quot;</target>
        </trans-unit>
        <trans-unit id="c171a1fe27ebc7177e93b906ec6c9ad27b66b172" translate="yes" xml:space="preserve">
          <source>Or, if you aren't using a &lt;code&gt;FormBuilder&lt;/code&gt;, add the data attribute directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aaf9fe84593f20cc47e6587390b0fadf8b7846e" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return a Book object for all books with reviews&quot;. Note that you will see duplicate books if a book has more than one review. If you want unique books, you can use &lt;code&gt;Book.joins(:reviews).distinct&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476fef55382549404628dd1d71367f3e6a2b7ced" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return a Category object for all categories with articles&quot;. Note that you will see duplicate categories if more than one article has the same category. If you want unique categories, you can use &lt;code&gt;Category.joins(:articles).distinct&lt;/code&gt;.</source>
          <target state="translated">또는 영어로 : &quot;문서가있는 모든 범주의 범주 개체를 반환&quot; 둘 이상의 기사에 동일한 범주가 있으면 중복 범주가 표시됩니다. 고유 한 범주를 원하면 &lt;code&gt;Category.joins(:articles).distinct&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9608eda96f81a2096cfa4b308ac3d2afb82fef9" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a category and at least one comment&quot;. Note again that articles with multiple comments will show up multiple times.</source>
          <target state="translated">또는 영어로 : &quot;카테고리와 하나 이상의 주석이있는 모든 기사를 반환&quot; 댓글이 여러 개인 기사는 여러 번 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6846db36a33012faef67bdc5fc41c96e2233a4b3" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a comment made by a guest.&quot;</source>
          <target state="translated">또는 영어로 : &quot;손님이 작성한 의견이있는 기사를 모두 반환하십시오.&quot;</target>
        </trans-unit>
        <trans-unit id="9be092c6e092fa1f27e558ecd28eb6c1f6a549ac" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all authors that have books with reviews &lt;em&gt;and&lt;/em&gt; have been ordered by a customer, and the suppliers for those books.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62eedb27d5a1899f69128a8be44388186d68970" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all books that have a review by a customer.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b560452812f904f8fe11986dffdc9f0661574f5" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all books with their author that have at least one review&quot;. Note again that books with multiple reviews will show up multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5f7ab50058274eb7f14d4b850aaad262badbd2" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all categories that have articles, where those articles have a comment made by a guest, and where those articles also have a tag.&quot;</source>
          <target state="translated">또는 영어로 : &quot;기사가있는 기사, 게스트가 작성한 기사가 있고 기사에 태그가있는 모든 카테고리를 반환하십시오.&quot;</target>
        </trans-unit>
        <trans-unit id="9c9be6657aea6e25a56e81a0b77ef30c9fd852c7" translate="yes" xml:space="preserve">
          <source>Or, using a callable object, you might implement something more specific to your application, which would be out of place in your routes file.</source>
          <target state="translated">또는 호출 가능한 객체를 사용하여 애플리케이션에보다 특정한 것을 구현할 수 있습니다.이 파일은 경로 파일에 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b2b0e8fe92771485e96ea339005a73e1f1d256f" translate="yes" xml:space="preserve">
          <source>Oracle: &lt;code&gt;:precision&lt;/code&gt; [1..38], &lt;code&gt;:scale&lt;/code&gt; [-84..127]. Default is (38,0).</source>
          <target state="translated">Oracle : &lt;code&gt;:precision&lt;/code&gt; [1..38], &lt;code&gt;:scale&lt;/code&gt; [-84..127]. 기본값은 (38,0)입니다.</target>
        </trans-unit>
        <trans-unit id="3651320b8674613f1874c7fdd0151b4d0caedaba" translate="yes" xml:space="preserve">
          <source>OrderedHash</source>
          <target state="translated">OrderedHash</target>
        </trans-unit>
        <trans-unit id="8011702c2353e126a49a6909828570d332ce0c1b" translate="yes" xml:space="preserve">
          <source>OrderedHash#encode_with</source>
          <target state="translated">OrderedHash#encode_with</target>
        </trans-unit>
        <trans-unit id="00187da59bc0549040ca22c6603641dd7b7c952c" translate="yes" xml:space="preserve">
          <source>OrderedHash#extractable_options?</source>
          <target state="translated">OrderedHash#extractable_options?</target>
        </trans-unit>
        <trans-unit id="6459274eb159c4da482aed019c1a1b2df265595f" translate="yes" xml:space="preserve">
          <source>OrderedHash#nested_under_indifferent_access</source>
          <target state="translated">OrderedHash#nested_under_indifferent_access</target>
        </trans-unit>
        <trans-unit id="454162ee6ad7c6804ac28d9ea0b805e972c8f02b" translate="yes" xml:space="preserve">
          <source>OrderedHash#reject</source>
          <target state="translated">OrderedHash#reject</target>
        </trans-unit>
        <trans-unit id="239ff10b89ec8d7a91930001365d2af62f0e790d" translate="yes" xml:space="preserve">
          <source>OrderedHash#select</source>
          <target state="translated">OrderedHash#select</target>
        </trans-unit>
        <trans-unit id="f842169a6bbeb6d81c0c2659957a8ebd9b2f8d29" translate="yes" xml:space="preserve">
          <source>OrderedHash#to_yaml_type</source>
          <target state="translated">OrderedHash#to_yaml_type</target>
        </trans-unit>
        <trans-unit id="7ac247c4a7d84979677baf43b00743777812d609" translate="yes" xml:space="preserve">
          <source>OrderedOptions</source>
          <target state="translated">OrderedOptions</target>
        </trans-unit>
        <trans-unit id="6a56f6d0f3acca66eed843d6d3ec368da741c8ba" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]</source>
          <target state="translated">OrderedOptions#[]</target>
        </trans-unit>
        <trans-unit id="8295c4a54919052ef905cb9a1e90615db5da4f1d" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]=</source>
          <target state="translated">OrderedOptions#[]=</target>
        </trans-unit>
        <trans-unit id="4dfb747ca0c1f786f335009acb94d658467406ef" translate="yes" xml:space="preserve">
          <source>OrderedOptions#method_missing</source>
          <target state="translated">OrderedOptions#method_missing</target>
        </trans-unit>
        <trans-unit id="9e0731663e518cae644526e87a0f07ce6e06da60" translate="yes" xml:space="preserve">
          <source>OrderedOptions#respond_to_missing?</source>
          <target state="translated">OrderedOptions#respond_to_missing?</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="fab2cdcb0be97dcee2dba5e417fb9055f1882f2e" translate="yes" xml:space="preserve">
          <source>Ordering callbacks</source>
          <target state="translated">콜백 주문</target>
        </trans-unit>
        <trans-unit id="c3e0fa2a51ddf9d54aad39d4773739860c37c59c" translate="yes" xml:space="preserve">
          <source>Ordering of test cases</source>
          <target state="translated">테스트 케이스 주문</target>
        </trans-unit>
        <trans-unit id="b1c96a0c3f44b5348309abe5683ccb9be1ee4720" translate="yes" xml:space="preserve">
          <source>Ordinal returns the suffix used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="translated">서수는 1, 2, 3, 4 등의 순서대로 위치를 나타내는 데 사용되는 접미사를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="234ebf34ca83ec1a7ef1b9c727705d802ebcb2ad" translate="yes" xml:space="preserve">
          <source>Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="translated">서수는 숫자를 순서대로 1, 2, 3, 4와 같이 순서를 나타내는 데 사용되는 서수 문자열로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="8236fc5a62a8a4a8a0f05fa3a4f168d16b4015ef" translate="yes" xml:space="preserve">
          <source>Organization of Locale Files</source>
          <target state="translated">로케일 파일 구성</target>
        </trans-unit>
        <trans-unit id="d18e01afbf0e5b1eeb3efa3d549e66dfa5015f34" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;helpers&quot;&gt;&lt;code&gt;Helpers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e880b1de182f244bb77847d912e987df78ccc8" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;helpers&quot;&gt;Helpers&lt;/a&gt;</source>
          <target state="translated">다른 &lt;a href=&quot;helpers&quot;&gt;도우미&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eebb2f9cdc2951c739e98100dec8f3363c3a726b" translate="yes" xml:space="preserve">
          <source>Other Components</source>
          <target state="translated">다른 구성 요소</target>
        </trans-unit>
        <trans-unit id="fae03cc5ec3db05ad91a565c0f5d8f4fd2384cdc" translate="yes" xml:space="preserve">
          <source>Other Configurations</source>
          <target state="translated">다른 구성</target>
        </trans-unit>
        <trans-unit id="625a1d396eaa80f4cad2a3b6a932959b98568e22" translate="yes" xml:space="preserve">
          <source>Other Gem Dependencies</source>
          <target state="translated">다른 보석 의존성</target>
        </trans-unit>
        <trans-unit id="f54c0ef7fb66478fc86f1826784d079a09bd05d7" translate="yes" xml:space="preserve">
          <source>Other Helpers of Interest</source>
          <target state="translated">관심있는 다른 도우미</target>
        </trans-unit>
        <trans-unit id="7ae765936f631daf3aee7c8cda3fdea24003782b" translate="yes" xml:space="preserve">
          <source>Other Middleware</source>
          <target state="translated">다른 미들웨어</target>
        </trans-unit>
        <trans-unit id="e9a64990a17e005b82e9a7862ca72e618bda5a31" translate="yes" xml:space="preserve">
          <source>Other Resources</source>
          <target state="translated">기타 자료</target>
        </trans-unit>
        <trans-unit id="9886dff852162d7b391293133a1dfac4eb182bc5" translate="yes" xml:space="preserve">
          <source>Other Security Considerations</source>
          <target state="translated">다른 보안 고려 사항</target>
        </trans-unit>
        <trans-unit id="97b234d8e57efd5e0d141a802475bd8db710c26d" translate="yes" xml:space="preserve">
          <source>Other Ways to Use Filters</source>
          <target state="translated">필터를 사용하는 다른 방법</target>
        </trans-unit>
        <trans-unit id="0d5f4f72132946c433741e5405bc096c29b477e1" translate="yes" xml:space="preserve">
          <source>Other authentication methods are available for Rails applications. Two popular authentication add-ons for Rails are the &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; rails engine and the &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; gem, along with a number of others.</source>
          <target state="translated">Rails 애플리케이션에 다른 인증 방법을 사용할 수 있습니다. Rails에 널리 사용되는 두 가지 인증 애드온은 &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; rails 엔진과 &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; gem과 함께 여러 가지입니다.</target>
        </trans-unit>
        <trans-unit id="4f7a2a9b3af338ac1accecdfa4a69534e1ad2e17" translate="yes" xml:space="preserve">
          <source>Other blocking operations performed inside the Executor block (which includes all application code), however, can needlessly retain the &lt;code&gt;running&lt;/code&gt; lock. If another thread encounters a constant it must autoload, this can cause a deadlock.</source>
          <target state="translated">그러나 Executor 블록 (모든 응용 프로그램 코드 포함) 내에서 수행 된 다른 차단 작업은 &lt;code&gt;running&lt;/code&gt; 잠금을 불필요하게 유지할 수 있습니다 . 다른 스레드에 상수가 발생하면 자동로드해야하므로 교착 상태가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="830c52bd0dcd294842be90215c1c713085511837" translate="yes" xml:space="preserve">
          <source>Other engines, such as Devise, handle this a little differently by making you specify custom helpers (such as &lt;code&gt;devise_for&lt;/code&gt;) in the routes. These helpers do exactly the same thing, mounting pieces of the engines's functionality at a pre-defined path which may be customizable.</source>
          <target state="translated">Devise와 같은 다른 엔진 은 경로에서 사용자 지정 도우미 (예 : &lt;code&gt;devise_for&lt;/code&gt; ) 를 지정하여이를 조금 다르게 처리합니다 . 이러한 도우미는 엔진 기능의 일부를 사용자 정의 할 수있는 사전 정의 된 경로에 장착하여 정확히 동일한 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1e7d830fa844d239fe825fcb4fdd3552dbd8bbb9" translate="yes" xml:space="preserve">
          <source>Other form controls worth mentioning are text areas, hidden fields, password fields, number fields, date and time fields, and many more:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acffdfa21f8bb476a3cdcd269b91fe48dbb8dfd" translate="yes" xml:space="preserve">
          <source>Other form controls worth mentioning are textareas, password fields, hidden fields, search fields, telephone fields, date fields, time fields, color fields, datetime-local fields, month fields, week fields, URL fields, email fields, number fields, and range fields:</source>
          <target state="translated">언급 할 가치가있는 다른 양식 컨트롤에는 텍스트 영역, 암호 필드, 숨겨진 필드, 검색 필드, 전화 필드, 날짜 필드, 시간 필드, 색상 필드, 날짜 / 지역 필드, 월 필드, 주 필드, URL 필드, 전자 메일 필드, 숫자 필드 및 범위 필드 :</target>
        </trans-unit>
        <trans-unit id="d6b50fdb143f86261971aa63def42c427f9c9d35" translate="yes" xml:space="preserve">
          <source>Other helpers use the &lt;code&gt;_tag&lt;/code&gt; suffix to indicate whether a helper is a barebones helper or one that operates on model objects. With dates and times, &lt;code&gt;select_date&lt;/code&gt;, &lt;code&gt;select_time&lt;/code&gt; and &lt;code&gt;select_datetime&lt;/code&gt; are the barebones helpers, &lt;code&gt;date_select&lt;/code&gt;, &lt;code&gt;time_select&lt;/code&gt; and &lt;code&gt;datetime_select&lt;/code&gt; are the equivalent model object helpers.</source>
          <target state="translated">다른 헬퍼는 &lt;code&gt;_tag&lt;/code&gt; 접미사를 사용하여 헬퍼가 베어 본 헬퍼인지 또는 모델 객체에서 작동하는 헬퍼인지를 나타냅니다. 날짜와 시간이있는 &lt;code&gt;select_date&lt;/code&gt; , &lt;code&gt;select_time&lt;/code&gt; 및 &lt;code&gt;select_datetime&lt;/code&gt; 은 기본 도우미이고 &lt;code&gt;date_select&lt;/code&gt; , &lt;code&gt;time_select&lt;/code&gt; 및 &lt;code&gt;datetime_select&lt;/code&gt; 는 동등한 모델 객체 도우미입니다.</target>
        </trans-unit>
        <trans-unit id="f2cab26bf4d959d62d893f5250b7f6098ab6bd08" translate="yes" xml:space="preserve">
          <source>Other names simply map to a parameter as in the case of &lt;code&gt;:id&lt;/code&gt;.</source>
          <target state="translated">다른 이름은 단순히 &lt;code&gt;:id&lt;/code&gt; 의 경우와 같이 매개 변수에 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="f15c76b7bfea78e807b8afdf64ed8d6b9ef0d4c1" translate="yes" xml:space="preserve">
          <source>Other namespaces can be added to the root element:</source>
          <target state="translated">루트 요소에 다른 네임 스페이스를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9561c9165412cff7550a46ff709053bba06eb3b4" translate="yes" xml:space="preserve">
          <source>Other options will be handled by the specific cache store implementation. Internally, &lt;a href=&quot;store#method-i-fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt; calls read_entry, and calls write_entry on a cache miss. &lt;code&gt;options&lt;/code&gt; will be passed to the &lt;a href=&quot;store#method-i-read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;store#method-i-write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bac31dd685f18ba9e6e1193d5c12c6e7fadab12" translate="yes" xml:space="preserve">
          <source>Other options will be handled by the specific cache store implementation. Internally, &lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt; calls read_entry, and calls write_entry on a cache miss. &lt;code&gt;options&lt;/code&gt; will be passed to the &lt;a href=&quot;store#method-i-read&quot;&gt;read&lt;/a&gt; and &lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt; calls.</source>
          <target state="translated">다른 옵션은 특정 캐시 저장소 구현에 의해 처리됩니다. 내부적으로 &lt;a href=&quot;store#method-i-fetch&quot;&gt;페치&lt;/a&gt; 는 read_entry를 호출하고 캐시 미스에서 write_entry를 호출합니다. &lt;code&gt;options&lt;/code&gt; 은 &lt;a href=&quot;store#method-i-read&quot;&gt;읽기&lt;/a&gt; 및 &lt;a href=&quot;store#method-i-write&quot;&gt;쓰기&lt;/a&gt; 호출 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="599ffbd6e95e9102a19874cfc765e0666e6a5f25" translate="yes" xml:space="preserve">
          <source>Other options:</source>
          <target state="translated">다른 옵션:</target>
        </trans-unit>
        <trans-unit id="5b3332c9f3937213720f845d4ac9ee1edb90cf9d" translate="yes" xml:space="preserve">
          <source>Other plugins may add additional modules. You can get a list of all modules included into &lt;code&gt;ActionController::API&lt;/code&gt; in the rails console:</source>
          <target state="translated">다른 플러그인은 추가 모듈을 추가 할 수 있습니다. 레일 콘솔에서 &lt;code&gt;ActionController::API&lt;/code&gt; 에 포함 된 모든 모듈 목록을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a36e24362db8d00a039fa3e864e49bf3c4a454d4" translate="yes" xml:space="preserve">
          <source>Other plugins, including Active Record, may add additional middleware. In general, these middleware are agnostic to the type of application you are building, and make sense in an API-only Rails application.</source>
          <target state="translated">Active Record를 포함한 다른 플러그인은 미들웨어를 추가 할 수 있습니다. 일반적으로 이러한 미들웨어는 빌드중인 애플리케이션 유형에 관계없이 API 전용 Rails 애플리케이션에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="aedf6a5786c078a2cfdc5f48960cfa1333f86471" translate="yes" xml:space="preserve">
          <source>Other popular testing approaches and plugins.</source>
          <target state="translated">다른 인기있는 테스트 방식 및 플러그인.</target>
        </trans-unit>
        <trans-unit id="a47f5a683ca5a39d9b1514343c124845320bb602" translate="yes" xml:space="preserve">
          <source>Others remove columns when they migrate up instead of down:</source>
          <target state="translated">다른 사람들은 다운 대신 마이그레이션 할 때 열을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="37ac804a990007dc6304805bea8e1b38b1a18234" translate="yes" xml:space="preserve">
          <source>Otherwise accepts the same options as text_field_tag.</source>
          <target state="translated">그렇지 않으면 text_field_tag와 동일한 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="85f9f1958a60e4e904e41cbb2365f4dbd85d71ac" translate="yes" xml:space="preserve">
          <source>Otherwise raises &lt;code&gt;ActionController::ParameterMissing&lt;/code&gt;:</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;ActionController::ParameterMissing&lt;/code&gt; 을 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="ffdd72cc23a2041167e980413c8165ef15604bd4" translate="yes" xml:space="preserve">
          <source>Otherwise the root element is &amp;ldquo;objects&amp;rdquo;:</source>
          <target state="translated">그렇지 않으면 루트 요소는 &quot;개체&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="d5cd5b915cbdb8da5ee2ba3178987d2c61bb672d" translate="yes" xml:space="preserve">
          <source>Otherwise you'll get this error:</source>
          <target state="translated">그렇지 않으면이 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="54580cb3434b8b0cdd18cab31cb152aae8e86621" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &quot;nil&quot; set to &quot;true&quot; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &quot;type&quot; is added as well according to the following mapping:</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;key&lt;/code&gt; 가 태그 인 노드가 텍스트 노드로서 &lt;code&gt;value&lt;/code&gt; 의 문자열 표현으로 작성됩니다 . &lt;code&gt;value&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 인 경우 &quot;true&quot;로 설정된 &quot;nil&quot;속성이 추가됩니다. &lt;code&gt;:skip_types&lt;/code&gt; 옵션 이 존재하고 true가 아닌 경우, &quot;type&quot;속성이 다음 맵핑에 따라 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b654bd32ac21eaac826fe8d3e81294668380e3d9" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &amp;ldquo;nil&amp;rdquo; set to &amp;ldquo;true&amp;rdquo; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &amp;ldquo;type&amp;rdquo; is added as well according to the following mapping:</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;key&lt;/code&gt; 가 태그 인 노드가 텍스트 노드로서 &lt;code&gt;value&lt;/code&gt; 의 문자열 표현으로 작성됩니다 . 경우 &lt;code&gt;value&lt;/code&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; 을 &quot;true&quot;로로 설정 &quot;전무&quot;속성 추가됩니다. &lt;code&gt;:skip_types&lt;/code&gt; 옵션 이 존재 하지 않고 true가 아닌 한, &quot;type&quot;속성이 다음 매핑에 따라 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="6083cf987607089d6d26e0ce040a8e773f89b71c" translate="yes" xml:space="preserve">
          <source>Otherwise, a partial is rendered using the second parameter as the locals hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff985b48294c27e9963776306b1e5656a018dd5" translate="yes" xml:space="preserve">
          <source>Otherwise, an array with the argument as its single element is returned.</source>
          <target state="translated">그렇지 않으면 인수를 단일 요소로하는 배열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="0a46a92c0871a1f545a82e3e2650b051d10a817f" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and if the value of &lt;code&gt;to_ary&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;, it is returned.</source>
          <target state="translated">그렇지 않은 경우에 인수 응답하면 &lt;code&gt;to_ary&lt;/code&gt; 의 값 경우가 호출, 그리고 &lt;code&gt;to_ary&lt;/code&gt; 이 아닌 &lt;code&gt;nil&lt;/code&gt; , 그것은 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="72b84b854ca5bed9f78d1e328de5b12c40f1d7d3" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and its result returned.</source>
          <target state="translated">그렇지 않으면 인수가 &lt;code&gt;to_ary&lt;/code&gt; 에 응답하면 호출되고 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="414d32a57c350caae7ff14388456d7ee72359586" translate="yes" xml:space="preserve">
          <source>Otherwise, in every request Rails walks the application tree to check if anything has changed.</source>
          <target state="translated">그렇지 않으면, 모든 요청에서 Rails는 변경된 것을 확인하기 위해 응용 프로그램 트리를 안내합니다.</target>
        </trans-unit>
        <trans-unit id="8f36700a4ed306bdca5493ebd8253ef6986e00cf" translate="yes" xml:space="preserve">
          <source>Otherwise, returns an array with the argument as its single element.</source>
          <target state="translated">그렇지 않으면 인수를 단일 요소로 사용하여 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3485420d5e1b49bbbeba6112829799e07b174463" translate="yes" xml:space="preserve">
          <source>Otherwise, the method re-raises the first exception found:</source>
          <target state="translated">그렇지 않으면이 메소드는 발견 된 첫 번째 예외를 다시 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="79c9b95f925ab45cf4a279e41a46a5994bcadf92" translate="yes" xml:space="preserve">
          <source>Otherwise, the value received as argument, which defaults to &lt;code&gt;nil&lt;/code&gt;, is the separator:</source>
          <target state="translated">그렇지 않으면, 인수로 수신 된 값 (기본값은 &lt;code&gt;nil&lt;/code&gt; )이 분리 기호입니다.</target>
        </trans-unit>
        <trans-unit id="16fc7af248b36a9a8b5a66debb1f5e507999577d" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;edit&lt;/code&gt; form will look the same as our &lt;code&gt;new&lt;/code&gt; form. Even the code will be the same, thanks to the Rails form builder and resourceful routing. The form builder automatically configures the form to make the appropriate kind of request, based on whether the model object has been previously saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d5bd4dc7bbb64daeee7999f816b10fc1419a87" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;edit&lt;/code&gt; page looks very similar to the &lt;code&gt;new&lt;/code&gt; page; in fact, they both share the same code for displaying the form. Let's remove this duplication by using a view partial. By convention, partial files are prefixed with an underscore.</source>
          <target state="translated">우리의 &lt;code&gt;edit&lt;/code&gt; 페이지는 매우 비슷 &lt;code&gt;new&lt;/code&gt; 페이지; 실제로 둘 다 양식을 표시하기 위해 동일한 코드를 공유합니다. 뷰 부분을 사용하여이 중복을 제거합시다. 일반적으로 부분 파일은 밑줄로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="2e2ce9b9e13fd8245af3e94ec150aa030c6a70af" translate="yes" xml:space="preserve">
          <source>Our Rails application receives this request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82eeec9fd8f73f99fcc6143ff8b19533c75db304" translate="yes" xml:space="preserve">
          <source>Our Rubyist instinct quickly sees some redundancy in there: If classes were defined in files matching their name, couldn't their loading be automated somehow? We could save scanning the file for dependencies, which is brittle.</source>
          <target state="translated">우리의 Rubyist 본능은 거기에 약간의 중복성을 빠르게 보게됩니다 : 클래스가 그들의 이름과 일치하는 파일에 정의 되었다면,로드를 어떻게 든 자동화 할 수 없었습니까? 의존성에 대한 파일 검사를 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6e45b9cc1b4d086cee8e2c7013c2bc9acac8f0d" translate="yes" xml:space="preserve">
          <source>Our new generator is quite simple: it inherits from &lt;code&gt;Rails::Generators::Base&lt;/code&gt; and has one method definition. When a generator is invoked, each public method in the generator is executed sequentially in the order that it is defined. Finally, we invoke the &lt;code&gt;create_file&lt;/code&gt; method that will create a file at the given destination with the given content. If you are familiar with the Rails Application Templates API, you'll feel right at home with the new generators API.</source>
          <target state="translated">우리의 새로운 제너레이터는 매우 간단합니다. &lt;code&gt;Rails::Generators::Base&lt;/code&gt; 상속 받으며 메소드 정의가 하나 있습니다. 생성기가 호출되면 생성기의 각 공용 메소드가 정의 된 순서대로 순차적으로 실행됩니다. 마지막으로, 주어진 내용으로 주어진 대상에 파일을 생성하는 &lt;code&gt;create_file&lt;/code&gt; 메소드를 호출합니다 . Rails Application Templates API에 익숙하다면 새로운 제너레이터 API를 집에서 느낄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1bd646f38a3eef656ac0e0c5c2bb44de5157d99" translate="yes" xml:space="preserve">
          <source>Our test should now look something as what follows. Disregard the other tests for now, we're leaving them out for brevity.</source>
          <target state="translated">테스트 결과는 다음과 같습니다. 현재 다른 테스트는 무시하고 간결하게하기 위해 테스트를 생략합니다.</target>
        </trans-unit>
        <trans-unit id="95461b950981122aa65ad0a7032ed4e287b96375" translate="yes" xml:space="preserve">
          <source>Out of the box, only &lt;code&gt;:json&lt;/code&gt; is supported. But for any custom MIME types you've registered, you can add your own encoders with:</source>
          <target state="translated">&lt;code&gt;:json&lt;/code&gt; 으로 : json 만 지원됩니다. 그러나 등록한 사용자 지정 MIME 유형의 경우 다음을 사용하여 고유 한 인코더를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9cc29509d84069896dfef67f7c4cab5f0313961" translate="yes" xml:space="preserve">
          <source>Output Safety</source>
          <target state="translated">출력 안전</target>
        </trans-unit>
        <trans-unit id="e6e28eb9764c2a5229fdbe174f04f0ae264c0938" translate="yes" xml:space="preserve">
          <source>Output the contents of a file in the template's &lt;code&gt;source_path&lt;/code&gt;, usually a README.</source>
          <target state="translated">템플릿의 &lt;code&gt;source_path&lt;/code&gt; (일반적으로 README) 파일의 내용을 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="db12a660e44a55964f23231b7a5be02a5431ac7b" translate="yes" xml:space="preserve">
          <source>Outputs a deprecation warning to the output configured by &lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt;.</source>
          <target state="translated">사용 중단 경고를 &lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt; 구성된 출력으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="5073681bae3f53719b2d119a4e559576cfc4e4cc" translate="yes" xml:space="preserve">
          <source>Outputs a select box like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a799df6908de749cf99e44f989a579ffc9e4173f" translate="yes" xml:space="preserve">
          <source>Outputs select boxes like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd45310d7cdd6bf8d77dab304bf862ac96670313" translate="yes" xml:space="preserve">
          <source>Outputs text along with how long it took to run its block. If the block returns an integer it assumes it is the number of rows affected.</source>
          <target state="translated">블록을 실행하는 데 걸린 시간과 함께 텍스트를 출력합니다. 블록이 정수를 반환하면 영향을받는 행 수라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="6ee76fa98a639a0ac269010b7032639b0a171647" translate="yes" xml:space="preserve">
          <source>Outputs:</source>
          <target state="translated">Outputs:</target>
        </trans-unit>
        <trans-unit id="2cad32653578534c0fce4b84f3d17dfe365988ae" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, manipulate &lt;code&gt;ActiveStorage.analyzers&lt;/code&gt; instead.</source>
          <target state="translated">Rails 애플리케이션 외부에서 &lt;code&gt;ActiveStorage.analyzers&lt;/code&gt; 대신 조작하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf990db8f5aef3dcee23798a692bb46525a2324f" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, modify &lt;code&gt;ActiveStorage.previewers&lt;/code&gt; instead.</source>
          <target state="translated">Rails 애플리케이션 외부에서 &lt;code&gt;ActiveStorage.previewers&lt;/code&gt; 를 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="9eb06d2788e90ddfe556348a6c5937f5f35cd508" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;AbstractController::Base#process_action&lt;/code&gt; to run the &lt;code&gt;process_action&lt;/code&gt; callbacks around the normal behavior.</source>
          <target state="translated">정상적인 동작에 대해 &lt;code&gt;process_action&lt;/code&gt; 콜백 을 실행하려면 &lt;code&gt;AbstractController::Base#process_action&lt;/code&gt; 을 재정의 하십시오.</target>
        </trans-unit>
        <trans-unit id="53e94313642caff82ab1212d6d182d25d760d8ec" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-GET&quot;&gt;#GET&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">무관 한 액세스를 지원하도록 랙의 &lt;a href=&quot;request#method-i-GET&quot;&gt;#GET&lt;/a&gt; 방법을 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2a531a0ffbd70dccc6aed08cbd3243abf2efc00" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method to support indifferent access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7919d6c7900a9ba2c6cb14bf7e61b2f06e55d0e" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-POST&quot;&gt;#POST&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">무관 한 액세스를 지원하도록 랙의 &lt;a href=&quot;request#method-i-POST&quot;&gt;#POST&lt;/a&gt; 방법을 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="59c44bd820667c81a8ab50744c4e43e903e079ce" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; method to support indifferent access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed186c4c96af29b90fa2e8ff78f11527c0c5d78" translate="yes" xml:space="preserve">
          <source>Override the default form builder for all views rendered by this controller and any of its descendants. Accepts a subclass of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;.</source>
          <target state="translated">이 컨트롤러 및 해당 하위 항목에서 렌더링 한 모든보기에 대한 기본 양식 작성기를 재정의하십시오. &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 의 서브 클래스를 승인합니다 .</target>
        </trans-unit>
        <trans-unit id="571d157055fbe9494924014185113ca02f5063d6" translate="yes" xml:space="preserve">
          <source>Override the template to digest by passing &lt;code&gt;:template&lt;/code&gt; to &lt;code&gt;fresh_when&lt;/code&gt; and &lt;code&gt;stale?&lt;/code&gt; calls. For example:</source>
          <target state="translated">&lt;code&gt;:template&lt;/code&gt; to &lt;code&gt;fresh_when&lt;/code&gt; and &lt;code&gt;stale?&lt;/code&gt; 을 전달하여 다이제스트 할 템플릿을 재정의합니다 . 전화. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="659843aa814204b022a832480caa1f4343072659" translate="yes" xml:space="preserve">
          <source>Override this method if you want to customize when detailed exceptions must be shown. This method is only called when &lt;code&gt;consider_all_requests_local&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. By default, it returns &lt;code&gt;false&lt;/code&gt;, but someone may set it to &lt;code&gt;request.local?&lt;/code&gt; so local requests in production still show the detailed exception pages.</source>
          <target state="translated">자세한 예외를 표시해야 할 때 사용자 정의하려는 경우이 메소드를 대체하십시오. &lt;code&gt;consider_all_requests_local&lt;/code&gt; 이 &lt;code&gt;false&lt;/code&gt; 인 경우에만이 메소드가 호출됩니다 . 기본적으로 &lt;code&gt;false&lt;/code&gt; 를 반환 하지만 누군가가 &lt;code&gt;request.local?&lt;/code&gt; 따라서 프로덕션의 로컬 요청에는 여전히 자세한 예외 페이지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c42a76cfef9d5dca0685def9c9a30426da14b5d6" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it return a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cbba4c825939538cd3c4052d8c629401395619" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it return a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; of metadata.</source>
          <target state="translated">구체적 서브 클래스에서이 메소드를 대체하십시오. 메타 데이터 &lt;a href=&quot;../hash&quot;&gt;해시&lt;/a&gt; 를 반환하도록 합니다.</target>
        </trans-unit>
        <trans-unit id="ccda585cbf2158ac6aae0522f1b4ebe6798fdc6e" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything accepted by &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;&lt;code&gt;ActiveStorage::Attached::One#attach&lt;/code&gt;&lt;/a&gt;). Pass the additional options to the underlying blob that is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7012fde9def053cf38f8839597f7a9e51474af2c" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything accepted by &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;ActiveStorage::Attached::One#attach&lt;/a&gt;).</source>
          <target state="translated">구체적 서브 클래스에서이 메소드를 대체하십시오. &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;첨부&lt;/a&gt; 가능한 미리보기 이미지 (즉, ActiveStorage :: Attached :: One # attach에서 허용되는 이미지 )를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="ea62c6865b9d12d1a6525780dd25898deabdfa91" translate="yes" xml:space="preserve">
          <source>Override this method in a module to change the default behavior.</source>
          <target state="translated">기본 동작을 변경하려면 모듈에서이 메소드를 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="1e4dfdfb3026247d292bbe54b879d99d5ae0cba6" translate="yes" xml:space="preserve">
          <source>Override this method in subclasses with validation logic, adding errors to the records &lt;code&gt;errors&lt;/code&gt; array where necessary.</source>
          <target state="translated">유효성 검사 논리를 사용하여 서브 클래스에서이 메소드를 대체하고 필요한 경우 레코드 &lt;code&gt;errors&lt;/code&gt; 배열에 오류를 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="2dd08da67482a0c2c313df115f9a10cc17fc9d73" translate="yes" xml:space="preserve">
          <source>Override to return the quoted table name for assignment. Defaults to table quoting.</source>
          <target state="translated">할당 할 인용 된 테이블 이름을 반환하도록 재정의합니다. 기본값은 테이블 인용입니다.</target>
        </trans-unit>
        <trans-unit id="a6e61b07bdd533dfaaa49e91b7ff70db783ff858" translate="yes" xml:space="preserve">
          <source>Override to turn off referential integrity while executing &lt;code&gt;&amp;amp;block&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;block&lt;/code&gt; 을 실행하는 동안 참조 무결성을 끄려면 무시하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9a21b54296187abac059d1a77a2e0b1268dbb78" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../../abstractcontroller/base#method-i-controller_path&quot;&gt;&lt;code&gt;AbstractController::Base#controller_path&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fb530427339453796067daade2efe913742636" translate="yes" xml:space="preserve">
          <source>Overrides may be organized in a dedicated directory &lt;code&gt;app/overrides&lt;/code&gt; that is preloaded in a &lt;code&gt;to_prepare&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c12a7eb4d3f6a7bc6548f5bd29111edbbe19f4" translate="yes" xml:space="preserve">
          <source>Overrides the application config to specify if an error should be raised when an order is present in the relation.</source>
          <target state="translated">주문이 관계에있을 때 오류가 발생해야하는지 여부를 지정하기 위해 응용 프로그램 구성을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="dee469c249d0b808f02f56c8e00d57f1ac89da78" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005 14:30:00 +0000&amp;rdquo;.</source>
          <target state="translated">사람이 읽을 수있는 기본 검사 방법 (예 : &quot;Mon, 21 Feb 2005 14:30:00 +0000&quot;)을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="f7e80c9f4d92d1acebc7a3aa867dcf62d6b13f32" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005&amp;rdquo;</source>
          <target state="translated">사람이 읽을 수있는 방법으로 기본 검사 방법을 재정의합니다 (예 : &quot;Mon, 21 Feb 2005&quot;)</target>
        </trans-unit>
        <trans-unit id="bdcc150066449639a774339b07b0656ab30c52b4" translate="yes" xml:space="preserve">
          <source>Overrides the default resource identifier &lt;code&gt;:id&lt;/code&gt; (name of the dynamic segment used to generate the routes). You can access that segment from your controller using &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt;. In your router:</source>
          <target state="translated">기본 자원 식별자 &lt;code&gt;:id&lt;/code&gt; (라우트를 생성하는 데 사용 된 동적 세그먼트의 이름)를 대체합니다 . &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt; 사용하여 컨트롤러에서 해당 세그먼트에 액세스 할 수 있습니다 . 라우터에서 :</target>
        </trans-unit>
        <trans-unit id="ca9f6506fa932787a54e9bdb193b09d95399befe" translate="yes" xml:space="preserve">
          <source>Overriding Conditions</source>
          <target state="translated">재정의 조건</target>
        </trans-unit>
        <trans-unit id="3270cba4a12bbee17dc198df863938fcecb8dccb" translate="yes" xml:space="preserve">
          <source>Overriding Models and Controllers</source>
          <target state="translated">모델 및 컨트롤러 재정의</target>
        </trans-unit>
        <trans-unit id="9d6c57d88b0469224ce074af29a7bb1cc5f9520c" translate="yes" xml:space="preserve">
          <source>Overriding Named Route Parameters</source>
          <target state="translated">명명 된 경로 매개 변수 재정의</target>
        </trans-unit>
        <trans-unit id="89b862244aeff64fb478f03c9520e3820b7d2020" translate="yes" xml:space="preserve">
          <source>Overriding Views</source>
          <target state="translated">뷰 재정의</target>
        </trans-unit>
        <trans-unit id="b01ade22900da9d817f3e960e0000a5a3809c736" translate="yes" xml:space="preserve">
          <source>Overriding case equality method so that it returns true for &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c315e5288623e3b3ed038cc018c03e7cfb2a7b" translate="yes" xml:space="preserve">
          <source>Overriding case equality method so that it returns true for &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances</source>
          <target state="translated">&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt; 인스턴스에 대해 true를 리턴하도록 대소 문자 동등성 메소드 대체</target>
        </trans-unit>
        <trans-unit id="f70e9816d1335e9ecac8ce4349ea6c1acacddced" translate="yes" xml:space="preserve">
          <source>Overriding generated methods</source>
          <target state="translated">생성 된 메소드 재정의</target>
        </trans-unit>
        <trans-unit id="6d3b8c946ae9aa45abae96fe1f8735ec71a9507a" translate="yes" xml:space="preserve">
          <source>Overriding the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; Segments</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 세그먼트 및 &lt;code&gt;edit&lt;/code&gt; 세그먼트 재정의</target>
        </trans-unit>
        <trans-unit id="90e0d2c47827d98e652a159081209b6e9461aaa1" translate="yes" xml:space="preserve">
          <source>Overriding the Named Route Helpers</source>
          <target state="translated">명명 된 경로 도우미 재정의</target>
        </trans-unit>
        <trans-unit id="669e0882b1c84525a463608f90e7d793dfd9fb15" translate="yes" xml:space="preserve">
          <source>Overriding the Naming Conventions</source>
          <target state="translated">명명 규칙 재정의</target>
        </trans-unit>
        <trans-unit id="022551d0b5cfff55add0a874e764a3914ba97024" translate="yes" xml:space="preserve">
          <source>Overriding the Singular Form</source>
          <target state="translated">단수 형식 재정의</target>
        </trans-unit>
        <trans-unit id="2366865074e7efbeee7afe7de989a0887b46048f" translate="yes" xml:space="preserve">
          <source>Overriding the default service is done the same way as &lt;code&gt;has_one_attached&lt;/code&gt;, by using the &lt;code&gt;service&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57a79f08c0cfc90c7aa58ae5662e09a1242045c" translate="yes" xml:space="preserve">
          <source>Overview of Other Built-In Methods that Provide I18n Support</source>
          <target state="translated">I18n 지원을 제공하는 기타 내장 방법 개요</target>
        </trans-unit>
        <trans-unit id="250f8698775adafaacdd138110b24ac4b3a25c5d" translate="yes" xml:space="preserve">
          <source>Overview of helpers provided by Action View</source>
          <target state="translated">Action View에서 제공하는 헬퍼 개요</target>
        </trans-unit>
        <trans-unit id="79d8fe12b72857cd0d717cc558336c7470d3bf78" translate="yes" xml:space="preserve">
          <source>Overview of the I18n API Features</source>
          <target state="translated">I18n API 기능 개요</target>
        </trans-unit>
        <trans-unit id="f0b72a670aa3d37fcd434591b7a0698af5c095d1" translate="yes" xml:space="preserve">
          <source>Overview: How the Pieces Fit Together</source>
          <target state="translated">개요 : 조각이 서로 맞는 방법</target>
        </trans-unit>
        <trans-unit id="e58468af38728c26a2326850cb6e380597f34497" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;#modules_for_helpers&lt;/a&gt; to accept :all as argument, which loads all helpers in helpers_path.</source>
          <target state="translated">: &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;modules_for_helpers&lt;/a&gt; 를 덮어 써서 : all을 인자로 받아 들여 helpers_path의 모든 헬퍼를로드합니다.</target>
        </trans-unit>
        <trans-unit id="dd4a30fb6d3f3241d8540ee8efd968d3c88d68d8" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;&lt;code&gt;modules_for_helpers&lt;/code&gt;&lt;/a&gt; to accept :all as argument, which loads all helpers in helpers_path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377113a11fffe769ccb21030e23f3ed12c9cdb39" translate="yes" xml:space="preserve">
          <source>Overwrite if you use another logger in your log subscriber.</source>
          <target state="translated">로그 구독자에서 다른 로거를 사용하는 경우 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="fd91ce0a15e301cc12092b4fb7d5d20f779176cd" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;#_layout_for&lt;/a&gt; in the context object so it supports the case a block is passed to a partial. Returns the contents that are yielded to a layout, given a name or a block.</source>
          <target state="translated">컨텍스트 객체에서 &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;#_layout_for&lt;/a&gt; 를 덮어 써서 블록이 부분적으로 전달되는 경우를 지원합니다. 이름이나 블록이 주어지면 레이아웃에 나오는 내용을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="972e63970b01609ddcc511be0abbc2c963f93908" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;&lt;code&gt;_layout_for&lt;/code&gt;&lt;/a&gt; in the context object so it supports the case a block is passed to a partial. Returns the contents that are yielded to a layout, given a name or a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b0fe5a4f794163b7967149d7e9e868c0d3c372" translate="yes" xml:space="preserve">
          <source>Overwriting default accessors</source>
          <target state="translated">기본 접근 자 덮어 쓰기</target>
        </trans-unit>
        <trans-unit id="632cbb4fc12f547a9fb541687f690a1c40922419" translate="yes" xml:space="preserve">
          <source>PAIR_RE</source>
          <target state="translated">PAIR_RE</target>
        </trans-unit>
        <trans-unit id="aee8bc7166d89a34266bdcdf618cc34eff0a73e4" translate="yes" xml:space="preserve">
          <source>PARAMETERS_KEY</source>
          <target state="translated">PARAMETERS_KEY</target>
        </trans-unit>
        <trans-unit id="03894bbce303c9f9c81bfff9b4f44824921f46bc" translate="yes" xml:space="preserve">
          <source>PARAMETER_SEPARATOR_REGEXP</source>
          <target state="translated">PARAMETER_SEPARATOR_REGEXP</target>
        </trans-unit>
        <trans-unit id="f121cf6b1467678cdd4035a2748dc437b3974eab" translate="yes" xml:space="preserve">
          <source>PARTS</source>
          <target state="translated">PARTS</target>
        </trans-unit>
        <trans-unit id="783c9e559f81aabe784bd2a18a361eb09fab2dd9" translate="yes" xml:space="preserve">
          <source>PARTS_IN_SECONDS</source>
          <target state="translated">PARTS_IN_SECONDS</target>
        </trans-unit>
        <trans-unit id="49563801c516b55fcf9b36b38aa49d7fa71d1757" translate="yes" xml:space="preserve">
          <source>PATCH/PUT</source>
          <target state="translated">PATCH/PUT</target>
        </trans-unit>
        <trans-unit id="bcb7b622110501134d7fc62face8b2201ad5830b" translate="yes" xml:space="preserve">
          <source>PATCH/PUT update</source>
          <target state="translated">패치 / 풋 업데이트</target>
        </trans-unit>
        <trans-unit id="84c16d6a502dba6bf2d3fee213424d5d6bfb7b62" translate="yes" xml:space="preserve">
          <source>PATTERN</source>
          <target state="translated">PATTERN</target>
        </trans-unit>
        <trans-unit id="74d229d608de046fae2425ce1bf3de88fe485b7c" translate="yes" xml:space="preserve">
          <source>PERMITTED_OPTIONS</source>
          <target state="translated">PERMITTED_OPTIONS</target>
        </trans-unit>
        <trans-unit id="fd6908029161a849d74ee36b9f60d2b8ba2c087c" translate="yes" xml:space="preserve">
          <source>PERMITTED_SCALAR_TYPES</source>
          <target state="translated">PERMITTED_SCALAR_TYPES</target>
        </trans-unit>
        <trans-unit id="7e72115c5e8184f1664db535ffd560b5c9313d19" translate="yes" xml:space="preserve">
          <source>PER_ENTRY_OVERHEAD</source>
          <target state="translated">PER_ENTRY_OVERHEAD</target>
        </trans-unit>
        <trans-unit id="3f6cfaca9cb2539631de34afb5b2889fb12e4df1" translate="yes" xml:space="preserve">
          <source>PETABYTE</source>
          <target state="translated">PETABYTE</target>
        </trans-unit>
        <trans-unit id="31be469709fb845b0652caa330c99da8dd3e968e" translate="yes" xml:space="preserve">
          <source>POLICY</source>
          <target state="translated">POLICY</target>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="translated">POST</target>
        </trans-unit>
        <trans-unit id="6558fd6a36a1d6db28cadd3ec21faf8102d63e2f" translate="yes" xml:space="preserve">
          <source>POST create</source>
          <target state="translated">POST 작성</target>
        </trans-unit>
        <trans-unit id="4dcb288a15db232057a84beb4f11f41994519e90" translate="yes" xml:space="preserve">
          <source>POST create PATCH/PUT update</source>
          <target state="translated">POST PATCH / PUT 업데이트 생성</target>
        </trans-unit>
        <trans-unit id="7d3be5984ced74e5dc11668f62d29dfe705b3a55" translate="yes" xml:space="preserve">
          <source>POST()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">POST () &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64b8158d7ad4f6f15e1f37ea3bf9e1c7336f2b59" translate="yes" xml:space="preserve">
          <source>PRECISIONS</source>
          <target state="translated">PRECISIONS</target>
        </trans-unit>
        <trans-unit id="4d6909ebad0e685a6888b06fc446e18b7c06dc51" translate="yes" xml:space="preserve">
          <source>PRECOMPRESSED</source>
          <target state="translated">PRECOMPRESSED</target>
        </trans-unit>
        <trans-unit id="f812723c15ec2dcd8ff1e0f5c3451028487d137f" translate="yes" xml:space="preserve">
          <source>PREFIXED_PARTIAL_NAMES</source>
          <target state="translated">PREFIXED_PARTIAL_NAMES</target>
        </trans-unit>
        <trans-unit id="12ad8dab5ed4cd63c77c46353e2a61ae6d4c644c" translate="yes" xml:space="preserve">
          <source>PRE_CONTENT_STRINGS</source>
          <target state="translated">PRE_CONTENT_STRINGS</target>
        </trans-unit>
        <trans-unit id="b0b7ba4666a92774e0d1afe02f2e20982b307a35" translate="yes" xml:space="preserve">
          <source>PRIVATE</source>
          <target state="translated">PRIVATE</target>
        </trans-unit>
        <trans-unit id="3503939d8cdf2bedfbf2dc57507b92d04a3bc5f7" translate="yes" xml:space="preserve">
          <source>PROTECTED_IVARS</source>
          <target state="translated">PROTECTED_IVARS</target>
        </trans-unit>
        <trans-unit id="6fcc917173ee9015a6560e3977ce67bc97156a09" translate="yes" xml:space="preserve">
          <source>PROTOCOL_REGEXP</source>
          <target state="translated">PROTOCOL_REGEXP</target>
        </trans-unit>
        <trans-unit id="d1785ca28c3a4d29a6edef1520c544b838a93db3" translate="yes" xml:space="preserve">
          <source>PUBLIC</source>
          <target state="translated">PUBLIC</target>
        </trans-unit>
        <trans-unit id="0595753673b07a799cea5ec4da8674a00ed89291" translate="yes" xml:space="preserve">
          <source>Page Caching</source>
          <target state="translated">페이지 캐싱</target>
        </trans-unit>
        <trans-unit id="f0aee076e25e3e98bd0dba60b5e41a072af0fb2b" translate="yes" xml:space="preserve">
          <source>Page Caching cannot be used for actions that have before filters - for example, pages that require authentication. This is where Action Caching comes in. Action Caching works like Page Caching except the incoming web request hits the Rails stack so that before filters can be run on it before the cache is served. This allows authentication and other restrictions to be run while still serving the result of the output from a cached copy.</source>
          <target state="translated">페이지 캐싱은 필터 이전에 수행 된 작업 (예 : 인증이 필요한 페이지)에는 사용할 수 없습니다. 여기에서 조치 캐싱이 시작됩니다. 조치 캐싱은 수신 웹 요청이 Rails 스택에 도달하여 캐시가 제공되기 전에 필터를 실행할 수 있다는 점을 제외하고 페이지 캐싱과 같이 작동합니다. 이를 통해 캐시 된 사본의 출력 결과를 계속 제공하면서 인증 및 기타 제한 사항을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29df9fff8fa01468100d5eb51c3265997a1d99f1" translate="yes" xml:space="preserve">
          <source>Page Caching has been removed from Rails 4. See the &lt;a href=&quot;https://github.com/rails/actionpack-page_caching&quot;&gt;actionpack-page_caching gem&lt;/a&gt;.</source>
          <target state="translated">페이지 캐싱이 Rails 4에서 제거되었습니다 . &lt;a href=&quot;https://github.com/rails/actionpack-page_caching&quot;&gt;actionpack-page_caching gem을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9299d5eeb4a18817fc53da773b387a9845a190f9" translate="yes" xml:space="preserve">
          <source>Page Change Events</source>
          <target state="translated">페이지 변경 이벤트</target>
        </trans-unit>
        <trans-unit id="01c14f44cdf9f738128c66f96575d2dd9d6b7f5a" translate="yes" xml:space="preserve">
          <source>Page caching is a Rails mechanism which allows the request for a generated page to be fulfilled by the web server (i.e. Apache or NGINX) without having to go through the entire Rails stack. While this is super fast it can't be applied to every situation (such as pages that need authentication). Also, because the web server is serving a file directly from the filesystem you will need to implement cache expiration.</source>
          <target state="translated">페이지 캐싱은 생성 된 페이지에 대한 요청을 전체 Rails 스택을 거치지 않고 웹 서버 (예 : Apache 또는 NGINX)로 이행 할 수있는 Rails 메커니즘입니다. 이것은 매우 빠르지 만 모든 상황 (예 : 인증이 필요한 페이지)에 적용 할 수는 없습니다. 또한 웹 서버가 파일 시스템에서 직접 파일을 제공하기 때문에 캐시 만료를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1355b7be3ad2f138ebc1eaaef9d3a2877e2d5df" translate="yes" xml:space="preserve">
          <source>Pairs passed to &lt;code&gt;options_for_select&lt;/code&gt; should have the text first and the value second, however with &lt;code&gt;options_from_collection_for_select&lt;/code&gt; should have the value method first and the text method second.</source>
          <target state="translated">&lt;code&gt;options_for_select&lt;/code&gt; 에 전달 된 쌍 은 텍스트를 먼저 두 번째 값으로 설정 해야 하지만 &lt;code&gt;options_from_collection_for_select&lt;/code&gt; 를 사용하면 값 메소드를 먼저 사용하고 텍스트 메소드를 두 번째로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="25f56d90fcfd17280003892c8ccacdb0fa403726" translate="yes" xml:space="preserve">
          <source>Parallel Testing</source>
          <target state="translated">병렬 테스트</target>
        </trans-unit>
        <trans-unit id="1d3e4a56ef085e1f6d530ebe735f2ea7925d261c" translate="yes" xml:space="preserve">
          <source>Parallel Testing with Processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e7444f10c0b930c425af0461c5337c0b53c120" translate="yes" xml:space="preserve">
          <source>Parallel Testing with Threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18e876b783f6455ea0fddc8eaea682e4a6fbe1a" translate="yes" xml:space="preserve">
          <source>Parallel testing allows you to parallelize your test suite. While forking processes is the default method, threading is supported as well. Running tests in parallel reduces the time it takes your entire test suite to run.</source>
          <target state="translated">병렬 테스트를 통해 테스트 스위트를 병렬화 할 수 있습니다. 포크 프로세스가 기본 방법이지만 스레딩도 지원됩니다. 테스트를 병렬로 실행하면 전체 테스트 스위트를 실행하는 데 걸리는 시간이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="221ea1b12f42a6a55d52bf6d5cfb5d76a78f81ff" translate="yes" xml:space="preserve">
          <source>Parallel testing with processes</source>
          <target state="translated">프로세스를 이용한 병렬 테스트</target>
        </trans-unit>
        <trans-unit id="412eec413ecf3c1ff121f0f86e087c63e0b7be10" translate="yes" xml:space="preserve">
          <source>Parallel testing with threads</source>
          <target state="translated">스레드를 이용한 병렬 테스트</target>
        </trans-unit>
        <trans-unit id="e0f805c34e06e0feba3fb69efbb9cb3d55153146" translate="yes" xml:space="preserve">
          <source>Parallelizes the test suite.</source>
          <target state="translated">테스트 스위트를 병렬화합니다.</target>
        </trans-unit>
        <trans-unit id="fefc67d1ca265fb5dd938addc782a0f34fb195c8" translate="yes" xml:space="preserve">
          <source>Parameter Parsing: Want to specify your parameters as JSON instead of as a URL-encoded String? No problem. Rails will decode the JSON for you and make it available in &lt;code&gt;params&lt;/code&gt;. Want to use nested URL-encoded parameters? That works too.</source>
          <target state="translated">매개 변수 파싱 : 매개 변수를 URL 인코딩 문자열 대신 JSON으로 지정 하시겠습니까? 문제 없어요. Rails는 JSON을 디코딩하여 &lt;code&gt;params&lt;/code&gt; 에서 사용할 수 있도록합니다 . 중첩 된 URL 인코딩 매개 변수를 사용 하시겠습니까? 그것도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a4a66d075c1503c51aadb896d837605da65392cc" translate="yes" xml:space="preserve">
          <source>Parameter Restriction</source>
          <target state="translated">파라미터 제한</target>
        </trans-unit>
        <trans-unit id="645e054aea0b8233084b6a4f61680bab34d2428f" translate="yes" xml:space="preserve">
          <source>ParameterEncoding</source>
          <target state="translated">ParameterEncoding</target>
        </trans-unit>
        <trans-unit id="a84f9e17c4c0631589680174cc3e50ef9744ee53" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods</source>
          <target state="translated">ParameterEncoding::ClassMethods</target>
        </trans-unit>
        <trans-unit id="c4546575f6e6e13dd391577e8055ad2c8233977e" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods#skip_parameter_encoding</source>
          <target state="translated">ParameterEncoding::ClassMethods#skip_parameter_encoding</target>
        </trans-unit>
        <trans-unit id="657e4a6a1c074a4e23682d693297aea2064d2dbf" translate="yes" xml:space="preserve">
          <source>ParameterFilter</source>
          <target state="translated">ParameterFilter</target>
        </trans-unit>
        <trans-unit id="62a290ca1e0d0831e035465b2ba78943075494d5" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter</source>
          <target state="translated">ParameterFilter#filter</target>
        </trans-unit>
        <trans-unit id="c28ae4e19bb8f01350e8f3a9d3681587e383e7bb" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter_param</source>
          <target state="translated">ParameterFilter#filter_param</target>
        </trans-unit>
        <trans-unit id="174a1e1695c688a92704938e6aa11599667c0087" translate="yes" xml:space="preserve">
          <source>ParameterFilter::new</source>
          <target state="translated">ParameterFilter::new</target>
        </trans-unit>
        <trans-unit id="ef431435b7dcd18d8b61cdea7d42c6f296555c0e" translate="yes" xml:space="preserve">
          <source>Parameterized</source>
          <target state="translated">Parameterized</target>
        </trans-unit>
        <trans-unit id="39bf4bba6d2b87fb7a1fe0b7be92684d011ea736" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods</source>
          <target state="translated">Parameterized::ClassMethods</target>
        </trans-unit>
        <trans-unit id="d4a34bc12e1078cadb12179769f431b961f03fa7" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods#with</source>
          <target state="translated">Parameterized::ClassMethods#with</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="61a639e77013711aef323a1dc00bfc9a22c768a9" translate="yes" xml:space="preserve">
          <source>Parameters Filtering</source>
          <target state="translated">매개 변수 필터링</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="2a96b0e3284e6cb9c0de64adf5c031b8d904a8d2" translate="yes" xml:space="preserve">
          <source>ParamsWrapper</source>
          <target state="translated">ParamsWrapper</target>
        </trans-unit>
        <trans-unit id="07979ab9cd724370034eba3a2315e1ecd2327fa9" translate="yes" xml:space="preserve">
          <source>ParamsWrapper#process_action</source>
          <target state="translated">ParamsWrapper#process_action</target>
        </trans-unit>
        <trans-unit id="44cde84177e024385d8e799bbce04ac7b46e62ca" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods</source>
          <target state="translated">ParamsWrapper::ClassMethods</target>
        </trans-unit>
        <trans-unit id="8d5da75cd03009da8eb9ca026d6f4445fa5284e4" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods#inherited</source>
          <target state="translated">ParamsWrapper::ClassMethods#inherited</target>
        </trans-unit>
        <trans-unit id="a00153c096deae306756d549f3308a9ca2da2351" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods#wrap_parameters</source>
          <target state="translated">ParamsWrapper::ClassMethods#wrap_parameters</target>
        </trans-unit>
        <trans-unit id="f836b597f967979e84ffeafb1c4d10e39c5e5fee" translate="yes" xml:space="preserve">
          <source>Parent Namespaces</source>
          <target state="translated">부모 네임 스페이스</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
