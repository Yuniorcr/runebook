<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="e4ab3e6c895a3a7baed82f7abc9b67e75510fe4c" translate="yes" xml:space="preserve">
          <source>But reject malformed input</source>
          <target state="translated">그러나 잘못된 입력을 거부</target>
        </trans-unit>
        <trans-unit id="baea68a6bd8d5f6df2f3b242802484ddb6f14a49" translate="yes" xml:space="preserve">
          <source>But there's a caveat here: How does Active Record know that the class &lt;code&gt;Square&lt;/code&gt; exists at all?</source>
          <target state="translated">그러나 여기서주의 할 점이 있습니다. Active Record는 &lt;code&gt;Square&lt;/code&gt; 클래스 가 존재 한다는 것을 어떻게 알 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="6a8da2b1c8d4062fb583e7797811521ae833d419" translate="yes" xml:space="preserve">
          <source>But there's a third way: Delegated types. With this approach, the &amp;ldquo;superclass&amp;rdquo; is a concrete class that is represented by its own table, where all the superclass attributes that are shared amongst all the &amp;ldquo;subclasses&amp;rdquo; are stored. And then each of the subclasses have their own individual tables for additional attributes that are particular to their implementation. This is similar to what's called multi-table inheritance in Django, but instead of actual inheritance, this approach uses delegation to form the hierarchy and share responsibilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400fcee0a352f668bf3d622837e886a8d6e3cf76" translate="yes" xml:space="preserve">
          <source>But this approach becomes increasingly impractical as the table size increases, since &lt;code&gt;Customer.all.each&lt;/code&gt; instructs Active Record to fetch &lt;em&gt;the entire table&lt;/em&gt; in a single pass, build a model object per row, and then keep the entire array of model objects in memory. Indeed, if we have a large number of records, the entire collection may exceed the amount of memory available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41a04124345e574ece1f10ce3fe6b627eeeee28" translate="yes" xml:space="preserve">
          <source>But this approach becomes increasingly impractical as the table size increases, since &lt;code&gt;User.all.each&lt;/code&gt; instructs Active Record to fetch &lt;em&gt;the entire table&lt;/em&gt; in a single pass, build a model object per row, and then keep the entire array of model objects in memory. Indeed, if we have a large number of records, the entire collection may exceed the amount of memory available.</source>
          <target state="translated">그러나 &lt;code&gt;User.all.each&lt;/code&gt; 가 Active Record에 &lt;em&gt;전체 테이블&lt;/em&gt; 을 단일 패스 로 페치 &lt;em&gt;하고&lt;/em&gt; 행당 모델 오브젝트를 빌드 한 다음 모델 오브젝트의 전체 배열을 메모리에 보관하도록 지시 하므로이 방법 은 테이블 크기가 증가함에 따라 점점 비실용적 입니다. 실제로 많은 수의 레코드가있는 경우 전체 컬렉션이 사용 가능한 메모리 양을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="252fbc2fa213bd11b83a84ba11eb0140899699c0" translate="yes" xml:space="preserve">
          <source>But what if you want to reload the cache, because data might have been changed by some other part of the application? Just call &lt;code&gt;reload&lt;/code&gt; on the association:</source>
          <target state="translated">그러나 응용 프로그램의 다른 부분에서 데이터가 변경되었을 수 있으므로 캐시를 다시로드하려면 어떻게해야합니까? 협회에서 &lt;code&gt;reload&lt;/code&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="0064eceabe114827327b7e9afd5152a8df8b2954" translate="yes" xml:space="preserve">
          <source>But why should &lt;code&gt;Host&lt;/code&gt; care about &lt;code&gt;Bar&lt;/code&gt;'s dependencies, namely &lt;code&gt;Foo&lt;/code&gt;? We could try to hide these from &lt;code&gt;Host&lt;/code&gt; directly including &lt;code&gt;Foo&lt;/code&gt; in &lt;code&gt;Bar&lt;/code&gt;:</source>
          <target state="translated">그러나 왜 &lt;code&gt;Host&lt;/code&gt; 가 &lt;code&gt;Bar&lt;/code&gt; 의 의존성, 즉 &lt;code&gt;Foo&lt;/code&gt; 에 관심을 가져야 합니까? &lt;code&gt;Foo&lt;/code&gt; in &lt;code&gt;Bar&lt;/code&gt; 를 포함하여 &lt;code&gt;Host&lt;/code&gt; 직접 숨길 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe541cd0809b340b0cf22191c9519c5ad244a120" translate="yes" xml:space="preserve">
          <source>But you don't have to restrict yourself to static includes. Templates can share variables amongst themselves by using instance variables defined using the regular embedding tags. Like this:</source>
          <target state="translated">그러나 정적 포함으로 제한 할 필요는 없습니다. 템플릿은 일반 임베딩 태그를 사용하여 정의 된 인스턴스 변수를 사용하여 변수를 공유 할 수 있습니다. 이처럼 :</target>
        </trans-unit>
        <trans-unit id="b79e5a4b434ab347685ec5212a9126b548607346" translate="yes" xml:space="preserve">
          <source>By convention, Rails assumes that the &lt;code&gt;id&lt;/code&gt; column is used to hold the primary key of its tables. The &lt;code&gt;:primary_key&lt;/code&gt; option allows you to specify a different column.</source>
          <target state="translated">일반적으로 Rails는 &lt;code&gt;id&lt;/code&gt; 열이 테이블의 기본 키를 보유하는 데 사용 된다고 가정합니다 . &lt;code&gt;:primary_key&lt;/code&gt; 와 옵션은 다른 열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f99a3615c46012d4f9a741c034b68249344f92b6" translate="yes" xml:space="preserve">
          <source>By convention, Rails assumes that the column in the join table used to hold the foreign key pointing to the other model is the name of that model with the suffix &lt;code&gt;_id&lt;/code&gt; added. The &lt;code&gt;:association_foreign_key&lt;/code&gt; option lets you set the name of the foreign key directly:</source>
          <target state="translated">일반적으로 Rails는 다른 모델을 가리키는 외래 키를 보유하는 데 사용되는 조인 테이블의 열이 접미사 &lt;code&gt;_id&lt;/code&gt; 가 추가 된 해당 모델의 이름이라고 가정합니다 . &lt;code&gt;:association_foreign_key&lt;/code&gt; 의 옵션은 직접 외부 키의 이름을 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0831197366da161ca2a7bb80825db30b60188a33" translate="yes" xml:space="preserve">
          <source>By convention, Rails assumes that the column in the join table used to hold the foreign key pointing to this model is the name of this model with the suffix &lt;code&gt;_id&lt;/code&gt; added. The &lt;code&gt;:foreign_key&lt;/code&gt; option lets you set the name of the foreign key directly:</source>
          <target state="translated">일반적으로 Rails는이 모델을 가리키는 외래 키를 보유하는 데 사용되는 조인 테이블의 열이 접미사 &lt;code&gt;_id&lt;/code&gt; 가 추가 된 이 모델의 이름이라고 가정합니다 . &lt;code&gt;:foreign_key&lt;/code&gt; 옵션은 직접 외부 키의 이름을 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5a2673aa31432b8ee63ac18876756d83a45c1e14" translate="yes" xml:space="preserve">
          <source>By convention, Rails assumes that the column used to hold the foreign key on the other model is the name of this model with the suffix &lt;code&gt;_id&lt;/code&gt; added. The &lt;code&gt;:foreign_key&lt;/code&gt; option lets you set the name of the foreign key directly:</source>
          <target state="translated">일반적으로 Rails는 다른 모델에서 외래 키를 보유하는 데 사용되는 열이 접미사 &lt;code&gt;_id&lt;/code&gt; 가 추가 된 이 모델의 이름이라고 가정합니다 . &lt;code&gt;:foreign_key&lt;/code&gt; 옵션은 직접 외부 키의 이름을 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="663fe609dfa005dcd544af9f930ebb35f84bd075" translate="yes" xml:space="preserve">
          <source>By convention, Rails assumes that the column used to hold the foreign key on this model is the name of the association with the suffix &lt;code&gt;_id&lt;/code&gt; added. The &lt;code&gt;:foreign_key&lt;/code&gt; option lets you set the name of the foreign key directly:</source>
          <target state="translated">일반적으로 Rails는이 모델에서 외래 키를 보유하는 데 사용되는 열이 추가 된 접미사 &lt;code&gt;_id&lt;/code&gt; 와의 연결 이름이라고 가정합니다 . &lt;code&gt;:foreign_key&lt;/code&gt; 옵션은 직접 외부 키의 이름을 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="b6f22b624ef4fdd21b2606abd0685e590066c20f" translate="yes" xml:space="preserve">
          <source>By convention, Rails assumes that the column used to hold the primary key of the association is &lt;code&gt;id&lt;/code&gt;. You can override this and explicitly specify the primary key with the &lt;code&gt;:primary_key&lt;/code&gt; option.</source>
          <target state="translated">일반적으로 Rails는 연관의 기본 키를 보유하는 데 사용되는 열이 &lt;code&gt;id&lt;/code&gt; 라고 가정합니다 . 이를 무시하고 &lt;code&gt;:primary_key&lt;/code&gt; 옵션을 사용하여 기본 키를 명시 적으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6d3c6cfa18e13af2a386acdf23d52850388ad51" translate="yes" xml:space="preserve">
          <source>By convention, Rails assumes that the column used to hold the primary key of this model is &lt;code&gt;id&lt;/code&gt;. You can override this and explicitly specify the primary key with the &lt;code&gt;:primary_key&lt;/code&gt; option.</source>
          <target state="translated">일반적으로 Rails는이 모델의 기본 키를 보유하는 데 사용 된 열이 &lt;code&gt;id&lt;/code&gt; 라고 가정합니다 . 이를 무시하고 &lt;code&gt;:primary_key&lt;/code&gt; 옵션을 사용하여 기본 키를 명시 적으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="158887d0947e34b7b55de9db6ae88e59c5196a4a" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;partialrenderer&quot;&gt;&lt;code&gt;ActionView::PartialRenderer&lt;/code&gt;&lt;/a&gt; doesn't have any local variables. The &lt;code&gt;:object&lt;/code&gt; option can be used to pass an object to the partial. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857770aa87edf4cfd394244a97bcc916a3e871f7" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;partialrenderer&quot;&gt;ActionView::PartialRenderer&lt;/a&gt; doesn't have any local variables. The &lt;code&gt;:object&lt;/code&gt; option can be used to pass an object to the partial. For instance:</source>
          <target state="translated">기본적으로 &lt;a href=&quot;partialrenderer&quot;&gt;ActionView :: PartialRenderer&lt;/a&gt; 에는 로컬 변수가 없습니다. &lt;code&gt;:object&lt;/code&gt; 옵션 부분에 개체를 전달하는 데 사용할 수 있습니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="659170628dd1b9261a94dbe4d10a860f6751764b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;ActionView::Partials::PartialRenderer&lt;/code&gt; has its object in a local variable with the same name as the template. So, given:</source>
          <target state="translated">기본적으로 &lt;code&gt;ActionView::Partials::PartialRenderer&lt;/code&gt; 에는 템플릿과 이름이 같은 로컬 변수에 객체가 있습니다. 그래서, 주어진 :</target>
        </trans-unit>
        <trans-unit id="30fa5979b399779546ae2eaaaa0e3aabcca28e34" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;form_with&lt;/code&gt; attaches the &lt;code&gt;data-remote&lt;/code&gt; attribute submitting the form via an XMLHTTPRequest in the background if an Unobtrusive JavaScript driver, like rails-ujs, is used. See the &lt;code&gt;:local&lt;/code&gt; option for more.</source>
          <target state="translated">rails-ujs와 같은 눈에 띄지 않는 JavaScript 드라이버가 사용되는 경우 기본적으로 &lt;code&gt;form_with&lt;/code&gt; 는 백그라운드에서 XMLHTTPRequest를 통해 양식을 제출 하는 &lt;code&gt;data-remote&lt;/code&gt; 속성을 첨부합니다 . 자세한 내용은 &lt;code&gt;:local&lt;/code&gt; 옵션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="95d86d6e56479fe144142ad18a4719d9a55d2e91" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;form_with&lt;/code&gt; submits forms using Ajax thereby skipping full page redirects. To make this guide easier to get into we've disabled that with &lt;code&gt;local: true&lt;/code&gt; for now.</source>
          <target state="translated">기본적으로 &lt;code&gt;form_with&lt;/code&gt; 는 Ajax를 사용하여 양식을 제출하므로 전체 페이지 리디렉션을 건너 뜁니다. 이 가이드를보다 쉽게 ​​이해할 수 있도록 &lt;code&gt;local: true&lt;/code&gt; 로 비활성화했습니다 .</target>
        </trans-unit>
        <trans-unit id="6c736a198d3f4ea8b8932e32773ff3efe5d6c2f5" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;to_param&lt;/code&gt; just calls &lt;code&gt;to_s&lt;/code&gt;:</source>
          <target state="translated">기본적으로 &lt;code&gt;to_param&lt;/code&gt; 은 &lt;code&gt;to_s&lt;/code&gt; 만 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9f220f72f7dba7a33ca581690702875f959abd2a" translate="yes" xml:space="preserve">
          <source>By default Active Record uses database features like prepared statements and advisory locks. You might need to disable those features if you're using an external connection pooler like PgBouncer:</source>
          <target state="translated">기본적으로 Active Record는 준비된 명령문 및 권고 잠금과 같은 데이터베이스 기능을 사용합니다. PgBouncer와 같은 외부 연결 풀러를 사용하는 경우 해당 기능을 비활성화해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="013893527a7f8967a00725788d9645427e5adea6" translate="yes" xml:space="preserve">
          <source>By default Rails expects that your application is running at the root (e.g. &lt;code&gt;/&lt;/code&gt;). This section explains how to run your application inside a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc510dc116e4bcc27634b6dbc398842fc099193" translate="yes" xml:space="preserve">
          <source>By default Rails expects that your application is running at the root (eg. &lt;code&gt;/&lt;/code&gt;). This section explains how to run your application inside a directory.</source>
          <target state="translated">기본적으로 Rails는 애플리케이션이 루트 (예 : &lt;code&gt;/&lt;/code&gt; ) 에서 실행 중일 것으로 예상합니다 . 이 섹션에서는 디렉토리 내에서 애플리케이션을 실행하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="cd7a686d8d2e062d847e4909a11866e28958bb81" translate="yes" xml:space="preserve">
          <source>By default Rails expects the database roles to be &lt;code&gt;writing&lt;/code&gt; and &lt;code&gt;reading&lt;/code&gt; for the primary and replica respectively. If you have a legacy system you may already have roles set up that you don't want to change. In that case you can set a new role name in your application config.</source>
          <target state="translated">기본적으로 Rails는 데이터베이스 역할 이 기본 및 복제본 각각에 대해 &lt;code&gt;writing&lt;/code&gt; 및 &lt;code&gt;reading&lt;/code&gt; 를 기대합니다 . 레거시 시스템이있는 경우 변경하지 않으려는 역할이 이미 설정되어있을 수 있습니다. 이 경우 응용 프로그램 구성에서 새 역할 이름을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2717c4a16b9c82ebc6974a604791e4b511b4e4da" translate="yes" xml:space="preserve">
          <source>By default Rails ships with three environments: &quot;development&quot;, &quot;test&quot;, and &quot;production&quot;. While these are sufficient for most use cases, there are circumstances when you want more environments.</source>
          <target state="translated">기본적으로 Rails는 &quot;development&quot;, &quot;test&quot;및 &quot;production&quot;의 세 가지 환경으로 제공됩니다. 이것들은 대부분의 사용 사례에 충분하지만 더 많은 환경을 원하는 상황이 있습니다.</target>
        </trans-unit>
        <trans-unit id="793cc98ddfdb5a26a37b96c7cda7f130dcba92b0" translate="yes" xml:space="preserve">
          <source>By default Rails will store information about your Rails environment and schema in an internal table named &lt;code&gt;ar_internal_metadata&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69006f2046cd6b96bca069ef449b5cb501626768" translate="yes" xml:space="preserve">
          <source>By default a production application will render either a 404 or a 500 error message, in the development environment all unhandled exceptions are raised. These messages are contained in static HTML files in the public folder, in &lt;code&gt;404.html&lt;/code&gt; and &lt;code&gt;500.html&lt;/code&gt; respectively. You can customize these files to add some extra information and style, but remember that they are static HTML; i.e. you can't use ERB, SCSS, CoffeeScript, or layouts for them.</source>
          <target state="translated">기본적으로 프로덕션 응용 프로그램은 개발 환경에서 처리되지 않은 모든 예외가 발생하면 404 또는 500 오류 메시지를 렌더링합니다. 이러한 메시지는 공용 폴더의 정적 HTML 파일 ( &lt;code&gt;404.html&lt;/code&gt; 및 &lt;code&gt;500.html&lt;/code&gt; )에 각각 포함되어 있습니다. 이러한 파일을 사용자 정의하여 추가 정보와 스타일을 추가 할 수 있지만 정적 HTML임을 기억하십시오. 즉, ERB, SCSS, CoffeeScript 또는 레이아웃을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c25e4ceabf84ae285c70b353dcdc0277b065c6cb" translate="yes" xml:space="preserve">
          <source>By default any message can be used throughout your app. But they can also be confined to a specific &lt;code&gt;:purpose&lt;/code&gt;.</source>
          <target state="translated">기본적으로 모든 메시지를 앱 전체에서 사용할 수 있습니다. 그러나 특정 &lt;code&gt;:purpose&lt;/code&gt; 으로 제한 될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9dddd50cf8533c62b42b8cd728487b067271192" translate="yes" xml:space="preserve">
          <source>By default any rotated encryptors use the values of the primary encryptor unless specified otherwise.</source>
          <target state="translated">기본적으로 회전 된 암호화 기는 달리 지정하지 않는 한 기본 암호화 기의 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="59b2ff00996be6ebb1306a60a90eef6839b05e99" translate="yes" xml:space="preserve">
          <source>By default any rotated verifiers use the values of the primary verifier unless specified otherwise.</source>
          <target state="translated">기본적으로 회전 검증기는 달리 지정하지 않는 한 기본 검증기의 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2db3e74acd1d14daa31e7898ac837c25cedec77b" translate="yes" xml:space="preserve">
          <source>By default cached responses will be private, cached only on the user's web browser. To allow proxies to cache the response, set &lt;code&gt;public: true&lt;/code&gt; to indicate that they can serve the cached response to all users.</source>
          <target state="translated">기본적으로 캐시 된 응답은 개인용이며 사용자의 웹 브라우저에만 캐시됩니다. 프록시가 응답을 캐시 할 수있게하려면 모든 사용자에게 캐시 된 응답을 제공 할 수 있음을 표시하려면 &lt;code&gt;public: true&lt;/code&gt; 로 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="d4fcea903daea8008c14b0e6a78b8eaf3a97d8ef" translate="yes" xml:space="preserve">
          <source>By default callbacks are halted by throwing &lt;code&gt;:abort&lt;/code&gt;. See &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt; for details.</source>
          <target state="translated">기본적으로 콜백은 &lt;code&gt;:abort&lt;/code&gt; 를 던져 중단 됩니다. 자세한 내용은 &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7c83878563a2ef1e498fead952f3dbb1ba89a59c" translate="yes" xml:space="preserve">
          <source>By default it is set to &lt;code&gt;false&lt;/code&gt; which results in following output:</source>
          <target state="translated">기본적으로 &lt;code&gt;false&lt;/code&gt; 로 설정 되어 다음과 같은 출력이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="41e04b5f4b5b5a52e8f80185641f60b9256cf75c" translate="yes" xml:space="preserve">
          <source>By default it uses Marshal to serialize the message. If you want to use another serialization method, you can set the serializer in the options hash upon initialization:</source>
          <target state="translated">기본적으로 Marshal을 사용하여 메시지를 직렬화합니다. 다른 직렬화 방법을 사용하려면 초기화시 해시 옵션에서 직렬 변환기를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae123002596f4342871858c45f7e76f804a77eaa" translate="yes" xml:space="preserve">
          <source>By default messages last forever and verifying one year from now will still return the original value. But messages can be set to expire at a given time with &lt;code&gt;:expires_in&lt;/code&gt; or &lt;code&gt;:expires_at&lt;/code&gt;.</source>
          <target state="translated">기본적으로 메시지는 영구적이며 지금부터 1 년을 확인하면 원래 값이 반환됩니다. 그러나 메시지는 주어진 시간에 &lt;code&gt;:expires_in&lt;/code&gt; 또는 &lt;code&gt;:expires_at&lt;/code&gt; 로 만료되도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5dd8879356318f4bd3fd2573f9f5a8141f5729a" translate="yes" xml:space="preserve">
          <source>By default migrations tell you exactly what they're doing and how long it took. A migration creating a table and adding an index might produce output like this</source>
          <target state="translated">기본적으로 마이그레이션은 수행중인 작업과 소요 시간을 정확하게 알려줍니다. 테이블을 작성하고 색인을 추가하면 마이그레이션이 다음과 같은 결과를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="295710fb504d4e6e27c6f5d71128595e6c44173d" translate="yes" xml:space="preserve">
          <source>By default name of the node for the children of root is &lt;code&gt;root.singularize&lt;/code&gt;. You can change it with the &lt;code&gt;:children&lt;/code&gt; option.</source>
          <target state="translated">기본적으로 루트 하위의 노드 이름은 &lt;code&gt;root.singularize&lt;/code&gt; 입니다. &lt;code&gt;:children&lt;/code&gt; 옵션을 사용하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46e1dbf26e369a293b65724a1722a1796044c955" translate="yes" xml:space="preserve">
          <source>By default running &lt;code&gt;bin/rails db:migrate&lt;/code&gt; will run in the &lt;code&gt;development&lt;/code&gt; environment. To run migrations against another environment you can specify it using the &lt;code&gt;RAILS_ENV&lt;/code&gt; environment variable while running the command. For example to run migrations against the &lt;code&gt;test&lt;/code&gt; environment you could run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8f55c96c35b5948c9e582cd392d63544237ff5" translate="yes" xml:space="preserve">
          <source>By default running &lt;code&gt;rails db:migrate&lt;/code&gt; will run in the &lt;code&gt;development&lt;/code&gt; environment. To run migrations against another environment you can specify it using the &lt;code&gt;RAILS_ENV&lt;/code&gt; environment variable while running the command. For example to run migrations against the &lt;code&gt;test&lt;/code&gt; environment you could run:</source>
          <target state="translated">기본적으로 &lt;code&gt;rails db:migrate&lt;/code&gt; 실행 db : migrate 는 &lt;code&gt;development&lt;/code&gt; 환경 에서 실행됩니다 . 다른 환경에 대해 마이그레이션 을 실행하려면 명령을 실행하는 동안 &lt;code&gt;RAILS_ENV&lt;/code&gt; 환경 변수를 사용하여 마이그레이션을 지정할 수 있습니다 . 예를 들어 &lt;code&gt;test&lt;/code&gt; 환경 에서 마이그레이션을 실행하려면 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1939f6a2e0851b7b6819fa7499fd4fc7bf0dcfa" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;:id&lt;/code&gt; parameter doesn't accept dots - this is because the dot is used as a separator for formatted routes. If you need to use a dot within an &lt;code&gt;:id&lt;/code&gt; add a constraint which overrides this - for example &lt;code&gt;id: /[^\/]+/&lt;/code&gt; allows anything except a slash.</source>
          <target state="translated">기본적으로 &lt;code&gt;:id&lt;/code&gt; 매개 변수는 점을 허용하지 않습니다. 이는 점이 형식화 된 경로의 구분 기호로 사용되기 때문입니다. &lt;code&gt;:id&lt;/code&gt; 내에 점을 사용해야하는 경우 이를 무시하는 제한 조건을 추가하십시오 (예 &lt;code&gt;id: /[^\/]+/&lt;/code&gt; 는 슬래시를 제외한 모든 것을 허용합니다).</target>
        </trans-unit>
        <trans-unit id="1677d70afabfedc19b943aeea5449ec54f9572cd" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;:id&lt;/code&gt; parameter doesn't accept dots. If you need to use dots as part of the &lt;code&gt;:id&lt;/code&gt; parameter add a constraint which overrides this restriction, e.g:</source>
          <target state="translated">기본적으로 &lt;code&gt;:id&lt;/code&gt; 매개 변수는 점을 허용하지 않습니다. &lt;code&gt;:id&lt;/code&gt; 매개 변수의 일부로 점을 사용해야 하는 경우이 제한을 무시하는 제한 조건을 추가 하십시오 . 예 :</target>
        </trans-unit>
        <trans-unit id="f47d34c3f680f8a30d87ab32e6bf145fc9e93eb0" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;MemCacheStore&lt;/code&gt; and &lt;code&gt;RedisCacheStore&lt;/code&gt; use a single connection per process. This means that if you're using Puma, or another threaded server, you can have multiple threads waiting for the connection to become available. To increase the number of available connections you can enable connection pooling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fc7c6108a03196d5290ceddbf9fa1dfc293288" translate="yes" xml:space="preserve">
          <source>By default the associated records are protected from being destroyed. If you want to destroy any of the associated records through the attributes hash, you have to enable it first using the &lt;code&gt;:allow_destroy&lt;/code&gt; option. This will allow you to also use the &lt;code&gt;_destroy&lt;/code&gt; key to destroy existing records:</source>
          <target state="translated">기본적으로 관련 레코드는 삭제되지 않습니다. 속성 해시를 통해 연결된 레코드를 삭제하려면 먼저 &lt;code&gt;:allow_destroy&lt;/code&gt; 옵션을 사용하여 레코드를 활성화해야합니다 . &lt;code&gt;_destroy&lt;/code&gt; 키를 사용하여 기존 레코드를 삭제할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a8d01d917bb8e0d1022f2ef273afea5fa8d1bc3" translate="yes" xml:space="preserve">
          <source>By default the internal instance variable is named with a leading underscore, &lt;code&gt;@_log_level&lt;/code&gt; in the example above. That's configurable via &lt;code&gt;Module.attr_internal_naming_format&lt;/code&gt; though, you can pass any &lt;code&gt;sprintf&lt;/code&gt;-like format string with a leading &lt;code&gt;@&lt;/code&gt; and a &lt;code&gt;%s&lt;/code&gt; somewhere, which is where the name will be placed. The default is &lt;code&gt;&quot;@_%s&quot;&lt;/code&gt;.</source>
          <target state="translated">기본적으로 내부 인스턴스 변수의 이름은 위의 예제에서 선행 밑줄 ( &lt;code&gt;@_log_level&lt;/code&gt; 됩니다. &lt;code&gt;Module.attr_internal_naming_format&lt;/code&gt; 을 통해 구성 할 수 있지만 이름이 배치 될 곳은 앞에 &lt;code&gt;@&lt;/code&gt; 와 &lt;code&gt;%s&lt;/code&gt; 있는 &lt;code&gt;sprintf&lt;/code&gt; 와 같은 형식 문자열을 전달할 수 있습니다 . 기본값은 &lt;code&gt;&quot;@_%s&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4a57917f3dfcef7071fb7eb3f6f00a1d9482bbf6" translate="yes" xml:space="preserve">
          <source>By default the root node is &quot;hash&quot;, but that's configurable via the &lt;code&gt;:root&lt;/code&gt; option.</source>
          <target state="translated">기본적으로 루트 노드는 &quot;해시&quot;이지만 &lt;code&gt;:root&lt;/code&gt; 옵션을 통해 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="670ee9f8cbf06051c9ae0f5bcccefcba40bb2627" translate="yes" xml:space="preserve">
          <source>By default the root node is &amp;ldquo;hash&amp;rdquo;, but that's configurable via the &lt;code&gt;:root&lt;/code&gt; option.</source>
          <target state="translated">기본적으로 루트 노드는 &quot;해시&quot;이지만 &lt;code&gt;:root&lt;/code&gt; 옵션을 통해 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa015cafc372a3d3f10350ff70f07239037a6166" translate="yes" xml:space="preserve">
          <source>By default value objects are initialized by calling the &lt;code&gt;new&lt;/code&gt; constructor of the value class passing each of the mapped attributes, in the order specified by the &lt;code&gt;:mapping&lt;/code&gt; option, as arguments. If the value class doesn't support this convention then &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;&lt;code&gt;composed_of&lt;/code&gt;&lt;/a&gt; allows a custom constructor to be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a897672892639be53cb6df5d8a909b7eb37376ee" translate="yes" xml:space="preserve">
          <source>By default value objects are initialized by calling the &lt;code&gt;new&lt;/code&gt; constructor of the value class passing each of the mapped attributes, in the order specified by the &lt;code&gt;:mapping&lt;/code&gt; option, as arguments. If the value class doesn't support this convention then &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;composed_of&lt;/a&gt; allows a custom constructor to be specified.</source>
          <target state="translated">기본적으로 값 객체는 &lt;code&gt;:mapping&lt;/code&gt; 옵션에 지정된 순서대로 매핑 된 각 속성을 전달하는 값 클래스 의 &lt;code&gt;new&lt;/code&gt; 생성자를 호출하여 초기화됩니다 . 값 클래스가이 규칙을 지원하지 않으면 &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;configured_of를&lt;/a&gt; 사용하면 사용자 정의 생성자를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="988933825983ae1fa0f4c6b19a5c4e9a51a4ea96" translate="yes" xml:space="preserve">
          <source>By default when &lt;code&gt;config.force_ssl&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, URLs generated for hosts will use the HTTPS protocol.</source>
          <target state="translated">&lt;code&gt;config.force_ssl&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 인 경우 기본적으로 호스트에 대해 생성 된 URL은 HTTPS 프로토콜을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e36e710b72496db14bd9b353c634f06ba3802b36" translate="yes" xml:space="preserve">
          <source>By default you will only be able to set and update attributes on the associated model. If you want to destroy the associated model through the attributes hash, you have to enable it first using the &lt;code&gt;:allow_destroy&lt;/code&gt; option.</source>
          <target state="translated">기본적으로 관련 모델의 속성 만 설정하고 업데이트 할 수 있습니다. 속성 해시를 통해 연결된 모델을 삭제하려면 먼저 &lt;code&gt;:allow_destroy&lt;/code&gt; 옵션을 사용하여 해당 모델을 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cd90bed56461f36e1855a1b183548ef975cc7d53" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;persistence#method-i-save&quot;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt; also sets the &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; attributes to the current time. However, if you supply &lt;code&gt;touch: false&lt;/code&gt;, these timestamps will not be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1344b5b01cc738fa97694695930ea32a8a15e1" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt; also sets the &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; attributes to the current time. However, if you supply &lt;code&gt;touch: false&lt;/code&gt;, these timestamps will not be updated.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt; 는 &lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 속성도 현재 시간으로 설정합니다. 그러나 &lt;code&gt;touch: false&lt;/code&gt; 하면 이러한 타임 스탬프가 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70f8989ef3b35da49c974602ab9a44e4a3d609f0" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;&lt;code&gt;save!&lt;/code&gt;&lt;/a&gt; also sets the &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; attributes to the current time. However, if you supply &lt;code&gt;touch: false&lt;/code&gt;, these timestamps will not be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187fa50f9d06e9c41f5589d8b8d52d07f20ded35" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;&lt;code&gt;save!&lt;/code&gt;&lt;/a&gt; always runs validations. If any of them fail &lt;a href=&quot;recordinvalid&quot;&gt;&lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt;&lt;/a&gt; gets raised, and the record won't be saved. However, if you supply &lt;code&gt;validate: false&lt;/code&gt;, validations are bypassed altogether. See &lt;a href=&quot;validations&quot;&gt;&lt;code&gt;ActiveRecord::Validations&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9050805eb48947667d6e7e159b98ace896a033" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save!&lt;/a&gt; also sets the &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; attributes to the current time. However, if you supply &lt;code&gt;touch: false&lt;/code&gt;, these timestamps will not be updated.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;저장하십시오! &lt;/a&gt;또한 &lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 속성을 현재 시간으로 설정합니다. 그러나 &lt;code&gt;touch: false&lt;/code&gt; 하면 이러한 타임 스탬프가 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98d1514c8103f16682a8c4de564165ae7db68e16" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save!&lt;/a&gt; always runs validations. If any of them fail &lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord::RecordInvalid&lt;/a&gt; gets raised, and the record won't be saved. However, if you supply &lt;code&gt;validate:
false&lt;/code&gt;, validations are bypassed altogether. See &lt;a href=&quot;validations&quot;&gt;ActiveRecord::Validations&lt;/a&gt; for more information.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;저장하십시오!&lt;/a&gt; 항상 유효성 검사를 실행합니다. 이들 중 하나라도 실패하면 &lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord :: RecordInvalid&lt;/a&gt; 가 발생하고 레코드가 저장되지 않습니다. 그러나 &lt;code&gt;validate: false&lt;/code&gt; 하면 유효성 검증이 모두 무시됩니다. 자세한 내용은 &lt;a href=&quot;validations&quot;&gt;ActiveRecord :: Validations&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ebf5096ba8c919255c8be86858412508d224e657" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ActionDispatch::SystemTestCase&lt;/code&gt; is driven by the Selenium driver, with the Chrome browser, and a browser size of 1400x1400.</source>
          <target state="translated">기본적으로 &lt;code&gt;ActionDispatch::SystemTestCase&lt;/code&gt; 는 Selenium 드라이버 (Chrome 브라우저 및 브라우저 크기 1400x1400)에 의해 구동됩니다.</target>
        </trans-unit>
        <trans-unit id="003bcc717658d1b560b3587e1bc470a20ad89fe1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ActiveJob::TestCase&lt;/code&gt; will set the queue adapter to &lt;code&gt;:test&lt;/code&gt; so that your jobs are performed inline. It will also ensure that all previously performed and enqueued jobs are cleared before any test run so you can safely assume that no jobs have already been executed in the scope of each test.</source>
          <target state="translated">기본적으로 &lt;code&gt;ActiveJob::TestCase&lt;/code&gt; 는 작업이 인라인으로 수행되도록 큐 어댑터를 &lt;code&gt;:test&lt;/code&gt; 로 설정합니다 . 또한 모든 테스트 실행 전에 이전에 수행되고 대기중인 모든 작업이 지워지도록 보장하므로 각 테스트 범위에서 이미 실행 된 작업이 없다고 가정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0a3ede5612aa0d454b5aed1361a4c6451de3876" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;Model.find&lt;/code&gt; selects all the fields from the result set using &lt;code&gt;select *&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;Model.find&lt;/code&gt; 는 &lt;code&gt;select *&lt;/code&gt; 를 사용하여 결과 집합에서 모든 필드를 선택 합니다.</target>
        </trans-unit>
        <trans-unit id="485ffc898016ef96815a33b98c8924740e86e24d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;Rails&lt;/code&gt; loads generators from your load path. However, if you want to place your generators at a different location, you can specify in your railtie a block which will load them during normal generators lookup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db5e2957f4391cb51be8e098598115a9041c46a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;camelize&lt;/code&gt; converts strings to UpperCamelCase. If the argument to camelize is set to &lt;code&gt;:lower&lt;/code&gt; then camelize produces lowerCamelCase.</source>
          <target state="translated">기본적으로 &lt;code&gt;camelize&lt;/code&gt; 는 문자열을 UpperCamelCase로 변환합니다. camelize에 대한 인수가 &lt;code&gt;:lower&lt;/code&gt; 로 설정되면 camelize는 lowerCamelCase를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ae47017c99fcc104709e3ad36a44e3fd0b9c32c0" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;config.debug_exception_response_format&lt;/code&gt; is set to &lt;code&gt;:api&lt;/code&gt;, when &lt;code&gt;config.api_only&lt;/code&gt; is set to true.</source>
          <target state="translated">&lt;code&gt;config.api_only&lt;/code&gt; 가 true로 설정 되면 기본적으로 &lt;code&gt;config.debug_exception_response_format&lt;/code&gt; 이 &lt;code&gt;:api&lt;/code&gt; 로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9c771945258166f777f3bb7cb26c1b6ff17387b8" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;create_table&lt;/code&gt; will create a primary key called &lt;code&gt;id&lt;/code&gt;. You can change the name of the primary key with the &lt;code&gt;:primary_key&lt;/code&gt; option (don't forget to update the corresponding model) or, if you don't want a primary key at all, you can pass the option &lt;code&gt;id: false&lt;/code&gt;. If you need to pass database specific options you can place an SQL fragment in the &lt;code&gt;:options&lt;/code&gt; option. For example:</source>
          <target state="translated">기본적으로 &lt;code&gt;create_table&lt;/code&gt; 은 &lt;code&gt;id&lt;/code&gt; 라는 기본 키를 만듭니다 . &lt;code&gt;:primary_key&lt;/code&gt; 옵션 을 사용하여 기본 키 이름을 변경 하거나 (해당 모델을 업데이트하는 것을 잊지 마십시오) 기본 키를 원하지 않으면 &lt;code&gt;id: false&lt;/code&gt; 옵션을 전달할 수 있습니다 . 데이터베이스 특정 옵션을 전달해야하는 경우 &lt;code&gt;:options&lt;/code&gt; 옵션 에 SQL 조각을 배치 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a019e2c7dc895c4ed41238caa9577e3635d65be6" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;model&lt;/code&gt; is the &lt;a href=&quot;../../activesupport/timezone&quot;&gt;&lt;code&gt;ActiveSupport::TimeZone&lt;/code&gt;&lt;/a&gt; constant (which can be obtained in Active Record as a value object). The &lt;code&gt;model&lt;/code&gt; parameter must respond to &lt;code&gt;all&lt;/code&gt; and return an array of objects that represent time zones; each object must respond to &lt;code&gt;name&lt;/code&gt;. If a &lt;a href=&quot;../../regexp&quot;&gt;&lt;code&gt;Regexp&lt;/code&gt;&lt;/a&gt; is given it will attempt to match the zones using &lt;code&gt;match?&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db005b1fc0750fc170278eb94df6c7c7518e433f" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;model&lt;/code&gt; is the &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport::TimeZone&lt;/a&gt; constant (which can be obtained in Active Record as a value object). The &lt;code&gt;model&lt;/code&gt; parameter must respond to &lt;code&gt;all&lt;/code&gt; and return an array of objects that represent time zones; each object must respond to &lt;code&gt;name&lt;/code&gt;. If a Regexp is given it will attempt to match the zones using the &amp;lt;code&amp;gt;=~&amp;lt;code&amp;gt; operator.</source>
          <target state="translated">기본적으로 &lt;code&gt;model&lt;/code&gt; 은 &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport :: TimeZone&lt;/a&gt; 상수입니다 (액티브 레코드에서 값 개체로 얻을 수 있음). &lt;code&gt;model&lt;/code&gt; 매개 변수에 응답해야합니다 &lt;code&gt;all&lt;/code&gt; 시간 영역을 나타내는 객체의 배열을 반환; 각 객체는 &lt;code&gt;name&lt;/code&gt; 에 응답해야합니다 . 정규 표현식이 제공되면 &amp;lt;code&amp;gt; = ~ &amp;lt;code&amp;gt; 연산자를 사용하여 영역을 일치 시키려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="fa901eb60a6c0d43aeecda5b5cdad5b8dd8208a3" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;numericality&lt;/code&gt; doesn't allow &lt;code&gt;nil&lt;/code&gt; values. You can use &lt;code&gt;allow_nil: true&lt;/code&gt; option to permit it.</source>
          <target state="translated">기본적으로 &lt;code&gt;numericality&lt;/code&gt; 는 &lt;code&gt;nil&lt;/code&gt; 값을 허용하지 않습니다 . &lt;code&gt;allow_nil: true&lt;/code&gt; 옵션을 사용 하여 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2aa43d4933e33c1bc8273711f977df79302df5ee" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;post.person_id&lt;/code&gt; is the selected option. Specify &lt;code&gt;selected: value&lt;/code&gt; to use a different selection or &lt;code&gt;selected: nil&lt;/code&gt; to leave all options unselected. Similarly, you can specify values to be disabled in the option tags by specifying the &lt;code&gt;:disabled&lt;/code&gt; option. This can either be a single value or an array of values to be disabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;post.person_id&lt;/code&gt; 가 선택된 옵션입니다. 다른 옵션 을 사용하려면 &lt;code&gt;selected: value&lt;/code&gt; 을 지정 하거나 모든 옵션을 선택하지 않은 상태로 유지하려면 &lt;code&gt;selected: nil&lt;/code&gt; 을 지정하십시오. 마찬가지로 &lt;code&gt;:disabled&lt;/code&gt; 옵션 을 지정하여 옵션 태그에서 비활성화 할 값을 지정할 수 있습니다. 이 값은 단일 값이거나 사용하지 않을 값의 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="887a9c178a164cbccfe4428c38b53a2102358519" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;test_helper.rb&lt;/code&gt; will load all of your fixtures into your test database, so this test will succeed.</source>
          <target state="translated">기본적으로 &lt;code&gt;test_helper.rb&lt;/code&gt; 는 모든 조명기를 테스트 데이터베이스에로드 하므로이 테스트는 성공합니다.</target>
        </trans-unit>
        <trans-unit id="2eff7d5645935cbef41a28d7cdbf03d348e2a966" translate="yes" xml:space="preserve">
          <source>By default, Action Cable allows all requests from localhost:3000 when running in the development environment.</source>
          <target state="translated">기본적으로 Action Cable은 개발 환경에서 실행될 때 localhost : 3000의 모든 요청을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="3c0f4e5876a30f50ce6617215e2c991b7379f49d" translate="yes" xml:space="preserve">
          <source>By default, Action Cable looks for a configuration file in &lt;code&gt;config/cable.yml&lt;/code&gt;. The file must specify an adapter for each Rails environment. See the &lt;a href=&quot;#dependencies&quot;&gt;Dependencies&lt;/a&gt; section for additional information on adapters.</source>
          <target state="translated">기본적으로 Action Cable은 &lt;code&gt;config/cable.yml&lt;/code&gt; 에서 구성 파일을 찾습니다 . 파일은 각 Rails 환경에 대한 어댑터를 지정해야합니다. 어댑터에 대한 추가 정보 는 &lt;a href=&quot;#dependencies&quot;&gt;종속성&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3eb4c3e59a71047cc9d1f630979ced609e593d29" translate="yes" xml:space="preserve">
          <source>By default, Active Record uses some naming conventions to find out how the mapping between models and database tables should be created. Rails will pluralize your class names to find the respective database table. So, for a class &lt;code&gt;Book&lt;/code&gt;, you should have a database table called &lt;strong&gt;books&lt;/strong&gt;. The Rails pluralization mechanisms are very powerful, being capable of pluralizing (and singularizing) both regular and irregular words. When using class names composed of two or more words, the model class name should follow the Ruby conventions, using the CamelCase form, while the table name must contain the words separated by underscores. Examples:</source>
          <target state="translated">기본적으로 Active Record는 몇 가지 명명 규칙을 사용하여 모델과 데이터베이스 테이블 간의 매핑을 만드는 방법을 찾습니다. Rails는 각 데이터베이스 테이블을 찾기 위해 클래스 이름을 복수화합니다. 따라서 &lt;code&gt;Book&lt;/code&gt; 클래스의 경우 &lt;strong&gt;books&lt;/strong&gt; 라는 데이터베이스 테이블이 있어야합니다 . Rails의 복수형 메커니즘은 매우 강력하여 규칙적인 단어와 불규칙적 인 단어를 모두 복수화 (및 단일화) 할 수 있습니다. 둘 이상의 단어로 구성된 클래스 이름을 사용하는 경우 모델 클래스 이름은 CamelCase 양식을 사용하여 Ruby 규칙을 따라야하며 테이블 이름은 밑줄로 구분 된 단어를 포함해야합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="5d1ca6e6fe0b27bc4628d4cae5bb21be6dc468c7" translate="yes" xml:space="preserve">
          <source>By default, Active Storage assumes private access to services. This means generating signed, single-use URLs for blobs. If you'd rather make blobs publicly accessible, specify &lt;code&gt;public: true&lt;/code&gt; in your app's &lt;code&gt;config/storage.yml&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ceb958a16ee48783c3742f426cc63b82980793" translate="yes" xml:space="preserve">
          <source>By default, Rails configures Zeitwerk to inflect file names with &lt;code&gt;String#camelize&lt;/code&gt;. For example, it expects that &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; defines the constant &lt;code&gt;UsersController&lt;/code&gt; because</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09dcd81d0395e0cf546d26903583713638df25a" translate="yes" xml:space="preserve">
          <source>By default, Rails creates routes for the seven default actions (&lt;code&gt;index&lt;/code&gt;, &lt;code&gt;show&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;edit&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;destroy&lt;/code&gt;) for every RESTful route in your application. You can use the &lt;code&gt;:only&lt;/code&gt; and &lt;code&gt;:except&lt;/code&gt; options to fine-tune this behavior. The &lt;code&gt;:only&lt;/code&gt; option tells Rails to create only the specified routes:</source>
          <target state="translated">기본적으로 Rails 는 애플리케이션의 모든 RESTful 경로에 대해 7 가지 기본 조치 ( &lt;code&gt;index&lt;/code&gt; , &lt;code&gt;show&lt;/code&gt; , &lt;code&gt;new&lt;/code&gt; , &lt;code&gt;create&lt;/code&gt; , &lt;code&gt;edit&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt; )에 대한 경로를 작성합니다. 당신은 사용할 수 있습니다 &lt;code&gt;:only&lt;/code&gt; 와 &lt;code&gt;:except&lt;/code&gt; 미세 조정이 동작에 대한 옵션을 제공합니다. &lt;code&gt;:only&lt;/code&gt; 옵션은 지정된 경로를 만들 레일을 알려줍니다 :</target>
        </trans-unit>
        <trans-unit id="ca1ba60d991f6a1a44df234d2532502cc88877e0" translate="yes" xml:space="preserve">
          <source>By default, Rails eager loads the application files when it boots in production mode, so most of the autoloading going on in development does not happen. But autoloading may still be triggered during eager loading.</source>
          <target state="translated">기본적으로 Rails 열망은 애플리케이션 모드가 프로덕션 모드로 부팅 될 때 애플리케이션 파일을로드하므로 개발 중에 진행되는 대부분의 자동 로딩이 발생하지 않습니다. 그러나 열망하는 동안 자동 로딩이 여전히 트리거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99b0703b560dc2b47b23a52d4429312e1080f52c" translate="yes" xml:space="preserve">
          <source>By default, Rails generates migrations that look like:</source>
          <target state="translated">기본적으로 Rails는 다음과 같은 마이그레이션을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="33ede8ac555571138ffd9fa34ed9a5d1552947c6" translate="yes" xml:space="preserve">
          <source>By default, Rails includes an &lt;a href=&quot;https://github.com/rails/rails/blob/master/actionview/app/assets/javascripts&quot;&gt;unobtrusive scripting adapter&lt;/a&gt;, which adds a header called &lt;code&gt;X-CSRF-Token&lt;/code&gt; with the security token on every non-GET Ajax call. Without this header, non-GET Ajax requests won't be accepted by Rails. When using another library to make Ajax calls, it is necessary to add the security token as a default header for Ajax calls in your library. To get the token, have a look at &lt;code&gt;&amp;lt;meta name='csrf-token' content='THE-TOKEN'&amp;gt;&lt;/code&gt; tag printed by &lt;code&gt;&amp;lt;%= csrf_meta_tags %&amp;gt;&lt;/code&gt; in your application view.</source>
          <target state="translated">기본적으로 Rails에는 &lt;a href=&quot;https://github.com/rails/rails/blob/master/actionview/app/assets/javascripts&quot;&gt;눈에 거슬리지 않는 스크립팅 어댑터가&lt;/a&gt; 포함되어 있습니다.이 어댑터 는 모든 비 GET Ajax 호출에서 보안 토큰과 함께 &lt;code&gt;X-CSRF-Token&lt;/code&gt; 이라는 헤더를 추가합니다 . 이 헤더가 없으면 비 GET Ajax 요청은 Rails에서 수락되지 않습니다. 다른 라이브러리를 사용하여 Ajax 호출을 수행하는 경우 라이브러리에서 Ajax 호출의 기본 헤더로 보안 토큰을 추가해야합니다. 토큰을 얻으 려면 응용 프로그램보기에서 &lt;code&gt;&amp;lt;%= csrf_meta_tags %&amp;gt;&lt;/code&gt; 로 인쇄 된 &amp;lt; &lt;code&gt;&amp;lt;meta name='csrf-token' content='THE-TOKEN'&amp;gt;&lt;/code&gt; 태그를 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="8c8eac25dff8383c46558f863c6eabbdc9303e73" translate="yes" xml:space="preserve">
          <source>By default, Rails links to these assets on the current host in the public folder, but you can direct Rails to link to assets from a dedicated asset server by setting &lt;code&gt;ActionController::Base.asset_host&lt;/code&gt; in the application configuration, typically in &lt;code&gt;config/environments/production.rb&lt;/code&gt;. For example, you'd define &lt;code&gt;assets.example.com&lt;/code&gt; to be your asset host this way, inside the &lt;code&gt;configure&lt;/code&gt; block of your environment-specific configuration files or &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">기본적으로 Rails는 공용 폴더에있는 현재 호스트의 이러한 자산에 연결되지만 , 애플리케이션 구성, 일반적으로 &lt;code&gt;config/environments/production.rb&lt;/code&gt; 에서 &lt;code&gt;ActionController::Base.asset_host&lt;/code&gt; 를 설정하여 Rails가 전용 자산 서버의 자산에 연결하도록 지시 할 수 있습니다. production.rb . 예를 들어, 환경 별 구성 파일 또는 &lt;code&gt;config/application.rb&lt;/code&gt; 의 &lt;code&gt;configure&lt;/code&gt; 블록 내에서 &lt;code&gt;assets.example.com&lt;/code&gt; 을 이런 방식으로 자산 호스트로 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="94cf64770f8747de375db9b3f0b69f1fb644eca7" translate="yes" xml:space="preserve">
          <source>By default, Rails links to these assets on the current host in the public folder, but you can direct Rails to link to assets from a dedicated assets server by setting &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; in the application configuration, typically in &lt;code&gt;config/environments/production.rb&lt;/code&gt;. For example, let's say your asset host is &lt;code&gt;assets.example.com&lt;/code&gt;:</source>
          <target state="translated">기본적으로 Rails는 공용 폴더의 현재 호스트에서 이러한 자산에 연결되지만 , 일반적으로 &lt;code&gt;config/environments/production.rb&lt;/code&gt; 에서 응용 프로그램 구성에서 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 를 설정하여 Rails가 전용 자산 서버의 자산에 연결하도록 지시 할 수 있습니다 .rb . 예를 들어 자산 호스트가 &lt;code&gt;assets.example.com&lt;/code&gt; 이라고 가정 해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="6e661f081148a9943e72bd09486b7fbede63d3b5" translate="yes" xml:space="preserve">
          <source>By default, Rails links to these assets on the current host in the public folder, but you can direct Rails to link to assets from a dedicated assets server by setting &lt;code&gt;config.asset_host&lt;/code&gt; in the application configuration, typically in &lt;code&gt;config/environments/production.rb&lt;/code&gt;. For example, let's say your asset host is &lt;code&gt;assets.example.com&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ffd5b0bf1c7183a6bc017c43f65e4e0618259a" translate="yes" xml:space="preserve">
          <source>By default, Rails loads generators from your load path. However, if you want to place your generators at a different location, you can specify in your railtie a block which will load them during normal generators lookup:</source>
          <target state="translated">기본적으로 Rails는로드 경로에서 생성기를로드합니다. 그러나 생성기를 다른 위치에 배치하려면 일반 생성기 조회 중에 생성 할 블록을 레일에 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="653644533f4a25a2f43ae795e7b51e862020b44a" translate="yes" xml:space="preserve">
          <source>By default, Rails logs all requests being made to the web application. But log files can be a huge security issue, as they may contain login credentials, credit card numbers et cetera. When designing a web application security concept, you should also think about what will happen if an attacker got (full) access to the web server. Encrypting secrets and passwords in the database will be quite useless, if the log files list them in clear text. You can &lt;em&gt;filter certain request parameters from your log files&lt;/em&gt; by appending them to &lt;code&gt;config.filter_parameters&lt;/code&gt; in the application configuration. These parameters will be marked [FILTERED] in the log.</source>
          <target state="translated">기본적으로 Rails는 웹 애플리케이션에 대한 모든 요청을 기록합니다. 그러나 로그 파일에는 로그인 자격 증명, 신용 카드 번호 등이 포함될 수 있으므로 큰 보안 문제가 될 수 있습니다. 웹 응용 프로그램 보안 개념을 디자인 할 때 공격자가 웹 서버에 완전히 액세스 할 경우 어떻게 될지 고려해야합니다. 로그 파일에 일반 텍스트로 나열되어 있으면 데이터베이스의 비밀 및 암호를 암호화하는 것은 쓸모가 없습니다. 애플리케이션 구성에서 &lt;code&gt;config.filter_parameters&lt;/code&gt; 에 추가 &lt;em&gt;하여 로그 파일에서 특정 요청 매개 변수를 필터링&lt;/em&gt; 할 수 있습니다 . 이 매개 변수는 로그에 [FILTERED]로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="64e383f3a19de1e39ee356c463e2c87dfa36de1b" translate="yes" xml:space="preserve">
          <source>By default, Rails renders views by first rendering the template and then the layout. The response is sent to the client after the whole template is rendered, all queries are made, and the layout is processed.</source>
          <target state="translated">기본적으로 Rails는 먼저 템플릿을 렌더링 한 다음 레이아웃을 렌더링하여보기를 렌더링합니다. 전체 템플릿이 렌더링되고 모든 쿼리가 작성되고 레이아웃이 처리 된 후 응답이 클라이언트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="2afb9f82770e91c9b05a1ae181d32363a0645ae2" translate="yes" xml:space="preserve">
          <source>By default, Rails uses &lt;code&gt;String#camelize&lt;/code&gt; to know which constant should a given file or directory name define. For example, &lt;code&gt;posts_controller.rb&lt;/code&gt; should define &lt;code&gt;PostsController&lt;/code&gt; because that is what &lt;code&gt;&quot;posts_controller&quot;.camelize&lt;/code&gt; returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d711c6baa51139f594d2802d65d28fa59996302" translate="yes" xml:space="preserve">
          <source>By default, Rails will add a middleware that provides a cache store based on the configuration of your application (memcache by default). This means that the built-in HTTP cache will rely on it.</source>
          <target state="translated">기본적으로 Rails는 애플리케이션 구성 (기본적으로 memcache)을 기반으로 캐시 저장소를 제공하는 미들웨어를 추가합니다. 이는 내장 HTTP 캐시가이를 사용한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="674140bd3ef41a0ea7e9bea63ba5e92c2657358f" translate="yes" xml:space="preserve">
          <source>By default, Rails will compile each template to a method in order to render it. In the development environment, when you alter a template, Rails will check the file's modification time and recompile it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f3a2a5f89a14aa238b8cef8512599a9986d648" translate="yes" xml:space="preserve">
          <source>By default, Rails will compile each template to a method in order to render it. When you alter a template, Rails will check the file's modification time and recompile it in development mode.</source>
          <target state="translated">기본적으로 Rails는 렌더링하기 위해 각 템플릿을 메소드로 컴파일합니다. 템플릿을 변경하면 Rails는 파일의 수정 시간을 확인하고 개발 모드에서 다시 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="de04a4ec43bbb36f8e68fec991143afd0f5dc085" translate="yes" xml:space="preserve">
          <source>By default, Rails will serve the results of a rendering operation with the MIME content-type of &lt;code&gt;text/html&lt;/code&gt; (or &lt;code&gt;application/json&lt;/code&gt; if you use the &lt;code&gt;:json&lt;/code&gt; option, or &lt;code&gt;application/xml&lt;/code&gt; for the &lt;code&gt;:xml&lt;/code&gt; option.). There are times when you might like to change this, and you can do so by setting the &lt;code&gt;:content_type&lt;/code&gt; option:</source>
          <target state="translated">기본적으로 Rails는 MIME 컨텐츠 유형의 &lt;code&gt;text/html&lt;/code&gt; (또는 &lt;code&gt;:json&lt;/code&gt; 옵션 을 사용하는 경우 &lt;code&gt;application/json&lt;/code&gt; 또는 &lt;code&gt;:xml&lt;/code&gt; 옵션을 위해 &lt;code&gt;application/xml&lt;/code&gt; ) 로 렌더링 작업의 결과를 제공합니다 . 이것을 변경하고 싶을 때가 있는데 &lt;code&gt;:content_type&lt;/code&gt; 옵션 을 설정하면됩니다 :</target>
        </trans-unit>
        <trans-unit id="0a580905b5d01927b4c9ba4c3b8033a0f2f4d165" translate="yes" xml:space="preserve">
          <source>By default, Sprockets caches assets in &lt;code&gt;tmp/cache/assets&lt;/code&gt; in development and production environments. This can be changed as follows:</source>
          <target state="translated">기본적으로 Sprockets 는 개발 및 프로덕션 환경에서 자산을 &lt;code&gt;tmp/cache/assets&lt;/code&gt; 에 캐시 합니다. 다음과 같이 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a28a552591e4c96ff1d6d4d3be0a08ce2af1332" translate="yes" xml:space="preserve">
          <source>By default, a single session is automatically created for you, but you can use this method to open multiple sessions that ought to be tested simultaneously.</source>
          <target state="translated">기본적으로 단일 세션이 자동으로 생성되지만이 방법을 사용하여 동시에 테스트해야하는 여러 세션을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bbdc5760b3f13eb0a852c68bd59195f0c19f57c" translate="yes" xml:space="preserve">
          <source>By default, adding values to the flash will make them available to the next request, but sometimes you may want to access those values in the same request. For example, if the &lt;code&gt;create&lt;/code&gt; action fails to save a resource and you render the &lt;code&gt;new&lt;/code&gt; template directly, that's not going to result in a new request, but you may still want to display a message using the flash. To do this, you can use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Flash/FlashHash.html#method-i-now&quot;&gt;&lt;code&gt;flash.now&lt;/code&gt;&lt;/a&gt; in the same way you use the normal &lt;code&gt;flash&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bef760a1dd7b140d0e56ca5f3cfe2e194d5e49" translate="yes" xml:space="preserve">
          <source>By default, adding values to the flash will make them available to the next request, but sometimes you may want to access those values in the same request. For example, if the &lt;code&gt;create&lt;/code&gt; action fails to save a resource and you render the &lt;code&gt;new&lt;/code&gt; template directly, that's not going to result in a new request, but you may still want to display a message using the flash. To do this, you can use &lt;code&gt;flash.now&lt;/code&gt; in the same way you use the normal &lt;code&gt;flash&lt;/code&gt;:</source>
          <target state="translated">기본적으로 플래시에 값을 추가하면 다음 요청에서 값을 사용할 수 있지만 때로는 동일한 요청에서 해당 값에 액세스하려고 할 수 있습니다. 예를 들어, &lt;code&gt;create&lt;/code&gt; 조치가 자원을 저장하지 못하고 &lt;code&gt;new&lt;/code&gt; 템플리트를 직접 렌더링하는 경우 새 요청이 발생하지 않지만 플래시를 사용하여 메시지를 표시 할 수 있습니다. 이렇게하려면 일반 &lt;code&gt;flash&lt;/code&gt; 를 사용하는 것과 같은 방식으로 &lt;code&gt;flash.now&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef9f55c84c0a7e4d657d37fbe126507f8e1c91b2" translate="yes" xml:space="preserve">
          <source>By default, all controllers and views have access to a special version of &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for&lt;/a&gt;, that already knows what the current hostname is. So if you use &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for&lt;/a&gt; in your controllers or your views, then you don't need to explicitly pass the &lt;code&gt;:host&lt;/code&gt; argument.</source>
          <target state="translated">기본적으로 모든 컨트롤러와보기는 현재 호스트 이름이 무엇인지 이미 알고 있는 특수 버전의 &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for에&lt;/a&gt; 액세스 할 수 있습니다 . 따라서 컨트롤러 또는 뷰에서 &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for&lt;/a&gt; 를 사용 하면 명시 적으로 &lt;code&gt;:host&lt;/code&gt; 인수를 전달할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b57a85a6d9c3b0ca902ec90af1fb8b9cd87c8e6d" translate="yes" xml:space="preserve">
          <source>By default, all controllers and views have access to a special version of &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;&lt;code&gt;url_for&lt;/code&gt;&lt;/a&gt;, that already knows what the current hostname is. So if you use &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;&lt;code&gt;url_for&lt;/code&gt;&lt;/a&gt; in your controllers or your views, then you don't need to explicitly pass the &lt;code&gt;:host&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce3b19fb0251b5ea46aad4cd7b932e097e42696" translate="yes" xml:space="preserve">
          <source>By default, all newly created &lt;code&gt;InboundEmail&lt;/code&gt; records that have the status of &lt;code&gt;pending&lt;/code&gt;, which is the default, will be scheduled for automatic, deferred routing.</source>
          <target state="translated">기본적 으로 &lt;code&gt;pending&lt;/code&gt; 상태 인 기본값으로 새로 생성 된 모든 &lt;code&gt;InboundEmail&lt;/code&gt; 레코드는 자동 지연 라우팅으로 예약됩니다.</target>
        </trans-unit>
        <trans-unit id="8f5b0a9ff8d0e2eb57162a716afae48a1a569a9e" translate="yes" xml:space="preserve">
          <source>By default, an InboundEmail that has been successfully processed will be incinerated after 30 days. This ensures you're not holding on to people's data willy-nilly after they may have canceled their accounts or deleted their content. The intention is that after you've processed an email, you should have extracted all the data you needed and turned it into domain models and content on your side of the application. The InboundEmail simply stays in the system for the extra time to provide debugging and forensics options.</source>
          <target state="translated">기본적으로 성공적으로 처리 된 InboundEmail은 30 일 후에 소각됩니다. 이렇게하면 사람들이 자신의 계정을 취소하거나 콘텐츠를 삭제 한 후에도 사용자의 데이터를 보유하지 않을 수 있습니다. 전자 메일을 처리 한 후에는 필요한 모든 데이터를 추출하여 해당 응용 프로그램의 도메인 모델 및 콘텐츠로 변환해야합니다. InboundEmail은 단순히 시스템에 남아있어 디버깅 및 법의학 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4cebebc40ca032328213ba837e90fd2c03899b5c" translate="yes" xml:space="preserve">
          <source>By default, associations look for objects only within the current module's scope. This can be important when you declare Active Record models within a module. For example:</source>
          <target state="translated">기본적으로 연결은 현재 모듈 범위 내에서만 개체를 ​​찾습니다. 모듈 내에서 Active Record 모델을 선언 할 때 중요 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="64a0aa5de03f66794c1d5af124d930b67b1707db" translate="yes" xml:space="preserve">
          <source>By default, associations will look for objects within the current module scope. Consider:</source>
          <target state="translated">기본적으로 연결은 현재 모듈 범위 내에서 개체를 찾습니다. 치다:</target>
        </trans-unit>
        <trans-unit id="af633a4b620679a511bd4b8737e7642209a20f89" translate="yes" xml:space="preserve">
          <source>By default, caching is only enabled in your production environment. To play around with caching locally you'll want to enable caching in your local environment by setting &lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the relevant &lt;code&gt;config/environments/*.rb&lt;/code&gt; file:</source>
          <target state="translated">기본적으로 캐싱은 프로덕션 환경에서만 사용 가능합니다. 로컬로 캐싱을 해결하려면 관련 &lt;code&gt;config/environments/*.rb&lt;/code&gt; 파일 에서 &lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정하여 로컬 환경에서 캐싱을 사용하도록 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="847913d7c0cdfbe0ddf75c5ef54474fc9abfb30d" translate="yes" xml:space="preserve">
          <source>By default, caching is only enabled in your production environment. You can play around with caching locally by running &lt;code&gt;rails dev:cache&lt;/code&gt;, or by setting &lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;config/environments/development.rb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee0dce7300ef46c96341e4ca00abeed7834d412" translate="yes" xml:space="preserve">
          <source>By default, dynamic segments don't accept dots - this is because the dot is used as a separator for formatted routes. If you need to use a dot within a dynamic segment, add a constraint that overrides this &amp;ndash; for example, &lt;code&gt;id: /[^\/]+/&lt;/code&gt; allows anything except a slash.</source>
          <target state="translated">기본적으로 동적 세그먼트는 점을 허용하지 않습니다. 이는 점이 형식화 된 경로의 구분 기호로 사용되기 때문입니다. 동적 세그먼트 내에서 점을 사용해야하는 경우이를 무시하는 제한 조건을 추가하십시오 (예 &lt;code&gt;id: /[^\/]+/&lt;/code&gt; 는 슬래시를 제외한 모든 것을 허용합니다).</target>
        </trans-unit>
        <trans-unit id="ff592ec5bfc5f8437e36bded91665d1a24834ada" translate="yes" xml:space="preserve">
          <source>By default, each log is created under &lt;code&gt;Rails.root/log/&lt;/code&gt; and the log file is named after the environment in which the application is running.</source>
          <target state="translated">기본적으로 각 로그는 &lt;code&gt;Rails.root/log/&lt;/code&gt; 아래에 작성 되며 로그 파일은 애플리케이션이 실행중인 환경의 이름을 따라 이름이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="e654fbdc3f1531ee78cb8e973c84d91d7ba22a45" translate="yes" xml:space="preserve">
          <source>By default, every Rails application has three environments: development, test, and production.</source>
          <target state="translated">기본적으로 모든 Rails 애플리케이션에는 개발, 테스트 및 프로덕션의 세 가지 환경이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa393fb6f3de66087f0367251e9568615f464d5f" translate="yes" xml:space="preserve">
          <source>By default, every Rails application has three environments: development, test, and production. The database for each one of them is configured in &lt;code&gt;config/database.yml&lt;/code&gt;.</source>
          <target state="translated">기본적으로 모든 Rails 애플리케이션에는 개발, 테스트 및 프로덕션의 세 가지 환경이 있습니다. 각각의 데이터베이스는 &lt;code&gt;config/database.yml&lt;/code&gt; 에 구성되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3852d5eb5c515cf372a7e56db16ac7d8a4cec7ae" translate="yes" xml:space="preserve">
          <source>By default, gzipped version of compiled assets will be generated, along with the non-gzipped version of assets. Gzipped assets help reduce the transmission of data over the wire. You can configure this by setting the &lt;code&gt;gzip&lt;/code&gt; flag.</source>
          <target state="translated">기본적으로 컴파일되지 않은 자산의 압축 된 버전은 압축되지 않은 버전의 자산과 함께 생성됩니다. 압축 된 자산은 와이어를 통한 데이터 전송을 줄입니다. &lt;code&gt;gzip&lt;/code&gt; 플래그 를 설정하여이를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51730220ac5248cfff0276f2d39fbed4c4232071" translate="yes" xml:space="preserve">
          <source>By default, if the delegation raises &lt;code&gt;NoMethodError&lt;/code&gt; and the target is &lt;code&gt;nil&lt;/code&gt; the exception is propagated. You can ask that &lt;code&gt;nil&lt;/code&gt; is returned instead with the &lt;code&gt;:allow_nil&lt;/code&gt; option:</source>
          <target state="translated">기본적으로 위임에서 &lt;code&gt;NoMethodError&lt;/code&gt; 가 발생 하고 대상이 &lt;code&gt;nil&lt;/code&gt; 이면 예외가 전파됩니다. &lt;code&gt;:allow_nil&lt;/code&gt; 옵션을 사용하여 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환 하도록 요청할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfd8d4585264cd393a7a0bed71a51cfc2802227a" translate="yes" xml:space="preserve">
          <source>By default, if you don't specify the key in which the parameters would be wrapped to, &lt;code&gt;ParamsWrapper&lt;/code&gt; will actually try to determine if there's a model related to it or not. This controller, for example:</source>
          <target state="translated">기본적으로 매개 변수가 랩핑 될 키를 지정하지 않으면 &lt;code&gt;ParamsWrapper&lt;/code&gt; 는 실제로 관련 모델이 있는지 여부를 판별하려고 시도합니다. 이 컨트롤러는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="02de027ce5e8d2cd7c46d23d8bcee582e736b04f" translate="yes" xml:space="preserve">
          <source>By default, if you use the &lt;code&gt;:plain&lt;/code&gt; option, the text is rendered without using the current layout. If you want Rails to put the text into the current layout, you need to add the &lt;code&gt;layout: true&lt;/code&gt; option and use the &lt;code&gt;.text.erb&lt;/code&gt; extension for the layout file.</source>
          <target state="translated">기본적으로 &lt;code&gt;:plain&lt;/code&gt; 옵션을 사용하면 현재 레이아웃을 사용하지 않고 텍스트가 렌더링됩니다. Rails가 텍스트를 현재 레이아웃에 배치하려면 &lt;code&gt;layout: true&lt;/code&gt; 옵션 을 추가 하고 레이아웃 파일에 &lt;code&gt;.text.erb&lt;/code&gt; 확장자를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8212ab60a929b0a4ed365640266c222a7d8dedd5" translate="yes" xml:space="preserve">
          <source>By default, in the production environment the application will render either a 404 or a 500 error message. In the development environment all unhandled exceptions are simply raised. These messages are contained in static HTML files in the public folder, in &lt;code&gt;404.html&lt;/code&gt; and &lt;code&gt;500.html&lt;/code&gt; respectively. You can customize these files to add some extra information and style, but remember that they are static HTML; i.e. you can't use ERB, SCSS, CoffeeScript, or layouts for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e66b8c426b3f5d574609aa83a001a8df0c8755" translate="yes" xml:space="preserve">
          <source>By default, inline rendering uses ERB. You can force it to use Builder instead with the &lt;code&gt;:type&lt;/code&gt; option:</source>
          <target state="translated">기본적으로 인라인 렌더링은 ERB를 사용합니다. &lt;code&gt;:type&lt;/code&gt; 옵션 대신 Builder를 사용하도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d3c77833f612f6f41a293bc6e3197ddfbb58f85" translate="yes" xml:space="preserve">
          <source>By default, it will search in &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;db&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt; directories for FIXME, OPTIMIZE, and TODO annotations in files with extension &lt;code&gt;.builder&lt;/code&gt;, &lt;code&gt;.rb&lt;/code&gt;, &lt;code&gt;.rake&lt;/code&gt;, &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.ruby&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, and &lt;code&gt;.erb&lt;/code&gt;.</source>
          <target state="translated">기본적으로, 그것은에서 검색합니다 &lt;code&gt;app&lt;/code&gt; , &lt;code&gt;config&lt;/code&gt; , &lt;code&gt;db&lt;/code&gt; , &lt;code&gt;lib&lt;/code&gt; 및 &lt;code&gt;test&lt;/code&gt; 확장자를 가진 파일에 FIXME, 최적화 및 TODO 주석의 디렉토리 &lt;code&gt;.builder&lt;/code&gt; , &lt;code&gt;.rb&lt;/code&gt; , &lt;code&gt;.rake&lt;/code&gt; , &lt;code&gt;.yml&lt;/code&gt; , &lt;code&gt;.yaml&lt;/code&gt; , &lt;code&gt;.ruby&lt;/code&gt; , &lt;code&gt;.css&lt;/code&gt; , &lt;code&gt;.js&lt;/code&gt; 및 &lt;code&gt;.erb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="609eab092255b2f3c0b9e4ae2ebc833becaa5a42" translate="yes" xml:space="preserve">
          <source>By default, migrations will describe the actions they are taking, writing them to the console as they happen, along with benchmarks describing how long each step took.</source>
          <target state="translated">기본적으로 마이그레이션은 수행중인 조치를 설명하고 발생하는대로 콘솔에 작성하며 각 단계에 소요 된 시간을 설명하는 벤치 마크와 함께합니다.</target>
        </trans-unit>
        <trans-unit id="123510cef064b10b7843a0bd2628fd3308fc823e" translate="yes" xml:space="preserve">
          <source>By default, only instances of &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; itself are extractable. Subclasses of &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; may implement this method and return true to declare themselves as extractable. If a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; is extractable, &lt;a href=&quot;array#method-i-extract_options-21&quot;&gt;&lt;code&gt;Array#extract_options!&lt;/code&gt;&lt;/a&gt; pops it from the &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; when it is the last element of the &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5db4c2914e33c41d414c6a67805390aaa6216c3" translate="yes" xml:space="preserve">
          <source>By default, only instances of &lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt; itself are extractable. Subclasses of &lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt; may implement this method and return true to declare themselves as extractable. If a &lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt; is extractable, &lt;a href=&quot;array#method-i-extract_options-21&quot;&gt;Array#extract_options!&lt;/a&gt; pops it from the &lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt; when it is the last element of the &lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;hash&quot;&gt;해시&lt;/a&gt; 자체의 인스턴스 만 추출 가능합니다. &lt;a href=&quot;hash&quot;&gt;Hash의&lt;/a&gt; 서브 클래스는 이 메소드를 구현하고 자체를 추출 가능으로 선언하기 위해 true를 리턴 할 수 있습니다. &lt;a href=&quot;hash&quot;&gt;해시&lt;/a&gt; 를 추출 할 수 있으면 &lt;a href=&quot;array#method-i-extract_options-21&quot;&gt;Array # extract_options! &lt;/a&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt; 의 마지막 요소 인 경우 &lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt; 에서 팝합니다 .</target>
        </trans-unit>
        <trans-unit id="d198eb7fc31bdb2fdbb335d1984f9c33fbf7ed07" translate="yes" xml:space="preserve">
          <source>By default, only the ApplicationController in a Rails application inherits from &lt;code&gt;ActionController::Base&lt;/code&gt;. All other controllers inherit from ApplicationController. This gives you one class to configure things such as request forgery protection and filtering of sensitive request parameters.</source>
          <target state="translated">기본적으로 Rails 애플리케이션의 ApplicationController만이 &lt;code&gt;ActionController::Base&lt;/code&gt; 에서 상속받습니다 . 다른 모든 컨트롤러는 ApplicationController에서 상속됩니다. 이를 통해 요청 위조 방지 및 중요한 요청 매개 변수 필터링과 같은 항목을 구성 할 수있는 하나의 클래스가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="86bb53fd89c3fc069086208470cad95eac49b68c" translate="yes" xml:space="preserve">
          <source>By default, records are fetched in ascending order of the primary key. The &lt;code&gt;:start&lt;/code&gt; option allows you to configure the first ID of the sequence whenever the lowest ID is not the one you need. This would be useful, for example, if you wanted to resume an interrupted batch process, provided you saved the last processed ID as a checkpoint.</source>
          <target state="translated">기본적으로 레코드는 기본 키의 오름차순으로 가져옵니다. &lt;code&gt;:start&lt;/code&gt; 옵션은 가장 낮은 ID는 당신이 필요로하는 것이 아니다 때마다 순서의 첫 번째 ID를 구성 할 수 있습니다. 예를 들어, 마지막으로 처리 된 ID를 검사 점으로 저장 한 경우 중단 된 배치 프로세스를 재개하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cd4f492f788937036c13a30e7e61921f82acbbc0" translate="yes" xml:space="preserve">
          <source>By default, running &lt;code&gt;bin/rails test&lt;/code&gt; won't run your system tests. Make sure to run &lt;code&gt;bin/rails test:system&lt;/code&gt; to actually run them. You can also run &lt;code&gt;bin/rails test:all&lt;/code&gt; to run all tests, including system tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16ce60273cc883089e65450bdf8d547aa8e28be" translate="yes" xml:space="preserve">
          <source>By default, running &lt;code&gt;rails test&lt;/code&gt; won't run your system tests. Make sure to run &lt;code&gt;rails test:system&lt;/code&gt; to actually run them.</source>
          <target state="translated">기본적으로 &lt;code&gt;rails test&lt;/code&gt; 실행은 시스템 테스트를 실행하지 않습니다. 실제로 &lt;code&gt;rails test:system&lt;/code&gt; 을 실행하려면 rails test : system 을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="3f2f2749d7c328d919b4687a9a656f4f38c6b85f" translate="yes" xml:space="preserve">
          <source>By default, save always runs validations. If any of them fail the action is cancelled and &lt;a href=&quot;persistence#method-i-save&quot;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;, and the record won't be saved. However, if you supply &lt;code&gt;validate: false&lt;/code&gt;, validations are bypassed altogether. See &lt;a href=&quot;validations&quot;&gt;&lt;code&gt;ActiveRecord::Validations&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114050fe2f645f328e15725ae7bb0ecb7aa5f877" translate="yes" xml:space="preserve">
          <source>By default, save always runs validations. If any of them fail the action is cancelled and &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;, and the record won't be saved. However, if you supply &lt;code&gt;validate: false&lt;/code&gt;, validations are bypassed altogether. See &lt;a href=&quot;validations&quot;&gt;ActiveRecord::Validations&lt;/a&gt; for more information.</source>
          <target state="translated">기본적으로 save는 항상 유효성 검사를 실행합니다. 이 중 하나라도 실패하면 작업이 취소되고 &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt; 가 &lt;code&gt;false&lt;/code&gt; 를 반환 하고 레코드가 저장되지 않습니다. 그러나 &lt;code&gt;validate: false&lt;/code&gt; 하면 유효성 검증이 모두 무시됩니다. 자세한 내용은 &lt;a href=&quot;validations&quot;&gt;ActiveRecord :: Validations&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fcb578a472cb6b7e250feb08c2df8620ec4ff9ee" translate="yes" xml:space="preserve">
          <source>By default, such validations will run every time you call &lt;code&gt;valid?&lt;/code&gt; or save the object. But it is also possible to control when to run these custom validations by giving an &lt;code&gt;:on&lt;/code&gt; option to the &lt;code&gt;validate&lt;/code&gt; method, with either: &lt;code&gt;:create&lt;/code&gt; or &lt;code&gt;:update&lt;/code&gt;.</source>
          <target state="translated">기본적으로 이러한 유효성 검사는 &lt;code&gt;valid?&lt;/code&gt; 전화를 걸 때마다 실행 됩니까? 또는 객체를 저장하십시오. 그러나 &lt;code&gt;:create&lt;/code&gt; 또는 &lt;code&gt;:update&lt;/code&gt; 중 하나 를 사용하여 &lt;code&gt;validate&lt;/code&gt; 메소드 &lt;code&gt;:on&lt;/code&gt; 옵션을 제공하여 이러한 사용자 정의 유효성 검증을 실행할시기를 제어 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f01a8aba0a28fcc401541acdb2b7b6c490f844a7" translate="yes" xml:space="preserve">
          <source>By default, system tests are run with the Selenium driver, using the Chrome browser, and a screen size of 1400x1400. The next section explains how to change the default settings.</source>
          <target state="translated">기본적으로 시스템 테스트는 Chrome 브라우저 및 화면 크기 1400x1400을 사용하여 Selenium 드라이버로 실행됩니다. 다음 섹션에서는 기본 설정을 변경하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ffdd9b901e5b931bd139e2fe24a15cf865aad76b" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;mysql2adapter&quot;&gt;&lt;code&gt;Mysql2Adapter&lt;/code&gt;&lt;/a&gt; will consider all columns of type &lt;code&gt;tinyint(1)&lt;/code&gt; as boolean. If you wish to disable this emulation you can add the following line to your application.rb file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a3105d36fb085c46f1408d8fb5d1a92329036b" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;mysql2adapter&quot;&gt;Mysql2Adapter&lt;/a&gt; will consider all columns of type &lt;code&gt;tinyint(1)&lt;/code&gt; as boolean. If you wish to disable this emulation you can add the following line to your application.rb file:</source>
          <target state="translated">기본적으로 &lt;a href=&quot;mysql2adapter&quot;&gt;Mysql2Adapter&lt;/a&gt; 는 &lt;code&gt;tinyint(1)&lt;/code&gt; 유형의 모든 열을 부울로 간주합니다 . 이 에뮬레이션을 비활성화하려면 application.rb 파일에 다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="23b5d82eca2c31f1d3e2c79d85b68ec43db63d1b" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;stylesheet_link_tag&lt;/code&gt; creates links with &lt;code&gt;media=&quot;screen&quot; rel=&quot;stylesheet&quot;&lt;/code&gt;. You can override any of these defaults by specifying an appropriate option (&lt;code&gt;:media&lt;/code&gt;, &lt;code&gt;:rel&lt;/code&gt;):</source>
          <target state="translated">기본적으로 &lt;code&gt;stylesheet_link_tag&lt;/code&gt; 는 &lt;code&gt;media=&quot;screen&quot; rel=&quot;stylesheet&quot;&lt;/code&gt; 링크를 만듭니다 . 적절한 옵션 ( &lt;code&gt;:media&lt;/code&gt; , &lt;code&gt;:rel&lt;/code&gt; ) 을 지정하여 이러한 기본값을 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfc59ae651f3fde8b88ed44b95d08d2644ebb247" translate="yes" xml:space="preserve">
          <source>By default, the Action Text editor and content is styled by the Trix defaults. If you want to change these defaults, you'll want to remove the &lt;code&gt;app/assets/stylesheets/actiontext.scss&lt;/code&gt; linker and base your stylings on the &lt;a href=&quot;https://raw.githubusercontent.com/basecamp/trix/master/dist/trix.css&quot;&gt;contents of that file&lt;/a&gt;.</source>
          <target state="translated">기본적으로 작업 텍스트 편집기 및 내용은 Trix 기본값으로 스타일이 지정됩니다. 이러한 기본값을 변경하려면 &lt;code&gt;app/assets/stylesheets/actiontext.scss&lt;/code&gt; 링커 를 제거하고 &lt;a href=&quot;https://raw.githubusercontent.com/basecamp/trix/master/dist/trix.css&quot;&gt;해당 파일&lt;/a&gt; 의 내용에 스타일 을 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8240cb7e0c6d651288034d3949d5d5ca174de738" translate="yes" xml:space="preserve">
          <source>By default, the autoload paths of an application consist of all the subdirectories of &lt;code&gt;app&lt;/code&gt; that exist when the application boots ---except for &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;views&lt;/code&gt;,--- plus the autoload paths of engines it might depend on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81aff0fd3bf0ce9494d54d3dc738cefd4f69d26" translate="yes" xml:space="preserve">
          <source>By default, the autoload paths of an application consist of all the subdirectories of &lt;code&gt;app&lt;/code&gt; that exist when the application boots ---except for &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;javascripts&lt;/code&gt;, &lt;code&gt;views&lt;/code&gt;,--- plus the autoload paths of engines it might depend on.</source>
          <target state="translated">기본적으로 응용 프로그램의 자동로드 경로는 모두의 서브 디렉토리로 구성 &lt;code&gt;app&lt;/code&gt; 응용 프로그램 부팅 ---를 제외하면 존재하는 &lt;code&gt;assets&lt;/code&gt; , &lt;code&gt;javascripts&lt;/code&gt; , &lt;code&gt;views&lt;/code&gt; , --- 플러스가 의존 할 수 엔진의 자동로드 경로를.</target>
        </trans-unit>
        <trans-unit id="b036d1ab8f25dd551edd0b6dd0770ed0bfc10ce0" translate="yes" xml:space="preserve">
          <source>By default, the cache store will not attempt to reconnect to Redis if the connection fails during a request. If you experience frequent disconnects you may wish to enable reconnect attempts.</source>
          <target state="translated">요청 중에 연결이 실패하면 캐시 저장소는 기본적으로 Redis에 다시 연결을 시도하지 않습니다. 연결이 자주 끊기는 경우 다시 연결 시도를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52833aaf11a8ae2a4a5fab0e6db8f6fd913a7fd9" translate="yes" xml:space="preserve">
          <source>By default, the credentials file contains the application's &lt;code&gt;secret_key_base&lt;/code&gt;. It can also be used to store other secrets such as access keys for external APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3d7be08271d638affa89bbbf6a43b2e42533fc" translate="yes" xml:space="preserve">
          <source>By default, the email will be enqueued using &lt;code&gt;ActionMailer::DeliveryJob&lt;/code&gt;. Each &lt;code&gt;ActionMailer::Base&lt;/code&gt; class can specify the job to use by setting the class variable &lt;code&gt;delivery_job&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;ActionMailer::DeliveryJob&lt;/code&gt; 사용하여 이메일을 대기열에 넣습니다 . 각 &lt;code&gt;ActionMailer::Base&lt;/code&gt; 클래스는 클래스 변수 &lt;code&gt;delivery_job&lt;/code&gt; 을 설정하여 사용할 작업을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1490d241c5b56612ffd80e62ec99cac3c0166235" translate="yes" xml:space="preserve">
          <source>By default, the engine's controllers inherit from &lt;code&gt;Blorgh::ApplicationController&lt;/code&gt;. So, after making this change they will have access to the main application's &lt;code&gt;ApplicationController&lt;/code&gt;, as though they were part of the main application.</source>
          <target state="translated">기본적으로 엔진의 컨트롤러는 &lt;code&gt;Blorgh::ApplicationController&lt;/code&gt; 에서 상속받습니다 . 따라서이 변경을 수행 한 후에는 기본 애플리케이션의 일부인 것처럼 기본 애플리케이션의 &lt;code&gt;ApplicationController&lt;/code&gt; 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c48eb6439a23d2c938084f80398ea13b3f1cbaac" translate="yes" xml:space="preserve">
          <source>By default, the generated form element has a class name of &lt;code&gt;button_to&lt;/code&gt; to allow styling of the form itself and its children. This can be changed using the &lt;code&gt;:form_class&lt;/code&gt; modifier within &lt;code&gt;html_options&lt;/code&gt;. You can control the form submission and input element behavior using &lt;code&gt;html_options&lt;/code&gt;. This method accepts the &lt;code&gt;:method&lt;/code&gt; modifier described in the &lt;code&gt;link_to&lt;/code&gt; documentation. If no &lt;code&gt;:method&lt;/code&gt; modifier is given, it will default to performing a POST operation. You can also disable the button by passing &lt;code&gt;disabled: true&lt;/code&gt; in &lt;code&gt;html_options&lt;/code&gt;. If you are using RESTful routes, you can pass the &lt;code&gt;:method&lt;/code&gt; to change the HTTP verb used to submit the form.</source>
          <target state="translated">기본적으로 생성 된 양식 요소의 양식 이름은 &lt;code&gt;button_to&lt;/code&gt; 이며 양식 자체 및 해당 하위 스타일을 지정할 수 있습니다. 이것은 사용하여 변경할 수 있습니다 &lt;code&gt;:form_class&lt;/code&gt; 내 수정 &lt;code&gt;html_options&lt;/code&gt; 을 . &lt;code&gt;html_options&lt;/code&gt; 를 사용하여 양식 제출 및 입력 요소 동작을 제어 할 수 있습니다 . 이 메소드는 &lt;code&gt;link_to&lt;/code&gt; 문서에 설명 된 &lt;code&gt;:method&lt;/code&gt; 수정자를 허용합니다 . &lt;code&gt;:method&lt;/code&gt; 수정자가 제공 되지 않으면 POST 작업이 기본적으로 수행됩니다. &lt;code&gt;html_options&lt;/code&gt; 에서 &lt;code&gt;disabled: true&lt;/code&gt; 를 전달하여 버튼을 비활성화 할 수도 있습니다 . RESTful 경로를 사용하는 경우 &lt;code&gt;:method&lt;/code&gt; 를 전달할 수 있습니다 . 양식을 제출하는 데 사용되는 HTTP 동사를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="c5c3dd83daf1b5c8bb51b72e89c88ca23da6a2b7" translate="yes" xml:space="preserve">
          <source>By default, the name of the join table comes from the union of the first two arguments provided to create_join_table, in alphabetical order. To customize the name of the table, provide a &lt;code&gt;:table_name&lt;/code&gt; option:</source>
          <target state="translated">기본적으로 조인 테이블의 이름은 알파벳 순서로 create_join_table에 제공된 처음 두 인수의 합집합에서 비롯됩니다. 테이블 이름을 사용자 정의하려면 &lt;code&gt;:table_name&lt;/code&gt; 옵션을 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="700a335ca370f09fccdda8f0085d2839f1f5cb8c" translate="yes" xml:space="preserve">
          <source>By default, the name of the root element is the underscored and dasherized plural of the name of the class of the first item, provided the rest of elements belong to that type (checked with &lt;code&gt;is_a?&lt;/code&gt;) and they are not hashes. In the example above that's &quot;contributors&quot;.</source>
          <target state="translated">기본적으로 루트 요소의 이름은 첫 번째 항목 클래스의 이름에 밑줄이 쳐진 복수형입니다. 나머지 요소는 해당 유형에 속하고 ( &lt;code&gt;is_a?&lt;/code&gt; 로 확인 ) 해시가 아닙니다. 위의 예에서는 &quot;기여자&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="66400cdcdfde722a493445a2d8861c5bedfa5144" translate="yes" xml:space="preserve">
          <source>By default, the tempfile is created in &lt;code&gt;Dir.tmpdir&lt;/code&gt;. Pass &lt;code&gt;tmpdir:&lt;/code&gt; to create it in a different directory:</source>
          <target state="translated">기본적으로 임시 파일은 &lt;code&gt;Dir.tmpdir&lt;/code&gt; 에 작성됩니다 . 패스 &lt;code&gt;tmpdir:&lt;/code&gt; 다른 디렉토리에 생성 :</target>
        </trans-unit>
        <trans-unit id="c1df720e8481feda893ebf065ca301feae7d8bd8" translate="yes" xml:space="preserve">
          <source>By default, these preview classes live in &lt;code&gt;test/mailers/previews&lt;/code&gt;. This can be configured using the &lt;code&gt;preview_path&lt;/code&gt; option. For example, if you want to change it to &lt;code&gt;lib/mailer_previews&lt;/code&gt;, you can configure it in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">기본적으로 이러한 미리보기 클래스는 &lt;code&gt;test/mailers/previews&lt;/code&gt; 에 있습니다. 이것은 &lt;code&gt;preview_path&lt;/code&gt; 옵션을 사용하여 구성 할 수 있습니다 . 예를 들어, &lt;code&gt;lib/mailer_previews&lt;/code&gt; 로 변경하려면 &lt;code&gt;config/application.rb&lt;/code&gt; 에서 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6a1ab98b65e63bb770806e66d96be70cb05aaf6" translate="yes" xml:space="preserve">
          <source>By default, this file contains the application's &lt;code&gt;secret_key_base&lt;/code&gt;, but it could also be used to store other credentials such as access keys for external APIs.</source>
          <target state="translated">기본적으로이 파일에는 애플리케이션의 &lt;code&gt;secret_key_base&lt;/code&gt; 가 포함 되지만 외부 API의 액세스 키와 같은 다른 신임 정보를 저장하는 데 사용될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8d1df8b8ac93d6ff3bc7e29deefcb4884ef4930" translate="yes" xml:space="preserve">
          <source>By default, this will use the &lt;code&gt;gen_random_uuid()&lt;/code&gt; function from the &lt;code&gt;pgcrypto&lt;/code&gt; extension. As that extension is only available in PostgreSQL 9.4+, for earlier versions an explicit default can be set to use &lt;code&gt;uuid_generate_v4()&lt;/code&gt; from the &lt;code&gt;uuid-ossp&lt;/code&gt; extension instead:</source>
          <target state="translated">기본적으로 이것은 &lt;code&gt;pgcrypto&lt;/code&gt; 확장 의 &lt;code&gt;gen_random_uuid()&lt;/code&gt; 함수를 사용합니다 . 해당 확장은 PostgreSQL 9.4+에서만 사용할 수 있으므로 이전 버전의 경우 &lt;code&gt;uuid-ossp&lt;/code&gt; 확장 에서 &lt;code&gt;uuid_generate_v4()&lt;/code&gt; 를 대신 사용하도록 명시 적 기본값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b64285b82b436f810dc85b9858ebe7a5003fceb" translate="yes" xml:space="preserve">
          <source>By default, unhandled exceptions are caught and logged to Rails' logger. If you would like to globally intercept these exceptions and report them to an external bug tracking service, for example, you can do so with &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from&quot;&gt;&lt;code&gt;rescue_from&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273d6eb3c883bb60a19e62f608fab6886e38cfbe" translate="yes" xml:space="preserve">
          <source>By default, when you generate a channel, an associated test will be generated as well under the &lt;code&gt;test/channels&lt;/code&gt; directory. Here's an example test with a chat channel:</source>
          <target state="translated">기본적으로 채널을 생성하면 &lt;code&gt;test/channels&lt;/code&gt; 디렉토리 아래에 관련 테스트가 생성됩니다 . 채팅 채널을 사용한 테스트 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd1554b258f5a2aecf73784ca5a0c00c73b9d0f1" translate="yes" xml:space="preserve">
          <source>By default, when you generate a job, an associated test will be generated as well under the &lt;code&gt;test/jobs&lt;/code&gt; directory. Here's an example test with a billing job:</source>
          <target state="translated">기본적으로 작업을 생성하면 &lt;code&gt;test/jobs&lt;/code&gt; 디렉토리 아래에 연관된 테스트가 생성됩니다 . 청구 작업으로 테스트하는 예제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b9012e51b12767ab405ee91151aab4284106d0a1" translate="yes" xml:space="preserve">
          <source>By default, when you generate new Rails application with Action Cable, a test for the base connection class (&lt;code&gt;ApplicationCable::Connection&lt;/code&gt;) is generated as well under &lt;code&gt;test/channels/application_cable&lt;/code&gt; directory.</source>
          <target state="translated">기본적으로 Action Cable을 사용하여 새 Rails 애플리케이션을 생성하면 &lt;code&gt;test/channels/application_cable&lt;/code&gt; 디렉토리에 기본 연결 클래스 ( &lt;code&gt;ApplicationCable::Connection&lt;/code&gt; )에 대한 테스트 가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="0143d11bdfa5c90611cf827738b7aa873d344cef" translate="yes" xml:space="preserve">
          <source>By following along with this guide, you'll create a Rails project called &lt;code&gt;blog&lt;/code&gt;, a (very) simple weblog. Before you can start building the application, you need to make sure that you have Rails itself installed.</source>
          <target state="translated">이 안내서와 함께 간단한 &lt;code&gt;blog&lt;/code&gt; 인 blog 라는 Rails 프로젝트를 만들 것 입니다. 애플리케이션 빌드를 시작하기 전에 Rails 자체가 설치되어 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="270520a6a2936fb60a250a09806cd7d04dcacfa0" translate="yes" xml:space="preserve">
          <source>By having isolated routes such as this, if you wish to link to an area of an engine from within an application, you will need to use the engine's routing proxy method. Calls to normal routing methods such as &lt;code&gt;articles_path&lt;/code&gt; may end up going to undesired locations if both the application and the engine have such a helper defined.</source>
          <target state="translated">이와 같은 경로를 분리하여 응용 프로그램 내에서 엔진 영역에 연결하려면 엔진의 라우팅 프록시 방법을 사용해야합니다. 애플리케이션과 엔진 모두에 헬퍼가 정의되어 있으면 &lt;code&gt;articles_path&lt;/code&gt; 와 같은 일반 라우팅 메소드에 대한 호출로 인해 원하지 않는 위치가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ac9809861dfe61aa3198ba37e6f1b489cb0e06d" translate="yes" xml:space="preserve">
          <source>By including the &lt;code&gt;:inverse_of&lt;/code&gt; option in the &lt;code&gt;has_many&lt;/code&gt; association declaration, Active Record will now recognize the bi-directional association:</source>
          <target state="translated">&lt;code&gt;has_many&lt;/code&gt; 연관 선언 에 &lt;code&gt;:inverse_of&lt;/code&gt; 옵션 을 포함 시키면 Active Record는 이제 양방향 연관을 인식합니다.</target>
        </trans-unit>
        <trans-unit id="bf0f5954725fbd86c76ebc77fc590ecf4dc14b94" translate="yes" xml:space="preserve">
          <source>By inheriting from the &lt;code&gt;Rails::Engine&lt;/code&gt; class, this gem notifies Rails that there's an engine at the specified path, and will correctly mount the engine inside the application, performing tasks such as adding the &lt;code&gt;app&lt;/code&gt; directory of the engine to the load path for models, mailers, controllers, and views.</source>
          <target state="translated">이 gem 은 &lt;code&gt;Rails::Engine&lt;/code&gt; 클래스 에서 상속 하여 지정된 경로에 엔진이 있음을 Rails에 알리고 엔진을 애플리케이션의 엔진에 올바르게 마운트하여 모델의로드 경로에 엔진 의 &lt;code&gt;app&lt;/code&gt; 디렉토리 추가와 같은 작업을 수행합니다. , 메일러, 컨트롤러 및보기</target>
        </trans-unit>
        <trans-unit id="6b2a116e887e4db06311e729e0bc3d70bea386fa" translate="yes" xml:space="preserve">
          <source>By now you've caught a glimpse of some of the assertions that are available. Assertions are the worker bees of testing. They are the ones that actually perform the checks to ensure that things are going as planned.</source>
          <target state="translated">이제 사용 가능한 어설 션 중 일부를 엿볼 수 있습니다. 주장은 작업자의 테스트 꿀벌입니다. 실제로 점검을 수행하여 계획대로 진행되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="afd1de24e344969ebf614cde3d3d37ffb1b5d5dd" translate="yes" xml:space="preserve">
          <source>By now, it is still possible to use &lt;code&gt;classic&lt;/code&gt; mode. However, &lt;code&gt;classic&lt;/code&gt; is deprecated and will be eventually removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf3d27e97eb611cbb61948d23726cc57a70ae96" translate="yes" xml:space="preserve">
          <source>By opting-out you optimize &lt;code&gt;$LOAD_PATH&lt;/code&gt; lookups (less directories to check), and save Bootsnap work and memory consumption, since it does not need to build an index for these directories.</source>
          <target state="translated">선택 해제하면 &lt;code&gt;$LOAD_PATH&lt;/code&gt; 조회 (검사 할 디렉토리가 적음) 를 최적화 하고 부트 스냅 작업 및 메모리 소비를 절약 할 수 있습니다. 이러한 디렉토리에 대한 색인을 작성할 필요가 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="08b554be520c671986e55508aa34703171b8cd58" translate="yes" xml:space="preserve">
          <source>By quieting the mix-in noise, we arrive at a natural, low-ceremony way to separate bite-sized concerns.</source>
          <target state="translated">믹스 인 소음을 줄임으로써 우리는 물린 크기의 문제를 분리 할 수있는 자연스럽고 낮은 의식 방식에 도달합니다.</target>
        </trans-unit>
        <trans-unit id="03bc04356767a24bf079177a476e594ca026f752" translate="yes" xml:space="preserve">
          <source>By representing the &lt;code&gt;author&lt;/code&gt; association's object with the &lt;code&gt;User&lt;/code&gt; class, a link is established between the engine and the application. There needs to be a way of associating the records in the &lt;code&gt;blorgh_articles&lt;/code&gt; table with the records in the &lt;code&gt;users&lt;/code&gt; table. Because the association is called &lt;code&gt;author&lt;/code&gt;, there should be an &lt;code&gt;author_id&lt;/code&gt; column added to the &lt;code&gt;blorgh_articles&lt;/code&gt; table.</source>
          <target state="translated">표현으로 &lt;code&gt;author&lt;/code&gt; 와 협회의 객체를 &lt;code&gt;User&lt;/code&gt; 클래스, 링크가 엔진과 응용 프로그램 사이에 설정됩니다. &lt;code&gt;blorgh_articles&lt;/code&gt; 테이블의 레코드를 &lt;code&gt;users&lt;/code&gt; 테이블 의 레코드와 연관시키는 방법이 필요 합니다. 연계가 호출되기 때문에 &lt;code&gt;author&lt;/code&gt; ,이 생길 수 있어야 &lt;code&gt;author_id&lt;/code&gt; 받는 추가 열 &lt;code&gt;blorgh_articles&lt;/code&gt; 의 테이블.</target>
        </trans-unit>
        <trans-unit id="f5b4de4d1dea24b5a8e1668f7ca2637ea3d34895" translate="yes" xml:space="preserve">
          <source>By requesting &lt;code&gt;'/foo/bar.json'&lt;/code&gt;, your &lt;code&gt;params[:pages]&lt;/code&gt; will be equal to &lt;code&gt;'foo/bar'&lt;/code&gt; with the request format of JSON. If you want the old 3.0.x behavior back, you could supply &lt;code&gt;format: false&lt;/code&gt; like this:</source>
          <target state="translated">요청에 의해 &lt;code&gt;'/foo/bar.json'&lt;/code&gt; 를 , 당신의 &lt;code&gt;params[:pages]&lt;/code&gt; 와 동일합니다 &lt;code&gt;'foo/bar'&lt;/code&gt; JSON의 요청 형식. 이전 3.0.x 동작을 다시 원하면 다음 과 같이 &lt;code&gt;format: false&lt;/code&gt; 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a74d66e293c28ea3c03fbedbc34d4a00acee5d4a" translate="yes" xml:space="preserve">
          <source>By requiring this file, &lt;code&gt;test_helper.rb&lt;/code&gt; the default configuration to run our tests is loaded. We will include this with all the tests we write, so any methods added to this file are available to all our tests.</source>
          <target state="translated">이 파일이 필요하면 &lt;code&gt;test_helper.rb&lt;/code&gt; 테스트를 실행하기위한 기본 구성이로드됩니다. 우리가 작성한 모든 테스트에이를 포함 시키므로이 파일에 추가 된 모든 방법을 모든 테스트에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb971cc67109a58ca4971d8c6fe817c86f37825a" translate="yes" xml:space="preserve">
          <source>By running your Rails tests you can ensure your code adheres to the desired functionality even after some major code refactoring.</source>
          <target state="translated">Rails 테스트를 실행하면 주요 코드 리팩토링 후에도 코드가 원하는 기능을 준수하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86d406b41de4b45d97167a5b7c1714d54bca8de4" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;ActiveSupport::Concern&lt;/code&gt; the above module could instead be written as:</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Concern&lt;/code&gt; 을 사용 하면 위 모듈을 대신 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe081363c5f5900bb3966403cff5cc265c7e77cc" translate="yes" xml:space="preserve">
          <source>By using one of these validations, you will ensure the value will NOT be &lt;code&gt;nil&lt;/code&gt; which would result in a &lt;code&gt;NULL&lt;/code&gt; value in most cases.</source>
          <target state="translated">이러한 유효성 검증 중 하나를 사용하면 대부분의 경우 &lt;code&gt;NULL&lt;/code&gt; 값을 초래 하는 값이 &lt;code&gt;nil&lt;/code&gt; 이 아닌지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="0f98d1ed5123cb2427de398074cdddf80592a5d5" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;after_commit&lt;/code&gt; callback we can account for this case.</source>
          <target state="translated">&lt;code&gt;after_commit&lt;/code&gt; 콜백 을 사용 하여이 경우를 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d9b34b7252c73d97dd60be03b3ab86b04ff5d5d" translate="yes" xml:space="preserve">
          <source>By using the full URL, your links will now work in your emails.</source>
          <target state="translated">전체 URL을 사용하면 이제 링크가 이메일에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a5738629055acf1d8891486f4875af7d513ca49f" translate="yes" xml:space="preserve">
          <source>By viewing the post, the browser finds an image tag. It tries to load the suspected image from &lt;code&gt;www.webapp.com&lt;/code&gt;. As explained before, it will also send along the cookie with the valid session ID.</source>
          <target state="translated">게시물을 보면 브라우저가 이미지 태그를 찾습니다. &lt;code&gt;www.webapp.com&lt;/code&gt; 에서 의심되는 이미지를로드하려고 시도합니다 . 앞에서 설명한 것처럼 유효한 세션 ID와 함께 쿠키를 함께 보냅니다.</target>
        </trans-unit>
        <trans-unit id="17f5804ad4199750e2017568dcba1c9c39229943" translate="yes" xml:space="preserve">
          <source>Byte range attempted to be read</source>
          <target state="translated">바이트 범위를 읽으려고했습니다</target>
        </trans-unit>
        <trans-unit id="50dd937e8d231565b5121caa2cc20cbd6f42f956" translate="yes" xml:space="preserve">
          <source>Bytea</source>
          <target state="translated">Bytea</target>
        </trans-unit>
        <trans-unit id="8e5fdab92dece79d7629d6d901687613ddc6ab5a" translate="yes" xml:space="preserve">
          <source>Bytes</source>
          <target state="translated">Bytes</target>
        </trans-unit>
        <trans-unit id="f6b6da81dc05b360fab06bfc3fc2464fc9da1dab" translate="yes" xml:space="preserve">
          <source>CACHED_PLAN_HEURISTIC</source>
          <target state="translated">CACHED_PLAN_HEURISTIC</target>
        </trans-unit>
        <trans-unit id="f6665c2627be2b969dcd410132185e0dd599f37b" translate="yes" xml:space="preserve">
          <source>CALLBACKS</source>
          <target state="translated">CALLBACKS</target>
        </trans-unit>
        <trans-unit id="8aff5ec0eef0285b65bb0c07577155d1fe4d5c29" translate="yes" xml:space="preserve">
          <source>CALLBACKS_OPTIONS</source>
          <target state="translated">CALLBACKS_OPTIONS</target>
        </trans-unit>
        <trans-unit id="181ebf8ab9eb21dbca1c3786fcc0b0a0f1d47841" translate="yes" xml:space="preserve">
          <source>CALLBACK_FILTER_TYPES</source>
          <target state="translated">CALLBACK_FILTER_TYPES</target>
        </trans-unit>
        <trans-unit id="29f7fab2e2080fba054676783db80fe3ca4907d2" translate="yes" xml:space="preserve">
          <source>CALL_COMPILABLE_REGEXP</source>
          <target state="translated">CALL_COMPILABLE_REGEXP</target>
        </trans-unit>
        <trans-unit id="c58e18057f4c6bb2b96a3da70e5a0e885500bc92" translate="yes" xml:space="preserve">
          <source>CANONICAL_ACTIONS</source>
          <target state="translated">CANONICAL_ACTIONS</target>
        </trans-unit>
        <trans-unit id="98309270c5f22edef17d751ed5749e7b245bfe30" translate="yes" xml:space="preserve">
          <source>CAPTCHAs</source>
          <target state="translated">CAPTCHAs</target>
        </trans-unit>
        <trans-unit id="a9afdd444207a53663ccdb3e250f3351c7b41795" translate="yes" xml:space="preserve">
          <source>CC addresses of the mail</source>
          <target state="translated">메일의 CC 주소</target>
        </trans-unit>
        <trans-unit id="fc4e3d3cd53388319d8062949a23653dc830fbb9" translate="yes" xml:space="preserve">
          <source>CDN stands for &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_delivery_network&quot;&gt;Content Delivery Network&lt;/a&gt;, they are primarily designed to cache assets all over the world so that when a browser requests the asset, a cached copy will be geographically close to that browser. If you are serving assets directly from your Rails server in production, the best practice is to use a CDN in front of your application.</source>
          <target state="translated">CDN은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_delivery_network&quot;&gt;Content Delivery Network의&lt;/a&gt; 약어로 , 브라우저가 자산을 요청할 때 캐시 된 사본이 해당 브라우저와 지리적으로 가깝도록 전 세계의 자산을 캐시하도록 설계되었습니다. 프로덕션 환경에서 Rails 서버에서 직접 자산을 제공하는 경우 가장 좋은 방법은 응용 프로그램 앞에서 CDN을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3437afd36f4442b9e8cd1507b7915d934b960f93" translate="yes" xml:space="preserve">
          <source>CDNs</source>
          <target state="translated">CDNs</target>
        </trans-unit>
        <trans-unit id="c7587bfed0f37d68cff25bbcb047d9ca1123c982" translate="yes" xml:space="preserve">
          <source>CGI_VARIABLES</source>
          <target state="translated">CGI_VARIABLES</target>
        </trans-unit>
        <trans-unit id="c5fe2cad4d8f219d3d223c341ee78037a40253fa" translate="yes" xml:space="preserve">
          <source>CHANNEL_IDENTIFIER</source>
          <target state="translated">CHANNEL_IDENTIFIER</target>
        </trans-unit>
        <trans-unit id="da14546bc67bd0821d615e140eecc7a9aca59d37" translate="yes" xml:space="preserve">
          <source>CLAUSE_METHODS</source>
          <target state="translated">CLAUSE_METHODS</target>
        </trans-unit>
        <trans-unit id="16ec74fc0a433fb02e0d1f99b9c32251a3f73264" translate="yes" xml:space="preserve">
          <source>CLEAR</source>
          <target state="translated">CLEAR</target>
        </trans-unit>
        <trans-unit id="cda5a66b5406a89ff0c00fef5a02877780db7ad6" translate="yes" xml:space="preserve">
          <source>COLLATE_REGEX</source>
          <target state="translated">COLLATE_REGEX</target>
        </trans-unit>
        <trans-unit id="cb4d9c924168c6fdbf3cad34b974e54d57924a85" translate="yes" xml:space="preserve">
          <source>COMMENT_REGEX</source>
          <target state="translated">COMMENT_REGEX</target>
        </trans-unit>
        <trans-unit id="88f7a90855a5254dd50088e2503388866f1bf65c" translate="yes" xml:space="preserve">
          <source>COMMON_YEAR_DAYS_IN_MONTH</source>
          <target state="translated">COMMON_YEAR_DAYS_IN_MONTH</target>
        </trans-unit>
        <trans-unit id="025c408a5504f0e808d096b14c696e6a19ee3cbf" translate="yes" xml:space="preserve">
          <source>CONTENT_TYPE</source>
          <target state="translated">CONTENT_TYPE</target>
        </trans-unit>
        <trans-unit id="36a20a00bc3401eee46edc84d861382007cf5ef2" translate="yes" xml:space="preserve">
          <source>COOKIES_DIGEST</source>
          <target state="translated">COOKIES_DIGEST</target>
        </trans-unit>
        <trans-unit id="af3f8f2925d0534db2f13cd455db7a0e6d6629da" translate="yes" xml:space="preserve">
          <source>COOKIES_ROTATIONS</source>
          <target state="translated">COOKIES_ROTATIONS</target>
        </trans-unit>
        <trans-unit id="2b76f6f2bcb33feb7bd8fb3ba040067cde103e8c" translate="yes" xml:space="preserve">
          <source>COOKIES_SAME_SITE_PROTECTION</source>
          <target state="translated">COOKIES_SAME_SITE_PROTECTION</target>
        </trans-unit>
        <trans-unit id="937389534246662530913edbd7c28f14d9ac2b06" translate="yes" xml:space="preserve">
          <source>COOKIES_SERIALIZER</source>
          <target state="translated">COOKIES_SERIALIZER</target>
        </trans-unit>
        <trans-unit id="b3b739b0968d8cd23b4bed1ed4c8726168a30675" translate="yes" xml:space="preserve">
          <source>CRUD is an acronym for the four verbs we use to operate on data: &lt;strong&gt;C&lt;/strong&gt;reate, &lt;strong&gt;R&lt;/strong&gt;ead, &lt;strong&gt;U&lt;/strong&gt;pdate and &lt;strong&gt;D&lt;/strong&gt;elete. Active Record automatically creates methods to allow an application to read and manipulate data stored within its tables.</source>
          <target state="translated">: CRUD 우리가 데이터를 조작하는 데 사용하는 네 개의 동사의 약자입니다 &lt;strong&gt;C&lt;/strong&gt; reate, &lt;strong&gt;R&lt;/strong&gt; EAD, &lt;strong&gt;U&lt;/strong&gt; pdate 및 &lt;strong&gt;D의&lt;/strong&gt; elete. Active Record는 애플리케이션이 테이블에 저장된 데이터를 읽고 조작 할 수있는 메소드를 자동으로 작성합니다.</target>
        </trans-unit>
        <trans-unit id="20d3b6904feea6ac3f025993cad3434a70cee874" translate="yes" xml:space="preserve">
          <source>CRUD, Verbs, and Actions</source>
          <target state="translated">CRUD, 동사 및 동작</target>
        </trans-unit>
        <trans-unit id="1328e3aaaf388b4c74b39253cc6d1fd40915fcb7" translate="yes" xml:space="preserve">
          <source>CRUD: Reading and Writing Data</source>
          <target state="translated">CRUD : 데이터 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="1527f78de6b6945dd7fe9ea8faf13577c0775850" translate="yes" xml:space="preserve">
          <source>CRUDit Where CRUDit Is Due</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97b0dd260baac0ea1c94950b57ae5e734afec7e" translate="yes" xml:space="preserve">
          <source>CSRF Countermeasures</source>
          <target state="translated">CSRF 대책</target>
        </trans-unit>
        <trans-unit id="f44ba7b2d1e229975192b6f2bc5310840dd4ad7e" translate="yes" xml:space="preserve">
          <source>CSRF appears very rarely in CVE (Common Vulnerabilities and Exposures) - less than 0.1% in 2006 - but it really is a 'sleeping giant' [Grossman]. This is in stark contrast to the results in many security contract works - &lt;em&gt;CSRF is an important security issue&lt;/em&gt;.</source>
          <target state="translated">CSRF는 2006 년 0.1 % 미만인 CVE (Common Vulnerabilities and Exposures)에서 거의 나타나지 않지만 실제로는 '자고있는 자'입니다. 이는 많은 보안 계약 작업의 결과와 완전히 대조적 입니다. &lt;em&gt;CSRF는 중요한 보안 문제&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="faf3aa982f8b33be835a7607215523965fbca07c" translate="yes" xml:space="preserve">
          <source>CSRF protection from remote &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags</source>
          <target state="translated">원격 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그 로부터 CSRF 보호</target>
        </trans-unit>
        <trans-unit id="433845392a5af61bb562a694ae8386f4e997d811" translate="yes" xml:space="preserve">
          <source>CSRF protection is turned on with the &lt;code&gt;protect_from_forgery&lt;/code&gt; method. By default &lt;code&gt;protect_from_forgery&lt;/code&gt; protects your session with &lt;code&gt;:null_session&lt;/code&gt; method, which provides an empty session during request.</source>
          <target state="translated">&lt;code&gt;protect_from_forgery&lt;/code&gt; 메소드 를 사용하여 CSRF 보호를 설정합니다 . &lt;code&gt;protect_from_forgery&lt;/code&gt; 는 기본적 으로 &lt;code&gt;:null_session&lt;/code&gt; 메소드를 사용 하여 세션을 보호합니다 .이 메소드는 요청 중에 빈 세션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bd9c2bd62c396c8a3391e4e9f8cc38953d3f7ecc" translate="yes" xml:space="preserve">
          <source>CSS Compression</source>
          <target state="translated">CSS 압축</target>
        </trans-unit>
        <trans-unit id="60b283e590cf24258b8cdb952a9699f1d6aaddbd" translate="yes" xml:space="preserve">
          <source>CSS Injection</source>
          <target state="translated">CSS 주입</target>
        </trans-unit>
        <trans-unit id="f8f799376df785198a83a9a20380d8c2765b5149" translate="yes" xml:space="preserve">
          <source>CSS Injection is explained best by the well-known &lt;a href=&quot;https://samy.pl/myspace/tech.html&quot;&gt;MySpace Samy worm&lt;/a&gt;. This worm automatically sent a friend request to Samy (the attacker) simply by visiting his profile. Within several hours he had over 1 million friend requests, which created so much traffic that MySpace went offline. The following is a technical explanation of that worm.</source>
          <target state="translated">CSS 주입은 잘 알려진 &lt;a href=&quot;https://samy.pl/myspace/tech.html&quot;&gt;MySpace Samy 웜에&lt;/a&gt; 의해 가장 잘 설명됩니다 . 이 웜은 프로필을 방문하여 친구 요청을 Samy (공격자)에게 자동으로 보냈습니다. 몇 시간 안에 그는 100 만 명 이상의 친구 요청을 받았으며, 이로 인해 MySpace가 오프라인 상태가되었습니다. 다음은 해당 웜에 대한 기술적 설명입니다.</target>
        </trans-unit>
        <trans-unit id="500c0eea71096dca5a0df60433171c4b004efda8" translate="yes" xml:space="preserve">
          <source>CYAN</source>
          <target state="translated">CYAN</target>
        </trans-unit>
        <trans-unit id="757d01855d94c04c93ac97f98ebbbf5ceb7e8a2d" translate="yes" xml:space="preserve">
          <source>Cache Keys</source>
          <target state="translated">캐시 키</target>
        </trans-unit>
        <trans-unit id="1133721a8c022238bccc194ce97bed010598bd2e" translate="yes" xml:space="preserve">
          <source>Cache Stores</source>
          <target state="translated">캐시 저장소</target>
        </trans-unit>
        <trans-unit id="89aa889a78ebfa6b532acfd052782999b83a8b63" translate="yes" xml:space="preserve">
          <source>Cache fragments of a view if &lt;code&gt;condition&lt;/code&gt; is true</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; 이 참인 경우 뷰의 조각 캐시</target>
        </trans-unit>
        <trans-unit id="76456c8c8ab0971cafc1abcfcba941f75cbdafd0" translate="yes" xml:space="preserve">
          <source>Cache fragments of a view unless &lt;code&gt;condition&lt;/code&gt; is true</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; 이 참이 아닌 한 뷰의 캐시 조각</target>
        </trans-unit>
        <trans-unit id="9dc4b1fffb074271e7ecaa967d8d84870ff650ca" translate="yes" xml:space="preserve">
          <source>Cache fragments will also be expired when the view fragment changes (e.g., the HTML in the view changes). The string of characters at the end of the key is a template tree digest. It is a hash digest computed based on the contents of the view fragment you are caching. If you change the view fragment, the digest will change, expiring the existing file.</source>
          <target state="translated">뷰 조각이 변경되면 캐시 조각도 만료됩니다 (예 :보기의 HTML이 변경됨). 키 끝에있는 문자열은 템플릿 트리 다이제스트입니다. 캐싱중인 뷰 조각의 내용을 기반으로 계산 된 해시 다이제스트입니다. 뷰 조각을 변경하면 다이제스트가 변경되어 기존 파일이 만료됩니다.</target>
        </trans-unit>
        <trans-unit id="05df6c1e2a121a1511f6aa66fb44b40b41f7e64c" translate="yes" xml:space="preserve">
          <source>Cache or yield the block. The cache is supposed to never expire.</source>
          <target state="translated">블록을 캐시하거나 생성합니다. 캐시는 만료되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="610602231c22f14dadda17b3e0990fd23287458d" translate="yes" xml:space="preserve">
          <source>Cache reads and writes never raise exceptions; they just return &lt;code&gt;nil&lt;/code&gt; instead, behaving as if there was nothing in the cache. To gauge whether your cache is hitting exceptions, you may provide an &lt;code&gt;error_handler&lt;/code&gt; to report to an exception gathering service. It must accept three keyword arguments: &lt;code&gt;method&lt;/code&gt;, the cache store method that was originally called; &lt;code&gt;returning&lt;/code&gt;, the value that was returned to the user, typically &lt;code&gt;nil&lt;/code&gt;; and &lt;code&gt;exception&lt;/code&gt;, the exception that was rescued.</source>
          <target state="translated">캐시 읽기 및 쓰기는 예외를 발생시키지 않습니다. 대신 캐시에 아무것도없는 것처럼 동작하는 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다. 캐시가 예외에 도달하는지 여부를 측정하기 위해 &lt;code&gt;error_handler&lt;/code&gt; 를 제공 하여 예외 수집 서비스에보고 할 수 있습니다 . 세 개의 키워드 인수를 허용해야합니다. &lt;code&gt;method&lt;/code&gt; , 원래 호출 된 캐시 저장소 메소드; &lt;code&gt;returning&lt;/code&gt; , 전형적으로, 사용자에게 리턴 된 값 &lt;code&gt;nil&lt;/code&gt; ; 및 &lt;code&gt;exception&lt;/code&gt; , 구출 된 예외.</target>
        </trans-unit>
        <trans-unit id="e223cb63eecd9d3e06d86b8344b561d181e0deb6" translate="yes" xml:space="preserve">
          <source>Cache stores like Memcached will automatically delete old cache files.</source>
          <target state="translated">Memcached와 같은 캐시 저장소는 오래된 캐시 파일을 자동으로 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="053035034efe23a2724666eed186ace003063ae1" translate="yes" xml:space="preserve">
          <source>Cache stores may add their own keys</source>
          <target state="translated">캐시 저장소는 자체 키를 추가 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="9b8082abdebc0e560d5ba3d6d0f5a93f549b2b3d" translate="yes" xml:space="preserve">
          <source>CacheHelper</source>
          <target state="translated">CacheHelper</target>
        </trans-unit>
        <trans-unit id="6b36a50614d9d4e6fdfff80174c8f172a4c4ad2a" translate="yes" xml:space="preserve">
          <source>Cached data larger than 1kB are compressed by default. To turn off compression, pass &lt;code&gt;compress: false&lt;/code&gt; to the initializer or to individual &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; method calls. The 1kB compression threshold is configurable with the &lt;code&gt;:compress_threshold&lt;/code&gt; option, specified in bytes.</source>
          <target state="translated">1kB보다 큰 캐시 데이터는 기본적으로 압축됩니다. 압축을 해제하려면 &lt;code&gt;compress: false&lt;/code&gt; 를 초기화 자 또는 개별 &lt;code&gt;fetch&lt;/code&gt; 또는 &lt;code&gt;write&lt;/code&gt; 메소드 호출에 전달하십시오. 1kB 압축 임계 값은 바이트 단위로 지정된 &lt;code&gt;:compress_threshold&lt;/code&gt; 옵션을 사용하여 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="940dff408f971984f655bd96481b48995fe80103" translate="yes" xml:space="preserve">
          <source>Caches that implement &lt;a href=&quot;localcache&quot;&gt;&lt;code&gt;LocalCache&lt;/code&gt;&lt;/a&gt; will be backed by an in-memory cache for the duration of a block. Repeated calls to the cache for the same key will hit the in-memory cache for faster access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc1be3f62be894bb2f1b3966f24ffa2a9007e0" translate="yes" xml:space="preserve">
          <source>Caches that implement &lt;a href=&quot;localcache&quot;&gt;LocalCache&lt;/a&gt; will be backed by an in-memory cache for the duration of a block. Repeated calls to the cache for the same key will hit the in-memory cache for faster access.</source>
          <target state="translated">&lt;a href=&quot;localcache&quot;&gt;LocalCache&lt;/a&gt; 를 구현 하는 캐시는 블록 기간 동안 메모리 내 캐시에 의해 백업됩니다. 동일한 키에 대해 반복적으로 캐시를 호출하면 더 빠른 액세스를 위해 메모리 내 캐시에 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="fc92f61eea114fe6046439a34f3d84ea83fdece9" translate="yes" xml:space="preserve">
          <source>Caches the number of belonging objects on the associate class through the use of &lt;a href=&quot;../countercache/classmethods#method-i-increment_counter&quot;&gt;&lt;code&gt;CounterCache::ClassMethods#increment_counter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../countercache/classmethods#method-i-decrement_counter&quot;&gt;&lt;code&gt;CounterCache::ClassMethods#decrement_counter&lt;/code&gt;&lt;/a&gt;. The counter cache is incremented when an object of this class is created and decremented when it's destroyed. This requires that a column named &lt;code&gt;#{table_name}_count&lt;/code&gt; (such as &lt;code&gt;comments_count&lt;/code&gt; for a belonging Comment class) is used on the associate class (such as a Post class) - that is the migration for &lt;code&gt;#{table_name}_count&lt;/code&gt; is created on the associate class (such that &lt;code&gt;Post.comments_count&lt;/code&gt; will return the count cached, see note below). You can also specify a custom counter cache column by providing a column name instead of a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; value to this option (e.g., &lt;code&gt;counter_cache: :my_custom_counter&lt;/code&gt;.) Note: Specifying a counter cache will add it to that model's list of readonly attributes using &lt;code&gt;attr_readonly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127e4bbfd32e8c216318d5d051ba6bdbc8161d05" translate="yes" xml:space="preserve">
          <source>Caches the number of belonging objects on the associate class through the use of &lt;a href=&quot;../countercache/classmethods#method-i-increment_counter&quot;&gt;ActiveRecord::CounterCache::ClassMethods#increment_counter&lt;/a&gt; and &lt;a href=&quot;../countercache/classmethods#method-i-decrement_counter&quot;&gt;ActiveRecord::CounterCache::ClassMethods#decrement_counter&lt;/a&gt;. The counter cache is incremented when an object of this class is created and decremented when it's destroyed. This requires that a column named &lt;code&gt;#{table_name}_count&lt;/code&gt; (such as &lt;code&gt;comments_count&lt;/code&gt; for a belonging Comment class) is used on the associate class (such as a Post class) - that is the migration for &lt;code&gt;#{table_name}_count&lt;/code&gt; is created on the associate class (such that &lt;code&gt;Post.comments_count&lt;/code&gt; will return the count cached, see note below). You can also specify a custom counter cache column by providing a column name instead of a &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; value to this option (e.g., &lt;code&gt;counter_cache: :my_custom_counter&lt;/code&gt;.) Note: Specifying a counter cache will add it to that model's list of readonly attributes using &lt;code&gt;attr_readonly&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../countercache/classmethods#method-i-increment_counter&quot;&gt;ActiveRecord :: CounterCache :: ClassMethods # increment_counter&lt;/a&gt; 및 &lt;a href=&quot;../countercache/classmethods#method-i-decrement_counter&quot;&gt;ActiveRecord :: CounterCache :: ClassMethods # decrement_counter를&lt;/a&gt; 사용하여 연관 클래스에 속하는 오브젝트 수를 캐시합니다 . 카운터 캐시는이 클래스의 오브젝트가 작성 될 때 증가하고 소멸 될 때 감소합니다. 이를 위해서는 &lt;code&gt;#{table_name}_count&lt;/code&gt; (예 : 속하는 Comment 클래스의 &lt;code&gt;comments_count&lt;/code&gt; ) 열이 Associate 클래스 (Post 클래스 등)에서 사용되어야합니다. 즉, &lt;code&gt;#{table_name}_count&lt;/code&gt; 에 대한 마이그레이션 은 동료에 생성됩니다. 클래스 (예 : &lt;code&gt;Post.comments_count&lt;/code&gt; 캐시 된 수를 반환합니다 (아래 참고 참조). 이 옵션에 &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; 값 대신 열 이름을 제공하여 사용자 지정 카운터 캐시 열을 지정할 수도 있습니다 (예 &lt;code&gt;counter_cache: :my_custom_counter&lt;/code&gt; . 참고 : 카운터 캐시를 지정하면 다음을 사용하여 해당 모델의 읽기 전용 특성 목록에 추가됩니다. &lt;code&gt;attr_readonly&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="00db52a45773e0e8751020a5ebbc1a42f0fbad67" translate="yes" xml:space="preserve">
          <source>Caching in Development</source>
          <target state="translated">개발 캐싱</target>
        </trans-unit>
        <trans-unit id="f3dd9ea94a5505a5f3239cc5aea00117873568ab" translate="yes" xml:space="preserve">
          <source>Caching is a cheap way of speeding up slow applications by keeping the result of calculations, renderings, and database calls around for subsequent requests.</source>
          <target state="translated">캐싱은 후속 요청에 대한 계산, 렌더링 및 데이터베이스 호출 결과를 유지하여 느린 응용 프로그램 속도를 높이는 저렴한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="fde40cf6d2efaa12e638454e318f3351f0436438" translate="yes" xml:space="preserve">
          <source>Caching is often the most effective way to boost an application's performance. Through caching, web sites running on a single server with a single database can sustain a load of thousands of concurrent users.</source>
          <target state="translated">캐싱은 종종 응용 프로그램의 성능을 향상시키는 가장 효과적인 방법입니다. 캐싱을 통해 단일 데이터베이스가있는 단일 서버에서 실행되는 웹 사이트는 수천 명의 동시 사용자를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4206c7dbbc17941c8d44829ec60344804a828caa" translate="yes" xml:space="preserve">
          <source>Caching means to store content generated during the request-response cycle and to reuse it when responding to similar requests.</source>
          <target state="translated">캐싱은 요청-응답주기 동안 생성 된 컨텐츠를 저장하고 유사한 요청에 응답 할 때이를 재사용하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="0467f2527ad70935710248dd17ceb0a9a625c1fe" translate="yes" xml:space="preserve">
          <source>Caching stores</source>
          <target state="translated">캐싱 상점</target>
        </trans-unit>
        <trans-unit id="d51842e4068c0a2db8b483640beb34a02ebf25ee" translate="yes" xml:space="preserve">
          <source>Caching with Rails: An Overview</source>
          <target state="translated">레일을 이용한 캐싱 : 개요</target>
        </trans-unit>
        <trans-unit id="9fe812f0fae22f62c0c374f965f7bb3b85963926" translate="yes" xml:space="preserve">
          <source>Caching#cache</source>
          <target state="translated">Caching#cache</target>
        </trans-unit>
        <trans-unit id="4128fbe82f9e4fe866600565d80840ed45665924" translate="yes" xml:space="preserve">
          <source>Caching#view_cache_dependencies</source>
          <target state="translated">Caching#view_cache_dependencies</target>
        </trans-unit>
        <trans-unit id="85fde14c0912434b8f2b6d3afaf206a66f2e5865" translate="yes" xml:space="preserve">
          <source>Caching: Rails provides page, action, and fragment caching. Fragment caching is especially helpful when building up a nested JSON object.</source>
          <target state="translated">캐싱 : Rails는 페이지, 액션 및 조각 캐싱을 제공합니다. 조각 캐싱은 중첩 된 JSON 객체를 구축 할 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cedd3a35a5621523c12b11e7375bc992593ee453" translate="yes" xml:space="preserve">
          <source>Caching::Fragments</source>
          <target state="translated">Caching::Fragments</target>
        </trans-unit>
        <trans-unit id="f4ac3127a2f3e74a7713036a3aab03fe7edf416d" translate="yes" xml:space="preserve">
          <source>Caching::Fragments#combined_fragment_cache_key</source>
          <target state="translated">Caching::Fragments#combined_fragment_cache_key</target>
        </trans-unit>
        <trans-unit id="cc39982bc7d9e1fbed34c0a848dced0b11ec151b" translate="yes" xml:space="preserve">
          <source>Caching::Fragments#expire_fragment</source>
          <target state="translated">Caching::Fragments#expire_fragment</target>
        </trans-unit>
        <trans-unit id="a08c8aa90307817f86740e43777ad0de5ce45b08" translate="yes" xml:space="preserve">
          <source>Caching::Fragments#fragment_exist?</source>
          <target state="translated">Caching::Fragments#fragment_exist?</target>
        </trans-unit>
        <trans-unit id="83a7ded4d59236b808d526e00f6ae764032be84e" translate="yes" xml:space="preserve">
          <source>Caching::Fragments#read_fragment</source>
          <target state="translated">Caching::Fragments#read_fragment</target>
        </trans-unit>
        <trans-unit id="cbcf9150683bc06cb5f66edf3d036824f30fd5b5" translate="yes" xml:space="preserve">
          <source>Caching::Fragments#write_fragment</source>
          <target state="translated">Caching::Fragments#write_fragment</target>
        </trans-unit>
        <trans-unit id="f5d2063225a415734eafa894a1403a7eacb56559" translate="yes" xml:space="preserve">
          <source>Caching::Fragments::ClassMethods</source>
          <target state="translated">Caching::Fragments::ClassMethods</target>
        </trans-unit>
        <trans-unit id="70298737a32bd47430cbb9cc5a59fb09294ec105" translate="yes" xml:space="preserve">
          <source>Caching::Fragments::ClassMethods#fragment_cache_key</source>
          <target state="translated">Caching::Fragments::ClassMethods#fragment_cache_key</target>
        </trans-unit>
        <trans-unit id="1944978d65de560b8e005f751199484a387df554" translate="yes" xml:space="preserve">
          <source>Calculates a new &lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; that is as far in the future as this &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724156ac54e8ce01df31980000b8098505dfd375" translate="yes" xml:space="preserve">
          <source>Calculates a new &lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; that is as far in the past as this &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fa0f07bb6cb81e94cedbfdbb668a58015b0b40" translate="yes" xml:space="preserve">
          <source>Calculates a new &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt; or &lt;a href=&quot;../date&quot;&gt;Date&lt;/a&gt; that is as far in the future as this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; represents.</source>
          <target state="translated">이 &lt;a href=&quot;duration&quot;&gt;기간이&lt;/a&gt; 나타내는 한 미래 의 새로운 &lt;a href=&quot;../time&quot;&gt;시간&lt;/a&gt; 또는 &lt;a href=&quot;../date&quot;&gt;날짜&lt;/a&gt; 를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="e55ea553372f9ab5e9bd9e9acadef11271d09b34" translate="yes" xml:space="preserve">
          <source>Calculates a new &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt; or &lt;a href=&quot;../date&quot;&gt;Date&lt;/a&gt; that is as far in the past as this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; represents.</source>
          <target state="translated">이 &lt;a href=&quot;duration&quot;&gt;기간이&lt;/a&gt; 나타내는 한 과거 의 새로운 &lt;a href=&quot;../time&quot;&gt;시간&lt;/a&gt; 또는 &lt;a href=&quot;../date&quot;&gt;날짜&lt;/a&gt; 를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="017aba8c550f8d3205ad83e90624ec48881ca2ae" translate="yes" xml:space="preserve">
          <source>Calculates a sum from the elements.</source>
          <target state="translated">요소에서 합계를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="46c90adeedad67b875b2b0ef35849840927848be" translate="yes" xml:space="preserve">
          <source>Calculates the average value on a given column. Returns &lt;code&gt;nil&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;&lt;code&gt;calculate&lt;/code&gt;&lt;/a&gt; for examples with options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c75ade474b66716d6ca47d093e3a180dc4dc0ed" translate="yes" xml:space="preserve">
          <source>Calculates the average value on a given column. Returns &lt;code&gt;nil&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;calculate&lt;/a&gt; for examples with options.</source>
          <target state="translated">주어진 열의 평균값을 계산합니다. 행이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다. 옵션이있는 예제는 &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;계산&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ef10a1c4afd6432d86a97f2ef6a78f56c74a0ca" translate="yes" xml:space="preserve">
          <source>Calculates the maximum value on a given column. The value is returned with the same data type of the column, or &lt;code&gt;nil&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;&lt;code&gt;calculate&lt;/code&gt;&lt;/a&gt; for examples with options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1faf38dff1e8dfa1e39a55ca6cb98b3718929da" translate="yes" xml:space="preserve">
          <source>Calculates the maximum value on a given column. The value is returned with the same data type of the column, or &lt;code&gt;nil&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;calculate&lt;/a&gt; for examples with options.</source>
          <target state="translated">주어진 열의 최대 값을 계산합니다. 열의 동일한 데이터 유형으로 값이 리턴되거나 행이 없으면 &lt;code&gt;nil&lt;/code&gt; 이 리턴됩니다 . 옵션이있는 예제는 &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;계산&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="744ef011008e170589121d253499d65f43b1d3f5" translate="yes" xml:space="preserve">
          <source>Calculates the minimum value on a given column. The value is returned with the same data type of the column, or &lt;code&gt;nil&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;&lt;code&gt;calculate&lt;/code&gt;&lt;/a&gt; for examples with options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a492c2502713a4f03730718b2509d9e756457e6a" translate="yes" xml:space="preserve">
          <source>Calculates the minimum value on a given column. The value is returned with the same data type of the column, or &lt;code&gt;nil&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;calculate&lt;/a&gt; for examples with options.</source>
          <target state="translated">주어진 열의 최소값을 계산합니다. 열의 동일한 데이터 유형으로 값이 리턴되거나 행이 없으면 &lt;code&gt;nil&lt;/code&gt; 이 리턴됩니다 . 옵션이있는 예제는 &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;계산&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4789bb0c10a485bc96f8522d3bf407c1063145e5" translate="yes" xml:space="preserve">
          <source>Calculates the sum of values on a given column. The value is returned with the same data type of the column, &lt;code&gt;0&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;&lt;code&gt;calculate&lt;/code&gt;&lt;/a&gt; for examples with options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f116cc8acaab61ae663d0b33a0f56b0da9727fc" translate="yes" xml:space="preserve">
          <source>Calculates the sum of values on a given column. The value is returned with the same data type of the column, &lt;code&gt;0&lt;/code&gt; if there's no row. See &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;calculate&lt;/a&gt; for examples with options.</source>
          <target state="translated">주어진 열에서 값의 합계를 계산합니다. 열의 동일한 데이터 유형으로 값이 리턴되고 행이 없으면 &lt;code&gt;0&lt;/code&gt; 이 리턴됩니다 . 옵션이있는 예제는 &lt;a href=&quot;calculations#method-i-calculate&quot;&gt;계산&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05d27dcc239bf9ea22989ad95d110b65fd4d9edb" translate="yes" xml:space="preserve">
          <source>Calculations</source>
          <target state="translated">Calculations</target>
        </trans-unit>
        <trans-unit id="712f1edd4d3e086a636814e1fcd9fb3a91307dfc" translate="yes" xml:space="preserve">
          <source>Calculations#after?</source>
          <target state="translated">Calculations#after?</target>
        </trans-unit>
        <trans-unit id="ee656666ff89dce92dbb1bfa41fbac15dbb913f4" translate="yes" xml:space="preserve">
          <source>Calculations#all_day</source>
          <target state="translated">Calculations#all_day</target>
        </trans-unit>
        <trans-unit id="66476ae460b6538916d5ff950087908ab1054347" translate="yes" xml:space="preserve">
          <source>Calculations#all_month</source>
          <target state="translated">Calculations#all_month</target>
        </trans-unit>
        <trans-unit id="5613a2be82a6e874953ab68da7242993a1d7a7b2" translate="yes" xml:space="preserve">
          <source>Calculations#all_quarter</source>
          <target state="translated">Calculations#all_quarter</target>
        </trans-unit>
        <trans-unit id="bc037c45f52a004b063a946c53d624fb3a98e105" translate="yes" xml:space="preserve">
          <source>Calculations#all_week</source>
          <target state="translated">Calculations#all_week</target>
        </trans-unit>
        <trans-unit id="2be2098e91f164bf6e32109d72eea337d4385ef9" translate="yes" xml:space="preserve">
          <source>Calculations#all_year</source>
          <target state="translated">Calculations#all_year</target>
        </trans-unit>
        <trans-unit id="ea07a94719162f2fff2bc16c16480a2984b1ef89" translate="yes" xml:space="preserve">
          <source>Calculations#at_beginning_of_month</source>
          <target state="translated">Calculations#at_beginning_of_month</target>
        </trans-unit>
        <trans-unit id="81609eecfc256ec58b1474caef9e31019c37ac31" translate="yes" xml:space="preserve">
          <source>Calculations#at_beginning_of_quarter</source>
          <target state="translated">Calculations#at_beginning_of_quarter</target>
        </trans-unit>
        <trans-unit id="a32e9ad1b84a334a149ab1fd206593d11b2befa1" translate="yes" xml:space="preserve">
          <source>Calculations#at_beginning_of_week</source>
          <target state="translated">Calculations#at_beginning_of_week</target>
        </trans-unit>
        <trans-unit id="5029176ec7cbbf6911f31b7081713d2587816e2d" translate="yes" xml:space="preserve">
          <source>Calculations#at_beginning_of_year</source>
          <target state="translated">Calculations#at_beginning_of_year</target>
        </trans-unit>
        <trans-unit id="aac24ee3d4cb347217dbc1d2acac88b3b15cce50" translate="yes" xml:space="preserve">
          <source>Calculations#at_end_of_month</source>
          <target state="translated">Calculations#at_end_of_month</target>
        </trans-unit>
        <trans-unit id="47866a0099a9ea55358146de68c57fbe74451a1f" translate="yes" xml:space="preserve">
          <source>Calculations#at_end_of_quarter</source>
          <target state="translated">Calculations#at_end_of_quarter</target>
        </trans-unit>
        <trans-unit id="573b4d90cae89317e8efb2c720f9c8090ab6b0ec" translate="yes" xml:space="preserve">
          <source>Calculations#at_end_of_week</source>
          <target state="translated">Calculations#at_end_of_week</target>
        </trans-unit>
        <trans-unit id="ebb159dad102bc5c3b7f56c1a83946371f14aaa8" translate="yes" xml:space="preserve">
          <source>Calculations#at_end_of_year</source>
          <target state="translated">Calculations#at_end_of_year</target>
        </trans-unit>
        <trans-unit id="51924d9b420c94307c9ed7e6192705e71ddf6e6d" translate="yes" xml:space="preserve">
          <source>Calculations#before?</source>
          <target state="translated">Calculations#before?</target>
        </trans-unit>
        <trans-unit id="ba848ec2ee482c1021bf8f6dd0448ecdfc062ebc" translate="yes" xml:space="preserve">
          <source>Calculations#beginning_of_month</source>
          <target state="translated">Calculations#beginning_of_month</target>
        </trans-unit>
        <trans-unit id="89ed20a135df48cdd190acff34a2092d70b0e85a" translate="yes" xml:space="preserve">
          <source>Calculations#beginning_of_quarter</source>
          <target state="translated">Calculations#beginning_of_quarter</target>
        </trans-unit>
        <trans-unit id="632bb8860bdcc49b6513110b6560bee1c5c13273" translate="yes" xml:space="preserve">
          <source>Calculations#beginning_of_week</source>
          <target state="translated">Calculations#beginning_of_week</target>
        </trans-unit>
        <trans-unit id="255a419a38c5a29061506fd8e8dd0f6a0ac0fb94" translate="yes" xml:space="preserve">
          <source>Calculations#beginning_of_year</source>
          <target state="translated">Calculations#beginning_of_year</target>
        </trans-unit>
        <trans-unit id="b6848faa0e3041a5b700a9900f0d5d082a334c9c" translate="yes" xml:space="preserve">
          <source>Calculations#days_ago</source>
          <target state="translated">Calculations#days_ago</target>
        </trans-unit>
        <trans-unit id="8ad4652680ffb71d3817ed7ae3d712fb94f97891" translate="yes" xml:space="preserve">
          <source>Calculations#days_since</source>
          <target state="translated">Calculations#days_since</target>
        </trans-unit>
        <trans-unit id="c1cfe3a338686fcd2b8c35978821a14c9eee459f" translate="yes" xml:space="preserve">
          <source>Calculations#days_to_week_start</source>
          <target state="translated">Calculations#days_to_week_start</target>
        </trans-unit>
        <trans-unit id="86641deda46f9f19a414e4a23aba428e064e1b4d" translate="yes" xml:space="preserve">
          <source>Calculations#end_of_month</source>
          <target state="translated">Calculations#end_of_month</target>
        </trans-unit>
        <trans-unit id="81f818eed1a589ad5082090167954ba4fc0a2eb9" translate="yes" xml:space="preserve">
          <source>Calculations#end_of_quarter</source>
          <target state="translated">Calculations#end_of_quarter</target>
        </trans-unit>
        <trans-unit id="d4a805ea8fa8334c1d706f03e36393a454627af6" translate="yes" xml:space="preserve">
          <source>Calculations#end_of_week</source>
          <target state="translated">Calculations#end_of_week</target>
        </trans-unit>
        <trans-unit id="4e9249dc8e5d9c67a09ee96842442b354660f75c" translate="yes" xml:space="preserve">
          <source>Calculations#end_of_year</source>
          <target state="translated">Calculations#end_of_year</target>
        </trans-unit>
        <trans-unit id="bf62082a3109bcc8c2ea7e094df15d14c66293af" translate="yes" xml:space="preserve">
          <source>Calculations#future?</source>
          <target state="translated">Calculations#future?</target>
        </trans-unit>
        <trans-unit id="51b1871bdb0251cd26e0fc6a1874e57d9aaf6baa" translate="yes" xml:space="preserve">
          <source>Calculations#last_month</source>
          <target state="translated">Calculations#last_month</target>
        </trans-unit>
        <trans-unit id="4284818f6779f29828f8ff4efa731d17573e71fe" translate="yes" xml:space="preserve">
          <source>Calculations#last_quarter</source>
          <target state="translated">Calculations#last_quarter</target>
        </trans-unit>
        <trans-unit id="7a1c4fc54c643247fdf44af7d78eeb4a171a02f6" translate="yes" xml:space="preserve">
          <source>Calculations#last_week</source>
          <target state="translated">Calculations#last_week</target>
        </trans-unit>
        <trans-unit id="170ab395b55a6ca9f3ee430332626b7155adfba9" translate="yes" xml:space="preserve">
          <source>Calculations#last_weekday</source>
          <target state="translated">Calculations#last_weekday</target>
        </trans-unit>
        <trans-unit id="a5ef4c99b016057c4b4c01c0e36bd7a21759e5f8" translate="yes" xml:space="preserve">
          <source>Calculations#last_year</source>
          <target state="translated">Calculations#last_year</target>
        </trans-unit>
        <trans-unit id="7a53e252aa09bb06b6dd1ed226699fa0b33c6df1" translate="yes" xml:space="preserve">
          <source>Calculations#monday</source>
          <target state="translated">Calculations#monday</target>
        </trans-unit>
        <trans-unit id="837dfa1360d97bd4773a5b4f02ac596e1dc0a97c" translate="yes" xml:space="preserve">
          <source>Calculations#months_ago</source>
          <target state="translated">Calculations#months_ago</target>
        </trans-unit>
        <trans-unit id="2f8b6cd484f0ab48a74389c1534b85ac9c687fdf" translate="yes" xml:space="preserve">
          <source>Calculations#months_since</source>
          <target state="translated">Calculations#months_since</target>
        </trans-unit>
        <trans-unit id="59f62cf363428bcb8ab5cfa94da01789346bce80" translate="yes" xml:space="preserve">
          <source>Calculations#next_occurring</source>
          <target state="translated">Calculations#next_occurring</target>
        </trans-unit>
        <trans-unit id="1662a597c728f112883e88fb3fc031266b36e54c" translate="yes" xml:space="preserve">
          <source>Calculations#next_quarter</source>
          <target state="translated">Calculations#next_quarter</target>
        </trans-unit>
        <trans-unit id="382bcc28e652fe2e65a6cc9fe1d6b745862b2e2a" translate="yes" xml:space="preserve">
          <source>Calculations#next_week</source>
          <target state="translated">Calculations#next_week</target>
        </trans-unit>
        <trans-unit id="2b9017fa289cf8a49142431f6972fd20589a171a" translate="yes" xml:space="preserve">
          <source>Calculations#next_weekday</source>
          <target state="translated">Calculations#next_weekday</target>
        </trans-unit>
        <trans-unit id="2fd008f37c2bc52ec5917fcd6822097b6ac65318" translate="yes" xml:space="preserve">
          <source>Calculations#on_weekday?</source>
          <target state="translated">Calculations#on_weekday?</target>
        </trans-unit>
        <trans-unit id="1569feb3799aa1d91d3e11447502ee32885459eb" translate="yes" xml:space="preserve">
          <source>Calculations#on_weekend?</source>
          <target state="translated">Calculations#on_weekend?</target>
        </trans-unit>
        <trans-unit id="78efab25dc241bdb276cd35d7e1809b2a560077e" translate="yes" xml:space="preserve">
          <source>Calculations#past?</source>
          <target state="translated">Calculations#past?</target>
        </trans-unit>
        <trans-unit id="36f5fd301a881c16ebe0ed775e4c30bf6da8a811" translate="yes" xml:space="preserve">
          <source>Calculations#prev_occurring</source>
          <target state="translated">Calculations#prev_occurring</target>
        </trans-unit>
        <trans-unit id="fab619249fdcd70e13a1a0e6484e332fd9bf37e1" translate="yes" xml:space="preserve">
          <source>Calculations#prev_quarter</source>
          <target state="translated">Calculations#prev_quarter</target>
        </trans-unit>
        <trans-unit id="d3cd7c6fd565498feda0269dc4ac3306bc1e0f14" translate="yes" xml:space="preserve">
          <source>Calculations#prev_week</source>
          <target state="translated">Calculations#prev_week</target>
        </trans-unit>
        <trans-unit id="c95e506bb30dde76dfb450b6af6da024ae90f568" translate="yes" xml:space="preserve">
          <source>Calculations#prev_weekday</source>
          <target state="translated">Calculations#prev_weekday</target>
        </trans-unit>
        <trans-unit id="f848ce005413b9a16f6321e91ae035ef52292713" translate="yes" xml:space="preserve">
          <source>Calculations#sunday</source>
          <target state="translated">Calculations#sunday</target>
        </trans-unit>
        <trans-unit id="9693a89ec821b644262e18dba657aae498ba5df9" translate="yes" xml:space="preserve">
          <source>Calculations#today?</source>
          <target state="translated">Calculations#today?</target>
        </trans-unit>
        <trans-unit id="c4a007b232f03f4850e8bfdf72c321c3f9fff698" translate="yes" xml:space="preserve">
          <source>Calculations#tomorrow</source>
          <target state="translated">Calculations#tomorrow</target>
        </trans-unit>
        <trans-unit id="3c59d4ab12c2d429e61d75f4355fbec4db170fc6" translate="yes" xml:space="preserve">
          <source>Calculations#weeks_ago</source>
          <target state="translated">Calculations#weeks_ago</target>
        </trans-unit>
        <trans-unit id="91290bfd806257dda9f8408eef1dec8415a57931" translate="yes" xml:space="preserve">
          <source>Calculations#weeks_since</source>
          <target state="translated">Calculations#weeks_since</target>
        </trans-unit>
        <trans-unit id="f1a6820a9121d3b6576979018f07de60d84f85a3" translate="yes" xml:space="preserve">
          <source>Calculations#years_ago</source>
          <target state="translated">Calculations#years_ago</target>
        </trans-unit>
        <trans-unit id="4b6aee5ce80346e88beeb39735a03280eea7551b" translate="yes" xml:space="preserve">
          <source>Calculations#years_since</source>
          <target state="translated">Calculations#years_since</target>
        </trans-unit>
        <trans-unit id="059acf72e46a42902bad8abe3a46ac25f7939f6f" translate="yes" xml:space="preserve">
          <source>Calculations#yesterday</source>
          <target state="translated">Calculations#yesterday</target>
        </trans-unit>
        <trans-unit id="646f15dfc789af99f6ed0c247c305c983dfc4d25" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/AbstractController/Rendering.html#method-i-render&quot;&gt;&lt;code&gt;render&lt;/code&gt;&lt;/a&gt; to create a full response to send back to the browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834f6c224ecd300414ffdb9427d8b033e0f62f04" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/Head.html#method-i-head&quot;&gt;&lt;code&gt;head&lt;/code&gt;&lt;/a&gt; to create a response consisting solely of HTTP headers to send back to the browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3a7e4d216c3bd3197b4e96f7ea401f7dc7ef11" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/Redirecting.html#method-i-redirect_to&quot;&gt;&lt;code&gt;redirect_to&lt;/code&gt;&lt;/a&gt; to send an HTTP redirect status code to the browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b49dee05abd9220f69e9d46fa12f310fb125e31" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Attached/Many.html#method-i-attach&quot;&gt;&lt;code&gt;images.attach&lt;/code&gt;&lt;/a&gt; to add new images to an existing message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffba95f83ab4aa4b7330d02f943349931b54a5a6" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Attached/Many.html#method-i-attached-3F&quot;&gt;&lt;code&gt;images.attached?&lt;/code&gt;&lt;/a&gt; to determine whether a particular message has any images:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a06e319eab8042a5dd4b7bae6dbdda4571094fe" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Attached/One.html#method-i-attach&quot;&gt;&lt;code&gt;avatar.attach&lt;/code&gt;&lt;/a&gt; to attach an avatar to an existing user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ec454d867832bd47a028e75afea615d831b776" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveStorage/Attached/One.html#method-i-attached-3F&quot;&gt;&lt;code&gt;avatar.attached?&lt;/code&gt;&lt;/a&gt; to determine whether a particular user has an avatar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb8dc48ea15a5135a9f0fbecfc58efcf0143b1e" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;[attr_name]_will_change!&lt;/code&gt; before each change to the tracked attribute.</source>
          <target state="translated">&lt;code&gt;[attr_name]_will_change!&lt;/code&gt; 전화 하세요! 추적 된 속성이 변경 될 때마다</target>
        </trans-unit>
        <trans-unit id="02efb434f37aa84f67e8f054dc21445cb069b2fa" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;avatar.attach&lt;/code&gt; to attach an avatar to an existing user:</source>
          <target state="translated">&lt;code&gt;avatar.attach&lt;/code&gt; 를 호출 하여 기존 사용자에게 아바타를 첨부하십시오.</target>
        </trans-unit>
        <trans-unit id="f37bd1452e4ff97ea76bd72ad2d37249a449999b" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;avatar.attached?&lt;/code&gt; to determine whether a particular user has an avatar:</source>
          <target state="translated">&lt;code&gt;avatar.attached?&lt;/code&gt; 에게 전화 하십시오. 특정 사용자에게 아바타가 있는지 확인하려면 :</target>
        </trans-unit>
        <trans-unit id="73626324999442287dcb4362e55d94e5a2dee375" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;changes_applied&lt;/code&gt; after the changes are persisted.</source>
          <target state="translated">변경 사항이 지속 된 후 &lt;code&gt;changes_applied&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="245b6f0da039ce0f965e8bbf3b87bed0db659049" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;clear_changes_information&lt;/code&gt; when you want to reset the changes information.</source>
          <target state="translated">변경 정보를 재설정하려면 &lt;code&gt;clear_changes_information&lt;/code&gt; 을 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="44ff14d8171a16edf1db7f69347abff9d1d1a9c7" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;define_attribute_methods&lt;/code&gt; after the other methods are called.</source>
          <target state="translated">전화 &lt;code&gt;define_attribute_methods&lt;/code&gt; 다른 방법 후 호출된다.</target>
        </trans-unit>
        <trans-unit id="d37c40372e533513cd47276b62e897c38eb505bd" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;define_attribute_methods&lt;/code&gt; passing each method you want to track.</source>
          <target state="translated">추적하려는 각 메소드를 전달하여 &lt;code&gt;define_attribute_methods&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bec6345f8f31ecf3e2b2eaf23af0833bdd193458" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;head&lt;/code&gt; to create a response consisting solely of HTTP headers to send back to the browser</source>
          <target state="translated">브라우저로 다시 보낼 HTTP 헤더만으로 구성된 응답을 작성하기위한 콜 &lt;code&gt;head&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="518f4e43fa1199eef2ee4176747ecbcd026b85fc" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;images.attach&lt;/code&gt; to add new images to an existing message:</source>
          <target state="translated">&lt;code&gt;images.attach&lt;/code&gt; 를 호출 하여 기존 메시지에 새 이미지를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="afa05343b90bb98bc8dff47c081c8775a92e327c" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;images.attached?&lt;/code&gt; to determine whether a particular message has any images:</source>
          <target state="translated">&lt;code&gt;images.attached?&lt;/code&gt; 전화 ? 특정 메시지에 이미지가 있는지 확인하려면 :</target>
        </trans-unit>
        <trans-unit id="608d20f1934b32ca2ad7b709dd7af3b8770c4b41" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;lock('some locking clause')&lt;/code&gt; to use a database-specific locking clause of your own such as 'LOCK IN SHARE MODE' or 'FOR UPDATE NOWAIT'. Example:</source>
          <target state="translated">&lt;code&gt;lock('some locking clause')&lt;/code&gt; 을 호출 하여 'LOCK IN SHARE MODE'또는 'FOR UPDATE NOWAIT'과 같은 사용자 고유의 데이터베이스 별 잠금 절을 사용하십시오. 예:</target>
        </trans-unit>
        <trans-unit id="10651352ff56d70748718dbcb7b40bda9259d958" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;redirect_to&lt;/code&gt; to send an HTTP redirect status code to the browser</source>
          <target state="translated">HTTP 리디렉션 상태 코드를 브라우저로 보내려면 &lt;code&gt;redirect_to&lt;/code&gt; 를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="4385a73a2a00f1387485f72d262e0a7eb18677bb" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;render&lt;/code&gt; to create a full response to send back to the browser</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 을 호출 하여 브라우저로 다시 보낼 전체 응답을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="05f094031ef80b8bd3ff1a65d4dcb97fdf1bdd00" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;restore_attributes&lt;/code&gt; when you want to restore previous data.</source>
          <target state="translated">이전 데이터를 복원하려는 경우 &lt;code&gt;restore_attributes&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb396a5f6c42b4b686b4ce858bf6e64854d448fa" translate="yes" xml:space="preserve">
          <source>Call each of its methods you want to add, such as &lt;code&gt;attribute_method_suffix&lt;/code&gt; or &lt;code&gt;attribute_method_prefix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attribute_method_suffix&lt;/code&gt; 또는 &lt;code&gt;attribute_method_prefix&lt;/code&gt; 와 같이 추가하려는 각 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="66ea9b9d41a33137d518236735dc7786623c3ba7" translate="yes" xml:space="preserve">
          <source>Call the scope as if it were a class method:</source>
          <target state="translated">클래스 메소드 인 것처럼 스코프를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="3c4e19c4819977125cbde26f7269421dc91ae6ab" translate="yes" xml:space="preserve">
          <source>Callback Classes</source>
          <target state="translated">콜백 클래스</target>
        </trans-unit>
        <trans-unit id="d01c8ec8571f8c8e1934947cc52b79acca946301" translate="yes" xml:space="preserve">
          <source>Callback Registration</source>
          <target state="translated">콜백 등록</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="3877a81afc12a91326b9495691f1f7c0cb45ef55" translate="yes" xml:space="preserve">
          <source>Callbacks Overview</source>
          <target state="translated">콜백 개요</target>
        </trans-unit>
        <trans-unit id="8ff201a31487f87fb5589145b8451e4b17be1a74" translate="yes" xml:space="preserve">
          <source>Callbacks allow you to trigger logic before or after an alteration of an object's state.</source>
          <target state="translated">콜백을 사용하면 객체 상태 변경 전후에 로직을 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f54e6a9c7f623dedc2713245fc35bf14ebe3a20" translate="yes" xml:space="preserve">
          <source>Callbacks are hooks into the life cycle of an Active Record object that allow you to trigger logic before or after a change in the object state. This can be used to make sure that associated and dependent objects are deleted when &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;ActiveRecord::Base#destroy&lt;/a&gt; is called (by overwriting &lt;code&gt;before_destroy&lt;/code&gt;) or to massage attributes before they're validated (by overwriting &lt;code&gt;before_validation&lt;/code&gt;). As an example of the callbacks initiated, consider the &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; call for a new record:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f2882b51c1143d0961cbdae847011f4d3d4d32" translate="yes" xml:space="preserve">
          <source>Callbacks are hooks into the life cycle of an Active Record object that allow you to trigger logic before or after an alteration of the object state. This can be used to make sure that associated and dependent objects are deleted when &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;ActiveRecord::Base#destroy&lt;/a&gt; is called (by overwriting &lt;code&gt;before_destroy&lt;/code&gt;) or to massage attributes before they're validated (by overwriting &lt;code&gt;before_validation&lt;/code&gt;). As an example of the callbacks initiated, consider the &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; call for a new record:</source>
          <target state="translated">콜백은 객체 상태 변경 전후에 로직을 트리거 할 수있는 활성 레코드 객체의 수명주기에 연결됩니다. 이것은 확실 할 때 관련 및 종속 객체가 삭제되어 있는지 확인하는 데 사용할 수있는 &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;액티브 :: 자료 # 파괴&lt;/a&gt; (덮어 쓰기에 의해 불려 &lt;code&gt;before_destroy&lt;/code&gt; 을 그들이 검증되기 전에 (덮어 쓰기) 또는 속성을 마사지 &lt;code&gt;before_validation&lt;/code&gt; ). 시작된 콜백의 예로 새 레코드에 대한 &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord :: Base # save&lt;/a&gt; 호출을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="c43a336d866a31adc5194e99b64223f3ba8905cc" translate="yes" xml:space="preserve">
          <source>Callbacks are invoked.</source>
          <target state="translated">콜백이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="596bacb89730a272245b6fc80dbbe6e0d98723f5" translate="yes" xml:space="preserve">
          <source>Callbacks are methods that get called at certain moments of an object's life cycle. With callbacks it is possible to write code that will run whenever an Active Record object is created, saved, updated, deleted, validated, or loaded from the database.</source>
          <target state="translated">콜백은 객체 수명주기의 특정 순간에 호출되는 메소드입니다. 콜백을 사용하면 데이터베이스에서 Active Record 객체를 생성, 저장, 업데이트, 삭제, 검증 또는로드 할 때마다 실행될 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33a6c80cc27c3baf41d39bb92107a0c90ec80c2b" translate="yes" xml:space="preserve">
          <source>Callbacks are skipped.</source>
          <target state="translated">콜백을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="ee4610a86273e3a883389497b4f3aaa59648e99b" translate="yes" xml:space="preserve">
          <source>Callbacks can also be registered to only fire on certain life cycle events:</source>
          <target state="translated">콜백은 특정 수명주기 이벤트에서만 발생하도록 등록 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="818f242607d4e5fbb7f0483208686a61231bb420" translate="yes" xml:space="preserve">
          <source>Callbacks in Action Mailer are implemented using &lt;code&gt;AbstractController::Callbacks&lt;/code&gt;, so you can define and configure callbacks in the same manner that you would use callbacks in classes that inherit from &lt;code&gt;ActionController::Base&lt;/code&gt;.</source>
          <target state="translated">Action Mailer의 콜백은 &lt;code&gt;AbstractController::Callbacks&lt;/code&gt; 사용하여 구현 되므로 &lt;code&gt;ActionController::Base&lt;/code&gt; 에서 상속되는 클래스에서 콜백을 사용하는 것과 같은 방식으로 콜백을 정의하고 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b26cb4b40cd2678785076057e529d41d937d1ae4" translate="yes" xml:space="preserve">
          <source>Callbacks work through model relationships, and can even be defined by them. Suppose an example where a user has many articles. A user's articles should be destroyed if the user is destroyed. Let's add an &lt;code&gt;after_destroy&lt;/code&gt; callback to the &lt;code&gt;User&lt;/code&gt; model by way of its relationship to the &lt;code&gt;Article&lt;/code&gt; model:</source>
          <target state="translated">콜백은 모델 관계를 통해 작동하며이를 정의 할 수도 있습니다. 사용자에게 많은 기사가있는 예를 가정하십시오. 사용자가 파괴되면 사용자의 기사를 폐기해야합니다. &lt;code&gt;Article&lt;/code&gt; 모델 과의 관계를 통해 &lt;code&gt;User&lt;/code&gt; 모델에 &lt;code&gt;after_destroy&lt;/code&gt; 콜백을 추가해 보겠습니다 .</target>
        </trans-unit>
        <trans-unit id="8581601e0e500c32bfafca61e54fb8ff27f9161d" translate="yes" xml:space="preserve">
          <source>Callbacks#after_processing</source>
          <target state="translated">Callbacks#after_processing</target>
        </trans-unit>
        <trans-unit id="c3b7c2f32efcf3ec9e130423dac1d077676df259" translate="yes" xml:space="preserve">
          <source>Callbacks#around_processing</source>
          <target state="translated">Callbacks#around_processing</target>
        </trans-unit>
        <trans-unit id="db40736dff6cdea07344f3dd67ab2dd8af25e789" translate="yes" xml:space="preserve">
          <source>Callbacks#before_processing</source>
          <target state="translated">Callbacks#before_processing</target>
        </trans-unit>
        <trans-unit id="314fd1b6f6fe4854e4ae9631a3c3f906406ae44b" translate="yes" xml:space="preserve">
          <source>Callbacks#call</source>
          <target state="translated">Callbacks#call</target>
        </trans-unit>
        <trans-unit id="d0087bc3fe55585355833ea4dd164ff2d3548a4b" translate="yes" xml:space="preserve">
          <source>Callbacks#define_model_callbacks</source>
          <target state="translated">Callbacks#define_model_callbacks</target>
        </trans-unit>
        <trans-unit id="70b1cd250d9842a00c59ff9fa95128bf16fd54ea" translate="yes" xml:space="preserve">
          <source>Callbacks#process_action</source>
          <target state="translated">Callbacks#process_action</target>
        </trans-unit>
        <trans-unit id="771859ee608364f55f3885ad86605cae5bd4a53a" translate="yes" xml:space="preserve">
          <source>Callbacks#run_callbacks</source>
          <target state="translated">Callbacks#run_callbacks</target>
        </trans-unit>
        <trans-unit id="c5476eba5efc884bd47aaeb7996c819c2b497541" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods</source>
          <target state="translated">Callbacks::ClassMethods</target>
        </trans-unit>
        <trans-unit id="3ce3f6debc36ac888dd6681345f6d7bd0a557049" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#after_action</source>
          <target state="translated">Callbacks::ClassMethods#after_action</target>
        </trans-unit>
        <trans-unit id="d926d99ea2a7d53eb67d50eb2c1ab642cdd0401c" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#after_enqueue</source>
          <target state="translated">Callbacks::ClassMethods#after_enqueue</target>
        </trans-unit>
        <trans-unit id="337b95793db57d6d9bdbf31c68d22ee47536452a" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#after_perform</source>
          <target state="translated">Callbacks::ClassMethods#after_perform</target>
        </trans-unit>
        <trans-unit id="8a8b314c48f2f4e446c47b0b0fc5d4cc6b2217de" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#append_after_action</source>
          <target state="translated">Callbacks::ClassMethods#append_after_action</target>
        </trans-unit>
        <trans-unit id="4a8e2b727d0223dc2bb9b8bbaca5c2b8a23f8de8" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#append_around_action</source>
          <target state="translated">Callbacks::ClassMethods#append_around_action</target>
        </trans-unit>
        <trans-unit id="55bf5ab36cf2b60d7035866ca5404e24f47d6fea" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#append_before_action</source>
          <target state="translated">Callbacks::ClassMethods#append_before_action</target>
        </trans-unit>
        <trans-unit id="f4ac633f99f22c772d97fb7a8586ed430efe0d24" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#around_action</source>
          <target state="translated">Callbacks::ClassMethods#around_action</target>
        </trans-unit>
        <trans-unit id="06fa64b8cef3f394187fe1fbff8a8350dec5f864" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#around_enqueue</source>
          <target state="translated">Callbacks::ClassMethods#around_enqueue</target>
        </trans-unit>
        <trans-unit id="a8a0f6e3e091d31d4811d5786a3c25647dd16660" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#around_perform</source>
          <target state="translated">Callbacks::ClassMethods#around_perform</target>
        </trans-unit>
        <trans-unit id="ee5cdb39fb48ac6662b188adca11edf89f171a95" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#before_action</source>
          <target state="translated">Callbacks::ClassMethods#before_action</target>
        </trans-unit>
        <trans-unit id="ef821b756cd64e37d9f88dc213ad62f1853c0bab" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#before_enqueue</source>
          <target state="translated">Callbacks::ClassMethods#before_enqueue</target>
        </trans-unit>
        <trans-unit id="2827fa477417258f089c396d12bb098f1612218b" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#before_perform</source>
          <target state="translated">Callbacks::ClassMethods#before_perform</target>
        </trans-unit>
        <trans-unit id="3ae9d78523f1dad76f6a872f34232a57097b7d71" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#define_callbacks</source>
          <target state="translated">Callbacks::ClassMethods#define_callbacks</target>
        </trans-unit>
        <trans-unit id="d57423db5f8cccbff909ea821b2a9f6fa1998214" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#prepend_after_action</source>
          <target state="translated">Callbacks::ClassMethods#prepend_after_action</target>
        </trans-unit>
        <trans-unit id="29ffe9d819e351ed9d5086159a2e84b21de4c1b1" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#prepend_around_action</source>
          <target state="translated">Callbacks::ClassMethods#prepend_around_action</target>
        </trans-unit>
        <trans-unit id="6447c20bee22673362025c35cf95f8640025ca6e" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#prepend_before_action</source>
          <target state="translated">Callbacks::ClassMethods#prepend_before_action</target>
        </trans-unit>
        <trans-unit id="1397d4566c6959e1d9226ed661b9e3e1e2a4b364" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#reset_callbacks</source>
          <target state="translated">Callbacks::ClassMethods#reset_callbacks</target>
        </trans-unit>
        <trans-unit id="c4045310132203c31143ce83b907e65129e75599" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#set_callback</source>
          <target state="translated">Callbacks::ClassMethods#set_callback</target>
        </trans-unit>
        <trans-unit id="20c4aaa9a164301b119f7d297dd0953d43879b27" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#skip_after_action</source>
          <target state="translated">Callbacks::ClassMethods#skip_after_action</target>
        </trans-unit>
        <trans-unit id="a199d1737b2f9b8e872bfdd5d7e08f6f05f76661" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#skip_around_action</source>
          <target state="translated">Callbacks::ClassMethods#skip_around_action</target>
        </trans-unit>
        <trans-unit id="0da2e2c5e1ec6a3b1b702bbd7d0938430e6b5d63" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#skip_before_action</source>
          <target state="translated">Callbacks::ClassMethods#skip_before_action</target>
        </trans-unit>
        <trans-unit id="f97a390876c82f772925cb1084781abf5ccb822d" translate="yes" xml:space="preserve">
          <source>Callbacks::ClassMethods#skip_callback</source>
          <target state="translated">Callbacks::ClassMethods#skip_callback</target>
        </trans-unit>
        <trans-unit id="0989cef85f7c641bbd7b7d12c0fe93e67295d58e" translate="yes" xml:space="preserve">
          <source>Callbacks::after</source>
          <target state="translated">Callbacks::after</target>
        </trans-unit>
        <trans-unit id="1875071045d34430617fd34996ae87c3742a5544" translate="yes" xml:space="preserve">
          <source>Callbacks::before</source>
          <target state="translated">Callbacks::before</target>
        </trans-unit>
        <trans-unit id="8724a258da3e5f4a12073013b8cbcee9d2722a33" translate="yes" xml:space="preserve">
          <source>Callbacks::new</source>
          <target state="translated">Callbacks::new</target>
        </trans-unit>
        <trans-unit id="d1f89ceff04164704cd7b9492c12dd3b2de2f509" translate="yes" xml:space="preserve">
          <source>Called by &lt;code&gt;render&lt;/code&gt; in &lt;code&gt;AbstractController::Rendering&lt;/code&gt; which sets the return value as the &lt;code&gt;response_body&lt;/code&gt;.</source>
          <target state="translated">리턴 값을 &lt;code&gt;response_body&lt;/code&gt; 로 설정하는 &lt;code&gt;AbstractController::Rendering&lt;/code&gt; 에서 &lt;code&gt;render&lt;/code&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="64a8b5a7fca2c85fd9eabce41449b01acd5e9c73" translate="yes" xml:space="preserve">
          <source>Called by Rack to set up the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23efec9fa774c9abe4eab7d9323791969da8c2c1" translate="yes" xml:space="preserve">
          <source>Called by Rack to setup the server.</source>
          <target state="translated">랙을 호출하여 서버를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b2f2c5be2f6dcebd6855348cc549a7b6e7decaf0" translate="yes" xml:space="preserve">
          <source>Called once a consumer has become a subscriber of the channel. Usually the place to set up any streams you want this channel to be sending to the subscriber.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d494f9d213f153de147a01ecd86a5feb7044d120" translate="yes" xml:space="preserve">
          <source>Called once a consumer has become a subscriber of the channel. Usually the place to setup any streams you want this channel to be sending to the subscriber.</source>
          <target state="translated">소비자가 채널의 가입자가되면 호출됩니다. 일반적으로이 채널이 구독자에게 보내려는 스트림을 설정하는 장소입니다.</target>
        </trans-unit>
        <trans-unit id="ba9bae4158cb252623694327ecaff8830dd6dd1b" translate="yes" xml:space="preserve">
          <source>Called once a consumer has cut its cable connection. Can be used for cleaning up connections or marking users as offline or the like.</source>
          <target state="translated">소비자가 케이블 연결을 끊으면 호출됩니다. 연결을 정리하거나 사용자를 오프라인 등으로 표시하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7645d8b6caecd812dd3dca466c039df99af230ca" translate="yes" xml:space="preserve">
          <source>Called when object is nested under an object that receives &lt;a href=&quot;hash#method-i-with_indifferent_access&quot;&gt;&lt;code&gt;with_indifferent_access&lt;/code&gt;&lt;/a&gt;. This method will be called on the current object by the enclosing object and is aliased to &lt;a href=&quot;hash#method-i-with_indifferent_access&quot;&gt;&lt;code&gt;with_indifferent_access&lt;/code&gt;&lt;/a&gt; by default. Subclasses of &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; may overwrite this method to return &lt;code&gt;self&lt;/code&gt; if converting to an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; would not be desirable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5318037ffa5ce23b7e91503553295957ad0bb3f3" translate="yes" xml:space="preserve">
          <source>Called when object is nested under an object that receives &lt;a href=&quot;hash#method-i-with_indifferent_access&quot;&gt;with_indifferent_access&lt;/a&gt;. This method will be called on the current object by the enclosing object and is aliased to &lt;a href=&quot;hash#method-i-with_indifferent_access&quot;&gt;with_indifferent_access&lt;/a&gt; by default. Subclasses of &lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt; may overwrite this method to return &lt;code&gt;self&lt;/code&gt; if converting to an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; would not be desirable.</source>
          <target state="translated">&lt;a href=&quot;hash#method-i-with_indifferent_access&quot;&gt;with_indifferent_access&lt;/a&gt; 를받는 객체 아래에 객체가 중첩 될 때 호출됩니다 . 이 메서드는 둘러싸는 개체에 의해 현재 개체에서 &lt;a href=&quot;hash#method-i-with_indifferent_access&quot;&gt;호출&lt;/a&gt; 되며 기본적 으로 with_indifferent_access 로 별칭이 지정됩니다 . &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; 로 변환하는 것이 바람직하지 않은 경우 &lt;a href=&quot;hash&quot;&gt;Hash의&lt;/a&gt; 서브 클래스 가이 메소드를 겹쳐 써서 &lt;code&gt;self&lt;/code&gt; 를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98da7de02156a7a09fb0bad3fbb879efc20447f3" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/Parameters.html#method-i-permit&quot;&gt;&lt;code&gt;permit&lt;/code&gt;&lt;/a&gt; like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d148979e195ae7848779ec6de8eff97839ba3b4c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;content_for&lt;/code&gt; stores a block of markup in an identifier for later use. In order to access this stored content in other templates, helper modules or the layout, you would pass the identifier as an argument to &lt;code&gt;content_for&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;content_for&lt;/code&gt; 를 호출 하면 나중에 사용하기 위해 식별자에 마크 업 블록이 저장됩니다. 다른 템플릿, 도우미 모듈 또는 레이아웃에서이 저장된 콘텐츠에 액세스하려면 식별자를 &lt;code&gt;content_for&lt;/code&gt; 에 인수로 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="a83dfec0636f31480607b998902dac524c3a6840" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;content_for&lt;/code&gt; stores a block of markup in an identifier for later use. You can make subsequent calls to the stored content in other templates or the layout by passing the identifier as an argument to &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;content_for&lt;/code&gt; 를 호출 하면 나중에 사용하기 위해 식별자에 마크 업 블록이 저장됩니다. &lt;code&gt;yield&lt;/code&gt; 에 인수로 식별자를 전달하여 다른 템플릿 또는 레이아웃의 저장된 컨텐츠를 후속 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b704ea6e08f44fc71a9312e1aff2379a47344f2b" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;define_callbacks&lt;/code&gt; multiple times with the same &lt;code&gt;names&lt;/code&gt; will overwrite previous callbacks registered with &lt;code&gt;set_callback&lt;/code&gt;.</source>
          <target state="translated">호출 &lt;code&gt;define_callbacks&lt;/code&gt; 에게 같은 여러 번 &lt;code&gt;names&lt;/code&gt; 등록 이전 콜백을 덮어 쓰게됩니다 &lt;code&gt;set_callback&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="845b0ceae821a4858597d3e96d4de2b720d41530" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;draw(:admin)&lt;/code&gt; inside the &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; block itself will try to load a route file that has the same name as the argument given (&lt;code&gt;admin.rb&lt;/code&gt; in this case). The file needs to be located inside the &lt;code&gt;config/routes&lt;/code&gt; directory or any sub-directory (i.e. &lt;code&gt;config/routes/admin.rb&lt;/code&gt; or &lt;code&gt;config/routes/external/admin.rb&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79813dcc4936f4a84aadb122836a14d695746b3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;dup&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; on safe strings yields safe strings.</source>
          <target state="translated">안전한 문자열에서 &lt;code&gt;dup&lt;/code&gt; 또는 &lt;code&gt;clone&lt;/code&gt; 을 호출 하면 안전한 문자열이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="fa4023e05763207bf570b434e1498bc96da84391" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;params&lt;/code&gt; in your application will now return an object instead of a hash. If your parameters are already permitted, then you will not need to make any changes. If you are using &lt;code&gt;map&lt;/code&gt; and other methods that depend on being able to read the hash regardless of &lt;code&gt;permitted?&lt;/code&gt; you will need to upgrade your application to first permit and then convert to a hash.</source>
          <target state="translated">응용 프로그램에서 &lt;code&gt;params&lt;/code&gt; 를 호출 하면 해시 대신 객체가 반환됩니다. 매개 변수가 이미 허용 된 경우 변경할 필요가 없습니다. &lt;code&gt;permitted?&lt;/code&gt; 여부에 관계없이 해시를 읽을 수있는 &lt;code&gt;map&lt;/code&gt; 및 기타 방법을 사용 하는 경우? 먼저 응용 프로그램을 업그레이드하여 해시로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="6b0c43bbad79750364b915f0b82b1fa4484b32dd" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;parsed_body&lt;/code&gt; on the response parses the response body based on the last response MIME type.</source>
          <target state="translated">응답에서 &lt;code&gt;parsed_body&lt;/code&gt; 를 호출 하면 마지막 응답 MIME 유형에 따라 응답 본문이 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="08c255e2aa12ef31e00075ca0219bc8509b20f17" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;to_s&lt;/code&gt; on a safe string returns a safe string, but coercion with &lt;code&gt;to_str&lt;/code&gt; returns an unsafe string.</source>
          <target state="translated">안전한 문자열에서 &lt;code&gt;to_s&lt;/code&gt; 를 호출 하면 안전한 문자열이 반환되지만 &lt;code&gt;to_str&lt;/code&gt; 과의 강제 변환 은 안전하지 않은 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ee5b8ccf8d951bb0770055b220226db3c7fb6c55" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;try!&lt;/code&gt; on &lt;code&gt;nil&lt;/code&gt; always returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">전화 걸기 &lt;code&gt;try!&lt;/code&gt; 에 &lt;code&gt;nil&lt;/code&gt; 항상 반환 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb9df1e8d5fe7c77787d6c179483f8ed5f70d822" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;try&lt;/code&gt; on &lt;code&gt;nil&lt;/code&gt; always returns &lt;code&gt;nil&lt;/code&gt;. It becomes especially helpful when navigating through associations that may return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">통화 &lt;code&gt;try&lt;/code&gt; 에 &lt;code&gt;nil&lt;/code&gt; 항상 반환 &lt;code&gt;nil&lt;/code&gt; . &lt;code&gt;nil&lt;/code&gt; 을 리턴 할 수있는 연관을 탐색 할 때 특히 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="231095aa95bef2cd6c0cde40717ca6359507879c" translate="yes" xml:space="preserve">
          <source>Calling methods on a connection without ownership is subject to the thread-safety guarantees of the underlying method. Many of the methods on connection adapter classes are inherently multi-thread unsafe.</source>
          <target state="translated">소유권이없는 연결에서 메소드를 호출하면 기본 메소드의 스레드 안전성이 보장됩니다. 연결 어댑터 클래스의 많은 메소드는 본질적으로 다중 스레드 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="032be6353568f22d1044b99b43822aaf7349d675" translate="yes" xml:space="preserve">
          <source>Calling multiple redirects or renders</source>
          <target state="translated">여러 리디렉션 또는 렌더링 호출</target>
        </trans-unit>
        <trans-unit id="f38a953c65996b9789aa177e14e889fe5d7d3c4c" translate="yes" xml:space="preserve">
          <source>Calling the same filter multiple times with different options will not work, since the last filter definition will overwrite the previous ones.</source>
          <target state="translated">마지막 필터 정의가 이전 필터를 덮어 쓰기 때문에 다른 옵션으로 동일한 필터를 여러 번 호출하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="96ee33305400589012343fa073c19fdc6dc517b8" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;streams#method-i-stream_for&quot;&gt;&lt;code&gt;stream_for&lt;/code&gt;&lt;/a&gt; if record is present, otherwise calls reject. This method is intended to be called when you're looking for a record based on a parameter, if its found it will start streaming. If the record is nil then it will reject the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4812f798918be9e748796ed9d69cfc7f8326b36" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;to_param&lt;/code&gt; on all its elements and joins the result with slashes. This is used by &lt;code&gt;url_for&lt;/code&gt; in Action Pack.</source>
          <target state="translated">모든 요소에서 &lt;code&gt;to_param&lt;/code&gt; 을 호출 하고 결과를 슬래시로 결합합니다. 이것은 Action Pack의 &lt;code&gt;url_for&lt;/code&gt; 에 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bf95614bebe92e8c0d29060aa6daab6769bfed14" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;travel_to&lt;/code&gt; with &lt;code&gt;Time.now&lt;/code&gt;.</source>
          <target state="translated">통화는 &lt;code&gt;travel_to&lt;/code&gt; 와 &lt;code&gt;Time.now&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ffc66ad1f52697993aba946230b1d55b63c5e94" translate="yes" xml:space="preserve">
          <source>Calls block once for each key in the parameters, passing the key. If no block is given, an enumerator is returned instead.</source>
          <target state="translated">매개 변수의 각 키에 대해 블록을 한 번 호출하여 키를 전달합니다. 블록을 지정하지 않으면 열거자가 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d4568c7488bd757275952dcb035d525cea291830" translate="yes" xml:space="preserve">
          <source>Calls superclass method</source>
          <target state="translated">수퍼 클래스 메소드 호출</target>
        </trans-unit>
        <trans-unit id="f9b45dbb6b466d293bac5a80350322abecad576f" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../../store#method-c-new&quot;&gt;&lt;code&gt;ActiveSupport::Cache::Store::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc2b9e34b431ddaab1b1d0b77e1ce25586d4eca" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../../store#method-c-new&quot;&gt;ActiveSupport::Cache::Store.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../../store#method-c-new&quot;&gt;ActiveSupport :: Cache :: Store.new를 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d64fa68f89ffddf9eb2b53e57e4725f25ce597f" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../../testhelper#method-i-assert_broadcast_on&quot;&gt;&lt;code&gt;ActionCable::TestHelper#assert_broadcast_on&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31daa1aac58584f1687f3139d0ee251602291f16" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../../testhelper#method-i-assert_broadcast_on&quot;&gt;ActionCable::TestHelper#assert_broadcast_on&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../../testhelper#method-i-assert_broadcast_on&quot;&gt;ActionCable :: TestHelper # assert_broadcast_on을 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aeaf6ac38f7784632bbf481b5e23c8394dd919ac" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../../testhelper#method-i-assert_broadcasts&quot;&gt;&lt;code&gt;ActionCable::TestHelper#assert_broadcasts&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca30bdd9ac886fe9acba29bc62cc40c2fc56e0f" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../../testhelper#method-i-assert_broadcasts&quot;&gt;ActionCable::TestHelper#assert_broadcasts&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../../testhelper#method-i-assert_broadcasts&quot;&gt;ActionCable :: TestHelper # assert_broadcasts를 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b46759a2ba8f19da0302082303d85ba6f5522b3e" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../activemodel/attributemethods#method-i-respond_to-3F&quot;&gt;&lt;code&gt;ActiveModel::AttributeMethods#respond_to?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addab59254678922886cc1b1ed799cc5d226d8c1" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../activemodel/attributemethods#method-i-respond_to-3F&quot;&gt;ActiveModel::AttributeMethods#respond_to?&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../activemodel/attributemethods#method-i-respond_to-3F&quot;&gt;ActiveModel :: AttributeMethods # respond_to?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12a322962f0485d0bcdd5b0267536dd2f0cb5f11" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../activemodel/validations#method-i-valid-3F&quot;&gt;&lt;code&gt;ActiveModel::Validations#valid?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6997ec0d7fe57742b0565aa1232ea0a857efb52" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../activemodel/validations#method-i-valid-3F&quot;&gt;ActiveModel::Validations#valid?&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../activemodel/validations#method-i-valid-3F&quot;&gt;ActiveModel :: Validations # valid?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec20ef58f0a7327f0718dff6945b82930d2d352c" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../engine/configuration#method-c-new&quot;&gt;&lt;code&gt;Rails::Engine::Configuration::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a799a43bb12327b1062db75a8684b622e3c68b05" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../engine/configuration#method-c-new&quot;&gt;Rails::Engine::Configuration.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../engine/configuration#method-c-new&quot;&gt;Rails :: Engine :: Configuration.new를&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a7487614a949c1ac50f64f12e3e7924747cc0c41" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../engine/configuration#method-i-paths&quot;&gt;&lt;code&gt;Rails::Engine::Configuration#paths&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d8ec021bf8f7df9af4463a84b593e440c6d603" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../engine/configuration#method-i-paths&quot;&gt;Rails::Engine::Configuration#paths&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../engine/configuration#method-i-paths&quot;&gt;Rails :: Engine :: Configuration # paths&lt;/a&gt; 호출</target>
        </trans-unit>
        <trans-unit id="7adcbe45b3ee644a7020268d0ee327d73564c7dc" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../enumerable#method-i-many-3F&quot;&gt;&lt;code&gt;Enumerable#many?&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86651ef80bf943dd77436d270fc01eaa2c2e23e" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../enumerable#method-i-many-3F&quot;&gt;Enumerable#many?&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../enumerable#method-i-many-3F&quot;&gt;Enumerable # many?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c24af192c4e03589bfc4d8c4fff10a95174719e8" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../hash#method-i-reverse_merge&quot;&gt;&lt;code&gt;Hash#reverse_merge&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d6ff5c2cdcee3981c969da1f11dd9ddd0cec23" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../hash#method-i-reverse_merge&quot;&gt;Hash#reverse_merge&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../hash#method-i-reverse_merge&quot;&gt;Hash # reverse_merge를&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="e2e6c74d2c02254ba9ff9f6e9d10aeb30d5565a6" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../hash#method-i-reverse_merge-21&quot;&gt;&lt;code&gt;Hash#reverse_merge!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fc4a4be52dd82093207f9d570c0cad64950851" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../hash#method-i-reverse_merge-21&quot;&gt;Hash#reverse_merge!&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../hash#method-i-reverse_merge-21&quot;&gt;Hash # reverse_merge를&lt;/a&gt; 호출합니다 !</target>
        </trans-unit>
        <trans-unit id="6ce37f4d24a681ec7ec3b7e3165d166e28aa67cd" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../hash#method-i-slice-21&quot;&gt;&lt;code&gt;Hash#slice!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1f3c6ab9ba88311442e490c59d8a496c54257d" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../hash#method-i-slice-21&quot;&gt;Hash#slice!&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../hash#method-i-slice-21&quot;&gt;Hash # slice를&lt;/a&gt; 호출합니다 !</target>
        </trans-unit>
        <trans-unit id="74b92c6ab1a06c0b0b27b861c7de7e93bbb6d4d9" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../railtie/configuration#method-c-new&quot;&gt;&lt;code&gt;Rails::Railtie::Configuration::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7c6d8f206c9760741b1efc73b12383687764a9" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../railtie/configuration#method-c-new&quot;&gt;Rails::Railtie::Configuration.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../railtie/configuration#method-c-new&quot;&gt;Rails :: Railtie :: Configuration.new를&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="6ec6bb2055b46a298dc3dfb29c79ce6209d53217" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../routing/urlfor#method-c-new&quot;&gt;&lt;code&gt;ActionDispatch::Routing::UrlFor::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d41f1e8ed7716331ac002c905458702ae53a2e" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;../routing/urlfor#method-c-new&quot;&gt;ActionDispatch::Routing::UrlFor.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;../routing/urlfor#method-c-new&quot;&gt;ActionDispatch :: Routing :: UrlFor.new를 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="454a968a3ac8bb758af4779d16a8c1253d6df204" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;abstractadapter#method-i-disconnect-21&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter#disconnect!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150e05675a03713dac08bd653de9ffa3aee2183f" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;abstractadapter#method-i-disconnect-21&quot;&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter#disconnect!&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;abstractadapter#method-i-disconnect-21&quot;&gt;ActiveRecord :: ConnectionAdapters :: AbstractAdapter # disconnect!를&lt;/a&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="6e0c7bab553cbdbb560ade93ccd1bc3aa347272d" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;abstractadapter#method-i-reconnect-21&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter#reconnect!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64dbd552707ac94e666f5241dd06781deab28f7" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;abstractadapter#method-i-reconnect-21&quot;&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter#reconnect!&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;abstractadapter#method-i-reconnect-21&quot;&gt;ActiveRecord :: ConnectionAdapters :: AbstractAdapter # reconnect를&lt;/a&gt; 호출합니다 !</target>
        </trans-unit>
        <trans-unit id="c8fe440de65ea4a1a8c3d0993bafa513f812a4e6" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;abstractmysqladapter#method-c-new&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958ce8eac99a5fc2dbe20ed75fa8827974f6f970" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;abstractmysqladapter#method-c-new&quot;&gt;ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메서드 &lt;a href=&quot;abstractmysqladapter#method-c-new&quot;&gt;ActiveRecord :: ConnectionAdapters :: AbstractMysqlAdapter.new를&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="43929f82c3bcec3b934df946e81a4b87f60fa28d" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;executionwrapper#method-c-wrap&quot;&gt;&lt;code&gt;ActiveSupport::ExecutionWrapper::wrap&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810e810da6f71d56cdc33665efd9631fd584e073" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;executionwrapper#method-c-wrap&quot;&gt;ActiveSupport::ExecutionWrapper.wrap&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;executionwrapper#method-c-wrap&quot;&gt;ActiveSupport :: ExecutionWrapper.wrap을&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="e8f62143054dc036af79b08645cf4db02dcd75e7" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;hashconfig#method-c-new&quot;&gt;&lt;code&gt;ActiveRecord::DatabaseConfigurations::HashConfig::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a642545122f10d63dd544644559569d1504511" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;http/url#method-c-new&quot;&gt;&lt;code&gt;ActionDispatch::Http::URL::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c20159e7c45d2002f9ae032246a3f3abcce67e7" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;http/url#method-c-new&quot;&gt;ActionDispatch::Http::URL.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;http/url#method-c-new&quot;&gt;ActionDispatch :: Http :: URL.new를 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36af8ef07e08ab113c4a6d161ad75f4d9866cd71" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;querycache#method-c-new&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::QueryCache::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8f6efcacd06de1957d3c1d7ad7c6aab802fd68" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;querycache#method-c-new&quot;&gt;ActiveRecord::ConnectionAdapters::QueryCache.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;querycache#method-c-new&quot;&gt;ActiveRecord :: ConnectionAdapters :: QueryCache.new를&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="af1ec396b96804ec11516980ef13f8a9c87b7839" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;schemastatements#method-i-rename_index&quot;&gt;ActiveRecord::ConnectionAdapters::SchemaStatements#rename_index&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;schemastatements#method-i-rename_index&quot;&gt;ActiveRecord :: ConnectionAdapters :: SchemaStatements # rename_index를 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec1af6bb96621a89bb939fdf07978ce61dc0c1af" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;statementinvalid#method-c-new&quot;&gt;&lt;code&gt;ActiveRecord::StatementInvalid::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099f53e8659f402292888902f6283e1507e287c6" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;statementinvalid#method-c-new&quot;&gt;ActiveRecord::StatementInvalid.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;statementinvalid#method-c-new&quot;&gt;ActiveRecord :: StatementInvalid.new를&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="fdd6ab6bda458e47efabb811e12890c6259312f9" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;store#method-c-new&quot;&gt;&lt;code&gt;ActiveSupport::Cache::Store::new&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ebf9c923e82c2adc126e6c53a6bb1c085bdbf4" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;store#method-c-new&quot;&gt;ActiveSupport::Cache::Store.new&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;store#method-c-new&quot;&gt;ActiveSupport :: Cache :: Store.new를 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a5b953f3af68bd5b4db1000ed957109d740c1dc" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;store#method-i-cleanup&quot;&gt;&lt;code&gt;ActiveSupport::Cache::Store#cleanup&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4770c576e6aec39d37d485afb3e6aa3ffbf91f26" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;store#method-i-cleanup&quot;&gt;ActiveSupport::Cache::Store#cleanup&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;store#method-i-cleanup&quot;&gt;ActiveSupport :: Cache :: Store # cleanup을&lt;/a&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="340acd4f122f9f73a4a64d2db3fe616a98c748ab" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;store#method-i-read_multi&quot;&gt;&lt;code&gt;ActiveSupport::Cache::Store#read_multi&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ecf709a4d778eb987e6b36994ebfa0b9f64846" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;store#method-i-read_multi&quot;&gt;ActiveSupport::Cache::Store#read_multi&lt;/a&gt;</source>
          <target state="translated">수퍼 클래스 메소드 &lt;a href=&quot;store#method-i-read_multi&quot;&gt;ActiveSupport :: Cache :: Store # read_multi를 호출합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e7428eb03eb41f7da8317824d0e4a6ca8e8dc64" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;code&gt;ActionDispatch::Session::Compatibility::new&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9f3d105d24709274621144158c1ae3a76a3693" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;code&gt;ActiveRecord::ConnectionAdapters::QueryCache::ConnectionPoolConfiguration::new&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef884e4c77cffe2a32c024c12140ac356f165d5c" translate="yes" xml:space="preserve">
          <source>Calls superclass method ActionDispatch::Session::Compatibility.new</source>
          <target state="translated">수퍼 클래스 메소드 ActionDispatch :: Session :: Compatibility.new를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="1179f62fa03227dbf6187f0b189894981eda85d3" translate="yes" xml:space="preserve">
          <source>Calls superclass method ActiveRecord::ConnectionAdapters::QueryCache::ConnectionPoolConfiguration.new</source>
          <target state="translated">수퍼 클래스 메소드 ActiveRecord :: ConnectionAdapters :: QueryCache :: ConnectionPoolConfiguration.new를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b9842c4f34082ab2bee1d6a39cb45fa6c7152e72" translate="yes" xml:space="preserve">
          <source>Calls the action going through the entire action dispatch stack.</source>
          <target state="translated">전체 작업 디스패치 스택을 통과하는 작업을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="3982b6b14fbab7485e1f090df545be3563ca005e" translate="yes" xml:space="preserve">
          <source>Calls the before and around callbacks in the order they were set, yields the block (if given one), and then runs the after callbacks in reverse order.</source>
          <target state="translated">이전 및 주변 콜백을 설정된 순서대로 호출하고, 블록이 제공되면 (한 경우), 콜백을 역순으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="dc3afbc650b2faa9d0c737f3b3012be300c6f21f" translate="yes" xml:space="preserve">
          <source>Calls the given block once for each element in row collection, passing row as parameter.</source>
          <target state="translated">행 콜렉션의 각 요소에 대해 주어진 블록을 한 번 호출하여 행을 매개 변수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="204e690e514da84ee269cd7970a83f3c7fc8d129" translate="yes" xml:space="preserve">
          <source>Calls this block after &lt;a href=&quot;currentattributes#method-i-reset&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; is called on the instance. Used for resetting external collaborators, like &lt;a href=&quot;../time#method-c-zone&quot;&gt;&lt;code&gt;Time.zone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cde50f691912bea32c091472239ce972ebc022" translate="yes" xml:space="preserve">
          <source>Calls this block after &lt;a href=&quot;currentattributes#method-i-reset&quot;&gt;reset&lt;/a&gt; is called on the instance. Used for resetting external collaborators, like &lt;a href=&quot;../time#method-c-zone&quot;&gt;Time.zone&lt;/a&gt;.</source>
          <target state="translated">인스턴스에서 &lt;a href=&quot;currentattributes#method-i-reset&quot;&gt;재설정&lt;/a&gt; 이 호출 된 후이 블록을 호출 합니다. &lt;a href=&quot;../time#method-c-zone&quot;&gt;Time.zone&lt;/a&gt; 과 같은 외부 공동 작업자를 재설정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c23b5f78ca2fe1ef00905e31ba854455b6e5728" translate="yes" xml:space="preserve">
          <source>Calls this block before &lt;a href=&quot;currentattributes#method-i-reset&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; is called on the instance. Used for resetting external collaborators that depend on current values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7a4d3f12d1ef41edd97aa43a8849515a41e9aa" translate="yes" xml:space="preserve">
          <source>Calls this block before &lt;a href=&quot;currentattributes#method-i-reset&quot;&gt;reset&lt;/a&gt; is called on the instance. Used for resetting external collaborators that depend on current values.</source>
          <target state="translated">인스턴스에서 &lt;a href=&quot;currentattributes#method-i-reset&quot;&gt;재설정&lt;/a&gt; 이 호출 되기 전에이 블록을 호출 합니다. 현재 값에 의존하는 외부 공동 작업자를 재설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="88672c7e867465ae7f4b59d3d2160fa0cdf4c2c2" translate="yes" xml:space="preserve">
          <source>Calls to &lt;code&gt;require_dependency&lt;/code&gt; have to be strategically written in autoloaded spots.</source>
          <target state="translated">&lt;code&gt;require_dependency&lt;/code&gt; 에 대한 호출은 전략적으로 자동로드 된 지점에 작성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="95b1eb8c69d22872c18f0167f3484947e56d61be" translate="yes" xml:space="preserve">
          <source>Calls to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/AbstractController/Rendering.html#method-i-render&quot;&gt;&lt;code&gt;render&lt;/code&gt;&lt;/a&gt; method generally accept six options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c4d457eb575c3a3f9dcc15ce8d70b991ca0a7f" translate="yes" xml:space="preserve">
          <source>Calls to the &lt;code&gt;render&lt;/code&gt; method generally accept five options:</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 메소드 호출은 일반적으로 5 가지 옵션을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="8ddb92ee7b9b51784c38f4ecff1620c11bb7b500" translate="yes" xml:space="preserve">
          <source>Can accept other relation objects. For example:</source>
          <target state="translated">다른 관계 객체를 받아 들일 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dd2387e9ac4b59e97521e3a24d571c07d533951c" translate="yes" xml:space="preserve">
          <source>Can also be written as follows using references:</source>
          <target state="translated">참조를 사용하여 다음과 같이 작성할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="964341536257c138e26e6bbe5e0834e45c1e2b63" translate="yes" xml:space="preserve">
          <source>Can be given a block that will evaluate in the context of the job allowing &lt;code&gt;self.arguments&lt;/code&gt; to be accessed so that a dynamic queue name can be applied:</source>
          <target state="translated">동적 큐 이름을 적용 할 수 있도록 &lt;code&gt;self.arguments&lt;/code&gt; 에 액세스 할 수 있도록 작업 컨텍스트에서 평가할 블록을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82d4b14432746d0aeb75562a8b1acb8f3c763164" translate="yes" xml:space="preserve">
          <source>Can comments for tables, columns, and indexes be specified in create/alter table statements?</source>
          <target state="translated">테이블 작성, 변경 테이블 명령문에서 테이블, 컬럼 및 인덱스에 대한 주석을 지정할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="80a5a7745b018b7c043ff303c1e40a3d42c9e66f" translate="yes" xml:space="preserve">
          <source>Can we do better? You bet!</source>
          <target state="translated">더 잘할 수 있을까요? 물론이지!</target>
        </trans-unit>
        <trans-unit id="7a2947e914be5d5ebe6f81efaadb413a7ede63aa" translate="yes" xml:space="preserve">
          <source>Can you safely dup this object?</source>
          <target state="translated">이 개체를 안전하게 두 드릴 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="ba3a00bb8d5cdcba1e279c57b5ab1648b382efd5" translate="yes" xml:space="preserve">
          <source>Canceling callbacks</source>
          <target state="translated">콜백 취소</target>
        </trans-unit>
        <trans-unit id="7e5a853cb9e07c22b1b312eb402542bd4a9d3f47" translate="yes" xml:space="preserve">
          <source>Capistrano (v2.15.1 and above) includes a recipe to handle this in deployment. Add the following line to &lt;code&gt;Capfile&lt;/code&gt;:</source>
          <target state="translated">Capistrano (v2.15.1 이상)에는 배포시이를 처리 할 수있는 레시피가 포함되어 있습니다. &lt;code&gt;Capfile&lt;/code&gt; 에 다음 행을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4414bb9363fc0381adc643fb12d2867938ea1e5" translate="yes" xml:space="preserve">
          <source>Capitalizes all the words and replaces some characters in the string to create a nicer looking title. &lt;code&gt;titleize&lt;/code&gt; is meant for creating pretty output. It is not used in the Rails internals.</source>
          <target state="translated">모든 단어를 대문자로 표시하고 문자열에서 일부 문자를 대체하여 더보기 좋은 제목을 만듭니다. &lt;code&gt;titleize&lt;/code&gt; 는 예쁜 출력물을 만들기위한 것입니다. Rails 내부에서는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d0bfa44e518afa4f714d9452d2777776f2b6d273" translate="yes" xml:space="preserve">
          <source>Capitalizes the first letter of every word, when possible.</source>
          <target state="translated">가능하면 모든 단어의 첫 글자를 대문자로 표기하십시오.</target>
        </trans-unit>
        <trans-unit id="24a46986e8bed887828eb6b35eee1c26d7ae56a4" translate="yes" xml:space="preserve">
          <source>Capitalizes the first word, turns underscores into spaces, and (by default)strips a trailing '_id' if present. Like &lt;code&gt;titleize&lt;/code&gt;, this is meant for creating pretty output.</source>
          <target state="translated">첫 번째 단어를 대문자로 표시하고 밑줄을 공백으로 바꾸고 기본적으로 후행 '_id'를 표시합니다. &lt;code&gt;titleize&lt;/code&gt; 와 마찬가지로 이것은 예쁜 출력을 만들기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="4a32a4258483429d664ef45d615145d22a49c07b" translate="yes" xml:space="preserve">
          <source>Capitalizes the first word.</source>
          <target state="translated">첫 단어를 대문자로 표기합니다.</target>
        </trans-unit>
        <trans-unit id="082706e64261e155b952b36a3e3df0fa9a672553" translate="yes" xml:space="preserve">
          <source>CaptureHelper</source>
          <target state="translated">CaptureHelper</target>
        </trans-unit>
        <trans-unit id="13e6e57427cec7b4c752e5760f50248e3fd8dd3a" translate="yes" xml:space="preserve">
          <source>Cardinality and associations</source>
          <target state="translated">카디널리티 및 협회</target>
        </trans-unit>
        <trans-unit id="c2d56d958a5b9dd98819cb352d5b123736ff9ab6" translate="yes" xml:space="preserve">
          <source>Cascading style sheet for the controller</source>
          <target state="translated">컨트롤러 용 캐스 케이 딩 스타일 시트</target>
        </trans-unit>
        <trans-unit id="52343efd4dd513b18bed6ef5bdcbcf522210f1f7" translate="yes" xml:space="preserve">
          <source>Cast a &lt;code&gt;value&lt;/code&gt; to a type that the database understands. For example, SQLite does not understand dates, so this method will convert a &lt;a href=&quot;../../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; to a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309f3f80f3ec7e6d709c08c10f29a150253b1684" translate="yes" xml:space="preserve">
          <source>Cast a &lt;code&gt;value&lt;/code&gt; to a type that the database understands. For example, SQLite does not understand dates, so this method will convert a &lt;a href=&quot;../../date&quot;&gt;Date&lt;/a&gt; to a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">데이터베이스가 이해하는 유형 으로 &lt;code&gt;value&lt;/code&gt; 을 캐스트하십시오 . 예를 들어, SQLite는 날짜를 이해하지 못하므로이 메소드는 &lt;a href=&quot;../../date&quot;&gt;Date&lt;/a&gt; 를 &lt;a href=&quot;../../string&quot;&gt;String으로&lt;/a&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e663e266115925eff5513a7308bc53606370327" translate="yes" xml:space="preserve">
          <source>Casts a value from the ruby type to a type that the database knows how to understand. The returned value from this method should be a &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Numeric&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">루비 유형의 값을 데이터베이스가 이해하는 유형으로 캐스트합니다. 이 메서드에서 반환 된 값은 &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Numeric&lt;/code&gt; , &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;Time&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;nil&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7f9f355a82119f3e163324362f390106ba4e87af" translate="yes" xml:space="preserve">
          <source>Catch the exception and reschedule job for re-execution after so many seconds, for a specific number of attempts. If the exception keeps getting raised beyond the specified number of attempts, the exception is allowed to bubble up to the underlying queuing system, which may have its own retry mechanism or place it in a holding queue for inspection.</source>
          <target state="translated">특정 횟수만큼 시도한 후 몇 초 후에 다시 실행되도록 예외를 잡아서 작업을 다시 예약하십시오. 예외가 지정된 시도 횟수 이상으로 계속 발생하면 자체의 재시도 메커니즘이 있거나 검사를 위해 보류 큐에 배치 할 수있는 기본 큐 시스템으로 예외가 버블 링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbf0eb43a0f74729b670cb70ee447e8dafe2ae8e" translate="yes" xml:space="preserve">
          <source>Catching Exceptions</source>
          <target state="translated">예외 잡기</target>
        </trans-unit>
        <trans-unit id="395a7add4b4896c22499b14bbfe49d2e0cdf6eab" translate="yes" xml:space="preserve">
          <source>Causes the records to be loaded from the database if they have not been loaded already. You can use this if for some reason you need to explicitly load some records before actually using them. The return value is the relation itself, not the records.</source>
          <target state="translated">레코드가 아직로드되지 않은 경우 데이터베이스에서 레코드를로드합니다. 어떤 이유로 어떤 레코드를 실제로 사용하기 전에 명시 적으로로드해야하는 경우이를 사용할 수 있습니다. 반환 값은 레코드가 아니라 관계 자체입니다.</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="252ee1b6a3b5cdef06837cde982ffa0f432000ad" translate="yes" xml:space="preserve">
          <source>Certain elements of your page aren't actually referring to any URL, but you may want them to trigger Ajax calls. Specifying the &lt;code&gt;data-url&lt;/code&gt; attribute along with the &lt;code&gt;data-remote&lt;/code&gt; one will trigger an Ajax call to the given URL. You can also specify extra parameters through the &lt;code&gt;data-params&lt;/code&gt; attribute.</source>
          <target state="translated">페이지의 특정 요소는 실제로 URL을 참조하지 않지만 Ajax 호출을 트리거하도록 할 수 있습니다. &lt;code&gt;data-remote&lt;/code&gt; 속성과 함께 &lt;code&gt;data-url&lt;/code&gt; 속성을 지정하면 지정된 URL에 대한 Ajax 호출이 트리거됩니다. &lt;code&gt;data-params&lt;/code&gt; 속성을 통해 추가 매개 변수를 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="62634253720719cbce25f498d277f39259118b9c" translate="yes" xml:space="preserve">
          <source>Certain exceptions are only rescuable from the &lt;code&gt;ApplicationController&lt;/code&gt; class, as they are raised before the controller gets initialized and the action gets executed.</source>
          <target state="translated">컨트롤러가 초기화되고 작업이 실행되기 전에 발생 하는 일부 예외는 &lt;code&gt;ApplicationController&lt;/code&gt; 클래스 에서만 구할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6319ce8d203f15fc6cba48832f17a4ab6ba77291" translate="yes" xml:space="preserve">
          <source>Chain &lt;code&gt;ActiveRecord::Base#find&lt;/code&gt; to &lt;code&gt;ActiveRecord::QueryMethods#lock&lt;/code&gt; to obtain an exclusive lock on the selected rows:</source>
          <target state="translated">체인 &lt;code&gt;ActiveRecord::Base#find&lt;/code&gt; 에 &lt;code&gt;ActiveRecord::QueryMethods#lock&lt;/code&gt; 선택한 행에 대한 배타적 잠금을 구하는 방법</target>
        </trans-unit>
        <trans-unit id="73a05f4d1fffbe78d173e824018a0e81d66df9df" translate="yes" xml:space="preserve">
          <source>Change the name:</source>
          <target state="translated">이름을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="13c27eba3e40965958cdeda0269f57d8773ed716" translate="yes" xml:space="preserve">
          <source>Change the primary key column type</source>
          <target state="translated">기본 키 열 유형 변경</target>
        </trans-unit>
        <trans-unit id="4c2345e058672e575c4c61171442e257214ba174" translate="yes" xml:space="preserve">
          <source>Change the username and password in the &lt;code&gt;development&lt;/code&gt; section as appropriate.</source>
          <target state="translated">&lt;code&gt;development&lt;/code&gt; 섹션 에서 사용자 이름과 비밀번호 를 적절히 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f58bf8c89843cce8382cb8e500aaa0d3c01894d" translate="yes" xml:space="preserve">
          <source>Change to the application's path if there is no &lt;code&gt;config.ru&lt;/code&gt; file in current directory. This allows us to run &lt;code&gt;rails server&lt;/code&gt; from other directories, but still get the main &lt;code&gt;config.ru&lt;/code&gt; and properly set the &lt;code&gt;tmp&lt;/code&gt; directory.</source>
          <target state="translated">현재 디렉토리에 &lt;code&gt;config.ru&lt;/code&gt; 파일 이 없으면 응용 프로그램 경로로 변경하십시오 . 이를 통해 다른 디렉토리에서 &lt;code&gt;rails server&lt;/code&gt; 를 실행할 수 있지만 여전히 메인 &lt;code&gt;config.ru&lt;/code&gt; 를 가져 와서 &lt;code&gt;tmp&lt;/code&gt; 디렉토리를 올바르게 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="55615d65ea89d044e84d2339ecbbdb978ea24d09" translate="yes" xml:space="preserve">
          <source>Change type of a column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f230a3861cb3a3714e8c048bfd3894bd909fb4ca" translate="yes" xml:space="preserve">
          <source>Changes '::' to '/' to convert namespaces to paths.</source>
          <target state="translated">네임 스페이스를 경로로 변환하기 위해 '::'를 '/'로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="01af96627bfe14ed634e9d19418bb929feb84c2b" translate="yes" xml:space="preserve">
          <source>Changes current time to the given time by stubbing &lt;code&gt;Time.now&lt;/code&gt;, &lt;code&gt;Date.today&lt;/code&gt;, and &lt;code&gt;DateTime.now&lt;/code&gt; to return the time or date passed into this method. The stubs are automatically removed at the end of the test.</source>
          <target state="translated">스텁에 의해 주어진 시간에 현재 시간을 변경 &lt;code&gt;Time.now&lt;/code&gt; , &lt;code&gt;Date.today&lt;/code&gt; 및 &lt;code&gt;DateTime.now&lt;/code&gt; 을 이 방법으로 전달 된 시간이나 날짜를 반환 할 수 있습니다. 시험 종료시 스텁이 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="3e2abb31fec8b0f91c38942eb4e1308cabbf5ffa" translate="yes" xml:space="preserve">
          <source>Changes current time to the time in the future or in the past by a given time difference by stubbing &lt;code&gt;Time.now&lt;/code&gt;, &lt;code&gt;Date.today&lt;/code&gt;, and &lt;code&gt;DateTime.now&lt;/code&gt;. The stubs are automatically removed at the end of the test.</source>
          <target state="translated">스텁에 의해 주어진 시간 차이에 의해 미래 나 과거의 시간에 현재 시간을 변경 &lt;code&gt;Time.now&lt;/code&gt; , &lt;code&gt;Date.today&lt;/code&gt; 및 &lt;code&gt;DateTime.now&lt;/code&gt; 을 . 시험 종료시 스텁이 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="0f229fcf4f839be8a2e035405cf03d852dd3c512" translate="yes" xml:space="preserve">
          <source>Changes in JSON handling</source>
          <target state="translated">JSON 처리의 변경</target>
        </trans-unit>
        <trans-unit id="1b8ab56a8f8d912d4cf12ba6b649558ab44246e7" translate="yes" xml:space="preserve">
          <source>Changes on Default Scopes</source>
          <target state="translated">기본 범위의 변경</target>
        </trans-unit>
        <trans-unit id="7a03582b3ac30de8089085b4d86397edbb2f04a9" translate="yes" xml:space="preserve">
          <source>Changes the column's definition according to the new options.</source>
          <target state="translated">새 옵션에 따라 열의 정의를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="4024257d6f2ed72f1a76e1daf597bad23a4863b8" translate="yes" xml:space="preserve">
          <source>Changes the column's definition according to the new options. See &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;&lt;code&gt;TableDefinition#column&lt;/code&gt;&lt;/a&gt; for details of the options you can use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8faf69d1a354a444cb42a8efba060c258ee7c100" translate="yes" xml:space="preserve">
          <source>Changes the column's definition according to the new options. See &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;ActiveRecord::ConnectionAdapters::TableDefinition#column&lt;/a&gt; for details of the options you can use.</source>
          <target state="translated">새 옵션에 따라 열의 정의를 변경합니다. 참조 &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;액티브 :: ConnectionAdapters :: TableDefinition # 열&lt;/a&gt; 사용할 수있는 옵션에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="ca7e1f568d3a733ae690ddca170349b6be460ab2" translate="yes" xml:space="preserve">
          <source>Changes the comment for a column or removes it if &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">열의 주석을 변경하거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="1b8a1ed18d88bb87126a4ef85ada6050badbed9c" translate="yes" xml:space="preserve">
          <source>Changes the comment for a table or removes it if &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">테이블의 주석을 변경하거나 &lt;code&gt;nil&lt;/code&gt; 인 경우 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="241e22b3faa804c005e792541fa926ad469a5cb4" translate="yes" xml:space="preserve">
          <source>Changes to test helper</source>
          <target state="translated">테스트 헬퍼 변경</target>
        </trans-unit>
        <trans-unit id="a66c25b7ddfb192655416b1ecb09027cc94420d3" translate="yes" xml:space="preserve">
          <source>Changes with JSON/JSONB serialization</source>
          <target state="translated">JSON / JSONB 직렬화로 변경</target>
        </trans-unit>
        <trans-unit id="7c4e46c1697d630c0294a24132d51a63b88ec96b" translate="yes" xml:space="preserve">
          <source>Changing Columns</source>
          <target state="translated">열 변경</target>
        </trans-unit>
        <trans-unit id="bb5114af7f11606260b4090f9bf1e88514fec519" translate="yes" xml:space="preserve">
          <source>Changing Existing Migrations</source>
          <target state="translated">기존 마이그레이션 변경</target>
        </trans-unit>
        <trans-unit id="582e771a391d143e0f172e4d4d9bfdfdd7ce0552" translate="yes" xml:space="preserve">
          <source>Changing Tables</source>
          <target state="translated">테이블 변경</target>
        </trans-unit>
        <trans-unit id="1f7824ca94319f2fc9d42a0a36de869494f3d625" translate="yes" xml:space="preserve">
          <source>Changing an existing application</source>
          <target state="translated">기존 애플리케이션 변경</target>
        </trans-unit>
        <trans-unit id="1c802e2d8ba51a09a7dc9e785f355ecdd665289c" translate="yes" xml:space="preserve">
          <source>Changing the &lt;em&gt;assets&lt;/em&gt; Path</source>
          <target state="translated">&lt;em&gt;자산&lt;/em&gt; 경로 변경</target>
        </trans-unit>
        <trans-unit id="c643e55e89a6b2de0e65f36cc2328867b75361d7" translate="yes" xml:space="preserve">
          <source>Changing the Output of Running Migrations</source>
          <target state="translated">마이그레이션 실행 결과 변경</target>
        </trans-unit>
        <trans-unit id="2f4d171e7961ee6750a402b0fc5f121cc40f9872" translate="yes" xml:space="preserve">
          <source>Changing the default settings</source>
          <target state="translated">기본 설정 변경</target>
        </trans-unit>
        <trans-unit id="323c2bb37624fc396e958826c6f7d0fe8e534aa6" translate="yes" xml:space="preserve">
          <source>Changing the driver configuration options is easy. Let's say you want to use the Firefox browser instead of Chrome. In your &lt;code&gt;application_system_test_case.rb&lt;/code&gt; file add the following:</source>
          <target state="translated">드라이버 구성 옵션을 쉽게 변경할 수 있습니다. Chrome 대신 Firefox 브라우저를 사용한다고 가정 해 보겠습니다. 당신에 &lt;code&gt;application_system_test_case.rb&lt;/code&gt; 의 파일에 다음을 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="d11fd9e74ba924a2d5c7bf1dceb97c3651048fca" translate="yes" xml:space="preserve">
          <source>Changing the request encoding</source>
          <target state="translated">요청 인코딩 변경</target>
        </trans-unit>
        <trans-unit id="62f23b22363e0b883e74c4e4fe288cf98fc84376" translate="yes" xml:space="preserve">
          <source>Changing the secret_key_base when using the &lt;code&gt;CookieStore&lt;/code&gt; will invalidate all existing sessions.</source>
          <target state="translated">&lt;code&gt;CookieStore&lt;/code&gt; 를 사용할 때 secret_key_base를 변경하면 모든 기존 세션이 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="840ba35b769a490566d425b79e65b0eb7333c151" translate="yes" xml:space="preserve">
          <source>Changing the value of &lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; will only have an effect on the caching provided by Action Controller. For instance, it will not impact low-level caching, that we address &lt;a href=&quot;#low-level-caching&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d7eaa2091111b08a960e2ee82af38ba7b28389" translate="yes" xml:space="preserve">
          <source>Changing the value of &lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; will only have an effect on the caching provided by the Action Controller component. For instance, it will not impact low-level caching, that we address &lt;a href=&quot;#low-level-caching&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; 의 값을 변경하면 Action Controller 구성 요소가 제공하는 캐싱에만 영향을 미칩니다. 예를 들어, &lt;a href=&quot;#low-level-caching&quot;&gt;아래에서&lt;/a&gt; 다루는 저수준 캐싱에는 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="42aa7cb3b5b450e9fb445b27f6aefde9f798bb85" translate="yes" xml:space="preserve">
          <source>Channel Test Case</source>
          <target state="translated">채널 테스트 사례</target>
        </trans-unit>
        <trans-unit id="0099b82a50cec8d8329d0797acce9c27e2cf4b62" translate="yes" xml:space="preserve">
          <source>Channel instances are long-lived. A channel object will be instantiated when the cable consumer becomes a subscriber, and then lives until the consumer disconnects. This may be seconds, minutes, hours, or even days. That means you have to take special care not to do anything silly in a channel that would balloon its memory footprint or whatever. The references are forever, so they won't be released as is normally the case with a controller instance that gets thrown away after every request.</source>
          <target state="translated">채널 인스턴스는 오래 지속됩니다. 케이블 소비자가 가입자가되면 채널 객체가 인스턴스화되고 소비자가 연결을 끊을 때까지 유지됩니다. 이것은 초, 분, 시간 또는 일일 수 있습니다. 즉, 메모리 풋 프린트 나 그 밖의 무엇이든 벌어 질 수있는 채널에서 어리석은 행동을하지 않도록 특별한주의를 기울여야합니다. 참조는 영구적이므로 모든 요청 후에 폐기되는 컨트롤러 인스턴스의 경우와 같이 일반적으로 해제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dcc6107d2259842c6bdf9874dad91725a291c67a" translate="yes" xml:space="preserve">
          <source>Channel::Base</source>
          <target state="translated">Channel::Base</target>
        </trans-unit>
        <trans-unit id="0bf3d88d764f364bbefc4382a3484db015e0e199" translate="yes" xml:space="preserve">
          <source>Channel::Base#connection</source>
          <target state="translated">Channel::Base#connection</target>
        </trans-unit>
        <trans-unit id="c91227d30aeadcbff1f7a4e0ccd3b0d01860c90f" translate="yes" xml:space="preserve">
          <source>Channel::Base#defer_subscription_confirmation!</source>
          <target state="translated">Channel::Base#defer_subscription_confirmation!</target>
        </trans-unit>
        <trans-unit id="392c9e90df9b3f2e8e747cdab0e9d9c87367dab4" translate="yes" xml:space="preserve">
          <source>Channel::Base#defer_subscription_confirmation?</source>
          <target state="translated">Channel::Base#defer_subscription_confirmation?</target>
        </trans-unit>
        <trans-unit id="a7ac4bdde1159cfbd0ea68811b819e7474bec25f" translate="yes" xml:space="preserve">
          <source>Channel::Base#ensure_confirmation_sent</source>
          <target state="translated">Channel::Base#ensure_confirmation_sent</target>
        </trans-unit>
        <trans-unit id="84bd3100249a9eed4ddb7a1bacb2c4510b46b384" translate="yes" xml:space="preserve">
          <source>Channel::Base#identifier</source>
          <target state="translated">Channel::Base#identifier</target>
        </trans-unit>
        <trans-unit id="3ae983f3cd110396a04fee284b62d5409b964c38" translate="yes" xml:space="preserve">
          <source>Channel::Base#params</source>
          <target state="translated">Channel::Base#params</target>
        </trans-unit>
        <trans-unit id="e7f6c9a7c6cd93a0078a41e4eed65583f57394bc" translate="yes" xml:space="preserve">
          <source>Channel::Base#perform_action</source>
          <target state="translated">Channel::Base#perform_action</target>
        </trans-unit>
        <trans-unit id="2ca0b5ba6de671a2ea18e47bba873102c6df88de" translate="yes" xml:space="preserve">
          <source>Channel::Base#reject</source>
          <target state="translated">Channel::Base#reject</target>
        </trans-unit>
        <trans-unit id="13b8da2e62787e7035b0ad9cf264bae9b69d869c" translate="yes" xml:space="preserve">
          <source>Channel::Base#subscribe_to_channel</source>
          <target state="translated">Channel::Base#subscribe_to_channel</target>
        </trans-unit>
        <trans-unit id="8e611e099888607d2d7b4139b8db99bba68f6d28" translate="yes" xml:space="preserve">
          <source>Channel::Base#subscribed</source>
          <target state="translated">Channel::Base#subscribed</target>
        </trans-unit>
        <trans-unit id="7152c1fee495d21c5a9b5d7af405e2e7cced329a" translate="yes" xml:space="preserve">
          <source>Channel::Base#subscription_confirmation_sent?</source>
          <target state="translated">Channel::Base#subscription_confirmation_sent?</target>
        </trans-unit>
        <trans-unit id="b397797a4610caea8f3b8dc07fe9790a97b3f433" translate="yes" xml:space="preserve">
          <source>Channel::Base#subscription_rejected?</source>
          <target state="translated">Channel::Base#subscription_rejected?</target>
        </trans-unit>
        <trans-unit id="e895a840c4ec9207d85cdcc5eab8ca70a3806e2e" translate="yes" xml:space="preserve">
          <source>Channel::Base#transmit</source>
          <target state="translated">Channel::Base#transmit</target>
        </trans-unit>
        <trans-unit id="33c472fd7b81b9278aab92934b6e9c96ea9895d7" translate="yes" xml:space="preserve">
          <source>Channel::Base#unsubscribed</source>
          <target state="translated">Channel::Base#unsubscribed</target>
        </trans-unit>
        <trans-unit id="e19ce5f7c2b70de0bd9e7ae7cd7fa60c7aa6f000" translate="yes" xml:space="preserve">
          <source>Channel::Base::action_methods</source>
          <target state="translated">Channel::Base::action_methods</target>
        </trans-unit>
        <trans-unit id="d3f413a182cd8c221a5c328ffcafa7b66642c971" translate="yes" xml:space="preserve">
          <source>Channel::Base::clear_action_methods!</source>
          <target state="translated">Channel::Base::clear_action_methods!</target>
        </trans-unit>
        <trans-unit id="2d804e3cdb06b563b2355cb0e12a4d321fd94470" translate="yes" xml:space="preserve">
          <source>Channel::Base::method_added</source>
          <target state="translated">Channel::Base::method_added</target>
        </trans-unit>
        <trans-unit id="30f458c915d4061b931ee304012102779d32fdce" translate="yes" xml:space="preserve">
          <source>Channel::Base::new</source>
          <target state="translated">Channel::Base::new</target>
        </trans-unit>
        <trans-unit id="9a855b731671a6b6ff4ba3d912bbbefd3fbef309" translate="yes" xml:space="preserve">
          <source>Channel::Broadcasting::ClassMethods</source>
          <target state="translated">Channel::Broadcasting::ClassMethods</target>
        </trans-unit>
        <trans-unit id="7750564d945387595a317ae4610e4a8bbb922bc7" translate="yes" xml:space="preserve">
          <source>Channel::Broadcasting::ClassMethods#broadcast_to</source>
          <target state="translated">Channel::Broadcasting::ClassMethods#broadcast_to</target>
        </trans-unit>
        <trans-unit id="c5da2174eba476f780115dfd071d35aa945ee105" translate="yes" xml:space="preserve">
          <source>Channel::Broadcasting::ClassMethods#broadcasting_for</source>
          <target state="translated">Channel::Broadcasting::ClassMethods#broadcasting_for</target>
        </trans-unit>
        <trans-unit id="c455260f270edcfc0b66e8d7673489586fa2d2e4" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub</source>
          <target state="translated">Channel::ChannelStub</target>
        </trans-unit>
        <trans-unit id="dec84f0d8bb57f1877c323bc50bc008d2825f85d" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub#confirmed?</source>
          <target state="translated">Channel::ChannelStub#confirmed?</target>
        </trans-unit>
        <trans-unit id="095e010bd1423f04be4360cd97499e7026836d5c" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub#rejected?</source>
          <target state="translated">Channel::ChannelStub#rejected?</target>
        </trans-unit>
        <trans-unit id="bee40cd6a71f5767feafeca237eca75c3d7347a9" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub#start_periodic_timers</source>
          <target state="translated">Channel::ChannelStub#start_periodic_timers</target>
        </trans-unit>
        <trans-unit id="14c31701d808a22e1e53670ec1e269f8f27c4dba" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub#stop_all_streams</source>
          <target state="translated">Channel::ChannelStub#stop_all_streams</target>
        </trans-unit>
        <trans-unit id="9fbc8b995cd322409e00efb1e50bade26d919628" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub#stop_periodic_timers</source>
          <target state="translated">Channel::ChannelStub#stop_periodic_timers</target>
        </trans-unit>
        <trans-unit id="32817e60938f95a74736e92bf1a3facdce70d3e9" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub#stream_from</source>
          <target state="translated">Channel::ChannelStub#stream_from</target>
        </trans-unit>
        <trans-unit id="0ab15642f4e66f6c6a1a95f8dc193749726aba91" translate="yes" xml:space="preserve">
          <source>Channel::ChannelStub#streams</source>
          <target state="translated">Channel::ChannelStub#streams</target>
        </trans-unit>
        <trans-unit id="0eba55b68c9548f5ada3e24a395025ef95fe979e" translate="yes" xml:space="preserve">
          <source>Channel::Naming::ClassMethods</source>
          <target state="translated">Channel::Naming::ClassMethods</target>
        </trans-unit>
        <trans-unit id="14c8464702c8397beed6ab30c829d76603d2fd6a" translate="yes" xml:space="preserve">
          <source>Channel::Naming::ClassMethods#channel_name</source>
          <target state="translated">Channel::Naming::ClassMethods#channel_name</target>
        </trans-unit>
        <trans-unit id="50358968fe5b63622cef417a97130e7358260a0f" translate="yes" xml:space="preserve">
          <source>Channel::PeriodicTimers::ClassMethods</source>
          <target state="translated">Channel::PeriodicTimers::ClassMethods</target>
        </trans-unit>
        <trans-unit id="9020630a6bcbecb89b7ea05db569be946c0c07a6" translate="yes" xml:space="preserve">
          <source>Channel::PeriodicTimers::ClassMethods#periodically</source>
          <target state="translated">Channel::PeriodicTimers::ClassMethods#periodically</target>
        </trans-unit>
        <trans-unit id="71f92ba11cd45e88e78872bdaf897c29b3884e4f" translate="yes" xml:space="preserve">
          <source>Channel::Streams</source>
          <target state="translated">Channel::Streams</target>
        </trans-unit>
        <trans-unit id="5d7d9e6fe78e0f6984a30e5963da8533f21a6f50" translate="yes" xml:space="preserve">
          <source>Channel::Streams#stop_all_streams</source>
          <target state="translated">Channel::Streams#stop_all_streams</target>
        </trans-unit>
        <trans-unit id="57cfb65f7a26112f18efe962fabbf6d44468096f" translate="yes" xml:space="preserve">
          <source>Channel::Streams#stream_for</source>
          <target state="translated">Channel::Streams#stream_for</target>
        </trans-unit>
        <trans-unit id="ac48c7b94624e5ba64b9063e13795e90abc16c48" translate="yes" xml:space="preserve">
          <source>Channel::Streams#stream_from</source>
          <target state="translated">Channel::Streams#stream_from</target>
        </trans-unit>
        <trans-unit id="18e03e2a37ba37df713f9665ef752fb8b40fc1e8" translate="yes" xml:space="preserve">
          <source>Channels</source>
          <target state="translated">Channels</target>
        </trans-unit>
        <trans-unit id="034e27330489dbd79dd52ada1f349e61e54dee04" translate="yes" xml:space="preserve">
          <source>Chapters</source>
          <target state="translated">Chapters</target>
        </trans-unit>
        <trans-unit id="dc22454aef99015cca1c1bd46d773564669b7c1f" translate="yes" xml:space="preserve">
          <source>Characters considered unsafe for storage (e.g. , $, and the RTL override character) are replaced with a dash.</source>
          <target state="translated">저장에 안전하지 않은 것으로 간주되는 문자 (예 :, $ 및 RTL 대체 문자)는 대시로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="99145c0e522cbeaa2c3c9d2462d7251ab767cf82" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;../naming&quot;&gt;&lt;code&gt;ActiveModel::Naming&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca0e860f0a1018aba0f98129e9f3b6504561628" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;../naming&quot;&gt;ActiveModel::Naming&lt;/a&gt; for more information.</source>
          <target state="translated">확인 &lt;a href=&quot;../naming&quot;&gt;ActiveModel을 :: 명명&lt;/a&gt; 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="6febf3723eefa25ac984741b05dd8710c5d2621c" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;application/configuration&quot;&gt;&lt;code&gt;Rails::Application::Configuration&lt;/code&gt;&lt;/a&gt; to see them all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd78dfb5fb8322b68ffb7e94e1562abf703fff7" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;application/configuration&quot;&gt;Rails::Application::Configuration&lt;/a&gt; to see them all.</source>
          <target state="translated">확인 &lt;a href=&quot;application/configuration&quot;&gt;레일 :: 응용 :: 구성을&lt;/a&gt; 모두 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac7941548cb82b0d16e8d5c9a877a12b776bf931" translate="yes" xml:space="preserve">
          <source>Check for cross-origin JavaScript responses.</source>
          <target state="translated">교차 출처 JavaScript 응답을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="196eb6ea3ad56a8e3e29ea4c0c3fbf880435596c" translate="yes" xml:space="preserve">
          <source>Check here for more details: &lt;a href=&quot;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/backend/utils/cache/plancache.c#l573&quot;&gt;git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/backend/utils/cache/plancache.c#l573&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 여기를 확인하십시오 : &lt;a href=&quot;https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/backend/utils/cache/plancache.c#l573&quot;&gt;git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/backend/utils/cache/plancache.c#l573&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0b01acd2375d41431ade9399a06e7f24ffe3d44" translate="yes" xml:space="preserve">
          <source>Check if a cached fragment from the location signified by &lt;code&gt;key&lt;/code&gt; exists (see &lt;code&gt;expire_fragment&lt;/code&gt; for acceptable formats).</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 표시된 위치에서 캐시 된 조각이 있는지 확인하십시오 ( 허용되는 형식 은 &lt;code&gt;expire_fragment&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a28a3911c7b9c577a233f872738aeb512105b268" translate="yes" xml:space="preserve">
          <source>Check if any of the entries were updated. If so, the watched and/or updated_at values are cached until the block is executed via &lt;code&gt;execute&lt;/code&gt; or &lt;code&gt;execute_if_updated&lt;/code&gt;.</source>
          <target state="translated">업데이트 된 항목이 있는지 확인하십시오. 그렇다면 watched 및 / 또는 updated_at 값은 블록이 &lt;code&gt;execute&lt;/code&gt; 또는 &lt;code&gt;execute_if_updated&lt;/code&gt; 를 통해 실행될 때까지 캐시 됩니다.</target>
        </trans-unit>
        <trans-unit id="7e6a35e32dec654fac86e2ab4997bd22748d359b" translate="yes" xml:space="preserve">
          <source>Check if this is the first iteration of the partial.</source>
          <target state="translated">이것이 부분의 첫 번째 반복인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a39394b681e51ab19fefed6407bb87b2d9646d50" translate="yes" xml:space="preserve">
          <source>Check if this is the last iteration of the partial.</source>
          <target state="translated">이것이 부분의 마지막 반복인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="875150d32e04803f849d39e3c4799c8f1a3d2605" translate="yes" xml:space="preserve">
          <source>Check out &lt;code&gt;ActiveRecord::Locking::Pessimistic&lt;/code&gt; for an alternative.</source>
          <target state="translated">대안은 &lt;code&gt;ActiveRecord::Locking::Pessimistic&lt;/code&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="376e7f4e698015406a7c9d34d29714386198d1b6" translate="yes" xml:space="preserve">
          <source>Check out the controller and modify it a little (in &lt;code&gt;app/controllers/greetings_controller.rb&lt;/code&gt;):</source>
          <target state="translated">컨트롤러를 확인하고 약간 수정하십시오 ( &lt;code&gt;app/controllers/greetings_controller.rb&lt;/code&gt; 에서 ).</target>
        </trans-unit>
        <trans-unit id="be1b9bef8ba2034413737cc5fed9ba4fbe471621" translate="yes" xml:space="preserve">
          <source>Check response freshness (Last-Modified and ETag) against request If-Modified-Since and If-None-Match conditions. If both headers are supplied, both must match, or the request is not considered fresh.</source>
          <target state="translated">요청 If-Modified-Since 및 If-None-Match 조건에 대해 응답 신선도 (마지막 수정 및 ETag)를 확인하십시오. 두 헤더가 모두 제공되는 경우 두 헤더가 모두 일치해야합니다. 그렇지 않으면 요청이 새로운 것으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e405d12f6338ce7abce83349be45f35bdeb1be0" translate="yes" xml:space="preserve">
          <source>Check the &lt;code&gt;Rails::Paths::Path&lt;/code&gt; documentation for more information.</source>
          <target state="translated">자세한 내용 은 &lt;code&gt;Rails::Paths::Path&lt;/code&gt; 설명서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="13b6c42d356f2de8b868eff7238a94752d4970cf" translate="yes" xml:space="preserve">
          <source>Check the connection back in to the connection pool</source>
          <target state="translated">연결 풀로 다시 연결 확인</target>
        </trans-unit>
        <trans-unit id="548fee05d0b279e569e423133846c3d5e5869e2e" translate="yes" xml:space="preserve">
          <source>Check this Rails console session:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9576dab774c6a7cf09b22556659b2a695b3ef9d5" translate="yes" xml:space="preserve">
          <source>Check whether the integer is evenly divisible by the argument.</source>
          <target state="translated">정수가 인수로 균등하게 나눌 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="48eb6d16d6889fa905ca140bee41b3b56f6b3d32" translate="yes" xml:space="preserve">
          <source>Check your CDN documentation for any additional information they may provide such as &lt;code&gt;X-Cache&lt;/code&gt; or for any additional headers they may add.</source>
          <target state="translated">&lt;code&gt;X-Cache&lt;/code&gt; 와 같이 제공 할 수있는 추가 정보 나 추가 할 수있는 추가 헤더 는 CDN 설명서를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c785d4171ccc78a8a79c08226159ac2e71fae378" translate="yes" xml:space="preserve">
          <source>Check-in a database connection back into the pool, indicating that you no longer need this connection.</source>
          <target state="translated">풀에 다시 데이터베이스 연결을 체크인하여 더 이상이 연결이 필요하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dd15ce8ec54b39d80258b3c66fee38f24cc8ad59" translate="yes" xml:space="preserve">
          <source>Check-out a database connection from the pool, indicating that you want to use it. You should call &lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;&lt;code&gt;checkin&lt;/code&gt;&lt;/a&gt; when you no longer need this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10fbc8c0e80c4c396d936cd663ffad0d3430a6d" translate="yes" xml:space="preserve">
          <source>Check-out a database connection from the pool, indicating that you want to use it. You should call &lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;checkin&lt;/a&gt; when you no longer need this.</source>
          <target state="translated">풀에서 데이터베이스 연결을 체크 아웃하여 사용함을 나타냅니다. 당신은 호출해야 &lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;체크인&lt;/a&gt; 더 이상이 필요하지 않을 때.</target>
        </trans-unit>
        <trans-unit id="7f7b24282ced63cc92b7de9aebe4194b8776a3c1" translate="yes" xml:space="preserve">
          <source>Checkboxes are form controls that give the user a set of options they can enable or disable:</source>
          <target state="translated">확인란은 사용자가 활성화 또는 비활성화 할 수있는 옵션 세트를 제공하는 양식 컨트롤입니다.</target>
        </trans-unit>
        <trans-unit id="550833600b70a89c685c990b41ed31e91be0f65b" translate="yes" xml:space="preserve">
          <source>Checks for IP spoofing attacks.</source>
          <target state="translated">IP 스푸핑 공격을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b48ee2984c71753f67c6a55be3a6ac5817751f25" translate="yes" xml:space="preserve">
          <source>Checks if a signed message could have been generated by signing an object with the &lt;code&gt;MessageVerifier&lt;/code&gt;'s secret.</source>
          <target state="translated">&lt;code&gt;MessageVerifier&lt;/code&gt; 의 비밀로 개체에 서명하여 서명 된 메시지가 생성 될 수 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="868977511d695e49f28c3a64cbe882aeed9ece9c" translate="yes" xml:space="preserve">
          <source>Checks if any of the authenticity tokens from the request are valid.</source>
          <target state="translated">요청의 인증 토큰이 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9c94d968cbb5302f333fea2251628408c1a97284" translate="yes" xml:space="preserve">
          <source>Checks if the application's configurations are empty.</source>
          <target state="translated">응용 프로그램 구성이 비어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="434c5d8cb183ed054265d20f0bc50a45df2ad873" translate="yes" xml:space="preserve">
          <source>Checks if the controller allows forgery protection.</source>
          <target state="translated">컨트롤러가 위조 방지를 허용하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="85ab4892d7a01261762945d55e7718bd3004b3eb" translate="yes" xml:space="preserve">
          <source>Checks if the index exists before trying to remove it. Will silently ignore indexes that don't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6070cc08d916e2eb095892d656a5c99b143fd482" translate="yes" xml:space="preserve">
          <source>Checks if the request originated from the same origin by looking at the Origin header.</source>
          <target state="translated">Origin 헤더를보고 요청이 동일한 출처에서 시작되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="99323fcfd6ae5ce537512fdc7d6818d8acf25048" translate="yes" xml:space="preserve">
          <source>Checks pending migrations and raises &lt;code&gt;ActiveRecord::PendingMigrationError&lt;/code&gt; if any migrations are pending.</source>
          <target state="translated">보류중인 마이그레이션을 확인 하고 마이그레이션이 보류중인 경우 &lt;code&gt;ActiveRecord::PendingMigrationError&lt;/code&gt; 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="a82ac065433b3c9becd14df5993e30ee1f620a8f" translate="yes" xml:space="preserve">
          <source>Checks the client's masked token to see if it matches the session token. Essentially the inverse of &lt;code&gt;masked_authenticity_token&lt;/code&gt;.</source>
          <target state="translated">클라이언트의 마스킹 된 토큰이 세션 토큰과 일치하는지 확인합니다. 본질적으로 &lt;code&gt;masked_authenticity_token&lt;/code&gt; 의 반대입니다 .</target>
        </trans-unit>
        <trans-unit id="a9b38f8058e25834c4df470bcf748616d93cbfe3" translate="yes" xml:space="preserve">
          <source>Checks the hash for a key matching the argument passed in:</source>
          <target state="translated">전달 된 인수와 일치하는 키에 대한 해시를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3a2fbfe6e15fa114bde1520c13fcb2c90ebfa60a" translate="yes" xml:space="preserve">
          <source>Checks to see if a column exists in a given table.</source>
          <target state="translated">주어진 테이블에 열이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0358c91bcdb73355358abcb749e74a1473c191e7" translate="yes" xml:space="preserve">
          <source>Checks to see if a column exists.</source>
          <target state="translated">열이 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="931c1417f62b25c16765d500637fc4ce60b6b273" translate="yes" xml:space="preserve">
          <source>Checks to see if a foreign key exists on a table for a given foreign key definition.</source>
          <target state="translated">주어진 외래 키 정의에 대한 외래 키가 테이블에 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="333d52866904d05fdedff85cd1ae966d66394c42" translate="yes" xml:space="preserve">
          <source>Checks to see if a foreign key exists.</source>
          <target state="translated">외래 키가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e98a31f6835f78df7625e5e8b8655b0df6b83d7d" translate="yes" xml:space="preserve">
          <source>Checks to see if an index exists on a table for a given index definition.</source>
          <target state="translated">주어진 인덱스 정의에 대한 인덱스가 테이블에 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b4603b09d9aa2c8e97e5128f683e439c4d9f86fa" translate="yes" xml:space="preserve">
          <source>Checks to see if an index exists.</source>
          <target state="translated">색인이 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8b5f8d48d660550d41273d52695e040ff77d7342" translate="yes" xml:space="preserve">
          <source>Checks to see if the data source &lt;code&gt;name&lt;/code&gt; exists on the database.</source>
          <target state="translated">데이터베이스에 데이터 소스 &lt;code&gt;name&lt;/code&gt; 이 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="ae3525bbc86136b3ef79c2837eeaf2c84c8b5c30" translate="yes" xml:space="preserve">
          <source>Checks to see if the table &lt;code&gt;table_name&lt;/code&gt; exists on the database.</source>
          <target state="translated">&lt;code&gt;table_name&lt;/code&gt; 테이블 이 데이터베이스에 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="12f786eac6dabe2d81212d7334e4752af6533946" translate="yes" xml:space="preserve">
          <source>Checks to see if the view &lt;code&gt;view_name&lt;/code&gt; exists on the database.</source>
          <target state="translated">&lt;code&gt;view_name&lt;/code&gt; 뷰 가 데이터베이스에 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="4bcf53356571c6f583d61de01a719045d2587799" translate="yes" xml:space="preserve">
          <source>Checks whether an associated object with the given conditions exists. Uses the same rules as &lt;a href=&quot;../findermethods#method-i-exists-3F&quot;&gt;&lt;code&gt;ActiveRecord::FinderMethods#exists?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35d12aeb6fe3308d5b9f0ebc9dba3426411ba76" translate="yes" xml:space="preserve">
          <source>Checks whether an associated object with the given conditions exists. Uses the same rules as &lt;a href=&quot;../findermethods#method-i-exists-3F&quot;&gt;ActiveRecord::FinderMethods#exists?&lt;/a&gt;.</source>
          <target state="translated">주어진 조건과 관련된 개체가 존재하는지 확인합니다. &lt;a href=&quot;../findermethods#method-i-exists-3F&quot;&gt;ActiveRecord :: FinderMethods # exists&lt;/a&gt; 와 같은 규칙을 사용 합니까? .</target>
        </trans-unit>
        <trans-unit id="273aa88cf3bfea8faa4469152ad6e4d6e4816aef" translate="yes" xml:space="preserve">
          <source>Checks whether the columns hash is already cached for a table.</source>
          <target state="translated">열 해시가 이미 테이블에 대해 캐시되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ce6e71b8c8cf5ee3a56b192b66535d0868eaad8a" translate="yes" xml:space="preserve">
          <source>Checks whether the connection to the database is still active (i.e. not stale). This is done under the hood by calling &lt;a href=&quot;abstractadapter#method-i-active-3F&quot;&gt;&lt;code&gt;active?&lt;/code&gt;&lt;/a&gt;. If the connection is no longer active, then this method will reconnect to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842027f70c4cc295de4ac0f8bc26841139db8d16" translate="yes" xml:space="preserve">
          <source>Checks whether the connection to the database is still active (i.e. not stale). This is done under the hood by calling &lt;a href=&quot;abstractadapter#method-i-active-3F&quot;&gt;active?&lt;/a&gt;. If the connection is no longer active, then this method will reconnect to the database.</source>
          <target state="translated">데이터베이스 연결이 여전히 활성화되어 있는지 (즉, 오래되지 않았는지) 확인합니다. 이것은 &lt;a href=&quot;abstractadapter#method-i-active-3F&quot;&gt;active&lt;/a&gt; 를 호출하여 후드 아래에서 수행 됩니까? . 연결이 더 이상 활성화되어 있지 않으면이 방법은 데이터베이스에 다시 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="eacf13efada050f2cb4ef9776d3881710b71758a" translate="yes" xml:space="preserve">
          <source>Checks whether the connection to the database is still active. This includes checking whether the database is actually capable of responding, i.e. whether the connection isn't stale.</source>
          <target state="translated">데이터베이스에 대한 연결이 여전히 활성인지 확인합니다. 여기에는 데이터베이스가 실제로 응답 할 수 있는지, 즉 연결이 오래되었는지 여부를 확인하는 작업이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="75af4c692ca06a3f9e51fdb949872b4067774cd0" translate="yes" xml:space="preserve">
          <source>Checksum to ensure integrity</source>
          <target state="translated">무결성을 보장하기위한 체크섬</target>
        </trans-unit>
        <trans-unit id="3eaec49b293a25be72bc0fc2ec48cfad8f4d90f4" translate="yes" xml:space="preserve">
          <source>Child records are validated unless &lt;code&gt;:validate&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:validate&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 가 아닌 한 하위 레코드의 유효성이 검사됩니다 .</target>
        </trans-unit>
        <trans-unit id="98a283815f893be113e9fb0bd1a1339f7cc1a9bf" translate="yes" xml:space="preserve">
          <source>Choices from a Collection of Arbitrary Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f15cfc83840bf272d8ef2670bd7bc023fe49b9a" translate="yes" xml:space="preserve">
          <source>Choose these in certain, specific cases. It's the opinion of the Rails team that model-level validations are the most appropriate in most circumstances.</source>
          <target state="translated">특정한 경우에 이것을 선택하십시오. 레일스 팀은 대부분의 상황에서 모델 수준의 검증이 가장 적합하다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="cdde0bb81983f00ae222cd8b5f50aca226e5802f" translate="yes" xml:space="preserve">
          <source>Choosing Between &lt;code&gt;belongs_to&lt;/code&gt; and &lt;code&gt;has_one&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 와 &lt;code&gt;has_one&lt;/code&gt; 사이에서 선택하기</target>
        </trans-unit>
        <trans-unit id="4a87a5f90d156fdc81ed6adc138ea34793a3206b" translate="yes" xml:space="preserve">
          <source>Choosing Between &lt;code&gt;has_many :through&lt;/code&gt; and &lt;code&gt;has_and_belongs_to_many&lt;/code&gt;</source>
          <target state="translated">중 선택 &lt;code&gt;has_many :through&lt;/code&gt; 와 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ef3ada4adae5826e3eddb5cd2326610e2b78da8" translate="yes" xml:space="preserve">
          <source>Choosing Controller Modules</source>
          <target state="translated">컨트롤러 모듈 선택</target>
        </trans-unit>
        <trans-unit id="5f2cc73a761e23bb4214e0426f511edaf7e8d3b8" translate="yes" xml:space="preserve">
          <source>Choosing Middleware</source>
          <target state="translated">미들웨어 선택</target>
        </trans-unit>
        <trans-unit id="7a8ddcffe23b900b7e0b80409444c8983aa26445" translate="yes" xml:space="preserve">
          <source>Choosing which way to build a many-to-many relationship is not always simple. If you need to work with the relationship model as its own entity, use &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;. Use &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;&lt;code&gt;has_and_belongs_to_many&lt;/code&gt;&lt;/a&gt; when working with legacy schemas or when you never work directly with the relationship itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57c05ac052a7782682cb87c033e225e2f8b9305" translate="yes" xml:space="preserve">
          <source>Choosing which way to build a many-to-many relationship is not always simple. If you need to work with the relationship model as its own entity, use &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;. Use &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; when working with legacy schemas or when you never work directly with the relationship itself.</source>
          <target state="translated">다 대 다 관계를 구축하는 방법을 선택하는 것이 항상 간단한 것은 아닙니다. 관계 모델을 자체 엔티티로 작업해야하는 경우 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 를 사용하십시오 . 레거시 스키마를 사용하거나 관계 자체를 직접 사용하지 않는 경우 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="00821ecc555bc3c7fcee43debd98a4dad7c19ae2" translate="yes" xml:space="preserve">
          <source>Circular data structure detection</source>
          <target state="translated">원형 데이터 구조 탐지</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="b61f0a22825590e758c140f4660a2686e60cc8fc" translate="yes" xml:space="preserve">
          <source>Class Attributes</source>
          <target state="translated">클래스 속성</target>
        </trans-unit>
        <trans-unit id="0499841f82a37405901d9c23e86ff3370d0d3689" translate="yes" xml:space="preserve">
          <source>Class Unload</source>
          <target state="translated">클래스 언로드</target>
        </trans-unit>
        <trans-unit id="491573e040c4d09fb5fe3ae25a6cd2f507eda966" translate="yes" xml:space="preserve">
          <source>Class and Module Definitions are Constant Assignments</source>
          <target state="translated">클래스 및 모듈 정의는 상수 할당입니다</target>
        </trans-unit>
        <trans-unit id="a369a9421a799eecd10cbd877fc7bb63ad1b2f15" translate="yes" xml:space="preserve">
          <source>Class and module definitions can be nested to create namespaces:</source>
          <target state="translated">네임 스페이스를 만들기 위해 클래스 및 모듈 정의를 중첩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="654b50e62f4da1e79ca4cd169426c085a39d6c44" translate="yes" xml:space="preserve">
          <source>Class methods can also be added to concerns. If we want a count of public articles or comments to display on our main page, we might add a class method to Visible as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353fcd07b045e60e6bec72a65403ddb877945e28" translate="yes" xml:space="preserve">
          <source>Class methods on your model are automatically available on scopes. Assuming the following setup:</source>
          <target state="translated">모델의 클래스 메소드는 범위에서 자동으로 사용 가능합니다. 다음 설정을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="361baf3a82b5d3ccefc50ea7b7db5aaa19a372e8" translate="yes" xml:space="preserve">
          <source>Classes and ids for CSS are easy to produce:</source>
          <target state="translated">CSS의 클래스와 ID는 쉽게 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="282780e8d8565bf0d93cea026353a08521034eb7" translate="yes" xml:space="preserve">
          <source>Classes that connect to primary/primary_replica can inherit from &lt;code&gt;ApplicationRecord&lt;/code&gt; like standard Rails applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f170cf1af03ec0f098f1626f0f3b57e0769cb83f" translate="yes" xml:space="preserve">
          <source>Classic Mode is Deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c995e5cbb9b2728eaaa1b27ffdab877822cf979c" translate="yes" xml:space="preserve">
          <source>Clean up hook for parallel testing. This can be used to drop databases if your app uses multiple write/read databases or other clean up before the tests finish. This runs before the forked process is closed.</source>
          <target state="translated">병렬 테스트를 위해 후크를 청소하십시오. 테스트가 완료되기 전에 앱에서 여러 쓰기 / 읽기 데이터베이스 또는 기타 정리를 사용하는 경우 데이터베이스를 삭제하는 데 사용할 수 있습니다. 분기 프로세스가 종료되기 전에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="7a1f8b34202cf03bf28a97aa80097921712fb066" translate="yes" xml:space="preserve">
          <source>Cleans up tempfiles used to buffer multipart requests.</source>
          <target state="translated">멀티 파트 요청을 버퍼링하는 데 사용되는 임시 파일을 정리합니다.</target>
        </trans-unit>
        <trans-unit id="ad8a688b8596838da6ffe31b6375adddca9341fe" translate="yes" xml:space="preserve">
          <source>Cleanups the cache by removing expired entries.</source>
          <target state="translated">만료 된 항목을 제거하여 캐시를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="081af779487a5d2df7b3ce28614a144ba44674ff" translate="yes" xml:space="preserve">
          <source>Clear any caching the database adapter may be doing.</source>
          <target state="translated">데이터베이스 어댑터가 수행중인 캐싱을 지우십시오.</target>
        </trans-unit>
        <trans-unit id="e070e36061f62abb4505efd54e1899c49e56fc3b" translate="yes" xml:space="preserve">
          <source>Clear out internal caches for the data source &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">데이터 소스 &lt;code&gt;name&lt;/code&gt; 의 내부 캐시를 지우십시오 .</target>
        </trans-unit>
        <trans-unit id="ce3a4c75ed2818253a84d95c37e8a8f79310a943" translate="yes" xml:space="preserve">
          <source>Clear the entire cache on all Redis servers. Safe to use on shared servers if the cache is namespaced.</source>
          <target state="translated">모든 Redis 서버에서 전체 캐시를 지우십시오. 캐시가 네임 스페이스 인 경우 공유 서버에서 사용하기에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="b7a212e73c3d628fce1fad2710e181efcc739fac" translate="yes" xml:space="preserve">
          <source>Clear the entire cache on all memcached servers. This method should be used with care when shared cache is being used.</source>
          <target state="translated">모든 memcached 서버에서 전체 캐시를 지우십시오. 이 방법은 공유 캐시를 사용할 때주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f26b89622db50eb00ae2463a25bee9b99ded07e9" translate="yes" xml:space="preserve">
          <source>Clear the error messages.</source>
          <target state="translated">오류 메시지를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="8b72b5c3df2d467ac9f0af6a398ad097211ad0d4" translate="yes" xml:space="preserve">
          <source>Clears all dirty data: current changes and previous changes.</source>
          <target state="translated">더티 데이터 (현재 변경 사항 및 이전 변경 사항)를 모두 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="5996507354e5a7ef678b5702a66f28e3649c42d7" translate="yes" xml:space="preserve">
          <source>Clears all of the validators and validations.</source>
          <target state="translated">모든 유효성 검사기와 유효성 검사를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="41221e742635e013a8f6eccd1af1789eda41e8ac" translate="yes" xml:space="preserve">
          <source>Clears dirty data and moves &lt;code&gt;changes&lt;/code&gt; to &lt;code&gt;previous_changes&lt;/code&gt; and &lt;code&gt;mutations_from_database&lt;/code&gt; to &lt;code&gt;mutations_before_last_save&lt;/code&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c504d454a2ef4f73c12578bd0a59fc27df49b92e" translate="yes" xml:space="preserve">
          <source>Clears dirty data and moves &lt;code&gt;changes&lt;/code&gt; to &lt;code&gt;previously_changed&lt;/code&gt; and &lt;code&gt;mutations_from_database&lt;/code&gt; to &lt;code&gt;mutations_before_last_save&lt;/code&gt; respectively.</source>
          <target state="translated">더티 데이터를 지우고 &lt;code&gt;changes&lt;/code&gt; 을 &lt;code&gt;previously_changed&lt;/code&gt; 및 &lt;code&gt;mutations_from_database&lt;/code&gt; 에서 &lt;code&gt;mutations_before_last_save&lt;/code&gt; 로 각각 이동합니다.</target>
        </trans-unit>
        <trans-unit id="54c11ac331bff40950483680e2200c5c2f799452" translate="yes" xml:space="preserve">
          <source>Clears out internal caches</source>
          <target state="translated">내부 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="0582e2ce5f27f30cc834464e9d911c65e217f174" translate="yes" xml:space="preserve">
          <source>Clears the cache which maps classes and re-connects connections that require reloading.</source>
          <target state="translated">클래스를 매핑하고 다시로드해야하는 연결을 다시 연결하는 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="cd7246c7da7cc1c997919db3351ed9adac25ae89" translate="yes" xml:space="preserve">
          <source>Clears the cache which maps classes.</source>
          <target state="translated">클래스를 매핑하는 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="47fbce31f79cdf60bc4f4560c4403feeea7556ef" translate="yes" xml:space="preserve">
          <source>Clears the entire cache. Be careful with this method since it could affect other processes if shared cache is being used.</source>
          <target state="translated">전체 캐시를 지 웁니다. 공유 캐시를 사용중인 경우 다른 프로세스에 영향을 줄 수 있으므로이 방법에주의하십시오.</target>
        </trans-unit>
        <trans-unit id="7bc7c2fa94e548dac10db75be0b0a0fac202a4b9" translate="yes" xml:space="preserve">
          <source>Clears the loaded inflections within a given scope (default is &lt;code&gt;:all&lt;/code&gt;). Give the scope as a symbol of the inflection type, the options are: &lt;code&gt;:plurals&lt;/code&gt;, &lt;code&gt;:singulars&lt;/code&gt;, &lt;code&gt;:uncountables&lt;/code&gt;, &lt;code&gt;:humans&lt;/code&gt;.</source>
          <target state="translated">주어진 범위 내에서로드 된 변곡을 지 웁니다 (기본값은 &lt;code&gt;:all&lt;/code&gt; ). 범위를 변곡 유형의 상징으로 지정하십시오. 옵션은 &lt;code&gt;:plurals&lt;/code&gt; , &lt;code&gt;:singulars&lt;/code&gt; , &lt;code&gt;:uncountables&lt;/code&gt; , &lt;code&gt;:humans&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="300556a311400e5adcf318c389853564ebefe204" translate="yes" xml:space="preserve">
          <source>Clears the query cache for all connections associated with the current thread.</source>
          <target state="translated">현재 스레드와 관련된 모든 연결에 대한 쿼리 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="49c99b8b6d5723a2750f968e7ee6d764e3125596" translate="yes" xml:space="preserve">
          <source>Clears the query cache.</source>
          <target state="translated">쿼리 캐시를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="3fc08edaa28cc21d94391069eb118d1fe5e5fadd" translate="yes" xml:space="preserve">
          <source>Clears up all existing helpers in this class, only keeping the helper with the same name as this class.</source>
          <target state="translated">이 클래스의 기존 도우미를 모두 지우고이 클래스와 이름이 같은 도우미 만 유지합니다.</target>
        </trans-unit>
        <trans-unit id="30800a1c32c916bf971e667b76bc522a983a474b" translate="yes" xml:space="preserve">
          <source>Clicking this new &quot;Destroy Comment&quot; link will fire off a &lt;code&gt;DELETE
/articles/:article_id/comments/:id&lt;/code&gt; to our &lt;code&gt;CommentsController&lt;/code&gt;, which can then use this to find the comment we want to delete, so let's add a &lt;code&gt;destroy&lt;/code&gt; action to our controller (&lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;):</source>
          <target state="translated">이 새로운 &quot;Destroy Comment&quot;링크를 클릭하면 &lt;code&gt;DELETE /articles/:article_id/comments/:id&lt;/code&gt; 가 &lt;code&gt;CommentsController&lt;/code&gt; 로 시작되며,이를 사용하여 삭제하려는 주석을 찾을 수 있으므로 컨트롤러에 &lt;code&gt;destroy&lt;/code&gt; 조치를 추가하겠습니다. ( &lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt; ) :</target>
        </trans-unit>
        <trans-unit id="8634fcf32a22fe41b6074441f11563e11ee5bf17" translate="yes" xml:space="preserve">
          <source>Client side logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eed2e017ccfcf014c92251ac7fa5fa3acab4d81" translate="yes" xml:space="preserve">
          <source>Client side logging is disabled by default. You can enable this by setting the &lt;code&gt;ActionCable.logger.enabled&lt;/code&gt; to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f33a316221540fd1f8d5d52c69f12c782c96a7" translate="yes" xml:space="preserve">
          <source>Client-Server Interactions</source>
          <target state="translated">클라이언트-서버 상호 작용</target>
        </trans-unit>
        <trans-unit id="c47150a31a2427e1b432c90809d5e033c5c292d7" translate="yes" xml:space="preserve">
          <source>Client-Side Components</source>
          <target state="translated">클라이언트 측 구성 요소</target>
        </trans-unit>
        <trans-unit id="949a316118e339b82aea2478cbfecc5a3c2df0f2" translate="yes" xml:space="preserve">
          <source>Client-side validations can be useful, but are generally unreliable if used alone. If they are implemented using JavaScript, they may be bypassed if JavaScript is turned off in the user's browser. However, if combined with other techniques, client-side validation can be a convenient way to provide users with immediate feedback as they use your site.</source>
          <target state="translated">클라이언트 측 유효성 검사는 유용 할 수 있지만 단독으로 사용하는 경우 일반적으로 신뢰할 수 없습니다. 자바 스크립트를 사용하여 구현 된 경우 사용자 브라우저에서 자바 스크립트가 꺼져 있으면 무시 될 수 있습니다. 그러나 다른 기술과 결합하면 클라이언트 측 유효성 검사는 사용자가 사이트를 사용할 때 즉각적인 피드백을 제공하는 편리한 방법이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9ddf8d2efa01ee55b19ab7ab5eee03e556fe3e6" translate="yes" xml:space="preserve">
          <source>Clone and freeze the attributes hash such that associations are still accessible, even on destroyed records, but cloned models will not be frozen.</source>
          <target state="translated">삭제 된 레코드에서도 연결에 여전히 액세스 할 수 있도록 속성 해시를 복제 및 고정하지만 복제 된 모델은 고정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ca35c042679d8378e47afdb675ff547d5fa3c927" translate="yes" xml:space="preserve">
          <source>Close the WebSocket connection.</source>
          <target state="translated">WebSocket 연결을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="60dd6d6f5a84988986892e1b35538b54303d473a" translate="yes" xml:space="preserve">
          <source>Close then reopen the connection.</source>
          <target state="translated">연결을 닫았다가 다시여십시오.</target>
        </trans-unit>
        <trans-unit id="2584c1152dd2935ef28999bbe008880eec795456" translate="yes" xml:space="preserve">
          <source>Closes the WebSocket connection if it is open and returns a 404 &amp;ldquo;File not Found&amp;rdquo; response.</source>
          <target state="translated">WebSocket 연결이 열려 있으면 닫고 404 &quot;파일을 찾을 수 없음&quot;응답을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ca4e5e98103a44c569ffd33174908432f39bebcf" translate="yes" xml:space="preserve">
          <source>Clustering and load balancing. One can specify multiple memcached servers, and &lt;a href=&quot;memcachestore&quot;&gt;&lt;code&gt;MemCacheStore&lt;/code&gt;&lt;/a&gt; will load balance between all available servers. If a server goes down, then &lt;a href=&quot;memcachestore&quot;&gt;&lt;code&gt;MemCacheStore&lt;/code&gt;&lt;/a&gt; will ignore it until it comes back up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783dd96212b79b8bb2fafd6b29e2d68e618bee12" translate="yes" xml:space="preserve">
          <source>Clustering and load balancing. One can specify multiple memcached servers, and &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; will load balance between all available servers. If a server goes down, then &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; will ignore it until it comes back up.</source>
          <target state="translated">클러스터링 및로드 밸런싱. 하나는 여러 개의 memcached 서버를 지정할 수 있으며 &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; 는 사용 가능한 모든 서버간에로드 밸런스를 수행합니다. 서버가 다운되면 &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; 는 서버가 다시 시작될 때까지 무시합니다.</target>
        </trans-unit>
        <trans-unit id="f5f5398604ae2974d04c2b30dbd393f1a4c31fc2" translate="yes" xml:space="preserve">
          <source>Code examples throughout this guide will refer to one or more of the following models:</source>
          <target state="translated">이 안내서 전체의 코드 예제는 다음 모델 중 하나 이상을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="0d7fefea0506d55fed18734a984fc78b2a86bacb" translate="yes" xml:space="preserve">
          <source>Coding Links to Assets</source>
          <target state="translated">자산에 대한 링크 코딩</target>
        </trans-unit>
        <trans-unit id="40dfc6f94b3dfe10c6b57b755e62876a25f46b71" translate="yes" xml:space="preserve">
          <source>Coerces time to a string for &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; encoding. The default format is ISO 8601. You can get %Y/%m/%d %H:%M:%S +offset style by setting &lt;code&gt;ActiveSupport::JSON::Encoding.use_standard_json_time_format&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aad7f0894409ac648fb5dd0eda6c6081f1bc5a" translate="yes" xml:space="preserve">
          <source>Coerces time to a string for &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; encoding. The default format is ISO 8601. You can get %Y/%m/%d %H:%M:%S +offset style by setting &lt;code&gt;ActiveSupport::JSON::Encoding.use_standard_json_time_format&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; 인코딩을 위해 시간을 문자열로 변환합니다 . 기본 형식은 ISO 8601입니다. &lt;code&gt;ActiveSupport::JSON::Encoding.use_standard_json_time_format&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하여 % Y / % m / % d % H : % M : % S + offset 스타일을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a809433cf66e2c59e60de4aa71c982ddad377c2c" translate="yes" xml:space="preserve">
          <source>Coercion</source>
          <target state="translated">Coercion</target>
        </trans-unit>
        <trans-unit id="769d57dd906a07c372b6c954d0b29f2a74f135d5" translate="yes" xml:space="preserve">
          <source>Collection Caching</source>
          <target state="translated">수집 캐싱</target>
        </trans-unit>
        <trans-unit id="f401eafb998eb98a9694bda56df18c6938af43bb" translate="yes" xml:space="preserve">
          <source>Collection associations (one-to-many / many-to-many)</source>
          <target state="translated">수집 협회 (일대 다 / 다 대다)</target>
        </trans-unit>
        <trans-unit id="59b097061899a987daf9b40660bdf6b202faebcc" translate="yes" xml:space="preserve">
          <source>Collection proxies in Active Record are middlemen between an &lt;code&gt;association&lt;/code&gt;, and its &lt;code&gt;target&lt;/code&gt; result set.</source>
          <target state="translated">Active Record의 콜렉션 프록시는 &lt;code&gt;association&lt;/code&gt; 과 &lt;code&gt;target&lt;/code&gt; 결과 세트 사이의 중간 입니다.</target>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="translated">Collections</target>
        </trans-unit>
        <trans-unit id="8f75f05b69e8c701c97f35b0100b402af06c5ab0" translate="yes" xml:space="preserve">
          <source>Collects the configs for the environment and optionally the specification name passed in. To include replica configurations pass &lt;code&gt;include_replicas: true&lt;/code&gt;.</source>
          <target state="translated">환경에 대한 구성 및 선택적으로 전달 된 사양 이름을 수집합니다. 복제본 구성을 포함하려면 &lt;code&gt;include_replicas: true&lt;/code&gt; 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="88d5e4cac104ffc3f02dd54f2f0f1074fd33fd9b" translate="yes" xml:space="preserve">
          <source>Colors</source>
          <target state="translated">Colors</target>
        </trans-unit>
        <trans-unit id="aa7e8c5d82aa2c31713fffa65ba604fcd753ce3d" translate="yes" xml:space="preserve">
          <source>Column Modifiers</source>
          <target state="translated">열 수정 자</target>
        </trans-unit>
        <trans-unit id="21d399da3911177c35324e298452b0eb86f1425c" translate="yes" xml:space="preserve">
          <source>Column modifiers can be applied when creating or changing a column:</source>
          <target state="translated">열을 만들거나 변경할 때 열 수정자를 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab1566f64ebf60a70522f152bc05256ab417bc98" translate="yes" xml:space="preserve">
          <source>Combining Callback Conditions</source>
          <target state="translated">콜백 조건 결합</target>
        </trans-unit>
        <trans-unit id="9fbcc3cf1cf8cf24d69c06eac6736ee11f60dbb0" translate="yes" xml:space="preserve">
          <source>Combining Them</source>
          <target state="translated">그들을 결합</target>
        </trans-unit>
        <trans-unit id="fa017bf8186069310abe6ecdc2efc79a3201614e" translate="yes" xml:space="preserve">
          <source>Combining Validation Conditions</source>
          <target state="translated">유효성 검사 조건 결합</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="4ea6c56b2de3d67e89efd28d4177d20af3ce5727" translate="yes" xml:space="preserve">
          <source>Command Line Basics</source>
          <target state="translated">커맨드 라인 기본</target>
        </trans-unit>
        <trans-unit id="fed7378d16561a0220c3c4ce880282824df0e484" translate="yes" xml:space="preserve">
          <source>Command Line Injection</source>
          <target state="translated">커맨드 라인 주입</target>
        </trans-unit>
        <trans-unit id="2dbdff57ff7cfcc51652495ae36ff41725ddebf4" translate="yes" xml:space="preserve">
          <source>Command class for carrying out the actual incineration of the &lt;code&gt;InboundMail&lt;/code&gt; that's been scheduled for removal. Before the incineration &amp;ndash; which really is just a call to &lt;code&gt;#destroy!&lt;/code&gt; &amp;ndash; is run, we verify that it's both eligible (by virtue of having already been processed) and time to do so (that is, the &lt;code&gt;InboundEmail&lt;/code&gt; was processed after the &lt;code&gt;incinerate_after&lt;/code&gt; time).</source>
          <target state="translated">제거 예정인 &lt;code&gt;InboundMail&lt;/code&gt; 의 실제 소각을 수행하기위한 명령 클래스 . 소각 전 &amp;ndash; 이것은 실제로 &lt;code&gt;#destroy!&lt;/code&gt; 대한 호출입니다 ! &amp;ndash; 실행 된 경우 (이미 처리 되었기 때문에) 자격이 있는지와 처리 시간 (즉 , &lt;code&gt;incinerate_after&lt;/code&gt; 시간 이후에 &lt;code&gt;InboundEmail&lt;/code&gt; 이 처리됨 )인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="08be4b0809e18902e0cbadfd949e15ce066b38c0" translate="yes" xml:space="preserve">
          <source>Command::Actions</source>
          <target state="translated">Command::Actions</target>
        </trans-unit>
        <trans-unit id="3c8b9a1b26cdcdad8df489d5abd54d1e64efc2c3" translate="yes" xml:space="preserve">
          <source>Command::Actions#load_generators</source>
          <target state="translated">Command::Actions#load_generators</target>
        </trans-unit>
        <trans-unit id="55196bd60805481bc7b7c0cff67bd25f05021bbb" translate="yes" xml:space="preserve">
          <source>Command::Actions#load_tasks</source>
          <target state="translated">Command::Actions#load_tasks</target>
        </trans-unit>
        <trans-unit id="708b9b3221296d64cc725dfe85b887c8f2ca54c9" translate="yes" xml:space="preserve">
          <source>Command::Actions#require_application!</source>
          <target state="translated">Command::Actions#require_application!</target>
        </trans-unit>
        <trans-unit id="266f52fe801eec33d3f3dc6b188c90c6dd3ba426" translate="yes" xml:space="preserve">
          <source>Command::Actions#require_application_and_environment!</source>
          <target state="translated">Command::Actions#require_application_and_environment!</target>
        </trans-unit>
        <trans-unit id="4f16f28aa07f3c5bf4d5f433dcdfbe2e08fbb66a" translate="yes" xml:space="preserve">
          <source>Command::Actions#require_environment!</source>
          <target state="translated">Command::Actions#require_environment!</target>
        </trans-unit>
        <trans-unit id="2cf3e9ddcee3da860e95d855061043b2e75d7f9a" translate="yes" xml:space="preserve">
          <source>Command::Actions#set_application_directory!</source>
          <target state="translated">Command::Actions#set_application_directory!</target>
        </trans-unit>
        <trans-unit id="026e0af9b091db6514c218258bef10b9acd09adf" translate="yes" xml:space="preserve">
          <source>Command::Base</source>
          <target state="translated">Command::Base</target>
        </trans-unit>
        <trans-unit id="413c3ee5f2e5080fe2284469fd6059483fe86832" translate="yes" xml:space="preserve">
          <source>Command::Base#help</source>
          <target state="translated">Command::Base#help</target>
        </trans-unit>
        <trans-unit id="6c3d1ebba03721cab6bfaef06f2cf6e6ec1c422d" translate="yes" xml:space="preserve">
          <source>Command::Base::banner</source>
          <target state="translated">Command::Base::banner</target>
        </trans-unit>
        <trans-unit id="63e29e838264cba5cfcaee7f273525e3a3796cee" translate="yes" xml:space="preserve">
          <source>Command::Base::base_name</source>
          <target state="translated">Command::Base::base_name</target>
        </trans-unit>
        <trans-unit id="cb0c9a061643df4c762a2a4f46a0edf5c10a167c" translate="yes" xml:space="preserve">
          <source>Command::Base::command_name</source>
          <target state="translated">Command::Base::command_name</target>
        </trans-unit>
        <trans-unit id="c34094b4aa4d7cdffb008bc0bc9bc7af2e14bb7e" translate="yes" xml:space="preserve">
          <source>Command::Base::default_command_root</source>
          <target state="translated">Command::Base::default_command_root</target>
        </trans-unit>
        <trans-unit id="ca03241d99914d52dcdb8a80d3b629c0c6b7b434" translate="yes" xml:space="preserve">
          <source>Command::Base::desc</source>
          <target state="translated">Command::Base::desc</target>
        </trans-unit>
        <trans-unit id="05b3296ffb63095aa6b238866cf5223899320f78" translate="yes" xml:space="preserve">
          <source>Command::Base::engine?</source>
          <target state="translated">Command::Base::engine?</target>
        </trans-unit>
        <trans-unit id="e3cdf91f3f59429849edf7ec64eb0408bb9ef0fb" translate="yes" xml:space="preserve">
          <source>Command::Base::executable</source>
          <target state="translated">Command::Base::executable</target>
        </trans-unit>
        <trans-unit id="902f57b490d6c302986e799001e68e647d0af8d8" translate="yes" xml:space="preserve">
          <source>Command::Base::hide_command!</source>
          <target state="translated">Command::Base::hide_command!</target>
        </trans-unit>
        <trans-unit id="7c3a9c8b42430e05e14ba37041dfb5481cbe6b38" translate="yes" xml:space="preserve">
          <source>Command::Base::namespace</source>
          <target state="translated">Command::Base::namespace</target>
        </trans-unit>
        <trans-unit id="584db94576227b10b9c839d239811107c265dd58" translate="yes" xml:space="preserve">
          <source>Command::Base::printing_commands</source>
          <target state="translated">Command::Base::printing_commands</target>
        </trans-unit>
        <trans-unit id="dcecccc5f9ed90488048ed52decbff5fd43bc9b1" translate="yes" xml:space="preserve">
          <source>Command::Base::usage_path</source>
          <target state="translated">Command::Base::usage_path</target>
        </trans-unit>
        <trans-unit id="43a0f267d2fc6ab52660cf33b91cc9629ec9735c" translate="yes" xml:space="preserve">
          <source>Command::command_type</source>
          <target state="translated">Command::command_type</target>
        </trans-unit>
        <trans-unit id="87213fd6f67b207c3ead379974423f07a6b4f88e" translate="yes" xml:space="preserve">
          <source>Command::file_lookup_paths</source>
          <target state="translated">Command::file_lookup_paths</target>
        </trans-unit>
        <trans-unit id="38429120cbbee8343e4c466530c400010ca22f67" translate="yes" xml:space="preserve">
          <source>Command::invoke</source>
          <target state="translated">Command::invoke</target>
        </trans-unit>
        <trans-unit id="79d552b54cc7d1f750da8e0fc914e08666c9af7f" translate="yes" xml:space="preserve">
          <source>Command::lookup_paths</source>
          <target state="translated">Command::lookup_paths</target>
        </trans-unit>
        <trans-unit id="3909a9b64f9204378d3ac57b2e654e08f3c6f355" translate="yes" xml:space="preserve">
          <source>Command::root</source>
          <target state="translated">Command::root</target>
        </trans-unit>
        <trans-unit id="a4f2663020448563286d316ca2ebc61473f2dfa7" translate="yes" xml:space="preserve">
          <source>Commits a transaction.</source>
          <target state="translated">트랜잭션을 커밋합니다.</target>
        </trans-unit>
        <trans-unit id="3288d23c7212dd32ac0d02695d6008f1b582b8c0" translate="yes" xml:space="preserve">
          <source>Commits the transaction (and turns on auto-committing).</source>
          <target state="translated">트랜잭션을 커밋하고 자동 커밋을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="86e54558a727f34642f8027f0919c63723bd2740" translate="yes" xml:space="preserve">
          <source>Common Gotchas</source>
          <target state="translated">공통점</target>
        </trans-unit>
        <trans-unit id="f6eaa962650a97f840a2800c301825ed8d72a917" translate="yes" xml:space="preserve">
          <source>Common Options</source>
          <target state="translated">공통 옵션</target>
        </trans-unit>
        <trans-unit id="ecc0b21a0a93f5a1084804a65190edb9d732556a" translate="yes" xml:space="preserve">
          <source>Common Validation Options</source>
          <target state="translated">일반적인 유효성 검사 옵션</target>
        </trans-unit>
        <trans-unit id="9c00d095b063c1821efcfa9d476864f6a4fa0f48" translate="yes" xml:space="preserve">
          <source>Communication between layout and template</source>
          <target state="translated">레이아웃과 템플릿 간 통신</target>
        </trans-unit>
        <trans-unit id="da3fe3664b44265f386979e6ced1f8ba7f506479" translate="yes" xml:space="preserve">
          <source>Compare &lt;a href=&quot;timezone#attribute-i-name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and TZInfo identifier to a supplied regexp, returning &lt;code&gt;true&lt;/code&gt; if a match is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10953a02727df0828dbbbe7ca1fabc0418a6324" translate="yes" xml:space="preserve">
          <source>Compare &lt;a href=&quot;timezone#attribute-i-name&quot;&gt;name&lt;/a&gt; and TZInfo identifier to a supplied regexp, returning &lt;code&gt;true&lt;/code&gt; if a match is found.</source>
          <target state="translated">&lt;a href=&quot;timezone#attribute-i-name&quot;&gt;이름&lt;/a&gt; 과 TZInfo 식별자를 제공된 정규 표현식과 비교 하여 일치하는 것이 있으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="aaac9a35feeb83fe68d812c77f219d485f0b9fcd" translate="yes" xml:space="preserve">
          <source>Compare this time zone to the parameter. The two are compared first on their offsets, and then by name.</source>
          <target state="translated">이 시간대를 매개 변수와 비교하십시오. 두 가지를 먼저 오프셋에서 비교 한 다음 이름별로 비교합니다.</target>
        </trans-unit>
        <trans-unit id="19b06c562eedb4422a9b81316ca35bbea07ee352" translate="yes" xml:space="preserve">
          <source>Compare this to the case where the &lt;code&gt;reselect&lt;/code&gt; clause is not used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1d2ac80e538d97ed99f12eeeb719c3b013cdae" translate="yes" xml:space="preserve">
          <source>Compare two ranges and see if they overlap each other</source>
          <target state="translated">두 범위를 비교하여 서로 겹치는 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="987e84c7251288c09500c7dbc8d29973aafaf62f" translate="yes" xml:space="preserve">
          <source>CompareWithRange</source>
          <target state="translated">CompareWithRange</target>
        </trans-unit>
        <trans-unit id="fc0b33e3f2bc8e959474eaef069c2490aaf25f83" translate="yes" xml:space="preserve">
          <source>CompareWithRange#===</source>
          <target state="translated">CompareWithRange#===</target>
        </trans-unit>
        <trans-unit id="df94f07e201a0a0b74989d02dd085c77170680b3" translate="yes" xml:space="preserve">
          <source>CompareWithRange#cover?</source>
          <target state="translated">CompareWithRange#cover?</target>
        </trans-unit>
        <trans-unit id="9221302ab3ecde72fdc6c065b450dc9ee68cbd64" translate="yes" xml:space="preserve">
          <source>CompareWithRange#include?</source>
          <target state="translated">CompareWithRange#include?</target>
        </trans-unit>
        <trans-unit id="0c1e2cba5788569b5d652c29f1b1d36670e88433" translate="yes" xml:space="preserve">
          <source>Compares one &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; with another or a &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; to this &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; values are treated as seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66dc3a44be3ec011e46c442300ae1c6d972f729" translate="yes" xml:space="preserve">
          <source>Compares one &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; with another or a &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; to this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;. &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; values are treated as seconds.</source>
          <target state="translated">한 비교 &lt;a href=&quot;duration&quot;&gt;기간&lt;/a&gt; 또 다른 나에 &lt;a href=&quot;../numeric&quot;&gt;숫자를&lt;/a&gt; 이에 &lt;a href=&quot;duration&quot;&gt;시간을&lt;/a&gt; . &lt;a href=&quot;../numeric&quot;&gt;숫자&lt;/a&gt; 값은 초로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="00b404c6cc619fee507752d6454ece908f254cd4" translate="yes" xml:space="preserve">
          <source>Compares two relations for equality.</source>
          <target state="translated">두 관계가 동일한 지 비교합니다.</target>
        </trans-unit>
        <trans-unit id="db9a34714077df6f64ffd4998daaa5523e19ebdb" translate="yes" xml:space="preserve">
          <source>Compatibility can be checked with the &lt;code&gt;zeitwerk:check&lt;/code&gt; task:</source>
          <target state="translated">&lt;code&gt;zeitwerk:check&lt;/code&gt; 작업으로 호환성을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c638dc17527522c4da28520ee248e2e503b3067" translate="yes" xml:space="preserve">
          <source>Compiled assets are written to the location specified in &lt;code&gt;config.assets.prefix&lt;/code&gt;. By default, this is the &lt;code&gt;/assets&lt;/code&gt; directory.</source>
          <target state="translated">컴파일 된 자산은 &lt;code&gt;config.assets.prefix&lt;/code&gt; 에 지정된 위치에 기록됩니다 . 기본적으로이 디렉토리 는 &lt;code&gt;/assets&lt;/code&gt; 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="0c983443ef2923c2082346a62739cd628e522b26" translate="yes" xml:space="preserve">
          <source>Compiles reader methods so we don't have to go through method_missing.</source>
          <target state="translated">독자 메소드를 컴파일하여 method_missing을 거치지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="ca3c686ced561e5621717b4d5914bbf4a0222268" translate="yes" xml:space="preserve">
          <source>Complete List of Action Mailer Methods</source>
          <target state="translated">조치 메일러 메소드의 전체 목록</target>
        </trans-unit>
        <trans-unit id="a869c65ff250386de97d2f4d30334dedcd3850cd" translate="yes" xml:space="preserve">
          <source>Complete path to the file</source>
          <target state="translated">파일의 전체 경로</target>
        </trans-unit>
        <trans-unit id="783920efa93cc8bacd29717c0253926837419f76" translate="yes" xml:space="preserve">
          <source>Complete this in-flight execution. This method &lt;strong&gt;must&lt;/strong&gt; be called exactly once on the result of any call to &lt;code&gt;run!&lt;/code&gt;.</source>
          <target state="translated">이 기내 실행을 완료하십시오. 이 메소드 &lt;strong&gt;는 &lt;/strong&gt; &lt;code&gt;run!&lt;/code&gt; 호출 결과에서 정확히 한 번만 호출되어야 합니다! .</target>
        </trans-unit>
        <trans-unit id="20aa76d7fb7f8ced50e7fee5012bfddfbec58ce2" translate="yes" xml:space="preserve">
          <source>Complex migrations may require processing that Active Record doesn't know how to reverse. You can use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Migration.html#method-i-reversible&quot;&gt;&lt;code&gt;reversible&lt;/code&gt;&lt;/a&gt; to specify what to do when running a migration and what else to do when reverting it. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa9e6bda911c7cdc1a944b8d257b78415176107" translate="yes" xml:space="preserve">
          <source>Complex migrations may require processing that Active Record doesn't know how to reverse. You can use &lt;code&gt;reversible&lt;/code&gt; to specify what to do when running a migration and what else to do when reverting it. For example:</source>
          <target state="translated">복잡한 마이그레이션에는 Active Record가 되돌릴 방법을 모르는 처리가 필요할 수 있습니다. &lt;code&gt;reversible&lt;/code&gt; 을 사용하여 마이그레이션을 실행할 때 수행 할 작업과 되돌릴 때 수행 할 작업을 지정할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fc0ccc765bdf3edfecd5fb56e67a35f6abb55be9" translate="yes" xml:space="preserve">
          <source>Compose decomposed characters to the composed form.</source>
          <target state="translated">분해 된 문자를 작성된 형식으로 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7bf0ab10fb9860e23b1ca89e4313be7fafb258f7" translate="yes" xml:space="preserve">
          <source>Composite Types</source>
          <target state="translated">복합 유형</target>
        </trans-unit>
        <trans-unit id="d3854db1bd68fdcad7425af93eef805f3562edc1" translate="yes" xml:space="preserve">
          <source>Compresses a string using gzip.</source>
          <target state="translated">gzip을 사용하여 문자열을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="178674d4f08129ee266c6df6b5a75493d5bb5cf9" translate="yes" xml:space="preserve">
          <source>Compression is enabled by default with a 1kB threshold, so cached values larger than 1kB are automatically compressed. Disable by passing &lt;code&gt;compress: false&lt;/code&gt; or change the threshold by passing &lt;code&gt;compress_threshold: 4.kilobytes&lt;/code&gt;.</source>
          <target state="translated">압축은 기본적으로 1kB 임계 값으로 활성화되므로 1kB보다 큰 캐시 된 값은 자동으로 압축됩니다. &lt;code&gt;compress: false&lt;/code&gt; 를 전달하여 비활성화 하거나 &lt;code&gt;compress_threshold: 4.kilobytes&lt;/code&gt; 를 전달하여 임계 값을 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef4481132ecc120241808d9e015c82ef654a70ce" translate="yes" xml:space="preserve">
          <source>Compute extname to append to asset path. Returns &lt;code&gt;nil&lt;/code&gt; if nothing should be added.</source>
          <target state="translated">자산 경로에 추가 할 extname을 계산하십시오. 추가해야 할 것이 없으면 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="dfbf2293d7caf9d4c66e61d1fe1d80062b56830d" translate="yes" xml:space="preserve">
          <source>Computes asset path to public directory. Plugins and extensions can override this method to point to custom assets or generate digested paths or query strings.</source>
          <target state="translated">공용 디렉토리에 대한 자산 경로를 계산합니다. 플러그인 및 확장은이 메소드를 대체하여 사용자 정의 자산을 가리 키거나 요약 된 경로 또는 쿼리 문자열을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ae961c1491bcbbc4b6cce7de4f3e820d27b544d" translate="yes" xml:space="preserve">
          <source>Computes the URL to a JavaScript asset in the &lt;code&gt;app/assets/javascripts&lt;/code&gt; directory. This will call &lt;code&gt;javascript_path&lt;/code&gt; internally and merge with your current host or your asset host.</source>
          <target state="translated">&lt;code&gt;app/assets/javascripts&lt;/code&gt; 디렉토리 에서 URL을 JavaScript 자산으로 계산합니다 . 내부적으로 &lt;code&gt;javascript_path&lt;/code&gt; 를 호출 하고 현재 호스트 또는 자산 호스트와 병합합니다.</target>
        </trans-unit>
        <trans-unit id="f1401b32c6d5a61b3abc3d32a5712fdcba7b405f" translate="yes" xml:space="preserve">
          <source>Computes the URL to a stylesheet asset in the &lt;code&gt;app/assets/stylesheets&lt;/code&gt; directory. This will call &lt;code&gt;stylesheet_path&lt;/code&gt; internally and merge with your current host or your asset host.</source>
          <target state="translated">&lt;code&gt;app/assets/stylesheets&lt;/code&gt; 디렉토리 에서 스타일 시트 자산에 대한 URL을 계산합니다 . 내부적으로 &lt;code&gt;stylesheet_path&lt;/code&gt; 를 호출 하고 현재 호스트 또는 자산 호스트와 병합합니다.</target>
        </trans-unit>
        <trans-unit id="609686e83dfce62614488482ee7e9e9948d2f3c3" translate="yes" xml:space="preserve">
          <source>Computes the URL to an image asset in the &lt;code&gt;app/assets/images&lt;/code&gt; directory. This will call &lt;code&gt;image_path&lt;/code&gt; internally and merge with your current host or your asset host.</source>
          <target state="translated">&lt;code&gt;app/assets/images&lt;/code&gt; 디렉토리 의 이미지 자산에 대한 URL을 계산합니다 . 내부적으로 &lt;code&gt;image_path&lt;/code&gt; 를 호출 하고 현재 호스트 또는 자산 호스트와 병합합니다.</target>
        </trans-unit>
        <trans-unit id="b69d51c9fe12e9b6b8ff7516847b170f7ae86efb" translate="yes" xml:space="preserve">
          <source>Computes the full URL to a JavaScript asset in the public javascripts directory. This will use &lt;code&gt;javascript_path&lt;/code&gt; internally, so most of their behaviors will be the same. Since &lt;code&gt;javascript_url&lt;/code&gt; is based on &lt;code&gt;asset_url&lt;/code&gt; method you can set :host options. If :host options is set, it overwrites global &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; setting.</source>
          <target state="translated">공개 javascripts 디렉토리의 JavaScript 자산에 대한 전체 URL을 계산합니다. 이것은 내부적으로 &lt;code&gt;javascript_path&lt;/code&gt; 를 사용 하므로 대부분의 동작은 동일합니다. &lt;code&gt;javascript_url&lt;/code&gt; 은 &lt;code&gt;asset_url&lt;/code&gt; 메소드를 기반으로 하기 때문에 : host 옵션을 설정할 수 있습니다. : host 옵션을 설정하면 전역 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 설정을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="e8d9c28d159cb393af4d9caeb556358f4152cb83" translate="yes" xml:space="preserve">
          <source>Computes the full URL to a font asset. This will use &lt;code&gt;font_path&lt;/code&gt; internally, so most of their behaviors will be the same. Since &lt;code&gt;font_url&lt;/code&gt; is based on &lt;code&gt;asset_url&lt;/code&gt; method you can set :host options. If :host options is set, it overwrites global &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; setting.</source>
          <target state="translated">전체 URL을 글꼴 자산으로 계산합니다. 내부적으로 &lt;code&gt;font_path&lt;/code&gt; 를 사용 하므로 대부분의 동작은 동일합니다. &lt;code&gt;font_url&lt;/code&gt; 은 &lt;code&gt;asset_url&lt;/code&gt; 메소드를 기반으로 하기 때문에 : host 옵션을 설정할 수 있습니다. : host 옵션을 설정하면 전역 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 설정을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="44f02426c48326d49cdb28b4bfa7df6cf4597ad5" translate="yes" xml:space="preserve">
          <source>Computes the full URL to a stylesheet asset in the public stylesheets directory. This will use &lt;code&gt;stylesheet_path&lt;/code&gt; internally, so most of their behaviors will be the same. Since &lt;code&gt;stylesheet_url&lt;/code&gt; is based on &lt;code&gt;asset_url&lt;/code&gt; method you can set :host options. If :host options is set, it overwrites global &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; setting.</source>
          <target state="translated">공개 스타일 시트 디렉토리에서 전체 URL을 스타일 시트 자산으로 계산합니다. 내부적으로 &lt;code&gt;stylesheet_path&lt;/code&gt; 를 사용 하므로 대부분의 동작은 동일합니다. &lt;code&gt;stylesheet_url&lt;/code&gt; 은 &lt;code&gt;asset_url&lt;/code&gt; 메소드를 기반으로 하기 때문에 : host 옵션을 설정할 수 있습니다. : host 옵션을 설정하면 전역 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 설정을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="6ead35ae4ba95a6518a4788804d364e74c312a7d" translate="yes" xml:space="preserve">
          <source>Computes the full URL to a video asset in the public videos directory. This will use &lt;code&gt;video_path&lt;/code&gt; internally, so most of their behaviors will be the same. Since &lt;code&gt;video_url&lt;/code&gt; is based on &lt;code&gt;asset_url&lt;/code&gt; method you can set :host options. If :host options is set, it overwrites global &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; setting.</source>
          <target state="translated">공개 동영상 디렉토리에서 동영상 저작물의 전체 URL을 계산합니다. 내부적으로 &lt;code&gt;video_path&lt;/code&gt; 를 사용 하므로 대부분의 동작은 동일합니다. &lt;code&gt;video_url&lt;/code&gt; 은 &lt;code&gt;asset_url&lt;/code&gt; 메소드를 기반으로 하기 때문에 : host 옵션을 설정할 수 있습니다. : host 옵션을 설정하면 전역 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 설정을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="9f789cbba8101b430c10f0733114a47c8b83c986" translate="yes" xml:space="preserve">
          <source>Computes the full URL to an asset in the public directory. This will use &lt;code&gt;asset_path&lt;/code&gt; internally, so most of their behaviors will be the same. If :host options is set, it overwrites global &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; setting.</source>
          <target state="translated">공용 디렉토리의 자산에 대한 전체 URL을 계산합니다. 내부적으로 &lt;code&gt;asset_path&lt;/code&gt; 를 사용 하므로 대부분의 동작은 동일합니다. : host 옵션을 설정하면 전역 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 설정을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="701c62bf3156a018f3e48e7633571058ce71f646" translate="yes" xml:space="preserve">
          <source>Computes the full URL to an audio asset in the public audios directory. This will use &lt;code&gt;audio_path&lt;/code&gt; internally, so most of their behaviors will be the same. Since &lt;code&gt;audio_url&lt;/code&gt; is based on &lt;code&gt;asset_url&lt;/code&gt; method you can set :host options. If :host options is set, it overwrites global &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; setting.</source>
          <target state="translated">공개 오디오 디렉토리의 오디오 자산에 대한 전체 URL을 계산합니다. 내부적으로 &lt;code&gt;audio_path&lt;/code&gt; 를 사용 하므로 대부분의 동작은 동일합니다. &lt;code&gt;audio_url&lt;/code&gt; 은 &lt;code&gt;asset_url&lt;/code&gt; 메소드를 기반으로 하기 때문에 : host 옵션을 설정할 수 있습니다. : host 옵션을 설정하면 전역 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 설정을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="4ee06f4acc192891e06040a413e995f8fec77b0f" translate="yes" xml:space="preserve">
          <source>Computes the full URL to an image asset. This will use &lt;code&gt;image_path&lt;/code&gt; internally, so most of their behaviors will be the same. Since &lt;code&gt;image_url&lt;/code&gt; is based on &lt;code&gt;asset_url&lt;/code&gt; method you can set :host options. If :host options is set, it overwrites global &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; setting.</source>
          <target state="translated">전체 URL을 이미지 자산으로 계산합니다. 내부적으로 &lt;code&gt;image_path&lt;/code&gt; 를 사용 하므로 대부분의 동작은 동일합니다. 때문에 &lt;code&gt;image_url&lt;/code&gt; 기반으로 &lt;code&gt;asset_url&lt;/code&gt; 방법을 설정할 수 있습니다 : 호스트 옵션을. : host 옵션을 설정하면 전역 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 설정을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="7696fc0fbeb757e7d8842d41a3ed96216e9826b4" translate="yes" xml:space="preserve">
          <source>Computes the path to a JavaScript asset in the &lt;code&gt;app/assets/javascripts&lt;/code&gt; directory. If the source filename has no extension, &lt;code&gt;.js&lt;/code&gt; will be appended. Full paths from the document root will be passed through. Used internally by &lt;code&gt;javascript_include_tag&lt;/code&gt; to build the script path.</source>
          <target state="translated">&lt;code&gt;app/assets/javascripts&lt;/code&gt; 디렉토리 에서 JavaScript 자산의 경로를 계산합니다 . 소스 파일 이름에 확장자가 없으면 &lt;code&gt;.js&lt;/code&gt; 가 추가됩니다. 문서 루트의 전체 경로가 전달됩니다. 스크립트 경로를 빌드하기 위해 &lt;code&gt;javascript_include_tag&lt;/code&gt; 에 의해 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="45451bb424192dfd064138bfcf318d57690c75eb" translate="yes" xml:space="preserve">
          <source>Computes the path to a JavaScript asset in the public javascripts directory. If the &lt;code&gt;source&lt;/code&gt; filename has no extension, .js will be appended (except for explicit URIs) Full paths from the document root will be passed through. Used internally by &lt;code&gt;javascript_include_tag&lt;/code&gt; to build the script path.</source>
          <target state="translated">공개 javascripts 디렉토리에서 JavaScript 자산의 경로를 계산합니다. 경우 &lt;code&gt;source&lt;/code&gt; 파일 이름에 확장자가없는,의 .js는 문서 루트에서 전체 경로를 통해 전달됩니다 (명시 적 URI를 제외) 추가됩니다. 스크립트 경로를 빌드하기 위해 &lt;code&gt;javascript_include_tag&lt;/code&gt; 에 의해 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="49713c927cf21ccf254cce22c6353c6bcea504d3" translate="yes" xml:space="preserve">
          <source>Computes the path to a font asset. Full paths from the document root will be passed through.</source>
          <target state="translated">글꼴 자산의 경로를 계산합니다. 문서 루트의 전체 경로가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="aa4ef05edbae29981c4aefd7edf9493c744cbb39" translate="yes" xml:space="preserve">
          <source>Computes the path to a stylesheet asset in the &lt;code&gt;app/assets/stylesheets&lt;/code&gt; directory. If the source filename has no extension, &lt;code&gt;.css&lt;/code&gt; will be appended. Full paths from the document root will be passed through. Used internally by &lt;code&gt;stylesheet_link_tag&lt;/code&gt; to build the stylesheet path.</source>
          <target state="translated">&lt;code&gt;app/assets/stylesheets&lt;/code&gt; 디렉토리 에서 스타일 시트 자산의 경로를 계산합니다 . 소스 파일 이름에 확장자가 없으면 &lt;code&gt;.css&lt;/code&gt; 가 추가됩니다. 문서 루트의 전체 경로가 전달됩니다. 스타일 시트 경로를 빌드하기 위해 &lt;code&gt;stylesheet_link_tag&lt;/code&gt; 에 의해 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="702829df6eb1924e5fdb2e6ec24587f6e1e559e2" translate="yes" xml:space="preserve">
          <source>Computes the path to a stylesheet asset in the public stylesheets directory. If the &lt;code&gt;source&lt;/code&gt; filename has no extension, .css will be appended (except for explicit URIs). Full paths from the document root will be passed through. Used internally by &lt;code&gt;stylesheet_link_tag&lt;/code&gt; to build the stylesheet path.</source>
          <target state="translated">공개 스타일 시트 디렉토리에서 스타일 시트 자산의 경로를 계산합니다. 경우 &lt;code&gt;source&lt;/code&gt; 파일 이름에 확장자가없는, .CSS는 (명시 적 URI를 제외) 추가됩니다. 문서 루트의 전체 경로가 전달됩니다. 스타일 시트 경로를 빌드하기 위해 &lt;code&gt;stylesheet_link_tag&lt;/code&gt; 에 의해 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="cf992a2dc4c5c3209a4942b35e5dd3783634a21c" translate="yes" xml:space="preserve">
          <source>Computes the path to a video asset in the public videos directory. Full paths from the document root will be passed through. Used internally by &lt;code&gt;video_tag&lt;/code&gt; to build the video path.</source>
          <target state="translated">공개 비디오 디렉토리에서 비디오 자산의 경로를 계산합니다. 문서 루트의 전체 경로가 전달됩니다. &lt;code&gt;video_tag&lt;/code&gt; 에서 내부적으로 사용 하여 비디오 경로를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="157fa3a30716ec7b73e5a5b1221f10ebe029d8df" translate="yes" xml:space="preserve">
          <source>Computes the path to an audio asset in the public audios directory. Full paths from the document root will be passed through. Used internally by &lt;code&gt;audio_tag&lt;/code&gt; to build the audio path.</source>
          <target state="translated">공개 오디오 디렉토리의 오디오 자산에 대한 경로를 계산합니다. 문서 루트의 전체 경로가 전달됩니다. &lt;code&gt;audio_tag&lt;/code&gt; 에서 내부적으로 사용 하여 오디오 경로를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="db39d4559cb36822822076ab6fa077b23c98623c" translate="yes" xml:space="preserve">
          <source>Computes the path to an image asset in the &lt;code&gt;app/assets/images&lt;/code&gt; directory. Full paths from the document root will be passed through. Used internally by &lt;code&gt;image_tag&lt;/code&gt; to build the image path.</source>
          <target state="translated">&lt;code&gt;app/assets/images&lt;/code&gt; 디렉토리 에서 이미지 자산의 경로를 계산합니다 . 문서 루트의 전체 경로가 전달됩니다. 이미지 경로를 빌드하기 위해 &lt;code&gt;image_tag&lt;/code&gt; 에 의해 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="43d08c1cdd62c0815ca040d67633fbd86a657d88" translate="yes" xml:space="preserve">
          <source>Computes the path to an image asset. Full paths from the document root will be passed through. Used internally by &lt;code&gt;image_tag&lt;/code&gt; to build the image path:</source>
          <target state="translated">이미지 자산의 경로를 계산합니다. 문서 루트의 전체 경로가 전달됩니다. &lt;code&gt;image_tag&lt;/code&gt; 에서 내부적으로 사용 하여 이미지 경로를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="24503ff2fd02386ce61f60b25ba4b0130c6fb054" translate="yes" xml:space="preserve">
          <source>Conceptually, before Rails 6.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79f2580d71df3ed13dc01c2d849b1dc12a9758e" translate="yes" xml:space="preserve">
          <source>Concern</source>
          <target state="translated">Concern</target>
        </trans-unit>
        <trans-unit id="70d6bbfb1b12dd02ed0cdfaf4205ac26f9a33a14" translate="yes" xml:space="preserve">
          <source>Concern#class_methods</source>
          <target state="translated">Concern#class_methods</target>
        </trans-unit>
        <trans-unit id="12422e9f0653ddb53d456640780e15f62159d725" translate="yes" xml:space="preserve">
          <source>Concern#included</source>
          <target state="translated">Concern#included</target>
        </trans-unit>
        <trans-unit id="47b4d947dfea29f8e173407559da276f5ccc0371" translate="yes" xml:space="preserve">
          <source>Concerning</source>
          <target state="translated">Concerning</target>
        </trans-unit>
        <trans-unit id="dd46b673778b367fd6f11d070236eedff65d912a" translate="yes" xml:space="preserve">
          <source>Concerning#concern</source>
          <target state="translated">Concerning#concern</target>
        </trans-unit>
        <trans-unit id="8703f8ac0af603eedae3bd0c62d3d5cbd7142251" translate="yes" xml:space="preserve">
          <source>Concerning#concerning</source>
          <target state="translated">Concerning#concerning</target>
        </trans-unit>
        <trans-unit id="fb9faec7aade5881cf2b86378e5dbb812a39262a" translate="yes" xml:space="preserve">
          <source>Concerns are a way to make large controllers or models easier to understand and manage. This also has the advantage of reusability when multiple models (or controllers) share the same concerns. Concerns are implemented using modules that contain methods representing a well-defined slice of the functionality that a model or controller is responsible for. In other languages, modules are often known as mixins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="2ec390bfae82ff5b921e55c4ae832ef41eb12f05" translate="yes" xml:space="preserve">
          <source>Concurrency</source>
          <target state="translated">Concurrency</target>
        </trans-unit>
        <trans-unit id="335a51c04c015359046fcc5687436a6bfedaee40" translate="yes" xml:space="preserve">
          <source>Concurrency and integrity</source>
          <target state="translated">동시성과 무결성</target>
        </trans-unit>
        <trans-unit id="9fbfb45dd043bf13e63bd1be991c665dd85f7d85" translate="yes" xml:space="preserve">
          <source>Concurrency::LoadInterlockAwareMonitor</source>
          <target state="translated">Concurrency::LoadInterlockAwareMonitor</target>
        </trans-unit>
        <trans-unit id="bc49b70318388834ed0f32c28bb39a5b6edcb977" translate="yes" xml:space="preserve">
          <source>Concurrency::LoadInterlockAwareMonitor#mon_enter</source>
          <target state="translated">Concurrency::LoadInterlockAwareMonitor#mon_enter</target>
        </trans-unit>
        <trans-unit id="c37cdcdd19cb8575e5e6fadf83d45dd5ec41b51a" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock</source>
          <target state="translated">Concurrency::ShareLock</target>
        </trans-unit>
        <trans-unit id="f7c6b424ca6b32aef0586928e35328f77575deef" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock#exclusive</source>
          <target state="translated">Concurrency::ShareLock#exclusive</target>
        </trans-unit>
        <trans-unit id="afb254b1a267a47e48a8755ca1825a5cc926ad9e" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock#sharing</source>
          <target state="translated">Concurrency::ShareLock#sharing</target>
        </trans-unit>
        <trans-unit id="1fb2fc9c74c43b1744f235c7d2ce717cd400f3ec" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock#start_exclusive</source>
          <target state="translated">Concurrency::ShareLock#start_exclusive</target>
        </trans-unit>
        <trans-unit id="8dd0b1e78f8ec13b116964cd58a294bbf671e87a" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock#start_sharing</source>
          <target state="translated">Concurrency::ShareLock#start_sharing</target>
        </trans-unit>
        <trans-unit id="f568ab4f2dc20d36175fe39ca8c8bf424ea4ac7f" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock#stop_exclusive</source>
          <target state="translated">Concurrency::ShareLock#stop_exclusive</target>
        </trans-unit>
        <trans-unit id="18e6b86cc505f46aa402535ce14cbb6f3d2d2e47" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock#stop_sharing</source>
          <target state="translated">Concurrency::ShareLock#stop_sharing</target>
        </trans-unit>
        <trans-unit id="bc7362c2bebe148e6c7f3ac5220a2bce6ee0a3e3" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock#yield_shares</source>
          <target state="translated">Concurrency::ShareLock#yield_shares</target>
        </trans-unit>
        <trans-unit id="aced34b611be1c44853c15a7d06d59e85c310302" translate="yes" xml:space="preserve">
          <source>Concurrency::ShareLock::new</source>
          <target state="translated">Concurrency::ShareLock::new</target>
        </trans-unit>
        <trans-unit id="6c6af62780509fb61ba03b6cae73e8c04174f698" translate="yes" xml:space="preserve">
          <source>Concurrent Ruby uses a &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;, which it sometimes configures with an &lt;code&gt;executor&lt;/code&gt; option. Despite the name, it is unrelated.</source>
          <target state="translated">동시 루비는 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; 를 사용하는데 , 때때로 &lt;code&gt;executor&lt;/code&gt; 옵션으로 설정합니다. 이름에도 불구하고 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e6cb442db40fe855587112e1a7dd600e7bbcb81f" translate="yes" xml:space="preserve">
          <source>Concurrently adding an index is not supported in a transaction.</source>
          <target state="translated">트랜잭션에서는 인덱스를 동시에 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a50bc0e4af0ad985ce2b32492bcd42114c4ebdc4" translate="yes" xml:space="preserve">
          <source>Concurrently removing an index is not supported in a transaction.</source>
          <target state="translated">트랜잭션에서 인덱스 제거는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c5190a7a00f55892af7ba41853b300917c6476d" translate="yes" xml:space="preserve">
          <source>Conditional Callbacks</source>
          <target state="translated">조건부 콜백</target>
        </trans-unit>
        <trans-unit id="3bbc68b8860e74fb645c34536594671fbef097eb" translate="yes" xml:space="preserve">
          <source>Conditional GET support</source>
          <target state="translated">조건부 GET 지원</target>
        </trans-unit>
        <trans-unit id="1fcbeafa4d4eec8b007b4fcb8cb3a7a1f062e6f5" translate="yes" xml:space="preserve">
          <source>Conditional GET support.</source>
          <target state="translated">조건부 GET 지원.</target>
        </trans-unit>
        <trans-unit id="6039050cda1134f46e40e0c7b26713f5ac01e001" translate="yes" xml:space="preserve">
          <source>Conditional GETs are a feature of the HTTP specification that provide a way for web servers to tell browsers that the response to a GET request hasn't changed since the last request and can be safely pulled from the browser cache.</source>
          <target state="translated">조건부 GET은 웹 서버가 브라우저에게 GET 요청에 대한 응답이 마지막 요청 이후 변경되지 않았으며 브라우저 캐시에서 안전하게 가져올 수 있음을 브라우저에 알리는 방법을 제공하는 HTTP 사양의 기능입니다.</target>
        </trans-unit>
        <trans-unit id="7eb3554f75fdc0a556b31fe8b9afb54ea5632a5c" translate="yes" xml:space="preserve">
          <source>Conditional GETs: Rails handles conditional &lt;code&gt;GET&lt;/code&gt; (&lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt;) processing request headers and returning the correct response headers and status code. All you need to do is use the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/ConditionalGet.html#method-i-stale-3F&quot;&gt;&lt;code&gt;stale?&lt;/code&gt;&lt;/a&gt; check in your controller, and Rails will handle all of the HTTP details for you.</source>
          <target state="translated">조건부 GET : Rails는 조건부 &lt;code&gt;GET&lt;/code&gt; ( &lt;code&gt;ETag&lt;/code&gt; 및 &lt;code&gt;Last-Modified&lt;/code&gt; ) 처리 요청 헤더를 처리하고 올바른 응답 헤더 및 상태 코드를 반환합니다. &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/ConditionalGet.html#method-i-stale-3F&quot;&gt; &lt;code&gt;stale?&lt;/code&gt; &lt;/a&gt; 사용하기 만하면됩니다. 컨트롤러를 확인하면 Rails가 모든 HTTP 세부 정보를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="2a09e21b2127f24f41ca83576ff89b8971518f84" translate="yes" xml:space="preserve">
          <source>Conditional Validation</source>
          <target state="translated">조건부 검증</target>
        </trans-unit>
        <trans-unit id="c5b9427f023ab89ba8d81218cb7117f209dcec95" translate="yes" xml:space="preserve">
          <source>Conditional layouts</source>
          <target state="translated">조건부 레이아웃</target>
        </trans-unit>
        <trans-unit id="71b5c58b4fde156c2e787c2c9ee38b5aac06e33b" translate="yes" xml:space="preserve">
          <source>ConditionalGet</source>
          <target state="translated">ConditionalGet</target>
        </trans-unit>
        <trans-unit id="05210d0d388e26c0aa587e53d5051d1a188c090f" translate="yes" xml:space="preserve">
          <source>ConditionalGet#expires_in</source>
          <target state="translated">ConditionalGet#expires_in</target>
        </trans-unit>
        <trans-unit id="96d5966cfb930ab20e229e437b7af2d3784f77ee" translate="yes" xml:space="preserve">
          <source>ConditionalGet#expires_now</source>
          <target state="translated">ConditionalGet#expires_now</target>
        </trans-unit>
        <trans-unit id="f8a6e3006d9d9926ff0ca4545b72e88df5d97b69" translate="yes" xml:space="preserve">
          <source>ConditionalGet#fresh_when</source>
          <target state="translated">ConditionalGet#fresh_when</target>
        </trans-unit>
        <trans-unit id="f707375a55bdac65efd3b3fef2d895e60a0de81e" translate="yes" xml:space="preserve">
          <source>ConditionalGet#http_cache_forever</source>
          <target state="translated">ConditionalGet#http_cache_forever</target>
        </trans-unit>
        <trans-unit id="cedc4a8d44b9d6f332d50423d6c64b1dc94d2ea8" translate="yes" xml:space="preserve">
          <source>ConditionalGet#stale?</source>
          <target state="translated">ConditionalGet#stale?</target>
        </trans-unit>
        <trans-unit id="02c9c4f2922a7ce6316f6d34e87a411e683dbe3a" translate="yes" xml:space="preserve">
          <source>ConditionalGet::ClassMethods</source>
          <target state="translated">ConditionalGet::ClassMethods</target>
        </trans-unit>
        <trans-unit id="4b39f8888579387adf910b9cb13173fe024ecfd7" translate="yes" xml:space="preserve">
          <source>ConditionalGet::ClassMethods#etag</source>
          <target state="translated">ConditionalGet::ClassMethods#etag</target>
        </trans-unit>
        <trans-unit id="5506eb6161a07356d96e91770d25d5a0f22200ef" translate="yes" xml:space="preserve">
          <source>Conditions</source>
          <target state="translated">Conditions</target>
        </trans-unit>
        <trans-unit id="0f7a693785ee9dfa92811b7744c7bcab18418d86" translate="yes" xml:space="preserve">
          <source>Conditions can either be specified as a string, array, or hash representing the WHERE-part of an SQL statement. The array form is to be used when the condition input is tainted and requires sanitization. The string form can be used for statements that don't involve tainted data. The hash form works much like the array form, except only equality and range is possible. Examples:</source>
          <target state="translated">조건은 문자열, 배열 또는 SQL 문의 WHERE 부분을 나타내는 해시로 지정할 수 있습니다. 배열 입력은 조건 입력이 오염되어 소독이 필요할 때 사용됩니다. 문자열 형식은 오염 된 데이터가 포함되지 않은 명령문에 사용할 수 있습니다. 해시 양식은 등식 및 범위 만 가능하다는 점을 제외하고는 배열 양식과 매우 유사하게 작동합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="a4e77fa02ee4d7eef4123bbae308e1f9df3f6b90" translate="yes" xml:space="preserve">
          <source>Configurable</source>
          <target state="translated">Configurable</target>
        </trans-unit>
        <trans-unit id="381897d85daf9e5a93187cd50b611d1cc102fcff" translate="yes" xml:space="preserve">
          <source>Configurable#config</source>
          <target state="translated">Configurable#config</target>
        </trans-unit>
        <trans-unit id="82849c14d87dbab087efae6d0e8e4998d95dbaf7" translate="yes" xml:space="preserve">
          <source>Configurable::ClassMethods</source>
          <target state="translated">Configurable::ClassMethods</target>
        </trans-unit>
        <trans-unit id="ea2578dbc53c59a56dff1bb2b333e315f8fe76eb" translate="yes" xml:space="preserve">
          <source>Configurable::ClassMethods#config</source>
          <target state="translated">Configurable::ClassMethods#config</target>
        </trans-unit>
        <trans-unit id="31b66f9ea9822e7b5d4171e4afaabe063d409041" translate="yes" xml:space="preserve">
          <source>Configurable::ClassMethods#config_accessor</source>
          <target state="translated">Configurable::ClassMethods#config_accessor</target>
        </trans-unit>
        <trans-unit id="15cfc84f62243e04f7fde56f4173e4df901b5411" translate="yes" xml:space="preserve">
          <source>Configurable::ClassMethods#configure</source>
          <target state="translated">Configurable::ClassMethods#configure</target>
        </trans-unit>
        <trans-unit id="c83e1ba9bb074bcf2e88cda77fa8420477270a43" translate="yes" xml:space="preserve">
          <source>Configurable::Configuration</source>
          <target state="translated">Configurable::Configuration</target>
        </trans-unit>
        <trans-unit id="e4c0c41742d6e9d3bee38581064f1d086f87d8d7" translate="yes" xml:space="preserve">
          <source>Configurable::Configuration#compile_methods!</source>
          <target state="translated">Configurable::Configuration#compile_methods!</target>
        </trans-unit>
        <trans-unit id="7c5cca5f7d9abc06fba874e7e0301d08dd25bd82" translate="yes" xml:space="preserve">
          <source>Configurable::Configuration::compile_methods!</source>
          <target state="translated">Configurable::Configuration::compile_methods!</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="1c59e45c6c779b3a9c6c04f9e601a236b9ca9516" translate="yes" xml:space="preserve">
          <source>Configuration Gotchas</source>
          <target state="translated">구성 문제</target>
        </trans-unit>
        <trans-unit id="16010dafd1ff566fdbb3a79f7134e98885671101" translate="yes" xml:space="preserve">
          <source>Configuration examples (FileStore is the default):</source>
          <target state="translated">구성 예 (FileStore가 기본값 임) :</target>
        </trans-unit>
        <trans-unit id="8e4b4695c19fe3c52b4b749b9ded36f2d21877eb" translate="yes" xml:space="preserve">
          <source>Configuration files are not reloaded on each request, so you have to restart the server in order for their changes to take effect.</source>
          <target state="translated">각 요청마다 구성 파일이 다시로드되지 않으므로 변경 사항을 적용하려면 서버를 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="798f50403ea254e6b863f9ed332e3740db05e76a" translate="yes" xml:space="preserve">
          <source>Configuration files that are environment-specific will take precedence: in production, for example, the &lt;code&gt;config/storage/production.yml&lt;/code&gt; file (if existent) will take precedence over the &lt;code&gt;config/storage.yml&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac3e8bb4fcbe02014ca0b47b0b27ce455bc568c" translate="yes" xml:space="preserve">
          <source>Configuration hooks</source>
          <target state="translated">구성 후크</target>
        </trans-unit>
        <trans-unit id="c9eea73f6ae21430658a1a329b0e072820f57ab4" translate="yes" xml:space="preserve">
          <source>Configuration hooks can be called in the Engine class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd71e7cf99d3786b34682b36f453bea7c9a00353" translate="yes" xml:space="preserve">
          <source>Configuration hooks do not hook into any particular framework, but instead they run in context of the entire application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bead619d37f3d01e60bc869e94ff00947d918e90" translate="yes" xml:space="preserve">
          <source>Configuration of the WebSocket adapter and logger adapter have been moved from properties of &lt;code&gt;ActionCable&lt;/code&gt; to properties of &lt;code&gt;ActionCable.adapters&lt;/code&gt;. If you are configuring these adapters you will need to make these changes:</source>
          <target state="translated">웹 소켓 어댑터와 로거 어댑터의 구성의 속성에서 이동 된 &lt;code&gt;ActionCable&lt;/code&gt; 의 특성 &lt;code&gt;ActionCable.adapters&lt;/code&gt; . 이러한 어댑터를 구성하는 경우 다음과 같이 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4d40d6c54ed064cd5675e2b020be36dc38807c6" translate="yes" xml:space="preserve">
          <source>Configuration options</source>
          <target state="translated">구성 옵션</target>
        </trans-unit>
        <trans-unit id="b0118288acee61154f0463e4c80c307ff8b1e43b" translate="yes" xml:space="preserve">
          <source>Configuration options:</source>
          <target state="translated">구성 옵션 :</target>
        </trans-unit>
        <trans-unit id="fe8e768aa811ec772b873281ef8b49194561fa0b" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy</source>
          <target state="translated">Configuration::MiddlewareStackProxy</target>
        </trans-unit>
        <trans-unit id="a30852043de79525015d432867de4d9b3408fdb5" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#delete</source>
          <target state="translated">Configuration::MiddlewareStackProxy#delete</target>
        </trans-unit>
        <trans-unit id="a12bb6f2d8834ec7ee624c58b3fee1e1260e14ac" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#delete_operations</source>
          <target state="translated">Configuration::MiddlewareStackProxy#delete_operations</target>
        </trans-unit>
        <trans-unit id="02d47018e0ce76d7825a0105a0b8a642072fa1d1" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#insert</source>
          <target state="translated">Configuration::MiddlewareStackProxy#insert</target>
        </trans-unit>
        <trans-unit id="3a8b26a5bb3a738c9c428a0e56ed5ad8364c7246" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#insert_after</source>
          <target state="translated">Configuration::MiddlewareStackProxy#insert_after</target>
        </trans-unit>
        <trans-unit id="6a44d49984d2bb124d182e7f7644191c58a043d1" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#insert_before</source>
          <target state="translated">Configuration::MiddlewareStackProxy#insert_before</target>
        </trans-unit>
        <trans-unit id="d5be0675bdbcc82b606fc8d53ebe4d1b98130c33" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#operations</source>
          <target state="translated">Configuration::MiddlewareStackProxy#operations</target>
        </trans-unit>
        <trans-unit id="dc67df7b2fc17eac8798802e5a07ae7b2a5075c1" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#swap</source>
          <target state="translated">Configuration::MiddlewareStackProxy#swap</target>
        </trans-unit>
        <trans-unit id="f51cc336ed905aa66ddc03b55f325f4114c7adfa" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#unshift</source>
          <target state="translated">Configuration::MiddlewareStackProxy#unshift</target>
        </trans-unit>
        <trans-unit id="190454ae90b973ddd97b7969a9c7063704a6fc9e" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy#use</source>
          <target state="translated">Configuration::MiddlewareStackProxy#use</target>
        </trans-unit>
        <trans-unit id="a54cfb925ce44b6d3acc32ec8ced361ce83be327" translate="yes" xml:space="preserve">
          <source>Configuration::MiddlewareStackProxy::new</source>
          <target state="translated">Configuration::MiddlewareStackProxy::new</target>
        </trans-unit>
        <trans-unit id="a7cb77ee2b6e955920d97efa02a5da0bc9453464" translate="yes" xml:space="preserve">
          <source>Configure CORS on third-party storage services to allow direct upload requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2032feb6441cc30bbfe91c5bb407c7206b1787b2" translate="yes" xml:space="preserve">
          <source>Configure Exim to pipe inbound emails to &lt;code&gt;bin/rails action_mailbox:ingress:exim&lt;/code&gt;, providing the &lt;code&gt;URL&lt;/code&gt; of the relay ingress and the &lt;code&gt;INGRESS_PASSWORD&lt;/code&gt; you previously generated. If your application lived at &lt;code&gt;https://example.com&lt;/code&gt;, the full command would look like this:</source>
          <target state="translated">인바운드 이메일을 &lt;code&gt;bin/rails action_mailbox:ingress:exim&lt;/code&gt; 에 파이프하도록 Exim을 구성 하여 릴레이 수신 의 &lt;code&gt;URL&lt;/code&gt; 과 이전에 생성 한 &lt;code&gt;INGRESS_PASSWORD&lt;/code&gt; 를 제공하십시오 . 애플리케이션이 &lt;code&gt;https://example.com&lt;/code&gt; 에있는 경우 전체 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4e2c573393ee565caf65741db0dbb14b44c2df2a" translate="yes" xml:space="preserve">
          <source>Configure Framework Defaults</source>
          <target state="translated">프레임 워크 기본값 구성</target>
        </trans-unit>
        <trans-unit id="27e6be1f1a4898c25455f079e966bc7f5ea74932" translate="yes" xml:space="preserve">
          <source>Configure Qmail to pipe inbound emails to &lt;code&gt;bin/rails action_mailbox:ingress:qmail&lt;/code&gt;, providing the &lt;code&gt;URL&lt;/code&gt; of the relay ingress and the &lt;code&gt;INGRESS_PASSWORD&lt;/code&gt; you previously generated. If your application lived at &lt;code&gt;https://example.com&lt;/code&gt;, the full command would look like this:</source>
          <target state="translated">인바운드 이메일을 &lt;code&gt;bin/rails action_mailbox:ingress:qmail&lt;/code&gt; 로 파이프하도록 Qmail을 구성 하여 릴레이 수신 의 &lt;code&gt;URL&lt;/code&gt; 과 이전에 생성 한 &lt;code&gt;INGRESS_PASSWORD&lt;/code&gt; 를 제공하십시오 . 애플리케이션이 &lt;code&gt;https://example.com&lt;/code&gt; 에있는 경우 전체 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bcb9c2fb1caed82bdc6208b5454f1a0274281a88" translate="yes" xml:space="preserve">
          <source>Configure an Active Storage service by name from a set of configurations, typically loaded from a YAML file. The Active Storage engine uses this to set the global Active Storage service when the app boots.</source>
          <target state="translated">일반적으로 YAML 파일에서로드 된 일련의 구성에서 이름으로 Active Storage 서비스를 구성하십시오. Active Storage 엔진은이를 사용하여 앱이 부팅 될 때 전역 Active Storage 서비스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="44bb6f610af2c7700112ba7c93fb54eb266b24f7" translate="yes" xml:space="preserve">
          <source>Configure basic routing:</source>
          <target state="translated">기본 라우팅을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="836d5e79a1b8e5aa81a36bd18e7f124e86f2ad1e" translate="yes" xml:space="preserve">
          <source>Configure generators for &lt;code&gt;API&lt;/code&gt; only applications. It basically hides everything that is usually browser related, such as assets and session migration generators, and completely disable helpers and assets so generators such as scaffold won't create them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e29af6ab49c7f5637250bd437dad0c458f1dd7b" translate="yes" xml:space="preserve">
          <source>Configure generators for API only applications. It basically hides everything that is usually browser related, such as assets and session migration generators, and completely disable helpers and assets so generators such as scaffold won't create them.</source>
          <target state="translated">API 전용 애플리케이션에 대한 생성기를 구성하십시오. 기본적으로 자산 및 세션 마이그레이션 생성기와 같이 일반적으로 브라우저와 관련된 모든 것을 숨기고 스캐 폴드와 같은 생성기가 생성하지 않도록 도우미와 자산을 완전히 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="73349c955cca86f2ef82c2f80c09fc6fc63d93b6" translate="yes" xml:space="preserve">
          <source>Configure the I18n Module</source>
          <target state="translated">I18n 모듈 구성</target>
        </trans-unit>
        <trans-unit id="5ee676a3439c4f1b6fc69a16fb643da23bae3fcd" translate="yes" xml:space="preserve">
          <source>Configure the fixture model class</source>
          <target state="translated">조명기 모델 클래스 구성</target>
        </trans-unit>
        <trans-unit id="48f74c28e778e922e096190bc5ae3ce7e9d2f453" translate="yes" xml:space="preserve">
          <source>Configure the frequency by setting &lt;code&gt;reaping_frequency&lt;/code&gt; in your database yaml file (default 60 seconds).</source>
          <target state="translated">데이터베이스 yaml 파일에서 &lt;code&gt;reaping_frequency&lt;/code&gt; 를 설정하여 빈도를 구성 하십시오 (기본값 60 초).</target>
        </trans-unit>
        <trans-unit id="271b47600d24f04f2434edbc69b36ce9207a1add" translate="yes" xml:space="preserve">
          <source>Configure the generators to skip generating views, helpers, and assets when you generate a new resource.</source>
          <target state="translated">새 자원을 생성 할 때 생성기에서 뷰, 헬퍼 및 자산 생성을 건너 뛰도록 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="9b702c8c10dbdb2ab52e8a0277d0467cfa022acd" translate="yes" xml:space="preserve">
          <source>Configure the parameter parser for a given MIME type.</source>
          <target state="translated">지정된 MIME 유형에 대한 매개 변수 구문 분석기를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="20da90b3488178d59edfe1c508917543dea95da5" translate="yes" xml:space="preserve">
          <source>Configure your SMTP server to pipe inbound emails to the appropriate ingress command, providing the &lt;code&gt;URL&lt;/code&gt; of the relay ingress and the &lt;code&gt;INGRESS_PASSWORD&lt;/code&gt; you previously generated.</source>
          <target state="translated">인바운드 이메일을 적절한 수신 명령으로 파이프 하여 릴레이 수신 의 &lt;code&gt;URL&lt;/code&gt; 과 이전에 생성 한 &lt;code&gt;INGRESS_PASSWORD&lt;/code&gt; 를 제공하도록 SMTP 서버를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7dd70c76e9ae6edf06ab056f9252aff83094490d" translate="yes" xml:space="preserve">
          <source>Configure your application to start with a more limited set of middleware than normal. Specifically, it will not include any middleware primarily useful for browser applications (like cookies support) by default.</source>
          <target state="translated">일반보다 더 제한된 미들웨어 세트로 시작하도록 애플리케이션을 구성하십시오. 특히 기본적으로 쿠키 지원과 같은 브라우저 응용 프로그램에 주로 유용한 미들웨어는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="49c9a9e86fa5c57d7418f623932acb10f1130774" translate="yes" xml:space="preserve">
          <source>Configure your application's routes, database, and more. This is covered in more detail in &lt;a href=&quot;configuring&quot;&gt;Configuring Rails Applications&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램의 경로, 데이터베이스 등을 구성하십시오. 자세한 내용은 &lt;a href=&quot;configuring&quot;&gt;Rails 응용 프로그램 구성&lt;/a&gt; 에서 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="1a79b7a27415c545a5c82d5c867267bc08bbe61f" translate="yes" xml:space="preserve">
          <source>Configure your session store in an initializer:</source>
          <target state="translated">이니셜 라이저에서 세션 저장소를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="17b1146543a1fea75d7bbf3bb49f8c42b5a54bc1" translate="yes" xml:space="preserve">
          <source>Configuring Action Cable</source>
          <target state="translated">동작 케이블 구성</target>
        </trans-unit>
        <trans-unit id="16b7e673edca672cae7d564212e35ac6c389a022" translate="yes" xml:space="preserve">
          <source>Configuring Action Controller</source>
          <target state="translated">동작 컨트롤러 구성</target>
        </trans-unit>
        <trans-unit id="2f13a58d937460350d5fe36cd72b9a469f7b8456" translate="yes" xml:space="preserve">
          <source>Configuring Action Dispatch</source>
          <target state="translated">작업 발송 구성</target>
        </trans-unit>
        <trans-unit id="1e51eaf1fe9d58ee78a52c60fff85e6416bfab2f" translate="yes" xml:space="preserve">
          <source>Configuring Action Mailbox</source>
          <target state="translated">작업 사서함 구성</target>
        </trans-unit>
        <trans-unit id="1c8ca3c7cadcc7854cc27b1c24ce3553e78fd127" translate="yes" xml:space="preserve">
          <source>Configuring Action Mailer</source>
          <target state="translated">조치 메일러 구성</target>
        </trans-unit>
        <trans-unit id="7e1c7f599df686ed507f9b010ce016a3457cc5ce" translate="yes" xml:space="preserve">
          <source>Configuring Action View</source>
          <target state="translated">동작보기 구성</target>
        </trans-unit>
        <trans-unit id="0d2686cefb10ef446b6a30cc38252314d904863e" translate="yes" xml:space="preserve">
          <source>Configuring Active Job</source>
          <target state="translated">활성 작업 구성</target>
        </trans-unit>
        <trans-unit id="60b7db0e145783c410b6b1ce029e8e2f04ea4ce6" translate="yes" xml:space="preserve">
          <source>Configuring Active Model</source>
          <target state="translated">활성 모델 구성</target>
        </trans-unit>
        <trans-unit id="645c340c01981f08ae83fa0cd691d50687f84b17" translate="yes" xml:space="preserve">
          <source>Configuring Active Record</source>
          <target state="translated">활성 레코드 구성</target>
        </trans-unit>
        <trans-unit id="2b7f544a778b53a8b8b5cf40ca743ab800b88c42" translate="yes" xml:space="preserve">
          <source>Configuring Active Storage</source>
          <target state="translated">활성 저장소 구성</target>
        </trans-unit>
        <trans-unit id="f5b00db35b7c9095a9c5a37d652e2b1a717530f3" translate="yes" xml:space="preserve">
          <source>Configuring Active Support</source>
          <target state="translated">활성 지원 구성</target>
        </trans-unit>
        <trans-unit id="45d07cf865e8cb4537805f35a9053545d4daa31a" translate="yes" xml:space="preserve">
          <source>Configuring Assets</source>
          <target state="translated">자산 구성</target>
        </trans-unit>
        <trans-unit id="13f3eeab299b1543cc16104205a2b25d6423cfa3" translate="yes" xml:space="preserve">
          <source>Configuring Generators</source>
          <target state="translated">생성기 구성</target>
        </trans-unit>
        <trans-unit id="587ce6dd9505fc6be21182e1189d5c5062608d2d" translate="yes" xml:space="preserve">
          <source>Configuring Middleware</source>
          <target state="translated">미들웨어 구성</target>
        </trans-unit>
        <trans-unit id="530bc6078f3eacad96ee081ab48d4d2eb8d31f98" translate="yes" xml:space="preserve">
          <source>Configuring Middleware Stack</source>
          <target state="translated">미들웨어 스택 구성</target>
        </trans-unit>
        <trans-unit id="bfb5a28e77e9274325aa2c3ad78397985270889c" translate="yes" xml:space="preserve">
          <source>Configuring Rails Applications</source>
          <target state="translated">Rails 애플리케이션 구성</target>
        </trans-unit>
        <trans-unit id="857e641fa329b8c4bd89611e450c269b40ae61b3" translate="yes" xml:space="preserve">
          <source>Configuring Rails Components</source>
          <target state="translated">레일스 구성 요소 구성</target>
        </trans-unit>
        <trans-unit id="cd444a7e7aeaaf466458430083e98a96718c19a1" translate="yes" xml:space="preserve">
          <source>Configuring a Database</source>
          <target state="translated">데이터베이스 구성</target>
        </trans-unit>
        <trans-unit id="e48947da64d224ef0b1aa38d2d7be367f448d634" translate="yes" xml:space="preserve">
          <source>Configuring an Engine</source>
          <target state="translated">엔진 구성</target>
        </trans-unit>
        <trans-unit id="528201a4f392ab9d60a22332aa5e9dfdec34ce26" translate="yes" xml:space="preserve">
          <source>Configuring i18n</source>
          <target state="translated">i18n 구성</target>
        </trans-unit>
        <trans-unit id="0095896247ce95f47741bb628968a58fc5894541" translate="yes" xml:space="preserve">
          <source>Configuring the Model</source>
          <target state="translated">모델 구성</target>
        </trans-unit>
        <trans-unit id="2f671fa298ce594f81fc1b5ee1001817e34731cb" translate="yes" xml:space="preserve">
          <source>Configuring the Rails Router</source>
          <target state="translated">레일스 라우터 구성</target>
        </trans-unit>
        <trans-unit id="a9c19051a008911e7a8948da35767b5e04f6e9bc" translate="yes" xml:space="preserve">
          <source>Confining messages to a specific purpose</source>
          <target state="translated">특정 목적으로 메시지 제한</target>
        </trans-unit>
        <trans-unit id="a6a493740061ce3e8bb9699194176e7c38f41f16" translate="yes" xml:space="preserve">
          <source>Confirmation of password (using a &lt;code&gt;XXX_confirmation&lt;/code&gt; attribute)</source>
          <target state="translated">비밀번호 확인 ( &lt;code&gt;XXX_confirmation&lt;/code&gt; 속성 사용)</target>
        </trans-unit>
        <trans-unit id="d78bc6ae43f898fb6ef27f463591126e593cc149" translate="yes" xml:space="preserve">
          <source>Confirmations</source>
          <target state="translated">Confirmations</target>
        </trans-unit>
        <trans-unit id="a7011570d85452cd962f48f1295bd607bfa044c8" translate="yes" xml:space="preserve">
          <source>Congratulations, you can now create, show, list, update, and destroy articles.</source>
          <target state="translated">축하합니다. 이제 기사를 작성, 표시, 나열, 업데이트 및 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be954d3c8f1dec3e04aca1f78ecb3c31f8fa2f18" translate="yes" xml:space="preserve">
          <source>Connecting URLs to Code</source>
          <target state="translated">코드에 URL 연결</target>
        </trans-unit>
        <trans-unit id="49ca1c2e7797a76256ac015c96ae7d2a20fc34c1" translate="yes" xml:space="preserve">
          <source>Connection Preference</source>
          <target state="translated">연결 환경 설정</target>
        </trans-unit>
        <trans-unit id="49d2e1d2c30d75eb78fd0c93d358e214191c0975" translate="yes" xml:space="preserve">
          <source>Connection Test Case</source>
          <target state="translated">연결 테스트 사례</target>
        </trans-unit>
        <trans-unit id="5435f260b6fffd9068263ddb69584ac4c537c07c" translate="yes" xml:space="preserve">
          <source>Connection object</source>
          <target state="translated">연결 객체</target>
        </trans-unit>
        <trans-unit id="6e2b13dc4bd34b15686d2e6bf6ad5be4ece76921" translate="yes" xml:space="preserve">
          <source>Connection pool base class for managing Active Record database connections.</source>
          <target state="translated">Active Record 데이터베이스 연결 관리를위한 연결 풀 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="07c64150ce9cac92a0eba59b4ed348cd3c4bd307" translate="yes" xml:space="preserve">
          <source>Connection tests aim to check whether a connection's identifiers get assigned properly or that any improper connection requests are rejected. Here is an example:</source>
          <target state="translated">연결 테스트는 연결 식별자가 올바르게 할당되었는지 또는 부적절한 연결 요청이 거부되는지 확인하는 것을 목표로합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="044a8844be69a2ca09e2d495e6c153a00d2ae646" translate="yes" xml:space="preserve">
          <source>Connection to multiple databases in different models</source>
          <target state="translated">다른 모델의 여러 데이터베이스에 연결</target>
        </trans-unit>
        <trans-unit id="427f8cb3d924202e3eed8bcbafc1c8f083a81dbb" translate="yes" xml:space="preserve">
          <source>Connection::Authorization</source>
          <target state="translated">Connection::Authorization</target>
        </trans-unit>
        <trans-unit id="886ba2b81e31145124f4c3bfd613c8618cdbc7b9" translate="yes" xml:space="preserve">
          <source>Connection::Authorization#reject_unauthorized_connection</source>
          <target state="translated">Connection::Authorization#reject_unauthorized_connection</target>
        </trans-unit>
        <trans-unit id="50221374e8e4f0ced85f3d57a253fdae83288182" translate="yes" xml:space="preserve">
          <source>Connection::Base</source>
          <target state="translated">Connection::Base</target>
        </trans-unit>
        <trans-unit id="9b6dabfeb21f2bc95a6c7c19a87066ad3bba304e" translate="yes" xml:space="preserve">
          <source>Connection::Base#beat</source>
          <target state="translated">Connection::Base#beat</target>
        </trans-unit>
        <trans-unit id="922b7e650874ed0de32b5b43b8ec3ab0c69f4d75" translate="yes" xml:space="preserve">
          <source>Connection::Base#close</source>
          <target state="translated">Connection::Base#close</target>
        </trans-unit>
        <trans-unit id="260b39afa93b8a05307775f86253cf02615ab161" translate="yes" xml:space="preserve">
          <source>Connection::Base#cookies</source>
          <target state="translated">Connection::Base#cookies</target>
        </trans-unit>
        <trans-unit id="b3b192fce1f60f0ad7755135700811f496b3c637" translate="yes" xml:space="preserve">
          <source>Connection::Base#env</source>
          <target state="translated">Connection::Base#env</target>
        </trans-unit>
        <trans-unit id="6f12932bed84f62d2e34d2a5a64cef04795c47a6" translate="yes" xml:space="preserve">
          <source>Connection::Base#logger</source>
          <target state="translated">Connection::Base#logger</target>
        </trans-unit>
        <trans-unit id="d6b6197c87eec08ddf197ec9a6d2edb58ebf5588" translate="yes" xml:space="preserve">
          <source>Connection::Base#protocol</source>
          <target state="translated">Connection::Base#protocol</target>
        </trans-unit>
        <trans-unit id="aa11401d25c033f987398b58c02a4e6924b8d79a" translate="yes" xml:space="preserve">
          <source>Connection::Base#request</source>
          <target state="translated">Connection::Base#request</target>
        </trans-unit>
        <trans-unit id="25a1aa69f39b923e995324b9f83d1ddd7762965f" translate="yes" xml:space="preserve">
          <source>Connection::Base#send_async</source>
          <target state="translated">Connection::Base#send_async</target>
        </trans-unit>
        <trans-unit id="8ba60552a8eed316a10fb2055976150077041a3e" translate="yes" xml:space="preserve">
          <source>Connection::Base#server</source>
          <target state="translated">Connection::Base#server</target>
        </trans-unit>
        <trans-unit id="aab68beaa64685f8254c46d09d54c93e942f4c44" translate="yes" xml:space="preserve">
          <source>Connection::Base#statistics</source>
          <target state="translated">Connection::Base#statistics</target>
        </trans-unit>
        <trans-unit id="33b7c794c55604afff5eccd228a3bd04e31a5af0" translate="yes" xml:space="preserve">
          <source>Connection::Base#subscriptions</source>
          <target state="translated">Connection::Base#subscriptions</target>
        </trans-unit>
        <trans-unit id="2446cd26b1ce25c2d525bcd753a4f66509bb64e6" translate="yes" xml:space="preserve">
          <source>Connection::Base#worker_pool</source>
          <target state="translated">Connection::Base#worker_pool</target>
        </trans-unit>
        <trans-unit id="c7300a840075364e0d1bd32fed57c61e1d2585a4" translate="yes" xml:space="preserve">
          <source>Connection::Base::new</source>
          <target state="translated">Connection::Base::new</target>
        </trans-unit>
        <trans-unit id="8e4692f9460168ccfbe6f50b235cda6dbba58fa1" translate="yes" xml:space="preserve">
          <source>Connection::Identification</source>
          <target state="translated">Connection::Identification</target>
        </trans-unit>
        <trans-unit id="15ad9541eaccd78d924f202e6211627c75a88903" translate="yes" xml:space="preserve">
          <source>Connection::Identification#connection_identifier</source>
          <target state="translated">Connection::Identification#connection_identifier</target>
        </trans-unit>
        <trans-unit id="c59fddbfd9577cdf73ae7e6719bea2efabd70e18" translate="yes" xml:space="preserve">
          <source>Connection::Identification::ClassMethods</source>
          <target state="translated">Connection::Identification::ClassMethods</target>
        </trans-unit>
        <trans-unit id="38641fef11f5e573029810a09a75d176b408c31a" translate="yes" xml:space="preserve">
          <source>Connection::Identification::ClassMethods#identified_by</source>
          <target state="translated">Connection::Identification::ClassMethods#identified_by</target>
        </trans-unit>
        <trans-unit id="881f7f2d4a43924cfc01891b8954a8020c89e40a" translate="yes" xml:space="preserve">
          <source>Connection::InternalChannel</source>
          <target state="translated">Connection::InternalChannel</target>
        </trans-unit>
        <trans-unit id="6e368c25c030f5b416c9fa19ac2388f437240a92" translate="yes" xml:space="preserve">
          <source>Connection::TaggedLoggerProxy</source>
          <target state="translated">Connection::TaggedLoggerProxy</target>
        </trans-unit>
        <trans-unit id="d376336a70a419d6e92a5accbd0d7920756c720f" translate="yes" xml:space="preserve">
          <source>Connection::TaggedLoggerProxy#add_tags</source>
          <target state="translated">Connection::TaggedLoggerProxy#add_tags</target>
        </trans-unit>
        <trans-unit id="9d494db5d0644c7b619d7686a38fca4a6a0c986d" translate="yes" xml:space="preserve">
          <source>Connection::TaggedLoggerProxy#log</source>
          <target state="translated">Connection::TaggedLoggerProxy#log</target>
        </trans-unit>
        <trans-unit id="0e487ee29cac3703c5e956a1127f50f0d866c6cc" translate="yes" xml:space="preserve">
          <source>Connection::TaggedLoggerProxy#tag</source>
          <target state="translated">Connection::TaggedLoggerProxy#tag</target>
        </trans-unit>
        <trans-unit id="bab23a00b09e73d372febd29e7e3ef51cf181567" translate="yes" xml:space="preserve">
          <source>Connection::TaggedLoggerProxy#tags</source>
          <target state="translated">Connection::TaggedLoggerProxy#tags</target>
        </trans-unit>
        <trans-unit id="65d731d3657d8c4985a6cfc3e9e3845ff1fdf2ec" translate="yes" xml:space="preserve">
          <source>Connection::TaggedLoggerProxy::new</source>
          <target state="translated">Connection::TaggedLoggerProxy::new</target>
        </trans-unit>
        <trans-unit id="2808880951dce17daf4a7dd14c1c6514bbd1da00" translate="yes" xml:space="preserve">
          <source>ConnectionNotEstablished</source>
          <target state="translated">ConnectionNotEstablished</target>
        </trans-unit>
        <trans-unit id="8f3509b64e0ea82c53329cb49a7756bd1ced3566" translate="yes" xml:space="preserve">
          <source>Connections</source>
          <target state="translated">Connections</target>
        </trans-unit>
        <trans-unit id="7ab867a5a554e2c53f2a3e5aa19aa7d14d7630ec" translate="yes" xml:space="preserve">
          <source>Connections are instances of &lt;code&gt;ApplicationCable::Connection&lt;/code&gt;, which extends &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Connection/Base.html&quot;&gt;&lt;code&gt;ActionCable::Connection::Base&lt;/code&gt;&lt;/a&gt;. In &lt;code&gt;ApplicationCable::Connection&lt;/code&gt;, you authorize the incoming connection, and proceed to establish it if the user can be identified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a03ecd9f4aab5d8417a6a3d60872fbb663a7b8d" translate="yes" xml:space="preserve">
          <source>Connections are instances of &lt;code&gt;ApplicationCable::Connection&lt;/code&gt;. In this class, you authorize the incoming connection, and proceed to establish it if the user can be identified.</source>
          <target state="translated">연결은 &lt;code&gt;ApplicationCable::Connection&lt;/code&gt; 인스턴스입니다 . 이 클래스에서는 들어오는 연결을 승인하고 사용자를 식별 할 수있는 경우 계속 연결합니다.</target>
        </trans-unit>
        <trans-unit id="ddd5a69259e0d511a7b2acbd108b915d4a26a1aa" translate="yes" xml:space="preserve">
          <source>Connections are usually created through &lt;a href=&quot;connectionhandling#method-i-establish_connection&quot;&gt;ActiveRecord::Base.establish_connection&lt;/a&gt; and retrieved by ActiveRecord::Base.connection. All classes inheriting from &lt;a href=&quot;base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt; will use this connection. But you can also set a class-specific connection. For example, if Course is an &lt;a href=&quot;base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;, but resides in a different database, you can just say &lt;code&gt;Course.establish_connection&lt;/code&gt; and Course and all of its subclasses will use this connection instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52131b558052215fd1919e56325743c9ff1969bc" translate="yes" xml:space="preserve">
          <source>Connections are usually created through &lt;a href=&quot;connectionhandling#method-i-establish_connection&quot;&gt;ActiveRecord::Base.establish_connection&lt;/a&gt; and retrieved by ActiveRecord::Base.connection. All classes inheriting from &lt;a href=&quot;base&quot;&gt;ActiveRecord::Base&lt;/a&gt; will use this connection. But you can also set a class-specific connection. For example, if Course is an &lt;a href=&quot;base&quot;&gt;ActiveRecord::Base&lt;/a&gt;, but resides in a different database, you can just say &lt;code&gt;Course.establish_connection&lt;/code&gt; and Course and all of its subclasses will use this connection instead.</source>
          <target state="translated">연결은 일반적으로 &lt;a href=&quot;connectionhandling#method-i-establish_connection&quot;&gt;ActiveRecord :: Base.establish_connection을&lt;/a&gt; 통해 작성 되며 ActiveRecord :: Base.connection에 의해 검색됩니다. &lt;a href=&quot;base&quot;&gt;ActiveRecord :: Base&lt;/a&gt; 에서 상속 된 모든 클래스 는이 연결을 사용합니다. 그러나 클래스 별 연결을 설정할 수도 있습니다. 예를 들어 Course가 &lt;a href=&quot;base&quot;&gt;ActiveRecord :: Base&lt;/a&gt; 이지만 다른 데이터베이스에있는 경우 &lt;code&gt;Course.establish_connection&lt;/code&gt; 및 Course 라고 말하면 모든 하위 클래스가 대신이 연결을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5489b2b0ddb74434edbd9e2267bf6aea52cc87d8" translate="yes" xml:space="preserve">
          <source>Connections can be obtained and used from a connection pool in several ways:</source>
          <target state="translated">연결 풀에서 여러 가지 방법으로 연결을 확보하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63c7edd9df4ba4d34cec519274cbd117709d6599" translate="yes" xml:space="preserve">
          <source>Connections in the pool are actually &lt;a href=&quot;abstractadapter&quot;&gt;&lt;code&gt;AbstractAdapter&lt;/code&gt;&lt;/a&gt; objects (or objects compatible with AbstractAdapter's interface).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bc68c6ed76b82edb7a92af5911dda920be8e0c" translate="yes" xml:space="preserve">
          <source>Connections in the pool are actually &lt;a href=&quot;abstractadapter&quot;&gt;AbstractAdapter&lt;/a&gt; objects (or objects compatible with AbstractAdapter's interface).</source>
          <target state="translated">풀의 연결은 실제로 &lt;a href=&quot;abstractadapter&quot;&gt;AbstractAdapter&lt;/a&gt; 객체 (또는 AbstractAdapter의 인터페이스와 호환되는 객체)입니다.</target>
        </trans-unit>
        <trans-unit id="01da2e8a148a6ef4ba794dba3cb66a1ad54f2ca7" translate="yes" xml:space="preserve">
          <source>Connects a model to the databases specified. The &lt;code&gt;database&lt;/code&gt; keyword takes a hash consisting of a &lt;code&gt;role&lt;/code&gt; and a &lt;code&gt;database_key&lt;/code&gt;.</source>
          <target state="translated">지정된 데이터베이스에 모델을 연결합니다. &lt;code&gt;database&lt;/code&gt; 키워드는 구성된 해시 소요 &lt;code&gt;role&lt;/code&gt; 과 &lt;code&gt;database_key&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="38485426a35502682fed2835dc240c1cec079f93" translate="yes" xml:space="preserve">
          <source>Connects a role and/or shard to the provided connection names. Optionally `prevent_writes` can be passed to block writes on a connection. `reading` will automatically set `prevent_writes` to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6b9068bacb799ef2841b8318272f8520eb956a" translate="yes" xml:space="preserve">
          <source>Connects to a database or role (ex writing, reading, or another custom role) for the duration of the block.</source>
          <target state="translated">차단 기간 동안 데이터베이스 또는 역할 (예 : 쓰기, 읽기 또는 다른 사용자 지정 역할)에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="a73c68d412ad6f77daf87d1e5b1420b95cf0e18a" translate="yes" xml:space="preserve">
          <source>Connects to a role (ex writing, reading or a custom role) and/or shard for the duration of the block. At the end of the block the connection will be returned to the original role / shard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61075f1e1840ff0ca91d0e3e63ff7ffb4a09235" translate="yes" xml:space="preserve">
          <source>Consider a Book model where no duplicate ISBNs make sense, but if any row has an existing id, or is not unique by another unique index, &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; is raised.</source>
          <target state="translated">중복 ISBN이 의미가없는 책 모델을 고려하지만 행에 기존 ID가 있거나 다른 고유 색인으로 고유하지 않은 경우 &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8c4fa8e1199cad383fbd7e10cdb078f0df6a101b" translate="yes" xml:space="preserve">
          <source>Consider a Member model that has one Avatar:</source>
          <target state="translated">아바타가 하나 인 멤버 모델을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="12aea57e6370b70a5c61bda9874d66594fb27dd2" translate="yes" xml:space="preserve">
          <source>Consider a Person class which returns a &lt;em&gt;single&lt;/em&gt; Address from the &lt;code&gt;address&lt;/code&gt; reader method and responds to the &lt;code&gt;address_attributes=&lt;/code&gt; writer method:</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 판독기 메소드 에서 &lt;em&gt;단일&lt;/em&gt; Address 를 리턴 하고 &lt;code&gt;address_attributes=&lt;/code&gt; writer 메소드에 응답 하는 Person 클래스를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca8601611baa0f051ed1c44afc731a8819ceed28" translate="yes" xml:space="preserve">
          <source>Consider a Person class which returns an &lt;em&gt;array&lt;/em&gt; of Project instances from the &lt;code&gt;projects&lt;/code&gt; reader method and responds to the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method:</source>
          <target state="translated">&lt;code&gt;projects&lt;/code&gt; 리더 메소드 에서 Project 인스턴스 &lt;em&gt;배열&lt;/em&gt; 을 리턴 하고 &lt;code&gt;projects_attributes=&lt;/code&gt; writer 메소드에 응답 하는 Person 클래스를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d42188703a81f2cc7091c3c5a32857218045ff7" translate="yes" xml:space="preserve">
          <source>Consider a User model with a validation for the name attribute like this:</source>
          <target state="translated">다음과 같이 이름 속성에 대한 유효성 검증이있는 사용자 모델을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="139dcb5f086b3b75bf0af30064d616e6f226a033" translate="yes" xml:space="preserve">
          <source>Consider a member that has a number of posts:</source>
          <target state="translated">게시물이 여러 개인 회원을 생각해보십시오.</target>
        </trans-unit>
        <trans-unit id="fc931b1d2b74030cff14fc9095960a284c9cf284" translate="yes" xml:space="preserve">
          <source>Consider for example the following code that form of post:</source>
          <target state="translated">예를 들어 포스트 형태의 다음 코드를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="dc1c3a1ab4ae2fa1636f2232690d82f6bba4358e" translate="yes" xml:space="preserve">
          <source>Consider the following code, which finds 10 books and prints their authors' last_name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4d51495d6cb1ac0f4775a099a7a3a569e011a1" translate="yes" xml:space="preserve">
          <source>Consider the following code, which finds 10 clients and prints their postcodes:</source>
          <target state="translated">10 개의 클라이언트를 찾아서 우편 번호를 인쇄하는 다음 코드를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="766471a9cd8131d4daae239f6c480112dba16e03" translate="yes" xml:space="preserve">
          <source>Consider the following default behaviour:</source>
          <target state="translated">다음과 같은 기본 동작을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="bca3d91fcc884c768b617ccee09104d2e72f87c2" translate="yes" xml:space="preserve">
          <source>Consider the following example. An application has a &lt;code&gt;Product&lt;/code&gt; model with an instance method that looks up the product's price on a competing website. The data returned by this method would be perfect for low-level caching:</source>
          <target state="translated">다음 예를 고려하십시오. 응용 프로그램에는 경쟁 웹 사이트에서 제품 가격을 조회하는 인스턴스 메소드 가있는 &lt;code&gt;Product&lt;/code&gt; 모델이 있습니다. 이 방법으로 반환 된 데이터는 저수준 캐싱에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="4377daa782becb003231981a185ebfde4620dfac" translate="yes" xml:space="preserve">
          <source>Consider the following loop for names:</source>
          <target state="translated">이름에 대해 다음 루프를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="d2ddc04d8900463924c5b530cd4913613ee41131" translate="yes" xml:space="preserve">
          <source>Consider the following loop using the class above:</source>
          <target state="translated">위의 클래스를 사용하여 다음 루프를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="7beb75b8f47f35f91f3ac21cbe47793c29def428" translate="yes" xml:space="preserve">
          <source>Consider these actions to see the difference:</source>
          <target state="translated">차이점을 보려면 다음 조치를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="217488a5112ddec2790ff4bb43c7d00a567906f2" translate="yes" xml:space="preserve">
          <source>Consider this assignment in &lt;code&gt;config/initializers/set_auth_service.rb&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;config/initializers/set_auth_service.rb&lt;/code&gt; 에서이 지정을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="128a5d8d61023185a2d16a8a3528e8da23f07145" translate="yes" xml:space="preserve">
          <source>Consider this controller:</source>
          <target state="translated">이 컨트롤러를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="c9e0405f798329a3dc5397fc4fd9e45cbf2a4c01" translate="yes" xml:space="preserve">
          <source>Consider this example that does not use parameterization:</source>
          <target state="translated">매개 변수화를 사용하지 않는이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="033736248c19ade58af1791c33c1013a3afdc4ba" translate="yes" xml:space="preserve">
          <source>Consider, for example, the previous example where the &lt;code&gt;PictureFile&lt;/code&gt; model needs to delete a file after the corresponding record is destroyed. If anything raises an exception after the &lt;code&gt;after_destroy&lt;/code&gt; callback is called and the transaction rolls back, the file will have been deleted and the model will be left in an inconsistent state. For example, suppose that &lt;code&gt;picture_file_2&lt;/code&gt; in the code below is not valid and the &lt;code&gt;save!&lt;/code&gt; method raises an error.</source>
          <target state="translated">예를 들어, 해당 레코드가 삭제 된 후 &lt;code&gt;PictureFile&lt;/code&gt; 모델이 파일을 삭제해야하는 이전 예를 고려하십시오 . &lt;code&gt;after_destroy&lt;/code&gt; 콜백이 호출되고 트랜잭션이 롤백 된 후 예외가 발생 하면 파일이 삭제되고 모델이 일관되지 않은 상태로 유지됩니다. 예를 들어, 아래 코드의 &lt;code&gt;picture_file_2&lt;/code&gt; 가 유효하지 않고 &lt;code&gt;save!&lt;/code&gt; 한다고 가정 하십시오 ! 메소드가 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9f3341d3710b74c1bace9f7d9d287f157faea4f4" translate="yes" xml:space="preserve">
          <source>Console</source>
          <target state="translated">Console</target>
        </trans-unit>
        <trans-unit id="9e485223bd72f93da838f247c1026a96282aa19d" translate="yes" xml:space="preserve">
          <source>ConsoleMethods</source>
          <target state="translated">ConsoleMethods</target>
        </trans-unit>
        <trans-unit id="0857ccc30cfea78a60933f9f36dc59c1f5da5ec2" translate="yes" xml:space="preserve">
          <source>ConsoleMethods#app</source>
          <target state="translated">ConsoleMethods#app</target>
        </trans-unit>
        <trans-unit id="e31d36339bd128a1d5af600addcadc67dfd73605" translate="yes" xml:space="preserve">
          <source>ConsoleMethods#controller</source>
          <target state="translated">ConsoleMethods#controller</target>
        </trans-unit>
        <trans-unit id="dbf266f886e846e58f0da87e74caaabc44e2eccf" translate="yes" xml:space="preserve">
          <source>ConsoleMethods#helper</source>
          <target state="translated">ConsoleMethods#helper</target>
        </trans-unit>
        <trans-unit id="6a2f11e9ca02c817cd5e4f528d043ff7e533a899" translate="yes" xml:space="preserve">
          <source>ConsoleMethods#new_session</source>
          <target state="translated">ConsoleMethods#new_session</target>
        </trans-unit>
        <trans-unit id="11c9b28bc4c60e5e8a9058cbeb7b52be07df4064" translate="yes" xml:space="preserve">
          <source>ConsoleMethods#reload!</source>
          <target state="translated">ConsoleMethods#reload!</target>
        </trans-unit>
        <trans-unit id="2888a4885fe71c62a5937b38770ee363968fd6a1" translate="yes" xml:space="preserve">
          <source>Constant Reloading</source>
          <target state="translated">지속적인 재 장전</target>
        </trans-unit>
        <trans-unit id="f1ccbb0ff0a9e923077ac7ae619a66cc61cd6ec2" translate="yes" xml:space="preserve">
          <source>Constant assignment has a special rule to make that happen: if the object being assigned is an anonymous class or module, Ruby sets the object's name to the name of the constant.</source>
          <target state="translated">상수 할당에는 특별한 규칙이 있습니다. 할당되는 객체가 익명 클래스 또는 모듈 인 경우 Ruby는 객체 이름을 상수 이름으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="dac47e6b917b1ae326c4e8200baa0340d687ea4c" translate="yes" xml:space="preserve">
          <source>Constant autoloading is thread-safe in &lt;code&gt;zeitwerk&lt;/code&gt; mode. For example, you can now autoload in multi-threaded scripts executed by the &lt;code&gt;runner&lt;/code&gt; command.</source>
          <target state="translated">지속적인 자동 로딩은 &lt;code&gt;zeitwerk&lt;/code&gt; 모드 에서 스레드 안전 합니다. 예를 들어, 이제 &lt;code&gt;runner&lt;/code&gt; 명령으로 실행되는 다중 스레드 스크립트로 자동로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ea6748d25205c4a63f3720204ecf652da7ef644" translate="yes" xml:space="preserve">
          <source>Constant autoloading is triggered on demand and therefore code that uses a certain constant may have it already defined or may trigger an autoload. That depends on the execution path and it may vary between runs.</source>
          <target state="translated">상수 자동 로딩은 요청시 트리거되므로 특정 상수를 사용하는 코드에 이미 정의되어 있거나 자동로드를 트리거 할 수 있습니다. 실행 경로에 따라 다르며 실행마다 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="028d604a89e799c925161de1e5fd3d5f52f909f7" translate="yes" xml:space="preserve">
          <source>Constant name resolution by &lt;code&gt;constantize&lt;/code&gt; starts always at the top-level &lt;code&gt;Object&lt;/code&gt; even if there is no leading &quot;::&quot;.</source>
          <target state="translated">에 의해 상수 이름 확인 &lt;code&gt;constantize&lt;/code&gt; 는 최상위 항상 시작 &lt;code&gt;Object&lt;/code&gt; 없음이 선도적 인 경우에도 &quot;::&quot;.</target>
        </trans-unit>
        <trans-unit id="b4b74cbd4f47e63a921c931d367aee9814149685" translate="yes" xml:space="preserve">
          <source>Constant time string comparison, for fixed length strings.</source>
          <target state="translated">고정 길이 문자열에 대한 상수 시간 문자열 비교</target>
        </trans-unit>
        <trans-unit id="a22dec7dced9b391de2207a4f8512f5217ae61f6" translate="yes" xml:space="preserve">
          <source>Constant time string comparison, for variable length strings.</source>
          <target state="translated">가변 길이 문자열에 대한 상수 시간 문자열 비교</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="c98410c44668cca1b915bfde155b9d0baa050440" translate="yes" xml:space="preserve">
          <source>Constants Refresher</source>
          <target state="translated">상수 리프레셔</target>
        </trans-unit>
        <trans-unit id="ae1caf3b6d10c73ba575e1ad40e9c1865d08aaf5" translate="yes" xml:space="preserve">
          <source>Constants are Stored in Modules</source>
          <target state="translated">상수는 모듈에 저장됩니다</target>
        </trans-unit>
        <trans-unit id="e4ee103254c8dddfe848a41524cca0b9f0e47720" translate="yes" xml:space="preserve">
          <source>Constants belong to modules in a very literal sense. Classes and modules have a constant table; think of it as a hash table.</source>
          <target state="translated">상수는 매우 문자적인 의미에서 모듈에 속합니다. 클래스와 모듈에는 상수 테이블이 있습니다. 이것을 해시 테이블이라고 생각하십시오.</target>
        </trans-unit>
        <trans-unit id="3dd97efcbdf46182f528b1a49694eed0bb2280c1" translate="yes" xml:space="preserve">
          <source>Constants in deeper places only executed at runtime, like regular method bodies, are also fine because the file defining them will have been eager loaded while booting.</source>
          <target state="translated">일반 메소드 본문과 같이 런타임시에만 실행되는 더 깊은 위치의 상수도 정의하는 파일이 부팅하는 동안 열성적으로로드되기 때문에 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3bfccde6b1d4d6f0ffae48822a6958241872798d" translate="yes" xml:space="preserve">
          <source>Constrains parameters with a hash of regular expressions or an object that responds to &lt;code&gt;matches?&lt;/code&gt;. In addition, constraints other than path can also be specified with any object that responds to &lt;code&gt;===&lt;/code&gt; (e.g. &lt;a href=&quot;../../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8064fab7d46799fa4200f630bfcd571a89f83" translate="yes" xml:space="preserve">
          <source>Constrains parameters with a hash of regular expressions or an object that responds to &lt;code&gt;matches?&lt;/code&gt;. In addition, constraints other than path can also be specified with any object that responds to &lt;code&gt;===&lt;/code&gt; (eg. &lt;a href=&quot;../../../string&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../../array&quot;&gt;Array&lt;/a&gt;, &lt;a href=&quot;../../../range&quot;&gt;Range&lt;/a&gt;, etc.).</source>
          <target state="translated">정규 표현식의 해시 또는 &lt;code&gt;matches?&lt;/code&gt; 하는 객체로 매개 변수를 제한 합니까? . 또한 path 이외의 제약 조건은 &lt;code&gt;===&lt;/code&gt; 에 응답하는 객체 (예 : &lt;a href=&quot;../../../string&quot;&gt;String&lt;/a&gt; , &lt;a href=&quot;../../../array&quot;&gt;Array&lt;/a&gt; , &lt;a href=&quot;../../../range&quot;&gt;Range&lt;/a&gt; 등) 로 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8da33384772884e2ba02f0013f2feff81092ac03" translate="yes" xml:space="preserve">
          <source>Constraint options:</source>
          <target state="translated">구속 조건 옵션 :</target>
        </trans-unit>
        <trans-unit id="866715060ecaa906088e3bd97de98fa827ef4fa6" translate="yes" xml:space="preserve">
          <source>Constraints can include the 'ignorecase' and 'extended syntax' regular expression modifiers:</source>
          <target state="translated">제약 조건에는 '무시'및 '확장 구문'정규 표현식 수정자가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36c49842ad8cb67e2290cc7201def0af5107c7bb" translate="yes" xml:space="preserve">
          <source>Constructs a call to a named RESTful route for the given record and returns the resulting URL string. For example:</source>
          <target state="translated">주어진 레코드에 대해 명명 된 RESTful 라우트에 대한 호출을 구성하고 결과 URL 문자열을 리턴합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1cbfc6444307bdced1ddfce1201d17b08a1f926" translate="yes" xml:space="preserve">
          <source>Consult the Rails Testing Guide for more.</source>
          <target state="translated">자세한 내용은 Rails Testing Guide를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="04718d86ca29b62fefeebf0811dce6a907fe913f" translate="yes" xml:space="preserve">
          <source>Consumer Configuration</source>
          <target state="translated">소비자 구성</target>
        </trans-unit>
        <trans-unit id="ba38ef712b4b653daa9d48962f0ed8698d56649f" translate="yes" xml:space="preserve">
          <source>Consumers</source>
          <target state="translated">Consumers</target>
        </trans-unit>
        <trans-unit id="e2f5bf05892cb808f3445fabf962aa43b957f61e" translate="yes" xml:space="preserve">
          <source>Consumers require an instance of the connection on their side. This can be established using the following JavaScript, which is generated by default by Rails:</source>
          <target state="translated">소비자는 측면에 연결 인스턴스가 필요합니다. 이는 Rails가 기본적으로 생성하는 다음 JavaScript를 사용하여 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb457525a8786505613bfbb061238e832c97e0ed" translate="yes" xml:space="preserve">
          <source>Consumers subscribe to channels, acting as &lt;em&gt;subscribers&lt;/em&gt;. Their connection is called a &lt;em&gt;subscription&lt;/em&gt;. Produced messages are then routed to these channel subscriptions based on an identifier sent by the cable consumer.</source>
          <target state="translated">소비자는 구독자 역할을하는 채널을 &lt;em&gt;구독&lt;/em&gt; 합니다. 그들의 연결을 &lt;em&gt;구독&lt;/em&gt; 이라고합니다 . 그런 다음 생성 된 메시지는 케이블 소비자가 보낸 식별자를 기반으로 이러한 채널 구독으로 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="c943851111c7ec41fc83fcca1a1e8372e4decc0d" translate="yes" xml:space="preserve">
          <source>Consumers subscribe to channels, acting as &lt;em&gt;subscribers&lt;/em&gt;. Their connection is called a &lt;em&gt;subscription&lt;/em&gt;. Produced messages are then routed to these channel subscriptions based on an identifier sent by the channel consumer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8d27d22c157a86dde8a75dbe9ab01ecc2d297c" translate="yes" xml:space="preserve">
          <source>Contain the missing key as the value of the &lt;code&gt;title&lt;/code&gt; attribute</source>
          <target state="translated">누락 된 키를 &lt;code&gt;title&lt;/code&gt; 속성 값으로 포함</target>
        </trans-unit>
        <trans-unit id="066dae8504c11290c88ab6de4c63d86843c3aff8" translate="yes" xml:space="preserve">
          <source>Contains configuration for your application's routes, database, and more. This is covered in more detail in &lt;a href=&quot;configuring&quot;&gt;Configuring Rails Applications&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc741a9b564d91b9eb4abffe6f28550ffda38e9" translate="yes" xml:space="preserve">
          <source>Contains helpers that help you test passage of time.</source>
          <target state="translated">시간의 흐름을 테스트하는 데 도움이되는 도우미가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="43e381d32ce0609675d5b08b76eff4ca606d7264" translate="yes" xml:space="preserve">
          <source>Contains static files and compiled assets. When your app is running, this directory will be exposed as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79df4957d186cc044981e433b48a598ce7ed133" translate="yes" xml:space="preserve">
          <source>Contains the &lt;code&gt;rails&lt;/code&gt; script that starts your app and can contain other scripts you use to set up, update, deploy, or run your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acdcb7bda5cfc98169d8fc9223f2ee6c38eb732" translate="yes" xml:space="preserve">
          <source>Contains the controllers, models, views, helpers, mailers, channels, jobs, and assets for your application. You'll focus on this folder for the remainder of this guide.</source>
          <target state="translated">애플리케이션의 컨트롤러, 모델,보기, 헬퍼, 메일러, 채널, 작업 및 자산을 포함합니다. 이 가이드의 나머지 부분에서는이 폴더에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="83122c02bfc4fcbe8911a5f9effcc2c0fca5ca1b" translate="yes" xml:space="preserve">
          <source>Contains the database configuration - as is typically stored in config/database.yml - as an &lt;a href=&quot;databaseconfigurations&quot;&gt;&lt;code&gt;ActiveRecord::DatabaseConfigurations&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3dcd216cc00a7476651ddb2b29ca981f75fb5c" translate="yes" xml:space="preserve">
          <source>Contains the database configuration - as is typically stored in config/database.yml - as an &lt;a href=&quot;databaseconfigurations&quot;&gt;ActiveRecord::DatabaseConfigurations&lt;/a&gt; object.</source>
          <target state="translated">일반적으로 config / database.yml에 저장된 데이터베이스 구성을 &lt;a href=&quot;databaseconfigurations&quot;&gt;ActiveRecord :: DatabaseConfigurations&lt;/a&gt; 객체로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="ff639904a5285583d993ef346510913e3ecfc150" translate="yes" xml:space="preserve">
          <source>Contains the rails script that starts your app and can contain other scripts you use to setup, update, deploy, or run your application.</source>
          <target state="translated">앱을 시작하는 rails 스크립트를 포함하며 응용 프로그램을 설정, 업데이트, 배포 또는 실행하는 데 사용하는 다른 스크립트를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5872230b81267702a9e3c9bf541ec836c7c88ad9" translate="yes" xml:space="preserve">
          <source>Contains your current database schema, as well as the database migrations.</source>
          <target state="translated">현재 데이터베이스 스키마와 데이터베이스 마이그레이션이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b290eee7ee9eca877a7e01bf49e3ec181e017e" translate="yes" xml:space="preserve">
          <source>Content Security Policy</source>
          <target state="translated">콘텐츠 보안 정책</target>
        </trans-unit>
        <trans-unit id="ea834d02d6daa0d4616d230b761d9189425049c0" translate="yes" xml:space="preserve">
          <source>Content can also be captured with a block, which is useful in templates:</source>
          <target state="translated">블록으로 컨텐츠를 캡처 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2dd976638cfae3090048d8a34d4fb986f6b2149d" translate="yes" xml:space="preserve">
          <source>Content type of response.</source>
          <target state="translated">응답의 컨텐츠 유형.</target>
        </trans-unit>
        <trans-unit id="a8a9036c91aaf09a61a23701a286fd65e6480bec" translate="yes" xml:space="preserve">
          <source>ContentTypeHeader</source>
          <target state="translated">ContentTypeHeader</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="92bf9261e70a94653405d4fa8491dc89dfa7338c" translate="yes" xml:space="preserve">
          <source>Context can optionally be supplied to define which callbacks to test against (the context is defined on the validations using &lt;code&gt;:on&lt;/code&gt;).</source>
          <target state="translated">테스트 할 콜백을 정의하기 위해 컨텍스트를 선택적으로 제공 할 수 있습니다 (컨텍스트는 &lt;code&gt;:on&lt;/code&gt; 을 사용하여 유효성 검증에 정의 됨 ).</target>
        </trans-unit>
        <trans-unit id="03f4f46634b287936ff5f1c041c8adb670d6ecdb" translate="yes" xml:space="preserve">
          <source>Context#output_buffer</source>
          <target state="translated">Context#output_buffer</target>
        </trans-unit>
        <trans-unit id="fe3d47f888a8b8232f5953d5989823f6785f967b" translate="yes" xml:space="preserve">
          <source>Context#view_flow</source>
          <target state="translated">Context#view_flow</target>
        </trans-unit>
        <trans-unit id="fffe77241f61f44b1448b6efd8879e7d1d166589" translate="yes" xml:space="preserve">
          <source>Continue reading for more information on the built-in service adapters (e.g. &lt;code&gt;Disk&lt;/code&gt; and &lt;code&gt;S3&lt;/code&gt;) and the configuration they require.</source>
          <target state="translated">내장 서비스 어댑터 (예 : &lt;code&gt;Disk&lt;/code&gt; 및 &lt;code&gt;S3&lt;/code&gt; ) 및 필요한 구성 에 대한 자세한 정보는 계속 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="8ae0853020dc2e273628c6a41aeb149f2dc3b83f" translate="yes" xml:space="preserve">
          <source>Contributing to Rails I18n</source>
          <target state="translated">Rails I18n에 기여</target>
        </trans-unit>
        <trans-unit id="02aea6592a8dde2101b6a6b03a4ac48eb00e2ce2" translate="yes" xml:space="preserve">
          <source>Contributing to Ruby on Rails</source>
          <target state="translated">Ruby on Rails에 기여</target>
        </trans-unit>
        <trans-unit id="aa11023ff599c3d83ad640baf41699091d114d5b" translate="yes" xml:space="preserve">
          <source>Contributions</source>
          <target state="translated">Contributions</target>
        </trans-unit>
        <trans-unit id="7eb0be0f55e145b4ff3e18b493029af9bf0cdf2e" translate="yes" xml:space="preserve">
          <source>Controller Namespaces and Routing</source>
          <target state="translated">컨트롤러 네임 스페이스 및 라우팅</target>
        </trans-unit>
        <trans-unit id="40d5c950e2ecfd3766a5348f6ccefe3bcdd9cf59" translate="yes" xml:space="preserve">
          <source>Controller Naming Convention</source>
          <target state="translated">컨트롤러 명명 규칙</target>
        </trans-unit>
        <trans-unit id="95be1a041acb03867c0735abdb7f66abc816b820" translate="yes" xml:space="preserve">
          <source>Controller Specific Assets</source>
          <target state="translated">컨트롤러 특정 자산</target>
        </trans-unit>
        <trans-unit id="55dd4d1a9e92c1ccf19035ab5be1f6890fcd4350" translate="yes" xml:space="preserve">
          <source>Controller actions are protected from Cross-Site Request Forgery (CSRF) attacks by including a token in the rendered HTML for your application. This token is stored as a random string in the session, to which an attacker does not have access. When a request reaches your application, Rails verifies the received token with the token in the session. All requests are checked except GET requests as these should be idempotent. Keep in mind that all session-oriented requests are CSRF protected by default, including JavaScript and HTML requests.</source>
          <target state="translated">컨트롤러 작업은 응용 프로그램의 렌더링 된 HTML에 토큰을 포함시켜 CSRF (Cross-Site Request Forgery) 공격으로부터 보호됩니다. 이 토큰은 세션에서 공격자가 액세스 할 수없는 임의의 문자열로 저장됩니다. 요청이 애플리케이션에 도달하면 Rails는 수신 된 토큰을 세션의 토큰으로 확인합니다. GET 요청을 제외한 모든 요청은 dem 등원이어야하므로 확인됩니다. JavaScript 및 HTML 요청을 포함하여 모든 세션 지향 요청은 기본적으로 CSRF로 보호됩니다.</target>
        </trans-unit>
        <trans-unit id="a29dd00691ccc0daafd72f05274bedbc252045b7" translate="yes" xml:space="preserve">
          <source>Controller instance variables can be accessed by the view. That means we can reference &lt;code&gt;@articles&lt;/code&gt; in &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;. Let's open that file, and replace its contents with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f65436cbd283cbf2a872da79b5f3f46ab80b8e2" translate="yes" xml:space="preserve">
          <source>Controller is automatically inferred</source>
          <target state="translated">컨트롤러가 자동으로 추론됩니다</target>
        </trans-unit>
        <trans-unit id="bacbe92b0fcf26acddb6398c91c3fce5b6627b6a" translate="yes" xml:space="preserve">
          <source>Controller#Action</source>
          <target state="translated">Controller#Action</target>
        </trans-unit>
        <trans-unit id="472abe603a3df036c16d07b811585214ac5a8ca5" translate="yes" xml:space="preserve">
          <source>Controller-level validations can be tempting to use, but often become unwieldy and difficult to test and maintain. Whenever possible, it's a good idea to keep your controllers skinny, as it will make your application a pleasure to work with in the long run.</source>
          <target state="translated">컨트롤러 수준의 유효성 검사는 사용하기가 쉽지만 종종 다루기 어렵고 테스트 및 유지 관리가 어려워집니다. 가능할 때마다 컨트롤러를 스키니 상태로 유지하는 것이 좋습니다. 장기적으로는 응용 프로그램을 즐겁게 사용할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="fd28161568c4e8e181bf8b34d2eb64190067fd07" translate="yes" xml:space="preserve">
          <source>Controllers</source>
          <target state="translated">Controllers</target>
        </trans-unit>
        <trans-unit id="8a7f4c494ee5ba4170a79b00b7abe10f044a2f84" translate="yes" xml:space="preserve">
          <source>Controllers need to be aware of any redefinition of &lt;code&gt;to_param&lt;/code&gt; because when a request like that comes in &quot;357-john-smith&quot; is the value of &lt;code&gt;params[:id]&lt;/code&gt;.</source>
          <target state="translated">&quot;357-john-smith&quot;와 같은 요청이 &lt;code&gt;params[:id]&lt;/code&gt; 의 값이기 때문에 컨트롤러는 &lt;code&gt;to_param&lt;/code&gt; 의 재정의에 대해 알아야합니다 .</target>
        </trans-unit>
        <trans-unit id="e870db4ebd878f9765da851db1e38ea33ed36855" translate="yes" xml:space="preserve">
          <source>Controllers passed in using the &lt;code&gt;:controller&lt;/code&gt; option will retain their namespace unless it is an absolute one.</source>
          <target state="translated">&lt;code&gt;:controller&lt;/code&gt; 옵션 을 사용하여 전달 된 컨트롤러 는 절대 네임 스페이스가 아닌 한 네임 스페이스를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="b994077e25321f6e3fa196dffc90ed810e60592e" translate="yes" xml:space="preserve">
          <source>Controlling Association Scope</source>
          <target state="translated">연결 범위 제어</target>
        </trans-unit>
        <trans-unit id="4d4e96c0806bb33d3d76c8e537520cabfb09193d" translate="yes" xml:space="preserve">
          <source>Controlling Caching</source>
          <target state="translated">캐싱 제어</target>
        </trans-unit>
        <trans-unit id="5aef32d7c804a76c23f11a3784834865ae247665" translate="yes" xml:space="preserve">
          <source>Controlling association scope</source>
          <target state="translated">연결 범위 제어</target>
        </trans-unit>
        <trans-unit id="64523d58f5f4352d5b29f271f23a0e87568fd23d" translate="yes" xml:space="preserve">
          <source>Controlling caching</source>
          <target state="translated">캐싱 제어</target>
        </trans-unit>
        <trans-unit id="82d07bbbdd795cb000b8932ec3bb7a2e87d0e46e" translate="yes" xml:space="preserve">
          <source>Controlling verbosity</source>
          <target state="translated">자세한 제어</target>
        </trans-unit>
        <trans-unit id="aba639dc303aee7d3f16a436ba744a7faff31017" translate="yes" xml:space="preserve">
          <source>Controls what happens to the associated object when its owner is destroyed:</source>
          <target state="translated">소유자가 소멸 될 때 연관된 오브젝트에 발생하는 상황을 제어합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
