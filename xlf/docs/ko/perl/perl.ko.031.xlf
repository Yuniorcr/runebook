<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="5a78e74b3a77143d8c71cfa329a6e542084b340e" translate="yes" xml:space="preserve">
          <source>Defaults to STDOUT.</source>
          <target state="translated">기본값은 STDOUT입니다.</target>
        </trans-unit>
        <trans-unit id="a238dcad55848cd42cd0ed2c0201eceef53c02cf" translate="yes" xml:space="preserve">
          <source>Defaults to false, set to true to enable the described behaviour.</source>
          <target state="translated">설명 된 동작을 가능하게하려면 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="ecd31712dbbddfd1fe36a725d021309cb2a8b7de" translate="yes" xml:space="preserve">
          <source>Defaults to false, so it will remove null arguments. Set to true to allow them.</source>
          <target state="translated">기본값은 false이므로 null 인수를 제거합니다. 허용하려면 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="83771af0d9e990cfd4209b40879c5dd720b86a4b" translate="yes" xml:space="preserve">
          <source>Defaults to false.</source>
          <target state="translated">기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="6dad3c257030adc921b32d1f197189b8ec627938" translate="yes" xml:space="preserve">
          <source>Defaults to off. Normally forking inside a subtest will actually fork the subtest, resulting in 2 final subtest events. This parameter will turn off that behavior, only the original process/thread will return a final subtest event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d301270448347decdf5cb69be9723a550b7cb5" translate="yes" xml:space="preserve">
          <source>Defaults to on.</source>
          <target state="translated">기본값은 on입니다.</target>
        </trans-unit>
        <trans-unit id="2b3470c82dabd8d59a7a8d6175578fc38bf7d623" translate="yes" xml:space="preserve">
          <source>Defaults to true. Turn this off at your own risk.</source>
          <target state="translated">기본값은 true입니다. 자신의 책임하에 이것을 끄십시오.</target>
        </trans-unit>
        <trans-unit id="19d3228f23c29d1d70307e4e28b3e13d0ba13b19" translate="yes" xml:space="preserve">
          <source>Deferencing Method Call</source>
          <target state="translated">디 퍼런 싱 메소드 호출</target>
        </trans-unit>
        <trans-unit id="87a045f3d65fd182c7b238c413050e4d1b888897" translate="yes" xml:space="preserve">
          <source>Deferred Signals (Safe Signals)</source>
          <target state="translated">지연된 신호 (안전 신호)</target>
        </trans-unit>
        <trans-unit id="f67da11f1ea091fa4522255eade09d8d8a4672ae" translate="yes" xml:space="preserve">
          <source>Deferred Writing</source>
          <target state="translated">연기 된 글쓰기</target>
        </trans-unit>
        <trans-unit id="2015aea6e3599a4de6f58c3bf9fd92bcc72ebaa8" translate="yes" xml:space="preserve">
          <source>Deferred write; only applicable to files opened for shared access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16543b2bfaf8c9f85b87e700f4cb4c04d588365" translate="yes" xml:space="preserve">
          <source>Deferred writes are cached in memory up to the limit specified by the &lt;code&gt;dw_size&lt;/code&gt; option (see above). If the deferred-write buffer is full and you try to write still more deferred data, the buffer will be flushed. All buffered data will be written immediately, the buffer will be emptied, and the now-empty space will be used for future deferred writes.</source>
          <target state="translated">지연된 쓰기는 &lt;code&gt;dw_size&lt;/code&gt; 옵션에 의해 지정된 한계까지 메모리에 캐시됩니다 (위 참조). 지연 쓰기 버퍼가 가득 차서 더 지연된 데이터를 쓰려고하면 버퍼가 플러시됩니다. 버퍼링 된 모든 데이터가 즉시 기록되고 버퍼가 비워지며, 현재 비어있는 공간이 향후 지연된 쓰기에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b09e3bbab301107bd10474a2528bb3ad4a99662e" translate="yes" xml:space="preserve">
          <source>Define DL_FUNCS and DL_VARS and write the *.exp files.</source>
          <target state="translated">DL_FUNCS 및 DL_VARS를 정의하고 * .exp 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="12da81497a7167741d2b29f763f0e078260a1250" translate="yes" xml:space="preserve">
          <source>Define OPTAG as a symbolic name for OPSET. Optag names always start with a colon &lt;code&gt;:&lt;/code&gt; .</source>
          <target state="translated">OPTAG를 OPSET의 기호 이름으로 정의하십시오. 옵텍 이름은 항상 콜론으로 시작 &lt;code&gt;:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4597d1c3a266480856b08e6de20cb969a5158d6" translate="yes" xml:space="preserve">
          <source>Define OPTAG as a symbolic name for OPSET. Optag names always start with a colon &lt;code&gt;:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b358b3f5282189ce82f741fa330a8ab3125c3533" translate="yes" xml:space="preserve">
          <source>Define TO_UNIX to convert OS2 linefeeds to Unix style.</source>
          <target state="translated">OS2 줄 바꿈을 Unix 스타일로 변환하려면 TO_UNIX를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="25a3e54cd9dd2ac97b6cf9da4fc775b0fd09bf4f" translate="yes" xml:space="preserve">
          <source>Define a command alias, like</source>
          <target state="translated">다음과 같이 명령 별명을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="5393ccb5285b32c0372bdc2ca13e7ffc258abe0f" translate="yes" xml:space="preserve">
          <source>Define a macro. &lt;code&gt;Net::Netrc&lt;/code&gt; only parses this field to be compatible with</source>
          <target state="translated">매크로를 정의하십시오. &lt;code&gt;Net::Netrc&lt;/code&gt; 는이 필드 만 호환 가능하도록 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="8395adae464b235b6ab8086a0e2c25cc741cb067" translate="yes" xml:space="preserve">
          <source>Define a named capture group. Equivalent to &lt;code&gt;(?&amp;lt;&lt;i&gt;NAME&lt;/i&gt;&amp;gt;&lt;i&gt;pattern&lt;/i&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7d921c7430791d35aa71dd9a7604bd56ac3756" translate="yes" xml:space="preserve">
          <source>Define a named capture group. Equivalent to &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt;.</source>
          <target state="translated">명명 된 캡처 그룹을 정의하십시오. 상당 &lt;code&gt;(?&amp;lt;NAME&amp;gt;pattern)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51cc1c473eb56c40ad07bc0030ce03dcaeba9ef9" translate="yes" xml:space="preserve">
          <source>Define at compile-time your own custom character properties for use in regexes.</source>
          <target state="translated">정규식에 사용할 고유 한 사용자 정의 문자 속성을 컴파일 타임에 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="a5e319203d5fc86ef244e3b22f31ca80388261db" translate="yes" xml:space="preserve">
          <source>Define this symbol if you want not-threaded faster perl.</source>
          <target state="translated">스레드되지 않은 더 빠른 perl을 원하면이 기호를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="727c054b5e2c2aca2655853479e8b8681bd2f78c" translate="yes" xml:space="preserve">
          <source>DefineDosDevice</source>
          <target state="translated">DefineDosDevice</target>
        </trans-unit>
        <trans-unit id="c1c3deee474aee7462f10a61e2c3a4d5cc1314dd" translate="yes" xml:space="preserve">
          <source>DefineDosDeviceW</source>
          <target state="translated">DefineDosDeviceW</target>
        </trans-unit>
        <trans-unit id="47e540fd76e635df75335773557a724d22e221f7" translate="yes" xml:space="preserve">
          <source>Defined Falsehood. (&lt;code&gt;PL_sv_no&lt;/code&gt; ) The value is not needed (and ignored).</source>
          <target state="translated">정의 된 거짓. ( &lt;code&gt;PL_sv_no&lt;/code&gt; ) 값이 필요하지 않으며 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="b3d6281cc7c62824136d151f1453eec89b0fc573" translate="yes" xml:space="preserve">
          <source>Defined Falsehood. (&lt;code&gt;PL_sv_no&lt;/code&gt;) The value is not needed (and ignored).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a264576fd62b5306a0590e9ebcaaeb8b9ebd00c2" translate="yes" xml:space="preserve">
          <source>Defined as a Make macro, it is invoked with file and directory arguments; &lt;code&gt;autosplit&lt;/code&gt; will split the specified file into the specified directory and delete obsolete &lt;code&gt;.al&lt;/code&gt; files, after checking first that the module does use the AutoLoader, and ensuring that the module is not already currently split in its current form (the modtime test).</source>
          <target state="translated">Make 매크로로 정의되며 파일 및 디렉토리 인수로 호출됩니다. &lt;code&gt;autosplit&lt;/code&gt; 지정된 디렉토리에 지정된 파일을 분할하고 오래된 삭제합니다 &lt;code&gt;.al&lt;/code&gt; 모듈이 자동로드를 사용한다는 것을 처음으로 확인하고, 모듈은 현재 이미 현재의 형태합니다 (modtime 시험)에 분할하지했는지 확인한 후, 파일을.</target>
        </trans-unit>
        <trans-unit id="0f9705fadf1dfeea4d0b965d304ecf0e1287b32a" translate="yes" xml:space="preserve">
          <source>Defined if $procselfexe is symlink to the absolute pathname of the executing program.</source>
          <target state="translated">$ procselfexe가 실행중인 프로그램의 절대 경로 이름에 심볼릭 링크되는 경우 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="e5216d7555d787b7d47a25b9b3958cd7e8056fef" translate="yes" xml:space="preserve">
          <source>Defined if the test should immediately exit, the value is the exit code and may be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df751a148221e657237a264ca9bfcbc240163953" translate="yes" xml:space="preserve">
          <source>Defined if we're dealing with the &lt;code&gt;GNU&lt;/code&gt; C Library.</source>
          <target state="translated">&lt;code&gt;GNU&lt;/code&gt; C 라이브러리를 다루는 경우 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="487af9998b90c5fd5fb9d7386051e0f2dc3d4e56" translate="yes" xml:space="preserve">
          <source>Defined in RFC 2277, this is for tagging text (which must include English text, and might/should include text in other appropriate languages) that is emitted in a context where language-negotiation wasn't possible -- in SMTP mail failure messages, for example.</source>
          <target state="translated">RFC 2277에 정의 된이 언어는 언어 협상이 불가능한 상황 (SMTP 메일 실패 메시지, 예를 들어.</target>
        </trans-unit>
        <trans-unit id="556105abd123d9bd31309dd7124c6423aec4ac99" translate="yes" xml:space="preserve">
          <source>Defines EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH. See &lt;a href=&quot;ExtUtils::Liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0094836cd417237e53e36d38b6bb157c23bb8dd" translate="yes" xml:space="preserve">
          <source>Defines EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH. See &lt;a href=&quot;liblist&quot;&gt;ExtUtils::Liblist&lt;/a&gt; for details.</source>
          <target state="translated">EXTRALIBS, LDLOADLIBS, BSLOADLIBS, LD_RUN_PATH를 정의합니다. 자세한 내용은 &lt;a href=&quot;liblist&quot;&gt;ExtUtils :: Liblist&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="54d5e1ace8616b0824e4e69deda9fb5d35c9ab98" translate="yes" xml:space="preserve">
          <source>Defines a check in target for RCS.</source>
          <target state="translated">RCS의 체크인 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="fe64ed45d43654228ab2f263b3250cb6d237ffdb" translate="yes" xml:space="preserve">
          <source>Defines a couple of constants in the Makefile that are imported from %Config.</source>
          <target state="translated">% Config에서 가져온 Makefile에 몇 가지 상수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="45640d4e061562862c8b269f9919db4c555b95a5" translate="yes" xml:space="preserve">
          <source>Defines a lot of macros for distribution support.</source>
          <target state="translated">배포 지원을위한 많은 매크로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="867a33cb7f9100f43ef78833d1dd593ef2e25839" translate="yes" xml:space="preserve">
          <source>Defines a new DOS device, overrides the current definition of a DOS device, or deletes a definition of a DOS device. Like most routines, returns a true value if successful and a false value [and sets &lt;code&gt;$^E&lt;/code&gt; and &lt;code&gt;regLastError()&lt;/code&gt;] on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2c384608aa9da85fcd183aa27b7be131f7d130" translate="yes" xml:space="preserve">
          <source>Defines a simple perl call that runs autosplit. May be deprecated by pm_to_blib soon.</source>
          <target state="translated">자동 분할을 실행하는 간단한 perl 호출을 정의합니다. pm_to_blib에서 곧 지원 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f1b350e0e67e0413f358f35911f68c6865314e4" translate="yes" xml:space="preserve">
          <source>Defines a target that produces the distribution in the scratch directory, and runs 'perl Makefile.PL; make ;make test' in that subdirectory.</source>
          <target state="translated">스크래치 디렉토리에서 분배를 생성하고 'perl Makefile.PL; 그 하위 디렉토리에 make make make.</target>
        </trans-unit>
        <trans-unit id="302537770d292c74e66370b599a3b03ffe01a51a" translate="yes" xml:space="preserve">
          <source>Defines at least these macros.</source>
          <target state="translated">최소한 이러한 매크로를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6b99cfd58fae6b3dae8c7123af0773072b8fe5e5" translate="yes" xml:space="preserve">
          <source>Defines how to produce the *.a (or equivalent) files.</source>
          <target state="translated">* .a (또는 동등한 파일)를 생성하는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dc26efd3c32adf7d1de84003c339188a38e358f8" translate="yes" xml:space="preserve">
          <source>Defines how to produce the *.so (or equivalent) files.</source>
          <target state="translated">* .so (또는 동등한 파일)를 생성하는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8695ac2968551bde31876b3d67b9ced4a12a9549" translate="yes" xml:space="preserve">
          <source>Defines how to rewrite the Makefile.</source>
          <target state="translated">Makefile을 다시 쓰는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="aa14513b66442c9d98bfa0a3967dff7cec318a3f" translate="yes" xml:space="preserve">
          <source>Defines how to run the archive utility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8d903021e288194f11201bbf4d889537e55aee" translate="yes" xml:space="preserve">
          <source>Defines how to run the archive utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c6065d98e3206f28470f013ce533e0e15ea743" translate="yes" xml:space="preserve">
          <source>Defines suffix rules to go from XS to object files directly. This is only intended for broken make implementations.</source>
          <target state="translated">XS에서 객체 파일로 직접 이동할 접미사 규칙을 정의합니다. 이것은 깨진 make 구현만을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6fe1a6c36f7b3f5038b472ceb38a921d8b1ca80b" translate="yes" xml:space="preserve">
          <source>Defines suffix rules to go from XS to object files directly. This was originally only intended for broken make implementations, but is now necessary for per-XS file under &lt;code&gt;XSMULTI&lt;/code&gt;, since each XS file might have an individual &lt;code&gt;$(VERSION)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1f92a570809211d4c32fad26b719cbb9cb90b8" translate="yes" xml:space="preserve">
          <source>Defines target that copies all files in the hash PM to their destination and autosplits them. See &lt;a href=&quot;ExtUtils::Install#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot; in ExtUtils::Install&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b41acc6b49a6388409ba10f2258e522cda4bba" translate="yes" xml:space="preserve">
          <source>Defines target that copies all files in the hash PM to their destination and autosplits them. See &lt;a href=&quot;install#DESCRIPTION&quot;&gt;DESCRIPTION in ExtUtils::Install&lt;/a&gt;</source>
          <target state="translated">해시 PM의 모든 파일을 대상으로 복사하고 자동 분할하는 대상을 정의합니다. &lt;a href=&quot;install#DESCRIPTION&quot;&gt;ExtUtils :: Install의 DESCRIPTION을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4adac1897b3589686f6012b335a376dba9440a99" translate="yes" xml:space="preserve">
          <source>Defines target that creates a PPD (Perl Package Description) file for a binary distribution.</source>
          <target state="translated">이진 배포를위한 PPD (Perl Package Description) 파일을 생성하는 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="81215a51ffc47aa71de599db8f3ad3d93520e3be" translate="yes" xml:space="preserve">
          <source>Defines targets and routines to translate the pods into manpages and put them into the INST_* directories.</source>
          <target state="translated">포드를 맨 페이지로 변환하고 INST_ * 디렉토리에 배치 할 대상 및 루틴을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a27612024b8b930142c07dfc2a483eb40f35b6c8" translate="yes" xml:space="preserve">
          <source>Defines targets for bootstrap files.</source>
          <target state="translated">부트 스트랩 파일의 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d67b6bc334f7365a22e55924832c3099c1799069" translate="yes" xml:space="preserve">
          <source>Defines targets to make and to install EXE_FILES.</source>
          <target state="translated">EXE_FILES를 만들고 설치할 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a39e083fd927c6ae8fb97333fcad3f2b452cafcb" translate="yes" xml:space="preserve">
          <source>Defines targets to process subdirectories.</source>
          <target state="translated">하위 디렉토리를 처리 할 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="4b99ef7da9945c228db1380016cfa3962ddce9f3" translate="yes" xml:space="preserve">
          <source>Defines targets to run *.PL files.</source>
          <target state="translated">* .PL 파일을 실행할 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d9ad31fa070099a4fc5216a15ac2552cb8720903" translate="yes" xml:space="preserve">
          <source>Defines the DESTDIR and DEST* variables paralleling the INSTALL*.</source>
          <target state="translated">INSTALL *와 평행 한 DESTDIR 및 DEST * 변수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ba94224c3086851c054895958309c5f4d0716300" translate="yes" xml:space="preserve">
          <source>Defines the PERLDLL symbol if we are configured for static building since all code destined for the perl5xx.dll must be compiled with the PERLDLL symbol defined.</source>
          <target state="translated">perl5xx.dll로 향하는 모든 코드가 정의 된 PERLDLL 기호로 컴파일되어야하므로 정적 빌드 용으로 구성된 경우 PERLDLL 기호를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e8fef87bd74d9d4f90d787908362dc30b0d77629" translate="yes" xml:space="preserve">
          <source>Defines the clean target.</source>
          <target state="translated">정리 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="44c298f8aa784474d919a3c44fea66470e8f2e7f" translate="yes" xml:space="preserve">
          <source>Defines the compression level used by zlib. The value should either be a number between 0 and 9 (0 means no compression and 9 is maximum compression), or one of the symbolic constants defined below.</source>
          <target state="translated">zlib에서 사용하는 압축 수준을 정의합니다. 값은 0과 9 사이의 숫자 (0은 압축이 없음을 의미하고 9는 최대 압축을 의미 함) 또는 아래 정의 된 기호 상수 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f42bdaa318d7d2b3aed95081e60d514ae57c0a40" translate="yes" xml:space="preserve">
          <source>Defines the compression level. Valid values are 0 through 9, &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt; , &lt;code&gt;Z_BEST_SPEED&lt;/code&gt; , &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt; , and &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; .</source>
          <target state="translated">압축 수준을 정의합니다. 유효한 값은 0-9, &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt; , &lt;code&gt;Z_BEST_SPEED&lt;/code&gt; , &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt; 및 &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d2ff9947388ab0d376267f08f9bc97c18c40c0c7" translate="yes" xml:space="preserve">
          <source>Defines the compression level. Valid values are 0 through 9, &lt;code&gt;Z_NO_COMPRESSION&lt;/code&gt;, &lt;code&gt;Z_BEST_SPEED&lt;/code&gt;, &lt;code&gt;Z_BEST_COMPRESSION&lt;/code&gt;, and &lt;code&gt;Z_DEFAULT_COMPRESSION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40143f5226bb902295ca1dda0de7dc4d4309dfae" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is &lt;code&gt;Z_DEFLATED&lt;/code&gt; .</source>
          <target state="translated">압축 방법을 정의합니다. 현재 유일하게 유효한 값 (및 기본값)은 &lt;code&gt;Z_DEFLATED&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f584dfc56442ac5a945501f77359fb2855048784" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is &lt;code&gt;Z_DEFLATED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa8bcc66f1718ba796d4871baf848aff3c710f" translate="yes" xml:space="preserve">
          <source>Defines the compression method. The only valid value at present (and the default) is Z_DEFLATED.</source>
          <target state="translated">압축 방법을 정의합니다. 현재 유일하게 유효한 값 (및 기본값)은 Z_DEFLATED입니다.</target>
        </trans-unit>
        <trans-unit id="e5f8cd0a2961419147b82d106eae039801beefea" translate="yes" xml:space="preserve">
          <source>Defines the dependency from all *.h files that come with the perl distribution.</source>
          <target state="translated">perl 분배와 함께 제공되는 모든 * .h 파일의 종속성을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="740df2004d6262227a64962e7679f8e429418ecc" translate="yes" xml:space="preserve">
          <source>Defines the dynamic target.</source>
          <target state="translated">동적 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="5f6aea77294d02ec6fd46c657ab20cc6e5da28ce" translate="yes" xml:space="preserve">
          <source>Defines the install target.</source>
          <target state="translated">설치 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="476771d611b7ad6cde3ad6c65766d9fa62c6985b" translate="yes" xml:space="preserve">
          <source>Defines the linkext target which in turn defines the LINKTYPE.</source>
          <target state="translated">LINKTYPE을 정의하는 linkext 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="edc3b76378cfbd91d0d30a2255a1316aaa066a6e" translate="yes" xml:space="preserve">
          <source>Defines the macros for the &lt;code&gt;dynamic_lib&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bca9ceee2fa0c0c2202b5cce5e6315839954c5" translate="yes" xml:space="preserve">
          <source>Defines the realclean target.</source>
          <target state="translated">realclean 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bac8777a6d220e0396ec5890429b6a97cd45096d" translate="yes" xml:space="preserve">
          <source>Defines the recipes for the &lt;code&gt;dynamic_lib&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df17c3d5afb96da78ecfbc3b608f8fded1e0252a" translate="yes" xml:space="preserve">
          <source>Defines the recipes for the &lt;code&gt;static_lib&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187b77c07dcdb58c6c97c87717ccce9d654bf4c9" translate="yes" xml:space="preserve">
          <source>Defines the scratch directory target that will hold the distribution before tar-ing (or shar-ing).</source>
          <target state="translated">taring (또는 공유) 전에 분배를 보유 할 스크래치 디렉토리 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="7111ead71f2d3431a6510a936ce620bc4b1e5ad4" translate="yes" xml:space="preserve">
          <source>Defines the static target.</source>
          <target state="translated">정적 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="c63068c7e0232b8f723215365b2896a0e197617e" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; , &lt;code&gt;Z_RLE&lt;/code&gt; , &lt;code&gt;Z_FIXED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">압축을 조정하는 데 사용되는 전략을 정의합니다. 유효한 값은 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; , &lt;code&gt;Z_RLE&lt;/code&gt; , &lt;code&gt;Z_FIXED&lt;/code&gt; 및 &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f3b8848d647f32e943342a5efdd76d9b487a63a" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">압축을 조정하는 데 사용되는 전략을 정의합니다. 유효한 값은 &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; 및 &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9bb3b119645104a0a80d624fe014b8c2f08c1ae" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;, &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53197f2d448d72aa5276dd4ad84b79f6eb6a7f85" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. The valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;, &lt;code&gt;Z_FILTERED&lt;/code&gt;, &lt;code&gt;Z_RLE&lt;/code&gt;, &lt;code&gt;Z_FIXED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eee1848a08d0972c7c4402500e5de73ab130c5a" translate="yes" xml:space="preserve">
          <source>Defines the strategy used to tune the compression. Use one of the symbolic constants defined below.</source>
          <target state="translated">압축을 조정하는 데 사용되는 전략을 정의합니다. 아래에 정의 된 기호 상수 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0140c569a167a40b758a74ad75bbfa4a322932c6" translate="yes" xml:space="preserve">
          <source>Defines the string that is passed to recursive make calls in subdirectories.</source>
          <target state="translated">서브 디렉토리에서 재귀 적 호출에 전달되는 문자열을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8285ce4018e847f63af428f8a58d339f9bc553a5" translate="yes" xml:space="preserve">
          <source>Defines the string that is passed to recursive make calls in subdirectories. The variables like &lt;code&gt;PASTHRU_DEFINE&lt;/code&gt; are used in each level, and passed downwards on the command-line with e.g. the value of that level's DEFINE. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da735f442360be74e54c58a85701764b3e96022" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile XS files to C++.</source>
          <target state="translated">XS 파일을 C ++로 컴파일하는 접미사 규칙을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="74b9893fa91b825a1d680e0f69f616b612a76cb5" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile XS files to C.</source>
          <target state="translated">XS 파일을 C로 컴파일하는 접미사 규칙을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e0d8ee251994cc513f249a8caeb41a2880a20ae6" translate="yes" xml:space="preserve">
          <source>Defines the suffix rules to compile different flavors of C files to object files.</source>
          <target state="translated">다양한 종류의 C 파일을 오브젝트 파일로 컴파일하는 접미사 규칙을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="32546d4aee39d7ecd97ee598cccfec080ea2b2fa" translate="yes" xml:space="preserve">
          <source>Defines the targets all, subdirs, config, and O_FILES</source>
          <target state="translated">대상 all, subdirs, config 및 O_FILES를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8d94db57a25050ea2e12e70aa07a67bf9e408e8b" translate="yes" xml:space="preserve">
          <source>Defines the targets distclean, distcheck, skipcheck, manifest, veryclean.</source>
          <target state="translated">대상 distclean, distcheck, skipcheck, manifest, veryclean을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="195a11e1aaa7fa1de51a9767e72b1109922bd69b" translate="yes" xml:space="preserve">
          <source>Defines the test targets.</source>
          <target state="translated">테스트 대상을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="e470b7139fcd28a3e03c5dc98122c30f121e0ce7" translate="yes" xml:space="preserve">
          <source>Defining Aliases</source>
          <target state="translated">별칭 정의</target>
        </trans-unit>
        <trans-unit id="a6a4f129ca4af3f95655180a4ab4518f538d8368" translate="yes" xml:space="preserve">
          <source>Defining Encodings</source>
          <target state="translated">인코딩 정의</target>
        </trans-unit>
        <trans-unit id="8953e978a34af3aa771b28b8a0aeb5a5a9299394" translate="yes" xml:space="preserve">
          <source>Defining multiple constants at once</source>
          <target state="translated">한 번에 여러 상수 정의</target>
        </trans-unit>
        <trans-unit id="0b4d4a2cad4c2c9d7a21a4f7eee774dd37c837d6" translate="yes" xml:space="preserve">
          <source>Defining named patterns</source>
          <target state="translated">명명 된 패턴 정의</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="99e7b02a1a29971b6fb35588f8f5d402d5361f64" translate="yes" xml:space="preserve">
          <source>Deflate (method 8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56eb69213b29172984702ca40dfbd1eeaae962fb" translate="yes" xml:space="preserve">
          <source>Deflate Compression Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc49f81973bcb0957f67dbcb79a0c07904072495" translate="yes" xml:space="preserve">
          <source>Deflate Interface</source>
          <target state="translated">인터페이스 Deflate</target>
        </trans-unit>
        <trans-unit id="261df28b51f1e3a727f3a451d8b97dc502d494f7" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$buffer&lt;/code&gt; . The buffer can either be a scalar or a scalar reference. When finished, &lt;code&gt;$buffer&lt;/code&gt; will be completely processed (assuming there were no errors). If the deflation was successful it returns the deflated output, &lt;code&gt;$out&lt;/code&gt; , and a status value, &lt;code&gt;$status&lt;/code&gt; , of &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$buffer&lt;/code&gt; 의 내용을 줄입니다 . 버퍼는 스칼라 또는 스칼라 참조 일 수 있습니다. 완료되면 &lt;code&gt;$buffer&lt;/code&gt; 가 완전히 처리됩니다 (오류가 없다고 가정). 수축이 성공하면 수축 된 출력 &lt;code&gt;$out&lt;/code&gt; 및 상태 값 &lt;code&gt;$status&lt;/code&gt; 를 &lt;code&gt;Z_OK&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="99f2de64258b5dd0e81d4fa298435a7e78eae5fa" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$buffer&lt;/code&gt;. The buffer can either be a scalar or a scalar reference. When finished, &lt;code&gt;$buffer&lt;/code&gt; will be completely processed (assuming there were no errors). If the deflation was successful it returns the deflated output, &lt;code&gt;$out&lt;/code&gt;, and a status value, &lt;code&gt;$status&lt;/code&gt;, of &lt;code&gt;Z_OK&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ca554d5d7745bfb195b4e7b44d607bd478a74b" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$input&lt;/code&gt; and writes the compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; 의 내용을 수축시키고 압축 된 데이터를 &lt;code&gt;$output&lt;/code&gt; 씁니다 .</target>
        </trans-unit>
        <trans-unit id="c3f15115d8286e5794edca21720e00d0ac79fca1" translate="yes" xml:space="preserve">
          <source>Deflates the contents of &lt;code&gt;$input&lt;/code&gt; and writes the compressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ea81ef7609f7aa5b727599becc6a143ff111a6" translate="yes" xml:space="preserve">
          <source>Delete a breakpoint from the specified</source>
          <target state="translated">지정된 지점에서 중단 점 삭제</target>
        </trans-unit>
        <trans-unit id="5a0073b863c5340c8970662e0be69970f5dfeba8" translate="yes" xml:space="preserve">
          <source>Delete a key and its associated value from the cop hints hash</source>
          <target state="translated">경찰 힌트 해시에서 키와 관련 값을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="003b02de35cb7dc79685b85e3a648ca86c7ed793" translate="yes" xml:space="preserve">
          <source>Delete a key and its associated value from the cop hints hash &lt;code&gt;cophh&lt;/code&gt;, and returns the modified hash. The returned hash pointer is in general not the same as the hash pointer that was passed in. The input hash is consumed by the function, and the pointer to it must not be subsequently used. Use &lt;a href=&quot;#cophh_copy&quot;&gt;&quot;cophh_copy&quot;&lt;/a&gt; if you need both hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15c91a025daa3148a7fab7d1733f7a172457b7b" translate="yes" xml:space="preserve">
          <source>Delete all installed actions.</source>
          <target state="translated">설치된 모든 조치를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="bb17fd76f6f5ca7598134cd78f73beaa67a2e6d2" translate="yes" xml:space="preserve">
          <source>Delete all installed breakpoints.</source>
          <target state="translated">설치된 모든 중단 점을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="beaf4b4da8da8ff385c29b6d645eaa115a38d395" translate="yes" xml:space="preserve">
          <source>Delete all post-prompt Perl command actions.</source>
          <target state="translated">프롬프트 후 Perl 명령 조치를 모두 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="e03ec6135ed6958ecae2c1ff175c05d512e28238" translate="yes" xml:space="preserve">
          <source>Delete all pre-prompt Perl command actions.</source>
          <target state="translated">사전 프롬프트 된 모든 Perl 명령 조치를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="73a7816e302077539cac697491b47392c1d85bee" translate="yes" xml:space="preserve">
          <source>Delete all pre-prompt debugger commands.</source>
          <target state="translated">사전 프롬프트 디버거 명령을 모두 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="2dad01021d565585d1f2142d895d1f8890c02ab1" translate="yes" xml:space="preserve">
          <source>Delete all watch-expressions.</source>
          <target state="translated">모든 시계 표현을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="b6f7cb935ade65e12cb5c25c937b996479fb8adb" translate="yes" xml:space="preserve">
          <source>Delete an action from the specified line.</source>
          <target state="translated">지정된 행에서 조치를 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="1226b496f4d499ec434c444cfe660a3f53b36ae9" translate="yes" xml:space="preserve">
          <source>Delete and return the spool.</source>
          <target state="translated">스풀을 삭제하고 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="fa5752aad802906e596617c84df13259c116cdcb" translate="yes" xml:space="preserve">
          <source>Delete file on close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec90a00fac0b965cebb8d69254af765943de97b7" translate="yes" xml:space="preserve">
          <source>Delete it. :-) Seriously, there are a number of (mostly unsatisfactory) solutions with varying levels of &quot;security&quot;.</source>
          <target state="translated">삭제하십시오. :-) 진심으로, 다양한 &quot;보안&quot;수준을 가진 많은 (주로 불만족스러운) 솔루션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b819cf6faf3c2dff6669793abe1aba00c76a28d9" translate="yes" xml:space="preserve">
          <source>Delete the element at index</source>
          <target state="translated">색인에서 요소 삭제</target>
        </trans-unit>
        <trans-unit id="c0d51f2b9680b0830421d95140e113f970d690d9" translate="yes" xml:space="preserve">
          <source>Delete the key</source>
          <target state="translated">키 삭제</target>
        </trans-unit>
        <trans-unit id="91cc99f3a5b10598f0cfe04276ac8b00d48c8cb4" translate="yes" xml:space="preserve">
          <source>Delete watch-expression</source>
          <target state="translated">시계 표현 삭제</target>
        </trans-unit>
        <trans-unit id="149a30b4c4fbf691fd43ffc73478be22980b04cb" translate="yes" xml:space="preserve">
          <source>DeleteFile</source>
          <target state="translated">DeleteFile</target>
        </trans-unit>
        <trans-unit id="c1e33912ea7835bf73d28e9fd2c6aab658de7bb0" translate="yes" xml:space="preserve">
          <source>DeleteFileW</source>
          <target state="translated">DeleteFileW</target>
        </trans-unit>
        <trans-unit id="e145b1b4c60960cca6dca4bb8af0c6916d63e896" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value SV is removed from the hash, made mortal, and returned to the caller. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to &lt;code&gt;G_DISCARD&lt;/code&gt; then &lt;code&gt;NULL&lt;/code&gt; will be returned. &lt;code&gt;NULL&lt;/code&gt; will also be returned if the key is not found. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca1c676523afd3f5ee253a9b6c4f5e0ad74e44b" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value SV is removed from the hash, made mortal, and returned to the caller. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to G_DISCARD then NULL will be returned. NULL will also be returned if the key is not found. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="translated">해시에서 키 / 값 쌍을 삭제합니다. 값 SV는 해시에서 제거되어 치명적이며 호출자에게 반환됩니다. &lt;code&gt;flags&lt;/code&gt; 값은 보통 0이됩니다; G_DISCARD로 설정하면 NULL이 반환됩니다. 키를 찾지 못하면 NULL도 반환됩니다. &lt;code&gt;hash&lt;/code&gt; 는 유효한 사전 계산 된 해시 값이거나 계산을 요청하기 위해 0 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2446e6670d537af1e2928d5caec7dbb0899eefa" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value's SV is removed from the hash, made mortal, and returned to the caller. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to &lt;code&gt;G_DISCARD&lt;/code&gt; then &lt;code&gt;NULL&lt;/code&gt; will be returned. &lt;code&gt;NULL&lt;/code&gt; will also be returned if the key is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c1663e85e551a1c50322e1c209520d893a7af7" translate="yes" xml:space="preserve">
          <source>Deletes a key/value pair in the hash. The value's SV is removed from the hash, made mortal, and returned to the caller. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if set to G_DISCARD then NULL will be returned. NULL will also be returned if the key is not found.</source>
          <target state="translated">해시에서 키 / 값 쌍을 삭제합니다. 값의 SV는 해시에서 제거되어 치명적이며 호출자에게 반환됩니다. &lt;code&gt;klen&lt;/code&gt; 의 절대 값은 키의 길이입니다. 경우 &lt;code&gt;klen&lt;/code&gt; 키에 있다고 가정 부정 유니 UTF-8 인코딩. &lt;code&gt;flags&lt;/code&gt; 값은 보통 0이됩니다; G_DISCARD로 설정하면 NULL이 반환됩니다. 키를 찾지 못하면 NULL도 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fef7292ecad7b90b11da8e6b0c7d13b3a7d1a0cb" translate="yes" xml:space="preserve">
          <source>Deletes a list of files. On success, it returns the number of files it successfully deleted. On failure, it returns false and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5dd5212aa7a8bc97116e79a014cced26a493225" translate="yes" xml:space="preserve">
          <source>Deletes a list of files. On success, it returns the number of files it successfully deleted. On failure, it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno):</source>
          <target state="translated">파일 목록을 삭제합니다. 성공하면 성공적으로 삭제 한 파일 수를 반환합니다. 실패하면 false를 반환하고 &lt;code&gt;$!&lt;/code&gt; 를 설정합니다 . (errno) :</target>
        </trans-unit>
        <trans-unit id="0ff47f47af9839f7a2f3bc14147ca1e559e4e6cb" translate="yes" xml:space="preserve">
          <source>Deletes a name from the filesystem. Calls &lt;a href=&quot;perlfunc#unlink&quot;&gt;&quot;unlink&quot; in perlfunc&lt;/a&gt; for files and &lt;a href=&quot;perlfunc#rmdir&quot;&gt;&quot;rmdir&quot; in perlfunc&lt;/a&gt; for directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4e84b1a9cd7d8ca24f9049c5c9188e897c575e" translate="yes" xml:space="preserve">
          <source>Deletes the directory specified by FILENAME if that directory is empty. If it succeeds it returns true; otherwise it returns false and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno). If FILENAME is omitted, uses &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e992fa1a5f580cdba4aa3e9584f6ceab958d933" translate="yes" xml:space="preserve">
          <source>Deletes the directory specified by FILENAME if that directory is empty. If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). If FILENAME is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">해당 디렉토리가 비어 있으면 FILENAME으로 지정된 디렉토리를 삭제합니다. 성공하면 true를 반환합니다. 그렇지 않으면 false를 반환하고 &lt;code&gt;$!&lt;/code&gt; 설정합니다 ! (errno). FILENAME이 생략되면 &lt;code&gt;$_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ab8b05f803f178aa62996ab1540a40bcd2f3aad" translate="yes" xml:space="preserve">
          <source>Deletes the element indexed by &lt;code&gt;key&lt;/code&gt; from the array, makes the element mortal, and returns it. If &lt;code&gt;flags&lt;/code&gt; equals &lt;code&gt;G_DISCARD&lt;/code&gt; , the element is freed and null is returned. Perl equivalent: &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $elem = &lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;($myarray[$idx]);&lt;/code&gt; for the non-&lt;code&gt;G_DISCARD&lt;/code&gt; version and a void-context &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete($myarray[$idx]);&lt;/a&gt;&lt;/code&gt; for the &lt;code&gt;G_DISCARD&lt;/code&gt; version.</source>
          <target state="translated">배열에서 &lt;code&gt;key&lt;/code&gt; 색인 된 요소를 삭제하고 , 요소를 치명적으로 만들고 리턴합니다. 경우 &lt;code&gt;flags&lt;/code&gt; 와 동일 &lt;code&gt;G_DISCARD&lt;/code&gt; 를 , 요소가 해제되고 null가 돌려 주어집니다. 펄 동등 : &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $elem = &lt;a href=&quot;functions/delete&quot;&gt;delete&lt;/a&gt;($myarray[$idx]);&lt;/code&gt; 비 &lt;code&gt;G_DISCARD&lt;/code&gt; 버전 및 void-context &lt;code&gt;&lt;a href=&quot;functions/delete&quot;&gt;delete($myarray[$idx]);&lt;/a&gt;&lt;/code&gt; 에 대한 &lt;code&gt;G_DISCARD&lt;/code&gt; 의 버전.</target>
        </trans-unit>
        <trans-unit id="7103076a5e79061174c92d0ccdae958ce4a1f7fa" translate="yes" xml:space="preserve">
          <source>Deletes the element indexed by &lt;code&gt;key&lt;/code&gt; from the array, makes the element mortal, and returns it. If &lt;code&gt;flags&lt;/code&gt; equals &lt;code&gt;G_DISCARD&lt;/code&gt;, the element is freed and NULL is returned. NULL is also returned if &lt;code&gt;key&lt;/code&gt; is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0f5d66f41f791c03d640f956aeecf4272c6ecc" translate="yes" xml:space="preserve">
          <source>Deletes the named file. Compared to Perl's &lt;code&gt;unlink&lt;/code&gt;, &lt;code&gt;DeleteFile&lt;/code&gt; has the advantage of not deleting read-only files. For &lt;b&gt;some&lt;/b&gt; versions of Perl, &lt;code&gt;unlink&lt;/code&gt; silently calls &lt;code&gt;chmod&lt;/code&gt; whether it needs to or not before deleting the file so that files that you have protected by marking them as read-only are not always protected from Perl's &lt;code&gt;unlink&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7985add209a4040b04725382be94bb53ea2fd6c0" translate="yes" xml:space="preserve">
          <source>Deletes the reparse point data associated with $hDevice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb406e5c9566f12490e972a4db2c13a7645fccc7" translate="yes" xml:space="preserve">
          <source>Deleting directories from @INC</source>
          <target state="translated">@INC에서 디렉토리 삭제</target>
        </trans-unit>
        <trans-unit id="485c4ddf6050def894be28eec6cc286e3e6fdb5d" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;a href=&quot;#tied-VARIABLE&quot;&gt;&lt;code&gt;tied&lt;/code&gt;&lt;/a&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;a href=&quot;#tied-VARIABLE&quot;&gt;&lt;code&gt;tied&lt;/code&gt;&lt;/a&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59739df4503a81fc7a23e026605cac8564b8e7df" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;code&gt;%ENV&lt;/code&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="translated">&lt;code&gt;%ENV&lt;/code&gt; 에서 삭제 하면 환경이 수정됩니다. DBM 파일에 연결된 해시에서 삭제하면 DBM 파일에서 항목이 삭제됩니다. &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; 해시 또는 배열 에서 삭제하면 반드시 아무것도 반환하지 않을 수 있습니다. &lt;code&gt;&lt;a href=&quot;functions/tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; 패키지의 DELETE 메소드 구현에 따라 달라집니다 .</target>
        </trans-unit>
        <trans-unit id="b2e4bc535959687d920ab6af5070c36f9ba7c865" translate="yes" xml:space="preserve">
          <source>Deleting from &lt;code&gt;%ENV&lt;/code&gt; modifies the environment. Deleting from a hash tied to a DBM file deletes the entry from the DBM file. Deleting from a &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; hash or array may not necessarily return anything; it depends on the implementation of the &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; package's DELETE method, which may do whatever it pleases.</source>
          <target state="translated">&lt;code&gt;%ENV&lt;/code&gt; 에서 삭제 하면 환경이 수정됩니다. DBM 파일에 연결된 해시에서 삭제하면 DBM 파일에서 항목이 삭제됩니다. &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; 해시 또는 배열 에서 삭제하면 반드시 아무것도 반환하지 않을 수 있습니다. &lt;code&gt;&lt;a href=&quot;tied&quot;&gt;tied&lt;/a&gt;&lt;/code&gt; 패키지의 DELETE 메소드 구현에 따라 달라집니다 .</target>
        </trans-unit>
        <trans-unit id="680fb3aa86f75cbfe88a00e67e1fb323a875d30a" translate="yes" xml:space="preserve">
          <source>Deleting unknown formatting code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6d02ca76a45cb468868320867e518cfaed49b9" translate="yes" xml:space="preserve">
          <source>Delimiter for here document is too long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29354be8f01aa714635d9e114de856834c56b93" translate="yes" xml:space="preserve">
          <source>Delivers gcc toolchain targeting 32-bit Windows platform.</source>
          <target state="translated">32 비트 Windows 플랫폼을 대상으로 gcc 툴체인을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0b514393b132ed57d195ef9cf7c8664bedd5ba2f" translate="yes" xml:space="preserve">
          <source>Delivers gcc toolchain targeting both 64-bit Windows and 32-bit Windows platforms (despite the project name &quot;mingw-w64&quot; they are not only 64-bit oriented). They deliver the native gcc compilers and cross-compilers that are also supported by perl's makefile.</source>
          <target state="translated">64 비트 Windows 및 32 비트 Windows 플랫폼을 모두 대상으로하는 gcc 툴체인을 제공합니다 (프로젝트 이름은 &quot;mingw-w64&quot;이지만 64 비트 전용이 아님). 그것들은 perl의 makefile에서도 지원되는 네이티브 gcc 컴파일러와 크로스 컴파일러를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c94930d13d0f0baa0081c29926115e40d581fe81" translate="yes" xml:space="preserve">
          <source>Demands a version of Perl specified by VERSION, or demands some semantics specified by EXPR or by &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if EXPR is not supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cba83c5edbd4207cb47e793a734e0fe0e36673" translate="yes" xml:space="preserve">
          <source>Demands a version of Perl specified by VERSION, or demands some semantics specified by EXPR or by &lt;code&gt;$_&lt;/code&gt; if EXPR is not supplied.</source>
          <target state="translated">VERSION에 의해 ​​지정된 Perl의 버전을 요구하거나 EXPR이 제공되지 않은 경우 EXPR 또는 &lt;code&gt;$_&lt;/code&gt; 의해 지정된 일부 의미론을 요구합니다 .</target>
        </trans-unit>
        <trans-unit id="562e8903063ed8770f6527d563bca3ab2868b0d9" translate="yes" xml:space="preserve">
          <source>Denial of Service</source>
          <target state="translated">서비스 거부</target>
        </trans-unit>
        <trans-unit id="89da124e04dfe1ad9946cd37d91a119e1d028898" translate="yes" xml:space="preserve">
          <source>Denmark</source>
          <target state="translated">Denmark</target>
        </trans-unit>
        <trans-unit id="53577bb5df0ee9b6376e87f4896b6957a25d7a43" translate="yes" xml:space="preserve">
          <source>Deny</source>
          <target state="translated">Deny</target>
        </trans-unit>
        <trans-unit id="2e10904ffd9eaf7871845f0b81c542592ff1e8bd" translate="yes" xml:space="preserve">
          <source>Deny the listed operators from being used when compiling code in the compartment (other operators may still be permitted).</source>
          <target state="translated">구획에서 코드를 컴파일 할 때 나열된 연산자가 사용되지 않도록하십시오 (다른 연산자는 여전히 허용 될 수 있음).</target>
        </trans-unit>
        <trans-unit id="f3c0cd1438a845e8a503457cb11b112c6a17abfb" translate="yes" xml:space="preserve">
          <source>Dependency on</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="77dc35303fc487108331e0e6d31fd83790816ff8" translate="yes" xml:space="preserve">
          <source>Dependent libraries can be linked in one of three ways:</source>
          <target state="translated">종속 라이브러리는 다음 세 가지 방법 중 하나로 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b591a22d82312f2906d4cd0cd73a4a0cc311c02d" translate="yes" xml:space="preserve">
          <source>Depending on how you built/installed perl you may have (otherwise identical) Perl documentation in the following formats:</source>
          <target state="translated">Perl을 빌드 / 설치 한 방법에 따라 다음 형식으로 된 Perl 문서가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e46450a9c23e87326a0c62cc3a40e3b23e08ee53" translate="yes" xml:space="preserve">
          <source>Depending on implementation &lt;code&gt;errno&lt;/code&gt; may be &lt;code&gt;EINTR&lt;/code&gt; if operation was interrupted by a signal.</source>
          <target state="translated">구현에 따라 신호에 의해 작동이 중단 된 경우 &lt;code&gt;errno&lt;/code&gt; 는 &lt;code&gt;EINTR&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d687951cb42e749e0fdd6add4a39bdcc23f2a49c" translate="yes" xml:space="preserve">
          <source>Depending on the current floating point rounding mode, rounds the argument either toward nearest (like &lt;a href=&quot;#round&quot;&gt;&quot;round&quot;&lt;/a&gt;), toward zero (like &lt;a href=&quot;#trunc&quot;&gt;&quot;trunc&quot;&lt;/a&gt;), downward (toward negative infinity), or upward (toward positive infinity) [C99].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0be77db14ba94fc033fd30c3cfe8822eacafb87" translate="yes" xml:space="preserve">
          <source>Depending on the current floating point rounding mode, rounds the argument either toward nearest (like &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;), toward zero (like &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;), downward (toward negative infinity), or upward (toward positive infinity) [C99].</source>
          <target state="translated">현재 부동 소수점 반올림 모드에 따라 인수를 가장 가까운 ( &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt; 와 같은 ), 0 ( &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt; 와 같은 ), 아래쪽 (음의 무한대쪽으로) 또는 위쪽 (양의 무한대쪽으로)으로 반올림합니다 [C99].</target>
        </trans-unit>
        <trans-unit id="5294c397495f76892ffea877bf2a43e2c328f0cb" translate="yes" xml:space="preserve">
          <source>Depending on the host operating system, the value of &lt;code&gt;$^X&lt;/code&gt; may be a relative or absolute pathname of the perl program file, or may be the string used to invoke perl but not the pathname of the perl program file. Also, most operating systems permit invoking programs that are not in the PATH environment variable, so there is no guarantee that the value of &lt;code&gt;$^X&lt;/code&gt; is in PATH. For VMS, the value may or may not include a version number.</source>
          <target state="translated">호스트 운영 체제에 따라 &lt;code&gt;$^X&lt;/code&gt; 의 값은 perl 프로그램 파일의 상대 또는 절대 경로 이름이거나 perl을 호출하는 데 사용되지만 perl 프로그램 파일의 경로 이름이 아닌 문자열 일 수 있습니다. 또한 대부분의 운영 체제는 PATH 환경 변수에없는 프로그램 호출을 허용하므로 &lt;code&gt;$^X&lt;/code&gt; 값이 PATH에 있다고 보장 할 수 없습니다 . VMS의 경우 값에 버전 번호가 포함되거나 포함되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cccf7af03de5ec673d581d5fe1b28e5dbbca4f92" translate="yes" xml:space="preserve">
          <source>Depending on the platform the NaN may or may not behave differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fed4b09c88f05f1f3d646bbfcd5d46f8e224da" translate="yes" xml:space="preserve">
          <source>Depending on the platform, and because this class emits terminal escapes it will attempt to set the &lt;code&gt;-R&lt;/code&gt; flag on your pager by injecting the flag into your environment variable for &lt;code&gt;less&lt;/code&gt; or &lt;code&gt;more&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08084da944037c3c23ff2e2b90762c637e7da38d" translate="yes" xml:space="preserve">
          <source>Depending on the transformation, you will find that one or more of the following will happen</source>
          <target state="translated">변환에 따라 다음 중 하나 이상이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="085d0b5e01dcc02f48f2fd13a4f2ed9ebb9054cb" translate="yes" xml:space="preserve">
          <source>Depending on your platform there are various ways of profiling Perl.</source>
          <target state="translated">플랫폼에 따라 Perl을 프로파일 링하는 다양한 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8120b368781cc067977ed5593683a3b7c41ff914" translate="yes" xml:space="preserve">
          <source>Deploying Perl on Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="a3431b52e6f55419aab8d54a55029192f48ff550" translate="yes" xml:space="preserve">
          <source>Deprecated and removed variables</source>
          <target state="translated">더 이상 사용되지 않고 제거 된 변수</target>
        </trans-unit>
        <trans-unit id="300ce95b61785c757e93c6783917abef0bc4ae26" translate="yes" xml:space="preserve">
          <source>Deprecated by Unicode. These are characters that expand to more than one character in the specified normalization form, but whether they actually take up more bytes or not depends on the encoding being used. For example, a UTF-8 encoded character may expand to a different number of bytes than a UTF-32 encoded character.</source>
          <target state="translated">유니 코드에서 사용되지 않습니다. 지정된 정규화 형식에서 둘 이상의 문자로 확장되는 문자이지만 실제로 더 많은 바이트를 차지하는지 여부는 사용중인 인코딩에 따라 다릅니다. 예를 들어, UTF-8 인코딩 문자는 UTF-32 인코딩 문자와 다른 바이트 수로 확장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09e9afac06c928ecd4bc9dc03a49132c263cf3c1" translate="yes" xml:space="preserve">
          <source>Deprecated by Unicode: Duplicates ccc=vr (Canonical_Combining_Class=Virama)</source>
          <target state="translated">더 이상 사용되지 않는 Unicode : ccc = vr 복제 (Canonical_Combining_Class = Virama)</target>
        </trans-unit>
        <trans-unit id="2c6d79954aa926c28b34d07c6c1b52cea0a4f179" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:alnum:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="56ed58a2ae79c6af374b506410f3fa9662b418b6" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:alpha:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="48807b7130a48604da6050bef16bf05c1f34509f" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:cntrl:]]+ $ /x&lt;/code&gt; 에 대해 일치하는 것과 매우 유사합니다 . 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="e30506988830cd213720be74f34746c5a398ce09" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 함수를 사용하면 경고가 발생하고 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:digit:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사합니다 . 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="869432009229b46aa164c28a7cd2745d9ba962ec" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:graph:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사합니다 . 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="cdc2b565b6e1d8ec1258567850985d57eddc8117" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:lower:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="5b86512fb27d707d0e0edc2d4faed1f32e8d3ffd" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:print:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="9b872da650d016a5781f8333cf85bdb130b7bcc7" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:punct:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="4dfc61b4c0045c69830c72d4c8a9f14a2de7cb42" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:space:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="9eae66c65e71bd3522a0efba8a80f39c5e45c530" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 기능으로 경고가 발생하며 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:upper:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로하는 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="d712a49c6b2099faded0c3c79a409ab8379a0967" translate="yes" xml:space="preserve">
          <source>Deprecated function whose use raises a warning, and which is slated to be removed in a future Perl version. It is very similar to matching against &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt; , which you should convert to use instead. The function is deprecated because 1) it doesn't handle UTF-8 encoded strings properly; and 2) it returns &lt;code&gt;TRUE&lt;/code&gt; even if the input is the empty string. The function return is always based on the current locale, whereas using locale rules is optional with the regular expression, based on pragmas in effect and pattern modifiers (see &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt; and &lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect? in perlre&lt;/a&gt;).</source>
          <target state="translated">더 이상 사용되지 않는 함수를 사용하면 경고가 발생하고 향후 Perl 버전에서 제거 될 예정입니다. &lt;code&gt;qr/ ^ [[:xdigit:]]+ $ /x&lt;/code&gt; 에 대한 일치와 매우 유사하며 대신 사용하도록 변환해야합니다. 이 기능은 1) UTF-8 인코딩 문자열을 올바르게 처리하지 않기 때문에 사용되지 않습니다. 2) 입력이 빈 문자열 인 경우에도 &lt;code&gt;TRUE&lt;/code&gt; 를 반환 합니다 . 함수 리턴은 항상 현재 로케일을 기반으로하는 반면, 로케일 규칙을 사용하는 것은 효과의 pragma 및 패턴 수정자를 기반으로 정규식에서 선택 사항입니다 ( &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 &lt;/a&gt;&lt;a href=&quot;perlre#Which-character-set-modifier-is-in-effect%3f&quot;&gt;문자 세트 수정 자&lt;/a&gt; 및 어떤 문자 세트 수정자가 유효한지 perlre의 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="77e5e77915f87f5eba641b256db1ec0d6448e365" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl 5.</source>
          <target state="translated">Perl 5에서 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0447c363038e418e07f3246f8ca43e5cfd53e211" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl 5.10.0</source>
          <target state="translated">Perl 5.10.0에서 사용되지 않음</target>
        </trans-unit>
        <trans-unit id="42f0ac3a73aa4ea8f831dc4a897f203beaf75865" translate="yes" xml:space="preserve">
          <source>Deprecated in Perl v5.12.0.</source>
          <target state="translated">Perl v5.12.0에서 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c719d3d031098df68eeee6d64494f02905ae30e2" translate="yes" xml:space="preserve">
          <source>Deprecated method, but does the same as service_check() method.</source>
          <target state="translated">더 이상 사용되지 않는 메소드이지만 service_check () 메소드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f82cf002f6b4c932fb0a62e044c473c42a57f99c" translate="yes" xml:space="preserve">
          <source>Deprecated method. Use libscan instead.</source>
          <target state="translated">더 이상 사용되지 않는 방법. 대신 libscan을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="296aaa10f5a1032a3fc94ecfb0996dab5a0c7b1f" translate="yes" xml:space="preserve">
          <source>Deprecated module to load Locale::Maketext utf8 code</source>
          <target state="translated">Locale :: Maketext utf8 코드를로드하기 위해 사용되지 않는 모듈</target>
        </trans-unit>
        <trans-unit id="a3ba85c01d05989140902ff777b593387589780c" translate="yes" xml:space="preserve">
          <source>Deprecated use of my() in false conditional. This will be a fatal error in Perl 5.30</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5972c72225aadd112c116405b2c9a8c61f8be67" translate="yes" xml:space="preserve">
          <source>Deprecated. Please use &lt;code&gt;is_actual_ok&lt;/code&gt; instead.</source>
          <target state="translated">더 이상 사용되지 않습니다. 사용하십시오 &lt;code&gt;is_actual_ok&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="f480918eabb96e1b569421fef2e3056b6e5a48a3" translate="yes" xml:space="preserve">
          <source>Deprecated. Please use &lt;code&gt;is_ok&lt;/code&gt; instead.</source>
          <target state="translated">더 이상 사용되지 않습니다. 사용하십시오 &lt;code&gt;is_ok&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="8bab31dacd225be342dc45946fc045df33a2d1c4" translate="yes" xml:space="preserve">
          <source>Deprecated. Use &lt;code&gt;is_good_plan&lt;/code&gt; instead.</source>
          <target state="translated">더 이상 사용되지 않습니다. 대신 &lt;code&gt;is_good_plan&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4880df7da732b64649d73fa94f900ec9f18233e3" translate="yes" xml:space="preserve">
          <source>Deprecating a variable announces the intent of the perl maintainers to eventually remove the variable from the language. It may still be available despite its status. Using a deprecated variable triggers a warning.</source>
          <target state="translated">변수를 사용하지 않으면 펄 관리자가 언어에서 변수를 제거하려는 의도를 알 수 있습니다. 상태에도 불구하고 여전히 사용 가능할 수 있습니다. 더 이상 사용되지 않는 변수를 사용하면 경고가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="be163eb89f0ec6f8bfe369849331f8a896683818" translate="yes" xml:space="preserve">
          <source>Dereference-address operator. (Perl's prefix dereferencing operators are typed: &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; , and &lt;code&gt;&amp;amp;&lt;/code&gt; .)</source>
          <target state="translated">역 참조 주소 연산자. Perl의 접두사 역 참조 연산자는 &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;%&lt;/code&gt; 및 &lt;code&gt;&amp;amp;&lt;/code&gt; 형식 입니다.</target>
        </trans-unit>
        <trans-unit id="d9463998fff864ecdb3795dbbe3e647e986e867b" translate="yes" xml:space="preserve">
          <source>Dereference-address operator. (Perl's prefix dereferencing operators are typed: &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, and &lt;code&gt;&amp;amp;&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13dba076abe09205f4d6530500f95233f3d8b89" translate="yes" xml:space="preserve">
          <source>Dereferences an RV to return the SV.</source>
          <target state="translated">SV를 반환하기 위해 RV를 역 참조합니다.</target>
        </trans-unit>
        <trans-unit id="1d2b570065845ffa968e3702ce8e6c146303b183" translate="yes" xml:space="preserve">
          <source>Dereferencing</source>
          <target state="translated">Dereferencing</target>
        </trans-unit>
        <trans-unit id="156201b939972fe144cc0ef209c27735390cea3d" translate="yes" xml:space="preserve">
          <source>Dereferencing Method Call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1482ff3cb39b2ab2879a6e8a1d98292788d82730" translate="yes" xml:space="preserve">
          <source>Deregistration is done in this case by calling event_loop with &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; as its parameter:</source>
          <target state="translated">이 경우 등록 취소는 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 매개 변수로 사용하여 event_loop를 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="426af9b55be08d3edbb0f8e1c83b016788814c5c" translate="yes" xml:space="preserve">
          <source>Deregistration is done in this case by calling event_loop with &lt;code&gt;undef&lt;/code&gt; as its parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ece715d7bfa3a1e4b4b7c2716133b08b5012fe3" translate="yes" xml:space="preserve">
          <source>Derived Normalization Properties</source>
          <target state="translated">파생 정규화 속성</target>
        </trans-unit>
        <trans-unit id="46565153346c49e93798bd916a2902e7376b3a49" translate="yes" xml:space="preserve">
          <source>Derived from FileHandle.pm by Graham Barr &amp;lt;</source>
          <target state="translated">Graham Barr가 FileHandle.pm에서 파생 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="bc5d76c2188dda3e644ef5539acfe2ee659fc494" translate="yes" xml:space="preserve">
          <source>Derived from FileHandle.pm by Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;</source>
          <target state="translated">Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;이 FileHandle.pm에서 파생 함</target>
        </trans-unit>
        <trans-unit id="6f61cc4cb53719b61daa460c7f629eaad048da52" translate="yes" xml:space="preserve">
          <source>Derived from many sources. Some would say</source>
          <target state="translated">많은 출처에서 파생되었습니다. 어떤 사람들은</target>
        </trans-unit>
        <trans-unit id="f27ae512bfe1f4a041a1bece8dc33e39ce992aa0" translate="yes" xml:space="preserve">
          <source>DerivedNormalizationProps.txt</source>
          <target state="translated">DerivedNormalizationProps.txt</target>
        </trans-unit>
        <trans-unit id="3fa9641c46bb1506e8ec7461044331a6aff090c2" translate="yes" xml:space="preserve">
          <source>Describe what the tests test, to make debugging a failed test easier for you or for the next person who runs your test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4477abcc61a8e8691692bd5b2f94edfbc46fd9d" translate="yes" xml:space="preserve">
          <source>Describe what you're doing and how you're doing it, using normal Perl comments.</source>
          <target state="translated">일반적인 Perl 주석을 사용하여 수행중인 작업과 수행 방식을 설명하십시오.</target>
        </trans-unit>
        <trans-unit id="34b3e166e1301e0606954d6a55611015e6cbfc1c" translate="yes" xml:space="preserve">
          <source>Describes the format and contents of</source>
          <target state="translated">형식과 내용을 설명합니다</target>
        </trans-unit>
        <trans-unit id="96a98270561c02f5c77d9be37f677cf453421b77" translate="yes" xml:space="preserve">
          <source>Descrip.MMS</source>
          <target state="translated">Descrip.MMS</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="2af956b843ced2cf4dd0aac522c1a1134f4b160b" translate="yes" xml:space="preserve">
          <source>Descriptions above occasionally refer to &quot;the stack&quot;, but there are in fact many stack-like data structures within the perl interpreter. When otherwise unqualified, &quot;the stack&quot; usually refers to the value stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d71724ac39d6a9fdd91c9d7584648481c9ba90" translate="yes" xml:space="preserve">
          <source>Descriptive editing term&amp;mdash;short for &amp;ldquo;awkward&amp;rdquo;. Also coincidentally refers to a venerable text-processing language from which Perl derived some of its high-level ideas.</source>
          <target state="translated">설명적인 편집 용어 &amp;mdash;&amp;ldquo;어색한 것&amp;rdquo;의 줄임말입니다. 또한 우연히도 Perl이 고급 아이디어를 도출 한 훌륭한 텍스트 처리 언어를 말합니다.</target>
        </trans-unit>
        <trans-unit id="092d175f31c309d86e54ac4890791b68f8011efb" translate="yes" xml:space="preserve">
          <source>Designed to be a method call, and to be overridden by a derived class (i.e. a class which has DynaLoader in its @ISA). The definition in DynaLoader itself returns 0, which produces standard behavior from dl_load_file().</source>
          <target state="translated">메서드 호출이되도록 설계되었으며 파생 클래스 (예 : @ISA에 DynaLoader가있는 클래스)로 재정의됩니다. DynaLoader 자체의 정의는 0을 반환하여 dl_load_file ()에서 표준 동작을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="59aac4a2c7e327e45b17c4aed3092d9662863e7d" translate="yes" xml:space="preserve">
          <source>Designing your API</source>
          <target state="translated">API 디자인</target>
        </trans-unit>
        <trans-unit id="2304f50cca1805cd55f5d31750b7fa633b66fe80" translate="yes" xml:space="preserve">
          <source>Desired permission for directories. Defaults to &lt;code&gt;755&lt;/code&gt; .</source>
          <target state="translated">디렉토리에 대한 원하는 권한. 기본값은 &lt;code&gt;755&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b5f79564508255c8bb40e87bcc15ba24e699a0fe" translate="yes" xml:space="preserve">
          <source>Desired permission for directories. Defaults to &lt;code&gt;755&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533cafeb3aa07a126f4d3b8498ce1b5a7bd7a9da" translate="yes" xml:space="preserve">
          <source>Desired permission for executable files. Defaults to &lt;code&gt;755&lt;/code&gt; .</source>
          <target state="translated">실행 파일에 대한 원하는 권한 기본값은 &lt;code&gt;755&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="95a934b18387d6631a9ee2ba1954dad12e33eb24" translate="yes" xml:space="preserve">
          <source>Desired permission for executable files. Defaults to &lt;code&gt;755&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3e68ecf77d35df71a723c0bb9b9d6b0bcf091b" translate="yes" xml:space="preserve">
          <source>Desired permission for read/writable files. Defaults to &lt;code&gt;644&lt;/code&gt; .</source>
          <target state="translated">읽기 / 쓰기 가능 파일에 대한 원하는 권한. 기본값은 &lt;code&gt;644&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7c435a739cf7859dac5fbc8a7269d1d6d89621a8" translate="yes" xml:space="preserve">
          <source>Desired permission for read/writable files. Defaults to &lt;code&gt;644&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369c7a7ce11a967333493247a17fefcaf8782924" translate="yes" xml:space="preserve">
          <source>Despite its name, this calls your system's default documentation viewer on the given page, or on the viewer itself if</source>
          <target state="translated">이름에도 불구하고 지정된 페이지 또는 시스템 자체의 경우 뷰어의 시스템 기본 문서 뷰어를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="c89708df88c5d908f88da0373b3c5448a6138264" translate="yes" xml:space="preserve">
          <source>Despite the existence of &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, there are still three places where the &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator still shines. In fact, in these three places, you</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 존재에도 불구하고, 여전히 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 운영자가 빛나는 세 곳 이 있습니다. 사실이 세 곳에서</target>
        </trans-unit>
        <trans-unit id="e9361503e9b53e4b67daf4d5ea4a078a36706afe" translate="yes" xml:space="preserve">
          <source>Despite the existence of &lt;code&gt;my&lt;/code&gt;, there are still three places where the &lt;code&gt;local&lt;/code&gt; operator still shines. In fact, in these three places, you</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea2b82422761c8e0827137f7347a8217dfbe6f9" translate="yes" xml:space="preserve">
          <source>Despite the funny names, precedence is the same as any other named unary operator. The operator may be any of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28b5d34c2326fac6371b4f7d54b7efed7411f7e" translate="yes" xml:space="preserve">
          <source>Despite the limitations listed above, HTTP::Tiny is considered feature-complete. New feature requests should be directed to &lt;a href=&quot;HTTP::Tiny::UA&quot;&gt;HTTP::Tiny::UA&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5907dde0a5903ebac0baff736f53c485d9ebcc11" translate="yes" xml:space="preserve">
          <source>Despite the name of the &lt;code&gt;finddepth()&lt;/code&gt; function, both &lt;code&gt;find()&lt;/code&gt; and &lt;code&gt;finddepth()&lt;/code&gt; perform a depth-first search of the directory hierarchy.</source>
          <target state="translated">&lt;code&gt;finddepth()&lt;/code&gt; 함수 의 이름에도 불구하고 &lt;code&gt;find()&lt;/code&gt; 및 &lt;code&gt;finddepth()&lt;/code&gt; 는 디렉토리 계층 구조의 깊이 우선 검색을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="2a5924278d8b7657f3aeb8649ead9475eab91d8f" translate="yes" xml:space="preserve">
          <source>Despite their suggestions in earlier versions of this document the macros &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt; are</source>
          <target state="translated">이 문서의 이전 버전에서의 제안에도 불구하고 매크로 &lt;code&gt;(X)PUSH[iunp]&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bcf6c17f9da73e467a073ac5e6e487e5bdc36429" translate="yes" xml:space="preserve">
          <source>Destructors</source>
          <target state="translated">Destructors</target>
        </trans-unit>
        <trans-unit id="484eade1780602efb64c4a7649b6a4a1f1b85bfd" translate="yes" xml:space="preserve">
          <source>Destructors may not be called on objects if those objects still exist at global destruction time. If the destructors must be called, make sure there are no circular references and that nothing is referencing the objects before the program ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fbdf14ab60724c2e9f95d677204576dc399f05" translate="yes" xml:space="preserve">
          <source>Destructors may not be called on objects if those objects still exist at global destruction time. If the destructors must be called, make sure there are no circular references and that nothing is referencing the objects, before the program ends.</source>
          <target state="translated">오브젝트가 여전히 전역 파괴 시간에 존재하는 경우 오브젝트에서 소멸자가 호출되지 않을 수 있습니다. 소멸자를 호출해야하는 경우 프로그램이 종료되기 전에 순환 참조가없고 오브젝트를 참조하는 것이 없는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9420f695c6cbe6e84c4650570cc80c2e4dc02921" translate="yes" xml:space="preserve">
          <source>Detach from the shared memory segment that previously has been attached to. Returns true if successful, or false on error. See &lt;a href=&quot;http://man.he.net/man2/shmdt&quot;&gt;shmdt(2)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f13a5e8324201e8439f86f9e267530c519b5fa1" translate="yes" xml:space="preserve">
          <source>Detach from the shared memory segment that previously has been attached to. Returns true if successful, or false on error. See &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt&lt;/a&gt;.</source>
          <target state="translated">이전에 연결된 공유 메모리 세그먼트에서 분리하십시오. 성공하면 true를, 오류이면 false를 반환합니다. &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a012746729c03d7f61d449f79bfe19f7c454343" translate="yes" xml:space="preserve">
          <source>Detach the shared memory segment located at the address specified by ADDR from the address space of the calling process. See &lt;a href=&quot;http://man.he.net/man2/shmdt&quot;&gt;shmdt(2)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d104f83eda0e6841179588c742c21e25fb6240" translate="yes" xml:space="preserve">
          <source>Detach the shared memory segment located at the address specified by ADDR from the address space of the calling process. See &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt&lt;/a&gt;.</source>
          <target state="translated">호출 프로세스의 주소 공간에서 ADDR에 의해 지정된 주소에있는 공유 메모리 세그먼트를 분리하십시오. &lt;a href=&quot;http://search.cpan.org/perldoc/shmdt&quot;&gt;shmdt를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="db4efe2ae9107758a1d7c7f9114298d9141da3d4" translate="yes" xml:space="preserve">
          <source>Detached threads and global destruction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea90bef912a25d0e84994d4881a16fcbc2e6e50a" translate="yes" xml:space="preserve">
          <source>Detailed description of each of the command-line options taken by the program. This should be separate from the description for the use of parsers like &lt;a href=&quot;Pod::Usage&quot;&gt;Pod::Usage&lt;/a&gt;. This is normally presented as a list, with each option as a separate &lt;code&gt;=item&lt;/code&gt;. The specific option string should be enclosed in B&amp;lt;&amp;gt;. Any values that the option takes should be enclosed in I&amp;lt;&amp;gt;. For example, the section for the option &lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524606f1e7f47ed54a2dc7c2ed309c5733e4790f" translate="yes" xml:space="preserve">
          <source>Detailed description of each of the command-line options taken by the program. This should be separate from the description for the use of parsers like &lt;a href=&quot;pod/usage&quot;&gt;Pod::Usage&lt;/a&gt;. This is normally presented as a list, with each option as a separate &lt;code&gt;=item&lt;/code&gt; . The specific option string should be enclosed in B&amp;lt;&amp;gt;. Any values that the option takes should be enclosed in I&amp;lt;&amp;gt;. For example, the section for the option &lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">프로그램이 취하는 각 명령 줄 옵션에 대한 자세한 설명. 이것은 &lt;a href=&quot;pod/usage&quot;&gt;Pod :: Usage&lt;/a&gt; 와 같은 구문 분석기 사용에 대한 설명과 분리되어야합니다 . 이것은 일반적으로 목록으로 표시되며 각 옵션은 별도의 &lt;code&gt;=item&lt;/code&gt; 입니다. 특정 옵션 문자열은 B &amp;lt;&amp;gt;로 묶어야합니다. 옵션이 취하는 모든 값은 I &amp;lt;&amp;gt;로 묶어야합니다. 예를 들어 &lt;b&gt;--section&lt;/b&gt; = 옵션에 대한 섹션</target>
        </trans-unit>
        <trans-unit id="fe13e56081ddb095d18e9d96165e4c91a787dd78" translate="yes" xml:space="preserve">
          <source>Detailed documentation about modules can be found at: &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;, &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt;, &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt;.</source>
          <target state="translated">: 모듈에 대한 자세한 문서에서 찾을 수 있습니다 &lt;a href=&quot;perlmod&quot;&gt;perlmod를&lt;/a&gt; , &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; , &lt;a href=&quot;perlmodstyle&quot;&gt;perlmodstyle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48efd59016764ae34dbd4dd35254250b9ade50c2" translate="yes" xml:space="preserve">
          <source>Detailed info about trie compilation.</source>
          <target state="translated">트라이 컴파일에 대한 자세한 정보.</target>
        </trans-unit>
        <trans-unit id="48a5bf693bd8174668fcec90fe1c7747773cff6b" translate="yes" xml:space="preserve">
          <source>Detailed instructions on how to build and install perl extension modules, including XS-type modules, is included. See 'BUILDING AND INSTALLING MODULES'.</source>
          <target state="translated">XS 유형 모듈을 포함하여 perl 확장 모듈을 빌드하고 설치하는 방법에 대한 자세한 지침이 포함되어 있습니다. '모듈 구축 및 설치'를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="971ecb47b81b9e3ebb8421ed26268b0335343299" translate="yes" xml:space="preserve">
          <source>Detailed signal management. This uses &lt;code&gt;POSIX::SigAction&lt;/code&gt; objects for the &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;oldaction&lt;/code&gt; arguments (the oldaction can also be just a hash reference). Consult your system's &lt;code&gt;sigaction&lt;/code&gt; manpage for details, see also &lt;code&gt;POSIX::SigRt&lt;/code&gt; .</source>
          <target state="translated">자세한 신호 관리. 이것은 &lt;code&gt;action&lt;/code&gt; 및 &lt;code&gt;oldaction&lt;/code&gt; 인수에 &lt;code&gt;POSIX::SigAction&lt;/code&gt; 오브젝트를 사용합니다 (oldaction은 해시 참조 일 수도 있습니다). 자세한 내용은 시스템의 &lt;code&gt;sigaction&lt;/code&gt; 맨 페이지를 참조하십시오 . &lt;code&gt;POSIX::SigRt&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8962644bde7a636ef0d0a40a98e1ababd89ad6f" translate="yes" xml:space="preserve">
          <source>Detailed signal management. This uses &lt;code&gt;POSIX::SigAction&lt;/code&gt; objects for the &lt;code&gt;action&lt;/code&gt; and &lt;code&gt;oldaction&lt;/code&gt; arguments (the oldaction can also be just a hash reference). Consult your system's &lt;code&gt;sigaction&lt;/code&gt; manpage for details, see also &lt;code&gt;POSIX::SigRt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d199abf24c61ad763382240bceaa4bb976c6faf" translate="yes" xml:space="preserve">
          <source>Details are in &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;&quot;Quote and Quote-like Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9fa89519b1cc82f7ef4510c084ac4535cbb9b1" translate="yes" xml:space="preserve">
          <source>Details are in &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;perlop#Quote-and-Quote-like-Operators&quot;&gt;perlop의 Quote 및 Quote-like Operators에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ba741c6d40d9b34740b66e9f99ec546651895d0" translate="yes" xml:space="preserve">
          <source>Details changes to Locale::Codes</source>
          <target state="translated">로케일 :: 코드 세부 사항 변경</target>
        </trans-unit>
        <trans-unit id="a19ea967f1e475201d32e01b8d87d22e29b2850e" translate="yes" xml:space="preserve">
          <source>Details on some modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ba379e83c3a5e1a2d0279f940c57dc6c7027f0" translate="yes" xml:space="preserve">
          <source>Detect the user's language preferences</source>
          <target state="translated">사용자의 언어 기본 설정 감지</target>
        </trans-unit>
        <trans-unit id="96ab3b83521cf8f1c7af801ea5cb7c8b350270a7" translate="yes" xml:space="preserve">
          <source>Detecting the problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e04b164f775f2394cd7b257c789eeab3703bf40" translate="yes" xml:space="preserve">
          <source>Determination of Perl Library and Installation Locations</source>
          <target state="translated">Perl 라이브러리 및 설치 위치 결정</target>
        </trans-unit>
        <trans-unit id="428b80cb8395cadc1a038a4e4bdb2355d7bb3c54" translate="yes" xml:space="preserve">
          <source>Determination of whether $BSD_STYLE should be set is left as an exercise to the reader.</source>
          <target state="translated">$ BSD_STYLE 설정 여부 결정은 독자에게 연습으로 남습니다.</target>
        </trans-unit>
        <trans-unit id="80939461d9f4a2ef5a18ce3dca6d5e6e0293a8f9" translate="yes" xml:space="preserve">
          <source>Determination of whether &lt;code&gt;$BSD_STYLE&lt;/code&gt; should be set is left as an exercise to the reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d8f9f38f16f8b5a3c700d3bd4a5cd28a740860" translate="yes" xml:space="preserve">
          <source>Determine if the server supports the specified feature. The return value is a list of lines the server responded with to describe the options that it supports for the given feature. If the feature is unsupported then the empty list is returned.</source>
          <target state="translated">서버가 지정된 기능을 지원하는지 확인하십시오. 리턴 값은 주어진 기능에 대해 지원하는 옵션을 설명하기 위해 서버가 응답 한 행 목록입니다. 기능이 지원되지 않으면 빈 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="46c27646774eae185d5079b386367766995dfee9" translate="yes" xml:space="preserve">
          <source>Determine libraries to use and how to use them</source>
          <target state="translated">사용할 라이브러리 및 사용 방법 결정</target>
        </trans-unit>
        <trans-unit id="c67c2a5f349f5c5c7e6e2488741e5e47a1ce5f04" translate="yes" xml:space="preserve">
          <source>Determine the architecture you'll be cross-compiling for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbb294be56602dd8d5e0f86c6b7c3dc8fd0ef0f" translate="yes" xml:space="preserve">
          <source>Determine the full paths (including file suffix) of one or more loadable files given their generic names and optionally one or more directories. Searches directories in @dl_library_path by default and returns an empty list if no files were found.</source>
          <target state="translated">일반 이름과 선택적으로 하나 이상의 디렉토리가 제공된 하나 이상의로드 가능한 파일의 전체 경로 (파일 접미사 포함)를 결정하십시오. 기본적으로 @dl_library_path에서 디렉토리를 검색하고 파일이 없으면 빈 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e03872d43ef76f638b7ad5fcef8b2bd7ebde0d86" translate="yes" xml:space="preserve">
          <source>Determine whether a &lt;code&gt;long double&lt;/code&gt; is supported by Perl. This should be used to determine whether to test &lt;code&gt;print_long_double&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ba310db2fe8fa11b7f48b3b00f700eda24440a" translate="yes" xml:space="preserve">
          <source>Determine whether a file is native to Cygwin by checking whether it resides inside the Cygwin installation (using Windows paths). If so, use &lt;a href=&quot;ExtUtils::MM_Unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; to determine if it may be a command. Otherwise use the tests from &lt;a href=&quot;ExtUtils::MM_Win32&quot;&gt;ExtUtils::MM_Win32&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47d159fd2f7d84a2dc5b895afa17d3e1c470e9d" translate="yes" xml:space="preserve">
          <source>Determine whether a file is native to Cygwin by checking whether it resides inside the Cygwin installation (using Windows paths). If so, use &lt;code&gt;ExtUtils::MM_Unix&lt;/code&gt; to determine if it may be a command. Otherwise use the tests from &lt;code&gt;ExtUtils::MM_Win32&lt;/code&gt; .</source>
          <target state="translated">파일이 Cygwin 설치 내에 있는지 (Windows 경로 사용) 여부를 확인하여 파일이 Cygwin에 고유한지 여부를 판별하십시오. 그렇다면 &lt;code&gt;ExtUtils::MM_Unix&lt;/code&gt; 를 사용 하여 명령인지 확인하십시오. 그렇지 않으면 &lt;code&gt;ExtUtils::MM_Win32&lt;/code&gt; 의 테스트를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a35731d2a8f0fd508c5b03e1f3c340b65af8b100" translate="yes" xml:space="preserve">
          <source>Determines if man pages should be generated and initializes MAN1PODS and MAN3PODS as appropriate.</source>
          <target state="translated">매뉴얼 페이지를 생성해야하는지 결정하고 MAN1PODS 및 MAN3PODS를 적절히 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="32b2b5cefa4d496f2ffa711bf6d062b35a6183bc" translate="yes" xml:space="preserve">
          <source>Determines if the given &lt;code&gt;$thing&lt;/code&gt; can be used as a filehandle.</source>
          <target state="translated">주어진 &lt;code&gt;$thing&lt;/code&gt; 을 파일 핸들로 사용할 수 있는지 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="81c97d633f09f436c3551fc2f985b2dd31ceb89b" translate="yes" xml:space="preserve">
          <source>Determines if the two hashes contain the same keys and values. This is a deep check.</source>
          <target state="translated">두 해시에 동일한 키와 값이 포함되어 있는지 확인합니다. 이것은 철저한 점검입니다.</target>
        </trans-unit>
        <trans-unit id="02bc22cbed7ebf5c21902f1d116056eb9bbd8381" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the failure in case it is successful. This color defaults to &lt;code&gt;'red'&lt;/code&gt; .</source>
          <target state="translated">실패한 경우에 대한 &lt;a href=&quot;../term/ansicolor&quot;&gt;Term :: ANSIColor&lt;/a&gt; 를 결정합니다 . 이 색상의 기본값은 &lt;code&gt;'red'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="46421b429d7fbec4c32a7efe5539900fa9227686" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../term/ansicolor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the summary in case it is successful. This color defaults to &lt;code&gt;'green'&lt;/code&gt; .</source>
          <target state="translated">성공적인 경우 요약 &lt;a href=&quot;../term/ansicolor&quot;&gt;: Term :: ANSIColor&lt;/a&gt; 를 결정합니다 . 이 색상의 기본값은 &lt;code&gt;'green'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9db3b80a99cefc4ac8ee1d42259ea000f4026e9" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the failure in case it is successful. This color defaults to &lt;code&gt;'red'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de89af076dcd2348b4086bb3c5ec0d8079e88a8" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;Term::ANSIColor&quot;&gt;Term::ANSIColor&lt;/a&gt; for the summary in case it is successful. This color defaults to &lt;code&gt;'green'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99525db85549ac64cdd5cb889d480f43dfc76de6" translate="yes" xml:space="preserve">
          <source>Determines the accessibility of a file.</source>
          <target state="translated">파일의 접근성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0ac6e93aa78866241a9a1ea97a746deee7e73a8e" translate="yes" xml:space="preserve">
          <source>Determines typemaps, xsubpp version, prototype behaviour.</source>
          <target state="translated">타입 맵, xsubpp 버전, 프로토 타입 동작을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="f07a1f637abae6218e8a7802badc87cffd6df457" translate="yes" xml:space="preserve">
          <source>Determines whether you do the left &lt;b&gt;operator&lt;/b&gt; first or the right &lt;b&gt;operator&lt;/b&gt; first when you have &amp;ldquo;A &lt;b&gt;operator&lt;/b&gt; B &lt;b&gt;operator&lt;/b&gt; C&amp;rdquo;, and the two operators are of the same precedence. Operators like &lt;code&gt;+&lt;/code&gt; are left associative, while operators like &lt;code&gt;**&lt;/code&gt; are right associative. See Camel chapter 3, &amp;ldquo;Unary and Binary Operators&amp;rdquo; for a list of operators and their associativity.</source>
          <target state="translated">&amp;ldquo;A &lt;b&gt;연산자&lt;/b&gt; B &lt;b&gt;연산자&lt;/b&gt; C&amp;rdquo;가 있고 두 연산자의 우선 순위가 동일한 경우 왼쪽 &lt;b&gt;연산자를&lt;/b&gt; 먼저 수행할지 오른쪽 &lt;b&gt;연산자를&lt;/b&gt; 먼저 수행할지 결정합니다 . &lt;code&gt;+&lt;/code&gt; 와 같은 연산자 는 연관되어 있고 &lt;code&gt;**&lt;/code&gt; 와 같은 연산자 는 오른쪽 연관입니다. 연산자와 그 연관성에 대해서는 Camel 3 장, &quot;단항 및 이항 연산자&quot;를 참조하십시오.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d7f6e99a2b6560d949ac39cd5f548b880a73d13b" translate="yes" xml:space="preserve">
          <source>Determines whether you have delete access to a file. If you do, &lt;code&gt;candelete&lt;/code&gt; returns true. If you don't, or its argument isn't a legal file specification, &lt;code&gt;candelete&lt;/code&gt; returns FALSE. Unlike other file tests, the argument to &lt;code&gt;candelete&lt;/code&gt; must be a file name (not a FileHandle), and, since it's an XSUB, it's a list operator, so you need to be careful about parentheses. Both of these restrictions may be removed in the future if the functionality of &lt;code&gt;candelete&lt;/code&gt; becomes part of the Perl core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c8bafa598045542a6e12bdae08698fa56ba1b8" translate="yes" xml:space="preserve">
          <source>Determines which of the sets of installation directories to choose: perl, site or vendor. Defaults to site.</source>
          <target state="translated">선택할 설치 디렉토리 세트 (perl, site 또는 vendor)를 결정합니다. 기본값은 사이트입니다.</target>
        </trans-unit>
        <trans-unit id="bba5b2e65a661d27394fb8c061d3d51455420899" translate="yes" xml:space="preserve">
          <source>Determining the Context</source>
          <target state="translated">상황 결정</target>
        </trans-unit>
        <trans-unit id="3ecab9eb72cc6dfc1bcb8e4baecb3e17d8edcf33" translate="yes" xml:space="preserve">
          <source>Devel.U</source>
          <target state="translated">Devel.U</target>
        </trans-unit>
        <trans-unit id="59c2da97f18e93336ce8461cd4d06e13e3e11849" translate="yes" xml:space="preserve">
          <source>Devel::CheckOS</source>
          <target state="translated">Devel::CheckOS</target>
        </trans-unit>
        <trans-unit id="e49017f730b71ed8f2cb4f3cd8915c7e412fb169" translate="yes" xml:space="preserve">
          <source>Devel::Cover</source>
          <target state="translated">Devel::Cover</target>
        </trans-unit>
        <trans-unit id="767fa2675d40ddff8bd54cd3a27f726736df9a77" translate="yes" xml:space="preserve">
          <source>Devel::Cover does not support threads. CAN_THREAD will return false if Devel::Cover is loaded before the check is first run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c39aea2543b8523b0f33dbb117b8a3d9253fb8" translate="yes" xml:space="preserve">
          <source>Devel::DProf</source>
          <target state="translated">Devel::DProf</target>
        </trans-unit>
        <trans-unit id="2fe8a2869dcf27e5ec059c3e7e5772ec9be58658" translate="yes" xml:space="preserve">
          <source>Devel::DTrace::Provider</source>
          <target state="translated">Devel::DTrace::Provider</target>
        </trans-unit>
        <trans-unit id="ccde7e8b696b5ea06bba6178d203f16332d8acef" translate="yes" xml:space="preserve">
          <source>Devel::FastProf</source>
          <target state="translated">Devel::FastProf</target>
        </trans-unit>
        <trans-unit id="11215cfa0c659675e0e4ea40e3abc5e714feee1f" translate="yes" xml:space="preserve">
          <source>Devel::NYTProf</source>
          <target state="translated">Devel::NYTProf</target>
        </trans-unit>
        <trans-unit id="93fefc93ea4e5ce72e46483e30bdcdb72752bc35" translate="yes" xml:space="preserve">
          <source>Devel::PPPort</source>
          <target state="translated">Devel::PPPort</target>
        </trans-unit>
        <trans-unit id="7ffae19dcafff8088943ef185c49a680d59a15ac" translate="yes" xml:space="preserve">
          <source>Devel::PPPort - Perl/Pollution/Portability</source>
          <target state="translated">개발 :: PPPort-펄 / 오염 / 이동성</target>
        </trans-unit>
        <trans-unit id="3921057b50b0060084d8d65b7996993cf1ed9750" translate="yes" xml:space="preserve">
          <source>Devel::Peek</source>
          <target state="translated">Devel::Peek</target>
        </trans-unit>
        <trans-unit id="e14a96c568c781af1b5e318bd4b44427491f52d9" translate="yes" xml:space="preserve">
          <source>Devel::Peek - A data debugging tool for the XS programmer</source>
          <target state="translated">Devel :: Peek-XS 프로그래머를위한 데이터 디버깅 도구</target>
        </trans-unit>
        <trans-unit id="591a540c3f692dc8379dc38f7e57b50c1e10292e" translate="yes" xml:space="preserve">
          <source>Devel::Peek contains functions which allows raw Perl datatypes to be manipulated from a Perl script. This is used by those who do XS programming to check that the data they are sending from C to Perl looks as they think it should look. The trick, then, is to know what the raw datatype is supposed to look like when it gets to Perl. This document offers some tips and hints to describe good and bad raw data.</source>
          <target state="translated">Devel :: Peek에는 원시 Perl 데이터 유형을 Perl 스크립트에서 조작 할 수있는 기능이 있습니다. 이것은 XS 프로그래밍을 수행하는 사람들이 C에서 Perl로 보내는 데이터가 보이는 것처럼 보이는지 확인하는 데 사용됩니다. 따라서 트릭은 원시 데이터 유형이 Perl에 도달했을 때 어떤 모양이되어야하는지 알아야합니다. 이 문서는 좋은 원시 데이터와 나쁜 원시 데이터를 설명하기위한 팁과 힌트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="db1f06d5f74de3011e9cc4bc49d43cef041da2cf" translate="yes" xml:space="preserve">
          <source>Devel::Peek supplies a &lt;code&gt;Dump()&lt;/code&gt; function which can dump a raw Perl datatype, and &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; function to report on memory usage (if perl is compiled with corresponding option). The function DeadCode() provides statistics on the data &quot;frozen&quot; into inactive &lt;code&gt;CV&lt;/code&gt; . Devel::Peek also supplies &lt;code&gt;SvREFCNT()&lt;/code&gt; which can query reference counts on SVs. This document will take a passive, and safe, approach to data debugging and for that it will describe only the &lt;code&gt;Dump()&lt;/code&gt; function.</source>
          <target state="translated">Devel :: Peek 는 원시 Perl 데이터 유형을 덤프 할 수 있는 &lt;code&gt;Dump()&lt;/code&gt; 함수와 &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; 함수를 제공하여 메모리 사용을보고합니다 (perl이 해당 옵션으로 컴파일 된 경우). DeadCode () 함수는 &quot;동결 된&quot;데이터에 대한 통계를 비활성 &lt;code&gt;CV&lt;/code&gt; 로 제공 합니다. Devel :: Peek는 SV의 참조 카운트를 쿼리 할 수있는 &lt;code&gt;SvREFCNT()&lt;/code&gt; 도 제공 합니다. 이 문서는 데이터 디버깅에 대해 수동적이고 안전한 수동 접근 방식을 취하며 &lt;code&gt;Dump()&lt;/code&gt; 함수 만 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="7f064d002875b523b7ebc7469674f03083935f00" translate="yes" xml:space="preserve">
          <source>Devel::Peek supplies a &lt;code&gt;Dump()&lt;/code&gt; function which can dump a raw Perl datatype, and &lt;code&gt;mstat(&quot;marker&quot;)&lt;/code&gt; function to report on memory usage (if perl is compiled with corresponding option). The function DeadCode() provides statistics on the data &quot;frozen&quot; into inactive &lt;code&gt;CV&lt;/code&gt;. Devel::Peek also supplies &lt;code&gt;SvREFCNT()&lt;/code&gt; which can query reference counts on SVs. This document will take a passive, and safe, approach to data debugging and for that it will describe only the &lt;code&gt;Dump()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd06cacef5c6992e80eae6f0b88092dd28458a5a" translate="yes" xml:space="preserve">
          <source>Devel::Profiler</source>
          <target state="translated">Devel::Profiler</target>
        </trans-unit>
        <trans-unit id="4b6535e01c52786d4e3f3ca2b00ca3272e9f6d30" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber</source>
          <target state="translated">Devel::SelfStubber</target>
        </trans-unit>
        <trans-unit id="b5469167c418142a031a1a19dcd7b0ac06472cae" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber - generate stubs for a SelfLoading module</source>
          <target state="translated">Devel :: SelfStubber-자체로드 모듈에 대한 스텁 생성</target>
        </trans-unit>
        <trans-unit id="c12151c156a6bb57f46bf2cfabec163c1bfc0f60" translate="yes" xml:space="preserve">
          <source>Devel::SelfStubber prints the stubs you need to put in the module before the __DATA__ token (or you can get it to print the entire module with stubs correctly placed). The stubs ensure that if a method is called, it will get loaded. They are needed specifically for inherited autoloaded methods.</source>
          <target state="translated">Devel :: SelfStubber는 __DATA__ 토큰 이전에 모듈에 넣어야하는 스텁을 인쇄합니다 (또는 스텁이 올바르게 배치 된 전체 모듈을 인쇄하도록 할 수 있음). 스텁은 메소드가 호출되면로드되도록합니다. 상속 된 자동로드 된 메소드에 특별히 필요합니다.</target>
        </trans-unit>
        <trans-unit id="842dcd37ebf74b06348dc557d220529763bf8eb5" translate="yes" xml:space="preserve">
          <source>Devel::SmallProf</source>
          <target state="translated">Devel::SmallProf</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="d9ffe88162ace37c72e458ee67a70fb3d18d4395" translate="yes" xml:space="preserve">
          <source>Development Support</source>
          <target state="translated">개발 지원</target>
        </trans-unit>
        <trans-unit id="f0c7babf29efe97f8e794e98c4e99a03a18a4c41" translate="yes" xml:space="preserve">
          <source>Device major number in case of a special file</source>
          <target state="translated">특수 파일의 경우 장치 주 번호</target>
        </trans-unit>
        <trans-unit id="2c941665c705f296265e4a2b31a60000a96baced" translate="yes" xml:space="preserve">
          <source>Device minor number in case of a special file</source>
          <target state="translated">특수 파일의 경우 장치 부 번호</target>
        </trans-unit>
        <trans-unit id="5c1f3191912a5ab66456afca3234971ddd741a55" translate="yes" xml:space="preserve">
          <source>Device::Chip</source>
          <target state="translated">Device::Chip</target>
        </trans-unit>
        <trans-unit id="dc9aaa54b0265e3705c4951395ee7c74e293de91" translate="yes" xml:space="preserve">
          <source>DeviceIoControl</source>
          <target state="translated">DeviceIoControl</target>
        </trans-unit>
        <trans-unit id="a114943d70de3b8f77895975f05368012d36312b" translate="yes" xml:space="preserve">
          <source>Diag event type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7b51236ed970aee0667e1f1fe4a778ffb14074" translate="yes" xml:space="preserve">
          <source>Diagnostic messages derive from the</source>
          <target state="translated">진단 메시지는</target>
        </trans-unit>
        <trans-unit id="3af2279f9e306acd0a4644e2b0f2f48a1e06d8d9" translate="yes" xml:space="preserve">
          <source>Diagnostics</source>
          <target state="translated">Diagnostics</target>
        </trans-unit>
        <trans-unit id="6bfccdfc7a2fd4625674e0ec4e420eb2a45734b4" translate="yes" xml:space="preserve">
          <source>Diagnostics messages can be simple strings, data structures, or instances of &lt;a href=&quot;Test2::EventFacet::Info::Table&quot;&gt;Test2::EventFacet::Info::Table&lt;/a&gt; (which are converted inline into the &lt;a href=&quot;Test2::EventFacet::Info&quot;&gt;Test2::EventFacet::Info&lt;/a&gt; structure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7384d267d08fd27a3839e35790e816a0d2670114" translate="yes" xml:space="preserve">
          <source>Diagnostics messages, typically rendered to STDERR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12e989f1fa699061a1906fb84c40da51f94d183" translate="yes" xml:space="preserve">
          <source>Diagnostics: - &quot;Illegal state option: %s&quot;</source>
          <target state="translated">진단 :- &quot;잘못된 상태 옵션 : % s&quot;</target>
        </trans-unit>
        <trans-unit id="e17f7baf040772254cb855eb21dd15b046cdb8d1" translate="yes" xml:space="preserve">
          <source>Did not produce a valid header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35fa307cb8f3def28846755bdcd31b74832d8c4" translate="yes" xml:space="preserve">
          <source>Did the test pass?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f527cf87d4af2700906e25b7adad32b0530808f8" translate="yes" xml:space="preserve">
          <source>Did the test really pass? That is, did the pass come from Test::Builder-&amp;gt;ok() or did it pass because it was a TODO test?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6eede6bc5088117b1ea81e74f270fd854b6d4d3" translate="yes" xml:space="preserve">
          <source>Did we mention that you should definitely consider using the &lt;b&gt;use &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;&lt;/b&gt; pragma?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24aeba6cea55e3491e6f6e028d622f79e9da9608" translate="yes" xml:space="preserve">
          <source>Did we mention that you should definitely consider using the &lt;b&gt;use warnings&lt;/b&gt; pragma?</source>
          <target state="translated">&lt;b&gt;사용 경고&lt;/b&gt; pragma &lt;b&gt;사용을&lt;/b&gt; 반드시 고려해야한다고 언급 했습니까 ?</target>
        </trans-unit>
        <trans-unit id="9b6cbb2dd2135deb31b16770182a2ec8c70c6f29" translate="yes" xml:space="preserve">
          <source>Did you really want to know? :-) For more gory details on getting regular expressions to work, have a look at &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt;, and to decode the mysterious labels (BOL and CURLYN, etc. above), see &lt;a href=&quot;perldebguts&quot;&gt;perldebguts&lt;/a&gt;.</source>
          <target state="translated">정말로 알고 싶었습니까? :-) 정규 표현식을 작동시키는 방법에 대한 자세한 내용은 &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; , &lt;a href=&quot;perlretut&quot;&gt;perlretut&lt;/a&gt; 및 신비한 레이블 (위의 BOL 및 CURLYN 등)을 확인하십시오 . &lt;a href=&quot;perldebguts&quot;&gt;perldebguts를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e94a1367bdde0a3b30f5210e296be7c066548b1d" translate="yes" xml:space="preserve">
          <source>Did you run your programs with &lt;code&gt;-w&lt;/code&gt; switch? See &lt;a href=&quot;#Starting-OS%2F2-%28and-DOS%29-programs-under-Perl&quot;&gt;&quot;Starting OS/2 (and DOS) programs under Perl&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c365b19f02fa9700446bb2dfae00cddef737c1ed" translate="yes" xml:space="preserve">
          <source>Did you run your programs with &lt;code&gt;-w&lt;/code&gt; switch? See &lt;a href=&quot;http://search.cpan.org/perldoc/Starting%20OS#2-(and-DOS)-programs-under-Perl&quot;&gt;2 (and DOS) programs under Perl in Starting OS&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; 스위치를 사용 하여 프로그램을 실행 했습니까 ? &lt;a href=&quot;http://search.cpan.org/perldoc/Starting%20OS#2-(and-DOS)-programs-under-Perl&quot;&gt;OS 시작의 Perl 아래 2 (및 DOS) 프로그램을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d9260877849ca2a1a5841624da6c266167f8e3c" translate="yes" xml:space="preserve">
          <source>Did you use &lt;a href=&quot;ExtUtils::Embed&quot;&gt;ExtUtils::Embed&lt;/a&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44a0b6cfa2e8e8711c5a9b4665955570db35afc" translate="yes" xml:space="preserve">
          <source>Didn't anyone ever tell you web-page hit counters were useless? They don't count number of hits, they're a waste of time, and they serve only to stroke the writer's vanity. It's better to pick a random number; they're more realistic.</source>
          <target state="translated">웹 페이지 조회수 카운터가 쓸모 없다고 말한 사람이 없습니까? 그들은 적중 횟수를 세지 않고 시간 낭비이며 작가의 허영심을 치기 만합니다. 난수를 선택하는 것이 좋습니다. 그들은 더 현실적입니다.</target>
        </trans-unit>
        <trans-unit id="de35dca213966232628ded8b499a88baf25eec19" translate="yes" xml:space="preserve">
          <source>Die on HUP, INT, PIPE or TERM, except don't change the behavior for signals which are already trapped or ignored:</source>
          <target state="translated">이미 갇히거나 무시 된 신호의 동작을 변경하지 않는 한 HUP, INT, PIPE 또는 TERM에서 죽습니다.</target>
        </trans-unit>
        <trans-unit id="0b65dd725b89443cd082d2b1fbb5c871c07b811a" translate="yes" xml:space="preserve">
          <source>Die on HUP, INT, PIPE or TERM:</source>
          <target state="translated">HUP, INT, PIPE 또는 TERM에서 다이 :</target>
        </trans-unit>
        <trans-unit id="7370d007d2f0750cfcb06f3ae1a311fa8ce10185" translate="yes" xml:space="preserve">
          <source>Die on INT or QUIT:</source>
          <target state="translated">INT 또는 QUIT에서 죽습니다 :</target>
        </trans-unit>
        <trans-unit id="de3e3f090fef16d61db17c82fcb979d37ca68a0d" translate="yes" xml:space="preserve">
          <source>Die on receipt one of an of the &lt;b&gt;normal-signals&lt;/b&gt; which is currently &lt;b&gt;untrapped&lt;/b&gt;, provide a stack trace on receipt of &lt;b&gt;any&lt;/b&gt; of the &lt;b&gt;error-signals&lt;/b&gt;:</source>
          <target state="translated">의 수신 된 하나의 다이에 &lt;b&gt;정상 신호를&lt;/b&gt; 현재 &lt;b&gt;포착되지 않은&lt;/b&gt; , 수신시 스택 트레이스를 제공하는 &lt;b&gt;임의&lt;/b&gt; 의 &lt;b&gt;에러 신호&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="68316444b99c6ba68313bede5aa8603526904561" translate="yes" xml:space="preserve">
          <source>Died</source>
          <target state="translated">Died</target>
        </trans-unit>
        <trans-unit id="ba441dab8e607c94b508525a17abee026d45b519" translate="yes" xml:space="preserve">
          <source>Dies if something fails. Does not return anything useful.</source>
          <target state="translated">무언가 실패하면 죽는다. 유용한 것을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f81677da87b912ca4cbc2adcd260fa40bc3569e4" translate="yes" xml:space="preserve">
          <source>Dies on invalid arguments.</source>
          <target state="translated">유효하지 않은 인수로 사망합니다.</target>
        </trans-unit>
        <trans-unit id="ff49095a95255fd00fd15d75e6567dd8a12a4746" translate="yes" xml:space="preserve">
          <source>Dies with &quot;QUITing...&quot; if WM_QUIT message is obtained.</source>
          <target state="translated">WM_QUIT 메시지가 표시되면 &quot;QUITing ...&quot;으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="4df44d1ca612254d8b6146ed208bbeb09ddfe82a" translate="yes" xml:space="preserve">
          <source>Dies with &lt;code&gt;@message&lt;/code&gt; but the message will appear to come from the point where the original test function was called (&lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;@message&lt;/code&gt; 로 죽지 만 원래 테스트 함수가 호출 된 시점 ( &lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt; ) 에서 메시지가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="d42c8ec5b5359bb10d75d03dea68cbed9c90a9ea" translate="yes" xml:space="preserve">
          <source>Dies with &lt;code&gt;@message&lt;/code&gt; but the message will appear to come from the point where the original test function was called (&lt;code&gt;$tb-&amp;gt;caller&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0b600e20a7af68665f367d76b7faa7b80ba746" translate="yes" xml:space="preserve">
          <source>Difference between &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;autoload&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 와 &lt;code&gt;autoload&lt;/code&gt; 로드의 차이점</target>
        </trans-unit>
        <trans-unit id="1f4478706dbd396a43de3090b3f058233138f6af" translate="yes" xml:space="preserve">
          <source>Difference between load and autoload</source>
          <target state="translated">로드와 오토로드의 차이점</target>
        </trans-unit>
        <trans-unit id="5abf26e6f18ac0caefbfb650bcbf55d767c0f719" translate="yes" xml:space="preserve">
          <source>Difference of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af858e1241391fd569b50d644bb00507f74f4034" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differences</target>
        </trans-unit>
        <trans-unit id="38024e12015fb8cbceae437a2c486569781a63ed" translate="yes" xml:space="preserve">
          <source>Differences from Perl 6</source>
          <target state="translated">Perl 6과의 차이점</target>
        </trans-unit>
        <trans-unit id="e732df46410c2ef1dfdc6790f4ee2fc04278db02" translate="yes" xml:space="preserve">
          <source>Differences from Raku</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331cb030b664a4d11f924279069f94d488d3faa3" translate="yes" xml:space="preserve">
          <source>Different CPUs store integers and floating point numbers in different orders (called</source>
          <target state="translated">다른 CPU는 정수와 부동 소수점 숫자를 다른 순서로 저장합니다 (</target>
        </trans-unit>
        <trans-unit id="a929821b5e04175b03d1cd12d11aa732114cf34b" translate="yes" xml:space="preserve">
          <source>Different Delimiters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95050ad9d7abe4a623380560a27bb068b344215" translate="yes" xml:space="preserve">
          <source>Different classes of media that a device can support. Used in the &lt;code&gt;$uMediaType&lt;/code&gt; field of a &lt;code&gt;DISK_GEOMETRY&lt;/code&gt; structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bda7000c880740a37cbf94090331ac6cabf1bab" translate="yes" xml:space="preserve">
          <source>Different definitions of Perl are given in &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt;, &lt;a href=&quot;perlfaq1&quot;&gt;perlfaq1&lt;/a&gt; and no doubt other places. From this we can determine that Perl is different things to different people, but that lots of people think it's at least worth writing about.</source>
          <target state="translated">Perl의 다른 정의는 &lt;a href=&quot;perl&quot;&gt;perl&lt;/a&gt; , &lt;a href=&quot;perlfaq1&quot;&gt;perlfaq1&lt;/a&gt; 및 다른 장소에서 제공됩니다. 이것으로부터 우리는 Perl이 다른 사람들과는 다른 것들이라고 결정할 수 있지만, 많은 사람들은 그것이 적어도 쓸만한 가치가 있다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="7dccaaf84bf4def2fd87e2d3e385599fbd55f83d" translate="yes" xml:space="preserve">
          <source>Different escape characters can be specified for different delimiters. For example, to specify that '/' is the escape for single quotes and '%' is the escape for double quotes:</source>
          <target state="translated">다른 분리 문자에 대해 다른 이스케이프 문자를 지정할 수 있습니다. 예를 들어, '/'가 작은 따옴표의 이스케이프이고 '%'는 큰 따옴표의 이스케이프임을 지정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f9a49cb812bf417ffcc0cc6f39c98fe84fa2ebdf" translate="yes" xml:space="preserve">
          <source>Different handles can have different buffering schemes. The &quot;top&quot; layer could be the &quot;mmap&quot; layer if reading disk files was quicker using &lt;code&gt;mmap&lt;/code&gt; than &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;. An &quot;unbuffered&quot; stream can be implemented simply by not having a buffer layer.</source>
          <target state="translated">핸들마다 버퍼링 방식이 다를 수 있습니다. 디스크 파일을 읽는 것이 &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 보다 &lt;code&gt;mmap&lt;/code&gt; 을 사용하는 것이 더 빠르면 &quot;top&quot;레이어는 &quot;mmap&quot;레이어가 될 수 있습니다 . 버퍼링되지 않은 &quot;버퍼링되지 않은&quot;스트림은 단순히 버퍼 레이어를 갖지 않고 구현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="012a7e1711fbe2519f8ad076d7828befc23dbd11" translate="yes" xml:space="preserve">
          <source>Different handles can have different buffering schemes. The &quot;top&quot; layer could be the &quot;mmap&quot; layer if reading disk files was quicker using &lt;code&gt;mmap&lt;/code&gt; than &lt;code&gt;read&lt;/code&gt;. An &quot;unbuffered&quot; stream can be implemented simply by not having a buffer layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee681ba258c7b2da3e8972edb7ba868618d14b60" translate="yes" xml:space="preserve">
          <source>Different implementations of threads</source>
          <target state="translated">스레드의 다른 구현</target>
        </trans-unit>
        <trans-unit id="e3379dfb99801372d7cddbcebddb248079f56470" translate="yes" xml:space="preserve">
          <source>Different low-level libraries use different formats to store the numbers. However, you should &lt;b&gt;NOT&lt;/b&gt; depend on the number having a specific format internally.</source>
          <target state="translated">다른 저수준 라이브러리는 다른 형식을 사용하여 숫자를 저장합니다. 그러나, 당신은해야 &lt;b&gt;하지&lt;/b&gt; 내부적으로 특정 형식을 갖는 수에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="968ef79ccdd769ce74761479fe855c0adf257d6a" translate="yes" xml:space="preserve">
          <source>Different packages may implement different levels of debug but a non-zero value results in copies of all commands and responses also being sent to STDERR.</source>
          <target state="translated">다른 패키지는 다른 수준의 디버그를 구현할 수 있지만 값이 0이 아닌 경우 모든 명령 및 응답의 사본이 STDERR로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="8f55cf4436cb1eaf5bfcf390f661558255ea8243" translate="yes" xml:space="preserve">
          <source>Differing widths can cause truncation even between platforms of equal endianness. The platform of shorter width loses the upper parts of the number. There is no good solution for this problem except to avoid transferring or storing raw binary numbers.</source>
          <target state="translated">너비가 다르면 엔디안이 동일한 플랫폼 간에도 잘림이 발생할 수 있습니다. 폭이 짧은 플랫폼은 숫자의 상단 부분을 잃습니다. 원시 이진 숫자를 전송하거나 저장하지 않는 것 외에는이 문제에 대한 좋은 해결책이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0c96be1511684098b8e0937528ae9f73aed12615" translate="yes" xml:space="preserve">
          <source>Differs slightly from &lt;code&gt;socketpair&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; in that the argument list is a bit simpler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4999085ccaf90bf99a08a58eb299f30d409174" translate="yes" xml:space="preserve">
          <source>Dig into a bunch of modules to see how they're written. I'd suggest starting with &lt;a href=&quot;Text::Tabs&quot;&gt;Text::Tabs&lt;/a&gt;, since it's in the standard library and is nice and simple, and then looking at something a little more complex like &lt;a href=&quot;File::Copy&quot;&gt;File::Copy&lt;/a&gt;. For object oriented code, &lt;a href=&quot;WWW::Mechanize&quot;&gt;WWW::Mechanize&lt;/a&gt; or the &lt;code&gt;Email::*&lt;/code&gt; modules provide some good examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248216e8bd5493fa776c21a71aab73557a333ad5" translate="yes" xml:space="preserve">
          <source>Dig into a bunch of modules to see how they're written. I'd suggest starting with &lt;a href=&quot;text/tabs&quot;&gt;Text::Tabs&lt;/a&gt;, since it's in the standard library and is nice and simple, and then looking at something a little more complex like &lt;a href=&quot;file/copy&quot;&gt;File::Copy&lt;/a&gt;. For object oriented code, &lt;code&gt;WWW::Mechanize&lt;/code&gt; or the &lt;code&gt;Email::*&lt;/code&gt; modules provide some good examples.</source>
          <target state="translated">작성 방법을 보려면 여러 모듈을 파헤쳐보십시오. 표준 라이브러리에 있고 멋지고 단순하기 때문에 &lt;a href=&quot;text/tabs&quot;&gt;Text :: Tabs로&lt;/a&gt; 시작하는 것이 좋습니다. 그런 다음 &lt;a href=&quot;file/copy&quot;&gt;File :: Copy&lt;/a&gt; 와 같은 좀 더 복잡한 것을 찾으십시오 . 객체 지향 코드의 경우 &lt;code&gt;WWW::Mechanize&lt;/code&gt; 또는 &lt;code&gt;Email::*&lt;/code&gt; 모듈이 좋은 예입니다.</target>
        </trans-unit>
        <trans-unit id="47fdd58bee4dc86df2b978107102a22b9c44345b" translate="yes" xml:space="preserve">
          <source>Digest</source>
          <target state="translated">Digest</target>
        </trans-unit>
        <trans-unit id="3bd067b7b9ba0e3842954b342b6e04b9508a77ac" translate="yes" xml:space="preserve">
          <source>Digest - Modules that calculate message digests</source>
          <target state="translated">다이제스트-메시지 다이제스트를 계산하는 모듈</target>
        </trans-unit>
        <trans-unit id="4c9cbdb7c115f81acd2c0edba69fb8ccce5eb45e" translate="yes" xml:space="preserve">
          <source>Digest base class</source>
          <target state="translated">다이제스트 기본 클래스</target>
        </trans-unit>
        <trans-unit id="3cd23511cf79299d4bb6923e10fe169a355c096e" translate="yes" xml:space="preserve">
          <source>Digest implementations might want to inherit from this class to get this implementations of the alternative</source>
          <target state="translated">다이제스트 구현은이 클래스에서 상속하여 대안의 구현을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2dd6f444a52ab6eb8232c6d9cf3d9b6b63eeb3b" translate="yes" xml:space="preserve">
          <source>Digest speed</source>
          <target state="translated">다이제스트 속도</target>
        </trans-unit>
        <trans-unit id="3263622a2f40559c02778432d6fee146399b6225" translate="yes" xml:space="preserve">
          <source>Digest::MD5</source>
          <target state="translated">Digest::MD5</target>
        </trans-unit>
        <trans-unit id="cc981cf57197ab4f6949f081dbfc7ac803760c7a" translate="yes" xml:space="preserve">
          <source>Digest::MD5 - Perl interface to the MD5 Algorithm</source>
          <target state="translated">Digest :: MD5-MD5 알고리즘에 대한 Perl 인터페이스</target>
        </trans-unit>
        <trans-unit id="10a5bb250c6cf1bbf42816d48c87400d9e093658" translate="yes" xml:space="preserve">
          <source>Digest::SHA</source>
          <target state="translated">Digest::SHA</target>
        </trans-unit>
        <trans-unit id="b4c92820a2ed37105ded93f12e77864cbec95f5b" translate="yes" xml:space="preserve">
          <source>Digest::SHA - Perl extension for SHA-1/224/256/384/512</source>
          <target state="translated">다이제스트 :: SHA-SHA-1 / 224 / 256 / 384 / 512 용 Perl 확장</target>
        </trans-unit>
        <trans-unit id="af0465342315c6f4795df27a00078fb3582cb96c" translate="yes" xml:space="preserve">
          <source>Digest::SHA is a complete implementation of the NIST Secure Hash Standard. It gives Perl programmers a convenient way to calculate SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256 message digests. The module can handle all types of input, including partial-byte data.</source>
          <target state="translated">Digest :: SHA는 NIST Secure Hash Standard를 완벽하게 구현 한 것입니다. Perl 프로그래머는 SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512 / 224 및 SHA-512 / 256 메시지 요약을 편리하게 계산할 수 있습니다. 모듈은 부분 바이트 데이터를 포함하여 모든 유형의 입력을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="a585ac809a2181c7da557bcfa5ebd31235578947" translate="yes" xml:space="preserve">
          <source>Digest::SHA is written in C for speed. If your platform lacks a C compiler, you can install the functionally equivalent (but much slower) &lt;a href=&quot;Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac9dbc726cb5a61beb1d19b4dd6e34bff1be212" translate="yes" xml:space="preserve">
          <source>Digest::SHA is written in C for speed. If your platform lacks a C compiler, you can install the functionally equivalent (but much slower) &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest::SHA::PurePerl&lt;/a&gt; module.</source>
          <target state="translated">Digest :: SHA는 속도를 위해 C로 작성됩니다. 플랫폼에 C 컴파일러가없는 경우 기능적으로 동등한 (그러나 훨씬 느리게) &lt;a href=&quot;http://search.cpan.org/perldoc/Digest::SHA::PurePerl&quot;&gt;Digest :: SHA :: PurePerl&lt;/a&gt; 모듈을 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfe5335cdbe39b8c32cfd3452cb43174a1ee9bb2" translate="yes" xml:space="preserve">
          <source>Digest::base</source>
          <target state="translated">Digest::base</target>
        </trans-unit>
        <trans-unit id="4bbbfedd2eb308dc398c540fc645898c082db6ea" translate="yes" xml:space="preserve">
          <source>Digest::base - Digest base class</source>
          <target state="translated">다이제스트 :: base-다이제스트 기본 클래스</target>
        </trans-unit>
        <trans-unit id="e1e35cd383e349a46e8ddfc8d07b7e38dc9e4a97" translate="yes" xml:space="preserve">
          <source>Digest::file</source>
          <target state="translated">Digest::file</target>
        </trans-unit>
        <trans-unit id="b818bfd43f1dc832b02e92b31d19ae9f904b4bd8" translate="yes" xml:space="preserve">
          <source>Digest::file - Calculate digests of files</source>
          <target state="translated">다이제스트 :: file-파일 다이제스트 계산</target>
        </trans-unit>
        <trans-unit id="2260ce49306460c8a2ef501939f29ad6ddd4e934" translate="yes" xml:space="preserve">
          <source>Digits</source>
          <target state="translated">Digits</target>
        </trans-unit>
        <trans-unit id="392f94d8c0ee92db7ab40a881f035b7ef8b3746d" translate="yes" xml:space="preserve">
          <source>DirHandle</source>
          <target state="translated">DirHandle</target>
        </trans-unit>
        <trans-unit id="8dddc843bd4df8e2e63964a867a859b6a2de4d5b" translate="yes" xml:space="preserve">
          <source>DirHandle - (obsolete) supply object methods for directory handles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef108ac2030e9cea15c6f1ceb48f01986539dc6" translate="yes" xml:space="preserve">
          <source>DirHandle - supply object methods for directory handles</source>
          <target state="translated">DirHandle-디렉토리 핸들을위한 객체 메소드 제공</target>
        </trans-unit>
        <trans-unit id="ee4d61306089ee2a3dbe18d989e093b9888bc1ae" translate="yes" xml:space="preserve">
          <source>Direct &lt;code&gt;https&lt;/code&gt; connections are supported only if &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; 1.56 or greater and &lt;a href=&quot;Net::SSLeay&quot;&gt;Net::SSLeay&lt;/a&gt; 1.49 or greater are installed. An exception will be thrown if new enough versions of these modules are not installed or if the SSL encryption fails. You can also use &lt;code&gt;HTTP::Tiny::can_ssl()&lt;/code&gt; utility function that returns boolean to see if the required modules are installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d585153d617420e860632db0a6d3e2c3a4042d09" translate="yes" xml:space="preserve">
          <source>Direct access to &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; should be avoided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91d0156df1ec1e83f412872b05e19d16ad2c59a" translate="yes" xml:space="preserve">
          <source>Direct pointer to the end of the chunk of text currently being lexed, the end of the lexer buffer. This is equal to &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr)
+ SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt; . A &lt;code&gt;NUL&lt;/code&gt; character (zero octet) is always located at the end of the buffer, and does not count as part of the buffer's contents.</source>
          <target state="translated">현재 어휘 분석중인 텍스트 청크의 끝, 어휘 분석기 버퍼의 끝을 가리키는 직접 포인터. 이것은 &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr) + SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt; . &lt;code&gt;NUL&lt;/code&gt; 의 문자 (제로 옥텟)은 항상 버퍼의 끝에 위치하며, 버퍼의 내용의 한 부분으로 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86232f003188f9beb2b9cb2011336f64626c5fc1" translate="yes" xml:space="preserve">
          <source>Direct pointer to the end of the chunk of text currently being lexed, the end of the lexer buffer. This is equal to &lt;code&gt;SvPVX(PL_parser-&amp;gt;linestr) + SvCUR(PL_parser-&amp;gt;linestr)&lt;/code&gt;. A &lt;code&gt;NUL&lt;/code&gt; character (zero octet) is always located at the end of the buffer, and does not count as part of the buffer's contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d9e8785d5c2cebf71e5748cc2d6f34072adbf8" translate="yes" xml:space="preserve">
          <source>Direct questions, comments, and the unlikely bug report (ahem) direct comments toward:</source>
          <target state="translated">직접 질문, 의견 및 혹시 버그 보고서 (ahem)는 다음에 대한 의견을 직접 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c931edeb7d4e9881a04db1e6c541bbb09c790918" translate="yes" xml:space="preserve">
          <source>Direct versus by-reference assignment of filehandles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f369f2e0fb633f45ca0517465baa722c13fbd48b" translate="yes" xml:space="preserve">
          <source>Directed rounding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2fa68d6fded8ba99af776dc79ad66973228a51" translate="yes" xml:space="preserve">
          <source>Direction constants for shutdown().</source>
          <target state="translated">shutdown ()의 방향 상수.</target>
        </trans-unit>
        <trans-unit id="ffa4d14a55fc893b2ab2feb24f1bb9f16a27d9ef" translate="yes" xml:space="preserve">
          <source>Directions for building and installing Perl 5 can be found in the file</source>
          <target state="translated">Perl 5 빌드 및 설치에 대한 지시 사항은 파일에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bab376f9381aa97c4dab56bb51a3fdcb3e8e0d0" translate="yes" xml:space="preserve">
          <source>Directly Accessing Hash Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f9bdfd8404ef77fb1c128863bdee0a96774dbf" translate="yes" xml:space="preserve">
          <source>Directories are ignored, an appropriate warning message is printed.</source>
          <target state="translated">디렉토리가 무시되고 적절한 경고 메시지가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="d9839139cdba0a7db66d992a8c07d9dc5203a709" translate="yes" xml:space="preserve">
          <source>Directories specified by &lt;b&gt;-I&lt;/b&gt; are prepended to the search path for modules (&lt;code&gt;@INC&lt;/code&gt; ).</source>
          <target state="translated">&lt;b&gt;-I&lt;/b&gt; 로 지정된 디렉토리 는 모듈의 검색 경로 앞에 붙습니다 ( &lt;code&gt;@INC&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3b4dc513eb12f414a61a6bc7735ec8b2b22f614e" translate="yes" xml:space="preserve">
          <source>Directories specified by &lt;b&gt;-I&lt;/b&gt; are prepended to the search path for modules (&lt;code&gt;@INC&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695ad0d98ef4334944f61b185dd4cedab03431f6" translate="yes" xml:space="preserve">
          <source>Directory containing the Perl library to use.</source>
          <target state="translated">사용할 Perl 라이브러리를 포함하는 디렉토리.</target>
        </trans-unit>
        <trans-unit id="95a5114dd29380dd2a8b633c45e0a67842ace3e1" translate="yes" xml:space="preserve">
          <source>Directory containing the Perl source code (use of this should be avoided, it may be undefined)</source>
          <target state="translated">Perl 소스 코드를 포함하는 디렉토리 (이를 사용하지 않아야하며 정의되지 않았을 수 있음)</target>
        </trans-unit>
        <trans-unit id="49814c07ff871d1c05234bf7b576b8bfa6483482" translate="yes" xml:space="preserve">
          <source>Directory handles may also support PerlIO layers in the future.</source>
          <target state="translated">디렉토리 핸들은 향후 PerlIO 계층도 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09979766f57286773702fe196a375f672c98b714" translate="yes" xml:space="preserve">
          <source>Directory must be removed by the caller.</source>
          <target state="translated">발신자가 디렉토리를 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="e9f3ae68dab67380725d57ac9230f0a6c7e277d2" translate="yes" xml:space="preserve">
          <source>Directory removal</source>
          <target state="translated">디렉토리 제거</target>
        </trans-unit>
        <trans-unit id="446909c0385bc8ceaa4d872dd39cb651160d24b1" translate="yes" xml:space="preserve">
          <source>Directory to hold the man pages at 'make' time</source>
          <target state="translated">'make'시간에 매뉴얼 페이지를 보유 할 디렉토리</target>
        </trans-unit>
        <trans-unit id="6951835d54be6094b23c719fecd95aa744851441" translate="yes" xml:space="preserve">
          <source>Directory to install binary files (e.g. tkperl) into if INSTALLDIRS=perl.</source>
          <target state="translated">INSTALLDIRS = perl 인 경우 바이너리 파일 (예 : tkperl)을 설치할 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="f55462ba8ed88c62d4efa472f0b3d16ca9cba3f9" translate="yes" xml:space="preserve">
          <source>Directory to put real binary files during 'make'. These will be copied to INSTALLBIN during 'make install'</source>
          <target state="translated">'make'동안 실제 바이너리 파일을 넣을 디렉토리. 이들은 'make install'중에 INSTALLBIN에 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="443584b29a56ca7e294c71389115957e3051e16b" translate="yes" xml:space="preserve">
          <source>Directory to search recursively for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071097b28577ccaebcb95a281a66ed180c8224bf" translate="yes" xml:space="preserve">
          <source>Directory under which core modules are to be installed.</source>
          <target state="translated">핵심 모듈을 설치할 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="a1829f4e2522a379a57e6dfeb7e4bf98545786dd" translate="yes" xml:space="preserve">
          <source>Directory where executable files should be installed during 'make'. Defaults to &quot;./blib/script&quot;, just to have a dummy location during testing. make install will copy the files in INST_SCRIPT to INSTALLSCRIPT.</source>
          <target state="translated">'make'동안 실행 파일을 설치해야하는 디렉토리입니다. 기본적으로 &quot;./blib/script&quot;로 설정되며 테스트하는 동안 더미 위치를 갖습니다. make install은 INST_SCRIPT의 파일을 INSTALLSCRIPT로 복사합니다.</target>
        </trans-unit>
        <trans-unit id="2bd8b42725452a5bb1746b479050ce94dd36efe4" translate="yes" xml:space="preserve">
          <source>Directory where the build process takes place?</source>
          <target state="translated">빌드 프로세스가 진행되는 디렉토리?</target>
        </trans-unit>
        <trans-unit id="78138bb545451a59f614c602f7ae3ba02571d724" translate="yes" xml:space="preserve">
          <source>Directory where to store default options/environment/dialogs for building modules that need some customization?</source>
          <target state="translated">사용자 정의가 필요한 모듈을 빌드하기위한 기본 옵션 / 환경 / 대화 상자를 저장할 디렉토리?</target>
        </trans-unit>
        <trans-unit id="71663d8624a61b44d95ba8a53379fea18cf31f0c" translate="yes" xml:space="preserve">
          <source>Directory where we put library files of this extension while building it.</source>
          <target state="translated">이 확장의 라이브러리 파일을 빌드하는 동안 넣는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="008aa84379adaa3dd9f1114985629c6f39ced51e" translate="yes" xml:space="preserve">
          <source>Directory, or more exact the &lt;code&gt;@INC&lt;/code&gt; entry, where the module was loaded from.</source>
          <target state="translated">모듈이로드 된 디렉토리 또는 더 정확한 &lt;code&gt;@INC&lt;/code&gt; 항목</target>
        </trans-unit>
        <trans-unit id="5969fa73eaa43f73a5289188c026ff6a45c76d37" translate="yes" xml:space="preserve">
          <source>Directory.</source>
          <target state="translated">Directory.</target>
        </trans-unit>
        <trans-unit id="7b77fba35f95b8f8ec9c281444e53fe94ce4da2b" translate="yes" xml:space="preserve">
          <source>Directs output to &lt;code&gt;FILENAME&lt;/code&gt; instead of standard output.</source>
          <target state="translated">표준 출력 대신 &lt;code&gt;FILENAME&lt;/code&gt; 으로 출력을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="f9e08e65dda5f2824f9fa498ff452471e29c1363" translate="yes" xml:space="preserve">
          <source>Disable &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt; , and the POSIX classes from working correctly on Unicode either in this scope, or in just one regex.</source>
          <target state="translated">이 범위 또는 하나의 정규식에서 &lt;code&gt;\w&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; 및 POSIX 클래스가 유니 코드에서 올바르게 작동 하지 않도록 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="1c6c248b50a7e410526ed35ac5e9ee1e472a9097" translate="yes" xml:space="preserve">
          <source>Disable &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, and the POSIX classes from working correctly on Unicode either in this scope, or in just one regex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8c639f9c8a545e3588e2eb19e638fd3d7e60f0" translate="yes" xml:space="preserve">
          <source>Disable IPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817740799f0d65e523f96e31146ff1b9a88ee16c" translate="yes" xml:space="preserve">
          <source>Disable caching of timings for the null loop. This will force Benchmark to recalculate these timings for each new piece of code timed.</source>
          <target state="translated">null 루프에 대한 타이밍 캐싱을 비활성화합니다. 이로 인해 Benchmark는 새로운 각 코드 조각에 대해 이러한 타이밍을 다시 계산해야합니다.</target>
        </trans-unit>
        <trans-unit id="c0a292f0da006ba870af4c1d4b16af058ca27ce9" translate="yes" xml:space="preserve">
          <source>Disable executing</source>
          <target state="translated">실행 비활성화</target>
        </trans-unit>
        <trans-unit id="0f85246ff2faf69d64165e4047fc800c58a2cc74" translate="yes" xml:space="preserve">
          <source>Disable named opcodes when compiling perl code</source>
          <target state="translated">펄 코드를 컴파일 할 때 명명 된 opcode를 비활성화</target>
        </trans-unit>
        <trans-unit id="97739e76ec287fa7ebbb95b29230f3316099f8ec" translate="yes" xml:space="preserve">
          <source>Disable prototype checking. With this option, all function calls are deparsed as if no prototype was defined for them. In other words,</source>
          <target state="translated">프로토 타입 검사를 비활성화합니다. 이 옵션을 사용하면 프로토 타입이 정의되지 않은 것처럼 모든 함수 호출이 구문 분석됩니다. 다시 말해,</target>
        </trans-unit>
        <trans-unit id="0756161fd02ffa6bd8c4dec248d5a916201550e6" translate="yes" xml:space="preserve">
          <source>Disable recognition of &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;OUT_LIST&lt;/code&gt; 및 &lt;code&gt;INOUT_LIST&lt;/code&gt; 선언 인식을 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="bbc49b5b4fc6859cdd2d50e325f20fe7cf3b63fc" translate="yes" xml:space="preserve">
          <source>Disable recognition of &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;OUT_LIST&lt;/code&gt; and &lt;code&gt;INOUT_LIST&lt;/code&gt; declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac791b2af5b20a7fb1078462c2f338c31498cb30" translate="yes" xml:space="preserve">
          <source>Disable recognition of ANSI-like descriptions of function signature.</source>
          <target state="translated">함수 서명에 대한 ANSI 유사 설명의 인식을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bbc86eb1194adefaf0a1a0eedb3b0d823e6663f7" translate="yes" xml:space="preserve">
          <source>Disable the breakpoint so it won't stop the execution of the program. Breakpoints are enabled by default and can be re-enabled using the &lt;code&gt;enable&lt;/code&gt; command.</source>
          <target state="translated">프로그램 실행을 중지하지 않도록 중단 점을 비활성화하십시오. 중단 점은 기본적으로 활성화되어 있으며 &lt;code&gt;enable&lt;/code&gt; 명령을 사용하여 다시 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="017a3bc626b78032ab07e0fe9e37b760fd1dd204" translate="yes" xml:space="preserve">
          <source>Disables LF to CRLF translation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ee854e40ed47f3fd86995a561be7f6fe2416aa" translate="yes" xml:space="preserve">
          <source>Disables all warnings regardless of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt; . See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; 또는 &lt;code&gt;$^W&lt;/code&gt; 관계없이 모든 경고를 비활성화합니다 . &lt;a href=&quot;warnings&quot;&gt;경고를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a27fcb3ecca43d8f93a4ef67ef2bd5c8ebd16b11" translate="yes" xml:space="preserve">
          <source>Disables all warnings regardless of &lt;code&gt;use warnings&lt;/code&gt; or &lt;code&gt;$^W&lt;/code&gt;. See &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78ebbaecc11dc8858ab9929654aabcca4fd0610" translate="yes" xml:space="preserve">
          <source>Disables certain optimizations. The only optimization that is currently affected is the use of</source>
          <target state="translated">특정 최적화를 비활성화합니다. 현재 영향을받는 유일한 최적화 방법은</target>
        </trans-unit>
        <trans-unit id="89e5d02d4b19bc88fb63e9ed81b229ea51d1d192" translate="yes" xml:space="preserve">
          <source>Disables conversion of FORTRAN carriage control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eddfd0331ebc78a06dd4671eddadcbb2519e22b" translate="yes" xml:space="preserve">
          <source>Disables only specific overloads in the current lexical scope.</source>
          <target state="translated">현재 어휘 범위에서 특정 과부하 만 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="27215af8e0aec9a7df486127f2e81d5c3743979c" translate="yes" xml:space="preserve">
          <source>Disables overloading entirely in the current lexical scope.</source>
          <target state="translated">현재 어휘 범위에서 오버로드를 완전히 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0596b396338d526562980a39b883df16ed14f799" translate="yes" xml:space="preserve">
          <source>Disables the run time test that determines if the object file (derived from the &lt;code&gt;.xs&lt;/code&gt; file) and the &lt;code&gt;.pm&lt;/code&gt; files have the same version number.</source>
          <target state="translated">개체 파일 ( &lt;code&gt;.xs&lt;/code&gt; 파일 에서 파생 )과 &lt;code&gt;.pm&lt;/code&gt; 파일의 버전 번호가 같은지 확인하는 런타임 테스트를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="0445bc1eebafe74da8f782bf383cb56524959c04" translate="yes" xml:space="preserve">
          <source>Disabling an extension</source>
          <target state="translated">확장 비활성화</target>
        </trans-unit>
        <trans-unit id="3b823ca5f6c5e18ee6590dd73a0071ccec8a63ba" translate="yes" xml:space="preserve">
          <source>Disabling or changing &amp;lt;no&amp;gt; behaviour</source>
          <target state="translated">&amp;lt;아니오&amp;gt; 동작 비활성화 또는 변경</target>
        </trans-unit>
        <trans-unit id="5aad62ff519a93497721c0514d33f638c9796188" translate="yes" xml:space="preserve">
          <source>Disabling or changing &lt;no&gt; behaviour&lt;/no&gt;</source>
          <target state="translated">비활성화 또는 변경 &lt;no&gt; 행동&lt;/no&gt;</target>
        </trans-unit>
        <trans-unit id="ec79b0e24c53783c0d5b0048b7cc030c1e7e99b1" translate="yes" xml:space="preserve">
          <source>Disabling these ops is a</source>
          <target state="translated">이러한 운영 중지는</target>
        </trans-unit>
        <trans-unit id="5cd83441d5b2311046899a2eb583a75a356aec0d" translate="yes" xml:space="preserve">
          <source>Disallow records to span block boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32542195526d9e4b30393cfd896527d786a1f51" translate="yes" xml:space="preserve">
          <source>Disambiguation rules between old-style octal escapes and backreferences</source>
          <target state="translated">구식 8 진 탈출과 역 참조 간의 명확성 규칙</target>
        </trans-unit>
        <trans-unit id="e21ccee288d3c66aefaa51cf4b41a13f64925be9" translate="yes" xml:space="preserve">
          <source>Disassociate the scalar handle from its underlying scalar. Done automatically on destroy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51495d55ca3fbe873cb079ee818ab001144b1050" translate="yes" xml:space="preserve">
          <source>Discard the cop hints hash</source>
          <target state="translated">경찰 힌트 해시 폐기</target>
        </trans-unit>
        <trans-unit id="89ce0ff723903d05b8a096f2de342a228d29a9da" translate="yes" xml:space="preserve">
          <source>Discard the cop hints hash &lt;code&gt;cophh&lt;/code&gt;, freeing all resources associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d20c7638348d63542d258b50d8bbd6c952bdaf8" translate="yes" xml:space="preserve">
          <source>Discards text about to be lexed, from &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; up to &lt;code&gt;ptr&lt;/code&gt;. Text following &lt;code&gt;ptr&lt;/code&gt; will be moved, and the buffer shortened. This hides the discarded text from any lexing code that runs later, as if the text had never appeared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce92351c84d19187a09db0e7cf0340daa95578b" translate="yes" xml:space="preserve">
          <source>Discards text about to be lexed, from &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; up to</source>
          <target state="translated">, lexed에서 수하는 방법에 대한 버리고 텍스트 &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-는&amp;gt; bufptr&lt;/a&gt; 까지</target>
        </trans-unit>
        <trans-unit id="d6266f69af30213e087e1c977c0114fa6d50dbc1" translate="yes" xml:space="preserve">
          <source>Discards the buffering of the standard output and standard errors for return by run_forked(). With this option you have to use the std*_handlers to read what the command outputs. Useful for commands that send a lot of output.</source>
          <target state="translated">run_forked ()에 의해 리턴되는 표준 출력 및 표준 오류의 버퍼링을 폐기합니다. 이 옵션을 사용하면 std * _handlers를 사용하여 명령 출력 내용을 읽어야합니다. 많은 출력을 보내는 명령에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bd7f7a279b2a2f461fa1e0a81e60263706a46fdb" translate="yes" xml:space="preserve">
          <source>Discards the first part of the &lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt; buffer, up to &lt;code&gt;ptr&lt;/code&gt;. The remaining content of the buffer will be moved, and all pointers into the buffer updated appropriately. &lt;code&gt;ptr&lt;/code&gt; must not be later in the buffer than the position of &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt;: it is not permitted to discard text that has yet to be lexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0327deb8b4ad4a89521ac79b1906db45d49787c" translate="yes" xml:space="preserve">
          <source>Discards the first part of the &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt; buffer, up to</source>
          <target state="translated">&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr&lt;/a&gt; 버퍼 의 첫 번째 부분을 버립니다.</target>
        </trans-unit>
        <trans-unit id="4c4a2e80cc873135b3d277a22b6e85110c509731" translate="yes" xml:space="preserve">
          <source>Disclaimer</source>
          <target state="translated">Disclaimer</target>
        </trans-unit>
        <trans-unit id="edef630584d9cf85568be81748ceaea6737fdfb5" translate="yes" xml:space="preserve">
          <source>Discouraged</source>
          <target state="translated">Discouraged</target>
        </trans-unit>
        <trans-unit id="06279c3d633238719d4311a1e19a71a158169a40" translate="yes" xml:space="preserve">
          <source>Discouraged comparison functions</source>
          <target state="translated">낙심 한 비교 기능</target>
        </trans-unit>
        <trans-unit id="a1e132aa8b84b9d862e794881468080b3307770a" translate="yes" xml:space="preserve">
          <source>Discovering the usefulness of the &quot;command.com&quot; shell on Windows 9x is left as an exercise to the reader :)</source>
          <target state="translated">Windows 9x에서 &quot;command.com&quot;쉘의 유용성을 발견하는 것은 독자에게 연습으로 남겨두고 있습니다. :)</target>
        </trans-unit>
        <trans-unit id="c6f5759c39bc307d5bdf84ed001f1952af9d8da9" translate="yes" xml:space="preserve">
          <source>Discuss the need</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902e2c8781e285f2109e3397b35aa7e83c4acc11" translate="yes" xml:space="preserve">
          <source>Discussed briefly in &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;&quot;Formatting Codes&quot; in perlpod&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5164803920ddcf3cce5890834f1bdb27f23ebc" translate="yes" xml:space="preserve">
          <source>Discussed briefly in &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;Formatting Codes in perlpod&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;perlpod의 형식화 코드에서&lt;/a&gt; 간단히 논의 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9b63dec48ea2c8f9c76b3edf144110430c933947" translate="yes" xml:space="preserve">
          <source>Display all (or some) lexical variables (mnemonic: &lt;code&gt;mY&lt;/code&gt; variables) in the current scope or</source>
          <target state="translated">현재 범위에서 모든 (또는 일부) 어휘 변수 (니모닉 : &lt;code&gt;mY&lt;/code&gt; 변수)를 표시하거나</target>
        </trans-unit>
        <trans-unit id="4d6a8893695a223720d1351409d3d6fa85617a70" translate="yes" xml:space="preserve">
          <source>Display all (or some) variables in package (defaulting to &lt;code&gt;main&lt;/code&gt; ) using a data pretty-printer (hashes show their keys and values so you see what's what, control characters are made printable, etc.). Make sure you don't put the type specifier (like &lt;code&gt;$&lt;/code&gt; ) there, just the symbol names, like this:</source>
          <target state="translated">data pretty-printer를 사용하여 패키지의 모든 (또는 일부) 변수를 표시합니다 (기본값은 &lt;code&gt;main&lt;/code&gt; ) (해시는 키와 값을 보여주기 때문에 무엇이 무엇인지, 제어 문자가 인쇄 가능하게되는지 등). 다음과 같이 유형 지정자 (예 &lt;code&gt;$&lt;/code&gt; )를 기호 이름 만 넣지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="a50ec31525cd3276609b1f242c69bd73b94bf4ec" translate="yes" xml:space="preserve">
          <source>Display all (or some) variables in package (defaulting to &lt;code&gt;main&lt;/code&gt;) using a data pretty-printer (hashes show their keys and values so you see what's what, control characters are made printable, etc.). Make sure you don't put the type specifier (like &lt;code&gt;$&lt;/code&gt;) there, just the symbol names, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b044b119358695832cdfad98824f0069cebfc548" translate="yes" xml:space="preserve">
          <source>Display all loaded modules and their versions.</source>
          <target state="translated">로드 된 모든 모듈과 해당 버전을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="be430952d1c69c4ef4bad908fd0595a0f079554c" translate="yes" xml:space="preserve">
          <source>Display all options.</source>
          <target state="translated">모든 옵션을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="27dde643a5c3a4ac6eac908a83f780f2958f01e6" translate="yes" xml:space="preserve">
          <source>Display and Dump functions</source>
          <target state="translated">디스플레이 및 덤프 기능</target>
        </trans-unit>
        <trans-unit id="b1f4cfc5d23e7e9d95f619a69bc6c81069e91cc2" translate="yes" xml:space="preserve">
          <source>Display docs using plain &lt;b&gt;t&lt;/b&gt;ext converter, instead of nroff. This may be faster, but it probably won't look as nice.</source>
          <target state="translated">일반 사용하여 문서 표시 &lt;b&gt;t의&lt;/b&gt; 대신 NROFF의, 내선 변환기. 이것은 더 빠를 지 모르지만 아마도 멋지지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="87a01a2d90029f7ec813289df19d8e72278f7de2" translate="yes" xml:space="preserve">
          <source>Display help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1261f72eada707fc4383acb7f8be5b3e61a1c948" translate="yes" xml:space="preserve">
          <source>Display last n commands. Only commands longer than one character are listed. If</source>
          <target state="translated">마지막 n 명령을 표시합니다. 한 문자보다 긴 명령 만 나열됩니다. 만약</target>
        </trans-unit>
        <trans-unit id="f40755e392f1a9eb6ccdf55b73455fd0fd00a49a" translate="yes" xml:space="preserve">
          <source>Display mostly harmless warning messages (default behaviour). But this is not the same as &quot;verbose&quot; mode.</source>
          <target state="translated">대부분 무해한 경고 메시지를 표시합니다 (기본 동작). 그러나 이것은 &quot;verbose&quot;모드와 동일하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7c1e20933a7ba1da896199ecdf785fc25a2b5f9c" translate="yes" xml:space="preserve">
          <source>Display on&lt;b&gt;l&lt;/b&gt;y the file name of the module found.</source>
          <target state="translated">찾은 모듈의 파일 이름 을 &lt;b&gt;l&lt;/b&gt; y 에 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="93569833439ae0502fb8e64a1c4e865ec5d04cb7" translate="yes" xml:space="preserve">
          <source>Display only the given routine and its descendants in the profile.</source>
          <target state="translated">지정된 루틴과 해당 하위 항목 만 프로파일에 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="cb765f562c6dc517c9adc9d4c794809e94e26d02" translate="yes" xml:space="preserve">
          <source>Display progress messages.</source>
          <target state="translated">진행 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="465a2527c50c93058895db46b538af503815f183" translate="yes" xml:space="preserve">
          <source>Display progress messages. By default, they won't be displayed.</source>
          <target state="translated">진행 메시지를 표시합니다. 기본적으로 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2e6e56a1e2419c84dc382818c82354f4cd202e5" translate="yes" xml:space="preserve">
          <source>Display routines that have zero usage.</source>
          <target state="translated">사용법이없는 루틴을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="a772b3b9f6d01bc9a870a18de9715b85da4f33c7" translate="yes" xml:space="preserve">
          <source>Display the entire module: both code and unformatted pod documentation. This may be useful if the docs don't explain a function in the detail you need, and you'd like to inspect the code directly; perldoc will find the file for you and simply hand it off for display.</source>
          <target state="translated">코드 및 형식화되지 않은 포드 설명서 모두 모듈 전체를 표시합니다. 문서에서 필요한 세부 사항에 대해 기능을 설명하지 않고 코드를 직접 검사하려는 경우에 유용 할 수 있습니다. perldoc이 파일을 찾아서 표시하기 위해 전달합니다.</target>
        </trans-unit>
        <trans-unit id="d3972efaa9a06280feba956085fc524f4b645f44" translate="yes" xml:space="preserve">
          <source>Display the version numbers of the loaded &lt;a href=&quot;../tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; and the current Perl.</source>
          <target state="translated">로드 된 &lt;a href=&quot;../tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt; 및 현재 Perl 의 버전 번호를 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="18b5e5f7dc12ee902008e9f7a3fe235b92c64af8" translate="yes" xml:space="preserve">
          <source>Display the version numbers of the loaded &lt;a href=&quot;TAP::Harness&quot;&gt;TAP::Harness&lt;/a&gt; and the current Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b299fbeab61103fa9b76908f93f4f3deeb705ac" translate="yes" xml:space="preserve">
          <source>Display this documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b39d5abe0218469782f16f6cb4d35f226bb7201" translate="yes" xml:space="preserve">
          <source>Displaying Unicode As Text</source>
          <target state="translated">유니 코드를 텍스트로 표시</target>
        </trans-unit>
        <trans-unit id="a65d13adc77fe56d8d077ba085d484794c846340" translate="yes" xml:space="preserve">
          <source>Displays a short help</source>
          <target state="translated">짧은 도움말을 표시합니다</target>
        </trans-unit>
        <trans-unit id="6782149c8f0e6f7b18c7f34e52e8afce81669558" translate="yes" xml:space="preserve">
          <source>Displays a warning that an old packlist file was found. Reads the filename from @ARGV.</source>
          <target state="translated">이전 팩리스트 파일을 찾았다는 경고를 표시합니다. @ARGV에서 파일 이름을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="d1f928489a20ced31a182ea00abdcc0e1f7a238c" translate="yes" xml:space="preserve">
          <source>Displays the current value(s) for this config variable. Without KEY, displays all subcommands and config variables.</source>
          <target state="translated">이 구성 변수의 현재 값을 표시합니다. KEY가 없으면 모든 부속 명령 및 구성 변수가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0bcd71b641eec7cadbed7fed072672f0582b39a0" translate="yes" xml:space="preserve">
          <source>Displays the usage message.</source>
          <target state="translated">사용법 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5298b75576f02dfd7e64f80d327144afcfdb191f" translate="yes" xml:space="preserve">
          <source>Displays the version of perldoc you're running.</source>
          <target state="translated">실행중인 perldoc의 버전을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="dcdc8e69179a75bcf860bec40f205ba043a0369b" translate="yes" xml:space="preserve">
          <source>Distantly based on LWP::Base64 written by Martijn Koster &amp;lt;m.koster@nexor.co.uk&amp;gt; and Joerg Reichelt &amp;lt;j.reichelt@nexor.co.uk&amp;gt; and code posted to comp.lang.perl &amp;lt;3pd2lp$6gf@wsinti07.win.tue.nl&amp;gt; by Hans Mulder &amp;lt;hansm@wsinti07.win.tue.nl&amp;gt;</source>
          <target state="translated">Martijn Koster &amp;lt;m.koster@nexor.co.uk&amp;gt;와 Joerg Reichelt &amp;lt;j.reichelt@nexor.co.uk&amp;gt;가 작성한 LWP :: Base64와 comp.lang.perl &amp;lt;3pd2lp $ 6gf @ Hans Mulder의 &amp;lt;sinm07.win.tue.nl&amp;gt; &amp;lt;hansm@wsinti07.win.tue.nl&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9483453ac3c647a5e6dee71efaa493b08294daa7" translate="yes" xml:space="preserve">
          <source>Distribution Conditions</source>
          <target state="translated">배포 조건</target>
        </trans-unit>
        <trans-unit id="955afbb21394efe51b98a6970c7c1927cbe40fd4" translate="yes" xml:space="preserve">
          <source>Distribution Support</source>
          <target state="translated">유통 지원</target>
        </trans-unit>
        <trans-unit id="a63a20a8c91aa0cfeda69dd3376e188c1b8012cd" translate="yes" xml:space="preserve">
          <source>Distribution metadata describe important properties of Perl distributions. Distribution building tools like Module::Build, Module::Install, ExtUtils::MakeMaker or Dist::Zilla should create a metadata file in accordance with this specification and include it with the distribution for use by automated tools that index, examine, package or install Perl distributions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb9543fa215a03986cfd2a98478c05c4a9ff395" translate="yes" xml:space="preserve">
          <source>Distribution metadata should be serialized (as a hashref) as JSON-encoded data and packaged with distributions as the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c838f5416206dabaa8d6ac86a72e962e587d49" translate="yes" xml:space="preserve">
          <source>Distribution objects are normally distributions from the CPAN, but there is a slightly degenerate case for Distribution objects, too, of projects held on the local disk. These distribution objects have the same name as the local directory and end with a dot. A dot by itself is also allowed for the current directory at the time CPAN.pm was used. All actions such as &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; , and &lt;code&gt;install&lt;/code&gt; are applied directly to that directory. This gives the command &lt;code&gt;cpan .&lt;/code&gt; an interesting touch: while the normal mantra of installing a CPAN module without CPAN.pm is one of</source>
          <target state="translated">분배 오브젝트는 일반적으로 CPAN의 분배이지만 로컬 디스크에 보유 된 프로젝트의 분배 오브젝트도 약간 저하됩니다. 이 배포 개체는 로컬 디렉터리와 이름이 같고 점으로 끝납니다. CPAN.pm이 사용될 때 현재 디렉토리에 대해 점 자체도 허용됩니다. &lt;code&gt;make&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;install&lt;/code&gt; 과 같은 모든 조치 는 해당 디렉토리에 직접 적용됩니다. 이것은 &lt;code&gt;cpan .&lt;/code&gt; 명령을 제공합니다 . 흥미로운 점 : CPAN.pm없이 CPAN 모듈을 설치하는 일반적인 방법은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="381764d96f9c586b529fc1b74bf3dd86052ae745" translate="yes" xml:space="preserve">
          <source>Distributions on CPAN usually behave according to what we call the CPAN mantra. Or since the advent of Module::Build we should talk about two mantras:</source>
          <target state="translated">CPAN 배포는 일반적으로 CPAN 만트라라고하는 방식에 따라 작동합니다. 또는 Module :: Build가 등장한 이후 두 가지 진언에 대해 이야기해야합니다.</target>
        </trans-unit>
        <trans-unit id="c58180206bebfb6ee0df954b757a9830a178426b" translate="yes" xml:space="preserve">
          <source>Distroprefs</source>
          <target state="translated">Distroprefs</target>
        </trans-unit>
        <trans-unit id="7f01fb80f7dde34a76219740c5d0000d7751aa19" translate="yes" xml:space="preserve">
          <source>Ditto for stringifying large arrays:</source>
          <target state="translated">큰 배열을 문자열 화하기위한 Ditto :</target>
        </trans-unit>
        <trans-unit id="ddd6d6a4ddce8fc639668c818a1505775f6e8329" translate="yes" xml:space="preserve">
          <source>Ditto.</source>
          <target state="translated">Ditto.</target>
        </trans-unit>
        <trans-unit id="8cd08c454640891385c7eeea6dddbb915e9a2b00" translate="yes" xml:space="preserve">
          <source>Ditto:</source>
          <target state="translated">Ditto:</target>
        </trans-unit>
        <trans-unit id="5f28828cd2ac54ccf8b24829dc7648052f5b1571" translate="yes" xml:space="preserve">
          <source>Divides $x by $y by doing floored division (F-division), where the quotient is the floored (rounded towards negative infinity) quotient of the two operands. In list context, returns the quotient and the remainder. The remainder is either zero or has the same sign as the second operand. In scalar context, only the quotient is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2806cf31d287009ff4d96d950d67c16e95ae38" translate="yes" xml:space="preserve">
          <source>Divides $x by $y by doing truncated division (T-division), where quotient is the truncated (rouneded towards zero) quotient of the two operands. In list context, returns the quotient and the remainder. The remainder is either zero or has the same sign as the first operand. In scalar context, only the quotient is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2faddc4fbc208e1d7b96a4fcac1f5f9f8a3944b" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; again actually</source>
          <target state="translated">마십시오 &lt;b&gt;하지&lt;/b&gt; 전화 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (즉, 인수가없는) 이상의 프로세스 당 번. 난수 생성기의 내부 상태에는 시드에서 제공 할 수있는 것보다 많은 엔트로피가 포함되어야하므로 실제로 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; 다시 호출</target>
        </trans-unit>
        <trans-unit id="b6baf1cd7e0ea413825fb96a05b09305653a8842" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; again actually</source>
          <target state="translated">마십시오 &lt;b&gt;하지&lt;/b&gt; 전화 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; (즉, 인수가없는) 이상의 프로세스 당 번. 난수 생성기의 내부 상태에는 시드에서 제공 할 수있는 것보다 많은 엔트로피가 포함되어야하므로 실제로 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand()&lt;/a&gt;&lt;/code&gt; 다시 호출</target>
        </trans-unit>
        <trans-unit id="652e12fdcb5c155668dc327bb96dd0fc2b218422" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; call &lt;code&gt;srand()&lt;/code&gt; (i.e., without an argument) more than once per process. The internal state of the random number generator should contain more entropy than can be provided by any seed, so calling &lt;a href=&quot;#srand-EXPR&quot;&gt;&lt;code&gt;srand&lt;/code&gt;&lt;/a&gt; again actually</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8508e09e1cab910629d8f92dab302c9bc18cac38" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; export anything else by default without a good reason!</source>
          <target state="translated">정당한 이유없이 기본적으로 다른 &lt;b&gt;것을&lt;/b&gt; 내 보내지 마십시오 !</target>
        </trans-unit>
        <trans-unit id="2a361ce7ad694ec0575786e4a58744501e47d3dd" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; export method names!</source>
          <target state="translated">마 &lt;b&gt;되지&lt;/b&gt; 메소드 이름을 내보내!</target>
        </trans-unit>
        <trans-unit id="825725dbe42c2936cefeada5723d97075e056f4d" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; use &lt;code&gt;/[A-Z]/&lt;/code&gt; unless you don't care about the current locale.</source>
          <target state="translated">마십시오 &lt;b&gt;하지&lt;/b&gt; 사용 &lt;code&gt;/[A-Z]/&lt;/code&gt; 당신은 현재 로케일에 대해 걱정하지 않는 한.</target>
        </trans-unit>
        <trans-unit id="18fe50d08f696cfe6f092de82e112424369b684e" translate="yes" xml:space="preserve">
          <source>Do &lt;b&gt;not&lt;/b&gt; use &lt;code&gt;/[a-z]/&lt;/code&gt; unless you don't care about the current locale.</source>
          <target state="translated">마십시오 &lt;b&gt;하지&lt;/b&gt; 사용 &lt;code&gt;/[a-z]/&lt;/code&gt; 현재 로케일에 대해 걱정하지 않는 한.</target>
        </trans-unit>
        <trans-unit id="4ce4e2d8b8b0faeef7d3ea74accd64d2ba130eb9" translate="yes" xml:space="preserve">
          <source>Do I always/never have to quote my strings or use semicolons and commas?</source>
          <target state="translated">항상 문자열을 인용하거나 세미콜론과 쉼표를 사용해야합니까?</target>
        </trans-unit>
        <trans-unit id="07601d161d4355e711962a451be3c55fe86fbe5c" translate="yes" xml:space="preserve">
          <source>Do I need to recompile XS modules when there is a change in the C library?</source>
          <target state="translated">C 라이브러리에 변경 사항이있을 때 XS 모듈을 다시 컴파일해야합니까?</target>
        </trans-unit>
        <trans-unit id="e7ea3cbfa103eecd5c1b9890a30bc6708da3600c" translate="yes" xml:space="preserve">
          <source>Do NOT be tempted to use TODO tests as a way to avoid fixing simple bugs!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8546c498c3dd38d7f1d8d67ef0863373cb431c32" translate="yes" xml:space="preserve">
          <source>Do NOT export anything else by default without a good reason!</source>
          <target state="translated">정당한 이유없이 기본적으로 다른 것을 내 보내지 마십시오!</target>
        </trans-unit>
        <trans-unit id="88b10d4e2bda0943ded9669f6a8c9aebc17a12e8" translate="yes" xml:space="preserve">
          <source>Do NOT export method names!</source>
          <target state="translated">메소드 이름을 내 보내지 마십시오!</target>
        </trans-unit>
        <trans-unit id="669a18cda8b7578e2fdaaea3bac36d488688036e" translate="yes" xml:space="preserve">
          <source>Do NOT use this due to the possibility of overflowing &lt;code&gt;buffer&lt;/code&gt;. Instead use my_snprintf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad17a344d7a9ec501d9048994766ad70eaad6249" translate="yes" xml:space="preserve">
          <source>Do a checksum on the message. Basically sum all of the short words and fold the high order bits into the low order bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e252ceca181e28d13625bae97df37690bf32cd" translate="yes" xml:space="preserve">
          <source>Do a dry run, but don't actually install anything. (unimplemented)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2715ba8e6286e3dce7c7be35eeaefa5a5cc3c5" translate="yes" xml:space="preserve">
          <source>Do case-insensitive pattern matching.</source>
          <target state="translated">대소 문자를 구분하지 않는 패턴 일치를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7bf80ac2ef12ec954e01fb98bbe623250b9e4241" translate="yes" xml:space="preserve">
          <source>Do case-insensitive pattern matching. For example, &quot;A&quot; will match &quot;a&quot; under &lt;code&gt;/i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e815e6f64c5408e3720ec5fc43ced6718ce0b2" translate="yes" xml:space="preserve">
          <source>Do error reporting for missing typemaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f0dbb17c8d86c7bb9eb64b29544f3a178ec316" translate="yes" xml:space="preserve">
          <source>Do magic after a value is assigned to the SV. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3df5a42cb6127acc1472a5755378b0af34defd" translate="yes" xml:space="preserve">
          <source>Do magic after a value is assigned to the SV. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">값이 SV에 할당 된 후 마술을 수행하십시오. &lt;code&gt;sv_magic&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7ceee7db88ccc3aa9b6fff70f9a7976eb75435e" translate="yes" xml:space="preserve">
          <source>Do magic before a value is retrieved from the SV. The type of SV must be &amp;gt;= &lt;code&gt;SVt_PVMG&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee9756153198a0ee3de2adeb5f31d39d574306f" translate="yes" xml:space="preserve">
          <source>Do magic before a value is retrieved from the SV. The type of SV must be &amp;gt;= SVt_PVMG. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">SV에서 값을 검색하기 전에 마술을하십시오. SV 유형은&amp;gt; = SVt_PVMG 여야합니다. &lt;code&gt;sv_magic&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fef68e8141e36a039846619d70d364b0a422b18f" translate="yes" xml:space="preserve">
          <source>Do not assume an operating system indicates a certain compiler.</source>
          <target state="translated">운영 체제가 특정 컴파일러를 나타내는 것으로 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="985983463a214f013b7dc73c3bbb31c7e52cb234" translate="yes" xml:space="preserve">
          <source>Do not assume anything about the ordering of the characters. The lowercase letters may come before or after the uppercase letters; the lowercase and uppercase may be interlaced so that both &quot;a&quot; and &quot;A&quot; come before &quot;b&quot;; the accented and other international characters may be interlaced so that &amp;auml; comes before &quot;b&quot;. &lt;a href=&quot;Unicode::Collate&quot;&gt;Unicode::Collate&lt;/a&gt; can be used to sort this all out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3370a4321afc9f66c3f426894b720b8a225d1f" translate="yes" xml:space="preserve">
          <source>Do not assume anything about the ordering of the characters. The lowercase letters may come before or after the uppercase letters; the lowercase and uppercase may be interlaced so that both &quot;a&quot; and &quot;A&quot; come before &quot;b&quot;; the accented and other international characters may be interlaced so that &amp;auml; comes before &quot;b&quot;. &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt; can be used to sort this all out.</source>
          <target state="translated">문자 순서에 대해 아무 것도 가정하지 마십시오. 소문자는 대문자 앞이나 뒤에 올 수 있습니다. &quot;a&quot;와 &quot;A&quot;가 &quot;b&quot;앞에 오도록 소문자와 대문자가 인터레이스 될 수 있으며; 억양 및 기타 국제 문자는 &quot;b&quot;앞에 오도록 인터레이스 될 수 있습니다. &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; 를 사용하여이 모든 것을 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dac7429f341d431a762410206ac5527a2c13dd2f" translate="yes" xml:space="preserve">
          <source>Do not assume that the alphabetic characters are encoded contiguously (in the numeric sense). There may be gaps. Special coding in Perl, however, guarantees that all subsets of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[A-Z]/&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[a-z]/&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[0-9]/&lt;/a&gt;&lt;/code&gt; behave as expected. &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; behaves the same for these ranges. In patterns, any ranges specified with end points using the &lt;code&gt;\N{...}&lt;/code&gt; notations ensures character set portability, but it is a bug in Perl v5.22, that this isn't true of &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">알파벳 문자가 연속적으로 (숫자 의미로) 인코딩되었다고 가정하지 마십시오. 차이가있을 수 있습니다. 그러나 Perl의 특수 코딩은 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[A-Z]/&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[a-z]/&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/[0-9]/&lt;/a&gt;&lt;/code&gt; 의 모든 하위 집합이 예상대로 작동하도록 보장합니다 . &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; 는이 범위에서 동일하게 동작합니다. 패턴에서 &lt;code&gt;\N{...}&lt;/code&gt; 표기법을 사용하여 엔드 포인트로 지정된 범위 는 문자 세트 이식성을 보장하지만 Perl v5.22의 버그는 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; 이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="a75bf6b99d6f2eba31de3401757108b7b74fdc1a" translate="yes" xml:space="preserve">
          <source>Do not assume that the alphabetic characters are encoded contiguously (in the numeric sense). There may be gaps. Special coding in Perl, however, guarantees that all subsets of &lt;code&gt;qr/[A-Z]/&lt;/code&gt;, &lt;code&gt;qr/[a-z]/&lt;/code&gt;, and &lt;code&gt;qr/[0-9]/&lt;/code&gt; behave as expected. &lt;a href=&quot;perlop#tr%2FSEARCHLIST%2FREPLACEMENTLIST%2Fcdsr&quot;&gt;&lt;code&gt;tr///&lt;/code&gt;&lt;/a&gt; behaves the same for these ranges. In patterns, any ranges specified with end points using the &lt;code&gt;\N{...}&lt;/code&gt; notations ensures character set portability, but it is a bug in Perl v5.22 that this isn't true of &lt;a href=&quot;perlop#tr%2FSEARCHLIST%2FREPLACEMENTLIST%2Fcdsr&quot;&gt;&lt;code&gt;tr///&lt;/code&gt;&lt;/a&gt;, fixed in v5.24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f01c64ee23b1bfc4362dd512948a4c4fa009da9" translate="yes" xml:space="preserve">
          <source>Do not attempt navigation using these formulas.</source>
          <target state="translated">이 공식을 사용하여 탐색을 시도하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="ffd84d731582ea7d72196f877c4d6066a632e557" translate="yes" xml:space="preserve">
          <source>Do not attempt to use this class directly. It won't make sense. It's mainly here to ensure that we will be able to have pluggable grammars when TAP is expanded at some future date (plus, this stuff was really cluttering the parser).</source>
          <target state="translated">이 클래스를 직접 사용하지 마십시오. 말이되지 않습니다. TAP가 미래에 확장 될 때 플러그 가능한 문법을 ​​가질 수 있도록하기 위해 주로 여기에 있습니다 (이것은 실제로 파서를 혼란스럽게했습니다).</target>
        </trans-unit>
        <trans-unit id="a6238adeeaec74412446adc0c315e47aa64f6eff" translate="yes" xml:space="preserve">
          <source>Do not be fooled into thinking that &lt;code&gt;(SV *) 0&lt;/code&gt; is the same as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; . Take this code:</source>
          <target state="translated">&lt;code&gt;(SV *) 0&lt;/code&gt; 이 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 생각에 속지 마십시오 . 이 코드를 보자 :</target>
        </trans-unit>
        <trans-unit id="7c1103f3047b08f1197a26b5ad6e43e6ff29c30b" translate="yes" xml:space="preserve">
          <source>Do not be fooled into thinking that &lt;code&gt;(SV *) 0&lt;/code&gt; is the same as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt;. Take this code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0eb4945ffccf75b2ca120c0b95829a0cfe963a" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;a href=&quot;#getlogin&quot;&gt;&lt;code&gt;getlogin&lt;/code&gt;&lt;/a&gt; for authentication: it is not as secure as &lt;a href=&quot;#getpwuid-UID&quot;&gt;&lt;code&gt;getpwuid&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a265c0f5840a121cb5af7015adcf66dbf43685" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; for authentication: it is not as secure as &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인증을 위해 &lt;code&gt;&lt;a href=&quot;functions/getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; 을 고려하지 마십시오 . &lt;code&gt;&lt;a href=&quot;functions/getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; 만큼 안전하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="954cdfa947d07289fc8fa65c61c967074b46849c" translate="yes" xml:space="preserve">
          <source>Do not consider &lt;code&gt;&lt;a href=&quot;getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; for authentication: it is not as secure as &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">인증을 위해 &lt;code&gt;&lt;a href=&quot;getlogin&quot;&gt;getlogin&lt;/a&gt;&lt;/code&gt; 을 고려하지 마십시오 . &lt;code&gt;&lt;a href=&quot;getpwuid&quot;&gt;getpwuid&lt;/a&gt;&lt;/code&gt; 만큼 안전하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2ed5342da7dbe2644918b11220f17d8dfd65b045" translate="yes" xml:space="preserve">
          <source>Do not create header and footer blocks containing the text of the &quot;NAME&quot; section (default behaviour).</source>
          <target state="translated">&quot;NAME&quot;섹션의 텍스트를 포함하는 머리글 및 바닥 글 블록을 만들지 마십시오 (기본 동작).</target>
        </trans-unit>
        <trans-unit id="de14526162a79000113ce8e06bb2051044d9251f" translate="yes" xml:space="preserve">
          <source>Do not declare variables using &quot;register&quot;. It may be counterproductive with modern compilers, and is deprecated in C++, under which the Perl source is regularly compiled.</source>
          <target state="translated">&quot;register&quot;를 사용하여 변수를 선언하지 마십시오. 최신 컴파일러에서는 비생산적 일 수 있으며 Perl 소스가 정기적으로 컴파일되는 C ++에서는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ba5b70f1f2a742c5a3d1b2680eb5b21ac617899b" translate="yes" xml:space="preserve">
          <source>Do not display progress messages (default behaviour).</source>
          <target state="translated">진행 메시지를 표시하지 마십시오 (기본 동작).</target>
        </trans-unit>
        <trans-unit id="1d7af785bc11d859051058972cf4b5ed10f4c0f8" translate="yes" xml:space="preserve">
          <source>Do not expect clock_nanosleep() to be exact down to one nanosecond. Getting even accuracy of one thousand nanoseconds is good.</source>
          <target state="translated">clock_nanosleep ()이 1 나노초까지 정확하지는 않습니다. 천 나노초의 정확도를 얻는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="80ec845571b8ce066af485fa387b9e2c22cdbd4a" translate="yes" xml:space="preserve">
          <source>Do not expect nanosleep() to be exact down to one nanosecond. Getting even accuracy of one thousand nanoseconds is good.</source>
          <target state="translated">nanosleep ()이 1 나노초까지 정확하게 될 것으로 기대하지 마십시오. 천 나노초의 정확도를 얻는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="338f71d7cfd94a546bf46d57c343edb97e29ec06" translate="yes" xml:space="preserve">
          <source>Do not expect usleep() to be exact down to one microsecond.</source>
          <target state="translated">usleep ()이 정확히 1 마이크로 초가 될 것으로 기대하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="44e00d89042b21b82ae04db4fd6686e52864a5db" translate="yes" xml:space="preserve">
          <source>Do not forget the space before the trailing quote.</source>
          <target state="translated">후행 따옴표 앞의 공백을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9d53664ee8f6d26a9c8d6d37ac533d0c8503e6c4" translate="yes" xml:space="preserve">
          <source>Do not forget to edit the documentation in the generated</source>
          <target state="translated">생성 된 문서를 편집하는 것을 잊지 마십시오</target>
        </trans-unit>
        <trans-unit id="b67a0bd0d26a82b3f8dae502cde36d9a68951db6" translate="yes" xml:space="preserve">
          <source>Do not generate an index at the top of the HTML file.</source>
          <target state="translated">HTML 파일 맨 위에 색인을 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="38ca653276acaef35211b0a7de47674e374897b5" translate="yes" xml:space="preserve">
          <source>Do not have two files or directories of the same name with different case, like</source>
          <target state="translated">대소 문자가 다른 동일한 이름을 가진 두 개의 파일 또는 디렉토리가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4798c1787e0a45ddf70984856d2f84815abcefdc" translate="yes" xml:space="preserve">
          <source>Do not include a &quot;POD ERRORS&quot; section in the outfile if there were any POD errors in the infile.</source>
          <target state="translated">파일에 POD 오류가 있으면 출력 파일에 &quot;POD ERRORS&quot;섹션을 포함시키지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6ca27b97c73fed9f5b2e6cce84e318595e25670f" translate="yes" xml:space="preserve">
          <source>Do not introduce any modifiable globals, truly global or file static. They are bad form and complicate multithreading and other forms of concurrency. The right way is to introduce them as new interpreter variables, see</source>
          <target state="translated">수정 가능한 전역, 진정으로 전역 또는 파일 정적을 도입하지 마십시오. 그것들은 나쁜 형태이며 멀티 스레딩과 다른 형태의 동시성을 복잡하게 만듭니다. 올바른 방법은 변수를 새로운 인터프리터 변수로 도입하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e51bfe77f027c25ed0e3d1d5fbab77e6ab860dc6" translate="yes" xml:space="preserve">
          <source>Do not lock record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f5276ef8bc6c0a7b535c715233a2e4ff4dd5a6" translate="yes" xml:space="preserve">
          <source>Do not memoize a function that returns a data structure that is modified by its caller.</source>
          <target state="translated">호출자가 수정 한 데이터 구조를 리턴하는 함수를 메모하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e822f96782fa84026c016723c451c6a59923a48c" translate="yes" xml:space="preserve">
          <source>Do not memoize a function whose behavior depends on program state other than its own arguments, such as global variables, the time of day, or file input. These functions will not produce correct results when memoized. For a particularly easy example:</source>
          <target state="translated">전역 변수, 시간 또는 파일 입력과 같이 자체 인수 이외의 프로그램 상태에 따라 동작이 달라지는 함수를 기억하지 마십시오. 이 기능은 메모 할 때 올바른 결과를 생성하지 않습니다. 특히 쉬운 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cccff3ab93f1bd49939696cce81af2a0a2097134" translate="yes" xml:space="preserve">
          <source>Do not memoize a function with side effects.</source>
          <target state="translated">부작용이있는 기능을 메모하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6f726dd9ddd72becc842f9b1d89ed1bf585b4d7a" translate="yes" xml:space="preserve">
          <source>Do not memoize a very simple function.</source>
          <target state="translated">매우 간단한 기능을 기억하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="fd85d472df120b1759d38d84f5ed138af9b0de90" translate="yes" xml:space="preserve">
          <source>Do not mix national standard encodings and the corresponding vendor encodings.</source>
          <target state="translated">국가 표준 인코딩과 해당 공급 업체 인코딩을 혼합하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f1f5b43293b4ad26b77bf89ae0381b7ae81019b9" translate="yes" xml:space="preserve">
          <source>Do not pass both this and --htmldir to pod2html; they are mutually exclusive.</source>
          <target state="translated">this와 --htmldir을 pod2html로 전달하지 마십시오. 그들은 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="b60ea56f9acc75f558cf56cbb9626f5aa57e337f" translate="yes" xml:space="preserve">
          <source>Do not read more than &lt;code&gt;limit&lt;/code&gt; files. This is useful if you have very big archives, and are only interested in the first few files.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; 파일 이상을 읽지 마십시오 . 아카이브가 매우 크며 처음 몇 개의 파일에만 관심이있는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8baaf0ce4e3be10a125ad22cfd7dc50cf9094c82" translate="yes" xml:space="preserve">
          <source>Do not recurse into subdirectories specified in podpath.</source>
          <target state="translated">podpath에 지정된 서브 디렉토리로 재귀하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="63bb032139528a610599b19949f74327a9b3d07c" translate="yes" xml:space="preserve">
          <source>Do not suspend the calling process until a child process changes state but instead return immediately.</source>
          <target state="translated">하위 프로세스가 상태를 변경할 때까지 호출 프로세스를 일시 중단하지 말고 즉시 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="cc3c9b6d0dcbb389a5572aa10025ef0cf98475e2" translate="yes" xml:space="preserve">
          <source>Do not test modules. Simply install them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d9cf144653df2138cfdb4728cb23fd840b488d" translate="yes" xml:space="preserve">
          <source>Do not try to be clever to insert some operations in between switching libraries:</source>
          <target state="translated">스위칭 라이브러리 사이에 일부 작업을 삽입하려고 영리하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f892507590fee4ad20d4412e6f8474b573affb0c" translate="yes" xml:space="preserve">
          <source>Do not try to use Perl's malloc, this will lead into very mysterious errors (especially with -Duse64bitall).</source>
          <target state="translated">Perl의 malloc을 사용하지 마십시오. 이것은 매우 신비한 오류 (특히 -Duse64bitall의 경우)로 이어질 것입니다.</target>
        </trans-unit>
        <trans-unit id="481206675cc8f49efb63fbf5922ecb2459573ace" translate="yes" xml:space="preserve">
          <source>Do not turn =head1 directives into links pointing to the top of the HTML file (default behaviour).</source>
          <target state="translated">= head1 지시문을 HTML 파일의 상단 (기본 동작)을 가리키는 링크로 설정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="baca6e9f8deaa5a05e4ab2ba4c839ab683b10546" translate="yes" xml:space="preserve">
          <source>Do not turn on the compiler optimization flag &quot;-O&quot;. There is a bug in either the optimizer or perl that causes perl to not work correctly when the optimizer is on.</source>
          <target state="translated">컴파일러 최적화 플래그 &quot;-O&quot;를 켜지 마십시오. 옵티 마이저 또는 perl에 옵티마이 저가 켜져있을 때 perl이 올바르게 작동하지 않는 버그가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf13f467e0d1a8315ca7018884458feaa725238a" translate="yes" xml:space="preserve">
          <source>Do not use &lt;a href=&quot;#tell-FILEHANDLE&quot;&gt;&lt;code&gt;tell&lt;/code&gt;&lt;/a&gt; (or other buffered I/O operations) on a filehandle that has been manipulated by &lt;a href=&quot;#sysread-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;sysread&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#syswrite-FILEHANDLE%2CSCALAR%2CLENGTH%2COFFSET&quot;&gt;&lt;code&gt;syswrite&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#sysseek-FILEHANDLE%2CPOSITION%2CWHENCE&quot;&gt;&lt;code&gt;sysseek&lt;/code&gt;&lt;/a&gt;. Those functions ignore the buffering, while &lt;a href=&quot;#tell-FILEHANDLE&quot;&gt;&lt;code&gt;tell&lt;/code&gt;&lt;/a&gt; does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee94e7e413fa452436aa9dabe06f090ccc39d625" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;p&lt;/code&gt; or &lt;code&gt;P&lt;/code&gt; to obtain the address of variable that's bound to go out of scope (and thereby freeing its memory) before you are done with using the memory at that address.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 또는 &lt;code&gt;P&lt;/code&gt; 와 함께 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 을 사용하여 해당 주소에서 메모리 사용을 완료하기 전에 범위를 벗어나기 위해 바인드 된 변수의 주소를 가져 와서 메모리를 비우지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="04f9b0d0e8adfb1713c31734eee9cfdb17586771" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Devel::PPPort&lt;/code&gt; : no portability to older version.</source>
          <target state="translated">&lt;code&gt;Devel::PPPort&lt;/code&gt; 사용하지 마십시오 : 이전 버전으로 이식 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a872eb635c2d93ae189c131b6f69ac342b7e057e" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Devel::PPPort&lt;/code&gt;: no portability to older version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498daddca0a46e6c4fa2a6956b5ad47910b93411" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;Exporter&lt;/code&gt; and/or export any symbol.</source>
          <target state="translated">&lt;code&gt;Exporter&lt;/code&gt; 사용 하거나 심볼을 내 보내지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="ed6a2111bf29f957b88dbf31031d37b896f3ce10" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;SvGROW&lt;/code&gt; or &lt;code&gt;sv_grow&lt;/code&gt; directly on &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; ; this function updates all of the lexer's variables that point directly into the buffer.</source>
          <target state="translated">사용하지 마십시오 &lt;code&gt;SvGROW&lt;/code&gt; 을 하거나 &lt;code&gt;sv_grow&lt;/code&gt; 에 직접 &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt; ; 이 함수는 버퍼를 직접 가리키는 모든 렉서 변수를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6ffb1644a8db78c7b9888f1d7b9c3acd628b9c91" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;SvGROW&lt;/code&gt; or &lt;code&gt;sv_grow&lt;/code&gt; directly on &lt;code&gt;PL_parser-&amp;gt;linestr&lt;/code&gt;; this function updates all of the lexer's variables that point directly into the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9409f88b2adf4591642dab86ad2da8974e6989d" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;pack&lt;/code&gt; with &lt;code&gt;p&lt;/code&gt; or &lt;code&gt;P&lt;/code&gt; to obtain the address of variable that's bound to go out of scope (and thereby freeing its memory) before you are done with using the memory at that address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a5c62a2aaf2f678ca9cf51949611595cacf102" translate="yes" xml:space="preserve">
          <source>Do not use NDBM_File or ODBM_File on FAT filesystem. They can be built on a FAT filesystem, but many tests will fail:</source>
          <target state="translated">FAT 파일 시스템에서 NDBM_File 또는 ODBM_File을 사용하지 마십시오. FAT 파일 시스템에서 빌드 할 수 있지만 많은 테스트가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="ae38cf9dd649500630593bae7198d4a9f398f12d" translate="yes" xml:space="preserve">
          <source>Do not use atoi()</source>
          <target state="translated">atoi ()를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="753e9d05d3a5b0152e6076319f72132b8b3a599b" translate="yes" xml:space="preserve">
          <source>Do not use either the bare result of &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; or bare v-strings (such as &lt;code&gt;v10.20.30.40&lt;/code&gt; ) to represent IPv4 addresses: both forms just pack the four bytes into network order. That this would be equal to the C language &lt;code&gt;in_addr&lt;/code&gt; struct (which is what the socket code internally uses) is not guaranteed. To be portable use the routines of the &lt;code&gt;Socket&lt;/code&gt; extension, such as &lt;code&gt;inet_aton()&lt;/code&gt; , &lt;code&gt;inet_ntoa()&lt;/code&gt; , and &lt;code&gt;sockaddr_in()&lt;/code&gt; .</source>
          <target state="translated">IPv4 주소를 나타내는 데 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; 의 베어 결과 ( &quot;N&quot;, 10, 20, 30, 40) 또는 베어 v 문자열 (예 : &lt;code&gt;v10.20.30.40&lt;/code&gt; )을 사용하지 마십시오 . 두 형식 모두 4 바이트를 네트워크에 패킹합니다. 주문. 이것은 C 언어 &lt;code&gt;in_addr&lt;/code&gt; 구조체와 같을 것입니다 (소켓 코드가 내부적으로 사용하는 것)는 보장되지 않습니다. 이식 가능하게하려면 &lt;code&gt;Socket&lt;/code&gt; 확장 의 루틴 &lt;code&gt;inet_aton()&lt;/code&gt; 예 : inet_aton () , &lt;code&gt;inet_ntoa()&lt;/code&gt; 및 &lt;code&gt;sockaddr_in()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="670907405e506824a37f5702fabe0894b4257347" translate="yes" xml:space="preserve">
          <source>Do not use either the bare result of &lt;code&gt;pack(&quot;N&quot;, 10, 20, 30, 40)&lt;/code&gt; or bare v-strings (such as &lt;code&gt;v10.20.30.40&lt;/code&gt;) to represent IPv4 addresses: both forms just pack the four bytes into network order. That this would be equal to the C language &lt;code&gt;in_addr&lt;/code&gt; struct (which is what the socket code internally uses) is not guaranteed. To be portable use the routines of the &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; module, such as &lt;a href=&quot;socket#%24ip_address-%3D-inet_aton-%24string&quot;&gt;&lt;code&gt;inet_aton&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;socket#%24string-%3D-inet_ntoa-%24ip_address&quot;&gt;&lt;code&gt;inet_ntoa&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;socket#%24sockaddr-%3D-sockaddr_in-%24port%2C-%24ip_address&quot;&gt;&lt;code&gt;sockaddr_in&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c49bf9327996053a0622ba64f5585438822ebb" translate="yes" xml:space="preserve">
          <source>Do not use gets()</source>
          <target state="translated">gets ()를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="009b2718b3e778a1ac506ede5182cb2fe171f56c" translate="yes" xml:space="preserve">
          <source>Do not use regexes. Use a module and forget about the regular expressions. The &lt;a href=&quot;XML::LibXML&quot;&gt;XML::LibXML&lt;/a&gt;, &lt;a href=&quot;HTML::TokeParser&quot;&gt;HTML::TokeParser&lt;/a&gt; and &lt;a href=&quot;HTML::TreeBuilder&quot;&gt;HTML::TreeBuilder&lt;/a&gt; modules are good starts, although each namespace has other parsing modules specialized for certain tasks and different ways of doing it. Start at CPAN Search ( &lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt; ) and wonder at all the work people have done for you already! :)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05df4e656db7dd388d518939d40279c56ee1258" translate="yes" xml:space="preserve">
          <source>Do not use regexes. Use a module and forget about the regular expressions. The &lt;a href=&quot;http://search.cpan.org/perldoc/XML::LibXML&quot;&gt;XML::LibXML&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TokeParser&quot;&gt;HTML::TokeParser&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TreeBuilder&quot;&gt;HTML::TreeBuilder&lt;/a&gt; modules are good starts, although each namespace has other parsing modules specialized for certain tasks and different ways of doing it. Start at CPAN Search ( &lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt; ) and wonder at all the work people have done for you already! :)</source>
          <target state="translated">정규식을 사용하지 마십시오. 모듈을 사용하고 정규식을 잊어 버리십시오. &lt;a href=&quot;http://search.cpan.org/perldoc/XML::LibXML&quot;&gt;XML :: LibXML&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TokeParser&quot;&gt;HTML :: TokeParser&lt;/a&gt; 및 &lt;a href=&quot;http://search.cpan.org/perldoc/HTML::TreeBuilder&quot;&gt;HTML은 : TreeBuilder의&lt;/a&gt; 각 네임 스페이스가 특정 작업과 그 일을 다른 방법을 전문 다른 구문 분석 모듈을 가지고 있지만 모듈은 좋은 시작이다. CPAN 검색 ( &lt;a href=&quot;http://metacpan.org/&quot;&gt;http://metacpan.org/&lt;/a&gt; ) 에서 시작하여 사람들이 이미 당신을 위해 한 모든 일을 궁금해 하십시오 ! :)</target>
        </trans-unit>
        <trans-unit id="cce861955ad84aadd4244ab8f88800ca7035ea2a" translate="yes" xml:space="preserve">
          <source>Do not use something like &lt;code&gt;\b=head\d\b&lt;/code&gt; and expect it to match the beginning of a line. It can't, because for there to be a boundary before the non-word &quot;=&quot;, there must be a word character immediately previous. All plain &lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; boundary determinations look for word characters alone, not for non-word characters nor for string ends. It may help to understand how &amp;lt;\b&amp;gt; and &amp;lt;\B&amp;gt; work by equating them as follows:</source>
          <target state="translated">&lt;code&gt;\b=head\d\b&lt;/code&gt; 와 같은 것을 사용하지 말고 줄의 시작과 일치 할 것으로 예상하십시오. 단어 &quot;=&quot;가 아닌 단어 앞에 경계가 있기 때문에 바로 앞에 단어 문자가 있어야합니다. 모든 일반 &lt;code&gt;\b&lt;/code&gt; 및 &lt;code&gt;\B&lt;/code&gt; 경계 결정은 단어가 아닌 문자 나 문자열 끝이 아닌 단어 문자 만 찾습니다. &amp;lt;\ b&amp;gt;와 &amp;lt;\ B&amp;gt;의 작동 방식을 다음과 같이 동일하게 이해하면 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62ce5cca500c59eee5b0b9a43620a2697e00cf5b" translate="yes" xml:space="preserve">
          <source>Do not use something like &lt;code&gt;\b=head\d\b&lt;/code&gt; and expect it to match the beginning of a line. It can't, because for there to be a boundary before the non-word &quot;=&quot;, there must be a word character immediately previous. All plain &lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; boundary determinations look for word characters alone, not for non-word characters nor for string ends. It may help to understand how &lt;code&gt;\b&lt;/code&gt; and &lt;code&gt;\B&lt;/code&gt; work by equating them as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a735190dab11e5d0be16372e2f20beebf57de6" translate="yes" xml:space="preserve">
          <source>Do not use sprintf() or vsprintf()</source>
          <target state="translated">sprintf () 또는 vsprintf ()를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="bd8826a15f100149be24539f62f1590d0529bde4" translate="yes" xml:space="preserve">
          <source>Do not use strcpy() or strcat() or strncpy() or strncat()</source>
          <target state="translated">strcpy () 또는 strcat () 또는 strncpy () 또는 strncat ()을 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="e845e1c460c616232a9c91d7dbd84468956485b4" translate="yes" xml:space="preserve">
          <source>Do not use strtol() or strtoul()</source>
          <target state="translated">strtol () 또는 strtoul ()을 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="0c29194c83ffb8c5f50d4977f6ee065d347bf4fe" translate="yes" xml:space="preserve">
          <source>Do not use tell() (or other buffered I/O operations) on a filehandle that has been manipulated by sysread(), syswrite(), or sysseek(). Those functions ignore the buffering, while tell() does not.</source>
          <target state="translated">sysread (), syswrite () 또는 sysseek ()에 의해 조작 된 파일 핸들에서 tell () (또는 다른 버퍼 된 I / O 작업)을 사용하지 마십시오. 이러한 함수는 버퍼링을 무시하지만 tell ()은 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3950da255e2df8ad19b4abdbb628393b5e27d661" translate="yes" xml:space="preserve">
          <source>Do not use the module &lt;code&gt;AutoLoader&lt;/code&gt; ; but keep the constant() function and &lt;code&gt;sub AUTOLOAD&lt;/code&gt; for constants.</source>
          <target state="translated">모듈 &lt;code&gt;AutoLoader&lt;/code&gt; 를 사용하지 마십시오 . 상수에 대해서는 constant () 함수와 &lt;code&gt;sub AUTOLOAD&lt;/code&gt; 를 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="912ab3455d8c5c0450b953f7e2828e24748220b7" translate="yes" xml:space="preserve">
          <source>Do not use the module &lt;code&gt;AutoLoader&lt;/code&gt;; but keep the constant() function and &lt;code&gt;sub AUTOLOAD&lt;/code&gt; for constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50e07201ab25152f3dfb27ad57d827f044d1f3b" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; with &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; enabled, as they are at times requesting conflicting actions and the consequence of ignoring this advice will be undefined to allow future improvements in the POSIX exit handling.</source>
          <target state="translated">&lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; 가 활성화 된 pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; vmsish 'status'&lt;/code&gt; 를 사용 하지 마십시오. 충돌 동작을 요청하는 경우가 많으므로이 조언을 무시하면 POSIX 종료 처리에서 향후 개선이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="a4b31e073c7486c8b49c926ffd1a1a8bd9366cae" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;strict&lt;/code&gt; .</source>
          <target state="translated">pragma &lt;code&gt;strict&lt;/code&gt; 를 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="641b8fbe523a923ae74b945dc21791f043e517c9" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;strict&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dec976bdd8c59124a07d2c19d3a7e30fa3ccc83" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;use vmsish 'status'&lt;/code&gt; with &lt;code&gt;PERL_VMS_POSIX_EXIT&lt;/code&gt; enabled, as they are at times requesting conflicting actions and the consequence of ignoring this advice will be undefined to allow future improvements in the POSIX exit handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6facf91ee978da40dfe9d3ea865ab1579d25d93" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;warnings&lt;/code&gt; .</source>
          <target state="translated">pragma &lt;code&gt;warnings&lt;/code&gt; 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="8d90d3b3ad8de8885139d7ed539bfdc6ccdd394d" translate="yes" xml:space="preserve">
          <source>Do not use the pragma &lt;code&gt;warnings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee89e95287669bbd88a11a6aea3e7aa1e7bbfb6" translate="yes" xml:space="preserve">
          <source>Do not use this and --htmlroot in the same call to pod2html; they are mutually exclusive.</source>
          <target state="translated">pod2html을 호출 할 때 this와 --htmlroot를 사용하지 마십시오. 그들은 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="3250376779b0f67e8134deb8086f1402809e9bc8" translate="yes" xml:space="preserve">
          <source>Do not use this as a separator between directories. Some operating systems use different separators between subdirectories as between directories and filenames (for example: VOLUME:[dir1.dir2]file on VMS).</source>
          <target state="translated">이것을 디렉토리 사이의 분리 자로 사용하지 마십시오. 일부 운영 체제는 디렉토리와 파일 이름 (예 : VMS의 VOLUME : [dir1.dir2] 파일)과 같이 서브 디렉토리간에 다른 구분 기호를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="164086a0ac238b7870e606cc1d29ce266a3011d7" translate="yes" xml:space="preserve">
          <source>Do not use this if relative links are desired: use --htmldir instead.</source>
          <target state="translated">상대 링크가 필요한 경우이를 사용하지 마십시오. 대신 --htmldir을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3c5af5b31b181ed54cc1fca5572f9386a6984c19" translate="yes" xml:space="preserve">
          <source>Do not use this to run perl: &lt;code&gt;INCLUDE: perl |&lt;/code&gt; will run the perl that happens to be the first in your path and not necessarily the same perl that is used to run &lt;code&gt;xsubpp&lt;/code&gt; . See &lt;a href=&quot;#The-INCLUDE_COMMAND%3a-Keyword&quot;&gt;The INCLUDE_COMMAND: Keyword&lt;/a&gt;.</source>
          <target state="translated">이것을 사용하여 perl을 실행하지 마십시오. &lt;code&gt;INCLUDE: perl |&lt;/code&gt; 경로에서 첫 번째로 발생하는 펄을 실행하며 반드시 &lt;code&gt;xsubpp&lt;/code&gt; 를 실행하는 데 사용되는 펄과 동일하지는 않습니다 . &lt;a href=&quot;#The-INCLUDE_COMMAND%3a-Keyword&quot;&gt;INCLUDE_COMMAND : 키워드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d907817f14386897f00b03e673b42b77a7d2a197" translate="yes" xml:space="preserve">
          <source>Do not use this to run perl: &lt;code&gt;INCLUDE: perl |&lt;/code&gt; will run the perl that happens to be the first in your path and not necessarily the same perl that is used to run &lt;code&gt;xsubpp&lt;/code&gt;. See &lt;a href=&quot;#The-INCLUDE_COMMAND%3A-Keyword&quot;&gt;&quot;The INCLUDE_COMMAND: Keyword&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f8b5ad3c1702cca1a4d40affd9cb729f0e90f7" translate="yes" xml:space="preserve">
          <source>Do not use this.</source>
          <target state="translated">이것을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="82165a1e97cf695c1ce626d1d090403bda43151a" translate="yes" xml:space="preserve">
          <source>Do not use tmpfile()</source>
          <target state="translated">tmpfile ()을 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="67066fdeeb8477f689c49a4d9d531e1c38c3d6bc" translate="yes" xml:space="preserve">
          <source>Do not use with other Perl types such as HV, AV, SV, CV, because those objects will become corrupted by the pointer copy process.</source>
          <target state="translated">HV, AV, SV, CV와 같은 다른 Perl 유형과 함께 사용하지 마십시오. 이러한 객체는 포인터 복사 프로세스에 의해 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97d251c82a0422b70eb970d71730acc97d0587dc" translate="yes" xml:space="preserve">
          <source>Do not, however, be tempted to do this:</source>
          <target state="translated">그러나 이렇게하려는 유혹을받지 마십시오.</target>
        </trans-unit>
        <trans-unit id="89c4560a90f4c8640ca9769656650496ad022a1f" translate="yes" xml:space="preserve">
          <source>Do note that a switch like &lt;b&gt;--help&lt;/b&gt; creates the variable &lt;code&gt;${-help}&lt;/code&gt; , which is not compliant with &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict &quot;refs&quot;&lt;/code&gt; . Also, when using this option on a script with warnings enabled you may get a lot of spurious &quot;used only once&quot; warnings.</source>
          <target state="translated">&lt;b&gt;--help&lt;/b&gt; 와 같은 스위치 는 변수 &lt;code&gt;${-help}&lt;/code&gt; &lt;b&gt;-help &lt;/b&gt;}를 생성 하는데 , 이는 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict &quot;refs&quot;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; 과 호환되지 않습니다 . 또한 경고가 활성화 된 스크립트에서이 옵션을 사용하면 &quot;한 번만 사용 된&quot;경고가 많이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="571866571b0b846b7eb73f2e13ef858eddd4d338" translate="yes" xml:space="preserve">
          <source>Do note that a switch like &lt;b&gt;--help&lt;/b&gt; creates the variable &lt;code&gt;${-help}&lt;/code&gt;, which is not compliant with &lt;code&gt;use strict &quot;refs&quot;&lt;/code&gt;. Also, when using this option on a script with warnings enabled you may get a lot of spurious &quot;used only once&quot; warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c739ef2c73416de977da1e1813d572016c0b1d06" translate="yes" xml:space="preserve">
          <source>Do note that the examples have been written by many different authors over a period of several decades. Styles and techniques will therefore differ, although some effort has been made to not vary styles too widely in the same sections. Do not consider one style to be better than others - &quot;There's More Than One Way To Do It&quot; is one of Perl's mottos. After all, in your journey as a programmer, you are likely to encounter different styles.</source>
          <target state="translated">이 예제는 수십 년에 걸쳐 많은 다른 저자들에 의해 작성되었습니다. 따라서 동일한 섹션에서 스타일을 너무 광범위하게 변경하지 않으려는 노력이 있었지만 스타일과 기법은 다를 수 있습니다. 한 스타일이 다른 스타일보다 나을 것이라고 생각하지 마십시오. &quot;한 가지 이상의 방법이 있습니다&quot;는 Perl의 모토 중 하나입니다. 결국 프로그래머로서의 여정에서 다른 스타일을 경험하게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="b78869869c0253fd876d1c91bc224e74bb742739" translate="yes" xml:space="preserve">
          <source>Do nothing if &lt;code&gt;*is_utf8p&lt;/code&gt; is 0, or if there are code points in the string not expressible in native byte encoding. In these cases, &lt;code&gt;*is_utf8p&lt;/code&gt; and &lt;code&gt;*lenp&lt;/code&gt; are unchanged, and the return value is the original &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540dbdd2eced4389045109a5d86db714850717db" translate="yes" xml:space="preserve">
          <source>Do one thing and do it well</source>
          <target state="translated">한 가지 일을 잘하십시오</target>
        </trans-unit>
        <trans-unit id="2495a1047a7ca571d906f155a7f581ed5618c76e" translate="yes" xml:space="preserve">
          <source>Do read the README associated with your operating system, e.g. README.aix on the IBM AIX OS. Don't hesitate to supply patches to that README if you find anything missing or changed over a new OS release.</source>
          <target state="translated">운영 체제와 관련된 README를 읽으십시오 (예 : IBM AIX OS에서 README.aix). 새로운 OS 릴리스에서 누락되거나 변경된 것이 있으면 언제든지 해당 README에 패치를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="f6c0054711126ec773d898b58f49cbb4c949cab9" translate="yes" xml:space="preserve">
          <source>Do similar modules already exist in some form?</source>
          <target state="translated">유사한 모듈이 이미 어떤 형태로 존재합니까?</target>
        </trans-unit>
        <trans-unit id="4d86fca77a17d198920e265fa1fed63a01551109" translate="yes" xml:space="preserve">
          <source>Do take care with &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; if your Perl-in-DCL script expects to do things like &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt; .</source>
          <target state="translated">함께 돌봐를 수행 &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; 펄 -에 - DCL 스크립트 예상하는이 같은 것을 할 경우 &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d845fead9ce9f4797485cd08578333a232421e58" translate="yes" xml:space="preserve">
          <source>Do take care with &lt;code&gt;$ ASSIGN/nolog/user SYS$COMMAND: SYS$INPUT&lt;/code&gt; if your Perl-in-DCL script expects to do things like &lt;code&gt;$read = &amp;lt;STDIN&amp;gt;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea0ce9dc382f381b5b301a431cfcd235330a113" translate="yes" xml:space="preserve">
          <source>Do the basic security measures to ensure the directory exists and is writable, that temporary files are opened only if they do not already exist, and that possible race conditions are avoided. Finally the &lt;a href=&quot;#unlink0&quot;&gt;unlink0&lt;/a&gt; function is used to remove files safely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed37eb991a7adeef41e4c420e9ad43ac12f4d7d2" translate="yes" xml:space="preserve">
          <source>Do the basic security measures to ensure the directory exists and is writable, that temporary files are opened only if they do not already exist, and that possible race conditions are avoided. Finally the L</source>
          <target state="translated">디렉토리가 존재하고 쓰기 가능한지, 임시 파일이 존재하지 않는 경우에만 열리고 경쟁 조건을 피할 수 있도록 기본 보안 조치를 수행하십시오. 마지막으로 L</target>
        </trans-unit>
        <trans-unit id="a62956f5b6df99e5d8fc6b8cabce7cc42f269d70" translate="yes" xml:space="preserve">
          <source>Do the same sort of thing to delete a particular line by using &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; to skip the lines you don't want to show up in the output. This example skips every fifth line:</source>
          <target state="translated">출력에 표시하지 않으려는 행을 건너 뛰려면 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 를 사용하여 특정 행을 삭제하는 것과 동일한 종류의 작업을 수행하십시오. 이 예제는 다섯 번째 줄마다 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="7c2c59230eb38e060703df7343686f653113e170" translate="yes" xml:space="preserve">
          <source>Do the same sort of thing to delete a particular line by using &lt;code&gt;next&lt;/code&gt; to skip the lines you don't want to show up in the output. This example skips every fifth line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bee90ebbffd3a020ccb7068ab9d7842e861b7da" translate="yes" xml:space="preserve">
          <source>Do whatever you can to find out, and if you have to: guess. (Don't forget to document your guess with a comment.)</source>
          <target state="translated">찾을 수있는 모든 것을하고, 필요한 경우 : 추측하십시오. (견해와 함께 추측을 문서화하는 것을 잊지 마십시오.)</target>
        </trans-unit>
        <trans-unit id="7eb91ce572ac670ea018bc395e336c8241ec77fe" translate="yes" xml:space="preserve">
          <source>Do you have a proper test case?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1287ea9cdb3e32730cc921890c861ccf51d63478" translate="yes" xml:space="preserve">
          <source>Do you try to run</source>
          <target state="translated">당신은 실행하려고합니까</target>
        </trans-unit>
        <trans-unit id="d659723a2b8c8d2ce99667e3ef2aba7ca933d74a" translate="yes" xml:space="preserve">
          <source>Do you want the command number in the prompt (yes/no)?</source>
          <target state="translated">프롬프트에서 명령 번호를 원하십니까 (예 / 아니요)?</target>
        </trans-unit>
        <trans-unit id="ef4a0d05ff2b5bfd80519b541a891750dedab4e9" translate="yes" xml:space="preserve">
          <source>Do you want to allow installing distros that are not indexed as the highest distro-version for all contained modules (yes, no, ask/yes, ask/no)?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e34172d5018937a0cbacdd4790bf04f4bc81ccf" translate="yes" xml:space="preserve">
          <source>Do you want to allow installing distros with decreasing module versions compared to what you have installed (yes, no, ask/yes, ask/no)?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a7627a867e6bbe22a2b970c115376b82f0139b" translate="yes" xml:space="preserve">
          <source>Do you want to enable code deserialisation (yes/no)?</source>
          <target state="translated">코드 역 직렬화를 사용 하시겠습니까 (예 / 아니요)?</target>
        </trans-unit>
        <trans-unit id="cbd235cb0bbd92aee8e53ccbbbbc3dabc72798c9" translate="yes" xml:space="preserve">
          <source>Do you want to halt on failure (yes/no)?</source>
          <target state="translated">실패시 중단 하시겠습니까 (예 / 아니요)?</target>
        </trans-unit>
        <trans-unit id="373cd2197f990d8762c7c66b4869ae4717a2e44c" translate="yes" xml:space="preserve">
          <source>Do you want to rely on the test report history (yes/no)?</source>
          <target state="translated">테스트 보고서 기록에 의존 하시겠습니까 (예 / 아니요)?</target>
        </trans-unit>
        <trans-unit id="c2c2ed0377afae727b547084f2353f23243f7fd5" translate="yes" xml:space="preserve">
          <source>Do you want to see verbosity turned on when autoselecting mirrors?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a279f6363761148fb8c2b71535a1b4a155b67db" translate="yes" xml:space="preserve">
          <source>Do you want to turn on colored output?</source>
          <target state="translated">컬러 출력을 켜시겠습니까?</target>
        </trans-unit>
        <trans-unit id="87a207a61ec9d6801b880d322288293793a12268" translate="yes" xml:space="preserve">
          <source>Do you want to turn ornaments on?</source>
          <target state="translated">장식품을 켜시겠습니까?</target>
        </trans-unit>
        <trans-unit id="99b869f7fe84b2b6d6d37879f90b1ce5f182c64b" translate="yes" xml:space="preserve">
          <source>Do you want to turn this message off?</source>
          <target state="translated">이 메시지를 끄시겠습니까?</target>
        </trans-unit>
        <trans-unit id="8bf8fea239cbb1f5a4fdb80eb2b8949a38de2f2e" translate="yes" xml:space="preserve">
          <source>Do you want to use a different command for './Build install'? Sudo users will probably prefer:</source>
          <target state="translated">'./Build install'에 다른 명령을 사용 하시겠습니까? Sudo 사용자는 아마도 다음을 선호 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="cc8ccb8accaee9d0eecc936c06f10fdc9aba0e2f" translate="yes" xml:space="preserve">
          <source>Do you want to use a different make command for 'make install'? Cautious people will probably prefer:</source>
          <target state="translated">'make install'에 다른 make 명령을 사용 하시겠습니까? 신중한 사람들은 아마도 다음을 선호 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="4f330885ef3a3b61025e1e796b402fcd50c7b4e7" translate="yes" xml:space="preserve">
          <source>Do you want to use prompt defaults (yes/no)?</source>
          <target state="translated">프롬프트 기본값을 사용 하시겠습니까 (예 / 아니요)?</target>
        </trans-unit>
        <trans-unit id="45d79315d1161c3889c8219bcf2bbab68b8e0fc8" translate="yes" xml:space="preserve">
          <source>Do you want to use the external ping command when autoselecting mirrors?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918ceb56671dd67483da1f39299f85748b336c0e" translate="yes" xml:space="preserve">
          <source>Do you want to:</source>
          <target state="translated">다음을 원하십니까 :</target>
        </trans-unit>
        <trans-unit id="9e4a41283cb7ae53ed67fce592f4d0fb68829e68" translate="yes" xml:space="preserve">
          <source>DoRexx</source>
          <target state="translated">DoRexx</target>
        </trans-unit>
        <trans-unit id="c8e1eee902b0c46f68084c5cd60023755be2adbf" translate="yes" xml:space="preserve">
          <source>Document contains no data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91e32e96ba9f37078ffe29f1ee1859d0140ecfd" translate="yes" xml:space="preserve">
          <source>Document each publically accessible method or subroutine, including params and return values</source>
          <target state="translated">매개 변수 및 리턴 값을 포함하여 공개적으로 액세스 가능한 각 메소드 또는 서브 루틴을 문서화하십시오.</target>
        </trans-unit>
        <trans-unit id="6e00d0928abd84bf71ed2ace7f696bcbc6aee9e8" translate="yes" xml:space="preserve">
          <source>Document purpose, scope and target applications</source>
          <target state="translated">문서 목적, 범위 및 대상 응용 프로그램</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="0d4f3597552829486c9c7978225dcdc88217781f" translate="yes" xml:space="preserve">
          <source>Documentation and help texts</source>
          <target state="translated">설명서 및 도움말 텍스트</target>
        </trans-unit>
        <trans-unit id="1d66c2dca46aca62759ec44a5b9071376128798a" translate="yes" xml:space="preserve">
          <source>Documentation borrowed from the old Thread.pm.</source>
          <target state="translated">이전 Thread.pm에서 빌린 문서.</target>
        </trans-unit>
        <trans-unit id="8b5ab45b761259017419114ca3e9a62382663d77" translate="yes" xml:space="preserve">
          <source>Documentation has been contributed by:</source>
          <target state="translated">문서는 다음에 의해 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="4730bb4bd3211681615071a5ac81bbb7a0d87081" translate="yes" xml:space="preserve">
          <source>Documentation mostly rewritten by Ilmari Karonen, &amp;lt;</source>
          <target state="translated">Ilmari Karonen이 대부분 재 작성한 문서, &amp;lt;</target>
        </trans-unit>
        <trans-unit id="5c1fa297f5d4c566fd5588f14f34ea9f8ecedf5a" translate="yes" xml:space="preserve">
          <source>Documentation of corrections already incorporated into the Unicode data base</source>
          <target state="translated">이미 유니 코드 데이터베이스에 통합 된 수정 사항에 대한 문서</target>
        </trans-unit>
        <trans-unit id="cac7df688d4ef7dcaa6e39b6e0d4e8f277b2acfd" translate="yes" xml:space="preserve">
          <source>Documentation of object-oriented libraries or modules may want to use CONSTRUCTORS and METHODS sections, or CLASS METHODS and INSTANCE METHODS sections, for detailed documentation of the parts of the library and save the DESCRIPTION section for an overview. Large modules with a function interface may want to use FUNCTIONS for similar reasons. Some people use OVERVIEW to summarize the description if it's quite long.</source>
          <target state="translated">객체 지향 라이브러리 또는 모듈의 문서화는 라이브러리의 일부에 대한 자세한 문서화를 위해 CONSTRUCTORS 및 METHODS 섹션 또는 CLASS METHODS 및 INSTANCE METHODS 섹션을 사용하고 개요를 위해 DESCRIPTION 섹션을 저장할 수 있습니다. 기능 인터페이스가있는 대형 모듈은 비슷한 이유로 FUNCTIONS를 사용할 수 있습니다. 설명이 너무 길면 개요를 사용하여 설명을 요약하는 사람들이 있습니다.</target>
        </trans-unit>
        <trans-unit id="49018199d13814134468f853612e00393c5c7fd7" translate="yes" xml:space="preserve">
          <source>Documentation of status and cross reference of proposals for encoding by Unicode of Unihan characters</source>
          <target state="translated">Unihan 문자의 유니 코드로 인코딩하기위한 제안서의 상태 및 상호 참조 문서</target>
        </trans-unit>
        <trans-unit id="cea9d5a4bd3a4c3a2bcfce350d36d1f8a9fd0dd0" translate="yes" xml:space="preserve">
          <source>Documentation of validation Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb488db5f5b4fb936ed78cb59ddbbcefd6c8b7f6" translate="yes" xml:space="preserve">
          <source>Documentation of validation tests</source>
          <target state="translated">검증 테스트 문서화</target>
        </trans-unit>
        <trans-unit id="b139845ddb6a01b9b23ddc81ca29bb8e6b63e194" translate="yes" xml:space="preserve">
          <source>Documentation updates that correct factual errors, explain significant bugs or deficiencies in the current implementation, or fix broken markup.</source>
          <target state="translated">실제 오류를 수정하고, 현재 구현에서 중대한 버그 또는 결함을 설명하거나, 손상된 마크 업을 수정하는 문서 업데이트.</target>
        </trans-unit>
        <trans-unit id="23cea710c088ecfa1ae744391fe173bfdf5d1acb" translate="yes" xml:space="preserve">
          <source>Documenting the patch</source>
          <target state="translated">패치 문서화</target>
        </trans-unit>
        <trans-unit id="a20866ae52f8e35eaed59a179f7c48ea2d19b8fa" translate="yes" xml:space="preserve">
          <source>Documenting your Extension</source>
          <target state="translated">확장 문서화</target>
        </trans-unit>
        <trans-unit id="2080696be6c4c31d4c892420cc245128864bdfe0" translate="yes" xml:space="preserve">
          <source>Does Perl have a Year 2000 or 2038 problem? Is Perl Y2K compliant?</source>
          <target state="translated">Perl에 2000 년 또는 2038 년 문제가 있습니까? Perl Y2K는 호환됩니까?</target>
        </trans-unit>
        <trans-unit id="0d6d8d711a3a4cca710ca22dbfe40093bf45d857" translate="yes" xml:space="preserve">
          <source>Does Perl have a round() function? What about ceil() and floor()? Trig functions?</source>
          <target state="translated">Perl에 round () 함수가 있습니까? ceil ()과 floor ()는 어떻습니까? 삼각 함수?</target>
        </trans-unit>
        <trans-unit id="347f03cef55a503c9fa350dbe1691433852f2738" translate="yes" xml:space="preserve">
          <source>Does a $(CI) and a $(RCS_LABEL) on all files in the MANIFEST file.</source>
          <target state="translated">MANIFEST 파일의 모든 파일에서 $ (CI) 및 $ (RCS_LABEL)을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="11d71dc2fc7b711101e50fab631405e074e41e57" translate="yes" xml:space="preserve">
          <source>Does a &lt;a href=&quot;http://man.he.net/man2/fork&quot;&gt;fork(2)&lt;/a&gt; system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting &lt;a href=&quot;http://man.he.net/man2/fork&quot;&gt;fork(2)&lt;/a&gt;, great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ace7d9d419573301ff609d787f134b02b26193b" translate="yes" xml:space="preserve">
          <source>Does a fork(2) system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting fork(), great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="translated">fork (2) 시스템 호출을 수행하여 동일한 지점에서 동일한 프로그램을 실행하는 새 프로세스를 작성합니다. 하위 pid를 상위 프로세스로 리턴하고 &lt;code&gt;0&lt;/code&gt; 을 하위 프로세스로 리턴 하거나 포크가 실패하면 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 . 파일 디스크립터 (및 때때로 해당 디스크립터에 대한 잠금)는 공유되고 다른 모든 디스크는 복사됩니다. fork ()를 지원하는 대부분의 시스템에서 데이터 페이지에 COW (Copy-On-Write) 기술을 사용하는 등 매우 효율적으로 처리함으로써 지난 수십 년 동안 멀티 태스킹의 주요 패러다임이되었습니다.</target>
        </trans-unit>
        <trans-unit id="94b3dcb831cc7f4b2c1f2db661fceb8975ccf8c1" translate="yes" xml:space="preserve">
          <source>Does a fork(2) system call to create a new process running the same program at the same point. It returns the child pid to the parent process, &lt;code&gt;0&lt;/code&gt; to the child process, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the fork is unsuccessful. File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied. On most systems supporting fork(), great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.</source>
          <target state="translated">fork (2) 시스템 호출을 수행하여 동일한 지점에서 동일한 프로그램을 실행하는 새 프로세스를 작성합니다. 하위 pid를 상위 프로세스로 리턴하고 &lt;code&gt;0&lt;/code&gt; 을 하위 프로세스로 리턴 하거나 포크가 실패하면 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 . 파일 디스크립터 (및 때때로 해당 디스크립터에 대한 잠금)는 공유되고 다른 모든 디스크는 복사됩니다. fork ()를 지원하는 대부분의 시스템에서 데이터 페이지에 COW (Copy-On-Write) 기술을 사용하는 등 매우 효율적으로 처리함으로써 지난 수십 년 동안 멀티 태스킹의 주요 패러다임이되었습니다.</target>
        </trans-unit>
        <trans-unit id="6e7a8e9cc842e50405245756a0a1bacedfbe9c22" translate="yes" xml:space="preserve">
          <source>Does a tree-walk of the syntax tree based at OP and calls METHOD on each op it visits. Each node is visited before its children. If &lt;code&gt;walkoptree_debug&lt;/code&gt; (see below) has been called to turn debugging on then the method &lt;code&gt;walkoptree_debug&lt;/code&gt; is called on each op before METHOD is called.</source>
          <target state="translated">OP를 기반으로 구문 트리의 트리 워크를 수행하고 방문 할 때마다 METHOD를 호출합니다. 각 노드는 자식보다 먼저 방문합니다. 경우 &lt;code&gt;walkoptree_debug&lt;/code&gt; 는 (아래 참조)의 디버깅 차례 호출 한 후 상기 방법 &lt;code&gt;walkoptree_debug&lt;/code&gt; 이 메소드가 호출되기 전에 각 연산에 호출된다.</target>
        </trans-unit>
        <trans-unit id="0a9eae8131e2488c14a006394d04f46b3c05f560" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;a href=&quot;#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt;, except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt;, which is more efficient. On Windows, only the &lt;code&gt;system PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;system LIST&lt;/code&gt;, even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4556ee919b8c9e716ff91fff53e57dd9fa041d" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. On Windows, only the &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="translated">포크가 먼저 수행되고 상위 프로세스가 하위 프로세스가 종료 될 때까지 대기한다는 점을 제외하고는 &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; 와 정확히 동일한 작업을 수행합니다. 인수 처리는 인수 수에 따라 다릅니다. LIST에 둘 이상의 인수가 있거나 LIST가 둘 이상의 값을 가진 배열 인 경우,리스트의 첫 번째 요소가 제공하는 프로그램을 나머지리스트가 제공하는 인수로 시작하십시오. 스칼라 인수가 하나 뿐인 경우, 인수는 쉘 메타 문자를 검사하고, 존재하는 경우 전체 인수가 구문 분석을 위해 시스템의 명령 쉘로 전달됩니다 ( 유닉스 플랫폼의 경우 &lt;code&gt;/bin/sh -c&lt;/code&gt; 이지만 다른 플랫폼). 인수에 쉘 메타 문자가 없으면 단어로 분리되어 &lt;code&gt;execvp&lt;/code&gt; 로 직접 전달됩니다.보다 효율적입니다. Windows에서는 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; 구문 만 쉘 사용을 확실하게 피할 수 있습니다. &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; 는 둘 이상의 요소가 있더라도 첫 번째 생성이 실패하면 셸로 폴백됩니다.</target>
        </trans-unit>
        <trans-unit id="971d377ca0b94eef511ce7a5cf1fbc7ca9fc4308" translate="yes" xml:space="preserve">
          <source>Does exactly the same thing as &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; , except that a fork is done first and the parent process waits for the child process to exit. Note that argument processing varies depending on the number of arguments. If there is more than one argument in LIST, or if LIST is an array with more than one value, starts the program given by the first element of the list with arguments given by the rest of the list. If there is only one scalar argument, the argument is checked for shell metacharacters, and if there are any, the entire argument is passed to the system's command shell for parsing (this is &lt;code&gt;/bin/sh -c&lt;/code&gt; on Unix platforms, but varies on other platforms). If there are no shell metacharacters in the argument, it is split into words and passed directly to &lt;code&gt;execvp&lt;/code&gt; , which is more efficient. On Windows, only the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; syntax will reliably avoid using the shell; &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; , even with more than one element, will fall back to the shell if the first spawn fails.</source>
          <target state="translated">포크가 먼저 수행되고 상위 프로세스가 하위 프로세스가 종료 될 때까지 대기한다는 점을 제외하고는 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt; LIST&lt;/code&gt; 와 정확히 동일한 작업을 수행합니다. 인수 처리는 인수 수에 따라 다릅니다. LIST에 둘 이상의 인수가 있거나 LIST가 둘 이상의 값을 가진 배열 인 경우,리스트의 첫 번째 요소가 제공하는 프로그램을 나머지리스트가 제공하는 인수로 시작하십시오. 스칼라 인수가 하나 뿐인 경우, 인수는 쉘 메타 문자를 검사하고, 존재하는 경우 전체 인수가 구문 분석을 위해 시스템의 명령 쉘로 전달됩니다 ( 유닉스 플랫폼의 경우 &lt;code&gt;/bin/sh -c&lt;/code&gt; 이지만 다른 플랫폼). 인수에 쉘 메타 문자가 없으면 단어로 분리되어 &lt;code&gt;execvp&lt;/code&gt; 로 직접 전달됩니다.보다 효율적입니다. Windows에서는 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; PROGRAM LIST&lt;/code&gt; 구문 만 쉘 사용을 확실하게 피할 수 있습니다. &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; LIST&lt;/code&gt; 는 둘 이상의 요소가 있더라도 첫 번째 생성이 실패하면 셸로 폴백됩니다.</target>
        </trans-unit>
        <trans-unit id="7ae98d71c785265ddcfeeeb07989cf58a75f2684" translate="yes" xml:space="preserve">
          <source>Does it create too much work?</source>
          <target state="translated">너무 많은 일을합니까?</target>
        </trans-unit>
        <trans-unit id="76c48f534cf5b51a41a2a7ce76b162535214df0a" translate="yes" xml:space="preserve">
          <source>Does it potentially introduce new bugs?</source>
          <target state="translated">잠재적으로 새로운 버그가 발생합니까?</target>
        </trans-unit>
        <trans-unit id="163b23e27c4c841d1d0111848b85d7359f51c15f" translate="yes" xml:space="preserve">
          <source>Does it preclude other desirable features?</source>
          <target state="translated">다른 바람직한 기능을 배제합니까?</target>
        </trans-unit>
        <trans-unit id="19da346c64719e8350a8cf9aeb2a31add00b3079" translate="yes" xml:space="preserve">
          <source>Does not &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; to each directory as it recurses. The &lt;code&gt;wanted()&lt;/code&gt; function will need to be aware of this, of course. In this case, &lt;code&gt;$_&lt;/code&gt; will be the same as &lt;code&gt;$File::Find::name&lt;/code&gt; .</source>
          <target state="translated">반복 될 때 각 디렉토리에 &lt;code&gt;&lt;a href=&quot;../functions/chdir&quot;&gt;chdir()&lt;/a&gt;&lt;/code&gt; 하지 않습니다 . &lt;code&gt;wanted()&lt;/code&gt; 기능은 물론,이 인식해야합니다. 이 경우 &lt;code&gt;$_&lt;/code&gt; 는 &lt;code&gt;$File::Find::name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a036b5370a5f7e71f1cac83ea1a1124115ae2c64" translate="yes" xml:space="preserve">
          <source>Does not &lt;code&gt;chdir()&lt;/code&gt; to each directory as it recurses. The &lt;code&gt;wanted()&lt;/code&gt; function will need to be aware of this, of course. In this case, &lt;code&gt;$_&lt;/code&gt; will be the same as &lt;code&gt;$File::Find::name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af44a91c9e39ab0c7463bac15a45ab231dcc0a7d" translate="yes" xml:space="preserve">
          <source>Does not alter the passed in ver SV. See &quot;upg_version&quot; if you want to upgrade the SV.</source>
          <target state="translated">전달 된 ver SV를 변경하지 않습니다. SV를 업그레이드하려면 &quot;upg_version&quot;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7520223aa1c22fe71da2f2fd9fbb194fccf8f278" translate="yes" xml:space="preserve">
          <source>Does not automatically flush output handles on some platforms. (SunOS, Solaris, HP-UX)</source>
          <target state="translated">일부 플랫폼에서 출력 핸들을 자동으로 플러시하지 않습니다. (SunOS, Solaris, HP-UX)</target>
        </trans-unit>
        <trans-unit id="85c15a16ffb99585385d3749320c647694ab9c8d" translate="yes" xml:space="preserve">
          <source>Does not invoke magic on &lt;code&gt;sv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d965ffd27f165cd1bb4e614ffc070019e6e4581" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; on arrays. Does not support explicitly changing array lengths via $#array -- use &lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">배열에서 &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; 를 지원하지 않습니다 . $ # array를 통해 명시 적으로 배열 길이 변경을 지원하지 않습니다 . 대신 &lt;code&gt;&lt;a href=&quot;../functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;../functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4ea86be5c2165da1064e6baf6364de0ac05d7d86" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;splice&lt;/code&gt; on arrays. Does not support explicitly changing array lengths via $#array -- use &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e1e02c4c151b139fab2fca754d38a684aec2de" translate="yes" xml:space="preserve">
          <source>Does not work as</source>
          <target state="translated">작동하지 않습니다</target>
        </trans-unit>
        <trans-unit id="a0eab3410cab5a6dc3b7523e73bfbe22cc007192" translate="yes" xml:space="preserve">
          <source>Does nothing, but won't fail. (Win32)</source>
          <target state="translated">아무것도하지 않지만 실패하지는 않습니다. (Win32)</target>
        </trans-unit>
        <trans-unit id="ab6714990b2e9014158db7ba9506c2e3f1eef1e8" translate="yes" xml:space="preserve">
          <source>Does the concept match the general goals of Perl?</source>
          <target state="translated">이 개념이 Perl의 일반적인 목표와 일치합니까?</target>
        </trans-unit>
        <trans-unit id="dbd3ca43bd95ec8bd28a3afc7d9eb6159f4931f6" translate="yes" xml:space="preserve">
          <source>Does the equivalent of the &lt;code&gt;-c&lt;/code&gt; command-line option. Obviously, this is only useful in a BEGIN block or else the flag is set too late.</source>
          <target state="translated">&lt;code&gt;-c&lt;/code&gt; 명령 행 옵션 과 동일합니다 . 분명히 이것은 BEGIN 블록에서만 유용하거나 그렇지 않으면 플래그가 너무 늦게 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5d2b8e3e1d6fb7e3c6489d878105273a9ab06c85" translate="yes" xml:space="preserve">
          <source>Does the exact opposite to the &lt;b&gt;-W&lt;/b&gt; flag, i.e. it disables all warnings.</source>
          <target state="translated">&lt;b&gt;-W&lt;/b&gt; 플래그와 정반대 입니다. 즉, 모든 경고를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="4f6fc9d8f5b45abfab918dce456df590c87db452" translate="yes" xml:space="preserve">
          <source>Does the module require compilation (i.e. does it have files that end in .xs, .c, .h, .y, .cc, .cxx, or .C)? If it does, life is now officially tough for you, because you have to compile the module yourself (no easy feat on Windows). You'll need a compiler such as Visual C++. Alternatively, you can download a pre-built PPM package from ActiveState. &lt;a href=&quot;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&quot;&gt;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&lt;/a&gt;</source>
          <target state="translated">모듈에 컴파일이 필요합니까 (즉, .xs, .c, .h, .y, .cc, .cxx 또는 .C로 끝나는 파일이 있습니까)? 그렇다면 모듈을 직접 컴파일해야하기 때문에 인생은 공식적으로 힘든 일입니다 (Windows에서는 쉽게 할 수 없음). Visual C ++와 같은 컴파일러가 필요합니다. 또는 ActiveState에서 사전 빌드 된 PPM 패키지를 다운로드 할 수 있습니다. &lt;a href=&quot;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&quot;&gt;http://aspn.activestate.com/ASPN/Downloads/ActivePerl/PPM/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="789d5f325d83c47c0c59dcdb144267b9c7f57ab9" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;a href=&quot;#shift-ARRAY&quot;&gt;&lt;code&gt;shift&lt;/code&gt;&lt;/a&gt;. Or the opposite of a &lt;a href=&quot;#push-ARRAY%2CLIST&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8b1afa4f266e283c1e89777c89973f57e94a2c" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;. Or the opposite of a &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 의 반대입니다 . 또는 보는 방식에 따라 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 의 반대입니다 . 배열 앞에 배열을 추가하고 배열에있는 새로운 요소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="15ca4b87c1dd7484db0ece50d3e128013e8468d9" translate="yes" xml:space="preserve">
          <source>Does the opposite of a &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;. Or the opposite of a &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, depending on how you look at it. Prepends list to the front of the array and returns the new number of elements in the array.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 의 반대입니다 . 또는 보는 방식에 따라 &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 의 반대입니다 . 배열 앞에 배열을 추가하고 배열에있는 새로운 요소 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d2533b4c56788b02d46208e37be9b6ba40d48a38" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; is done. For much more detailed information, please see the documentation for &lt;a href=&quot;#stat-FILEHANDLE&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a01d3bbed716e476e014f93f4ca067ce1b42d2" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; is done. For much more detailed information, please see the documentation for &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 함수 (특수 &lt;code&gt;_&lt;/code&gt; filehandle 설정 포함) 와 동일 하지만 심볼릭 링크가 가리키는 파일 대신 심볼릭 링크를 통계합니다. 시스템에서 심볼릭 링크가 구현되지 않은 경우 일반 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 가 수행됩니다. 보다 자세한 내용은 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2440cc46fc6eb9876beb8fbe0150b6c618c74179" translate="yes" xml:space="preserve">
          <source>Does the same thing as the &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; function (including setting the special &lt;code&gt;_&lt;/code&gt; filehandle) but stats a symbolic link instead of the file the symbolic link points to. If symbolic links are unimplemented on your system, a normal &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; is done. For much more detailed information, please see the documentation for &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 함수 (특수 &lt;code&gt;_&lt;/code&gt; filehandle 설정 포함) 와 동일 하지만 심볼릭 링크가 가리키는 파일 대신 심볼릭 링크를 통계합니다. 시스템에서 심볼릭 링크가 구현되지 않은 경우 일반 &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 가 수행됩니다. 보다 자세한 내용은 &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49ea5c5b0e2565b37e561044495417f1e17e756c" translate="yes" xml:space="preserve">
          <source>Does the same thing that the &lt;a href=&quot;http://man.he.net/man2/listen&quot;&gt;listen(2)&lt;/a&gt; system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;perlipc#Sockets%3A-Client%2FServer-Communication&quot;&gt;&quot;Sockets: Client/Server Communication&quot; in perlipc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f569744c0b8e3b51084edc9f0783b907d38d586b" translate="yes" xml:space="preserve">
          <source>Does the same thing that the &lt;code&gt;listen(2)&lt;/code&gt; system call does. Returns true if it succeeded, false otherwise. Listens to a socket with a given queue size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26f7b80fe6be59ff00dfaaf3a9f27764a36e9e8" translate="yes" xml:space="preserve">
          <source>Does the same thing that the listen(2) system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">listen (2) 시스템 호출과 동일한 기능을 수행합니다. 성공하면 true를, 그렇지 않으면 false를 반환합니다. &lt;a href=&quot;../perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;소켓 : perlipc의 클라이언트 / 서버 통신&lt;/a&gt; 의 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="22db9588c396aba67c7aad2d451295dbb36db3d9" translate="yes" xml:space="preserve">
          <source>Does the same thing that the listen(2) system call does. Returns true if it succeeded, false otherwise. See the example in &lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;Sockets: Client/Server Communication in perlipc&lt;/a&gt;.</source>
          <target state="translated">listen (2) 시스템 호출과 동일한 기능을 수행합니다. 성공하면 true를, 그렇지 않으면 false를 반환합니다. &lt;a href=&quot;perlipc#Sockets%3a-Client%2fServer-Communication&quot;&gt;소켓 : perlipc의 클라이언트 / 서버 통신&lt;/a&gt; 의 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="22374adba20ced760e98d0c0d73bbc827cae9cc0" translate="yes" xml:space="preserve">
          <source>Does this module need linking? Looks into subdirectory objects (see also has_link_code())</source>
          <target state="translated">이 모듈을 연결해야합니까? 하위 디렉토리 객체를 살펴 봅니다 (has_link_code () 참조).</target>
        </trans-unit>
        <trans-unit id="ec5a93789136319c08b5e5d76ea18d252f60bd6c" translate="yes" xml:space="preserve">
          <source>Does very much the same as the cflags script in the perl distribution. It doesn't return the whole compiler command line, but initializes all of its parts. The const_cccmd method then actually returns the definition of the CCCMD macro which uses these parts.</source>
          <target state="translated">펄 배포판의 cflags 스크립트와 거의 동일합니다. 전체 컴파일러 명령 줄을 반환하지 않지만 모든 부분을 초기화합니다. const_cccmd 메소드는 실제로 이러한 파트를 사용하는 CCCMD 매크로의 정의를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6d014ad0641a64b3a2fca948ec89b499199cfda8" translate="yes" xml:space="preserve">
          <source>Does your module pass the 'empty subclass' test? If you say &lt;code&gt;@SUBCLASS::ISA = qw(YOURCLASS);&lt;/code&gt; your applications should be able to use SUBCLASS in exactly the same way as YOURCLASS. For example, does your application still work if you change: &lt;code&gt;$obj = YOURCLASS-&amp;gt;new();&lt;/code&gt; into: &lt;code&gt;$obj = SUBCLASS-&amp;gt;new();&lt;/code&gt; ?</source>
          <target state="translated">모듈이 '빈 서브 클래스'테스트를 통과합니까? 당신이 말하는 경우 &lt;code&gt;@SUBCLASS::ISA = qw(YOURCLASS);&lt;/code&gt; 응용 프로그램은 YOURCLASS와 정확히 동일한 방식으로 SUBCLASS를 사용할 수 있어야합니다. 예를 들어, 변경해도 응용 프로그램이 계속 작동 &lt;code&gt;$obj = YOURCLASS-&amp;gt;new();&lt;/code&gt; : &lt;code&gt;$obj = SUBCLASS-&amp;gt;new();&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="bdcea9fc3bdee92b160e5b96d81fb3d19af3fd30" translate="yes" xml:space="preserve">
          <source>Doesn't construct the %sizeof array for you.</source>
          <target state="translated">% sizeof 배열을 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd3640eea37fa02af99e7bd48394bfa2af60bf4c" translate="yes" xml:space="preserve">
          <source>Doesn't handle complicated expressions built piecemeal, a la:</source>
          <target state="translated">복잡한 식으로 구성된 복잡한 식을 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5787ba7fa720ea9e3316d963760e6faa3df102b3" translate="yes" xml:space="preserve">
          <source>Doesn't necessarily locate all of your C compiler's internally-defined symbols.</source>
          <target state="translated">반드시 C 컴파일러의 내부 정의 기호를 모두 찾을 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="9f3f7c7d9e43e8918099efac1f5805d8811f35df" translate="yes" xml:space="preserve">
          <source>Doing Sums</source>
          <target state="translated">합계</target>
        </trans-unit>
        <trans-unit id="c0d111463257cf715e280f2b7d3c19b013c19ffb" translate="yes" xml:space="preserve">
          <source>Doing something repeatedly.</source>
          <target state="translated">반복해서 무언가를하는 것.</target>
        </trans-unit>
        <trans-unit id="2151e066a0ffe448d6aae7739b4f7382726846a0" translate="yes" xml:space="preserve">
          <source>Doing these checks by hand can quickly become tedious. Writing a bunch of accessors by hand is also incredibly tedious. There are a lot of modules on CPAN that can help you write safer and more concise code, including the modules we recommend in &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">이러한 검사를 수동으로 수행하면 신속하게 지루해질 수 있습니다. 손으로 많은 접근자를 작성하는 것도 매우 지루합니다. CPAN에는 &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; 에서 권장하는 모듈을 포함하여 더 안전하고 간결한 코드를 작성하는 데 도움이되는 많은 모듈이 있습니다. .</target>
        </trans-unit>
        <trans-unit id="e1639673d423ca711b3596783b5c0a4171be6aec" translate="yes" xml:space="preserve">
          <source>Doing this:</source>
          <target state="translated">이것을하는 것 :</target>
        </trans-unit>
        <trans-unit id="26e8873149ae373b2974631c31053dfb03fd11c1" translate="yes" xml:space="preserve">
          <source>Dollar signs in the $perl_code will be protected from make using the &lt;code&gt;quote_literal&lt;/code&gt; method, unless they are recognised as being a make variable, &lt;code&gt;$(varname)&lt;/code&gt;, in which case they will be left for make to expand. Remember to quote make macros else it might be used as a bareword. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b10914d8b0a097ace7176e8973f5c3dee92bb44" translate="yes" xml:space="preserve">
          <source>Domain</source>
          <target state="translated">Domain</target>
        </trans-unit>
        <trans-unit id="c70ec1bd923ff14caf24abddbe98bbe566095521" translate="yes" xml:space="preserve">
          <source>Don't assume &lt;code&gt;&amp;gt;&lt;/code&gt; won't be the first character of a filename. Always use &lt;code&gt;&amp;lt;&lt;/code&gt; explicitly to open a file for reading, or even better, use the three-arg version of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;, unless you want the user to be able to specify a pipe open.</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; 가 파일 이름의 첫 문자가 아니라고 가정하지 마십시오 . 항상 사용하는 &lt;code&gt;&amp;lt;&lt;/code&gt; 더 나은 읽거나 위해 파일을 열려면 명시 적,의 3 인수 버전 사용 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 사용자가 파이프 열림을 지정할 수 있도록하려는 경우를 제외하고 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a28344e54c56dce535a8c7d2f9d06917b8d35362" translate="yes" xml:space="preserve">
          <source>Don't assume &lt;code&gt;&amp;gt;&lt;/code&gt; won't be the first character of a filename. Always use the three-arg version of &lt;a href=&quot;perlfunc#open-FILEHANDLE%2CMODE%2CEXPR&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fadcebe3461dfde168100ac06626ef32c5c3c4" translate="yes" xml:space="preserve">
          <source>Don't assume Unix filesystem access semantics: that read, write, and execute are all the permissions there are, and even if they exist, that their semantics (for example what do &lt;code&gt;&quot;r&quot;&lt;/code&gt; , &lt;code&gt;&quot;w&quot;&lt;/code&gt; , and &lt;code&gt;&quot;x&quot;&lt;/code&gt; mean on a directory) are the Unix ones. The various Unix/POSIX compatibility layers usually try to make interfaces like &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; work, but sometimes there simply is no good mapping.</source>
          <target state="translated">Unix 파일 시스템 액세스 의미론을 가정하지 마십시오. 읽기, 쓰기 및 실행은 모든 권한이 있으며 해당 권한이있는 경우에도 의미론 (예 : &lt;code&gt;&quot;r&quot;&lt;/code&gt; , &lt;code&gt;&quot;w&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;x&quot;&lt;/code&gt; 는 무엇을 의미하는지) 디렉토리에)) 유닉스 것들입니다. 다양한 유닉스 / POSIX 호환성 레이어는 일반적으로 &lt;code&gt;&lt;a href=&quot;functions/chmod&quot;&gt;chmod()&lt;/a&gt;&lt;/code&gt; 와 같은 인터페이스를 작동 시키려고 하지만 때로는 좋은 매핑이없는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="06f72eee2a12b94529d3d5c89896806e70e65187" translate="yes" xml:space="preserve">
          <source>Don't assume Unix filesystem access semantics: that read, write, and execute are all the permissions there are, and even if they exist, that their semantics (for example what do &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;w&lt;/code&gt;, and &lt;code&gt;x&lt;/code&gt; mean on a directory) are the Unix ones. The various Unix/POSIX compatibility layers usually try to make interfaces like &lt;a href=&quot;perlfunc#chmod-LIST&quot;&gt;&lt;code&gt;chmod&lt;/code&gt;&lt;/a&gt; work, but sometimes there simply is no good mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a45b9025bbd946f66021bb7d900991eb240c421" translate="yes" xml:space="preserve">
          <source>Don't assume a particular network device name.</source>
          <target state="translated">특정 네트워크 장치 이름을 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f5fbef7286fcbc0c326a878a2dbfdab5dbe26746" translate="yes" xml:space="preserve">
          <source>Don't assume a particular set of &lt;a href=&quot;perlfunc#ioctl-FILEHANDLE%2CFUNCTION%2CSCALAR&quot;&gt;&lt;code&gt;ioctl&lt;/code&gt;&lt;/a&gt;s will work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d416e1f318922467e8a69618050fe453e3d906" translate="yes" xml:space="preserve">
          <source>Don't assume a particular set of &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt;s will work.</source>
          <target state="translated">특정 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl()&lt;/a&gt;&lt;/code&gt; 세트 가 작동 한다고 가정하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="f77b1e37f7f7fe660c8641daee5c495d72fc56f7" translate="yes" xml:space="preserve">
          <source>Don't assume a text file will end with a newline. They should, but people forget.</source>
          <target state="translated">텍스트 파일이 줄 바꿈으로 끝날 것이라고 가정하지 마십시오. 그들은해야하지만 사람들은 잊어 버립니다.</target>
        </trans-unit>
        <trans-unit id="98161964580f6c72edaf8ce914f3e1d98ec3ce2f" translate="yes" xml:space="preserve">
          <source>Don't assume set-uid and set-gid semantics. (And even if you do, think twice: set-uid and set-gid are a known can of security worms.)</source>
          <target state="translated">set-uid 및 set-gid 의미론을 가정하지 마십시오. (그렇더라도 두 번 생각하십시오. set-uid 및 set-gid는 알려진 보안 웜 캔입니다.)</target>
        </trans-unit>
        <trans-unit id="2bc2fe1e9f901ed7d52401ecf5797d38491bac3d" translate="yes" xml:space="preserve">
          <source>Don't assume that &lt;a href=&quot;Sys::Hostname&quot;&gt;&lt;code&gt;Sys::Hostname&lt;/code&gt;&lt;/a&gt; (or any other API or command) returns either a fully qualified hostname or a non-qualified hostname: it all depends on how the system had been configured. Also remember that for things such as DHCP and NAT, the hostname you get back might not be very useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904c69ae9ffdcafece3576aedd570251fa8bd53f" translate="yes" xml:space="preserve">
          <source>Don't assume that &lt;code&gt;Sys::Hostname&lt;/code&gt; (or any other API or command) returns either a fully qualified hostname or a non-qualified hostname: it all depends on how the system had been configured. Also remember that for things such as DHCP and NAT, the hostname you get back might not be very useful.</source>
          <target state="translated">&lt;code&gt;Sys::Hostname&lt;/code&gt; (또는 다른 API 또는 명령)이 완전한 호스트 이름 또는 규정되지 않은 호스트 이름을 리턴 한다고 가정하지 마십시오 . 시스템 구성 방법에 따라 다릅니다. 또한 DHCP 및 NAT와 같은 경우 다시 얻는 호스트 이름이 그다지 유용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b88cc82b9ad0e24c3082f5794cf3b1736fd326bf" translate="yes" xml:space="preserve">
          <source>Don't assume that a single &lt;a href=&quot;perlfunc#unlink-LIST&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; completely gets rid of the file: some filesystems (most notably the ones in VMS) have versioned filesystems, and &lt;a href=&quot;perlfunc#unlink-LIST&quot;&gt;&lt;code&gt;unlink&lt;/code&gt;&lt;/a&gt; removes only the most recent one (it doesn't remove all the versions because by default the native tools on those platforms remove just the most recent version, too). The portable idiom to remove all the versions of a file is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce6dd3c9e2a99e556dd9e7e5f6487f0ac7f77b2" translate="yes" xml:space="preserve">
          <source>Don't assume that a single &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; completely gets rid of the file: some filesystems (most notably the ones in VMS) have versioned filesystems, and &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; removes only the most recent one (it doesn't remove all the versions because by default the native tools on those platforms remove just the most recent version, too). The portable idiom to remove all the versions of a file is</source>
          <target state="translated">단일 링크 &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink&lt;/a&gt;&lt;/code&gt; 가 파일을 완전히 제거 한다고 가정하지 마십시오 . 일부 파일 시스템 (대부분 VMS의 파일 시스템)은 버전이 지정된 파일 시스템을 가지고 있으며 &lt;code&gt;&lt;a href=&quot;functions/unlink&quot;&gt;unlink()&lt;/a&gt;&lt;/code&gt; 는 가장 최근의 만 제거합니다. 해당 플랫폼의 기본 도구는 최신 버전 만 제거합니다). 파일의 모든 버전을 제거하는 휴대용 관용구는</target>
        </trans-unit>
        <trans-unit id="45827beb2b333818dc1ab476c3c49bc561007b4d" translate="yes" xml:space="preserve">
          <source>Don't assume that any particular port (service) will respond.</source>
          <target state="translated">특정 포트 (서비스)가 응답한다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6999e83ecac7276661229b08d824b9951f96931a" translate="yes" xml:space="preserve">
          <source>Don't assume that in pathnames you can collapse two leading slashes &lt;code&gt;//&lt;/code&gt; into one: some networking and clustering filesystems have special semantics for that. Let the operating system sort it out.</source>
          <target state="translated">경로 이름에서 두 개의 슬래시 를 하나로 축소 할 수 있다고 가정하지 마십시오. &lt;code&gt;//&lt;/code&gt; 일부 네트워킹 및 클러스터링 파일 시스템에는 특별한 의미가 있습니다. 운영 체제에서이를 정리하십시오.</target>
        </trans-unit>
        <trans-unit id="2112a1908707af2984f49347ff99fc029075a9a6" translate="yes" xml:space="preserve">
          <source>Don't assume that the epoch starts at 00:00:00, January 1, 1970, because that is OS- and implementation-specific. It is better to store a date in an unambiguous representation. The ISO 8601 standard defines YYYY-MM-DD as the date format, or YYYY-MM-DDTHH:MM:SS (that's a literal &quot;T&quot; separating the date from the time). Please do use the ISO 8601 instead of making us guess what date 02/03/04 might be. ISO 8601 even sorts nicely as-is. A text representation (like &quot;1987-12-18&quot;) can be easily converted into an OS-specific value using a module like &lt;a href=&quot;Time::Piece&quot;&gt;&lt;code&gt;Time::Piece&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;Time::Piece#Date-Parsing&quot;&gt;&quot;Date Parsing&quot; in Time::Piece&lt;/a&gt;) or &lt;a href=&quot;Date::Parse&quot;&gt;&lt;code&gt;Date::Parse&lt;/code&gt;&lt;/a&gt;. An array of values, such as those returned by &lt;a href=&quot;perlfunc#localtime-EXPR&quot;&gt;&lt;code&gt;localtime&lt;/code&gt;&lt;/a&gt;, can be converted to an OS-specific representation using &lt;a href=&quot;Time::Local&quot;&gt;&lt;code&gt;Time::Local&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d90ea04fc1672840d09560112d2b5f38aad8d8" translate="yes" xml:space="preserve">
          <source>Don't assume that the epoch starts at 00:00:00, January 1, 1970, because that is OS- and implementation-specific. It is better to store a date in an unambiguous representation. The ISO 8601 standard defines YYYY-MM-DD as the date format, or YYYY-MM-DDTHH:MM:SS (that's a literal &quot;T&quot; separating the date from the time). Please do use the ISO 8601 instead of making us guess what date 02/03/04 might be. ISO 8601 even sorts nicely as-is. A text representation (like &quot;1987-12-18&quot;) can be easily converted into an OS-specific value using a module like &lt;code&gt;Date::Parse&lt;/code&gt; . An array of values, such as those returned by &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;, can be converted to an OS-specific representation using &lt;code&gt;Time::Local&lt;/code&gt; .</source>
          <target state="translated">시대는 1970 년 1 월 1 일 00:00:00에 시작한다고 가정하지 마십시오. OS 및 구현에 따라 다릅니다. 명확한 표현으로 날짜를 저장하는 것이 좋습니다. ISO 8601 표준은 YYYY-MM-DD를 날짜 형식으로 정의하거나 YYYY-MM-DDTHH : MM : SS (날짜와 시간을 구분하는 문자 &quot;T&quot;)로 정의합니다. 02/03/04의 날짜를 추측하지 말고 ISO 8601을 사용하십시오. ISO 8601은 그대로 멋지게 정렬합니다. &lt;code&gt;Date::Parse&lt;/code&gt; 와 같은 모듈을 사용하여 텍스트 표현 (예 : &quot;1987-12-18&quot;)을 OS 특정 값으로 쉽게 변환 할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 에서 반환 한 값과 같은 값의 배열 에 &lt;code&gt;Time::Local&lt;/code&gt; 사용하여 OS 특정 표현으로 변환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae81459ffe886d165ec19458ee6907edce3977cd" translate="yes" xml:space="preserve">
          <source>Don't assume that the host has only one network card, or that it can't bind to many virtual IP addresses.</source>
          <target state="translated">호스트에 네트워크 카드가 하나만 있거나 많은 가상 IP 주소에 바인딩 할 수 없다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="35d965a58e99a2d53f33f1c15c097e5154d93daa" translate="yes" xml:space="preserve">
          <source>Don't assume that the name used to invoke a command or program with &lt;a href=&quot;perlfunc#system-LIST&quot;&gt;&lt;code&gt;system&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perlfunc#exec-LIST&quot;&gt;&lt;code&gt;exec&lt;/code&gt;&lt;/a&gt; can also be used to test for the existence of the file that holds the executable code for that command or program. First, many systems have &quot;internal&quot; commands that are built-in to the shell or OS and while these commands can be invoked, there is no corresponding file. Second, some operating systems (e.g., Cygwin, DJGPP, OS/2, and VOS) have required suffixes for executable files; these suffixes are generally permitted on the command name but are not required. Thus, a command like &lt;code&gt;perl&lt;/code&gt; might exist in a file named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762d289b8f69911c48e30355fa8f2ef9119426cc" translate="yes" xml:space="preserve">
          <source>Don't assume that the name used to invoke a command or program with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; can also be used to test for the existence of the file that holds the executable code for that command or program. First, many systems have &quot;internal&quot; commands that are built-in to the shell or OS and while these commands can be invoked, there is no corresponding file. Second, some operating systems (e.g., Cygwin, DJGPP, OS/2, and VOS) have required suffixes for executable files; these suffixes are generally permitted on the command name but are not required. Thus, a command like</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 를 사용하여 명령 또는 프로그램을 호출하는 데 사용되는 이름을 사용하여 해당 명령 또는 프로그램 의 실행 가능 코드를 보유한 파일의 존재를 테스트 할 수도 있다고 가정하지 마십시오 . 첫째, 많은 시스템에는 셸 또는 OS에 내장 된 &quot;내부&quot;명령이 있으며 이러한 명령을 호출 할 수 있지만 해당 파일이 없습니다. 둘째, 일부 운영 체제 (예 : Cygwin, DJGPP, OS / 2 및 VOS)는 실행 파일에 대한 접미사가 필요합니다. 이러한 접미사는 일반적으로 명령 이름에서 허용되지만 필수는 아닙니다. 따라서 다음과 같은 명령</target>
        </trans-unit>
        <trans-unit id="1514a854a4b008c5fba8916a7962921e2b8b3a4a" translate="yes" xml:space="preserve">
          <source>Don't assume that there is only one way to get through firewalls to the public Internet.</source>
          <target state="translated">방화벽을 통과하여 공용 인터넷으로 이동하는 유일한 방법이 있다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="c6a1267eacc3c912d76fd037d987680a5762ee68" translate="yes" xml:space="preserve">
          <source>Don't assume that write/modify permission on a directory gives the right to add or delete files/directories in that directory. That is filesystem specific: in some filesystems you need write/modify permission also (or even just) in the file/directory itself. In some filesystems (AFS, DFS) the permission to add/delete directory entries is a completely separate permission.</source>
          <target state="translated">디렉토리에 대한 쓰기 / 수정 권한이 해당 디렉토리에서 파일 / 디렉토리를 추가하거나 삭제할 수있는 권한을 제공한다고 가정하지 마십시오. 이는 파일 시스템에 따라 다릅니다. 일부 파일 시스템에서는 파일 / 디렉토리 자체에서도 쓰기 / 수정 권한이 필요합니다. 일부 파일 시스템 (AFS, DFS)에서 디렉토리 항목 추가 / 삭제 권한은 완전히 별개의 권한입니다.</target>
        </trans-unit>
        <trans-unit id="445d23235b8dff3b578e3bb5bf0fc30d1a0490ac" translate="yes" xml:space="preserve">
          <source>Don't assume that you can ping hosts and get replies.</source>
          <target state="translated">호스트를 핑하고 응답을받을 수 있다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b1edc420b94bcf10bf4d8c3ee5b511b8b1bd17fb" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach outside world through any other port than 80, or some web proxy. ftp is blocked by many firewalls.</source>
          <target state="translated">80 이외의 포트 또는 웹 프록시를 통해 외부에 도달 할 수 있다고 가정하지 마십시오. ftp는 많은 방화벽에 의해 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="c31864fe8f7fd5417d78f831be7f49971ddfa830" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach the public Internet.</source>
          <target state="translated">공용 인터넷에 연결할 수 있다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e3635e84ac318882496643a11d43ff013c114f31" translate="yes" xml:space="preserve">
          <source>Don't assume that you can reach yourself or any node by the name 'localhost'. The same goes for '127.0.0.1'. You will have to try both.</source>
          <target state="translated">'localhost'라는 이름으로 자신이나 노드에 도달 할 수 있다고 가정하지 마십시오. '127.0.0.1'도 마찬가지입니다. 둘 다 시도해야합니다.</target>
        </trans-unit>
        <trans-unit id="94e84b069d17212c205601cb91a4bdb912d4357e" translate="yes" xml:space="preserve">
          <source>Don't assume that you can send email by connecting to the local SMTP port.</source>
          <target state="translated">로컬 SMTP 포트에 연결하여 이메일을 보낼 수 있다고 가정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="93ae10616af2ea19ea7f8a1f9e13d6eb9fc81add" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix filesystem access semantics: the operating system or the filesystem may be using some ACL systems, which are richer languages than the usual &lt;code&gt;rwx&lt;/code&gt; . Even if the &lt;code&gt;rwx&lt;/code&gt; exist, their semantics might be different.</source>
          <target state="translated">Unix 파일 시스템 액세스 시맨틱을 가정하지 마십시오. 운영 체제 또는 파일 시스템은 일반적인 &lt;code&gt;rwx&lt;/code&gt; 보다 풍부한 언어 인 일부 ACL 시스템을 사용 중일 수 있습니다 . &lt;code&gt;rwx&lt;/code&gt; 라도 가 존재 의미가 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01f2ad69ad6eb78a30ffe872332c9621f4a17dd3" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix filesystem access semantics: the operating system or the filesystem may be using some ACL systems, which are richer languages than the usual &lt;code&gt;rwx&lt;/code&gt;. Even if the &lt;code&gt;rwx&lt;/code&gt; exist, their semantics might be different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd69e1b079ed05055f1874e9bdc17c43b7ee863" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix user and group semantics: especially, don't expect &lt;a href=&quot;perlvar#%24%3C&quot;&gt;&lt;code&gt;$&amp;lt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%24%3E&quot;&gt;&lt;code&gt;$&amp;gt;&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;perlvar#%24%28&quot;&gt;&lt;code&gt;$(&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;perlvar#%24%29&quot;&gt;&lt;code&gt;$)&lt;/code&gt;&lt;/a&gt;) to work for switching identities (or memberships).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f793b546a43c7fdfddcd37819e15f770633a875c" translate="yes" xml:space="preserve">
          <source>Don't assume the Unix user and group semantics: especially, don't expect &lt;code&gt;$&amp;lt;&lt;/code&gt; and &lt;code&gt;$&amp;gt;&lt;/code&gt; (or &lt;code&gt;$(&lt;/code&gt; and &lt;code&gt;$)&lt;/code&gt; ) to work for switching identities (or memberships).</source>
          <target state="translated">유닉스 사용자 및 그룹 시맨틱을 가정하지 마십시오. 특히 &lt;code&gt;$&amp;lt;&lt;/code&gt; 및 &lt;code&gt;$&amp;gt;&lt;/code&gt; (또는 &lt;code&gt;$(&lt;/code&gt; and &lt;code&gt;$)&lt;/code&gt; 를 기대하지 마십시오. )가 ID (또는 멤버쉽)를 전환 .</target>
        </trans-unit>
        <trans-unit id="de83ff9adf0f76046a05e27193105138389e30d8" translate="yes" xml:space="preserve">
          <source>Don't be afraid to use loop labels--they're there to enhance readability as well as to allow multilevel loop breaks. See the previous example.</source>
          <target state="translated">루프 레이블 사용을 두려워하지 마십시오. 가독성을 높이고 멀티 레벨 루프 나누기를 허용합니다. 이전 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="789665e74c277d58dbd4bc3f085faf66c237708c" translate="yes" xml:space="preserve">
          <source>Don't be fooled into thinking that it is hard to create portable Perl code. It isn't. Perl tries its level-best to bridge the gaps between what's available on different platforms, and all the means available to use those features. Thus almost all Perl code runs on any machine without modification. But there are some significant issues in writing portable code, and this document is entirely about those issues.</source>
          <target state="translated">휴대용 Perl 코드를 작성하는 것이 어렵다고 생각하지 마십시오. 그렇지 않습니다. Perl은 다른 플랫폼에서 사용 가능한 기능과 해당 기능을 사용할 수있는 모든 수단 간의 격차를 해소하기 위해 최선을 다합니다. 따라서 거의 모든 Perl 코드가 수정없이 모든 컴퓨터에서 실행됩니다. 그러나 이식 가능한 코드를 작성하는 데 중요한 문제가 있으며이 문서는 전적으로 이러한 문제에 관한 것입니다.</target>
        </trans-unit>
        <trans-unit id="e9382c68d62f11f58c0e0116d77660fc6a3b3ba4" translate="yes" xml:space="preserve">
          <source>Don't blame Perl. It's the same as in C. IEEE says we have to do this. Perl numbers whose absolute values are integers under 2**31 (on 32-bit machines) will work pretty much like mathematical integers. Other numbers are not guaranteed.</source>
          <target state="translated">Perl을 비난하지 마십시오. IEEE와 마찬가지로 C도 마찬가지다. 절대 값이 2 ** 31 (32 비트 시스템) 미만의 정수인 Perl 숫자는 수학 정수와 매우 유사하게 작동합니다. 다른 번호는 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="774b4dd48a669835b4126c2772387c78ce9c98be" translate="yes" xml:space="preserve">
          <source>Don't bother using &lt;code&gt;trailingData&lt;/code&gt; if the input is a filename.</source>
          <target state="translated">&lt;code&gt;trailingData&lt;/code&gt; 를 사용하지 않아도됩니다.입력이 파일 이름 인 경우 .</target>
        </trans-unit>
        <trans-unit id="e2b0a9f3aafe7e01341dfe674e6e343efc8bbb76" translate="yes" xml:space="preserve">
          <source>Don't change this variable unless you &lt;b&gt;really&lt;/b&gt; know what you're doing.</source>
          <target state="translated">당신이 &lt;b&gt;정말로&lt;/b&gt; 하지 않는 한이 변수를 변경하지 마십시오&lt;b&gt;&lt;/b&gt; 수행중인 작업을 모르면 .</target>
        </trans-unit>
        <trans-unit id="645ff8a225da487f56ff11a853ab337b50f980b8" translate="yes" xml:space="preserve">
          <source>Don't count on a specific environment variable existing in &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt;. Don't count on &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; entries being case-sensitive, or even case-preserving. Don't try to clear &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt;, or, if you really have to, make it conditional on &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; since in VMS the &lt;a href=&quot;perlvar#%25ENV&quot;&gt;&lt;code&gt;%ENV&lt;/code&gt;&lt;/a&gt; table is much more than a per-process key-value string table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3d8d6437b2fb83642a1fd7abe5420705d405dd" translate="yes" xml:space="preserve">
          <source>Don't count on a specific environment variable existing in &lt;code&gt;%ENV&lt;/code&gt; . Don't count on &lt;code&gt;%ENV&lt;/code&gt; entries being case-sensitive, or even case-preserving. Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt; , or, if you really have to, make it conditional on &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; since in VMS the &lt;code&gt;%ENV&lt;/code&gt; table is much more than a per-process key-value string table.</source>
          <target state="translated">&lt;code&gt;%ENV&lt;/code&gt; 존재하는 특정 환경 변수에 의존하지 마십시오 . 대소 문자를 구분하거나 대소 문자를 유지하는 &lt;code&gt;%ENV&lt;/code&gt; 항목을 사용 하지 마십시오 . &lt;code&gt;%ENV = ();&lt;/code&gt; 라고 말하여 &lt;code&gt;%ENV&lt;/code&gt; 를 지우려고하지 마십시오 . 또는 VMS에서 &lt;code&gt;%ENV&lt;/code&gt; 테이블은 프로세스 당 키-값 문자열 테이블보다 훨씬 많기 때문에 &lt;code&gt;$^O ne 'VMS'&lt;/code&gt; 에 대해 조건부로 만들어야 합니다.</target>
        </trans-unit>
        <trans-unit id="bc8ffb22803041bf2bc487bfe46bde9fbca507cc" translate="yes" xml:space="preserve">
          <source>Don't count on filename globbing. Use &lt;a href=&quot;perlfunc#opendir-DIRHANDLE%2CEXPR&quot;&gt;&lt;code&gt;opendir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;perlfunc#readdir-DIRHANDLE&quot;&gt;&lt;code&gt;readdir&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;perlfunc#closedir-DIRHANDLE&quot;&gt;&lt;code&gt;closedir&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037f7905f794172b9aa798cbaa7cfb0372b5498b" translate="yes" xml:space="preserve">
          <source>Don't count on filename globbing. Use &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">파일 이름 globbing에 의존하지 마십시오. 대신 &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/closedir&quot;&gt;closedir&lt;/a&gt;&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e8d15e2d76caf019a3701f78e8198d57683e81f9" translate="yes" xml:space="preserve">
          <source>Don't count on per-program environment variables, or per-program current directories.</source>
          <target state="translated">프로그램 별 환경 변수 또는 프로그램 별 현재 디렉토리를 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="3bc23f8507c1bb1be1e0453fc6f57c0fb86fa9ba" translate="yes" xml:space="preserve">
          <source>Don't count on signals or &lt;a href=&quot;perlvar#%25SIG&quot;&gt;&lt;code&gt;%SIG&lt;/code&gt;&lt;/a&gt; for anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660cbdd54752be68a4dc2ccd79e3477dc980f960" translate="yes" xml:space="preserve">
          <source>Don't count on signals or &lt;code&gt;%SIG&lt;/code&gt; for anything.</source>
          <target state="translated">신호 또는 &lt;code&gt;%SIG&lt;/code&gt; 에 의존하지 않습니다 를 .</target>
        </trans-unit>
        <trans-unit id="4bac29705acad970a5fc0227d41302ccfd1686b2" translate="yes" xml:space="preserve">
          <source>Don't count on specific values of &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt;, neither numeric nor especially the string values. Users may switch their locales causing error messages to be translated into their languages. If you can trust a POSIXish environment, you can portably use the symbols defined by the &lt;a href=&quot;errno&quot;&gt;&lt;code&gt;Errno&lt;/code&gt;&lt;/a&gt; module, like &lt;code&gt;ENOENT&lt;/code&gt;. And don't trust on the values of &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; at all except immediately after a failed system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2504f73349f543cd4ab97266d28a299e9f5178ef" translate="yes" xml:space="preserve">
          <source>Don't count on specific values of &lt;code&gt;$!&lt;/code&gt; , neither numeric nor especially the string values. Users may switch their locales causing error messages to be translated into their languages. If you can trust a POSIXish environment, you can portably use the symbols defined by the &lt;code&gt;Errno&lt;/code&gt; module, like &lt;code&gt;ENOENT&lt;/code&gt; . And don't trust on the values of &lt;code&gt;$!&lt;/code&gt; at all except immediately after a failed system call.</source>
          <target state="translated">&lt;code&gt;$!&lt;/code&gt; 특정 값에 의존하지 마십시오 ! 숫자 나 문자열 값이 아닙니다. 사용자가 로케일을 전환하여 오류 메시지가 해당 언어로 번역 될 수 있습니다. POSIXish 환경을 신뢰할 수있는 경우 &lt;code&gt;ENOENT&lt;/code&gt; 와 같이 &lt;code&gt;Errno&lt;/code&gt; 모듈에 의해 정의 된 기호를 이식 가능하게 사용할 수 있습니다 . 그리고 &lt;code&gt;$!&lt;/code&gt; 의 가치를 믿지 마십시오 ! 시스템 호출이 실패한 직후를 제외하고는</target>
        </trans-unit>
        <trans-unit id="d29e3f7d07b96795819a57e76db3864389865c2f" translate="yes" xml:space="preserve">
          <source>Don't direct the users of your module to download &lt;code&gt;Devel::PPPort&lt;/code&gt; . They are most probably no XS writers. Also, don't make</source>
          <target state="translated">모듈 사용자에게 &lt;code&gt;Devel::PPPort&lt;/code&gt; 를 다운로드하도록 지시하지 마십시오 . 그들은 아마도 XS 작가가 아닐 것입니다. 또한 만들지 마십시오</target>
        </trans-unit>
        <trans-unit id="d12289a8f5647dd05ebc42ceb314e67b5593c2a3" translate="yes" xml:space="preserve">
          <source>Don't direct the users of your module to download &lt;code&gt;Devel::PPPort&lt;/code&gt;. They are most probably not XS writers. Also, don't make</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8b6f86bbfc2b6c173c74faf597f3f3d4ca2dc7" translate="yes" xml:space="preserve">
          <source>Don't display</source>
          <target state="translated">표시하지 않음</target>
        </trans-unit>
        <trans-unit id="c1e22de2ba66c0889226c5735ba53c5285571154" translate="yes" xml:space="preserve">
          <source>Don't display mostly harmless warning messages.</source>
          <target state="translated">대부분 무해한 경고 메시지를 표시하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9187d0c222d008aeb189cdee4ced6eab248011a7" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt; when a simple &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; would do. The &lt;a href=&quot;#print-FILEHANDLE-LIST&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; is more efficient and less error prone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1547fa551c603cca7def3259e5b1fd45d8dbc6f8" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; when a simple &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; would do. The &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; is more efficient and less error prone.</source>
          <target state="translated">간단한 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 할 때 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 를 사용하는 함정에 빠지지 마십시오 . &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 보다 효율적이고 덜 오류 경향이있다.</target>
        </trans-unit>
        <trans-unit id="29cf7dc4de80fc368eaed82cbb02b8b6d7166fa2" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of using a &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; when a simple &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; would do. The &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; is more efficient and less error prone.</source>
          <target state="translated">간단한 &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 할 때 &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 를 사용하는 함정에 빠지지 마십시오 . &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 보다 효율적이고 덜 오류 경향이있다.</target>
        </trans-unit>
        <trans-unit id="2de68b400b15f729bfc2845f7ab8c8768fb9196d" translate="yes" xml:space="preserve">
          <source>Don't fall into the trap of writing for the wrong audience. Your primary audience is a reasonably experienced developer with at least a moderate understanding of your module's application domain, who's just downloaded your module and wants to start using it as quickly as possible.</source>
          <target state="translated">잘못된 청중을 위해 글쓰기의 함정에 빠지지 마십시오. 주요 대상은 모듈을 다운로드 한 후 가능한 빨리 모듈을 사용하기를 원하는 모듈의 응용 프로그램 도메인에 대해 어느 정도 이해 한 합리적인 경험이있는 개발자입니다.</target>
        </trans-unit>
        <trans-unit id="f7e449fde074df52d869952df1fc18793a8a93fc" translate="yes" xml:space="preserve">
          <source>Don't forget the exceptional, pathological cases.</source>
          <target state="translated">예외적 인 병리학 적 사례를 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b1e51289079b4f632343c894dc7cce8050066f98" translate="yes" xml:space="preserve">
          <source>Don't forget to</source>
          <target state="translated">잊지 마세요</target>
        </trans-unit>
        <trans-unit id="5c3276edb41b4976dc4e628709afd368361bf6e9" translate="yes" xml:space="preserve">
          <source>Don't forget to register your class with &lt;a href=&quot;TAP::Parser::IteratorFactory#register_handler&quot;&gt;&quot;register_handler&quot; in TAP::Parser::IteratorFactory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6739c8879bd9d08b76ade5df931676453f506a" translate="yes" xml:space="preserve">
          <source>Don't go through silly contortions to exit a loop at the top or the bottom, when Perl provides the &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; operator so you can exit in the middle. Just &quot;outdent&quot; it a little to make it more visible:</source>
          <target state="translated">Perl이 &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 연산자를 제공 하여 중간에서 빠져 나올 때 상단 또는 하단의 루프를 종료하기 위해 바보 같은 왜곡을 겪지 마십시오 . 좀 더 눈에 잘 띄게하기 위해 약간 &quot;들여 쓰기&quot;하십시오.</target>
        </trans-unit>
        <trans-unit id="95608ab0b4f68aad0fcac7882ddee0f738db3b5d" translate="yes" xml:space="preserve">
          <source>Don't go through silly contortions to exit a loop at the top or the bottom, when Perl provides the &lt;code&gt;last&lt;/code&gt; operator so you can exit in the middle. Just &quot;outdent&quot; it a little to make it more visible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24938e6209641248330c946317ddd16f85839df" translate="yes" xml:space="preserve">
          <source>Don't just present an example without explaining what it does. Adding a short paragraph saying what the example will do can increase the value of the example immensely.</source>
          <target state="translated">그 일을 설명하지 않고 예를 제시하지 마십시오. 예제가 무엇을하는지 짧은 단락을 추가하면 예제의 가치가 엄청나게 증가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7085b86a690c754818cc958bdb8d7286c8544cb" translate="yes" xml:space="preserve">
          <source>Don't know how to get file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938fa91f29fdecf583cec172909de6ca4aee6111" translate="yes" xml:space="preserve">
          <source>Don't know how to handle magic of type \%o</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2f3b7627d5c9318a43fdf0c7ed8eb29f6f63df" translate="yes" xml:space="preserve">
          <source>Don't mix filtered &amp;amp; non-filtered data in the same database file.</source>
          <target state="translated">필터링 된 데이터와 필터링되지 않은 데이터를 동일한 데이터베이스 파일에 혼합하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9bfaee9208ed0b4080e76b49f7092be9da21317d" translate="yes" xml:space="preserve">
          <source>Don't open the same file more than once at a time for writing, as some operating systems put mandatory locks on such files.</source>
          <target state="translated">일부 운영 체제는 이러한 파일에 강제 잠금을 설정하므로 쓰기 위해 한 번에 같은 파일을 두 번 이상 열지 마십시오.</target>
        </trans-unit>
        <trans-unit id="13d0e6ad295f2f5fa4a0e1c2294ab660c2ff68f2" translate="yes" xml:space="preserve">
          <source>Don't output the &quot;(definitions)&quot; sections.</source>
          <target state="translated">&quot;(정의)&quot;섹션을 출력하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8760a0137fe661818eb2724e50d3c58a224e6f3d" translate="yes" xml:space="preserve">
          <source>Don't put &quot;=head</source>
          <target state="translated">&quot;= 머리를 넣지 마십시오</target>
        </trans-unit>
        <trans-unit id="ad5ea38ded2263705342205dafdb4799d4e0a15b" translate="yes" xml:space="preserve">
          <source>Don't quote large strings unless absolutely necessary:</source>
          <target state="translated">꼭 필요한 경우가 아니면 큰 문자열을 인용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f5cf2886b363988134aefd1d621d74fc94b6b465" translate="yes" xml:space="preserve">
          <source>Don't re-invent the wheel</source>
          <target state="translated">바퀴를 다시 발명하지 마십시오</target>
        </trans-unit>
        <trans-unit id="81177c27776c8009338c295142a35e130e198399" translate="yes" xml:space="preserve">
          <source>Don't read an entire file into memory if you can process it line by line. Or more concretely, use a loop like this:</source>
          <target state="translated">한 줄씩 처리 할 수 ​​있다면 전체 파일을 메모리로 읽지 마십시오. 또는 더 구체적으로 다음과 같은 루프를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a35797b1a1b72b9841ad51955b9000b5a1529ffb" translate="yes" xml:space="preserve">
          <source>Don't require every module user to jump through the same hoops to achieve a simple result. You can always include optional parameters or routines for more complex or non-standard behaviour. If most of your users have to type a few almost identical lines of code when they start using your module, it's a sign that you should have made that behaviour a default. Another good indicator that you should use defaults is if most of your users call your routines with the same arguments.</source>
          <target state="translated">간단한 결과를 얻기 위해 모든 모듈 사용자가 동일한 후프를 뛰어 넘을 필요는 없습니다. 더 복잡하거나 비표준적인 동작을 위해 선택적 매개 변수 또는 루틴을 항상 포함 할 수 있습니다. 대부분의 사용자가 모듈을 사용할 때 거의 동일한 코드 줄을 입력해야하는 경우 해당 동작을 기본값으로 설정해야합니다. 기본값을 사용해야한다는 또 다른 좋은 지표는 대부분의 사용자가 동일한 인수로 루틴을 호출하는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="c723f7c592b67ddf269e14e867541435896967e5" translate="yes" xml:space="preserve">
          <source>Don't scan for the found substrings.</source>
          <target state="translated">찾은 하위 문자열을 스캔하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="d6fcbb0953d0c44b0d3d4321526cee5c66bebf52" translate="yes" xml:space="preserve">
          <source>Don't send a bug received acknowledgement to the reply address. Generally it is only a sensible to use this option if you are a perl maintainer actively watching perl porters for your message to arrive.</source>
          <target state="translated">답장 주소로 버그 수신 확인을 보내지 마십시오. 일반적으로 Perl 관리자가 펄 포터를 적극적으로보고 메시지가 도착하는 경우이 옵션을 사용하는 것이 합리적입니다.</target>
        </trans-unit>
        <trans-unit id="b7493963fb4c5797894e70b946b1c96426315969" translate="yes" xml:space="preserve">
          <source>Don't send copy to administrator when sending report by mail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22920608692f0a3432e5ce4c9717be87d806f116" translate="yes" xml:space="preserve">
          <source>Don't send copy to administrator.</source>
          <target state="translated">관리자에게 사본을 보내지 마십시오.</target>
        </trans-unit>
        <trans-unit id="fb71d35c71ceb2f9bf260b8991604a97329efaf4" translate="yes" xml:space="preserve">
          <source>Don't slurp!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc7424f428b4c2b286895e2bee1c1badf45b0f9" translate="yes" xml:space="preserve">
          <source>Don't think about it too much.</source>
          <target state="translated">그것에 대해 너무 많이 생각하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e145223fc51004b2dae0ceec37468cb3be4a2528" translate="yes" xml:space="preserve">
          <source>Don't think that you can get the address of a Perl variable when it is stored as an integer or double number! &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;('P', $x)&lt;/code&gt; will force the variable's internal representation to string, just as if you had written something like &lt;code&gt;$x .= ''&lt;/code&gt; .</source>
          <target state="translated">정수 또는 이중 숫자로 저장된 Perl 변수의 주소를 얻을 수 있다고 생각하지 마십시오! &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;('P', $x)&lt;/code&gt; 은 &lt;code&gt;$x .= ''&lt;/code&gt; 와 같은 것을 쓴 것처럼 변수의 내부 표현을 문자열로 강제합니다 . = '' .</target>
        </trans-unit>
        <trans-unit id="aa78efdd982c660bde808f9404fa1a1f66350b93" translate="yes" xml:space="preserve">
          <source>Don't think that you can get the address of a Perl variable when it is stored as an integer or double number! &lt;code&gt;pack('P', $x)&lt;/code&gt; will force the variable's internal representation to string, just as if you had written something like &lt;code&gt;$x .= ''&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0c8af6f9c4025d7dc7e616e0715698cd40e403" translate="yes" xml:space="preserve">
          <source>Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt; , it will throw a fatal error. This is equivalent to doing the following from DCL:</source>
          <target state="translated">&lt;code&gt;%ENV = ();&lt;/code&gt; 라고 말하여 &lt;code&gt;%ENV&lt;/code&gt; 를 지우려고하지 마십시오 .치명적인 오류가 발생합니다. 이것은 DCL에서 다음을 수행하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="45c019f954bb8eef5e6daf4d3924ba435ccd958e" translate="yes" xml:space="preserve">
          <source>Don't try to clear &lt;code&gt;%ENV&lt;/code&gt; by saying &lt;code&gt;%ENV = ();&lt;/code&gt;, it will throw a fatal error. This is equivalent to doing the following from DCL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed025c55f145c736fa2b816ded97f2454d7a958f" translate="yes" xml:space="preserve">
          <source>Don't try to do this:</source>
          <target state="translated">이것을 시도하지 마십시오 :</target>
        </trans-unit>
        <trans-unit id="6dcb6f3c6b552350b94a3e90424b7771b163de66" translate="yes" xml:space="preserve">
          <source>Don't use &quot;=item&quot;s outside of an &quot;=over&quot; ... &quot;=back&quot; region.</source>
          <target state="translated">&quot;= over&quot;... &quot;= back&quot;영역 외부에서 &quot;= item&quot;을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="f2de3f7e5d9fd204f62d8c9e039efe8db3c5c0b9" translate="yes" xml:space="preserve">
          <source>Don't use &lt;a href=&quot;#exit-EXPR&quot;&gt;&lt;code&gt;exit&lt;/code&gt;&lt;/a&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;a href=&quot;#die-LIST&quot;&gt;&lt;code&gt;die&lt;/code&gt;&lt;/a&gt; instead, which can be trapped by an &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7de6cdfcbff257732efdc95079781ff79434e7b" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;:&lt;/code&gt; as a part of a filename since many systems use that for their own semantics (Mac OS Classic for separating pathname components, many networking schemes and utilities for separating the nodename and the pathname, and so on). For the same reasons, avoid &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;.</source>
          <target state="translated">사용하지 마십시오 &lt;code&gt;:&lt;/code&gt; 파일 이름의 일환으로 많은 시스템이 (등등 노드 이름 및 경로 이름을 분리하는 경로 이름 구성 요소, 많은 네트워킹 체계 및 유틸리티를 분리 맥 OS 클래식 등) 자신의 의미에 대한 것을 사용하기 때문이다. 같은 이유로, 피할 &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;;&lt;/code&gt; 와 &lt;code&gt;|&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0648ca03594009e5fc165d44d9c88e480b54d4" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;:&lt;/code&gt; as a part of a filename since many systems use that for their own semantics (Mac OS Classic for separating pathname components, many networking schemes and utilities for separating the nodename and the pathname, and so on). For the same reasons, avoid &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd80fb1475bf587607bf23dcb48492b2994f3826" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; instead, which can be trapped by an &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">누군가 어떤 오류가 발생했는지 파악하려는 경우 &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 를 사용 하여 서브 루틴을 중단 하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 에 갇힐 수있는 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ae3e40c5aafd256eca74b7ca54a5e5fe01a8a09" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; to abort a subroutine if there's any chance that someone might want to trap whatever error happened. Use &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; instead, which can be trapped by an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">누군가 어떤 오류가 발생했는지 파악하려는 경우 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 를 사용 하여 서브 루틴을 중단 하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 에 갇힐 수있는 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4cae11462d2674103d0d8e77ff3c2d3bb81f328e" translate="yes" xml:space="preserve">
          <source>Don't use it. It makes no sense to deal with bytes in a text string, and it makes no sense to deal with characters in a byte string. Do the proper conversions (by decoding/encoding), and things will work out well: you get character counts for decoded data, and byte counts for encoded data.</source>
          <target state="translated">사용하지 마십시오. 텍스트 문자열에서 바이트를 처리하는 것은 의미가 없으며 바이트 문자열의 문자를 처리하는 것은 의미가 없습니다. 디코딩 / 인코딩을 통해 적절한 변환을 수행하면 제대로 작동합니다. 디코딩 된 데이터의 문자 수와 인코딩 된 데이터의 바이트 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="31a008400a1239308283e11c2496113f4c495814" translate="yes" xml:space="preserve">
          <source>Don't use it. Unfortunately, it assumes that the programmer's environment and that of the user will use the same encoding. It will use the same encoding for the source code and for STDIN and STDOUT. When a program is copied to another machine, the source code does not change, but the STDIO environment might.</source>
          <target state="translated">사용하지 마십시오. 불행히도 프로그래머 환경과 사용자 환경이 동일한 인코딩을 사용한다고 가정합니다. 소스 코드와 STDIN 및 STDOUT에 동일한 인코딩을 사용합니다. 프로그램이 다른 머신으로 복사 될 때 소스 코드는 변경되지 않지만 STDIO 환경은 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92826ed6df15d13b6cb60d26dc1ac2e5d66954c7" translate="yes" xml:space="preserve">
          <source>Don't use this flag as a marker to distinguish character and binary data: that should be decided for each variable when you write your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b01c21ad5ce16a7981e3294ccf4cf41b5fef04" translate="yes" xml:space="preserve">
          <source>Don't use this module directly.</source>
          <target state="translated">이 모듈을 직접 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="71ee42da50b79ae9e6a47caf180fc6688aabc5ce" translate="yes" xml:space="preserve">
          <source>Don't use this.</source>
          <target state="translated">이것을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="d8022c54cffc7dadfd83dedf1e4a2dbf6ad467e8" translate="yes" xml:space="preserve">
          <source>Don't worry about posting if you can't say when the module will be ready - just say so in the message. It might be worth inviting others to help you, they may be able to complete it for you!</source>
          <target state="translated">언제 모듈이 준비 될 지 말할 수 없다면 게시에 대해 걱정하지 마십시오. 메시지에서 그렇게 말하십시오. 다른 사람들을 초대하여 도움을받을만한 가치가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="327df9e94148631e3c9a41cfa753d9d2769d418a" translate="yes" xml:space="preserve">
          <source>Don't worry if it says Math::BigInt::Lite, bignum and friends will use Lite if it is installed since it is faster for some operations. It will be automatically upgraded to BigInt whenever necessary:</source>
          <target state="translated">Math :: BigInt :: Lite, bignum 및 friends가 일부 작업에 더 빠르므로 Lite가 설치된 경우 Lite를 사용한다고 걱정하지 마십시오. 필요할 때마다 BigInt로 자동 업그레이드됩니다.</target>
        </trans-unit>
        <trans-unit id="83fe6a1f79295f6f6329274881574682cc33b843" translate="yes" xml:space="preserve">
          <source>Done by Archive::Tar internally when reading the tar file: validate the header against the checksum to ensure integer tar file.</source>
          <target state="translated">tar 파일을 읽을 때 내부적으로 Archive :: Tar로 수행 : 정수 tar 파일을 보장하기 위해 체크섬에 대해 헤더의 유효성을 검사하십시오.</target>
        </trans-unit>
        <trans-unit id="9b0acdbd029a7828ca595b0d9f7618bd97d3679c" translate="yes" xml:space="preserve">
          <source>Dotfiles.pm</source>
          <target state="translated">Dotfiles.pm</target>
        </trans-unit>
        <trans-unit id="367aeb5b0eeea24f38d847fc22358213d58bd92f" translate="yes" xml:space="preserve">
          <source>Dotted Decimal Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5902e51c543426764a539a5b8b3475f2e3c0e1b6" translate="yes" xml:space="preserve">
          <source>Dotted-Decimal Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dd61c36eb620d23150ee2cbd23ab230bd75552" translate="yes" xml:space="preserve">
          <source>Dotted-Decimal version work sometimes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b212ec67db3b50460a0b49ff530f65ae1edb2eab" translate="yes" xml:space="preserve">
          <source>Dotted-Decimal versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4444cb6e44518290fa4fab08202a5a7eed3f25e" translate="yes" xml:space="preserve">
          <source>Dotted-decimal: bare v-strings (v1.2.3) and strings with more than one decimal point and a leading 'v' (&quot;v1.2.3&quot;); NOTE you can technically use a v-string or strings with a leading-v and only one decimal point (v1.2 or &quot;v1.2&quot;), but you will confuse both yourself and others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8e3d2e145e6907cacdfa05480bf0c029289788" translate="yes" xml:space="preserve">
          <source>Dotted-integer (also known as dotted-decimal) versions consist of positive integers separated by full stop characters (i.e. &quot;dots&quot;, &quot;periods&quot; or &quot;decimal points&quot;). This are equivalent in format to Perl &quot;v-strings&quot;, with some additional restrictions on form. They must be given in &quot;normal&quot; form, which has a leading &quot;v&quot; character and at least three integer components. To retain a one-to-one mapping with decimal versions, all components after the first &lt;b&gt;should&lt;/b&gt; be restricted to the range 0 to 999. The final component &lt;b&gt;may&lt;/b&gt; be separated by an underscore character instead of a period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1117c07c1f41b9ef00977301af904dee32183e5d" translate="yes" xml:space="preserve">
          <source>Dotted-integer versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc4aeea2b858e5d0b2038c659c17e529fe4085a" translate="yes" xml:space="preserve">
          <source>Double Quotes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17ae50dd8754e17c2584e6a5426d3fcdb608cdb" translate="yes" xml:space="preserve">
          <source>Double quotes indicate that the text will be interpolated using exactly the same rules as normal double quoted strings.</source>
          <target state="translated">큰 따옴표는 텍스트가 일반적인 큰 따옴표로 묶인 문자열과 정확히 동일한 규칙을 사용하여 보간됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d8bdee99b293542316fa229d2907bcacda4feae8" translate="yes" xml:space="preserve">
          <source>Double quotes or single quotes may be used around literal strings:</source>
          <target state="translated">리터럴 문자열에는 큰 따옴표 또는 작은 따옴표를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c45e85fa2adbda8304a1994b69613855b231b88d" translate="yes" xml:space="preserve">
          <source>Double-Typed SVs</source>
          <target state="translated">더블 타입 SV</target>
        </trans-unit>
        <trans-unit id="bc0859619112e37c2df7dc4b11b4c4a86c663786" translate="yes" xml:space="preserve">
          <source>Doug MacEachern &amp;lt;&lt;code&gt;dougm@osf.org&lt;/code&gt; &amp;gt;</source>
          <target state="translated">Doug MacEachern &amp;lt; &lt;code&gt;dougm@osf.org&lt;/code&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="2241b59f622c2870c4b02a605d078ab07bc4826d" translate="yes" xml:space="preserve">
          <source>Doug MacEachern &amp;lt;&lt;code&gt;dougm@osf.org&lt;/code&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd84c7c0c73cf64e66299d99641345c7d6ec4c9" translate="yes" xml:space="preserve">
          <source>Doug MacEachern has an article on embedding in Volume 1, Issue 4 of The Perl Journal ( &lt;a href=&quot;http://www.tpj.com/&quot;&gt;http://www.tpj.com/&lt;/a&gt; ). Doug is also the developer of the most widely-used Perl embedding: the mod_perl system (perl.apache.org), which embeds Perl in the Apache web server. Oracle, Binary Evolution, ActiveState, and Ben Sugars's nsapi_perl have used this model for Oracle, Netscape and Internet Information Server Perl plugins.</source>
          <target state="translated">Doug MacEachern은 The Perl Journal ( &lt;a href=&quot;http://www.tpj.com/&quot;&gt;http://www.tpj.com/&lt;/a&gt; ) 1 권 4 호에 임베드하는 기사를 가지고 있습니다. Doug는 가장 널리 사용되는 Perl 임베딩 개발자 인 mod_perl 시스템 (perl.apache.org)이며 Perl을 Apache 웹 서버에 임베드합니다. Oracle, Binary Evolution, ActiveState 및 Ben Sugars의 nsapi_perl은 Oracle, Netscape 및 Internet Information Server Perl 플러그인에이 모델을 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="d859c23d025def545dab47578ad7286013f9074c" translate="yes" xml:space="preserve">
          <source>Doug Wilson,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd9fe42018c0e9681fed6f906ad1da72ef74937" translate="yes" xml:space="preserve">
          <source>Down this road lies madness.</source>
          <target state="translated">이 길 아래에는 광기가 있습니다.</target>
        </trans-unit>
        <trans-unit id="66a9025a56522ef8289a51b6a1a202df2f62ec04" translate="yes" xml:space="preserve">
          <source>Downgrade both sides to byte-strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711e55a0520f6b8eb41cd3adf5cf2f6dfb3f33d2" translate="yes" xml:space="preserve">
          <source>Downgrade existing SSL connection back to plain. This is needed to work with some FTP helpers at firewalls, which need to see the PORT and PASV commands and responses to dynamically open the necessary ports. In this case &lt;code&gt;starttls&lt;/code&gt; is usually only done to protect the authorization.</source>
          <target state="translated">기존 SSL 연결을 일반으로 다시 다운 그레이드하십시오. 방화벽에서 일부 FTP 헬퍼와 함께 작동하려면 필요한 포트를 동적으로 열려면 PORT 및 PASV 명령 및 응답을 확인해야합니다. 이 경우 &lt;code&gt;starttls&lt;/code&gt; 는 일반적으로 권한을 보호하기 위해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6863ad3882079de8bb32abea0819f1a0f48ff477" translate="yes" xml:space="preserve">
          <source>Download and install the Filter::Simple module. (If you have Perl 5.7.1 or later, this is already done for you.)</source>
          <target state="translated">Filter :: Simple 모듈을 다운로드하여 설치하십시오. (Perl 5.7.1 이상을 사용하는 경우 이미 완료된 것입니다.)</target>
        </trans-unit>
        <trans-unit id="026541fe8b438be29a9f47a4ab1e22dcb6dbc643" translate="yes" xml:space="preserve">
          <source>Download target directory?</source>
          <target state="translated">대상 디렉토리를 다운로드 하시겠습니까?</target>
        </trans-unit>
        <trans-unit id="824b6b54054ef1a9091856d053b0662e9a165ca3" translate="yes" xml:space="preserve">
          <source>Download the ExtUtils::Embed kit from CPAN and run `make test'. If the tests pass, read the pods again and again and again. If they fail, see &lt;a href=&quot;perlbug&quot;&gt;perlbug&lt;/a&gt; and send a bug report with the output of &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; along with &lt;code&gt;perl -V&lt;/code&gt; .</source>
          <target state="translated">CPAN에서 ExtUtils :: Embed 키트를 다운로드하고`make test '를 실행하십시오. 테스트에 통과하면 포드를 계속해서 또 다시 읽습니다. 실패하면 &lt;a href=&quot;perlbug&quot;&gt;perlbug를&lt;/a&gt; 참조 하고 &lt;code&gt;perl -V&lt;/code&gt; 와 함께 &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; 출력으로 버그 보고서를 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="8251879473cd78cccb564b2cdf8271476079baab" translate="yes" xml:space="preserve">
          <source>Download the ExtUtils::Embed kit from CPAN and run `make test'. If the tests pass, read the pods again and again and again. If they fail, submit a bug report to &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt; with the output of &lt;code&gt;make test TEST_VERBOSE=1&lt;/code&gt; along with &lt;code&gt;perl -V&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3467811ada73635cf68082c7cc090eea63c880e2" translate="yes" xml:space="preserve">
          <source>Download the files in the desired version of Unicode from the Unicode web site &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;). These should replace the existing files in</source>
          <target state="translated">유니 코드 웹 사이트 ( &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt; ) 에서 원하는 유니 코드 버전으로 파일을 다운로드하십시오 . 이것들은 기존 파일을 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="8de18fff973484557fd08da68d31e3a1fc6666b6" translate="yes" xml:space="preserve">
          <source>Download the files in the desired version of Unicode from the Unicode web site &lt;a href=&quot;https://www.unicode.org&quot;&gt;https://www.unicode.org&lt;/a&gt;). These should replace the existing files in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b64de29b8a9bf6464d6b725c2720abd75c3426" translate="yes" xml:space="preserve">
          <source>Download the pmd-bin-X.Y.zip () from the SourceForge site, extract the pmd-X.Y.jar from it, and then run that on source code thusly:</source>
          <target state="translated">SourceForge 사이트에서 pmd-bin-XYzip ()을 다운로드하여 pmd-XYjar을 추출한 다음 소스 코드에서 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="e5859845ed9945571a1f7a84cc0836d4a7613e04" translate="yes" xml:space="preserve">
          <source>Download to the current directory the latest distribution of the modules, unpack each distribution, and create a git repository for each distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49fb030ab1aaee57147e5e7a7127ea439db8792" translate="yes" xml:space="preserve">
          <source>Download, build, and install the Filter::Util::Call module. (If you have Perl 5.7.1 or later, this is already done for you.)</source>
          <target state="translated">Filter :: Util :: Call 모듈을 다운로드, 빌드 및 설치하십시오. (Perl 5.7.1 이상을 사용하는 경우 이미 완료된 것입니다.)</target>
        </trans-unit>
        <trans-unit id="08f4aa0358a86ec0353cf2d2ed049201bf17031c" translate="yes" xml:space="preserve">
          <source>Downloads report data for this distribution from www.cpantesters.org and displays a subset of them.</source>
          <target state="translated">이 배포에 대한 보고서 데이터는 www.cpantesters.org에서 다운로드하여 해당 하위 세트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="366a5eddbaecc6160b117d778c095e50de4e854c" translate="yes" xml:space="preserve">
          <source>Downloads the README file associated with a distribution and runs it through the pager specified in &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</source>
          <target state="translated">분배와 연관된 README 파일을 다운로드하여 &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; 지정된 호출기를 통해 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d9c288326280b540c25926e9df585a7d06577d9" translate="yes" xml:space="preserve">
          <source>Downloads the distribution from CPAN and unpacks it. Does nothing if the distribution has already been downloaded and unpacked within the current session.</source>
          <target state="translated">CPAN에서 배포를 다운로드하여 압축을 풉니 다. 현재 세션 내에서 배포가 이미 다운로드 및 압축 해제 된 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b9ffede701ef3f70bd821cb754750834e2eee96" translate="yes" xml:space="preserve">
          <source>Downloads the pod documentation of the file associated with a distribution (in HTML format) and runs it through the external command</source>
          <target state="translated">배포와 관련된 파일의 포드 문서 (HTML 형식)를 다운로드하고 외부 명령을 통해 실행합니다.</target>
        </trans-unit>
        <trans-unit id="9b3a79775a443e0246765f6e1906a833feed4fea" translate="yes" xml:space="preserve">
          <source>Downloads to the current directory the latest distribution of the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71044266a2765177f793c2ddbee6a230a272a817" translate="yes" xml:space="preserve">
          <source>Dr Damian Conway for suggesting the hinting interface and providing the example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354bb2827829162a2336a340d4ba1dae11a364cb" translate="yes" xml:space="preserve">
          <source>Dragonfly BSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d8215ef4fc8a530cd9137d652dba538ecf4224" translate="yes" xml:space="preserve">
          <source>Draw the tree with standard ASCII characters like &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;. These don't look as clean as the VT100 characters, but they'll work with almost any terminal (or the horizontal scrolling mode of less(1)) and are suitable for text documentation or email. This is the default.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;|&lt;/code&gt; 와 같은 표준 ASCII 문자로 트리를 그립니다. . VT100 문자만큼 깔끔하지는 않지만 거의 모든 터미널 (또는 가로 스크롤 모드 (1))에서 작동하며 텍스트 문서 나 전자 메일에 적합합니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="0145690370ba83aa8175369bb4c3c9e09c697f01" translate="yes" xml:space="preserve">
          <source>Drepper, Ulrich, Peter Miller, and Fran&amp;ccedil;ois Pinard. 1995-2001. GNU &lt;code&gt;gettext&lt;/code&gt;. Available in &lt;code&gt;&lt;a href=&quot;ftp://prep.ai.mit.edu/pub/gnu/&quot;&gt;ftp://prep.ai.mit.edu/pub/gnu/&lt;/a&gt;&lt;/code&gt;, with extensive docs in the distribution tarball. [Since I wrote this article in 1998, I now see that the gettext docs are now trying more to come to terms with plurality. Whether useful conclusions have come from it is another question altogether. -- SMB, May 2001]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea55ba2f7cd2bb2dfebfc7baab1eb7a28287bc85" translate="yes" xml:space="preserve">
          <source>Drop in the CPAN.pm shell. This command does this automatically if you don't specify any arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435321dd1c82c18e50a09e89a625d44c2cad992d" translate="yes" xml:space="preserve">
          <source>Due to a bug in Perl, &lt;code&gt;autodie&lt;/code&gt; may &quot;lose&quot; any format which has the same name as an autodying built-in or function.</source>
          <target state="translated">Perl의 버그로 인해 &lt;code&gt;autodie&lt;/code&gt; 는 autodying 내장 또는 기능과 동일한 이름을 가진 형식을 &quot;손실&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f8b083c9efdbb98335cadbb85143fc7af77ce11" translate="yes" xml:space="preserve">
          <source>Due to a popular demand the perl external program calling has been changed wrt Andreas Kaiser's port.</source>
          <target state="translated">대중적인 요구로 인해 펄 외부 프로그램 호출은 Andreas Kaiser의 포트로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="2fa72b6c00f9a2dd66e6782d6e7396b6679249ff" translate="yes" xml:space="preserve">
          <source>Due to an implementation glitch, the &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; hook is called even inside an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;. Do not use this to rewrite a pending exception in &lt;code&gt;$@&lt;/code&gt; , or as a bizarre substitute for overriding &lt;code&gt;CORE::GLOBAL::die()&lt;/code&gt; . This strange action at a distance may be fixed in a future release so that &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; is only called if your program is about to exit, as was the original intent. Any other use is deprecated.</source>
          <target state="translated">구현 결함으로 인해 &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; 후크는 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; 내부에서도 호출 됩니다. &lt;code&gt;$@&lt;/code&gt; 의 보류중인 예외를 다시 작성 하거나 &lt;code&gt;CORE::GLOBAL::die()&lt;/code&gt; 를 대체하는 기괴한 대체물로 이것을 사용하지 마십시오 . 원거리에서이 이상한 동작은 향후 릴리스에서 수정 될 수 있으므로 &lt;code&gt;$SIG{__DIE__}&lt;/code&gt; 은 원래 의도와 마찬가지로 프로그램이 종료 되려는 경우에만 호출됩니다. 다른 사용은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c65e636e9846e4e76451103ccccbb36e90580ce5" translate="yes" xml:space="preserve">
          <source>Due to an unfortunate bug in how &lt;code&gt;given&lt;/code&gt; was implemented between Perl 5.10 and 5.16, under those implementations the version of &lt;code&gt;$_&lt;/code&gt; governed by &lt;code&gt;given&lt;/code&gt; is merely a lexically scoped copy of the original, not a dynamically scoped alias to the original, as it would be if it were a &lt;code&gt;foreach&lt;/code&gt; or under both the original and the current Perl 6 language specification. This bug was fixed in Perl 5.18. If you really want a lexical &lt;code&gt;$_&lt;/code&gt; , specify that explicitly, but note that &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; is now deprecated and will warn unless warnings have been disabled:</source>
          <target state="translated">때문에 방법에 불행한 버그 &lt;code&gt;given&lt;/code&gt; 의 그 구현에서 버전, 펄 5.10와 5.16 사이에 구현 된 &lt;code&gt;$_&lt;/code&gt; 에 의해 지배 &lt;code&gt;given&lt;/code&gt; 가 될 것 같은 원래의 어휘 범위 사본이 아닌 원본 동적 범위 별명은, 단지입니다 &lt;code&gt;foreach&lt;/code&gt; 이거나 원래 및 현재 Perl 6 언어 스펙 둘 다에 해당 하는 경우 이 버그는 Perl 5.18에서 수정되었습니다. lexical &lt;code&gt;$_&lt;/code&gt; 을 정말로 원한다면 명시 적으로 지정하지만 경고가 비활성화되지 않으면 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt; $_&lt;/code&gt; 이 더 이상 사용되지 않으며 경고합니다.</target>
        </trans-unit>
        <trans-unit id="57b220a3473420f4af411ff4f0c90e1f287c1404" translate="yes" xml:space="preserve">
          <source>Due to an unfortunate bug in how &lt;code&gt;given&lt;/code&gt; was implemented between Perl 5.10 and 5.16, under those implementations the version of &lt;code&gt;$_&lt;/code&gt; governed by &lt;code&gt;given&lt;/code&gt; is merely a lexically scoped copy of the original, not a dynamically scoped alias to the original, as it would be if it were a &lt;code&gt;foreach&lt;/code&gt; or under both the original and the current Raku language specification. This bug was fixed in Perl 5.18 (and lexicalized &lt;code&gt;$_&lt;/code&gt; itself was removed in Perl 5.24).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5aff89951fd9e95c733a40d7b1bb49174fdbcb8" translate="yes" xml:space="preserve">
          <source>Due to backwards compatibility, all filehandles resemble objects of class &lt;code&gt;IO::Handle&lt;/code&gt; , or actually classes derived from that class. They actually aren't. Which means you can't derive your own class from &lt;code&gt;IO::Handle&lt;/code&gt; and inherit those methods.</source>
          <target state="translated">이전 버전과의 호환성으로 인해 모든 파일 핸들은 &lt;code&gt;IO::Handle&lt;/code&gt; 클래스의 객체 또는 실제로 해당 클래스에서 파생 된 클래스와 유사합니다 . 그들은 실제로 그렇지 않습니다. 즉, &lt;code&gt;IO::Handle&lt;/code&gt; 에서 자신의 클래스를 파생 시키고 해당 메소드를 상속 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="80594e7e901abf11711775b4f10d222aa28047bd" translate="yes" xml:space="preserve">
          <source>Due to backwards compatibility, all filehandles resemble objects of class &lt;code&gt;IO::Handle&lt;/code&gt;, or actually classes derived from that class. They actually aren't. Which means you can't derive your own class from &lt;code&gt;IO::Handle&lt;/code&gt; and inherit those methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ca16f5893d48ab62d7bbcb82dec13e09f32597" translate="yes" xml:space="preserve">
          <source>Due to how &lt;code&gt;%^H&lt;/code&gt; works, this class is only useful during the compilation phase of a perl module and relies on the internals of how perl handles references in &lt;code&gt;%^H&lt;/code&gt;. This module is not a part of autodie's public API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46599dc97579c3a9d5b0ac13818c4864629c3a1b" translate="yes" xml:space="preserve">
          <source>Due to how subtests work, you may omit a plan if you desire. This adds an implicit &lt;code&gt;done_testing()&lt;/code&gt; to the end of your subtest. The following two subtests are equivalent:</source>
          <target state="translated">하위 테스트의 작동 방식으로 인해 원하는 경우 계획을 생략 할 수 있습니다. 하위 테스트 끝에 암시 적 &lt;code&gt;done_testing()&lt;/code&gt; 이 추가 됩니다. 다음 두 가지 하위 테스트는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="bfabb840ac564314e7376483141ead0d401f2f7b" translate="yes" xml:space="preserve">
          <source>Due to issues with various CPUs, math libraries, compilers, and standards, results for &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; may vary depending on any combination of the above. Perl attempts to conform to the Open Group/IEEE standards for the results returned from &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt;, but cannot force the issue if the system Perl is run on does not allow it. (Tru64, HP-UX 10.20)</source>
          <target state="translated">다양한 CPU, 수학 라이브러리, 컴파일러 및 표준 문제로 인해 &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; 결과 는 위의 조합에 따라 달라질 수 있습니다. Perl은 &lt;code&gt;&lt;a href=&quot;functions/atan2&quot;&gt;atan2()&lt;/a&gt;&lt;/code&gt; 에서 리턴 된 결과에 대해 Open Group / IEEE 표준을 준수하려고 시도 하지만 시스템 Perl이 실행되는 경우이를 허용하지 않으면 문제를 강제 할 수 없습니다. (Tru64, HP-UX 10.20)</target>
        </trans-unit>
        <trans-unit id="68391d1e9af605eed85ca89bb210a2cba148458c" translate="yes" xml:space="preserve">
          <source>Due to limitations of Perl subroutine call semantics, you cannot pass an array or hash. Prepend it with a &lt;code&gt;\&lt;/code&gt; to pass its reference instead. This will be remedied in time, now that Perl has subroutine prototypes. For now, you need to use the extended usage form, and prepend the name with a &lt;code&gt;*&lt;/code&gt; to output it as a hash or array.</source>
          <target state="translated">Perl 서브 루틴 호출 의미의 한계로 인해 배열 또는 해시를 전달할 수 없습니다. 대신 참조를 전달하려면 &lt;code&gt;\&lt;/code&gt; 를 추가하십시오 . 이제 Perl에 서브 루틴 프로토 타입이 생겼으므로 시간이 지나면 해결됩니다. 지금은 확장 사용 양식을 사용하고 이름 앞에 &lt;code&gt;*&lt;/code&gt; 를 붙여 해시 또는 배열로 출력해야합니다.</target>
        </trans-unit>
        <trans-unit id="b463757edb0c11231cc7018f0eaae187fe6e4840" translate="yes" xml:space="preserve">
          <source>Due to popular demand, 'MIME-Header-ISO_2022_JP' was introduced by Makamaka. Thre are still too many MUAs especially cellular phone handsets which does not grok UTF-8.</source>
          <target state="translated">대중적인 수요로 인해 'MIME-Header-ISO_2022_JP'가 Makamaka에 의해 소개되었습니다. UTF-8을 사용하지 않는 MUA, 특히 휴대 전화 핸드셋이 여전히 너무 많습니다.</target>
        </trans-unit>
        <trans-unit id="65a0ba2fc84320e39c1003b24fcf32448d56b65d" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;EUC-TW&lt;/code&gt; (Extended Unix Character), &lt;code&gt;CCCII&lt;/code&gt; (Chinese Character Code for Information Interchange), &lt;code&gt;BIG5PLUS&lt;/code&gt; (CMEX's Big5+) and &lt;code&gt;BIG5EXT&lt;/code&gt; (CMEX's Big5e) are distributed separately on CPAN, under the name &lt;a href=&quot;Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra China-based encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd045cac184874cb4ad7bcc8e71c09d97d5cddc" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;EUC-TW&lt;/code&gt; (Extended Unix Character), &lt;code&gt;CCCII&lt;/code&gt; (Chinese Character Code for Information Interchange), &lt;code&gt;BIG5PLUS&lt;/code&gt; (CMEX's Big5+) and &lt;code&gt;BIG5EXT&lt;/code&gt; (CMEX's Big5e) are distributed separately on CPAN, under the name &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra China-based encodings.</source>
          <target state="translated">크기 문제로 인해 &lt;code&gt;EUC-TW&lt;/code&gt; (Extended Unix Character), &lt;code&gt;CCCII&lt;/code&gt; (Chinese Character Code for Information Interchange), &lt;code&gt;BIG5PLUS&lt;/code&gt; (CMEX 's Big5 +) 및 &lt;code&gt;BIG5EXT&lt;/code&gt; (CMEX 's Big5e)는 CPAN에 &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt; 라는 이름으로 별도로 배포됩니다 . 이 모듈에는 추가 중국 기반 인코딩도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e606dfe28df13df23c0793d29104abe515f70ff" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;GB 18030&lt;/code&gt; (an extension to &lt;code&gt;GBK&lt;/code&gt; ) is distributed separately on CPAN, under the name &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra Taiwan-based encodings.</source>
          <target state="translated">크기 문제로 인해 &lt;code&gt;GB 18030&lt;/code&gt; ( &lt;code&gt;GBK&lt;/code&gt; 의 확장 )은 &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::HanExtra&quot;&gt;Encode :: HanExtra&lt;/a&gt; 라는 이름으로 CPAN에 별도로 배포됩니다 . 이 모듈에는 추가 대만 기반 인코딩도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a86e50f6b3092b29c7c2c823277a62137db9e6a5" translate="yes" xml:space="preserve">
          <source>Due to size concerns, &lt;code&gt;GB 18030&lt;/code&gt; (an extension to &lt;code&gt;GBK&lt;/code&gt;) is distributed separately on CPAN, under the name &lt;a href=&quot;Encode::HanExtra&quot;&gt;Encode::HanExtra&lt;/a&gt;. That module also contains extra Taiwan-based encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3498cd87b97172ec6cac5f07d24a51c9d15a64cc" translate="yes" xml:space="preserve">
          <source>Due to size concerns, additional Japanese encodings below are distributed separately on CPAN, under the name Encode::JIS2K.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d825b88c92a7854e8e07b5fbd910a2348c547422" translate="yes" xml:space="preserve">
          <source>Due to the current implementation of &lt;code&gt;autodie&lt;/code&gt; , unexpected results may be seen when used near or with the string version of eval.</source>
          <target state="translated">현재 &lt;code&gt;autodie&lt;/code&gt; 구현으로 인해 문자열 버전 eval 근처에서 또는 eval의 문자열 버전과 함께 사용하면 예기치 않은 결과가 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1331c0b3a2d1f231a5c0c66d585fa87888c7cde7" translate="yes" xml:space="preserve">
          <source>Due to the current implementation of &lt;code&gt;autodie&lt;/code&gt;, unexpected results may be seen when used near or with the string version of eval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3912f30ffb4a7edcdecb55dbe256ab47781b419" translate="yes" xml:space="preserve">
          <source>Due to the fact that AIX 4.3.3 reached end-of-service in December 31, 2003 this information is provided as is. The Perl versions prior to Perl 5.8.9 could be compiled on AIX up to 4.3.3 with the following settings (your mileage may vary):</source>
          <target state="translated">2003 년 12 월 31 일에 AIX 4.3.3이 서비스 종료에 도달 했으므로이 정보는있는 그대로 제공됩니다. Perl 5.8.9 이전의 Perl 버전은 다음 설정으로 최대 4.3.3까지 AIX에서 컴파일 할 수 있습니다 (마일리지는 다를 수 있음).</target>
        </trans-unit>
        <trans-unit id="0cc8eb8ed52c08d74c71e528310f912e564ee1bb" translate="yes" xml:space="preserve">
          <source>Due to the interaction between runtime and compiletime issues, and because it's probably not a very good idea anyway, you may not use &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; diagnostics&lt;/code&gt; to turn them off at compiletime. However, you may control their behaviour at runtime using the disable() and enable() methods to turn them off and on respectively.</source>
          <target state="translated">런타임과 컴파일 타임 문제 사이의 상호 작용으로 인해 어쨌든 그다지 좋은 아이디어는 아니기 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; diagnostics&lt;/code&gt; 을 . 그러나 disable () 및 enable () 메서드를 사용하여 런타임에 동작을 각각 제어하여 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef7870ba3a8a0570eb271890a6bea79e9941f1ed" translate="yes" xml:space="preserve">
          <source>Due to the interaction between runtime and compiletime issues, and because it's probably not a very good idea anyway, you may not use &lt;code&gt;no diagnostics&lt;/code&gt; to turn them off at compiletime. However, you may control their behaviour at runtime using the disable() and enable() methods to turn them off and on respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dba6a65e991b31774fba10843a79cd147209260" translate="yes" xml:space="preserve">
          <source>Due to the limitations of the implementation, you must use base</source>
          <target state="translated">구현의 한계로 인해 base를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb744fcb352ecd1572a7e400ccb774b86e7f5bb7" translate="yes" xml:space="preserve">
          <source>Due to the restriction of the quotes, this is a fairly complex problem. Thankfully, we have Jeffrey Friedl, author of</source>
          <target state="translated">따옴표의 제한으로 인해 이것은 상당히 복잡한 문제입니다. 고맙게도 저자 인 Jeffrey Friedl이</target>
        </trans-unit>
        <trans-unit id="2479ef6739608d556fe149fdea5d69b1b82e9627" translate="yes" xml:space="preserve">
          <source>Due to the rules and rigors of ANSI C, on some systems you have to do a seek whenever you switch between reading and writing. Amongst other things, this may have the effect of calling stdio's &lt;a href=&quot;http://man.he.net/man3/clearerr&quot;&gt;clearerr(3)&lt;/a&gt;. A WHENCE of &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;SEEK_CUR&lt;/code&gt;) is useful for not moving the file position:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d6d3e302ca0b687c4f0b65161fa70175b1c871" translate="yes" xml:space="preserve">
          <source>Due to the rules and rigors of ANSI C, on some systems you have to do a seek whenever you switch between reading and writing. Amongst other things, this may have the effect of calling stdio's clearerr(3). A WHENCE of &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;SEEK_CUR&lt;/code&gt; ) is useful for not moving the file position:</source>
          <target state="translated">ANSI C의 규칙과 엄격함으로 인해 일부 시스템에서는 읽기와 쓰기를 전환 할 때마다 탐색을 수행해야합니다. 무엇보다도 stdio의 clearerr (3)를 호출하는 효과가있을 수 있습니다. 의 WHENCE &lt;code&gt;1&lt;/code&gt; ( &lt;code&gt;SEEK_CUR&lt;/code&gt; 는 ) 파일의 위치를 이동하지 않는 유용</target>
        </trans-unit>
        <trans-unit id="7220a9e4aec436d927fd7caab9c9dee72fb30a6d" translate="yes" xml:space="preserve">
          <source>Due to the size concerns, additional Chinese encodings below are distributed separately on CPAN, under the name Encode::HanExtra.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791e734fb8c106991b00acd93d1da356b7e03d9b" translate="yes" xml:space="preserve">
          <source>Due to the very cryptic nature of these options, another style was developed that used long names. So instead of a cryptic &lt;code&gt;-l&lt;/code&gt; one could use the more descriptive &lt;code&gt;--long&lt;/code&gt; . To distinguish between a bundle of single-character options and a long one, two dashes are used to precede the option name. Early implementations of long options used a plus &lt;code&gt;+&lt;/code&gt; instead. Also, option values could be specified either like</source>
          <target state="translated">이러한 옵션의 매우 비밀스러운 특성으로 인해 긴 이름을 사용하는 다른 스타일이 개발되었습니다. 따라서 cryptic &lt;code&gt;-l&lt;/code&gt; 대신 더 설명적인 &lt;code&gt;--long&lt;/code&gt; 을 사용할 수 있습니다 . 단일 문자 옵션 번들과 긴 옵션을 구별하기 위해 옵션 이름 앞에 두 개의 대시가 사용됩니다. 긴 옵션의 초기 구현에는 플러스 &lt;code&gt;+&lt;/code&gt; 가 사용되었습니다. 또한 옵션 값은 다음과 같이 지정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2a98701dd7e413a3dc7c3ce851463220f6e03bf7" translate="yes" xml:space="preserve">
          <source>Due to the very cryptic nature of these options, another style was developed that used long names. So instead of a cryptic &lt;code&gt;-l&lt;/code&gt; one could use the more descriptive &lt;code&gt;--long&lt;/code&gt;. To distinguish between a bundle of single-character options and a long one, two dashes are used to precede the option name. Early implementations of long options used a plus &lt;code&gt;+&lt;/code&gt; instead. Also, option values could be specified either like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd47df9aac57afeabd3fad068fb3117e1161568" translate="yes" xml:space="preserve">
          <source>Due to the way that &lt;code&gt;uniqnum()&lt;/code&gt; compares numbers, it cannot distinguish differences between bignums (especially bigints) that are too large to fit in the native platform types. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e24e606681dc5af1b9b3cb9795462cb06198f7" translate="yes" xml:space="preserve">
          <source>Due to the way that Perl parses things, your parentheses and brackets may need to be balanced, even including comments. If you run into any examples, please send them to &lt;code&gt;perlbug@perl.org&lt;/code&gt; , so that we can have a concrete example for this man page.</source>
          <target state="translated">Perl이 구문 분석하는 방식으로 인해 주석을 포함하여 괄호와 대괄호의 균형이 필요할 수 있습니다. 예제가 나오면 &lt;code&gt;perlbug@perl.org&lt;/code&gt; 로 보내주십시오 .이 매뉴얼 페이지에 대한 구체적인 예제를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31d630704b2c77a9dfc329b5c4fc227f916d975c" translate="yes" xml:space="preserve">
          <source>Due to the way that Perl parses things, your parentheses and brackets may need to be balanced, even including comments. If you run into any examples, please submit them to &lt;a href=&quot;https://github.com/Perl/perl5/issues&quot;&gt;https://github.com/Perl/perl5/issues&lt;/a&gt;, so that we can have a concrete example for this man page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3fa3b419b8695e1ca79a869f79ee2bcd448351" translate="yes" xml:space="preserve">
          <source>Due to their nature, not all Unicode character properties are suitable for regular expression matches, nor &lt;code&gt;prop_invlist()&lt;/code&gt; . The remaining non-provisional, non-internal ones are accessible via &lt;a href=&quot;unicode/ucd#prop_invmap()&quot;&gt;prop_invmap() in Unicode::UCD&lt;/a&gt; (except for those that this Perl installation hasn't included; see &lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;below for which those are&lt;/a&gt;).</source>
          <target state="translated">특성상 모든 유니 코드 문자 속성이 정규 표현식 일치 나 &lt;code&gt;prop_invlist()&lt;/code&gt; 적합한 것은 아닙니다 . 나머지 비 내부 비 내부 항목은 &lt;a href=&quot;unicode/ucd#prop_invmap()&quot;&gt;Unicode :: UCD의 prop_invmap ()을&lt;/a&gt; 통해 액세스 할 수 있습니다 ( 이 Perl 설치에 포함되지 않은 것을 제외하고 &lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;아래&lt;/a&gt; 내용 참조 ).</target>
        </trans-unit>
        <trans-unit id="e0f89bc078912bb85d02c7de5e4df13e6f3e958d" translate="yes" xml:space="preserve">
          <source>Due to their nature, not all Unicode character properties are suitable for regular expression matches, nor &lt;code&gt;prop_invlist()&lt;/code&gt;. The remaining non-provisional, non-internal ones are accessible via &lt;a href=&quot;Unicode::UCD#prop_invmap%28%29&quot;&gt;&quot;prop_invmap()&quot; in Unicode::UCD&lt;/a&gt; (except for those that this Perl installation hasn't included; see &lt;a href=&quot;#Unicode-character-properties-that-are-NOT-accepted-by-Perl&quot;&gt;below for which those are&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1caad945fadff253ca62db9c999f67f3c76a14fd" translate="yes" xml:space="preserve">
          <source>Dummy module providing JSON::PP::Boolean</source>
          <target state="translated">JSON :: PP :: Boolean을 제공하는 더미 모듈</target>
        </trans-unit>
        <trans-unit id="c8fd4d7989a4abd8975246b01c29e212852ad5d8" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;locks&quot; an SV when there is no locking module present. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc825db9b75c6b805dc48232f9aa43bb74e273e4" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;locks&quot; an SV when there is no locking module present. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">잠금 모듈이 없을 때 SV를 &quot;잠그는&quot;더미 루틴. NULL 함수 포인터에 대한 테스트를 피하고 일부 엄격도에서 잠재적으로 경고 할 수 있기 때문에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="739999c9a070e9fb14ee1aceff3623ead5eba800" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;shares&quot; an SV when there is no sharing module present. Or &quot;locks&quot; it. Or &quot;unlocks&quot; it. In other words, ignores its single SV argument. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0c1d486931f3f325ed075b19809ade73db7a85" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;shares&quot; an SV when there is no sharing module present. Or &quot;locks&quot; it. Or &quot;unlocks&quot; it. In other words, ignores its single SV argument. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">공유 모듈이 없을 때 SV를 &quot;공유&quot;하는 더미 루틴. 또는 &quot;고정&quot;합니다. 또는 &quot;잠금 해제&quot;합니다. 즉, 단일 SV 인수를 무시합니다. NULL 함수 포인터에 대한 테스트를 피하고 일부 엄격도에서 잠재적으로 경고 할 수 있기 때문에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="6aeb2e7388871dde9ff4f4c8dd9d88de30673dfe" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;unlocks&quot; an SV when there is no locking module present. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176b35c46c4ecb91ea04e78d1a42469728759765" translate="yes" xml:space="preserve">
          <source>Dummy routine which &quot;unlocks&quot; an SV when there is no locking module present. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">잠금 모듈이 없을 때 SV를 &quot;잠금 해제&quot;하는 더미 루틴. NULL 함수 포인터에 대한 테스트를 피하고 일부 엄격도에서 잠재적으로 경고 할 수 있기 때문에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="1b4eb5a38397a88fbb62d856222f65cee1e332e8" translate="yes" xml:space="preserve">
          <source>Dummy routine which reports that object can be destroyed when there is no sharing module present. It ignores its single SV argument, and returns 'true'. Exists to avoid test for a &lt;code&gt;NULL&lt;/code&gt; function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37582a718d2cb7f89d1fea284988f5efcf14f0a7" translate="yes" xml:space="preserve">
          <source>Dummy routine which reports that object can be destroyed when there is no sharing module present. It ignores its single SV argument, and returns 'true'. Exists to avoid test for a NULL function pointer and because it could potentially warn under some level of strict-ness.</source>
          <target state="translated">공유 모듈이 없을 때 객체가 손상 될 수 있다고보고하는 더미 루틴. 단일 SV 인수를 무시하고 'true'를 반환합니다. NULL 함수 포인터에 대한 테스트를 피하고 일부 엄격도에서 잠재적으로 경고 할 수 있기 때문에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="1a71039f50cfa3d68327859e6e1ee38df19b6603" translate="yes" xml:space="preserve">
          <source>Dump Pod-parsing events as text</source>
          <target state="translated">포드 파싱 이벤트를 텍스트로 덤프</target>
        </trans-unit>
        <trans-unit id="e8ae22209d4ac002bb420d76da89bbe7de1fac69" translate="yes" xml:space="preserve">
          <source>Dump all the namespaces to standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e8d87285df2d5dabb9e7d33d3a5ccc1734224b" translate="yes" xml:space="preserve">
          <source>Dump arrays holding contents of debugged files.</source>
          <target state="translated">디버깅 된 파일의 내용을 보유한 덤프 배열.</target>
        </trans-unit>
        <trans-unit id="c3ebe589cb305dd68a2940605b6daaa7020bacf2" translate="yes" xml:space="preserve">
          <source>Dump arrays holding debugged files.</source>
          <target state="translated">디버깅 된 파일을 보유한 덤프 배열.</target>
        </trans-unit>
        <trans-unit id="226b4cf975bc516395af9737531a129bdd39ab93" translate="yes" xml:space="preserve">
          <source>Dump contents of &quot;reused&quot; addresses.</source>
          <target state="translated">&quot;재사용 된&quot;주소의 내용을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="259f2ccf29b6875ba051810947cb2d0facc44c4f" translate="yes" xml:space="preserve">
          <source>Dump offset information. This can be used to see how regops correlate to the pattern. Output format is</source>
          <target state="translated">덤프 오프셋 정보. 이것은 regops가 패턴과 어떻게 관련되는지를 보는 데 사용할 수 있습니다. 출력 형식은</target>
        </trans-unit>
        <trans-unit id="0c76297cc9be5e641298778b62c24d2cf18dcd23" translate="yes" xml:space="preserve">
          <source>Dump symbol tables of packages.</source>
          <target state="translated">패키지의 심볼 테이블을 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="87f33d5bfa467e7016a8c6f9502f70002c9bfcce" translate="yes" xml:space="preserve">
          <source>Dump the configuration in the same format that CPAN.pm uses. This is useful for checking the configuration as well as using the dump as a starting point for a new, custom configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8420d45b35aac310c6f6a8a752e4db117364a2" translate="yes" xml:space="preserve">
          <source>Dump the contents of a padlist</source>
          <target state="translated">padlist의 내용을 덤프</target>
        </trans-unit>
        <trans-unit id="aa55ac5b7f095f269a678e79910c4c37b3152a49" translate="yes" xml:space="preserve">
          <source>Dump the contents of all SVs not yet freed (debugging aid).</source>
          <target state="translated">아직 해제되지 않은 모든 SV의 컨텐츠를 덤프하십시오 (디버깅 보조)</target>
        </trans-unit>
        <trans-unit id="d6a50535ad9de82c4339f219e99b9b784c2acae9" translate="yes" xml:space="preserve">
          <source>Dump the final program out after it is compiled and optimised.</source>
          <target state="translated">컴파일 및 최적화 된 최종 프로그램을 덤프하십시오.</target>
        </trans-unit>
        <trans-unit id="918c0daf95540cecfd55fc2c00499f5882b52cfa" translate="yes" xml:space="preserve">
          <source>Dump the flags associated with the program</source>
          <target state="translated">프로그램과 관련된 플래그를 덤프</target>
        </trans-unit>
        <trans-unit id="ca6f5764b6bb205859885185dfc165c84ecff79a" translate="yes" xml:space="preserve">
          <source>Dumper</source>
          <target state="translated">Dumper</target>
        </trans-unit>
        <trans-unit id="391e102ac6a7db07ce2abb00cef38679a9c72ad2" translate="yes" xml:space="preserve">
          <source>Dumper(</source>
          <target state="translated">Dumper(</target>
        </trans-unit>
        <trans-unit id="5e107609c2d58489d78c64df77c07976e804b91e" translate="yes" xml:space="preserve">
          <source>Dumping Perl Data Structures</source>
          <target state="translated">Perl 데이터 구조 덤프</target>
        </trans-unit>
        <trans-unit id="44d1680eb49a12854ee630cd3f07447c8ef725fa" translate="yes" xml:space="preserve">
          <source>Dumping a large array or hash</source>
          <target state="translated">큰 배열 또는 해시 덤프</target>
        </trans-unit>
        <trans-unit id="214c5750b8c63fb732f8406374025d36f7d80fa1" translate="yes" xml:space="preserve">
          <source>Dumps the C backtrace to the given &lt;code&gt;fp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416f4f5ac3093ab1714cc7418abe095efaa50a64" translate="yes" xml:space="preserve">
          <source>Dumps the C backtrace to the given fp.</source>
          <target state="translated">C 역 추적을 주어진 fp로 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="1a8a79003d6e119f87dd05fb34533dde374be690" translate="yes" xml:space="preserve">
          <source>Dumps the contents of an SV to the &lt;code&gt;STDERR&lt;/code&gt; filehandle.</source>
          <target state="translated">SV의 내용을 &lt;code&gt;STDERR&lt;/code&gt; 파일 핸들로 덤프합니다 .</target>
        </trans-unit>
        <trans-unit id="ec8f218a06cd2ecbe02c8bf7842f6c0f5d02c9c5" translate="yes" xml:space="preserve">
          <source>Dumps the entire optree of the current program starting at &lt;code&gt;PL_main_root&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt; . Also dumps the optrees for all visible subroutines in &lt;code&gt;PL_defstash&lt;/code&gt; .</source>
          <target state="translated">PL_main_root에서 시작하여 현재 프로그램의 전체 &lt;code&gt;PL_main_root&lt;/code&gt; 를 &lt;code&gt;STDERR&lt;/code&gt; 로 덤프합니다 . 또한 모든 보이는 서브 루틴의 optrees 덤프 &lt;code&gt;PL_defstash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ead67843cf0fb29e56769f489a16db990ba85998" translate="yes" xml:space="preserve">
          <source>Dumps the entire optree of the current program starting at &lt;code&gt;PL_main_root&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt;. Also dumps the optrees for all visible subroutines in &lt;code&gt;PL_defstash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f7f7e922a3e5c53d29eb7033810ca1c5ff1e45" translate="yes" xml:space="preserve">
          <source>Dumps the optree starting at OP &lt;code&gt;o&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt; .</source>
          <target state="translated">OP &lt;code&gt;o&lt;/code&gt; 에서 시작하는 optree 를 &lt;code&gt;STDERR&lt;/code&gt; 로 덤프합니다 .</target>
        </trans-unit>
        <trans-unit id="ff1db99630ecaf43bc4df8a3267b247cc452a749" translate="yes" xml:space="preserve">
          <source>Dumps the optree starting at OP &lt;code&gt;o&lt;/code&gt; to &lt;code&gt;STDERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83684d55af04a9978210506a5f3da39f6330394" translate="yes" xml:space="preserve">
          <source>Dumps the optrees for all visible subroutines in &lt;code&gt;stash&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;stash&lt;/code&gt; 에서 보이는 모든 서브 루틴에 대한 optree를 덤프합니다 .</target>
        </trans-unit>
        <trans-unit id="d0dd33cb07e6dbe4372c395cbc22fafe10ceb0fd" translate="yes" xml:space="preserve">
          <source>Dumps the optrees for all visible subroutines in &lt;code&gt;stash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b069d1baf075aa441953fab4c10d5fb0c55b03" translate="yes" xml:space="preserve">
          <source>Dumps to STDOUT a two column list of op names and op descriptions. If an optional pattern is given then only lines which match the (case insensitive) pattern will be output.</source>
          <target state="translated">op 이름 및 op 설명의 두 열 목록을 STDOUT에 덤프합니다. 선택적 패턴이 제공되면 (대소 문자 구분) 패턴과 일치하는 행만 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="0bb1bbfb4b82018f68b759747efb8b836bc13b23" translate="yes" xml:space="preserve">
          <source>Dumpvalue</source>
          <target state="translated">Dumpvalue</target>
        </trans-unit>
        <trans-unit id="29282979e5caf58379ebe9349836f426355bbd81" translate="yes" xml:space="preserve">
          <source>Dumpvalue - provides screen dump of Perl data.</source>
          <target state="translated">Dumpvalue-Perl 데이터의 화면 덤프를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8c7383d3d81f7a77acf912122973c53dcae0fe84" translate="yes" xml:space="preserve">
          <source>Dup</source>
          <target state="translated">Dup</target>
        </trans-unit>
        <trans-unit id="4ea54bac60a77dfa23129ee560b9a4306b582737" translate="yes" xml:space="preserve">
          <source>Duping filehandles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e736ef9c9d3f1959724220fab1c809f387efa73" translate="yes" xml:space="preserve">
          <source>Duplicate free() ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5194887c5341c823d0b499a2bddca4cdca4574a6" translate="yes" xml:space="preserve">
          <source>Duplicate keys are entirely defined by the comparison function. In the case-insensitive example above, the keys: 'KEY' and 'key' would be considered duplicates, and assigning to the second one would overwrite the first. If duplicates are allowed for (with the R_DUP flag discussed below), only a single copy of duplicate keys is stored in the database --- so (again with example above) assigning three values to the keys: 'KEY', 'Key', and 'key' would leave just the first key: 'KEY' in the database with three values. For some situations this results in information loss, so care should be taken to provide fully qualified comparison functions when necessary. For example, the above comparison routine could be modified to additionally compare case-sensitively if two keys are equal in the case insensitive comparison:</source>
          <target state="translated">중복 키는 전적으로 비교 기능으로 정의됩니다. 위의 대소 문자를 구분하지 않는 예에서 'KEY'및 'key'키는 중복으로 간주되며 두 번째 키에 할당하면 첫 번째 키를 덮어 씁니다. 중복이 허용되면 (아래에 설명 된 R_DUP 플래그 사용) 중복 키의 단일 사본 만 데이터베이스에 저장됩니다. 따라서 위의 예와 같이 키에 세 개의 값을 지정하십시오 : 'KEY', 'Key' , 'key'는 데이터베이스에 세 개의 값이있는 'KEY'라는 첫 번째 키만 남습니다. 상황에 따라 정보가 손실되므로 필요한 경우 정규화 된 비교 기능을 제공하도록주의를 기울여야합니다. 예를 들어대소 문자를 구분하지 않는 비교에서 두 개의 키가 동일한 경우 위의 비교 루틴을 수정하여 대소 문자를 구분하여 추가로 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcb8d29e0990e3da3372e15eb7f856ef83bf96dd" translate="yes" xml:space="preserve">
          <source>Duplicate modifier '%c' after '%c' in %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231270fe32be376e1ff61953994a1d9555ba5c57" translate="yes" xml:space="preserve">
          <source>Duplicates a pad name list.</source>
          <target state="translated">패드 이름 목록을 복제합니다.</target>
        </trans-unit>
        <trans-unit id="9900c4228b05d518bce49d6e43830390656bb380" translate="yes" xml:space="preserve">
          <source>Duplicates a pad name.</source>
          <target state="translated">패드 이름을 복제합니다.</target>
        </trans-unit>
        <trans-unit id="9c150a6a5de518050ee469f156c0d8c9991e7d83" translate="yes" xml:space="preserve">
          <source>Duplicates a pad.</source>
          <target state="translated">패드를 복제합니다.</target>
        </trans-unit>
        <trans-unit id="0076cd1b095d68f4b7f0056ea7c0088bca45f3b9" translate="yes" xml:space="preserve">
          <source>Duplicates ccc=vr (Canonical_Combining_Class=Virama)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a249fd97af29be13a351a7a3b7c31857c28f36" translate="yes" xml:space="preserve">
          <source>Duplicates the current value of &lt;code&gt;SV&lt;/code&gt; , on the exit from the current &lt;code&gt;ENTER&lt;/code&gt; /&lt;code&gt;LEAVE&lt;/code&gt;</source>
          <target state="translated">현재 &lt;code&gt;ENTER&lt;/code&gt; / &lt;code&gt;LEAVE&lt;/code&gt; 종료시 &lt;code&gt;SV&lt;/code&gt; 의 현재 값을 복제합니다</target>
        </trans-unit>
        <trans-unit id="7445a8f04a8f54ffbdfb0e3bb01920b5118fc985" translate="yes" xml:space="preserve">
          <source>Duplicates the current value of &lt;code&gt;SV&lt;/code&gt;. On the exit from the current &lt;code&gt;ENTER&lt;/code&gt;/&lt;code&gt;LEAVE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327c7809967b34dba21cd1b07757c86e4f680971" translate="yes" xml:space="preserve">
          <source>During &quot;make test&quot; the &lt;code&gt;comp/cpp&lt;/code&gt; will be skipped because on Tru64 it cannot be tested before Perl has been installed. The test refers to the use of the &lt;code&gt;-P&lt;/code&gt; option of Perl.</source>
          <target state="translated">&quot;테스트 테스트&quot;중에는 Tru64에서 Perl을 설치하기 전에 테스트 할 수 없기 때문에 &lt;code&gt;comp/cpp&lt;/code&gt; 를 건너 뜁니다. 테스트는 Perl 의 &lt;code&gt;-P&lt;/code&gt; 옵션 사용을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5e7f35ad8b1dfeae34736f7f9bd1a3770686122f" translate="yes" xml:space="preserve">
          <source>During &quot;make test&quot; the &lt;code&gt;comp&lt;/code&gt;/&lt;code&gt;cpp&lt;/code&gt; will be skipped because on Tru64 it cannot be tested before Perl has been installed. The test refers to the use of the &lt;code&gt;-P&lt;/code&gt; option of Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a46924bba9ec42c3fc1e7dbc6523da9c5a0d98" translate="yes" xml:space="preserve">
          <source>During compilation you will see this warning from toke.c:</source>
          <target state="translated">컴파일하는 동안 toke.c에서 다음 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1b78be5f5982368a285609a938bd717c952f6438" translate="yes" xml:space="preserve">
          <source>During compilation, this points to the array containing the names part of the pad for the currently-compiling code.</source>
          <target state="translated">컴파일하는 동안 이것은 현재 컴파일중인 코드에 대한 패드의 이름 부분을 포함하는 배열을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="8fc3623ed774bb34e7810f090f0b1728d1403063" translate="yes" xml:space="preserve">
          <source>During compilation, this points to the array containing the values part of the pad for the currently-compiling code. (At runtime a CV may have many such value arrays; at compile time just one is constructed.) At runtime, this points to the array containing the currently-relevant values for the pad for the currently-executing code.</source>
          <target state="translated">컴파일하는 동안 현재 컴파일중인 코드의 패드 값 부분이 포함 된 배열을 가리 킵니다. (런타임에서 CV는 많은 값 배열을 가질 수 있습니다; 컴파일 타임에는 단 하나만 구성됩니다.) 런타임에서, 이것은 현재 실행중인 코드의 패드에 대해 현재 관련된 값을 포함하는 배열을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="688fb3463c876328fa68fbb00f834fb161bf77e9" translate="yes" xml:space="preserve">
          <source>During extensions build phase, a script</source>
          <target state="translated">확장 빌드 단계에서 스크립트</target>
        </trans-unit>
        <trans-unit id="fa018cae9c9703d71453474c98317ac396edf673" translate="yes" xml:space="preserve">
          <source>During global destruction, Perl will always garbage collect objects before unblessed references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;&quot;PERL_DESTRUCT_LEVEL&quot; in perlhacktips&lt;/a&gt; for more information about global destruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8cb198eac07a20f06df8ba7dc5ed5cb604d226" translate="yes" xml:space="preserve">
          <source>During global destruction, Perl will always garbage collect objects before unblessed references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt; for more information about global destruction.</source>
          <target state="translated">전역 파괴 중에 Perl은 항상 축복되지 않은 참조 전에 객체를 가비지 수집합니다. 참조 &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;perlhacktips에 PERL_DESTRUCT_LEVEL을&lt;/a&gt; 지구 멸망에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="63b2774e342436fdc21964665d44a1dd453eb511" translate="yes" xml:space="preserve">
          <source>During installation &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; will be set to &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the XS was not compiled.</source>
          <target state="translated">설치 중 &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; 은 XS가 컴파일되지 않은 경우 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="5946c994ba014b2a561d7368e6cc2cd95c367bfa" translate="yes" xml:space="preserve">
          <source>During installation &lt;code&gt;$List::Util::XS::VERSION&lt;/code&gt; will be set to &lt;code&gt;undef&lt;/code&gt; if the XS was not compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365d0173e5c9fab16585ed58b7aee60ff977956d" translate="yes" xml:space="preserve">
          <source>During recent history, data is moved around a computer in 8-bit chunks, often called &quot;bytes&quot; but also known as &quot;octets&quot; in standards documents. Perl is widely used to manipulate data of many types: not only strings of characters representing human or computer languages, but also &quot;binary&quot; data, being the machine's representation of numbers, pixels in an image, or just about anything.</source>
          <target state="translated">최근 기록 동안 데이터는 종종 &quot;바이트&quot;라고도하지만 표준 문서에서는 &quot;옥텟&quot;이라고도하는 8 비트 청크로 컴퓨터 주위로 이동됩니다. Perl은 인간 또는 컴퓨터 언어를 나타내는 문자 스트링뿐만 아니라 &quot;이진&quot;데이터와 같은 여러 유형의 데이터를 조작하는 데 널리 사용됩니다. 기계의 숫자, 이미지의 픽셀 또는 거의 모든 것의 표현입니다.</target>
        </trans-unit>
        <trans-unit id="c00b220a28d96bc682b1b18fd920cedf0efda896" translate="yes" xml:space="preserve">
          <source>During the 'r' command CPAN.pm finds modules with a version number of zero. When the command finishes, it prints a report about this. If you want this report to be very verbose, say yes to the following variable.</source>
          <target state="translated">'r'명령 동안 CPAN.pm은 버전 번호가 0 인 모듈을 찾습니다. 명령이 완료되면 이에 대한 보고서가 인쇄됩니다. 이 보고서를 매우 장황하게하려면 다음 변수에 대해 yes라고 말하십시오.</target>
        </trans-unit>
        <trans-unit id="1e8d8123a94cf9a48937762f3c4d82a2ae9cfc9c" translate="yes" xml:space="preserve">
          <source>During the 'r' command CPAN.pm finds modules without version number. When the command finishes, it prints a report about this. If you want this report to be very verbose, say yes to the following variable.</source>
          <target state="translated">'r'명령 동안 CPAN.pm은 버전 번호가없는 모듈을 찾습니다. 명령이 완료되면 이에 대한 보고서가 인쇄됩니다. 이 보고서를 매우 장황하게하려면 다음 변수에 대해 yes라고 말하십시오.</target>
        </trans-unit>
        <trans-unit id="00bf1cb155480acd23b923e4a6c03a2b23cd1d39" translate="yes" xml:space="preserve">
          <source>During the build process, three Perl images are produced.</source>
          <target state="translated">빌드 프로세스 중에 3 개의 Perl 이미지가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4695645d68d6dbb11815010844432810a8cc5ce6" translate="yes" xml:space="preserve">
          <source>During the matching of this sub-pattern, it has its own set of captures which are valid during the sub-match, but are discarded once control returns to the main pattern. For example, the following matches, with the inner pattern capturing &quot;B&quot; and matching &quot;BB&quot;, while the outer pattern captures &quot;A&quot;;</source>
          <target state="translated">이 하위 패턴을 일치시키는 동안 하위 일치 중에 유효한 자체 캡처 세트가 있지만 제어가 기본 패턴으로 돌아 오면 삭제됩니다. 예를 들어, 내부 패턴은 &quot;B&quot;를 캡처하고 &quot;BB&quot;는 일치하는 반면 다음 패턴은 &quot;A&quot;를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="e6ec7eb737062f01f212178148567a03e6c845e4" translate="yes" xml:space="preserve">
          <source>During the normal course of events, the parent process and every pseudo-process started by it will wait for their respective pseudo-children to complete before they exit. This means that the parent and every pseudo-child created by it that is also a pseudo-parent will only exit after their pseudo-children have exited.</source>
          <target state="translated">정상적인 이벤트 과정에서 상위 프로세스와 프로세스가 시작한 모든 의사 프로세스는 종료되기 전에 해당 의사 자식이 완료 될 때까지 기다립니다. 이는 부모와 의사 부모 인 부모가 생성 한 모든 의사 자식이 의사 자식이 종료 된 후에 만 ​​종료됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="85a78e23b9d9c4e7a961f0c956e555ec189c2e27" translate="yes" xml:space="preserve">
          <source>During the rest of this document, the shortcuts A (for accuracy), P (for precision), F (fallback) and R (rounding mode) are be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26974b2880875e58f9a65545ea413592199b96d1" translate="yes" xml:space="preserve">
          <source>During the rest of this document, the shortcuts A (for accuracy), P (for precision), F (fallback) and R (rounding mode) will be used.</source>
          <target state="translated">이 문서의 나머지 부분에서는 바로 가기 A (정확도), P (정밀도), F (대체) 및 R (반올림 모드)이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f8d90cb30467e2a4d157edb90535bc578beea09a" translate="yes" xml:space="preserve">
          <source>During this search no attention is paid to the semantics of the construct. Thus:</source>
          <target state="translated">이 검색 동안 구문의 의미에주의를 기울이지 않습니다. 그러므로:</target>
        </trans-unit>
        <trans-unit id="601d1570400ebbc8e652fb389057e665c3716c4a" translate="yes" xml:space="preserve">
          <source>DynaLoader</source>
          <target state="translated">DynaLoader</target>
        </trans-unit>
        <trans-unit id="9d69ce3ced252503b953a83d970f6811f3f613e6" translate="yes" xml:space="preserve">
          <source>DynaLoader - Dynamically load C libraries into Perl code</source>
          <target state="translated">DynaLoader-C 라이브러리를 Perl 코드에 동적으로로드</target>
        </trans-unit>
        <trans-unit id="b801b82847d571219ed7e9cb40b5911d8c6fd1ce" translate="yes" xml:space="preserve">
          <source>DynaLoader Interface Summary</source>
          <target state="translated">DynaLoader 인터페이스 요약</target>
        </trans-unit>
        <trans-unit id="44c249a4a70f6f5d86041728f18f2c1b944c09ee" translate="yes" xml:space="preserve">
          <source>DynaLoader.pm</source>
          <target state="translated">DynaLoader.pm</target>
        </trans-unit>
        <trans-unit id="7bf55f093a98122c15a38c4d1e0e12b14eb5e676" translate="yes" xml:space="preserve">
          <source>DynaLoader_pm.PL</source>
          <target state="translated">DynaLoader_pm.PL</target>
        </trans-unit>
        <trans-unit id="8c0469fbee509ece06e3ca30a6f9eb6672898d4e" translate="yes" xml:space="preserve">
          <source>Dynamic Loading Problems With GNU as and GNU ld</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafe90e80018d592f31306075f13c6355bb554de" translate="yes" xml:space="preserve">
          <source>Dynamic Loading versus Static Loading</source>
          <target state="translated">동적 로딩 대 정적 로딩</target>
        </trans-unit>
        <trans-unit id="da95eef5c485e4cd1d5a7961d0ca58ec0b914d56" translate="yes" xml:space="preserve">
          <source>Dynamic Scope and the Context Stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e2a2c7c1603246902c42979e7716a6a53a2226" translate="yes" xml:space="preserve">
          <source>Dynamic Templates</source>
          <target state="translated">동적 템플릿</target>
        </trans-unit>
        <trans-unit id="c8b41424729315af5e909c06767b3234e1c2dd11" translate="yes" xml:space="preserve">
          <source>Dynamic loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeae057e24d3406dc773ebda5aef0ba83459132" translate="yes" xml:space="preserve">
          <source>Dynamic loading is required if you want to use XS modules from CPAN (like DBI (and DBD's), JSON::XS, and Text::CSV_XS) or update CORE modules from CPAN with newer versions (like Encode) without rebuilding all of the perl binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376a2d3fdb39cd734db8f5317d570d379d27e726" translate="yes" xml:space="preserve">
          <source>Dynamic scoping works over a &lt;b&gt;dynamic scope&lt;/b&gt;, making variables visible throughout the rest of the &lt;b&gt;block&lt;/b&gt; in which they are first used and in any &lt;b&gt;subroutines&lt;/b&gt; that are called by the rest of the block. Dynamically scoped variables can have their values temporarily changed (and implicitly restored later) by a &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; operator. (Compare &lt;b&gt;lexical scoping&lt;/b&gt;.) Used more loosely to mean how a subroutine that is in the middle of calling another subroutine &amp;ldquo;contains&amp;rdquo; that subroutine at &lt;b&gt;runtime&lt;/b&gt;.</source>
          <target state="translated">동적 이상 작동 범위 지정 &lt;b&gt;동적 범위&lt;/b&gt; 의 나머지 부분 표시 변수 만드는 &lt;b&gt;블록&lt;/b&gt; 들이 먼저 사용되는 임의의 &lt;b&gt;서브 루틴&lt;/b&gt; 블록의 나머지 부분에 의해 호출된다. 동적 범위 변수는 &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 연산자에 의해 값이 일시적으로 변경되고 나중에 암시 적으로 복원 될 수 있습니다 . &lt;b&gt;어휘 범위 지정을&lt;/b&gt; 비교하십시오 . 다른 서브 루틴을 호출하는 중에있는 서브 루틴이 &lt;b&gt;런타임시&lt;/b&gt; 해당 서브 루틴을 포함하는 방법을 의미하기 위해 더 느슨하게 사용 &lt;b&gt;됩니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="16f059722e7a21ebd60b75a2a9c431a5712557ff" translate="yes" xml:space="preserve">
          <source>Dynamic scoping works over a &lt;b&gt;dynamic scope&lt;/b&gt;, making variables visible throughout the rest of the &lt;b&gt;block&lt;/b&gt; in which they are first used and in any &lt;b&gt;subroutines&lt;/b&gt; that are called by the rest of the block. Dynamically scoped variables can have their values temporarily changed (and implicitly restored later) by a &lt;code&gt;local&lt;/code&gt; operator. (Compare &lt;b&gt;lexical scoping&lt;/b&gt;.) Used more loosely to mean how a subroutine that is in the middle of calling another subroutine &amp;ldquo;contains&amp;rdquo; that subroutine at &lt;b&gt;runtime&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb638018434277b4fc82279e676431d053924a22" translate="yes" xml:space="preserve">
          <source>Dynamically load $filename, which must be the path to a shared object or library. An opaque 'library reference' is returned as a handle for the loaded object. Returns undef on error.</source>
          <target state="translated">공유 객체 또는 라이브러리의 경로 여야하는 $ filename을 동적으로로드합니다. 로드 된 객체의 핸들로 불투명 한 '라이브러리 참조'가 반환됩니다. 오류시 undef를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="86d6546533b1f34d2c75903edbf95c52c4a6e87e" translate="yes" xml:space="preserve">
          <source>Dynamically load C libraries into Perl code</source>
          <target state="translated">C 라이브러리를 Perl 코드에 동적으로로드</target>
        </trans-unit>
        <trans-unit id="549c414661c7e2cd66ebf276140209d3a293c3ec" translate="yes" xml:space="preserve">
          <source>Dynamically unload $libref, which must be an opaque 'library reference' as returned from dl_load_file. Returns one on success and zero on failure. This function is optional and may not necessarily be provided on all platforms.</source>
          <target state="translated">dl_load_file에서 반환되는 불투명 한 '라이브러리 참조'여야하는 $ libref를 동적으로 언로드합니다. 성공하면 1, 실패하면 0을 반환합니다. 이 기능은 선택 사항이며 모든 플랫폼에서 제공되지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="fa9bdf01ece32bc99b1e14c6937aab7757e65d12" translate="yes" xml:space="preserve">
          <source>E&amp;lt;...&amp;gt; codes are resolved.</source>
          <target state="translated">E &amp;lt;...&amp;gt; 코드가 해결되었습니다.</target>
        </trans-unit>
        <trans-unit id="8ba6f1546de2a6de38d5975288d79871e380398d" translate="yes" xml:space="preserve">
          <source>E&amp;lt;...&amp;gt; may freely appear in any formatting code (other than in another E&amp;lt;...&amp;gt; or in an Z&amp;lt;&amp;gt;). That is, &quot;X&amp;lt;The E&amp;lt;euro&amp;gt;1,000,000 Solution&amp;gt;&quot; is valid, as is &quot;L&amp;lt;The E&amp;lt;euro&amp;gt;1,000,000 Solution|Million::Euros&amp;gt;&quot;.</source>
          <target state="translated">E &amp;lt;...&amp;gt;는 다른 서식 코드 (다른 E &amp;lt;...&amp;gt; 또는 Z &amp;lt;&amp;gt; 제외)에 자유롭게 나타날 수 있습니다. 즉, &quot;L &amp;lt;Euro&amp;gt; 1,000,000 Solution | Million :: Euros&amp;gt;&quot;와 마찬가지로, &quot;X &amp;lt;Euro&amp;gt; 1,000,000 Solution&amp;gt;&quot;이 유효하다.</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="30394ead01f93c28afa8c8b097b8493cfaedcf3b" translate="yes" xml:space="preserve">
          <source>E.g. a collator for Spanish, which ignores diacritics and case difference (i.e. level 1), with reversed case ordering and no normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c56e2f6bd010417c5d9ae6293f4b104ad1b293" translate="yes" xml:space="preserve">
          <source>E.g. when 'a' and 'e' are ignorable, 'element' is equal to 'lament' (or 'lmnt').</source>
          <target state="translated">예를 들어 'a'와 'e'를 무시할 수있는 경우 'element'는 'lament'(또는 'lmnt')와 같습니다.</target>
        </trans-unit>
        <trans-unit id="54752205cb5bf21cf1543c1d8786b50bfa512554" translate="yes" xml:space="preserve">
          <source>E.g. when searching in</source>
          <target state="translated">예를 들어 검색 할 때</target>
        </trans-unit>
        <trans-unit id="c9faf7260b3872bd0cc8c1b2903b97df4d17534d" translate="yes" xml:space="preserve">
          <source>E.g., &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; 'foo', 'bar', 'baz'&lt;/code&gt; may lead Perl to finding</source>
          <target state="translated">예를 들어, &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; 'foo', 'bar', 'baz'&lt;/code&gt; 는 Perl이</target>
        </trans-unit>
        <trans-unit id="f65f44baca22fc36c204a17aba7cde6d0380e9f7" translate="yes" xml:space="preserve">
          <source>E.g., &lt;code&gt;system 'foo', 'bar', 'baz'&lt;/code&gt; may lead Perl to finding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14202089b63db480cc56897191e80ea08ccae522" translate="yes" xml:space="preserve">
          <source>E.g., when searching in</source>
          <target state="translated">예를 들어 검색 할 때</target>
        </trans-unit>
        <trans-unit id="b485c7ba8009d93828a2ae17d6a645ae6a07af2b" translate="yes" xml:space="preserve">
          <source>EAI_AGAIN</source>
          <target state="translated">EAI_AGAIN</target>
        </trans-unit>
        <trans-unit id="466933f0131ed375510214c913516df86604074c" translate="yes" xml:space="preserve">
          <source>EAI_BADFLAGS</source>
          <target state="translated">EAI_BADFLAGS</target>
        </trans-unit>
        <trans-unit id="57f7c1078c8aa2aaddb1e9ccfa4ab347b04e159f" translate="yes" xml:space="preserve">
          <source>EAI_FAMILY</source>
          <target state="translated">EAI_FAMILY</target>
        </trans-unit>
        <trans-unit id="39fca7efe56c6594f4e9febe7fc94d3000aee85e" translate="yes" xml:space="preserve">
          <source>EAI_NODATA</source>
          <target state="translated">EAI_NODATA</target>
        </trans-unit>
        <trans-unit id="c73870589ea66cb6b8021a5e864d81f53f6c61da" translate="yes" xml:space="preserve">
          <source>EAI_NONAME</source>
          <target state="translated">EAI_NONAME</target>
        </trans-unit>
        <trans-unit id="9a6c71cac9e5549cf4a89b20629a42a5c3d01807" translate="yes" xml:space="preserve">
          <source>EAI_SERVICE</source>
          <target state="translated">EAI_SERVICE</target>
        </trans-unit>
        <trans-unit id="cf18d56706e6a161ea7a892c730e7fc94aa42849" translate="yes" xml:space="preserve">
          <source>EBCDIC</source>
          <target state="translated">EBCDIC</target>
        </trans-unit>
        <trans-unit id="db39ab5da5fc359d74ab7f80a9662d49c8256b60" translate="yes" xml:space="preserve">
          <source>EBCDIC Encodings</source>
          <target state="translated">EBCDIC 인코딩</target>
        </trans-unit>
        <trans-unit id="acf1dc4914532273e100530a9ab5c863dba82d84" translate="yes" xml:space="preserve">
          <source>EBCDIC Examples:</source>
          <target state="translated">EBCDIC 예 :</target>
        </trans-unit>
        <trans-unit id="332c2be33ecb50e660de8a6bec931a2002f3ce8c" translate="yes" xml:space="preserve">
          <source>EBCDIC Platforms</source>
          <target state="translated">EBCDIC 플랫폼</target>
        </trans-unit>
        <trans-unit id="d5e0cb1a52c6c43ea7491f03d8cf20e2863b3020" translate="yes" xml:space="preserve">
          <source>EBCDIC checksums will differ for the same file translated into ASCII and vice versa.</source>
          <target state="translated">EBCDIC 체크섬은 ASCII로 변환 된 동일한 파일과 그 반대로 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4a1a6bb8b2ba023d8e2ace21595c7370a5af29a" translate="yes" xml:space="preserve">
          <source>EBCDIC code sets recognized by Perl</source>
          <target state="translated">Perl에 의해 인식되는 EBCDIC 코드 세트</target>
        </trans-unit>
        <trans-unit id="8917832f80dc1f23f4ce37b35b7094bce451b8d6" translate="yes" xml:space="preserve">
          <source>EBCDIC sort results may differ from ASCII sort results especially for mixed case strings. This is discussed in more detail &lt;a href=&quot;#SORTING&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">EBCDIC 정렬 결과는 특히 대소 문자 혼합 문자열의 ASCII 정렬 결과와 다를 수 있습니다. 이에 대해서는 &lt;a href=&quot;#SORTING&quot;&gt;아래&lt;/a&gt; 에서 더 자세히 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="7677238c1c94d673588f0b0008d5f4a6f1ae6faa" translate="yes" xml:space="preserve">
          <source>ECMA</source>
          <target state="translated">ECMA</target>
        </trans-unit>
        <trans-unit id="ca4fa29952335b9cbf3adeeb9b44993cc8a7a5e0" translate="yes" xml:space="preserve">
          <source>ECMA-035 (eq &lt;code&gt;ISO-2022&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0161b12e1086c489bcc4c4218bf647b2c2e7af38" translate="yes" xml:space="preserve">
          <source>ECMA-048 is available on-line (at least at the time of this writing) at &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;http://www.ecma-international.org/publications/standards/Ecma-048.htm&lt;/a&gt;.</source>
          <target state="translated">ECMA-048은 http://www.ecma-international.org/publications/standards/Ecma-048.htm에서 온라인으로 (적어도이 글을 쓰는 시점에) 이용할 &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;수&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="23e17e81d1c8f0928ecb688013b0e12de12786c2" translate="yes" xml:space="preserve">
          <source>ECMA-048 is available on-line (at least at the time of this writing) at &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-048.htm&quot;&gt;https://www.ecma-international.org/publications/standards/Ecma-048.htm&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0216d6b25a22e0b782349678c3b9d439ab040aa1" translate="yes" xml:space="preserve">
          <source>EFFECTIVE</source>
          <target state="translated">EFFECTIVE</target>
        </trans-unit>
        <trans-unit id="4f5a646d5f41d5d0501c72e4b38d02f1b4dbf4a6" translate="yes" xml:space="preserve">
          <source>EGV</source>
          <target state="translated">EGV</target>
        </trans-unit>
        <trans-unit id="cbc724c9910501b7f3260e0af4b0be278ac0c6a0" translate="yes" xml:space="preserve">
          <source>ELEMENTS OF THE INTERPRETER</source>
          <target state="translated">통역사 요소</target>
        </trans-unit>
        <trans-unit id="775eda021e49d1db0c56510d89f1a3a5b0d3533c" translate="yes" xml:space="preserve">
          <source>ELEMENT_LIST</source>
          <target state="translated">ELEMENT_LIST</target>
        </trans-unit>
        <trans-unit id="26086124515389440c2153ecca2fa86e19333108" translate="yes" xml:space="preserve">
          <source>EMX</source>
          <target state="translated">EMX</target>
        </trans-unit>
        <trans-unit id="274c18c04f053750184eb461592a3aeba38deb84" translate="yes" xml:space="preserve">
          <source>EMX runtime is required (may be substituted by RSX). Note that it is possible to make</source>
          <target state="translated">EMX 런타임이 필요합니다 (RSX로 대체 될 수 있음). 만들 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ee406c89e6d96da9d9c9078da02dd1085c757041" translate="yes" xml:space="preserve">
          <source>ENCNAME</source>
          <target state="translated">ENCNAME</target>
        </trans-unit>
        <trans-unit id="09d70e3cb3e8ca25c8e1c040798016341acb9d34" translate="yes" xml:space="preserve">
          <source>ENCODED WORD</source>
          <target state="translated">인코딩 된 단어</target>
        </trans-unit>
        <trans-unit id="1e306f9d0fec9dc9a627cd5c3b6dd9bb1770a21e" translate="yes" xml:space="preserve">
          <source>ENCODING</source>
          <target state="translated">ENCODING</target>
        </trans-unit>
        <trans-unit id="240541599231ed86787c9e52f5af64302a43ab0b" translate="yes" xml:space="preserve">
          <source>ENCODING/CODESET FLAG NOTES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d205abee3d2a71688a6b66568be289a94050031c" translate="yes" xml:space="preserve">
          <source>END</source>
          <target state="translated">END</target>
        </trans-unit>
        <trans-unit id="1a17261bcf4b75475931b061714080707917f700" translate="yes" xml:space="preserve">
          <source>END blocks in threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54febf31399865b922c143850536b3c8103720f9" translate="yes" xml:space="preserve">
          <source>ENTER</source>
          <target state="translated">ENTER</target>
        </trans-unit>
        <trans-unit id="279e6f32faa6de9830db1d1a9ad2cbe111c4672a" translate="yes" xml:space="preserve">
          <source>ENTER_with_name</source>
          <target state="translated">ENTER_with_name</target>
        </trans-unit>
        <trans-unit id="6d3c353157df1302b4606a2c3c31edf9ce433536" translate="yes" xml:space="preserve">
          <source>ENTRIES IN EACH LEXICON</source>
          <target state="translated">각 LEXICON의 엔트리</target>
        </trans-unit>
        <trans-unit id="15d54da16fed3cc2ae89bbdaf9ad9e1b0ec1df2c" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT</source>
          <target state="translated">ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="dcbd369d30529f9f8b0c8d483614d01ac947cddb" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8f8d1fdc31a300a149531a3ee67854b7226f82" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS</source>
          <target state="translated">테스트에 영향을 미치는 환경 변수 :: HARNESS</target>
        </trans-unit>
        <trans-unit id="ca7f3972a83e913d649e11c108df24283c3bc376" translate="yes" xml:space="preserve">
          <source>ENVIRONMENT VARIABLES THAT TAP::HARNESS::COMPATIBLE SETS</source>
          <target state="translated">TAP :: HARNESS :: 호환 가능한 환경 변수</target>
        </trans-unit>
        <trans-unit id="2b46cf1024800aa170659aafb346721ce6d03fa5" translate="yes" xml:space="preserve">
          <source>ENVIRONMENTAL VARIABLES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda4aab5bcbd0ed38717196ad5a3684cd59490a3" translate="yes" xml:space="preserve">
          <source>EOF</source>
          <target state="translated">EOF</target>
        </trans-unit>
        <trans-unit id="506fa659da589b353034b69fa8084d4abc04ac0a" translate="yes" xml:space="preserve">
          <source>EOF this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7084ac12cca76d68cdd87fe9d782e1ae84dd265" translate="yes" xml:space="preserve">
          <source>EOF.</source>
          <target state="translated">EOF.</target>
        </trans-unit>
        <trans-unit id="bc8e77d510181b5522d113b8d79cd4cb3e49542e" translate="yes" xml:space="preserve">
          <source>EOL Platforms</source>
          <target state="translated">EOL 플랫폼</target>
        </trans-unit>
        <trans-unit id="7d063d313be8f22d60adcb2e5150c0209bf36674" translate="yes" xml:space="preserve">
          <source>ERRNO</source>
          <target state="translated">ERRNO</target>
        </trans-unit>
        <trans-unit id="ebe21523a5dccd37a9fcf7ea0fd32b1eca292ad0" translate="yes" xml:space="preserve">
          <source>ERROR HANDLING</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="161833a14be7adad1a6eb962fc3f24b1791debe8" translate="yes" xml:space="preserve">
          <source>ERROR REPORTING</source>
          <target state="translated">오류 신고</target>
        </trans-unit>
        <trans-unit id="fb558b481c7703cb01a866167aa87ba7ffeeb0ce" translate="yes" xml:space="preserve">
          <source>ERRORS</source>
          <target state="translated">ERRORS</target>
        </trans-unit>
        <trans-unit id="2ef444354ee97e4dd743f7f63b3e4d0c239b4132" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO DIVISION BY ZERO</source>
          <target state="translated">ZERO로 나눈 오류</target>
        </trans-unit>
        <trans-unit id="6a22654ad1bd17a1b7f8a33ebc606c6dd0499218" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO</source>
          <target state="translated">제로 또는 로그의 제곱으로 인한 오류</target>
        </trans-unit>
        <trans-unit id="c79b986f6448f6bcfe4c395367179ab049f8d63e" translate="yes" xml:space="preserve">
          <source>ERRORS DUE TO INDIGESTIBLE ARGUMENTS</source>
          <target state="translated">식별 할 수없는 인수로 인한 오류</target>
        </trans-unit>
        <trans-unit id="4ab4bacd50726797aff815243821a3bb405f6900" translate="yes" xml:space="preserve">
          <source>ERRSV</source>
          <target state="translated">ERRSV</target>
        </trans-unit>
        <trans-unit id="6f1d7e623d1be2e3224550fb5ed680f08aba75ed" translate="yes" xml:space="preserve">
          <source>ESCAPE SEQUENCES</source>
          <target state="translated">이스케이프 시퀀스</target>
        </trans-unit>
        <trans-unit id="c68e9c8ffafea2d41e94c29ec6ef311a4fc01058" translate="yes" xml:space="preserve">
          <source>ESTI GSM 03.38 Encoding</source>
          <target state="translated">ESTI GSM 03.38 인코딩</target>
        </trans-unit>
        <trans-unit id="330d938044782725e081a62faa873e5784320980" translate="yes" xml:space="preserve">
          <source>ESTI GSM 03.38 Encoding itself.</source>
          <target state="translated">ESTI GSM 03.38 자체 인코딩.</target>
        </trans-unit>
        <trans-unit id="0979861f08f8c62c6b00e5c27ed6a26ba1bd4070" translate="yes" xml:space="preserve">
          <source>EUC</source>
          <target state="translated">EUC</target>
        </trans-unit>
        <trans-unit id="0a9e66dbcb7ce21221b3b891f3797d28da463cec" translate="yes" xml:space="preserve">
          <source>EVAL without pos change exceeded limit in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650d38c44af2f00886f1f10758ea6145c85dca78" translate="yes" xml:space="preserve">
          <source>EVENT PRODUCTION METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9199febdaab27118bac1b42feacb4f953051759" translate="yes" xml:space="preserve">
          <source>EXAMPLE</source>
          <target state="translated">EXAMPLE</target>
        </trans-unit>
        <trans-unit id="79e0bba4d7ab03dd3a43d89e18dc509cf2803c4f" translate="yes" xml:space="preserve">
          <source>EXAMPLE - Greekperl</source>
          <target state="translated">예-그리스어</target>
        </trans-unit>
        <trans-unit id="c1459caada695329b2e0c6704825c3b8e7a13c88" translate="yes" xml:space="preserve">
          <source>EXAMPLE 1</source>
          <target state="translated">실시 예 1</target>
        </trans-unit>
        <trans-unit id="1358d71098fb89610fe1aac79c61d72cd99d3282" translate="yes" xml:space="preserve">
          <source>EXAMPLE 2</source>
          <target state="translated">실시 예 2</target>
        </trans-unit>
        <trans-unit id="bf337e44a3f58c52533729fe2435927aca3951e1" translate="yes" xml:space="preserve">
          <source>EXAMPLE 3</source>
          <target state="translated">실시 예 3</target>
        </trans-unit>
        <trans-unit id="6c373f3759a7e7f5ea3aa6485c89916c7bfcefb6" translate="yes" xml:space="preserve">
          <source>EXAMPLE 4</source>
          <target state="translated">실시 예 4</target>
        </trans-unit>
        <trans-unit id="c0fcde52500282f83cc647053ccb330dab650466" translate="yes" xml:space="preserve">
          <source>EXAMPLE 5</source>
          <target state="translated">실시 예 5</target>
        </trans-unit>
        <trans-unit id="45b9b19b0fbae586929496cd8750455d351de3e8" translate="yes" xml:space="preserve">
          <source>EXAMPLE 6</source>
          <target state="translated">실시 예 6</target>
        </trans-unit>
        <trans-unit id="c45a24f213f8694012485c12afa309d47467f3fd" translate="yes" xml:space="preserve">
          <source>EXAMPLE 7 (Coming Soon)</source>
          <target state="translated">실시 예 7 (출시 예정)</target>
        </trans-unit>
        <trans-unit id="efa7b38bfff5f32b2321e835dcdafd3692ef4121" translate="yes" xml:space="preserve">
          <source>EXAMPLE 8 (Coming Soon)</source>
          <target state="translated">실시 예 8 (출시 예정)</target>
        </trans-unit>
        <trans-unit id="62774320706bd47493c114307c201f9b0569a380" translate="yes" xml:space="preserve">
          <source>EXAMPLE 9 Passing open files to XSes</source>
          <target state="translated">예 9 열린 파일을 XSes에 전달</target>
        </trans-unit>
        <trans-unit id="5620a0ea3c2afd67a246637da41377405c24e6fb" translate="yes" xml:space="preserve">
          <source>EXAMPLE OF A SIMPLE PATCH</source>
          <target state="translated">간단한 패치의 예</target>
        </trans-unit>
        <trans-unit id="a8099c29efbd0420188d4a7efe08cb02085720f0" translate="yes" xml:space="preserve">
          <source>EXAMPLE: $ perl -e&quot;exit 44;&quot; Non-hushed error exit %SYSTEM-F-ABORT, abort DCL message $ show sym $STATUS $STATUS == &quot;%X0000002C&quot;</source>
          <target state="translated">예 : $ perl -e &quot;종료 44;&quot; 중단되지 않은 오류 종료 % SYSTEM-F-ABORT, 중단 DCL 메시지 $ show sym $ STATUS $ STATUS == &quot;% X0000002C&quot;</target>
        </trans-unit>
        <trans-unit id="a06e781ed035862478fdb8e74e8410d0fb77a7e0" translate="yes" xml:space="preserve">
          <source>EXAMPLE: if ($quiet_exit) { vmsish::hushed(1); } print &quot;Sssshhhh...I'm hushed...\n&quot; if vmsish::hushed(); exit 44;</source>
          <target state="translated">예 : if ($ quiet_exit) {vmsish :: hushed (1); } vmsish :: hushed () 인 경우 &quot;Sssshhhh ... 허쉬되었습니다 ... \ n&quot;으로 인쇄합니다. 출구 44;</target>
        </trans-unit>
        <trans-unit id="c8296cf24395c1237ea3d8bd4a47331705d59199" translate="yes" xml:space="preserve">
          <source>EXAMPLE: use vmsish 'hushed'; # turn on hushed flag use Carp; # Carp compiled hushed exit 44; # will be hushed croak('I die'); # will be hushed no vmsish 'hushed'; # turn off hushed flag exit 44; # will not be hushed croak('I die2'): # WILL be hushed, croak was compiled hushed</source>
          <target state="translated">예 : vmsish 'hushed'를 사용하십시오. # 허쉬 깃발 사용 잉어를 켜십시오; # 잉어는 44 번 출구를 compiled 다; # 으깬다 ( 'I die'); #는 '숨겨진'vmsish가 아닙니다. # hushed flag exit 44를 끄십시오. # 으르렁 거리지 않을 것입니다 ( 'I die2') : # 으르 릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="9659699670b30983eb4e3c22454887e3c9c6ce39" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXAMPLES</target>
        </trans-unit>
        <trans-unit id="80b0ebd5e30f42e63544199d92ca94554dccc4b9" translate="yes" xml:space="preserve">
          <source>EXCEPTIONS</source>
          <target state="translated">EXCEPTIONS</target>
        </trans-unit>
        <trans-unit id="06e1961ca3f53e3c48b3b5e66be4ce82f00b34ed" translate="yes" xml:space="preserve">
          <source>EXCLUDE_EXT</source>
          <target state="translated">EXCLUDE_EXT</target>
        </trans-unit>
        <trans-unit id="790392d6b839abbb5b061152b6a3114de84502b4" translate="yes" xml:space="preserve">
          <source>EXECUTE</source>
          <target state="translated">EXECUTE</target>
        </trans-unit>
        <trans-unit id="9076eba5adee82e6d2fcaeb3ed4783aa94393984" translate="yes" xml:space="preserve">
          <source>EXE_FILES</source>
          <target state="translated">EXE_FILES</target>
        </trans-unit>
        <trans-unit id="644b5806e118fe0af3936c64572a1496ddda7507" translate="yes" xml:space="preserve">
          <source>EXISTS</source>
          <target state="translated">EXISTS</target>
        </trans-unit>
        <trans-unit id="2173310c114b19bb1884cfc1f1c60d0ee7f8965b" translate="yes" xml:space="preserve">
          <source>EXISTS this, key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7510c8c453004eea60fefa1e03b9543d11c009d" translate="yes" xml:space="preserve">
          <source>EXIT CODES</source>
          <target state="translated">출구 코드</target>
        </trans-unit>
        <trans-unit id="3a06c7d53de8e4207bc5b59139ccca4aa8a85a6b" translate="yes" xml:space="preserve">
          <source>EXIT STATUS</source>
          <target state="translated">종료 상태</target>
        </trans-unit>
        <trans-unit id="bfabdd28c2c3b60f19c824f86bf07607fcef7b92" translate="yes" xml:space="preserve">
          <source>EXIT VALUES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e2ee12a2cb5c774bfad575cb3bcba82617b335" translate="yes" xml:space="preserve">
          <source>EXITING A THREAD</source>
          <target state="translated">실을 잡기</target>
        </trans-unit>
        <trans-unit id="bbab371aab4e813225c2ece9a49a380012d2c551" translate="yes" xml:space="preserve">
          <source>EXLOCK flag available since 0.19.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f2a2341e0d9e2dcbb8ca9ce37431a945288e22" translate="yes" xml:space="preserve">
          <source>EXPECTED METHODS</source>
          <target state="translated">예상 방법</target>
        </trans-unit>
        <trans-unit id="a60078e00dea4c70dbff7ca80ea730dc6f8dcdbb" translate="yes" xml:space="preserve">
          <source>EXPECTED VALUE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfb7a5ad5fc1b4f5cc510ab16d0961139e316c5" translate="yes" xml:space="preserve">
          <source>EXPIRATION SUPPORT</source>
          <target state="translated">만료 지원</target>
        </trans-unit>
        <trans-unit id="c0b9641f510bdc263b1b4f8cdf15c1c068ad9fea" translate="yes" xml:space="preserve">
          <source>EXPORT</source>
          <target state="translated">EXPORT</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
