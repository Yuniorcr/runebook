<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="66c7071a6fa7cb2bb38d9b2c01a05a137c430add" translate="yes" xml:space="preserve">
          <source>Optional - if not present a lower layer does the open. If present, called after the layer is pushed for sysopen style opens which pass a numeric mode and permissions. This function is subject to change as there is no easy way to get a lower layer to do the open and then regain control.</source>
          <target state="translated">선택 사항-하위 계층이 없으면 하위 계층이 열립니다. 존재하는 경우 sysopen 스타일을 열기 위해 계층을 푸시 한 후 호출되며 숫자 모드 및 권한을 전달합니다. 이 기능은 하위 계층이 개방을 수행 한 다음 제어를 다시 얻는 쉬운 방법이 없으므로 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00aae857e158214ab9fea8340d3e81b79261acff" translate="yes" xml:space="preserve">
          <source>Optional - if not present a lower layer does the open. If present, called for normal opens after the layer is pushed. This function is subject to change as there is no easy way to get a lower layer to do the open and then regain control.</source>
          <target state="translated">선택 사항-하위 계층이 없으면 하위 계층이 열립니다. 있는 경우 레이어를 누른 후 일반 열림이 필요합니다. 이 기능은 하위 계층이 개방을 수행 한 다음 제어를 다시 얻는 쉬운 방법이 없으므로 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c67ecb9d9cd03592e40a8cfa5395a4594326ddf4" translate="yes" xml:space="preserve">
          <source>Optional - if not present the layer is popped on binmode($fh) or when &lt;code&gt;:raw&lt;/code&gt; is pushed. If present it should return 0 on success, -1 on error, or undef to pop the layer.</source>
          <target state="translated">선택 사항-레이어가 없으면 binmode ($ fh) 또는 &lt;code&gt;:raw&lt;/code&gt; 를 누를 때 레이어가 나타 납니다. 존재하는 경우 성공하면 0을, 오류가 발생하면 -1을 반환하거나, 레이어를 팝하도록 undef해야합니다.</target>
        </trans-unit>
        <trans-unit id="ea8b4c621a2282475d1c70505956ae9cadc5c505" translate="yes" xml:space="preserve">
          <source>Optional - if present it will be called immediately after PUSHED has returned. It should return a true value if the layer expects data to be UTF-8 encoded. If it returns true, the result is as if the caller had done</source>
          <target state="translated">선택 사항-존재하는 경우 PUSHED가 반환 된 직후에 호출됩니다. 계층에서 데이터가 UTF-8로 인코딩 될 것으로 예상하면 true 값을 반환해야합니다. 그것이 true를 반환하면 결과는 호출자가 한 것처럼</target>
        </trans-unit>
        <trans-unit id="74e7ab47ea9482eb12b8ad3e12ec65d52754eeba" translate="yes" xml:space="preserve">
          <source>Optional Exports</source>
          <target state="translated">선택적 수출</target>
        </trans-unit>
        <trans-unit id="a1586faede4e39ea6174b7a684a9a34f79190989" translate="yes" xml:space="preserve">
          <source>Optional Libraries for Perl on Cygwin</source>
          <target state="translated">Cygwin의 Perl 용 선택적 라이브러리</target>
        </trans-unit>
        <trans-unit id="ddd2d4ec70a68949d8c75dd5fb57b7fa281e8e27" translate="yes" xml:space="preserve">
          <source>Optional Parameters</source>
          <target state="translated">선택적 매개 변수</target>
        </trans-unit>
        <trans-unit id="5d44ae4df7ee3a08403ce68c38bfce3a82e017dd" translate="yes" xml:space="preserve">
          <source>Optional argument is (NAMESPACE), where NAMESPACE is the root namespace to use for the compartment (defaults to &quot;Safe::Root0&quot;, incremented for each new compartment).</source>
          <target state="translated">선택적 인수는 (NAMESPACE)입니다. 여기서 NAMESPACE는 구획에 사용할 루트 네임 스페이스입니다 (기본값은 &quot;Safe :: Root0&quot;, 새 구획마다 증분 됨).</target>
        </trans-unit>
        <trans-unit id="3da1e20ae914ed93255ed51de67afd32c72f609a" translate="yes" xml:space="preserve">
          <source>Optional arguments: &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; to force replacement of existing typemap entries without warning or &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; to skip entries that exist already in the typemap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858ee6824ad16cd9de2ea0b66e4472f499aa9cb6" translate="yes" xml:space="preserve">
          <source>Optional named arguments: &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; forces removal/replacement of existing &lt;code&gt;INPUT&lt;/code&gt; entries of the same &lt;code&gt;xstype&lt;/code&gt;. &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; triggers a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ae2939ab54c9c04e408a0017cb3413d0b55664" translate="yes" xml:space="preserve">
          <source>Optional named arguments: &lt;code&gt;replace =&amp;gt; 1&lt;/code&gt; forces removal/replacement of existing &lt;code&gt;TYPEMAP&lt;/code&gt; entries of the same &lt;code&gt;ctype&lt;/code&gt;. &lt;code&gt;skip =&amp;gt; 1&lt;/code&gt; triggers a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa68d1d92ca4ca3c04a935b810e97e06a61a345" translate="yes" xml:space="preserve">
          <source>Optional parameter lacks default expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ba9d28014863d3a9a0ee7c8bcd9a7976dbaee9" translate="yes" xml:space="preserve">
          <source>Optional positional parameters must come after all mandatory positional parameters. (If there are no mandatory positional parameters then an optional positional parameters can be the first thing in the signature.) If there are multiple optional positional parameters and not enough arguments are supplied to fill them all, they will be filled from left to right.</source>
          <target state="translated">선택적 위치 매개 변수는 모든 필수 위치 매개 변수 뒤에 와야합니다. (필수 위치 매개 변수가없는 경우 선택적 위치 매개 변수가 서명의 첫 번째 항목이 될 수 있습니다.) 여러 선택적 위치 매개 변수가 있고 매개 변수를 모두 채우는 데 충분한 인수가 제공되지 않은 경우 왼쪽에서 오른쪽으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="555e2b70062eccf33f8313bcc3fba207cf55ade3" translate="yes" xml:space="preserve">
          <source>Optional sorting weight for names, to determine the order of linear testing when multiple names fall in the same case of a switch clause. Higher comes earlier, undefined defaults to zero.</source>
          <target state="translated">스위치 절의 동일한 경우에 여러 이름이있을 때 선형 테스트 순서를 결정하기위한 이름에 대한 선택적인 정렬 가중치. 더 높을수록 정의되지 않은 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="da333a941fe0f82279c2c56c201f1766ccc0c3ef" translate="yes" xml:space="preserve">
          <source>Optional state for the subroutine. The state is passed in as &lt;code&gt;$_[1]&lt;/code&gt; . A reference to the subroutine itself is passed in as &lt;code&gt;$_[0]&lt;/code&gt; .</source>
          <target state="translated">서브 루틴의 선택적 상태. 상태는 &lt;code&gt;$_[1]&lt;/code&gt; 으로 전달됩니다 . 서브 루틴 자체에 대한 참조는 &lt;code&gt;$_[0]&lt;/code&gt; 으로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="777c6cf6d9966ee4f662be6ef8e1362bbe2c77cf" translate="yes" xml:space="preserve">
          <source>Optional state for the subroutine. The state is passed in as &lt;code&gt;$_[1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3640bdb58e89d324060d7d4f59fe26b0786d9f1e" translate="yes" xml:space="preserve">
          <source>Optional system utilities/More</source>
          <target state="translated">선택적 시스템 유틸리티 / 기타</target>
        </trans-unit>
        <trans-unit id="d82440108ab7dd6400453483bc258adad0e75461" translate="yes" xml:space="preserve">
          <source>Optional warnings are enabled by using the &lt;code&gt;warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; and &lt;b&gt;-W&lt;/b&gt; switches. Warnings may be captured by setting &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; to a reference to a routine that will be called on each warning instead of printing it. See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;warnings&lt;/code&gt; pragma 또는 &lt;b&gt;-w&lt;/b&gt; 및 &lt;b&gt;-W&lt;/b&gt; 스위치 를 사용하여 선택적 경고를 사용할 수 있습니다. &lt;code&gt;$SIG{__WARN__}&lt;/code&gt; 을 인쇄하는 대신 각 경고마다 호출되는 루틴에 대한 참조로 설정하여 경고를 캡처 할 수 있습니다 . &lt;a href=&quot;perlvar&quot;&gt;perlvar를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6529dfde12fe3045eaddbf8477d2f734dbabc795" translate="yes" xml:space="preserve">
          <source>Optional, if the display text was generated from another facet this should state what facet it was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b988e3016e060f13aed9e152faafade2e2cb57" translate="yes" xml:space="preserve">
          <source>Optional. If present should return an SV * representing the string argument passed to the layer when it was pushed. e.g. &quot;:encoding(ascii)&quot; would return an SvPV with value &quot;ascii&quot;. (</source>
          <target state="translated">선택 과목. 있는 경우 레이어를 눌렀을 때 전달 된 문자열 인수를 나타내는 SV *를 반환해야합니다. 예를 들어 &quot;: encoding (ascii)&quot;는 값이 &quot;ascii&quot;인 SvPV를 반환합니다. (</target>
        </trans-unit>
        <trans-unit id="f5c256c5844c41d82f2e7aa133aee1f37b9932b4" translate="yes" xml:space="preserve">
          <source>Optional. No return.</source>
          <target state="translated">선택 과목. 돌아올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce76e8ee73778e5c913a5dddf60e41e4482a439a" translate="yes" xml:space="preserve">
          <source>Optional. Returns end-of-file state. Default is a function of the return value of FILL or READ.</source>
          <target state="translated">선택 과목. 파일 끝 상태를 리턴합니다. 기본값은 FILL 또는 READ의 반환 값 함수입니다.</target>
        </trans-unit>
        <trans-unit id="aceaf62498201d3cb7c33131b06976b5e7ec5946" translate="yes" xml:space="preserve">
          <source>Optional. Returns error state. Default is no error until a mechanism to signal error (die?) is worked out.</source>
          <target state="translated">선택 과목. 오류 상태를 반환합니다. 오류 신호 메커니즘 (디?)이 해결 될 때까지 기본값은 오류가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d29adb828f03b9de58472833d11e71256f30b852" translate="yes" xml:space="preserve">
          <source>Optional. Used when &lt;code&gt;:raw&lt;/code&gt; layer is pushed (explicitly or as a result of binmode(FH)). If not present layer will be popped. If present should configure layer as binary (or pop itself) and return 0. If it returns -1 for error &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; will fail with layer still on the stack.</source>
          <target state="translated">선택 과목. &lt;code&gt;:raw&lt;/code&gt; 레이어를 눌렀을 때 (명시 적으로 또는 binmode (FH)의 결과) 사용됩니다. 존재하지 않으면 레이어가 나타납니다. 있는 경우 레이어를 이진 (또는 팝 자체)으로 구성하고 0을 반환해야합니다. 오류에 대해 -1을 반환 하면 스택의 레이어에서 여전히 레이어와 함께 &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode&lt;/a&gt;&lt;/code&gt; 가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="3db45b882282b9e7c135114feb30342b7341ffff" translate="yes" xml:space="preserve">
          <source>Optional. Used when &lt;code&gt;:raw&lt;/code&gt; layer is pushed (explicitly or as a result of binmode(FH)). If not present layer will be popped. If present should configure layer as binary (or pop itself) and return 0. If it returns -1 for error &lt;code&gt;binmode&lt;/code&gt; will fail with layer still on the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b5a80daefc2af51dc49c0805f2d21b91e8668b" translate="yes" xml:space="preserve">
          <source>Optionally calls timethese(), then outputs comparison chart. This:</source>
          <target state="translated">선택적으로 timethese ()를 호출 한 다음 비교 차트를 출력합니다. 이:</target>
        </trans-unit>
        <trans-unit id="26132c6770a4b3e227c527d37c031ee3bb13e049" translate="yes" xml:space="preserve">
          <source>Optionally takes &lt;code&gt;prototype&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2a6f0c361fa39f73808260e667b43a0b479347" translate="yes" xml:space="preserve">
          <source>Optionally, for trying out the feature, you may want to enable automatic dumping of the backtrace just before a warning or croak (die) message is emitted, by adding &lt;code&gt;-Accflags=-DUSE_C_BACKTRACE_ON_ERROR&lt;/code&gt; for Configure.</source>
          <target state="translated">선택적으로, 기능을 시험하기 위해 Configure에 &lt;code&gt;-Accflags=-DUSE_C_BACKTRACE_ON_ERROR&lt;/code&gt; 를 추가하여 경고 또는 croak (die) 메시지가 생성되기 직전에 역 추적 자동 덤프를 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d56e16a59906dea5f31b29892ce1311dd9cccd9" translate="yes" xml:space="preserve">
          <source>Optionally, one can merge the description of types and the list of argument names, rewriting this as</source>
          <target state="translated">선택적으로, 타입 설명과 인자 이름 목록을 병합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ffe10fd154c533ecea7fdf04e24f774b1b1a81c" translate="yes" xml:space="preserve">
          <source>Optionally, the string &lt;code&gt;death&lt;/code&gt; or &lt;code&gt;blurt&lt;/code&gt; to choose whether the error is immediately fatal or not. Default: &lt;code&gt;blurt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe61b6a7fc4254062204cd1faaa9dbc5a3de86e" translate="yes" xml:space="preserve">
          <source>Optionally, you can provide a &lt;code&gt;default_version&lt;/code&gt; argument after &lt;code&gt;$struct&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9c5258ecb746f12e305ee9f0999e8ac50793402b" translate="yes" xml:space="preserve">
          <source>Options (specified by the following modifiers) are:</source>
          <target state="translated">옵션 (다음 수정 자에 의해 지정됨)은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec1f90c3315fe4700f720cb2f4a9e4c50e170f92" translate="yes" xml:space="preserve">
          <source>Options affect how things are rendered (ie printed). They're presented here by their visual effect, 1st being strongest. They're grouped according to how they interrelate; within each group the options are mutually exclusive (unless otherwise stated).</source>
          <target state="translated">옵션은 사물이 렌더링되는 방법 (예 : 인쇄)에 영향을줍니다. 여기에서 시각적 효과가 가장 강하게 나타납니다. 그것들은 그들이 어떻게 관련되어 있는지에 따라 그룹화됩니다. 각 그룹 내에서 옵션은 상호 배타적입니다 (달리 명시되지 않는 한).</target>
        </trans-unit>
        <trans-unit id="48a464c28a671924b790e4e5d29f7c52e88ad928" translate="yes" xml:space="preserve">
          <source>Options are as described in &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; above; in addition, the following match process modifiers are available:</source>
          <target state="translated">옵션은 위의 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; 설명되어 있습니다 . 또한 다음과 같은 일치 프로세스 수정자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cdff170cc3e10cb89498b206dd00c7ccae91c8e" translate="yes" xml:space="preserve">
          <source>Options are as described in &lt;code&gt;qr//&lt;/code&gt; above; in addition, the following match process modifiers are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e758911022c90dc88a8767e43a034d257baa395" translate="yes" xml:space="preserve">
          <source>Options are as with &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; with the addition of the following replacement specific options:</source>
          <target state="translated">옵션은 다음과 같은 대체 옵션이 추가 된 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="b4a1b3364744cd418af923e1b268d0be0af1e63f" translate="yes" xml:space="preserve">
          <source>Options are as with &lt;code&gt;m//&lt;/code&gt; with the addition of the following replacement specific options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be4081ccaf3e011dcb6256fd6926414b643ca82" translate="yes" xml:space="preserve">
          <source>Options can be combined as required.</source>
          <target state="translated">필요에 따라 옵션을 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44de2a921493b7d9eacebba61cb9256d0440d480" translate="yes" xml:space="preserve">
          <source>Options can have values, the value is placed after the option character. Sometimes with whitespace in between, sometimes not:</source>
          <target state="translated">옵션은 값을 가질 수 있으며 값은 옵션 문자 뒤에 위치합니다. 때로는 사이에 공백이 있거나 때로는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f40af16e1d24ead9dd1ab7a9826636a3e146727" translate="yes" xml:space="preserve">
          <source>Options can take multiple values at once, for example</source>
          <target state="translated">예를 들어 옵션은 한 번에 여러 값을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="3ddfd37b7dede31756596dac520f5a582b7ed831" translate="yes" xml:space="preserve">
          <source>Options controlling sequence numbering</source>
          <target state="translated">시퀀스 넘버링을 제어하는 ​​옵션</target>
        </trans-unit>
        <trans-unit id="9a8a3df69d73a894006df726b5df3d7d2139bdfa" translate="yes" xml:space="preserve">
          <source>Options for Line-Style</source>
          <target state="translated">선 스타일 옵션</target>
        </trans-unit>
        <trans-unit id="58018de8cc3dcfc82b97b039f35b6a1c13becc88" translate="yes" xml:space="preserve">
          <source>Options for Opcode Ordering</source>
          <target state="translated">Opcode 주문 옵션</target>
        </trans-unit>
        <trans-unit id="55b5d2921e00a398b412bd693eeb7b816a5988e5" translate="yes" xml:space="preserve">
          <source>Options for tree-specific formatting</source>
          <target state="translated">트리 별 서식 옵션</target>
        </trans-unit>
        <trans-unit id="85b85ab75dd0ae66d7aa6313828663d28696cdc6" translate="yes" xml:space="preserve">
          <source>Options include:</source>
          <target state="translated">옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0cc4681b46a8bbe1672f6ee5cc5274a5a2e1321f" translate="yes" xml:space="preserve">
          <source>Options sometimes take several values. For example, a program could use multiple directories to search for library files:</source>
          <target state="translated">옵션은 때때로 여러 값을 갖습니다. 예를 들어, 프로그램은 여러 디렉토리를 사용하여 라이브러리 파일을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f78d98a0f0a1d210a552e42c750a6f91f2370150" translate="yes" xml:space="preserve">
          <source>Options that take arguments:</source>
          <target state="translated">인수를 취하는 옵션 :</target>
        </trans-unit>
        <trans-unit id="41151a23e0b5c5a846ca08d323cfca7cf516f1a6" translate="yes" xml:space="preserve">
          <source>Options with hash values</source>
          <target state="translated">해시 값이있는 옵션</target>
        </trans-unit>
        <trans-unit id="60f84bb401de02d865a716cc0a5e1289035f7821" translate="yes" xml:space="preserve">
          <source>Options with multiple names</source>
          <target state="translated">여러 이름을 가진 옵션</target>
        </trans-unit>
        <trans-unit id="c9529a432aa4df6cdd00e1eef2fc89856c4d9538" translate="yes" xml:space="preserve">
          <source>Options with multiple values</source>
          <target state="translated">여러 값을 가진 옵션</target>
        </trans-unit>
        <trans-unit id="ce4401244b851388c74b7c8db83ca37894df35bc" translate="yes" xml:space="preserve">
          <source>Options with values</source>
          <target state="translated">값이있는 옵션</target>
        </trans-unit>
        <trans-unit id="44b169e466bada4cebf1bd71469144108ff2f954" translate="yes" xml:space="preserve">
          <source>Options.U</source>
          <target state="translated">Options.U</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="99fd4ae20169f4f1fd95e0b318eddbf04496e03f" translate="yes" xml:space="preserve">
          <source>Optree Manipulation Functions</source>
          <target state="translated">Optree 조작 함수</target>
        </trans-unit>
        <trans-unit id="6660f96406f6f5efcf28a2f461913aed19ed8b17" translate="yes" xml:space="preserve">
          <source>Optree construction</source>
          <target state="translated">Optree 건축</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="8f2304a1d411632e410b78fbb8d87fbf5bbf2a9a" translate="yes" xml:space="preserve">
          <source>Or by including the &lt;a href=&quot;Test::Builder::Tester::Color&quot;&gt;Test::Builder::Tester::Color&lt;/a&gt; module directly in the PERL5LIB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219c1efc76675f38bcd59bb9804c4faf6887590f" translate="yes" xml:space="preserve">
          <source>Or by including the &lt;a href=&quot;tester/color&quot;&gt;Test::Builder::Tester::Color&lt;/a&gt; module directly in the PERL5LIB.</source>
          <target state="translated">또는 PERL5LIB에 &lt;a href=&quot;tester/color&quot;&gt;Test :: Builder :: Tester :: Color&lt;/a&gt; 모듈을 직접 포함 시키십시오.</target>
        </trans-unit>
        <trans-unit id="939c0047d2a7d9894b911fc7f2bc8d3ef6ebb72b" translate="yes" xml:space="preserve">
          <source>Or even the day of the year (which is what some people think of as a Julian day):</source>
          <target state="translated">또는 심지어 하루의 일 (일부 사람들은 율리우스 날이라고 생각합니다) :</target>
        </trans-unit>
        <trans-unit id="c8d29c4a4243321b13a4333a16028d3427ee5e4d" translate="yes" xml:space="preserve">
          <source>Or even to place backup copies of the original files into another directory (provided the directory already exists):</source>
          <target state="translated">또는 원본 파일의 백업 사본을 다른 디렉토리 (이미 존재하는 경우)에 배치 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a39395a536571e326a3e448e36d0980f046516aa" translate="yes" xml:space="preserve">
          <source>Or even with a literal numeric descriptor:</source>
          <target state="translated">또는 리터럴 숫자 설명자가있는 경우에도 :</target>
        </trans-unit>
        <trans-unit id="f00270b0e1ed43e5dfa325cc49e06520b6b53543" translate="yes" xml:space="preserve">
          <source>Or for a lot of changes, e.g. from a topic branch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab622aab7528770d4b43d68b1cd75eb516c4a74e" translate="yes" xml:space="preserve">
          <source>Or for months:</source>
          <target state="translated">또는 몇 달 동안 :</target>
        </trans-unit>
        <trans-unit id="4fbd4993cb449934f1a66fbe81f10f2f69d366bb" translate="yes" xml:space="preserve">
          <source>Or here's another sample of using our tied class:</source>
          <target state="translated">또는 묶인 클래스를 사용하는 또 다른 샘플이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cc3245f722d14e01ba8265aa59ed13c82aa6c08" translate="yes" xml:space="preserve">
          <source>Or if you already have an open filehandle:</source>
          <target state="translated">또는 이미 열린 파일 핸들이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="4b436dc18b09a9237b0e320d550c6bceb76aed2a" translate="yes" xml:space="preserve">
          <source>Or if you don't care to play it safe, like this:</source>
          <target state="translated">또는 다음과 같이 안전하게 플레이하지 않아도되는 경우 :</target>
        </trans-unit>
        <trans-unit id="ab228fa27d4891d818d4fcc6cc01c02a70a2f225" translate="yes" xml:space="preserve">
          <source>Or if you don't mind pulling in a few thousand lines of code just because you're afraid of a little &lt;code&gt;$|&lt;/code&gt; variable:</source>
          <target state="translated">또는 조금만 두려워서 수천 줄의 코드를 가져 오는 것이 마음에 들지 않는다면 &lt;code&gt;$|&lt;/code&gt; 변하기 쉬운:</target>
        </trans-unit>
        <trans-unit id="6de1ca81804fc1d18de6212eb9c2eb10c739f658" translate="yes" xml:space="preserve">
          <source>Or if you have a core dump:</source>
          <target state="translated">또는 코어 덤프가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="08ae01f1533c609ba5994d6d80c6e627d6b146ea" translate="yes" xml:space="preserve">
          <source>Or if you really want to save space:</source>
          <target state="translated">또는 실제로 공간을 절약하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="91c274909c10e199bdd764d2f1727e59782d9346" translate="yes" xml:space="preserve">
          <source>Or if you try to do</source>
          <target state="translated">또는 당신이하려고하면</target>
        </trans-unit>
        <trans-unit id="151d66e1a17731064f48e0aa8f42f3272b7c1ba5" translate="yes" xml:space="preserve">
          <source>Or if you want to schedule a</source>
          <target state="translated">또는 일정을 예약하려는 경우</target>
        </trans-unit>
        <trans-unit id="a55b0108f3cf41f36382908140f2919f204761ba" translate="yes" xml:space="preserve">
          <source>Or in a more recent version:</source>
          <target state="translated">또는 최신 버전에서 :</target>
        </trans-unit>
        <trans-unit id="c2f0409db7dd86c778a013b8c1b13fb97d9866d1" translate="yes" xml:space="preserve">
          <source>Or insert multiple javascript source in the header (or for that matter include anything, thought this is not recommended)</source>
          <target state="translated">또는 헤더에 여러 개의 자바 스크립트 소스를 삽입하십시오 (또는 그 문제에 대해서는 이것이 권장되지 않는다고 생각하십시오)</target>
        </trans-unit>
        <trans-unit id="1f2f783b03d3690462c1ad2137de324e8f81f559" translate="yes" xml:space="preserve">
          <source>Or install it RPM Style:</source>
          <target state="translated">또는 RPM 스타일을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="4e1bab7ea88f309a093f0d39d4f730b201961c56" translate="yes" xml:space="preserve">
          <source>Or instead of storing this in the language class's lexicon, you can (and, in some cases, really should) represent the same bit of knowledge as code in a method in the language class. (That leaves a tidy distinction between the lexicon as the things we know how to</source>
          <target state="translated">또는 이것을 언어 클래스의 어휘집에 저장하는 대신 언어 클래스의 메소드에서 코드와 동일한 지식을 나타낼 수 있습니다. (그것이 우리가 알고있는 것들로 어휘집을 깔끔하게 구분합니다.</target>
        </trans-unit>
        <trans-unit id="7045f93919469e6381656c230b7db826c2eef7c3" translate="yes" xml:space="preserve">
          <source>Or it can localize a typeglob and use the filehandle directly:</source>
          <target state="translated">또는 typeglob를 현지화하고 파일 핸들을 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce435dd3f2375a45ae18754aa5933bf2c436dc74" translate="yes" xml:space="preserve">
          <source>Or just use &lt;code&gt;if&lt;/code&gt; .</source>
          <target state="translated">또는 &lt;code&gt;if&lt;/code&gt; 만 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8ce654a17903f6b7766d95ea4cb45fa26490a28" translate="yes" xml:space="preserve">
          <source>Or just use &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136d46bac172392fa4cdf46c2009daa41e71888d" translate="yes" xml:space="preserve">
          <source>Or like this:</source>
          <target state="translated">또는 이렇게 :</target>
        </trans-unit>
        <trans-unit id="48f08d1241f74e59beb562174576b8f1d306023b" translate="yes" xml:space="preserve">
          <source>Or maybe we could use regular expressions:</source>
          <target state="translated">또는 정규 표현식을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3bba577160bb629ef905e44edb323af58458622" translate="yes" xml:space="preserve">
          <source>Or maybe you don't want to &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; at all! Maybe you could use a handler like this:</source>
          <target state="translated">아니면 전혀 &lt;code&gt;&lt;a href=&quot;../functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 싶지 않을 수도 있습니다 ! 아마도 다음과 같은 핸들러를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12341f8e2c18df522b6ee917ffc2cadd40117f85" translate="yes" xml:space="preserve">
          <source>Or maybe you don't want to &lt;code&gt;die&lt;/code&gt; at all! Maybe you could use a handler like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb07ce954d095bd48c2be1f0fcad35b67c72a58b" translate="yes" xml:space="preserve">
          <source>Or more succinctly:</source>
          <target state="translated">또는 간결하게 :</target>
        </trans-unit>
        <trans-unit id="daea64cee75759eefcb8d884a9ad1d6ffab3b7eb" translate="yes" xml:space="preserve">
          <source>Or the modified Julian Day:</source>
          <target state="translated">또는 수정 된 줄리안 데이 :</target>
        </trans-unit>
        <trans-unit id="37cd5be2ebf8ceaba65ad66ef7810a2d95ad6a73" translate="yes" xml:space="preserve">
          <source>Or to make an swrite() subroutine, which is to write() what sprintf() is to printf(), do this:</source>
          <target state="translated">또는 swrite () 서브 루틴을 만들려면, sprintf ()가 printf () 인 것을 write ()하는 것입니다 :</target>
        </trans-unit>
        <trans-unit id="b578c02852dfedb0541b5bd3610b753c127ee1fb" translate="yes" xml:space="preserve">
          <source>Or to plan a variable number of tests:</source>
          <target state="translated">또는 다양한 테스트 수를 계획하려면 :</target>
        </trans-unit>
        <trans-unit id="ca203ac79f2e314cb633a063bfd0088dac063148" translate="yes" xml:space="preserve">
          <source>Or to populate with your current system locale call: Time::Piece-&amp;gt;use_locale();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534e1e283610aa3e2f191a2196b648a7456ca580" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; to try decoding it:</source>
          <target state="translated">또는 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 을 사용 하여 디코딩을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="40b0959d1dcb3616319f39235a46274be386fb94" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;unpack&lt;/code&gt; to try decoding it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d6fd7de2724ba9f6a39374a9f05288463f8ef9" translate="yes" xml:space="preserve">
          <source>Or use specific un-Unicode properties, like &lt;code&gt;\p{ahex}&lt;/code&gt; and &lt;code&gt;\p{POSIX_Digit&lt;/code&gt; }. Properties still work normally no matter what charset modifiers (&lt;code&gt;/d /u /l /a /aa&lt;/code&gt; ) should be effect.</source>
          <target state="translated">또는 &lt;code&gt;\p{ahex}&lt;/code&gt; 및 &lt;code&gt;\p{POSIX_Digit&lt;/code&gt; } 와 같은 특정 비 유니 코드 속성을 사용하십시오 . 어떤 문자셋 수정 자 ( &lt;code&gt;/d /u /l /a /aa&lt;/code&gt; )가 적용 되더라도 속성은 여전히 ​​정상적으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="014decf52931451a691c2a3cad0303f892b53a91" translate="yes" xml:space="preserve">
          <source>Or use specific un-Unicode properties, like &lt;code&gt;\p{ahex}&lt;/code&gt; and &lt;code&gt;\p{POSIX_Digit&lt;/code&gt;}. Properties still work normally no matter what charset modifiers (&lt;code&gt;/d /u /l /a /aa&lt;/code&gt;) should be effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b19af399384d842b95e3307cb95667c465b46ef" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f74954c01257761163dbbea5a6d7a83fddeb01" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt;. Formatting files can be easily done by making a shell alias, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d147ca7029faa376379ab60dd5e184279f392c55" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit::Vector&lt;/a&gt;:</source>
          <target state="translated">또는 CPAN 모듈 &lt;a href=&quot;http://search.cpan.org/perldoc/Bit::Vector&quot;&gt;Bit :: Vector를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e3bc5aa2b1c65a2f0536a8ad61f1cf720e70bd7" translate="yes" xml:space="preserve">
          <source>Or use the CPAN module &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt;. Formatting files can be easily done by making a shell alias, like so:</source>
          <target state="translated">또는 CPAN 모듈 &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text :: Autoformat을&lt;/a&gt; 사용하십시오 . 다음과 같이 쉘 별명을 작성하여 파일 형식화를 쉽게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21cd44b0a63b2724e709817a957ed758ac294220" translate="yes" xml:space="preserve">
          <source>Or we can use the addfile method for more efficient reading of the file:</source>
          <target state="translated">또는 파일을보다 효율적으로 읽을 수 있도록 addfile 메소드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7eb22b9341f8bed904b75d947077206dd520c369" translate="yes" xml:space="preserve">
          <source>Or we will publicly ridicule you. Seriously.</source>
          <target state="translated">아니면 우리는 공개적으로 당신을 비웃을 것입니다. 진심으로.</target>
        </trans-unit>
        <trans-unit id="2c4d7e281aa840be77762aa28882884e3b12c3e2" translate="yes" xml:space="preserve">
          <source>Or with a fixed amount of leading whitespace, with remaining indentation correctly preserved:</source>
          <target state="translated">또는 고정 된 양의 선행 공백이 있고 남은 들여 쓰기가 올바르게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9f8c04b29e5bdf5cb37189daec86558285ed03bf" translate="yes" xml:space="preserve">
          <source>Or with rationals:</source>
          <target state="translated">또는 합리적 인 경우 :</target>
        </trans-unit>
        <trans-unit id="ac4bf8a39abe6183f58cc853b82a958a3b19f773" translate="yes" xml:space="preserve">
          <source>Or write a small C program using the editor of champions:</source>
          <target state="translated">또는 챔피언 편집기를 사용하여 작은 C 프로그램을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="071de2b484157eae02726aef816948b89ceb81e6" translate="yes" xml:space="preserve">
          <source>Or write it yourself, iterating through the indices and checking the array element at each index until you find one that satisfies the condition:</source>
          <target state="translated">또는 색인을 반복하고 조건을 만족하는 항목을 찾을 때까지 각 색인에서 배열 요소를 확인하여 직접 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="fd30f1e33b918715dd71d5fd528fc3bfe2e3a2f3" translate="yes" xml:space="preserve">
          <source>Or write the &quot;bar&quot; method so you don't need to pass it the output from calling quux.</source>
          <target state="translated">또는 &quot;bar&quot;메소드를 작성하여 quux 호출에서 출력을 전달할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1257832c1f8df8853297c11758dc7f82a58965f3" translate="yes" xml:space="preserve">
          <source>Or you can call these methods, which Pod::Simple::PullParser has defined to work just like Pod::Simple's same-named methods:</source>
          <target state="translated">또는 Pod :: Simple :: PullParser가 Pod :: Simple의 동일한 이름의 메소드와 같이 작동하도록 정의한 다음 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43deb0ef03dcaf9d7f9a23cfd26b6f349abc278d" translate="yes" xml:space="preserve">
          <source>Or you can give the name of a specific module:</source>
          <target state="translated">또는 특정 모듈의 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e6b2e6cc7ca54d22bdc0536f7463894041738bd" translate="yes" xml:space="preserve">
          <source>Or you can just use the &lt;a href=&quot;Text::Tabs&quot;&gt;Text::Tabs&lt;/a&gt; module (part of the standard Perl distribution).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f4d760018e2beff2abc7deca32778f6b33edab" translate="yes" xml:space="preserve">
          <source>Or you can just use the &lt;a href=&quot;text/tabs&quot;&gt;Text::Tabs&lt;/a&gt; module (part of the standard Perl distribution).</source>
          <target state="translated">또는 &lt;a href=&quot;text/tabs&quot;&gt;Text :: Tabs&lt;/a&gt; 모듈 (표준 Perl 배포의 일부)을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f560caefa4961932943871223d7a55e15210337" translate="yes" xml:space="preserve">
          <source>Or you can link to a web page:</source>
          <target state="translated">또는 웹 페이지에 링크 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35426ac710dfda840e59a05cb7cce1999af24289" translate="yes" xml:space="preserve">
          <source>Or you can read the entire file contents into a scalar like this:</source>
          <target state="translated">또는 다음과 같이 전체 파일 내용을 스칼라로 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ca35881b01bed9e83e28982a2d8d72c5c6104a0" translate="yes" xml:space="preserve">
          <source>Or you can try casting to a &quot;wide enough&quot; type:</source>
          <target state="translated">또는 &quot;충분히 넓은&quot;유형으로 캐스트를 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="043cc73307c25fd12afc139edc01af1987c07753" translate="yes" xml:space="preserve">
          <source>Or you can use</source>
          <target state="translated">아니면 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6eacf94ec3c91a6fb8f957244c216f33f4c57d92" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt;, though it is less convenient in the general case:</source>
          <target state="translated">또는 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr()&lt;/a&gt;&lt;/code&gt; 사용할 수 있지만 일반적인 경우에는 덜 편리합니다.</target>
        </trans-unit>
        <trans-unit id="931b91df8b44901925eb12d70d322446a86049fc" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;add_suspects&lt;/code&gt; method. The difference is that &lt;code&gt;set_suspects&lt;/code&gt; flushes the current suspects list while &lt;code&gt;add_suspects&lt;/code&gt; adds.</source>
          <target state="translated">또는 &lt;code&gt;add_suspects&lt;/code&gt; 메소드를 사용할 수 있습니다 . 차이점은 &lt;code&gt;add_suspects&lt;/code&gt; 가 add_suspects가 추가 하는 동안 현재 의심 목록을 플러시 한다는 &lt;code&gt;set_suspects&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="963f110b2073d89a9f332e0623b73c8c198b5b1b" translate="yes" xml:space="preserve">
          <source>Or you can use &lt;code&gt;chr()&lt;/code&gt;, though it is less convenient in the general case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c181924b77f6ca0bc842537bd343bbd0734c08" translate="yes" xml:space="preserve">
          <source>Or you can use the facilities in &lt;a href=&quot;threads::shared&quot;&gt;threads::shared&lt;/a&gt; to pass &lt;code&gt;$foo&lt;/code&gt;; or if the environment hasn't changed, in the child, do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7776f59b589892025dcece73547d18088e8da3ee" translate="yes" xml:space="preserve">
          <source>Or you could check out the &lt;a href=&quot;String::Scanf&quot;&gt;String::Scanf&lt;/a&gt; module on the CPAN instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39a91a0d1d979c65ad41157a37488c0834225c4" translate="yes" xml:space="preserve">
          <source>Or you could check out the &lt;a href=&quot;http://search.cpan.org/perldoc/String::Scanf&quot;&gt;String::Scanf&lt;/a&gt; module on the CPAN instead.</source>
          <target state="translated">또는 대신 CPAN 에서 &lt;a href=&quot;http://search.cpan.org/perldoc/String::Scanf&quot;&gt;String :: Scanf&lt;/a&gt; 모듈을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5093d94168468d0b2a02ecd19e89cf6d81de9b6e" translate="yes" xml:space="preserve">
          <source>Or you could use this module, like this:</source>
          <target state="translated">또는 다음과 같이이 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d54e1a4de96da66b4f1be3ddd384e9dc12182b2a" translate="yes" xml:space="preserve">
          <source>Or you may want to override it with something that traps any exceptions, if that's critical to your program:</source>
          <target state="translated">또는 프로그램에 중요한 경우 예외를 포착하는 것으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bc5eff73e9b5c554f3a2ea69d7a2e4db2c90148" translate="yes" xml:space="preserve">
          <source>Or you might have had a temporary variable sitting around with the array in it.</source>
          <target state="translated">또는 배열 안에 임시 변수가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="778e7ba107050bb841c6a420e4c310f8b170e2db" translate="yes" xml:space="preserve">
          <source>Or, as a third option you can choose RAND which will make a random decision (something regular CPAN testers will enjoy).</source>
          <target state="translated">또는 세 번째 옵션으로 무작위 결정을 내리는 RAND를 선택할 수 있습니다 (일반 CPAN 테스터가 누릴 수있는 것).</target>
        </trans-unit>
        <trans-unit id="67fb52d7219a77edeaa3410be898dbaaf5eb7940" translate="yes" xml:space="preserve">
          <source>Or, going the other way:</source>
          <target state="translated">또는 다른 방법으로 가십시오.</target>
        </trans-unit>
        <trans-unit id="5688e64a8e93cb617409a9dc959b06f63b6ad773" translate="yes" xml:space="preserve">
          <source>Or, if performance is needed and you are only interested in the UTF-8 representation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cbc117e700c42b5960566f9d6e3ab9956f8e0e" translate="yes" xml:space="preserve">
          <source>Or, if you want to alter the value, you can even do things like this:</source>
          <target state="translated">또는 값을 변경하려면 다음과 같이 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbaa299505c09af1ba1a690349c0d5013974e787" translate="yes" xml:space="preserve">
          <source>Or, if you want to use SHA-256 instead of the default SHA-1, simply say:</source>
          <target state="translated">또는 기본 SHA-1 대신 SHA-256을 사용하려면 다음과 같이 말하십시오.</target>
        </trans-unit>
        <trans-unit id="43c22f6d092ff91e39fcd2c49c563a09384d2c27" translate="yes" xml:space="preserve">
          <source>Or, if you're fond of VMS command syntax:</source>
          <target state="translated">또는 VMS 명령 구문을 좋아하는 경우 :</target>
        </trans-unit>
        <trans-unit id="8f53b2f39475162ce9507ab6d3bc142ec9ebf18d" translate="yes" xml:space="preserve">
          <source>Or, if you're lazy, just:</source>
          <target state="translated">또는 게으른 경우 :</target>
        </trans-unit>
        <trans-unit id="2e075c729b27aef299f95b8f9b89c3205825fc03" translate="yes" xml:space="preserve">
          <source>Or, if you're using a recent release of Perl, you can just use the Symbol::delete_package() function instead.</source>
          <target state="translated">또는 최신 Perl 릴리스를 사용중인 경우 Symbol :: delete_package () 함수를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ef47775ad6e32b75e39e1b8250e2051eeafc265" translate="yes" xml:space="preserve">
          <source>Or, in order to retain the UTF-x code points in hexadecimal:</source>
          <target state="translated">또는 UTF-x 코드 포인트를 16 진수로 유지하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9ac1d61fe8e0e045309c1cd8c9bfbba7d77d8c46" translate="yes" xml:space="preserve">
          <source>Or, just use the fdopen(3S) feature of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">또는 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; 의 fdopen (3S) 기능을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b53a6cc054ae28639d7e3271444077bd6b45c445" translate="yes" xml:space="preserve">
          <source>Or, just use the fdopen(3S) feature of &lt;code&gt;open()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65db10b884b8811cab09d1c35d73c9549dd89e0" translate="yes" xml:space="preserve">
          <source>Or, simply:</source>
          <target state="translated">또는 간단히 :</target>
        </trans-unit>
        <trans-unit id="4509b32489cef8d9fa76782913fc02beac5d2e00" translate="yes" xml:space="preserve">
          <source>Or, you can combine this step with the next to save disk space:</source>
          <target state="translated">또는이 단계를 다음 단계와 결합하여 디스크 공간을 절약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a70a9c965ff5f01a36539ad3a4f1747814f861b5" translate="yes" xml:space="preserve">
          <source>Or, you can use a closure to bundle up the object, its method call, and arguments:</source>
          <target state="translated">또는 클로저를 사용하여 객체, 메서드 호출 및 인수를 묶을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e30f14ff059f10f588d2a56e4ed3edbafad53cb" translate="yes" xml:space="preserve">
          <source>Or, you can use the &lt;code&gt;new&lt;/code&gt; method from one of the IO::* modules to create an anonymous filehandle and store that in a scalar variable.</source>
          <target state="translated">또는 IO :: * 모듈 중 하나 에서 &lt;code&gt;new&lt;/code&gt; 메소드를 사용하여 익명 파일 핸들을 작성하고이를 스칼라 변수에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af6226005e40b70717bca3873f6972ffe8233b17" translate="yes" xml:space="preserve">
          <source>Or, you might want to only process some of the items. If you only want to deal with the keys that start with &lt;code&gt;text:&lt;/code&gt; , you can select just those using &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">또는 일부 항목 만 처리 할 수도 있습니다. &lt;code&gt;text:&lt;/code&gt; 시작하는 키만 처리 하려면 &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 을 사용하여 키만 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc117c470aeb420d84a99136af17ffd92d6737fc" translate="yes" xml:space="preserve">
          <source>Or, you might want to only process some of the items. If you only want to deal with the keys that start with &lt;code&gt;text:&lt;/code&gt;, you can select just those using &lt;code&gt;grep&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40119221cab56480c05aa14722b443b3fea26189" translate="yes" xml:space="preserve">
          <source>Or...</source>
          <target state="translated">Or...</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="1a4b52bf5b628840a966ddcef5687bee0a34b8c7" translate="yes" xml:space="preserve">
          <source>Or: If you're trying to be PAUSE-like, make sure you skip &lt;code&gt;inc&lt;/code&gt;, &lt;code&gt;xt&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; as well as anything marked as no_index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed006a3a71954db6f888573fde1410910ac75da8" translate="yes" xml:space="preserve">
          <source>Oracle on HP-UX</source>
          <target state="translated">HP-UX의 Oracle</target>
        </trans-unit>
        <trans-unit id="d62b80826f613ec1202935a4c2f641139f04ab27" translate="yes" xml:space="preserve">
          <source>Order of initialization: early load()</source>
          <target state="translated">초기화 순서 : early load ()</target>
        </trans-unit>
        <trans-unit id="7393d644018f3205b57f7e4d05fa28a3cb608a27" translate="yes" xml:space="preserve">
          <source>Ordering is important in all these examples. That's because the shell processes file descriptor redirections in strictly left to right order.</source>
          <target state="translated">순서는이 모든 예에서 중요합니다. 쉘이 파일 디스크립터 리디렉션을 왼쪽에서 오른쪽 순서로 엄격하게 처리하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="7efefc2b95543013c2e15623d64639da160307d2" translate="yes" xml:space="preserve">
          <source>Ordering matters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bfe62f909353e6c9f54752ee8666d464862f82" translate="yes" xml:space="preserve">
          <source>Ordering of two matches for &lt;code&gt;&quot;S&quot;&lt;/code&gt; is the same as for &lt;code&gt;&quot;S&quot;&lt;/code&gt;. Similar for two matches for &lt;code&gt;&quot;T&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184a2b9a0782971148728db5cbfcd9146f0d9d22" translate="yes" xml:space="preserve">
          <source>Ordering of two matches for &lt;code&gt;S&lt;/code&gt; is the same as for &lt;code&gt;S&lt;/code&gt; . Similar for two matches for &lt;code&gt;T&lt;/code&gt; .</source>
          <target state="translated">두 경기의 주문 &lt;code&gt;S&lt;/code&gt; 하는 경우와 동일 &lt;code&gt;S&lt;/code&gt; . &lt;code&gt;T&lt;/code&gt; 에 대한 두 개의 일치 항목과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="1f2e5db8ac8798852d4979873043eb23e9daf36e" translate="yes" xml:space="preserve">
          <source>Ordinarily you must assign the returned value to a variable, but there is one situation where an automatic assignment happens. If and only if the input symbol is the only thing inside the conditional of a &lt;code&gt;while&lt;/code&gt; statement (even if disguised as a &lt;code&gt;for(;;)&lt;/code&gt; loop), the value is automatically assigned to the global variable &lt;code&gt;$_&lt;/code&gt; , destroying whatever was there previously. (This may seem like an odd thing to you, but you'll use the construct in almost every Perl script you write.) The &lt;code&gt;$_&lt;/code&gt; variable is not implicitly localized. You'll have to put a &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $_;&lt;/code&gt; before the loop if you want that to happen.</source>
          <target state="translated">일반적으로 반환 된 값을 변수에 할당해야하지만 자동 할당이 발생하는 상황이 있습니다. 입력 심볼이 &lt;code&gt;while&lt;/code&gt; 문의 조건부 내부에서만 유일한 경우 &lt;code&gt;for(;;)&lt;/code&gt; 루프 로 위장한 경우에도 ), 값은 전역 변수 &lt;code&gt;$_&lt;/code&gt; 자동으로 할당되어 이전에 있던 것을 파괴합니다. (이것은 당신에게 이상한 것처럼 보일지 모르지만 작성한 거의 모든 Perl 스크립트에서 구문을 사용합니다.) &lt;code&gt;$_&lt;/code&gt; 변수는 암시 적으로 지역화되지 않았습니다. &lt;code&gt;&lt;a href=&quot;functions/local&quot;&gt;local&lt;/a&gt; $_;&lt;/code&gt; 를 넣어야합니다 . 원하는 경우 루프 전에.</target>
        </trans-unit>
        <trans-unit id="b4f68e985de2826da10050769480a1c5355a15c1" translate="yes" xml:space="preserve">
          <source>Ordinarily you must assign the returned value to a variable, but there is one situation where an automatic assignment happens. If and only if the input symbol is the only thing inside the conditional of a &lt;code&gt;while&lt;/code&gt; statement (even if disguised as a &lt;code&gt;for(;;)&lt;/code&gt; loop), the value is automatically assigned to the global variable &lt;code&gt;$_&lt;/code&gt;, destroying whatever was there previously. (This may seem like an odd thing to you, but you'll use the construct in almost every Perl script you write.) The &lt;code&gt;$_&lt;/code&gt; variable is not implicitly localized. You'll have to put a &lt;code&gt;local $_;&lt;/code&gt; before the loop if you want that to happen. Furthermore, if the input symbol or an explicit assignment of the input symbol to a scalar is used as a &lt;code&gt;while&lt;/code&gt;/&lt;code&gt;for&lt;/code&gt; condition, then the condition actually tests for definedness of the expression's value, not for its regular truth value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53258e41460718a5a3f67ea0dcecd0cea963c78d" translate="yes" xml:space="preserve">
          <source>Ordinarily, if you use B::Deparse on a subroutine which has been compiled in the presence of one or more of these pragmas, the output will include statements to turn on the appropriate directives. So if you then compile the code returned by coderef2text, it will behave the same way as the subroutine which you deparsed.</source>
          <target state="translated">일반적으로 하나 이상의 이러한 pragma가있는 상태에서 컴파일 된 서브 루틴에서 B :: Deparse를 사용하면 출력에 해당 지시문을 설정하는 명령문이 포함됩니다. 따라서 coderef2text에서 반환 한 코드를 컴파일하면 파싱 한 서브 루틴과 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9eb59a093d68b441c9e588f45e1136962cd97df2" translate="yes" xml:space="preserve">
          <source>Ordinary Paragraph</source>
          <target state="translated">일반 단락</target>
        </trans-unit>
        <trans-unit id="4961c7b54333565385e7124c25ede2166eddd344" translate="yes" xml:space="preserve">
          <source>Ordinary scalars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852794a0888b2c26ae66b7390c3dc7aa906b25ab" translate="yes" xml:space="preserve">
          <source>Ordinary scalars are added to queues as they are.</source>
          <target state="translated">정규 스칼라가 그대로 대기열에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="07719acb37acddccec25b239e54ae20e9addfe70" translate="yes" xml:space="preserve">
          <source>Oregon</source>
          <target state="translated">Oregon</target>
        </trans-unit>
        <trans-unit id="e643b2f1d6d20cd4b1a9b180a96d9d74142343a5" translate="yes" xml:space="preserve">
          <source>Organization of Perl Images</source>
          <target state="translated">펄 이미지의 구성</target>
        </trans-unit>
        <trans-unit id="b7ac1ae7a629fb1e4790255da63efabc71780dd7" translate="yes" xml:space="preserve">
          <source>Original author Charles Bailey</source>
          <target state="translated">원저 Charles Bailey</target>
        </trans-unit>
        <trans-unit id="6bb735e6ea9df22ee5b2de902784152d534e32cf" translate="yes" xml:space="preserve">
          <source>Original author lost in the mists of time. Probably the same as Makemaker.</source>
          <target state="translated">원작자는 시간의 안개 속에서 길을 잃었다. 아마도 Makemaker와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8478bfad57c6e4bf8f9631f29cfcd8913f5e1f7b" translate="yes" xml:space="preserve">
          <source>Original author: Jos Boumans &amp;lt;kane@cpan.org&amp;gt;. Current maintainer: Chris Williams &amp;lt;bingos@cpan.org&amp;gt;.</source>
          <target state="translated">원저자 : Jos Boumans &amp;lt;kane@cpan.org&amp;gt;. 현재 관리자 : Chris Williams &amp;lt;bingos@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f73a279f87a9af54e2fb407d4bba20c5c5f64620" translate="yes" xml:space="preserve">
          <source>Original code Copyright (c) 2001-2011 Ken Williams. Additional code Copyright (c) 2010-2011 Matt Trout and David Golden. All rights reserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82456b1a006fa0cfc6f13442efd03f45359b0924" translate="yes" xml:space="preserve">
          <source>Original code by Mark Biggar, overloaded interface by Ilya Zakharevich. Completely rewritten by Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; in late 2000, 2001 - 2006 and still at it in 2007.</source>
          <target state="translated">Mark Biggar의 원본 코드, Ilya Zakharevich의 오버로드 된 인터페이스 Tels &lt;a href=&quot;http://bloodgate.com&quot;&gt;http://bloodgate.com&lt;/a&gt; 은 2000 년 후반, 2001 년부터 2006 년까지 완전히 다시 작성 했으며 2007 년에도 다시 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="4907c478063f242cdad148d2cf2e2a3834c957e0" translate="yes" xml:space="preserve">
          <source>Original code by chromatic, maintained by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;에 의해 유지되는 색도 별 원본 코드</target>
        </trans-unit>
        <trans-unit id="def2f2840ebc01c042799549d28b1ca35fd723df" translate="yes" xml:space="preserve">
          <source>Original code from Module::Build::ModuleInfo by Ken Williams &amp;lt;kwilliams@cpan.org&amp;gt;, Randy W. Sims &amp;lt;RandyS@ThePierianSpring.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa8fbf538dffef8e3de83026f7b50c6ec7e3e15" translate="yes" xml:space="preserve">
          <source>Original idea (using constants) by Zenin, reimplemented using subs by Russ Allbery &amp;lt;rra@cpan.org&amp;gt;, and then combined with the original idea by Russ with input from Zenin. 256-color support is based on work by Kurt Starsinic. Russ Allbery now maintains this module.</source>
          <target state="translated">Zenin의 원래 아이디어 (상수 사용), Russ Allbery &amp;lt;rra@cpan.org&amp;gt;의 서브를 사용하여 다시 구현 한 다음 Russ의 원래 아이디어와 Zenin의 입력을 결합했습니다. 256 색 지원은 Kurt Starsinic의 작품을 기반으로합니다. Russ Allbery는 이제이 모듈을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="531407d264d0d11235657451697ac677d9049ca2" translate="yes" xml:space="preserve">
          <source>Original math code by Mark Biggar, rewritten by Tels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt; in late 2000.</source>
          <target state="translated">Mark Biggar의 원래 수학 코드, 2000 년 후반 Tels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt; 에 의해 다시 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="de9fcab0737543137eaab2a0e06f6bd2ca79a9cc" translate="yes" xml:space="preserve">
          <source>Original math code by Mark Biggar, rewritten by Tels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt; in late 2000. Separated from BigInt and shaped API with the help of John Peacock.</source>
          <target state="translated">Mark Biggar의 원래 수학 코드, 2000 년 후반 Tels &lt;a href=&quot;http://bloodgate.com/&quot;&gt;http://bloodgate.com/&lt;/a&gt; 에 의해 다시 작성되었습니다 . John Peacock의 도움으로 BigInt와 분리되고 API가 형성되었습니다.</target>
        </trans-unit>
        <trans-unit id="016eb101d0bd431b0d9ab4229772d8f00ba5eae2" translate="yes" xml:space="preserve">
          <source>Original module by Lionel Cons (CERN).</source>
          <target state="translated">Lionel Cons (CERN)의 오리지널 모듈.</target>
        </trans-unit>
        <trans-unit id="ca220858f72bac0e96f130a0a0049dc62c81a474" translate="yes" xml:space="preserve">
          <source>Original release (in HTML format only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4af40b5a66315f7a63983b66bbac6bfc5ede9ef" translate="yes" xml:space="preserve">
          <source>Original version by Nicholas Clark</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ec70668a9cf8a9b6348458c85a3f762057ac0f" translate="yes" xml:space="preserve">
          <source>Original version by Tom Christiansen, &amp;lt;tchrist@perl.com&amp;gt;.</source>
          <target state="translated">Tom Christiansen의 원본 버전, &amp;lt;tchrist@perl.com&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="93bd0bc0b9a9e635b79e9c5f125cb705f4a31e8d" translate="yes" xml:space="preserve">
          <source>Originally &lt;code&gt;Class::Template&lt;/code&gt; by Dean Roehrich.</source>
          <target state="translated">원래 &lt;code&gt;Class::Template&lt;/code&gt; Dean Roehrich의 템플릿 .</target>
        </trans-unit>
        <trans-unit id="98ac195b142c467725515fdf5766071e9fc6f61f" translate="yes" xml:space="preserve">
          <source>Originally began life in May 1999 as an XS interface to the system mkstemp() function. In March 2000, the OpenBSD mkstemp() code was translated to Perl for total control of the code's security checking, to ensure the presence of the function regardless of operating system and to help with portability. The module was shipped as a standard part of perl from v5.6.1.</source>
          <target state="translated">원래 1999 년 5 월에 시스템 mkstemp () 함수에 대한 XS 인터페이스로 시작되었습니다. 2000 년 3 월, OpenBSD mkstemp () 코드는 운영 체제와 상관없이 함수의 존재를 보장하고 이식성을 돕기 위해 코드의 보안 검사를 완전히 제어하기 위해 Perl로 변환되었습니다. 이 모듈은 v5.6.1부터 perl의 표준 부분으로 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="05d3b834a8e1ec7b7d1784cd966acd56262bc822" translate="yes" xml:space="preserve">
          <source>Originally by Larry Wall. Turned into the &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; module by Ken Williams.</source>
          <target state="translated">원래 Larry Wall이 작성했습니다. Ken Williams 가 &lt;code&gt;ExtUtils::ParseXS&lt;/code&gt; 모듈로 전환했습니다.</target>
        </trans-unit>
        <trans-unit id="78ba94984c09fe40c7fb0012a48157ae37638a1c" translate="yes" xml:space="preserve">
          <source>Originally by the perl5-porters.</source>
          <target state="translated">원래 perl5 포터에 의해.</target>
        </trans-unit>
        <trans-unit id="0a58abf22ae0f33a5d3fa45db34e7ceb2370f30b" translate="yes" xml:space="preserve">
          <source>Originally designed and implemented by Malcolm Beattie, mbeattie@sable.ox.ac.uk as part of Safe version 1.</source>
          <target state="translated">원래 Malcolm Beattie (안전 버전 1의 일부로 mbeattie@sable.ox.ac.uk)가 설계하고 구현했습니다.</target>
        </trans-unit>
        <trans-unit id="c8441bf717fcfb993e717e28d6000796e14219bc" translate="yes" xml:space="preserve">
          <source>Originally designed and implemented by Malcolm Beattie.</source>
          <target state="translated">Malcolm Beattie가 처음 설계하고 구현했습니다.</target>
        </trans-unit>
        <trans-unit id="b5b9ddd002b9e83e3e5ffe5e5b5e1758fac1d1ee" translate="yes" xml:space="preserve">
          <source>Originally from the old Unix editor command for &amp;ldquo;Globally search for a Regular Expression and Print it&amp;rdquo;, now used in the general sense of any kind of search, especially text searches. Perl has a built-in &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; function that searches a list for elements matching any given criterion, whereas the &lt;b&gt;grep&lt;/b&gt;(1) program searches for lines matching a &lt;b&gt;regular expression&lt;/b&gt; in one or more files.</source>
          <target state="translated">원래는 &quot;정규 표현식을 전 세계적으로 검색하여 인쇄&quot;라는 구 Unix 편집기 명령에서 시작되었으므로 이제는 모든 종류의 검색, 특히 텍스트 검색의 일반적인 의미로 사용됩니다. Perl에는 주어진 기준과 일치하는 요소의 목록을 검색하는 &lt;code&gt;&lt;a href=&quot;functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 기능이 내장되어있는 반면 &lt;b&gt;grep&lt;/b&gt; (1) 프로그램 은 하나 이상의 파일에서 &lt;b&gt;정규식&lt;/b&gt; 과 일치하는 행을 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="12dbc562a37d421dfae9551b8d02cf5dc6ccb36d" translate="yes" xml:space="preserve">
          <source>Originally from the old Unix editor command for &amp;ldquo;Globally search for a Regular Expression and Print it&amp;rdquo;, now used in the general sense of any kind of search, especially text searches. Perl has a built-in &lt;code&gt;grep&lt;/code&gt; function that searches a list for elements matching any given criterion, whereas the &lt;b&gt;grep&lt;/b&gt;(1) program searches for lines matching a &lt;b&gt;regular expression&lt;/b&gt; in one or more files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179faca61deeed3ab0f554d9e5a2deeffd88d631" translate="yes" xml:space="preserve">
          <source>Originally part of &lt;a href=&quot;perlreguts&quot;&gt;perlreguts&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;perlreguts&quot;&gt;perlreguts의&lt;/a&gt; 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="f99926744d51a0882b56c8605cf23549f21bb7f7" translate="yes" xml:space="preserve">
          <source>Originally ripped off from &lt;a href=&quot;../../../test/harness&quot;&gt;Test::Harness&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;../../../test/harness&quot;&gt;Test :: Harness&lt;/a&gt; 에서 분리되었습니다 .</target>
        </trans-unit>
        <trans-unit id="71cbfb5529d2f3e7043bc6450156ba2700321efe" translate="yes" xml:space="preserve">
          <source>Originally ripped off from &lt;a href=&quot;../../test/harness&quot;&gt;Test::Harness&lt;/a&gt;.</source>
          <target state="translated">원래 &lt;a href=&quot;../../test/harness&quot;&gt;Test :: Harness&lt;/a&gt; 에서 분리되었습니다 .</target>
        </trans-unit>
        <trans-unit id="922de722803d1e621ac8ae415ac5017312fda14a" translate="yes" xml:space="preserve">
          <source>Originally ripped off from &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c974ced833416c8108c7f2998e72c039642d918d" translate="yes" xml:space="preserve">
          <source>Originally the pragma was designed for the loftier goal of helping incorporate Unicode into Perl, but the approach that used it was found to be defective, and the one remaining legitimate use is for debugging when you need to non-destructively examine characters' individual bytes. Just insert this pragma temporarily, and remove it after the debugging is finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10558d1a36f98366d4aafd194d52755ed064b37d" translate="yes" xml:space="preserve">
          <source>Originally written by Dean Roehrich &amp;lt;</source>
          <target state="translated">Dean Roehrich가 처음 작성 함 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="a52151e86e1ce8778189f415aab9a4b46ee85519" translate="yes" xml:space="preserve">
          <source>Originally written by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;, using the framework created by Russ Allbery &amp;lt;rra@cpan.org&amp;gt;. Subsequently updated by Russ Allbery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fdd20b1b0722f4c9f525e21df0d8f46d7d85b2" translate="yes" xml:space="preserve">
          <source>Originally written by Yves Orton, expanded by &amp;AElig;var Arnfj&amp;ouml;r&amp;eth; Bjarmason.</source>
          <target state="translated">Yves Orton이 처음 작성했으며 &amp;AElig;var Arnfj&amp;ouml;r&amp;eth; Bjarmason에 의해 확장되었습니다.</target>
        </trans-unit>
        <trans-unit id="34ed3165c12523cf9daa32ee0e9c345fe72fdd09" translate="yes" xml:space="preserve">
          <source>OsFHandleOpen</source>
          <target state="translated">OsFHandleOpen</target>
        </trans-unit>
        <trans-unit id="98a73e54de22faa4cd5c29e5a6133983dc56a71c" translate="yes" xml:space="preserve">
          <source>OsFHandleOpenFd</source>
          <target state="translated">OsFHandleOpenFd</target>
        </trans-unit>
        <trans-unit id="8f00a7de399080aa1b3b93fea4556bcfa8905c93" translate="yes" xml:space="preserve">
          <source>Oslo Concensus: &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/oslo-consensus.md&quot;&gt;https://github.com/Perl-Toolchain-Gang/toolchain-site/blob/master/oslo-consensus.md&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0958a863745f7bb7b877718e9ffc0407e157bdf" translate="yes" xml:space="preserve">
          <source>Ossanna, Joseph F., and Brian W. Kernighan. &quot;Troff User's Manual,&quot; Computing Science Technical Report No. 54, AT&amp;amp;T Bell Laboratories. This is the best documentation of standard &lt;b&gt;nroff&lt;/b&gt; and &lt;b&gt;troff&lt;/b&gt;. At the time of this writing, it's available at &lt;a href=&quot;http://www.cs.bell-labs.com/cm/cs/cstr.html&quot;&gt;http://www.cs.bell-labs.com/cm/cs/cstr.html&lt;/a&gt;.</source>
          <target state="translated">Ossanna, Joseph F. 및 Brian W. Kernighan. &quot;Troff 사용자 매뉴얼&quot;컴퓨팅 과학 기술 보고서 ​​번호 54, AT &amp;amp; T Bell Laboratories. 이것은 표준 &lt;b&gt;nroff&lt;/b&gt; 및 &lt;b&gt;troff에&lt;/b&gt; 대한 최상의 문서입니다 . 이 문서를 작성할 당시에는 &lt;a href=&quot;http://www.cs.bell-labs.com/cm/cs/cstr.html&quot;&gt;http://www.cs.bell-labs.com/cm/cs/cstr.html&lt;/a&gt; 에서 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc336d4b24ca0210e8b321f6b87d35cdda57c43c" translate="yes" xml:space="preserve">
          <source>Ossanna, Joseph F., and Brian W. Kernighan. &quot;Troff User's Manual,&quot; Computing Science Technical Report No. 54, AT&amp;amp;T Bell Laboratories. This is the best documentation of standard &lt;b&gt;nroff&lt;/b&gt; and &lt;b&gt;troff&lt;/b&gt;. At the time of this writing, it's available at &lt;a href=&quot;http://www.troff.org/54.pdf&quot;&gt;http://www.troff.org/54.pdf&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4209bd1da7b6357d7fd219e08de4663ac8c8de52" translate="yes" xml:space="preserve">
          <source>Other C compilers (yes, there &lt;b&gt;are&lt;/b&gt; other C compilers than gcc) often have their &quot;strict ANSI&quot; or &quot;strict ANSI with some portability extensions&quot; modes on, like for example the Sun Workshop has its &lt;code&gt;-Xa&lt;/code&gt; mode on (though implicitly), or the DEC (these days, HP...) has its &lt;code&gt;-std1&lt;/code&gt; mode on.</source>
          <target state="translated">다른 C 컴파일러 (예, 거기에 &lt;b&gt;있는&lt;/b&gt; GCC 이외의 다른 C 컴파일러는) 종종 예를 들어, 일 워크샵이있다처럼,에 모드 &quot;일부 휴대 확장과 엄격한 ANSI&quot;그들의 &quot;엄격한 ANSI&quot;또는이 &lt;code&gt;-Xa&lt;/code&gt; (암시하지만)에 모드를 또는 DEC (현재 HP ...)의 &lt;code&gt;-std1&lt;/code&gt; 모드가 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="551852c7028ddd04d28686d5a46f202fe2ad7cb7" translate="yes" xml:space="preserve">
          <source>Other Functions</source>
          <target state="translated">다른 기능들</target>
        </trans-unit>
        <trans-unit id="0bdf87a4ace9eb276a876bd8e9250301437be6c5" translate="yes" xml:space="preserve">
          <source>Other Handy Functions</source>
          <target state="translated">기타 편리한 기능</target>
        </trans-unit>
        <trans-unit id="0ae890b35ce85bf30d57cf160315165f538a27b8" translate="yes" xml:space="preserve">
          <source>Other JRRT books fair game for quotes would thus include</source>
          <target state="translated">인용을위한 다른 JRRT 책 공정한 게임은 이렇게 포함 할 것입니다</target>
        </trans-unit>
        <trans-unit id="dfc61fffa8906502d8a54b080f23a45b3b6a145a" translate="yes" xml:space="preserve">
          <source>Other Methods</source>
          <target state="translated">다른 방법들</target>
        </trans-unit>
        <trans-unit id="9cddf0d7c8be6f47e6c98b19d3cc5f6eafc229b5" translate="yes" xml:space="preserve">
          <source>Other Modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ea487e53f5c91e02896699ea06d75230ff0372" translate="yes" xml:space="preserve">
          <source>Other Notable Sites</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9165ac20a0a94eccf10c1024b71472d0032177d7" translate="yes" xml:space="preserve">
          <source>Other OO Systems</source>
          <target state="translated">다른 OO 시스템</target>
        </trans-unit>
        <trans-unit id="92b14232c00517718a7c45a7ecde335eb02684ba" translate="yes" xml:space="preserve">
          <source>Other OSes</source>
          <target state="translated">다른 OS</target>
        </trans-unit>
        <trans-unit id="9cb6f2fb01dfa81e12bc1e11f0e7b676e54669fd" translate="yes" xml:space="preserve">
          <source>Other Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4443e4e50ba760b8445cff513b37784cdd2e52" translate="yes" xml:space="preserve">
          <source>Other Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebafbcc27b9633bf022834dac0afdd7fe5320b31" translate="yes" xml:space="preserve">
          <source>Other References</source>
          <target state="translated">다른 참고 문헌</target>
        </trans-unit>
        <trans-unit id="b1cfcc24ae8085beb0c3f94ec65a05927107176a" translate="yes" xml:space="preserve">
          <source>Other SDKs or compilers like Visual.NET, command-line-only Visual.NET, Borland, GnuPoc, or sdk2unix have not been tried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1430ad78734f8ef31e36e90d4f36de9f13a735" translate="yes" xml:space="preserve">
          <source>Other Testing Methods</source>
          <target state="translated">다른 테스트 방법</target>
        </trans-unit>
        <trans-unit id="8a37f838b7323d5f1b30a918edfaa9edbace652b" translate="yes" xml:space="preserve">
          <source>Other aspects of the subroutine will be left in their default state. If anything else needs to be done to the subroutine for it to function correctly, it is the caller's responsibility to do that after this function has constructed it. However, beware of the subroutine potentially being destroyed before this function returns, as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e56c564684ea4c937565ef815405ac4aa82ff1" translate="yes" xml:space="preserve">
          <source>Other available flags are:</source>
          <target state="translated">사용 가능한 다른 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7470c59c71ddc3eec37bea7e58f1b51d00417920" translate="yes" xml:space="preserve">
          <source>Other backend libraries include Math::BigInt::Calc, Math::BigInt::FastCalc, Math::BigInt::GMP, and Math::BigInt::Pari.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a6815e54ae300be1f551c6019a20062ec0f880" translate="yes" xml:space="preserve">
          <source>Other categories</source>
          <target state="translated">다른 카테고리</target>
        </trans-unit>
        <trans-unit id="fa31529000a27db1a7fada94ddb4d6caa2048ed7" translate="yes" xml:space="preserve">
          <source>Other characters that can't appear in Perl identifiers are also supported as aliases with Getopt::Long of at least version 2.39.</source>
          <target state="translated">Perl 식별자에 표시되지 않는 다른 문자는 버전 2.39 이상의 Getopt :: Long에서 별칭으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8d2904fc4090c5c43c8653f3c072f6e3c8296ff1" translate="yes" xml:space="preserve">
          <source>Other characters that can't appear in Perl identifiers are also supported in aliases with Getopt::Long of at version 2.39. Note that the characters &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;:&lt;/code&gt; can only appear as the first (or only) character of an alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988b72d132dbf3076501a7170736916fd9874521" translate="yes" xml:space="preserve">
          <source>Other complications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ea52f1a7ae74f014909d25b0bddf410e9fbbb3" translate="yes" xml:space="preserve">
          <source>Other considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd70d6bbf0c061003d5d747de3a0bfc4476f68fc" translate="yes" xml:space="preserve">
          <source>Other contributors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0c676ad5a08266ef14cec4f91d0f2a09e01766" translate="yes" xml:space="preserve">
          <source>Other conversion methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be322bc8ea0db1e8be06d4ec43ad756a099bfb6" translate="yes" xml:space="preserve">
          <source>Other data worth storing in a lexicon might be things like filenames for language-targetted resources:</source>
          <target state="translated">어휘집에 저장할 가치가있는 다른 데이터는 언어 대상 리소스의 파일 이름과 같은 것일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36fefa00642398c0b54d66e1ab2941d7ce0381ab" translate="yes" xml:space="preserve">
          <source>Other environment variables that may influence tests</source>
          <target state="translated">테스트에 영향을 줄 수있는 기타 환경 변수</target>
        </trans-unit>
        <trans-unit id="293561c7c0c8a1abe2aec3c1c2e6ea87fd9c52f7" translate="yes" xml:space="preserve">
          <source>Other examples include</source>
          <target state="translated">다른 예로는</target>
        </trans-unit>
        <trans-unit id="050e92356c2ad433980e335b3cd1c37de82b2130" translate="yes" xml:space="preserve">
          <source>Other examples include (using standard shell syntax to show environment variable settings):</source>
          <target state="translated">다른 예에는 다음이 포함됩니다 (표준 쉘 구문을 사용하여 환경 변수 설정 표시).</target>
        </trans-unit>
        <trans-unit id="0890da9a3fe9000b110723faeb22296dde791fee" translate="yes" xml:space="preserve">
          <source>Other examples include:</source>
          <target state="translated">다른 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b4e9be46864e281795d5dbc03712be976c67f55" translate="yes" xml:space="preserve">
          <source>Other information in the Unicode data base</source>
          <target state="translated">유니 코드 데이터베이스의 기타 정보</target>
        </trans-unit>
        <trans-unit id="be5464268eb0652d20727c597b5d478658d7e34b" translate="yes" xml:space="preserve">
          <source>Other interesting targets in the generated Makefile are</source>
          <target state="translated">생성 된 Makefile의 다른 흥미로운 대상은</target>
        </trans-unit>
        <trans-unit id="4995af619bf2d3ae8de0384100aa88eb416db8e0" translate="yes" xml:space="preserve">
          <source>Other interesting, non-Perl books</source>
          <target state="translated">펄이 아닌 다른 흥미로운 책들</target>
        </trans-unit>
        <trans-unit id="a0a7f74c7a5b001c1898061e6c8bbb41c2b8f981" translate="yes" xml:space="preserve">
          <source>Other larger &lt;code&gt;regnode&lt;/code&gt; -like structures are defined in</source>
          <target state="translated">다른 더 큰 &lt;code&gt;regnode&lt;/code&gt; 유사 구조는</target>
        </trans-unit>
        <trans-unit id="b57626cf1658a5b64d186cc5fd930b916dcfc307" translate="yes" xml:space="preserve">
          <source>Other larger &lt;code&gt;regnode&lt;/code&gt;-like structures are defined in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a8c70b7563cbb778a36bb5bcccfde96170f9d6" translate="yes" xml:space="preserve">
          <source>Other man pages to check out, like man(1), man(7), makewhatis(8), or catman(8). Normally a simple list of man pages separated by commas, or a paragraph giving the name of a reference work. Man page references, if they use the standard &lt;code&gt;name(section)&lt;/code&gt; form, don't have to be enclosed in L&amp;lt;&amp;gt; (although it's recommended), but other things in this section probably should be when appropriate.</source>
          <target state="translated">man (1), man (7), makewhatis (8) 또는 catman (8)과 같은 다른 맨 페이지를 확인하십시오. 일반적으로 쉼표로 구분 된 간단한 매뉴얼 페이지 또는 참조 작업의 이름을 나타내는 단락입니다. 매뉴얼 페이지 참조가 표준 &lt;code&gt;name(section)&lt;/code&gt; 형식 을 사용하는 경우 L &amp;lt;&amp;gt;로 묶을 필요는 없지만 (권장되지만)이 섹션의 다른 사항은 필요할 때 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10e4be89c97c3d2dc6a38d440ab26a720e224f64" translate="yes" xml:space="preserve">
          <source>Other mathematical methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09377d559ba63e5222c49d690aba88e139d8b9c3" translate="yes" xml:space="preserve">
          <source>Other mathematical operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0be4d7126d12c4393a8f81b69236cf7f3adb37" translate="yes" xml:space="preserve">
          <source>Other methods defined in Encode::Encodings</source>
          <target state="translated">Encode :: Encodings에 정의 된 다른 메소드</target>
        </trans-unit>
        <trans-unit id="8b02b29f176b90b35adf0979292f2a1a362170a1" translate="yes" xml:space="preserve">
          <source>Other module design guidelines can be found in &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt;.</source>
          <target state="translated">다른 모듈 설계 지침은 &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee6b0460067623519cc565a472bd480c100039cf" translate="yes" xml:space="preserve">
          <source>Other modules</source>
          <target state="translated">다른 모듈</target>
        </trans-unit>
        <trans-unit id="48ca1b65ec767babcee7f3aa6bcd98e916e9b05a" translate="yes" xml:space="preserve">
          <source>Other modules based on Test::Builder can be used to help with the testing. In fact you can even use functions from your module to test other functions from the same module (while this is possible it is probably not a good idea, if your module has bugs, then using it to test itself may give the wrong answers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fb06177666493089c90aafcdd8d1fb9c546e07" translate="yes" xml:space="preserve">
          <source>Other modules provide more specific access: &lt;a href=&quot;Win32::ODBC&quot;&gt;Win32::ODBC&lt;/a&gt;, &lt;a href=&quot;alzabo&quot;&gt;Alzabo&lt;/a&gt;, &lt;code&gt;iodbc&lt;/code&gt;, and others found on CPAN Search: &lt;a href=&quot;https://metacpan.org/&quot;&gt;https://metacpan.org/&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b38a9ced9a9e6defe1372beb74c2a71438500f" translate="yes" xml:space="preserve">
          <source>Other modules provide more specific access: &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::ODBC&quot;&gt;Win32::ODBC&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Alzabo&quot;&gt;Alzabo&lt;/a&gt;, &lt;code&gt;iodbc&lt;/code&gt; , and others found on CPAN Search: &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</source>
          <target state="translated">다른 모듈은보다 구체적인 접근을 제공 : &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::ODBC&quot;&gt;는 Win32 :: ODBC&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Alzabo&quot;&gt;Alzabo는&lt;/a&gt; , &lt;code&gt;iodbc&lt;/code&gt; : 다른 사람들은 CPAN 검색에서 발견 &lt;a href=&quot;http://search.cpan.org/&quot;&gt;http://search.cpan.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea8f1c1f877c26989c3315ed2cebf633f6959a43" translate="yes" xml:space="preserve">
          <source>Other modules using &lt;code&gt;STDIN&lt;/code&gt; and &lt;code&gt;STDOUT&lt;/code&gt; get the encoded stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d291165f3e48fa04de2df661e5577d3237e36a86" translate="yes" xml:space="preserve">
          <source>Other options</source>
          <target state="translated">다른 옵션</target>
        </trans-unit>
        <trans-unit id="014edefbdeb134528c300bbe292e9dea3d3171e2" translate="yes" xml:space="preserve">
          <source>Other people picked up on this and started to write clever or obfuscated programs to produce the same output, spinning things quickly out of control while still providing hours of amusement for their creators and readers.</source>
          <target state="translated">다른 사람들이 이것을 선택하여 동일한 결과를 만들어 내기 위해 영리하거나 난독 화 된 프로그램을 작성하기 시작했으며, 제작자와 독자들에게 몇 시간의 즐거움을 제공하면서도 통제 할 수없는 것들을 빠르게 돌 렸습니다.</target>
        </trans-unit>
        <trans-unit id="b2c45e1355cf0a47d9a693c24c0422d1a1693c9c" translate="yes" xml:space="preserve">
          <source>Other perls</source>
          <target state="translated">다른 perls</target>
        </trans-unit>
        <trans-unit id="2d78880c37d6825d2ae3118f278c3357f9e4c7a8" translate="yes" xml:space="preserve">
          <source>Other places to ask questions are on the &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org%2f&quot;&gt;PerlMonks site&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstackoverflow.com%2fquestions%2ftagged%2fperl&quot;&gt;stackoverflow&lt;/a&gt;.</source>
          <target state="translated">다른 질문은 &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.perlmonks.org%2f&quot;&gt;PerlMonks 사이트&lt;/a&gt; 또는 &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fstackoverflow.com%2fquestions%2ftagged%2fperl&quot;&gt;stackoverflow에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="35b3ead6bc3028c8b87ade98500a0b9de5bfe2c1" translate="yes" xml:space="preserve">
          <source>Other places to ask questions are on the &lt;a href=&quot;http://www.perlmonks.org/&quot;&gt;PerlMonks site&lt;/a&gt; or &lt;a href=&quot;http://stackoverflow.com/questions/tagged/perl&quot;&gt;stackoverflow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bfe5471f8f9572c8f23295ec358290aa5c0ef5" translate="yes" xml:space="preserve">
          <source>Other prebuilt perl binaries</source>
          <target state="translated">사전 빌드 된 다른 펄 바이너리</target>
        </trans-unit>
        <trans-unit id="7f1a8448038fa5bcf79a21cfd101906676d442be" translate="yes" xml:space="preserve">
          <source>Other regexp features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e084077b7075b7e9a73a17897df829f14ab4b896" translate="yes" xml:space="preserve">
          <source>Other return codes are defined. See below and in the Berkeley DB documentation for details. The Berkeley DB documentation should be used as the definitive source.</source>
          <target state="translated">다른 리턴 코드가 정의되어 있습니다. 자세한 내용은 아래 및 Berkeley DB 설명서를 참조하십시오. Berkeley DB 문서는 최종 소스로 사용되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b333dbc669f480c73b5b58df634b402ae239a596" translate="yes" xml:space="preserve">
          <source>Other than &lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt;, this module upgrades to Math::BigRat, meaning that instead of 2.5 you will get 2+1/2 as output.</source>
          <target state="translated">&lt;a href=&quot;bignum&quot;&gt;bignum&lt;/a&gt; 이외 의이 모듈은 Math :: BigRat으로 업그레이드됩니다. 즉, 2.5 대신 2 + 1 / 2가 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="eb36362d59c4594cc709a7ea4be2c2f79bf0b417" translate="yes" xml:space="preserve">
          <source>Other than those two situations, I don't imagine that it's useful to override the &lt;code&gt;maketext&lt;/code&gt; method. (If you run into a situation where it is useful, I'd be interested in hearing about it.)</source>
          <target state="translated">이 두 가지 상황을 제외하고는 &lt;code&gt;maketext&lt;/code&gt; 메서드 를 재정의하는 것이 유용하다고 생각하지 않습니다 . (유용한 상황에 처하면 그것에 대해 듣고 싶습니다.)</target>
        </trans-unit>
        <trans-unit id="3a13873f30aa4125cb2e70864ac4099e17744319" translate="yes" xml:space="preserve">
          <source>Other unblessed references are generally not allowed and will cause an exception to be thrown, except for references to the integers &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, which get turned into &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; atoms in JSON. You can also use &lt;code&gt;JSON::PP::false&lt;/code&gt; and &lt;code&gt;JSON::PP::true&lt;/code&gt; to improve readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd5880c7e1311882e4a701ed7f5da40800de7a3" translate="yes" xml:space="preserve">
          <source>Other useful flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5b57060690dc31c3058289c6a303662394ee99" translate="yes" xml:space="preserve">
          <source>Other useful functions are &lt;code&gt;Perl_dump_sub&lt;/code&gt; , which turns a &lt;code&gt;GV&lt;/code&gt; into an op tree, &lt;code&gt;Perl_dump_packsubs&lt;/code&gt; which calls &lt;code&gt;Perl_dump_sub&lt;/code&gt; on all the subroutines in a package like so: (Thankfully, these are all xsubs, so there is no op tree)</source>
          <target state="translated">다른 유용한 기능은 &lt;code&gt;Perl_dump_sub&lt;/code&gt; 권수, &lt;code&gt;GV&lt;/code&gt; 를 연산 트리에, &lt;code&gt;Perl_dump_packsubs&lt;/code&gt; 호출 &lt;code&gt;Perl_dump_sub&lt;/code&gt; 을 패키지에 모든 서브 루틴에 같은 : (감사하게도,이 모든 XSUB의, 그래서 연산 나무 없음)</target>
        </trans-unit>
        <trans-unit id="f820586607039f830c7f2b730f72d45c0074c796" translate="yes" xml:space="preserve">
          <source>Other useful functions are &lt;code&gt;Perl_dump_sub&lt;/code&gt;, which turns a &lt;code&gt;GV&lt;/code&gt; into an op tree, &lt;code&gt;Perl_dump_packsubs&lt;/code&gt; which calls &lt;code&gt;Perl_dump_sub&lt;/code&gt; on all the subroutines in a package like so: (Thankfully, these are all xsubs, so there is no op tree)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aec5a2099bba9d9c155d5ff98c8d088a4d87e95" translate="yes" xml:space="preserve">
          <source>Other useful sources include the Unicode Glossary &lt;a href=&quot;http://unicode.org/glossary/&quot;&gt;http://unicode.org/glossary/&lt;/a&gt;, the Free On-Line Dictionary of Computing &lt;a href=&quot;http://foldoc.org/&quot;&gt;http://foldoc.org/&lt;/a&gt;, the Jargon File &lt;a href=&quot;http://catb.org/~esr/jargon/&quot;&gt;http://catb.org/~esr/jargon/&lt;/a&gt;, and Wikipedia &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;http://www.wikipedia.org/&lt;/a&gt;.</source>
          <target state="translated">다른 유용한 소스로는 유니 코드 용어집 &lt;a href=&quot;http://unicode.org/glossary/&quot;&gt;http://unicode.org/glossary/&lt;/a&gt; , 무료 온라인 사전 사전 &lt;a href=&quot;http://foldoc.org/&quot;&gt;http://foldoc.org/&lt;/a&gt; , 전문 용어 파일 &lt;a href=&quot;http://catb.org/~esr/jargon/&quot;&gt;http://catb.org/~esr/jargon이 있습니다. /&lt;/a&gt; , 그리고 위키 백과 &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;http://www.wikipedia.org/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55c0500d3b5f8d60d79cf605a490c073a4b14076" translate="yes" xml:space="preserve">
          <source>Other voting mechanisms may also be used instead (e.g. sending mail to perl5-porters and at least two other committers responding to the list giving their assent), as long as the same number of votes is gathered in a transparent manner. Specifically, proposals of which changes to cherry-pick must be visible to everyone on perl5-porters so that the views of everyone interested may be heard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dd1af1a4d04ac7e7f3b21f718a7e15571fdc1c" translate="yes" xml:space="preserve">
          <source>Other voting mechanisms may be used instead, as long as the same number of votes is gathered in a transparent manner. Specifically, proposals of which changes to cherry-pick must be visible to everyone on perl5-porters so that the views of everyone interested may be heard.</source>
          <target state="translated">동일한 수의 투표가 투명한 방식으로 수집되는 한, 다른 투표 메커니즘이 대신 사용될 수 있습니다. 특히, 체리 픽에 대한 변경 제안은 perl5 포터에있는 모든 사람이 볼 수 있어야 관심있는 모든 사람의 의견을들을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="315b2283e70ed5c9b3a32d956573fa52bcf2327a" translate="yes" xml:space="preserve">
          <source>Other_Alphabetic</source>
          <target state="translated">Other_Alphabetic</target>
        </trans-unit>
        <trans-unit id="3576c30ed2a7456b454a6df0f1d356a6a5b81854" translate="yes" xml:space="preserve">
          <source>Other_Default_Ignorable_Code_Point</source>
          <target state="translated">Other_Default_Ignorable_Code_Point</target>
        </trans-unit>
        <trans-unit id="b8a4e9e3315108565913f1214d70e6ab06305fea" translate="yes" xml:space="preserve">
          <source>Other_Grapheme_Extend</source>
          <target state="translated">Other_Grapheme_Extend</target>
        </trans-unit>
        <trans-unit id="1eafede4d641ad77c5e7696525a5726a3b1e25e2" translate="yes" xml:space="preserve">
          <source>Other_ID_Continue</source>
          <target state="translated">Other_ID_Continue</target>
        </trans-unit>
        <trans-unit id="20de61891c461dc1d0740d06823ad7c655241aae" translate="yes" xml:space="preserve">
          <source>Other_ID_Start</source>
          <target state="translated">Other_ID_Start</target>
        </trans-unit>
        <trans-unit id="01c4b64406b7699bf365d87632f6ecac32fc9e72" translate="yes" xml:space="preserve">
          <source>Other_Lowercase</source>
          <target state="translated">Other_Lowercase</target>
        </trans-unit>
        <trans-unit id="85b8947a3c801b69f490df8abb132c7f38d3815e" translate="yes" xml:space="preserve">
          <source>Other_Math</source>
          <target state="translated">Other_Math</target>
        </trans-unit>
        <trans-unit id="8f9fafd248962959d08eb0fc0b6409cc5836d1a0" translate="yes" xml:space="preserve">
          <source>Other_Uppercase</source>
          <target state="translated">Other_Uppercase</target>
        </trans-unit>
        <trans-unit id="4bfbee0ac92ce150f0ba704eb6a3c6c42daf813e" translate="yes" xml:space="preserve">
          <source>Otherwise (given -n) if there's an opt_n, we'll call it $object-&amp;gt;opt_n($truth) (Truth defaults to 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac0cc8652af1d4f7f345245edd00769715fa15d" translate="yes" xml:space="preserve">
          <source>Otherwise (i.e., if not a CGI), this tries various OS-specific ways to get the language-tags for the current locale/language, and then pretends that those were the value(s) passed to &lt;code&gt;get_handle&lt;/code&gt; .</source>
          <target state="translated">그렇지 않으면 (즉, CGI가 아닌 경우), 현재 로케일 / 언어의 언어 태그를 가져 오는 다양한 OS 특정 방법을 시도한 다음 &lt;code&gt;get_handle&lt;/code&gt; 로 전달 된 값인 것처럼 가장합니다 .</target>
        </trans-unit>
        <trans-unit id="3a28e3abbf32dfa769b7eb1d1908cdeb733b9570" translate="yes" xml:space="preserve">
          <source>Otherwise (i.e., if not a CGI), this tries various OS-specific ways to get the language-tags for the current locale/language, and then pretends that those were the value(s) passed to &lt;code&gt;get_handle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4193defd905194b15d3c5085357f0fe9383a2c2" translate="yes" xml:space="preserve">
          <source>Otherwise if &lt;code&gt;Configure&lt;/code&gt; found out how to do &quot;fast&quot; IO using the system's stdio (not common on modern architectures), then the default layers are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e5ffbd89769bd3258cb9b3ff5d583b3da49162" translate="yes" xml:space="preserve">
          <source>Otherwise if &lt;code&gt;Configure&lt;/code&gt; found out how to do &quot;fast&quot; IO using the system's stdio, then the default layers are:</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;Configure&lt;/code&gt; 가 시스템의 stdio를 사용하여 &quot;빠른&quot;IO를 수행하는 방법을 찾은 경우 기본 계층은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7e1be4e61a83d07cd0d9ce46ed206ea82b9d2b71" translate="yes" xml:space="preserve">
          <source>Otherwise if you really do want to build Perl, you need to get a binary version of &lt;code&gt;gcc&lt;/code&gt; for your system first. Use a search engine to find out how to do this for your operating system.</source>
          <target state="translated">그렇지 않으면 실제로 Perl을 빌드하려면 먼저 시스템에 대한 바이너리 버전의 &lt;code&gt;gcc&lt;/code&gt; 를 가져와야 합니다. 검색 엔진을 사용하여 운영 체제에서이를 수행하는 방법을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="16e91ca326f6d29d45932c9e83458e6f42f6b2d6" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;code&gt;PerlIO&lt;/code&gt; package is a place holder for additional PerlIO related functions.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;PerlIO&lt;/code&gt; 패키지는 추가 PerlIO 관련 기능을위한 자리 표시 자입니다.</target>
        </trans-unit>
        <trans-unit id="64d28c2a38bdb42602aa40deca558a7edd1c1d73" translate="yes" xml:space="preserve">
          <source>Otherwise the default layers are</source>
          <target state="translated">그렇지 않으면 기본 레이어는</target>
        </trans-unit>
        <trans-unit id="8ee20b17c349e20c2d2bb84cf8ffa7aac44d8cc6" translate="yes" xml:space="preserve">
          <source>Otherwise this bracket group is invalid. For example, in the group &quot;[!@#,whatever]&quot;, the first item &lt;code&gt;&quot;!@#&quot;&lt;/code&gt; is neither the empty-string, &quot;_</source>
          <target state="translated">그렇지 않으면이 괄호 그룹이 유효하지 않습니다. 예를 들어 &quot;[! @ #, whatever]&quot;그룹에서 첫 번째 항목 &lt;code&gt;&quot;!@#&quot;&lt;/code&gt; 은 빈 문자열 &quot;_&quot;도 아닙니다.</target>
        </trans-unit>
        <trans-unit id="bf453e7fed3c21047f791d3883ec9b5693cb3a1a" translate="yes" xml:space="preserve">
          <source>Otherwise we try calling $object-&amp;gt;handle_unknown_option('n') (and we increment the error count by the return value of it)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa4578f342729b5a29e5d40bab856fc0c1cb526" translate="yes" xml:space="preserve">
          <source>Otherwise we will try and temporarily redirect STDERR and STDOUT, do a &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; call with your command and then re-open STDERR and STDOUT. This is the method of last resort and will still allow you to execute your commands cleanly. However, no buffers will be available.</source>
          <target state="translated">그렇지 않으면 STDERR 및 STDOUT을 일시적으로 리디렉션하고 명령 으로 &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 호출을 수행 한 다음 STDERR 및 STDOUT을 다시 엽니 다. 이것은 최후의 수단이며 여전히 명령을 깨끗하게 실행할 수 있습니다. 그러나 사용 가능한 버퍼가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c363f4152d36d391a2429c0164275025f6d3b69a" translate="yes" xml:space="preserve">
          <source>Otherwise we will try and temporarily redirect STDERR and STDOUT, do a &lt;code&gt;system()&lt;/code&gt; call with your command and then re-open STDERR and STDOUT. This is the method of last resort and will still allow you to execute your commands cleanly. However, no buffers will be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188f49f273bed3f7a9e10e1965748d66feb13e86" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; demands that a library file be included if it hasn't already been included. The file is included via the do-FILE mechanism, which is essentially just a variety of &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with the caveat that lexical variables in the invoking script will be invisible to the included code. If it were implemented in pure Perl, it would have semantics similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ff6315794dc14ec03885c6a49fa46491bf4688" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;*is_utf8p&lt;/code&gt; is set to 0, and the return value is a pointer to a newly created string containing a downgraded copy of &lt;code&gt;s&lt;/code&gt;, and whose length is returned in &lt;code&gt;*lenp&lt;/code&gt;, updated. The new string is &lt;code&gt;NUL&lt;/code&gt;-terminated. The caller is responsible for arranging for the memory used by this string to get freed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a8d6e2eac21a8bc64fe947c356d86d63089cab" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;/a&lt;/code&gt; behaves like the &lt;code&gt;/u&lt;/code&gt; modifier, in that case-insensitive matching uses Unicode rules; for example, &quot;k&quot; will match the Unicode &lt;code&gt;\N{KELVIN SIGN}&lt;/code&gt; under &lt;code&gt;/i&lt;/code&gt; matching, and code points in the Latin1 range, above ASCII will have Unicode rules when it comes to case-insensitive matching.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;/a&lt;/code&gt; 는 &lt;code&gt;/u&lt;/code&gt; 수정 자 처럼 동작 합니다. 대소 문자를 구분하지 않는 일치는 유니 코드 규칙을 사용합니다. 예를 들어, &quot;k&quot;는 &lt;code&gt;/i&lt;/code&gt; 일치 아래 의 유니 코드 &lt;code&gt;\N{KELVIN SIGN}&lt;/code&gt; 과 일치하며 Latin1 범위의 코드 포인트는 ASCII와 일치하지 않으며 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="283ab41299e1a089a797efad0855b8234af41dba" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; demands that a library file be included if it hasn't already been included. The file is included via the do-FILE mechanism, which is essentially just a variety of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; with the caveat that lexical variables in the invoking script will be invisible to the included code. If it were implemented in pure Perl, it would have semantics similar to the following:</source>
          <target state="translated">그렇지 않으면 라이브러리 파일이 포함되어 있지 않은 경우 포함 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 요구합니다. 이 파일은 do-FILE 메커니즘을 통해 포함되는데, 이는 기본적으로 호출 스크립트의 어휘 변수가 포함 된 코드에 표시되지 않는다는 경고와 함께 다양한 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 입니다. 순수한 Perl로 구현 된 경우 다음과 유사한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3d8c7636a7e3958c42214af86cef6bf8fdccad1c" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; sets the default modifier to &lt;code&gt;/l&lt;/code&gt; ; and &lt;code&gt;&lt;a href=&quot;feature&quot;&gt;use feature 'unicode_strings&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (or higher) set the default to &lt;code&gt;/u&lt;/code&gt; when not in the same scope as either &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt;. (&lt;code&gt;&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;use locale ':not_characters'&lt;/a&gt;&lt;/code&gt; also sets the default to &lt;code&gt;/u&lt;/code&gt; , overriding any plain &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; .) Unlike the mechanisms mentioned above, these affect operations besides regular expressions pattern matching, and so give more consistent results with other operators, including using &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , etc. in substitution replacements.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; 하여 기본 수정자를 &lt;code&gt;/l&lt;/code&gt; 로 설정합니다 . 및 &lt;code&gt;&lt;a href=&quot;feature&quot;&gt;use feature 'unicode_strings&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (또는 그 이상)을 기본으로 설정 &lt;code&gt;/u&lt;/code&gt; 않을 때 하나와 동일한 범위에서 &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; 나 &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt; . ( &lt;code&gt;&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;use locale ':not_characters'&lt;/a&gt;&lt;/code&gt; 를 사용하면 기본값이 &lt;code&gt;/u&lt;/code&gt; 로 설정되어 일반 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 재정의합니다 .) 위에서 언급 한 메커니즘과 달리, 이는 정규 표현식 패턴 일치 외에 조작에 영향을 미치므로 &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; 대체 대체품 등.</target>
        </trans-unit>
        <trans-unit id="931167804e0e4a4559f9438cf7fbdd7bb54023c7" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; sets the default modifier to &lt;code&gt;/l&lt;/code&gt;; and &lt;code&gt;&lt;a href=&quot;feature&quot;&gt;use feature 'unicode_strings&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; (or higher) set the default to &lt;code&gt;/u&lt;/code&gt; when not in the same scope as either &lt;code&gt;&lt;a href=&quot;perllocale&quot;&gt;use locale&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bytes&quot;&gt;use bytes&lt;/a&gt;&lt;/code&gt;. (&lt;code&gt;&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;use locale ':not_characters'&lt;/a&gt;&lt;/code&gt; also sets the default to &lt;code&gt;/u&lt;/code&gt;, overriding any plain &lt;code&gt;use locale&lt;/code&gt;.) Unlike the mechanisms mentioned above, these affect operations besides regular expressions pattern matching, and so give more consistent results with other operators, including using &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\l&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4164414c2bb6199a4fd794c5abe6619c58bbd334" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; demands that a library file be included if it hasn't already been included. The file is included via the do-FILE mechanism, which is essentially just a variety of &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; with the caveat that lexical variables in the invoking script will be invisible to the included code. If it were implemented in pure Perl, it would have semantics similar to the following:</source>
          <target state="translated">그렇지 않으면 라이브러리 파일이 포함되어 있지 않은 경우 포함 &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 요구합니다. 이 파일은 do-FILE 메커니즘을 통해 포함되는데, 이는 기본적으로 호출 스크립트의 어휘 변수가 포함 된 코드에 표시되지 않는다는 경고와 함께 다양한 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 입니다. 순수한 Perl로 구현 된 경우 다음과 유사한 의미를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="b7cd0e99a1d89c3f5e339c3635e7cb0b51fb95e1" translate="yes" xml:space="preserve">
          <source>Otherwise, If EXPR has the UTF8 flag set:</source>
          <target state="translated">그렇지 않으면 EXPR에 UTF8 플래그가 설정된 경우 :</target>
        </trans-unit>
        <trans-unit id="17eeffaf5cce6164da792d14c62e778122ced660" translate="yes" xml:space="preserve">
          <source>Otherwise, Perl quotes non-ASCII characters using an adaptation from Unicode (see &lt;a href=&quot;http://www.unicode.org/reports/tr31/&quot;&gt;http://www.unicode.org/reports/tr31/&lt;/a&gt;). The only code points that are quoted are those that have any of the Unicode properties: Pattern_Syntax, Pattern_White_Space, White_Space, Default_Ignorable_Code_Point, or General_Category=Control.</source>
          <target state="translated">그렇지 않으면 Perl은 유니 코드의 적응을 사용하여 비 ASCII 문자를 인용합니다 ( &lt;a href=&quot;http://www.unicode.org/reports/tr31/&quot;&gt;http://www.unicode.org/reports/tr31/ 참조&lt;/a&gt; ). 인용되는 유일한 코드 포인트는 Pattern_Syntax, Pattern_White_Space, White_Space, Default_Ignorable_Code_Point 또는 General_Category = Control과 같은 유니 코드 속성이있는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7879f2d907198470de2362f7adbb4e858fde9e58" translate="yes" xml:space="preserve">
          <source>Otherwise, Perl quotes non-ASCII characters using an adaptation from Unicode (see &lt;a href=&quot;https://www.unicode.org/reports/tr31/&quot;&gt;https://www.unicode.org/reports/tr31/&lt;/a&gt;). The only code points that are quoted are those that have any of the Unicode properties: Pattern_Syntax, Pattern_White_Space, White_Space, Default_Ignorable_Code_Point, or General_Category=Control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab12be84f131403f93358906794f8fe5421e551" translate="yes" xml:space="preserve">
          <source>Otherwise, a character range may be specified with a hyphen, so &lt;code&gt;tr/A-J/0-9/&lt;/code&gt; does the same replacement as &lt;code&gt;tr/ACEGIBDFHJ/0246813579/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b263d3e8956ad637fdb45e6619d7bb400854c44" translate="yes" xml:space="preserve">
          <source>Otherwise, a reference to a hash giving the mappings (or a reference to a hash of such hashes, explained below) is returned with the following keys and their meanings:</source>
          <target state="translated">그렇지 않으면, 맵핑을 제공하는 해시에 대한 참조 (또는 아래에 설명 된 해시의 해시에 대한 참조)가 다음 키와 의미로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="45a4e2616d95a4fcd8dd1ea0be709f830e6a27e9" translate="yes" xml:space="preserve">
          <source>Otherwise, any string that includes a &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; or &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;}&lt;/code&gt; will automatically have Unicode rules (see &lt;a href=&quot;perlunicode#Byte-and-Character-Semantics&quot;&gt;&quot;Byte and Character Semantics&quot; in perlunicode&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a064c97bd76ea2baffc6a1f976852c73f8662d5" translate="yes" xml:space="preserve">
          <source>Otherwise, any string that includes a &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; or &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;}&lt;/code&gt; will automatically have Unicode rules (see &lt;a href=&quot;perlunicode#Byte-and-Character-Semantics&quot;&gt;Byte and Character Semantics in perlunicode&lt;/a&gt;).</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;\N{&lt;i&gt;charname&lt;/i&gt;}&lt;/code&gt; 또는 &lt;code&gt;\N{U+&lt;i&gt;code point&lt;/i&gt;}&lt;/code&gt; 를 포함하는 문자열 은 자동으로 유니 코드 규칙 &lt;a href=&quot;perlunicode#Byte-and-Character-Semantics&quot;&gt;을 갖습니다 (perlunicode의 바이트 및 문자 의미&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="5d003c1d5c8b3dbf299902770f34abe7c1bae5fc" translate="yes" xml:space="preserve">
          <source>Otherwise, besides slowing you down, you're going to break code when the thing in the scalar is actually neither a string nor a number, but a reference:</source>
          <target state="translated">그렇지 않으면, 속도를 늦추는 것 외에도 스칼라의 것이 실제로 문자열이나 숫자가 아니라 참조 일 때 코드를 중단합니다.</target>
        </trans-unit>
        <trans-unit id="3c9e5051cf80855af13f05b6891812714206afb2" translate="yes" xml:space="preserve">
          <source>Otherwise, each group is taken to be a comma-separated group of items, and each item is interpreted as follows:</source>
          <target state="translated">그렇지 않으면 각 그룹은 쉼표로 구분 된 항목 그룹으로 간주되며 각 항목은 다음과 같이 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="44c4557e33865fb576853827b17e4610d1545dd5" translate="yes" xml:space="preserve">
          <source>Otherwise, each item is interpreted as a string literal.</source>
          <target state="translated">그렇지 않으면 각 항목은 문자열 리터럴로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="8160c1d9bfe0c258f726fcde8a38eac529a9399b" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; is in effect:</source>
          <target state="translated">그렇지 않은 경우 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; 적용됩니다 :</target>
        </trans-unit>
        <trans-unit id="330cfb4214259a5977f17a0c8047846f1febf41e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; for &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect:</source>
          <target state="translated">그렇지 않은 경우에 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 에 대한 &lt;code&gt;LC_CTYPE&lt;/code&gt; 이 적용됩니다 :</target>
        </trans-unit>
        <trans-unit id="d4602f3f28475c48ce34eb51e7d2638873250360" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;use feature 'unicode_strings'&lt;/code&gt; or &lt;code&gt;use locale ':not_characters'&lt;/code&gt; is in effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670f21d823d9710e8e7613a70b81c22cc150cf45" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;use locale&lt;/code&gt; for &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790132dff7791f0de9ca7fa702e257d000b8a890" translate="yes" xml:space="preserve">
          <source>Otherwise, if fallback is TRUE or undefined for the first operand then see if the &lt;a href=&quot;#Magic-Autogeneration&quot;&gt;rules for autogeneration&lt;/a&gt; allows another of its operators to be used instead.</source>
          <target state="translated">그렇지 않으면, 대체가 참이거나 첫 번째 피연산자에 대해 정의되지 않은 경우 &lt;a href=&quot;#Magic-Autogeneration&quot;&gt;자동 생성 규칙이&lt;/a&gt; 다른 연산자를 대신 사용할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ed36ee27979b8527903ca8fac2a605c006c6947" translate="yes" xml:space="preserve">
          <source>Otherwise, if neither &lt;code&gt;CARP_TRACE&lt;/code&gt; nor &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; is available, stringify the value ignoring any overloading.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;CARP_TRACE&lt;/code&gt; 나 &lt;code&gt;$Carp::RefArgFormatter&lt;/code&gt; 를 사용할 수 없으면 과부하를 무시하고 값을 문자열 화하십시오.</target>
        </trans-unit>
        <trans-unit id="6e9ac01d552a20832031d53cdc770abacc673932" translate="yes" xml:space="preserve">
          <source>Otherwise, if the variable &lt;code&gt;$IPC::Cmd::USE_IPC_OPEN3&lt;/code&gt; is set to true (See the &lt;a href=&quot;#Global-Variables&quot;&gt;&quot;Global Variables&quot;&lt;/a&gt; section), try to execute the command using &lt;a href=&quot;IPC::Open3&quot;&gt;IPC::Open3&lt;/a&gt;. Buffers will be available on all platforms, interactive commands will still execute cleanly, and also your verbosity settings will be adhered to nicely;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f787cbc7a032f69fffb6119d7035816b8ea11e2" translate="yes" xml:space="preserve">
          <source>Otherwise, if the variable &lt;code&gt;$IPC::Cmd::USE_IPC_OPEN3&lt;/code&gt; is set to true (See the &lt;a href=&quot;#Global-Variables&quot;&gt;Global Variables&lt;/a&gt; section), try to execute the command using &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt;. Buffers will be available on all platforms, interactive commands will still execute cleanly, and also your verbosity settings will be adhered to nicely;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;$IPC::Cmd::USE_IPC_OPEN3&lt;/code&gt; 변수 가 true로 설정되면 ( &lt;a href=&quot;#Global-Variables&quot;&gt;글로벌 변수&lt;/a&gt; 섹션 참조) &lt;a href=&quot;open3&quot;&gt;IPC :: Open3을&lt;/a&gt; 사용하여 명령을 실행하십시오 . 버퍼는 모든 플랫폼에서 사용할 수 있으며 대화식 명령은 여전히 ​​깨끗하게 실행되며 자세한 설정도 잘 준수합니다.</target>
        </trans-unit>
        <trans-unit id="fe09ff3823115671ffa501d26ad1a577bc040ded" translate="yes" xml:space="preserve">
          <source>Otherwise, if you have the &lt;code&gt;verbose&lt;/code&gt; argument set to true, we fall back to a simple &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; call. We cannot capture any buffers, but interactive commands will still work.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;verbose&lt;/code&gt; 인수를 true로 설정하면 간단한 &lt;code&gt;&lt;a href=&quot;../functions/system&quot;&gt;system()&lt;/a&gt;&lt;/code&gt; 호출로 돌아갑니다 . 버퍼를 캡처 할 수 없지만 대화식 명령은 계속 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e549399a32844d22acd9df22bf6f21ae7c9758db" translate="yes" xml:space="preserve">
          <source>Otherwise, if you have the &lt;code&gt;verbose&lt;/code&gt; argument set to true, we fall back to a simple &lt;code&gt;system()&lt;/code&gt; call. We cannot capture any buffers, but interactive commands will still work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643e7b58bd1c31793f061806f8ffae4f428818df" translate="yes" xml:space="preserve">
          <source>Otherwise, import the functions into a convenient package like &lt;code&gt;HUF&lt;/code&gt; or, more general, &lt;code&gt;Aux&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;HUF&lt;/code&gt; 또는보다 일반적인 &lt;code&gt;Aux&lt;/code&gt; 와 같은 편리한 패키지로 함수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="ec3718eb10f9299de84d9700b81d5d9ff67ef5c1" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns the index into the list of the range that contains the code point.; that is, find &lt;code&gt;i&lt;/code&gt; such that</source>
          <target state="translated">그렇지 않으면 코드 포인트가 포함 된 범위 목록으로 인덱스를 반환합니다.; 즉, &lt;code&gt;i&lt;/code&gt; 그런 찾을</target>
        </trans-unit>
        <trans-unit id="0d7b4536a86a677a8d4d8e936e21d06c203d8809" translate="yes" xml:space="preserve">
          <source>Otherwise, one can &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; , which has effects at compile time and run time. Since Perl 5.9.5, this pragma is lexically scoped.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'debug'&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;사용할&lt;/a&gt; 수 있으며 컴파일 시간과 런타임에 영향을 미칩니다. Perl 5.9.5부터이 pragma의 범위는 어휘 범위입니다.</target>
        </trans-unit>
        <trans-unit id="00d1195ff76f29519909bc0580164683d66b8b4f" translate="yes" xml:space="preserve">
          <source>Otherwise, one can &lt;code&gt;use re 'debug'&lt;/code&gt;, which has effects at both compile time and run time. Since Perl 5.9.5, this pragma is lexically scoped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b98fbe09f4398b923f3c8569116227b026f24a" translate="yes" xml:space="preserve">
          <source>Otherwise, perl should build fine on Linux using the mainstream compilers GCC and clang, while following the usual instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060d2d5af4a10b8f17638e7be02655b970ad0e80" translate="yes" xml:space="preserve">
          <source>Otherwise, the &quot;fail&quot; attribute's value should be a string denoting a method name, so that $lh-&amp;gt;maketext(</source>
          <target state="translated">그렇지 않으면, &quot;fail&quot;속성의 값은 메소드 이름을 나타내는 문자열이어야합니다. 그래서 $ lh-&amp;gt; maketext (</target>
        </trans-unit>
        <trans-unit id="e4d6075a624f71d57d66727413b2c14075c13d0f" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator behaves exactly as the comma operator or list argument separator, according to context.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;=&amp;gt;&lt;/code&gt; 연산자는 컨텍스트에 따라 쉼표 연산자 또는 목록 인수 구분 기호로 정확하게 동작합니다.</target>
        </trans-unit>
        <trans-unit id="cb47aa86549cdba36bf289bb197822fbc20fd362" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;code&gt;THAW&lt;/code&gt; method is invoked with the classname as first argument, the constant string &lt;code&gt;JSON&lt;/code&gt; as second argument, and all the values from the JSON array (the values originally returned by the &lt;code&gt;FREEZE&lt;/code&gt; method) as remaining arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be82a6c47fff1e3e8501496593db6d764ea711a" translate="yes" xml:space="preserve">
          <source>Otherwise, the returned script will be &lt;code&gt;SCX_Common&lt;/code&gt; iff all the code points in it are from the Inherited or Common scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153f18b9e853a33ec89bf986e0079606fc138189" translate="yes" xml:space="preserve">
          <source>Otherwise, the right side is a method name or a simple scalar variable containing either the method name or a subroutine reference, and the left side must be either an object (a blessed reference) or a class name (that is, a package name). See &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 오른쪽은 메소드 이름 또는 메소드 이름 또는 서브 루틴 참조를 포함하는 단순 스칼라 변수이고 왼쪽은 오브젝트 (축복 참조) 또는 클래스 이름 (즉, 패키지 이름)이어야합니다. . &lt;a href=&quot;perlobj&quot;&gt;perlobj를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b107de7f6b2be83b2b4f89a391ebc89f81bc2bc" translate="yes" xml:space="preserve">
          <source>Otherwise, you can install it for your own use into your home directory like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93adaa86658b0d707fd7e6f95b2dd74b9f755925" translate="yes" xml:space="preserve">
          <source>Otherwise, you can use the File::Temp module.</source>
          <target state="translated">그렇지 않으면 File :: Temp 모듈을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cbc6561d27e47c3ea5b5fa6d9459eb9629b7617" translate="yes" xml:space="preserve">
          <source>Otherwise:</source>
          <target state="translated">Otherwise:</target>
        </trans-unit>
        <trans-unit id="96b81f4b95ad77a7f2490339a2a4369277de66dd" translate="yes" xml:space="preserve">
          <source>Our best advice for verifying a person's mail address is to have them enter their address twice, just as you normally do to change a password. This usually weeds out typos. If both versions match, send mail to that address with a personal message. If you get the message back and they've followed your directions, you can be reasonably assured that it's real.</source>
          <target state="translated">사람의 메일 주소를 확인하기위한 최선의 조언은 일반적으로 암호를 변경하는 것과 마찬가지로 주소를 두 번 입력하는 것입니다. 이것은 일반적으로 오타를 제거합니다. 두 버전이 모두 일치하면 개인 메시지와 함께 해당 주소로 메일을 보내십시오. 메시지를 받고 그들이 당신의 지시를 따랐다면, 그것이 진짜라는 것을 합리적으로 확신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a36d716e41b5fdfa6778288f0df9280c6ac367a9" translate="yes" xml:space="preserve">
          <source>Our community has a long-held belief that backward-compatibility is a virtue, even when the functionality in question is a design flaw.</source>
          <target state="translated">우리 커뮤니티는 문제의 기능이 디자인 결함 일지라도 이전 버전과의 호환성이 미덕이라고 오랫동안 믿고 있습니다.</target>
        </trans-unit>
        <trans-unit id="aca2af8fba9b0e206c26228fbcf4f0a28aadfadd" translate="yes" xml:space="preserve">
          <source>Our constructor and accessors are not very smart. They don't check that a &lt;code&gt;$path&lt;/code&gt; is defined, nor do they check that a &lt;code&gt;$path&lt;/code&gt; is a valid filesystem path.</source>
          <target state="translated">우리의 생성자와 접근자는 그리 영리하지 않습니다. 그들은 확인하지 않는 &lt;code&gt;$path&lt;/code&gt; 정의 없으며이 있는지 확인 할 수 &lt;code&gt;$path&lt;/code&gt; 유효한 파일 시스템 경로입니다.</target>
        </trans-unit>
        <trans-unit id="02046a00610d7c36994a4a1cfc35b185bf538e5f" translate="yes" xml:space="preserve">
          <source>Our first extension will be very simple. When we call the routine in the extension, it will print out a well-known message and return.</source>
          <target state="translated">첫 번째 확장은 매우 간단합니다. 확장 프로그램에서 루틴을 호출하면 잘 알려진 메시지가 인쇄되어 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ea0a64102e29c4a40939ff09bce3a7c8b3baeb50" translate="yes" xml:space="preserve">
          <source>Our goals include, but are not limited to:</source>
          <target state="translated">우리의 목표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dd423773d407b1a40adc986c561aae58350fc823" translate="yes" xml:space="preserve">
          <source>Our third extension will take one argument as its input, round off that value, and set the</source>
          <target state="translated">세 번째 확장은 하나의 인수를 입력으로 사용하고 해당 값을 반올림 한 다음</target>
        </trans-unit>
        <trans-unit id="d1eca9c1df299ed6f167227271a421fa1ed8acd5" translate="yes" xml:space="preserve">
          <source>Out of Memory!</source>
          <target state="translated">메모리 부족!</target>
        </trans-unit>
        <trans-unit id="3683f8762692d27ca861ee310e7f506198e1b640" translate="yes" xml:space="preserve">
          <source>Out of memory during &quot;large&quot; request for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e5936678dda2aceed24be1015efa6293b0e0e8" translate="yes" xml:space="preserve">
          <source>Out of memory during %s extend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec14030613e44ffed29dc12f559c548e3a5660f" translate="yes" xml:space="preserve">
          <source>Out of memory during request for %s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bde7919a348082e00e61af3ed9dff6775507ae0" translate="yes" xml:space="preserve">
          <source>Out of memory during ridiculously large request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d4cc313c16b4c90126c4f559b708f2cc42a894" translate="yes" xml:space="preserve">
          <source>Out of memory for yacc stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b299729eed36f28c8b65f2973bb19112f74e22" translate="yes" xml:space="preserve">
          <source>Out of memory!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="dbd857869dc8d796444978bd605ba7b7d270b4e9" translate="yes" xml:space="preserve">
          <source>Output File Glob</source>
          <target state="translated">출력 파일 글롭</target>
        </trans-unit>
        <trans-unit id="cabfa26f9d0a36c1ea391888431d2b012edaa467" translate="yes" xml:space="preserve">
          <source>Output FileGlobs take the</source>
          <target state="translated">출력 FileGlob은</target>
        </trans-unit>
        <trans-unit id="320abeb6fc8745d8377c151e5e59cdadfc038781" translate="yes" xml:space="preserve">
          <source>Output arguments for linking the Perl library and any extensions linked with the current Perl.</source>
          <target state="translated">Perl 라이브러리 및 현재 Perl과 링크 된 확장을 링크하기위한 출력 인수.</target>
        </trans-unit>
        <trans-unit id="dff47f3a71d82ad60cb4cacc40b69b766de3ff9e" translate="yes" xml:space="preserve">
          <source>Output arguments for linking the Perl library and extensions to your application.</source>
          <target state="translated">Perl 라이브러리 및 확장을 응용 프로그램에 링크하기위한 출력 인수.</target>
        </trans-unit>
        <trans-unit id="d4513ca13498ae2966be4acb14ad297fe3972a7d" translate="yes" xml:space="preserve">
          <source>Output data values (when they appear as constants) using Data::Dumper. Without this option, B::Deparse will use some simple routines of its own for the same purpose. Currently, Data::Dumper is better for some kinds of data (such as complex structures with sharing and self-reference) while the built-in routines are better for others (such as odd floating-point values).</source>
          <target state="translated">Data :: Dumper를 사용하여 출력 데이터 값 (상수로 표시 될 때). 이 옵션이 없으면 B :: Deparse는 동일한 목적으로 몇 가지 간단한 루틴을 사용합니다. 현재 Data :: Dumper는 일부 종류의 데이터 (예 : 공유 및 자체 참조가있는 복잡한 구조)에 적합하고 내장 루틴은 다른 종류 (예 : 홀수 부동 소수점 값)에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="946f8eaf8de365c1db6707020e600be8dc0b2d32" translate="yes" xml:space="preserve">
          <source>Output from</source>
          <target state="translated">출력</target>
        </trans-unit>
        <trans-unit id="abe9a59babc13ece77693a18a297d71b41ea1113" translate="yes" xml:space="preserve">
          <source>Output is sent to STDOUT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732197af5a245075eb093be6a52f4e49643ea019" translate="yes" xml:space="preserve">
          <source>Output produced by &lt;code&gt;POSIX::strftime()&lt;/code&gt; , which builds a formatted human-readable date/time string, is affected by the current &lt;code&gt;LC_TIME&lt;/code&gt; locale. Thus, in a French locale, the output produced by the &lt;code&gt;%B&lt;/code&gt; format element (full month name) for the first month of the year would be &quot;janvier&quot;. Here's how to get a list of long month names in the current locale:</source>
          <target state="translated">형식화 된 사람이 읽을 수있는 날짜 / 시간 문자열을 빌드하는 &lt;code&gt;POSIX::strftime()&lt;/code&gt; 의해 생성 된 출력 은 현재 &lt;code&gt;LC_TIME&lt;/code&gt; 로케일의 영향을받습니다 . 따라서 프랑스어 로케일 에서 첫 번째 달의 &lt;code&gt;%B&lt;/code&gt; 형식 요소 (전체 달 이름)에서 생성 된 출력은 &quot;janvier&quot;입니다. 현재 로케일에서 긴 달 이름 목록을 얻는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4bee70b271ab09dd6a64b5fa486979ad4fbd3481" translate="yes" xml:space="preserve">
          <source>Output produced by &lt;code&gt;POSIX::strftime()&lt;/code&gt;, which builds a formatted human-readable date/time string, is affected by the current &lt;code&gt;LC_TIME&lt;/code&gt; locale. Thus, in a French locale, the output produced by the &lt;code&gt;%B&lt;/code&gt; format element (full month name) for the first month of the year would be &quot;janvier&quot;. Here's how to get a list of long month names in the current locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20389c9ad811915dc895816013a0d6320f55cc3" translate="yes" xml:space="preserve">
          <source>Output record formats are declared as follows:</source>
          <target state="translated">출력 레코드 형식은 다음과 같이 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="8be7301f815488d71ba9c93bb5af631cc0c5c280" translate="yes" xml:space="preserve">
          <source>Output test preamble</source>
          <target state="translated">출력 테스트 프리앰블</target>
        </trans-unit>
        <trans-unit id="0cb96efb75c4bbeb8be2ce6be1b81199c7dc6523" translate="yes" xml:space="preserve">
          <source>Output the string for the given capability padded as appropriate without any parameter substitution.</source>
          <target state="translated">매개 변수 대체없이 적절하게 채워진 지정된 기능에 대한 문자열을 출력하십시오.</target>
        </trans-unit>
        <trans-unit id="5d7f9c2a16be5d20709bdb9bc3eca9e4594402e9" translate="yes" xml:space="preserve">
          <source>Output the summary for a &lt;a href=&quot;TAP::Parser::Aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a057a50b92dcf0b95865eb0847c9c19f40cf41" translate="yes" xml:space="preserve">
          <source>Output the summary for a &lt;a href=&quot;parser/aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;parser/aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt; 의 요약을 출력하십시오 .</target>
        </trans-unit>
        <trans-unit id="674e1e7520d063a11e6ddc4e4cd926f65dce8e61" translate="yes" xml:space="preserve">
          <source>Output values are BigFloat objects (normalized), except for bstr() and bsstr().</source>
          <target state="translated">bstr () 및 bsstr ()을 제외하고 출력 값은 BigFloat 객체 (정규화 됨)입니다.</target>
        </trans-unit>
        <trans-unit id="5729e52e9619576e333d708f5b86cf53768b1b3b" translate="yes" xml:space="preserve">
          <source>Output values are BigInt objects (normalized), except for the methods which return a string (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;).</source>
          <target state="translated">출력 값은 문자열을 리턴하는 메소드를 제외하고 BigInt 오브젝트 (정규화 됨 )입니다 ( &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="fcbd5aaffbc088a45a5ff0e68cb0c83355ccd44e" translate="yes" xml:space="preserve">
          <source>Output values are usually Math::BigFloat objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc04fcc4619eca6ba403121d7cc8a9ccbec1964" translate="yes" xml:space="preserve">
          <source>Output values are usually Math::BigInt objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ee72c25cceb27be8a2caf11cbdcbd8ed211c74" translate="yes" xml:space="preserve">
          <source>Output will be indented and marked with a # so as not to interfere with test output. A newline will be put on the end if there isn't one already.</source>
          <target state="translated">출력은 테스트 출력을 방해하지 않도록 들여 쓰기되고 #으로 표시됩니다. 줄 바꿈이없는 경우 줄 바꿈이 끝납니다.</target>
        </trans-unit>
        <trans-unit id="1c19ab0b423651729aa903ab380edeb2bca39734" translate="yes" xml:space="preserve">
          <source>Outputs a literal string with appropriate padding for the current terminal.</source>
          <target state="translated">현재 터미널에 적절한 패딩이 포함 된 리터럴 문자열을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="6ee76fa98a639a0ac269010b7032639b0a171647" translate="yes" xml:space="preserve">
          <source>Outputs:</source>
          <target state="translated">Outputs:</target>
        </trans-unit>
        <trans-unit id="6abc1028bb2a1e420ca27730838cb222f321647c" translate="yes" xml:space="preserve">
          <source>Outside the &lt;code&gt;&quot;unicode_eval&quot;&lt;/code&gt; feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27666598a1e0a42575577d9b60e589550171ef9f" translate="yes" xml:space="preserve">
          <source>Outstanding Issues with Perl on QNX4</source>
          <target state="translated">QNX4에서 Perl의 두드러진 문제</target>
        </trans-unit>
        <trans-unit id="639d7ade090cee980c6bc05e57d3d1577af16a27" translate="yes" xml:space="preserve">
          <source>Outstanding issues with perl under QNX6</source>
          <target state="translated">QNX6에서 펄에 대한 뛰어난 문제</target>
        </trans-unit>
        <trans-unit id="bdf3ed1bb141b837355c86c7c0dd2614394d1b0b" translate="yes" xml:space="preserve">
          <source>Over this group of porters presides Larry Wall. He has the final word in what does and does not change in any of the Perl programming languages. These days, Larry spends most of his time on Perl 6, while Perl 5 is shepherded by a &quot;pumpking&quot;, a porter responsible for deciding what goes into each release and ensuring that releases happen on a regular basis.</source>
          <target state="translated">이 포터 그룹 위에 Larry Wall이 있습니다. 그는 Perl 프로그래밍 언어에서 무엇이 바뀌지 않는지에 대한 최종 단어를 가지고 있습니다. 요즘 Larry는 대부분의 시간을 Perl 6에서 보내며 Perl 5는 각 릴리스에 어떤 일이 발생하는지 결정하고 정기적으로 릴리스가 이루어 지도록하는 포터 인 &quot;펌핑 (pumpking)&quot;에 의해 보호됩니다.</target>
        </trans-unit>
        <trans-unit id="f01a3c3ab1f69d157a1311ffcf184c0aaf9bbeb7" translate="yes" xml:space="preserve">
          <source>Over this group of porters presides Larry Wall. He has the final word in what does and does not change in any of the Perl programming languages. These days, Larry spends most of his time on Raku, while Perl 5 is shepherded by a &quot;pumpking&quot;, a porter responsible for deciding what goes into each release and ensuring that releases happen on a regular basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d8136b9d7f2ef80cdd4f2a9435372b570d80e4" translate="yes" xml:space="preserve">
          <source>Overall Zip Archive Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e40e3844fb4d3113244cc032fb4a908e8fcd75" translate="yes" xml:space="preserve">
          <source>Overloadable Operations</source>
          <target state="translated">과부하 작업</target>
        </trans-unit>
        <trans-unit id="e84b5822c6a6fe546f9b6a0b29ff2b344e3aaa29" translate="yes" xml:space="preserve">
          <source>Overloaded dereference did not return a reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e744f0661d66287229c4049eeb19150a3eea75f4" translate="yes" xml:space="preserve">
          <source>Overloaded objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70212c08bcbb34f156aa81782cedc45e14a9ba1" translate="yes" xml:space="preserve">
          <source>Overloaded qr did not return a REGEXP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8156e1c1fd84040b088f9d93d136e890d2f78204" translate="yes" xml:space="preserve">
          <source>Overloaded version objects for all modern versions of Perl. This documents the internal data representation and underlying code for version.pm. See</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfcc9c008f8f36caec4141ab87b41cf81508a73" translate="yes" xml:space="preserve">
          <source>Overloading -$x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec86957a0fb6a3d4fbc42d54b629b68b40ef88b9" translate="yes" xml:space="preserve">
          <source>Overloading Constants</source>
          <target state="translated">과부하 상수</target>
        </trans-unit>
        <trans-unit id="5b6bfa02598f06ac9bdd1802bec05eb89aac965f" translate="yes" xml:space="preserve">
          <source>Overloading of an operation is inherited by derived classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b399e489ae1423cf5aaa91fe52bb0ca8621359b8" translate="yes" xml:space="preserve">
          <source>Overloading respects inheritance via the @ISA hierarchy. Inheritance interacts with overloading in two ways.</source>
          <target state="translated">오버로드는 @ISA 계층을 통한 상속을 존중합니다. 상속은 두 가지 방식으로 오버로드와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="d25853ad0b9aa2087c0afaa6cc2a5913f690f84b" translate="yes" xml:space="preserve">
          <source>Overridable by PREFIX</source>
          <target state="translated">PREFIX로 대체 가능</target>
        </trans-unit>
        <trans-unit id="d81e387c23bc24d9cbe8489666fd2a57917eb6d5" translate="yes" xml:space="preserve">
          <source>Overridden Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467a685e8ada69aefbe5924cc457f1afc183b3db" translate="yes" xml:space="preserve">
          <source>Overridden by PREFIX.</source>
          <target state="translated">PREFIX로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="8de838ce5cdf14a3fefb1762cc63935ac8b01d94" translate="yes" xml:space="preserve">
          <source>Overridden methods</source>
          <target state="translated">재정의 된 메소드</target>
        </trans-unit>
        <trans-unit id="18ab6a26cd6f669c409ca6006d7c65633ebdbc28" translate="yes" xml:space="preserve">
          <source>Override Unix. Cygwin case-tolerance depends on managed mount settings and as with MsWin32 on GetVolumeInformation() $ouFsFlags == FS_CASE_SENSITIVE, indicating the case significance when comparing file specifications. Default: 1</source>
          <target state="translated">유닉스를 덮어 씁니다. Cygwin 대 / 소문자 허용 여부는 GetVolumeInformation ()의 MsWin32와 마찬가지로 관리되는 마운트 설정에 따라 달라집니다. $ ouFsFlags == FS_CASE_SENSITIVE는 파일 사양을 비교할 때 대소 문자의 중요성을 나타냅니다. 기본값 : 1</target>
        </trans-unit>
        <trans-unit id="f077b1208a358b397eabc441227d8df2a82e1662" translate="yes" xml:space="preserve">
          <source>Override of utility methods for OS-specific work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b812a67f3c81aa251e9cf3aa48fd3d76b409d29b" translate="yes" xml:space="preserve">
          <source>Override some of the slower, portable commands with Windows specific ones.</source>
          <target state="translated">속도가 느린 휴대용 명령 중 일부를 Windows 전용 명령으로 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="d0c9857b122b80fa1b6a56bf1ebf37d184d83e68" translate="yes" xml:space="preserve">
          <source>Override the *DEFINE_VERSION macros with VMS semantics. Translate the MAKEMAKER filepath to VMS style.</source>
          <target state="translated">VMS 시맨틱으로 * DEFINE_VERSION 매크로를 대체하십시오. MAKEMAKER 파일 경로를 VMS 스타일로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="9e106e8d2f26a8506c045db84481cb6d80e276c4" translate="yes" xml:space="preserve">
          <source>Override the built-in hex() method with a version that can handle big integers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as hex() is lexically overridden in the current scope whenever the bigint pragma is active.</source>
          <target state="translated">내장 hex () 메소드를 큰 정수를 처리 할 수있는 버전으로 대체하십시오. 현재 패키지로 내 보내서이를 대체합니다. Perl v5.10.0 이상에서는 bigint pragma가 활성화 될 때마다 hex ()가 현재 범위에서 어휘 적으로 재정의되므로 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="db1255a81faff303e8d6e7d3b798d7ce08d1d0bd" translate="yes" xml:space="preserve">
          <source>Override the built-in hex() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as hex() is lexically overridden in the current scope whenever the bignum pragma is active.</source>
          <target state="translated">내장 hex () 메소드를 큰 숫자를 처리 할 수있는 버전으로 대체하십시오. 현재 패키지로 내 보내서이를 대체합니다. Perl v5.10.0 이상에서는 bignum pragma가 활성화 될 때마다 hex ()가 현재 범위에서 어휘 적으로 재정의되므로 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="912f152c86b0fefa5f757189a8d412dd86bae7f1" translate="yes" xml:space="preserve">
          <source>Override the built-in hex() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as hex() is lexically overridden in the current scope whenever the bigrat pragma is active.</source>
          <target state="translated">내장 hex () 메소드를 큰 숫자를 처리 할 수있는 버전으로 대체하십시오. 현재 패키지로 내 보내서이를 대체합니다. Perl v5.10.0 이상에서는 bigrat pragma가 활성화 될 때마다 hex ()가 현재 범위에서 어휘 적으로 재정의되므로 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="517fe3ab934c9baa1bbd4819a553d1bd788ad3b6" translate="yes" xml:space="preserve">
          <source>Override the built-in oct() method with a version that can handle big integers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as oct() is lexically overridden in the current scope whenever the bigint pragma is active.</source>
          <target state="translated">큰 정수를 처리 할 수있는 버전으로 내장 oct () 메소드를 대체하십시오. 현재 패키지로 내 보내서이를 대체합니다. Perl v5.10.0 이상에서는 bigint pragma가 활성화 될 때마다 현재 범위에서 oct ()가 사 전적으로 재정의되므로 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4bed448b71cf61598fc58c7dedb86dd2c891a406" translate="yes" xml:space="preserve">
          <source>Override the built-in oct() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as oct() is lexically overridden in the current scope whenever the bigint pragma is active.</source>
          <target state="translated">내장 된 oct () 메소드를 큰 숫자를 처리 할 수있는 버전으로 대체하십시오. 현재 패키지로 내 보내서이를 대체합니다. Perl v5.10.0 이상에서는 bigint pragma가 활성화 될 때마다 현재 범위에서 oct ()가 사 전적으로 재정의되므로 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ed5c7e59eb86a96d19a5d320701f2eeae30a9f3d" translate="yes" xml:space="preserve">
          <source>Override the built-in oct() method with a version that can handle big numbers. This overrides it by exporting it to the current package. Under Perl v5.10.0 and higher, this is not so necessary, as oct() is lexically overridden in the current scope whenever the bigrat pragma is active.</source>
          <target state="translated">내장 된 oct () 메소드를 큰 숫자를 처리 할 수있는 버전으로 대체하십시오. 현재 패키지로 내 보내서이를 대체합니다. Perl v5.10.0 이상에서는 bigrat pragma가 활성화 될 때마다 현재 범위에서 oct ()가 사 전적으로 재정의되므로 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a84161f7c8651d9dbb9584e62df4eb94978336a4" translate="yes" xml:space="preserve">
          <source>Override the default link and compile tools.</source>
          <target state="translated">기본 링크 및 컴파일 도구를 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="dbaba4039682ad6702589659d29f6691bbd07fea" translate="yes" xml:space="preserve">
          <source>Override to fixup -o flags for MSVC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0b278d3c4a2afd3b5e4b52949b9fc3f78c7857" translate="yes" xml:space="preserve">
          <source>Override to fixup -o flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3576b163731229acda47e87e9f9b059e9f4a5b" translate="yes" xml:space="preserve">
          <source>Overriden Methods</source>
          <target state="translated">오버라이드 된 메소드</target>
        </trans-unit>
        <trans-unit id="88ddbf620473fa127baa14c63b6b03e218cdb828" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Carp&lt;/code&gt; 's use of &lt;code&gt;@ISA&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Carp&lt;/code&gt; 의 &lt;code&gt;@ISA&lt;/code&gt; 사용을 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="3949b2ca1d81db123ef7219f4e50f69008152a66" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Carp&lt;/code&gt;'s use of &lt;code&gt;@ISA&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f558940f2808fb5910806545f490b364bd4fae6" translate="yes" xml:space="preserve">
          <source>Overriding *AutoLoader*'s AUTOLOAD Subroutine</source>
          <target state="translated">* AutoLoader *의 AUTOLOAD 서브 루틴 대체</target>
        </trans-unit>
        <trans-unit id="ad165e83687c2095d41c401a84a596f21c23d403" translate="yes" xml:space="preserve">
          <source>Overriding &lt;b&gt;AutoLoader&lt;/b&gt;'s AUTOLOAD Subroutine</source>
          <target state="translated">&lt;b&gt;AutoLoader&lt;/b&gt; 의 AUTOLOAD 서브 루틴 대체</target>
        </trans-unit>
        <trans-unit id="e1f1fa67c6f2de2b65178ecba184df6b7ab89795" translate="yes" xml:space="preserve">
          <source>Overriding AutoLoader's AUTOLOAD Subroutine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e4e6c170816454742428861af9c648b7770476" translate="yes" xml:space="preserve">
          <source>Overriding Built-in Functions</source>
          <target state="translated">내장 함수 재정의</target>
        </trans-unit>
        <trans-unit id="0473324f13f95874cc801aec0b7f96d36dd3f4de" translate="yes" xml:space="preserve">
          <source>Overriding MakeMaker Methods</source>
          <target state="translated">MakeMaker 메서드 재정의</target>
        </trans-unit>
        <trans-unit id="482ae15aa0b68d06eb2611dc11eca01690eb606e" translate="yes" xml:space="preserve">
          <source>Overriding a behavior already tailored by &lt;code&gt;locale&lt;/code&gt; is disallowed if such a tailoring is passed to &lt;code&gt;new()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acaee9a4f5701cbf8a1ce4705506d5d65f7e379" translate="yes" xml:space="preserve">
          <source>Overriding globals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8975db571ede7ae4ff4258fa3aa601af32455235" translate="yes" xml:space="preserve">
          <source>Overriding may be done only by importing the name from a module at compile time--ordinary predeclaration isn't good enough. However, the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; pragma lets you, in effect, predeclare subs via the import syntax, and these names may then override built-in ones:</source>
          <target state="translated">컴파일 타임에 모듈에서 이름을 가져와야 재정의를 수행 할 수 있습니다. 일반적인 사전 선언으로는 충분하지 않습니다. 그러나, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; subs&lt;/code&gt; pragma는 당신이 사실상 미리 선언 가져 오기 구문을 통해 잠수함,이 이름은 다음 내장 된 것을 오버라이드 (override) 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a21474f2bb6c2cf1c58c924ec851c58080010483" translate="yes" xml:space="preserve">
          <source>Overriding may be done only by importing the name from a module at compile time--ordinary predeclaration isn't good enough. However, the &lt;code&gt;use subs&lt;/code&gt; pragma lets you, in effect, predeclare subs via the import syntax, and these names may then override built-in ones:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304bd31d39d40b4f3f802e079ce7c0e189c81a09" translate="yes" xml:space="preserve">
          <source>Overriding methods and method resolution</source>
          <target state="translated">메소드 및 메소드 분석 대체</target>
        </trans-unit>
        <trans-unit id="ffad1af53b33d79810d2c0405dc312e1ae6928cd" translate="yes" xml:space="preserve">
          <source>Overstruck text is best viewed by page-at-a-time programs that take advantage of the terminal's &lt;b&gt;stand-out&lt;/b&gt; and</source>
          <target state="translated">Overstruck 텍스트가 가장 터미널의 이용을 한 번에 한 페이지 씩 프로그램에서 볼 &lt;b&gt;스탠드 아웃&lt;/b&gt; 과</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="474a898053a8dcfc6a65ec3561f19f87176b5898" translate="yes" xml:space="preserve">
          <source>Overview of the problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a667f27c725ca15906891f040729f4c87d88f70d" translate="yes" xml:space="preserve">
          <source>Owain G. Ainsworth &amp;lt;oga@nicotinebsd.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60e213a631e39c27535490386ac8689198d8d68" translate="yes" xml:space="preserve">
          <source>Owing to an oversight, this is not currently exported by default, or as part of the &lt;code&gt;:math_h_c99&lt;/code&gt; export tag; importing it must therefore be done by explicit name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74ca77dfe8fe7ee5b3ab9c3eda143868260591f" translate="yes" xml:space="preserve">
          <source>Ownership of directories that already exist will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66e34441ac56e5f8863c6bb5ce6bb649c646c79" translate="yes" xml:space="preserve">
          <source>Ownwership of directories that already exist will not be changed.</source>
          <target state="translated">이미 존재하는 디렉토리의 소유권은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c90ae34a7bbf5b215bf702e4f15a56d1024f60a9" translate="yes" xml:space="preserve">
          <source>Oxford English Dictionary</source>
          <target state="translated">옥스포드 영어 사전</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="a5574a0609f5eaeb5946f32c91fbd5d565ba5c54" translate="yes" xml:space="preserve">
          <source>PA-RISC</source>
          <target state="translated">PA-RISC</target>
        </trans-unit>
        <trans-unit id="b18e26c5d2442635220100cdbb4632471aa32d8c" translate="yes" xml:space="preserve">
          <source>PA-RISC 1.0</source>
          <target state="translated">PA-RISC 1.0</target>
        </trans-unit>
        <trans-unit id="eb216919e4e2e5c1a44316f9467b8ca7837ec3cc" translate="yes" xml:space="preserve">
          <source>PA-RISC 1.1</source>
          <target state="translated">PA-RISC 1.1</target>
        </trans-unit>
        <trans-unit id="db7ada64f0dcd494ae2a9fde52058fe389930fc0" translate="yes" xml:space="preserve">
          <source>PA-RISC 2.0</source>
          <target state="translated">PA-RISC 2.0</target>
        </trans-unit>
        <trans-unit id="a671d1a90e2150d11e2b1f6323c00da36fa35704" translate="yes" xml:space="preserve">
          <source>PA-RISC and Itanium object files are not interchangeable. Although you may be able to use ar to create an archive library of PA-RISC object files on an Itanium system, you cannot link against it using an Itanium link editor.</source>
          <target state="translated">PA-RISC 및 Itanium 개체 파일은 서로 호환되지 않습니다. ar을 사용하여 Itanium 시스템에서 PA-RISC 오브젝트 파일의 아카이브 라이브러리를 작성할 수 있지만 Itanium 링크 편집기를 사용하여 링크 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="6e778bd20eb20ec966352f3796d7c0931f2a1b52" translate="yes" xml:space="preserve">
          <source>PACKAGE</source>
          <target state="translated">PACKAGE</target>
        </trans-unit>
        <trans-unit id="3b24034394fd782a09f93e8a5e6a19e433f5c0b7" translate="yes" xml:space="preserve">
          <source>PACKAGE VARIABLES</source>
          <target state="translated">패키지 변수</target>
        </trans-unit>
        <trans-unit id="f5757bc942837b06dcea162133be87f1399efdb1" translate="yes" xml:space="preserve">
          <source>PAD-RELATED CLASSES</source>
          <target state="translated">패드 관련 클래스</target>
        </trans-unit>
        <trans-unit id="5256fd77701bc17fcebded5655a52af6c191f7ca" translate="yes" xml:space="preserve">
          <source>PADDING OF BASE64 DIGESTS</source>
          <target state="translated">BASE64 거리의 패딩</target>
        </trans-unit>
        <trans-unit id="8e1e111672b0ce3d9f0e518dd5449212aca7598e" translate="yes" xml:space="preserve">
          <source>PADLIST</source>
          <target state="translated">PADLIST</target>
        </trans-unit>
        <trans-unit id="0ce409d28d32dbec9531236330741cb2b0382be8" translate="yes" xml:space="preserve">
          <source>PAD_BASE_SV</source>
          <target state="translated">PAD_BASE_SV</target>
        </trans-unit>
        <trans-unit id="1dd6bf7080fa805005c8b86c4472f603cc407daf" translate="yes" xml:space="preserve">
          <source>PAD_CLONE_VARS</source>
          <target state="translated">PAD_CLONE_VARS</target>
        </trans-unit>
        <trans-unit id="fbc8d6645c28f09bf9c399e172982a976775b3b7" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_FLAGS</source>
          <target state="translated">PAD_COMPNAME_FLAGS</target>
        </trans-unit>
        <trans-unit id="e7b5502bf737c86090649593776e2047c49b365d" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_GEN</source>
          <target state="translated">PAD_COMPNAME_GEN</target>
        </trans-unit>
        <trans-unit id="d140ea05f9d1a2ede0f05f8adc47815ba5d43635" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_GEN_set</source>
          <target state="translated">PAD_COMPNAME_GEN_set</target>
        </trans-unit>
        <trans-unit id="8a0949ea3502b36bc73ae334a1a192a1abf0d28a" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_OURSTASH</source>
          <target state="translated">PAD_COMPNAME_OURSTASH</target>
        </trans-unit>
        <trans-unit id="89d1312d8accb0e138a65db72bec0e9e2b847413" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_PV</source>
          <target state="translated">PAD_COMPNAME_PV</target>
        </trans-unit>
        <trans-unit id="19c6c63f50fcfdb722d18abba18199ae6e535451" translate="yes" xml:space="preserve">
          <source>PAD_COMPNAME_TYPE</source>
          <target state="translated">PAD_COMPNAME_TYPE</target>
        </trans-unit>
        <trans-unit id="f8e6685aa38c7a40e0a331cbdbcc3266610fbad1" translate="yes" xml:space="preserve">
          <source>PAD_RESTORE_LOCAL</source>
          <target state="translated">PAD_RESTORE_LOCAL</target>
        </trans-unit>
        <trans-unit id="fcd03c31f330472cd421430dab01ec46f08ae95b" translate="yes" xml:space="preserve">
          <source>PAD_SAVE_LOCAL</source>
          <target state="translated">PAD_SAVE_LOCAL</target>
        </trans-unit>
        <trans-unit id="a3247075564fed14fb2b42b33c87bf7d088ff20f" translate="yes" xml:space="preserve">
          <source>PAD_SAVE_SETNULLPAD</source>
          <target state="translated">PAD_SAVE_SETNULLPAD</target>
        </trans-unit>
        <trans-unit id="1ca72802f6d51a0188211954da25920eb515a2f4" translate="yes" xml:space="preserve">
          <source>PAD_SETSV</source>
          <target state="translated">PAD_SETSV</target>
        </trans-unit>
        <trans-unit id="0750242dda622bdb5ca6b110782aa410864badfb" translate="yes" xml:space="preserve">
          <source>PAD_SET_CUR</source>
          <target state="translated">PAD_SET_CUR</target>
        </trans-unit>
        <trans-unit id="24f4e3660ca497788bdfe4d0a0208296341218d9" translate="yes" xml:space="preserve">
          <source>PAD_SET_CUR_NOSAVE</source>
          <target state="translated">PAD_SET_CUR_NOSAVE</target>
        </trans-unit>
        <trans-unit id="d5ecf996a006e53f3dd0837338653e8ff2d758a7" translate="yes" xml:space="preserve">
          <source>PAD_SV</source>
          <target state="translated">PAD_SV</target>
        </trans-unit>
        <trans-unit id="b3c586cfb3f9f37bd2687f7d27b0c4ec5363faf0" translate="yes" xml:space="preserve">
          <source>PAD_SVl</source>
          <target state="translated">PAD_SVl</target>
        </trans-unit>
        <trans-unit id="618c7535011f9df31cd5ffb3ee3e00fec9a8775e" translate="yes" xml:space="preserve">
          <source>PAGE</source>
          <target state="translated">PAGE</target>
        </trans-unit>
        <trans-unit id="c228f374ba11e28d1b0cd8b37df2b5ef7732a7c4" translate="yes" xml:space="preserve">
          <source>PAGER FORMATTING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0166d0dbf8c835c2fbd578bc987f7a6752b31107" translate="yes" xml:space="preserve">
          <source>PAGE_LEN</source>
          <target state="translated">PAGE_LEN</target>
        </trans-unit>
        <trans-unit id="92903ba42bddaecab9133139d6657d1d38035291" translate="yes" xml:space="preserve">
          <source>PAR - optional module which can treat &lt;code&gt;.par&lt;/code&gt; files as Perl libraries.</source>
          <target state="translated">PAR- &lt;code&gt;.par&lt;/code&gt; 파일을 Perl 라이브러리로 취급 할 수있는 옵션 모듈 .</target>
        </trans-unit>
        <trans-unit id="9ecb61ab183eddb8d15e9d3e617cb668532eb041" translate="yes" xml:space="preserve">
          <source>PARAM</source>
          <target state="translated">PARAM</target>
        </trans-unit>
        <trans-unit id="c54566cca65074a4fcc88db222b5b0f12d630d70" translate="yes" xml:space="preserve">
          <source>PARENT_FAKELEX_FLAGS</source>
          <target state="translated">PARENT_FAKELEX_FLAGS</target>
        </trans-unit>
        <trans-unit id="a84edc01e312471c2b5c8726f460b2477b4ac2d9" translate="yes" xml:space="preserve">
          <source>PARENT_PAD_INDEX</source>
          <target state="translated">PARENT_PAD_INDEX</target>
        </trans-unit>
        <trans-unit id="8aa67c70b62b88425c0805fe7ee18784ade05280" translate="yes" xml:space="preserve">
          <source>PARNO</source>
          <target state="translated">PARNO</target>
        </trans-unit>
        <trans-unit id="da04370db03e1f163c0a4defb521b34eb9178ab4" translate="yes" xml:space="preserve">
          <source>PARSE</source>
          <target state="translated">PARSE</target>
        </trans-unit>
        <trans-unit id="92d523adbbf0ce911b68f042510b7a4ebf50c3b0" translate="yes" xml:space="preserve">
          <source>PARSING AND COMPARING VERSIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76071dc758ed7e342554ae65110a5912fa75887" translate="yes" xml:space="preserve">
          <source>PARSING OPTIONS</source>
          <target state="translated">파싱 ​​옵션</target>
        </trans-unit>
        <trans-unit id="65fdaa7c1e0213fa66973f7e18a35f5da6810356" translate="yes" xml:space="preserve">
          <source>PASE</source>
          <target state="translated">PASE</target>
        </trans-unit>
        <trans-unit id="2f27cfe52f75001eb8b13ac0b269b4d71a7d0eff" translate="yes" xml:space="preserve">
          <source>PATCHING</source>
          <target state="translated">PATCHING</target>
        </trans-unit>
        <trans-unit id="b991d9932b6d73d6525c72b0344ecaf0a6e70612" translate="yes" xml:space="preserve">
          <source>PATCHING PERL</source>
          <target state="translated">펄링 펄</target>
        </trans-unit>
        <trans-unit id="09bd6a353a7bb8a33e37cfee71ada9fc9ce37d89" translate="yes" xml:space="preserve">
          <source>PATH</source>
          <target state="translated">PATH</target>
        </trans-unit>
        <trans-unit id="f0bb075725362b9ff74d654f64b4ce888ae50f10" translate="yes" xml:space="preserve">
          <source>PATHNAME</source>
          <target state="translated">PATHNAME</target>
        </trans-unit>
        <trans-unit id="97000043438fbbe1d01d067a89cdcef2f0e8c14c" translate="yes" xml:space="preserve">
          <source>PATHNAME CONSTANTS</source>
          <target state="translated">PATHNAME 상수</target>
        </trans-unit>
        <trans-unit id="84c16d6a502dba6bf2d3fee213424d5d6bfb7b62" translate="yes" xml:space="preserve">
          <source>PATTERN</source>
          <target state="translated">PATTERN</target>
        </trans-unit>
        <trans-unit id="9935dfb5a4d397598918b95cafea8828afe115be" translate="yes" xml:space="preserve">
          <source>PAUSE</source>
          <target state="translated">PAUSE</target>
        </trans-unit>
        <trans-unit id="dac71a6819627d348c31a24b525d7fa382bddadb" translate="yes" xml:space="preserve">
          <source>PCRE/Python Support</source>
          <target state="translated">PCRE / Python 지원</target>
        </trans-unit>
        <trans-unit id="d613d88cb2d86f484f6f82d44ac1fc60722abe20" translate="yes" xml:space="preserve">
          <source>PDF</source>
          <target state="translated">PDF</target>
        </trans-unit>
        <trans-unit id="436c8c99adb6d9787c7e786ec3908d3f74c612d9" translate="yes" xml:space="preserve">
          <source>PDF files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915757bff8531e4abe328c07c4e18e2cac843c2b" translate="yes" xml:space="preserve">
          <source>PER CONTEXT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4848921871eb3f43c262cbe87ba21c368a1cccf3" translate="yes" xml:space="preserve">
          <source>PER HUB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3411cdbe71b0a21abc88a3963b8403693bbc1b" translate="yes" xml:space="preserve">
          <source>PERFORMANCE</source>
          <target state="translated">PERFORMANCE</target>
        </trans-unit>
        <trans-unit id="39f8a0e85bb1878c9aeced92ae812526a99cca76" translate="yes" xml:space="preserve">
          <source>PERL</source>
          <target state="translated">PERL</target>
        </trans-unit>
        <trans-unit id="9c0b8df191c44800f2c74c7e9a02a85037490e16" translate="yes" xml:space="preserve">
          <source>PERL -&amp;gt; JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a039af5d518d5df4edecd9355e8862ee9074cf7a" translate="yes" xml:space="preserve">
          <source>PERL 5 PORTERS</source>
          <target state="translated">펄 5 포터</target>
        </trans-unit>
        <trans-unit id="7e824f1cd9308ba64d688a71fcc968d2bf452aa4" translate="yes" xml:space="preserve">
          <source>PERL 5.8.0 BROKEN IN AMIGAOS</source>
          <target state="translated">AMIGAOS에서 PERL 5.8.0 고장</target>
        </trans-unit>
        <trans-unit id="2ad8575bde04df8f3c3405e287595936fe2f6b74" translate="yes" xml:space="preserve">
          <source>PERL OO SYSTEMS</source>
          <target state="translated">펄 OO 시스템</target>
        </trans-unit>
        <trans-unit id="38707bbc3a64c94dc99f9b43d452049c22f48409" translate="yes" xml:space="preserve">
          <source>PERL.C</source>
          <target state="translated">PERL.C</target>
        </trans-unit>
        <trans-unit id="c4ef015b035531ca89e73efd9974dbb427096dd2" translate="yes" xml:space="preserve">
          <source>PERL.EXE</source>
          <target state="translated">PERL.EXE</target>
        </trans-unit>
        <trans-unit id="0f9466733223ddd1a05cbf29bb33f0f356cbffcb" translate="yes" xml:space="preserve">
          <source>PERL.H</source>
          <target state="translated">PERL.H</target>
        </trans-unit>
        <trans-unit id="4a444e7468c0f9cc5930e13403ef14557c1dcc70" translate="yes" xml:space="preserve">
          <source>PERL.OBJ</source>
          <target state="translated">PERL.OBJ</target>
        </trans-unit>
        <trans-unit id="944f396b8928d9e2fa1ea171412c85f9df865b40" translate="yes" xml:space="preserve">
          <source>PERL5DB</source>
          <target state="translated">PERL5DB</target>
        </trans-unit>
        <trans-unit id="6455e9f03b579444f6cfac53ed072f02d7c0994d" translate="yes" xml:space="preserve">
          <source>PERL5DB_THREADED</source>
          <target state="translated">PERL5DB_THREADED</target>
        </trans-unit>
        <trans-unit id="4c5b3b626c81cce3f3eeccca7e4896275128f492" translate="yes" xml:space="preserve">
          <source>PERL5LIB</source>
          <target state="translated">PERL5LIB</target>
        </trans-unit>
        <trans-unit id="52d59ca4a1575427154cd0921e5e7f03fc93f8dc" translate="yes" xml:space="preserve">
          <source>PERL5LIB and PERLLIB</source>
          <target state="translated">PERL5LIB 및 PERLLIB</target>
        </trans-unit>
        <trans-unit id="c078e36bc5cea9a087f1b9b98b102cc8a8d3e695" translate="yes" xml:space="preserve">
          <source>PERL5OPT</source>
          <target state="translated">PERL5OPT</target>
        </trans-unit>
        <trans-unit id="619574f5aa9841dfd4610a1229ccc167d3e48a29" translate="yes" xml:space="preserve">
          <source>PERL5SHELL (specific to the Win32 port)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a75fb949dd06b3f9081176db6123371bfe89bd" translate="yes" xml:space="preserve">
          <source>PERLDOCS</source>
          <target state="translated">PERLDOCS</target>
        </trans-unit>
        <trans-unit id="fb97baf13455c0c684ce0367c946be2a6d6c95a2" translate="yes" xml:space="preserve">
          <source>PERLIO</source>
          <target state="translated">PERLIO</target>
        </trans-unit>
        <trans-unit id="3011359944ea1c34bc93241f383f59af74070b23" translate="yes" xml:space="preserve">
          <source>PERLIO_DEBUG</source>
          <target state="translated">PERLIO_DEBUG</target>
        </trans-unit>
        <trans-unit id="e8397c4263b2974350f5b2fda0a443612e97b851" translate="yes" xml:space="preserve">
          <source>PERLIO_F_APPEND</source>
          <target state="translated">PERLIO_F_APPEND</target>
        </trans-unit>
        <trans-unit id="6cb52efd50cd9f356f4fd0a530d8d5ab8b752b07" translate="yes" xml:space="preserve">
          <source>PERLIO_F_CANREAD</source>
          <target state="translated">PERLIO_F_CANREAD</target>
        </trans-unit>
        <trans-unit id="4799d1e51e77a5fc870a645110780fb65f76ff60" translate="yes" xml:space="preserve">
          <source>PERLIO_F_CANWRITE</source>
          <target state="translated">PERLIO_F_CANWRITE</target>
        </trans-unit>
        <trans-unit id="7434717d13cd61a03c2e8ee80b7db2d17130c368" translate="yes" xml:space="preserve">
          <source>PERLIO_F_CRLF</source>
          <target state="translated">PERLIO_F_CRLF</target>
        </trans-unit>
        <trans-unit id="71ab849f32289320013f5cb484e8b67dab735ec2" translate="yes" xml:space="preserve">
          <source>PERLIO_F_EOF</source>
          <target state="translated">PERLIO_F_EOF</target>
        </trans-unit>
        <trans-unit id="d7a3952a8faa6d23dd60ff13228e1e9052bbfe93" translate="yes" xml:space="preserve">
          <source>PERLIO_F_ERROR</source>
          <target state="translated">PERLIO_F_ERROR</target>
        </trans-unit>
        <trans-unit id="2f957fc5bb099475f1911cb9c5c8002dd513b159" translate="yes" xml:space="preserve">
          <source>PERLIO_F_FASTGETS</source>
          <target state="translated">PERLIO_F_FASTGETS</target>
        </trans-unit>
        <trans-unit id="175b76d5a84c87e2b2c16342d73312d02a67dfed" translate="yes" xml:space="preserve">
          <source>PERLIO_F_LINEBUF</source>
          <target state="translated">PERLIO_F_LINEBUF</target>
        </trans-unit>
        <trans-unit id="c7a2c9991f5c2a58a0a2e49aa49fc3b6922fb2eb" translate="yes" xml:space="preserve">
          <source>PERLIO_F_OPEN</source>
          <target state="translated">PERLIO_F_OPEN</target>
        </trans-unit>
        <trans-unit id="9935787f8f0421af5ecf5fd2ecf4b4a5ffd56aa4" translate="yes" xml:space="preserve">
          <source>PERLIO_F_RDBUF</source>
          <target state="translated">PERLIO_F_RDBUF</target>
        </trans-unit>
        <trans-unit id="2480728353b390a304780481e01f4bfaa7829afd" translate="yes" xml:space="preserve">
          <source>PERLIO_F_TEMP</source>
          <target state="translated">PERLIO_F_TEMP</target>
        </trans-unit>
        <trans-unit id="b41c3d2e532250f86ee8250283f82be559cbd02c" translate="yes" xml:space="preserve">
          <source>PERLIO_F_TRUNCATE</source>
          <target state="translated">PERLIO_F_TRUNCATE</target>
        </trans-unit>
        <trans-unit id="107433bef0c3560e113e4e40528666b498754ebe" translate="yes" xml:space="preserve">
          <source>PERLIO_F_UNBUF</source>
          <target state="translated">PERLIO_F_UNBUF</target>
        </trans-unit>
        <trans-unit id="961bea7dd57062f89a44b4f6a38406408e7f125f" translate="yes" xml:space="preserve">
          <source>PERLIO_F_UTF8</source>
          <target state="translated">PERLIO_F_UTF8</target>
        </trans-unit>
        <trans-unit id="2220def36b220f3651d529345a73c0af882faedc" translate="yes" xml:space="preserve">
          <source>PERLIO_F_WRBUF</source>
          <target state="translated">PERLIO_F_WRBUF</target>
        </trans-unit>
        <trans-unit id="8dbfb1fad38ee56e575087f5f14bbe4d213068c9" translate="yes" xml:space="preserve">
          <source>PERLIO_K_BUFFERED</source>
          <target state="translated">PERLIO_K_BUFFERED</target>
        </trans-unit>
        <trans-unit id="7b20919d2f97edac78b68b21a94859ce668d00dd" translate="yes" xml:space="preserve">
          <source>PERLIO_K_CANCRLF</source>
          <target state="translated">PERLIO_K_CANCRLF</target>
        </trans-unit>
        <trans-unit id="ce62ad2afa73e71eda765267cb12fe5fd15ddb52" translate="yes" xml:space="preserve">
          <source>PERLIO_K_FASTGETS</source>
          <target state="translated">PERLIO_K_FASTGETS</target>
        </trans-unit>
        <trans-unit id="78221b240ced7eee57e1b2735cf03fb7e4b3a8f2" translate="yes" xml:space="preserve">
          <source>PERLIO_K_MULTIARG</source>
          <target state="translated">PERLIO_K_MULTIARG</target>
        </trans-unit>
        <trans-unit id="77b15078ef55c132f3b6bea9ea03fcf409367f84" translate="yes" xml:space="preserve">
          <source>PERLIO_K_RAW</source>
          <target state="translated">PERLIO_K_RAW</target>
        </trans-unit>
        <trans-unit id="b4f886313596b6518b4cc628c134a56cb4df28a6" translate="yes" xml:space="preserve">
          <source>PERLLIB</source>
          <target state="translated">PERLLIB</target>
        </trans-unit>
        <trans-unit id="985d8b7cd33b8ae8b97c10576f8525c5e43feb2b" translate="yes" xml:space="preserve">
          <source>PERLLIB_PREFIX</source>
          <target state="translated">PERLLIB_PREFIX</target>
        </trans-unit>
        <trans-unit id="623eea53968f01cfff951154caac47eec4e37307" translate="yes" xml:space="preserve">
          <source>PERLMAINCC</source>
          <target state="translated">PERLMAINCC</target>
        </trans-unit>
        <trans-unit id="7e7179726554cd8151193d720d159879f23350cd" translate="yes" xml:space="preserve">
          <source>PERLPREFIX</source>
          <target state="translated">PERLPREFIX</target>
        </trans-unit>
        <trans-unit id="ef8fc8e0831d3845da826810079abb8d4eda73aa" translate="yes" xml:space="preserve">
          <source>PERLRUN</source>
          <target state="translated">PERLRUN</target>
        </trans-unit>
        <trans-unit id="8cb3a680a4163da21f5dd4f5b20bac6f64c8807b" translate="yes" xml:space="preserve">
          <source>PERLRUNINST</source>
          <target state="translated">PERLRUNINST</target>
        </trans-unit>
        <trans-unit id="a58122b37384a35d76a112224ebc05023622985d" translate="yes" xml:space="preserve">
          <source>PERLSHR</source>
          <target state="translated">PERLSHR</target>
        </trans-unit>
        <trans-unit id="d41a8dc6d3f7278a6a31df3cd1c3dcb40a90f3de" translate="yes" xml:space="preserve">
          <source>PERL_ABS</source>
          <target state="translated">PERL_ABS</target>
        </trans-unit>
        <trans-unit id="82e78f5be100d6e4e53775ec69e7f77b51fe26d1" translate="yes" xml:space="preserve">
          <source>PERL_ALLOW_NON_IFS_LSP (specific to the Win32 port)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b90ea60310458da34842ec49d8ba2dcc6d6842" translate="yes" xml:space="preserve">
          <source>PERL_ARCHIVE: path to libperl.a equivalent to be linked to dynamic extensions.</source>
          <target state="translated">PERL_ARCHIVE : 동적 확장에 링크되는 libperl의 경로.</target>
        </trans-unit>
        <trans-unit id="6b32b9f2a6388fd49d59dc380fdfe54ede4bbab4" translate="yes" xml:space="preserve">
          <source>PERL_ARCHIVE_AFTER: path to a library which should be put on the linker command line</source>
          <target state="translated">PERL_ARCHIVE_AFTER : 링커 명령 행에 배치해야하는 라이브러리의 경로</target>
        </trans-unit>
        <trans-unit id="2a5949bd72c9d8fb96e425efbf9cf828b23115ca" translate="yes" xml:space="preserve">
          <source>PERL_ARCHLIB</source>
          <target state="translated">PERL_ARCHLIB</target>
        </trans-unit>
        <trans-unit id="4c6d51550dda10c59c0baefc83a359a9b3e89e2d" translate="yes" xml:space="preserve">
          <source>PERL_BADFREE</source>
          <target state="translated">PERL_BADFREE</target>
        </trans-unit>
        <trans-unit id="a23a8f24b9f1defe9ff92b59171d38cc844c2e5c" translate="yes" xml:space="preserve">
          <source>PERL_BADLANG</source>
          <target state="translated">PERL_BADLANG</target>
        </trans-unit>
        <trans-unit id="27744e6f763b2f7e34b5ad43dfc84eb60b8f2328" translate="yes" xml:space="preserve">
          <source>PERL_CORE</source>
          <target state="translated">PERL_CORE</target>
        </trans-unit>
        <trans-unit id="f3b32d1fab39a89f5810f068d933a9668c2c797f" translate="yes" xml:space="preserve">
          <source>PERL_CORE=1</source>
          <target state="translated">PERL_CORE=1</target>
        </trans-unit>
        <trans-unit id="6e749936de729cac30fc2845975837847046c8ae" translate="yes" xml:space="preserve">
          <source>PERL_DEBUG_MSTATS</source>
          <target state="translated">PERL_DEBUG_MSTATS</target>
        </trans-unit>
        <trans-unit id="ea61b8e3a3a6f667f8ac07d9441b74f7086fd4b1" translate="yes" xml:space="preserve">
          <source>PERL_DESTRUCT_LEVEL</source>
          <target state="translated">PERL_DESTRUCT_LEVEL</target>
        </trans-unit>
        <trans-unit id="801bffffb634f95f6bada89e8d20e84edbcc88c8" translate="yes" xml:space="preserve">
          <source>PERL_DESTRUCT_LEVEL=2</source>
          <target state="translated">PERL_DESTRUCT_LEVEL=2</target>
        </trans-unit>
        <trans-unit id="508b673c46fe52a5d06f717b394b01c1f988eb82" translate="yes" xml:space="preserve">
          <source>PERL_DL_NONLAZY</source>
          <target state="translated">PERL_DL_NONLAZY</target>
        </trans-unit>
        <trans-unit id="5d5910c41b2fdc604b389a58ab820d3533a9ab57" translate="yes" xml:space="preserve">
          <source>PERL_ENCODING</source>
          <target state="translated">PERL_ENCODING</target>
        </trans-unit>
        <trans-unit id="61a82fd6ba532d8a72b14f2af64e53732c3f8065" translate="yes" xml:space="preserve">
          <source>PERL_ENV_TABLES</source>
          <target state="translated">PERL_ENV_TABLES</target>
        </trans-unit>
        <trans-unit id="792910e59c33e195f09322499a044a11627827d0" translate="yes" xml:space="preserve">
          <source>PERL_HASH_SEED</source>
          <target state="translated">PERL_HASH_SEED</target>
        </trans-unit>
        <trans-unit id="a7b5ea249c8d4809d316619028db41e4453be1aa" translate="yes" xml:space="preserve">
          <source>PERL_HASH_SEED_DEBUG</source>
          <target state="translated">PERL_HASH_SEED_DEBUG</target>
        </trans-unit>
        <trans-unit id="5c17c901a8c7ba514352a23cbcd31ec43fe0b47d" translate="yes" xml:space="preserve">
          <source>PERL_INTERNAL_RAND_SEED</source>
          <target state="translated">PERL_INTERNAL_RAND_SEED</target>
        </trans-unit>
        <trans-unit id="69db7aaecf7d491408fc204d63c890b69df8731b" translate="yes" xml:space="preserve">
          <source>PERL_INT_MAX</source>
          <target state="translated">PERL_INT_MAX</target>
        </trans-unit>
        <trans-unit id="df55d3100213212432ed7cb5fb2ce8aff5bb5e34" translate="yes" xml:space="preserve">
          <source>PERL_JSON_BACKEND</source>
          <target state="translated">PERL_JSON_BACKEND</target>
        </trans-unit>
        <trans-unit id="49ab4454766657be54e5d4cb74c2908c0fd5b261" translate="yes" xml:space="preserve">
          <source>PERL_LIB</source>
          <target state="translated">PERL_LIB</target>
        </trans-unit>
        <trans-unit id="0f45bf3543329a337f832cab3aec2fe306d7db33" translate="yes" xml:space="preserve">
          <source>PERL_MALLOC_OK</source>
          <target state="translated">PERL_MALLOC_OK</target>
        </trans-unit>
        <trans-unit id="7406046b29d774dab6f67c9ebf1226de7875707f" translate="yes" xml:space="preserve">
          <source>PERL_MEM_LOG</source>
          <target state="translated">PERL_MEM_LOG</target>
        </trans-unit>
        <trans-unit id="5c9f395109ea5023ab74c833a3d7d1ffe677b023" translate="yes" xml:space="preserve">
          <source>PERL_MM_OPT</source>
          <target state="translated">PERL_MM_OPT</target>
        </trans-unit>
        <trans-unit id="5c953073368b76fafefd1e0259af81bf65f7f4b2" translate="yes" xml:space="preserve">
          <source>PERL_MM_USE_DEFAULT</source>
          <target state="translated">PERL_MM_USE_DEFAULT</target>
        </trans-unit>
        <trans-unit id="cef724fd4ff152432d364f33d0c4576d9c407154" translate="yes" xml:space="preserve">
          <source>PERL_PERTURB_KEYS</source>
          <target state="translated">PERL_PERTURB_KEYS</target>
        </trans-unit>
        <trans-unit id="f27f43c29b22fb43e8928ba53b4a9304b93a2d19" translate="yes" xml:space="preserve">
          <source>PERL_ROOT (specific to the VMS port)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35728d129bbb3e5ed03314204a1cbf6d4ce2e6d0" translate="yes" xml:space="preserve">
          <source>PERL_SET_CONTEXT(interp) should also be called whenever &lt;code&gt;interp&lt;/code&gt; is used by a thread that did not create it (using either perl_alloc(), or the more esoteric perl_clone()).</source>
          <target state="translated">interp 때마다 PERL_SET_CONTEXT (interp)도 호출해야 &lt;code&gt;interp&lt;/code&gt; perl_alloc () 또는보다 난해한 perl_clone ()을 사용하여이를 작성하지 않은 스레드가 를 사용할 .</target>
        </trans-unit>
        <trans-unit id="a871d7bf7b2a02e819c07cf4df026d57906b3e51" translate="yes" xml:space="preserve">
          <source>PERL_SH_DIR</source>
          <target state="translated">PERL_SH_DIR</target>
        </trans-unit>
        <trans-unit id="4c7cf2b0fdec6c8b2cd92d28ad49f22e26b0b418" translate="yes" xml:space="preserve">
          <source>PERL_SH_DIR too long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd3a2603ac42075dab76aca53b79038e4748710" translate="yes" xml:space="preserve">
          <source>PERL_SIGNALS</source>
          <target state="translated">PERL_SIGNALS</target>
        </trans-unit>
        <trans-unit id="5a3d499734d10684ba8b973f86e049a53ee385c1" translate="yes" xml:space="preserve">
          <source>PERL_SIGNALS illegal: &quot;%s&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4060aa4827b3a71203af081a412cd22971a36094" translate="yes" xml:space="preserve">
          <source>PERL_SKIP_LOCALE_INIT</source>
          <target state="translated">PERL_SKIP_LOCALE_INIT</target>
        </trans-unit>
        <trans-unit id="bc3db12de425fd5679b7ce819f07898cfe62fa7b" translate="yes" xml:space="preserve">
          <source>PERL_SKIP_TTY_TEST</source>
          <target state="translated">PERL_SKIP_TTY_TEST</target>
        </trans-unit>
        <trans-unit id="41cca9a24252937596b0f50c1b1d4f37568c3301" translate="yes" xml:space="preserve">
          <source>PERL_SRC</source>
          <target state="translated">PERL_SRC</target>
        </trans-unit>
        <trans-unit id="ff65085c50dbeb4ca0dcc50c8eaea9bafb4867b8" translate="yes" xml:space="preserve">
          <source>PERL_SYS_INIT</source>
          <target state="translated">PERL_SYS_INIT</target>
        </trans-unit>
        <trans-unit id="bafe8eb4e870a01118a1e32b0b2c726dc909e6e3" translate="yes" xml:space="preserve">
          <source>PERL_SYS_INIT3</source>
          <target state="translated">PERL_SYS_INIT3</target>
        </trans-unit>
        <trans-unit id="bf0d5f220a76e58f3821bfa4311a10722b064d45" translate="yes" xml:space="preserve">
          <source>PERL_SYS_TERM</source>
          <target state="translated">PERL_SYS_TERM</target>
        </trans-unit>
        <trans-unit id="208fc538733dbbdb5aec3a63df9d729e3913e67b" translate="yes" xml:space="preserve">
          <source>PERL_TEST_MEMORY</source>
          <target state="translated">PERL_TEST_MEMORY</target>
        </trans-unit>
        <trans-unit id="886bcbbb74ffecaf881fba6286355ca404a13f7c" translate="yes" xml:space="preserve">
          <source>PERL_TEST_NOVREXX</source>
          <target state="translated">PERL_TEST_NOVREXX</target>
        </trans-unit>
        <trans-unit id="ab7dad907e62e7599b1a7017691243265886cbfc" translate="yes" xml:space="preserve">
          <source>PERL_TEST_NUMCONVERTS</source>
          <target state="translated">PERL_TEST_NUMCONVERTS</target>
        </trans-unit>
        <trans-unit id="759faa5eaa5538181d217e2ab4434a823203767c" translate="yes" xml:space="preserve">
          <source>PERL_TEST_Net_Ping</source>
          <target state="translated">PERL_TEST_Net_Ping</target>
        </trans-unit>
        <trans-unit id="bec5540dbfde5aa63bedd53cd22ab9d823b7e6d6" translate="yes" xml:space="preserve">
          <source>PERL_UNICODE</source>
          <target state="translated">PERL_UNICODE</target>
        </trans-unit>
        <trans-unit id="7e4e92dcc5e27c3fb85c6e75b6e5d617242fb46f" translate="yes" xml:space="preserve">
          <source>PERL_USE_UNSAFE_INC</source>
          <target state="translated">PERL_USE_UNSAFE_INC</target>
        </trans-unit>
        <trans-unit id="4e4019cc5e2b7ec5fc3d43d1227c4891f068a0c3" translate="yes" xml:space="preserve">
          <source>PERL_VMS_EXCEPTION_DEBUG</source>
          <target state="translated">PERL_VMS_EXCEPTION_DEBUG</target>
        </trans-unit>
        <trans-unit id="22d485a76570fc46268de520a55e10a9a69f35aa" translate="yes" xml:space="preserve">
          <source>PERL_YAML_BACKEND</source>
          <target state="translated">PERL_YAML_BACKEND</target>
        </trans-unit>
        <trans-unit id="44fdc623047a41623d488fb31da2674a7030dc04" translate="yes" xml:space="preserve">
          <source>PERM_DIR</source>
          <target state="translated">PERM_DIR</target>
        </trans-unit>
        <trans-unit id="c2180dfdb34d9a6639dc15caa5022b694b5fb078" translate="yes" xml:space="preserve">
          <source>PERM_RW</source>
          <target state="translated">PERM_RW</target>
        </trans-unit>
        <trans-unit id="44fda2c533f929a99931a44d71a12a1d4907dfb4" translate="yes" xml:space="preserve">
          <source>PERM_RWX</source>
          <target state="translated">PERM_RWX</target>
        </trans-unit>
        <trans-unit id="70101c7c85d7116954e48d6da8dddb7074ef2a17" translate="yes" xml:space="preserve">
          <source>PERSISTENT CACHE SUPPORT</source>
          <target state="translated">영구 캐시 지원</target>
        </trans-unit>
        <trans-unit id="60003793ea7b554ef4aa8d86e943a5c0f46d5e37" translate="yes" xml:space="preserve">
          <source>PF_INET, PF_INET6, PF_UNIX, ...</source>
          <target state="translated">PF_INET, PF_INET6, PF_UNIX, ...</target>
        </trans-unit>
        <trans-unit id="fa7ff6fb00a7ace8d98cf880a492dc6c5ffc8ca7" translate="yes" xml:space="preserve">
          <source>PI</source>
          <target state="translated">PI</target>
        </trans-unit>
        <trans-unit id="b8dbf6f1e27bbaefb3fed1c9d45e67a33d78ca7f" translate="yes" xml:space="preserve">
          <source>PI()</source>
          <target state="translated">PI()</target>
        </trans-unit>
        <trans-unit id="0895326aa55be1e55b928bb1bbe19bf4d92dbea6" translate="yes" xml:space="preserve">
          <source>PID of the hub this event was sent to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561a1e4f381f56a68d3e1343160d7f5e7bdc0528" translate="yes" xml:space="preserve">
          <source>PID of this instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3490ca5e3137d6e80d152267527e5428418a006e" translate="yes" xml:space="preserve">
          <source>PL files are normally run &lt;b&gt;after&lt;/b&gt; pm_to_blib and include INST_LIB and INST_ARCH in their &lt;code&gt;@INC&lt;/code&gt; , so the just built modules can be accessed... unless the PL file is making a module (or anything else in PM) in which case it is run &lt;b&gt;before&lt;/b&gt; pm_to_blib and does not include INST_LIB and INST_ARCH in its &lt;code&gt;@INC&lt;/code&gt; . This apparently odd behavior is there for backwards compatibility (and it's somewhat DWIM).</source>
          <target state="translated">PL 파일이 정상적으로 실행 &lt;b&gt;후&lt;/b&gt; pm_to_blib과에 INST_LIB 및 INST_ARCH을 포함 &lt;code&gt;@INC&lt;/code&gt; 방금 내장 모듈에 액세스 할 수 있도록 ...의 PL 파일이 실행되는 경우에 모듈 (또는 오후에 아무것도)하고있다 않는 &lt;b&gt;전에를&lt;/b&gt; pm_to_blib이며 &lt;code&gt;@INC&lt;/code&gt; 에 INST_LIB 및 INST_ARCH를 포함하지 않습니다 . 이 명백한 이상한 동작은 이전 버전과의 호환성을위한 것입니다 (그리고 다소 DWIM 임).</target>
        </trans-unit>
        <trans-unit id="e51a32a104667b7c78e8ac1b7576f2280fb9fd4f" translate="yes" xml:space="preserve">
          <source>PL files are normally run &lt;b&gt;after&lt;/b&gt; pm_to_blib and include INST_LIB and INST_ARCH in their &lt;code&gt;@INC&lt;/code&gt;, so the just built modules can be accessed... unless the PL file is making a module (or anything else in PM) in which case it is run &lt;b&gt;before&lt;/b&gt; pm_to_blib and does not include INST_LIB and INST_ARCH in its &lt;code&gt;@INC&lt;/code&gt;. This apparently odd behavior is there for backwards compatibility (and it's somewhat DWIM). The argument passed to the .PL is set up as a target to build in the Makefile. In other sections such as &lt;code&gt;postamble&lt;/code&gt; you can specify a dependency on the filename/argument that the .PL is supposed (or will have, now that that is is a dependency) to generate. Note the file to be generated will still be generated and the .PL will still run even without an explicit dependency created by you, since the &lt;code&gt;all&lt;/code&gt; target still depends on running all eligible to run.PL files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9b4355202a16dca9278309f8c57bab627534d7" translate="yes" xml:space="preserve">
          <source>PLANE ANGLE CONVERSIONS</source>
          <target state="translated">평면 각도 변환</target>
        </trans-unit>
        <trans-unit id="397f26f7a31d1d29ed32b8ae38758d964d147496" translate="yes" xml:space="preserve">
          <source>PLATFORMS</source>
          <target state="translated">PLATFORMS</target>
        </trans-unit>
        <trans-unit id="0fcaf629ebcd1ef3b077048317114d46dcb1a205" translate="yes" xml:space="preserve">
          <source>PLUGINS</source>
          <target state="translated">PLUGINS</target>
        </trans-unit>
        <trans-unit id="9384dfd5bba8ea1c903342591ace10a7ddfc9945" translate="yes" xml:space="preserve">
          <source>PL_DBsingle</source>
          <target state="translated">PL_DBsingle</target>
        </trans-unit>
        <trans-unit id="47a0c34abae5de452c4e68467e1bc69d0fec6aab" translate="yes" xml:space="preserve">
          <source>PL_DBsub</source>
          <target state="translated">PL_DBsub</target>
        </trans-unit>
        <trans-unit id="254f02daccecd79541ecf41e0e272b64295e59ae" translate="yes" xml:space="preserve">
          <source>PL_DBtrace</source>
          <target state="translated">PL_DBtrace</target>
        </trans-unit>
        <trans-unit id="50829b718fe62c2e544db03d7a807c3fcf696b78" translate="yes" xml:space="preserve">
          <source>PL_FILES</source>
          <target state="translated">PL_FILES</target>
        </trans-unit>
        <trans-unit id="0fc7cb838364bfb7821206b82094a7189a18f231" translate="yes" xml:space="preserve">
          <source>PL_check</source>
          <target state="translated">PL_check</target>
        </trans-unit>
        <trans-unit id="3942571b3c89a8b857e5e39afe0dc08bda50ef30" translate="yes" xml:space="preserve">
          <source>PL_comppad</source>
          <target state="translated">PL_comppad</target>
        </trans-unit>
        <trans-unit id="63b668989fbe90229071b7141adb2f83849fb393" translate="yes" xml:space="preserve">
          <source>PL_comppad_name</source>
          <target state="translated">PL_comppad_name</target>
        </trans-unit>
        <trans-unit id="78d979ff5b94265926bd56f4666a6068acf1dd0d" translate="yes" xml:space="preserve">
          <source>PL_curcop</source>
          <target state="translated">PL_curcop</target>
        </trans-unit>
        <trans-unit id="a713cc48fb265d503d721c22a1448425490a5aa4" translate="yes" xml:space="preserve">
          <source>PL_curpad</source>
          <target state="translated">PL_curpad</target>
        </trans-unit>
        <trans-unit id="d4046e35e916d2bef58857b755f892408300e3d3" translate="yes" xml:space="preserve">
          <source>PL_curstash</source>
          <target state="translated">PL_curstash</target>
        </trans-unit>
        <trans-unit id="037412b68e6e26e872c8118b350215dc8d6d1448" translate="yes" xml:space="preserve">
          <source>PL_defgv</source>
          <target state="translated">PL_defgv</target>
        </trans-unit>
        <trans-unit id="c8fa77f015d32904e855001578c1c0c2dfa79e4e" translate="yes" xml:space="preserve">
          <source>PL_dowarn</source>
          <target state="translated">PL_dowarn</target>
        </trans-unit>
        <trans-unit id="092b2e167ed55508a7c2b6f702a3069db725a955" translate="yes" xml:space="preserve">
          <source>PL_exit_flags</source>
          <target state="translated">PL_exit_flags</target>
        </trans-unit>
        <trans-unit id="2269a7dea453869f10370e7c170b74030da89d49" translate="yes" xml:space="preserve">
          <source>PL_keyword_plugin</source>
          <target state="translated">PL_keyword_plugin</target>
        </trans-unit>
        <trans-unit id="5209c66f63bd147aa5df8ecc1ab888c0d9961d92" translate="yes" xml:space="preserve">
          <source>PL_last_in_gv</source>
          <target state="translated">PL_last_in_gv</target>
        </trans-unit>
        <trans-unit id="36fd7cea2fd5f5c1963a44dc7058f9525c072690" translate="yes" xml:space="preserve">
          <source>PL_modglobal</source>
          <target state="translated">PL_modglobal</target>
        </trans-unit>
        <trans-unit id="2236e3ec4813567c614a43cd0754dd6626a4a551" translate="yes" xml:space="preserve">
          <source>PL_na</source>
          <target state="translated">PL_na</target>
        </trans-unit>
        <trans-unit id="6995185ff1c35cec4925daa0b0075d0327f77ee5" translate="yes" xml:space="preserve">
          <source>PL_ofsgv</source>
          <target state="translated">PL_ofsgv</target>
        </trans-unit>
        <trans-unit id="8580c4ed8412420bdb31f0fd968917b418c9b683" translate="yes" xml:space="preserve">
          <source>PL_opfreehook</source>
          <target state="translated">PL_opfreehook</target>
        </trans-unit>
        <trans-unit id="1ea0ae7f916bba0e2d65d3f5e397518df6421db0" translate="yes" xml:space="preserve">
          <source>PL_parser</source>
          <target state="translated">PL_parser</target>
        </trans-unit>
        <trans-unit id="a1ba1b111f1bd4ef5560f0aba4db14fb5b648989" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;bufend</source>
          <target state="translated">PL_parser-&amp;gt;bufend</target>
        </trans-unit>
        <trans-unit id="4ffd7f7e9f684e2ac2acd1022f7d484dad2e34aa" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;bufptr</source>
          <target state="translated">PL_parser-&amp;gt;bufptr</target>
        </trans-unit>
        <trans-unit id="156db8245817daed759b7efa269aa1fa08d7c60f" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;linestart</source>
          <target state="translated">PL_parser-&amp;gt;linestart</target>
        </trans-unit>
        <trans-unit id="f3925768ae35a292a4029140714b6588c5e64e0b" translate="yes" xml:space="preserve">
          <source>PL_parser-&amp;gt;linestr</source>
          <target state="translated">PL_parser-&amp;gt;linestr</target>
        </trans-unit>
        <trans-unit id="5953d6c1415777fc39f640d7afdfbe421c630e4b" translate="yes" xml:space="preserve">
          <source>PL_peepp</source>
          <target state="translated">PL_peepp</target>
        </trans-unit>
        <trans-unit id="23f9bc613548aff72d81a202d18dc15c555857b5" translate="yes" xml:space="preserve">
          <source>PL_perl_destruct_level</source>
          <target state="translated">PL_perl_destruct_level</target>
        </trans-unit>
        <trans-unit id="4dc9044257de8485e549d1258c8af6f65840e3bc" translate="yes" xml:space="preserve">
          <source>PL_phase</source>
          <target state="translated">PL_phase</target>
        </trans-unit>
        <trans-unit id="3ca0d0f372124573d600002fd0243c51f2aa055b" translate="yes" xml:space="preserve">
          <source>PL_rpeepp</source>
          <target state="translated">PL_rpeepp</target>
        </trans-unit>
        <trans-unit id="9a6052a2eea657750753d5df3e606b572655ea35" translate="yes" xml:space="preserve">
          <source>PL_rs</source>
          <target state="translated">PL_rs</target>
        </trans-unit>
        <trans-unit id="4e568dad89113d95347ce2d684a8f138aa36f0ed" translate="yes" xml:space="preserve">
          <source>PL_runops</source>
          <target state="translated">PL_runops</target>
        </trans-unit>
        <trans-unit id="62365231be3a355fafa53e55fa66796607ba14ec" translate="yes" xml:space="preserve">
          <source>PL_sv_no</source>
          <target state="translated">PL_sv_no</target>
        </trans-unit>
        <trans-unit id="3b9fd4325c9bc3259c052f790475bbdffd718b23" translate="yes" xml:space="preserve">
          <source>PL_sv_undef</source>
          <target state="translated">PL_sv_undef</target>
        </trans-unit>
        <trans-unit id="eac2975fac14a22f24d02b8e8c9f80fbbc301253" translate="yes" xml:space="preserve">
          <source>PL_sv_yes</source>
          <target state="translated">PL_sv_yes</target>
        </trans-unit>
        <trans-unit id="30d70f1907515b6780f3b00f9849c127ebc98052" translate="yes" xml:space="preserve">
          <source>PL_sv_zero</source>
          <target state="translated">PL_sv_zero</target>
        </trans-unit>
        <trans-unit id="0c95dc6163ff0d09e82f44e7c50db7ad6b089bf3" translate="yes" xml:space="preserve">
          <source>PM</source>
          <target state="translated">PM</target>
        </trans-unit>
        <trans-unit id="19a5dacaba3003d35cef0b5dd4c4d6d1215e4190" translate="yes" xml:space="preserve">
          <source>PMLIBDIRS</source>
          <target state="translated">PMLIBDIRS</target>
        </trans-unit>
        <trans-unit id="e534377de0fa61e7e7f73c91eeaaeb5f3113440d" translate="yes" xml:space="preserve">
          <source>PM_FILTER</source>
          <target state="translated">PM_FILTER</target>
        </trans-unit>
        <trans-unit id="96bb1ede828d06c7c676fc4aca0b2ab0fc3aaec6" translate="yes" xml:space="preserve">
          <source>POD</source>
          <target state="translated">POD</target>
        </trans-unit>
        <trans-unit id="9757efd691d77c4c7ce7af22ae0498da057b96f2" translate="yes" xml:space="preserve">
          <source>POD commands.</source>
          <target state="translated">POD 명령.</target>
        </trans-unit>
        <trans-unit id="455b730e0dab95d3eae1711d336324ae10dca646" translate="yes" xml:space="preserve">
          <source>POD document had syntax errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f47ae786af8b3ae6d44df79389191724c8e9b20" translate="yes" xml:space="preserve">
          <source>POD documentation</source>
          <target state="translated">POD 문서</target>
        </trans-unit>
        <trans-unit id="e5ddb6a6721405eb11c587453e0434d2f646aa07" translate="yes" xml:space="preserve">
          <source>POD2MAN_macro</source>
          <target state="translated">POD2MAN_macro</target>
        </trans-unit>
        <trans-unit id="6b88d12ed58c242ae59354f0c80b03f6832c1433" translate="yes" xml:space="preserve">
          <source>POD_MAN_DATE</source>
          <target state="translated">POD_MAN_DATE</target>
        </trans-unit>
        <trans-unit id="3bd1038b0ae3b6d74e0afdd1bb9c713c175f1f33" translate="yes" xml:space="preserve">
          <source>PODs: Embedded Documentation</source>
          <target state="translated">포드 : 임베디드 설명서</target>
        </trans-unit>
        <trans-unit id="e9ef8762a5cdd4b21f20cb72bb574a123f822819" translate="yes" xml:space="preserve">
          <source>POLLUTE</source>
          <target state="translated">POLLUTE</target>
        </trans-unit>
        <trans-unit id="7c60b6a84c4fa21ca716ea553da79d32a8b4b3f5" translate="yes" xml:space="preserve">
          <source>POP this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422bdd5ecea225a661cd58d7aec66d4b2dd4ec19" translate="yes" xml:space="preserve">
          <source>POPMARK</source>
          <target state="translated">POPMARK</target>
        </trans-unit>
        <trans-unit id="27d22d20fdc49ff65099906e5eeacad058aeb916" translate="yes" xml:space="preserve">
          <source>POPULATE AN INSTALLATION WITH LOTS OF MODULES</source>
          <target state="translated">많은 모듈로 설치하기</target>
        </trans-unit>
        <trans-unit id="559b325ff8c56a5275f0418c2cb35c717f329ab4" translate="yes" xml:space="preserve">
          <source>POP_MULTICALL</source>
          <target state="translated">POP_MULTICALL</target>
        </trans-unit>
        <trans-unit id="f115e0763b8e1fa2700c8b66065d9ecad5652f97" translate="yes" xml:space="preserve">
          <source>POPi</source>
          <target state="translated">POPi</target>
        </trans-unit>
        <trans-unit id="de4637475c390ec554bf61ca9bf90b604dd66f87" translate="yes" xml:space="preserve">
          <source>POPl</source>
          <target state="translated">POPl</target>
        </trans-unit>
        <trans-unit id="1f8378be0314d00f232db6392d0dee3b4cba7cec" translate="yes" xml:space="preserve">
          <source>POPn</source>
          <target state="translated">POPn</target>
        </trans-unit>
        <trans-unit id="881ade6b010d1a0ff0605891f056894ec0ebaf24" translate="yes" xml:space="preserve">
          <source>POPp</source>
          <target state="translated">POPp</target>
        </trans-unit>
        <trans-unit id="2b16d67d788fc2a0b06cc83a6aa4430272a36151" translate="yes" xml:space="preserve">
          <source>POPpbytex</source>
          <target state="translated">POPpbytex</target>
        </trans-unit>
        <trans-unit id="72a0581061aed9496ced6a70fa2506fcf048aa24" translate="yes" xml:space="preserve">
          <source>POPpx</source>
          <target state="translated">POPpx</target>
        </trans-unit>
        <trans-unit id="34b3af9830146fcb3dbe82b64f132ac575705b17" translate="yes" xml:space="preserve">
          <source>POPs</source>
          <target state="translated">POPs</target>
        </trans-unit>
        <trans-unit id="c628edc5ff30bd221557e10c7956b7ff83c06058" translate="yes" xml:space="preserve">
          <source>POPu</source>
          <target state="translated">POPu</target>
        </trans-unit>
        <trans-unit id="08076828e24a85540dae08b464ebbcc19844c984" translate="yes" xml:space="preserve">
          <source>POPul</source>
          <target state="translated">POPul</target>
        </trans-unit>
        <trans-unit id="dfb1d5b6c2198f6b90dd9fb2aa67809b15a77598" translate="yes" xml:space="preserve">
          <source>PORTABILITY</source>
          <target state="translated">PORTABILITY</target>
        </trans-unit>
        <trans-unit id="fac926bb8a4de690e4dca18f3225a7ad2a06037c" translate="yes" xml:space="preserve">
          <source>PORTABILITY CAVEATS</source>
          <target state="translated">휴대 성 경고</target>
        </trans-unit>
        <trans-unit id="4abd3985ba804364272767c04cdc211615f77c56" translate="yes" xml:space="preserve">
          <source>POS</source>
          <target state="translated">POS</target>
        </trans-unit>
        <trans-unit id="eeaaaed2401766705588000c95399212adce6cd4" translate="yes" xml:space="preserve">
          <source>POS is absolute position. (Seek relative to the start of the file)</source>
          <target state="translated">POS는 절대 위치입니다. (파일의 시작과 관련하여 탐색)</target>
        </trans-unit>
        <trans-unit id="eff46aebd5f7e19f03d6237cd80da90014c8e132" translate="yes" xml:space="preserve">
          <source>POS is an offset from the current position. (Seek relative to current)</source>
          <target state="translated">POS는 현재 위치에서 오프셋입니다. (전류를 기준으로 탐색)</target>
        </trans-unit>
        <trans-unit id="4a3852f381cc7917e0a6f01c96db05db1939d7a5" translate="yes" xml:space="preserve">
          <source>POS is an offset from the end of the file. (Seek relative to end)</source>
          <target state="translated">POS는 파일 끝에서의 오프셋입니다. (끝을 기준으로 탐색)</target>
        </trans-unit>
        <trans-unit id="b7e74b0c6f2adb38fbd54e1e4d295584367004f6" translate="yes" xml:space="preserve">
          <source>POS1..POS2</source>
          <target state="translated">POS1..POS2</target>
        </trans-unit>
        <trans-unit id="23507e798d66fee0b05313c2a15e15ff93e82f20" translate="yes" xml:space="preserve">
          <source>POSIX</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="ded226beebc135cf61ed2043f478ea25c067ca0b" translate="yes" xml:space="preserve">
          <source>POSIX (Linux and other Unixes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae89c95fa22e7b32fa45fce7e8bf404e997e9054" translate="yes" xml:space="preserve">
          <source>POSIX - Perl interface to IEEE Std 1003.1</source>
          <target state="translated">POSIX-IEEE Std 1003.1에 대한 Perl 인터페이스</target>
        </trans-unit>
        <trans-unit id="d243eb13195dcdb315427d56a4c35f42dcb04024" translate="yes" xml:space="preserve">
          <source>POSIX CONSTANTS</source>
          <target state="translated">POSIX 상수</target>
        </trans-unit>
        <trans-unit id="5c9c75047d91af941801f6c6002bbc479d31b75d" translate="yes" xml:space="preserve">
          <source>POSIX Character Classes</source>
          <target state="translated">POSIX 문자 클래스</target>
        </trans-unit>
        <trans-unit id="f2d1e7de0e60a574e6d87a0cc3a67de6faf43784" translate="yes" xml:space="preserve">
          <source>POSIX FLAGS</source>
          <target state="translated">POSIX 플래그</target>
        </trans-unit>
        <trans-unit id="569385480ca60be76d48d613b39e1bc91f7990bf" translate="yes" xml:space="preserve">
          <source>POSIX FUNCTIONS</source>
          <target state="translated">POSIX 기능</target>
        </trans-unit>
        <trans-unit id="06b4e35ce432cb4702f6a995fe95c52f8db39c2a" translate="yes" xml:space="preserve">
          <source>POSIX character classes and their Unicode and Perl equivalents:</source>
          <target state="translated">POSIX 문자 클래스 및 해당 유니 코드 및 Perl 동등 항목 :</target>
        </trans-unit>
        <trans-unit id="72593fbc583aea6c901e13572f670a7d0d357161" translate="yes" xml:space="preserve">
          <source>POSIX character classes can be part of a larger bracketed character class. For example,</source>
          <target state="translated">POSIX 문자 클래스는 더 큰 대괄호 문자 클래스의 일부가 될 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="b4c2f7d57ee138ef8741ea704a671378863f20a1" translate="yes" xml:space="preserve">
          <source>POSIX character classes have the form &lt;code&gt;[:class:]&lt;/code&gt;, where</source>
          <target state="translated">POSIX 문자 클래스는 &lt;code&gt;[:class:]&lt;/code&gt; 형식입니다 . 여기서</target>
        </trans-unit>
        <trans-unit id="dbb6744a286cd1f9e2be5ebee0f36cd6af45a3ad" translate="yes" xml:space="preserve">
          <source>POSIX class [:%s:] unknown in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428e4a79ce459858445ef089aecec522eb90d630" translate="yes" xml:space="preserve">
          <source>POSIX does not define a way to get the name of the current per-thread locale. Some systems, such as Darwin and NetBSD do implement a function, &lt;a href=&quot;http://man.he.net/man3/querylocale&quot;&gt;querylocale(3)&lt;/a&gt; to do this. On non-Windows systems without it, such as Linux, there are some additional caveats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61668ef8f25bddd14989c415629b0df07e51f44b" translate="yes" xml:space="preserve">
          <source>POSIX functions:</source>
          <target state="translated">POSIX 기능 :</target>
        </trans-unit>
        <trans-unit id="23d9be609f6cdb2b5fd3e3974d45aa5d550f1e82" translate="yes" xml:space="preserve">
          <source>POSIX getpgrp can't take an argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48724a797b049c9d53d5a742b51241d8e3be59bb" translate="yes" xml:space="preserve">
          <source>POSIX syntax [%c %c] belongs inside character classes%s in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2275e13c6ce1651bf3ccade0b55f6ff9a8a1d4a0" translate="yes" xml:space="preserve">
          <source>POSIX syntax [. .] is reserved for future extensions in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acfd5b7d6438b9a75db1cd24c4fcafe1551e2d3" translate="yes" xml:space="preserve">
          <source>POSIX syntax [= =] is reserved for future extensions in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04680e6e37ce6d2dcbb31e0e8a36d7516c0e506b" translate="yes" xml:space="preserve">
          <source>POSIX-BC?</source>
          <target state="translated">POSIX-BC?</target>
        </trans-unit>
        <trans-unit id="864a3ec5736c1f231ee60dfa1ac4b3cf0adce372" translate="yes" xml:space="preserve">
          <source>POSIX.2</source>
          <target state="translated">POSIX.2</target>
        </trans-unit>
        <trans-unit id="3777385d2dd1e8926a9b75a14303ee4b22211baa" translate="yes" xml:space="preserve">
          <source>POSIX.pm</source>
          <target state="translated">POSIX.pm</target>
        </trans-unit>
        <trans-unit id="d45e49d46b986bef0fad349a44b3e4ef42953d70" translate="yes" xml:space="preserve">
          <source>POSIX::SigAction</source>
          <target state="translated">POSIX::SigAction</target>
        </trans-unit>
        <trans-unit id="74a299dde6a5128d521b652f2ba458a4da06a6a1" translate="yes" xml:space="preserve">
          <source>POSIX::SigRt</source>
          <target state="translated">POSIX::SigRt</target>
        </trans-unit>
        <trans-unit id="9cca0191c626eb89ac7a531f06862f8df3747e24" translate="yes" xml:space="preserve">
          <source>POSIX::SigSet</source>
          <target state="translated">POSIX::SigSet</target>
        </trans-unit>
        <trans-unit id="2b1f5cae0839a5eb5bae78193bd1a07008a2110c" translate="yes" xml:space="preserve">
          <source>POSIX::Termios</source>
          <target state="translated">POSIX::Termios</target>
        </trans-unit>
        <trans-unit id="f2fc877cb9d4fb0c8fe89637708b84a7a1914e7e" translate="yes" xml:space="preserve">
          <source>POSIX::localeconv</source>
          <target state="translated">POSIX::localeconv</target>
        </trans-unit>
        <trans-unit id="fa4963cab46f1be7f819925dbfd48f68153bfc4a" translate="yes" xml:space="preserve">
          <source>POST-STRING</source>
          <target state="translated">POST-STRING</target>
        </trans-unit>
        <trans-unit id="78bf4921d3ce248ca8a0791cbb630010fb50de77" translate="yes" xml:space="preserve">
          <source>POST-TEST BEHAVIORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0012d64d9af33bc1cf8483ab0fda421fad18ba8" translate="yes" xml:space="preserve">
          <source>POSTSCRIPT</source>
          <target state="translated">POSTSCRIPT</target>
        </trans-unit>
        <trans-unit id="1d79b59bd56f8e5cc236dd1e2999c0342b99562a" translate="yes" xml:space="preserve">
          <source>PPM_INSTALL_EXEC</source>
          <target state="translated">PPM_INSTALL_EXEC</target>
        </trans-unit>
        <trans-unit id="db09ca421142063346f839adb19aabf5e75f8981" translate="yes" xml:space="preserve">
          <source>PPM_INSTALL_SCRIPT</source>
          <target state="translated">PPM_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="aa13622e03515dcb1465294f07cff1a0c77db609" translate="yes" xml:space="preserve">
          <source>PPM_UNINSTALL_EXEC</source>
          <target state="translated">PPM_UNINSTALL_EXEC</target>
        </trans-unit>
        <trans-unit id="d8ecd82333fa046b1554ecfb6fa4f6ddcc33fe7c" translate="yes" xml:space="preserve">
          <source>PPM_UNINSTALL_SCRIPT</source>
          <target state="translated">PPM_UNINSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="f581395efe2773e539af041b5a27fa1d0df00b1e" translate="yes" xml:space="preserve">
          <source>PRE-STRING</source>
          <target state="translated">PRE-STRING</target>
        </trans-unit>
        <trans-unit id="7840941760ebcd9fee13ec0f1666aa06fbb11bc3" translate="yes" xml:space="preserve">
          <source>PREAMBLE</source>
          <target state="translated">PREAMBLE</target>
        </trans-unit>
        <trans-unit id="69db2c13c51cc2aaf32e02ecde5988835599fa47" translate="yes" xml:space="preserve">
          <source>PREBUILT BINARIES OF PERL FOR SOLARIS.</source>
          <target state="translated">솔라리스를위한 펄의 사전 바이너리.</target>
        </trans-unit>
        <trans-unit id="2359029764e2a09b32c48fea4348d906d2342f23" translate="yes" xml:space="preserve">
          <source>PREFACE</source>
          <target state="translated">PREFACE</target>
        </trans-unit>
        <trans-unit id="890121a7a9c78fd5d5d495e5aa9c86c681e6fbbb" translate="yes" xml:space="preserve">
          <source>PREFIX</source>
          <target state="translated">PREFIX</target>
        </trans-unit>
        <trans-unit id="4772fd326573fd42e768a1b15dd58bbb9cc8b317" translate="yes" xml:space="preserve">
          <source>PREFIX and LIB attribute</source>
          <target state="translated">PREFIX 및 LIB 속성</target>
        </trans-unit>
        <trans-unit id="c6ea2417cccb8facb1f2ec2c030cf1e5c2fcb2f6" translate="yes" xml:space="preserve">
          <source>PREFIX and LIB can be used to set several INSTALL* attributes in one go. Here's an example for installing into your home directory.</source>
          <target state="translated">PREFIX 및 LIB를 사용하여 여러 INSTALL * 속성을 한 번에 설정할 수 있습니다. 다음은 홈 디렉토리에 설치하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="40aa4e60b9a6d17247b06ec0bb028f55b0430593" translate="yes" xml:space="preserve">
          <source>PREFIX is the name of the SYMREF you're walking.</source>
          <target state="translated">PREFIX는 걷는 SYMREF의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9bf165ae0cf9c95cc4700f79948abefc55e94ba2" translate="yes" xml:space="preserve">
          <source>PREFIX vs INSTALL_BASE from Module::Build::Cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300c67e39443a38d0f595a8a987e17d646e3c291" translate="yes" xml:space="preserve">
          <source>PREFS</source>
          <target state="translated">PREFS</target>
        </trans-unit>
        <trans-unit id="9bc7b53b4ddb9c0604309a8f097387c59f61cafb" translate="yes" xml:space="preserve">
          <source>PREPARING TO USE LOCALES</source>
          <target state="translated">로캘 사용 준비</target>
        </trans-unit>
        <trans-unit id="281d6f01426cc7b0d2d1be7a9e3ef9753991bf8a" translate="yes" xml:space="preserve">
          <source>PREREQUISITES</source>
          <target state="translated">PREREQUISITES</target>
        </trans-unit>
        <trans-unit id="109e7210182e5f1a38490846d4f7c1bf6d1efeaf" translate="yes" xml:space="preserve">
          <source>PREREQUISITES FOR COMPILING PERL ON CYGWIN</source>
          <target state="translated">CYGWIN에서 Perl을 컴파일하기위한 전제 조건</target>
        </trans-unit>
        <trans-unit id="631154b345aa3eeebbb9ab224187fa1d00f58ec0" translate="yes" xml:space="preserve">
          <source>PREREQ_FATAL</source>
          <target state="translated">PREREQ_FATAL</target>
        </trans-unit>
        <trans-unit id="cc36dd5ce565a7cb948811b12f17cd998c1af8a3" translate="yes" xml:space="preserve">
          <source>PREREQ_PM</source>
          <target state="translated">PREREQ_PM</target>
        </trans-unit>
        <trans-unit id="17211ee0ce1ee1a431f47188755a25af7e95ddfb" translate="yes" xml:space="preserve">
          <source>PREREQ_PRINT</source>
          <target state="translated">PREREQ_PRINT</target>
        </trans-unit>
        <trans-unit id="049a53126896f9ee9235f6cd3a06e36d43ae1ed3" translate="yes" xml:space="preserve">
          <source>PREVIOUS</source>
          <target state="translated">PREVIOUS</target>
        </trans-unit>
        <trans-unit id="887506d429affdf4577f2dad5a84967ff613f079" translate="yes" xml:space="preserve">
          <source>PRINT this, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b70c55e20c39ea4a8910e43c08c5a1a3cf5939" translate="yes" xml:space="preserve">
          <source>PRINTF this, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4892b6aa3144eac6b208bf2c1cb9ec283de1eb47" translate="yes" xml:space="preserve">
          <source>PRINTF this, format, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3808058ed9e406c9c9ccb514d07d07d63bd4a1a" translate="yes" xml:space="preserve">
          <source>PRINT_PREREQ</source>
          <target state="translated">PRINT_PREREQ</target>
        </trans-unit>
        <trans-unit id="b0b7ba4666a92774e0d1afe02f2e20982b307a35" translate="yes" xml:space="preserve">
          <source>PRIVATE</source>
          <target state="translated">PRIVATE</target>
        </trans-unit>
        <trans-unit id="d596e5c41b06e835a227eaeb7f80e95e078526da" translate="yes" xml:space="preserve">
          <source>PRIVATE METHODS AND DATA</source>
          <target state="translated">전용 방법 및 데이터</target>
        </trans-unit>
        <trans-unit id="bf099c2f51b2f30ab3cd4d430d41314704aaefea" translate="yes" xml:space="preserve">
          <source>PRN</source>
          <target state="translated">PRN</target>
        </trans-unit>
        <trans-unit id="28128cb215ccf5b12e0dff7a0c33d632bc940a28" translate="yes" xml:space="preserve">
          <source>PROBES</source>
          <target state="translated">PROBES</target>
        </trans-unit>
        <trans-unit id="9f903b4f167ea635d9adabe61a39c7254588d35a" translate="yes" xml:space="preserve">
          <source>PROCESS</source>
          <target state="translated">PROCESS</target>
        </trans-unit>
        <trans-unit id="bd58afa2d210ca492e6069543fe6348628d2a473" translate="yes" xml:space="preserve">
          <source>PRODUCTTYPE provides additional information about the system. It should be one of the following integer values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924eaf1172c6dafd288f2618c0a1efe247bb92db" translate="yes" xml:space="preserve">
          <source>PROFILING</source>
          <target state="translated">PROFILING</target>
        </trans-unit>
        <trans-unit id="85dfd02e93a90ca8a93ed7e5af4995f7549887d0" translate="yes" xml:space="preserve">
          <source>PROFILING TOOLS</source>
          <target state="translated">프로파일 링 도구</target>
        </trans-unit>
        <trans-unit id="9e3a8f7206c88ef34624181efda07f832c576870" translate="yes" xml:space="preserve">
          <source>PROGRAMMER'S INTERFACE</source>
          <target state="translated">프로그래머의 인터페이스</target>
        </trans-unit>
        <trans-unit id="0e45003b98a7dec4792e15961899b4d4a9444502" translate="yes" xml:space="preserve">
          <source>PROTOCV</source>
          <target state="translated">PROTOCV</target>
        </trans-unit>
        <trans-unit id="1042ce14dc94ead28c8d4cf2fe6af4af4e7b1c1d" translate="yes" xml:space="preserve">
          <source>PROVIDED BY HASH BASE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577a025eaaf1a5d1117d65778ab9be225bda833c" translate="yes" xml:space="preserve">
          <source>PROXY SUPPORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8921f284e1641a8d70be64de299d5e0a94c6b03e" translate="yes" xml:space="preserve">
          <source>PROXYSUBS</source>
          <target state="translated">PROXYSUBS</target>
        </trans-unit>
        <trans-unit id="9e97d57f23d497e98a3c17e698f142751c84db81" translate="yes" xml:space="preserve">
          <source>PSEUDO RESPONSES</source>
          <target state="translated">PSEUDO 응답</target>
        </trans-unit>
        <trans-unit id="e5774205e1c438a7dce76aec5e8d405647cc437c" translate="yes" xml:space="preserve">
          <source>PTR</source>
          <target state="translated">PTR</target>
        </trans-unit>
        <trans-unit id="59b6d82c96a6ad525ea2e87882171960ba72c80f" translate="yes" xml:space="preserve">
          <source>PUSH this, LIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4d85a958623a5705575960b9b4ae857188fa7f" translate="yes" xml:space="preserve">
          <source>PUSHCOLOR, POPCOLOR, and LOCALCOLOR were contributed by openmethods.com voice solutions.</source>
          <target state="translated">PUSHCOLOR, POPCOLOR 및 LOCALCOLOR는 openmethods.com 음성 솔루션에 의해 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="7ccb58529f4dd4bec9c195e9698a530285c95210" translate="yes" xml:space="preserve">
          <source>PUSHMARK</source>
          <target state="translated">PUSHMARK</target>
        </trans-unit>
        <trans-unit id="e0959236ce9e6a3ee6d0536ef1b5d41c25bdc287" translate="yes" xml:space="preserve">
          <source>PUSH_MULTICALL</source>
          <target state="translated">PUSH_MULTICALL</target>
        </trans-unit>
        <trans-unit id="d2fc71d468598e7e17d7a4694787b20bfb19bcc9" translate="yes" xml:space="preserve">
          <source>PUSHi</source>
          <target state="translated">PUSHi</target>
        </trans-unit>
        <trans-unit id="d15a3485a9c1b5329a46d5893c013245bf25dd58" translate="yes" xml:space="preserve">
          <source>PUSHmortal</source>
          <target state="translated">PUSHmortal</target>
        </trans-unit>
        <trans-unit id="b5352ca889b861909f1a55c37c2d94630bbaed77" translate="yes" xml:space="preserve">
          <source>PUSHn</source>
          <target state="translated">PUSHn</target>
        </trans-unit>
        <trans-unit id="6bb691543b344c21498b93ac1a6f1ded600df37b" translate="yes" xml:space="preserve">
          <source>PUSHp</source>
          <target state="translated">PUSHp</target>
        </trans-unit>
        <trans-unit id="cf9f5d61ca9b817693abc1251411248b1fc53bf8" translate="yes" xml:space="preserve">
          <source>PUSHs</source>
          <target state="translated">PUSHs</target>
        </trans-unit>
        <trans-unit id="cf409a219f683f1aed78e90c713fe1352afb43db" translate="yes" xml:space="preserve">
          <source>PUSHu</source>
          <target state="translated">PUSHu</target>
        </trans-unit>
        <trans-unit id="8e24a802cdd0ad94b85001d8faebf06f56fb0c32" translate="yes" xml:space="preserve">
          <source>PUTBACK</source>
          <target state="translated">PUTBACK</target>
        </trans-unit>
        <trans-unit id="13e54ce098168f1fa1db9a288e5396806317b03b" translate="yes" xml:space="preserve">
          <source>PV</source>
          <target state="translated">PV</target>
        </trans-unit>
        <trans-unit id="4f4fc2fe1cdfbd4b127686b3c4701bfcc8bf5850" translate="yes" xml:space="preserve">
          <source>PVN</source>
          <target state="translated">PVN</target>
        </trans-unit>
        <trans-unit id="ddf5f9373a1b439843920fd79d11c1d494464262" translate="yes" xml:space="preserve">
          <source>PVX</source>
          <target state="translated">PVX</target>
        </trans-unit>
        <trans-unit id="dbe7115eeb4102987d54e476c53cd399a6656a26" translate="yes" xml:space="preserve">
          <source>PVers</source>
          <target state="translated">PVers</target>
        </trans-unit>
        <trans-unit id="4db84d6ad2a10668614932a965ea5a3997c49335" translate="yes" xml:space="preserve">
          <source>Pack Recipes</source>
          <target state="translated">팩 레시피</target>
        </trans-unit>
        <trans-unit id="e5a69f2e40897b5daef39457bf875f755ff8707d" translate="yes" xml:space="preserve">
          <source>Pack and Unpack</source>
          <target state="translated">포장 및 포장 풀기</target>
        </trans-unit>
        <trans-unit id="ae88d737dc553c18917f526e7ed4fab3bcf7d255" translate="yes" xml:space="preserve">
          <source>Pack and unpack can operate in two modes: character mode (&lt;code&gt;C0&lt;/code&gt; mode) where the packed string is processed per character, and UTF-8 byte mode (&lt;code&gt;U0&lt;/code&gt; mode) where the packed string is processed in its UTF-8-encoded Unicode form on a byte-by-byte basis. Character mode is the default unless the format string starts with &lt;code&gt;U&lt;/code&gt; . You can always switch mode mid-format with an explicit &lt;code&gt;C0&lt;/code&gt; or &lt;code&gt;U0&lt;/code&gt; in the format. This mode remains in effect until the next mode change, or until the end of the &lt;code&gt;()&lt;/code&gt; group it (directly) applies to.</source>
          <target state="translated">압축 및 압축 해제는 압축 된 문자열이 문자별로 처리되는 문자 모드 ( &lt;code&gt;C0&lt;/code&gt; 모드)와 압축 된 문자열이 UTF-8로 인코딩 된 유니 코드 형식으로 처리되는 UTF-8 바이트 모드 ( &lt;code&gt;U0&lt;/code&gt; 모드)의 두 가지 모드로 작동 할 수 있습니다. 바이트 단위. 형식 문자열이 &lt;code&gt;U&lt;/code&gt; 로 시작하지 않으면 문자 모드가 기본값 입니다. 형식에서 명시 적 &lt;code&gt;C0&lt;/code&gt; 또는 &lt;code&gt;U0&lt;/code&gt; 을 사용하여 모드 중간 형식을 항상 전환 할 수 있습니다 . 이 모드는 다음 모드가 변경 될 때까지 또는 &lt;code&gt;()&lt;/code&gt; 그룹이 (직접적으로) 적용될 때까지 유효 합니다.</target>
        </trans-unit>
        <trans-unit id="6e3eb6050cd406a98ecf6801a69ce89a46275ed4" translate="yes" xml:space="preserve">
          <source>Pack and unpack can operate in two modes: character mode (&lt;code&gt;C0&lt;/code&gt; mode) where the packed string is processed per character, and UTF-8 byte mode (&lt;code&gt;U0&lt;/code&gt; mode) where the packed string is processed in its UTF-8-encoded Unicode form on a byte-by-byte basis. Character mode is the default unless the format string starts with &lt;code&gt;U&lt;/code&gt;. You can always switch mode mid-format with an explicit &lt;code&gt;C0&lt;/code&gt; or &lt;code&gt;U0&lt;/code&gt; in the format. This mode remains in effect until the next mode change, or until the end of the &lt;code&gt;()&lt;/code&gt; group it (directly) applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1557120d5088a59d57273db042de727192d13fe4" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;overload.pm&lt;/code&gt; provides the following public functions:</source>
          <target state="translated">패키지 &lt;code&gt;overload.pm&lt;/code&gt; 은 다음과 같은 공용 함수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="854d1d4510ef2ba36738b3c6bee00faff7d95b8e" translate="yes" xml:space="preserve">
          <source>Package Lexicals</source>
          <target state="translated">패키지 어휘</target>
        </trans-unit>
        <trans-unit id="2c11074689b7e2ad2c208b4e9d700f62e8d77364" translate="yes" xml:space="preserve">
          <source>Package for overloading Perl operations</source>
          <target state="translated">과부하 작업을위한 패키지</target>
        </trans-unit>
        <trans-unit id="0bb1778e3f25a2a84d101d6e9168311f3de452b1" translate="yes" xml:space="preserve">
          <source>Package lexicals declared with &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; in the main block of a package using &lt;b&gt;AutoLoader&lt;/b&gt; will not be visible to auto-loaded subroutines, due to the fact that the given scope ends at the &lt;code&gt;__END__&lt;/code&gt; marker. A module using such variables as package globals will not work properly under the &lt;b&gt;AutoLoader&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;AutoLoader&lt;/b&gt; 를 사용하여 패키지의 메인 블록에서 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 로 선언 된 패키지 어휘는 주어진 범위가 &lt;code&gt;__END__&lt;/code&gt; 마커 에서 끝나기 때문에 자동로드 서브 루틴에 표시되지 않습니다 . 패키지 전역과 같은 변수를 사용하는 모듈은 &lt;b&gt;AutoLoader에서&lt;/b&gt; 제대로 작동하지 않습니다 .&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bb7c7fc91718f394864d4df79b8d81e469c31729" translate="yes" xml:space="preserve">
          <source>Package lexicals declared with &lt;code&gt;my&lt;/code&gt; in the main block of a package using &lt;b&gt;AutoLoader&lt;/b&gt; will not be visible to auto-loaded subroutines, due to the fact that the given scope ends at the &lt;code&gt;__END__&lt;/code&gt; marker. A module using such variables as package globals will not work properly under the &lt;b&gt;AutoLoader&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fda0710845c0ff2e124df892b08c2fdc3b0249" translate="yes" xml:space="preserve">
          <source>Package names are sometimes an exception to this rule. Perl informally reserves lowercase module names for &quot;pragma&quot; modules like &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;strict&lt;/code&gt; . Other modules should begin with a capital letter and use mixed case, but probably without underscores due to limitations in primitive file systems' representations of module names as files that must fit into a few sparse bytes.</source>
          <target state="translated">패키지 이름은 때때로이 규칙에서 예외입니다. Perl은 &lt;code&gt;integer&lt;/code&gt; 및 &lt;code&gt;strict&lt;/code&gt; 와 같은 &quot;pragma&quot;모듈의 소문자 모듈 이름을 비공식적으로 예약 합니다. 다른 모듈은 대문자로 시작하고 대소 문자를 혼합하여 사용해야하지만, 기본 파일 시스템의 모듈 이름 표현이 몇 개의 희소 바이트에 맞아야하는 파일로 제한되기 때문에 밑줄이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="4c33b515a6c281a7a7457121b95c01504122af95" translate="yes" xml:space="preserve">
          <source>Package names are sometimes an exception to this rule. Perl informally reserves lowercase module names for &quot;pragma&quot; modules like &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;strict&lt;/code&gt;. Other modules should begin with a capital letter and use mixed case, but probably without underscores due to limitations in primitive file systems' representations of module names as files that must fit into a few sparse bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017a94912f4272ea63da9e237abc82a6ecd1cbbc" translate="yes" xml:space="preserve">
          <source>Package namespace of currently executing code.</source>
          <target state="translated">현재 실행중인 코드의 패키지 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="b77eb8988a1d4f067854db5e1f2b1a7c6ddf5108" translate="yes" xml:space="preserve">
          <source>Package the module using &quot;make dist&quot;</source>
          <target state="translated">&quot;make dist&quot;를 사용하여 모듈 패키지</target>
        </trans-unit>
        <trans-unit id="dadc452bc83dd321cf9ff63134d60199b40bf1bd" translate="yes" xml:space="preserve">
          <source>Package-specific Attribute Handling</source>
          <target state="translated">패키지 별 속성 처리</target>
        </trans-unit>
        <trans-unit id="1b6b83de2c1ebd183fc9268fc7fc44ce0413fd67" translate="yes" xml:space="preserve">
          <source>Package/Module names are an exception to this rule. Perl informally reserves lowercase module names for 'pragma' modules like integer and strict. Other modules normally begin with a capital letter and use mixed case with no underscores (need to be short and portable).</source>
          <target state="translated">패키지 / 모듈 이름은이 규칙에서 예외입니다. Perl은 정수 및 엄격과 같은 'pragma'모듈의 소문자 모듈 이름을 비공식적으로 예약합니다. 다른 모듈은 일반적으로 대문자로 시작하고 밑줄이없는 대소 문자를 혼합하여 사용합니다 (짧고 휴대 가능해야 함).</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="dcec9cb396ed550d472d01c925021db01eb054ef" translate="yes" xml:space="preserve">
          <source>Packages claim that there won't be errors on calls to or from packages explicitly marked as safe by inclusion in &lt;code&gt;@CARP_NOT&lt;/code&gt; , or (if that array is empty) &lt;code&gt;@ISA&lt;/code&gt; . The ability to override what @ISA says is new in 5.8.</source>
          <target state="translated">패키지는 &lt;code&gt;@CARP_NOT&lt;/code&gt; 또는 (배열이 비어있는 경우) &lt;code&gt;@ISA&lt;/code&gt; 에 포함되어 안전하다고 표시된 패키지를 호출하거나 호출 할 때 오류가 없다고 주장합니다 . @ISA의 말을 무시하는 기능은 5.8의 새로운 기능입니다.</target>
        </trans-unit>
        <trans-unit id="d20bf1497d93a5413cd140ff9c5fd0ea3f605c1b" translate="yes" xml:space="preserve">
          <source>Packages claim that there won't be errors on calls to or from packages explicitly marked as safe by inclusion in &lt;code&gt;@CARP_NOT&lt;/code&gt;, or (if that array is empty) &lt;code&gt;@ISA&lt;/code&gt;. The ability to override what @ISA says is new in 5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc8e8a892ee953e2d150356ce7f795f7e40a13f" translate="yes" xml:space="preserve">
          <source>Packages may themselves contain package separators, as in &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; . This implies nothing about the order of name lookups, however. There are no relative packages: all symbols are either local to the current package, or must be fully qualified from the outer package name down. For instance, there is nowhere within package &lt;code&gt;OUTER&lt;/code&gt; that &lt;code&gt;$INNER::var&lt;/code&gt; refers to &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; . &lt;code&gt;INNER&lt;/code&gt; refers to a totally separate global package.</source>
          <target state="translated">패키지 자체는 &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; 과 같이 패키지 구분 기호를 포함 할 수 있습니다 . 그러나 이름 조회 순서에 대해서는 아무 의미가 없습니다. 상대 패키지는 없습니다. 모든 심볼은 현재 패키지에 대해 로컬이거나 외부 패키지 이름에서 정규화되어야합니다. 예를 들어, 패키지 &lt;code&gt;OUTER&lt;/code&gt; 내에 &lt;code&gt;$INNER::var&lt;/code&gt; 이 &lt;code&gt;$OUTER::INNER::var&lt;/code&gt; 참조 하는 곳이 없습니다 . &lt;code&gt;INNER&lt;/code&gt; 는 완전히 별개의 글로벌 패키지를 말합니다.</target>
        </trans-unit>
        <trans-unit id="9d9b3ad57ead6c56277a14fb85e24b4eb5daf19c" translate="yes" xml:space="preserve">
          <source>Packages may themselves contain package separators, as in &lt;code&gt;$OUTER::INNER::var&lt;/code&gt;. This implies nothing about the order of name lookups, however. There are no relative packages: all symbols are either local to the current package, or must be fully qualified from the outer package name down. For instance, there is nowhere within package &lt;code&gt;OUTER&lt;/code&gt; that &lt;code&gt;$INNER::var&lt;/code&gt; refers to &lt;code&gt;$OUTER::INNER::var&lt;/code&gt;. &lt;code&gt;INNER&lt;/code&gt; refers to a totally separate global package. The custom of treating package names as a hierarchy is very strong, but the language in no way enforces it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c700aceea5d157561b207ea0b138ca42d93986c" translate="yes" xml:space="preserve">
          <source>Packages should NOT be released with succeeding TODO tests. As soon as a TODO test starts working, it should be promoted to a normal test, and the newly working feature should be documented in the release notes or in the change log.</source>
          <target state="translated">성공적인 TODO 테스트를 통해 패키지를 출시해서는 안됩니다. TODO 테스트가 작동을 시작하자마자 정상 테스트로 승격되어야하며 새로 작동하는 기능은 릴리스 정보 또는 변경 로그에 문서화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f9b3a92a4e9c473029e482a2d030dd34f7fdde67" translate="yes" xml:space="preserve">
          <source>Packages such as the &lt;b&gt;AutoLoader&lt;/b&gt; and &lt;b&gt;SelfLoader&lt;/b&gt; that delay loading of subroutines within packages can create problems with package lexicals defined using &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt;. While the &lt;b&gt;vars&lt;/b&gt; pragma cannot duplicate the effect of package lexicals (total transparency outside of the package), it can act as an acceptable substitute by pre-declaring global symbols, ensuring their availability to the later-loaded routines.</source>
          <target state="translated">패키지 내의 서브 루틴 로딩을 지연 시키는 &lt;b&gt;AutoLoader&lt;/b&gt; 및 &lt;b&gt;SelfLoader&lt;/b&gt; 와 같은 패키지는 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my()&lt;/a&gt;&lt;/code&gt; 사용하여 정의 된 패키지 어휘에 문제를 일으킬 수 있습니다 . (가) 동안 &lt;b&gt;바르&lt;/b&gt; 프라그가 패키지 lexicals 효과 (패키지의 전체 투명도 외부)를 복제 할 수 있고, 그것은 나중에 로딩 루틴 가용성을 보장 미리 선언 글로벌 부호를 수용 대체물로서 작용할 수있다.</target>
        </trans-unit>
        <trans-unit id="b7558f6c8de9646e78a075fc1836fa56b470930b" translate="yes" xml:space="preserve">
          <source>Packages such as the &lt;b&gt;AutoLoader&lt;/b&gt; and &lt;b&gt;SelfLoader&lt;/b&gt; that delay loading of subroutines within packages can create problems with package lexicals defined using &lt;code&gt;my()&lt;/code&gt;. While the &lt;b&gt;vars&lt;/b&gt; pragma cannot duplicate the effect of package lexicals (total transparency outside of the package), it can act as an acceptable substitute by pre-declaring global symbols, ensuring their availability to the later-loaded routines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a39b68c35be609fae3db651a70893a29f102145" translate="yes" xml:space="preserve">
          <source>Packaging</source>
          <target state="translated">Packaging</target>
        </trans-unit>
        <trans-unit id="f6040caa38342b33a6e2561f81b6b745ebcb9010" translate="yes" xml:space="preserve">
          <source>Packaging Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd1d6c956dcaa7e80ad01427e2c132c913acd56" translate="yes" xml:space="preserve">
          <source>Packing Numbers</source>
          <target state="translated">포장 번호</target>
        </trans-unit>
        <trans-unit id="77ff08af8cc464aced5aa97fba37b76b1a287c76" translate="yes" xml:space="preserve">
          <source>Packing Text</source>
          <target state="translated">포장 텍스트</target>
        </trans-unit>
        <trans-unit id="1608f8af08441cd12fe9e2fbae53022489534f12" translate="yes" xml:space="preserve">
          <source>Packing and Unpacking C Structures</source>
          <target state="translated">C 구조체 포장 및 포장 풀기</target>
        </trans-unit>
        <trans-unit id="755fc829fa6b30f5bd0dea1183fbb4e40f383943" translate="yes" xml:space="preserve">
          <source>Packing and unpacking numbers implies conversion to and from some</source>
          <target state="translated">포장 및 포장 풀기 번호는 일부와의 변환을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c9cf82b43fad60a42156fab44e3aea80e40a265e" translate="yes" xml:space="preserve">
          <source>Pad Data Structures</source>
          <target state="translated">패드 데이터 구조</target>
        </trans-unit>
        <trans-unit id="123d72986f1326076d1df2d6aa17224a9fafb556" translate="yes" xml:space="preserve">
          <source>PadARRAY</source>
          <target state="translated">PadARRAY</target>
        </trans-unit>
        <trans-unit id="6ab3f0989a0f39333a4b2dbcd667b7772cb1ada6" translate="yes" xml:space="preserve">
          <source>PadMAX</source>
          <target state="translated">PadMAX</target>
        </trans-unit>
        <trans-unit id="c67c6deb7bd9a336d320eaceeb05dbc017d7c802" translate="yes" xml:space="preserve">
          <source>PadlistARRAY</source>
          <target state="translated">PadlistARRAY</target>
        </trans-unit>
        <trans-unit id="e531b08237a313ac9570d6ab5e7897d5b4965bfa" translate="yes" xml:space="preserve">
          <source>PadlistMAX</source>
          <target state="translated">PadlistMAX</target>
        </trans-unit>
        <trans-unit id="212c9ab29164396a05288584651f54b83a1c2948" translate="yes" xml:space="preserve">
          <source>PadlistNAMES</source>
          <target state="translated">PadlistNAMES</target>
        </trans-unit>
        <trans-unit id="21b0767549eb35f3d1de66be5e282df8e642f935" translate="yes" xml:space="preserve">
          <source>PadlistNAMESARRAY</source>
          <target state="translated">PadlistNAMESARRAY</target>
        </trans-unit>
        <trans-unit id="54223c12c26f05412eb62c5e7956875ac8cae6f3" translate="yes" xml:space="preserve">
          <source>PadlistNAMESMAX</source>
          <target state="translated">PadlistNAMESMAX</target>
        </trans-unit>
        <trans-unit id="9e74cb94d3d55d6cbf4f2fa44915b69594117bac" translate="yes" xml:space="preserve">
          <source>PadlistREFCNT</source>
          <target state="translated">PadlistREFCNT</target>
        </trans-unit>
        <trans-unit id="a7b10636507a5a68b6694bbca861fc60a48e055a" translate="yes" xml:space="preserve">
          <source>PadnameIN_SCOPE</source>
          <target state="translated">PadnameIN_SCOPE</target>
        </trans-unit>
        <trans-unit id="cc8e270e7a9c533bb14376a86bef3446008c8951" translate="yes" xml:space="preserve">
          <source>PadnameIsOUR</source>
          <target state="translated">PadnameIsOUR</target>
        </trans-unit>
        <trans-unit id="3d6fcf8870d2892c3ad6af23232a8eedc497d603" translate="yes" xml:space="preserve">
          <source>PadnameIsSTATE</source>
          <target state="translated">PadnameIsSTATE</target>
        </trans-unit>
        <trans-unit id="3bfe6a3ab81303de1dd424695918dc31111bebf6" translate="yes" xml:space="preserve">
          <source>PadnameLEN</source>
          <target state="translated">PadnameLEN</target>
        </trans-unit>
        <trans-unit id="d5ee4cf55f70d283c51ac1b6f2ae864d3e0c5bca" translate="yes" xml:space="preserve">
          <source>PadnameOURSTASH</source>
          <target state="translated">PadnameOURSTASH</target>
        </trans-unit>
        <trans-unit id="c6ac24af93fa80d1188967d0f54e89993490b963" translate="yes" xml:space="preserve">
          <source>PadnameOUTER</source>
          <target state="translated">PadnameOUTER</target>
        </trans-unit>
        <trans-unit id="1d3f019c0fb2c999b6af7bade158be47170bc724" translate="yes" xml:space="preserve">
          <source>PadnamePV</source>
          <target state="translated">PadnamePV</target>
        </trans-unit>
        <trans-unit id="972528163239c0552d07d37c63dd06f516b217db" translate="yes" xml:space="preserve">
          <source>PadnameREFCNT</source>
          <target state="translated">PadnameREFCNT</target>
        </trans-unit>
        <trans-unit id="0fb47f90ebdf9f0e906883af08d0999da024b824" translate="yes" xml:space="preserve">
          <source>PadnameREFCNT_dec</source>
          <target state="translated">PadnameREFCNT_dec</target>
        </trans-unit>
        <trans-unit id="a9c00863c8508fae3aa4ebe7e413f193fa8509d6" translate="yes" xml:space="preserve">
          <source>PadnameSV</source>
          <target state="translated">PadnameSV</target>
        </trans-unit>
        <trans-unit id="7b5f15e254ca2c577194794322c3d731b90509cf" translate="yes" xml:space="preserve">
          <source>PadnameTYPE</source>
          <target state="translated">PadnameTYPE</target>
        </trans-unit>
        <trans-unit id="34d560188f4fb3795df43f18c051fc9eaeb85c64" translate="yes" xml:space="preserve">
          <source>PadnameUTF8</source>
          <target state="translated">PadnameUTF8</target>
        </trans-unit>
        <trans-unit id="795be7f256aaacc259d80df70d22855e11dd090b" translate="yes" xml:space="preserve">
          <source>PadnamelistARRAY</source>
          <target state="translated">PadnamelistARRAY</target>
        </trans-unit>
        <trans-unit id="5a966d6257c707351156955e91a4d2ade33a67c1" translate="yes" xml:space="preserve">
          <source>PadnamelistMAX</source>
          <target state="translated">PadnamelistMAX</target>
        </trans-unit>
        <trans-unit id="1693c067453bcbecb2dec48c56acc838378a5fbf" translate="yes" xml:space="preserve">
          <source>PadnamelistREFCNT</source>
          <target state="translated">PadnamelistREFCNT</target>
        </trans-unit>
        <trans-unit id="45773d9422f9ebe4fd8afc88a2547bc21feeb2a2" translate="yes" xml:space="preserve">
          <source>PadnamelistREFCNT_dec</source>
          <target state="translated">PadnamelistREFCNT_dec</target>
        </trans-unit>
        <trans-unit id="3f8dc4c8b2bcb62327df4e5a190aac976ed4de37" translate="yes" xml:space="preserve">
          <source>Padre</source>
          <target state="translated">Padre</target>
        </trans-unit>
        <trans-unit id="a949a19a50821443871b3357ef792d3486159a28" translate="yes" xml:space="preserve">
          <source>Padre is cross-platform IDE for Perl written in Perl using wxWidgets to provide a native look and feel. It's open source under the Artistic License. It is one of the newer Perl IDEs.</source>
          <target state="translated">Padre는 기본 모양과 느낌을 제공하기 위해 wxWidgets를 사용하여 Perl로 작성된 Perl 용 크로스 플랫폼 IDE입니다. 예술 라이센스에 따라 오픈 소스입니다. 최신 Perl IDE 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="e71eceb99b088c6966163f1c30b69039a2bc1008" translate="yes" xml:space="preserve">
          <source>Pairs of arguments will always be preserved in a single command, this is a heuristic for things like pm_to_blib and pod2man which work on pairs of arguments. This makes things like this safe:</source>
          <target state="translated">한 쌍의 인수는 항상 단일 명령으로 유지됩니다. 이는 pm_to_blib 및 pod2man과 같은 인수 쌍에서 작동하는 휴리스틱입니다. 이렇게하면 안전한 것입니다 :</target>
        </trans-unit>
        <trans-unit id="9857d435b031875066b0cef286f5097a8f9dd6c3" translate="yes" xml:space="preserve">
          <source>Pali &amp;lt;pali@cpan.org&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a74d0b33c52deb33630c75d846ae47130145559" translate="yes" xml:space="preserve">
          <source>Paragraph mode?</source>
          <target state="translated">단락 모드?</target>
        </trans-unit>
        <trans-unit id="25f56d90fcfd17280003892c8ccacdb0fa403726" translate="yes" xml:space="preserve">
          <source>Parallel Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8968f4cd8542e8f5dcc7b6c003f463e1278703a3" translate="yes" xml:space="preserve">
          <source>Parallel tests</source>
          <target state="translated">병렬 테스트</target>
        </trans-unit>
        <trans-unit id="e1dd1f36b3d11a080ec32ab7967d3c72b1acb694" translate="yes" xml:space="preserve">
          <source>Parameter passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a55bab9e3352eacabd04b4af1ceaafddafe1be" translate="yes" xml:space="preserve">
          <source>Parameters are passed to the Perl subroutine using the Perl stack. This is the purpose of the code beginning with the line &lt;code&gt;dSP&lt;/code&gt; and ending with the line &lt;code&gt;PUTBACK&lt;/code&gt; . The &lt;code&gt;dSP&lt;/code&gt; declares a local copy of the stack pointer. This local copy should &lt;b&gt;always&lt;/b&gt; be accessed as &lt;code&gt;SP&lt;/code&gt; .</source>
          <target state="translated">매개 변수는 Perl 스택을 사용하여 Perl 서브 루틴으로 전달됩니다. 이것은 &lt;code&gt;dSP&lt;/code&gt; 라인으로 시작하고 &lt;code&gt;PUTBACK&lt;/code&gt; 라인으로 끝나는 코드의 목적입니다 . &lt;code&gt;dSP&lt;/code&gt; 스택 포인터의 로컬 복사본을 선언합니다. 이 로컬 복사본은 &lt;b&gt;항상 &lt;/b&gt; &lt;code&gt;SP&lt;/code&gt; 로 액세스 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="039963173f22fa5dd2b25081d6f805d1899ef724" translate="yes" xml:space="preserve">
          <source>Parameters are passed to the Perl subroutine using the Perl stack. This is the purpose of the code beginning with the line &lt;code&gt;dSP&lt;/code&gt; and ending with the line &lt;code&gt;PUTBACK&lt;/code&gt;. The &lt;code&gt;dSP&lt;/code&gt; declares a local copy of the stack pointer. This local copy should &lt;b&gt;always&lt;/b&gt; be accessed as &lt;code&gt;SP&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80783f8285e6c8c2e9ad9134ffee91ec59453e8c" translate="yes" xml:space="preserve">
          <source>Parameters for the './Build install' command? Typical frequently used setting:</source>
          <target state="translated">'./Build install'명령의 매개 변수? 일반적으로 자주 사용되는 설정 :</target>
        </trans-unit>
        <trans-unit id="1d97e41da27293ace4ed2fbd57ab78ff1ca66f70" translate="yes" xml:space="preserve">
          <source>Parameters for the './Build' command? Setting might be:</source>
          <target state="translated">'./Build'명령의 매개 변수? 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f5e610dc6ea79e1fa2fc73a9c4a9f25754369b4d" translate="yes" xml:space="preserve">
          <source>Parameters for the 'make install' command? Typical frequently used setting:</source>
          <target state="translated">'make install'명령의 매개 변수? 일반적으로 자주 사용되는 설정 :</target>
        </trans-unit>
        <trans-unit id="ac5f82546938b3fb52bd2ca5918d7cd917da5ad3" translate="yes" xml:space="preserve">
          <source>Parameters for the 'make' command? Typical frequently used setting:</source>
          <target state="translated">'make'명령의 매개 변수? 일반적으로 자주 사용되는 설정 :</target>
        </trans-unit>
        <trans-unit id="2daf65e57908f6e4e34be353735de186e29fbed1" translate="yes" xml:space="preserve">
          <source>Parameters for the 'perl Build.PL' command?</source>
          <target state="translated">'perl Build.PL'명령의 매개 변수?</target>
        </trans-unit>
        <trans-unit id="f2122e9ae0f9d0d393a429df01b5fba0a3936055" translate="yes" xml:space="preserve">
          <source>Parameters for the 'perl Makefile.PL' command?</source>
          <target state="translated">'perl Makefile.PL'명령의 매개 변수?</target>
        </trans-unit>
        <trans-unit id="12a675963c2d259ddd1261e2417e886a181a761a" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;IN_OUTLIST&lt;/code&gt; /&lt;code&gt;IN_OUT&lt;/code&gt; /&lt;code&gt;OUT&lt;/code&gt;</source>
          <target state="translated">앞에 매개 변수 &lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af132ea1565870b9227b5a557f457d91cab94a81" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;IN_OUTLIST&lt;/code&gt;/&lt;code&gt;IN_OUT&lt;/code&gt;/&lt;code&gt;OUT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0232bb8a39fafc143ca61d9de251f7dcdc27d0d" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;OUTLIST&lt;/code&gt; /&lt;code&gt;IN_OUTLIST&lt;/code&gt; /&lt;code&gt;OUT&lt;/code&gt; /&lt;code&gt;IN_OUT&lt;/code&gt; keywords are considered to be used by the C subroutine</source>
          <target state="translated">선행 파라미터 &lt;code&gt;OUTLIST&lt;/code&gt; / &lt;code&gt;IN_OUTLIST&lt;/code&gt; / &lt;code&gt;OUT&lt;/code&gt; / &lt;code&gt;IN_OUT&lt;/code&gt; 의 키워드는 C 서브 루틴에 의해 사용되는 것으로 간주</target>
        </trans-unit>
        <trans-unit id="41ae2823f661f6ddef5e94291c2f12cd43c213a8" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;OUTLIST&lt;/code&gt; keyword do not appear in the usage signature of the generated Perl function.</source>
          <target state="translated">&lt;code&gt;OUTLIST&lt;/code&gt; 키워드가 앞에 오는 매개 변수 는 생성 된 Perl 함수의 사용법 서명에 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e627ee0ba269e94ed8c9e92c41a526c0f2674d9d" translate="yes" xml:space="preserve">
          <source>Parameters preceded by &lt;code&gt;OUTLIST&lt;/code&gt;/&lt;code&gt;IN_OUTLIST&lt;/code&gt;/&lt;code&gt;OUT&lt;/code&gt;/&lt;code&gt;IN_OUT&lt;/code&gt; keywords are considered to be used by the C subroutine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ce2ab75a2d568796b9a81ad9fe53a999fb4475" translate="yes" xml:space="preserve">
          <source>Parameters with C pointer types can have different semantic: C functions with similar declarations</source>
          <target state="translated">C 포인터 유형을 가진 매개 변수는 다른 의미를 가질 수 있습니다. 비슷한 선언을 가진 C 함수</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="626558c7945f5a0bd6dde776e79591456600acd2" translate="yes" xml:space="preserve">
          <source>Params::Check</source>
          <target state="translated">Params::Check</target>
        </trans-unit>
        <trans-unit id="3c31e71b866e2be1b160d9df7e242f80a1e4ff7c" translate="yes" xml:space="preserve">
          <source>Params::Check - A generic input parsing/checking mechanism.</source>
          <target state="translated">Params :: Check-일반적인 입력 파싱 / 확인 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="8e747ae27947e13afe9efbf29825a7aff5681ea5" translate="yes" xml:space="preserve">
          <source>Params::Check can do the following things for you:</source>
          <target state="translated">Params :: Check는 다음 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2c3a97d4f65d97cc22a071d5d73380ed7818098" translate="yes" xml:space="preserve">
          <source>Params::Check is a generic input parsing/checking mechanism.</source>
          <target state="translated">Params :: Check는 일반적인 입력 구문 분석 / 확인 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="d5dd3ad76489e8b35496ddb7e255ea649c4f1033" translate="yes" xml:space="preserve">
          <source>Parent-child threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0f712a26d9702481acdf9f4182bc13b7eedee9" translate="yes" xml:space="preserve">
          <source>Parentheses for capturing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583ef2ca07fc8072b14b8a979137ff58f255360f" translate="yes" xml:space="preserve">
          <source>Parentheses missing around &quot;%s&quot; list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcb11d8c3d4312636cc39b23c2f21a9a26545a6" translate="yes" xml:space="preserve">
          <source>Parrot</source>
          <target state="translated">Parrot</target>
        </trans-unit>
        <trans-unit id="f3350f0a17047f5a3aa07948204b506a6f7b873f" translate="yes" xml:space="preserve">
          <source>Parrot now uses C3</source>
          <target state="translated">앵무새는 이제 C3를 사용합니다</target>
        </trans-unit>
        <trans-unit id="d0fbfa8de02afefa98fdba99d8463786cb90e29d" translate="yes" xml:space="preserve">
          <source>Parse &lt;a href=&quot;Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fea3034dad6653f4f66f72da190aee39c9d313" translate="yes" xml:space="preserve">
          <source>Parse &lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; output</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/Test::Harness::TAP&quot;&gt;TAP&lt;/a&gt; 출력 구문 분석</target>
        </trans-unit>
        <trans-unit id="864de3b696d3e06b04ffd3f5a91d959dcce58e7a" translate="yes" xml:space="preserve">
          <source>Parse Call Graph and a Grammar</source>
          <target state="translated">통화 그래프 및 문법 분석</target>
        </trans-unit>
        <trans-unit id="9712b394a0364a991bc67a7d52542c55240f7409" translate="yes" xml:space="preserve">
          <source>Parse META.yml and META.json CPAN metadata files</source>
          <target state="translated">META.yml 및 META.json CPAN 메타 데이터 파일 구문 분석</target>
        </trans-unit>
        <trans-unit id="00d969b75c5246184c1f10c93d4e0b0704ad883c" translate="yes" xml:space="preserve">
          <source>Parse Pod into a simple parse tree</source>
          <target state="translated">간단한 파싱 트리로 포드 파싱</target>
        </trans-unit>
        <trans-unit id="ce3404387b94afbebba7dec68b6b2b2a625f85c8" translate="yes" xml:space="preserve">
          <source>Parse a $file and return what $VERSION is set to by the first assignment. It will return the string &quot;undef&quot; if it can't figure out what $VERSION is. $VERSION should be for all to see, so &lt;code&gt;&lt;a href=&quot;../functions/our&quot;&gt;our&lt;/a&gt; $VERSION&lt;/code&gt; or plain $VERSION are okay, but &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt; $VERSION&lt;/code&gt; is not.</source>
          <target state="translated">$ file을 구문 분석하고 첫 번째 할당에서 $ VERSION이 설정된 것을 반환하십시오. $ VERSION이 무엇인지 알 수 없으면 &quot;undef&quot;라는 문자열을 반환합니다. 모두가 볼 수 있도록, 그래서 $ VERSION은해야 &lt;code&gt;&lt;a href=&quot;../functions/our&quot;&gt;our&lt;/a&gt; $VERSION&lt;/code&gt; 또는 일반 $ VERSION은 좋아하지만, &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt; $VERSION&lt;/code&gt; 없습니다.</target>
        </trans-unit>
        <trans-unit id="9825824f7bc42a01cf9af4f060a678d820a9438a" translate="yes" xml:space="preserve">
          <source>Parse a $file and return what $VERSION is set to by the first assignment. It will return the string &quot;undef&quot; if it can't figure out what $VERSION is. $VERSION should be for all to see, so &lt;code&gt;our $VERSION&lt;/code&gt; or plain $VERSION are okay, but &lt;code&gt;my $VERSION&lt;/code&gt; is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad88342fff52b537c53c546c60e5e4da39c0d95b" translate="yes" xml:space="preserve">
          <source>Parse a Perl arithmetic expression. This may contain operators of precedence down to the bit shift operators. The expression must be followed (and thus terminated) either by a comparison or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If</source>
          <target state="translated">Perl 산술 표현식을 구문 분석하십시오. 여기에는 비트 시프트 연산자보다 우선 순위가 높은 연산자가 포함될 수 있습니다. 표현식은 비교 또는 우선 순위가 낮은 연산자 또는 일반적으로 세미콜론과 같은 표현식을 종료하는 것으로 뒤 따릅니다 (따라서 종료되어야 함). 만약</target>
        </trans-unit>
        <trans-unit id="4a91226709a5a8376e4f2805aef14aaac39e2251" translate="yes" xml:space="preserve">
          <source>Parse a Perl arithmetic expression. This may contain operators of precedence down to the bit shift operators. The expression must be followed (and thus terminated) either by a comparison or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13919626420ad4ba57c7f1e236f7e3f81a7aa3e" translate="yes" xml:space="preserve">
          <source>Parse a Perl list expression. This may contain operators of precedence down to the comma operator. The expression must be followed (and thus terminated) either by a low-precedence logic operator such as &lt;code&gt;or&lt;/code&gt; or by something that would normally terminate an expression such as semicolon. If</source>
          <target state="translated">Perl 목록 표현식을 구문 분석하십시오. 여기에는 쉼표 연산자보다 우선 순위가 높은 연산자가 포함될 수 있습니다. 표현식은 우선 순위가 낮은 논리 연산자와 같이 &lt;code&gt;or&lt;/code&gt; 세미콜론과 같은 표현식을 정상적으로 종료하는 것으로 뒤 따릅니다 (따라서 종료되어야 함) . 만약</target>
        </trans-unit>
        <trans-unit id="10f64d5597b6fabd875c1dbd39d49385041150e0" translate="yes" xml:space="preserve">
          <source>Parse a Perl list expression. This may contain operators of precedence down to the comma operator. The expression must be followed (and thus terminated) either by a low-precedence logic operator such as &lt;code&gt;or&lt;/code&gt; or by something that would normally terminate an expression such as semicolon. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a31decc1f7a5c619a6729c16f491108de487bb" translate="yes" xml:space="preserve">
          <source>Parse a Perl term expression. This may contain operators of precedence down to the assignment operators. The expression must be followed (and thus terminated) either by a comma or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If</source>
          <target state="translated">Perl 용어 표현식을 구문 분석하십시오. 여기에는 할당 연산자보다 우선 순위가 높은 연산자가 포함될 수 있습니다. 쉼표 또는 우선 순위가 낮은 연산자 나 일반적으로 세미콜론과 같은 표현식을 종료하는 것이 표현식 뒤에 있어야합니다 (따라서 종료되어야 함). 만약</target>
        </trans-unit>
        <trans-unit id="d257cd1d7a004b946af2b193d44931ec79a72964" translate="yes" xml:space="preserve">
          <source>Parse a Perl term expression. This may contain operators of precedence down to the assignment operators. The expression must be followed (and thus terminated) either by a comma or lower-precedence operator or by something that would normally terminate an expression such as semicolon. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18afcb1edddb348b2180364bbe566a7279041cb" translate="yes" xml:space="preserve">
          <source>Parse a sequence of zero or more Perl statements. These may be normal imperative statements, including optional labels, or declarations that have compile-time effect, or any mixture thereof. The statement sequence ends when a closing brace or end-of-file is encountered in a place where a new statement could have validly started. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fd37a1b5d20bde462eaebffb2d4fbe34e1d46e" translate="yes" xml:space="preserve">
          <source>Parse a sequence of zero or more Perl statements. These may be normal imperative statements, including optional labels, or declarations that have compile-time effect, or any mixture thereof. The statement sequence ends when a closing brace or end-of-file is encountered in a place where a new statement could have validly started. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statements.</source>
          <target state="translated">0 개 이상의 Perl 문의 시퀀스를 구문 분석하십시오. 이는 선택적 레이블 또는 컴파일 타임 효과가있는 선언 또는 이들의 혼합을 포함한 일반적인 명령문 일 수 있습니다. 새 명령문이 유효하게 시작될 수있는 위치에서 닫는 중괄호 또는 파일 끝이 발견되면 명령문 순서가 종료됩니다. 동적 파서 상태 ( &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al)가 구문 분석 할 코드의 소스와 명령문의 어휘 컨텍스트를 반영하도록 올바르게 설정되었는지 확인하는 것은 호출자에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce089482d2db81fc038bc61d37035494dbd4a5e7" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl code block. This consists of an opening brace, a sequence of statements, and a closing brace. The block constitutes a lexical scope, so &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; variables and various compile-time effects can be contained within it. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">하나의 완전한 Perl 코드 블록을 구문 분석하십시오. 이것은 여는 중괄호, 일련의 명령문 및 닫는 중괄호로 구성됩니다. 그래서 블록은 어휘 범위를 구성하는 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 변수 및 각종 컴파일시 효과가 그 안에 포함될 수있다. 동적 파서 상태 ( &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al)가 구문 분석 할 코드의 소스와 명령문의 어휘 컨텍스트를 반영하도록 올바르게 설정되었는지 확인하는 것은 호출자에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="4369fa095beffe53377b021fe37c6b360b63db5c" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl code block. This consists of an opening brace, a sequence of statements, and a closing brace. The block constitutes a lexical scope, so &lt;code&gt;my&lt;/code&gt; variables and various compile-time effects can be contained within it. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eba5130051b754a15b7c0146935178b7a793c12" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl expression. This allows the full expression grammar, including the lowest-precedence operators such as &lt;code&gt;or&lt;/code&gt; . The expression must be followed (and thus terminated) by a token that an expression would normally be terminated by: end-of-file, closing bracketing punctuation, semicolon, or one of the keywords that signals a postfix expression-statement modifier. If</source>
          <target state="translated">하나의 완전한 Perl 표현식을 구문 분석하십시오. 이 같은 최저 우선 순위 연산자를 포함한 전체 표현 문법을 허용 &lt;code&gt;or&lt;/code&gt; . 파일 끝, 닫는 대괄호 문장 부호, 세미콜론 또는 접미사 expression-statement 수정자를 알리는 키워드 중 하나에 의해 표현식이 정상적으로 종료 될 수있는 토큰이 표현식 뒤에 있어야합니다 (따라서 종료되어야 함). 만약</target>
        </trans-unit>
        <trans-unit id="f7dcb5daf982306394f8b52803c54dd59ef20dee" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl expression. This allows the full expression grammar, including the lowest-precedence operators such as &lt;code&gt;or&lt;/code&gt;. The expression must be followed (and thus terminated) by a token that an expression would normally be terminated by: end-of-file, closing bracketing punctuation, semicolon, or one of the keywords that signals a postfix expression-statement modifier. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31d5eb2bdb4bf2f1954973be8740b5f7f02709e" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect, and may include optional labels. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f6019da7384a5fca463ab30964f465a7e74317" translate="yes" xml:space="preserve">
          <source>Parse a single complete Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect, and may include optional labels. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">하나의 완전한 Perl 문을 구문 분석하십시오. 이것은 일반적인 명령형 명령이거나 컴파일 타임 효과가있는 선언 일 수 있으며 선택적 레이블을 포함 할 수 있습니다. 동적 파서 상태 ( &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al)가 구문 분석 할 코드의 소스와 명령문의 어휘 컨텍스트를 반영하도록 올바르게 설정되었는지 확인하는 것은 호출자에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c19660ac89b8f031661547b8d6a1a0a1b997fe1" translate="yes" xml:space="preserve">
          <source>Parse a single label, possibly optional, of the type that may prefix a Perl statement. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed. If &lt;code&gt;flags&lt;/code&gt; has the &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; bit set, then the label is optional, otherwise it is mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cabbfacc2ecefb926eabaa7917ccc6eda5e749" translate="yes" xml:space="preserve">
          <source>Parse a single label, possibly optional, of the type that may prefix a Perl statement. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed. If</source>
          <target state="translated">Perl 문 앞에 붙일 수있는 유형의 단일 레이블 (선택적)을 구문 분석하십시오. 동적 파서 상태 ( &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; 등)가 구문 분석 될 코드의 소스를 반영하도록 올바르게 설정되었는지 확인하는 것은 호출자에게 달려 있습니다. 만약</target>
        </trans-unit>
        <trans-unit id="48786a1adc62fb644b6b4c1c95df759a626f21b4" translate="yes" xml:space="preserve">
          <source>Parse a single unadorned Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect. It does not include any label or other affixture. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2760bb775d2f5ac01c987fbbfc94d63c9c899e62" translate="yes" xml:space="preserve">
          <source>Parse a single unadorned Perl statement. This may be a normal imperative statement or a declaration that has compile-time effect. It does not include any label or other affixture. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the statement.</source>
          <target state="translated">하나의 옹호되지 않은 Perl 문을 구문 분석하십시오. 이것은 일반적인 명령 또는 컴파일 타임 효과가있는 선언 일 수 있습니다. 라벨이나 기타 부착물은 포함되어 있지 않습니다. 동적 파서 상태 ( &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al)가 구문 분석 할 코드의 소스와 명령문의 어휘 컨텍스트를 반영하도록 올바르게 설정되었는지 확인하는 것은 호출자에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4a7884751687be2fa921735b18ef0a741073183" translate="yes" xml:space="preserve">
          <source>Parse a subroutine signature declaration. This is the contents of the parentheses following a named or anonymous subroutine declaration when the &lt;code&gt;signatures&lt;/code&gt; feature is enabled. Note that this function neither expects nor consumes the opening and closing parentheses around the signature; it is the caller's job to handle these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6f184ce547c8aba43670b279e40b0257db5871" translate="yes" xml:space="preserve">
          <source>Parse an L&amp;lt;&amp;gt; formatting code in POD text</source>
          <target state="translated">POD 텍스트에서 L &amp;lt;&amp;gt; 형식화 코드 구문 분석</target>
        </trans-unit>
        <trans-unit id="e36fba2ce293e9dd2d7ccd39cdd6da710089a942" translate="yes" xml:space="preserve">
          <source>Parse and process a file with pod in it:</source>
          <target state="translated">포드가있는 파일을 구문 분석하고 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="9f1ffb1644b47f32b305b727b8e2f0c4183a5335" translate="yes" xml:space="preserve">
          <source>Parse errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c795a721b662a23c96150509b7defee01aa093" translate="yes" xml:space="preserve">
          <source>Parse file paths into directory, filename and suffix.</source>
          <target state="translated">파일 경로를 디렉토리, 파일 이름 및 접미사로 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="7ef71ab4754324a2f907d13e0118b212e436f9d9" translate="yes" xml:space="preserve">
          <source>Parse text into an array of tokens or array of arrays</source>
          <target state="translated">텍스트를 토큰 배열 또는 배열 배열로 구문 분석</target>
        </trans-unit>
        <trans-unit id="8f66dc0790859dd1eeb3a917210e58e38ca209e0" translate="yes" xml:space="preserve">
          <source>Parse::CPAN::Meta</source>
          <target state="translated">Parse::CPAN::Meta</target>
        </trans-unit>
        <trans-unit id="14f134b3af22420beae12cee1984569fcb79b734" translate="yes" xml:space="preserve">
          <source>Parse::CPAN::Meta - Parse META.yml and META.json CPAN metadata files</source>
          <target state="translated">구문 분석 :: CPAN :: Meta-구문 분석 META.yml 및 META.json CPAN 메타 데이터 파일</target>
        </trans-unit>
        <trans-unit id="fe64ba8660ae82053a168a558e1390828e9d75c0" translate="yes" xml:space="preserve">
          <source>Parse::RecDescent uses &lt;code&gt;extract_codeblock($text, '{}&amp;lt;&amp;gt;')&lt;/code&gt; to extract the code within the &lt;code&gt;&amp;lt;defer:...&amp;gt;&lt;/code&gt; directive, but there's a problem.</source>
          <target state="translated">Parse :: RecDescent는 &lt;code&gt;extract_codeblock($text, '{}&amp;lt;&amp;gt;')&lt;/code&gt; 을 사용하여 &lt;code&gt;&amp;lt;defer:...&amp;gt;&lt;/code&gt; 지시문 내에서 코드를 추출 하지만 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="418d1a5bd76755f2c0308bd1eebe8bb8f1bdc41d" translate="yes" xml:space="preserve">
          <source>Parser Components</source>
          <target state="translated">파서 컴포넌트</target>
        </trans-unit>
        <trans-unit id="fbbe57b861a9ff2eea865432f6886f75ca6ee089" translate="yes" xml:space="preserve">
          <source>Parses a string as a typemap and merge it into the typemap object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2f07bac5eb2fe04d3c37f8f55ba8daadac0f8d" translate="yes" xml:space="preserve">
          <source>Parses a string containing a valid YAML stream into a list of Perl data structures.</source>
          <target state="translated">유효한 YAML 스트림을 포함하는 문자열을 Perl 데이터 구조 목록으로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="be276e658885311ee5c74f7beadd6bde06342cea" translate="yes" xml:space="preserve">
          <source>Parses from &lt;code&gt;$source&lt;/code&gt; file to &lt;code&gt;$to&lt;/code&gt; file. Similar to &lt;a href=&quot;Pod::Parser#parse_from_file&quot;&gt;&quot;parse_from_file&quot; in Pod::Parser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581e381893d5cec0eef75cd617fe11072fd60c0d" translate="yes" xml:space="preserve">
          <source>Parses from &lt;code&gt;$source&lt;/code&gt; file to &lt;code&gt;$to&lt;/code&gt; file. Similar to &lt;a href=&quot;parser#parse_from_file&quot;&gt;parse_from_file in Pod::Parser&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$source&lt;/code&gt; 파일에서 &lt;code&gt;$to&lt;/code&gt; 파일 로 구문 분석 합니다. &lt;a href=&quot;parser#parse_from_file&quot;&gt;Pod :: Parser의 parse_from_file과&lt;/a&gt; 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="092f1e46c6bd81566c97fcc512b18db5d5c4aab0" translate="yes" xml:space="preserve">
          <source>Parses the uri and creates a corresponding File::Fetch::Item object, that is ready to be &lt;code&gt;fetch&lt;/code&gt; ed and returns it.</source>
          <target state="translated">구문 분석하는 URI를하고 해당 파일 : 가져 오기 : Item 객체가 될 준비가 생성 &lt;code&gt;fetch&lt;/code&gt; 에드 반환을.</target>
        </trans-unit>
        <trans-unit id="1d83b783c550f6865383d34cb285e9a4652c04a8" translate="yes" xml:space="preserve">
          <source>Parses the uri and creates a corresponding File::Fetch::Item object, that is ready to be &lt;code&gt;fetch&lt;/code&gt;ed and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="c1fb202e6ed48bb8178cea85efa6b1a53013e025" translate="yes" xml:space="preserve">
          <source>Parsing C, F, or I codes produce the same structure, with only a different element name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d7c8d781e159aef872fa59a96c889263322e94" translate="yes" xml:space="preserve">
          <source>Parsing TAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f888af704a858b84ee2b4d098e40d5d10659de" translate="yes" xml:space="preserve">
          <source>Parsing a B&amp;lt;...&amp;gt; formatting code (or of course any of its semantically identical syntactic variants B&amp;lt;&amp;lt; ... &amp;gt;&amp;gt;, or B&amp;lt;&amp;lt;&amp;lt;&amp;lt; ... &amp;gt;&amp;gt;&amp;gt;&amp;gt;, etc.) produces this event structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1e0e2c7c8fabecf530050bb934d77b2753f95c" translate="yes" xml:space="preserve">
          <source>Parsing a document produces this event structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45498b9f9131d39041aff47d582a85d5dafc07f" translate="yes" xml:space="preserve">
          <source>Parsing a plain (non-verbatim, non-directive, non-data) paragraph in a Pod document produces this event structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2de67960953f9cc81eb05ce36de83df1c47625b" translate="yes" xml:space="preserve">
          <source>Parsing code internal error (%s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201a7c8f517e70abce0e1a757b9f06ab6e1eaa4c" translate="yes" xml:space="preserve">
          <source>Parsing complications</source>
          <target state="translated">구문 분석 합병증</target>
        </trans-unit>
        <trans-unit id="56105dfe20714874a2e829f3d18d1b5e096635b7" translate="yes" xml:space="preserve">
          <source>Parsing for construction</source>
          <target state="translated">건설 파싱</target>
        </trans-unit>
        <trans-unit id="60d12b966804dcb52fae0aab613b1970bacceb22" translate="yes" xml:space="preserve">
          <source>Parsing for size</source>
          <target state="translated">크기 파싱</target>
        </trans-unit>
        <trans-unit id="80341dac319c1b5410ead916b5a70b09b9ef0f4d" translate="yes" xml:space="preserve">
          <source>Parsing harness related environmental variables where appropriate</source>
          <target state="translated">적절한 경우 파싱 하네스 관련 환경 변수</target>
        </trans-unit>
        <trans-unit id="f5b02e670994bc090c4464c23b48f3c45762f6da" translate="yes" xml:space="preserve">
          <source>Parsing is implemented per &lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;. For backward compatibility, links where there is no section and name contains spaces, or links where the entirety of the link (except for the anchor text if given) is enclosed in double-quotes are interpreted as links to a section (L&amp;lt;/section&amp;gt;).</source>
          <target state="translated">&lt;a href=&quot;../perlpodspec&quot;&gt;perlpodspec에&lt;/a&gt; 따라 구문 분석이 구현됩니다 . 이전 버전과의 호환성을 위해 섹션과 이름이없는 링크에는 공백이 포함되어 있거나 링크 전체 (제공된 경우 앵커 텍스트 제외)가 큰 따옴표로 묶인 링크는 섹션에 대한 링크로 해석됩니다 (L &amp;lt;/ section &amp;gt;).</target>
        </trans-unit>
        <trans-unit id="7f30daf91a59d85d8198f429d54faa7d11732383" translate="yes" xml:space="preserve">
          <source>Parsing is implemented per &lt;a href=&quot;perlpodspec&quot;&gt;perlpodspec&lt;/a&gt;. For backward compatibility, links where there is no section and name contains spaces, or links where the entirety of the link (except for the anchor text if given) is enclosed in double-quotes are interpreted as links to a section (L&amp;lt;/section&amp;gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fec48dc32ed2c2c516a7d00eccd1fc2dbbf7ca" translate="yes" xml:space="preserve">
          <source>Parsing of the &lt;code&gt;#!&lt;/code&gt; switches starts wherever &quot;perl&quot; is mentioned in the line. The sequences &quot;-*&quot; and &quot;- &quot; are specifically ignored so that you could, if you were so inclined, say</source>
          <target state="translated">&lt;code&gt;#!&lt;/code&gt; 파싱 ! 스위치는 라인에서 &quot;perl&quot;이 언급 될 때마다 시작됩니다. &quot;-*&quot;및 &quot;-&quot;시퀀스는 특별히 무시되므로 기울어 졌을 경우 다음과 같이 말할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4a66fb666677831fbb89c4617c9cb55023dbd3e" translate="yes" xml:space="preserve">
          <source>Parsing of the bracketed character class construct, &lt;code&gt;[...]&lt;/code&gt; , is rather different than the rule used for the rest of the pattern. The terminator of this construct is found using the same rules as for finding the terminator of a &lt;code&gt;{}&lt;/code&gt; -delimited construct, the only exception being that &lt;code&gt;]&lt;/code&gt; immediately following &lt;code&gt;[&lt;/code&gt; is treated as though preceded by a backslash.</source>
          <target state="translated">대괄호로 묶은 문자 클래스 구문 &lt;code&gt;[...]&lt;/code&gt; 의 구문 분석은 나머지 패턴에 사용 된 규칙과 다소 다릅니다. 이 구문의 종결자는 &lt;code&gt;{}&lt;/code&gt; 구분 구문 의 종결자를 찾는 것과 동일한 규칙을 사용하여 발견되며 &lt;code&gt;[&lt;/code&gt; 바로 다음의 &lt;code&gt;]&lt;/code&gt; 는 백 슬래시가 앞에 오는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="6291b899ca6f8e1c981ffba894dee7b6cbbd41af" translate="yes" xml:space="preserve">
          <source>Parsing of the bracketed character class construct, &lt;code&gt;[...]&lt;/code&gt;, is rather different than the rule used for the rest of the pattern. The terminator of this construct is found using the same rules as for finding the terminator of a &lt;code&gt;{}&lt;/code&gt;-delimited construct, the only exception being that &lt;code&gt;]&lt;/code&gt; immediately following &lt;code&gt;[&lt;/code&gt; is treated as though preceded by a backslash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73445354eb44bc4201e65870d8cf75c662a12338" translate="yes" xml:space="preserve">
          <source>Parsing options from an arbitrary array</source>
          <target state="translated">임의 배열에서 옵션 파싱</target>
        </trans-unit>
        <trans-unit id="7c23dc7bccdc54b6af40c30891098a1ec3018d31" translate="yes" xml:space="preserve">
          <source>Parsing options from an arbitrary string</source>
          <target state="translated">임의의 문자열에서 옵션 파싱</target>
        </trans-unit>
        <trans-unit id="fae1cc5f61c39d7ca25192b6ad11336a46da6cc3" translate="yes" xml:space="preserve">
          <source>Part 1: The basics</source>
          <target state="translated">1 부 : 기초</target>
        </trans-unit>
        <trans-unit id="0ef5ae5e92fc124e5a59c33d1478fa00e49ca98c" translate="yes" xml:space="preserve">
          <source>Part 2: Power tools</source>
          <target state="translated">2 부 : 전동 공구</target>
        </trans-unit>
        <trans-unit id="a00e8c5f741dc7c612e73320a49cc2007336de48" translate="yes" xml:space="preserve">
          <source>Particular block scope types store extra per-type information. For example, &lt;code&gt;CXt_SUB&lt;/code&gt; stores the currently executing CV, while the various for loop types might hold the original loop variable SV. On scope exit, the per-type data is processed; for example the CV has its reference count decremented, and the original loop variable is restored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d7c1187faf9d4d8f32037f3bef25a3fd5a884e" translate="yes" xml:space="preserve">
          <source>Particularly consider setting $Term::ANSIColor::EACHLINE if you are interleaving output to standard output and standard error and you aren't flushing standard output (via autoflush() or setting &lt;code&gt;$|&lt;/code&gt;). If you don't, the code to reset the color may unexpectedly sit in the standard output buffer rather than going to the display, causing standard error output to appear in the wrong color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d014ca4761f29f2d21414f531603a8e6bec46f" translate="yes" xml:space="preserve">
          <source>Pass an undef value to disable it:</source>
          <target state="translated">undef 값을 전달하여 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="6c2219e935754aed07fd99bb89a0b43879d2aa88" translate="yes" xml:space="preserve">
          <source>Pass arrays and hashes by reference, not by value. For one thing, it's the only way to pass multiple lists or hashes (or both) in a single call/return. It also avoids creating a copy of all the contents. This requires some judgement, however, because any changes will be propagated back to the original data. If you really want to mangle (er, modify) a copy, you'll have to sacrifice the memory needed to make one.</source>
          <target state="translated">값이 아닌 참조로 배열과 해시를 전달하십시오. 우선, 단일 호출 / 반환으로 여러 목록 또는 해시 (또는 둘 다)를 전달할 수있는 유일한 방법입니다. 또한 모든 내용의 사본을 작성하지 않습니다. 그러나 변경 사항이 원래 데이터로 다시 전파되기 때문에 약간의 판단이 필요합니다. 사본을 실제로 엉망으로 만들려면 사본을 만드는 데 필요한 메모리를 희생해야합니다.</target>
        </trans-unit>
        <trans-unit id="0faa9975944d7d7c5896c953cdfdaa9399cd924e" translate="yes" xml:space="preserve">
          <source>Pass arrays as references so more parameters can be added later (it's also faster). Convert functions into methods where appropriate. Split large methods into smaller more flexible ones. Inherit methods from other modules if appropriate.</source>
          <target state="translated">나중에 더 많은 매개 변수를 추가 할 수 있도록 배열을 참조로 전달하십시오 (더 빠름). 적절한 경우 함수를 메소드로 변환하십시오. 큰 방법을 더 작은 방법으로 나눕니다. 적절한 경우 다른 모듈에서 메소드를 상속하십시오.</target>
        </trans-unit>
        <trans-unit id="7d95906c33f61c39cf91fb90166084e4d01776d3" translate="yes" xml:space="preserve">
          <source>Pass by Reference</source>
          <target state="translated">참조로 전달</target>
        </trans-unit>
        <trans-unit id="a428f2745394276b3ef22fe8ce93840f03d517fe" translate="yes" xml:space="preserve">
          <source>Pass by reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053ad74d06c8d9f5eb6073c958d95571ac0cf875" translate="yes" xml:space="preserve">
          <source>Pass-through options</source>
          <target state="translated">통과 옵션</target>
        </trans-unit>
        <trans-unit id="b99c51ad09b3295fb732520f288da663a4c77836" translate="yes" xml:space="preserve">
          <source>Passed in implicitly via standard input. This works only if there are no filename arguments--to pass arguments to a STDIN-read program you must explicitly specify a &quot;-&quot; for the program name.</source>
          <target state="translated">표준 입력을 통해 암시 적으로 전달됩니다. 파일 이름 인수가없는 경우에만 작동합니다. STDIN 읽기 프로그램에 인수를 전달하려면 프로그램 이름에 &quot;-&quot;를 명시 적으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c1dfda537026966c5e1e28098e3760a352bbbd9e" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;$hash{ 'foo' }&lt;/code&gt; to a subroutine used to be a special case, though. Since you could assign directly to &lt;code&gt;$_[0]&lt;/code&gt; , Perl had to be ready to make that assignment so it created the hash key ahead of time:</source>
          <target state="translated">하지만 &lt;code&gt;$hash{ 'foo' }&lt;/code&gt; 를 서브 루틴에 전달 하는 것은 특별한 경우였습니다. &lt;code&gt;$_[0]&lt;/code&gt; 에 직접 할당 할 수 있으므로 Perl은 해당 할당을 할 준비가되었으므로 미리 해시 키를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="3a057f5f610f61c1d1ca613467dc13738af87875" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;$hash{ 'foo' }&lt;/code&gt; to a subroutine used to be a special case, though. Since you could assign directly to &lt;code&gt;$_[0]&lt;/code&gt;, Perl had to be ready to make that assignment so it created the hash key ahead of time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b972b4461d36a6327e34c4d3361e6aa5608c4233" translate="yes" xml:space="preserve">
          <source>Passing Filehandles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c8af520d5efa4ce3ec41993e8620832702cb84" translate="yes" xml:space="preserve">
          <source>Passing Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c25d01562076258933dad64551143b78c5bd332" translate="yes" xml:space="preserve">
          <source>Passing NULL for SV creates a constant sub equivalent to &lt;code&gt;sub BAR () {}&lt;/code&gt; , which won't be called if used as a destructor, but will suppress the overhead of a call to &lt;code&gt;AUTOLOAD&lt;/code&gt; . (This form, however, isn't eligible for inlining at compile time.)</source>
          <target state="translated">SV에 NULL을 전달하면 &lt;code&gt;sub BAR () {}&lt;/code&gt; 해당하는 상수 하위가 만들어 지며 소멸자로 사용되는 경우 호출되지 않지만 &lt;code&gt;AUTOLOAD&lt;/code&gt; 에 대한 호출의 오버 헤드는 억제됩니다 . 그러나이 양식은 컴파일 타임에 인라인 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="92e7a89cda780976fa2b2bf15b8fa16940c9e791" translate="yes" xml:space="preserve">
          <source>Passing Parameters</source>
          <target state="translated">전달 매개 변수</target>
        </trans-unit>
        <trans-unit id="01da02b4145731e43ea92222556effb42287de00" translate="yes" xml:space="preserve">
          <source>Passing Regexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631e829d46dd7a132eee37564669347bda1fdeb4" translate="yes" xml:space="preserve">
          <source>Passing Symbol Table Entries (typeglobs)</source>
          <target state="translated">기호 테이블 항목 전달 (typeglobs)</target>
        </trans-unit>
        <trans-unit id="daea0060d4104474139dc3abbdd23083ff617510" translate="yes" xml:space="preserve">
          <source>Passing Variables and Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c282987a3e4a9c1f484c40c67cee6ec02907f83" translate="yes" xml:space="preserve">
          <source>Passing a true value for &lt;code&gt;$no_file&lt;/code&gt; indicates that the path being split only contains directory components, even on systems where you can usually (when not supporting a foreign syntax) tell the difference between directories and files at a glance.</source>
          <target state="translated">&lt;code&gt;$no_file&lt;/code&gt; true 값을 전달하면 일반적으로 (외래 구문을 지원하지 않을 때) 디렉토리와 파일의 차이를 한눈에 알 수있는 시스템에서도 분할되는 경로에 디렉토리 구성 요소 만 포함됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4bfeeb62551588d8d24389c9ea73902777dca58b" translate="yes" xml:space="preserve">
          <source>Passing an argument of &quot;&quot; to -&amp;gt;cwd() has the same affect of calling -&amp;gt;cwd() without any arguments. Turn on Debug (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e7c7fde542cf4bbfc2454d2a7557dc31e803b8" translate="yes" xml:space="preserve">
          <source>Passing an array reference containing only one element, 'name', is special cased to return a list of names rather than a list of hash references, making it equivalent to calling &lt;code&gt;list_files&lt;/code&gt; without arguments.</source>
          <target state="translated">하나의 요소 인 'name'만 포함하는 배열 참조를 전달하는 것은 해시 참조 목록이 아닌 이름 목록을 반환하는 특수한 경우로, 인수없이 &lt;code&gt;list_files&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="33e2edde52cbb4ec756e8a81aaf676fa8eab3f52" translate="yes" xml:space="preserve">
          <source>Passing an array reference containing only one element, 'name', is special cased to return a list of names rather than a list of hash references.</source>
          <target state="translated">하나의 요소 'name'만 포함하는 배열 참조를 전달하는 것은 해시 참조 목록이 아닌 이름 목록을 반환하기 위해 특수한 경우입니다.</target>
        </trans-unit>
        <trans-unit id="73e454c3c193b2c18919a57428be215c94732d74" translate="yes" xml:space="preserve">
          <source>Passing an empty string &quot;&quot; as the first argument to &lt;code&gt;catdir()&lt;/code&gt; is like passing&lt;code&gt;File::Spec-&amp;gt;rootdir()&lt;/code&gt; as the first argument, i.e.</source>
          <target state="translated">&lt;code&gt;catdir()&lt;/code&gt; 첫 번째 인수로 빈 문자열 &quot;&quot;을 전달하는 것은 &lt;code&gt;File::Spec-&amp;gt;rootdir()&lt;/code&gt; 을 첫 번째 인수로 전달하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="21a08998dd15a53696b169310719afee9f13fa81" translate="yes" xml:space="preserve">
          <source>Passing an explicit &lt;code&gt;undef&lt;/code&gt; for &lt;code&gt;proxy&lt;/code&gt;, &lt;code&gt;http_proxy&lt;/code&gt; or &lt;code&gt;https_proxy&lt;/code&gt; will prevent getting the corresponding proxies from the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6de5b84e84c7ec759c47090ea234e479eb3f3b2" translate="yes" xml:space="preserve">
          <source>Passing array/hash refs that contain objects may not work for Perl prior to 5.10.0.</source>
          <target state="translated">객체가 포함 된 배열 / 해시 참조를 전달하면 5.10.0 이전의 Perl에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07006ec07fbb00bcc3b2f3e835dd0485e90ebe00" translate="yes" xml:space="preserve">
          <source>Passing malformed strings was deprecated in Perl 5.18, and became fatal in Perl 5.26.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778d28f8a8c46b422aec9c2654919755f059cdd6" translate="yes" xml:space="preserve">
          <source>Passing new options to the $walker is the easiest way to change amongst any pre-defined styles (the ones you add are automatically recognized as options), and is the only way to alter rendering order without calling compile again. Note however that rendering state is still shared amongst multiple $walker objects, so they must still be used in a coordinated manner.</source>
          <target state="translated">사전 정의 된 스타일 중에서 변경하는 가장 쉬운 방법은 $ walker에 새 옵션을 전달하는 것 (추가 한 스타일은 자동으로 옵션으로 인식됨)이며 다시 컴파일을 호출하지 않고 렌더링 순서를 변경하는 유일한 방법입니다. 그러나 렌더링 상태는 여전히 여러 $ walker 객체간에 공유되므로 여전히 조정 된 방식으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="000338825dc1ad597f0654c697650b0c505e9d75" translate="yes" xml:space="preserve">
          <source>Passing objects on queues may not work if the objects' classes do not support sharing. See &lt;a href=&quot;../threads/shared#BUGS-AND-LIMITATIONS&quot;&gt;BUGS AND LIMITATIONS in threads::shared&lt;/a&gt; for more.</source>
          <target state="translated">객체 클래스가 공유를 지원하지 않으면 대기열에서 객체 전달이 작동하지 않을 수 있습니다. 자세한 내용 &lt;a href=&quot;../threads/shared#BUGS-AND-LIMITATIONS&quot;&gt;은 threads :: shared의 버그 및 제한을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41a3464b5f543a218be1d374dd1edc97d0b4698d" translate="yes" xml:space="preserve">
          <source>Passing objects on queues may not work if the objects' classes do not support sharing. See &lt;a href=&quot;threads::shared#BUGS-AND-LIMITATIONS&quot;&gt;&quot;BUGS AND LIMITATIONS&quot; in threads::shared&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd12e38f2ecdcfc0dbc35815174882b1fdde527" translate="yes" xml:space="preserve">
          <source>Passing only one of the first two elements as &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; is equivalent to passing a 0 and will not have the effect described when both are &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. This also triggers an uninitialized warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55ad2737b0f246adb41a25f43c9856e1465d7d3" translate="yes" xml:space="preserve">
          <source>Passing only one of the first two elements as &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is equivalent to passing a 0 and will not have the effect described when both are &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. This also triggers an uninitialized warning.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 로 처음 두 요소 중 하나만 전달하는 것은 0을 전달하는 것과 같으며 둘 다 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 일 때 설명 된 효과가 없습니다 . 또한 초기화되지 않은 경고를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="816c2ea902ef30f358f592af797150423983b160" translate="yes" xml:space="preserve">
          <source>Passing only one of the first two elements as &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is equivalent to passing a 0 and will not have the effect described when both are &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. This also triggers an uninitialized warning.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 로 처음 두 요소 중 하나만 전달하는 것은 0을 전달하는 것과 같으며 둘 다 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 일 때 설명 된 효과가 없습니다 . 또한 초기화되지 않은 경고를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="ff65b3fe44892512aa53628ad3cbe12f9d7ca3ec" translate="yes" xml:space="preserve">
          <source>Passing the tied object to &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">묶인 물체를 &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d08efc7a1c34dd761882c3caffe514d484a623f1" translate="yes" xml:space="preserve">
          <source>Passing the tied object to &lt;code&gt;tie&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7982247c9ee56201571cea57753775df9b7911" translate="yes" xml:space="preserve">
          <source>Passing the tied object to tie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ec73bc8762feb2e3028dbf252686e023bd6e19" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; , Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">과거 기여 : brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; , Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c5e8c22064e37b00fe594c59a2558cd9b22cdd1" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; ; Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; ; significant portions copied from</source>
          <target state="translated">과거 기여 : brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; ; Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; ; 중요한 부분에서 복사</target>
        </trans-unit>
        <trans-unit id="3d10da0214a4abf1aac8e812a0bd095ee0429d90" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt;, Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bf9583fd2f320adf338deff6531cfb57af74ef" translate="yes" xml:space="preserve">
          <source>Past contributions from: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt;; Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;; significant portions copied from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20a451c29c9cea2e46c19630395de2df6f76e08" translate="yes" xml:space="preserve">
          <source>Past contributors are: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; , Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; , Kenneth Albanowski &lt;code&gt;&amp;lt;kjahds@kjahds.com&amp;gt;&lt;/code&gt; , Andy Dougherty &lt;code&gt;&amp;lt;doughera@lafcol.lafayette.edu&amp;gt;&lt;/code&gt; , and many others.</source>
          <target state="translated">과거 기여자 : brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt; , Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt; , Kenneth Albanowski &lt;code&gt;&amp;lt;kjahds@kjahds.com&amp;gt;&lt;/code&gt; , Andy Dougherty &lt;code&gt;&amp;lt;doughera@lafcol.lafayette.edu&amp;gt;&lt;/code&gt; 및 기타 다수</target>
        </trans-unit>
        <trans-unit id="33951b7f493f5448f75724d8f08600c9d99884df" translate="yes" xml:space="preserve">
          <source>Past contributors are: brian d foy &lt;code&gt;&amp;lt;bdfoy@cpan.org&amp;gt;&lt;/code&gt; Adriano R. Ferreira &lt;code&gt;&amp;lt;ferreira@cpan.org&amp;gt;&lt;/code&gt;, Sean M. Burke &lt;code&gt;&amp;lt;sburke@cpan.org&amp;gt;&lt;/code&gt;, Kenneth Albanowski &lt;code&gt;&amp;lt;kjahds@kjahds.com&amp;gt;&lt;/code&gt;, Andy Dougherty &lt;code&gt;&amp;lt;doughera@lafcol.lafayette.edu&amp;gt;&lt;/code&gt;, and many others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b790410ca6021f643b25dc0684b80c6ac035a6f" translate="yes" xml:space="preserve">
          <source>Patch style</source>
          <target state="translated">패치 스타일</target>
        </trans-unit>
        <trans-unit id="31c42bf1738e25a658115f73ad50091aa9060241" translate="yes" xml:space="preserve">
          <source>Patch workflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e616d246e566a6e437d4992af55f91c42a43620c" translate="yes" xml:space="preserve">
          <source>Patch, extend or subclass an existing module where possible</source>
          <target state="translated">가능한 경우 기존 모듈 패치, 확장 또는 서브 클래스</target>
        </trans-unit>
        <trans-unit id="57bddba1c66e0b8fdc9d892c78bfc22f25c546f6" translate="yes" xml:space="preserve">
          <source>Patches against Pod::Simple are welcome. Please send bug reports to &amp;lt;bug-pod-simple@rt.cpan.org&amp;gt;.</source>
          <target state="translated">Pod :: Simple에 대한 패치는 환영합니다. 버그 리포트를 &amp;lt;bug-pod-simple@rt.cpan.org&amp;gt;로 보내주십시오.</target>
        </trans-unit>
        <trans-unit id="bd4f477583add42fc502203e4db2736ea3836506" translate="yes" xml:space="preserve">
          <source>Patches against Pod::Simple are welcome. Please send bug reports to mailto:&amp;lt;bug-pod-simple@rt.cpan.org.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7dced43d864867fea0f4fc015cbdfe619d45715" translate="yes" xml:space="preserve">
          <source>Patches are reviewed and discussed on GitHub or the p5p list. Simple, uncontroversial patches will usually be applied without any discussion. When the patch is applied, the ticket will be updated and you will receive email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139936b1a9a84a97721c26af3e777c3a03af1e6f" translate="yes" xml:space="preserve">
          <source>Patches are reviewed and discussed on the p5p list. Simple, uncontroversial patches will usually be applied without any discussion. When the patch is applied, the ticket will be updated and you will receive email. In addition, an email will be sent to the p5p list.</source>
          <target state="translated">패치는 p5p 목록에서 검토 및 논의됩니다. 논란의 여지가없는 간단한 패치는 일반적으로 논의없이 적용됩니다. 패치가 적용되면 티켓이 업데이트되고 이메일을 받게됩니다. 또한 p5p 목록으로 이메일이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="f960f4eadeba1dd57f417d470c8e32c7459acc42" translate="yes" xml:space="preserve">
          <source>Patches may be applied by the pumpkin holder without the explicit cooperation of the module author if and only if they are very minor, time-critical in some fashion (such as urgent security fixes), or if the module author cannot be reached. Those patches must still be given back to the author when possible, and if the author decides on an alternate fix in their version, that fix should be strongly preferred unless there is a serious problem with it. Any changes not endorsed by the author should be marked as such, and the contributor of the change acknowledged.</source>
          <target state="translated">패치가 매우 작고 시간이 중요한 경우 (예 : 긴급 보안 수정) 또는 모듈 작성자에게 연락 할 수없는 경우에만 모듈 작성자의 명시적인 협력없이 패치를 호박 홀더가 적용 할 수 있습니다. 이러한 패치는 가능하면 제작자에게 다시 제공해야하며 제작자가 해당 버전의 대체 수정 프로그램을 결정하는 경우 심각한 문제가없는 한이 수정 프로그램을 강력히 선호해야합니다. 저자가 보증하지 않은 모든 변경 사항은 그대로 표시되어야하며 변경의 기여자는 인정해야합니다.</target>
        </trans-unit>
        <trans-unit id="bb89b691c1294b8ada4f9cd31a429e4caf872c3f" translate="yes" xml:space="preserve">
          <source>Patches speak louder than words</source>
          <target state="translated">패치는 단어보다 더 크게 말합니다</target>
        </trans-unit>
        <trans-unit id="d54931049c09c712e0cbea3d090e4d3b4a105c0b" translate="yes" xml:space="preserve">
          <source>Patches that add new warnings or errors or deprecate features.</source>
          <target state="translated">새로운 경고 나 오류를 추가하거나 기능을 사용하지 않는 패치.</target>
        </trans-unit>
        <trans-unit id="29abf1c3bbb8c54b1cd55ff655f670f9ebc399ee" translate="yes" xml:space="preserve">
          <source>Patches that add or remove features.</source>
          <target state="translated">기능을 추가하거나 제거하는 패치.</target>
        </trans-unit>
        <trans-unit id="f84461a4c1a5b5e429209771f4e83af6717ee46b" translate="yes" xml:space="preserve">
          <source>Patches that break binary compatibility. (Please talk to a pumpking.)</source>
          <target state="translated">이진 호환성을 손상시키는 패치. (호박에게 이야기하십시오.)</target>
        </trans-unit>
        <trans-unit id="dfa8568f048c6db3c2a4163fedf65703680783c6" translate="yes" xml:space="preserve">
          <source>Patches that fix CVEs or security issues. These changes should be passed using the security reporting mechanism rather than applied directly; see &lt;a href=&quot;perlsec#SECURITY-VULNERABILITY-CONTACT-INFORMATION&quot;&gt;&quot;SECURITY VULNERABILITY CONTACT INFORMATION&quot; in perlsec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323fd112f38ff019a7ad9800eabd680b9a815934" translate="yes" xml:space="preserve">
          <source>Patches that fix CVEs or security issues. These changes should be run through the perl5-security-report@perl.org mailing list rather than applied directly.</source>
          <target state="translated">CVE 또는 보안 문제를 해결하는 패치 이러한 변경 사항은 perl5-security-report@perl.org 메일 링리스트를 통해 직접 적용하지 말고 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0910db599c5e57f13f342f2401ca7baceb18c00" translate="yes" xml:space="preserve">
          <source>Patches that fix anything which prevents or seriously impacts the build or installation of perl.</source>
          <target state="translated">perl의 빌드 또는 설치를 방해하거나 심각하게 영향을 미치는 것을 수정하는 패치.</target>
        </trans-unit>
        <trans-unit id="eec8d047d5a67d89526ccddaae67c2b3e494393f" translate="yes" xml:space="preserve">
          <source>Patches that fix bugs in features that were new in the corresponding 5.x.0 stable release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21130596c95c32860a5fe99dde40cbc8202f1859" translate="yes" xml:space="preserve">
          <source>Patches that fix crashing bugs, assertion failures and memory corruption but which do not otherwise change perl's functionality or negatively impact performance.</source>
          <target state="translated">충돌 버그, 어설 션 오류 및 메모리 손상을 수정하지만 펄의 기능을 변경하거나 성능에 부정적인 영향을 미치지 않는 패치.</target>
        </trans-unit>
        <trans-unit id="c95c81109a9edefb7a99fa1792240b1c8c4accc7" translate="yes" xml:space="preserve">
          <source>Patches that fix regressions in perl's behavior relative to previous releases, no matter how old the regression, since some people may upgrade from very old versions of perl to the latest version.</source>
          <target state="translated">일부 사용자는 이전 버전의 perl에서 최신 버전으로 업그레이드 할 수 있기 때문에 이전 버전에 비해 펄의 동작에서 회귀를 수정하는 패치.</target>
        </trans-unit>
        <trans-unit id="b5696e15a3c83d7885217333605452f542af1fa3" translate="yes" xml:space="preserve">
          <source>Patches that were formatted by &lt;code&gt;git format-patch&lt;/code&gt; are applied with &lt;code&gt;git am&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c3b06e57a98513617dbda85f73638d28687b18" translate="yes" xml:space="preserve">
          <source>Patches which change behaviour (fixing bugs or introducing new features) must include regression tests to verify that everything works as expected.</source>
          <target state="translated">동작을 변경하는 패치 (버그 수정 또는 새로운 기능 도입)에는 모든 것이 예상대로 작동하는지 확인하기위한 회귀 테스트가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8270f0c679e10266c6a9f82f5a4c89d2c3cc697e" translate="yes" xml:space="preserve">
          <source>Patches without documentation are probably ill-thought out or incomplete. No features can be added or changed without documentation, so submitting a patch for the appropriate pod docs as well as the source code is important.</source>
          <target state="translated">문서가없는 패치는 생각하지 않거나 불완전 할 수 있습니다. 문서 없이는 기능을 추가하거나 변경할 수 없으므로 적절한 포드 문서와 소스 코드에 대한 패치를 제출하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="e27ae82b9a6b018ee112b21851652cbe49271b3b" translate="yes" xml:space="preserve">
          <source>Patching a core module</source>
          <target state="translated">핵심 모듈 패치</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="26f9c38821aeaa5a1cad8be70e73ffffcb17265b" translate="yes" xml:space="preserve">
          <source>Pathnames</source>
          <target state="translated">Pathnames</target>
        </trans-unit>
        <trans-unit id="2da894d10ce9ad5c8d056914ada9bb1b35234f8b" translate="yes" xml:space="preserve">
          <source>Pattern subroutine nesting without pos change exceeded limit in regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1fe397674f2ea0ca0d83a858144940f7da6b34" translate="yes" xml:space="preserve">
          <source>Patterns are implicitly anchored at the beginning and end of each string when testing for a match.</source>
          <target state="translated">일치를 테스트 할 때 각 문자열의 시작과 끝에 패턴이 암시 적으로 고정됩니다.</target>
        </trans-unit>
        <trans-unit id="d223d697e7957195cfa22daa9019ad4f989b3028" translate="yes" xml:space="preserve">
          <source>Patterns are subject to an additional level of interpretation as a regular expression. This is done as a second pass, after variables are interpolated, so that regular expressions may be incorporated into the pattern from the variables. If this is not what you want, use &lt;code&gt;\Q&lt;/code&gt; to interpolate a variable literally.</source>
          <target state="translated">패턴은 정규 표현식으로 추가 해석 수준이 적용됩니다. 이는 변수가 보간 된 후 두 번째 단계로 수행되므로 정규식이 변수의 패턴에 통합 될 수 있습니다. 이것이 원하는 것이 아니라면 &lt;code&gt;\Q&lt;/code&gt; 를 사용 하여 변수를 문자 그대로 보간하십시오.</target>
        </trans-unit>
        <trans-unit id="e23f050b63735be39db7dcbaa09bfdd36470f510" translate="yes" xml:space="preserve">
          <source>Patterns of the form /#\d/ will be replaced with the</source>
          <target state="translated">/ # \ d / 형식의 패턴은</target>
        </trans-unit>
        <trans-unit id="2c6538dfa9b49c6262ed324ab83217ac7fa1dc0f" translate="yes" xml:space="preserve">
          <source>Patterns that aren't already stored in some variable must be delimitted, at both ends, by delimitter characters. These are often, as in the example above, forward slashes, and the typical way a pattern is written in documentation is with those slashes. In most cases, the delimitter is the same character, fore and aft, but there are a few cases where a character looks like it has a mirror-image mate, where the opening version is the beginning delimiter, and the closing one is the ending delimiter, like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c067e0d5231aa5bf288d5b493651395abea2d520" translate="yes" xml:space="preserve">
          <source>Paul Evans &amp;lt;leonerd@leonerd.org.uk&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5aab87a980cf487fa8eb081248898801ca988d" translate="yes" xml:space="preserve">
          <source>Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa864bbad1d0617a3967173b7db313f3efab055" translate="yes" xml:space="preserve">
          <source>Paul Green &amp;lt;Paul.Green@stratus.com&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657c59b79c5dc51478a7a404f0af13b53b988447" translate="yes" xml:space="preserve">
          <source>Paul Green (Paul.Green@stratus.com)</source>
          <target state="translated">폴 그린 (Paul.Green@stratus.com)</target>
        </trans-unit>
        <trans-unit id="7bea737592f1b2469295059802a7399af95a087a" translate="yes" xml:space="preserve">
          <source>Paul Marquess</source>
          <target state="translated">폴 마르케스</target>
        </trans-unit>
        <trans-unit id="1da5f372b188cb5eeeeafb09b1f0a31fca9b993f" translate="yes" xml:space="preserve">
          <source>Paul Marquess &amp;lt;Paul.Marquess@btinternet.com&amp;gt;</source>
          <target state="translated">폴 마퀴스 &amp;lt;Paul.Marquess@btinternet.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4fbcf625afc3d507d379cacdea04bbc6b875a1d5" translate="yes" xml:space="preserve">
          <source>Paul Marquess &amp;lt;pmqs@cpan.org&amp;gt;</source>
          <target state="translated">폴 마퀴스 &amp;lt;pmqs@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c4337beb0e4af629844f1525d967a958a8d53fbd" translate="yes" xml:space="preserve">
          <source>Paul Marquess pmqs@cpan.org</source>
          <target state="translated">폴 마르케스 pmqs@cpan.org</target>
        </trans-unit>
        <trans-unit id="914e119a6f7c68c285bad290780b5645e4c2e6e0" translate="yes" xml:space="preserve">
          <source>Paul Szabo identified the race condition originally, and Brendan O'Dea wrote an implementation for Debian that addressed the problem. That code was used as a basis for the current code. Their efforts are greatly appreciated.</source>
          <target state="translated">Paul Szabo는 원래 경쟁 조건을 확인했으며 Brendan O'Dea는이 문제를 해결 한 데비안 구현을 작성했습니다. 이 코드는 현재 코드의 기초로 사용되었습니다. 그들의 노력에 크게 감사드립니다.</target>
        </trans-unit>
        <trans-unit id="37c56bd6f44f98356093abe0640820d8fc0e4efe" translate="yes" xml:space="preserve">
          <source>Pay a special attention to the function &lt;code&gt;constant&lt;/code&gt; . This name appears twice in the generated .xs file: once in the first part, as a static C function, then another time in the second part, when an XSUB interface to this static C function is defined.</source>
          <target state="translated">함수 &lt;code&gt;constant&lt;/code&gt; 특별한주의를 기울이십시오 . 이 이름은 생성 된 .xs 파일에 두 번 나타납니다. 첫 번째 부분에서는 정적 C 함수로 한 번, 두 번째 부분에서는 다른 시간으로이 정적 C 함수에 대한 XSUB 인터페이스가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5eefac59c237fc6f09f96bf4739df8b3e296a3e0" translate="yes" xml:space="preserve">
          <source>Pay a special attention to the function &lt;code&gt;constant&lt;/code&gt;. This name appears twice in the generated .xs file: once in the first part, as a static C function, then another time in the second part, when an XSUB interface to this static C function is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd86f5fbb7a13e213f07f240ee7591f9616574c1" translate="yes" xml:space="preserve">
          <source>Pay careful attention to the next example:</source>
          <target state="translated">다음 예에주의를 기울이십시오.</target>
        </trans-unit>
        <trans-unit id="8629c3dd5ba30eee7c4ac6064407b780f19df3f6" translate="yes" xml:space="preserve">
          <source>Pay special attention to &lt;a href=&quot;#METHODS-FOR-PARSING-AND-PROCESSING&quot;&gt;METHODS FOR PARSING AND PROCESSING&lt;/a&gt; and to the objects described in &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt;. The former describes the gory details and parameters for how to customize and extend the parsing behavior of &lt;b&gt;Pod::Parser&lt;/b&gt;. &lt;b&gt;Pod::InputObjects&lt;/b&gt; provides several objects that may all be used interchangeably as parse-trees. The most obvious one is the &lt;b&gt;Pod::ParseTree&lt;/b&gt; object. It defines the basic interface and functionality that all things trying to be a POD parse-tree should do. A &lt;b&gt;Pod::ParseTree&lt;/b&gt; is defined such that each &quot;node&quot; may be a text-string, or a reference to another parse-tree. Each &lt;b&gt;Pod::Paragraph&lt;/b&gt; object and each &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; object also supports the basic parse-tree interface.</source>
          <target state="translated">&lt;a href=&quot;#METHODS-FOR-PARSING-AND-PROCESSING&quot;&gt;패싱 및 처리 방법&lt;/a&gt; 과 &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects에&lt;/a&gt; 설명 된 객체에 특히주의 하십시오 . 전자는 &lt;b&gt;Pod :: Parser&lt;/b&gt; 의 구문 분석 동작을 사용자 정의하고 확장하는 방법에 대한 세부 사항 및 매개 변수를 설명합니다 . &lt;b&gt;Pod :: InputObjects&lt;/b&gt; 는 모두 구문 분석 트리로 상호 교환 적으로 사용될 수있는 여러 개체를 제공합니다. 가장 확실한 것은 &lt;b&gt;Pod :: ParseTree&lt;/b&gt; 객체입니다. POD 구문 분석 트리가 되려는 모든 작업이 수행해야하는 기본 인터페이스와 기능을 정의합니다. &lt;b&gt;포드 :: 파스 트리가&lt;/b&gt; 각 &quot;노드&quot;는 텍스트 문자열, 또는 다른 구문 분석 트리에 대한 참조 할 수 있도록 정의된다. 각 &lt;b&gt;Pod :: Paragraph&lt;/b&gt; 객체와 각각&lt;b&gt;Pod :: InteriorSequence&lt;/b&gt; 객체는 기본 구문 분석 트리 인터페이스도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="421867b24b96c23edf6abebb9f45037077322733" translate="yes" xml:space="preserve">
          <source>Pbzip2 (&lt;a href=&quot;http://compression.ca/pbzip2/&quot;&gt;http://compression.ca/pbzip2/&lt;/a&gt;) is a parallel implementation of bzip2. The output from pbzip2 consists of a series of concatenated bzip2 data streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e03bb07d00faf766cfd7d7ab601c37578574e6" translate="yes" xml:space="preserve">
          <source>Pdksh</source>
          <target state="translated">Pdksh</target>
        </trans-unit>
        <trans-unit id="8c0ffaf5c4cb2ca5b26bd5b8ebbf764c3f361b3b" translate="yes" xml:space="preserve">
          <source>Peeking At Perl's Internal Encoding</source>
          <target state="translated">Perl의 내부 인코딩 엿보기</target>
        </trans-unit>
        <trans-unit id="9326788fe51cb580ed1b0dbf97738788d7548374" translate="yes" xml:space="preserve">
          <source>Peep-hole Optimisation and Analysis</source>
          <target state="translated">들여다 보는 구멍 최적화 및 분석</target>
        </trans-unit>
        <trans-unit id="942951d0647566db32d37d28d3b5cb152d328945" translate="yes" xml:space="preserve">
          <source>Peephole optimizations are done by calling the function pointed to by the global variable &lt;code&gt;PL_peepp&lt;/code&gt; . By default, &lt;code&gt;PL_peepp&lt;/code&gt; just calls the function pointed to by the global variable &lt;code&gt;PL_rpeepp&lt;/code&gt; . By default, that performs some basic op fixups and optimisations along the execution-order op chain, and recursively calls &lt;code&gt;PL_rpeepp&lt;/code&gt; for each side chain of ops (resulting from conditionals). Extensions may provide additional optimisations or fixups, hooking into either the per-subroutine or recursive stage, like this:</source>
          <target state="translated">틈 구멍 최적화는 전역 변수 &lt;code&gt;PL_peepp&lt;/code&gt; 가 가리키는 함수를 호출하여 수행됩니다 . 기본적으로 &lt;code&gt;PL_peepp&lt;/code&gt; 는 전역 변수 &lt;code&gt;PL_rpeepp&lt;/code&gt; 에 의해 지정된 함수 만 호출합니다 . 기본적으로 실행 순서 op 체인을 따라 기본 op fixups 및 최적화를 수행하고 ops의 각 사이드 체인에 대해 &lt;code&gt;PL_rpeepp&lt;/code&gt; 를 반복적으로 호출합니다 (조건부 결과). 확장은 다음과 같이 서브 루틴 또는 재귀 단계 중 하나에 연결하여 추가 최적화 또는 수정을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="709d0672c38fb37cdd0a3a0f4b57bb8444e4ff99" translate="yes" xml:space="preserve">
          <source>Peephole optimizations are done by calling the function pointed to by the global variable &lt;code&gt;PL_peepp&lt;/code&gt;. By default, &lt;code&gt;PL_peepp&lt;/code&gt; just calls the function pointed to by the global variable &lt;code&gt;PL_rpeepp&lt;/code&gt;. By default, that performs some basic op fixups and optimisations along the execution-order op chain, and recursively calls &lt;code&gt;PL_rpeepp&lt;/code&gt; for each side chain of ops (resulting from conditionals). Extensions may provide additional optimisations or fixups, hooking into either the per-subroutine or recursive stage, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82179522f8f70fef91d933963bf641d088811bc4" translate="yes" xml:space="preserve">
          <source>PeerAddr =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6708632816e3f269f58a404db243454e1641a932" translate="yes" xml:space="preserve">
          <source>PeerAddrInfo =&amp;gt; ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d2192e63cd05faab929cd650436f61dca14ce8" translate="yes" xml:space="preserve">
          <source>PeerHost =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d075a3ed08988dae4c16a7043806162ccac9817" translate="yes" xml:space="preserve">
          <source>PeerHost AND LocalHost PARSING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa91cf15a151119bf0702338d553a73e0af264a2" translate="yes" xml:space="preserve">
          <source>PeerPort =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a759d273b63a64efde6b41235362623a3e0e2136" translate="yes" xml:space="preserve">
          <source>PeerService =&amp;gt; STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff756efe8f5dd0813ab9c374e52c792233eda90" translate="yes" xml:space="preserve">
          <source>Pennsylvania</source>
          <target state="translated">Pennsylvania</target>
        </trans-unit>
        <trans-unit id="3d7bbafed59a27c1513d780d5e784c2a12ef1dc5" translate="yes" xml:space="preserve">
          <source>People frequently expect it to work like this. So it does.</source>
          <target state="translated">사람들은 종종 이런 식으로 작동하기를 기대합니다. 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="bc1de57d7a939bd26a67e8c9562637156f53e824" translate="yes" xml:space="preserve">
          <source>People have a hard time remembering that some functions default to $_, or @ARGV, or whatever, but that others which you might expect to do not.</source>
          <target state="translated">사람들은 일부 함수는 기본적으로 $ _, @ARGV 또는 그 밖의 모든 것을 기억하지만 어려움을 겪을 수도 있다는 것을 기억하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="af3c23d7810d9feb567b332e5161af8d9bd9f452" translate="yes" xml:space="preserve">
          <source>People like to see their strings nicely sorted--or as Unicode parlance goes, collated. But again, what do you mean by collate?</source>
          <target state="translated">사람들은 문자열이 멋지게 정렬되어 있거나 유니 코드 어법에 따라 정렬되는 것을보고 싶어합니다. 그러나 다시 한 번 collate는 무엇을 의미합니까?</target>
        </trans-unit>
        <trans-unit id="895626deb1f05ce05a822ae049fef844846a6710" translate="yes" xml:space="preserve">
          <source>People sometimes point out that &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; will do something similar, and ask why &lt;code&gt;Tie::File&lt;/code&gt; module is necessary.</source>
          <target state="translated">사람들은 때때로 &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; 이 비슷한 것을 할 것이라고 지적하고 왜 &lt;code&gt;Tie::File&lt;/code&gt; 모듈이 필요한지 묻습니다 .</target>
        </trans-unit>
        <trans-unit id="e4fa6539419b00af03d768603a4618e5be18322c" translate="yes" xml:space="preserve">
          <source>People sometimes point out that &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; will do something similar, and ask why &lt;code&gt;Tie::File&lt;/code&gt; module is necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dcc00aba3ea5fec8f203b99f7aa0dc52bd345a" translate="yes" xml:space="preserve">
          <source>Per default all untar operations are done with the perl module Archive::Tar; by setting this variable to true the external tar command is used if available; on Unix this is usually preferred because they have a reliable and fast gnutar implementation.</source>
          <target state="translated">기본적으로 모든 untar 작업은 perl 모듈 Archive :: Tar; 이 변수를 true로 설정하면 사용 가능한 경우 외부 tar 명령이 사용됩니다. 유닉스에서는 이것이 안정적이고 빠른 gnutar 구현을 가지고 있기 때문에 일반적으로 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="c4f661f9e3bbabdfe8977d8e07c04f728f007afa" translate="yes" xml:space="preserve">
          <source>Per-Interpreter Variables</source>
          <target state="translated">통역사 변수</target>
        </trans-unit>
        <trans-unit id="2559c9f59f217f32b3e891e1ab6877c4f55356cc" translate="yes" xml:space="preserve">
          <source>Per-instance Data</source>
          <target state="translated">인스턴스 별 데이터</target>
        </trans-unit>
        <trans-unit id="637c16442a8f555cae097e71247c5fc7ee45adfd" translate="yes" xml:space="preserve">
          <source>Per-instance flag bits</source>
          <target state="translated">인스턴스 별 플래그 비트</target>
        </trans-unit>
        <trans-unit id="24a428fdaa34dbb9d25a2ae2897474ba4a8b3383" translate="yes" xml:space="preserve">
          <source>Perceptive Perl hackers may have noticed that a &lt;code&gt;for&lt;/code&gt; loop has a return value, and that this value can be captured by wrapping the loop in a &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; block. The reward for this discovery is this cautionary advice: The return value of a &lt;code&gt;for&lt;/code&gt; loop is unspecified and may change without notice. Do not rely on it.</source>
          <target state="translated">Perlive Perl 해커들은 &lt;code&gt;for&lt;/code&gt; 루프가 리턴 값을 가지고 있으며이 값은 루프를 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; 블록 으로 감싸서 캡처 할 수 있음 을 알아 차릴 수 있습니다 . 이 발견에 대한 보상은 다음과 같은주의 사항입니다. &lt;code&gt;for&lt;/code&gt; 루프 의 반환 값 은 지정되지 않으며 예고없이 변경 될 수 있습니다. 그것에 의존하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6e85b222ac46dc12730aecc629694a020c6eeb78" translate="yes" xml:space="preserve">
          <source>Perceptive Perl hackers may have noticed that a &lt;code&gt;for&lt;/code&gt; loop has a return value, and that this value can be captured by wrapping the loop in a &lt;code&gt;do&lt;/code&gt; block. The reward for this discovery is this cautionary advice: The return value of a &lt;code&gt;for&lt;/code&gt; loop is unspecified and may change without notice. Do not rely on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e9965ae0a1c370ab69fb29d7dbc17ad92d7783" translate="yes" xml:space="preserve">
          <source>Perform a stream ping. If the tcp connection isn't already open, it opens it. It then sends some data and waits for a reply. It leaves the stream open on exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0ad0b2d6ac0afcdcc0122fc81922056578805a" translate="yes" xml:space="preserve">
          <source>Perform a udp echo ping. Construct a message of at least the one-byte sequence number and any additional data bytes. Send the message out and wait for a message to come back. If we get a message, make sure all of its parts match. If they do, we are done. Otherwise go back and wait for the message until we run out of time. Return the result of our efforts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79aed27967237d1d2c231b08b0c043db2872fef5" translate="yes" xml:space="preserve">
          <source>Perform an in-place trimming of leading and trailing whitespace from the first argument provided to the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8bd6ff6508298e4713b89624c59cb269e84e9c" translate="yes" xml:space="preserve">
          <source>Perform assignment to the &lt;code&gt;func_args&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c46ae69f753cf6246720edd2c4a9cebd27597f5" translate="yes" xml:space="preserve">
          <source>Perform cache scanning ('atstart', 'atexit' or 'never')?</source>
          <target state="translated">캐시 검색을 수행합니까 ( 'atstart', 'atexit'또는 'never')?</target>
        </trans-unit>
        <trans-unit id="c63fc543a09237e1df38dff5523874d7739bd5c9" translate="yes" xml:space="preserve">
          <source>Perform sorting on one type of platform only.</source>
          <target state="translated">한 가지 유형의 플랫폼에서만 정렬을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="c27007b93a4bc1c8de4cbbfbb0c5571ba69e57a4" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; on the array.</source>
          <target state="translated">어레이 에서 &lt;code&gt;&lt;a href=&quot;../functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; 에 해당하는 것을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4070651c463f5c50952530e94f62331111d1bf1" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; on the array.</source>
          <target state="translated">어레이 에서 &lt;code&gt;&lt;a href=&quot;functions/splice&quot;&gt;splice&lt;/a&gt;&lt;/code&gt; 에 해당하는 것을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed35d3518038453f5800bc06513fa8bdaa2767df" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of &lt;code&gt;splice&lt;/code&gt; on the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64184a2388a7346fec59e49f0f94873466b15963" translate="yes" xml:space="preserve">
          <source>Perform whatever actions the command line args specified. The &lt;code&gt;prove&lt;/code&gt; command line tool consists of the following code:</source>
          <target state="translated">명령 행이 지정한 조치를 수행하십시오. 는 &lt;code&gt;prove&lt;/code&gt; 명령 줄 도구는 다음과 같은 코드로 구성</target>
        </trans-unit>
        <trans-unit id="0cb883fc85b1fd84aaebb7319c682c586a065641" translate="yes" xml:space="preserve">
          <source>Performance considerations</source>
          <target state="translated">성능 고려 사항</target>
        </trans-unit>
        <trans-unit id="8b696788f6758fff45816e3f44d267110dbc7d28" translate="yes" xml:space="preserve">
          <source>Performance issues</source>
          <target state="translated">성능 문제</target>
        </trans-unit>
        <trans-unit id="75fbc5c30da07f1356bcf407f1026c09ad8550fb" translate="yes" xml:space="preserve">
          <source>Performance testing</source>
          <target state="translated">성능 시험</target>
        </trans-unit>
        <trans-unit id="d9a7e43f70de19f613749fe02de0e154833f44cd" translate="yes" xml:space="preserve">
          <source>Performing Perl pattern matches and substitutions from your C program</source>
          <target state="translated">C 프로그램에서 Perl 패턴 일치 및 대체 수행</target>
        </trans-unit>
        <trans-unit id="3561dc2da1552ce45c86dea5a0a9894997990d1e" translate="yes" xml:space="preserve">
          <source>Performs a TCP echo. It writes the given string to the socket and then reads it back. It returns 1 on success, 0 on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a965e83c4b09bcea3d12be93ff1b3ea645513eea" translate="yes" xml:space="preserve">
          <source>Performs a callback to the Perl sub specified by the SV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82005b8824a2b9aeaec337d4f6692160e086478" translate="yes" xml:space="preserve">
          <source>Performs a callback to the Perl sub whose name is in the SV. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">이름이 SV에있는 Perl 서브에 콜백을 수행합니다. &lt;a href=&quot;perlcall&quot;&gt;perlcall을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9a6e4b7d6eb6de9cfa7c1c05de09156f5313aec" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified Perl method. The blessed object must be on the stack. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">지정된 Perl 메소드에 대한 콜백을 수행합니다. 축복받은 물건이 쌓여 있어야합니다. &lt;a href=&quot;perlcall&quot;&gt;perlcall을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f3fb532eda4a585d8b90e5f5df9aa47f234c3a5" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified Perl sub. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">지정된 Perl 서브에 대한 콜백을 수행합니다. &lt;a href=&quot;perlcall&quot;&gt;perlcall을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6c45982ba770a19e61a195555dad69e694989fd" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified named and package-scoped Perl subroutine with &lt;code&gt;argv&lt;/code&gt; (a &lt;code&gt;NULL&lt;/code&gt;-terminated array of strings) as arguments. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49600604ba37ec7bb2caf7fae02578e1f3fb4be1" translate="yes" xml:space="preserve">
          <source>Performs a callback to the specified named and package-scoped Perl subroutine with &lt;code&gt;argv&lt;/code&gt; (a NULL-terminated array of strings) as arguments. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">인수 로 &lt;code&gt;argv&lt;/code&gt; (NULL로 끝나는 문자열 배열) 를 사용하여 지정된 명명 된 패키지 범위 Perl 서브 루틴에 대한 콜백을 수행합니다 . &lt;a href=&quot;perlcall&quot;&gt;perlcall을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a93173811bef953ad5c7fb92a164bcccd11d68ac" translate="yes" xml:space="preserve">
          <source>Performs a logical format of [part of] the disk. &lt;code&gt;$opOutBuf&lt;/code&gt; should be &lt;code&gt;[]&lt;/code&gt;. &lt;code&gt;$pInBuf&lt;/code&gt; should contain a &lt;code&gt;VERIFY_INFORMATION&lt;/code&gt; data structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a85f5d1bfcb6901403b71c0162984e3d90d98b0" translate="yes" xml:space="preserve">
          <source>Performs a mapping at several places inside &lt;code&gt;PARAGRAPH&lt;/code&gt; loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada148fba94bb82b7e37d39db36e65570e59f9e9" translate="yes" xml:space="preserve">
          <source>Performs an &lt;code&gt;hv_iternext&lt;/code&gt; , &lt;code&gt;hv_iterkey&lt;/code&gt; , and &lt;code&gt;hv_iterval&lt;/code&gt; in one operation.</source>
          <target state="translated">수행하는 &lt;code&gt;hv_iternext&lt;/code&gt; , &lt;code&gt;hv_iterkey&lt;/code&gt; 및 &lt;code&gt;hv_iterval&lt;/code&gt; 하나의 작업이다.</target>
        </trans-unit>
        <trans-unit id="6cba5f16ad57dc74bb0f4aa303ceff45a83b2485" translate="yes" xml:space="preserve">
          <source>Performs an &lt;code&gt;hv_iternext&lt;/code&gt;, &lt;code&gt;hv_iterkey&lt;/code&gt;, and &lt;code&gt;hv_iterval&lt;/code&gt; in one operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fa9ec15a0ad6b718fdf2229eda1c22f6e3ebcd" translate="yes" xml:space="preserve">
          <source>Performs some preprocessing to the string to ensure that it has the correct characteristics of a version. Flags the object if it contains an underscore (which denotes this is an alpha version). The boolean qv denotes that the version should be interpreted as if it had multiple decimals, even if it doesn't.</source>
          <target state="translated">문자열의 일부 전처리를 수행하여 버전의 올바른 특성을 갖도록합니다. 밑줄 (알파 버전임을 나타냄)이 포함 된 객체에 플래그를 지정합니다. 부울 qv는 버전이 소수가 아닌 경우에도 버전이 여러 개의 소수를 갖는 것으로 해석되어야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8509e18df89af9b03f62a1a48a7b2cabc5f8fb27" translate="yes" xml:space="preserve">
          <source>Performs the default fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree. This consists of applying list context to each of the argument ops. This is the standard treatment used on a call marked with &lt;code&gt;&amp;amp;&lt;/code&gt; , or a method call, or a call through a subroutine reference, or any other call where the callee can't be identified at compile time, or a call where the callee has no prototype.</source>
          <target state="translated">&lt;code&gt;entersub&lt;/code&gt; op 트리 의 arguments 부분에 대한 기본 수정을 수행합니다 . 이는 각 인수 op에 목록 컨텍스트를 적용하는 것으로 구성됩니다. 이는 &lt;code&gt;&amp;amp;&lt;/code&gt; 로 표시된 통화, 메소드 호출, 서브 루틴 참조를 통한 호출 또는 컴파일 타임에 수신자를 식별 할 수없는 기타 호출 또는 수신자가없는 호출에 사용되는 표준 처리입니다. 원기.</target>
        </trans-unit>
        <trans-unit id="dcd4f6dd1d93f7b286764b64bc6640cc06f23fc9" translate="yes" xml:space="preserve">
          <source>Performs the default fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree. This consists of applying list context to each of the argument ops. This is the standard treatment used on a call marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, or a method call, or a call through a subroutine reference, or any other call where the callee can't be identified at compile time, or a call where the callee has no prototype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72b3c1a72c8131e9de33c78c73bf05b880137dc" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree based on a subroutine prototype. This makes various modifications to the argument ops, from applying context up to inserting &lt;code&gt;refgen&lt;/code&gt; ops, and checking the number and syntactic types of arguments, as directed by the prototype. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt; , where the callee can be identified at compile time and has a prototype.</source>
          <target state="translated">서브 루틴 프로토 타입을 기반으로 &lt;code&gt;entersub&lt;/code&gt; op 트리 의 인수 부분의 수정을 수행합니다 . 이는 프로토 타입의 지시에 따라 컨텍스트 적용부터 &lt;code&gt;refgen&lt;/code&gt; op 삽입 , 인수의 수 및 구문 유형 확인 등 인수 ops를 다양하게 수정합니다 . 이는 &lt;code&gt;&amp;amp;&lt;/code&gt; 로 표시되지 않은 서브 루틴 호출에 사용되는 표준 처리 로, 호출시 수신자를 식별하고 프로토 타입을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f92bca3cb1656fef11c8172e4312cdfd95b4758" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree based on a subroutine prototype. This makes various modifications to the argument ops, from applying context up to inserting &lt;code&gt;refgen&lt;/code&gt; ops, and checking the number and syntactic types of arguments, as directed by the prototype. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, where the callee can be identified at compile time and has a prototype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6157a20bbb392600596ac64ab923dad03e358522" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree either based on a subroutine prototype or using default list-context processing. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt; , where the callee can be identified at compile time.</source>
          <target state="translated">서브 루틴 프로토 타입을 기반으로하거나 기본 목록 컨텍스트 처리를 사용하여 &lt;code&gt;entersub&lt;/code&gt; op 트리 의 인수 부분의 수정을 수행합니다 . 이는 &lt;code&gt;&amp;amp;&lt;/code&gt; 로 표시되지 않은 서브 루틴 호출에 사용되는 표준 처리 방식으로, 컴파일 시점에 수신자를 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffdb85a69182d619eb9ec1084216af019391ff8b" translate="yes" xml:space="preserve">
          <source>Performs the fixup of the arguments part of an &lt;code&gt;entersub&lt;/code&gt; op tree either based on a subroutine prototype or using default list-context processing. This is the standard treatment used on a subroutine call, not marked with &lt;code&gt;&amp;amp;&lt;/code&gt;, where the callee can be identified at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad00a766edb2027fe626d56fc86fda79a018bfe9" translate="yes" xml:space="preserve">
          <source>Perhaps I don't need a complete test harness. If I already have a TAP test log that I need to parse all I need is TAP::Parser and the various classes it depends upon. Here's the code I need to run a test and parse its TAP output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710b350b3985543df26a6fea7ac3e9557988bb88" translate="yes" xml:space="preserve">
          <source>Perhaps the most common mistake programmers make is to attempt to optimize their code before a program actually does anything useful - this is a bad idea. There's no point in having an extremely fast program that doesn't work. The first job is to get a program to</source>
          <target state="translated">프로그래머가 가장 흔히 저지르는 실수는 프로그램이 실제로 유용한 작업을 수행하기 전에 코드를 최적화하는 것입니다. 이것은 나쁜 생각입니다. 작동하지 않는 매우 빠른 프로그램을 가질 필요는 없습니다. 첫 번째 일은 프로그램을 얻는 것입니다</target>
        </trans-unit>
        <trans-unit id="f111d810e7ca920bda8f128569fc002610c45314" translate="yes" xml:space="preserve">
          <source>Perl</source>
          <target state="translated">Perl</target>
        </trans-unit>
        <trans-unit id="6e211e278fc97780451705c4eb99e429ff84722f" translate="yes" xml:space="preserve">
          <source>Perl %s required (did you mean %s?)--this is only %s, stopped</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d705397ece0db459660f487bdc69be0c678860" translate="yes" xml:space="preserve">
          <source>Perl %s required--this is only %s, stopped</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f70e71f78a6960e6bfc54f17ed9725d674c2b0" translate="yes" xml:space="preserve">
          <source>Perl 5 Documentation</source>
          <target state="translated">Perl 5 설명서</target>
        </trans-unit>
        <trans-unit id="8f5e9c26fdc65b3f883a3cb850a843ffd41fb0f9" translate="yes" xml:space="preserve">
          <source>Perl 5 Porters</source>
          <target state="translated">펄 5 포터</target>
        </trans-unit>
        <trans-unit id="142bd9030035d40d81779a4f9a904554905faa01" translate="yes" xml:space="preserve">
          <source>Perl 5 has extension mechanisms, modules and XS, specifically to avoid the need to keep changing the Perl interpreter. You can write modules that export functions, you can give those functions prototypes so they can be called like built-in functions, you can even write XS code to mess with the runtime data structures of the Perl interpreter if you want to implement really complicated things.</source>
          <target state="translated">Perl 5에는 확장 메커니즘, 모듈 및 XS가 있으며 특히 Perl 인터프리터를 계속 변경하지 않아도됩니다. 함수를 내보내는 모듈을 작성할 수 있고, 함수 프로토 타입을 제공하여 내장 함수처럼 호출 할 수 있습니다. XS 코드를 작성하여 Perl 인터프리터의 런타임 데이터 구조를 혼란스럽게 만들 수도 있습니다. .</target>
        </trans-unit>
        <trans-unit id="365a603ab08b813cf9c586a16f80eeba34a1d121" translate="yes" xml:space="preserve">
          <source>Perl 5 is developed by a community, not a corporate entity. Every change contributed to the Perl core is the result of a donation. Typically, these donations are contributions of code or time by individual members of our community. On occasion, these donations come in the form of corporate or organizational sponsorship of a particular individual or project.</source>
          <target state="translated">Perl 5는 기업체가 아닌 커뮤니티에 의해 개발되었습니다. 펄 코어에 기여한 모든 변화는 기부의 결과입니다. 일반적으로 이러한 기부는 지역 사회의 개별 구성원이 코드 또는 시간을 기증 한 것입니다. 때때로, 이러한 기부는 특정 개인 또는 프로젝트의 기업 또는 조직 후원 형태로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c7abcac9fa9f634d755f347614a5c92a44d2c3e5" translate="yes" xml:space="preserve">
          <source>Perl 5 was successfully compiled and tested on:</source>
          <target state="translated">Perl 5가 성공적으로 컴파일 및 테스트되었습니다 :</target>
        </trans-unit>
        <trans-unit id="c7ebebb63cc5cd6e093751f9acf8676fc8362950" translate="yes" xml:space="preserve">
          <source>Perl 5.10 added three specials, &lt;code&gt;${^MATCH}&lt;/code&gt; , &lt;code&gt;${^PREMATCH}&lt;/code&gt; , and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; to do the same job but without the global performance penalty. Perl 5.10 only sets these variables if you compile or execute the regular expression with the &lt;code&gt;/p&lt;/code&gt; modifier.</source>
          <target state="translated">Perl 5.10 은 글로벌 성능 저하없이 동일한 작업을 수행하기 위해 &lt;code&gt;${^MATCH}&lt;/code&gt; , &lt;code&gt;${^PREMATCH}&lt;/code&gt; 및 &lt;code&gt;${^POSTMATCH}&lt;/code&gt; 세 가지 스페셜을 추가했습니다 . Perl 5.10은 &lt;code&gt;/p&lt;/code&gt; 수정자를 사용하여 정규식을 컴파일하거나 실행하는 경우에만 이러한 변수를 설정합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
