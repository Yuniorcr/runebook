<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="9e8c486399b5de37ba2c9f97ea84309ec70622b1" translate="yes" xml:space="preserve">
          <source>Converts the first UTF-8 encoded character in the sequence starting at &lt;code&gt;p&lt;/code&gt; and extending no further than &lt;code&gt;e - 1&lt;/code&gt; to its titlecase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the titlecase version may be longer than the original character.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 에서 시작하여 &lt;code&gt;e - 1&lt;/code&gt; 이하로 확장되는 시퀀스의 첫 번째 UTF-8 인코딩 문자를 제목 케이스 버전으로 변환하고이를 UTF-8로 &lt;code&gt;s&lt;/code&gt; 에 저장 하고 길이를 &lt;code&gt;lenp&lt;/code&gt; 에 바이트 단위로 저장 합니다. &lt;code&gt;s&lt;/code&gt; 가 가리키는 버퍼는 최소 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 바이트 여야 합니다. 타이틀 케이스 버전이 원래 문자보다 길 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="b2ac1b02ca0f125c6b467ff6b8e731fe7a74404f" translate="yes" xml:space="preserve">
          <source>Converts the first UTF-8 encoded character in the sequence starting at &lt;code&gt;p&lt;/code&gt; and extending no further than &lt;code&gt;e - 1&lt;/code&gt; to its uppercase version, and stores that in UTF-8 in &lt;code&gt;s&lt;/code&gt;, and its length in bytes in &lt;code&gt;lenp&lt;/code&gt;. Note that the buffer pointed to by &lt;code&gt;s&lt;/code&gt; needs to be at least &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; bytes since the uppercase version may be longer than the original character.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; 에서 시작하여 &lt;code&gt;e - 1&lt;/code&gt; 이하로 확장되는 시퀀스의 첫 번째 UTF-8 인코딩 문자를 대문자 버전으로 변환하고이를 UTF-8에 &lt;code&gt;s&lt;/code&gt; 에 저장 하고 길이를 &lt;code&gt;lenp&lt;/code&gt; 에 바이트로 저장 합니다. &lt;code&gt;s&lt;/code&gt; 가 가리키는 버퍼 는 대문자 버전이 원래 문자보다 길 수 있으므로 최소한 &lt;code&gt;UTF8_MAXBYTES_CASE+1&lt;/code&gt; 바이트 여야 합니다.</target>
        </trans-unit>
        <trans-unit id="f49877f487db8e329200edc79f26d5291cbf1d27" translate="yes" xml:space="preserve">
          <source>Converts the given Perl data structure to a UTF-8 encoded, binary string (that is, the string contains octets only). Croaks on error.</source>
          <target state="translated">주어진 Perl 데이터 구조를 UTF-8로 인코딩 된 2 진 문자열로 변환합니다 (즉, 문자열에 8 진수 만 포함됨). 오류에 대한 삐걱 거리는 소리.</target>
        </trans-unit>
        <trans-unit id="a0abed8595dd2404bc98da1fe213fd7b681c1852" translate="yes" xml:space="preserve">
          <source>Converts the given Perl value or data structure to its JSON representation. Croaks on error.</source>
          <target state="translated">주어진 Perl 값 또는 데이터 구조를 JSON 표현으로 변환합니다. 오류에 대한 삐걱 거리는 소리.</target>
        </trans-unit>
        <trans-unit id="0cf90c7998d2448281ddcaab8fbf0e0504c17afc" translate="yes" xml:space="preserve">
          <source>Converts the name of a C source file to the most natural name of an output object file to create from it. For instance, on Unix the source file</source>
          <target state="translated">C 소스 파일의 이름을 생성 할 출력 오브젝트 파일의 가장 자연스러운 이름으로 변환합니다. 예를 들어, 유닉스에서 소스 파일</target>
        </trans-unit>
        <trans-unit id="294bcf2fccd9227784487d719b1402d9277e26d7" translate="yes" xml:space="preserve">
          <source>Converts the name of an object file to the most natural name of a output library file to create from it. For instance, on Mac OS X the object file</source>
          <target state="translated">오브젝트 파일 이름을 작성하기 위해 가장 자연스러운 출력 라이브러리 파일 이름으로 변환합니다. 예를 들어, Mac OS X에서 객체 파일</target>
        </trans-unit>
        <trans-unit id="a88553ec1e53f9448f2a6cf55dbbb5a77e63eaea" translate="yes" xml:space="preserve">
          <source>Converts the name of an object file to the most natural name of an executable file to create from it. For instance, on Mac OS X the object file</source>
          <target state="translated">객체 파일 이름을 생성 할 수있는 가장 자연스러운 실행 파일 이름으로 변환합니다. 예를 들어, Mac OS X에서 객체 파일</target>
        </trans-unit>
        <trans-unit id="ed753865139ba3992c02391f12d141bc1df3515b" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if &lt;code&gt;lenp&lt;/code&gt; is non-zero, it does the same to &lt;code&gt;lenp&lt;/code&gt;, but this time starting from &lt;code&gt;offset&lt;/code&gt;, rather than from the start of the string. Handles type coercion. &lt;code&gt;flags&lt;/code&gt; is passed to &lt;code&gt;SvPV_flags&lt;/code&gt;, and usually should be &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; to handle magic.</source>
          <target state="translated">문자열 시작 부분의 UTF-8 문자 수에서 해당하는 바이트 수로 오프셋을 변환합니다. 경우 &lt;code&gt;lenp&lt;/code&gt; 가 0이 아닌, 그것은 동일한 않습니다 &lt;code&gt;lenp&lt;/code&gt; 하지만부터이 시간 &lt;code&gt;offset&lt;/code&gt; 이 아니라 문자열의 처음부터보다. 유형 강제를 처리합니다. &lt;code&gt;flags&lt;/code&gt; 는 &lt;code&gt;SvPV_flags&lt;/code&gt; 로 전달 되며 일반적으로 마법을 처리하려면 &lt;code&gt;SV_GMAGIC|SV_CONST_RETURN&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="bd026beb328c8d2f6c169ba8bd729c19b9c13311" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if lenp is non-zero, it does the same to lenp, but this time starting from the offset, rather than from the start of the string. Handles type coercion.</source>
          <target state="translated">문자열의 시작 부분에서 UTF-8 문자 수의 오프셋을 동등한 바이트 수로 변환합니다. lenp가 0이 아닌 경우 lenp와 동일하지만 이번에는 문자열의 시작이 아니라 오프셋에서 시작합니다. 유형 강제를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="00d51fe700c6a5db38a413be18aee4d817d83eb5" translate="yes" xml:space="preserve">
          <source>Converts the offset from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles type coercion.</source>
          <target state="translated">문자열의 시작에서 바이트 수에서 오프셋을 동등한 수의 UTF-8 문자 수로 변환합니다. 유형 강제를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="29fc75feba3b4414c8baae81dd1c2325b9e8ab51" translate="yes" xml:space="preserve">
          <source>Converts the specified Latin1 character to lowercase. The results are undefined if the input doesn't fit in a byte.</source>
          <target state="translated">지정된 Latin1 문자를 소문자로 변환합니다. 입력이 바이트에 맞지 않으면 결과는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c20384152ac3c169167a164a1d915c66eb3398e" translate="yes" xml:space="preserve">
          <source>Converts the specified character to foldcase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toFOLD_A&lt;/code&gt; is equivalent. (There is no equivalent &lt;code&gt;to_FOLD_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toFOLD_uni&quot;&gt;toFOLD_uni&lt;/a&gt; is needed there.)</source>
          <target state="translated">지정된 문자를 소문자로 변환합니다. 입력이 ASCII 대문자 이외의 문자 인 경우 해당 입력 문자 자체가 반환됩니다. &lt;code&gt;toFOLD_A&lt;/code&gt; 변형 은 동일합니다. (상응 없다 &lt;code&gt;to_FOLD_L1&lt;/code&gt; 의 전체 일반성으로 전체 라틴어 범위는 &lt;a href=&quot;#toFOLD_uni&quot;&gt;toFOLD_uni이&lt;/a&gt; 가 필요합니다.)</target>
        </trans-unit>
        <trans-unit id="a9cd398fca2b6c81e897731d04dc9dce419bd557" translate="yes" xml:space="preserve">
          <source>Converts the specified character to foldcase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toFOLD_A&lt;/code&gt; is equivalent. (There is no equivalent &lt;code&gt;to_FOLD_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toFOLD_uvchr&quot;&gt;&quot;toFOLD_uvchr&quot;&lt;/a&gt; is needed there.)</source>
          <target state="translated">지정된 문자를 foldcase로 변환합니다. 입력이 ASCII 대문자가 아닌 경우 해당 입력 문자 자체가 반환됩니다. &lt;code&gt;toFOLD_A&lt;/code&gt; 변형 은 동일합니다. ( &lt;a href=&quot;#toFOLD_uvchr&quot;&gt;&quot;toFOLD_uvchr&quot;&lt;/a&gt; 의 전체 일반성 이 필요 하므로 전체 Latin1 범위에 해당하는 &lt;code&gt;to_FOLD_L1&lt;/code&gt; 이 없습니다 .)</target>
        </trans-unit>
        <trans-unit id="7775e6edae290c80035bdde5ee180cafb1a95c9a" translate="yes" xml:space="preserve">
          <source>Converts the specified character to lowercase using the current locale's rules, if possible; otherwise returns the input character itself.</source>
          <target state="translated">가능한 경우 현재 로캘의 규칙을 사용하여 지정된 문자를 소문자로 변환합니다. 그렇지 않으면 입력 문자 자체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f3b386523ea039f2b6d6f2c24bea443697341ca" translate="yes" xml:space="preserve">
          <source>Converts the specified character to lowercase. If the input is anything but an ASCII uppercase character, that input character itself is returned. Variant &lt;code&gt;toLOWER_A&lt;/code&gt; is equivalent.</source>
          <target state="translated">지정된 문자를 소문자로 변환합니다. 입력이 ASCII 대문자 이외의 문자 인 경우 해당 입력 문자 자체가 반환됩니다. &lt;code&gt;toLOWER_A&lt;/code&gt; 에 대한 변형 은 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c7f73f6dc4ef675e0ea0c8a1169c8b80eea8488" translate="yes" xml:space="preserve">
          <source>Converts the specified character to titlecase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toTITLE_A&lt;/code&gt; is equivalent. (There is no &lt;code&gt;toTITLE_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toTITLE_uni&quot;&gt;toTITLE_uni&lt;/a&gt; is needed there. Titlecase is not a concept used in locale handling, so there is no functionality for that.)</source>
          <target state="translated">지정된 문자를 제목으로 변환합니다. 입력이 ASCII 소문자 이외의 입력 인 경우 해당 입력 문자 자체가 반환됩니다. &lt;code&gt;toTITLE_A&lt;/code&gt; 변형 은 동일합니다. (전혀 없다 &lt;code&gt;toTITLE_L1&lt;/code&gt; 의 전체 일반성으로 전체 라틴어 범위는 &lt;a href=&quot;#toTITLE_uni&quot;&gt;toTITLE_uni이&lt;/a&gt; 가 필요합니다. 타이틀 케이스 로케일 처리에 사용되는 개념이 아니다, 그래서에 대한 기능이 없습니다.)</target>
        </trans-unit>
        <trans-unit id="58b4954fed755e782bc5e907470ddb42c12019e5" translate="yes" xml:space="preserve">
          <source>Converts the specified character to titlecase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toTITLE_A&lt;/code&gt; is equivalent. (There is no &lt;code&gt;toTITLE_L1&lt;/code&gt; for the full Latin1 range, as the full generality of &lt;a href=&quot;#toTITLE_uvchr&quot;&gt;&quot;toTITLE_uvchr&quot;&lt;/a&gt; is needed there. Titlecase is not a concept used in locale handling, so there is no functionality for that.)</source>
          <target state="translated">지정된 문자를 제목 케이스로 변환합니다. 입력이 ASCII 소문자가 아닌 경우 해당 입력 문자 자체가 반환됩니다. &lt;code&gt;toTITLE_A&lt;/code&gt; 변형 은 동일합니다. (전혀 없다 &lt;code&gt;toTITLE_L1&lt;/code&gt; 전체 라틴어 범위는 전체 일반성으로, &lt;a href=&quot;#toTITLE_uvchr&quot;&gt;&quot;toTITLE_uvchr&quot;&lt;/a&gt; 가 필요합니다. 타이틀 케이스 로케일 처리에 사용되는 개념이 아니다, 그래서에 대한 기능이 없습니다.)</target>
        </trans-unit>
        <trans-unit id="38943cd0db5a909d68224b0f5858aec10b5fbd97" translate="yes" xml:space="preserve">
          <source>Converts the specified character to uppercase. If the input is anything but an ASCII lowercase character, that input character itself is returned. Variant &lt;code&gt;toUPPER_A&lt;/code&gt; is equivalent.</source>
          <target state="translated">지정된 문자를 대문자로 변환합니다. 입력이 ASCII 소문자 이외의 입력 인 경우 해당 입력 문자 자체가 반환됩니다. &lt;code&gt;toUPPER_A&lt;/code&gt; 변형 은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="cbfe95a5d57e473ed974a2c8dd7b4c3a3dc6f133" translate="yes" xml:space="preserve">
          <source>Converts the tarfile into a uuencoded file</source>
          <target state="translated">tarfile을 uuencoded 파일로 변환</target>
        </trans-unit>
        <trans-unit id="bdd1ddbbeb7d012a889f8c34ef17fb66387fbf89" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by &lt;code&gt;offsetp&lt;/code&gt; from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if &lt;code&gt;lenp&lt;/code&gt; is non-zero, it does the same to &lt;code&gt;lenp&lt;/code&gt;, but this time starting from the offset, rather than from the start of the string. Handles magic and type coercion.</source>
          <target state="translated">&lt;code&gt;offsetp&lt;/code&gt; 가 가리키는 값을 문자열 시작부터 UTF-8 문자 수에서 해당하는 바이트 수로 변환합니다. 경우 &lt;code&gt;lenp&lt;/code&gt; 가 0이 아닌, 그것은 동일한 않습니다 &lt;code&gt;lenp&lt;/code&gt; 하지만,이 시간이 아니라 문자열의 시작 오프셋에서 시작. 마법과 유형 강요를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="9aba6510751c0ff024357be5e7c7a1a2cd44d36b" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by &lt;code&gt;offsetp&lt;/code&gt; from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles magic and type coercion.</source>
          <target state="translated">&lt;code&gt;offsetp&lt;/code&gt; 가 가리키는 값을 문자열 시작 부분의 바이트 수에서 해당하는 UTF-8 문자 수로 변환합니다. 마법과 유형 강요를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="8105a421b149b241dd9345f828f8405806dc4509" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by offsetp from a count of UTF-8 chars from the start of the string, to a count of the equivalent number of bytes; if lenp is non-zero, it does the same to lenp, but this time starting from the offset, rather than from the start of the string. Handles magic and type coercion.</source>
          <target state="translated">문자열의 시작 부분에서 UTF-8 문자 수에서 offsetp가 가리키는 값을 동등한 바이트 수로 변환합니다. lenp가 0이 아닌 경우 lenp와 동일하지만 이번에는 문자열의 시작이 아니라 오프셋에서 시작합니다. 마법과 유형 강압을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="40b55cad996caa19ed6d279ac88d5fa4b681b529" translate="yes" xml:space="preserve">
          <source>Converts the value pointed to by offsetp from a count of bytes from the start of the string, to a count of the equivalent number of UTF-8 chars. Handles magic and type coercion.</source>
          <target state="translated">문자열 시작에서 바이트 수에서 offsetp로 가리키는 값을 동등한 UTF-8 문자 수로 변환합니다. 마법과 유형 강압을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a94cae48bcd262bf43c14789dbb77de7e197a13e" translate="yes" xml:space="preserve">
          <source>Cookie support requires &lt;a href=&quot;HTTP::CookieJar&quot;&gt;HTTP::CookieJar&lt;/a&gt; or an equivalent class.</source>
          <target state="translated">쿠키 지원에는 &lt;a href=&quot;HTTP::CookieJar&quot;&gt;HTTP :: CookieJar&lt;/a&gt; 또는 이와 동등한 클래스 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="a9134f42b0fc69f710ef38795745edc87cc85d2d" translate="yes" xml:space="preserve">
          <source>Cooperative multitasking systems have running threads give up control if one of two things happen. If a thread calls a yield function, it gives up control. It also gives up control if the thread does something that would cause it to block, such as perform I/O. In a cooperative multitasking implementation, one thread can starve all the others for CPU time if it so chooses.</source>
          <target state="translated">협력적인 멀티 태스킹 시스템에는 실행중인 스레드가있어 두 가지 중 하나가 발생하면 제어권을 포기합니다. 스레드가 yield 함수를 호출하면 제어를 포기합니다. 또한 스레드가 I / O 수행과 같이 스레드를 차단할 수있는 작업을 수행하는지 제어합니다. 협력적인 멀티 태스킹 구현에서 하나의 스레드는 다른 스레드가 원하는 경우 CPU 시간 동안 모든 스레드를 고갈시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10d83a55361a3918a7093423f8f0834e129f7b3a" translate="yes" xml:space="preserve">
          <source>CopLABEL</source>
          <target state="translated">CopLABEL</target>
        </trans-unit>
        <trans-unit id="9ed50c23b4ede350f18d8db4e8ff034aa250a769" translate="yes" xml:space="preserve">
          <source>CopLABEL_len</source>
          <target state="translated">CopLABEL_len</target>
        </trans-unit>
        <trans-unit id="655a812ae11b9e6af06dd6e85f2025b415ae5ab9" translate="yes" xml:space="preserve">
          <source>CopLABEL_len_flags</source>
          <target state="translated">CopLABEL_len_flags</target>
        </trans-unit>
        <trans-unit id="d032796f15a64112e4e06fa18894fca88d7a2f99" translate="yes" xml:space="preserve">
          <source>Copied from &lt;a href=&quot;../ipc/cmd#%24path-%3d-can_run(-PROGRAM-)%3b&quot;&gt;IPC::Cmd&lt;/a&gt;, but modified into a method (and removed &lt;code&gt;$INSTANCES&lt;/code&gt; capability).</source>
          <target state="translated">&lt;a href=&quot;../ipc/cmd#%24path-%3d-can_run(-PROGRAM-)%3b&quot;&gt;IPC :: Cmd&lt;/a&gt; 에서 복사 되었지만 메소드로 수정되었으며 &lt;code&gt;$INSTANCES&lt;/code&gt; 기능이 제거되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d6cb73f711cd94d86a39f2870124b76ef387e79a" translate="yes" xml:space="preserve">
          <source>Copied from &lt;a href=&quot;IPC::Cmd#%24path-%3D-can_run%28-PROGRAM-%29%3B&quot;&gt;IPC::Cmd&lt;/a&gt;, but modified into a method (and removed &lt;code&gt;$INSTANCES&lt;/code&gt; capability).</source>
          <target state="translated">&lt;a href=&quot;IPC::Cmd#%24path-%3D-can_run%28-PROGRAM-%29%3B&quot;&gt;IPC :: Cmd&lt;/a&gt; 에서 복사 되었지만 메서드로 수정되었습니다 ( &lt;code&gt;$INSTANCES&lt;/code&gt; 기능 제거 ).</target>
        </trans-unit>
        <trans-unit id="58da612a1bc6d614d12d58ef8797a656a94e658e" translate="yes" xml:space="preserve">
          <source>Copies a double into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">선택적으로 SV를 축복하여 새 SV에 이중을 복사합니다. &lt;code&gt;rv&lt;/code&gt; 인수는 RV로 업그레이드됩니다. 그 RV는 새로운 SV를 가리 키도록 수정 될 것입니다. &lt;code&gt;classname&lt;/code&gt; 인수는 축복의 패키지를 나타냅니다. 축복을 피하려면 &lt;code&gt;classname&lt;/code&gt; 을 &lt;code&gt;NULL&lt;/code&gt; 로 설정하십시오 . 새로운 SV의 참조 카운트는 1이며 RV가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b94b7919e525faa91a8e77599fe71995afad6761" translate="yes" xml:space="preserve">
          <source>Copies a double into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;&lt;a href=&quot;#sv_setnv_mg&quot;&gt;&quot;sv_setnv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 SV에 double을 복사하고 필요한 경우 먼저 업그레이드합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_setnv_mg&quot;&gt;&quot;sv_setnv_mg&quot;&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c347bb9b827a2334958f6bf2f2ca6f534daeac0e" translate="yes" xml:space="preserve">
          <source>Copies a double into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setnv_mg&lt;/code&gt; .</source>
          <target state="translated">주어진 SV에 이중을 복사하여 필요한 경우 먼저 업그레이드합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;sv_setnv_mg&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d8cefbf6ac5594c3f2b292003c3193edf554f91" translate="yes" xml:space="preserve">
          <source>Copies a pointer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. If the &lt;code&gt;pv&lt;/code&gt; argument is &lt;code&gt;NULL&lt;/code&gt;, then &lt;code&gt;PL_sv_undef&lt;/code&gt; will be placed into the SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">포인터를 새 SV에 복사하고 선택적으로 SV를 축복합니다. &lt;code&gt;rv&lt;/code&gt; 인수는 RV로 업그레이드됩니다. 해당 RV는 새 SV를 가리 키도록 수정됩니다. 는 IF &lt;code&gt;pv&lt;/code&gt; 인수가 &lt;code&gt;NULL&lt;/code&gt; , 다음 &lt;code&gt;PL_sv_undef&lt;/code&gt; 는 목표 값에 배치됩니다. &lt;code&gt;classname&lt;/code&gt; 인수는 축복의 패키지를 나타냅니다. 축복을 피하기 위해 &lt;code&gt;classname&lt;/code&gt; 을 &lt;code&gt;NULL&lt;/code&gt; 로 설정하십시오 . 새 SV는 참조 횟수가 1이고 RV가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b27095a6cd52e5d6134280b02b569beed020d999" translate="yes" xml:space="preserve">
          <source>Copies a pointer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. If the &lt;code&gt;pv&lt;/code&gt; argument is NULL then &lt;code&gt;PL_sv_undef&lt;/code&gt; will be placed into the SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">선택적으로 SV를 축복하여 새 SV에 포인터를 복사합니다. &lt;code&gt;rv&lt;/code&gt; 인수는 RV로 업그레이드됩니다. 그 RV는 새로운 SV를 가리 키도록 수정 될 것입니다. 는 IF &lt;code&gt;pv&lt;/code&gt; 인수가 다음 NULL &lt;code&gt;PL_sv_undef&lt;/code&gt; 는 목표 값에 배치됩니다. &lt;code&gt;classname&lt;/code&gt; 인수는 축복의 패키지를 나타냅니다. 축복을 피하려면 &lt;code&gt;classname&lt;/code&gt; 을 &lt;code&gt;NULL&lt;/code&gt; 로 설정하십시오 . 새로운 SV의 참조 카운트는 1이며 RV가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9db7fa22d38286362b6e5e7c37f0e85f91f79d46" translate="yes" xml:space="preserve">
          <source>Copies a string (possibly containing embedded &lt;code&gt;NUL&lt;/code&gt; characters) into an SV. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to be copied. If the &lt;code&gt;ptr&lt;/code&gt; argument is NULL the SV will become undefined. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_setpvn_mg&quot;&gt;&quot;sv_setpvn_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">문자열 (내장 된 &lt;code&gt;NUL&lt;/code&gt; 문자 를 포함 할 수 있음 )을 SV에 복사합니다 . &lt;code&gt;len&lt;/code&gt; 매개 변수는 바이트 수를 복사 할 나타냅니다. 는 IF &lt;code&gt;ptr&lt;/code&gt; 인수가 NULL 인 SV는 정의 될 것이다. '세트'마법을 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_setpvn_mg&quot;&gt;&quot;sv_setpvn_mg&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1786cfa4001f16d4465ff1be0891e50c99f2c03f" translate="yes" xml:space="preserve">
          <source>Copies a string (possibly containing embedded &lt;code&gt;NUL&lt;/code&gt; characters) into an SV. The &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes to be copied. If the &lt;code&gt;ptr&lt;/code&gt; argument is NULL the SV will become undefined. Does not handle 'set' magic. See &lt;code&gt;sv_setpvn_mg&lt;/code&gt; .</source>
          <target state="translated">문자열 (포함 된 &lt;code&gt;NUL&lt;/code&gt; 문자 를 포함 할 수 있음 )을 SV에 복사합니다 . &lt;code&gt;len&lt;/code&gt; 매개 변수는 바이트 수를 복사 할 나타냅니다. 는 IF &lt;code&gt;ptr&lt;/code&gt; 인수가 NULL 인 SV는 정의 될 것이다. '세트'마법을 처리하지 않습니다. &lt;code&gt;sv_setpvn_mg&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d174a878d53f27a45b16e4832647c4bb0c4f91eb" translate="yes" xml:space="preserve">
          <source>Copies a string into a new SV, optionally blessing the SV. The length of the string must be specified with &lt;code&gt;n&lt;/code&gt; . The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">문자열을 새 SV에 복사하고 선택적으로 SV를 축복합니다. 문자열의 길이는 &lt;code&gt;n&lt;/code&gt; 으로 지정해야합니다 . &lt;code&gt;rv&lt;/code&gt; 인수는 RV로 업그레이드됩니다. 그 RV는 새로운 SV를 가리 키도록 수정 될 것입니다. &lt;code&gt;classname&lt;/code&gt; 인수는 축복의 패키지를 나타냅니다. 축복을 피하려면 &lt;code&gt;classname&lt;/code&gt; 을 &lt;code&gt;NULL&lt;/code&gt; 로 설정하십시오 . 새로운 SV의 참조 카운트는 1이며 RV가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9c09401eaad1ab5a3afa704ed6c9a679f18a844f" translate="yes" xml:space="preserve">
          <source>Copies a string into a new SV, optionally blessing the SV. The length of the string must be specified with &lt;code&gt;n&lt;/code&gt;. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">문자열을 새 SV에 복사하고 선택적으로 SV를 축복합니다. 문자열의 길이는 &lt;code&gt;n&lt;/code&gt; 으로 지정해야합니다 . &lt;code&gt;rv&lt;/code&gt; 인수는 RV로 업그레이드됩니다. 해당 RV는 새 SV를 가리 키도록 수정됩니다. &lt;code&gt;classname&lt;/code&gt; 인수는 축복의 패키지를 나타냅니다. 축복을 피하기 위해 &lt;code&gt;classname&lt;/code&gt; 을 &lt;code&gt;NULL&lt;/code&gt; 로 설정하십시오 . 새 SV는 참조 횟수가 1이고 RV가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="49dd945a738053707e8153a3f6568b4727f3f0a6" translate="yes" xml:space="preserve">
          <source>Copies a string into an SV. The string must be terminated with a &lt;code&gt;NUL&lt;/code&gt; character, and not contain embeded &lt;code&gt;NUL&lt;/code&gt;'s. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_setpv_mg&quot;&gt;&quot;sv_setpv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">문자열을 SV에 복사합니다. 문자열은 &lt;code&gt;NUL&lt;/code&gt; 문자 로 끝나야하며 포함 된 &lt;code&gt;NUL&lt;/code&gt; 을 포함하지 않아야합니다 . '세트'마법을 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_setpv_mg&quot;&gt;&quot;sv_setpv_mg&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2cc17ff1663cdcd5ccc34774a29afbe226d6bde7" translate="yes" xml:space="preserve">
          <source>Copies a string into an SV. The string must be terminated with a &lt;code&gt;NUL&lt;/code&gt; character. Does not handle 'set' magic. See &lt;code&gt;sv_setpv_mg&lt;/code&gt; .</source>
          <target state="translated">문자열을 SV에 복사합니다. 문자열은 &lt;code&gt;NUL&lt;/code&gt; 문자 로 끝나야합니다 . '세트'마법을 처리하지 않습니다. &lt;code&gt;sv_setpv_mg&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d6a11e59627d7c63a1013ba97863b31a87ec51fe" translate="yes" xml:space="preserve">
          <source>Copies a stringified representation of the source SV into the destination SV. Automatically performs any necessary &lt;code&gt;mg_get&lt;/code&gt; and coercion of numeric values into strings. Guaranteed to preserve &lt;code&gt;UTF8&lt;/code&gt; flag even from overloaded objects. Similar in nature to &lt;code&gt;sv_2pv[_flags]&lt;/code&gt; but operates directly on an SV instead of just the string. Mostly uses &lt;code&gt;sv_2pv_flags&lt;/code&gt; to do its work, except when that would lose the UTF-8'ness of the PV.</source>
          <target state="translated">소스 SV의 문자열 표현을 대상 SV에 복사합니다. 필요한 &lt;code&gt;mg_get&lt;/code&gt; 을 자동으로 수행하고 숫자 값을 문자열로 강제 변환합니다. 오버로드 된 개체에서도 &lt;code&gt;UTF8&lt;/code&gt; 플래그 를 유지하도록 보장됩니다 . 본질적으로 &lt;code&gt;sv_2pv[_flags]&lt;/code&gt; 와 유사 하지만 문자열 대신 SV에서 직접 작동합니다. PV의 UTF-8 '성을 잃을 때를 제외하고는 대부분 &lt;code&gt;sv_2pv_flags&lt;/code&gt; 를 사용 하여 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="acd7e631f37132f2461a9f4128a317eb4d34d689" translate="yes" xml:space="preserve">
          <source>Copies a stringified representation of the source SV into the destination SV. Automatically performs any necessary mg_get and coercion of numeric values into strings. Guaranteed to preserve UTF8 flag even from overloaded objects. Similar in nature to sv_2pv[_flags] but operates directly on an SV instead of just the string. Mostly uses sv_2pv_flags to do its work, except when that would lose the UTF-8'ness of the PV.</source>
          <target state="translated">소스 SV의 문자열 화 된 표현을 대상 SV에 복사합니다. 필요한 mg_get 및 숫자 값을 문자열로 강제 변환합니다. 오버로드 된 오브젝트에서도 UTF8 플래그를 보존합니다. 본질적으로 sv_2pv [_flags]와 유사하지만 문자열 대신 SV에서 직접 작동합니다. PV의 UTF-8을 잃을 때를 제외하고는 대부분 sv_2pv_flags를 사용하여 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="1ceb5498aa08b64599a670ddd20b40acf24c2850" translate="yes" xml:space="preserve">
          <source>Copies all the files that are in the MANIFEST file to a newly created directory with the name &lt;code&gt;$(DISTNAME)-$(VERSION)&lt;/code&gt;. If that directory exists, it will be removed first.</source>
          <target state="translated">MANIFEST 파일에있는 모든 파일을 이름이 &lt;code&gt;$(DISTNAME)-$(VERSION)&lt;/code&gt; 새로 작성된 디렉토리에 복사합니다 . 해당 디렉토리가 존재하면 먼저 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="6f5a43cdae0ae6da25d7ce8fda19fe8a78a5ff5d" translate="yes" xml:space="preserve">
          <source>Copies an integer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">정수를 새 SV에 복사하고 선택적으로 SV를 축복합니다. &lt;code&gt;rv&lt;/code&gt; 인수는 RV로 업그레이드됩니다. 그 RV는 새로운 SV를 가리 키도록 수정 될 것입니다. &lt;code&gt;classname&lt;/code&gt; 인수는 축복의 패키지를 나타냅니다. 축복을 피하려면 &lt;code&gt;classname&lt;/code&gt; 을 &lt;code&gt;NULL&lt;/code&gt; 로 설정하십시오 . 새로운 SV의 참조 카운트는 1이며 RV가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="035a875cdd2dd0f2c08c39190b65075e75bdab43" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, also updating its string value. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_setpviv_mg&quot;&gt;&quot;sv_setpviv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">정수를 주어진 SV에 복사하고 문자열 값도 업데이트합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_setpviv_mg&quot;&gt;&quot;sv_setpviv_mg&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="87655bfb9567748496e5eaf66f62a786876d2425" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, also updating its string value. Does not handle 'set' magic. See &lt;code&gt;sv_setpviv_mg&lt;/code&gt; .</source>
          <target state="translated">주어진 SV에 정수를 복사하고 문자열 값도 업데이트합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;sv_setpviv_mg&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="00c29852534f30e2ae4ff46e83a4cb8a255e227c" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;&lt;a href=&quot;#sv_setiv_mg&quot;&gt;&quot;sv_setiv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">정수를 주어진 SV에 복사하고 필요한 경우 먼저 업그레이드합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_setiv_mg&quot;&gt;&quot;sv_setiv_mg&quot;&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f2eb4580cc9eaa76949e7acc7122330f226683c" translate="yes" xml:space="preserve">
          <source>Copies an integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setiv_mg&lt;/code&gt; .</source>
          <target state="translated">주어진 SV에 정수를 복사하여 필요한 경우 먼저 업그레이드합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;sv_setiv_mg&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a3984d0cef29ac256b94baf888dc25a6bab8951" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into a new SV, optionally blessing the SV. The &lt;code&gt;rv&lt;/code&gt; argument will be upgraded to an RV. That RV will be modified to point to the new SV. The &lt;code&gt;classname&lt;/code&gt; argument indicates the package for the blessing. Set &lt;code&gt;classname&lt;/code&gt; to &lt;code&gt;NULL&lt;/code&gt; to avoid the blessing. The new SV will have a reference count of 1, and the RV will be returned.</source>
          <target state="translated">부호없는 정수를 새 SV에 복사하고 선택적으로 SV를 축복합니다. &lt;code&gt;rv&lt;/code&gt; 인수는 RV로 업그레이드됩니다. 그 RV는 새로운 SV를 가리 키도록 수정 될 것입니다. &lt;code&gt;classname&lt;/code&gt; 인수는 축복의 패키지를 나타냅니다. 축복을 피하려면 &lt;code&gt;classname&lt;/code&gt; 을 &lt;code&gt;NULL&lt;/code&gt; 로 설정하십시오 . 새로운 SV의 참조 카운트는 1이며 RV가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bf21fd661c0e322e6f19efa95b15c51044cd7011" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;&lt;a href=&quot;#sv_setuv_mg&quot;&gt;&quot;sv_setuv_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">부호없는 정수를 주어진 SV에 복사하고 필요한 경우 먼저 업그레이드합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_setuv_mg&quot;&gt;&quot;sv_setuv_mg&quot;&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="817708bbdae5a3bc2e1729daf57c7384a8ed11df" translate="yes" xml:space="preserve">
          <source>Copies an unsigned integer into the given SV, upgrading first if necessary. Does not handle 'set' magic. See also &lt;code&gt;sv_setuv_mg&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 지정된 SV에 복사하고 필요한 경우 먼저 업그레이드합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;sv_setuv_mg&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f42b69b0be33ffa2663dc670be8d62b1f6b76a37" translate="yes" xml:space="preserve">
          <source>Copies each directory tree of %from_to to its corresponding value preserving timestamps and permissions.</source>
          <target state="translated">타임 스탬프 및 권한을 유지하는 % from_to의 각 디렉토리 트리를 해당 값으로 복사합니다.</target>
        </trans-unit>
        <trans-unit id="547ef09412d01381bdd77f45cd22559f6b5f129c" translate="yes" xml:space="preserve">
          <source>Copies each key of %from_to to its corresponding value efficiently. Filenames with the extension .pm are autosplit into the $autosplit_dir. Any destination directories are created.</source>
          <target state="translated">% from_to의 각 키를 해당 값으로 효율적으로 복사합니다. 확장자가 .pm 인 파일 이름은 $ autosplit_dir에 자동 분할됩니다. 모든 대상 디렉토리가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="846bdfea43a2a2af6a08ab0e57282654afad7efa" translate="yes" xml:space="preserve">
          <source>Copies each key of %from_to to its corresponding value efficiently. If an $autosplit_dir is provided, all .pm files will be autosplit into it. Any destination directories are created.</source>
          <target state="translated">% from_to의 각 키를 해당 값에 효율적으로 복사합니다. $ autosplit_dir이 제공되면 모든 .pm 파일이 자동으로 분할됩니다. 모든 대상 디렉토리가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="8b4556d985cc8c666fe1310a61eb0e2bd704d901" translate="yes" xml:space="preserve">
          <source>Copies sources to the destination. Multiple sources are allowed if destination is an existing directory.</source>
          <target state="translated">소스를 대상에 복사합니다. 대상이 기존 디렉토리 인 경우 여러 소스가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="22aa8bfe9c7cb3953e35f5697eea8150b160ffab" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt; . The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic on destination SV. Calls 'get' magic on source SV. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination.</source>
          <target state="translated">소스 SV &lt;code&gt;ssv&lt;/code&gt; 의 내용을 대상 SV &lt;code&gt;dsv&lt;/code&gt; 에 복사 합니다. 소스 SV는 필멸의 경우 소멸 될 수 있으므로 소스 SV를 재사용해야하는 경우이 기능을 사용하지 마십시오. 대상 SV에서 '설정'마법을 처리하지 않습니다. 소스 SV에서 'get'매직을 호출합니다. 느슨하게 말하면 값으로 복사를 수행하여 대상의 이전 내용을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="60fc994ce68e4c7b21a4843b708d86bf7c3db663" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt; . The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;ssv&lt;/code&gt; if appropriate, else not. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_NOSTEAL&lt;/code&gt; bit set then the buffers of temps will not be stolen. &amp;lt;sv_setsv&amp;gt; and &lt;code&gt;sv_setsv_nomg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">소스 SV &lt;code&gt;ssv&lt;/code&gt; 의 내용을 대상 SV &lt;code&gt;dsv&lt;/code&gt; 에 복사 합니다. 소스 SV는 필멸의 경우 소멸 될 수 있으므로 소스 SV를 재사용해야하는 경우이 기능을 사용하지 마십시오. '세트'마법을 처리하지 않습니다. 느슨하게 말하면 값으로 복사를 수행하여 대상의 이전 내용을 제거합니다. 는 IF &lt;code&gt;flags&lt;/code&gt; 이 매개 변수 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 의 비트 세트는 것 &lt;code&gt;mg_get&lt;/code&gt; 에 &lt;code&gt;ssv&lt;/code&gt; 적절한 경우, 다른 없습니다. 경우 &lt;code&gt;flags&lt;/code&gt; 이 매개 변수 &lt;code&gt;SV_NOSTEAL&lt;/code&gt; 의 비트 세트는 다음 임시 직원의 버퍼가 도난되지 않습니다. &amp;lt;sv_setsv&amp;gt; 및 &lt;code&gt;sv_setsv_nomg&lt;/code&gt; 는이 기능의 관점에서 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="bfd4ac89279f1d7ef22b929b0fc9f1db3272fc1c" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt;. The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic on destination SV. Calls 'get' magic on source SV. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination.</source>
          <target state="translated">소스 SV &lt;code&gt;ssv&lt;/code&gt; 의 내용을 대상 SV &lt;code&gt;dsv&lt;/code&gt; 에 복사 합니다. 소스 SV가 치명적인 경우 파괴 될 수 있으므로 소스 SV를 재사용해야하는 경우이 기능을 사용하지 마십시오. 목적지 SV에서 'set'매직을 처리하지 않습니다. 소스 SV에서 'get'마법을 호출합니다. 느슨하게 말하면 대상의 이전 콘텐츠를 삭제하여 값별 복사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0f5d08695c3b8b6e6fe3ea6463bfc7eb79623e32" translate="yes" xml:space="preserve">
          <source>Copies the contents of the source SV &lt;code&gt;ssv&lt;/code&gt; into the destination SV &lt;code&gt;dsv&lt;/code&gt;. The source SV may be destroyed if it is mortal, so don't use this function if the source SV needs to be reused. Does not handle 'set' magic. Loosely speaking, it performs a copy-by-value, obliterating any previous content of the destination. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_GMAGIC&lt;/code&gt; bit set, will &lt;code&gt;mg_get&lt;/code&gt; on &lt;code&gt;ssv&lt;/code&gt; if appropriate, else not. If the &lt;code&gt;flags&lt;/code&gt; parameter has the &lt;code&gt;SV_NOSTEAL&lt;/code&gt; bit set then the buffers of temps will not be stolen. &lt;code&gt;sv_setsv&lt;/code&gt; and &lt;code&gt;sv_setsv_nomg&lt;/code&gt; are implemented in terms of this function.</source>
          <target state="translated">소스 SV &lt;code&gt;ssv&lt;/code&gt; 의 내용을 대상 SV &lt;code&gt;dsv&lt;/code&gt; 에 복사 합니다. 소스 SV가 치명적인 경우 파괴 될 수 있으므로 소스 SV를 재사용해야하는 경우이 기능을 사용하지 마십시오. '세트'마법을 처리하지 않습니다. 느슨하게 말하면 대상의 이전 콘텐츠를 삭제하여 값별 복사를 수행합니다. 는 IF &lt;code&gt;flags&lt;/code&gt; 이 매개 변수 &lt;code&gt;SV_GMAGIC&lt;/code&gt; 의 비트 세트는 것 &lt;code&gt;mg_get&lt;/code&gt; 에 &lt;code&gt;ssv&lt;/code&gt; 적절한 경우, 다른 없습니다. 경우 &lt;code&gt;flags&lt;/code&gt; 이 매개 변수 &lt;code&gt;SV_NOSTEAL&lt;/code&gt; 의 비트 세트는 다음 임시 직원의 버퍼가 도난되지 않습니다. &lt;code&gt;sv_setsv&lt;/code&gt; 및 &lt;code&gt;sv_setsv_nomg&lt;/code&gt; 는이 기능 측면에서 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="847212512bee6cfe3c2fc61106e5643ef825dc7e" translate="yes" xml:space="preserve">
          <source>Copies the files that are the keys in %src to the $dest_dir. %src is typically returned by the maniread() function.</source>
          <target state="translated">% src의 키인 파일을 $ dest_dir에 복사합니다. % src는 일반적으로 maniread () 함수에 의해 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="044df6f54a0ed69d56933cce4e18e906d8d34a2e" translate="yes" xml:space="preserve">
          <source>Copies the magic from one SV to another. See &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">한 SV에서 다른 SV로 마법을 복사합니다. &lt;code&gt;&lt;a href=&quot;#sv_magic&quot;&gt;&quot;sv_magic&quot;&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e68b585bfbe265f09cd9d4efb3e0feed1b83417" translate="yes" xml:space="preserve">
          <source>Copies the magic from one SV to another. See &lt;code&gt;sv_magic&lt;/code&gt; .</source>
          <target state="translated">한 SV에서 다른 SV로 마술을 복사합니다. &lt;code&gt;sv_magic&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="844182ad4ab003932666f9c6d69d92cbb8e46845" translate="yes" xml:space="preserve">
          <source>Coping with duplicate mappings</source>
          <target state="translated">중복 매핑 처리</target>
        </trans-unit>
        <trans-unit id="af74f7c5362aaee985bf8cda3dd75fc80751ce51" translate="yes" xml:space="preserve">
          <source>Copy</source>
          <target state="translated">Copy</target>
        </trans-unit>
        <trans-unit id="10cde56ca7c49175bf1a8d45b0645111f523dc1c" translate="yes" xml:space="preserve">
          <source>Copy C files</source>
          <target state="translated">C 파일 복사</target>
        </trans-unit>
        <trans-unit id="82e1de5d54543510504259bd75e1005b5001c11a" translate="yes" xml:space="preserve">
          <source>Copy Constructor</source>
          <target state="translated">생성자 복사</target>
        </trans-unit>
        <trans-unit id="5534252cfc67f8ea30c5aeb4b712455aa3844020" translate="yes" xml:space="preserve">
          <source>Copy files or filehandles</source>
          <target state="translated">파일 또는 파일 핸들 복사</target>
        </trans-unit>
        <trans-unit id="8f8861ebe6be1c187f524367a7e8796012ce6621" translate="yes" xml:space="preserve">
          <source>Copy it from there to %PlatformSDKDir%\Bin</source>
          <target state="translated">거기에서 % PlatformSDKDir % \ Bin으로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="352f0bd6f1cdae18ed953337da21951855d0f9a6" translate="yes" xml:space="preserve">
          <source>Copy method did not return a reference</source>
          <target state="translated">복사 방법이 참조를 반환하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="262ea28b5df50512a45d54b1fa1054f3be93e5d2" translate="yes" xml:space="preserve">
          <source>Copy on Write</source>
          <target state="translated">쓰기시 복사</target>
        </trans-unit>
        <trans-unit id="d970d36bc75453aa42adc5b64a75a188af0598ee" translate="yes" xml:space="preserve">
          <source>Copy some of the magic from an existing SV to new localized version of that SV. Container magic (</source>
          <target state="translated">기존 SV의 일부 마법을 해당 SV의 새로운 현지화 된 버전으로 복사합니다. 컨테이너 매직 (</target>
        </trans-unit>
        <trans-unit id="a4bc97f3ddf500700682ce93b45d0b65e29cc177" translate="yes" xml:space="preserve">
          <source>Copy some of the magic from an existing SV to new localized version of that SV. Container magic (eg %ENV, $1, tie) gets copied, value magic doesn't (eg taint, pos).</source>
          <target state="translated">기존 SV의 일부 마법을 해당 SV의 현지화 된 새 버전으로 복사하십시오. 컨테이너 마법 (예 : % ENV, $ 1, tie)이 복사되고 가치 마법 (예 : 오염, 위치)이 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42604f529925528ec27a34a4e43701bf63839bc5" translate="yes" xml:space="preserve">
          <source>Copy the internal log into the supplied buffer:</source>
          <target state="translated">내부 로그를 제공된 버퍼에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="6d73bd4397739daf068f0e0c81f47887b133737c" translate="yes" xml:space="preserve">
          <source>Copy the miniperl executable from the native build done earlier to replace the cross compiled miniperl.</source>
          <target state="translated">이전에 수행 한 기본 빌드에서 miniperl 실행 파일을 복사하여 크로스 컴파일 된 miniperl을 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="944d3ba1daacc35a1c39f04db6c6016f8a5e0184" translate="yes" xml:space="preserve">
          <source>Copy your Perl executable to a BS2000 LLM using bs2cp:</source>
          <target state="translated">bs2cp를 사용하여 Perl 실행 파일을 BS2000 LLM에 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="2d7ed2211bbc181246d723daf7d8159780f901a4" translate="yes" xml:space="preserve">
          <source>Copy your header files and C files to this directory</source>
          <target state="translated">헤더 파일과 C 파일을이 디렉토리로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="be72b9f84ea202319d1aaeea02d8c8fc9a6e56b3" translate="yes" xml:space="preserve">
          <source>CopyD</source>
          <target state="translated">CopyD</target>
        </trans-unit>
        <trans-unit id="92a77adaed078f2efbdf1b062b243fce26d45fb9" translate="yes" xml:space="preserve">
          <source>CopyFile</source>
          <target state="translated">CopyFile</target>
        </trans-unit>
        <trans-unit id="c335801fea1f2d1dbebf6f8eeca0204e33a6e925" translate="yes" xml:space="preserve">
          <source>CopyFileW</source>
          <target state="translated">CopyFileW</target>
        </trans-unit>
        <trans-unit id="28830f956cb6be1523be78bd0ea03d1e23d2db4f" translate="yes" xml:space="preserve">
          <source>Copying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved. This file is offered as-is, without any warranty.</source>
          <target state="translated">저작권 고지 및이 고지가 보존되는 경우 수정 여부에 관계없이이 파일의 복사 및 배포는 로열티없이 모든 매체에서 허용됩니다. 이 파일은 보증없이있는 그대로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="704f751eff0d0b505d7bf92d8e801e4d308664b6" translate="yes" xml:space="preserve">
          <source>Copying and pasting code without understanding it, while superstitiously believing in its value. This term originated from preindustrial cultures dealing with the detritus of explorers and colonizers of technologically advanced cultures. See</source>
          <target state="translated">코드를 이해하지 않고 복사 및 붙여 넣기를하면서 미신적으로 그 가치를 믿습니다. 이 용어는 기술적으로 진보 된 문화의 탐험가들과 식민지들을 다루는 산업화 이전 문화에서 유래했다. 보다</target>
        </trans-unit>
        <trans-unit id="f48221dc8de0edb298f93c3d9ea0b286f39f81ac" translate="yes" xml:space="preserve">
          <source>Copying private information out of your system. Even something as simple as your user name is of value to others. Much useful information could be gleaned from your environment variables for example.</source>
          <target state="translated">시스템 외부에서 개인 정보를 복사합니다. 사용자 이름처럼 단순한 것조차도 다른 사람들에게 가치가 있습니다. 예를 들어 환경 변수에서 유용한 정보를 많이 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba61f765e33a7dbdaa5dc699f7442584180fbf0c" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2012 Tom Christiansen.</source>
          <target state="translated">저작권 &amp;copy; 2012 Tom Christiansen.</target>
        </trans-unit>
        <trans-unit id="937d2f60d09c53d79a1381de58ec4983d7faadb3" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1990-2011 by Larry Wall and others.</source>
          <target state="translated">Larry Wall 및 기타에 의한 저작권 (C) 1990-2011.</target>
        </trans-unit>
        <trans-unit id="fb8450e1f5cfd8fc44ca561023832e2026e0d699" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1990-2012 by Larry Wall and others.</source>
          <target state="translated">Larry Wall 및 기타에 의한 저작권 (C) 1990-2012.</target>
        </trans-unit>
        <trans-unit id="866e8b342f220185b06062e3c92301f53f840c56" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1991-2, RSA Data Security, Inc. Created 1991. All rights reserved.</source>
          <target state="translated">Copyright (C) 1991-2, RSA Data Security, Inc. 1991 년 설립. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="ce84d927d25243b7f0ba50259fa0282961655ce2" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006 by Larry Wall and others</source>
          <target state="translated">저작권 (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006 by Larry Wall 및 기타</target>
        </trans-unit>
        <trans-unit id="8fd1a6d880564bdc3ea1e763f953df5ebac7e46e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1994-2013 Larry Wall</source>
          <target state="translated">저작권 (C) 1994-2013 Larry Wall</target>
        </trans-unit>
        <trans-unit id="1c0c559930ca4225e8816cff4ee2873c1c41a1ac" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995, 1996, 1997, 1998 Doug MacEachern and Jon Orwant. All Rights Reserved.</source>
          <target state="translated">Copyright (C) 1995, 1996, 1997, 1998 Doug MacEachern and Jon Orwant. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="7753d654bde6f35fbc641ca93c36723f4450d986" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-1997 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C) 1995-1997 Graham Barr. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="41e6822b76c3ea6316f06f0f3f825f11c9d89a53" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-1998 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C) 1995-1998 Graham Barr. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="6877a06b4904ba628ac816ce402dd1d4d2264364" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-2004 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C) 1995-2004 Graham Barr. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="857fb05adcf7c1dddb22d4d67a1472d9f664056c" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1995-2006 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C) 1995-2006 Graham Barr. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="292274a2b01d4df1c901b9114cee5b641d729f45" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1996-2002,2005,2006 David Muir Sharnoff. Copyright (C) 2005 Aristotle Pagaltzis Copyright (C) 2012-2013 Google, Inc. This module may be modified, used, copied, and redistributed at your own risk. Although allowed by the preceding license, please do not publicly redistribute modified versions of this code with the name &quot;Text::Tabs&quot; unless it passes the unmodified Text::Tabs test suite.</source>
          <target state="translated">저작권 (C) 1996-2002,2005,2006 David Muir Sharnoff. Copyright (C) 2005 Aristotle Pagaltzis 저작권 (C) 2012-2013 Google, Inc.이 모듈은 사용자 책임하에 수정, 사용, 복사 및 재배포 될 수 있습니다. 이전 라이센스에서 허용되었지만 수정되지 않은 Text :: Tabs 테스트 스위트를 통과하지 않으면이 코드의 수정 된 버전을 &quot;Text :: Tabs&quot;라는 이름으로 공개적으로 재배포하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="02bb538e3acc9fba7e66a4108eaa2f54189885d2" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1996-2009 David Muir Sharnoff. Copyright (C) 2012-2013 Google, Inc. This module may be modified, used, copied, and redistributed at your own risk. Although allowed by the preceding license, please do not publicly redistribute modified versions of this code with the name &quot;Text::Wrap&quot; unless it passes the unmodified Text::Wrap test suite.</source>
          <target state="translated">저작권 (C) 1996-2009 David Muir Sharnoff. Copyright (C) 2012-2013 Google, Inc.이 모듈은 사용자 책임하에 수정, 사용, 복사 및 재배포 될 수 있습니다. 이전 라이센스에서 허용되었지만 수정되지 않은 Text :: Wrap 테스트 스위트를 통과하지 않으면이 코드의 수정 된 버전을 &quot;Text :: Wrap&quot;이라는 이름으로 공개적으로 재배포하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="77d8ad6518ef8e3ffa4a429ac08f118904c382ac" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1997, 1999 Tom Phoenix</source>
          <target state="translated">저작권 (C) 1997, 1999 Tom Phoenix</target>
        </trans-unit>
        <trans-unit id="1083441a53a840968b1bebc2c93ec7991242dee9" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1997-1998 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C) 1997-1998 Graham Barr. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="be9f862b37f5ff7749d0f77ebafa51e2d36343e3" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1997-1998 Graham Barr. All rights reserved. This document is free; you can redistribute it and/or modify it under the terms of the Artistic License.</source>
          <target state="translated">Copyright (C) 1997-1998 Graham Barr. 판권 소유. 이 문서는 무료입니다. Artistic License 조건에 따라 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67e16ccb30ea63aa1d756ce57f18d2d7b5847ff8" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1998, 2002, 2003 Jon Orwant. All Rights Reserved.</source>
          <target state="translated">저작권 (C) 1998, 2002, 2003 Jon Orwant. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="2f3882c23e70d777b1c7cf53d7458484280606e5" translate="yes" xml:space="preserve">
          <source>Copyright (C) 1998-2011 Graham Barr. All rights reserved.</source>
          <target state="translated">Copyright (C) 1998-2011 Graham Barr. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="ac17252dff0b280d0c8f5d0cae17c03cf4f1f4e7" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2001 Tim Jenness All Rights Reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (C) 2001 Tim Jenness All Rights Reserved. 이 프로그램은 무료 소프트웨어입니다. Perl 자체와 동일한 조건으로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b56e1884f3cbf3a76b762137b786be31a436b8d8" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2002,2004 Tim Jenness, Christian Soeller, Hugo van der Sanden. All Rights Reserved.</source>
          <target state="translated">Copyright (C) 2002,2004 Tim Jenness, Christian Soeller, Hugo van der Sanden. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="b90a8995c2bc16a451a02631a6a11820b0642403" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2002-2009 Richard Clamp. All Rights Reserved.</source>
          <target state="translated">저작권 (C) 2002-2009 Richard Clamp. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="066dc5f0420738b9ed994bc87aed4131e1192b32" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2003-2015 Mark Shelor</source>
          <target state="translated">저작권 (C) 2003-2015 Mark Shelor</target>
        </trans-unit>
        <trans-unit id="aeee9599c383e12d06e553cf6c3403d56e08b09d" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2003-2018 Mark Shelor</source>
          <target state="translated">저작권 (C) 2003-2018 Mark Shelor</target>
        </trans-unit>
        <trans-unit id="0502d4fa0143a2c2aeda7cbf651d8608a825434d" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2003-2018 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;.</source>
          <target state="translated">Copyright (C) 2003-2018 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="1c7f20037aad67be66061eee55047374368b5f2e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2004, 2008 Matthijs van Duin. All rights reserved. Copyright (C) 2014 cPanel Inc. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (C) 2004, 2008 Matthijs van Duin. 판권 소유. 저작권 (C) 2014 cPanel Inc. 모든 권리 보유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5def902ce53af0d66c9ae0b1a9f55a7bc540b36c" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2006-2007 by (Anno Siegel)</source>
          <target state="translated">(Anno Siegel)의 저작권 (C) 2006-2007</target>
        </trans-unit>
        <trans-unit id="f4f599478a7c763fffedd920a5a166712ac6ea8e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2009 Andrew Main (Zefram) &amp;lt;zefram@fysh.org&amp;gt;</source>
          <target state="translated">Copyright (C) 2009 Andrew Main (Zefram) &amp;lt;zefram@fysh.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2597f7c9797e32e397b520f2e02fb8d631f3e3ed" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2009, 2011</source>
          <target state="translated">저작권 (C) 2009, 2011</target>
        </trans-unit>
        <trans-unit id="8755b65f04050e00fc905ef449a5227ff56b3960" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2009-2018 H.Merijn Brand</source>
          <target state="translated">Copyright (C) 2009-2018 H.Merijn 브랜드</target>
        </trans-unit>
        <trans-unit id="d16dc4251e47686ff5ed08ba79678470456a743a" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2011, 2012, 2013 Andrew Main (Zefram) &amp;lt;zefram@fysh.org&amp;gt;</source>
          <target state="translated">Copyright (C) 2011, 2012, 2013 Andrew Main (제프 람) &amp;lt;zefram@fysh.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9326d4f57f4fa1c3e9f86b0671cfa7872b37e761" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013 Chris Williams. All Rights Reserved.</source>
          <target state="translated">Copyright (C) 2013 Chris Williams. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="a34a8c3d3fd945b8553d77b9f5cafa050b50ccee" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013 by Andy Broad.</source>
          <target state="translated">저작권 (C) 2013 by Andy Broad.</target>
        </trans-unit>
        <trans-unit id="0551f76556b474feb10743502865de368f761620" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2014 Steve Hay. All rights reserved.</source>
          <target state="translated">Copyright (C) 2013-2014 Steve Hay. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="016fd5abd1ea817b47a90095ca3a306b9a33d928" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2014, 2016 Steve Hay. All rights reserved.</source>
          <target state="translated">저작권 (C) 2013-2014, 2016 Steve Hay. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="93afe488be39b6063bfa0185b33d708710721012" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2016 Steve Hay. All rights reserved.</source>
          <target state="translated">Copyright (C) 2013-2016 Steve Hay. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="86d9fdb32937bc9db16969d1b1948baa828b947e" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2013-2017 Steve Hay. All rights reserved.</source>
          <target state="translated">저작권 (C) 2013-2017 Steve Hay. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="4bc94f608b1f4e23b4db6754569f00b1355b17fd" translate="yes" xml:space="preserve">
          <source>Copyright (C) 2014 Steve Hay. All rights reserved.</source>
          <target state="translated">저작권 (C) 2014 Steve Hay. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="9518f36c932f3c018246afa392632645480f7348" translate="yes" xml:space="preserve">
          <source>Copyright (C)2008 Paul Fenwick</source>
          <target state="translated">Copyright (C)2008 Paul Fenwick</target>
        </trans-unit>
        <trans-unit id="4ea3a71dcc2d03195129ea498ff706e80bf76ea5" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1989, 1993 The Regents of the University of California. All rights reserved.</source>
          <target state="translated">Copyright (c) 1989, 1993 The Regents of the University of California. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="c99e15fbe5fafed3fe83907c942a8467ca2f0856" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995 Graham Barr &amp;amp; Nick Ing-Simmons. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1995 Graham Barr &amp;amp; Nick Ing-Simmons. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95d67aab425ae8ab541cdf2624605b8e79d554fe" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2011 Paul Marquess. All rights reserved. Copyright (c) 2011-2014 Reini Urban. All rights reserved.</source>
          <target state="translated">저작권 (c) 1995-2011 Paul Marquess. 판권 소유. 저작권 (c) 2011-2014 Reini Urban. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="3b1e4b28da9d24208be1220cbdcb97feece0e3cc" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2011 Paul Marquess. All rights reserved. Copyright (c) 2011-2014 Reini Urban. All rights reserved. Copyright (c) 2014-2017 cPanel Inc. All rights reserved.</source>
          <target state="translated">Copyright (c) 1995-2011 Paul Marquess. 판권 소유. Copyright (c) 2011-2014 Reini Urban. 판권 소유. 저작권 (c) 2014-2017 cPanel Inc. 모든 권리 보유.</target>
        </trans-unit>
        <trans-unit id="f9a66947e2ff3697bb460252be39f2139fd2dfb8" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2012 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1995-2012 Paul Marquess. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a331cc5bbf130d1638077c14f80eecf3e2a52eaf" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2014 Paul Marquess. All rights reserved.</source>
          <target state="translated">저작권 (c) 1995-2014 Paul Marquess. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="b61425b030b32e8ed61c022396c8c58d243f0944" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2019 Paul Marquess. All rights reserved.</source>
          <target state="translated">저작권 (c) 1995-2019 Paul Marquess. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="b7ac532ad19d4f605cd728f4e86e5df193f612bd" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-2020 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1995-2020 Paul Marquess. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl 자체와 동일한 조건으로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="733de8f3f1ca09b5c9786044fb092e7f4c05f294" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1995-98 Ilya Zakharevich. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1995-98 Ilya Zakharevich. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df77495d41e20942244bf412d31846952ede8477" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996 by Eryq. All rights reserved. Copyright (c) 1999,2001 by ZeeGee Software Inc. All rights reserved.</source>
          <target state="translated">Copyright (c) 1996 by Eryq. 판권 소유. Copyright (c) 1999,2001 by ZeeGee Software Inc. 모든 권리 보유.</target>
        </trans-unit>
        <trans-unit id="ecaed13460704998ba577e4c2d2468a151c24b30" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996, 1997 Malcolm Beattie Copyright (c) 2008, 2010, 2013, 2014 Reini Urban</source>
          <target state="translated">저작권 (c) 1996, 1997 Malcolm Beattie 저작권 (c) 2008, 2010, 2013, 2014 Reini Urban</target>
        </trans-unit>
        <trans-unit id="1feb9747b49165f4eb65853775088ee0251ff609" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2002 Douglas E. Wegscheid. All rights reserved.</source>
          <target state="translated">저작권 (c) 1996-2002 Douglas E. Wegscheid. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="cc400f4ad8917f7b799fd3975597a9810d8ce636" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2014 Gurusamy Sarathy. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1996-2014 Gurusamy Sarathy. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4372c6404dcb6a5725b8387daab2fc54f5c69b6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-2019 Gurusamy Sarathy. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">Copyright (c) 1996-2019 Gurusamy Sarathy. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl 자체와 동일한 조건으로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="485f651d515be5bba642d42e474826a93f61bb6b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1996-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1996-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08e4cdda088cf550ea65b3bf4dc89aba9b493bbc" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2003 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1997-2003 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4887e8376b496893469d0bac43718dbc07ae1822" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2003 Graham Barr, 2003-2007 David Rolsky. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1997-2003 Graham Barr, 2003-2007 David Rolsky. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7245b2dcd573952f48717b9921c61d1e9b2c21e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2007 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1997-2007 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d6af5defc144adda44580441213764dbdd5a579" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2010 Tom Christiansen, Nathan Torkington, and other authors as noted. All rights reserved.</source>
          <target state="translated">Copyright (c) 1997-2010 Tom Christiansen, Nathan Torkington 및 기타 저자. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="96ab04550bbdbe3276e7b627e8ac745ea70c4e50" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-2013 Tom Christiansen, Nathan Torkington, and other authors as noted. All rights reserved.</source>
          <target state="translated">Copyright (c) 1997-2013 Tom Christiansen, Nathan Torkington 및 기타 저자. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="b85bffc2f702e5a69d96edf1040c8231c9905e16" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1997-8 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7a94533b6d04a11dc7e8f73fc628424ecae3fb0" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1997-8 Graham Barr. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 1997-8 Graham Barr. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="422bbbfa2ebf0ecbc7060450d7441d3ab485a17c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998+ Sean M. Burke. All rights reserved.</source>
          <target state="translated">저작권 (c) 1998+ Sean M. Burke. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="4c5d0fa3fbcbb72648eeb53bb25226cd8e07fc2d" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2000 Joshua Nathaniel Pritikin.</source>
          <target state="translated">저작권 (c) 1998-2000 Joshua Nathaniel Pritikin.</target>
        </trans-unit>
        <trans-unit id="f70857aa7efdb3e62785ad1d300160624d1ca8c4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">저작권 (c) 1998-2004 Sean M. Burke. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="7bf33c9fe762000df4df0dfadc70c956cdf17ba0" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1998-2004 Tom Hughes &amp;lt;</source>
          <target state="translated">저작권 (c) 1998-2004 Tom Hughes &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e0ae8e826ee43e27b9f80f2f471b56b206c7c868" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1999 Tuomas J. Lukka &amp;lt;lukka@iki.fi&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as perl itself.</source>
          <target state="translated">저작권 (c) 1999 Tuomas J. Lukka &amp;lt;lukka@iki.fi&amp;gt;. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. 펄 자체와 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6b26641bc7ea8de46aed22323cf3dc2c633f52e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 1999-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">저작권 (c) 1999-2004 Sean M. Burke. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="61d2f566b03b65ebb8a473ade4f6c05ec2e7b7d6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2000 Mark Kvale All rights reserved.</source>
          <target state="translated">저작권 (c) 2000 Mark Kvale 판권 소유.</target>
        </trans-unit>
        <trans-unit id="6b673e87d8f650dc2b158ddb165b6c82449af2bd" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2000 Mark Kvale. All rights reserved. Now maintained by Perl porters.</source>
          <target state="translated">Copyright (c) 2000 Mark Kvale. 판권 소유. 이제 Perl 포터가 관리합니다.</target>
        </trans-unit>
        <trans-unit id="956588c9cff385547adb21a72fd25e005bd741ba" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001+ Sean M. Burke. All rights reserved.</source>
          <target state="translated">저작권 (c) 2001+ Sean M. Burke. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="101703b452cff466c3017bb8ed36a01aa5987d0f" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001, Colin McMillen. All rights reserved.</source>
          <target state="translated">저작권 (c) 2001, Colin McMillen. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="4be1efc0ccc0981f45abf323878167441401a846" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2002 Michael G. Schwern.</source>
          <target state="translated">저작권 (c) 2001-2002 Michael G. Schwern.</target>
        </trans-unit>
        <trans-unit id="745610c91808a145be6f46517082d4e57524612c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2004 Sean M. Burke. All rights reserved.</source>
          <target state="translated">저작권 (c) 2001-2004 Sean M. Burke. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="a0d7b58f298fb119d28129c1f5191e2b7fc5f22e" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2015, brian d foy, All Rights Reserved.</source>
          <target state="translated">Copyright (c) 2001-2015, brian d foy, All Rights Reserved.</target>
        </trans-unit>
        <trans-unit id="4d2e5910aa37852371584102aaa9bb817151d32c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2001-2018, brian d foy, All Rights Reserved.</source>
          <target state="translated">Copyright (c) 2001-2018, brian d foy, All Rights Reserved.</target>
        </trans-unit>
        <trans-unit id="943b9de4d5b00b8ab9c8008e42e2cad2c939e815" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002 Sean M. Burke.</source>
          <target state="translated">저작권 (c) 2002 Sean M. Burke.</target>
        </trans-unit>
        <trans-unit id="27329c3ca1bd874414fcb99c62900358075672d6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002 Sean M. Burke. All rights reserved.</source>
          <target state="translated">저작권 (c) 2002 Sean M. Burke. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="2b28a7c47cb1fc722aa93ca95ba51f4648d81356" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002, 2003, 2004, 2005, 2006, 2007, 2008 Jarkko Hietaniemi. All rights reserved.</source>
          <target state="translated">Copyright (c) 2002, 2003, 2004, 2005, 2006, 2007, 2008 Jarkko Hietaniemi. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="999355b8d02ad239f1c7f43da46147f2a00c43e4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002, 2003, 2004, 2012 Elizabeth Mattijsen. All rights reserved. This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 2002, 2003, 2004, 2012 Elizabeth Mattijsen. 판권 소유. 이 라이브러리는 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="baaf0433379f30ce563209428329e2d5328a5310" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002,3,4 Sean M. Burke. All rights reserved.</source>
          <target state="translated">저작권 (c) 2002,3,4 Sean M. Burke. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="bfb8ae6b5304e536dda7306d8f5e5b4e96abc310" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2003, Rob Brown. All rights reserved.</source>
          <target state="translated">Copyright (c) 2002-2003, Rob Brown. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="d3cf30d649786ddcd606f40863280a1c98090473" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2004 Sean M. Burke.</source>
          <target state="translated">저작권 (c) 2002-2004 Sean M. Burke.</target>
        </trans-unit>
        <trans-unit id="370a5e83a0a375fc863482e0f23b23bcc8829b4b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2007 Sean M. Burke.</source>
          <target state="translated">저작권 (c) 2002-2007 Sean M. Burke.</target>
        </trans-unit>
        <trans-unit id="d20f5965d8d31028f9af0d7c9c2319d612d7cf7c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2002-2007 by D.H. aka PodMaster</source>
          <target state="translated">DH 일명 PodMaster의 저작권 (c) 2002-2007</target>
        </trans-unit>
        <trans-unit id="1a96f1bac6842e525db311ea1fddc129e4e8347c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2005 Allison Randal.</source>
          <target state="translated">저작권 (c) 2003-2005 Allison Randal.</target>
        </trans-unit>
        <trans-unit id="739c0eceb4f80af2e4cb7f48ed65f0a345752cc6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2005 Ken Williams. All rights reserved.</source>
          <target state="translated">저작권 (c) 2003-2005 Ken Williams. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="2afe6350b059d07cb75bd42fe8c3e717187f030d" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2003-2015 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;.</source>
          <target state="translated">Copyright (c) 2003-2015 Mark Shelor &amp;lt;mshelor@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="8cbc77258020bb73d4d2613484c0c85b25c299f1" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004 Sean M. Burke.</source>
          <target state="translated">저작권 (c) 2004 Sean M. Burke.</target>
        </trans-unit>
        <trans-unit id="68da7dd6a77efed4cbb3653f046ac6a3a62b384b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Perl 5 Porters의 저작권 (c) 2004. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="81397d758a65133b90ab0602bb70a5a4dd4563d7" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004,2007 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Perl 5 Porters의 저작권 (c) 2004,2007. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="3c8167cf442af8fc4f64de836da6cfdb60bde4e8" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-14 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Perl 5 포터에 의한 저작권 (c) 2004-14. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="6b274ec54ed3e9fc14376e565d4163bda3b1ca64" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-2005 Nokia. All rights reserved.</source>
          <target state="translated">저작권 (c) 2004-2005 Nokia. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="00c3184f7198be0bfec2c01f0ef09d44048c6235" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2004-2013 by the Perl 5 Porters. All rights reserved.</source>
          <target state="translated">Perl 5 Porters의 저작권 (c) 2004-2013. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="08da8c434007b220b2ae85c8f6ae67bced13a749" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005 Paul Marquess. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 2005 Paul Marquess. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="626531bda13f14d08f7f1720b4b85c8df8972de4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005-2014 Paul Marquess. All rights reserved.</source>
          <target state="translated">저작권 (c) 2005-2014 Paul Marquess. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="7067bb260cbe9d156e966bd0d89cda731173e719" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2005-2019 Paul Marquess. All rights reserved.</source>
          <target state="translated">저작권 (c) 2005-2019 Paul Marquess. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="f4b7861e56dd95d2fb72c43ec9bcffc12d2604f4" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2006-2007 Jarkko Hietaniemi.</source>
          <target state="translated">저작권 (c) 2006-2007 Jarkko Hietaniemi.</target>
        </trans-unit>
        <trans-unit id="ca4bb54bc6b524ec7b6211da633ce092f06642b6" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-10 Max Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; Based on the idea of &lt;code&gt;base.pm&lt;/code&gt; , which was introduced with Perl 5.004_04.</source>
          <target state="translated">Copyright (c) 2007-10 Max Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; Perl 5.004_04에서 소개 된 &lt;code&gt;base.pm&lt;/code&gt; 아이디어를 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="99b55113ec04a69f163df98ad79820c69bf73427" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-2011, Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; . All rights reserved.</source>
          <target state="translated">저작권 (c) 2007-2011, Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; . 판권 소유.</target>
        </trans-unit>
        <trans-unit id="6a55e4c26d6630b98cecfc85f608ab5cf48d4519" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-2011, Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt;. All rights reserved.</source>
          <target state="translated">Copyright (c) 2007-2011, Andy Armstrong &lt;code&gt;&amp;lt;andy@hexten.net&amp;gt;&lt;/code&gt; . 판권 소유.</target>
        </trans-unit>
        <trans-unit id="7703f636c33f5dfb9894245718a8a216d831820b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2007-2017 Max Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; Based on the idea of &lt;code&gt;base.pm&lt;/code&gt;, which was introduced with Perl 5.004_04.</source>
          <target state="translated">Copyright (c) 2007-2017 Max Maischein &lt;code&gt;&amp;lt;corion@cpan.org&amp;gt;&lt;/code&gt; Perl 5.004_04에 도입 된 &lt;code&gt;base.pm&lt;/code&gt; 아이디어를 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="edf65b9e5034d506f64cda4d822d94cf071d2118" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2008 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 (c) 2008 Graham Barr &amp;lt;gbarr@pobox.com&amp;gt;. 판권 소유. 이 프로그램은 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed957028639d6d4c042dc0481e28ac4f7c14da8c" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011 Mark Allen. All rights reserved.</source>
          <target state="translated">Copyright (c) 2011 Mark Allen. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="d2961ceaca647df086cd88aa0aa9059e913775ed" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011 brian d foy. All rights reserved.</source>
          <target state="translated">저작권 (c) 2011 brian d foy. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="434fd723792e461d443ecf11246cd1bd00296f79" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2011-2019 Paul Marquess. All rights reserved.</source>
          <target state="translated">저작권 (c) 2011-2019 Paul Marquess. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="2a5b051ccd36b98d80623ef946212cc37718831b" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2012, Steve Peters. All rights reserved.</source>
          <target state="translated">저작권 (c) 2012, Steve Peters. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="cccb94d0a658cb5b6364733adf2a74cb6a27df14" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2016, cPanel Inc. All rights reserved.</source>
          <target state="translated">저작권 (c) 2016, cPanel Inc. 모든 권리 보유.</target>
        </trans-unit>
        <trans-unit id="9f3010163b4c6b1b513600848bac5972441cab52" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2017 Mark Allen.</source>
          <target state="translated">저작권 (c) 2017 Mark Allen.</target>
        </trans-unit>
        <trans-unit id="7a8a04711fdbb0e9a1f2a763d0ad79331ab4d83a" translate="yes" xml:space="preserve">
          <source>Copyright (c) 2017-2018, Reini Urban. All rights reserved.</source>
          <target state="translated">저작권 (c) 2017-2018, Reini Urban. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="0a0578f5c0a1861e0a6616062cbeff94f9471da0" translate="yes" xml:space="preserve">
          <source>Copyright 1995-1997,2002-2004 Gisle Aas.</source>
          <target state="translated">저작권 1995-1997,2002-2004 Gisle Aas.</target>
        </trans-unit>
        <trans-unit id="40d0702e44bca347009394197d44a9e6c4610d74" translate="yes" xml:space="preserve">
          <source>Copyright 1995-1999, 2001-2004, 2010 Gisle Aas.</source>
          <target state="translated">저작권 1995-1999, 2001-2004, 2010 Gisle Aas.</target>
        </trans-unit>
        <trans-unit id="ff3ab6ee42d1ea131108bec0a223d6275afc6193" translate="yes" xml:space="preserve">
          <source>Copyright 1995-2015 (c) perl5 porters.</source>
          <target state="translated">Copyright 1995-2015 (c) perl5 포터.</target>
        </trans-unit>
        <trans-unit id="f0d261837294050f7db24cdd54684bb6c0bb4914" translate="yes" xml:space="preserve">
          <source>Copyright 1996 Zenin</source>
          <target state="translated">Copyright 1996 제닌</target>
        </trans-unit>
        <trans-unit id="9f586c7c8d64bfd9e85b5c08564c28475c2476d0" translate="yes" xml:space="preserve">
          <source>Copyright 1996 Zenin. Copyright 1996, 1997, 1998, 2000, 2001, 2002, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;. Copyright 2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;. This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">저작권 1996 Zenin. Copyright 1996, 1997, 1998, 2000, 2001, 2002, 2005, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;. 저작권 2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;. 이 프로그램은 무료 소프트웨어입니다. Perl 자체와 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7632e07208ee68dabeb6776a6c67da02df7ea374" translate="yes" xml:space="preserve">
          <source>Copyright 1996-1998, 2000-2002, 2005-2006, 2008-2018, 2020 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 1996-1998, 2000-2002, 2005-2006, 2008-2018, 2020 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2578ceec7e839432122171b06d2ebf101a0829d8" translate="yes" xml:space="preserve">
          <source>Copyright 1997 - 2001 Damian Conway. All Rights Reserved.</source>
          <target state="translated">저작권 1997-2001 Damian Conway. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="e24c0d040bccb06d10ccb3a57cbbc46e6ed0dddf" translate="yes" xml:space="preserve">
          <source>Copyright 1998 The Perl Journal.</source>
          <target state="translated">저작권 1998 Perl Journal.</target>
        </trans-unit>
        <trans-unit id="d52fcfe7bec45098d75b5470bde1a0d7ed1a805a" translate="yes" xml:space="preserve">
          <source>Copyright 1998, 1999, 2000, 2001, 2012 by Mark Jason Dominus</source>
          <target state="translated">Mark Jason Dominus의 1998 년, 1999 년, 2000 년, 2001 년, 2012 년 저작권</target>
        </trans-unit>
        <trans-unit id="25fd40d58410cd1696c803df7d48f5ed2513b4fb" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="beb00d2f951db1eb5afb7de8fb7c0bdeb6824fdf" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2002, 2004, 2006, 2008, 2009, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Copyright 1999, 2000, 2001, 2002, 2004, 2006, 2008, 2009, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a467ad5fa2d0aa209d23ad0c1537c33c44052bff" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="d116660891649b2a4f34cbcb8ed7ded670e6b71e" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2012, 2013 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="ddbd1e59ee3c4fb0b62059719b54651f34736f7a" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2015, 2018 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 1999, 2000, 2001, 2004, 2006, 2008, 2010, 2015, 2018 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3b5d92e90abbe2d5c568afb5c521beac86f1e04e" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2002, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Copyright 1999, 2001, 2002, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="24528ac4ae30b0fed790404fa53cadcc8ddc8c0c" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Copyright 1999, 2001, 2004, 2006, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="7b2d43a23e11d1e64b9ff8dddf2e2017709a8fc7" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001, 2004, 2006, 2008, 2009, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 1999, 2001, 2004, 2006, 2008, 2009, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ac651f4e373098f44dbad6df5212ef6215119173" translate="yes" xml:space="preserve">
          <source>Copyright 1999, 2001-2002, 2004, 2006, 2008-2009, 2014-2015, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 1999, 2001-2002, 2004, 2006, 2008-2009, 2014-2015, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8a100799724a4b6d936cd9d5990968808cfd03b2" translate="yes" xml:space="preserve">
          <source>Copyright 1999-2001, 2004, 2006, 2008, 2010, 2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 1999-2001, 2004, 2006, 2008, 2010, 2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="090e412130a80144ab6d150a99138925239dd2c1" translate="yes" xml:space="preserve">
          <source>Copyright 1999-2002, 2004, 2006, 2008-2009, 2012-2016, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 1999-2002, 2004, 2006, 2008-2009, 2012-2016, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c01dd2da073419fb93fde9e4635be90d2c245d22" translate="yes" xml:space="preserve">
          <source>Copyright 1999-2010, 2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 1999-2010, 2012-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="afd8603ca97a02bd01a88b91850074e2c2f9eec2" translate="yes" xml:space="preserve">
          <source>Copyright 2000 by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;</source>
          <target state="translated">저작권 2000 by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="233c7c72bfb3a12d36d9a0b1a2a2236732bf795f" translate="yes" xml:space="preserve">
          <source>Copyright 2000 by Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;. Copyright 2001, 2004, 2008 by Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Joe Smith &amp;lt;Joe.Smith@inwap.com&amp;gt;의 저작권 2000. Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;의 저작권 2001, 2004, 2008.</target>
        </trans-unit>
        <trans-unit id="bac1b99511dfac3f040f153e32b31825485f6b22" translate="yes" xml:space="preserve">
          <source>Copyright 2001 by Jarkko Hietaniemi</source>
          <target state="translated">Jarkko Hietaniemi의 저작권 2001</target>
        </trans-unit>
        <trans-unit id="a45d4f360838ff53efe27568ac995966a9f842f5" translate="yes" xml:space="preserve">
          <source>Copyright 2001 by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">Copyright 2001 by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="243e24d63f4c77f51a7da60344b71df40a623886" translate="yes" xml:space="preserve">
          <source>Copyright 2001, 2004, 2008, 2014, 2018-2019 by Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 2001, 2004, 2008, 2014, 2018-2019 by Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="39f328bf52bbb81edfba43d285c298d3543ac18c" translate="yes" xml:space="preserve">
          <source>Copyright 2001, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Copyright 2001, 2008, 2009 Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="9b8bbb1250710cf3e64d5c4a0c509eaf7f1ba3ef" translate="yes" xml:space="preserve">
          <source>Copyright 2001, 2008, 2009, 2014, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</source>
          <target state="translated">저작권 2001, 2008, 2009, 2014, 2018-2019 Russ Allbery &amp;lt;rra@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7c959eb5c2acf1300054205c4d9f5d4cbb02d027" translate="yes" xml:space="preserve">
          <source>Copyright 2001, Larry Wall.</source>
          <target state="translated">저작권 2001, 래리 월.</target>
        </trans-unit>
        <trans-unit id="0e90130d5f5b2ccf88af0b6d57add0a492ab06a4" translate="yes" xml:space="preserve">
          <source>Copyright 2001-2008 by Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;의 저작권 2001-2008.</target>
        </trans-unit>
        <trans-unit id="758760659ae9e9da078236b8c96e4f04f45e80be" translate="yes" xml:space="preserve">
          <source>Copyright 2001-2011 Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;. Now maintained by Perl 5 Porters.</source>
          <target state="translated">저작권 2001-2011 Jarkko Hietaniemi &amp;lt;jhi@iki.fi&amp;gt;. 이제 Perl 5 Porter가 유지 보수합니다.</target>
        </trans-unit>
        <trans-unit id="24f4f8eae6a435477fe3bf3b0fd15810a567f325" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2008 by chromatic &amp;lt;chromatic@wgz.org&amp;gt; and Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">chromatic &amp;lt;chromatic@wgz.org&amp;gt; 및 Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;의 저작권 2002-2008.</target>
        </trans-unit>
        <trans-unit id="9ad00efbd2d58cad6bbe8ee8a6e69c0624704508" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2014 Dan Kogai</source>
          <target state="translated">저작권 2002-2014 Dan Kogai</target>
        </trans-unit>
        <trans-unit id="adff1afaa96bc6908438762288df7e0c84cec743" translate="yes" xml:space="preserve">
          <source>Copyright 2002-2014 by Ken Williams, David Golden and other contributors. All rights reserved.</source>
          <target state="translated">Ken Williams, David Golden 및 기타 기고자에 의한 Copyright 2002-2014. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="3366261e225d525ccf331af7c5d9d27fc6080f98" translate="yes" xml:space="preserve">
          <source>Copyright 2003 by Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;.</source>
          <target state="translated">Copyright 2003 by Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="718ed72e455fb194df80ae2d0693e8d68c4004c0" translate="yes" xml:space="preserve">
          <source>Copyright 2003, 2004, 2005, 2006 by Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;.</source>
          <target state="translated">Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;의 저작권 2003, 2004, 2005, 2006.</target>
        </trans-unit>
        <trans-unit id="47cc7baae0ca8566017026f9e5d9a9c09d54b447" translate="yes" xml:space="preserve">
          <source>Copyright 2004, 2005, 2006, 2007 by Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;.</source>
          <target state="translated">Copyright 2004, 2005, 2006, 2007 by Audrey Tang &amp;lt;cpan@audreyt.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="03f9138fcf89a29043a1e2a727cfe2c79ab79b5d" translate="yes" xml:space="preserve">
          <source>Copyright 2006 Yves Orton and 2007 &amp;AElig;var Arnfj&amp;ouml;r&amp;eth; Bjarmason.</source>
          <target state="translated">저작권 2006 Yves Orton 및 2007 &amp;AElig;var Arnfj&amp;ouml;r&amp;eth; Bjarmason.</target>
        </trans-unit>
        <trans-unit id="a7b10ddec953c21d4f38ad07fa70d878c1a1f6b9" translate="yes" xml:space="preserve">
          <source>Copyright 2006-2008 Curtis &quot;Ovid&quot; Poe, all rights reserved.</source>
          <target state="translated">저작권 2006-2008 Curtis &quot;Ovid&quot;Poe, 모든 권리 보유.</target>
        </trans-unit>
        <trans-unit id="2dc2b4cddeffd8148859258dfa192ac667c79bfb" translate="yes" xml:space="preserve">
          <source>Copyright 2007-2011 Andy Armstrong.</source>
          <target state="translated">저작권 2007-2011 Andy Armstrong.</target>
        </trans-unit>
        <trans-unit id="95fd608fb95f61ebaeed78c224300578e02d3cbc" translate="yes" xml:space="preserve">
          <source>Copyright 2007-2016 by Makamaka Hannyaharamitu</source>
          <target state="translated">Copyright 2007-2016 by Makamaka Hannyaharamitu</target>
        </trans-unit>
        <trans-unit id="eeaf3232c6892ccf2f411117d77f548428dc4ef2" translate="yes" xml:space="preserve">
          <source>Copyright 2008-2009, Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</source>
          <target state="translated">저작권 2008-2009, Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ed57f807f6cd399f874157dc6f47cc4ad80bc1c1" translate="yes" xml:space="preserve">
          <source>Copyright 2009, 2010, 2011, 2012 Steffen Mueller</source>
          <target state="translated">저작권 2009, 2010, 2011, 2012 Steffen Mueller</target>
        </trans-unit>
        <trans-unit id="db6309490a8640af4f1db92336383400562c93f9" translate="yes" xml:space="preserve">
          <source>Copyright 2009, 2010, 2011, 2012, 2013 Steffen Mueller</source>
          <target state="translated">저작권 2009, 2010, 2011, 2012, 2013 Steffen Mueller</target>
        </trans-unit>
        <trans-unit id="d5ae870926a768b3515300b0c2762a895ed39488" translate="yes" xml:space="preserve">
          <source>Copyright 2009, Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</source>
          <target state="translated">Copyright 2009, Paul Fenwick &amp;lt;pjf@perltraining.com.au&amp;gt;</target>
        </trans-unit>
        <trans-unit id="470ff1b0088118a619903de417d61e25a76a26fe" translate="yes" xml:space="preserve">
          <source>Copyright 2010 Gisle Aas &amp;lt;gisle@aas.no&amp;gt;.</source>
          <target state="translated">Copyright 2010 Gisle Aas &amp;lt;gisle@aas.no&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="89e11a684bc042f1a47ed7e5bae86532e911624b" translate="yes" xml:space="preserve">
          <source>Copyright 2010 Grant McLean &amp;lt;grantm@cpan.org&amp;gt;</source>
          <target state="translated">Copyright 2010 Grant McLean &amp;lt;grantm@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4da493f5c04edefe46b0fd74ae429ad56b0dc531" translate="yes" xml:space="preserve">
          <source>Copyright 2010, brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</source>
          <target state="translated">저작권 2010, brian d foy &lt;code&gt;&amp;lt;brian.d.foy@gmail.com&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="882804b5e2455de26a56484655756b73f9c3c24c" translate="yes" xml:space="preserve">
          <source>Copyright 2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;</source>
          <target state="translated">저작권 2012 Kurt Starsinic &amp;lt;kstarsinic@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e3c7a676f0887df21fe81b395cf11fc7368f7d1e" translate="yes" xml:space="preserve">
          <source>Copyright 2012 Steffen Mueller</source>
          <target state="translated">저작권 2012 Steffen Mueller</target>
        </trans-unit>
        <trans-unit id="b47a4389c364b8abd358a0f467c39b15dbdea1cb" translate="yes" xml:space="preserve">
          <source>Copyright 2013 Tom Christiansen.</source>
          <target state="translated">저작권 2013 Tom Christiansen.</target>
        </trans-unit>
        <trans-unit id="8031568ddd17a83b7a8dfb0cc0d11c57b99c8bf5" translate="yes" xml:space="preserve">
          <source>Copyright 2013 Tom Christiansen; now maintained by Perl5 Porters</source>
          <target state="translated">Copyright 2013 Tom Christiansen; 이제 Perl5 Porters에서 관리합니다.</target>
        </trans-unit>
        <trans-unit id="b951bce65acbd67018019b10bb81e33ccc60d11d" translate="yes" xml:space="preserve">
          <source>Copyright 2013, Niels Thykier &amp;lt;niels@thykier.net&amp;gt;</source>
          <target state="translated">저작권 2013, Niels Thykier &amp;lt;niels@thykier.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3fc6b2cb7ab5d9efbf84acd03fa3649e70d1847c" translate="yes" xml:space="preserve">
          <source>Copyright 2013, Paul Fenwick &amp;lt;pjf@cpan.org&amp;gt;</source>
          <target state="translated">저작권 2013, Paul Fenwick &amp;lt;pjf@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="21801acb19692862df55d9017fbd3c4f5516f172" translate="yes" xml:space="preserve">
          <source>Copyright 2013-2014, Niels Thykier &amp;lt;niels@thykier.net&amp;gt;</source>
          <target state="translated">저작권 2013-2014, Niels Thykier &amp;lt;niels@thykier.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4786894b545727c883bdf43c95311939ade0e3f4" translate="yes" xml:space="preserve">
          <source>Copyright 2017 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</source>
          <target state="translated">Copyright 2017 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f9295a11bcb81c418c49ad8ae7c1c3bdd2ce5532" translate="yes" xml:space="preserve">
          <source>Copyright 2019 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</source>
          <target state="translated">Copyright 2019 Chad Granum &amp;lt;exodist@cpan.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f64383541384dc3e2eb364fd68051f5f3748d4e0" translate="yes" xml:space="preserve">
          <source>Copyright Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002, 2004.</source>
          <target state="translated">저작권 마크 파울러 &amp;lt;mark@twoshortplanks.com&amp;gt; 2002, 2004.</target>
        </trans-unit>
        <trans-unit id="2e7c31625c0b13304190ac801e54ebae59236c4f" translate="yes" xml:space="preserve">
          <source>Copyright Mark Fowler &amp;lt;mark@twoshortplanks.com&amp;gt; 2002.</source>
          <target state="translated">저작권 마크 파울러 &amp;lt;mark@twoshortplanks.com&amp;gt; 2002.</target>
        </trans-unit>
        <trans-unit id="a9f33cf7a4a5fda17e447238e45c4abe5cf41f08" translate="yes" xml:space="preserve">
          <source>Copyright(C) 2001-2012, SADAHIRO Tomoyuki. Japan. All rights reserved.</source>
          <target state="translated">Copyright (C) 2001-2012, SADAHIRO Tomoyuki. 일본. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="31e40e06c4bcb283edebf594f2bd7378bcf58ce9" translate="yes" xml:space="preserve">
          <source>Copyrights</source>
          <target state="translated">Copyrights</target>
        </trans-unit>
        <trans-unit id="97c1dd3ec24454b864720faa54a3abda989f1564" translate="yes" xml:space="preserve">
          <source>Core Images</source>
          <target state="translated">핵심 이미지</target>
        </trans-unit>
        <trans-unit id="99bb4f655f44c04dddda9615c8eb20527c7cc996" translate="yes" xml:space="preserve">
          <source>Core Layers</source>
          <target state="translated">핵심 레이어</target>
        </trans-unit>
        <trans-unit id="bc6e3a410aa372c2487ec123aa51c13c61ba9355" translate="yes" xml:space="preserve">
          <source>Core Modules</source>
          <target state="translated">핵심 모듈</target>
        </trans-unit>
        <trans-unit id="783102c8987eec788fa90e6f2de9f84f1caf1885" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for the wide and multibyte characters of the C standards, except under UTF-8 locales, so this might be a rather useless function.</source>
          <target state="translated">Core Perl은 UTF-8 로켈을 제외하고 C 표준의 와이드 및 멀티 바이트 문자를 지원하지 않으므로 다소 쓸모없는 함수일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c52e9d3706f331479207f6f779422514dbec3f79" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for wide and multibyte locales, except Unicode UTF-8 locales. This function, in conjunction with &lt;a href=&quot;#mblen&quot;&gt;&quot;mblen&quot;&lt;/a&gt; and &lt;a href=&quot;#mbtowc&quot;&gt;&quot;mbtowc&quot;&lt;/a&gt; may be used to roll your own decoding/encoding of other types of multi-byte locales.</source>
          <target state="translated">Core Perl은 유니 코드 UTF-8 로케일을 제외하고 와이드 및 멀티 바이트 로케일을 지원하지 않습니다. 이 함수는 &lt;a href=&quot;#mblen&quot;&gt;&quot;mblen&quot;&lt;/a&gt; 및 &lt;a href=&quot;#mbtowc&quot;&gt;&quot;mbtowc&quot;&lt;/a&gt; 와 함께 다른 유형의 멀티 바이트 로케일에 대한 자체 디코딩 / 인코딩을 롤링하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecdfc58f36a3a3ab655bf6bb72db9be59e7989ff" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for wide and multibyte locales, except Unicode UTF-8 locales. This function, in conjunction with &lt;a href=&quot;#mblen&quot;&gt;&quot;mblen&quot;&lt;/a&gt; and &lt;a href=&quot;#wctomb&quot;&gt;&quot;wctomb&quot;&lt;/a&gt; may be used to roll your own decoding/encoding of other types of multi-byte locales.</source>
          <target state="translated">Core Perl은 유니 코드 UTF-8 로케일을 제외하고 와이드 및 멀티 바이트 로케일을 지원하지 않습니다. 이 함수는 &lt;a href=&quot;#mblen&quot;&gt;&quot;mblen&quot;&lt;/a&gt; 및 &lt;a href=&quot;#wctomb&quot;&gt;&quot;wctomb&quot;&lt;/a&gt; 과 함께 다른 유형의 멀티 바이트 로케일에 대한 자체 디코딩 / 인코딩을 롤링하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f023f0947e152c9c42261c0584838fe8e5bafb0b" translate="yes" xml:space="preserve">
          <source>Core Perl does not have any support for wide and multibyte locales, except Unicode UTF-8 locales. This function, in conjunction with &lt;a href=&quot;#mbtowc&quot;&gt;&quot;mbtowc&quot;&lt;/a&gt; and &lt;a href=&quot;#wctomb&quot;&gt;&quot;wctomb&quot;&lt;/a&gt; may be used to roll your own decoding/encoding of other types of multi-byte locales.</source>
          <target state="translated">Core Perl은 유니 코드 UTF-8 로케일을 제외하고 와이드 및 멀티 바이트 로케일을 지원하지 않습니다. 이 함수는 &lt;a href=&quot;#mbtowc&quot;&gt;&quot;mbtowc&quot;&lt;/a&gt; 및 &lt;a href=&quot;#wctomb&quot;&gt;&quot;wctomb&quot;&lt;/a&gt; 과 함께 다른 유형의 멀티 바이트 로케일에 대한 자체 디코딩 / 인코딩을 롤링하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54b87e196a65aa25a514c9ea7b2551d2cd6978d7" translate="yes" xml:space="preserve">
          <source>Core Perl modules</source>
          <target state="translated">코어 펄 모듈</target>
        </trans-unit>
        <trans-unit id="67d35c68c7df776a652523a80899e489b317a9b0" translate="yes" xml:space="preserve">
          <source>Core modules</source>
          <target state="translated">핵심 모듈</target>
        </trans-unit>
        <trans-unit id="b41c28c0f7e25aefbda46cf16116c078111d0aa5" translate="yes" xml:space="preserve">
          <source>Corion</source>
          <target state="translated">Corion</target>
        </trans-unit>
        <trans-unit id="b871e801521c88cc33f85d25cf4f5ef9feb511d6" translate="yes" xml:space="preserve">
          <source>Correction of decomposition mapping</source>
          <target state="translated">분해 매핑 수정</target>
        </trans-unit>
        <trans-unit id="ce831d7b130ca37b50a0ab62dd64d0056aa444db" translate="yes" xml:space="preserve">
          <source>Correspondingly, sending a signal to a thread does not disrupt the operation the thread is currently working on: The signal will be acted upon after the current operation has completed. For instance, if the thread is</source>
          <target state="translated">이에 따라 스레드에 신호를 보내도 스레드가 현재 작업중인 작업이 중단되지 않습니다. 현재 작업이 완료된 후에 신호가 작동합니다. 예를 들어 스레드가</target>
        </trans-unit>
        <trans-unit id="047ac09c3f9816fdf9a6f40a8d473086bec80bc0" translate="yes" xml:space="preserve">
          <source>Corrupt malloc ptr 0x%x at 0x%x</source>
          <target state="translated">0x % x에서 malloc ptr 0x % x가 손상되었습니다.</target>
        </trans-unit>
        <trans-unit id="3f8b9d99ddda3913df8a052e5b5a900e1ab7b1fe" translate="yes" xml:space="preserve">
          <source>Corrupted regexp opcode %d &amp;gt; %d</source>
          <target state="translated">정규식 opcode % d&amp;gt; % d이 (가) 손상되었습니다.</target>
        </trans-unit>
        <trans-unit id="2b32803a1d0993fe28fa24b5a8189be7f5f005ae" translate="yes" xml:space="preserve">
          <source>Cory G Watson &amp;lt;gphat@cpan.org&amp;gt;</source>
          <target state="translated">Cory G Watson &amp;lt;gphat@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="036377b72eb8c30e98a03653d8eae51b1ebaf45b" translate="yes" xml:space="preserve">
          <source>Cosimo Streppone</source>
          <target state="translated">Cosimo Streppone</target>
        </trans-unit>
        <trans-unit id="1bf429f94068620b112aca3888b58aecbc2eadee" translate="yes" xml:space="preserve">
          <source>Costa Rica</source>
          <target state="translated">코스타리카</target>
        </trans-unit>
        <trans-unit id="5d25cbf547052ef26b7bd5b301c3044498d75c9a" translate="yes" xml:space="preserve">
          <source>Could it be a module instead?</source>
          <target state="translated">대신 모듈이 될 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="b18f107cb83dab5134d06883d2264ef67ecdb419" translate="yes" xml:space="preserve">
          <source>Count after length/code in unpack</source>
          <target state="translated">포장 풀기에서 길이 / 코드 이후 계산</target>
        </trans-unit>
        <trans-unit id="09e55edb3e65ad6732e40f6cd984478db5d78fce" translate="yes" xml:space="preserve">
          <source>Counting Repetitions</source>
          <target state="translated">반복 계산</target>
        </trans-unit>
        <trans-unit id="6638251b6bc95fa3de20882497e46af5dda04835" translate="yes" xml:space="preserve">
          <source>Counting bytes and watching alignments in lengthy structures is bound to be a drag. Isn't there a way we can create the template with a simple program? Here's a C program that does the trick:</source>
          <target state="translated">긴 구조에서 바이트 수를 계산하고 정렬을 보는 것은 드래그해야합니다. 간단한 프로그램으로 템플릿을 만들 수있는 방법이 없습니까? 트릭을 수행하는 C 프로그램은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1cfd2770db664059c57a58368f587a061ac0b45a" translate="yes" xml:space="preserve">
          <source>Counting the number of entries in a hash via &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(keys(%hash))&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(values(%hash)&lt;/a&gt;&lt;/code&gt;) is inefficient since it needs to iterate through all the entries with FIRSTKEY/NEXTKEY.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(keys(%hash))&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar(values(%hash)&lt;/a&gt;&lt;/code&gt; ) 를 통해 해시의 항목 수를 계산하는 것은 FIRSTKEY / NEXTKEY를 사용하여 모든 항목을 반복해야하기 때문에 비효율적입니다.</target>
        </trans-unit>
        <trans-unit id="a9fbf133f89422a1af93b09dc8287feab55a339f" translate="yes" xml:space="preserve">
          <source>Counting the number of entries in a hash via &lt;code&gt;scalar(keys(%hash))&lt;/code&gt; or &lt;code&gt;scalar(values(%hash)&lt;/code&gt;) is inefficient since it needs to iterate through all the entries with FIRSTKEY/NEXTKEY.</source>
          <target state="translated">&lt;code&gt;scalar(keys(%hash))&lt;/code&gt; 또는 &lt;code&gt;scalar(values(%hash)&lt;/code&gt; ) 를 통해 해시의 항목 수를 계산하는 것은 FIRSTKEY / NEXTKEY로 모든 항목을 반복해야하기 때문에 비효율적입니다.</target>
        </trans-unit>
        <trans-unit id="b4d6e94a784b6e291943d7b2c4e0fc93520909e7" translate="yes" xml:space="preserve">
          <source>Counting the opening parentheses to get the correct number for a backreference is error-prone as soon as there is more than one capturing group. A more convenient technique became available with Perl 5.10: relative backreferences. To refer to the immediately preceding capture group one now may write &lt;code&gt;\g{-1}&lt;/code&gt; , the next but last is available via &lt;code&gt;\g{-2}&lt;/code&gt; , and so on.</source>
          <target state="translated">역 참조에 대한 올바른 숫자를 얻기 위해 여는 괄호를 세면 캡처 그룹이 둘 이상 있으면 오류가 발생하기 쉽습니다. Perl 5.10 : 상대적 역 참조를 통해보다 편리한 기술을 사용할 수있게되었습니다. 바로 앞의 캡처 그룹을 참조하기 위해 이제 &lt;code&gt;\g{-1}&lt;/code&gt; 쓸 수 있으며, 다음은 마지막은 &lt;code&gt;\g{-2}&lt;/code&gt; 등을 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b240ac72954506fbc34fcaa37ffd84861c892f2" translate="yes" xml:space="preserve">
          <source>Counting the opening parentheses to get the correct number for a backreference is error-prone as soon as there is more than one capturing group. A more convenient technique became available with Perl 5.10: relative backreferences. To refer to the immediately preceding capture group one now may write &lt;code&gt;\g{-1}&lt;/code&gt;, the next but last is available via &lt;code&gt;\g{-2}&lt;/code&gt;, and so on.</source>
          <target state="translated">역 참조에 대한 올바른 숫자를 얻기 위해 여는 괄호를 세는 것은 캡처 그룹이 둘 이상있는 즉시 오류가 발생하기 쉽습니다. Perl 5.10에서보다 편리한 기술인 상대 역 참조를 사용할 수있게되었습니다. 바로 앞의 캡처 그룹을 참조하기 위해 지금은 &lt;code&gt;\g{-1}&lt;/code&gt; 쓸 수 있고 다음은 &lt;code&gt;\g{-2}&lt;/code&gt; 를 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2815297cdc53ede6ff2cb024503f24e17cc60a88" translate="yes" xml:space="preserve">
          <source>Coverity</source>
          <target state="translated">Coverity</target>
        </trans-unit>
        <trans-unit id="9fbbe918826f27bbfcf0ae0fdd88d18c0d6bd29a" translate="yes" xml:space="preserve">
          <source>Coverity (&lt;a href=&quot;http://www.coverity.com/&quot;&gt;http://www.coverity.com/&lt;/a&gt;) is a product similar to lint and as a testbed for their product they periodically check several open source projects, and they give out accounts to open source developers to the defect databases.</source>
          <target state="translated">Coverity ( &lt;a href=&quot;http://www.coverity.com/&quot;&gt;http://www.coverity.com/&lt;/a&gt; )는 lint와 유사한 제품이며 제품에 대한 테스트 베드로서 정기적으로 여러 오픈 소스 프로젝트를 확인하고 결함 데이터베이스에 대한 오픈 소스 개발자 계정을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="30f10fb60094a5736894608b7733f1893682a3ec" translate="yes" xml:space="preserve">
          <source>Cppsym.U</source>
          <target state="translated">Cppsym.U</target>
        </trans-unit>
        <trans-unit id="3c994601f5c096741ef6b921aec442ccfe446155" translate="yes" xml:space="preserve">
          <source>Craig A. Berry &amp;lt;</source>
          <target state="translated">크레이그 A. 베리 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="ff29a3f5615f3495a2fbd2f2c12fd6ad75a52e48" translate="yes" xml:space="preserve">
          <source>Craig A. Berry &amp;lt;cberry@cpan.org&amp;gt;</source>
          <target state="translated">크레이그 A. 베리 &amp;lt;cberry@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="54a6b3cbb3d667a31506391ab1089678fc2cb05b" translate="yes" xml:space="preserve">
          <source>Craig A. Berry &amp;lt;craigberry@mac.com&amp;gt;</source>
          <target state="translated">Craig A. Berry &amp;lt;craigberry@mac.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="90495fde21f2664b226d3779177a5a5d60e2d00f" translate="yes" xml:space="preserve">
          <source>Craig Berry &amp;lt;cberry@cpan.org&amp;gt;</source>
          <target state="translated">크레이그 베리 &amp;lt;cberry@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5b047d6207a259e1009477acb2c928e68e9b31a5" translate="yes" xml:space="preserve">
          <source>Create =&amp;gt; $sCreate</source>
          <target state="translated">만들기 =&amp;gt; $ sCreate</target>
        </trans-unit>
        <trans-unit id="71755b496661c6122fa97329a48e579018d2ac98" translate="yes" xml:space="preserve">
          <source>Create =&amp;gt; $uCreate</source>
          <target state="translated">만들기 =&amp;gt; $ uCreate</target>
        </trans-unit>
        <trans-unit id="bc0ab8ae6a58789d929998f40f61b38762dd7253" translate="yes" xml:space="preserve">
          <source>Create VMS linker options files specifying universal symbols for this extension's shareable image(s), and listing other shareable images or libraries to which it should be linked.</source>
          <target state="translated">이 확장의 공유 가능 이미지에 대한 범용 기호를 지정하고 링크해야하는 다른 공유 가능 이미지 또는 라이브러리를 나열하는 VMS 링커 옵션 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5ebece852ecc4ea6150b191a89b2f264b38241db" translate="yes" xml:space="preserve">
          <source>Create VMS linker options files specifying universal symbols for this extension's shareable image, and listing other shareable images or libraries to which it should be linked.</source>
          <target state="translated">이 확장의 공유 가능 이미지에 대한 범용 기호를 지정하고 링크되어야하는 다른 공유 가능 이미지 또는 라이브러리를 나열하는 VMS 링커 옵션 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="02cd22cf6983deda3bb052ea3365661fc9cd4123" translate="yes" xml:space="preserve">
          <source>Create a &quot;symlink&quot; or copy your bash.exe to sh.exe in your &lt;code&gt;($DJDIR)/bin&lt;/code&gt; directory.</source>
          <target state="translated">&quot;symlink&quot;를 만들거나 bash.exe를 &lt;code&gt;($DJDIR)/bin&lt;/code&gt; 디렉토리의 sh.exe로 복사하십시오 .</target>
        </trans-unit>
        <trans-unit id="ccf384c670bc8c1dc42f45cfc2716f6083067246" translate="yes" xml:space="preserve">
          <source>Create a BigRat from a hexadecimal number in string form.</source>
          <target state="translated">문자열 형식의 16 진수로 BigRat을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="885c3d66adccc7986bf87a9cb149b2896c42f0a4" translate="yes" xml:space="preserve">
          <source>Create a BigRat from an binary number in string form.</source>
          <target state="translated">문자열 형식의 이진수에서 BigRat을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="18cde0b66e2ee12909d4ed1d9eb6ea9c47f3f1a9" translate="yes" xml:space="preserve">
          <source>Create a BigRat from an hexadecimal, binary or octal number in string form.</source>
          <target state="translated">문자열 형식의 16 진, 2 진 또는 8 진 숫자로 BigRat을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="68207e6d27eea555446488765c1ad6f8b4bc1e31" translate="yes" xml:space="preserve">
          <source>Create a BigRat from an octal number in string form.</source>
          <target state="translated">문자열 형식의 8 진수에서 BigRat을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7d5f5a17f51263cd6a62c0f6bda55c2863c92e75" translate="yes" xml:space="preserve">
          <source>Create a GitHub fork of the perl5 repository and add it as a remote, if you haven't already, as described in the GitHub documentation at &lt;a href=&quot;https://help.github.com/en/articles/working-with-forks&quot;&gt;https://help.github.com/en/articles/working-with-forks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://help.github.com/en/articles/working-with-forks&quot;&gt;https://help.github.com/en/articles/working-with-forks&lt;/a&gt; 의 GitHub 문서에 설명 된대로 perl5 저장소의 GitHub 포크를 만들고 아직 추가하지 않은 경우 원격으로 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="42c39c96c183164007b9faac9826235e887fff8f" translate="yes" xml:space="preserve">
          <source>Create a Zip64 zip file/buffer. This option is used if you want to store files larger than 4 Gig or store more than 64K files in a single zip archive.</source>
          <target state="translated">Zip64 zip 파일 / 버퍼를 만듭니다. 이 옵션은 4Gig보다 큰 파일을 저장하거나 단일 zip 아카이브에 64K 이상의 파일을 저장하려는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="473f8f658940e07568176b34bfa435fa80921f41" translate="yes" xml:space="preserve">
          <source>Create a Zip64 zip file/buffer. This option is used if you want to store files larger than 4 Gig or store more than 64K files in a single zip archive..</source>
          <target state="translated">Zip64 zip 파일 / 버퍼를 작성하십시오. 이 옵션은 4 Gig보다 큰 파일을 저장하거나 단일 zip 아카이브에 64K 이상의 파일을 저장하려는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="11130cde618dc2de912450499554a974016ed7af" translate="yes" xml:space="preserve">
          <source>Create a batch file to run your program, and codify it in &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; (see the</source>
          <target state="translated">프로그램을 실행할 배치 파일을 작성하고 &lt;code&gt;ALTERNATE_SHEBANG&lt;/code&gt; 에 코드화 하십시오 (</target>
        </trans-unit>
        <trans-unit id="559b9195328e7612ac1eb177497f4f357dbf9afa" translate="yes" xml:space="preserve">
          <source>Create a branch based on blead to commit your change to, which will later be used to send it to the Perl issue tracker.</source>
          <target state="translated">변경 사항을 커밋 할 blead를 기반으로 분기를 만들고 나중에 Perl 문제 추적기로 보내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8c0b214afdd6fe6bf72b44a42a4899d94c7a80e0" translate="yes" xml:space="preserve">
          <source>Create a branch for your change</source>
          <target state="translated">변경 사항에 대한 분기 만들기</target>
        </trans-unit>
        <trans-unit id="bc3d1ef79a98971d38e02b76ce890553cad199f4" translate="yes" xml:space="preserve">
          <source>Create a class for the language your internal keys are in. Name the class after the language-tag for that language, in lowercase, with dashes changed to underscores. Assuming your project's first language is US English, you should call this Projname::L10N::en_us. It should consist minimally of:</source>
          <target state="translated">내부 키가있는 언어에 대한 클래스를 작성하십시오. 대시를 밑줄로 변경하여 해당 언어의 언어 태그 뒤에 소문자로 클래스 이름을 지정하십시오. 프로젝트의 첫 번째 언어가 미국 영어라고 가정하면이 Projname :: L10N :: en_us를 호출해야합니다. 최소한으로 구성되어야합니다.</target>
        </trans-unit>
        <trans-unit id="af5af99f136ed2ceb6678c03a38a42040f4ea033" translate="yes" xml:space="preserve">
          <source>Create a class for your localization project. This is the name of the class that you'll use in the idiom:</source>
          <target state="translated">현지화 프로젝트를위한 클래스를 만듭니다. 이것은 관용구에서 사용할 수업의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="cd58dbbf0cc8ddf76fe7850dd53f265323bc2bbc" translate="yes" xml:space="preserve">
          <source>Create a dialog box containing MESSAGE. FLAGS specifies the required icon and buttons according to the following table:</source>
          <target state="translated">MESSAGE가 포함 된 대화 상자를 만듭니다. FLAGS는 다음 표에 따라 필요한 아이콘과 버튼을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d140dda80edfdc914d774a5fe6e3ebbdbcd954b7" translate="yes" xml:space="preserve">
          <source>Create a directory from a template. The template must end in X's that are replaced by the routine.</source>
          <target state="translated">템플리트에서 디렉토리를 작성하십시오. 템플릿은 루틴으로 대체 된 X로 끝나야합니다.</target>
        </trans-unit>
        <trans-unit id="87942e6092afa4288ce7b6b61b23174e2b70e314" translate="yes" xml:space="preserve">
          <source>Create a directory from the supplied template. This template is similar to that described for tempfile(). `X' characters at the end of the template are replaced with random letters to construct the directory name. At least four `X' characters must be in the template.</source>
          <target state="translated">제공된 템플리트에서 디렉토리를 작성하십시오. 이 템플릿은 tempfile ()에서 설명한 것과 비슷합니다. 템플릿 끝의`X '문자는 임의의 문자로 대체되어 디렉토리 이름을 구성합니다. 템플릿에는 최소 4 개의`X '문자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="51bd75d11db7f05fdf7c0ba2ed86acfccab7e7b6" translate="yes" xml:space="preserve">
          <source>Create a directory in tmpdir() (see &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;).</source>
          <target state="translated">tmpdir ()에 디렉토리를 만듭니다 ( &lt;a href=&quot;File::Spec&quot;&gt;File :: Spec&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="97bd03e560de52beb6792bf090df2f8c408c1b3d" translate="yes" xml:space="preserve">
          <source>Create a directory in tmpdir() (see L&amp;lt;:spec&amp;gt;).</source>
          <target state="translated">tmpdir ()에 디렉토리를 작성하십시오 (L &amp;lt;: spec&amp;gt; 참조).</target>
        </trans-unit>
        <trans-unit id="4362437c4dee6826064eba29335269a256a16b4f" translate="yes" xml:space="preserve">
          <source>Create a module Makefile</source>
          <target state="translated">모듈 Makefile 만들기</target>
        </trans-unit>
        <trans-unit id="50c598518f68bf9f28b1793bfb579fbc50559040" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;App::Prove&lt;/code&gt; . Optionally a hash ref of attribute initializers may be passed.</source>
          <target state="translated">새 &lt;code&gt;App::Prove&lt;/code&gt; 작성하십시오 . 선택적으로 속성 이니셜 라이저의 해시 참조가 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b6e150ff08c5aa688659bba4e8d4b94edfdd8d2" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;App::Prove&lt;/code&gt;. Optionally a hash ref of attribute initializers may be passed.</source>
          <target state="translated">새 &lt;code&gt;App::Prove&lt;/code&gt; 만듭니다 . 선택적으로 속성 이니셜 라이저의 해시 참조가 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="637b03561b650422dbca5301699123a3114e7256" translate="yes" xml:space="preserve">
          <source>Create a new Math::BigRat object. Input can come in various forms:</source>
          <target state="translated">새로운 Math :: BigRat 객체를 만듭니다. 입력은 다양한 형태로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="964c34cf0109bb75b1929b4e05143fbe530008bc" translate="yes" xml:space="preserve">
          <source>Create a new Perl external subroutine named $perl_name using $symref as a pointer to the function which implements the routine. This is simply a direct call to newXS()/newXS_flags(). Returns a reference to the installed function.</source>
          <target state="translated">루틴을 구현하는 함수에 대한 포인터로 $ symref를 사용하여 $ perl_name이라는 새 Perl 외부 서브 루틴을 작성하십시오. 이것은 단순히 newXS () / newXS_flags ()에 대한 직접 호출입니다. 설치된 함수에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="37ec6f7cf703eb7c8d20ea11f3b6a2d9d8f1bdf2" translate="yes" xml:space="preserve">
          <source>Create a new Perl external subroutine named $perl_name using $symref as a pointer to the function which implements the routine. This is simply a direct call to newXSUB(). Returns a reference to the installed function.</source>
          <target state="translated">루틴을 구현하는 함수에 대한 포인터로 $ symref를 사용하여 $ perl_name이라는 새 Perl 외부 서브 루틴을 작성하십시오. 이것은 단순히 newXSUB ()에 대한 직접 호출입니다. 설치된 함수에 대한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8b815122ea1b53bab2fea52aa82c0738dc639ea2" translate="yes" xml:space="preserve">
          <source>Create a new SigSet object. This object will be destroyed automatically when it is no longer needed. Arguments may be supplied to initialize the set.</source>
          <target state="translated">새 SigSet 객체를 만듭니다. 이 오브젝트는 더 이상 필요하지 않으면 자동으로 삭제됩니다. 세트를 초기화하기 위해 인수가 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f2191aaab0a2fe03dd235f940c62b8ea3693cca" translate="yes" xml:space="preserve">
          <source>Create a new Termios object. This object will be destroyed automatically when it is no longer needed. A Termios object corresponds to the &lt;code&gt;termios&lt;/code&gt; C struct. &lt;code&gt;new()&lt;/code&gt; mallocs a new one, &lt;code&gt;getattr()&lt;/code&gt; fills it from a file descriptor, and &lt;code&gt;setattr()&lt;/code&gt; sets a file descriptor's parameters to match Termios' contents.</source>
          <target state="translated">새로운 Termios 객체를 만듭니다. 이 오브젝트는 더 이상 필요하지 않으면 자동으로 삭제됩니다. Termios 객체는 &lt;code&gt;termios&lt;/code&gt; C 구조체에 해당합니다 . &lt;code&gt;new()&lt;/code&gt; 는 새로운 것을 mallocs하고, &lt;code&gt;getattr()&lt;/code&gt; 은 파일 디스크립터에서 그것을 채우고, &lt;code&gt;setattr()&lt;/code&gt; 은 Termios의 내용과 일치하도록 파일 디스크립터의 매개 변수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e8e14e0bd357803bf052153bab4c0a139ecb8716" translate="yes" xml:space="preserve">
          <source>Create a new cache object. This object can hold an arbitrary number of POD documents of class Pod::Cache::Item.</source>
          <target state="translated">새 캐시 오브젝트를 작성하십시오. 이 객체는 Pod :: Cache :: Item 클래스의 임의 개수의 POD 문서를 보유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7234e7b8446d88bd6969be5e67b0f7bcc7d431e8" translate="yes" xml:space="preserve">
          <source>Create a new directory called Mytest2 at the same level as the directory Mytest. In the Mytest2 directory, create another directory called mylib, and cd into that directory.</source>
          <target state="translated">Mytest 디렉토리와 같은 레벨에서 Mytest2라는 새 디렉토리를 작성하십시오. Mytest2 디렉토리에서 mylib라는 다른 디렉토리를 작성하고 해당 디렉토리로 cd하십시오.</target>
        </trans-unit>
        <trans-unit id="31384a4a0ee35aebb04c1c58d30d768f683e1f93" translate="yes" xml:space="preserve">
          <source>Create a new directory with the name &lt;code&gt;DIR&lt;/code&gt; . If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">이름이 &lt;code&gt;DIR&lt;/code&gt; 인 새 디렉토리를 작성하십시오 . 경우 &lt;code&gt;RECURSE&lt;/code&gt; 있다</target>
        </trans-unit>
        <trans-unit id="572e54dfcc54b1e4d85e51872c27d8e949f4490b" translate="yes" xml:space="preserve">
          <source>Create a new directory with the name &lt;code&gt;DIR&lt;/code&gt;. If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">이름이 &lt;code&gt;DIR&lt;/code&gt; 인 새 디렉토리를 만듭니다 . 경우 &lt;code&gt;RECURSE&lt;/code&gt; 있다</target>
        </trans-unit>
        <trans-unit id="d7b61de6466590ec52305327e27f85b32bce01c7" translate="yes" xml:space="preserve">
          <source>Create a new file with mode 0640. Set up the file for writing.</source>
          <target state="translated">0640 모드로 새 파일을 작성하십시오. 기록 할 파일을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a881eb9aa6d20d6d909d029e4c81928e7bc18391" translate="yes" xml:space="preserve">
          <source>Create a new file. This returns a file descriptor like the ones returned by &lt;code&gt;POSIX::open&lt;/code&gt; . Use &lt;code&gt;POSIX::close&lt;/code&gt; to close the file.</source>
          <target state="translated">새 파일을 작성하십시오. &lt;code&gt;POSIX::open&lt;/code&gt; 의해 리턴 된 것과 같은 파일 디스크립터를 리턴합니다 . &lt;code&gt;POSIX::close&lt;/code&gt; 를 사용 하여 파일을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="445fc1101f8551e9cb43686f8e600dc459f919c4" translate="yes" xml:space="preserve">
          <source>Create a new file. This returns a file descriptor like the ones returned by &lt;code&gt;POSIX::open&lt;/code&gt;. Use &lt;code&gt;POSIX::close&lt;/code&gt; to close the file.</source>
          <target state="translated">새 파일을 만듭니다. 이것은 &lt;code&gt;POSIX::open&lt;/code&gt; 의해 반환 된 것과 같은 파일 설명자를 반환합니다 . &lt;code&gt;POSIX::close&lt;/code&gt; 를 사용 하여 파일을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="74dd602c7c6a1f1cb930e156dfc79f8193fd0b55" translate="yes" xml:space="preserve">
          <source>Create a new instance of the specified class.</source>
          <target state="translated">지정된 클래스의 새 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="64f6acc53d3851191bdd2749b905728b84f85fc2" translate="yes" xml:space="preserve">
          <source>Create a new instance.</source>
          <target state="translated">새 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6cc585773d59263f24bc1ca5a399b6f4d519e67f" translate="yes" xml:space="preserve">
          <source>Create a new list object. Properties may be specified through a hash reference like this:</source>
          <target state="translated">새 목록 객체를 만듭니다. 다음과 같이 해시 참조를 통해 속성을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ba7c62c943cded5489456e206c446db08d870de" translate="yes" xml:space="preserve">
          <source>Create a new object.</source>
          <target state="translated">새 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4fc5237945662db949fd60b133121cf759a76543" translate="yes" xml:space="preserve">
          <source>Create a new object. Any arguments passed to &lt;code&gt;new&lt;/code&gt; will be passed on to the &lt;a href=&quot;#_initialize&quot;&gt;&quot;_initialize&quot;&lt;/a&gt; method. Returns a new object.</source>
          <target state="translated">새 개체를 만듭니다. &lt;code&gt;new&lt;/code&gt; 에 전달 된 모든 인수 는 &lt;a href=&quot;#_initialize&quot;&gt;&quot;_initialize&quot;&lt;/a&gt; 메소드 로 전달됩니다 . 새 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fcb9d9d9881e78822adfe0bbac4eee7555066ecb" translate="yes" xml:space="preserve">
          <source>Create a new object. Any arguments passed to &lt;code&gt;new&lt;/code&gt; will be passed on to the &lt;a href=&quot;#_initialize&quot;&gt;_initialize&lt;/a&gt; method. Returns a new object.</source>
          <target state="translated">새 객체를 만듭니다. &lt;code&gt;new&lt;/code&gt; 로 전달 된 모든 인수 는 &lt;a href=&quot;#_initialize&quot;&gt;_initialize&lt;/a&gt; 메소드 로 전달됩니다 . 새로운 객체를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="0a8a658289cee30e5b27a60292e471ac179b2181" translate="yes" xml:space="preserve">
          <source>Create a new padlist, updating the global variables for the currently-compiling padlist to point to the new padlist. The following flags can be OR'ed together:</source>
          <target state="translated">현재 편집중인 패드리스트에 대한 전역 변수를 업데이트하여 새 패드리스트를 가리 키도록 새 패드리스트를 작성하십시오. 다음 플래그는 함께 OR 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a381cf88627871500783405f1261bcbd1a0d062f" translate="yes" xml:space="preserve">
          <source>Create a new ping object. All of the parameters are optional and can be passed as hash ref. All options besides the first 7 must be passed as hash ref.</source>
          <target state="translated">새 ping 개체를 만듭니다. 모든 매개 변수는 선택 사항이며 해시 참조로 전달할 수 있습니다. 처음 7 개를 제외한 모든 옵션은 해시 참조로 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ee2261993683f4a99c0cc5814cbab351173c8386" translate="yes" xml:space="preserve">
          <source>Create a new ping object. All of the parameters are optional. $proto specifies the protocol to use when doing a ping. The current choices are &quot;tcp&quot;, &quot;udp&quot;, &quot;icmp&quot;, &quot;stream&quot;, &quot;syn&quot;, or &quot;external&quot;. The default is &quot;tcp&quot;.</source>
          <target state="translated">새 핑 개체를 만듭니다. 모든 매개 변수는 선택 사항입니다. $ proto는 핑을 수행 할 때 사용할 프로토콜을 지정합니다. 현재 선택은 &quot;tcp&quot;, &quot;udp&quot;, &quot;icmp&quot;, &quot;stream&quot;, &quot;syn&quot;또는 &quot;external&quot;입니다. 기본값은 &quot;tcp&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3430e716a61ae83b9e144c2c5c8622a75ae88917" translate="yes" xml:space="preserve">
          <source>Create a new semaphore set associated with &lt;code&gt;KEY&lt;/code&gt; . &lt;code&gt;NSEMS&lt;/code&gt; is the number of semaphores in the set. A new set is created if</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 와 연관된 새 세마포어 세트를 작성하십시오 . &lt;code&gt;NSEMS&lt;/code&gt; 는 세트의 세마포어 수입니다. 새로운 세트가 생성되면</target>
        </trans-unit>
        <trans-unit id="5300bc6a8a043332f6fab7d1d3b3ef9d63c43aec" translate="yes" xml:space="preserve">
          <source>Create a new semaphore set associated with &lt;code&gt;KEY&lt;/code&gt;. &lt;code&gt;NSEMS&lt;/code&gt; is the number of semaphores in the set. A new set is created if</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 와 관련된 새 세마포어 세트를 만듭니다 . &lt;code&gt;NSEMS&lt;/code&gt; 는 세트의 세마포어 수입니다. 다음과 같은 경우 새 세트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="4a7ef28ba91fedd9a746c8523a72dbcb8eb69fb7" translate="yes" xml:space="preserve">
          <source>Create a perl subroutine for the specified macros rather than autoload with the constant() subroutine. These macros are assumed to have a return type of &lt;b&gt;char *&lt;/b&gt;, e.g., -s sec_rgy_wildcard_name,sec_rgy_wildcard_sid.</source>
          <target state="translated">constant () 서브 루틴을 사용하여 자동로드하는 대신 지정된 매크로에 대해 perl 서브 루틴을 작성하십시오. 이 매크로는 리턴 유형이 &lt;b&gt;char *&lt;/b&gt; 인 것으로 가정합니다 ( 예 : -s sec_rgy_wildcard_name, sec_rgy_wildcard_sid).</target>
        </trans-unit>
        <trans-unit id="481a60ee3395b3b1cf7945f04080acc645acd340" translate="yes" xml:space="preserve">
          <source>Create a reverse hash:</source>
          <target state="translated">역 해시를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f0e04e4f20e56fddcf662a44731769084042c59e" translate="yes" xml:space="preserve">
          <source>Create a set with &lt;code&gt;SIGUSR1&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;SIGUSR1&lt;/code&gt; 으로 세트를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="65d8873759f47cb342c9acff3cf8e18b7ab92e14" translate="yes" xml:space="preserve">
          <source>Create a set with &lt;code&gt;SIGUSR1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SIGUSR1&lt;/code&gt; 로 세트를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3ac62f075bf8001f6525a8640c77b2f7fb60c81b" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using an object oriented interface.</source>
          <target state="translated">객체 지향 인터페이스를 사용하여 임시 디렉토리를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5a37b1975e7c41c6df80b11015d351a2c6a99815" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using the supplied template, but attempt to remove it (and all files inside it) when the program exits. Note that an attempt will be made to remove all files from the directory even if they were not created by this module (otherwise why ask to clean it up?). The directory removal is made with the rmtree() function from the &lt;a href=&quot;File::Path&quot;&gt;File::Path&lt;/a&gt; module. Of course, if the template is not specified, the temporary directory will be created in tmpdir() and will also be removed at program exit.</source>
          <target state="translated">제공된 템플릿을 사용하여 임시 디렉토리를 생성하되 프로그램이 종료 될 때 해당 템플릿 (및 그 안의 모든 파일)을 제거해보십시오. 이 모듈에 의해 생성되지 않았더라도 디렉토리에서 모든 파일을 제거하려고 시도합니다 (그렇지 않으면 정리를 요청하는 이유는 무엇입니까?). 디렉토리 제거는 &lt;a href=&quot;File::Path&quot;&gt;File :: Path&lt;/a&gt; 모듈 의 rmtree () 함수로 이루어집니다 . 물론 템플릿을 지정하지 않으면 임시 디렉토리가 tmpdir ()에 생성되고 프로그램 종료시에도 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="303ec3c6180101ba95b912105da0ce7bfcb1deb4" translate="yes" xml:space="preserve">
          <source>Create a temporary directory using the supplied template, but attempt to remove it (and all files inside it) when the program exits. Note that an attempt will be made to remove all files from the directory even if they were not created by this module (otherwise why ask to clean it up?). The directory removal is made with the rmtree() function from the L&amp;lt;:path&amp;gt; module. Of course, if the template is not specified, the temporary directory will be created in tmpdir() and will also be removed at program exit.</source>
          <target state="translated">제공된 템플리트를 사용하여 임시 디렉토리를 작성하십시오. 그러나 프로그램이 종료되면 해당 템플리트 (및 그 안의 모든 파일)를 제거하십시오. 이 모듈에 의해 작성되지 않은 경우에도 디렉토리에서 모든 파일을 제거하려고 시도합니다 (그렇지 않으면 정리를 요청하는 이유는 무엇입니까?). 디렉토리 제거는 L &amp;lt;: path&amp;gt; 모듈의 rmtree () 함수로 수행됩니다. 물론 템플릿을 지정하지 않으면 tmpdir ()에 임시 디렉토리가 생성되고 프로그램 종료시 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="55698f6a3601555bd654382a0b288d1302315bd9" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the current directory using the supplied template. Trailing `X' characters are replaced with random letters to generate the filename. At least four `X' characters must be present at the end of the template.</source>
          <target state="translated">제공된 템플리트를 사용하여 현재 디렉토리에 임시 파일을 작성하십시오. 후행 'X'문자는 임의의 문자로 대체되어 파일 이름을 생성합니다. 템플릿 끝에 최소한 4 개의`X '문자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3d32940649f45ad367c9176393ba5a579442cb0b" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the directory specified for temporary files, as specified by the tmpdir() function in &lt;a href=&quot;File::Spec&quot;&gt;File::Spec&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;File::Spec&quot;&gt;File :: Spec&lt;/a&gt; 의 tmpdir () 함수에 지정된대로 임시 파일 용으로 지정된 디렉토리에 임시 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="bc36137f6fa982d9a92b93d4881687f9cba40176" translate="yes" xml:space="preserve">
          <source>Create a temporary file in the directory specified for temporary files, as specified by the tmpdir() function in L&amp;lt;:spec&amp;gt;.</source>
          <target state="translated">L &amp;lt;: spec&amp;gt;의 tmpdir () 함수에 의해 지정된대로 임시 파일 용으로 지정된 디렉토리에 임시 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="24495d1f7765573877dcd812b1a4948cc60660ee" translate="yes" xml:space="preserve">
          <source>Create a temporary file object.</source>
          <target state="translated">임시 파일 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7c0fc4a47822586341f44d1070a0fffe92259da6" translate="yes" xml:space="preserve">
          <source>Create an ARexx host for your script / program.</source>
          <target state="translated">스크립트 / 프로그램에 대한 ARexx 호스트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="69935c6719cc9d9adfa0d718baf1f913522468e6" translate="yes" xml:space="preserve">
          <source>Create an empty set.</source>
          <target state="translated">빈 세트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="36282f608207859c78f549fdddb59df654b98999" translate="yes" xml:space="preserve">
          <source>Create an interprocess channel. This returns file descriptors like those returned by &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">프로세스 간 채널을 만듭니다. &lt;code&gt;POSIX::open&lt;/code&gt; 의해 리턴 된 것과 같은 파일 디스크립터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e5e03e5a04f360b1f255e67e4046f3888bc8a7df" translate="yes" xml:space="preserve">
          <source>Create an interprocess channel. This returns file descriptors like those returned by &lt;code&gt;POSIX::open&lt;/code&gt;.</source>
          <target state="translated">프로세스 간 채널을 만듭니다. 이것은 &lt;code&gt;POSIX::open&lt;/code&gt; 의해 반환 된 것과 같은 파일 설명자를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ff79fe2c6259816c55880a8381a93476c6afdffb" translate="yes" xml:space="preserve">
          <source>Create an iterator. Expects one argument containing a filehandle.</source>
          <target state="translated">이터레이터를 만듭니다. 파일 핸들을 포함하는 하나의 인수를 예상합니다.</target>
        </trans-unit>
        <trans-unit id="616caec393d0885ab17bf7298761058cad98107e" translate="yes" xml:space="preserve">
          <source>Create an iterator. Expects one argument containing a hashref of the form:</source>
          <target state="translated">이터레이터를 만듭니다. 다음 형식의 해시 참조를 포함하는 하나의 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7016a4d543732a6745b00979a34621bd52cd3c30" translate="yes" xml:space="preserve">
          <source>Create an iterator. Provided by &lt;a href=&quot;../object&quot;&gt;TAP::Object&lt;/a&gt;.</source>
          <target state="translated">이터레이터를 만듭니다. 에 의해 제공 &lt;a href=&quot;../object&quot;&gt;TAP :: 객체&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ea44bf28584f175786037d8254e458ec9dd9dc5" translate="yes" xml:space="preserve">
          <source>Create an iterator. Provided by &lt;a href=&quot;TAP::Object&quot;&gt;TAP::Object&lt;/a&gt;.</source>
          <target state="translated">반복자를 만듭니다. &lt;a href=&quot;TAP::Object&quot;&gt;TAP :: Object에서&lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="f2a61216ea6bd1172096b7e521d63d97ec506b32" translate="yes" xml:space="preserve">
          <source>Create an iterator. Takes one argument: an &lt;code&gt;$array_ref&lt;/code&gt;</source>
          <target state="translated">이터레이터를 만듭니다. 하나의 인수를 취합니다 : &lt;code&gt;$array_ref&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2d5d5f750ed54bfd6f2d8da33d26daea2ebb512" translate="yes" xml:space="preserve">
          <source>Create an object to store the state of a deparsing operation and any options. The options are the same as those that can be given on the command line (see &lt;a href=&quot;#OPTIONS&quot;&gt;&quot;OPTIONS&quot;&lt;/a&gt;); options that are separated by commas after &lt;b&gt;-MO=Deparse&lt;/b&gt; should be given as separate strings.</source>
          <target state="translated">분리 작업 및 모든 옵션의 상태를 저장할 개체를 만듭니다. 옵션은 명령 줄에서 제공 할 수있는 옵션과 동일합니다 ( &lt;a href=&quot;#OPTIONS&quot;&gt;&quot;OPTIONS&quot;&lt;/a&gt; 참조 ). &lt;b&gt;-MO = Deparse&lt;/b&gt; 뒤에 쉼표로 구분 된 옵션은 별도의 문자열로 제공되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d452463d593e43e7b412e932435358550d3459d0" translate="yes" xml:space="preserve">
          <source>Create an object to store the state of a deparsing operation and any options. The options are the same as those that can be given on the command line (see &lt;a href=&quot;#OPTIONS&quot;&gt;OPTIONS&lt;/a&gt;); options that are separated by commas after &lt;b&gt;-MO=Deparse&lt;/b&gt; should be given as separate strings.</source>
          <target state="translated">deparsing 작업의 상태와 옵션을 저장할 객체를 만듭니다. 옵션은 명령 행에 제공 될 수있는 옵션과 동일합니다 ( &lt;a href=&quot;#OPTIONS&quot;&gt;옵션&lt;/a&gt; 참조 ). &lt;b&gt;-MO = Deparse&lt;/b&gt; 뒤에 쉼표로 구분 된 옵션은 별도의 문자열로 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="9112787448a0b0a1b976b8609db263871f034c88" translate="yes" xml:space="preserve">
          <source>Create and return a new interpreter by cloning the current one.</source>
          <target state="translated">현재 통역사를 복제하여 새 통역사를 작성하고 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="681f59f5e6812683ee0d03597d9f2b4876cee8dc" translate="yes" xml:space="preserve">
          <source>Create header and footer blocks containing the text of the &quot;NAME&quot; section.</source>
          <target state="translated">&quot;NAME&quot;섹션의 텍스트가 포함 된 머리글 및 바닥 글 블록을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="dca3cdfdc4e09deba69010bedea95d1cd1f538b3" translate="yes" xml:space="preserve">
          <source>Create if nonexistent.</source>
          <target state="translated">존재하지 않는 경우 생성합니다.</target>
        </trans-unit>
        <trans-unit id="88462160ded38bbe00b8b536b6d9dbb7a375a4b9" translate="yes" xml:space="preserve">
          <source>Create new installation system based on installperl links and Amiga protection bits now set correctly.</source>
          <target state="translated">이제 installperl 링크 및 Amiga 보호 비트를 기반으로 새 설치 시스템을 만들면 올바르게 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2d5ca272bf9f8abe24e8b1f4fd428df6751e11d3" translate="yes" xml:space="preserve">
          <source>Create or remove directory trees</source>
          <target state="translated">디렉토리 트리 작성 또는 제거</target>
        </trans-unit>
        <trans-unit id="896a63b966c3b07644d559d9c2dce6fddbbfbefe" translate="yes" xml:space="preserve">
          <source>Create simple getter/setters.</source>
          <target state="translated">간단한 게터 / 세터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="09b5614e18fec7e0ddfc36b2a94655c1a81db1b0" translate="yes" xml:space="preserve">
          <source>Create the extension</source>
          <target state="translated">확장 만들기</target>
        </trans-unit>
        <trans-unit id="8f40f57f9492b3e48f797cfcaf50c07df2a5569c" translate="yes" xml:space="preserve">
          <source>CreateFile</source>
          <target state="translated">CreateFile</target>
        </trans-unit>
        <trans-unit id="e5fb5385210935e8dcb069539d4949d49521e1e4" translate="yes" xml:space="preserve">
          <source>CreateFileW</source>
          <target state="translated">CreateFileW</target>
        </trans-unit>
        <trans-unit id="82149e5249dc1d6a3b9690dd546cd84a48533f50" translate="yes" xml:space="preserve">
          <source>Created - 18 Jan 2001</source>
          <target state="translated">Created-2001 년 1 월 18 일</target>
        </trans-unit>
        <trans-unit id="33db1a73ae0e0d1852a295cdab91f536d92a8891" translate="yes" xml:space="preserve">
          <source>Created by Tom Hughes &amp;lt;</source>
          <target state="translated">Tom Hughes 제작 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="a77e312a87d9bf99a129ae7deca657dc396bc238" translate="yes" xml:space="preserve">
          <source>Created version 1.0 of this document.</source>
          <target state="translated">이 문서의 1.0 버전을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="84bf65092e26b371444b5fc28387eb2e9d82921f" translate="yes" xml:space="preserve">
          <source>Creates a CPAN.pm autobundle with CPAN::Shell-&amp;gt;autobundle.</source>
          <target state="translated">CPAN :: Shell-&amp;gt; autobundle을 사용하여 CPAN.pm 자동 번들을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e6cdaaaee22d0c4e6b235592749143d45c2fe9b7" translate="yes" xml:space="preserve">
          <source>Creates a constant sub equivalent to Perl &lt;code&gt;sub FOO () { 123 }&lt;/code&gt; which is eligible for inlining at compile-time.</source>
          <target state="translated">컴파일 타임에 인라인 할 수있는 Perl &lt;code&gt;sub FOO () { 123 }&lt;/code&gt; 해당하는 상수 하위를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5aded7133df03bc0422a1afeffcfd6cb49151a72" translate="yes" xml:space="preserve">
          <source>Creates a digest string exactly like the &lt;a href=&quot;http://man.he.net/man3/crypt&quot;&gt;crypt(3)&lt;/a&gt; function in the C library (assuming that you actually have a version there that has not been extirpated as a potential munition).</source>
          <target state="translated">C 라이브러리 의 &lt;a href=&quot;http://man.he.net/man3/crypt&quot;&gt;crypt (3)&lt;/a&gt; 함수 와 똑같은 다이제스트 문자열을 만듭니다 ( 실제로 잠재적 탄약으로 제거되지 않은 버전이 있다고 가정).</target>
        </trans-unit>
        <trans-unit id="7f75da7fd0f98bc8dc84b4b1a932c3f5aea3cd14" translate="yes" xml:space="preserve">
          <source>Creates a digest string exactly like the crypt(3) function in the C library (assuming that you actually have a version there that has not been extirpated as a potential munition).</source>
          <target state="translated">C 라이브러리의 crypt (3) 함수와 정확히 같은 다이제스트 문자열을 만듭니다 (잠재 탄약으로 소멸되지 않은 버전이 있다고 가정).</target>
        </trans-unit>
        <trans-unit id="c1a27e7cadba2fd48b0875a29f86a14df4faced6" translate="yes" xml:space="preserve">
          <source>Creates a globally unique 128 bit integer that can be used as a persistent identifier in a distributed setting. To a very high degree of certainty this function returns a unique value. No other invocation, on the same or any other system (networked or not), should return the same value.</source>
          <target state="translated">분산 설정에서 영구 식별자로 사용할 수있는 전역 적으로 고유 한 128 비트 정수를 만듭니다. 매우 확실하게이 함수는 고유 한 값을 반환합니다. 동일하거나 다른 시스템 (네트워크 연결 여부에 관계없이)에서 다른 호출은 동일한 값을 반환해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="eac496469522ef212783107cb6f208d37140024c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IO::Handle&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;IO::Handle&lt;/code&gt; 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7484847414544410dbe69c81f60828adde826733" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;IO::Socket::IP&lt;/code&gt; object, containing a newly created socket handle according to the named arguments passed. The recognised arguments are:</source>
          <target state="translated">전달 된 명명 된 인수에 따라 새로 생성 된 소켓 핸들을 포함 하는 새로운 &lt;code&gt;IO::Socket::IP&lt;/code&gt; 객체를 생성합니다. 인식되는 인수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="950a7fce8052aa44e77d67eb7cce6a9b17f503cc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;POSIX::SigAction&lt;/code&gt; object which corresponds to the C &lt;code&gt;struct sigaction&lt;/code&gt; . This object will be destroyed automatically when it is no longer needed. The first parameter is the handler, a sub reference. The second parameter is a &lt;code&gt;POSIX::SigSet&lt;/code&gt; object, it defaults to the empty set. The third parameter contains the &lt;code&gt;sa_flags&lt;/code&gt; , it defaults to 0.</source>
          <target state="translated">C &lt;code&gt;struct sigaction&lt;/code&gt; 해당 하는 새로운 &lt;code&gt;POSIX::SigAction&lt;/code&gt; 객체를 만듭니다 . 이 오브젝트는 더 이상 필요하지 않으면 자동으로 삭제됩니다. 첫 번째 매개 변수는 하위 참조 인 핸들러입니다. 두 번째 매개 변수는 &lt;code&gt;POSIX::SigSet&lt;/code&gt; 객체이며 기본값은 빈 세트입니다. 세 번째 매개 변수에는 &lt;code&gt;sa_flags&lt;/code&gt; 가 포함되며 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="c38efaff88563edf3b974e5af1829103af6520e3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;POSIX::SigAction&lt;/code&gt; object which corresponds to the C &lt;code&gt;struct sigaction&lt;/code&gt;. This object will be destroyed automatically when it is no longer needed. The first parameter is the handler, a sub reference. The second parameter is a &lt;code&gt;POSIX::SigSet&lt;/code&gt; object, it defaults to the empty set. The third parameter contains the &lt;code&gt;sa_flags&lt;/code&gt;, it defaults to 0.</source>
          <target state="translated">C &lt;code&gt;struct sigaction&lt;/code&gt; 에 해당 하는 새로운 &lt;code&gt;POSIX::SigAction&lt;/code&gt; 객체를 생성합니다 . 이 개체는 더 이상 필요하지 않을 때 자동으로 삭제됩니다. 첫 번째 매개 변수는 하위 참조 인 핸들러입니다. 두 번째 매개 변수는 &lt;code&gt;POSIX::SigSet&lt;/code&gt; 오브젝트이며 기본값은 빈 세트입니다. 세 번째 매개 변수는 &lt;code&gt;sa_flags&lt;/code&gt; 를 포함하며 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="3a046baa92e74817bc28338c57861df9a66ad3d9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;autodie::Scope::Guard&lt;/code&gt;, which will invoke the given sub once it goes out of scope (i.e. its DESTROY handler is called).</source>
          <target state="translated">새로운 &lt;code&gt;autodie::Scope::Guard&lt;/code&gt; 생성합니다 . 이것은 주어진 sub가 범위를 벗어나면 호출 할 것입니다 (즉, DESTROY 핸들러가 호출 됨).</target>
        </trans-unit>
        <trans-unit id="9132e5fe04a353ade09ed27141c38800e9c90fdc" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;autodie::Scope::GuardStack&lt;/code&gt;. The stack is initially empty and must be inserted into &lt;code&gt;%^H&lt;/code&gt; by the creator.</source>
          <target state="translated">새로운 &lt;code&gt;autodie::Scope::GuardStack&lt;/code&gt; . 스택은 처음에는 비어 있으며 작성자가 &lt;code&gt;%^H&lt;/code&gt; 에 삽입해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4ae48dd26f42c4c2190d5e11959efe62c8e9e53c" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;autodie::exception&lt;/code&gt; object. Normally called directly from an autodying function. The &lt;code&gt;function&lt;/code&gt; argument is required, its the function we were trying to call that generated the exception. The &lt;code&gt;args&lt;/code&gt; parameter is optional.</source>
          <target state="translated">새로운 &lt;code&gt;autodie::exception&lt;/code&gt; 객체를 생성 합니다. 일반적으로 자동 염색 기능에서 직접 호출됩니다. &lt;code&gt;function&lt;/code&gt; 인수가 필요하며, 그 우리가 예외를 생성하는 것이 호출하려고 한 기능. &lt;code&gt;args&lt;/code&gt; 매개 변수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="4409ce2d7a51f583ec857ef63305d9c328af09b3" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;refcounted_he&lt;/code&gt; . This consists of a single key/value pair and a reference to an existing &lt;code&gt;refcounted_he&lt;/code&gt; chain (which may be empty), and thus forms a longer chain. When using the longer chain, the new key/value pair takes precedence over any entry for the same key further along the chain.</source>
          <target state="translated">새로운 &lt;code&gt;refcounted_he&lt;/code&gt; 를 작성 합니다. 단일 키 / 값 쌍과 기존 &lt;code&gt;refcounted_he&lt;/code&gt; 체인 (비어있을 수 있음)에 대한 참조로 구성되어 더 긴 체인을 형성합니다. 더 긴 체인을 사용하면 새로운 키 / 값 쌍이 체인을 따라 동일한 키에 대한 항목보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="d24f6045f4a5ad4aafd034d97f210a1c9783f3c9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;refcounted_he&lt;/code&gt;. This consists of a single key/value pair and a reference to an existing &lt;code&gt;refcounted_he&lt;/code&gt; chain (which may be empty), and thus forms a longer chain. When using the longer chain, the new key/value pair takes precedence over any entry for the same key further along the chain.</source>
          <target state="translated">새로운 &lt;code&gt;refcounted_he&lt;/code&gt; 를 생성합니다 . 이것은 단일 키 / 값 쌍과 기존 &lt;code&gt;refcounted_he&lt;/code&gt; 체인 (비어있을 수 있음)에 대한 참조로 구성되어 더 긴 체인을 형성합니다. 더 긴 체인을 사용하는 경우 새 키 / 값 쌍이 체인을 따라 더 멀리있는 동일한 키에 대한 항목보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="8ec4a2bcc46bbdc56e8f9146fd2af6f3bc1fb030" translate="yes" xml:space="preserve">
          <source>Creates a new AV and populates it with a list of SVs. The SVs are copied into the array, so they may be freed after the call to &lt;code&gt;av_make&lt;/code&gt;. The new AV will have a reference count of 1.</source>
          <target state="translated">새 AV를 만들고 SV 목록으로 채 웁니다. SV는 어레이에 복사되므로 &lt;code&gt;av_make&lt;/code&gt; 호출 후 해제 될 수 있습니다 . 새 AV의 참조 횟수는 1입니다.</target>
        </trans-unit>
        <trans-unit id="50f1aadb519c6f1717d95b45f0702486fa9496f0" translate="yes" xml:space="preserve">
          <source>Creates a new AV and populates it with a list of SVs. The SVs are copied into the array, so they may be freed after the call to av_make. The new AV will have a reference count of 1.</source>
          <target state="translated">새 AV를 생성하고 SV 목록으로 채 웁니다. SV는 어레이에 복사되므로 av_make를 호출 한 후 해제 될 수 있습니다. 새로운 AV의 참조 카운트는 1입니다.</target>
        </trans-unit>
        <trans-unit id="33114a24c831591f9857c8f08551925f33fb6511" translate="yes" xml:space="preserve">
          <source>Creates a new AV. The reference count is set to 1.</source>
          <target state="translated">새로운 AV를 만듭니다. 참조 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="aa1ac2ca7a7bb62339b5b238de6e909b22341ab0" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object from a scalar or another BigInt object. The input is accepted as decimal, hex (with leading '0x') or binary (with leading '0b').</source>
          <target state="translated">스칼라 또는 다른 BigInt 오브젝트에서 새 BigInt 오브젝트를 작성합니다. 입력은 10 진수, 16 진 (앞에 '0x') 또는 2 진 (앞에 '0b')으로 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="cc0f0aa1d0ba94cb717a19862e381519302e9596" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing NaN (Not A Number). If used on an object, it will set it to NaN:</source>
          <target state="translated">NaN (Not A Number)을 나타내는 새 BigInt 객체를 만듭니다. 객체에 사용되면 NaN으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9de9810e6c72332db75b8fa66a77cdf8fc6dc8ae" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing infinity. The optional argument is either '-' or '+', indicating whether you want infinity or minus infinity. If used on an object, it will set it to infinity:</source>
          <target state="translated">무한대를 나타내는 새로운 BigInt 객체를 작성합니다. 선택적 인수는 '-'또는 '+'이며 무한대 또는 마이너스 무한대를 원하는지 여부를 나타냅니다. 객체에 사용되면 무한대로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ef067d4e1aa5d4de6db6fbb3fdb193a34b25bcd5" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing one. The optional argument is either '-' or '+', indicating whether you want one or minus one. If used on an object, it will set it to one:</source>
          <target state="translated">하나를 나타내는 새 BigInt 오브젝트를 작성합니다. 선택적인 인수는 '-'또는 '+'이며, 하나를 원하는지 또는 빼기를 원하는지 나타냅니다. 객체에 사용되면 다음과 같이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2d66a0e771c364720b98473ea0bd85073686ef36" translate="yes" xml:space="preserve">
          <source>Creates a new BigInt object representing zero. If used on an object, it will set it to zero:</source>
          <target state="translated">0을 나타내는 새로운 BigInt 객체를 작성합니다. 객체에 사용되면 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d20d2a10f54e6100abf4b8bc65930a23b386ec56" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing NaN (Not A Number). If used on an object, it will set it to NaN:</source>
          <target state="translated">NaN (Not A Number)을 나타내는 새 BigRat 객체를 만듭니다. 객체에 사용되는 경우 NaN으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="8e54fba1bcbca4c8eaaa9dd6e7ea9cb32b580444" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing infinity. The optional argument is either '-' or '+', indicating whether you want infinity or minus infinity. If used on an object, it will set it to infinity:</source>
          <target state="translated">무한대를 나타내는 새로운 BigRat 객체를 생성합니다. 선택적 인수는 '-'또는 '+'이며 무한대 또는 마이너스 무한대를 원하는지 여부를 나타냅니다. 객체에 사용하면 무한대로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5f3a12ef28a2d888ef7332a28aa27fed8d7996d9" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing one. The optional argument is either '-' or '+', indicating whether you want one or minus one. If used on an object, it will set it to one:</source>
          <target state="translated">하나를 나타내는 새 BigRat 개체를 만듭니다. 선택적 인수는 '-'또는 '+'이며 하나 또는 빼기 하나를 원하는지 여부를 나타냅니다. 객체에 사용하면 다음 중 하나로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0281d7fc8fd0b71b7daaa747f8b92587af5a8942" translate="yes" xml:space="preserve">
          <source>Creates a new BigRat object representing zero. If used on an object, it will set it to zero:</source>
          <target state="translated">0을 나타내는 새 BigRat 개체를 만듭니다. 객체에 사용하면 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f27ebfb7f2c2069457b323e2292201c271ad4602" translate="yes" xml:space="preserve">
          <source>Creates a new HV. The reference count is set to 1.</source>
          <target state="translated">새로운 HV를 만듭니다. 참조 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e3dbd3e9bc9f1c096843db3964e5fc39735e0b91" translate="yes" xml:space="preserve">
          <source>Creates a new JSON::PP object that can be used to de/encode JSON strings. All boolean flags described below are by default</source>
          <target state="translated">JSON 문자열을 디코딩 / 인코딩하는 데 사용할 수있는 새 JSON :: PP 개체를 만듭니다. 아래에 설명 된 모든 부울 플래그는 기본적으로</target>
        </trans-unit>
        <trans-unit id="1c8d3aa8c2bcbf224a4651fe182a19a3da13957c" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object from a scalar or another Math::BigInt object. The input is accepted as decimal, hexadecimal (with leading '0x') or binary (with leading '0b').</source>
          <target state="translated">스칼라 또는 다른 Math :: BigInt 개체에서 새 Math :: BigInt 개체를 만듭니다. 입력은 10 진수, 16 진수 (선행 '0x'포함) 또는 2 진 (선행 '0b'포함)으로 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="38601eac053171f7c46fcbecaee76fe95929b468" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing NaN (Not A Number). If used as an instance method, assigns the value to the invocand.</source>
          <target state="translated">NaN (숫자가 아님)을 나타내는 새 Math :: BigInt 객체를 만듭니다. 인스턴스 메서드로 사용되는 경우 값을 호출자에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="27fcba0723640eacf3b911df6ff2407445d0ce79" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing PI. If used as an instance method, assigns the value to the invocand. With Math::BigInt this always returns 3.</source>
          <target state="translated">PI를 나타내는 새 Math :: BigInt 개체를 만듭니다. 인스턴스 메서드로 사용되는 경우 값을 호출자에 할당합니다. Math :: BigInt를 사용하면 항상 3을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c1d745853d0d53682b8c1567b476dd27b0cc2176" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing infinity. The optional argument is either '-' or '+', indicating whether you want infinity or minus infinity. If used as an instance method, assigns the value to the invocand.</source>
          <target state="translated">무한대를 나타내는 새 Math :: BigInt 객체를 만듭니다. 선택적 인수는 '-'또는 '+'이며 무한대 또는 마이너스 무한대를 원하는지 여부를 나타냅니다. 인스턴스 메서드로 사용되는 경우 값을 호출자에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="fa24f41898df927efcafe31997fa330266de41ec" translate="yes" xml:space="preserve">
          <source>Creates a new Math::BigInt object representing one. The optional argument is either '-' or '+', indicating whether you want plus one or minus one. If used as an instance method, assigns the value to the invocand.</source>
          <target state="translated">하나를 나타내는 새 Math :: BigInt 개체를 만듭니다. 선택적 인수는 '-'또는 '+'이며 더하기 1 또는 빼기 1을 원하는지 여부를 나타냅니다. 인스턴스 메서드로 사용되는 경우 값을 호출자에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="5c4c9fc922e6f0fc2c8c0dc9a56aa12406f49a23" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a floating point value into it. The reference count for the SV is set to 1.</source>
          <target state="translated">새 SV를 작성하고 부동 소수점 값을 여기에 복사합니다. SV의 기준 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="8a706dc63eba9f9d97a63992d45f33ffaa0260f8" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. If utf8 is true, calls &lt;code&gt;SvUTF8_on&lt;/code&gt; on the new SV. Implemented as a wrapper around &lt;code&gt;newSVpvn_flags&lt;/code&gt; .</source>
          <target state="translated">새 SV를 작성하고 문자열 ( &lt;code&gt;NUL&lt;/code&gt; ( &lt;code&gt;\0&lt;/code&gt; ) 문자를 포함 할 수 있음)을 복사 합니다. utf8이 true이면 새 SV에서 &lt;code&gt;SvUTF8_on&lt;/code&gt; 을 호출합니다 . &lt;code&gt;newSVpvn_flags&lt;/code&gt; 주위를 래퍼로 구현했습니다 .</target>
        </trans-unit>
        <trans-unit id="ba2d40d3f42edeb3193c212e63e131081199c97e" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. The reference count for the SV is set to 1. If &lt;code&gt;len&lt;/code&gt; is zero, Perl will compute the length using strlen(), (which means if you use this option, that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte).</source>
          <target state="translated">새 SV를 작성하고 문자열 ( &lt;code&gt;NUL&lt;/code&gt; ( &lt;code&gt;\0&lt;/code&gt; ) 문자를 포함 할 수 있음)을 여기에 복사 합니다. SV의 참조 카운트는 1로 설정됩니다. &lt;code&gt;len&lt;/code&gt; 이 0 인 경우 Perl은 strlen ()을 사용하여 길이를 계산합니다. 즉,이 옵션을 사용하면 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 에 &lt;code&gt;NUL&lt;/code&gt; 문자를 포함 할 수 없으며 종료해야합니다. &lt;code&gt;NUL&lt;/code&gt; 바이트).</target>
        </trans-unit>
        <trans-unit id="b321a7140bf968fa858a05cea608e9cde629793f" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt; ) characters) into it. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length string. You are responsible for ensuring that the source string is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; argument is NULL the new SV will be undefined. Currently the only flag bits accepted are &lt;code&gt;SVf_UTF8&lt;/code&gt; and &lt;code&gt;SVs_TEMP&lt;/code&gt; . If &lt;code&gt;SVs_TEMP&lt;/code&gt; is set, then &lt;code&gt;sv_2mortal()&lt;/code&gt; is called on the result before returning. If &lt;code&gt;SVf_UTF8&lt;/code&gt; is set, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; is considered to be in UTF-8 and the &lt;code&gt;SVf_UTF8&lt;/code&gt; flag will be set on the new SV. &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; is a convenience wrapper for this function, defined as</source>
          <target state="translated">새 SV를 작성하고 문자열 ( &lt;code&gt;NUL&lt;/code&gt; ( &lt;code&gt;\0&lt;/code&gt; ) 문자를 포함 할 수 있음)을 복사 합니다. SV의 참조 카운트는 1로 설정됩니다. &lt;code&gt;len&lt;/code&gt; 이 0이면 Perl은 길이가 0 인 문자열을 만듭니다. 소스 문자열의 길이가 적어도 &lt;code&gt;len&lt;/code&gt; 바이트 인지 확인해야합니다 . 는 IF &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 인수가 NULL 인 새 SV는 정의되지 않습니다. 현재 허용되는 유일한 플래그 비트는 &lt;code&gt;SVf_UTF8&lt;/code&gt; 및 &lt;code&gt;SVs_TEMP&lt;/code&gt; 입니다. 경우 &lt;code&gt;SVs_TEMP&lt;/code&gt; 가 설정되어, 다음 &lt;code&gt;sv_2mortal()&lt;/code&gt; 반환하기 전에 결과에 호출된다. 경우 &lt;code&gt;SVf_UTF8&lt;/code&gt; 가 설정되어, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; UTF-8과에로 간주됩니다 &lt;code&gt;SVf_UTF8&lt;/code&gt; 플래그가 새 SV에 설정됩니다. &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; 은 다음과 같이 정의 된이 함수의 편의 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="0022d70bbbc5f9e0e3696df44121939198d270aa" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt;) characters) into it. If &lt;code&gt;utf8&lt;/code&gt; is true, calls &lt;code&gt;SvUTF8_on&lt;/code&gt; on the new SV. Implemented as a wrapper around &lt;code&gt;newSVpvn_flags&lt;/code&gt;.</source>
          <target state="translated">새 SV를 만들고 여기에 문자열 ( &lt;code&gt;NUL&lt;/code&gt; ( &lt;code&gt;\0&lt;/code&gt; ) 문자를 포함 할 수 있음)을 복사 합니다. 경우 &lt;code&gt;utf8&lt;/code&gt; 사실 호출 &lt;code&gt;SvUTF8_on&lt;/code&gt; 을 새로운 SV에. &lt;code&gt;newSVpvn_flags&lt;/code&gt; 주위의 래퍼로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f7b0ca555fcea60e5705b3e8cf864c7c4c8e982" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt;) characters) into it. The reference count for the SV is set to 1. If &lt;code&gt;len&lt;/code&gt; is zero, Perl will compute the length using &lt;code&gt;strlen()&lt;/code&gt;, (which means if you use this option, that &lt;code&gt;s&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte).</source>
          <target state="translated">새 SV를 만들고 여기에 문자열 ( &lt;code&gt;NUL&lt;/code&gt; ( &lt;code&gt;\0&lt;/code&gt; ) 문자를 포함 할 수 있음)을 복사 합니다. SV에 대한 참조 카운트는 경우 1로 설정됩니다 &lt;code&gt;len&lt;/code&gt; 제로, 펄 사용하여 길이를 계산합니다 &lt;code&gt;strlen()&lt;/code&gt; , (어떤 수단 당신은이 옵션을 사용하는 경우 &lt;code&gt;s&lt;/code&gt; 포함 할 수 없습니다 &lt;code&gt;NUL&lt;/code&gt; 의 문자와 종단을 가지고있다가 &lt;code&gt;NUL&lt;/code&gt; 바이트).</target>
        </trans-unit>
        <trans-unit id="a716a607eac3dac42624b9af5f33cc0a768d3670" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string (which may contain &lt;code&gt;NUL&lt;/code&gt; (&lt;code&gt;\0&lt;/code&gt;) characters) into it. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length string. You are responsible for ensuring that the source string is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;s&lt;/code&gt; argument is NULL the new SV will be undefined. Currently the only flag bits accepted are &lt;code&gt;SVf_UTF8&lt;/code&gt; and &lt;code&gt;SVs_TEMP&lt;/code&gt;. If &lt;code&gt;SVs_TEMP&lt;/code&gt; is set, then &lt;code&gt;sv_2mortal()&lt;/code&gt; is called on the result before returning. If &lt;code&gt;SVf_UTF8&lt;/code&gt; is set, &lt;code&gt;s&lt;/code&gt; is considered to be in UTF-8 and the &lt;code&gt;SVf_UTF8&lt;/code&gt; flag will be set on the new SV. &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; is a convenience wrapper for this function, defined as</source>
          <target state="translated">새 SV를 만들고 여기에 문자열 ( &lt;code&gt;NUL&lt;/code&gt; ( &lt;code&gt;\0&lt;/code&gt; ) 문자를 포함 할 수 있음)을 복사 합니다. SV에 대한 참조 횟수는 1로 설정됩니다. &lt;code&gt;len&lt;/code&gt; 이 0이면 Perl은 길이가 0 인 문자열을 생성합니다. 소스 문자열의 길이가 &lt;code&gt;len&lt;/code&gt; 바이트 이상인지 확인해야합니다 . 는 IF &lt;code&gt;s&lt;/code&gt; 인수가 NULL 인 새 SV는 정의되지 않습니다. 현재 허용되는 유일한 플래그 비트는 &lt;code&gt;SVf_UTF8&lt;/code&gt; 및 &lt;code&gt;SVs_TEMP&lt;/code&gt; 입니다. 경우 &lt;code&gt;SVs_TEMP&lt;/code&gt; 가 설정되어, 다음 &lt;code&gt;sv_2mortal()&lt;/code&gt; 반환하기 전에 결과에 호출된다. 경우 &lt;code&gt;SVf_UTF8&lt;/code&gt; 가 설정되어, &lt;code&gt;s&lt;/code&gt; 의 UTF-8과에있는 것으로 간주됩니다 &lt;code&gt;SVf_UTF8&lt;/code&gt; 새 SV에 플래그가 설정됩니다. &lt;code&gt;newSVpvn_utf8()&lt;/code&gt; 은 다음과 같이 정의 된이 함수의 편의 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="564cfa2529586958403f4ae104186110ddb6158c" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string into it, which may contain &lt;code&gt;NUL&lt;/code&gt; characters (&lt;code&gt;\0&lt;/code&gt; ) and other binary data. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length (Perl) string. You are responsible for ensuring that the source buffer is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;buffer&lt;/code&gt; argument is NULL the new SV will be undefined.</source>
          <target state="translated">새로운 SV를 생성하고 문자열을 복사합니다. 여기에는 &lt;code&gt;NUL&lt;/code&gt; 문자 ( &lt;code&gt;\0&lt;/code&gt; ) 및 기타 이진 데이터 가 포함될 수 있습니다 . SV의 참조 카운트는 1로 설정됩니다. &lt;code&gt;len&lt;/code&gt; 이 0이면 Perl은 길이가 0 인 문자열을 생성합니다. 소스 버퍼 길이가 &lt;code&gt;len&lt;/code&gt; 바이트 이상인지 확인해야합니다 . 경우 &lt;code&gt;buffer&lt;/code&gt; 인수가 NULL 새로운 SV는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="75dc4ed3d94496525d9a214120df876b4eeddba3" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies a string into it, which may contain &lt;code&gt;NUL&lt;/code&gt; characters (&lt;code&gt;\0&lt;/code&gt;) and other binary data. The reference count for the SV is set to 1. Note that if &lt;code&gt;len&lt;/code&gt; is zero, Perl will create a zero length (Perl) string. You are responsible for ensuring that the source buffer is at least &lt;code&gt;len&lt;/code&gt; bytes long. If the &lt;code&gt;buffer&lt;/code&gt; argument is NULL the new SV will be undefined.</source>
          <target state="translated">새 SV를 만들고 여기에 &lt;code&gt;NUL&lt;/code&gt; 문자 ( &lt;code&gt;\0&lt;/code&gt; ) 및 기타 이진 데이터를 포함 할 수있는 문자열을 복사합니다 . SV에 대한 참조 횟수는 1로 설정됩니다. &lt;code&gt;len&lt;/code&gt; 이 0이면 Perl은 길이가 0 인 (Perl) 문자열을 생성합니다. 소스 버퍼의 길이가 &lt;code&gt;len&lt;/code&gt; 바이트 이상인지 확인해야합니다 . 경우 &lt;code&gt;buffer&lt;/code&gt; 인수가 NULL 새로운 SV는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9de1b0a97a64089b618097ac3dffb046bfdc6779" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies an integer into it. The reference count for the SV is set to 1.</source>
          <target state="translated">새로운 SV를 생성하고 정수를 SV에 복사합니다. SV의 기준 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ad0aaf0d14999388a8de7db8b3ae47db90806dcf" translate="yes" xml:space="preserve">
          <source>Creates a new SV and copies an unsigned integer into it. The reference count for the SV is set to 1.</source>
          <target state="translated">새 SV를 작성하고 부호없는 정수를 복사합니다. SV의 기준 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e144449cf71b321cfaa7ad7d73caee74bd802815" translate="yes" xml:space="preserve">
          <source>Creates a new SV and initializes it with the string formatted like &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">새 SV를 생성하고 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 와 같은 형식의 문자열로 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="8dffba6ef9821600e45317acf44c91037855dd11" translate="yes" xml:space="preserve">
          <source>Creates a new SV and initializes it with the string formatted like &lt;code&gt;sv_catpvf&lt;/code&gt;.</source>
          <target state="translated">새 SV를 만들고 &lt;code&gt;sv_catpvf&lt;/code&gt; 형식의 문자열로 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="8fe580b8ead3e78b800fd8ca819c064553dc4b84" translate="yes" xml:space="preserve">
          <source>Creates a new SV containing the pad name.</source>
          <target state="translated">패드 이름이 포함 된 새 SV를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fdde1c5ef502eaafbff9afbbccd3fe8baa5b7fc2" translate="yes" xml:space="preserve">
          <source>Creates a new SV for the existing RV, &lt;code&gt;rv&lt;/code&gt; , to point to. If &lt;code&gt;rv&lt;/code&gt; is not an RV then it will be upgraded to one. If &lt;code&gt;classname&lt;/code&gt; is non-null then the new SV will be blessed in the specified package. The new SV is returned and its reference count is 1. The reference count 1 is owned by &lt;code&gt;rv&lt;/code&gt; .</source>
          <target state="translated">기존 RV &lt;code&gt;rv&lt;/code&gt; 에 대한 새 SV 를 가리 킵니다. 경우 &lt;code&gt;rv&lt;/code&gt; 캠핑카하지 않습니다 다음은 하나에 업그레이드됩니다. &lt;code&gt;classname&lt;/code&gt; 이 null이 아닌 경우 지정된 패키지에서 새 SV가 제공됩니다. 새로운 SV가 반환되고 참조 카운트는 1입니다. 참조 카운트 1은 &lt;code&gt;rv&lt;/code&gt; 가 소유합니다 .</target>
        </trans-unit>
        <trans-unit id="7e2361bd2c7eea36fabc44e6e21c7f72c69373a1" translate="yes" xml:space="preserve">
          <source>Creates a new SV for the existing RV, &lt;code&gt;rv&lt;/code&gt;, to point to. If &lt;code&gt;rv&lt;/code&gt; is not an RV then it will be upgraded to one. If &lt;code&gt;classname&lt;/code&gt; is non-null then the new SV will be blessed in the specified package. The new SV is returned and its reference count is 1. The reference count 1 is owned by &lt;code&gt;rv&lt;/code&gt;. See also newRV_inc() and newRV_noinc() for creating a new RV properly.</source>
          <target state="translated">가리키는 기존 RV &lt;code&gt;rv&lt;/code&gt; 에 대한 새 SV를 만듭니다 . 경우 &lt;code&gt;rv&lt;/code&gt; 캠핑카하지 않습니다 다음은 하나에 업그레이드됩니다. 경우 &lt;code&gt;classname&lt;/code&gt; 다음 새 SV 지정된 패키지에 복을받을 것이다 null 이외입니다. 새 SV가 반환되고 참조 횟수는 1입니다. 참조 횟수 1은 &lt;code&gt;rv&lt;/code&gt; 가 소유합니다 . 새 RV를 올바르게 생성하려면 newRV_inc () 및 newRV_noinc ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="20afcc7c41f0b067ff4c82cda575bca113c7031c" translate="yes" xml:space="preserve">
          <source>Creates a new SV from the hash key structure. It will generate scalars that point to the shared string table where possible. Returns a new (undefined) SV if &lt;code&gt;hek&lt;/code&gt; is NULL.</source>
          <target state="translated">해시 키 구조에서 새 SV를 만듭니다. 가능한 경우 공유 문자열 테이블을 가리키는 스칼라를 생성합니다. &lt;code&gt;hek&lt;/code&gt; 가 NULL 이면 새로운 (정의되지 않은) SV를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="639f7c9a254704d094942032f6f23eecd10dcb3d" translate="yes" xml:space="preserve">
          <source>Creates a new SV from the hash key structure. It will generate scalars that point to the shared string table where possible. Returns a new (undefined) SV if the hek is NULL.</source>
          <target state="translated">해시 키 구조에서 새 SV를 만듭니다. 가능한 경우 공유 문자열 테이블을 가리키는 스칼라를 생성합니다. hek가 NULL 인 경우 새로운 (정의되지 않은) SV를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1cd7ce4c785336645dd9ca8151db8dfa4fd5a1c4" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is a copy of the original SV (using &lt;code&gt;sv_setsv&lt;/code&gt; ). The new SV is marked as mortal. It will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;sv_newmortal&lt;/code&gt; and &lt;code&gt;sv_2mortal&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;sv_setsv&lt;/code&gt; 를 사용하여 원래 SV의 사본 인 새 SV를 작성 합니다. 새로운 SV는 필사자로 표시됩니다. FREETMPS를 명시 적으로 호출하거나 명령문 경계와 같은 위치에서 암시 적으로 호출하면 &quot;곧&quot;파괴됩니다. &lt;code&gt;sv_newmortal&lt;/code&gt; 및 &lt;code&gt;sv_2mortal&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef768ff23772ee46b4be28e816308edeb6cd7544" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is a copy of the original SV (using &lt;code&gt;sv_setsv&lt;/code&gt;). The new SV is marked as mortal. It will be destroyed &quot;soon&quot;, either by an explicit call to &lt;code&gt;FREETMPS&lt;/code&gt;, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">원본 SV의 복사 &lt;code&gt;sv_setsv&lt;/code&gt; 새 SV를 생성합니다 ( sv_setsv 사용 ). 새로운 SV는 필사자로 표시됩니다. &lt;code&gt;FREETMPS&lt;/code&gt; 에 대한 명시 적 호출 또는 명령문 경계와 같은 위치에서의 암시 적 호출에 의해 &quot;곧&quot;소멸됩니다 . &lt;code&gt;&lt;a href=&quot;#sv_newmortal&quot;&gt;&quot;sv_newmortal&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04a78f404d15207cad1d1bd98de9d1a89be2f47d" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is an exact duplicate of the original SV. (Uses &lt;code&gt;sv_setsv&lt;/code&gt; .)</source>
          <target state="translated">원래 SV의 정확한 복제 본인 새 SV를 작성합니다. &lt;code&gt;sv_setsv&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="e32da32e0a383e0bb47b1a2078f764f5d43a6533" translate="yes" xml:space="preserve">
          <source>Creates a new SV which is an exact duplicate of the original SV. (Uses &lt;code&gt;sv_setsv&lt;/code&gt;.)</source>
          <target state="translated">원래 SV의 정확한 복제 본인 새 SV를 만듭니다. ( &lt;code&gt;sv_setsv&lt;/code&gt; 를 사용 합니다 .)</target>
        </trans-unit>
        <trans-unit id="ca305828d7f4ebfbda10c3c9ad3e63a33d7dab4d" translate="yes" xml:space="preserve">
          <source>Creates a new SV with its &lt;code&gt;SvPVX_const&lt;/code&gt; pointing to a shared string in the string table. If the string does not already exist in the table, it is created first. Turns on the &lt;code&gt;SvIsCOW&lt;/code&gt; flag (or &lt;code&gt;READONLY&lt;/code&gt; and &lt;code&gt;FAKE&lt;/code&gt; in 5.16 and earlier). If the &lt;code&gt;hash&lt;/code&gt; parameter is non-zero, that value is used; otherwise the hash is computed. The string's hash can later be retrieved from the SV with the &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; macro. The idea here is that as the string table is used for shared hash keys these strings will have &lt;code&gt;SvPVX_const == HeKEY&lt;/code&gt; and hash lookup will avoid string compare.</source>
          <target state="translated">&lt;code&gt;SvPVX_const&lt;/code&gt; 가 문자열 테이블의 공유 문자열을 가리키는 새 SV를 만듭니다 . 문자열이 테이블에 아직 존재하지 않는 경우 먼저 생성됩니다. 온 턴 &lt;code&gt;SvIsCOW&lt;/code&gt; 의 (또는 플래그 &lt;code&gt;READONLY&lt;/code&gt; 와 &lt;code&gt;FAKE&lt;/code&gt; 5.16 및 이전 버전에서). 경우] &lt;code&gt;hash&lt;/code&gt; 파라미터는 비 제로이고, 그 값이 사용된다; 그렇지 않으면 해시가 계산됩니다. 문자열의 해시는 나중에 &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; 매크로 를 사용하여 SV에서 검색 할 수 있습니다 . 여기서 아이디어는 문자열 테이블이 공유 해시 키에 사용되므로 이러한 문자열은 &lt;code&gt;SvPVX_const == HeKEY&lt;/code&gt; 가지며 해시 조회는 문자열 비교를 피할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f878a6fda000644884fdbc9cf596c38a8f7b65c4" translate="yes" xml:space="preserve">
          <source>Creates a new SV with its SvPVX_const pointing to a shared string in the string table. If the string does not already exist in the table, it is created first. Turns on the SvIsCOW flag (or READONLY and FAKE in 5.16 and earlier). If the &lt;code&gt;hash&lt;/code&gt; parameter is non-zero, that value is used; otherwise the hash is computed. The string's hash can later be retrieved from the SV with the &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; macro. The idea here is that as the string table is used for shared hash keys these strings will have SvPVX_const == HeKEY and hash lookup will avoid string compare.</source>
          <target state="translated">SvPVX_const가 문자열 테이블에서 공유 문자열을 가리키는 새 SV를 작성합니다. 문자열이 테이블에 존재하지 않으면 먼저 작성됩니다. SvIsCOW 플래그 (또는 5.16 이하의 READONLY and FAKE)를 켭니다. 경우] &lt;code&gt;hash&lt;/code&gt; 파라미터는 비 제로이고, 그 값이 사용된다; 그렇지 않으면 해시가 계산됩니다. 문자열의 해시는 나중에 &lt;code&gt;SvSHARED_HASH()&lt;/code&gt; 매크로 를 사용하여 SV에서 검색 할 수 있습니다 . 여기서 문자열 테이블은 공유 해시 키에 사용되므로 이러한 문자열에는 SvPVX_const == HeKEY가 있고 해시 조회는 문자열 비교를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c74397b44268e30b14c395c9db4f9d4c75043d98" translate="yes" xml:space="preserve">
          <source>Creates a new SV, of the type specified. The reference count for the new SV is set to 1.</source>
          <target state="translated">지정된 유형의 새 SV를 만듭니다. 새로운 SV의 기준 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="8515b03b962934c971529fee07cf58fe4206e69f" translate="yes" xml:space="preserve">
          <source>Creates a new SV. A non-zero &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes of preallocated string space the SV should have. An extra byte for a trailing &lt;code&gt;NUL&lt;/code&gt; is also reserved. (&lt;code&gt;SvPOK&lt;/code&gt; is not set for the SV even if string space is allocated.) The reference count for the new SV is set to 1.</source>
          <target state="translated">새 SV를 생성합니다. 0이 아닌 &lt;code&gt;len&lt;/code&gt; 매개 변수는 SV가 가져야하는 사전 할당 된 문자열 공간의 바이트 수를 나타냅니다. 후행 &lt;code&gt;NUL&lt;/code&gt; 에 대한 추가 바이트 도 예약됩니다. ( 문자열 공간이 할당되어 있어도 SV에 &lt;code&gt;SvPOK&lt;/code&gt; 가 설정되어 있지 않습니다.) 새 SV에 대한 참조 횟수는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d12e4b3cc81eba03f26cff30464e8b479b1d58a2" translate="yes" xml:space="preserve">
          <source>Creates a new SV. A non-zero &lt;code&gt;len&lt;/code&gt; parameter indicates the number of bytes of preallocated string space the SV should have. An extra byte for a trailing &lt;code&gt;NUL&lt;/code&gt; is also reserved. (SvPOK is not set for the SV even if string space is allocated.) The reference count for the new SV is set to 1.</source>
          <target state="translated">새로운 SV를 만듭니다. &lt;code&gt;len&lt;/code&gt; 이 아닌 매개 변수는 SV에 미리 할당 된 문자열 공간의 바이트 수를 나타냅니다. 후행 &lt;code&gt;NUL&lt;/code&gt; 에 대한 추가 바이트 도 예약되어 있습니다. (문자열 공간이 할당 된 경우에도 SVPOK는 SV에 대해 설정되지 않습니다.) 새 SV의 참조 카운트는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e9a57493668fe58cacf785eda42f6ca83298c5e7" translate="yes" xml:space="preserve">
          <source>Creates a new compression object.</source>
          <target state="translated">새로운 압축 객체를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5d1118553623fb7729c552dfc670d49ec70f74e5" translate="yes" xml:space="preserve">
          <source>Creates a new empty queue.</source>
          <target state="translated">빈 대기열을 새로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="453a7438c9a0abf2f411dfc88ef08eeb919af43f" translate="yes" xml:space="preserve">
          <source>Creates a new factory class.</source>
          <target state="translated">새로운 팩토리 클래스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1df3f928ae77e486f8fc4331645875637263feb9" translate="yes" xml:space="preserve">
          <source>Creates a new factory class:</source>
          <target state="translated">새로운 팩토리 클래스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f4b3ad0f4845756e7eb366403f2b64a035efb137" translate="yes" xml:space="preserve">
          <source>Creates a new filename linked to the old filename. Returns true for success, false otherwise.</source>
          <target state="translated">이전 파일 이름에 연결된 새 파일 이름을 만듭니다. 성공하면 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="83f895542990ab6651e9706888c2de08e523dee6" translate="yes" xml:space="preserve">
          <source>Creates a new filename symbolically linked to the old filename. Returns &lt;code&gt;1&lt;/code&gt; for success, &lt;code&gt;0&lt;/code&gt; otherwise. On systems that don't support symbolic links, raises an exception. To check for that, use eval:</source>
          <target state="translated">이전 파일 이름에 심볼릭으로 연결된 새 파일 이름을 만듭니다. 반환 &lt;code&gt;1&lt;/code&gt; 성공, &lt;code&gt;0&lt;/code&gt; , 그렇지 않으면. 심볼릭 링크를 지원하지 않는 시스템에서는 예외가 발생합니다. 이를 확인하려면 eval을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c51b3b07b0600d4054dee0c964ac75e53c578450" translate="yes" xml:space="preserve">
          <source>Creates a new message queue associated with &lt;code&gt;KEY&lt;/code&gt; . A new queue is created if</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 와 연관된 새 메시지 큐를 작성 합니다. 다음과 같은 경우 새 대기열이 생성됩니다</target>
        </trans-unit>
        <trans-unit id="3dc7612c7cd290e9df1220e34987f01ca56d1c6b" translate="yes" xml:space="preserve">
          <source>Creates a new message queue associated with &lt;code&gt;KEY&lt;/code&gt;. A new queue is created if</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 와 관련된 새 메시지 큐를 만듭니다 . 다음과 같은 경우 새 대기열이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="461713b7ac316f2ff6250d361a767c15368c6dcc" translate="yes" xml:space="preserve">
          <source>Creates a new null SV which is mortal. The reference count of the SV is set to 1. It will be destroyed &quot;soon&quot;, either by an explicit call to &lt;code&gt;FREETMPS&lt;/code&gt;, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">치명적인 새로운 null SV를 생성합니다. SV의 참조 횟수는 1로 설정됩니다. &lt;code&gt;FREETMPS&lt;/code&gt; 에 대한 명시 적 호출 또는 명령문 경계와 같은 위치에서의 암시 적 호출에 의해 &quot;곧&quot;소멸됩니다 . &lt;code&gt;&lt;a href=&quot;#sv_mortalcopy&quot;&gt;&quot;sv_mortalcopy&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#sv_2mortal&quot;&gt;&quot;sv_2mortal&quot;&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b254f69cf661a8637fb6b526c326443550777a61" translate="yes" xml:space="preserve">
          <source>Creates a new null SV which is mortal. The reference count of the SV is set to 1. It will be destroyed &quot;soon&quot;, either by an explicit call to FREETMPS, or by an implicit call at places such as statement boundaries. See also &lt;code&gt;sv_mortalcopy&lt;/code&gt; and &lt;code&gt;sv_2mortal&lt;/code&gt; .</source>
          <target state="translated">필멸의 새로운 null SV를 작성합니다. SV의 참조 횟수는 1로 설정됩니다. FREETMPS를 명시 적으로 호출하거나 명령문 경계와 같은 위치에서 암시 적 호출을 수행하면 &quot;곧&quot;소멸됩니다. &lt;code&gt;sv_mortalcopy&lt;/code&gt; 및 &lt;code&gt;sv_2mortal&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c5d61aab7b4b2bae3ae0cd3fa405a1453e48d56" translate="yes" xml:space="preserve">
          <source>Creates a new pad name list. &lt;code&gt;max&lt;/code&gt; is the highest index for which space is allocated.</source>
          <target state="translated">새로운 패드 이름 목록을 만듭니다. &lt;code&gt;max&lt;/code&gt; 는 공간이 할당 된 가장 높은 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="a518faeb54384b75b7b16380f67e97a55f19fb8d" translate="yes" xml:space="preserve">
          <source>Creates a new queue pre-populated with the provided list of items.</source>
          <target state="translated">제공된 항목 목록으로 미리 채워진 새 대기열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="97776043490921bb3f4e1a2aa4a3d94c8dd73946" translate="yes" xml:space="preserve">
          <source>Creates a new shared memory segment of &lt;code&gt;SIZE&lt;/code&gt; bytes size associated with &lt;code&gt;KEY&lt;/code&gt; . A new segment is created if</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 와 연관된 &lt;code&gt;SIZE&lt;/code&gt; 바이트 크기 의 새 공유 메모리 세그먼트를 작성 합니다. 새로운 세그먼트가 생성되면</target>
        </trans-unit>
        <trans-unit id="6a63ff372cab278153f32ae81b705206fe6507c1" translate="yes" xml:space="preserve">
          <source>Creates a new shared memory segment of &lt;code&gt;SIZE&lt;/code&gt; bytes size associated with &lt;code&gt;KEY&lt;/code&gt;. A new segment is created if</source>
          <target state="translated">&lt;code&gt;KEY&lt;/code&gt; 와 연관된 &lt;code&gt;SIZE&lt;/code&gt; 바이트 크기 의 새 공유 메모리 세그먼트를 작성 합니다. 다음과 같은 경우 새 세그먼트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ad8744084b0140499061b16f2e692d8d12d06891" translate="yes" xml:space="preserve">
          <source>Creates a new warnings category with the same name as the package where the call to the pragma is used.</source>
          <target state="translated">pragma에 대한 호출이 사용되는 패키지와 동일한 이름으로 새 경고 범주를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5a27d8b72cf141aebe58f87546d0d0c019b88e6f" translate="yes" xml:space="preserve">
          <source>Creates a single fieldhash. The argument must be a hash. Returns a reference to the given hash if successful, otherwise nothing.</source>
          <target state="translated">단일 fieldhash를 만듭니다. 인수는 해시 여야합니다. 성공하면 주어진 해시에 대한 참조를 반환하고, 그렇지 않으면 아무것도 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c4ee53a5914c71f28b61ea541caa04a7a24059a" translate="yes" xml:space="preserve">
          <source>Creates a symbol name &lt;code&gt;$maxlen&lt;/code&gt; or fewer characters long from &lt;code&gt;$name&lt;/code&gt; and returns it. If &lt;code&gt;$name&lt;/code&gt; is too long, it first tries to shorten it by removing duplicate characters, then by periodically removing non-underscore characters, and finally, if necessary, by periodically removing characters of any type. &lt;code&gt;$maxlen&lt;/code&gt; defaults to 31. Unless &lt;code&gt;$silent&lt;/code&gt; is true, a warning is output if &lt;code&gt;$name&lt;/code&gt; is altered in any way. This function may be called either as a static method or via an existing object, but in the latter case no check is made to insure that the resulting name is unique in the set of symbols. If the compiler has been instructed to do its own symbol shortening via &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt;, a value of 2048 is assumed for &lt;code&gt;$maxlen&lt;/code&gt; as a way of bypassing the shortening done by this module.</source>
          <target state="translated">기호 이름 작성 &lt;code&gt;$maxlen&lt;/code&gt; 에서 이하 자 &lt;code&gt;$name&lt;/code&gt; 반환을. 경우 &lt;code&gt;$name&lt;/code&gt; 너무 깁니다 필요한 경우, 그 첫 번째 시도는 정기적으로 모든 유형의 문자를 제거하여, 마지막으로 주기적으로 제거되지 않은 밑줄 문자로 다음, 중복 문자를 제거하여 단축하고있다. &lt;code&gt;$maxlen&lt;/code&gt; 기본값은 31입니다. &lt;code&gt;$silent&lt;/code&gt; 가 true가 아니면 &lt;code&gt;$name&lt;/code&gt; 이 어떤 식 으로든 변경 되면 경고가 출력됩니다 . 이 함수는 정적 메서드 또는 기존 개체를 통해 호출 될 수 있지만 후자의 경우 결과 이름이 기호 집합에서 고유한지 확인하지 않습니다. 컴파일러가 다음을 통해 자체 기호 단축을 수행하도록 지시받은 경우 &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt; , 이 모듈에 의해 수행 된 단축을 우회하는 방법으로 &lt;code&gt;$maxlen&lt;/code&gt; 대해 2048의 값이 가정됩니다 .</target>
        </trans-unit>
        <trans-unit id="add57b347498049d55798b52551aa4252f3a0d96" translate="yes" xml:space="preserve">
          <source>Creates a symbol name from &lt;code&gt;$name&lt;/code&gt;, using the methods described under trimsym(), which is unique in this set of symbols, and returns the new name. &lt;code&gt;$name&lt;/code&gt; and its resultant are added to the set, and any future calls to addsym() specifying the same &lt;code&gt;$name&lt;/code&gt; will return the same result, regardless of the value of &lt;code&gt;$maxlen&lt;/code&gt; specified. Unless &lt;code&gt;$silent&lt;/code&gt; is true, warnings are output if &lt;code&gt;$name&lt;/code&gt; had to be trimmed or changed in order to avoid collision with an existing symbol name. &lt;code&gt;$maxlen&lt;/code&gt; and &lt;code&gt;$silent&lt;/code&gt; default to the values specified when this set of symbols was created. This method must be called via an existing object.</source>
          <target state="translated">이 기호 세트에서 고유 한 trimsym ()에 설명 된 메서드를 사용하여 &lt;code&gt;$name&lt;/code&gt; name에서 기호 이름을 만들고 새 이름을 반환합니다. &lt;code&gt;$name&lt;/code&gt; 및 그 결과가 세트에 추가되고 동일한 &lt;code&gt;$name&lt;/code&gt; 지정하는 addym ()에 대한 향후 호출 은 지정된 &lt;code&gt;$maxlen&lt;/code&gt; 값에 관계없이 동일한 결과를 리턴 합니다. 하지 않는 한 &lt;code&gt;$silent&lt;/code&gt; true 인 경우, 경고가 출력됩니다 &lt;code&gt;$name&lt;/code&gt; 기존 심볼 이름으로 손질하거나 피하기 충돌하기 위해 변경해야했다. &lt;code&gt;$maxlen&lt;/code&gt; 및 &lt;code&gt;$silent&lt;/code&gt; 는이 기호 세트가 작성 될 때 지정된 값으로 기본 설정됩니다. 이 메서드는 기존 개체를 통해 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="6753f8b68917c94c7ceeba08d8a64a68bec41531" translate="yes" xml:space="preserve">
          <source>Creates a tar file from the list of files provided. The first argument can either be the name of the tar file to create or a reference to an open file handle (e.g. a GLOB reference).</source>
          <target state="translated">제공된 파일 목록에서 tar 파일을 작성합니다. 첫 번째 인수는 작성할 tar 파일의 이름이거나 열린 파일 핸들에 대한 참조 (예 : GLOB 참조) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61b60c1bf0778c8239c58747b6aa38ba62bcc31e" translate="yes" xml:space="preserve">
          <source>Creates a trampoline for calling a core sub. Essentially, a tiny sub that figures out how we should be calling our core sub, puts in the arguments in the right way, and bounces our control over to it.</source>
          <target state="translated">코어 서브를 호출하기위한 트램폴린을 생성합니다. 본질적으로, 우리가 핵심 서브를 어떻게 호출해야하는지 파악하고, 올바른 방식으로 인수를 입력하고, 제어권을 되 돌리는 작은 서브입니다.</target>
        </trans-unit>
        <trans-unit id="0c586f81366892d7608cff1caa98747fac265568" translate="yes" xml:space="preserve">
          <source>Creates a warnings category with the same name as the current package.</source>
          <target state="translated">현재 패키지와 이름이 같은 경고 범주를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="70531cb628a95443a0bc996522c80ed3a1612eec" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt; . If it receives any parameters, they are passed to the method &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;IO::File&lt;/code&gt; 만듭니다 . 매개 변수를 수신하면 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 메소드로 전달됩니다 . 열리지 않으면 객체가 파괴됩니다. 그렇지 않으면 발신자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b8f206ecd7edeba7b8082544ed88fc391c7aee72" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt; opened for read/write on a newly created temporary file. On systems where this is possible, the temporary file is anonymous (i.e. it is unlinked after creation, but held open). If the temporary file cannot be created or opened, the &lt;code&gt;IO::File&lt;/code&gt; object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">새로 만든 임시 파일에서 읽기 / 쓰기를 위해 열린 &lt;code&gt;IO::File&lt;/code&gt; 만듭니다 . 이것이 가능한 시스템에서 임시 파일은 익명입니다 (즉, 생성 후 링크 해제되었지만 열린 상태로 유지됨). 임시 파일을 만들거나 열 수 없으면 &lt;code&gt;IO::File&lt;/code&gt; 개체가 손상됩니다. 그렇지 않으면 발신자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6affa57b67dc647897fe0a77e7fce2d6781f0cab" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::File&lt;/code&gt;. If it receives any parameters, they are passed to the method &lt;code&gt;open&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;IO::File&lt;/code&gt; 생성합니다 . 매개 변수를 받으면 &lt;code&gt;open&lt;/code&gt; 메소드로 전달됩니다 . 열기에 실패하면 개체가 파괴됩니다. 그렇지 않으면 호출자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c5557a6d1ee1551613908cbc27f931101ce8ae4e" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Handle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to the method &lt;code&gt;fdopen&lt;/code&gt; ; if the fdopen fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 것처럼 &lt;code&gt;IO::Handle&lt;/code&gt; 만듭니다 . &lt;code&gt;fdopen&lt;/code&gt; 메소드에 전달되는 두 개의 매개 변수가 필요합니다 . fdopen이 실패하면 객체가 파괴됩니다. 그렇지 않으면 발신자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5a2f27bbf06d86f3e10e12ddddc9b60c3e7fba7d" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Handle&lt;/code&gt; like &lt;code&gt;new&lt;/code&gt; does. It requires two parameters, which are passed to the method &lt;code&gt;fdopen&lt;/code&gt;; if the fdopen fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 처럼 &lt;code&gt;IO::Handle&lt;/code&gt; 생성합니다 . &lt;code&gt;fdopen&lt;/code&gt; 메소드에 전달되는 두 개의 매개 변수가 필요합니다 . fdopen이 실패하면 객체가 파괴됩니다. 그렇지 않으면 호출자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fc7d510d5075facd036fd1af77938045b2ecd2fd" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Pipe&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;IO::Pipe::new&lt;/code&gt; optionally takes two arguments, which should be objects blessed into &lt;code&gt;IO::Handle&lt;/code&gt; , or a subclass thereof. These two objects will be used for the system call to &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;. If no arguments are given then method &lt;code&gt;handles&lt;/code&gt; is called on the new &lt;code&gt;IO::Pipe&lt;/code&gt; object.</source>
          <target state="translated">새로 만든 심볼에 대한 참조 인 &lt;code&gt;IO::Pipe&lt;/code&gt; 만듭니다 ( &lt;code&gt;Symbol&lt;/code&gt; 패키지 참조 ). &lt;code&gt;IO::Pipe::new&lt;/code&gt; 선택적으로 두 개의 인수를 취하는데, 이는 &lt;code&gt;IO::Handle&lt;/code&gt; 또는 그 서브 클래스에 축복 된 객체 여야합니다 . 이 두 객체는 ​​시스템 호출 &lt;code&gt;&lt;a href=&quot;../functions/pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; 됩니다. 인수가 제공되지 않으면 새 &lt;code&gt;IO::Pipe&lt;/code&gt; 오브젝트 에서 메소드 &lt;code&gt;handles&lt;/code&gt; 이 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="e2cf2eb3c37893576e75e50e1b21cb53d91cdaff" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Pipe&lt;/code&gt;, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;IO::Pipe::new&lt;/code&gt; optionally takes two arguments, which should be objects blessed into &lt;code&gt;IO::Handle&lt;/code&gt;, or a subclass thereof. These two objects will be used for the system call to &lt;code&gt;pipe&lt;/code&gt;. If no arguments are given then method &lt;code&gt;handles&lt;/code&gt; is called on the new &lt;code&gt;IO::Pipe&lt;/code&gt; object.</source>
          <target state="translated">새로 생성 된 심볼에 대한 참조 인 &lt;code&gt;IO::Pipe&lt;/code&gt; 생성합니다 ( &lt;code&gt;Symbol&lt;/code&gt; 패키지 참조 ). &lt;code&gt;IO::Pipe::new&lt;/code&gt; 는 &lt;code&gt;IO::Handle&lt;/code&gt; 또는 그 하위 클래스에 축복 된 객체 여야하는 두 개의 인수를 선택적으로 취합니다 . 이 두 개체는 &lt;code&gt;pipe&lt;/code&gt; 에 대한 시스템 호출에 사용됩니다 . 인수가 제공되지 않으면 새 &lt;code&gt;IO::Pipe&lt;/code&gt; 객체 에서 메서드 &lt;code&gt;handles&lt;/code&gt; 이 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="047841e1943658ae57257fef4f133cd272fd4811" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket::INET&lt;/code&gt; object, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs.</source>
          <target state="translated">새로 만든 심볼에 대한 참조 인 &lt;code&gt;IO::Socket::INET&lt;/code&gt; 객체를 만듭니다 ( &lt;code&gt;Symbol&lt;/code&gt; 패키지 참조 ). &lt;code&gt;new&lt;/code&gt; 는 선택적으로 인수를 취하는데,이 인수는 키-값 쌍입니다.</target>
        </trans-unit>
        <trans-unit id="fab2be9faf86fae0e4bd5b1cd1283009b201bf09" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; object, which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs.</source>
          <target state="translated">새로 만든 심볼에 대한 참조 인 &lt;code&gt;IO::Socket::UNIX&lt;/code&gt; 객체를 만듭니다 ( &lt;code&gt;Symbol&lt;/code&gt; 패키지 참조 ). &lt;code&gt;new&lt;/code&gt; 는 선택적으로 인수를 취하는데,이 인수는 키-값 쌍입니다.</target>
        </trans-unit>
        <trans-unit id="a250b42b4dd05b62200f3a07cb3c80166c30a874" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket&lt;/code&gt; , which is a reference to a newly created symbol (see the &lt;code&gt;Symbol&lt;/code&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are in key-value pairs. &lt;code&gt;new&lt;/code&gt; only looks for one key &lt;code&gt;Domain&lt;/code&gt; which tells new which domain the socket will be in. All other arguments will be passed to the configuration method of the package for that domain, See below.</source>
          <target state="translated">새로 만든 심볼에 대한 참조 인 &lt;code&gt;IO::Socket&lt;/code&gt; 만듭니다 ( &lt;code&gt;Symbol&lt;/code&gt; 패키지 참조 ). &lt;code&gt;new&lt;/code&gt; 는 선택적으로 인수를 취하는데,이 인수는 키-값 쌍입니다. &lt;code&gt;new&lt;/code&gt; 는 소켓이 들어있는 도메인을 new에게 알려주는 하나의 키 &lt;code&gt;Domain&lt;/code&gt; 만 찾습니다 . 다른 모든 인수는 해당 도메인에 대한 패키지의 구성 방법으로 전달됩니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="bf9fe742fe41e423afb94e78fc451a07bcc0a51a" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Socket&lt;/code&gt;, which is a reference to a newly created symbol (see the &lt;a href=&quot;symbol&quot;&gt;Symbol&lt;/a&gt; package). &lt;code&gt;new&lt;/code&gt; optionally takes arguments, these arguments are defined in &lt;a href=&quot;IO::Socket#CONSTRUCTOR-ARGUMENTS&quot;&gt;&quot;CONSTRUCTOR ARGUMENTS&quot; in IO::Socket&lt;/a&gt;.</source>
          <target state="translated">새로 생성 된 심볼에 대한 참조 인 &lt;code&gt;IO::Socket&lt;/code&gt; 생성합니다 ( &lt;a href=&quot;symbol&quot;&gt;심볼&lt;/a&gt; 패키지 참조 ). &lt;code&gt;new&lt;/code&gt; 는 선택적으로 인수를 취합니다. 이러한 인수는 &lt;a href=&quot;IO::Socket#CONSTRUCTOR-ARGUMENTS&quot;&gt;IO :: Socket의 &quot;CONSTRUCTOR ARGUMENTS&quot;에&lt;/a&gt; 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1fb9d0f6d66fb3d087378bdbe9232327d60e9d1" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Zlib&lt;/code&gt; object. If it receives any parameters, they are passed to the method &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;IO::Zlib&lt;/code&gt; 객체를 만듭니다 . 매개 변수를 수신하면 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 메소드로 전달됩니다 . 열리지 않으면 객체가 파괴됩니다. 그렇지 않으면 발신자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="378c7b01fe63573b0e705ba044a1718f2680df69" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;IO::Zlib&lt;/code&gt; object. If it receives any parameters, they are passed to the method &lt;code&gt;open&lt;/code&gt;; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</source>
          <target state="translated">&lt;code&gt;IO::Zlib&lt;/code&gt; 객체를 생성 합니다. 매개 변수를 받으면 &lt;code&gt;open&lt;/code&gt; 메소드로 전달됩니다 . 열기에 실패하면 개체가 파괴됩니다. 그렇지 않으면 호출자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="119c0a1aef44d3b6314c9a2aeed4485068748984" translate="yes" xml:space="preserve">
          <source>Creates an RV wrapper for an SV. The reference count for the original SV is &lt;b&gt;not&lt;/b&gt; incremented.</source>
          <target state="translated">SV에 대한 RV 래퍼를 만듭니다. 원래 SV의 참조 카운트는 증가 &lt;b&gt;하지 않습니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="9a2099bcbcca20ca005321683291f2d84f8f9fa9" translate="yes" xml:space="preserve">
          <source>Creates an RV wrapper for an SV. The reference count for the original SV is incremented.</source>
          <target state="translated">SV에 대한 RV 래퍼를 만듭니다. 원래 SV의 참조 카운트가 증가합니다.</target>
        </trans-unit>
        <trans-unit id="58eb0375eeededfea97443711d14c529a5eae786" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;code&gt;ExtUtils::XSSymset&lt;/code&gt; set of symbols. This function may be called as a static method or via an existing object. If &lt;code&gt;$maxlen&lt;/code&gt; or &lt;code&gt;$silent&lt;/code&gt; are specified, they are used as the defaults for maximum name length and warning behavior in future calls to addsym() or trimsym() via this object. If the compiler has been instructed to do its own symbol shortening via &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt;, a value of 2048 is assumed for &lt;code&gt;$maxlen&lt;/code&gt; as a way of bypassing the shortening done by this module.</source>
          <target state="translated">빈 &lt;code&gt;ExtUtils::XSSymset&lt;/code&gt; 기호 집합을 만듭니다 . 이 함수는 정적 메서드 또는 기존 개체를 통해 호출 될 수 있습니다. 경우 &lt;code&gt;$maxlen&lt;/code&gt; 하거나 &lt;code&gt;$silent&lt;/code&gt; 지정되어, 그들은이 객체를 통해 addsym () 또는 trimsym ()에 미래의 통화에서 최대 이름 길이 및 경고 동작에 대한 기본값으로 사용됩니다. 컴파일러가 &lt;code&gt;$Config{'useshortenedsymbols'}&lt;/code&gt; 를 통해 자체 기호 단축을 수행하도록 지시받은 경우, 이 모듈에서 수행 한 단축을 우회하는 방법으로 &lt;code&gt;$maxlen&lt;/code&gt; 대해 2048 값이 가정됩니다 .</target>
        </trans-unit>
        <trans-unit id="583c7b0e3437e1faffd9da7f44fbc7a044be2a1d" translate="yes" xml:space="preserve">
          <source>Creates an unnamed pair of sockets in the specified domain, of the specified type. DOMAIN, TYPE, and PROTOCOL are specified the same as for the syscall of the same name. If unimplemented, raises an exception. Returns true if successful.</source>
          <target state="translated">지정된 도메인에서 지정된 유형의 이름없는 소켓 쌍을 만듭니다. DOMAIN, TYPE 및 PROTOCOL은 동일한 이름의 syscall과 동일하게 지정됩니다. 구현되지 않은 경우 예외가 발생합니다. 성공하면 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b4c7b237951a2abf470c6b1aaac5c511dc06f94c" translate="yes" xml:space="preserve">
          <source>Creates and initialises a new lexer/parser state object, supplying a context in which to lex and parse from a new source of Perl code. A pointer to the new state object is placed in &lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt;. An entry is made on the save stack so that upon unwinding, the new state object will be destroyed and the former value of &lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; will be restored. Nothing else need be done to clean up the parsing context.</source>
          <target state="translated">새로운 렉서 / 파서 상태 객체를 만들고 초기화하여 새로운 Perl 코드 소스에서 lex 및 구문 분석 할 컨텍스트를 제공합니다. 새 상태 개체에 대한 포인터는 &lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;에&lt;/a&gt; 배치됩니다 . 저장 스택에 항목이 만들어 지므로 해제시 새 상태 개체가 삭제되고 &lt;a href=&quot;#PL_parser&quot;&gt;&quot;PL_parser&quot;&lt;/a&gt; 의 이전 값 이 복원됩니다. 구문 분석 컨텍스트를 정리하기 위해 다른 작업을 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3305aabab05db99f8bfc2b84c2d73fe46ce45fee" translate="yes" xml:space="preserve">
          <source>Creates and initialises a new lexer/parser state object, supplying a context in which to lex and parse from a new source of Perl code. A pointer to the new state object is placed in &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt;. An entry is made on the save stack so that upon unwinding the new state object will be destroyed and the former value of &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; will be restored. Nothing else need be done to clean up the parsing context.</source>
          <target state="translated">새로운 렉서 / 파서 상태 객체를 생성하고 초기화하여 새로운 Perl 코드 소스를 분석하고 분석 할 수있는 컨텍스트를 제공합니다. 새로운 상태 객체에 대한 포인터는 &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser에&lt;/a&gt; 위치 합니다. 풀기시 새 상태 오브젝트가 삭제되고 &lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; 의 이전 값 이 복원 되도록 저장 스택에 항목이 작성됩니다 . 구문 분석 컨텍스트를 정리하기 위해 수행 할 다른 작업은 없습니다.</target>
        </trans-unit>
        <trans-unit id="df803de628287b19575ca3676b85b1777c806fdc" translate="yes" xml:space="preserve">
          <source>Creates and returns a clone of a full typemaps object.</source>
          <target state="translated">전체 typemaps 객체의 복제본을 만들고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0f3dfed1a964ab0db38fbf8138ec0f7abbedf2e8" translate="yes" xml:space="preserve">
          <source>Creates any number of field hashes. Arguments must be hash references. Returns the converted hashrefs in list context, their number in scalar context.</source>
          <target state="translated">여러 필드 해시를 만듭니다. 인수는 해시 참조 여야합니다. 변환 된 해시 참조를 목록 컨텍스트에서 스칼라 컨텍스트의 수로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c592704db2b29209bd7ddf205e6af585a4f99b67" translate="yes" xml:space="preserve">
          <source>Creates directories, including any parent directories.</source>
          <target state="translated">상위 디렉토리를 포함하여 디렉토리를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ad1d92000326b7959a82dfb9dc22227bf6a2e0c5" translate="yes" xml:space="preserve">
          <source>Creates header and footer blocks containing the text of the &lt;code&gt;NAME&lt;/code&gt; section. By default, no headers are generated.</source>
          <target state="translated">&lt;code&gt;NAME&lt;/code&gt; 섹션 의 텍스트를 포함하는 머리글 및 바닥 글 블록을 만듭니다 . 기본적으로 헤더는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="530e5ca354f68101b7370c2ecfbbf80ed760e37a" translate="yes" xml:space="preserve">
          <source>Creates many idhashes from its hashref arguments. Returns those arguments that could be converted or their number in scalar context.</source>
          <target state="translated">hashref 인수에서 많은 idhash를 작성합니다. 스칼라 컨텍스트에서 변환 될 수있는 인수 또는 해당 숫자를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="55ac5a2557b2039781c4e9099b909d61767bb34c" translate="yes" xml:space="preserve">
          <source>Creates the DIRECTORY and returns a true value on success. Check $^E on failure for extended error information.</source>
          <target state="translated">DIRECTORY를 생성하고 성공시 true 값을 반환합니다. 확장 된 오류 정보는 실패시 $ ^ E를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="66e7e1edb8d0a1f02ca58ab6d6a5ba76dcdca99d" translate="yes" xml:space="preserve">
          <source>Creates the FILE and returns a true value on success. Check $^E on failure for extended error information.</source>
          <target state="translated">FILE을 만들고 성공하면 참 값을 반환합니다. 확장 된 오류 정보는 실패시 $ ^ E를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="83ad3819309f6108b72bbb402ce3a8c80083d9b4" translate="yes" xml:space="preserve">
          <source>Creates the blibdirs target which creates all the directories we use in blib/.</source>
          <target state="translated">blib /에서 사용하는 모든 디렉토리를 작성하는 blibdirs 대상을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="621a860874ef631fda40d3dbd09752ecf44fe523" translate="yes" xml:space="preserve">
          <source>Creates the directory cache in the given directory.</source>
          <target state="translated">지정된 디렉토리에 디렉토리 캐시를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="de22bdbde2d4398a6a9a9d6284383fd915d03734" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MASK (as modified by &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). MASK defaults to 0777 if omitted, and FILENAME defaults to &lt;code&gt;$_&lt;/code&gt; if omitted.</source>
          <target state="translated">MASK에 의해 지정된 권한 ( &lt;code&gt;&lt;a href=&quot;functions/umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; 에 의해 수정 된 ) 으로 FILENAME에 의해 지정된 디렉토리를 작성합니다 . 성공하면 true를 반환합니다. 그렇지 않으면 false를 반환하고 &lt;code&gt;$!&lt;/code&gt; 설정합니다 ! (errno). 생략하면 MASK의 기본값은 0777이고, 생략하면 FILENAME의 기본값은 &lt;code&gt;$_&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bb7b117514892c7c30b3fe9f7719849bbac44c0c" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MASK (as modified by &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;code&gt;$!&lt;/code&gt; (errno). MASK defaults to 0777 if omitted, and FILENAME defaults to &lt;code&gt;$_&lt;/code&gt; if omitted.</source>
          <target state="translated">MASK에 의해 지정된 권한 ( &lt;code&gt;&lt;a href=&quot;umask&quot;&gt;umask&lt;/a&gt;&lt;/code&gt; 에 의해 수정 된 ) 으로 FILENAME에 의해 지정된 디렉토리를 작성합니다 . 성공하면 true를 반환합니다. 그렇지 않으면 false를 반환하고 &lt;code&gt;$!&lt;/code&gt; 설정합니다 ! (errno). 생략하면 MASK의 기본값은 0777이고, 생략하면 FILENAME의 기본값은 &lt;code&gt;$_&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f6746cdcfdb89d4e68c0e4318f28686ffd93175" translate="yes" xml:space="preserve">
          <source>Creates the directory specified by FILENAME, with permissions specified by MODE (as modified by &lt;a href=&quot;#umask-EXPR&quot;&gt;&lt;code&gt;umask&lt;/code&gt;&lt;/a&gt;). If it succeeds it returns true; otherwise it returns false and sets &lt;a href=&quot;perlvar#%24%21&quot;&gt;&lt;code&gt;$!&lt;/code&gt;&lt;/a&gt; (errno). MODE defaults to 0777 if omitted, and FILENAME defaults to &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if omitted.</source>
          <target state="translated">MODE에 지정된 권한 ( &lt;a href=&quot;#umask-EXPR&quot;&gt; &lt;code&gt;umask&lt;/code&gt; 에&lt;/a&gt; 의해 수정 됨 ) 으로 FILENAME에 지정된 디렉토리를 생성합니다 . 성공하면 true를 반환합니다. 그렇지 않으면 false를 반환하고 &lt;a href=&quot;perlvar#%24%21&quot;&gt; &lt;code&gt;$!&lt;/code&gt; &lt;/a&gt;(errno). 생략 된 경우 MODE 기본값은 0777이고 생략 된 경우 FILENAME의 기본값은 &lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3cac7695a4d3664891070ffa2341b3035d0f19e8" translate="yes" xml:space="preserve">
          <source>Creating Custom RE Engines</source>
          <target state="translated">커스텀 RE 엔진 생성</target>
        </trans-unit>
        <trans-unit id="76d93a113b300b303dad480ac2a300eb6051aa71" translate="yes" xml:space="preserve">
          <source>Creating New Variables</source>
          <target state="translated">새로운 변수 만들기</target>
        </trans-unit>
        <trans-unit id="ca3daf69e2f937f89c7b4c76bccdabe68e3b34bf" translate="yes" xml:space="preserve">
          <source>Creating Threads</source>
          <target state="translated">스레드 만들기</target>
        </trans-unit>
        <trans-unit id="00c8935ea8223dcafffacb17ecb8c41069921e4c" translate="yes" xml:space="preserve">
          <source>Creating Unicode</source>
          <target state="translated">유니 코드 만들기</target>
        </trans-unit>
        <trans-unit id="fda34c4790cee1bd1ddb3e56f87276cd00a9e2e4" translate="yes" xml:space="preserve">
          <source>Creating a topic branch makes it easier for the maintainers to rebase or merge back into the master blead for a more linear history. If you don't work on a topic branch the maintainer has to manually cherry pick your changes onto blead before they can be applied.</source>
          <target state="translated">토픽 브랜치를 생성하면 메인테이너가보다 선형적인 히스토리를 위해 마스터 블리드로 리베이스하거나 다시 병합하는 것이 더 쉬워집니다. 토픽 브랜치에서 작업하지 않는 경우 관리자는 변경 사항을 적용하기 전에 blead에 수동으로 체리를 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a6874111f18f654b4c464c7232a28e3e371a0c4" translate="yes" xml:space="preserve">
          <source>Creating and Calling an Anonymous Subroutine in C</source>
          <target state="translated">C에서 익명 서브 루틴 작성 및 호출</target>
        </trans-unit>
        <trans-unit id="0fbcc36881be48da3eea5e9eb45091865bb12fa4" translate="yes" xml:space="preserve">
          <source>Creating numbers</source>
          <target state="translated">숫자 만들기</target>
        </trans-unit>
        <trans-unit id="57dbae3986bf4e92740a80829b68126452d91265" translate="yes" xml:space="preserve">
          <source>Creating threads inside &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; or &lt;code&gt;INIT&lt;/code&gt; blocks should not be relied upon. Depending on the Perl version and the application code, results may range from success, to (apparently harmless) warnings of leaked scalar, or all the way up to crashing of the Perl interpreter.</source>
          <target state="translated">&lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; 또는 &lt;code&gt;INIT&lt;/code&gt; 블록 내에 스레드를 작성 해서는 안됩니다. Perl 버전과 응용 프로그램 코드에 따라 결과는 성공에서 누출 된 스칼라에 대한 경고 (아마도 무해한) 경고 또는 Perl 인터프리터 충돌까지 다양합니다.</target>
        </trans-unit>
        <trans-unit id="0daa386420cbd29b0115f08c5fd8d3d8cc8b2987" translate="yes" xml:space="preserve">
          <source>Creating your own context via &lt;code&gt;Test2::API::Context-&amp;gt;new()&lt;/code&gt; will almost never produce a desirable result. Use &lt;code&gt;context()&lt;/code&gt; which is exported by &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Test2::API::Context-&amp;gt;new()&lt;/code&gt; 를 통해 자신의 컨텍스트를 생성하면 원하는 결과를 거의 얻을 수 없습니다. &lt;a href=&quot;Test2::API&quot;&gt;Test2 :: API에서&lt;/a&gt; 내 보낸 &lt;code&gt;context()&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e13e0554f557ba882751e261b5a60777b337bea6" translate="yes" xml:space="preserve">
          <source>Creation</source>
          <target state="translated">Creation</target>
        </trans-unit>
        <trans-unit id="bfac50d6424b5166c3ee2808c85ae7c139b5182f" translate="yes" xml:space="preserve">
          <source>Credits</source>
          <target state="translated">Credits</target>
        </trans-unit>
        <trans-unit id="d7e0453bb4af87006533f4d77ad9546dac533db8" translate="yes" xml:space="preserve">
          <source>Croatia</source>
          <target state="translated">Croatia</target>
        </trans-unit>
        <trans-unit id="dbfe7362b2b881e1e5fb877d5c3a4872cad26c3a" translate="yes" xml:space="preserve">
          <source>Cross</source>
          <target state="translated">Cross</target>
        </trans-unit>
        <trans-unit id="beaa2e9dbdf1ef3ec15f5de471f07f4851c7dc4d" translate="yes" xml:space="preserve">
          <source>Cross-compilation</source>
          <target state="translated">Cross-compilation</target>
        </trans-unit>
        <trans-unit id="c43833b5347e1426f60796becda4f61af3fd0923" translate="yes" xml:space="preserve">
          <source>Cross-platform helper methods</source>
          <target state="translated">크로스 플랫폼 헬퍼 메소드</target>
        </trans-unit>
        <trans-unit id="4c38cec4e421449e48c795f66d14bddfe8e061c2" translate="yes" xml:space="preserve">
          <source>Cross-platform methods are being moved into &lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;MM_Any&lt;/a&gt;. If you can't find something that used to be in here, look in MM_Any.</source>
          <target state="translated">크로스 플랫폼 메소드가 &lt;a href=&quot;ExtUtils::MM_Any&quot;&gt;MM_Any&lt;/a&gt; 로 이동 중 입니다. 여기에 있던 것을 찾을 수 없다면 MM_Any를보십시오.</target>
        </trans-unit>
        <trans-unit id="011ef13d181b36064597a661d4df564056d4ff83" translate="yes" xml:space="preserve">
          <source>Cross-platform methods are being moved into MM_Any. If you can't find something that used to be in here, look in MM_Any.</source>
          <target state="translated">플랫폼 간 메소드가 MM_Any로 이동 중입니다. 여기에 있던 것을 찾을 수 없다면 MM_Any를보십시오.</target>
        </trans-unit>
        <trans-unit id="57799b23e7a710965dddb84cacd4ec89c1bbb1f6" translate="yes" xml:space="preserve">
          <source>Cross.U</source>
          <target state="translated">Cross.U</target>
        </trans-unit>
        <trans-unit id="ef9075f5545abec4dcc7e79d15c590cae4255eac" translate="yes" xml:space="preserve">
          <source>Cross.pm</source>
          <target state="translated">Cross.pm</target>
        </trans-unit>
        <trans-unit id="74c3c4ec5d65e9bc6995543581db9cbe363527f7" translate="yes" xml:space="preserve">
          <source>Cross/README</source>
          <target state="translated">Cross/README</target>
        </trans-unit>
        <trans-unit id="cef80d77f8c81ee5266d145a95eedb7c0a3f235f" translate="yes" xml:space="preserve">
          <source>Crypt</source>
          <target state="translated">Crypt</target>
        </trans-unit>
        <trans-unit id="ad96a37a856f346a15c53478f77eb332fbfa2f2b" translate="yes" xml:space="preserve">
          <source>Cryptographically signed modules</source>
          <target state="translated">암호화 서명 모듈</target>
        </trans-unit>
        <trans-unit id="0141138dc5196a48315b4577e2fbfbeecad52362" translate="yes" xml:space="preserve">
          <source>Csym.U</source>
          <target state="translated">Csym.U</target>
        </trans-unit>
        <trans-unit id="52962f195b14aa22c7fc6a7f9b3d2ee383096fec" translate="yes" xml:space="preserve">
          <source>Cuddle &lt;code&gt;elsif&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , and &lt;code&gt;&lt;a href=&quot;../functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; blocks. For example, print</source>
          <target state="translated">안아 &lt;code&gt;elsif&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;../functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 블록을. 예를 들어, 인쇄</target>
        </trans-unit>
        <trans-unit id="3de7497a0de5aacaf3b9fecfb3bf39933a680e0e" translate="yes" xml:space="preserve">
          <source>Cuddle &lt;code&gt;elsif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, and &lt;code&gt;continue&lt;/code&gt; blocks. For example, print</source>
          <target state="translated">안아 &lt;code&gt;elsif&lt;/code&gt; , &lt;code&gt;else&lt;/code&gt; , 그리고 &lt;code&gt;continue&lt;/code&gt; 블록을. 예를 들어, 인쇄</target>
        </trans-unit>
        <trans-unit id="0ad7be9ec2b229fe5c72d975108d1ad1b6b06c3a" translate="yes" xml:space="preserve">
          <source>Cull allows you to collect results from other processes or threads on demand.</source>
          <target state="translated">Cull을 사용하면 요청시 다른 프로세스 또는 스레드에서 결과를 수집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e68fd6bc0e698abb0c35b379cb37b4a4220a6e5" translate="yes" xml:space="preserve">
          <source>Cull any IPC events (and process them).</source>
          <target state="translated">모든 IPC 이벤트를 제거하고 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d64219b5f8b4b745bbd46c3a32d3c7d8682cff39" translate="yes" xml:space="preserve">
          <source>Curious/ambitious users are welcome to propose additional features they wish to see in &lt;b&gt;Pod::Checker&lt;/b&gt; and &lt;b&gt;podchecker&lt;/b&gt; and verify that the checks are consistent with &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt;.</source>
          <target state="translated">호기심 / 야심 찬 사용자는 추가 자신들이보고 싶은 기능 제안 환영 &lt;b&gt;포드 :: 검사&lt;/b&gt; 및 &lt;b&gt;podchecker을&lt;/b&gt; 하고, 검사와 일치하는지 확인 &lt;a href=&quot;../perlpod&quot;&gt;perlpod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="617733113f006d19e74b25aa12d794a62a88b4a2" translate="yes" xml:space="preserve">
          <source>Curious/ambitious users are welcome to propose additional features they wish to see in &lt;b&gt;Pod::Checker&lt;/b&gt; and &lt;b&gt;podchecker&lt;/b&gt; and verify that the checks are consistent with &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt;.</source>
          <target state="translated">호기심 / 야심 찬 사용자는 추가 자신들이보고 싶은 기능 제안 환영 &lt;b&gt;포드 :: 검사&lt;/b&gt; 및 &lt;b&gt;podchecker을&lt;/b&gt; 하고, 검사와 일치하는지 확인 &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="006ddc5a877b60998acfe8e8f02afc5e5315300f" translate="yes" xml:space="preserve">
          <source>Curly Brackets</source>
          <target state="translated">중괄호</target>
        </trans-unit>
        <trans-unit id="c48ab463ed0ddf5261f0effba0a08bda055eaeb3" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt; 's and &lt;code&gt;while&lt;/code&gt; 's.</source>
          <target state="translated">곱슬 브래킷에 필요한 &lt;code&gt;if&lt;/code&gt; 의와 &lt;code&gt;while&lt;/code&gt; 의.</target>
        </trans-unit>
        <trans-unit id="25cb75f4de27b7e8de98e7a40cc8ed9bcd201ef1" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt; s and &lt;code&gt;while&lt;/code&gt; s.</source>
          <target state="translated">중괄호에 필요한 &lt;code&gt;if&lt;/code&gt; s와 &lt;code&gt;while&lt;/code&gt; 의.</target>
        </trans-unit>
        <trans-unit id="c8ec64df899b63139abea2f56cacedaf27610e61" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt;'s and &lt;code&gt;while&lt;/code&gt;'s.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 's 및 &lt;code&gt;while&lt;/code&gt; 's 에는 중괄호가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="7c64e4e59ce80e921cd5f4be7b7a6b49b9ba946e" translate="yes" xml:space="preserve">
          <source>Curly brackets are required on &lt;code&gt;if&lt;/code&gt;s and &lt;code&gt;while&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; s 및 &lt;code&gt;while&lt;/code&gt; s 에는 중괄호가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="733abadd7da2e8ee86b2f9fd64815600ddb4c9f3" translate="yes" xml:space="preserve">
          <source>Current API available since 0.05.</source>
          <target state="translated">0.05부터 사용 가능한 현재 API.</target>
        </trans-unit>
        <trans-unit id="132fe4659a2b185389a8b22aaefc04607d41f11e" translate="yes" xml:space="preserve">
          <source>Current API available since 0.14</source>
          <target state="translated">0.14부터 사용 가능한 현재 API</target>
        </trans-unit>
        <trans-unit id="9eca36f31721022b0833e71759529ffb7af59c3b" translate="yes" xml:space="preserve">
          <source>Current API available since 0.14.</source>
          <target state="translated">0.14부터 사용 가능한 현재 API.</target>
        </trans-unit>
        <trans-unit id="fcf6b652bcdfb9f1d02b4a8e77d74fe1a86de2aa" translate="yes" xml:space="preserve">
          <source>Current API available since 0.15</source>
          <target state="translated">0.15부터 사용 가능한 현재 API</target>
        </trans-unit>
        <trans-unit id="66ef4517b634be1aca295644dcb38cb9941d2ac4" translate="yes" xml:space="preserve">
          <source>Current API available since 0.15.</source>
          <target state="translated">0.15부터 사용 가능한 현재 API.</target>
        </trans-unit>
        <trans-unit id="9ba0ffd4b3f7127883810edb9b6f993db6663d0a" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow</source>
          <target state="translated">현재 EMX 환경은 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="993eca74c49b7893afb4ab9ac873257ea5c190b4" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow DLLs compiled using Unixish &lt;code&gt;a.out&lt;/code&gt; format to export symbols for data (or at least some types of data). This forces &lt;code&gt;omf&lt;/code&gt; -style compile of</source>
          <target state="translated">현재 EMX 환경에서는 Unixish &lt;code&gt;a.out&lt;/code&gt; 형식을 사용하여 컴파일 된 DLL 이 데이터 (또는 적어도 일부 유형의 데이터)의 심볼을 내보낼 수 없습니다 . 이것은 &lt;code&gt;omf&lt;/code&gt; 스타일의 컴파일을 강제합니다.</target>
        </trans-unit>
        <trans-unit id="c3381fda04909080924114ca2bb61b70480aaea4" translate="yes" xml:space="preserve">
          <source>Current EMX environment does not allow DLLs compiled using Unixish &lt;code&gt;a.out&lt;/code&gt; format to export symbols for data (or at least some types of data). This forces &lt;code&gt;omf&lt;/code&gt;-style compile of</source>
          <target state="translated">현재 EMX 환경에서는 Unixish &lt;code&gt;a.out&lt;/code&gt; 형식을 사용하여 컴파일 된 DLL 이 데이터 (또는 적어도 일부 유형의 데이터)에 대한 기호를 내보낼 수 없습니다 . 이것은 &lt;code&gt;omf&lt;/code&gt; 스타일의 컴파일을 강제합니다.</target>
        </trans-unit>
        <trans-unit id="68015f6bd2846a758438e4878547c94c08e2b442" translate="yes" xml:space="preserve">
          <source>Current experiments</source>
          <target state="translated">현재 실험</target>
        </trans-unit>
        <trans-unit id="2bb8d55eba9da4a81fde3753ae5baa7eec0d36a4" translate="yes" xml:space="preserve">
          <source>Current line number for the last filehandle accessed.</source>
          <target state="translated">마지막으로 액세스 한 파일 핸들의 현재 줄 번호.</target>
        </trans-unit>
        <trans-unit id="5550dac4e1e7661323b4986a995e2ca80043241b" translate="yes" xml:space="preserve">
          <source>Current maintainer: Jesse Vincent. &amp;lt;jesse@bestpractical.com&amp;gt;</source>
          <target state="translated">현재 관리자 : Jesse Vincent. &amp;lt;jesse@bestpractical.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c2eb4542085ed4c82b742e8aee8a24a813f00ba2" translate="yes" xml:space="preserve">
          <source>Current maintainer: Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">현재 관리자 : Mark Allen &lt;code&gt;&amp;lt;mallen@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c582ebd636905458cf86a650443a01ac6fd3e11" translate="yes" xml:space="preserve">
          <source>Current maintainer: Mark Allen &lt;code&gt;&amp;lt;mallencpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">현재 관리자 : Mark Allen &lt;code&gt;&amp;lt;mallencpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6ca95c5501f8b179689cb1932912593329e0e7f" translate="yes" xml:space="preserve">
          <source>Current maintainers are Richard Elberger &amp;lt;</source>
          <target state="translated">현재 관리자는 Richard Elberger입니다. &amp;lt;</target>
        </trans-unit>
        <trans-unit id="829f444d461d0161d34db2510d06246d92acbe5d" translate="yes" xml:space="preserve">
          <source>Current position.</source>
          <target state="translated">현재 위치.</target>
        </trans-unit>
        <trans-unit id="57b3ecd8cd4c7443afc115b419ddb924ddd90e1b" translate="yes" xml:space="preserve">
          <source>Current state of the interpreter.</source>
          <target state="translated">통역사의 현재 상태.</target>
        </trans-unit>
        <trans-unit id="df893233f128ab6c4697175d320f8d120c1ab9e0" translate="yes" xml:space="preserve">
          <source>Current working directory</source>
          <target state="translated">현재 작업 디렉토리</target>
        </trans-unit>
        <trans-unit id="e302e42f2ad866b21d8a9b42dc19e35d2b0fc490" translate="yes" xml:space="preserve">
          <source>Currently</source>
          <target state="translated">Currently</target>
        </trans-unit>
        <trans-unit id="196ba394fbe2cd700609c257874291b9dd014bf4" translate="yes" xml:space="preserve">
          <source>Currently $dir can only go down one level. &quot;foo&quot; is fine. &quot;foo/bar&quot; is not. &quot;../foo&quot; is right out.</source>
          <target state="translated">현재 $ dir은 한 수준 아래로 내려갈 수 있습니다. &quot;foo&quot;는 괜찮습니다. &quot;foo / bar&quot;는 아닙니다. &quot;../foo&quot;가 바로 나옵니다.</target>
        </trans-unit>
        <trans-unit id="7596cea97372e37b0806dba55a5df461274d6e60" translate="yes" xml:space="preserve">
          <source>Currently (October 2001), that's these three:</source>
          <target state="translated">현재 (2001 년 10 월) 다음 세 가지입니다.</target>
        </trans-unit>
        <trans-unit id="d0628d165c5886578d03829e62f234c1c39d03ea" translate="yes" xml:space="preserve">
          <source>Currently (as of perl version 5.004), use of the hash and array access functions requires the user to be aware of whether they are operating on &quot;normal&quot; hashes and arrays, or on their tied variants. The API may be changed to provide more transparent access to both tied and normal data types in future versions. [/MAYCHANGE]</source>
          <target state="translated">현재 (perl 버전 5.004 기준) 해시 및 어레이 액세스 기능을 사용하려면 사용자가 &quot;일반&quot;해시 및 어레이에서 작동하는지 또는 연결된 변형에서 작동 하는지를 알아야합니다. 향후 버전에서는 연결 및 일반 데이터 유형 모두에보다 투명하게 액세스 할 수 있도록 API가 변경 될 수 있습니다. [/ MAYCHANGE]</target>
        </trans-unit>
        <trans-unit id="f13df8d5f32419cc90e83b3d1b4f89dcb9fb5bee" translate="yes" xml:space="preserve">
          <source>Currently &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; doesn't actually do anything with this flag - it's probably going to be up to higher-level tools like &lt;a href=&quot;cpan&quot;&gt;CPAN.pm&lt;/a&gt; to do something useful with it. It can potentially bring lots of security, packaging, and convenience improvements.</source>
          <target state="translated">현재 &lt;a href=&quot;Module::Build&quot;&gt;Module :: Build&lt;/a&gt; 는 실제로이 플래그로 아무것도 수행하지 않습니다. 아마도 &lt;a href=&quot;cpan&quot;&gt;CPAN.pm&lt;/a&gt; 과 같은 고급 도구 가 유용한 작업을 수행 할 것입니다. 잠재적으로 많은 보안, 패키징 및 편의 개선을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2eb1a3bc586c516867d29f387fd017886e0b406" translate="yes" xml:space="preserve">
          <source>Currently I don't know of any portable pure perl way to do this. Suggestions welcome.</source>
          <target state="translated">현재이 작업을 수행하는 휴대용 순수한 펄 방법을 모르겠습니다. 제안을 환영합니다.</target>
        </trans-unit>
        <trans-unit id="0f42c93f8113a166a58ba8a04b9d7c468b7d0cf9" translate="yes" xml:space="preserve">
          <source>Currently Module::Build doesn't actually do anything with this flag - it's probably going to be up to higher-level tools like CPAN to do something useful with it. It can potentially bring lots of security, packaging, and convenience improvements.</source>
          <target state="translated">현재 Module :: Build는 실제로이 플래그로 아무 작업도 수행하지 않습니다. CPAN과 같은 상위 수준 도구에서 유용한 작업을 수행 할 수 있습니다. 잠재적으로 많은 보안, 패키징 및 편의 개선을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d97947adc89187fe49c51cd883b8269beca4ae8c" translate="yes" xml:space="preserve">
          <source>Currently NAME is restricted to simple identifiers only. In other words, it must match &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; or its Unicode extension (see &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;), though it isn't extended by the locale (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;).</source>
          <target state="translated">현재 NAME은 간단한 식별자로만 제한됩니다. 즉, 로케일로 확장되지는 않지만 &lt;code&gt;/^[_A-Za-z][_A-Za-z0-9]*\z/&lt;/code&gt; 또는 해당 유니 코드 확장명 ( &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt; 참조 ) 과 일치해야합니다 ( &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; 참조 ). ).</target>
        </trans-unit>
        <trans-unit id="34fd8b1bb88ea7e7337eda898bf08809510b09bf" translate="yes" xml:space="preserve">
          <source>Currently accepted extensions are:</source>
          <target state="translated">현재 허용되는 확장은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="834c134ad81c4eaed0abb95e07ecfa3c6f7ccea9" translate="yes" xml:space="preserve">
          <source>Currently all versions of IBM's &quot;xlc&quot;, &quot;xlc_r&quot;, &quot;cc&quot;, &quot;cc_r&quot; or &quot;vac&quot; ANSI/C compiler will work for building Perl if that compiler works on your system.</source>
          <target state="translated">현재 IBM의 &quot;xlc&quot;, &quot;xlc_r&quot;, &quot;cc&quot;, &quot;cc_r&quot;또는 &quot;vac&quot;ANSI / C 컴파일러의 모든 버전은 해당 컴파일러가 시스템에서 작동하는 경우 Perl을 빌드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="074b7a0d7926b13bdd6a6c1a7f2bd6fd96a950ef" translate="yes" xml:space="preserve">
          <source>Currently doesn't do anything at all. This flag has been a no-op for many versions of perl, at least as far back as perl5.003_07. It's allowed here for backwards compatibility.</source>
          <target state="translated">현재는 아무것도하지 않습니다. 이 플래그는 최소한 perl5.003_07로 거슬러 올라가는 많은 버전의 perl에 대해서는 no-op입니다. 이전 버전과의 호환성을 위해 여기에서 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6aff6e1789a080263345630866061a6188dd023" translate="yes" xml:space="preserve">
          <source>Currently experimental, strongly object-oriented, built for speed and intended as a toolkit for building micro web apps, custom frameworks or for tieing together existing Plack-compatible web applications with one central dispatcher.</source>
          <target state="translated">현재 실험적이고 강력하게 객체 지향적이며 속도를 높이기 위해 제작되었으며 마이크로 웹 앱, 사용자 지정 프레임 워크를 구축하거나 기존 Plack 호환 웹 응용 프로그램을 하나의 중앙 디스패처와 연결하기위한 툴킷으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="09e5d195957c36cd6b2d43df6986ebc708f4c278" translate="yes" xml:space="preserve">
          <source>Currently installation instructions are at &lt;a href=&quot;http://perlce.sourceforge.net/&quot;&gt;http://perlce.sourceforge.net/&lt;/a&gt;.</source>
          <target state="translated">현재 설치 지침은 &lt;a href=&quot;http://perlce.sourceforge.net/&quot;&gt;http://perlce.sourceforge.net/에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e0d0b77d9ca938b7c7fd7206793cd1d22b949a5" translate="yes" xml:space="preserve">
          <source>Currently internal buffer lengths are limited to 32-bit only.</source>
          <target state="translated">현재 내부 버퍼 길이는 32 비트로 만 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="2589b2340931b7a94577d8448f79f08344610895" translate="yes" xml:space="preserve">
          <source>Currently it is too complicated to parse your command for IO redirections. For capturing STDOUT or STDERR there is a work around however, since you can just inspect your buffers for the contents.</source>
          <target state="translated">현재 IO 리디렉션에 대한 명령을 구문 분석하는 것은 너무 복잡합니다. STDOUT 또는 STDERR을 캡처하려면 버퍼의 내용을 검사하기 만하면 해결 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff8d2529e1e3a22abb227172a7478ebd10f009e6" translate="yes" xml:space="preserve">
          <source>Currently known values for ID MAJOR and MINOR are as follows:</source>
          <target state="translated">현재 알려진 ID MAJOR 및 MINOR 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d5ce11c20e5c9e26183b7df1f1d378e8843b7728" translate="yes" xml:space="preserve">
          <source>Currently loaded filename.</source>
          <target state="translated">현재로드 된 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7d2f296985c3b0bc160e7e4678670038ad1661e2" translate="yes" xml:space="preserve">
          <source>Currently maintained by &amp;lt;perl5-porters@perl.org&amp;gt;</source>
          <target state="translated">현재 &amp;lt;perl5-porters@perl.org&amp;gt;에서 관리</target>
        </trans-unit>
        <trans-unit id="5e94b5b9580ddc9978e1586fd290c6a0085eaca0" translate="yes" xml:space="preserve">
          <source>Currently maintained by Jonathan &quot;Duke&quot; Leto &amp;lt;jonathan@leto.net&amp;gt; &lt;a href=&quot;http://leto.net&quot;&gt;http://leto.net&lt;/a&gt;</source>
          <target state="translated">현재 Jonathan &quot;Duke&quot;Leto &amp;lt;jonathan@leto.net&amp;gt; &lt;a href=&quot;http://leto.net&quot;&gt;http://leto.net에서 관리&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f84d89a92a777c50292f613277c843d0fca069e" translate="yes" xml:space="preserve">
          <source>Currently maintained by Ken Williams &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; .</source>
          <target state="translated">현재 Ken Williams &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; 에서 관리 합니다.</target>
        </trans-unit>
        <trans-unit id="303806e236443c135c96fe60eb67d5ca0de67368" translate="yes" xml:space="preserve">
          <source>Currently maintained by Ken Williams &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">현재 Ken Williams &lt;code&gt;&amp;lt;KWILLIAMS@cpan.org&amp;gt;&lt;/code&gt; 가 관리하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d499a420a8ad407cfcc7909e99725791aecb83a" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt;</source>
          <target state="translated">현재 Michael G Schwern이 관리합니다. &lt;code&gt;schwern@pobox.com&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64518f708c077132fb6c81bb482b7c41112aa09f" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; .</source>
          <target state="translated">현재 Michael G Schwern이 &lt;code&gt;schwern@pobox.com&lt;/code&gt; 합니다. schwern@pobox.com .</target>
        </trans-unit>
        <trans-unit id="2e7c33fcf31b3845a9002a34cbe57be49064440a" translate="yes" xml:space="preserve">
          <source>Currently maintained by Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt;.</source>
          <target state="translated">현재 Michael G Schwern &lt;code&gt;schwern@pobox.com&lt;/code&gt; 이 관리하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac278ddc5ecea025d9c9b038420a6a20095c0d36" translate="yes" xml:space="preserve">
          <source>Currently maintained by Sullivan Beck (sbeck@cpan.org).</source>
          <target state="translated">현재 Sullivan Beck (sbeck@cpan.org)가 관리합니다.</target>
        </trans-unit>
        <trans-unit id="832ca62474658800234e1409a0265d04df2848bc" translate="yes" xml:space="preserve">
          <source>Currently maintained by the Perl 5 Porters, &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">현재 Perl 5 Porters &amp;lt;perl5-porters@perl.org&amp;gt;에서 관리합니다.</target>
        </trans-unit>
        <trans-unit id="70916c857e67092afc3818c0725979a17bb2bc7e" translate="yes" xml:space="preserve">
          <source>Currently maintained by the Perl Toolchain Gang.</source>
          <target state="translated">현재 Perl Toolchain Gang이 유지 관리하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="22b5ae24b9fd013adf87b86fd8614fe4c5e78cae" translate="yes" xml:space="preserve">
          <source>Currently maintained by the perl 5 porters &amp;lt;perl5-porters@perl.org&amp;gt;.</source>
          <target state="translated">현재 perl 5 포터 &amp;lt;perl5-porters@perl.org&amp;gt;에서 관리합니다.</target>
        </trans-unit>
        <trans-unit id="d2e4606b64b025301662d7cf33e55d4e4c569938" translate="yes" xml:space="preserve">
          <source>Currently only 1 parameter is defined:</source>
          <target state="translated">현재 하나의 매개 변수 만 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="805cd2c1f1ca0def4cfd6434add453f59f15d8ad" translate="yes" xml:space="preserve">
          <source>Currently only &lt;code&gt;INDENT&lt;/code&gt; , &lt;code&gt;NAME&lt;/code&gt; , &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; , &lt;code&gt;NAMES&lt;/code&gt; , &lt;code&gt;C_FILE&lt;/code&gt; and &lt;code&gt;XS_FILE&lt;/code&gt; are recognised.</source>
          <target state="translated">현재 &lt;code&gt;INDENT&lt;/code&gt; , &lt;code&gt;NAME&lt;/code&gt; , &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; , &lt;code&gt;NAMES&lt;/code&gt; , &lt;code&gt;C_FILE&lt;/code&gt; 및 &lt;code&gt;XS_FILE&lt;/code&gt; 만 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="38af29eda1cf784766a83c7759fdcfa53c50c531" translate="yes" xml:space="preserve">
          <source>Currently only &lt;code&gt;INDENT&lt;/code&gt;, &lt;code&gt;NAME&lt;/code&gt;, &lt;code&gt;DEFAULT_TYPE&lt;/code&gt;, &lt;code&gt;NAMES&lt;/code&gt;, &lt;code&gt;C_FILE&lt;/code&gt; and &lt;code&gt;XS_FILE&lt;/code&gt; are recognised.</source>
          <target state="translated">현재 &lt;code&gt;INDENT&lt;/code&gt; , &lt;code&gt;NAME&lt;/code&gt; , &lt;code&gt;DEFAULT_TYPE&lt;/code&gt; , &lt;code&gt;NAMES&lt;/code&gt; , &lt;code&gt;C_FILE&lt;/code&gt; 및 &lt;code&gt;XS_FILE&lt;/code&gt; 만 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="7d9f8fb10567a5f5b286e925fe020ed9ddbe898d" translate="yes" xml:space="preserve">
          <source>Currently only emitted when a printf-type format required more arguments than were supplied, but might be used in the future for other cases where we can statically determine that arguments to functions are missing, e.g. for the &lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt; function.</source>
          <target state="translated">현재 printf 형식 형식이 제공된 것보다 많은 인수를 필요로 할 때만 방출되지만 &lt;a href=&quot;functions/pack&quot;&gt;팩&lt;/a&gt; 함수와 같이 함수에 대한 인수가 누락되었다고 정적으로 결정할 수있는 다른 경우에는 나중에 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9fa4f92734e18558ac4e95d1e72e9882423ccbd" translate="yes" xml:space="preserve">
          <source>Currently only emitted when a printf-type format required more arguments than were supplied, but might be used in the future for other cases where we can statically determine that arguments to functions are missing, e.g. for the &lt;a href=&quot;perlfunc#pack&quot;&gt;&quot;pack&quot; in perlfunc&lt;/a&gt; function.</source>
          <target state="translated">현재는 printf 유형 형식이 제공된 것보다 더 많은 인수를 필요로 할 때만 방출되지만 향후 함수에 대한 인수가 누락되었음을 정적으로 결정할 수있는 다른 경우에 사용할 수 있습니다 (예 : &lt;a href=&quot;perlfunc#pack&quot;&gt;perlfunc&lt;/a&gt; 함수 의 &quot;pack&quot;) .</target>
        </trans-unit>
        <trans-unit id="c06671bbb84a6f3c0a5e03cc037107c5b937b959" translate="yes" xml:space="preserve">
          <source>Currently the base class does nothing and returns an empty string.</source>
          <target state="translated">현재 기본 클래스는 아무것도하지 않고 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e65fb55b89a16a6ff17064471534fc5b44c3a09" translate="yes" xml:space="preserve">
          <source>Currently the cache manager only keeps track of the build directory ($CPAN::Config-&amp;gt;{build_dir}). It is a simple FIFO mechanism that deletes complete directories below &lt;code&gt;build_dir&lt;/code&gt; as soon as the size of all directories there gets bigger than $CPAN::Config-&amp;gt;{build_cache} (in MB). The contents of this cache may be used for later re-installations that you intend to do manually, but will never be trusted by CPAN itself. This is due to the fact that the user might use these directories for building modules on different architectures.</source>
          <target state="translated">현재 캐시 관리자는 빌드 디렉토리 ($ CPAN :: Config-&amp;gt; {build_dir}) 만 추적합니다. 모든 디렉토리의 크기가 $ CPAN :: Config-&amp;gt; {build_cache} (MB)보다 커지면 &lt;code&gt;build_dir&lt;/code&gt; 아래의 완전한 디렉토리를 삭제하는 간단한 FIFO 메커니즘입니다 . 이 캐시의 내용은 수동으로 수행하려는 나중에 다시 설치하는 데 사용될 수 있지만 CPAN 자체는 절대 신뢰하지 않습니다. 이는 사용자가이 디렉토리를 사용하여 다른 아키텍처에서 모듈을 빌드 할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="f062039e873cc7d52ba0fecd06981316ab3b8782" translate="yes" xml:space="preserve">
          <source>Currently the content of the &lt;code&gt;__DATA__&lt;/code&gt; block is not filtered.</source>
          <target state="translated">현재 &lt;code&gt;__DATA__&lt;/code&gt; 블록 의 내용은 필터링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85cb1004cde4eafeabb526e7c97d06160b9bc9ea" translate="yes" xml:space="preserve">
          <source>Currently the example could be something like this:</source>
          <target state="translated">현재 예제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9ed938fc9ec074335a5a14ff39713fa96e2a44d4" translate="yes" xml:space="preserve">
          <source>Currently the first argument to define_alias() can be specified in the following ways:</source>
          <target state="translated">현재 define_alias ()의 첫 번째 인수는 다음과 같은 방법으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9bf96de0559faf3b7e1d096d1d8a5e2e4453bbc" translate="yes" xml:space="preserve">
          <source>Currently the following two build types are tested on NetWare:</source>
          <target state="translated">현재 다음 두 가지 빌드 유형이 NetWare에서 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="27bda1314e744b16a23ac20d6ea98924b0ff0088" translate="yes" xml:space="preserve">
          <source>Currently the implementation is to create a single instance of the &lt;a href=&quot;Test2::API::Instance&quot;&gt;Test2::API::Instance&lt;/a&gt; Object. All class methods defer to the single instance. There is no public access to the singleton, and that is intentional. The class methods provided by this package provide the only functionality publicly exposed.</source>
          <target state="translated">현재 구현은 &lt;a href=&quot;Test2::API::Instance&quot;&gt;Test2 :: API :: Instance&lt;/a&gt; 개체 의 단일 인스턴스를 만드는 것 입니다. 모든 클래스 메서드는 단일 인스턴스를 따릅니다. 싱글 톤에 대한 공개 액세스가 없으며 이는 의도적 인 것입니다. 이 패키지에서 제공하는 클래스 메서드는 공개적으로 노출 된 유일한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0dfd46b204fb5d45e8f29132257a9dee7ed55c16" translate="yes" xml:space="preserve">
          <source>Currently the mantissa is reduced as much as possible, favouring higher exponents over lower ones (e.g. returning 1e7 instead of 10e6 or 10000000e0). This might change in the future, so do not depend on it.</source>
          <target state="translated">현재 가수는 가능한 한 많이 감소되어 낮은 것보다 높은 지수를 선호합니다 (예 : 10e6 또는 10000000e0 대신 1e7을 반환). 향후에 변경 될 수 있으므로 의존하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="272e78e92135f3b6c3f124be3274acb8250e5136" translate="yes" xml:space="preserve">
          <source>Currently the master repository is configured to forbid non-fast-forward merges. This means that the branches within can not be rebased and pushed as a single step.</source>
          <target state="translated">현재 마스터 리포지토리는 빠른 전달이 아닌 병합을 금지하도록 구성되어 있습니다. 즉, 내부 분기를 단일 단계로 다시 기반으로 푸시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cc52fa0221b520eb9cba69f5a8200cdef9bbc7cb" translate="yes" xml:space="preserve">
          <source>Currently the methods aren't as efficient as they could be, for reasons of clarity. This is probably a bad idea.</source>
          <target state="translated">현재이 방법은 명확성으로 인해 효율적이지 않습니다. 이것은 아마도 나쁜 생각입니다.</target>
        </trans-unit>
        <trans-unit id="f8b020b4d907e7d336baf4a7bd1d21f0a642b241" translate="yes" xml:space="preserve">
          <source>Currently the only significant values are 'dmake' and 'nmake' for Windows users, instructing MakeMaker to generate a Makefile in the flavour of DMake (&quot;Dennis Vadura's Make&quot;) or Microsoft NMake respectively.</source>
          <target state="translated">현재 유일하게 중요한 값은 Windows 사용자를위한 'dmake'및 'nmake'이며, MakeMaker가 DMake ( &quot;Dennis Vadura 's Make&quot;) 또는 Microsoft NMake의 풍미로 Makefile을 생성하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="b13896cce672efe66fde6e4733eeb0ddd56b420b" translate="yes" xml:space="preserve">
          <source>Currently the possible values for the OS name are</source>
          <target state="translated">현재 가능한 OS 이름 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f00b6778578143fea75a49ef468f9d31966e2d9a" translate="yes" xml:space="preserve">
          <source>Currently the value of &lt;code&gt;DISPLAY&lt;/code&gt; is ignored. It is recommended that it be set to be the hostname of the display, the server and screen in Unix notation. In the future the value of DISPLAY may be honored by Perl instead of using the default display.</source>
          <target state="translated">현재 &lt;code&gt;DISPLAY&lt;/code&gt; 값 은 무시됩니다. 유닉스 표기법에서 디스플레이, 서버 및 화면의 호스트 이름으로 설정하는 것이 좋습니다. 앞으로 DISPLAY의 값은 기본 디스플레이를 사용하는 대신 Perl에 의해 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8768013178cf8fe711f0d308fff8053c79e45b7a" translate="yes" xml:space="preserve">
          <source>Currently there is no way to specify more than one library on the command line. This means the following does not work:</source>
          <target state="translated">현재 명령 행에 둘 이상의 라이브러리를 지정할 수있는 방법이 없습니다. 이것은 다음이 작동하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a39b8349c59ac646b8af631b5ad977955e371ebf" translate="yes" xml:space="preserve">
          <source>Currently there is only one type of field hash, and only the boolean value of the mode makes a difference, but that may change.</source>
          <target state="translated">현재 필드 해시에는 한 가지 유형 만 있으며 모드의 부울 값만 차이가 있지만 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae3b9b162a3784fe295b868497fbb629b1ddd426" translate="yes" xml:space="preserve">
          <source>Currently this OS-specific stuff consists of looking in the environment variables &quot;LANG&quot; and &quot;LANGUAGE&quot;; and on MSWin machines (where those variables are typically unused), this also tries using the module Win32::Locale to get a language-tag for whatever language/locale is currently selected in the &quot;Regional Settings&quot; (or &quot;International&quot;?) Control Panel. I welcome further suggestions for making this do the Right Thing under other operating systems that support localization.</source>
          <target state="translated">현재이 OS 특정 항목은 환경 변수 &quot;LANG&quot;및 &quot;LANGUAGE&quot;로 구성됩니다. MSWin 컴퓨터 (이러한 변수는 일반적으로 사용되지 않는)에서는 Win32 :: Locale 모듈을 사용하여 현재 &quot;지역 설정&quot;(또는 &quot;국제&quot;?)에서 선택한 언어 / 로캘에 대한 언어 태그를 가져옵니다. 제어판. 현지화를 지원하는 다른 운영 체제에서 올바른 작업을 수행하기위한 추가 제안을 환영합니다.</target>
        </trans-unit>
        <trans-unit id="378c79aeaede8ea2bd5e71206224fcd13b58b934" translate="yes" xml:space="preserve">
          <source>Currently this always uses mergesort. See &lt;code&gt;&lt;a href=&quot;#sortsv_flags&quot;&gt;&quot;sortsv_flags&quot;&lt;/a&gt;&lt;/code&gt; for a more flexible routine.</source>
          <target state="translated">현재 이것은 항상 mergesort를 사용합니다. 보다 유연한 루틴 은 &lt;code&gt;&lt;a href=&quot;#sortsv_flags&quot;&gt;&quot;sortsv_flags&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b78daa9cb8c8ba0c96aabebf728d92ea741a97c" translate="yes" xml:space="preserve">
          <source>Currently this always uses mergesort. See sortsv_flags for a more flexible routine.</source>
          <target state="translated">현재 이것은 항상 mergesort를 사용합니다. 보다 유연한 루틴에 대해서는 sortsv_flags를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="99139b870fbe31ffb01aeaae72d3575f4248f3e1" translate="yes" xml:space="preserve">
          <source>Currently this class works by just filtering out the non-Pod stuff from a given input file.</source>
          <target state="translated">현재이 클래스는 특정 입력 파일에서 포드 이외의 항목을 필터링하여 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a2195c0949f8a5f7d55626e3a996d5f979acbacf" translate="yes" xml:space="preserve">
          <source>Currently this gives the same results as Linux does. Send email to &lt;a href=&quot;mailto:perlbug@perl.org&quot;&gt;mailto:perlbug@perl.org&lt;/a&gt; if you have examples of it needing to work differently.</source>
          <target state="translated">현재 이것은 Linux와 동일한 결과를 제공합니다. 다르게 작업해야하는 예제가있는 경우 &lt;a href=&quot;mailto:perlbug@perl.org&quot;&gt;mailto : perlbug@perl.org로&lt;/a&gt; 이메일을 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="8c05bed42565fb273b3a58a2b778911f3dba48d8" translate="yes" xml:space="preserve">
          <source>Currently this has only been tested on Unix and doesn't contain any of the Windows-specific code from the &lt;code&gt;Module::Build&lt;/code&gt; project. I'll do that next.</source>
          <target state="translated">현재 이것은 유닉스에서만 테스트되었으며 &lt;code&gt;Module::Build&lt;/code&gt; 프로젝트 의 Windows 특정 코드를 포함하지 않습니다 . 다음에하겠습니다.</target>
        </trans-unit>
        <trans-unit id="6c09a661f6643655325273d50b2f4ce06d5609d8" translate="yes" xml:space="preserve">
          <source>Currently this isn't used for anything, but it's provided (with default value of &lt;code&gt;(ref($language) &amp;amp;&amp;amp; $language-&amp;gt;{'encoding'})) or &quot;iso-8859-1&quot;&lt;/code&gt; ) as a sort of suggestion that it may be useful/necessary to associate encodings with your language handles (whether on a per-class or even per-handle basis.)</source>
          <target state="translated">현재 이것은 아무것도 사용되지 않지만 ((default &lt;code&gt;(ref($language) &amp;amp;&amp;amp; $language-&amp;gt;{'encoding'})) or &quot;iso-8859-1&quot;&lt;/code&gt; )은 일종의 제안으로 제공됩니다. 언어 클래스와 인코딩을 연결하는 것이 유용하거나 필요할 수 있습니다 (클래스 별 또는 심지어 핸들별로).</target>
        </trans-unit>
        <trans-unit id="2fe9e02e28a1376fbaaa825eb0420d6aa9001bf2" translate="yes" xml:space="preserve">
          <source>Currently this just takes the last bit of &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref($language)&lt;/a&gt;&lt;/code&gt;, turns underscores to dashes, and returns it. So if $language is an object of class Hee::HOO::Haw::en_us, $language-&amp;gt;language_tag() returns &quot;en-us&quot;. (Yes, the usual representation for that language tag is &quot;en-US&quot;, but case is</source>
          <target state="translated">현재 이것은 &lt;code&gt;&lt;a href=&quot;../functions/ref&quot;&gt;ref($language)&lt;/a&gt;&lt;/code&gt; 의 마지막 비트를 취하고 밑줄을 대시로 바꾼 다음 반환합니다. 따라서 $ language가 Hee :: HOO :: Haw :: en_us 클래스의 객체 인 경우 $ language-&amp;gt; language_tag ()는 &quot;en-us&quot;를 반환합니다. (예, 해당 언어 태그의 일반적인 표현은 &quot;en-US&quot;이지만 대소 문자는</target>
        </trans-unit>
        <trans-unit id="6f66e42fedd2402e63d6096207b558716fbf516e" translate="yes" xml:space="preserve">
          <source>Currently this just takes the last bit of &lt;code&gt;ref($language)&lt;/code&gt;, turns underscores to dashes, and returns it. So if $language is an object of class Hee::HOO::Haw::en_us, $language-&amp;gt;language_tag() returns &quot;en-us&quot;. (Yes, the usual representation for that language tag is &quot;en-US&quot;, but case is</source>
          <target state="translated">현재 이것은 &lt;code&gt;ref($language)&lt;/code&gt; 의 마지막 비트를 취하고 밑줄을 대시로 바꾸고 반환합니다. 따라서 $ language가 Hee :: HOO :: Haw :: en_us 클래스의 객체 인 경우 $ language-&amp;gt; language_tag ()는 &quot;en-us&quot;를 반환합니다. (예, 해당 언어 태그의 일반적인 표현은 &quot;en-US&quot;이지만 대소 문자는</target>
        </trans-unit>
        <trans-unit id="79f7485198cd482639db4f4626a9508a51ae8d0f" translate="yes" xml:space="preserve">
          <source>Currently this module understands the following types. h2xs may only know a subset. The sizes of the numeric types are chosen by the &lt;code&gt;Configure&lt;/code&gt; script at compile time.</source>
          <target state="translated">현재이 모듈은 다음 유형을 이해합니다. h2x는 하위 집합 만 알 수 있습니다. 숫자 유형의 크기는 컴파일 타임에 &lt;code&gt;Configure&lt;/code&gt; 스크립트에 의해 선택됩니다 .</target>
        </trans-unit>
        <trans-unit id="93237539509fa03223f330e7d636de0f712ccf6d" translate="yes" xml:space="preserve">
          <source>Currently you need to write a plugin to get around this.</source>
          <target state="translated">현재이 문제를 해결하려면 플러그인을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2d377b4476a6e188762144f586ad2d608b464a9" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;given&lt;/code&gt; blocks can't always be used as proper expressions. This may be addressed in a future version of Perl.</source>
          <target state="translated">현재 &lt;code&gt;given&lt;/code&gt; 블록을 항상 적절한 표현으로 사용할 수있는 것은 아닙니다. 이것은 향후 버전의 Perl에서 해결 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be9be40cf2cf1e1fc15159dabb7ecc2afdb28f1e" translate="yes" xml:space="preserve">
          <source>Currently, Math::BigInt-&amp;gt;new() defaults to 0, while Math::BigInt-&amp;gt;new('') results in 'NaN'. This might change in the future, so use always the following explicit forms to get a zero or NaN:</source>
          <target state="translated">현재 Math :: BigInt-&amp;gt; new ()의 기본값은 0이고 Math :: BigInt-&amp;gt; new ( '')의 결과는 'NaN'입니다. 이는 향후 변경 될 수 있으므로 항상 다음 명시 적 형식을 사용하여 0 또는 NaN을 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="5d26c1593e61e13dda079b542bc00ebe32e1e263" translate="yes" xml:space="preserve">
          <source>Currently, Math::BigInt::new() defaults to 0, while Math::BigInt::new('') results in 'NaN'. This might change in the future, so use always the following explicit forms to get a zero or NaN:</source>
          <target state="translated">현재 Math :: BigInt :: new ()의 기본값은 0이며 Math :: BigInt :: new ( '')의 결과는 'NaN'입니다. 앞으로 변경 될 수 있으므로 항상 다음 명시 적 양식을 사용하여 0 또는 NaN을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="5a3571347f1fb8b0138ff4086aa2cd9a390c3586" translate="yes" xml:space="preserve">
          <source>Currently, Perl deals with UTF-8 strings and non-UTF-8 strings slightly differently. A flag in the SV, &lt;code&gt;SVf_UTF8&lt;/code&gt; , indicates that the string is internally encoded as UTF-8. Without it, the byte value is the codepoint number and vice versa. This flag is only meaningful if the SV is &lt;code&gt;SvPOK&lt;/code&gt; or immediately after stringification via &lt;code&gt;SvPV&lt;/code&gt; or a similar macro. You can check and manipulate this flag with the following macros:</source>
          <target state="translated">현재 Perl은 UTF-8 문자열과 비 UTF-8 문자열을 약간 다르게 처리합니다. SV의 &lt;code&gt;SVf_UTF8&lt;/code&gt; 플래그 는 문자열이 내부적으로 UTF-8로 인코딩됨을 나타냅니다. 이를 사용하지 않으면 바이트 값은 코드 포인트 번호이며 그 반대도 마찬가지입니다. 이 플래그는 SV가 &lt;code&gt;SvPOK&lt;/code&gt; 이거나 &lt;code&gt;SvPV&lt;/code&gt; 또는 유사한 매크로 를 통한 스트링 화 직후에 의미가 있습니다. 다음 매크로를 사용하여이 플래그를 확인하고 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03db93d9a43bc80eb13a824e93de1d6eabb5c360" translate="yes" xml:space="preserve">
          <source>Currently, Perl deals with UTF-8 strings and non-UTF-8 strings slightly differently. A flag in the SV, &lt;code&gt;SVf_UTF8&lt;/code&gt;, indicates that the string is internally encoded as UTF-8. Without it, the byte value is the codepoint number and vice versa. This flag is only meaningful if the SV is &lt;code&gt;SvPOK&lt;/code&gt; or immediately after stringification via &lt;code&gt;SvPV&lt;/code&gt; or a similar macro. You can check and manipulate this flag with the following macros:</source>
          <target state="translated">현재 Perl은 UTF-8 문자열과 UTF-8이 아닌 문자열을 약간 다르게 처리합니다. SV의 플래그 &lt;code&gt;SVf_UTF8&lt;/code&gt; 은 문자열이 내부적으로 UTF-8로 인코딩되었음을 나타냅니다. 이것이 없으면 바이트 값은 코드 포인트 번호이고 그 반대의 경우도 마찬가지입니다. 이 플래그는 SV가 &lt;code&gt;SvPOK&lt;/code&gt; 이거나 &lt;code&gt;SvPV&lt;/code&gt; 또는 유사한 매크로 를 통한 문자열 화 직후 에만 의미가 있습니다. 다음 매크로를 사용하여이 플래그를 확인하고 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf064da20402a373389bd1e8534e66d897ddfb89" translate="yes" xml:space="preserve">
          <source>Currently, an unescaped &quot;~&quot; before a character other than a bracket or a comma is taken to mean just a &quot;~&quot; and that character. I.e., &quot;~X&quot; means the same as &quot;~~X&quot; -- i.e., one literal tilde, and then one literal &quot;X&quot;. However, by using &quot;~X&quot;, you are assuming that no future version of Maketext will use &quot;~X&quot; as a magic escape sequence. In practice this is not a great problem, since first off you can just write &quot;~~X&quot; and not worry about it; second off, I doubt I'll add lots of new magic characters to bracket notation; and third off, you aren't likely to want literal &quot;~&quot; characters in your messages anyway, since it's not a character with wide use in natural language text.</source>
          <target state="translated">현재 대괄호 나 쉼표 이외의 문자 앞에있는 이스케이프 처리되지 않은 &quot;~&quot;는 &quot;~&quot;와 해당 문자를 의미합니다. 즉, &quot;~ X&quot;는 &quot;~~ X&quot;와 동일 함을 의미합니다. 즉, 하나의 리터럴 물결표 다음에 하나의 리터럴 &quot;X&quot;입니다. 그러나 &quot;~ X&quot;를 사용하면 이후 버전의 Maketext에서 &quot;~ X&quot;를 매직 이스케이프 시퀀스로 사용하지 않을 것이라고 가정합니다. 실제로 이것은 &quot;~~ X&quot;라고 쓸 수 있고 걱정하지 않아도되므로 큰 문제는 아닙니다. 둘째, 대괄호 표기법에 많은 새로운 마법 캐릭터를 추가 할 것입니다. 셋째로, 어쨌든 메시지에 문자 &quot;~&quot;문자를 원하지 않을 것입니다. 자연어 텍스트에서 널리 사용되는 문자가 아니기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="32c5c8dadaaaf31c38a9691666537875247237cb" translate="yes" xml:space="preserve">
          <source>Currently, bracket groups do not nest. That is, you &lt;b&gt;cannot&lt;/b&gt; say:</source>
          <target state="translated">현재 대괄호 그룹은 중첩되지 않습니다. 즉, 당신 &lt;b&gt;은&lt;/b&gt; 말할 &lt;b&gt;수 없습니다&lt;/b&gt; :</target>
        </trans-unit>
        <trans-unit id="c35cdca66e034e7f9a47d31a205334d612013eef" translate="yes" xml:space="preserve">
          <source>Currently, for BigInts &lt;code&gt;$e&lt;/code&gt; is always 0, except +inf and -inf, where it is &lt;code&gt;+inf&lt;/code&gt; ; and for NaN, where it is &lt;code&gt;NaN&lt;/code&gt; ; and for &lt;code&gt;$x == 0&lt;/code&gt; , where it is &lt;code&gt;1&lt;/code&gt; (to be compatible with Math::BigFloat's internal representation of a zero as &lt;code&gt;0E1&lt;/code&gt; ).</source>
          <target state="translated">현재 BigInts을 위해 &lt;code&gt;$e&lt;/code&gt; 그것이 + INF와 -INF를 제외하고 항상 0 &lt;code&gt;+inf&lt;/code&gt; ; NaN의 경우, &lt;code&gt;NaN&lt;/code&gt; 이고; 그리고 &lt;code&gt;$x == 0&lt;/code&gt; 이면 &lt;code&gt;1&lt;/code&gt; 입니다 (Math :: BigFloat의 0으로 &lt;code&gt;0E1&lt;/code&gt; 의 내부 표현과 호환 가능 ).</target>
        </trans-unit>
        <trans-unit id="beb5d0250d9ace27aad40903e5fff21089b05d9e" translate="yes" xml:space="preserve">
          <source>Currently, on all platforms except MSWin32, all</source>
          <target state="translated">현재 MSWin32를 제외한 모든 플랫폼에서</target>
        </trans-unit>
        <trans-unit id="93a247e0eef683aaac7910c01f3f928a9e46d78c" translate="yes" xml:space="preserve">
          <source>Currently, only the &lt;code&gt;access&lt;/code&gt; sub-pragma is implemented. It enables (or disables) the use of access() when available, that is, on most UNIX systems and other POSIX environments. See details below.</source>
          <target state="translated">현재는 &lt;code&gt;access&lt;/code&gt; 서브 프라 그마 만 구현됩니다. 사용 가능한 경우, 즉 대부분의 UNIX 시스템 및 기타 POSIX 환경에서 access () 사용을 활성화 (또는 비활성화)합니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="33e7ea9ec5cbd93ff2ecf3a4dad788833c2604db" translate="yes" xml:space="preserve">
          <source>Currently, the only significant value for &lt;code&gt;flags&lt;/code&gt; is &lt;code&gt;SVf_UTF8&lt;/code&gt;.</source>
          <target state="translated">현재 &lt;code&gt;flags&lt;/code&gt; 의 유일한 중요한 값 은 &lt;code&gt;SVf_UTF8&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="12cb6e902a01a88f56d9045c1e314fafc987b2ba" translate="yes" xml:space="preserve">
          <source>Currently, the only significant value for &lt;code&gt;flags&lt;/code&gt; is SVf_UTF8.</source>
          <target state="translated">현재 &lt;code&gt;flags&lt;/code&gt; 중요한 값 은 SVf_UTF8입니다.</target>
        </trans-unit>
        <trans-unit id="c22d9a7fee9cae91b42a0d8e2cfac398a39a9b2b" translate="yes" xml:space="preserve">
          <source>Currently, the only useful value for &lt;code&gt;flags&lt;/code&gt; is SVf_UTF8.</source>
          <target state="translated">현재 &lt;code&gt;flags&lt;/code&gt; 유용한 유일한 값 은 SVf_UTF8입니다.</target>
        </trans-unit>
        <trans-unit id="2b251ef9a6ee9de77a03ddc9608c4a3c0db1c0a0" translate="yes" xml:space="preserve">
          <source>Currently, the outermost formatting instruction wins, so for example underlined text inside a region of bold text is displayed as simply bold. There may be some better approach possible.</source>
          <target state="translated">현재 가장 바깥 쪽 서식 명령이 성공하므로 예를 들어 굵은 텍스트 영역 내의 밑줄이있는 텍스트는 단순히 굵게 표시됩니다. 더 나은 접근 방법이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ca8600ba039585f9f853e2c43bcdff7d5ab9e0b" translate="yes" xml:space="preserve">
          <source>Currently, the subroutine can be identified statically if the RV that the &lt;code&gt;rv2cv&lt;/code&gt; is to operate on is provided by a suitable &lt;code&gt;gv&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; op. A &lt;code&gt;gv&lt;/code&gt; op is suitable if the GV's CV slot is populated. A &lt;code&gt;const&lt;/code&gt; op is suitable if the constant value must be an RV pointing to a CV. Details of this process may change in future versions of Perl. If the &lt;code&gt;rv2cv&lt;/code&gt; op has the &lt;code&gt;OPpENTERSUB_AMPER&lt;/code&gt; flag set then no attempt is made to identify the subroutine statically: this flag is used to suppress compile-time magic on a subroutine call, forcing it to use default runtime behaviour.</source>
          <target state="translated">현재, &lt;code&gt;rv2cv&lt;/code&gt; 가 동작 할 RV가 적절한 &lt;code&gt;gv&lt;/code&gt; 또는 &lt;code&gt;const&lt;/code&gt; op에 의해 제공 된다면 서브 루틴은 정적으로 식별 될 수있다 . &lt;code&gt;gv&lt;/code&gt; GV의 CV 슬롯이 채워지는 경우 영업 이익은 적합합니다. ㅏ &lt;code&gt;const&lt;/code&gt; 상수 값이 CV을 가리키는 RV 있어야한다면 OP가 적합하다. 이 프로세스의 세부 사항은 이후 버전의 Perl에서 변경 될 수 있습니다. 는 IF &lt;code&gt;rv2cv&lt;/code&gt; 의 영업 이익이있다 &lt;code&gt;OPpENTERSUB_AMPER&lt;/code&gt; 의 다음 시도가 정적 서브 루틴을 식별하기 위해 이루어지지 않습니다 플래그가 설정 :이 플래그는 기본 런타임 동작을 사용하도록 강제 서브 루틴 호출에 억제 컴파일시 마법 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="30ae0333cbf3155ee9a8d502bacd2883d5d9957f" translate="yes" xml:space="preserve">
          <source>Currently, there are no attributes conveyed.</source>
          <target state="translated">현재 전달되는 속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="67e7a7d4977369b6c724bdde229426278921cd59" translate="yes" xml:space="preserve">
          <source>Currently, this warning only appears if a character entity was found that does not have a Unicode character. This should be fixed to adhere to the original warning.</source>
          <target state="translated">현재이 경고는 유니 코드 문자가없는 문자 엔티티가 발견 된 경우에만 나타납니다. 원래의 경고를 준수하려면이 문제를 해결해야합니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="1e2d2e7b351cedc7ed2289316efdff5558012869" translate="yes" xml:space="preserve">
          <source>Currently, we only allow opened filehandles or filenames, but not strings. The internals would need some reworking to facilitate stringified archives.</source>
          <target state="translated">현재는 열린 파일 핸들 또는 파일 이름 만 허용하지만 문자열은 허용하지 않습니다. 내부는 문자열 아카이브를 용이하게하기 위해 약간의 재 작업이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="810afe6a34891b144a1f9e0ce40e9fc1217c35e6" translate="yes" xml:space="preserve">
          <source>Currently, we only support this if the filehandle is an IO::Zlib object. Environments, like apache, will present you with an opened filehandle to an uploaded file, which might be a compressed archive.</source>
          <target state="translated">현재 파일 핸들이 IO :: Zlib 객체 인 경우에만이 기능을 지원합니다. 아파치와 같은 환경에서는 압축 된 아카이브 일 수있는 업로드 된 파일에 열린 파일 핸들을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="261fc98a0206bd66bd4ad6212e54d2bfab7d8db4" translate="yes" xml:space="preserve">
          <source>Currently, whether or not the test suite passed with no 'problems' (such as TODO passed).</source>
          <target state="translated">현재 테스트 스위트가 '문제'없이 통과했는지 여부 (예 : TODO 통과)</target>
        </trans-unit>
        <trans-unit id="9c6db45396c2d46499bd75d3b569fe4bd724810e" translate="yes" xml:space="preserve">
          <source>Currently, you must be running at least perl v5.6.0 in order to run with MEDIUM or HIGH security. This is simply because the safety tests use functions from &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt; that are not available in older versions of perl. The problem is that the version number for Fcntl is the same in perl 5.6.0 and in 5.005_03 even though they are different versions.</source>
          <target state="translated">현재 MEDIUM 또는 HIGH 보안으로 실행하려면 최소한 perl v5.6.0을 실행해야합니다. 이는 안전 테스트 가 이전 버전의 perl에서 사용할 수없는 &lt;a href=&quot;fcntl&quot;&gt;Fcntl의&lt;/a&gt; 기능을 사용하기 때문 입니다. 문제는 Fcntl의 버전 번호가 perl 5.6.0과 5.005_03에서 서로 다른 버전이더라도 동일하다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c505ffc91edd3f9012e8a66a72815302c62cb3ca" translate="yes" xml:space="preserve">
          <source>Currently, you must be running at least perl v5.6.0 in order to run with MEDIUM or HIGH security. This is simply because the safety tests use functions from L</source>
          <target state="translated">현재 MEDIUM 또는 HIGH 보안으로 실행하려면 perl v5.6.0 이상을 실행해야합니다. 안전 테스트는 L의 기능을 사용하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="19f401a7406fb2ade217c4c2d091602740509bb8" translate="yes" xml:space="preserve">
          <source>Curtis &quot;Ovid&quot; Poe &amp;lt;ovid@cpan.org&amp;gt;</source>
          <target state="translated">커티스 &quot;Ovid&quot;Poe &amp;lt;ovid@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7afc80af35ce6ee31ebae219a53944bd2652c7da" translate="yes" xml:space="preserve">
          <source>Custom Layers</source>
          <target state="translated">커스텀 레이어</target>
        </trans-unit>
        <trans-unit id="dbdaeda1e073966b4e479d9fff0e7793b0904106" translate="yes" xml:space="preserve">
          <source>Custom Operators</source>
          <target state="translated">맞춤 연산자</target>
        </trans-unit>
        <trans-unit id="6784d4d8f3fee4200a3147bca7df4cb94c88452f" translate="yes" xml:space="preserve">
          <source>Custom formatters can be loaded configured using the &lt;code&gt;formatter_class&lt;/code&gt; parameter to &lt;a href=&quot;#new&quot;&gt;&quot;new&quot;&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 포맷터는 &lt;a href=&quot;#new&quot;&gt;&quot;new&quot;에&lt;/a&gt; 대한 &lt;code&gt;formatter_class&lt;/code&gt; 매개 변수를 사용하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0eae33b0c090e3966d3c68512ada19e1528011c" translate="yes" xml:space="preserve">
          <source>Custom formatters can be loaded configured using the &lt;code&gt;formatter_class&lt;/code&gt; parameter to &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;formatter_class&lt;/code&gt; 매개 변수를 사용하여 사용자 정의 포맷터 를 &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt; 로로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53cff91188bebb2a553103fb8e7b63cd42bccaa2" translate="yes" xml:space="preserve">
          <source>Custom operator support is an experimental feature that allows you to define your own ops. This is primarily to allow the building of interpreters for other languages in the Perl core, but it also allows optimizations through the creation of &quot;macro-ops&quot; (ops which perform the functions of multiple ops which are usually executed together, such as &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; .)</source>
          <target state="translated">사용자 지정 연산자 지원은 실험 기능으로 자신 만의 작전을 정의 할 수 있습니다. 이는 주로 Perl 코어에서 다른 언어에 대한 통역사를 구축 할 수 있도록하기위한 것이지만, &quot;매크로-옵스&quot;( &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="447aace8cf7194da338038473a7839a9a536ffef" translate="yes" xml:space="preserve">
          <source>Custom operator support is an experimental feature that allows you to define your own ops. This is primarily to allow the building of interpreters for other languages in the Perl core, but it also allows optimizations through the creation of &quot;macro-ops&quot; (ops which perform the functions of multiple ops which are usually executed together, such as &lt;code&gt;gvsv, gvsv, add&lt;/code&gt;.)</source>
          <target state="translated">사용자 지정 연산자 지원은 자체 작업을 정의 할 수있는 실험적 기능입니다. 이것은 주로 Perl 코어의 다른 언어에 대한 인터프리터 구축을 허용하기위한 것이지만 &quot;매크로 작업&quot;(일반적으로 함께 실행되는 여러 작업의 기능을 수행하는 작업 (예 : &lt;code&gt;gvsv, gvsv, add&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="b8a0f9b4738b676273a2a999093c300569cd6824" translate="yes" xml:space="preserve">
          <source>Customization of the dist targets can be done by specifying a hash reference to the dist attribute of the WriteMakefile call. The following parameters are recognized:</source>
          <target state="translated">dist 대상의 사용자 정의는 WriteMakefile 호출의 dist 속성에 대한 해시 참조를 지정하여 수행 할 수 있습니다. 다음과 같은 파라미터가 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="89573ca91f1cd12b68d7b52afaa6e74057482c25" translate="yes" xml:space="preserve">
          <source>Customize how TAP gets into the parser</source>
          <target state="translated">TAP가 파서에 들어가는 방법 사용자 지정</target>
        </trans-unit>
        <trans-unit id="a6236a7d285f303c997fe0bb85bdfdf676fff889" translate="yes" xml:space="preserve">
          <source>Customize how TAP results are output from the parser</source>
          <target state="translated">파서에서 TAP 결과가 출력되는 방식 사용자 지정</target>
        </trans-unit>
        <trans-unit id="0b9b392a3be38eacab1a203c181ca6e780bde6d0" translate="yes" xml:space="preserve">
          <source>Customized option parser for Pod::Perldoc</source>
          <target state="translated">Pod :: Perldoc 용 맞춤형 옵션 파서</target>
        </trans-unit>
        <trans-unit id="88cc44eee1c5bcf56c439099a999101643d07be8" translate="yes" xml:space="preserve">
          <source>CvDEPTH</source>
          <target state="translated">CvDEPTH</target>
        </trans-unit>
        <trans-unit id="62b3350b3c7b679b4e2f011331e58301e9cb4f11" translate="yes" xml:space="preserve">
          <source>CvFLAGS</source>
          <target state="translated">CvFLAGS</target>
        </trans-unit>
        <trans-unit id="7572ef783079aa4791855006dd4c0a84306130a7" translate="yes" xml:space="preserve">
          <source>CvGV</source>
          <target state="translated">CvGV</target>
        </trans-unit>
        <trans-unit id="8a8357813e39cd0767538523e6c92a9253cc195f" translate="yes" xml:space="preserve">
          <source>CvPADLIST</source>
          <target state="translated">CvPADLIST</target>
        </trans-unit>
        <trans-unit id="013adcd6a07b8f61d8caa978ff261bf92132acf4" translate="yes" xml:space="preserve">
          <source>CvSTASH</source>
          <target state="translated">CvSTASH</target>
        </trans-unit>
        <trans-unit id="9abf76984e66dff232da624a368b395e1ebe497b" translate="yes" xml:space="preserve">
          <source>CvWEAKOUTSIDE</source>
          <target state="translated">CvWEAKOUTSIDE</target>
        </trans-unit>
        <trans-unit id="d0f3d41e3c41ddc6cbc9c2daec27882d80caea71" translate="yes" xml:space="preserve">
          <source>Cwd</source>
          <target state="translated">Cwd</target>
        </trans-unit>
        <trans-unit id="fd9825bfa4c850e67c2151a6f5292a3e86f0c912" translate="yes" xml:space="preserve">
          <source>Cwd - get pathname of current working directory</source>
          <target state="translated">Cwd-현재 작업 디렉토리의 경로 이름 가져 오기</target>
        </trans-unit>
        <trans-unit id="160555969f1a8fde234517fab23669eee0ccbd1e" translate="yes" xml:space="preserve">
          <source>Cwd.xs</source>
          <target state="translated">Cwd.xs</target>
        </trans-unit>
        <trans-unit id="6946f4c8071effbeabbad50c4f3d087f9e9e6aa9" translate="yes" xml:space="preserve">
          <source>Cygwin</source>
          <target state="translated">Cygwin</target>
        </trans-unit>
        <trans-unit id="73fc7f50fdec5b6f0f95bef5f8e06196f92c8ab5" translate="yes" xml:space="preserve">
          <source>Cygwin = GNU+Cygnus+Windows (Don't leave UNIX without it)</source>
          <target state="translated">Cygwin = GNU + Cygnus + Windows (UNIX를 떠나지 마십시오)</target>
        </trans-unit>
        <trans-unit id="b410b02920a07e0c1b2f5517c0638087253c2758" translate="yes" xml:space="preserve">
          <source>Cygwin Configuration</source>
          <target state="translated">Cygwin 구성</target>
        </trans-unit>
        <trans-unit id="f2fd19eff84130ae501b7f66fc64ed3790d3e356" translate="yes" xml:space="preserve">
          <source>Cygwin does an outstanding job of providing UNIX-like semantics on top of Win32 systems. However, in addition to the items noted above, there are some differences that you should know about. This is a very brief guide to portability, more information can be found in the Cygwin documentation.</source>
          <target state="translated">Cygwin은 Win32 시스템에서 UNIX와 유사한 의미를 제공하는 뛰어난 작업을 수행합니다. 그러나 위에서 언급 한 항목 외에도 알아야 할 몇 가지 차이점이 있습니다. 이것은 이식성에 대한 매우 간단한 안내서이며, 자세한 내용은 Cygwin 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="39bcb7dc63150f69c7968352d73ab68ec6457826" translate="yes" xml:space="preserve">
          <source>Cygwin does not initialize all original Win32 environment variables. See the bottom of this page &lt;a href=&quot;http://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;http://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt; for &quot;Restricted Win32 environment&quot;.</source>
          <target state="translated">Cygwin은 모든 원래 Win32 환경 변수를 초기화하지 않습니다. &quot;제한된 Win32 환경&quot;에 대해서는 이 페이지 하단 &lt;a href=&quot;http://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;http://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="32135bea5f5607e57bc37c6e1a44f11dca4b0e89" translate="yes" xml:space="preserve">
          <source>Cygwin does not initialize all original Win32 environment variables. See the bottom of this page &lt;a href=&quot;https://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;https://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt; for &quot;Restricted Win32 environment&quot;.</source>
          <target state="translated">Cygwin은 모든 원래 Win32 환경 변수를 초기화하지 않습니다. &quot;제한된 Win32 환경&quot;에 대해서는 이 페이지의 하단 &lt;a href=&quot;https://cygwin.com/cygwin-ug-net/setup-env.html&quot;&gt;https://cygwin.com/cygwin-ug-net/setup-env.html&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="81c2c7aa1db1394160b27a38c6928b843acda7e8" translate="yes" xml:space="preserve">
          <source>Cygwin is covered by the GNU General Public License (but that shouldn't matter for Perl use). Cygwin contains (in addition to the shell) a comprehensive set of standard Unix toolkit utilities.</source>
          <target state="translated">Cygwin은 GNU General Public License에 의해 보호됩니다 (그러나 Perl 사용에는 중요하지 않습니다). Cygwin에는 포괄적 인 표준 Unix 툴킷 유틸리티 세트 (쉘 외에도)가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8258ca2d192f15ab780ba7a84929a7edb3f631ab" translate="yes" xml:space="preserve">
          <source>Cygwin pathnames are separated by forward (</source>
          <target state="translated">Cygwin 경로 이름은 앞으로 (</target>
        </trans-unit>
        <trans-unit id="9651770d389e8830b4b1e3539f723c1e80eca364" translate="yes" xml:space="preserve">
          <source>Cygwin processes have their own pid, which is different from the underlying windows pid. Most posix compliant Proc functions expect the cygwin pid, but several Win32::Process functions expect the winpid. E.g. &lt;code&gt;$$&lt;/code&gt; is the cygwin pid of</source>
          <target state="translated">Cygwin 프로세스에는 자체 pid가 있으며 기본 pid와 다릅니다. 대부분의 posix 호환 Proc 함수는 cygwin pid를 기대하지만 여러 Win32 :: Process 함수는 winpid를 기대합니다. 예 : &lt;code&gt;$$&lt;/code&gt; 는 cygwin pid입니다.</target>
        </trans-unit>
        <trans-unit id="05c0c2f636a8edb75c77d41c4c7bfc716236cfce" translate="yes" xml:space="preserve">
          <source>Cygwin uses 64-bit integers for internal size and position calculations, this will be correctly detected and defined by Configure.</source>
          <target state="translated">Cygwin은 내부 크기 및 위치 계산에 64 비트 정수를 사용합니다. 이는 Configure에 의해 올바르게 감지 및 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="93bc0332bfb8d6a365d2c9f29796c194d94c35ae" translate="yes" xml:space="preserve">
          <source>Cygwin vs. Windows errors</source>
          <target state="translated">Cygwin 대 Windows 오류</target>
        </trans-unit>
        <trans-unit id="69fc52b95df19dd4f32d13430d0c3f0606e37966" translate="yes" xml:space="preserve">
          <source>Cygwin vs. Windows process ids</source>
          <target state="translated">Cygwin 대 Windows 프로세스 ID</target>
        </trans-unit>
        <trans-unit id="d140941c1521d2349d4bd6c64c31475654a7b43c" translate="yes" xml:space="preserve">
          <source>Cylindrical coordinates,</source>
          <target state="translated">원통형 좌표,</target>
        </trans-unit>
        <trans-unit id="b4d97c060a73217d3a51cb60b08ffcf8d4239756" translate="yes" xml:space="preserve">
          <source>Cyrillic encoding ISO-IR-111</source>
          <target state="translated">키릴 문자 인코딩 ISO-IR-111</target>
        </trans-unit>
        <trans-unit id="1fef42909247a6c230eeef66277f2b5e0e8f274e" translate="yes" xml:space="preserve">
          <source>Czech Republic</source>
          <target state="translated">체코 공화국</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="96f0e31b49aae2a6d915ae3b613e4575c8b6a5d9" translate="yes" xml:space="preserve">
          <source>D. INSTALL</source>
          <target state="translated">D. 설치</target>
        </trans-unit>
        <trans-unit id="7f2430aff77c078755160a61817f59ac5a442628" translate="yes" xml:space="preserve">
          <source>D. Wegscheid &amp;lt;wegscd@whirlpool.com&amp;gt; R. Schertler &amp;lt;roderick@argon.org&amp;gt; J. Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; G. Aas &amp;lt;gisle@aas.no&amp;gt;</source>
          <target state="translated">D. Wegscheid &amp;lt;wegscd@whirlpool.com&amp;gt; R. Schertler &amp;lt;roderick@argon.org&amp;gt; J. Hietaniemi &amp;lt;jhi@iki.fi&amp;gt; G. Aas &amp;lt;gisle@aas.no&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a856f8342e4097ec46ec2ae4d0ef67ea993ed17d" translate="yes" xml:space="preserve">
          <source>D&lt;b&gt;1&lt;/b&gt;h</source>
          <target state="translated">D&lt;b&gt;1&lt;/b&gt;h</target>
        </trans-unit>
        <trans-unit id="cbcb89e55acdd88dfeeed3c5a12d75530af183e0" translate="yes" xml:space="preserve">
          <source>DATA STRUCTURES</source>
          <target state="translated">데이터 구조</target>
        </trans-unit>
        <trans-unit id="65057e7a198e3179350e6ed9b0f04982f164814a" translate="yes" xml:space="preserve">
          <source>DATA TYPES</source>
          <target state="translated">데이터 유형</target>
        </trans-unit>
        <trans-unit id="8c76abdec41a7652375d00f4bf05256b82c68494" translate="yes" xml:space="preserve">
          <source>DATE</source>
          <target state="translated">DATE</target>
        </trans-unit>
        <trans-unit id="c12b32a0cc17b3f8909c76d7b1bfe6c328500bd4" translate="yes" xml:space="preserve">
          <source>DB</source>
          <target state="translated">DB</target>
        </trans-unit>
        <trans-unit id="d3a3e481c8bad23af4b07c6a711d820269aa05e1" translate="yes" xml:space="preserve">
          <source>DB - programmatic interface to the Perl debugging API</source>
          <target state="translated">DB-Perl 디버깅 API에 대한 프로그래밍 인터페이스</target>
        </trans-unit>
        <trans-unit id="02b89c8f47620a4d50d693c8da52968959062472" translate="yes" xml:space="preserve">
          <source>DBM</source>
          <target state="translated">DBM</target>
        </trans-unit>
        <trans-unit id="f76a9cbb39dfd2541a72b35e7e8f4653016195c0" translate="yes" xml:space="preserve">
          <source>DBM Comparisons</source>
          <target state="translated">DBM 비교</target>
        </trans-unit>
        <trans-unit id="ca5f67a0ba0d8efff1637f1da816838257659ffd" translate="yes" xml:space="preserve">
          <source>DBM FILTERS</source>
          <target state="translated">DBM 필터</target>
        </trans-unit>
        <trans-unit id="84ae46ecb9dc4a66d14352d62f96a02e4cb51582" translate="yes" xml:space="preserve">
          <source>DBM Filter Low-level API</source>
          <target state="translated">DBM 필터 하위 수준 API</target>
        </trans-unit>
        <trans-unit id="89d82ce9435d1c0ea4a6bc6721d2f5690a7f92ea" translate="yes" xml:space="preserve">
          <source>DBM Filters are useful for a class of problems where you</source>
          <target state="translated">DBM 필터는 여러 가지 문제에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7578525c0394078f99ffd4a40edc277d75ad744f" translate="yes" xml:space="preserve">
          <source>DBM_Filter</source>
          <target state="translated">DBM_Filter</target>
        </trans-unit>
        <trans-unit id="b38c7d32f616c7556af3364ba66546ed0749f03b" translate="yes" xml:space="preserve">
          <source>DBM_Filter -- Filter DBM keys/values</source>
          <target state="translated">DBM_Filter-DBM 키 / 값 필터링</target>
        </trans-unit>
        <trans-unit id="b6b9b1dec59c3a08e8723935d64f316cd6ef56cc" translate="yes" xml:space="preserve">
          <source>DBM_Filter::compress</source>
          <target state="translated">DBM_Filter::compress</target>
        </trans-unit>
        <trans-unit id="017e1847be264d3b84ccfa3271d40094dd0bf1eb" translate="yes" xml:space="preserve">
          <source>DBM_Filter::compress - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter :: compress-DBM_Filter에 대한 필터</target>
        </trans-unit>
        <trans-unit id="e29bd395446d47ab211ec2e1146eefd14e1b20a3" translate="yes" xml:space="preserve">
          <source>DBM_Filter::encode</source>
          <target state="translated">DBM_Filter::encode</target>
        </trans-unit>
        <trans-unit id="f5e031e4b2f19789fcf7c2f3ba685f80663d177c" translate="yes" xml:space="preserve">
          <source>DBM_Filter::encode - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter :: encode-DBM_Filter에 대한 필터</target>
        </trans-unit>
        <trans-unit id="fcb2034b0ecd24b1bee4254c842bbb672bdbc7d6" translate="yes" xml:space="preserve">
          <source>DBM_Filter::int32</source>
          <target state="translated">DBM_Filter::int32</target>
        </trans-unit>
        <trans-unit id="5fe5fd365abd08f6af165c5d6a16911995a685a9" translate="yes" xml:space="preserve">
          <source>DBM_Filter::int32 - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter :: int32-DBM_Filter에 대한 필터</target>
        </trans-unit>
        <trans-unit id="4a3e906903359c539b73264aaf12312ed4cfcbb3" translate="yes" xml:space="preserve">
          <source>DBM_Filter::null</source>
          <target state="translated">DBM_Filter::null</target>
        </trans-unit>
        <trans-unit id="f2b61c34157f644580714175a9ac63fc9b039644" translate="yes" xml:space="preserve">
          <source>DBM_Filter::null - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter :: null-DBM_Filter에 대한 필터</target>
        </trans-unit>
        <trans-unit id="9bc092e44e5524b9cfa3d26c271d34f1880924e0" translate="yes" xml:space="preserve">
          <source>DBM_Filter::utf8</source>
          <target state="translated">DBM_Filter::utf8</target>
        </trans-unit>
        <trans-unit id="1bfbf4c2c625b28768968c9e40b648dd9c14d44d" translate="yes" xml:space="preserve">
          <source>DBM_Filter::utf8 - filter for DBM_Filter</source>
          <target state="translated">DBM_Filter :: utf8-DBM_Filter에 대한 필터</target>
        </trans-unit>
        <trans-unit id="b02f6970eb3456617162054c6756321f766cb936" translate="yes" xml:space="preserve">
          <source>DB_BTREE</source>
          <target state="translated">DB_BTREE</target>
        </trans-unit>
        <trans-unit id="b33927ab202d8fc0904f1f9b9d856b0b54625b77" translate="yes" xml:space="preserve">
          <source>DB_File</source>
          <target state="translated">DB_File</target>
        </trans-unit>
        <trans-unit id="2c972e69463b8f58734f3a05c1368f9d2f81dba9" translate="yes" xml:space="preserve">
          <source>DB_File - Perl5 access to Berkeley DB version 1.x</source>
          <target state="translated">DB_File-Berkeley DB 버전 1.x에 대한 Perl5 액세스</target>
        </trans-unit>
        <trans-unit id="39dffad4b26fe77aef729449dbd757ed61bcfd3a" translate="yes" xml:space="preserve">
          <source>DB_File tests failing on Tru64</source>
          <target state="translated">Tru64에서 DB_File 테스트 실패</target>
        </trans-unit>
        <trans-unit id="70c0dec73cd04aa605d8521bd81cda83ad9852d0" translate="yes" xml:space="preserve">
          <source>DB_HASH</source>
          <target state="translated">DB_HASH</target>
        </trans-unit>
        <trans-unit id="a90a8db476a6644718df5c14fa00dae64a074e16" translate="yes" xml:space="preserve">
          <source>DB_RECNO</source>
          <target state="translated">DB_RECNO</target>
        </trans-unit>
        <trans-unit id="1214b29ce37cdd875514a6b9e684feaa105d5701" translate="yes" xml:space="preserve">
          <source>DB_RECNO allows both fixed-length and variable-length flat text files to be manipulated using the same key/value pair interface as in DB_HASH and DB_BTREE. In this case the key will consist of a record (line) number.</source>
          <target state="translated">DB_RECNO를 사용하면 고정 길이 및 가변 길이 플랫 텍스트 파일을 DB_HASH 및 DB_BTREE와 동일한 키 / 값 쌍 인터페이스를 사용하여 조작 할 수 있습니다. 이 경우 키는 레코드 (행) 번호로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="54300d66c5de040df830a07fcc62363319edc6b3" translate="yes" xml:space="preserve">
          <source>DB_RECNO provides an interface to flat text files. Both variable and fixed length records are supported.</source>
          <target state="translated">DB_RECNO는 일반 텍스트 파일에 대한 인터페이스를 제공합니다. 가변 길이 레코드와 고정 길이 레코드가 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c84dd33284289aa30abfb4901524e660dc3f8fe1" translate="yes" xml:space="preserve">
          <source>DCL$PATH</source>
          <target state="translated">DCL$PATH</target>
        </trans-unit>
        <trans-unit id="0a9147164ebeee67def0458db65d380af3d847bd" translate="yes" xml:space="preserve">
          <source>DDD over gdb</source>
          <target state="translated">gdb를 통한 DDD</target>
        </trans-unit>
        <trans-unit id="bc02c571c975735551b89853409b435a7d2a911b" translate="yes" xml:space="preserve">
          <source>DEBUGGING</source>
          <target state="translated">DEBUGGING</target>
        </trans-unit>
        <trans-unit id="e5ed518114c601867e2002411abd0ab6c5204b58" translate="yes" xml:space="preserve">
          <source>DECIMAL PLACES IN NUMBER FORMATTING</source>
          <target state="translated">숫자 형식의 소수 자릿수</target>
        </trans-unit>
        <trans-unit id="a13b287cbf68e2d072abe367ec3597bf2a1719da" translate="yes" xml:space="preserve">
          <source>DECLARATION_FOR_LC_NUMERIC_MANIPULATION</source>
          <target state="translated">DECLARATION_FOR_LC_NUMERIC_MANIPULATION</target>
        </trans-unit>
        <trans-unit id="5724e2ad6fe494700810dd95224d82adbc1f0212" translate="yes" xml:space="preserve">
          <source>DECLARING VERSIONS</source>
          <target state="translated">버전 선언</target>
        </trans-unit>
        <trans-unit id="358d58239d98fa4218521cbacf3de57cd95c2f96" translate="yes" xml:space="preserve">
          <source>DEEP EVENT INTERCEPTION</source>
          <target state="translated">딥 이벤트 인터 셉션</target>
        </trans-unit>
        <trans-unit id="81f6de8d5c0ecb34b6b96adc9154a88c9ddbeca9" translate="yes" xml:space="preserve">
          <source>DEFAULT_TYPE</source>
          <target state="translated">DEFAULT_TYPE</target>
        </trans-unit>
        <trans-unit id="1a29c0a9e5d031b1085dd3a49cebd323e159b0e8" translate="yes" xml:space="preserve">
          <source>DEFINE</source>
          <target state="translated">DEFINE</target>
        </trans-unit>
        <trans-unit id="72e25783db89a734a8c44381188ac1bdfc0af08b" translate="yes" xml:space="preserve">
          <source>DEFINE_VERSION: -D line to set the module version when compiling</source>
          <target state="translated">DEFINE_VERSION : 컴파일 할 때 모듈 버전을 설정하는 -D 행</target>
        </trans-unit>
        <trans-unit id="fb047f1c6b1e76a02beec100d3b58403874139af" translate="yes" xml:space="preserve">
          <source>DEFINITIONS</source>
          <target state="translated">DEFINITIONS</target>
        </trans-unit>
        <trans-unit id="141ddc055875204119c8e805b6fc66def02e7928" translate="yes" xml:space="preserve">
          <source>DEFSV</source>
          <target state="translated">DEFSV</target>
        </trans-unit>
        <trans-unit id="3cc8567954f6ca3e5e003d24429635955d1d02f9" translate="yes" xml:space="preserve">
          <source>DEFUNCT</source>
          <target state="translated">DEFUNCT</target>
        </trans-unit>
        <trans-unit id="bc2641a83f190fb20fd0dea288e56be69c367a3f" translate="yes" xml:space="preserve">
          <source>DELETE this, key</source>
          <target state="translated">이, 키 삭제</target>
        </trans-unit>
        <trans-unit id="83e39656dc7ac7175a510ee6558f6f575c96339a" translate="yes" xml:space="preserve">
          <source>DEPRECATED</source>
          <target state="translated">DEPRECATED</target>
        </trans-unit>
        <trans-unit id="e89c118ad5daaa7474bf247f474ec247a9347c0f" translate="yes" xml:space="preserve">
          <source>DEPRECATED FIELDS</source>
          <target state="translated">지원 중단 된 필드</target>
        </trans-unit>
        <trans-unit id="843aca6679538132ccb07a5bbb4015eab41705b8" translate="yes" xml:space="preserve">
          <source>DEPRECATED SETTER</source>
          <target state="translated">사용되지 않는 세터</target>
        </trans-unit>
        <trans-unit id="e0dc4b2a8e17072634cdeee1910633cab2fa2010" translate="yes" xml:space="preserve">
          <source>DEPRECATED! It is planned to remove this function from a future release of Perl. Do not use it for new code; remove it from existing code.</source>
          <target state="translated">더 이상 사용되지 않습니다! 향후 Perl 릴리스에서이 기능을 제거 할 계획입니다. 새 코드에는 사용하지 마십시오. 기존 코드에서 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a157b2a5a436f4b25182b22c822a40b087fde127" translate="yes" xml:space="preserve">
          <source>DEPRECATED!!!</source>
          <target state="translated">DEPRECATED!!!</target>
        </trans-unit>
        <trans-unit id="115aa5137a9a892800a38fc4d9843ec7fec593bb" translate="yes" xml:space="preserve">
          <source>DEPTH</source>
          <target state="translated">DEPTH</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="482cfbb4d161895b916cfe86448be09cf453b56c" translate="yes" xml:space="preserve">
          <source>DESERIALISATION</source>
          <target state="translated">DESERIALISATION</target>
        </trans-unit>
        <trans-unit id="8d2fccfa70475aefbaa7a6f81f980ffa768ff6fa" translate="yes" xml:space="preserve">
          <source>DESIGN</source>
          <target state="translated">DESIGN</target>
        </trans-unit>
        <trans-unit id="e7e49a1a7cfc18f44f90aaf5e4c176c2211c9f16" translate="yes" xml:space="preserve">
          <source>DESIGNING AND WRITING YOUR MODULE</source>
          <target state="translated">모듈 설계 및 작성</target>
        </trans-unit>
        <trans-unit id="96f5f4aededb8b0c79d31ac8d55739d3fc116c52" translate="yes" xml:space="preserve">
          <source>DESTDIR</source>
          <target state="translated">DESTDIR</target>
        </trans-unit>
        <trans-unit id="02f56a7bf01c1a870e819952336349625f50e2b7" translate="yes" xml:space="preserve">
          <source>DESTROY</source>
          <target state="translated">DESTROY</target>
        </trans-unit>
        <trans-unit id="ba5ed7d43143f7f29b35bcc06e0ce24bc7a75fec" translate="yes" xml:space="preserve">
          <source>DESTROY created new reference to dead object '%s'</source>
          <target state="translated">DESTROY가 죽은 개체 '% s'에 대한 새 참조를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="1ff5c6565199863ac272c46910743a376de19a9a" translate="yes" xml:space="preserve">
          <source>DESTROY this</source>
          <target state="translated">이것을 파괴하십시오</target>
        </trans-unit>
        <trans-unit id="1adeca5b77bafcb12821be20b10405718f410b83" translate="yes" xml:space="preserve">
          <source>DESTRUCT</source>
          <target state="translated">DESTRUCT</target>
        </trans-unit>
        <trans-unit id="9120423983b0359c503c676dadecd6bf8702131f" translate="yes" xml:space="preserve">
          <source>DETAILS</source>
          <target state="translated">DETAILS</target>
        </trans-unit>
        <trans-unit id="f459e7c8f3245e0293226ce8877ab5f73ac59297" translate="yes" xml:space="preserve">
          <source>DG/&lt;code&gt;UX&lt;/code&gt;</source>
          <target state="translated">DG/&lt;code&gt;UX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7563ce76d34297c6913b33a614a4437ccf7e6bb6" translate="yes" xml:space="preserve">
          <source>DIAGNOSTICS</source>
          <target state="translated">DIAGNOSTICS</target>
        </trans-unit>
        <trans-unit id="a5b9d804ae5fad3a77218682ff16189121bf6f54" translate="yes" xml:space="preserve">
          <source>DIR</source>
          <target state="translated">DIR</target>
        </trans-unit>
        <trans-unit id="d30f022e513ee2c57f70b560d5f72ef8e01c02c2" translate="yes" xml:space="preserve">
          <source>DIRECTORY may contain Unicode characters outside the system codepage. Once the directory has been created you can use Win32::GetANSIPathName() to get a name that can be passed to system calls and external programs.</source>
          <target state="translated">DIRECTORY는 시스템 코드 페이지 외부에 유니 코드 문자를 포함 할 수 있습니다. 디렉터리가 생성되면 Win32 :: GetANSIPathName ()을 사용하여 시스템 호출 및 외부 프로그램에 전달할 수있는 이름을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d963cb7accdf8bf2d3b0fee27a68f112e7214125" translate="yes" xml:space="preserve">
          <source>DISABLING IT</source>
          <target state="translated">IT 비활성화</target>
        </trans-unit>
        <trans-unit id="4a65cdb95e95be516de50c8b8315a8164bd86d99" translate="yes" xml:space="preserve">
          <source>DISCOURAGED</source>
          <target state="translated">DISCOURAGED</target>
        </trans-unit>
        <trans-unit id="0cdc39cb56481d72aa568a84bea6c810de4cbfcf" translate="yes" xml:space="preserve">
          <source>DISCOURAGED HUB RELATED FIELDS</source>
          <target state="translated">낙담 한 허브 관련 분야</target>
        </trans-unit>
        <trans-unit id="13c3fe3ccbbec70a886eeec7ac7440dbb52d9f65" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_BINNING</source>
          <target state="translated">DISK_LOGGING_BINNING</target>
        </trans-unit>
        <trans-unit id="7a157185b184f1b227940b739033d65ef1f54cf4" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_DUMP</source>
          <target state="translated">DISK_LOGGING_DUMP</target>
        </trans-unit>
        <trans-unit id="e43b520692501f2766a76771617e6715d9cada70" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_START</source>
          <target state="translated">DISK_LOGGING_START</target>
        </trans-unit>
        <trans-unit id="8d19e9f6a0ca4f1a2ef5075a1546d0ab644f90bb" translate="yes" xml:space="preserve">
          <source>DISK_LOGGING_STOP</source>
          <target state="translated">DISK_LOGGING_STOP</target>
        </trans-unit>
        <trans-unit id="d61aaf2b8c8a0d55b1cee7b943d2035b67af0d4d" translate="yes" xml:space="preserve">
          <source>DISPLAYING</source>
          <target state="translated">DISPLAYING</target>
        </trans-unit>
        <trans-unit id="b002d7dc5791b5f7d3653bb259ad5fa45517956f" translate="yes" xml:space="preserve">
          <source>DISTNAME</source>
          <target state="translated">DISTNAME</target>
        </trans-unit>
        <trans-unit id="8ab64362e89ef843d26689df9812bdd13670995f" translate="yes" xml:space="preserve">
          <source>DISTRIBUTIONS THAT BREAK OR NEED TO BE UPGRADED</source>
          <target state="translated">중단되거나 업그레이드가 필요한 배포</target>
        </trans-unit>
        <trans-unit id="8a32fb235d338277900548bd5f6b17adb9b20f4f" translate="yes" xml:space="preserve">
          <source>DISTVNAME</source>
          <target state="translated">DISTVNAME</target>
        </trans-unit>
        <trans-unit id="d60841c8292d01cba89dff01641abdeaf831a7a7" translate="yes" xml:space="preserve">
          <source>DJGPP</source>
          <target state="translated">DJGPP</target>
        </trans-unit>
        <trans-unit id="7f70d69b899f50f51b56a174e2446671d41836a8" translate="yes" xml:space="preserve">
          <source>DJGPP is a port of GNU C/C++ compiler and development tools to 32-bit, protected-mode environment on Intel 32-bit CPUs running MS-DOS and compatible operating systems, by DJ Delorie &amp;lt;dj@delorie.com&amp;gt; and friends.</source>
          <target state="translated">DJGPP는 DJ Delorie &amp;lt;dj@delorie.com&amp;gt; 및 친구들에 의해 MS-DOS 및 호환 운영 체제를 실행하는 Intel 32 비트 CPU에서 32 비트, 보호 모드 환경에 대한 GNU C / C ++ 컴파일러 및 개발 도구의 포트입니다.</target>
        </trans-unit>
        <trans-unit id="a86cad8e45e49bf55ca8b0433d5c8c99cb119b2a" translate="yes" xml:space="preserve">
          <source>DLBASE</source>
          <target state="translated">DLBASE</target>
        </trans-unit>
        <trans-unit id="642afab1b1fcbae1610092fbaf72f88d297127c7" translate="yes" xml:space="preserve">
          <source>DLEXT</source>
          <target state="translated">DLEXT</target>
        </trans-unit>
        <trans-unit id="c7fcac2a520878c5b29e5384d7123ef0d8af803b" translate="yes" xml:space="preserve">
          <source>DLL forwarder generation</source>
          <target state="translated">DLL 전달자 생성</target>
        </trans-unit>
        <trans-unit id="961816e97938085c744d70524c7f8b51961bbf33" translate="yes" xml:space="preserve">
          <source>DLL is loaded when</source>
          <target state="translated">DLL이로드 될 때</target>
        </trans-unit>
        <trans-unit id="b8fba0e1a3b69795fd7aeeb5df67e417334bbc08" translate="yes" xml:space="preserve">
          <source>DLL name mangling: 5.6.2 and beyond</source>
          <target state="translated">DLL 이름 맹 글링 : 5.6.2 이상</target>
        </trans-unit>
        <trans-unit id="5103efb394e8f4c78963cefb65d442857e85fbb9" translate="yes" xml:space="preserve">
          <source>DLL name mangling: pre 5.6.2</source>
          <target state="translated">DLL 이름 맹 글링 : 5.6.2 이전</target>
        </trans-unit>
        <trans-unit id="4199b473b62a8d487f588ef5f17c8e1e79fdfedc" translate="yes" xml:space="preserve">
          <source>DLLs in the system to be available</source>
          <target state="translated">사용 가능한 시스템의 DLL</target>
        </trans-unit>
        <trans-unit id="978758ab9cc6f96cf7ec21b1d65444522ce20560" translate="yes" xml:space="preserve">
          <source>DLLs was done due to misunderstanding of the OS/2 dynaloading model. OS/2 (effectively) maintains two different tables of loaded DLL:</source>
          <target state="translated">OS / 2 dynaloading 모델에 대한 오해로 인해 DLL이 수행되었습니다. OS / 2는 (실제적으로)로드 된 DLL의 두 가지 다른 테이블을 유지 관리합니다.</target>
        </trans-unit>
        <trans-unit id="d29ac676a5bbf39131fc0934d6dded7512d8a28a" translate="yes" xml:space="preserve">
          <source>DL_FUNCS</source>
          <target state="translated">DL_FUNCS</target>
        </trans-unit>
        <trans-unit id="3fb25c876e55ff6368868869480f86c888666251" translate="yes" xml:space="preserve">
          <source>DL_VARS</source>
          <target state="translated">DL_VARS</target>
        </trans-unit>
        <trans-unit id="e72095491ba9a045230bfe18eae0af9d9f28e15a" translate="yes" xml:space="preserve">
          <source>DO NOT MIX MULTIPLE ENCODINGS</source>
          <target state="translated">여러 인코딩을 혼합하지 마십시오</target>
        </trans-unit>
        <trans-unit id="321641aef17a94c7440c8b75a28914642814b302" translate="yes" xml:space="preserve">
          <source>DO NOT PUT TOO MANY SUSPECTS! Don't you try something like this!</source>
          <target state="translated">너무 많은 의심을 가하지 마십시오! 이런 식으로 시도하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="a4b1f89571502a08857610f6cdeeb35b2b2aaaaf" translate="yes" xml:space="preserve">
          <source>DO NOT USE this pragma in scripts that have multiple &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt; active. The locale is not local to a single thread. Another thread may change the locale at any time, which could cause at a minimum that a given thread is operating in a locale it isn't expecting to be in. On some platforms, segfaults can also occur. The locale change need not be explicit; some operations cause perl to change the locale itself. You are vulnerable simply by having done a &lt;code&gt;&quot;use locale&quot;&lt;/code&gt;.</source>
          <target state="translated">여러 &lt;a href=&quot;threads&quot;&gt;스레드가&lt;/a&gt; 활성화 된 스크립트에서는이 pragma를 사용하지 마십시오 . 로케일은 단일 스레드에 국한되지 않습니다. 다른 스레드는 언제든지 로케일을 변경할 수 있습니다. 이로 인해 최소한 주어진 스레드가 예상하지 않은 로케일에서 작동 할 수 있습니다. 일부 플랫폼에서는 segfault가 발생할 수도 있습니다. 로케일 변경은 명시적일 필요는 없습니다. 일부 작업으로 인해 perl이 로케일 자체를 변경합니다. 단순히 &lt;code&gt;&quot;use locale&quot;&lt;/code&gt; 을 수행함으로써 취약합니다 .</target>
        </trans-unit>
        <trans-unit id="b3cd2cb59fe6d99c224725e9d49cb8e5811713a2" translate="yes" xml:space="preserve">
          <source>DOAP</source>
          <target state="translated">DOAP</target>
        </trans-unit>
        <trans-unit id="96cc00d75846a718bd722cef8a33a50a6d0f5535" translate="yes" xml:space="preserve">
          <source>DOCUMENTATION</source>
          <target state="translated">DOCUMENTATION</target>
        </trans-unit>
        <trans-unit id="6ec3afab8faec77e185bbb803869543c5a657284" translate="yes" xml:space="preserve">
          <source>DOCUMENTING YOUR MODULE</source>
          <target state="translated">모듈 문서화</target>
        </trans-unit>
        <trans-unit id="02f41a445016e470834af06602c2bcd22847dea6" translate="yes" xml:space="preserve">
          <source>DOES</source>
          <target state="translated">DOES</target>
        </trans-unit>
        <trans-unit id="2b9d46deee31dec2356e6ea780da6061ac78b5eb" translate="yes" xml:space="preserve">
          <source>DOES($role)</source>
          <target state="translated">DOES($role)</target>
        </trans-unit>
        <trans-unit id="1f704c5a746c1169e4ea5016bf3a119ea03e6184" translate="yes" xml:space="preserve">
          <source>DOS also treats several filenames as special, such as</source>
          <target state="translated">DOS는 또한 여러 파일 이름을 다음과 같이 특수한 것으로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="2613d94608f3128686c4d00e8f6984910962bf29" translate="yes" xml:space="preserve">
          <source>DOS also treats several filenames as special, such as AUX, PRN, NUL, CON, COM1, LPT1, LPT2, etc. Unfortunately, sometimes these filenames won't even work if you include an explicit directory prefix. It is best to avoid such filenames, if you want your code to be portable to DOS and its derivatives. It's hard to know what these all are, unfortunately.</source>
          <target state="translated">DOS는 또한 AUX, PRN, NUL, CON, COM1, LPT1, LPT2 등과 같은 여러 파일 이름을 특수한 것으로 취급합니다. 불행히도 때로는 명시 적 디렉토리 접두사를 포함하면 이러한 파일 이름이 작동하지 않을 수도 있습니다. 코드를 DOS와 그 파생물로 이식 가능하게하려면 그러한 파일 이름을 사용하지 않는 것이 가장 좋습니다. 불행히도이 모든 것들이 무엇인지 아는 것은 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="5340493a66303fc8d8a5c954e9bf8a43cd32f247" translate="yes" xml:space="preserve">
          <source>DOS and Derivatives</source>
          <target state="translated">DOS와 파생 상품</target>
        </trans-unit>
        <trans-unit id="9aa2dc24c805c53edba7676333ae68552dfd57a4" translate="yes" xml:space="preserve">
          <source>DOS like globbing and then some</source>
          <target state="translated">글 로빙과 같은 DOS</target>
        </trans-unit>
        <trans-unit id="7d8fd5f2c8edcce479637c27bb0e3ab518146c38" translate="yes" xml:space="preserve">
          <source>DOS specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils :: MM_Unix의 DOS 특정 서브 클래스</target>
        </trans-unit>
        <trans-unit id="473d3acc2af8ba63261a26a1b7f5515a6891c343" translate="yes" xml:space="preserve">
          <source>DOS, OS/2, VMS, VOS, and Windows can work similarly to Unix with &lt;code&gt;/&lt;/code&gt; as path separator, or in their own idiosyncratic ways (such as having several root directories and various &quot;unrooted&quot; device files such NIL: and LPT:).</source>
          <target state="translated">DOS, OS / 2, VMS, VOS 및 Windows는 경로 구분 기호 로 &lt;code&gt;/&lt;/code&gt; 를 사용하거나 고유 한 방식 (예 : 여러 루트 디렉토리 및 NIL : 및 LPT :와 같은 다양한 &quot;루팅되지 않은&quot;장치 파일을 갖는 등)으로 Unix와 유사하게 작동 할 수 있습니다 . .</target>
        </trans-unit>
        <trans-unit id="f0c20586de860bc6f97df2e7ba37087e1172c10b" translate="yes" xml:space="preserve">
          <source>DO_UTF8</source>
          <target state="translated">DO_UTF8</target>
        </trans-unit>
        <trans-unit id="654efd9c9792936a130d6037516309b5bdddee38" translate="yes" xml:space="preserve">
          <source>DPMI is required for RSX.</source>
          <target state="translated">RSX에는 DPMI가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d06236ed2033a3b093acb45fc3a436ea6c180ce2" translate="yes" xml:space="preserve">
          <source>DSM 5</source>
          <target state="translated">DSM 5</target>
        </trans-unit>
        <trans-unit id="f98d27ba9b72edfc43798d7f1ed78687b2e3af30" translate="yes" xml:space="preserve">
          <source>DSM 6</source>
          <target state="translated">DSM 6</target>
        </trans-unit>
        <trans-unit id="53950eb900f2f4e44642ec5b04b999f300de3b20" translate="yes" xml:space="preserve">
          <source>DTrace Dynamic Tracing Guide</source>
          <target state="translated">DTrace 동적 추적 가이드</target>
        </trans-unit>
        <trans-unit id="2d2a24951ce705488575783be4472a26b333751c" translate="yes" xml:space="preserve">
          <source>DTrace is a framework for comprehensive system- and application-level tracing. Perl is a DTrace</source>
          <target state="translated">DTrace는 포괄적 인 시스템 및 응용 프로그램 수준 추적을위한 프레임 워크입니다. 펄은 DTrace입니다</target>
        </trans-unit>
        <trans-unit id="e40b5856dd8c24e8d723e8c4ea9c52cd2cd87d71" translate="yes" xml:space="preserve">
          <source>DTrace: Dynamic Tracing in Oracle Solaris, Mac OS X and FreeBSD</source>
          <target state="translated">DTrace : Oracle Solaris, Mac OS X 및 FreeBSD의 동적 추적</target>
        </trans-unit>
        <trans-unit id="12c551f6b7505c3f3f92e74cd439cab122c22195" translate="yes" xml:space="preserve">
          <source>DUMB</source>
          <target state="translated">DUMB</target>
        </trans-unit>
        <trans-unit id="fac3a6812b938bfbdd2af221e2fba7ec856f466e" translate="yes" xml:space="preserve">
          <source>DUMP</source>
          <target state="translated">DUMP</target>
        </trans-unit>
        <trans-unit id="5dd03edb023c569611455b32eb75df8f09dbeaae" translate="yes" xml:space="preserve">
          <source>DUMP_PRE_OPTIMIZE</source>
          <target state="translated">DUMP_PRE_OPTIMIZE</target>
        </trans-unit>
        <trans-unit id="d5bf3f40de5d663351b116d65dea7bcc046dcb12" translate="yes" xml:space="preserve">
          <source>DWIM is an acronym for &amp;ldquo;Do What I Mean&amp;rdquo;, the principle that something should just do what you want it to do without an undue amount of fuss. A bit of code that does &amp;ldquo;dwimming&amp;rdquo; is a &amp;ldquo;dwimmer&amp;rdquo;. Dwimming can require a great deal of behind-the-scenes magic, which (if it doesn&amp;rsquo;t stay properly behind the scenes) is called a &lt;b&gt;dweomer&lt;/b&gt; instead.</source>
          <target state="translated">DWIM은&amp;ldquo;무엇을해야합니까?&amp;rdquo;의 약어로, 과도한 소란없이 무언가를 원하는대로해야한다는 원칙입니다. &amp;ldquo;떨림&amp;rdquo;을하는 약간의 코드는&amp;ldquo;돌 박이&amp;rdquo;입니다. Dwimming은 많은 비하인드 스토리 매직을 필요로 할 수 있습니다. (장면 뒤에 제대로 머물러 있지 않으면) 대신 &lt;b&gt;dweomer&lt;/b&gt; 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="6a4756a7fe215f542af5cbd20be5f1fc81af3aae" translate="yes" xml:space="preserve">
          <source>Dagfinn Ilmari Manns&amp;aring;ker &amp;lt;ilmari@ilmari.org&amp;gt;</source>
          <target state="translated">Dagfinn Ilmari Manns&amp;aring;ker &amp;lt;ilmari@ilmari.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85028126eeeaacb6fe3db27b148fabc61b38f172" translate="yes" xml:space="preserve">
          <source>Damian Conway</source>
          <target state="translated">데미안 콘웨이</target>
        </trans-unit>
        <trans-unit id="84aeaa4ed1041b265c8434cc722f5bbd7d82bf67" translate="yes" xml:space="preserve">
          <source>Damian Conway (damian@conway.org)</source>
          <target state="translated">Damian Conway (damian@conway.org)</target>
        </trans-unit>
        <trans-unit id="56a7a2a736c65870e75794d64c28905d7b7353ac" translate="yes" xml:space="preserve">
          <source>Damian Conway (damian@conway.org). The maintainer of this module is now Rafael Garcia-Suarez (rgarciasuarez@gmail.com).</source>
          <target state="translated">Damian Conway (damian@conway.org). 이 모듈의 관리자는 이제 Rafael Garcia-Suarez (rgarciasuarez@gmail.com)입니다.</target>
        </trans-unit>
        <trans-unit id="7337fc3e62786bae0521c6629b00762523ec38bf" translate="yes" xml:space="preserve">
          <source>Damian Conway's &lt;a href=&quot;Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt; handles all of the thinking for you.</source>
          <target state="translated">Damian Conway의 &lt;a href=&quot;Text::Autoformat&quot;&gt;Text :: Autoformat&lt;/a&gt; 은 모든 생각을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d1f605e1f77b8db2ab180142323e96f99783331d" translate="yes" xml:space="preserve">
          <source>Damian Conway's &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt; handles all of the thinking for you.</source>
          <target state="translated">Damian Conway의 &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text :: Autoformat&lt;/a&gt; 은 모든 생각을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="013100b61f75e2c83db9a81cfe4c655763dd9678" translate="yes" xml:space="preserve">
          <source>Damyan Ivanov &amp;lt;dam@cpan.org&amp;gt;</source>
          <target state="translated">다 미안 이바노프 &amp;lt;dam@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1b7acd7262a4bf00ef59ebb0ab8de0bdf3f6774a" translate="yes" xml:space="preserve">
          <source>Dan Sugalski &amp;lt;dan@sidhe.org&amp;gt;</source>
          <target state="translated">Dan Sugalski &amp;lt;dan@sidhe.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2db3f6d7414ff15624d9a6080d6aa063705cba8a" translate="yes" xml:space="preserve">
          <source>Dan Sugalski &amp;lt;dan@sidhe.org&amp;lt;gt&amp;gt;</source>
          <target state="translated">댄 수갈 스키 &amp;lt;dan@sidhe.org &amp;lt;gt&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e2aa4c3feca95cf46384d3bae7d9121f26ade970" translate="yes" xml:space="preserve">
          <source>Dancer2</source>
          <target state="translated">Dancer2</target>
        </trans-unit>
        <trans-unit id="f5fbfc9cec6cd72e230b1bbe73cbb08d9ccf37da" translate="yes" xml:space="preserve">
          <source>Daniel S. Lewart &amp;lt;</source>
          <target state="translated">다니엘 에스 레 워트 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="7fd1dfde23d6a5c5d15d0aee8437a3fd73417fd6" translate="yes" xml:space="preserve">
          <source>Daniel S. Sterling has written a script that uses &lt;code&gt;IO::Uncompress::UnZip&lt;/code&gt; to read a zip file and unzip its contents to disk.</source>
          <target state="translated">Daniel S. Sterling은 &lt;code&gt;IO::Uncompress::UnZip&lt;/code&gt; 을 사용하여 zip 파일을 읽고 내용을 디스크에 압축 해제 하는 스크립트를 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="8ed6fbf94844a47ecf83411b63cf050c8d28ac5b" translate="yes" xml:space="preserve">
          <source>Data Structures</source>
          <target state="translated">데이터 구조</target>
        </trans-unit>
        <trans-unit id="5cf272d33425f40ddbde3e44d761e3fc7c061ec7" translate="yes" xml:space="preserve">
          <source>Data Types and Data Type Utilities</source>
          <target state="translated">데이터 유형 및 데이터 유형 유틸리티</target>
        </trans-unit>
        <trans-unit id="6a99f8e09e7fe8334e0578359f60485516d4d7ce" translate="yes" xml:space="preserve">
          <source>Data after the &lt;code&gt;__DATA__&lt;/code&gt; token in a module is read using the FOOBAR::DATA filehandle. &lt;code&gt;__END__&lt;/code&gt; can still be used to denote the end of the &lt;code&gt;__DATA__&lt;/code&gt; section if followed by the token DATA - this is supported by the &lt;b&gt;SelfLoader&lt;/b&gt;. The &lt;code&gt;FOOBAR::DATA&lt;/code&gt; filehandle is left open if an &lt;code&gt;__END__&lt;/code&gt; followed by a DATA is found, with the filehandle positioned at the start of the line after the &lt;code&gt;__END__&lt;/code&gt; token. If no &lt;code&gt;__END__&lt;/code&gt; token is present, or an &lt;code&gt;__END__&lt;/code&gt; token with no DATA token on the same line, then the filehandle is closed.</source>
          <target state="translated">모듈에서 &lt;code&gt;__DATA__&lt;/code&gt; 토큰 뒤의 데이터 는 FOOBAR :: DATA 파일 핸들을 사용하여 읽습니다. &lt;code&gt;__END__&lt;/code&gt; 는 토큰 DATA가 뒤에 오는 경우 &lt;code&gt;__DATA__&lt;/code&gt; 섹션 의 끝을 나타내는 데 계속 사용할 수 있습니다 . 이는 &lt;b&gt;SelfLoader에서&lt;/b&gt; 지원됩니다 . &lt;code&gt;FOOBAR::DATA&lt;/code&gt; 는 IF 핸들은 개방되어 &lt;code&gt;__END__&lt;/code&gt; 는 애프터 라인의 시작 부분에 위치하는 핸들과, 발견 된 DATA 하였다 &lt;code&gt;__END__&lt;/code&gt; 의 토큰. 어떠한 경우 &lt;code&gt;__END__&lt;/code&gt; 의 토큰이 존재하지 않는, 또는 &lt;code&gt;__END__&lt;/code&gt; 동일 라인 데이터 토큰으로 토큰을 그 핸들이 폐쇄된다.</target>
        </trans-unit>
        <trans-unit id="b652ad0a603cd7b47d334614ee31233474c9ab8d" translate="yes" xml:space="preserve">
          <source>Data flows through filters in the same order they appear in the source file. The uudecode filter appeared before the uncompress filter, so the source file will be uudecoded before it's uncompressed.</source>
          <target state="translated">데이터는 소스 파일에 나타나는 순서대로 필터를 통과합니다. uudecode 필터는 압축 해제 필터 앞에 나타 났으므로 소스 파일은 압축 해제되기 전에 uudecode됩니다.</target>
        </trans-unit>
        <trans-unit id="0f54a276a0206593cde1683f28ef51b63c547eda" translate="yes" xml:space="preserve">
          <source>Data mode (the default if you redirect or pipe output). This prints out your configuration data, without mailing anything. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data.</source>
          <target state="translated">데이터 모드 (출력을 리디렉션하거나 파이프하는 경우 기본값) 메일을 보내지 않고 구성 데이터를 인쇄합니다. 이를 &lt;b&gt;-v&lt;/b&gt; 와 함께 사용 하면보다 완전한 데이터를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d557701bc641745c6623ac4f8b0ca555597b2b1" translate="yes" xml:space="preserve">
          <source>Data mode (the default if you redirect or pipe output). This prints out your configuration data, without saving or mailing anything. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data.</source>
          <target state="translated">데이터 모드 (출력을 리디렉션하거나 파이프하는 경우 기본값). 저장하거나 메일로 보내지 않고 구성 데이터를 인쇄합니다. &lt;b&gt;-v&lt;/b&gt; 와 함께 사용 하면보다 완전한 데이터를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6afd37625bc0367f512a035f9204374b0b5ded2" translate="yes" xml:space="preserve">
          <source>Data paragraphs are typically used for inlining non-Pod data that is to be used (typically passed through) when rendering the document to a specific format:</source>
          <target state="translated">데이터 단락은 일반적으로 문서를 특정 형식으로 렌더링 할 때 사용되는 (일반적으로 전달되는) 포드 이외의 데이터를 인라인하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="94e20e5cd2604e57e9a0d23f02d2cd5d929f4af9" translate="yes" xml:space="preserve">
          <source>Data written to this layer should be UTF-8 encoded; data provided by this layer should be considered UTF-8 encoded. Can be set on any layer by &quot;:utf8&quot; dummy layer. Also set on &quot;:encoding&quot; layer.</source>
          <target state="translated">이 계층에 기록 된 데이터는 UTF-8로 인코딩되어야합니다. 이 계층에서 제공하는 데이터는 UTF-8로 인코딩 된 것으로 간주해야합니다. &quot;: utf8&quot;더미 레이어로 모든 레이어에서 설정할 수 있습니다. &quot;: encoding&quot;레이어에서도 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="97f1bb92da1e5e7c46dc020b7ec63efc045c0a68" translate="yes" xml:space="preserve">
          <source>Data: Arrays</source>
          <target state="translated">데이터 : 배열</target>
        </trans-unit>
        <trans-unit id="de5afcac5fbd23280f46d7161af449533e2cceda" translate="yes" xml:space="preserve">
          <source>Data: Dates</source>
          <target state="translated">데이터 : 날짜</target>
        </trans-unit>
        <trans-unit id="c411e3f24a5ba1334882780f16f3e9dbf1c659d9" translate="yes" xml:space="preserve">
          <source>Data: Hashes (Associative Arrays)</source>
          <target state="translated">데이터 : 해시 (연관 배열)</target>
        </trans-unit>
        <trans-unit id="fa7113830ed5a59d6505a9385c9ea0bd8127836a" translate="yes" xml:space="preserve">
          <source>Data: Misc</source>
          <target state="translated">데이터 : 기타</target>
        </trans-unit>
        <trans-unit id="3e48ca0ae51772567ede6f2a3afe45cb0267ef60" translate="yes" xml:space="preserve">
          <source>Data: Numbers</source>
          <target state="translated">데이터 : 숫자</target>
        </trans-unit>
        <trans-unit id="58c8a967dc7612bd6e8f1483414d85eb62228a36" translate="yes" xml:space="preserve">
          <source>Data: Strings</source>
          <target state="translated">데이터 : 문자열</target>
        </trans-unit>
        <trans-unit id="7d6e21c84e9451a0cec29192edeff8e21b85f25a" translate="yes" xml:space="preserve">
          <source>Data::Dumper</source>
          <target state="translated">Data::Dumper</target>
        </trans-unit>
        <trans-unit id="8c7c47d5705e647c7c4327d92117a5533391f0d0" translate="yes" xml:space="preserve">
          <source>Data::Dumper - stringified perl data structures, suitable for both printing and &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Data :: Dumper-인쇄 및 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 에 모두 적합한 문자열 화 된 펄 데이터 구조</target>
        </trans-unit>
        <trans-unit id="fef9e687e65f5d8221ce7ec7b5d6ce2858366c2e" translate="yes" xml:space="preserve">
          <source>Data::Dumper - stringified perl data structures, suitable for both printing and &lt;code&gt;eval&lt;/code&gt;</source>
          <target state="translated">Data :: Dumper-인쇄 및 &lt;code&gt;eval&lt;/code&gt; 모두에 적합한 문자열 화 된 펄 데이터 구조</target>
        </trans-unit>
        <trans-unit id="ff7ea8e9cb1cf0ef3310359653bd8d014b4e17b6" translate="yes" xml:space="preserve">
          <source>Data::Dumper doesn't restore the UTF8 flag; is it broken?</source>
          <target state="translated">Data :: Dumper는 UTF8 플래그를 복원하지 않습니다. 고장났어?</target>
        </trans-unit>
        <trans-unit id="ab7ab098392e93c21506df2dbe7e96ac2b061b9d" translate="yes" xml:space="preserve">
          <source>Data::Dumper will catalog all references encountered while dumping the values. Cross-references (in the form of names of substructures in perl syntax) will be inserted at all possible points, preserving any structural interdependencies in the original set of values. Structure traversal is depth-first, and proceeds in order from the first supplied value to the last.</source>
          <target state="translated">Data :: Dumper는 값을 덤프하는 동안 발생한 모든 참조를 카탈로그합니다. 상호 참조 (perl 구문의 하위 구조 이름 형식)는 가능한 모든 지점에 삽입되어 원래 값 세트의 구조적 상호 종속성을 유지합니다. 구조 순회는 깊이 우선이며 처음 제공된 값에서 마지막 순으로 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="2b8b99c4a4341af8f798f5df6b109d3c17485b41" translate="yes" xml:space="preserve">
          <source>Data::Peek</source>
          <target state="translated">Data::Peek</target>
        </trans-unit>
        <trans-unit id="5db04e397940af8e76d0eac5bf08574521dd22ae" translate="yes" xml:space="preserve">
          <source>Database Interfaces</source>
          <target state="translated">데이터베이스 인터페이스</target>
        </trans-unit>
        <trans-unit id="a109465d898ba0dfa0c491af35be82208576d8f0" translate="yes" xml:space="preserve">
          <source>Database Ties</source>
          <target state="translated">데이터베이스 타이</target>
        </trans-unit>
        <trans-unit id="8562930b64d8c57b6dc3907022c61a4e6a5ac83f" translate="yes" xml:space="preserve">
          <source>Datatypes</source>
          <target state="translated">Datatypes</target>
        </trans-unit>
        <trans-unit id="08bd72896a609a3391d219b4992ef11ec132d222" translate="yes" xml:space="preserve">
          <source>Date Calculations</source>
          <target state="translated">날짜 계산</target>
        </trans-unit>
        <trans-unit id="b79e7a3976aeb6614f1bdda5b3b2eeb809fac6f4" translate="yes" xml:space="preserve">
          <source>Date Comparisons</source>
          <target state="translated">날짜 비교</target>
        </trans-unit>
        <trans-unit id="6cd8d0e8ff629adf381174818e2158887210c59a" translate="yes" xml:space="preserve">
          <source>Date Parsing</source>
          <target state="translated">날짜 파싱</target>
        </trans-unit>
        <trans-unit id="27c49fc3479babc6dc4d9bc2dbc4c3a52288b570" translate="yes" xml:space="preserve">
          <source>Date comparisons are also possible, using the full suite of &quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt;=&quot;, &quot;&amp;lt;=&amp;gt;&quot;, &quot;==&quot; and &quot;!=&quot;.</source>
          <target state="translated">&quot;&amp;lt;&quot;, &quot;&amp;gt;&quot;, &quot;&amp;lt;=&quot;, &quot;&amp;gt; =&quot;, &quot;&amp;lt;=&amp;gt;&quot;, &quot;==&quot;및 &quot;! =&quot;의 전체 제품군을 사용하여 날짜 비교도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="73df32026317871c53f654bcdabd2dce42632974" translate="yes" xml:space="preserve">
          <source>Dave Rolsky &amp;lt;autarch@urth.org&amp;gt;</source>
          <target state="translated">Dave Rolsky &amp;lt;autarch@urth.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0207ed4e4e6fb701fd9b7e1499e69dd1c82b52ab" translate="yes" xml:space="preserve">
          <source>David Cantrell</source>
          <target state="translated">데이비드 캔 트렐</target>
        </trans-unit>
        <trans-unit id="07336554dae8f485f2a87eb2879f77cba49891f4" translate="yes" xml:space="preserve">
          <source>David E. Wheeler &lt;code&gt;dwheeler@cpan.org&lt;/code&gt;</source>
          <target state="translated">David E. Wheeler &lt;code&gt;dwheeler@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="521eee15b4f0c924fd9e4158c46d830c281a9a18" translate="yes" xml:space="preserve">
          <source>David F. Skoll (</source>
          <target state="translated">David F. Skoll (</target>
        </trans-unit>
        <trans-unit id="0474fa39a613bd7eeec7bea46ccb23c0ca12e724" translate="yes" xml:space="preserve">
          <source>David Fiander and Peter Prymmer with thanks to Dennis Longnecker and William Raffloer for valuable reports, LPAR and PTF feedback. Thanks to Mike MacIsaac and Egon Terwedow for SG24-5944-00. Thanks to Ignasi Roca for pointing out the floating point problems. Thanks to John Goodyear for dynamic loading help.</source>
          <target state="translated">귀중한 보고서, LPAR 및 PTF 피드백에 대해 Dennis Longnecker와 William Raffloer에게 감사하는 David Fiander와 Peter Prymmer. SG24-5944-00을위한 Mike MacIsaac과 Egon Terwedow에게 감사합니다. 부동 소수점 문제를 지적 해 준 Ignasi Roca에게 감사합니다. 동적 로딩 도움말에 대해 John Goodyear에게 감사합니다.</target>
        </trans-unit>
        <trans-unit id="2723c98cfbb72ae38f478d52e32129d9547f0fba" translate="yes" xml:space="preserve">
          <source>David Golden</source>
          <target state="translated">데이비드 골든</target>
        </trans-unit>
        <trans-unit id="cd5088267e514d749afe6cca6fd8c81585cd5cf6" translate="yes" xml:space="preserve">
          <source>David Golden &amp;lt;dagolden@cpan.org&amp;gt;</source>
          <target state="translated">데이비드 골든 &amp;lt;dagolden@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="deba347e322c03f87dfec124354df66a0d2c5023" translate="yes" xml:space="preserve">
          <source>David Golden &amp;lt;xdg@xdg.me&amp;gt;</source>
          <target state="translated">David Golden &amp;lt;xdg@xdg.me&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bcb25af33681aa0454630dbbe471750574b7de25" translate="yes" xml:space="preserve">
          <source>David Golden helps integrate this into the &lt;code&gt;CPAN.pm&lt;/code&gt; repos.</source>
          <target state="translated">David Golden은이를 &lt;code&gt;CPAN.pm&lt;/code&gt; 저장소에 통합하는 데 도움을줍니다 .</target>
        </trans-unit>
        <trans-unit id="d950594e5e25062fc0607cb94f5625028946e5a7" translate="yes" xml:space="preserve">
          <source>David Golden, &amp;lt;dagolden@cpan.org&amp;gt;</source>
          <target state="translated">데이비드 골든, &amp;lt;dagolden@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="75105a96462d4d37f10309058c6953d8e9f6b806" translate="yes" xml:space="preserve">
          <source>David Mitchell &amp;lt;davem@iabyn.com&amp;gt;</source>
          <target state="translated">David Mitchell &amp;lt;davem@iabyn.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8d95407bff3307b97ca4e8eedc2eced84a4438ae" translate="yes" xml:space="preserve">
          <source>David Muir Sharnoff &amp;lt;cpan@dave.sharnoff.org&amp;gt; with help from Tim Pierce and many many others.</source>
          <target state="translated">팀 피어스와 다른 많은 사람들의 도움을받은 David Muir Sharnoff &amp;lt;cpan@dave.sharnoff.org&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="e8377f90fb8277814679b9bc2dc6627a930eb98a" translate="yes" xml:space="preserve">
          <source>David P.C. Wollmann, Richard Soderberg, Sean M. Burke, Tom Christiansen, Jim Cromie, and Jeffrey Goff for useful advice.</source>
          <target state="translated">David PC Wollmann, Richard Soderberg, Sean M. Burke, Tom Christiansen, Jim Cromie 및 Jeffrey Goff가 유용한 조언을 구했습니다.</target>
        </trans-unit>
        <trans-unit id="6dc50b7e5578cabc8a56c27180f8325d04b836e0" translate="yes" xml:space="preserve">
          <source>David Richter,</source>
          <target state="translated">데이비드 리히터,</target>
        </trans-unit>
        <trans-unit id="c7b3466055eaf20f2cad818f5843a292b4ca2d80" translate="yes" xml:space="preserve">
          <source>David Steinbrunner</source>
          <target state="translated">데이비드 스타 인 브루너</target>
        </trans-unit>
        <trans-unit id="583efca859c6e35e11e70eb4225906fa634078ce" translate="yes" xml:space="preserve">
          <source>David Steinbrunner &amp;lt;dsteinbrunner@pobox.com&amp;gt;</source>
          <target state="translated">David Steinbrunner &amp;lt;dsteinbrunner@pobox.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="229d59d93e7e712ab429ce8580c0bd67e38e34f6" translate="yes" xml:space="preserve">
          <source>David Sundstrom &amp;lt;</source>
          <target state="translated">데이비드 선 스트롬 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="632c23ecaf6ac85ca778d2377fb7021a54136742" translate="yes" xml:space="preserve">
          <source>David Wheeler</source>
          <target state="translated">데이비드 휠러</target>
        </trans-unit>
        <trans-unit id="3dbe6b5baed3a5f5d582c4616ad071fd90846cec" translate="yes" xml:space="preserve">
          <source>Dealing with Concatenated bzip2 files</source>
          <target state="translated">연결된 bzip2 파일 다루기</target>
        </trans-unit>
        <trans-unit id="f0503142592629f2769705a0fac2de70daef3980" translate="yes" xml:space="preserve">
          <source>Dealing with Endian-ness</source>
          <target state="translated">엔디안을 다루기</target>
        </trans-unit>
        <trans-unit id="4b07c0c8522cdb2cc72776e062fea6abb7d94c76" translate="yes" xml:space="preserve">
          <source>Dealing with concatenated gzip files</source>
          <target state="translated">연결된 gzip 파일 다루기</target>
        </trans-unit>
        <trans-unit id="c3570d3bcf3e90fdaa0791aacca802822c577102" translate="yes" xml:space="preserve">
          <source>Deallocate the memory used by all arenas. Note that all the individual SV heads and bodies within the arenas must already have been freed.</source>
          <target state="translated">모든 경기장에서 사용되는 메모리를 할당 해제하십시오. 경기장 내 모든 개별 SV 헤드와 바디는 이미 해제되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b05ceded49f425c214f9e2db173be8c8e1a3a8d6" translate="yes" xml:space="preserve">
          <source>Deallocates a backtrace received from get_c_bracktrace.</source>
          <target state="translated">get_c_bracktrace에서 수신 한 역 추적을 할당 해제합니다.</target>
        </trans-unit>
        <trans-unit id="da8e6981129a80511c8976bfcddbe201d3626924" translate="yes" xml:space="preserve">
          <source>Dean Arnold &amp;lt;darnold AT presicient DOT com&amp;gt; - Stack size API</source>
          <target state="translated">Dean Arnold &amp;lt;darnold AT presicient DOT com&amp;gt;-스택 크기 API</target>
        </trans-unit>
        <trans-unit id="52cae2e43c8b90b4a803a754935d3f9c9fe43ef7" translate="yes" xml:space="preserve">
          <source>Dean Pearce &amp;lt;pearce@pythian.com&amp;gt;</source>
          <target state="translated">딘 피어스 &amp;lt;pearce@pythian.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="698676bca323af4b1ac23716a3335d96db984890" translate="yes" xml:space="preserve">
          <source>Debian GNU/kFreeBSD</source>
          <target state="translated">데비안 GNU / kFreeBSD</target>
        </trans-unit>
        <trans-unit id="36ea2a10971530d1f3b41de8bb6af5b551a6ff3c" translate="yes" xml:space="preserve">
          <source>Debian GNU/kFreeBSD systems also used LinuxThreads up until and including the 6.0 release, but after that moved to FreeBSD thread semantics, which are POSIX-like.</source>
          <target state="translated">데비안 GNU / kFreeBSD 시스템은 6.0 릴리스까지 LinuxThreads를 사용했지만 그 이후 POSIX와 같은 FreeBSD 스레드 의미론으로 옮겨졌습니다.</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="d7013dc1690e39306f211d819fa32173c56252c9" translate="yes" xml:space="preserve">
          <source>Debug Output</source>
          <target state="translated">디버그 출력</target>
        </trans-unit>
        <trans-unit id="5c4b9e36f90df0c09d1c303314621943c00786a6" translate="yes" xml:space="preserve">
          <source>Debug Viewer</source>
          <target state="translated">디버그 뷰어</target>
        </trans-unit>
        <trans-unit id="b05fb520e7c0513f4478767235e0d3c4b22c35e6" translate="yes" xml:space="preserve">
          <source>Debug a given program using threads (experimental).</source>
          <target state="translated">스레드를 사용하여 지정된 프로그램을 디버깅하십시오 (실험적).</target>
        </trans-unit>
        <trans-unit id="5f7d3acbef3ce732ed02816b2d1048d41d127c3b" translate="yes" xml:space="preserve">
          <source>Debug a given program via the &lt;code&gt;Devel::ptkdb&lt;/code&gt; GUI.</source>
          <target state="translated">&lt;code&gt;Devel::ptkdb&lt;/code&gt; GUI 를 통해 주어진 프로그램을 디버그하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5dc12bb0a737a0df5cc2f9d5aeb26402fd0d340" translate="yes" xml:space="preserve">
          <source>Debug information for events</source>
          <target state="translated">이벤트에 대한 디버그 정보</target>
        </trans-unit>
        <trans-unit id="bd4cb2194799882c3c66213892a49639bae1936c" translate="yes" xml:space="preserve">
          <source>Debug subroutine enter/exit.</source>
          <target state="translated">서브 루틴 입 / 출력 디버그.</target>
        </trans-unit>
        <trans-unit id="4333709c02ad553298735787840db205447e4bf6" translate="yes" xml:space="preserve">
          <source>Debugger Commands</source>
          <target state="translated">디버거 명령</target>
        </trans-unit>
        <trans-unit id="9914c0d0aed65ea8f1d64b044cdff2c3fddecc0d" translate="yes" xml:space="preserve">
          <source>Debugger Customization</source>
          <target state="translated">디버거 사용자 정의</target>
        </trans-unit>
        <trans-unit id="99ecabc4479d51c9a08930be819ce0858218cf75" translate="yes" xml:space="preserve">
          <source>Debugger Customization Functions</source>
          <target state="translated">디버거 사용자 정의 함수</target>
        </trans-unit>
        <trans-unit id="666cf254f85ea5d057a4582c5d8d5fdd8a5b7e41" translate="yes" xml:space="preserve">
          <source>Debugger Input/Output</source>
          <target state="translated">디버거 입력 / 출력</target>
        </trans-unit>
        <trans-unit id="9751ba81f798bbd7760a0c6d24e8d83eb20c30ba" translate="yes" xml:space="preserve">
          <source>Debugger Internal Variables</source>
          <target state="translated">디버거 내부 변수</target>
        </trans-unit>
        <trans-unit id="d026646d6b3410bc5de0b3ffc654c93e730dbd4e" translate="yes" xml:space="preserve">
          <source>Debugger Internals</source>
          <target state="translated">디버거 내부</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="b77aa217c50f6fe5bfd3f17727cebc255c68a2ca" translate="yes" xml:space="preserve">
          <source>Debugging Compile-Time Statements</source>
          <target state="translated">컴파일 타임 문 디버깅</target>
        </trans-unit>
        <trans-unit id="56a3daa806e9216f2f247d92a9789167d765ab05" translate="yes" xml:space="preserve">
          <source>Debugging Memory Usage</source>
          <target state="translated">메모리 사용량 디버깅</target>
        </trans-unit>
        <trans-unit id="7f9818adf8fc8493412c933de791d9f5c9b959e2" translate="yes" xml:space="preserve">
          <source>Debugging Perl Memory Usage</source>
          <target state="translated">펄 메모리 사용 디버깅</target>
        </trans-unit>
        <trans-unit id="9e08887136b7961fe7c673b82471c4d25acee0d8" translate="yes" xml:space="preserve">
          <source>Debugging Regular Expressions</source>
          <target state="translated">정규식 디버깅</target>
        </trans-unit>
        <trans-unit id="a55f46b26d2e609b7ed7dd3dcdfe13f913890ab9" translate="yes" xml:space="preserve">
          <source>Debugging Regular Expressions in perldebug</source>
          <target state="translated">perldebug에서 정규식 디버깅</target>
        </trans-unit>
        <trans-unit id="b148c2d0cd84634d55a9ffc8e11de74f37399218" translate="yes" xml:space="preserve">
          <source>Debugging Utilities</source>
          <target state="translated">디버깅 유틸리티</target>
        </trans-unit>
        <trans-unit id="ef6d58e6132c9b4c56f459b171bb00fc8fb32f2c" translate="yes" xml:space="preserve">
          <source>Debugging scripts</source>
          <target state="translated">스크립트 디버깅</target>
        </trans-unit>
        <trans-unit id="8057c32aee1676af868f8f55325f1ae849dbb6de" translate="yes" xml:space="preserve">
          <source>Debugging this module is more than a bit complex due to interference from the software producing the indices on CPAN, the mirroring process on CPAN, packaging, configuration, synchronicity, and even (gasp!) due to bugs within the CPAN.pm module itself.</source>
          <target state="translated">이 모듈을 디버깅하는 것은 CPAN에서 인덱스를 생성하는 소프트웨어, CPAN에서 미러링 프로세스, 패키징, 구성, 동기화 및 CPAN.pm 모듈 자체의 버그로 인한 심지어 짝수 (!)로 인한 간섭으로 인해 약간 복잡합니다.</target>
        </trans-unit>
        <trans-unit id="4c252d05f2a4c1c2f4d8596766940f8f4c5ee4cf" translate="yes" xml:space="preserve">
          <source>December 15, 2003</source>
          <target state="translated">2003 년 12 월 15 일</target>
        </trans-unit>
        <trans-unit id="f094f99267643c999093cfd79158b58c209161f0" translate="yes" xml:space="preserve">
          <source>December 9, 2003</source>
          <target state="translated">2003 년 12 월 9 일</target>
        </trans-unit>
        <trans-unit id="8c401279896f59c9ac4daaaace09acb4863e72b5" translate="yes" xml:space="preserve">
          <source>December, 2001; by Nicholas Clark: make timestr() recognise the style 'none' and return an empty string. If cmpthese is calling timethese, make it pass the style in. (so that 'none' will suppress output). Make sub new dump its debugging output to STDERR, to be consistent with everything else. All bugs found while writing a regression test.</source>
          <target state="translated">2001 년 12 월; 작성자 : Nicholas Clark : timestr ()이 '없음'스타일을 인식하고 빈 문자열을 반환합니다. cmpthese가 timethese를 호출하는 경우 스타일을 전달하십시오. 'none'은 출력을 억제합니다. sub new를 디버깅 결과를 STDERR에 덤프하여 다른 모든 것과 일치시킵니다. 회귀 테스트를 작성하는 동안 발견 된 모든 버그</target>
        </trans-unit>
        <trans-unit id="a39a923b41cc5f61bf60cc9e5e68a22cae934912" translate="yes" xml:space="preserve">
          <source>Decide what system you'll use for lexicon keys. If you insist, you can use opaque IDs (if you're nostalgic for &lt;code&gt;catgets&lt;/code&gt; ), but I have better suggestions in the section &quot;Entries in Each Lexicon&quot;, above. Assuming you opt for meaningful keys that double as values (like &quot;Minimum ([_1]) is larger than maximum ([_2])!\n&quot;), you'll have to settle on what language those should be in. For the sake of argument, I'll call this English, specifically American English, &quot;en-US&quot;.</source>
          <target state="translated">사전 키에 사용할 시스템을 결정하십시오. 주장한다면 불투명 한 ID를 사용할 수 있지만 ( &lt;code&gt;catgets&lt;/code&gt; 에 대해 향수가있는 경우 ) 위의 &quot;각 어휘집에있는 항목&quot;섹션에 더 나은 제안이 있습니다. &quot;최소 ([_1])가 최대 ([_2])! \ n&quot;와 같이 값으로 두 배가되는 의미있는 키를 선택한다고 가정하면 어떤 언어를 사용해야하는지 결정해야합니다. 논쟁을 위해서, 나는이 영어, 특히 미국 영어를 &quot;en-US&quot;라고 부를 것이다.</target>
        </trans-unit>
        <trans-unit id="567ce25d672809d1e36ac1580aa83a91aefeaa93" translate="yes" xml:space="preserve">
          <source>Decide what system you'll use for lexicon keys. If you insist, you can use opaque IDs (if you're nostalgic for &lt;code&gt;catgets&lt;/code&gt;), but I have better suggestions in the section &quot;Entries in Each Lexicon&quot;, above. Assuming you opt for meaningful keys that double as values (like &quot;Minimum ([_1]) is larger than maximum ([_2])!\n&quot;), you'll have to settle on what language those should be in. For the sake of argument, I'll call this English, specifically American English, &quot;en-US&quot;.</source>
          <target state="translated">사전 키에 사용할 시스템을 결정하십시오. 고집한다면 불투명 한 ID를 사용할 수 있지만 ( &lt;code&gt;catgets&lt;/code&gt; 를 그리워하는 경우 ) 위의 &quot;각 어휘집의 항목&quot;섹션에 더 나은 제안이 있습니다. 값으로 두 배가되는 의미있는 키 (예 : &quot;최소 ([_1])가 최대 값 ([_2]))! \ n&quot;)보다 큼)를 선택한다고 가정하면 어떤 언어로 설정해야하는지 결정해야합니다. 논쟁을 위해 저는 이것을 영어, 특히 미국 영어, &quot;en-US&quot;라고 부를 것입니다.</target>
        </trans-unit>
        <trans-unit id="627c1324f2a01e7e93a53d162190cb7f279f5d01" translate="yes" xml:space="preserve">
          <source>Decimal Versions</source>
          <target state="translated">10 진수 버전</target>
        </trans-unit>
        <trans-unit id="9e82bc7f3f2f04809cb3fcc827abe4332a30b1d3" translate="yes" xml:space="preserve">
          <source>Decimal versions</source>
          <target state="translated">10 진수 버전</target>
        </trans-unit>
        <trans-unit id="0b3304a0f3839ca4da3ebeb706c419c3e30bd556" translate="yes" xml:space="preserve">
          <source>Decimal versions always work</source>
          <target state="translated">10 진수 버전은 항상 작동합니다.</target>
        </trans-unit>
        <trans-unit id="6b490c34cbacee1cfe2476b581d24f0aa6fa99fb" translate="yes" xml:space="preserve">
          <source>Decimal versions are regular &quot;decimal numbers&quot;, with some limitations. They &lt;b&gt;must&lt;/b&gt; be non-negative and &lt;b&gt;must&lt;/b&gt; begin and end with a digit. A single underscore &lt;b&gt;may&lt;/b&gt; be included, but &lt;b&gt;must&lt;/b&gt; be between two digits. They &lt;b&gt;must not&lt;/b&gt; use exponential notation (&quot;1.23e-2&quot;).</source>
          <target state="translated">10 진수 버전은 몇 가지 제한이있는 일반 &quot;10 진수&quot;입니다. 그들은 &lt;b&gt;해야한다&lt;/b&gt; 음수하고 &lt;b&gt;있어야&lt;/b&gt; 시작하고 숫자로 끝납니다. 밑줄 하나를 포함 &lt;b&gt;할&lt;/b&gt; 수 있지만 두 자리 사이 &lt;b&gt;여야합니다&lt;/b&gt; . 그들은 &lt;b&gt;안&lt;/b&gt; 지수 표기법을 사용 ( &quot;1.23e-2&quot;).</target>
        </trans-unit>
        <trans-unit id="e65237c09174871af3b0c6f91fffc7ee7711c474" translate="yes" xml:space="preserve">
          <source>Decimal: regular decimal numbers (literal or in a string)</source>
          <target state="translated">십진수 : 일반 십진수 (리터럴 또는 문자열)</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="c2604e0c48edbf848a6d96ba3a8037bd0dc24ff4" translate="yes" xml:space="preserve">
          <source>Declaration and Access of Arrays of Arrays</source>
          <target state="translated">배열 배열의 선언 및 액세스</target>
        </trans-unit>
        <trans-unit id="ebfaff41dd116e96392e7550a2b66d9d22027082" translate="yes" xml:space="preserve">
          <source>Declaration of MORE ELABORATE RECORDS</source>
          <target state="translated">더 많은 우아한 기록의 선언</target>
        </trans-unit>
        <trans-unit id="5ec1670ea8c424f5ee15a9e695d0c44630da018c" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF ARRAYS</source>
          <target state="translated">배열 해시 선언</target>
        </trans-unit>
        <trans-unit id="b8c8706e060a6811d69b8d2fd72320a3142d6844" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF COMPLEX RECORDS</source>
          <target state="translated">복잡한 기록의 해시 선언</target>
        </trans-unit>
        <trans-unit id="4ce4e4163cd30ea8c4a041080be1e50e00906890" translate="yes" xml:space="preserve">
          <source>Declaration of a HASH OF HASHES</source>
          <target state="translated">해시 선언</target>
        </trans-unit>
        <trans-unit id="968cb53513edaef6840cbb9bd46e4ba68cbf91c3" translate="yes" xml:space="preserve">
          <source>Declaration of an ARRAY OF ARRAYS</source>
          <target state="translated">배열의 배열의 선언</target>
        </trans-unit>
        <trans-unit id="43a23bde1fe732a75628839289c49e738219d5a3" translate="yes" xml:space="preserve">
          <source>Declaration of an ARRAY OF HASHES</source>
          <target state="translated">해시 배열 선언</target>
        </trans-unit>
        <trans-unit id="b9b846963186dedc9a34aab11fab9a0a092e2d1b" translate="yes" xml:space="preserve">
          <source>Declarations</source>
          <target state="translated">Declarations</target>
        </trans-unit>
        <trans-unit id="ace74e4e37169605f0f6146d8b9c885b5f44e9a7" translate="yes" xml:space="preserve">
          <source>Declarative sugar</source>
          <target state="translated">선언적 설탕</target>
        </trans-unit>
        <trans-unit id="01b95bbd7c9d60ecf5c5308055fe69e1d280f03c" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; as a build-time dependency in &lt;code&gt;Makefile.PL&lt;/code&gt; (use &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; ), or in your &lt;code&gt;Build.PL&lt;/code&gt; (use &lt;code&gt;build_requires&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; 을 &lt;code&gt;Makefile.PL&lt;/code&gt; ( &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; 사용 ) 또는 &lt;code&gt;Build.PL&lt;/code&gt; ( &lt;code&gt;build_requires&lt;/code&gt; 사용 ) 에서 빌드 시간 종속성으로 선언 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e68e7a80e82df2bb0b805b303daa1a53223a3c4" translate="yes" xml:space="preserve">
          <source>Declare &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; as a build-time dependency in &lt;code&gt;Makefile.PL&lt;/code&gt; (use &lt;code&gt;BUILD_REQUIRES&lt;/code&gt;), or in your &lt;code&gt;Build.PL&lt;/code&gt; (use &lt;code&gt;build_requires&lt;/code&gt;).</source>
          <target state="translated">선언 &lt;code&gt;ExtUtils::Typemaps::Basic&lt;/code&gt; 에 빌드 타임 의존성 등의 &lt;code&gt;Makefile.PL&lt;/code&gt; (사용 &lt;code&gt;BUILD_REQUIRES&lt;/code&gt; ), 또는에서 &lt;code&gt;Build.PL&lt;/code&gt; (사용 &lt;code&gt;build_requires&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1b76a6d1632adb267d07f45f92fbd92ddebb3c0e" translate="yes" xml:space="preserve">
          <source>Declare Just &lt;code&gt;SP&lt;/code&gt; . This is actually identical to &lt;code&gt;dSP&lt;/code&gt; , and declares a local copy of perl's stack pointer, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;SP&lt;/code&gt; . (Available for backward source code compatibility with the old (Perl 5.005) thread model.)</source>
          <target state="translated">&lt;code&gt;SP&lt;/code&gt; 를 선언하십시오 . 이것은 실제로 &lt;code&gt;dSP&lt;/code&gt; 와 동일 하며 &lt;code&gt;SP&lt;/code&gt; 매크로 를 통해 사용 가능한 perl 스택 포인터의 로컬 사본을 선언합니다 . &lt;code&gt;SP&lt;/code&gt; 를 참조하십시오 . (이전 (Perl 5.005) 스레드 모델과의 하위 소스 코드 호환성에 사용 가능)</target>
        </trans-unit>
        <trans-unit id="b56ed01b996629d074d0fdf6c6a216abc4bb396f" translate="yes" xml:space="preserve">
          <source>Declare Just &lt;code&gt;SP&lt;/code&gt;. This is actually identical to &lt;code&gt;dSP&lt;/code&gt;, and declares a local copy of perl's stack pointer, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;&lt;a href=&quot;perlapi#SP&quot;&gt;&quot;SP&quot; in perlapi&lt;/a&gt;&lt;/code&gt;. (Available for backward source code compatibility with the old (Perl 5.005) thread model.)</source>
          <target state="translated">Just &lt;code&gt;SP&lt;/code&gt; 를 선언하십시오 . 이것은 실제로 &lt;code&gt;dSP&lt;/code&gt; 와 동일 하며 &lt;code&gt;SP&lt;/code&gt; 매크로 를 통해 사용할 수있는 perl 스택 포인터의 로컬 복사본을 선언합니다 . &lt;code&gt;&lt;a href=&quot;perlapi#SP&quot;&gt;&quot;SP&quot; in perlapi&lt;/a&gt;&lt;/code&gt; 참조하십시오 . (이전 (Perl 5.005) 스레드 모델과의 하위 소스 코드 호환성을 위해 사용 가능합니다.)</target>
        </trans-unit>
        <trans-unit id="dc1ce1b6356c80192e5bb53d511a5c94736f0701" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;a href=&quot;#write-FILEHANDLE&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; function. For example:</source>
          <target state="translated">&lt;a href=&quot;#write-FILEHANDLE&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 기능 에서 사용할 그림 형식을 선언하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b246d2c3a34b0309dc705ab2bf6fd78585237723" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 기능 에서 사용할 그림 형식을 선언하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1337e532e08b8945e760914191518070a82f311f" translate="yes" xml:space="preserve">
          <source>Declare a picture format for use by the &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; function. For example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 기능 에서 사용할 그림 형식을 선언하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="79b9fcb83aaabac99dc56e38a306c39d5ceed2f1" translate="yes" xml:space="preserve">
          <source>Declare a stack marker variable, &lt;code&gt;mark&lt;/code&gt; , for the XSUB. See &lt;code&gt;MARK&lt;/code&gt; and &lt;code&gt;dORIGMARK&lt;/code&gt; .</source>
          <target state="translated">XSUB에 대해 스택 마커 변수 인 &lt;code&gt;mark&lt;/code&gt; 를 선언하십시오 . &lt;code&gt;MARK&lt;/code&gt; 및 &lt;code&gt;dORIGMARK&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0457b452b99c247b988486bf8f78e075ca965b20" translate="yes" xml:space="preserve">
          <source>Declare a stack marker variable, &lt;code&gt;mark&lt;/code&gt;, for the XSUB. See &lt;code&gt;&lt;a href=&quot;#MARK&quot;&gt;&quot;MARK&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#dORIGMARK&quot;&gt;&quot;dORIGMARK&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">XSUB에 대해 스택 마커 변수 &lt;code&gt;mark&lt;/code&gt; 를 선언하십시오 . &lt;code&gt;&lt;a href=&quot;#MARK&quot;&gt;&quot;MARK&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#dORIGMARK&quot;&gt;&quot;dORIGMARK&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bc325f65b062b55c0a046c697861918ab5ba8a6" translate="yes" xml:space="preserve">
          <source>Declare a typedef named &lt;code&gt;my_cxt_t&lt;/code&gt; that is a structure that contains all the data that needs to be interpreter-local.</source>
          <target state="translated">인터프리터 로컬이어야하는 모든 데이터를 포함하는 구조 인 &lt;code&gt;my_cxt_t&lt;/code&gt; 라는 typedef를 선언하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f3343311ea82b57cf2a91faf914e7146706bc4b" translate="yes" xml:space="preserve">
          <source>Declare constants</source>
          <target state="translated">상수 선언</target>
        </trans-unit>
        <trans-unit id="af8f77c9ea265ba763b66cb03c64c9e96fac9b16" translate="yes" xml:space="preserve">
          <source>Declare local variables for a multicall. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;&quot;LIGHTWEIGHT CALLBACKS&quot; in perlcall&lt;/a&gt;.</source>
          <target state="translated">다중 호출을 위해 지역 변수를 선언합니다. &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcall의 &quot;경량 콜백&quot;을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e90d1629cda5e7b6f31494a6b20b0b96a93f8fec" translate="yes" xml:space="preserve">
          <source>Declare local variables for a multicall. See &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;LIGHTWEIGHT CALLBACKS in perlcall&lt;/a&gt;.</source>
          <target state="translated">다중 호출에 대한 지역 변수를 선언하십시오. &lt;a href=&quot;perlcall#LIGHTWEIGHT-CALLBACKS&quot;&gt;perlcall의 LIGHTWEIGHT CALLBACKS를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe8095595a1e11e48a82985239de9e9b7e44058b" translate="yes" xml:space="preserve">
          <source>Declare struct-like datatypes as Perl classes</source>
          <target state="translated">구조체와 유사한 데이터 유형을 Perl 클래스로 선언</target>
        </trans-unit>
        <trans-unit id="241be854b7c926b421f57938c176fa2dc1fc4342" translate="yes" xml:space="preserve">
          <source>Declare variables needed to save &lt;code&gt;errno&lt;/code&gt; and any operating system specific error number, and save them for optional later restoration by &lt;code&gt;RESTORE_ERRNO&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;errno&lt;/code&gt; 및 운영 체제 별 오류 번호 를 저장하는 데 필요한 변수를 선언 하고 &lt;code&gt;RESTORE_ERRNO&lt;/code&gt; 에서 선택적으로 나중에 복원 할 수 있도록 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="9b7cfb548ec82483872a79c2a5af52e54335bfc1" translate="yes" xml:space="preserve">
          <source>Declare variables needed to save &lt;code&gt;errno&lt;/code&gt; and any operating system specific error number.</source>
          <target state="translated">&lt;code&gt;errno&lt;/code&gt; 및 운영 체제 별 오류 번호 를 저장하는 데 필요한 변수를 선언하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd95c3fe676cb80336a8b7970197ea750ed934e1" translate="yes" xml:space="preserve">
          <source>Declares a block of tests you expect to fail and $why. Perhaps it's because you haven't fixed a bug or haven't finished a new feature:</source>
          <target state="translated">실패 할 것으로 예상되는 테스트 블록과 $ why를 선언합니다. 버그를 수정하지 않았거나 새로운 기능을 완료하지 않았기 때문일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4f6f2747e60da61911d87575aab690590f6d04d" translate="yes" xml:space="preserve">
          <source>Declares a local copy of perl's stack pointer for the XSUB, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;&lt;a href=&quot;#SP&quot;&gt;&quot;SP&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SP&lt;/code&gt; 매크로 를 통해 사용할 수있는 XSUB에 대한 perl 스택 포인터의 로컬 복사본을 선언합니다 . &lt;code&gt;&lt;a href=&quot;#SP&quot;&gt;&quot;SP&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b08be3bcb055a5bfcdfe0f7e147c5f7a01a9af4" translate="yes" xml:space="preserve">
          <source>Declares a local copy of perl's stack pointer for the XSUB, available via the &lt;code&gt;SP&lt;/code&gt; macro. See &lt;code&gt;SP&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;SP&lt;/code&gt; 매크로 를 통해 사용 가능한 XSUB에 대한 perl의 스택 포인터의 로컬 사본을 선언합니다 . &lt;code&gt;SP&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="775811626d86d0489442dc9b97620d79f2638c9b" translate="yes" xml:space="preserve">
          <source>Declares that no more items will be added to the queue.</source>
          <target state="translated">더 이상 항목이 대기열에 추가되지 않도록 선언합니다.</target>
        </trans-unit>
        <trans-unit id="a88496a0e111c684a669138708549e2de67d1e28" translate="yes" xml:space="preserve">
          <source>Declares that the stream accepts perl's</source>
          <target state="translated">스트림이 펄을 수락 함을 선언</target>
        </trans-unit>
        <trans-unit id="97a2147f033bc70f2e20dfc8e311b01cc7c8c8f3" translate="yes" xml:space="preserve">
          <source>Declares that this test will run an indeterminate number of tests.</source>
          <target state="translated">이 테스트는 불확실한 수의 테스트를 실행할 것이라고 선언합니다.</target>
        </trans-unit>
        <trans-unit id="6da56154a8de563d222245d4af173f8b457c59e3" translate="yes" xml:space="preserve">
          <source>Declares that you are done testing, no more tests will be run after this point.</source>
          <target state="translated">테스트가 완료되었다고 선언하면이 시점 이후에는 더 이상 테스트가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f54a9ff18bfc2ace3b413b7376085dbd08ce71d" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;a href=&quot;#my-VARLIST&quot;&gt;&lt;code&gt;my&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#state-VARLIST&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;a href=&quot;#package-NAMESPACE&quot;&gt;&lt;code&gt;package&lt;/code&gt;&lt;/a&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt;, like &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;ARGV&lt;/code&gt;, &lt;code&gt;ENV&lt;/code&gt;, and the punctuation variables.</source>
          <target state="translated">BLOCK 또는 나머지 컴파일 단위가 주어진 네임 스페이스에 있음을 선언합니다. 패키지 선언의 범위는 제공된 코드 BLOCK이거나 BLOCK이없는 경우 선언 자체에서 현재 범위의 끝까지 (둘러싸는 블록, 파일 또는 &lt;a href=&quot;#eval-EXPR&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; )입니다. 즉, BLOCK이없는 양식은 &lt;a href=&quot;#my-VARLIST&quot;&gt; &lt;code&gt;my&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#state-VARLIST&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#our-VARLIST&quot;&gt; &lt;code&gt;our&lt;/code&gt; &lt;/a&gt; 연산자 처럼 현재 범위의 끝을 통해 작동합니다. 이 범위의 모든 비정규 동적 식별자는 다른 &lt;a href=&quot;#package-NAMESPACE&quot;&gt; &lt;code&gt;package&lt;/code&gt; &lt;/a&gt; 선언에 의해 재정의 된 경우 또는 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; 와 같이 &lt;code&gt;main::&lt;/code&gt; 한정되는 특수 식별자 중 하나 인 경우를 제외하고 주어진 네임 스페이스에 있습니다., &lt;code&gt;ENV&lt;/code&gt; 및 구두점 변수.</target>
        </trans-unit>
        <trans-unit id="cd4907e397ad786d964786ed678ccb6ec918a061" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;code&gt;&lt;a href=&quot;package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt; , like &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; , and the punctuation variables.</source>
          <target state="translated">지정된 네임 스페이스에있는 것으로 BLOCK 또는 나머지 컴파일 단위를 선언합니다. 패키지 선언의 범위는 제공된 코드 BLOCK이거나 BLOCK이없는 경우 선언 자체에서 현재 범위의 끝 (포괄 블록, 파일 또는 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; )까지입니다. 즉, 블록이없는 형태의 단지처럼 현재 범위의 끝 부분을 통해 수술입니다 &lt;code&gt;&lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 운영자. 다른 &lt;code&gt;&lt;a href=&quot;package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; 선언으로 대체 되거나 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; 와 같이 &lt;code&gt;main::&lt;/code&gt; 한정되는 특수 식별자 중 하나 인 경우를 제외하고이 범위의 모든 규정되지 않은 동적 식별자는 지정된 네임 스페이스에 있습니다., &lt;code&gt;ENV&lt;/code&gt; 및 구두점 변수</target>
        </trans-unit>
        <trans-unit id="f8c0173916c6e4ea3e07071d4b7dde09c327c03c" translate="yes" xml:space="preserve">
          <source>Declares the BLOCK or the rest of the compilation unit as being in the given namespace. The scope of the package declaration is either the supplied code BLOCK or, in the absence of a BLOCK, from the declaration itself through the end of current scope (the enclosing block, file, or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;). That is, the forms without a BLOCK are operative through the end of the current scope, just like the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; operators. All unqualified dynamic identifiers in this scope will be in the given namespace, except where overridden by another &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; declaration or when they're one of the special identifiers that qualify into &lt;code&gt;main::&lt;/code&gt; , like &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; , &lt;code&gt;ENV&lt;/code&gt; , and the punctuation variables.</source>
          <target state="translated">지정된 네임 스페이스에있는 것으로 BLOCK 또는 나머지 컴파일 단위를 선언합니다. 패키지 선언의 범위는 제공된 코드 BLOCK이거나 BLOCK이없는 경우 선언 자체에서 현재 범위의 끝 (포괄 블록, 파일 또는 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; )까지입니다. 즉, 블록이없는 형태의 단지처럼 현재 범위의 끝 부분을 통해 수술입니다 &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 운영자. 다른 &lt;code&gt;&lt;a href=&quot;functions/package&quot;&gt;package&lt;/a&gt;&lt;/code&gt; 선언으로 대체 되거나 &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;ARGV&lt;/code&gt; 와 같이 &lt;code&gt;main::&lt;/code&gt; 한정되는 특수 식별자 중 하나 인 경우를 제외하고이 범위의 모든 규정되지 않은 동적 식별자는 지정된 네임 스페이스에 있습니다., &lt;code&gt;ENV&lt;/code&gt; 및 문장 부호 변수</target>
        </trans-unit>
        <trans-unit id="f1da10a5e5d78d8ddd42db2cd6041c8878256f5e" translate="yes" xml:space="preserve">
          <source>Declaring &lt;code&gt;@EXPORT_OK&lt;/code&gt; and Friends</source>
          <target state="translated">&lt;code&gt;@EXPORT_OK&lt;/code&gt; 및 친구들 선언</target>
        </trans-unit>
        <trans-unit id="bf1e27173b2b61ad7cc8d4e35225eb9ac31e3c57" translate="yes" xml:space="preserve">
          <source>Declaring @EXPORT_OK and Friends</source>
          <target state="translated">@EXPORT_OK 및 친구들 선언</target>
        </trans-unit>
        <trans-unit id="b98580a35db5c923e11c6744129fa201631ed2c7" translate="yes" xml:space="preserve">
          <source>Declaring a Reference to a Variable</source>
          <target state="translated">변수에 대한 참조 선언</target>
        </trans-unit>
        <trans-unit id="fde084d9565bae036b5f20474e01a929023e39bf" translate="yes" xml:space="preserve">
          <source>Declaring a subroutine allows a subroutine name to be used as if it were a list operator from that point forward in the program. You can declare a subroutine without defining it by saying &lt;code&gt;sub name&lt;/code&gt; , thus:</source>
          <target state="translated">서브 루틴을 선언하면 서브 루틴 이름을 마치 프로그램의 해당 시점부터 목록 연산자 인 것처럼 사용할 수 있습니다. &lt;code&gt;sub name&lt;/code&gt; 을 말하여 서브 루틴을 정의하지 않고 서브 루틴을 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af70fd7faa5a8c4e123052ec680cd7ad32f4f96e" translate="yes" xml:space="preserve">
          <source>Declaring a subroutine allows a subroutine name to be used as if it were a list operator from that point forward in the program. You can declare a subroutine without defining it by saying &lt;code&gt;sub name&lt;/code&gt;, thus:</source>
          <target state="translated">서브 루틴을 선언하면 서브 루틴 이름이 프로그램에서 해당 지점 이후의 목록 연산자 인 것처럼 사용할 수 있습니다. &lt;code&gt;sub name&lt;/code&gt; 을 말하여 정의하지 않고 서브 루틴을 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f6292752dbee798b8191ee9d716594ba4050a6c" translate="yes" xml:space="preserve">
          <source>Declaring references is experimental</source>
          <target state="translated">참조 선언은 실험적입니다.</target>
        </trans-unit>
        <trans-unit id="df50d3b937b66b95438db0baeefd22f2c1fa73b6" translate="yes" xml:space="preserve">
          <source>Decode</source>
          <target state="translated">Decode</target>
        </trans-unit>
        <trans-unit id="2baf8b86f083c5626552d12ceb5f07d33eee642a" translate="yes" xml:space="preserve">
          <source>Decode a base64 string by calling the decode_base64() function. This function takes a single argument which is the string to decode and returns the decoded data.</source>
          <target state="translated">decode_base64 () 함수를 호출하여 base64 문자열을 디코딩하십시오. 이 함수는 디코딩 할 문자열 인 단일 인수를 사용하여 디코딩 된 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="75f02ff68d1ce18c3f179663e56def325e556748" translate="yes" xml:space="preserve">
          <source>Decode any taint switches from a Perl shebang line.</source>
          <target state="translated">Perl shebang 라인에서 모든 오염 스위치를 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="109d6d8d7f79aeac2b306278d0d11f591a9ace1e" translate="yes" xml:space="preserve">
          <source>Decode everything you receive, encode everything you send out. (If it's text data.)</source>
          <target state="translated">수신 한 모든 내용을 디코딩하고 발송 한 모든 내용을 인코딩하십시오. (텍스트 데이터 인 경우)</target>
        </trans-unit>
        <trans-unit id="b5e6108a9d4ff66d51565f4f28f46c751ad457f0" translate="yes" xml:space="preserve">
          <source>Decode method takes an unstructured field body of the email header (or &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; 'text' token) as its input and decodes each MIME encoded-word from input string to a sequence of bytes according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2231&quot;&gt;RFC 2231&lt;/a&gt;. Subsequently, each sequence of bytes with the corresponding MIME charset is decoded with &lt;a href=&quot;encode&quot;&gt;the Encode module&lt;/a&gt; and finally, one output string is returned. Text parts of the input string which do not contain MIME encoded-word stay unmodified in the output string. Folded newlines between two consecutive MIME encoded-words are discarded, others are preserved in the output string. &lt;code&gt;MIME-B&lt;/code&gt; can decode Base64 variant, &lt;code&gt;MIME-Q&lt;/code&gt; can decode Quoted-Printable variant and &lt;code&gt;MIME-Header&lt;/code&gt; can decode both of them. If &lt;a href=&quot;encode&quot;&gt;Encode module&lt;/a&gt; does not support particular MIME charset or chosen variant then an action based on &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;CHECK flags&lt;/a&gt; is performed (by default, the MIME encoded-word is not decoded).</source>
          <target state="translated">Decode 메서드는 이메일 헤더 (또는 &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; '텍스트'토큰) 의 구조화되지 않은 필드 본문을 입력으로 사용하고 &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; 및 &lt;a href=&quot;https://tools.ietf.org/html/rfc2231&quot;&gt;RFC 2231&lt;/a&gt; 에 따라 입력 문자열에서 각 MIME 인코딩 된 단어를 바이트 시퀀스로 디코딩합니다 . 결과적으로 해당 MIME 문자 집합이있는 각 바이트 시퀀스 &lt;a href=&quot;encode&quot;&gt;는 Encode 모듈로&lt;/a&gt; 디코딩 되고 마지막으로 하나의 출력 문자열이 반환됩니다. MIME 인코딩 단어를 포함하지 않는 입력 문자열의 텍스트 부분은 출력 문자열에서 수정되지 않은 상태로 유지됩니다. 두 개의 연속 된 MIME 인코딩 단어 사이에 접힌 개행은 삭제되고 나머지는 출력 문자열에 보존됩니다. &lt;code&gt;MIME-B&lt;/code&gt; 는 Base64 변형을 디코딩 할 수 있고, &lt;code&gt;MIME-Q&lt;/code&gt; 는 Quoted-Printable 변형을 디코딩 할 수 있습니다. &lt;code&gt;MIME-Header&lt;/code&gt; 는 둘 다 디코딩 할 수 있습니다. &lt;a href=&quot;encode&quot;&gt;Encode 모듈&lt;/a&gt; 이 특정 MIME 문자 집합 또는 선택한 변형을 지원하지 않는 경우 &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;CHECK 플래그를&lt;/a&gt; 기반으로하는 작업 이 수행됩니다 (기본적으로 MIME 인코딩 된 단어는 디코딩되지 않음).</target>
        </trans-unit>
        <trans-unit id="4b9d36d83c06e37782d740af6424903230486d88" translate="yes" xml:space="preserve">
          <source>Decoding</source>
          <target state="translated">Decoding</target>
        </trans-unit>
        <trans-unit id="7569471cdb884355544f0d363051bcbdd3ab3bd3" translate="yes" xml:space="preserve">
          <source>Decoding can't happen reliably if you don't know how the data was encoded. If you get to choose, it's a good idea to standardize on UTF-8.</source>
          <target state="translated">데이터의 인코딩 방식을 모르는 경우 디코딩을 안정적으로 수행 할 수 없습니다. 선택하려면 UTF-8을 표준화하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="abcb42a9bd28ce7905619e5495e33ddc378d15e2" translate="yes" xml:space="preserve">
          <source>Decoding does not need slurp mode if every line contains a multiple of four base64 chars:</source>
          <target state="translated">모든 줄에 4 개의 base64 문자가 여러 개 포함 된 경우 디코딩에 slurp 모드가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d2fb28c0e5d9fe827a3bd469e59cbc0c5460a44" translate="yes" xml:space="preserve">
          <source>Decomposition and Composition</source>
          <target state="translated">분해 및 조성</target>
        </trans-unit>
        <trans-unit id="65db77c0668ff68ab733a103249ba144ff3c7f06" translate="yes" xml:space="preserve">
          <source>Decomposition_Mapping</source>
          <target state="translated">Decomposition_Mapping</target>
        </trans-unit>
        <trans-unit id="1b059e79c07fd4e42a0c8736733855e555b987de" translate="yes" xml:space="preserve">
          <source>Decompress the file with &lt;code&gt;gzip -d yourmodule.tar.gz&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;gzip -d yourmodule.tar.gz&lt;/code&gt; 로 파일을 압축 해제하십시오</target>
        </trans-unit>
        <trans-unit id="fecfe7ecbf358f7b0d7f78df884a86cc9366776a" translate="yes" xml:space="preserve">
          <source>Decrement OBJ by one.</source>
          <target state="translated">OBJ를 1 씩 줄입니다.</target>
        </trans-unit>
        <trans-unit id="f9e1ce708a313bdfe9eca73b07a0b2fbd7af57f3" translate="yes" xml:space="preserve">
          <source>Decrement an SV's reference count, and if it drops to zero, call &lt;code&gt;sv_clear&lt;/code&gt; to invoke destructors and free up any memory used by the body; finally, deallocate the SV's head itself. Normally called via a wrapper macro &lt;code&gt;SvREFCNT_dec&lt;/code&gt; .</source>
          <target state="translated">SV의 참조 횟수를 &lt;code&gt;sv_clear&lt;/code&gt; , 0으로 떨어지면 sv_clear 를 호출하여 소멸자를 호출하고 본문에서 사용하는 메모리를 비 웁니다 . 마지막으로 SV의 헤드 자체를 할당 해제하십시오. 일반적으로 래퍼 매크로 &lt;code&gt;SvREFCNT_dec&lt;/code&gt; 를 통해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="0301ed516f1d07e8a21a69cc6264de801d5caffc" translate="yes" xml:space="preserve">
          <source>Decrement an SV's reference count, and if it drops to zero, call &lt;code&gt;sv_clear&lt;/code&gt; to invoke destructors and free up any memory used by the body; finally, deallocating the SV's head itself. Normally called via a wrapper macro &lt;code&gt;SvREFCNT_dec&lt;/code&gt;.</source>
          <target state="translated">SV의 참조 횟수를 &lt;code&gt;sv_clear&lt;/code&gt; 0으로 떨어지면 sv_clear 를 호출하여 소멸자를 호출하고 본문에서 사용하는 모든 메모리를 해제합니다. 마지막으로 SV의 머리 자체를 할당 해제합니다. 일반적으로 래퍼 매크로 &lt;code&gt;SvREFCNT_dec&lt;/code&gt; 를 통해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a67ea7e86c28199b5df339f2ac9cbaf49e99821" translate="yes" xml:space="preserve">
          <source>Decrement the refcnt of each remaining SV, possibly triggering a cleanup. This function may have to be called multiple times to free SVs which are in complex self-referential hierarchies.</source>
          <target state="translated">남아있는 각 SV의 refcnt를 줄이면 정리가 트리거 될 수 있습니다. 복잡한 자체 참조 계층 구조에있는 SV를 해제하려면이 기능을 여러 번 호출해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48379b8bdd9f9af7d6fd4db51e4746e319410873" translate="yes" xml:space="preserve">
          <source>Decrements $x by 1 and returns the result.</source>
          <target state="translated">$ x를 1 씩 줄이고 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20e7e93f2b8e3284df557787a48d088c384708e2" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt; by one. If the reference count reaches zero the structure's memory is freed, which (recursively) causes a reduction of its parent &lt;code&gt;refcounted_he&lt;/code&gt; 's reference count. It is safe to pass a null pointer to this function: no action occurs in this case.</source>
          <target state="translated">&lt;code&gt;refcounted_he&lt;/code&gt; 의 참조 횟수를 1 씩 줄입니다. 참조 카운트가 0에 도달하면 구조의 메모리가 해제되어 (재귀 적으로) 부모 &lt;code&gt;refcounted_he&lt;/code&gt; 의 참조 카운트 가 감소 합니다. 이 함수에 널 포인터를 전달하는 것이 안전합니다.이 경우 아무 작업도 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3612310bbc1f4127c1a18f15130a21a6a5c81e03" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of a &lt;code&gt;refcounted_he&lt;/code&gt; by one. If the reference count reaches zero the structure's memory is freed, which (recursively) causes a reduction of its parent &lt;code&gt;refcounted_he&lt;/code&gt;'s reference count. It is safe to pass a null pointer to this function: no action occurs in this case.</source>
          <target state="translated">&lt;code&gt;refcounted_he&lt;/code&gt; 의 참조 횟수를 1 씩 감소시킵니다 . 참조 횟수가 0에 도달하면 구조의 메모리가 해제되어 (재귀 적으로) 부모 &lt;code&gt;refcounted_he&lt;/code&gt; 의 참조 횟수 가 감소 합니다. 이 함수에 널 포인터를 전달하는 것이 안전합니다.이 경우 어떤 조치도 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dcec4515414c7f15a726073898aabc532b3d39f1" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the given SV.</source>
          <target state="translated">주어진 SV의 참조 카운트를 감소시킵니다.</target>
        </trans-unit>
        <trans-unit id="62e4640075315126f815222935c6969f332b1ca2" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the given SV. &lt;code&gt;sv&lt;/code&gt; may be &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">주어진 SV의 참조 횟수를 줄입니다. &lt;code&gt;sv&lt;/code&gt; 는 &lt;code&gt;NULL&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fad89dfcee27e9d87d909c911b20e8fe884012e9" translate="yes" xml:space="preserve">
          <source>Deep Cloning</source>
          <target state="translated">딥 클로닝</target>
        </trans-unit>
        <trans-unit id="24ece4891188c5f90daafbf7513a856ab1bc6fde" translate="yes" xml:space="preserve">
          <source>Deep recursion on anonymous subroutine</source>
          <target state="translated">익명 서브 루틴에 대한 깊은 재귀</target>
        </trans-unit>
        <trans-unit id="0684f5f69503944c8161b7b66b8eb933bef39fc3" translate="yes" xml:space="preserve">
          <source>Deep recursion on subroutine &quot;%s&quot;</source>
          <target state="translated">서브 루틴 &quot;% s&quot;에 대한 깊은 재귀</target>
        </trans-unit>
        <trans-unit id="6efd349441f7ae82ab76916d1a7dd281bab38a30" translate="yes" xml:space="preserve">
          <source>Deeper Customisation</source>
          <target state="translated">심층 커스터마이징</target>
        </trans-unit>
        <trans-unit id="18e33bb9b61f0104150b716fc1f2c83fe5ab0477" translate="yes" xml:space="preserve">
          <source>Default Byte Order</source>
          <target state="translated">기본 바이트 순서</target>
        </trans-unit>
        <trans-unit id="c84353cad8816e49b138a483d1ebb30bfc16441f" translate="yes" xml:space="preserve">
          <source>Default Makefile Behaviour</source>
          <target state="translated">기본 메이크 파일 동작</target>
        </trans-unit>
        <trans-unit id="f5a8076e567450c53999f5638b343fac686a825d" translate="yes" xml:space="preserve">
          <source>Default Parameter Values</source>
          <target state="translated">기본 매개 변수 값</target>
        </trans-unit>
        <trans-unit id="4753d9b7084053c5089d49a71f2cde5d97a9c631" translate="yes" xml:space="preserve">
          <source>Default Parameters</source>
          <target state="translated">기본 매개 변수</target>
        </trans-unit>
        <trans-unit id="cc0e201c7029269ea6e8c9f6874c0179cc038bae" translate="yes" xml:space="preserve">
          <source>Default Test Directory</source>
          <target state="translated">기본 테스트 디렉토리</target>
        </trans-unit>
        <trans-unit id="44ec713d2a53a2de818adaf52eb763f357d09499" translate="yes" xml:space="preserve">
          <source>Default Warnings and Optional Warnings</source>
          <target state="translated">기본 경고 및 선택적 경고</target>
        </trans-unit>
        <trans-unit id="0566f3b85322f529cf1661115aa7b73ed4d004bc" translate="yes" xml:space="preserve">
          <source>Default destinations</source>
          <target state="translated">기본 목적지</target>
        </trans-unit>
        <trans-unit id="967dd37853ad5171b91867584cc350ce812dd723" translate="yes" xml:space="preserve">
          <source>Default exports</source>
          <target state="translated">기본 수출</target>
        </trans-unit>
        <trans-unit id="e89a7a7b0da6771ef898ac79fc0a58004f639f43" translate="yes" xml:space="preserve">
          <source>Default host: '255.255.255.255' Default port: 9</source>
          <target state="translated">기본 호스트 : '255.255.255.255'기본 포트 : 9</target>
        </trans-unit>
        <trans-unit id="47421e2559e43abd036e2b184dadd2357238a719" translate="yes" xml:space="preserve">
          <source>Default is &quot;\034&quot;, the same as SUBSEP in &lt;b&gt;awk&lt;/b&gt;. If your keys contain binary data there might not be any safe value for &lt;code&gt;$;&lt;/code&gt; .</source>
          <target state="translated">기본값은 &quot;\ 034&quot;이며 &lt;b&gt;awk의&lt;/b&gt; SUBSEP와 동일 합니다. 키에 이진 데이터가 포함되어 있으면 &lt;code&gt;$;&lt;/code&gt; 안전한 값이 없을 수 있습니다 . .</target>
        </trans-unit>
        <trans-unit id="c0aa6ef0cc672da291e362ff35880df700587edb" translate="yes" xml:space="preserve">
          <source>Default is &quot;\034&quot;, the same as SUBSEP in &lt;b&gt;awk&lt;/b&gt;. If your keys contain binary data there might not be any safe value for &lt;code&gt;$;&lt;/code&gt;.</source>
          <target state="translated">기본값은 &quot;\ 034&quot;이며 &lt;b&gt;awk의&lt;/b&gt; SUBSEP와 동일 합니다. 키에 이진 데이터가 포함 된 경우 &lt;code&gt;$;&lt;/code&gt; 대한 안전한 값이 없을 수 있습니다 . .</target>
        </trans-unit>
        <trans-unit id="ffe4ea797d5b8a7f8cfde90ab339db72e2e542a2" translate="yes" xml:space="preserve">
          <source>Default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="3614d667188f70abf848a06aa0652a05a7980f2d" translate="yes" xml:space="preserve">
          <source>Default is 0;</source>
          <target state="translated">기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="117a6bf24c7268f690b354be18d70dcb8affc433" translate="yes" xml:space="preserve">
          <source>Default is 1;</source>
          <target state="translated">기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="94d18537fb9880b0b3a9844f6456e7041684d68a" translate="yes" xml:space="preserve">
          <source>Default is 4096.</source>
          <target state="translated">기본값은 4096입니다.</target>
        </trans-unit>
        <trans-unit id="6e26841758dcad7e26700059748889a29326c77f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File-Fetch@example.com&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;File-Fetch@example.com&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="8666a70fcb610a67383477674b4a80110f7122f6" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File-Fetch@example.com&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;File-Fetch@example.com&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b21f25856f196d843b44afb04b8ac6eaef661e6" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15b68d169876a2d71d036d920e8b9cfaea9e56ef" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;File::Fetch/$VERSION&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da032bd647313ecd583e516886d8ef8538d9001f" translate="yes" xml:space="preserve">
          <source>Default is false, meaning that when you use &lt;code&gt;store&lt;/code&gt; as a template key, &lt;code&gt;check&lt;/code&gt; will put it both in the scalar you supplied, as well as in the hashref it returns.</source>
          <target state="translated">기본값은 false입니다 . 템플릿 키로 &lt;code&gt;store&lt;/code&gt; 을 사용하는 경우 &lt;code&gt;check&lt;/code&gt; 는 제공 한 스칼라와 반환 된 해시 참조에 둘 다 넣습니다.</target>
        </trans-unit>
        <trans-unit id="f23dbfcfc00cfaaa5823861693969bf14d49d57a" translate="yes" xml:space="preserve">
          <source>Default is for debugging mode to be disabled.</source>
          <target state="translated">기본값은 디버깅 모드를 비활성화하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d09b4e9a70d326b80a3705a2d07cf6295402aa8f" translate="yes" xml:space="preserve">
          <source>Default is for files to be removed as requested by the caller.</source>
          <target state="translated">기본값은 호출자가 요청한대로 파일을 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9c92cef06212a1842160f64b786f629e6d8ef460" translate="yes" xml:space="preserve">
          <source>Default is for the file to be removed.</source>
          <target state="translated">기본값은 파일을 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="611ca2ae870bcb7431782f0c4440d0df69e48190" translate="yes" xml:space="preserve">
          <source>Default is to assume that any UID less than or equal to 10 is a root UID.</source>
          <target state="translated">기본값은 10보다 작거나 같은 UID가 루트 UID라고 가정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7fca13ec107ea72b752cc1954e7362fa3edfc913" translate="yes" xml:space="preserve">
          <source>Default is: &lt;code&gt; =&amp;gt; &lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt; =&amp;gt; &lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="35866a2a5fdc2090d8d496e4d4dd84bd92269324" translate="yes" xml:space="preserve">
          <source>Default is: &lt;code&gt; =&amp;gt; &lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt; =&amp;gt; &lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8820a54076d664561edd70760e8e08a8256672de" translate="yes" xml:space="preserve">
          <source>Default value is 0.</source>
          <target state="translated">기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="ff65fb164557c4cda7887f6d0b88d9af2694a1c4" translate="yes" xml:space="preserve">
          <source>Default value is 1.</source>
          <target state="translated">기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="041ad125ee75e430d661eb85a0aa9a66653995a9" translate="yes" xml:space="preserve">
          <source>Default value to use (instead of &lt;code&gt;croak&lt;/code&gt; ing with &quot;your vendor has not defined...&quot;) to return if the macro isn't defined. Specify a reference to an array with type followed by value(s).</source>
          <target state="translated">&lt;code&gt;croak&lt;/code&gt; 대신 사용할 기본값 매크로가 정의되지 않은 경우와 ING &quot;공급 업체가 ... 정의되지 않은&quot;)가 돌아갑니다. 유형과 값으로 배열에 대한 참조를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="deab2598c908ea4920f026abdf9ce2073e0c2a7c" translate="yes" xml:space="preserve">
          <source>Default value to use (instead of &lt;code&gt;croak&lt;/code&gt;ing with &quot;your vendor has not defined...&quot;) to return if the macro isn't defined. Specify a reference to an array with type followed by value(s).</source>
          <target state="translated">매크로가 정의되지 않은 경우 반환 하기 위해 사용할 기본값 ( &quot;공급 업체가 정의되지 않았습니다 ...&quot;라고 &lt;code&gt;croak&lt;/code&gt; 대신 ). 유형 뒤에 값이 오는 배열에 대한 참조를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="e034cbbe2b8762f796d4892d08bbfed1145d3ef8" translate="yes" xml:space="preserve">
          <source>Default values</source>
          <target state="translated">기본값</target>
        </trans-unit>
        <trans-unit id="fe91ba1dc4d3dc98854423373895e4709f7bcaf4" translate="yes" xml:space="preserve">
          <source>Default values defined in the CPAN/Config.pm file can be overridden in a user specific file: CPAN/MyConfig.pm. Such a file is best placed in &lt;code&gt;$HOME/.cpan/CPAN/MyConfig.pm&lt;/code&gt;, because &lt;code&gt;$HOME/.cpan&lt;/code&gt; is added to the search path of the CPAN module before the use() or require() statements. The mkmyconfig command writes this file for you.</source>
          <target state="translated">CPAN / Config.pm 파일에 정의 된 기본값은 사용자 특정 파일 CPAN / MyConfig.pm에서 대체 될 수 있습니다. &lt;code&gt;$HOME/.cpan&lt;/code&gt; 은 use () 또는 require () 문 전에 CPAN 모듈의 검색 경로에 추가 되므로 이러한 파일은 &lt;code&gt;$HOME/.cpan/CPAN/MyConfig.pm&lt;/code&gt; 배치하는 것이 가장 좋습니다 . mkmyconfig 명령은이 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="2390e056e940a5d1d57f0dfd7aeb859feb7ef003" translate="yes" xml:space="preserve">
          <source>Default values for XSUB arguments can be specified by placing an assignment statement in the parameter list. The default value may be a number, a string or the special string &lt;code&gt;NO_INIT&lt;/code&gt; . Defaults should always be used on the right-most parameters only.</source>
          <target state="translated">매개 변수 목록에 지정 문을 배치하여 XSUB 인수의 기본값을 지정할 수 있습니다. 기본값은 숫자, 문자열 또는 특수 문자열 &lt;code&gt;NO_INIT&lt;/code&gt; 일 수 있습니다. 기본값은 항상 가장 오른쪽의 매개 변수에서만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="81f772b9ae8c83ec514638c4d22cc36a230db694" translate="yes" xml:space="preserve">
          <source>Default values for XSUB arguments can be specified by placing an assignment statement in the parameter list. The default value may be a number, a string or the special string &lt;code&gt;NO_INIT&lt;/code&gt;. Defaults should always be used on the right-most parameters only.</source>
          <target state="translated">XSUB 인수의 기본값은 매개 변수 목록에 지정 문을 배치하여 지정할 수 있습니다. 기본값은 숫자, 문자열 또는 특수 문자열 &lt;code&gt;NO_INIT&lt;/code&gt; 일 수 있습니다. 기본값은 항상 맨 오른쪽 매개 변수에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e93ec1e1c96c3b1bf551ee05ccfc36409dcb85bd" translate="yes" xml:space="preserve">
          <source>Default: 8</source>
          <target state="translated">기본값 : 8</target>
        </trans-unit>
        <trans-unit id="ff08b56fbed2f2f2f7b04ba5e78bf45aaa623f3a" translate="yes" xml:space="preserve">
          <source>Defaults and how to override them</source>
          <target state="translated">기본값과이를 무시하는 방법</target>
        </trans-unit>
        <trans-unit id="e134e0139099634855fa20d262decd51a88d9996" translate="yes" xml:space="preserve">
          <source>Defaults to &quot;$(OBJECT)&quot; and is used in the ld command to specify what files to link/load from (also see dynamic_lib below for how to specify ld flags)</source>
          <target state="translated">기본값은 &quot;$ (OBJECT)&quot;이며 ld 명령에서 링크 /로드 할 파일을 지정하는 데 사용됩니다 (ld 플래그를 지정하는 방법은 아래 dynamic_lib 참조).</target>
        </trans-unit>
        <trans-unit id="7061416449de7f47367c9fcf92dab2f1e9008d0c" translate="yes" xml:space="preserve">
          <source>Defaults to &quot;unknown&quot;.</source>
          <target state="translated">기본값은 &quot;알 수 없음&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3afa08668c5c5dc51326fee541b5ff3c6d50395f" translate="yes" xml:space="preserve">
          <source>Defaults to $(DIST_DEFAULT) which in turn defaults to tardist.</source>
          <target state="translated">기본값은 $ (DIST_DEFAULT)이며 기본값은 tardist입니다.</target>
        </trans-unit>
        <trans-unit id="1e15a7e04559718dd148ec2dcf10c3805456f2a3" translate="yes" xml:space="preserve">
          <source>Defaults to $(FIRST_MAKEFILE).old or $(FIRST_MAKEFILE)_old on VMS.</source>
          <target state="translated">VMS의 기본값은 $ (FIRST_MAKEFILE) .old 또는 $ (FIRST_MAKEFILE) _old입니다.</target>
        </trans-unit>
        <trans-unit id="2f77e97345b6f70484f890ef33fb548347411e97" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{installprefixexp}, falling back to $Config{installprefix}, $Config{prefixexp} or $Config{prefix} should $Config{installprefixexp} not exist.</source>
          <target state="translated">$ Config {installprefixexp}가 없으면 $ Config {installprefixexp}, $ Config {prefixexp} 또는 $ Config {prefix}로 돌아가는 $ Config {installprefixexp}의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="0d2a34019b39d0a59222f4965b474dc8e60e223a" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{installprivlib}.</source>
          <target state="translated">기본값은 $ Config {installprivlib}입니다.</target>
        </trans-unit>
        <trans-unit id="297039d02dfbd310b72f4d214dc03d0177d0f5ba" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{lddlflags}.</source>
          <target state="translated">기본값은 $ Config {lddlflags}입니다.</target>
        </trans-unit>
        <trans-unit id="1f5b612bc652d3b75be02b22a0c9c551d13e7785" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{ld}.</source>
          <target state="translated">기본값은 $ Config {ld}입니다.</target>
        </trans-unit>
        <trans-unit id="b736bfe876455ba787df5366a5e321959e9a06ef" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{make}, which may go looking for a Make program in your environment.</source>
          <target state="translated">기본적으로 $ Config {make}로, 환경에서 Make 프로그램을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a196b84e1a65651cad69ebad41443f48567f9d9" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{siteprefixexp}. Perls prior to 5.6.0 didn't have an explicit siteprefix in the Config. In those cases $Config{installprefix} will be used.</source>
          <target state="translated">기본값은 $ Config {siteprefixexp}입니다. 5.6.0 이전의 Perls에는 구성에 명시적인 사이트 접두사가 없습니다. 이 경우 $ Config {installprefix}가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e39813b2a929031c5d759deba757efe05e4152c9" translate="yes" xml:space="preserve">
          <source>Defaults to $Config{vendorprefixexp}.</source>
          <target state="translated">기본값은 $ Config {vendorprefixexp}입니다.</target>
        </trans-unit>
        <trans-unit id="e546dadcb8267744ab5961a80d3d0249f0af262e" translate="yes" xml:space="preserve">
          <source>Defaults to 'Makefile' or 'Descrip.MMS' on VMS.</source>
          <target state="translated">VMS의 기본값은 'Makefile'또는 'Descrip.MMS'입니다.</target>
        </trans-unit>
        <trans-unit id="36a3365955b62edce26a680e752008adf273fb56" translate="yes" xml:space="preserve">
          <source>Defaults to 0.</source>
          <target state="translated">기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="2178c999f5078fa159c89a3040ee28c0a0ab0555" translate="yes" xml:space="preserve">
          <source>Defaults to 1.</source>
          <target state="translated">기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="42b07f550144816ff7f9ad73156f6af2230242bf" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;-O&lt;/code&gt; . Set it to &lt;code&gt;-g&lt;/code&gt; to turn debugging on. The flag is passed to subdirectory makes.</source>
          <target state="translated">기본값은 &lt;code&gt;-O&lt;/code&gt; 입니다. 디버깅을 켜 려면 &lt;code&gt;-g&lt;/code&gt; 로 설정하십시오 . 플래그는 하위 디렉토리 제조업체로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="abcce0a248c7f9af8af47682203ded3c428ad1e2" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;-O&lt;/code&gt;. Set it to &lt;code&gt;-g&lt;/code&gt; to turn debugging on. The flag is passed to subdirectory makes.</source>
          <target state="translated">기본값은 &lt;code&gt;-O&lt;/code&gt; 입니다. 디버깅을 켜 려면 &lt;code&gt;-g&lt;/code&gt; 로 설정하십시오 . 플래그는 make 하위 디렉토리에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="4fbcc2fc6108b1d2b0294b983b1a9ad99a640450" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt; , meaning no timeout is set.</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; 이며 시간 초과가 설정되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d988114015a6a9816c9d51daa92e80b47086fad8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97ffe9a7c9bc11089a8c8fd5e27204c3c4b2f7b5" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt;, meaning no timeout is set.</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; 이며 시간 제한이 설정되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e2065f7c8a0f6845b78a98fceca8a4f710d9e7f8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="146cfb515515d203c57c9c8aab0bc48f6d370409" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="65db9c712b161326ca978195dbac31aa16dc1b36" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6371c4ed1bbd778c501d9b308a25089892c98692" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;64&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;64&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cf82796de0b89355025b7c9fb0a53aed23ae2fe6" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;64&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;64&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3dd3b4ec101beb9f1857e77cfca0e6a41873cc62" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;8&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;8&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e206a5b588a05861357475f099bb256518bf59cb" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;8&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f5da3821742eb234c04279ce3cc2f85314c99eb1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;@&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;@&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3798ac44bdef6911bd6f62dd80f6ad115abeba9a" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;@&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2a0b8a3adf1fd6fbd992cea8cf36981968d31e21" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;LZMA_PRESET_DEFAULT&lt;/code&gt; (6).</source>
          <target state="translated">기본값은 &lt;code&gt;LZMA_PRESET_DEFAULT&lt;/code&gt; (6)입니다.</target>
        </trans-unit>
        <trans-unit id="147274cdbe6f000456b5b99fb65832fa4f82af15" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;MAX_WBITS&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;MAX_WBITS&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ba08e1b72d74a58457de3c6c5a8c4bf533f085a8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;MAX_WBITS&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;MAX_WBITS&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04dcb63c213f6d34c69ca1a67ff471d071e8f496" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt; .</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7d8e8d434788e741ceea90a49c2191883f6866ab" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7c72a3e89d9401a68060eed25afb0d35d9676747" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{ &quot;ExtUtils::MakeMaker&quot; =&amp;gt; 0 }&lt;/code&gt; if this attribute is not specified.</source>
          <target state="translated">이 속성이 지정되지 않은 경우 기본값은 &lt;code&gt;{ &quot;ExtUtils::MakeMaker&quot; =&amp;gt; 0 }&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fbe6c62dfeedbe39bcaae924b83b87595c0727be" translate="yes" xml:space="preserve">
          <source>Defaults to DISTNAME-VERSION.</source>
          <target state="translated">기본값은 DISTNAME-VERSION입니다.</target>
        </trans-unit>
        <trans-unit id="e117bd432f26952da4f40820366fde65f2edc72e" translate="yes" xml:space="preserve">
          <source>Defaults to MAX_MEM_LEVEL.</source>
          <target state="translated">기본값은 MAX_MEM_LEVEL입니다.</target>
        </trans-unit>
        <trans-unit id="9671af0548359bae98f06615c832c689de5fb555" translate="yes" xml:space="preserve">
          <source>Defaults to MAX_WBITS.</source>
          <target state="translated">기본값은 MAX_WBITS입니다.</target>
        </trans-unit>
        <trans-unit id="658dfec16a6b505da6e2bd38b1f2e25f8f18da74" translate="yes" xml:space="preserve">
          <source>Defaults to NAME below but with :: replaced with -.</source>
          <target state="translated">아래의 기본값은 NAME이지만 ::는-로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="0031bae010e59fe54ba067d872d7762129c8aa52" translate="yes" xml:space="preserve">
          <source>Defaults to STDERR.</source>
          <target state="translated">기본값은 STDERR입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
