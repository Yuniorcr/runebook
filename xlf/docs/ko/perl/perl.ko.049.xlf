<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="7f660ccc3d4a7cddf101f6e1c123d42735446293" translate="yes" xml:space="preserve">
          <source>Policy on installing 'build_requires' modules (yes, no, ask/yes, ask/no)?</source>
          <target state="translated">'build_requires'모듈 설치에 대한 정책 (예, 아니오, 요청 / 예, 요청 / 아니오)?</target>
        </trans-unit>
        <trans-unit id="d27d963e0d2061e0a6349a591740d5932e76c404" translate="yes" xml:space="preserve">
          <source>Pollutes global name space for development only task.</source>
          <target state="translated">개발 전용 작업을 위해 전역 네임 스페이스를 오염시킵니다.</target>
        </trans-unit>
        <trans-unit id="989fc91d044783d05d714e433d3e90dca9bdf4da" translate="yes" xml:space="preserve">
          <source>Polymorphism</source>
          <target state="translated">Polymorphism</target>
        </trans-unit>
        <trans-unit id="948fb69e483149176df26ee3b58ea284be041444" translate="yes" xml:space="preserve">
          <source>Polymorphism is one of the key concepts of object-oriented design.</source>
          <target state="translated">다형성은 객체 지향 디자인의 핵심 개념 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="15d9214a43c40d681745a95042b9d1c034b639fc" translate="yes" xml:space="preserve">
          <source>Popped</source>
          <target state="translated">Popped</target>
        </trans-unit>
        <trans-unit id="cbe5045d76e02848ae658b25f703a7ed8059f4e2" translate="yes" xml:space="preserve">
          <source>Popping contexts</source>
          <target state="translated">팝핑 컨텍스트</target>
        </trans-unit>
        <trans-unit id="d60d997de9e6fe93b76346e1fd7960a534079d99" translate="yes" xml:space="preserve">
          <source>Pops a double off the stack.</source>
          <target state="translated">스택에서 두 배를 튀 깁니다.</target>
        </trans-unit>
        <trans-unit id="22a0e05c4b5984d222d58a3bf9aebf24e0c8d1a8" translate="yes" xml:space="preserve">
          <source>Pops a long off the stack.</source>
          <target state="translated">스택에서 길게 튀어 나옵니다.</target>
        </trans-unit>
        <trans-unit id="832e72784da0b9e3a4bd68c7f793defaefe32db9" translate="yes" xml:space="preserve">
          <source>Pops a string off the stack which must consist of bytes i.e. characters &amp;lt; 256.</source>
          <target state="translated">바이트로 구성되어야하는 문자열 (예 : 문자 &amp;lt;256)을 스택에서 팝합니다.</target>
        </trans-unit>
        <trans-unit id="ec17353cdd71390a8e418b8c83b4061cd7788eaf" translate="yes" xml:space="preserve">
          <source>Pops a string off the stack.</source>
          <target state="translated">스택에서 문자열을 팝합니다.</target>
        </trans-unit>
        <trans-unit id="cc089051dba8a74af21264418e130c57e2a1f868" translate="yes" xml:space="preserve">
          <source>Pops a string off the stack. Identical to POPp. There are two names for historical reasons.</source>
          <target state="translated">스택에서 문자열을 팝합니다. POPp와 동일합니다. 역사적 이유로 두 가지 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bc58c6d11b5634fdac1fab6062117497b69ac1a" translate="yes" xml:space="preserve">
          <source>Pops an SV off the stack.</source>
          <target state="translated">스택에서 SV를 팝합니다.</target>
        </trans-unit>
        <trans-unit id="ef2c625805cf71b84685943309767e2a59dbd613" translate="yes" xml:space="preserve">
          <source>Pops an integer off the stack.</source>
          <target state="translated">스택에서 정수를 팝합니다.</target>
        </trans-unit>
        <trans-unit id="5c365c6846ddc9582dafdafc0b5e039da1313852" translate="yes" xml:space="preserve">
          <source>Pops an unsigned integer off the stack.</source>
          <target state="translated">스택에서 부호없는 정수를 꺼냅니다.</target>
        </trans-unit>
        <trans-unit id="36642789da9be8ea37d859e89803892de83f4c7e" translate="yes" xml:space="preserve">
          <source>Pops an unsigned long off the stack.</source>
          <target state="translated">서명되지 않은 long을 스택에서 꺼냅니다.</target>
        </trans-unit>
        <trans-unit id="b55131b918b111fc0b929f5b1aeacc6459ed4da9" translate="yes" xml:space="preserve">
          <source>Pops and returns the last value of the array, shortening the array by one element.</source>
          <target state="translated">배열의 마지막 값을 팝하고 반환하여 배열을 하나의 요소만큼 줄입니다.</target>
        </trans-unit>
        <trans-unit id="72124d219ef96cd5acab8db5a13304309882b7c2" translate="yes" xml:space="preserve">
          <source>Populates the arrays @keys with the all the keys that would pass an &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; tests, and populates @hidden with the remaining legal keys that have not been utilized.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; 테스트를 통과 할 모든 키로 배열 @keys를 채우고 사용되지 않은 나머지 법적 키로 @hidden을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="a7f298f65686b8fbf54f9b4beec946beafc93e24" translate="yes" xml:space="preserve">
          <source>Populates the arrays @keys with the all the keys that would pass an &lt;code&gt;exists&lt;/code&gt; tests, and populates @hidden with the remaining legal keys that have not been utilized.</source>
          <target state="translated">&lt;code&gt;exists&lt;/code&gt; 테스트를 통과 할 모든 키로 @keys 배열을 채우고 사용되지 않은 나머지 법적 키로 @hidden을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cee02632a33989e168b12ec741e01b5327a83cb2" translate="yes" xml:space="preserve">
          <source>Populating a freshly installed perl with one's favorite modules is pretty easy if you maintain a private bundle definition file. To get a useful blueprint of a bundle definition file, the command autobundle can be used on the CPAN shell command line. This command writes a bundle definition file for all modules installed for the current perl interpreter. It's recommended to run this command once only, and from then on maintain the file manually under a private name, say Bundle/my_bundle.pm. With a clever bundle file you can then simply say</source>
          <target state="translated">개인 번들 정의 파일을 유지 보수하는 경우 선호하는 모듈로 새로 설치된 펄을 채우는 것은 매우 쉽습니다. 번들 정의 파일의 유용한 청사진을 얻으려면 CPAN 쉘 명령 행에서 autobundle 명령을 사용할 수 있습니다. 이 명령은 현재 perl 인터프리터에 설치된 모든 모듈에 대한 번들 정의 파일을 작성합니다. 이 명령을 한 번만 실행 한 다음, 파일을 개인 이름 (예 : Bundle / my_bundle.pm)으로 수동으로 유지 관리하는 것이 좋습니다. 영리한 번들 파일을 사용하면 간단히 말할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4dda63f16dd4f315c01d63949c2e824ed322455" translate="yes" xml:space="preserve">
          <source>Port to Perl 5.22</source>
          <target state="translated">Perl 5.22로 포트</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="429fea4a8a23d35cb2866b8a8e54eff4f9f7d19a" translate="yes" xml:space="preserve">
          <source>Portability Between PA-RISC Versions</source>
          <target state="translated">PA-RISC 버전 간 이식성</target>
        </trans-unit>
        <trans-unit id="0b34819d0cef9dd29634d338c59e4d3820c728c9" translate="yes" xml:space="preserve">
          <source>Portability fixes, such as changes to Configure and the files in the hints/ folder.</source>
          <target state="translated">구성 변경 및 힌트 / 폴더의 파일과 같은 이식성 수정</target>
        </trans-unit>
        <trans-unit id="c3c45da3be29d5d76052af9f1f337ab20837e6f2" translate="yes" xml:space="preserve">
          <source>Portability issues</source>
          <target state="translated">이식성 문제</target>
        </trans-unit>
        <trans-unit id="1f251a1b72b795d210c37cc8808dfb91c5841c32" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#-X&quot;&gt;-X in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#-X&quot;&gt;perlport에서 -X&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84a89b40cc0009e8b885def1fe631517f13c8804" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#alarm&quot;&gt;alarm in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#alarm&quot;&gt;perlport의 경보&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f58a7cb3f3e811c1eac599d9c7bf48061833c027" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#atan2&quot;&gt;atan2 in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#atan2&quot;&gt;perlport의 atan2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ed8beab57923abb2517704ee81711f38cf21b94" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#binmode&quot;&gt;binmode in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#binmode&quot;&gt;perlport의 binmode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="171e986303317134be33b061b9ce46ef505fd940" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#chmod&quot;&gt;chmod in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#chmod&quot;&gt;perlport에서 chmod를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="931cc82efd9b523c1ff1857e1014607381be1f1a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#chown&quot;&gt;chown in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#chown&quot;&gt;perlport에 chown하지&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34e114d642008c4fff0621ad0f7fefa204d02d90" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#chroot&quot;&gt;chroot in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#chroot&quot;&gt;chroot in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f1c48eaf2397ca415e41a6fa9517451281c277c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#crypt&quot;&gt;crypt in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#crypt&quot;&gt;perlport의 토굴&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c45bac113f4c308e82936e60df6df6c1931dbb8b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#dbmclose&quot;&gt;dbmclose in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#dbmclose&quot;&gt;dbmclose in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2fbf347423e5b87d1b332ca9b3d6108fdc3a88e2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#dbmopen&quot;&gt;dbmopen in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#dbmopen&quot;&gt;dblopen in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8eb5ec3466f6cdf4226f3ab0929d83f32b278695" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#dump&quot;&gt;dump in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#dump&quot;&gt;perlport에서 덤프&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f8d3bbf0b7025b86f5673b95a17a0ef3c1c1212" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#exec&quot;&gt;exec in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#exec&quot;&gt;exec in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="311229258591d86e072ab3c10225ef0a5e3642a4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#exit&quot;&gt;exit in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#exit&quot;&gt;perlport에서 종료하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ce6eaa96048196db85fe31b8746c5d58fd9e8d1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#fcntl&quot;&gt;fcntl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#fcntl&quot;&gt;perlport의 fcntl을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="079a6396bf954e8003a8a937147cde117ff06852" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#flock&quot;&gt;flock in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#flock&quot;&gt; perlport에서 무리&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4062b066ff4e5e57c22dcd6e5f3812306be6cb55" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#fork&quot;&gt;fork in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#fork&quot;&gt;펄 포트의 포크&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="374cc0f9e27f1d2543a6f2e6f55c2b2ecf24a0ca" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getlogin&quot;&gt;getlogin in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#getlogin&quot;&gt;Perlport의 getlogin&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9937a6aa9eb14db23986faebc9c754557a9cb63e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getpgrp&quot;&gt;getpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#getpgrp&quot;&gt;Perlport의 getpgrp&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a3c9c808efbd9e2a03c0ba22780dc63fa80b976" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getppid&quot;&gt;getppid in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#getppid&quot;&gt;Perlport에서 만족&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c8bf9cafbfe5a3727f717e18fe5637a9657d1e3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getpriority&quot;&gt;getpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#getpriority&quot;&gt;perlport의 우선 순위&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c9a92d771d324eae7e1f6085b85450eaa5f4c33" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getpwnam&quot;&gt;getpwnam in perlport&lt;/a&gt; to &lt;a href=&quot;../perlport#endservent&quot;&gt;endservent in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#getpwnam&quot;&gt;에서 getpwnam에서 perlport&lt;/a&gt; 에 &lt;a href=&quot;../perlport#endservent&quot;&gt;endservent에 perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95a33925a0db79a48d3c1dacd96866c72e816ad1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#getsockopt&quot;&gt;getsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#getsockopt&quot;&gt;perlport의 getsockopt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="451fd1ca3fe7d172aad55237b40c25c3720eefee" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#glob&quot;&gt;glob in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#glob&quot;&gt;Perlport에서의 글로브&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e375af9f12d1c6f2bc03839a36e2ac89a755e4ad" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#gmtime&quot;&gt;gmtime in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#gmtime&quot;&gt;Perlport의 GMTime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb0916bfbaab25389dda35cbe69c6f9a0cabd92b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#ioctl&quot;&gt;ioctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#ioctl&quot;&gt;Perlport의 ioctl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2de3944e42155996eeb50944ed2976186dfbbfa5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#kill&quot;&gt;kill in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#kill&quot;&gt;perlport에서 종료&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7eaa68d564eddd4045a9dd57d744941b1da03a13" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#link&quot;&gt;link in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#link&quot;&gt;perlport에 링크&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c477c22606ba7a529797dfc38e60dae51d00171" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#localtime&quot;&gt;localtime in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#localtime&quot;&gt;perlport의 현지 시간&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e2c5cb8f92dc1d3aaef9234fc3211969082289f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#lstat&quot;&gt;lstat in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#lstat&quot;&gt;ll in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac214a3223717227344f149c9e9400019a1ac97d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgctl&quot;&gt;msgctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#msgctl&quot;&gt;perlport에 msgctl과&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2aacc2a0a20793e8dc06ed28334f96f1109414e4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58c6893a0d57344354cb89274be70b30e58e8319" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgrcv&quot;&gt;msgrcv in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#msgrcv&quot;&gt;perlport에 위해 msgrcv&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ece2f63ba6ea017230ff113a7682ad9cb61a1b9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#msgsnd&quot;&gt;msgsnd in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#msgsnd&quot;&gt;perlport에 msgsnd는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2fd2c0061cf9f7d59627ee7926b142b43c0bb5d8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#open&quot;&gt;open in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#open&quot;&gt;perlport에서 열립니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b8d9dcc4183e959a0a8c406e297f639b821d7e6a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#readlink&quot;&gt;readlink in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#readlink&quot;&gt;perlport에서 readlink를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d80623fff5a5452ded7eca5cafeaad9a220479f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#rename&quot;&gt;rename in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#rename&quot;&gt;perlport에서 이름을 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60cb95b01d7cac1160a8fcd9aa6319e2b256dd8b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#rewinddir&quot;&gt;rewinddir in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#rewinddir&quot;&gt;perlport의 rewinddir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e8ee271a393b3ab35832a0399a9716bd4545be8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#select&quot;&gt;select in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#select&quot;&gt;perlport에서 선택하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a916a792a19d0914f5e538e1b61507950ed248bc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#semctl&quot;&gt;semctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#semctl&quot;&gt;perlport에 semctl의&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6e22134dc6f984ff19dd4e0daa2f57b8baf5986" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#semget&quot;&gt;semget in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#semget&quot;&gt;perlport에서 semget&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="474c50d150da4761b9c780c7974d717b1c6b2c9e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#semop&quot;&gt;semop in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#semop&quot;&gt;perlport에서 semop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dac5afa34df9b930f8c89c10ca69e5570193c2e6" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#setpgrp&quot;&gt;setpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#setpgrp&quot;&gt;perlport에 setpgrp는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e23f276f0f8950ad13f46fae5b1b8fd4509591d7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#setpriority&quot;&gt;setpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#setpriority&quot;&gt;perlport의 우선 순위&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7061e1739edc69bb246b83a096fa0981e1f5251c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#setsockopt&quot;&gt;setsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#setsockopt&quot;&gt;perlport에서 setsockopt를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6b4ae9b5ad1b08da481f8567bbfc1cb8b669699" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#shmctl&quot;&gt;shmctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#shmctl&quot;&gt;perlport에서 설명 shmctl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ceb7cceede55255f2c03923419ba00d17dd1373" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#shmget&quot;&gt;shmget in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#shmget&quot;&gt;perlport에서 shmget&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bc47a3fc4fc4a38ef3e0d7b17a166a775e764ce" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#shmread&quot;&gt;shmread in perlport&lt;/a&gt; and &lt;a href=&quot;../perlport#shmwrite&quot;&gt;shmwrite in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#shmread&quot;&gt;perlport에서 shmread&lt;/a&gt; 및 &lt;a href=&quot;../perlport#shmwrite&quot;&gt;perlport에서 shmwrite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0dce41756b232765d1c032ecd3d3a0d9a8e33895" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#socketpair&quot;&gt;socketpair in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#socketpair&quot;&gt;perlport의 소켓 페어&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55476d750e005ffead8b73a10218424aba53ef83" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#stat&quot;&gt;stat in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#stat&quot;&gt;stat in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71363d0b541b18ba37818287ceda27e5bde57d90" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#symlink&quot;&gt;symlink in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#symlink&quot;&gt;perlport에 심볼릭 링크&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd26addde8a2d4d9d8c7b6e687d64da690b8666a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#syscall&quot;&gt;syscall in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#syscall&quot;&gt;syscall in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3c5f3f484e4201b1f67796ad89ef59b123e7c6c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#sysopen&quot;&gt;sysopen in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#sysopen&quot;&gt;sysopen in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5106a8c40515e6624c616e5ac9aebbbd80552a7c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#system&quot;&gt;system in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#system&quot;&gt;perlport의 시스템&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61d1d487f826b2d057df6e670b5e42fbeac37cd3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#times&quot;&gt;times in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#times&quot;&gt;perlport의 시간&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccbec3396a164294596f5e1e4e0bdba951cdb81e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#truncate&quot;&gt;truncate in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#truncate&quot;&gt;perlport에서 잘립니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4ba7b92e20617a2d8b7c263846d7133fd9ec43fc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#umask&quot;&gt;umask in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#umask&quot;&gt;perlport의 umask&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40c14ab69251d27767b250c1548e4d933cd1a724" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#utime&quot;&gt;utime in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#utime&quot;&gt;utime in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4675b398cb210e70ff86790451786bc0364ba2b8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#wait&quot;&gt;wait in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#wait&quot;&gt;perlport에서 대기하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3e89038c4dec1cc988024cd99589fc6629b23cf" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;../perlport#waitpid&quot;&gt;waitpid in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;../perlport#waitpid&quot;&gt;Perlport의 waitpid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14355ea45cbf12c5d60bec4e73dcf175d1825f40" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#-X&quot;&gt;&quot;-X&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#-X&quot;&gt;perlport의 &quot;-X&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b70981300ecccd7b8f330cb81f6103c289bec058" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#-X&quot;&gt;-X in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#-X&quot;&gt;perlport에서 -X&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9f366c81884984a5734dc225dec396324f06b4b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#alarm&quot;&gt;&quot;alarm&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#alarm&quot;&gt;perlport의 &quot;alarm&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4c41aff1aadd6d30ae436b6ad22a7635b760f8f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#alarm&quot;&gt;alarm in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#alarm&quot;&gt;perlport의 경보&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d0963dd42ec14751064ca600b5e821580c49ad7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#atan2&quot;&gt;&quot;atan2&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#atan2&quot;&gt;perlport의 &quot;atan2&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="286b7051a1db4c371e7295081bf3da49c3cacee0" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#atan2&quot;&gt;atan2 in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#atan2&quot;&gt;perlport의 atan2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5856653fd8e5a4cfc3630965419bd97446ec20b5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#binmode&quot;&gt;&quot;binmode&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#binmode&quot;&gt;perlport의 &quot;binmode&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f60be3a8366f3adaf8b704d8496c1429fcdedb9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#binmode&quot;&gt;binmode in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#binmode&quot;&gt;perlport의 binmode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="308cef968df2ed6e074f260be6d29326be3ef732" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chmod&quot;&gt;&quot;chmod&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#chmod&quot;&gt;perlport의 &quot;chmod&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42f721f1585fe7bf02000f11e03f8ca6dc0c3e62" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chmod&quot;&gt;chmod in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#chmod&quot;&gt;perlport에서 chmod를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="293f2a11166c10b197b71dec02f270f1fb1af042" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chown&quot;&gt;&quot;chown&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#chown&quot;&gt;perlport의 &quot;chown&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34105bc16f3abc62a7ebdccb17b84f89ff247b43" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chown&quot;&gt;chown in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#chown&quot;&gt;perlport에 chown하지&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1df0a7d0f0b913bfef88464704199d8087e930f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chroot&quot;&gt;&quot;chroot&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#chroot&quot;&gt;perlport의 &quot;chroot&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3161ed910ec8abac73c4bb8e4ebdf2e5f427689" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#chroot&quot;&gt;chroot in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#chroot&quot;&gt;chroot in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc696b8e43a610552126beaf28d383cd01a7222d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#crypt&quot;&gt;&quot;crypt&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#crypt&quot;&gt;perlport의 &quot;crypt&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a5244c82530287a1680f7e4630690500bf2c1a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#crypt&quot;&gt;crypt in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#crypt&quot;&gt;perlport의 토굴&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a9e5dde3ee4ad858ae65c18f43c8bc3b58c9df1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmclose&quot;&gt;&quot;dbmclose&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#dbmclose&quot;&gt;perlport의 &quot;dbmclose&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8153edd1c560afaec1e5e4b29ef61cb3a5fea317" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmclose&quot;&gt;dbmclose in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#dbmclose&quot;&gt;dbmclose in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28cb5adc1bf64ea065f4ec2410e3dcda7f66d46f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmopen&quot;&gt;&quot;dbmopen&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#dbmopen&quot;&gt;perlport의 &quot;dbmopen&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ccd35e85192d4a9e665b440ebd8d98e63a21fcd8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dbmopen&quot;&gt;dbmopen in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#dbmopen&quot;&gt;dblopen in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0041d3754bd68df8fbc09d24396b3aea27a2c824" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dump&quot;&gt;&quot;dump&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#dump&quot;&gt;perlport의 &quot;dump&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3849ea6d3a1e8647089ee23f1c064c70b2aac7e" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#dump&quot;&gt;dump in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#dump&quot;&gt;perlport에서 덤프&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3bcaa7c33e892ce18b6349d3066ce50a048ebda" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exec&quot;&gt;&quot;exec&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#exec&quot;&gt;perlport의 &quot;exec&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="159b224453525ea26178c93d815bf8c37156bca7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exec&quot;&gt;exec in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#exec&quot;&gt;exec in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a5c6ca2e1bbd5ed8047c01355ea7ec78b83f139" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exit&quot;&gt;&quot;exit&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#exit&quot;&gt;perlport의 &quot;exit&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6ef7e2af32d312e2de7c23d3ed0f7b1002c71ef" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#exit&quot;&gt;exit in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#exit&quot;&gt;perlport에서 종료하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f51d90e72f973bfc61ec10435ac0f5eadfc569b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fcntl&quot;&gt;&quot;fcntl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#fcntl&quot;&gt;perlport의 &quot;fcntl&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b51d3531f7ff15ab95b54d19923365629fc28679" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fcntl&quot;&gt;fcntl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#fcntl&quot;&gt;perlport에서 fcntl을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7ea7a4c42a643927c458930cc75c7af96effb5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#flock&quot;&gt;&quot;flock&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#flock&quot;&gt;perlport의 &quot;flock&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd51dc31bf44af902d7a83aa3d284782505dab81" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#flock&quot;&gt;flock in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#flock&quot;&gt;perlport에서 무리&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b70b0437c68a8bbf1c294c40aaefa6f4e9524cc7" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fork&quot;&gt;&quot;fork&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#fork&quot;&gt;perlport의 &quot;fork&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f294df838a1631d1ff6473a2a0bb188766e13bc5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#fork&quot;&gt;fork in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#fork&quot;&gt;perlport의 포크&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5162b808f09de4e177d62088e42f7354798005b6" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getlogin&quot;&gt;&quot;getlogin&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getlogin&quot;&gt;perlport의 &quot;getlogin&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da0c8aa6744002f6e9535d51ad97f29417869561" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getlogin&quot;&gt;getlogin in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getlogin&quot;&gt;perlport에 getlogin이&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58289d7f269abcbc90fc0b0ed0a851e44c5c5a65" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpgrp&quot;&gt;&quot;getpgrp&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getpgrp&quot;&gt;perlport의 &quot;getpgrp&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="272ed60ca449929d819ded198fe36e06b83a39e2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpgrp&quot;&gt;getpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getpgrp&quot;&gt;getpgrp in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a032a4234fef2f9df954afb3e2507ffc5b4734bb" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getppid&quot;&gt;&quot;getppid&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getppid&quot;&gt;perlport의 &quot;getppid&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf5f512293ae84473998a24961e0f9cb5d697346" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getppid&quot;&gt;getppid in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getppid&quot;&gt;perlport에서 getppid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f02277bef859ee7d10c0f10cd55dcddb0c373dc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpriority&quot;&gt;&quot;getpriority&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getpriority&quot;&gt;perlport의 &quot;getpriority&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4a68a2a22e44665ce9dd7fd91574dcfc5d0f2cf" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpriority&quot;&gt;getpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getpriority&quot;&gt;perlport에 getpriority&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88533abe27071965f129b48828b725cca96f6127" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpwnam&quot;&gt;&quot;getpwnam&quot; in perlport&lt;/a&gt; to &lt;a href=&quot;perlport#endservent&quot;&gt;&quot;endservent&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getpwnam&quot;&gt;&quot;에서 getpwnam&quot;perlport에서&lt;/a&gt; 에 &lt;a href=&quot;perlport#endservent&quot;&gt;perlport에서 &quot;endservent&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54c70469975f72b40e614a4aa6531b33418f0a99" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getpwnam&quot;&gt;getpwnam in perlport&lt;/a&gt; to &lt;a href=&quot;perlport#endservent&quot;&gt;endservent in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getpwnam&quot;&gt;에서 getpwnam에서 perlport&lt;/a&gt; 에 &lt;a href=&quot;perlport#endservent&quot;&gt;endservent에 perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1143d58a8f2e8621290fa97b23db7a1940f64440" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getsockopt&quot;&gt;&quot;getsockopt&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getsockopt&quot;&gt;perlport의 &quot;getsockopt&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5307cc8853752ec02882de2f2c667c8f8f4d5ea3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#getsockopt&quot;&gt;getsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#getsockopt&quot;&gt;perlport에서 getsockopt 때문에&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8459c3ed8fb0a564a7e48de4363e5b73f97c6359" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#glob&quot;&gt;&quot;glob&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#glob&quot;&gt;perlport의 &quot;glob&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="242a3ea39a57b93258a257f47655ec88b832f654" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#glob&quot;&gt;glob in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#glob&quot;&gt;perlport에서 glob&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5d960ef3b9f3ffe2c645a546d3761b6df34870c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#gmtime&quot;&gt;&quot;gmtime&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#gmtime&quot;&gt;perlport의 &quot;gmtime&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8bee5ea11b2676b24bd55443d8f59d7856df650" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#gmtime&quot;&gt;gmtime in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#gmtime&quot;&gt;perlport의 gmtime&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89c2e2b254b614ae178543754a1503fa68dede95" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#ioctl&quot;&gt;&quot;ioctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#ioctl&quot;&gt;perlport의 &quot;ioctl&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7faa7ea82fa854bb3d8e5a2bae082d5c0b965256" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#ioctl&quot;&gt;ioctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#ioctl&quot;&gt;ioctl in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c9043bd1353cdbd83a2037e01fe071ee1b99ab9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#kill&quot;&gt;&quot;kill&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#kill&quot;&gt;perlport의 &quot;kill&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebcacd62a0c2062e21f33d6736a1f62fe2b0936c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#kill&quot;&gt;kill in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#kill&quot;&gt;perlport에서 kill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92cb3f8b80fad6920293da3766c7d760b67d55a2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#link&quot;&gt;&quot;link&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#link&quot;&gt;perlport의 &quot;link&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68f116e27b264194581024a236f5075dd0e4db7d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#link&quot;&gt;link in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#link&quot;&gt;perlport에 링크&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f6179437d31b8d6feff4605a1d84f4aeefb265a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#localtime&quot;&gt;&quot;localtime&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#localtime&quot;&gt;perlport의 &quot;localtime&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03d0db5d10e9974833b1b1c3f3599761c693ed13" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#localtime&quot;&gt;localtime in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#localtime&quot;&gt;perlport의 현지 시간&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da60c5af8a58d7a76f9e0635a1757db55f0bb52d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#lstat&quot;&gt;&quot;lstat&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#lstat&quot;&gt;perlport의 &quot;lstat&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9384107c161672d710d80e232503dadb7e6b08ff" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#lstat&quot;&gt;lstat in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#lstat&quot;&gt;ll in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35856dbb644a9959af31d3e46b27785f1d8c13df" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgctl&quot;&gt;&quot;msgctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgctl&quot;&gt;perlport의 &quot;msgctl&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ce5d19be1cb2c6b900377e53381f0a75039f0f4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgctl&quot;&gt;msgctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgctl&quot;&gt;perlport에 msgctl과&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bcfd31d6299e3804c9985411aa1659e18acd030" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgget&quot;&gt;&quot;msgget&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgget&quot;&gt;perlport의 &quot;msgget&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="273853a12fff8d8c2877c94a799c6d11eb91e146" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgget&quot;&gt;msgget in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b3d9a654f24bd5606772963b23b7fa30de39092" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgrcv&quot;&gt;&quot;msgrcv&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgrcv&quot;&gt;perlport의 &quot;msgrcv&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ce6fcc59a40ee3a712a22a117201cbb49c059ed" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgrcv&quot;&gt;msgrcv in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgrcv&quot;&gt;perlport에 위해 msgrcv&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55649ab15fcf8beea19dd105bb7c6e1b66fba806" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgsnd&quot;&gt;&quot;msgsnd&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgsnd&quot;&gt;perlport의 &quot;msgsnd&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d8c5e98254d5ca7970f0f4f6c4659693975f475" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#msgsnd&quot;&gt;msgsnd in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#msgsnd&quot;&gt;perlport에 msgsnd는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d2b94d8d9164c5d73d2b50e195ed17ceb35e4cf" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#open&quot;&gt;open in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#open&quot;&gt;perlport에서 열립니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20bfe47e296eef76e96293e48e6d6d2a5fb63901" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#readlink&quot;&gt;&quot;readlink&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#readlink&quot;&gt;perlport의 &quot;readlink&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5597b25507870cc7a3c0d873abddf08fadfbb6a5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#readlink&quot;&gt;readlink in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#readlink&quot;&gt;perlport에서 readlink를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16993c7bc4e45b7c14dcd195d5dc9ea6194284c8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rename&quot;&gt;&quot;rename&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#rename&quot;&gt;perlport에서 &quot;이름 바꾸기&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="716e4f3a9669daacc40fd61530bd695bbd7759b6" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rename&quot;&gt;rename in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#rename&quot;&gt;perlport에서 이름을 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af117cda90136ecbd8d95943301ebb75eb3cf51f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rewinddir&quot;&gt;&quot;rewinddir&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#rewinddir&quot;&gt;perlport의 &quot;rewinddir&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3b295d2fa1936a3c97fdd610c884273d66474dc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#rewinddir&quot;&gt;rewinddir in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#rewinddir&quot;&gt;perlport에 rewinddir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74415a1ecd1179279d82e31b82f172f2dc3f7f95" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#select&quot;&gt;&quot;select&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#select&quot;&gt;perlport의 &quot;select&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e21863bd7fa9feb756c17b1f01cf46f56ecb93a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#select&quot;&gt;select in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#select&quot;&gt;perlport에서 선택하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb8b21e675672c2ac3d9b1ba7e3e01b1ebf84c0c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semctl&quot;&gt;&quot;semctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#semctl&quot;&gt;perlport의 &quot;semctl&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1bb1a914f076b276ff0dc1aa94d5000b5c955de4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semctl&quot;&gt;semctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#semctl&quot;&gt;perlport에 semctl의&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="613a086089aa0e357205828fb7b4954b7f01d2e4" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semget&quot;&gt;&quot;semget&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#semget&quot;&gt;perlport의 &quot;semget&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="853d00ec5dbc8506124b23971b0b01b7963e25d5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semget&quot;&gt;semget in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#semget&quot;&gt;perlport에서 semget&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad030ffadee1ec1d8aff604186a8d50c103568c5" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semop&quot;&gt;&quot;semop&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#semop&quot;&gt;perlport의 &quot;semop&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="868cb9c221ed7185e8f4796a8e730a0f1ebda26a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#semop&quot;&gt;semop in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#semop&quot;&gt;perlport에서 semop&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c096920f04095e1152c332c8b6bda10ea7fe3713" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpgrp&quot;&gt;&quot;setpgrp&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#setpgrp&quot;&gt;perlport의 &quot;setpgrp&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25c026caff364ddc036abeccafbebdfc0f3f8775" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpgrp&quot;&gt;setpgrp in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#setpgrp&quot;&gt;perlport에 setpgrp는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6197cfc86e63d79c473222fc2acdff8ab68eb624" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpriority&quot;&gt;&quot;setpriority&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#setpriority&quot;&gt;perlport의 &quot;setpriority&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="872bde48f35ea9e9c9a2245b619f39f1e6b3b03f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setpriority&quot;&gt;setpriority in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#setpriority&quot;&gt;perlport의 우선 순위&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f38cb5d67babb2c1b6a5b6beb540134b0c5e710" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setsockopt&quot;&gt;&quot;setsockopt&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#setsockopt&quot;&gt;perlport의 &quot;setsockopt&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="691ffbc804de1ecccbf805bd753779ccbe3381c3" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#setsockopt&quot;&gt;setsockopt in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#setsockopt&quot;&gt;perlport에서 setsockopt를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d360028cee563686ee3779be08e9cc3e7febeef" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmctl&quot;&gt;&quot;shmctl&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#shmctl&quot;&gt;perlport의 &quot;shmctl&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="858a2c0f7b0ded8f531191109d3429562043e02f" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmctl&quot;&gt;shmctl in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#shmctl&quot;&gt;perlport에서 설명 shmctl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1aab08f437603b71e9ec959f195935382bf10dc" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmget&quot;&gt;&quot;shmget&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#shmget&quot;&gt;perlport의 &quot;shmget&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19231dcfd55698d417f14d1a3b6116215782cdab" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmget&quot;&gt;shmget in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#shmget&quot;&gt;perlport에서 shmget&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7eedc3ebd8e3efdf183a09f748eabf6ab70986fd" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmread&quot;&gt;&quot;shmread&quot; in perlport&lt;/a&gt; and &lt;a href=&quot;perlport#shmwrite&quot;&gt;&quot;shmwrite&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#shmread&quot;&gt;perlport의 &quot;shmread&quot;&lt;/a&gt; 및 &lt;a href=&quot;perlport#shmwrite&quot;&gt;perlport의 &quot;shmwrite&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="627d60e4612520cea56174ad0b16fbb3e38e20ff" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#shmread&quot;&gt;shmread in perlport&lt;/a&gt; and &lt;a href=&quot;perlport#shmwrite&quot;&gt;shmwrite in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#shmread&quot;&gt;perlport에서 shmread&lt;/a&gt; 및 &lt;a href=&quot;perlport#shmwrite&quot;&gt;perlport에서 shmwrite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c4c781fd79c9491c358664cc37505b81ed206b8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#socketpair&quot;&gt;&quot;socketpair&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#socketpair&quot;&gt;perlport의 &quot;socketpair&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="780263b8d6206d15169032a2f7d8df22cef5bf28" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#socketpair&quot;&gt;socketpair in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#socketpair&quot;&gt;perlport의 소켓 페어&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca84d0fe14f29ac06702c878a84ee45d07b98091" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#stat&quot;&gt;&quot;stat&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#stat&quot;&gt;perlport의 &quot;stat&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b4ad715c17b55bb481c2f4b6c3a7d8ca14fd215" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#stat&quot;&gt;stat in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#stat&quot;&gt;stat in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc16957cf3f10f31d88f3267afc9947410b4081a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#symlink&quot;&gt;&quot;symlink&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#symlink&quot;&gt;perlport의 &quot;symlink&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eabef1a008d47d2a9d7c9c7aada0ec5ae625016b" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#symlink&quot;&gt;symlink in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#symlink&quot;&gt;perlport에 심볼릭 링크&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9823ad1cf37d553a2306cd0aed8364e8819f4cb2" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#syscall&quot;&gt;&quot;syscall&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#syscall&quot;&gt;perlport의 &quot;syscall&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0970859fdcdbefab02ec40fb1a30eba7aa521aca" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#syscall&quot;&gt;syscall in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#syscall&quot;&gt;syscall in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15cb8a4e6fe3ef0953b610ef1c2a07b53f18d689" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#sysopen&quot;&gt;&quot;sysopen&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#sysopen&quot;&gt;perlport의 &quot;sysopen&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0ba78b649c5ef4da0ce9e5399e7e3c970338bcb" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#sysopen&quot;&gt;sysopen in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#sysopen&quot;&gt;sysopen in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e7ca7a038876c7c31ee8768870fc65ad0d23730" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#system&quot;&gt;&quot;system&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#system&quot;&gt;perlport의 &quot;system&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00b0ff2d6c84acc74f68ec16df6d840bfa2a9d20" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#system&quot;&gt;system in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#system&quot;&gt;perlport의 시스템&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a41d8a4c3830ea60212d91efaf7f7bad63d7005d" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#times&quot;&gt;&quot;times&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#times&quot;&gt;perlport의 &quot;times&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f47ec6842d670c2b5f240b1a99a343f0be0064a8" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#times&quot;&gt;times in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#times&quot;&gt;perlport의 시간&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab084849d6ad053d2a986056758a897e6291433c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#truncate&quot;&gt;&quot;truncate&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#truncate&quot;&gt;perlport에서 &quot;자르기&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c05d575ea825b9eb7d154ec58cf2b3a35023f17" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#truncate&quot;&gt;truncate in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#truncate&quot;&gt;perlport에서 잘립니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0cae348143995087cf4258203afb014057d3705" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#umask&quot;&gt;&quot;umask&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#umask&quot;&gt;perlport의 &quot;umask&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a0723e861033da690aecdb7a0d25465db8b2fd9" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#umask&quot;&gt;umask in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#umask&quot;&gt;perlport의 umask&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f7d03de69702f94f5183331173c8ab855e7e511" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#utime&quot;&gt;&quot;utime&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#utime&quot;&gt;perlport의 &quot;utime&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9c20941f15437f18d1b942e125adae8f9f85d4c" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#utime&quot;&gt;utime in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#utime&quot;&gt;utime in perlport&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99017c7a24351c6b5b39bfc67c1bc31052dd0a90" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#wait&quot;&gt;&quot;wait&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#wait&quot;&gt;perlport의 &quot;wait&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="884a47ffafccacec9cec489bf984d5bca96a986a" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#wait&quot;&gt;wait in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#wait&quot;&gt;perlport에서 대기하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7aa3eda67377010c0f878a2f1845a5fa61cfd861" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#waitpid&quot;&gt;&quot;waitpid&quot; in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#waitpid&quot;&gt;perlport의 &quot;waitpid&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b032428386020b84fe78cbe14f2bb689e3e1c1b1" translate="yes" xml:space="preserve">
          <source>Portability issues: &lt;a href=&quot;perlport#waitpid&quot;&gt;waitpid in perlport&lt;/a&gt;.</source>
          <target state="translated">이식성 문제 : &lt;a href=&quot;perlport#waitpid&quot;&gt;perlport으로는 waitpid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db93898741dd39c4fe99b1c63e52e52213f6f2a7" translate="yes" xml:space="preserve">
          <source>Portability problems</source>
          <target state="translated">이식성 문제</target>
        </trans-unit>
        <trans-unit id="079513fb0cbc5cac6b6c82c2309f1cf45564d331" translate="yes" xml:space="preserve">
          <source>Portability-wise the best option is probably to keep to the IEEE 754 64-bit doubles, and of agreed-upon endianness. Another possibility is the &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ) format of &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이식성 측면에서 가장 좋은 옵션은 아마도 IEEE 754 64 비트 복식과 동의 된 엔디안을 유지하는 것입니다. 또 다른 가능성은 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&quot;%a&quot;&lt;/code&gt; 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="3e07e11e6ce830489a0e3d7415eaa2eb4ba1b70c" translate="yes" xml:space="preserve">
          <source>Portability-wise the best option is probably to keep to the IEEE 754 64-bit doubles, and of agreed-upon endianness. Another possibility is the &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ) format of &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이식성 측면에서 가장 좋은 옵션은 아마도 IEEE 754 64 비트 복식과 동의 된 엔디안을 유지하는 것입니다. 또 다른 가능성은 &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;&quot;%a&quot;&lt;/code&gt; 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="0858e761b438f91ff2c91031924781890987aa36" translate="yes" xml:space="preserve">
          <source>Portability-wise the best option is probably to keep to the IEEE 754 64-bit doubles, and of agreed-upon endianness. Another possibility is the &lt;code&gt;&quot;%a&quot;&lt;/code&gt;) format of &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt;&lt;code&gt;printf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이식성 측면에서 가장 좋은 방법은 아마도 IEEE 754 64 비트 double과 합의 된 엔디안을 유지하는 것입니다. 또 다른 가능성은 &lt;a href=&quot;#printf-FILEHANDLE-FORMAT%2C-LIST&quot;&gt; &lt;code&gt;printf&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;&quot;%a&quot;&lt;/code&gt; ) 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="6942aa2b4104144ab813bb2df92d7d21b77ab61f" translate="yes" xml:space="preserve">
          <source>Portable cases are:</source>
          <target state="translated">휴대용 케이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81d57ea512cd2b00da23b0b4e909db41c6d5f619" translate="yes" xml:space="preserve">
          <source>Portably perform operations on file names</source>
          <target state="translated">파일 이름에 대한 조작 가능</target>
        </trans-unit>
        <trans-unit id="ca3a4fa5e8330446e0c75ad92cfc7751e39dce5a" translate="yes" xml:space="preserve">
          <source>Porting</source>
          <target state="translated">Porting</target>
        </trans-unit>
        <trans-unit id="16cc9b9ed43ca5d3cf0a48ee505d3443f796b9af" translate="yes" xml:space="preserve">
          <source>Porting code from perl-5.6.X</source>
          <target state="translated">perl-5.6.X의 포팅 코드</target>
        </trans-unit>
        <trans-unit id="e6aa7d597be18a7e75e0ff04e1bdc44069467c90" translate="yes" xml:space="preserve">
          <source>Porting/</source>
          <target state="translated">Porting/</target>
        </trans-unit>
        <trans-unit id="ea9b53e814debd6affceeb25330fbf44281cc84b" translate="yes" xml:space="preserve">
          <source>Porting/bench.pl</source>
          <target state="translated">Porting/bench.pl</target>
        </trans-unit>
        <trans-unit id="93a48d5d9c4ff7c93e67293446fe845ecc9f9f26" translate="yes" xml:space="preserve">
          <source>Porting/bisect-example.sh</source>
          <target state="translated">Porting/bisect-example.sh</target>
        </trans-unit>
        <trans-unit id="00d61807bdba62873dddfe4170767bc9a5c4657a" translate="yes" xml:space="preserve">
          <source>Porting/bisect.pl</source>
          <target state="translated">Porting/bisect.pl</target>
        </trans-unit>
        <trans-unit id="7253564338b477221d544e36f39c603f64cc6d02" translate="yes" xml:space="preserve">
          <source>Porting/how_to_write_a_perldelta.pod</source>
          <target state="translated">Porting/how_to_write_a_perldelta.pod</target>
        </trans-unit>
        <trans-unit id="6ddfafb40f17f6ecbc175b82b5894f9f8fe5bba5" translate="yes" xml:space="preserve">
          <source>Porting/pumpkin.pod</source>
          <target state="translated">Porting/pumpkin.pod</target>
        </trans-unit>
        <trans-unit id="e1d84bb832bff9b7ba90c66df47cd4933437114a" translate="yes" xml:space="preserve">
          <source>Porting/release_managers_guide.pod</source>
          <target state="translated">Porting/release_managers_guide.pod</target>
        </trans-unit>
        <trans-unit id="641afa9afdaad52f39b2d32f8a1cd6628b42fd06" translate="yes" xml:space="preserve">
          <source>Portions copyright 2006-2008 Adam Kennedy.</source>
          <target state="translated">저작권 부분 2006-2008 Adam Kennedy.</target>
        </trans-unit>
        <trans-unit id="48a526a81927a98d8cc7484c34ddf42f9e637788" translate="yes" xml:space="preserve">
          <source>Portions of the C code in this library are copyright (c) 1994 by the Regents of the University of California. All rights reserved. The license on this code is compatible with the licensing of the rest of the distribution - please see the source code in</source>
          <target state="translated">이 라이브러리에있는 C 코드의 일부는 캘리포니아 대학의 리전트에 의해 1994 년 저작권이 있습니다 (c). 판권 소유. 이 코드의 라이센스는 나머지 배포 라이센스와 호환됩니다. 소스 코드를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="1b44bd9f2e8afdb3d9a6b86ffdafa46f6fb7dc71" translate="yes" xml:space="preserve">
          <source>Portions of the data tables in this module are derived from the entity declarations in the W3C XHTML specification.</source>
          <target state="translated">이 모듈의 데이터 테이블 부분은 W3C XHTML 사양의 엔티티 선언에서 파생됩니다.</target>
        </trans-unit>
        <trans-unit id="e21d9d1f135238fda93004ae5db1ba481150e581" translate="yes" xml:space="preserve">
          <source>Portions of this document that are still incomplete are marked with XXX.</source>
          <target state="translated">아직 불완전한이 문서의 일부는 XXX로 표시되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4aa88ae214cc20e8cb9e2cfedd50aa166fe2ef36" translate="yes" xml:space="preserve">
          <source>Ports of Perl to a new platform, architecture or OS release that involve changes to the implementation.</source>
          <target state="translated">Perl 포트는 구현 변경을 포함하는 새로운 플랫폼, 아키텍처 또는 OS 릴리스로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a495190bcc2ef4116725616d321016a7def5bd8f" translate="yes" xml:space="preserve">
          <source>Portugal</source>
          <target state="translated">Portugal</target>
        </trans-unit>
        <trans-unit id="6ca22cededa3b3cbf9e73ceb1a2efd6072b76d37" translate="yes" xml:space="preserve">
          <source>Position 18 is good, but position 23 is bogus. What happened?</source>
          <target state="translated">위치 18은 좋지만 위치 23은 가짜입니다. 어떻게 된 거예요?</target>
        </trans-unit>
        <trans-unit id="f8075bf0afcc9cf807fb8c4f9c812962d64e55d5" translate="yes" xml:space="preserve">
          <source>Position information</source>
          <target state="translated">위치 정보</target>
        </trans-unit>
        <trans-unit id="c044cacc39f4d91c9b8cc9ba42458a92475e6684" translate="yes" xml:space="preserve">
          <source>Position the file pointer. Should normally call its own &lt;code&gt;Flush&lt;/code&gt; method and then the &lt;code&gt;Seek&lt;/code&gt; method of next layer down.</source>
          <target state="translated">파일 포인터를 놓습니다. 일반적으로 자체 &lt;code&gt;Flush&lt;/code&gt; 메서드를 호출 한 다음 다음 레이어 의 &lt;code&gt;Seek&lt;/code&gt; 메서드를 다운해야합니다.</target>
        </trans-unit>
        <trans-unit id="a6c526dcc12f43618f2ecd784fb24aede6eaace5" translate="yes" xml:space="preserve">
          <source>Position the file.</source>
          <target state="translated">파일을 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="d0563a74c40a028ff0eabefa0c47db1f013fe7e3" translate="yes" xml:space="preserve">
          <source>Positional parameters are handled by simply naming scalar variables in the signature. For example,</source>
          <target state="translated">위치 매개 변수는 단순히 서명에서 스칼라 변수의 이름을 지정하여 처리됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="417c7f773d020f0d3b9c6358a7f4bcbbfa4f51f5" translate="yes" xml:space="preserve">
          <source>Positions the record stream to the end-of-file for the connect operation only.</source>
          <target state="translated">연결 조작에 대해서만 레코드 스트림을 파일 끝에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="0e30507599bac7d9da05192ebf7bafb46204a7a4" translate="yes" xml:space="preserve">
          <source>Possessing a complete name. The symbol &lt;code&gt;$Ent::moot&lt;/code&gt; is qualified; &lt;code&gt;$moot&lt;/code&gt; is unqualified. A fully qualified filename is specified from the top-level directory.</source>
          <target state="translated">완전한 이름을 가지고 있습니다. &lt;code&gt;$Ent::moot&lt;/code&gt; 기호 가 규정되어 있습니다. &lt;code&gt;$moot&lt;/code&gt; 는 자격이 없습니다. 정규화 된 파일 이름은 최상위 디렉토리에서 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="b0a25e4c6df0cbb8129a405e968846abe861b888" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers</source>
          <target state="translated">보유 수량 자</target>
        </trans-unit>
        <trans-unit id="710ec6bd221d1eb7ee7cac2afd79245dfe1dd377" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers are equivalent to putting the item they are applied to inside of one of these constructs. The following equivalences apply:</source>
          <target state="translated">소유 수량자는 적용되는 항목을 이러한 구성 중 하나에 넣는 것과 같습니다. 다음과 같은 내용이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9197d7f57b0ce03ff75af9ee8fd893a3294a408d" translate="yes" xml:space="preserve">
          <source>Possible =item type mismatch: '</source>
          <target state="translated">가능한 = 항목 유형 불일치 : '</target>
        </trans-unit>
        <trans-unit id="c76824bb46fe1a542cd1743075ab87c62cd07e57" translate="yes" xml:space="preserve">
          <source>Possible attempt to put comments in qw() list</source>
          <target state="translated">qw () 목록에 주석을 넣을 수있는 시도</target>
        </trans-unit>
        <trans-unit id="c8c6c52e896ec500eb08e36d677a8dbe15848c92" translate="yes" xml:space="preserve">
          <source>Possible attempt to separate words with commas</source>
          <target state="translated">쉼표로 단어를 구분하려는 시도</target>
        </trans-unit>
        <trans-unit id="8d65618737c8f165c76518763bb53e022b80347d" translate="yes" xml:space="preserve">
          <source>Possible locations to get the files:</source>
          <target state="translated">파일을 얻을 수있는 위치 :</target>
        </trans-unit>
        <trans-unit id="3848a899c487a0ef74b9dbbdf14cfc21f7e17a17" translate="yes" xml:space="preserve">
          <source>Possible memory corruption: %s overflowed 3rd argument</source>
          <target state="translated">메모리 손상 가능성 : % s 세 번째 인수가 오버플로되었습니다.</target>
        </trans-unit>
        <trans-unit id="1c2e8060a440dfd38b806ad920aac268f371ecbb" translate="yes" xml:space="preserve">
          <source>Possible precedence issue with control flow operator</source>
          <target state="translated">제어 흐름 연산자의 가능한 우선 순위 문제</target>
        </trans-unit>
        <trans-unit id="02a57c52eda4a97a5a244c5253a528bc82c6602a" translate="yes" xml:space="preserve">
          <source>Possible precedence problem on bitwise %s operator</source>
          <target state="translated">비트 % s 연산자의 가능한 우선 순위 문제</target>
        </trans-unit>
        <trans-unit id="fa99af39818b691d664b99b5c353eca617f2e3dd" translate="yes" xml:space="preserve">
          <source>Possible unintended interpolation of $\ in regex</source>
          <target state="translated">정규식에서 $ \의 의도하지 않은 보간 가능성</target>
        </trans-unit>
        <trans-unit id="6bd92ff007aa6d8b43a35422d76aa816a8ff6474" translate="yes" xml:space="preserve">
          <source>Possible unintended interpolation of %s in string</source>
          <target state="translated">문자열에서 % s의 의도하지 않은 보간 가능성</target>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="translated">가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">가능한 값 :</target>
        </trans-unit>
        <trans-unit id="d472359347147115fc3c19663e89b625bb02902c" translate="yes" xml:space="preserve">
          <source>Post Office Protocol 3 Client class (RFC1939)</source>
          <target state="translated">우체국 프로토콜 3 클라이언트 클래스 (RFC1939)</target>
        </trans-unit>
        <trans-unit id="0a29797f79372fde99a5ef6badeb4b11cfdd110a" translate="yes" xml:space="preserve">
          <source>Post a new article to the news server using a tied filehandle. If posting is allowed, this method will return a tied filehandle that you can print() the contents of the article to be posted. You must explicitly close() the filehandle when you are finished posting the article, and the return value from the close() call will indicate whether the message was successfully posted.</source>
          <target state="translated">묶인 파일 핸들을 사용하여 새 기사를 뉴스 서버에 게시하십시오. 게시가 허용되면이 메소드는 게시 할 기사의 내용을 print () 할 수있는 묶인 파일 핸들을 반환합니다. 기사 게시가 끝나면 파일 핸들을 명시 적으로 close ()해야하며 close () 호출의 반환 값은 메시지가 성공적으로 게시되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0c64b012716c7ba679076f89a6776bcbf37ad82" translate="yes" xml:space="preserve">
          <source>Post a new article to the news server. If &lt;code&gt;MESSAGE&lt;/code&gt; is specified and posting is allowed then the message will be sent.</source>
          <target state="translated">뉴스 서버에 새 기사를 게시하십시오. 경우 &lt;code&gt;MESSAGE&lt;/code&gt; 지정되고 게시가 허용 된 후 메시지가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="b93dd2631ce48b2c54303e56c98d829a533f5625" translate="yes" xml:space="preserve">
          <source>Post a public message in a heavily trafficked site announcing your intention to take over the module.</source>
          <target state="translated">트래픽이 많은 사이트에 공개 메시지를 게시하여 모듈을 인수하겠다는 의사를 밝힙니다.</target>
        </trans-unit>
        <trans-unit id="ddce30e4bfb396471a259ebc110a23b949a4f5f0" translate="yes" xml:space="preserve">
          <source>Post to mailing list</source>
          <target state="translated">메일 링리스트에 게시</target>
        </trans-unit>
        <trans-unit id="937a6feb504555c9c17e4a5c6895ae9906b154df" translate="yes" xml:space="preserve">
          <source>Postfix Dereference Syntax</source>
          <target state="translated">접미사 역 참조 구문</target>
        </trans-unit>
        <trans-unit id="670df18cfdfd04e8862a6c47f0addc1747a2af07" translate="yes" xml:space="preserve">
          <source>Postfix Reference Slicing</source>
          <target state="translated">접미사 참조 슬라이싱</target>
        </trans-unit>
        <trans-unit id="9b88dd7b4adbe5e941b4c60fc54a020147730776" translate="yes" xml:space="preserve">
          <source>Postfix array and scalar dereferencing</source>
          <target state="translated">접미사 배열 및 스칼라 역 참조</target>
        </trans-unit>
        <trans-unit id="c71c2847613385562445ff81717d9bb4d1a33f70" translate="yes" xml:space="preserve">
          <source>Postfix dereference should work in all circumstances where block (circumfix) dereference worked, and should be entirely equivalent. This syntax allows dereferencing to be written and read entirely left-to-right. The following equivalencies are defined:</source>
          <target state="translated">접미사 역 참조는 차단 (접미사) 역 참조가 작동하는 모든 상황에서 작동해야하며 완전히 동일해야합니다. 이 구문을 사용하면 역 참조를 작성하고 완전히 왼쪽에서 오른쪽으로 읽을 수 있습니다. 다음과 같은 동등성이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="36854e41a1a6c55217aca3f3b4efeb94f7d03456" translate="yes" xml:space="preserve">
          <source>Postfix key/value pair slicing, added in 5.20.0 and documented in &lt;a href=&quot;perldata#Key%2FValue-Hash-Slices&quot;&gt;the Key/Value Hash Slices section of perldata&lt;/a&gt;, also behaves as expected:</source>
          <target state="translated">5.20.0에 추가되고 &lt;a href=&quot;perldata#Key%2FValue-Hash-Slices&quot;&gt;perldata의 키 / 값 해시 슬라이스 섹션에&lt;/a&gt; 문서화 된 후위 키 / 값 쌍 분할 도 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f3ec2bb2a047a99ed59d3be9cc0c559fda55d10c" translate="yes" xml:space="preserve">
          <source>Postfix key/value pair slicing, added in 5.20.0 and documented in &lt;a href=&quot;perldata#Key%2fValue-Hash-Slices&quot;&gt;the Key/Value Hash Slices section of perldata&lt;/a&gt;, also behaves as expected:</source>
          <target state="translated">5.20.0에서 추가되고 &lt;a href=&quot;perldata#Key%2fValue-Hash-Slices&quot;&gt;perldata의 키 / 값 해시 슬라이스 섹션에&lt;/a&gt; 문서화 된 접미사 키 / 값 쌍 슬라이싱 도 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="04ec3882b5f81dfbca3ecaeafba246a10ffa796f" translate="yes" xml:space="preserve">
          <source>Postpone load of modules until a function is used</source>
          <target state="translated">함수가 사용될 때까지 모듈로드 연기</target>
        </trans-unit>
        <trans-unit id="d2a4543d0ad08e45f28a205ad22f1e3caeac2d64" translate="yes" xml:space="preserve">
          <source>Potentially one of the trickiest problems to overcome when designing a callback interface can be figuring out how to store the mapping between the C callback function and the Perl equivalent.</source>
          <target state="translated">콜백 인터페이스를 설계 할 때 극복해야 할 가장 까다로운 문제 중 하나는 C 콜백 함수와 Perl 등가물 간의 매핑을 저장하는 방법을 파악하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d435ce3a5c92f940c1a99bac59566fd2ce4209c3" translate="yes" xml:space="preserve">
          <source>Practical hint: you almost never need to use &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt;&lt;code&gt;eof&lt;/code&gt;&lt;/a&gt; in Perl, because the input operators typically return &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt; when they run out of data or encounter an error.</source>
          <target state="translated">실용적인 힌트 : 입력 연산자는 일반적으로 데이터가 부족하거나 오류가 발생하면 &lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; 를&lt;/a&gt; 반환하기 때문에 Perl에서 &lt;a href=&quot;#eof-FILEHANDLE&quot;&gt; &lt;code&gt;eof&lt;/code&gt; &lt;/a&gt; 를 사용할 필요가 거의 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0649dcff6091a76865807331d6bfa798c788d3e2" translate="yes" xml:space="preserve">
          <source>Practical hint: you almost never need to use &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; in Perl, because the input operators typically return &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when they run out of data or encounter an error.</source>
          <target state="translated">실용적인 힌트 : 입력 연산자가 일반적으로 데이터가 부족하거나 오류가 발생하면 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환하므로 Perl에서 &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; 를 거의 사용할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="9c79f9de3f9791d9e3640774f31e39c172d803ae" translate="yes" xml:space="preserve">
          <source>Practical hint: you almost never need to use &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; in Perl, because the input operators typically return &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when they run out of data or encounter an error.</source>
          <target state="translated">실용적인 힌트 : 입력 연산자가 일반적으로 데이터가 부족하거나 오류가 발생하면 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환하므로 Perl에서 &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; 를 거의 사용할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4270fcef9cd955376d2d433cbe3ad453cb9910a5" translate="yes" xml:space="preserve">
          <source>Practicing Perl Programmers should take note of the following:</source>
          <target state="translated">Perl 프로그래머는 다음 사항에주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="38f93d32853eca4603a582eb7a404079e10b855d" translate="yes" xml:space="preserve">
          <source>Pragma</source>
          <target state="translated">Pragma</target>
        </trans-unit>
        <trans-unit id="4f32a07197212fd4ee8ad1142954d88e709f37a2" translate="yes" xml:space="preserve">
          <source>Pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; is used to gain access to the names of the Unicode characters and named character sequences, and to allow you to define your own character and character sequence names.</source>
          <target state="translated">Pragma &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames&lt;/code&gt; 는 유니 코드 문자 및 명명 된 문자 시퀀스의 이름에 액세스하고 고유 한 문자 및 문자 시퀀스 이름을 정의 할 수 있도록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b41219589c56411f994d6f2cf3ea28c18695cf85" translate="yes" xml:space="preserve">
          <source>Pragma &lt;code&gt;use charnames&lt;/code&gt; is used to gain access to the names of the Unicode characters and named character sequences, and to allow you to define your own character and character sequence names.</source>
          <target state="translated">Pragma &lt;code&gt;use charnames&lt;/code&gt; 는 유니 코드 문자 및 명명 된 문자 시퀀스의 이름에 액세스하고 사용자가 고유 한 문자 및 문자 시퀀스 이름을 정의 할 수 있도록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d857c4a3cba6bb11f909b140e46311890f7f21c4" translate="yes" xml:space="preserve">
          <source>Pragmas</source>
          <target state="translated">Pragmas</target>
        </trans-unit>
        <trans-unit id="3c5e2f66507f9aa3bf61c02fdd0fa70e115987d9" translate="yes" xml:space="preserve">
          <source>Pragmas and debugging</source>
          <target state="translated">실용과 디버깅</target>
        </trans-unit>
        <trans-unit id="3e8b13bf6bd7207dc21ad82f8de792e97bdb1e50" translate="yes" xml:space="preserve">
          <source>Pragmas are only supported from TAP version 13 onwards.</source>
          <target state="translated">Pragma는 TAP 버전 13 이상에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="971af7eca951f1fbb9960d4ee2d3aea5a1235f54" translate="yes" xml:space="preserve">
          <source>Pragmatic Modules</source>
          <target state="translated">실용 모듈</target>
        </trans-unit>
        <trans-unit id="ea00a7d451d39ea4021279960b408e9e237e5fc0" translate="yes" xml:space="preserve">
          <source>Praise of the module, flowers, and presents still go to the author, Damian Conway &amp;lt;damian@conway.org&amp;gt;.</source>
          <target state="translated">모듈, 꽃 및 선물에 대한 찬사는 여전히 저자 Damian Conway &amp;lt;damian@conway.org&amp;gt;에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="1b29958a379894f384c104d607dfd507e7d7dd32" translate="yes" xml:space="preserve">
          <source>Pre-ANSI semantics for that was equivalent to</source>
          <target state="translated">그에 대한 Pre-ANSI 시맨틱은</target>
        </trans-unit>
        <trans-unit id="2fbcc9e8ca617de5c029f92c1928b430d8bd8736" translate="yes" xml:space="preserve">
          <source>Pre-compiled regexps are useful for creating dynamic matches that don't need to be recompiled each time they are encountered. Using pre-compiled regexps, we write a &lt;code&gt;grep_step&lt;/code&gt; program which greps for a sequence of patterns, advancing to the next pattern as soon as one has been satisfied.</source>
          <target state="translated">사전 컴파일 된 정규 표현식은 발생할 때마다 다시 컴파일 할 필요가없는 동적 일치를 작성하는 데 유용합니다. 사전 컴파일 된 정규 표현식을 사용 하여 &lt;code&gt;grep_step&lt;/code&gt; 프로그램을 작성하여 일련의 패턴을 파악하고 다음 패턴이 충족되는 즉시 다음 패턴으로 진행합니다.</target>
        </trans-unit>
        <trans-unit id="2e391893bd11655ad910aed5c91fa6713612cf00" translate="yes" xml:space="preserve">
          <source>Pre-extend an array so that it is capable of storing values at indexes &lt;code&gt;0..key&lt;/code&gt;. Thus &lt;code&gt;av_extend(av,99)&lt;/code&gt; guarantees that the array can store 100 elements, i.e. that &lt;code&gt;av_store(av, 0, sv)&lt;/code&gt; through &lt;code&gt;av_store(av, 99, sv)&lt;/code&gt; on a plain array will work without any further memory allocation.</source>
          <target state="translated">인덱스 &lt;code&gt;0..key&lt;/code&gt; 에 값을 저장할 수 있도록 배열을 사전 확장합니다 . 따라서 &lt;code&gt;av_extend(av,99)&lt;/code&gt; 는 배열이 100 개의 요소를 저장할 수 있음을 보장합니다. 즉 , 일반 배열의 &lt;code&gt;av_store(av, 0, sv)&lt;/code&gt; 에서 &lt;code&gt;av_store(av, 99, sv)&lt;/code&gt; 추가 메모리 할당없이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d5f48644a7129c9d5da2320101de47f3b885b660" translate="yes" xml:space="preserve">
          <source>Pre-extend an array. The &lt;code&gt;key&lt;/code&gt; is the index to which the array should be extended.</source>
          <target state="translated">배열을 미리 확장하십시오. &lt;code&gt;key&lt;/code&gt; 배열이 확장되어야하는 인덱스이다.</target>
        </trans-unit>
        <trans-unit id="b10fcb8ea3f8003cc2a68eb477298ced48c3e1ce" translate="yes" xml:space="preserve">
          <source>Pre-process the string to expand &lt;code&gt;{pat,pat,...}&lt;/code&gt; strings like csh(1). The pattern '{}' is left unexpanded for historical reasons (and csh(1) does the same thing to ease typing of find(1) patterns).</source>
          <target state="translated">csh (1)과 같은 &lt;code&gt;{pat,pat,...}&lt;/code&gt; 문자열 을 확장하기 위해 문자열을 사전 처리하십시오 . 패턴 '{}'은 (는) 역사적인 이유로 확장되지 않은 상태로 유지됩니다 (그리고 csh (1)은 find (1) 패턴을 쉽게 입력 할 수 있도록 동일한 기능을 수행함).</target>
        </trans-unit>
        <trans-unit id="2cfc6ae03601619aa86eab49f8cdcba160ca42e1" translate="yes" xml:space="preserve">
          <source>Pre-requisites</source>
          <target state="translated">Pre-requisites</target>
        </trans-unit>
        <trans-unit id="9c60435756471d4710932d1c59839109eaf4896d" translate="yes" xml:space="preserve">
          <source>Prebuilt methods:</source>
          <target state="translated">사전 구축 된 방법 :</target>
        </trans-unit>
        <trans-unit id="28b96a948b2f4129281e76a6bf72cbe04069ac57" translate="yes" xml:space="preserve">
          <source>Prebuilt variables:</source>
          <target state="translated">사전 빌드 된 변수 :</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="6329e2122e096c0052a2d0d79f2321e19c26198f" translate="yes" xml:space="preserve">
          <source>Precedence problem: open %s should be open(%s)</source>
          <target state="translated">우선 순위 문제 : 열려있는 % s이 (가) 열려 있어야합니다 (% s).</target>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="translated">Precision</target>
        </trans-unit>
        <trans-unit id="2b07cb5bc64f911d6e1d4e8b016d735ad5687328" translate="yes" xml:space="preserve">
          <source>Precision P</source>
          <target state="translated">정밀 P</target>
        </trans-unit>
        <trans-unit id="3a4cdc5225e11e06c1c5a9bc61aa6d9cbe7d720d" translate="yes" xml:space="preserve">
          <source>Precision is a fixed number of digits before (positive) or after (negative) the decimal point. For example, 123.45 has a precision of -2. 0 means an integer like 123 (or 120). A precision of 2 means at least two digits to the left of the decimal point are zero, so 123 with P = 1 becomes 120. Note that numbers with zeros before the decimal point may have different precisions, because 1200 can have P = 0, 1 or 2 (depending on what the initial value was). It could also have p &amp;lt; 0, when the digits after the decimal point are zero.</source>
          <target state="translated">정밀도는 소수점 앞 (양수) 또는 뒤 (음수)의 고정 된 자릿수입니다. 예를 들어 123.45의 정밀도는 -2입니다. 0은 123 (또는 120)과 같은 정수를 의미합니다. 정밀도 2는 소수점 왼쪽에있는 두 자리 이상이 0임을 의미하므로 P = 1 인 123은 120이됩니다. 소수점 앞에 0이있는 숫자는 정밀도가 다를 수 있습니다. 1200은 P = 0을 가질 수 있기 때문입니다. 1 또는 2 (초기 값에 따라 다름). 소수점 이하 자릿수가 0 일 때 p &amp;lt;0 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f875922b09d6dc1883e2e7cdd44c0e3a3e94a8bc" translate="yes" xml:space="preserve">
          <source>Precompilation of the pattern into an internal representation at the moment of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; avoids the need to recompile the pattern every time a match &lt;code&gt;/$pat/&lt;/code&gt; is attempted. (Perl has many other internal optimizations, but none would be triggered in the above example if we did not use &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; operator.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 시점에서 패턴을 내부 표현으로 사전 컴파일하면 &lt;code&gt;/$pat/&lt;/code&gt; 와 일치 할 때마다 패턴을 다시 컴파일 할 필요가 없습니다 . (Perl에는 다른 많은 내부 최적화 기능이 있지만 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 연산자를 사용하지 않으면 위의 예제에서 트리거되지 않습니다 .)</target>
        </trans-unit>
        <trans-unit id="e3c6ba98425243aac89d345daad9b66397615925" translate="yes" xml:space="preserve">
          <source>Precompilation of the pattern into an internal representation at the moment of &lt;code&gt;qr()&lt;/code&gt; avoids the need to recompile the pattern every time a match &lt;code&gt;/$pat/&lt;/code&gt; is attempted. (Perl has many other internal optimizations, but none would be triggered in the above example if we did not use &lt;code&gt;qr()&lt;/code&gt; operator.)</source>
          <target state="translated">&lt;code&gt;qr()&lt;/code&gt; 순간에 내부 표현으로 패턴을 미리 컴파일하면 &lt;code&gt;/$pat/&lt;/code&gt; 일치 를 시도 할 때마다 패턴을 다시 컴파일 할 필요가 없습니다 . (Perl에는 다른 많은 내부 최적화가 있지만 &lt;code&gt;qr()&lt;/code&gt; 연산자를 사용하지 않으면 위의 예에서 트리거되는 것이 없습니다 .)</target>
        </trans-unit>
        <trans-unit id="c20f646c020ac247f9d858b3944e690a4889a4b4" translate="yes" xml:space="preserve">
          <source>Precompiled Binaries</source>
          <target state="translated">미리 컴파일 된 바이너리</target>
        </trans-unit>
        <trans-unit id="be7aad2f2ead853044925ed4e22070f406951f6c" translate="yes" xml:space="preserve">
          <source>Precompiled binaries, links to many sites, and much, much more are available at &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt; and &lt;a href=&quot;http://www.blastwave.org/&quot;&gt;http://www.blastwave.org/&lt;/a&gt;.</source>
          <target state="translated">사전 컴파일 된 바이너리, 많은 사이트에 대한 링크 등은 &lt;a href=&quot;http://www.sunfreeware.com/&quot;&gt;http://www.sunfreeware.com/&lt;/a&gt; 및 &lt;a href=&quot;http://www.blastwave.org/&quot;&gt;http://www.blastwave.org/&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9becba2ecce5e815e75f3b05d6a72e8e463e4358" translate="yes" xml:space="preserve">
          <source>Predeclare global variable names</source>
          <target state="translated">전역 변수 이름을 미리 선언</target>
        </trans-unit>
        <trans-unit id="80c74001ab374f9d6385a023afc607a8a9ee7ede" translate="yes" xml:space="preserve">
          <source>Predeclare sub names</source>
          <target state="translated">하위 이름 사전 선언</target>
        </trans-unit>
        <trans-unit id="24de24aa33419414171f286cece63fd2df91afc4" translate="yes" xml:space="preserve">
          <source>Predeclare subroutine names</source>
          <target state="translated">서브 루틴 이름 미리 선언</target>
        </trans-unit>
        <trans-unit id="fcdc57a9dfc65d3e8247e2abc3f2dbee6434d71f" translate="yes" xml:space="preserve">
          <source>Predefined As:</source>
          <target state="translated">사전 정의 된 이름 :</target>
        </trans-unit>
        <trans-unit id="79e73f11af1b28edb5e6c2f50de7a40c3138546f" translate="yes" xml:space="preserve">
          <source>Predefined Methods</source>
          <target state="translated">미리 정의 된 방법</target>
        </trans-unit>
        <trans-unit id="ba26022b30a5919c6e22dc87472766a340d507c9" translate="yes" xml:space="preserve">
          <source>Predefined Opcode Tags</source>
          <target state="translated">사전 정의 된 Opcode 태그</target>
        </trans-unit>
        <trans-unit id="60fd5e72e221540e42c68c591eb8825e9818fba4" translate="yes" xml:space="preserve">
          <source>Predicate to detect whether package contains XS.</source>
          <target state="translated">패키지에 XS가 포함되어 있는지 감지하는 술어입니다.</target>
        </trans-unit>
        <trans-unit id="74ff649a3a1be6633677b33ec66e3623a45738d8" translate="yes" xml:space="preserve">
          <source>Predicates</source>
          <target state="translated">Predicates</target>
        </trans-unit>
        <trans-unit id="b667e8c1107543d66d7cab24522776a0879c9d96" translate="yes" xml:space="preserve">
          <source>Predicates are not exportable. They must be called by explicitly prefixing them with the Storable package name.</source>
          <target state="translated">술어는 내보낼 수 없습니다. Storable 패키지 이름을 명시 적으로 접두어로 붙여 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="486c0b3ebd2042a6ce2f4cb9151258c31c8a708a" translate="yes" xml:space="preserve">
          <source>Preemptive multitasking systems interrupt threads at regular intervals while the system decides which thread should run next. In a preemptive multitasking system, one thread usually won't monopolize the CPU.</source>
          <target state="translated">선점 형 멀티 태스킹 시스템은 시스템이 다음에 실행할 스레드를 결정하는 동안 정기적으로 스레드를 중단합니다. 선점 형 멀티 태스킹 시스템에서 하나의 스레드는 일반적으로 CPU를 독점하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="910177df20d444aedde7cd08b1849b3cca54c380" translate="yes" xml:space="preserve">
          <source>Preferred method for determining the current working directory?</source>
          <target state="translated">현재 작업 디렉토리를 결정하는 데 선호되는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="2aca457be49d63d7eff6210a8d246e858c52f84a" translate="yes" xml:space="preserve">
          <source>Prefix patterns are matched without any trailing modifiers (&lt;code&gt;/gimsox&lt;/code&gt; etc.) This can bite you if you're expecting a prefix specification like '.*?(?=&amp;lt;H1&amp;gt;)' to skip everything up to the first &amp;lt;H1&amp;gt; tag. Such a prefix pattern will only succeed if the &amp;lt;H1&amp;gt; tag is on the current line, since . normally doesn't match newlines.</source>
          <target state="translated">접두사 패턴은 후행 수정 자 ( &lt;code&gt;/gimsox&lt;/code&gt; 등) 없이 일치합니다 . '. *? (? = &amp;lt;H1&amp;gt;)'과 같은 접두사 사양을 기대하여 첫 번째 &amp;lt;H1&amp;gt; 태그까지 모든 항목을 건너 뛰려면 . 이러한 접두사 패턴은 &amp;lt;H1&amp;gt; 태그가 현재 행에있는 경우에만 성공합니다. 일반적으로 개행과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a02d52e7a8f126c57caa627d5a51525bbcd6a947" translate="yes" xml:space="preserve">
          <source>Prefixing a method call with &lt;code&gt;EVERY::&lt;/code&gt; causes every method in the object's hierarchy with that name to be invoked. As the above example illustrates, they are not called in Perl's usual &quot;left-most-depth-first&quot; order. Instead, they are called &quot;breadth-first-dependency-wise&quot;.</source>
          <target state="translated">&lt;code&gt;EVERY::&lt;/code&gt; 로 메소드 호출을 접두사로 지정하면 해당 이름을 가진 객체 계층의 모든 메소드가 호출됩니다. 위의 예에서 볼 수 있듯이 이들은 Perl의 일반적인 &quot;가장 왼쪽 깊이&quot;순서로 호출되지 않습니다. 대신에, 그들은 &quot;폭 우선 우선&quot;이라고 부릅니다.</target>
        </trans-unit>
        <trans-unit id="45387252dd62c82eda90107a17373d352ea6a801" translate="yes" xml:space="preserve">
          <source>Prefixing the terminating string with a &lt;code&gt;~&lt;/code&gt; specifies that you want to use &lt;a href=&quot;#Indented-Here-docs&quot;&gt;&quot;Indented Here-docs&quot;&lt;/a&gt; (see below).</source>
          <target state="translated">종료 문자열 앞에 &lt;code&gt;~&lt;/code&gt; 를&lt;a href=&quot;#Indented-Here-docs&quot;&gt;붙이면 &quot;Indented Here-docs&quot;&lt;/a&gt; 를 사용할 것임을 지정합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="44336b0ea88221835aa9ca45ec9e003737af39bb" translate="yes" xml:space="preserve">
          <source>Preliminary verifications are made and then an entry is added to the Registry to cause the rename [or delete] operation to be done the next time this copy of the operating system is booted [right after any automatic file system checks have completed]. This is not supported under Windows 95.</source>
          <target state="translated">예비 확인이 이루어진 다음 레지스트리에 항목이 추가되어 다음에이 운영 체제 복사본이 부팅 될 때 [자동 파일 시스템 검사가 완료된 직후] 이름 바꾸기 [또는 삭제] 작업이 수행됩니다. Windows 95에서는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="67a19425f9acedf7aa70ec95ee5f9298afbf3fb5" translate="yes" xml:space="preserve">
          <source>Premature end of script headers</source>
          <target state="translated">스크립트 헤더의 조기 끝</target>
        </trans-unit>
        <trans-unit id="ca327af27efee895ecb8288cd68d4b6f0ee7b660" translate="yes" xml:space="preserve">
          <source>Prepares a starting point to traverse a hash table. Returns the number of keys in the hash (i.e. the same as &lt;code&gt;HvUSEDKEYS(hv)&lt;/code&gt; ). The return value is currently only meaningful for hashes without tie magic.</source>
          <target state="translated">해시 테이블을 통과하기위한 시작점을 준비합니다. 해시의 키 수를 반환합니다 (예 : &lt;code&gt;HvUSEDKEYS(hv)&lt;/code&gt; 와 동일 ). 반환 값은 현재 타이 매직이없는 해시에만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5c66c4f998b53bd3b98fe0a699ac5c0c03702ab" translate="yes" xml:space="preserve">
          <source>Prepares a starting point to traverse a hash table. Returns the number of keys in the hash, including placeholders (i.e. the same as &lt;code&gt;HvTOTALKEYS(hv)&lt;/code&gt;). The return value is currently only meaningful for hashes without tie magic.</source>
          <target state="translated">해시 테이블을 순회하기위한 시작점을 준비합니다. 자리 표시자를 포함하여 해시의 키 수를 반환합니다 (예 : &lt;code&gt;HvTOTALKEYS(hv)&lt;/code&gt; 와 동일 ). 반환 값은 현재 타이 매직이없는 해시에만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ba6224af2c92974d736ffced198acbd4096ace3" translate="yes" xml:space="preserve">
          <source>Preparing the target system</source>
          <target state="translated">대상 시스템 준비</target>
        </trans-unit>
        <trans-unit id="ffc03d7ec4535764ca9f3772e318d6f043e9e016" translate="yes" xml:space="preserve">
          <source>Prepend an item to the list of ops contained directly within a list-type op, returning the lengthened list.</source>
          <target state="translated">목록 유형 op 내에 직접 포함 된 op 목록 앞에 항목을 추가하여 길어진 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5320acd2510e9290b4679f6cd76874fb6fa8c279" translate="yes" xml:space="preserve">
          <source>Prepend an item to the list of ops contained directly within a list-type op, returning the lengthened list. &lt;code&gt;first&lt;/code&gt; is the op to prepend to the list, and &lt;code&gt;last&lt;/code&gt; is the list-type op. &lt;code&gt;optype&lt;/code&gt; specifies the intended opcode for the list. If &lt;code&gt;last&lt;/code&gt; is not already a list of the right type, it will be upgraded into one. If either &lt;code&gt;first&lt;/code&gt; or &lt;code&gt;last&lt;/code&gt; is null, the other is returned unchanged.</source>
          <target state="translated">목록 유형 작업 내에 직접 포함 된 작업 목록에 항목을 추가하여 길어진 목록을 반환합니다. &lt;code&gt;first&lt;/code&gt; 는 목록 앞에 추가 할 연산이고 &lt;code&gt;last&lt;/code&gt; 은 목록 유형 연산입니다. &lt;code&gt;optype&lt;/code&gt; 은 목록의 의도 된 opcode를 지정합니다. &lt;code&gt;last&lt;/code&gt; 가 아직 올바른 유형의 목록이 아닌 경우 하나로 업그레이드됩니다. 어느 경우 &lt;code&gt;first&lt;/code&gt; 또는 &lt;code&gt;last&lt;/code&gt; null의 경우, 다른 하나는 변경되지 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a4ef952f6146acb08f845dd15ba77a7f17429906" translate="yes" xml:space="preserve">
          <source>Prepend the supplied directory name to the template. The template should not include parent directory specifications itself. Any parent directory specifications are removed from the template before prepending the supplied directory.</source>
          <target state="translated">제공된 디렉토리 이름을 템플리트 앞에 추가하십시오. 템플리트는 상위 디렉토리 스펙 자체를 포함하지 않아야합니다. 제공된 디렉토리를 추가하기 전에 템플리트에서 상위 디렉토리 스펙이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="0e5ab6fc929309798c3bd158ad1bbf3fa9c0916d" translate="yes" xml:space="preserve">
          <source>Prepends the above directory to &lt;code&gt;BEGINLIBPATH&lt;/code&gt; ;</source>
          <target state="translated">위의 디렉토리를 &lt;code&gt;BEGINLIBPATH&lt;/code&gt; 앞에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba6425b4b8377edfdebdc51af7ef169860ff3755" translate="yes" xml:space="preserve">
          <source>Prepends the above directory to &lt;code&gt;BEGINLIBPATH&lt;/code&gt;;</source>
          <target state="translated">위의 디렉토리를 &lt;code&gt;BEGINLIBPATH&lt;/code&gt; 앞에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9bbcda665d927bc3df5f365451b970ea9d631664" translate="yes" xml:space="preserve">
          <source>Prepends the given string or parse-tree or sequence object to the parse-tree of this interior sequence.</source>
          <target state="translated">주어진 문자열 또는 구문 분석 트리 또는 시퀀스 객체를이 내부 시퀀스의 구문 분석 트리 앞에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ea359cc9032ad02ddd5db48d80a0141bb1493e0b" translate="yes" xml:space="preserve">
          <source>Prereq Spec</source>
          <target state="translated">필수 사양</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="bd4880bf9be46b68a1d78624b0c0e7ee32ab3b0d" translate="yes" xml:space="preserve">
          <source>Prerequisites - what else you may need to have.</source>
          <target state="translated">전제 조건-기타 필요한 것</target>
        </trans-unit>
        <trans-unit id="a09ee8803a3e08b44cee3828e8eaea97f4a78f52" translate="yes" xml:space="preserve">
          <source>Prerequisites for Compiling Perl on AmigaOS</source>
          <target state="translated">AmigaOS에서 Perl을 컴파일하기위한 전제 조건</target>
        </trans-unit>
        <trans-unit id="2bf93198f4dd6a32fb330b849b5c10097740f617" translate="yes" xml:space="preserve">
          <source>Prerequisites for Compiling Perl on DOS</source>
          <target state="translated">DOS에서 Perl을 컴파일하기위한 전제 조건</target>
        </trans-unit>
        <trans-unit id="e507ea21d3d4d3e90dcff5164ccc0e82f8301abf" translate="yes" xml:space="preserve">
          <source>Prerequisites for dynamically configured distributions</source>
          <target state="translated">동적으로 구성된 배포에 대한 전제 조건</target>
        </trans-unit>
        <trans-unit id="409b9176b979862d4e556ba25ad3bacd9822eb5b" translate="yes" xml:space="preserve">
          <source>Prerequisites for running Perl 5.22.1 under AmigaOS 4.1</source>
          <target state="translated">AmigaOS 4.1에서 Perl 5.22.1을 실행하기위한 전제 조건</target>
        </trans-unit>
        <trans-unit id="95fa8ceddba3a09f73177d0b71d8fe3bcb1a4541" translate="yes" xml:space="preserve">
          <source>Presented with little comment (these will get their own manpages someday) here are short code examples illustrating access of various types of data structures.</source>
          <target state="translated">약간의 의견이 제시되어 있으며 (언젠가 자체 맨 페이지를 얻을 수 있음) 다양한 유형의 데이터 구조에 대한 액세스를 보여주는 짧은 코드 예제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f76deb0ec2a336ca4cb74a651cc1f55342e1e91b" translate="yes" xml:space="preserve">
          <source>Presently there is no way to interrogate an &lt;code&gt;autodie::exception::system&lt;/code&gt; object for the command, exit status, and other information you'd expect such an object to hold. The interface will be expanded to accommodate this in the future.</source>
          <target state="translated">현재 &lt;code&gt;autodie::exception::system&lt;/code&gt; 개체에 대해 명령, 종료 상태 및 이러한 개체가 보유 할 것으로 예상되는 기타 정보 를 조사 할 방법이 없습니다 . 인터페이스는 향후이를 수용 할 수 있도록 확장 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="3437b8bc516389bda3cce8e402bfc852a1712fef" translate="yes" xml:space="preserve">
          <source>Preserve more data for future interactive inspections.</source>
          <target state="translated">향후 대화식 검사를 위해 더 많은 데이터를 보존하십시오.</target>
        </trans-unit>
        <trans-unit id="e640fa1e20282fa93fdaf4d6fd684e648c672de7" translate="yes" xml:space="preserve">
          <source>Preserve the string matched such that ${^PREMATCH}, ${^MATCH}, and ${^POSTMATCH} are available for use after matching.</source>
          <target state="translated">일치 후에 $ {^ PREMATCH}, $ {^ MATCH} 및 $ {^ POSTMATCH}를 사용할 수 있도록 일치하는 문자열을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="44a59686c75551d9add57e7204283079885980a1" translate="yes" xml:space="preserve">
          <source>Preserve the string matched such that &lt;code&gt;${^PREMATCH}&lt;/code&gt;, &lt;code&gt;${^MATCH}&lt;/code&gt;, and &lt;code&gt;${^POSTMATCH}&lt;/code&gt; are available for use after matching.</source>
          <target state="translated">일치 &lt;code&gt;${^PREMATCH}&lt;/code&gt; , &lt;code&gt;${^MATCH}&lt;/code&gt; 및 &lt;code&gt;${^POSTMATCH}&lt;/code&gt; 를 사용할 수 있도록 일치하는 문자열을 보존하십시오 .</target>
        </trans-unit>
        <trans-unit id="b33cf22068f58ddac89fea290aa9a5162e4a365b" translate="yes" xml:space="preserve">
          <source>Preserves accuracy to $scale digits from the left (aka significant digits) and pads the rest with zeros. If the number is between 1 and -1, the significant digits count from the first non-zero after the '.'</source>
          <target state="translated">왼쪽에서 $ scale 자리 (일명 유효 자리)까지 정확도를 유지하고 나머지는 0으로 채 웁니다. 숫자가 1과 -1 사이 인 경우 유효 숫자는 '.'다음의 0이 아닌 첫 번째부터 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="df9b33ae4df9e254600f6196133d1c35039af7d3" translate="yes" xml:space="preserve">
          <source>Press Refresh. In the left panel the item &quot;Community&quot; will appear. Click it. Select &quot;Bootstrap Installer Beta&quot; and install it.</source>
          <target state="translated">새로 고침을 누릅니다. 왼쪽 패널에 &quot;커뮤니티&quot;항목이 나타납니다. 클릭하세요. &quot;Bootstrap Installer Beta&quot;를 선택하고 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="a5d86d611e35ff6e1b78c3b62444d98363343289" translate="yes" xml:space="preserve">
          <source>Presumably the Philippine language Waray-Waray (Samare&amp;ntilde;o), not the smaller Philippine language Waray Sorsogon, nor the extinct Australian language Waray.</source>
          <target state="translated">아마도 더 작은 필리핀 언어 Waray Sorsogon이나 멸종 된 호주 언어 Waray가 아닌 필리핀 언어 Waray-Waray (Samare&amp;ntilde;o) 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="0a2cb25a662f585b417f0c2f8f17aaa0a5065d2d" translate="yes" xml:space="preserve">
          <source>Pretty ugly, eh? It's a common idiom though, so don't be too surprised when you see it. You can at least use a temporary variable to hold the previous filehandle: (this is a much better approach in general, because not only does legibility improve, you now have an intermediary stage in the expression to single-step the debugger through):</source>
          <target state="translated">못 생겼어? 그것은 일반적인 관용구이므로 그것을 볼 때 너무 놀라지 마십시오. 최소한 임시 변수를 사용하여 이전 파일 핸들을 보유 할 수 있습니다. (이는 일반적으로 훨씬 나은 접근 방식입니다. 가독성이 향상 될뿐만 아니라 이제 디버거를 한 단계 씩 진행하는 식의 중간 단계가 있습니다).</target>
        </trans-unit>
        <trans-unit id="963f0c082b0ef847cc7f94277b8f965a8541ae8a" translate="yes" xml:space="preserve">
          <source>Prevent the grouping metacharacters &lt;code&gt;()&lt;/code&gt; from capturing. This modifier, new in 5.22, will stop &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , etc... from being filled in.</source>
          <target state="translated">그룹화 메타 문자 &lt;code&gt;()&lt;/code&gt; 가 캡처되지 않도록합니다 . 이 수정자는 5.22의 새로운 기능으로 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; 등이 채워지지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="85ac045406fff279753c59dacc69d448bf4766b2" translate="yes" xml:space="preserve">
          <source>Prevent the grouping metacharacters &lt;code&gt;()&lt;/code&gt; from capturing. This modifier, new in 5.22, will stop &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;,</source>
          <target state="translated">그룹화 메타 문자 &lt;code&gt;()&lt;/code&gt; 가 캡처되지 않도록합니다 . 5.22에 새로 추가 된이 수정자는 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="457fa0dd9ef7c1de466cb472004b83bed4a2a8ee" translate="yes" xml:space="preserve">
          <source>Prevents the inclusion of '#line' directives in the output.</source>
          <target state="translated">출력에 '#line'지시문이 포함되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="4e76bb1e6f14e0746558e405fd753c5acff93017" translate="yes" xml:space="preserve">
          <source>Previous maintainer was Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;.</source>
          <target state="translated">이전 관리자는 Michael G Schwern &amp;lt;schwern@pobox.com&amp;gt;이었습니다.</target>
        </trans-unit>
        <trans-unit id="9af80fa78e3d389344e53119f3893641766863b8" translate="yes" xml:space="preserve">
          <source>Previous maintainer: Hal Pomeranz &amp;lt;pomeranz@netcom.com&amp;gt;, 1994-1997 (Original author unknown). Much of the code for &amp;amp;parse_line() (including the primary regexp) from Joerk Behrends &amp;lt;jbehrends@multimediaproduzenten.de&amp;gt;.</source>
          <target state="translated">이전 관리자 : Hal Pomeranz &amp;lt;pomeranz@netcom.com&amp;gt;, 1994-1997 (원본 저자 불명). Joerk Behrends &amp;lt;jbehrends@multimediaproduzenten.de&amp;gt;의 &amp;amp; parse_line () (기본 정규 표현식 포함)에 대한 대부분의 코드.</target>
        </trans-unit>
        <trans-unit id="c2ffcc08fe71b18c33582287221ff6c8ae26702c" translate="yes" xml:space="preserve">
          <source>Previous steps were performed during the compilation of Perl code, but this one happens at run time, although it may be optimized to be calculated at compile time if appropriate. After preprocessing described above, and possibly after evaluation if concatenation, joining, casing translation, or metaquoting are involved, the resulting</source>
          <target state="translated">이전 단계는 Perl 코드를 컴파일하는 동안 수행되었지만 런타임에 발생하지만 적절한 경우 컴파일 시간에 계산되도록 최적화 될 수 있습니다. 위에서 설명한 전처리 후 및 연결, 결합, 케이싱 변환 또는 메타 쿼팅이 관련된 경우 평가 후 가능</target>
        </trans-unit>
        <trans-unit id="712a386d33ec2d569cadb97eef8f2374df4edce1" translate="yes" xml:space="preserve">
          <source>Previous versions of Getopt::Long used variables for the purpose of configuring. Although manipulating these variables still work, it is strongly encouraged to use the &lt;code&gt;Configure&lt;/code&gt; routine that was introduced in version 2.17. Besides, it is much easier.</source>
          <target state="translated">이전 버전의 Getopt :: Long은 구성 목적으로 변수를 사용했습니다. 이러한 변수를 조작해도 여전히 작동하지만 버전 2.17에 도입 된 &lt;code&gt;Configure&lt;/code&gt; 루틴 을 사용하는 것이 좋습니다 . 게다가 훨씬 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="dccc4f2981422e8e0be18ebbbc807021c6e418aa" translate="yes" xml:space="preserve">
          <source>Previous versions of perlpod allowed for a &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; syntax (as in &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt; ), which was not easily distinguishable from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; syntax and for &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; which was only slightly less ambiguous. This syntax is no longer in the specification, and has been replaced by the &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; syntax (where the slash was formerly optional). Pod parsers should tolerate the &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; syntax, for a while at least. The suggested heuristic for distinguishing &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; is that if it contains any whitespace, it's a</source>
          <target state="translated">이전 버전의 perlpod에서는 &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; 구문 ( &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt; )이 허용되었는데, &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; 구문과 쉽게 구별 할 수 없었 으며 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; 은 약간 덜 모호했습니다. 이 구문은 더 이상 사양에 포함되어 있지 않으며 &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; 구문 (슬래시가 이전에는 선택 사항) 으로 대체되었습니다 . 포드 파서는 적어도 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; 구문을 허용해야합니다 . &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; 과 &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; 을 구별하기위한 제안 된 휴리스틱은 공백이 포함 된 경우</target>
        </trans-unit>
        <trans-unit id="6f653ff479e2274669fdc86d4ba2b978dddb4afd" translate="yes" xml:space="preserve">
          <source>Previous versions of perlpod allowed for a &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; syntax (as in &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt;), which was not easily distinguishable from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; syntax and for &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; which was only slightly less ambiguous. This syntax is no longer in the specification, and has been replaced by the &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; syntax (where the slash was formerly optional). Pod parsers should tolerate the &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; syntax, for a while at least. The suggested heuristic for distinguishing &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; from &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; is that if it contains any whitespace, it's a</source>
          <target state="translated">이전 버전의 perlpod에서는 &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; 구문 ( &lt;code&gt;L&amp;lt;Object Attributes&amp;gt;&lt;/code&gt; )이 허용되었는데, &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; 구문과 쉽게 구분할 수 없었 으며 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; 은 약간 덜 모호했습니다. 이 구문은 더 이상 사양에 포함되지 않으며 &lt;code&gt;L&amp;lt;/section&amp;gt;&lt;/code&gt; 구문 으로 대체되었습니다 (이전에는 슬래시가 선택 사항이었습니다). 포드 파서는 적어도 잠시 동안 &lt;code&gt;L&amp;lt;&quot;section&quot;&amp;gt;&lt;/code&gt; 구문을 허용해야합니다 . &lt;code&gt;L&amp;lt;section&amp;gt;&lt;/code&gt; 을 &lt;code&gt;L&amp;lt;name&amp;gt;&lt;/code&gt; 과 구별하기 위해 제안 된 휴리스틱은 공백이 포함 된 경우</target>
        </trans-unit>
        <trans-unit id="5d5080e57965c5e0136dec24846dd5ebda3d2afc" translate="yes" xml:space="preserve">
          <source>Previous versions of perlpod distinguished &lt;code&gt;L&amp;lt;name/&quot;section&quot;&amp;gt;&lt;/code&gt; links from &lt;code&gt;L&amp;lt;name/item&amp;gt;&lt;/code&gt; links (and their targets). These have been merged syntactically and semantically in the current specification, and</source>
          <target state="translated">이전 버전의 perlpod 는 &lt;code&gt;L&amp;lt;name/item&amp;gt;&lt;/code&gt; 링크 (및 해당 대상) 에서 L &amp;lt;name / &lt;code&gt;L&amp;lt;name/&quot;section&quot;&amp;gt;&lt;/code&gt; 링크를 구분 했습니다. 이것들은 현재 사양에서 구문 적으로 그리고 의미 적으로 병합되었습니다.</target>
        </trans-unit>
        <trans-unit id="14f8fc760485caa4685e61dad45be68f1f9ddaa9" translate="yes" xml:space="preserve">
          <source>Previous versions of this documentation suggested using &lt;code&gt;isa&lt;/code&gt; as a function to determine the type of a reference:</source>
          <target state="translated">이 문서의 이전 버전에서는 &lt;code&gt;isa&lt;/code&gt; 를 참조 유형을 결정하는 함수로 사용하도록 제안했습니다 .</target>
        </trans-unit>
        <trans-unit id="16e35723da6a1f4e0f4f26765e6766759d4e06d1" translate="yes" xml:space="preserve">
          <source>Previous versions of this documentation suggested using &lt;code&gt;memory
=&amp;gt; 0&lt;/code&gt; for safe concurrent access. This was mistaken. Tie::File will not support safe concurrent access before version 0.96.</source>
          <target state="translated">이 문서의 이전 버전에서는 안전한 동시 액세스를 위해 &lt;code&gt;memory =&amp;gt; 0&lt;/code&gt; 을 사용하는 것이 좋습니다 . 이것은 잘못되었습니다. Tie :: File은 버전 0.96 이전의 안전한 동시 액세스를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ea86d31b7a890fc1159e9e5757a43b75c64847e" translate="yes" xml:space="preserve">
          <source>Previously Local::Maketext::GutsLoader performed some magic to load Locale::Maketext when utf8 was unavailable. The subs this module provided were merged back into Locale::Maketext</source>
          <target state="translated">이전에는 Local :: Maketext :: GutsLoader가 utf8을 사용할 수 없을 때 Locale :: Maketext를로드하기 위해 몇 가지 마술을 수행했습니다. 이 모듈이 제공 한 서브는 Locale :: Maketext로 다시 병합되었습니다.</target>
        </trans-unit>
        <trans-unit id="7e5fb7a6ba75baae80c7e10052589b5b646d8c66" translate="yes" xml:space="preserve">
          <source>Previously Locale::Maketext::Guts performed some magic to load Locale::Maketext when utf8 was unavailable. The subs this module provided were merged back into Locale::Maketext.</source>
          <target state="translated">이전에는 Locale :: Maketext :: Guts에서 utf8을 사용할 수 없을 때 Locale :: Maketext를로드하는 몇 가지 마술을 수행했습니다. 이 모듈이 제공 한 서브는 Locale :: Maketext로 다시 병합되었습니다.</target>
        </trans-unit>
        <trans-unit id="fc94bc408d5771e2fc1b2bd7fe1d954e5be48d76" translate="yes" xml:space="preserve">
          <source>Previously sysread() and recv() currently use only the &lt;code&gt;:utf8&lt;/code&gt; flag for the stream, ignoring the actual layers. Since sysread() and recv() did no UTF-8 validation they can end up creating invalidly encoded scalars.</source>
          <target state="translated">이전에 sysread () 및 recv ()는 현재 스트림에 대해 &lt;code&gt;:utf8&lt;/code&gt; 플래그 만 사용 하고 실제 레이어는 무시합니다. sysread () 및 recv ()는 UTF-8 유효성 검사를하지 않았기 때문에 잘못 인코딩 된 스칼라를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ff7ceb2711be19546099c1783a191fceba3a049" translate="yes" xml:space="preserve">
          <source>Previously this value was always stored in the HV structure, which created an overhead on every hash (and pretty much every object) for something that was rarely used. Now we calculate it on demand the first time that it is needed, and cache it if that calculation is going to be costly to repeat. The cached value is updated by insertions and deletions, but (currently) discarded if the hash is split.</source>
          <target state="translated">이전에는이 ​​값이 항상 HV 구조에 저장되어 거의 사용되지 않는 모든 해시 (및 거의 모든 개체)에 오버 헤드가 발생했습니다. 이제 필요할 때 처음으로 계산하고 계산 비용이 많이 드는 경우이를 캐시합니다. 캐시 된 값은 삽입 및 삭제에 의해 업데이트되지만 해시가 분할되면 (현재) 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="c940ec50096c5081483cc1c8a4a85997bf9bf27c" translate="yes" xml:space="preserve">
          <source>Previously, only child processes received stringified values:</source>
          <target state="translated">이전에는 하위 프로세스 만 문자열 값을 수신했습니다.</target>
        </trans-unit>
        <trans-unit id="fe6c94a04996d4c3adf8f5c25e0ce233ec518432" translate="yes" xml:space="preserve">
          <source>Primarily intended for use by format handlers.</source>
          <target state="translated">주로 형식 처리기에서 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="d1f3bd969dabfd87e4cadab20370ef590ab80950" translate="yes" xml:space="preserve">
          <source>Primary Maintainer</source>
          <target state="translated">1 차 유지 관리자</target>
        </trans-unit>
        <trans-unit id="d1a7f02222abe2f07b33cc3a5c6d87fcbafa9931" translate="yes" xml:space="preserve">
          <source>Primary interface for writing Test2 based testing tools.</source>
          <target state="translated">Test2 기반 테스트 도구를 작성하기위한 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="7186167ebea0c5ee2c8d72e98cc4bbb2d97fa9ea" translate="yes" xml:space="preserve">
          <source>Principal author</source>
          <target state="translated">주 저자</target>
        </trans-unit>
        <trans-unit id="32c4d5cec9a9d67d9096ad8b31f2e98c9de6c3c5" translate="yes" xml:space="preserve">
          <source>Principle 0: Taken as a whole, any regexp will be matched at the earliest possible position in the string.</source>
          <target state="translated">원칙 0 : 전체적으로 취하면 정규 표현식은 문자열에서 가능한 가장 빠른 위치에서 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6a4f105bbda5244560916b603ce8af958b7f039e" translate="yes" xml:space="preserve">
          <source>Principle 1: In an alternation &lt;code&gt;a|b|c...&lt;/code&gt; , the leftmost alternative that allows a match for the whole regexp will be the one used.</source>
          <target state="translated">원칙 1 : 교대 &lt;code&gt;a|b|c...&lt;/code&gt; 에서 전체 정규 표현식에 일치하는 가장 왼쪽의 대안이 사용 된 대안입니다.</target>
        </trans-unit>
        <trans-unit id="e4b8d18d0fa1c7fc8787b0ac3b7f3f5dc252d5bd" translate="yes" xml:space="preserve">
          <source>Principle 1: In an alternation &lt;code&gt;a|b|c...&lt;/code&gt;, the leftmost alternative that allows a match for the whole regexp will be the one used.</source>
          <target state="translated">원칙 1 : 대체 &lt;code&gt;a|b|c...&lt;/code&gt; 에서 전체 regexp에 대한 일치를 허용하는 가장 왼쪽의 대체가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5647e0fc45706e96f73524faf01e6aa93e45002d" translate="yes" xml:space="preserve">
          <source>Principle 2: The maximal matching quantifiers &lt;code&gt;'?'&lt;/code&gt;, &lt;code&gt;'*'&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt; and &lt;code&gt;{n,m}&lt;/code&gt; will in general match as much of the string as possible while still allowing the whole regexp to match.</source>
          <target state="translated">원칙 2 : 최대 일치 수량 자 &lt;code&gt;'?'&lt;/code&gt; , &lt;code&gt;'*'&lt;/code&gt; , &lt;code&gt;'+'&lt;/code&gt; 및 &lt;code&gt;{n,m}&lt;/code&gt; 은 일반적으로 전체 정규 표현식이 일치하도록 허용하면서 가능한 한 많은 문자열과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="029a1dbf083882cef4054ed7972875e41bc5642b" translate="yes" xml:space="preserve">
          <source>Principle 2: The maximal matching quantifiers &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;{n,m}&lt;/code&gt; will in general match as much of the string as possible while still allowing the whole regexp to match.</source>
          <target state="translated">원칙 2 : 최대 매칭 정량 자 &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;{n,m}&lt;/code&gt; 은 일반적으로 전체 정규 표현식을 일치시키면서 가능한 한 많은 문자열과 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="23b72c3ca0299774d68e314619c9048069fa0bef" translate="yes" xml:space="preserve">
          <source>Principle 3: If there are two or more elements in a regexp, the leftmost greedy (non-greedy) quantifier, if any, will match as much (little) of the string as possible while still allowing the whole regexp to match. The next leftmost greedy (non-greedy) quantifier, if any, will try to match as much (little) of the string remaining available to it as possible, while still allowing the whole regexp to match. And so on, until all the regexp elements are satisfied.</source>
          <target state="translated">원칙 3 : 정규 표현식에 두 개 이상의 요소가있는 경우 가장 왼쪽의 욕심 (비 욕심) 수량자가 가능한 경우 문자열의 가능한 한 (일부) 일치하지만 전체 정규 표현식을 일치시킬 수 있습니다. 다음으로 가장 왼쪽에있는 탐욕스러운 (비 욕심없는) 수량자는 가능한 경우 사용 가능한 문자열을 최대한 많이 일치 시키려고 노력하면서 전체 정규 표현식을 일치시킵니다. 모든 정규 표현식 요소가 충족 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="7924ae789f920a103b9e8212ac47e4dc00917a8b" translate="yes" xml:space="preserve">
          <source>Principle 3: If there are two or more elements in a regexp, the leftmost greedy quantifier, if any, will match as much of the string as possible while still allowing the whole regexp to match. The next leftmost greedy quantifier, if any, will try to match as much of the string remaining available to it as possible, while still allowing the whole regexp to match. And so on, until all the regexp elements are satisfied.</source>
          <target state="translated">원칙 3 : 정규 표현식에 두 개 이상의 요소가있는 경우 가장 왼쪽에있는 탐욕스러운 수량자는 가능한 한 많은 문자열과 일치하면서 전체 정규 표현식을 일치시킵니다. 가장 왼쪽에있는 욕심 많은 수량자는 가능한 경우 사용 가능한 나머지 문자열을 최대한 일치 시키면서도 전체 정규 표현식을 일치 시키려고합니다. 모든 정규 표현식 요소가 충족 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="5b221e9c2a451799d8f37e2b9874409d5e03ab05" translate="yes" xml:space="preserve">
          <source>Print</source>
          <target state="translated">Print</target>
        </trans-unit>
        <trans-unit id="62c9112958c68fcfcec0378f346995acb5fb475e" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;$message&lt;/code&gt; to STDERR.</source>
          <target state="translated">STDERR에 &lt;code&gt;$message&lt;/code&gt; 를 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="28796f1a81c3dcd34643979c6b7feb02d0c7e828" translate="yes" xml:space="preserve">
          <source>Print ARGS to the file.</source>
          <target state="translated">ARGS를 파일로 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="804b8b64824af87e385d661f22fda8303200efb4" translate="yes" xml:space="preserve">
          <source>Print ARGS to the underlying scalar.</source>
          <target state="translated">ARGS를 기본 스칼라로 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="aeb5f490c0fe5dda6fa8c9b0136063c67f1eba8a" translate="yes" xml:space="preserve">
          <source>Print OP sequence numbers in base</source>
          <target state="translated">기본으로 OP 시퀀스 번호 인쇄</target>
        </trans-unit>
        <trans-unit id="c95f895c7d7dbde542e1c491d05c9defe9ec89fe" translate="yes" xml:space="preserve">
          <source>Print OPs in a text approximation of a tree, with the root of the tree at the left and 'left-to-right' order of children transformed into 'top-to-bottom'. Because this mode grows both to the right and down, it isn't suitable for large programs (unless you have a very wide terminal).</source>
          <target state="translated">어린이의 왼쪽에서 오른쪽으로 '왼쪽에서 오른쪽으로'순서로 나무의 근본을 '위에서 아래로'변형 한 텍스트 근사값으로 OP를 인쇄합니다. 이 모드는 오른쪽과 아래쪽으로 커지므로 터미널이 매우 넓은 경우를 제외하고는 큰 프로그램에는 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64c201f8801eb2b8f4a6b4829f0bb1418f54aea2" translate="yes" xml:space="preserve">
          <source>Print OPs in the order they appear in the OP tree (a preorder traversal, starting at the root). The indentation of each OP shows its level in the tree, and the '-&amp;gt;' at the end of the line indicates the next opcode in execution order. This mode is the default, so the flag is included simply for completeness.</source>
          <target state="translated">OP 트리에 나타나는 순서대로 OP를 인쇄하십시오 (루트에서 시작하여 사전 주문 순회). 각 OP의 들여 쓰기는 트리에서 해당 레벨을 표시하고 행 끝에있는 '-&amp;gt;'는 다음 오피 코드를 실행 순서로 나타냅니다. 이 모드는 기본값이므로 플래그는 완전성을 위해 단순히 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8ab076ddbb8deab03d45c660c94d823cf8595ce2" translate="yes" xml:space="preserve">
          <source>Print OPs in the order they would normally execute (for the majority of constructs this is a postorder traversal of the tree, ending at the root). In most cases the OP that usually follows a given OP will appear directly below it; alternate paths are shown by indentation. In cases like loops when control jumps out of a linear path, a 'goto' line is generated.</source>
          <target state="translated">일반적으로 실행되는 순서대로 OP를 인쇄하십시오 (대부분의 구성에서는 루트에서 끝나는 트리의 후 반송입니다). 대부분의 경우 일반적으로 주어진 OP를 따르는 OP는 바로 그 아래에 나타납니다. 대체 경로는 들여 쓰기로 표시됩니다. 제어가 선형 경로에서 벗어날 때 루프와 같은 경우에는 'goto'라인이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6c982704bf497f0a66edb9c2534a7d373da38b12" translate="yes" xml:space="preserve">
          <source>Print a blank line after a &lt;code&gt;=head1&lt;/code&gt; heading. Normally, no blank line is printed after &lt;code&gt;=head1&lt;/code&gt; , although one is still printed after &lt;code&gt;=head2&lt;/code&gt; , because this is the expected formatting for manual pages; if you're formatting arbitrary text documents, using this option is recommended.</source>
          <target state="translated">&lt;code&gt;=head1&lt;/code&gt; 제목 다음에 빈 줄을 인쇄하십시오 . 일반적으로 &lt;code&gt;=head1&lt;/code&gt; 뒤에 빈 줄이 인쇄되지 않습니다 . 비록 수동 페이지에 대해 예상되는 형식이므로 &lt;code&gt;=head2&lt;/code&gt; 뒤에 계속 인쇄됩니다 . 임의의 텍스트 문서를 포맷하는 경우이 옵션을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="78f0cf88c9382715f9ef827873e42e426b60fd56" translate="yes" xml:space="preserve">
          <source>Print a blank line after a &lt;code&gt;=head1&lt;/code&gt; heading. Normally, no blank line is printed after &lt;code&gt;=head1&lt;/code&gt;, although one is still printed after &lt;code&gt;=head2&lt;/code&gt;, because this is the expected formatting for manual pages; if you're formatting arbitrary text documents, using this option is recommended.</source>
          <target state="translated">&lt;code&gt;=head1&lt;/code&gt; 제목 뒤에 빈 줄을 인쇄합니다 . 일반적으로 &lt;code&gt;=head1&lt;/code&gt; 뒤에는 빈 줄이 인쇄되지 않지만 &lt;code&gt;=head2&lt;/code&gt; 뒤에는 여전히 빈 줄이 인쇄됩니다 . 이는 매뉴얼 페이지에 대해 예상되는 형식이기 때문입니다. 임의의 텍스트 문서의 서식을 지정하는 경우이 옵션을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="867127fd347fb038713aa7bf1fa3161513e339cb" translate="yes" xml:space="preserve">
          <source>Print a brief help message and exit.</source>
          <target state="translated">간단한 도움말 메시지를 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="c53664d54eb8b04f1dd85e60cf6db075ad9bb2d5" translate="yes" xml:space="preserve">
          <source>Print a help message and exit. When you specify &lt;code&gt;-h&lt;/code&gt;, it ignores all of the other options and arguments.</source>
          <target state="translated">도움말 메시지를 인쇄하고 종료합니다. &lt;code&gt;-h&lt;/code&gt; 를 지정 하면 다른 모든 옵션과 인수를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="33a3171c128f8353be548144a646976a2ba0eae4" translate="yes" xml:space="preserve">
          <source>Print a usage message from embedded pod documentation</source>
          <target state="translated">내장 포드 설명서에서 사용 메시지 인쇄</target>
        </trans-unit>
        <trans-unit id="6515d632fc4240022bb106a3dc691b05ec42ef49" translate="yes" xml:space="preserve">
          <source>Print appropriate &quot;Use of uninitialized variable&quot; warning.</source>
          <target state="translated">적절한 &quot;초기화되지 않은 변수 사용&quot;경고를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="97cfeb23d207e65189895e1fffe73287ac2f12a1" translate="yes" xml:space="preserve">
          <source>Print debugging information. &lt;code&gt;DIR&lt;/code&gt; denotes the direction</source>
          <target state="translated">디버깅 정보를 인쇄하십시오. &lt;code&gt;DIR&lt;/code&gt; 은 방향을 나타냅니다</target>
        </trans-unit>
        <trans-unit id="41f6790824d5db34a4b42caceced096a2adda46e" translate="yes" xml:space="preserve">
          <source>Print detailed information about the cpan client.</source>
          <target state="translated">cpan 클라이언트에 대한 자세한 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="588c5c4b63a239dce597eee039700f84b90eb2e5" translate="yes" xml:space="preserve">
          <source>Print extra parentheses. Without this option, B::Deparse includes parentheses in its output only when they are needed, based on the structure of your program. With &lt;b&gt;-p&lt;/b&gt;, it uses parentheses (almost) whenever they would be legal. This can be useful if you are used to LISP, or if you want to see how perl parses your input. If you say</source>
          <target state="translated">추가 괄호를 인쇄하십시오. 이 옵션을 사용하지 않으면 B :: Deparse는 프로그램 구조에 따라 필요할 때만 괄호를 출력에 포함합니다. &lt;b&gt;-p&lt;/b&gt; 를 사용 하면 합법적 일 때마다 괄호 (거의)를 사용합니다. 이것은 LISP에 익숙하거나 perl이 입력을 구문 분석하는 방법을보고 싶을 때 유용 할 수 있습니다. 당신이 말하는 경우</target>
        </trans-unit>
        <trans-unit id="eecde43a81b966938450c674274f53e1895c6cee" translate="yes" xml:space="preserve">
          <source>Print file format.</source>
          <target state="translated">인쇄 파일 형식.</target>
        </trans-unit>
        <trans-unit id="41aff8bfc8732953f6c1d650b5976c07600e2c8d" translate="yes" xml:space="preserve">
          <source>Print only first N elements ('' for all).</source>
          <target state="translated">첫 번째 N 요소 만 인쇄하십시오 (``모두 '').</target>
        </trans-unit>
        <trans-unit id="e81e6e379c35f5ba519788d4e4a35fbede771adb" translate="yes" xml:space="preserve">
          <source>Print only first N elements of arrays and hashes. If false, prints all the elements.</source>
          <target state="translated">배열과 해시의 첫 N 개 요소 만 인쇄하십시오. false 인 경우 모든 요소를 ​​인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="bcc4ef2e2a794b82340048b562c03635739b2793" translate="yes" xml:space="preserve">
          <source>Print out the name of each output file as it is being generated.</source>
          <target state="translated">생성되는 각 출력 파일의 이름을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="41c304cd9ca96336004e4476cfb242341b0d8cde" translate="yes" xml:space="preserve">
          <source>Print out the value of one or more options.</source>
          <target state="translated">하나 이상의 옵션 값을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="257476f3c32fde0f5eb65f8b31e1baf775927d37" translate="yes" xml:space="preserve">
          <source>Print out usage information and exit.</source>
          <target state="translated">사용 정보를 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="bc9a53e87cca6954b36dc36c0f11d367ea1e424e" translate="yes" xml:space="preserve">
          <source>Print out usage information.</source>
          <target state="translated">사용법 정보를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="0177eff9f7a2fbe1e71adee0b082a252a703abf6" translate="yes" xml:space="preserve">
          <source>Print output intended for testing the internals of the compile process</source>
          <target state="translated">컴파일 프로세스의 내부 테스트를위한 인쇄 출력</target>
        </trans-unit>
        <trans-unit id="a27774755c3595f027c8eb3223fdb5c93fd4fbff" translate="yes" xml:space="preserve">
          <source>Print progress information while scanning.</source>
          <target state="translated">스캔하는 동안 진행 정보를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="4d7b123cfe3d2a9315789f430a1f12df5dd6cda9" translate="yes" xml:space="preserve">
          <source>Print return value after &lt;code&gt;r&lt;/code&gt; command if set (default).</source>
          <target state="translated">설정된 경우 &lt;code&gt;r&lt;/code&gt; 명령 후 반환 값을 인쇄 합니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="7d041699462235ca2a4d570a60c03f171c2124de" translate="yes" xml:space="preserve">
          <source>Print sequence numbers with the least significant digit first. This is obviously mutually exclusive with bigendian.</source>
          <target state="translated">가장 유효 숫자가 가장 낮은 시퀀스 번호를 먼저 인쇄하십시오. 이것은 분명히 bigendian과 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="42046a99717c8fc1f7b5308618430cf23e775de1" translate="yes" xml:space="preserve">
          <source>Print sequence numbers with the most significant digit first. This is the usual convention for Arabic numerals, and the default.</source>
          <target state="translated">가장 큰 자릿수를 가진 순서 번호를 먼저 인쇄하십시오. 이것은 아라비아 숫자에 대한 일반적인 규칙이며 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="c3ded95dcda74015cef369414ceaf1353a3c08bf" translate="yes" xml:space="preserve">
          <source>Print the manual page and exit.</source>
          <target state="translated">매뉴얼 페이지를 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="c04feb56f4048c0eacb8d8093530da446e801aa2" translate="yes" xml:space="preserve">
          <source>Print the pathname of each matching file from the archive to STDOUT. Without this option, the default behaviour is to extract each matching file.</source>
          <target state="translated">아카이브에서 STDOUT으로 일치하는 각 파일의 경로 이름을 인쇄하십시오. 이 옵션이 없으면 기본 동작은 일치하는 각 파일을 추출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0ff2aadc34137d7824ecad18c9a0ec3642d20881" translate="yes" xml:space="preserve">
          <source>Print the script version and CPAN.pm version then exit.</source>
          <target state="translated">스크립트 버전과 CPAN.pm 버전을 인쇄 한 다음 종료합니다.</target>
        </trans-unit>
        <trans-unit id="dafca06fe55ca5e809a5fcfdbf9c2ee2334e2463" translate="yes" xml:space="preserve">
          <source>Print the usage, help and version for this h2xs and exit.</source>
          <target state="translated">이 h2x의 사용법, 도움말 및 버전을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="48353b6a506515740ab2f4902262078e0065726e" translate="yes" xml:space="preserve">
          <source>Print the values in</source>
          <target state="translated">에 값을 인쇄</target>
        </trans-unit>
        <trans-unit id="cf456c50fd7554fe013a6e25ab9a344d6d5f2f5b" translate="yes" xml:space="preserve">
          <source>Print this command's manual page and exit.</source>
          <target state="translated">이 명령의 매뉴얼 페이지를 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="b5abd8dca5d79ec848ccb7806e5cedef648f49fd" translate="yes" xml:space="preserve">
          <source>PrintList</source>
          <target state="translated">PrintList</target>
        </trans-unit>
        <trans-unit id="c161e4f9d513f9dc8591fcb0a239c86a9d1fc520" translate="yes" xml:space="preserve">
          <source>PrintUID</source>
          <target state="translated">PrintUID</target>
        </trans-unit>
        <trans-unit id="ca00d8181f32941120efd18913e9feb042cbbf6c" translate="yes" xml:space="preserve">
          <source>Printing individual test results to STDOUT.</source>
          <target state="translated">개별 테스트 결과를 STDOUT에 인쇄</target>
        </trans-unit>
        <trans-unit id="ed2d714a6f330a5a2c0d2c285311e85e596cb81a" translate="yes" xml:space="preserve">
          <source>Printing to a closed pipe or socket will generate a SIGPIPE signal. See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for more on signal handling.</source>
          <target state="translated">닫힌 파이프 나 소켓에 인쇄하면 SIGPIPE 신호가 생성됩니다. 신호 처리에 대한 자세한 내용은 &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7ce5ec55f788bd07557410056fe40271d8ea629" translate="yes" xml:space="preserve">
          <source>Printing to a closed pipe or socket will generate a SIGPIPE signal. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for more on signal handling.</source>
          <target state="translated">닫힌 파이프 나 소켓에 인쇄하면 SIGPIPE 신호가 생성됩니다. 신호 처리에 대한 자세한 내용은 &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f0265cab2f9ae79cde71a71556d0e278394eaeb" translate="yes" xml:space="preserve">
          <source>Prints a brief summary of the options.</source>
          <target state="translated">옵션에 대한 간략한 요약을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="5120452ca6dc631595efb8d29461dd946809a41a" translate="yes" xml:space="preserve">
          <source>Prints a diagnostic message which is guaranteed not to interfere with test output. Like &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; @diagnostic_message is simply concatenated together.</source>
          <target state="translated">테스트 출력을 방해하지 않는 진단 메시지를 인쇄합니다. 마찬가지로 &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; @diagnostic_message 단순히 함께 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="03cd11288ac7ed7f3e5e779d010326db784840fb" translate="yes" xml:space="preserve">
          <source>Prints a diagnostic message which is guaranteed not to interfere with test output. Like &lt;code&gt;print&lt;/code&gt; @diagnostic_message is simply concatenated together.</source>
          <target state="translated">테스트 출력을 방해하지 않도록 보장되는 진단 메시지를 인쇄합니다. &lt;code&gt;print&lt;/code&gt; 처럼 @diagnostic_message는 단순히 함께 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="8c49c244084f74c7a4ade71b1d350fb5c73651b5" translate="yes" xml:space="preserve">
          <source>Prints a dump to the currently selected filehandle.</source>
          <target state="translated">현재 선택된 파일 핸들에 덤프를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="33ae188d27fe9ec243158d1e261dc04f6d576630" translate="yes" xml:space="preserve">
          <source>Prints a fragment of POD suitable for appending to perllocal.pod. Arguments are read from @ARGV.</source>
          <target state="translated">perllocal.pod에 추가하기에 적합한 POD 조각을 인쇄합니다. @ARGV에서 인수를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="d418169bc3a4b28200c4744d9dae5cd8e744b200" translate="yes" xml:space="preserve">
          <source>Prints a string or a list of strings. Returns true if successful. FILEHANDLE may be a scalar variable containing the name of or a reference to the filehandle, thus introducing one level of indirection. (NOTE: If FILEHANDLE is a variable and the next token is a term, it may be misinterpreted as an operator unless you interpose a &lt;code&gt;+&lt;/code&gt; or put parentheses around the arguments.) If FILEHANDLE is omitted, prints to the last selected (see &lt;a href=&quot;#select&quot;&gt;select&lt;/a&gt;) output handle. If LIST is omitted, prints &lt;code&gt;$_&lt;/code&gt; to the currently selected output handle. To use FILEHANDLE alone to print the content of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; . To set the default output handle to something other than STDOUT, use the select operation.</source>
          <target state="translated">문자열 또는 문자열 목록을 인쇄합니다. 성공하면 true를 반환합니다. FILEHANDLE은 파일 핸들의 이름 또는 참조를 포함하는 스칼라 변수 일 수 있으므로 한 수준의 간접 참조가 발생합니다. (참고 : FILEHANDLE이 변수이고 다음 토큰이 용어 인 경우 인수 주위에 &lt;code&gt;+&lt;/code&gt; 또는 괄호를 넣지 않으면 연산자로 잘못 해석 될 수 있습니다 .) FILEHANDLE을 생략하면 마지막으로 선택한 것으로 인쇄합니다 ( &lt;a href=&quot;#select&quot;&gt;select&lt;/a&gt; 참조 ). 출력 핸들. LIST를 생략하면 &lt;code&gt;$_&lt;/code&gt; 를 현재 선택된 출력 핸들에 인쇄합니다 . FILEHANDLE 만 사용하여 &lt;code&gt;$_&lt;/code&gt; 의 내용을 인쇄하려면 &lt;code&gt;$fh&lt;/code&gt; 와 같은 간접 파일이 아니라 &lt;code&gt;FH&lt;/code&gt; 와 같은 실제 파일 핸들을 사용해야합니다.. 기본 출력 핸들을 STDOUT 이외의 것으로 설정하려면 선택 조작을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="491dd59a49ee966b429b0782093194b4cde46c28" translate="yes" xml:space="preserve">
          <source>Prints a string or a list of strings. Returns true if successful. FILEHANDLE may be a scalar variable containing the name of or a reference to the filehandle, thus introducing one level of indirection. (NOTE: If FILEHANDLE is a variable and the next token is a term, it may be misinterpreted as an operator unless you interpose a &lt;code&gt;+&lt;/code&gt; or put parentheses around the arguments.) If FILEHANDLE is omitted, prints to the last selected (see &lt;a href=&quot;#select-FILEHANDLE&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt;) output handle. If LIST is omitted, prints &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to the currently selected output handle. To use FILEHANDLE alone to print the content of &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; to it, you must use a bareword filehandle like &lt;code&gt;FH&lt;/code&gt;, not an indirect one like &lt;code&gt;$fh&lt;/code&gt;. To set the default output handle to something other than STDOUT, use the select operation.</source>
          <target state="translated">문자열 또는 문자열 목록을 인쇄합니다. 성공하면 true를 반환합니다. FILEHANDLE은 파일 핸들의 이름 또는 참조를 포함하는 스칼라 변수 일 수 있으므로 한 수준의 간접 지정을 도입합니다. (참고 : FILEHANDLE이 변수이고 다음 토큰이 용어 인 경우 &lt;code&gt;+&lt;/code&gt; 를 삽입 하거나 인수를 괄호로 묶지 않는 한 연산자로 잘못 해석 될 수 있습니다 .) FILEHANDLE이 생략되면 마지막으로 선택한 항목으로 인쇄합니다 ( &lt;a href=&quot;#select-FILEHANDLE&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt; 참조 ). 출력 핸들. LIST가 생략되면 &lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt; 를 현재 선택된 출력 핸들에 인쇄합니다 . FILEHANDLE 만 사용하여 &lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt; 의 내용을 인쇄하려면 &lt;code&gt;$fh&lt;/code&gt; 와 같은 간접적 인 파일 핸들이 아니라 &lt;code&gt;FH&lt;/code&gt; 와 같은 베어 워드 파일 핸들을 사용해야합니다.. 기본 출력 핸들을 STDOUT 이외의 것으로 설정하려면 선택 작업을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="20e173b143e047744531b3fd15b76f4ad914ea5c" translate="yes" xml:space="preserve">
          <source>Prints a string or a list of strings. Returns true if successful. FILEHANDLE may be a scalar variable containing the name of or a reference to the filehandle, thus introducing one level of indirection. (NOTE: If FILEHANDLE is a variable and the next token is a term, it may be misinterpreted as an operator unless you interpose a &lt;code&gt;+&lt;/code&gt; or put parentheses around the arguments.) If FILEHANDLE is omitted, prints to the last selected (see &lt;a href=&quot;select&quot;&gt;select&lt;/a&gt;) output handle. If LIST is omitted, prints &lt;code&gt;$_&lt;/code&gt; to the currently selected output handle. To use FILEHANDLE alone to print the content of &lt;code&gt;$_&lt;/code&gt; to it, you must use a real filehandle like &lt;code&gt;FH&lt;/code&gt; , not an indirect one like &lt;code&gt;$fh&lt;/code&gt; . To set the default output handle to something other than STDOUT, use the select operation.</source>
          <target state="translated">문자열 또는 문자열 목록을 인쇄합니다. 성공하면 true를 반환합니다. FILEHANDLE은 파일 핸들의 이름 또는 참조를 포함하는 스칼라 변수 일 수 있으므로 한 수준의 간접 참조가 발생합니다. (참고 : FILEHANDLE이 변수이고 다음 토큰이 용어 인 경우 인수 주위에 &lt;code&gt;+&lt;/code&gt; 또는 괄호를 넣지 않으면 연산자로 잘못 해석 될 수 있습니다 .) FILEHANDLE을 생략하면 마지막으로 선택한 것으로 인쇄합니다 ( &lt;a href=&quot;select&quot;&gt;select&lt;/a&gt; 참조 ). 출력 핸들. LIST를 생략하면 &lt;code&gt;$_&lt;/code&gt; 를 현재 선택된 출력 핸들에 인쇄합니다 . FILEHANDLE 만 사용하여 &lt;code&gt;$_&lt;/code&gt; 의 내용을 인쇄하려면 &lt;code&gt;$fh&lt;/code&gt; 와 같은 간접 파일이 아니라 &lt;code&gt;FH&lt;/code&gt; 와 같은 실제 파일 핸들을 사용해야합니다.. 기본 출력 핸들을 STDOUT 이외의 것으로 설정하려면 선택 조작을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="673f7ed1fcf144a6eba94659c1b8bb4cb6a329f3" translate="yes" xml:space="preserve">
          <source>Prints a string representation of the token. This might not be the exact output, however. Tests will have test numbers added if not present, TODO and SKIP directives will be capitalized and, in general, things will be cleaned up. If you need the original text for the token, see the &lt;code&gt;raw&lt;/code&gt; method.</source>
          <target state="translated">토큰의 문자열 표현을 인쇄합니다. 그러나 이것은 정확한 결과가 아닐 수 있습니다. 존재하지 않는 경우 테스트에 테스트 번호가 추가되고 TODO 및 SKIP 지시문은 대문자로 표시되며 일반적으로 정리됩니다. 토큰의 원본 텍스트가 필요한 경우 &lt;code&gt;raw&lt;/code&gt; 방법을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5419b1162d34c785eeb369d86d716b9bd02ac8d" translate="yes" xml:space="preserve">
          <source>Prints completion list. Defined by</source>
          <target state="translated">완료리스트를 인쇄합니다. 에 의해 정의</target>
        </trans-unit>
        <trans-unit id="934dc976c1f3a281267304f789f524cd21fb3e61" translate="yes" xml:space="preserve">
          <source>Prints out a brief &lt;b&gt;h&lt;/b&gt;elp message.</source>
          <target state="translated">간단한의 밖으로 인쇄 &lt;b&gt;시간&lt;/b&gt; ELP 메시지.</target>
        </trans-unit>
        <trans-unit id="8c3217961ab68f1c8d44e975715650bfda91f224" translate="yes" xml:space="preserve">
          <source>Prints out a brief help message.</source>
          <target state="translated">간단한 도움말 메시지를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="63d68ec3ff2a5f8e8482209bf682a1142f623388" translate="yes" xml:space="preserve">
          <source>Prints out a help message for the given debugger command.</source>
          <target state="translated">주어진 디버거 명령에 대한 도움말 메시지를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="4570ddcfa99412c204793cd712ce6565f233cdcb" translate="yes" xml:space="preserve">
          <source>Prints out a summary help message</source>
          <target state="translated">요약 도움말 메시지를 인쇄합니다</target>
        </trans-unit>
        <trans-unit id="62c00c799d0422f6ccb3e9e43272184c0326a6ce" translate="yes" xml:space="preserve">
          <source>Prints out macros for lots of constants.</source>
          <target state="translated">많은 상수에 대한 매크로를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="35708a04576938ac03483a4b724360182a7d23a6" translate="yes" xml:space="preserve">
          <source>Prints out the given &lt;code&gt;@msgs&lt;/code&gt; . Like &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt;, arguments are simply appended together.</source>
          <target state="translated">주어진 &lt;code&gt;@msgs&lt;/code&gt; 를 출력합니다 . &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 와 마찬가지로 인수는 단순히 함께 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="6b0e60b46511b4f4471cee7c42bbf4f7c720de0f" translate="yes" xml:space="preserve">
          <source>Prints out the given &lt;code&gt;@msgs&lt;/code&gt;. Like &lt;code&gt;print&lt;/code&gt;, arguments are simply appended together.</source>
          <target state="translated">주어진 &lt;code&gt;@msgs&lt;/code&gt; 를 출력합니다 . &lt;code&gt;print&lt;/code&gt; 처럼 인자는 단순히 함께 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="8697e6653e8aef8900cf9e82eba2ff6e2e2ce4de" translate="yes" xml:space="preserve">
          <source>Prints the</source>
          <target state="translated">인쇄</target>
        </trans-unit>
        <trans-unit id="aa5bdc16d8c54057921ac95e8b1fdf7e996f4f26" translate="yes" xml:space="preserve">
          <source>Prints the C definition of the argument given.</source>
          <target state="translated">주어진 인수의 C 정의를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="a403f4f42c33b1f9084f9bd0a79f13a0277056b6" translate="yes" xml:space="preserve">
          <source>Prints the value of LIST to STDERR. If the last element of LIST does not end in a newline, it appends the same file/line number text as &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; does.</source>
          <target state="translated">LIST의 값을 STDERR에 인쇄합니다. LIST의 마지막 요소가 개행으로 끝나지 않으면 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 와 동일한 파일 / 행 번호 텍스트 가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="4c5e1509c949e03f2e16a45151c3707f6e64336d" translate="yes" xml:space="preserve">
          <source>Prints the value of LIST to STDERR. If the last element of LIST does not end in a newline, it appends the same file/line number text as &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; does.</source>
          <target state="translated">LIST의 값을 STDERR에 인쇄합니다. LIST의 마지막 요소가 개행으로 끝나지 않으면 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 와 동일한 파일 / 행 번호 텍스트 가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="bcbea290fe72663ef6d97c309d0691a702a71daa" translate="yes" xml:space="preserve">
          <source>Prints to STDOUT the value of the named configuration variable(s), with multiples when your &lt;code&gt;&lt;i&gt;configvar&lt;/i&gt;&lt;/code&gt; argument looks like a regex (has non-letters). For example:</source>
          <target state="translated">&lt;code&gt;&lt;i&gt;configvar&lt;/i&gt;&lt;/code&gt; 인수가 정규식처럼 &lt;i&gt;보이면&lt;/i&gt; (문자가 &lt;i&gt;아님&lt;/i&gt; ) 명명 된 구성 변수의 값을 STDOUT에 인쇄합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d654c6a51dac4e65071d9448226908e23e864aba" translate="yes" xml:space="preserve">
          <source>Prints to STDOUT the values of the named configuration variable. Each is printed on a separate line in the form:</source>
          <target state="translated">명명 된 구성 변수의 값을 STDOUT에 인쇄합니다. 각각은 다음과 같은 형식으로 별도의 줄에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="72c8e6931ee65527396af6285ae19c7b28223d6b" translate="yes" xml:space="preserve">
          <source>Prior authors and maintainers: Tim Bunce, Charles Bailey, and David Landgren &amp;lt;</source>
          <target state="translated">이전 저자 및 관리자 : Tim Bunce, Charles Bailey 및 David Landgren &amp;lt;</target>
        </trans-unit>
        <trans-unit id="006ef841b2dbe9474f20b394f899a01b44e0808f" translate="yes" xml:space="preserve">
          <source>Prior to 5.14, there were no explicit modifiers, but &lt;code&gt;/l&lt;/code&gt; was implied for regexes compiled within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , and &lt;code&gt;/d&lt;/code&gt; was implied otherwise. However, interpolating a regex into a larger regex would ignore the original compilation in favor of whatever was in effect at the time of the second compilation. There were a number of inconsistencies (bugs) with the &lt;code&gt;/d&lt;/code&gt; modifier, where Unicode rules would be used when inappropriate, and vice versa. &lt;code&gt;\p{}&lt;/code&gt; did not imply Unicode rules, and neither did all occurrences of &lt;code&gt;\N{}&lt;/code&gt; , until 5.12.</source>
          <target state="translated">5.14 이전에는 명시적인 수정자가 없었지만 , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; 범위 내에서 컴파일 된 정규식에 대해서는 &lt;code&gt;/l&lt;/code&gt; 이 암시 되었고, &lt;code&gt;/d&lt;/code&gt; 는 그렇지 않았습니다. 그러나 정규 표현식을 더 큰 정규 표현식으로 보간하면 두 번째 편집 당시에 영향을받은 원래의 편집을 무시합니다. &lt;code&gt;/d&lt;/code&gt; 수정 자 와의 불일치 (버그)가 많았습니다 . 여기서 부적절한 경우 유니 코드 규칙이 사용되며 그 반대도 마찬가지입니다. &lt;code&gt;\p{}&lt;/code&gt; 는 유니 코드 규칙을 암시하지 않았으며 5.12까지 모든 &lt;code&gt;\N{}&lt;/code&gt; 나타내지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="588c008b4ed402f510a9601e65d46e3dcaffafc3" translate="yes" xml:space="preserve">
          <source>Prior to 5.14, there were no explicit modifiers, but &lt;code&gt;/l&lt;/code&gt; was implied for regexes compiled within the scope of &lt;code&gt;use locale&lt;/code&gt;, and &lt;code&gt;/d&lt;/code&gt; was implied otherwise. However, interpolating a regex into a larger regex would ignore the original compilation in favor of whatever was in effect at the time of the second compilation. There were a number of inconsistencies (bugs) with the &lt;code&gt;/d&lt;/code&gt; modifier, where Unicode rules would be used when inappropriate, and vice versa. &lt;code&gt;\p{}&lt;/code&gt; did not imply Unicode rules, and neither did all occurrences of &lt;code&gt;\N{}&lt;/code&gt;, until 5.12.</source>
          <target state="translated">5.14 이전에는 명시적인 수정자가 없었지만 &lt;code&gt;use locale&lt;/code&gt; 범위 내에서 컴파일 된 정규식에 대해 &lt;code&gt;/l&lt;/code&gt; 이 암시 되고 그렇지 않으면 &lt;code&gt;/d&lt;/code&gt; 가 암시되었습니다. 그러나 정규식을 더 큰 정규식으로 보간하면 두 번째 컴파일시 적용된 모든 것이 우선적으로 원래 컴파일이 무시됩니다. &lt;code&gt;/d&lt;/code&gt; 수정 자 에는 여러 가지 불일치 (버그)가있었습니다. 여기서 유니 코드 규칙은 부적절 할 때 사용되며 그 반대의 경우도 마찬가지입니다. &lt;code&gt;\p{}&lt;/code&gt; 는 유니 코드 규칙을 의미하지 않았으며 5.12까지 모든 &lt;code&gt;\N{}&lt;/code&gt; 발생도 의미하지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="fe8a0830714e6cb8a879a800eebdc6d82f423871" translate="yes" xml:space="preserve">
          <source>Prior to Encode 1.86 this fails because of &quot;local $_&quot;.</source>
          <target state="translated">Encode 1.86 이전에는 &quot;local $ _&quot;로 인해 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="237bfe322fa2d5537b0e7ae9cfd030692f2d5ae8" translate="yes" xml:space="preserve">
          <source>Prior to Encode version 1.87</source>
          <target state="translated">인코딩 버전 1.87 이전</target>
        </trans-unit>
        <trans-unit id="d393399b163454a92ab92f702710947f99b00d32" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.14, this wouldn't even compile:</source>
          <target state="translated">Perl 5.14 이전에는 컴파일조차되지 않았습니다 :</target>
        </trans-unit>
        <trans-unit id="de989d99cd26a240641d2cdc8e03612a0efe21ac" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.17.6 this function returned a UV, it now returns a string, which may be of nearly any size as determined by the hash function your Perl has been built with. Possible sizes may be but are not limited to 4 bytes (for most hash algorithms) and 16 bytes (for siphash).</source>
          <target state="translated">Perl 5.17.6 이전에는이 ​​함수가 UV를 리턴했으며, 이제 Perl이 빌드 한 해시 함수에 의해 결정되는 거의 모든 크기의 문자열을 리턴합니다. 가능한 크기는 4 바이트 (대부분의 해시 알고리즘) 및 16 바이트 (siphash)로 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7c29fb6a57f19dc07c4af7b9c93f10ac571d8e1d" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.22, lexical &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; subroutines were not deparsed properly. They were emitted as pure declarations, sometimes in the wrong place. Lexical &lt;code&gt;&lt;a href=&quot;../functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; subroutines were not deparsed at all.</source>
          <target state="translated">이전 펄 5.22로, 어휘 &lt;code&gt;&lt;a href=&quot;../functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; 서브 루틴이 제대로 deparsed되지 않았다. 그들은 때로는 잘못된 장소에서 순수한 선언으로 나왔습니다. 어휘 &lt;code&gt;&lt;a href=&quot;../functions/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 서브 루틴은 전혀 삭제되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="1f407d9d16c256267f0f4b13cefdba861dde92a2" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.25 the value returned was a string consisting of the number of used buckets and the number of allocated buckets, separated by a slash. This is pretty much useful only to find out whether Perl's internal hashing algorithm is performing poorly on your data set. For example, you stick 10,000 things in a hash, but evaluating %HASH in scalar context reveals &lt;code&gt;&quot;1/16&quot;&lt;/code&gt;, which means only one out of sixteen buckets has been touched, and presumably contains all 10,000 of your items. This isn't supposed to happen.</source>
          <target state="translated">Perl 5.25 이전에는 반환 된 값이 슬래시로 구분 된 사용 된 버킷 수와 할당 된 버킷 수로 구성된 문자열이었습니다. 이것은 Perl의 내부 해싱 알고리즘이 데이터 세트에서 제대로 수행되지 않는지 확인하는 데에만 매우 유용합니다. 예를 들어, 해시에 10,000 개의 항목을 고정하지만 스칼라 컨텍스트에서 % HASH를 평가하면 &lt;code&gt;&quot;1/16&quot;&lt;/code&gt; 이 나타납니다 . 이는 16 개 버킷 중 하나만 터치되었으며 10,000 개의 항목이 모두 포함되어 있음을 의미합니다. 이것은 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="b1af3ac0b7dd3ea6937b3f41f99a969a19a97647" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.26, lexical subroutines were deemed experimental and were available only under the &lt;code&gt;use feature 'lexical_subs'&lt;/code&gt; pragma. They also produced a warning unless the &quot;experimental::lexical_subs&quot; warnings category was disabled.</source>
          <target state="translated">Perl 5.26 이전에는 어휘 서브 루틴이 실험적인 것으로 간주되었으며 &lt;code&gt;use feature 'lexical_subs'&lt;/code&gt; 에서만 사용할 수있었습니다 . 또한 &quot;experimental :: lexical_subs&quot;경고 범주가 비활성화되지 않는 한 경고를 생성했습니다.</target>
        </trans-unit>
        <trans-unit id="7e2ad77c39c996ef641c23c496462564375d76bc" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.28, locales could not be used with threads, due to various race conditions. Starting in that release, on systems that implement thread-safe locale functions, threads can be used, with some caveats. This includes Windows starting with Visual Studio 2005, and systems compatible with POSIX 2008. See &lt;a href=&quot;perllocale#Multi-threaded-operation&quot;&gt;&quot;Multi-threaded operation&quot; in perllocale&lt;/a&gt;.</source>
          <target state="translated">Perl 5.28 이전에는 다양한 경쟁 조건으로 인해 스레드와 함께 로케일을 사용할 수 없었습니다. 해당 릴리스부터 스레드로부터 안전한 로케일 함수를 구현하는 시스템에서 몇 가지주의 사항과 함께 스레드를 사용할 수 있습니다. 여기에는 Visual Studio 2005로 시작하는 Windows 및 POSIX 2008과 호환되는 시스템이 포함됩니다 . &lt;a href=&quot;perllocale#Multi-threaded-operation&quot;&gt;perllocale의 &quot;다중 스레드 작업&quot;을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12cec6611f2d0eb1760968632bb5da10da06d2a0" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.30, it worked only for fixed-width lookbehind, but starting in that release, it can handle variable lengths from 1 to 255 characters as an experimental feature. The feature is enabled automatically if you use a variable length lookbehind assertion, but will raise a warning at pattern compilation time, unless turned off, in the &lt;code&gt;experimental::vlb&lt;/code&gt; category. This is to warn you that the exact behavior is subject to change should feedback from actual use in the field indicate to do so; or even complete removal if the problems found are not practically surmountable. You can achieve close to pre-5.30 behavior by fatalizing warnings in this category.</source>
          <target state="translated">Perl 5.30 이전에는 고정 너비 lookbehind에서만 작동했지만 해당 릴리스부터는 실험적 기능으로 1 ~ 255 자의 가변 길이를 처리 할 수 ​​있습니다. 이 기능은 가변 길이 lookbehind 어설 션을 사용하는 경우 자동으로 활성화되지만, 해제되지 않는 한, &lt;code&gt;experimental::vlb&lt;/code&gt; 범주 에서 패턴 컴파일 시간에 경고가 발생합니다 . 이는 현장에서 실제 사용으로 인한 피드백에 따라 정확한 동작이 변경 될 수 있음을 경고하기위한 것입니다. 발견 된 문제가 실제로 극복 할 수없는 경우에는 완전히 제거 할 수도 있습니다. 이 범주의 경고를 치 명화하여 5.30 이전에 가까운 동작을 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ac15b68acc965c4200628245ecd910b03ae005b" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.8, repetitions of templates had to be made by &lt;code&gt;x&lt;/code&gt; -multiplication of template strings. Now there is a better way as we may use the pack codes &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; combined with a repeat count. The &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; template from the Stack Frame example can simply be written like this:</source>
          <target state="translated">Perl 5.8 이전에는 템플릿 문자열의 &lt;code&gt;x&lt;/code&gt; 곱셈으로 템플릿 을 반복해야했습니다 . 이제 반복 횟수와 함께 팩 코드 &lt;code&gt;(&lt;/code&gt; 및 &lt;code&gt;)&lt;/code&gt; 를 사용할 수있는 더 좋은 방법이 있습니다 . 스택 프레임 예제 의 &lt;code&gt;&lt;a href=&quot;functions/unpack&quot;&gt;unpack&lt;/a&gt;&lt;/code&gt; 템플릿은 다음과 같이 간단하게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc109700ab62e991deaf92d05b975c4e25f740df" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.8, repetitions of templates had to be made by &lt;code&gt;x&lt;/code&gt;-multiplication of template strings. Now there is a better way as we may use the pack codes &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; combined with a repeat count. The &lt;code&gt;unpack&lt;/code&gt; template from the Stack Frame example can simply be written like this:</source>
          <target state="translated">Perl 5.8 이전에는 템플릿 문자열의 &lt;code&gt;x&lt;/code&gt; 곱셈으로 템플릿 을 반복해야했습니다 . 이제 반복 횟수와 결합 된 팩 코드 &lt;code&gt;(&lt;/code&gt; 및 &lt;code&gt;)&lt;/code&gt; 를 사용할 수있는 더 나은 방법이 있습니다 . 스택 프레임 예제 의 &lt;code&gt;unpack&lt;/code&gt; 템플릿은 다음과 같이 간단하게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c459e52ad4361ad572014fb809fc32c7c7355a6" translate="yes" xml:space="preserve">
          <source>Prior to Perl 5.8.0 it was necessary to do as little as you possibly could in your handler; notice how all we do is set a global variable and then raise an exception. That's because on most systems, libraries are not re-entrant; particularly, memory allocation and I/O routines are not. That meant that doing nearly</source>
          <target state="translated">Perl 5.8.0 이전에는 처리기에서 가능한 한 적은 작업을 수행해야했습니다. 우리가하는 일은 전역 변수를 설정하고 예외를 발생시키는 것입니다. 대부분의 시스템에서 라이브러리는 재진입 할 ​​수 없기 때문입니다. 특히 메모리 할당 및 I / O 루틴은 그렇지 않습니다. 그것은 거의</target>
        </trans-unit>
        <trans-unit id="edf719ad4c45a8a39497a026af447085a953aba6" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.10.0, assignment to &lt;code&gt;$[&lt;/code&gt; could be seen from outer lexical scopes in the same file, unlike other compile-time directives (such as &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt;). Using local() on it would bind its value strictly to a lexical block. Now it is always lexically scoped.</source>
          <target state="translated">Perl v5.10.0 이전에는 다른 컴파일 타임 지시문 (예 : &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt; ) 과 달리 동일한 파일의 외부 어휘 범위에서 &lt;code&gt;$[&lt;/code&gt; 지정을 볼 수있었습니다 . local ()을 사용하면 값을 어휘 블록에 엄격하게 바인딩합니다. 이제는 항상 어휘 범위가 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="1eccc3df24f7326b35822731bb67524c647ac965" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.18, &lt;code&gt;\s&lt;/code&gt; did not match the vertical tab. &lt;code&gt;[^\S\cK]&lt;/code&gt; (obscurely) matches what &lt;code&gt;\s&lt;/code&gt; traditionally did.</source>
          <target state="translated">Perl v5.18 이전에는 &lt;code&gt;\s&lt;/code&gt; 가 세로 탭과 일치하지 않았습니다. &lt;code&gt;[^\S\cK]&lt;/code&gt; (분명히)는 &lt;code&gt;\s&lt;/code&gt; 전통적으로했던 것과 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="81458241fb89dacc9cdc0cd507759e6ca279c04d" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.22</source>
          <target state="translated">Perl v5.22 이전</target>
        </trans-unit>
        <trans-unit id="9245384eaf07ad72051bb7d5191636af387645e7" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.24, non-graphical ASCII control characters were also allowed in some situations; this had been deprecated since v5.20.</source>
          <target state="translated">Perl v5.24 이전에는 일부 상황에서 그래픽이 아닌 ASCII 제어 문자도 허용되었습니다. 이것은 v5.20부터 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6e12acf75f0fd6f1c215305ad4143a7eff7a8c7" translate="yes" xml:space="preserve">
          <source>Prior to Perl v5.8.1</source>
          <target state="translated">Perl v5.8.1 이전</target>
        </trans-unit>
        <trans-unit id="ccdb08dd9c53a9d56313f4f2db92f69844b78387" translate="yes" xml:space="preserve">
          <source>Prior to Perl version 5.10, the result of using an lvalue multiple times was unspecified. Prior to 5.16, the result with negative offsets was unspecified.</source>
          <target state="translated">Perl 버전 5.10 이전에는 lvalue를 여러 번 사용한 결과가 지정되지 않았습니다. 5.16 이전에는 음의 오프셋 결과가 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e470e463cc342d2a629f66729264d75f3534eacf" translate="yes" xml:space="preserve">
          <source>Prior to Perl version 5.16, it would create an inverted index of all characters that occurred in the given SCALAR (or &lt;a href=&quot;perlvar#%24_&quot;&gt;&lt;code&gt;$_&lt;/code&gt;&lt;/a&gt; if unspecified). When matching a pattern, the rarest character from the pattern would be looked up in this index. Rarity was based on some static frequency tables constructed from some C programs and English text.</source>
          <target state="translated">Perl 버전 5.16 이전에는 주어진 SCALAR (또는 지정되지 않은 경우 &lt;a href=&quot;perlvar#%24_&quot;&gt; &lt;code&gt;$_&lt;/code&gt; &lt;/a&gt; 에서 발생한 모든 문자의 반전 된 인덱스를 생성했습니다 . 패턴을 일치시킬 때 패턴에서 가장 희귀 한 문자가이 인덱스에서 조회됩니다. Rarity는 일부 C 프로그램과 영어 텍스트로 구성된 일부 정적 주파수 테이블을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="0030b6d60b1028edd6febca0979cdab635fcf553" translate="yes" xml:space="preserve">
          <source>Prior to Storable 2.01, no distinction was made between signed and unsigned integers on storing. By default Storable prefers to store a scalars string representation (if it has one) so this would only cause problems when storing large unsigned integers that had never been converted to string or floating point. In other words values that had been generated by integer operations such as logic ops and then not used in any string or arithmetic context before storing.</source>
          <target state="translated">Storable 2.01 이전에는 저장시 부호있는 정수와 부호없는 정수가 구별되지 않았습니다. 기본적으로 Storable은 스칼라 문자열 표현 (있는 경우)을 저장하는 것을 선호하므로 문자열이나 부동 소수점으로 변환되지 않은 큰 부호없는 정수를 저장할 때만 문제가 발생합니다. 다시 말해 논리 연산과 같은 정수 연산에 의해 생성 된 후 저장하기 전에 문자열 또는 산술 컨텍스트에서 사용되지 않은 값입니다.</target>
        </trans-unit>
        <trans-unit id="02a1fc8bf1a7ff0b71b0109895cbd28a2a3ed487" translate="yes" xml:space="preserve">
          <source>Prior to perl 5.6 &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; returned copies of the values, so older perl code often contains constructions such as &lt;code&gt;@orbits{&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %orbits}&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; %orbits&lt;/code&gt; where the hash is to be modified.</source>
          <target state="translated">perl 5.6 이전에는 &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 사본이 리턴되었으므로 이전 perl 코드에는 종종 해시가 수정 될 &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt; %orbits&lt;/code&gt; % orbits 대신 &lt;code&gt;@orbits{&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt; %orbits}&lt;/code&gt; 와 같은 구성이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="27415ec6c0a235b091c481972fd5159652ba01e1" translate="yes" xml:space="preserve">
          <source>Prior to perl 5.6 &lt;code&gt;values&lt;/code&gt; returned copies of the values, so older perl code often contains constructions such as &lt;code&gt;@orbits{keys %orbits}&lt;/code&gt; instead of &lt;code&gt;values %orbits&lt;/code&gt; where the hash is to be modified.</source>
          <target state="translated">펄에 앞서 5.6 &lt;code&gt;values&lt;/code&gt; 너무 오래된 펄 코드는 종종 같은 구조물이 포함 된 값의 복사본을 반환 &lt;code&gt;@orbits{keys %orbits}&lt;/code&gt; 대신 &lt;code&gt;values %orbits&lt;/code&gt; 해시 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f11fd4a98a09048dbed1e6ac8b8ef1689e8b33e4" translate="yes" xml:space="preserve">
          <source>Prior to release 5.0 of Perl, a programmer could use dbmopen() to connect an on-disk database in the standard Unix dbm(3x) format magically to a %HASH in their program. However, their Perl was either built with one particular dbm library or another, but not both, and you couldn't extend this mechanism to other packages or types of variables.</source>
          <target state="translated">Perl 5.0 릴리스 이전에 프로그래머는 dbmopen ()을 사용하여 표준 Unix dbm (3x) 형식의 디스크 내장 데이터베이스를 프로그램의 % HASH에 마술로 연결할 수있었습니다. 그러나 Perl은 하나의 특정 dbm 라이브러리 또는 다른 라이브러리로 빌드되었지만 둘다는 아니므로이 메커니즘을 다른 패키지 또는 변수 유형으로 확장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="70e3fb3fd17c9435bb1df82e7b954798d46dd101" translate="yes" xml:space="preserve">
          <source>Prior to this point, anyone programming in perl who wanted to interact with C programs, like the kernel, was forced to guess the layouts of the C structures, and then hardwire these into his program. Of course, when you took your wonderfully crafted program to a system where the sgtty structure was laid out differently, your program broke. Which is a shame.</source>
          <target state="translated">이 시점 이전에 커널과 같이 C 프로그램과 상호 작용하기를 원하는 펄에서 프로그래밍하는 사람은 C 구조의 레이아웃을 추측 한 다음이를 자신의 프로그램에 고정시켜야했습니다. 물론 sgtty 구조가 다르게 배치 된 시스템으로 훌륭하게 제작 된 프로그램을 사용하면 프로그램이 중단됩니다. 부끄러운 일입니다.</target>
        </trans-unit>
        <trans-unit id="af7e1150dbf03ec2621e5c3e750556f5d9b511aa" translate="yes" xml:space="preserve">
          <source>Prior to v5.14, there were some bugs in &lt;code&gt;\N{...}&lt;/code&gt; with a character name (as opposed to a &lt;code&gt;U+...&lt;/code&gt; code point).</source>
          <target state="translated">v5.14 이전에는 &lt;code&gt;\N{...}&lt;/code&gt; 에 문자 이름 이있는 버그가있었습니다 ( &lt;code&gt;U+...&lt;/code&gt; 코드 포인트가 아닌 ).</target>
        </trans-unit>
        <trans-unit id="d4f4150bc1f255b33ac823d8094c75e885836366" translate="yes" xml:space="preserve">
          <source>Prior to v5.16, using &lt;code&gt;\N{...}&lt;/code&gt; with a character name (as opposed to a &lt;code&gt;U+...&lt;/code&gt; code point) required a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames :full&lt;/code&gt; .</source>
          <target state="translated">v5.16 이전에는 문자 이름과 함께 &lt;code&gt;\N{...}&lt;/code&gt; 사용하려면 ( &lt;code&gt;U+...&lt;/code&gt; 코드 포인트가 아닌 ) &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; charnames :full&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;사용해야했습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2323d34517a73ba4c0c861171691d8bc71bfefb" translate="yes" xml:space="preserve">
          <source>Prior to v5.16, using &lt;code&gt;\N{...}&lt;/code&gt; with a character name (as opposed to a &lt;code&gt;U+...&lt;/code&gt; code point) required a &lt;code&gt;use charnames :full&lt;/code&gt;.</source>
          <target state="translated">v5.16 이전에는 문자 이름과 함께 &lt;code&gt;\N{...}&lt;/code&gt; 사용 ( &lt;code&gt;U+...&lt;/code&gt; 코드 포인트 와 반대 ) &lt;code&gt;use charnames :full&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f638421b1ecb89704c5c15e221dc503e720cbcd9" translate="yes" xml:space="preserve">
          <source>Prior to v5.20, Perl did not support multi-byte locales. Starting then, UTF-8 locales are supported. No other multi byte locales are ever likely to be supported. However, in all locales, one can have code points above 255 and these will always be treated as Unicode no matter what locale is in effect.</source>
          <target state="translated">v5.20 이전에는 Perl이 멀티 바이트 로케일을 지원하지 않았습니다. 그런 다음 UTF-8 로케일이 지원됩니다. 다른 멀티 바이트 로케일은 지원되지 않습니다. 그러나 모든 로케일에서 255 이상의 코드 포인트를 가질 수 있으며 어떤 로케일이 적용 되든 항상 유니 코드로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="c2e863acc878c8a62def318f458b49c2252c835f" translate="yes" xml:space="preserve">
          <source>Prior to v5.20, Perl raised a warning and made all matches fail on non-Unicode code points. This could be somewhat surprising:</source>
          <target state="translated">v5.20 이전에는 Perl이 경고를 표시하고 유니 코드가 아닌 코드 포인트에서 모든 일치에 실패했습니다. 이것은 다소 놀랍습니다.</target>
        </trans-unit>
        <trans-unit id="63188205d9031db86825c40d25da5b1f4ef4afef" translate="yes" xml:space="preserve">
          <source>Prior to v5.22 only one form of the pragma with arguments is available:</source>
          <target state="translated">v5.22 이전에는 인수가있는 한 가지 형식의 pragma 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2bb17f127c6d06738170e861c52ecb4dd3c7bab1" translate="yes" xml:space="preserve">
          <source>Prior to v5.22, you couldn't specify any ranges portably, except (starting in Perl v5.5.3) all subsets of the &lt;code&gt;[A-Z]&lt;/code&gt; and &lt;code&gt;[a-z]&lt;/code&gt; ranges are specially coded to not pick up gap characters. For example, characters such as &quot;&amp;ocirc;&quot; (&lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt; ) that lie between &quot;I&quot; and &quot;J&quot; would not be matched by the regular expression range &lt;code&gt;/[H-K]/&lt;/code&gt; . But if either of the range end points is explicitly numeric (and neither is specified by &lt;code&gt;\N{U+...}&lt;/code&gt; ), the gap characters are matched:</source>
          <target state="translated">v5.22 이전에는 Perl v5.5.3부터 시작하여 &lt;code&gt;[A-Z]&lt;/code&gt; 및 &lt;code&gt;[a-z]&lt;/code&gt; 범위 의 모든 하위 세트가 간격 문자를 선택하지 않도록 특별히 코딩 된 경우를 제외하고는 이식 가능 범위를 지정할 수 없었 습니다. 예를 들어, &quot;I&quot;와 &quot;J&quot;사이에있는 &quot;&amp;ocirc;&quot;( &lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt; ) 와 같은 문자 는 정규식 범위 &lt;code&gt;/[H-K]/&lt;/code&gt; 와 일치하지 않습니다 . 그러나 범위 끝점 중 하나가 명시 적으로 숫자이고 &lt;code&gt;\N{U+...}&lt;/code&gt; 로 지정되지 않은 경우 공백 문자가 일치합니다.</target>
        </trans-unit>
        <trans-unit id="a3fe89c517c16207a4287ca8ad44a06a40ee969f" translate="yes" xml:space="preserve">
          <source>Prior to v5.22, you couldn't specify any ranges portably, except (starting in Perl v5.5.3) all subsets of the &lt;code&gt;[A-Z]&lt;/code&gt; and &lt;code&gt;[a-z]&lt;/code&gt; ranges are specially coded to not pick up gap characters. For example, characters such as &quot;&amp;ocirc;&quot; (&lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt;) that lie between &quot;I&quot; and &quot;J&quot; would not be matched by the regular expression range &lt;code&gt;/[H-K]/&lt;/code&gt;. But if either of the range end points is explicitly numeric (and neither is specified by &lt;code&gt;\N{U+...}&lt;/code&gt;), the gap characters are matched:</source>
          <target state="translated">v5.22 이전에는 (Perl v5.5.3에서 시작) &lt;code&gt;[A-Z]&lt;/code&gt; 및 &lt;code&gt;[a-z]&lt;/code&gt; 범위 의 모든 하위 집합이 간격 문자를 선택하지 않도록 특별히 코딩 된 것을 제외하고는 어떤 범위도 이식 가능하게 지정할 수 없었 습니다. 예를 들어, &quot;I&quot;와 &quot;J&quot;사이에있는 &quot;&amp;ocirc;&quot;( &lt;code&gt;o WITH CIRCUMFLEX&lt;/code&gt; ) 와 같은 문자 는 정규식 범위 &lt;code&gt;/[H-K]/&lt;/code&gt; 와 일치하지 않습니다 . 그러나 범위 끝점 중 하나가 명시 적으로 숫자이고 둘 다 &lt;code&gt;\N{U+...}&lt;/code&gt; 로 지정되지 않은 경우 간격 문자가 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8c6a67b224e69bc355ee61cdb60ffe1494025492" translate="yes" xml:space="preserve">
          <source>Prior to version 1.2.0, zlib assumed that there was at least one trailing byte immediately after the compressed data stream when it was carrying out decompression. This normally isn't a problem because the majority of zlib applications guarantee that there will be data directly after the compressed data stream. For example, both gzip (RFC 1950) and zip both define trailing data that follows the compressed data stream.</source>
          <target state="translated">버전 1.2.0 이전에 zlib는 압축 해제 할 때 압축 된 데이터 스트림 바로 뒤에 최소한 하나의 후행 바이트가 있다고 가정했습니다. 대부분의 zlib 응용 프로그램은 압축 된 데이터 스트림 바로 뒤에 데이터가 있음을 보증하므로 일반적으로 문제가되지 않습니다. 예를 들어 gzip (RFC 1950)과 zip 모두 압축 된 데이터 스트림을 따르는 후행 데이터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="8c0ad90bec3127568428d4c04d5d1ea52f6ba12f" translate="yes" xml:space="preserve">
          <source>Priorities</source>
          <target state="translated">Priorities</target>
        </trans-unit>
        <trans-unit id="92e6b3fba0bbad8db67c2af3c57c98bc96a811e3" translate="yes" xml:space="preserve">
          <source>Private Variables via my()</source>
          <target state="translated">my ()를 통한 개인 변수</target>
        </trans-unit>
        <trans-unit id="05130e33abddf0e65c0e7c60a0ddfd3cb42e8f19" translate="yes" xml:space="preserve">
          <source>Private data fields are stored in the hash-object whose reference is returned by the &lt;b&gt;new()&lt;/b&gt; constructor for this class. The names of all private methods and data-fields used by &lt;b&gt;Pod::Parser&lt;/b&gt; begin with a prefix of &quot;_&quot; and match the regular expression &lt;code&gt;/^_\w+$/&lt;/code&gt; .</source>
          <target state="translated">비공개 데이터 필드는 이 클래스 의 &lt;b&gt;new ()&lt;/b&gt; 생성자에 의해 참조가 반환되는 해시 객체에 저장됩니다 . &lt;b&gt;Pod :: Parser에서&lt;/b&gt; 사용하는 모든 개인용 메서드 및 데이터 필드의 이름은 접두사 &quot;_&quot;로 시작하고 정규식 &lt;code&gt;/^_\w+$/&lt;/code&gt; 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="65f6f08ed32d7f3e7ae8b96d47bc7edf0dd64925" translate="yes" xml:space="preserve">
          <source>Private data fields are stored in the hash-object whose reference is returned by the &lt;b&gt;new()&lt;/b&gt; constructor for this class. The names of all private methods and data-fields used by &lt;b&gt;Pod::Select&lt;/b&gt; begin with a prefix of &quot;_&quot; and match the regular expression &lt;code&gt;/^_\w+$/&lt;/code&gt; .</source>
          <target state="translated">비공개 데이터 필드는 이 클래스 의 &lt;b&gt;new ()&lt;/b&gt; 생성자에 의해 참조가 반환되는 해시 객체에 저장됩니다 . &lt;b&gt;Pod :: Select에서&lt;/b&gt; 사용하는 모든 개인용 메서드 및 데이터 필드의 이름은 &quot;_&quot;접두사로 시작하고 정규식 &lt;code&gt;/^_\w+$/&lt;/code&gt; 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="20d7d0dbde2c55d3d35a4245cf685ae7921d0a46" translate="yes" xml:space="preserve">
          <source>Private flags, if any are set for an opcode, are displayed after a '/'</source>
          <target state="translated">opcode에 설정된 개인 플래그는 '/'뒤에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ba4d99009403ef1e9fa58895f77afbe80e15c049" translate="yes" xml:space="preserve">
          <source>Probably give some hints on using SETERRNO() or pointers to where they can be found.</source>
          <target state="translated">아마도 SETERRNO () 사용 또는 힌트를 찾을 수있는 위치에 대한 힌트를 제공 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="12ee136d3488f2b13710aaf22abd3d36be8ba625" translate="yes" xml:space="preserve">
          <source>Probably more than X kb, since it will all be read into memory. If this is a problem, and you don't need to do in memory manipulation of the archive, consider using the &lt;code&gt;iter&lt;/code&gt; class method, or &lt;code&gt;/bin/tar&lt;/code&gt; instead.</source>
          <target state="translated">아마도 X kb 이상일 것입니다. 모두 메모리로 읽히기 때문입니다. 이것이 문제이고 아카이브의 메모리 조작에 필요하지 않은 경우 &lt;code&gt;iter&lt;/code&gt; 클래스 메소드 또는 &lt;code&gt;/bin/tar&lt;/code&gt; 를 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="30d6e13bbb18e72ebcf84bb4444a8e743d2c653b" translate="yes" xml:space="preserve">
          <source>Probably others.</source>
          <target state="translated">아마도 다른 사람들 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="ef365b944e9e18cc80d5e4db09dc683da3e7789a" translate="yes" xml:space="preserve">
          <source>Probably the easiest way to do this is using</source>
          <target state="translated">이 작업을 수행하는 가장 쉬운 방법은</target>
        </trans-unit>
        <trans-unit id="6ba279b033596c1de1e96bda59ebc9b45740b37e" translate="yes" xml:space="preserve">
          <source>Probably you &lt;b&gt;do&lt;/b&gt; have the old version installed. This can happen if a module installs itself into a different directory in the @INC path than it was previously installed. This is not really a CPAN.pm problem, you would have the same problem when installing the module manually. The easiest way to prevent this behaviour is to add the argument &lt;code&gt;UNINST=1&lt;/code&gt; to the &lt;code&gt;make install&lt;/code&gt; call, and that is why many people add this argument permanently by configuring</source>
          <target state="translated">아마 당신이 &lt;b&gt;할&lt;/b&gt; 이전 버전이 설치되어 있습니다. 이는 모듈이 이전에 설치된 것과 다른 @INC 경로의 다른 디렉토리에 설치되는 경우 발생할 수 있습니다. 이것은 실제로 CPAN.pm 문제는 아니며 모듈을 수동으로 설치할 때도 같은 문제가 발생합니다. 이 동작을 방지하는 가장 쉬운 방법 은 &lt;code&gt;make install&lt;/code&gt; 호출에 &lt;code&gt;UNINST=1&lt;/code&gt; 인수를 추가하는 것이므로 많은 사람들이 구성하여이 인수를 영구적으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5a71c3bb0c835b3979085e9217ce9dcff4431ef5" translate="yes" xml:space="preserve">
          <source>Problematic System Interfaces</source>
          <target state="translated">문제가있는 시스템 인터페이스</target>
        </trans-unit>
        <trans-unit id="348967ab4ee9f7f83af2fd9006e6f3cb3052fe52" translate="yes" xml:space="preserve">
          <source>Problems can arise if the string expands a scalar containing a floating point number. That scalar can expand to letters, such as &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; or &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; ; or, within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , the decimal point character may be something other than a dot (such as a comma). None of these are likely to parse as you are likely expecting.</source>
          <target state="translated">문자열이 부동 소수점 숫자를 포함하는 스칼라를 확장하면 문제가 발생할 수 있습니다. 이 스칼라는 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; 와 같은 문자로 확장 될 수 있습니다 . 또는 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 범위 내에서 소수점 문자는 점 (예 : 쉼표) 이외의 문자 일 수 있습니다. 예상대로 이것들 중 어느 것도 파싱하지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="4ec141ca9a30659dea063b68fb5a517f3e3d534b" translate="yes" xml:space="preserve">
          <source>Problems can arise if the string expands a scalar containing a floating point number. That scalar can expand to letters, such as &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; or &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; ; or, within the scope of a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , the decimal point character may be something other than a dot (such as a comma). None of these are likely to parse as you are likely expecting.</source>
          <target state="translated">문자열이 부동 소수점 숫자를 포함하는 스칼라를 확장하면 문제가 발생할 수 있습니다. 이 스칼라는 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; 와 같은 문자로 확장 될 수 있습니다 . 또는 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 범위 내에서 소수점 문자는 점 (예 : 쉼표) 이외의 문자 일 수 있습니다. 예상대로 이것들 중 어느 것도 파싱하지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="3102351980b10b862ee6c2c5c5728bd1684d673d" translate="yes" xml:space="preserve">
          <source>Problems can arise if the string expands a scalar containing a floating point number. That scalar can expand to letters, such as &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; or &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt;; or, within the scope of a &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;use locale&lt;/code&gt;&lt;/a&gt;, the decimal point character may be something other than a dot (such as a comma). None of these are likely to parse as you are likely expecting.</source>
          <target state="translated">문자열이 부동 소수점 숫자를 포함하는 스칼라를 확장하면 문제가 발생할 수 있습니다. 이 스칼라는 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;Infinity&quot;&lt;/code&gt; 와 같은 문자로 확장 할 수 있습니다 . 또는 &lt;a href=&quot;locale&quot;&gt; &lt;code&gt;use locale&lt;/code&gt; &lt;/a&gt; 범위 내에서 소수점 문자는 점 (예 : 쉼표)이 아닌 다른 문자 일 수 있습니다. 이들 중 어느 것도 예상대로 구문 분석 할 가능성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c1a04b0f8db3bbf9a433e4161d3acc8ec9cc5945" translate="yes" xml:space="preserve">
          <source>Problems of Inside-out</source>
          <target state="translated">인사이드 아웃 문제</target>
        </trans-unit>
        <trans-unit id="1ee1742b87ae33a1c6f39cdefb753ee45be9c395" translate="yes" xml:space="preserve">
          <source>Problems with tr or sed</source>
          <target state="translated">tr 또는 sed의 문제점</target>
        </trans-unit>
        <trans-unit id="41c48fd3a204be2beab6bd0e24fdbda408c2ba06" translate="yes" xml:space="preserve">
          <source>Proc::ProcessTable does not compile on Solaris with perl5.6.0 and higher if you have LARGEFILES defined. Since largefile support is the default in 5.6.0 and later, you have to take special steps to use this module.</source>
          <target state="translated">LARGEFILES가 정의되어 있으면 proc :: ProcessTable이 perl5.6.0 이상인 Solaris에서 컴파일되지 않습니다. 큰 파일 지원은 5.6.0 이상에서 기본값이므로이 모듈을 사용하려면 특별한 단계를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="ac93e65b57a2151f0a952944a98261a5685458fa" translate="yes" xml:space="preserve">
          <source>Proc::ProcessTable on Solaris</source>
          <target state="translated">Solaris의 Proc :: ProcessTable</target>
        </trans-unit>
        <trans-unit id="63b4e90314d2c42ea7a19c98e41b4f05994ebf0f" translate="yes" xml:space="preserve">
          <source>Procedures for predeclaring the output that your test suite is expected to produce until &lt;code&gt;test_test&lt;/code&gt; is called. These procedures automatically assume that each line terminates with &quot;\n&quot;. So</source>
          <target state="translated">&lt;code&gt;test_test&lt;/code&gt; 가 호출 될 때까지 테스트 스위트가 생성 할 것으로 예상되는 출력을 사전 선언하는 절차 . 이 절차에서는 각 줄이 &quot;\ n&quot;으로 끝나는 것으로 자동으로 가정합니다. 그래서</target>
        </trans-unit>
        <trans-unit id="84b64dd0d66309028df716ba28b5d47e80552535" translate="yes" xml:space="preserve">
          <source>Proceed as above, but make</source>
          <target state="translated">위와 같이 진행하되</target>
        </trans-unit>
        <trans-unit id="f73b8984cc638c7a7b07ebde54216495fdea38ec" translate="yes" xml:space="preserve">
          <source>Process Overview</source>
          <target state="translated">프로세스 개요</target>
        </trans-unit>
        <trans-unit id="a34f8f33dda092ae3a80919a349d9bc45f76119e" translate="yes" xml:space="preserve">
          <source>Process all typemap files.</source>
          <target state="translated">모든 typemap 파일을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="47792f7246b1ace09a77268265b8c2e729e950de" translate="yes" xml:space="preserve">
          <source>Process and Thread Termination</source>
          <target state="translated">프로세스 및 스레드 종료</target>
        </trans-unit>
        <trans-unit id="90d477e2d9ac85e239d0759d291d0532a8b57032" translate="yes" xml:space="preserve">
          <source>Process single-character switches with switch clustering</source>
          <target state="translated">스위치 클러스터링으로 단일 문자 스위치 처리</target>
        </trans-unit>
        <trans-unit id="edddff217ecf6de25ccb77ae9517c586b551c97d" translate="yes" xml:space="preserve">
          <source>Process terminated by SIG%s</source>
          <target state="translated">SIG % s에 의해 프로세스가 종료되었습니다.</target>
        </trans-unit>
        <trans-unit id="b39468139e121ee8dbac83faf4147e3971261d01" translate="yes" xml:space="preserve">
          <source>Process terminated by SIGTERM/SIGINT</source>
          <target state="translated">SIGTERM / SIGINT에 의해 프로세스가 종료되었습니다.</target>
        </trans-unit>
        <trans-unit id="34ae1c3ba08c93d4aa84d88b30e7ce92a5bf6618" translate="yes" xml:space="preserve">
          <source>Process the contents of $_ to change the source code in the desired manner.</source>
          <target state="translated">원하는 방식으로 소스 코드를 변경하려면 $ _의 내용을 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="a71e516dfb64d613336cd8c83af6bfd904864ee0" translate="yes" xml:space="preserve">
          <source>Process-scope Changes</source>
          <target state="translated">공정 범위 변경</target>
        </trans-unit>
        <trans-unit id="4a52ce9e460a5f71bed1414f20a7fe6e02ca3cb9" translate="yes" xml:space="preserve">
          <source>ProcessRead</source>
          <target state="translated">ProcessRead</target>
        </trans-unit>
        <trans-unit id="240d22a1e0317130f09d247d6dde37168740bd36" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; and appends the formatted output to an SV. If the appended data contains &quot;wide&quot; characters (including, but not limited to, SVs with a UTF-8 PV formatted with %s, and characters &amp;gt;255 formatted with %c), the original SV might get upgraded to UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;sv_catpvf_mg&lt;/code&gt; . If the original SV was UTF-8, the pattern should be valid UTF-8; if the original SV was bytes, the pattern should be too.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 와 같은 인수를 처리 하고 형식화 된 출력을 SV에 추가합니다. 추가 된 데이터에 &quot;와이드&quot;문자 (% s로 포맷 된 UTF-8 PV를 가진 SV 및 % c로 포맷 된&amp;gt; 255 문자 포함)를 포함하는 경우 원래 SV가 UTF-8로 업그레이드 될 수 있습니다. 'get'마법을 처리하지만 'set'마법은 처리하지 않습니다. &lt;code&gt;sv_catpvf_mg&lt;/code&gt; 를 참조하십시오 . 원래 SV가 UTF-8 인 경우 패턴은 유효한 UTF-8이어야합니다. 원래 SV가 바이트 인 경우 패턴도 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="23662f68735475da5113586624f91c0fea2dcaa9" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;sprintf&lt;/code&gt;, and appends the formatted output to an SV. As with &lt;code&gt;sv_vcatpvfn&lt;/code&gt; called with a non-null C-style variable argument list, argument reordering is not supported. If the appended data contains &quot;wide&quot; characters (including, but not limited to, SVs with a UTF-8 PV formatted with &lt;code&gt;%s&lt;/code&gt;, and characters &amp;gt;255 formatted with &lt;code&gt;%c&lt;/code&gt;), the original SV might get upgraded to UTF-8. Handles 'get' magic, but not 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_catpvf_mg&quot;&gt;&quot;sv_catpvf_mg&quot;&lt;/a&gt;&lt;/code&gt;. If the original SV was UTF-8, the pattern should be valid UTF-8; if the original SV was bytes, the pattern should be too.</source>
          <target state="translated">&lt;code&gt;sprintf&lt;/code&gt; 와 같은 인수를 처리 하고 형식화 된 출력을 SV에 추가합니다. 널이 아닌 C 스타일 변수 인수 목록으로 호출 된 &lt;code&gt;sv_vcatpvfn&lt;/code&gt; 과 마찬가지로 인수 재정렬은 지원되지 않습니다. 추가 된 데이터에 &quot;와이드&quot;문자 ( &lt;code&gt;%s&lt;/code&gt; 형식이 지정된 UTF-8 PV 및 &lt;code&gt;%c&lt;/code&gt; 형식이&amp;gt; 255 인 문자를 포함하되 이에 국한되지 않음 )가 포함 된 경우 원래 SV가 UTF-8로 업그레이드 될 수 있습니다. 'get'마술은 처리하지만 'set'마술은 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_catpvf_mg&quot;&gt;&quot;sv_catpvf_mg&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . 원래 SV가 UTF-8이면 패턴은 유효한 UTF-8이어야합니다. 원래 SV가 바이트이면 패턴도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="01931ddfd4b729796da2e24bc9df900b32a1dc0b" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;sv_vcatpvfn&lt;/code&gt; called with a non-null C-style variable argument list, and appends the formatted output to an SV. Does not handle 'set' magic. See &lt;code&gt;&lt;a href=&quot;#sv_vcatpvf_mg&quot;&gt;&quot;sv_vcatpvf_mg&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">널이 아닌 C 스타일 변수 인수 목록으로 호출 된 &lt;code&gt;sv_vcatpvfn&lt;/code&gt; 과 같은 인수를 처리하고 형식화 된 출력을 SV에 추가합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;&lt;a href=&quot;#sv_vcatpvf_mg&quot;&gt;&quot;sv_vcatpvf_mg&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3aea4467da0c26ebde0ed6297ea1903606fe244" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;vsprintf&lt;/code&gt; and appends the formatted output to an SV. Does not handle 'set' magic. See &lt;code&gt;sv_vcatpvf_mg&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;vsprintf&lt;/code&gt; 와 같은 인수를 처리 하고 형식화 된 출력을 SV에 추가합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;sv_vcatpvf_mg&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b934966b79098add3be2cc4a61803362f68203fb" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;vsprintf&lt;/code&gt; and appends the formatted output to an SV. Uses an array of SVs if the C style variable argument list is missing (NULL). When running with taint checks enabled, indicates via &lt;code&gt;maybe_tainted&lt;/code&gt; if results are untrustworthy (often due to the use of locales).</source>
          <target state="translated">&lt;code&gt;vsprintf&lt;/code&gt; 와 같은 인수를 처리 하고 형식화 된 출력을 SV에 추가합니다. C 스타일 변수 인수 목록이 누락 된 경우 SV 배열을 사용합니다 (NULL). 오염 검사가 활성화 된 상태에서 실행할 때 결과가 신뢰할 수없는 경우 (종종 로케일 사용으로 인해 ) &lt;code&gt;maybe_tainted&lt;/code&gt; 를 통해 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="ac841b3134897ec43af721ef9f097de135a438bf" translate="yes" xml:space="preserve">
          <source>Processes its arguments like &lt;code&gt;vsprintf&lt;/code&gt; and appends the formatted output to an SV. Uses an array of SVs if the C-style variable argument list is missing (&lt;code&gt;NULL&lt;/code&gt;). Argument reordering (using format specifiers like &lt;code&gt;%2$d&lt;/code&gt; or &lt;code&gt;%*2$d&lt;/code&gt;) is supported only when using an array of SVs; using a C-style &lt;code&gt;va_list&lt;/code&gt; argument list with a format string that uses argument reordering will yield an exception.</source>
          <target state="translated">&lt;code&gt;vsprintf&lt;/code&gt; 와 같은 인수를 처리 하고 형식화 된 출력을 SV에 추가합니다. C 스타일 변수 인수 목록이 누락 된 경우 ( &lt;code&gt;NULL&lt;/code&gt; ) SV 배열을 사용합니다 . 인수 재정렬 ( &lt;code&gt;%2$d&lt;/code&gt; 또는 &lt;code&gt;%*2$d&lt;/code&gt; 와 같은 형식 지정자 사용 )은 SV 배열을 사용할 때만 지원됩니다. 인수 재정렬을 사용하는 형식 문자열과 함께 C 스타일 &lt;code&gt;va_list&lt;/code&gt; 인수 목록을 사용하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bb363ec474bd3cedd7705c77914ee3e53e091efe" translate="yes" xml:space="preserve">
          <source>Processes the command-line arguments. Attributes will be set appropriately. Any filenames may be found in the &lt;code&gt;argv&lt;/code&gt; attribute.</source>
          <target state="translated">명령 행 인수를 처리합니다. 속성이 적절하게 설정됩니다. 모든 파일 이름은 &lt;code&gt;argv&lt;/code&gt; 속성 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d23d0424e350de40557cd93a40bb9447e7fcf75" translate="yes" xml:space="preserve">
          <source>Processing Instructions</source>
          <target state="translated">처리 지침</target>
        </trans-unit>
        <trans-unit id="a484cb249da1c2816261c338e54ea2ce100a8ffc" translate="yes" xml:space="preserve">
          <source>Processing happens as you knew before. The only difference is that you're now using characters instead of bytes. That's very useful if you use things like &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이전에 알고 있던대로 처리됩니다. 유일한 차이점은 이제 바이트 대신 문자를 사용한다는 것입니다. &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 같은 것을 사용하는 경우 매우 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="7bdd0ee6438a8a6357f1577d9d672947282674ef" translate="yes" xml:space="preserve">
          <source>Processing happens as you knew before. The only difference is that you're now using characters instead of bytes. That's very useful if you use things like &lt;code&gt;substr&lt;/code&gt;, or &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">이전에 알고 있던대로 처리가 이루어집니다. 유일한 차이점은 이제 바이트 대신 문자를 사용하고 있다는 것입니다. &lt;code&gt;substr&lt;/code&gt; 또는 &lt;code&gt;length&lt;/code&gt; 와 같은 것을 사용하는 경우 매우 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="e35fdd40c3c7fa05c06908e4bbcefbbe3e8decea" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;make install&lt;/code&gt; or &lt;code&gt;./Build install&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPAN mantra 의 &lt;code&gt;make install&lt;/code&gt; 또는 &lt;code&gt;./Build install&lt;/code&gt; 단계에 대한 처리 지시 사항 . 아래 아래를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="d84fcba7e4f4817ac9bf39f97fede8c0cf9aa1e1" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;make test&lt;/code&gt; or &lt;code&gt;./Build test&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPAN 만트라 의 &lt;code&gt;make test&lt;/code&gt; 또는 &lt;code&gt;./Build test&lt;/code&gt; 단계에 대한 처리 지시 사항 . 아래 아래를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="3f32cc81d0fe50f4c815d67016fd04f778345399" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;./Build&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPAN 만트라 의 &lt;code&gt;make&lt;/code&gt; 또는 &lt;code&gt;./Build&lt;/code&gt; 단계에 대한 처리 지시 사항 . 아래 아래를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="7e35c32fdad63551c269470f250e4811969ec218" translate="yes" xml:space="preserve">
          <source>Processing instructions for the &lt;code&gt;perl Makefile.PL&lt;/code&gt; or &lt;code&gt;perl
Build.PL&lt;/code&gt; phase of the CPAN mantra. See below under</source>
          <target state="translated">CPAN 만트라 의 &lt;code&gt;perl Makefile.PL&lt;/code&gt; 또는 &lt;code&gt;perl Build.PL&lt;/code&gt; 단계에 대한 처리 지시 사항 . 아래 아래를 참조하십시오</target>
        </trans-unit>
        <trans-unit id="982ed577a21afe646e18a3d92db26aa87fed151a" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\N{...}&lt;/code&gt; is also done here, and compiled into an intermediate form for the regex compiler. (This is because, as mentioned below, the regex compilation may be done at execution time, and &lt;code&gt;\N{...}&lt;/code&gt; is a compile-time construct.)</source>
          <target state="translated">&lt;code&gt;\N{...}&lt;/code&gt; 처리 도 여기서 수행되며 정규식 컴파일러를위한 중간 형식으로 컴파일됩니다. (아래에 언급 한 것처럼 정규식 컴파일은 실행 시간에 수행 될 수 있고 &lt;code&gt;\N{...}&lt;/code&gt; 은 컴파일 타임 구문이기 때문입니다.)</target>
        </trans-unit>
        <trans-unit id="9701fd573d77167447621582e9abdf1f86b28f3a" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; , &lt;code&gt;\E&lt;/code&gt; , and interpolation happens (almost) as with &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; constructs.</source>
          <target state="translated">처리 &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; , &lt;code&gt;\E&lt;/code&gt; 와 같이 보간으로 (거의) 발생 &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; 구조체.</target>
        </trans-unit>
        <trans-unit id="f3b65d43b20d5c0bdaa8f1c4df2161e776bf0d1d" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; and interpolation happens as with &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; constructs.</source>
          <target state="translated">처리 &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; 및 보간과 같이 발생 &lt;code&gt;&lt;a href=&quot;functions/qq&quot;&gt;qq//&lt;/a&gt;&lt;/code&gt; 구조체.</target>
        </trans-unit>
        <trans-unit id="6cc73b71907d527c2dfca92f0e73de3f2e06b2f2" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt;, &lt;code&gt;\l&lt;/code&gt;, &lt;code&gt;\F&lt;/code&gt; and interpolation happens as with &lt;code&gt;qq//&lt;/code&gt; constructs.</source>
          <target state="translated">처리 &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; 및 보간과 같이 발생 &lt;code&gt;qq//&lt;/code&gt; 구조체.</target>
        </trans-unit>
        <trans-unit id="92d62c63f312dfd45bc98d136f45152a41490d77" translate="yes" xml:space="preserve">
          <source>Processing of &lt;code&gt;\Q&lt;/code&gt;, &lt;code&gt;\U&lt;/code&gt;, &lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt;, &lt;code&gt;\l&lt;/code&gt;, &lt;code&gt;\F&lt;/code&gt;, &lt;code&gt;\E&lt;/code&gt;, and interpolation happens (almost) as with &lt;code&gt;qq//&lt;/code&gt; constructs.</source>
          <target state="translated">처리 &lt;code&gt;\Q&lt;/code&gt; , &lt;code&gt;\U&lt;/code&gt; , &lt;code&gt;\u&lt;/code&gt; , &lt;code&gt;\L&lt;/code&gt; , &lt;code&gt;\l&lt;/code&gt; , &lt;code&gt;\F&lt;/code&gt; , &lt;code&gt;\E&lt;/code&gt; 와 같이 보간으로 (거의) 발생 &lt;code&gt;qq//&lt;/code&gt; 구조체.</target>
        </trans-unit>
        <trans-unit id="249779be2efde8096efc39f80bde3efa59185ef3" translate="yes" xml:space="preserve">
          <source>Processing the results requires an additional if statement to determine whether &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; or &lt;code&gt;$3&lt;/code&gt; and &lt;code&gt;$4&lt;/code&gt; contain the goodies. It would be easier if we could use group numbers 1 and 2 in second alternative as well, and this is exactly what the parenthesized construct &lt;code&gt;(?|...)&lt;/code&gt;, set around an alternative achieves. Here is an extended version of the previous pattern:</source>
          <target state="translated">결과를 처리하려면 &lt;code&gt;$1&lt;/code&gt; 및 &lt;code&gt;$2&lt;/code&gt; 또는 &lt;code&gt;$3&lt;/code&gt; 및 &lt;code&gt;$4&lt;/code&gt; 에 상품이 포함되어 있는지 판별하기 위해 추가 if 문이 필요합니다 . 두 번째 대안으로 그룹 번호 1과 2를 사용할 수 있다면 더 쉬울 것입니다. 이는 대안을 중심으로 설정된 괄호로 묶은 구문 &lt;code&gt;(?|...)&lt;/code&gt; 입니다. 이전 패턴의 확장 버전은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f731f0c07372a44a4d37163f47e58a415c7cf5aa" translate="yes" xml:space="preserve">
          <source>Processors must tolerate an &quot;=over&quot; list that goes off the end of the document (i.e., which has no matching &quot;=back&quot;), but they may warn about such a list.</source>
          <target state="translated">프로세서는 문서 끝에서 나오는 &quot;= over&quot;목록 (예 : 일치하는 &quot;= back&quot;이없는)을 허용해야하지만 그러한 목록에 대해 경고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9b30fe5cb91e5eed87e9d843db39321e5abdf6e" translate="yes" xml:space="preserve">
          <source>Produce a stack backtrace. See below for details on its output.</source>
          <target state="translated">스택 역 추적을 생성합니다. 출력에 대한 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fcd96a29aa9d63a86baddb590cd1dbc2c17f264" translate="yes" xml:space="preserve">
          <source>Produce verbose warning diagnostics</source>
          <target state="translated">자세한 경고 진단 생성</target>
        </trans-unit>
        <trans-unit id="885e6634dfdf76b23b3008b70350d732f99c44ca" translate="yes" xml:space="preserve">
          <source>Producers &lt;b&gt;must&lt;/b&gt; represent List elements using a data structure which unambiguously indicates that multiple values are possible, such as a reference to a Perl array (an &quot;arrayref&quot;).</source>
          <target state="translated">생산자 &lt;b&gt;는&lt;/b&gt; Perl 배열에 대한 참조 ( &quot;arrayref&quot;)와 같이 여러 값이 가능함을 명확하게 나타내는 데이터 구조를 사용하여 List 요소를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="a0d69f82309415639ffb57c2ec15ca60dd4c64a0" translate="yes" xml:space="preserve">
          <source>Produces a fatal error if none of the three system calls (or their close equivalent) exists.</source>
          <target state="translated">세 개의 시스템 호출 (또는 이와 동등한 시스템 호출)이 없으면 치명적인 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="960e8fddc698625d55770887235e931f448d8d54" translate="yes" xml:space="preserve">
          <source>Produces:</source>
          <target state="translated">Produces:</target>
        </trans-unit>
        <trans-unit id="57a4526fef0406f35082a88c139fcb71d96c48a2" translate="yes" xml:space="preserve">
          <source>Product of</source>
          <target state="translated">제품</target>
        </trans-unit>
        <trans-unit id="d2c5a65aa3f7da56d70c850969cccfb97654f7df" translate="yes" xml:space="preserve">
          <source>Production release currently maintained by demerphq &lt;code&gt;yves at cpan.org&lt;/code&gt; , extensive changes by Michael G. Schwern.</source>
          <target state="translated">Michael G. Schwern의 광범위한 변경으로 현재 &lt;code&gt;yves at cpan.org&lt;/code&gt; demerphq yves가 생산 릴리스를 유지 관리하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc4981860dba0636a083781c4536c60582c9a676" translate="yes" xml:space="preserve">
          <source>Production release currently maintained by demerphq &lt;code&gt;yves at cpan.org&lt;/code&gt;, extensive changes by Michael G. Schwern.</source>
          <target state="translated">현재 &lt;code&gt;yves at cpan.org&lt;/code&gt; demerphq yves가 관리하는 프로덕션 릴리스 , Michael G. Schwern의 광범위한 변경 사항.</target>
        </trans-unit>
        <trans-unit id="1cefe3ad2f8771b28878e24ac772a9d128c62146" translate="yes" xml:space="preserve">
          <source>Production releases, which incorporate bug fixes and new functionality, are widely tested before release. Since the 5.000 release, we have averaged about one production release per year.</source>
          <target state="translated">버그 수정 및 새로운 기능이 통합 된 프로덕션 릴리스는 릴리스 전에 널리 테스트되었습니다. 5.000 릴리스 이후 매년 평균 약 1 개의 프로덕션 릴리스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d68007b0763cb230f9034ec96f52b39d03ad630" translate="yes" xml:space="preserve">
          <source>Program</source>
          <target state="translated">Program</target>
        </trans-unit>
        <trans-unit id="65ccba4e4ffe9da4f39f93b79f123aa04ad91a10" translate="yes" xml:space="preserve">
          <source>Program execution</source>
          <target state="translated">프로그램 실행</target>
        </trans-unit>
        <trans-unit id="79c8be0b38e38e993898785621a849587d1fc42e" translate="yes" xml:space="preserve">
          <source>Program to be used to link libraries for dynamic loading.</source>
          <target state="translated">동적 로딩을 위해 라이브러리를 연결하는 데 사용되는 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="233673261953f1117d42d3b993fa5631e1d0f562" translate="yes" xml:space="preserve">
          <source>Program to use for output of pager-piped commands (those beginning with a &lt;code&gt;|&lt;/code&gt; character.) By default, &lt;code&gt;$ENV{PAGER}&lt;/code&gt; will be used. Because the debugger uses your current terminal characteristics for bold and underlining, if the chosen pager does not pass escape sequences through unchanged, the output of some debugger commands will not be readable when sent through the pager.</source>
          <target state="translated">pager-piped 명령 ( &lt;code&gt;|&lt;/code&gt; 문자로 시작하는 명령)의 출력에 사용되는 프로그램 기본적으로 &lt;code&gt;$ENV{PAGER}&lt;/code&gt; 이 사용됩니다. 디버거는 현재 터미널 특성을 굵게 표시하고 밑줄로 표시하므로 선택한 페이저가 변경되지 않은 채로 이스케이프 시퀀스를 전달하지 않으면 페이저를 통해 전송 될 때 일부 디버거 명령의 출력을 읽을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="40b1cd2c8806121a043ddcb019b6399f2dbb4760" translate="yes" xml:space="preserve">
          <source>Programmatic interface to the Perl debugging API</source>
          <target state="translated">Perl 디버깅 API에 대한 프로그래밍 인터페이스</target>
        </trans-unit>
        <trans-unit id="c46a33d512eba5fc7b09e8bb4cc095b44ccd9143" translate="yes" xml:space="preserve">
          <source>Programmer-visible &amp;ldquo;characters&amp;rdquo; are codepoints matched by &lt;code&gt;/./s&lt;/code&gt; , but user-visible &amp;ldquo;characters&amp;rdquo; are graphemes matched by &lt;code&gt;/\X/&lt;/code&gt; .</source>
          <target state="translated">프로그래머가 볼 수있는&amp;ldquo;문자&amp;rdquo;는 &lt;code&gt;/./s&lt;/code&gt; 와 일치하는 코드 포인트 이지만 사용자가 볼 수있는&amp;ldquo;문자&amp;rdquo;는 &lt;code&gt;/\X/&lt;/code&gt; 와 일치하는 그래프 입니다.</target>
        </trans-unit>
        <trans-unit id="92c855c41d8c4d8cde9ba75dda5916e3cc905501" translate="yes" xml:space="preserve">
          <source>Programmer-visible &amp;ldquo;characters&amp;rdquo; are codepoints matched by &lt;code&gt;/./s&lt;/code&gt;, but user-visible &amp;ldquo;characters&amp;rdquo; are graphemes matched by &lt;code&gt;/\X/&lt;/code&gt;.</source>
          <target state="translated">프로그래머가 볼 수있는 &quot;문자&quot;는 &lt;code&gt;/./s&lt;/code&gt; 와 일치하는 코드 포인트 이지만 사용자가 볼 수있는 &quot;문자&quot;는 &lt;code&gt;/\X/&lt;/code&gt; 와 일치하는 문자 소 입니다.</target>
        </trans-unit>
        <trans-unit id="61186809fe35fc2beb15a77ffe790f6807eabf80" translate="yes" xml:space="preserve">
          <source>Programmers may also query the contained hash structure to find relevant information.</source>
          <target state="translated">프로그래머는 관련 정보를 찾기 위해 포함 된 해시 구조를 쿼리 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="628a516a46522c1225b06e7fba43671a6cfca7d6" translate="yes" xml:space="preserve">
          <source>Programmers may also query the contained hash structures to find relevant information.</source>
          <target state="translated">프로그래머는 포함 된 해시 구조를 쿼리하여 관련 정보를 찾을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0532c68f18f669ed265f17fe1e4391db0103bc4d" translate="yes" xml:space="preserve">
          <source>Programming Pearls</source>
          <target state="translated">진주 프로그래밍</target>
        </trans-unit>
        <trans-unit id="6697d919aaf0bdf3780f2bf11d8a61971ea23fa6" translate="yes" xml:space="preserve">
          <source>Programming Perl</source>
          <target state="translated">프로그래밍 펄</target>
        </trans-unit>
        <trans-unit id="b48776dde59ef3c5ba05ff183db655823f962577" translate="yes" xml:space="preserve">
          <source>Programming Perl, 3rd ed.</source>
          <target state="translated">프로그래밍 펄, 3 판</target>
        </trans-unit>
        <trans-unit id="801c545dc4e30e8510acc915d178507c634db27c" translate="yes" xml:space="preserve">
          <source>Programming in which the orderly sequence of events can be determined; that is, when things happen one after the other, not at the same time.</source>
          <target state="translated">순차적 인 이벤트 순서를 결정할 수있는 프로그래밍; 즉, 일이 번갈아 가면서 동시에 일어나지 않을 때입니다.</target>
        </trans-unit>
        <trans-unit id="8d94859a90b2088ddd0d1df7f7d0758ae05c5484" translate="yes" xml:space="preserve">
          <source>Programs derived from other sources sometimes have this. Some people keep a modification log here, but that usually gets long and is normally better maintained in a separate file.</source>
          <target state="translated">다른 출처에서 파생 된 프로그램에는 때때로이 프로그램이 있습니다. 일부 사람들은 여기에 수정 로그를 보관하지만 일반적으로 시간이 오래 걸리며 일반적으로 별도의 파일로 유지 관리하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fbc0ca6dae853933487934114343b0d18ee81d17" translate="yes" xml:space="preserve">
          <source>Programs for which the source code is freely available and freely redistributable, with no commercial strings attached. For a more detailed definition, see &lt;a href=&quot;http://www.opensource.org/osd.html&quot;&gt;http://www.opensource.org/osd.html&lt;/a&gt;.</source>
          <target state="translated">상용 코드가 첨부되지 않은 상태에서 소스 코드를 무료로 제공하고 재배포 할 수있는 프로그램. 보다 자세한 정의는 &lt;a href=&quot;http://www.opensource.org/osd.html&quot;&gt;http://www.opensource.org/osd.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6b00476f569a02ca3539accf5ba044f0d65bcb5e" translate="yes" xml:space="preserve">
          <source>Programs should run just as fast in the new character-oriented mode as in the old byte-oriented mode.</source>
          <target state="translated">프로그램은 이전 바이트 지향 모드 에서처럼 새로운 문자 지향 모드에서 빠르게 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="da96c741b8794039905d8a82d4f548d58f61e17f" translate="yes" xml:space="preserve">
          <source>Programs that can't cope with the fold mapping being multiple code points can use the folding contained in the</source>
          <target state="translated">다중 코드 포인트 인 접기 매핑에 대처할 수없는 프로그램은</target>
        </trans-unit>
        <trans-unit id="dd0698680d62bac171c8889a2d9e61a094127933" translate="yes" xml:space="preserve">
          <source>Programs that want complete generality and the best folding results should use the folding contained in the</source>
          <target state="translated">완전한 일반 성과 최상의 폴딩 결과를 원하는 프로그램은</target>
        </trans-unit>
        <trans-unit id="5c889d397b8b1b4b4fd2bed80c486daeff12e71c" translate="yes" xml:space="preserve">
          <source>Prohibiting substitution</source>
          <target state="translated">대체 금지</target>
        </trans-unit>
        <trans-unit id="092032adec6f71582575fab74451d00ac992958a" translate="yes" xml:space="preserve">
          <source>Prohibits RMS from automatically unlocking records.</source>
          <target state="translated">RMS가 자동으로 레코드 잠금을 해제하지 못하도록합니다.</target>
        </trans-unit>
        <trans-unit id="827693d8d728cbc2193334d2e0775350ba6bd3ea" translate="yes" xml:space="preserve">
          <source>Prohibits file sharing.</source>
          <target state="translated">파일 공유를 금지합니다.</target>
        </trans-unit>
        <trans-unit id="9f70a1d8b10f136a2ff15bfca7928b6558a541ba" translate="yes" xml:space="preserve">
          <source>Promote unforeseen warnings to errors with $SIG{__WARN__}.</source>
          <target state="translated">$ SIG {__ WARN__}을 (를) 사용하여 예기치 않은 경고를 오류로 홍보하십시오.</target>
        </trans-unit>
        <trans-unit id="a817d7eb8e0f1dab755ab5203a082e5c3c094fce" translate="yes" xml:space="preserve">
          <source>Prompt</source>
          <target state="translated">Prompt</target>
        </trans-unit>
        <trans-unit id="22769fd93d279795e91086b30dc0c80348555910" translate="yes" xml:space="preserve">
          <source>Proof of concept implementation of a trivial CPAN::Plugin</source>
          <target state="translated">사소한 CPAN :: Plugin의 개념 증명 구현</target>
        </trans-unit>
        <trans-unit id="8cb8e44abb50fda0602cd3141a45b2fa125c05ee" translate="yes" xml:space="preserve">
          <source>PropList.txt</source>
          <target state="translated">PropList.txt</target>
        </trans-unit>
        <trans-unit id="9466ea43fc116acce1e58dfef32cd7abb6fbe461" translate="yes" xml:space="preserve">
          <source>Propagate lvalue (&quot;modifiable&quot;) context to an op and its children.</source>
          <target state="translated">lvalue ( &quot;수정 가능&quot;) 컨텍스트를 op 및 해당 하위에 전파하십시오.</target>
        </trans-unit>
        <trans-unit id="a003a95cd15d0fb372b739a80cbf9e9edaa89694" translate="yes" xml:space="preserve">
          <source>Propagate lvalue (&quot;modifiable&quot;) context to an op and its children. &lt;code&gt;type&lt;/code&gt; represents the context type, roughly based on the type of op that would do the modifying, although &lt;code&gt;local()&lt;/code&gt; is represented by &lt;code&gt;OP_NULL&lt;/code&gt;, because it has no op type of its own (it is signalled by a flag on the lvalue op).</source>
          <target state="translated">lvalue ( &quot;수정 가능&quot;) 컨텍스트를 op와 그 자식에게 전파합니다. &lt;code&gt;type&lt;/code&gt; 은 수정을 수행 할 op의 유형을 대략적으로 기반으로하는 컨텍스트 유형을 나타냅니다.하지만 &lt;code&gt;local()&lt;/code&gt; 은 &lt;code&gt;OP_NULL&lt;/code&gt; 로 표현됩니다 . 왜냐하면 자체 op 유형이 없기 때문입니다 (lvalue op의 플래그로 신호를 받음).</target>
        </trans-unit>
        <trans-unit id="0d39398c5017bcda66f2048ddca98532439f97c8" translate="yes" xml:space="preserve">
          <source>Proper name: &lt;code&gt;CP950&lt;/code&gt;.</source>
          <target state="translated">고유 이름 : &lt;code&gt;CP950&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55e2f982f104ac88fec8053c56589693034a2a84" translate="yes" xml:space="preserve">
          <source>Proper names: &lt;code&gt;CP936&lt;/code&gt;, &lt;code&gt;GBK&lt;/code&gt;.</source>
          <target state="translated">고유 이름 : &lt;code&gt;CP936&lt;/code&gt; , &lt;code&gt;GBK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4011a2e3fcfd2900e4a14153f4386eea5c5c13f1" translate="yes" xml:space="preserve">
          <source>Proper names: &lt;code&gt;CP949&lt;/code&gt;, &lt;code&gt;UHC&lt;/code&gt;, &lt;code&gt;x-windows-949&lt;/code&gt; (as used by Mozilla).</source>
          <target state="translated">고유 이름 : &lt;code&gt;CP949&lt;/code&gt; , &lt;code&gt;UHC&lt;/code&gt; , &lt;code&gt;x-windows-949&lt;/code&gt; (Mozilla에서 사용됨).</target>
        </trans-unit>
        <trans-unit id="a94bb21839cfa15f53f0bc58f4cb5b6025d477f1" translate="yes" xml:space="preserve">
          <source>Properly escaped string.</source>
          <target state="translated">적절하게 이스케이프 된 문자열.</target>
        </trans-unit>
        <trans-unit id="08aad061d33d2aed46e1bd912c462ebf19ab48de" translate="yes" xml:space="preserve">
          <source>Properties accessible through &lt;code&gt;\p{}&lt;/code&gt; and &lt;code&gt;\P{}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\p{}&lt;/code&gt; 및 &lt;code&gt;\P{}&lt;/code&gt; 통해 액세스 할 수있는 속성</target>
        </trans-unit>
        <trans-unit id="30b22d8a6ea2e80a4ede94368e20c898c3306bb2" translate="yes" xml:space="preserve">
          <source>Properties accessible through Unicode::UCD</source>
          <target state="translated">유니 코드 :: UCD를 통해 액세스 할 수있는 속성</target>
        </trans-unit>
        <trans-unit id="563bc53aecfd3c93fb7267899dec8bb951315010" translate="yes" xml:space="preserve">
          <source>Properties accessible through \p{} and \P{}</source>
          <target state="translated">\ p {} 및 \ P {}를 통해 액세스 할 수있는 속성</target>
        </trans-unit>
        <trans-unit id="504cce65493df0bcf454e1c9d203113ab26835b0" translate="yes" xml:space="preserve">
          <source>Properties accessible through other means</source>
          <target state="translated">다른 방법으로 접근 가능한 속성</target>
        </trans-unit>
        <trans-unit id="94ef6c70d8b91d2c96a1d38a6396458a98f59e91" translate="yes" xml:space="preserve">
          <source>Properties marked with an '&lt;b&gt;O&lt;/b&gt;' in the table are considered (plain) obsolete. Generally this designation is given to properties that Unicode once used for internal purposes (but not any longer).</source>
          <target state="translated">테이블에서 ' &lt;b&gt;O&lt;/b&gt; ' 로 표시된 속성 은 (일반) 사용되지 않는 것으로 간주됩니다. 일반적으로이 지정은 유니 코드가 한때 내부 용도로 사용되었던 속성에 부여됩니다 (더 이상은 아님).</target>
        </trans-unit>
        <trans-unit id="5f948ed1aecd13ef6eaaaa7fa03df905621fcdbd" translate="yes" xml:space="preserve">
          <source>Protecting Your Programs</source>
          <target state="translated">프로그램 보호</target>
        </trans-unit>
        <trans-unit id="24131f3e1ac0aa6bf5100678a6bb26c5772ffb37" translate="yes" xml:space="preserve">
          <source>Proto</source>
          <target state="translated">Proto</target>
        </trans-unit>
        <trans-unit id="496f6a705d5364d63ed964b7a34c9d06c9644bfe" translate="yes" xml:space="preserve">
          <source>Proto =&amp;gt; STRING or INT</source>
          <target state="translated">Proto =&amp;gt; STRING 또는 INT</target>
        </trans-unit>
        <trans-unit id="498d5e38147a2aaaadf50f2d1a7ed5f3a11c7285" translate="yes" xml:space="preserve">
          <source>Protocol family constants to use as the first argument to socket() or the value of the &lt;code&gt;SO_DOMAIN&lt;/code&gt; or &lt;code&gt;SO_FAMILY&lt;/code&gt; socket option.</source>
          <target state="translated">socket ()의 첫 번째 인수 또는 &lt;code&gt;SO_DOMAIN&lt;/code&gt; 또는 &lt;code&gt;SO_FAMILY&lt;/code&gt; 소켓 옵션 의 값으로 사용할 프로토콜 패밀리 상수 .</target>
        </trans-unit>
        <trans-unit id="253914d75df52adfa989833296236f4174dc7d45" translate="yes" xml:space="preserve">
          <source>Prototype '%s' overridden by attribute 'prototype(%s)' in %s</source>
          <target state="translated">% s의 'prototype (% s)'속성이 '% s'프로토 타입을 재정의했습니다.</target>
        </trans-unit>
        <trans-unit id="dd6c57bd82cbd151f3ee07a3427f37f600eafd03" translate="yes" xml:space="preserve">
          <source>Prototype after '%c' for %s : %s</source>
          <target state="translated">% s에 대한 '% c'뒤의 프로토 타입 : % s</target>
        </trans-unit>
        <trans-unit id="ded8e79f28baa830c3f275c86a7758d02be9fad4" translate="yes" xml:space="preserve">
          <source>Prototype mismatch: %s vs %s</source>
          <target state="translated">프로토 타입 불일치 : % s 대 % s</target>
        </trans-unit>
        <trans-unit id="6bedae979734135a790d847ebf093d33990200a6" translate="yes" xml:space="preserve">
          <source>Prototype not terminated</source>
          <target state="translated">프로토 타입이 종료되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="7c9552582b5fb5655d3fa8a96940f4486707876d" translate="yes" xml:space="preserve">
          <source>Prototype updates by Ilya Zakharevich &amp;lt;ilya@math.ohio-state.edu&amp;gt;.</source>
          <target state="translated">Ilya Zakharevich &amp;lt;ilya@math.ohio-state.edu&amp;gt;의 프로토 타입 업데이트.</target>
        </trans-unit>
        <trans-unit id="4ae98c95107bca76c978fecb95d46d8d9a2c1e0e" translate="yes" xml:space="preserve">
          <source>Prototypes</source>
          <target state="translated">Prototypes</target>
        </trans-unit>
        <trans-unit id="a5bca78fd1280b75129da9e0607ac0978e22ae46" translate="yes" xml:space="preserve">
          <source>Provide VMS-specific forms of various utility commands.</source>
          <target state="translated">다양한 유틸리티 명령의 VMS 특정 양식을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="11ddfc9be641270abb6bed328d1f4892d055fe05" translate="yes" xml:space="preserve">
          <source>Provide a README file and perhaps also release notes, changelog, etc</source>
          <target state="translated">README 파일을 제공하고 릴리스 노트, 변경 로그 등을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="cef5922c5a5a4b9db6c5dfd4c8bffd2e8efd3aaf" translate="yes" xml:space="preserve">
          <source>Provide a list of filepaths where</source>
          <target state="translated">파일 경로 목록을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="13c79833b637d90171ed134068b1d775c66a45f7" translate="yes" xml:space="preserve">
          <source>Provide a pseudo-class NEXT (et al) that allows method redispatch</source>
          <target state="translated">메소드 재배포를 허용하는 의사 클래스 NEXT (et al)를 제공</target>
        </trans-unit>
        <trans-unit id="b23333f8402781ffb6c1eec41f9f5179914c01f2" translate="yes" xml:space="preserve">
          <source>Provide a stack trace for the old-interface-signals:</source>
          <target state="translated">이전 인터페이스 신호에 대한 스택 추적을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="e4373551d0b44c2890c46fb33fa6da88678677ab" translate="yes" xml:space="preserve">
          <source>Provide a stack trace on the 4 listed signals only:</source>
          <target state="translated">나열된 4 가지 신호에만 스택 추적을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="357951aef843b1c6ebb4a03fcd5f58952a57901c" translate="yes" xml:space="preserve">
          <source>Provide additional options to the harness. Currently supported options are:</source>
          <target state="translated">하네스에 추가 옵션을 제공하십시오. 현재 지원되는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dff17765e8d771354eb6000dda040cf39e225e0f" translate="yes" xml:space="preserve">
          <source>Provide framework for multiple DBMs</source>
          <target state="translated">여러 DBM을위한 프레임 워크 제공</target>
        </trans-unit>
        <trans-unit id="f8c6e601144e3f379c359886764519b0dd7488d6" translate="yes" xml:space="preserve">
          <source>Provide hints about user subroutines to autodie</source>
          <target state="translated">autodie에 사용자 서브 루틴에 대한 힌트 제공</target>
        </trans-unit>
        <trans-unit id="8f110f401a8df37e9a6b17075fa908b1c5b601a1" translate="yes" xml:space="preserve">
          <source>Provide informative &quot;file&quot; names for evals based on the place they were compiled.</source>
          <target state="translated">에바가 컴파일 된 장소를 기준으로 유익한 &quot;파일&quot;이름을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="dbcb5bf8bde0c5a5e1b5a3735270b6e1558501e0" translate="yes" xml:space="preserve">
          <source>Provide informative names to anonymous subroutines based on the place they were compiled.</source>
          <target state="translated">익명 서브 루틴에 컴파일 된 위치에 따라 정보 이름을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="eeebb27b46f7caa000dd180f46a3476997c63605" translate="yes" xml:space="preserve">
          <source>Provide links to further information (URL, email)</source>
          <target state="translated">추가 정보에 대한 링크 제공 (URL, 이메일)</target>
        </trans-unit>
        <trans-unit id="6422adf396aa4c7b377814327c5fa3233c9af0ae" translate="yes" xml:space="preserve">
          <source>Provide sensible defaults for parameters which have them. Don't make your users specify parameters which will almost always be the same.</source>
          <target state="translated">매개 변수가있는 적절한 기본값을 제공하십시오. 사용자가 거의 항상 같은 매개 변수를 지정하지 않도록하십시오.</target>
        </trans-unit>
        <trans-unit id="06d75d0602f241e3ca79aae00646e5f7c9be5fb1" translate="yes" xml:space="preserve">
          <source>Provide sensible shortcuts and defaults.</source>
          <target state="translated">합리적인 바로 가기와 기본값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b8f300abee44af01ef8396951c514b4d2e5dbfe3" translate="yes" xml:space="preserve">
          <source>Provided Perl compatibility API</source>
          <target state="translated">Perl 호환성 API 제공</target>
        </trans-unit>
        <trans-unit id="80413ae92acc6cd45fee5d6371ac186487848ced" translate="yes" xml:space="preserve">
          <source>Provided largely for legacy compatibility; it is better to use pack_sockaddr_in() or unpack_sockaddr_in() explicitly.</source>
          <target state="translated">레거시 호환성을 위해 주로 제공됩니다. pack_sockaddr_in () 또는 unpack_sockaddr_in ()을 명시 적으로 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="28474537dd9ef095e20f7aba4d9cb81d5a75457e" translate="yes" xml:space="preserve">
          <source>Provided largely for legacy compatibility; it is better to use pack_sockaddr_in6() or unpack_sockaddr_in6() explicitly.</source>
          <target state="translated">레거시 호환성을 위해 주로 제공됩니다. pack_sockaddr_in6 () 또는 unpack_sockaddr_in6 ()을 명시 적으로 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a36d81826ac81063ca4463eca25402a6693e2b57" translate="yes" xml:space="preserve">
          <source>Provided largely for legacy compatibility; it is better to use pack_sockaddr_un() or unpack_sockaddr_un() explicitly.</source>
          <target state="translated">레거시 호환성을 위해 주로 제공됩니다. pack_sockaddr_un () 또는 unpack_sockaddr_un ()을 명시 적으로 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fa78e658e64b448bedadd11512ada22bdc0e284b" translate="yes" xml:space="preserve">
          <source>Provided to allow layers to be implemented as Perl code. For instance:</source>
          <target state="translated">계층을 Perl 코드로 구현할 수 있도록 제공됩니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="15bdc25568e36d006e240cf708f9dce3924f6040" translate="yes" xml:space="preserve">
          <source>Provided your C compiler supports a 64-bit type (e.g. the</source>
          <target state="translated">C 컴파일러가 64 비트 유형 (예 :</target>
        </trans-unit>
        <trans-unit id="2b11a762a21c8fca08fe84cc3ba7706515215ff7" translate="yes" xml:space="preserve">
          <source>Provided your perl binary was properly configured and installed the &lt;b&gt;ExtUtils::Embed&lt;/b&gt; module will determine all of this information for you:</source>
          <target state="translated">Perl 바이너리가 올바르게 구성되고 설치 &lt;b&gt;되었다면 ExtUtils :: Embed&lt;/b&gt; 모듈이이 모든 정보를 결정합니다 :</target>
        </trans-unit>
        <trans-unit id="43176f4bfabbe7f02a17cd0d4664579bfd692555" translate="yes" xml:space="preserve">
          <source>Provides a reference to the arguments passed to the subroutine that died.</source>
          <target state="translated">사망 한 서브 루틴에 전달 된 인수에 대한 참조를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6aee749769ccf0e73f6beb56206ed3f3745da69e" translate="yes" xml:space="preserve">
          <source>Provides a simple framework for writing test scripts</source>
          <target state="translated">테스트 스크립트 작성을위한 간단한 프레임 워크 제공</target>
        </trans-unit>
        <trans-unit id="88cd665ef61e5f37b953f8e99c4f4c7c9c545e56" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the input file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">입력 파일 / 버퍼에서 탐색하는 것이 합법적이라는 제한과 함께 &lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 기능 의 하위 세트를 제공합니다 . 뒤로 탐색하는 것은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="4380abd5e4f9b57c3d1c735d510c8da067ef3b73" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the output file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">출력 파일 / 버퍼에서 탐색하는 것이 합법적이라는 제한과 함께 &lt;code&gt;&lt;a href=&quot;../../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 기능 의 하위 세트를 제공합니다 . 뒤로 탐색하는 것은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="043ad5ef72622e45c304f2c63f38a03738205bb4" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;&lt;a href=&quot;../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the compressed file. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">압축 파일에서 탐색하는 것이 합법적이라는 제한과 함께 &lt;code&gt;&lt;a href=&quot;../functions/seek&quot;&gt;seek&lt;/a&gt;&lt;/code&gt; 기능 의 하위 세트를 제공합니다 . 뒤로 탐색하는 것은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="392333bc8f87488b1b0ddb618d79d06200004971" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;seek&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the compressed file. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">압축 파일에서 앞으로 탐색하는 것이 합법적이라는 제한과 함께 &lt;code&gt;seek&lt;/code&gt; 기능 의 하위 집합을 제공합니다 . 뒤로 탐색을 시도하는 것은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="599b7719c02f333830dfad544a492b23d339f290" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;seek&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the input file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">입력 파일 / 버퍼에서 앞으로 검색하는 것이 합법적이라는 제한과 함께 &lt;code&gt;seek&lt;/code&gt; 기능 의 하위 집합을 제공합니다 . 뒤로 탐색을 시도하는 것은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="484dd5b2194450a2eff7f7b45534ca222b43a846" translate="yes" xml:space="preserve">
          <source>Provides a sub-set of the &lt;code&gt;seek&lt;/code&gt; functionality, with the restriction that it is only legal to seek forward in the output file/buffer. It is a fatal error to attempt to seek backward.</source>
          <target state="translated">출력 파일 / 버퍼에서 앞으로 검색하는 것이 합법적이라는 제한과 함께 &lt;code&gt;seek&lt;/code&gt; 기능 의 하위 집합을 제공합니다 . 뒤로 탐색을 시도하는 것은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="7dd4c64d07073a45696ea9342f023290999ed811" translate="yes" xml:space="preserve">
          <source>Provides a visual display of the standard variant sequences derived from</source>
          <target state="translated">다음에서 파생 된 표준 변형 시퀀스를 시각적으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c52a45815f69df31bfe7c57d00e96b5e68e005cc" translate="yes" xml:space="preserve">
          <source>Provides screen dump of Perl data.</source>
          <target state="translated">Perl 데이터의 화면 덤프를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="55a42150c8af24b218fa91775b2b36f6e7ad1ac5" translate="yes" xml:space="preserve">
          <source>Provides support for big integer calculations. Not intended to be used by other modules. Other modules which sport the same functions can also be used to support Math::BigInt, like &lt;a href=&quot;Math::BigInt::GMP&quot;&gt;Math::BigInt::GMP&lt;/a&gt; or &lt;a href=&quot;Math::BigInt::Pari&quot;&gt;Math::BigInt::Pari&lt;/a&gt;.</source>
          <target state="translated">큰 정수 계산을 지원합니다. 다른 모듈에서 사용할 수 없습니다. 동일한 기능을 자랑하는 다른 모듈도 &lt;a href=&quot;Math::BigInt::GMP&quot;&gt;Math :: BigInt :: GMP&lt;/a&gt; 또는 &lt;a href=&quot;Math::BigInt::Pari&quot;&gt;Math :: BigInt :: Pari&lt;/a&gt; 와 같이 Math :: BigInt 를 지원하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a3777f0013122f0c4a4655ba003bcc967ea9bd1b" translate="yes" xml:space="preserve">
          <source>Provides support for big integer calculations. Not intended to be used by other modules. Other modules which sport the same functions can also be used to support Math::BigInt, like &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::GMP&quot;&gt;Math::BigInt::GMP&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Pari&quot;&gt;Math::BigInt::Pari&lt;/a&gt;.</source>
          <target state="translated">큰 정수 계산을 지원합니다. 다른 모듈에서는 사용하지 마십시오. &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::GMP&quot;&gt;Math :: BigInt :: GMP&lt;/a&gt; 또는 &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Pari&quot;&gt;Math :: BigInt :: Pari&lt;/a&gt; 와 같이 Math :: BigInt 를 지원하는 데 동일한 기능을 사용하는 다른 모듈을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10d70d52199eba6651636a68b4318d214564b47d" translate="yes" xml:space="preserve">
          <source>Provides support for reading data from and writing data to a scalar.</source>
          <target state="translated">스칼라에서 데이터를 읽고 스칼라에 데이터를 쓰는 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="35d3d844e1643f59d23a9592a79adf75a0687a37" translate="yes" xml:space="preserve">
          <source>Provides system-specific clean up of the C runtime environment after running Perl interpreters. This should be called only once, after freeing any remaining Perl interpreters.</source>
          <target state="translated">Perl 인터프리터를 실행 한 후 C 런타임 환경의 시스템 별 정리를 제공합니다. 나머지 Perl 인터프리터를 해제 한 후 한 번만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c08e94d1f190f7ace300b8f19617a3c5d31718f" translate="yes" xml:space="preserve">
          <source>Provides system-specific tune up of the C runtime environment necessary to run Perl interpreters. This should be called only once, before creating any Perl interpreters.</source>
          <target state="translated">Perl 인터프리터를 실행하는 데 필요한 C 런타임 환경의 시스템 별 조정을 제공합니다. Perl 인터프리터를 작성하기 전에 한 번만 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="621a00134095fc7f69dd6022503e0657d531ae39" translate="yes" xml:space="preserve">
          <source>Providing the appearance of something without the reality, as in: virtual memory is not real memory. (See also &lt;b&gt;memory&lt;/b&gt;.) The opposite of &amp;ldquo;virtual&amp;rdquo; is &amp;ldquo;transparent&amp;rdquo;, which means providing the reality of something without the appearance, as in: Perl handles the variable-length UTF‑8 character encoding transparently.</source>
          <target state="translated">가상 메모리는 실제 메모리가 아닙니다. (참고 &lt;b&gt;메모리&lt;/b&gt; 펄 투명 코딩하는 가변 길이 UTF-8 문자 처리합니다.) &quot;가상&quot;의 대향하는 같이 외관 않고 일의 실체를 제공하는 즉, &quot;투명&quot;이다.</target>
        </trans-unit>
        <trans-unit id="e29e8eedc748840bd27ace9f3607818fa75df015" translate="yes" xml:space="preserve">
          <source>Provisional</source>
          <target state="translated">Provisional</target>
        </trans-unit>
        <trans-unit id="bc57f5706c94c8332625d86e374b5ec8162923ac" translate="yes" xml:space="preserve">
          <source>Provisional; for the analysis and processing of Indic scripts</source>
          <target state="translated">임시; 인도어 스크립트 분석 및 처리</target>
        </trans-unit>
        <trans-unit id="c05ec95ae79e3cee68dd82f36148a233fc74d0cd" translate="yes" xml:space="preserve">
          <source>Proxy arguments passed to &lt;code&gt;new&lt;/code&gt; will override their corresponding environment variables.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 에 전달 된 프록시 인수는 해당 환경 변수를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="e08767fd1764632990c98ee793a2eb53548be64a" translate="yes" xml:space="preserve">
          <source>Pseudo-hashes</source>
          <target state="translated">Pseudo-hashes</target>
        </trans-unit>
        <trans-unit id="5b10b4e8c62202591bb27bc4c07957f535a6a8c5" translate="yes" xml:space="preserve">
          <source>Pseudo-hashes have been removed from Perl. The 'fields' pragma remains available.</source>
          <target state="translated">의사 해시가 Perl에서 제거되었습니다. '필드'프라그 마는 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3044e0ef5b4b41d6c53eefa4f2f2b746e10e10f9" translate="yes" xml:space="preserve">
          <source>Pseudo-hashes: Using an array as a hash</source>
          <target state="translated">의사 해시 : 배열을 해시로 사용</target>
        </trans-unit>
        <trans-unit id="198c1da4939c16e294e3157fd95470bb099c4e6a" translate="yes" xml:space="preserve">
          <source>Pseudo-layer that declares that the stream accepts Perl's</source>
          <target state="translated">스트림이 Perl을 허용 함을 선언하는 의사 계층</target>
        </trans-unit>
        <trans-unit id="bc550b2f7a34ff5e6976a425dc29a862aa93c5f1" translate="yes" xml:space="preserve">
          <source>Pstruct takes any .c or .h files, or preferably .s ones, since that's the format it is going to massage them into anyway, and spits out listings like this:</source>
          <target state="translated">Pstruct는 .c 또는 .h 파일 또는 바람직하게는 .s 파일을 가져옵니다.이 형식은 어쨌든 파일을 마사지하고 다음과 같이 목록을 뱉어냅니다.</target>
        </trans-unit>
        <trans-unit id="297bc9763378ddef289f2b0d755586fb4440c94e" translate="yes" xml:space="preserve">
          <source>Pstruct was not a pretty program. Neither was it particularly robust. The problem, you see, was that the C compiler was much better at parsing C than I could ever hope to be.</source>
          <target state="translated">Pstruct는 예쁘지 않은 프로그램이었습니다. 특히 강력하지도 않았습니다. 문제는 C 컴파일러가 내가 기대했던 것보다 C를 파싱하는 것이 훨씬 낫다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c53eebf11a10d6cf8de1f1717ec349118f7310f1" translate="yes" xml:space="preserve">
          <source>Pthread internal error: message: __libc_reinit() failed, file: ../pthreads/pthread.c, line: 1096 Return Pointer is 0xc082bf33 sh: 5345 Quit(coredump)</source>
          <target state="translated">Pthread 내부 오류 : 메시지 : __libc_reinit () 실패, 파일 : ../pthreads/pthread.c, 줄 : 1096 반환 포인터는 0xc082bf33 sh : 5345 Quit (coredump)</target>
        </trans-unit>
        <trans-unit id="53dcafca6631189dc3e2037e20a1d47928d99eba" translate="yes" xml:space="preserve">
          <source>Pthreads</source>
          <target state="translated">Pthreads</target>
        </trans-unit>
        <trans-unit id="83fd9d90135feee7f6a996aca0791b4d44033ddd" translate="yes" xml:space="preserve">
          <source>Public Functions</source>
          <target state="translated">공공 기능</target>
        </trans-unit>
        <trans-unit id="400be4997716cf3bb5a0c05bf961e2a62c95f6c8" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
          <target state="translated">공개 방법</target>
        </trans-unit>
        <trans-unit id="6c3aa2b9e37ccd79b46e58ea5b46718457c77761" translate="yes" xml:space="preserve">
          <source>Public Review Issue #29: Normalization Issue</source>
          <target state="translated">공개 검토 문제 # 29 : 정규화 문제</target>
        </trans-unit>
        <trans-unit id="8d618bb63d8316f9a89333b5c763467803474bba" translate="yes" xml:space="preserve">
          <source>Pugs</source>
          <target state="translated">Pugs</target>
        </trans-unit>
        <trans-unit id="6b7708a2c18bac2fbd6cc3c66f601d8fce94c123" translate="yes" xml:space="preserve">
          <source>Pure Perl (that is non XS) modules may be installed via the usual:</source>
          <target state="translated">Pure Perl (XS가 아닌) 모듈은 일반적인 방법으로 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e95b650ab6696c2fae8a07318611a14e120c748e" translate="yes" xml:space="preserve">
          <source>Pure Perl module to support Math::BigInt</source>
          <target state="translated">Math :: BigInt를 지원하는 Pure Perl 모듈</target>
        </trans-unit>
        <trans-unit id="6bedf193383dd829c1a7e1f3c25ac475a95dbc9b" translate="yes" xml:space="preserve">
          <source>Pure Perl version of &lt;code&gt;Data::Dumper&lt;/code&gt; escapes UTF-8 strings correctly only in Perl 5.8.0 and later.</source>
          <target state="translated">&lt;code&gt;Data::Dumper&lt;/code&gt; 의 Pure Perl 버전은 Perl 5.8.0 이상에서만 UTF-8 문자열을 올바르게 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="fb4b5bba5c487f415ed0f1e943d54e4cec7304aa" translate="yes" xml:space="preserve">
          <source>Pure pure (that is non xs) modules may be installed via the usual:</source>
          <target state="translated">순수한 순수 (즉, xs가 아닌) 모듈은 다음을 통해 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de3bd83a8b87c6fcf37efea53d47a13ade370276" translate="yes" xml:space="preserve">
          <source>Purify</source>
          <target state="translated">Purify</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="1adbca3a8c94f365ba3311017ca9fb85bf4ec06c" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHn&lt;/code&gt; , &lt;code&gt;mPUSHn&lt;/code&gt; and &lt;code&gt;PUSHn&lt;/code&gt; .</source>
          <target state="translated">스택에 이중을 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHn&lt;/code&gt; , &lt;code&gt;mPUSHn&lt;/code&gt; 및 &lt;code&gt;PUSHn&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9314222493ba4a16c9a765159c8c302f3a82085" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 더블을 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c66f0f44c90e343c00fbe4997ddc560482746d7f" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHn&lt;/code&gt; instead. See also &lt;code&gt;PUSHn&lt;/code&gt; and &lt;code&gt;mPUSHn&lt;/code&gt; .</source>
          <target state="translated">스택에 이중을 밀어 넣고 필요한 경우 스택을 확장합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mXPUSHn&lt;/code&gt; 을 참조하십시오 . &lt;code&gt;PUSHn&lt;/code&gt; 및 &lt;code&gt;mPUSHn&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86d98b4c2e697d3215a4a3c30fb29676c88c9d06" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 더블을 밀어 넣고 필요한 경우 스택을 확장합니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB의 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70310d23516f418652dd8578becd2ec048a6f62f" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHn&lt;/code&gt; , &lt;code&gt;mXPUSHn&lt;/code&gt; and &lt;code&gt;XPUSHn&lt;/code&gt; .</source>
          <target state="translated">스택에 이중을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHn&lt;/code&gt; , &lt;code&gt;mXPUSHn&lt;/code&gt; 및 &lt;code&gt;XPUSHn&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="13eb8067bc430ef1f6450210346f8290bf626a99" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 더블을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#PUSHn&quot;&gt;&quot;PUSHn&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a09819d533d2a6cde93684c673c40239b2327313" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHn&lt;/code&gt; instead. See also &lt;code&gt;XPUSHn&lt;/code&gt; and &lt;code&gt;mXPUSHn&lt;/code&gt; .</source>
          <target state="translated">스택에 이중을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mPUSHn&lt;/code&gt; 을 참조하십시오 . &lt;code&gt;XPUSHn&lt;/code&gt; 및 &lt;code&gt;mXPUSHn&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8b9e76ce61793d156b2a957cbccb829619da4ec" translate="yes" xml:space="preserve">
          <source>Push a double onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 더블을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB의 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mPUSHn&quot;&gt;&quot;mPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#XPUSHn&quot;&gt;&quot;XPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mXPUSHn&quot;&gt;&quot;mXPUSHn&quot;&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="37fbc41e170c8928cc728474cf6c2366e3a91513" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHs&lt;/code&gt; , &lt;code&gt;PUSHmortal&lt;/code&gt; and &lt;code&gt;PUSHs&lt;/code&gt; .</source>
          <target state="translated">새로운 필사 SV를 스택에 밀어 넣고 필요한 경우 스택을 확장하십시오. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHs&lt;/code&gt; , &lt;code&gt;PUSHmortal&lt;/code&gt; 및 &lt;code&gt;PUSHs&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c27707abd51fc24e5c7f61cf5bc748e172271012" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">새 필멸 자 SV를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="050fa706767d321890b953c04c19df5b05aa9b43" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHs&lt;/code&gt; , &lt;code&gt;XPUSHmortal&lt;/code&gt; and &lt;code&gt;XPUSHs&lt;/code&gt; .</source>
          <target state="translated">새로운 필사 SV를 스택에 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHs&lt;/code&gt; , &lt;code&gt;XPUSHmortal&lt;/code&gt; 및 &lt;code&gt;XPUSHs&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="932347acb8f438d233a9c9d7507e2856754d5d0c" translate="yes" xml:space="preserve">
          <source>Push a new mortal SV onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">새로운 필멸 자 SV를 스택에 밀어 넣으십시오. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2953f995a93499d907bfdf7f890c3bf8f395f3c2" translate="yes" xml:space="preserve">
          <source>Push a new pad frame onto the padlist, unless there's already a pad at this depth, in which case don't bother creating a new one. Then give the new pad an &lt;code&gt;@_&lt;/code&gt; in slot zero.</source>
          <target state="translated">이 깊이에 이미 패드가 없으면 새 패드 프레임을 패드 목록에 밀어 넣습니다.이 경우 새 패드를 만들지 마십시오. 그런 다음 새 패드 에 슬롯 0 의 &lt;code&gt;@_&lt;/code&gt; 를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ffd0047000871af3772812f84a32456a428054a8" translate="yes" xml:space="preserve">
          <source>Push a new pad frame onto the padlist, unless there's already a pad at this depth, in which case don't bother creating a new one. Then give the new pad an @_ in slot zero.</source>
          <target state="translated">이 깊이에 이미 패드가 없으면 새 패드 프레임을 패드 목록에 밀어 넣습니다.이 경우 새 패드 프레임을 만들지 않아도됩니다. 그런 다음 새 패드에 슬롯 0의 @_을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ba2a34165de5563eaeb2cd603b049d4c74e59fde" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHp&lt;/code&gt; , &lt;code&gt;mPUSHp&lt;/code&gt; and &lt;code&gt;PUSHp&lt;/code&gt; .</source>
          <target state="translated">스택에 끈을 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHp&lt;/code&gt; , &lt;code&gt;mPUSHp&lt;/code&gt; 및 &lt;code&gt;PUSHp&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ca881fd61bd0714a8e4bc9717e20bf806141abb" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;mPUSHp&lt;/code&gt; and &lt;code&gt;PUSHp&lt;/code&gt;.</source>
          <target state="translated">스택에 문자열을 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;mPUSHp&lt;/code&gt; 및 &lt;code&gt;PUSHp&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b05cc48550c5f11f3753078b47d3c48fd30b5aa4" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHp&lt;/code&gt; instead. See also &lt;code&gt;PUSHp&lt;/code&gt; and &lt;code&gt;mPUSHp&lt;/code&gt; .</source>
          <target state="translated">스택에 끈을 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. '설정된'마법을 처리합니다. 용도 &lt;code&gt;TARG&lt;/code&gt; 를 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mXPUSHp&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;PUSHp&lt;/code&gt; 및 &lt;code&gt;mPUSHp&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f00b44fb196df3bd77f1eaa3af8fcbd1642b1d78" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack, extending the stack if necessary. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 문자열을 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB의 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="69992c35cddb150767687fecee3a99bf322b8aa1" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHp&lt;/code&gt; , &lt;code&gt;mXPUSHp&lt;/code&gt; and &lt;code&gt;XPUSHp&lt;/code&gt; .</source>
          <target state="translated">더미에 끈을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHp&lt;/code&gt; , &lt;code&gt;mXPUSHp&lt;/code&gt; 및 &lt;code&gt;XPUSHp&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="92f39638c69e1252827e5ee000eb322e71c3099b" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 문자열을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#PUSHp&quot;&gt;&quot;PUSHp&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9a911ea70d9342831bb5853b21493e821263e9f" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHp&lt;/code&gt; instead. See also &lt;code&gt;XPUSHp&lt;/code&gt; and &lt;code&gt;mXPUSHp&lt;/code&gt; .</source>
          <target state="translated">더미에 끈을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mPUSHp&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;XPUSHp&lt;/code&gt; 및 &lt;code&gt;mXPUSHp&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e7713307ab92ab800987ead343a488df73e81b1" translate="yes" xml:space="preserve">
          <source>Push a string onto the stack. The stack must have room for this element. The &lt;code&gt;len&lt;/code&gt; indicates the length of the string. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 문자열을 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;len&lt;/code&gt; 문자열의 길이를 나타냅니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB에서 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mPUSHp&quot;&gt;&quot;mPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#XPUSHp&quot;&gt;&quot;XPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mXPUSHp&quot;&gt;&quot;mXPUSHp&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd4f487a995fc117ee3f859541e8cb6d7b1f0e03" translate="yes" xml:space="preserve">
          <source>Push an SV onto the end of the array, creating the array if necessary. A small internal helper function to remove a commonly duplicated idiom.</source>
          <target state="translated">필요한 경우 SV를 어레이의 끝으로 밀어서 어레이를 만듭니다. 자주 복제되는 관용구를 제거하는 작은 내부 도우미 기능입니다.</target>
        </trans-unit>
        <trans-unit id="b343c728ee2d1e80e5d3bfd57c4ca6151b8a3b56" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack and mortalizes the SV. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;mXPUSHs&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣고 SV를 치명적으로 만듭니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHs&lt;/code&gt; 및 &lt;code&gt;mXPUSHs&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fa9dedfee4109c0fe13da67a46fccbb5bbf5a44" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack and mortalizes the SV. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHs&quot;&gt;&quot;mXPUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">SV를 스택에 밀어 넣고 SV를 죽입니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;&lt;a href=&quot;#PUSHs&quot;&gt;&quot;PUSHs&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mXPUSHs&quot;&gt;&quot;mXPUSHs&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5312b573b0539c30e0048cb9b278d19e1907b13" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary and mortalizes the SV. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHs&lt;/code&gt; and &lt;code&gt;mPUSHs&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣고 필요한 경우 스택을 확장하고 SV를 치명적으로 만듭니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHs&lt;/code&gt; 및 &lt;code&gt;mPUSHs&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9d98d6f5e72c3e38da580674d51b78f71fb6e96" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary and mortalizes the SV. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHs&quot;&gt;&quot;mPUSHs&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">SV를 스택에 밀어 넣고 필요한 경우 스택을 확장하고 SV를 필사 화합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mPUSHs&quot;&gt;&quot;mPUSHs&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3bca75cd1625b95babebf1b4bb8d0ca93544cbe6" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHmortal&lt;/code&gt; , &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;PUSHmortal&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. '세트'마법을 처리하지 않습니다. 사용하지 않습니다 &lt;code&gt;TARG&lt;/code&gt; 를 . &lt;code&gt;XPUSHmortal&lt;/code&gt; , &lt;code&gt;PUSHs&lt;/code&gt; 및 &lt;code&gt;PUSHmortal&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8df3552fedfaff71e845be14cd4597f13e28e228" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;PUSHmortal&lt;/code&gt;.</source>
          <target state="translated">SV를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;PUSHs&lt;/code&gt; 및 &lt;code&gt;PUSHmortal&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="824e75a21802eb656ab26e370eb8bc67c5ffb828" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack. The stack must have room for this element. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHmortal&lt;/code&gt; , &lt;code&gt;XPUSHs&lt;/code&gt; and &lt;code&gt;XPUSHmortal&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '세트'마법을 처리하지 않습니다. 사용하지 않습니다 &lt;code&gt;TARG&lt;/code&gt; 를 . &lt;code&gt;PUSHmortal&lt;/code&gt; , &lt;code&gt;XPUSHs&lt;/code&gt; 및 &lt;code&gt;XPUSHmortal&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68e32f508b1271a09ce248b9becfc719b6903e41" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack. The stack must have room for this element. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">SV를 스택으로 푸시합니다. 스택에는이 요소를위한 공간이 있어야합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#PUSHmortal&quot;&gt;&quot;PUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#XPUSHs&quot;&gt;&quot;XPUSHs&quot;&lt;/a&gt;&lt;/code&gt; , 및 &lt;code&gt;&lt;a href=&quot;#XPUSHmortal&quot;&gt;&quot;XPUSHmortal&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6dc36faa3e9d71d279164e8a1bebbda0173b52" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHi&lt;/code&gt; , &lt;code&gt;mPUSHi&lt;/code&gt; and &lt;code&gt;PUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 밀어 넣고 필요한 경우 스택을 확장하십시오. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHi&lt;/code&gt; , &lt;code&gt;mPUSHi&lt;/code&gt; 및 &lt;code&gt;PUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee2de45c0d60a3dcbcd7f2217bc8d834a4f761ec" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 정수를 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88647ad486844ab79cd57c5f883ba3b63d0d33c3" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHi&lt;/code&gt; instead. See also &lt;code&gt;PUSHi&lt;/code&gt; and &lt;code&gt;mPUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 밀어 넣고 필요한 경우 스택을 확장하십시오. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mXPUSHi&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;PUSHi&lt;/code&gt; 및 &lt;code&gt;mPUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="028c89385d919aa5d9c6b5ba4004e9161dc1e187" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 정수를 밀어 넣고 필요한 경우 스택을 확장합니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB의 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68712d908f28865c0c0fdea7d6b33cd088c74252" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHi&lt;/code&gt; , &lt;code&gt;mXPUSHi&lt;/code&gt; and &lt;code&gt;XPUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHi&lt;/code&gt; , &lt;code&gt;mXPUSHi&lt;/code&gt; 및 &lt;code&gt;XPUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="efce1d4478ed0bd263a24037f69f98de885bcd71" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 정수를 푸시합니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#PUSHi&quot;&gt;&quot;PUSHi&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fa57788c5592676cc0034ebc6edf40f41590038" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHi&lt;/code&gt; instead. See also &lt;code&gt;XPUSHi&lt;/code&gt; and &lt;code&gt;mXPUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. 여러 &lt;code&gt;TARG&lt;/code&gt; 를 호출하지 마십시오XSUB에서 목록을 리턴하기 위해 지향 매크로를 . 대신 &lt;code&gt;mPUSHi&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;XPUSHi&lt;/code&gt; 및 &lt;code&gt;mXPUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86fe36ad36fc20d571ada042d4b2ceb0e025d8a3" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스택에 정수를 푸시합니다. 스택에는이 요소를위한 공간이 있어야합니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB의 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mPUSHi&quot;&gt;&quot;mPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#XPUSHi&quot;&gt;&quot;XPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mXPUSHi&quot;&gt;&quot;mXPUSHi&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8504827aba00612364edada9d7d5d6f00e686e9f" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHu&lt;/code&gt; , &lt;code&gt;mPUSHu&lt;/code&gt; and &lt;code&gt;PUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 또한보십시오 &lt;code&gt;XPUSHu&lt;/code&gt; , &lt;code&gt;mPUSHu&lt;/code&gt; 및 &lt;code&gt;PUSHu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c17ad066eabe1660a0c3c80bf0619e347847f43" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">부호없는 정수를 스택에 푸시하고 필요한 경우 스택을 확장합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a877c4f095d8e369d65c6c9f26769538191ceb6a" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHu&lt;/code&gt; instead. See also &lt;code&gt;PUSHu&lt;/code&gt; and &lt;code&gt;mPUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오. &lt;code&gt;mXPUSHu&lt;/code&gt; . 대신 mXPUSHu 를 . &lt;code&gt;PUSHu&lt;/code&gt; 및 &lt;code&gt;mPUSHu&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a366ba0226f782f8d8282435ae88bd7e4329d343" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">부호없는 정수를 스택에 푸시하고 필요한 경우 스택을 확장합니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB의 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f5198e2166eb928f9d3653b92f6feb785e942a5" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHu&lt;/code&gt; , &lt;code&gt;mXPUSHu&lt;/code&gt; and &lt;code&gt;XPUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 또한보십시오 &lt;code&gt;PUSHu&lt;/code&gt; , &lt;code&gt;mXPUSHu&lt;/code&gt; 및 &lt;code&gt;XPUSHu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67569748c98646cd1f2f796f378ca27e418dfd2a" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">부호없는 정수를 스택에 푸시합니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . 참조 &lt;code&gt;&lt;a href=&quot;#PUSHu&quot;&gt;&quot;PUSHu&quot;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="613f8f689dc3e62438ff571be557fb9cb05e44a4" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHu&lt;/code&gt; instead. See also &lt;code&gt;XPUSHu&lt;/code&gt; and &lt;code&gt;mXPUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오. &lt;code&gt;mPUSHu&lt;/code&gt; . 대신 mPUSHu 를 . &lt;code&gt;XPUSHu&lt;/code&gt; 및 &lt;code&gt;mXPUSHu&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="840fc79e52b20ca79d4ce924afd0b464d8e96739" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt;, so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt;-oriented macros to return lists from XSUB's - see &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; instead. See also &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">부호없는 정수를 스택에 푸시합니다. 스택에는이 요소를위한 공간이 있어야합니다. '세트'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출하여 선언해야합니다. XSUB의 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;&lt;a href=&quot;#mPUSHu&quot;&gt;&quot;mPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;#XPUSHu&quot;&gt;&quot;XPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#mXPUSHu&quot;&gt;&quot;mXPUSHu&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18581b2c0e575f64a8c4dfe4233bd04ffb3c85d9" translate="yes" xml:space="preserve">
          <source>Push the current state of the stack pointer onto the mark stack. This is so that when we've finished adding items to the argument stack, Perl knows how many things we've added recently.</source>
          <target state="translated">스택 포인터의 현재 상태를 마크 스택으로 밉니다. 이를 통해 인수 스택에 항목을 추가하면 Perl이 최근에 추가 한 항목 수를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="642207a364dc0ed935815a73a54aa952388d41cd" translate="yes" xml:space="preserve">
          <source>Pushed</source>
          <target state="translated">Pushed</target>
        </trans-unit>
        <trans-unit id="fd9eb04bba7369fac67bb272487aea83de30e396" translate="yes" xml:space="preserve">
          <source>Pushes a character with the given ordinal value back onto the given handle's input stream. Only one character of pushback per handle is guaranteed.</source>
          <target state="translated">주어진 서수 값을 가진 문자를 주어진 핸들의 입력 스트림으로 다시 푸시합니다. 핸들 당 하나의 푸시 백 문자 만 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="aa21e617b01e41036064c4a671ebb9cb150a2b67" translate="yes" xml:space="preserve">
          <source>Pushes an SV (transferring control of one reference count) onto the end of the array. The array will grow automatically to accommodate the addition.</source>
          <target state="translated">SV (한 참조 카운트의 제어 전송)를 어레이의 끝에 푸시합니다. 어레이는 추가를 수용하기 위해 자동으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="a106600342c596f57fb0e1a9b6c18c52f7dcd966" translate="yes" xml:space="preserve">
          <source>Pushes an SV onto the end of the array. The array will grow automatically to accommodate the addition. This takes ownership of one reference count.</source>
          <target state="translated">SV를 어레이의 끝으로 밉니다. 추가를 수용하기 위해 배열이 자동으로 커집니다. 이것은 하나의 참조 카운트의 소유권을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="6ccf168fe998779643f2545e93fe3eb3325a7626" translate="yes" xml:space="preserve">
          <source>Pushes the elements of &lt;code&gt;list&lt;/code&gt; to the end of the array.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 요소를 배열의 끝으로 푸시합니다 .</target>
        </trans-unit>
        <trans-unit id="1a67421c65ebcbec6ecf93fc8121206f9a6219cd" translate="yes" xml:space="preserve">
          <source>Pushes the elements of &lt;code&gt;list&lt;/code&gt; to the start of the array.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 요소를 배열의 시작 부분으로 푸시합니다 .</target>
        </trans-unit>
        <trans-unit id="9e31d51eef6a92b12ce1e2ef3c07315f688fe898" translate="yes" xml:space="preserve">
          <source>Pushing contexts</source>
          <target state="translated">컨텍스트 푸시</target>
        </trans-unit>
        <trans-unit id="434a3543d1b51e838730a1e98071665a5312262b" translate="yes" xml:space="preserve">
          <source>Pushing multiple values in a hash option</source>
          <target state="translated">해시 옵션에서 여러 값 푸시</target>
        </trans-unit>
        <trans-unit id="7fd768e4fe7bd6bb51e495079370749b0bfeabc8" translate="yes" xml:space="preserve">
          <source>Put</source>
          <target state="translated">Put</target>
        </trans-unit>
        <trans-unit id="d1bc442ba313a7f986c75035df11c1f76cbd7483" translate="yes" xml:space="preserve">
          <source>Put 'hints' in the .ph files which will help in locating problems with</source>
          <target state="translated">문제를 찾는 데 도움이되는 .ph 파일에 '힌트'를 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="c69babd8dd4a14457309b07c58ef1458d1787046" translate="yes" xml:space="preserve">
          <source>Put &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale;&lt;/code&gt; in your script. The \w character class is taken from the current locale.</source>
          <target state="translated">넣어 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale;&lt;/code&gt; 스크립트에서. \ w 문자 클래스는 현재 로케일에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c283a053eded707197b526829d38b24641bc66c4" translate="yes" xml:space="preserve">
          <source>Put &lt;code&gt;use locale;&lt;/code&gt; in your script. The \w character class is taken from the current locale.</source>
          <target state="translated">&lt;code&gt;use locale;&lt;/code&gt; 넣으십시오 . 스크립트에서. \ w 문자 클래스는 현재 로케일에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="47739ad806e984d84c33acd817d5e256d5c4587a" translate="yes" xml:space="preserve">
          <source>Put Pod::Simple into trace/debug mode</source>
          <target state="translated">포드 :: 간단한 추적 / 디버그 모드로 전환</target>
        </trans-unit>
        <trans-unit id="493df581b024ed00be76e886a1aae031377cfaee" translate="yes" xml:space="preserve">
          <source>Put a file on the remote server. &lt;code&gt;LOCAL_FILE&lt;/code&gt; may be a name or a filehandle. If &lt;code&gt;LOCAL_FILE&lt;/code&gt; is a filehandle then &lt;code&gt;REMOTE_FILE&lt;/code&gt; must be specified. If &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not specified then the file will be stored in the current directory with the same leafname as &lt;code&gt;LOCAL_FILE&lt;/code&gt; .</source>
          <target state="translated">원격 서버에 파일을 넣습니다. &lt;code&gt;LOCAL_FILE&lt;/code&gt; 은 이름 또는 파일 핸들 일 수 있습니다. 경우 &lt;code&gt;LOCAL_FILE&lt;/code&gt; 파일 핸들입니다 다음 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 지정해야합니다. 경우 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 지정되지 파일은 같은 leafname로 현재 디렉토리에 저장됩니다 &lt;code&gt;LOCAL_FILE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac33cc37b2b0533e83d17f6777b0e7b3265cadf4" translate="yes" xml:space="preserve">
          <source>Put a file on the remote server. &lt;code&gt;LOCAL_FILE&lt;/code&gt; may be a name or a filehandle. If &lt;code&gt;LOCAL_FILE&lt;/code&gt; is a filehandle then &lt;code&gt;REMOTE_FILE&lt;/code&gt; must be specified. If &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not specified then the file will be stored in the current directory with the same leafname as &lt;code&gt;LOCAL_FILE&lt;/code&gt;.</source>
          <target state="translated">원격 서버에 파일을 넣으십시오. &lt;code&gt;LOCAL_FILE&lt;/code&gt; 은 이름 또는 파일 핸들 일 수 있습니다. 경우 &lt;code&gt;LOCAL_FILE&lt;/code&gt; 파일 핸들입니다 다음 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 지정해야합니다. 경우 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 지정되지 파일은 같은 leafname와 현재 디렉토리에 저장됩니다 &lt;code&gt;LOCAL_FILE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cd4b6437b681f5228767353df5b194b9775df90" translate="yes" xml:space="preserve">
          <source>Put an asterisk &lt;code&gt;*&lt;/code&gt; before the &lt;code&gt;v&lt;/code&gt; to override the string to use to separate the numbers:</source>
          <target state="translated">숫자를 구분하는 데 사용할 문자열을 대체 하려면 &lt;code&gt;v&lt;/code&gt; 앞에 별표 ( &lt;code&gt;*&lt;/code&gt; ) 를 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="cfdc08a06735eb7967d6f2934ce928e4dd255a09" translate="yes" xml:space="preserve">
          <source>Put each XS files into separate directories, each with their own</source>
          <target state="translated">각 XS 파일을 별도의 디렉토리에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="d14f55f6fdcb5da01d44dd7ed243c1db7e277d01" translate="yes" xml:space="preserve">
          <source>Put site-specific architecture-dependent files into one of the following directories:</source>
          <target state="translated">사이트 별 아키텍처 종속 파일을 다음 디렉토리 중 하나에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="7fa7153c9aa3d5d40471d6b1b2c0b52e0c1b025d" translate="yes" xml:space="preserve">
          <source>Put that in your</source>
          <target state="translated">당신의 그것을 넣어</target>
        </trans-unit>
        <trans-unit id="04d814d0c7034933ffea79f71cd116536449e7fb" translate="yes" xml:space="preserve">
          <source>Put the resulting &lt;b&gt;.ph&lt;/b&gt; files beneath &lt;b&gt;destination_dir&lt;/b&gt;, instead of beneath the default Perl library location (&lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; ).</source>
          <target state="translated">결과 &lt;b&gt;.ph&lt;/b&gt; 파일을 기본 Perl 라이브러리 위치 ( &lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; 아래 대신 &lt;b&gt;destination_dir&lt;/b&gt; 아래에 두십시오. ) .</target>
        </trans-unit>
        <trans-unit id="3aab0c8bb2ea9d87488291a28d90b2e652e23aef" translate="yes" xml:space="preserve">
          <source>Put the resulting &lt;b&gt;.ph&lt;/b&gt; files beneath &lt;b&gt;destination_dir&lt;/b&gt;, instead of beneath the default Perl library location (&lt;code&gt;$Config{'installsitearch'}&lt;/code&gt;).</source>
          <target state="translated">결과 &lt;b&gt;.ph&lt;/b&gt; 파일을 기본 Perl 라이브러리 위치 ( &lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; ) 아래 대신 &lt;b&gt;destination_dir&lt;/b&gt; 아래에 두십시오 .</target>
        </trans-unit>
        <trans-unit id="40e6c0e0dc40286e99d3fc85cf70570e01de66ee" translate="yes" xml:space="preserve">
          <source>Put this code in a separate file to be run in more than one process. Call the file</source>
          <target state="translated">이 코드를 별도의 파일에 넣어 두 개 이상의 프로세스에서 실행하십시오. 파일을 불러</target>
        </trans-unit>
        <trans-unit id="60ff5dc8b3b8ee10ac653e6d6e0aa7e9f1322412" translate="yes" xml:space="preserve">
          <source>Put this code in a separate file to be run in more than one process. Call this file</source>
          <target state="translated">이 코드를 별도의 파일에 넣어 두 개 이상의 프로세스에서 실행하십시오. 이 파일을 불러</target>
        </trans-unit>
        <trans-unit id="9a2c16ad1dd4ceb42756fb3731b8a42274bc8054" translate="yes" xml:space="preserve">
          <source>Put this in</source>
          <target state="translated">이것을 넣어</target>
        </trans-unit>
        <trans-unit id="3984468ef6d986678e93740602be8433d764ca26" translate="yes" xml:space="preserve">
          <source>Put together, a grammar to match a basic identifier becomes</source>
          <target state="translated">기본 식별자와 일치하는 문법은</target>
        </trans-unit>
        <trans-unit id="84d55f4cab6e0e3c9f425362eef36f66277e3969" translate="yes" xml:space="preserve">
          <source>Puts a C function into the chain of check functions for a specified op type. This is the preferred way to manipulate the &lt;a href=&quot;#PL_check&quot;&gt;&quot;PL_check&quot;&lt;/a&gt; array. &lt;code&gt;opcode&lt;/code&gt; specifies which type of op is to be affected. &lt;code&gt;new_checker&lt;/code&gt; is a pointer to the C function that is to be added to that opcode's check chain, and &lt;code&gt;old_checker_p&lt;/code&gt; points to the storage location where a pointer to the next function in the chain will be stored. The value of &lt;code&gt;new_checker&lt;/code&gt; is written into the &lt;a href=&quot;#PL_check&quot;&gt;&quot;PL_check&quot;&lt;/a&gt; array, while the value previously stored there is written to &lt;code&gt;*old_checker_p&lt;/code&gt;.</source>
          <target state="translated">지정된 op 유형에 대한 확인 함수 체인에 C 함수를 넣습니다. 이것은 &lt;a href=&quot;#PL_check&quot;&gt;&quot;PL_check&quot;&lt;/a&gt; 배열 을 조작하는 데 선호되는 방법 입니다. &lt;code&gt;opcode&lt;/code&gt; 는 영향을받을 작업 유형을 지정합니다. &lt;code&gt;new_checker&lt;/code&gt; 는 해당 opcode의 체크 체인에 추가 될 C 함수에 대한 포인터이고 &lt;code&gt;old_checker_p&lt;/code&gt; 는 체인의 다음 함수에 대한 포인터가 저장 될 저장 위치를 ​​가리 킵니다. &lt;code&gt;new_checker&lt;/code&gt; 의 값은 &lt;a href=&quot;#PL_check&quot;&gt;&quot;PL_check&quot;&lt;/a&gt; 배열에 기록되고 이전에 저장된 값은 &lt;code&gt;*old_checker_p&lt;/code&gt; 에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="b81b3040dcaf2eeda56068119211b063246e32f5" translate="yes" xml:space="preserve">
          <source>Puts a C function into the chain of check functions for a specified op type. This is the preferred way to manipulate the &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; array.</source>
          <target state="translated">지정된 op 유형의 검사 기능 체인에 C 기능을 넣습니다. 이것은 &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; 배열 을 조작하기 위해 선호되는 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="e37b83ad4bff75961db90d3f62a6f45530b692b7" translate="yes" xml:space="preserve">
          <source>Puts a C function into the chain of keyword plugins. This is the preferred way to manipulate the &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; variable. &lt;code&gt;new_plugin&lt;/code&gt; is a pointer to the C function that is to be added to the keyword plugin chain, and &lt;code&gt;old_plugin_p&lt;/code&gt; points to the storage location where a pointer to the next function in the chain will be stored. The value of &lt;code&gt;new_plugin&lt;/code&gt; is written into the &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; variable, while the value previously stored there is written to &lt;code&gt;*old_plugin_p&lt;/code&gt;.</source>
          <target state="translated">키워드 플러그인 체인에 C 함수를 넣습니다. 이것은 &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; 변수 를 조작하는 데 선호되는 방법 입니다. &lt;code&gt;new_plugin&lt;/code&gt; 은 키워드 플러그인 체인에 추가 될 C 함수에 대한 포인터이고 &lt;code&gt;old_plugin_p&lt;/code&gt; 는 체인의 다음 함수에 대한 포인터가 저장 될 저장 위치를 ​​가리 킵니다. &lt;code&gt;new_plugin&lt;/code&gt; 의 값은 &lt;a href=&quot;#PL_keyword_plugin&quot;&gt;&quot;PL_keyword_plugin&quot;&lt;/a&gt; 변수에 기록되고 이전에 여기에 저장된 값은 &lt;code&gt;*old_plugin_p&lt;/code&gt; 에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="d77f4ddf35623d313f60eab18e7956a5f55b5242" translate="yes" xml:space="preserve">
          <source>Puts the targets necessary for 'make dist' together into one make fragment.</source>
          <target state="translated">'make dist'에 필요한 대상을 하나의 make 조각으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0d94544ade0f2950579f15818313dfb90a811531" translate="yes" xml:space="preserve">
          <source>Putting a C value on Perl stack</source>
          <target state="translated">Perl 스택에 C 값 넣기</target>
        </trans-unit>
        <trans-unit id="c3c0fee583fe73ce38904eadb090b95782b9afc1" translate="yes" xml:space="preserve">
          <source>Putting a fancy &lt;b&gt;data structure&lt;/b&gt; into linear order so that it can be stored as a &lt;b&gt;string&lt;/b&gt; in a disk file or database, or sent through a &lt;b&gt;pipe&lt;/b&gt;. Also called marshalling.</source>
          <target state="translated">멋진 &lt;b&gt;데이터 구조&lt;/b&gt; 를 선형 순서로 배치 하여 디스크 파일이나 데이터베이스에 &lt;b&gt;문자열&lt;/b&gt; 로 저장 하거나 &lt;b&gt;파이프를&lt;/b&gt; 통해 보낼 수 있습니다. 마샬링이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="6ebbf4b51e58300b77d8060b5d5709fd9450e224" translate="yes" xml:space="preserve">
          <source>Putting all the parts together, we get a regexp that matches numbers:</source>
          <target state="translated">모든 부품을 합하면 숫자와 일치하는 정규 표현식이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="6a9848562f434be6cca42f48ae11db504a53636d" translate="yes" xml:space="preserve">
          <source>Putting it all together, you have:</source>
          <target state="translated">모두 합치면 다음이 있습니다.</target>
        </trans-unit>
        <trans-unit id="714469b1b08282dd234705283b15605ad8a9c22d" translate="yes" xml:space="preserve">
          <source>Python 2.3 MRO</source>
          <target state="translated">Python 2.3 MRO</target>
        </trans-unit>
        <trans-unit id="50ce8d29cdd017042415616b75b34f884b476435" translate="yes" xml:space="preserve">
          <source>Python 2.3 MRO related links</source>
          <target state="translated">파이썬 2.3 MRO 관련 링크</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="b7b445f989c7a304e6e26500eee0e35e636e184c" translate="yes" xml:space="preserve">
          <source>Q and A</source>
          <target state="translated">Q와 A</target>
        </trans-unit>
        <trans-unit id="908d9b09fc523e58d49da45f3501c5e3ad0a3b94" translate="yes" xml:space="preserve">
          <source>Q and A (or FAQ)</source>
          <target state="translated">Q와 A (또는 FAQ)</target>
        </trans-unit>
        <trans-unit id="07773e96ffc48159cc70865c7557ce206967e551" translate="yes" xml:space="preserve">
          <source>QNX Neutrino RTOS (6.5.0)</source>
          <target state="translated">QNX Neutrino RTOS (6.5.0)</target>
        </trans-unit>
        <trans-unit id="3c1785f5e41e8062b156fa579adb0413cfb85e23" translate="yes" xml:space="preserve">
          <source>QNX auxiliary files</source>
          <target state="translated">QNX 보조 파일</target>
        </trans-unit>
        <trans-unit id="4cf27a6f1f7cbc27550b7c2ba303e89cb36e8e14" translate="yes" xml:space="preserve">
          <source>QNX specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils :: MM_Unix의 QNX 특정 서브 클래스</target>
        </trans-unit>
        <trans-unit id="20d507c7120c3d5b527b26a3fb978cdf1ac44faf" translate="yes" xml:space="preserve">
          <source>QUANTIFIERS</source>
          <target state="translated">QUANTIFIERS</target>
        </trans-unit>
        <trans-unit id="9decc00e3d065b650a870ccca4c5e0654258f0b8" translate="yes" xml:space="preserve">
          <source>QUEUE CREATION</source>
          <target state="translated">큐 생성</target>
        </trans-unit>
        <trans-unit id="41017e2c9792619e0fd0ffe76075b745bc93b06d" translate="yes" xml:space="preserve">
          <source>QUICK CHECKLIST</source>
          <target state="translated">빠른 체크리스트</target>
        </trans-unit>
        <trans-unit id="a500376a8fe35f15c46f906227d1a82650ca2b3c" translate="yes" xml:space="preserve">
          <source>QUICK OVERVIEW</source>
          <target state="translated">빠른 개요</target>
        </trans-unit>
        <trans-unit id="3aad6cae9d9ca0517324f333e5937179f5104dbc" translate="yes" xml:space="preserve">
          <source>QUICK START GUIDE</source>
          <target state="translated">빠른 시작 가이드</target>
        </trans-unit>
        <trans-unit id="83ef3e6cee83cb88a39814638a94fa1ad33e65a5" translate="yes" xml:space="preserve">
          <source>Qatar</source>
          <target state="translated">Qatar</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="d4dc74dd982660ab83c02728a67c70b0e21df160" translate="yes" xml:space="preserve">
          <source>Qualification applies only to symbol names (strings). References are left unchanged under the assumption that they are glob references, which are qualified by their nature.</source>
          <target state="translated">규정은 기호 이름 (문자열)에만 적용됩니다. 참조는 그 특성에 의해 검증 된 glob 참조라는 가정하에 변경되지 않은 채로 있습니다.</target>
        </trans-unit>
        <trans-unit id="832fb40388c099969f014a37f4a9c6c068249798" translate="yes" xml:space="preserve">
          <source>Quantifier follows nothing in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">한정자는 정규식에서 아무것도 따르지 않습니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="c45166c7ba50383e7b4bfb3006de5b43bce7b9e2" translate="yes" xml:space="preserve">
          <source>Quantifier follows nothing in regex; marked by &amp;lt;-- HERE in m/(?i)+ &amp;lt;-- HERE /</source>
          <target state="translated">정량자는 정규 표현식에서 아무 것도 따르지 않습니다. m / (? i) +에서 &amp;lt;-HERE로 표시됨</target>
        </trans-unit>
        <trans-unit id="f1078eb747f8336eb42686d72ed6b177d35d470d" translate="yes" xml:space="preserve">
          <source>Quantifier in {,} bigger than %d in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">{,}의 한정자는 정규식에서 % d보다 큽니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="7f8003176a1ccc839e6b82b0cb171c29d16731fe" translate="yes" xml:space="preserve">
          <source>Quantifier unexpected on zero-length expression in regex m/%s/</source>
          <target state="translated">정규식 m / % s /의 길이가 0 인 식에 예상치 못한 한정자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c0866446ae574353dc60852ca8f9575e6acb9f4" translate="yes" xml:space="preserve">
          <source>Quantifier {n,m} with n &amp;gt; m can't match in regex</source>
          <target state="translated">n&amp;gt; m 인 한정자 {n, m}은 정규식에서 일치 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="26e2122c1bffe63038aa8a5ea8797636e3e1182d" translate="yes" xml:space="preserve">
          <source>Quantifier {n,m} with n &amp;gt; m can't match in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">n&amp;gt; m 인 한정자 {n, m}은 정규식에서 일치 할 수 없습니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="6078532ab203b30b0c8e32bb799fd87d65f55236" translate="yes" xml:space="preserve">
          <source>Quantifiers</source>
          <target state="translated">Quantifiers</target>
        </trans-unit>
        <trans-unit id="829f1fa0b9ca1bfbdf96c60ba3b43a6dd4a86313" translate="yes" xml:space="preserve">
          <source>Quantifiers are greedy by default and match the &lt;b&gt;longest&lt;/b&gt; leftmost.</source>
          <target state="translated">수량자는 기본적으로 탐욕스럽고 &lt;b&gt;가장&lt;/b&gt; 왼쪽에 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="08d09ac90893da3664c9f90247edf2e364722b8a" translate="yes" xml:space="preserve">
          <source>Quantifiers are used when a particular portion of a pattern needs to match a certain number (or numbers) of times. If there isn't a quantifier the number of times to match is exactly one. The following standard quantifiers are recognized:</source>
          <target state="translated">한정자는 패턴의 특정 부분이 특정 횟수 (또는 숫자)와 일치해야 할 때 사용됩니다. 수량자가 없으면 일치하는 횟수는 정확히 하나입니다. 다음 표준 수량자가 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="69e4a0b3ec967fedffed9c96cbabb3d643636072" translate="yes" xml:space="preserve">
          <source>Quantifiers can be used to specify how many of the previous thing you want to match on, where &quot;thing&quot; means either a literal character, one of the metacharacters listed above, or a group of characters or metacharacters in parentheses.</source>
          <target state="translated">수량자를 사용하여 일치시킬 이전 항목 수를 지정할 수 있습니다. 여기서 &quot;thing&quot;은 리터럴 문자, 위에 나열된 메타 문자 중 하나 또는 괄호 안의 문자 또는 메타 문자 그룹을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cdf8e30d84d95e2be133e931e5890cc3b6507fac" translate="yes" xml:space="preserve">
          <source>Queries or adds to the internal table of already encountered references. You must use &lt;code&gt;Reset&lt;/code&gt; to explicitly clear the table if needed. Such references are not dumped; instead, their names are inserted wherever they are encountered subsequently. This is useful especially for properly dumping subroutine references.</source>
          <target state="translated">이미 발생한 참조의 내부 테이블을 쿼리하거나 추가합니다. &lt;code&gt;Reset&lt;/code&gt; 사용해야합니다 필요한 경우 을 하여 테이블을 명시 적으로 지워야합니다. 이러한 참조는 폐기되지 않습니다. 대신, 이름은 이후에 접할 때마다 삽입됩니다. 서브 루틴 참조를 올바르게 덤프하는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c8acae1546ffca641266d1ea873cf1eb072da5bd" translate="yes" xml:space="preserve">
          <source>Queries or replaces the internal array of user supplied names for the values that will be dumped. When called without arguments, returns the names. When called with an array of replacement names, returns the object itself. If the number of replacement names exceeds the number of values to be named, the excess names will not be used. If the number of replacement names falls short of the number of values to be named, the list of replacement names will be exhausted and remaining values will not be renamed. When called with any other type of argument, dies.</source>
          <target state="translated">덤프 될 값에 대한 사용자 제공 이름의 내부 배열을 쿼리하거나 바꿉니다. 인수없이 호출되면 이름을 반환합니다. 대체 이름 배열과 함께 호출되면 객체 자체를 반환합니다. 대체 이름 수가 명명 될 값 수를 초과하면 초과 이름이 사용되지 않습니다. 대체 이름 수가 이름을 지정할 값의 수보다 적 으면 대체 이름 목록이 소진되고 나머지 값의 이름은 바뀌지 않습니다. 다른 유형의 인수와 함께 호출하면 사망합니다.</target>
        </trans-unit>
        <trans-unit id="83faf5aa5b94da12a4877cf033f633d81c2d8f0f" translate="yes" xml:space="preserve">
          <source>Queries or replaces the internal array of values that will be dumped. When called without arguments, returns the values as a list. When called with a reference to an array of replacement values, returns the object itself. When called with any other type of argument, dies.</source>
          <target state="translated">덤프 될 내부 값 배열을 쿼리하거나 바꿉니다. 인수없이 호출하면 값을 목록으로 반환합니다. 대체 값 배열에 대한 참조와 함께 호출되면 객체 자체를 반환합니다. 다른 유형의 인수와 함께 호출하면 사망합니다.</target>
        </trans-unit>
        <trans-unit id="8bc6f98b3a7df078625f886e33bff03b606f80f0" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;a href=&quot;socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;a href=&quot;#getprotobyname-NAME&quot;&gt;&lt;code&gt;getprotobyname&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 LEVEL에서 SOCKET과 연관된 OPTNAME이라는 옵션을 쿼리합니다. 옵션은 소켓 유형에 따라 여러 프로토콜 레벨에 존재할 수 있지만 최소한 최상위 소켓 레벨 SOL_SOCKET ( &lt;a href=&quot;socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 모듈에 정의 됨 )는 존재합니다. 다른 수준에서 옵션을 쿼리하려면 옵션을 제어하는 ​​적절한 프로토콜의 프로토콜 번호를 제공해야합니다. 예를 들어, 옵션이 TCP 프로토콜에 의해 해석됨을 나타내려면 LEVEL을 TCP의 프로토콜 번호로 설정해야합니다.이 번호는 &lt;a href=&quot;#getprotobyname-NAME&quot;&gt; &lt;code&gt;getprotobyname&lt;/code&gt; 을&lt;/a&gt; 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe5bf8c7bc573767cc25100f7b66c5ffcfebc291" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;code&gt;Socket&lt;/code&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 LEVEL에서 SOCKET과 연관된 OPTNAME이라는 옵션을 조회합니다. 소켓 유형에 따라 여러 프로토콜 수준에서 옵션이 존재할 수 있지만 최소한 &lt;code&gt;Socket&lt;/code&gt; 모듈에 정의 된 최상위 소켓 수준 SOL_SOCKET 이 존재합니다. 다른 수준에서 옵션을 쿼리하려면 옵션을 제어하는 ​​적절한 프로토콜의 프로토콜 번호를 제공해야합니다. 예를 들어, 옵션이 TCP 프로토콜에 의해 해석됨을 나타내려면 LEVEL을 TCP의 프로토콜 번호로 설정해야하며 &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; 을 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54784f5a723388f9bef25d885ee8470caa2dcfd6" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;code&gt;Socket&lt;/code&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;code&gt;&lt;a href=&quot;getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 LEVEL에서 SOCKET과 연관된 OPTNAME이라는 옵션을 조회합니다. 소켓 유형에 따라 여러 프로토콜 수준에서 옵션이 존재할 수 있지만 최소한 &lt;code&gt;Socket&lt;/code&gt; 모듈에 정의 된 최상위 소켓 수준 SOL_SOCKET 이 존재합니다. 다른 수준에서 옵션을 쿼리하려면 옵션을 제어하는 ​​적절한 프로토콜의 프로토콜 번호를 제공해야합니다. 예를 들어, 옵션이 TCP 프로토콜에 의해 해석됨을 나타내려면 LEVEL을 TCP의 프로토콜 번호로 설정해야하며 &lt;code&gt;&lt;a href=&quot;getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; 을 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49ce437d64f5ded5d2e1a936b1bee65897d9e9e3" translate="yes" xml:space="preserve">
          <source>Query locale information</source>
          <target state="translated">로캘 정보 쿼리</target>
        </trans-unit>
        <trans-unit id="aff0621a85b75d3f9b0bce73acd70ea9b7db4b3c" translate="yes" xml:space="preserve">
          <source>Query, download and build perl modules from CPAN sites</source>
          <target state="translated">CPAN 사이트에서 펄 모듈 쿼리, 다운로드 및 빌드</target>
        </trans-unit>
        <trans-unit id="ed5852c21131e60baf445dfc882c7dd1ddea9256" translate="yes" xml:space="preserve">
          <source>QueryDosDevice</source>
          <target state="translated">QueryDosDevice</target>
        </trans-unit>
        <trans-unit id="25159e9583ffe556fa9caf91c376678194cc1e2d" translate="yes" xml:space="preserve">
          <source>QueryDosDeviceW</source>
          <target state="translated">QueryDosDeviceW</target>
        </trans-unit>
        <trans-unit id="5c87d5f3328b7d4c3f7fd3f209b9b98dd39e0104" translate="yes" xml:space="preserve">
          <source>Querying the layers of filehandles</source>
          <target state="translated">파일 핸들 레이어 쿼리</target>
        </trans-unit>
        <trans-unit id="ab73d69ba359e14fb19fa0dc0701d52b9c7d7ee1" translate="yes" xml:space="preserve">
          <source>Questions With Answers</source>
          <target state="translated">답변이있는 질문</target>
        </trans-unit>
        <trans-unit id="95a49b2098c5f038a0a98f8cedd74f050e3ecb3e" translate="yes" xml:space="preserve">
          <source>Questions or discussion about POD and Pod::Simple should be sent to the &lt;a href=&quot;mailto:pod-people@perl.org&quot;&gt;mailto:pod-people@perl.org&lt;/a&gt; mail list. Send an empty email to &lt;a href=&quot;mailto:pod-people-subscribe@perl.org&quot;&gt;mailto:pod-people-subscribe@perl.org&lt;/a&gt; to subscribe.</source>
          <target state="translated">POD 및 Pod :: Simple에 대한 질문이나 토론은 &lt;a href=&quot;mailto:pod-people@perl.org&quot;&gt;mailto : pod-people@perl.org&lt;/a&gt; 메일 목록으로 보내야합니다. 구독 하려면 빈 이메일을 &lt;a href=&quot;mailto:pod-people-subscribe@perl.org&quot;&gt;mailto : pod-people-subscribe@perl.org&lt;/a&gt; 로 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="f6d4d2bb4bfe6fa0f2303afcf56e54256bae7acb" translate="yes" xml:space="preserve">
          <source>Questions or discussion about POD and Pod::Simple should be sent to the pod-people@perl.org mail list. Send an empty email to pod-people-subscribe@perl.org to subscribe.</source>
          <target state="translated">POD 및 Pod :: Simple에 대한 질문 또는 토론은 pod-people@perl.org 메일 목록으로 보내야합니다. 구독하려면 빈 이메일을 pod-people-subscribe@perl.org로 보내십시오.</target>
        </trans-unit>
        <trans-unit id="62c04616537c40c65ec2cae0ed0b661e409150a9" translate="yes" xml:space="preserve">
          <source>Queues created by &lt;a href=&quot;Thread::Queue&quot;&gt;Thread::Queue&lt;/a&gt; can be used in both threaded and non-threaded applications.</source>
          <target state="translated">&lt;a href=&quot;Thread::Queue&quot;&gt;Thread :: Queue에&lt;/a&gt; 의해 생성 된 대기열 은 스레드 및 비스 레드 응용 프로그램 모두에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bbcc3a96b399b2a6b4ea7037ef3c410c2e98989" translate="yes" xml:space="preserve">
          <source>Queues created by &lt;a href=&quot;queue&quot;&gt;Thread::Queue&lt;/a&gt; can be used in both threaded and non-threaded applications.</source>
          <target state="translated">&lt;a href=&quot;queue&quot;&gt;Thread :: Queue에&lt;/a&gt; 의해 생성 된 큐 는 스레드 응용 프로그램과 스레드되지 않은 응용 프로그램 모두에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82dcd86a2d0fdd9674d5180af12a2c81e22b15c2" translate="yes" xml:space="preserve">
          <source>Queues: Passing Data Around</source>
          <target state="translated">큐 : 데이터 전달</target>
        </trans-unit>
        <trans-unit id="911283fe22324c9b4dbb9d98fa5ce51d04af8b5f" translate="yes" xml:space="preserve">
          <source>Quick Check</source>
          <target state="translated">빠른 확인</target>
        </trans-unit>
        <trans-unit id="7d2b679e22dfa3101d1ba7bf2ec43c351c8ef687" translate="yes" xml:space="preserve">
          <source>Quick Guide</source>
          <target state="translated">빠른 설명</target>
        </trans-unit>
        <trans-unit id="c1477a08bbc119a706dea90b93268ceb957f433a" translate="yes" xml:space="preserve">
          <source>Quick Reference</source>
          <target state="translated">빠른 참조</target>
        </trans-unit>
        <trans-unit id="43d8515e5495635935ae41fcaff947601379b8c7" translate="yes" xml:space="preserve">
          <source>Quick commands for handling typemaps</source>
          <target state="translated">타입 맵 처리를위한 빠른 명령</target>
        </trans-unit>
        <trans-unit id="490efc6e3853d704426e2197c066d80aa96aeb58" translate="yes" xml:space="preserve">
          <source>Quick cycle of developers release may break the OS/2 build time to time, looking into</source>
          <target state="translated">개발자 릴리스의 빠른주기는 OS / 2 빌드를 때때로 깨뜨릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7994ebd90d60dd15b911eb3a9daf502e60683411" translate="yes" xml:space="preserve">
          <source>Quit and close the connection to the remote POP3 server. Any messages marked as deleted will be deleted from the remote mailbox.</source>
          <target state="translated">원격 POP3 서버에 대한 연결을 종료하고 닫습니다. 삭제 된 것으로 표시된 모든 메시지는 원격 사서함에서 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="34ba20e3026462af76a067e043daf2ecc8d444ff" translate="yes" xml:space="preserve">
          <source>Quit the remote server and close the socket connection.</source>
          <target state="translated">원격 서버를 종료하고 소켓 연결을 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="5a1be35f7e41fc0e73dfaa10a8ca1c7fe5bd8ed0" translate="yes" xml:space="preserve">
          <source>Quit. (&quot;quit&quot; doesn't work for this, unless you've made an alias) This is the only supported way to exit the debugger, though typing &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; twice might work.</source>
          <target state="translated">떠나다. (별칭을 만들지 않는 한 &quot;quit&quot;는 작동하지 않습니다.)이 방법은 디버거를 종료 할 수있는 유일한 방법이지만 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 를 두 번 입력하면 효과 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8236f6cef7dae93e89bfa8ab484c617f0a4a2375" translate="yes" xml:space="preserve">
          <source>Quit. (&quot;quit&quot; doesn't work for this, unless you've made an alias) This is the only supported way to exit the debugger, though typing &lt;code&gt;exit&lt;/code&gt; twice might work.</source>
          <target state="translated">떠나다. ( &quot;quit&quot;는 별칭을 만들지 않는 한 작동하지 않습니다.) 이것은 디버거를 종료하기 위해 지원되는 유일한 방법이지만 &lt;code&gt;exit&lt;/code&gt; 를 두 번 입력해도 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9f4964b91e9849afca9359e00981ce1ba0c07f9" translate="yes" xml:space="preserve">
          <source>Quotations are taken from writings of J.R.R. Tolkien pertaining to his Legendarium, almost always from</source>
          <target state="translated">그의 전설에 관한 JRR Tolkien의 글에서 인용 한 내용은 거의 항상</target>
        </trans-unit>
        <trans-unit id="98a0090e1373d2c389fb1b8448a5ea356c875f06" translate="yes" xml:space="preserve">
          <source>Quote and Quote-like Operators</source>
          <target state="translated">견적 및 견적 유사 연산자</target>
        </trans-unit>
        <trans-unit id="97af8d62d18823e045a526635c4c59c15b6c1c41" translate="yes" xml:space="preserve">
          <source>Quote, don't escape.</source>
          <target state="translated">견적, 탈출하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="19d0f80e917312a7bee3d680b3a00ddf182f6146" translate="yes" xml:space="preserve">
          <source>Quote-Like Operators</source>
          <target state="translated">따옴표와 같은 연산자</target>
        </trans-unit>
        <trans-unit id="12a1279b6935c9782ab3606a3d82d28493446688" translate="yes" xml:space="preserve">
          <source>Quoted-Printable encoding and decoding</source>
          <target state="translated">인용 인쇄 가능한 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="46e26eec4abf3af9d0fe512a58ece61ef23ba7c0" translate="yes" xml:space="preserve">
          <source>Quotes an item to become safe against spaces in shell interpolation. An item is enclosed in double quotes if:</source>
          <target state="translated">쉘 보간에서 공백으로부터 안전 해 지도록 항목을 인용합니다. 다음과 같은 경우 항목을 큰 따옴표로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="8b284dd175a44a8a9dddaf84217e26829062b72d" translate="yes" xml:space="preserve">
          <source>Quotes macro literal value suitable for being used on a command line so that when expanded by make, will be received by command as given to this method:</source>
          <target state="translated">make로 확장 될 때이 메소드에 지정된대로 명령에 의해 수신되도록 명령 행에서 사용하기에 적합한 매크로 리터럴 값을 인용합니다.</target>
        </trans-unit>
        <trans-unit id="7c9cadaf1120288e2519033435e5a86c9d58bc5d" translate="yes" xml:space="preserve">
          <source>Quotient when</source>
          <target state="translated">몫 언제</target>
        </trans-unit>
        <trans-unit id="afb079b387f352ffcae72adddea301483da03453" translate="yes" xml:space="preserve">
          <source>Quoting Rules</source>
          <target state="translated">견적 규칙</target>
        </trans-unit>
        <trans-unit id="dc8a67ea92998f4331c08d3d68c3f23ba931af7d" translate="yes" xml:space="preserve">
          <source>Quoting characters that have the other 3 properties is done to enhance the readability of the regular expression and not because they actually need to be quoted for regular expression purposes (characters with the White_Space property are likely to be indistinguishable on the page or screen from those with the Pattern_White_Space property; and the other two properties contain non-printing characters).</source>
          <target state="translated">다른 3 개의 속성을 가진 문자를 인용하면 정규 표현식의 가독성을 높이기 위해 수행되며 실제로는 정규 표현식 목적으로 인용해야하기 때문이 아닙니다 (White_Space 속성을 가진 문자는 페이지 또는 화면에서 구별 할 수 없을 가능성이 높습니다) Pattern_White_Space 속성; 다른 두 속성에는 인쇄 할 수없는 문자가 포함됩니다).</target>
        </trans-unit>
        <trans-unit id="5f374f604fe8ce3a7bacd1735dcfc8594696a7c1" translate="yes" xml:space="preserve">
          <source>Quoting metacharacters</source>
          <target state="translated">메타 문자 인용</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="45297e8f2e4a57d399e54f4d5e56a33edf6b4546" translate="yes" xml:space="preserve">
          <source>RADIAL COORDINATE CONVERSIONS</source>
          <target state="translated">레디얼 코디네이트 변환</target>
        </trans-unit>
        <trans-unit id="647bf4ae5c62e4b2f7fc54138d7154994e7846d5" translate="yes" xml:space="preserve">
          <source>RARE</source>
          <target state="translated">RARE</target>
        </trans-unit>
        <trans-unit id="9af25064545050c8e56a4006e326adb929858914" translate="yes" xml:space="preserve">
          <source>READ ONLY</source>
          <target state="translated">읽기 전용</target>
        </trans-unit>
        <trans-unit id="cc6425b15718ba305a5be3f7b63315d357624827" translate="yes" xml:space="preserve">
          <source>READ this, LIST</source>
          <target state="translated">이것을 읽고, 목록</target>
        </trans-unit>
        <trans-unit id="71ba8d747508fc47456e6661103dd64aef5d8592" translate="yes" xml:space="preserve">
          <source>READ this, scalar, length, offset</source>
          <target state="translated">이것을 읽으십시오, 스칼라, 길이, 오프셋</target>
        </trans-unit>
        <trans-unit id="b1098e3b19c1ecdbc519280a3f79897302a60f22" translate="yes" xml:space="preserve">
          <source>READ/WRITE</source>
          <target state="translated">READ/WRITE</target>
        </trans-unit>
        <trans-unit id="1178857cfaa4d49d9bfd3b0d0e2944348317f373" translate="yes" xml:space="preserve">
          <source>READLINE this</source>
          <target state="translated">READLINE이</target>
        </trans-unit>
        <trans-unit id="69e27356ef629022720d868ab0c0e3394775b6c1" translate="yes" xml:space="preserve">
          <source>README</source>
          <target state="translated">README</target>
        </trans-unit>
        <trans-unit id="26170ec3dc64f8b7fd572cb5f04130dc738bac40" translate="yes" xml:space="preserve">
          <source>README and other Additional Files.</source>
          <target state="translated">README 및 기타 추가 파일.</target>
        </trans-unit>
        <trans-unit id="533ffdbfecaff72ef5b73243babdff48010c62e3" translate="yes" xml:space="preserve">
          <source>README, INSTALL, release notes, changelogs</source>
          <target state="translated">읽어보기, 설치, 릴리스 정보, 변경 로그</target>
        </trans-unit>
        <trans-unit id="470d8527a3d01cd4a3fa0aa7c03769a6948b44d1" translate="yes" xml:space="preserve">
          <source>README.amiga</source>
          <target state="translated">README.amiga</target>
        </trans-unit>
        <trans-unit id="bd5f281c6e53763c512b64a62b1dbc5e3498f53d" translate="yes" xml:space="preserve">
          <source>README.cygwin</source>
          <target state="translated">README.cygwin</target>
        </trans-unit>
        <trans-unit id="60cd92e33be1c1434cc8683be9e91fdb03ffbe8d" translate="yes" xml:space="preserve">
          <source>README.dos</source>
          <target state="translated">README.dos</target>
        </trans-unit>
        <trans-unit id="922bfc9ad896762e1f22202551026c11023937f3" translate="yes" xml:space="preserve">
          <source>README.os2</source>
          <target state="translated">README.os2</target>
        </trans-unit>
        <trans-unit id="b0c3afe965a614f26f700a578dd90289b911ca42" translate="yes" xml:space="preserve">
          <source>README.perl</source>
          <target state="translated">README.perl</target>
        </trans-unit>
        <trans-unit id="31876ad7c4fa164eaa1a9292560713f19237c9c2" translate="yes" xml:space="preserve">
          <source>README.plan9</source>
          <target state="translated">README.plan9</target>
        </trans-unit>
        <trans-unit id="bdb33e69f1720b7deb819252845ceaa36e2e81ac" translate="yes" xml:space="preserve">
          <source>README.pod</source>
          <target state="translated">README.pod</target>
        </trans-unit>
        <trans-unit id="6b3e64ef3c5318ac15169a07784569d9f4e12561" translate="yes" xml:space="preserve">
          <source>README.vms</source>
          <target state="translated">README.vms</target>
        </trans-unit>
        <trans-unit id="db69da694a77bb707c14a29a590fb116537bf27c" translate="yes" xml:space="preserve">
          <source>README.vos</source>
          <target state="translated">README.vos</target>
        </trans-unit>
        <trans-unit id="41c68db7205269a6d1d13c4ce257a527520c44f3" translate="yes" xml:space="preserve">
          <source>README_vms</source>
          <target state="translated">README_vms</target>
        </trans-unit>
        <trans-unit id="eb1962cbc26755fee15d4db8b14b86dda178492f" translate="yes" xml:space="preserve">
          <source>READONLY LEXICONS</source>
          <target state="translated">즉시 렉시콘</target>
        </trans-unit>
        <trans-unit id="b5a3ab1153348489193a2b107fc0503cdbf5f82d" translate="yes" xml:space="preserve">
          <source>READ_XDIGIT</source>
          <target state="translated">READ_XDIGIT</target>
        </trans-unit>
        <trans-unit id="9227274777f845910cc80f878804555a988622c1" translate="yes" xml:space="preserve">
          <source>REALLY</source>
          <target state="translated">REALLY</target>
        </trans-unit>
        <trans-unit id="8ffa1146c71db97f92e2f04607f075869b2b30ec" translate="yes" xml:space="preserve">
          <source>REASONING</source>
          <target state="translated">REASONING</target>
        </trans-unit>
        <trans-unit id="e76430b07e90f8c8d2921d2cd72512a07ce06563" translate="yes" xml:space="preserve">
          <source>RECIPES</source>
          <target state="translated">RECIPES</target>
        </trans-unit>
        <trans-unit id="8447f2362022482a81d1cf6ed91fac3a8d3dd564" translate="yes" xml:space="preserve">
          <source>RECOMMENDED SUBROUTINE/METHOD OVERRIDES</source>
          <target state="translated">권장 된 약물 / 방법 오버라이드</target>
        </trans-unit>
        <trans-unit id="8e7db067b10fc8249813bd63a0ea6407a26ac0de" translate="yes" xml:space="preserve">
          <source>REFCNT</source>
          <target state="translated">REFCNT</target>
        </trans-unit>
        <trans-unit id="d4730753022e62db3135b00e0df88859d25187e8" translate="yes" xml:space="preserve">
          <source>REFERENCES</source>
          <target state="translated">REFERENCES</target>
        </trans-unit>
        <trans-unit id="17f75a8c771228288489d3ed0be8e963fbbfba68" translate="yes" xml:space="preserve">
          <source>REGEX</source>
          <target state="translated">REGEX</target>
        </trans-unit>
        <trans-unit id="992d441e1d5a432b866f670478b3060e05a3c28e" translate="yes" xml:space="preserve">
          <source>REGEXP Functions</source>
          <target state="translated">REGEXP 기능</target>
        </trans-unit>
        <trans-unit id="b14e18379b628e870f6f6fd151b87b951e254cfd" translate="yes" xml:space="preserve">
          <source>REGISTRY</source>
          <target state="translated">REGISTRY</target>
        </trans-unit>
        <trans-unit id="9d38a5cfeee787c359c7fd682499c0d9ef995e51" translate="yes" xml:space="preserve">
          <source>REGULAR EXPRESSION DIFFERENCES</source>
          <target state="translated">정규 표현의 차이</target>
        </trans-unit>
        <trans-unit id="5e59f903969a9f7836cb496c8ed4243a5e1f9f3b" translate="yes" xml:space="preserve">
          <source>REGULAR EXPRESSIONS</source>
          <target state="translated">정규 표현</target>
        </trans-unit>
        <trans-unit id="2c29e02d995cad9b8885a946bb3c7595f553f5cb" translate="yes" xml:space="preserve">
          <source>RELEASE CONSIDERATIONS</source>
          <target state="translated">릴리스 고려 사항</target>
        </trans-unit>
        <trans-unit id="ce3669c4cafe6d662d6a478d51e778ba7d922846" translate="yes" xml:space="preserve">
          <source>RELEASE HOOKS</source>
          <target state="translated">릴리스 후크</target>
        </trans-unit>
        <trans-unit id="dd03acb9188bb0e265cc49975a06589f80338e36" translate="yes" xml:space="preserve">
          <source>RELIC SUPPORT</source>
          <target state="translated">유물 지원</target>
        </trans-unit>
        <trans-unit id="da675baaaaccfefe8840cfac4dbaa63fca633fd5" translate="yes" xml:space="preserve">
          <source>REPLACEMENT</source>
          <target state="translated">REPLACEMENT</target>
        </trans-unit>
        <trans-unit id="7a45c85de3ea0dcc5d2b7a5ee8dde0f92121b9d1" translate="yes" xml:space="preserve">
          <source>REPLACEMENTLIST</source>
          <target state="translated">REPLACEMENTLIST</target>
        </trans-unit>
        <trans-unit id="e27de7ecbea05354d740812818d6e7277b4c376b" translate="yes" xml:space="preserve">
          <source>REPLACEMENT_CHARACTER_UTF8</source>
          <target state="translated">REPLACEMENT_CHARACTER_UTF8</target>
        </trans-unit>
        <trans-unit id="ba425109137803e3e683ec8acbacf662eb955f0b" translate="yes" xml:space="preserve">
          <source>REPLACING</source>
          <target state="translated">REPLACING</target>
        </trans-unit>
        <trans-unit id="4986beb42112c3c0d549030c505c47fb48eeca1d" translate="yes" xml:space="preserve">
          <source>REPLACING &lt;code&gt;IO::Socket&lt;/code&gt; DEFAULT BEHAVIOUR</source>
          <target state="translated">&lt;code&gt;IO::Socket&lt;/code&gt; 기본 동작 교체</target>
        </trans-unit>
        <trans-unit id="3b855cd1e74344c954f3ab82648a10ac192d0483" translate="yes" xml:space="preserve">
          <source>REPLACING IO::Socket DEFAULT BEHAVIOUR</source>
          <target state="translated">IO :: Socket 기본 동작 교체</target>
        </trans-unit>
        <trans-unit id="fa95d2a9ab9e8fba299d2cca664ea01713832e35" translate="yes" xml:space="preserve">
          <source>REPORTING BUGS</source>
          <target state="translated">버그 신고</target>
        </trans-unit>
        <trans-unit id="24635e62e8ddd92f4cc5da2504b648ac5429a3fd" translate="yes" xml:space="preserve">
          <source>REPOSITORY</source>
          <target state="translated">REPOSITORY</target>
        </trans-unit>
        <trans-unit id="fe377d21347a0f1c2fca85ace81c4464e731dd82" translate="yes" xml:space="preserve">
          <source>REQUIRED FIELDS</source>
          <target state="translated">필수 입력 사항</target>
        </trans-unit>
        <trans-unit id="654940d635d2437b881bdb8207c502ab1ddc4cc7" translate="yes" xml:space="preserve">
          <source>REQUIRED MODULES</source>
          <target state="translated">필요한 모듈</target>
        </trans-unit>
        <trans-unit id="5f121318efb144a8b6001419391a5b20c6c3f189" translate="yes" xml:space="preserve">
          <source>REQUIREMENTS</source>
          <target state="translated">REQUIREMENTS</target>
        </trans-unit>
        <trans-unit id="d4abe5aceb44522d22d765689b2e66a4d13b95b1" translate="yes" xml:space="preserve">
          <source>REQUIRES</source>
          <target state="translated">REQUIRES</target>
        </trans-unit>
        <trans-unit id="cebebd61a604a76b819fde4ab0d23cc350bc7f11" translate="yes" xml:space="preserve">
          <source>RESOURCE CONSTANTS</source>
          <target state="translated">자원 상수</target>
        </trans-unit>
        <trans-unit id="84a1adbee1321bc20135c0d8dc5a30d33e63abca" translate="yes" xml:space="preserve">
          <source>RESOURCES</source>
          <target state="translated">RESOURCES</target>
        </trans-unit>
        <trans-unit id="403124cd35cda7a388d8e4d429350ff90ad96769" translate="yes" xml:space="preserve">
          <source>RESTORE_ERRNO</source>
          <target state="translated">RESTORE_ERRNO</target>
        </trans-unit>
        <trans-unit id="60b26dd43aff3ef987e62f9fc2f2fad92a0eab90" translate="yes" xml:space="preserve">
          <source>RESTORE_LC_NUMERIC</source>
          <target state="translated">RESTORE_LC_NUMERIC</target>
        </trans-unit>
        <trans-unit id="18c30fdfe09a62b00ef42fca3ca524381be1daae" translate="yes" xml:space="preserve">
          <source>RESTRICTIONS</source>
          <target state="translated">RESTRICTIONS</target>
        </trans-unit>
        <trans-unit id="3f16f13a6e4e56262a53083e00fe054e7f080605" translate="yes" xml:space="preserve">
          <source>RESULTS</source>
          <target state="translated">RESULTS</target>
        </trans-unit>
        <trans-unit id="dad39ba788d6c9557da1d5f8eca6a0c122f53cc6" translate="yes" xml:space="preserve">
          <source>RETURN</source>
          <target state="translated">RETURN</target>
        </trans-unit>
        <trans-unit id="a3cfa01beb76631f6551ac88fe216890eda21375" translate="yes" xml:space="preserve">
          <source>RETURN VALUE</source>
          <target state="translated">반품 가치</target>
        </trans-unit>
        <trans-unit id="02a795930835fdd0bf8e932e4c282b7f9d2bcf4d" translate="yes" xml:space="preserve">
          <source>RETVAL</source>
          <target state="translated">RETVAL</target>
        </trans-unit>
        <trans-unit id="2db226ae6a2200c9de52d48b59300653cddbcd5c" translate="yes" xml:space="preserve">
          <source>REVISION</source>
          <target state="translated">REVISION</target>
        </trans-unit>
        <trans-unit id="2883ce0cefe517af5eaa69e7f4cac285cbe4b2a6" translate="yes" xml:space="preserve">
          <source>REVISION HISTORY</source>
          <target state="translated">개정 이력</target>
        </trans-unit>
        <trans-unit id="285e88316b0d14455ae0c18a656f7e4c2153f4a5" translate="yes" xml:space="preserve">
          <source>RFC</source>
          <target state="translated">RFC</target>
        </trans-unit>
        <trans-unit id="38db668f060e18560a74ae3771e265dfe3889471" translate="yes" xml:space="preserve">
          <source>RFC 1321</source>
          <target state="translated">RFC 1321</target>
        </trans-unit>
        <trans-unit id="8aa6bbcd312b3ca11aa46e74bbf26dad68e88ad8" translate="yes" xml:space="preserve">
          <source>RFC 1766: Tags for the Identification of Languages.</source>
          <target state="translated">RFC 1766 : 언어 식별 용 태그.</target>
        </trans-unit>
        <trans-unit id="1c2ba063ee52ea974fa97654e06580546624753f" translate="yes" xml:space="preserve">
          <source>RFC 1925: The Twelve Networking Truths.</source>
          <target state="translated">RFC 1925 : 12 가지 네트워킹 진실.</target>
        </trans-unit>
        <trans-unit id="a67e74554aeb2c83221fd0697d75e4d82c3bccd8" translate="yes" xml:space="preserve">
          <source>RFC 1950</source>
          <target state="translated">RFC 1950</target>
        </trans-unit>
        <trans-unit id="300aeded8e1f09a4c1c6ce3200b4bdedfa081b8d" translate="yes" xml:space="preserve">
          <source>RFC 1951 (optionally)</source>
          <target state="translated">RFC 1951 (옵션)</target>
        </trans-unit>
        <trans-unit id="4b6fc20dacd7531202f028b2a5f35f72a25e23ad" translate="yes" xml:space="preserve">
          <source>RFC 2047, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2047.html&quot;&gt;http://www.faqs.org/rfcs/rfc2047.html&lt;/a&gt; and many other locations.</source>
          <target state="translated">RFC 2047, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2047.html&quot;&gt;http://www.faqs.org/rfcs/rfc2047.html&lt;/a&gt; 및 기타 여러 위치</target>
        </trans-unit>
        <trans-unit id="7f6129b443adb8eb4ab8117c73a7ec03cac31938" translate="yes" xml:space="preserve">
          <source>RFC 2277,</source>
          <target state="translated">RFC 2277,</target>
        </trans-unit>
        <trans-unit id="7f2e6cca0447e13526ac21e21f0f5ede40828910" translate="yes" xml:space="preserve">
          <source>RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2152.txt&quot;&gt;http://www.ietf.org/rfc/rfc2152.txt&lt;/a&gt;</source>
          <target state="translated">RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2152.txt&quot;&gt;http://www.ietf.org/rfc/rfc2152.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c8f0184cbd20d399e4fafa72684d0a3bc66aa63" translate="yes" xml:space="preserve">
          <source>RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;http://www.ietf.org/rfc/rfc2781.txt&lt;/a&gt;,</source>
          <target state="translated">RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;http://www.ietf.org/rfc/rfc2781.txt&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="9a7991d40b82d0c4a446272f5d53049fc02d0908" translate="yes" xml:space="preserve">
          <source>RFC 3066,</source>
          <target state="translated">RFC 3066,</target>
        </trans-unit>
        <trans-unit id="945ba2e2f75806caad55592ebe29a1b3ebf6f309" translate="yes" xml:space="preserve">
          <source>RFC 3164 - The BSD syslog Protocol</source>
          <target state="translated">RFC 3164-BSD syslog 프로토콜</target>
        </trans-unit>
        <trans-unit id="35a8129d80ee0812edff3359c57630a4510d47b2" translate="yes" xml:space="preserve">
          <source>RFC 3195 - Reliable Delivery for syslog</source>
          <target state="translated">RFC 3195-syslog를위한 안정적인 제공</target>
        </trans-unit>
        <trans-unit id="3439cbcbbbc68d52ac61c5b4e9948f19a9174718" translate="yes" xml:space="preserve">
          <source>RFC4627 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;http://www.ietf.org/rfc/rfc4627.txt&lt;/a&gt;)</source>
          <target state="translated">RFC4627 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;http://www.ietf.org/rfc/rfc4627.txt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2bf53210d2912d4f78d76e8e805dc2eb7eeea92e" translate="yes" xml:space="preserve">
          <source>RFC7159 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc7159.txt&quot;&gt;http://www.ietf.org/rfc/rfc7159.txt&lt;/a&gt;)</source>
          <target state="translated">RFC7159 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc7159.txt&quot;&gt;http://www.ietf.org/rfc/rfc7159.txt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="5b3f579b33de306c7070ba1b3df066555b0b610c" translate="yes" xml:space="preserve">
          <source>RFC8259 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc8259.txt&quot;&gt;http://www.ietf.org/rfc/rfc8259.txt&lt;/a&gt;)</source>
          <target state="translated">RFC8259 (&lt;a href=&quot;http://www.ietf.org/rfc/rfc8259.txt&quot;&gt;http://www.ietf.org/rfc/rfc8259.txt&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f63a110e3985b9f7489a8dd961b8827b5aaff064" translate="yes" xml:space="preserve">
          <source>RFCs</source>
          <target state="translated">RFCs</target>
        </trans-unit>
        <trans-unit id="3b3e632ab723286b647cad0535870ece0660f6d3" translate="yes" xml:space="preserve">
          <source>RISC OS perl can emulate Unix filenames with &lt;code&gt;/&lt;/code&gt; as path separator, or go native and use &lt;code&gt;.&lt;/code&gt; for path separator and &lt;code&gt;:&lt;/code&gt; to signal filesystems and disk names.</source>
          <target state="translated">RISC OS perl은 &lt;code&gt;/&lt;/code&gt; 를 경로 구분 기호로 사용 하여 Unix 파일 이름을 에뮬레이트 하거나 네이티브로 사용할 수 있습니다 &lt;code&gt;.&lt;/code&gt; 파일 시스템 및 디스크 이름을 알리기위한 경로 구분 기호 및 &lt;code&gt;:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4054eb80e50d0195d33685c2f02f4383c18ad22b" translate="yes" xml:space="preserve">
          <source>RISKS</source>
          <target state="translated">RISKS</target>
        </trans-unit>
        <trans-unit id="9eb7e01f69887939c0c2ea8731a424cf6844e018" translate="yes" xml:space="preserve">
          <source>RITER</source>
          <target state="translated">RITER</target>
        </trans-unit>
        <trans-unit id="ce92de227e5ca8f56ce47a7f7083251d615bbb6c" translate="yes" xml:space="preserve">
          <source>RMS stream record format.</source>
          <target state="translated">RMS 스트림 레코드 형식.</target>
        </trans-unit>
        <trans-unit id="e9293cd4021d2be8e0346d4819a5adbfc3a7de03" translate="yes" xml:space="preserve">
          <source>ROADMAP</source>
          <target state="translated">ROADMAP</target>
        </trans-unit>
        <trans-unit id="77e7e78b05578758626744dcdf57007c71797399" translate="yes" xml:space="preserve">
          <source>ROOT</source>
          <target state="translated">ROOT</target>
        </trans-unit>
        <trans-unit id="670ec780e0a50ca50c215927161baaa7b818b213" translate="yes" xml:space="preserve">
          <source>ROUTINES</source>
          <target state="translated">ROUTINES</target>
        </trans-unit>
        <trans-unit id="9366697e538ac5c8fcf71b77cfe0ccfde136ac90" translate="yes" xml:space="preserve">
          <source>RPN expression syntax</source>
          <target state="translated">RPN 표현식 구문</target>
        </trans-unit>
        <trans-unit id="f20523ec3a9f3796042e5823b06f9ef5d8e427b0" translate="yes" xml:space="preserve">
          <source>RRR</source>
          <target state="translated">RRR</target>
        </trans-unit>
        <trans-unit id="6771a11eec6289a48258037c9914e3b00de3f1aa" translate="yes" xml:space="preserve">
          <source>RSA Data Security, Inc. makes no representations concerning either the merchantability of this software or the suitability of this software for any particular purpose. It is provided &quot;as is&quot; without express or implied warranty of any kind.</source>
          <target state="translated">RSA Data Security, Inc.는이 소프트웨어의 상품성 또는 특정 목적에의 적합성에 관해 어떠한 진술도하지 않습니다. 어떠한 종류의 명시 적 또는 묵시적 보증없이 &quot;있는 그대로&quot;제공됩니다.</target>
        </trans-unit>
        <trans-unit id="64f2509e3816cc86d80429be424a431bff2d9e5d" translate="yes" xml:space="preserve">
          <source>RSX</source>
          <target state="translated">RSX</target>
        </trans-unit>
        <trans-unit id="a2003382ef5c1c7fdf72a6432aa75f0a3769e2a7" translate="yes" xml:space="preserve">
          <source>RSX (see &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;Prerequisites&quot;&lt;/a&gt;) for these commands to work, and you may need a port of</source>
          <target state="translated">이러한 명령이 작동하려면 RSX ( &lt;a href=&quot;#Prerequisites&quot;&gt;&quot;전제 조건&quot;&lt;/a&gt; 참조 ) 및 다음 포트가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b84b5482f8ea9657c275606b7d97ddc22b265005" translate="yes" xml:space="preserve">
          <source>RSX (see &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;) for these commands to work, and you may need a port of</source>
          <target state="translated">이러한 명령이 작동하려면 RSX ( &lt;a href=&quot;#Prerequisites&quot;&gt;전제 조건&lt;/a&gt; 참조 ) 및 포트가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09a688848d40f14304b5c2aa4866907e65d56982" translate="yes" xml:space="preserve">
          <source>RSYNC Mirrors</source>
          <target state="translated">RSYNC 거울</target>
        </trans-unit>
        <trans-unit id="5511eae951bd620a04e76a09544cf2f828d716d6" translate="yes" xml:space="preserve">
          <source>RT #95409</source>
          <target state="translated">RT # 95409</target>
        </trans-unit>
        <trans-unit id="daa9a26fa5dc3b2d4c895b628e72c46573997b08" translate="yes" xml:space="preserve">
          <source>RT: CPAN's request tracker</source>
          <target state="translated">RT : CPAN의 요청 추적기</target>
        </trans-unit>
        <trans-unit id="296f24af6bdc168947f582ed9d4a01adf35b7897" translate="yes" xml:space="preserve">
          <source>RTFM</source>
          <target state="translated">RTFM</target>
        </trans-unit>
        <trans-unit id="ad173e04d8ecca3dab1c425136333c79954a3f23" translate="yes" xml:space="preserve">
          <source>RUN</source>
          <target state="translated">RUN</target>
        </trans-unit>
        <trans-unit id="8cac8d655edc79a094b3e30b1c55e024f2c6e794" translate="yes" xml:space="preserve">
          <source>RUN CONFIGURE.</source>
          <target state="translated">구성 실행</target>
        </trans-unit>
        <trans-unit id="b13f5492647cca89dd8a96d290c5eafb261ca74d" translate="yes" xml:space="preserve">
          <source>RUNTIME ISSUES FOR PERL ON SOLARIS.</source>
          <target state="translated">SOLARIS에서 Perl에 대한 런타임 문제</target>
        </trans-unit>
        <trans-unit id="7703dc4a0bafad1f92214dfe8b413b2f0775c484" translate="yes" xml:space="preserve">
          <source>RV</source>
          <target state="translated">RV</target>
        </trans-unit>
        <trans-unit id="dcecf19ee89c08bbe643fe69f280fb3616d3a54c" translate="yes" xml:space="preserve">
          <source>RXf_NO_INPLACE_SUBST</source>
          <target state="translated">RXf_NO_INPLACE_SUBST</target>
        </trans-unit>
        <trans-unit id="7c62d65cea89e01f9297fc7f4cd0b29f1c99cf6f" translate="yes" xml:space="preserve">
          <source>RXf_NULL</source>
          <target state="translated">RXf_NULL</target>
        </trans-unit>
        <trans-unit id="13a3f15eadc270d9e691d223c28b1ff4e04f9dae" translate="yes" xml:space="preserve">
          <source>RXf_SKIPWHITE</source>
          <target state="translated">RXf_SKIPWHITE</target>
        </trans-unit>
        <trans-unit id="e61e39658f2047341e3861adfaa716ea4fe24729" translate="yes" xml:space="preserve">
          <source>RXf_SPLIT</source>
          <target state="translated">RXf_SPLIT</target>
        </trans-unit>
        <trans-unit id="8dd23d8196b04c5db6ac808bac9fddc88562b882" translate="yes" xml:space="preserve">
          <source>RXf_START_ONLY</source>
          <target state="translated">RXf_START_ONLY</target>
        </trans-unit>
        <trans-unit id="eff23a715ac38c8fa9f8ff0b8c544377f4953d98" translate="yes" xml:space="preserve">
          <source>RXf_WHITE</source>
          <target state="translated">RXf_WHITE</target>
        </trans-unit>
        <trans-unit id="4c4c370e208c216b8f67b45a9afe337259faf5a2" translate="yes" xml:space="preserve">
          <source>R_CURSOR is the only valid flag at present.</source>
          <target state="translated">R_CURSOR는 현재 유일하게 유효한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="27dcabf4bc9d4bc26e8365f7cbcd0b89fe9f1cae" translate="yes" xml:space="preserve">
          <source>R_RECNOSYNC is the only valid flag at present.</source>
          <target state="translated">R_RECNOSYNC는 현재 유일하게 유효한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="0142508fcc1a59990a5e718d13aae5a93f357a6f" translate="yes" xml:space="preserve">
          <source>Race conditions are caused by unsynchronized access to shared data. Without explicit synchronization, there's no way to be sure that nothing has happened to the shared data between the time you access it and the time you update it. Even this simple code fragment has the possibility of error:</source>
          <target state="translated">경쟁 조건은 공유 데이터에 대한 동기화되지 않은 액세스로 인해 발생합니다. 명시적인 동기화가 없으면 액세스 한 시간과 업데이트 한 시간 사이에 공유 데이터에 아무런 변화가 없는지 확인할 수 없습니다. 이 간단한 코드 조각조차도 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b85f3b7cd0929657b9bd9be9a4a78ee21defd6c" translate="yes" xml:space="preserve">
          <source>Radical rewrites of large chunks of the Perl interpreter have the potential to introduce new bugs.</source>
          <target state="translated">Perl 인터프리터의 큰 덩어리에 대한 급진적 인 재 작성은 새로운 버그를 일으킬 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="be5fa4743a2b3554b929168cb16beddcc9abba29" translate="yes" xml:space="preserve">
          <source>Rafa&amp;euml;l Garcia-Suarez, Bart Lateur, Max Maischein, Anno Siegel, Michael Schwern</source>
          <target state="translated">Rafa&amp;euml;l Garcia-Suarez, Bart Lateur, Max Maischein, Anno Siegel, 마이클 슈 베른</target>
        </trans-unit>
        <trans-unit id="b14d9c3308f836cd95d5d2ae0777a6058e1bed73" translate="yes" xml:space="preserve">
          <source>Rainer Tammer &amp;lt;tammer@tammer.net&amp;gt;</source>
          <target state="translated">레이너 탐머 &amp;lt;tammer@tammer.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0023298eb104a37087c2d3cbae94ab43a267b787" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;confess&lt;/code&gt; from &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;../carp&quot;&gt;Carp의 &lt;/a&gt; &lt;code&gt;confess&lt;/code&gt; 을 사용하여 예외를 제기하십시오 . 예 :</target>
        </trans-unit>
        <trans-unit id="37e53313e9ce29fcda598affc96c4a1d99326b36" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;confess&lt;/code&gt; from &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;carp&quot;&gt;Carp의 &lt;/a&gt; &lt;code&gt;confess&lt;/code&gt; 을 사용하여 예외를 발생 시킵니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="8cb06e0cd5423ee186d2232bd87bcb32b63e7f3b" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;croak&lt;/code&gt; from &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">다음 과 같이 &lt;a href=&quot;../carp&quot;&gt;Carp의 &lt;/a&gt; &lt;code&gt;croak&lt;/code&gt; 을 사용하여 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="bc4d72e485753bdb465bf8b67e7c076768b62e31" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;croak&lt;/code&gt; from &lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;carp&quot;&gt;Carp&lt;/a&gt; 에서 &lt;code&gt;croak&lt;/code&gt; 을 사용하여 예외를 발생 시킵니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="1bbc032959ac0a2a2798ef04b882bb3f54a12542" translate="yes" xml:space="preserve">
          <source>Raku (formerly known as Perl 6) was</source>
          <target state="translated">Raku (이전의 Perl 6)는</target>
        </trans-unit>
        <trans-unit id="4c9f8bffa0a3e8d4fbe838b61c0cb0a7b52ca526" translate="yes" xml:space="preserve">
          <source>Raku is a reinvention of Perl, a language in the same lineage but not compatible. The two are complementary, not mutually exclusive. Raku is not meant to replace Perl, and vice versa. See &lt;a href=&quot;#What-is-Raku-%28Perl-6%29%3F&quot;&gt;&quot;What is Raku (Perl 6)?&quot;&lt;/a&gt; below to find out more.</source>
          <target state="translated">Raku는 동일한 계보이지만 호환되지 않는 언어 인 Perl의 재발 명입니다. 이 두 가지는 상호 배타적이지 않고 상호 보완 적입니다. Raku는 Perl을 대체하기위한 것이 아니며 그 반대의 경우도 마찬가지입니다. &lt;a href=&quot;#What-is-Raku-%28Perl-6%29%3F&quot;&gt;&quot;Raku (Perl 6) 란 무엇입니까?&quot;를&lt;/a&gt; 참조하십시오. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="33be4f083e50e0e91424cbf4a460b387cdc727dc" translate="yes" xml:space="preserve">
          <source>Raku is not intended primarily as a replacement for Perl, but as its own thing - and libraries exist to allow you to call Perl code from Raku programs and vice versa.</source>
          <target state="translated">Raku는 주로 Perl을 대체하기위한 것이 아니라 그 자체로 Raku 프로그램에서 Perl 코드를 호출 할 수 있도록 라이브러리가 존재하며 그 반대의 경우도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="c54a401d07b29f2d86e60a3408b97357c9c95496" translate="yes" xml:space="preserve">
          <source>Randal L. Schwartz writes about profiling in &quot;Speeding up Your Perl Programs&quot; for</source>
          <target state="translated">Randal L. Schwartz는 &quot;Perl 프로그램 속도 향상&quot;에서 프로파일 링에 대해 썼습니다.</target>
        </trans-unit>
        <trans-unit id="aecb3c514c687cc0abeadea10afb2b02d82b5aca" translate="yes" xml:space="preserve">
          <source>Randomize parameter</source>
          <target state="translated">무작위 화 매개 변수</target>
        </trans-unit>
        <trans-unit id="dabd904a6aa4526de078e91d73e56578ee169183" translate="yes" xml:space="preserve">
          <source>Randomly select the given number of elements from the input list. Any given position in the input list will be selected at most once.</source>
          <target state="translated">입력 목록에서 주어진 수의 요소를 무작위로 선택합니다. 입력 목록에서 주어진 위치는 최대 한 번만 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="4c71d303b99a4687836162446b097fdf219d2d78" translate="yes" xml:space="preserve">
          <source>Randy Sims &amp;lt;randys@thepierianspring.org&amp;gt;</source>
          <target state="translated">랜디 심즈 &amp;lt;randys@thepierianspring.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="639e3ac9bf3c15f412dffa9f6f9c04017303eefc" translate="yes" xml:space="preserve">
          <source>Range Operators</source>
          <target state="translated">범위 연산자</target>
        </trans-unit>
        <trans-unit id="b31385d62bdae42a9d6dc60829c035b93206d176" translate="yes" xml:space="preserve">
          <source>Range iterator outside integer range</source>
          <target state="translated">정수 범위를 벗어난 범위 ​​반복기</target>
        </trans-unit>
        <trans-unit id="9bac9d8e3ab0b378aaa92fe98e4aacdcbc341e48" translate="yes" xml:space="preserve">
          <source>Ranges containing &lt;code&gt;\N{...}&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;) transliteration operators are treated differently than the equivalent ranges in regular expression pattersn. They should, but don't, cause the values in the ranges to all be treated as Unicode code points, and not native ones. (&lt;a href=&quot;perlre#Version-8-Regular-Expressions&quot;&gt;Version 8 Regular Expressions in perlre&lt;/a&gt; gives details as to how it should work.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; (및 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; ) 음역 연산자에 &lt;code&gt;\N{...}&lt;/code&gt; 을 포함 하는 범위는 정규 표현식 패턴에서 동등한 범위와 다르게 처리됩니다. 그것들은 범위의 값이 모두 네이티브 코드 포인트가 아닌 유니 코드 코드 포인트로 취급되도록해야합니다. ( &lt;a href=&quot;perlre#Version-8-Regular-Expressions&quot;&gt;perlre에서 버전 8 정규 표현식은&lt;/a&gt; 작동 방법에 관한 세부 사항을 제공합니다.)</target>
        </trans-unit>
        <trans-unit id="ae415ca481c98ed9b21aaafba7dfbccbe4de1fbc" translate="yes" xml:space="preserve">
          <source>Ranges of ASCII printables should be some subset of &quot;0-9&quot;, &quot;A-Z&quot;, or &quot;a-z&quot; in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">ASCII 인쇄 가능 범위는 정규식에서 &quot;0-9&quot;, &quot;AZ&quot;또는 &quot;az&quot;의 일부 하위 집합이어야합니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="cbb09047f0b3b61b3f6ecb9cd9c629f7886b578e" translate="yes" xml:space="preserve">
          <source>Ranges of digits should be from the same group in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">자릿수 범위는 정규식에서 동일한 그룹에 속해야합니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="3ac184a00f5d5e81e131d86e9b47ba228f878d6f" translate="yes" xml:space="preserve">
          <source>Ranges that map to &lt;code&gt;$default&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , behave somewhat differently. For these, each code point maps to itself. So, in the first line in the example, &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(0)))&lt;/a&gt;&lt;/code&gt; is 0, &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(1)))&lt;/a&gt;&lt;/code&gt; is 1, .. &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(96)))&lt;/a&gt;&lt;/code&gt; is 96.</source>
          <target state="translated">&lt;code&gt;$default&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; 에 매핑되는 범위 는 약간 다르게 동작합니다. 이를 위해 각 코드 포인트는 자체적으로 매핑됩니다. 따라서 예제의 첫 번째 줄에서 &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(0)))&lt;/a&gt;&lt;/code&gt; 는 0이고 &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(1)))&lt;/a&gt;&lt;/code&gt; 는 1입니다. &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(96)))&lt;/a&gt;&lt;/code&gt; 는 96입니다. .</target>
        </trans-unit>
        <trans-unit id="eee10f4bda95fa9381991bebca719b2be0694945" translate="yes" xml:space="preserve">
          <source>Ranges that map to &lt;code&gt;$default&lt;/code&gt;, &lt;code&gt;&quot;0&quot;&lt;/code&gt;, behave somewhat differently. For these, each code point maps to itself. So, in the first line in the example, &lt;code&gt;ord(uc(chr(0)))&lt;/code&gt; is 0, &lt;code&gt;ord(uc(chr(1)))&lt;/code&gt; is 1, .. &lt;code&gt;ord(uc(chr(96)))&lt;/code&gt; is 96.</source>
          <target state="translated">&lt;code&gt;$default&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; 에 매핑되는 범위 는 약간 다르게 작동합니다. 이를 위해 각 코드 포인트는 자신에게 매핑됩니다. 따라서 예제의 첫 번째 줄에서 &lt;code&gt;ord(uc(chr(0)))&lt;/code&gt; 는 0, &lt;code&gt;ord(uc(chr(1)))&lt;/code&gt; 는 1, .. &lt;code&gt;ord(uc(chr(96)))&lt;/code&gt; 는 96입니다. .</target>
        </trans-unit>
        <trans-unit id="6ac838b75fa9d93172982fdbee6a0fdb28f19017" translate="yes" xml:space="preserve">
          <source>Raphael_Manfredi!at!pobox.com</source>
          <target state="translated">Raphael_Manfredi!at!pobox.com</target>
        </trans-unit>
        <trans-unit id="54712c3ed00d8ce0c2e3a6b85abbea1e379bb426" translate="yes" xml:space="preserve">
          <source>Rather like Getopt::Std's getopts:</source>
          <target state="translated">Getopt :: Std의 getopts와 같이 :</target>
        </trans-unit>
        <trans-unit id="960b861936010943ac07ac480ae7d8624a71e2d4" translate="yes" xml:space="preserve">
          <source>Rather than calling the specified processor on each individual piece of code (i.e. on the bits between quotelikes), the &lt;code&gt;'code...'&lt;/code&gt; partial filters operate on the entire source code, but with the quotelike bits (and, in the case of &lt;code&gt;'code_no_comments'&lt;/code&gt; , the comments) &quot;blanked out&quot;.</source>
          <target state="translated">&lt;code&gt;'code...'&lt;/code&gt; 부분 필터는 각 개별 코드 조각 (예 : 인용 부호 사이의 비트)에서 지정된 프로세서를 호출하지 않고 전체 소스 코드에서 작동하지만 인용 부호와 같은 비트 (및 &lt;code&gt;'code_no_comments'&lt;/code&gt; , 주석)이 &quot;공백 됨&quot;.</target>
        </trans-unit>
        <trans-unit id="fe2e0d9d9a4f0c59756ebbbef1dbb5ea5380dfb2" translate="yes" xml:space="preserve">
          <source>Rather than calling the specified processor on each individual piece of code (i.e. on the bits between quotelikes), the &lt;code&gt;'code...'&lt;/code&gt; partial filters operate on the entire source code, but with the quotelike bits (and, in the case of &lt;code&gt;'code_no_comments'&lt;/code&gt;, the comments) &quot;blanked out&quot;.</source>
          <target state="translated">&lt;code&gt;'code...'&lt;/code&gt; 부분 필터는 각 개별 코드 조각 (즉, 인용 부호 사이의 비트)에서 지정된 프로세서를 호출하는 대신 전체 소스 코드에서 작동하지만 인용 부호 비트 (그리고 &lt;code&gt;'code_no_comments'&lt;/code&gt; , 주석) &quot; 비어 있음 &quot;.</target>
        </trans-unit>
        <trans-unit id="a8782cdf0f3b4bc2f2a2c02de3c7d4fefe8fe5e7" translate="yes" xml:space="preserve">
          <source>Rather than causing Perl to abort and dump core, the &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; operator invokes the VMS debugger. If you continue to execute the Perl program under the debugger, control will be transferred to the label specified as the argument to &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;, or, if no label was specified, back to the beginning of the program. All other state of the program (</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; 운영자는 코어를 중단하고 덤프하지 않고 VMS 디버거를 호출합니다. 디버거에서 Perl 프로그램을 계속 실행하면 제어는 &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; 의 인수로 지정된 레이블로 전송 되거나 레이블이 지정되지 않은 경우 프로그램의 시작 부분으로 되돌아갑니다. 프로그램의 다른 모든 상태 (</target>
        </trans-unit>
        <trans-unit id="6161808ba047afebcf780d1b7bea62463f8da136" translate="yes" xml:space="preserve">
          <source>Rather than causing Perl to abort and dump core, the &lt;code&gt;dump&lt;/code&gt; operator invokes the VMS debugger. If you continue to execute the Perl program under the debugger, control will be transferred to the label specified as the argument to &lt;code&gt;dump&lt;/code&gt;, or, if no label was specified, back to the beginning of the program. All other state of the program (</source>
          <target state="translated">Perl이 코어를 중단하고 덤프하도록하는 대신 &lt;code&gt;dump&lt;/code&gt; 연산자는 VMS 디버거를 호출합니다. 디버거에서 Perl 프로그램을 계속 실행하면 &lt;code&gt;dump&lt;/code&gt; 에 대한 인수로 지정된 레이블로 제어가 전송 되거나 레이블이 지정되지 않은 경우 프로그램의 시작 부분으로 다시 전송됩니다. 프로그램의 다른 모든 상태 (</target>
        </trans-unit>
        <trans-unit id="a3447d08dbbb43de106eae02bb7588c613a64d47" translate="yes" xml:space="preserve">
          <source>Rather than iterating through the array, &lt;code&gt;@h&lt;/code&gt; like this:</source>
          <target state="translated">&lt;code&gt;@h&lt;/code&gt; 는 배열을 반복하지 않고 다음 과 같이합니다.</target>
        </trans-unit>
        <trans-unit id="0ba567eee2b9c54359919e71a72ac93305e4e900" translate="yes" xml:space="preserve">
          <source>Rather than returning a &lt;code&gt;Pod::ParseTree&lt;/code&gt; , pass the parse-tree as an argument to the referenced subroutine (or named method of the parser object) and return the result instead of the parse-tree object.</source>
          <target state="translated">&lt;code&gt;Pod::ParseTree&lt;/code&gt; 반환하는 대신 구문 분석 트리를 참조 된 서브 루틴 (또는 파서 객체의 명명 된 메서드)에 인수로 전달하고 구문 분석 트리 객체 대신 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="21ad00b67279483cb2f1a049ab8ad14f7abfff12" translate="yes" xml:space="preserve">
          <source>Rather than storing a sentinel at the end of a data item (or a list of items), we could precede the data with a count. Again, we pack keys and values of a hash, preceding each with an unsigned short length count, and up front we store the number of pairs:</source>
          <target state="translated">데이터 항목 (또는 항목 목록)의 끝에 센티넬을 저장하는 대신 데이터 앞에 카운트를 지정할 수 있습니다. 다시, 우리는 각각의 부호없는 짧은 길이 카운트로 시작하는 해시의 키와 값을 압축하고, 먼저 쌍의 수를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="b323fa99aea3713aacf8ae1a80086b503b9a2ebf" translate="yes" xml:space="preserve">
          <source>Rather than this:</source>
          <target state="translated">이보다는 :</target>
        </trans-unit>
        <trans-unit id="24f10661814f8bcbc7d422331f86ee1432e30684" translate="yes" xml:space="preserve">
          <source>Rather than trying to match the input against the keywords, we match the combined set of keywords against the input. The pattern matching operation &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; does several things at the same time. It makes sure that the given command begins where a keyword begins (&lt;code&gt;\b&lt;/code&gt; ). It tolerates abbreviations due to the added &lt;code&gt;\w*&lt;/code&gt; . It tells us the number of matches (&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @matches&lt;/code&gt; ) and all the keywords that were actually matched. You could hardly ask for more.</source>
          <target state="translated">입력을 키워드와 일치시키지 않고 결합 된 키워드 세트를 입력과 일치시킵니다. 패턴 일치 작업 &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; 는 동시에 여러 작업을 수행합니다. 주어진 명령이 키워드가 시작되는 위치 ( &lt;code&gt;\b&lt;/code&gt; )에서 시작되도록합니다 . 추가 된 &lt;code&gt;\w*&lt;/code&gt; 로 인해 약어를 허용 합니다. 일치 횟수 ( &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @matches&lt;/code&gt; )와 실제로 일치하는 모든 키워드를 알려줍니다 . 더 많은 것을 요구할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="f158947cca28289436fc5cb2f9997fa2b47c642a" translate="yes" xml:space="preserve">
          <source>Rather than trying to match the input against the keywords, we match the combined set of keywords against the input. The pattern matching operation &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; does several things at the same time. It makes sure that the given command begins where a keyword begins (&lt;code&gt;\b&lt;/code&gt;). It tolerates abbreviations due to the added &lt;code&gt;\w*&lt;/code&gt;. It tells us the number of matches (&lt;code&gt;scalar @matches&lt;/code&gt;) and all the keywords that were actually matched. You could hardly ask for more.</source>
          <target state="translated">입력을 키워드와 일치 시키려고하지 않고 결합 된 키워드 세트를 입력과 일치시킵니다. 패턴 일치 작업 &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; 는 동시에 여러 작업을 수행합니다. 주어진 명령이 키워드가 시작되는 곳에서 시작하는지 확인합니다 ( &lt;code&gt;\b&lt;/code&gt; ). &lt;code&gt;\w*&lt;/code&gt; 추가로 인해 약어를 허용 합니다. 일치 수 ( &lt;code&gt;scalar @matches&lt;/code&gt; )와 실제로 일치 된 모든 키워드를 알려줍니다 . 더 많은 것을 요구할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="da433cd41e7fb7cd7b029e3b2a46c1f024984c0a" translate="yes" xml:space="preserve">
          <source>Raw</source>
          <target state="translated">Raw</target>
        </trans-unit>
        <trans-unit id="98cb94b52a420b753d7056cb4d301d163b5f24a9" translate="yes" xml:space="preserve">
          <source>Raw output. Instead of producing a human-readable report, outputs a line in machine-readable form for each definition/use of a variable/sub/format.</source>
          <target state="translated">원시 출력. 사람이 읽을 수있는 보고서를 작성하는 대신 변수 / 하위 / 형식의 각 정의 / 사용에 대해 기계가 읽을 수있는 형식으로 한 줄을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="caadded21212ee777b82941fc97c8e21f9d9eb4f" translate="yes" xml:space="preserve">
          <source>Raw tar header -- not useful for most users</source>
          <target state="translated">원시 타르 헤더-대부분의 사용자에게 유용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="5a1f2a96e09d7946423875d4397c45c1e164614a" translate="yes" xml:space="preserve">
          <source>Re-dupe the internal filehandles returned by &lt;code&gt;test2_stdout()&lt;/code&gt; and &lt;code&gt;test2_stderr()&lt;/code&gt; from the current STDOUT and STDERR. You shouldn't need to do this except in very peculiar situations (for example, you're testing a new formatter and you need control over where the formatter is sending its output.)</source>
          <target state="translated">현재 STDOUT 및 STDERR에서 &lt;code&gt;test2_stdout()&lt;/code&gt; 및 &lt;code&gt;test2_stderr()&lt;/code&gt; 의해 반환 된 내부 파일 핸들을 다시 복제 합니다. 매우 특이한 상황을 제외하고는이 작업을 수행 할 필요가 없습니다 (예 : 새 포맷터를 테스트하고 포맷터가 출력을 보내는 위치를 제어해야 함).</target>
        </trans-unit>
        <trans-unit id="647d68a92bffee01f0ecfc9cfacfb204335146b1" translate="yes" xml:space="preserve">
          <source>Re-enable an entry in this BHK structure, by setting the appropriate flag.</source>
          <target state="translated">적절한 플래그를 설정하여이 BHK 구조에서 항목을 다시 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="fc0130c090f93a593b3c3f55d83f059101c8f0bb" translate="yes" xml:space="preserve">
          <source>Re-enable an entry in this BHK structure, by setting the appropriate flag. &lt;code&gt;which&lt;/code&gt; is a preprocessor token indicating which entry to enable. This will assert (under -DDEBUGGING) if the entry doesn't contain a valid pointer.</source>
          <target state="translated">적절한 플래그를 설정하여이 BHK 구조의 항목을 다시 활성화합니다. &lt;code&gt;which&lt;/code&gt; 수있는 항목을 나타내는 토큰 처리기입니다. 항목에 유효한 포인터가 포함되지 않은 경우 (-DDEBUGGING 아래) 주장합니다.</target>
        </trans-unit>
        <trans-unit id="6962342a09593ef4c10ef5d8f74fa7fb66372853" translate="yes" xml:space="preserve">
          <source>Re-wrote and restructured spec in POD syntax</source>
          <target state="translated">POD 구문에서 재 작성 및 재구성 된 사양</target>
        </trans-unit>
        <trans-unit id="d6d7d774d38b0848d649622727f12d464c906f26" translate="yes" xml:space="preserve">
          <source>ReANY</source>
          <target state="translated">ReANY</target>
        </trans-unit>
        <trans-unit id="c7ce193ee0e134e6a49d173985b5d921f2b5ce47" translate="yes" xml:space="preserve">
          <source>Reachability doesn't necessarily mean that the remote host is actually functioning beyond its ability to echo packets. tcp is slightly better at indicating the health of a system than icmp because it uses more of the networking stack to respond.</source>
          <target state="translated">도달 가능성이 반드시 원격 호스트가 실제로 패킷을 에코하는 기능을 넘어 기능하고 있음을 의미하지는 않습니다. tcp는 더 많은 네트워킹 스택을 사용하여 응답하기 때문에 icmp보다 시스템 상태를 나타내는 데 약간 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="bb510d523e3559f1dd31a12b9ab3443e6d1eb043" translate="yes" xml:space="preserve">
          <source>Read &amp;amp; Write to the database.</source>
          <target state="translated">데이터베이스를 읽고 씁니다.</target>
        </trans-unit>
        <trans-unit id="fdce8d24a2a2e7b37555fd2756a9d51eacebc665" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; to help you decide which of &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; (or both) you might want to use: &lt;code&gt;/s&lt;/code&gt; allows dot to include newline, and &lt;code&gt;/m&lt;/code&gt; allows caret and dollar to match next to a newline, not just at the end of the string. You do need to make sure that you've actually got a multiline string in there.</source>
          <target state="translated">&lt;code&gt;/s&lt;/code&gt; 및 &lt;code&gt;/m&lt;/code&gt; (또는 둘 다) 중 어느 것을 사용하고 싶은지 결정하는 데 도움이되는 &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; 를 읽으십시오 . &lt;code&gt;/s&lt;/code&gt; 는 점이 개행을 포함하고 &lt;code&gt;/m&lt;/code&gt; 은 캐럿과 달러가 끝이 아니라 개행 옆에 일치하도록 허용합니다. 문자열의. 실제로 여러 줄 문자열이 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6ec605136e3a8392d3b3c34e52fe32d6a841de5" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;, &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">읽기 &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; , &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; , &lt;a href=&quot;h2xs&quot;&gt;h2xs는&lt;/a&gt; , &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; 및 &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="115c8291258f382229f6753be5b1c82468c882c2" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes from the shared memory segment at &lt;code&gt;POS&lt;/code&gt; . Returns the string read, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if there was an error. The return value becomes tainted. See &lt;a href=&quot;../functions/shmread&quot;&gt;shmread&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POS&lt;/code&gt; 의 공유 메모리 세그먼트에서 &lt;code&gt;SIZE&lt;/code&gt; 바이트를 읽습니다 . 읽은 문자열을 반환하거나 오류가있는 경우 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . 반환 값이 오염됩니다. &lt;a href=&quot;../functions/shmread&quot;&gt;shmread를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d35790b76916aae0aea5bee3d142a6fb3dd76be" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes from the shared memory segment at &lt;code&gt;POS&lt;/code&gt;. Returns the string read, or &lt;code&gt;undef&lt;/code&gt; if there was an error. The return value becomes tainted. See &lt;a href=&quot;shmread&quot;&gt;shmread&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POS&lt;/code&gt; 의 공유 메모리 세그먼트에서 &lt;code&gt;SIZE&lt;/code&gt; 바이트를 읽습니다 . 읽은 문자열을 반환하거나 오류가있는 경우 &lt;code&gt;undef&lt;/code&gt; 를 반환합니다 . 반환 값이 오염됩니다. &lt;a href=&quot;shmread&quot;&gt;shmread를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a25663c537f022e0f372f2cbbe12e60f624c4ef" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes of data from the server and place it into &lt;code&gt;BUFFER&lt;/code&gt; , also performing any &amp;lt;CRLF&amp;gt; translation necessary. &lt;code&gt;TIMEOUT&lt;/code&gt; is optional, if not given, the timeout value from the command connection will be used.</source>
          <target state="translated">서버에서 &lt;code&gt;SIZE&lt;/code&gt; 바이트의 데이터를 읽고 &lt;code&gt;BUFFER&lt;/code&gt; 에 배치하고 필요한 &amp;lt;CRLF&amp;gt; 변환도 수행하십시오. &lt;code&gt;TIMEOUT&lt;/code&gt; 은 선택 사항이며, 지정하지 않으면 명령 연결의 시간 초과 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="96416927781a596ec4c86403cec0cdb4822cafe3" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes of data from the server and place it into &lt;code&gt;BUFFER&lt;/code&gt;, also performing any &amp;lt;CRLF&amp;gt; translation necessary. &lt;code&gt;TIMEOUT&lt;/code&gt; is optional, if not given, the timeout value from the command connection will be used.</source>
          <target state="translated">서버에서 &lt;code&gt;SIZE&lt;/code&gt; 바이트의 데이터를 읽고 &lt;code&gt;BUFFER&lt;/code&gt; 에 배치하고 필요한 &amp;lt;CRLF&amp;gt; 변환도 수행합니다. &lt;code&gt;TIMEOUT&lt;/code&gt; 은 선택 사항이며 지정하지 않으면 명령 연결의 시간 초과 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bcd1cac37334c28f94a5a1f13002c1b9c161efeb" translate="yes" xml:space="preserve">
          <source>Read RFC 1950 files/buffers</source>
          <target state="translated">RFC 1950 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="4c474aa41d748aeded351b2b82635d904b9da7ca" translate="yes" xml:space="preserve">
          <source>Read RFC 1951 files/buffers</source>
          <target state="translated">RFC 1951 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="9674cc4cd21ee5a1adf68bfae1b32a2e0b35087c" translate="yes" xml:space="preserve">
          <source>Read RFC 1952 files/buffers</source>
          <target state="translated">RFC 1952 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="276580730ef1defd3b269e41373718655fc1f8b1" translate="yes" xml:space="preserve">
          <source>Read YAMLish data from iterator</source>
          <target state="translated">반복자에서 YAMLish 데이터 읽기</target>
        </trans-unit>
        <trans-unit id="3401450e1edb9cded52db8b9f6b72e38b73e0be8" translate="yes" xml:space="preserve">
          <source>Read YAMLish from a &lt;a href=&quot;../iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and return the data structure it represents.</source>
          <target state="translated">&lt;a href=&quot;../iterator&quot;&gt;TAP :: Parser :: Iterator&lt;/a&gt; 에서 YAMLish를 읽고 그것이 나타내는 데이터 구조를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="e3096c1cbafe76a33a2d02527fbc04d128e472f7" translate="yes" xml:space="preserve">
          <source>Read YAMLish from a &lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and return the data structure it represents.</source>
          <target state="translated">&lt;a href=&quot;TAP::Parser::Iterator&quot;&gt;TAP :: Parser :: Iterator&lt;/a&gt; 에서 YAMLish를 읽고 그것이 나타내는 데이터 구조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="941b148e1edab00bee2330ed7ac82ddf4e74edf3" translate="yes" xml:space="preserve">
          <source>Read a message from the queue. Returns the type of the message read. See &lt;a href=&quot;../functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;. The BUF becomes tainted.</source>
          <target state="translated">큐에서 메시지를 읽습니다. 읽은 메시지의 유형을 반환합니다. &lt;a href=&quot;../functions/msgrcv&quot;&gt;msgrcv를&lt;/a&gt; 참조하십시오 . BUF가 오염됩니다.</target>
        </trans-unit>
        <trans-unit id="8e5c7827fa305552a8026faac8dc876ce072c543" translate="yes" xml:space="preserve">
          <source>Read a message from the queue. Returns the type of the message read. See &lt;a href=&quot;http://man.he.net/man2/msgrcv&quot;&gt;msgrcv(2)&lt;/a&gt;. The BUF becomes tainted.</source>
          <target state="translated">대기열에서 메시지를 읽습니다. 읽은 메시지의 유형을 반환합니다. &lt;a href=&quot;http://man.he.net/man2/msgrcv&quot;&gt;msgrcv (2)를&lt;/a&gt; 참조하십시오 . BUF가 오염됩니다.</target>
        </trans-unit>
        <trans-unit id="3e2328757ae1c800d4e10ae414e17971850a69f5" translate="yes" xml:space="preserve">
          <source>Read a single character.</source>
          <target state="translated">단일 문자를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="a07c6817a15867b0dc47cde38731ba9873326685" translate="yes" xml:space="preserve">
          <source>Read a single line</source>
          <target state="translated">한 줄 읽기</target>
        </trans-unit>
        <trans-unit id="553549240039452847251f6622903ab2d2337784" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; and &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; and &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; and &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;.</source>
          <target state="translated">정보를 참조 &lt;a href=&quot;functions/do&quot;&gt;할&lt;/a&gt; 및 &lt;a href=&quot;functions/eval&quot;&gt;평가&lt;/a&gt; 와 &lt;a href=&quot;functions/require&quot;&gt;요구&lt;/a&gt; 및 &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0a436a3c7281054fa4994ba5b4088adc1430079" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;perlfunc#do&quot;&gt;&quot;do&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#eval&quot;&gt;&quot;eval&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#require&quot;&gt;&quot;require&quot; in perlfunc&lt;/a&gt; and &lt;a href=&quot;perlfunc#use&quot;&gt;&quot;use&quot; in perlfunc&lt;/a&gt;.</source>
          <target state="translated">에 대해 읽어 &lt;a href=&quot;perlfunc#do&quot;&gt;을 perlfunc에 &quot;할&quot;&lt;/a&gt; 및 &lt;a href=&quot;perlfunc#eval&quot;&gt;을 perlfunc에서 &quot;평가&quot;&lt;/a&gt; 및 &lt;a href=&quot;perlfunc#require&quot;&gt;을 perlfunc의 &quot;요구&quot;&lt;/a&gt; 와 &lt;a href=&quot;perlfunc#use&quot;&gt;을 perlfunc에서 &quot;사용&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f501e785d8f60607eb8fd29020b8ae54ebe01044" translate="yes" xml:space="preserve">
          <source>Read about back-quotes and about &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlfunc&quot;&gt;perlfunc의&lt;/a&gt; 역 따옴표 및 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 에 대해 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="b73a5af46a324bd716dbf683b98851ca267b84bb" translate="yes" xml:space="preserve">
          <source>Read about back-quotes and about &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;exec&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; 에서 역 따옴표와 &lt;code&gt;system&lt;/code&gt; 및 &lt;code&gt;exec&lt;/code&gt; 에 대해 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="007c6ee7681668b24b579a3ecbbdba86f7191bbe" translate="yes" xml:space="preserve">
          <source>Read access via Git</source>
          <target state="translated">Git을 통한 읽기 액세스</target>
        </trans-unit>
        <trans-unit id="e6736eaa1ab69e3d90ab95af13fafa160ed47c93" translate="yes" xml:space="preserve">
          <source>Read access via rsync</source>
          <target state="translated">rsync를 통한 읽기 액세스</target>
        </trans-unit>
        <trans-unit id="78e2b2049458202a1fc5f7c18fb55aa58bb1e225" translate="yes" xml:space="preserve">
          <source>Read access via the web</source>
          <target state="translated">웹을 통한 읽기 액세스</target>
        </trans-unit>
        <trans-unit id="9d2a45482290927376f8cd0f8037fb3152d80e59" translate="yes" xml:space="preserve">
          <source>Read ahead.</source>
          <target state="translated">미리 읽어보세요.</target>
        </trans-unit>
        <trans-unit id="bb2c8ec09bc65616d8ed5815b01859080def7101" translate="yes" xml:space="preserve">
          <source>Read and execute debugger commands from</source>
          <target state="translated">에서 디버거 명령을 읽고 실행</target>
        </trans-unit>
        <trans-unit id="00ebc21a3cf3bbcb1e390623db3b54ac9cad53d9" translate="yes" xml:space="preserve">
          <source>Read and match distroprefs</source>
          <target state="translated">distroprefs를 읽고 일치</target>
        </trans-unit>
        <trans-unit id="1de275b3a330a676e1b3a19bf0483a26f7bea910" translate="yes" xml:space="preserve">
          <source>Read and write a subset of YAML for CPAN Meta files</source>
          <target state="translated">CPAN 메타 파일에 대한 YAML 서브 세트 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="d3dae8f537b10a514d29cfd0d4064e961135e516" translate="yes" xml:space="preserve">
          <source>Read bzip2 files/buffers</source>
          <target state="translated">bzip2 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="c2bc6c064289f3da35d9643e076b2182fbb33d0c" translate="yes" xml:space="preserve">
          <source>Read check compare operation.</source>
          <target state="translated">확인 비교 작업을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="5f496354721b34074a6d09386d4dfd90a7648131" translate="yes" xml:space="preserve">
          <source>Read data from the remote server until a line consisting of a single '.'. Any lines starting with '..' will have one of the '.'s removed.</source>
          <target state="translated">단일 '.'로 구성된 행까지 원격 서버에서 데이터를 읽습니다. '..'로 시작하는 모든 줄은 '.'중 하나가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="58cff263782110131a866571e46995cb57864bc1" translate="yes" xml:space="preserve">
          <source>Read from a file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; . If the buffer &lt;code&gt;$buf&lt;/code&gt; is not large enough for the read then Perl will extend it to make room for the request.</source>
          <target state="translated">파일에서 읽습니다. &lt;code&gt;POSIX::open&lt;/code&gt; 을 호출하여 얻은 것과 같은 파일 디스크립터를 사용합니다 . 버퍼 &lt;code&gt;$buf&lt;/code&gt; 가 읽기에 충분히 크지 않으면 Perl은이를 확장하여 요청을위한 공간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="aed9d1fae1d177b75be64cba7887414ab09775c2" translate="yes" xml:space="preserve">
          <source>Read from a file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt;. If the buffer &lt;code&gt;$buf&lt;/code&gt; is not large enough for the read then Perl will extend it to make room for the request.</source>
          <target state="translated">파일에서 읽습니다. 이것은 &lt;code&gt;POSIX::open&lt;/code&gt; 을 호출하여 얻은 것과 같은 파일 설명자를 사용합니다 . 버퍼 &lt;code&gt;$buf&lt;/code&gt; 가 읽기에 충분하지 않은 경우 Perl은 요청을위한 공간을 만들기 위해 버퍼 를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="18cc7e8fd48d963fa396269e4c2ab7dfc690c7a1" translate="yes" xml:space="preserve">
          <source>Read on...</source>
          <target state="translated">읽어...</target>
        </trans-unit>
        <trans-unit id="38a567871f2319ef4608911cbaae63388beacceb" translate="yes" xml:space="preserve">
          <source>Read some bytes from the file. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</source>
          <target state="translated">파일에서 몇 바이트를 읽습니다. 실제로 읽은 바이트 수, 파일 끝에서 0, 오류시 undef를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="928d9235e436434ac3a507c46f10d425ed6c1452" translate="yes" xml:space="preserve">
          <source>Read some bytes from the scalar. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</source>
          <target state="translated">스칼라에서 몇 바이트를 읽습니다. 실제로 읽은 바이트 수 (파일 끝에서 0, 오류시 undef)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6da6ecf1c98213777d74b19843e6892f664218a5" translate="yes" xml:space="preserve">
          <source>Read the</source>
          <target state="translated">읽기</target>
        </trans-unit>
        <trans-unit id="445df6f2b2a25f8116b39a5d89fac539c3d48c64" translate="yes" xml:space="preserve">
          <source>Read the FAQs and documentation specific to the port of perl to your operating system (eg, &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;, &lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt;, ...). These should contain more detailed information on the vagaries of your perl.</source>
          <target state="translated">운영 체제에 대한 perl 포트 관련 FAQ 및 설명서를 읽으십시오 (예 : &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt; , &lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt; 등). 여기에는 펄의 화장실에 대한 자세한 정보가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a3f312a281ee3fabbb4644cfca212e21dc23d819" translate="yes" xml:space="preserve">
          <source>Read the given tar file into memory. The first argument can either be the name of a file or a reference to an already open filehandle (or an IO::Zlib object if it's compressed)</source>
          <target state="translated">제공된 tar 파일을 메모리로 읽습니다. 첫 번째 인수는 파일 이름이거나 이미 열려있는 파일 핸들에 대한 참조이거나 압축 된 경우 IO :: Zlib 객체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b74d7333cb35735ec7d211619b3f8a0c7fbd713" translate="yes" xml:space="preserve">
          <source>Read zip files/buffers</source>
          <target state="translated">zip 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="d5283d26eb840638e1f550dc557572ba6542f3d4" translate="yes" xml:space="preserve">
          <source>Read-Only Values</source>
          <target state="translated">읽기 전용 값</target>
        </trans-unit>
        <trans-unit id="5683a14e485b7046ea3107db40da5d887aa290ef" translate="yes" xml:space="preserve">
          <source>Read-only access to the data in the file.</source>
          <target state="translated">파일의 데이터에 대한 읽기 전용 액세스</target>
        </trans-unit>
        <trans-unit id="bdc983681241a5008bf0f2decf61749fdd356f1d" translate="yes" xml:space="preserve">
          <source>Read-only optrees</source>
          <target state="translated">읽기 전용 optree</target>
        </trans-unit>
        <trans-unit id="cbcc1694c685273c78534f0d3e2cd46541b02c0d" translate="yes" xml:space="preserve">
          <source>Read/Write/Modify Perl/XS typemap files</source>
          <target state="translated">Perl / XS 타입 맵 파일 읽기 / 쓰기 / 수정</target>
        </trans-unit>
        <trans-unit id="d7fd01a502310e8357802950d90a33ad1c88b094" translate="yes" xml:space="preserve">
          <source>ReadFile</source>
          <target state="translated">ReadFile</target>
        </trans-unit>
        <trans-unit id="5225f01f4c17d05f03bd8a6c2a2dfc128c7f65d7" translate="yes" xml:space="preserve">
          <source>ReadMe.txt</source>
          <target state="translated">ReadMe.txt</target>
        </trans-unit>
        <trans-unit id="5aee42c0aa7d8176e37f9692354e87f3f5b4679f" translate="yes" xml:space="preserve">
          <source>Readers have been known to skip important parts of &lt;a href=&quot;../perlguts&quot;&gt;perlguts&lt;/a&gt;, causing much frustration for all.</source>
          <target state="translated">독자들은 &lt;a href=&quot;../perlguts&quot;&gt;perlguts의&lt;/a&gt; 중요한 부분을 건너 뛰어 많은 사람들에게 좌절감을 안겨주 는 것으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="debc59b4b15093cfa12c8a60b65cc716319f2d65" translate="yes" xml:space="preserve">
          <source>Readers have been known to skip important parts of &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, causing much frustration for all.</source>
          <target state="translated">독자들은 &lt;a href=&quot;perlguts&quot;&gt;perlguts의&lt;/a&gt; 중요한 부분을 건너 뛰는 것으로 알려져있어 모두에게 많은 좌절감을 안겨줍니다.</target>
        </trans-unit>
        <trans-unit id="ecba0bec4829317939306f304d19e964a7a84e1d" translate="yes" xml:space="preserve">
          <source>Reading &lt;code&gt;Devel::Peek&lt;/code&gt; output takes a bit of practise, so let's go through it line by line.</source>
          <target state="translated">Reading &lt;code&gt;Devel::Peek&lt;/code&gt; 출력에는 약간의 연습이 필요하므로 한 줄씩 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="720629d599316203605d35ccc57d80ad0c87c1df" translate="yes" xml:space="preserve">
          <source>Reading an input line does not split it for you. You get to split it to an array yourself. And the split() operator has different arguments than &lt;b&gt;awk&lt;/b&gt;'s.</source>
          <target state="translated">입력 라인을 읽는다고해서 분리되지는 않습니다. 직접 배열로 나눕니다. split () 연산자는 &lt;b&gt;awk&lt;/b&gt; 와 다른 인수를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="8d311759432844217fe6bc8debb947ac2204cfa0" translate="yes" xml:space="preserve">
          <source>Reading bgzip files with IO::Uncompress::Gunzip</source>
          <target state="translated">IO :: Uncompress :: Gunzip으로 bgzip 파일 읽기</target>
        </trans-unit>
        <trans-unit id="aca2d568455adb5d39f1f5a67763764982820867" translate="yes" xml:space="preserve">
          <source>Reading from &lt;code&gt;STDIN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;STDIN&lt;/code&gt; 에서 읽기</target>
        </trans-unit>
        <trans-unit id="43278435f6048011353ab3e1550aec2934094377" translate="yes" xml:space="preserve">
          <source>Reading from STDIN</source>
          <target state="translated">STDIN에서 읽기</target>
        </trans-unit>
        <trans-unit id="89c5bc3ff84bf2233b585e1ddc78bf444ba92547" translate="yes" xml:space="preserve">
          <source>Reading from a Filehandle and writing to an in-memory buffer</source>
          <target state="translated">파일 핸들에서 읽고 메모리 내 버퍼에 쓰기</target>
        </trans-unit>
        <trans-unit id="95bcf633adbf815edf186e3fb8ac37d67ee56f62" translate="yes" xml:space="preserve">
          <source>Reading from a file:</source>
          <target state="translated">파일에서 읽기 :</target>
        </trans-unit>
        <trans-unit id="a3daaeaef0f24df245aaa3148b442905754f46bb" translate="yes" xml:space="preserve">
          <source>Reading in a file that you know happens to be encoded in one of the Unicode or legacy encodings does not magically turn the data into Unicode in Perl's eyes. To do that, specify the appropriate layer when opening files</source>
          <target state="translated">유니 코드 또는 레거시 인코딩 중 하나로 인코딩 된 것으로 알려진 파일을 읽더라도 Perl의 눈에 데이터가 마법으로 유니 코드로 바뀌지는 않습니다. 그렇게하려면 파일을 열 때 적절한 레이어를 지정하십시오</target>
        </trans-unit>
        <trans-unit id="4846fec17a47b45717c157bbd8a0f9bd1ad2e3c9" translate="yes" xml:space="preserve">
          <source>Reading in the whole file at one time is called slurping. It can be useful but it may be a memory hog. Most text file processing can be done a line at a time with Perl's looping constructs.</source>
          <target state="translated">한 번에 전체 파일을 읽는 것을 slurping이라고합니다. 유용 할 수 있지만 메모리 호그 일 수 있습니다. 대부분의 텍스트 파일 처리는 Perl의 루핑 구문으로 한 번에 한 줄씩 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9ebc55e69603ca376de6c992a9642942d55aa0d" translate="yes" xml:space="preserve">
          <source>Reading/writing bytes from/to :utf8 handles.</source>
          <target state="translated">: utf8 핸들에서 /로 바이트 읽기 / 쓰기.</target>
        </trans-unit>
        <trans-unit id="3765f01b49c43d45e4334a57b6fc21c7972c3951" translate="yes" xml:space="preserve">
          <source>Readline Support / History in the Debugger</source>
          <target state="translated">디버거의 Readline 지원 / 히스토리</target>
        </trans-unit>
        <trans-unit id="fd63187370525346d69be8508f8b50f415e9e87c" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;$size&lt;/code&gt; bytes from the compressed file into &lt;code&gt;$buffer&lt;/code&gt; . If &lt;code&gt;$size&lt;/code&gt; is not specified, it will default to 4096. If the scalar &lt;code&gt;$buffer&lt;/code&gt; is not large enough, it will be extended automatically.</source>
          <target state="translated">압축 파일에서 &lt;code&gt;$size&lt;/code&gt; 바이트를 &lt;code&gt;$buffer&lt;/code&gt; 로 읽습니다 . 경우 &lt;code&gt;$size&lt;/code&gt; 지정되지 않은 스칼라 경우, 4096로 설정됩니다 &lt;code&gt;$buffer&lt;/code&gt; , 자동 연장됩니다 충분한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a58a70a6e50fefa8c4f40ab5e8413ab2cdce14d2" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;$size&lt;/code&gt; bytes from the compressed file into &lt;code&gt;$buffer&lt;/code&gt;. If &lt;code&gt;$size&lt;/code&gt; is not specified, it will default to 4096. If the scalar &lt;code&gt;$buffer&lt;/code&gt; is not large enough, it will be extended automatically.</source>
          <target state="translated">압축 파일에서 &lt;code&gt;$size&lt;/code&gt; 바이트를 &lt;code&gt;$buffer&lt;/code&gt; 로 읽어 옵니다 . 경우 &lt;code&gt;$size&lt;/code&gt; 지정되지 않은 스칼라 경우, 4096로 설정됩니다 &lt;code&gt;$buffer&lt;/code&gt; , 자동 연장됩니다 충분한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="206a7f5e7297aa5bd7492bad4e008ac4bc46e49d" translate="yes" xml:space="preserve">
          <source>Reads SIZE bytes from a memory segment at ADDR starting at position POS. VAR must be a variable that will hold the data read. Returns true if successful, or false if there is an error. memread() taints the variable.</source>
          <target state="translated">POSI 위치에서 시작하여 ADDR의 메모리 세그먼트에서 SIZE 바이트를 읽습니다. VAR은 읽은 데이터를 보유 할 변수 여야합니다. 성공하면 true를, 오류가 있으면 false를 반환합니다. memread ()는 변수를 오염시킵니다.</target>
        </trans-unit>
        <trans-unit id="799d4c2bbc52577dcbc3f454b2dcc4d5b936f889" translate="yes" xml:space="preserve">
          <source>Reads a block of compressed data (the size of the compressed block is determined by the &lt;code&gt;Buffer&lt;/code&gt; option in the constructor), uncompresses it and writes any uncompressed data into &lt;code&gt;$buffer&lt;/code&gt; . If the &lt;code&gt;Append&lt;/code&gt; parameter is set in the constructor, the uncompressed data will be appended to the &lt;code&gt;$buffer&lt;/code&gt; parameter. Otherwise &lt;code&gt;$buffer&lt;/code&gt; will be overwritten.</source>
          <target state="translated">압축 된 데이터 블록을 읽고 (압축 된 블록의 크기 는 생성자 의 &lt;code&gt;Buffer&lt;/code&gt; 옵션에 의해 결정됨 ) 압축을 풀고 압축되지 않은 데이터를 &lt;code&gt;$buffer&lt;/code&gt; 씁니다 . &lt;code&gt;Append&lt;/code&gt; 매개 변수가 생성자에 설정되어 있으면 압축되지 않은 데이터가 &lt;code&gt;$buffer&lt;/code&gt; 매개 변수에 추가됩니다 . 그렇지 않으면 &lt;code&gt;$buffer&lt;/code&gt; 를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="2650257dc905190add8fc86376aaa1fd9ceb477d" translate="yes" xml:space="preserve">
          <source>Reads a block of compressed data (the size of the compressed block is determined by the &lt;code&gt;Buffer&lt;/code&gt; option in the constructor), uncompresses it and writes any uncompressed data into &lt;code&gt;$buffer&lt;/code&gt;. If the &lt;code&gt;Append&lt;/code&gt; parameter is set in the constructor, the uncompressed data will be appended to the &lt;code&gt;$buffer&lt;/code&gt; parameter. Otherwise &lt;code&gt;$buffer&lt;/code&gt; will be overwritten.</source>
          <target state="translated">압축 된 데이터 블록을 읽고 (압축 된 블록의 크기 는 생성자 의 &lt;code&gt;Buffer&lt;/code&gt; 옵션에 의해 결정됨 ) 압축을 풀고 압축되지 않은 데이터를 &lt;code&gt;$buffer&lt;/code&gt; 씁니다 . 생성자에 &lt;code&gt;Append&lt;/code&gt; 매개 변수가 설정되어 있으면 압축되지 않은 데이터가 &lt;code&gt;$buffer&lt;/code&gt; 매개 변수에 추가됩니다 . 그렇지 않으면 &lt;code&gt;$buffer&lt;/code&gt; 를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="a18e9d62cd14286629fc6e76754c10fff378cc5e" translate="yes" xml:space="preserve">
          <source>Reads a single line.</source>
          <target state="translated">한 줄을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="60ee44c28be29184ce4a73c61b1ec7edf4671344" translate="yes" xml:space="preserve">
          <source>Reads are permitted i.e. opened &quot;r&quot; or &quot;w+&quot; (or even &quot;a+&quot; - ick).</source>
          <target state="translated">&quot;r&quot;또는 &quot;w +&quot;(또는 &quot;a +&quot;-ick)을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e73f5d1f2a71ec4ec144dc42ca53439f338cb7c6" translate="yes" xml:space="preserve">
          <source>Reads bytes from a file or file-like device. Returns a true value if the read operation was successful. For failure, returns a false value and sets &lt;code&gt;fileLastError()&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; for the reason for the failure.</source>
          <target state="translated">파일 또는 파일 류 장치에서 바이트를 읽습니다. 읽기 작업이 성공하면 참 값을 반환합니다. 실패의 경우 거짓 값을 반환 하고 실패 이유에 대해 &lt;code&gt;fileLastError()&lt;/code&gt; 및 &lt;code&gt;$^E&lt;/code&gt; 를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="42f0afdf9d8c38585692746943b6766dbe732c8a" translate="yes" xml:space="preserve">
          <source>Reads from</source>
          <target state="translated">에서 읽습니다</target>
        </trans-unit>
        <trans-unit id="50c8ae4436eb90307a38380dc11b082198b860e7" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;a href=&quot;#undef-EXPR&quot;&gt;&lt;code&gt;undef&lt;/code&gt;&lt;/a&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&lt;code&gt;$/&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; in &lt;a href=&quot;english&quot;&gt;English&lt;/a&gt;). See &lt;a href=&quot;perlvar#%24%2F&quot;&gt;&quot;$/&quot; in perlvar&lt;/a&gt;.</source>
          <target state="translated">typeglob이 EXPR (또는 EXPR이 제공되지 않은 경우 &lt;code&gt;*ARGV&lt;/code&gt; )에 포함 된 파일 핸들에서 읽습니다 . 스칼라 컨텍스트에서 각 호출은 파일 끝에 도달 할 때까지 다음 줄을 읽고 반환하며, 이후 호출은 &lt;a href=&quot;#undef-EXPR&quot;&gt; &lt;code&gt;undef&lt;/code&gt; 를&lt;/a&gt; 반환합니다 . 목록 컨텍스트에서 파일 끝에 도달 할 때까지 읽고 행 목록을 리턴합니다. 여기서 사용 된 &quot;line&quot;의 개념은 &lt;a href=&quot;perlvar#%24%2F&quot;&gt; &lt;code&gt;$/&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;english&quot;&gt;영어로 &lt;/a&gt; &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 로 정의한 모든 것 입니다. &lt;a href=&quot;perlvar#%24%2F&quot;&gt;perlvar의 &quot;$ /&quot;를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d2dc0c11f98a08996cb17f6c2572663d3f74f26f" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">typeglob가 EXPR에 포함 된 파일 핸들 (또는 EXPR이 제공되지 않은 경우 &lt;code&gt;*ARGV&lt;/code&gt; ) 에서 읽습니다 . 스칼라 컨텍스트에서 각 호출은 파일 끝에 도달 할 때까지 다음 행을 읽고 리턴하며, 후속 호출은 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 . 목록 컨텍스트에서 파일 끝에 도달 할 때까지 읽고 행 목록을 리턴합니다. 여기에 사용 된 &quot;라인&quot;개념은 &lt;code&gt;$/&lt;/code&gt; 또는 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 정의한 모든 개념입니다 ). &lt;a href=&quot;perlvar#%24%2f&quot;&gt;perlvar에서 $ /를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b4d819b245f8997ea46d716718b7b5137afee52" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">typeglob가 EXPR에 포함 된 파일 핸들 (또는 EXPR이 제공되지 않은 경우 &lt;code&gt;*ARGV&lt;/code&gt; ) 에서 읽습니다 . 스칼라 컨텍스트에서 각 호출은 파일 끝에 도달 할 때까지 다음 행을 읽고 리턴하며, 후속 호출은 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 . 목록 컨텍스트에서 파일 끝에 도달 할 때까지 읽고 행 목록을 리턴합니다. 여기에 사용 된 &quot;라인&quot;개념은 &lt;code&gt;$/&lt;/code&gt; 또는 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 정의한 모든 개념입니다 ). &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;perlvar에서 $ /를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="213d34b4c41155066cb47829608b83bcac6c4f80" translate="yes" xml:space="preserve">
          <source>Reads in the next chunk of text to be lexed, appending it to &lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt;linestr&quot;&lt;/a&gt;. This should be called when lexing code has looked to the end of the current chunk and wants to know more. It is usual, but not necessary, for lexing to have consumed the entirety of the current chunk at this time.</source>
          <target state="translated">렉싱 할 다음 텍스트 청크를 읽어 &lt;a href=&quot;#PL_parser-%3Elinestr&quot;&gt;&quot;PL_parser-&amp;gt; linestr&quot;에&lt;/a&gt; 추가합니다 . 렉싱 코드가 현재 청크의 끝을보고 더 알고 싶을 때 호출해야합니다. 이 시점에서 렉싱이 현재 청크 전체를 소비하는 것은 일반적이지만 반드시 필요한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5686d4cf607b2427e345e3a17783aa2d6f48772a" translate="yes" xml:space="preserve">
          <source>Reads in the next chunk of text to be lexed, appending it to &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;. This should be called when lexing code has looked to the end of the current chunk and wants to know more. It is usual, but not necessary, for lexing to have consumed the entirety of the current chunk at this time.</source>
          <target state="translated">&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr에&lt;/a&gt; 추가하여 어휘화할 다음 텍스트 청크를 읽습니다 . 렉싱 코드가 현재 청크의 끝을보고 자세한 내용을 알고 싶을 때 호출해야합니다. 이 시점에서 렉싱이 현재 청크 전체를 소비하는 것이 일반적이지만 반드시 필요한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0e502d5f8379d8469e98c1ca45f22f6d653d22e2" translate="yes" xml:space="preserve">
          <source>Reads into</source>
          <target state="translated">읽습니다</target>
        </trans-unit>
        <trans-unit id="b4633f7897c4780006d0f6007b4afc7f1f655f8b" translate="yes" xml:space="preserve">
          <source>Reads into &lt;code&gt;len&lt;/code&gt; the offset from &lt;code&gt;SvPVX&lt;/code&gt; back to the true start of the allocated buffer, which will be non-zero if &lt;code&gt;sv_chop&lt;/code&gt; has been used to efficiently remove characters from start of the buffer. Implemented as a macro, which takes the address of &lt;code&gt;len&lt;/code&gt;, which must be of type &lt;code&gt;STRLEN&lt;/code&gt;. Evaluates &lt;code&gt;sv&lt;/code&gt; more than once. Sets &lt;code&gt;len&lt;/code&gt; to 0 if &lt;code&gt;SvOOK(sv)&lt;/code&gt; is false.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; 으로 &lt;code&gt;SvPVX&lt;/code&gt; 의 오프셋을 다시 할당 된 버퍼의 실제 시작으로 읽어들 입니다. &lt;code&gt;sv_chop&lt;/code&gt; 가 버퍼 시작에서 문자를 효율적으로 제거하는 데 사용 된 경우 0이 아닙니다 . &lt;code&gt;len&lt;/code&gt; 주소를 취하는 매크로로 구현되며 &lt;code&gt;STRLEN&lt;/code&gt; 유형이어야합니다 . &lt;code&gt;sv&lt;/code&gt; 를 두 번 이상 평가합니다 . &lt;code&gt;SvOOK(sv)&lt;/code&gt; 이 거짓 이면 &lt;code&gt;len&lt;/code&gt; 을 0으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="a7c14344c48adcd52ee096bd40b5d4a622c40abc" translate="yes" xml:space="preserve">
          <source>Reads optional spaces, in Perl style, in the text currently being lexed. The spaces may include ordinary whitespace characters and Perl-style comments. &lt;code&gt;#line&lt;/code&gt; directives are processed if encountered. &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; is moved past the spaces, so that it points at a non-space character (or the end of the input text).</source>
          <target state="translated">현재 렉싱되는 텍스트에서 Perl 스타일의 선택적 공백을 읽습니다. 공백에는 일반 공백 문자와 Perl 스타일 주석이 포함될 수 있습니다. &lt;code&gt;#line&lt;/code&gt; 지시문이 있으면 처리됩니다. &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt; bufptr&quot;&lt;/a&gt; 은 공백이 아닌 문자 (또는 입력 텍스트의 끝)를 가리 키도록 공백을지나 이동합니다.</target>
        </trans-unit>
        <trans-unit id="0c3577c9b285cf2945e65a6e8c5f9d480cfc5c7d" translate="yes" xml:space="preserve">
          <source>Reads optional spaces, in Perl style, in the text currently being lexed. The spaces may include ordinary whitespace characters and Perl-style comments. &lt;code&gt;#line&lt;/code&gt; directives are processed if encountered. &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; is moved past the spaces, so that it points at a non-space character (or the end of the input text).</source>
          <target state="translated">현재 어휘 분석중인 텍스트에서 선택적 공백을 Perl 스타일로 읽습니다. 공백에는 일반 공백 문자와 Perl 스타일 주석이 포함될 수 있습니다. &lt;code&gt;#line&lt;/code&gt; 지시문이 있으면 처리됩니다. &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt; 은 공백을지나 이동하므로 공백이 아닌 문자 (또는 입력 텍스트의 끝)를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="974a6462ab03e1de1ff9f8fd2c232affa76846af" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. &lt;a href=&quot;#shmread-ID%2CVAR%2CPOS%2CSIZE&quot;&gt;&lt;code&gt;shmread&lt;/code&gt;&lt;/a&gt; taints the variable. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;&quot;SysV IPC&quot; in perlipc&lt;/a&gt; and the documentation for &lt;a href=&quot;IPC::SysV&quot;&gt;&lt;code&gt;IPC::SysV&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;IPC::Shareable&quot;&gt;&lt;code&gt;IPC::Shareable&lt;/code&gt;&lt;/a&gt; module from CPAN.</source>
          <target state="translated">시스템 V 공유 메모리 세그먼트 ID를 POS 위치에서 시작하여 크기 SIZE에 부착, 복사 / 복사 및 분리하여 읽거나 씁니다. 읽을 때 VAR은 읽은 데이터를 보유 할 변수 여야합니다. 쓸 때 STRING이 너무 길면 SIZE 바이트 만 사용됩니다. STRING이 너무 짧으면 SIZE 바이트를 채우기 위해 널이 작성됩니다. 성공하면 true를, 오류가 발생하면 false를 반환합니다. &lt;a href=&quot;#shmread-ID%2CVAR%2CPOS%2CSIZE&quot;&gt; &lt;code&gt;shmread&lt;/code&gt; &lt;/a&gt; 는 변수를 오염시킵니다 . &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipc의 &quot;SysV IPC&quot;&lt;/a&gt; 와 CPAN 의 &lt;a href=&quot;IPC::Shareable&quot;&gt; &lt;code&gt;IPC::Shareable&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;IPC::SysV&quot;&gt; &lt;code&gt;IPC::SysV&lt;/code&gt; &lt;/a&gt; 및 IPC :: Shareable 모듈에 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8320a729c06e516aca0a96e512d594788146ecaf" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">크기 SIZE의 POS 위치에서 시작하여 System V 공유 메모리 세그먼트 ID를 첨부하거나 첨부 / 복사하고 분리하여 읽거나 씁니다. 읽을 때 VAR은 읽은 데이터를 보유 할 변수 여야합니다. 쓸 때 STRING이 너무 길면 SIZE 바이트 만 사용됩니다. STRING이 너무 짧은 경우 SIZE 바이트를 채우기 위해 널이 작성됩니다. 성공하면 true를, 에러가 발생하면 false를 반환합니다. shmread ()는 변수를 오염시킵니다. 참조 &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;시스템 V IPC는 perlipc에서&lt;/a&gt; , &lt;code&gt;IPC::SysV&lt;/code&gt; 및 &lt;code&gt;IPC::Shareable&lt;/code&gt; CPAN에서 모듈.</target>
        </trans-unit>
        <trans-unit id="f125d7e184df479fec94e499e44324e6ceb7098a" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">크기 SIZE의 POS 위치에서 시작하여 System V 공유 메모리 세그먼트 ID를 첨부하거나 첨부 / 복사하고 분리하여 읽거나 씁니다. 읽을 때 VAR은 읽은 데이터를 보유 할 변수 여야합니다. 쓸 때 STRING이 너무 길면 SIZE 바이트 만 사용됩니다. STRING이 너무 짧은 경우 SIZE 바이트를 채우기 위해 널이 작성됩니다. 성공하면 true를, 에러가 발생하면 false를 반환합니다. shmread ()는 변수를 오염시킵니다. 참조 &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;시스템 V IPC는 perlipc에서&lt;/a&gt; , &lt;code&gt;IPC::SysV&lt;/code&gt; 및 &lt;code&gt;IPC::Shareable&lt;/code&gt; CPAN에서 모듈.</target>
        </trans-unit>
        <trans-unit id="ea52dbfee11677b27a8ef60e0a8aad94aefd05ca" translate="yes" xml:space="preserve">
          <source>Reads regardless of lock.</source>
          <target state="translated">잠금에 관계없이 읽습니다.</target>
        </trans-unit>
        <trans-unit id="ff3932830db44982eec2ae215d9491c4fc84e2b9" translate="yes" xml:space="preserve">
          <source>Reads the YAML stream from a file instead of a string.</source>
          <target state="translated">문자열 대신 파일에서 YAML 스트림을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b5f50fa24a3e4fd3d77314b2073891ffb95299e6" translate="yes" xml:space="preserve">
          <source>Reads the contents of</source>
          <target state="translated">내용을 읽습니다</target>
        </trans-unit>
        <trans-unit id="c0ef207c7fee9445bbf063cb6e3bc97ad3d05a6b" translate="yes" xml:space="preserve">
          <source>Reads the contents of &lt;code&gt;$input&lt;/code&gt; , compresses it and writes the compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; 의 내용을 읽고 압축 한 다음 압축 된 데이터를 &lt;code&gt;$output&lt;/code&gt; 씁니다 .</target>
        </trans-unit>
        <trans-unit id="b6f7764f30fcaf78fc4802def743662a39097660" translate="yes" xml:space="preserve">
          <source>Reads the contents of &lt;code&gt;$input&lt;/code&gt;, compresses it and writes the compressed data to &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; 의 내용을 읽고 압축 한 다음 압축 된 데이터를 &lt;code&gt;$output&lt;/code&gt; 씁니다 .</target>
        </trans-unit>
        <trans-unit id="bcbd8069c4dba18061616ddc8229fc59e4a96a91" translate="yes" xml:space="preserve">
          <source>Reads the next (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the character read, and moves &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt;bufptr&quot;&lt;/a&gt; past the character, or returns -1 if lexing has reached the end of the input text. To non-destructively examine the next character, use &lt;a href=&quot;#lex_peek_unichar&quot;&gt;&quot;lex_peek_unichar&quot;&lt;/a&gt; instead.</source>
          <target state="translated">현재 렉싱중인 텍스트에서 다음 (유니 코드) 문자를 읽습니다. 읽은 문자의 코드 포인트 (부호없는 정수 값)를 반환하고 &lt;a href=&quot;#PL_parser-%3Ebufptr&quot;&gt;&quot;PL_parser-&amp;gt; bufptr&quot;을&lt;/a&gt; 문자 뒤로 이동 하거나 렉싱이 입력 텍스트의 끝에 도달하면 -1을 반환합니다. 다음 문자를 비파괴 적으로 검사하려면 대신 &lt;a href=&quot;#lex_peek_unichar&quot;&gt;&quot;lex_peek_unichar&quot;를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="69012285115dba7938e88e4e1d96760f57b6f1cd" translate="yes" xml:space="preserve">
          <source>Reads the next (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the character read, and moves &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; past the character, or returns -1 if lexing has reached the end of the input text. To non-destructively examine the next character, use &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt; instead.</source>
          <target state="translated">현재 어휘 분석중인 텍스트에서 다음 (유니 코드) 문자를 읽습니다. 읽은 문자의 코드 포인트 (부호없는 정수 값)를 리턴하고 문자를지나 &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr을&lt;/a&gt; 이동 시키 거나 렉싱이 입력 텍스트의 끝에 도달하면 -1을 리턴합니다. 다음 문자를 비파괴 적으로 검사하려면 &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="91c6ed682ed41c74c87caf67fe452fd0fd42fdad" translate="yes" xml:space="preserve">
          <source>Reads the next line from the compressed file into &lt;code&gt;$line&lt;/code&gt; .</source>
          <target state="translated">압축 파일에서 다음 행을 &lt;code&gt;$line&lt;/code&gt; 으로 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="e29fead37da1b87fbe62597de531632059dc6ee8" translate="yes" xml:space="preserve">
          <source>Reads the next line from the compressed file into &lt;code&gt;$line&lt;/code&gt;.</source>
          <target state="translated">압축 파일의 다음 줄을 &lt;code&gt;$line&lt;/code&gt; 로 읽어옵니다 .</target>
        </trans-unit>
        <trans-unit id="20f7c17840218f6790c690d1641eb71144f6c802" translate="yes" xml:space="preserve">
          <source>Real elapsed time &quot;wallclock seconds&quot;.</source>
          <target state="translated">실제 경과 시간 &quot;wallclock seconds&quot;.</target>
        </trans-unit>
        <trans-unit id="aec77234378ed55865902c265252eec7cd62f206" translate="yes" xml:space="preserve">
          <source>Real number. For example &lt;code&gt;3.14&lt;/code&gt; , &lt;code&gt;-6.23E24&lt;/code&gt; and so on.</source>
          <target state="translated">실수 예를 들어 &lt;code&gt;3.14&lt;/code&gt; , &lt;code&gt;-6.23E24&lt;/code&gt; 등입니다.</target>
        </trans-unit>
        <trans-unit id="079d6b47b5dbd9b4acf74037b87b5594290349ba" translate="yes" xml:space="preserve">
          <source>Real number. For example &lt;code&gt;3.14&lt;/code&gt;, &lt;code&gt;-6.23E24&lt;/code&gt; and so on.</source>
          <target state="translated">실수. 예 : &lt;code&gt;3.14&lt;/code&gt; , &lt;code&gt;-6.23E24&lt;/code&gt; 등.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
