<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="458e14f71182f02f4a806b4f96c30f94a69e2f5d" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;pause()&lt;/code&gt; , which suspends the execution of the current process until a signal is received.</source>
          <target state="translated">이것은 C 함수 &lt;code&gt;pause()&lt;/code&gt; 와 유사합니다.이 함수 는 신호가 수신 될 때까지 현재 프로세스의 실행을 일시 중단합니다.</target>
        </trans-unit>
        <trans-unit id="e41f365bbfbbe805fa9664e5da8fbc5e5e99f55a" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;pause()&lt;/code&gt;, which suspends the execution of the current process until a signal is received.</source>
          <target state="translated">이것은 신호가 수신 될 때까지 현재 프로세스의 실행을 중단 하는 C 함수 &lt;code&gt;pause()&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="b5c0406fc055d4e959d81bed9920f88092d08404" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;setpgid()&lt;/code&gt; for setting the process group identifier of the current process.</source>
          <target state="translated">이것은 현재 프로세스의 프로세스 그룹 식별자를 설정 하는 C 함수 &lt;code&gt;setpgid()&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="b56c5c880f143b4a031f787b44269acb561de2d9" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcdrain()&lt;/code&gt; for draining the output queue of its argument stream.</source>
          <target state="translated">이는 인수 스트림의 출력 큐를 &lt;code&gt;tcdrain()&lt;/code&gt; 위한 C 함수 tcdrain () 과 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="fba332acc7267461256bd4bbecd53d5cd07ab313" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflow()&lt;/code&gt; for controlling the flow of its argument stream.</source>
          <target state="translated">이것은 인수 스트림의 흐름을 제어하는 C 함수 &lt;code&gt;tcflow()&lt;/code&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="2235c85d6f3847cd44159a3753a652d29703f3f5" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcflush()&lt;/code&gt; for flushing the I/O buffers of its argument stream.</source>
          <target state="translated">이것은 인수 스트림의 I / O 버퍼를 플러시하기위한 C 함수 &lt;code&gt;tcflush()&lt;/code&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="32c5db3dfe196b930ba8a6acd29334ab37d33b0e" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsendbreak()&lt;/code&gt; for sending a break on its argument stream.</source>
          <target state="translated">이는 인수 스트림에서 중단을 보내는 C 함수 &lt;code&gt;tcsendbreak()&lt;/code&gt; 와 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="d51d66ac3fd31e0526e015560112bf7a83d1d7e3" translate="yes" xml:space="preserve">
          <source>This is similar to the C function &lt;code&gt;tcsetpgrp()&lt;/code&gt; for setting the process group identifier of the foreground process group of the controlling terminal.</source>
          <target state="translated">이것은 제어 터미널의 포 그라운드 프로세스 그룹의 프로세스 그룹 식별자를 설정 하는 C 함수 &lt;code&gt;tcsetpgrp()&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="66ffda00414691432da9fbf5e0758036abbf4c87" translate="yes" xml:space="preserve">
          <source>This is similar to the C function, except that it can apply to a single character or to a whole string, and currently operates as if the locale always is &quot;C&quot;. Consider using the &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt;, or the equivalent &lt;code&gt;\U&lt;/code&gt; operator inside doublequotish strings.</source>
          <target state="translated">이는 단일 문자 또는 전체 문자열에 적용 할 수 있다는 점을 제외하고 C 함수와 유사하며 현재 로케일이 항상 &quot;C&quot;인 것처럼 작동합니다. &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc()&lt;/a&gt;&lt;/code&gt; 함수 사용을 고려 하십시오. &lt;a href=&quot;functions/uc&quot;&gt;uc&lt;/a&gt; 또는 큰 따옴표 문자열 내 에서 동등한 &lt;code&gt;\U&lt;/code&gt; 연산자를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8eda6f0f736dfb783b722b66835ba379ce58a17f" translate="yes" xml:space="preserve">
          <source>This is similar to using T_OPAQUEPTR but can be used to process more than one element.</source>
          <target state="translated">이것은 T_OPAQUEPTR을 사용하는 것과 유사하지만 둘 이상의 요소를 처리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a28122b9a555130e7576bc2e3eaca06e448a1d61" translate="yes" xml:space="preserve">
          <source>This is similar to what &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma does.</source>
          <target state="translated">이것은 &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma가하는 것과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="bd2544ef4a094110db1a1743d7560cf9401d79c3" translate="yes" xml:space="preserve">
          <source>This is slightly more performant than making four separate checks in four separate &lt;code&gt;mXPUSHi()&lt;/code&gt; calls.</source>
          <target state="translated">이것은 4 개의 개별 &lt;code&gt;mXPUSHi()&lt;/code&gt; 호출 에서 4 개의 개별 검사를 수행하는 것보다 약간 더 성능이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a070e7d29b17578c9c82db6eb47bc8205a22821e" translate="yes" xml:space="preserve">
          <source>This is so that you can write loops like:</source>
          <target state="translated">이렇게하면 다음과 같은 루프를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bb4dbbe89d426f58f9d96c7270c7af2e03e5d56" translate="yes" xml:space="preserve">
          <source>This is something you, the programmer, has to keep track of; sorry. You could consider adopting a kind of &quot;Hungarian notation&quot; to help with this.</source>
          <target state="translated">이것은 프로그래머가 추적해야 할 사항입니다. 죄송합니다. 이를 돕기 위해 일종의 &quot;헝가리어 표기법&quot;을 채택하는 것을 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f62086875f698e88f1673ff191123d1ebe166ce0" translate="yes" xml:space="preserve">
          <source>This is somewhat equivalent to the C-style switch statement's fallthrough functionality (not to be confused with</source>
          <target state="translated">이것은 C 스타일 switch 문의 폴 스루 기능과 다소 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7039ef5c59f1a390b0357d66a81e16efc5deefb4" translate="yes" xml:space="preserve">
          <source>This is somewhat like &lt;code&gt;SUPER&lt;/code&gt; , but it uses the C3 method resolution order to get better consistency in multiple inheritance situations. Note that while inheritance in general follows whichever MRO is in effect for the given class, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; only uses the C3 MRO.</source>
          <target state="translated">이것은 &lt;code&gt;SUPER&lt;/code&gt; 와 비슷하지만 C3 메서드 확인 순서를 사용하여 여러 상속 상황에서 일관성을 향상시킵니다. 상속은 일반적으로 주어진 클래스에 적용되는 MRO를 따르지만 &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next::method&lt;/a&gt;&lt;/code&gt; 는 C3 MRO 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="95132fa5d3b646da8b789212be7047604909e342" translate="yes" xml:space="preserve">
          <source>This is somewhat like &lt;code&gt;SUPER&lt;/code&gt;, but it uses the C3 method resolution order to get better consistency in multiple inheritance situations. Note that while inheritance in general follows whichever MRO is in effect for the given class, &lt;code&gt;next::method&lt;/code&gt; only uses the C3 MRO.</source>
          <target state="translated">이것은 &lt;code&gt;SUPER&lt;/code&gt; 와 다소 비슷 하지만 여러 상속 상황에서 더 나은 일관성을 얻기 위해 C3 메서드 확인 순서를 사용합니다. 일반적으로 상속은 주어진 클래스에 대해 유효한 MRO를 따르지만 &lt;code&gt;next::method&lt;/code&gt; 는 C3 MRO 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a6e2c8909db8a95dab398add127a82ec5182c9bc" translate="yes" xml:space="preserve">
          <source>This is still a symbolic reference, and is still saddled with the problems enumerated above. It would be far better to write:</source>
          <target state="translated">이것은 여전히 ​​상징적 참조이며 위에 열거 된 문제로 여전히 안장되어 있습니다. 작성하는 것이 훨씬 낫습니다.</target>
        </trans-unit>
        <trans-unit id="dc230bd2bfa305e90c52714b5b02997ea62329f3" translate="yes" xml:space="preserve">
          <source>This is subroutine definition, not a real function</source>
          <target state="translated">이것은 실제 함수가 아닌 서브 루틴 정의입니다.</target>
        </trans-unit>
        <trans-unit id="b1e77ff60ef4ac8debe40c75ba809e724ed8905b" translate="yes" xml:space="preserve">
          <source>This is substantially different than the behavior of &lt;code&gt;SUPER&lt;/code&gt; under complex multiple inheritance. (This becomes obvious when one realizes that the common superclasses in the C3 linearizations of a given class and one of its parents will not always be ordered the same for both.)</source>
          <target state="translated">이것은 복잡한 다중 상속 에서 &lt;code&gt;SUPER&lt;/code&gt; 의 동작과 실질적으로 다릅니다 . (이것은 주어진 클래스와 그 부모 중 하나의 C3 선형화에서 공통 수퍼 클래스가 둘 다에 대해 항상 동일하게 주문되지는 않는다는 것을 알면 분명해진다.)</target>
        </trans-unit>
        <trans-unit id="23e17e01cd60708587cb31d9ff8b363ecd66c020" translate="yes" xml:space="preserve">
          <source>This is sufficient because non-XS modules install only &quot;.pm&quot; files and (sometimes) pod and/or man documentation. No re-linking of the perl binary is needed to build, install or use non-XS modules.</source>
          <target state="translated">비 XS 모듈은 &quot;.pm&quot;파일 및 포드 및 / 또는 설명서를 설치하기 때문에 충분합니다. 비 XS 모듈을 빌드, 설치 또는 사용하기 위해 perl 바이너리를 다시 연결할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0a11b4a723aa89f435867b4b7aabf89fab7f0ed5" translate="yes" xml:space="preserve">
          <source>This is suitable for many purposes, but the &lt;a href=&quot;Unicode::LineBreak&quot;&gt;Unicode::LineBreak&lt;/a&gt; module is available on CPAN that provides many more features, including customization.</source>
          <target state="translated">이것은 많은 목적에 적합하지만 &lt;a href=&quot;Unicode::LineBreak&quot;&gt;Unicode :: LineBreak&lt;/a&gt; 모듈은 사용자 정의를 포함하여 더 많은 기능을 제공하는 CPAN에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be5a4fb32d8ac695ed2b298f81d0f20fcb10d969" translate="yes" xml:space="preserve">
          <source>This is supported on all versions of perl.</source>
          <target state="translated">이것은 모든 버전의 perl에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="62efbec7287d71078acc23cdfe299bffb8e3dad9" translate="yes" xml:space="preserve">
          <source>This is supported since 6.76</source>
          <target state="translated">6.76부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="176d1979619b89ab80bba77f3ee47c56e59cc580" translate="yes" xml:space="preserve">
          <source>This is supported since 7.26</source>
          <target state="translated">이것은 7.26부터 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0c58a399144492e3d85b2b92893dc4441d4f1a4b" translate="yes" xml:space="preserve">
          <source>This is synonymous with:</source>
          <target state="translated">이것은 다음과 동의어입니다 :</target>
        </trans-unit>
        <trans-unit id="f36d5338bbc7b7f385e72503a212aefb9d4b21f2" translate="yes" xml:space="preserve">
          <source>This is the &quot;branch reset&quot; pattern, which has the special property that the capture groups are numbered from the same starting point in each alternation branch. It is available starting from perl 5.10.0.</source>
          <target state="translated">이는 &quot;분기 재설정&quot;패턴으로, 각 대체 분기에서 동일한 시작점에서 캡처 그룹의 번호가 지정되는 특수 특성을 갖습니다. perl 5.10.0부터 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19421af57fe146a06eb56f9f30349ebe8341f96d" translate="yes" xml:space="preserve">
          <source>This is the &quot;make test&quot; result from the said combination:</source>
          <target state="translated">이것은 상기 조합의 &quot;테스트 테스트&quot;결과입니다.</target>
        </trans-unit>
        <trans-unit id="62ca18cb3607997061d57b9fd320ab0f041516b6" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SV. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; .</source>
          <target state="translated">이것은 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; SV입니다. 항상 이것을 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 로 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="96cfbbe2d84ca5bfe80092e6f9ad37226fb61e75" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;false&lt;/code&gt; SV. See &lt;code&gt;&lt;a href=&quot;#PL_sv_yes&quot;&gt;&quot;PL_sv_yes&quot;&lt;/a&gt;&lt;/code&gt;. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;false&lt;/code&gt; SV입니다. &lt;code&gt;&lt;a href=&quot;#PL_sv_yes&quot;&gt;&quot;PL_sv_yes&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . 항상 &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; 로 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4760f68814e5682fe3f5f10b06ed0b34903e395" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;false&lt;/code&gt; SV. See &lt;code&gt;PL_sv_yes&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; .</source>
          <target state="translated">이것은 &lt;code&gt;false&lt;/code&gt; SV입니다. &lt;code&gt;PL_sv_yes&lt;/code&gt; 를 참조하십시오 . 항상 이것을 &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; 로 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e139735f50d334d273ed9e56bd61f363d8c88b31" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;true&lt;/code&gt; SV. See &lt;code&gt;&lt;a href=&quot;#PL_sv_no&quot;&gt;&quot;PL_sv_no&quot;&lt;/a&gt;&lt;/code&gt;. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt;.</source>
          <target state="translated">이것이 &lt;code&gt;true&lt;/code&gt; SV입니다. &lt;code&gt;&lt;a href=&quot;#PL_sv_no&quot;&gt;&quot;PL_sv_no&quot;&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 . 항상 &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; 로 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="69477e80b4da6549c4778882346d8c2f1a054a61" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;true&lt;/code&gt; SV. See &lt;code&gt;PL_sv_no&lt;/code&gt; . Always refer to this as &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; .</source>
          <target state="translated">이것이 &lt;code&gt;true&lt;/code&gt; SV입니다. &lt;code&gt;PL_sv_no&lt;/code&gt; 를 참조하십시오 . 항상 이것을 &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; 로 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81478e9ca7d8718a5ec449fbb46281e67cc22245" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;undef&lt;/code&gt; SV. Always refer to this as &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;undef&lt;/code&gt; SV입니다. 항상 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 로 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7194017d84a1b8d81ca4290d44c59af66198e5c2" translate="yes" xml:space="preserve">
          <source>This is the Perl 6 &quot;commit pattern&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; or &lt;code&gt;:::&lt;/code&gt;. It's a zero-width pattern similar to &lt;code&gt;(*SKIP)&lt;/code&gt; , except that when backtracked into on failure it causes the match to fail outright. No further attempts to find a valid match by advancing the start pointer will occur again. For example,</source>
          <target state="translated">이것은 Perl 6 &quot;커밋 패턴&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;:::&lt;/code&gt; 입니다. &lt;code&gt;(*SKIP)&lt;/code&gt; 와 비슷한 폭이 0 인 패턴입니다 . 단, 실패시 역 추적 할 경우 일치가 완전히 실패합니다. 더 이상 시작 포인터를 진행하여 올바른 일치를 찾으려고 시도하지 않습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="6d8e4baf0d85adfeec247ab733be39725f479200" translate="yes" xml:space="preserve">
          <source>This is the Perl patch level, a numeric change identifier, as defined by whichever source code maintenance system is used to maintain the patches; currently Perforce. It does not correlate with the Perl version numbers or the maintenance versus development dichotomy except by also being increasing.</source>
          <target state="translated">이것은 패치를 유지하는 데 사용되는 소스 코드 유지 보수 시스템에 의해 정의 된 숫자 변경 식별자 인 Perl 패치 레벨입니다. 현재 Perforce. 또한 Perl 버전 번호 또는 유지 관리 대 이분법과도 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c3d3b33b321b373988f93e8459b8ad217922301e" translate="yes" xml:space="preserve">
          <source>This is the Raku &quot;commit pattern&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; or &lt;code&gt;:::&lt;/code&gt;. It's a zero-width pattern similar to &lt;code&gt;(*SKIP)&lt;/code&gt;, except that when backtracked into on failure it causes the match to fail outright. No further attempts to find a valid match by advancing the start pointer will occur again. For example,</source>
          <target state="translated">이것은 Raku &quot;커밋 패턴&quot; &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;:::&lt;/code&gt; 입니다. &lt;code&gt;(*SKIP)&lt;/code&gt; 과 유사한 제로 너비 패턴입니다 . 단, 실패시 역 추적 될 때 일치가 완전히 실패합니다. 시작 포인터를 앞으로 이동하여 유효한 일치 항목을 찾으려고 더 이상 시도하지 않습니다. 예를 들면</target>
        </trans-unit>
        <trans-unit id="0eaf16c26ce67bf186071a739f6615eb11610fd4" translate="yes" xml:space="preserve">
          <source>This is the SV to be matched against. Note that the actual char array to be matched against is supplied by the arguments described below; the SV is just used to determine UTF8ness, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; etc.</source>
          <target state="translated">일치하는 SV입니다. 일치시킬 실제 문자 배열은 아래 설명 된 인수에 의해 제공됩니다. SV는 UTF8ness, &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos()&lt;/a&gt;&lt;/code&gt; 등 을 결정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7c286f6393bbad06af797d961790dd4c263ab5cd" translate="yes" xml:space="preserve">
          <source>This is the SV to be matched against. Note that the actual char array to be matched against is supplied by the arguments described below; the SV is just used to determine UTF8ness, &lt;code&gt;pos()&lt;/code&gt; etc.</source>
          <target state="translated">일치시킬 SV입니다. 일치시킬 실제 char 배열은 아래에 설명 된 인수에 의해 제공됩니다. SV는 UTF8ness, &lt;code&gt;pos()&lt;/code&gt; 등 을 결정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d720b4f15a9201913736e953c720d9b63d81ea0" translate="yes" xml:space="preserve">
          <source>This is the Unicode-aware way of saying</source>
          <target state="translated">이것은 유니 코드를 인식하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="455ede6174f3d5161f6c2d4aa6425c94536894ca" translate="yes" xml:space="preserve">
          <source>This is the basic function to generate temporary files. The behaviour of the file can be changed using various options:</source>
          <target state="translated">임시 파일을 생성하는 기본 기능입니다. 파일의 동작은 다양한 옵션을 사용하여 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0cdb886cc4c11fb4c044bce1657934ab85d4f9c0" translate="yes" xml:space="preserve">
          <source>This is the central parsing function. It can both append new text and extract objects from the stream accumulated so far (both of these functions are optional).</source>
          <target state="translated">이것이 중앙 구문 분석 기능입니다. 새 텍스트를 추가하고 지금까지 누적 된 스트림에서 개체를 추출 할 수 있습니다 (이 두 기능 모두 선택 사항).</target>
        </trans-unit>
        <trans-unit id="a05b57eee11f052b052017c3ff384fae39edc53f" translate="yes" xml:space="preserve">
          <source>This is the command to execute. It may be either a string or an array reference. This is a required argument.</source>
          <target state="translated">실행할 명령입니다. 문자열 또는 배열 참조 일 수 있습니다. 이것은 필수 인수입니다.</target>
        </trans-unit>
        <trans-unit id="78880bb496bf709fa9881c622c08f3137e6dd8f7" translate="yes" xml:space="preserve">
          <source>This is the constructor for &lt;b&gt;Pod::Parser&lt;/b&gt; and its subclasses. You</source>
          <target state="translated">이것은 &lt;b&gt;Pod :: Parser&lt;/b&gt; 및 해당 서브 클래스 의 생성자입니다 . 당신</target>
        </trans-unit>
        <trans-unit id="3d8bf5bd14f4dda830975aad7d7af3e9d034509f" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::FTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an FTP connection is required.</source>
          <target state="translated">이것은 새로운 Net :: FTP 객체의 생성자입니다. &lt;code&gt;HOST&lt;/code&gt; 는 FTP 연결이 필요한 원격 호스트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d79a978a5e7757a479b9fe30cd0cc290698241af" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::NNTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which a NNTP connection is required. If not given then it may be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If no host is passed then two environment variables are checked, first &lt;code&gt;NNTPSERVER&lt;/code&gt; then &lt;code&gt;NEWSHOST&lt;/code&gt; , then &lt;code&gt;Net::Config&lt;/code&gt; is checked, and if a host is not found then &lt;code&gt;news&lt;/code&gt; is used.</source>
          <target state="translated">이것은 새로운 Net :: NNTP 객체의 생성자입니다. &lt;code&gt;HOST&lt;/code&gt; 는 NNTP 연결이 필요한 원격 호스트의 이름입니다. 지정하지 않으면 아래에 설명 된 &lt;code&gt;Host&lt;/code&gt; 옵션 으로 전달 될 수 있습니다 . 호스트가 전달되지 않으면 두 개의 환경 변수가 먼저 확인되고, 먼저 &lt;code&gt;NNTPSERVER&lt;/code&gt; , &lt;code&gt;NEWSHOST&lt;/code&gt; , &lt;code&gt;Net::Config&lt;/code&gt; 가 확인되고 호스트가 없으면 &lt;code&gt;news&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="269299c73d11a11158c0e7b9fe468441843c9e6e" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::NNTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which a NNTP connection is required. If not given then it may be passed as the &lt;code&gt;Host&lt;/code&gt; option described below. If no host is passed then two environment variables are checked, first &lt;code&gt;NNTPSERVER&lt;/code&gt; then &lt;code&gt;NEWSHOST&lt;/code&gt;, then &lt;code&gt;Net::Config&lt;/code&gt; is checked, and if a host is not found then &lt;code&gt;news&lt;/code&gt; is used.</source>
          <target state="translated">이것은 새로운 Net :: NNTP 객체의 생성자입니다. &lt;code&gt;HOST&lt;/code&gt; 는 NNTP 연결이 필요한 원격 호스트의 이름입니다. 지정하지 않으면 아래 설명 된 &lt;code&gt;Host&lt;/code&gt; 옵션 으로 전달 될 수 있습니다 . 호스트가 전달되지 않으면 두 개의 환경 변수, 먼저 &lt;code&gt;NNTPSERVER&lt;/code&gt; , &lt;code&gt;NEWSHOST&lt;/code&gt; , &lt;code&gt;Net::Config&lt;/code&gt; 가 확인되고 호스트가 없으면 &lt;code&gt;news&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3a1411000dcca44bd6224ab398773d981b55ca56" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::POP3 object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an POP3 connection is required.</source>
          <target state="translated">이것은 새로운 Net :: POP3 객체의 생성자입니다. &lt;code&gt;HOST&lt;/code&gt; 는 POP3 연결이 필요한 원격 호스트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b5e150d75dbb5f649a71e256e018f3d6ee5d68ad" translate="yes" xml:space="preserve">
          <source>This is the constructor for a new Net::SMTP object. &lt;code&gt;HOST&lt;/code&gt; is the name of the remote host to which an SMTP connection is required.</source>
          <target state="translated">이것은 새로운 Net :: SMTP 객체의 생성자입니다. &lt;code&gt;HOST&lt;/code&gt; 는 SMTP 연결이 필요한 원격 호스트의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="3dcdb98a1ad7340bd49db77b64b7ed1e7e6ac7fa" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference of some sort. The reference can be used to hold some internal information.</source>
          <target state="translated">이것은 클래스의 생성자입니다. 그것은 어떤 종류의 복된 참조를 돌려 주어야한다는 것을 의미합니다. 참조는 일부 내부 정보를 보유하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f8efcba15ad2c7fb65b185c0d87e50ef7c7af8b" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new array (probably an anonymous ARRAY ref) will be accessed.</source>
          <target state="translated">이것은 클래스의 생성자입니다. 즉, 새로운 배열 (아마 익명의 ARRAY 참조)에 액세스 할 수있는 유용한 참조를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="4ddd75a12229b0af35fd3f3217e95a18f27831c9" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference through which the new object (probably but not necessarily an anonymous hash) will be accessed.</source>
          <target state="translated">이것은 클래스의 생성자입니다. 즉, 새 개체 (아마도 익명 해시 일 필요는 없음)에 액세스 할 수있는 축복 된 참조를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3ca80029525d0505c9c19a25619277e596ad6ff" translate="yes" xml:space="preserve">
          <source>This is the constructor for the class. That means it is expected to return a blessed reference to a new scalar (probably anonymous) that it's creating. For example:</source>
          <target state="translated">이것은 클래스의 생성자입니다. 즉, 생성중인 새 스칼라 (아마 익명)에 대한 복된 참조를 반환해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb534959b62a2349bc366cafbf3bc4c8d2378f5a" translate="yes" xml:space="preserve">
          <source>This is the current line number being parsed. But you might find the &quot;line_number&quot; event attribute more accurate, when it is present.</source>
          <target state="translated">이것은 구문 분석중인 현재 줄 번호입니다. 그러나 &quot;line_number&quot;이벤트 속성이있는 경우 더 정확하다는 것을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97c7d16dbe44cbd95a833f47b94f50f6214ea17d" translate="yes" xml:space="preserve">
          <source>This is the default code set.</source>
          <target state="translated">이것이 기본 코드 세트입니다.</target>
        </trans-unit>
        <trans-unit id="d1c927184ed34249d218ce93282cb8de28d7d8db" translate="yes" xml:space="preserve">
          <source>This is the default compression used when creating a zip file with &lt;code&gt;IO::Compress::Zip&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IO::Compress::Zip&lt;/code&gt; 으로 zip 파일을 만들 때 사용되는 기본 압축 입니다.</target>
        </trans-unit>
        <trans-unit id="f42f9d3bfdedb4c34f927c70a8b84d5ca486809d" translate="yes" xml:space="preserve">
          <source>This is the default value if none was provided by the user. This is also the type &lt;code&gt;strict_type&lt;/code&gt; will look at when checking type integrity (see below).</source>
          <target state="translated">사용자가 제공하지 않은 경우 기본값입니다. 이것은 또한 유형 무결성을 검사 할 때 &lt;code&gt;strict_type&lt;/code&gt; 유형 에서 확인합니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="3593aaa1ac379bbedb44bf7f659e106e976b3e02" translate="yes" xml:space="preserve">
          <source>This is the default, and fallback concurrency model for &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. This sends events between processes and threads using serialized files in a temporary directory. This is not particularly fast, but it works everywhere.</source>
          <target state="translated">이것이 기본값이며 &lt;a href=&quot;test2&quot;&gt;Test2에&lt;/a&gt; 대한 대체 동시성 모델입니다 . 이것은 임시 디렉토리에있는 직렬화 된 파일을 사용하여 프로세스와 스레드간에 이벤트를 보냅니다. 이것은 특별히 빠르지는 않지만 모든 곳에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="60c4aeb1d9a588518e8c401cb7140416c2986e58" translate="yes" xml:space="preserve">
          <source>This is the default. If you can use the</source>
          <target state="translated">이것이 기본값입니다. 당신이 사용할 수있는 경우</target>
        </trans-unit>
        <trans-unit id="9aeaae15da033ddcaa17dde6127bab085a00db8b" translate="yes" xml:space="preserve">
          <source>This is the default. If you can use the &lt;a href=&quot;http://man.he.net/man1/mail&quot;&gt;mail(1)&lt;/a&gt; or &lt;a href=&quot;http://man.he.net/man1/mailx&quot;&gt;mailx(1)&lt;/a&gt; program to send mail from the machine where your code runs, you should be able to use this.</source>
          <target state="translated">이것이 기본값입니다. 당신이 사용할 수있는 경우 &lt;a href=&quot;http://man.he.net/man1/mail&quot;&gt;메일 (1)&lt;/a&gt; 또는 &lt;a href=&quot;http://man.he.net/man1/mailx&quot;&gt;mailx의를 (1)&lt;/a&gt; 프로그램은 코드 실행, 당신은이를 사용할 수 있어야 컴퓨터에서 메일을 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b115e2483ec3abaacaac1f9ae2d4e5dce2387c0" translate="yes" xml:space="preserve">
          <source>This is the directory where the .pm and .pod files you wish to have installed go. They are laid out according to namespace. So Foo::Bar is</source>
          <target state="translated">이것은 설치하려는 .pm 및 .pod 파일이있는 디렉토리입니다. 네임 스페이스에 따라 배치됩니다. Foo :: Bar는</target>
        </trans-unit>
        <trans-unit id="d930a14451f27529d05daafcbdbe065ab4700f11" translate="yes" xml:space="preserve">
          <source>This is the documentation of version 0.33</source>
          <target state="translated">이것은 0.33 버전의 문서입니다</target>
        </trans-unit>
        <trans-unit id="63455dfd4022438ee8d0c0ec5b67774074825e03" translate="yes" xml:space="preserve">
          <source>This is the documentation of version 0.36</source>
          <target state="translated">이것은 버전 0.36의 문서입니다.</target>
        </trans-unit>
        <trans-unit id="412a728d73be865262b84817f05ddc7c35324cf4" translate="yes" xml:space="preserve">
          <source>This is the easiest way to implement threads, and the way most OSes start. The big disadvantage is that, since the OS knows nothing about threads, if one thread blocks they all do. Typical blocking activities include most system calls, most I/O, and things like &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이것은 스레드를 구현하는 가장 쉬운 방법이며 대부분의 OS가 시작되는 방법입니다. 큰 단점은 OS가 스레드에 대해 아무것도 알지 못하기 때문에 하나의 스레드가 모두 스레드를 차단한다는 것입니다. 일반적인 차단 활동에는 대부분의 시스템 호출, 대부분의 I / O 및 &lt;code&gt;&lt;a href=&quot;functions/sleep&quot;&gt;sleep()&lt;/a&gt;&lt;/code&gt; 과 같은 것들이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="9872ff32ffe02aae34e5fe172e65251487064e38" translate="yes" xml:space="preserve">
          <source>This is the easiest way to implement threads, and the way most OSes start. The big disadvantage is that, since the OS knows nothing about threads, if one thread blocks they all do. Typical blocking activities include most system calls, most I/O, and things like &lt;code&gt;sleep()&lt;/code&gt;.</source>
          <target state="translated">이것은 스레드를 구현하는 가장 쉬운 방법이며 대부분의 OS가 시작되는 방법입니다. 가장 큰 단점은 OS가 스레드에 대해 아무것도 모르기 때문에 하나의 스레드가 차단하면 모두 수행한다는 것입니다. 일반적인 차단 활동에는 대부분의 시스템 호출, 대부분의 I / O 및 &lt;code&gt;sleep()&lt;/code&gt; 과 같은 것들이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="9c6f35e7150b834f9f05080f6b4f16bfc1d90561" translate="yes" xml:space="preserve">
          <source>This is the email address that will be sent as your anonymous ftp password.</source>
          <target state="translated">이것은 익명 ftp 비밀번호로 발송 될 이메일 주소입니다.</target>
        </trans-unit>
        <trans-unit id="bcbb73b7a51f271a9c7d0f81a71c9c4c6dc5c93f" translate="yes" xml:space="preserve">
          <source>This is the event type that should be used instead of &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt; or its legacy subclasses.</source>
          <target state="translated">이것은 &lt;a href=&quot;Test2::Event&quot;&gt;Test2 :: Event&lt;/a&gt; 또는 레거시 하위 클래스 대신 사용해야하는 이벤트 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="f70dbb2dc131fafe5c25b23af1ec9a88c86f0b02" translate="yes" xml:space="preserve">
          <source>This is the existing flag. If the lexical warnings pragma is &lt;b&gt;not&lt;/b&gt; used in any of you code, or any of the modules that you use, this flag will enable warnings everywhere. See &lt;a href=&quot;#Backward-Compatibility&quot;&gt;&quot;Backward Compatibility&quot;&lt;/a&gt; for details of how this flag interacts with lexical warnings.</source>
          <target state="translated">이것은 기존 플래그입니다. 어휘 경고 pragma가 코드 또는 사용하는 모듈에서 사용 &lt;b&gt;되지 않는&lt;/b&gt; 경우이 플래그는 모든 곳에서 경고를 활성화합니다. 를 참조하십시오 &lt;a href=&quot;#Backward-Compatibility&quot;&gt;&quot;이전 버전과의 호환성&quot;&lt;/a&gt; 사전 경고를하는 방법이 플래그의 상호 작용의 세부 사항을.</target>
        </trans-unit>
        <trans-unit id="03a8ad8de2657fbb598356bba52fec61dbe4557b" translate="yes" xml:space="preserve">
          <source>This is the existing flag. If the lexical warnings pragma is &lt;b&gt;not&lt;/b&gt; used in any of you code, or any of the modules that you use, this flag will enable warnings everywhere. See &lt;a href=&quot;#Backward-Compatibility&quot;&gt;Backward Compatibility&lt;/a&gt; for details of how this flag interacts with lexical warnings.</source>
          <target state="translated">기존 플래그입니다. 어휘 경고 pragma가 사용자 코드 또는 사용하는 모듈에서 사용 &lt;b&gt;되지 않는&lt;/b&gt; 경우이 플래그는 모든 곳에서 경고를 활성화합니다. 이 플래그가 어휘 경고와 상호 작용하는 방법에 대한 자세한 내용은 &lt;a href=&quot;#Backward-Compatibility&quot;&gt;이전 버전과의 호환성&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb41b10f4355a8511d19503b44266dfd63767081" translate="yes" xml:space="preserve">
          <source>This is the full Uppercase_Mapping property (as opposed to the Simple_Uppercase_Mapping given in the example for format &lt;code&gt;&quot;a&quot;&lt;/code&gt; ). The only difference between the two in the ranges shown is that the code point at 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE) maps to a string of two characters, 0x02BC (MODIFIER LETTER APOSTROPHE) followed by 0x004E (LATIN CAPITAL LETTER N).</source>
          <target state="translated">&lt;code&gt;&quot;a&quot;&lt;/code&gt; 형식의 예에서 제공된 Simple_Uppercase_Mapping과 달리 전체 Uppercase_Mapping 속성 입니다. 표시된 범위에서 둘 사이의 유일한 차이점은 0x0149의 코드 포인트 (APOSTROPHE로 시작하는 라틴 문자 문자 N)가 0x02BC (MODIFIER LETTER APOSTROPHE) 문자 뒤에 0x004E (라틴 대문자 L) 문자로 매핑된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="72f4b91716b4ac44d113d86456ec9101d5a53dbe" translate="yes" xml:space="preserve">
          <source>This is the full Uppercase_Mapping property (as opposed to the Simple_Uppercase_Mapping given in the example for format &lt;code&gt;&quot;a&quot;&lt;/code&gt;). The only difference between the two in the ranges shown is that the code point at 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE) maps to a string of two characters, 0x02BC (MODIFIER LETTER APOSTROPHE) followed by 0x004E (LATIN CAPITAL LETTER N).</source>
          <target state="translated">이것은 전체 Uppercase_Mapping 속성입니다 ( &lt;code&gt;&quot;a&quot;&lt;/code&gt; 형식에 대한 예제에 제공된 Simple_Uppercase_Mapping과 반대 ). 표시된 범위에서 둘 사이의 유일한 차이점은 0x0149 (LATIN SMALL LETTER N PRECEDED BY APOSTROPHE)의 코드 포인트가 0x02BC (MODIFIER LETTER APOSTROPHE) 뒤에 0x004E (LATIN CAPITAL LETTER N)가 오는 두 문자의 문자열에 매핑된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="871175ae8bd1e88a96090e3ee5d094a4a3c823c8" translate="yes" xml:space="preserve">
          <source>This is the function that does the real work. It should use the current values of @dl_require_symbols and @dl_resolve_using if required.</source>
          <target state="translated">이것이 실제 작업을 수행하는 기능입니다. 필요한 경우 현재 @dl_require_symbols 및 @dl_resolve_using 값을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9eb27a9f1b9a740c73f748bcbff1be5834650914" translate="yes" xml:space="preserve">
          <source>This is the function used to implement the behaviour of the &lt;code&gt;isa&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;isa&lt;/code&gt; 연산자 의 동작을 구현하는 데 사용되는 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="0f9cd536958034f18b34b73afd163424db233b70" translate="yes" xml:space="preserve">
          <source>This is the global compile-time. That includes, basically, every &lt;code&gt;BEGIN&lt;/code&gt; block executed directly or indirectly from during the compile-time of the top-level program.</source>
          <target state="translated">이것이 전역 컴파일 타임입니다. 여기에는 기본적으로 최상위 프로그램의 컴파일 타임 동안 직접 또는 간접적으로 실행되는 모든 &lt;code&gt;BEGIN&lt;/code&gt; 블록 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="4c737aa4875c95dda5f4201220fe6bfd2cb9c598" translate="yes" xml:space="preserve">
          <source>This is the hardest part of testing, where do you start? People often get overwhelmed at the apparent enormity of the task of testing a whole module. The best place to start is at the beginning. &lt;a href=&quot;Date::ICal&quot;&gt;Date::ICal&lt;/a&gt; is an object-oriented module, and that means you start by making an object. Test &lt;code&gt;new()&lt;/code&gt;.</source>
          <target state="translated">이것은 테스트에서 가장 어려운 부분입니다. 어디서부터 시작합니까? 사람들은 종종 전체 모듈을 테스트하는 작업의 엄청난 양에 압도 당합니다. 시작하기 가장 좋은 곳은 처음입니다. &lt;a href=&quot;Date::ICal&quot;&gt;Date :: ICal&lt;/a&gt; 은 객체 지향 모듈이며 이는 객체를 만드는 것으로 시작한다는 것을 의미합니다. &lt;code&gt;new()&lt;/code&gt; 테스트하십시오 .</target>
        </trans-unit>
        <trans-unit id="58aad6bdc01b0f3b662abb61313db16d1982e4c1" translate="yes" xml:space="preserve">
          <source>This is the highest UID on the current system that refers to a root UID. This is used to make sure that the temporary directory is owned by a system UID (&lt;code&gt;root&lt;/code&gt;, &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;sys&lt;/code&gt; etc) rather than simply by root.</source>
          <target state="translated">루트 UID를 참조하는 현재 시스템에서 가장 높은 UID입니다. 이는 임시 디렉토리가 단순히 루트가 아닌 시스템 UID ( &lt;code&gt;root&lt;/code&gt; , &lt;code&gt;bin&lt;/code&gt; , &lt;code&gt;sys&lt;/code&gt; 등) 가 소유하는지 확인하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="394f7937653a5d479f930b2ee200056fdee9eaa3" translate="yes" xml:space="preserve">
          <source>This is the highest UID on the current system that refers to a root UID. This is used to make sure that the temporary directory is owned by a system UID (C</source>
          <target state="translated">루트 UID를 나타내는 현재 시스템에서 가장 높은 UID입니다. 시스템 UID (C가 임시 디렉토리를 소유하는지 확인하는 데 사용됨)</target>
        </trans-unit>
        <trans-unit id="6328f4bdaf24cfea2076758e63c586a6679bf323" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 연산자를 구현하는 내부 함수 이지만 직접 사용할 수 있습니다. &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 오퍼레이터에 자세히 설명되어 &lt;a href=&quot;../perlop#I%2fO-Operators&quot;&gt;perlop에서 I / O 연산자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e79f6ef07ad6031f8e6ffa40b941fdd24230ba02" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 연산자를 구현하는 내부 함수 이지만 직접 사용할 수 있습니다. &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 오퍼레이터에 자세히 설명되어 &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;perlop에 &quot;I / O 연산자&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2a5b446b2d0ba2a35085618db8046fb9068c0dc" translate="yes" xml:space="preserve">
          <source>This is the internal function implementing the &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator, but you can use it directly. The &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; operator is discussed in more detail in &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 연산자를 구현하는 내부 함수 이지만 직접 사용할 수 있습니다. &lt;code&gt;&amp;lt;EXPR&amp;gt;&lt;/code&gt; 오퍼레이터에 자세히 설명되어 &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;perlop에서 I / O 연산자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c755425aff2265b37f84fd527f7d77c0d4f14125" translate="yes" xml:space="preserve">
          <source>This is the inverse of the &lt;code&gt;:utf8&lt;/code&gt; layer. It turns off the flag on the layer below so that data read from it is considered to be &quot;octets&quot; i.e. characters in the range 0..255 only. Likewise on output perl will warn if a &quot;wide&quot; character is written to a such a stream.</source>
          <target state="translated">이것은 &lt;code&gt;:utf8&lt;/code&gt; 레이어 와 반대입니다 . 아래 계층에서 플래그를 해제하여 읽은 데이터가 &quot;옥텟&quot;으로 간주됩니다 (예 : 0..255 범위의 문자 만). 마찬가지로 출력 펄은 &quot;와이드&quot;문자가 그러한 스트림에 기록되면 경고합니다.</target>
        </trans-unit>
        <trans-unit id="c2ddc75f62fd0b93b03c10b2f264c7ad34b8bf3a" translate="yes" xml:space="preserve">
          <source>This is the inverse of the &lt;code&gt;:utf8&lt;/code&gt; pseudo-layer. It turns off the flag on the layer below so that data read from it is considered to be Perl's internal downgraded encoding, thus interpreted as the native single-byte encoding of Latin-1 or EBCDIC. Likewise on output Perl will warn if a &quot;wide&quot; character (a codepoint not in the range 0..255) is written to a such a stream.</source>
          <target state="translated">이것은 &lt;code&gt;:utf8&lt;/code&gt; 의사 계층 의 역입니다 . 아래 레이어의 플래그를 해제하여 읽은 데이터가 Perl의 내부 다운 그레이드 된 인코딩으로 간주되어 Latin-1 또는 EBCDIC의 기본 단일 바이트 인코딩으로 해석됩니다. 마찬가지로 출력에서 ​​Perl은 &quot;와이드&quot;문자 (0..255 범위에없는 코드 포인트)가 그러한 스트림에 기록되면 경고합니다.</target>
        </trans-unit>
        <trans-unit id="05a7690a54b93d5cbfbc43460dc86928e9ff4860" translate="yes" xml:space="preserve">
          <source>This is the least computationally expensive strategy. It may require some user education.</source>
          <target state="translated">이것은 계산 비용이 가장 저렴한 전략입니다. 일부 사용자 교육이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fe99eed7290a54a82a6a3a3aa2c3b4a2bb07743" translate="yes" xml:space="preserve">
          <source>This is the level of HTML &quot;Hn&quot; element to which a Pod &quot;head1&quot; corresponds. For example, if &lt;code&gt;html_h_level&lt;/code&gt; is set to 2, a head1 will produce an H2, a head2 will produce an H3, and so on.</source>
          <target state="translated">이것은 포드 &quot;head1&quot;에 해당하는 HTML &quot;Hn&quot;요소의 레벨입니다. 예를 들어, &lt;code&gt;html_h_level&lt;/code&gt; 이 2로 설정 되면 head1은 H2를 생성하고 head2는 H3을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9f1717cb968bcd00575b28e1fe7b7ef5bc2ad1dd" translate="yes" xml:space="preserve">
          <source>This is the list of default @INC.</source>
          <target state="translated">이것은 기본 @INC 목록입니다.</target>
        </trans-unit>
        <trans-unit id="c5030379c7068e58facfd795f2fae683110290cb" translate="yes" xml:space="preserve">
          <source>This is the list of exports that are most commonly needed. If you are simply writing a tool, then this is probably all you need. If you need something and you cannot find it here, then you can also look at &lt;a href=&quot;#OTHER-API-EXPORTS&quot;&gt;&quot;OTHER API EXPORTS&quot;&lt;/a&gt;.</source>
          <target state="translated">가장 일반적으로 필요한 내보내기 목록입니다. 단순히 도구를 작성하고 있다면 이것이 아마도 필요한 전부일 것입니다. 필요한 것이 있는데 여기서 찾을 수없는 경우 &lt;a href=&quot;#OTHER-API-EXPORTS&quot;&gt;&quot;OTHER API EXPORTS&quot;를&lt;/a&gt; 볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="230fd1ee1eb1259a3e88a90d402aac49ef4cecd5" translate="yes" xml:space="preserve">
          <source>This is the list of scenarios that break with the new internals.</source>
          <target state="translated">다음은 새로운 내부 요소로 인해 중단되는 시나리오 목록입니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="dbf2d95bd6e71bbc931d90912ac4916f4a329b66" translate="yes" xml:space="preserve">
          <source>This is the lower layer of the Perl parser, managing characters and tokens.</source>
          <target state="translated">캐릭터와 토큰을 관리하는 Perl 파서의 하위 계층입니다.</target>
        </trans-unit>
        <trans-unit id="fb63a92bb5be14bd99b74b3769f58dfdcd714a80" translate="yes" xml:space="preserve">
          <source>This is the mechanism that applies the lexical effects of the &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma, and the main program scope effects of the &lt;code&gt;io&lt;/code&gt; or &lt;code&gt;D&lt;/code&gt; options for the &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;-C command-line switch&lt;/a&gt; and &lt;a href=&quot;perlrun#PERL_UNICODE&quot;&gt;PERL_UNICODE environment variable&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma 의 어휘 효과 와 &lt;a href=&quot;perlrun#-C-%5Bnumber%2Flist%5D&quot;&gt;-C 명령 줄 스위치&lt;/a&gt; 및 &lt;a href=&quot;perlrun#PERL_UNICODE&quot;&gt;PERL_UNICODE 환경 변수&lt;/a&gt; 에 대한 &lt;code&gt;io&lt;/code&gt; 또는 &lt;code&gt;D&lt;/code&gt; 옵션 의 주요 프로그램 범위 효과 를 적용하는 메커니즘입니다 .</target>
        </trans-unit>
        <trans-unit id="12044b247d0e34184da8c4d82be7f35e7cce2add" translate="yes" xml:space="preserve">
          <source>This is the module that is used as a frontend to the Perl Compiler.</source>
          <target state="translated">Perl Compiler의 프론트 엔드로 사용되는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="d48b3bc5add16b69ab6764e7aa4a54509b451c2e" translate="yes" xml:space="preserve">
          <source>This is the most compact form, but it is not well suited for printing or embedding in places that can't handle arbitrary data.</source>
          <target state="translated">이 형식은 가장 간결한 형식이지만 임의의 데이터를 처리 할 수없는 장소에 인쇄하거나 포함하는 데 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f4b6501db089524291430841e3e59e649fd1a7f" translate="yes" xml:space="preserve">
          <source>This is the most important method in Locale::Maketext:</source>
          <target state="translated">이것은 Locale :: Maketext에서 가장 중요한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d28b3b2c303cf9fffc3f2cf8865a24397d2fa229" translate="yes" xml:space="preserve">
          <source>This is the most serious problem in Perl 5.20 and earlier. Fixing this required internal changes in Perl 5.22.</source>
          <target state="translated">이것은 Perl 5.20 및 이전 버전에서 가장 심각한 문제입니다. Perl 5.22에서이 내부 변경 사항을 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="cb5f568d5745a8f721d4963249e63f161fe9a2ef" translate="yes" xml:space="preserve">
          <source>This is the name or Internet address of the remote host the server is running on. We could have specified a longer name like &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , or an address like &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . For demonstration purposes, we've used the special hostname &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; , which should always mean the current machine you're running on. The corresponding Internet address for localhost is &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; , if you'd rather use that.</source>
          <target state="translated">서버가 실행중인 원격 호스트의 이름 또는 인터넷 주소입니다. 우리는 같은 긴 이름을 지정한 수 있었다 &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , 또는 같은 주소 &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . 데모 목적으로 특수 호스트 이름 &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; 를 사용했습니다 . 이는 항상 현재 실행중인 시스템을 의미해야합니다. localhost에 해당하는 인터넷 주소는 &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; 입니다 ( 대신 사용하려는 경우).</target>
        </trans-unit>
        <trans-unit id="42e5cc1bbed69994d8e44a1b803efbbc64d1c0d4" translate="yes" xml:space="preserve">
          <source>This is the name or Internet address of the remote host the server is running on. We could have specified a longer name like &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt;, or an address like &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt;. For demonstration purposes, we've used the special hostname &lt;code&gt;&quot;localhost&quot;&lt;/code&gt;, which should always mean the current machine you're running on. The corresponding Internet address for localhost is &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt;, if you'd rather use that.</source>
          <target state="translated">서버가 실행중인 원격 호스트의 이름 또는 인터넷 주소입니다. 우리는 같은 긴 이름을 지정한 수 있었다 &lt;code&gt;&quot;www.perl.com&quot;&lt;/code&gt; , 또는 같은 주소 &lt;code&gt;&quot;207.171.7.72&quot;&lt;/code&gt; . 데모 목적으로 우리는 항상 현재 실행중인 컴퓨터를 의미하는 특별한 호스트 이름 &lt;code&gt;&quot;localhost&quot;&lt;/code&gt; 를 사용 했습니다. localhost에 해당하는 인터넷 주소는 &lt;code&gt;&quot;127.0.0.1&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5d714b1786acd33fab070cc7bfc211af580c75d5" translate="yes" xml:space="preserve">
          <source>This is the namespace for formatters. This is an empty package.</source>
          <target state="translated">이것은 포맷터의 네임 스페이스입니다. 이것은 빈 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="b0d786852f1a6c1dea1d6a765cf9070b49db2732" translate="yes" xml:space="preserve">
          <source>This is the normal entry point for automatic dynamic loading in Perl.</source>
          <target state="translated">이것은 Perl에서 자동 동적 로딩을위한 일반적인 진입 점입니다.</target>
        </trans-unit>
        <trans-unit id="26340ea40f200c2c1e1dfe6e82669d9feb0fd306" translate="yes" xml:space="preserve">
          <source>This is the normal operation. It translates various literals encountered in the Perl source file from the encoding</source>
          <target state="translated">이것은 정상적인 작동입니다. Perl 소스 파일에서 발견 된 다양한 리터럴을 인코딩에서 번역합니다.</target>
        </trans-unit>
        <trans-unit id="c846e2c1af2936192fe995d1b6beec9ea4c839cb" translate="yes" xml:space="preserve">
          <source>This is the old form of &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;&quot;gv_fetchmeth_pvn_autoload&quot;&lt;/a&gt;, which has no flags parameter.</source>
          <target state="translated">이것은 flags 매개 변수가없는 &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;&quot;gv_fetchmeth_pvn_autoload&quot;&lt;/a&gt; 의 이전 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="a889101131356644debee9dab9979e5406fc98f2" translate="yes" xml:space="preserve">
          <source>This is the old form of &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt;, which has no flags parameter.</source>
          <target state="translated">플래그 매개 변수가없는 &lt;a href=&quot;#gv_fetchmeth_pvn_autoload&quot;&gt;gv_fetchmeth_pvn_autoload&lt;/a&gt; 의 이전 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="230f7f138d64e36f52758c07316eb9c1eee4e053" translate="yes" xml:space="preserve">
          <source>This is the only executable with does not require OS/2.</source>
          <target state="translated">OS / 2가 필요없는 유일한 실행 파일입니다.</target>
        </trans-unit>
        <trans-unit id="46297865ee1d382d368720a50d5f077d38b59862" translate="yes" xml:space="preserve">
          <source>This is the only form of quoting in perl where there is no need to worry about escaping content, something that code generators can and do make good use of.</source>
          <target state="translated">이것은 코드 생성기가 사용할 수 있고 잘 활용할 수있는 콘텐츠 탈출에 대해 걱정할 필요가없는 유일한 perl 인용 형식입니다.</target>
        </trans-unit>
        <trans-unit id="346faabc7115374b4309ef76fa20a9a155ac4597" translate="yes" xml:space="preserve">
          <source>This is the only implementation for which &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; does anything &quot;interesting&quot;.</source>
          <target state="translated">이것은 &lt;code&gt;PerlIO_apply_layers()&lt;/code&gt; 가 &quot;흥미로운&quot;것을 하는 유일한 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="60f1241a31b62b7745507b52788f2eba7d4fd0c6" translate="yes" xml:space="preserve">
          <source>This is the only way you can create a custom named sequence of code points.</source>
          <target state="translated">이것은 사용자 지정 명명 된 코드 포인트 시퀀스를 만들 수있는 유일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="78dcaca387707f29d8cc3a2585a362d39b2766bf" translate="yes" xml:space="preserve">
          <source>This is the output when it is executed:</source>
          <target state="translated">이것이 실행될 때의 출력입니다.</target>
        </trans-unit>
        <trans-unit id="e716423e3a6c7217437c06867a38499b8c6c05ea" translate="yes" xml:space="preserve">
          <source>This is the preferred method of passing input to the constructor.</source>
          <target state="translated">이것은 생성자에게 입력을 전달하는 기본 방법입니다.</target>
        </trans-unit>
        <trans-unit id="3f3e131dd809784965b27d16458f5818d1df8c11" translate="yes" xml:space="preserve">
          <source>This is the preferred way to get the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object. You should</source>
          <target state="translated">이것은 &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; 객체 를 얻는 데 선호되는 방법 입니다. 당신은해야</target>
        </trans-unit>
        <trans-unit id="fcb65586c0c2ac8b0ca9da340eb039802998534b" translate="yes" xml:space="preserve">
          <source>This is the preferred way to get the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object. You should</source>
          <target state="translated">이것은 &lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt; 객체 를 얻는 데 선호되는 방법 입니다. 당신은해야</target>
        </trans-unit>
        <trans-unit id="cf4eba93f23876936daa22cc2fcf49ea7ecb8e5d" translate="yes" xml:space="preserve">
          <source>This is the primary function for copying scalars, and most other copy-ish functions and macros use this underneath.</source>
          <target state="translated">이것은 스칼라 복사를위한 기본 기능이며 대부분의 다른 복사 기능과 매크로는이 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d8fe859ac5bcdefed33ae4b1e5fa108b5fef0c8f" translate="yes" xml:space="preserve">
          <source>This is the primary interface for interacting with &lt;code&gt;File::Temp&lt;/code&gt;. Using the OO interface a temporary file can be created when the object is constructed and the file can be removed when the object is no longer required.</source>
          <target state="translated">이것은 &lt;code&gt;File::Temp&lt;/code&gt; 와 상호 작용하기위한 기본 인터페이스입니다 . OO 인터페이스를 사용하면 개체가 생성 될 때 임시 파일을 만들 수 있으며 개체가 더 이상 필요하지 않을 때 파일을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d281635f40f0f24e55d7183cb71173555b3719a4" translate="yes" xml:space="preserve">
          <source>This is the primary interface for interacting with C&amp;lt;:temp&amp;gt;. Using the OO interface a temporary file can be created when the object is constructed and the file can be removed when the object is no longer required.</source>
          <target state="translated">C &amp;lt;: temp&amp;gt;와 상호 작용하기위한 기본 인터페이스입니다. OO 인터페이스를 사용하면 개체를 만들 때 임시 파일을 만들 수 있고 개체가 더 이상 필요하지 않을 때 파일을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7186c8d7e458e49979629ada95eb0a97fa3037b" translate="yes" xml:space="preserve">
          <source>This is the primary object described by the</source>
          <target state="translated">이것은에서 설명하는 기본 개체입니다.</target>
        </trans-unit>
        <trans-unit id="a4f779241fea71e4ea7e971c687ff2b2673775df" translate="yes" xml:space="preserve">
          <source>This is the primary object described by the metadata. In the context of this document it usually refers to a collection of modules, scripts, and/or documents that are distributed together for other developers to use. Examples of distributions are &lt;code&gt;Class-Container&lt;/code&gt;, &lt;code&gt;libwww-perl&lt;/code&gt;, or &lt;code&gt;DBI&lt;/code&gt;.</source>
          <target state="translated">이것은 메타 데이터에서 설명하는 기본 개체입니다. 이 문서의 맥락에서 일반적으로 다른 개발자가 사용할 수 있도록 함께 배포되는 모듈, 스크립트 및 / 또는 문서 모음을 의미합니다. 배포의 예는 &lt;code&gt;Class-Container&lt;/code&gt; , &lt;code&gt;libwww-perl&lt;/code&gt; 또는 &lt;code&gt;DBI&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="05f4f2b81da1e7eb80147e0a0e24d6cb8a7b101e" translate="yes" xml:space="preserve">
          <source>This is the purpose of</source>
          <target state="translated">이것이 목적입니다</target>
        </trans-unit>
        <trans-unit id="c0f05eba3f3af5d5e22733e34a51cbbb4cab705c" translate="yes" xml:space="preserve">
          <source>This is the recommended interface for creation of temporary directories. By default the directory will not be removed on exit (that is, it won't be temporary; this behaviour can not be changed because of issues with backwards compatibility). To enable removal either use the CLEANUP option which will trigger removal on program exit, or consider using the &quot;newdir&quot; method in the object interface which will allow the directory to be cleaned up when the object goes out of scope.</source>
          <target state="translated">임시 디렉토리 작성에 권장되는 인터페이스입니다. 기본적으로 디렉토리는 종료시 제거되지 않습니다 (즉, 일시적이지 않습니다. 이전 버전과의 호환성 문제로 인해이 동작을 변경할 수 없음). 제거를 사용하려면 프로그램 종료시 제거를 트리거하는 CLEANUP 옵션을 사용하거나 오브젝트가 범위를 벗어날 때 디렉토리를 정리할 수있는 오브젝트 인터페이스에서 &quot;newdir&quot;메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bd97525cca1b83f38306d58e91365a2fad99fcd5" translate="yes" xml:space="preserve">
          <source>This is the root directory into which the code will be installed. It</source>
          <target state="translated">이것은 코드가 설치 될 루트 디렉토리입니다. 그것</target>
        </trans-unit>
        <trans-unit id="ccd5a95520dab502fdf532a36ef8bc1afc084031" translate="yes" xml:space="preserve">
          <source>This is the safest way to write a test tool. The only two downsides to this are a slight performance decrease, and some extra indentation in your source. If the indentation is a problem for you then you can take a peek at the next section.</source>
          <target state="translated">이것은 테스트 도구를 작성하는 가장 안전한 방법입니다. 이것에 대한 유일한 두 가지 단점은 약간의 성능 저하와 소스의 추가 들여 쓰기입니다. 들여 쓰기가 문제가되는 경우 다음 섹션을 살펴볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a624fea38bb2c4a19922a757fc87c2cbf4093ef7" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;Test::Simple&quot;&gt;Test::Simple&lt;/a&gt;'s &lt;code&gt;ok()&lt;/code&gt; routine.</source>
          <target state="translated">이것은 &lt;a href=&quot;Test::Simple&quot;&gt;Test :: Simple&lt;/a&gt; 의 &lt;code&gt;ok()&lt;/code&gt; 루틴과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="bc652aaf1adcdf8a4d8dd86919935233000111ae" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;simple&quot;&gt;Test::Simple&lt;/a&gt;'s &lt;code&gt;ok()&lt;/code&gt; routine.</source>
          <target state="translated">이것은 &lt;a href=&quot;simple&quot;&gt;Test :: Simple&lt;/a&gt; 의 &lt;code&gt;ok()&lt;/code&gt; 루틴과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="d5cebaac92f671384da0099c3e4a676330931c2e" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;$ipc-&amp;gt;abort($msg)&lt;/code&gt; except that it uses &lt;code&gt;Carp::longmess&lt;/code&gt; to add a stack trace to the message.</source>
          <target state="translated">이것은과 동일 &lt;code&gt;$ipc-&amp;gt;abort($msg)&lt;/code&gt; 이 사용하는 것을 제외하고 &lt;code&gt;Carp::longmess&lt;/code&gt; 메시지에 스택 트레이스를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c649411547df265abe7a680926ab24280bdd17cc" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;FB_QUIET&lt;/code&gt; above, except that instead of being silent on errors, it issues a warning. This is handy for when you are debugging.</source>
          <target state="translated">이것은과 동일 &lt;code&gt;FB_QUIET&lt;/code&gt; 그 대신 오류에 침묵하는 것, 그것은이 경고를 제외하고, 위. 디버깅 할 때 편리합니다.</target>
        </trans-unit>
        <trans-unit id="0ae700aa87900b468f3878348b89397f03c7e04f" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{Blank}&lt;/code&gt; : a character that changes the spacing horizontally.</source>
          <target state="translated">이것은 &lt;code&gt;\h&lt;/code&gt; 및 &lt;code&gt;\p{Blank}&lt;/code&gt; 같습니다. 간격을 가로로 변경하는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="eddb21086b3856150972d7a2ffd7db90bf137955" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{Blank}&lt;/code&gt;: a character that changes the spacing horizontally.</source>
          <target state="translated">이것은 &lt;code&gt;\h&lt;/code&gt; 및 &lt;code&gt;\p{Blank}&lt;/code&gt; : 가로로 간격을 변경하는 문자 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="fbc09138370cb171c094bfc6c30b8f2a18097f95" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt; : A character that changes the spacing horizontally.</source>
          <target state="translated">이것은 &lt;code&gt;\h&lt;/code&gt; 및 &lt;code&gt;\p{HorizSpace}&lt;/code&gt; 같습니다. 간격을 가로로 변경하는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="ebe5b4b519c44b8c20dae3a8295da82dc1226742" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\h&lt;/code&gt; and &lt;code&gt;\p{HorizSpace}&lt;/code&gt;: A character that changes the spacing horizontally.</source>
          <target state="translated">&lt;code&gt;\h&lt;/code&gt; 및 &lt;code&gt;\p{HorizSpace}&lt;/code&gt; 와 동일 합니다. 가로로 간격을 바꾸는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="7b5f883b8c3b129477e8adf6ce3d17842b4509c9" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, including beyond ASCII.</source>
          <target state="translated">이것은 ASCII 이외 &lt;code&gt;\s&lt;/code&gt; 것을 포함하여 \ s 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7e9dbff8b446293a154a68b17c80ce2409d2cfe1" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\s&lt;/code&gt;, restricted to ASCII, namely &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; and starting in Perl v5.18, a vertical tab.</source>
          <target state="translated">이것은 &lt;code&gt;\s&lt;/code&gt; 와 동일하며 ASCII로 제한됩니다. 즉 &lt;code&gt;[ \f\n\r\t]&lt;/code&gt; 수직 탭인 Perl v5.18부터 시작합니다.</target>
        </trans-unit>
        <trans-unit id="6256409cd33d9cdf7337e20319de658ce6caee15" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\v&lt;/code&gt; : A character that changes the spacing vertically.</source>
          <target state="translated">이것은 &lt;code&gt;\v&lt;/code&gt; 와 동일 합니다. 간격을 세로로 변경하는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="e93db47fe41852a54b4800440e60bc3e5fb69deb" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\v&lt;/code&gt;: A character that changes the spacing vertically.</source>
          <target state="translated">이것은과 동일 &lt;code&gt;\v&lt;/code&gt; 수직 간격 변경 문자 :.</target>
        </trans-unit>
        <trans-unit id="4da601bf04f15ab42ea7eb6f0e3d60619c539d79" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , including over 100_000 characters beyond ASCII.</source>
          <target state="translated">이것은 ASCII를 넘어 100_000자를 초과하는 것을 포함하여 &lt;code&gt;\w&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="f93b7dea9a5c9d0ac4b1d3dcf4d8d34138603086" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt; , restricted to ASCII, namely &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</source>
          <target state="translated">이것은 &lt;code&gt;\w&lt;/code&gt; 와 동일하며 ASCII로 제한됩니다. 즉 &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7aecc4c35f5da4819cdbf90f7c987cd623295b80" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt;, including over 100_000 characters beyond ASCII.</source>
          <target state="translated">이것은 ASCII 이외의 100_000 개 이상의 문자를 포함하여 &lt;code&gt;\w&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="1b373b07d064d05bea416853d852c54e573ab565" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;\w&lt;/code&gt;, restricted to ASCII, namely &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</source>
          <target state="translated">이것은 &lt;code&gt;\w&lt;/code&gt; 와 같으며 ASCII로 제한됩니다. 즉 &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2326d742b2e928e15382460bcb0b3e0deff06c68" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;send_ev2()&lt;/code&gt;, except it builds and returns the event without sending it.</source>
          <target state="translated">이것은과 동일 &lt;code&gt;send_ev2()&lt;/code&gt; 가 빌드하고 그것을 전송하지 않고도 이벤트를 반환 제외.</target>
        </trans-unit>
        <trans-unit id="c9bb59b2ee7dd2d7cbdc8604ab007944c5dcedc3" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;send_event()&lt;/code&gt;, except it builds and returns the event without sending it.</source>
          <target state="translated">이것은과 동일 &lt;code&gt;send_event()&lt;/code&gt; 그것을 구축하고 그것을 전송하지 않고도 이벤트를 반환 제외.</target>
        </trans-unit>
        <trans-unit id="8213b0c400904773c8fb4aa6534b5c57f7c89c7f" translate="yes" xml:space="preserve">
          <source>This is the same as machine name except that default matches any name. There can be only one default token, and it must be after all machine tokens. This is normally used as:</source>
          <target state="translated">기본값은 모든 이름과 일치한다는 점을 제외하면 시스템 이름과 동일합니다. 기본 토큰은 하나만있을 수 있으며 모든 머신 토큰 뒤에 있어야합니다. 일반적으로 다음과 같이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="afe36ef7b28dddedb40e25b8fa31da2bc2facf52" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;mblen()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;mbrlen(3)&quot;&gt;&lt;code&gt;mbrlen&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;mblen&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;mblen()&lt;/code&gt; 의 C 함수 mblen () 과 동일합니다 . 스레드 된 &lt;a href=&quot;mbrlen(3)&quot;&gt; &lt;code&gt;mbrlen&lt;/code&gt; &lt;/a&gt; 에서는 &lt;code&gt;mblen&lt;/code&gt; 대신 사용 가능한 경우 스레드 안전성이 더 높은 mbrlen (3)을 투명하게 (거의) 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="885914858dff1476d770f30f3747b5d73ce30f3c" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;mbtowc()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;mbrtowc(3)&quot;&gt;&lt;code&gt;mbrtowc&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;mbtowc&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;mbtowc()&lt;/code&gt; 의 C 함수 mbtowc () 와 동일합니다 . 스레드 된 &lt;a href=&quot;mbrtowc(3)&quot;&gt; &lt;code&gt;mbrtowc&lt;/code&gt; &lt;/a&gt; 에서는 &lt;code&gt;mbtowc&lt;/code&gt; 대신 사용 가능한 경우 스레드 안전성이 더 높은 mbrtowc (3)를 투명하게 (거의) 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="e368c63bdf4c570ae1b4c310ff27b1113dd7b3e3" translate="yes" xml:space="preserve">
          <source>This is the same as the C function &lt;code&gt;wctomb()&lt;/code&gt; on unthreaded perls. On threaded perls, it transparently (almost) substitutes the more thread-safe &lt;a href=&quot;wcrtomb(3)&quot;&gt;&lt;code&gt;wcrtomb&lt;/code&gt;(3)&lt;/a&gt;, if available, instead of &lt;code&gt;wctomb&lt;/code&gt;.</source>
          <target state="translated">이것은 스레드되지 않은 펄 의 C 함수 &lt;code&gt;wctomb()&lt;/code&gt; 과 동일합니다 . 스레드 된 &lt;a href=&quot;wcrtomb(3)&quot;&gt; &lt;code&gt;wcrtomb&lt;/code&gt; &lt;/a&gt; 에서는 &lt;code&gt;wctomb&lt;/code&gt; 대신 사용 가능한 경우 스레드 안전성이 더 높은 wcrtomb (3)를 투명하게 (거의) 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="941bd502236d1dea3c975471a03ebbb873d56ae1" translate="yes" xml:space="preserve">
          <source>This is the same as the bin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">이것은 bin 변수와 동일하지만 makefile에서 사용하기 위해 구성시 파일 이름이 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="c486c8726e0003d1e95bb96e015320afb3b6dfa4" translate="yes" xml:space="preserve">
          <source>This is the same as the sitebin variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">이것은 sitebin 변수와 동일하지만 makefile에서 사용하기 위해 구성시 파일 이름이 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="cdc9f1e5725bf6d120b1c425b6dcc03a53feac1e" translate="yes" xml:space="preserve">
          <source>This is the same as the sitescript variable, but is filename expanded at configuration time, for use in your makefiles.</source>
          <target state="translated">이것은 sitescript 변수와 동일하지만 makefile에서 사용하기 위해 구성시 파일 이름이 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="43bee717903e4bfa25fa311f06b4356fc3deab92" translate="yes" xml:space="preserve">
          <source>This is the same executable as</source>
          <target state="translated">이것은 다음과 같은 실행 파일입니다</target>
        </trans-unit>
        <trans-unit id="3ed82b3d4aecee7f6fc3e2f9453c4cdce17f44ec" translate="yes" xml:space="preserve">
          <source>This is the same facility used by the ANSI_COLORS_ALIASES environment variable (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; below) but can be used at runtime, not just when the module is loaded.</source>
          <target state="translated">이것은 ANSI_COLORS_ALIASES 환경 변수 (아래 &lt;a href=&quot;#ENVIRONMENT&quot;&gt;&quot;ENVIRONMENT&quot;&lt;/a&gt; 참조)에서 사용하는 것과 동일한 기능 이지만 모듈이로드 될 때뿐만 아니라 런타임에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b93eb63da42a6ae191e4cb65dbdf73df302acbd" translate="yes" xml:space="preserve">
          <source>This is the same facility used by the ANSI_COLORS_ALIASES environment variable (see &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; below) but can be used at runtime, not just when the module is loaded.</source>
          <target state="translated">이는 ANSI_COLORS_ALIASES 환경 변수 (아래 &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; 참조)에서 사용하는 것과 동일한 기능 이지만 모듈을로드 할 때뿐만 아니라 런타임에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08be885869480e470d72f31729368e83f4f891ce" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;P operation&quot; (the name derives from the Dutch word &quot;pak&quot;, which means &quot;capture&quot; -- the semaphore operations were named by the late Dijkstra, who was Dutch).</source>
          <target state="translated">이것은 세마포어 &quot;P operation&quot;(네덜란드어 단어 &quot;pak&quot;에서 유래 한 것으로 &quot;캡처&quot;를 의미합니다. 세마포어 조작은 네덜란드 인 Dijkstra 후기에 의해 명명되었습니다).</target>
        </trans-unit>
        <trans-unit id="2f98c90508409620ac27064f1b688373cf5874e7" translate="yes" xml:space="preserve">
          <source>This is the semaphore &quot;V operation&quot; (the name derives from the Dutch word &quot;vrij&quot;, which means &quot;release&quot;).</source>
          <target state="translated">이것은 세마포어 &quot;V operation&quot;(네덜란드어 단어 &quot;vrij&quot;에서 파생 된 &quot;release&quot;를 의미 함)입니다.</target>
        </trans-unit>
        <trans-unit id="a276cc3b822e5fb68d4f30cd1b14facc89497c26" translate="yes" xml:space="preserve">
          <source>This is the service name or port number we'd like to connect to. We could have gotten away with using just &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; on systems with a well-configured system services file,[FOOTNOTE: The system services file is found in</source>
          <target state="translated">연결하고자하는 서비스 이름 또는 포트 번호입니다. 잘 구성된 시스템 서비스 파일이있는 시스템에서 &lt;code&gt;&quot;daytime&quot;&lt;/code&gt; 만 사용 하면됩니다. [FOOTNOTE : 시스템 서비스 파일은 다음 위치에 있습니다.</target>
        </trans-unit>
        <trans-unit id="55fdeec4b425af4c4fa8e9a6591ac8f8843fb073" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 3166-1, such as 064 for Bhutan. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">Bhutan의 경우 064와 같이 ISO 3166-1의 3 자리 숫자 코드 세트입니다. 이 코드는 실제로 UN 통계 부서에서 정의하고 유지 관리합니다.</target>
        </trans-unit>
        <trans-unit id="233002d6fef285c425f811c11a49106685a1ea36" translate="yes" xml:space="preserve">
          <source>This is the set of three-digit numeric codes from ISO 4217.</source>
          <target state="translated">ISO 4217의 3 자리 숫자 코드 세트입니다.</target>
        </trans-unit>
        <trans-unit id="bfc22c533358da5232ffaf0870e72df120463375" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) bibliographic codes from ISO 639-2 and 639-5, such as 'heb' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">이것은 히브리어의 경우 'heb'와 같이 ISO 639-2 및 639-5의 3 글자 (소문자) 서지 코드 세트입니다. 또한 IANA 언어 레지스트리에 포함 된이 세트에 대한 추가 사항도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="b92c48de1f053f976481719f4f81fdeafd62c023" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) codes from ISO 3166-1, such as 'brb' for Barbados. These codes are actually defined and maintained by the U.N. Statistics division.</source>
          <target state="translated">이것은 바베이도스의 경우 'brb'와 같이 ISO 3166-1의 3 자리 (소문자) 코드 세트입니다. 이 코드는 실제로 UN 통계 부서에서 정의하고 유지 관리합니다.</target>
        </trans-unit>
        <trans-unit id="fc3ae49739721f6f95ec3491951800d9f83ab84d" translate="yes" xml:space="preserve">
          <source>This is the set of three-letter (lowercase) terminologic codes from ISO 639.</source>
          <target state="translated">ISO 639의 3 글자 (소문자) 용어 코드 세트입니다.</target>
        </trans-unit>
        <trans-unit id="e6807d4fe48e31222818be49432ee24ba40f6e11" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 3166-1, such as 'tv' for Tuvalu.</source>
          <target state="translated">이것은 투발루의 경우 'tv'와 같이 ISO 3166-1의 2 자리 (소문자) 코드 세트입니다.</target>
        </trans-unit>
        <trans-unit id="acd74dadb16fbf234cd8906af18d327510923daf" translate="yes" xml:space="preserve">
          <source>This is the set of two-letter (lowercase) codes from ISO 639-1, such as 'he' for Hebrew. It also includes additions to this set included in the IANA language registry.</source>
          <target state="translated">이것은 히브리어에 대한 'he'와 같이 ISO 639-1의 두 문자 (소문자) 코드 세트입니다. 또한 IANA 언어 레지스트리에 포함 된이 세트에 대한 추가 사항도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="94c349798d0090117d6582dfd31da6381fa814e6" translate="yes" xml:space="preserve">
          <source>This is the standard unix library builder. We use wlib. With Watcom 10.6, when wlib is linked as &quot;ar&quot;, it behaves like ar and all is fine. Under 9.5, a cover is required. One is included in ../qnx</source>
          <target state="translated">이것은 표준 유닉스 라이브러리 빌더입니다. 우리는 wlib를 사용합니다. Watcom 10.6에서 wlib가 &quot;ar&quot;로 연결되면 ar처럼 동작하며 모두 정상입니다. 9.5 미만에서는 커버가 필요합니다. 하나는 ../qnx에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4298b5ac2d6233992a08de03f4d3419e5f21e00f" translate="yes" xml:space="preserve">
          <source>This is the time string for which the perl binary was compiled. The default value is 0.</source>
          <target state="translated">이것은 perl 바이너리가 컴파일 된 시간 문자열입니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="c63d2ff5b62f973d0b02ad27fd22b2f4f908d588" translate="yes" xml:space="preserve">
          <source>This is the true/false value of the test after TODO and similar modifiers are taken into account.</source>
          <target state="translated">TODO 및 유사한 수정자를 고려한 후 테스트의 참 / 거짓 값입니다.</target>
        </trans-unit>
        <trans-unit id="e58e7a91164b2c61f4741d28ff686a23ffe5c5eb" translate="yes" xml:space="preserve">
          <source>This is the useragent as &lt;code&gt;LWP&lt;/code&gt; will report it.</source>
          <target state="translated">&lt;code&gt;LWP&lt;/code&gt; 가보고 할 때 이것이 useragent 입니다.</target>
        </trans-unit>
        <trans-unit id="15261bed556ba490ce02abc9f071087b0df0d036" translate="yes" xml:space="preserve">
          <source>This is the version of &lt;code&gt;Test::Harness&lt;/code&gt; .</source>
          <target state="translated">이것은 &lt;code&gt;Test::Harness&lt;/code&gt; 의 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="cdc8920fd29fd268d61dc44aa12aa06fb0110f8c" translate="yes" xml:space="preserve">
          <source>This is the version of &lt;code&gt;Test::Harness&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;Test::Harness&lt;/code&gt; 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="6a22ff202852862487c229ecb92eca4a84e51119" translate="yes" xml:space="preserve">
          <source>This is to prevent the problem of one module changing the array base out from under another module inadvertently. See &lt;a href=&quot;perlvar#%24%5b&quot;&gt;$[ in perlvar&lt;/a&gt; and &lt;a href=&quot;arybase&quot;&gt;arybase&lt;/a&gt;.</source>
          <target state="translated">이는 한 모듈이 다른 모듈 아래에서 어레이베이스를 실수로 변경하는 문제를 방지하기위한 것입니다. &lt;a href=&quot;perlvar#%24%5b&quot;&gt;perlvar&lt;/a&gt; 및 &lt;a href=&quot;arybase&quot;&gt;arybase의 &lt;/a&gt;$ [를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd68c145924ef1010d3fbbd465d445886b4ed770" translate="yes" xml:space="preserve">
          <source>This is tremendously more efficient than reading the entire file into memory as an array of lines and then processing it one element at a time, which is often--if not almost always--the wrong approach. Whenever you see someone do this:</source>
          <target state="translated">이것은 전체 파일을 메모리에 행 배열로 읽어서 한 번에 한 요소 씩 처리하는 것보다 훨씬 더 효율적입니다. 누군가가 이것을 볼 때마다 :</target>
        </trans-unit>
        <trans-unit id="a35e6506a9b88f457b9f4a865f1ac711f7750ab3" translate="yes" xml:space="preserve">
          <source>This is true for all numeric template codes. But don't expect miracles: if the packed value exceeds the allotted byte capacity, high order bits are silently discarded, and unpack certainly won't be able to pull them back out of some magic hat. And, when you pack using a signed template code such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;, an excess value may result in the sign bit getting set, and unpacking this will smartly return a negative value.</source>
          <target state="translated">이것은 모든 숫자 템플릿 코드에 적용됩니다. 그러나 기적을 기대하지 마십시오. 패킹 된 값이 할당 된 바이트 용량을 초과하면 상위 비트는 자동으로 버려지고 팩을 풀면 마술 모자에서 빼낼 수 없습니다. 또한 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 와 같은 서명 된 템플릿 코드를 사용하여 압축하면 초과 된 값으로 인해 부호 비트가 설정 될 수 있으며, 압축을 풀면 음수 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="09f7b7fd23faf4943e83ad191dd610755470b274" translate="yes" xml:space="preserve">
          <source>This is true for all numeric template codes. But don't expect miracles: if the packed value exceeds the allotted byte capacity, high order bits are silently discarded, and unpack certainly won't be able to pull them back out of some magic hat. And, when you pack using a signed template code such as &lt;code&gt;s&lt;/code&gt;, an excess value may result in the sign bit getting set, and unpacking this will smartly return a negative value.</source>
          <target state="translated">이는 모든 숫자 템플릿 코드에 해당됩니다. 그러나 기적을 기대하지 마십시오. 패킹 된 값이 할당 된 바이트 용량을 초과하면 상위 비트가 조용히 폐기되고 언팩으로 인해 매직 모자에서 다시 가져올 수 없습니다. 그리고 &lt;code&gt;s&lt;/code&gt; 와 같은 서명 된 템플릿 코드를 사용하여 패킹 할 때 초과 값으로 인해 부호 비트가 설정 될 수 있으며이를 풀면 음의 값이 스마트하게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e7272df8729202c7ff033cb7fabd9d5f450b6676" translate="yes" xml:space="preserve">
          <source>This is true on Unix, where &lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; yields &quot;/a/b&quot; and &lt;code&gt;rootdir()&lt;/code&gt; is &quot;/&quot;. Note that &lt;code&gt;rootdir()&lt;/code&gt; on Mac OS is the startup volume, which is the closest in concept to Unix' &quot;/&quot;. This should help to run existing scripts originally written for Unix.</source>
          <target state="translated">&lt;code&gt;catdir(&quot;&quot;,&quot;a&quot;,&quot;b&quot;)&lt;/code&gt; 가 &quot;/ a / b&quot;를 생성하고 &lt;code&gt;rootdir()&lt;/code&gt; 이 &quot;/&quot;인 Unix에서 마찬가지 입니다. 참고 &lt;code&gt;rootdir()&lt;/code&gt; 맥 OS에 대한 것은 &quot;/&quot; '유닉스 개념에 가장 가까운 시동 볼륨입니다. 이것은 원래 유닉스 용으로 작성된 기존 스크립트를 실행하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="397412f4d7a6d97f2f133b4c7f78e290d9cd2f84" translate="yes" xml:space="preserve">
          <source>This is typically used when testing cannot continue such as a critical module failing to compile or a necessary external utility not being available such as a database connection failing.</source>
          <target state="translated">일반적으로 컴파일에 실패한 중요 모듈 또는 데이터베이스 연결 실패와 같은 필요한 외부 유틸리티를 사용할 수없는 등 테스트를 계속할 수없는 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bb1c3b06955402418f9a1645b31426cf2675075b" translate="yes" xml:space="preserve">
          <source>This is ugly. As of Perl 5.9.2, there's a much nicer way to express your desire for a certain byte-order: the &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;/code&gt; modifiers. &lt;code&gt;&amp;gt;&lt;/code&gt; is the big-endian modifier, while &lt;code&gt;&amp;lt;&lt;/code&gt; is the little-endian modifier. Using them, we could rewrite the above code as:</source>
          <target state="translated">이것은 추악합니다. Perl 5.9.2부터는 특정 바이트 순서에 대한 욕망을 표현하는 더 좋은 방법이 있습니다 : &lt;code&gt;&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;&lt;/code&gt; 수정 자. &lt;code&gt;&amp;gt;&lt;/code&gt; 는 빅 엔디안 수정 자이고 &lt;code&gt;&amp;lt;&lt;/code&gt; 는 리틀 엔디안 수정 자입니다. 이를 사용하여 위 코드를 다음과 같이 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f64a4511ee072e665d5896089985a46b9305c064" translate="yes" xml:space="preserve">
          <source>This is used (optionally) by configure to list the contents of libraries. I will generate a cover function on the fly in the UU directory.</source>
          <target state="translated">라이브러리의 내용을 나열하도록 구성하여 선택적으로 사용됩니다. UU 디렉토리에서 즉시 표지 기능을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="84060e3f0779377a177060ca53204b2049c61bfc" translate="yes" xml:space="preserve">
          <source>This is used by &lt;a href=&quot;Test2::Event::Plan&quot;&gt;Test2::Event::Plan&lt;/a&gt; to exit 0 when the plan is 'skip_all'. This is also used by &lt;a href=&quot;Test2::Event:Bail&quot;&gt;Test2::Event:Bail&lt;/a&gt; to force the test to exit with a failure.</source>
          <target state="translated">이것은 계획이 'skip_all'일 때 &lt;a href=&quot;Test2::Event::Plan&quot;&gt;Test2 :: Event :: Plan&lt;/a&gt; 에서 0을 종료 하는 데 사용됩니다 . 이것은 또한 &lt;a href=&quot;Test2::Event:Bail&quot;&gt;Test2 :: Event : Bail&lt;/a&gt; 에서 실패와 함께 테스트를 강제 종료하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e13da45b8fdb5dfbf619cb00d77540e51b9f0de1" translate="yes" xml:space="preserve">
          <source>This is used by Perl itself only for accessing operating system error messages via &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; and &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$^E&lt;/a&gt;.</source>
          <target state="translated">이것은 Perl 자체에서 &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; 를 통해 운영 체제 오류 메시지에 액세스하는 데만 사용됩니다 . 그리고 &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$ ^ E&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f57cc2e0a5e98dad21fe0583032325ceef3e8bcf" translate="yes" xml:space="preserve">
          <source>This is used by XS code that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware to force the locale for category &lt;code&gt;LC_NUMERIC&lt;/code&gt; to be what perl thinks is the current underlying locale. (The perl interpreter could be wrong about what the underlying locale actually is if some C or XS code has called the C library function &lt;a href=&quot;http://man.he.net/man3/setlocale&quot;&gt;setlocale(3)&lt;/a&gt; behind its back; calling &lt;a href=&quot;#sync_locale&quot;&gt;&quot;sync_locale&quot;&lt;/a&gt; before calling this macro will update perl's records.)</source>
          <target state="translated">이것은이다 XS 코드에서 사용되는 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 로케일 인식 카테고리에 대한 로케일 강제로 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 를 펄이 무슨 생각으로 현재 기본 로케일입니다. (일부 C 또는 XS 코드가 뒤에서 C 라이브러리 함수 &lt;a href=&quot;http://man.he.net/man3/setlocale&quot;&gt;setlocale (3)&lt;/a&gt; 을 호출 한 경우 perl 인터프리터는 기본 로케일이 실제로 무엇인지에 대해 잘못 될 수 있습니다 . 이 매크로를 호출하기 전에 &lt;a href=&quot;#sync_locale&quot;&gt;&quot;sync_locale&quot;&lt;/a&gt; 을 호출하면 perl의 레코드가 업데이트됩니다.)</target>
        </trans-unit>
        <trans-unit id="685a67efb688fb26fb65af406110717f25e2b745" translate="yes" xml:space="preserve">
          <source>This is used by XS code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware to force the locale for category &lt;code&gt;LC_NUMERIC&lt;/code&gt; to be what perl thinks is the current underlying locale. (The perl interpreter could be wrong about what the underlying locale actually is if some C or XS code has called the C library function</source>
          <target state="translated">XS 코드에서 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 로케일을 인식하여 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 카테고리의 로케일이 펄이 현재 기본 로케일이라고 생각하는 것으로 강제합니다 . (C 또는 XS 코드가 C 라이브러리 함수를 호출 한 경우 기본 로케일이 실제로 무엇인지 Perl 인터프리터가 잘못되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e065e9419827f7c0624c9591e7e2d9d64727710" translate="yes" xml:space="preserve">
          <source>This is used by perl to run external commands which explicitly require shell, like the commands using</source>
          <target state="translated">이것은 perl에서 사용하는 명령과 같이 명시 적으로 쉘이 필요한 외부 명령을 실행하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="64698930b8cfe161fa438c57b55293be0ad5eced" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;perldoc&lt;/code&gt; program (see &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;), and may be used to generate HTML documentation usable by WWW browsers, and documentation in zillions of other formats: &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; and so on. [Use programs such as</source>
          <target state="translated">이것은 &lt;code&gt;perldoc&lt;/code&gt; 프로그램에서 사용되며 ( &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; 참조 ) WWW 브라우저에서 사용할 수있는 HTML 문서 및 &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; 등 다른 형식의 문서를 생성하는 데 사용될 수 있습니다 . [다음과 같은 프로그램 사용</target>
        </trans-unit>
        <trans-unit id="8b79fef1f877d1a8e263ce2050957470f7956ed4" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;perldoc&lt;/code&gt; program (see &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt;), and may be used to generate HTML documentation usable by WWW browsers, and documentation in zillions of other formats: &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;LaTeX&lt;/code&gt;, &lt;code&gt;Acrobat&lt;/code&gt;, &lt;code&gt;FrameMaker&lt;/code&gt; and so on. [Use programs such as</source>
          <target state="translated">이것은 &lt;code&gt;perldoc&lt;/code&gt; 프로그램 ( &lt;a href=&quot;perldoc&quot;&gt;perldoc&lt;/a&gt; 참조 )에서 사용되며, WWW 브라우저에서 사용할 수있는 HTML 문서와 &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;LaTeX&lt;/code&gt; , &lt;code&gt;Acrobat&lt;/code&gt; , &lt;code&gt;FrameMaker&lt;/code&gt; 등 수많은 다른 형식의 문서를 생성하는 데 사용될 수 있습니다 . [다음과 같은 프로그램 사용</target>
        </trans-unit>
        <trans-unit id="f691385e53ced861147f8d8eef50471ec380ca35" translate="yes" xml:space="preserve">
          <source>This is used for instance by &lt;a href=&quot;Math::BigInt::Constant&quot;&gt;Math::BigInt::Constant&lt;/a&gt;.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;Math::BigInt::Constant&quot;&gt;Math :: BigInt :: Constant에서 사용&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="938e99644f7869851b92cffce88c437cad0e1198" translate="yes" xml:space="preserve">
          <source>This is used for instance by &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math::BigInt::Constant&lt;/a&gt;.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;http://search.cpan.org/perldoc/Math::BigInt::Constant&quot;&gt;Math :: BigInt :: Constant에&lt;/a&gt; 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="89a92812a074e6032ec40db97f0e02dae0db9d29" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;FILE *&lt;/code&gt; structures.</source>
          <target state="translated">이것은 &lt;code&gt;FILE *&lt;/code&gt; 구조를 사용하여 perl 파일 핸들을 C와주고받는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e990faa3bfbeb576a41b956da185db53775fca9a" translate="yes" xml:space="preserve">
          <source>This is used for passing perl filehandles to and from C using &lt;code&gt;PerlIO *&lt;/code&gt; structures. The file handle can used for reading and writing. This corresponds to the &lt;code&gt;+&amp;lt;&lt;/code&gt; mode, see also T_IN and T_OUT.</source>
          <target state="translated">이것은 &lt;code&gt;PerlIO *&lt;/code&gt; 구조를 사용하여 perl 파일 핸들을 C와주고받는 데 사용됩니다 . 파일 핸들은 읽고 쓰는 데 사용할 수 있습니다. 이것은 &lt;code&gt;+&amp;lt;&lt;/code&gt; 모드에 해당합니다 ( T_IN 및 T_OUT 참조).</target>
        </trans-unit>
        <trans-unit id="45afb2cb863a986ba92ff0947755735a5e6d66a7" translate="yes" xml:space="preserve">
          <source>This is used for tests that under some conditions can be skipped. It's basically equivalent to:</source>
          <target state="translated">일부 조건에서 건너 뛸 수있는 테스트에 사용됩니다. 기본적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e0a9f53f8706ee02f00b4b66258c8d781bdebc5" translate="yes" xml:space="preserve">
          <source>This is used heavily by Configure and then by perl itself. QNX4's version is fine, but Configure will choke on the 16-bit version, so if you are running QNX 4.22, link /bin/sh to /bin32/ksh</source>
          <target state="translated">이것은 Configure와 perl 자체에 의해 많이 사용됩니다. QNX4의 버전은 정상이지만 구성은 16 비트 버전에서 질식하므로 QNX 4.22를 실행중인 경우 / bin / sh를 / bin32 / ksh에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="b07dd7d6e8aff5833887dd70ddcb6745a582ec73" translate="yes" xml:space="preserve">
          <source>This is used in conjunction with one of the macros &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; and &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;&quot;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&lt;/a&gt; to properly restore the &lt;code&gt;LC_NUMERIC&lt;/code&gt; state.</source>
          <target state="translated">이것은 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 상태 를 적절하게 복원하기 위해 &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; 및 &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;&quot;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&lt;/a&gt; 매크로 중 하나와 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="88552389c076b1697dd901849fcd278da90bf901" translate="yes" xml:space="preserve">
          <source>This is used in conjunction with one of the macros &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt; and &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt;</source>
          <target state="translated">매크로 &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;STORE_LC_NUMERIC_SET_TO_NEEDED&lt;/a&gt; 및 &lt;a href=&quot;#STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&quot;&gt;STORE_LC_NUMERIC_FORCE_TO_UNDERLYING&lt;/a&gt; 매크로 중 하나와 함께 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a76c37bf4c1019b528db2eb84815660835ecca3f" translate="yes" xml:space="preserve">
          <source>This is used internally by various sv-modifying functions, such as &lt;code&gt;sv_setsv&lt;/code&gt;, &lt;code&gt;sv_setiv&lt;/code&gt; and &lt;code&gt;sv_pvn_force&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;sv_setsv&lt;/code&gt; , &lt;code&gt;sv_setiv&lt;/code&gt; 및 &lt;code&gt;sv_pvn_force&lt;/code&gt; 와 같은 다양한 sv 수정 함수에서 내부적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="51b114b6070b2dbbb4c5faa25f40aadc4f1bf209" translate="yes" xml:space="preserve">
          <source>This is used internally by various sv-modifying functions, such as sv_setsv, sv_setiv and sv_pvn_force.</source>
          <target state="translated">이것은 sv_setsv, sv_setiv 및 sv_pvn_force와 같은 다양한 sv 수정 기능에 의해 내부적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="493fa4c255c75476c5de3398d669dcb7143cfa2b" translate="yes" xml:space="preserve">
          <source>This is used to alert the driver that a hub is no longer accepting events. The driver should keep track of the process and thread ids, the hub should only be dropped by the proc+thread that started it (This is the drivers responsibility to enforce).</source>
          <target state="translated">이것은 허브가 더 이상 이벤트를 받아들이지 않는다는 것을 운전자에게 경고하는 데 사용됩니다. 드라이버는 프로세스와 스레드 ID를 추적해야하며 허브는 시작된 proc + thread에 의해서만 삭제되어야합니다 (드라이버가 시행 할 책임입니다).</target>
        </trans-unit>
        <trans-unit id="7cfc92a05bf403630dcc4ad4521b54e6866a1941" translate="yes" xml:space="preserve">
          <source>This is used to alert the driver that a new hub is expecting events. The driver should keep track of the process and thread ids, the hub should only be dropped by the proc+thread that started it.</source>
          <target state="translated">이는 새 허브가 이벤트를 예상하고 있음을 운전자에게 알리는 데 사용됩니다. 드라이버는 프로세스 및 스레드 ID를 추적해야하며 허브는 시작된 proc + thread에 의해서만 삭제되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2674017b922020ed58a1ae38d38243bb158c698b" translate="yes" xml:space="preserve">
          <source>This is used to convert the perl argument list to a C array and for pushing the contents of a C array onto the perl argument stack.</source>
          <target state="translated">이것은 perl 인수 목록을 C 배열로 변환하고 C 배열의 내용을 perl 인수 스택으로 푸시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d0f5557ac77d434ebd595a2a1706e59ef7b222ff" translate="yes" xml:space="preserve">
          <source>This is used to efficiently decide if the next few bytes in &lt;code&gt;s&lt;/code&gt; is legal Unicode-acceptable UTF-8 for a single character.</source>
          <target state="translated">이것은 &lt;code&gt;s&lt;/code&gt; 의 다음 몇 바이트 가 단일 문자에 대해 유효한 유니 코드 허용 UTF-8 인지 여부를 효율적으로 결정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d7b5e8f4a478685a6595ee53579e42a7ad93748" translate="yes" xml:space="preserve">
          <source>This is used to encapsulate diag messages created inside TODO.</source>
          <target state="translated">TODO 내에서 생성 된 진단 메시지를 캡슐화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2b83bcfe3741aa8ea6cddc6c13968e1de17cd570" translate="yes" xml:space="preserve">
          <source>This is used to help wrap XS or C code that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware. This locale category is generally kept set to a locale where the decimal radix character is a dot, and the separator between groups of digits is empty. This is because most XS code that reads floating point numbers is expecting them to have this syntax.</source>
          <target state="translated">&lt;code&gt;LC_NUMERIC&lt;/code&gt; 로케일을 인식 하는 XS 또는 C 코드를 래핑하는 데 사용됩니다 . 이 로케일 범주는 일반적으로 십진 기수 문자가 점이고 숫자 그룹 사이의 구분 기호가 비어있는 로케일로 설정된 상태로 유지됩니다. 이는 부동 소수점 숫자를 읽는 대부분의 XS 코드가이 구문을 가질 것으로 예상하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="1dfca62a32b70d4bff67e06bed578f950673ab61" translate="yes" xml:space="preserve">
          <source>This is used to help wrap XS or C code that that is &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale-aware. This locale category is generally kept set to the C locale by Perl for backwards compatibility, and because most XS code that reads floating point values can cope only with the decimal radix character being a dot.</source>
          <target state="translated">&lt;code&gt;LC_NUMERIC&lt;/code&gt; 로케일을 인식 하는 XS 또는 C 코드를 래핑하는 데 사용됩니다 . 이 로케일 범주는 일반적으로 이전 버전과의 호환성을 위해 Perl에 의해 C 로케일로 설정되며, 부동 소수점 값을 읽는 대부분의 XS 코드는 10 진수 기수 문자 만 점으로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="27a198e65c924e429ea7fa75dae5924d31fa6b88" translate="yes" xml:space="preserve">
          <source>This is used to prevent the use of &lt;code&gt;caller()&lt;/code&gt; in END blocks which can cause segfaults. This is only necessary in some persistent environments that may have multiple END phases.</source>
          <target state="translated">이것은 segfault를 유발할 수있는 END 블록에서 &lt;code&gt;caller()&lt;/code&gt; 사용을 방지하는 데 사용됩니다 . 이는 여러 END 단계가있을 수있는 일부 지속적 환경에서만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="61ffe3ce8492ad29999613fc31942e00c100ad7a" translate="yes" xml:space="preserve">
          <source>This is used to set the build type to debug or release. Change the build type only after executing SetNWBld.bat</source>
          <target state="translated">빌드 유형을 디버그 또는 릴리스로 설정하는 데 사용됩니다. SetNWBld.bat를 실행 한 후에 만 ​​빌드 유형을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="d4db27a76c75ff7fc1ed3957a4bdf992bfb4169e" translate="yes" xml:space="preserve">
          <source>This is used to toggle Test2's belief that the END phase has already started. With no arguments this will set it to true. With arguments it will set it to the first argument's value.</source>
          <target state="translated">이것은 END 단계가 이미 시작되었다는 Test2의 믿음을 전환하는 데 사용됩니다. 인수가 없으면 true로 설정됩니다. 인수를 사용하면 첫 번째 인수의 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="33295dd981a7660fbc204da5e0a0ad1772d342a0" translate="yes" xml:space="preserve">
          <source>This is used to track which tests unexpectedly succeeded.</source>
          <target state="translated">예기치 않은 테스트 결과를 추적하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="717574ff9403ecd69bea9a30328bf1a90f831842" translate="yes" xml:space="preserve">
          <source>This is used to write code for styles of operating system. See os_flavor_is() for use.</source>
          <target state="translated">운영 체제 스타일에 대한 코드를 작성하는 데 사용됩니다. 사용하려면 os_flavor_is ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="92dd601445cafa868ebbffa5406795a7efb88b1a" translate="yes" xml:space="preserve">
          <source>This is useful for applying names to anonymous CODE references so that stack traces and similar situations, to give a useful name rather than having the default of &lt;code&gt;__ANON__&lt;/code&gt;. Note that this name is only used for this situation; the &lt;code&gt;set_subname&lt;/code&gt; will not install it into the symbol table; you will have to do that yourself if required.</source>
          <target state="translated">이것은 익명의 CODE 참조에 이름을 적용하여 스택 추적 및 유사한 상황에서 기본값 &lt;code&gt;__ANON__&lt;/code&gt; 대신 유용한 이름을 제공하는 데 유용합니다 . 이 이름은이 상황에서만 사용됩니다. &lt;code&gt;set_subname&lt;/code&gt; 는 심볼 테이블에 설치하지 않을 것이다; 필요한 경우 직접 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="a64fac67cd72a00814ab828e9c9bd92a6463973e" translate="yes" xml:space="preserve">
          <source>This is useful for code like:</source>
          <target state="translated">이것은 다음과 같은 코드에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0a2bc63942e3a80b89ce25e1ac1f8a32f3bda215" translate="yes" xml:space="preserve">
          <source>This is useful for keeping copies of references, but you don't want to prevent the object being DESTROY-ed at its usual time.</source>
          <target state="translated">이것은 참조 사본을 유지하는 데 유용하지만 일반적인 시간에 오브젝트가 삭제되는 것을 막고 싶지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="68748f1b2fdfc815e31f2005d15151ad297531bd" translate="yes" xml:space="preserve">
          <source>This is useful if you don't know which one of a set of alternative patterns matched. For example:</source>
          <target state="translated">이것은 대체 패턴 세트 중 어떤 것이 일치하는지 모르는 경우에 유용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="24abff8fd9f42596b61820bc8c96b9b877025034" translate="yes" xml:space="preserve">
          <source>This is useful if you want to repeatedly parse JSON objects and want to ignore any trailing data, which means you have to reset the parser after each successful decode.</source>
          <target state="translated">이는 JSON 객체를 반복적으로 구문 분석하고 후행 데이터를 무시하려는 경우에 유용합니다. 즉, 디코딩이 성공할 때마다 구문 분석기를 재설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="42a4e9a54829e179cb44fc85ba544f789e1c2e15" translate="yes" xml:space="preserve">
          <source>This is useful if you want to report then some other way than &lt;code&gt;carp&lt;/code&gt; 'ing when the verbose flag is on.</source>
          <target state="translated">상세 플래그가 켜져있을 때 &lt;code&gt;carp&lt;/code&gt; 'ing 이외의 다른 방법으로보고하려는 경우 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="153de877b9bc07e9c5b4ac46607a14b4d6c4da2c" translate="yes" xml:space="preserve">
          <source>This is useful if you want to report then some other way than &lt;code&gt;carp&lt;/code&gt;'ing when the verbose flag is on.</source>
          <target state="translated">이것은 verbose 플래그가 켜져있을 때 &lt;code&gt;carp&lt;/code&gt; 아닌 다른 방법으로보고하려는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="c9238f80fbc3497eb44d341942c244b6a1f8c7d1" translate="yes" xml:space="preserve">
          <source>This is useful if your JSON texts are not delimited by an outer protocol and you need to know where the JSON text ends.</source>
          <target state="translated">이는 JSON 텍스트가 외부 프로토콜로 구분되지 않고 JSON 텍스트가 끝나는 위치를 알아야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3180e175adf2fd8ff88aab37691cd4b1c546dfea" translate="yes" xml:space="preserve">
          <source>This is useful to avoid a CODE: block for a C function which takes a parameter by reference. Typically, the parameter should be not a pointer type (an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; but not an &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long*&lt;/code&gt; ).</source>
          <target state="translated">이는 참조로 매개 변수를 취하는 C 함수의 CODE : 블록을 피하는 데 유용합니다. 일반적으로 매개 변수는 포인터 유형이 아니어야합니다 ( &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;long&lt;/code&gt; 이지만 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int*&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;long*&lt;/code&gt; 아님).</target>
        </trans-unit>
        <trans-unit id="f32da9d6ece9275a31f6ad58e26339b4aa05f9a0" translate="yes" xml:space="preserve">
          <source>This is useful to avoid a CODE: block for a C function which takes a parameter by reference. Typically, the parameter should be not a pointer type (an &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; but not an &lt;code&gt;int*&lt;/code&gt; or &lt;code&gt;long*&lt;/code&gt;).</source>
          <target state="translated">이것은 참조로 매개 변수를 취하는 C 함수에 대한 CODE : 블록을 피하는 데 유용합니다. 일반적으로 매개 변수는 포인터 유형 ( &lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;long&lt;/code&gt; 이지만 &lt;code&gt;int*&lt;/code&gt; 또는 &lt;code&gt;long*&lt;/code&gt; ) 이 아니어야합니다 .</target>
        </trans-unit>
        <trans-unit id="242135d43e5e5fb3cfd2e2eb4dedd974f1546560" translate="yes" xml:space="preserve">
          <source>This is useful when a fixed-length buffer is being tested for being well-formed UTF-8, but the final few bytes in it don't comprise a full character; that is, it is split somewhere in the middle of the final code point's UTF-8 representation. (Presumably when the buffer is refreshed with the next chunk of data, the new first bytes will complete the partial code point.) This function is used to verify that the final bytes in the current buffer are in fact the legal beginning of some code point, so that if they aren't, the failure can be signalled without having to wait for the next read.</source>
          <target state="translated">이것은 고정 길이 버퍼가 올바른 형식의 UTF-8인지 테스트 할 때 유용하지만 그 안에있는 마지막 몇 바이트는 전체 문자를 구성하지 않습니다. 즉, 최종 코드 포인트의 UTF-8 표현 중간에 분할됩니다. (아마도 버퍼가 다음 데이터 청크로 새로 고쳐질 때 새로운 첫 번째 바이트가 부분 코드 포인트를 완료합니다.)이 함수는 현재 버퍼의 최종 바이트가 실제로 일부 코드 포인트의 합법적 인 시작인지 확인하는 데 사용됩니다. , 그렇지 않은 경우 다음 읽기를 기다릴 필요없이 실패 신호를 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e13765136cecd81d6e3522084679384fb85c0ae" translate="yes" xml:space="preserve">
          <source>This is useful when calculating checksum for files:</source>
          <target state="translated">파일의 체크섬을 계산할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7a8a2f33ee6a615c27a87f750d3b6d2a6919cb19" translate="yes" xml:space="preserve">
          <source>This is useful when you want to do the encoding yourself (e.g. when you want to have UTF-16 encoded JSON texts) or when some other layer does the encoding for you (for example, when printing to a terminal using a filehandle that transparently encodes to UTF-8 you certainly do NOT want to UTF-8 encode your data first and have Perl encode it another time).</source>
          <target state="translated">이것은 인코딩을 직접 수행하고 싶을 때 (예 : UTF-16 인코딩 JSON 텍스트를 원할 때) 또는 다른 레이어가 인코딩을 수행 할 때 (예 : 투명하게 인코딩하는 파일 핸들을 사용하여 터미널로 인쇄 할 때) 유용합니다. UTF-8로 데이터를 먼저 UTF-8로 인코딩하고 Perl이 다시 인코딩하도록하고 싶지는 않습니다.)</target>
        </trans-unit>
        <trans-unit id="e13be01e22159590b48bf995ac0b3bcde5d745a9" translate="yes" xml:space="preserve">
          <source>This is useful when you want to pass a decoded data structure directly to other serialisers like YAML, Data::MessagePack and so on.</source>
          <target state="translated">이것은 디코딩 된 데이터 구조를 YAML, Data :: MessagePack 등과 같은 다른 직렬화기에 직접 전달하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="acefb224b2e9e2708aa6e9ceef7c0496a9b29d9e" translate="yes" xml:space="preserve">
          <source>This is useful with sockets when you want to tell the other side you're done writing but not done reading, or vice versa. It's also a more insistent form of &lt;code&gt;close&lt;/code&gt; because it also disables the file descriptor in any forked copies in other processes.</source>
          <target state="translated">이것은 당신이 쓰기를 끝 냈지만 읽지 않았 음을 다른쪽에 알리고 싶을 때 소켓에 유용합니다. 또는 그 반대의 경우도 마찬가지입니다. 또한 다른 프로세스의 분기 된 복사본에서 파일 설명자를 비활성화하기 때문에 보다 일관성있는 &lt;code&gt;close&lt;/code&gt; 형식입니다 .</target>
        </trans-unit>
        <trans-unit id="61dbd2c8b8aff05e41e7c5996e136b2e52680ad0" translate="yes" xml:space="preserve">
          <source>This is useful with sockets when you want to tell the other side you're done writing but not done reading, or vice versa. It's also a more insistent form of close because it also disables the file descriptor in any forked copies in other processes.</source>
          <target state="translated">이것은 당신이 다른쪽에 당신이 글을 다 읽었지만 읽지 않았다고 말하고 싶거나 반대의 경우를 말하고 싶을 때 소켓에 유용합니다. 또한 다른 프로세스의 분기 사본에서 파일 디스크립터를 사용하지 않기 때문에보다 일관된 닫기 양식입니다.</target>
        </trans-unit>
        <trans-unit id="f513c390b6f7958ee20cf98d8560715b5f8df7bb" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_fcntl that &amp;lt;fcntl.h&amp;gt; should be included.</source>
          <target state="translated">이 변수는 i_fcntl에게 &amp;lt;fcntl.h&amp;gt;가 포함되어야한다는 것을 알리기 위해 여러 곳에서 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="a219720ed763ff153bf9c4206e6fc4962fcc28fa" translate="yes" xml:space="preserve">
          <source>This is variable gets set in various places to tell i_sys_file that &amp;lt;sys/file.h&amp;gt; should be included.</source>
          <target state="translated">이 변수는 i_sys_file에 &amp;lt;sys / file.h&amp;gt;가 포함되어야 함을 알리기 위해 다양한 위치에 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ec63ffae64519c04a43508d9591237b500c83426" translate="yes" xml:space="preserve">
          <source>This is very dangerous to push on a handle using an &lt;code&gt;:encoding&lt;/code&gt; layer, as such a layer assumes to be working with Perl's internal upgraded encoding, so you will likely get a mangled result. Instead use &lt;code&gt;:raw&lt;/code&gt; or &lt;code&gt;:pop&lt;/code&gt; to remove encoding layers.</source>
          <target state="translated">이것은 &lt;code&gt;:encoding&lt;/code&gt; 레이어를 사용하여 핸들을 밀어 붙이는 것은 매우 위험합니다 . 이러한 레이어는 Perl의 내부 업그레이드 된 인코딩과 함께 작동한다고 가정하기 때문에 엉망이 된 결과를 얻을 수 있습니다. 대신 &lt;code&gt;:raw&lt;/code&gt; 또는 &lt;code&gt;:pop&lt;/code&gt; 을 사용하여 인코딩 레이어를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="ba0989b9613ab7f11b2f2270357953fc855e8dd8" translate="yes" xml:space="preserve">
          <source>This is very dangerous, as you may block forever. It assumes it's going to talk to something like &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc(1)&lt;/a&gt;, both writing to it and reading from it. This is presumably safe because you &quot;know&quot; that commands like &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc(1)&lt;/a&gt; will read a line at a time and output a line at a time. Programs like &lt;a href=&quot;http://man.he.net/man1/sort&quot;&gt;sort(1)&lt;/a&gt; that read their entire input stream first, however, are quite apt to cause deadlock.</source>
          <target state="translated">영원히 차단할 수 있으므로 매우 위험합니다. 그것은 &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc (1)&lt;/a&gt; 와 같은 것과 대화를 할 것이라고 가정합니다. 쓰기도 하고 읽기도합니다. &lt;a href=&quot;http://man.he.net/man1/bc&quot;&gt;bc (1)&lt;/a&gt; 과 같은 명령이 한 번에 한 줄씩 읽고 한 번에 한 줄씩 출력 한다는 것을 &quot;알고&quot;있기 때문에 이것은 아마도 안전 할 것입니다. 그러나 전체 입력 스트림을 먼저 읽는 &lt;a href=&quot;http://man.he.net/man1/sort&quot;&gt;sort (1)&lt;/a&gt; 과 같은 프로그램은 교착 상태를 일으키기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="c6c48e550cd9137be036063a2bb992fbdc655583" translate="yes" xml:space="preserve">
          <source>This is very dangerous, as you may block forever. It assumes it's going to talk to something like &lt;b&gt;bc&lt;/b&gt;, both writing to it and reading from it. This is presumably safe because you &quot;know&quot; that commands like &lt;b&gt;bc&lt;/b&gt; will read a line at a time and output a line at a time. Programs like &lt;b&gt;sort&lt;/b&gt; that read their entire input stream first, however, are quite apt to cause deadlock.</source>
          <target state="translated">당신은 영원히 차단할 수 있기 때문에 이것은 매우 위험합니다. 그것은 쓰기와 읽기 모두에서 &lt;b&gt;bc&lt;/b&gt; 와 같은 것으로 이야기 할 것이라고 가정 합니다. 이것은 &lt;b&gt;bc&lt;/b&gt; 와 같은 명령이 한 번에 한 줄을 읽고 한 번에 한 줄을 출력 한다는 것을 &quot;알기&quot;때문에 아마도 안전합니다 . 그러나 전체 입력 스트림을 먼저 읽는 &lt;b&gt;정렬&lt;/b&gt; 과 &lt;b&gt;같은&lt;/b&gt; 프로그램은 교착 상태가 발생하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="4d27e7008a46081de6bf70cf35ea9983d5762e5e" translate="yes" xml:space="preserve">
          <source>This is very similar to &quot;How do I process an entire hash?&quot;, also in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt;, but a bit simpler in the common cases.</source>
          <target state="translated">이것은 &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; 에서도 &quot;전체 해시를 어떻게 처리합니까?&quot;와 매우 유사 하지만 일반적인 경우에는 조금 더 단순합니다.</target>
        </trans-unit>
        <trans-unit id="e597cd56d56a437656a2f431e5a405bb225ea80c" translate="yes" xml:space="preserve">
          <source>This is very useful if you insist on taking an array reference as argument for example.</source>
          <target state="translated">예를 들어 배열 참조를 인수로 사용하려는 경우 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9ecc6a74af1d686f96a51556930a084f0975a2d7" translate="yes" xml:space="preserve">
          <source>This is what APPNOTE.TXT has to say on what should be stored in the zip filename header field.</source>
          <target state="translated">이것이 APPNOTE.TXT가 zip 파일 이름 헤더 필드에 저장해야 할 내용에 대한 내용입니다.</target>
        </trans-unit>
        <trans-unit id="ccdaae868b02e396a128e9209508dfb651981fc3" translate="yes" xml:space="preserve">
          <source>This is what system() (see &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;), &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;I/O Operators in perlop&lt;/a&gt;), and</source>
          <target state="translated">이것은 system () ( &lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt; 참조 ), &lt;code&gt;``&lt;/code&gt; ( &lt;a href=&quot;perlop#I%2fO-Operators&quot;&gt;perlop의 I / O 연산자&lt;/a&gt; 참조 ) 및</target>
        </trans-unit>
        <trans-unit id="2e2119fd8993283ac1f0a47f57b06a54bbb3f262" translate="yes" xml:space="preserve">
          <source>This is what system() (see &lt;a href=&quot;perlfunc#system&quot;&gt;&quot;system&quot; in perlfunc&lt;/a&gt;), &lt;code&gt;``&lt;/code&gt; (see &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;&quot;I/O Operators&quot; in perlop&lt;/a&gt;), and</source>
          <target state="translated">이것은 system () ( &lt;a href=&quot;perlfunc#system&quot;&gt;perlfunc의 &quot;system&quot;&lt;/a&gt; 참조 ), &lt;code&gt;``&lt;/code&gt; ( &lt;a href=&quot;perlop#I%2FO-Operators&quot;&gt;perlop의 &quot;I / O 연산자&quot;&lt;/a&gt; 참조 ) 및</target>
        </trans-unit>
        <trans-unit id="f2eda7d1f80cf3c434dc7a7060222b6c89d945e1" translate="yes" xml:space="preserve">
          <source>This is what takes events and turns them into TAP.</source>
          <target state="translated">이것이 이벤트를 TAP로 전환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="57e5ac17ec3c4ac0ba4b990c6d906bee2bbc734b" translate="yes" xml:space="preserve">
          <source>This is what you really need to know as an XS programmer, of course. When an XSUB returns a pointer to a C structure that pointer is stored in an SV and a reference to that SV is placed on the XSUB stack. So the output from an XSUB which uses something like the T_PTROBJ map might look something like this:</source>
          <target state="translated">이것은 물론 XS 프로그래머로서 알아야 할 것입니다. XSUB가 C 구조에 대한 포인터를 반환하면 해당 포인터는 SV에 저장되고 해당 SV에 대한 참조는 XSUB 스택에 배치됩니다. 따라서 T_PTROBJ 맵과 같은 것을 사용하는 XSUB의 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4310f6ad3f6095c3049af8ec37cf9d1c7e8bca42" translate="yes" xml:space="preserve">
          <source>This is when the firewall implemented in the kernel (via NAT, or networking address translation), it allows you to hide a complete network behind one IP address. With this firewall no special compiling is needed as you can access hosts directly.</source>
          <target state="translated">방화벽에서 NAT로 구현 된 방화벽 (NAT 또는 네트워킹 주소 변환)을 사용하면 하나의 IP 주소 뒤에 완전한 네트워크를 숨길 수 있습니다. 이 방화벽을 사용하면 호스트에 직접 액세스 할 수 있으므로 특별한 컴파일이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fb3eba7f97ab07f3173100c09ae1ea0eedcc95ab" translate="yes" xml:space="preserve">
          <source>This is when the firewall machine runs a web server, and to access the outside world, you must do so via that web server. If you set environment variables like http_proxy or ftp_proxy to values beginning with http://, or in your web browser you've proxy information set, then you know you are running behind an http firewall.</source>
          <target state="translated">방화벽 시스템이 웹 서버를 실행하고 외부 세계에 액세스하려면 해당 웹 서버를 통해 수행해야합니다. http_proxy 또는 ftp_proxy와 같은 환경 변수를 http : //로 시작하는 값으로 설정하거나 웹 브라우저에서 프록시 정보를 설정 한 경우 http 방화벽 뒤에서 실행중인 것입니다.</target>
        </trans-unit>
        <trans-unit id="75c3d5cffa21770fa5fe6937e649710847afafb8" translate="yes" xml:space="preserve">
          <source>This is when you see something like:</source>
          <target state="translated">이것은 다음과 같은 것을 볼 때입니다.</target>
        </trans-unit>
        <trans-unit id="7241b1fe1bce66db853a8d9b85416133eff0f6db" translate="yes" xml:space="preserve">
          <source>This is where all events enter the hub for processing.</source>
          <target state="translated">모든 이벤트가 처리를 위해 허브로 들어가는 곳입니다.</target>
        </trans-unit>
        <trans-unit id="837053e5aa9e97ca4eca0f75fa58885b37dbdc1f" translate="yes" xml:space="preserve">
          <source>This is where gotchas and breakages related to the Test2 upgrade are documented. The upgrade causes Test::Builder to defer to Test2 under the hood. This transition is mostly transparent, but there are a few cases that can trip you up.</source>
          <target state="translated">여기에서 Test2 업그레이드와 관련된 문제와 파손이 문서화됩니다. 업그레이드로 인해 Test :: Builder가 내부적으로 Test2를 연기합니다. 이 전환은 대부분 투명하지만 몇 가지 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ad104027af291dcad88bf06901ecbc700b85cc1" translate="yes" xml:space="preserve">
          <source>This is where roles come in. It makes a lot of sense to create a &lt;code&gt;HasOnOffSwitch&lt;/code&gt; role and apply it to both classes. This role would define a known API like providing &lt;code&gt;turn_on()&lt;/code&gt; and &lt;code&gt;turn_off()&lt;/code&gt; methods.</source>
          <target state="translated">역할이 들어오는 곳입니다. &lt;code&gt;HasOnOffSwitch&lt;/code&gt; 역할 을 만들어 두 클래스에 모두 적용하는 것이 좋습니다. 이 역할은 &lt;code&gt;turn_on()&lt;/code&gt; 및 &lt;code&gt;turn_off()&lt;/code&gt; 메소드 제공과 같은 알려진 API를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="4320c9ea9a75ef79b1c739e5fcf494dc9cfb50f4" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. In this case, the socket handle returned will be connected to a TCP socket, because we want a stream-oriented connection, that is, one that acts pretty much like a plain old file. Not all sockets are this of this type. For example, the UDP protocol can be used to make a datagram socket, used for message-passing.</source>
          <target state="translated">사용할 프로토콜입니다. 이 경우 반환되는 소켓 핸들은 TCP 소켓에 연결됩니다. 스트림 지향 연결, 즉 평범한 오래된 파일과 매우 유사한 연결을 원하기 때문입니다. 모든 소켓이이 유형의 것은 아닙니다. 예를 들어, UDP 프로토콜을 사용하여 메시지 전달에 사용되는 데이터 그램 소켓을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30ceb66515d4a53e1d2f25ce989ec733d96ff6db" translate="yes" xml:space="preserve">
          <source>This is which protocol to use. Like our clients, we'll still specify &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; here.</source>
          <target state="translated">사용할 프로토콜입니다. 고객과 마찬가지로 여기에도 &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; 를 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="04d23d996b25b2c2795e313433104ffdca7710c6" translate="yes" xml:space="preserve">
          <source>This is, I hope, a natural term given the implementation, and should avoid connotations that are inherent in earlier uses of &quot;discipline&quot; for things which are rather different.</source>
          <target state="translated">이것은 구현이 주어진 자연스러운 용어이며, 다소 다른 것들에 대한 &quot;징계&quot;의 초기 사용에 내재 된 의미를 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="921e3efa52591567d6779d551efd563ccc94a973" translate="yes" xml:space="preserve">
          <source>This isn't as simple a question as it sounds. There are two parts:</source>
          <target state="translated">이것은 단순한 질문이 아닙니다. 두 부분이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="c2dda0261888bf6471240acf321fd52c01dc23ec" translate="yes" xml:space="preserve">
          <source>This issues a warning at the frame (filename and line number where errors should be reported).</source>
          <target state="translated">이것은 프레임에서 경고를 발행합니다 (오류가보고되어야하는 파일 이름과 줄 번호).</target>
        </trans-unit>
        <trans-unit id="033f6ccbcb480bbc0ac7d9079cba07009a6cd094" translate="yes" xml:space="preserve">
          <source>This item specifies the name by which the linker knows the extension, which may be different from the name of the extension itself (for instance, some linkers add an '_' to the name of the extension). If it is not specified, it is derived from the NAME attribute. It is presently used only by OS2 and Win32.</source>
          <target state="translated">이 항목은 링커가 확장명을 알고있는 이름을 지정하며, 이는 확장명 자체와 다를 수 있습니다 (예 : 일부 링커는 확장명에 '_'를 추가 함). 지정하지 않으면 NAME 속성에서 파생됩니다. 현재 OS2 및 Win32에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d17e4bc352cfe7c72913c884191bd7c2a2036595" translate="yes" xml:space="preserve">
          <source>This key allows for variable weighting of variable collation elements, which are marked with an ASTERISK in the table (NOTE: Many punctuation marks and symbols are variable in</source>
          <target state="translated">이 키를 사용하면 표에서 별표로 표시된 가변 데이터 정렬 요소의 가변 가중치를 사용할 수 있습니다 (참고 : 많은 문장 부호 및 기호는</target>
        </trans-unit>
        <trans-unit id="cb089e180f4d1e1151abdbf8ed66a17ba5f2e56e" translate="yes" xml:space="preserve">
          <source>This key can be used to specify the name of the linker option file (minus the OS-specific extension), if for some reason you do not want to use the default value, which is the last word of the NAME attribute (</source>
          <target state="translated">어떤 이유로 든 NAME 속성의 마지막 단어 인 기본값을 사용하지 않으려는 경우이 키를 사용하여 링커 옵션 파일의 이름 (OS 별 확장자 제외)을 지정할 수 있습니다 (</target>
        </trans-unit>
        <trans-unit id="6dc6a49c5fb309cc8a7f7ab658d2498baeeb643a" translate="yes" xml:space="preserve">
          <source>This keyword allows one to define an INTERFACE using a different way to extract a function pointer from an XSUB. The text which follows this keyword should give the name of macros which would extract/set a function pointer. The extractor macro is given return type, &lt;code&gt;CV*&lt;/code&gt; , and &lt;code&gt;XSANY.any_dptr&lt;/code&gt; for this &lt;code&gt;CV*&lt;/code&gt; . The setter macro is given cv, and the function pointer.</source>
          <target state="translated">이 키워드를 사용하면 XSUB에서 함수 포인터를 추출하는 다른 방법을 사용하여 인터페이스를 정의 할 수 있습니다. 이 키워드 다음에 나오는 텍스트는 함수 포인터를 추출 / 설정할 매크로의 이름을 제공해야합니다. 추출기 매크로에는 이 &lt;code&gt;CV*&lt;/code&gt; 대한 리턴 유형 &lt;code&gt;CV*&lt;/code&gt; 및 &lt;code&gt;XSANY.any_dptr&lt;/code&gt; 이 제공 됩니다. setter 매크로에는 cv와 함수 포인터가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7f48406b453547a477c2699e1f259b5c4ed7e06a" translate="yes" xml:space="preserve">
          <source>This keyword allows one to define an INTERFACE using a different way to extract a function pointer from an XSUB. The text which follows this keyword should give the name of macros which would extract/set a function pointer. The extractor macro is given return type, &lt;code&gt;CV*&lt;/code&gt;, and &lt;code&gt;XSANY.any_dptr&lt;/code&gt; for this &lt;code&gt;CV*&lt;/code&gt;. The setter macro is given cv, and the function pointer.</source>
          <target state="translated">이 키워드를 사용하면 XSUB에서 함수 포인터를 추출하는 다른 방법을 사용하여 INTERFACE를 정의 할 수 있습니다. 이 키워드 뒤에 오는 텍스트는 함수 포인터를 추출 / 설정하는 매크로의 이름을 제공해야합니다. 추출기 매크로에는 이 &lt;code&gt;CV*&lt;/code&gt; 대한 반환 유형, &lt;code&gt;CV*&lt;/code&gt; 및 &lt;code&gt;XSANY.any_dptr&lt;/code&gt; 이 제공 됩니다. setter 매크로에는 cv와 함수 포인터가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2eb4e29be94617115ad887f08c53a3d0726b0bcf" translate="yes" xml:space="preserve">
          <source>This keyword can be used to pull other files into the XS module. The other files may have XS code. INCLUDE: can also be used to run a command to generate the XS code to be pulled into the module.</source>
          <target state="translated">이 키워드는 다른 파일을 XS 모듈로 가져 오는 데 사용할 수 있습니다. 다른 파일에는 XS 코드가있을 수 있습니다. INCLUDE : 명령을 실행하여 모듈로 가져올 XS 코드를 생성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ed11759f14ddd60bb197c65bf243efdd708cc88" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special cleanup procedures before it terminates. When the CLEANUP: keyword is used it must follow any CODE:, or OUTPUT: blocks which are present in the XSUB. The code specified for the cleanup block will be added as the last statements in the XSUB.</source>
          <target state="translated">XSUB가 종료되기 전에 특별한 정리 절차가 필요한 경우이 키워드를 사용할 수 있습니다. CLEANUP : 키워드를 사용하는 경우 XSUB에있는 CODE : 또는 OUTPUT : 블록을 따라야합니다. 정리 블록에 지정된 코드는 XSUB의 마지막 명령문으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="7ea24ab5d7dbe276068f1e0046e6f8d0e31be74b" translate="yes" xml:space="preserve">
          <source>This keyword can be used when an XSUB requires special procedures executed after the C subroutine call is performed. When the POSTCALL: keyword is used it must precede OUTPUT: and CLEANUP: blocks which are present in the XSUB.</source>
          <target state="translated">이 키워드는 XSUB에 C 서브 루틴 호출이 수행 된 후 실행되는 특수 프로 시저가 필요할 때 사용할 수 있습니다. POSTCALL : 키워드를 사용하는 경우 XSUB에있는 OUTPUT : 및 CLEANUP : 블록 앞에 와야합니다.</target>
        </trans-unit>
        <trans-unit id="ae2e5d68051ec8479ea84ba54d17bcf4606d62cb" translate="yes" xml:space="preserve">
          <source>This keyword declares the current XSUB as a keeper of the given calling signature. If some text follows this keyword, it is considered as a list of functions which have this signature, and should be attached to the current XSUB.</source>
          <target state="translated">이 키워드는 현재 XSUB를 지정된 호출 서명의 키퍼로 선언합니다. 이 키워드 뒤에 일부 텍스트가있는 경우이 키워드가있는 함수 목록으로 간주되며 현재 XSUB에 첨부되어야합니다.</target>
        </trans-unit>
        <trans-unit id="58666c3be919a203268b54d032b3c1bf1338cbb5" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">이 키워드는 &lt;code&gt;&quot;fc&quot;&lt;/code&gt; 기능을 사용하거나 &lt;code&gt;CORE::&lt;/code&gt; 접두사 가있는 경우에만 사용할 수 있습니다 . &lt;a href=&quot;../feature&quot;&gt;기능을&lt;/a&gt; 참조하십시오 . 또는 현재 범위에 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; 이상을 &lt;a href=&quot;use&quot;&gt;사용&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="42d2aecd2684fd64241ade61155e375dd422775d" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;fc&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; See &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">이 키워드는 &lt;code&gt;&quot;fc&quot;&lt;/code&gt; 기능을 사용하거나 &lt;code&gt;CORE::&lt;/code&gt; 접두사 가있는 경우에만 사용할 수 있습니다 . &lt;a href=&quot;feature&quot;&gt;기능을&lt;/a&gt; 참조하십시오 . 또는 현재 범위에 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.16&lt;/code&gt; 이상을 &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f176175c36b805a68ac4fb3277c81ce3879ff21b" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">이 키워드는 &lt;code&gt;&quot;say&quot;&lt;/code&gt; 기능이 활성화되어 있거나 &lt;code&gt;CORE::&lt;/code&gt; 접두사가 붙은 경우 에만 사용할 수 있습니다 . &lt;a href=&quot;../feature&quot;&gt;기능을&lt;/a&gt; 참조하십시오 . 또는 현재 범위에 대한 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; 이상을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="7248453615df5e8da2ccdbead940326c86edd409" translate="yes" xml:space="preserve">
          <source>This keyword is available only when the &lt;code&gt;&quot;say&quot;&lt;/code&gt; feature is enabled, or when prefixed with &lt;code&gt;CORE::&lt;/code&gt; ; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt;. Alternately, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">이 키워드는 &lt;code&gt;&quot;say&quot;&lt;/code&gt; 기능이 활성화되어 있거나 &lt;code&gt;CORE::&lt;/code&gt; 접두사가 붙은 경우 에만 사용할 수 있습니다 . &lt;a href=&quot;feature&quot;&gt;기능을&lt;/a&gt; 참조하십시오 . 또는 현재 범위에 대한 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; 이상을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="4ef9d8d4891aa770100745063fafba75dd87bbdc" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;../perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">이 키워드는 &lt;a href=&quot;../perlsub#Autoloading&quot;&gt;perlsub의 자동로드에 설명되어&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="229a0bb1d79c36394d404c5fc720a5812d12707b" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;perlsub#Autoloading&quot;&gt;&quot;Autoloading&quot; in perlsub&lt;/a&gt;.</source>
          <target state="translated">이 키워드는 &lt;a href=&quot;perlsub#Autoloading&quot;&gt;perlsub의 &quot;Autoloading&quot;에 설명되어&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="017edb25f20d66cd7958f76d9e8eba1497b2b334" translate="yes" xml:space="preserve">
          <source>This keyword is documented in &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">이 키워드는 &lt;a href=&quot;perlsub#Autoloading&quot;&gt;perlsub의 자동로드에 설명되어&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7b17b66d48631c7667c9941d17b69ddf9ef0b49" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;../feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">이 키워드는 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 기능으로 활성화됩니다 . &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;../feature&quot;&gt;기능&lt;/a&gt; 을 참조하십시오 . 접두사 &lt;code&gt;CORE::&lt;/code&gt; 사용하여 액세스 할 수도 있습니다 . 또는 현재 범위에 대한 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; v5.10 이상을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="bcf1ac4839e0d0322a8d99444375f29015dd872d" translate="yes" xml:space="preserve">
          <source>This keyword is enabled by the &lt;code&gt;&quot;switch&quot;&lt;/code&gt; feature; see &lt;a href=&quot;feature&quot;&gt;feature&lt;/a&gt; for more information on &lt;code&gt;&quot;switch&quot;&lt;/code&gt; . You can also access it by prefixing it with &lt;code&gt;CORE::&lt;/code&gt; . Alternatively, include a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; or later to the current scope.</source>
          <target state="translated">이 키워드는 &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 기능으로 활성화됩니다 . &lt;code&gt;&quot;switch&quot;&lt;/code&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;feature&quot;&gt;기능&lt;/a&gt; 을 참조하십시오 . 접두사 &lt;code&gt;CORE::&lt;/code&gt; 사용하여 액세스 할 수도 있습니다 . 또는 현재 범위에 대한 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; v5.10&lt;/code&gt; v5.10 이상을 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="fd72e5a6d62fb1267e4d76dc2f0ed5b89e4e353f" translate="yes" xml:space="preserve">
          <source>This keyword is similar to the PROTOTYPES: keyword above but can be used to force &lt;b&gt;xsubpp&lt;/b&gt; to use a specific prototype for the XSUB. This keyword overrides all other prototype options and keywords but affects only the current XSUB. Consult &lt;a href=&quot;perlsub#Prototypes&quot;&gt;&quot;Prototypes&quot; in perlsub&lt;/a&gt; for information about Perl prototypes.</source>
          <target state="translated">이 키워드는 위의 PROTOTYPES : 키워드와 유사하지만 &lt;b&gt;xsubpp&lt;/b&gt; 가 XSUB에 대한 특정 프로토 타입을 사용하도록 강제하는 데 사용할 수 있습니다 . 이 키워드는 다른 모든 프로토 타입 옵션 및 키워드를 대체하지만 현재 XSUB에만 영향을줍니다. Perl 프로토 타입에 대한 정보 &lt;a href=&quot;perlsub#Prototypes&quot;&gt;는 perlsub의 &quot;프로토 타입&quot;을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="29762772c48cba2696e2ebbb42e9c2d4888e7318" translate="yes" xml:space="preserve">
          <source>This keyword is similar to the PROTOTYPES: keyword above but can be used to force &lt;b&gt;xsubpp&lt;/b&gt; to use a specific prototype for the XSUB. This keyword overrides all other prototype options and keywords but affects only the current XSUB. Consult &lt;a href=&quot;perlsub#Prototypes&quot;&gt;Prototypes in perlsub&lt;/a&gt; for information about Perl prototypes.</source>
          <target state="translated">이 키워드는 위의 PROTOTYPES : 키워드와 유사하지만 &lt;b&gt;xsubpp&lt;/b&gt; 가 XSUB에 특정 프로토 타입을 사용하도록 강제하는 데 사용할 수 있습니다 . 이 키워드는 다른 모든 프로토 타입 옵션 및 키워드를 무시하지만 현재 XSUB에만 영향을줍니다. Perl 프로토 타입에 대한 정보 &lt;a href=&quot;perlsub#Prototypes&quot;&gt;는 perlsub의 프로토 타입을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="85b8915eb7407eed5e4863e8fa3af3a2f3aafc0d" translate="yes" xml:space="preserve">
          <source>This keyword is used in more complicated XSUBs which require special handling for the C function. The RETVAL variable is still declared, but it will not be returned unless it is specified in the OUTPUT: section.</source>
          <target state="translated">이 키워드는 C 함수를 특수하게 처리해야하는보다 복잡한 XSUB에서 사용됩니다. RETVAL 변수는 여전히 선언되어 있지만 OUTPUT : 섹션에 지정되어 있지 않으면 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa7963343b84df8b23c604395808970c0e2420a5" translate="yes" xml:space="preserve">
          <source>This keyword makes sense only if &lt;code&gt;RETVAL&lt;/code&gt; is going to be accessed by the user-supplied code. It is especially useful to make a function interface more Perl-like, especially when the C return value is just an error condition indicator. For example,</source>
          <target state="translated">이 키워드는 &lt;code&gt;RETVAL&lt;/code&gt; 이 사용자 제공 코드에 의해 액세스 될 경우에만 의미 가 있습니다. 특히 C 리턴 값이 오류 조건 표시 기일 때 함수 인터페이스를 Perl과 유사하게 만드는 것이 특히 유용합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="b1b52e23340e03d5e2d9ec935c2b222b8a59f7e3" translate="yes" xml:space="preserve">
          <source>This keyword may be used any time after the first MODULE keyword and should appear on a line by itself. The first blank line after the keyword will terminate the code block.</source>
          <target state="translated">이 키워드는 첫 번째 MODULE 키워드 다음에 언제든지 사용할 수 있으며 한 줄에 나타나야합니다. 키워드 다음의 첫 번째 빈 줄은 코드 블록을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="8c3c885b0fa12332744123cf10bb6f10b80fe29e" translate="yes" xml:space="preserve">
          <source>This keyword should follow the PACKAGE keyword when used. If PACKAGE is not used then PREFIX should follow the MODULE keyword.</source>
          <target state="translated">이 키워드는 사용될 때 PACKAGE 키워드 뒤에 와야합니다. PACKAGE를 사용하지 않으면 PREFIX는 MODULE 키워드를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="febcd526951ded918c85fd19d9088e687e73cc02" translate="yes" xml:space="preserve">
          <source>This keyword will normally be used to complement the CODE: keyword. The RETVAL variable is not recognized as an output variable when the CODE: keyword is present. The OUTPUT: keyword is used in this situation to tell the compiler that RETVAL really is an output variable.</source>
          <target state="translated">이 키워드는 일반적으로 CODE : 키워드를 보완하는 데 사용됩니다. CODE : 키워드가 있으면 RETVAL 변수가 출력 변수로 인식되지 않습니다. 이 상황에서는 OUTPUT : 키워드를 사용하여 RETVAL이 실제로 출력 변수임을 컴파일러에 알립니다.</target>
        </trans-unit>
        <trans-unit id="cb6c35b047be04a4c7f82192e6412bfe49f97ba3" translate="yes" xml:space="preserve">
          <source>This last example is purely for purposes of completeness. You should not be trying to mess with the attributes of something in a package that's not your own.</source>
          <target state="translated">이 마지막 예는 순수성을위한 것입니다. 자신의 패키지가 아닌 패키지의 속성을 엉망으로 만들려고하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="912ca0c2e267a94ac06e924425736641ec8ba084" translate="yes" xml:space="preserve">
          <source>This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations. Note the white space within it. This is allowed because &lt;code&gt;/xx&lt;/code&gt; is automatically turned on within this construct.</source>
          <target state="translated">이 마지막 예제는 추가 집합 연산없이 일반 대괄호 문자 클래스를 지정하기 위해이 구성을 사용하는 방법을 보여줍니다. 그 안에 공백이 있습니다. &lt;code&gt;/xx&lt;/code&gt; 가이 구문 내에서 자동으로 설정 되기 때문에 허용 됩니다.</target>
        </trans-unit>
        <trans-unit id="862d993f36bd27f44699b4c5102357c5ca816339" translate="yes" xml:space="preserve">
          <source>This last example shows the use of this construct to specify an ordinary bracketed character class without additional set operations. Note the white space within it; &lt;code&gt;/x&lt;/code&gt; is turned on even within bracketed character classes, except you can't have comments inside them. Hence,</source>
          <target state="translated">이 마지막 예는이 설정을 사용하여 추가 세트 조작없이 일반 대괄호 문자 클래스를 지정하는 방법을 보여줍니다. 그 안에 공백이 있습니다. &lt;code&gt;/x&lt;/code&gt; 는 대괄호로 묶은 문자 클래스 내에서도 켜져 있으며 주석을 포함 할 수 없습니다. 그 후,</target>
        </trans-unit>
        <trans-unit id="9220dfc1805deb030c183292c9d16a65be2d81b4" translate="yes" xml:space="preserve">
          <source>This last example splits &lt;code&gt;$foo&lt;/code&gt; into the first two words and the remainder of the line, and assigns those three fields to &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; , and &lt;code&gt;$Etc&lt;/code&gt; . The conditional is true if any variables were assigned; that is, if the pattern matched.</source>
          <target state="translated">이 마지막 예는 &lt;code&gt;$foo&lt;/code&gt; 를 처음 두 단어와 나머지 행으로 나누고이 세 필드를 &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; 및 &lt;code&gt;$Etc&lt;/code&gt; 할당합니다 . 변수가 할당 된 경우 조건부 참입니다. 즉, 패턴이 일치하는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="28beb0fd6f81e4104dcda83e789966269c55d353" translate="yes" xml:space="preserve">
          <source>This last example splits &lt;code&gt;$foo&lt;/code&gt; into the first two words and the remainder of the line, and assigns those three fields to &lt;code&gt;$F1&lt;/code&gt;, &lt;code&gt;$F2&lt;/code&gt;, and &lt;code&gt;$Etc&lt;/code&gt;. The conditional is true if any variables were assigned; that is, if the pattern matched.</source>
          <target state="translated">이 마지막 예제는 &lt;code&gt;$foo&lt;/code&gt; 를 처음 두 단어와 줄의 나머지 부분으로 분할하고이 세 필드를 &lt;code&gt;$F1&lt;/code&gt; , &lt;code&gt;$F2&lt;/code&gt; 및 &lt;code&gt;$Etc&lt;/code&gt; 할당합니다 . 변수가 할당 된 경우 조건은 참입니다. 즉, 패턴이 일치하는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="b0e7606501a4d8dcdc827582f8772dc7d2f7c727" translate="yes" xml:space="preserve">
          <source>This last one is present only in perl 5.22.0 and higher.</source>
          <target state="translated">이 마지막 것은 perl 5.22.0 이상에서만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="71d99570ae143a5a3edf0f9d507ad7328c03cf89" translate="yes" xml:space="preserve">
          <source>This latter is improper because when the &quot;=end outer&quot; command is seen, the currently open region has the formatname &quot;inner&quot;, not &quot;outer&quot;. (It just happens that &quot;outer&quot; is the format name of a higher-up region.) This is an error. Processors must by default report this as an error, and may halt processing the document containing that error. A corollary of this is that regions cannot &quot;overlap&quot;. That is, the latter block above does not represent a region called &quot;outer&quot; which contains X and Y, overlapping a region called &quot;inner&quot; which contains Y and Z. But because it is invalid (as all apparently overlapping regions would be), it doesn't represent that, or anything at all.</source>
          <target state="translated">&quot;= end outer&quot;명령이 표시 될 때 현재 열려있는 영역의 형식 이름은 &quot;outer&quot;가 아니라 &quot;inner&quot;이므로이 후자는 올바르지 않습니다. ( &quot;외부&quot;가 상위 영역의 형식 이름 인 경우에만 발생합니다.) 이것은 오류입니다. 프로세서는 기본적으로이 오류를 오류로보고해야하며 해당 오류가 포함 된 문서 처리를 중단 할 수 있습니다. 이것의 결과는 지역이 &quot;중복&quot;될 수 없다는 것입니다. 즉, 위의 후자의 블록은 X와 Y를 포함하는 &quot;외부&quot;라는 영역을 나타내지 않으며 Y와 Z를 포함하는 &quot;내부&quot;라는 영역과 겹칩니다. 그것은 그 어떤 것도 나타내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="329baa8ca56fa0cbccaada8dac24e7d11eab4ae6" translate="yes" xml:space="preserve">
          <source>This layer (which actually sets a flag on the preceding layer, and is implicitly set by any &lt;code&gt;:encoding&lt;/code&gt; layer) does not translate or validate byte sequences. It instead indicates that the byte stream will have been arranged by other layers to be provided in Perl's internal upgraded encoding, which Perl code (and correctly written XS code) will interpret as decoded Unicode characters.</source>
          <target state="translated">이 계층 (실제로 이전 계층에 플래그를 설정하고 &lt;code&gt;:encoding&lt;/code&gt; 계층에 의해 암시 적으로 설정 됨 )은 바이트 시퀀스를 변환하거나 유효성을 검사하지 않습니다. 대신 바이트 스트림이 Perl의 내부 업그레이드 된 인코딩으로 제공되도록 다른 레이어에 의해 배열 될 것임을 나타냅니다. Perl 코드 (및 올바르게 작성된 XS 코드)는 디코딩 된 유니 코드 문자로 해석합니다.</target>
        </trans-unit>
        <trans-unit id="07d7417365f82f63b9e8e59a7e5f2cdf78946771" translate="yes" xml:space="preserve">
          <source>This layer does &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; operations by mmap()ing the file if possible, but falls back to the default behavior if not.</source>
          <target state="translated">이 계층은 가능한 경우 파일을 mmap () ing하여 &lt;code&gt;read&lt;/code&gt; 및 &lt;code&gt;write&lt;/code&gt; 작업을 수행하지만 그렇지 않은 경우 기본 동작으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="7a8db66183eb60025ea9a2964bbf14f04f11348c" translate="yes" xml:space="preserve">
          <source>This layer provides a PerlIO interface by wrapping system's ANSI C &quot;stdio&quot; library calls. The layer provides both buffering and IO. Note that the &lt;code&gt;:stdio&lt;/code&gt; layer does</source>
          <target state="translated">이 계층은 시스템의 ANSI C &quot;stdio&quot;라이브러리 호출을 래핑하여 PerlIO 인터페이스를 제공합니다. 계층은 버퍼링과 IO를 모두 제공합니다. 있습니다 &lt;code&gt;:stdio&lt;/code&gt; 층 않습니다</target>
        </trans-unit>
        <trans-unit id="b630c4528c6aff17852e4e3ca55c2d5a2c70831c" translate="yes" xml:space="preserve">
          <source>This leads to the other two differences. Since a single code point is returned, the function can't handle named character sequences, as these are composed of multiple characters (it returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for these. And, the code point can be that of any character, even ones that aren't legal under the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; pragma,</source>
          <target state="translated">이것은 다른 두 가지 차이점으로 이어집니다. 단일 코드 포인트가 반환되므로 함수는 명명 된 문자 시퀀스를 처리 할 수 ​​없습니다. 명명 된 문자 시퀀스는 여러 문자로 구성되어 있기 때문에 (이에 대해 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; bytes&lt;/code&gt; pragma에 따라 합법적 이며,</target>
        </trans-unit>
        <trans-unit id="4878f92b6bf138d4cb047d57550f50b02dd06d3b" translate="yes" xml:space="preserve">
          <source>This leads to the other two differences. Since a single code point is returned, the function can't handle named character sequences, as these are composed of multiple characters (it returns &lt;code&gt;undef&lt;/code&gt; for these. And, the code point can be that of any character, even ones that aren't legal under the &lt;code&gt;use bytes&lt;/code&gt; pragma,</source>
          <target state="translated">이것은 다른 두 가지 차이점으로 이어집니다. 단일 코드 포인트가 반환되기 때문에 함수는 명명 된 문자 시퀀스를 처리 할 수 ​​없습니다. 여러 문자로 구성되어 있기 때문입니다 (이에 대해 &lt;code&gt;undef&lt;/code&gt; 를 반환합니다 . &lt;code&gt;use bytes&lt;/code&gt; pragma에서 합법적 이며,</target>
        </trans-unit>
        <trans-unit id="d5aa1dc9dac018985cded1aa3e48ced88d449905" translate="yes" xml:space="preserve">
          <source>This lets you build and send a V2 event directly from facets. The event is returned after it is sent.</source>
          <target state="translated">이를 통해 패싯에서 직접 V2 이벤트를 빌드하고 보낼 수 있습니다. 이벤트가 전송 된 후 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d2bfaca7128553729771ae3288647f98ec9ca08e" translate="yes" xml:space="preserve">
          <source>This lets you build and send an event of any type. The &lt;code&gt;$Type&lt;/code&gt; argument should be the event package name with &lt;code&gt;Test2::Event::&lt;/code&gt; left off, or a fully qualified package name prefixed with a '+'. The event is returned after it is sent.</source>
          <target state="translated">이를 통해 모든 유형의 이벤트를 빌드하고 보낼 수 있습니다. &lt;code&gt;$Type&lt;/code&gt; 인수와 함께 이벤트 패키지 이름이어야합니다 &lt;code&gt;Test2::Event::&lt;/code&gt; 중단, 또는 '+'로 시작 완전한 패키지 이름. 이벤트가 전송 된 후 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d60f65e26f1f4e74963a10d1932144990bf5f1a5" translate="yes" xml:space="preserve">
          <source>This lets you override an existing type with your own custom type, or register a completely new type, eg:</source>
          <target state="translated">이를 통해 기존 유형을 사용자 정의 유형으로 대체하거나 다음과 같이 완전히 새로운 유형을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79e5d41dc2a646a1022f4533cf9e2ddc99e2b27f" translate="yes" xml:space="preserve">
          <source>This lets you provide a callback sub that will be called &lt;b&gt;ONLY&lt;/b&gt; if your call to &lt;code&gt;context()&lt;/code&gt; generated a new context. The callback &lt;b&gt;WILL NOT&lt;/b&gt; be called if &lt;code&gt;context()&lt;/code&gt; is returning an existing context. The only argument passed into the callback will be the context object itself.</source>
          <target state="translated">이를 통해 &lt;code&gt;context()&lt;/code&gt; 호출 이 새 컨텍스트를 생성 한 경우 &lt;b&gt;에만&lt;/b&gt; 호출되는 콜백 하위를 제공 할 수 있습니다 . &lt;code&gt;context()&lt;/code&gt; 가 기존 컨텍스트를 반환하는 경우 콜백이 호출 &lt;b&gt;되지 않습니다&lt;/b&gt; . 콜백에 전달되는 유일한 인수는 컨텍스트 객체 자체입니다.&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="16fc392b63db228eb7f664add00b8a9c2d85ff42" translate="yes" xml:space="preserve">
          <source>This lets you provide a callback sub that will be called when the context instance is released. This callback will be added to the returned context even if an existing context is returned. If multiple calls to context add callbacks, then all will be called in reverse order when the context is finally released.</source>
          <target state="translated">이를 통해 컨텍스트 인스턴스가 해제 될 때 호출 될 콜백 하위를 제공 할 수 있습니다. 이 콜백은 기존 컨텍스트가 반환 되더라도 반환 된 컨텍스트에 추가됩니다. 컨텍스트에 대한 여러 호출이 콜백을 추가하는 경우 컨텍스트가 최종적으로 해제 될 때 모두 역순으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4cbcd61ebbafca13e92af49c5fcc25ec65159f85" translate="yes" xml:space="preserve">
          <source>This lets you see the order in which the events were sent, unlike &lt;code&gt;intercept { ... }&lt;/code&gt; which only lets you see events as the main hub sees them.</source>
          <target state="translated">이렇게하면 메인 허브가 이벤트를 볼 때만 이벤트를 볼 수있는 &lt;code&gt;intercept { ... }&lt;/code&gt; 와 달리 이벤트가 전송 된 순서를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="563b80ae5c4cc2c80ac1a748d6ab409b86b5a4b5" translate="yes" xml:space="preserve">
          <source>This lets you send an &lt;a href=&quot;Test2::Event::Fail&quot;&gt;Test2::Event::Fail&lt;/a&gt; event. You may optionally provide a &lt;code&gt;$name&lt;/code&gt; and &lt;code&gt;@diagnostics&lt;/code&gt; messages.</source>
          <target state="translated">이렇게하면 &lt;a href=&quot;Test2::Event::Fail&quot;&gt;Test2 :: Event :: Fail&lt;/a&gt; 이벤트 를 보낼 수 있습니다 . 선택적으로 &lt;code&gt;$name&lt;/code&gt; 및 &lt;code&gt;@diagnostics&lt;/code&gt; 메시지를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3afaf78f703df78ea1b2a3a94074c1f6af7d070b" translate="yes" xml:space="preserve">
          <source>This level of sophistication puts filtering out of the reach of many programmers.</source>
          <target state="translated">이러한 수준의 정교함은 많은 프로그래머의 손이 닿지 않는 범위에서 필터링을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="96b38d379d8ea7799ed19600bd96b2cf3c932e45" translate="yes" xml:space="preserve">
          <source>This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</source>
          <target state="translated">이 라이브러리는 유용 할 것이라는 희망으로 배포되었지만 어떠한 보증도하지 않습니다. 상품성 또는 특정 목적에의 적합성에 대한 묵시적 보증조차 포함하지 않습니다. 자세한 내용은 GNU General Public License를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5235941a62b852074a7c3e9fc51537a52e5be7a3" translate="yes" xml:space="preserve">
          <source>This library is free software. You can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">이 라이브러리는 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e845c8ea27e93059361918a289ad292cdfcb8508" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.10.0 or, at your option, any later version of Perl 5 you may have available.</source>
          <target state="translated">이 라이브러리는 무료 소프트웨어입니다. Perl 버전 5.10.0 또는 선택에 따라 사용 가능한 Perl 5의 이후 버전 중 하나와 동일한 조건으로이를 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f877037944f8c1888cbf64249275515c89dec317" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself, either Perl version 5.8.7 or, at your option, any later version of Perl 5 you may have available.</source>
          <target state="translated">이 라이브러리는 무료 소프트웨어입니다. Perl과 동일한 용어로 Perl 버전 5.8.7 또는 선택에 따라 사용 가능한 이후 버전의 Perl 5를 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59869bc853c079c70b9f3b6879026f6cde3bb8df" translate="yes" xml:space="preserve">
          <source>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">이 라이브러리는 무료 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95bf2cec5fb49eb84ad57753eb4accbc37f2ba0f" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">이 라이브러리는 무료 소프트웨어입니다. 귀하는 Perl 자체와 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5912c0244d5e6338722acbdad50efbccb8883b11" translate="yes" xml:space="preserve">
          <source>This library is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">이 라이브러리는 무료 소프트웨어입니다. Perl 자체와 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40333c6cc505a0d3e27434bb83dfca9627c9c8f9" translate="yes" xml:space="preserve">
          <source>This library is useful for the &lt;code&gt;find2perl&lt;/code&gt; tool (distributed as part of the App-find2perl CPAN distribution), which when fed,</source>
          <target state="translated">이 라이브러리는 &lt;code&gt;find2perl&lt;/code&gt; 도구 (App-find2perl CPAN 배포의 일부로 배포 됨 )에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="4f410cd597bbeaeb5f199c6d8d09628b5554744f" translate="yes" xml:space="preserve">
          <source>This library is useful for the &lt;code&gt;find2perl&lt;/code&gt; tool, which when fed,</source>
          <target state="translated">이 라이브러리는 &lt;code&gt;find2perl&lt;/code&gt; 도구에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c0bf3b785ab345744e2dfb1b0071fc64c2b599fe" translate="yes" xml:space="preserve">
          <source>This library provides functions for common tasks involving language tags as they are needed in a variety of protocols and applications.</source>
          <target state="translated">이 라이브러리는 다양한 프로토콜 및 응용 프로그램에 필요한 언어 태그와 관련된 일반적인 작업을위한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f1885a10472534bbc801de451233880b8db2b1d7" translate="yes" xml:space="preserve">
          <source>This library provides stubs for the functions marked as [CORE] in &lt;a href=&quot;win32&quot;&gt;Win32&lt;/a&gt;. See that document for usage information. When any of these functions are called, the full Win32 module is loaded automatically. It is preferred that callers of these functions explicitly &lt;code&gt;use Win32;&lt;/code&gt;.</source>
          <target state="translated">이 라이브러리는 &lt;a href=&quot;win32&quot;&gt;Win32&lt;/a&gt; 에서 [CORE]로 표시된 함수에 대한 스텁을 제공합니다 . 사용 정보는 해당 문서를 참조하십시오. 이러한 함수가 호출되면 전체 Win32 모듈이 자동으로로드됩니다. 이러한 함수의 호출자는 명시 적으로 &lt;code&gt;use Win32;&lt;/code&gt; 하는 것이 좋습니다 . .</target>
        </trans-unit>
        <trans-unit id="0c8a7928010093d74c8591010b017561f0beda8e" translate="yes" xml:space="preserve">
          <source>This library provides support for big integer calculations. It is not intended to be used by other modules. Other modules which support the same API (see below) can also be used to support Math::BigInt, like Math::BigInt::GMP and Math::BigInt::Pari.</source>
          <target state="translated">이 라이브러리는 큰 정수 계산을 지원합니다. 다른 모듈에서는 사용하지 않습니다. 동일한 API (아래 참조)를 지원하는 다른 모듈을 사용하여 Math :: BigInt :: GMP 및 Math :: BigInt :: Pari와 같은 Math :: BigInt를 지원할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3eb497d536b5c644bfd0b5d3e8c9055b4a9a57d" translate="yes" xml:space="preserve">
          <source>This limitation arises from fundamental technical difficulties in cloning and restarting the stacks used by the Perl parser in the middle of a parse.</source>
          <target state="translated">이 제한은 구문 분석 중에 Perl 구문 분석기가 사용하는 스택을 복제하고 다시 시작하는 데있어 근본적인 기술적 어려움으로 인해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5fe79b21d14490122d11b41cbba492989dbd2358" translate="yes" xml:space="preserve">
          <source>This limitation might be removed in a future version of perl.</source>
          <target state="translated">이 제한 사항은 이후 버전의 perl에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68a6939633ab7f637a699e2abcb07f19152f1003" translate="yes" xml:space="preserve">
          <source>This line is taken from &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; 3.04, and marks it as deprecated beyond Perl 5.16. If you &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; in Perl 5.18, for example, and you have used &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;, then you'll get a warning message (the deprecate module looks to see whether the calling module was &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt;'d from a core library directory, and if so, generates a warning), unless you've installed a more recent version of &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text::Soundex&lt;/a&gt; from CPAN.</source>
          <target state="translated">이 줄은 &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt; 3.04 에서 가져 왔으며 Perl 5.16 이후에는 더 이상 사용되지 않는 것으로 표시됩니다. 당신이 경우에 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Text::Soundex&lt;/code&gt; 펄 5.18, 예를 들어에, 당신은 사용이 &lt;a href=&quot;warnings&quot;&gt;경고를&lt;/a&gt; , 당신은 호출 모듈이 있었다 여부를 확인하기 위해 경고 메시지합니다 (지원 중단 모듈 외모를 얻을 수 있습니다 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 핵심 라이브러리 디렉토리에서 'D 및 CPAN에서 최신 버전의 &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Soundex&quot;&gt;Text :: Soundex&lt;/a&gt; 를 설치하지 않은 경우 경고가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="8aa26d9d42b4368a2ea1e0d808d08013501b95e4" translate="yes" xml:space="preserve">
          <source>This list can be extended by either blacklisting additional &quot;known bad&quot; methods, or whitelisting only &quot;known good&quot; methods.</source>
          <target state="translated">이 목록은 추가 &quot;알려진 나쁜&quot;방법을 블랙리스트에 추가하거나 &quot;알려진 좋은&quot;방법 만 화이트리스트에 추가하여 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d4d9656ee66f6221eea8c2856144cdf8d5022fd" translate="yes" xml:space="preserve">
          <source>This list includes architecture-dependent directories back to version $api_versionstring (e.g. 5.5.640) and architecture-independent directories all the way back to 5.005.</source>
          <target state="translated">이 목록에는 $ api_versionstring 버전으로 돌아가는 아키텍처 종속 디렉토리 (예 : 5.5.640)와 5.005로 돌아가는 아키텍처 독립적 디렉토리가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2a2fc6936d401079e1014279fe24282359b2ced4" translate="yes" xml:space="preserve">
          <source>This list is in alphabetical order by English name of the language.</source>
          <target state="translated">이 목록은 영어 이름의 알파벳순으로되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eb2c698e22fab613c0295cd186a49d231f78c73" translate="yes" xml:space="preserve">
          <source>This list is not as definitive as it may appear (or be claimed to be in other documentation). For example, &lt;code&gt;&quot;#&quot;&lt;/code&gt; is a metacharacter only when the &lt;code&gt;/x&lt;/code&gt; pattern modifier (described below) is used, and both &lt;code&gt;&quot;}&quot;&lt;/code&gt; and &lt;code&gt;&quot;]&quot;&lt;/code&gt; are metacharacters only when paired with opening &lt;code&gt;&quot;{&quot;&lt;/code&gt; or &lt;code&gt;&quot;[&quot;&lt;/code&gt; respectively; other gotchas apply.</source>
          <target state="translated">이 목록은 표시 될 수있는 것만 큼 명확하지 않습니다 (또는 다른 문서에 있다고 주장 됨). 예를 들어, &lt;code&gt;&quot;#&quot;&lt;/code&gt; 은 &lt;code&gt;/x&lt;/code&gt; 패턴 수정 자 (아래 설명)가 사용되는 경우에만 메타 문자 이고 &lt;code&gt;&quot;]&quot;&lt;/code&gt; &lt;code&gt;&quot;}&quot;&lt;/code&gt; 및 &quot;]&quot; 는 각각 여는 &lt;code&gt;&quot;{&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;[&quot;&lt;/code&gt; 와 쌍을 이루는 경우에만 메타 문자 입니다. 다른 문제가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9439512245a21874bebe9bdb6ca9f21d2c823dcb" translate="yes" xml:space="preserve">
          <source>This list is subject to change, but is quite unlikely to. Each ASCII sequence can be any combination of upper- and lowercase.</source>
          <target state="translated">이 목록은 변경 될 수 있지만 그럴 가능성은 거의 없습니다. 각 ASCII 시퀀스는 대문자와 소문자의 조합이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbc78c3347e34ef8b4193dfb718a45521c4ab8d4" translate="yes" xml:space="preserve">
          <source>This list of categories is used to produce the same order as the &lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;Perl Functions by Category in perlfunc&lt;/a&gt; section.</source>
          <target state="translated">이 카테고리 목록은 &lt;a href=&quot;../perlfunc#Perl-Functions-by-Category&quot;&gt;perlfunc&lt;/a&gt; 섹션의 카테고리 별 Perl 함수 와 동일한 순서를 생성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="08880758fdfe951040b4a3fc486563eceb7ef61e" translate="yes" xml:space="preserve">
          <source>This list of categories is used to produce the same order as the &lt;a href=&quot;perlfunc#Perl-Functions-by-Category&quot;&gt;&quot;Perl Functions by Category&quot; in perlfunc&lt;/a&gt; section.</source>
          <target state="translated">이 카테고리 목록은 &lt;a href=&quot;perlfunc#Perl-Functions-by-Category&quot;&gt;perlfunc&lt;/a&gt; 섹션의 &quot;카테고리 별 Perl 함수&quot; 와 동일한 순서를 생성하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b0d8392d22aa3f9f1cc5418d2f71d3d9b55240c2" translate="yes" xml:space="preserve">
          <source>This list used to contain :base_io prior to Opcode 1.07.</source>
          <target state="translated">이 목록에는 Opcode 1.07 이전에 : base_io가 포함되어있었습니다.</target>
        </trans-unit>
        <trans-unit id="f6d74c66919ae745b2d3650dc11a98193dcd5f79" translate="yes" xml:space="preserve">
          <source>This load time hit can be a problem when startup speed is important, such as with a command-line script or a &quot;plain vanilla&quot; CGI script that must be loaded each time it is executed.</source>
          <target state="translated">이로드 시간 적중은 명령 행 스크립트 또는 실행될 때마다로드되어야하는 &quot;일반 바닐라&quot;CGI 스크립트와 같이 시작 속도가 중요한 경우 문제가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f016e1379d18764668778064a6a84ece9741d1da" translate="yes" xml:space="preserve">
          <source>This logical name must be defined before Perl is started.</source>
          <target state="translated">Perl을 시작하기 전에이 논리적 이름을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="2da9ead2fb770925df3e972a0efa2a82cbbd6ec6" translate="yes" xml:space="preserve">
          <source>This looks in the %Lexicon of the language handle $lh and all its superclasses, looking for an entry whose key is the string</source>
          <target state="translated">이것은 언어 핸들 % lh와 모든 수퍼 클래스의 % Lexicon에서 키가 문자열 인 항목을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="6b4001bd2a1ae040dc8e95119817ede264954c05" translate="yes" xml:space="preserve">
          <source>This loses precision, to avoid this use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int()&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int ()&lt;/a&gt; 사용을 피하기 위해 정밀도가 떨어 집니다.</target>
        </trans-unit>
        <trans-unit id="2cb2a7c80cbcd1bcc850e8fe88a609a4116cf1c4" translate="yes" xml:space="preserve">
          <source>This machine-native collation (which is what you get unless &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
locale&lt;/code&gt; has appeared earlier in the same block) must be used for sorting raw binary data, whereas the locale-dependent collation of the first example is useful for natural text.</source>
          <target state="translated">원시 이진 데이터를 정렬 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 기본 데이터 정렬 ( 로케일 사용 이 동일한 블록에서 이전에 표시 되지 않은 경우 )을 사용해야합니다. 첫 번째 예제의 로케일 종속 데이터 정렬은 자연 텍스트에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ed86d270c34efc62d89708174f71255637599c7d" translate="yes" xml:space="preserve">
          <source>This machine-native collation (which is what you get unless &lt;code&gt;use locale&lt;/code&gt; has appeared earlier in the same block) must be used for sorting raw binary data, whereas the locale-dependent collation of the first example is useful for natural text.</source>
          <target state="translated">이 머신 네이티브 데이터 정렬 ( &lt;code&gt;use locale&lt;/code&gt; 이 동일한 블록에서 이전에 표시 되지 않는 한 얻을 수있는 것 )은 원시 이진 데이터를 정렬하는 데 사용해야하지만 첫 번째 예제의 로케일 종속 데이터 정렬은 자연 텍스트에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fe9b1418e4cf2456d34c78acbb912d03460323b0" translate="yes" xml:space="preserve">
          <source>This macro automatically adjusts the stack for you, if needed. Thus, you do not need to call &lt;code&gt;EXTEND&lt;/code&gt; to extend the stack.</source>
          <target state="translated">이 매크로는 필요한 경우 자동으로 스택을 조정합니다. 따라서 스택을 확장하기 위해 &lt;code&gt;EXTEND&lt;/code&gt; 를 호출 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="03eb53576978d347f479b9ace06d68ed559f1850" translate="yes" xml:space="preserve">
          <source>This macro evaluates to non-zero if the first few bytes of the string starting at &lt;code&gt;s&lt;/code&gt; and looking no further than &lt;code&gt;e - 1&lt;/code&gt; are from this UTF-8 extension; otherwise it evaluates to 0. If non-zero, the value gives how many bytes starting at &lt;code&gt;s&lt;/code&gt; comprise the code point's representation.</source>
          <target state="translated">이 매크로는 &lt;code&gt;s&lt;/code&gt; 에서 시작하고 &lt;code&gt;e - 1&lt;/code&gt; 이상을 보지 않는 문자열의 처음 몇 바이트 가이 UTF-8 확장에서 나온 경우 0이 아닌 것으로 평가됩니다 . 그렇지 않으면 0으로 평가됩니다. 0이 아니면 값은 &lt;code&gt;s&lt;/code&gt; 에서 시작 하여 코드 포인트의 표현을 구성하는 바이트 수를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="87701b9dd5d8a0667150a21e302c3f738b0c69c4" translate="yes" xml:space="preserve">
          <source>This macro invokes the supplied statement or block within the context of a &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; .. &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; pair if required, so eg:</source>
          <target state="translated">이 매크로는 필요한 경우 &lt;a href=&quot;#STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&gt;&quot;STORE_LC_NUMERIC_SET_TO_NEEDED&quot;&lt;/a&gt; .. &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; 쌍 의 컨텍스트 내에서 제공된 명령문 또는 블록을 호출합니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="5a0683190e9b9e040d58492b89f4c05059f16d5d" translate="yes" xml:space="preserve">
          <source>This macro is intended to be used by XS modules where the inputs could be malformed, and it isn't feasible to restructure to use the safer &lt;a href=&quot;#UTF8_SAFE_SKIP&quot;&gt;&quot;&lt;code&gt;UTF8_SAFE_SKIP&lt;/code&gt;&quot;&lt;/a&gt;, for example when interfacing with a C library.</source>
          <target state="translated">이 매크로는 입력이 잘못 될 수있는 XS 모듈에서 사용하기위한 것이며 , 예를 들어 C 라이브러리와 인터페이스 할 때 더 안전한 &lt;a href=&quot;#UTF8_SAFE_SKIP&quot;&gt;&quot; &lt;code&gt;UTF8_SAFE_SKIP&lt;/code&gt; &quot;&lt;/a&gt; 를 사용하도록 재구성 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="bf6c6c2883f7df6e6775b00306eebea28bdde0f9" translate="yes" xml:space="preserve">
          <source>This macro is only used by &lt;code&gt;sv_true()&lt;/code&gt; or its macro equivalent, and only if the latter's argument is neither &lt;code&gt;SvPOK&lt;/code&gt;, &lt;code&gt;SvIOK&lt;/code&gt; nor &lt;code&gt;SvNOK&lt;/code&gt;. It calls &lt;code&gt;sv_2bool_flags&lt;/code&gt; with the &lt;code&gt;SV_GMAGIC&lt;/code&gt; flag.</source>
          <target state="translated">이 매크로는 &lt;code&gt;sv_true()&lt;/code&gt; 또는 그에 상응하는 매크로 에서만 사용되며 후자의 인수가 &lt;code&gt;SvPOK&lt;/code&gt; , &lt;code&gt;SvIOK&lt;/code&gt; 또는 &lt;code&gt;SvNOK&lt;/code&gt; 가 아닌 경우에만 사용됩니다 . &lt;code&gt;SV_GMAGIC&lt;/code&gt; 플래그 와 함께 &lt;code&gt;sv_2bool_flags&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="28984ae179e05c5bf9916303fc08d37c02058ac5" translate="yes" xml:space="preserve">
          <source>This macro is only used by sv_true() or its macro equivalent, and only if the latter's argument is neither SvPOK, SvIOK nor SvNOK. It calls sv_2bool_flags with the SV_GMAGIC flag.</source>
          <target state="translated">이 매크로는 sv_true () 또는 그와 동등한 매크로에서만 사용되며 후자의 인수가 SvPOK, SvIOK 또는 SvNOK가 아닌 경우에만 사용됩니다. SV_GMAGIC 플래그와 함께 sv_2bool_flags를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="e69c1ad5fe8e7c0cb76164a9a63b43161810252f" translate="yes" xml:space="preserve">
          <source>This macro is the start of wrapping the C or XS code; the wrap ending is done by calling the &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; macro after the operation. Otherwise the state can be changed that will adversely affect other XS code.</source>
          <target state="translated">이 매크로는 C 또는 XS 코드 래핑의 시작입니다. 랩 종료는 작업 후 &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;&quot;RESTORE_LC_NUMERIC&quot;&lt;/a&gt; 매크로 를 호출하여 수행됩니다 . 그렇지 않으면 상태가 변경되어 다른 XS 코드에 악영향을 미칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e10545c4894740426ee72f48ac1e29d7b762c0e6" translate="yes" xml:space="preserve">
          <source>This macro is the start of wrapping the C or XS code; the wrap ending is done by calling the &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt; macro after the operation. Otherwise the state can be changed that will adversely affect other XS code.</source>
          <target state="translated">이 매크로는 C 또는 XS 코드를 래핑하기 시작합니다. 랩 종료는 조작 후 &lt;a href=&quot;#RESTORE_LC_NUMERIC&quot;&gt;RESTORE_LC_NUMERIC&lt;/a&gt; 매크로 를 호출하여 수행됩니다 . 그렇지 않으면 상태가 변경되어 다른 XS 코드에 부정적인 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="108576184697c52b594b5fe191807eddc07365bd" translate="yes" xml:space="preserve">
          <source>This macro is used to define a unique key to refer to the static data for an XS module. The suggested naming scheme, as used by h2xs, is to use a string that consists of the module name, the string &quot;::_guts&quot; and the module version number.</source>
          <target state="translated">이 매크로는 XS 모듈의 정적 데이터를 나타내는 고유 키를 정의하는 데 사용됩니다. h2xs에서 사용되는 제안 된 명명 체계는 모듈 이름, 문자열 &quot;:: _ guts&quot;및 모듈 버전 번호로 구성된 문자열을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c6d4c1493bd7a58de9fad441658972687cd16b89" translate="yes" xml:space="preserve">
          <source>This macro makes sure the current &lt;code&gt;LC_NUMERIC&lt;/code&gt; state is set properly, to be aware of locale if the call to the XS or C code from the Perl program is from within the scope of a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; ; or to ignore locale if the call is instead from outside such scope.</source>
          <target state="translated">이 매크로는 Perl 프로그램에서 XS 또는 C 코드에 대한 호출이 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 로케일 범위 내에있는 경우 로케일을 인식하기 위해 현재 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 상태가 올바르게 설정되었는지 확인합니다 . 또는 호출이 그러한 범위를 벗어난 경우 로케일을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="789676223757b6e3c9adb39d17261f88564cb4ea" translate="yes" xml:space="preserve">
          <source>This macro makes sure the current &lt;code&gt;LC_NUMERIC&lt;/code&gt; state is set properly, to be aware of locale if the call to the XS or C code from the Perl program is from within the scope of a &lt;code&gt;use locale&lt;/code&gt;; or to ignore locale if the call is instead from outside such scope.</source>
          <target state="translated">이 매크로는 Perl 프로그램에서 XS 또는 C 코드에 대한 호출이 &lt;code&gt;use locale&lt;/code&gt; 범위 내에있는 경우 로케일을 인식하기 위해 현재 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 상태가 올바르게 설정되었는지 확인합니다 . 또는 호출이 이러한 범위를 벗어나는 경우 로케일을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="a92648c32efc9502af17e5ceb0078f95c4ee774c" translate="yes" xml:space="preserve">
          <source>This macro should be used as a statement. It declares a private variable (whose name begins with an underscore) that is needed by the other macros in this section. Failing to include this correctly should lead to a syntax error. For compatibility with C89 C compilers it should be placed in a block before any executable statements.</source>
          <target state="translated">이 매크로는 명령문으로 사용해야합니다. 이 섹션의 다른 매크로에 필요한 개인 변수 (이름은 밑줄로 시작)를 선언합니다. 이것을 올바르게 포함하지 않으면 구문 오류가 발생합니다. C89 C 컴파일러와의 호환성을 위해 실행 문 앞에 블록에 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b90726f024761758381d53bc05e127149501c3cd" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; return the native VMS exit status instead of emulating the POSIX exit status.</source>
          <target state="translated">이것은 &lt;code&gt;$?&lt;/code&gt; 만든다 ? 및 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; POSIX의 종료 상태를 모방 대신 기본 VMS의 종료 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="628b3f0c435efc68cdba395167206609d25c5fc1" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;$?&lt;/code&gt; and &lt;code&gt;system&lt;/code&gt; return the native VMS exit status instead of emulating the POSIX exit status.</source>
          <target state="translated">이것은 &lt;code&gt;$?&lt;/code&gt; 및 &lt;code&gt;system&lt;/code&gt; POSIX의 종료 상태를 모방 대신 기본 VMS의 종료 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8a2c6d4ff2fd838d04decac262a17dd105743f47" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; produce a successful exit (with status SS$_NORMAL), instead of emulating UNIX exit(), which considers &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; to indicate an error. As with the CRTL's exit() function, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; is also mapped to an exit status of SS$_NORMAL, and any other argument to exit() is used directly as Perl's exit status.</source>
          <target state="translated">이는하게 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; 대신 고려 UNIX 출구 (), 모방, 생산 (상태 SS $ _NORMAL에) 성공적으로 종료 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 1&lt;/code&gt; 오류를 표시 할 수 있습니다. CRTL의 exit () 함수와 마찬가지로 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt; 0&lt;/code&gt; 도 SS $ _NORMAL의 종료 상태에 맵핑되며 exit ()에 대한 다른 인수는 Perl의 종료 상태로 직접 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f530eabe223e1fc114547fb2222672ed10b84b29" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;exit 1&lt;/code&gt; produce a successful exit (with status SS$_NORMAL), instead of emulating UNIX exit(), which considers &lt;code&gt;exit 1&lt;/code&gt; to indicate an error. As with the CRTL's exit() function, &lt;code&gt;exit 0&lt;/code&gt; is also mapped to an exit status of SS$_NORMAL, and any other argument to exit() is used directly as Perl's exit status.</source>
          <target state="translated">이로 인해 &lt;code&gt;exit 1&lt;/code&gt; 이 오류를 표시하기 위해 &lt;code&gt;exit 1&lt;/code&gt; 을 고려하는 UNIX exit ()를 에뮬레이트하는 대신 성공적인 종료 (SS $ _NORMAL 상태)를 생성 합니다. CRTL의 exit () 함수와 마찬가지로 &lt;code&gt;exit 0&lt;/code&gt; 도 SS $ _NORMAL의 종료 상태에 매핑되며 exit ()에 대한 다른 인수는 Perl의 종료 상태로 직접 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bf2d12c23e7f9dc586004c73bb11c5e4d66c884b" translate="yes" xml:space="preserve">
          <source>This makes a second reference to the &lt;b&gt;same&lt;/b&gt; object and stores it in $y. Thus anything that modifies $x (except overloaded operators) also modifies $y, and vice versa. Or in other words, &lt;code&gt;=&lt;/code&gt; is only safe if you modify your Math::BigInt objects only via overloaded math. As soon as you use a method call it breaks:</source>
          <target state="translated">이것은 &lt;b&gt;동일한&lt;/b&gt; 객체에 대한 두 번째 참조를 만들고 $ y에 저장합니다. 따라서 $ x를 수정하는 모든 것 (오버로드 된 연산자 제외)은 $ y도 수정하며 그 반대의 경우도 마찬가지입니다. 즉, &lt;code&gt;=&lt;/code&gt; 는 오버로드 된 수학을 통해서만 Math :: BigInt 개체를 수정하는 경우에만 안전합니다. 메서드 호출을 사용하자마자 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="7bf5212d7d68fd2597a5ccb3dac44a0ec0acbc33" translate="yes" xml:space="preserve">
          <source>This makes all times relative to the local time zone, instead of the default of Universal Time (a.k.a Greenwich Mean Time, or GMT).</source>
          <target state="translated">이렇게하면 기본 시간 인 그리니치 표준시 (GMT) 대신 현지 시간대를 기준으로 모든 시간이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9babc5bd4d4d8fad4e1a1114788e7c9d9589298f" translate="yes" xml:space="preserve">
          <source>This makes it easy for people to use your module with Perl. Note that this licensing example is neither an endorsement or a requirement, you are of course free to choose any licensing.</source>
          <target state="translated">따라서 사람들이 Perl과 함께 모듈을 쉽게 사용할 수 있습니다. 이 라이센스 예제는 보증 또는 요구 사항이 아니며 라이센스를 자유롭게 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6b677bb7d54149dada8aa52108296cc95f7e885" translate="yes" xml:space="preserve">
          <source>This makes it easy to turn memoizing on and off.</source>
          <target state="translated">이를 통해 메모를 쉽게 켜고 끌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84c2faa4aab99c70a3db865e9bc75342b3b56a52" translate="yes" xml:space="preserve">
          <source>This makes it easy to write loops that terminate when a null list is returned:</source>
          <target state="translated">따라서 null 목록이 반환 될 때 종료되는 루프를 쉽게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef9cd0d8fba7947707aa196a6028ecbb8adf2cd7" translate="yes" xml:space="preserve">
          <source>This makes it possible for you to have a single point of configuring what subclasses should be used, which means that in many cases you'll find you only need to sub-class one of the parser's components.</source>
          <target state="translated">이를 통해 어떤 서브 클래스를 구성해야하는지 단일 지점을 가질 수 있습니다. 이는 대부분의 경우 파서 구성 요소 중 하나만 서브 클래스해야한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="80334a3bb6611cb20a20615249beb172fdbc5b91" translate="yes" xml:space="preserve">
          <source>This makes it possible to mix arguments of different classes (as in 2.5 + 2) as well es preserve accuracy (as in sqrt(3)).</source>
          <target state="translated">이것은 다른 클래스 (2.5 + 2에서와 같이)의 인수를 혼합 할 수있을뿐만 아니라 (sqrt (3)에서와 같이) 정확성을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="304f656ae607b7cf896345e4cfc56ab064cd5820" translate="yes" xml:space="preserve">
          <source>This makes it possible to write a constructor like this:</source>
          <target state="translated">이를 통해 다음과 같은 생성자를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc06c6059d7797b5cf29ed701247a147f4e8dbe0" translate="yes" xml:space="preserve">
          <source>This makes it so that HashBase sees that you have your own &lt;code&gt;new()&lt;/code&gt; method. Alternatively you can define the method before loading HashBase instead of just declaring it, but that scatters your use statements.</source>
          <target state="translated">이렇게하면 HashBase가 자신의 &lt;code&gt;new()&lt;/code&gt; 메서드 가 있음을 알 수 있습니다 . 또는 단순히 선언하는 대신 HashBase를로드하기 전에 메서드를 정의 할 수 있지만 이는 use 문을 분산시킵니다.</target>
        </trans-unit>
        <trans-unit id="08c53718a75ad3b112dec7a9bbaa9b39968746d5" translate="yes" xml:space="preserve">
          <source>This makes sure that &lt;code&gt;foo bar&lt;/code&gt; is treated as a string, rather than two separate arguments to the &lt;code&gt;echo&lt;/code&gt; function.</source>
          <target state="translated">이렇게하면 &lt;code&gt;foo bar&lt;/code&gt; 가 &lt;code&gt;echo&lt;/code&gt; 함수 에 대한 두 개의 개별 인수가 아닌 문자열로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="d11f54f9813ffdcb8a603cf0a760fa85bee8c0f3" translate="yes" xml:space="preserve">
          <source>This makes the four standard bitwise operators (&lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; ) treat their operands consistently as numbers, and introduces four new dotted operators (&lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; ) that treat their operands consistently as strings. The same applies to the assignment variants (&lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ).</source>
          <target state="translated">이렇게하면 4 개의 표준 비트 연산자 ( &lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; )가 피연산자를 숫자로 일관되게 처리하고 피연산자를 문자열로 일관되게 처리하는 4 개의 새로운 점 연산자 ( &lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; )를 도입합니다. 할당 변형 ( &lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ) 에도 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="453a24b82235c09045ebce781ba5151542428ce9" translate="yes" xml:space="preserve">
          <source>This makes the four standard bitwise operators (&lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt;) treat their operands consistently as numbers, and introduces four new dotted operators (&lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt;) that treat their operands consistently as strings. The same applies to the assignment variants (&lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt;).</source>
          <target state="translated">이렇게하면 4 개의 표준 비트 연산자 ( &lt;code&gt;&amp;amp; | ^ ~&lt;/code&gt; )가 피연산자를 일관되게 숫자로 취급하고 피연산자를 일관되게 문자열로 처리하는 4 개의 새로운 점 연산자 ( &lt;code&gt;&amp;amp;. |. ^. ~.&lt;/code&gt; )를 도입합니다. 할당 변형 ( &lt;code&gt;&amp;amp;= |= ^= &amp;amp;.= |.= ^.=&lt;/code&gt; ) 에도 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="168408e4eda2afd55c396c633b53aaec0eb729d4" translate="yes" xml:space="preserve">
          <source>This makes this XSUB look similar to an ANSI C declaration. An optional semicolon is allowed after the argument list, as in</source>
          <target state="translated">이것은이 XSUB를 ANSI C 선언과 유사하게 만듭니다. 다음과 같이 인수 목록 다음에 선택적 세미콜론이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="2eced7035bcf730659e224115fc20b5232c60142" translate="yes" xml:space="preserve">
          <source>This man page is for the version for modern perls and so that's probably what you've got.</source>
          <target state="translated">이 매뉴얼 페이지는 현대적인 perls의 버전을위한 것이므로 아마도 당신이 가진 것입니다.</target>
        </trans-unit>
        <trans-unit id="b1f55a347ef2e9626ef51c086b431d8a172c3d1b" translate="yes" xml:space="preserve">
          <source>This manpage contains short recipes demonstrating how to handle common Unicode operations in Perl, plus one complete program at the end. Any undeclared variables in individual recipes are assumed to have a previous appropriate value in them.</source>
          <target state="translated">이 맨 페이지에는 Perl에서 일반적인 유니 코드 작업을 처리하는 방법을 보여주는 간단한 레시피와 마지막에 하나의 완전한 프로그램이 포함되어 있습니다. 개별 레시피에서 선언되지 않은 변수는 이전 값이 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="aa682f1e123b444504fdfffff8f8767942781c1e" translate="yes" xml:space="preserve">
          <source>This manual page discusses the syntax and use of character classes in Perl regular expressions.</source>
          <target state="translated">이 매뉴얼 페이지에서는 Perl 정규식에서 문자 클래스의 구문과 사용법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3369a77e4e9693acaaa9351801ed7f0c5ee8faea" translate="yes" xml:space="preserve">
          <source>This maps from US-ASCII codes (like 32) to the corresponding character (like space, for 32). Only characters 32 to 126 are defined. This is meant for use by &lt;code&gt;e2char($x)&lt;/code&gt; when it senses that it's running on a non-ASCII platform (where chr(32) doesn't get you a space -- but $Code2USASCII{32} will). It's documented here just in case you might find it useful.</source>
          <target state="translated">이것은 US-ASCII 코드 (32와 같은)에서 해당 문자 (32와 같은 공백)에 매핑됩니다. 문자 32-126 만 정의됩니다. 이는 비 ASCII 플랫폼에서 실행되고 있음을 감지 할 때 &lt;code&gt;e2char($x)&lt;/code&gt; 에서 사용하기위한 것 입니다 (chr (32)는 공간을 확보하지 못하지만 $ Code2USASCII {32}는 사용함). 유용하다고 생각되는 경우를 대비하여 여기에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b8a1823436e8a6226985b3f21cad0fcc22240a7" translate="yes" xml:space="preserve">
          <source>This marks the end of the region opened by the matching &quot;=begin formatname&quot; region. If &quot;formatname&quot; is not the formatname of the most recent open &quot;=begin formatname&quot; region, then this is an error, and must generate an error message. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;&quot;About Data Paragraphs and &quot;=begin/=end&quot; Regions&quot;&lt;/a&gt;.</source>
          <target state="translated">이것은 일치하는 &quot;= begin formatname&quot;영역에 의해 열린 영역의 끝을 표시합니다. &quot;formatname&quot;이 가장 최근에 열린 &quot;= begin formatname&quot;영역의 형식 이름이 아닌 경우 이는 오류이며 오류 메시지를 생성해야합니다. 이에 대해서는 &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3Dbegin%2F%3Dend%22-Regions&quot;&gt;&quot;데이터 단락 정보 및&quot;= begin / = end &quot;영역&quot;&lt;/a&gt; 섹션에서 자세히 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="cb4d3919cb732684c195097b0bb170a903bf1284" translate="yes" xml:space="preserve">
          <source>This marks the end of the region opened by the matching &quot;=begin formatname&quot; region. If &quot;formatname&quot; is not the formatname of the most recent open &quot;=begin formatname&quot; region, then this is an error, and must generate an error message. This is discussed in detail in the section &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;About Data Paragraphs and =begin/=end Regions&lt;/a&gt;.</source>
          <target state="translated">일치하는 &quot;= begin formatname&quot;영역으로 열린 영역의 끝을 표시합니다. &quot;formatname&quot;이 가장 최근에 열린 &quot;= begin formatname&quot;영역의 formatname이 아닌 경우 이는 오류이며 오류 메시지를 생성해야합니다. 이에 대해서는 &lt;a href=&quot;#About-Data-Paragraphs-and-%22%3dbegin%2f%3dend%22-Regions&quot;&gt;데이터 단락 및 = begin / = 종료 정보&lt;/a&gt; 섹션에서 자세히 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="5f3eb630ccbc8c1b4b4ea62b60c2f17bbd2e13b1" translate="yes" xml:space="preserve">
          <source>This marks the following paragraphs (until the matching &quot;=end formatname&quot;) as being for some special kind of processing. Unless &quot;formatname&quot; begins with a colon, the contained non-command paragraphs are data paragraphs. But if &quot;formatname&quot;</source>
          <target state="translated">이것은 다음의 단락 (일치하는 &quot;= end formatname&quot;까지)을 특별한 종류의 처리를위한 것으로 표시합니다. &quot;formatname&quot;이 콜론으로 시작하지 않는 한 포함 된 비 명령어 단락은 데이터 단락입니다. 그러나 &quot;formatname&quot;</target>
        </trans-unit>
        <trans-unit id="199ca4d2282805128a713cd4c31b353ecaf62285" translate="yes" xml:space="preserve">
          <source>This matches a Unicode</source>
          <target state="translated">이것은 유니 코드와 일치합니다</target>
        </trans-unit>
        <trans-unit id="35187fd79ec1edcbf75ff3589e7d7a4fd9384c68" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Grapheme Cluster Boundary&quot;. (Actually Perl always uses the improved &quot;extended&quot; grapheme cluster&quot;). These are explained below under &lt;a href=&quot;#%5CX&quot;&gt;&quot;&lt;code&gt;\X&lt;/code&gt;&quot;&lt;/a&gt;. In fact, &lt;code&gt;\X&lt;/code&gt; is another way to get the same functionality. It is equivalent to &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt;. Use whichever is most convenient for your situation.</source>
          <target state="translated">이것은 유니 코드 &quot;Grapheme Cluster Boundary&quot;와 일치합니다. (실제로 Perl은 항상 개선 된 &quot;확장 된&quot;자소 클러스터 &quot;를 사용합니다.) 아래 &lt;a href=&quot;#%5CX&quot;&gt;&quot; &lt;code&gt;\X&lt;/code&gt; &quot;&lt;/a&gt; 아래에 설명되어 있습니다. 실제로 &lt;code&gt;\X&lt;/code&gt; 는 동일한 기능을 얻는 또 다른 방법입니다. &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; 와 동일합니다. gcb} / . 상황에 가장 편리한 것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7a2285705bf65a5f3a4137269fb669e26419a225" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Grapheme Cluster Boundary&quot;. (Actually Perl always uses the improved &quot;extended&quot; grapheme cluster&quot;). These are explained below under &lt;a href=&quot;#%5cX&quot;&gt;\X&lt;/a&gt;. In fact, &lt;code&gt;\X&lt;/code&gt; is another way to get the same functionality. It is equivalent to &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; . Use whichever is most convenient for your situation.</source>
          <target state="translated">이것은 유니 코드 &quot;Grapheme Cluster Boundary&quot;와 일치합니다. (실제로 Perl은 항상 개선 된 &quot;확장 된&quot;grapheme 클러스터 &quot;를 사용합니다.) 이것들은 아래 &lt;a href=&quot;#%5cX&quot;&gt;\ X&lt;/a&gt; 아래에 설명되어 있습니다. 실제로 &lt;code&gt;\X&lt;/code&gt; 는 동일한 기능을 얻는 또 다른 방법입니다. &lt;code&gt;/.+?\b{gcb}/&lt;/code&gt; 와 같습니다. / . 상황에 가장 편리한 것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="43a174e3acf9fe3da094fe1e29ca009a0ac07471" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Sentence Boundary&quot;. This is an aid to parsing natural language sentences. It gives good, but imperfect results. For example, it thinks that &quot;Mr. Smith&quot; is two sentences. More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;. Note also that it thinks that anything matching &lt;a href=&quot;#%5cR&quot;&gt;\R&lt;/a&gt; (except form feed and vertical tab) is a sentence boundary. &lt;code&gt;\b{sb}&lt;/code&gt; works with text designed for word-processors which wrap lines automatically for display, but hard-coded line boundaries are considered to be essentially the ends of text blocks (paragraphs really), and hence the ends of sententces. &lt;code&gt;\b{sb}&lt;/code&gt; doesn't do well with text containing embedded newlines, like the source text of the document you are reading. Such text needs to be preprocessed to get rid of the line separators before looking for sentence boundaries. Some people view this as a bug in the Unicode standard, and this behavior is quite subject to change in future Perl versions.</source>
          <target state="translated">이것은 유니 코드 &quot;문장 경계&quot;와 일치합니다. 자연어 문장을 파싱하는 데 도움이됩니다. 훌륭하지만 불완전한 결과를 제공합니다. 예를 들어, &quot;미스터 스미스&quot;는 두 문장이라고 생각합니다. 자세한 내용은 &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/에&lt;/a&gt; 있습니다. 또한 &lt;a href=&quot;#%5cR&quot;&gt;\ R&lt;/a&gt; (양식 공급 및 세로 탭 제외)과 일치하는 것은 문장 경계 라고 생각합니다 . &lt;code&gt;\b{sb}&lt;/code&gt; 는 자동으로 줄을 표시하여 표시하기 위해 워드 프로세서 용으로 설계된 텍스트와 함께 작동하지만 하드 코드 된 선 경계는 본질적으로 텍스트 블록의 끝 (실제 단락)으로 간주되므로 문장의 끝으로 간주됩니다. &lt;code&gt;\b{sb}&lt;/code&gt; 읽고있는 문서의 소스 텍스트와 같이 줄 바꿈이 포함 된 텍스트에는 적합하지 않습니다. 문장 경계를 찾기 전에 줄 구분 기호를 제거하려면 이러한 텍스트를 사전 처리해야합니다. 일부 사람들은 이것을 유니 코드 표준의 버그로보고 있으며,이 동작은 향후 Perl 버전에서 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cb6230dc355ad698d71f70d4c4922dccb9931e0" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Sentence Boundary&quot;. This is an aid to parsing natural language sentences. It gives good, but imperfect results. For example, it thinks that &quot;Mr. Smith&quot; is two sentences. More details are at &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/&lt;/a&gt;. Note also that it thinks that anything matching &lt;a href=&quot;#%5CR&quot;&gt;&quot;\R&quot;&lt;/a&gt; (except form feed and vertical tab) is a sentence boundary. &lt;code&gt;\b{sb}&lt;/code&gt; works with text designed for word-processors which wrap lines automatically for display, but hard-coded line boundaries are considered to be essentially the ends of text blocks (paragraphs really), and hence the ends of sentences. &lt;code&gt;\b{sb}&lt;/code&gt; doesn't do well with text containing embedded newlines, like the source text of the document you are reading. Such text needs to be preprocessed to get rid of the line separators before looking for sentence boundaries. Some people view this as a bug in the Unicode standard, and this behavior is quite subject to change in future Perl versions.</source>
          <target state="translated">이것은 유니 코드 &quot;문장 경계&quot;와 일치합니다. 이것은 자연어 문장을 구문 분석하는 데 도움이됩니다. 좋지만 불완전한 결과를 제공합니다. 예를 들어, &quot;Mr. Smith&quot;가 두 문장이라고 생각합니다. 자세한 내용은 &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/에&lt;/a&gt; 있습니다. 또한 &lt;a href=&quot;#%5CR&quot;&gt;&quot;\ R&quot;&lt;/a&gt; (폼 피드 및 수직 탭 제외)과 일치하는 것은 문장 경계 라고 생각합니다 . &lt;code&gt;\b{sb}&lt;/code&gt; 는 표시를 위해 자동으로 줄을 감싸는 워드 프로세서 용으로 설계된 텍스트와 함께 작동하지만 하드 코딩 된 줄 경계는 본질적으로 텍스트 블록의 끝 (실제로는 단락)이므로 문장의 끝으로 간주됩니다. &lt;code&gt;\b{sb}&lt;/code&gt; 읽고있는 문서의 소스 텍스트와 같이 새 줄이 포함 된 텍스트는 잘 작동하지 않습니다. 이러한 텍스트는 문장 경계를 찾기 전에 줄 구분 기호를 제거하기 위해 사전 처리되어야합니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 어떤 사람들은 이것을 유니 코드 표준의 버그로보고 있으며,이 동작은 향후 Perl 버전에서 상당히 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2811398b5c9cc7a492470e9d11bff95eac375ba9" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Word Boundary&quot;, but tailored to Perl expectations. This gives better (though not perfect) results for natural language processing than plain &lt;code&gt;\b&lt;/code&gt; (without braces) does. For example, it understands that apostrophes can be in the middle of words and that parentheses aren't (see the examples below). More details are at &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/&lt;/a&gt;.</source>
          <target state="translated">이것은 유니 코드 &quot;단어 경계&quot;와 일치하지만 Perl의 기대에 맞게 조정되었습니다. 이것은 일반 &lt;code&gt;\b&lt;/code&gt; (중괄호 없음) 보다 자연어 처리에 대해 더 나은 (완벽하지는 않지만) 결과를 제공합니다 . 예를 들어, 어포 스트로피는 단어 중간에있을 수 있고 괄호는 그렇지 않다는 것을 이해합니다 (아래 예제 참조). 자세한 내용은 &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;https://www.unicode.org/reports/tr29/에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="862d390cde50da1c3067a4f5bf13a23004164fc2" translate="yes" xml:space="preserve">
          <source>This matches a Unicode &quot;Word Boundary&quot;. This gives better (though not perfect) results for natural language processing than plain &lt;code&gt;\b&lt;/code&gt; (without braces) does. For example, it understands that apostrophes can be in the middle of words and that parentheses aren't (see the examples below). More details are at &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/&lt;/a&gt;.</source>
          <target state="translated">이것은 유니 코드 &quot;워드 경계&quot;와 일치합니다. 이것은 평범한 &lt;code&gt;\b&lt;/code&gt; (중괄호없이) 보다 자연 언어 처리에 대한 더 나은 (완벽하지는 않지만) 결과를 제공합니다 . 예를 들어, 아포스트로피는 단어 중간에있을 수 있으며 괄호는 그렇지 않다는 것을 이해합니다 (아래 예 참조). 자세한 내용은 &lt;a href=&quot;http://www.unicode.org/reports/tr29/&quot;&gt;http://www.unicode.org/reports/tr29/에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef47eed99ac1d083b3beb492e4f8913342391453" translate="yes" xml:space="preserve">
          <source>This matches according to the default Unicode Line Breaking Algorithm (&lt;a href=&quot;https://www.unicode.org/reports/tr14/&quot;&gt;https://www.unicode.org/reports/tr14/&lt;/a&gt;), as customized in that document (&lt;a href=&quot;https://www.unicode.org/reports/tr14/tr14-35.html#Example7&quot;&gt;Example 7 of revision 35&lt;/a&gt;) for better handling of numeric expressions.</source>
          <target state="translated">이는 더 나은 숫자 표현식 처리를 위해 해당 문서 ( &lt;a href=&quot;https://www.unicode.org/reports/tr14/tr14-35.html#Example7&quot;&gt;개정판 35의 예 7&lt;/a&gt; )에서 사용자 정의 된대로 기본 유니 코드 줄 바꿈 알고리즘 ( &lt;a href=&quot;https://www.unicode.org/reports/tr14/&quot;&gt;https://www.unicode.org/reports/tr14/&lt;/a&gt; ) 에 따라 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="dd6302d3bb19b988247051f1fbfe94d51caf4369" translate="yes" xml:space="preserve">
          <source>This matches all code points whose numeric value is one of 0, 1, 2, 3, 4, or 5. This particular example could instead have been written as</source>
          <target state="translated">이것은 숫자 값이 0, 1, 2, 3, 4 또는 5 중 하나 인 모든 코드 포인트와 일치합니다.이 특정 예제는 대신 다음과 같이 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46f9c4b6a0133a2ba4a4536268bb4388e6462d37" translate="yes" xml:space="preserve">
          <source>This matches any &lt;code&gt;\p{Alphabetic}&lt;/code&gt; or &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; character.</source>
          <target state="translated">이것은 &lt;code&gt;\p{Alphabetic}&lt;/code&gt; 또는 &lt;code&gt;\p{Decimal_Number}&lt;/code&gt; 문자 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="1368a197a87ba6ed14500f8908565c9ada6f62ff" translate="yes" xml:space="preserve">
          <source>This matches any assigned code point; that is, any code point whose &lt;a href=&quot;#General_Category&quot;&gt;general category&lt;/a&gt; is not &lt;code&gt;Unassigned&lt;/code&gt; (or equivalently, not &lt;code&gt;Cn&lt;/code&gt; ).</source>
          <target state="translated">할당 된 코드 포인트와 일치합니다. 즉, &lt;a href=&quot;#General_Category&quot;&gt;일반 범주&lt;/a&gt; 가 &lt;code&gt;Unassigned&lt;/code&gt; 되지 않은 (또는 &lt;code&gt;Cn&lt;/code&gt; 이 아닌) 코드 포인트입니다 .</target>
        </trans-unit>
        <trans-unit id="100bdeeeb5e6097e5b9781532670a8d8611e6b85" translate="yes" xml:space="preserve">
          <source>This matches any assigned code point; that is, any code point whose &lt;a href=&quot;#General_Category&quot;&gt;general category&lt;/a&gt; is not &lt;code&gt;Unassigned&lt;/code&gt; (or equivalently, not &lt;code&gt;Cn&lt;/code&gt;).</source>
          <target state="translated">이것은 할당 된 코드 포인트와 일치합니다. 즉, &lt;a href=&quot;#General_Category&quot;&gt;일반 범주&lt;/a&gt; 가 &lt;code&gt;Unassigned&lt;/code&gt; (또는 동등하게 &lt;code&gt;Cn&lt;/code&gt; 아님) 가 아닌 코드 포인트입니다 .</target>
        </trans-unit>
        <trans-unit id="a2970fcf592bf526b7624da46ffe2c2926bcdb66" translate="yes" xml:space="preserve">
          <source>This matches any character that is graphical or blank, except controls.</source>
          <target state="translated">컨트롤을 제외하고 그래픽이거나 공백 인 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9dcbf046b8bea0226e813051a826c67a230a6bfb" translate="yes" xml:space="preserve">
          <source>This matches any of the 128 characters in the US-ASCII character set, which is a subset of Unicode.</source>
          <target state="translated">이는 US-ASCII 문자 세트의 128 자 (유니 코드의 서브 세트)와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6f971eb914dae58555e5f55db125c34d663d6429" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. &lt;code&gt;\p{Any}&lt;/code&gt; .</source>
          <target state="translated">이것은 1_114_112 유니 코드 코드 포인트와 일치합니다. &lt;code&gt;\p{Any}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce7e09f2891fc7e1926bcdf025e41ca7e5796fc4" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. &lt;code&gt;\p{Any}&lt;/code&gt;.</source>
          <target state="translated">이것은 1_114_112 유니 코드 코드 포인트와 일치합니다. &lt;code&gt;\p{Any}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50e5a95f3a6d3f1afad03782326f2e0e7b9c9ed7" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. It is a synonym for &lt;code&gt;\p{Unicode}&lt;/code&gt; .</source>
          <target state="translated">이것은 1_114_112 유니 코드 코드 포인트와 일치합니다. &lt;code&gt;\p{Unicode}&lt;/code&gt; 와 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="29cf195e8abc4c2fda5508cb856c0619ed1c39b8" translate="yes" xml:space="preserve">
          <source>This matches any of the 1_114_112 Unicode code points. It is a synonym for &lt;code&gt;\p{Unicode}&lt;/code&gt;.</source>
          <target state="translated">이것은 1_114_112 유니 코드 코드 포인트와 일치합니다. &lt;code&gt;\p{Unicode}&lt;/code&gt; 의 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="1ddbc160eb4c94b6ef293222be013d55a26c3ebd" translate="yes" xml:space="preserve">
          <source>This matches digits that are in either the Thai or Laotian scripts.</source>
          <target state="translated">이것은 태국어 또는 라오스 어 스크립트에있는 숫자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="bed0a3d92b78eec58ff8b7c04af52fb9a269486e" translate="yes" xml:space="preserve">
          <source>This matches every possible code point. It is equivalent to &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt;. Unlike all the other non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if this is property is matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points&lt;/a&gt; below).</source>
          <target state="translated">가능한 모든 코드 포인트와 일치합니다. &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr/./s&lt;/a&gt;&lt;/code&gt; 와 같습니다 . 사용자 정의되지 않은 다른 모든 &lt;code&gt;\p{}&lt;/code&gt; 속성 일치 와 달리이 속성이 유니 코드가 아닌 코드 포인트와 일치하는 경우 경고가 생성되지 않습니다 ( 아래의 &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;유니 코드 코드 포인트를 넘어서&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="54223479a01eff97835bc0fc4d5646f6d53ac4e4" translate="yes" xml:space="preserve">
          <source>This matches every possible code point. It is equivalent to &lt;code&gt;qr/./s&lt;/code&gt;. Unlike all the other non-user-defined &lt;code&gt;\p{}&lt;/code&gt; property matches, no warning is ever generated if this is property is matched against a non-Unicode code point (see &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;&quot;Beyond Unicode code points&quot;&lt;/a&gt; below).</source>
          <target state="translated">이것은 가능한 모든 코드 포인트와 일치합니다. &lt;code&gt;qr/./s&lt;/code&gt; 와 동일합니다 . 다른 모든 비 사용자 정의 &lt;code&gt;\p{}&lt;/code&gt; 속성 일치 와 달리이 속성이 비 유니 코드 코드 포인트와 일치하는 경우 경고가 생성되지 않습니다 (아래의 &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;&quot;유니 코드 코드 포인트 이상&quot;&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="39f19d0a2349916b7981752a7104f9d5ef925fc8" translate="yes" xml:space="preserve">
          <source>This matches the English vowels plus the SPACE character.</source>
          <target state="translated">이것은 영어 모음에 SPACE 문자를 더한 것과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="e5af876b8e44759fbc1c5f4ebb39fe615bb29e7e" translate="yes" xml:space="preserve">
          <source>This matches the English vowels plus the SPACE character. All the other escapes accepted by normal bracketed character classes are accepted here as well; but unrecognized escapes that generate warnings in normal classes are fatal errors here.</source>
          <target state="translated">영어 모음과 SPACE 문자가 일치합니다. 일반적인 대괄호로 사용되는 다른 모든 이스케이프도 여기에서 허용됩니다. 그러나 정상적인 클래스에서 경고를 생성하는 인식 할 수없는 탈출은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="55be8f6854e7ce1e29dee30dacbad8368e941533" translate="yes" xml:space="preserve">
          <source>This may a variant of just &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;&quot;I cannot run external programs&quot;&lt;/a&gt;, or a deeper problem. Basically: you</source>
          <target state="translated">이것은 &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;&quot;외부 프로그램을 실행할 수 없습니다&quot;&lt;/a&gt; 의 변형 이거나 더 심각한 문제 일 수 있습니다. 기본적으로 : 당신</target>
        </trans-unit>
        <trans-unit id="6fe0bd3d52f9526a3bdbdf0fb7b2272dd4226b2a" translate="yes" xml:space="preserve">
          <source>This may a variant of just &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;I cannot run external programs&lt;/a&gt;, or a deeper problem. Basically: you</source>
          <target state="translated">이것은 &lt;a href=&quot;#I-cannot-run-external-programs&quot;&gt;외부 프로그램을 실행할 수 없거나&lt;/a&gt; 더 깊은 문제 의 변형 일 수 있습니다 . 기본적으로 : 당신</target>
        </trans-unit>
        <trans-unit id="3c2e6cadd45bf9050033dd0f02dee64c1cb36e02" translate="yes" xml:space="preserve">
          <source>This may also be a good time to ensure that your /etc/protocol file and either your /etc/resolv.conf or /etc/hosts files are in place. The IBM document that described such USS system setup issues was SC28-1890-07 &quot;OS/390 UNIX System Services Planning&quot;, in particular Chapter 6 on customizing the OE shell.</source>
          <target state="translated">또한 / etc / protocol 파일과 /etc/resolv.conf 또는 / etc / hosts 파일이 있는지 확인하는 것이 좋습니다. 이러한 USS 시스템 설정 문제를 설명하는 IBM 문서는 SC28-1890-07 &quot;OS / 390 UNIX 시스템 서비스 계획&quot;, 특히 OE 쉘 사용자 정의에 관한 6 장입니다.</target>
        </trans-unit>
        <trans-unit id="1206b674e03199df25ca78fd2210a65fd2a21ff2" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="translated">이것은 또한 특수 값 &lt;code&gt;none&lt;/code&gt; 으로 설정 될 수 있으며 ,이 경우 C &amp;lt;&amp;gt; 텍스트 주위에 따옴표가 추가되지 않습니다 (그러나 글꼴은 여전히 ​​troff 출력으로 변경됩니다).</target>
        </trans-unit>
        <trans-unit id="345f8ac7fec5019dbde30571fee3e63e792fb3cf" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt; , in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="translated">이것은 또한 특수 값 &lt;code&gt;none&lt;/code&gt; 으로 설정 될 수 있으며 ,이 경우 C &amp;lt;&amp;gt; 텍스트 주위에 따옴표가 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="14fa777a070fca8732a6c3aaf496e4c4e9175f3e" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt;, in which case no quote marks are added around C&amp;lt;&amp;gt; text (but the font is still changed for troff output).</source>
          <target state="translated">이것은 또한 특수 값 &lt;code&gt;none&lt;/code&gt; 으로 설정 될 수 있습니다 .이 경우 C &amp;lt;&amp;gt; 텍스트 주위에 따옴표가 추가되지 않습니다 (그러나 troff 출력의 경우 글꼴은 여전히 ​​변경됨).</target>
        </trans-unit>
        <trans-unit id="61345d4379070080abacfba137fca759d14d397c" translate="yes" xml:space="preserve">
          <source>This may also be set to the special value &lt;code&gt;none&lt;/code&gt;, in which case no quote marks are added around C&amp;lt;&amp;gt; text.</source>
          <target state="translated">특수 값 &lt;code&gt;none&lt;/code&gt; 으로 설정할 수도 있습니다 .이 경우 C &amp;lt;&amp;gt; 텍스트 주위에 따옴표가 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a4b045aef9d01569a459e4507e2bf0dbcc4d078d" translate="yes" xml:space="preserve">
          <source>This may be less obvious in other situations, such as &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt;, for instance when grepping through a list of weakened references to objects that may have been destroyed already:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep()&lt;/a&gt;&lt;/code&gt; 과 같은 다른 상황에서는 이미 소멸되었을 수있는 객체에 대한 약한 참조 목록을 grepping 할 때이 점이 명확하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aadddde396ec6250eb650b31094a85752ac5de5f" translate="yes" xml:space="preserve">
          <source>This may be less obvious in other situations, such as &lt;code&gt;grep()&lt;/code&gt;, for instance when grepping through a list of weakened references to objects that may have been destroyed already:</source>
          <target state="translated">이것은 &lt;code&gt;grep()&lt;/code&gt; 와 같은 다른 상황에서는 덜 분명 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b6b611a35aea5e6cbfaa34dfad89779e54d15a6" translate="yes" xml:space="preserve">
          <source>This may be useful if other modules expect this module to be</source>
          <target state="translated">다른 모듈이이 모듈을 기대할 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb1bd20d64f2ccdce3f2cc8fcef954e7c80b5a33" translate="yes" xml:space="preserve">
          <source>This may be useful since, say, types which are &lt;code&gt;typedef&lt;/code&gt; -equivalent to integers may represent OS-related handles, and one may want to work with these handles in OO-way, as in &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; . Use &lt;code&gt;-o .&lt;/code&gt; if you want to handle all the &lt;code&gt;typedef&lt;/code&gt; ed types as opaque types.</source>
          <target state="translated">예 를 들어 정수와 &lt;code&gt;typedef&lt;/code&gt; 에 해당 하는 유형 은 OS 관련 핸들을 나타낼 수 있고 &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; 과 같이 OO-way에서 이러한 핸들로 작업하기를 원할 수 있기 때문에 유용 할 수 있습니다 . &lt;code&gt;-o .&lt;/code&gt; 사용하십시오 . 모든 &lt;code&gt;typedef&lt;/code&gt; ed 유형을 불투명 유형 으로 처리하려는 경우 .</target>
        </trans-unit>
        <trans-unit id="bb030fdbfde4cf4510e91d4dc3720be63df3b4c9" translate="yes" xml:space="preserve">
          <source>This may be useful since, say, types which are &lt;code&gt;typedef&lt;/code&gt;-equivalent to integers may represent OS-related handles, and one may want to work with these handles in OO-way, as in &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt;. Use &lt;code&gt;-o .&lt;/code&gt; if you want to handle all the &lt;code&gt;typedef&lt;/code&gt;ed types as opaque types.</source>
          <target state="translated">이이 유형 말하자면, 이후 유용 할 수 있습니다 &lt;code&gt;typedef&lt;/code&gt; 정수로 -equivalent가 OS 관련 핸들을 나타낼 수 있으며, 하나 같이 OO-방법으로 이러한 핸들 작업 할 수 있습니다 &lt;code&gt;$handle-&amp;gt;do_something()&lt;/code&gt; . &lt;code&gt;-o .&lt;/code&gt; 사용하십시오 . 모든 &lt;code&gt;typedef&lt;/code&gt; ed 유형을 불투명 유형 으로 처리하려는 경우 .</target>
        </trans-unit>
        <trans-unit id="219180c7e012f10d4f7a83d42d7e8f2690484f40" translate="yes" xml:space="preserve">
          <source>This may break in two ways:</source>
          <target state="translated">두 가지 방법으로 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c894611388eb78ec067fed71d079c9e5816ca7b5" translate="yes" xml:space="preserve">
          <source>This may cause problems:</source>
          <target state="translated">이로 인해 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b07568535355dc79492449b01ec4948cfdc2343" translate="yes" xml:space="preserve">
          <source>This may expect the C</source>
          <target state="translated">이것은 C를 기대할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="03f2543e21cbd92a7ee1ca79827f8f9611eefa56" translate="yes" xml:space="preserve">
          <source>This may later be extended to include other information, so be careful with pattern-matching on the results.</source>
          <target state="translated">나중에 다른 정보를 포함하도록 확장 될 수 있으므로 결과에서 패턴 일치에주의하십시오.</target>
        </trans-unit>
        <trans-unit id="e21dadcda575196402392ef6ce13a8923c3356bf" translate="yes" xml:space="preserve">
          <source>This may lead to problems later in case the socket is accessed via the &quot;usual&quot; file-system calls using the &quot;initial&quot; name.</source>
          <target state="translated">&quot;초기&quot;이름을 사용하여 &quot;일반&quot;파일 시스템 호출을 통해 소켓에 액세스하는 경우 나중에 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6110636ef5b993e8ba32881ebb3b6bb734669e0b" translate="yes" xml:space="preserve">
          <source>This may take a couple of hours on 1GHz processor (when run the first time). And this should not be necessarily a smooth procedure. Some modules may not specify required dependencies, so one may need to repeat this procedure several times until the results stabilize.</source>
          <target state="translated">1GHz 프로세서에서 처음 실행하는 데 몇 시간이 걸릴 수 있습니다. 그리고 이것이 반드시 매끄러운 절차는 아닙니다. 일부 모듈은 필요한 종속성을 지정하지 않을 수 있으므로 결과가 안정화 될 때까지이 절차를 여러 번 반복해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="21e8b83f4a4668675b959f09a3dddc3f913b92a2" translate="yes" xml:space="preserve">
          <source>This means integer values like 1.01E2 or even 1000E-2 are also accepted. Non-integer values result in NaN.</source>
          <target state="translated">이는 1.01E2 또는 1000E-2와 같은 정수 값도 허용됨을 의미합니다. 정수가 아닌 값은 NaN이됩니다.</target>
        </trans-unit>
        <trans-unit id="0df399dd4c0ebd437b2b092068503ec57072d7a4" translate="yes" xml:space="preserve">
          <source>This means somewhere a routine got a BigFloat/Lite but expected a BigInt (or vice versa) and the upgrade/downgrad path was missing. This is a bug, please report it so that we can fix it.</source>
          <target state="translated">이것은 루틴이 BigFloat / Lite를 얻었지만 BigInt (또는 그 반대)를 예상하고 업그레이드 / 다운 그레이드 경로가 누락 된 곳을 의미합니다. 이것은 버그입니다. 문제를 해결하기 위해보고하십시오.</target>
        </trans-unit>
        <trans-unit id="14a58ee32b8ae7bdc388a529d03ef7e5871a7f4e" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;catdir()&lt;/code&gt; is called only when there are two or more arguments, as one might expect.</source>
          <target state="translated">이는 &lt;code&gt;catdir()&lt;/code&gt; 이 예상 한대로 둘 이상의 인수가있는 경우에만 호출 됨을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="578c842326a0346c93813339f663f40295cced47" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;prop_invmap&lt;/code&gt; returns a 4 element list. For example,</source>
          <target state="translated">이는 &lt;code&gt;prop_invmap&lt;/code&gt; 이 4 개의 요소 목록을 반환 함을 의미 합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="38b6532eaf6e68ec76d8a337e1c024ccfeab03a8" translate="yes" xml:space="preserve">
          <source>This means that arithmetic involving only string values or string literals will be performed using Perl's built-in operators.</source>
          <target state="translated">이는 문자열 값 또는 문자열 리터럴 만 포함하는 산술이 Perl의 내장 연산자를 사용하여 수행됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="01006b71ced49944419d9cf9ecdab2df41a8f161" translate="yes" xml:space="preserve">
          <source>This means that if a developer only needs a module for the BAR standard, they should not be forced to install libraries for FOO as well.</source>
          <target state="translated">즉, 개발자가 BAR 표준 용 모듈 만 필요한 경우 FOO 용 라이브러리를 강제로 설치해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a939b578ee66e30d68a1cb74f87d0079e5aa7b9c" translate="yes" xml:space="preserve">
          <source>This means that it short-circuits: the right expression is evaluated only if the left expression is false. Due to its precedence, you must be careful to avoid using it as replacement for the &lt;code&gt;||&lt;/code&gt; operator. It usually works out better for flow control than in assignments:</source>
          <target state="translated">이것은 단락을 의미합니다. 올바른 표현은 왼쪽 표현이 거짓 인 경우에만 평가됩니다. 우선 순위 때문에 &lt;code&gt;||&lt;/code&gt; 의 대체로 사용하지 않도록주의해야합니다. 운영자. 일반적으로 할당보다 흐름 제어에 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6b325861f3ab382f335c9341221acf9229196786" translate="yes" xml:space="preserve">
          <source>This means that once RawInflate is finished &lt;code&gt;$fh&lt;/code&gt; will be left at the byte directly after the compressed data stream.</source>
          <target state="translated">즉, RawInflate가 완료되면 &lt;code&gt;$fh&lt;/code&gt; 가 압축 된 데이터 스트림 바로 뒤의 바이트에 남게됩니다.</target>
        </trans-unit>
        <trans-unit id="be9154072eb271aa42c51fcc713d07f839133a3a" translate="yes" xml:space="preserve">
          <source>This means that the code points from 0 to 0x2F do not represent decimal digits; the code point 0x30 (DIGIT ZERO) represents 0; code point 0x31, (DIGIT ONE), represents 0+1-0 = 1; ... code point 0x39, (DIGIT NINE), represents 0+9-0 = 9; ... code points 0x3A through 0x65F do not represent decimal digits; 0x660 (ARABIC-INDIC DIGIT ZERO), represents 0; ... 0x07C1 (NKO DIGIT ONE), represents 0+1-0 = 1 ...</source>
          <target state="translated">이것은 0에서 0x2F까지의 코드 포인트가 10 진수를 나타내지 않음을 의미합니다. 코드 포인트 0x30 (DIGIT ZERO)은 0을 나타내고; 코드 포인트 0x31 (DIGIT ONE)은 0 + 1-0 = 1을 나타내고; ... 코드 포인트 0x39 (DIGIT NINE)는 0 + 9-0 = 9를 나타냅니다. ... 코드 포인트 0x3A ~ 0x65F는 십진수를 나타내지 않습니다. 0x660 (ARABIC-INDIC DIGIT ZERO)은 0을 나타내고; ... 0x07C1 (NKO DIGIT ONE)은 0 + 1-0 = 1을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="53a7571a93760445ebdaebf443e990e621523e20" translate="yes" xml:space="preserve">
          <source>This means that the example in the synopsis could be rewritten more simply as:</source>
          <target state="translated">이것은 시놉시스의 예제가 다음과 같이 더 간단하게 다시 쓰여질 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a1f3ea2c657f7b7f7d19db3a4421f880ee25efe3" translate="yes" xml:space="preserve">
          <source>This means that the space in the middle of the visible link text must not be broken across lines. In other words, it's the same as this:</source>
          <target state="translated">즉, 보이는 링크 텍스트 중간에 공백이 줄을 넘지 않아야합니다. 다시 말해, 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="64c7de2c5fffc581047d71755a716f6efa16c586" translate="yes" xml:space="preserve">
          <source>This means that the words in</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="f1569c4431f8fc6543e767edacb7a758da5a6960" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">때이 방법 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; 효과에있다가, &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 당신 만의 어휘 범위 내에서, 패키지 이름으로 자격을하지 않고 패키지 변수를 사용할 수 있습니다 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 선언. 이것은 심지어 같은 진술 내에서도 즉시 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="f586cceadb03a1ba8357cc824f5f5d4e8015da6f" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; is in effect, &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">때이 방법 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt; strict 'vars'&lt;/code&gt; 효과에있다가, &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 당신 만의 어휘 범위 내에서, 패키지 이름으로 자격을하지 않고 패키지 변수를 사용할 수 있습니다 &lt;code&gt;&lt;a href=&quot;our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 선언. 이것은 심지어 같은 진술 내에서도 즉시 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="284eb118660ae660f27c03fcc27710a4366c9a03" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;use strict 'vars'&lt;/code&gt; is in effect, &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; lets you use a package variable without qualifying it with the package name, but only within the lexical scope of the &lt;a href=&quot;#our-VARLIST&quot;&gt;&lt;code&gt;our&lt;/code&gt;&lt;/a&gt; declaration. This applies immediately--even within the same statement.</source>
          <target state="translated">때이 방법 &lt;code&gt;use strict 'vars'&lt;/code&gt; 효과에있다가, &lt;a href=&quot;#our-VARLIST&quot;&gt; &lt;code&gt;our&lt;/code&gt; &lt;/a&gt; 당신 만의 어휘 범위 내에서, 패키지 이름으로 자격을하지 않고 패키지 변수를 사용할 수 있습니다 &lt;a href=&quot;#our-VARLIST&quot;&gt; &lt;code&gt;our&lt;/code&gt; &lt;/a&gt; 선언. 이는 동일한 진술 내에서도 즉시 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="b81785772e2cebea14c023690b3e80231bc941d4" translate="yes" xml:space="preserve">
          <source>This means that you can embed Perl code in your typemap (C) code using constructs such as &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; . A common use case is to generate error messages that refer to the true function name even when using the ALIAS XS feature:</source>
          <target state="translated">이는 &lt;code&gt;${ perl code that evaluates to &lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; reference here }&lt;/code&gt; 참조로 평가 되는 $ {perl code } 와 같은 구문을 사용하여 typemap (C) 코드에 Perl 코드를 포함시킬 수 있음을 의미합니다 . 일반적인 사용 사례는 ALIAS XS 기능을 사용할 때도 실제 기능 이름을 나타내는 오류 메시지를 생성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6159f11ee36a959a1c616223b9451cb1accb09f1" translate="yes" xml:space="preserve">
          <source>This means that you can embed Perl code in your typemap (C) code using constructs such as &lt;code&gt;${ perl code that evaluates to scalar reference here }&lt;/code&gt;. A common use case is to generate error messages that refer to the true function name even when using the ALIAS XS feature:</source>
          <target state="translated">이는 &lt;code&gt;${ perl code that evaluates to scalar reference here }&lt;/code&gt; 되는 $ {perl 코드} 와 같은 구문을 사용하여 타입 맵 (C) 코드에 Perl 코드를 임베드 할 수 있음을 의미합니다 . 일반적인 사용 사례는 ALIAS XS 기능을 사용하는 경우에도 실제 함수 이름을 참조하는 오류 메시지를 생성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fae397e13ee74537dfbe00fc3647b75575531d38" translate="yes" xml:space="preserve">
          <source>This means that you can pass back or save away references to lexical variables, whereas to return a pointer to a C auto is a grave error. It also gives us a way to simulate C's function statics. Here's a mechanism for giving a function private variables with both lexical scoping and a static lifetime. If you do want to create something like C's static variables, just enclose the whole function in an extra block, and put the static variable outside the function but in the block.</source>
          <target state="translated">이는 어휘 변수에 대한 참조를 다시 전달하거나 저장할 수있는 반면 C auto에 대한 포인터를 리턴하는 것은 심각한 오류입니다. 또한 C의 함수 정적을 시뮬레이트하는 방법도 제공합니다. 다음은 어휘 범위와 정적 수명을 가진 함수 전용 변수를 제공하는 메커니즘입니다. C의 정적 변수와 같은 것을 만들려면 전체 함수를 여분의 블록으로 묶고 정적 변수를 함수 외부의 블록에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="ba95400be83f3e213b12cd9a0fd5821a87880672" translate="yes" xml:space="preserve">
          <source>This means that your locale settings had &lt;code&gt;LC_ALL&lt;/code&gt; set to &quot;En_US&quot; and LANG exists but has no value. Perl tried to believe you but could not. Instead, Perl gave up and fell back to the &quot;C&quot; locale, the default locale that is supposed to work no matter what. (On Windows, it first tries falling back to the system default locale.) This usually means your locale settings were wrong, they mention locales your system has never heard of, or the locale installation in your system has problems (for example, some system files are broken or missing). There are quick and temporary fixes to these problems, as well as more thorough and lasting fixes.</source>
          <target state="translated">이는 로케일 설정에 &lt;code&gt;LC_ALL&lt;/code&gt; 이 &quot;En_US&quot;로 설정되었고 LANG가 존재하지만 값이 없음을 의미합니다. 펄은 당신을 믿으려고했지만 실패했습니다. 대신, Perl은 포기하고 &quot;C&quot;로케일로 넘어갔습니다. 기본 로케일은 무엇이든 상관 없습니다. (Windows에서는 먼저 시스템 기본 로케일로 돌아 가려고 시도합니다.) 이는 일반적으로 로케일 설정이 잘못되었거나 시스템에서 들어 본 적이없는 로케일을 언급하거나 시스템의 로케일 설치에 문제점이 있음을 의미합니다 (예 : 일부 시스템). 파일이 손상되었거나 누락되었습니다). 이러한 문제에 대한 신속하고 임시적인 수정뿐만 아니라보다 철저하고 지속적인 수정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="935bdf240cb07ad1d6c61c4ce332cb8c8c8bea3f" translate="yes" xml:space="preserve">
          <source>This means the hook can be inherited like any other method, and that</source>
          <target state="translated">즉, 후크는 다른 방법과 마찬가지로 상속 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2829080b86855df25144fdad5ccaac91d3e22b76" translate="yes" xml:space="preserve">
          <source>This means the same thing as the above &quot;=begin html&quot; ... &quot;=end html&quot; region.</source>
          <target state="translated">이것은 위의 &quot;= begin html&quot;... &quot;= end html&quot;영역과 같은 의미입니다.</target>
        </trans-unit>
        <trans-unit id="44c698371a2bc8c8f85a78f7834202f417a26f2b" translate="yes" xml:space="preserve">
          <source>This means you would have to be very careful of the load order:</source>
          <target state="translated">이는로드 순서에 매우주의해야한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3337abd3921fdbd49cbcb7fb32155c6404621f35" translate="yes" xml:space="preserve">
          <source>This means your tests won't fail on MacOS. This means fewer emails from MacPerl users telling you about failing tests that you know will never work. You've got to be careful with skip tests. These are for tests which don't work and</source>
          <target state="translated">즉, MacOS에서 테스트가 실패하지 않습니다. 이는 MacPerl 사용자가 테스트 실패에 대해 알려주는 이메일이 적다는 것을 의미합니다. 스킵 테스트에주의해야합니다. 작동하지 않는 테스트 용입니다.</target>
        </trans-unit>
        <trans-unit id="cff2ec52af1291aa43e3a1c0cb12356c3eeef13f" translate="yes" xml:space="preserve">
          <source>This member is of type &lt;code&gt;Perl_cpeep_t&lt;/code&gt; , which expands to &lt;code&gt;void
(*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . If it is set, this function will be called from &lt;code&gt;Perl_rpeep&lt;/code&gt; when ops of this type are encountered by the peephole optimizer.</source>
          <target state="translated">이 멤버 형인 &lt;code&gt;Perl_cpeep_t&lt;/code&gt; 로 확장, &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . 이 기능이 설정되면이 기능은 들여다 보는 구멍 최적화 장치 에서 &lt;code&gt;Perl_rpeep&lt;/code&gt; 될 때 Perl_rpeep 에서 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="db36691e48e2c67d2ea0f23d3b7c02ae12b88783" translate="yes" xml:space="preserve">
          <source>This member is of type &lt;code&gt;Perl_cpeep_t&lt;/code&gt;, which expands to &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt;. If it is set, this function will be called from &lt;code&gt;Perl_rpeep&lt;/code&gt; when ops of this type are encountered by the peephole optimizer.</source>
          <target state="translated">이 멤버 형인 &lt;code&gt;Perl_cpeep_t&lt;/code&gt; 로 확장, &lt;code&gt;void (*Perl_cpeep_t)(aTHX_ OP *o, OP *oldop)&lt;/code&gt; . 설정되어있는 경우이 함수는 &lt;code&gt;Perl_rpeep&lt;/code&gt; 가이 유형의 작업을 만날 때 Perl_rpeep 에서 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="7a717feb83162a52d0b22449b1b2a628cde73cab" translate="yes" xml:space="preserve">
          <source>This merge strategy will try to pick the appropriate predefined strategy based on what element type. Array refs will try to use the &lt;code&gt;set_addition&lt;/code&gt; strategy, Hash refs will try to use the &lt;code&gt;uniq_map&lt;/code&gt; strategy, and everything else will try the &lt;code&gt;identical&lt;/code&gt; strategy.</source>
          <target state="translated">이 병합 전략은 요소 유형에 따라 사전 정의 된 적절한 전략을 선택하려고합니다. 배열 참조는 &lt;code&gt;set_addition&lt;/code&gt; 전략 을 사용하고 해시 참조는 &lt;code&gt;uniq_map&lt;/code&gt; 전략 을 사용하며 다른 모든 항목은 &lt;code&gt;identical&lt;/code&gt; 전략을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4f15c1dce331d08d1c4dfe4e281cc0a0a4b34f0a" translate="yes" xml:space="preserve">
          <source>This message can be seen quite often with DB_File on systems with &quot;hard&quot; dynamic linking, like &lt;code&gt;AIX&lt;/code&gt; and &lt;code&gt;OS/2&lt;/code&gt; . It is a bug of &lt;code&gt;Berkeley DB&lt;/code&gt; which is left unnoticed if &lt;code&gt;DB&lt;/code&gt; uses</source>
          <target state="translated">이 메시지는 &lt;code&gt;AIX&lt;/code&gt; 및 &lt;code&gt;OS/2&lt;/code&gt; 와 같이 &quot;하드&quot;동적 링크가있는 시스템의 DB_File에서 자주 볼 수 있습니다 . &lt;code&gt;Berkeley DB&lt;/code&gt; 의 버그로 &lt;code&gt;DB&lt;/code&gt; 가 사용하는 경우 눈에 띄지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dd9cc0488fe9dc37730174b23cf738f2f87b5cde" translate="yes" xml:space="preserve">
          <source>This message can be seen quite often with DB_File on systems with &quot;hard&quot; dynamic linking, like &lt;code&gt;AIX&lt;/code&gt; and &lt;code&gt;OS/2&lt;/code&gt;. It is a bug of &lt;code&gt;Berkeley DB&lt;/code&gt; which is left unnoticed if &lt;code&gt;DB&lt;/code&gt; uses</source>
          <target state="translated">이 메시지는 &lt;code&gt;AIX&lt;/code&gt; 및 &lt;code&gt;OS/2&lt;/code&gt; 와 같이 &quot;하드&quot;동적 링크가있는 시스템의 DB_File에서 자주 볼 수 있습니다 . &lt;code&gt;DB&lt;/code&gt; 가 사용 하면 눈에 띄지 않는 &lt;code&gt;Berkeley DB&lt;/code&gt; 의 버그입니다.</target>
        </trans-unit>
        <trans-unit id="ee2510b2403247fa109d55b63b7f2961e33ab09a" translate="yes" xml:space="preserve">
          <source>This message indicates a bug either in the Perl core or in XS code. Such code was trying to find out if a character, allegedly stored internally encoded as UTF-8, was of a given type, such as being punctuation or a digit. But the character was not encoded in legal UTF-8. The &lt;code&gt;%s&lt;/code&gt; is replaced by a string that can be used by knowledgeable people to determine what the type being checked against was.</source>
          <target state="translated">이 메시지는 Perl 코어 또는 XS 코드의 버그를 나타냅니다. 이러한 코드는 내부적으로 UTF-8로 인코딩 된 것으로 알려진 문자가 구두점이나 숫자와 같은 지정된 유형인지 확인하려고했습니다. 그러나 문자는 합법적 인 UTF-8로 인코딩되지 않았습니다. &lt;code&gt;%s&lt;/code&gt; 유형에 대해 검사했다되고 결정하는 지식이있는 사람들에 의해 사용될 수있는 문자열로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="23eb60fb126cb22151d73766a234b7a419df8dc7" translate="yes" xml:space="preserve">
          <source>This message is output once each time a bad locale is switched into within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , or on the first possibly-affected operation if the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; inherits a bad one. It is not raised for any operations from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="translated">이 메시지는 잘못된 로케일이 범위 내에서 전환 될 때마다 한 번씩 출력됩니다. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 에서 또는 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 이 잘못된 것을 상속하는경우 영향을받는 첫 번째 조작 됩니다 . &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; 모듈의조작에 대해서는 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="53334537f396c17eb5e0a1eb97007585d5a6b393" translate="yes" xml:space="preserve">
          <source>This message is output once each time a bad locale is switched into within the scope of &lt;code&gt;use locale&lt;/code&gt;, or on the first possibly-affected operation if the &lt;code&gt;use locale&lt;/code&gt; inherits a bad one. It is not raised for any operations from the &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; module.</source>
          <target state="translated">이 메시지는 잘못된 로케일이 &lt;code&gt;use locale&lt;/code&gt; 범위 내로 전환 될 때마다 한 번 출력 되거나 &lt;code&gt;use locale&lt;/code&gt; 이 잘못된 로케일을 상속하는 경우 영향을받을 수있는 첫 번째 작업에서 출력됩니다 . &lt;a href=&quot;posix&quot;&gt;POSIX&lt;/a&gt; 모듈의 작업에 대해서는 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9f1e56024310d1748ef48e25b309befac60c3c39" translate="yes" xml:space="preserve">
          <source>This message is suppressed (unless it has been made fatal) if it is immaterial to the results of the match if the code point is Unicode or not. For example, the property &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; only can match the 22 characters &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; , so obviously all other code points, Unicode or not, won't match it. (And &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; will match every code point except these 22.)</source>
          <target state="translated">코드 포인트가 유니 코드인지 여부에 따라 일치 결과에 중요하지 않은 경우이 메시지는 표시되지 않습니다 (치명적이지 않은 경우 제외). 예를 들어 &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; 은 22 자 &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; 만 일치 할 수 있으므로 다른 모든 코드 포인트 (유니 코드 여부에 관계없이)는 일치하지 않습니다. (그리고 &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; 는이 22를 제외한 모든 코드 포인트와 일치합니다.)</target>
        </trans-unit>
        <trans-unit id="21e762ad2efe9f1fd68a6114f57d56c551081580" translate="yes" xml:space="preserve">
          <source>This message is suppressed (unless it has been made fatal) if it is immaterial to the results of the match if the code point is Unicode or not. For example, the property &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; only can match the 22 characters &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt;, so obviously all other code points, Unicode or not, won't match it. (And &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; will match every code point except these 22.)</source>
          <target state="translated">이 메시지는 코드 포인트가 유니 코드이든 아니든 일치 결과에 중요하지 않은 경우 표시되지 않습니다 (치명적이지 않은 경우). 예를 들어 &lt;code&gt;\p{ASCII_Hex_Digit}&lt;/code&gt; 속성 은 22 자 &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; 와만 일치 할 수 있으므로 유니 코드 여부에 관계없이 다른 모든 코드 포인트는 일치하지 않습니다. (그리고 &lt;code&gt;\P{ASCII_Hex_Digit}&lt;/code&gt; 는이 22 개를 제외한 모든 코드 포인트와 일치합니다.)</target>
        </trans-unit>
        <trans-unit id="7bb0745c94a8675163fb7cf1b6b4c0dfe9dfc2a4" translate="yes" xml:space="preserve">
          <source>This method (by having it return the name of a language-tag that has an existing language class) can be used for making sure that &lt;code&gt;get_handle&lt;/code&gt; will always manage to construct a language handle (assuming your language classes are in an appropriate @INC directory). Or you can use the next method:</source>
          <target state="translated">이 메소드 (기존 언어 클래스가있는 언어 태그의 이름을 리턴 함)를 사용하여 &lt;code&gt;get_handle&lt;/code&gt; 이 항상 언어 핸들을 구성하도록 관리 할 수 ​​있습니다 (언어 클래스가 적절한 @INC 디렉토리에 있다고 가정). . 또는 다음 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43b19e8a9632f033ee0217cf824970a6266507f4" translate="yes" xml:space="preserve">
          <source>This method &lt;b&gt;only&lt;/b&gt; recurses into hashes that are referenced by another hash. Thus a Hash of Hashes (HoH) will all be restricted, but a Hash of Arrays of Hashes (HoAoH) will only have the top hash restricted.</source>
          <target state="translated">이 메소드 는 다른 해시가 참조하는 해시 &lt;b&gt;로만&lt;/b&gt; 반복됩니다. 따라서 해시 해시 (HoH)는 모두 제한되지만 해시 어레이 해시 (HoAoH)는 최상위 해시 만 제한합니다.</target>
        </trans-unit>
        <trans-unit id="2a10494b333351ed900869ddfdd97f2e586a9270" translate="yes" xml:space="preserve">
          <source>This method adds all the requirements in the given CPAN::Meta::Requirements object to the requirements object on which it was called. If there are any conflicts, an exception is thrown.</source>
          <target state="translated">이 메서드는 지정된 CPAN :: Meta :: Requirements 개체의 모든 요구 사항을 호출 된 요구 사항 개체에 추가합니다. 충돌이 있으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a9adaf0f299fbd1e9f3a618dc3103eaac097e023" translate="yes" xml:space="preserve">
          <source>This method allows you declare all subsequent tests as TODO tests, up until the &lt;code&gt;todo_end&lt;/code&gt; method has been called.</source>
          <target state="translated">이 메소드를 사용하면 &lt;code&gt;todo_end&lt;/code&gt; 메소드가 호출 될 때까지 모든 후속 테스트를 TODO 테스트로 선언 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="730814a3d72347a8011b0b6b58b63dc1cbc1cb75" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; when compressing.</source>
          <target state="translated">이 메소드는 항상 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 압축 할 때 undef를.</target>
        </trans-unit>
        <trans-unit id="335f17051fdb64efb794e2ddfe5ed9008c1e1a8a" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;undef&lt;/code&gt; when compressing.</source>
          <target state="translated">이 메서드는 압축 할 때 항상 &lt;code&gt;undef&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6afef23ef81e88b5f94163ca10a11464e31ea48f" translate="yes" xml:space="preserve">
          <source>This method appends the given text or parse-tree to the current parse-tree. If the last item on the parse-tree is text and the argument is also text, then the text is appended to the last item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">이 메소드는 지정된 텍스트 또는 구문 분석 트리를 현재 구문 분석 트리에 추가합니다. 구문 분석 트리의 마지막 항목이 텍스트이고 인수도 텍스트 인 경우 텍스트는 마지막 항목에 추가됩니다 (별도의 문자열로 추가되지 않음). 그렇지 않으면 인수가 새 문자열 또는 구문 분석 트리로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="ea9b54b0560b3ed55c0cd396158f6152d9f5e42b" translate="yes" xml:space="preserve">
          <source>This method behaves like &lt;code&gt;accept_targets_as_text&lt;/code&gt; , but also marks the region as one whose content should be emitted literally, without HTML entity escaping or wrapping in a &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">이 메소드는 &lt;code&gt;accept_targets_as_text&lt;/code&gt; 와 같이 작동 하지만 HTML 엔티티를 이스케이프하거나 &lt;code&gt;div&lt;/code&gt; 로 줄 바꿈하지 않고 해당 영역을 문자 그대로 방출 해야하는 영역으로 표시합니다. 요소로 됩니다.</target>
        </trans-unit>
        <trans-unit id="71bb1e0efdfc6beccfb10261573a5eab7a2b454b" translate="yes" xml:space="preserve">
          <source>This method behaves like &lt;code&gt;accept_targets_as_text&lt;/code&gt;, but also marks the region as one whose content should be emitted literally, without HTML entity escaping or wrapping in a &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">이 메소드는 &lt;code&gt;accept_targets_as_text&lt;/code&gt; 처럼 작동 하지만 HTML 엔티티가 &lt;code&gt;div&lt;/code&gt; 요소 에서 이스케이프되거나 래핑되지 않고 내용이 문자 그대로 방출되어야하는 영역으로 영역을 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="366bdf6f4cd4331574bef09ad73e8fc1d9c85442" translate="yes" xml:space="preserve">
          <source>This method can also be called as a</source>
          <target state="translated">이 방법은</target>
        </trans-unit>
        <trans-unit id="715fe7c265d92fe58819e384722c797c228ac231" translate="yes" xml:space="preserve">
          <source>This method can be used to (re)parse a (new) hyperlink, i.e. the contents of a &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; sequence. The result is stored in the current object. Warnings are stored in the &lt;b&gt;warnings&lt;/b&gt; property. E.g. sections like &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; are deprecated, as they do not point to Perl documents. &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; is wrong as well, the manpage section can simply be dropped.</source>
          <target state="translated">이 방법은 (새로운) 하이퍼 링크, 즉 &lt;code&gt;L&amp;lt;...&amp;gt;&lt;/code&gt; 시퀀스 의 내용을 (재) 분석하는데 사용될 수있다 . 결과는 현재 객체에 저장됩니다. 경고는 &lt;b&gt;경고&lt;/b&gt; 속성에 저장됩니다 . 예를 들어 &lt;code&gt;L&amp;lt;open(2)&amp;gt;&lt;/code&gt; 와 같은 섹션은 Perl 문서를 가리 키지 않으므로 더 이상 사용되지 않습니다. &lt;code&gt;L&amp;lt;DBI::foo(3p)&amp;gt;&lt;/code&gt; 도 잘못되었습니다. 맨 페이지 섹션을 간단히 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1f35fb67080240d23f2eac011ae3670c8591965" translate="yes" xml:space="preserve">
          <source>This method can be used to attempt to recover good data from a compressed data stream that is partially corrupt. It scans &lt;code&gt;$input&lt;/code&gt; until it reaches either a</source>
          <target state="translated">이 방법을 사용하면 부분적으로 손상된 압축 된 데이터 스트림에서 올바른 데이터를 복구 할 수 있습니다. 그것은 &lt;code&gt;$input&lt;/code&gt; 스캔 하나에 도달 할 때까지 합니다.</target>
        </trans-unit>
        <trans-unit id="90ddd0ac6657449db229f14a03b758f7e485db52" translate="yes" xml:space="preserve">
          <source>This method can be used to wait for a transfer to complete between a passive server and a non-passive server. The method should be called on the passive server with the &lt;code&gt;Net::FTP&lt;/code&gt; object for the non-passive server passed as an argument.</source>
          <target state="translated">이 방법은 수동 서버와 비 수동 서버 사이에서 전송이 완료되기를 기다리는 데 사용할 수 있습니다. &lt;code&gt;Net::FTP&lt;/code&gt; 사용하여 수동 서버에서 메소드를 호출해야합니다. 객체를 인수로 전달 .</target>
        </trans-unit>
        <trans-unit id="ef82cc525f992d173e6595484cbecf34f240de62" translate="yes" xml:space="preserve">
          <source>This method checks for the existence of a specific key/value pair. If the pair exists, the cursor is left pointing to the pair and the method returns 0. Otherwise the method returns a non-zero value.</source>
          <target state="translated">이 방법은 특정 키 / 값 쌍이 있는지 확인합니다. 쌍이 존재하면 커서는 쌍을 가리키고 왼쪽은 0을 반환합니다. 그렇지 않으면 0이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="96b247f2b62f33779c178ee950a71199ee05a065" translate="yes" xml:space="preserve">
          <source>This method checks that the socket domain is &lt;code&gt;PF_INET&lt;/code&gt; and will throw an exception if it isn't.</source>
          <target state="translated">이 메서드는 소켓 도메인이 &lt;code&gt;PF_INET&lt;/code&gt; 인지 확인하고 그렇지 않은 경우 예외를 throw합니다.</target>
        </trans-unit>
        <trans-unit id="97fce6b5cdefe17191f11f3d49b65755477991b9" translate="yes" xml:space="preserve">
          <source>This method converts the key/value pairs from a data hash or array reference into a &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; string. The keys and values from the data reference will be UTF-8 encoded and escaped per RFC 3986. If a value is an array reference, the key will be repeated with each of the values of the array reference. If data is provided as a hash reference, the key/value pairs in the resulting string will be sorted by key and value for consistent ordering.</source>
          <target state="translated">이 메서드는 데이터 해시 또는 배열 참조의 키 / 값 쌍을 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 문자열로 변환합니다. 데이터 참조의 키와 값은 RFC 3986에 따라 UTF-8로 인코딩되고 이스케이프됩니다. 값이 배열 참조 인 경우 키는 배열 참조의 각 값과 함께 반복됩니다. 데이터가 해시 참조로 제공되는 경우 결과 문자열의 키 / 값 쌍은 일관된 순서를 위해 키 및 값별로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="082e97019fd385ec77aeb826bdad258d6d406921" translate="yes" xml:space="preserve">
          <source>This method deletes a specific key/value pair. It returns 0 if they exist and have been deleted successfully. Otherwise the method returns a non-zero value.</source>
          <target state="translated">이 방법은 특정 키 / 값 쌍을 삭제합니다. 존재하고 성공적으로 삭제 된 경우 0을 리턴합니다. 그렇지 않으면이 메서드는 0이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8613b5263cdbc40f7a909322a6d93c9325aff610" translate="yes" xml:space="preserve">
          <source>This method deletes the symbol whose name is given as the first argument. The optional second argument specifies the symbol table, as described above under &lt;code&gt;setsym&lt;/code&gt;. It returns TRUE if the symbol was successfully deleted, and FALSE if it was not.</source>
          <target state="translated">이 메서드는 이름이 첫 번째 인수로 지정된 기호를 삭제합니다. 선택적인 두 번째 인수는 위에서 &lt;code&gt;setsym&lt;/code&gt; 에 설명 된대로 기호 테이블을 지정합니다 . 기호가 성공적으로 삭제 된 경우 TRUE를 반환하고 그렇지 않은 경우 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f513febb40f0a4c26460c04fb3a509ae4b426b01" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of JSON and the result. If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_json_string&lt;/code&gt; .</source>
          <target state="translated">이 메소드는 주어진 JSON 문자열과 결과를 deserialize합니다. 소스가 UTF-8로 인코딩 된 경우 &lt;code&gt;load_json_string&lt;/code&gt; 을 호출하기 전에 문자열을 디코딩해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f5a69f9661072b68742ae779de82b9a6939ce07d" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of JSON and the result. If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_json_string&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 주어진 JSON 문자열과 결과를 역 직렬화합니다. 소스가 UTF-8로 인코딩 된 경우 &lt;code&gt;load_json_string&lt;/code&gt; 을 호출하기 전에 문자열을 디코딩해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f96e67c98ce1447f296a5e844322e09f6dd910a8" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of YAML and returns the first document in it. (CPAN metadata files should always have only one document.) If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_yaml_string&lt;/code&gt; .</source>
          <target state="translated">이 메소드는 주어진 YAML 문자열을 deserialize하고 그 안에 첫 번째 문서를 반환합니다. (CPAN 메타 데이터 파일에는 항상 하나의 문서 만 있어야합니다.) 소스가 UTF-8로 인코딩 된 경우 &lt;code&gt;load_yaml_string&lt;/code&gt; 을 호출하기 전에 문자열을 디코딩해야합니다. .</target>
        </trans-unit>
        <trans-unit id="81765ac41247c95703028ea8dc4ea721f8d8a884" translate="yes" xml:space="preserve">
          <source>This method deserializes the given string of YAML and returns the first document in it. (CPAN metadata files should always have only one document.) If the source was UTF-8 encoded, the string must be decoded before calling &lt;code&gt;load_yaml_string&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 주어진 YAML 문자열을 역 직렬화하고 그 안에있는 첫 번째 문서를 반환합니다. (CPAN 메타 데이터 파일에는 항상 하나의 문서 만 있어야합니다.) 소스가 UTF-8로 인코딩 된 경우 &lt;code&gt;load_yaml_string&lt;/code&gt; 을 호출하기 전에 문자열을 디코딩해야합니다 .</target>
        </trans-unit>
        <trans-unit id="34a514b4f19b9ac86f842d6404bf8e89dd74c0e2" translate="yes" xml:space="preserve">
          <source>This method does</source>
          <target state="translated">이 방법은</target>
        </trans-unit>
        <trans-unit id="54d18cd2ca68c9792cf6431fafe4da3a6cbdd8dc" translate="yes" xml:space="preserve">
          <source>This method does not implement a complete YAML dumper, being limited to dump a hash with values which are strings, undef's or nested hashes and arrays of strings. No quoting/escaping is done.</source>
          <target state="translated">이 방법은 완전한 YAML 덤퍼를 구현하지 않으며, 문자열, undef 또는 중첩 해시 및 문자열 배열 인 값으로 해시를 덤프하도록 제한됩니다. 인용 / 탈출이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="574dd9dda7a4db9253b5e2f725c2efb60e57dfca" translate="yes" xml:space="preserve">
          <source>This method executes a &lt;code&gt;POST&lt;/code&gt; request and sends the key/value pairs from a form data hash or array reference to the given URL with a &lt;code&gt;content-type&lt;/code&gt; of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. If data is provided as an array reference, the order is preserved; if provided as a hash reference, the terms are sorted on key and value for consistency. See documentation for the &lt;code&gt;www_form_urlencode&lt;/code&gt; method for details on the encoding.</source>
          <target state="translated">이 메서드는 &lt;code&gt;POST&lt;/code&gt; 요청을 실행하고 &lt;code&gt;content-type&lt;/code&gt; 이 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 인 지정된 URL에 대한 양식 데이터 해시 또는 배열 참조에서 키 / 값 쌍을 보냅니다 . 데이터가 배열 참조로 제공되면 순서가 유지됩니다. 해시 참조로 제공되는 경우 용어는 일관성을 위해 키와 값에 따라 정렬됩니다. 인코딩에 대한 자세한 내용 은 &lt;code&gt;www_form_urlencode&lt;/code&gt; 메서드에 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf3b86793c28703b24d0cd86f4cd0ebea05c47fa" translate="yes" xml:space="preserve">
          <source>This method fully supports the use of the variable &lt;code&gt;$/&lt;/code&gt; (or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; or &lt;code&gt;$RS&lt;/code&gt; when &lt;code&gt;English&lt;/code&gt; is in use) to determine what constitutes an end of line. Paragraph mode, record mode and file slurp mode are all supported.</source>
          <target state="translated">이 방법은 변수 &lt;code&gt;$/&lt;/code&gt; (또는 &lt;code&gt;English&lt;/code&gt; 를 사용하는 경우 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 또는 &lt;code&gt;$RS&lt;/code&gt; )를 사용하여 줄 끝을 구성하는 것을 완전히 지원합니다 . 단락 모드, 레코드 모드 및 파일 슬러 프 모드가 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7abd31a42f5dc198423e7bfa2a6a7d4410aa53a3" translate="yes" xml:space="preserve">
          <source>This method gets faster the more sparse the bit vector is. (Courtesy of Tim Bunce and Winfried Koenig.)</source>
          <target state="translated">이 방법은 비트 벡터가 많을수록 더 빠릅니다. (팀 번체와 윈프리 드 코니 그 제공)</target>
        </trans-unit>
        <trans-unit id="5106fbdd40086fe1994d026f8235d7c19445b51f" translate="yes" xml:space="preserve">
          <source>This method gets triggered during a keys() or each() iteration. It has a second argument which is the last key that had been accessed. This is useful if you're carrying about ordering or calling the iterator from more than one sequence, or not really storing things in a hash anywhere.</source>
          <target state="translated">이 메소드는 keys () 또는 each () 반복 중에 트리거됩니다. 마지막으로 액세스 한 키인 두 번째 인수가 있습니다. 이것은 하나 이상의 시퀀스에서 이터레이터를 주문하거나 호출하거나 실제로 해시에 물건을 저장하지 않는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c3ff1820eacb04c426d39d93923ba67e3009b83a" translate="yes" xml:space="preserve">
          <source>This method gets triggered during a keys(), values(), or each() iteration. It has a second argument which is the last key that had been accessed. This is useful if you're caring about ordering or calling the iterator from more than one sequence, or not really storing things in a hash anywhere.</source>
          <target state="translated">이 메서드는 keys (), values ​​() 또는 each () 반복 중에 트리거됩니다. 액세스 된 마지막 키인 두 번째 인수가 있습니다. 이것은 하나 이상의 시퀀스에서 반복자를 주문하거나 호출하는 데 관심이 있거나 실제로 아무 곳에 나 해시에 항목을 저장하지 않는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2b32b03e834069c38c85e8165c3d6300a8ef2db8" translate="yes" xml:space="preserve">
          <source>This method gets/sets the children of the top node in the parse-tree. If no arguments are given, it returns the list (array) of children (each of which should be either a string or a &lt;b&gt;Pod::InteriorSequence&lt;/b&gt;. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">이 메소드는 구문 분석 트리에서 최상위 노드의 자식을 가져 오거나 설정합니다. 인수가 제공되지 않으면 하위 목록 (배열)을 리턴합니다 (각각 문자열 또는 &lt;b&gt;Pod :: InteriorSequence&lt;/b&gt; 이어야 함) . 그렇지 않으면 인수가 제공되면 상위에 대한 새 하위 목록으로 처리됩니다. 마디.</target>
        </trans-unit>
        <trans-unit id="b46a6ad296dd61f630d70737a71545994d0ce79d" translate="yes" xml:space="preserve">
          <source>This method gets/sets the top node of the parse-tree. If no arguments are given, it returns the topmost node in the tree (the root), which is also a &lt;b&gt;Pod::ParseTree&lt;/b&gt;. If it is given a single argument that is a reference, then the reference is assumed to a parse-tree and becomes the new top node. Otherwise, if arguments are given, they are treated as the new list of children for the top node.</source>
          <target state="translated">이 메소드는 구문 분석 트리의 최상위 노드를 가져 오거나 설정합니다. 인수가 제공되지 않으면 트리에서 최상위 노드 (루트)를 반환 &lt;b&gt;하며이 노드&lt;/b&gt; 는 &lt;b&gt;포드 :: ParseTree이기도합니다.&lt;/b&gt; 합니다. 참조 인 단일 인수가 제공되면 해당 참조는 구문 분석 트리로 간주되어 새 최상위 노드가됩니다. 그렇지 않으면 인수가 제공되면 상위 노드의 새 하위 목록으로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="59076bbdbb5b4ddcc87d5e0b9c9e7bca5153b33d" translate="yes" xml:space="preserve">
          <source>This method handles the body of text that is marked up to be code. You might for instance override this to plug in a syntax highlighter. The base implementation just escapes the text.</source>
          <target state="translated">이 메소드는 코드로 표시되는 텍스트 본문을 처리합니다. 예를 들어 구문 형광펜을 연결하기 위해이를 재정의 할 수 있습니다. 기본 구현은 텍스트를 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="7f7d4c41920dd2575a0ef9de52d6dfd4b083b3af" translate="yes" xml:space="preserve">
          <source>This method handles the body of text within any element: it's the body of a paragraph, or everything between a &quot;=begin&quot; tag and the corresponding &quot;=end&quot; tag, or the text within an L entity, etc. You would want to override this if you are adding a custom element type that does more than just display formatted text. Perhaps adding a way to generate HTML tables from an extended version of POD.</source>
          <target state="translated">이 메소드는 모든 요소 내에서 텍스트 본문을 처리합니다. 단락의 본문 또는 &quot;= begin&quot;태그와 해당 &quot;= end&quot;태그 사이의 모든 항목 또는 L 엔티티 내의 텍스트 등입니다. 형식이 지정된 텍스트 만 표시하는 것 이상의 사용자 정의 요소 유형을 추가하는 경우이 옵션을 대체하십시오. 확장 버전의 POD에서 HTML 테이블을 생성하는 방법을 추가했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0712996dc1b8ffb7aa50e7d069711d277d763268" translate="yes" xml:space="preserve">
          <source>This method has exactly the same effect as</source>
          <target state="translated">이 방법은</target>
        </trans-unit>
        <trans-unit id="03288e53528cfed00d63abe3d07013f706a98859" translate="yes" xml:space="preserve">
          <source>This method implements Knuth's up-arrow notation, where $n is a non-negative integer representing the number of up-arrows. $n = 0 gives multiplication, $n = 1 gives exponentiation, $n = 2 gives tetration, $n = 3 gives hexation etc. The following illustrates the relation between the first values of $n.</source>
          <target state="translated">이 메서드는 Knuth의 위쪽 화살표 표기법을 구현합니다. 여기서 $ n은 위쪽 화살표의 수를 나타내는 음이 아닌 정수입니다. $ n = 0은 곱셈, $ n = 1은 지수, $ n = 2는 사 분화, $ n = 3은 16 진수 등을 제공합니다. 다음은 $ n의 첫 번째 값 사이의 관계를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="95de431069522c19f38db980946a01f82a5e48b0" translate="yes" xml:space="preserve">
          <source>This method implements the Ackermann function:</source>
          <target state="translated">이 메서드는 Ackermann 함수를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="d7edf847e8421397b7662e4de22753376978e152" translate="yes" xml:space="preserve">
          <source>This method is a stopgap until we can incorporate code into this extension to traverse the process' symbol table directly, so it may disappear in a future version of this package.</source>
          <target state="translated">이 방법은 코드를이 확장에 통합하여 프로세스의 기호 테이블을 직접 탐색 할 수 있기 전까지는 임시 방편입니다. 따라서이 패키지의 향후 버전에서는 사라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="065b0a15e17527d35032fe1e6828915d084d4b0d" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;code&gt;actual_passed&lt;/code&gt; .</source>
          <target state="translated">이 메소드는 &lt;code&gt;actual_passed&lt;/code&gt; 와 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="95d568c5372d8395dc875c9dc86c1185a887187b" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;code&gt;actual_passed&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;actual_passed&lt;/code&gt; 의 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="b1bd4d79c24738b6fd010c8a56304f2578c0ca9b" translate="yes" xml:space="preserve">
          <source>This method is available to all &lt;code&gt;IO::Socket&lt;/code&gt; implementations but may or may not be used by the individual domain subclasses.</source>
          <target state="translated">이 메서드는 모든 &lt;code&gt;IO::Socket&lt;/code&gt; 구현에서 사용할 수 있지만 개별 도메인 하위 클래스에서 사용하거나 사용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3a66a71f2968f9c82df6782744ec138e9c54cf9" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used as a string.</source>
          <target state="translated">이 메소드는 객체가 문자열로 사용될 때 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a819fa8543b1fdd50426768934ef9b1f1b767855" translate="yes" xml:space="preserve">
          <source>This method is called automatically when the object is used in string context.</source>
          <target state="translated">이 메소드는 객체가 문자열 컨텍스트에서 사용될 때 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ac138a74ffc74278892e510893352f2e36c5d5e7" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;response&lt;/code&gt; as a method with one argument. It should return an array of 2 values, the 3-digit status code and a flag which is true when this is part of a multi-line response and this line is not the last.</source>
          <target state="translated">이 메소드는 하나의 인수가있는 메소드로서 &lt;code&gt;response&lt;/code&gt; 의해 호출됩니다 . 두 줄의 값, 3 자리 상태 코드 및 이것이 여러 줄 응답의 일부이고이 줄이 마지막이 아닌 경우 true 인 플래그를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="caa6afaab7cedc695e3c6f58f69b2ab8274688f3" translate="yes" xml:space="preserve">
          <source>This method is called during construction by &lt;code&gt;IO::Pipe::new&lt;/code&gt; on the newly created &lt;code&gt;IO::Pipe&lt;/code&gt; object. It returns an array of two objects blessed into &lt;code&gt;IO::Pipe::End&lt;/code&gt; , or a subclass thereof.</source>
          <target state="translated">이 메소드는 새로 작성된 &lt;code&gt;IO::Pipe&lt;/code&gt; 오브젝트 에서 &lt;code&gt;IO::Pipe::new&lt;/code&gt; 에 의해 구성 중에 호출됩니다 . &lt;code&gt;IO::Pipe::End&lt;/code&gt; 또는 그 서브 클래스에 축복 된 두 객체의 배열을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="802fcb0eb2882b26bc56d5bf7fddba3f3126ee6f" translate="yes" xml:space="preserve">
          <source>This method is called during construction by &lt;code&gt;IO::Pipe::new&lt;/code&gt; on the newly created &lt;code&gt;IO::Pipe&lt;/code&gt; object. It returns an array of two objects blessed into &lt;code&gt;IO::Pipe::End&lt;/code&gt;, or a subclass thereof.</source>
          <target state="translated">이 메서드는 새로 생성 된 &lt;code&gt;IO::Pipe&lt;/code&gt; 객체 에서 &lt;code&gt;IO::Pipe::new&lt;/code&gt; 에 의해 생성 중에 호출됩니다 . &lt;code&gt;IO::Pipe::End&lt;/code&gt; 또는 그 하위 클래스에 축복 된 두 개체의 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5287b2e5ba98e503e67859e5f2d01d79cbfa6c5e" translate="yes" xml:space="preserve">
          <source>This method is called to print debugging information. TEXT is the text being sent. The method should return the text to be printed.</source>
          <target state="translated">이 메소드는 디버깅 정보를 인쇄하기 위해 호출됩니다. TEXT는 전송되는 텍스트입니다. 이 메소드는 인쇄 할 텍스트를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="2804b4df08740bd5a57eb70c9cfa0a8dcbe84738" translate="yes" xml:space="preserve">
          <source>This method is called when Math::BigFloat encounters an object it doesn't know how to handle. For instance, assume $x is a Math::BigFloat, or subclass thereof, and $y is defined, but not a Math::BigFloat, or subclass thereof. If you do</source>
          <target state="translated">이 메서드는 Math :: BigFloat가 처리 방법을 모르는 객체를 만났을 때 호출됩니다. 예를 들어, $ x가 Math :: BigFloat 또는 그 하위 클래스이고 $ y가 정의되었지만 Math :: BigFloat 또는 그 하위 클래스가 아니라고 가정합니다. 만약 당신이</target>
        </trans-unit>
        <trans-unit id="f167b29ab442c8210c9356c7997b2fd2247776b0" translate="yes" xml:space="preserve">
          <source>This method is called when the handle is read via &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; .</source>
          <target state="translated">이 메소드는 &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt; HANDLE&lt;/code&gt; 을 통해 핸들을 읽을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a8681e541d8a457af5b2a8ca5d7fb05501b6037" translate="yes" xml:space="preserve">
          <source>This method is called when the handle is read via &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; or &lt;code&gt;readline HANDLE&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;&amp;lt;HANDLE&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;readline HANDLE&lt;/code&gt; 을 통해 핸들을 읽을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6629dc17ac853da211380c0f404bf1fca26aed1" translate="yes" xml:space="preserve">
          <source>This method is called with two arguments: the relevant package name, and a reference to a variable or subroutine for which package-defined attributes are desired. The expected return value is a list of associated attributes. This list may be empty.</source>
          <target state="translated">이 메소드는 관련 패키지 이름과 패키지 정의 속성이 필요한 변수 또는 서브 루틴에 대한 참조라는 두 개의 인수와 함께 호출됩니다. 예상되는 반환 값은 관련 속성 목록입니다. 이 목록은 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45320fc2f3e3a4eca2479ec9f217dfab3504ebe5" translate="yes" xml:space="preserve">
          <source>This method is called with two fixed arguments, followed by the list of attributes from the relevant declaration. The two fixed arguments are the relevant package name and a reference to the declared subroutine or variable. The expected return value is a list of attributes which were not recognized by this handler. Note that this allows for a derived class to delegate a call to its base class, and then only examine the attributes which the base class didn't already handle for it.</source>
          <target state="translated">이 메소드는 두 개의 고정 인수와 관련 선언의 속성 목록으로 호출됩니다. 두 개의 고정 인수는 관련 패키지 이름과 선언 된 서브 루틴 또는 변수에 대한 참조입니다. 예상 리턴 값은이 핸들러가 인식하지 못한 속성 목록입니다. 이렇게하면 파생 클래스가 기본 클래스에 대한 호출을 위임 한 다음 기본 클래스가 아직 처리하지 않은 특성 만 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6abefc963006076df05b84dfc6d2811ce9f6040b" translate="yes" xml:space="preserve">
          <source>This method is deprecated if running under Perl 5.8, and is no longer present if running under Perl 5.9</source>
          <target state="translated">이 방법은 Perl 5.8에서 실행중인 경우 더 이상 사용되지 않으며 Perl 5.9에서 실행중인 경우 더 이상 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c663722b6a1ec14ffe0820b635acf25e140b2e8" translate="yes" xml:space="preserve">
          <source>This method is invoked after gathering up all the lines in a paragraph and after determining the cutting state of the paragraph, but before trying to further parse or interpret them. After &lt;b&gt;preprocess_paragraph()&lt;/b&gt; returns, the current cutting state (which is returned by &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; ) is examined. If it evaluates to true then input text (including the given &lt;code&gt;$text&lt;/code&gt; ) is cut (not processed) until the next POD directive is encountered.</source>
          <target state="translated">이 메소드는 단락의 모든 행을 수집 한 후 단락의 절단 상태를 판별 한 후 추가 구문 분석 또는 해석을 시도하기 전에 호출됩니다. &lt;b&gt;preprocess_paragraph ()가&lt;/b&gt; 리턴 된 후 현재 절단 상태 ( &lt;code&gt;$self-&amp;gt;cutting()&lt;/code&gt; 의해 리턴 됨 )가 검사됩니다. true로 평가 되면 다음 POD 지시어가 나타날 때까지 입력 텍스트 (주어진 &lt;code&gt;$text&lt;/code&gt; )가 잘립니다 (처리되지 않음).</target>
        </trans-unit>
        <trans-unit id="10379a9139313cde9e23b44b9d3191ab35fe83cb" translate="yes" xml:space="preserve">
          <source>This method is invoked at the beginning of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document initialization.</source>
          <target state="translated">이 메소드는 입력에서 발견 된 각 POD 문서에 대한 처리가 시작될 때 호출됩니다. 서브 클래스는 문서마다 초기화를 수행하기 위해이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="413604196761a8f6291ef93425b6ff6c449d0805" translate="yes" xml:space="preserve">
          <source>This method is invoked at the end of processing for each POD document that is encountered in the input. Subclasses should override this method to perform any per-document finalization.</source>
          <target state="translated">이 메소드는 입력에서 발견 된 각 POD 문서에 대한 처리가 끝날 때 호출됩니다. 서브 클래스는 문서 당 마무리를 수행하기 위해이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="c39c6b3f4be6d469d8afebc0b47e837d73cf3993" translate="yes" xml:space="preserve">
          <source>This method is invoked by &lt;b&gt;parse_from_filehandle()&lt;/b&gt; immediately</source>
          <target state="translated">이 메소드는 &lt;b&gt;parse_from_filehandle ()에&lt;/b&gt; 의해 즉시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6747dae8cbf5615de1cf353ad79e0a07cee8a900" translate="yes" xml:space="preserve">
          <source>This method is less often useful. It assumes that the string stored in the struct is null-terminated, and disregards the length information.</source>
          <target state="translated">이 방법은 덜 유용합니다. 구조체에 저장된 문자열이 null로 끝나고 길이 정보를 무시한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="2f27eac3492ebadd4d8f82dcb6d874e3db599873" translate="yes" xml:space="preserve">
          <source>This method is no longer used and can be omitted. Methods that are not implemented by a subclass will be inherited from this class.</source>
          <target state="translated">이 방법은 더 이상 사용되지 않으며 생략 할 수 있습니다. 서브 클래스에 의해 구현되지 않은 메서드는이 클래스에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="c79ad557d9b0fbcd0831200e697c308d8d3ffa30" translate="yes" xml:space="preserve">
          <source>This method is non-blocking, and will return only as many items as are available to fulfill the request:</source>
          <target state="translated">이 방법은 차단되지 않으며 요청을 처리하는 데 사용할 수있는 항목 수만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6fb78fde591144d3983cff09b4ae34dcd5c3fb9d" translate="yes" xml:space="preserve">
          <source>This method is not present if running under Perl 5.9, as the PMROOT information is no longer stored directly in the hash.</source>
          <target state="translated">PMROOT 정보가 더 이상 해시에 직접 저장되지 않으므로 Perl 5.9에서 실행하는 경우이 방법이 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f1244eb4316f69131f6963e6774a849bda60f19c" translate="yes" xml:space="preserve">
          <source>This method is of no use for general Perl threads programming. Its intent is to provide other (XS-based) thread modules with the capability to access, and possibly manipulate, the underlying thread structure associated with a Perl thread.</source>
          <target state="translated">이 방법은 일반적인 Perl 스레드 프로그래밍에는 사용되지 않습니다. 그 목적은 다른 (XS 기반) 스레드 모듈에 Perl 스레드와 연관된 기본 스레드 구조에 액세스하고 조작 할 수있는 기능을 제공하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="21dc78ea221a1896dd75e4ea5a218dfbc7c4df02" translate="yes" xml:space="preserve">
          <source>This method is protected and not intended to be called outside of MakeMaker.</source>
          <target state="translated">이 방법은 보호되어 있으며 MakeMaker 외부에서 호출하도록되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e5a20cfe7a533839e6244ee0ceb882a48e01de5e" translate="yes" xml:space="preserve">
          <source>This method is similar to share() but allows you to explicitly name the package that symbols should be shared from. The symbol names (including type characters) are supplied as an array reference.</source>
          <target state="translated">이 메소드는 share ()와 유사하지만 심볼을 공유 할 패키지의 이름을 명시 적으로 지정할 수 있습니다. 기호 이름 (유형 문자 포함)은 배열 참조로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="f5a57d1e0f15bd04707c86271032904c47bf2e9b" translate="yes" xml:space="preserve">
          <source>This method is the one you usually want. It constructs a string using the length and offset information in the struct: for ordinary scalars it will return the string that you'd see from Perl, even if it contains null characters.</source>
          <target state="translated">이 방법은 일반적으로 원하는 방법입니다. 구조체의 길이와 오프셋 정보를 사용하여 문자열을 구성합니다. 일반 스칼라의 경우 null 문자가 포함되어 있어도 Perl에서 볼 수있는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01115bf69ddf4deb1227d201ea74e47486095d25" translate="yes" xml:space="preserve">
          <source>This method is triggered when a tied hash is about to go out of scope. You don't really need it unless you're trying to add debugging or have auxiliary state to clean up. Here's a very simple function:</source>
          <target state="translated">이 방법은 연결된 해시가 범위를 벗어나려고 할 때 트리거됩니다. 디버깅을 추가하거나 정리할 보조 상태가 아닌 한 실제로 필요하지 않습니다. 매우 간단한 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2987f28dec8ef9effc2010b2cf05de3e78ff66c2" translate="yes" xml:space="preserve">
          <source>This method is triggered when the user uses the exists() function on a particular hash. In our example, we'll look at the &lt;code&gt;{LIST}&lt;/code&gt; hash element for this:</source>
          <target state="translated">이 메소드는 사용자가 특정 해시에서 exist () 함수를 사용할 때 트리거됩니다. 이 예에서는 &lt;code&gt;{LIST}&lt;/code&gt; 를 살펴 보겠습니다. 해시 요소를 .</target>
        </trans-unit>
        <trans-unit id="642b5a68b22f43aa4631e9ecbebcec5f49cf6aa8" translate="yes" xml:space="preserve">
          <source>This method is triggered when the whole hash is to be cleared, usually by assigning the empty list to it.</source>
          <target state="translated">이 메소드는 일반적으로 빈 목록을 지정하여 전체 해시를 지울 때 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="b7c5e76fa8c5d820b269407c2691745bfe513299" translate="yes" xml:space="preserve">
          <source>This method is triggered when we remove an element from the hash, typically by using the delete() function. Again, we'll be careful to check whether they really want to clobber files.</source>
          <target state="translated">이 메소드는 일반적으로 delete () 함수를 사용하여 해시에서 요소를 제거 할 때 트리거됩니다. 다시, 우리는 그들이 파일을 클로버하기를 원하는지주의해서 검사 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="d44b267a60e501cab8cef2efaa122beb61916cef" translate="yes" xml:space="preserve">
          <source>This method is used to add to the currently selected sections and subsections of POD documentation that are to be printed and/or processed. See &amp;lt;select()&amp;gt; for replacing the currently selected sections.</source>
          <target state="translated">이 방법은 인쇄 및 / 또는 처리 될 POD 문서의 현재 선택된 섹션 및 하위 섹션에 추가하는 데 사용됩니다. 현재 선택된 섹션을 바꾸려면 &amp;lt;select ()&amp;gt;를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="79298df7a94b5d243fe4caa12d96cacff3087b81" translate="yes" xml:space="preserve">
          <source>This method is used to determine if the block of text given in &lt;code&gt;$paragraph&lt;/code&gt; falls within the currently selected set of POD sections and subsections to be printed or processed. This method is also responsible for keeping track of the current input section and subsections. It is assumed that &lt;code&gt;$paragraph&lt;/code&gt; is the most recently read (but not yet processed) input paragraph.</source>
          <target state="translated">이 방법은 &lt;code&gt;$paragraph&lt;/code&gt; 주어진 텍스트 블록 이 인쇄 또는 처리 될 현재 선택된 POD 섹션 및 서브 섹션 세트에 속하는지 여부를 판별하는 데 사용 됩니다. 이 방법은 또한 현재 입력 섹션과 하위 섹션을 추적합니다. &lt;code&gt;$paragraph&lt;/code&gt; 가정 는 가장 최근에 읽은 (그러나 아직 처리되지 않은) 입력 단락 .</target>
        </trans-unit>
        <trans-unit id="cb88ba93625bb2592aeeb6754a8b29bf08054638" translate="yes" xml:space="preserve">
          <source>This method is used to load a facet by name (or key). It will attempt to load the facet class, if it succeeds it will return the class it loaded. If it fails it will return &lt;code&gt;undef&lt;/code&gt;. This caches the result at the class level so that future calls will be faster.</source>
          <target state="translated">이 메서드는 이름 (또는 키)별로 패싯을로드하는 데 사용됩니다. 패싯 클래스를로드하려고 시도하고 성공하면로드 한 클래스를 반환합니다. 실패하면 &lt;code&gt;undef&lt;/code&gt; 를 반환 합니다. 이는 향후 호출이 더 빨라지도록 클래스 수준에서 결과를 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="bbbe3e628f204e314a28a9c25f8f03f14e0f6464" translate="yes" xml:space="preserve">
          <source>This method is used to select the particular sections and subsections of POD documentation that are to be printed and/or processed. The existing set of selected sections is</source>
          <target state="translated">이 방법은 인쇄 및 / 또는 처리 될 POD 문서의 특정 섹션과 하위 섹션을 선택하는 데 사용됩니다. 선택된 섹션의 기존 세트는</target>
        </trans-unit>
        <trans-unit id="bef747284ac03954e21b22973b38b9cf4e4e7f3d" translate="yes" xml:space="preserve">
          <source>This method is useful if you need to perform your own interpolation of interior sequences and can't rely upon &lt;b&gt;interpolate&lt;/b&gt; to expand them in simple bottom-up order.</source>
          <target state="translated">이 방법은 내부 시퀀스의 자체 보간을 수행해야하며 &lt;b&gt;보간&lt;/b&gt; 에 의존하여 간단한 상향식 순서로 확장 할 수없는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="49a58cbb089494a695c730a567717e544a3c0dd9" translate="yes" xml:space="preserve">
          <source>This method isn't terribly useful since modules which share the same Test::Builder object might get exported to different packages and only the last one will be honored.</source>
          <target state="translated">동일한 Test :: Builder 객체를 공유하는 모듈이 다른 패키지로 내보내 져서 마지막 패키지 만 적용되므로이 방법은별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c881172eff7368918f5da216c5dcea0fcc3039d" translate="yes" xml:space="preserve">
          <source>This method joins together all requirements across a number of phases and types into a new &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN::Meta::Requirements&lt;/a&gt; object. If arguments are omitted, it defaults to &quot;runtime&quot;, &quot;build&quot; and &quot;test&quot; for phases and &quot;requires&quot; and &quot;recommends&quot; for types.</source>
          <target state="translated">이 방법은 여러 단계와 유형에 걸쳐 모든 요구 사항을 새로운 &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN :: Meta :: Requirements&lt;/a&gt; 객체로 결합합니다. 인수가 생략되면 기본적으로 &quot;runtime&quot;, &quot;build&quot;및 &quot;test&quot;(단계), &quot;requires&quot;및 &quot;recommends&quot;유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6554ac6945a5df20c377de63d8de44dbce743773" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;../perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">이 메소드 키워드는 &lt;a href=&quot;../perlobj#Destructors&quot;&gt;perlobj의 소멸자에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="661a4e6337bec9fa5b81482e46ab4bf4c5f238c8" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;perlobj#Destructors&quot;&gt;&quot;Destructors&quot; in perlobj&lt;/a&gt;.</source>
          <target state="translated">이 메서드 키워드는 &lt;a href=&quot;perlobj#Destructors&quot;&gt;perlobj의 &quot;소멸자&quot;에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e359554a4d991920df0d798d38cb8b6bf47ec29" translate="yes" xml:space="preserve">
          <source>This method keyword is documented in &lt;a href=&quot;perlobj#Destructors&quot;&gt;Destructors in perlobj&lt;/a&gt;.</source>
          <target state="translated">이 메소드 키워드는 &lt;a href=&quot;perlobj#Destructors&quot;&gt;perlobj의 소멸자에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c21da25dd954f9e366c6cef85d1af33e75fddf8f" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually failed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">이 방법을 사용하면 TODO 지시문의 발견 여부에 관계없이 실제로 실패한 테스트 (또는 몇 개)를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2b6c5d7eeef2dcb58cd2d68cdfe40caf21f8820" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed but were declared as &quot;TODO&quot; tests.</source>
          <target state="translated">이 방법을 사용하면 실제로 통과했지만 &quot;TODO&quot;테스트로 선언 된 테스트 (또는 몇 개)를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08a5db262046c866f7d810a5b71d8ec989df7d80" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests actually passed, regardless of whether or not a TODO directive was found.</source>
          <target state="translated">이 방법을 사용하면 TODO 지시문의 발견 여부에 관계없이 실제로 통과 한 테스트 (또는 몇 개)를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7562f7ac693aec459c0c9b344acb705680f1f7f7" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests failed. If a test passed but had a TODO directive, it will &lt;b&gt;NOT&lt;/b&gt; be counted as a failed test.</source>
          <target state="translated">이 방법을 통해 어떤 테스트가 실패했는지 알 수 있습니다. 테스트에 통과했지만 TODO 지시문이 있으면 실패한 테스트로 계산 &lt;b&gt;되지 않습니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="b1956c9e443594eef5939e2522e06e528138f73a" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had SKIP directives.</source>
          <target state="translated">이 방법을 사용하면 SKIP 지시문이있는 테스트 (또는 몇 개)를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d552dee0411d16f26c2347ec73027455bcd691a0" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests had TODO directives.</source>
          <target state="translated">이 방법을 사용하면 TODO 지시문이있는 테스트 (또는 몇 개)를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62d19246ed330e746e1fe150131f18c164bb14d2" translate="yes" xml:space="preserve">
          <source>This method lets you know which (or how many) tests passed. If a test failed but had a TODO directive, it will be counted as a passed test.</source>
          <target state="translated">이 방법을 통해 어떤 테스트에 통과했는지 알 수 있습니다. 테스트에 실패했지만 TODO 지시문이 있으면 통과 된 테스트로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="5cdb3f6929d50bb5330f8f315f2338f1cd8897fc" translate="yes" xml:space="preserve">
          <source>This method marks the requirements finalized. Subsequent attempts to change the requirements will be fatal,</source>
          <target state="translated">이 방법은 요구 사항이 완료되었음을 표시합니다. 이후 요구 사항을 변경하려는 시도는 치명적입니다.</target>
        </trans-unit>
        <trans-unit id="cc582265ee4f696fc9e8e3fad6147cf5023780c3" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a block of verbatim text is encountered. It is passed the following parameters:</source>
          <target state="translated">이 메소드는 일] 텍스트 블록이 _ 생할 때 적절한 조치를 취하기 위해 서브 클래스에 의해 대체 될 수 있습니다. 다음 매개 변수가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2ef97fe79f3074bd51a79fd7f9a20c0d8326e891" translate="yes" xml:space="preserve">
          <source>This method may be overridden by subclasses to take the appropriate action when a normal block of POD text is encountered (although the base class method will usually do what you want). It is passed the following parameters:</source>
          <target state="translated">이 메소드는 일반적인 POD 텍스트 블록이 발견 될 때 적절한 조치를 취하기 위해 서브 클래스에 의해 대체 될 수 있습니다 (기본 클래스 메소드는 일반적으로 원하는 작업을 수행하지만). 다음 매개 변수가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f193021bd1e2803e8135ddd336589fd3fdb1031b" translate="yes" xml:space="preserve">
          <source>This method merely runs the parser and parses all of the TAP.</source>
          <target state="translated">이 방법은 파서를 실행하고 모든 TAP를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="d5b810a222612f34da5ba09951a3a157e593734d" translate="yes" xml:space="preserve">
          <source>This method only works on Perl v5.9.4 or later.</source>
          <target state="translated">이 방법은 Perl v5.9.4 이상에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="711e3f6546ee99d694d8611421083f48f729a0be" translate="yes" xml:space="preserve">
          <source>This method parses the passed in string and adds the appropriate requirement for the given module. A version can be a Perl &quot;v-string&quot;. It understands version ranges as described in the &lt;a href=&quot;CPAN::Meta::Spec#Version-Ranges&quot;&gt;&quot;Version Ranges&quot; in CPAN::Meta::Spec&lt;/a&gt;. For example:</source>
          <target state="translated">이 메서드는 전달 된 문자열을 구문 분석하고 주어진 모듈에 대한 적절한 요구 사항을 추가합니다. 버전은 Perl &quot;v-string&quot;일 수 있습니다. &lt;a href=&quot;CPAN::Meta::Spec#Version-Ranges&quot;&gt;CPAN :: Meta :: Spec&lt;/a&gt; 의 &quot;버전 범위&quot;에 설명 된대로 버전 범위를 이해 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3eb04a70399efe3a3bc64926ce7a5f07e9940d0a" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the interior-sequence. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">이 방법은 내부 순서에 필요한 정리를 수행합니다. 당신이이 메소드를 오버라이드 (override)하는 경우가있다 &lt;b&gt;필수적&lt;/b&gt; 그렇지 않으면, 당신이 당신의 자신의 방법 내에서 부모의 메소드를 호출하는 것이</target>
        </trans-unit>
        <trans-unit id="714dcc55d92cf752f4b4184074298408c801245b" translate="yes" xml:space="preserve">
          <source>This method performs any necessary cleanup for the parse-tree. If you override this method then it is &lt;b&gt;imperative&lt;/b&gt; that you invoke the parent method from within your own method, otherwise</source>
          <target state="translated">이 메소드는 구문 분석 트리에 필요한 정리를 수행합니다. 당신이이 메소드를 오버라이드 (override)하는 경우가있다 &lt;b&gt;필수적&lt;/b&gt; 그렇지 않으면, 당신이 당신의 자신의 방법 내에서 부모의 메소드를 호출하는 것이</target>
        </trans-unit>
        <trans-unit id="094b13118759d86cdc1f33cdf2b7a72869820716" translate="yes" xml:space="preserve">
          <source>This method performs any necessary object initialization. It takes no arguments (other than the object instance of course, which is typically copied to a local variable named &lt;code&gt;$self&lt;/code&gt; ). If subclasses override this method then they</source>
          <target state="translated">이 방법은 필요한 객체 초기화를 수행합니다. 인수는 필요하지 않습니다 (물론 객체 인스턴스는 제외하고 일반적으로 &lt;code&gt;$self&lt;/code&gt; 라는 로컬 변수에 복사됩니다 ). 서브 클래스가이 메소드를 대체하는 경우</target>
        </trans-unit>
        <trans-unit id="1b4637e9cdcc1db5f14b9635de49858c878c102c" translate="yes" xml:space="preserve">
          <source>This method prepends the given text or parse-tree to the current parse-tree. If the first item on the parse-tree is text and the argument is also text, then the text is prepended to the first item (not added as a separate string). Otherwise the argument is added as a new string or parse-tree</source>
          <target state="translated">이 메소드는 지정된 텍스트 또는 구문 분석 트리를 현재 구문 분석 트리 앞에 추가합니다. 구문 분석 트리의 첫 번째 항목이 텍스트이고 인수도 텍스트 인 경우 텍스트는 첫 번째 항목 앞에 추가됩니다 (별도의 문자열로 추가되지 않음). 그렇지 않으면 인수가 새 문자열 또는 구문 분석 트리로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="843c78718fa264afa1695d6f64c3d712c49fd84a" translate="yes" xml:space="preserve">
          <source>This method prints the test as a string. It will probably be similar, but not necessarily identical, to the original test line. Directives are capitalized, some whitespace may be trimmed and a test number will be added if it was not present in the original line. If you need the original text of the test line, use the &lt;code&gt;raw&lt;/code&gt; method.</source>
          <target state="translated">이 방법은 테스트를 문자열로 인쇄합니다. 아마도 원래 테스트 라인과 유사하지만 반드시 동일 할 필요는 없습니다. 지시문은 대문자로 표시되고 일부 공백은 잘릴 수 있으며 원래 줄에없는 경우 테스트 번호가 추가됩니다. 테스트 라인의 원본 텍스트가 필요한 경우 &lt;code&gt;raw&lt;/code&gt; 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c461db5fa5d2d546751540785c1da918e27ef9ee" translate="yes" xml:space="preserve">
          <source>This method processes an XS file and sends output to a C file. The method may be called as a function (this is the legacy interface) and will then use a singleton as invocant.</source>
          <target state="translated">이 방법은 XS 파일을 처리하고 출력을 C 파일로 보냅니다. 이 메소드는 함수 (이것은 레거시 인터페이스 임)로 호출 될 수 있으며 단일 톤을 호출자로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="443a8a4abd0996a8f53eec3622235de842b5198f" translate="yes" xml:space="preserve">
          <source>This method reconstructs the encoding object if necessary. If you need to store the state during encoding, this is where you clone your object.</source>
          <target state="translated">이 메소드는 필요한 경우 인코딩 오브젝트를 재구성합니다. 인코딩하는 동안 상태를 저장해야하는 경우 여기에서 객체를 복제합니다.</target>
        </trans-unit>
        <trans-unit id="4be2e04731b97866ee5b4ac0d1bde14c1df759bd" translate="yes" xml:space="preserve">
          <source>This method returns 0 if the object can be modified with the given operation, or 1 if not.</source>
          <target state="translated">이 메소드는 지정된 조작으로 오브젝트를 수정할 수 있으면 0을 리턴하고 그렇지 않으면 1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3441f0af9f59d5dc45617aeb66969ab6a0963d73" translate="yes" xml:space="preserve">
          <source>This method returns TRUE if the GP field of the GV is NULL.</source>
          <target state="translated">이 메소드는 GV의 GP 필드가 NULL 인 경우 TRUE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ecc3b6039f5ff097f5929abca6feaac0bb1a1360" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN::Meta::Feature&lt;/a&gt; object for the optional feature with the given identifier. If no feature with that identifier exists, an exception will be raised.</source>
          <target state="translated">이 메소드는 주어진 식별자가있는 선택적 기능에 대한 &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN :: Meta :: Feature&lt;/a&gt; 객체를 반환합니다 . 해당 식별자가있는 기능이 없으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6c15f83b33ebe9626be021d25c41e755d48695b2" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN::Meta::Prereqs&lt;/a&gt; object describing all the prereqs for the distribution. If an arrayref of feature identifiers is given, the prereqs for the identified features are merged together with the distribution's core prereqs before the CPAN::Meta::Prereqs object is returned.</source>
          <target state="translated">이 메소드는 배포에 대한 모든 전제 조건을 설명 하는 &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN :: Meta :: Prereqs&lt;/a&gt; 객체를 반환합니다 . 기능 식별자의 arrayref가 제공되면 식별 된 기능에 대한 전제 조건이 CPAN :: Meta :: Prereqs 객체가 반환되기 전에 배포의 핵심 전제 조건과 함께 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="ccbe2a6326a123f59ab56735cf3ce21971d48ace" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN::Meta::Requirements&lt;/a&gt; object for the given phase/type combination. If no prerequisites are registered for that combination, a new CPAN::Meta::Requirements object will be returned, and it may be added to as needed.</source>
          <target state="translated">이 메소드는 주어진 단계 / 유형 조합에 대한 &lt;a href=&quot;CPAN::Meta::Requirements&quot;&gt;CPAN :: Meta :: Requirements&lt;/a&gt; 객체를 반환합니다 . 해당 조합에 대한 전제 조건이 등록되지 않은 경우 새 CPAN :: Meta :: Requirements 오브젝트가 리턴되고 필요에 따라 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb173e29985a69e4c742ab91cf231ef598525ea6" translate="yes" xml:space="preserve">
          <source>This method returns a Prereqs object that is identical to the original object, but can be altered without affecting the original object. Finalization does not survive cloning, meaning that you may clone a finalized set of prereqs and then modify the clone.</source>
          <target state="translated">이 메서드는 원본 개체와 동일하지만 원본 개체에 영향을주지 않고 변경할 수있는 Prereqs 개체를 반환합니다. 마무리는 복제 후에도 유지되지 않습니다. 즉, 마무리 된 사전 요구 사항 집합을 복제 한 다음 복제를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dc7e3cb1081d01b93496efbbf89c0031ab07cf1" translate="yes" xml:space="preserve">
          <source>This method returns a clone of the invocant. The clone and the original object can then be changed independent of one another.</source>
          <target state="translated">이 메서드는 호출자의 복제본을 반환합니다. 그런 다음 복제본과 원본 개체를 서로 독립적으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a660976840e65d0897ee15b1bb3e1d439893ed69" translate="yes" xml:space="preserve">
          <source>This method returns a deep copy of the object's metadata as an unblessed hash reference. It takes an optional hashref of options. If the hashref contains a &lt;code&gt;version&lt;/code&gt; argument, the copied metadata will be converted to the version of the specification and returned. For example:</source>
          <target state="translated">이 메서드는 개체 메타 데이터의 전체 복사본을 비 축복 해시 참조로 반환합니다. 옵션의 선택적 해시 참조를 사용합니다. hashref에 &lt;code&gt;version&lt;/code&gt; 인수 가 포함 된 경우 복사 된 메타 데이터는 사양 버전으로 변환되어 반환됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9d0124bb5624eddaaba9be0a0792e6b70917f5e9" translate="yes" xml:space="preserve">
          <source>This method returns a hashref containing structures suitable for dumping into a distmeta data structure. It is made up of hashes and strings, only; there will be no Prereqs, CPAN::Meta::Requirements, or &lt;code&gt;version&lt;/code&gt; objects inside it.</source>
          <target state="translated">이 메소드는 distmeta 데이터 구조로 덤프하기에 적합한 구조를 포함하는 해시 참조를 리턴합니다. 해시와 문자열로만 구성됩니다. Prereqs, CPAN :: Meta :: Requirements 또는 &lt;code&gt;version&lt;/code&gt; 개체가 내부에 없습니다.</target>
        </trans-unit>
        <trans-unit id="6eae8a85642b918b7b127321e5eaeb3c1f6a5f9d" translate="yes" xml:space="preserve">
          <source>This method returns a list of &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN::Meta::Feature&lt;/a&gt; objects, one for each optional feature described by the distribution's metadata.</source>
          <target state="translated">이 메서드는 배포의 메타 데이터에 설명 된 각 선택적 기능에 대해 하나씩 &lt;a href=&quot;CPAN::Meta::Feature&quot;&gt;CPAN :: Meta :: Feature&lt;/a&gt; 개체 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac97a18eb985efa8a4676cc3a8b597409e671815" translate="yes" xml:space="preserve">
          <source>This method returns a list of all the modules for which requirements have been specified.</source>
          <target state="translated">이 메서드는 요구 사항이 지정된 모든 모듈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7b58df6d5a2c18121bb505720d0e804af99a7dd" translate="yes" xml:space="preserve">
          <source>This method returns a list of the currently active section headings and subheadings in the document being parsed. The list of headings returned corresponds to the most recently parsed paragraph of the input.</source>
          <target state="translated">이 메소드는 구문 분석중인 문서에서 현재 활성화 된 섹션 표제 및 하위 표제 목록을 리턴합니다. 리턴 된 표제 목록은 가장 최근에 구문 분석 된 입력의 단락에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="1845f64f5dff026e99802fb2b0ed9543ebdf51a7" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta object using the first document in the given YAML string. In other respects it is identical to &lt;code&gt;load_file()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 주어진 YAML 문자열의 첫 번째 문서를 사용하여 새 CPAN :: Meta 객체를 반환합니다. 다른 측면에서는 &lt;code&gt;load_file()&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3273d3871ffcb26a5d4043675d561afe60f650f3" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta object using the structure represented by the given JSON string. In other respects it is identical to &lt;code&gt;load_file()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 주어진 JSON 문자열이 나타내는 구조를 사용하여 새 CPAN :: Meta 객체를 반환합니다. 다른 측면에서는 &lt;code&gt;load_file()&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="02520ccc95c7235e07b3d427ec797731c99b95a2" translate="yes" xml:space="preserve">
          <source>This method returns a new CPAN::Meta::Prereqs objects in which all the other prerequisites given are merged into the current set. This is primarily provided for combining a distribution's core prereqs with the prereqs of one of its optional features.</source>
          <target state="translated">이 메소드는 주어진 다른 모든 전제 조건이 현재 세트에 병합 된 새 CPAN :: Meta :: Prereqs 오브젝트를 리턴합니다. 이는 주로 배포판의 핵심 사전 요구 사항을 선택적 기능 중 하나의 사전 요구 사항과 결합하기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="26456adf48b8270a780502b4eaebd6bec5340107" translate="yes" xml:space="preserve">
          <source>This method returns a new set of Prereqs. The input should look like the contents of the &lt;code&gt;prereqs&lt;/code&gt; field described in &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt;, meaning something more or less like this:</source>
          <target state="translated">이 메서드는 새로운 Prereq 집합을 반환합니다. 입력은 &lt;a href=&quot;CPAN::Meta::Spec&quot;&gt;CPAN :: Meta :: Spec에&lt;/a&gt; 설명 된 &lt;code&gt;prereqs&lt;/code&gt; 필드 의 내용과 유사해야합니다 . 이는 다음과 같거나 더 적은 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="809605a8e893e3bde6161ec466a7256b077b2f58" translate="yes" xml:space="preserve">
          <source>This method returns a serialized copy of the object's metadata as a character string. (The strings are &lt;b&gt;not&lt;/b&gt; UTF-8 encoded.) It takes an optional hashref of options. If the hashref contains a &lt;code&gt;version&lt;/code&gt; argument, the copied metadata will be converted to the version of the specification and returned. For example:</source>
          <target state="translated">이 메서드는 개체 메타 데이터의 직렬화 된 복사본을 문자열로 반환합니다. (문자열은 UTF-8로 인코딩 &lt;b&gt;되지 않습니다&lt;/b&gt; .) 옵션의 선택적 해시 참조를 사용합니다. hashref에 &lt;code&gt;version&lt;/code&gt; 인수 가 포함 된 경우 복사 된 메타 데이터는 사양 버전으로 변환되어 반환됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dfd6da7f680f7708aaaafbe88d4fbd81537fbb12" translate="yes" xml:space="preserve">
          <source>This method returns either a hash reference (in scalar context) or a list or hash references (in array context) that contains information about each of the header fields in the compressed data stream(s).</source>
          <target state="translated">이 메소드는 압축 데이터 스트림의 각 헤더 필드에 대한 정보를 포함하는 해시 참조 (스칼라 컨텍스트) 또는 목록 또는 해시 참조 (배열 컨텍스트)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5613e8d87481a66c6331ffba3f17e879703b23af" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt; object associated with Your::Class. It is not a constructor so you can call it as often as you like.</source>
          <target state="translated">이 메소드는 Your :: Class와 연관된 &lt;a href=&quot;../builder&quot;&gt;Test :: Builder&lt;/a&gt; 오브젝트를 리턴합니다 . 생성자가 아니므로 원하는만큼 자주 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df2acf1db6d765e8b7af473cf018815f141ba1b9" translate="yes" xml:space="preserve">
          <source>This method returns the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; object associated with Your::Class. It is not a constructor so you can call it as often as you like.</source>
          <target state="translated">이 메서드는 Your :: Class와 연결된 &lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt; 개체를 반환합니다 . 생성자가 아니므로 원하는만큼 자주 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6ed5af13a1529fb7b65c36511f205e560c0e629" translate="yes" xml:space="preserve">
          <source>This method returns the AV specific flags. In Perl 5.9 these are now stored in with the main SV flags, so this method is no longer present.</source>
          <target state="translated">이 메소드는 AV 특정 플래그를 리턴합니다. Perl 5.9에서는 이제 기본 SV 플래그와 함께 저장되므로이 방법은 더 이상 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="230f2b0705cb9c1bd36492ae8437541d92944923" translate="yes" xml:space="preserve">
          <source>This method returns the byte offset of the start of the &lt;code&gt;$n&lt;/code&gt; th record in the file. If there is no such record, it returns an undefined value.</source>
          <target state="translated">이 메소드는 파일에서 &lt;code&gt;$n&lt;/code&gt; 번째 레코드 시작의 바이트 오프셋을 리턴 합니다. 그러한 레코드가 없으면 정의되지 않은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="738895c1b07cd50df5407037de05d0561fa1ae9c" translate="yes" xml:space="preserve">
          <source>This method returns the byte offset of the start of the &lt;code&gt;$n&lt;/code&gt;th record in the file. If there is no such record, it returns an undefined value.</source>
          <target state="translated">이 메서드는 파일에서 &lt;code&gt;$n&lt;/code&gt; 번째 레코드 시작의 바이트 오프셋을 반환 합니다. 그러한 레코드가 없으면 정의되지 않은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5819846ea31de4c85ae8c84e9f4950b6d488925d" translate="yes" xml:space="preserve">
          <source>This method returns the currently stored JSON fragment as an lvalue, that is, you can manipulate it. This</source>
          <target state="translated">이 메서드는 현재 저장된 JSON 조각을 lvalue로 반환합니다. 즉, 조작 할 수 있습니다. 이</target>
        </trans-unit>
        <trans-unit id="1febcdc386a8d7c1d008e8e3e3986be768008da7" translate="yes" xml:space="preserve">
          <source>This method returns the feature's identifier.</source>
          <target state="translated">이 메서드는 기능의 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="13ed7705e9d007aeb18dc15b134a8edd67224258" translate="yes" xml:space="preserve">
          <source>This method returns the feature's long description.</source>
          <target state="translated">이 메서드는 기능의 자세한 설명을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5202bb9ec86dc5db010454c975e82230a5006be" translate="yes" xml:space="preserve">
          <source>This method returns the feature's prerequisites as a &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN::Meta::Prereqs&lt;/a&gt; object.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;CPAN::Meta::Prereqs&quot;&gt;CPAN :: Meta :: Prereqs&lt;/a&gt; 객체 로 기능의 전제 조건을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="cda1e7a80b8c4ff8a50d7193bfa7f2353fb0bb3a" translate="yes" xml:space="preserve">
          <source>This method returns the internal length field, which consists of the number of internal bytes, not necessarily the number of logical characters.</source>
          <target state="translated">이 메소드는 논리 길이가 아닌 내부 바이트 수로 구성되는 내부 길이 필드를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="73630249386a32e1daa88a34d4ed3d64dadd0557" translate="yes" xml:space="preserve">
          <source>This method returns the list of all phases currently populated in the prereqs object, suitable for iterating.</source>
          <target state="translated">이 메서드는 반복에 적합한 prereqs 개체에 현재 채워진 모든 단계의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a69b31bb0a594a163fa02bab7ede41d8139fbcc3" translate="yes" xml:space="preserve">
          <source>This method returns the list of all types currently populated in the prereqs object for the provided phase, suitable for iterating.</source>
          <target state="translated">이 메소드는 반복에 적합한 제공된 단계의 전제 조건 오브젝트에 현재 채워진 모든 유형의 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3195470feffd08399489b4ea58a94cbd49fb15f2" translate="yes" xml:space="preserve">
          <source>This method returns the name of the glob, but if the first character of the name is a control character, then it converts it to ^X first, so that *^G would return &quot;^G&quot; rather than &quot;\cG&quot;.</source>
          <target state="translated">이 메소드는 glob의 이름을 리턴하지만 이름의 첫 문자가 제어 문자 인 경우, ^^를 먼저 변환하여 * ^ G가 &quot;\ cG&quot;가 아닌 &quot;^ G&quot;를 리턴하도록합니다.</target>
        </trans-unit>
        <trans-unit id="d436f65e4ac4dfd0f8045b3c54271c25339bbf38" translate="yes" xml:space="preserve">
          <source>This method returns the name of the package that is the root of the compartment's namespace.</source>
          <target state="translated">이 메서드는 구획 네임 스페이스의 루트 인 패키지 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b1039ff3465ca6dc27db9b5d11bc6e35d5848fc0" translate="yes" xml:space="preserve">
          <source>This method returns the number of [a certain kind of] errors encountered during processing of the XS file.</source>
          <target state="translated">이 메소드는 XS 파일 처리 중에 발생한 [특정 종류] 오류 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0d20c8d8462990e4c532228bf94cacc069885810" translate="yes" xml:space="preserve">
          <source>This method returns the number of bytes allocated (via malloc) for storing the string. This is 0 if the scalar does not &quot;own&quot; the string.</source>
          <target state="translated">이 메소드는 문자열을 저장하기 위해 malloc을 통해 할당 된 바이트 수를 리턴합니다. 스칼라가 문자열을 &quot;소유&quot;하지 않으면 0입니다.</target>
        </trans-unit>
        <trans-unit id="01d67962853aa369d48416e10b895f4851d158db" translate="yes" xml:space="preserve">
          <source>This method returns the requirements object.</source>
          <target state="translated">이 메서드는 요구 사항 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dc49b5d5eff536554a52d021b3411834001a3a6e" translate="yes" xml:space="preserve">
          <source>This method returns the results of the parsing, one result at a time. Note that it is destructive. You can't rewind and examine previous results.</source>
          <target state="translated">이 메소드는 구문 분석 결과를 한 번에 하나씩 결과를 리턴합니다. 파괴적입니다. 이전 결과를 되 감고 검사 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0ab9ad920897cda27f5f563bb7197ba468b33916" translate="yes" xml:space="preserve">
          <source>This method returns the textual representation of the hyperlink as above, but without markers (read only). Depending on the link type this is one of the following alternatives (the + and * denote the portions of the text that are marked up):</source>
          <target state="translated">이 메서드는 위와 같이 하이퍼 링크의 텍스트 표현을 반환하지만 마커는 없습니다 (읽기 전용). 링크 유형에 따라 다음 대안 중 하나입니다 (+ 및 *는 표시되는 텍스트 부분을 나타냄).</target>
        </trans-unit>
        <trans-unit id="59c2ab7b96065dfd63ce37b4f21c2d16dce7d68c" translate="yes" xml:space="preserve">
          <source>This method returns the value of the IV as an integer. It differs from &lt;code&gt;IV&lt;/code&gt; in that it returns the correct value regardless of whether it's stored signed or unsigned.</source>
          <target state="translated">이 메소드는 IV의 값을 정수로 리턴합니다. 서명 여부에 관계없이 올바른 값을 반환한다는 점에서 &lt;code&gt;IV&lt;/code&gt; 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="cd2332acd3062dbe524d95a2c5676842caa361ce" translate="yes" xml:space="preserve">
          <source>This method returns the version part of the &lt;code&gt;meta_spec&lt;/code&gt; entry in the distmeta structure. It is equivalent to:</source>
          <target state="translated">이 메서드는 distmeta 구조 에있는 &lt;code&gt;meta_spec&lt;/code&gt; 항목 의 버전 부분을 반환합니다 . 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="097409eeb19e4610fc16463aab58579acca93a37" translate="yes" xml:space="preserve">
          <source>This method returns true if and only if all requirements are inclusive minimums -- that is, if their string expression is just the version number.</source>
          <target state="translated">이 메서드는 모든 요구 사항이 최소값을 포함하는 경우, 즉 문자열 표현식이 버전 번호 인 경우에만 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bd9d9f9dc3232d40e9c79f888b628345d7669615" translate="yes" xml:space="preserve">
          <source>This method returns true if the given file should be indexed. It decides this by checking the &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;directory&lt;/code&gt; keys in the &lt;code&gt;no_index&lt;/code&gt; property of the distmeta structure. Note that neither the version format nor &lt;code&gt;release_status&lt;/code&gt; are considered.</source>
          <target state="translated">이 메서드는 주어진 파일을 색인화해야하는 경우 true를 반환합니다. distmeta 구조 의 &lt;code&gt;no_index&lt;/code&gt; 속성 에서 &lt;code&gt;file&lt;/code&gt; 및 &lt;code&gt;directory&lt;/code&gt; 키를 확인하여이를 결정합니다 . 버전 형식이나 &lt;code&gt;release_status&lt;/code&gt; 는 고려 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="58ff6d5b8ce053e96c242fd66e092358e70ec413" translate="yes" xml:space="preserve">
          <source>This method returns true if the given package should be indexed. It decides this by checking the &lt;code&gt;package&lt;/code&gt; and &lt;code&gt;namespace&lt;/code&gt; keys in the &lt;code&gt;no_index&lt;/code&gt; property of the distmeta structure. Note that neither the version format nor &lt;code&gt;release_status&lt;/code&gt; are considered.</source>
          <target state="translated">이 메서드는 주어진 패키지를 색인화해야하는 경우 true를 반환합니다. distmeta 구조 의 &lt;code&gt;no_index&lt;/code&gt; 속성 에서 &lt;code&gt;package&lt;/code&gt; 및 &lt;code&gt;namespace&lt;/code&gt; 키를 확인하여이를 결정합니다 . 버전 형식이나 &lt;code&gt;release_status&lt;/code&gt; 는 고려 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="740035cd86ced51cb784444de5c3729bee91714e" translate="yes" xml:space="preserve">
          <source>This method returns true if the requirements have been finalized by having the &lt;code&gt;finalize&lt;/code&gt; method called on them.</source>
          <target state="translated">이 메서드는 &lt;code&gt;finalize&lt;/code&gt; 메서드를 호출 하여 요구 사항이 완료된 경우 true를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="91378c22b7ed1b00b6fef0cff4776f78b85e7e4b" translate="yes" xml:space="preserve">
          <source>This method returns true if the set of prereqs has been marked &quot;finalized,&quot; and cannot be altered.</source>
          <target state="translated">이 메소드는 전제 조건 세트가 &quot;완료 됨&quot;으로 표시되고 변경할 수없는 경우 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1569bccb9cee6a2175f9b489178e6d0824ba382b" translate="yes" xml:space="preserve">
          <source>This method sets or returns the POD page this link points to.</source>
          <target state="translated">이 메소드는이 링크가 가리키는 POD 페이지를 설정하거나 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5626475bc6df98d403b9b1a4c6d8bd8eead196ba" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 15 for 7.5-point) that the header on each page will appear in. The header is usually just &quot;</source>
          <target state="translated">이 방법은 각 페이지의 헤더가 표시 될 크기 (반점, 15- 포인트는 7.5)를 설정합니다. 헤더는 일반적으로 &quot;</target>
        </trans-unit>
        <trans-unit id="49562bbb9cccfd05b2f9dd5f5c25626dc9296a99" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 21 for 10.5-point) that codeblocks (&quot;verbatim sections&quot;) will appear as.</source>
          <target state="translated">이 방법은 코드 블록 ( &quot;verbatim section&quot;)이 표시 될 크기 (10.5 포인트의 경우 21과 같은 반 포인트 단위)를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b751a506f13c7e1535b7f83c798a478f8a346484" translate="yes" xml:space="preserve">
          <source>This method sets the size (in half-points, like 26 for 13-point) that normal paragraphic text will appear in.</source>
          <target state="translated">이 방법은 일반적인 단락 텍스트가 표시 될 크기 (13 포인트의 경우 26과 같은 반 포인트)를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4a47dc314786b539ecdca5143ef23b8e1941b547" translate="yes" xml:space="preserve">
          <source>This method should</source>
          <target state="translated">이 방법은</target>
        </trans-unit>
        <trans-unit id="a1c0bdcb0359edd01294194cece7860e3da71acb" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each</source>
          <target state="translated">이 메소드는 각각에 대해 모든 종류의 전처리를 수행하려는 서브 클래스로 대체되어야합니다.</target>
        </trans-unit>
        <trans-unit id="4045b5b845e6b96a3e7f9e9b3149fb374504376e" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses that wish to perform any kind of preprocessing for each block (paragraph) of POD documentation that appears in the input stream. The parameter &lt;code&gt;$text&lt;/code&gt; is the POD paragraph from the input file; and the parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number for the beginning of the corresponding paragraph.</source>
          <target state="translated">이 메소드는 입력 스트림에 나타나는 POD 문서의 각 블록 (단락)에 대해 모든 종류의 사전 처리를 수행하려는 서브 클래스로 대체되어야합니다. &lt;code&gt;$text&lt;/code&gt; 매개 변수 는 입력 파일의 POD 단락입니다. &lt;code&gt;$line_num&lt;/code&gt; 매개 변수 는 해당 단락의 시작 부분에 대한 행 번호입니다.</target>
        </trans-unit>
        <trans-unit id="517b86d5501e13cc5ca0478526d9e56418238e3c" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when a POD command paragraph (denoted by a line beginning with &quot;=&quot;) is encountered. When such a POD directive is seen in the input, this method is called and is passed:</source>
          <target state="translated">이 메소드는 POD 명령 단락 ( &quot;=&quot;으로 시작하는 행으로 표시됨)이 발견 될 때 적절한 조치를 취하기 위해 서브 클래스에 의해 대체되어야합니다. 이러한 POD 지시문이 입력에 표시되면이 메소드가 호출되고 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="4057fa0aee2966d0f3fb518e4370c12ff228c00a" translate="yes" xml:space="preserve">
          <source>This method should be overridden by subclasses to take the appropriate action when an interior sequence is encountered. An interior sequence is an embedded command within a block of text which appears as a command name (usually a single uppercase character) followed immediately by a string of text which is enclosed in angle brackets. This method is passed the sequence command &lt;code&gt;$seq_cmd&lt;/code&gt; and the corresponding text &lt;code&gt;$seq_arg&lt;/code&gt; . It is invoked by the &lt;b&gt;interpolate()&lt;/b&gt; method for each interior sequence that occurs in the string that it is passed. It should return the desired text string to be used in place of the interior sequence. The &lt;code&gt;$pod_seq&lt;/code&gt; argument is a reference to a &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; object which contains further information about the interior sequence. Please see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details if you need to access this additional information.</source>
          <target state="translated">내부 시퀀스가 ​​발생할 때 적절한 조치를 취하려면 서브 클래스로이 메소드를 대체해야합니다. 내부 시퀀스는 텍스트 블록 내에 포함 된 명령으로, 명령 이름 (대개 단일 대문자)으로 표시되고 그 뒤에 꺾쇠 괄호로 묶인 텍스트 문자열이 나타납니다. 이 메소드에는 시퀀스 명령 &lt;code&gt;$seq_cmd&lt;/code&gt; 및 해당 텍스트 &lt;code&gt;$seq_arg&lt;/code&gt; 됩니다. 전달 된 문자열에서 발생하는 각 내부 시퀀스에 대해 &lt;b&gt;interpolate ()&lt;/b&gt; 메소드에 의해 호출됩니다 . 내부 시퀀스 대신 사용할 원하는 텍스트 문자열을 반환해야합니다. &lt;code&gt;$pod_seq&lt;/code&gt; 인수는에 대한 참조입니다 &lt;code&gt;Pod::InteriorSequence&lt;/code&gt; 내부 시퀀스에 대한 추가 정보가 들어있는 객체. 이 추가 정보에 액세스해야하는 경우 자세한 내용 은 &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="429d3f42da5b40589bd5bfe3cdeaeea4b58f3cb7" translate="yes" xml:space="preserve">
          <source>This method takes a filename and does the following:</source>
          <target state="translated">이 방법은 파일 이름을 사용하며 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="7d455696794a1091f3f69965ce8778b043cee526" translate="yes" xml:space="preserve">
          <source>This method takes an input filehandle (which is assumed to already be opened for reading) and reads the entire input stream looking for blocks (paragraphs) of POD documentation to be processed. If no first argument is given the default input filehandle &lt;code&gt;STDIN&lt;/code&gt; is used.</source>
          <target state="translated">이 메소드는 입력 파일 핸들 (이미 읽기 위해 열린 것으로 가정)을 처리하고 처리 할 POD 문서의 블록 (단락)을 찾기 위해 전체 입력 스트림을 읽습니다. 첫 번째 인수가 제공되지 않으면 기본 입력 파일 핸들 &lt;code&gt;STDIN&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d21cbfa9655bea409751abece40beb185c2a106" translate="yes" xml:space="preserve">
          <source>This method takes an optional parameter, &lt;code&gt;$flush_type&lt;/code&gt; , that controls how the flushing will be carried out. By default the &lt;code&gt;$flush_type&lt;/code&gt; used is &lt;code&gt;Z_FINISH&lt;/code&gt; . Other valid values for &lt;code&gt;$flush_type&lt;/code&gt; are &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; and &lt;code&gt;Z_BLOCK&lt;/code&gt; . It is strongly recommended that you only set the &lt;code&gt;flush_type&lt;/code&gt; parameter if you fully understand the implications of what it does - overuse of &lt;code&gt;flush&lt;/code&gt; can seriously degrade the level of compression achieved. See the &lt;code&gt;zlib&lt;/code&gt; documentation for details.</source>
          <target state="translated">이 메소드는 플러시 수행 방법을 제어하는 선택적 매개 변수 &lt;code&gt;$flush_type&lt;/code&gt; 을 사용합니다. 기본적으로 사용되는 &lt;code&gt;$flush_type&lt;/code&gt; 은 &lt;code&gt;Z_FINISH&lt;/code&gt; 입니다. &lt;code&gt;$flush_type&lt;/code&gt; 다른 유효한 값 은 &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; 및 &lt;code&gt;Z_BLOCK&lt;/code&gt; 입니다. &lt;code&gt;flush_type&lt;/code&gt; 매개 변수는 그 기능의 의미를 완전히 이해 한 경우 에만 설정하는 것이 좋습니다. &lt;code&gt;flush&lt;/code&gt; 과도 하게 사용하면 압축 수준이 심각하게 저하 될 수 있습니다. 자세한 내용은 &lt;code&gt;zlib&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fb30c692d9b64ebdba6036a9ab8caf9a45ad7a4f" translate="yes" xml:space="preserve">
          <source>This method takes an optional parameter, &lt;code&gt;$flush_type&lt;/code&gt;, that controls how the flushing will be carried out. By default the &lt;code&gt;$flush_type&lt;/code&gt; used is &lt;code&gt;Z_FINISH&lt;/code&gt;. Other valid values for &lt;code&gt;$flush_type&lt;/code&gt; are &lt;code&gt;Z_NO_FLUSH&lt;/code&gt;, &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt;, &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; and &lt;code&gt;Z_BLOCK&lt;/code&gt;. It is strongly recommended that you only set the &lt;code&gt;flush_type&lt;/code&gt; parameter if you fully understand the implications of what it does - overuse of &lt;code&gt;flush&lt;/code&gt; can seriously degrade the level of compression achieved. See the &lt;code&gt;zlib&lt;/code&gt; documentation for details.</source>
          <target state="translated">이 메소드는 플러시가 수행되는 방법을 제어하는 선택적 매개 변수 &lt;code&gt;$flush_type&lt;/code&gt; 을 사용합니다. 기본적으로 사용되는 &lt;code&gt;$flush_type&lt;/code&gt; 은 &lt;code&gt;Z_FINISH&lt;/code&gt; 입니다. &lt;code&gt;$flush_type&lt;/code&gt; 대한 다른 유효한 값 은 &lt;code&gt;Z_NO_FLUSH&lt;/code&gt; , &lt;code&gt;Z_SYNC_FLUSH&lt;/code&gt; , &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; 및 &lt;code&gt;Z_BLOCK&lt;/code&gt; 입니다. &lt;code&gt;flush_type&lt;/code&gt; 매개 변수는 그것이하는 일의 의미를 완전히 이해 한 경우 에만 설정하는 것이 좋습니다. &lt;code&gt;flush&lt;/code&gt; 를 과도 하게 사용하면 달성 된 압축 수준이 심각하게 저하 될 수 있습니다. 자세한 내용은 &lt;code&gt;zlib&lt;/code&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9a36ff48f2f3559090075d4ecd3d184fea06bced" translate="yes" xml:space="preserve">
          <source>This method takes no arguments, it has the exact same effect as invoking &amp;lt;select()&amp;gt; with no arguments.</source>
          <target state="translated">이 메소드는 인수를 사용하지 않으며 인수없이 &amp;lt;select ()&amp;gt;를 호출하는 것과 동일한 효과를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="21a6dff8df6ddbca7896a9686976cc84571da4fe" translate="yes" xml:space="preserve">
          <source>This method translates all text (including any embedded interior sequences) in the given text string &lt;code&gt;$text&lt;/code&gt; and returns the interpolated result. The parameter &lt;code&gt;$line_num&lt;/code&gt; is the line number corresponding to the beginning of &lt;code&gt;$text&lt;/code&gt; .</source>
          <target state="translated">이 메소드는 주어진 텍스트 문자열 &lt;code&gt;$text&lt;/code&gt; 모든 텍스트 (내장 된 내부 시퀀스 포함)를 번역 하고 보간 된 결과를 반환합니다. &lt;code&gt;$line_num&lt;/code&gt; 매개 변수 는 &lt;code&gt;$text&lt;/code&gt; 의 시작 부분에 해당하는 줄 번호 입니다.</target>
        </trans-unit>
        <trans-unit id="d98885f1731321cbbe841c4174d52925fb86ae4c" translate="yes" xml:space="preserve">
          <source>This method turns an arbitrary string into a valid XHTML ID attribute value. The rules enforced, following &lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm&lt;/a&gt;, are:</source>
          <target state="translated">이 메소드는 임의의 문자열을 유효한 XHTML ID 속성 값으로 변환합니다. &lt;a href=&quot;http://webdesign.about.com/od/htmltags/a/aa031707.htm&quot;&gt;http://webdesign.about.com/od/htmltags/a/aa031707.htm에&lt;/a&gt; 따라 시행되는 규칙 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d3c6a2354f8ed5d57f49370abc6615f8bbe3512" translate="yes" xml:space="preserve">
          <source>This method used to be useful back when Test::Builder worked on Perls before 5.6 which didn't have qr//. Now its pretty useless.</source>
          <target state="translated">이 방법은 Test :: Builder가 qr //가없는 5.6 이전의 Perls에서 작동했을 때 유용했습니다. 이제는 쓸모가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5ce2bae285dbd09666d07f99e460e4eebea8c753" translate="yes" xml:space="preserve">
          <source>This method uses &lt;code&gt;commands_quote&lt;/code&gt; to determine the correct quote. If &lt;code&gt;commands_quote&lt;/code&gt; is a space, no quoting will take place.</source>
          <target state="translated">이 방법은 &lt;code&gt;commands_quote&lt;/code&gt; 를 사용하여 올바른 따옴표를 결정합니다. 경우 &lt;code&gt;commands_quote&lt;/code&gt; 는 공간이다, 더 열릴 예정이다 인용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="475ff388d47d9ff8c537b04d4cf8fd2786ec177c" translate="yes" xml:space="preserve">
          <source>This method was added in v0.20 of Math::BigRat (May 2007).</source>
          <target state="translated">이 방법은 Math :: BigRat (2007 년 5 월) v0.20에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="a9fdbef062f1e260e975ac993cde1b7e7c35b43d" translate="yes" xml:space="preserve">
          <source>This method was added in v0.22 of Math::BigRat (April 2008).</source>
          <target state="translated">이 방법은 Math :: BigRat (2008 년 4 월) v0.22에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4f274a73d8190736635c257c7c7cb3e3c0fe18c0" translate="yes" xml:space="preserve">
          <source>This method was added in v1.82 of Math::BigInt (April 2007).</source>
          <target state="translated">이 방법은 Math :: BigInt (2007 년 4 월) v1.82에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="892100fd26e628f38d9cdb9d5d762a8a6ee16072" translate="yes" xml:space="preserve">
          <source>This method was added in v1.84 of Math::BigInt (April 2007).</source>
          <target state="translated">이 방법은 Math :: BigInt (2007 년 4 월) v1.84에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="def53de6390772e9ab517671e2de82585ed2894d" translate="yes" xml:space="preserve">
          <source>This method was added in v1.87 of Math::BigInt (June 2007).</source>
          <target state="translated">이 방법은 Math :: BigInt (2007 년 6 월) v1.87에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e5821a661d4054cf93a3f0baee35e1a4e8ee9c19" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; function is called.</source>
          <target state="translated">이 메소드는 &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; 함수가 호출 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="33be8d090d52cdf9ebec70873885856aba821ff5" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; function is called.</source>
          <target state="translated">이 메소드는 &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;&lt;/code&gt; 함수가 호출 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d3cb58ce3651b90ff56e3c1a01aa5df7e96bc1d2" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;eof&lt;/code&gt; function is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;eof&lt;/code&gt; 함수가 호출 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a3e47fe88d4c0ab44cf85620365ca3f9e7b2c4ea" translate="yes" xml:space="preserve">
          <source>This method will be called when the &lt;code&gt;getc&lt;/code&gt; function is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;getc&lt;/code&gt; 함수가 호출 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="07abfda6230642bdc24b2988efac200062ab0904" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is closed via the &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">이 함수 는 &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 함수 를 통해 핸들을 닫을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3f4f5034957d7d4e9aa3a8edbd33a9e855059ad" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is closed via the &lt;code&gt;close&lt;/code&gt; function.</source>
          <target state="translated">이 메서드는 &lt;code&gt;close&lt;/code&gt; 함수 를 통해 핸들이 닫힐 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8c952116674febc1216a1fb0e4796db40ca65ad8" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is read from via the &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; 함수 를 통해 핸들을 읽을 때이 메소드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="c2c8df89bf1dd475294a80263c1998064bad01a4" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is read from via the &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;sysread&lt;/code&gt; functions.</source>
          <target state="translated">이 메서드는 &lt;code&gt;read&lt;/code&gt; 또는 &lt;code&gt;sysread&lt;/code&gt; 함수 를 통해 핸들을 읽을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="53bcf4b7992a6d18135efe380f6cf616566ace5a" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is written to via the &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">이 메소드는 &lt;code&gt;&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;&lt;/code&gt; 함수 를 통해 핸들을 쓸 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="808d3e7324564412ae6c4c95a1b83f642b5294f8" translate="yes" xml:space="preserve">
          <source>This method will be called when the handle is written to via the &lt;code&gt;syswrite&lt;/code&gt; function.</source>
          <target state="translated">이 메서드는 &lt;code&gt;syswrite&lt;/code&gt; 함수 를 통해 핸들을 쓸 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f7eb1cf0cb3798f7407e75f4a0686ab61a556fd" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied array is set (written). It takes two arguments beyond its self reference: the index at which we're trying to store something and the value we're trying to put there.</source>
          <target state="translated">이 방법은 연결된 배열의 요소가 설정 (쓰기) 될 때마다 트리거됩니다. 자체 참조를 넘어 두 가지 인수가 필요합니다. 우리가 무언가를 저장하려는 색인과 거기에 넣는 가치.</target>
        </trans-unit>
        <trans-unit id="fef1865fb35cee1965cbfbe2864d43cfb61253d3" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied hash is accessed (read). It takes one argument beyond its self reference: the key whose value we're trying to fetch.</source>
          <target state="translated">이 방법은 연결된 해시의 요소에 액세스 (읽기) 할 때마다 트리거됩니다. 자체 참조를 넘어 하나의 인수가 필요합니다. 키를 가져 오려는 키입니다.</target>
        </trans-unit>
        <trans-unit id="6ff0eaa0013ee12dae761b1f3a38cc41d40d71c7" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an element in the tied hash is set (written). It takes two arguments beyond its self reference: the index at which we're trying to store something, and the value we're trying to put there.</source>
          <target state="translated">이 방법은 연결된 해시의 요소가 설정 (쓰기) 될 때마다 트리거됩니다. 자체 참조를 넘어 두 가지 인수가 필요합니다. 우리가 무언가를 저장하려는 색인과 거기에 넣는 가치.</target>
        </trans-unit>
        <trans-unit id="f154ed5d9dede0079ff14f755f8d64da0b6d8569" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time an individual element the tied array is accessed (read). It takes one argument beyond its self reference: the index whose value we're trying to fetch.</source>
          <target state="translated">이 방법은 연결된 배열의 개별 요소에 액세스 (읽기) 할 때마다 트리거됩니다. 자체 참조를 넘어서 하나의 인수가 필요합니다. 인덱스를 가져 오려는 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="ce4bdb5814566177219471512f35e981a551516b" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; functions. Beyond its self reference it also expects the list that was passed to the print function.</source>
          <target state="translated">이 메소드는 묶인 핸들이 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/say&quot;&gt;say()&lt;/a&gt;&lt;/code&gt; 함수로 인쇄 될 때마다 트리거됩니다 . 자체 참조 외에 인쇄 기능에 전달 된 목록도 예상합니다.</target>
        </trans-unit>
        <trans-unit id="46e361c76a8fe326ef26947ed7b27ef6314ab7da" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; function. Beyond its self reference it also expects the format and list that was passed to the printf function.</source>
          <target state="translated">이 메소드는 묶인 핸들이 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 함수로 인쇄 될 때마다 트리거됩니다 . 자체 참조 외에 printf 함수에 전달 된 형식과 목록도 예상합니다.</target>
        </trans-unit>
        <trans-unit id="6af30ad096d6acfeecb452b74adb4a3282b5cd33" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;print()&lt;/code&gt; or &lt;code&gt;say()&lt;/code&gt; functions. Beyond its self reference it also expects the list that was passed to the print function.</source>
          <target state="translated">이 메서드는 &lt;code&gt;print()&lt;/code&gt; 또는 &lt;code&gt;say()&lt;/code&gt; 함수 를 사용하여 묶인 핸들이 인쇄 될 때마다 트리거됩니다 . 자체 참조 외에도 인쇄 기능에 전달 된 목록이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="743722ad4d09e8c7a81e0e8d919d08195ccf21c8" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied handle is printed to with the &lt;code&gt;printf()&lt;/code&gt; function. Beyond its self reference it also expects the format and list that was passed to the printf function.</source>
          <target state="translated">이 메서드는 &lt;code&gt;printf()&lt;/code&gt; 함수 를 사용하여 묶인 핸들이 인쇄 될 때마다 트리거됩니다 . 자체 참조 외에도 printf 함수에 전달 된 형식과 목록이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4d2309a54c3a525e60bc8a57c49ad44a6f62e89e" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied variable is accessed (read). It takes no arguments beyond its self reference, which is the object representing the scalar we're dealing with. Because in this case we're using just a SCALAR ref for the tied scalar object, a simple $$self allows the method to get at the real value stored there. In our example below, that real value is the process ID to which we've tied our variable.</source>
          <target state="translated">이 메소드는 묶인 변수에 액세스 (읽기) 할 때마다 트리거됩니다. 우리가 다루는 스칼라를 나타내는 객체 인 자체 참조를 넘어서는 인수를 취하지 않습니다. 이 경우 우리는 연결된 스칼라 객체에 대해 SCALAR 참조 만 사용하기 때문에 간단한 $$ self를 사용하면 메소드가 저장된 실제 값을 얻을 수 있습니다. 아래 예에서 해당 실제 값은 변수를 연결 한 프로세스 ID입니다.</target>
        </trans-unit>
        <trans-unit id="074aba193a7d4ab7fc2d92f3649243f7a2526fbd" translate="yes" xml:space="preserve">
          <source>This method will be triggered every time the tied variable is set (assigned). Beyond its self reference, it also expects one (and only one) argument: the new value the user is trying to assign. Don't worry about returning a value from STORE; the semantic of assignment returning the assigned value is implemented with FETCH.</source>
          <target state="translated">이 방법은 묶인 변수가 설정 (할당) 될 때마다 트리거됩니다. 자체 참조 외에도 사용자가 할당하려는 새로운 가치라는 단 하나의 주장이 필요합니다. STORE에서 값을 반환하는 것에 대해 걱정하지 마십시오. 할당 된 값을 반환하는 할당의 의미는 FETCH로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="a70c828d5225a812501600b7ba6a4a618714e8ab" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; occurs. This can be useful if the class needs to know when no further calls will be made. (Except DESTROY of course.) See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;The untie Gotcha&lt;/a&gt; below for more details.</source>
          <target state="translated">때이 방법은 트리거됩니다 &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 발생합니다. 더 이상 전화를 걸지 않을 때 클래스가 알아야 할 경우에 유용합니다. (물론 DESTROY는 제외) 자세한 내용 &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;은&lt;/a&gt; 아래 untie Gotcha 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2320a83af1339239a394fc9bed901eb3791c7ba6" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the &lt;code&gt;untie&lt;/code&gt; occurs. This can be useful if the class needs to know when no further calls will be made. (Except DESTROY of course.) See &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&quot;The &lt;code&gt;untie&lt;/code&gt; Gotcha&quot;&lt;/a&gt; below for more details.</source>
          <target state="translated">이 메서드는 &lt;code&gt;untie&lt;/code&gt; 가 발생할 때 트리거됩니다 . 이것은 클래스가 더 이상 호출이 없을 때를 알아야 할 때 유용 할 수 있습니다. (물론 DESTROY를 제외하고.) 자세한 내용은 아래의 &lt;a href=&quot;#The-untie-Gotcha&quot;&gt;&quot;The &lt;code&gt;untie&lt;/code&gt; Gotcha&quot;&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c6dadf6ee9215d45834b1ebd72a2a25ea540b456" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the tied variable needs to be destructed. As with other object classes, such a method is seldom necessary, because Perl deallocates its moribund object's memory for you automatically--this isn't C++, you know. We'll use a DESTROY method here for debugging purposes only.</source>
          <target state="translated">이 방법은 묶인 변수를 파기해야 할 때 트리거됩니다. 다른 객체 클래스와 마찬가지로 Perl은 많은 객체 객체의 메모리를 자동으로 할당 해제하기 때문에 거의 필요하지 않습니다. C ++이 아닙니다. 여기서는 디버깅 목적으로 만 DESTROY 메소드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="aba37b5cce6ea3c8466dd8e8d0896cfdf208ff19" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the tied variable needs to be destructed. As with the scalar tie class, this is almost never needed in a language that does its own garbage collection, so this time we'll just leave it out.</source>
          <target state="translated">이 방법은 묶인 변수를 파기해야 할 때 트리거됩니다. 스칼라 타이 클래스와 마찬가지로, 이것은 자체 가비지 콜렉션을 수행하는 언어에서는 거의 필요하지 않으므로 이번에는 생략합니다.</target>
        </trans-unit>
        <trans-unit id="1a30c4c1dc9863704c12fdf1f1b5872e08e0156b" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the user is going to iterate through the hash, such as via a keys() or each() call.</source>
          <target state="translated">이 메소드는 사용자가 keys () 또는 each () 호출과 같은 해시를 통해 반복하려고 할 때 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="40a2e00fab75d6d886ea418ffd88f8aa1dbe8119" translate="yes" xml:space="preserve">
          <source>This method will be triggered when the user is going to iterate through the hash, such as via a keys(), values(), or each() call.</source>
          <target state="translated">이 메서드는 사용자가 keys (), values ​​() 또는 each () 호출을 통해 해시를 반복 할 때 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="241be65c4fe89a7db745cd5e6028ee4cea0a4bd5" translate="yes" xml:space="preserve">
          <source>This method will do a file transfer between two remote ftp servers. If &lt;code&gt;DEST_FILE&lt;/code&gt; is omitted then the leaf name of &lt;code&gt;SRC_FILE&lt;/code&gt; will be used.</source>
          <target state="translated">이 방법은 두 개의 원격 ftp 서버간에 파일 전송을 수행합니다. 경우 &lt;code&gt;DEST_FILE&lt;/code&gt; 은 다음 생략의 잎 이름 &lt;code&gt;SRC_FILE&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="714241362af6626714a493d5da28a5f3831d1838" translate="yes" xml:space="preserve">
          <source>This method will get/set the corresponding parse-tree of the interior sequence's text.</source>
          <target state="translated">이 메소드는 내부 시퀀스 텍스트의 해당 구문 분석 트리를 가져 오거나 설정합니다.</target>
        </trans-unit>
        <trans-unit id="81f73213adc2e84a3c6f2373dbd483c50f803f34" translate="yes" xml:space="preserve">
          <source>This method will get/set the corresponding parse-tree of the paragraph's text.</source>
          <target state="translated">이 메소드는 단락 텍스트의 해당 구문 분석 트리를 가져 오거나 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e9978ed2996dd9bcc230654360a798a867715edb" translate="yes" xml:space="preserve">
          <source>This method will read the named file and deserialize it to a data structure, determining whether it should be JSON or YAML based on the filename. The file will be read using the &quot;:utf8&quot; IO layer.</source>
          <target state="translated">이 메소드는 명명 된 파일을 읽고 데이터 구조로 역 직렬화하여 파일 이름을 기준으로 JSON 또는 YAML이어야하는지 여부를 결정합니다. &quot;: utf8&quot;IO 계층을 사용하여 파일을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b67738b0ceee5f0e621228df6d40624bf3ba896e" translate="yes" xml:space="preserve">
          <source>This method will reset the deflation object &lt;code&gt;$d&lt;/code&gt; . It can be used when you are compressing multiple data streams and want to use the same object to compress each of them. It should only be used once the previous data stream has been flushed successfully, i.e. a call to &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; has returned &lt;code&gt;Z_OK&lt;/code&gt; .</source>
          <target state="translated">이 메소드는 수축 오브젝트 &lt;code&gt;$d&lt;/code&gt; 재설정합니다 . 여러 데이터 스트림을 압축하고 동일한 오브젝트를 사용하여 각 데이터 스트림을 압축하려는 경우 사용할 수 있습니다. 이전 데이터 스트림이 성공적으로 플러시 된 후에 만 ​​사용해야합니다. 즉 &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; 호출이 &lt;code&gt;Z_OK&lt;/code&gt; 를 반환 했습니다 .</target>
        </trans-unit>
        <trans-unit id="712ee53e5b0c4e0aae2bb7946407fb40095db000" translate="yes" xml:space="preserve">
          <source>This method will reset the deflation object &lt;code&gt;$d&lt;/code&gt;. It can be used when you are compressing multiple data streams and want to use the same object to compress each of them. It should only be used once the previous data stream has been flushed successfully, i.e. a call to &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; has returned &lt;code&gt;Z_OK&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 디플레이션 개체 &lt;code&gt;$d&lt;/code&gt; 재설정합니다 . 여러 데이터 스트림을 압축하고 동일한 객체를 사용하여 각각을 압축하려는 경우 사용할 수 있습니다. 이전 데이터 스트림이 성공적으로 플러시 된 경우에만 사용해야합니다. 즉, &lt;code&gt;$d-&amp;gt;flush(Z_FINISH)&lt;/code&gt; 호출이 &lt;code&gt;Z_OK&lt;/code&gt; 를 반환 했습니다 .</target>
        </trans-unit>
        <trans-unit id="c896817c407b0236207a4f8181caaf53efac5199" translate="yes" xml:space="preserve">
          <source>This method will reset the inflation object &lt;code&gt;$i&lt;/code&gt; . It can be used when you are uncompressing multiple data streams and want to use the same object to uncompress each of them.</source>
          <target state="translated">이 방법은 인플레이션 객체 &lt;code&gt;$i&lt;/code&gt; 재설정합니다 . 여러 데이터 스트림을 압축 해제하고 동일한 오브젝트를 사용하여 각 데이터 압축을 해제하려는 경우에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97c63a4cc6642689474dcac8d841e924f47f9df6" translate="yes" xml:space="preserve">
          <source>This method will reset the inflation object &lt;code&gt;$i&lt;/code&gt;. It can be used when you are uncompressing multiple data streams and want to use the same object to uncompress each of them.</source>
          <target state="translated">이 메서드는 인플레이션 개체 &lt;code&gt;$i&lt;/code&gt; 재설정합니다 . 여러 데이터 스트림의 압축을 풀고 동일한 객체를 사용하여 각각의 압축을 풀고 싶을 때 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="105ad0604f1ec5de22899d40a47afc4c0ebd09fb" translate="yes" xml:space="preserve">
          <source>This method will return a &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object representing the current line of TAP.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;TAP::Parser::Result&quot;&gt;TAP&lt;/a&gt; 의 현재 줄을 나타내는 TAP :: Parser :: Result 개체 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c910df5717be7f7845368e614ada212ccc95c585" translate="yes" xml:space="preserve">
          <source>This method will return a &lt;a href=&quot;result&quot;&gt;TAP::Parser::Result&lt;/a&gt; object representing the current line of TAP.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;result&quot;&gt;TAP&lt;/a&gt; 의 현재 줄을 나타내는 TAP :: Parser :: Result 객체 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="94dd0495b55dbb9479c740e8c7707434102ef2b3" translate="yes" xml:space="preserve">
          <source>This method will return the</source>
          <target state="translated">이 메소드는</target>
        </trans-unit>
        <trans-unit id="64b72f6b7b9c90292fdf0c07acf00371c342b31f" translate="yes" xml:space="preserve">
          <source>This method will return the corresponding text of the paragraph.</source>
          <target state="translated">이 메서드는 단락의 해당 텍스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ab1780bb79394a56eb62561ff6bce59239ad7057" translate="yes" xml:space="preserve">
          <source>This method will validate facet data and return a list of errors. If no errors are found this will return an empty list.</source>
          <target state="translated">이 메서드는 패싯 데이터의 유효성을 검사하고 오류 목록을 반환합니다. 오류가 발견되지 않으면 빈 목록이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="eb400e4423b1637ce4c15ebb34457f31a6dff2be" translate="yes" xml:space="preserve">
          <source>This method, also added in 5.22, returns the ID of the outer padlist.</source>
          <target state="translated">5.22에 추가 된이 방법은 외부 padlist의 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4592c3f20e832c80ee7755d708e2fc413aad3a8b" translate="yes" xml:space="preserve">
          <source>This method, introduced in 5.22, returns an ID shared by clones of the same padlist.</source>
          <target state="translated">5.22에 도입 된이 방법은 동일한 padlist의 클론이 공유 한 ID를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9809e060290c8d05a80c630d780720e4ef068203" translate="yes" xml:space="preserve">
          <source>This method, introduced in 5.22, returns the B::PADNAMELIST. It is equivalent to &lt;code&gt;ARRAYelt&lt;/code&gt; with a 0 argument.</source>
          <target state="translated">5.22에 도입 된이 방법은 B :: PADNAMELIST를 반환합니다. 인수가 0 인 &lt;code&gt;ARRAYelt&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6e85228faab0626451baa8274321e8bb4a24e677" translate="yes" xml:space="preserve">
          <source>This method, which just calls &lt;code&gt;B::Concise::b_terse&lt;/code&gt;, has been deprecated, and disappeared in Perl 5.28. Please use &lt;code&gt;B::Concise&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;B::Concise::b_terse&lt;/code&gt; 호출하는이 메서드 는 더 이상 사용되지 않으며 Perl 5.28에서 사라졌습니다. 사용하십시오 &lt;code&gt;B::Concise&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="29b87abd8043418845a4e29d3099fa81c542084b" translate="yes" xml:space="preserve">
          <source>This model is also handy for a form of recursive programming where, rather than having a subroutine call itself, it instead creates another thread. Prime and Fibonacci generators both map well to this form of the pipeline model. (A version of a prime number generator is presented later on.)</source>
          <target state="translated">이 모델은 서브 루틴 호출 자체가 아닌 다른 스레드를 생성하는 재귀 프로그래밍 형식에도 유용합니다. 프라임 및 피보나치 생성기는 모두 이러한 형태의 파이프 라인 모델에 잘 매핑됩니다. 소수 생성기의 버전은 나중에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="30009f920550802cc665953dfad42c7d9264746f" translate="yes" xml:space="preserve">
          <source>This model is common in GUI and server programs, where a main thread waits for some event and then passes that event to the appropriate worker threads for processing. Once the event has been passed on, the boss thread goes back to waiting for another event.</source>
          <target state="translated">이 모델은 기본 스레드가 일부 이벤트를 기다린 다음 해당 이벤트를 처리하기 위해 해당 작업자 스레드로 전달하는 GUI 및 서버 프로그램에서 일반적입니다. 이벤트가 전달되면 보스 스레드는 다시 다른 이벤트를 대기합니다.</target>
        </trans-unit>
        <trans-unit id="b15bc8cde549f860c8eb7d12b3582c3e0ea39cf3" translate="yes" xml:space="preserve">
          <source>This model is particularly useful if the system running the program will distribute multiple threads across different processors. It can also be useful in ray tracing or rendering engines, where the individual threads can pass on interim results to give the user visual feedback.</source>
          <target state="translated">이 모델은 프로그램을 실행하는 시스템이 여러 프로세서에 여러 스레드를 분산시키는 경우에 특히 유용합니다. 또한 개별 스레드가 임시 결과를 전달하여 사용자에게 시각적 피드백을 제공 할 수있는 광선 추적 또는 렌더링 엔진에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a46d487d5e105c40547660dc27acaa14d80672b3" translate="yes" xml:space="preserve">
          <source>This model makes the most sense if you have multiple processors so two or more threads will be executing in parallel, though it can often make sense in other contexts as well. It tends to keep the individual tasks small and simple, as well as allowing some parts of the pipeline to block (on I/O or system calls, for example) while other parts keep going. If you're running different parts of the pipeline on different processors you may also take advantage of the caches on each processor.</source>
          <target state="translated">이 모델은 프로세서가 여러 개인 경우 두 개 이상의 스레드가 병렬로 실행되는 경우에 가장 적합하지만 다른 컨텍스트에서도 의미가 있습니다. 개별 작업을 작고 단순하게 유지하는 한편 파이프 라인의 일부를 차단 (예 : I / O 또는 시스템 호출)하는 동안 다른 부분은 계속 진행하는 경향이 있습니다. 파이프 라인의 다른 부분을 다른 프로세서에서 실행중인 경우 각 프로세서의 캐시를 활용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca5c3fc9e826014a4bf6c25dd9dfaa294e403640" translate="yes" xml:space="preserve">
          <source>This modifier is automatically selected by default when none of the others are, so yet another name for it is &quot;Default&quot;.</source>
          <target state="translated">이 수정자는 다른 설정이 없으면 기본적으로 자동으로 선택되므로 다른 이름은 &quot;Default&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="c04617ccf79d65516875370f2175f88d3d4536a0" translate="yes" xml:space="preserve">
          <source>This modifier is not portable, so its use should be restricted to &lt;code&gt;PerlIO_printf()&lt;/code&gt;.</source>
          <target state="translated">이 수정자는 이식 가능하지 않으므로 사용은 &lt;code&gt;PerlIO_printf()&lt;/code&gt; 로 제한되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7d496a068117111419859bc00c9612b716988f03" translate="yes" xml:space="preserve">
          <source>This modifier is useful for people who only incidentally use Unicode, and who do not wish to be burdened with its complexities and security concerns.</source>
          <target state="translated">이 수정자는 실수로 유니 코드 만 사용하고 복잡성과 보안 문제로 부담을 느끼고 싶지 않은 사람들에게 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0e5335d13a0034ff0e79330d63821913e0ac8c3f" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'unicode_strings&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; , or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (or higher), but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">이 수정하여 기본으로 지정할 수 있습니다 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale ':not_characters'&lt;/code&gt; , 또는 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use VERSION&lt;/a&gt;&lt;/code&gt; (또는 그 이상) 만 볼 &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;효과에 어떤 문자 집합을 수정? &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4e12be54768ee3b0c57bff3f17db521cb0aa4207" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 을 &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; 하여이 수정자를 기본값으로 지정할 수 있지만 &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;어떤 문자 세트 수정자가 유효한지&lt;/a&gt; 확인하십시오 . .</target>
        </trans-unit>
        <trans-unit id="7947231e9d8ba8a56b871805ba4f83e34edd5a3b" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/a'&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; . If you do so, you may actually have occasion to use the &lt;code&gt;/u&lt;/code&gt; modifier explicitly if there are a few regular expressions where you do want full Unicode rules (but even here, it's best if everything were under feature &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; , along with the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; ). Also see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;Which character set modifier is in effect?&lt;/a&gt;.</source>
          <target state="translated">이 수정하여 기본으로 지정할 수 있습니다 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/a'&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; . 그렇게하면 완전한 유니 코드 규칙을 원하는 정규 표현식이 몇 개인 경우 실제로 &lt;code&gt;/u&lt;/code&gt; 수정자를 명시 적으로 사용할 수 있습니다 (그러나 여기에서도 모든 것이 &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; 기능 과 함께 사용되는 것이 가장 좋습니다) . &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re '/aa'&lt;/code&gt; ). &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3f&quot;&gt;어떤 문자 세트 수정자가 유효한지&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="a33069e1e40dd1d406cb06f4820e8365f86b6a18" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use feature 'unicode_strings&lt;/code&gt;, &lt;code&gt;use locale ':not_characters'&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; (or higher), but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="translated">이 수정하여 기본으로 지정할 수 있습니다 &lt;code&gt;use feature 'unicode_strings&lt;/code&gt; , &lt;code&gt;use locale ':not_characters'&lt;/code&gt; , 또는 &lt;code&gt;&lt;a href=&quot;perlfunc#use-VERSION&quot;&gt;use 5.012&lt;/a&gt;&lt;/code&gt; (또는 그 이상)을하지만, 참조 &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;? &quot;설정 수정이 적용되는 어떤 캐릭터&quot; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2e323f49369cfd817dd3ab5eb35782378466587d" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use locale&lt;/code&gt;, but see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="translated">이 수정자는 &lt;code&gt;use locale&lt;/code&gt; 을 사용 하여 기본값으로 지정 될 수 있지만 &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;어떤 문자 집합 수정자가 적용됩니까?&quot;를 참조하십시오. &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e6e892a0b349e1ef5808e5c9bed02cfeaaecfdda" translate="yes" xml:space="preserve">
          <source>This modifier may be specified to be the default by &lt;code&gt;use re '/a'&lt;/code&gt; or &lt;code&gt;use re '/aa'&lt;/code&gt;. If you do so, you may actually have occasion to use the &lt;code&gt;/u&lt;/code&gt; modifier explicitly if there are a few regular expressions where you do want full Unicode rules (but even here, it's best if everything were under feature &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt;, along with the &lt;code&gt;use re '/aa'&lt;/code&gt;). Also see &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;Which character set modifier is in effect?&quot;&lt;/a&gt;.</source>
          <target state="translated">이 수정자는 &lt;code&gt;use re '/a'&lt;/code&gt; &lt;code&gt;use re '/aa'&lt;/code&gt; 하거나 re '/ aa' 를 사용 하여 기본값으로 지정 될 수 있습니다 . 이렇게하면, 당신은 실제로를 사용하는 기회를 가질 수있다 &lt;code&gt;/u&lt;/code&gt; 수정 명시 적으로 당신이 원하는 않는 몇 가지 정규 표현식이있을 경우 유니 코드 규칙 (그러나 심지어 여기에 모든 기능이 아래에 있다면, 그것은 최선의 방법 &lt;code&gt;&quot;unicode_strings&quot;&lt;/code&gt; 와 함께, &lt;code&gt;use re '/aa'&lt;/code&gt; ). &lt;a href=&quot;#Which-character-set-modifier-is-in-effect%3F&quot;&gt;&quot;어떤 문자 세트 수정자가 적용됩니까?&quot;&lt;/a&gt; 도 참조하십시오. .</target>
        </trans-unit>
        <trans-unit id="612208176f5e5f15f70f9fe87ffb9885ed3fb4f8" translate="yes" xml:space="preserve">
          <source>This modifier means to use the &quot;Default&quot; native rules of the platform except when there is cause to use Unicode rules instead, as follows:</source>
          <target state="translated">이 수정자는 다음과 같이 대신 유니 코드 규칙을 사용해야하는 경우를 제외하고 플랫폼의 &quot;기본&quot;기본 규칙을 사용함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c88a880096800aee300b8b7d7d4d916283e4a60a" translate="yes" xml:space="preserve">
          <source>This modifier stands for ASCII-restrict (or ASCII-safe). This modifier may be doubled-up to increase its effect.</source>
          <target state="translated">이 수정자는 ASCII 제한 (또는 ASCII 안전)을 나타냅니다. 이 수정자는 효과를 높이기 위해 두 배로 늘릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="749227e1bbfa4aaec7c32f6b70520da88bebf428" translate="yes" xml:space="preserve">
          <source>This modifier stands for ASCII-restrict (or ASCII-safe). This modifier, unlike the others, may be doubled-up to increase its effect.</source>
          <target state="translated">이 수정자는 ASCII 제한 (또는 ASCII 안전)을 나타냅니다. 이 수정자는 다른 수정 자와 달리 효과를 높이기 위해 두 배가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4333bd9c8e1ecf2d74d135cfc1c019d27ec9a46" translate="yes" xml:space="preserve">
          <source>This modifies the Test::Builder internals in many ways. A better was to accomplish the goal of this module is to write your own subtest function.</source>
          <target state="translated">이것은 여러 가지 방법으로 Test :: Builder 내부를 수정합니다. 이 모듈의 목표를 달성하는 것이 더 나은 방법은 자체 하위 테스트 기능을 작성하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fa6de4fa0b87cce4f41c3c3e6b2f399a24f53e8f" translate="yes" xml:space="preserve">
          <source>This module abstracts and provides all of the hooks into Perl internal debugging functionality, so that various implementations of Perl debuggers (or packages that want to simply get at the &quot;privileged&quot; debugging data) can all benefit from the development of this common code. Currently used by Swat, the perl/Tk GUI debugger.</source>
          <target state="translated">이 모듈은 Perl 내부 디버깅 기능에 대한 모든 후크를 추상화하고 제공하므로 Perl 디버거의 다양한 구현 (또는 &quot;권한이있는&quot;디버깅 데이터를 가져 오려는 패키지)이이 공통 코드 개발의 이점을 누릴 수 있습니다. 현재 perl / Tk GUI 디버거 인 Swat에서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6875f545409eef33a68dd7123f3a8648204e39c4" translate="yes" xml:space="preserve">
          <source>This module allows one to set this attribute on a subroutine that is already defined. For Perl subroutines (XSUBs are fine), it may or may not do what you want, depending on the code inside the subroutine, with details subject to change in future Perl versions. You may run into problems with lvalue context not being propagated properly into the subroutine, or maybe even assertion failures. For this reason, a warning is emitted if warnings are enabled. In other words, you should only do this if you really know what you are doing. You have been warned.</source>
          <target state="translated">이 모듈을 사용하면 이미 정의 된 서브 루틴에서이 속성을 설정할 수 있습니다. Perl 서브 루틴 (XSUB는 괜찮음)의 경우 서브 루틴 내부 코드에 따라 향후 Perl 버전에서 변경 될 수있는 세부 사항과 함께 원하는 것을 수행하거나 수행하지 않을 수 있습니다. lvalue 컨텍스트가 서브 루틴에 제대로 전파되지 않거나 어설 션 오류가 발생하는 문제가 발생할 수 있습니다. 이러한 이유로 경고가 활성화되면 경고가 발생합니다. 다시 말해서, 자신이하고있는 일을 정말로 알고있는 경우에만이를 수행해야합니다. 경고를 받았습니다.</target>
        </trans-unit>
        <trans-unit id="a965ba5c24e8c32086e33820dca8017e296c7bac" translate="yes" xml:space="preserve">
          <source>This module also adds a stack trace to the error message when perl dies. This is useful for pinpointing what caused the death. The &lt;b&gt;-traceonly&lt;/b&gt; (or just &lt;b&gt;-t&lt;/b&gt;) flag turns off the explanations of warning messages leaving just the stack traces. So if your script is dieing, run it again with</source>
          <target state="translated">이 모듈은 또한 perl이 죽을 때 오류 메시지에 스택 추적을 추가합니다. 이것은 사망 원인을 정확히 찾아내는 데 유용합니다. &lt;b&gt;-traceonly&lt;/b&gt; (또는 &lt;b&gt;-t&lt;/b&gt; 단지 스택 흔적을 남기지 경고 메시지의 설명 오프) 플래그집니다. 스크립트가 죽으면 다시 실행하십시오</target>
        </trans-unit>
        <trans-unit id="8f7fb6f3dfdd280d1b2872ffca7de6a38c89ca71" translate="yes" xml:space="preserve">
          <source>This module also provides a function &lt;code&gt;I18N::LangTags::List::is_decent( &lt;i&gt;langtag&lt;/i&gt; )&lt;/code&gt; that returns true iff the language tag is syntactically valid and is for general use (like &quot;fr&quot; or &quot;fr-ca&quot;, below). That is, it returns false for tags that are syntactically invalid and for tags, like &quot;aus&quot;, that are listed in brackets below. This function is not exported.</source>
          <target state="translated">이 모듈은 &lt;code&gt;I18N::LangTags::List::is_decent( &lt;i&gt;langtag&lt;/i&gt; )&lt;/code&gt; &lt;i&gt;langtag&lt;/i&gt; 기능도 제공합니다&lt;i&gt;&lt;/i&gt; 은 언어 태그가 구문 상 유효하고 일반적인 용도 (아래 &quot;fr&quot;또는 &quot;fr-ca&quot;등) 인 경우 true를 반환 ) . 즉, 구문 상 유효하지 않은 태그와 &quot;aus&quot;와 같이 아래 괄호 안에있는 태그에 대해서는 false를 반환합니다. 이 기능은 내보내지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="35c9fcef6d8c497b285988252e5e12636887688f" translate="yes" xml:space="preserve">
          <source>This module and its competitor, the CPANPLUS module, are both much cooler than the other. CPAN.pm is older. CPANPLUS was designed to be more modular, but it was never intended to be compatible with CPAN.pm.</source>
          <target state="translated">이 모듈과 경쟁사 인 CPANPLUS 모듈은 다른 모듈보다 훨씬 시원합니다. CPAN.pm이 이전 버전입니다. CPANPLUS는 모듈 식으로 설계되었지만 CPAN.pm과 호환되도록 설계되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="784f2f639e9afabf2dc275e208777379339cfa1d" translate="yes" xml:space="preserve">
          <source>This module attempts to be squeaky clean w.r.t &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; and when warnings are enabled.</source>
          <target state="translated">이 모듈 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; 경고가 활성화 된 경우</target>
        </trans-unit>
        <trans-unit id="99015cf6cbe9c998b9b79c332cc6306a7b24d6fc" translate="yes" xml:space="preserve">
          <source>This module attempts to be squeaky clean w.r.t &lt;code&gt;use strict;&lt;/code&gt; and when warnings are enabled.</source>
          <target state="translated">이 모듈은 삐걱 거리는 깨끗한 wrt &lt;code&gt;use strict;&lt;/code&gt; 시도합니다 . 경고가 활성화 된 경우.</target>
        </trans-unit>
        <trans-unit id="004ba23e4c1d9e020129a075fb1542d515c8beb8" translate="yes" xml:space="preserve">
          <source>This module by Jos Boumans &amp;lt;kane@cpan.org&amp;gt;.</source>
          <target state="translated">이 모듈은 Jos Boumans &amp;lt;kane@cpan.org&amp;gt;에서 제공합니다.</target>
        </trans-unit>
        <trans-unit id="97238c429acb2a106f71561828a9705c17f2cd68" translate="yes" xml:space="preserve">
          <source>This module can be used to check that the perl C API is behaving correctly. This module provides test functions and an associated test script that verifies the output.</source>
          <target state="translated">이 모듈은 perl C API가 올바르게 작동하는지 확인하는 데 사용할 수 있습니다. 이 모듈은 출력을 확인하는 테스트 기능 및 관련 테스트 스크립트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3512e67f1197d03fbeb001853d009060532cfa22" translate="yes" xml:space="preserve">
          <source>This module can build the C portions of Perl modules by invoking the appropriate compilers and linkers in a cross-platform manner. It was motivated by the &lt;code&gt;Module::Build&lt;/code&gt; project, but may be useful for other purposes as well. However, it is</source>
          <target state="translated">이 모듈은 적절한 컴파일러 및 링커를 크로스 플랫폼 방식으로 호출하여 Perl 모듈의 C 부분을 빌드 할 수 있습니다. &lt;code&gt;Module::Build&lt;/code&gt; 에서 동기를 부여했습니다. 프로젝트에 되었지만 다른 목적에도 유용 할 수 있습니다. 그러나 그것은</target>
        </trans-unit>
        <trans-unit id="26eefbe0903fb2ede95e48daeed0c357506e5da6" translate="yes" xml:space="preserve">
          <source>This module can provoke sizeable inefficiencies for regular expressions, due to unfortunate implementation details. If performance matters in your application and you don't need $PREMATCH, $MATCH, or $POSTMATCH, try doing</source>
          <target state="translated">이 모듈은 불행한 구현 세부 사항으로 인해 정규 표현식에 대해 상당한 비 효율성을 유발할 수 있습니다. 응용 프로그램에서 성능이 중요하고 $ PREMATCH, $ MATCH 또는 $ POSTMATCH가 필요하지 않은 경우</target>
        </trans-unit>
        <trans-unit id="8cf5ae089cfd3bb924112f109262d970297de9cc" translate="yes" xml:space="preserve">
          <source>This module can read, modify, create and write Perl XS typemap files. If you don't know what a typemap is, please confer the &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; and &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; manuals.</source>
          <target state="translated">이 모듈은 Perl XS 타입 맵 파일을 읽고, 수정하고, 만들고, 쓸 수 있습니다. 타입 맵이 무엇인지 모른다면 &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; 및 &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; 매뉴얼을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e29d99feceeb44433f425fbac43b49ef593d502" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; : it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">이 모듈은 현대 펄 (5.10 이상)과 고대 낡은 펄용의 두 가지 맛이 있습니다. 최신 perls 버전은 유니 코드를 지원합니다. 이전 perls의 버전은 그렇지 않습니다. 당신은 당신이보고 설치 한 버전을 알 수 있습니다 &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; : 그것이 &lt;code&gt;old&lt;/code&gt; 쓸모 perls과 &lt;code&gt;modern&lt;/code&gt; 현재 perls합니다.</target>
        </trans-unit>
        <trans-unit id="3f246357be0ea9a19a9c26640bdecebe65636361" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt;: it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">이 모듈은 두 가지 형태로 제공됩니다. 하나는 최신 펄 (5.10 이상) 용이고 다른 하나는 오래된 오래된 펄용입니다. 최신 perls 용 버전은 유니 코드를 지원합니다. 이전 perls 용 버전은 그렇지 않습니다. 당신은 당신이보고 설치 한 버전을 알 수 있습니다 &lt;code&gt;$Text::Tabs::SUBVERSION&lt;/code&gt; : 그것이 &lt;code&gt;old&lt;/code&gt; 쓸모 perls과 &lt;code&gt;modern&lt;/code&gt; 현재 perls합니다.</target>
        </trans-unit>
        <trans-unit id="febd1d0bc1aeb9c9dc580b98ecebabe324968f11" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; : it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">이 모듈은 현대 펄 (5.10 이상)과 고대 낡은 펄용의 두 가지 맛이 있습니다. 최신 perls 버전은 유니 코드를 지원합니다. 이전 perls의 버전은 그렇지 않습니다. 당신은 당신이보고 설치 한 버전을 알 수 있습니다 &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; : 그것이 &lt;code&gt;old&lt;/code&gt; 쓸모 perls과 &lt;code&gt;modern&lt;/code&gt; 현재 perls합니다.</target>
        </trans-unit>
        <trans-unit id="09b0dd2743438f4a098031d43325e1efa58a9e72" translate="yes" xml:space="preserve">
          <source>This module comes in two flavors: one for modern perls (5.10 and above) and one for ancient obsolete perls. The version for modern perls has support for Unicode. The version for old perls does not. You can tell which version you have installed by looking at &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt;: it is &lt;code&gt;old&lt;/code&gt; for obsolete perls and &lt;code&gt;modern&lt;/code&gt; for current perls.</source>
          <target state="translated">이 모듈은 두 가지 형태로 제공됩니다. 하나는 최신 펄 (5.10 이상) 용이고 다른 하나는 오래된 오래된 펄용입니다. 최신 perls 용 버전은 유니 코드를 지원합니다. 이전 perls 용 버전은 그렇지 않습니다. 당신은 당신이보고 설치 한 버전을 알 수 있습니다 &lt;code&gt;$Text::Wrap::SUBVERSION&lt;/code&gt; : 그것이 &lt;code&gt;old&lt;/code&gt; 쓸모 perls과 &lt;code&gt;modern&lt;/code&gt; 현재 perls합니다.</target>
        </trans-unit>
        <trans-unit id="d14a28688b621d987b1f8fc9e23815cd4abf0ed8" translate="yes" xml:space="preserve">
          <source>This module contains a good example of how to use tie to implement a cache and an example of how to make a tied variable readonly to those outside of it.</source>
          <target state="translated">이 모듈에는 tie를 사용하여 캐시를 구현하는 방법과 묶인 변수를 읽기 전용으로 만드는 방법에 대한 좋은 예가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d311a4e7a3db9109ca676b3552f311797aef79ac" translate="yes" xml:space="preserve">
          <source>This module contains methods to test the reachability of remote hosts on a network. A ping object is first created with optional parameters, a variable number of hosts may be pinged multiple times and then the connection is closed.</source>
          <target state="translated">이 모듈에는 네트워크에서 원격 호스트의 연결 가능성을 테스트하는 방법이 포함되어 있습니다. 핑 개체는 먼저 선택적 매개 변수를 사용하여 만들어지며 가변 수의 호스트가 여러 번 핑될 수 있으며 연결이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="e7ab97b3c83db0e719a01ba25468a109c4526c8d" translate="yes" xml:space="preserve">
          <source>This module contains utility subroutines for abstracting away the underlying magic of autodie and (ab)uses of &lt;code&gt;%^H&lt;/code&gt; to call subs at the end of a (compile-time) scopes.</source>
          <target state="translated">이 모듈에는 autodie의 기본 마법을 추상화하기위한 유틸리티 서브 루틴과 (컴파일 타임) 범위의 끝에서 서브를 호출하기위한 &lt;code&gt;%^H&lt;/code&gt; 의 (ab) 사용이 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d790b22a57580f55f37ab95818cba0bc38ecd0b0" translate="yes" xml:space="preserve">
          <source>This module converts CPAN Meta structures from one form to another. The primary use is to convert older structures to the most modern version of the specification, but other transformations may be implemented in the future as needed. (E.g. stripping all custom fields or stripping all optional fields.)</source>
          <target state="translated">이 모듈은 CPAN 메타 구조를 한 형식에서 다른 형식으로 변환합니다. 주된 용도는 이전 구조를 최신 버전의 사양으로 변환하는 것이지만, 필요에 따라 향후 다른 변환이 구현 될 수 있습니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ (예 : 모든 사용자 정의 필드를 제거하거나 모든 선택 필드를 제거합니다.)</target>
        </trans-unit>
        <trans-unit id="0e0177cabfcfd905cc13252e41134159a6c784e5" translate="yes" xml:space="preserve">
          <source>This module deals with a lot of system dependencies and has quite a few architecture specific &lt;code&gt;if&lt;/code&gt; s in the code.</source>
          <target state="translated">이 모듈 시스템 종속성의 많은 거래와 꽤 아키텍처 특정이 &lt;code&gt;if&lt;/code&gt; 코드에들.</target>
        </trans-unit>
        <trans-unit id="d165975e418f48b0068ea6e4916ced218ae66175" translate="yes" xml:space="preserve">
          <source>This module deals with a lot of system dependencies and has quite a few architecture specific &lt;code&gt;if&lt;/code&gt;s in the code.</source>
          <target state="translated">이 모듈은 많은 시스템 종속성을 다루며 코드에있는 &lt;code&gt;if&lt;/code&gt; 특정 아키텍처가 상당히 많습니다 .</target>
        </trans-unit>
        <trans-unit id="048af0729c3efd4457ee6a9d255333490a26b61d" translate="yes" xml:space="preserve">
          <source>This module defines a standard</source>
          <target state="translated">이 모듈은 표준을 정의합니다</target>
        </trans-unit>
        <trans-unit id="ccc077b805dfb6d70b724e9bdd6fb4fe5347a6c3" translate="yes" xml:space="preserve">
          <source>This module defines one public function, &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; . This function is not exported (nor is even exportable), and it takes no parameters.</source>
          <target state="translated">이 모듈은 하나의 공용 함수 &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; 합니다. 이 함수는 익스포트되지 않으며 (아직 익스포트 가능하지 않음) 매개 변수를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86eec5c4aa5efea45745f52bda7e4b24c847a408" translate="yes" xml:space="preserve">
          <source>This module defines one public function, &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt;. This function is not exported (nor is even exportable), and it takes no parameters.</source>
          <target state="translated">이 모듈은 하나의 공용 함수 &lt;code&gt;I18N::LangTags::Detect::detect()&lt;/code&gt; 합니다. 이 함수는 내보내지지 않으며 (내보낼 수도 없음) 매개 변수를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d9f93c560d9ab4f740a2b97f280df75095aa9c1e" translate="yes" xml:space="preserve">
          <source>This module defines some basic input objects used by &lt;b&gt;Pod::Parser&lt;/b&gt; when reading and parsing POD text from an input source. The following objects are defined:</source>
          <target state="translated">이 모듈은 입력 소스에서 POD 텍스트를 읽고 구문 분석 할 때 &lt;b&gt;Pod :: Parser&lt;/b&gt; 가 사용하는 몇 가지 기본 입력 오브젝트를 정의합니다 . 다음과 같은 객체가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5588b6a383faab0057a18646001f16348459eef2" translate="yes" xml:space="preserve">
          <source>This module defines three public functions, &lt;code&gt;plan(...)&lt;/code&gt; , &lt;code&gt;ok(...)&lt;/code&gt; , and &lt;code&gt;skip(...)&lt;/code&gt; . By default, all three are exported by the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Test;&lt;/code&gt; statement.</source>
          <target state="translated">이 모듈은 &lt;code&gt;plan(...)&lt;/code&gt; , &lt;code&gt;ok(...)&lt;/code&gt; 및 &lt;code&gt;skip(...)&lt;/code&gt; 세 가지 공용 함수를 정의합니다 . 기본적으로 세 가지 모두 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; Test;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; 으로 내보내집니다 . 성명서.</target>
        </trans-unit>
        <trans-unit id="753823d787f9b4eb6fa8a5cbc51058ee11d7dd83" translate="yes" xml:space="preserve">
          <source>This module defines three public functions, &lt;code&gt;plan(...)&lt;/code&gt;, &lt;code&gt;ok(...)&lt;/code&gt;, and &lt;code&gt;skip(...)&lt;/code&gt;. By default, all three are exported by the &lt;code&gt;use Test;&lt;/code&gt; statement.</source>
          <target state="translated">이 모듈은 &lt;code&gt;plan(...)&lt;/code&gt; , &lt;code&gt;ok(...)&lt;/code&gt; 및 &lt;code&gt;skip(...)&lt;/code&gt; 세 가지 공용 함수를 정의합니다 . 기본적으로 세 가지 모두 &lt;code&gt;use Test;&lt;/code&gt; 하여 내 보냅니다. 성명서.</target>
        </trans-unit>
        <trans-unit id="fd200c0735cc5781411adf38498d8ea6b289e130" translate="yes" xml:space="preserve">
          <source>This module directly uses hash keys in the &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; singleton. This module is also obsolete thanks to the benefits of &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. Use &lt;code&gt;intercept()&lt;/code&gt; from &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; to achieve a similar result.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt; 싱글 톤 에서 해시 키를 직접 사용합니다 . 이 모듈은 &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt; 의 이점으로 인해 더 이상 사용되지 않습니다 . 비슷한 결과를 얻으려면 &lt;a href=&quot;Test2::API&quot;&gt;Test2 :: API의 &lt;/a&gt; &lt;code&gt;intercept()&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d26bb4e43183e0559ebca4dee112bd3a0d0b364" translate="yes" xml:space="preserve">
          <source>This module encapsulates reading &lt;a href=&quot;../cpan&quot;&gt;Distroprefs&lt;/a&gt; and matching them against CPAN distributions.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;../cpan&quot;&gt;Distropref&lt;/a&gt; 읽기를 캡슐화 하여 CPAN 분포와 비교합니다.</target>
        </trans-unit>
        <trans-unit id="9be6ae2c9023c3906f7ade946637f011010709ad" translate="yes" xml:space="preserve">
          <source>This module encapsulates reading &lt;a href=&quot;cpan&quot;&gt;Distroprefs&lt;/a&gt; and matching them against CPAN distributions.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;cpan&quot;&gt;Distropref&lt;/a&gt; 읽기를 캡슐화 하고 CPAN 분포와 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="0c9dfd5842361144dbb1663f5f104740841b03d0" translate="yes" xml:space="preserve">
          <source>This module ensures that all data written to the DBM file is null terminated. This is useful when you have a perl script that needs to interoperate with a DBM file that a C program also uses. A fairly common issue is for the C application to include the terminating null in a string when it writes to the DBM file. This filter will ensure that all data written to the DBM file can be read by the C application.</source>
          <target state="translated">이 모듈은 DBM 파일에 기록 된 모든 데이터가 널 종료되도록합니다. 이는 C 프로그램이 사용하는 DBM 파일과 상호 운용해야하는 perl 스크립트가있는 경우 유용합니다. 상당히 일반적인 문제는 C 애플리케이션이 DBM 파일에 쓸 때 문자열에 종료 널을 포함시키는 것입니다. 이 필터는 C 응용 프로그램이 DBM 파일에 기록 된 모든 데이터를 읽을 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="0972ca2731097996c9289706d9b5ff6a965c399a" translate="yes" xml:space="preserve">
          <source>This module exists only to provide overload resolution for Storable and similar modules. See &lt;a href=&quot;JSON::PP&quot;&gt;JSON::PP&lt;/a&gt; for more info about this class.</source>
          <target state="translated">이 모듈은 저장 가능 및 유사한 모듈에 대한 과부하 해결을 제공하기 위해서만 존재합니다. 이 클래스에 대한 자세한 내용은 &lt;a href=&quot;JSON::PP&quot;&gt;JSON :: PP&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd7e8d1d3170c6e8daec0f86fc59011732a6349b" translate="yes" xml:space="preserve">
          <source>This module exports convenience functions for all of the class methods provided by File::Spec.</source>
          <target state="translated">이 모듈은 File :: Spec에서 제공하는 모든 클래스 메소드에 대한 편의 기능을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="225bff521140d6082b4081701a5c9f07eb77dbdc" translate="yes" xml:space="preserve">
          <source>This module exports exactly one function, &lt;code&gt;memoize&lt;/code&gt; . The rest of the functions in this package are None of Your Business.</source>
          <target state="translated">이 모듈은 정확히 하나의 함수, &lt;code&gt;memoize&lt;/code&gt; 를 내 보냅니다 . 이 패키지의 나머지 기능은 귀하의 비즈니스에 국한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c756efb0d722016c58146ce901d559a7e357a513" translate="yes" xml:space="preserve">
          <source>This module exports exactly one function, &lt;code&gt;memoize&lt;/code&gt;. The rest of the functions in this package are None of Your Business.</source>
          <target state="translated">이 모듈은 정확히 하나의 함수 인 &lt;code&gt;memoize&lt;/code&gt; 를 내 보냅니다 . 이 패키지의 나머지 기능은 귀하의 비즈니스가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7a437808a72f5186bb9fb8b3d0a47bad3b6c57c9" translate="yes" xml:space="preserve">
          <source>This module exports several subroutines from the older event API (see &lt;a href=&quot;Test2::Event&quot;&gt;Test2::Event&lt;/a&gt;). These subroutines can be used as methods on any object that provides a custom &lt;code&gt;facet_data()&lt;/code&gt; method. These subroutines can also be used as functions that take a facet data hashref as arguments.</source>
          <target state="translated">이 모듈은 이전 이벤트 API에서 여러 서브 루틴을 내 보냅니다 ( &lt;a href=&quot;Test2::Event&quot;&gt;Test2 :: Event&lt;/a&gt; 참조 ). 이러한 서브 루틴은 사용자 정의 &lt;code&gt;facet_data()&lt;/code&gt; 메서드 를 제공하는 모든 개체의 메서드로 사용할 수 있습니다 . 이러한 서브 루틴은 패싯 데이터 해시 참조를 인수로 사용하는 함수로도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b53f8e98717e2df0ba097b4ab532a6f74e551ea4" translate="yes" xml:space="preserve">
          <source>This module exports two functions by default, &lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt; .</source>
          <target state="translated">이 모듈은 기본적으로 &lt;code&gt;timelocal()&lt;/code&gt; 및 &lt;code&gt;timegm()&lt;/code&gt; 두 함수를 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="6f39641613ab5773d894c474a71a45df157f1238" translate="yes" xml:space="preserve">
          <source>This module exports two functions by default, &lt;code&gt;timelocal()&lt;/code&gt; and &lt;code&gt;timegm()&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 기본적으로 &lt;code&gt;timelocal()&lt;/code&gt; 및 &lt;code&gt;timegm()&lt;/code&gt; 두 가지 함수를 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="d62e7ee6ec8e2b5b39029ab7ee6ccd36cf4dfeb9" translate="yes" xml:space="preserve">
          <source>This module extends the terse diagnostics normally emitted by both the perl compiler and the perl interpreter (from running perl with a -w switch or &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; ), augmenting them with the more explicative and endearing descriptions found in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;. Like the other pragmata, it affects the compilation phase of your program rather than merely the execution phase.</source>
          <target state="translated">이 모듈은 perl 컴파일러와 perl 인터프리터 (일반적으로 -w 스위치를 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; 하여 perl을 실행하거나 경고를 사용하여 )에서 발생하는 간결한 진단을 확장하여 &lt;a href=&quot;perldiag&quot;&gt;perldiag에&lt;/a&gt; 있는보다 설명적이고 사랑스러운 설명으로 기능을 보강합니다 . 다른 pragmata와 마찬가지로 실행 단계가 아닌 프로그램의 컴파일 단계에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="d517678ea3b2b09bdfcb6b56d92700cd53a59e04" translate="yes" xml:space="preserve">
          <source>This module extends the terse diagnostics normally emitted by both the perl compiler and the perl interpreter (from running perl with a -w switch or &lt;code&gt;use warnings&lt;/code&gt;), augmenting them with the more explicative and endearing descriptions found in &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;. Like the other pragmata, it affects the compilation phase of your program rather than merely the execution phase.</source>
          <target state="translated">이 모듈은 perl 컴파일러와 perl 인터프리터 (-w 스위치를 &lt;code&gt;use warnings&lt;/code&gt; 하여 perl을 실행하거나 경고를 사용하여 )에서 일반적으로 내 보낸 간결한 진단을 확장하여 &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; 에서 발견되는보다 설명적이고 사랑스러운 설명을 추가 합니다. 다른 pragmata와 마찬가지로 단순히 실행 단계가 아닌 프로그램의 컴파일 단계에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="b01dd0d6475dbad2f311d0d4cb1dacdbdfac4d66" translate="yes" xml:space="preserve">
          <source>This module has a test that appears to work around a Test::Builder bug. The bug appears to have been fixed by Test2, which means the workaround causes a failure. This can be easily updated, but nobody has done so yet.</source>
          <target state="translated">이 모듈에는 Test :: Builder 버그를 해결하는 것으로 보이는 테스트가 있습니다. 이 버그는 Test2에 의해 수정 된 것으로 보이며 이는 해결 방법으로 인해 오류가 발생 함을 의미합니다. 이것은 쉽게 업데이트 할 수 있지만 아직 아무도 업데이트하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="594092911e1167036ea965c7893b43a507a34b66" translate="yes" xml:space="preserve">
          <source>This module has been deprecated since perl v5.18. See &lt;a href=&quot;#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot;&lt;/a&gt; and &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 perl v5.18부터 사용되지 않습니다. &lt;a href=&quot;#DESCRIPTION&quot;&gt;&quot;DESCRIPTION&quot;&lt;/a&gt; 및 &lt;a href=&quot;#BUGS&quot;&gt;&quot;BUGS&quot;를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ec683936a1587c1835f23fd06a510bf338b7e80" translate="yes" xml:space="preserve">
          <source>This module has been deprecated since perl v5.18. See &lt;a href=&quot;#DESCRIPTION&quot;&gt;DESCRIPTION&lt;/a&gt; and &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 perl v5.18부터 더 이상 사용되지 않습니다. &lt;a href=&quot;#DESCRIPTION&quot;&gt;DESCRIPTION&lt;/a&gt; 및 &lt;a href=&quot;#BUGS&quot;&gt;버그를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd94517622a9ab314f7601e60ecd6670f3bc957d" translate="yes" xml:space="preserve">
          <source>This module has two interfaces, one through color() and colored() and the other through constants. It also offers the utility functions uncolor(), colorstrip(), colorvalid(), and coloralias(), which have to be explicitly imported to be used (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt;).</source>
          <target state="translated">이 모듈에는 color () 및 colors ()를 통한 인터페이스와 상수를 통한 인터페이스의 두 가지가 있습니다. 또한 사용하려면 명시 적으로 가져와야하는 유틸리티 함수 uncolor (), colorstrip (), colorvalid () 및 coloralias ()를 제공합니다 ( &lt;a href=&quot;#SYNOPSIS&quot;&gt;&quot;SYNOPSIS&quot;&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2117e00acdbd9807a78cbd1ea4a675762026720f" translate="yes" xml:space="preserve">
          <source>This module has two interfaces, one through color() and colored() and the other through constants. It also offers the utility functions uncolor(), colorstrip(), colorvalid(), and coloralias(), which have to be explicitly imported to be used (see &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;).</source>
          <target state="translated">이 모듈에는 하나의 color () 및 colored () 인터페이스와 상수를 통한 인터페이스가 있습니다. 또한 uncolor (), colorstrip (), colorvalid () 및 coloralias ()와 같은 유틸리티 함수를 제공하며,이를 사용하려면 명시 적으로 가져와야합니다 ( &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ff8b16c231dc1d713254a7cb8a480c66e2ae1bd1" translate="yes" xml:space="preserve">
          <source>This module implements &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; MIME encoding for an unstructured field body of the email header. It can also be used for &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; 'text' token. However, it cannot be used directly for the whole header with the field name or for the structured header fields like From, To, Cc, Message-Id, etc... There are 3 encoding names supported by this module: &lt;code&gt;MIME-Header&lt;/code&gt;, &lt;code&gt;MIME-B&lt;/code&gt; and &lt;code&gt;MIME-Q&lt;/code&gt;.</source>
          <target state="translated">이 모듈 은 이메일 헤더의 구조화되지 않은 필드 본문에 대해 &lt;a href=&quot;https://tools.ietf.org/html/rfc2047&quot;&gt;RFC 2047&lt;/a&gt; MIME 인코딩을 구현 합니다. &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; '텍스트'토큰 에도 사용할 수 있습니다 . 그러나 필드 이름이있는 전체 헤더 또는 From, To, Cc, Message-Id 등과 같은 구조화 된 헤더 필드에는 직접 사용할 수 없습니다.이 모듈에서 지원하는 인코딩 이름은 &lt;code&gt;MIME-Header&lt;/code&gt; , &lt;code&gt;MIME-B&lt;/code&gt; 및 &lt;code&gt;MIME-Q&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b510432f8750d5bbad1de7af5fced7b88ef44df" translate="yes" xml:space="preserve">
          <source>This module implements China-based Chinese charset encodings. Encodings supported are as follows.</source>
          <target state="translated">이 모듈은 중국 기반 중국어 문자셋 인코딩을 구현합니다. 지원되는 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="18f94573bd55ebab6dfdf33a299319140ec5bdab" translate="yes" xml:space="preserve">
          <source>This module implements Japanese charset encodings. Encodings supported are as follows.</source>
          <target state="translated">이 모듈은 일본어 문자셋 인코딩을 구현합니다. 지원되는 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="85a823a7495a5d305f8dfc87daf3a9452bf40405" translate="yes" xml:space="preserve">
          <source>This module implements Korean charset encodings. Encodings supported are as follows.</source>
          <target state="translated">이 모듈은 한국어 문자셋 인코딩을 구현합니다. 지원되는 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1ac6b792bfff4da11b88119131c465048e55ab98" translate="yes" xml:space="preserve">
          <source>This module implements RFC 2047 Mime Header Encoding. There are 3 variant encoding names; &lt;code&gt;MIME-Header&lt;/code&gt; , &lt;code&gt;MIME-B&lt;/code&gt; and &lt;code&gt;MIME-Q&lt;/code&gt; . The difference is described below</source>
          <target state="translated">이 모듈은 RFC 2047 Mime 헤더 인코딩을 구현합니다. 세 가지 변형 인코딩 이름이 있습니다. &lt;code&gt;MIME-Header&lt;/code&gt; , &lt;code&gt;MIME-B&lt;/code&gt; 및 &lt;code&gt;MIME-Q&lt;/code&gt; . 차이점은 아래에 설명되어 있습니다</target>
        </trans-unit>
        <trans-unit id="fd2c9a90ea8e309e706421846f519bfe977d609d" translate="yes" xml:space="preserve">
          <source>This module implements UTF-7 encoding documented in RFC 2152. UTF-7, as its name suggests, is a 7-bit re-encoded version of UTF-16BE. It is designed to be MTA-safe and expected to be a standard way to exchange Unicoded mails via mails. But with the advent of UTF-8 and 8-bit compliant MTAs, UTF-7 is hardly ever used.</source>
          <target state="translated">이 모듈은 RFC 2152에 문서화 된 UTF-7 인코딩을 구현합니다. UTF-7은 이름에서 알 수 있듯이 UTF-16BE의 7 비트 재 인코딩 된 버전입니다. MTA 안전하도록 설계되었으며 메일을 통해 유니 코드 메일을 교환하는 표준 방법이 될 것으로 예상됩니다. 그러나 UTF-8 및 8 비트 호환 MTA의 출현으로 UTF-7은 거의 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6a778bf541b175d3967361a621a9111e411a3873" translate="yes" xml:space="preserve">
          <source>This module implements a PerlIO layer that works on files encoded in the quoted-printable format. It will decode from quoted-printable while reading from a handle, and it will encode as quoted-printable while writing to a handle.</source>
          <target state="translated">이 모듈은 인용 인쇄 가능한 형식으로 인코딩 된 파일에서 작동하는 PerlIO 계층을 구현합니다. 핸들에서 읽는 동안 따옴표로 묶은 인쇄 가능에서 디코딩되고 핸들에 쓰는 동안 따옴표로 묶은 인쇄 가능으로 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="ed550b03d65e4b729769320dd5e86c30fc421672" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the POP3 protocol, enabling a perl5 application to talk to POP3 servers. This documentation assumes that you are familiar with the POP3 protocol described in RFC1939.</source>
          <target state="translated">이 모듈은 POP3 프로토콜에 대한 클라이언트 인터페이스를 구현하여 perl5 애플리케이션이 POP3 서버와 통신 할 수 있도록합니다. 이 문서는 사용자가 RFC1939에 설명 된 POP3 프로토콜에 익숙하다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ed6c1f3c1c0cdf48fd7b4bf4c3f2799a1d9ccec9" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the POP3 protocol, enabling a perl5 application to talk to POP3 servers. This documentation assumes that you are familiar with the POP3 protocol described in RFC1939. With &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it also provides support for implicit and explicit TLS encryption, i.e. POP3S or POP3+STARTTLS.</source>
          <target state="translated">이 모듈은 POP3 프로토콜에 대한 클라이언트 인터페이스를 구현하여 perl5 애플리케이션이 POP3 서버와 통신 할 수 있도록합니다. 이 문서에서는 사용자가 RFC1939에 설명 된 POP3 프로토콜에 익숙하다고 가정합니다. 로 &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO :: 소켓 :: SSL은&lt;/a&gt; 또한 암시 적 및 명시 적 TLS 암호화, 즉 POP3S 또는 POP3 + STARTTLS에 대한 지원을 제공합니다 설치.</target>
        </trans-unit>
        <trans-unit id="ee8852ef106e152ea9b50dda8dd1b7e4ef5a1d79" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the SMTP and ESMTP protocol, enabling a perl5 application to talk to SMTP servers. This documentation assumes that you are familiar with the concepts of the SMTP protocol described in RFC2821. With &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO::Socket::SSL&lt;/a&gt; installed it also provides support for implicit and explicit TLS encryption, i.e. SMTPS or SMTP+STARTTLS.</source>
          <target state="translated">이 모듈은 SMTP 및 ESMTP 프로토콜에 대한 클라이언트 인터페이스를 구현하여 perl5 애플리케이션이 SMTP 서버와 통신 할 수 있도록합니다. 이 문서에서는 사용자가 RFC2821에 설명 된 SMTP 프로토콜의 개념에 익숙하다고 가정합니다. 로 &lt;a href=&quot;IO::Socket::SSL&quot;&gt;IO :: 소켓 :: SSL은&lt;/a&gt; 또한 암시 적 및 명시 적 TLS 암호화, 즉 SMTPS 또는 SMTP + STARTTLS에 대한 지원을 제공합니다 설치.</target>
        </trans-unit>
        <trans-unit id="f3343630b02b7f19c2e9f15e0bc9d4d62bafd5e3" translate="yes" xml:space="preserve">
          <source>This module implements a client interface to the SMTP and ESMTP protocol, enabling a perl5 application to talk to SMTP servers. This documentation assumes that you are familiar with the concepts of the SMTP protocol described in RFC821.</source>
          <target state="translated">이 모듈은 SMTP 및 ESMTP 프로토콜에 대한 클라이언트 인터페이스를 구현하여 perl5 애플리케이션이 SMTP 서버와 통신 할 수 있도록합니다. 이 문서는 사용자가 RFC821에 설명 된 SMTP 프로토콜의 개념에 익숙하다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="a98fb3b26850ae6b1ffeeed7c797dcc990c08524" translate="yes" xml:space="preserve">
          <source>This module implements a subset of the YAML specification for use in reading and writing CPAN metadata files like</source>
          <target state="translated">이 모듈은 다음과 같은 CPAN 메타 데이터 파일을 읽고 쓰는 데 사용하기 위해 YAML 사양의 하위 집합을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="208a0fbb6b2b9365a0b457c6e7c2a20c4ee8bdbb" translate="yes" xml:space="preserve">
          <source>This module implements all Character Encoding Schemes of Unicode that are officially documented by Unicode Consortium (except, of course, for UTF-8, which is a native format in perl).</source>
          <target state="translated">이 모듈은 공식적으로 유니 코드 컨소시엄에서 문서화 한 모든 유니 코드 문자 인코딩 체계를 구현합니다 (물론 perl의 기본 형식 인 UTF-8 제외).</target>
        </trans-unit>
        <trans-unit id="4a5fc149cac5c063339467ffcf19fbcbdd274ebc" translate="yes" xml:space="preserve">
          <source>This module implements symbol and dingbats encodings. Encodings supported are as follows.</source>
          <target state="translated">이 모듈은 심볼 및 딩뱃 인코딩을 구현합니다. 지원되는 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="91d2629cfba9471ae750b605c30149641a050967" translate="yes" xml:space="preserve">
          <source>This module implements the Windows-specific parts of ExtUtils::CBuilder. Most of the Windows-specific stuff has to do with compiling and linking C code. Currently we support the 3 compilers perl itself supports: MSVC, BCC, and GCC.</source>
          <target state="translated">이 모듈은 ExtUtils :: CBuilder의 Windows 특정 부분을 구현합니다. 대부분의 Windows 관련 항목은 C 코드 컴파일 및 링크와 관련이 있습니다. 현재 우리는 3 개의 컴파일러 perl 자체를 지원합니다 : MSVC, BCC 및 GCC.</target>
        </trans-unit>
        <trans-unit id="b2e6ff1b1b109fdc596717b451bfa277cebdbf15" translate="yes" xml:space="preserve">
          <source>This module implements the environmental variables that &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; uses with TAP::Harness, and instantiates the appropriate class with the appropriate arguments.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness&lt;/a&gt; 가 TAP :: Harness와 함께 사용 하는 환경 변수를 구현 하고 적절한 인수를 사용하여 적절한 클래스를 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="f9fa4e0ad3f8d3bc6d28f8c2e962b8d03cb9cfa8" translate="yes" xml:space="preserve">
          <source>This module implements tradition Chinese charset encodings as used in Taiwan and Hong Kong. Encodings supported are as follows.</source>
          <target state="translated">이 모듈은 대만과 홍콩에서 사용되는 중국어 번체 문자셋 인코딩을 구현합니다. 지원되는 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6d3abe1f6aae133c8268ef4a9c7e2b3f247e4b85" translate="yes" xml:space="preserve">
          <source>This module implements various EBCDIC-Based encodings. Encodings supported are as follows.</source>
          <target state="translated">이 모듈은 다양한 EBCDIC 기반 인코딩을 구현합니다. 지원되는 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="71223016b72a87a85df3e296ab0f30c149dbcfa6" translate="yes" xml:space="preserve">
          <source>This module implements various single byte encodings. For most cases it uses \x80-\xff (upper half) to map non-ASCII characters. Encodings supported are as follows.</source>
          <target state="translated">이 모듈은 다양한 단일 바이트 인코딩을 구현합니다. 대부분의 경우 \ x80- \ xff (상반부)를 사용하여 비 ASCII 문자를 매핑합니다. 지원되는 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc2e021c9aa08753ca094f4f9555269ba3008c18" translate="yes" xml:space="preserve">
          <source>This module inherits from &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; , so any functionality not implemented here will be implemented there. The interfaces are defined by the &lt;a href=&quot;../../cbuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt; documentation.</source>
          <target state="translated">이 모듈은 &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; 에서 상속 받으 므로 여기에 구현되지 않은 기능은 여기에서 구현됩니다. 인터페이스는 &lt;a href=&quot;../../cbuilder&quot;&gt;ExtUtils :: CBuilder&lt;/a&gt; 문서에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="dbd924370062e7829b2938e0ae1c44db508d0978" translate="yes" xml:space="preserve">
          <source>This module inherits from &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt;, so any functionality not implemented here will be implemented there. The interfaces are defined by the &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt; documentation.</source>
          <target state="translated">이 모듈은 &lt;code&gt;ExtUtils::CBuilder::Base&lt;/code&gt; 에서 상속 되므로 여기에서 구현되지 않은 모든 기능이 여기에서 구현됩니다. 인터페이스는 &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils :: CBuilder&lt;/a&gt; 문서에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="19da1ff10a7249eedb446c4c19eb17fbb02bae8e" translate="yes" xml:space="preserve">
          <source>This module internally uses the epoch seconds system that is provided via the perl &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; function and supported by &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 perl &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time()&lt;/a&gt;&lt;/code&gt; 함수 를 통해 제공 되고 &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; 지원 하는 에포크 초 시스템을 내부적으로 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="61f8df0862f677bbaf5b909f320f35cfb703f533" translate="yes" xml:space="preserve">
          <source>This module internally uses the epoch seconds system that is provided via the perl &lt;code&gt;time()&lt;/code&gt; function and supported by &lt;code&gt;gmtime()&lt;/code&gt; and &lt;code&gt;localtime()&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 내부적으로 perl &lt;code&gt;time()&lt;/code&gt; 함수 를 통해 제공 되고 &lt;code&gt;gmtime()&lt;/code&gt; 및 &lt;code&gt;localtime()&lt;/code&gt; 지원 하는 epoch seconds 시스템을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="458e3aac1c45af194716db0ddfa546c2e44d1b98" translate="yes" xml:space="preserve">
          <source>This module is a &quot;pure virtual base class&quot;--it has nothing of its own. It's just there to inherit from one of the various DBM packages. It prefers ndbm for compatibility reasons with Perl 4, then Berkeley DB (See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;), GDBM, SDBM (which is always there--it comes with Perl), and finally ODBM. This way old programs that used to use NDBM via dbmopen() can still do so, but new ones can reorder @ISA:</source>
          <target state="translated">이 모듈은 &quot;순수한 가상 기본 클래스&quot;입니다. 자체 모듈이 없습니다. 다양한 DBM 패키지 중 하나에서 상속하기 만하면됩니다. Perl 4와 호환성을 위해 ndbm을 선호하고 Berkeley DB ( &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; 참조 ), GDBM, SDBM (항상 Perl과 함께 제공됨) 및 마지막으로 ODBM을 선호합니다. 이런 식으로 dbmopen ()을 통해 NDBM을 사용했던 이전 프로그램은 여전히 ​​그렇게 할 수 있지만 새로운 프로그램은 @ISA를 재정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="845ef6f7f0c9f9a1cc4bdfcd24a8c21377a02413" translate="yes" xml:space="preserve">
          <source>This module is a back-end plugin for &lt;code&gt;Sys::Syslog&lt;/code&gt;, for supporting the Win32 event log. It is not expected to be directly used by any module other than &lt;code&gt;Sys::Syslog&lt;/code&gt; therefore it's API may change at any time and no warranty is made with regards to backward compatibility. You Have Been Warned.</source>
          <target state="translated">이 모듈은 Win32 이벤트 로그를 지원하기 위한 &lt;code&gt;Sys::Syslog&lt;/code&gt; 용 백엔드 플러그인입니다 . &lt;code&gt;Sys::Syslog&lt;/code&gt; 이외의 다른 모듈에서 직접 사용하지 않을 것으로 예상 되므로 API는 언제든지 변경 될 수 있으며 이전 버전과의 호환성과 관련하여 어떠한 보증도하지 않습니다. 경고를 받았습니다.</target>
        </trans-unit>
        <trans-unit id="1c04eeff8ead05e06a53857583cc861707b5c717" translate="yes" xml:space="preserve">
          <source>This module is a simple wrapper around &lt;b&gt;Locale::Maketext::Lexicon&lt;/b&gt;, designed to alleviate the need of creating</source>
          <target state="translated">이 모듈은 &lt;b&gt;Locale :: Maketext :: Lexicon&lt;/b&gt; 주위의 간단한 래퍼로 , 작성의 필요성을 완화시킵니다.</target>
        </trans-unit>
        <trans-unit id="e16f5e2a01129069277c30d3b7f3daee0fb1dd1b" translate="yes" xml:space="preserve">
          <source>This module is an implementation of Unicode Technical Standard #10 (a.k.a. UTS #10) - Unicode Collation Algorithm (a.k.a. UCA).</source>
          <target state="translated">이 모듈은 Unicode Technical Standard # 10 (일명 UTS # 10)-Unicode Collation Algorithm (일명 UCA)의 구현입니다.</target>
        </trans-unit>
        <trans-unit id="c1b7492744c579fc1d9bfb8835d90982b09e7c1d" translate="yes" xml:space="preserve">
          <source>This module is an outgrowth of the &lt;code&gt;Module::Build&lt;/code&gt; project, to which there have been many contributors. Notably, Randy W. Sims submitted lots of code to support 3 compilers on Windows and helped with various other platform-specific issues. Ilya Zakharevich has contributed fixes for OS/2; John E. Malmberg and Peter Prymmer have done likewise for VMS.</source>
          <target state="translated">이 모듈은 많은 기여자가 있는 &lt;code&gt;Module::Build&lt;/code&gt; 프로젝트 의 결과물입니다 . 특히 Randy W. Sims는 Windows에서 3 개의 컴파일러를 지원하기 위해 많은 코드를 제출했으며 다양한 플랫폼 별 문제를 해결했습니다. Ilya Zakharevich는 OS / 2의 수정 사항을 제공했습니다. John E. Malmberg와 Peter Prymmer도 마찬가지로 VMS를 수행했습니다.</target>
        </trans-unit>
        <trans-unit id="1f5ba4ee559ca9f1454b4c1a05d7f38b94f36610" translate="yes" xml:space="preserve">
          <source>This module is based on a Perl 4 library, timelocal.pl, that was included with Perl 4.036, and was most likely written by Tom Christiansen.</source>
          <target state="translated">이 모듈은 Perl 4.036에 포함되어 있으며 Tom Christiansen이 작성한 Perl 4 라이브러리 인 timelocal.pl을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="21726a2ed2ceba4bf9becf7c5cf61182d2b88157" translate="yes" xml:space="preserve">
          <source>This module is by no means trying to be a complete testing system. It's just to get you started. Once you're off the ground its recommended you look at &lt;a href=&quot;Test::More&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 완전한 테스트 시스템이 되려고하지 않습니다. 단지 시작하기위한 것입니다. 일단 당신이 지상에서 벗어나면 &lt;a href=&quot;Test::More&quot;&gt;Test :: More&lt;/a&gt; 를 보는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4cbc64a6620dfb67500a67bd41b8098f113352da" translate="yes" xml:space="preserve">
          <source>This module is by no means trying to be a complete testing system. It's just to get you started. Once you're off the ground its recommended you look at &lt;a href=&quot;more&quot;&gt;Test::More&lt;/a&gt;.</source>
          <target state="translated">이 모듈이 완전한 테스트 시스템이 되려고하는 것은 아닙니다. 시작하기 만하면됩니다. 일단 당신이 땅에서 벗어나면 &lt;a href=&quot;more&quot;&gt;Test :: More&lt;/a&gt; 를 보라 .</target>
        </trans-unit>
        <trans-unit id="2753244f46b0ce153d304706dfb95e861d35abaf" translate="yes" xml:space="preserve">
          <source>This module is copyright (C) Charles Bailey, Tim Bunce and David Landgren 1995-2013. All rights reserved.</source>
          <target state="translated">이 모듈은 Charles Bailey, Tim Bunce 및 David Landgren 1995-2013에 저작권이 있습니다 (C). 판권 소유.</target>
        </trans-unit>
        <trans-unit id="e65fc814fbe25d163ecbf16ad77b4df5d27417a3" translate="yes" xml:space="preserve">
          <source>This module is copyright (C) Charles Bailey, Tim Bunce, David Landgren, James Keenan and Richard Elberger 1995-2018. All rights reserved.</source>
          <target state="translated">이 모듈의 저작권은 (C) Charles Bailey, Tim Bunce, David Landgren, James Keenan 및 Richard Elberger 1995-2018입니다. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="c3dc79528e0a53341f5f1a2385863e6d0f321326" translate="yes" xml:space="preserve">
          <source>This module is copyright (c) 2002 - 2009 Jos Boumans &amp;lt;kane@cpan.org&amp;gt;. All rights reserved.</source>
          <target state="translated">이 모듈은 (c) 2002-2009 Jos Boumans &amp;lt;kane@cpan.org&amp;gt;에 저작권이 있습니다. 판권 소유.</target>
        </trans-unit>
        <trans-unit id="109646d03bdd7214b2601deb023ff86ae17771e5" translate="yes" xml:space="preserve">
          <source>This module is copyright 2005 Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;, some parts are based on other people's work.</source>
          <target state="translated">이 모듈의 저작권은 2005 Fergal Daly &amp;lt;fergal@esatclear.ie&amp;gt;이며 일부는 다른 사람의 작업을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="1a6eac676c9809b9e5cbb0d9d7b173e56f481065" translate="yes" xml:space="preserve">
          <source>This module is currently derived from &lt;a href=&quot;YAML::Tiny&quot;&gt;YAML::Tiny&lt;/a&gt; by Adam Kennedy. If there are bugs in how it parses a particular META.yml file, please file a bug report in the YAML::Tiny bugtracker: &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&quot;&gt;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&lt;/a&gt;</source>
          <target state="translated">이 모듈은 현재 Adam Kennedy의 &lt;a href=&quot;YAML::Tiny&quot;&gt;YAML :: Tiny&lt;/a&gt; 에서 파생되었습니다 . 특정 META.yml 파일을 구문 분석하는 방법에 버그가있는 경우 YAML :: Tiny bugtracker : &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues&quot;&gt;https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues에&lt;/a&gt; 버그 보고서를 제출 하십시오.</target>
        </trans-unit>
        <trans-unit id="e106aa2d7581dc33a3d1c862720a197c581da1e6" translate="yes" xml:space="preserve">
          <source>This module is designed to support operations commonly performed on file specifications (usually called &quot;file names&quot;, but not to be confused with the contents of a file, or Perl's file handles), such as concatenating several directory and file names into a single path, or determining whether a path is rooted. It is based on code directly taken from MakeMaker 5.17, code written by Andreas K&amp;ouml;nig, Andy Dougherty, Charles Bailey, Ilya Zakharevich, Paul Schinder, and others.</source>
          <target state="translated">이 모듈은 여러 디렉토리 및 파일 이름을 단일 경로로 연결하는 것과 같이 파일 스펙 (일반적으로 &quot;파일 이름&quot;이라고하지만 파일의 내용 또는 Perl의 파일 핸들과 혼동되지 않도록 함)에서 일반적으로 수행되는 조작을 지원하도록 설계되었습니다. 경로가 루팅되었는지 여부를 결정합니다. 이 코드는 Andreas K&amp;ouml;nig, Andy Dougherty, Charles Bailey, Ilya Zakharevich, Paul Schinder 등이 작성한 MakeMaker 5.17에서 직접 가져온 코드를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="654671a6553728793de0b0c754d598a0cc86c710" translate="yes" xml:space="preserve">
          <source>This module is designed to work with &lt;a href=&quot;Encode::Encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. To make the Base64 transcoder example above really work, you could write a module like this:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;Encode::Encoding&quot;&gt;Encode :: Encoding&lt;/a&gt; 과 함께 작동하도록 설계되었습니다 . 위의 Base64 트랜스 코더 예제가 실제로 작동하도록하려면 다음과 같은 모듈을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b88b2f05f3eb8f5317475c544c0d41c821542019" translate="yes" xml:space="preserve">
          <source>This module is designed to work with &lt;a href=&quot;encoding&quot;&gt;Encode::Encoding&lt;/a&gt;. To make the Base64 transcoder example above really work, you could write a module like this:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;encoding&quot;&gt;Encode :: Encoding&lt;/a&gt; 과 함께 작동하도록 설계되었습니다 . 위의 Base64 트랜스 코더 예제를 실제로 작동 시키려면 다음과 같은 모듈을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7317d71579025bf106df223a30767b582e4758a6" translate="yes" xml:space="preserve">
          <source>This module is directly inspired by chocolateboy's excellent Scope::Guard module.</source>
          <target state="translated">이 모듈은 chocolateboy의 뛰어난 Scope :: Guard 모듈에서 직접 영감을 받았습니다.</target>
        </trans-unit>
        <trans-unit id="3eaa300076a46b36258692823afcaf30f3da1dac" translate="yes" xml:space="preserve">
          <source>This module is experimental, and may contain bugs. Please report bugs to the address below.</source>
          <target state="translated">이 모듈은 실험용이며 버그가 포함되어있을 수 있습니다. 아래 주소로 버그를 신고하십시오.</target>
        </trans-unit>
        <trans-unit id="c60c17d643b09d45d994b9ae1fda9eedaf2d1fcf" translate="yes" xml:space="preserve">
          <source>This module is for testing only and should not normally be installed.</source>
          <target state="translated">이 모듈은 테스트 전용이며 일반적으로 설치해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="df5a318ad47ed1cb98fcceb8a257ad12588cd0fd" translate="yes" xml:space="preserve">
          <source>This module is free software, you may distribute it under the same terms as Perl itself.</source>
          <target state="translated">이 모듈은 자유 소프트웨어이므로 Perl과 동일한 조건으로 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fdd885419be85bc33964005f90fc4cadf3fdd76" translate="yes" xml:space="preserve">
          <source>This module is free software, you may distribute it under the same terms as Perl.</source>
          <target state="translated">이 모듈은 자유 소프트웨어이며 Perl과 동일한 조건으로 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="922385d4cd422695e010d41aeec2d5c5dffbe730" translate="yes" xml:space="preserve">
          <source>This module is free software. It may be used, redistributed and/or modified under the same terms as Perl itself.</source>
          <target state="translated">이 모듈은 자유 소프트웨어입니다. Perl 자체와 동일한 용어로 사용, 재배포 및 / 또는 수정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8713cb7bfbc646a13e38df90a39fe040d945517a" translate="yes" xml:space="preserve">
          <source>This module is free software. You may distribute it under the same terms as Perl itself.</source>
          <target state="translated">이 모듈은 자유 소프트웨어입니다. Perl 자체와 동일한 조건으로 배포 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a56766ff465fe3b64568012924af5a4fbf7de95" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself, i.e. under the terms of either the GNU General Public License or the Artistic License, as specified in the</source>
          <target state="translated">이 모듈은 무료 소프트웨어입니다. Perl 자체와 동일한 조건, 즉 GNU General Public License 또는 Artistic License의 조건에 따라 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="870a9546afdd84e9a3a4ff38074b2ee21c55579d" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</source>
          <target state="translated">이 모듈은 자유 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0830e7b6d0dd0580741b7e45292c09ed7c6c8d7" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 자유 소프트웨어입니다. Perl과 동일한 용어로 재배포 및 / 또는 수정할 수 있습니다. &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlartistic.html&quot;&gt;perlartistic&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e9a38691db3cd4123a0732405c5584fd7d1ade2" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlartistic&quot;&gt;perlartistic&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 무료 소프트웨어입니다. Perl 자체와 동일한 조건으로 재배포 및 / 또는 수정할 수 있습니다. &lt;a href=&quot;https://perldoc.perl.org/5.32.0/perlartistic&quot;&gt;perlartistic을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3300a405455959dd665a3badfe243e6fa30c2626" translate="yes" xml:space="preserve">
          <source>This module is free software; you can redistribute it or modify it under the same terms as Perl itself.</source>
          <target state="translated">이 모듈은 자유 소프트웨어입니다. Perl 자체와 동일한 용어로 재배포하거나 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="428130d7bad8c548e3890e11a89bef5821bc3665" translate="yes" xml:space="preserve">
          <source>This module is just a translation of the C</source>
          <target state="translated">이 모듈은 C의 번역 일뿐입니다</target>
        </trans-unit>
        <trans-unit id="53d4261ed48fcbc4558e06b2e6b719f698501a77" translate="yes" xml:space="preserve">
          <source>This module is just for testing expiration semantics. It's not a very good example of how to write an expiration module.</source>
          <target state="translated">이 모듈은 만료 시맨틱을 테스트하기위한 것입니다. 만기 모듈을 작성하는 방법에 대한 좋은 예는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0dc5b94f76b37ecce8785d42b0ffd5ab2b777674" translate="yes" xml:space="preserve">
          <source>This module is managed in an open GitHub repository, &lt;a href=&quot;https://github.com/perl-pod/pod-simple/&quot;&gt;https://github.com/perl-pod/pod-simple/&lt;/a&gt;. Feel free to fork and contribute, or to clone &lt;a href=&quot;git://github.com/perl-pod/pod-simple.git&quot;&gt;git://github.com/perl-pod/pod-simple.git&lt;/a&gt; and send patches!</source>
          <target state="translated">이 모듈은 개방형 GitHub 저장소 ( &lt;a href=&quot;https://github.com/perl-pod/pod-simple/&quot;&gt;https://github.com/perl-pod/pod-simple/)&lt;/a&gt; 에서 관리됩니다 . 자유롭게 포크하고 기여하거나 &lt;a href=&quot;git://github.com/perl-pod/pod-simple.git&quot;&gt;git : //github.com/perl-pod/pod-simple.git&lt;/a&gt; 을 복제 하고 패치를 보내십시오!</target>
        </trans-unit>
        <trans-unit id="f745572f29549c61507fb4f34a61c7a87abbc5ec" translate="yes" xml:space="preserve">
          <source>This module is managed in an open GitHub repository, &lt;a href=&quot;https://github.com/theory/pod-simple/&quot;&gt;https://github.com/theory/pod-simple/&lt;/a&gt;. Feel free to fork and contribute, or to clone &lt;a href=&quot;git://github.com/theory/pod-simple.git&quot;&gt;git://github.com/theory/pod-simple.git&lt;/a&gt; and send patches!</source>
          <target state="translated">이 모듈은 개방형 GitHub 리포지토리 ( &lt;a href=&quot;https://github.com/theory/pod-simple/&quot;&gt;https://github.com/theory/pod-simple/)&lt;/a&gt; 에서 관리됩니다 . 자유롭게 포크하고 기여하거나 &lt;a href=&quot;git://github.com/theory/pod-simple.git&quot;&gt;git : //github.com/theory/pod-simple.git&lt;/a&gt; 을 복제 하고 패치를 보내십시오!</target>
        </trans-unit>
        <trans-unit id="7d0ab6711ea5063095e0e85b171ef73740045783" translate="yes" xml:space="preserve">
          <source>This module is not compatible with Unix &lt;code&gt;compress&lt;/code&gt; .</source>
          <target state="translated">이 모듈은 Unix &lt;code&gt;compress&lt;/code&gt; 와 호환되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="13cc04317c942b05ce4555eb44ccdae6bba6d28a" translate="yes" xml:space="preserve">
          <source>This module is not compatible with Unix &lt;code&gt;compress&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 Unix &lt;code&gt;compress&lt;/code&gt; 와 호환되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d1c6a1686a9e6172b47ee3f5d419b358b2cc40a5" translate="yes" xml:space="preserve">
          <source>This module is not intended for direct use in application code. Its sole purpose is to be sub-classed by IO::Compress modules.</source>
          <target state="translated">이 모듈은 응용 프로그램 코드에서 직접 사용하기위한 것이 아닙니다. 유일한 목적은 IO :: Compress 모듈에 의해 서브 클래 싱되는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0f3671c101f1cebdeab0ce875c68fe36c60360d8" translate="yes" xml:space="preserve">
          <source>This module is not intended for direct use in application code. Its sole purpose is to be sub-classed by IO::Uncompress modules.</source>
          <target state="translated">이 모듈은 응용 프로그램 코드에서 직접 사용하기위한 것이 아닙니다. 유일한 목적은 IO :: Uncompress 모듈로 서브 클래 싱하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a4123b1c619055b343db1dd9134cd19fd6bddf30" translate="yes" xml:space="preserve">
          <source>This module is not meant to be installed.</source>
          <target state="translated">이 모듈은 설치할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7164bd2152d2e3839e89dbfa3b86eaa11bce3dbe" translate="yes" xml:space="preserve">
          <source>This module is part of the Time::Piece distribution. It allows the user to find out the number of minutes, hours, days, weeks or years in a given number of seconds. It is returned by Time::Piece when you delta two Time::Piece objects.</source>
          <target state="translated">이 모듈은 Time :: Piece 배포의 일부입니다. 사용자는 주어진 시간 (초)에서 분, 시간, 일, 주 또는 년을 찾을 수 있습니다. 두 Time :: Piece 객체를 델타하면 Time :: Piece에 의해 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="22df619b80747d338bb7c64e8fdc1d4aef53ad12" translate="yes" xml:space="preserve">
          <source>This module is part of the core Perl distribution and is also maintained for CPAN by Jonathan Stowe &amp;lt;jns@gellyfish.co.uk&amp;gt;.</source>
          <target state="translated">이 모듈은 핵심 Perl 분배의 일부이며 Jonathan Stowe &amp;lt;jns@gellyfish.co.uk&amp;gt;에 의해 CPAN에 대해서도 유지 보수됩니다.</target>
        </trans-unit>
        <trans-unit id="194bd926549ad2d7bd7a1e89514e8690d0700ec1" translate="yes" xml:space="preserve">
          <source>This module is released under the same terms as Perl itself.</source>
          <target state="translated">이 모듈은 Perl 자체와 동일한 용어로 출시됩니다.</target>
        </trans-unit>
        <trans-unit id="9e7d44a3d58cea8a100de62304c29f63b460d560" translate="yes" xml:space="preserve">
          <source>This module is still in beta. Cygwin-knowledgeable folks are invited to offer patches and suggestions.</source>
          <target state="translated">이 모듈은 아직 베타 버전입니다. Cygwin 지식이 풍부한 사람들이 패치와 제안을 제공하도록 초대되었습니다.</target>
        </trans-unit>
        <trans-unit id="1ba87a51378e67bc34037dd0cee84645dd48c97c" translate="yes" xml:space="preserve">
          <source>This module is the result of archaeology undertaken during QA Hackathon in Lancaster, April 2013.</source>
          <target state="translated">이 모듈은 2013 년 4 월 Lancaster에서 열린 QA Hackathon에서 수행 한 고고학의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="f3a7ded1d62af46df9b70aea1e61bb63a4d5e250" translate="yes" xml:space="preserve">
          <source>This module is used by &lt;code&gt;h2xs&lt;/code&gt; to write the file</source>
          <target state="translated">이 모듈은 &lt;code&gt;h2xs&lt;/code&gt; 에서 파일을 쓰는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a7926bd29bba2324b3fe7c588f46c743752e1304" translate="yes" xml:space="preserve">
          <source>This module is used for running batch-conversions of a lot of HTML documents</source>
          <target state="translated">이 모듈은 많은 HTML 문서의 일괄 변환을 실행하는 데 사용됩니다</target>
        </trans-unit>
        <trans-unit id="839a2e768fddb8f7898e0f04347e52df5765427a" translate="yes" xml:space="preserve">
          <source>This module is used internally as a base class by Time::localtime And Time::gmtime functions. It creates a Time::tm struct object which is addressable just like's C's tm structure from</source>
          <target state="translated">이 모듈은 Time :: localtime 및 Time :: gmtime 함수에 의해 내부적으로 기본 클래스로 사용됩니다. C의 tm 구조와 마찬가지로 주소를 지정할 수있는 Time :: tm struct 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="07f553b400d2280f304688df200f5b35ef787f6a" translate="yes" xml:space="preserve">
          <source>This module is used to implement the special hashes &lt;code&gt;%+&lt;/code&gt; and &lt;code&gt;%-&lt;/code&gt; , but it can be used to tie other variables as you choose.</source>
          <target state="translated">이 모듈은 특수 해시 &lt;code&gt;%+&lt;/code&gt; 및 &lt;code&gt;%-&lt;/code&gt; 를 구현하는 데 사용 되지만 원하는대로 다른 변수를 연결하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="019b8504cd55dd2221ad4da8c02fa2cb855f46b3" translate="yes" xml:space="preserve">
          <source>This module is used to implement the special hashes &lt;code&gt;%+&lt;/code&gt; and &lt;code&gt;%-&lt;/code&gt;, but it can be used to tie other variables as you choose.</source>
          <target state="translated">이 모듈은 특수 해시 &lt;code&gt;%+&lt;/code&gt; 및 &lt;code&gt;%-&lt;/code&gt; 를 구현하는 데 사용 되지만 선택한 다른 변수를 연결하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="400485993cd01628da068b6aef093ffdc1938d7e" translate="yes" xml:space="preserve">
          <source>This module is used to represent and manage a stack of &lt;a href=&quot;Test2::Hub&quot;&gt;Test2::Hub&lt;/a&gt; objects. Hubs are usually in a stack so that you can push a new hub into place that can intercept and handle events differently than the primary hub.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;Test2::Hub&quot;&gt;Test2 :: Hub&lt;/a&gt; 개체 의 스택을 표현하고 관리하는 데 사용됩니다 . 허브는 일반적으로 스택에 있으므로 기본 허브와 다르게 이벤트를 가로 채고 처리 할 수있는 새 허브를 제자리에 밀어 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b6698e75a7d3422775d333b4412918e440bfbef" translate="yes" xml:space="preserve">
          <source>This module is used to test that the XS typemaps distributed with perl are working as advertised. A function is available for each typemap definition (eventually). In general each function takes a variable, processes it through the OUTPUT typemap and then returns it using the INPUT typemap.</source>
          <target state="translated">이 모듈은 perl과 함께 배포 된 XS 타입 맵이 광고 된대로 작동하는지 테스트하는 데 사용됩니다. 각 유형 맵 정의에 대해 함수를 사용할 수 있습니다 (결국). 일반적으로 각 함수는 변수를 취하고 OUTPUT 타입 맵을 통해 처리 한 다음 INPUT 타입 맵을 사용하여 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1910d98cb0d7696e9377a9fe44d03beb3d7a9af8" translate="yes" xml:space="preserve">
          <source>This module is used when interoperating with a C/C++ application that uses a C int as either the key and/or value in the DBM file.</source>
          <target state="translated">이 모듈은 C int를 DBM 파일의 키 및 / 또는 값으로 사용하는 C / C ++ 애플리케이션과 상호 운용 할 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d8aa8f33e315204f28ac3fdb706ab3fb362c4d36" translate="yes" xml:space="preserve">
          <source>This module is useful for people who are writing their own back end, or who are learning about the Perl internals. It's not useful to the average programmer.</source>
          <target state="translated">이 모듈은 자신의 백엔드를 작성하거나 Perl 내부에 대해 배우는 사람들에게 유용합니다. 일반 프로그래머에게는 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e9e0d93149553207adf6e63dfb540679634ba91d" translate="yes" xml:space="preserve">
          <source>This module is very unusual as overloaded modules go: it does not provide any usual overloaded operators, instead it provides an implementation for &lt;a href=&quot;#nomethod&quot;&gt;&quot;&lt;code&gt;nomethod&lt;/code&gt;&quot;&lt;/a&gt;. In this example the &lt;code&gt;nomethod&lt;/code&gt; subroutine returns an object which encapsulates operations done over the objects: &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt;, &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 오버로드 된 모듈로 인해 매우 드문 경우입니다. 일반적인 오버로드 된 연산자를 제공하지 않고 대신 &lt;a href=&quot;#nomethod&quot;&gt;&quot; &lt;code&gt;nomethod&lt;/code&gt; &quot;에&lt;/a&gt; 대한 구현을 제공합니다 . 이 예제에서 &lt;code&gt;nomethod&lt;/code&gt; 서브 루틴은 객체에 대해 수행 된 작업을 캡슐화하는 객체를 반환합니다. &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; , &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="422eedc66ca57180bd78963179219d9ec2d2c3fd" translate="yes" xml:space="preserve">
          <source>This module is very unusual as overloaded modules go: it does not provide any usual overloaded operators, instead it provides an implementation for &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt;. In this example the &lt;code&gt;nomethod&lt;/code&gt; subroutine returns an object which encapsulates operations done over the objects: &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; , &lt;code&gt;2 +
symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; .</source>
          <target state="translated">이 모듈은 오버로드 된 모듈로 인해 매우 이례적입니다. 일반적인 오버로드 된 연산자를 제공하지 않고 대신 &lt;a href=&quot;#nomethod&quot;&gt;nomethod&lt;/a&gt; 구현을 제공합니다 . 이 예제에서 &lt;code&gt;nomethod&lt;/code&gt; 서브 루틴은 오브젝트에 대해 수행 된 조작을 캡슐화하는 오브젝트를 리턴합니다. &lt;code&gt;symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['n', 3]&lt;/code&gt; , &lt;code&gt;2 + symbolic-&amp;gt;new(3)&lt;/code&gt; contains &lt;code&gt;['+', 2, ['n', 3]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90d7abe099cfab7f646294358451750b8f9df26b" translate="yes" xml:space="preserve">
          <source>This module looks at several environment variables: REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES, and LANG.</source>
          <target state="translated">이 모듈은 REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES 및 LANG과 같은 여러 환경 변수를 살펴 봅니다.</target>
        </trans-unit>
        <trans-unit id="c4c8914133b0b2bfc077d6c38150d307c0367148" translate="yes" xml:space="preserve">
          <source>This module looks for several environment variables, including REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES, and LANG.</source>
          <target state="translated">이 모듈은 REQUEST_METHOD, HTTP_ACCEPT_LANGUAGE, LANGUAGE, LC_ALL, LC_MESSAGES 및 LANG를 포함한 여러 환경 변수를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="0ac738d7d9941c37feb5165dcbb5c6ab9416052c" translate="yes" xml:space="preserve">
          <source>This module may change to use a different pod-to-nroff formatter class in the future, and this may change what options are supported.</source>
          <target state="translated">이 모듈은 나중에 다른 pod-to-nroff 포맷터 클래스를 사용하도록 변경 될 수 있으며 지원되는 옵션이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76f27fbed99d6c60d342c39616884795be44e886" translate="yes" xml:space="preserve">
          <source>This module may change to use a different text formatter class in the future, and this may change what options are supported.</source>
          <target state="translated">이 모듈은 나중에 다른 텍스트 포맷터 클래스를 사용하도록 변경 될 수 있으며 지원되는 옵션이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94ae7d6ead04954a6412192772bd33bb7b8d4073" translate="yes" xml:space="preserve">
          <source>This module mediates between some version that perl sees in a package and the version that is published by the CPAN indexer.</source>
          <target state="translated">이 모듈은 패키지에서 볼 수있는 일부 버전과 CPAN 색인 작성기에서 공개 한 버전 사이를 중개합니다.</target>
        </trans-unit>
        <trans-unit id="c80cea19736436ea3f987c3515d4cecb255844b4" translate="yes" xml:space="preserve">
          <source>This module needs Compress::Zlib.</source>
          <target state="translated">이 모듈에는 Compress :: Zlib가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a8a13e816f80341d5aa494b1b85b44f3bab37b43" translate="yes" xml:space="preserve">
          <source>This module needs Perl5.005 or better.</source>
          <target state="translated">이 모듈은 Perl5.005 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2b02becbf011b5e3018f1c6556299552bd0354bc" translate="yes" xml:space="preserve">
          <source>This module needs the Encode module.</source>
          <target state="translated">이 모듈에는 Encode 모듈이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9ccf2db8e0457ff61f46dc8eef8b595c0400ca84" translate="yes" xml:space="preserve">
          <source>This module needs to have been built with zlib 1.2.1 or better to work. A fatal error will be thrown if &lt;code&gt;Merge&lt;/code&gt; is used with an older version of zlib.</source>
          <target state="translated">이 모듈은 zlib 1.2.1 이상으로 구축되어 작동해야합니다. 이전 버전의 zlib와 함께 &lt;code&gt;Merge&lt;/code&gt; 를 사용 하면 치명적인 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="7cdcfb5298a84fa590094f08e92147e6cb58d161" translate="yes" xml:space="preserve">
          <source>This module offers a single utility function, &lt;code&gt;findsym()&lt;/code&gt; .</source>
          <target state="translated">이 모듈은 단일 유틸리티 함수 인 &lt;code&gt;findsym()&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="90cadc0e8c5645533036401c53c00aa9ed6d065f" translate="yes" xml:space="preserve">
          <source>This module offers a single utility function, &lt;code&gt;findsym()&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 단일 유틸리티 함수 &lt;code&gt;findsym()&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="fd94e0e36732e7bf036abc385f751fb424ec5ec9" translate="yes" xml:space="preserve">
          <source>This module only provides a single function, parselink(), which takes the text of an L&amp;lt;&amp;gt; formatting code and parses it. It returns the anchor text for the link (if any was given), the anchor text possibly inferred from the name and section, the name or URL, the section if any, and the type of link. The type will be one of &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;pod&lt;/code&gt; , or &lt;code&gt;man&lt;/code&gt; , indicating a URL, a link to a POD page, or a link to a Unix manual page.</source>
          <target state="translated">이 모듈은 단일 함수 parselink () 만 제공합니다. parselink ()는 L &amp;lt;&amp;gt; 형식 코드의 텍스트를 가져와 구문 분석합니다. 링크의 앵커 텍스트 (제공된 경우), 이름 및 섹션, 이름 또는 URL, 섹션 (있는 경우) 및 링크 유형에서 유추 된 앵커 텍스트를 리턴합니다. 유형은 &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;pod&lt;/code&gt; 또는 &lt;code&gt;man&lt;/code&gt; 중 하나입니다. URL, POD 페이지 링크 또는 Unix 매뉴얼 페이지 링크를 나타내는 .</target>
        </trans-unit>
        <trans-unit id="2d0a92cd5ce624849b5c0f1ceba2a38bdb80915f" translate="yes" xml:space="preserve">
          <source>This module only provides a single function, parselink(), which takes the text of an L&amp;lt;&amp;gt; formatting code and parses it. It returns the anchor text for the link (if any was given), the anchor text possibly inferred from the name and section, the name or URL, the section if any, and the type of link. The type will be one of &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;pod&lt;/code&gt;, or &lt;code&gt;man&lt;/code&gt;, indicating a URL, a link to a POD page, or a link to a Unix manual page.</source>
          <target state="translated">이 모듈은 L &amp;lt;&amp;gt; 형식화 코드의 텍스트를 가져와 구문 분석하는 단일 함수 parselink () 만 제공합니다. 링크에 대한 앵커 텍스트 (제공된 경우), 이름 및 섹션에서 유추 된 앵커 텍스트, 이름 또는 URL, 섹션 (있는 경우) 및 링크 유형을 반환합니다. 유형은 URL, POD 페이지에 대한 링크 또는 Unix 매뉴얼 페이지에 대한 링크를 나타내는 &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;pod&lt;/code&gt; 또는 &lt;code&gt;man&lt;/code&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="3d4bf504a913c2345fd7fde3fd0264ab90a67f31" translate="yes" xml:space="preserve">
          <source>This module overloads two operators, stringify (&quot;&quot;) and numify (0+).</source>
          <target state="translated">이 모듈은 stringify ( &quot;&quot;) 및 numify (0+)의 두 연산자를 오버로드합니다.</target>
        </trans-unit>
        <trans-unit id="2da35e4a0c12f0c93369385d5a64812790c47338" translate="yes" xml:space="preserve">
          <source>This module overrides &lt;code&gt;Test::Builder::subtest()&lt;/code&gt; and &lt;code&gt;Test::Builder::done_testing()&lt;/code&gt;. It also directly accesses hash elements of the singleton. It has not yet been fixed.</source>
          <target state="translated">이 모듈은 &lt;code&gt;Test::Builder::subtest()&lt;/code&gt; &lt;code&gt;Test::Builder::done_testing()&lt;/code&gt; 및 Test :: Builder :: done_testing ()을 재정의 합니다. 또한 싱글 톤의 해시 요소에 직접 액세스합니다. 아직 수정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d52e08497f6544c9fedb6034ea4aa6706f4c4317" translate="yes" xml:space="preserve">
          <source>This module predefines the methods below:</source>
          <target state="translated">이 모듈은 아래 방법을 미리 정의합니다.</target>
        </trans-unit>
        <trans-unit id="af4cffa0841bdd7591fb2ce3aa6ee9b4fc1581e2" translate="yes" xml:space="preserve">
          <source>This module presumes that all packages on CPAN</source>
          <target state="translated">이 모듈은 CPAN의 모든 패키지를 가정합니다.</target>
        </trans-unit>
        <trans-unit id="50019593ee938407217545d40776fee521fc69e2" translate="yes" xml:space="preserve">
          <source>This module prints the contents of the parse tree, but without as much information as &lt;a href=&quot;debug&quot;&gt;B::Debug&lt;/a&gt;. For comparison, &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; &quot;Hello, world.&quot;&lt;/code&gt; produced 96 lines of output from B::Debug, but only 6 from B::Terse.</source>
          <target state="translated">이 모듈은 구문 분석 트리의 내용을 인쇄하지만 &lt;a href=&quot;debug&quot;&gt;B :: Debug&lt;/a&gt; 만큼 많은 정보가 없습니다 . 비교하려면 &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; &quot;Hello, world.&quot;&lt;/code&gt; &lt;a href=&quot;../functions/print&quot;&gt;인쇄하십시오&lt;/a&gt; .B :: Debug에서 96 줄의 출력을 생성했지만 B :: Terse에서는 6 줄만 생성했습니다.</target>
        </trans-unit>
        <trans-unit id="138c64d225e0e78c4b8614f89899ef78a31a82d8" translate="yes" xml:space="preserve">
          <source>This module prints the contents of the parse tree, but without as much information as CPAN module B::Debug. For comparison, &lt;code&gt;print &quot;Hello, world.&quot;&lt;/code&gt; produced 96 lines of output from B::Debug, but only 6 from B::Terse.</source>
          <target state="translated">이 모듈은 구문 분석 트리의 내용을 인쇄하지만 CPAN 모듈 B :: Debug만큼 많은 정보가 없습니다. 비교를 위해 &lt;code&gt;print &quot;Hello, world.&quot;&lt;/code&gt; B :: Debug에서 96 줄의 출력을 생성했지만 B :: Terse에서는 6 줄만 출력했습니다.</target>
        </trans-unit>
        <trans-unit id="478ba76e6bcddb62163ef813460ff3c7881b3c2c" translate="yes" xml:space="preserve">
          <source>This module provide 3 convenience functions to calculate the digest of files. The following functions are provided:</source>
          <target state="translated">이 모듈은 파일 다이제스트를 계산하는 3 가지 편의 기능을 제공합니다. 다음과 같은 기능이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b0083752d49808e75aaa209a550d644242bd0980" translate="yes" xml:space="preserve">
          <source>This module provide a convenient way to create directories of arbitrary depth and to delete an entire directory subtree from the filesystem.</source>
          <target state="translated">이 모듈은 임의 깊이의 디렉토리를 작성하고 파일 시스템에서 전체 디렉토리 서브 트리를 삭제하는 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b6054fa3fccb1f634d2e293413bd446f27771c13" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of bzip2 files/buffers.</source>
          <target state="translated">이 모듈은 bzip2 파일 / 버퍼를 읽을 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="729eaec16403ec99e135cb527b2c362360b4f51e" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1950.</source>
          <target state="translated">이 모듈은 RFC 1950을 준수하는 파일 / 버퍼를 읽을 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="003753405c286c7fe622e166edd07fb3084e88a1" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1951.</source>
          <target state="translated">이 모듈은 RFC 1951을 준수하는 파일 / 버퍼를 읽을 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="450a22809e6b641290e567e29533943a53385d76" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that conform to RFC 1952.</source>
          <target state="translated">이 모듈은 RFC 1952를 준수하는 파일 / 버퍼를 읽을 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="84795f8eb8a320fda32e6f1d9e107bd19023949a" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that have been compressed in a number of formats that use the zlib compression library.</source>
          <target state="translated">이 모듈은 zlib 압축 라이브러리를 사용하는 여러 형식으로 압축 된 파일 / 버퍼를 읽을 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8e71e73c8ba4d3b122b4773810a5bebea41be94e" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of files/buffers that have been compressed with a variety of compression libraries.</source>
          <target state="translated">이 모듈은 다양한 압축 라이브러리로 압축 된 파일 / 버퍼를 읽을 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2c4e9ced7b139b449826926366ef08ab126e2617" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows the reading of zlib files/buffers.</source>
          <target state="translated">이 모듈은 zlib 파일 / 버퍼를 읽을 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bb765e95103323750609fe94be953d11119327d1" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing bzip2 compressed data to files or buffer.</source>
          <target state="translated">이 모듈은 bzip2 압축 데이터를 파일 또는 버퍼에 쓸 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f21907b6980e5b1e79e7f9b10f3d5f2a64818f33" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1950.</source>
          <target state="translated">이 모듈은 RFC 1950에 정의 된대로 파일 또는 버퍼에 압축 된 데이터를 쓸 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="da5ecc8ed3afbcb78fee4753b59d94b3fd278392" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1951.</source>
          <target state="translated">이 모듈은 RFC 1951에 정의 된대로 파일 또는 버퍼에 압축 된 데이터를 쓸 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4dad75c362e8d8f7864bd95ffad74f285ca796dd" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1952.</source>
          <target state="translated">이 모듈은 RFC 1952에 정의 된대로 파일 또는 버퍼에 압축 된 데이터를 쓸 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="776878df4a774de7ed832c7c095295fe08ea92ae" translate="yes" xml:space="preserve">
          <source>This module provides a Perl interface that allows writing zip compressed data to files or buffer.</source>
          <target state="translated">이 모듈은 zip 압축 데이터를 파일 또는 버퍼에 쓸 수있는 Perl 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2a114c29c27a96079e38fb7ba2d9cd2004ce7668" translate="yes" xml:space="preserve">
          <source>This module provides a convenient way to create directories of arbitrary depth and to delete an entire directory subtree from the filesystem.</source>
          <target state="translated">이 모듈은 임의의 깊이의 디렉토리를 생성하고 파일 시스템에서 전체 디렉토리 하위 트리를 삭제하는 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="122a388521f8308fb94e1159722c14bed6d323e8" translate="yes" xml:space="preserve">
          <source>This module provides a function &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; that takes a language tag (see &lt;a href=&quot;../langtags&quot;&gt;I18N::LangTags&lt;/a&gt;) and returns the best attempt at an English name for it, or undef if it can't make sense of the tag.</source>
          <target state="translated">이 모듈은 &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; 기능을 제공하여 언어 태그를 가져 &lt;i&gt;오고&lt;/i&gt; ( &lt;a href=&quot;../langtags&quot;&gt;I18N :: LangTags&lt;/a&gt; 참조 ) 영어 이름으로 최선의 시도를 반환하거나,이를 수행 할 수없는 경우 undef 태그 감각.</target>
        </trans-unit>
        <trans-unit id="e735e86bbb0a3bf0f9c8dca8d648ba33ac645037" translate="yes" xml:space="preserve">
          <source>This module provides a function &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; that takes a language tag (see &lt;a href=&quot;I18N::LangTags&quot;&gt;I18N::LangTags&lt;/a&gt;) and returns the best attempt at an English name for it, or undef if it can't make sense of the tag.</source>
          <target state="translated">이 모듈은 &lt;code&gt;I18N::LangTags::List::name( &lt;i&gt;langtag&lt;/i&gt; ) &lt;/code&gt; 함수를 제공합니다.이 함수 는 언어 태그 ( &lt;a href=&quot;I18N::LangTags&quot;&gt;I18N :: LangTags&lt;/a&gt; 참조 ) 를 취하고 이에 대한 영어 이름에 대한 최선의 시도를 반환하거나 만들 수없는 경우 undef를 반환합니다. 태그의 감각.</target>
        </trans-unit>
        <trans-unit id="a229b32fb9a19828b51ceae6b05d370d58006916" translate="yes" xml:space="preserve">
          <source>This module provides a mapping between an operating system name as given by &lt;code&gt;$^O&lt;/code&gt; and a more generic type. The initial version is based on the OS type mappings provided in &lt;a href=&quot;Module::Build&quot;&gt;Module::Build&lt;/a&gt; and &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils::CBuilder&lt;/a&gt;. (Thus, Microsoft operating systems are given the type 'Windows' rather than 'Win32'.)</source>
          <target state="translated">이 모듈은 &lt;code&gt;$^O&lt;/code&gt; 로 지정된 운영 체제 이름과 보다 일반적인 유형 간의 매핑을 제공합니다 . 초기 버전은 &lt;a href=&quot;Module::Build&quot;&gt;Module :: Build&lt;/a&gt; 및 &lt;a href=&quot;ExtUtils::CBuilder&quot;&gt;ExtUtils :: CBuilder에&lt;/a&gt; 제공된 OS 유형 매핑을 기반으로합니다 . (따라서 Microsoft 운영 체제에는 'Win32'가 아닌 'Windows'유형이 지정됩니다.)</target>
        </trans-unit>
        <trans-unit id="06aa681296d1fc9a7c2f005908eaaf8f3c4564bc" translate="yes" xml:space="preserve">
          <source>This module provides a protocol-independent way to use IPv4 and IPv6 sockets, intended as a replacement for &lt;a href=&quot;IO::Socket::INET&quot;&gt;IO::Socket::INET&lt;/a&gt;. Most constructor arguments and methods are provided in a backward-compatible way. For a list of known differences, see the &lt;code&gt;IO::Socket::INET&lt;/code&gt; INCOMPATIBILITES section below.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;IO::Socket::INET&quot;&gt;IO :: Socket :: INET을&lt;/a&gt; 대체하기 위해 IPv4 및 IPv6 소켓을 사용하는 프로토콜 독립적 인 방법을 제공합니다 . 대부분의 생성자 인수와 메서드는 이전 버전과 호환되는 방식으로 제공됩니다. 알려진 차이점 목록은 아래의 &lt;code&gt;IO::Socket::INET&lt;/code&gt; INCOMPATIBILITES 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ab89d1d5e04832a54cc7d916a65558cc98a23de" translate="yes" xml:space="preserve">
          <source>This module provides a standard way to gather metadata about a .pm file through (mostly) static analysis and (some) code execution. When determining the version of a module, the &lt;code&gt;$VERSION&lt;/code&gt; assignment is &lt;code&gt;eval&lt;/code&gt;ed, as is traditional in the CPAN toolchain.</source>
          <target state="translated">이 모듈은 (대부분) 정적 분석 및 (일부) 코드 실행을 통해 .pm 파일에 대한 메타 데이터를 수집하는 표준 방법을 제공합니다. 모듈의 버전을 결정할 때 &lt;code&gt;$VERSION&lt;/code&gt; 할당은 CPAN 도구 체인의 기존 방식과 같이 &lt;code&gt;eval&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="96823924a180df110252f785d7a14a45c7a178c6" translate="yes" xml:space="preserve">
          <source>This module provides a variety of constants, structure manipulators and other functions related to socket-based networking. The values and functions provided are useful when used in conjunction with Perl core functions such as socket(), setsockopt() and bind(). It also provides several other support functions, mostly for dealing with conversions of network addresses between human-readable and native binary forms, and for hostname resolver operations.</source>
          <target state="translated">이 모듈은 다양한 상수, 구조 조작기 및 소켓 기반 네트워킹과 관련된 기타 기능을 제공합니다. 제공된 값과 함수는 socket (), setsockopt () 및 bind ()와 같은 Perl 핵심 함수와 함께 사용될 때 유용합니다. 또한 사람이 읽을 수있는 이진 형식과 원시 이진 형식 간의 네트워크 주소 변환 및 호스트 이름 확인자 작업을 처리하기위한 여러 가지 다른 지원 기능도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c14c6338e762c52ff6d582916956b99716820151" translate="yes" xml:space="preserve">
          <source>This module provides aliases for the built-in variables whose names no one seems to like to read. Variables with side-effects which get triggered just by accessing them (like $0) will still be affected.</source>
          <target state="translated">이 모듈은 아무도 이름을 읽지 않는 내장 변수에 대한 별명을 제공합니다. 부작용이있는 변수 (예 : $ 0)에 액세스하여 트리거되는 변수는 여전히 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="db82fd21a4c838f2cb867e238f620528a9b4e06a" translate="yes" xml:space="preserve">
          <source>This module provides an interface that allows filters to be applied to tied Hashes associated with DBM files. It builds on the DBM Filter hooks that are present in all the *DB*_File modules included with the standard Perl source distribution from version 5.6.1 onwards. In addition to the *DB*_File modules distributed with Perl, the BerkeleyDB module, available on CPAN, supports the DBM Filter hooks. See &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt; for more details on the DBM Filter hooks.</source>
          <target state="translated">이 모듈은 DBM 파일과 연관된 연결된 해시에 필터를 적용 할 수있는 인터페이스를 제공합니다. 버전 5.6.1부터 표준 Perl 소스 분배에 포함 된 모든 * DB * _File 모듈에있는 DBM 필터 후크를 기반으로합니다. Perl과 함께 분배 된 * DB * _File 모듈 외에도 CPAN에서 사용 가능한 BerkeleyDB 모듈은 DBM 필터 후크를 지원합니다. DBM 필터 후크에 대한 자세한 내용 은 &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2b24b2421d4d30b4ae85eba6a79f975fb3c67219" translate="yes" xml:space="preserve">
          <source>This module provides four global hashes:</source>
          <target state="translated">이 모듈은 네 가지 글로벌 해시를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d5d483b4b377e197aedecfe9fa15f04f3c6c2c95" translate="yes" xml:space="preserve">
          <source>This module provides functions for determining the pathname of the current working directory. It is recommended that getcwd (or another *cwd() function) be used in</source>
          <target state="translated">이 모듈은 현재 작업 디렉토리의 경로 이름을 결정하는 기능을 제공합니다. getcwd (또는 다른 * cwd () 함수)를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="37033effa06ce25f227ce23dc6a9e45e7efa61d9" translate="yes" xml:space="preserve">
          <source>This module provides functions that are the inverse of built-in perl functions &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt;. They accept a date as a six-element array, and return the corresponding &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time(2)&lt;/a&gt;&lt;/code&gt; value in seconds since the system epoch (Midnight, January 1, 1970 GMT on Unix, for example). This value can be positive or negative, though POSIX only requires support for positive values, so dates before the system's epoch may not work on all operating systems.</source>
          <target state="translated">이 모듈은 내장 펄 함수 &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime()&lt;/a&gt;&lt;/code&gt; 의 역 함수를 제공합니다 . 그것들은 날짜를 6 요소 배열로 받아들이고 , 시스템 시대 (예 : Unix에서 1970 년 1 월 1 일 자정)부터 초 단위로 해당 &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time(2)&lt;/a&gt;&lt;/code&gt; 값을 초 단위로 반환합니다 . 이 값은 양수 또는 음수 일 수 있지만 POSIX는 양수 값만 지원하면되므로 시스템 시대 이전 날짜가 모든 운영 체제에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="392d323e4c70390d247af9b47465d1285979f82d" translate="yes" xml:space="preserve">
          <source>This module provides functions that are the inverse of built-in perl functions &lt;code&gt;localtime()&lt;/code&gt; and &lt;code&gt;gmtime()&lt;/code&gt;. They accept a date as a six-element array, and return the corresponding &lt;code&gt;time(2)&lt;/code&gt; value in seconds since the system epoch (Midnight, January 1, 1970 GMT on Unix, for example). This value can be positive or negative, though POSIX only requires support for positive values, so dates before the system's epoch may not work on all operating systems.</source>
          <target state="translated">이 모듈은 내장 perl 함수 &lt;code&gt;localtime()&lt;/code&gt; 및 &lt;code&gt;gmtime()&lt;/code&gt; 의 역인 함수를 제공합니다 . 날짜를 6 개 요소 배열로 받아들이고 시스템 시대 (예 : Unix에서 GMT 1970 년 1 월 1 일 자정) 이후 초 단위로 해당하는 &lt;code&gt;time(2)&lt;/code&gt; 값을 반환합니다 . 이 값은 양수 또는 음수 일 수 있지만 POSIX는 양수 값에 대한 지원 만 필요하므로 시스템 시대 이전의 날짜는 모든 운영 체제에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1ece64b49e28f99121f72eab284aec43cb55951" translate="yes" xml:space="preserve">
          <source>This module provides functions to encode and decode strings into and from the base64 encoding specified in RFC 2045 -</source>
          <target state="translated">이 모듈은 RFC 2045에 지정된 base64 인코딩으로 문자열을 인코딩 및 디코딩하는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="990d143d4bc42dc7eed0bcd6394bda54ff57474f" translate="yes" xml:space="preserve">
          <source>This module provides functions to encode and decode strings into and from the quoted-printable encoding specified in RFC 2045 -</source>
          <target state="translated">이 모듈은 RFC 2045에 지정된 인용 인쇄 가능한 인코딩으로 문자열을 인코딩 및 디코딩하는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="88e1b2c2210a010cd2575fe18207624d8324387f" translate="yes" xml:space="preserve">
          <source>This module provides linguistic tailoring for it taking advantage of &lt;code&gt;Unicode::Collate&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 &lt;code&gt;Unicode::Collate&lt;/code&gt; 를 활용하여 언어 적 조정을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="abe4c30f310ea99cbe1696d0845fc7519b7463f7" translate="yes" xml:space="preserve">
          <source>This module provides lists of modules that are broken, or have been broken in the past, when upgrading &lt;a href=&quot;Test::Builder&quot;&gt;Test::Builder&lt;/a&gt; to use &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt; 를 사용하도록 &lt;a href=&quot;Test::Builder&quot;&gt;Test :: Builder&lt;/a&gt; 를 업그레이드 할 때 손상되었거나 과거에 손상되었던 모듈 목록을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0c4de2f96f0939e0587055f3524c8f314354960c" translate="yes" xml:space="preserve">
          <source>This module provides methods for array-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie an array to a package. The basic &lt;b&gt;Tie::Array&lt;/b&gt; package provides stub &lt;code&gt;DESTROY&lt;/code&gt; , and &lt;code&gt;EXTEND&lt;/code&gt; methods that do nothing, stub &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;EXISTS&lt;/code&gt; methods that croak() if the delete() or exists() builtins are ever called on the tied array, and implementations of &lt;code&gt;PUSH&lt;/code&gt; , &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; in terms of basic &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; .</source>
          <target state="translated">이 모듈은 배열 묶기 클래스를위한 메소드를 제공합니다. 배열을 패키지에 연결하는 데 필요한 함수 목록은 &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Array&lt;/b&gt; 패키지는 스텁 &lt;code&gt;DESTROY&lt;/code&gt; 및 아무것도 수행하지 않는 &lt;code&gt;EXTEND&lt;/code&gt; 메소드 , delete () 또는 exist () 내장이 연결 배열에서 호출 된 경우 croak ()하는 스텁 &lt;code&gt;DELETE&lt;/code&gt; 및 &lt;code&gt;EXISTS&lt;/code&gt; 메소드 및 &lt;code&gt;PUSH&lt;/code&gt; 구현을 제공합니다 . 기본 &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; 의 &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; 및 &lt;code&gt;CLEAR&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f29d11225e822d19d127266ee941b28ea4361eb8" translate="yes" xml:space="preserve">
          <source>This module provides methods for array-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie an array to a package. The basic &lt;b&gt;Tie::Array&lt;/b&gt; package provides stub &lt;code&gt;DESTROY&lt;/code&gt;, and &lt;code&gt;EXTEND&lt;/code&gt; methods that do nothing, stub &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;EXISTS&lt;/code&gt; methods that croak() if the delete() or exists() builtins are ever called on the tied array, and implementations of &lt;code&gt;PUSH&lt;/code&gt;, &lt;code&gt;POP&lt;/code&gt;, &lt;code&gt;SHIFT&lt;/code&gt;, &lt;code&gt;UNSHIFT&lt;/code&gt;, &lt;code&gt;SPLICE&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; in terms of basic &lt;code&gt;FETCH&lt;/code&gt;, &lt;code&gt;STORE&lt;/code&gt;, &lt;code&gt;FETCHSIZE&lt;/code&gt;, &lt;code&gt;STORESIZE&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 배열 연결 클래스를위한 메서드를 제공합니다. 배열을 패키지에 연결하는 데 필요한 함수 목록은 &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Array&lt;/b&gt; 패키지는 스텁 &lt;code&gt;DESTROY&lt;/code&gt; 및 아무것도 수행하지 않는 &lt;code&gt;EXTEND&lt;/code&gt; 메소드 , delete () 또는 exists () 내장이 연결된 배열에서 호출 된 경우 croak ()하는 스텁 &lt;code&gt;DELETE&lt;/code&gt; 및 &lt;code&gt;EXISTS&lt;/code&gt; 메소드 및 &lt;code&gt;PUSH&lt;/code&gt; 구현을 제공합니다 . 기본 &lt;code&gt;FETCH&lt;/code&gt; , &lt;code&gt;STORE&lt;/code&gt; , &lt;code&gt;FETCHSIZE&lt;/code&gt; 측면에서 &lt;code&gt;POP&lt;/code&gt; , &lt;code&gt;SHIFT&lt;/code&gt; , &lt;code&gt;UNSHIFT&lt;/code&gt; , &lt;code&gt;SPLICE&lt;/code&gt; 및 &lt;code&gt;CLEAR&lt;/code&gt; , &lt;code&gt;STORESIZE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a02a6b6db2368ef791da2effa9e60fac9461270d" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for handle-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a handle to a package. The basic &lt;b&gt;Tie::Handle&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; and &lt;code&gt;GETC&lt;/code&gt; .</source>
          <target state="translated">이 모듈은 핸들 타이 클래스를위한 일부 스켈 레탈 메소드를 제공합니다. 핸들을 패키지에 묶는 데 필요한 기능 목록은 &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Handle&lt;/b&gt; 패키지는 &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; 및 &lt;code&gt;GETC&lt;/code&gt; 메소드뿐만 아니라 &lt;code&gt;new&lt;/code&gt; 메소드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="fee8f6e5404f98fd11ba8fe2fe719d028b8507eb" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for handle-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a handle to a package. The basic &lt;b&gt;Tie::Handle&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHANDLE&lt;/code&gt;, &lt;code&gt;PRINT&lt;/code&gt;, &lt;code&gt;PRINTF&lt;/code&gt; and &lt;code&gt;GETC&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 핸들-연결 클래스를위한 몇 가지 스켈 레탈 메서드를 제공합니다. 패키지에 핸들을 묶는 데 필요한 함수 목록은 &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Handle&lt;/b&gt; 패키지는 &lt;code&gt;TIEHANDLE&lt;/code&gt; , &lt;code&gt;PRINT&lt;/code&gt; , &lt;code&gt;PRINTF&lt;/code&gt; 및 &lt;code&gt;GETC&lt;/code&gt; 메서드뿐만 아니라 &lt;code&gt;new&lt;/code&gt; 메서드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="9e1739e1ebdefff1631d8440f9ca833c6b68c52a" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for hash-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie a hash to a package. The basic &lt;b&gt;Tie::Hash&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt; . The &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt; packages provide most methods for hashes described in &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; (the exceptions are &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt; ). They cause tied hashes to behave exactly like standard hashes, and allow for selective overwriting of methods. &lt;b&gt;Tie::Hash&lt;/b&gt; grandfathers the &lt;code&gt;new&lt;/code&gt; method: it is used if &lt;code&gt;TIEHASH&lt;/code&gt; is not defined in the case a class forgets to include a &lt;code&gt;TIEHASH&lt;/code&gt; method.</source>
          <target state="translated">이 모듈은 해시 타이 잉 클래스를위한 일부 스켈 레탈 메소드를 제공합니다. 해시를 패키지에 연결하는 데 필요한 함수 목록은 &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Hash&lt;/b&gt; 패키지는 &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; 및 &lt;code&gt;CLEAR&lt;/code&gt; 메소드뿐만 아니라 &lt;code&gt;new&lt;/code&gt; 메소드를 제공합니다 . &lt;b&gt;타이 :: StdHash&lt;/b&gt; 과 &lt;b&gt;타이 :: ExtraHash&lt;/b&gt; 패키지에 설명 된 해시에 가장 방법을 제공 &lt;a href=&quot;../perltie&quot;&gt;perltie를&lt;/a&gt; (예외가 &lt;code&gt;UNTIE&lt;/code&gt; 과 &lt;code&gt;DESTROY&lt;/code&gt; ). 묶인 해시가 표준 해시와 똑같이 동작하게하고, 메소드를 선택적으로 덮어 쓸 수 있습니다. &lt;b&gt;넥타이 :: 해시&lt;/b&gt; 할아버지&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt; &lt;code&gt;new&lt;/code&gt; 메소드 : 클래스가 &lt;code&gt;TIEHASH&lt;/code&gt; 메소드 포함을 잊어 버린 경우 &lt;code&gt;TIEHASH&lt;/code&gt; 가 정의되지 않은 경우에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e86347afc73eee0d0269a2eb0166a0d2b4987d04" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for hash-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in order to tie a hash to a package. The basic &lt;b&gt;Tie::Hash&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIEHASH&lt;/code&gt;, &lt;code&gt;EXISTS&lt;/code&gt; and &lt;code&gt;CLEAR&lt;/code&gt;. The &lt;b&gt;Tie::StdHash&lt;/b&gt; and &lt;b&gt;Tie::ExtraHash&lt;/b&gt; packages provide most methods for hashes described in &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; (the exceptions are &lt;code&gt;UNTIE&lt;/code&gt; and &lt;code&gt;DESTROY&lt;/code&gt;). They cause tied hashes to behave exactly like standard hashes, and allow for selective overwriting of methods. &lt;b&gt;Tie::Hash&lt;/b&gt; grandfathers the &lt;code&gt;new&lt;/code&gt; method: it is used if &lt;code&gt;TIEHASH&lt;/code&gt; is not defined in the case a class forgets to include a &lt;code&gt;TIEHASH&lt;/code&gt; method.</source>
          <target state="translated">이 모듈은 해시 연결 클래스를위한 몇 가지 스켈 레탈 메서드를 제공합니다. 해시를 패키지에 연결하는 데 필요한 함수 목록은 &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Hash&lt;/b&gt; 패키지는 &lt;code&gt;new&lt;/code&gt; 메소드 와 &lt;code&gt;TIEHASH&lt;/code&gt; , &lt;code&gt;EXISTS&lt;/code&gt; 및 &lt;code&gt;CLEAR&lt;/code&gt; 메소드를 제공합니다 . &lt;b&gt;타이 :: StdHash&lt;/b&gt; 과 &lt;b&gt;타이 :: ExtraHash&lt;/b&gt; 패키지에 설명 된 해시에 가장 방법을 제공 &lt;a href=&quot;perltie&quot;&gt;perltie를&lt;/a&gt; (예외가 &lt;code&gt;UNTIE&lt;/code&gt; 과 &lt;code&gt;DESTROY&lt;/code&gt; ). 그들은 묶인 해시가 표준 해시와 똑같이 작동하도록하고 메서드의 선택적 덮어 쓰기를 허용합니다. &lt;b&gt;넥타이 ::&lt;/b&gt; 할아버지 &lt;b&gt;해시&lt;/b&gt; &lt;code&gt;new&lt;/code&gt; 메소드 : 클래스가 &lt;code&gt;TIEHASH&lt;/code&gt; 메소드 를 포함하는 것을 잊은 경우 &lt;code&gt;TIEHASH&lt;/code&gt; 가 정의되지 않은 경우 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4010b9458f00ef557ee377f021a5154f08e74c91" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for scalar-tying classes. See &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a scalar to a package. The basic &lt;b&gt;Tie::Scalar&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; and &lt;code&gt;STORE&lt;/code&gt; . The &lt;b&gt;Tie::StdScalar&lt;/b&gt; package provides all the methods specified in &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt;. It inherits from &lt;b&gt;Tie::Scalar&lt;/b&gt; and causes scalars tied to it to behave exactly like the built-in scalars, allowing for selective overloading of methods. The &lt;code&gt;new&lt;/code&gt; method is provided as a means of grandfathering, for classes that forget to provide their own &lt;code&gt;TIESCALAR&lt;/code&gt; method.</source>
          <target state="translated">이 모듈은 스칼라 타이 링 클래스를위한 일부 스켈 레탈 메소드를 제공합니다. 스칼라를 패키지에 묶는 데 필요한 함수 목록은 &lt;a href=&quot;../perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Scalar&lt;/b&gt; 패키지는 &lt;code&gt;new&lt;/code&gt; 메소드 와 &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; 및 &lt;code&gt;STORE&lt;/code&gt; 메소드를 제공합니다 . &lt;b&gt;타이 :: StdScalar의&lt;/b&gt; 패키지에 지정된 모든 방법을 제공 &lt;a href=&quot;../perltie&quot;&gt;perltie을&lt;/a&gt; . &lt;b&gt;Tie :: Scalar&lt;/b&gt; 에서 상속되며 연결된 스칼라가 내장 스칼라와 똑같이 동작하도록하여 선택적으로 메서드를 오버로드 할 수 있습니다. &lt;code&gt;new&lt;/code&gt; 방법은 자신의를 제공하는 것을 잊지 클래스, 기득권의 수단으로 제공됩니다 &lt;code&gt;TIESCALAR&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="1d35ccb6479014e9b69b5c1117e63a8ac16cdc51" translate="yes" xml:space="preserve">
          <source>This module provides some skeletal methods for scalar-tying classes. See &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; for a list of the functions required in tying a scalar to a package. The basic &lt;b&gt;Tie::Scalar&lt;/b&gt; package provides a &lt;code&gt;new&lt;/code&gt; method, as well as methods &lt;code&gt;TIESCALAR&lt;/code&gt;, &lt;code&gt;FETCH&lt;/code&gt; and &lt;code&gt;STORE&lt;/code&gt;. The &lt;b&gt;Tie::StdScalar&lt;/b&gt; package provides all the methods specified in &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt;. It inherits from &lt;b&gt;Tie::Scalar&lt;/b&gt; and causes scalars tied to it to behave exactly like the built-in scalars, allowing for selective overloading of methods. The &lt;code&gt;new&lt;/code&gt; method is provided as a means of grandfathering, for classes that forget to provide their own &lt;code&gt;TIESCALAR&lt;/code&gt; method.</source>
          <target state="translated">이 모듈은 스칼라 결합 클래스를위한 몇 가지 스켈 레탈 메서드를 제공합니다. 스칼라를 패키지에 묶는 데 필요한 함수 목록은 &lt;a href=&quot;perltie&quot;&gt;perltie&lt;/a&gt; 를 참조하십시오 . 기본 &lt;b&gt;Tie :: Scalar&lt;/b&gt; 패키지는 &lt;code&gt;new&lt;/code&gt; 메소드 와 &lt;code&gt;TIESCALAR&lt;/code&gt; , &lt;code&gt;FETCH&lt;/code&gt; 및 &lt;code&gt;STORE&lt;/code&gt; 메소드를 제공합니다 . &lt;b&gt;타이 :: StdScalar의&lt;/b&gt; 패키지에 지정된 모든 방법을 제공 &lt;a href=&quot;perltie&quot;&gt;perltie을&lt;/a&gt; . &lt;b&gt;Tie :: Scalar&lt;/b&gt; 에서 상속되며 여기에 연결된 스칼라가 기본 제공 스칼라와 똑같이 작동하도록하여 메서드의 선택적 오버로딩을 허용합니다. &lt;code&gt;new&lt;/code&gt; 방법은 자신의를 제공하는 것을 잊지 클래스, 기득권의 수단으로 제공됩니다 &lt;code&gt;TIESCALAR&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="974d73b0ae9a5c62aa55b2cce046ca17c11ca806" translate="yes" xml:space="preserve">
          <source>This module provides support for big integer calculations. It is not intended to be used directly, but rather as a parent class for backend libraries used by Math::BigInt, Math::BigFloat, Math::BigRat, and related modules.</source>
          <target state="translated">이 모듈은 큰 정수 계산을 지원합니다. 직접 사용하기위한 것이 아니라 Math :: BigInt, Math :: BigFloat, Math :: BigRat 및 관련 모듈에서 사용하는 백엔드 라이브러리의 상위 클래스로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="45a6ced9686dd2822231048fa2c17a6218884f07" translate="yes" xml:space="preserve">
          <source>This module provides the ability to use references as hash keys if you first &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; the hash variable to this module. Normally, only the keys of the tied hash itself are preserved as references; to use references as keys in hashes-of-hashes, use Tie::RefHash::Nestable, included as part of Tie::RefHash.</source>
          <target state="translated">이 모듈은 먼저 해시 변수를이 모듈에 &lt;code&gt;&lt;a href=&quot;../functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 한 경우 참조를 해시 키로 사용하는 기능을 제공합니다 . 일반적으로 연결된 해시 자체의 키만 참조로 유지됩니다. 해시 해시에서 키로 참조를 사용하려면 Tie :: RefHash :: Nestable을 사용하고 Tie :: RefHash의 일부로 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="b93d510d992a2ad95750d227093b68f7a2f27bd8" translate="yes" xml:space="preserve">
          <source>This module provides the ability to use references as hash keys if you first &lt;code&gt;tie&lt;/code&gt; the hash variable to this module. Normally, only the keys of the tied hash itself are preserved as references; to use references as keys in hashes-of-hashes, use Tie::RefHash::Nestable, included as part of Tie::RefHash.</source>
          <target state="translated">이 모듈은 먼저 해시 변수를이 모듈에 &lt;code&gt;tie&lt;/code&gt; 하는 경우 참조를 해시 키로 사용할 수있는 기능을 제공합니다 . 일반적으로 연결된 해시 자체의 키만 참조로 유지됩니다. 해시 해시에서 참조를 키로 사용하려면 Tie :: RefHash의 일부로 포함 된 Tie :: RefHash :: Nestable을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ebae6f4a623ce67e5227c5968ced52d6ec8a379b" translate="yes" xml:space="preserve">
          <source>This module provides things that are useful in decoding Pod E&amp;lt;...&amp;gt; sequences. Presumably, it should be used only by Pod parsers and/or formatters.</source>
          <target state="translated">이 모듈은 Pod E &amp;lt;...&amp;gt; 시퀀스를 디코딩하는 데 유용한 기능을 제공합니다. 아마도 포드 파서 및 / 또는 포맷터 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b9bdfe8079862de56a9be28719c20253e80c566" translate="yes" xml:space="preserve">
          <source>This module provides thread-safe FIFO queues that can be accessed safely by any number of threads.</source>
          <target state="translated">이 모듈은 여러 스레드가 안전하게 액세스 할 수있는 스레드 안전 FIFO 대기열을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c893e4865fad5c4ebef15f59be14ed58305bf748" translate="yes" xml:space="preserve">
          <source>This module provides you with objects that will collate according to your national character set, provided that the POSIX setlocale() function is supported on your system.</source>
          <target state="translated">이 모듈은 POSIX setlocale () 함수가 시스템에서 지원되는 경우 자국 문자 세트에 따라 조합 할 오브젝트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3c80ba9c5ba8104333b035c434045b2d217f883f" translate="yes" xml:space="preserve">
          <source>This module provides you with the framework to write</source>
          <target state="translated">이 모듈은 작성할 프레임 워크를 제공합니다</target>
        </trans-unit>
        <trans-unit id="a42cca3ae2e3ec2aed33868679dacb4f08255f28" translate="yes" xml:space="preserve">
          <source>This module replaces the standard &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; functions with implementations that return objects. It does so in a backwards compatible manner, so that using localtime/gmtime in the way documented in perlfunc will still return what you expect.</source>
          <target state="translated">이 모듈은 표준 &lt;code&gt;&lt;a href=&quot;../functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; 함수를 객체를 반환하는 구현으로 대체 합니다. 이전 버전과 호환되는 방식으로 수행되므로 perlfunc에 설명 된 방식으로 localtime / gmtime을 사용하면 여전히 원하는 결과가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ebad2bd284dfda2fca32fe79ad6c3153c79782e2" translate="yes" xml:space="preserve">
          <source>This module replaces the standard &lt;code&gt;localtime&lt;/code&gt; and &lt;code&gt;gmtime&lt;/code&gt; functions with implementations that return objects. It does so in a backwards compatible manner, so that using localtime/gmtime in the way documented in perlfunc will still return what you expect.</source>
          <target state="translated">이 모듈은 표준 &lt;code&gt;localtime&lt;/code&gt; 및 &lt;code&gt;gmtime&lt;/code&gt; 함수를 객체를 반환하는 구현으로 대체 합니다. 이전 버전과 호환되는 방식으로 수행하므로 perlfunc에 문서화 된 방식으로 localtime / gmtime을 사용하면 예상 한 결과가 계속 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a5bdc953dcd00c8d1fe5956d84a4a3e6df9745fe" translate="yes" xml:space="preserve">
          <source>This module should implement a method named &lt;code&gt;new&lt;/code&gt; that returns an object with two methods: &lt;code&gt;IN&lt;/code&gt; and &lt;code&gt;OUT&lt;/code&gt; . These should return filehandles to use for debugging input and output correspondingly. The &lt;code&gt;new&lt;/code&gt; method should inspect an argument containing the value of &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; at startup, or &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; otherwise. This file is not inspected for proper ownership, so security hazards are theoretically possible.</source>
          <target state="translated">이 모듈은 &lt;code&gt;IN&lt;/code&gt; 과 &lt;code&gt;OUT&lt;/code&gt; 의 두 가지 방법으로 객체를 반환하는 &lt;code&gt;new&lt;/code&gt; 라는 메서드를 구현해야합니다 . 입력 및 출력 디버깅에 사용할 파일 핸들을 반환해야합니다. &lt;code&gt;new&lt;/code&gt; 방법은의 값을 포함하는 인수 검사해야 &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; 시작할 때, 또는 &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; 그렇지. 이 파일은 적절한 소유권을 검사하지 않았으므로 이론적으로 보안 위험이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ae943e96b2618df870eb0a33680626556843298" translate="yes" xml:space="preserve">
          <source>This module should implement a method named &lt;code&gt;new&lt;/code&gt; that returns an object with two methods: &lt;code&gt;IN&lt;/code&gt; and &lt;code&gt;OUT&lt;/code&gt;. These should return filehandles to use for debugging input and output correspondingly. The &lt;code&gt;new&lt;/code&gt; method should inspect an argument containing the value of &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; at startup, or &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; otherwise. This file is not inspected for proper ownership, so security hazards are theoretically possible.</source>
          <target state="translated">이 모듈은 &lt;code&gt;IN&lt;/code&gt; 과 &lt;code&gt;OUT&lt;/code&gt; 이라는 두 가지 메서드가있는 객체를 반환하는 &lt;code&gt;new&lt;/code&gt; 라는 메서드를 구현해야합니다 . 입력 및 출력을 디버깅하는 데 사용할 파일 핸들을 적절하게 반환해야합니다. &lt;code&gt;new&lt;/code&gt; 방법은의 값을 포함하는 인수 검사해야 &lt;code&gt;$ENV{PERLDB_NOTTY}&lt;/code&gt; 시작할 때, 또는 &lt;code&gt;&quot;$ENV{HOME}/.perldbtty$$&quot;&lt;/code&gt; 그렇지. 이 파일은 적절한 소유권에 대해 검사되지 않으므로 이론적으로 보안 위험이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bad58f419e7f4aec9440c0245d2f7f3c13689acc" translate="yes" xml:space="preserve">
          <source>This module simplifies the process of diagnosing such problems. Just put this line on top of your main program:</source>
          <target state="translated">이 모듈은 이러한 문제를 진단하는 프로세스를 단순화합니다. 메인 프로그램의 맨 위에 다음 줄을 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="2af86b3d96524d0d85ce2a4bfec17fb68c6415ad" translate="yes" xml:space="preserve">
          <source>This module simplifies the task of writing test files for Perl modules, such that their output is in the format that &lt;a href=&quot;Test::Harness&quot;&gt;Test::Harness&lt;/a&gt; expects to see.</source>
          <target state="translated">이 모듈은 출력이 &lt;a href=&quot;Test::Harness&quot;&gt;Test :: Harness가&lt;/a&gt; 예상 하는 형식으로되도록 Perl 모듈에 대한 테스트 파일 작성 작업을 단순화합니다 .</target>
        </trans-unit>
        <trans-unit id="6a41ba09a40a54e49a9ee3baae88659ee7ff44a3" translate="yes" xml:space="preserve">
          <source>This module simplifies the task of writing test files for Perl modules, such that their output is in the format that &lt;a href=&quot;test/harness&quot;&gt;Test::Harness&lt;/a&gt; expects to see.</source>
          <target state="translated">이 모듈은 Perl 모듈에 대한 테스트 파일 작성 작업을 단순화하여 출력이 &lt;a href=&quot;test/harness&quot;&gt;Test :: Harness가&lt;/a&gt; 예상 하는 형식으로되어 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="11c0f42159d2cd738d87f4668e591361666ef5d1" translate="yes" xml:space="preserve">
          <source>This module supplies line breaking conformant with &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr14&quot;&gt;UAX#14 Unicode Line Breaking Algorithm&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.unicode.org%2freports%2ftr14&quot;&gt;UAX # 14 Unicode Line Breaking Algorithm&lt;/a&gt; 을 준수하는 줄 바꿈을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7362dd1991fb64d8e60d1766b453419474c1d7a8" translate="yes" xml:space="preserve">
          <source>This module supports dual-valued variables created using &lt;code&gt;dualvar()&lt;/code&gt; from &lt;a href=&quot;../scalar/util&quot;&gt;Scalar::Util&lt;/a&gt;. However, while &lt;code&gt;$!&lt;/code&gt; acts like a dualvar, it is implemented as a tied SV. To propagate its value, use the follow construct, if needed:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;../scalar/util&quot;&gt;Scalar :: Util의 &lt;/a&gt; &lt;code&gt;dualvar()&lt;/code&gt; 을 사용하여 생성 된 이중 값 변수를 지원합니다 . 그러나 &lt;code&gt;$!&lt;/code&gt; 듀얼 바처럼 작동하며, 묶인 SV로 구현됩니다. 값을 전파하려면 필요한 경우 다음 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fd505ee058fc17bfb1d30b711a408033af247e5c" translate="yes" xml:space="preserve">
          <source>This module supports dual-valued variables created using &lt;code&gt;dualvar()&lt;/code&gt; from &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar::Util&lt;/a&gt;. However, while &lt;code&gt;$!&lt;/code&gt; acts like a dualvar, it is implemented as a tied SV. To propagate its value, use the follow construct, if needed:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;Scalar::Util&quot;&gt;Scalar :: Util의 &lt;/a&gt; &lt;code&gt;dualvar()&lt;/code&gt; 를 사용하여 생성 된 이중 값 변수를 지원합니다 . 그러나 &lt;code&gt;$!&lt;/code&gt; dualvar처럼 작동하며 연결된 SV로 구현됩니다. 값을 전파하려면 필요한 경우 다음 구문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4a9a2cc7b64dab0e46b52256bb4b3682e797fe2a" translate="yes" xml:space="preserve">
          <source>This module supports the sharing of the following data types only: scalars and scalar refs, arrays and array refs, and hashes and hash refs.</source>
          <target state="translated">이 모듈은 스칼라 및 스칼라 참조, 배열 및 배열 참조, 해시 및 해시 참조와 같은 데이터 유형의 공유 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a0c98feb7e76c5e1cd4d46ac2f59afc0263d11ba" translate="yes" xml:space="preserve">
          <source>This module takes the existing &lt;code&gt;File::Glob&lt;/code&gt; module as a starting point and extends it to allow new filenames to be derived from the files matched by &lt;code&gt;File::Glob&lt;/code&gt; .</source>
          <target state="translated">이 모듈은 기존 &lt;code&gt;File::Glob&lt;/code&gt; 모듈을 시작점으로 사용하여 &lt;code&gt;File::Glob&lt;/code&gt; 과 일치하는 파일 에서 새 파일 이름을 파생 할 수 있도록 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="0cfd10e3f1ec19589cfc4011f0c16d6ed897f4ea" translate="yes" xml:space="preserve">
          <source>This module takes the existing &lt;code&gt;File::Glob&lt;/code&gt; module as a starting point and extends it to allow new filenames to be derived from the files matched by &lt;code&gt;File::Glob&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 기존 &lt;code&gt;File::Glob&lt;/code&gt; 모듈을 시작점으로 사용하고 &lt;code&gt;File::Glob&lt;/code&gt; 과 일치하는 파일 에서 새 파일 이름이 파생 될 수 있도록 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="052bc1b3338f70ab6cb4be4a053d4fd7e5528e2e" translate="yes" xml:space="preserve">
          <source>This module tells its users that functions in the FOOBAR package are to be autoloaded from after the &lt;code&gt;__DATA__&lt;/code&gt; token. See also &lt;a href=&quot;perlsub#Autoloading&quot;&gt;&quot;Autoloading&quot; in perlsub&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 사용자에게 FOOBAR 패키지의 기능이 &lt;code&gt;__DATA__&lt;/code&gt; 토큰 이후에서 자동로드된다는 것을 알려줍니다 . &lt;a href=&quot;perlsub#Autoloading&quot;&gt;perlsub의 &quot;자동로드&quot;를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a954cd9e0b1a91ff11e964474367fdd384bdca9c" translate="yes" xml:space="preserve">
          <source>This module tells its users that functions in the FOOBAR package are to be autoloaded from after the &lt;code&gt;__DATA__&lt;/code&gt; token. See also &lt;a href=&quot;perlsub#Autoloading&quot;&gt;Autoloading in perlsub&lt;/a&gt;.</source>
          <target state="translated">이 모듈은 사용자에게 FOOBAR 패키지의 기능이 &lt;code&gt;__DATA__&lt;/code&gt; 토큰 이후에 자동로드되도록 알려줍니다 . &lt;a href=&quot;perlsub#Autoloading&quot;&gt;perlsub 자동로드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4932847f497c060c74592b6ad7e18f95a164be8" translate="yes" xml:space="preserve">
          <source>This module tests the perl C API. Also exposes various bit of the perl internals for the use of core test scripts.</source>
          <target state="translated">이 모듈은 perl C API를 테스트합니다. 또한 핵심 테스트 스크립트 사용을위한 다양한 펄 내부를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="0a9a81649e360d7b3e7438be28feaaf818a5ce22" translate="yes" xml:space="preserve">
          <source>This module uses &lt;a href=&quot;Term::Cap&quot;&gt;Term::Cap&lt;/a&gt; to find the correct terminal settings. See the documentation of that module for how it finds terminal database information and how to override that behavior if necessary. If unable to find control strings for bold and underscore formatting, that formatting is skipped, resulting in the same output as Pod::Text.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;Term::Cap&quot;&gt;Term :: Cap&lt;/a&gt; 을 사용 하여 올바른 터미널 설정을 찾습니다. 터미널 데이터베이스 정보를 찾는 방법과 필요한 경우 해당 동작을 재정의하는 방법은 해당 모듈의 설명서를 참조하십시오. 굵게 및 밑줄 형식에 대한 제어 문자열을 찾을 수없는 경우 해당 형식을 건너 뛰고 결과적으로 Pod :: Text와 동일한 출력이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="939a336b2bb3143f369fbb6ba3a4974db4ff7afa" translate="yes" xml:space="preserve">
          <source>This module uses POSIX::setlocale(). The basic collation conversion is done by strxfrm() which terminates at NUL characters being a decent C routine. collate_xfrm() handles embedded NUL characters gracefully.</source>
          <target state="translated">이 모듈은 POSIX :: setlocale ()을 사용합니다. 기본 데이터 정렬 변환은 적절한 C 루틴 인 NUL 문자에서 끝나는 strxfrm ()에 의해 수행됩니다. collate_xfrm ()은 포함 된 NUL 문자를 정상적으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="3d7e780fb3434a21970906d8c1e16da4e1e4c306" translate="yes" xml:space="preserve">
          <source>This module uses Term::Cap to retrieve the formatting escape sequences for the current terminal, and falls back on the ECMA-48 (the same in this regard as ANSI X3.64 and ISO 6429, the escape codes also used by DEC VT100 terminals) if the bold, underline, and reset codes aren't set in the termcap information.</source>
          <target state="translated">이 모듈은 Term :: Cap을 사용하여 현재 터미널에 대한 형식화 이스케이프 시퀀스를 검색하고 ECMA-48 (이는 ANSI X3.64 및 ISO 6429와 동일), DEC VT100 터미널에서도 이스케이프 코드를 사용합니다. ) 굵게, 밑줄 및 재설정 코드가 termcap 정보에 설정되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="058e434497d0f41de20212a7e71136f58de19c26" translate="yes" xml:space="preserve">
          <source>This module uses the Encode module.</source>
          <target state="translated">이 모듈은 Encode 모듈을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ecd2d794e766a834737cd883e299b1adbe33f061" translate="yes" xml:space="preserve">
          <source>This module validates a CPAN Meta structure against the version of the the specification claimed in the &lt;code&gt;meta-spec&lt;/code&gt; field of the structure.</source>
          <target state="translated">이 모듈은 구조의 &lt;code&gt;meta-spec&lt;/code&gt; 필드 에서 요구되는 사양의 버전에 대해 CPAN Meta 구조의 유효성을 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="f4b71953fa4633537c604ac518e043ed458e0579" translate="yes" xml:space="preserve">
          <source>This module was conceived while talking with Tony Bowden in his kitchen one night about the problems I was having writing some really complicated feature into the new Testing module. He observed that the main problem is not dealing with these edge cases but that people hate to write tests &lt;b&gt;at all&lt;/b&gt;. What was needed was a dead simple module that took all the hard work out of testing and was really, really easy to learn. Paul Johnson simultaneously had this idea (unfortunately, he wasn't in Tony's kitchen). This is it.</source>
          <target state="translated">이 모듈은 어느 날 밤 그의 부엌에서 Tony Bowden과 새로운 테스팅 모듈에 정말 복잡한 기능을 쓰는 데 있었던 문제에 대해 이야기하면서 생각되었습니다. 그는 주요한 문제는 이러한 엣지 사례를 다루지 않고 사람들이 &lt;b&gt;전혀&lt;/b&gt; 테스트를 작성하는 것을 싫어한다는 것을 관찰했다 . 필요한 것은 테스트에서 모든 노력을 빼앗아 실제로 배우기 쉬운 죽은 간단한 모듈이었습니다. Paul Johnson은 동시에이 아이디어를 가지고있었습니다 (불행히도 그는 Tony의 부엌에 없었습니다). 이거 야.</target>
        </trans-unit>
        <trans-unit id="44e053a287d50cc7ccc07846fa0cd204c00c77bf" translate="yes" xml:space="preserve">
          <source>This module was forked from &lt;a href=&quot;base&quot;&gt;base&lt;/a&gt; to remove the cruft that had accumulated in it.</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;base&quot;&gt;베이스&lt;/a&gt; 에 포크로 쌓여 있던 크래프트를 제거했습니다.</target>
        </trans-unit>
        <trans-unit id="415f859ceb0027d691de683de60a6caa41bf897e" translate="yes" xml:space="preserve">
          <source>This module was introduced with Perl 5.004_04.</source>
          <target state="translated">이 모듈은 Perl 5.004_04에서 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="d78d05cb96bc7dd60c1272000024e5786c3b344f" translate="yes" xml:space="preserve">
          <source>This module was originally maintained in Perl core by the Perl 5 Porters.</source>
          <target state="translated">이 모듈은 원래 Perl 5 Porters에 의해 Perl 코어에서 유지 보수되었습니다.</target>
        </trans-unit>
        <trans-unit id="d496390246382aaea7191d7bd504a81ceae75b9b" translate="yes" xml:space="preserve">
          <source>This module was written by Paul Marquess,</source>
          <target state="translated">이 모듈은 Paul Marquess가 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="bc6d88c0756ae538fe8de07d7958dc0a1b51e622" translate="yes" xml:space="preserve">
          <source>This module was written by Paul Marquess, &lt;code&gt;pmqs@cpan.org&lt;/code&gt;.</source>
          <target state="translated">이 모듈은 Paul Marquess, &lt;code&gt;pmqs@cpan.org&lt;/code&gt; 에 의해 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="447cd8889bedc96882c7e73b779d78b4d5490566" translate="yes" xml:space="preserve">
          <source>This module was written to be able to return the configuration for the currently used perl as deeply as needed for the CPANTESTERS framework. Up until now they used the output of myconfig as a single text blob, and so it was missing the vital binary characteristics of the running perl and the optional applied patches.</source>
          <target state="translated">이 모듈은 CPANTESTERS 프레임 워크에 필요한만큼 현재 사용되는 펄의 구성을 반환 할 수 있도록 작성되었습니다. 지금까지 그들은 myconfig의 출력을 단일 텍스트 blob으로 사용했기 때문에 실행중인 perl 및 선택적 적용 패치의 중요한 바이너리 특성이 누락되었습니다.</target>
        </trans-unit>
        <trans-unit id="db6bc597ca48fae1b90746fab4916cd0188777f9" translate="yes" xml:space="preserve">
          <source>This module will arrange for the following methods to be available via the object returned from the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">이 모듈은 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 호출 에서 반환 된 객체를 통해 다음 메소드를 사용할 수 있도록 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="0daa24844007b58d785b5b27ec35609e2bc267e2" translate="yes" xml:space="preserve">
          <source>This module will arrange for the following methods to be available via the object returned from the &lt;code&gt;tie&lt;/code&gt; call.</source>
          <target state="translated">이 모듈은 &lt;code&gt;tie&lt;/code&gt; 호출 에서 반환 된 개체를 통해 다음 메서드를 사용할 수 있도록 정렬합니다 .</target>
        </trans-unit>
        <trans-unit id="2764651445501a5ce090459b163069724d513467" translate="yes" xml:space="preserve">
          <source>This module will ensure that all data written to the DBM will be encoded in UTF-8.</source>
          <target state="translated">이 모듈은 DBM에 기록 된 모든 데이터가 UTF-8로 인코딩되도록합니다.</target>
        </trans-unit>
        <trans-unit id="d4e571c7af10e51826ae47ab8231a6af4b7edd1a" translate="yes" xml:space="preserve">
          <source>This module will have no effect unless Term::ANSIColor is installed.</source>
          <target state="translated">Term :: ANSIColor를 설치하지 않으면이 모듈이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="753074c360c010972baa819f6207bebbcf1369a9" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getgrent(), getgrgid(), and getgrnam() functions, replacing them with versions that return &quot;User::grent&quot; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 getgrent (), getgrgid () 및 getgrnam () 함수를 재정 의하여 &quot;User :: grent&quot;객체를 반환하는 버전으로 대체합니다. 이 객체에는 C의 passwd 구조에서 유사한 이름의 구조 필드 이름을 반환하는 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc002eb3536b764cc0a1a4a051dbfbb6d0617a7a" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getgrent(), getgruid(), and getgrnam() functions, replacing them with versions that return &quot;User::grent&quot; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 getgrent (), getgruid () 및 getgrnam () 함수를 재정 의하여 &quot;User :: grent&quot;객체를 반환하는 버전으로 대체합니다. 이 객체에는 C의 암호 구조에서 비슷한 이름의 구조 필드 이름을 반환하는 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1581c51cdf9361d52e5059029b51bf081eb34a2a" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core gethostbyname() and gethostbyaddr() functions, replacing them with versions that return &quot;Net::hostent&quot; objects. This object has methods that return the similarly named structure field name from the C's hostent structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 gethostbyname () 및 gethostbyaddr () 함수를 재정 의하여 &quot;Net :: hostent&quot;객체를 반환하는 버전으로 대체합니다. 이 객체에는 C의 호스트 구조에서 비슷한 이름의 구조 필드 이름을 반환하는 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cf48308305a0353920dde6f36f9628e64db01d0" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getnetbyname() and getnetbyaddr() functions, replacing them with versions that return &quot;Net::netent&quot; objects. This object has methods that return the similarly named structure field name from the C's netent structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 getnetbyname () 및 getnetbyaddr () 함수를 재정 의하여 &quot;Net :: netent&quot;객체를 반환하는 버전으로 대체합니다. 이 객체에는 C의 netent 구조체에서 비슷한 이름의 구조체 필드 이름을 반환하는 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="63eeed3630a3c131f9be311caba9fa2bc27d9b47" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getprotoent(), getprotobyname(), and getnetbyport() functions, replacing them with versions that return &quot;Net::protoent&quot; objects. They take default second arguments of &quot;tcp&quot;. This object has methods that return the similarly named structure field name from the C's protoent structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 getprotoent (), getprotobyname () 및 getnetbyport () 함수를 재정 의하여 &quot;Net :: protoent&quot;객체를 반환하는 버전으로 대체합니다. &quot;tcp&quot;의 기본 두 번째 인수를 사용합니다. 이 객체에는 C의 protoent 구조에서 비슷한 이름의 구조 필드 이름을 반환하는 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4107e545f5b1cf8c8a8164c3254d8e830266adf1" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getpwent(), getpwuid(), and getpwnam() functions, replacing them with versions that return &lt;code&gt;User::pwent&lt;/code&gt; objects. This object has methods that return the similarly named structure field name from the C's passwd structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 getpwent (), getpwuid () 및 getpwnam () 함수를 &lt;code&gt;User::pwent&lt;/code&gt; 객체 를 반환하는 버전으로 대체합니다 . 이 객체에는 C의 암호 구조에서 비슷한 이름의 구조 필드 이름을 반환하는 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="10fb02d2375c44b6670d64106c1e02dfe50c1c6b" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core getservent(), getservbyname(), and getnetbyport() functions, replacing them with versions that return &quot;Net::servent&quot; objects. They take default second arguments of &quot;tcp&quot;. This object has methods that return the similarly named structure field name from the C's servent structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 getservent (), getservbyname () 및 getnetbyport () 함수를 재정 의하여 &quot;Net :: servent&quot;객체를 반환하는 버전으로 대체합니다. &quot;tcp&quot;의 기본 두 번째 인수를 사용합니다. 이 객체에는 C의 서브 스트레이트 구조에서 비슷한 이름의 구조 필드 이름을 리턴하는 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7599d7934dafe0542e5b1a0c799f665df33f32e3" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core gmtime() function, replacing it with a version that returns &quot;Time::tm&quot; objects. This object has methods that return the similarly named structure field name from the C's tm structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 gmtime () 함수를 재정 의하여 &quot;Time :: tm&quot;객체를 반환하는 버전으로 대체합니다. 이 객체에는 C의 tm 구조에서 비슷한 이름의 구조 필드 이름을 반환하는 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c7368710f29f58e692e516e823ad1d056f89a07" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core localtime() function, replacing it with a version that returns &quot;Time::tm&quot; objects. This object has methods that return the similarly named structure field name from the C's tm structure from</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 localtime () 함수를 재정 의하여 &quot;Time :: tm&quot;객체를 반환하는 버전으로 대체합니다. 이 객체에는 C의 tm 구조에서 비슷한 이름의 구조 필드 이름을 반환하는 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d73f3c14e45154d8cf626f7be1ef9892237475eb" translate="yes" xml:space="preserve">
          <source>This module's default exports override the core stat() and lstat() functions, replacing them with versions that return &quot;File::stat&quot; objects. This object has methods that return the similarly named structure field name from the stat(2) function; namely, dev, ino, mode, nlink, uid, gid, rdev, size, atime, mtime, ctime, blksize, and blocks.</source>
          <target state="translated">이 모듈의 기본 내보내기는 핵심 stat () 및 lstat () 함수를 재정 의하여 &quot;File :: stat&quot;객체를 반환하는 버전으로 대체합니다. 이 객체에는 stat (2) 함수에서 비슷한 이름의 구조 필드 이름을 반환하는 메서드가 있습니다. 즉, dev, ino, mode, nlink, uid, gid, rdev, size, atime, mtime, ctime, blksize 및 blocks입니다.</target>
        </trans-unit>
        <trans-unit id="cd05da270956b31cc43582962e51390407dca252" translate="yes" xml:space="preserve">
          <source>This module, when inherited by a package, allows that package's class to define attribute handler subroutines for specific attributes. Variables and subroutines subsequently defined in that package, or in packages derived from that package may be given attributes with the same names as the attribute handler subroutines, which will then be called in one of the compilation phases (i.e. in a &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; , or &lt;code&gt;END&lt;/code&gt; block). (&lt;code&gt;UNITCHECK&lt;/code&gt; blocks don't correspond to a global compilation phase, so they can't be specified here.)</source>
          <target state="translated">이 모듈은 패키지에 의해 상속 될 때 패키지의 클래스가 특정 속성에 대한 속성 핸들러 서브 루틴을 정의 할 수 있도록합니다. 해당 패키지 또는 해당 패키지에서 파생 된 패키지에 이후에 정의 된 변수 및 서브 루틴에는 속성 처리기 서브 루틴과 동일한 이름의 속성이 제공 될 수 있으며, 컴파일 단계 중 하나 (예 : &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; ) 에서 호출됩니다 또는 &lt;code&gt;END&lt;/code&gt; 블록). ( &lt;code&gt;UNITCHECK&lt;/code&gt; 의 그들이 여기에 지정 될 수 있도록 블록, 글로벌 컴파일 단계에 해당하지 않습니다.)</target>
        </trans-unit>
        <trans-unit id="99dcf55d867c5d7dcda0db6120bea9765e3ea428" translate="yes" xml:space="preserve">
          <source>This module, when inherited by a package, allows that package's class to define attribute handler subroutines for specific attributes. Variables and subroutines subsequently defined in that package, or in packages derived from that package may be given attributes with the same names as the attribute handler subroutines, which will then be called in one of the compilation phases (i.e. in a &lt;code&gt;BEGIN&lt;/code&gt;, &lt;code&gt;CHECK&lt;/code&gt;, &lt;code&gt;INIT&lt;/code&gt;, or &lt;code&gt;END&lt;/code&gt; block). (&lt;code&gt;UNITCHECK&lt;/code&gt; blocks don't correspond to a global compilation phase, so they can't be specified here.)</source>
          <target state="translated">이 모듈은 패키지에 의해 상속 될 때 해당 패키지의 클래스가 특정 속성에 대한 속성 핸들러 서브 루틴을 정의 할 수 있도록합니다. 해당 패키지 또는 해당 패키지에서 파생 된 패키지에서 이후에 정의 된 변수 및 서브 루틴에는 속성 핸들러 서브 루틴과 동일한 이름을 가진 속성이 주어질 수 있으며, 이는 컴파일 단계 중 하나에서 호출됩니다 (예 : &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; ). , 또는 &lt;code&gt;END&lt;/code&gt; 블록). ( &lt;code&gt;UNITCHECK&lt;/code&gt; 블록은 전역 컴파일 단계에 해당하지 않으므로 여기에서 지정할 수 없습니다.)</target>
        </trans-unit>
        <trans-unit id="d4b82d477760eacd25bf3c70a5e788527be511b5" translate="yes" xml:space="preserve">
          <source>This modules handles the BOM as follows.</source>
          <target state="translated">이 모듈은 다음과 같이 BOM을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="f10c5ffd35143aacf9d4aee6ffb8d09db8a38f8d" translate="yes" xml:space="preserve">
          <source>This name actually evaluates to a sequence of two Katakana characters, not just a single one, and it is illegal to try to take the complement of a sequence. (Mathematically it would mean any sequence of characters from 0 to infinity in length that weren't these two in a row, and that is likely not of any real use.)</source>
          <target state="translated">이 이름은 실제로 단일 문자가 아닌 두 가타카나 문자의 시퀀스로 평가되며 시퀀스의 보완을 시도하는 것은 불법입니다. (수학적으로 이것은 연속적으로이 두 개가 아닌 0에서 무한대 길이의 문자 시퀀스를 의미하며 실제로 사용되지 않을 가능성이 높습니다.)</target>
        </trans-unit>
        <trans-unit id="3973d4b3df1b4f6e4e1a4578c3854df16aa9cfcc" translate="yes" xml:space="preserve">
          <source>This name should be as descriptive, accurate, and complete as possible. Avoid any risk of ambiguity. Always try to use two or more whole words. Generally the name should reflect what is special about what the module does rather than how it does it. Please use nested module names to group informally or categorize a module. There should be a very good reason for a module not to have a nested name. Module names should begin with a capital letter.</source>
          <target state="translated">이 이름은 설명이 정확하고 정확해야합니다. 모호성의 위험을 피하십시오. 항상 두 개 이상의 전체 단어를 사용하십시오. 일반적으로 이름은 모듈이 수행하는 방식이 아니라 모듈의 기능에 대한 특별한 사항을 반영해야합니다. 중첩 된 모듈 이름을 사용하여 비공식적으로 그룹화하거나 모듈을 분류하십시오. 모듈이 중첩 된 이름을 가지지 않는 데에는 상당한 이유가 있습니다. 모듈 이름은 대문자로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="179dbc2dff329a2eb588f358318a7847c0e2dc93" translate="yes" xml:space="preserve">
          <source>This namespace is for bundles of tools and plugins. Loading one of these may load multiple tools and plugins. Modules in this namespace should not implement tools directly. In general modules in this namespace should load tools and plugins, then re-export things into the consumers namespace.</source>
          <target state="translated">이 네임 스페이스는 도구 및 플러그인 번들용입니다. 이 중 하나를로드하면 여러 도구와 플러그인이로드 될 수 있습니다. 이 네임 스페이스의 모듈은 도구를 직접 구현해서는 안됩니다. 일반적으로이 네임 스페이스의 모듈은 도구와 플러그인을로드 한 다음 소비자 네임 스페이스로 항목을 다시 내 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="25625211c4cda5e1d4faa1db8d7e10f093eef9f2" translate="yes" xml:space="preserve">
          <source>This namespace is for general utilities used by testing tools. Please be considerate when adding new modules to this namespace.</source>
          <target state="translated">이 네임 스페이스는 테스트 도구에서 사용하는 일반 유틸리티 용입니다. 이 네임 스페이스에 새 모듈을 추가 할 때주의하십시오.</target>
        </trans-unit>
        <trans-unit id="90daa65eb98c6c93bba627fab2d39064d5b2e4dd" translate="yes" xml:space="preserve">
          <source>This namespace is for modules that cause a test to be skipped when conditions do not allow it to run. Examples would be modules that skip the test on older perls, or when non-essential modules have not been installed.</source>
          <target state="translated">이 네임 스페이스는 조건이 실행을 허용하지 않을 때 테스트를 건너 뛰도록하는 모듈 용입니다. 예를 들어 이전 펄에서 테스트를 건너 뛰거나 필수가 아닌 모듈이 설치되지 않은 모듈이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f206c1bcae194bffc342770e7b420f8da8111044" translate="yes" xml:space="preserve">
          <source>This namespace is for plugins. Plugins are modules that change or enhance the behavior of Test2. An example of a plugin is a module that sets the encoding to utf8 globally. Another example is a module that causes a bail-out event after the first test failure.</source>
          <target state="translated">이 네임 스페이스는 플러그인 용입니다. 플러그인은 Test2의 동작을 변경하거나 향상시키는 모듈입니다. 플러그인의 예는 인코딩을 전역 적으로 utf8로 설정하는 모듈입니다. 또 다른 예는 첫 번째 테스트 실패 후 구제 금융 이벤트를 발생시키는 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="2bf32d61a54ff1e8a671180167e4172f9902a980" translate="yes" xml:space="preserve">
          <source>This namespace is for sets of tools. Modules in this namespace should export tools like &lt;code&gt;ok()&lt;/code&gt; and &lt;code&gt;is()&lt;/code&gt;. Most things written for Test2 should go here. Modules in this namespace &lt;b&gt;MUST NOT&lt;/b&gt; export subs from other tools. See the &lt;a href=&quot;#Test2%3A%3ABundle%3A%3A&quot;&gt;&quot;Test2::Bundle::&quot;&lt;/a&gt; namespace if you want to do that.</source>
          <target state="translated">이 네임 스페이스는 도구 세트 용입니다. 이 네임 스페이스의 모듈은 &lt;code&gt;ok()&lt;/code&gt; 및 &lt;code&gt;is()&lt;/code&gt; 와 같은 도구를 내 보내야합니다 . Test2 용으로 작성된 대부분의 항목은 여기에 있어야합니다. 이 네임 스페이스의 모듈이 &lt;b&gt;안&lt;/b&gt; 다른 도구에서 잠수함을 수출하고 있습니다. 그렇게 하려면 &lt;a href=&quot;#Test2%3A%3ABundle%3A%3A&quot;&gt;&quot;Test2 :: Bundle ::&quot;&lt;/a&gt; 네임 스페이스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e4e24a5df257f50d009292829b2bfd20798df4c" translate="yes" xml:space="preserve">
          <source>This newer style is consistent with the values of other Unicode properties. To preserve backward compatibility, all the functions in Unicode::UCD that return block names (except as noted) return the old-style ones. &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases()&quot;&lt;/a&gt; returns the new-style and can be used to convert from old-style to new-style:</source>
          <target state="translated">이 새로운 스타일은 다른 유니 코드 속성의 값과 일치합니다. 이전 버전과의 호환성을 유지하기 위해 블록 이름을 반환하는 Unicode :: UCD의 모든 함수 (설명 된 경우 제외)는 이전 스타일의 이름을 반환합니다. &lt;a href=&quot;#prop_value_aliases%28%29&quot;&gt;&quot;prop_value_aliases ()&quot;&lt;/a&gt; 는 새 스타일을 반환하며 이전 스타일에서 새 스타일로 변환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64f3b2bdf54de52b80ace773443b078978c32943" translate="yes" xml:space="preserve">
          <source>This newer style is consistent with the values of other Unicode properties. To preserve backward compatibility, all the functions in Unicode::UCD that return block names (except as noted) return the old-style ones. &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases()&lt;/a&gt; returns the new-style and can be used to convert from old-style to new-style:</source>
          <target state="translated">이 새로운 스타일은 다른 유니 코드 속성의 값과 일치합니다. 이전 버전과의 호환성을 유지하기 위해 블록 이름을 반환하는 유니 코드 :: UCD의 모든 함수 (표시된 것 제외)는 이전 스타일의 함수를 반환합니다. &lt;a href=&quot;#prop_value_aliases()&quot;&gt;prop_value_aliases ()&lt;/a&gt; 는 새 스타일을 반환하며 이전 스타일에서 새 스타일로 변환하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00215ed790925e9c90e37af405255e37b3a2b3c0" translate="yes" xml:space="preserve">
          <source>This normalizer function will store scalar context return values in the disk file under keys that begin with &lt;code&gt;S:&lt;/code&gt; , and list context return values under keys that begin with &lt;code&gt;L:&lt;/code&gt; .</source>
          <target state="translated">이 노멀 라이저 함수는 스칼라 컨텍스트 리턴 값을 디스크 파일의 &lt;code&gt;S:&lt;/code&gt; 시작하는 키 아래에 저장 하고 &lt;code&gt;L:&lt;/code&gt; 시작하는 키 아래에 컨텍스트 리턴 값을 나열합니다 .</target>
        </trans-unit>
        <trans-unit id="565b14e4a137ea8e183d1678fe124d67dbe415ce" translate="yes" xml:space="preserve">
          <source>This normalizer function will store scalar context return values in the disk file under keys that begin with &lt;code&gt;S:&lt;/code&gt;, and list context return values under keys that begin with &lt;code&gt;L:&lt;/code&gt;.</source>
          <target state="translated">이 정규화 함수는 &lt;code&gt;S:&lt;/code&gt; 시작하는 키 아래의 디스크 파일에 스칼라 컨텍스트 반환 값을 저장 하고 &lt;code&gt;L:&lt;/code&gt; 시작하는 키 아래에 컨텍스트 반환 값을 나열합니다 .</target>
        </trans-unit>
        <trans-unit id="af82ed0821cc193322bac301a4efb5cd0be9cd17" translate="yes" xml:space="preserve">
          <source>This normally doesn't happen at the Perl level unless a variable is undef'ed or the last variable holding a reference to it is changed or overwritten. At the internal level, however, reference counts can be manipulated with the following macros:</source>
          <target state="translated">변수가 정의되지 않았거나 변수에 대한 참조를 보유한 마지막 변수가 변경되거나 덮어 쓰기되지 않으면 일반적으로 Perl 수준에서 발생하지 않습니다. 그러나 내부 수준에서는 다음 매크로를 사용하여 참조 카운트를 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b1609ead2a84dd600fa52f07b23743e8e94c4e5" translate="yes" xml:space="preserve">
          <source>This notes a problem in the Pod, which will be reported in the &quot;Pod Errors&quot; section of the document and/or sent to STDERR, depending on the values of the attributes &lt;code&gt;no_whining&lt;/code&gt;, &lt;code&gt;no_errata_section&lt;/code&gt;, and &lt;code&gt;complain_stderr&lt;/code&gt;.</source>
          <target state="translated">이는 문서의 &quot;Pod 오류&quot;섹션에보고되거나 &lt;code&gt;no_whining&lt;/code&gt; , &lt;code&gt;no_errata_section&lt;/code&gt; 및 &lt;code&gt;complain_stderr&lt;/code&gt; 속성의 값에 따라 STDERR로 전송되는 Pod의 문제를 나타 냅니다 .</target>
        </trans-unit>
        <trans-unit id="7a84db8c8f72a870ae46a23a931a2d5e7928615c" translate="yes" xml:space="preserve">
          <source>This notes an error like &lt;code&gt;whine&lt;/code&gt; does, except that it is not suppressible with &lt;code&gt;no_whining&lt;/code&gt;. This should be used only for very serious errors.</source>
          <target state="translated">이것은 &lt;code&gt;no_whining&lt;/code&gt; 으로 억제 할 수 없다는 점을 제외하고는 &lt;code&gt;whine&lt;/code&gt; 와 같은 오류 를 나타냅니다 . 이것은 매우 심각한 오류에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="781831a4fcab5b31277395d81bbf01ada61ab8de" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_REVISION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">이 숫자 는 Perl 의 가장 초기 호환 가능한 &lt;code&gt;PERL_REVISION&lt;/code&gt; 을 설명합니다 ( 여기서 &lt;code&gt;compatibility&lt;/code&gt; 은 충분한 것으로 정의 됨)</target>
        </trans-unit>
        <trans-unit id="0c3631049473f76e2dd0f9b657a8b5bb99ef0ce8" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">이 숫자 는 Perl 의 가장 초기 호환 가능한 &lt;code&gt;PERL_SUBVERSION&lt;/code&gt; 을 설명합니다 ( 여기서 &lt;code&gt;compatibility&lt;/code&gt; 은 충분한 것으로 정의 됨)</target>
        </trans-unit>
        <trans-unit id="74feee9a515674df1fbf3fa550f4ebde2a393edc" translate="yes" xml:space="preserve">
          <source>This number describes the earliest compatible &lt;code&gt;PERL_VERSION&lt;/code&gt; of Perl (&lt;code&gt;compatibility&lt;/code&gt; here being defined as sufficient</source>
          <target state="translated">이 숫자 는 Perl 의 가장 초기 호환 가능한 &lt;code&gt;PERL_VERSION&lt;/code&gt; 을 설명합니다 ( 여기서 &lt;code&gt;compatibility&lt;/code&gt; 은 충분한 것으로 정의 됨)</target>
        </trans-unit>
        <trans-unit id="091c6d1236713704a5d644b59c4d940e46aa2271" translate="yes" xml:space="preserve">
          <source>This object consumes &lt;a href=&quot;Test2::Util::ExternalMeta&quot;&gt;Test2::Util::ExternalMeta&lt;/a&gt; which provides a consistent way for you to attach meta-data to instances of this class. This is useful for tools, plugins, and other extensions.</source>
          <target state="translated">이 개체는 이 클래스의 인스턴스에 메타 데이터를 연결하는 일관된 방법을 제공하는 &lt;a href=&quot;Test2::Util::ExternalMeta&quot;&gt;Test2 :: Util :: ExternalMeta&lt;/a&gt; 를 사용합니다. 이것은 도구, 플러그인 및 기타 확장에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3daf144ec9102bb41c4b3e85d9d925806042ef77" translate="yes" xml:space="preserve">
          <source>This object corresponds to a tree of parsed POD text. As POD text is scanned from left to right, it is parsed into an ordered list of text-strings and &lt;b&gt;Pod::InteriorSequence&lt;/b&gt; objects (in order of appearance). A &lt;b&gt;Pod::ParseTree&lt;/b&gt; object corresponds to this list of strings and sequences. Each interior sequence in the parse-tree may itself contain a parse-tree (since interior sequences may be nested).</source>
          <target state="translated">이 객체는 파싱 된 POD 텍스트 트리에 해당합니다. POD 텍스트는 왼쪽에서 오른쪽으로 스캔 될 때 순서가 지정된 텍스트 문자열 및 &lt;b&gt;Pod :: InteriorSequence&lt;/b&gt; 객체 (모양 순서) 로 구문 분석됩니다 . &lt;b&gt;포드 :: 파스 트리의&lt;/b&gt; 문자열과 시퀀스이 목록 객체에 해당합니다. 구문 분석 트리의 각 내부 시퀀스는 자체적으로 구문 분석 트리를 포함 할 수 있습니다 (내부 시퀀스가 ​​중첩 될 수 있으므로).</target>
        </trans-unit>
        <trans-unit id="bf5376f8ad113b045fd4b2cd36ed30b7f5f4f548" translate="yes" xml:space="preserve">
          <source>This object encapsulates the global shared state tracked by &lt;a href=&quot;test2&quot;&gt;Test2&lt;/a&gt;. A single global instance of this package is stored (and obscured) by the &lt;a href=&quot;Test2::API&quot;&gt;Test2::API&lt;/a&gt; package.</source>
          <target state="translated">이 객체는 &lt;a href=&quot;test2&quot;&gt;Test2가&lt;/a&gt; 추적하는 전역 공유 상태를 캡슐화합니다 . 이 패키지의 단일 전역 인스턴스는 &lt;a href=&quot;Test2::API&quot;&gt;Test2 :: API&lt;/a&gt; 패키지에 의해 저장되고 가려집니다 .</target>
        </trans-unit>
        <trans-unit id="c65aad4d731c650bf589bf8e7d6030572457b243" translate="yes" xml:space="preserve">
          <source>This object model leads to a tight coupling between subclasses. If one class wants to inherit from another (and both classes access object data), the classes must agree about implementation details. Inheritance can only be used among classes that are maintained together, in a single source or not.</source>
          <target state="translated">이 객체 모델은 서브 클래스 사이의 긴밀한 연결로 이어집니다. 한 클래스가 다른 클래스에서 상속을 원하고 (두 클래스 모두 객체 데이터에 액세스하는 경우) 클래스는 구현 세부 사항에 동의해야합니다. 상속은 단일 소스에서 함께 또는 유지되지 않는 클래스 사이에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddb04c604b2d23c57bcc7ab2aed8669980c3ec14" translate="yes" xml:space="preserve">
          <source>This obviously matches, but in the process of matching, the subexpression &lt;code&gt;a*&lt;/code&gt; first grabbed the &lt;code&gt;'a'&lt;/code&gt;. Doing so, however, wouldn't allow the whole regexp to match, so after backtracking, &lt;code&gt;a*&lt;/code&gt; eventually gave back the &lt;code&gt;'a'&lt;/code&gt; and matched the empty string. Here, what &lt;code&gt;a*&lt;/code&gt; matched was</source>
          <target state="translated">이것은 분명히 일치하지만 일치하는 과정에서 하위 표현식 &lt;code&gt;a*&lt;/code&gt; 먼저 &lt;code&gt;'a'&lt;/code&gt; 를 잡았습니다 . 그러나 그렇게하면 전체 정규 표현식이 일치하지 않으므로 역 추적 후 &lt;code&gt;a*&lt;/code&gt; 결국 &lt;code&gt;'a'&lt;/code&gt; 를 반환 하고 빈 문자열과 일치합니다. 여기서 &lt;code&gt;a*&lt;/code&gt; 일치는</target>
        </trans-unit>
        <trans-unit id="75906e4fa98bc1c55561b974f97399cf50b738ce" translate="yes" xml:space="preserve">
          <source>This obviously matches, but in the process of matching, the subexpression &lt;code&gt;a*&lt;/code&gt; first grabbed the &lt;code&gt;a&lt;/code&gt; . Doing so, however, wouldn't allow the whole regexp to match, so after backtracking, &lt;code&gt;a*&lt;/code&gt; eventually gave back the &lt;code&gt;a&lt;/code&gt; and matched the empty string. Here, what &lt;code&gt;a*&lt;/code&gt; matched was</source>
          <target state="translated">이것은 분명히 일치하지만 일치하는 과정에서 하위 표현식 &lt;code&gt;a*&lt;/code&gt; 먼저 &lt;code&gt;a&lt;/code&gt; 를 잡았습니다 . 그래서 되돌아 후, 그래서, 그러나, 일치 전체 정규 표현식을 허용하지 않을 이렇게, &lt;code&gt;a*&lt;/code&gt; 결국 다시했다 &lt;code&gt;a&lt;/code&gt; 하고 빈 문자열을 일치. 여기서 &lt;code&gt;a*&lt;/code&gt; 와 일치하는 것은</target>
        </trans-unit>
        <trans-unit id="fb797c4ef105afbc7e6f092d57da0886c5342624" translate="yes" xml:space="preserve">
          <source>This one is not a name of encoding but a utility that lets you pick up the most appropriate encoding for a data out of given</source>
          <target state="translated">이것은 인코딩의 이름이 아니라 주어진 데이터에 가장 적합한 인코딩을 선택할 수있게 해주는 유틸리티입니다.</target>
        </trans-unit>
        <trans-unit id="ce31346ef13bdd3b410f6693045b75e1d727f213" translate="yes" xml:space="preserve">
          <source>This one works differently from normal strings:</source>
          <target state="translated">이것은 일반 문자열과 다르게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d8b038e9ce5b7ad8b326d48a0c12f7a1a65ddb76" translate="yes" xml:space="preserve">
          <source>This opens the UTF8-encoded file containing Unicode characters; see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;. Note that if layers are specified in the three-argument form, then default layers stored in &lt;a href=&quot;perlvar#%24%7B%5EOPEN%7D&quot;&gt;&lt;code&gt;${^OPEN}&lt;/code&gt;&lt;/a&gt; (usually set by the &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma or the switch &lt;code&gt;-CioD&lt;/code&gt;) are ignored. Those layers will also be ignored if you specify a colon with no name following it. In that case the default layer for the operating system (:raw on Unix, :crlf on Windows) is used.</source>
          <target state="translated">그러면 유니 코드 문자가 포함 된 UTF8 인코딩 파일이 열립니다. &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; 참조 . 레이어가 3 인수 형식으로 지정된 경우 &lt;a href=&quot;perlvar#%24%7B%5EOPEN%7D&quot;&gt; &lt;code&gt;${^OPEN}&lt;/code&gt; &lt;/a&gt; 저장된 기본 레이어 (일반적으로 &lt;a href=&quot;open&quot;&gt;open&lt;/a&gt; pragma 또는 스위치 &lt;code&gt;-CioD&lt;/code&gt; 로 설정 됨 )는 무시됩니다. 뒤에 이름이없는 콜론을 지정하면 이러한 레이어도 무시됩니다. 이 경우 운영 체제의 기본 계층 (Unix의 경우 : raw, Windows의 경우 : crlf)이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8dceabe6741f9e9be624acb0758d7a05df91f7b1" translate="yes" xml:space="preserve">
          <source>This operates as above, but the &lt;code&gt;Filter&lt;/code&gt; argument with a non-zero value causes the entire script, and not just literals, to be translated from the encoding into UTF-8. This allows identifiers in the source to be in that encoding as well. (Problems may occur if the encoding is not a superset of ASCII; imagine all your semi-colons being translated into something different.) One can use this form to make</source>
          <target state="translated">위와 같이 작동하지만 값이 0이 아닌 &lt;code&gt;Filter&lt;/code&gt; 인수는 리터럴뿐만 아니라 전체 스크립트가 인코딩에서 UTF-8로 변환되도록합니다. 이를 통해 소스의 식별자도 해당 인코딩에있을 수 있습니다. (인코딩이 ASCII의 상위 집합이 아닌 경우 문제가 발생할 수 있습니다. 모든 세미콜론이 다른 것으로 변환되는 것을 상상해보십시오.)이 양식을 사용하여</target>
        </trans-unit>
        <trans-unit id="bafbb273ef65724f67929789d4cf1821d369332e" translate="yes" xml:space="preserve">
          <source>This operator changes only the modification time of the file (VMS revision date) on ODS-2 volumes and ODS-5 volumes without access dates enabled. On ODS-5 volumes with access dates enabled, the true access time is modified.</source>
          <target state="translated">이 연산자는 액세스 날짜를 사용하지 않고 ODS-2 볼륨 및 ODS-5 볼륨의 파일 수정 시간 (VMS 개정 날짜) 만 변경합니다. 액세스 날짜가 활성화 된 ODS-5 볼륨에서 실제 액세스 시간이 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="ffba20ee3390ab6f7cdbeb9ab15cfb5e9016cca0" translate="yes" xml:space="preserve">
          <source>This operator is also handy for inverting a hash, although there are some caveats. If a value is duplicated in the original hash, only one of those can be represented as a key in the inverted hash. Also, this has to unwind one hash and build a whole new one, which may take some time on a large hash, such as from a DBM file.</source>
          <target state="translated">이 연산자는 해시를 뒤집는데도 유용하지만 몇 가지주의 사항이 있습니다. 원래 해시에서 값이 복제되면 그 중 하나만 역 해시에서 키로 표시 될 수 있습니다. 또한 이것은 하나의 해시를 풀고 완전히 새로운 해시를 빌드해야합니다. DBM 파일과 같은 큰 해시에는 시간이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b8267c16c345a02931d07745eab202ccd1416fa" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;../file/glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;code&gt;bsd_glob&lt;/code&gt; which does not treat whitespace as a pattern separator.</source>
          <target state="translated">이 연산자는 표준 &lt;code&gt;File::Glob&lt;/code&gt; 확장자를 사용하여 구현됩니다 . 공백을 패턴 구분자로 처리하지 않는 &lt;code&gt;bsd_glob&lt;/code&gt; 를 포함하여 자세한 내용 은 &lt;a href=&quot;../file/glob&quot;&gt;File :: Glob&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6603facafeb0ca27618f690e983e8f47ba2f8982" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;a href=&quot;File::Glob#bsd_glob&quot;&gt;&lt;code&gt;bsd_glob&lt;/code&gt;&lt;/a&gt;, which does not treat whitespace as a pattern separator.</source>
          <target state="translated">이 연산자는 표준 &lt;code&gt;File::Glob&lt;/code&gt; 확장자를 사용하여 구현됩니다 . 공백을 패턴 구분자로 처리하지 않는 &lt;a href=&quot;File::Glob#bsd_glob&quot;&gt; &lt;code&gt;bsd_glob&lt;/code&gt; 을&lt;/a&gt; 포함한 자세한 내용 은 &lt;a href=&quot;File::Glob&quot;&gt;File :: Glob&lt;/a&gt; 을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="157d8ec0928a934391402a13da061adc37466e6a" translate="yes" xml:space="preserve">
          <source>This operator is implemented using the standard &lt;code&gt;File::Glob&lt;/code&gt; extension. See &lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt; for details, including &lt;code&gt;bsd_glob&lt;/code&gt; which does not treat whitespace as a pattern separator.</source>
          <target state="translated">이 연산자는 표준 &lt;code&gt;File::Glob&lt;/code&gt; 확장자를 사용하여 구현됩니다 . 공백을 패턴 구분자로 처리하지 않는 &lt;code&gt;bsd_glob&lt;/code&gt; 를 포함하여 자세한 내용 은 &lt;a href=&quot;file/glob&quot;&gt;File :: Glob&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6deb73d137130c497b09a54c077553c29fbcaf55" translate="yes" xml:space="preserve">
          <source>This operator is implemented via the &lt;a href=&quot;File::Glob&quot;&gt;&lt;code&gt;File::Glob&lt;/code&gt;&lt;/a&gt; extension on most platforms. See &lt;a href=&quot;File::Glob&quot;&gt;File::Glob&lt;/a&gt; for portability information.</source>
          <target state="translated">이 연산자는 대부분의 플랫폼 에서 &lt;a href=&quot;File::Glob&quot;&gt; &lt;code&gt;File::Glob&lt;/code&gt; &lt;/a&gt; 확장을 통해 구현됩니다 . 이식성 정보는 &lt;a href=&quot;File::Glob&quot;&gt;File :: Glob&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a18ef89c767fe3092cd7cbf7617a73212c9cedcd" translate="yes" xml:space="preserve">
          <source>This operator is implemented via the &lt;code&gt;File::Glob&lt;/code&gt; extension on most platforms. See &lt;a href=&quot;file/glob&quot;&gt;File::Glob&lt;/a&gt; for portability information.</source>
          <target state="translated">이 연산자는 대부분의 플랫폼 에서 &lt;code&gt;File::Glob&lt;/code&gt; 확장을 통해 구현됩니다 . 이식성 정보는 &lt;a href=&quot;file/glob&quot;&gt;File :: Glob&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f61ddb296f9de510c527089fa0d0e6f18a12bcc4" translate="yes" xml:space="preserve">
          <source>This operator quotes (and possibly compiles) its</source>
          <target state="translated">이 연산자는 따옴표를 인용하고 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="54ff6006dac029e4037de4f8be15a2519fa996e2" translate="yes" xml:space="preserve">
          <source>This option allow the</source>
          <target state="translated">이 옵션을 사용하면</target>
        </trans-unit>
        <trans-unit id="00bfef75bba78bb67546c7867c9c5ceacd8cc589" translate="yes" xml:space="preserve">
          <source>This option allow the filename field in the zip header to be modified before it is written to the zip file.</source>
          <target state="translated">이 옵션을 사용하면 zip 헤더의 파일 이름 필드를 zip 파일에 쓰기 전에 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31a1073c0be295447c4fa6a92df15986893583ac" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;anyinflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 모든 &lt;code&gt;anyinflate&lt;/code&gt; 에 대한 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9285c30af9b4fbbee720f406a006d97f4010015" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;anyuncompress&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 처리 인 &lt;code&gt;anyuncompress&lt;/code&gt; 에 대한 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e84a1d77a7ad064325b540c87fc270941af6172d" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;bunzip2&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;bunzip2&lt;/code&gt; 에 대한 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="991318af65c036237347589558cc5bbc7b747313" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;bzip2&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;bzip2&lt;/code&gt; 의 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e3937b065e9e10f42a614e20da537cf76f206b09" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;deflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;deflate&lt;/code&gt; 를 빼기 위해 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7597a37aa86998ead804f6646d406a8232322d5c" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;gunzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;gunzip&lt;/code&gt; 에 대한 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b1d88507893c4f30c1f99b3dd08ad9bcc7749d4" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;gzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;gzip&lt;/code&gt; 에 대한 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="197d2e92c12a668b61b45cede98ce89082acf98a" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;inflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;inflate&lt;/code&gt; 하기 위해 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="11085e39e2558052d844319712c721f6cf03a406" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;rawdeflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 처리 인 &lt;code&gt;rawdeflate&lt;/code&gt; 의 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5edfb063fb42d1f72af8e3277ad4716ba885c487" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;rawinflate&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 처리 인 &lt;code&gt;rawinflate&lt;/code&gt; 의 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b0f73e1567ccae83577dd7200eae7bda2188288" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;unzip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;unzip&lt;/code&gt; 을 풀기 위한 모든 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="295f0cfd4ded98b9574af22ae3b9d33935ef4669" translate="yes" xml:space="preserve">
          <source>This option applies to any input or output data streams to &lt;code&gt;zip&lt;/code&gt; that are filehandles.</source>
          <target state="translated">이 옵션 은 파일 핸들 인 &lt;code&gt;zip&lt;/code&gt; 으로의 입력 또는 출력 데이터 스트림에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1b0f39997327947c35396eb3046f132a2237f087" translate="yes" xml:space="preserve">
          <source>This option assumes that the formatter (see above) understands the option &quot;utf8&quot;. It turns on generation of utf8 output.</source>
          <target state="translated">이 옵션은 포맷터 (위 참조)가 &quot;utf8&quot;옵션을 이해한다고 가정합니다. utf8 출력 생성을 켭니다.</target>
        </trans-unit>
        <trans-unit id="2812ec45ee9aa481cedeafcd91c6fd310ce87a63" translate="yes" xml:space="preserve">
          <source>This option can be used when there is useful information immediately following the compressed data stream, and you don't know the length of the compressed data stream.</source>
          <target state="translated">압축 된 데이터 스트림 바로 뒤에 유용한 정보가 있고 압축 된 데이터 스트림의 길이를 모르는 경우이 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96e75df71c1bf6e90ec730c6cdd32614d5b40bf0" translate="yes" xml:space="preserve">
          <source>This option can be useful when the compressed data is embedded in another file/data structure and it is not possible to work out where the compressed data begins without having to read the first few bytes. If this is the case, the uncompression can be</source>
          <target state="translated">이 옵션은 압축 된 데이터가 다른 파일 / 데이터 구조에 포함되어 있고 처음 몇 바이트를 읽지 않고 압축 된 데이터가 시작되는 위치를 해결할 수 없을 때 유용합니다. 이 경우 압축 해제는</target>
        </trans-unit>
        <trans-unit id="ae71b12d470fda92f5396caeec200106ff4f6bc5" translate="yes" xml:space="preserve">
          <source>This option can be useful when you are processing compressed data that is embedded in another file/buffer. In this case the data that immediately follows the compressed stream will be left in the input buffer.</source>
          <target state="translated">이 옵션은 다른 파일 / 버퍼에 포함 된 압축 데이터를 처리 할 때 유용 할 수 있습니다. 이 경우 압축 스트림 바로 다음에 오는 데이터는 입력 버퍼에 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="05c5aace4afdf3704689266ed36cfe4a30bb343e" translate="yes" xml:space="preserve">
          <source>This option causes all configuration options to be reset to their default values as if the environment variable POSIXLY_CORRECT had been set.</source>
          <target state="translated">이 옵션을 사용하면 환경 변수 POSIXLY_CORRECT가 설정된 것처럼 모든 구성 옵션이 기본값으로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="0bb7609607b04e591708c21193516c45ee13b415" translate="yes" xml:space="preserve">
          <source>This option causes all configuration options to be reset to their default values.</source>
          <target state="translated">이 옵션을 사용하면 모든 구성 옵션이 기본값으로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="96a82215c08e826a1eb80ae96999f098e98a4ee7" translate="yes" xml:space="preserve">
          <source>This option controls how data is written to the output buffer by the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; 및 &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; 메소드로 출력 버퍼에 데이터를 쓰는 방법을 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="c90b7070ba70482f3b4e42afba1dbe1ff165436c" translate="yes" xml:space="preserve">
          <source>This option controls how data is written to the output buffer by the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; 메소드로 출력 버퍼에 데이터를 쓰는 방법을 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="f091361d33604fb6b604c6198e130966342f9758" translate="yes" xml:space="preserve">
          <source>This option controls setting of the &quot;Language Encoding Flag&quot; (EFS) in the zip archive. When set, the filename and comment fields for the zip archive MUST be valid UTF-8.</source>
          <target state="translated">이 옵션은 zip 아카이브의 &quot;언어 인코딩 플래그&quot;(EFS) 설정을 제어합니다. 설정되면 zip 아카이브의 파일 이름 및 주석 필드는 유효한 UTF-8이어야합니다.</target>
        </trans-unit>
        <trans-unit id="59041bc47f2bcbc25e18c7446422e8f7a244ca3a" translate="yes" xml:space="preserve">
          <source>This option controls the &quot;external file attributes&quot; field in the central header of the zip file. This is a 4 byte field.</source>
          <target state="translated">이 옵션은 zip 파일의 중앙 헤더에서 &quot;외부 파일 속성&quot;필드를 제어합니다. 이것은 4 바이트 필드입니다.</target>
        </trans-unit>
        <trans-unit id="fe53ff997f22ee3b8e3b5b499037b30213ed7a2b" translate="yes" xml:space="preserve">
          <source>This option controls what the &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; method does with uncompressed data.</source>
          <target state="translated">이 옵션은 압축되지 않은 데이터에 대한 &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 방법의 기능을 제어 합니다.</target>
        </trans-unit>
        <trans-unit id="6b761971204df65aacb52bae227edf353dc4466e" translate="yes" xml:space="preserve">
          <source>This option controls what the &lt;code&gt;read&lt;/code&gt; method does with uncompressed data.</source>
          <target state="translated">이 옵션은 &lt;code&gt;read&lt;/code&gt; 방법이 압축되지 않은 데이터로 수행 하는 작업을 제어 합니다.</target>
        </trans-unit>
        <trans-unit id="de120c739ea57e22d8c4d48b8a92202db6758c8d" translate="yes" xml:space="preserve">
          <source>This option controls whether the</source>
          <target state="translated">이 옵션은</target>
        </trans-unit>
        <trans-unit id="2fd5bc077a448b0ac8688176c0355190f56eee1f" translate="yes" xml:space="preserve">
          <source>This option controls whether the extra checks defined below are used when carrying out the decompression. When Strict is on, the extra tests are carried out, when Strict is off they are not.</source>
          <target state="translated">이 옵션은 압축 해제시 아래 정의 된 추가 검사를 사용할지 여부를 제어합니다. Strict가 켜져 있으면 Strict가 꺼져 있으면 추가 테스트가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="e8f91b605f96e49eba45a2533f216bb9aa5630d4" translate="yes" xml:space="preserve">
          <source>This option controls whether the filename field in the zip header is</source>
          <target state="translated">이 옵션은 zip 헤더의 파일 이름 필드가</target>
        </trans-unit>
        <trans-unit id="c9ccbe84ff4c87c8d1938d3fb3bc36c35924a163" translate="yes" xml:space="preserve">
          <source>This option controls whether the zip file/buffer output is created in streaming mode.</source>
          <target state="translated">이 옵션은 zip 파일 / 버퍼 출력이 스트리밍 모드에서 생성되는지 여부를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="25df283cc49b2b02eee383b551fc895c82bca588" translate="yes" xml:space="preserve">
          <source>This option defaults to 1.</source>
          <target state="translated">이 옵션의 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="34b650f76678c6a01e22f15770dea69e53718082" translate="yes" xml:space="preserve">
          <source>This option defaults to 4096.</source>
          <target state="translated">이 옵션의 기본값은 4096입니다.</target>
        </trans-unit>
        <trans-unit id="d5f2929171736f86edabd8e4e81e6b76f585f308" translate="yes" xml:space="preserve">
          <source>This option defaults to &lt;b&gt;false&lt;/b&gt;.</source>
          <target state="translated">이 옵션의 기본값은 &lt;b&gt;false&lt;/b&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0fe4b53be5e0e4b306e7b8817dee109e7d56e3b6" translate="yes" xml:space="preserve">
          <source>This option defaults to false.</source>
          <target state="translated">이 옵션의 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="3c17c5d6de4659d46fac1329201d45aebab6728c" translate="yes" xml:space="preserve">
          <source>This option defaults to off.</source>
          <target state="translated">이 옵션은 기본적으로 해제되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b6fb11ab3c3f09a5247ca571c81e532a6439637" translate="yes" xml:space="preserve">
          <source>This option defaults to true.</source>
          <target state="translated">이 옵션의 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="624b5280811765e3f408f9a93ba973e345e22b11" translate="yes" xml:space="preserve">
          <source>This option does not affect &lt;code&gt;decode&lt;/code&gt; in any way, and it is recommended to leave it off unless you know your communications partner.</source>
          <target state="translated">이 옵션은 어떤 식 으로든 &lt;code&gt;decode&lt;/code&gt; 에 영향을 미치지 않으며 통신 파트너를 알지 못하는 경우에는 해제하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a49b3dde1d982fff6659af9dbc370e4c81b2a251" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly three elements: &lt;code&gt;$atime&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;$ctime&lt;/code&gt; . These correspond to the last access time, last modification time and creation time respectively.</source>
          <target state="translated">이 옵션은 정확히 &lt;code&gt;$atime&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; 및 &lt;code&gt;$ctime&lt;/code&gt; 세 가지 요소를 가진 배열 참조를 예상합니다 . 이들은 각각 마지막 액세스 시간, 마지막 수정 시간 및 생성 시간에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="c2b6d8d1bd2aae66f05f52544cf5abb5b8808045" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly three elements: &lt;code&gt;$atime&lt;/code&gt;, &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;$ctime&lt;/code&gt;. These correspond to the last access time, last modification time and creation time respectively.</source>
          <target state="translated">이 옵션은 정확히 &lt;code&gt;$atime&lt;/code&gt; , &lt;code&gt;mtime&lt;/code&gt; 및 &lt;code&gt;$ctime&lt;/code&gt; 세 가지 요소가있는 배열 참조를 예상합니다 . 이들은 각각 마지막 액세스 시간, 마지막 수정 시간 및 생성 시간에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="d7b61a9548815335c12044934c6edf6afc0fade2" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly two elements: &lt;code&gt;$uid&lt;/code&gt; and &lt;code&gt;$gid&lt;/code&gt; . These values correspond to the numeric User ID (UID) and Group ID (GID) of the owner of the files respectively.</source>
          <target state="translated">이 옵션은 정확히 &lt;code&gt;$uid&lt;/code&gt; 및 &lt;code&gt;$gid&lt;/code&gt; 두 가지 요소를 가진 배열 참조를 예상합니다 . 이 값은 각각 파일 소유자의 숫자 UID (UI) 및 그룹 ID (GID)에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="d0b2b2035706e5f13fabb6689eb4b2eb10e5bd8d" translate="yes" xml:space="preserve">
          <source>This option expects an array reference with exactly two elements: &lt;code&gt;$uid&lt;/code&gt; and &lt;code&gt;$gid&lt;/code&gt;. These values correspond to the numeric User ID (UID) and Group ID (GID) of the owner of the files respectively.</source>
          <target state="translated">이 옵션은 정확히 두 개의 요소 인 &lt;code&gt;$uid&lt;/code&gt; 및 &lt;code&gt;$gid&lt;/code&gt; 있는 배열 참조를 예상합니다 . 이러한 값은 각각 파일 소유자의 숫자 사용자 ID (UID) 및 그룹 ID (GID)에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f5e3123268242816c97985ddf2abce0d046136ba" translate="yes" xml:space="preserve">
          <source>This option is a no-op.</source>
          <target state="translated">이 옵션은 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1144456033d4b378e77675f24087a7a175d1be93" translate="yes" xml:space="preserve">
          <source>This option is case-insensitive.</source>
          <target state="translated">이 옵션은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2511f05b6374c7879cb361cf57c595c2e2f72590" translate="yes" xml:space="preserve">
          <source>This option is checked when you write out the tarfile using &lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;create_archive&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;create_archive&lt;/code&gt; 를 사용하여 tarfile을 쓸 때이 옵션이 점검됩니다 .</target>
        </trans-unit>
        <trans-unit id="af51699e95a4be95b5bd98b672ad39e412c5139b" translate="yes" xml:space="preserve">
          <source>This option is checked when you write out the tarfile using &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;create_archive&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;write&lt;/code&gt; 또는 &lt;code&gt;create_archive&lt;/code&gt; 를 사용하여 tar 파일을 작성할 때 선택됩니다 .</target>
        </trans-unit>
        <trans-unit id="1b2a2a4f5928dc68068bb78c6282de092775a8e0" translate="yes" xml:space="preserve">
          <source>This option is enabled by default.</source>
          <target state="translated">이 옵션은 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4549d37c19966c81c9e8c6bc7457a6a5da6fd6d3" translate="yes" xml:space="preserve">
          <source>This option is mostly used when reading from a filehandle, in which case the file pointer will be left pointing to the first byte directly after the compressed data stream.</source>
          <target state="translated">이 옵션은 주로 파일 핸들에서 읽을 때 사용되며,이 경우 파일 포인터는 압축 된 데이터 스트림 바로 다음에 첫 번째 바이트를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="da3c768aaf3f5e035f976487f87837b11b5b30c6" translate="yes" xml:space="preserve">
          <source>This option is no longer supported. It is still documented only to aid in the debugging of old programs that use it. Old programs should be converted to use the &lt;code&gt;HASH&lt;/code&gt; option instead.</source>
          <target state="translated">이 옵션은 더 이상 지원되지 않습니다. 그것은 그것을 사용하는 오래된 프로그램의 디버깅을 돕기 위해 여전히 문서화되어 있습니다. 이전 프로그램은 &lt;code&gt;HASH&lt;/code&gt; 옵션을 대신 사용하도록 변환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fccd188df214a961ab3c96d3b8cb198aeb990733" translate="yes" xml:space="preserve">
          <source>This option is now a no-op. All files will be read in binmode.</source>
          <target state="translated">이 옵션은 이제 작동하지 않습니다. 모든 파일은 binmode에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="4b63a00edd9e5158832afdb166a9cf7c92fa6736" translate="yes" xml:space="preserve">
          <source>This option is now a no-op. All files will be written in binmode.</source>
          <target state="translated">이 옵션은 이제 작동하지 않습니다. 모든 파일은 binmode로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="a4a6ba823380e81c3792a98e87160d5e375b14e6" translate="yes" xml:space="preserve">
          <source>This option is obscure and discouraged.</source>
          <target state="translated">이 옵션은 불분명하고 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42ae6c8b76763d5e46a026474b931ab7a98558cf" translate="yes" xml:space="preserve">
          <source>This option is only useful when you also enable &lt;code&gt;indent&lt;/code&gt; or &lt;code&gt;pretty&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 &lt;code&gt;indent&lt;/code&gt; 또는 &lt;code&gt;pretty&lt;/code&gt; 를 사용하는 경우에만 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="c86f3c4424a2a7c5541c3bc97e781d1a1d2bf31e" translate="yes" xml:space="preserve">
          <source>This option is only valid if the &lt;code&gt;Method&lt;/code&gt; is ZIP_CM_BZIP2. It is ignored otherwise.</source>
          <target state="translated">이 옵션은 &lt;code&gt;Method&lt;/code&gt; 가 ZIP_CM_BZIP2 인 경우에만 유효합니다 . 그렇지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e287076e946d3a88fdf8e217ada09ffe773941d3" translate="yes" xml:space="preserve">
          <source>This option is only valid if the &lt;code&gt;Method&lt;/code&gt; is ZIP_CM_LZMA. It is ignored otherwise.</source>
          <target state="translated">이 옵션은 &lt;code&gt;Method&lt;/code&gt; 가 ZIP_CM_LZMA 인 경우에만 유효합니다 . 그렇지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e47f433c8815bcca005cf8fc1f8f226523161029" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::AnyInflate object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정된 경우 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 IO :: Uncompress :: AnyInflate 오브젝트가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="4c7afb5a8e42acbe0e34fc5f5b8fc4326a8529d5" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::AnyUncompress object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 IO :: Uncompress :: AnyUncompress 오브젝트가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="4c90c6efe9d75228bc8980202147dbd8e5b1d098" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Bunzip2 object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 IO :: Uncompress :: Bunzip2 오브젝트가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="1a0451d52242cab341bf29b753116dd306cc10b7" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Gunzip object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 IO :: Uncompress :: Gunzip 오브젝트가 소멸 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="c6cccd64b3f769d6fde655234d1c117fd17fbdc4" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Inflate object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 IO :: Uncompress :: Inflate 오브젝트가 소멸 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="a026bdcb25c56dbca754467a3829013c39db31ac" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::RawInflate object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 IO :: Uncompress :: RawInflate 오브젝트가 소멸 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="f4a3d8b2fb37fa80663bb31ac23a1f0cc61d52e6" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the IO::Uncompress::Unzip object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 IO :: Uncompress :: Unzip 오브젝트가 소멸 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="7d5c3c251f79fe2eaa4fe4d7a23aa2a6bca07482" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::AnyInflate object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 IO :: Uncompress :: AnyInflate 개체가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="3d188554dc39b169a30f806b5e23d40f7a99eb7b" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::AnyUncompress object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 IO :: Uncompress :: AnyUncompress 개체가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="3f4a9ffa852a02dca76d7971b32b9b03b1b0548e" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Bunzip2 object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 IO :: Uncompress :: Bunzip2 개체가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="c5731a807a44b0efd83e01b27cd42579c0decc4f" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Gunzip object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 IO :: Uncompress :: Gunzip 개체가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="c914c62b296246924f7d16024e2d19fb089beb85" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Inflate object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 IO :: Uncompress :: Inflate 개체가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="f153a0b32df251638a7035a515776badf9702bbd" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::RawInflate object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 IO :: Uncompress :: RawInflate 개체가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="f93ba06c93cb1edfc319d39e770c284a6a951d1c" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$input&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the file being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the IO::Uncompress::Unzip object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$input&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 IO :: Uncompress :: Unzip 개체가 삭제 되면 파일이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="a47e1179435d09c1507a883d5e990db962771a45" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; 오브젝트가 소멸 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="97fb53611300748a1b7f47bb19f220d7d3bb2490" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; 오브젝트가 소멸 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="258816e7ba3830736405fb29e1fd5aa78fa1b61a" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; 오브젝트가 소멸 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="33f553ec8eed6ca2655d0af84e094c777ea4ac37" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; 오브젝트가 소멸 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="29176bb9d55bdad6e9210947b4806edcc6d975b2" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 메소드가 호출되거나 &lt;code&gt;IO::Compress::Zip&lt;/code&gt; 오브젝트가 소멸 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="cd203a3578c6d44aadc174b3929c5c881fa57c87" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 &lt;code&gt;IO::Compress::Bzip2&lt;/code&gt; 개체가 삭제 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="56da4e99c55becf3b53cd4d42c1b2e502f1ea8c7" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true 인 경우 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 &lt;code&gt;IO::Compress::Deflate&lt;/code&gt; 개체가 삭제 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="0cc6b1d042bb75b4b7fcc3f65e4f36863f08ff6d" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정되고 값이 true이면 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 &lt;code&gt;IO::Compress::Gzip&lt;/code&gt; 개체가 삭제 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="c22a83808dec6742b1149a03e8a657bbf97e963e" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정된 경우 값이 true이면 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 &lt;code&gt;IO::Compress::RawDeflate&lt;/code&gt; 개체가 삭제 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="333c8c80db020065477b7b5bfd9c001421d17d16" translate="yes" xml:space="preserve">
          <source>This option is only valid when the &lt;code&gt;$output&lt;/code&gt; parameter is a filehandle. If specified, and the value is true, it will result in the &lt;code&gt;$output&lt;/code&gt; being closed once either the &lt;code&gt;close&lt;/code&gt; method is called or the &lt;code&gt;IO::Compress::Zip&lt;/code&gt; object is destroyed.</source>
          <target state="translated">이 옵션은 &lt;code&gt;$output&lt;/code&gt; 매개 변수가 파일 핸들 인 경우에만 유효합니다 . 지정된 경우 값이 true이면 &lt;code&gt;close&lt;/code&gt; 메서드가 호출되거나 &lt;code&gt;IO::Compress::Zip&lt;/code&gt; 개체가 삭제 되면 &lt;code&gt;$output&lt;/code&gt; 이 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="4776439da220ae2064b194f480e3edc29818500b" translate="yes" xml:space="preserve">
          <source>This option is probably not useful when converting multiple POD files at once.</source>
          <target state="translated">이 옵션은 한 번에 여러 POD 파일을 변환 할 때 유용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4da7e81811658139a241d2fcf49caaf6fc6d794" translate="yes" xml:space="preserve">
          <source>This option is significantly slower than the other one.</source>
          <target state="translated">이 옵션은 다른 옵션보다 상당히 느립니다.</target>
        </trans-unit>
        <trans-unit id="43ce55b0c5bee0085af75b3bb5923ccf3a65b644" translate="yes" xml:space="preserve">
          <source>This option is used to compress input data and append it to an existing compressed data stream in &lt;code&gt;$output&lt;/code&gt; . The end result is a single compressed data stream stored in &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">이 옵션은 입력 데이터를 압축하여 &lt;code&gt;$output&lt;/code&gt; 의 기존 압축 데이터 스트림에 추가하는 데 사용됩니다 . 최종 결과는 &lt;code&gt;$output&lt;/code&gt; 저장된 단일 압축 데이터 스트림 입니다.</target>
        </trans-unit>
        <trans-unit id="089ecebdfe8e9a90db3b6de20d411724738cdf04" translate="yes" xml:space="preserve">
          <source>This option is used to compress input data and append it to an existing compressed data stream in &lt;code&gt;$output&lt;/code&gt;. The end result is a single compressed data stream stored in &lt;code&gt;$output&lt;/code&gt;.</source>
          <target state="translated">이 옵션은 입력 데이터를 압축하고 &lt;code&gt;$output&lt;/code&gt; 의 기존 압축 데이터 스트림에 추가하는 데 사용됩니다 . 최종 결과는 &lt;code&gt;$output&lt;/code&gt; 저장된 단일 압축 데이터 스트림 입니다.</target>
        </trans-unit>
        <trans-unit id="ad95728c1dff8ec162453b97551677cbbf3088e0" translate="yes" xml:space="preserve">
          <source>This option is used to explicitly set the</source>
          <target state="translated">이 옵션은 명시 적으로</target>
        </trans-unit>
        <trans-unit id="4f49f5c4b9fe97ea0c9160e42ef7f17004bd5369" translate="yes" xml:space="preserve">
          <source>This option is useful if you want the same data structure to be encoded as the same JSON text (given the same overall settings). If it is disabled, the same hash might be encoded differently even if contains the same data, as key-value pairs have no inherent ordering in Perl.</source>
          <target state="translated">이 옵션은 동일한 데이터 구조를 동일한 JSON 텍스트로 인코딩하려는 경우에 유용합니다 (전체 설정이 동일한 경우). 비활성화하면 키-값 쌍이 Perl에 고유 한 순서가 없기 때문에 동일한 데이터가 포함되어 있어도 동일한 해시가 다르게 인코딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2784a12c385481925ffdf8f295738fd39dfe4239" translate="yes" xml:space="preserve">
          <source>This option may be useful when you embed JSON in HTML, but embedding arbitrary JSON in HTML (by some HTML template toolkit or by string interpolation) is risky in general. You must escape necessary characters in correct order, depending on the context.</source>
          <target state="translated">이 옵션은 HTML에 JSON을 임베드 할 때 유용 할 수 있지만 HTML에 임의의 JSON을 임베드 (일부 HTML 템플릿 툴킷 또는 문자열 보간)하는 것은 일반적으로 위험합니다. 컨텍스트에 따라 올바른 순서로 필요한 문자를 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="c905ba8910d975a79e749c35e513e95ca43f84ed" translate="yes" xml:space="preserve">
          <source>This option means that you want to limit the results just to items whose podnames match the given glob/wildcard expression. For example, you might limit your search to just &quot;LWP::*&quot;, to search only for modules starting with &quot;LWP::*&quot; (but not including the module &quot;LWP&quot; itself); or you might limit your search to &quot;LW*&quot; to see only modules whose (full) names begin with &quot;LW&quot;; or you might search for &quot;*Find*&quot; to search for all modules with &quot;Find&quot; somewhere in their full name. (You can also use &quot;?&quot; in a glob expression; so &quot;DB?&quot; will match &quot;DBI&quot; and &quot;DBD&quot;.)</source>
          <target state="translated">이 옵션은 podname이 주어진 glob / wildcard 표현식과 일치하는 항목으로 만 결과를 제한하고자 함을 의미합니다. 예를 들어, &quot;LWP :: *&quot;로 시작하는 모듈 만 검색하기 위해 &quot;LWP :: *&quot;로 검색을 제한 할 수 있지만 &quot;LWP&quot;자체는 포함하지 않습니다. 또는 이름이 &quot;LW&quot;로 시작하는 모듈 만 보려면 &quot;LW *&quot;로 검색을 제한 할 수 있습니다. 또는 &quot;* Find *&quot;를 검색하여 이름이 &quot;Find&quot;인 모든 모듈을 검색 할 수 있습니다. glob 표현식에 &quot;?&quot;를 사용할 수도 있으므로 &quot;DB?&quot;는 &quot;DBI&quot;및 &quot;DBD&quot;와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="20360642d3c9e99dc2a287f8242c272ca5705a34" translate="yes" xml:space="preserve">
          <source>This option says to instead output literal UTF-8 characters. If your *roff implementation can handle it, this is the best output format to use and avoids corruption of documents containing non-ASCII characters. However, be warned that *roff source with literal UTF-8 characters is not supported by many implementations and may even result in segfaults and other bad behavior.</source>
          <target state="translated">이 옵션은 리터럴 UTF-8 문자를 대신 출력하도록합니다. * roff 구현이이를 처리 할 수있는 경우 이것이 사용하기에 가장 적합한 출력 형식이며 ASCII가 아닌 문자가 포함 된 문서의 손상을 피합니다. 그러나 리터럴 UTF-8 문자가있는 * roff 소스는 많은 구현에서 지원되지 않으며 segfaults 및 기타 잘못된 동작을 초래할 수도 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
