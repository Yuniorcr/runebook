<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="60cf66868c5165df5712b55dc0fc35c4aaffe3f6" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;http://www.hexten.net/mailman/listinfo/tapx-dev&quot;&gt;http://www.hexten.net/mailman/listinfo/tapx-dev&lt;/a&gt; [2] &lt;a href=&quot;http://testanything.org/mailman/listinfo/tap-l&quot;&gt;http://testanything.org/mailman/listinfo/tap-l&lt;/a&gt; [3] &lt;a href=&quot;http://testanything.org/&quot;&gt;http://testanything.org/&lt;/a&gt;</source>
          <target state="translated">[1] &lt;a href=&quot;http://www.hexten.net/mailman/listinfo/tapx-dev&quot;&gt;http://www.hexten.net/mailman/listinfo/tapx-dev&lt;/a&gt; [2] &lt;a href=&quot;http://testanything.org/mailman/listinfo/tap-l&quot;&gt;http://testanything.org/mailman/listinfo/tap-l&lt;/a&gt; [3] &lt;a href=&quot;http://testanything.org/&quot;&gt;http://testanything.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6ac0e8a735b46342a976ea787dac2c14647dfa8" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;https://perl.plover.com/Rx/paper/&quot;&gt;https://perl.plover.com/Rx/paper/&lt;/a&gt;</source>
          <target state="translated">[1] &lt;a href=&quot;https://perl.plover.com/Rx/paper/&quot;&gt;https://perl.plover.com/Rx/paper/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66aacf5ae577e2928c4257cbce7e7c5903104c46" translate="yes" xml:space="preserve">
          <source>[1] &lt;code&gt;\N{U+...}&lt;/code&gt; and &lt;code&gt;\x{...}&lt;/code&gt;</source>
          <target state="translated">[1] &lt;code&gt;\N{U+...}&lt;/code&gt; 및 &lt;code&gt;\x{...}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff0deed4b3b24909934a1ac41465f162f12f1a69" translate="yes" xml:space="preserve">
          <source>[1] ja: Ideographs are sorted in JIS X 0208 order. Fullwidth and halfwidth forms are identical to their regular form. The difference between hiragana and katakana is at the 4th level, the comparison also requires &lt;code&gt;(variable =&amp;gt; 'Non-ignorable')&lt;/code&gt;, and then &lt;code&gt;katakana_before_hiragana&lt;/code&gt; has no effect.</source>
          <target state="translated">[1] ja : 표의 문자는 JIS X 0208 순서로 정렬됩니다. 전자 및 반자 형식은 일반 형식과 동일합니다. 히라가나와 가타카나의 차이는 4 단계에 있으며 비교에도 &lt;code&gt;(variable =&amp;gt; 'Non-ignorable')&lt;/code&gt; 이 필요하며 &lt;code&gt;katakana_before_hiragana&lt;/code&gt; 는 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2499831338ca5dc8c44f3d063e076799bea9bdff" translate="yes" xml:space="preserve">
          <source>[2]</source>
          <target state="translated">[2]</target>
        </trans-unit>
        <trans-unit id="f4bcc9cdddccdc2ae22d3c3454a7739be0e29b10" translate="yes" xml:space="preserve">
          <source>[2] &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;</source>
          <target state="translated">[2] &lt;a href=&quot;http://www.unicode.org&quot;&gt;http://www.unicode.org&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89613ff71fb004050c2387ea7679afcc46361298" translate="yes" xml:space="preserve">
          <source>[2] &lt;a href=&quot;https://www.unicode.org/&quot;&gt;https://www.unicode.org/&lt;/a&gt;</source>
          <target state="translated">[2] &lt;a href=&quot;https://www.unicode.org/&quot;&gt;https://www.unicode.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="372cc387e7942f45d19b3ed8b382c7d9675e60e6" translate="yes" xml:space="preserve">
          <source>[2] &lt;code&gt;\p{...}&lt;/code&gt;&lt;code&gt;\P{...}&lt;/code&gt;. This requirement is for a minimal list of properties. Perl supports these. See R2.7 for other properties.</source>
          <target state="translated">[2] &lt;code&gt;\p{...}&lt;/code&gt; &lt;code&gt;\P{...}&lt;/code&gt; . 이 요구 사항은 최소한의 속성 목록을위한 것입니다. Perl은이를 지원합니다. 다른 속성은 R2.7을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6ab2f21a354b3f2ceeceb49f1179400b9f9ca607" translate="yes" xml:space="preserve">
          <source>[2] ko: Plenty of ideographs are sorted by their reading. Such an ideograph is primary (level 1) equal to, and secondary (level 2) greater than, the corresponding hangul syllable.</source>
          <target state="translated">[2] ko : 많은 표의 문자가 읽기에 따라 분류됩니다. 이러한 표의 문자는 해당하는 한글 음절보다 1 차 (레벨 1) 같고 2 차 (레벨 2)보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="f1e31df9806ce94c5bdbbfff9608324930f4d3f1" translate="yes" xml:space="preserve">
          <source>[3]</source>
          <target state="translated">[3]</target>
        </trans-unit>
        <trans-unit id="2d7810062311db35e9169e57b243612002fcc54a" translate="yes" xml:space="preserve">
          <source>[3] Perl has &lt;code&gt;\d&lt;/code&gt;&lt;code&gt;\D&lt;/code&gt;&lt;code&gt;\s&lt;/code&gt;&lt;code&gt;\S&lt;/code&gt;&lt;code&gt;\w&lt;/code&gt;&lt;code&gt;\W&lt;/code&gt;&lt;code&gt;\X&lt;/code&gt;&lt;code&gt;[:&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt;&lt;code&gt;[:^&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt;, plus all the properties specified by &lt;a href=&quot;https://www.unicode.org/reports/tr18/#Compatibility_Properties&quot;&gt;https://www.unicode.org/reports/tr18/#Compatibility_Properties&lt;/a&gt;. These are described above in &lt;a href=&quot;#Other-Properties&quot;&gt;&quot;Other Properties&quot;&lt;/a&gt;</source>
          <target state="translated">[3] Perl에는 &lt;code&gt;\d&lt;/code&gt; &lt;code&gt;\D&lt;/code&gt; &lt;code&gt;\s&lt;/code&gt; &lt;code&gt;\S&lt;/code&gt; &lt;code&gt;\w&lt;/code&gt; &lt;code&gt;\W&lt;/code&gt; &lt;code&gt;\X&lt;/code&gt; &lt;code&gt;[:&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt; &lt;code&gt;[:^&lt;i&gt;prop&lt;/i&gt;:]&lt;/code&gt; 및 &lt;a href=&quot;https://www.unicode.org/reports/tr18/#Compatibility_Properties&quot;&gt;https://www.unicode.org/reports/tr18에&lt;/a&gt; 지정된 모든 속성이 있습니다. / # Compatibility_Properties . 위의 &lt;a href=&quot;#Other-Properties&quot;&gt;&quot;기타 속성&quot;&lt;/a&gt; 에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd52e2014000b721f1f2b72f0863004a9ecbde30" translate="yes" xml:space="preserve">
          <source>[3] zh__pinyin, zh__stroke and zh__zhuyin: implemented alt='short', where a smaller number of ideographs are tailored.</source>
          <target state="translated">[3] zh__pinyin, zh__stroke 및 zh__zhuyin : 더 적은 수의 표의 문자가 조정되는 alt = 'short'구현.</target>
        </trans-unit>
        <trans-unit id="8f4e345e7cd51e4e633816f5a52a47df465da189" translate="yes" xml:space="preserve">
          <source>[4]</source>
          <target state="translated">[4]</target>
        </trans-unit>
        <trans-unit id="10ae24979c5028fa873651bca338152dc0484245" translate="yes" xml:space="preserve">
          <source>[5]</source>
          <target state="translated">[5]</target>
        </trans-unit>
        <trans-unit id="233db7fca492136ec1c9065745e59cccf497e90b" translate="yes" xml:space="preserve">
          <source>[5] &lt;code&gt;\b&lt;/code&gt;&lt;code&gt;\B&lt;/code&gt; meet most, but not all, the details of this requirement, but &lt;code&gt;\b{wb}&lt;/code&gt; and &lt;code&gt;\B{wb}&lt;/code&gt; do, as well as the stricter R2.3.</source>
          <target state="translated">[5] &lt;code&gt;\b&lt;/code&gt; &lt;code&gt;\B&lt;/code&gt; 는이 요구 사항의 세부 사항을 대부분 충족하지만 전부는 아니지만 &lt;code&gt;\b{wb}&lt;/code&gt; 및 &lt;code&gt;\B{wb}&lt;/code&gt; 는 더 엄격한 R2.3을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="4a0a63ce33cc030f270c607ea7bf90a6717572bb" translate="yes" xml:space="preserve">
          <source>[6]</source>
          <target state="translated">[6]</target>
        </trans-unit>
        <trans-unit id="582472de9b1aecba03a72f54cdffca25542de79c" translate="yes" xml:space="preserve">
          <source>[7..10]</source>
          <target state="translated">[7..10]</target>
        </trans-unit>
        <trans-unit id="bd703dc0b11593277a5a82dd893f2880b8d0f32a" translate="yes" xml:space="preserve">
          <source>[7]</source>
          <target state="translated">[7]</target>
        </trans-unit>
        <trans-unit id="1fb0856518ee0490ff78e43d1b6dae12ad6ec686" translate="yes" xml:space="preserve">
          <source>[8]</source>
          <target state="translated">[8]</target>
        </trans-unit>
        <trans-unit id="2f464be2e75b410fd5d491c027edafa786ac22d5" translate="yes" xml:space="preserve">
          <source>[8] UTF-8/UTF-EBDDIC used in Perl allows not only &lt;code&gt;U+10000&lt;/code&gt; to &lt;code&gt;U+10FFFF&lt;/code&gt; but also beyond &lt;code&gt;U+10FFFF&lt;/code&gt;</source>
          <target state="translated">[8] Perl에서 사용되는 UTF-8 / UTF-EBDDIC은 &lt;code&gt;U+10000&lt;/code&gt; 에서 &lt;code&gt;U+10FFFF&lt;/code&gt; 까지 뿐만 아니라 &lt;code&gt;U+10FFFF&lt;/code&gt; 를 넘어서도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="7a60554107407bfe358bedce2bfcb95c90a8ea0d" translate="yes" xml:space="preserve">
          <source>[9]</source>
          <target state="translated">[9]</target>
        </trans-unit>
        <trans-unit id="b8b4d2522c04d2021ee74189eee7928750a50bd0" translate="yes" xml:space="preserve">
          <source>[9] Unicode has rewritten this portion of UTS#18 to say that getting canonical equivalence (see UAX#15 &lt;a href=&quot;https://www.unicode.org/reports/tr15&quot;&gt;&quot;Unicode Normalization Forms&quot;&lt;/a&gt;) is basically to be done at the programmer level. Use NFD to write both your regular expressions and text to match them against (you can use &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;).</source>
          <target state="translated">[9]는 유니 코드 표준 등가지고 (UAX # 15 참조 말할 UTS # 18의이 부분을 재 작성하고있다 &lt;a href=&quot;https://www.unicode.org/reports/tr15&quot;&gt;&quot;유니 코드 표준화 양식&quot;&lt;/a&gt; 기본적 프로그래머 레벨에서 수행되어야한다). NFD를 사용하여 정규식과 텍스트를 모두 작성하여 일치시킬 수 있습니다 ( &lt;a href=&quot;Unicode::Normalize&quot;&gt;Unicode :: Normalize를&lt;/a&gt; 사용할 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="b002b78bc12a3ff6e29895fae1de731a69f453ae" translate="yes" xml:space="preserve">
          <source>[&lt;b&gt;-help&lt;/b&gt;] [&lt;b&gt;-man&lt;/b&gt;] [&lt;b&gt;-exit&lt;/b&gt;</source>
          <target state="translated">[ &lt;b&gt;-help&lt;/b&gt; ] &lt;b&gt;-man&lt;/b&gt; ] &lt;b&gt;-exit&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b0275f738749aa6cac8eb913cf57b88a87e7251a" translate="yes" xml:space="preserve">
          <source>[= =] and [. .]</source>
          <target state="translated">[= =] 및 [. .]</target>
        </trans-unit>
        <trans-unit id="b7f7b2f070d043ac6adcb96823bacdf134bc5b2b" translate="yes" xml:space="preserve">
          <source>[ARRAYREF]</source>
          <target state="translated">[ARRAYREF]</target>
        </trans-unit>
        <trans-unit id="afca1504bc2e3c3044d29b9874e85f36958af894" translate="yes" xml:space="preserve">
          <source>[Building/installing modules]</source>
          <target state="translated">[빌딩 / 설치 모듈]</target>
        </trans-unit>
        <trans-unit id="d6b3628e3701db9b7fa6809c69a05c70b5ed76a4" translate="yes" xml:space="preserve">
          <source>[CORE] Converts the supplied Win32 error number (e.g. returned by Win32::GetLastError()) to a descriptive string. Analogous to the perror() standard-C library function. Note that &lt;code&gt;$^E&lt;/code&gt; used in a string context has much the same effect.</source>
          <target state="translated">[CORE] 제공된 Win32 오류 번호 (예 : Win32 :: GetLastError ()에서 반환 됨)를 설명 문자열로 변환합니다. perror () 표준 -C 라이브러리 함수와 유사합니다. 참고 &lt;code&gt;$^E&lt;/code&gt; 문자열 문맥에서 사용되는 거의 같은 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="84f68fb2f6b0592510b08c0d182aab0f612cf466" translate="yes" xml:space="preserve">
          <source>[CORE] GetFullPathName combines the FILENAME with the current drive and directory name and returns a fully qualified (aka, absolute) path name. In list context it returns two elements: (PATH, FILE) where PATH is the complete pathname component (including trailing backslash) and FILE is just the filename part. Note that no attempt is made to convert 8.3 components in the supplied FILENAME to longnames or vice-versa. Compare with Win32::GetShortPathName() and Win32::GetLongPathName().</source>
          <target state="translated">[CORE] GetFullPathName은 FILENAME을 현재 드라이브 및 디렉터리 이름과 결합하고 정규화 된 (즉, 절대) 경로 이름을 반환합니다. 목록 컨텍스트에서 두 가지 요소를 반환합니다. (PATH, FILE) 여기서 PATH는 전체 경로 이름 구성 요소 (후행 백 슬래시 포함)이고 FILE은 파일 이름 부분입니다. 제공된 FILENAME의 8.3 구성 요소를 긴 이름으로 또는 그 반대로 변환하려고 시도하지 않습니다. Win32 :: GetShortPathName () 및 Win32 :: GetLongPathName ()과 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="bcde9f909447423f2e8ca8fdf34fb498c088de8c" translate="yes" xml:space="preserve">
          <source>[CORE] Pauses for TIME milliseconds. The timeslices are made available to other processes and threads.</source>
          <target state="translated">[CORE] TIME 밀리 초 동안 일시 중지합니다. 타임 슬라이스는 다른 프로세스와 스레드에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fe06f376f43d9ceac0b2b54ee3f7dae5be0ab18" translate="yes" xml:space="preserve">
          <source>[CORE] Returns a representation of PATHNAME composed of longname components (if any). The result may not necessarily be longer than PATHNAME. No attempt is made to convert PATHNAME to the absolute path. Compare with Win32::GetShortPathName() and Win32::GetFullPathName().</source>
          <target state="translated">[CORE] 긴 이름 구성 요소 (있는 경우)로 구성된 PATHNAME 표현을 반환합니다. 결과는 반드시 PATHNAME보다 길지 않을 수 있습니다. PATHNAME을 절대 경로로 변환하지 않습니다. Win32 :: GetShortPathName () 및 Win32 :: GetFullPathName ()과 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="bdd708353dc93e7e74b0b08eaddec467dad6ba16" translate="yes" xml:space="preserve">
          <source>[CORE] Returns a representation of PATHNAME that is composed of short (8.3) path components where available. For path components where the file system has not generated the short form the returned path will use the long form, so this function might still for instance return a path containing spaces. Returns &lt;code&gt;undef&lt;/code&gt; when the PATHNAME does not exist. Compare with Win32::GetFullPathName() and Win32::GetLongPathName().</source>
          <target state="translated">[CORE] 가능한 경우 짧은 (8.3) 경로 구성 요소로 구성된 PATHNAME의 표현을 반환합니다. 파일 시스템이 짧은 형식을 생성하지 않은 경로 구성 요소의 경우 반환 된 경로는 긴 형식을 사용하므로이 함수는 예를 들어 공백이 포함 된 경로를 반환 할 수 있습니다. PATHNAME이 없으면 &lt;code&gt;undef&lt;/code&gt; 를 반환 합니다. Win32 :: GetFullPathName () 및 Win32 :: GetLongPathName ()과 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="0cf4d38fb9af295a3da4e1a2d214c462dc00c83e" translate="yes" xml:space="preserve">
          <source>[CORE] Returns a string in the form of &quot;&amp;lt;d&amp;gt;:&quot; where &amp;lt;d&amp;gt; is the first available drive letter.</source>
          <target state="translated">[CORE] &quot;&amp;lt;d&amp;gt; :&quot;형식의 ​​문자열을 반환합니다. 여기서 &amp;lt;d&amp;gt;는 사용 가능한 첫 번째 드라이브 문자입니다.</target>
        </trans-unit>
        <trans-unit id="48d02ec09ee2a21f330c5fd13e8305e0a31ecfe8" translate="yes" xml:space="preserve">
          <source>[CORE] Returns non zero if the Win32 subsystem is Windows 95.</source>
          <target state="translated">[CORE] Win32 하위 시스템이 Windows 95 인 경우 0이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb39076e20ea89adab56ae66afa6bc9f39dcc3ca" translate="yes" xml:space="preserve">
          <source>[CORE] Returns non zero if the Win32 subsystem is Windows NT.</source>
          <target state="translated">[CORE] Win32 하위 시스템이 Windows NT 인 경우 0이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5cb368f955e0e8330c886d245d5c7a418c730ac9" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the ActivePerl build number. This function is only available in the ActivePerl binary distribution.</source>
          <target state="translated">[CORE] ActivePerl 빌드 번호를 반환합니다. 이 함수는 ActivePerl 바이너리 배포에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e913e8ec9df4c2ab2c6c9f9a4041519dc4942c7d" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the Microsoft Network node-name of the current machine.</source>
          <target state="translated">[CORE] 현재 컴퓨터의 Microsoft 네트워크 노드 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5895b5a6d59fbae82cb4d6cd2a031463591680ac" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the current active drive and directory. This function does not return a UNC path, since the functionality required for such a feature is not available under Windows 95.</source>
          <target state="translated">[CORE] 현재 활성 드라이브 및 디렉토리를 반환합니다. 이러한 기능에 필요한 기능은 Windows 95에서 사용할 수 없기 때문에이 함수는 UNC 경로를 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6ba276dac7710f537fc21b85a812478f127eb3c" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the last error value generated by a call to a Win32 API function. Note that &lt;code&gt;$^E&lt;/code&gt; used in a numeric context amounts to the same value.</source>
          <target state="translated">[CORE] Win32 API 함수 호출에 의해 생성 된 마지막 오류 값을 반환합니다. 참고 &lt;code&gt;$^E&lt;/code&gt; 숫자 맥락에서 사용되는 동일한 값에 달한다.</target>
        </trans-unit>
        <trans-unit id="57bbe3239d0e4c88cc21711017af87ee821325f1" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the list (STRING, MAJOR, MINOR, BUILD, ID), where the elements are, respectively: An arbitrary descriptive string, the major version number of the operating system, the minor version number, the build number, and a digit indicating the actual operating system. For the ID, the values are 0 for Win32s, 1 for Windows 9X/Me and 2 for Windows NT/2000/XP/2003/Vista/2008/7. In scalar context it returns just the ID.</source>
          <target state="translated">[CORE] 목록 (STRING, MAJOR, MINOR, BUILD, ID)을 반환합니다. 여기서 요소는 각각 임의의 설명 문자열, 운영 체제의 주 버전 번호, 부 버전 번호, 빌드 번호 및 실제 운영 체제를 나타내는 숫자입니다. ID의 경우 값은 Win32의 경우 0, Windows 9X / Me의 경우 1, Windows NT / 2000 / XP / 2003 / Vista / 2008 / 7의 경우 2입니다. 스칼라 컨텍스트에서는 ID 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a4d6af30c7c44e34a9bb3cd141a2e0f0107aa9db" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the name of the Microsoft Network domain or workgroup that the owner of the current perl process is logged into. The &quot;Workstation&quot; service must be running to determine this information. This function does &lt;b&gt;not&lt;/b&gt; work on Windows 9x.</source>
          <target state="translated">[CORE] 현재 perl 프로세스의 소유자가 로그인 한 Microsoft 네트워크 도메인 또는 작업 그룹의 이름을 반환합니다. 이 정보를 확인하려면 &quot;워크 스테이션&quot;서비스가 실행되고 있어야합니다. 이 기능은 Windows 9x에서 작동하지 &lt;b&gt;않습니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="e19a30e866de8a16f36598cf0b685206c4c4905b" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the name of the filesystem of the currently active drive (like 'FAT' or 'NTFS'). In list context it returns three values: (FSTYPE, FLAGS, MAXCOMPLEN). FSTYPE is the filesystem type as before. FLAGS is a combination of values of the following table:</source>
          <target state="translated">[CORE] 현재 활성 드라이브의 파일 시스템 이름을 반환합니다 (예 : 'FAT'또는 'NTFS'). 목록 컨텍스트에서는 (FSTYPE, FLAGS, MAXCOMPLEN)의 세 가지 값을 반환합니다. FSTYPE은 이전과 같은 파일 시스템 유형입니다. FLAGS는 다음 표의 값 조합입니다.</target>
        </trans-unit>
        <trans-unit id="75ef1900265cdb6641196c54f1870f18c4bb8dd9" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the number of milliseconds elapsed since the last system boot. Resolution is limited to system timer ticks (about 10ms on WinNT and 55ms on Win9X).</source>
          <target state="translated">[CORE] 마지막 시스템 부팅 이후 경과 된 시간 (밀리 초)을 반환합니다. 해상도는 시스템 타이머 틱으로 제한됩니다 (WinNT에서 약 10ms, Win9X에서 55ms).</target>
        </trans-unit>
        <trans-unit id="18377d63cc00bb24b630b0dc1d865db70ef00e23" translate="yes" xml:space="preserve">
          <source>[CORE] Returns the username of the owner of the current perl process. The return value may be a Unicode string.</source>
          <target state="translated">[CORE] 현재 펄 프로세스 소유자의 사용자 이름을 반환합니다. 반환 값은 유니 코드 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39d39e58774e237664eeda3219cc1a859aa040a8" translate="yes" xml:space="preserve">
          <source>[CORE] Sets the</source>
          <target state="translated">[CORE] 설정</target>
        </trans-unit>
        <trans-unit id="8ff6d7abf3107610fd79e5d8e242d87f4f176e24" translate="yes" xml:space="preserve">
          <source>[CORE] Sets the current active drive and directory. This function does not work with UNC paths, since the functionality required to required for such a feature is not available under Windows 95.</source>
          <target state="translated">[CORE] 현재 활성 드라이브 및 디렉토리를 설정합니다. 이러한 기능에 필요한 기능은 Windows 95에서 사용할 수 없기 때문에이 기능은 UNC 경로에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2dc8fd7a0ec462d543d099f8aaec42452af82f69" translate="yes" xml:space="preserve">
          <source>[CORE] Sets the value of the last error encountered to ERROR. This is that value that will be returned by the Win32::GetLastError() function.</source>
          <target state="translated">[CORE] 마지막으로 발생한 오류 값을 ERROR로 설정합니다. 이것은 Win32 :: GetLastError () 함수에 의해 반환되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="569c8bbd8291fe19cc213e90d090fd13836b114f" translate="yes" xml:space="preserve">
          <source>[CORE] Spawns a new process using the supplied COMMAND, passing in arguments in the string ARGS. The pid of the new process is stored in PID. This function is deprecated. Please use the Win32::Process module instead.</source>
          <target state="translated">[CORE] 제공된 COMMAND를 사용하여 새 프로세스를 생성하고 ARGS 문자열에 인수를 전달합니다. 새 프로세스의 pid는 PID에 저장됩니다. 이 기능은 더 이상 사용되지 않습니다. 대신 Win32 :: Process 모듈을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5a133b599cd92f29d4a3ad10a080f7fe231124f3" translate="yes" xml:space="preserve">
          <source>[CORE] The Win32::CopyFile() function copies an existing file to a new file. All file information like creation time and file attributes will be copied to the new file. However it will &lt;b&gt;not&lt;/b&gt; copy the security information. If the destination file already exists it will only be overwritten when the OVERWRITE parameter is true. But even this will not overwrite a read-only file; you have to unlink() it first yourself.</source>
          <target state="translated">[CORE] Win32 :: CopyFile () 함수는 기존 파일을 새 파일로 복사합니다. 생성 시간 및 파일 속성과 같은 모든 파일 정보가 새 파일에 복사됩니다. 그러나 보안 정보 는 복사 &lt;b&gt;되지 않습니다&lt;/b&gt; . 대상 파일이 이미 존재하는 경우 OVERWRITE 매개 변수가 참일 때만 덮어 씁니다. 그러나 이것조차도 읽기 전용 파일을 덮어 쓰지 않습니다. 먼저 직접 unlink ()해야합니다.</target>
        </trans-unit>
        <trans-unit id="9224bf067cdf7665993375ff1d33e813365c624c" translate="yes" xml:space="preserve">
          <source>[HASHREF]</source>
          <target state="translated">[HASHREF]</target>
        </trans-unit>
        <trans-unit id="1c6555677db9746d71e639d2861c450df21a423a" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Test whether</source>
          <target state="translated">[내부] 테스트 여부</target>
        </trans-unit>
        <trans-unit id="3e3a19400d8a2d90d0db0e1989c48275083a979d" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Tests whether the UTF8 flag is turned on in the</source>
          <target state="translated">[INTERNAL] UTF8 플래그가 켜져 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="22eb99e5f093e515d3af9067fe7ea86722b6bbf1" translate="yes" xml:space="preserve">
          <source>[INTERNAL] Turns the</source>
          <target state="translated">[내부]</target>
        </trans-unit>
        <trans-unit id="009b33a0528361398d9c707d1795bc4cfafeac38" translate="yes" xml:space="preserve">
          <source>[If you have the recommended version of bash for DJGPP, this is already done for you.]</source>
          <target state="translated">[DJGPP에 권장되는 버전의 bash가있는 경우 이미 완료된 것입니다.]</target>
        </trans-unit>
        <trans-unit id="5af5c7f45b299c973fea5c4dcd0294b1e6234199" translate="yes" xml:space="preserve">
          <source>[If you have the recommended versions of djdev, shell utilities and gawk, all these are already done for you, and you will not need to do anything.]</source>
          <target state="translated">[권장되는 djdev, shell 유틸리티 및 gawk 버전이있는 경우이 모든 것이 이미 완료되었으므로 별도의 조치를 취할 필요가 없습니다.]</target>
        </trans-unit>
        <trans-unit id="f3b3a575af1d23fed1f5628631ec3936ffe0f6d1" translate="yes" xml:space="preserve">
          <source>[Installing/building perl]</source>
          <target state="translated">[펄 설치 / 빌딩]</target>
        </trans-unit>
        <trans-unit id="5d1e8f7d83caac3b34475dd7d9e3096070d95629" translate="yes" xml:space="preserve">
          <source>[MAYCHANGE] In other words, the array or hash fetch/store functions don't really fetch and store actual values in the case of tied arrays and hashes. They merely call &lt;code&gt;mg_copy&lt;/code&gt; to attach magic to the values that were meant to be &quot;stored&quot; or &quot;fetched&quot;. Later calls to &lt;code&gt;mg_get&lt;/code&gt; and &lt;code&gt;mg_set&lt;/code&gt; actually do the job of invoking the TIE methods on the underlying objects. Thus the magic mechanism currently implements a kind of lazy access to arrays and hashes.</source>
          <target state="translated">[MAYCHANGE] 즉, 배열 또는 해시 가져 오기 / 저장 함수는 연결된 배열 및 해시의 경우 실제 값을 가져오고 저장하지 않습니다. 그들은 단지 &quot;저장&quot;또는 &quot;가져온&quot;값에 마법을 &lt;code&gt;mg_copy&lt;/code&gt; 위해 mg_copy 를 호출 합니다. 나중에 &lt;code&gt;mg_get&lt;/code&gt; 및 &lt;code&gt;mg_set&lt;/code&gt; 에 대한 호출은 기본 개체에서 TIE 메서드를 호출하는 작업을 실제로 수행합니다. 따라서 마법 메커니즘은 현재 배열과 해시에 대한 일종의 게으른 액세스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="2c69f013a0c0b9f7ed975da9c912abcf0653290a" translate="yes" xml:space="preserve">
          <source>[NEWVAL]</source>
          <target state="translated">[NEWVAL]</target>
        </trans-unit>
        <trans-unit id="df09316d1660db1302232803b2f5e188c2dcfea1" translate="yes" xml:space="preserve">
          <source>[Note: My</source>
          <target state="translated">[참고 : 내</target>
        </trans-unit>
        <trans-unit id="605fe26ef61b183da862fb5f0061fa2d880bc6b0" translate="yes" xml:space="preserve">
          <source>[Note: previous editions of the spec had &lt;code&gt;dir&lt;/code&gt; instead of &lt;code&gt;directory&lt;/code&gt;, but I think MakeMaker and various users started using &lt;code&gt;directory&lt;/code&gt;, so in deference we switched to that.]</source>
          <target state="translated">[참고 : 사양의 이전 버전에는 &lt;code&gt;directory&lt;/code&gt; 대신 &lt;code&gt;dir&lt;/code&gt; 이 있었지만 MakeMaker와 다양한 사용자가 &lt;code&gt;directory&lt;/code&gt; 를 사용하기 시작 했으므로이를 존중 하여 전환했습니다.]</target>
        </trans-unit>
        <trans-unit id="4f834c241d7bdeabf113279ffdacebc7dc88459c" translate="yes" xml:space="preserve">
          <source>[Some of this answer was contributed by Kenneth Albanowski.]</source>
          <target state="translated">[이 답변 중 일부는 Kenneth Albanowski가 제공했습니다.]</target>
        </trans-unit>
        <trans-unit id="4633b12be3cc44b6e8be5c5a150f67e693537e3b" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt;&lt;code&gt;tie&lt;/code&gt;&lt;/a&gt; function.]</source>
          <target state="translated">[이 기능은 &lt;a href=&quot;#tie-VARIABLE%2CCLASSNAME%2CLIST&quot;&gt; &lt;code&gt;tie&lt;/code&gt; &lt;/a&gt; 기능 으로 대체되었습니다 .]</target>
        </trans-unit>
        <trans-unit id="e9c2c8715a2a88d854204445ba9c4d5016aa0191" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;a href=&quot;#tie-VARIABLE%2cCLASSNAME%2cLIST&quot;&gt;tie&lt;/a&gt; function.]</source>
          <target state="translated">[이 기능은 대체로 &lt;a href=&quot;#tie-VARIABLE%2cCLASSNAME%2cLIST&quot;&gt;넥타이&lt;/a&gt; 기능 으로 대체되었습니다 .]</target>
        </trans-unit>
        <trans-unit id="cdb63311673e46af461eb9bef294b82c2ad62ad1" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;a href=&quot;#untie-VARIABLE&quot;&gt;&lt;code&gt;untie&lt;/code&gt;&lt;/a&gt; function.]</source>
          <target state="translated">[이 기능은 대부분 &lt;a href=&quot;#untie-VARIABLE&quot;&gt; &lt;code&gt;untie&lt;/code&gt; &lt;/a&gt; 기능 으로 대체되었습니다 .]</target>
        </trans-unit>
        <trans-unit id="b1c00ee4c595ea64bb97d342fb1c568e80ba451b" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; function.]</source>
          <target state="translated">[이 기능은 &lt;code&gt;&lt;a href=&quot;functions/untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 기능 으로 대체되었습니다 .]</target>
        </trans-unit>
        <trans-unit id="3b25169a6ac2e6f9178110c63d21693ee54fec41" translate="yes" xml:space="preserve">
          <source>[This function has been largely superseded by the &lt;code&gt;&lt;a href=&quot;untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; function.]</source>
          <target state="translated">[이 기능은 &lt;code&gt;&lt;a href=&quot;untie&quot;&gt;untie&lt;/a&gt;&lt;/code&gt; 기능 으로 대체되었습니다 .]</target>
        </trans-unit>
        <trans-unit id="466698b7c92675c3f06ae6b2691207f2e8b24913" translate="yes" xml:space="preserve">
          <source>[This section provides a short overview only...]</source>
          <target state="translated">[이 섹션은 간단한 개요 만 제공합니다 ...]</target>
        </trans-unit>
        <trans-unit id="68ecc94bfa207a245a096cc2d83887da582b2e04" translate="yes" xml:space="preserve">
          <source>[This section still under construction. Ignore everything here. Post no bills. Everything not permitted is forbidden.]</source>
          <target state="translated">[이 섹션은 아직 공사중입니다. 여기서 모든 것을 무시하십시오. 청구서를 게시하지 않습니다. 허용되지 않는 것은 모두 금지되어 있습니다.]</target>
        </trans-unit>
        <trans-unit id="69f3514fe4449506ca2c5d0bbc28b3f3698032b0" translate="yes" xml:space="preserve">
          <source>[Well, it was in</source>
          <target state="translated">[음, 그것은에 있었다</target>
        </trans-unit>
        <trans-unit id="1941408b205b2cc47e812fef0c049d71da3802fc" translate="yes" xml:space="preserve">
          <source>[\xE9 is e-acute in Latin-1. Some pod renderers would scream if I used the actual character here. -- SB]</source>
          <target state="translated">[\ xE9는 Latin-1에서 e-acute입니다. 여기에서 실제 캐릭터를 사용하면 일부 포드 렌더러가 비명을지를 것입니다. -SB]</target>
        </trans-unit>
        <trans-unit id="75645d07cfaea1a62054cc39ed68879f05d04d40" translate="yes" xml:space="preserve">
          <source>[at least as far as the &lt;code&gt;HANDLE_FLAG_INHERIT&lt;/code&gt; and &lt;code&gt;HANDLE_FLAG_PROTECT_FROM_CLOSE&lt;/code&gt; bits are concerned.]</source>
          <target state="translated">[적어도 &lt;code&gt;HANDLE_FLAG_INHERIT&lt;/code&gt; 및 &lt;code&gt;HANDLE_FLAG_PROTECT_FROM_CLOSE&lt;/code&gt; 비트에 관한 한]</target>
        </trans-unit>
        <trans-unit id="88f04dbeb1493ee12988be863cfacc3c7afc777a" translate="yes" xml:space="preserve">
          <source>[linebreak]</source>
          <target state="translated">[linebreak]</target>
        </trans-unit>
        <trans-unit id="62dbd97a94ce152fbb8308d88e3ce5198f760e6e" translate="yes" xml:space="preserve">
          <source>[optional] {Map}</source>
          <target state="translated">[선택 사항] {지도}</target>
        </trans-unit>
        <trans-unit id="0d1503358731a8163c4eaaa9c8dd65b34e1f9ea8" translate="yes" xml:space="preserve">
          <source>[optional] {String}</source>
          <target state="translated">[선택 사항] {String}</target>
        </trans-unit>
        <trans-unit id="8e45a11f71779811f3e2ea3bcf3f1743d8bd800c" translate="yes" xml:space="preserve">
          <source>[optional] {URL}</source>
          <target state="translated">[선택 사항] {URL}</target>
        </trans-unit>
        <trans-unit id="434d82c910fba2a895a5be59050f05f00a371e10" translate="yes" xml:space="preserve">
          <source>[r,t]</source>
          <target state="translated">[r,t]</target>
        </trans-unit>
        <trans-unit id="6018e494126b314973d815b3477ee1c68ccc6d49" translate="yes" xml:space="preserve">
          <source>[space][space]</source>
          <target state="translated">[space][space]</target>
        </trans-unit>
        <trans-unit id="a835f340cd50f914dc75f6342dfd19eac664004d" translate="yes" xml:space="preserve">
          <source>[{afa} : Afro-Asiatic (Other)]</source>
          <target state="translated">[{afa} : 아프리카 계 아시아계 (기타)]</target>
        </trans-unit>
        <trans-unit id="f4fa65069474ade03a35f4d1a416665233dfbe8f" translate="yes" xml:space="preserve">
          <source>[{alg} : Algonquian languages]</source>
          <target state="translated">[{alg} : 알곤 퀴어 언어]</target>
        </trans-unit>
        <trans-unit id="890e37d52f40da51d83a272afdb3fa93b6cb6cee" translate="yes" xml:space="preserve">
          <source>[{apa} : Apache languages]</source>
          <target state="translated">[{apa} : Apache 언어]</target>
        </trans-unit>
        <trans-unit id="fd862550ed2f5eef152f42ff4be0662ee6784380" translate="yes" xml:space="preserve">
          <source>[{art} : Artificial (Other)]</source>
          <target state="translated">[{art} : 인공 (기타)]</target>
        </trans-unit>
        <trans-unit id="9466d3298aba8f21eb1d3efaafac32974cfd0b5b" translate="yes" xml:space="preserve">
          <source>[{ath} : Athapascan languages]</source>
          <target state="translated">[{ath} : 아 타파스 칸어]</target>
        </trans-unit>
        <trans-unit id="a98b9fbed615ebe1513bc368b2167d2dd9b97caa" translate="yes" xml:space="preserve">
          <source>[{aus} : Australian languages]</source>
          <target state="translated">[{aus} : 호주 언어]</target>
        </trans-unit>
        <trans-unit id="72328c0df9ed66d22b34311280ac59b652dd9856" translate="yes" xml:space="preserve">
          <source>[{bai} : Bamileke languages]</source>
          <target state="translated">[{bai} : Bamileke 언어]</target>
        </trans-unit>
        <trans-unit id="70e8e9972904de6163c656334c0c3812cf86794c" translate="yes" xml:space="preserve">
          <source>[{bat} : Baltic (Other)]</source>
          <target state="translated">[{bat} : 발트 어 (기타)]</target>
        </trans-unit>
        <trans-unit id="d18fa3defc9ccb425bfb380373bc5d3d11436e87" translate="yes" xml:space="preserve">
          <source>[{ber} : Berber (Other)]</source>
          <target state="translated">[{ber} : Berber (기타)]</target>
        </trans-unit>
        <trans-unit id="5ccebba5698bd6a19e77fa2fab917aebb096d6aa" translate="yes" xml:space="preserve">
          <source>[{bnt} : Bantu (Other)]</source>
          <target state="translated">[{bnt} : Bantu (기타)]</target>
        </trans-unit>
        <trans-unit id="425417830bc7057e8fb242970d0347a359178791" translate="yes" xml:space="preserve">
          <source>[{cai} : Central American Indian (Other)]</source>
          <target state="translated">[{cai} : 중앙 아메리카 인디언 (기타)]</target>
        </trans-unit>
        <trans-unit id="607b67ed1aa4559a39fbbaf385488857b44ded8a" translate="yes" xml:space="preserve">
          <source>[{cau} : Caucasian (Other)]</source>
          <target state="translated">[{cau} : 백인 (기타)]</target>
        </trans-unit>
        <trans-unit id="55d95cff36d94814544921c0df6a8d3631b6c209" translate="yes" xml:space="preserve">
          <source>[{cel} : Celtic (Other)]</source>
          <target state="translated">[{cel} : 셀틱 (기타)]</target>
        </trans-unit>
        <trans-unit id="7661f0122b032489d6586da9fa9daffbe378d4a6" translate="yes" xml:space="preserve">
          <source>[{cmc} : Chamic languages]</source>
          <target state="translated">[{cmc} : Chamic 언어]</target>
        </trans-unit>
        <trans-unit id="ea53d81f1122350f392bc074e04f1169ac8ed120" translate="yes" xml:space="preserve">
          <source>[{cpe} : English-based Creoles and pidgins (Other)]</source>
          <target state="translated">[{cpe} : 영어 기반 크리올 어 및 피진어 (기타)]</target>
        </trans-unit>
        <trans-unit id="72fb07b1f328d9f430b7a914c05baf3a8fd216bd" translate="yes" xml:space="preserve">
          <source>[{cpf} : French-based Creoles and pidgins (Other)]</source>
          <target state="translated">[{cpf} : 프랑스어 기반 크리올 및 피진 (기타)]</target>
        </trans-unit>
        <trans-unit id="fdcf4317def919bd424e436690876a1e291cb19f" translate="yes" xml:space="preserve">
          <source>[{cpp} : Portuguese-based Creoles and pidgins (Other)]</source>
          <target state="translated">[{cpp} : 포르투갈어 기반 크리올 및 피진 (기타)]</target>
        </trans-unit>
        <trans-unit id="508c339e508bef8a14abdfb3d40655c0c4a50d0a" translate="yes" xml:space="preserve">
          <source>[{crp} : Creoles and pidgins (Other)]</source>
          <target state="translated">[{crp} : 크리올과 피진 (기타)]</target>
        </trans-unit>
        <trans-unit id="7a283dca648641889a9915cff9f14774ff0d6d2a" translate="yes" xml:space="preserve">
          <source>[{cus} : Cushitic (Other)]</source>
          <target state="translated">[{cus} : 쿠시 틱 (기타)]</target>
        </trans-unit>
        <trans-unit id="845c260450d8f3f6944063b557aeea58b4c73b2e" translate="yes" xml:space="preserve">
          <source>[{dra} : Dravidian (Other)]</source>
          <target state="translated">[{dra} : 드라 비디 안 (기타)]</target>
        </trans-unit>
        <trans-unit id="c4a7ec6ce17f60fc7f7728e8d2f57d9097bfc74d" translate="yes" xml:space="preserve">
          <source>[{fiu} : Finno-Ugrian (Other)]</source>
          <target state="translated">[{fiu} : Finno-Ugrian (기타)]</target>
        </trans-unit>
        <trans-unit id="4bdf0925942720f6c65ac79718ed94d415a611df" translate="yes" xml:space="preserve">
          <source>[{gem} : Germanic (Other)]</source>
          <target state="translated">[{gem} : 게르만어 (기타)]</target>
        </trans-unit>
        <trans-unit id="899298caf882595ec000ade0147fb3eafa61de9e" translate="yes" xml:space="preserve">
          <source>[{inc} : Indic (Other)]</source>
          <target state="translated">[{inc} : 인도어 (기타)]</target>
        </trans-unit>
        <trans-unit id="c4fb035e55bf71021c0062a59ae394a1f5bd1649" translate="yes" xml:space="preserve">
          <source>[{ine} : Indo-European (Other)]</source>
          <target state="translated">[{ine} : 인도-유럽 (기타)]</target>
        </trans-unit>
        <trans-unit id="9d90adffea98719940b5cbe1133a1ef6af4ae35d" translate="yes" xml:space="preserve">
          <source>[{ira} : Iranian (Other)]</source>
          <target state="translated">[{ira} : 이란어 (기타)]</target>
        </trans-unit>
        <trans-unit id="e09071c2a909f7ab5956233b05d7dafd370f5e68" translate="yes" xml:space="preserve">
          <source>[{iro} : Iroquoian languages]</source>
          <target state="translated">[{iro} : 이로쿼이 어 언어]</target>
        </trans-unit>
        <trans-unit id="9cddc4af69853d34f3cf56d2813b480cdfec3ab7" translate="yes" xml:space="preserve">
          <source>[{khi} : Khoisan (Other)]</source>
          <target state="translated">[{khi} : 코 이산 (기타)]</target>
        </trans-unit>
        <trans-unit id="05500162019d0b2c0d04db9c1e682e2cd21d14ee" translate="yes" xml:space="preserve">
          <source>[{map} : Austronesian (Other)]</source>
          <target state="translated">[{map} : 오스트로 네시아 어 (기타)]</target>
        </trans-unit>
        <trans-unit id="654ebfffa47f11fdc18ba636c0125100d6c8e0e8" translate="yes" xml:space="preserve">
          <source>[{mis} : Miscellaneous languages]</source>
          <target state="translated">[{mis} : 기타 언어]</target>
        </trans-unit>
        <trans-unit id="9fce80ec2da5532823b3ad5c9cb3f98d918de4ca" translate="yes" xml:space="preserve">
          <source>[{mkh} : Mon-Khmer (Other)]</source>
          <target state="translated">[{mkh} : Mon-Khmer (기타)]</target>
        </trans-unit>
        <trans-unit id="4e664a0dc344663b449e3bc1b8cfcdc5fe605852" translate="yes" xml:space="preserve">
          <source>[{mno} : Manobo languages]</source>
          <target state="translated">[{mno} : Manobo 언어]</target>
        </trans-unit>
        <trans-unit id="66abde783821eb081bfde8b6b93dd953ba271dae" translate="yes" xml:space="preserve">
          <source>[{mul} : Multiple languages]</source>
          <target state="translated">[{mul} : 여러 언어]</target>
        </trans-unit>
        <trans-unit id="d15a1ea38d1689e3c4d57b451afbf1b67eebb432" translate="yes" xml:space="preserve">
          <source>[{mun} : Munda languages]</source>
          <target state="translated">[{mun} : 문다 어]</target>
        </trans-unit>
        <trans-unit id="d7425bda360546c6ed765c4877abcbb2f0fe2866" translate="yes" xml:space="preserve">
          <source>[{myn} : Mayan languages]</source>
          <target state="translated">[{myn} : 마야어]</target>
        </trans-unit>
        <trans-unit id="799af38ce9758e9765726658403a3903382506ca" translate="yes" xml:space="preserve">
          <source>[{nai} : North American Indian]</source>
          <target state="translated">[{nai} : 북미 인디언]</target>
        </trans-unit>
        <trans-unit id="4e009186bed3eb44dbed15a52940c8f1cfa535e6" translate="yes" xml:space="preserve">
          <source>[{nic} : Niger-Kordofanian (Other)]</source>
          <target state="translated">[{nic} : 니제르-코르 도파니 아어 (기타)]</target>
        </trans-unit>
        <trans-unit id="3f3b58b55e0be436684a8161c9427864d123c090" translate="yes" xml:space="preserve">
          <source>[{nub} : Nubian languages]</source>
          <target state="translated">[{nub} : 누비아 언어]</target>
        </trans-unit>
        <trans-unit id="b53aeb87a08ba04513ac1c4cca2979ade6017528" translate="yes" xml:space="preserve">
          <source>[{oto} : Otomian languages]</source>
          <target state="translated">[{oto} : Otomian 언어]</target>
        </trans-unit>
        <trans-unit id="bba4a71d761baf34522a24193fd5b29a835ad129" translate="yes" xml:space="preserve">
          <source>[{paa} : Papuan (Other)]</source>
          <target state="translated">[{paa} : 파푸아 (기타)]</target>
        </trans-unit>
        <trans-unit id="c1928fb9639d19edc7b45c7ae6bb02bac40789e7" translate="yes" xml:space="preserve">
          <source>[{phi} : Philippine (Other)]</source>
          <target state="translated">[{phi} : 필리핀 (기타)]</target>
        </trans-unit>
        <trans-unit id="39dbad2562f7d7fc2080009a225ef4a148a80311" translate="yes" xml:space="preserve">
          <source>[{pra} : Prakrit languages]</source>
          <target state="translated">[{pra} : Prakrit 언어]</target>
        </trans-unit>
        <trans-unit id="1dcd9f86d713a1ca0d4027d18d4367b1b0ef0657" translate="yes" xml:space="preserve">
          <source>[{qaa - qtz} : Reserved for local use.]</source>
          <target state="translated">[{qaa-qtz} : 로컬 사용을 위해 예약 됨.]</target>
        </trans-unit>
        <trans-unit id="a46ab8b3b4b295485e543d89ef29bc442abf1674" translate="yes" xml:space="preserve">
          <source>[{roa} : Romance (Other)]</source>
          <target state="translated">[{roa} : 로맨스 (기타)]</target>
        </trans-unit>
        <trans-unit id="18827dd5893868f0a5f9aa369b78ee5c506b7667" translate="yes" xml:space="preserve">
          <source>[{sai} : South American Indian (Other)]</source>
          <target state="translated">[{sai} : 남미 인디언 (기타)]</target>
        </trans-unit>
        <trans-unit id="6ab5f1d451459c5889204641e5ad67cb4b79353a" translate="yes" xml:space="preserve">
          <source>[{sal} : Salishan languages]</source>
          <target state="translated">[{sal} : 살리 산어]</target>
        </trans-unit>
        <trans-unit id="2f815bc34247dee80b99b9336a290bba2680d98e" translate="yes" xml:space="preserve">
          <source>[{sem} : Semitic (Other)]</source>
          <target state="translated">[{sem} : 셈어 (기타)]</target>
        </trans-unit>
        <trans-unit id="92b12a7547fc1c58796c952cc576557757c4bf0e" translate="yes" xml:space="preserve">
          <source>[{sio} : Siouan languages]</source>
          <target state="translated">[{sio} : Siouan 언어]</target>
        </trans-unit>
        <trans-unit id="aed5918b604d5814c1cba19737a0fa9721fb9946" translate="yes" xml:space="preserve">
          <source>[{sit} : Sino-Tibetan (Other)]</source>
          <target state="translated">[{sit} : Sino-Tibetan (기타)]</target>
        </trans-unit>
        <trans-unit id="f8f2e5e4cbb6f5bc296d8f5c881f904df658b7ec" translate="yes" xml:space="preserve">
          <source>[{sla} : Slavic (Other)]</source>
          <target state="translated">[{sla} : 슬라브어 (기타)]</target>
        </trans-unit>
        <trans-unit id="59df5a86a66ea008a52966779c85293a71562251" translate="yes" xml:space="preserve">
          <source>[{smi} : Sami languages (Other)]</source>
          <target state="translated">[{smi} : 사 미어 (기타)]</target>
        </trans-unit>
        <trans-unit id="8dc63c1a093a7ce07a8bf2e6df265d72045e5c99" translate="yes" xml:space="preserve">
          <source>[{ssa} : Nilo-Saharan (Other)]</source>
          <target state="translated">[{ssa} : Nilo-Saharan (기타)]</target>
        </trans-unit>
        <trans-unit id="56be034a8d38d583c0c765f4f4ef176128358cef" translate="yes" xml:space="preserve">
          <source>[{tai} : Tai (Other)]</source>
          <target state="translated">[{tai} : Tai (기타)]</target>
        </trans-unit>
        <trans-unit id="ef2c4c1dd758a8059bff8297d2d63f755e10301a" translate="yes" xml:space="preserve">
          <source>[{tup} : Tupi languages]</source>
          <target state="translated">[{tup} : Tupi 언어]</target>
        </trans-unit>
        <trans-unit id="3e05c89d471412572e88277ed5854eb1043f1b76" translate="yes" xml:space="preserve">
          <source>[{tut} : Altaic (Other)]</source>
          <target state="translated">[{tut} : Altaic (기타)]</target>
        </trans-unit>
        <trans-unit id="84b17bc3bc55b711ccd9d64bde624539202b2704" translate="yes" xml:space="preserve">
          <source>[{wak} : Wakashan languages]</source>
          <target state="translated">[{wak} : Wakashan 언어]</target>
        </trans-unit>
        <trans-unit id="b946ee657f3766dfb7b1cf143d071c20afc19134" translate="yes" xml:space="preserve">
          <source>[{ypk} : Yupik languages]</source>
          <target state="translated">[{ypk} : 유픽 어족]</target>
        </trans-unit>
        <trans-unit id="934a0e0f4ddbe988607c0ed917b71e98d99b0d97" translate="yes" xml:space="preserve">
          <source>[{zap} : Zapotec]</source>
          <target state="translated">[{zap} : Zapotec]</target>
        </trans-unit>
        <trans-unit id="ea691db8970832d7fe8017c8cc559c7489a255a2" translate="yes" xml:space="preserve">
          <source>\%d better written as $%d</source>
          <target state="translated">\ % d은 (는) $ % d로 작성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0cb0cf8be7590ba0a93c7d3ce1f505c4701be694" translate="yes" xml:space="preserve">
          <source>\%expect is a ref to a hash of expected values for the test result.</source>
          <target state="translated">\ % expect는 테스트 결과에 대한 예상 값의 해시에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="71e1cf8d1368c4c52fd1828cfd5f0e5bbe01d4f2" translate="yes" xml:space="preserve">
          <source>\%expect is a ref to an hash of expected values for the test result.</source>
          <target state="translated">\ % expect는 테스트 결과에 대한 예상 값의 해시에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="ab0c166363e816ce194a18b525f051511ac2f787" translate="yes" xml:space="preserve">
          <source>\%result is a ref to a test result hash.</source>
          <target state="translated">\ % result는 테스트 결과 해시에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="afdb798959662b1202a71d3327ae85cfd5ef9cf9" translate="yes" xml:space="preserve">
          <source>\&amp;amp;CODE</source>
          <target state="translated">\&amp;amp;CODE</target>
        </trans-unit>
        <trans-unit id="02afbd090e40d0326686a40bd9f814cca4d14b98" translate="yes" xml:space="preserve">
          <source>\&amp;amp;some_routine</source>
          <target state="translated">\&amp;amp;some_routine</target>
        </trans-unit>
        <trans-unit id="6aed514711005e64d16f2b25e3ea825d7ec2dce5" translate="yes" xml:space="preserve">
          <source>\&amp;amp;test_sub is a reference to a subroutine.</source>
          <target state="translated">\ &amp;amp; test_sub는 서브 루틴에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="7df590088159a1d7bbcd6a7b57cdce874e69d567" translate="yes" xml:space="preserve">
          <source>\@expect is a ref to an array of hash refs which are expected test results.</source>
          <target state="translated">\ @expect는 예상되는 테스트 결과 인 해시 참조 배열에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="eac4ae0ca650ceb316ee54543453a6a9c8a6e7bc" translate="yes" xml:space="preserve">
          <source>\@expects is a ref to an array of hash refs.</source>
          <target state="translated">\ @expects는 해시 참조 배열에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="68764c244b4d146474bfa4d07659ea35d4a2c97f" translate="yes" xml:space="preserve">
          <source>\@results is a ref to an array of test results.</source>
          <target state="translated">\ @results는 테스트 결과 배열에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="66f63b124210f07a558afc81377745a77e3f26e9" translate="yes" xml:space="preserve">
          <source>\A</source>
          <target state="translated">\A</target>
        </trans-unit>
        <trans-unit id="8a1c1fe5b346db020f3988bf22f39d10d3abd324" translate="yes" xml:space="preserve">
          <source>\C no longer supported in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">\ C는 정규식에서 더 이상 지원되지 않습니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="cb559588de140bc32d992097ac9c98f627da21d3" translate="yes" xml:space="preserve">
          <source>\D is a negated \d; it represents any character but a digit</source>
          <target state="translated">\ D는 부정 된 \ d입니다. 숫자를 제외한 모든 문자를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6f370d6af4556227e5ea557e0c0431081559d1a3" translate="yes" xml:space="preserve">
          <source>\D is a negated \d; it represents any other character than a digit, or [^\d]</source>
          <target state="translated">\ D는 부정 된 \ d입니다. 숫자 이외의 다른 문자 또는 [^ \ d]</target>
        </trans-unit>
        <trans-unit id="ff4d3b9a401c3edd442bd234956682476594b31a" translate="yes" xml:space="preserve">
          <source>\G</source>
          <target state="translated">\G</target>
        </trans-unit>
        <trans-unit id="17687e10d4fd84cd280070d87d4f748b37e0b705" translate="yes" xml:space="preserve">
          <source>\K</source>
          <target state="translated">\K</target>
        </trans-unit>
        <trans-unit id="f5285799a8946c5cfd96394fdeb521457b5e1799" translate="yes" xml:space="preserve">
          <source>\K not permitted in lookahead/lookbehind in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">\ K는 정규식의 예견 / 예상 비하인드에서 허용되지 않습니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="483707e791c24bf4f182daf8d06032f62bf516af" translate="yes" xml:space="preserve">
          <source>\N</source>
          <target state="translated">\N</target>
        </trans-unit>
        <trans-unit id="8bbe2786560e6af575169d7b88560c16a4d9ad3a" translate="yes" xml:space="preserve">
          <source>\N in a character class must be a named character: \N{...} in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">문자 클래스의 \ N은 명명 된 문자 여야합니다. \ N {...} in regex; &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="4b60caece8e9624e4c91f3da6482cbb9fa5912e3" translate="yes" xml:space="preserve">
          <source>\N, like the period, matches any character but &quot;\n&quot;, but it does so regardless of whether the modifier &lt;code&gt;//s&lt;/code&gt; is in effect.</source>
          <target state="translated">마침표와 같이 \ N은 &quot;\ n&quot;을 제외한 모든 문자와 일치하지만 수정자가 &lt;code&gt;//s&lt;/code&gt; 가 적용 되는지 여부에 관계없이 그렇게 합니다.</target>
        </trans-unit>
        <trans-unit id="9a1dc85e675c05783069ff9ff4d785ec2ed003f3" translate="yes" xml:space="preserve">
          <source>\N{} here is restricted to one character in regex; marked by &amp;lt;-- HERE in m/%s/</source>
          <target state="translated">여기서 \ N {}은 정규식에서 한 문자로 제한됩니다. &amp;lt;-HERE (m / % s /)로 표시</target>
        </trans-unit>
        <trans-unit id="abbc4ac6b8b2f4165b4292f95f7dc5a1883a8db6" translate="yes" xml:space="preserve">
          <source>\R</source>
          <target state="translated">\R</target>
        </trans-unit>
        <trans-unit id="5201358bd3798962465786e1340b8d798eb0da66" translate="yes" xml:space="preserve">
          <source>\S is a negated \s; it represents any non-whitespace character</source>
          <target state="translated">\ S는 부정 된 \ s입니다. 공백이 아닌 문자를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2aaa2b30524de7ddb035b2ae4eda9d942f299a65" translate="yes" xml:space="preserve">
          <source>\S is a negated \s; it represents any non-whitespace character [^\s]</source>
          <target state="translated">\ S는 부정 된 \ s입니다. 공백이 아닌 문자를 나타냅니다 [^ \ s]</target>
        </trans-unit>
        <trans-unit id="133129d31f2a64079b4ceec9832484853084047e" translate="yes" xml:space="preserve">
          <source>\W is a negated \w; it represents any non-word character</source>
          <target state="translated">\ W는 부정 된 \ w입니다. 단어가 아닌 문자를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2f560e92ebecb72c198e33822a82e6e5d9a8c550" translate="yes" xml:space="preserve">
          <source>\W is a negated \w; it represents any non-word character [^\w]</source>
          <target state="translated">\ W는 부정 된 \ w입니다. 단어가 아닌 문자를 나타냅니다. [^ \ w]</target>
        </trans-unit>
        <trans-unit id="a3b8b79051e90f6274c034e3d6dfb1c15e8e9b54" translate="yes" xml:space="preserve">
          <source>\X</source>
          <target state="translated">\X</target>
        </trans-unit>
        <trans-unit id="b90aec5400f0b6cc3d07bb3781c085722680ca2f" translate="yes" xml:space="preserve">
          <source>\b{}, \b, \B{}, \B</source>
          <target state="translated">\b{}, \b, \B{}, \B</target>
        </trans-unit>
        <trans-unit id="ddc0294fd2b2565335d9fa242ca21ab1de388250" translate="yes" xml:space="preserve">
          <source>\d is a digit and represents</source>
          <target state="translated">\ d는 숫자이며</target>
        </trans-unit>
        <trans-unit id="97c6b30e873b86cfc47d930fe4d9ba2652595791" translate="yes" xml:space="preserve">
          <source>\d matches a digit, not just [0-9] but also digits from non-roman scripts</source>
          <target state="translated">\ d는 [0-9]뿐만 아니라 로마자가 아닌 스크립트의 숫자와도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="a974294d6db4a71ba17c7db82cb46379a2d8b35e" translate="yes" xml:space="preserve">
          <source>\p{Canonical_Combining_Class=Attached_Below_Left}</source>
          <target state="translated">\p{Canonical_Combining_Class=Attached_Below_Left}</target>
        </trans-unit>
        <trans-unit id="ca0c5f3718912735d80dbb2fe5a50f3451d21114" translate="yes" xml:space="preserve">
          <source>\p{Canonical_Combining_Class=CCC133}</source>
          <target state="translated">\p{Canonical_Combining_Class=CCC133}</target>
        </trans-unit>
        <trans-unit id="04b74fb9c8893b09c9c9dc5cc820de1c73ef5617" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=E_Base_GAZ}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=E_Base_GAZ}</target>
        </trans-unit>
        <trans-unit id="c5461ea791cf06bd76e726684a27c84bf1a40659" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=E_Base}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=E_Base}</target>
        </trans-unit>
        <trans-unit id="e1fb594f6150c08973d520212a7b0e828eec6496" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=E_Modifier}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=E_Modifier}</target>
        </trans-unit>
        <trans-unit id="9a4e59c593a8c32d517ccacb7afef90b8a49eb00" translate="yes" xml:space="preserve">
          <source>\p{Grapheme_Cluster_Break=Glue_After_Zwj}</source>
          <target state="translated">\p{Grapheme_Cluster_Break=Glue_After_Zwj}</target>
        </trans-unit>
        <trans-unit id="9c5218eb0fd37f891a68926a9137c004a26913f3" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=E_Base_GAZ}</source>
          <target state="translated">\p{Word_Break=E_Base_GAZ}</target>
        </trans-unit>
        <trans-unit id="365fb59486ae52add3f2c2ea1b300ad1d4534ceb" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=E_Base}</source>
          <target state="translated">\p{Word_Break=E_Base}</target>
        </trans-unit>
        <trans-unit id="648c6bda3c58f85f91e4e26c2fdd9f59c14ed747" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=E_Modifier}</source>
          <target state="translated">\p{Word_Break=E_Modifier}</target>
        </trans-unit>
        <trans-unit id="fbd384e90c4f2793bc44a27dcffada8abab3865b" translate="yes" xml:space="preserve">
          <source>\p{Word_Break=Glue_After_Zwj}</source>
          <target state="translated">\p{Word_Break=Glue_After_Zwj}</target>
        </trans-unit>
        <trans-unit id="7b4662d5c71b2e001cf94c995515942d7af18900" translate="yes" xml:space="preserve">
          <source>\s is a whitespace character and represents</source>
          <target state="translated">\ s는 공백 문자이며 다음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="34a39001363ef5f5ff61ce5c0f19ca73473f1c4c" translate="yes" xml:space="preserve">
          <source>\s matches a whitespace character, the set [\ \t\r\n\f] and others</source>
          <target state="translated">\ s는 공백 문자, 세트 [\ \ t \ r \ n \ f] 및 기타와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="5b2fc8d661205bb1347d335b86f497e98283eb99" translate="yes" xml:space="preserve">
          <source>\w is a word character (alphanumeric or _) and represents</source>
          <target state="translated">\ w는 단어 문자 (영숫자 또는 _)이며 다음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9dec4b43c57ccafde6f9f014b8fdbdc6ad78db44" translate="yes" xml:space="preserve">
          <source>\w matches a word character (alphanumeric or _), not just [0-9a-zA-Z_] but also digits and characters from non-roman scripts</source>
          <target state="translated">\ w는 [0-9a-zA-Z_]뿐만 아니라 로마자가 아닌 스크립트의 숫자 및 문자와 같은 단어 문자 (영숫자 또는 _)와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="3ae3339d3df42bd81574a61520ae7ec1b26f3f20" translate="yes" xml:space="preserve">
          <source>\xXX</source>
          <target state="translated">\xXX</target>
        </trans-unit>
        <trans-unit id="c2abe45415ca12f335bcc6549ab62cf0fbc8e7bf" translate="yes" xml:space="preserve">
          <source>\z, \Z</source>
          <target state="translated">\z, \Z</target>
        </trans-unit>
        <trans-unit id="4ff447b8ef42ca51fa6fb287bed8d40f49be58f1" translate="yes" xml:space="preserve">
          <source>]</source>
          <target state="translated">]</target>
        </trans-unit>
        <trans-unit id="5270612a32d634db637d354ac0c6c3ea3a691c4e" translate="yes" xml:space="preserve">
          <source>] ...]</source>
          <target state="translated">] ...]</target>
        </trans-unit>
        <trans-unit id="7ba1b0d7168057117598130b4cf4913ce7a6d1dd" translate="yes" xml:space="preserve">
          <source>] [</source>
          <target state="translated">] [</target>
        </trans-unit>
        <trans-unit id="e5f96af2d25deb494bcf280fcc22ad9c64b0b550" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;--&lt;/b&gt; ] [</source>
          <target state="translated">] [ &lt;b&gt;-&lt;/b&gt; ] [</target>
        </trans-unit>
        <trans-unit id="7837a05d80f9d4246db05db7739ac9da350692ee" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-A&lt;/b&gt; ] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-okay&lt;/b&gt; | &lt;b&gt;-nok&lt;/b&gt; | &lt;b&gt;-nokay&lt;/b&gt; ]</source>
          <target state="translated">] [ &lt;b&gt;-A&lt;/b&gt; ] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-좋아요&lt;/b&gt; | &lt;b&gt;녹&lt;/b&gt; | &lt;b&gt;-아니&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="5d5d86b624a368f240fc8ef717bfac5763b684cc" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fa5aee76641c8374c4a3bb363faca409d18cd95d" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-M&lt;/b&gt;[&lt;b&gt;-&lt;/b&gt;]</source>
          <target state="translated">] [ &lt;b&gt;-M&lt;/b&gt; [ &lt;b&gt;-&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe33edc3b5acacf101538a5199d8ef6004372824" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-b&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-b&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d91a8c76a043075cdd5f57b8dc8dd020742dc547" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-c&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-c&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4088d7468ddaef6b6676933981d369aadcae05a4" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-e&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-e&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d446bd20cd4f210e32dddf0953007e6f2d1b5053" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [&lt;i&gt;number/list&lt;/i&gt;] &lt;/b&gt;] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [ &lt;i&gt;번호 / 목록&lt;/i&gt; ]&lt;/b&gt; ] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="1c79575bb8bb9bc67989f60e2e072dc073000234" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-f&lt;/b&gt; ][ &lt;b&gt;-C [&lt;i&gt;number/list&lt;/i&gt;] &lt;/b&gt;][ &lt;b&gt;-S&lt;/b&gt; ][ &lt;b&gt;-x&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-f&lt;/b&gt; ] [ &lt;b&gt;-C [ &lt;i&gt;번호 / 목록&lt;/i&gt; ]&lt;/b&gt; ] [ &lt;b&gt;-S&lt;/b&gt; ] [ &lt;b&gt;-x&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="aca1a0eb03ef6c4968553072034eeee79bad305b" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-l&lt;/b&gt;[</source>
          <target state="translated">] [ &lt;b&gt;-l&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="f481bbb7a3ba5ecc6ab5d2ec8921b0caad222177" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-m&lt;/b&gt;[&lt;b&gt;-&lt;/b&gt;]</source>
          <target state="translated">] [ &lt;b&gt;-m&lt;/b&gt; [ &lt;b&gt;-&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="7be946169865caf0b4ad4e1c551c97f832b6089b" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-r&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-r&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3b371bc5f1731a182afaca0f4c21e6e42f754174" translate="yes" xml:space="preserve">
          <source>] [ &lt;b&gt;-s&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1cab1fd629b30db28801a88fb200dff0c7358250" translate="yes" xml:space="preserve">
          <source>] [ &lt;code&gt;,&lt;/code&gt; [</source>
          <target state="translated">] [ &lt;code&gt;,&lt;/code&gt; [</target>
        </trans-unit>
        <trans-unit id="60ce1ac427ca955aba7df5e26e666a0cbcdc2f9a" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--date&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--date&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="d95dd25605574b2c81782f8507419949dc89534a" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--errors&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--errors&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="fbbc117050d9385ff235a1dc760a3b8dfa0999cc" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixed&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixed&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="a9250074a5445bcf8eef004dc71ec67ecb9c809b" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixedbold&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixedbold&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="d7f9db810e921cd28d21cd440fca4722b8d4bf69" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixedbolditalic&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixedbolditalic&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="aa2fbdd948dba01a46110fa01725308ca2ef5a08" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--fixeditalic&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--fixeditalic&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="598381c0d6289fea9d7081a5559fb3a9517a9b91" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--lquote&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--lquote&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="6fe77b356c6468bc7d92a318ad6bc1146c2e9172" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--name&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--name&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="39d7370445bc798950f647a09f55cf0aa24d1af4" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--official&lt;/b&gt;] [&lt;b&gt;--quotes&lt;/b&gt;=</source>
          <target state="translated">] [ &lt;b&gt;--nourls&lt;/b&gt; ] [ &lt;b&gt;--official&lt;/b&gt; ] [ &lt;b&gt;--quotes&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="2faa1c1a5aa58be18579ec2559cfb2bf539a4403" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--official&lt;/b&gt;] [&lt;b&gt;--release&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--official&lt;/b&gt;] [&lt;b&gt;--release&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="3ec1ee1005b040af6eed1e1fb1b89be01226d9ce" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--nourls&lt;/b&gt;] [&lt;b&gt;--stderr&lt;/b&gt;] [&lt;b&gt;-w&lt;/b&gt;</source>
          <target state="translated">[ &lt;b&gt;--nourls&lt;/b&gt; ] &lt;b&gt;--stderr&lt;/b&gt; ] &lt;b&gt;-w&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8f71c7c975569c870cafbfefd4d0a731aa33905e" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--quotes&lt;/b&gt;=</source>
          <target state="translated">] [- &lt;b&gt;따옴표&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="fc864e3beb0db82da5fea274b5d83179e2d64279" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--release&lt;/b&gt;[=</source>
          <target state="translated">] [ &lt;b&gt;--release&lt;/b&gt; [=</target>
        </trans-unit>
        <trans-unit id="883348c030d981535fffeae3ce49b29221cb11aa" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--rquote&lt;/b&gt;=</source>
          <target state="translated">] [&lt;b&gt;--rquote&lt;/b&gt;=</target>
        </trans-unit>
        <trans-unit id="aa88f6f18842561845086150417082edefa39c4d" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">] [- &lt;b&gt;섹션&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="039bb11ec7e8c6197572dde03eb7f6b45f6c8aa6" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;--stderr&lt;/b&gt;] [&lt;b&gt;--utf8&lt;/b&gt;] [&lt;b&gt;--verbose&lt;/b&gt;] [</source>
          <target state="translated">[ &lt;b&gt;--stderr&lt;/b&gt; ] &lt;b&gt;--utf8&lt;/b&gt; ] [ &lt;b&gt;--verbose&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4b5a58dd7ad938ef0e7ae582da7c0d873b1c242" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-formatter&lt;/b&gt;</source>
          <target state="translated">] [- &lt;b&gt;포맷터&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3fea5aca88ab916f93ed287dace98a76f7c143b9" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-i&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-i&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="53f6bda63d23372157c365e9965c7ef45e33a277" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-output&lt;/b&gt;</source>
          <target state="translated">] [- &lt;b&gt;출력&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="18e0dd56af29c5174edbefe6f7085682dda6e116" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-pathlist&lt;/b&gt;</source>
          <target state="translated">] [- &lt;b&gt;경로 목록&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="22e124d430902d5c5221cf1c7cf4da237a26222d" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-q&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;-q&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1a2ca8f6fa2e2e507929f052428bcdef45fbbb15" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-utf8&lt;/b&gt;]</source>
          <target state="translated">] [&lt;b&gt;-utf8&lt;/b&gt;]</target>
        </trans-unit>
        <trans-unit id="0fde4e5d48f00a1e501ad8fe7e8926bde75175b1" translate="yes" xml:space="preserve">
          <source>] [&lt;b&gt;-verbose&lt;/b&gt;</source>
          <target state="translated">[ &lt;b&gt;-verbose&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e725a8e5ac100bccc71bd3fa100f49857c67db06" translate="yes" xml:space="preserve">
          <source>] ] &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">]] &lt;code&gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="840af7de6cad4319ff4be78eacfb9c5acf43cf39" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-0&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-0&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="9bd44ceffbf549e2ad098d1002b1d677b7d0aa0b" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-D&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-D&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="7bb86a5d6f5da412edc5fa8d69ccfe2ff581bca6" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-I&lt;/b&gt;</source>
          <target state="translated">]] [ &lt;b&gt;-I&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="598e07f95f029fa4f2ce352acaf2288c664b4b76" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt;[&lt;b&gt;t&lt;/b&gt;][:</source>
          <target state="translated">]] [ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt; [ &lt;b&gt;t&lt;/b&gt; ] [:</target>
        </trans-unit>
        <trans-unit id="9db4a34f3f65d57a976aae91bae6f7bcb0835f01" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-i&lt;/b&gt;[</source>
          <target state="translated">]] [ &lt;b&gt;-i&lt;/b&gt; [</target>
        </trans-unit>
        <trans-unit id="9d460c5f4d3c2477cabad0ac755529bb24fc2217" translate="yes" xml:space="preserve">
          <source>] ] [ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">]] [ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc8d2ac6bf0f644f728f5f8cfc8080a8f51efa0e" translate="yes" xml:space="preserve">
          <source>] ] [ [&lt;b&gt;-e&lt;/b&gt;|&lt;b&gt;-E&lt;/b&gt;]</source>
          <target state="translated">]] [[ &lt;b&gt;-e&lt;/b&gt; | &lt;b&gt;-이자형&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="111952a7692855ea3feda96c7d4ca8d1f14a3899" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-I&lt;/b&gt;</source>
          <target state="translated">] ][ &lt;b&gt;-I&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="977d9e2fca42430e113c7039a016f5298fe31763" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt;[&lt;b&gt;t&lt;/b&gt;][:</source>
          <target state="translated">] ][ &lt;b&gt;-cw&lt;/b&gt; ] [ &lt;b&gt;-d&lt;/b&gt;[&lt;b&gt;t&lt;/b&gt;][:</target>
        </trans-unit>
        <trans-unit id="ada6ec58cffb3a92b9142956524995d22b826e38" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-i&lt;/b&gt;[</source>
          <target state="translated">] ][ &lt;b&gt;-i&lt;/b&gt;[</target>
        </trans-unit>
        <trans-unit id="dde974d2efd29ca297f3ff52ec2f02615522e221" translate="yes" xml:space="preserve">
          <source>] ][ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">] ][ &lt;b&gt;-pna&lt;/b&gt; ] [ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="3586c07f7223d15b1d934a754560b0cb733fc531" translate="yes" xml:space="preserve">
          <source>] ][ [&lt;b&gt;-e&lt;/b&gt;|&lt;b&gt;-E&lt;/b&gt;]</source>
          <target state="translated">] ][ [&lt;b&gt;-e&lt;/b&gt;|&lt;b&gt;-E&lt;/b&gt;]</target>
        </trans-unit>
        <trans-unit id="7f27cd3f2fd7fab298d7d2375adf9f5a204cffd8" translate="yes" xml:space="preserve">
          <source>] and used to identify the disk. This allows drive letters for partitions on that disk to remain constant even if the SCSI Target ID of the disk gets changed.</source>
          <target state="translated">] 디스크를 식별하는 데 사용됩니다. 이렇게하면 디스크의 SCSI 대상 ID가 변경 되더라도 해당 디스크의 파티션에 대한 드라이브 문자가 일정하게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9a7dbaad3cf2aa9abf7389e31afb732d6e15865c" translate="yes" xml:space="preserve">
          <source>]. I.e., &quot;_1&quot; becomes with $_[1], and &quot;_-3&quot; is interpreted as $_[-3] (in which case @_ should have at least three elements in it). Note that $_[0] is the language handle, and is typically not named directly.</source>
          <target state="translated">]. 즉, &quot;_1&quot;은 $ _ [1]과 함께되며 &quot;_-3&quot;은 $ _ [-3]으로 해석됩니다 (이 경우 _에는 3 개 이상의 요소가 있어야 함). $ _ [0]은 언어 핸들이며 일반적으로 직접 이름이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3fad04c26433591d23451512c23642ef92daf2c6" translate="yes" xml:space="preserve">
          <source>]...</source>
          <target state="translated">]...</target>
        </trans-unit>
        <trans-unit id="37f7e3818501d135b7c04c631ac1c9622d4bd1a0" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-F&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-F&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6265232c57d3a89c1c1b7e83c56ae5a50b39da84" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-b&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-b&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5972a6cc6acfedeffe3743f6429e6e53415afa84" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-c&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-c&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dc7c307622a36e9386e2700a5865ad71c2573f98" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-e&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-e&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="402dd1d14c7ca6fe95fb093f057cc263522bb2b7" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-okay&lt;/b&gt; | &lt;b&gt;-nok&lt;/b&gt; | &lt;b&gt;-nokay&lt;/b&gt; ]</source>
          <target state="translated">] [ &lt;b&gt;-ok&lt;/b&gt; | &lt;b&gt;-좋아&lt;/b&gt; | &lt;b&gt;-nok&lt;/b&gt; | &lt;b&gt;-아니요&lt;/b&gt; ]</target>
        </trans-unit>
        <trans-unit id="e97ddbb3cf6b7554a56a88d9fe5a49d6a3173812" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-r&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-r&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e302e7485aa6fc53128e52dc02369fd5764e374f" translate="yes" xml:space="preserve">
          <source>][ &lt;b&gt;-s&lt;/b&gt;</source>
          <target state="translated">][ &lt;b&gt;-s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="36407ed3b603d0dfcd1bd6d50bc3fd8861d8d53f" translate="yes" xml:space="preserve">
          <source>][&lt;b&gt;,-p&lt;/b&gt;][&lt;b&gt;,-q&lt;/b&gt;][&lt;b&gt;,-l&lt;/b&gt;] [&lt;b&gt;,-s&lt;/b&gt;</source>
          <target state="translated">] [ &lt;b&gt;, -p&lt;/b&gt; ] [ &lt;b&gt;, -q&lt;/b&gt; ] [ &lt;b&gt;, -l&lt;/b&gt; ] [ &lt;b&gt;, -s&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a9030ca5cbcfd3f3b2ec230506e50fbd3cb2d7e0" translate="yes" xml:space="preserve">
          <source>][&lt;b&gt;,-x&lt;/b&gt;</source>
          <target state="translated">][&lt;b&gt;,-x&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8755a99ada779c83177a95e225a5063fe7499c98" translate="yes" xml:space="preserve">
          <source>]] [&lt;b&gt;--section&lt;/b&gt;=</source>
          <target state="translated">]] [- &lt;b&gt;섹션&lt;/b&gt; =</target>
        </trans-unit>
        <trans-unit id="469cef47dbe2b6e7c6ee58a32c9259e15b4c9fc0" translate="yes" xml:space="preserve">
          <source>^D</source>
          <target state="translated">^D</target>
        </trans-unit>
        <trans-unit id="51ed6f1bbf690dfe43966127d805b719c3488acf" translate="yes" xml:space="preserve">
          <source>^U</source>
          <target state="translated">^U</target>
        </trans-unit>
        <trans-unit id="53a0acfad59379b3e050338bf9f23cfc172ee787" translate="yes" xml:space="preserve">
          <source>_</source>
          <target state="translated">_</target>
        </trans-unit>
        <trans-unit id="f04d60942a25cf98c507bee3b1d809a16396e487" translate="yes" xml:space="preserve">
          <source>_ATTRIBUTES</source>
          <target state="translated">_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="52fd940d0f74d5bee59eaa7c4f0549763254e747" translate="yes" xml:space="preserve">
          <source>_AUTHORS_</source>
          <target state="translated">_AUTHORS_</target>
        </trans-unit>
        <trans-unit id="6b18f91a4d56bcb4195d01326c1707f269dca59a" translate="yes" xml:space="preserve">
          <source>_FFFE and 0x</source>
          <target state="translated">_FFFE와 0x</target>
        </trans-unit>
        <trans-unit id="9ab76b9bb5c2c00731a6298f38a4cee313b768d1" translate="yes" xml:space="preserve">
          <source>_FFFF), all non-shortest encodings, etc.</source>
          <target state="translated">_FFFF), 가장 짧지 않은 모든 인코딩 등</target>
        </trans-unit>
        <trans-unit id="335f29be57bcf11c73c32f1eb934a4263c82062e" translate="yes" xml:space="preserve">
          <source>_MANIFEST_</source>
          <target state="translated">_MANIFEST_</target>
        </trans-unit>
        <trans-unit id="95a35cef151f823296dfad3b7387390964178aff" translate="yes" xml:space="preserve">
          <source>_PDF_ files</source>
          <target state="translated">_PDF_ 파일</target>
        </trans-unit>
        <trans-unit id="a004e5d824ef48686abd54ae20b660d4a2c545c5" translate="yes" xml:space="preserve">
          <source>_Really_ Symbolic Calculator</source>
          <target state="translated">_Really_ 기호 계산기</target>
        </trans-unit>
        <trans-unit id="88d624ad41e13319c7ed43031826342bbebe1731" translate="yes" xml:space="preserve">
          <source>__ASSERT_</source>
          <target state="translated">__ASSERT_</target>
        </trans-unit>
        <trans-unit id="544b04467d0a8ee1a845e4b919a57d9da6144a5e" translate="yes" xml:space="preserve">
          <source>__DATA__</source>
          <target state="translated">__DATA__</target>
        </trans-unit>
        <trans-unit id="6530b20c720e139dbf91c2c08f8419cf0bfd22f4" translate="yes" xml:space="preserve">
          <source>__DATA__ is ignored</source>
          <target state="translated">__DATA__는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c7919376414e8b09a0411c19eee34a71902436cc" translate="yes" xml:space="preserve">
          <source>__DATA__, __END__, and the FOOBAR::DATA filehandle.</source>
          <target state="translated">__DATA__, __END__ 및 FOOBAR :: DATA 파일 처리</target>
        </trans-unit>
        <trans-unit id="ce8a6e08bc25f2ef37956e900401265cf56138c8" translate="yes" xml:space="preserve">
          <source>__END__</source>
          <target state="translated">__END__</target>
        </trans-unit>
        <trans-unit id="9d5d8995523b8b8951428baa81ea663ff0bd2c77" translate="yes" xml:space="preserve">
          <source>__FILE__</source>
          <target state="translated">__FILE__</target>
        </trans-unit>
        <trans-unit id="a51b95694c81c92580bff6f580f8e200ecf86661" translate="yes" xml:space="preserve">
          <source>__LINE__</source>
          <target state="translated">__LINE__</target>
        </trans-unit>
        <trans-unit id="04bd40a79312fa43a624aef25ac864c0770871a3" translate="yes" xml:space="preserve">
          <source>__PACKAGE__</source>
          <target state="translated">__PACKAGE__</target>
        </trans-unit>
        <trans-unit id="b0563c4fda49219aeb921efb5a63d4cff221a59b" translate="yes" xml:space="preserve">
          <source>__SUB__</source>
          <target state="translated">__SUB__</target>
        </trans-unit>
        <trans-unit id="aba4564d3c1fb21ecf21279947a269bfd72d5448" translate="yes" xml:space="preserve">
          <source>__int64</source>
          <target state="translated">__int64</target>
        </trans-unit>
        <trans-unit id="223e7f8a6ca9d91b686c4ef2e51d268505bf6e0b" translate="yes" xml:space="preserve">
          <source>_add_range_to_invlist</source>
          <target state="translated">_add_range_to_invlist</target>
        </trans-unit>
        <trans-unit id="3485357323ef68368533ee148f92fcc38f19f972" translate="yes" xml:space="preserve">
          <source>_bgcd()</source>
          <target state="translated">_bgcd()</target>
        </trans-unit>
        <trans-unit id="072894c76e14abe6a46e264590c1051e782edb1c" translate="yes" xml:space="preserve">
          <source>_byte_dump_string</source>
          <target state="translated">_byte_dump_string</target>
        </trans-unit>
        <trans-unit id="a2388f93206a2dcead18a704edcf81d7151a6724" translate="yes" xml:space="preserve">
          <source>_confess</source>
          <target state="translated">_confess</target>
        </trans-unit>
        <trans-unit id="ee9de11ce407bf95e8669ecf25d200f9d34fa345" translate="yes" xml:space="preserve">
          <source>_construct</source>
          <target state="translated">_construct</target>
        </trans-unit>
        <trans-unit id="3cde53170729285b62e4195015718cc3fccd9d47" translate="yes" xml:space="preserve">
          <source>_control87(3)</source>
          <target state="translated">_control87(3)</target>
        </trans-unit>
        <trans-unit id="06b08aafbbfe26867ed90e8ef55b7fb3f5ac3867" translate="yes" xml:space="preserve">
          <source>_croak</source>
          <target state="translated">_croak</target>
        </trans-unit>
        <trans-unit id="ff4fbe22558273c6659ff3e79e3859bcae2f877b" translate="yes" xml:space="preserve">
          <source>_digit($obj, 0)</source>
          <target state="translated">_digit ($ obj, 0)</target>
        </trans-unit>
        <trans-unit id="25fb2a539a78bedeb7219e53f2b8469577c24022" translate="yes" xml:space="preserve">
          <source>_digit(123, -1)</source>
          <target state="translated">_digit (123, -1)</target>
        </trans-unit>
        <trans-unit id="0a6052f8001537289554f4431a6114626d07c644" translate="yes" xml:space="preserve">
          <source>_fixin_replace_shebang (override)</source>
          <target state="translated">_fixin_replace_shebang (재정의)</target>
        </trans-unit>
        <trans-unit id="548e633d961fa1f4f867b7daf36d16a973b52b07" translate="yes" xml:space="preserve">
          <source>_force_out_malformed_utf8_message</source>
          <target state="translated">_force_out_malformed_utf8_message</target>
        </trans-unit>
        <trans-unit id="4225f03f506817627d7f6837ee807b1f731caa68" translate="yes" xml:space="preserve">
          <source>_get_inputmap_hash</source>
          <target state="translated">_get_inputmap_hash</target>
        </trans-unit>
        <trans-unit id="4b9709f63286b025c425048cdc549fc4ecd449c4" translate="yes" xml:space="preserve">
          <source>_get_outputmap_hash</source>
          <target state="translated">_get_outputmap_hash</target>
        </trans-unit>
        <trans-unit id="142aa489b14e14705ae4dc6f3e94075d0e01cc08" translate="yes" xml:space="preserve">
          <source>_get_prototype_hash</source>
          <target state="translated">_get_prototype_hash</target>
        </trans-unit>
        <trans-unit id="6f209d79a87b326fa3b8f200de1c23f5f1298065" translate="yes" xml:space="preserve">
          <source>_get_typemap_hash</source>
          <target state="translated">_get_typemap_hash</target>
        </trans-unit>
        <trans-unit id="14266b88d6ca9a13dbc0a224bad46acbb3e0cc36" translate="yes" xml:space="preserve">
          <source>_initialize</source>
          <target state="translated">_initialize</target>
        </trans-unit>
        <trans-unit id="9c17b559878e30ac3b8cd897c88deb38fbb25010" translate="yes" xml:space="preserve">
          <source>_inverse_folds</source>
          <target state="translated">_inverse_folds</target>
        </trans-unit>
        <trans-unit id="61168eb93addcf792bf0a9bd1835b4ae28cafd05" translate="yes" xml:space="preserve">
          <source>_invlistEQ</source>
          <target state="translated">_invlistEQ</target>
        </trans-unit>
        <trans-unit id="4d41403695210bb0f589029e2f21c26f6d230006" translate="yes" xml:space="preserve">
          <source>_invlist_array_init</source>
          <target state="translated">_invlist_array_init</target>
        </trans-unit>
        <trans-unit id="5b048a77155e29ed03b526af63683c86c9c449d0" translate="yes" xml:space="preserve">
          <source>_invlist_contains_cp</source>
          <target state="translated">_invlist_contains_cp</target>
        </trans-unit>
        <trans-unit id="7addad0010fd0d11982f67209a4819ae0b4a041c" translate="yes" xml:space="preserve">
          <source>_invlist_dump</source>
          <target state="translated">_invlist_dump</target>
        </trans-unit>
        <trans-unit id="59a61c344b8bd28a5af275bd604ae0d0203577de" translate="yes" xml:space="preserve">
          <source>_invlist_intersection</source>
          <target state="translated">_invlist_intersection</target>
        </trans-unit>
        <trans-unit id="9c7c89b0d433f3ebc2fe1e90983b6cd3e60a4f94" translate="yes" xml:space="preserve">
          <source>_invlist_intersection_maybe_complement_2nd</source>
          <target state="translated">_invlist_intersection_maybe_complement_2nd</target>
        </trans-unit>
        <trans-unit id="7c1efd5308257519009379431c3cdd7935c2b2d1" translate="yes" xml:space="preserve">
          <source>_invlist_invert</source>
          <target state="translated">_invlist_invert</target>
        </trans-unit>
        <trans-unit id="76a133285063be7446bb5d93cc1038e4d894ea49" translate="yes" xml:space="preserve">
          <source>_invlist_len</source>
          <target state="translated">_invlist_len</target>
        </trans-unit>
        <trans-unit id="7a9878e82534b3b9acf27a0c739db0c36c4497e8" translate="yes" xml:space="preserve">
          <source>_invlist_search</source>
          <target state="translated">_invlist_search</target>
        </trans-unit>
        <trans-unit id="cc3b105a3723a31597d930ed040060a1af78fca0" translate="yes" xml:space="preserve">
          <source>_invlist_subtract</source>
          <target state="translated">_invlist_subtract</target>
        </trans-unit>
        <trans-unit id="c270feb0a047e9968c9377f35b978cc423f81ffa" translate="yes" xml:space="preserve">
          <source>_invlist_union</source>
          <target state="translated">_invlist_union</target>
        </trans-unit>
        <trans-unit id="e7ff1b53cb3870b1cc0161497f82b6821260ee5a" translate="yes" xml:space="preserve">
          <source>_invlist_union_maybe_complement_2nd</source>
          <target state="translated">_invlist_union_maybe_complement_2nd</target>
        </trans-unit>
        <trans-unit id="b4c9e615fdde46de957d9ff98cbf610e5578f3b0" translate="yes" xml:space="preserve">
          <source>_is_cur_LC_category_utf8</source>
          <target state="translated">_is_cur_LC_category_utf8</target>
        </trans-unit>
        <trans-unit id="41a84dbd096715cf9933467fb604cac6d756fbfe" translate="yes" xml:space="preserve">
          <source>_is_in_locale_category</source>
          <target state="translated">_is_in_locale_category</target>
        </trans-unit>
        <trans-unit id="ffcd62fdc9e63fe52ccc0f0d896f4e0af56d1b09" translate="yes" xml:space="preserve">
          <source>_is_uni_FOO</source>
          <target state="translated">_is_uni_FOO</target>
        </trans-unit>
        <trans-unit id="3483ba80345062095d0d3b0f8ea883c26308455b" translate="yes" xml:space="preserve">
          <source>_is_uni_perl_idcont</source>
          <target state="translated">_is_uni_perl_idcont</target>
        </trans-unit>
        <trans-unit id="07fde7fb22af3c3e972dce7ae059b4a9e730ddee" translate="yes" xml:space="preserve">
          <source>_is_uni_perl_idstart</source>
          <target state="translated">_is_uni_perl_idstart</target>
        </trans-unit>
        <trans-unit id="3db6bf1a4bdbd3280908a48b81e965750416f411" translate="yes" xml:space="preserve">
          <source>_is_utf8_FOO</source>
          <target state="translated">_is_utf8_FOO</target>
        </trans-unit>
        <trans-unit id="1f588bb7839f5f8a2c8c558b80651270e3ac33ae" translate="yes" xml:space="preserve">
          <source>_is_utf8_perl_idcont</source>
          <target state="translated">_is_utf8_perl_idcont</target>
        </trans-unit>
        <trans-unit id="15a3a37970b2f869a300918e3304d3b492218172" translate="yes" xml:space="preserve">
          <source>_is_utf8_perl_idstart</source>
          <target state="translated">_is_utf8_perl_idstart</target>
        </trans-unit>
        <trans-unit id="208771dd58f43dcb9bd331fcdce501947f60ac0a" translate="yes" xml:space="preserve">
          <source>_mem_collxfrm</source>
          <target state="translated">_mem_collxfrm</target>
        </trans-unit>
        <trans-unit id="e7ed2863e6bcebf49eb9f9c0e6e679e8bf064675" translate="yes" xml:space="preserve">
          <source>_new_invlist</source>
          <target state="translated">_new_invlist</target>
        </trans-unit>
        <trans-unit id="2848fd26d7422f459429013d3415cfd60ca34e95" translate="yes" xml:space="preserve">
          <source>_new_invlist_C_array</source>
          <target state="translated">_new_invlist_C_array</target>
        </trans-unit>
        <trans-unit id="a23c4cef0829fb103be12bd8e5048bf513e4694f" translate="yes" xml:space="preserve">
          <source>_perl.exe_</source>
          <target state="translated">_perl.exe_</target>
        </trans-unit>
        <trans-unit id="2f72a716af3238025dd4229dd58b83bc8629ac38" translate="yes" xml:space="preserve">
          <source>_perl_.exe_</source>
          <target state="translated">_perl_.exe_</target>
        </trans-unit>
        <trans-unit id="5991d513b9abe99f11e9b16c8256e4e9e06ca2ba" translate="yes" xml:space="preserve">
          <source>_perl__.exe_</source>
          <target state="translated">_perl__.exe_</target>
        </trans-unit>
        <trans-unit id="2db94965490eada37ae5ff14a1e0846dbe050e7c" translate="yes" xml:space="preserve">
          <source>_perl___.exe_</source>
          <target state="translated">_perl___.exe_</target>
        </trans-unit>
        <trans-unit id="1fdbb463b8aba017e1e17708622b828c0a70d691" translate="yes" xml:space="preserve">
          <source>_prove</source>
          <target state="translated">_prove</target>
        </trans-unit>
        <trans-unit id="998aae22ec5a43bf133ffb2d411823f4c8a72a20" translate="yes" xml:space="preserve">
          <source>_proverc</source>
          <target state="translated">_proverc</target>
        </trans-unit>
        <trans-unit id="be410059a97a4524ce3b914f3e9c9e407663c029" translate="yes" xml:space="preserve">
          <source>_read</source>
          <target state="translated">_read</target>
        </trans-unit>
        <trans-unit id="8f0299e873b4b0039d8f78099b523dd6530d86a4" translate="yes" xml:space="preserve">
          <source>_setup_canned_invlist</source>
          <target state="translated">_setup_canned_invlist</target>
        </trans-unit>
        <trans-unit id="8f67b7c018384a0d10f9d2b4577d0c0658bc078a" translate="yes" xml:space="preserve">
          <source>_stdlib.h_ functions</source>
          <target state="translated">_stdlib.h_ 함수</target>
        </trans-unit>
        <trans-unit id="d4086139b290958ed25f5bd7a1ff3d730dcf31a9" translate="yes" xml:space="preserve">
          <source>_sub()</source>
          <target state="translated">_sub()</target>
        </trans-unit>
        <trans-unit id="18f9ec6695a824c08889e84b80ae1126089c1182" translate="yes" xml:space="preserve">
          <source>_to_fold_latin1</source>
          <target state="translated">_to_fold_latin1</target>
        </trans-unit>
        <trans-unit id="efa0f0e25d339ee27b6fb859ff82e78df94411bf" translate="yes" xml:space="preserve">
          <source>_to_uni_fold_flags</source>
          <target state="translated">_to_uni_fold_flags</target>
        </trans-unit>
        <trans-unit id="d47683994658c2a56c63f3759350ed4931a6c24d" translate="yes" xml:space="preserve">
          <source>_to_upper_title_latin1</source>
          <target state="translated">_to_upper_title_latin1</target>
        </trans-unit>
        <trans-unit id="b38a8cb81180a1acb12bdbe8f5b63f61777d488e" translate="yes" xml:space="preserve">
          <source>_to_utf8_fold_flags</source>
          <target state="translated">_to_utf8_fold_flags</target>
        </trans-unit>
        <trans-unit id="1cb38e9069121e1e9cc36d9fe7809a20a8770216" translate="yes" xml:space="preserve">
          <source>_to_utf8_lower_flags</source>
          <target state="translated">_to_utf8_lower_flags</target>
        </trans-unit>
        <trans-unit id="c02bc0bb4f2b754ec8eca62baece7c6927f290f1" translate="yes" xml:space="preserve">
          <source>_to_utf8_title_flags</source>
          <target state="translated">_to_utf8_title_flags</target>
        </trans-unit>
        <trans-unit id="abb727239765a037361726c56446984dc40af512" translate="yes" xml:space="preserve">
          <source>_to_utf8_upper_flags</source>
          <target state="translated">_to_utf8_upper_flags</target>
        </trans-unit>
        <trans-unit id="ab1aafd933e3c1f34b78838ca464fabb2cd4e4ef" translate="yes" xml:space="preserve">
          <source>_utf8_off</source>
          <target state="translated">_utf8_off</target>
        </trans-unit>
        <trans-unit id="17db770cf15f37a3c9f4bbc8584367bfd333dd75" translate="yes" xml:space="preserve">
          <source>_utf8_on</source>
          <target state="translated">_utf8_on</target>
        </trans-unit>
        <trans-unit id="47408fa4fe440a35df247d578ae3a671d0fa67b2" translate="yes" xml:space="preserve">
          <source>_utf8n_to_uvchr_msgs_helper</source>
          <target state="translated">_utf8n_to_uvchr_msgs_helper</target>
        </trans-unit>
        <trans-unit id="51f99431c242bd9dacfe7ef6b055814575d21952" translate="yes" xml:space="preserve">
          <source>_validate($schema_name, $data, $file, $doc)</source>
          <target state="translated">_validate($schema_name, $data, $file, $doc)</target>
        </trans-unit>
        <trans-unit id="916c6b186b784c8ca7ede55c31b4482ae8398884" translate="yes" xml:space="preserve">
          <source>_warn_problematic_locale</source>
          <target state="translated">_warn_problematic_locale</target>
        </trans-unit>
        <trans-unit id="0781d922d37de8686b87d408c185e2fe467ffa20" translate="yes" xml:space="preserve">
          <source>_xsbuild_replace_macro (override)</source>
          <target state="translated">_xsbuild_replace_macro (재정의)</target>
        </trans-unit>
        <trans-unit id="5d07e5d414042c3ad528106a2bd42712b9aab48d" translate="yes" xml:space="preserve">
          <source>_xsbuild_value (override)</source>
          <target state="translated">_xsbuild_value (재정의)</target>
        </trans-unit>
        <trans-unit id="349a2cf958187a837c3aed60aca5ce84a2ba8f78" translate="yes" xml:space="preserve">
          <source>`Memoizing' a function makes it faster by trading space for time. It does this by caching the return values of the function in a table. If you call the function again with the same arguments, &lt;code&gt;memoize&lt;/code&gt; jumps in and gives you the value out of the table, instead of letting the function compute the value all over again.</source>
          <target state="translated">`Memoizing '기능은 시간을두고 공간을 교환함으로써 더 빠르게 만듭니다. 테이블에서 함수의 리턴 값을 캐싱하여이를 수행합니다. 동일한 인수로 함수를 다시 호출하면 &lt;code&gt;memoize&lt;/code&gt; 가 값을 다시 계산하도록하는 대신 점프하여 테이블에서 값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="97a327decd1b5a73620456539cf89766d09acb8c" translate="yes" xml:space="preserve">
          <source>`` and pipe-open do not work under DOS.</source>
          <target state="translated">``및 파이프 열기는 DOS에서 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="049537f8ff01227a5296e1d4f8184a98a3f6ecb6" translate="yes" xml:space="preserve">
          <source>a &lt;b&gt;-u&lt;/b&gt; flag to make it unbuffered. But very few commands are designed to operate over pipes, so this seldom works unless you yourself wrote the program on the other end of the double-ended pipe.</source>
          <target state="translated">버퍼링하지 않도록 하는 &lt;b&gt;-u&lt;/b&gt; 플래그. 그러나 파이프를 통해 작동하도록 설계된 명령은 거의 없으므로 이중 종단 파이프의 다른 쪽 끝에서 프로그램을 작성하지 않은 경우에는 거의 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="29515f80a90ad15c4d7bd700ddff82308e27f071" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;DESTROY&lt;/code&gt; method), which the call to &lt;code&gt;EVERY::LAST::Destroy&lt;/code&gt; in the inherited destructor then correctly picks up.</source>
          <target state="translated">상속 된 소멸자에서 &lt;code&gt;EVERY::LAST::Destroy&lt;/code&gt; 에 대한 호출이 올바르게 선택 되는 &lt;code&gt;DESTROY&lt;/code&gt; 메소드) .</target>
        </trans-unit>
        <trans-unit id="5b4991d0075936f9dd187e536d33c94e2aa27450" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;new&lt;/code&gt; method), which the call to &lt;code&gt;EVERY::LAST::Init&lt;/code&gt; in the inherited constructor then correctly picks up.</source>
          <target state="translated">&lt;code&gt;EVERY::LAST::Init&lt;/code&gt; 호출 하는 &lt;code&gt;new&lt;/code&gt; 메소드) 상속 생성자는 다음 올바르게 선택합니다.</target>
        </trans-unit>
        <trans-unit id="ee1caf9ff7bb24e52f42a46d52f7a56dc4e9fcff" translate="yes" xml:space="preserve">
          <source>a CPAN::Distroprefs::Result object</source>
          <target state="translated">CPAN :: Distroprefs :: Result 객체</target>
        </trans-unit>
        <trans-unit id="c969393479d626630230a3b33439fab76b06b48e" translate="yes" xml:space="preserve">
          <source>a PREFIX was given as an argument to WriteMakefile() it will set it to the $new_prefix + $default. This is for systems whose file layouts don't neatly fit into our ideas of prefixes.</source>
          <target state="translated">PREFIX는 WriteMakefile ()에 대한 인수로 제공되었으며 $ new_prefix + $ default로 설정됩니다. 이것은 파일 레이아웃이 우리의 접두사 아이디어에 잘 맞지 않는 시스템을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="1e7f6022e597b2747e658cd9274fe1392855ea63" translate="yes" xml:space="preserve">
          <source>a Pod block with a &quot;=cut&quot; command. In that case, the Pod processor must halt parsing of the input file, and must by default emit a warning.</source>
          <target state="translated">&quot;= cut&quot;명령이있는 포드 블록 이 경우 포드 프로세서는 입력 파일의 구문 분석을 중지해야하며 기본적으로 경고를 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="69251e438587f3e3f24fc55c7dfd1b0bd8d07f8f" translate="yes" xml:space="preserve">
          <source>a [line] command</source>
          <target state="translated">[줄] 명령</target>
        </trans-unit>
        <trans-unit id="a295228fd9bd780a4f55d14f8063050501961916" translate="yes" xml:space="preserve">
          <source>a blank (read: empty) line, with the single exception of the file start, which is also starting a paragraph. That means that especially a command (e.g. &lt;code&gt;=head1&lt;/code&gt; )</source>
          <target state="translated">단락을 시작하는 파일 시작을 제외하고 공백 (읽기 : 비어 있음) 행 즉, 특히 명령 (예 : &lt;code&gt;=head1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="75c1385dc7bf5ab285efa7812871a616728a97fa" translate="yes" xml:space="preserve">
          <source>a blank line.</source>
          <target state="translated">빈 줄.</target>
        </trans-unit>
        <trans-unit id="23d9744ba98ffa764233c38e2d3604f3b2d4a76e" translate="yes" xml:space="preserve">
          <source>a bytestream and should not be treated as such. This makes using I/O mechanisms with internal buffering like stdio (i.e. print() and friends) especially cumbersome. Use syswrite(), or better send(), like in the example below.</source>
          <target state="translated">바이트 스트림이므로 취급해서는 안됩니다. stdio (예 : print () 및 friends)와 같은 내부 버퍼링을 사용하여 I / O 메커니즘을 사용하는 것은 특히 번거 롭습니다. 아래 예와 같이 syswrite () 또는 더 나은 send ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="633f7c37ae295810943767d3bf2df992ec0feaea" translate="yes" xml:space="preserve">
          <source>a call to &lt;code&gt;SvPV()&lt;/code&gt; or one of its variants, in case any call to string overloading updates the internal UTF-8 encoding flag.</source>
          <target state="translated">호출 &lt;code&gt;SvPV()&lt;/code&gt; 또는 그의 변이체의 하나의 스트링에 과부하 업데이트 경우 모든 통화 내부 UTF-8 인코딩 플래그.</target>
        </trans-unit>
        <trans-unit id="668d0f6bac4ee6dedb25c0659f2e34dbcb94a737" translate="yes" xml:space="preserve">
          <source>a call to &lt;code&gt;SvPV()&lt;/code&gt; or one of its variants, in case any call to string overloading updates the internal flag.</source>
          <target state="translated">를 호출 &lt;code&gt;SvPV()&lt;/code&gt; 또는 그 변종 중 하나, 문자열 오버로드 업데이트에 경우 모든 통화 내부 플래그.</target>
        </trans-unit>
        <trans-unit id="3db5176b71e2550579d05b0d599c0802a2e9855b" translate="yes" xml:space="preserve">
          <source>a call to SvPV() or one of its variants, in case any call to string overloading updates the internal flag.</source>
          <target state="translated">문자열 오버로드를 호출하면 내부 플래그가 업데이트되는 경우 SvPV () 또는 해당 변형 중 하나를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="9b84a4768dd97741cdd9f6cdcb5a70ed0ef1fc98" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;a href=&quot;#eval-EXPR&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#require-VERSION&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">호출자 (즉, 우리가 서브 루틴에 있거나 &lt;a href=&quot;#eval-EXPR&quot;&gt; &lt;code&gt;eval&lt;/code&gt; 에&lt;/a&gt; 있거나 &lt;a href=&quot;#require-VERSION&quot;&gt; &lt;code&gt;require&lt;/code&gt; &lt;/a&gt; ) 및 그렇지 않으면 정의되지 않은 값. 호출자는 XS 서브를 반환하지 않으며 건너 뜁니다. 호출자의 반환 값에 XS 하위 대신 다음 순수 perl 하위가 나타납니다. 목록 컨텍스트에서 호출자는 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8e150fc9a00a9d6aba574abf6b3ddaf310665b85" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">호출자 (즉, 우리가 서브 루틴이나 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 있거나 &lt;code&gt;&lt;a href=&quot;require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; )와 그렇지 않으면 정의되지 않은 값. 호출자는 XS 서브를 반환하지 않으며 건너 뜁니다. 발신자의 반환 값에 XS 하위 대신 다음 순수 펄 하위가 나타납니다. 목록 컨텍스트에서 호출자는</target>
        </trans-unit>
        <trans-unit id="27f90951a846aad1e51cfa906ae9aae15befd397" translate="yes" xml:space="preserve">
          <source>a caller (that is, if we're in a subroutine or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;) and the undefined value otherwise. caller never returns XS subs and they are skipped. The next pure perl sub will appear instead of the XS sub in caller's return values. In list context, caller returns</source>
          <target state="translated">호출자 (즉, 우리가 서브 루틴이나 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 있거나 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; )와 그렇지 않으면 정의되지 않은 값. 호출자는 XS 서브를 반환하지 않으며 건너 뜁니다. 발신자의 반환 값에 XS 하위 대신 다음 순수 펄 하위가 나타납니다. 목록 컨텍스트에서 호출자는</target>
        </trans-unit>
        <trans-unit id="98a69b7d014f4c34538d96daa513e20ae3249ccf" translate="yes" xml:space="preserve">
          <source>a character</source>
          <target state="translated">캐릭터</target>
        </trans-unit>
        <trans-unit id="c48528b336ba70a5bb432c05eb6545246b618801" translate="yes" xml:space="preserve">
          <source>a code reference</source>
          <target state="translated">코드 참조</target>
        </trans-unit>
        <trans-unit id="59e837ecdd5668c0a5d48bd37effd32c49d49f59" translate="yes" xml:space="preserve">
          <source>a descriptive term for the licenses ... not authoritative, but must be consistent with licensure statements in the READMEs, documentation, etc.</source>
          <target state="translated">라이선스에 대한 설명 용어 ... 권한이 없지만 README, 문서 등의 라이선스 설명과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d30a63fe6161c410a2de8ef976b935b79ebde5a" translate="yes" xml:space="preserve">
          <source>a directory which the extensions Perl library module passes to the DynaLoader when asking it to map the shareable image, or</source>
          <target state="translated">확장 가능 Perl 라이브러리 모듈이 공유 가능한 이미지를 맵핑하도록 요청할 때 DynaLoader에 전달하는 디렉토리 또는</target>
        </trans-unit>
        <trans-unit id="d53e127062317983028dd489e9754291d72caa45" translate="yes" xml:space="preserve">
          <source>a dummy implementation.</source>
          <target state="translated">더미 구현.</target>
        </trans-unit>
        <trans-unit id="607bd3e7b2e3b5390e3bf8ef6a8b9efe50dc7299" translate="yes" xml:space="preserve">
          <source>a failure of the OS/2 API call, having some workarounds coded).</source>
          <target state="translated">일부 해결 방법이 코딩 된 OS / 2 API 호출 실패).</target>
        </trans-unit>
        <trans-unit id="cb93f298be12176fe6984b77a4ea4c365c0c654e" translate="yes" xml:space="preserve">
          <source>a few years back there were two attempts to upgrade/replace Test::Builder. Confusingly these were called Test::Builder2 and Test::Builder1.5, in that order. Many people put conditionals in their code to check the Test::Builder version number and adapt their code accordingly.</source>
          <target state="translated">몇 년 전 Test :: Builder를 업그레이드 / 교체하려는 두 번의 시도가있었습니다. 혼란스럽게도이 순서대로 Test :: Builder2 및 Test :: Builder1.5라고했습니다. 많은 사람들이 코드에 조건문을 넣어 Test :: Builder 버전 번호를 확인하고 그에 따라 코드를 조정합니다.</target>
        </trans-unit>
        <trans-unit id="2884f36ae265e800fdf012514440ba115d34bb1a" translate="yes" xml:space="preserve">
          <source>a file named</source>
          <target state="translated">명명 된 파일</target>
        </trans-unit>
        <trans-unit id="f2f9eb42b04a6bb70eb81a0ae0a802e7347d6301" translate="yes" xml:space="preserve">
          <source>a filehandle, even though it looks like one). DBNAME is the name of the database (without the</source>
          <target state="translated">파일 핸들처럼 보이지만). DBNAME은 데이터베이스 이름입니다 (</target>
        </trans-unit>
        <trans-unit id="d89a37a0200dc0b35d04809afbc53cbf5901983a" translate="yes" xml:space="preserve">
          <source>a function, and precedence doesn't matter. Otherwise it's a list operator or unary operator, and precedence does matter. Whitespace between the function and left parenthesis doesn't count, so sometimes you need to be careful:</source>
          <target state="translated">기능과 우선 순위는 중요하지 않습니다. 그렇지 않으면 목록 연산자 또는 단항 연산자이며 우선 순위가 중요합니다. 함수와 왼쪽 괄호 사이의 공백은 포함되지 않으므로 때때로주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="42d8657e92871e593008c5368345a46e3ebc4eac" translate="yes" xml:space="preserve">
          <source>a hard reference. If you use it as a reference, it'll be treated as a symbolic reference. That is, the value of the scalar is taken to be the</source>
          <target state="translated">어려운 참조. 참조로 사용하면 기호 참조로 취급됩니다. 즉, 스칼라의 값은</target>
        </trans-unit>
        <trans-unit id="b47a8f555bfc4607fa743152b516f486d86995c9" translate="yes" xml:space="preserve">
          <source>a leading &quot;:&quot;. Empty portions are returned as empty string ''.</source>
          <target state="translated">선행 &quot;:&quot;. 빈 부분은 빈 문자열 ''로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c3ead9f1232af179bcf0c56760a744aa581fa638" translate="yes" xml:space="preserve">
          <source>a long time ago, and some people got used to our funny spelling, and so just as with &lt;code&gt;HTTP_REFERER&lt;/code&gt; &amp;rsquo;s own missing letter, our weird spelling has stuck around.</source>
          <target state="translated">오래 전에, 어떤 사람들은 우리의 재미있는 철자법에 익숙해졌고, &lt;code&gt;HTTP_REFERER&lt;/code&gt; 의 자신의 잃어버린 글자 와 마찬가지로 , 우리의 이상한 철자법이 고착되었습니다.</target>
        </trans-unit>
        <trans-unit id="5da49093d4d1915dd32c5059495cc0e80efde1e2" translate="yes" xml:space="preserve">
          <source>a long time ago, and some people got used to our funny spelling, and so just as with &lt;code&gt;HTTP_REFERER&lt;/code&gt;&amp;rsquo;s own missing letter, our weird spelling has stuck around.</source>
          <target state="translated">오래 전에 어떤 사람들은 우리의 재미있는 철자법에 익숙해 져서 &lt;code&gt;HTTP_REFERER&lt;/code&gt; 의 누락 된 문자 와 마찬가지로 우리의 이상한 철자가 주변에 갇혀있었습니다.</target>
        </trans-unit>
        <trans-unit id="08b455de06980a977e0a8cd01a1a8293b63bc105" translate="yes" xml:space="preserve">
          <source>a lookahead/lookbehind/evaluate zero-width assertion;</source>
          <target state="translated">미리보기 / 미리보기 / 비폭이 0 인 어설 션 평가;</target>
        </trans-unit>
        <trans-unit id="c5ab2e702917e9fab9c642c3876da1a3b4538ce1" translate="yes" xml:space="preserve">
          <source>a mergesort, which happens to be stable, will be employed anyway. Note that</source>
          <target state="translated">어쨌든 안정적인 병합 정렬이 사용됩니다. 참고</target>
        </trans-unit>
        <trans-unit id="1cfc30a180e8efa1bbbeac79796a51f3960fd2a5" translate="yes" xml:space="preserve">
          <source>a name in angle brackets or single quotes</source>
          <target state="translated">꺾쇠 괄호 또는 작은 따옴표로 묶인 이름</target>
        </trans-unit>
        <trans-unit id="e417585863ae108f567f75bc88add160fc8852f4" translate="yes" xml:space="preserve">
          <source>a negated opname or optag</source>
          <target state="translated">부정 된 opname 또는 optag</target>
        </trans-unit>
        <trans-unit id="cbdcbf765828e27e0482eafa78b85765940378b3" translate="yes" xml:space="preserve">
          <source>a new namespace</source>
          <target state="translated">새로운 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="02537a2b811222631d1996c38165a9255a043dba" translate="yes" xml:space="preserve">
          <source>a noun (i.e., saying how much of it there is, while giving the correct form of it). The behavior of this method is handy for English and a few other Western European languages, and you should override it for languages where it's not suitable. You can feel free to read the source, but the current implementation is basically as this pseudocode describes:</source>
          <target state="translated">명사 (즉, 단어의 정확한 형태를 제공하면서 단어가 얼마나 있는지를 말함). 이 방법의 동작은 영어 및 일부 다른 서유럽 언어에 유용하며 적합하지 않은 언어에 대해서는 재정의해야합니다. 소스를 자유롭게 읽을 수 있지만 현재 구현은 기본적으로이 의사 코드가 설명하는대로입니다.</target>
        </trans-unit>
        <trans-unit id="cbaad0f8fdd1c074dd23e8663bc741bba26c0e9b" translate="yes" xml:space="preserve">
          <source>a number &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; .</source>
          <target state="translated">숫자 &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72ce09e5ea483914f6710102bb19bd41d3cef731" translate="yes" xml:space="preserve">
          <source>a number &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt;.</source>
          <target state="translated">숫자 &lt;code&gt;OS_MAJOR + 0.001 * OS_MINOR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="049379839be4e80bd4288a0cfab4c43842fb24ac" translate="yes" xml:space="preserve">
          <source>a or accuracy</source>
          <target state="translated">또는 정확도</target>
        </trans-unit>
        <trans-unit id="20b1aa3e6979f290ef40d1e602b1d7ee858c53e5" translate="yes" xml:space="preserve">
          <source>a parse error.</source>
          <target state="translated">구문 분석 오류</target>
        </trans-unit>
        <trans-unit id="36958640033ae606fe1d0a4aeb5cf8119f6964e4" translate="yes" xml:space="preserve">
          <source>a particular place, in combination with non-linguistic location-specific information such as what currency is used there. Locales</source>
          <target state="translated">어떤 통화가 사용되는지와 같은 비언어적 위치 별 정보와 함께 특정 장소. 로케일</target>
        </trans-unit>
        <trans-unit id="427679a88e71c9d05f75a15acaaf64e423868907" translate="yes" xml:space="preserve">
          <source>a posteriori</source>
          <target state="translated">후손</target>
        </trans-unit>
        <trans-unit id="e88840d242f0a240a29a125e59a11a32b9a74724" translate="yes" xml:space="preserve">
          <source>a reference to</source>
          <target state="translated">참조</target>
        </trans-unit>
        <trans-unit id="a7361da6063a7ceef198f250842e89b36593b797" translate="yes" xml:space="preserve">
          <source>a reference to a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object which contains further information about the paragraph (see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details).</source>
          <target state="translated">단락에 대한 추가 정보가 포함 된 &lt;code&gt;Pod::Paragraph&lt;/code&gt; 객체에 대한 참조입니다 (자세한 내용은 &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="c80e050c47afd7c7439491b82841365aa5c3f43a" translate="yes" xml:space="preserve">
          <source>a reference to a &lt;code&gt;Pod::Paragraph&lt;/code&gt; object which contains further information about the paragraph command (see &lt;a href=&quot;inputobjects&quot;&gt;Pod::InputObjects&lt;/a&gt; for details).</source>
          <target state="translated">단락 명령에 대한 추가 정보가 포함 된 &lt;code&gt;Pod::Paragraph&lt;/code&gt; 객체에 대한 참조입니다 (자세한 내용은 &lt;a href=&quot;inputobjects&quot;&gt;Pod :: InputObjects&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="2de844cccf2463406565f5f79e7d0c23fcb5032f" translate="yes" xml:space="preserve">
          <source>a reference to a [ source name, display name ] array</source>
          <target state="translated">[소스 이름, 표시 이름] 배열에 대한 참조</target>
        </trans-unit>
        <trans-unit id="6bf9ff5f95a22331a824e1df5b23e1daaf115e8c" translate="yes" xml:space="preserve">
          <source>a reference to a scalar to append YAML to</source>
          <target state="translated">YAML을 추가 할 스칼라에 대한 참조</target>
        </trans-unit>
        <trans-unit id="6ba9f0a775e33ba0d83393e791f3715c8038c4eb" translate="yes" xml:space="preserve">
          <source>a reference to an array into which YAML will be pushed</source>
          <target state="translated">YAML이 푸시 될 배열에 대한 참조</target>
        </trans-unit>
        <trans-unit id="f1cf41b67f8ac934bdb1895a8415ee32895dafcf" translate="yes" xml:space="preserve">
          <source>a reference to the subroutine;</source>
          <target state="translated">서브 루틴에 대한 참조;</target>
        </trans-unit>
        <trans-unit id="c10bb3ae2e9e12614dc451b112b763b0e4c6ea09" translate="yes" xml:space="preserve">
          <source>a reference to the symbol table entry (typeglob) containing the subroutine;</source>
          <target state="translated">서브 루틴을 포함하는 심볼 테이블 엔트리 (typeglob)에 대한 참조;</target>
        </trans-unit>
        <trans-unit id="716ec8e228f41268238a19d64c81add7c59efa1b" translate="yes" xml:space="preserve">
          <source>a regex:</source>
          <target state="translated">정규식 :</target>
        </trans-unit>
        <trans-unit id="ff9123773c3af11dc4fc6c1bb3d5deb9aca9a8cf" translate="yes" xml:space="preserve">
          <source>a regexp and backreferences &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; ,... only</source>
          <target state="translated">정규 표현식과 역 참조 &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; , ... 만</target>
        </trans-unit>
        <trans-unit id="c82d8b1831639010ccb6efbfc7708e3bbbf21bcb" translate="yes" xml:space="preserve">
          <source>a regexp and backreferences &lt;code&gt;\g1&lt;/code&gt;, &lt;code&gt;\g2&lt;/code&gt;,... only</source>
          <target state="translated">정규 표현식 및 역 참조 &lt;code&gt;\g1&lt;/code&gt; , &lt;code&gt;\g2&lt;/code&gt; , ... 만</target>
        </trans-unit>
        <trans-unit id="b014f25a03aeeb46139f48d6914592ebe8048eb2" translate="yes" xml:space="preserve">
          <source>a regexp. This is a really nice feature; what matches later in a regexp is made to depend on what matched earlier in the regexp. Suppose we wanted to look for doubled words in a text, like &quot;the the&quot;. The following regexp finds all 3-letter doubles with a space in between:</source>
          <target state="translated">정규식. 이것은 정말 좋은 기능입니다. 나중에 정규 표현식에서 일치하는 항목은 정규 표현식에서 이전에 일치 한 항목에 따라 달라집니다. &quot;the the&quot;와 같이 텍스트에서 이중 단어를 찾고 싶다고 가정 해 보겠습니다. 다음 정규 표현식은 사이에 공백이있는 3 글자 double을 모두 찾습니다.</target>
        </trans-unit>
        <trans-unit id="01acfa70c00b2c40814c6e8e07848ca1e6071adc" translate="yes" xml:space="preserve">
          <source>a regexp. This is a really nice feature; what matches later in a regexp is made to depend on what matched earlier in the regexp. Suppose we wanted to look for doubled words in a text, like 'the the'. The following regexp finds all 3-letter doubles with a space in between:</source>
          <target state="translated">정규식. 이것은 정말 좋은 기능입니다. 정규 표현식에서 나중에 일치하는 항목은 정규 표현식에서 이전에 일치하는 항목에 따라 달라집니다. 'the'와 같이 텍스트에서 두 배로 된 단어를 찾고 싶다고 가정 해 봅시다. 다음 정규식은 사이에 공백이있는 3 문자 더블을 모두 찾습니다.</target>
        </trans-unit>
        <trans-unit id="479e514b0897fdfb8d6718c16ce953228a292ea2" translate="yes" xml:space="preserve">
          <source>a regexp; not doing so may lead to surprising and unsatisfactory results.</source>
          <target state="translated">정규식; 그렇게하지 않으면 놀랍고 만족스럽지 않은 결과가 나올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8430d6aa05798e9ad31cc9f0f4c419ec21ff77ea" translate="yes" xml:space="preserve">
          <source>a simple word</source>
          <target state="translated">간단한 단어</target>
        </trans-unit>
        <trans-unit id="f6a51fb4134250bbe89e82c92389e8c086899f29" translate="yes" xml:space="preserve">
          <source>a single &lt;code&gt;fail&lt;/code&gt; hint.</source>
          <target state="translated">단일 &lt;code&gt;fail&lt;/code&gt; 힌트.</target>
        </trans-unit>
        <trans-unit id="3bda680983bb65b6ab904551c0eb6137730ad0a5" translate="yes" xml:space="preserve">
          <source>a special case, after all; and at least it's possible, if not as concise as usual.</source>
          <target state="translated">결국 특별한 경우; 그리고 적어도 평소처럼 간결하지는 않더라도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e941e8088e0ee725d5a1331bbb15c1f7fa4f3cdd" translate="yes" xml:space="preserve">
          <source>a string of Perl statements.</source>
          <target state="translated">Perl 문의 문자열</target>
        </trans-unit>
        <trans-unit id="76ca2e58b13a0c692067763da1d921195c362fc6" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">8 진수 문자열 모든 것이 문자열이면 &lt;a href=&quot;#oct&quot;&gt;oct&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ea867a4f27794a34a91a0e21a0c4879a0a50b43" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;#oct-EXPR&quot;&gt;&lt;code&gt;oct&lt;/code&gt;&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">8 진수 문자열. 당신이 가진 모든 것이 문자열이라면 &lt;a href=&quot;#oct-EXPR&quot;&gt; &lt;code&gt;oct&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f83ace0c428bcd5408c51dfef2ab5e8998435bd7" translate="yes" xml:space="preserve">
          <source>a string of octal digits. See also &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt;, if all you have is a string.</source>
          <target state="translated">8 진수 문자열 모든 것이 문자열이면 &lt;a href=&quot;oct&quot;&gt;oct&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3166c6d48bdc27e53a55abb43985ea1756a1268" translate="yes" xml:space="preserve">
          <source>a subroutine reference.</source>
          <target state="translated">서브 루틴 참조</target>
        </trans-unit>
        <trans-unit id="04f0c4b1fd780f4be3730ec3c5d7dfd8c9451073" translate="yes" xml:space="preserve">
          <source>a thread:</source>
          <target state="translated">실 :</target>
        </trans-unit>
        <trans-unit id="fe6d7479ae4200c3a6f4997fc5801bb9889aa1b5" translate="yes" xml:space="preserve">
          <source>a whitespace character.)</source>
          <target state="translated">공백 문자.)</target>
        </trans-unit>
        <trans-unit id="21b825df3faa11615ed424e23e8cff717a5252d5" translate="yes" xml:space="preserve">
          <source>a)</source>
          <target state="translated">a)</target>
        </trans-unit>
        <trans-unit id="78ecd65792fd338affd06e9d02fd8d0820236817" translate="yes" xml:space="preserve">
          <source>a) How do I verify that an email address is correctly formatted?</source>
          <target state="translated">a) 이메일 주소의 형식이 올바른지 어떻게 확인합니까?</target>
        </trans-unit>
        <trans-unit id="1ee08278869a8bdd3842c22f817ca34ed228cb42" translate="yes" xml:space="preserve">
          <source>a+bi</source>
          <target state="translated">a+bi</target>
        </trans-unit>
        <trans-unit id="81541b7da471dd2332c53aedfa2bdfe3a4665452" translate="yes" xml:space="preserve">
          <source>a-f (or A-F, case doesn't matter). Each hexadecimal digit represents four bits, or half a byte. &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; 0x..., &quot;\n&quot;&lt;/code&gt; will show a hexadecimal number in decimal, and &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%x\n&quot;, $decimal&lt;/code&gt; will show a decimal number in hexadecimal. If you have just the &quot;hex digits&quot; of a hexadecimal number, you can use the &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">af (또는 AF, 대소 문자는 중요하지 않습니다). 각 16 진수는 4 비트 또는 반 바이트를 나타냅니다. &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; 0x..., &quot;\n&quot;&lt;/code&gt; 은 16 진수를 10 진수로, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%x\n&quot;, $decimal&lt;/code&gt; 은 16 진수를 16 진수로 표시합니다. 16 진수의 &quot;16 진수&quot;만 있으면 &lt;code&gt;&lt;a href=&quot;functions/hex&quot;&gt;hex()&lt;/a&gt;&lt;/code&gt; 함수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="30880da0c4d537f77731cd44fda09055efa5876d" translate="yes" xml:space="preserve">
          <source>a-f (or A-F, case doesn't matter). Each hexadecimal digit represents four bits, or half a byte. &lt;code&gt;print 0x..., &quot;\n&quot;&lt;/code&gt; will show a hexadecimal number in decimal, and &lt;code&gt;printf &quot;%x\n&quot;, $decimal&lt;/code&gt; will show a decimal number in hexadecimal. If you have just the &quot;hex digits&quot; of a hexadecimal number, you can use the &lt;code&gt;hex()&lt;/code&gt; function.</source>
          <target state="translated">af (또는 AF, 대소 문자는 중요하지 않음). 각 16 진수는 4 비트 또는 1/2 바이트를 나타냅니다. &lt;code&gt;print 0x..., &quot;\n&quot;&lt;/code&gt; 은 16 진수를 10 진수로 표시하고 &lt;code&gt;printf &quot;%x\n&quot;, $decimal&lt;/code&gt; 은 10 진수를 16 진수로 표시합니다. 16 진수의 &quot;16 진수&quot;만 있으면 &lt;code&gt;hex()&lt;/code&gt; 함수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed5e8e851dceeb90b5c2b37a81b2ad11ae340d95" translate="yes" xml:space="preserve">
          <source>a.out-style build</source>
          <target state="translated">스타일 아웃 빌드</target>
        </trans-unit>
        <trans-unit id="b136797455badb9d94688d703d732be6bcd625d1" translate="yes" xml:space="preserve">
          <source>aMY_CXT/pMY_CXT</source>
          <target state="translated">aMY_CXT/pMY_CXT</target>
        </trans-unit>
        <trans-unit id="caa06bc8ded55725a89e31ba414012a00d4046d0" translate="yes" xml:space="preserve">
          <source>abc-shell version 53.2 has a bug that can cause crashes in the subprocesses used to run piped programs, if a later version is available you should install it instead.</source>
          <target state="translated">abc-shell 버전 53.2에는 파이프 된 프로그램을 실행하는 데 사용되는 하위 프로세스에서 충돌을 일으킬 수있는 버그가 있습니다. 이후 버전을 사용할 수 있으면 대신 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="e3689d66476f49593a2a894cd94aec4693042ce8" translate="yes" xml:space="preserve">
          <source>ability to easily concatenate Unix-style specifications). In addition, it provides an additional file test routine, &lt;code&gt;candelete&lt;/code&gt;, which determines whether you have delete access to a file.</source>
          <target state="translated">Unix 스타일 사양을 쉽게 연결하는 기능). 또한 파일에 대한 삭제 액세스 권한이 있는지 여부를 결정 하는 추가 파일 테스트 루틴 인 &lt;code&gt;candelete&lt;/code&gt; 를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="683856e844b4d27a05487529295efbbd0fd90322" translate="yes" xml:space="preserve">
          <source>abort ()</source>
          <target state="translated">중단 ()</target>
        </trans-unit>
        <trans-unit id="d73f1814a721ec582b85e9491a67089ca8678981" translate="yes" xml:space="preserve">
          <source>abort_execution</source>
          <target state="translated">abort_execution</target>
        </trans-unit>
        <trans-unit id="5780daf6db0b013dbf82807c9f85abba683b0820" translate="yes" xml:space="preserve">
          <source>about</source>
          <target state="translated">about</target>
        </trans-unit>
        <trans-unit id="bf822dae7472ffd43fa312bcb0d507b95bc27439" translate="yes" xml:space="preserve">
          <source>about =&amp;gt; {...}</source>
          <target state="translated">약 =&amp;gt; {...}</target>
        </trans-unit>
        <trans-unit id="8f203a021dc29f479a81bd2dd69f4ea2898f02f6" translate="yes" xml:space="preserve">
          <source>about all the dependencies, so you should make sure that anything is up-to-date, say, by doing</source>
          <target state="translated">모든 의존성에 대해, 그래서 당신은 무엇이든 최신 상태인지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="9fbb397449fabe7370de4e726a586750c0e025d4" translate="yes" xml:space="preserve">
          <source>above</source>
          <target state="translated">above</target>
        </trans-unit>
        <trans-unit id="3f8528380c147f9aa2206094f2404301d5bc3dbf" translate="yes" xml:space="preserve">
          <source>above is set up automatically during the build to a correct value on the builder machine, but is overridable at runtime,</source>
          <target state="translated">위는 빌드하는 동안 빌더 머신에서 올바른 값으로 자동 설정되지만 런타임시 대체 가능합니다.</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="a239a7dbad7ea85832efb23e90576b2dd038b7a1" translate="yes" xml:space="preserve">
          <source>abs VALUE</source>
          <target state="translated">abs VALUE</target>
        </trans-unit>
        <trans-unit id="415190d7a2135efc9f152a71915dffbe7a71529a" translate="yes" xml:space="preserve">
          <source>abs, alarm, chomp, chop, chr, chroot, cos, defined, eval, evalbytes, exp, fc, glob, hex, int, lc, lcfirst, length, log, lstat, mkdir, oct, ord, pos, print, printf, quotemeta, readlink, readpipe, ref, require, reverse (in scalar context only), rmdir, say, sin, split (for its second argument), sqrt, stat, study, uc, ucfirst, unlink, unpack.</source>
          <target state="translated">abs, 알람, chomp, chop, chr, chroot, cos, 정의, eval, evalbytes, exp, fc, glob, hex, int, lc, lcfirst, 길이, 로그, lstat, mkdir, oct, ord, pos, print, printf, quotemeta, readlink, readpipe, ref, reverse, (scalar context에서만), rmdir, say, sin, split (두 번째 인수), sqrt, stat, study, uc, ucfirst, unlink, unpack.</target>
        </trans-unit>
        <trans-unit id="c9d27d05c0f1948ba13845b76ad842c25f9c7acf" translate="yes" xml:space="preserve">
          <source>abs2rel</source>
          <target state="translated">abs2rel</target>
        </trans-unit>
        <trans-unit id="8e4c99d3fe9bf60d76af8048b3a4c7fae4f3567d" translate="yes" xml:space="preserve">
          <source>abs2rel (override)</source>
          <target state="translated">abs2rel (재정의)</target>
        </trans-unit>
        <trans-unit id="16303fb221d3ec1b08ffec5f67d69601aa293453" translate="yes" xml:space="preserve">
          <source>abs_path</source>
          <target state="translated">abs_path</target>
        </trans-unit>
        <trans-unit id="5e8fc1f161ebdf02ac9d2d940aca4c69e7ddd903" translate="yes" xml:space="preserve">
          <source>abs_path and friends</source>
          <target state="translated">abs_path와 친구들</target>
        </trans-unit>
        <trans-unit id="a4694021c8d1356f5760adc6ce253b54e2f437f0" translate="yes" xml:space="preserve">
          <source>absolute. This decision was made due to portability reasons. Since &lt;code&gt;File::Spec-&amp;gt;catdir()&lt;/code&gt; returns relative paths on all other operating systems, it will now also follow this convention on Mac OS. Note that this may break some existing scripts.</source>
          <target state="translated">순수한. 이 결정은 이식성 이유로 인해 이루어졌습니다. 이후 &lt;code&gt;File::Spec-&amp;gt;catdir()&lt;/code&gt; 다른 모든 운영 체제에서 상대 경로를 반환합니다, 지금 또한 맥 OS에이 규칙을 따릅니다. 이로 인해 일부 기존 스크립트가 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb40247beed3ba10597c7fdb55272d4608c34191" translate="yes" xml:space="preserve">
          <source>absolute. This decision was made due to portability reasons. Since &lt;code&gt;File::Spec-&amp;gt;catfile()&lt;/code&gt; returns relative paths on all other operating systems, it will now also follow this convention on Mac OS. Note that this may break some existing scripts.</source>
          <target state="translated">순수한. 이 결정은 이식성 이유로 인해 이루어졌습니다. 이후 &lt;code&gt;File::Spec-&amp;gt;catfile()&lt;/code&gt; 다른 모든 운영 체제에서 상대 경로를 반환합니다, 지금 또한 맥 OS에이 규칙을 따릅니다. 이로 인해 일부 기존 스크립트가 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75eebe6521e20b7f9388d31918b564655eac99ce" translate="yes" xml:space="preserve">
          <source>absolutely cannot wait for the fix to be made upstream, released to CPAN and copied to blead, you must add (or update) a &lt;code&gt;CUSTOMIZED&lt;/code&gt; entry in the</source>
          <target state="translated">절대적으로 추가 (또는 업데이트)해야합니다 CPAN에 공개하고 blead에 복사 상류 만들 수 수정을 위해 기다릴 수 없어 &lt;code&gt;CUSTOMIZED&lt;/code&gt; 에서 항목을</target>
        </trans-unit>
        <trans-unit id="ec3ec33367ae71405e35bd1b8b9135d59e173c1a" translate="yes" xml:space="preserve">
          <source>abstract</source>
          <target state="translated">abstract</target>
        </trans-unit>
        <trans-unit id="7a532dc15a911b9b9181922abf6ced9885b401e9" translate="yes" xml:space="preserve">
          <source>accent-insensitive Unicode sort</source>
          <target state="translated">악센트에 무관 한 유니 코드 정렬</target>
        </trans-unit>
        <trans-unit id="e586a9d31c9053af08de34074e1d2e2b09839079" translate="yes" xml:space="preserve">
          <source>accent-insensitive comparisons</source>
          <target state="translated">악센트에 구애받지 않는 비교</target>
        </trans-unit>
        <trans-unit id="fc8cc4afa9fee369f0ce78c3b97600f87cf033b7" translate="yes" xml:space="preserve">
          <source>accent-insensitive locale comparisons</source>
          <target state="translated">악센트를 구분하지 않는 로캘 비교</target>
        </trans-unit>
        <trans-unit id="5fb801f2f30ac5b8a6671f1d04a959a51fc1671e" translate="yes" xml:space="preserve">
          <source>accept</source>
          <target state="translated">accept</target>
        </trans-unit>
        <trans-unit id="ae12c11f3760218cae63851a278652cd3eaea3b8" translate="yes" xml:space="preserve">
          <source>accept NEWSOCKET,GENERICSOCKET</source>
          <target state="translated">NEWSOCKET, GENERICSOCKET에 동의</target>
        </trans-unit>
        <trans-unit id="73148d1a963ff0a50ce4c368a4648b654a9d34b6" translate="yes" xml:space="preserve">
          <source>accept() on closed socket %s</source>
          <target state="translated">닫힌 소켓 % s에서 accept ()</target>
        </trans-unit>
        <trans-unit id="5fc8d440432f0b7db9d7569d2e82bb54a31bbead" translate="yes" xml:space="preserve">
          <source>accept_targets_as_html</source>
          <target state="translated">accept_targets_as_html</target>
        </trans-unit>
        <trans-unit id="b60ee8214a0a6a02cea76e9bbed04a59ee0b267e" translate="yes" xml:space="preserve">
          <source>accepts_module</source>
          <target state="translated">accepts_module</target>
        </trans-unit>
        <trans-unit id="67dff9ee8056247422bb2cdd74c074036da47a0c" translate="yes" xml:space="preserve">
          <source>accessing</source>
          <target state="translated">accessing</target>
        </trans-unit>
        <trans-unit id="de3a63299e5e19ed22af733ce3c9c55e72ad3106" translate="yes" xml:space="preserve">
          <source>accessor function for the &quot;safe signals&quot; flag of a SigAction object; see &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for general information on safe (a.k.a. &quot;deferred&quot;) signals. If you wish to handle a signal safely, use this accessor to set the &quot;safe&quot; flag in the &lt;code&gt;POSIX::SigAction&lt;/code&gt; object:</source>
          <target state="translated">SigAction 객체의 &quot;안전 신호&quot;플래그에 대한 접근 자 기능; 안전 (일명 &quot;지연&quot;) 신호에 대한 일반적인 정보는 &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; 을 참조하십시오 . 신호를 안전하게 처리하려면이 접근자를 사용하여 &lt;code&gt;POSIX::SigAction&lt;/code&gt; 객체 에서 &quot;safe&quot;플래그를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="130627c716765ea3404bece5800d80aa45677b23" translate="yes" xml:space="preserve">
          <source>accessor functions to get/set the values of a SigAction object.</source>
          <target state="translated">접근자는 SigAction 객체의 값을 가져 오거나 설정하는 기능을합니다.</target>
        </trans-unit>
        <trans-unit id="e2650bd93c165b1cdc46d89775cbfe69d061c04f" translate="yes" xml:space="preserve">
          <source>accessor methods</source>
          <target state="translated">접근 자 방법</target>
        </trans-unit>
        <trans-unit id="b7f71f41bfbef50f02bf886cf865af8975cb5786" translate="yes" xml:space="preserve">
          <source>accidentally</source>
          <target state="translated">accidentally</target>
        </trans-unit>
        <trans-unit id="98c02f22b5888f9c463dd352a91b0e6f55f94ec6" translate="yes" xml:space="preserve">
          <source>account ()</source>
          <target state="translated">계정 ()</target>
        </trans-unit>
        <trans-unit id="c311818744e2dee42b862f476f40a3be4594793e" translate="yes" xml:space="preserve">
          <source>account string</source>
          <target state="translated">계정 문자열</target>
        </trans-unit>
        <trans-unit id="de416b89496692682d5e0c82faba7064ec7953f1" translate="yes" xml:space="preserve">
          <source>account( ACCT )</source>
          <target state="translated">계정 (ACCT)</target>
        </trans-unit>
        <trans-unit id="dbadfc42c4b5382c2ee2da3a10a730447dd49543" translate="yes" xml:space="preserve">
          <source>accuracy()</source>
          <target state="translated">accuracy()</target>
        </trans-unit>
        <trans-unit id="d64f260a7f8859f9124906f28ba5bcaab331b63d" translate="yes" xml:space="preserve">
          <source>ackermann()</source>
          <target state="translated">ackermann()</target>
        </trans-unit>
        <trans-unit id="5bc073f750a11be5136816b14b952737583d3973" translate="yes" xml:space="preserve">
          <source>acos_real</source>
          <target state="translated">acos_real</target>
        </trans-unit>
        <trans-unit id="3959b939e5424783c493f42cf465f2662e1abbe0" translate="yes" xml:space="preserve">
          <source>acosec</source>
          <target state="translated">acosec</target>
        </trans-unit>
        <trans-unit id="94cd96ac8391252b0d7300cdaef80570e8f1939f" translate="yes" xml:space="preserve">
          <source>acosech</source>
          <target state="translated">acosech</target>
        </trans-unit>
        <trans-unit id="c8be89c327cde8b860df98308b35887bdf811326" translate="yes" xml:space="preserve">
          <source>acot</source>
          <target state="translated">acot</target>
        </trans-unit>
        <trans-unit id="b5aa292058ce240d98a24e0ca78c79be934f0018" translate="yes" xml:space="preserve">
          <source>acotan</source>
          <target state="translated">acotan</target>
        </trans-unit>
        <trans-unit id="299176f2fa0007084d06d47b1d722326f90b487a" translate="yes" xml:space="preserve">
          <source>acotanh</source>
          <target state="translated">acotanh</target>
        </trans-unit>
        <trans-unit id="eef264f7031ee0d55b786c83a83d07ec29a99714" translate="yes" xml:space="preserve">
          <source>acsc</source>
          <target state="translated">acsc</target>
        </trans-unit>
        <trans-unit id="742151db90a3d5f8f47cde2a0573ae956bba7225" translate="yes" xml:space="preserve">
          <source>action&quot; or &quot;manu-</source>
          <target state="translated">액션 &quot;또는&quot;manu-</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">active</target>
        </trans-unit>
        <trans-unit id="203ce15d5d992c06720839acb6b6026bd08e64ca" translate="yes" xml:space="preserve">
          <source>active ( [ PATTERN ] )</source>
          <target state="translated">활성 ([패턴])</target>
        </trans-unit>
        <trans-unit id="41abc94fa7e0679b76e7b8ab3c7e76b2f28ab611" translate="yes" xml:space="preserve">
          <source>active_times ()</source>
          <target state="translated">active_times ()</target>
        </trans-unit>
        <trans-unit id="50f46198a1bd51840547aee34fc045921e43d4c6" translate="yes" xml:space="preserve">
          <source>actual</source>
          <target state="translated">actual</target>
        </trans-unit>
        <trans-unit id="e1c639fb19db0dcce693983be5102f6a49818507" translate="yes" xml:space="preserve">
          <source>actual arguments</source>
          <target state="translated">실제 인수</target>
        </trans-unit>
        <trans-unit id="1aa2cdb15228a618096deb2127d28c6d2552c4bf" translate="yes" xml:space="preserve">
          <source>actual_failed</source>
          <target state="translated">actual_failed</target>
        </trans-unit>
        <trans-unit id="156eaf0a85ab4579b92f17332e5be12445a633fb" translate="yes" xml:space="preserve">
          <source>actual_ok</source>
          <target state="translated">actual_ok</target>
        </trans-unit>
        <trans-unit id="2d1e5e7312142eb6c199ba547d3200e7b449f24f" translate="yes" xml:space="preserve">
          <source>actual_passed</source>
          <target state="translated">actual_passed</target>
        </trans-unit>
        <trans-unit id="d617b5ef5a36ed1caa9214fcdabefa7731cb473f" translate="yes" xml:space="preserve">
          <source>actually</source>
          <target state="translated">actually</target>
        </trans-unit>
        <trans-unit id="39e1c11289ba978ed126f2e8f80c36df95d4eef2" translate="yes" xml:space="preserve">
          <source>actually exists in such a directory. Example:</source>
          <target state="translated">실제로 그러한 디렉토리에 존재합니다. 예:</target>
        </trans-unit>
        <trans-unit id="5e9b6a0946d93d3600096c34f7b9c6d8f4af95ac" translate="yes" xml:space="preserve">
          <source>actually made it back to</source>
          <target state="translated">실제로 다시</target>
        </trans-unit>
        <trans-unit id="6f062b8fcdd36756625e1ab1e5c1953adc6ab240" translate="yes" xml:space="preserve">
          <source>actually matches is already determined. The ordering of the matches is the same as for the chosen subexpression.</source>
          <target state="translated">실제로 일치는 이미 결정되었습니다. 일치하는 순서는 선택한 하위 표현식과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="fa1143dea12bffbbc1aa99d5da2ec811d63b5127" translate="yes" xml:space="preserve">
          <source>adb</source>
          <target state="translated">adb</target>
        </trans-unit>
        <trans-unit id="e971b60e69554dc73ae2867ffc1d8dbfe7585bf6" translate="yes" xml:space="preserve">
          <source>adb is the Android Debug Bridge. For our purposes, it's basically a way of establishing an ssh connection to an Android device without having to install anything on the device itself, as long as the device is either on the same local network as the host, or it is connected to the host through USB.</source>
          <target state="translated">adb는 Android 디버그 브리지입니다. 우리의 목적을 위해 기본적으로 장치가 호스트와 동일한 로컬 네트워크에 있거나 호스트에 연결되어있는 한 장치 자체에 아무것도 설치하지 않고도 Android 장치에 ssh 연결을 설정하는 방법입니다. USB를 통해.</target>
        </trans-unit>
        <trans-unit id="726d6990cbbd796d526f6eb70f406a9a21c44e5a" translate="yes" xml:space="preserve">
          <source>adb or ssh?</source>
          <target state="translated">adb 또는 ssh?</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="1cdefa74e097cfd38a7c079579ff60228b0ab7a4" translate="yes" xml:space="preserve">
          <source>add ( HANDLES )</source>
          <target state="translated">추가 (핸들)</target>
        </trans-unit>
        <trans-unit id="a6150967f5d404bfa61836ada61d4d8886af78a8" translate="yes" xml:space="preserve">
          <source>add as field, containing abstract, maximum 80 characters, suggested minimum 40 characters</source>
          <target state="translated">필드로 추가, 초록 포함, 최대 80 자, 권장 최소 40 자</target>
        </trans-unit>
        <trans-unit id="1d1b3b51172716d0cb050801b8fab16ebc7d7185" translate="yes" xml:space="preserve">
          <source>add_bits</source>
          <target state="translated">add_bits</target>
        </trans-unit>
        <trans-unit id="8bab9844d8f1c6dd4567678a3d4228ce8b501259" translate="yes" xml:space="preserve">
          <source>add_bits($data, $nbits)</source>
          <target state="translated">add_bits ($ data, $ nbits)</target>
        </trans-unit>
        <trans-unit id="93ac08fbb73a3cad19b1e009a5e2b9a0a78a5e4b" translate="yes" xml:space="preserve">
          <source>add_bits()</source>
          <target state="translated">add_bits()</target>
        </trans-unit>
        <trans-unit id="64dea38af51fbf2c8ff3ee6ea4af6ed53003ace2" translate="yes" xml:space="preserve">
          <source>add_callback ()</source>
          <target state="translated">add_callback ()</target>
        </trans-unit>
        <trans-unit id="abf3032307dfe39ef958ebe45b1f12714169343d" translate="yes" xml:space="preserve">
          <source>add_cp_to_invlist</source>
          <target state="translated">add_cp_to_invlist</target>
        </trans-unit>
        <trans-unit id="6fd7f87f1b6566c349bb595a4f1059c41892cb2f" translate="yes" xml:space="preserve">
          <source>add_exclusion</source>
          <target state="translated">add_exclusion</target>
        </trans-unit>
        <trans-unit id="a60043eb168b23b34ba4c0c7b51cef7203ddc42f" translate="yes" xml:space="preserve">
          <source>add_file_and_line</source>
          <target state="translated">add_file_and_line</target>
        </trans-unit>
        <trans-unit id="b3a0288b8ca6d27db738d809d62ac0e3c6285121" translate="yes" xml:space="preserve">
          <source>add_inputmap</source>
          <target state="translated">add_inputmap</target>
        </trans-unit>
        <trans-unit id="4514cf258d3e4c89d44816b76aaa5fc2f1386225" translate="yes" xml:space="preserve">
          <source>add_maximum</source>
          <target state="translated">add_maximum</target>
        </trans-unit>
        <trans-unit id="fc9a8eca1a31dcb594410d626208235bd7fc7a61" translate="yes" xml:space="preserve">
          <source>add_minimum</source>
          <target state="translated">add_minimum</target>
        </trans-unit>
        <trans-unit id="acd66d90d21c6fe51ff501907bb5d392108664bf" translate="yes" xml:space="preserve">
          <source>add_outputmap</source>
          <target state="translated">add_outputmap</target>
        </trans-unit>
        <trans-unit id="0d3c41fd8732592880e7f55cc7c3fc8a834c7be0" translate="yes" xml:space="preserve">
          <source>add_rc_file</source>
          <target state="translated">add_rc_file</target>
        </trans-unit>
        <trans-unit id="b5c8db3d60cf29a727589536b11b08e340485572" translate="yes" xml:space="preserve">
          <source>add_requirements</source>
          <target state="translated">add_requirements</target>
        </trans-unit>
        <trans-unit id="01fc3276421dbf3f78fb6815d9b3576d38880db6" translate="yes" xml:space="preserve">
          <source>add_string</source>
          <target state="translated">add_string</target>
        </trans-unit>
        <trans-unit id="cd90350aa624ce72729ac4dfc2941036951f042d" translate="yes" xml:space="preserve">
          <source>add_string_requirement</source>
          <target state="translated">add_string_requirement</target>
        </trans-unit>
        <trans-unit id="94d0e78aca0adb443be5d146e1dac8975ed16903" translate="yes" xml:space="preserve">
          <source>add_style ()</source>
          <target state="translated">add_style ()</target>
        </trans-unit>
        <trans-unit id="e9c9fe277eedf4b0e446ea3693bd7d7483c107ca" translate="yes" xml:space="preserve">
          <source>add_typemap</source>
          <target state="translated">add_typemap</target>
        </trans-unit>
        <trans-unit id="eb656a1cf4cd5296805d99910b45e4dc325cbb17" translate="yes" xml:space="preserve">
          <source>added to your call to</source>
          <target state="translated">당신의 전화에 추가</target>
        </trans-unit>
        <trans-unit id="bf85afafd571966f1893bc1b4d94179e60f5e7c5" translate="yes" xml:space="preserve">
          <source>addflags</source>
          <target state="translated">addflags</target>
        </trans-unit>
        <trans-unit id="c3805175370d19c334b59f45b87343b9f2b7f5e1" translate="yes" xml:space="preserve">
          <source>addition</source>
          <target state="translated">addition</target>
        </trans-unit>
        <trans-unit id="00926c40438f9f8f6693a93e815909416f63a54a" translate="yes" xml:space="preserve">
          <source>addr</source>
          <target state="translated">addr</target>
        </trans-unit>
        <trans-unit id="d3b529cc111bc45c37531a55d9d055085829bd45" translate="yes" xml:space="preserve">
          <source>addr =&amp;gt; STRING</source>
          <target state="translated">주소 =&amp;gt; STRING</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">address</target>
        </trans-unit>
        <trans-unit id="f04b64693468ccbcd424224ccb20e8bc47ee146c" translate="yes" xml:space="preserve">
          <source>address operator</source>
          <target state="translated">주소 연산자</target>
        </trans-unit>
        <trans-unit id="91ea4e7b6b94343d715c7982210567115655cb20" translate="yes" xml:space="preserve">
          <source>adds a new name for a control character.</source>
          <target state="translated">제어 문자의 새 이름을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9c677b000cbca8edd8a283feb5874aa9705fe891" translate="yes" xml:space="preserve">
          <source>adds it automatically when building a program. However, when accessing an executable as a normal file (e.g.,</source>
          <target state="translated">프로그램을 빌드 할 때 자동으로 추가합니다. 그러나 실행 파일을 일반 파일로 액세스하는 경우 (예 :</target>
        </trans-unit>
        <trans-unit id="095c0c5ecd4727ed55c8b2fdc7688091189d0cae" translate="yes" xml:space="preserve">
          <source>adds the line to the history of input, from where it can be used if the actual &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; is present.</source>
          <target state="translated">실제 &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; 이있는 경우 사용할 수있는 위치에서 입력 히스토리에 행을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="15365e423360558ad8fd1101175a39561533a309" translate="yes" xml:space="preserve">
          <source>adds the line to the history of input, from where it can be used if the actual &lt;code&gt;readline&lt;/code&gt; is present.</source>
          <target state="translated">실제 &lt;code&gt;readline&lt;/code&gt; 이있는 경우 사용할 수있는 입력 기록에 행을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="c06e00a8be663c1327d667390b98cd4e016d9d8c" translate="yes" xml:space="preserve">
          <source>addsym($name[,$maxlen[,$silent]])</source>
          <target state="translated">addsym($name[,$maxlen[,$silent]])</target>
        </trans-unit>
        <trans-unit id="b0b7161ec6ad88575ef86bb08f43a11d9469dba1" translate="yes" xml:space="preserve">
          <source>adecimal.</source>
          <target state="translated">adecimal.</target>
        </trans-unit>
        <trans-unit id="b144ec6dfdab55ae2963bf4c782c7e4157019ffd" translate="yes" xml:space="preserve">
          <source>adminaddress</source>
          <target state="translated">adminaddress</target>
        </trans-unit>
        <trans-unit id="916a530bfc75fe948657d7b5108d40fc2508c596" translate="yes" xml:space="preserve">
          <source>advised to follow this introduction with more information from the full Perl manual, the table of contents to which can be found in &lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/perltoc&quot;&gt;perltoc&lt;/a&gt; 에서 찾을 수있는 전체 Perl 매뉴얼의 자세한 정보와 함께이 소개를 따르는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="077ed481cc8691c625c070d3706e3db2ce79fb9e" translate="yes" xml:space="preserve">
          <source>advised to follow this introduction with more information from the full Perl manual, the table of contents to which can be found in &lt;a href=&quot;perltoc&quot;&gt;perltoc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perltoc&quot;&gt;perltoc&lt;/a&gt; 에서 찾을 수있는 목차 인 전체 Perl 매뉴얼의 자세한 정보와 함께이 소개를 따르도록 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="a671c77e741dd6eb2475516bb9fdd71371af6c12" translate="yes" xml:space="preserve">
          <source>affect implicit upgrading for byte-strings, and is thus incapable of silencing warnings from this module. See &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt; for more details.</source>
          <target state="translated">바이트 문자열에 대한 암시 적 업그레이드에 영향을 미치므로이 모듈의 경고를 차단할 수 없습니다. 자세한 내용은 &lt;a href=&quot;encoding&quot;&gt;인코딩&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aab93e8e3796f91139b951be5ef4c63e4b3fdff0" translate="yes" xml:space="preserve">
          <source>affect normal access to a variable. (Locks on subs are different, and covered in a bit.) If you really,</source>
          <target state="translated">변수에 대한 일반 액세스에 영향을줍니다. (잠금 장치의 잠금 장치는 다르며 약간 다루어집니다.) 정말로</target>
        </trans-unit>
        <trans-unit id="d16b511453d6e723e850460d0b087be14fb56fb1" translate="yes" xml:space="preserve">
          <source>afs.U</source>
          <target state="translated">afs.U</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="1a8a978377842aa511fbb5bb66f929228650a830" translate="yes" xml:space="preserve">
          <source>after a &lt;b&gt;failure&lt;/b&gt;:</source>
          <target state="translated">&lt;b&gt;실패&lt;/b&gt; 후 :</target>
        </trans-unit>
        <trans-unit id="2391217343165dbdcc1e85432eaed6f2d40232f2" translate="yes" xml:space="preserve">
          <source>after the first line of wrap(). This is not a most effective implementation, one may consider</source>
          <target state="translated">wrap ()의 첫 줄 다음에. 이것은 가장 효과적인 구현이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d501db092c38ad8292690be746bddff30bdd42c1" translate="yes" xml:space="preserve">
          <source>after which you may use either</source>
          <target state="translated">그 후 당신은 둘 중 하나를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d237158794ce68f8acfcb27dbb3524b7d367bc44" translate="yes" xml:space="preserve">
          <source>after you made your modifications.</source>
          <target state="translated">수정 한 후</target>
        </trans-unit>
        <trans-unit id="0de616ced95f0b022d2889588dcde62712d64ff3" translate="yes" xml:space="preserve">
          <source>again, and run</source>
          <target state="translated">다시 실행</target>
        </trans-unit>
        <trans-unit id="80ece22ca1db999b834ed949964a66789d2cf76d" translate="yes" xml:space="preserve">
          <source>against the previous and current perls to see what difference it has made, and whether anything else has slowed down as a consequence.</source>
          <target state="translated">이전과 현재의 perls와 비교하여 어떤 차이가 있었는지, 다른 결과가 느려졌는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1758132a9fc3c2ae42bd5721dfb601fa2eba8c8d" translate="yes" xml:space="preserve">
          <source>aggregate_tests</source>
          <target state="translated">aggregate_tests</target>
        </trans-unit>
        <trans-unit id="f1525d2f1de4ff409ccb719b4f0bd276a7bb7c21" translate="yes" xml:space="preserve">
          <source>agree on the type of reference and also on the organization of data within the object body. Failure to agree on the type results in immediate death when the wrong method tries to access an object. Failure to agree on data organization may lead to one class trampling over the data of another.</source>
          <target state="translated">참조 유형과 객체 본문 내의 데이터 구성에 동의합니다. 형식에 동의하지 않으면 잘못된 방법으로 객체에 액세스하려고 할 때 즉시 사망합니다. 데이터 구성에 동의하지 않으면 한 클래스가 다른 클래스의 데이터를 짓밟을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73468898c9988e2f9e409b93e8bff16eaa79c0ba" translate="yes" xml:space="preserve">
          <source>alarm</source>
          <target state="translated">alarm</target>
        </trans-unit>
        <trans-unit id="18e2b413721b9bf837fab8f8cf96fb71b94f7658" translate="yes" xml:space="preserve">
          <source>alarm ( $floating_seconds [, $interval_floating_seconds ] )</source>
          <target state="translated">알람 ($ floating_seconds [, $ interval_floating_seconds])</target>
        </trans-unit>
        <trans-unit id="05d57bf3c2063c1b5c9e035ba1e89e203c424841" translate="yes" xml:space="preserve">
          <source>alarm SECONDS</source>
          <target state="translated">알람 시간</target>
        </trans-unit>
        <trans-unit id="605bec3b3bc4303313aa3e75ef5affbb28a79c75" translate="yes" xml:space="preserve">
          <source>albeit with substitutions such as &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/LATIN//&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/VULGAR//&lt;/a&gt;&lt;/code&gt; in all cases; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; in some cases; and &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; in some other cases. Controls are listed using their Unicode 6.2 abbreviations. The differences between the 0037 and 1047 sets are flagged with &lt;code&gt;**&lt;/code&gt; . The differences between the 1047 and POSIX-BC sets are flagged with &lt;code&gt;##.&lt;/code&gt; All &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; numbers listed are decimal. If you would rather see this table listing octal values, then run the table (that is, the pod source text of this document, since this recipe may not work with a pod2_other_format translation) through:</source>
          <target state="translated">모든 경우에 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/LATIN//&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/VULGAR//&lt;/a&gt;&lt;/code&gt; 와 같은 치환으로 도; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; ; 및 &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; 다른 경우이다. 컨트롤은 유니 코드 6.2 약어를 사용하여 나열됩니다. 0037과 1047 세트의 차이점은 &lt;code&gt;**&lt;/code&gt; 로 표시됩니다 . 1047과 POSIX-BC 세트의 차이점은 &lt;code&gt;##.&lt;/code&gt; 으로 표시됩니다 . 나열된 모든 &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord()&lt;/a&gt;&lt;/code&gt; 숫자는 10 진수입니다. 8 진수 값을 나열하는이 테이블을 보려면 다음을 통해 테이블 ​​(이 문서의 포드 소스 텍스트를 작성하십시오.이 레시피는 pod2_other_format 변환에서는 작동하지 않을 수 있습니다)</target>
        </trans-unit>
        <trans-unit id="75a11396bc9295afa76865d46554ea421eb24c33" translate="yes" xml:space="preserve">
          <source>albeit with substitutions such as &lt;code&gt;s/LATIN//&lt;/code&gt; and &lt;code&gt;s/VULGAR//&lt;/code&gt; in all cases; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; in some cases; and &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; in some other cases. Controls are listed using their Unicode 6.2 abbreviations. The differences between the 0037 and 1047 sets are flagged with &lt;code&gt;**&lt;/code&gt;. The differences between the 1047 and POSIX-BC sets are flagged with &lt;code&gt;##.&lt;/code&gt; All &lt;code&gt;ord()&lt;/code&gt; numbers listed are decimal. If you would rather see this table listing octal values, then run the table (that is, the pod source text of this document, since this recipe may not work with a pod2_other_format translation) through:</source>
          <target state="translated">비록 모든 경우에 &lt;code&gt;s/LATIN//&lt;/code&gt; 및 &lt;code&gt;s/VULGAR//&lt;/code&gt; 와 같은 대체물이 있음에도 불구하고 ; &lt;code&gt;s/CAPITAL LETTER//&lt;/code&gt; 어떤 경우에는; 및 &lt;code&gt;s/SMALL LETTER ([A-Z])/\l$1/&lt;/code&gt; 다른 경우이다. 컨트롤은 유니 코드 6.2 약어를 사용하여 나열됩니다. 0037 세트와 1047 세트 간의 차이점은 &lt;code&gt;**&lt;/code&gt; 로 표시됩니다 . 1047과 POSIX-BC 세트의 차이점은 &lt;code&gt;##.&lt;/code&gt; 으로 표시됩니다 . 나열된 모든 &lt;code&gt;ord()&lt;/code&gt; 숫자는 10 진수입니다. 8 진수 값을 나열하는이 테이블을 보려면 다음을 통해 테이블 ​​(즉,이 레시피가 pod2_other_format 번역에서 작동하지 않을 수 있으므로이 문서의 포드 소스 텍스트)을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9a53b0819e7b65cebdd2f94ad43011ac678d3fc3" translate="yes" xml:space="preserve">
          <source>algorithm</source>
          <target state="translated">algorithm</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="3b21e0f54dca09308ec896c51cda4f9ca4dd91a4" translate="yes" xml:space="preserve">
          <source>aliases</source>
          <target state="translated">aliases</target>
        </trans-unit>
        <trans-unit id="3d30739d4c2f9e4b4a11180a7c3327f3e52fd8d3" translate="yes" xml:space="preserve">
          <source>alignbytes.U</source>
          <target state="translated">alignbytes.U</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="509fd71434fbe53c02bb286882f845078ef5ee17" translate="yes" xml:space="preserve">
          <source>all compressed data to the output data stream.</source>
          <target state="translated">모든 압축 데이터를 출력 데이터 스트림으로</target>
        </trans-unit>
        <trans-unit id="8130249f3817c584cba8ad27e67056edd1c31fac" translate="yes" xml:space="preserve">
          <source>all its ancestor classes. (This is because the idea of &quot;class data&quot; isn't directly implemented in Perl, but is instead left to individual class-systems to implement as they see fit..)</source>
          <target state="translated">모든 조상 클래스. (이것은 &quot;클래스 데이터&quot;라는 개념이 Perl에서 직접 구현 된 것이 아니라 개별 클래스 시스템에 맞게 구현 된 것입니다.)</target>
        </trans-unit>
        <trans-unit id="8cc5040f7ad90d3df578f4dce7d48b395ac1b9d9" translate="yes" xml:space="preserve">
          <source>all of the help</source>
          <target state="translated">모든 도움</target>
        </trans-unit>
        <trans-unit id="d965b605775ee00cf1e3fc050be2a7bc7aeedc4a" translate="yes" xml:space="preserve">
          <source>all other</source>
          <target state="translated">그 외 모든 것들</target>
        </trans-unit>
        <trans-unit id="7d7ebf534a4b32567ce1f6b72446d3e09f27b240" translate="yes" xml:space="preserve">
          <source>all other versions of the module you're installing</source>
          <target state="translated">설치할 다른 모든 버전의 모듈</target>
        </trans-unit>
        <trans-unit id="de05e27afdc59b4d9bbeeae86d35f670cdbf6280" translate="yes" xml:space="preserve">
          <source>all remaining lines from is this way:</source>
          <target state="translated">나머지 모든 줄은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f966b162e6dd45e46a9c1021ad48d8c4e414675d" translate="yes" xml:space="preserve">
          <source>all the subroutines are called in a list context.</source>
          <target state="translated">모든 서브 루틴은 목록 컨텍스트에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="78d2c8306e2172f468ed7da94e5e7fdd772dd33e" translate="yes" xml:space="preserve">
          <source>all uncompressed data to the output data stream.</source>
          <target state="translated">압축되지 않은 모든 데이터를 출력 데이터 스트림으로</target>
        </trans-unit>
        <trans-unit id="e6543caf79edcee1b041e9193f69e17c853ef1f4" translate="yes" xml:space="preserve">
          <source>all with optional leading and trailing zeros and/or spaces. Additionally, numbers are allowed to have an underscore between any two digits.</source>
          <target state="translated">선택적인 선행 및 후행 0 및 / 또는 공백이 있습니다. 또한 숫자는 두 자리 숫자 사이에 밑줄을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bdf2024537d2f578f5cc2d810080f1792573304" translate="yes" xml:space="preserve">
          <source>all_casefolds()</source>
          <target state="translated">all_casefolds()</target>
        </trans-unit>
        <trans-unit id="4fd4ef547a3c496257a428c878a5f2ace5ae30f5" translate="yes" xml:space="preserve">
          <source>all_orig()</source>
          <target state="translated">all_orig()</target>
        </trans-unit>
        <trans-unit id="c80387e566dd863e5152a562207937bf89af2d9b" translate="yes" xml:space="preserve">
          <source>all_passed</source>
          <target state="translated">all_passed</target>
        </trans-unit>
        <trans-unit id="5ce526b479f02643605e6a3a0b87e719e7dc029e" translate="yes" xml:space="preserve">
          <source>all_proxy or ALL_PROXY</source>
          <target state="translated">all_proxy 또는 ALL_PROXY</target>
        </trans-unit>
        <trans-unit id="acff2f4d1898df7e94ecaebad18831a97e4519ff" translate="yes" xml:space="preserve">
          <source>all_target</source>
          <target state="translated">all_target</target>
        </trans-unit>
        <trans-unit id="58c8fefcb9d1228b8d85bfa3be7cb2dc6454059d" translate="yes" xml:space="preserve">
          <source>all_trimmed()</source>
          <target state="translated">all_trimmed()</target>
        </trans-unit>
        <trans-unit id="12b42e096b7bca3af7ec1c5ba1a6445e520a72d8" translate="yes" xml:space="preserve">
          <source>allkeys.txt</source>
          <target state="translated">allkeys.txt</target>
        </trans-unit>
        <trans-unit id="a6bcdd56e8c802c3cc0adfca24a16eeabaf48566" translate="yes" xml:space="preserve">
          <source>alloc ( SIZE [, RECORD_SIZE] )</source>
          <target state="translated">할당 (SIZE [, RECORD_SIZE])</target>
        </trans-unit>
        <trans-unit id="450e3ffba8a6ed0775f91de33526ec7a1304bafd" translate="yes" xml:space="preserve">
          <source>alloc_LOGOP</source>
          <target state="translated">alloc_LOGOP</target>
        </trans-unit>
        <trans-unit id="78c9d45e7d52c660866b311227728fee1dfd5e6c" translate="yes" xml:space="preserve">
          <source>allocates some memory and constructs a Perl interpreter, along these lines:</source>
          <target state="translated">다음 행을 따라 메모리를 할당하고 Perl 인터프리터를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="f7e7e41212efde7ea0686ff849ccfa24e2db139b" translate="yes" xml:space="preserve">
          <source>alloccopstash</source>
          <target state="translated">alloccopstash</target>
        </trans-unit>
        <trans-unit id="38bfdf811456f7a2d5544e16bd3b9a1746a71459" translate="yes" xml:space="preserve">
          <source>allocmy</source>
          <target state="translated">allocmy</target>
        </trans-unit>
        <trans-unit id="6452e7c5a42f97b00af1a210afc7d4de315e57ec" translate="yes" xml:space="preserve">
          <source>allow</source>
          <target state="translated">allow</target>
        </trans-unit>
        <trans-unit id="4ac387a6f0f3e93209827552db5ced03710025ff" translate="yes" xml:space="preserve">
          <source>allow suppressing all such STDERR output, and instead allow an option for reporting errors/warnings in some other way, whether by triggering a callback, or noting errors in some attribute of the document object, or some similarly unobtrusive mechanism -- or even by appending a &quot;Pod Errors&quot; section to the end of the parsed form of the document.</source>
          <target state="translated">이러한 모든 STDERR 출력을 억제하고 대신 콜백을 트리거하거나 문서 객체의 일부 속성 또는 이와 유사한 눈에 띄지 않는 메커니즘 또는 오류를 추가하여 다른 방법으로 오류 / 경고를보고하는 옵션을 허용합니다. 구문 분석 된 문서 양식의 끝 부분에있는 &quot;팟 오류&quot;섹션</target>
        </trans-unit>
        <trans-unit id="eb4eaf28d97cf6eeb14d04f7a34316c390474dbc" translate="yes" xml:space="preserve">
          <source>allow( $test_me, \@criteria );</source>
          <target state="translated">allow ($ test_me, \ @criteria);</target>
        </trans-unit>
        <trans-unit id="3a37962fd60b42df8aa02b6d33ccdff395888515" translate="yes" xml:space="preserve">
          <source>allow_barekey</source>
          <target state="translated">allow_barekey</target>
        </trans-unit>
        <trans-unit id="a543974e7d26daadc1395d1c6e7b8078c3576335" translate="yes" xml:space="preserve">
          <source>allow_bignum</source>
          <target state="translated">allow_bignum</target>
        </trans-unit>
        <trans-unit id="6e22555c7bdb8df09b6976a293551d257f1b9089" translate="yes" xml:space="preserve">
          <source>allow_blessed</source>
          <target state="translated">allow_blessed</target>
        </trans-unit>
        <trans-unit id="d553867cb9383b11bceb04dbe28706de9455409a" translate="yes" xml:space="preserve">
          <source>allow_installing_module_downgrades</source>
          <target state="translated">allow_installing_module_downgrades</target>
        </trans-unit>
        <trans-unit id="bc847f087845d39c5308ba9d3b2c5bb9cc772f28" translate="yes" xml:space="preserve">
          <source>allow_installing_outdated_dists</source>
          <target state="translated">allow_installing_outdated_dists</target>
        </trans-unit>
        <trans-unit id="5dcbe32c2f03fa90ed403f7164172cb11f3bec11" translate="yes" xml:space="preserve">
          <source>allow_nonref</source>
          <target state="translated">allow_nonref</target>
        </trans-unit>
        <trans-unit id="18d16647f34e3d07e219046c69e7d3f1257c3c2a" translate="yes" xml:space="preserve">
          <source>allow_singlequote</source>
          <target state="translated">allow_singlequote</target>
        </trans-unit>
        <trans-unit id="cf20b3dd7f92f6af8970229c500d42d89654dee4" translate="yes" xml:space="preserve">
          <source>allow_tags</source>
          <target state="translated">allow_tags</target>
        </trans-unit>
        <trans-unit id="4b8b9ad70de983f19bf8c3414f50e1b7ca0e8a89" translate="yes" xml:space="preserve">
          <source>allow_unknown</source>
          <target state="translated">allow_unknown</target>
        </trans-unit>
        <trans-unit id="023f8167a0ccb01c809eb2dc9a66997533fa1ae8" translate="yes" xml:space="preserve">
          <source>allowed if $pat is a precompiled regular expression, even if $pat contains &lt;code&gt;(?{ ... })&lt;/code&gt; assertions or &lt;code&gt;(??{ ... })&lt;/code&gt; subexpressions.</source>
          <target state="translated">$ pat에 &lt;code&gt;(?{ ... })&lt;/code&gt; 어설 션 또는 &lt;code&gt;(??{ ... })&lt;/code&gt; 하위 표현식이 포함되어 있어도 $ pat가 사전 컴파일 된 정규 표현식 인 경우 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4301b689bb097155e3bb6d16044296e9269b5529" translate="yes" xml:space="preserve">
          <source>allows Perl to do unsafe operations. Currently the only &quot;unsafe&quot; operations are attempting to unlink directories while running as superuser and running setuid programs with fatal taint checks turned into warnings. Note that warnings must be enabled along with this option to actually</source>
          <target state="translated">Perl이 안전하지 않은 작업을 수행 할 수 있도록합니다. 현재 유일하게 &quot;안전하지 않은&quot;작업은 수퍼 유저로 실행하고 치명적인 오염 검사가 경고로 설정된 setuid 프로그램을 실행하는 동안 디렉토리의 링크를 해제하려고합니다. 실제로이 옵션과 함께 경고를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="132c35f7c02912ac7c614dd2a393fc9375c90687" translate="yes" xml:space="preserve">
          <source>allows the &lt;code&gt;:default&lt;/code&gt; list from a particular version to be used. This provides the convenience of using the default methods, but the surety that no behavioral changes will occur if the &lt;code&gt;autodie&lt;/code&gt; module is upgraded.</source>
          <target state="translated">특정 버전 의 &lt;code&gt;:default&lt;/code&gt; 목록을 사용할 수 있습니다. 이를 통해 기본 방법을 편리하게 사용할 수 있지만 &lt;code&gt;autodie&lt;/code&gt; 모듈을 업그레이드 할 경우 동작 변경이 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="423d437bbbc6bb7d398c30b28e10d75c03e10783" translate="yes" xml:space="preserve">
          <source>allows you to refer to special variables (like &lt;code&gt;$/&lt;/code&gt; ) with names (like $RS), as though they were in &lt;b&gt;awk&lt;/b&gt;; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="translated">마치 &lt;b&gt;awk&lt;/b&gt; 에있는 것처럼 이름이 $ RS와 같은 특수 변수 (예 &lt;code&gt;$/&lt;/code&gt; ) 를 참조 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; 를 참조하십시오.&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0a38d55c68cff64453f4b558ad56eb38e0d41d24" translate="yes" xml:space="preserve">
          <source>allows you to refer to special variables (like &lt;code&gt;$/&lt;/code&gt;) with names (like $RS), as though they were in &lt;b&gt;awk&lt;/b&gt;; see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details.</source>
          <target state="translated">마치 &lt;b&gt;awk&lt;/b&gt; 에있는 것처럼 이름 ($ RS와 같은) 으로 특수 변수 (예 &lt;code&gt;$/&lt;/code&gt; ) 를 참조 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; 를 참조하십시오.&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f9e2ef61def87209ec2dd5c8efef68de53d4aef6" translate="yes" xml:space="preserve">
          <source>almost</source>
          <target state="translated">almost</target>
        </trans-unit>
        <trans-unit id="f5f5592352120c7c5dd3e80cd891b2a35cc0756a" translate="yes" xml:space="preserve">
          <source>along with #including</source>
          <target state="translated">#include와 함께</target>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="translated">alpha</target>
        </trans-unit>
        <trans-unit id="dae74fa9026e628d3f6f3559507a9b1854909554" translate="yes" xml:space="preserve">
          <source>alpha, beta, gamma, mature, stable</source>
          <target state="translated">알파, 베타, 감마, 성숙, 안정</target>
        </trans-unit>
        <trans-unit id="4a2b456d7475604c6d722f87ea130ed378807efe" translate="yes" xml:space="preserve">
          <source>alpha-&amp;gt;numify() is lossy</source>
          <target state="translated">alpha-&amp;gt; numify ()는 손실이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f84474a16e6ac5b152e8cf62a4c115b6109f018b" translate="yes" xml:space="preserve">
          <source>alphabetic</source>
          <target state="translated">alphabetic</target>
        </trans-unit>
        <trans-unit id="c64c514967e575adeb799757ae37a7c922e7b3ea" translate="yes" xml:space="preserve">
          <source>alq=INTEGER</source>
          <target state="translated">alq=INTEGER</target>
        </trans-unit>
        <trans-unit id="b859ef3e26b0a8f0f8e5984aa4d45230ec4e08bc" translate="yes" xml:space="preserve">
          <source>already exist</source>
          <target state="translated">이미 존재합니다</target>
        </trans-unit>
        <trans-unit id="34879e54886ec3a6f952c7af1d444870828e03e7" translate="yes" xml:space="preserve">
          <source>already-existing</source>
          <target state="translated">already-existing</target>
        </trans-unit>
        <trans-unit id="09706c418809f1f4cfda992435ca1438eddaaeed" translate="yes" xml:space="preserve">
          <source>also</source>
          <target state="translated">also</target>
        </trans-unit>
        <trans-unit id="53ed2e1b9d4ccdc537294ab308f9c5d1e151cf60" translate="yes" xml:space="preserve">
          <source>also creates the prototyping header files for the internal functions, generates the documentation and a lot of other bits and pieces. It's important that when you add a new function to the core or change an existing one, you change the data in the table in</source>
          <target state="translated">또한 내부 함수에 대한 프로토 타입 헤더 파일을 작성하고 문서와 기타 여러 비트 및 조각을 생성합니다. 코어에 새 기능을 추가하거나 기존 기능을 변경할 때 테이블의 데이터를 변경하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="4298c06d3073002d95a1081fb801b4a99c5de328" translate="yes" xml:space="preserve">
          <source>also exists). Cygwin does not require a</source>
          <target state="translated">또한 존재합니다). Cygwin은</target>
        </trans-unit>
        <trans-unit id="2ce647c4199231c5e08b22c4a1f2a2b4b84f2e7b" translate="yes" xml:space="preserve">
          <source>also includes the platform's native underscore character, no matter what the locale is.</source>
          <target state="translated">로케일이 무엇이든 플랫폼의 기본 밑줄 문자도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="17b130cdba41303da201c9df43f19e9e6a5a45ad" translate="yes" xml:space="preserve">
          <source>also provides a number of &lt;code&gt;PerlIOBase_xxxx()&lt;/code&gt; functions which are intended to be used in the table slots of classes which do not need to do anything special for a particular method.</source>
          <target state="translated">또한 특정 메소드에 대해 특별한 작업을 수행 할 필요가없는 클래스의 테이블 슬롯에 사용되도록 여러 &lt;code&gt;PerlIOBase_xxxx()&lt;/code&gt; 함수를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="325562c769da3f80d0e63bb56514bc2e2723c9b5" translate="yes" xml:space="preserve">
          <source>alt</source>
          <target state="translated">alt</target>
        </trans-unit>
        <trans-unit id="edb013a0b027689799b6d3bb946b0380fa2999b8" translate="yes" xml:space="preserve">
          <source>alter the interpretation of nested formatting codes, meaning that the following four example lines are identical in meaning:</source>
          <target state="translated">중첩 된 형식화 코드의 해석을 변경하십시오. 즉, 다음 네 개의 예제 행은 의미가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="65b9337dd1eb20bca1113bf6bd11cb96c866245b" translate="yes" xml:space="preserve">
          <source>alternate</source>
          <target state="translated">alternate</target>
        </trans-unit>
        <trans-unit id="370d1bb1966aad5766de7d85dcf3b3cc7341ab95" translate="yes" xml:space="preserve">
          <source>alternation</source>
          <target state="translated">alternation</target>
        </trans-unit>
        <trans-unit id="90a21c2d9fafd51047158e3e6a5415f3693609cc" translate="yes" xml:space="preserve">
          <source>alternative text/node '%s' contains non-escaped | or /</source>
          <target state="translated">대체 텍스트 / 노드 '% s'에 이스케이프되지 않은 항목이 포함되어 있습니다. | 또는 /</target>
        </trans-unit>
        <trans-unit id="d8f6b9e41edbb2694075dece88f312fb846c270c" translate="yes" xml:space="preserve">
          <source>alternatives</source>
          <target state="translated">alternatives</target>
        </trans-unit>
        <trans-unit id="c78b3591272b10760192271aec607cc2988dcb68" translate="yes" xml:space="preserve">
          <source>although without duplicating any side effects that dereferencing the lvalue might trigger, such as from &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt;. Other assignment operators work similarly. The following are recognized:</source>
          <target state="translated">lvalue를 참조하지 않는 트리거를 유발할 수있는 부작용 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie()&lt;/a&gt;&lt;/code&gt; 예 : tie ()) 을 복제하지 않아도 됩니다. 다른 할당 연산자도 비슷하게 작동합니다. 다음이 인정됩니다.</target>
        </trans-unit>
        <trans-unit id="58354496c580dad5e91bb7860fafbe09369f222b" translate="yes" xml:space="preserve">
          <source>although without duplicating any side effects that dereferencing the lvalue might trigger, such as from &lt;code&gt;tie()&lt;/code&gt;. Other assignment operators work similarly. The following are recognized:</source>
          <target state="translated">비록 from &lt;code&gt;tie()&lt;/code&gt; 와 같이 lvalue를 역 참조하면 트리거 될 수있는 부작용을 복제하지 않아도 됩니다. 다른 할당 연산자도 비슷하게 작동합니다. 다음이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="translated">always</target>
        </trans-unit>
        <trans-unit id="fb980e8b0c064246b90fe9981d818b33511ba028" translate="yes" xml:space="preserve">
          <source>always be called &lt;code&gt;my_cxt_t&lt;/code&gt; . The other &lt;code&gt;CXT*&lt;/code&gt; macros assume the existence of the &lt;code&gt;my_cxt_t&lt;/code&gt; typedef name.</source>
          <target state="translated">항상 &lt;code&gt;my_cxt_t&lt;/code&gt; 라고 합니다 . 다른 &lt;code&gt;CXT*&lt;/code&gt; 매크로는 &lt;code&gt;my_cxt_t&lt;/code&gt; typedef 이름이 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="c49dca9e869bb8c7aa15e873638a4f97a5455840" translate="yes" xml:space="preserve">
          <source>always be called &lt;code&gt;my_cxt_t&lt;/code&gt;. The other &lt;code&gt;CXT*&lt;/code&gt; macros assume the existence of the &lt;code&gt;my_cxt_t&lt;/code&gt; typedef name.</source>
          <target state="translated">항상 &lt;code&gt;my_cxt_t&lt;/code&gt; 라고 합니다 . 다른 &lt;code&gt;CXT*&lt;/code&gt; 매크로는 &lt;code&gt;my_cxt_t&lt;/code&gt; typedef 이름이 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="624628225263ede33300aec274499c51e6ba799d" translate="yes" xml:space="preserve">
          <source>amagic_call</source>
          <target state="translated">amagic_call</target>
        </trans-unit>
        <trans-unit id="dbf2d81c9c333b5fca3bee0fb8df6f61d4eedef9" translate="yes" xml:space="preserve">
          <source>amagic_cmp</source>
          <target state="translated">amagic_cmp</target>
        </trans-unit>
        <trans-unit id="25a6689d4dce784d2f9625d84757ab34382c1494" translate="yes" xml:space="preserve">
          <source>amagic_cmp_desc</source>
          <target state="translated">amagic_cmp_desc</target>
        </trans-unit>
        <trans-unit id="bee0ae5d5d149f2eb908685e4633a3f43fe07388" translate="yes" xml:space="preserve">
          <source>amagic_cmp_locale</source>
          <target state="translated">amagic_cmp_locale</target>
        </trans-unit>
        <trans-unit id="5a6fd4c04b4f63507f7886db1d604bbf68f15a0a" translate="yes" xml:space="preserve">
          <source>amagic_cmp_locale_desc</source>
          <target state="translated">amagic_cmp_locale_desc</target>
        </trans-unit>
        <trans-unit id="1a66aa375c6c5c3ad1ca7cdaa4deb1260f69b56f" translate="yes" xml:space="preserve">
          <source>amagic_deref_call</source>
          <target state="translated">amagic_deref_call</target>
        </trans-unit>
        <trans-unit id="72c7f5c6016d0a5d76e03bd8489009a05eadad3d" translate="yes" xml:space="preserve">
          <source>amagic_generation</source>
          <target state="translated">amagic_generation</target>
        </trans-unit>
        <trans-unit id="62ca8b4224c50df749865c98c2134880803b4c3b" translate="yes" xml:space="preserve">
          <source>amagic_i_ncmp</source>
          <target state="translated">amagic_i_ncmp</target>
        </trans-unit>
        <trans-unit id="b1453a2d7d7e9d1d0012d8ae25376ce27440536c" translate="yes" xml:space="preserve">
          <source>amagic_i_ncmp_desc</source>
          <target state="translated">amagic_i_ncmp_desc</target>
        </trans-unit>
        <trans-unit id="a9723b7bf40723bbfd1737495f16d06af6d7dcd6" translate="yes" xml:space="preserve">
          <source>amagic_is_enabled</source>
          <target state="translated">amagic_is_enabled</target>
        </trans-unit>
        <trans-unit id="d19f07bee0c2a2dd0470a5fb2ec269a7c0aa948e" translate="yes" xml:space="preserve">
          <source>amagic_ncmp</source>
          <target state="translated">amagic_ncmp</target>
        </trans-unit>
        <trans-unit id="fa6cbf136542ba3825af609917d7ed29273c9fa7" translate="yes" xml:space="preserve">
          <source>amagic_ncmp_desc</source>
          <target state="translated">amagic_ncmp_desc</target>
        </trans-unit>
        <trans-unit id="9e7cc664880363e8a6f8dd216803f53660c055a7" translate="yes" xml:space="preserve">
          <source>ambient_pragmas</source>
          <target state="translated">ambient_pragmas</target>
        </trans-unit>
        <trans-unit id="75a14d5aecfa0926099831db837cd6a62fe95561" translate="yes" xml:space="preserve">
          <source>amed character.</source>
          <target state="translated">재미있는 캐릭터.</target>
        </trans-unit>
        <trans-unit id="3b367d8b97dbd352b7660082cc380a4f6d0dd4b6" translate="yes" xml:space="preserve">
          <source>amnesty =&amp;gt; [{...}, ...]</source>
          <target state="translated">사면 =&amp;gt; [{...}, ...]</target>
        </trans-unit>
        <trans-unit id="de73eac0c305038f0437bc6a1f994a5a4379ed28" translate="yes" xml:space="preserve">
          <source>an</source>
          <target state="translated">an</target>
        </trans-unit>
        <trans-unit id="8f91a7d4c013d689792014cce41cfca93df8643f" translate="yes" xml:space="preserve">
          <source>an arrayref of CPAN::Distroprefs::Pref objects</source>
          <target state="translated">CPAN :: Distroprefs :: Pref 객체의 arrayref</target>
        </trans-unit>
        <trans-unit id="1fd4e0318cb46a3d9d16dba83e533928a4e2874e" translate="yes" xml:space="preserve">
          <source>an embedded newline, so it doesn't remove it. This pattern still removes the newline at the end of the string:</source>
          <target state="translated">포함 된 개행 문자이므로 제거하지 않습니다. 이 패턴은 여전히 ​​문자열 끝에서 줄 바꿈을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="eeb10a7bf507029eb324ad0529e062ede9e7fd42" translate="yes" xml:space="preserve">
          <source>an entire array or an entire hash (or to just about anything else). Names are one kind of reference that you're already familiar with. Each human being is a messy, inconvenient collection of cells. But to refer to a particular human, for instance the first computer programmer, it isn't necessary to describe each of their cells; all you need is the easy, convenient scalar string &quot;Ada Lovelace&quot;.</source>
          <target state="translated">전체 배열 또는 전체 해시 (또는 다른 거의 모든 것). 이름은 이미 익숙한 참조의 한 종류입니다. 각 인간은 지저분하고 불편한 세포 모음입니다. 그러나 예를 들어 최초의 컴퓨터 프로그래머와 같은 특정 인간을 지칭하기 위해 각각의 세포를 설명 할 필요는 없습니다. 쉽고 편리한 스칼라 문자열 &quot;Ada Lovelace&quot;만 있으면됩니다.</target>
        </trans-unit>
        <trans-unit id="419fb031bbb1d3bd852934c637cbdadfffbdbcd6" translate="yes" xml:space="preserve">
          <source>an entire array or an entire hash (or to just about anything else). Names are one kind of reference that you're already familiar with. Think of the President of the United States: a messy, inconvenient bag of blood and bones. But to talk about him, or to represent him in a computer program, all you need is the easy, convenient scalar string &quot;Barack Obama&quot;.</source>
          <target state="translated">전체 배열 또는 전체 해시 (또는 다른 것). 이름은 이미 익숙한 일종의 참조입니다. 혼란스럽고 불편한 피와 뼈로 이루어진 미국 대통령을 생각해보십시오. 그러나 그에 대해 이야기하거나 컴퓨터 프로그램에서 그를 나타내려면 쉽고 편리한 스칼라 문자열 &quot;Barack Obama&quot;만 있으면됩니다.</target>
        </trans-unit>
        <trans-unit id="2130df2147e633640bd9a0d05e6d376dee6ccd2f" translate="yes" xml:space="preserve">
          <source>an error has occurred, the return value will always be 0.</source>
          <target state="translated">오류가 발생하면 반환 값은 항상 0입니다.</target>
        </trans-unit>
        <trans-unit id="753f0741a207012aea84c4e049df342c160b9190" translate="yes" xml:space="preserve">
          <source>an error has occurred, the return value will be 1 and the value on the top of the stack will be</source>
          <target state="translated">오류가 발생하면 반환 값은 1이되고 스택 상단의 값은</target>
        </trans-unit>
        <trans-unit id="409ef8643f1d521a89ca1a0c3155c4a711f5a647" translate="yes" xml:space="preserve">
          <source>an error to register the same object multiple times with varying sets of hashrefs. Any hashrefs that are not registered yet will be added, others ignored.</source>
          <target state="translated">다양한 해시 참조 세트로 동일한 객체를 여러 번 등록하는 오류 아직 등록되지 않은 해시 참조는 추가되고 다른 참조는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="527b667261f88298c0cb1af1ba8e29f1a44cc851" translate="yes" xml:space="preserve">
          <source>an integer in parentheses</source>
          <target state="translated">괄호 안의 정수</target>
        </trans-unit>
        <trans-unit id="13609837b5958aba1d97ee9714e0ffeb18803df0" translate="yes" xml:space="preserve">
          <source>an integer portion, an optional decimal point, and optionally one or more digits to the right of the decimal are all required. A trailing underscore is permitted and a leading zero is permitted. Just like the lax dotted-decimal version, quoting the values is required for alpha/development forms to be parsed correctly.</source>
          <target state="translated">정수 부분, 선택적 소수점 및 선택적으로 소수점 오른쪽에있는 하나 이상의 숫자가 모두 필요합니다. 후행 밑줄이 허용되고 선행 0이 허용됩니다. 느슨한 점으로 구분 된 10 진수 버전과 마찬가지로 알파 / 개발 양식을 올바르게 구문 분석하려면 값을 인용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f7cb42641753796859e397b207b75ba5bcc045ca" translate="yes" xml:space="preserve">
          <source>an integer within [-9, +9]), this is called</source>
          <target state="translated">[-9, +9] 내의 정수)라고합니다.</target>
        </trans-unit>
        <trans-unit id="84450a811d895404bf8139aa28f48f612498ab04" translate="yes" xml:space="preserve">
          <source>an operator mask</source>
          <target state="translated">오퍼레이터 마스크</target>
        </trans-unit>
        <trans-unit id="a364687d873b24e877eb252d7c45fe192c9de7ea" translate="yes" xml:space="preserve">
          <source>an operator name (opname)</source>
          <target state="translated">운영자 이름 (opname)</target>
        </trans-unit>
        <trans-unit id="a5faf8bc4ea23b7df9a36e53820f1db2afc993d4" translate="yes" xml:space="preserve">
          <source>an operator set (opset)</source>
          <target state="translated">연산자 세트 (opset)</target>
        </trans-unit>
        <trans-unit id="c622a7ddf5fadbf610de97df158c76726f57823e" translate="yes" xml:space="preserve">
          <source>an operator tag name (optag)</source>
          <target state="translated">운영자 태그 이름 (optag)</target>
        </trans-unit>
        <trans-unit id="fddd836d8687ca62403d6ea09db51c3383501df4" translate="yes" xml:space="preserve">
          <source>an xV that is mortal, and it is possible for there to be more than one mortal reference to a single xV. For a reference to be mortal means that it is owned by the temps stack, one of perl's many internal stacks, which will destroy that reference &quot;a short time later&quot;. Usually the &quot;short time later&quot; is the end of the current Perl statement. However, it gets more complicated around dynamic scopes: there can be multiple sets of mortal references hanging around at the same time, with different death dates. Internally, the actual determinant for when mortal xV references are destroyed depends on two macros, SAVETMPS and FREETMPS. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; and &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; and &lt;a href=&quot;#Temporaries-Stack&quot;&gt;&quot;Temporaries Stack&quot;&lt;/a&gt; below for more details on these macros.</source>
          <target state="translated">하나의 xV에 대해 하나 이상의 필사 참조가있을 수 있습니다. 참조가 mortal이라는 것은 perl의 많은 내부 스택 중 하나 인 temps 스택이 소유한다는 것을 의미합니다.이 스택은 &quot;잠시 후&quot;해당 참조를 파괴합니다. 일반적으로 &quot;짧은 시간 후&quot;는 현재 Perl 문의 끝입니다. 그러나 동적 범위에서는 더 복잡해집니다. 사망 날짜가 다른 여러 세트의 필사자 참조가 동시에있을 수 있습니다. 내부적으로 필멸의 xV 참조가 파괴되는시기에 대한 실제 결정자는 SAVETMPS 및 FREETMPS라는 두 개의 매크로에 따라 달라집니다. 참조 &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt; 및 &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; 및 &lt;a href=&quot;#Temporaries-Stack&quot;&gt;&quot;임시직 스택&quot;&lt;/a&gt; 다음이 매크로에 대한 자세한 내용을.</target>
        </trans-unit>
        <trans-unit id="ec55bdaac6cde3367ae41c2ffaeadd3eb38fb9ff" translate="yes" xml:space="preserve">
          <source>analyze_preprocessor_statements()</source>
          <target state="translated">analyze_preprocessor_statements()</target>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="translated">anchor</target>
        </trans-unit>
        <trans-unit id="04f99c29e783f9cb4ae84f58faccd00a818b9492" translate="yes" xml:space="preserve">
          <source>anchor_items</source>
          <target state="translated">anchor_items</target>
        </trans-unit>
        <trans-unit id="68694b44e6f48917189ec5e4ceb1c0fef7ef80b9" translate="yes" xml:space="preserve">
          <source>anchored fixed string</source>
          <target state="translated">고정 된 고정 문자열</target>
        </trans-unit>
        <trans-unit id="084b1fb8eb2e301557794160ff9be4c4cff280d4" translate="yes" xml:space="preserve">
          <source>anchored fixed strings</source>
          <target state="translated">고정 된 고정 문자열</target>
        </trans-unit>
        <trans-unit id="43c00fd1688ea15081e7af4c5f2652c8c8653500" translate="yes" xml:space="preserve">
          <source>anchorify</source>
          <target state="translated">anchorify</target>
        </trans-unit>
        <trans-unit id="f3ef6e09da1f05d18d52776cc5fea65e3b316091" translate="yes" xml:space="preserve">
          <source>anchorname</source>
          <target state="translated">anchorname</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="41f7d9aafc306017d119acf70705c827d97696a7" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.)</source>
          <target state="translated">및 &lt;a href=&quot;encode&quot;&gt;인코딩&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1e7b3b70ce0b7269aa85ddea66ae89e1b660b6b7" translate="yes" xml:space="preserve">
          <source>and &lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;, or &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt;, &quot;How do I flush/unbuffer an output filehandle? Why must I do this?&quot;):</source>
          <target state="translated">및 &lt;a href=&quot;functions/select&quot;&gt;선택&lt;/a&gt; , 또는 &lt;a href=&quot;perlfaq5&quot;&gt;perlfaq5&lt;/a&gt; , &quot;? 어떻게 출력 파일 핸들 버퍼 해제 I를 플러시 /을 내가 왜 이렇게해야 하는가?&quot;)</target>
        </trans-unit>
        <trans-unit id="6f764442014f3cf4eec9c4807c2193ee14ff3f81" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;must&lt;/b&gt; begin with an &quot;x&quot; or &quot;X&quot; and be followed by an underscore; i.e. they must match the pattern: &lt;code&gt;qr{\Ax_}i&lt;/code&gt;. If a custom key refers to a compound data structure, subkeys within it do not need an &quot;x_&quot; or &quot;X_&quot; prefix.</source>
          <target state="translated">그리고 &lt;b&gt;해야&lt;/b&gt; 에 &quot;X&quot;또는 &quot;X&quot;와 밑줄 뒤에 시작된다; 즉, &lt;code&gt;qr{\Ax_}i&lt;/code&gt; 패턴과 일치해야합니다 . 사용자 지정 키가 복합 데이터 구조를 참조하는 경우 그 안의 하위 키에는 &quot;x_&quot;또는 &quot;X_&quot;접두사가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff92ccc059fb8ede8f0b23bb015e63ae4731fcf9" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$@&lt;/code&gt; is empty.</source>
          <target state="translated">와 &lt;code&gt;$@&lt;/code&gt; 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="016f4b3a6b408b7434c9c8addd29fcfb251b75bc" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$default&lt;/code&gt; is 0.</source>
          <target state="translated">그리고 &lt;code&gt;$default&lt;/code&gt; 0입니다.</target>
        </trans-unit>
        <trans-unit id="79e3a95c66eb0995a5b17cf160488513cd9c4836" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will contain the</source>
          <target state="translated">그리고 &lt;code&gt;$status&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="fb55aba7e200d190a26516edaeb1e8c8f871d671" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the</source>
          <target state="translated">그리고 &lt;code&gt;$status&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="f7a05a7c74e5456a922f33cfd811202c94bfd7a6" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the a</source>
          <target state="translated">그리고 &lt;code&gt;$status&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="faf11d208a41db985f49c9f628222cbd33a1d444" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;$status&lt;/code&gt; will hold the exact</source>
          <target state="translated">그리고 &lt;code&gt;$status&lt;/code&gt; 정확한를 개최합니다</target>
        </trans-unit>
        <trans-unit id="67edd0a2eb37c7ac979f5ca41cab24999c2c1c82" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;-&lt;/code&gt; shouldn't be the first character. If you want to be hypercorrect, stay case-insensitive and within the 8.3 naming convention (all the files and directories have to be unique within one directory if their names are lowercased and truncated to eight characters before the &lt;code&gt;.&lt;/code&gt;, if any, and to three characters after the &lt;code&gt;.&lt;/code&gt;, if any). (And do not use &lt;code&gt;.&lt;/code&gt;s in directory names.)</source>
          <target state="translated">그리고 &lt;code&gt;-&lt;/code&gt; 첫 번째 문자가 아니어야합니다. 당신은 hypercorrect, 체류 대소 문자를 구분하고 일하려면 8.3 명명 규칙 (이름이 전에 소문자 8 자 잘립니다 경우 파일과 디렉토리를 모두 하나의 디렉토리 내에서 고유해야 내 &lt;code&gt;.&lt;/code&gt; (있는 경우) 및 3 &lt;code&gt;.&lt;/code&gt; 뒤에있는 문자 ). (그리고 사용하지 마십시오 &lt;code&gt;.&lt;/code&gt; 의 디렉토리 이름에.)</target>
        </trans-unit>
        <trans-unit id="311c8c621fca6c1133276b3546a71e41872cd5b3" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt; is</source>
          <target state="translated">그리고 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt; myint;&lt;/code&gt; &lt;a href=&quot;functions/no&quot;&gt;도&lt;/a&gt; 없다. 이다</target>
        </trans-unit>
        <trans-unit id="fe56ad1fd6916544bd67d364c47ef22b8722997c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Archive::Tar&lt;/code&gt; will call &lt;code&gt;Cwd::cwd()&lt;/code&gt; internally again.</source>
          <target state="translated">및 &lt;code&gt;Archive::Tar&lt;/code&gt; 호출합니다 &lt;code&gt;Cwd::cwd()&lt;/code&gt; 내부적으로 다시.</target>
        </trans-unit>
        <trans-unit id="aeba6e0c46a5c93c432546b879e4bda2afa3e55c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Perl_dump_all&lt;/code&gt; , which dumps all the subroutines in the stash and the op tree of the main root.</source>
          <target state="translated">및 &lt;code&gt;Perl_dump_all&lt;/code&gt; 숨김 및 주요 루트의 연산 트리의 모든 서브 루틴을 덤프.</target>
        </trans-unit>
        <trans-unit id="a1a5e775f0bf7436caccb3da6c3ed1da6baee3c8" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Perl_dump_all&lt;/code&gt;, which dumps all the subroutines in the stash and the op tree of the main root.</source>
          <target state="translated">및 &lt;code&gt;Perl_dump_all&lt;/code&gt; 은 기본 루트의 숨김 및 op 트리에있는 모든 서브 루틴을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="24b1d9fb54b19f2a4bf7a0a575b93e2448d41ac7" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;asynch_read_if&lt;/code&gt; could look like this</source>
          <target state="translated">및 &lt;code&gt;asynch_read_if&lt;/code&gt; 은 다음과 같을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2c2517f77f4e9b99eb2ef447fe23c77258db12ca" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;no myint;&lt;/code&gt; is</source>
          <target state="translated">그리고 &lt;code&gt;no myint;&lt;/code&gt; 이다</target>
        </trans-unit>
        <trans-unit id="52260a6c12657e7cd53ed4aeda42476a80ffde69" translate="yes" xml:space="preserve">
          <source>and C</source>
          <target state="translated">그리고 C</target>
        </trans-unit>
        <trans-unit id="ce624d2a956a4c4fdd87bb0d4c8b8565acc10eb6" translate="yes" xml:space="preserve">
          <source>and CRT DLL. I know no advantages of this executable over &lt;code&gt;perl.exe&lt;/code&gt; , but it cannot fork() at all. Well, one advantage is that the build process is not so convoluted as with &lt;code&gt;perl.exe&lt;/code&gt; .</source>
          <target state="translated">그리고 CRT DLL. &lt;code&gt;perl.exe&lt;/code&gt; 보다이 실행 파일의 장점은 없지만, fork () 할 수는 없습니다. 글쎄, 하나의 장점은 빌드 프로세스가 &lt;code&gt;perl.exe&lt;/code&gt; 와 같이 복잡하지 않다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="5e6a0970e8d705e9ad8a17d69bd4c9595d8e81ee" translate="yes" xml:space="preserve">
          <source>and CRT DLL. I know no advantages of this executable over &lt;code&gt;perl.exe&lt;/code&gt;, but it cannot fork() at all. Well, one advantage is that the build process is not so convoluted as with &lt;code&gt;perl.exe&lt;/code&gt;.</source>
          <target state="translated">및 CRT DLL. &lt;code&gt;perl.exe&lt;/code&gt; 보다이 실행 파일의 장점은 알지 못하지만 fork ()는 전혀 할 수 없습니다. 글쎄, 한 가지 장점은 빌드 프로세스가 &lt;code&gt;perl.exe&lt;/code&gt; 와 같이 복잡하지 않다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="d2f78e98c292b6edbfc33a84d6b47bc8f258f6d2" translate="yes" xml:space="preserve">
          <source>and Configure will give up.</source>
          <target state="translated">그리고 구성은 포기합니다.</target>
        </trans-unit>
        <trans-unit id="e6601ba493fd802e8c69e73fa3178575540d2f6c" translate="yes" xml:space="preserve">
          <source>and Mark Adler</source>
          <target state="translated">마크 애들러</target>
        </trans-unit>
        <trans-unit id="86d575fb0f5c883349b5a7f286abb3edbe3207c7" translate="yes" xml:space="preserve">
          <source>and Perl knows that it has to invoke the PerlIOAPR_open() method implemented by the APR layer.</source>
          <target state="translated">Perl은 APR 계층에 의해 구현 된 PerlIOAPR_open () 메소드를 호출해야한다는 것을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="e32c9b9186aa8e9288a2accdf939a5bb0683c0cb" translate="yes" xml:space="preserve">
          <source>and UNIX, &lt;code&gt;$gzerrno&lt;/code&gt; should only be used to check for the presence of</source>
          <target state="translated">UNIX의 경우 &lt;code&gt;$gzerrno&lt;/code&gt; 는 존재 여부를 확인하는 데만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="dce6c6da0aef880545eedbf05f807b0628611184" translate="yes" xml:space="preserve">
          <source>and UTF-16 is the name of the encoding that embraces them.</source>
          <target state="translated">UTF-16은이를 포함하는 인코딩의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c3a319360d3cdf3729627355f1ee1dd75a51847e" translate="yes" xml:space="preserve">
          <source>and ad hoc &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; . The decision of which to use depends on what part of the test suite you're working on. This is a measure to prevent a high-level failure (such as Config.pm breaking) from causing basic functionality tests to fail.</source>
          <target state="translated">ad hoc &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; 입니다. 사용할 결정은 작업중인 테스트 스위트의 부분에 따라 다릅니다. 이는 높은 수준의 실패 (예 : Config.pm 차단)로 인해 기본 기능 테스트가 실패하지 않도록하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="4513daae69f72bebaa2d26a20674723fcb0e7c30" translate="yes" xml:space="preserve">
          <source>and ad hoc &lt;code&gt;print $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt;. The decision of which to use depends on what part of the test suite you're working on. This is a measure to prevent a high-level failure (such as Config.pm breaking) from causing basic functionality tests to fail.</source>
          <target state="translated">그리고 ad hoc &lt;code&gt;print $test ? &quot;ok 42\n&quot; : &quot;not ok 42\n&quot;&lt;/code&gt; . 사용할 결정은 작업중인 테스트 스위트의 부분에 따라 다릅니다. 이는 높은 수준의 오류 (예 : Config.pm 중단)로 인해 기본 기능 테스트가 실패하는 것을 방지하기위한 조치입니다.</target>
        </trans-unit>
        <trans-unit id="56e3b5ec2e00e190723cc405ec9046ffef199e26" translate="yes" xml:space="preserve">
          <source>and after that any tests inside your module will captured.</source>
          <target state="translated">그 후에 모듈 내부의 모든 테스트가 캡처됩니다.</target>
        </trans-unit>
        <trans-unit id="1759eff6deec8639c809421ad0c28a76e0ef5cae" translate="yes" xml:space="preserve">
          <source>and also $Config::Config{'scriptdir'}</source>
          <target state="translated">또한 $ Config :: Config { 'scriptdir'}</target>
        </trans-unit>
        <trans-unit id="092a598de52599e5ea26b086e728adfcb8a8f87b" translate="yes" xml:space="preserve">
          <source>and also how strings are parsed by &lt;code&gt;POSIX::strtod()&lt;/code&gt; as numbers:</source>
          <target state="translated">&lt;code&gt;POSIX::strtod()&lt;/code&gt; 가 문자열 을 숫자로 파싱하는 방법도 있습니다.</target>
        </trans-unit>
        <trans-unit id="53d3cfa28bbb90ed936aa07f73ce71dbef9ab3f7" translate="yes" xml:space="preserve">
          <source>and are now removed.</source>
          <target state="translated">이제 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="d7e49eb1b589da099384cdd5bcb2b002b2679a4a" translate="yes" xml:space="preserve">
          <source>and as</source>
          <target state="translated">그리고</target>
        </trans-unit>
        <trans-unit id="f930cc83716047f99549b196c0f6ea5f5c50196e" translate="yes" xml:space="preserve">
          <source>and auxiliary ones</source>
          <target state="translated">그리고 보조적인 것들</target>
        </trans-unit>
        <trans-unit id="0e8dd9b894bf299a78c91001723d0325159a6a91" translate="yes" xml:space="preserve">
          <source>and basic block profiling with gcc, see the latest GNU CC manual. As of gcc 4.8, this is at &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&quot;&gt;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&lt;/a&gt;</source>
          <target state="translated">gcc를 사용한 기본 블록 프로파일 링은 최신 GNU CC 매뉴얼을 참조하십시오. gcc 4.8 현재 &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&quot;&gt;http://gcc.gnu.org/onlinedocs/gcc/Gcov-Intro.html#Gcov-Intro&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="683408934ca5f7f54d4b092ab9879f0a20b670ff" translate="yes" xml:space="preserve">
          <source>and be assured that both &lt;code&gt;$v1&lt;/code&gt; and &lt;code&gt;$v2&lt;/code&gt; will be completely equivalent, down to the same internal representation as well as stringification.</source>
          <target state="translated">&lt;code&gt;$v1&lt;/code&gt; 과 &lt;code&gt;$v2&lt;/code&gt; 는 모두 동일한 내부 표현과 문자열 화까지 완전히 동일합니다.</target>
        </trans-unit>
        <trans-unit id="67ac2d9e2193d40fc9c92b85950de3190240ebb3" translate="yes" xml:space="preserve">
          <source>and be sure to also set the environment variable _C89_CCMODE=1 (exporting _C89_CCMODE=1 is also a good idea for users of GNU make).</source>
          <target state="translated">환경 변수 _C89_CCMODE = 1도 설정해야합니다 (_C89_CCMODE = 1 내보내기는 GNU make 사용자에게도 좋습니다).</target>
        </trans-unit>
        <trans-unit id="cce2b5ee15547d8411b108ac01a1af3d3a13be3a" translate="yes" xml:space="preserve">
          <source>and belong to the user running the program:</source>
          <target state="translated">프로그램을 실행하는 사용자에게 속합니다.</target>
        </trans-unit>
        <trans-unit id="68c1df893d3dfe1344316c80822ce4982fc34977" translate="yes" xml:space="preserve">
          <source>and by default output is displayed inline.</source>
          <target state="translated">기본적으로 출력은 인라인으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9d972577906aa2c316e9c360f92a8897dc203b61" translate="yes" xml:space="preserve">
          <source>and by definition, the solution is noted</source>
          <target state="translated">정의에 따르면 솔루션은</target>
        </trans-unit>
        <trans-unit id="31788a27790e7797ed6a059ba1faefdb6a39e6a9" translate="yes" xml:space="preserve">
          <source>and call</source>
          <target state="translated">전화</target>
        </trans-unit>
        <trans-unit id="2b74bf70fe4b516f104f35b9ee09019d1d9b9441" translate="yes" xml:space="preserve">
          <source>and call it with &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; , it actually opens a pipe, executes the &lt;code&gt;rm&lt;/code&gt; command and reads &lt;code&gt;rm&lt;/code&gt; 's output from that pipe. If you want all items in &lt;code&gt;@ARGV&lt;/code&gt; to be interpreted as file names, you can use the module &lt;code&gt;ARGV::readonly&lt;/code&gt; from CPAN, or use the double bracket:</source>
          <target state="translated">그리고 &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; 호출하십시오. 실제로 파이프를 열고 &lt;code&gt;rm&lt;/code&gt; 명령을 실행하고 해당 파이프에서 &lt;code&gt;rm&lt;/code&gt; 의 출력을 읽습니다 . &lt;code&gt;@ARGV&lt;/code&gt; 의 모든 항목 을 파일 이름으로 해석 하려면 CPAN 의 모듈 &lt;code&gt;ARGV::readonly&lt;/code&gt; 를 사용하거나 이중 괄호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ed8e1672279677e7c443fa4e35e881cd08bac65f" translate="yes" xml:space="preserve">
          <source>and call it with &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt;, it actually opens a pipe, executes the &lt;code&gt;rm&lt;/code&gt; command and reads &lt;code&gt;rm&lt;/code&gt;'s output from that pipe. If you want all items in &lt;code&gt;@ARGV&lt;/code&gt; to be interpreted as file names, you can use the module &lt;code&gt;ARGV::readonly&lt;/code&gt; from CPAN, or use the double bracket:</source>
          <target state="translated">그리고 그것을 &lt;code&gt;perl dangerous.pl 'rm -rfv *|'&lt;/code&gt; , 실제로 파이프를 열고 &lt;code&gt;rm&lt;/code&gt; 명령을 실행하고 해당 파이프에서 &lt;code&gt;rm&lt;/code&gt; 의 출력을 읽습니다 . &lt;code&gt;@ARGV&lt;/code&gt; 의 모든 항목 을 파일 이름으로 해석 하려면 CPAN의 &lt;code&gt;ARGV::readonly&lt;/code&gt; 모듈을 사용하거나 이중 대괄호를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdadfa4e29a3387e757303b12e15c9ac8ce26389" translate="yes" xml:space="preserve">
          <source>and calling &lt;code&gt;Perl_mro_register&lt;/code&gt; :</source>
          <target state="translated">그리고 &lt;code&gt;Perl_mro_register&lt;/code&gt; 호출 :</target>
        </trans-unit>
        <trans-unit id="97d83cc471050475a0b50af49687e52d38b0d68f" translate="yes" xml:space="preserve">
          <source>and calling &lt;code&gt;Perl_mro_register&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Perl_mro_register&lt;/code&gt; 호출 :</target>
        </trans-unit>
        <trans-unit id="2dd76bc4189d4946771f4e716aa51df3f1240631" translate="yes" xml:space="preserve">
          <source>and choose your favorite parameters. After a few downloads running the &lt;code&gt;hosts&lt;/code&gt; command will probably assist you in choosing the best mirror sites.</source>
          <target state="translated">원하는 매개 변수를 선택하십시오. &lt;code&gt;hosts&lt;/code&gt; 명령을 실행하는 몇 번의 다운로드 후에는 최상의 미러 사이트를 선택하는 데 도움이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="a8c3f91d52eab0005bf1821357c56257522b3d7e" translate="yes" xml:space="preserve">
          <source>and concatenate it to</source>
          <target state="translated">그것을 연결</target>
        </trans-unit>
        <trans-unit id="c051c7458ffbb815effdc3cf5a7ec6686e7a7784" translate="yes" xml:space="preserve">
          <source>and continue working on other things while you wait a day or two, keeping an eye on the results reported for your smoke-me branch at &lt;a href=&quot;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&quot;&gt;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&quot;&gt;http://perl.develop-help.com/?b=smoke-me/tonyc/win32state&lt;/a&gt; 에서 smoke-me 브랜치에 대해보고 된 결과를 주시하면서 하루나 이틀을 기다리는 동안 다른 작업을 계속합니다 . .</target>
        </trans-unit>
        <trans-unit id="2ff89dcb837ced149fb6b5224ee21778d994fc8a" translate="yes" xml:space="preserve">
          <source>and continuing to the first nul. These octets are interpreted as either UTF-8 or Latin-1, according to whether the &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; flag is set in</source>
          <target state="translated">그리고 첫 번째 널까지 계속합니다. 이 8 진수는 &lt;code&gt;LEX_STUFF_UTF8&lt;/code&gt; 플래그 설정 여부에 따라 UTF-8 또는 Latin-1로 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b4b74100dbb60dc7d23a3f17b465ea647875121" translate="yes" xml:space="preserve">
          <source>and correct anything wrong you find there. I do not expect it is needed anywhere.</source>
          <target state="translated">당신이 거기에있는 잘못을 정정하십시오. 나는 그것이 어디서나 필요하다고 기대하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bb8265b77d7b17930f211c047d509c9bcd48c5f5" translate="yes" xml:space="preserve">
          <source>and decide that's quite enough for you?</source>
          <target state="translated">그 정도면 충분하다고 생각하십니까?</target>
        </trans-unit>
        <trans-unit id="c0554b9855c1b4a6c0834e79b079617190a40bcb" translate="yes" xml:space="preserve">
          <source>and dies. Therefore the SunOS 4.1 hints file explicitly sets the ld to be</source>
          <target state="translated">죽는다. 따라서 SunOS 4.1 힌트 파일은 ld를 명시 적으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c349b5535bebf3c0ad16ae9e94907ffd5cecb983" translate="yes" xml:space="preserve">
          <source>and divines whether they passed or failed based on their output to STDOUT (details above). It prints out each individual test which failed along with a summary report and a how long it all took.</source>
          <target state="translated">그리고 STDOUT에 대한 출력에 기초하여 그들이 통과했는지 실패했는지를 신성하게한다 (상세한 내용). 실패한 각 개별 테스트를 요약 보고서 및 모든 시간이 소요되는 시간과 함께 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="a5fd741bd9f2a58aedde00aa2b92b647f2b4c3d7" translate="yes" xml:space="preserve">
          <source>and doing a bunch of messy heuristics on the resulting</source>
          <target state="translated">그리고 결과에 대한 지저분한 휴리스틱을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="79a24dfc42595a13dbd8f77aa55520c5f2654ac8" translate="yes" xml:space="preserve">
          <source>and earlier, the default setting is based on whether or not $prefix contains the string &lt;code&gt;perl&lt;/code&gt; .</source>
          <target state="translated">이전의 기본 설정은 $ prefix에 &lt;code&gt;perl&lt;/code&gt; 문자열이 포함되어 있는지 여부를 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="03998ea5d1393f812d9c7c958e57b9267ac98cf0" translate="yes" xml:space="preserve">
          <source>and earlier, the default setting is based on whether or not $prefix contains the string &lt;code&gt;perl&lt;/code&gt;.</source>
          <target state="translated">이전에 기본 설정은 $ prefix에 문자열 &lt;code&gt;perl&lt;/code&gt; 이 포함되어 있는지 여부에 따라 달라 집니다.</target>
        </trans-unit>
        <trans-unit id="ca01c68b157f542551615a222bf4d40f1c92ab92" translate="yes" xml:space="preserve">
          <source>and ending at</source>
          <target state="translated">그리고 끝나는</target>
        </trans-unit>
        <trans-unit id="edc511aaa0ea9a61210a5a9707c8841bf5cc309d" translate="yes" xml:space="preserve">
          <source>and even</source>
          <target state="translated">심지어</target>
        </trans-unit>
        <trans-unit id="883426c92d8b38847917d43ce3dd00b6254d2bed" translate="yes" xml:space="preserve">
          <source>and expect C to be B, because the bearing constantly changes when going from A to B (except in some special case like the meridians or the circles of latitudes) and in great_circle_destination() one gives a &lt;b&gt;constant&lt;/b&gt; bearing to follow.</source>
          <target state="translated">A에서 B로 갈 때 베어링이 끊임없이 변경되기 때문에 (자오선이나 위도의 원과 같은 특별한 경우는 제외) great_circle_destination ()에서는 &lt;b&gt;계속&lt;/b&gt; 따라야 할 베어링을 제공하기 때문에 C는 B가 될 것으로 예상합니다 .</target>
        </trans-unit>
        <trans-unit id="3ee040c85734bc842f7986baed3ad3d4c7a277c5" translate="yes" xml:space="preserve">
          <source>and extension authors. If your extension is dynamically loaded, DynaLoader creates</source>
          <target state="translated">확장 저자. 확장이 동적으로로드되면 DynaLoader는</target>
        </trans-unit>
        <trans-unit id="d176fa9bd5235077e8d5cc1dc829719336ead81b" translate="yes" xml:space="preserve">
          <source>and fields. So far, the functions of &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; are unaware of any classes, which I consider a feature. Therefore &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; doesn't address the serialization problems.</source>
          <target state="translated">그리고 분야. 지금까지 &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; 의 기능은 기능을 고려한 클래스를 인식하지 못합니다. 따라서 &lt;code&gt;Hash::Util::FieldHash&lt;/code&gt; 는 직렬화 문제를 해결하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6420fc98ccacfbcabdd1358ce52dbb2f18c3b757" translate="yes" xml:space="preserve">
          <source>and for &lt;code&gt;_&lt;/code&gt; to explicitly populate the object using the unexported and undocumented populate() function with CORE::stat():</source>
          <target state="translated">과에 대한 &lt;code&gt;_&lt;/code&gt; 명시 적으로 CORE와 안 export 및 문서화되지 않은 채우기 () 함수 : 합계 ()를 사용하여 객체를 채우려면 :</target>
        </trans-unit>
        <trans-unit id="9ecd2684e5d35794eb09b10452dc598bb0f3ca39" translate="yes" xml:space="preserve">
          <source>and for writing:</source>
          <target state="translated">그리고 쓰기 :</target>
        </trans-unit>
        <trans-unit id="c07a028d906529efcbd2ee19e8498ca6b129b522" translate="yes" xml:space="preserve">
          <source>and from Latin-1 code points to EBCDIC code points</source>
          <target state="translated">라틴 -1 코드 포인트에서 EBCDIC 코드 포인트까지</target>
        </trans-unit>
        <trans-unit id="eac61126c0f717dca5fc46f13a224a50728951e2" translate="yes" xml:space="preserve">
          <source>and get &quot;pi is 3.141592&quot;.</source>
          <target state="translated">&quot;pi is 3.141592&quot;를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="3f19bd785ca0e403ace13135f2e7d2f6fda0fce7" translate="yes" xml:space="preserve">
          <source>and get &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; in &lt;code&gt;$match&lt;/code&gt; , since &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; is primary equal to &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml;&lt;code&gt;SS&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; 는 기본적으로 &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml; &lt;code&gt;SS&quot;&lt;/code&gt; 와 같으 므로 &lt;code&gt;$match&lt;/code&gt; 에서 &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; 를 얻 습니다 .</target>
        </trans-unit>
        <trans-unit id="30e2ab067dfeada9aac999f0ab03b60920ee2de6" translate="yes" xml:space="preserve">
          <source>and get &lt;code&gt;&quot;mu&lt;/code&gt;&amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; in &lt;code&gt;$match&lt;/code&gt;, since &lt;code&gt;&quot;mu&lt;/code&gt;&amp;szlig;&lt;code&gt;&quot;&lt;/code&gt; is primary equal to &lt;code&gt;&quot;M&lt;/code&gt;&amp;uuml;&lt;code&gt;SS&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; 가 &lt;code&gt;&quot;M&lt;/code&gt; &amp;uuml; &lt;code&gt;SS&quot;&lt;/code&gt; 와 동일한 기본 이므로 &lt;code&gt;$match&lt;/code&gt; 에서 &lt;code&gt;&quot;mu&lt;/code&gt; &amp;szlig; &lt;code&gt;&quot;&lt;/code&gt; 를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="17094f04dd71da09c7e552c076f1634e82049f36" translate="yes" xml:space="preserve">
          <source>and have it work portably.</source>
          <target state="translated">휴대하게 작동하도록합니다.</target>
        </trans-unit>
        <trans-unit id="a5a8ee21b9af7088e79e9b68f8de88da612fb525" translate="yes" xml:space="preserve">
          <source>and have some pending arguments such as header-file names. This is ok:</source>
          <target state="translated">헤더 파일 이름과 같은 보류중인 인수가 있습니다. 괜찮습니다 :</target>
        </trans-unit>
        <trans-unit id="f55ef6259b72177a1f2a8e8d3b0d9adc8edfb742" translate="yes" xml:space="preserve">
          <source>and have this magically inflated to the first form. Among the advantages of such representation, that would lead to smaller files, less prone to mistyping or mispasting, and handy to someone translating it which can simply copy the main lexicon and enter the translation instead of having to remove the value first.</source>
          <target state="translated">그리고 이것을 첫 번째 형태로 마술처럼 부 풀리게합니다. 이러한 표현의 장점 중에는 파일 크기가 작아지고 잘못 입력하거나 잘못 붙여 넣는 일이 적으며, 먼저 값을 제거 할 필요없이 단순히 주요 어휘를 복사하고 번역을 입력 할 수있는 번역하는 사람에게 편리합니다.</target>
        </trans-unit>
        <trans-unit id="d2a6339505fec77b2c331da5c4ce78372f108fa3" translate="yes" xml:space="preserve">
          <source>and hence print:</source>
          <target state="translated">따라서 인쇄 :</target>
        </trans-unit>
        <trans-unit id="43fb62ee614e6b7e422fd695927ade0aa52a2d8a" translate="yes" xml:space="preserve">
          <source>and here is a C function to call it</source>
          <target state="translated">여기에 그것을 호출하는 C 함수가 있습니다</target>
        </trans-unit>
        <trans-unit id="5091999bd97a90f1245944c2fb5cff579789d3a7" translate="yes" xml:space="preserve">
          <source>and here is a C function to call it.</source>
          <target state="translated">그리고 이것을 호출하는 C 함수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b815eb7a25ba6650e8aed21b42d3225c5665f92" translate="yes" xml:space="preserve">
          <source>and if a method-name was given, it is invoked as:</source>
          <target state="translated">method-name이 주어지면 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="42ffaa9f2dc8d858771e32e04987db06d831ce8f" translate="yes" xml:space="preserve">
          <source>and if you are not happy with either the description or the patch itself you can fix it up by editing the files once more and then issue:</source>
          <target state="translated">설명이나 패치 자체가 만족스럽지 않은 경우 파일을 한 번 더 편집하여 수정 한 다음 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc0088cffc94d4cfc5e772584e99d2d2392934ec" translate="yes" xml:space="preserve">
          <source>and if you want to compress each file one at a time, this will do the trick</source>
          <target state="translated">각 파일을 한 번에 하나씩 압축하려면 트릭을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="99ebfac46815750e967685ef0c045d72e263a9e9" translate="yes" xml:space="preserve">
          <source>and in</source>
          <target state="translated">그리고</target>
        </trans-unit>
        <trans-unit id="44657e3f016b01b57158c00249f2d346bead43ae" translate="yes" xml:space="preserve">
          <source>and in each case, $v1 and $v2 will be identical. NOTE: if you create a new object using an existing object like this:</source>
          <target state="translated">그리고 각각의 경우 $ v1과 $ v2는 동일합니다. 참고 : 다음과 같은 기존 개체를 사용하여 새 개체를 만드는 경우 :</target>
        </trans-unit>
        <trans-unit id="633f5443d1716f6d61c0fc8d8b08ec73cf1d7a57" translate="yes" xml:space="preserve">
          <source>and in:</source>
          <target state="translated">그리고 안에 :</target>
        </trans-unit>
        <trans-unit id="1d0130f8a3921bc892b37851ce6cc11bad75e4c1" translate="yes" xml:space="preserve">
          <source>and is</source>
          <target state="translated">그리고</target>
        </trans-unit>
        <trans-unit id="ebbea3f118453a1b7e7d79408e6db651a9e30122" translate="yes" xml:space="preserve">
          <source>and is invoked when you say</source>
          <target state="translated">당신이 말할 때 호출됩니다</target>
        </trans-unit>
        <trans-unit id="7ecd6605c858a1a66d6b614d96b36273cffaf756" translate="yes" xml:space="preserve">
          <source>and is now removed.</source>
          <target state="translated">이제 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="73402b7701fac32d16b3ff7c74498b1589d19a23" translate="yes" xml:space="preserve">
          <source>and is sought only in the current directory.</source>
          <target state="translated">현재 디렉토리에서만 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15dd7cf5f3a3a46ccd4b8609412b5d9ec3d381ec" translate="yes" xml:space="preserve">
          <source>and is typically used to test whether a particular extension is available.</source>
          <target state="translated">일반적으로 특정 확장이 사용 가능한지 테스트하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="040dda9958c7c671c9590ef80fa78defd13909d5" translate="yes" xml:space="preserve">
          <source>and is used like this:</source>
          <target state="translated">다음과 같이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7a0762f239de965ed45f319d1c0a1eb571367472" translate="yes" xml:space="preserve">
          <source>and it always croaks on error.</source>
          <target state="translated">항상 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="37328fc9c48882c8dd3a9ee9675314c5a2fe5451" translate="yes" xml:space="preserve">
          <source>and it is called thusly</source>
          <target state="translated">그리고 그것은 그렇게 불린다</target>
        </trans-unit>
        <trans-unit id="d3bd26589317e43dea5248f9d39772bc7052986f" translate="yes" xml:space="preserve">
          <source>and it will again work (i.e. give the error message as above), even with releases of Perl which do not normally support v-strings (see &lt;a href=&quot;#What-about-v-strings%3F&quot;&gt;&quot;What about v-strings?&quot;&lt;/a&gt; above). This has to do with that fact that &lt;code&gt;use&lt;/code&gt; only checks to see if the second term</source>
          <target state="translated">그것도 일반적으로 지원 V-문자열을하지 않는 펄의 릴리스 (즉, 상기와 같은 오류 메시지를주고) 다시 작업을 것이다 (참조 &lt;a href=&quot;#What-about-v-strings%3F&quot;&gt;&quot;? 무엇 V-문자열에 대해&quot;&lt;/a&gt; 위). 이것은 그 사실과 관련이있다 &lt;code&gt;use&lt;/code&gt; 두 번째 임기가 있는지 만 확인</target>
        </trans-unit>
        <trans-unit id="30dae0c952d8a4bc4211df4fa02a32b80f898a03" translate="yes" xml:space="preserve">
          <source>and it will print:</source>
          <target state="translated">그리고 그것은 인쇄됩니다 :</target>
        </trans-unit>
        <trans-unit id="92f48e8870b365babea517ca9b817b451b407aad" translate="yes" xml:space="preserve">
          <source>and it would import the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; override. But if they said</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 재정의를 가져옵니다 . 하지만 그들이 말하면</target>
        </trans-unit>
        <trans-unit id="cd020e2be0d62eafdf2de8f7e295b52a42346c0a" translate="yes" xml:space="preserve">
          <source>and it would import the &lt;code&gt;open&lt;/code&gt; override. But if they said</source>
          <target state="translated">&lt;code&gt;open&lt;/code&gt; 오버라이드를 가져옵니다 . 그러나 그들이 말하면</target>
        </trans-unit>
        <trans-unit id="c15e27e77f8641be998c0928e2456baabe13d2d3" translate="yes" xml:space="preserve">
          <source>and look for 'undef' to find the unsupported APIs (or from Perl use Config).</source>
          <target state="translated">지원되지 않는 API (또는 Perl use Config)를 찾으려면 'undef'를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="d0408bb76ba414190a2d1aabc2693a0c0369eb0d" translate="yes" xml:space="preserve">
          <source>and managing the</source>
          <target state="translated">그리고 관리</target>
        </trans-unit>
        <trans-unit id="6d7251c76d8c565a4c8c07c1d963ea078e2097d6" translate="yes" xml:space="preserve">
          <source>and never returns</source>
          <target state="translated">그리고 절대 반환하지 않습니다</target>
        </trans-unit>
        <trans-unit id="ffbc147df069ca6800db6b624cd3c1abcb34c6b3" translate="yes" xml:space="preserve">
          <source>and no matter which sort of shell it's called from, the Perl program will read from the file</source>
          <target state="translated">어떤 종류의 쉘에서 호출하든 Perl 프로그램은 파일에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="2f3522d8409fab2c8bd7a9a935e5958b1545b923" translate="yes" xml:space="preserve">
          <source>and not</source>
          <target state="translated">그리고 아닙니다</target>
        </trans-unit>
        <trans-unit id="aece363ea57b99203cb8486606d46afddab39c93" translate="yes" xml:space="preserve">
          <source>and not worry about whether the subscripts are reserved words. In the rare event that you do wish to do something like</source>
          <target state="translated">아래 첨자가 예약어인지 걱정하지 않아도됩니다. 드물게 다음과 같은 일을하고 싶은 경우</target>
        </trans-unit>
        <trans-unit id="90867a465b6b8e0350b0a553fb9bdc04f2f044ec" translate="yes" xml:space="preserve">
          <source>and notify &amp;lt;modules@perl.org&amp;gt;.</source>
          <target state="translated">&amp;lt;modules@perl.org&amp;gt;에게 알리십시오.</target>
        </trans-unit>
        <trans-unit id="8af83c9aa94610b6d13646bdcbc7b3b7bc5fb5e5" translate="yes" xml:space="preserve">
          <source>and notify &amp;lt;modules@perl.org&amp;gt;. This will allow anyone to install your module using the &lt;code&gt;cpan&lt;/code&gt; tool distributed with Perl.</source>
          <target state="translated">&amp;lt;modules@perl.org&amp;gt;에 알립니다. 이렇게하면 누구나 Perl과 함께 배포 된 &lt;code&gt;cpan&lt;/code&gt; 도구를 사용하여 모듈을 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4fe6790d00afd2e85336f040031f25d3b71777a0" translate="yes" xml:space="preserve">
          <source>and omit the second call to &lt;code&gt;A::foo&lt;/code&gt; (since it would not be distinct from the first call to &lt;code&gt;A::foo&lt;/code&gt; ).</source>
          <target state="translated">그리고 두 번째 호출을 생략 &lt;code&gt;A::foo&lt;/code&gt; (가 처음 호출 구별되지 않을 것 때문에 &lt;code&gt;A::foo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="537e5b1e32fc9c12c6bbe5a5156080d4c53fe0d3" translate="yes" xml:space="preserve">
          <source>and omit the second call to &lt;code&gt;A::foo&lt;/code&gt; (since it would not be distinct from the first call to &lt;code&gt;A::foo&lt;/code&gt;).</source>
          <target state="translated">그리고 두 번째 호출을 생략 &lt;code&gt;A::foo&lt;/code&gt; (가 처음 호출 구별되지 않을 것 때문에 &lt;code&gt;A::foo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="adeced66d67fcec42518c7d43125b26bcafca512" translate="yes" xml:space="preserve">
          <source>and on &lt;code&gt;PATH&lt;/code&gt; . To find arguments for these scripts Perl uses a different algorithm than</source>
          <target state="translated">그리고 &lt;code&gt;PATH&lt;/code&gt; 에 . 이 스크립트에 대한 인수를 찾으려면 Perl은 다른 알고리즘을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d257a85ffc7f0eefbfba0429924719d4108aeae8" translate="yes" xml:space="preserve">
          <source>and on &lt;code&gt;PATH&lt;/code&gt;. To find arguments for these scripts Perl uses a different algorithm than</source>
          <target state="translated">및 &lt;code&gt;PATH&lt;/code&gt; . 이러한 스크립트에 대한 인수를 찾기 위해 Perl은 다음과 다른 알고리즘을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2af9cc5d9a90aea15c856967222ce6dfd62554a0" translate="yes" xml:space="preserve">
          <source>and on already open streams, use &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">이미 열린 스트림에서는 &lt;code&gt;&lt;a href=&quot;functions/binmode&quot;&gt;binmode()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de1a2338b9dbeae27bb5d53c9b69dde4073fcc5c" translate="yes" xml:space="preserve">
          <source>and on already open streams, use &lt;code&gt;binmode()&lt;/code&gt;:</source>
          <target state="translated">이미 열린 스트림에서는 &lt;code&gt;binmode()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c28d75bfe8ef3f77376f1de537f6ababec7c8f5" translate="yes" xml:space="preserve">
          <source>and one can inspect the value in debugger using all the possible methods.</source>
          <target state="translated">가능한 모든 방법을 사용하여 디버거에서 값을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e3a44de13daa4279c477d6ae9ad2ae6048934f2" translate="yes" xml:space="preserve">
          <source>and only &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$!&lt;/a&gt; and &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$^E&lt;/a&gt; will be locale aware. Everything else is unaffected.</source>
          <target state="translated">그리고 단지 &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$! &lt;/a&gt;그리고 &lt;a href=&quot;perlvar#%24EXTENDED_OS_ERROR&quot;&gt;$는 ^ E는&lt;/a&gt; 로케일을 인식 할 것이다. 다른 모든 것은 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3dfb4545fb1273b004ecd4b9a59f733f64c1cedd" translate="yes" xml:space="preserve">
          <source>and only if the condition is true. &lt;code&gt;unless&lt;/code&gt; is the opposite, it executes the statement</source>
          <target state="translated">조건이 참인 경우에만. 반대의 &lt;code&gt;unless&lt;/code&gt; 가 아니면 명령문을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="45c260afb98f09cfba9f5207fc8117fcdbcb8feb" translate="yes" xml:space="preserve">
          <source>and only the first of these match:</source>
          <target state="translated">다음 중 첫 번째 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="32e3341449eff9e33d610a484aa1f31d028b2c36" translate="yes" xml:space="preserve">
          <source>and optimizing the final combined regexp.</source>
          <target state="translated">및 최종 결합 정규식을 최적화하는 단계.</target>
        </trans-unit>
        <trans-unit id="899fcac99a7dec6812e6bf7aee73eeaf10908c82" translate="yes" xml:space="preserve">
          <source>and other auto-generated files.</source>
          <target state="translated">다른 자동 생성 파일.</target>
        </trans-unit>
        <trans-unit id="c684acd53848e74a7154abad5efe0e096b7463d3" translate="yes" xml:space="preserve">
          <source>and part</source>
          <target state="translated">그리고 부분</target>
        </trans-unit>
        <trans-unit id="baf743f636b4f630102db82e79bec10fce338b9e" translate="yes" xml:space="preserve">
          <source>and pass &lt;code&gt;$buf&lt;/code&gt; to your send routine. Some protocols demand that the count should include the length of the count itself: then just add 4 to the data length. (But make sure to read &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;&quot;Lengths and Widths&quot;&lt;/a&gt; before you really code this!)</source>
          <target state="translated">보내기 루틴에 &lt;code&gt;$buf&lt;/code&gt; 를 전달 합니다. 일부 프로토콜은 카운트에 카운트 자체의 길이를 포함해야한다고 요구합니다. 그런 다음 데이터 길이에 4를 더하면됩니다. (하지만 실제로 코딩하기 전에 &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;&quot;길이 및 너비&quot;&lt;/a&gt; 를 읽으십시오 !)</target>
        </trans-unit>
        <trans-unit id="d67e5dc377fc2536598e164820c52f727da6d6ab" translate="yes" xml:space="preserve">
          <source>and pass &lt;code&gt;$buf&lt;/code&gt; to your send routine. Some protocols demand that the count should include the length of the count itself: then just add 4 to the data length. (But make sure to read &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;Lengths and Widths&lt;/a&gt; before you really code this!)</source>
          <target state="translated">&lt;code&gt;$buf&lt;/code&gt; 를 send 루틴으로 전달 하십시오. 일부 프로토콜은 카운트 자체에 카운트 길이가 포함되도록 요구합니다. 데이터 길이에 4를 추가하십시오. (그러나 실제로 코딩하기 전에 &lt;a href=&quot;#Lengths-and-Widths&quot;&gt;길이와 너비&lt;/a&gt; 를 읽으십시오 !)</target>
        </trans-unit>
        <trans-unit id="16984fda388c94884a0564bd0f04655b5c3813f1" translate="yes" xml:space="preserve">
          <source>and passes that to the replacement &lt;a href=&quot;universal#VERSION&quot;&gt;UNIVERSAL::VERSION&lt;/a&gt;. This is not true in Perl 5.005_04, however, so you are &lt;b&gt;strongly encouraged&lt;/b&gt; to always use a Decimal version in your code, even for those versions of Perl which support the Dotted-Decimal version.</source>
          <target state="translated">이를 대체 &lt;a href=&quot;universal#VERSION&quot;&gt;UNIVERSAL :: VERSION에&lt;/a&gt; 전달합니다 . 그러나 Perl 5.005_04에서는 사실이 아니므로 Dotted-Decimal 버전을 지원하는 Perl 버전의 경우에도 코드에서 항상 Decimal 버전을 사용하는 &lt;b&gt;것이 좋습니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="d58ccce831f8e9123bc9e80b9e66f8248b980f4c" translate="yes" xml:space="preserve">
          <source>and process time (in UNIX-like systems the sum of</source>
          <target state="translated">프로세스 시간 (UNIX 계열 시스템에서</target>
        </trans-unit>
        <trans-unit id="3fd6226fa225944b6194d79ef250caae14aa04c4" translate="yes" xml:space="preserve">
          <source>and produces results. If you need to customize its behaviour you should probably familiarize yourself with the source first. Enough lecturing.</source>
          <target state="translated">결과를 생성합니다. 동작을 사용자 정의해야하는 경우 먼저 소스를 숙지해야합니다. 충분한 강의.</target>
        </trans-unit>
        <trans-unit id="bc18719ba2c64a9b71c32941b959a3b37a8e9ccb" translate="yes" xml:space="preserve">
          <source>and programs into</source>
          <target state="translated">프로그램</target>
        </trans-unit>
        <trans-unit id="04b3f3eb12446afa59ba04e34128aaa73360c8fb" translate="yes" xml:space="preserve">
          <source>and puts the</source>
          <target state="translated">그리고 넣어</target>
        </trans-unit>
        <trans-unit id="1050864b9d5630870510b4c5ed9d494b62e3e1ac" translate="yes" xml:space="preserve">
          <source>and recompile perl</source>
          <target state="translated">펄을 다시 컴파일</target>
        </trans-unit>
        <trans-unit id="04dc98e6e6ecb08df2b06a8c82f091b8669d8771" translate="yes" xml:space="preserve">
          <source>and return a list anyway. If so, then only the last element of the list will be returned.</source>
          <target state="translated">어쨌든 목록을 반환하십시오. 그렇다면 목록의 마지막 요소 만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="bea3ea10f617b4820cdc83a6257e4c5d2c2ed531" translate="yes" xml:space="preserve">
          <source>and returns a sequence of octets.</source>
          <target state="translated">일련의 옥텟을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="69bdd065458a753e9be3338a81aee1403915b245" translate="yes" xml:space="preserve">
          <source>and returns this:</source>
          <target state="translated">이것을 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="05a85acb845c8558aabbfdc75bce2f31eacc6f3d" translate="yes" xml:space="preserve">
          <source>and runs it through the pager specified in &lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$CPAN::Config-&amp;gt;{pager}&lt;/code&gt; 지정된 호출기를 통해 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="88b01bfc16080bd793c508ce92be40c54c4e0d32" translate="yes" xml:space="preserve">
          <source>and see whether they list something resembling these</source>
          <target state="translated">그들이 이것과 유사한 것을 나열하는지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="9407dd89aa838f3db9bc1ee001171ae499cdf58c" translate="yes" xml:space="preserve">
          <source>and send a line of data to it this way:</source>
          <target state="translated">이런 식으로 데이터 라인을 보내십시오.</target>
        </trans-unit>
        <trans-unit id="834b5f4699ca8ef5bed1ec71205174ca1aa071f2" translate="yes" xml:space="preserve">
          <source>and should never be used lightly.</source>
          <target state="translated">가볍게 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cc72a00bf5f82a31e19586f8d5648eeb9609f807" translate="yes" xml:space="preserve">
          <source>and so on.</source>
          <target state="translated">등등.</target>
        </trans-unit>
        <trans-unit id="9db3feda6610247fb93d16581c9f1e324a0dc3ce" translate="yes" xml:space="preserve">
          <source>and so on. Note how the trailing sub-version is automatically stripped from the version.</source>
          <target state="translated">등등. 후행 하위 버전이 버전에서 자동으로 제거되는 방법에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="0b888a2f960617a6f6c366d202b424cbea99cdde" translate="yes" xml:space="preserve">
          <source>and some C to call it</source>
          <target state="translated">그리고 일부 C는 그것을 호출합니다</target>
        </trans-unit>
        <trans-unit id="a1e18734fb68f76855ac9d83f86033f89bcb6297" translate="yes" xml:space="preserve">
          <source>and someone has been calling it with an array or expression returning a list:</source>
          <target state="translated">누군가가 목록을 반환하는 배열이나 표현식으로 그것을 호출했습니다.</target>
        </trans-unit>
        <trans-unit id="171f6cb35d6dde5ce392dcbd570d9c1d7297604f" translate="yes" xml:space="preserve">
          <source>and specify &lt;code&gt;$which&lt;/code&gt; elsewhere.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 다른 곳에 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="c88d797f97ab7980940e6fbc2a0b1b0f03bf45ed" translate="yes" xml:space="preserve">
          <source>and start with this template:</source>
          <target state="translated">이 템플릿으로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="60a1a53956f7f1b07c9ff7e2cf048e0d61cf0aff" translate="yes" xml:space="preserve">
          <source>and still have it work under all the modes Perl could have been compiled with.</source>
          <target state="translated">그리고 Perl이 컴파일 할 수있는 모든 모드에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="efa9256e01727af0a796fee5e83fdf8c85c90176" translate="yes" xml:space="preserve">
          <source>and still work for Chinese and Arabic and Italian</source>
          <target state="translated">여전히 중국어, 아랍어 및 이탈리아어에서 일하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="b93c07a562c2c0c86991f560b275725c74228f04" translate="yes" xml:space="preserve">
          <source>and suffix of C&amp;lt;.dat&amp;gt; would generate a file similar to F</source>
          <target state="translated">C &amp;lt;.dat&amp;gt;의 접미사는 F와 유사한 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="58b0b8a5933189f91ce79bd5aaa4c4a91a53f4c2" translate="yes" xml:space="preserve">
          <source>and symbolic sub references</source>
          <target state="translated">및 상징적 하위 참조</target>
        </trans-unit>
        <trans-unit id="c8bd05940ef361af618d2f58d8ef228c2dc1eee1" translate="yes" xml:space="preserve">
          <source>and that the default flags are kept in a global C variable &lt;code&gt;default_flags&lt;/code&gt; . Suppose that you want to create an interface which is called as</source>
          <target state="translated">기본 플래그는 전역 C 변수 &lt;code&gt;default_flags&lt;/code&gt; 에 유지됩니다 . 다음과 같이 호출되는 인터페이스를 작성한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="bec8647d360da8a4d06b873bbf2b1cbefbef0dbf" translate="yes" xml:space="preserve">
          <source>and that the default flags are kept in a global C variable &lt;code&gt;default_flags&lt;/code&gt;. Suppose that you want to create an interface which is called as</source>
          <target state="translated">기본 플래그는 전역 C 변수 &lt;code&gt;default_flags&lt;/code&gt; 에 보관됩니다 . 다음과 같이 호출되는 인터페이스를 작성한다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="97ed4c8cfdc4058f64674afafa62d45ea754ba4b" translate="yes" xml:space="preserve">
          <source>and that will set this class as the default formatter to run when you do &lt;code&gt;perldoc whatever&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;perldoc whatever&lt;/code&gt; 할 때이 클래스를 기본 포맷터로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="fa7dd189212fac90750c7d9f5b37d181432e6b6a" translate="yes" xml:space="preserve">
          <source>and that will set this class as the default formatter to run when you do &lt;code&gt;perldoc whatever&lt;/code&gt;.</source>
          <target state="translated">그리고 그것은 당신이 &lt;code&gt;perldoc whatever&lt;/code&gt; 할 때 실행할 기본 포맷터로이 클래스를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="38d402cb5ba5ced669d83f33b900f232ec58d72a" translate="yes" xml:space="preserve">
          <source>and the</source>
          <target state="translated">그리고</target>
        </trans-unit>
        <trans-unit id="d6a3e1044d78ff80b32d4053c48546a54399bb4a" translate="yes" xml:space="preserve">
          <source>and the (compiled)</source>
          <target state="translated">그리고 (컴파일 된)</target>
        </trans-unit>
        <trans-unit id="7709e2962fcebb7a32dface22926131efe462333" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;&quot;-&quot;&lt;/code&gt; shouldn't be the first character. If you want to be hypercorrect, stay case-insensitive and within the 8.3 naming convention (all the files and directories have to be unique within one directory if their names are lowercased and truncated to eight characters before the &lt;code&gt;.&lt;/code&gt;, if any, and to three characters after the &lt;code&gt;.&lt;/code&gt;, if any). (And do not use &lt;code&gt;.&lt;/code&gt;s in directory names.)</source>
          <target state="translated">그리고 &lt;code&gt;&quot;-&quot;&lt;/code&gt; 첫 번째 문자 안된다. 과도하게 수정하려면 대소 문자를 구분하지 않고 8.3 이름 지정 규칙 내에서 유지하십시오 (모든 파일과 디렉토리는 이름이 소문자로되어 있고 &lt;code&gt;.&lt;/code&gt; (있는 경우) 및 3 개로 8 문자로 잘린 경우 하나의 디렉토리 내에서 고유해야합니다) &lt;code&gt;.&lt;/code&gt; 뒤에 나오는 문자 ). 디렉토리 이름에는 .s를 사용하지 마십시오 &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d66f33f291aa497e1fbb1cea751208ffbc34985" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;S_IF*&lt;/code&gt; functions are</source>
          <target state="translated">상기 &lt;code&gt;S_IF*&lt;/code&gt; 기능은</target>
        </trans-unit>
        <trans-unit id="2942a15e2cfe5df5d7b4806203036ff2059365fd" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;build&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">그리고 당신 의 &lt;code&gt;prereqs&lt;/code&gt; 필드의 &lt;code&gt;build&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab5709809a705fe3cbf34a47d36a8f9e3b151b2f" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;configure&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">그리고 &lt;code&gt;configure&lt;/code&gt; 의가 &lt;code&gt;prereqs&lt;/code&gt; 의 필드를하여</target>
        </trans-unit>
        <trans-unit id="02c4a9e6fa1ed7552c9cc696dccfac8693bb8d07" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;padadd_STATE&lt;/code&gt; flag get added to</source>
          <target state="translated">그리고 &lt;code&gt;padadd_STATE&lt;/code&gt; 의 플래그에 추가됩니다</target>
        </trans-unit>
        <trans-unit id="3e4685b36d5a4d2703e2682160eabe2135a107d7" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;runtime&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">그리고 당신 의 &lt;code&gt;prereqs&lt;/code&gt; 필드의 &lt;code&gt;runtime&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25ff9d2e379f8fa04204de9723f370d19f946094" translate="yes" xml:space="preserve">
          <source>and the &lt;code&gt;test&lt;/code&gt; of the &lt;code&gt;prereqs&lt;/code&gt; field of your</source>
          <target state="translated">그리고 당신 의 &lt;code&gt;prereqs&lt;/code&gt; 필드의 &lt;code&gt;test&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad51d3bef464cc47afa473cbf58e8f411acbad00" translate="yes" xml:space="preserve">
          <source>and the B part would be serialized by the engine. In &lt;code&gt;STORABLE_thaw&lt;/code&gt; , you would get back the reference to the B' object, deserialized for you.</source>
          <target state="translated">B 부분은 엔진에 의해 직렬화됩니다. 에서 &lt;code&gt;STORABLE_thaw&lt;/code&gt; , 당신은 당신을 위해 직렬화 B 조 '개체에 대한 참조를 다시 얻을 것입니다.</target>
        </trans-unit>
        <trans-unit id="e3947ca45c968c9107ff483423644bfd9b7048e4" translate="yes" xml:space="preserve">
          <source>and the B part would be serialized by the engine. In &lt;code&gt;STORABLE_thaw&lt;/code&gt;, you would get back the reference to the B' object, deserialized for you.</source>
          <target state="translated">B 부분은 엔진에 의해 직렬화됩니다. &lt;code&gt;STORABLE_thaw&lt;/code&gt; 에서는 역 직렬화 된 B '개체에 대한 참조를 다시 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="147f20996051af5faf516917523025a59c3b1223" translate="yes" xml:space="preserve">
          <source>and the anonymous sub used with a</source>
          <target state="translated">익명 하위는</target>
        </trans-unit>
        <trans-unit id="be7ddd8a1c2d20b11344c530e59b1a76ec5867c2" translate="yes" xml:space="preserve">
          <source>and the assignments to &lt;code&gt;@ISA&lt;/code&gt; and &lt;code&gt;@EXPORT_OK&lt;/code&gt; happen immediately, leaving no room for something to get awry or just plain wrong.</source>
          <target state="translated">&lt;code&gt;@ISA&lt;/code&gt; 및 &lt;code&gt;@EXPORT_OK&lt;/code&gt; 에 대한 할당은 즉시 발생하므로 무언가 잘못되거나 명백한 잘못이 생길 여지가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ec3881e38f6bc29241523880e8b6087893781e29" translate="yes" xml:space="preserve">
          <source>and the code for rpcb_gettime() can be rewritten as</source>
          <target state="translated">rpcb_gettime () 코드는 다음과 같이 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0b288947e39526d473e38a00227523ed22a3b40" translate="yes" xml:space="preserve">
          <source>and the context and data stacks, as shown by &lt;code&gt;-Dstv&lt;/code&gt; , look like:</source>
          <target state="translated">&lt;code&gt;-Dstv&lt;/code&gt; 로 표시된 컨텍스트 및 데이터 스택 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a6d1cc33cbc00adad1eb3a8c54c6a3dabc6fbf90" translate="yes" xml:space="preserve">
          <source>and the context and data stacks, as shown by &lt;code&gt;-Dstv&lt;/code&gt;, look like:</source>
          <target state="translated">&lt;code&gt;-Dstv&lt;/code&gt; 로 표시된 컨텍스트 및 데이터 스택 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1640149c077909847c703b01d4586d4955345b69" translate="yes" xml:space="preserve">
          <source>and the data type of the corresponding data element. These items are in parentheses, brackets and braces, respectively.</source>
          <target state="translated">및 해당 데이터 요소의 데이터 유형. 이러한 항목은 각각 괄호, 대괄호 및 중괄호 안에 있습니다.</target>
        </trans-unit>
        <trans-unit id="0053caf8d86bff52b61e0db6e20570501321030d" translate="yes" xml:space="preserve">
          <source>and the decoding is</source>
          <target state="translated">디코딩은</target>
        </trans-unit>
        <trans-unit id="6db487f2363f1808733e361f4f9ef6e4c29bac55" translate="yes" xml:space="preserve">
          <source>and the dual-life modules are in</source>
          <target state="translated">이중 수명 모듈은</target>
        </trans-unit>
        <trans-unit id="701a5fbfcd6a3d0bfbaa14dc1799d0bcc3687760" translate="yes" xml:space="preserve">
          <source>and the first argument of myref() will be a reference to a scalar, an array, a hash, a code, or a glob.</source>
          <target state="translated">myref ()의 첫 번째 인수는 스칼라, 배열, 해시, 코드 또는 glob에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="41644e439068ccf4dd12a38456eb1c0abd4f9ac4" translate="yes" xml:space="preserve">
          <source>and the following code will read the hexdump in and convert it on the fly back into bytes:</source>
          <target state="translated">다음 코드는 16 진수 덤프를 읽고 바이트 단위로 즉시 변환합니다.</target>
        </trans-unit>
        <trans-unit id="50b6d807bc1aa40041d0aec64ce2f373303ab28d" translate="yes" xml:space="preserve">
          <source>and the latter should be used for consistency.</source>
          <target state="translated">후자는 일관성을 위해 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a319d5d5f1db6ffbf62ebbd0eae703d0f1b20336" translate="yes" xml:space="preserve">
          <source>and the method form of &lt;code&gt;isa&lt;/code&gt; for the second:</source>
          <target state="translated">두 번째에 대한 &lt;code&gt;isa&lt;/code&gt; 의 메소드 형식 :</target>
        </trans-unit>
        <trans-unit id="d51a49fa5c4b18f00dbcb9d665d43c1102906852" translate="yes" xml:space="preserve">
          <source>and the newer &lt;a href=&quot;concise&quot;&gt;B::Concise&lt;/a&gt;, &lt;a href=&quot;terse&quot;&gt;B::Terse&lt;/a&gt;.</source>
          <target state="translated">최신 &lt;a href=&quot;concise&quot;&gt;B :: Concise&lt;/a&gt; , &lt;a href=&quot;terse&quot;&gt;B :: Terse&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0101ea36f11aa234346b21c12169ca0fa18afce9" translate="yes" xml:space="preserve">
          <source>and the numeric value of $c becomes 5. However, after calling</source>
          <target state="translated">$ c의 숫자 값은 5가됩니다. 그러나</target>
        </trans-unit>
        <trans-unit id="59496338c48bb851d2fcd377f515a4eb8426caa1" translate="yes" xml:space="preserve">
          <source>and the old 5.005 style threading, or for that matter, to most other threading systems out there, is that by default, no data is shared. When a new Perl thread is created, all the data associated with the current thread is copied to the new thread, and is subsequently private to that new thread! This is similar in feel to what happens when a Unix process forks, except that in this case, the data is just copied to a different part of memory within the same process rather than a real fork taking place.</source>
          <target state="translated">구식 5.005 스타일 스레딩 또는 그 문제에 대한 대부분의 다른 스레딩 시스템은 기본적으로 데이터가 공유되지 않는다는 것입니다. 새 Perl 스레드가 작성되면 현재 스레드와 연관된 모든 데이터가 새 스레드에 복사되고 이후에 해당 새 스레드의 개인 정보입니다! 이것은 유닉스 프로세스가 포크 될 때 발생하는 것과 비슷하지만,이 경우 데이터는 실제 포크가 아니라 동일한 프로세스 내에서 메모리의 다른 부분으로 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="f98e525fd3fa23c9c2e46620627a8148db25bb3f" translate="yes" xml:space="preserve">
          <source>and the process defaults to expand the filespec) and pass the rest of &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt;'s argument to it as parameters. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">프로세스는 기본적으로 파일 사양을 확장하고 나머지 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 인수를 매개 변수로 전달합니다. 토큰에 파일 유형이없고 널 유형의 파일과 일치하는 경우 파일이 &lt;code&gt;MCR&lt;/code&gt; 을 사용하여 호출해야하는 실행 가능 이미지인지 또는 명령 프로 시저로서 DCL에 전달되어야하는 텍스트 파일 인지 판별하려고 시도 합니다. .</target>
        </trans-unit>
        <trans-unit id="52e6b03dd3deb55cd720c99ea46d7d1414b16753" translate="yes" xml:space="preserve">
          <source>and the process defaults to expand the filespec) and pass the rest of &lt;code&gt;exec&lt;/code&gt;'s argument to it as parameters. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">프로세스는 기본적으로 filespec을 확장하고) 나머지 &lt;code&gt;exec&lt;/code&gt; 인수를 매개 변수로 전달합니다. 토큰에 파일 유형이없고 널 유형의 파일과 일치하는 경우 파일이 &lt;code&gt;MCR&lt;/code&gt; 을 사용하여 호출해야하는 실행 가능 이미지인지 또는 명령 프로 시저로 DCL에 전달되어야하는 텍스트 파일 인지 판별하려고 시도 합니다. .</target>
        </trans-unit>
        <trans-unit id="ddacafb3c506d7d636313e8cd8381b88b300fc0f" translate="yes" xml:space="preserve">
          <source>and the process defaults, and if successful, the resulting file is invoked via &lt;code&gt;MCR&lt;/code&gt; . This allows you to invoke an image directly simply by passing the file specification to &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, a common Unixish idiom. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">프로세스 기본값이며 성공하면 &lt;code&gt;MCR&lt;/code&gt; 을 통해 결과 파일이 호출됩니다 . 이를 통해 파일 사양을 일반적인 Unixish 관용구 인 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 으로 전달하여 이미지를 직접 호출 할 수 있습니다 . 토큰에 파일 유형이없고 널 유형의 파일과 일치하는 경우 파일이 &lt;code&gt;MCR&lt;/code&gt; 을 사용하여 호출해야하는 실행 가능 이미지인지 또는 명령 프로 시저로서 DCL에 전달되어야하는 텍스트 파일 인지 판별하려고 시도 합니다. .</target>
        </trans-unit>
        <trans-unit id="4376c508e021bef4c1bf654245d8e2b94bc70fb9" translate="yes" xml:space="preserve">
          <source>and the process defaults, and if successful, the resulting file is invoked via &lt;code&gt;MCR&lt;/code&gt;. This allows you to invoke an image directly simply by passing the file specification to &lt;code&gt;system&lt;/code&gt;, a common Unixish idiom. If the token has no file type, and matches a file with null type, then an attempt is made to determine whether the file is an executable image which should be invoked using &lt;code&gt;MCR&lt;/code&gt; or a text file which should be passed to DCL as a command procedure.</source>
          <target state="translated">프로세스 기본값이며 성공하면 결과 파일이 &lt;code&gt;MCR&lt;/code&gt; 을 통해 호출됩니다 . 이렇게하면 일반적인 Unixish 관용구 인 &lt;code&gt;system&lt;/code&gt; 에 파일 사양을 전달하여 이미지를 직접 호출 할 수 있습니다 . 토큰에 파일 유형이없고 널 유형의 파일과 일치하는 경우 파일이 &lt;code&gt;MCR&lt;/code&gt; 을 사용하여 호출해야하는 실행 가능 이미지인지 또는 명령 프로 시저로 DCL에 전달되어야하는 텍스트 파일 인지 판별하려고 시도 합니다. .</target>
        </trans-unit>
        <trans-unit id="01a7d35d5fca09ca87a957bce5a8e41bd9acadb8" translate="yes" xml:space="preserve">
          <source>and the repeat count is obtained by popping off the last element from the stack. The</source>
          <target state="translated">반복 횟수는 스택에서 마지막 요소를 팝핑하여 얻습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="ffb8c286d177a7fde4b96ec8e58df11a57708992" translate="yes" xml:space="preserve">
          <source>and the result is not what you likely expected. No warnings are generated. If you do string &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;'s within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; , you should instead change the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; line to do something like:</source>
          <target state="translated">결과는 예상했던 것과 다릅니다. 경고가 생성되지 않습니다. &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; 범위 내에서 string &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 을 수행하는 경우 대신 다음과 같이 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 행을 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f06907ff6f1b1adccdd8b649e3519d07224b6273" translate="yes" xml:space="preserve">
          <source>and the result is not what you likely expected. No warnings are generated. If you do string &lt;code&gt;eval&lt;/code&gt;'s within the scope of &lt;code&gt;use locale&lt;/code&gt;, you should instead change the &lt;code&gt;eval&lt;/code&gt; line to do something like:</source>
          <target state="translated">결과는 예상했던 것과 다릅니다. 경고가 생성되지 않습니다. &lt;code&gt;use locale&lt;/code&gt; 범위 내에서 &lt;code&gt;eval&lt;/code&gt; 문자열을 수행하는 경우 대신 &lt;code&gt;eval&lt;/code&gt; 행을 다음과 같이 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5826e275e51e2f92c417012d26e57183b67ddebf" translate="yes" xml:space="preserve">
          <source>and the second as</source>
          <target state="translated">그리고 두 번째</target>
        </trans-unit>
        <trans-unit id="4b0c54cf5e55bcce5334c4fb8936e4b45df4be44" translate="yes" xml:space="preserve">
          <source>and the variable is only assigned if the condition is false. In Perl, you need parentheses:</source>
          <target state="translated">변수는 조건이 거짓 인 경우에만 할당됩니다. Perl에서는 괄호가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="187c19bf2ed06f558d877ebc1cc599d609a8c840" translate="yes" xml:space="preserve">
          <source>and the version object will be created as if the following code were used:</source>
          <target state="translated">다음 코드가 사용 된 것처럼 버전 객체가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b195225fa7acc0b96c9d796bff6aa32f9bf25de1" translate="yes" xml:space="preserve">
          <source>and their source code:</source>
          <target state="translated">그리고 그들의 소스 코드 :</target>
        </trans-unit>
        <trans-unit id="a357a0b3b6bb01e41a042b584904f6b12375f3f1" translate="yes" xml:space="preserve">
          <source>and then</source>
          <target state="translated">그리고</target>
        </trans-unit>
        <trans-unit id="a89a3626b8565f1e4fe93595aa23beb07a814bdf" translate="yes" xml:space="preserve">
          <source>and then &lt;code&gt;make install&lt;/code&gt; directly in the subshell.</source>
          <target state="translated">그런 다음 서브 쉘에 직접 &lt;code&gt;make install&lt;/code&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="c057b91530af5ff3d52f001fe2897560766773fd" translate="yes" xml:space="preserve">
          <source>and then I can use it as:</source>
          <target state="translated">그런 다음 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ee1c36bc806d74c955b8deeab5a71a91290b0b4" translate="yes" xml:space="preserve">
          <source>and then at the end add a subroutine (which will override the pre-existing subroutine). Remember to use a tab character to indent the line beginning with &quot;cd&quot;!</source>
          <target state="translated">그런 다음 끝에 서브 루틴을 추가하십시오 (기존 서브 루틴을 대체 함). &quot;cd&quot;로 시작하는 줄을 들여 쓰려면 탭 문자를 사용해야합니다!</target>
        </trans-unit>
        <trans-unit id="ab0d506f35fd3822d193cc9360b63e031c3942f4" translate="yes" xml:space="preserve">
          <source>and then calls the compiled value, and returns that. (I.e., if $key looks like bracket notation, $compiled is a sub, and we return &amp;amp;{$compiled}(@params); but if $key is just a plain string, we just return that.)</source>
          <target state="translated">그런 다음 컴파일 된 값을 호출하고이를 반환합니다. (즉, $ key가 대괄호 표기법처럼 보이면 $ compiled는 하위이고 &amp;amp; {$ compiled} (@ params)를 반환하지만 $ key가 일반 문자열이면 반환합니다.)</target>
        </trans-unit>
        <trans-unit id="44a3152294c4111f2c746a317f7528eba26af20d" translate="yes" xml:space="preserve">
          <source>and then compile Perl. The places where fchdir() is used have alternatives for systems that do not have fchdir() available.</source>
          <target state="translated">그런 다음 Perl을 컴파일하십시오. fchdir ()이 사용되는 장소에는 사용 가능한 fchdir ()이없는 시스템에 대한 대안이 있습니다.</target>
        </trans-unit>
        <trans-unit id="54cc71479f4e8f37feff6adbc588948b6ed9b469" translate="yes" xml:space="preserve">
          <source>and then edited it as appropriate.</source>
          <target state="translated">그런 다음 적절하게 편집했습니다.</target>
        </trans-unit>
        <trans-unit id="9b2df89c641d69f45a815efca5beef7560ca9a0a" translate="yes" xml:space="preserve">
          <source>and then just answer client requests for language $wanted by just looking up</source>
          <target state="translated">그런 다음 조회 만하면 원하는 언어에 대한 고객 요청에 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b1640f57029d1835984f3af20d2191014b99ddf" translate="yes" xml:space="preserve">
          <source>and then only hard references will be allowed for the rest of the enclosing block. An inner block may countermand that with</source>
          <target state="translated">나머지 블록에는 하드 참조 만 허용됩니다. 내부 블록은</target>
        </trans-unit>
        <trans-unit id="5e0f10e30244d92ed6f02e6996b5e8e942826f05" translate="yes" xml:space="preserve">
          <source>and then pass to threads-&amp;gt;create() a sub that closes over &lt;code&gt;$foo&lt;/code&gt;. Then, in the child, you say</source>
          <target state="translated">그런 다음 threads-&amp;gt; create ()에 &lt;code&gt;$foo&lt;/code&gt; 이상으로 닫히는 하위를 전달합니다 . 그런 다음 아이에게 말하십시오.</target>
        </trans-unit>
        <trans-unit id="451e30567469e8b460f1d3bc5414c41a6638cddf" translate="yes" xml:space="preserve">
          <source>and then re-compiling and installing. (&lt;code&gt;%Config&lt;/code&gt; is available from the Config module).</source>
          <target state="translated">그런 다음 다시 컴파일하고 설치하십시오. ( &lt;code&gt;%Config&lt;/code&gt; 는 구성 모듈에서 사용 가능합니다).</target>
        </trans-unit>
        <trans-unit id="a0240abc49e91dec760c37658ba9b71575aed0e0" translate="yes" xml:space="preserve">
          <source>and then restart the debugger using the &lt;code&gt;R&lt;/code&gt; command (if possible). One can use &lt;code&gt;b
compile subname&lt;/code&gt; for the same purpose.</source>
          <target state="translated">그런 다음 &lt;code&gt;R&lt;/code&gt; 명령을 사용하여 디버거를 다시 시작하십시오 (가능한 경우). 같은 목적으로 &lt;code&gt;b compile subname&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbf31119ed47c5f8b69e18f4d5f705e1c96574bd" translate="yes" xml:space="preserve">
          <source>and then there's</source>
          <target state="translated">그리고 거기에</target>
        </trans-unit>
        <trans-unit id="353ea5311f06d213fb4274ba5a999ecceb56a41b" translate="yes" xml:space="preserve">
          <source>and then use pax.</source>
          <target state="translated">그리고 pax를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="48126773317a746d38788a830d1f700877f824cc" translate="yes" xml:space="preserve">
          <source>and there are currently 32 types. These different structures contain pointers to various routines that perform additional actions depending on which function is being called.</source>
          <target state="translated">현재 32 가지 유형이 있습니다. 이러한 다른 구조에는 호출되는 기능에 따라 추가 조치를 수행하는 다양한 루틴에 대한 포인터가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="125d179aee3f08c5f3f28753f2a610fce93912ec" translate="yes" xml:space="preserve">
          <source>and these</source>
          <target state="translated">그리고 이것들</target>
        </trans-unit>
        <trans-unit id="e1493a3f0807b6f38cd28b6afc4496c286e444bc" translate="yes" xml:space="preserve">
          <source>and these conditions now hold; changes in caps:</source>
          <target state="translated">그리고 이러한 상태는 현재 유지되고 있습니다. 한도 변경 :</target>
        </trans-unit>
        <trans-unit id="634f4431e19540e83429c99c727415ca241cf810" translate="yes" xml:space="preserve">
          <source>and they need renamed to this</source>
          <target state="translated">그들은 이것으로 이름을 바꿔야합니다</target>
        </trans-unit>
        <trans-unit id="c08d7693095dbd2bcba2f2bba00e5c933e696272" translate="yes" xml:space="preserve">
          <source>and things will Just Work.</source>
          <target state="translated">일이 잘 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="13d6234dafca22c495f68d2e93ffa91530cf4576" translate="yes" xml:space="preserve">
          <source>and this all reduces to one string internally. Likewise, if you say</source>
          <target state="translated">그리고 이것은 모두 내부적으로 하나의 문자열로 줄어 듭니다. 마찬가지로 말하면</target>
        </trans-unit>
        <trans-unit id="54d316122df54908b330dbe67e0eb1a7496b2e8d" translate="yes" xml:space="preserve">
          <source>and this is the C function</source>
          <target state="translated">그리고 이것은 C 함수입니다</target>
        </trans-unit>
        <trans-unit id="b0b7cef2e136b9167abea8c18920b79278779cc6" translate="yes" xml:space="preserve">
          <source>and this is the equivalent skeleton for the</source>
          <target state="translated">그리고 이것은</target>
        </trans-unit>
        <trans-unit id="6eebd24f36d63aecef99cba57072fffe82f277ba" translate="yes" xml:space="preserve">
          <source>and this is what it outputs:</source>
          <target state="translated">그리고 이것이 출력되는 것입니다 :</target>
        </trans-unit>
        <trans-unit id="96e5143cbcedd3c71a50e4ae68ec0d716dd6fe35" translate="yes" xml:space="preserve">
          <source>and this to compress a file as it is written to the FTP Server</source>
          <target state="translated">FTP 서버에 기록 된 파일을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="fd12e4da86b9aadfbb2734c8e5f1bee5da3b93ce" translate="yes" xml:space="preserve">
          <source>and this to write compress files, if you have the &lt;code&gt;compress&lt;/code&gt; program available</source>
          <target state="translated">&lt;code&gt;compress&lt;/code&gt; 프로그램을 사용할 수 있는 경우 압축 파일을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="e2c2bf67a7935e18e359ad79d84198585a4af3bd" translate="yes" xml:space="preserve">
          <source>and this with &lt;code&gt;gunzip&lt;/code&gt;</source>
          <target state="translated">그리고 이건 &lt;code&gt;gunzip&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d39dfbea4e5b4447637693f64c38ebc1f8116f81" translate="yes" xml:space="preserve">
          <source>and thus the North American servers happen to be listed between the European and the South American sites.</source>
          <target state="translated">따라서 북미 서버는 유럽 사이트와 남미 사이트 사이에 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="cb400c328bbed62df7bf2a79424df0971a9b0060" translate="yes" xml:space="preserve">
          <source>and to convert it back:</source>
          <target state="translated">다시 변환하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="389eab738d2c24825aaf583e6d4e7e90f7197558" translate="yes" xml:space="preserve">
          <source>and to make a subroutine visible to other packages in the same scope:</source>
          <target state="translated">동일한 범위의 다른 패키지에서 서브 루틴을 볼 수있게하려면 :</target>
        </trans-unit>
        <trans-unit id="217975290eb70597845ac22d0c9eaec6ba4f2b06" translate="yes" xml:space="preserve">
          <source>and to pop the return value out. Take a deep breath...</source>
          <target state="translated">반환 값을 튀어 나옵니다. 심호흡하십시오 ...</target>
        </trans-unit>
        <trans-unit id="f2f253ad479c1e47993bd311d49420fc3740b03a" translate="yes" xml:space="preserve">
          <source>and to prevent the filter's being turned off in any way:</source>
          <target state="translated">어떤 식 으로든 필터가 꺼지는 것을 방지하려면 :</target>
        </trans-unit>
        <trans-unit id="f457722dbced2bf2ae91cbfea945e31146a31b39" translate="yes" xml:space="preserve">
          <source>and to set CCHOME, CCINCDIR and CCLIBDIR as per the environment setup above.</source>
          <target state="translated">위의 환경 설정에 따라 CCHOME, CCINCDIR 및 CCLIBDIR을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0aad232792b4921467166acd4c29645d805793b6" translate="yes" xml:space="preserve">
          <source>and treat it as if it were:</source>
          <target state="translated">다음과 같이 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d2fe6dcb8f246d2fce35f742575fa001821e5680" translate="yes" xml:space="preserve">
          <source>and tries again, since it's customary to have file types on all files under VMS.</source>
          <target state="translated">VMS 아래의 모든 파일에 파일 유형이있는 것이 일반적이기 때문에 다시 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="3b1648c7e0ac8e95616dae97bc077625fd8d6af2" translate="yes" xml:space="preserve">
          <source>and uncomment the relevant variables near the end of the file.</source>
          <target state="translated">파일 끝 근처에서 관련 변수의 주석을 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="cfcf943d2393a6f28d49e0ffac0815fd27da0bf6" translate="yes" xml:space="preserve">
          <source>and uncomment the struct.</source>
          <target state="translated">구조체의 주석 처리를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="9e6562a3babb41524cb81f0cde70dfef28222be8" translate="yes" xml:space="preserve">
          <source>and under Win32, the approximately equivalent:</source>
          <target state="translated">그리고 Win32에서는 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="41e4ffad70f25f822f518933170aa7926100a693" translate="yes" xml:space="preserve">
          <source>and upload to:</source>
          <target state="translated">다음에 업로드 :</target>
        </trans-unit>
        <trans-unit id="46d5ca958aec010c55ad2c03e5821dac149faf98" translate="yes" xml:space="preserve">
          <source>and use the &lt;code&gt;TIOCNOTTY&lt;/code&gt; ioctl() on it instead. See tty(4) for details.</source>
          <target state="translated">그리고 사용 &lt;code&gt;TIOCNOTTY&lt;/code&gt; 의 대신에 IOCTL을 (). 자세한 내용은 tty (4)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9f14a6780c851ae104f1481fc1a9906cf9782249" translate="yes" xml:space="preserve">
          <source>and wait:</source>
          <target state="translated">그리고 기다려:</target>
        </trans-unit>
        <trans-unit id="69c07c00f94d0c5b0709bf9c6938ba419bdf55e3" translate="yes" xml:space="preserve">
          <source>and when compiling the POSIX extension</source>
          <target state="translated">POSIX 확장을 컴파일 할 때</target>
        </trans-unit>
        <trans-unit id="2ff77b4f27f07b0462faa89d7a400cf861b8c2d0" translate="yes" xml:space="preserve">
          <source>and will &lt;code&gt;die&lt;/code&gt; if a character larger than 255 is written to the handle. When reading, each octet from the handle becomes a byte-in-a-character. Note that this default is the same behaviour as bytes-only languages (including Perl before v5.6) would have, and is sufficient to handle native 8-bit encodings e.g. iso-8859-1, EBCDIC etc. and any legacy mechanisms for handling other encodings and binary data.</source>
          <target state="translated">것이다 &lt;code&gt;die&lt;/code&gt; (255)보다 큰 문자가 핸들에 기록하는 경우. 읽을 때 핸들의 각 옥텟은 문자의 바이트가됩니다. 이 기본값은 바이트 전용 언어 (v5.6 이전의 Perl 포함)와 동일한 동작이며 기본 8 비트 인코딩 (예 : iso-8859-1, EBCDIC 등) 및 처리를위한 레거시 메커니즘을 처리하기에 충분합니다. 기타 인코딩 및 이진 데이터.</target>
        </trans-unit>
        <trans-unit id="6ee8bc7f7f274956ec858de1f58858d8da87dae0" translate="yes" xml:space="preserve">
          <source>and will work on any list:</source>
          <target state="translated">모든 목록에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1b71ca4514d229280e1d7fa7d377d84757968bfa" translate="yes" xml:space="preserve">
          <source>and writes HTML files for each of these to a corresponding directory in</source>
          <target state="translated">이들 각각에 대한 HTML 파일을 다음의 해당 디렉토리에 씁니다.</target>
        </trans-unit>
        <trans-unit id="56f643ea045d7d28116e861b4f87f762cdd48385" translate="yes" xml:space="preserve">
          <source>and you are attempting to remove an ancestor, such as</source>
          <target state="translated">다음과 같은 조상을 제거하려고합니다.</target>
        </trans-unit>
        <trans-unit id="675d70b7c962e8ca4b793a761fbb9992623d3828" translate="yes" xml:space="preserve">
          <source>and you can create well-formed Unicode with</source>
          <target state="translated">다음과 같이 올바른 형식의 유니 코드를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a13b7e19e07f86efe8137aeeee6e22f34019d0d4" translate="yes" xml:space="preserve">
          <source>and you don't care about &lt;code&gt;redundant&lt;/code&gt; warnings in more recent versions, you can call:</source>
          <target state="translated">최신 버전의 &lt;code&gt;redundant&lt;/code&gt; 경고에 대해 신경 쓰지 않고 다음을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c639a2ec15edc09ca8e02e951acf39319cc8f44" translate="yes" xml:space="preserve">
          <source>and you want to Export symbol &lt;code&gt;$A::b&lt;/code&gt; back to the module that called package A. Since Exporter relies on the import method to work, via inheritance, as it stands Exporter::import() will never get called. Instead, say the following:</source>
          <target state="translated">그리고 &lt;code&gt;$A::b&lt;/code&gt; 심볼을 패키지 A라는 모듈로 다시 내보내 려고합니다. Exporter :: import ()는 호출되지 않으므로 상속을 통해 import 메소드를 사용하여 상속을 수행합니다. 대신 다음과 같이 말합니다.</target>
        </trans-unit>
        <trans-unit id="622cd26503fac9383fb718bed2b3ddba040f7083" translate="yes" xml:space="preserve">
          <source>and you want to produce an output like this, with each country mentioned once, and then an alphabetical list of the cities in that country:</source>
          <target state="translated">각 국가를 한 번 언급 한 다음 해당 국가의 알파벳순으로 목록을 작성하여 다음과 같은 출력을 생성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="4c1468c599d605484919b48473553ef4293085c5" translate="yes" xml:space="preserve">
          <source>and you're done.</source>
          <target state="translated">그리고 당신은 끝났습니다.</target>
        </trans-unit>
        <trans-unit id="b0adec687e3ab4fff14b5efa8b7087cfcfe80d04" translate="yes" xml:space="preserve">
          <source>and/or</source>
          <target state="translated">and/or</target>
        </trans-unit>
        <trans-unit id="9f29ab58f3ce583beed68be5f3bf29542855d9de" translate="yes" xml:space="preserve">
          <source>angles being equal to</source>
          <target state="translated">같은 각도</target>
        </trans-unit>
        <trans-unit id="03f6df04819f61a4ed7725f72fc3f5557572193e" translate="yes" xml:space="preserve">
          <source>angles.</source>
          <target state="translated">angles.</target>
        </trans-unit>
        <trans-unit id="0a92fab3230134cca6eadd9898325b9b2ae67998" translate="yes" xml:space="preserve">
          <source>anonymous</source>
          <target state="translated">anonymous</target>
        </trans-unit>
        <trans-unit id="f3939ccfbbc78c50725aff277833f2cbdd31e9da" translate="yes" xml:space="preserve">
          <source>anonymous subroutine.)</source>
          <target state="translated">익명 서브 루틴.)</target>
        </trans-unit>
        <trans-unit id="14ccf9a789edbcad8533f0e8977c70173ff9dfa6" translate="yes" xml:space="preserve">
          <source>anonymous@</source>
          <target state="translated">anonymous@</target>
        </trans-unit>
        <trans-unit id="b7c8ffb8fbc67c171328e0e8f643694e8e61b335" translate="yes" xml:space="preserve">
          <source>another</source>
          <target state="translated">another</target>
        </trans-unit>
        <trans-unit id="052319a3e5bb93ee7405765a73d430f34cc0defb" translate="yes" xml:space="preserve">
          <source>another simple word (note the lack of effect of the backslashed double-quote)</source>
          <target state="translated">또 다른 간단한 단어 (백 슬래시 큰 따옴표의 효과가 없음에 유의하십시오)</target>
        </trans-unit>
        <trans-unit id="49b2ac3b32339e34e4b9f904d93b48ebd2e613e1" translate="yes" xml:space="preserve">
          <source>ansi2knr.U</source>
          <target state="translated">ansi2knr.U</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="7696527a9b692224a3b35e3d1ce7238f165ab13d" translate="yes" xml:space="preserve">
          <source>any data associated with that attribute;</source>
          <target state="translated">해당 속성과 관련된 모든 데이터</target>
        </trans-unit>
        <trans-unit id="9a459f25776e773a64e295d1cb084a05b171699e" translate="yes" xml:space="preserve">
          <source>any function in the DLL, just the act of loading this DLL will reset your flags. What is worse, the same compiler was used to compile some HOOK DLLs. Given that HOOK dlls are executed in the context of</source>
          <target state="translated">DLL의 모든 기능,이 DLL을로드하는 행위는 플래그를 재설정합니다. 더 나쁜 것은, 일부 HOOK DLL을 컴파일하는 데 동일한 컴파일러가 사용되었습니다. HOOK dll은 다음과 같은 맥락에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e19bd065bb47fc295eafe4767c2de6b337ea119e" translate="yes" xml:space="preserve">
          <source>any leading &lt;code&gt;=&lt;/code&gt; prefix).</source>
          <target state="translated">선행 &lt;code&gt;=&lt;/code&gt; 접두사).</target>
        </trans-unit>
        <trans-unit id="8b084990d915b056c34e7529bc336db861040427" translate="yes" xml:space="preserve">
          <source>any of the loaded</source>
          <target state="translated">로드 된</target>
        </trans-unit>
        <trans-unit id="78e16822f2fffca52176d34705897fa841dd6f90" translate="yes" xml:space="preserve">
          <source>any one</source>
          <target state="translated">어느 하나</target>
        </trans-unit>
        <trans-unit id="f637daefbefeda9e4ed60d0501fba49913559846" translate="yes" xml:space="preserve">
          <source>any optional parameters that need to be sent to the filter. See the encode filter for an example of a module that uses parameters.</source>
          <target state="translated">필터로 보내야하는 선택적 매개 변수. 매개 변수를 사용하는 모듈의 예는 인코딩 필터를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="42323bfecca119f546c25856e4f9be955460919c" translate="yes" xml:space="preserve">
          <source>any previous content in &lt;code&gt;$tar&lt;/code&gt; !</source>
          <target state="translated">&lt;code&gt;$tar&lt;/code&gt; 모든 이전 컨텐츠 !</target>
        </trans-unit>
        <trans-unit id="3afb922a587bb71f0547be9515aa4d3cd4d7545c" translate="yes" xml:space="preserve">
          <source>any previous content in &lt;code&gt;$tar&lt;/code&gt;!</source>
          <target state="translated">&lt;code&gt;$tar&lt;/code&gt; 이전 내용 !</target>
        </trans-unit>
        <trans-unit id="c9eb4e932e9bcc3bc1ece409a17107d5c50fed04" translate="yes" xml:space="preserve">
          <source>any starting with &lt;code&gt;(&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; 로 시작하는 모든</target>
        </trans-unit>
        <trans-unit id="d6a65efb0501666a4c913ea32a973da114f0ead8" translate="yes" xml:space="preserve">
          <source>any subroutine called from within that block</source>
          <target state="translated">해당 블록 내에서 호출 된 모든 서브 루틴</target>
        </trans-unit>
        <trans-unit id="d75735d4f2964b91ad9a3f126838a4950222c638" translate="yes" xml:space="preserve">
          <source>any_dup</source>
          <target state="translated">any_dup</target>
        </trans-unit>
        <trans-unit id="035563ded8fdfc83ecef543e5bd6ec441f8b116a" translate="yes" xml:space="preserve">
          <source>anyinflate $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">anyinflate $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="8867c88b56e0bfb82cffaf15a66bc8d107d6754a" translate="yes" xml:space="preserve">
          <source>anything</source>
          <target state="translated">anything</target>
        </trans-unit>
        <trans-unit id="da86b2350d7133a0b9455e2c4cae962d691712b0" translate="yes" xml:space="preserve">
          <source>anything at all</source>
          <target state="translated">아무것도</target>
        </trans-unit>
        <trans-unit id="bd4f0e49dee0e1f5509e5161f80bbbbf9009690f" translate="yes" xml:space="preserve">
          <source>anything by default (because you don't want to surprise your users... badly)</source>
          <target state="translated">기본적으로 무엇이든 (사용자를 놀라게하고 싶지 않기 때문에 ... 심하게)</target>
        </trans-unit>
        <trans-unit id="3c305d671dd1d39b0b5796b00915162f7f25d581" translate="yes" xml:space="preserve">
          <source>anything else</source>
          <target state="translated">다른 것</target>
        </trans-unit>
        <trans-unit id="cad4d6d244c26510fb5dde9917efd285d64788e5" translate="yes" xml:space="preserve">
          <source>anything you don't need to (because less is more)</source>
          <target state="translated">필요하지 않은 것 (적을수록 많을수록)</target>
        </trans-unit>
        <trans-unit id="faa4dad3e5b02731169057ea528c1d5f84a048de" translate="yes" xml:space="preserve">
          <source>anyuncompress $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">anyuncompress $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [, OPTS]</target>
        </trans-unit>
        <trans-unit id="66623d62c46dc1f443a91e7a202ce54689d760e0" translate="yes" xml:space="preserve">
          <source>anyway.</source>
          <target state="translated">anyway.</target>
        </trans-unit>
        <trans-unit id="112c2a063a0f6f3f9ba00da0de16624f951645e8" translate="yes" xml:space="preserve">
          <source>anywhere</source>
          <target state="translated">anywhere</target>
        </trans-unit>
        <trans-unit id="62eb0db178518a8376b23676c2639eb2732c0be8" translate="yes" xml:space="preserve">
          <source>apache</source>
          <target state="translated">apache</target>
        </trans-unit>
        <trans-unit id="1799678e58e199319930363fb4349a7bda81809f" translate="yes" xml:space="preserve">
          <source>apop ( [ USER [, PASS ]] )</source>
          <target state="translated">apop ( [ USER [, PASS ]] )</target>
        </trans-unit>
        <trans-unit id="55438ea85d41dfeeb55bbf581de97d7421de7539" translate="yes" xml:space="preserve">
          <source>appe ( FILE )</source>
          <target state="translated">appe ( FILE )</target>
        </trans-unit>
        <trans-unit id="32e21d9b9cba5dad74e5e372580bff4069832094" translate="yes" xml:space="preserve">
          <source>appear as parameters to the Perl function. With the exception of &lt;code&gt;OUT&lt;/code&gt; -parameters, these parameters are converted to the corresponding C type, then pointers to these data are given as arguments to the C function. It is expected that the C function will write through these pointers.</source>
          <target state="translated">Perl 함수의 매개 변수로 나타납니다. &lt;code&gt;OUT&lt;/code&gt; 매개 변수를 제외하고 이러한 매개 변수는 해당 C 유형으로 변환 된 다음 이러한 데이터에 대한 포인터가 C 함수에 대한 인수로 제공됩니다. C 함수는 이러한 포인터를 통해 작성 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="cce733e2e52d6811d59f9e92bcd7453e9f7358f6" translate="yes" xml:space="preserve">
          <source>appear as parameters to the Perl function. With the exception of &lt;code&gt;OUT&lt;/code&gt;-parameters, these parameters are converted to the corresponding C type, then pointers to these data are given as arguments to the C function. It is expected that the C function will write through these pointers.</source>
          <target state="translated">Perl 함수에 대한 매개 변수로 나타납니다. &lt;code&gt;OUT&lt;/code&gt; 매개 변수를 제외하고 이러한 매개 변수는 해당 C 유형으로 변환 된 다음 이러한 데이터에 대한 포인터가 C 함수에 대한 인수로 제공됩니다. C 함수는 이러한 포인터를 통해 쓸 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="24d201fd82f39662031e729d27fec76771838d92" translate="yes" xml:space="preserve">
          <source>appear in a package's &lt;code&gt;@ISA&lt;/code&gt; variable.</source>
          <target state="translated">패키지의 &lt;code&gt;@ISA&lt;/code&gt; 변수에 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="ef5924a72dac5871eee278d0ded5dbd03cc1c19b" translate="yes" xml:space="preserve">
          <source>appear within the tagged text.</source>
          <target state="translated">태그가 지정된 텍스트 안에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="b088a1c828c8057744dd034bb109abe70bca297e" translate="yes" xml:space="preserve">
          <source>append ( LOCAL_FILE [, REMOTE_FILE ] )</source>
          <target state="translated">추가 (LOCAL_FILE [, REMOTE_FILE])</target>
        </trans-unit>
        <trans-unit id="f4c344e204efc94ce51191da11f8da619348e0f5" translate="yes" xml:space="preserve">
          <source>append_utf8_from_native_byte</source>
          <target state="translated">append_utf8_from_native_byte</target>
        </trans-unit>
        <trans-unit id="d2005cc206ccbfdedf2be43a200cb050c538bdb5" translate="yes" xml:space="preserve">
          <source>application</source>
          <target state="translated">application</target>
        </trans-unit>
        <trans-unit id="8989d4047c8e0af6470e1a43e2fe5c667bbe4c9e" translate="yes" xml:space="preserve">
          <source>application to watch the OutputDebugString() output:</source>
          <target state="translated">OutputDebugString () 출력을 확인하는 응용 프로그램 :</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="2506d0416452ba5f112bf6a2e2c408e20bd43027" translate="yes" xml:space="preserve">
          <source>apply_switch</source>
          <target state="translated">apply_switch</target>
        </trans-unit>
        <trans-unit id="3802a68da20f566d7fb269f15c34508be3676bf9" translate="yes" xml:space="preserve">
          <source>approximately</source>
          <target state="translated">approximately</target>
        </trans-unit>
        <trans-unit id="23d8e0156062165ca3736e9f1e364d414e1d82d5" translate="yes" xml:space="preserve">
          <source>ar</source>
          <target state="translated">ar</target>
        </trans-unit>
        <trans-unit id="cc11ed913f2110bdc6eb71426a4cc5c12f656f9b" translate="yes" xml:space="preserve">
          <source>arch and version subdirs</source>
          <target state="translated">아치 및 버전 하위 디렉토리</target>
        </trans-unit>
        <trans-unit id="f8aca17f8dc62636fe56d26d991498181502da89" translate="yes" xml:space="preserve">
          <source>arch_check</source>
          <target state="translated">arch_check</target>
        </trans-unit>
        <trans-unit id="dd3193bba56c9212c61123bcc85fbecc046c671e" translate="yes" xml:space="preserve">
          <source>arch_check (override)</source>
          <target state="translated">arch_check (재정의)</target>
        </trans-unit>
        <trans-unit id="f380cbcd9a79a4eadf3e8b625bfe9df4ee115aec" translate="yes" xml:space="preserve">
          <source>architecture</source>
          <target state="translated">architecture</target>
        </trans-unit>
        <trans-unit id="a07f43054e7ab8b8f32e28994504a2df3069bad6" translate="yes" xml:space="preserve">
          <source>archive if the crypt() function is not defined in the standard C library. It is up to the Makefile to use this.</source>
          <target state="translated">crypt () 함수가 표준 C 라이브러리에 정의되어 있지 않은 경우 아카이브하십시오. 이것을 사용하는 것은 Makefile에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="aec82fb60d740fa3b0993aec0e9c124d53bbc3a4" translate="yes" xml:space="preserve">
          <source>archive member</source>
          <target state="translated">아카이브 멤버</target>
        </trans-unit>
        <trans-unit id="3e69b8fc70a5737cecc8b69d72e0d8f7c8a1ae3a" translate="yes" xml:space="preserve">
          <source>archive member name</source>
          <target state="translated">아카이브 멤버 이름</target>
        </trans-unit>
        <trans-unit id="ce1c532116fdc684b527b5d921d28bf41b305310" translate="yes" xml:space="preserve">
          <source>archive members</source>
          <target state="translated">아카이브 멤버</target>
        </trans-unit>
        <trans-unit id="100ad6ee2f5499bff96b61a63b2efa0ea3981a7e" translate="yes" xml:space="preserve">
          <source>archlib.U</source>
          <target state="translated">archlib.U</target>
        </trans-unit>
        <trans-unit id="72b2a70ac7a2415a83e5898d42c24867ef6c76fb" translate="yes" xml:space="preserve">
          <source>archname.U</source>
          <target state="translated">archname.U</target>
        </trans-unit>
        <trans-unit id="d5067cf69455114e2110970315849096fa94f0fd" translate="yes" xml:space="preserve">
          <source>archname/</source>
          <target state="translated">archname/</target>
        </trans-unit>
        <trans-unit id="5f9e5802bbabc71f9275fccf122f5a52b8599f12" translate="yes" xml:space="preserve">
          <source>are</source>
          <target state="translated">are</target>
        </trans-unit>
        <trans-unit id="8dc07e958ba7e04dfd2e47ec804fc360ac6b560f" translate="yes" xml:space="preserve">
          <source>are 1, 224, 256, 384, 512, 512224, or 512256. It's also possible to use common string representations of the algorithm (e.g. &quot;sha256&quot;, &quot;SHA-384&quot;). If the argument is missing, SHA-1 will be used by default.</source>
          <target state="translated">1, 224, 256, 384, 512, 512224 또는 512256입니다. 알고리즘의 공통 문자열 표현 (예 : &quot;sha256&quot;, &quot;SHA-384&quot;)을 사용할 수도 있습니다. 인수가 없으면 기본적으로 SHA-1이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="636601f419388a6153a945c6b4c7740fff9805ee" translate="yes" xml:space="preserve">
          <source>are IANA-registered &lt;code&gt;charset&lt;/code&gt;s. See [RFC 2781] for details. Jungshik Shin reports that UTF-16 with a BOM is well accepted by MS IE 5/6 and NS 4/6. Beware however that</source>
          <target state="translated">IANA 등록 &lt;code&gt;charset&lt;/code&gt; 입니다. 자세한 내용은 [RFC 2781]을 참조하십시오. 신정식은 BOM이있는 UTF-16이 MS IE 5/6 및 NS 4/6에서 잘 받아 들여 진다고보고합니다. 그러나 조심하십시오</target>
        </trans-unit>
        <trans-unit id="b3e8825648e40951cf73eb803bb3033952b8d48a" translate="yes" xml:space="preserve">
          <source>are a collection of character code sets from the International Organization for Standardization (ISO), each of which adds characters to the ASCII set that are typically found in various languages, many of which are based on the Roman, or Latin, alphabet. Most are for European languages, but there are also ones for Arabic, Greek, Hebrew, and Thai. There are good references on the web about all these.</source>
          <target state="translated">ISO (International Organization for Standardization)의 문자 코드 세트 모음으로, 각 문자는 일반적으로 다양한 언어로 제공되는 ASCII 세트에 문자를 추가하며, 대부분은 로마자 또는 라틴어 알파벳을 기반으로합니다. 대부분 유럽 언어를위한 것이지만 아랍어, 그리스어, 히브리어 및 태국어도 있습니다. 웹에는 이러한 모든 것에 대한 좋은 참고 자료가 있습니다.</target>
        </trans-unit>
        <trans-unit id="de4fe4ffac933dfb4f0c5094e64bc601a7611806" translate="yes" xml:space="preserve">
          <source>are all equal.</source>
          <target state="translated">모두 동일합니다.</target>
        </trans-unit>
        <trans-unit id="40cd33871ba50f9d26f25a0b0967a938c3c33a02" translate="yes" xml:space="preserve">
          <source>are allowed.</source>
          <target state="translated">허용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e1131dc785866fbebf7ccb8d1293f801f197a2a" translate="yes" xml:space="preserve">
          <source>are also always exempt from such warnings.</source>
          <target state="translated">또한 이러한 경고는 항상 면제됩니다.</target>
        </trans-unit>
        <trans-unit id="5fcbd6f84c4cae433390a20653865fe7ad335515" translate="yes" xml:space="preserve">
          <source>are also defined. Thus, &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; is in</source>
          <target state="translated">정의되어 있습니다. 따라서, &lt;code&gt;LATIN CAPITAL LETTER A WITH ACUTE&lt;/code&gt; 가있는 라틴 대문자 A 가</target>
        </trans-unit>
        <trans-unit id="6ae709307e670bf5e63517c3569658dffb47078b" translate="yes" xml:space="preserve">
          <source>are automatically added to every regular expression till the end of the lexical scope.</source>
          <target state="translated">어휘 범위가 끝날 때까지 모든 정규식에 자동으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="770b01f5221d280697bb0ba87d0e2d9db74e1a94" translate="yes" xml:space="preserve">
          <source>are comic references to the egg-eating habits of the little-endian Lilliputians and the big-endian Blefuscudians from the classic Jonathan Swift satire,</source>
          <target state="translated">리틀 엔디안 Lilliputians와 고전적인 Jonathan Swift 풍자에서 빅 엔디안 Blefuscudians의 계란 먹는 습관에 대한 만화 참조,</target>
        </trans-unit>
        <trans-unit id="11b947ce1fea4f347faeb86b5b573b53f785e4b2" translate="yes" xml:space="preserve">
          <source>are complex patterns. Until the &lt;code&gt;(*PRUNE)&lt;/code&gt; verb is reached,</source>
          <target state="translated">복잡한 패턴입니다. &lt;code&gt;(*PRUNE)&lt;/code&gt; 동사에 도달 할 때까지</target>
        </trans-unit>
        <trans-unit id="daac3dfff48cc466d9ca23db01b2c0a1076fa335" translate="yes" xml:space="preserve">
          <source>are converted to all uppercase for look-up. Other than that, both of them follow &lt;a href=&quot;#LOOSE-MATCHES&quot;&gt;loose&lt;/a&gt; rules if &lt;code&gt;:loose&lt;/code&gt; is also specified; strict otherwise.</source>
          <target state="translated">조회를 위해 모든 대문자로 변환됩니다. 그 외에는, 둘 다에 따라 &lt;a href=&quot;#LOOSE-MATCHES&quot;&gt;느슨한&lt;/a&gt; 규칙을 경우 &lt;code&gt;:loose&lt;/code&gt; 도 지정; 그렇지 않으면 엄격합니다.</target>
        </trans-unit>
        <trans-unit id="3ef4b9fd15129bb4ba23b3e2d5f6b2f50984d837" translate="yes" xml:space="preserve">
          <source>are deleted. (Note that this is slightly more flexible than the behavior of some &lt;b&gt;tr&lt;/b&gt; programs, which delete anything they find in the</source>
          <target state="translated">삭제됩니다. (이것은 일부 &lt;b&gt;tr&lt;/b&gt; 프로그램 의 동작보다 약간 더 유연 합니다.</target>
        </trans-unit>
        <trans-unit id="e553ec1da64a1470d4a07b9f0ea75b9f2786fbbc" translate="yes" xml:space="preserve">
          <source>are designed to test things that run thousands of times slower if a particular optimisation is broken (for example, the utf8 length cache on long utf8 strings). Add a test that will take a fraction of a second normally, and minutes otherwise, causing the test file to time out on failure.</source>
          <target state="translated">특정 최적화가 중단 된 경우 (예 : 긴 utf8 문자열의 utf8 길이 캐시) 수천 번 느리게 실행되는 항목을 테스트하도록 설계되었습니다. 일반적으로 1 분의 1 초가 걸리는 테스트를 추가하고 그렇지 않으면 몇 분이 걸리므로 테스트 파일이 실패하면 시간 초과됩니다.</target>
        </trans-unit>
        <trans-unit id="7e73ed4d4def3b0046261b7c95b17ebd584def24" translate="yes" xml:space="preserve">
          <source>are either deleted from the target string if &lt;code&gt;/d&lt;/code&gt; is specified; or replaced by the final character in</source>
          <target state="translated">&lt;code&gt;/d&lt;/code&gt; 가 지정 되면 대상 문자열에서 삭제됩니다 . 또는 마지막 문자로 대체</target>
        </trans-unit>
        <trans-unit id="7d19bbed1db5eb79730973a9f9a4bc06ef968d56" translate="yes" xml:space="preserve">
          <source>are exempt from warnings (because they care about truth rather than definedness). Operators such as &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; , and &lt;code&gt;.=&lt;/code&gt; , that operate on undefined variables such as:</source>
          <target state="translated">(정의보다는 진실에 관심이 있기 때문에) 경고가 면제됩니다. &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; 및 &lt;code&gt;.=&lt;/code&gt; 과 같은 연산자는 다음과 같이 정의되지 않은 변수에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="97f63e7ae336dfa4123620ffa25d37b43de233fe" translate="yes" xml:space="preserve">
          <source>are exempt from warnings (because they care about truth rather than definedness). Operators such as &lt;code&gt;++&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, and &lt;code&gt;.=&lt;/code&gt;, that operate on undefined variables such as:</source>
          <target state="translated">경고에서 제외됩니다 (정의보다는 진실에 관심이 있기 때문입니다). 다음과 같은 정의되지 않은 변수에 대해 작동하는 &lt;code&gt;++&lt;/code&gt; , &lt;code&gt;--&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; 및 &lt;code&gt;.=&lt;/code&gt; 와 같은 연산자 :</target>
        </trans-unit>
        <trans-unit id="5057aa4e52a95f389308d1244df9e17bc251d60c" translate="yes" xml:space="preserve">
          <source>are generated. If there are</source>
          <target state="translated">생성됩니다. 만일 거기에</target>
        </trans-unit>
        <trans-unit id="12a000f6ee5e215e7e0046022ea40ecb006f16ef" translate="yes" xml:space="preserve">
          <source>are hexadecimal digits, matches the character whose native ordinal is</source>
          <target state="translated">16 진수이며 기본 서 수가있는 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="39e300e92d55897673ef91e24c657fab7d7f2f47" translate="yes" xml:space="preserve">
          <source>are hexadecimal digits, matches the character whose ordinal is</source>
          <target state="translated">16 진수이며, 서 수가있는 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="0396f8fab0fd4ee1179eee3502c230f019ae22d2" translate="yes" xml:space="preserve">
          <source>are in effect, &lt;code&gt;postprocess&lt;/code&gt; is a no-op.</source>
          <target state="translated">실제로 &lt;code&gt;postprocess&lt;/code&gt; 는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="570405f9be4be3ed167dfbbb5eecc3ddbaa2bed9" translate="yes" xml:space="preserve">
          <source>are in effect, &lt;code&gt;preprocess&lt;/code&gt; is a no-op.</source>
          <target state="translated">사실상, &lt;code&gt;preprocess&lt;/code&gt; 는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fedda21f963002d22ee355f74566c5941f369717" translate="yes" xml:space="preserve">
          <source>are latitudes: zero at the North Pole, northward positive, southward negative. &lt;b&gt;NOTE&lt;/b&gt;: this formula thinks in mathematics, not geographically: the</source>
          <target state="translated">위도 : 북극에서 0, 북쪽으로 긍정적, 남쪽으로 부정적인. &lt;b&gt;참고&lt;/b&gt; :이 공식은 수학이 아닌 지리적으로 생각합니다.</target>
        </trans-unit>
        <trans-unit id="ade037758549b480d28d475043ed26d68ea7200e" translate="yes" xml:space="preserve">
          <source>are limited to non-negative integral values less than a preset limit defined when perl is built. This is usually 32766 on the most common platforms. The actual limit can be seen in the error message generated by code such as this:</source>
          <target state="translated">펄이 빌드 될 때 정의 된 미리 설정된 한계보다 작은 음이 아닌 정수 값으로 제한됩니다. 이것은 일반적으로 가장 일반적인 플랫폼에서 32766입니다. 실제 제한은 다음과 같은 코드에 의해 생성 된 오류 메시지에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a431c3157083cfaa848431ab6951d8e26a4c0c12" translate="yes" xml:space="preserve">
          <source>are longitudes: zero at the Greenwhich meridian, eastward positive, westward negative -- and the</source>
          <target state="translated">경도 : 녹색의 자오선, 동쪽으로 양수, 서쪽으로 음수-</target>
        </trans-unit>
        <trans-unit id="609716f862354a27aae0296acc60afdae2c70a58" translate="yes" xml:space="preserve">
          <source>are not always present. The</source>
          <target state="translated">항상 존재하는 것은 아닙니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="46c8feb754cc537b05ea38e46f4716d3389f6083" translate="yes" xml:space="preserve">
          <source>are not checked for taintedness. This requires extra carefulness unless you want external data to affect your control flow. Unless you carefully limit what these symbolic values are, people are able to call functions &lt;b&gt;outside&lt;/b&gt; your Perl code, such as POSIX::system, in which case they are able to run arbitrary external code.</source>
          <target state="translated">오염 여부를 점검하지 않습니다. 외부 데이터가 제어 흐름에 영향을 미치지 않게하려면 특별한주의가 필요합니다. 이러한 기호 값을 신중하게 제한하지 않으면 POSIX :: system과 같은 Perl 코드 &lt;b&gt;외부에서&lt;/b&gt; 함수를 호출 할 수 있습니다.이 경우 임의의 외부 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ccd41f08ede872f51066757b8c4ae13668882ad" translate="yes" xml:space="preserve">
          <source>are not equivalent;</source>
          <target state="translated">동등하지 않다;</target>
        </trans-unit>
        <trans-unit id="3dbd91a738da0c945eed880dcd55854536701ae2" translate="yes" xml:space="preserve">
          <source>are not implemented.</source>
          <target state="translated">구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d2b97aebc4deb474b3edf462a85d2011cb2609d5" translate="yes" xml:space="preserve">
          <source>are not present by default in compressed data streams. They must have been added explicitly when the data stream was created by calling &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; with &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; .</source>
          <target state="translated">압축 된 데이터 스트림에는 기본적으로 존재하지 않습니다. &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; 와 함께 &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; 를 호출하여 데이터 스트림이 작성 될 때 명시 적으로 추가 되었어야합니다 .</target>
        </trans-unit>
        <trans-unit id="bb66588bb9e8219965c9e8e3652212ab6d91d5f9" translate="yes" xml:space="preserve">
          <source>are not present by default in compressed data streams. They must have been added explicitly when the data stream was created by calling &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; with &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt;.</source>
          <target state="translated">압축 된 데이터 스트림에는 기본적으로 존재하지 않습니다. &lt;code&gt;Z_FULL_FLUSH&lt;/code&gt; 로 &lt;code&gt;Compress::Deflate::flush&lt;/code&gt; 를 호출하여 데이터 스트림을 만들 때 명시 적으로 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="40db504d084e6e3300a4b8d81479b259b9880a4a" translate="yes" xml:space="preserve">
          <source>are not set.</source>
          <target state="translated">설정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d74281d1301f35973cccef918ad9c2a8a370111" translate="yes" xml:space="preserve">
          <source>are numbers from 0 to 5 giving the intensity of red, green, and blue. &lt;code&gt;on_&lt;/code&gt; variants of all of these colors are also provided. These colors may be ignored completely on non-256-color terminals or may be misinterpreted and produce random behavior. Additional attributes such as blink, italic, or bold may not work with the 256-color palette.</source>
          <target state="translated">빨강, 초록, 파랑의 강도를 나타내는 0에서 5까지의 숫자입니다. 이러한 모든 색상의 &lt;code&gt;on_&lt;/code&gt; 변형도 제공됩니다. 이러한 색상은 256 색이 아닌 터미널에서 완전히 무시되거나 잘못 해석되어 임의의 동작이 발생할 수 있습니다. 깜박임, 기울임 꼴 또는 굵게와 같은 추가 속성은 256 색 팔레트에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2c7c9a6f736994e6c2a0a531d7cba7ff69a9a00" translate="yes" xml:space="preserve">
          <source>are numbers from 0 to 5 giving the intensity of red, green, and blue. The grey and RGB colors are also available as &lt;code&gt;ansi16&lt;/code&gt; through &lt;code&gt;ansi255&lt;/code&gt; if you want simple names for all 256 colors. &lt;code&gt;on_&lt;/code&gt; variants of all of these colors are also provided. These colors may be ignored completely on non-256-color terminals or may be misinterpreted and produce random behavior. Additional attributes such as blink, italic, or bold may not work with the 256-color palette.</source>
          <target state="translated">0에서 5까지의 숫자로 빨강, 초록, 파랑의 강도를 나타냅니다. 모든 256 색상에 대한 간단한 이름을 원하는 경우 회색 및 RGB 색상은 &lt;code&gt;ansi16&lt;/code&gt; 에서 &lt;code&gt;ansi255&lt;/code&gt; 까지 사용할 수 있습니다 . 이 모든 색상의 &lt;code&gt;on_&lt;/code&gt; 변형도 제공됩니다. 이러한 색상은 256 색이 아닌 터미널에서 완전히 무시되거나 잘못 해석되어 임의의 동작을 생성 할 수 있습니다. 깜박임, 기울임 꼴 또는 굵게와 같은 추가 속성은 256 색 팔레트에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee047ace3155120c0c998a4fbef3fd51e859a9c4" translate="yes" xml:space="preserve">
          <source>are provided with &lt;code&gt;-MCross&lt;/code&gt; so to enable cross- compile.</source>
          <target state="translated">크로스 컴파일이 가능하도록 &lt;code&gt;-MCross&lt;/code&gt; 가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8a812a79d5485356c9599734e6c7857321c8eef" translate="yes" xml:space="preserve">
          <source>are registered with IANA as preferred MIME names and may be used over the Internet.</source>
          <target state="translated">IANA에 기본 MIME 이름으로 등록되어 있으며 인터넷을 통해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbbf84bcdae10459f4be5e4c43dfcd186671107d" translate="yes" xml:space="preserve">
          <source>are regular expressions, in the context of a larger regular expression, that function independently of the larger regular expression. That is, they consume as much or as little of the string as they wish without regard for the ability of the larger regexp to match. Independent subexpressions are represented by &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt;. We can illustrate their behavior by first considering an ordinary regexp:</source>
          <target state="translated">더 큰 정규 표현식과 관련하여 더 큰 정규 표현식과 독립적으로 기능하는 정규 표현식입니다. 즉, 더 큰 정규 표현식의 일치 능력에 관계없이 원하는만큼 문자열을 많이 또는 적게 소비합니다. 독립 하위 식은 &lt;code&gt;(?&amp;gt;regexp)&lt;/code&gt; 로 표시 됩니다. 먼저 정규 정규 표현식을 고려하여 동작을 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf6b8a83833152c05402e374a039993996c3a5f4" translate="yes" xml:space="preserve">
          <source>are relocated relative to the directory containing the perl binary, and a logical cleanup of the path is then made around the join point (removing</source>
          <target state="translated">perl 바이너리를 포함하는 디렉토리를 기준으로 재배치되고 경로의 논리적 정리가 결합 점 주위에서 수행됩니다 (제거).</target>
        </trans-unit>
        <trans-unit id="c22d2121cf1ad3c9fdf597eb6ea7a9ec831c3008" translate="yes" xml:space="preserve">
          <source>are similar to these:</source>
          <target state="translated">다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="5daee755ffcc3e1b323374ccd7080b09b7b8a3b2" translate="yes" xml:space="preserve">
          <source>are simply the file names of the test scripts to run.</source>
          <target state="translated">단순히 실행할 테스트 스크립트의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6e4996c18d9f0a898ac21d0f2e3859496ded49d7" translate="yes" xml:space="preserve">
          <source>are single quotes (&lt;code&gt;tr'&lt;i&gt;SEARCHLIST&lt;/i&gt;'&lt;i&gt;REPLACEMENTLIST&lt;/i&gt;'&lt;/code&gt;), the only interpolation is removal of &lt;code&gt;\&lt;/code&gt; from pairs of &lt;code&gt;\\&lt;/code&gt;.</source>
          <target state="translated">작은 따옴표는 ( &lt;code&gt;tr'&lt;i&gt;SEARCHLIST&lt;/i&gt;'&lt;i&gt;REPLACEMENTLIST&lt;/i&gt;'&lt;/code&gt; ), 유일한 보간의 제거입니다 &lt;code&gt;\&lt;/code&gt; 쌍에서 &lt;code&gt;\\&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a838d9cdd9a1dd5272e9fd20337bdc1878418242" translate="yes" xml:space="preserve">
          <source>are special. &quot;null&quot; fails for all character so when you set fallback mode to PERLQQ, HTMLCREF or XMLCREF, ALL CHARACTERS will fall back to character references. Ditto for &quot;ascii-ctrl&quot; except for control characters. For fallback modes, see &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.</source>
          <target state="translated">특별합니다. &quot;null&quot;은 모든 문자에 대해 실패하므로 폴백 모드를 PERLQQ, HTMLCREF 또는 XMLCREF로 설정하면 ALL CHARACTERS가 문자 참조로 폴백됩니다. 제어 문자를 제외하고 &quot;ascii-ctrl&quot;의 경우도 마찬가지입니다. 대체 모드에 대해서는 &lt;a href=&quot;encode&quot;&gt;인코딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="097a56ab5012c31b2588a7fcf5955a17a3d173fe" translate="yes" xml:space="preserve">
          <source>are specified in the same way as command line options:</source>
          <target state="translated">명령 행 옵션과 동일한 방식으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="78aee12896fca1df627811f8bc479814fea0b083" translate="yes" xml:space="preserve">
          <source>are subjected to double quote interpolation. That means that if you want to use variables, you must use an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">큰 따옴표 보간이 적용됩니다. 즉, 변수를 사용하려면 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d8ce495ebadd54a3aea5534a54d3ed1890116603" translate="yes" xml:space="preserve">
          <source>are subjected to double quote interpolation. That means that if you want to use variables, you must use an &lt;code&gt;eval()&lt;/code&gt;:</source>
          <target state="translated">큰 따옴표 보간이 적용됩니다. 즉, 변수를 사용하려면 &lt;code&gt;eval()&lt;/code&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1660aa40e15fa486c99c667a79b0b660d94e44d8" translate="yes" xml:space="preserve">
          <source>are supported by a data structure called the</source>
          <target state="translated">데이터 구조에 의해 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b0525539dbfb2e75b20f33ebd3a32d8383ed15e2" translate="yes" xml:space="preserve">
          <source>are text editors for OS X that have a Perl sensitivity mode ( &lt;a href=&quot;http://www.barebones.com/&quot;&gt;http://www.barebones.com/&lt;/a&gt; ).</source>
          <target state="translated">Perl 감도 모드 ( &lt;a href=&quot;http://www.barebones.com/&quot;&gt;http://www.barebones.com/&lt;/a&gt; ) 가있는 OS X 용 텍스트 편집기입니다 .</target>
        </trans-unit>
        <trans-unit id="8f5de845a40e63e6edb669bb61faa6f919437589" translate="yes" xml:space="preserve">
          <source>are the list-type ops to concatenate.</source>
          <target state="translated">연결할 목록 유형 op입니다.</target>
        </trans-unit>
        <trans-unit id="7df1a21211f78189703a86e3cbb836a7e63fe998" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+D800..U+DBFF&lt;/code&gt; and the</source>
          <target state="translated">&lt;code&gt;U+D800..U+DBFF&lt;/code&gt; 범위 이며</target>
        </trans-unit>
        <trans-unit id="e10ada24dcf0e25f997bb273775bbfb50fbba99d" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; . The surrogate encoding is</source>
          <target state="translated">&lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; 범위 입니다. 대리 인코딩은</target>
        </trans-unit>
        <trans-unit id="c989bfbe77103d980620a3c854a885a1e8a7d19d" translate="yes" xml:space="preserve">
          <source>are the range &lt;code&gt;U+DC00..U+DFFF&lt;/code&gt;. The surrogate encoding is</source>
          <target state="translated">&lt;code&gt;U+DC00..U+DFFF&lt;/code&gt; 범위 입니다. 대리 인코딩은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7fb58a3423afb25ba8d716d2723dadfbadf6664c" translate="yes" xml:space="preserve">
          <source>are totally valid encodings but not registered at IANA. The names under which they are listed here are probably the most widely-known names for these encodings and are recommended names.</source>
          <target state="translated">완전히 유효한 인코딩이지만 IANA에 등록되지 않았습니다. 여기에 나열된 이름은 이러한 인코딩에 대해 가장 널리 알려진 이름이며 권장되는 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b02d00372e009301b6f76aac94b40c9dd1c62278" translate="yes" xml:space="preserve">
          <source>are treated as infinite loops.</source>
          <target state="translated">무한 루프로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="b69d4058e49518cf15c9514191d73871d3c11840" translate="yes" xml:space="preserve">
          <source>are two hex digits) doesn't go further than 255. (Starting in Perl 5.14, if you're an octal fan, you can also use &lt;code&gt;\o{oct}&lt;/code&gt;.)</source>
          <target state="translated">두 개의 16 진수)는 255를 넘지 않습니다. (Perl 5.14부터 8 진수 팬이라면 &lt;code&gt;\o{oct}&lt;/code&gt; 사용할 수도 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="7ceaee791c3214e301c067af0fb90e4e9184e870" translate="yes" xml:space="preserve">
          <source>are used in absolutely incompatible manner. Parameters to these functions could be described &lt;b&gt;xsubpp&lt;/b&gt; like this:</source>
          <target state="translated">절대 호환되지 않는 방식으로 사용됩니다. 이러한 함수에 대한 매개 변수는 다음 과 같이 &lt;b&gt;xsubpp&lt;/b&gt; 로 설명 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="225abc0f937024b5e6707bd1f4cf5fc01203b6c7" translate="yes" xml:space="preserve">
          <source>are used to allow the calling code to think that there is only one such encoding. This is almost always referred to as &lt;code&gt;utf8&lt;/code&gt; , but it means the EBCDIC version as well. Again, comments in the code may well be wrong even if the code itself is right. For example, the concept of UTF-8 &lt;code&gt;invariant
characters&lt;/code&gt; differs between ASCII and EBCDIC. On ASCII platforms, only characters that do not have the high-order bit set (i.e. whose ordinals are strict ASCII, 0 - 127) are invariant, and the documentation and comments in the code may assume that, often referring to something like, say, &lt;code&gt;hibit&lt;/code&gt; . The situation differs and is not so simple on EBCDIC machines, but as long as the code itself uses the &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; macro appropriately, it works, even if the comments are wrong.</source>
          <target state="translated">호출 코드가 그러한 인코딩이 하나만 있다고 생각하게하는 데 사용됩니다. 이것은 거의 항상 &lt;code&gt;utf8&lt;/code&gt; 이라고 하지만 EBCDIC 버전도 의미합니다. 다시 말하지만 코드 자체가 옳더라도 코드의 주석이 잘못되었을 수 있습니다. 예를 들어 UTF-8 &lt;code&gt;invariant characters&lt;/code&gt; 의 개념은 ASCII와 EBCDIC에서 다릅니다. ASCII 플랫폼에서는 상위 비트가 설정되지 않은 문자 (즉, 서 수가 엄격한 ASCII, 0-127 인 문자) 만 변하지 않으며 코드의 문서 및 주석은 종종 다음과 같은 것을 언급한다고 가정 할 수 있습니다. , &lt;code&gt;hibit&lt;/code&gt; . 상황이 다르고 EBCDIC 시스템에서 그렇게 간단하지는 않지만 코드 자체가 &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; 사용하는 한 주석이 틀리더라도 매크로가 적절하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e7f4df1405160e9c5b49e4d9bd56cbd0f69b35f7" translate="yes" xml:space="preserve">
          <source>are used to allow the calling code to think that there is only one such encoding. This is almost always referred to as &lt;code&gt;utf8&lt;/code&gt;, but it means the EBCDIC version as well. Again, comments in the code may well be wrong even if the code itself is right. For example, the concept of UTF-8 &lt;code&gt;invariant characters&lt;/code&gt; differs between ASCII and EBCDIC. On ASCII platforms, only characters that do not have the high-order bit set (i.e. whose ordinals are strict ASCII, 0 - 127) are invariant, and the documentation and comments in the code may assume that, often referring to something like, say, &lt;code&gt;hibit&lt;/code&gt;. The situation differs and is not so simple on EBCDIC machines, but as long as the code itself uses the &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; macro appropriately, it works, even if the comments are wrong.</source>
          <target state="translated">호출 코드가 이러한 인코딩이 하나만 있다고 생각할 수 있도록하는 데 사용됩니다. 이것은 거의 항상 &lt;code&gt;utf8&lt;/code&gt; 이라고 부르지 만 EBCDIC 버전도 의미합니다. 다시 말하지만, 코드 자체가 옳더라도 코드의 주석은 잘못 될 수 있습니다. 예를 들어, UTF-8 &lt;code&gt;invariant characters&lt;/code&gt; 의 개념은 ASCII와 EBCDIC간에 다릅니다. ASCII 플랫폼에서는 상위 비트 세트가없는 문자 (즉, 서 수가 엄격한 ASCII, 0-127 인 문자) 만 변하지 않으며 코드의 문서 및 주석은 다음과 같은 것을 참조하는 것으로 가정 할 수 있습니다. , &lt;code&gt;hibit&lt;/code&gt; . 상황은 다르며 EBCDIC 시스템에서는 그렇게 간단하지 않지만 코드 자체가 &lt;code&gt;NATIVE_IS_INVARIANT()&lt;/code&gt; 사용하는 한 매크로가 적절하게 작동하면 주석이 잘못 되더라도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b5e6f047bd2af282863f2c0acfd2b4831e04019f" translate="yes" xml:space="preserve">
          <source>are used to refer to the relative positioning of the stack layers.</source>
          <target state="translated">스택 층의 상대적 위치를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="79c5c14521f2fdbf7474b004cb4f21e3735f3d69" translate="yes" xml:space="preserve">
          <source>are usually from the standards &lt;b&gt;ISO 3166&lt;/b&gt; and &lt;b&gt;ISO 639&lt;/b&gt;, the two-letter abbreviations for the countries and the languages of the world, respectively. The</source>
          <target state="translated">일반적으로 &lt;b&gt;ISO 3166&lt;/b&gt; 및 &lt;b&gt;ISO 639&lt;/b&gt; 표준 , 각각 국가 및 세계 언어의 두 글자 약어입니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="e6b83e0d18c05db2e099977bc4d92896d38a2907" translate="yes" xml:space="preserve">
          <source>are what is fed to &lt;code&gt;ok(...)&lt;/code&gt; if this test isn't skipped.</source>
          <target state="translated">이 테스트를 건너 뛰지 않으면 &lt;code&gt;ok(...)&lt;/code&gt; 공급됩니다 .</target>
        </trans-unit>
        <trans-unit id="624cd1f425ffb0afe6e743d09639a61c5ac6e5af" translate="yes" xml:space="preserve">
          <source>aren't</source>
          <target state="translated">aren't</target>
        </trans-unit>
        <trans-unit id="04d6e2b300911995efa37b6707fdc02975a3021c" translate="yes" xml:space="preserve">
          <source>arg</source>
          <target state="translated">arg</target>
        </trans-unit>
        <trans-unit id="e044db5cacc7c1e1ded3c45fa7472331fe5e6246" translate="yes" xml:space="preserve">
          <source>arg1</source>
          <target state="translated">arg1</target>
        </trans-unit>
        <trans-unit id="b38facf4a8f9f6e8fc7192d1cbc326386647f4c1" translate="yes" xml:space="preserve">
          <source>arg2</source>
          <target state="translated">arg2</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="0f3802314d747bbc5016897875185c3a9fae57bf" translate="yes" xml:space="preserve">
          <source>argument</source>
          <target state="translated">argument</target>
        </trans-unit>
        <trans-unit id="d8d433b9ebc59257b2702d1e5069f881de7eb837" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::joinable&lt;/code&gt; ), returns a list of all non-joined, non-detached</source>
          <target state="translated">인수 ( &lt;code&gt;threads::joinable&lt;/code&gt; )는 결합 되지 않은 분리되지 않은 모든 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3aa1722ee6a3fbb43a386edfe0a4443a9379b6cc" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::joinable&lt;/code&gt;), returns a list of all non-joined, non-detached</source>
          <target state="translated">인수 ( &lt;code&gt;threads::joinable&lt;/code&gt; ), 결합 되지 않고 분리되지 않은 모든 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="75fa8514a906cf4d46ad0af7f07708ece0b99d60" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::running&lt;/code&gt; ), returns a list of all non-joined, non-detached</source>
          <target state="translated">인수 ( &lt;code&gt;threads::running&lt;/code&gt; )는 결합되지 않은 분리되지 않은 모든 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="97ba3baaeabaca14baa3cc7d89714aa165f51fdf" translate="yes" xml:space="preserve">
          <source>argument (using &lt;code&gt;threads::running&lt;/code&gt;), returns a list of all non-joined, non-detached</source>
          <target state="translated">인수 ( &lt;code&gt;threads::running&lt;/code&gt; )는 결합되지 않고 분리되지 않은 모든 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d3aa5b01cae682ed2f47655046c91faa406d82a7" translate="yes" xml:space="preserve">
          <source>argument is in the customary binary format used for Perl strings.</source>
          <target state="translated">인수는 Perl 문자열에 사용되는 일반적인 이진 형식입니다.</target>
        </trans-unit>
        <trans-unit id="5bc5346716c03ee04dad8fb513609b63a372ea19" translate="yes" xml:space="preserve">
          <source>argument is optional; in some cases, it is mandatory.</source>
          <target state="translated">인수는 선택 사항입니다. 어떤 경우에는 필수입니다.</target>
        </trans-unit>
        <trans-unit id="cd393b012062093f38db6d2b39b7ceda6271e2a9" translate="yes" xml:space="preserve">
          <source>argument specifies that &lt;code&gt;autosplit&lt;/code&gt; is to check the modification time of the module against that of the &lt;code&gt;autosplit.ix&lt;/code&gt; file, and only split the module if it is newer. $modtime defaults to 1.</source>
          <target state="translated">인수는 &lt;code&gt;autosplit&lt;/code&gt; 이 &lt;code&gt;autosplit.ix&lt;/code&gt; 파일 의 수정 시간과 모듈의 수정 시간을 확인하고 더 최신 인 경우에만 모듈을 분할하도록 지정 합니다. $ modtime의 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="1a29b569d43822c3afa1f10f2e311200106908b4" translate="yes" xml:space="preserve">
          <source>argument tells &lt;code&gt;Encode&lt;/code&gt; what to do when encountering malformed data. Without</source>
          <target state="translated">인수는 잘못된 데이터가 발생할 때 수행 할 작업을 &lt;code&gt;Encode&lt;/code&gt; 에 알려줍니다 . 없이</target>
        </trans-unit>
        <trans-unit id="f8d9ac9f93a7c2347999f2cbea28206b99e65b72" translate="yes" xml:space="preserve">
          <source>argument to &lt;code&gt;when&lt;/code&gt; does is hard to describe precisely, but in general, it tries to guess what you want done. Sometimes it is interpreted as &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt;, and sometimes it is not. It also behaves differently when lexically enclosed by a &lt;code&gt;given&lt;/code&gt; block than it does when dynamically enclosed by a &lt;code&gt;foreach&lt;/code&gt; loop. The rules are far too difficult to understand to be described here. See &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;&quot;Experimental Details on given and when&quot;&lt;/a&gt; later on.</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 수행하는지에 대한 논쟁 은 정확하게 설명하기 어렵지만 일반적으로 원하는 작업을 추측하려고합니다. 때로는 &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt; 로 해석 되고 때로는 그렇지 않습니다. 또한 &lt;code&gt;given&lt;/code&gt; 블록에 의해 어휘 적으로 묶일 때 &lt;code&gt;foreach&lt;/code&gt; 루프에 의해 동적으로 묶일 때와 다르게 동작 합니다. 여기에 설명하기에는 규칙을 이해하기가 너무 어렵습니다. 나중에 &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;&quot;주어진시기와시기에 대한 실험적 세부 사항&quot;을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e918e513d7e7933ffcc3b08aa036254e58b7109" translate="yes" xml:space="preserve">
          <source>argument to &lt;code&gt;when&lt;/code&gt; does is hard to describe precisely, but in general, it tries to guess what you want done. Sometimes it is interpreted as &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt;, and sometimes it is not. It also behaves differently when lexically enclosed by a &lt;code&gt;given&lt;/code&gt; block than it does when dynamically enclosed by a &lt;code&gt;foreach&lt;/code&gt; loop. The rules are far too difficult to understand to be described here. See &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;Experimental Details on given and when&lt;/a&gt; later on.</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; 대한 주장 은 정확하게 설명하기 어렵지만 일반적으로 원하는 것을 추측하려고합니다. 때로는 &lt;code&gt;$_ ~~ &lt;i&gt;EXPR&lt;/i&gt;&lt;/code&gt; 로 해석되지만 그렇지 않은 경우도 있습니다. &lt;code&gt;given&lt;/code&gt; 블록으로 사 전적으로 묶으 면 &lt;code&gt;foreach&lt;/code&gt; 루프로 동적으로 묶일 때와 다르게 동작 합니다. 여기에 설명하기에는 규칙을 이해하기가 너무 어렵습니다. &lt;a href=&quot;#Experimental-Details-on-given-and-when&quot;&gt;주어진 시간과&lt;/a&gt; 나중에 실험 세부 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e08f7198b54296915eb6e0097b8ceca98cfafe50" translate="yes" xml:space="preserve">
          <source>argument to one of the following values:</source>
          <target state="translated">다음 값 중 하나에 대한 인수 :</target>
        </trans-unit>
        <trans-unit id="3abba5546715d0ff24cfa816d8610e27353a5e14" translate="yes" xml:space="preserve">
          <source>argument will be true if there is a layer below and that layer was expecting UTF-8.</source>
          <target state="translated">아래에 레이어가 있고 해당 레이어에 UTF-8이 필요한 경우 인수는 true입니다.</target>
        </trans-unit>
        <trans-unit id="77d4f1467ed49524381be69d50a3bb40b010d3c6" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; will cause only the thread to exit. With a</source>
          <target state="translated">인수, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 는 스레드 만 종료시킵니다. 와</target>
        </trans-unit>
        <trans-unit id="5e1a5dc31772bb5680208573714d0df8690531e4" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; will terminate the application.</source>
          <target state="translated">인수, &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 는 응용 프로그램을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="c353caecf10c950bccccbbae0f2e6c9aa6877d67" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;exit()&lt;/code&gt; will cause only the thread to exit. With a</source>
          <target state="translated">인수, &lt;code&gt;exit()&lt;/code&gt; 는 스레드 만 종료되도록합니다. 와 함께</target>
        </trans-unit>
        <trans-unit id="4eb3d37fc015710e9f6fb48fd8cf1fbae8638195" translate="yes" xml:space="preserve">
          <source>argument, &lt;code&gt;exit()&lt;/code&gt; will terminate the application.</source>
          <target state="translated">인수, &lt;code&gt;exit()&lt;/code&gt; 는 응용 프로그램을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="cff32fbb8900b87449ed727fccd847391fb13379" translate="yes" xml:space="preserve">
          <source>argument. For example, &lt;a href=&quot;Encode::Unicode&quot;&gt;Encode::Unicode&lt;/a&gt; ignores</source>
          <target state="translated">논의. 예를 들어 &lt;a href=&quot;Encode::Unicode&quot;&gt;Encode :: Unicode&lt;/a&gt; 는</target>
        </trans-unit>
        <trans-unit id="11b4277f19e0685458402bdc5d7577a60a68c705" translate="yes" xml:space="preserve">
          <source>argument. For example, &lt;a href=&quot;encode/unicode&quot;&gt;Encode::Unicode&lt;/a&gt; ignores</source>
          <target state="translated">논의. 예를 들어 &lt;a href=&quot;encode/unicode&quot;&gt;Encode :: Unicode&lt;/a&gt; 는 무시합니다.</target>
        </trans-unit>
        <trans-unit id="d4da21b9484bced14bdff9911f748d00022f7cf3" translate="yes" xml:space="preserve">
          <source>argument. Use &lt;b&gt;-Ilib&lt;/b&gt;, for instance. &lt;b&gt;-I lib&lt;/b&gt; won't work.</source>
          <target state="translated">논의. 예를 들어 &lt;b&gt;-Ilib를&lt;/b&gt; 사용하십시오 . &lt;b&gt;-나는 lib&lt;/b&gt; 가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9077da4d0275ca769922dd3ab43da95b6ef7b997" translate="yes" xml:space="preserve">
          <source>arguments are allowed, provided that</source>
          <target state="translated">다음과 같은 경우에 인수가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="168293336923dcdfadd4e17664f5fabfcd3ee1d2" translate="yes" xml:space="preserve">
          <source>arguments can be ignored in most cases)</source>
          <target state="translated">대부분의 경우 인수를 무시할 수 있습니다)</target>
        </trans-unit>
        <trans-unit id="a144cfdf650067c37a4a69dac8b434fbb91f984b" translate="yes" xml:space="preserve">
          <source>arguments have been parsed (so you can not change the way arguments are processed, sorry), typically with the &lt;code&gt;-P&lt;i&gt;plugin&lt;/i&gt;&lt;/code&gt; switch, eg:</source>
          <target state="translated">일반적으로 &lt;code&gt;-P&lt;i&gt;plugin&lt;/i&gt;&lt;/code&gt; 스위치를 사용하여 인수를 구문 분석했습니다 (따라서 인수 처리 방식을 변경할 수 없습니다. 죄송합니다) . 예 :</target>
        </trans-unit>
        <trans-unit id="93520313719be4cf49f3e938fc38e935e34348fd" translate="yes" xml:space="preserve">
          <source>argv[1]</source>
          <target state="translated">argv[1]</target>
        </trans-unit>
        <trans-unit id="083082af3264d59ab17f2c00e32def6a2f7aa65a" translate="yes" xml:space="preserve">
          <source>arithmetic shift</source>
          <target state="translated">산술 시프트</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
