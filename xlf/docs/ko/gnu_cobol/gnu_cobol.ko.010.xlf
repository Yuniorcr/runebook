<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="gnu_cobol">
    <body>
      <group id="gnu_cobol">
        <trans-unit id="d1b65c76904bb1d7892cf4c95cef6b7509ed01b8" translate="yes" xml:space="preserve">
          <source>rule and almost every aspect of report generation are handled entirely by the Report Writer Control System.</source>
          <target state="translated">규칙 및 보고서 생성의 거의 모든 측면은 보고서 작성기 제어 시스템에서 전적으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="1b79c2fe17bf1346e57695b21c57ab6123cfaf3f" translate="yes" xml:space="preserve">
          <source>sa_IN, sah_RU, se_FI, se_NO se_SE, si_LK, sk_SK, sl_SI, sma_NO, sma_SE, smj_NO, smj_SE, smn_FI, sms_FI, sq_AL, sr_Cyrl_BA, sr_Cyrl_CS, sr_Latn_BA, sr_Latn_CS, sv_FI, sv_SE, sw_KE syr_SY</source>
          <target state="translated">sa_IN, sah_RU, se_FI, se_NO se_SE, si_LK, sk_SK, sl_SI, sma_NO, sma_SE, smj_NO, smj_SE, smn_FI, sms_FI, sq_AL, sr_Cyrl_BA, sr_Cyrl_CS, sr_Latn_CS, sr_Latn_BA</target>
        </trans-unit>
        <trans-unit id="ad6468a2d0d6ef97df457594597c388bcce46a5d" translate="yes" xml:space="preserve">
          <source>scope of applicability</source>
          <target state="translated">적용 범위</target>
        </trans-unit>
        <trans-unit id="681686265d9c533c30f520d6475a888e037ab7c6" translate="yes" xml:space="preserve">
          <source>screenio.cpy</source>
          <target state="translated">screenio.cpy</target>
        </trans-unit>
        <trans-unit id="7febce039c4cf1c9115e832792b7d7f24fa56d4e" translate="yes" xml:space="preserve">
          <source>seconds</source>
          <target state="translated">seconds</target>
        </trans-unit>
        <trans-unit id="92713d4709377111cf31f2a71986c411bd6cb5b0" translate="yes" xml:space="preserve">
          <source>seed</source>
          <target state="translated">seed</target>
        </trans-unit>
        <trans-unit id="742c09dd08fd9067978fa0708e18e97117b05ddb" translate="yes" xml:space="preserve">
          <source>sequence number area&amp;rsquo;</source>
          <target state="translated">순번 영역 '</target>
        </trans-unit>
        <trans-unit id="b37299e1f1f93a4a25f4a4f58451d67c881992ea" translate="yes" xml:space="preserve">
          <source>sequential</source>
          <target state="translated">sequential</target>
        </trans-unit>
        <trans-unit id="c966b463b67c6424fefebcfcd475817e379065c7" translate="yes" xml:space="preserve">
          <source>shorter</source>
          <target state="translated">shorter</target>
        </trans-unit>
        <trans-unit id="c6dc9bc9f77b486a13b3f63ffb2ffd1cb3fef4db" translate="yes" xml:space="preserve">
          <source>should</source>
          <target state="translated">should</target>
        </trans-unit>
        <trans-unit id="db1fa2772529364e35e640ddd60a0126cdc4186f" translate="yes" xml:space="preserve">
          <source>shown as a choice between &lt;var&gt;identifier-1&lt;/var&gt;, &lt;var&gt;word-1&lt;/var&gt; and &lt;var&gt;literal-1&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; , &lt;var&gt;word-1&lt;/var&gt; 및 &lt;var&gt;literal-1&lt;/var&gt; 중에서 선택 사항으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="4306fbbc0e3566b25aaa377909e968804f6bb4dc" translate="yes" xml:space="preserve">
          <source>signed char</source>
          <target state="translated">서명 된 문자</target>
        </trans-unit>
        <trans-unit id="acb03f8f1a72900878ec99decfdb934f6f35a204" translate="yes" xml:space="preserve">
          <source>significantly</source>
          <target state="translated">significantly</target>
        </trans-unit>
        <trans-unit id="5782abe04cb4d9a8b678b9133ebe725d57794d75" translate="yes" xml:space="preserve">
          <source>signifies the start of another record layout for the file.</source>
          <target state="translated">파일에 대한 다른 레코드 레이아웃의 시작을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ce0b1612aa711b78a720295d271a33894e2b72bf" translate="yes" xml:space="preserve">
          <source>single</source>
          <target state="translated">single</target>
        </trans-unit>
        <trans-unit id="1cf0c68232bc1237e13744a62daa903bf3a1c851" translate="yes" xml:space="preserve">
          <source>sort work file</source>
          <target state="translated">작업 파일 정렬</target>
        </trans-unit>
        <trans-unit id="9aef70a1e4e2904358590db89f2743c6ddc1051f" translate="yes" xml:space="preserve">
          <source>sort-file-1</source>
          <target state="translated">sort-file-1</target>
        </trans-unit>
        <trans-unit id="9d953869b5e8556de83213e742ef1e50c58a24e9" translate="yes" xml:space="preserve">
          <source>sort-file-name-1</source>
          <target state="translated">sort-file-name-1</target>
        </trans-unit>
        <trans-unit id="1daf600c25217c309ef03b510e4c83cd70921b85" translate="yes" xml:space="preserve">
          <source>source string</source>
          <target state="translated">소스 문자열</target>
        </trans-unit>
        <trans-unit id="0803df4ff1650933d2ffe6be04d4b21432134252" translate="yes" xml:space="preserve">
          <source>space</source>
          <target state="translated">space</target>
        </trans-unit>
        <trans-unit id="09322010084340cbcfe43c9de853c1350db17152" translate="yes" xml:space="preserve">
          <source>specified in the file&amp;rsquo;s &lt;code&gt;SELECT&lt;/code&gt;, locks (either automatically or manually acquired) will continue to accumulate as more and more records are read, until they are explicitly released. This is referred to as  &lt;em&gt;multiple record locking&lt;/em&gt;.</source>
          <target state="translated">파일의 &lt;code&gt;SELECT&lt;/code&gt; 에 지정된 잠금 (자동 또는 수동으로 획득)은 명시 적으로 해제 될 때까지 점점 더 많은 레코드를 읽을 때 계속 누적됩니다. 이를 &lt;em&gt;다중 레코드 잠금&lt;/em&gt; 이라고합니다 .</target>
        </trans-unit>
        <trans-unit id="b7ec7da52849cfb15b90e0143a4a307e0f6d6f01" translate="yes" xml:space="preserve">
          <source>specified in the file&amp;rsquo;s&lt;code&gt;SELECT&lt;/code&gt; locks (either automatically or manually acquired) will continue to accumulate as more and more records are read, until they are explicitly released. This is referred to as &amp;rsquo;</source>
          <target state="translated">파일의 &lt;code&gt;SELECT&lt;/code&gt; 잠금 (자동 또는 수동으로 획득)에 지정된 파일 은 명시 적으로 해제 될 때까지 점점 더 많은 레코드를 읽을 때 누적됩니다. 이것을 '</target>
        </trans-unit>
        <trans-unit id="aa0d53a4a2d686486df45ab2d2d2e469852e3a94" translate="yes" xml:space="preserve">
          <source>specified or implied, or if the conditional expression evaluated to &lt;code&gt;FALSE&lt;/code&gt;, processing proceeds with step C.</source>
          <target state="translated">지정되거나 암시되거나 조건식이 &lt;code&gt;FALSE&lt;/code&gt; 로 평가 된 경우 처리는 단계 C로 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="42f84357f0b8015663a2c088257da04644f9d463" translate="yes" xml:space="preserve">
          <source>specified or implied, or if the conditional expression evaluated to FALSE, processing proceeds with step (C).</source>
          <target state="translated">명시 적이거나 묵시적이거나, 조건식이 FALSE로 평가되면, 처리는 단계 (C)로 진행된다.</target>
        </trans-unit>
        <trans-unit id="8e16f4ea47610e514c0ab395bbb7f066afd61fd5" translate="yes" xml:space="preserve">
          <source>specified, &lt;var&gt;mnemonic-name-1&lt;/var&gt; must be one of the built-in output device names &lt;code&gt;CONSOLE&lt;/code&gt;, &lt;code&gt;PRINTER&lt;/code&gt;, &lt;code&gt;STDERR&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt;, &lt;code&gt;SYSERR&lt;/code&gt;, &lt;code&gt;SYSLIST&lt;/code&gt;, &lt;code&gt;SYSLST&lt;/code&gt; or &lt;code&gt;SYSOUT&lt;/code&gt; or a mnemonic name assigned to one of those devices via the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) paragraph.</source>
          <target state="translated">지정된 &lt;var&gt;mnemonic-name-1&lt;/var&gt; 기본 출력 장치 이름 중 하나 여야 &lt;code&gt;CONSOLE&lt;/code&gt; , &lt;code&gt;PRINTER&lt;/code&gt; , &lt;code&gt;STDERR&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; , &lt;code&gt;SYSERR&lt;/code&gt; , &lt;code&gt;SYSLIST&lt;/code&gt; , &lt;code&gt;SYSLST&lt;/code&gt; 또는 &lt;code&gt;SYSOUT&lt;/code&gt; 또는 비아 이러한 장치 중 하나에 할당 호명 &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (참조 : &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt; ) 단락.</target>
        </trans-unit>
        <trans-unit id="5d1e86717d94907769e7d381613c0e9a793fcead" translate="yes" xml:space="preserve">
          <source>specified, and the file is</source>
          <target state="translated">지정되고 파일은</target>
        </trans-unit>
        <trans-unit id="3b0e6f143cc51294474bf92cc11c1ff7a50dc8cd" translate="yes" xml:space="preserve">
          <source>specified, and&amp;hellip;</source>
          <target state="translated">지정하고&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="d1e9eaddee38696f0a0fdb5545357493d5465dac" translate="yes" xml:space="preserve">
          <source>specified, or if the conditional expression evaluated to &lt;code&gt;FALSE&lt;/code&gt;, processing continues with the next step.</source>
          <target state="translated">지정되거나 조건식이 &lt;code&gt;FALSE&lt;/code&gt; 로 평가 된 경우 처리는 다음 단계로 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="5df6a7389193e5d2949fbbdbb661214ae6d117fa" translate="yes" xml:space="preserve">
          <source>specified, or if the conditional expression evaluated to FALSE, processing continues with the next step.</source>
          <target state="translated">지정되거나 조건식이 FALSE로 평가되면 다음 단계로 처리가 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="bf6651f482e62cadfb37cae811b06e358917ad58" translate="yes" xml:space="preserve">
          <source>specified, the compiler will create a &lt;code&gt;PIC X(1024)&lt;/code&gt; data item named &lt;var&gt;word-1&lt;/var&gt; within the program; the contents of that data item at the time the program opens &lt;var&gt;file-name-1&lt;/var&gt; will then serve as the File Location String that will identify the data file.</source>
          <target state="translated">지정하면 컴파일러는 프로그램 내에 &lt;var&gt;word-1&lt;/var&gt; 이라는 &lt;code&gt;PIC X(1024)&lt;/code&gt; 데이터 항목 을 만듭니다 . 프로그램이 &lt;var&gt;file-name-1&lt;/var&gt; 을 열 때 해당 데이터 항목의 내용은 데이터 파일을 식별하는 파일 위치 문자열 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="9f4dc98623ade7c5ca14c6df925fd732825247fb" translate="yes" xml:space="preserve">
          <source>specified, the compiler will create a&lt;code&gt;PIC X(1024)&lt;/code&gt;data item named &amp;lt;</source>
          <target state="translated">지정된 경우 컴파일러는 &amp;lt;라는 이름 의 &lt;code&gt;PIC X(1024)&lt;/code&gt; 데이터 항목 을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="51cb9bab35010a91f6ff574e9daeb1740d39dbb3" translate="yes" xml:space="preserve">
          <source>specified, then the next I/O statement your program executes, except for &lt;code&gt;START&lt;/code&gt; (see &lt;a href=&quot;#START&quot;&gt;START&lt;/a&gt;), will release the lock. This is referred to as  &lt;em&gt;single record locking&lt;/em&gt;.</source>
          <target state="translated">지정하면 &lt;code&gt;START&lt;/code&gt; ( &lt;a href=&quot;#START&quot;&gt;START&lt;/a&gt; 참조 )를 제외하고 프로그램이 실행하는 다음 I / O 문 이 잠금을 해제합니다. 이를 &lt;em&gt;단일 레코드 잠금&lt;/em&gt; 이라고합니다 .</target>
        </trans-unit>
        <trans-unit id="86f8a4eaadf7c6a8ec08307a6c7a892181f11713" translate="yes" xml:space="preserve">
          <source>specifies the alias names &lt;code&gt;SIGMA&lt;/code&gt; for the intrinsic function &lt;code&gt;STANDARD-DEVIATION&lt;/code&gt; and &lt;code&gt;MF2&lt;/code&gt; for &lt;code&gt;MY-FUNCTION-2&lt;/code&gt;.</source>
          <target state="translated">지정 별명 &lt;code&gt;SIGMA&lt;/code&gt; 고유 함수 &lt;code&gt;STANDARD-DEVIATION&lt;/code&gt; 및 &lt;code&gt;MF2&lt;/code&gt; 위한 &lt;code&gt;MY-FUNCTION-2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31aa78e29281faf58847a155a15d36ea73a93d43" translate="yes" xml:space="preserve">
          <source>sprog1.s</source>
          <target state="translated">sprog1.s</target>
        </trans-unit>
        <trans-unit id="f410e0466ae4b065bfa4d9010ad6056864ed4e50" translate="yes" xml:space="preserve">
          <source>standard</source>
          <target state="translated">standard</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="f25feca64a38a57313bdd1f13f76338eb5dade07" translate="yes" xml:space="preserve">
          <source>statement in the sentence.</source>
          <target state="translated">문장에서 진술.</target>
        </trans-unit>
        <trans-unit id="6c7bc6924a421aed3435c033cddf6203d5a84974" translate="yes" xml:space="preserve">
          <source>status-code &lt;code&gt;PIC XX COMP-5&lt;/code&gt;.</source>
          <target state="translated">상태 코드 &lt;code&gt;PIC XX COMP-5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="677c1bfa3a036c74b82ee72bdbebee78a5efbb71" translate="yes" xml:space="preserve">
          <source>still</source>
          <target state="translated">still</target>
        </trans-unit>
        <trans-unit id="7eeb3148d73b9d75a7e2817fba581a56d3e4f8db" translate="yes" xml:space="preserve">
          <source>stored in the same directory as your program, set this environment variable to the folder in which the copybooks may be found (IBM mainframe programmers will recognize this as</source>
          <target state="translated">프로그램과 동일한 디렉토리에 저장된 경우이 환경 변수를 카피 북이있는 폴더로 설정하십시오 (IBM 메인 프레임 프로그래머는이를 다음과 같이 인식합니다.</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="1673dc035142f127926f49ade9ea8340070a3df7" translate="yes" xml:space="preserve">
          <source>sub1.cbl</source>
          <target state="translated">sub1.cbl</target>
        </trans-unit>
        <trans-unit id="4265f26ffb1d8ae4558599dad0bd8cae6dd0086e" translate="yes" xml:space="preserve">
          <source>sub2.cbl</source>
          <target state="translated">sub2.cbl</target>
        </trans-unit>
        <trans-unit id="eb581281d92f985cc502e78811c5c563d507cbbb" translate="yes" xml:space="preserve">
          <source>subordinate</source>
          <target state="translated">subordinate</target>
        </trans-unit>
        <trans-unit id="67951192c64d6968b79170b6dddeeac619464db2" translate="yes" xml:space="preserve">
          <source>subordinate to</source>
          <target state="translated">종속</target>
        </trans-unit>
        <trans-unit id="044869e8c5c0bc69f8d5fd3b5f06a1fb64f3c6b8" translate="yes" xml:space="preserve">
          <source>substitutable-items</source>
          <target state="translated">substitutable-items</target>
        </trans-unit>
        <trans-unit id="c6f9c81ba7af549adc6f61eeb9b72547388ded9c" translate="yes" xml:space="preserve">
          <source>subvsindex.c</source>
          <target state="translated">subvsindex.c</target>
        </trans-unit>
        <trans-unit id="efd706e9b1125d6bc52bb3b49dda993eea0437bb" translate="yes" xml:space="preserve">
          <source>subvsindex.c.1.h</source>
          <target state="translated">subvsindex.c.1.h</target>
        </trans-unit>
        <trans-unit id="598e0dd9cc034b97f80183f32f7a67201edde5c6" translate="yes" xml:space="preserve">
          <source>summary report</source>
          <target state="translated">요약 보고서</target>
        </trans-unit>
        <trans-unit id="27c4f8997c1face66c2e8451786fff759327dc8e" translate="yes" xml:space="preserve">
          <source>supplied with the source code of the GnuCOBOL compiler, in the top-level directory. There you will find the latest COBOL language features that have been added, some of which may not be in this document due to time constraints. If you find any, please report it as a bug for the Programmer&amp;rsquo;s Guide so that it can be fixed.</source>
          <target state="translated">최상위 디렉토리에서 GnuCOBOL 컴파일러의 소스 코드와 함께 제공됩니다. 여기에 추가 된 최신 COBOL 언어 기능이 있으며, 일부는 시간 제약으로 인해이 문서에 없을 수 있습니다. 발견 된 경우 프로그래머 가이드에 버그로보고하여 수정할 수 있도록하십시오.</target>
        </trans-unit>
        <trans-unit id="949503aaac30f19c574f73a0b91a9e1578e7279a" translate="yes" xml:space="preserve">
          <source>support file sharing. Of course, actual Unix builds of GnuCOBOL, as well as OSX builds, should have no issues because &lt;code&gt;fcntl&lt;/code&gt; should be available.</source>
          <target state="translated">지원 파일 공유. 물론 GnuCOBOL의 실제 Unix 빌드와 OSX 빌드는 &lt;code&gt;fcntl&lt;/code&gt; 을 사용할 수 있어야 하므로 문제가 없어야 합니다.</target>
        </trans-unit>
        <trans-unit id="b1e93c1f35b6b7dcf3037805a18177509e029117" translate="yes" xml:space="preserve">
          <source>support this form-feed behaviour when it generates program source listings! See &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; in</source>
          <target state="translated">프로그램 소스 목록을 생성 할 때이 양식 공급 동작을 지원하십시오! 참조 &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="3cbf11c61bec78b03506b701a6f123a3db818acc" translate="yes" xml:space="preserve">
          <source>support this form-feed behaviour when it generates program source listings! See &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; in</source>
          <target state="translated">프로그램 소스 목록을 생성 할 때이 양식 피드 동작을 지원하십시오! 참조 &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="c72cec5ad8e394324d19e9ac980b80b1b62b1864" translate="yes" xml:space="preserve">
          <source>switch (procedures and statements).</source>
          <target state="translated">스위치 (절차 및 설명).</target>
        </trans-unit>
        <trans-unit id="87a73b9a101c27d2c8920e68578de188e7c8d11d" translate="yes" xml:space="preserve">
          <source>switch (procedures only) or</source>
          <target state="translated">스위치 (절차 만 해당) 또는</target>
        </trans-unit>
        <trans-unit id="bca7e5c14ca9e53691a8862a0155d1295513806a" translate="yes" xml:space="preserve">
          <source>switch (trace procedures and statements) was used when the program was compiled, setting this environment variable to a value of &amp;lsquo;</source>
          <target state="translated">프로그램이 컴파일 될 때 스위치 (추적 프로 시저 및 명령문)를 사용하여이 환경 변수를 '</target>
        </trans-unit>
        <trans-unit id="e1c832db4636a29b5d7b487b8fdc043018c7f173" translate="yes" xml:space="preserve">
          <source>switch (trace procedures) or</source>
          <target state="translated">스위치 (추적 절차) 또는</target>
        </trans-unit>
        <trans-unit id="8a20deecb928e9e298069c4041ffe88479b0312a" translate="yes" xml:space="preserve">
          <source>switch also made a difference:</source>
          <target state="translated">스위치도 차이를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="442c1ca6dbe386de897e10788616b1ee41fdf30c" translate="yes" xml:space="preserve">
          <source>switch and</source>
          <target state="translated">스위치 및</target>
        </trans-unit>
        <trans-unit id="419df4c980ce2d1b8ff5959e20365ce0885b118f" translate="yes" xml:space="preserve">
          <source>switch and the</source>
          <target state="translated">스위치와</target>
        </trans-unit>
        <trans-unit id="32afe8c1e540b9844d8a51d449b4843414e1c921" translate="yes" xml:space="preserve">
          <source>switch compilation switch and are found in the folder defined by the &lt;code&gt;COB_CONFIG_DIR&lt;/code&gt; compilation-time environment variable   (see &lt;a href=&quot;#Compilation-Time-Environment-Variables&quot;&gt;Compilation Time Environment Variables&lt;/a&gt;).</source>
          <target state="translated">스위치 컴파일 스위치는 &lt;code&gt;COB_CONFIG_DIR&lt;/code&gt; 컴파일 시간 환경 변수에 의해 정의 된 폴더에 있습니다 ( &lt;a href=&quot;#Compilation-Time-Environment-Variables&quot;&gt;컴파일 시간 환경 변수&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="a08ffa1cfcf99060eb26020c89f6f56e91ca4aad" translate="yes" xml:space="preserve">
          <source>switch for this function to return any meaningful information.</source>
          <target state="translated">의미있는 정보를 반환하려면이 함수를 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="c09ac19456b60e018f9bfffa0fe370ff9772f92e" translate="yes" xml:space="preserve">
          <source>switch from within program source code.</source>
          <target state="translated">프로그램 소스 코드 내에서 전환합니다.</target>
        </trans-unit>
        <trans-unit id="db37a0b697ff78d895f124cae62ee2209c133263" translate="yes" xml:space="preserve">
          <source>switch instead of</source>
          <target state="translated">대신 스위치</target>
        </trans-unit>
        <trans-unit id="5a70f7ae2c46aa8c6f6c27aac64d4848f20ccc39" translate="yes" xml:space="preserve">
          <source>switch is not specified, the filename of the 1st compilation unit will be used as the name of the executable file. The appropriate extension for the generated file (</source>
          <target state="translated">스위치를 지정하지 않으면 첫 번째 컴파일 단위의 파일 이름이 실행 파일의 이름으로 사용됩니다. 생성 된 파일에 대한 적절한 확장자 (</target>
        </trans-unit>
        <trans-unit id="8867e1e089961df66ca3258133b0516af1a75c09" translate="yes" xml:space="preserve">
          <source>switch is specified to the compiler or the &lt;code&gt;REPOSITORY&lt;/code&gt; (see &lt;a href=&quot;#REPOSITORY&quot;&gt;REPOSITORY&lt;/a&gt;) paragraph specifies either &lt;code&gt;FUNCTION WHEN-COMPILED INTRINSIC&lt;/code&gt; or &lt;code&gt;FUNCTION ALL INTRINSIC&lt;/code&gt;, then references to &lt;code&gt;WHEN-COMPILED&lt;/code&gt; (without a leading &lt;code&gt;FUNCTION&lt;/code&gt; keyword will always reference this intrinsic function and there will be no way to access the &lt;code&gt;WHEN-COMPILED&lt;/code&gt; special register.</source>
          <target state="translated">스위치는 컴파일러 나에 지정 &lt;code&gt;REPOSITORY&lt;/code&gt; (참조 &lt;a href=&quot;#REPOSITORY&quot;&gt;저장소를&lt;/a&gt; 단락 지정 중) &lt;code&gt;FUNCTION WHEN-COMPILED INTRINSIC&lt;/code&gt; 또는 &lt;code&gt;FUNCTION ALL INTRINSIC&lt;/code&gt; 다음에 대한 참조 &lt;code&gt;WHEN-COMPILED&lt;/code&gt; 선도적없이 ( &lt;code&gt;FUNCTION&lt;/code&gt; 키워드는 항상이 내장 함수를 참조하고있는 방법이 없습니다 &lt;code&gt;WHEN-COMPILED&lt;/code&gt; 특수 레지스터 에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="36a10525650c4522d7629ac8307dd7d1ccbd9d13" translate="yes" xml:space="preserve">
          <source>switch is used to create executable files. Only main programs should be compiled in this manner.</source>
          <target state="translated">스위치는 실행 파일을 만드는 데 사용됩니다. 주 프로그램 만 이런 방식으로 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="11bb639118fea01332eb85899fc402e5281c081f" translate="yes" xml:space="preserve">
          <source>switch is used, an operating-system-specific dynamically-loadable module is generated</source>
          <target state="translated">스위치를 사용하면 운영 체제 별 동적으로로드 가능한 모듈이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="fb4d90fd09521ed172dd7433d27cc69ce15765b8" translate="yes" xml:space="preserve">
          <source>switch may be used in addition to &lt;code&gt;-x&lt;/code&gt; to specify the name of the generated executable file. If</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; 와 함께 스위치를 사용 하여 생성 된 실행 파일의 이름을 지정할 수 있습니다 . 만약</target>
        </trans-unit>
        <trans-unit id="96b8fd07595fdc5c0ec386599faf64c6afbb54a6" translate="yes" xml:space="preserve">
          <source>switch nor</source>
          <target state="translated">스위치도</target>
        </trans-unit>
        <trans-unit id="7020a6577a6f46d2ddc0bcfd00eb1aa29f8526c8" translate="yes" xml:space="preserve">
          <source>switch on the GnuCOBOL compiler or by adding the &lt;code&gt;WITH DEBUGGING MODE&lt;/code&gt; clause to the &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; paragraph.</source>
          <target state="translated">GnuCOBOL 컴파일러를 켜거나 &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; 단락에 &lt;code&gt;WITH DEBUGGING MODE&lt;/code&gt; DEBUGGING MODE 절을 추가하여 전환하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba0d787c60703b46c0add0de602a14aa58c4ae01" translate="yes" xml:space="preserve">
          <source>switch on the compiler command, a single directly-executable executable file (UNIX, Windows/Cygwin, OSX) or &amp;ldquo;exe&amp;rdquo; file (Windows, Windows/MinGW) will be generated. This executable file has the compiled code for all COBOL programs contained within the compilation group specified on the &lt;code&gt;cobc&lt;/code&gt; command included in the file.</source>
          <target state="translated">컴파일러 명령을 켜면 직접 실행 가능한 단일 실행 파일 (UNIX, Windows / Cygwin, OSX) 또는 &quot;exe&quot;파일 (Windows, Windows / MinGW)이 생성됩니다. 이 실행 파일에는 파일에 포함 된 &lt;code&gt;cobc&lt;/code&gt; 명령 에 지정된 컴파일 그룹에 포함 된 모든 COBOL 프로그램에 대한 컴파일 된 코드 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9aa88b6b1eef59e2e5555d3379bbca8eec84fbe7" translate="yes" xml:space="preserve">
          <source>switch option shouldn&amp;rsquo;t be used on all GnuCOBOL compilations.</source>
          <target state="translated">모든 GnuCOBOL 컴파일에서 스위치 옵션을 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="0227331f60866d092aaeed6262eff1d3efca7ec3" translate="yes" xml:space="preserve">
          <source>switch option to specify the loader output format, even for main programs.</source>
          <target state="translated">메인 프로그램에 대해서도 로더 출력 형식을 지정하는 스위치 옵션.</target>
        </trans-unit>
        <trans-unit id="740a043810a180ed8efbf0d8530965d71578e41d" translate="yes" xml:space="preserve">
          <source>switch or</source>
          <target state="translated">스위치 또는</target>
        </trans-unit>
        <trans-unit id="5c193c74f810bbec89061e3bd4f9be73c8c07680" translate="yes" xml:space="preserve">
          <source>switch output will be written to STDERR, where it may be piped via a &quot;2&amp;gt; filename&quot; on the command that executes the program.</source>
          <target state="translated">스위치 출력은 STDERR에 기록되며 프로그램을 실행하는 명령의 &quot;2&amp;gt; 파일 이름&quot;을 통해 파이프 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b7af186f4be66f5c7965c7e781af7bcbc585c7a" translate="yes" xml:space="preserve">
          <source>switch output will be written. If this is NOT set to a value, all</source>
          <target state="translated">스위치 출력이 기록됩니다. 값으로 설정되지 않은 경우 모든</target>
        </trans-unit>
        <trans-unit id="bbf43940015f014e94e446100b7f4f5082de7263" translate="yes" xml:space="preserve">
          <source>switch switch is specified to the compiler.</source>
          <target state="translated">스위치 스위치는 컴파일러에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="dfe16fd68af1772980a83da388187eece0fe663c" translate="yes" xml:space="preserve">
          <source>switch switch will generate an executable binary file, usually with no particular extension unless one is explicitly requested of the compiler via the</source>
          <target state="translated">스위치 스위치는 실행 가능한 바이너리 파일을 생성합니다. 일반적으로</target>
        </trans-unit>
        <trans-unit id="c766207039a9781920dee458c683abcd6946fff3" translate="yes" xml:space="preserve">
          <source>switch to start in Fixed Format Mode (remember that this is the default) or the</source>
          <target state="translated">고정 형식 모드 (기본값임을 기억하십시오)에서 시작하도록 전환하거나</target>
        </trans-unit>
        <trans-unit id="bf9f5d00a8182f75f844fd79292a39c1b0d3acbf" translate="yes" xml:space="preserve">
          <source>switch to start in Free Format Mode.</source>
          <target state="translated">자유 포맷 모드로 시작하려면 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="92c5cfc04e0afd528efb09150c151a8e6a39a1ad" translate="yes" xml:space="preserve">
          <source>switch to the GnuCOBOL compiler when you compile your programs.</source>
          <target state="translated">프로그램을 컴파일 할 때 GnuCOBOL 컴파일러로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="6a571872400c34e6db758c995760525e403f9e11" translate="yes" xml:space="preserve">
          <source>switch to the GnuCOBOL compiler.</source>
          <target state="translated">GnuCOBOL 컴파일러로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="2cf78dd3f7a852dbd60aaac3c0f7281226431d9b" translate="yes" xml:space="preserve">
          <source>switch to their compilation:</source>
          <target state="translated">편집으로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="b6e8358235b7eba24ead280e9ed613a6c0f33f6e" translate="yes" xml:space="preserve">
          <source>switch will activate this feature.</source>
          <target state="translated">스위치는이 기능을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="983e3f222b099df179e38438a5a982bd322e359f" translate="yes" xml:space="preserve">
          <source>switch will be generated as directly-executable programs. For example, a native Windows or Windows/MinGW build of GnuCOBOL will generate an</source>
          <target state="translated">스위치는 직접 실행 가능한 프로그램으로 생성됩니다. 예를 들어, GnuCOBOL의 기본 Windows 또는 Windows / MinGW 빌드는</target>
        </trans-unit>
        <trans-unit id="2b64795e51b8e4316ca7c25744538a20177f230d" translate="yes" xml:space="preserve">
          <source>switch will cause the GnuCOBOL compiler to issue warnings messages if these (or any other obsolete syntax) is used in a program.</source>
          <target state="translated">스위치는 GnuCOBOL 컴파일러가 이러한 (또는 다른 구식 구문)이 프로그램에서 사용되는 경우 경고 메시지를 발행하도록합니다.</target>
        </trans-unit>
        <trans-unit id="45bf3d6348c467c60fc14c9c5fdf53f8223e4f7b" translate="yes" xml:space="preserve">
          <source>switch with the &amp;ldquo;upper&amp;rdquo; option (i.e. &lt;code&gt;--fold-call=upper&lt;/code&gt;) to the GnuCOBOL compiler. Similarly, library names could be folded to lower-case by using the &amp;ldquo;lower&amp;rdquo; option (i.e. &lt;code&gt;--fold-call=lower&lt;/code&gt;. If libraries are maintained entirely using upper- or lower-case file names, either of these options will allow libraries to be found regardless of how the programmer entered their names on &lt;code&gt;CALL&lt;/code&gt; statements.</source>
          <target state="translated">&quot;upper&quot;옵션 (예 : &lt;code&gt;--fold-call=upper&lt;/code&gt; )을 사용하여 GnuCOBOL 컴파일러로 전환합니다. 마찬가지로 라이브러리 이름은 &quot;lower&quot;옵션을 사용하여 소문자로 접을 수 있습니다 (예 : &lt;code&gt;--fold-call=lower&lt;/code&gt; . 라이브러리가 대문자 또는 소문자 파일 이름을 사용하여 전체적으로 유지 관리되는 경우이 옵션 중 하나를 사용하여 라이브러리를 사용할 수 있음) 프로그래머가 &lt;code&gt;CALL&lt;/code&gt; 문에 이름을 입력 한 방법에 관계없이 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46a1d236b8e9eddb25c1c71da4041bc33d16d17a" translate="yes" xml:space="preserve">
          <source>switch with the &lt;code&gt;upper&lt;/code&gt; option (i.e. &lt;code&gt;--fold-copy=upper&lt;/code&gt;) to the GnuCOBOL compiler. Similarly, names could be folded to lower-case by using the &lt;code&gt;lower&lt;/code&gt; option (i.e. &lt;code&gt;--fold-copy=lower&lt;/code&gt;. If copybook libraries are maintained entirely using upper- or lower-case file names and extensions, either of these options will allow copybooks to be found regardless of how the programmer entered their names on &lt;code&gt;COPY&lt;/code&gt; statements.</source>
          <target state="translated">와 스위치 &lt;code&gt;upper&lt;/code&gt; 옵션 (즉, &lt;code&gt;--fold-copy=upper&lt;/code&gt; GnuCOBOL 컴파일러). 마찬가지로, &lt;code&gt;lower&lt;/code&gt; 옵션 (예 : &lt;code&gt;--fold-copy=lower&lt;/code&gt; ) 을 사용하여 이름을 소문자로 접을 수 있습니다 . 카피 북 라이브러리가 대문자 또는 소문자 파일 이름과 확장자를 사용하여 완전히 유지 관리되는 경우 이러한 옵션 중 하나가 카피 북을 허용합니다. 프로그래머가 &lt;code&gt;COPY&lt;/code&gt; 문에 이름을 입력 한 방법에 관계없이 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e124c229478d3d68838c8b45bdeaced87d2dd0a3" translate="yes" xml:space="preserve">
          <source>switch) and three separate dynamically-loadable libraries (see</source>
          <target state="translated">스위치) 및 3 개의 개별 동적로드 가능 라이브러리 (</target>
        </trans-unit>
        <trans-unit id="3961ce7aeb2aa023b300f24e74a84f53a19196e0" translate="yes" xml:space="preserve">
          <source>switch) or dynamically-loadable libraries (created via the</source>
          <target state="translated">스위치) 또는 동적으로로드 가능한 라이브러리 (</target>
        </trans-unit>
        <trans-unit id="b522848c408f823145010dd5b17fb1d32f2aa427" translate="yes" xml:space="preserve">
          <source>switch), just to show you the types of settings that may appear:</source>
          <target state="translated">스위치), 표시 될 수있는 설정 유형을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="3a6f3c2ff5085b7534874a00c02a5218f5151878" translate="yes" xml:space="preserve">
          <source>switch), one for each of the three subprograms. Had we wished, we could have created a single dynamically-loadable library containing all three subprograms by adding the</source>
          <target state="translated">스위치), 세 개의 하위 프로그램 각각에 대해 하나씩. 우리가 원했 더라면 우리는 다음을 추가하여 세 개의 하위 프로그램을 모두 포함하는 동적으로로드 가능한 단일 라이브러리를 만들 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="9aed83fd4dc277e654c5e8daa359b964e21114bd" translate="yes" xml:space="preserve">
          <source>switch), those programs may be executed from any shell environment. The exact manner in which the two are executed will differ, as described in the upcoming sections.</source>
          <target state="translated">스위치), 이러한 프로그램은 모든 쉘 환경에서 실행될 수 있습니다. 두 가지가 실행되는 정확한 방식은 다음 섹션에서 설명하는 것처럼 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f1667fc0fd2fbfe7fa3cfc3a9f890d22675a6b35" translate="yes" xml:space="preserve">
          <source>switch).</source>
          <target state="translated">switch).</target>
        </trans-unit>
        <trans-unit id="7c05b4cf2a93b898ef3b56f4732cbf421d0508b7" translate="yes" xml:space="preserve">
          <source>switch,</source>
          <target state="translated">switch,</target>
        </trans-unit>
        <trans-unit id="d1a3ef1efe83c61f76c2bd015d4fcfd7dcc5645d" translate="yes" xml:space="preserve">
          <source>switch, all of which influence the optimization of compiled code. Actually run programs using various optimization switches (or not) and compare execution times against those of unoptimized compiled versions of your programs. Don&amp;rsquo;t just compare the generated C code because sometimes the differences can&amp;rsquo;t be seen at the C source-code level.</source>
          <target state="translated">스위치는 컴파일 된 코드의 최적화에 영향을줍니다. 실제로 다양한 최적화 스위치를 사용하거나 사용하지 않고 프로그램을 실행하고 최적화되지 않은 컴파일 된 버전의 프로그램과 실행 시간을 비교합니다. 생성 된 C 코드 만 비교하지 마십시오. C 소스 코드 수준에서 차이를 확인할 수없는 경우도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fb967ef51c6258be22df7b49b39489a5ba6b0c2" translate="yes" xml:space="preserve">
          <source>switch, the switch names  &lt;code&gt;SWn&lt;/code&gt; (&lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; = 0-15) are also valid; they correspond to &lt;code&gt;SWITCH-0&lt;/code&gt; through &lt;code&gt;SWITCH-15&lt;/code&gt;, respectively as well as &lt;code&gt;SWITCH-16&lt;/code&gt; through &lt;code&gt;SWITCH-36&lt;/code&gt;, &lt;code&gt;SWITCH 0&lt;/code&gt; through &lt;code&gt;SWITCH 26&lt;/code&gt; and &lt;code&gt;SWITCH A&lt;/code&gt; through &lt;code&gt;SWITCH Z&lt;/code&gt;.</source>
          <target state="translated">스위치, 스위치 이름 &lt;code&gt;SWn&lt;/code&gt; ( &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; = 0-15)도 유효합니다. 이들은 각각 &lt;code&gt;SWITCH-0&lt;/code&gt; ~ &lt;code&gt;SWITCH-15&lt;/code&gt; ,뿐만 아니라 &lt;code&gt;SWITCH-16&lt;/code&gt; ~ &lt;code&gt;SWITCH-36&lt;/code&gt; , &lt;code&gt;SWITCH 0&lt;/code&gt; ~ &lt;code&gt;SWITCH 26&lt;/code&gt; 및 &lt;code&gt;SWITCH A&lt;/code&gt; ~ &lt;code&gt;SWITCH Z&lt;/code&gt; 에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="657242ed3be88ae252084826547b5860272bedf8" translate="yes" xml:space="preserve">
          <source>switch, where &lt;code&gt;&lt;var&gt;xxx&lt;/var&gt;&lt;/code&gt; is either  &lt;code&gt;UPPER&lt;/code&gt; or  &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;&lt;var&gt;xxx&lt;/var&gt;&lt;/code&gt; 는 &lt;code&gt;UPPER&lt;/code&gt; 또는 &lt;code&gt;LOWER&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="eaef0ab38d23adff7d9509caef15b6b764ce8de9" translate="yes" xml:space="preserve">
          <source>switch, which automatically makes all files &lt;code&gt;OPTIONAL&lt;/code&gt; except for those explicitly declared as &lt;code&gt;NOT OPTIONAL&lt;/code&gt;.</source>
          <target state="translated">switch 는 &lt;code&gt;NOT OPTIONAL&lt;/code&gt; 로 명시 적으로 선언 된 파일을 제외하고 모든 파일을 자동으로 &lt;code&gt;OPTIONAL&lt;/code&gt; 로 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c89e69a1ab912433f13e7d47456dd8954a9e2b46" translate="yes" xml:space="preserve">
          <source>switch-name-1</source>
          <target state="translated">switch-name-1</target>
        </trans-unit>
        <trans-unit id="7c26a3c3b587adb57b5fc4e408c46dab4dc23134" translate="yes" xml:space="preserve">
          <source>switch.</source>
          <target state="translated">switch.</target>
        </trans-unit>
        <trans-unit id="25ea3a91f6e2632008cc443ef5ddbb59d725103e" translate="yes" xml:space="preserve">
          <source>switch. Once so created, the program(s) in these libraries are executed from the command line (via the GnuCOBOL &lt;code&gt;cobcrun&lt;/code&gt; utility), or as dynamically-loadable subprograms.</source>
          <target state="translated">스위치. 이렇게 생성되면이 라이브러리의 프로그램은 명령 줄 (GnuCOBOL &lt;code&gt;cobcrun&lt;/code&gt; 유틸리티 를 통해 )에서 실행되거나 동적으로로드 가능한 하위 프로그램으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1dca8a3c2c831a0896beb27c9d1072a29ee96f70" translate="yes" xml:space="preserve">
          <source>switch:</source>
          <target state="translated">switch:</target>
        </trans-unit>
        <trans-unit id="810a25d76c31e495cc070bdf42e076f7c9b0a1cd" translate="yes" xml:space="preserve">
          <source>symbol</source>
          <target state="translated">symbol</target>
        </trans-unit>
        <trans-unit id="38d6e9c89c751b9d52bf9bb12101527ee43ac916" translate="yes" xml:space="preserve">
          <source>symbol represents a space) &lt;code&gt;&lt;i&gt;bbbb&lt;/i&gt;+$1.00&lt;/code&gt;. This is not consistent with many other COBOL implementations, where the result would have been &lt;code&gt;+$&lt;i&gt;bbbb&lt;/i&gt;1.00&lt;/code&gt;.</source>
          <target state="translated">기호는 공백을 나타냄) &lt;code&gt;&lt;i&gt;bbbb&lt;/i&gt;+$1.00&lt;/code&gt; . 이것은 결과가 &lt;code&gt;+$&lt;i&gt;bbbb&lt;/i&gt;1.00&lt;/code&gt; 이되는 다른 많은 COBOL 구현과 일치하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8d08aed541200e2755395f7e69d000d36b1b4aa8" translate="yes" xml:space="preserve">
          <source>symbol represents a space)&lt;code&gt;&lt;i&gt;bbbb&lt;/i&gt;+$1.00&lt;/code&gt; This is not consistent with many other COBOL implementations, where the result would have been&lt;code&gt;+$&lt;i&gt;bbbb&lt;/i&gt;1.00&lt;/code&gt;</source>
          <target state="translated">기호는 공백을 나타냄) &lt;code&gt;&lt;i&gt;bbbb&lt;/i&gt;+$1.00&lt;/code&gt; 결과는 &lt;code&gt;+$&lt;i&gt;bbbb&lt;/i&gt;1.00&lt;/code&gt; &lt;i&gt;bbbb&lt;/i&gt; 1.00 인 다른 많은 COBOL 구현과 일치하지 않습니다.&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="b5e3b12c6ce4ab936a2a92ef769f03d7184fb620" translate="yes" xml:space="preserve">
          <source>symbolic-character-1</source>
          <target state="translated">symbolic-character-1</target>
        </trans-unit>
        <trans-unit id="2fb548cc2d7af506b0f1e6ed989050b02f218938" translate="yes" xml:space="preserve">
          <source>syntax diagrams</source>
          <target state="translated">구문 다이어그램</target>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="9638e80a0bffbb8f4712b2bcddc75385f3de2352" translate="yes" xml:space="preserve">
          <source>ta_IN, te_IN, tg_Cyrl_TJ, th_TH tk_TM, tmz_Latn_DZ, tn_ZA, tr_IN, tr_TR, tt_RU</source>
          <target state="translated">ta_IN, te_IN, tg_Cyrl_TJ, th_TH tk_TM, tmz_Latn_DZ, tn_ZA, tr_IN, tr_TR, tt_RU</target>
        </trans-unit>
        <trans-unit id="c3ee137d4f22eb06ed1351d644f3674592c90836" translate="yes" xml:space="preserve">
          <source>table</source>
          <target state="translated">table</target>
        </trans-unit>
        <trans-unit id="2eaa1225f20801f896508a02b9974133b90fc9aa" translate="yes" xml:space="preserve">
          <source>table-name-1</source>
          <target state="translated">table-name-1</target>
        </trans-unit>
        <trans-unit id="b895d7d4ec36eb441f2a9eb562d8ef7a5af49284" translate="yes" xml:space="preserve">
          <source>talking about astronomical performance degradations here. Today&amp;rsquo;s computers are</source>
          <target state="translated">여기서 천문학적 성능 저하에 대해 이야기합니다. 오늘날의 컴퓨터는</target>
        </trans-unit>
        <trans-unit id="aedd4ee4b42bb6735ffe9dcae487a1ec0979a32a" translate="yes" xml:space="preserve">
          <source>target range</source>
          <target state="translated">목표 범위</target>
        </trans-unit>
        <trans-unit id="3cdb21dad632e19772cf8c4d92a2b9177e134c3c" translate="yes" xml:space="preserve">
          <source>terminal.app</source>
          <target state="translated">terminal.app</target>
        </trans-unit>
        <trans-unit id="f5da4e655e7c96491b0104dae4cbc160c531ff7a" translate="yes" xml:space="preserve">
          <source>terminated with a period.</source>
          <target state="translated">마침표로 종료되었습니다.</target>
        </trans-unit>
        <trans-unit id="0bb1db8507a3a618642036826b5129eb68dafe0f" translate="yes" xml:space="preserve">
          <source>testprog</source>
          <target state="translated">testprog</target>
        </trans-unit>
        <trans-unit id="abdf44b7adf37a91cdd401fba29045d485f1bff0" translate="yes" xml:space="preserve">
          <source>tests and a worst case of</source>
          <target state="translated">테스트 및 최악의 경우</target>
        </trans-unit>
        <trans-unit id="25a833ada16cb075d6c9a32e7789bf3be959e0fd" translate="yes" xml:space="preserve">
          <source>tests in order to find an entry and</source>
          <target state="translated">항목을 찾기 위해 테스트하고</target>
        </trans-unit>
        <trans-unit id="69ad1bc3cc8c23c1aedc958f204902f6b6d99ecf" translate="yes" xml:space="preserve">
          <source>tests to identify that an entry doesn&amp;rsquo;t exist.</source>
          <target state="translated">항목이 존재하지 않음을 확인하기위한 테스트.</target>
        </trans-unit>
        <trans-unit id="cb72b1f0a095622397ecfc02923ea9091bc6d1bd" translate="yes" xml:space="preserve">
          <source>than the field size:</source>
          <target state="translated">필드 크기보다 :</target>
        </trans-unit>
        <trans-unit id="33b82201081ec7c438cb5d9a36cd72bcb153050b" translate="yes" xml:space="preserve">
          <source>that</source>
          <target state="translated">that</target>
        </trans-unit>
        <trans-unit id="ac835edbd30cb7522ab67e82ef03bac1fcee889e" translate="yes" xml:space="preserve">
          <source>that a &amp;lt;&amp;lt;</source>
          <target state="translated">그 &amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="76aa0a879aa28ee3bca54cb7a8608e833faac8c3" translate="yes" xml:space="preserve">
          <source>that a &lt;var&gt;Locator&lt;/var&gt; be specified; these files should only be used for output. A COBOL Line Advancing file will allow carriage-control characters such as line-feeds and form-feeds to be written to the attached operating system file, via the &lt;code&gt;ADVANCING&lt;/code&gt; clause of the &lt;code&gt;WRITE&lt;/code&gt; statement (see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;).</source>
          <target state="translated">것을 &lt;var&gt;Locator&lt;/var&gt; 지정; 이러한 파일은 출력에만 사용해야합니다. COBOL Line Advancing 파일은 &lt;code&gt;WRITE&lt;/code&gt; 문의 &lt;code&gt;ADVANCING&lt;/code&gt; 절을 통해 줄 바꿈 및 양식 공급과 같은 캐리지 제어 문자를 첨부 된 운영 체제 파일에 기록 할 수 있도록 합니다 ( &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2387a874ae3458d05f72cdcac395152c9a4d496b" translate="yes" xml:space="preserve">
          <source>that is modified, not the original data item; the calling program will therefore not &amp;ldquo;see&amp;rdquo; the results of that change when the subroutine returns control.</source>
          <target state="translated">원래 데이터 항목이 아니라 수정 된 것입니다. 따라서 호출 프로그램은 서브 루틴이 제어를 반환 할 때 변경 결과를 &quot;보지&quot;않습니다.</target>
        </trans-unit>
        <trans-unit id="01a9de102c8170c5461ce6925a98ae4cc11fe8ee" translate="yes" xml:space="preserve">
          <source>that sequence in the table &amp;mdash; the actual sequence of the data</source>
          <target state="translated">표의 해당 순서 &amp;mdash; 데이터의 실제 순서</target>
        </trans-unit>
        <trans-unit id="3d7f816278a679d9d80994de4b28423fb57788ca" translate="yes" xml:space="preserve">
          <source>that time during which an application is actually in production, allowing users to discover the problems</source>
          <target state="translated">응용 프로그램이 실제로 생산되는 동안 사용자가 문제를 발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbccdf2efb33b52e6c9d0a14dd70b2d415fbea6e" translate="yes" xml:space="preserve">
          <source>the</source>
          <target state="translated">the</target>
        </trans-unit>
        <trans-unit id="d5714a706b30abdcfb03bfc0e6edef9a305c9050" translate="yes" xml:space="preserve">
          <source>the   &lt;code&gt;COB_SCREEN_ESC&lt;/code&gt; run-time environment variable as well as   &lt;code&gt;COB_SCREEN_EXCEPTIONS&lt;/code&gt; run-time environment variable are set to any non-blank value.</source>
          <target state="translated">&lt;code&gt;COB_SCREEN_ESC&lt;/code&gt; 런타임 환경 변수뿐만 아니라 &lt;code&gt;COB_SCREEN_EXCEPTIONS&lt;/code&gt; 런타임 환경 변수가 아닌 빈 값으로 설정된다.</target>
        </trans-unit>
        <trans-unit id="8b81b116efd2dc906799d85d29b7b514aa1e093c" translate="yes" xml:space="preserve">
          <source>the  &lt;code&gt;SEPARATE CHARACTER&lt;/code&gt; option, the sign of the data item&amp;rsquo;s value will be encoded by transforming the last (see  &lt;code&gt;TRAILING&lt;/code&gt;) or first (see  &lt;code&gt;LEADING&lt;/code&gt;) digit as follows:</source>
          <target state="translated">&lt;code&gt;SEPARATE CHARACTER&lt;/code&gt; 의 옵션의 데이터 항목의 값의 부호 (참고 마지막 변형하여 부호화한다 &lt;code&gt;TRAILING&lt;/code&gt; (참조 제) 또는 &lt;code&gt;LEADING&lt;/code&gt; 다음과 같이) 숫자 :</target>
        </trans-unit>
        <trans-unit id="8085c7247c0ddfccc1044c8d80c8d1e744a6aa3c" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;DISPLAY&lt;/code&gt; statement gets executed, when PD-Row-No is 3 and PD-Col-No is 4 the &lt;code&gt;DISPLAY&lt;/code&gt; statement won&amp;rsquo;t be executed.</source>
          <target state="translated">&lt;code&gt;DISPLAY&lt;/code&gt; 문은 PD-행-없음이 3 일 때, 실행 및 PD-골 - 아니오 4 도착 &lt;code&gt;DISPLAY&lt;/code&gt; 문이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="021d353f8007fc4254720573ff843cc6956e31e3" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;TO&lt;/code&gt; keyword with the corresponding characters from the string specified</source>
          <target state="translated">지정된 문자열의 해당 문자가 있는 &lt;code&gt;TO&lt;/code&gt; 키워드</target>
        </trans-unit>
        <trans-unit id="b1fb1c6216859ff5c81b17bd7dff78b8955b1617" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;TO&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;TO&lt;/code&gt; 키워드.</target>
        </trans-unit>
        <trans-unit id="2ed54054fa5438b9f7af4c8d50cc633bb147bfa6" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;TO&lt;/code&gt; you will be using this statement to alter the address of a linkage section or &lt;code&gt;BASED&lt;/code&gt; (see &lt;a href=&quot;#BASED&quot;&gt;BASED&lt;/a&gt;) data item. Without that clause you will be assigning an address to one or more data items whose &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) is &lt;code&gt;POINTER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TO&lt;/code&gt; 당신은 링크 섹션의 주소를 변경하려면이 문을 사용하거나됩니다 &lt;code&gt;BASED&lt;/code&gt; (참조 &lt;a href=&quot;#BASED&quot;&gt;기반&lt;/a&gt; 데이터 항목을). 이 절이 없으면 &lt;code&gt;USAGE&lt;/code&gt; ( &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; 참조 )가 &lt;code&gt;POINTER&lt;/code&gt; 인 하나 이상의 데이터 항목에 주소를 할당하게됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e736d8a3162142734b683f9191252adae652a9b" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;TO&lt;/code&gt;, this statement will be identifying the address of &lt;var&gt;identifier-2&lt;/var&gt; as the address to be assigned to &lt;var&gt;identifier-1&lt;/var&gt; or stored in &lt;var&gt;pointer-name-1&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;TO&lt;/code&gt; ,이 명령문의 어드레스를 식별한다 &lt;var&gt;identifier-2&lt;/var&gt; 어드레스가 할당로서 &lt;var&gt;identifier-1&lt;/var&gt; 또는 저장된 &lt;var&gt;pointer-name-1&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2486306f82e3f5971ea30b66b200cf2baa8e6554" translate="yes" xml:space="preserve">
          <source>the C compiler), recognized as such by having a file extension of&lt;code&gt;.o&lt;/code&gt; In these situations, all compilation will be bypassed, and the object code will be &quot;bound&quot; into the generated executable by the loader (an &quot;ld&quot; command executed internally by the&lt;code&gt;cobc&lt;/code&gt;command).</source>
          <target state="translated">파일 확장자가 &lt;code&gt;.o&lt;/code&gt; 인 것으로 인식되는 C 컴파일러) 이러한 상황에서는 모든 컴파일이 무시되고 로더가 오브젝트 파일을 생성 된 실행 파일에 &quot;바운드&quot;합니다 (내부적으로 실행 된 &quot;ld&quot;명령). 바이 &lt;code&gt;cobc&lt;/code&gt; 의 ) 명령.</target>
        </trans-unit>
        <trans-unit id="d50a4d1e33047b2421a551413d6e30e7c67765ba" translate="yes" xml:space="preserve">
          <source>the argument was passed to the subprogram &lt;code&gt;BY REFERENCE&lt;/code&gt; by the calling program. See &lt;a href=&quot;#Subprogram-Arguments&quot;&gt;Subprogram Arguments&lt;/a&gt;, for additional information on the mechanics of how arguments are passed to subprograms.</source>
          <target state="translated">인수가 호출 프로그램에 &lt;code&gt;BY REFERENCE&lt;/code&gt; 의해 서브 프로그램에 전달되었습니다 . 인수가 하위 프로그램에 전달되는 방식에 대한 추가 정보는 &lt;a href=&quot;#Subprogram-Arguments&quot;&gt;하위 프로그램 인수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0dd3ab43b6b80b1a9f4a627d1d5aa568e5e6bc46" translate="yes" xml:space="preserve">
          <source>the argument was passed to the subprogram&lt;code&gt;BY REFERENCE&lt;/code&gt;by the calling program. See &lt;a href=&quot;#Subprogram-Arguments&quot;&gt;Subprogram Arguments&lt;/a&gt;, for additional information on the mechanics of how arguments are passed to subprograms.</source>
          <target state="translated">호출 프로그램 이 인수를 서브 프로그램 &lt;code&gt;BY REFERENCE&lt;/code&gt; 에 전달했습니다 . 인수가 서브 프로그램에 전달되는 방식에 대한 추가 정보는 &lt;a href=&quot;#Subprogram-Arguments&quot;&gt;서브 프로그램 인수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="975312ec0f443a6e32d347de86dde314dd2223a1" translate="yes" xml:space="preserve">
          <source>the arguments compare equal,</source>
          <target state="translated">인수는 동등하게 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="48df10c60ca77ea0f7ee8fbf904561b9c0bf6326" translate="yes" xml:space="preserve">
          <source>the contents of &lt;var&gt;identifier-2&lt;/var&gt; will be used as the relative record number of the record to be accessed. &lt;var&gt;identifier-2&lt;/var&gt; need not be the &lt;code&gt;RELATIVE KEY&lt;/code&gt; (see &lt;a href=&quot;#ORGANIZATION-RELATIVE&quot;&gt;ORGANIZATION RELATIVE&lt;/a&gt;) field of the file (although it could be if you wish).</source>
          <target state="translated">&lt;var&gt;identifier-2&lt;/var&gt; 의 내용은 액세스 할 레코드의 상대 레코드 번호로 사용됩니다. &lt;var&gt;identifier-2&lt;/var&gt; 는 파일 의 &lt;code&gt;RELATIVE KEY&lt;/code&gt; ( &lt;a href=&quot;#ORGANIZATION-RELATIVE&quot;&gt;ORGANIZATION RELATIVE&lt;/a&gt; 참조 ) 필드 일 필요는 없습니다 (원하는 경우 가능할 수도 있음).</target>
        </trans-unit>
        <trans-unit id="01f62c9c9a2ccbe1bfb0366f3c432b872361b8b2" translate="yes" xml:space="preserve">
          <source>the contents of the field declared as the file&amp;rsquo;s &lt;code&gt;RECORD KEY&lt;/code&gt; will be used to identify a record.</source>
          <target state="translated">파일의 &lt;code&gt;RECORD KEY&lt;/code&gt; 로 선언 된 필드의 내용은 레코드를 식별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="66d516676e1eeb79230dedfec6ece0fdddc38acc" translate="yes" xml:space="preserve">
          <source>the contents of the field declared as the file&amp;rsquo;s &lt;code&gt;RELATIVE KEY&lt;/code&gt; will be used to identify a record</source>
          <target state="translated">파일의 &lt;code&gt;RELATIVE KEY&lt;/code&gt; 로 선언 된 필드의 내용은 레코드를 식별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c329baf35625d7b39ff51b67492590d39fe4c7c" translate="yes" xml:space="preserve">
          <source>the following are two different command window sessions &amp;mdash; the left on a Unix/Cygwin/OSX system and the right on a windows system &amp;mdash; that will set the switch on and then execute the &quot;testprog&quot; program. Notice how the message indicating that the program detected the switch was set is displayed in both examples:</source>
          <target state="translated">다음은 서로 다른 두 가지 명령 창 세션 (UNIX / Cygwin / OSX 시스템의 왼쪽과 Windows 시스템의 오른쪽)으로, 스위치를 켜고 &quot;testprog&quot;프로그램을 실행합니다. 프로그램이 스위치 설정을 감지했음을 나타내는 메시지가 두 예에서 어떻게 표시되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="78b1481e8057f9c6157cad3bf1b64b080707adfa" translate="yes" xml:space="preserve">
          <source>the form-feed character depends upon whether the programmer coded &lt;code&gt;WRITE &lt;var&gt;record-name&lt;/var&gt; BEFORE ADVANCING PAGE&lt;/code&gt; or &lt;code&gt;WRITE &lt;var&gt;record-name&lt;/var&gt; AFTER ADVANCING PAGE&lt;/code&gt;, respectively.</source>
          <target state="translated">양식 공급 문자는 프로그래머가 각각 &lt;code&gt;WRITE &lt;var&gt;record-name&lt;/var&gt; BEFORE ADVANCING PAGE&lt;/code&gt; 또는 &lt;code&gt;WRITE &lt;var&gt;record-name&lt;/var&gt; AFTER ADVANCING PAGE&lt;/code&gt; 를 코딩했는지 여부에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="a9ab3d8b07e7734fe1768b2412be537e1d55d314" translate="yes" xml:space="preserve">
          <source>the form-feed character depends upon whether the programmer coded&lt;code&gt;WRITE &amp;lt;&lt;i&gt;record-name&lt;/i&gt;&amp;gt; BEFORE ADVANCING PAGE&lt;/code&gt;or&lt;code&gt;WRITE &amp;lt;&lt;i&gt;record-name&lt;/i&gt;&amp;gt; AFTER ADVANCING PAGE&lt;/code&gt; respectively.</source>
          <target state="translated">폼 피드 문자는 프로그래머가 각각 &lt;code&gt;WRITE &amp;lt;&lt;i&gt;record-name&lt;/i&gt;&amp;gt; AFTER ADVANCING PAGE&lt;/code&gt; &lt;code&gt;WRITE &amp;lt;&lt;i&gt;record-name&lt;/i&gt;&amp;gt; BEFORE ADVANCING PAGE&lt;/code&gt; WRITE &amp;lt; &lt;i&gt;record-name&lt;/i&gt; &amp;gt; 또는 ADVANCING PAGE 후 WRITE &amp;lt; &lt;i&gt;record-name&lt;/i&gt; &amp;gt;를 코딩했는지 여부에 따라 달라집니다 .&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="695c5d4133e38e7c1ca5eb28525db3e6918b58f1" translate="yes" xml:space="preserve">
          <source>the length of &amp;lt;</source>
          <target state="translated">&amp;lt;의 길이</target>
        </trans-unit>
        <trans-unit id="c642480fa696bdfe04b9173a3ef733155dcb66dc" translate="yes" xml:space="preserve">
          <source>the length of &lt;var&gt;literal-8&lt;/var&gt; or &lt;var&gt;identifier-9&lt;/var&gt; (the &amp;ldquo;to&amp;rdquo; string), then the &amp;ldquo;to&amp;rdquo; string will be assumed to be padded to the right with enough spaces to make it the same length as the &amp;ldquo;from&amp;rdquo; string.</source>
          <target state="translated">길이 &lt;var&gt;literal-8&lt;/var&gt; 또는 &lt;var&gt;identifier-9&lt;/var&gt; ( &quot;수신&quot;문자열이 예), &quot;에&quot;문자열은 &quot;보낸&quot;문자열과 같은 길이 수 있도록 충분한 공간과 오른쪽에 패딩되는 것으로 가정한다.</target>
        </trans-unit>
        <trans-unit id="c63a6a8383c8472ad904a2231e32fbce4b1ac611" translate="yes" xml:space="preserve">
          <source>the length of the &quot;to&quot; string, then the &quot;to&quot; string will be truncated to the length of the &quot;from&quot; string.</source>
          <target state="translated">&quot;to&quot;문자열의 길이 인 경우 &quot;to&quot;문자열은 &quot;from&quot;문자열의 길이로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="aaec95b6dc6e1b3ab241152c2fa26c5cd6c9a3e5" translate="yes" xml:space="preserve">
          <source>the length of the &amp;ldquo;to&amp;rdquo; string, then the &amp;ldquo;to&amp;rdquo; string will be truncated to the length of the &amp;ldquo;from&amp;rdquo; string.</source>
          <target state="translated">&quot;to&quot;문자열의 길이, &quot;to&quot;문자열은 &quot;from&quot;문자열의 길이로 잘립니다.</target>
        </trans-unit>
        <trans-unit id="0352ce24f5336200524215256aa0cb3b29ab182c" translate="yes" xml:space="preserve">
          <source>the list of device choices</source>
          <target state="translated">장치 선택 목록</target>
        </trans-unit>
        <trans-unit id="bfa2422d410f032bc4bbb603afaf58beaf1d00c9" translate="yes" xml:space="preserve">
          <source>the logical record pointer will be specified to the</source>
          <target state="translated">논리 레코드 포인터는</target>
        </trans-unit>
        <trans-unit id="eb5b240ce467e130cbe6a9438f07395cdcb7680d" translate="yes" xml:space="preserve">
          <source>the logical record pointer will point to the first record in the file.</source>
          <target state="translated">논리 레코드 포인터는 파일의 첫 번째 레코드를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="819836319594b57ff00fbb4f80f06dc56931f78a" translate="yes" xml:space="preserve">
          <source>the logical record pointer will point to the last record in the file.</source>
          <target state="translated">논리적 레코드 포인터는 파일의 마지막 레코드를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="3a83f85ad2a3de250d7ed2104ecdea9fd7c88fa2" translate="yes" xml:space="preserve">
          <source>the report or screen sections.</source>
          <target state="translated">보고서 또는 화면 섹션.</target>
        </trans-unit>
        <trans-unit id="ef632671fc9d84009378baa6c7b4a9dce105de6e" translate="yes" xml:space="preserve">
          <source>the scope of a procedural &lt;code&gt;PERFORM&lt;/code&gt; (see &lt;a href=&quot;#Procedural-PERFORM&quot;&gt;Procedural PERFORM&lt;/a&gt;), control will be returned back to the &lt;code&gt;PERFORM&lt;/code&gt; for evaluation of any &lt;code&gt;TIMES&lt;/code&gt;, &lt;code&gt;VARYING&lt;/code&gt; and/or &lt;code&gt;UNTIL&lt;/code&gt; clauses.</source>
          <target state="translated">절차 적 &lt;code&gt;PERFORM&lt;/code&gt; 의 범위 ( &lt;a href=&quot;#Procedural-PERFORM&quot;&gt;Procedural PERFORM&lt;/a&gt; 참조 ), 제어는 &lt;code&gt;TIMES&lt;/code&gt; , &lt;code&gt;VARYING&lt;/code&gt; 및 / 또는 &lt;code&gt;UNTIL&lt;/code&gt; 절의 평가 를 위해 &lt;code&gt;PERFORM&lt;/code&gt; 으로 다시 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b98960461aaa868d0a330e34f762cebddcd3783" translate="yes" xml:space="preserve">
          <source>the scope of a procedural &lt;code&gt;PERFORM&lt;/code&gt;, control simply transfers to the first executable statement in the next paragraph (&lt;code&gt;EXIT PARAGRAPH&lt;/code&gt;) or section (&lt;code&gt;EXIT SECTION&lt;/code&gt;).</source>
          <target state="translated">절차 적 &lt;code&gt;PERFORM&lt;/code&gt; 의 범위 , 제어는 단순히 다음 단락 ( &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; ) 또는 섹션 ( &lt;code&gt;EXIT SECTION&lt;/code&gt; ) 의 첫 번째 실행 가능 문으로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="f1c5674ea2dee341d6d96912ce540d3a4cf42de4" translate="yes" xml:space="preserve">
          <source>the scope of a procedural&lt;code&gt;PERFORM&lt;/code&gt; control simply transfers to the first executable statement in the next paragraph &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; or section &lt;code&gt;EXIT SECTION&lt;/code&gt;.</source>
          <target state="translated">절차 적 &lt;code&gt;PERFORM&lt;/code&gt; 컨트롤 의 범위는 다음 단락 &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; 또는 &lt;code&gt;EXIT SECTION&lt;/code&gt; 섹션 의 첫 번째 실행 문으로 전송합니다 .</target>
        </trans-unit>
        <trans-unit id="2188bd025dd469ba059449931e15e610aae4bff0" translate="yes" xml:space="preserve">
          <source>the scope of a procedural&lt;code&gt;PERFORM&lt;/code&gt;(see &lt;a href=&quot;#Procedural-PERFORM&quot;&gt;Procedural PERFORM&lt;/a&gt;), control will be returned back to the&lt;code&gt;PERFORM&lt;/code&gt;for evaluation of any&lt;code&gt;TIMES&lt;/code&gt;&lt;code&gt;VARYING&lt;/code&gt;and/or&lt;code&gt;UNTIL&lt;/code&gt;clauses.</source>
          <target state="translated">절차의 범위가 &lt;code&gt;PERFORM&lt;/code&gt; (참조 &lt;a href=&quot;#Procedural-PERFORM&quot;&gt;절차 수행&lt;/a&gt; ), 컨트롤을 다시 반환한다 &lt;code&gt;PERFORM&lt;/code&gt; 어느 평가 &lt;code&gt;TIMES&lt;/code&gt; &lt;code&gt;VARYING&lt;/code&gt; 및 / 또는 &lt;code&gt;UNTIL&lt;/code&gt; 절.</target>
        </trans-unit>
        <trans-unit id="3e9830417eb64054d174c2389ac612e4982cf8c9" translate="yes" xml:space="preserve">
          <source>the termination of program execution; should the error procedure not issue its own &lt;code&gt;STOP RUN&lt;/code&gt;, control will return back to the standard error routine when the error procedure exits.</source>
          <target state="translated">프로그램 실행 종료; 오류 프로 시저가 자체 &lt;code&gt;STOP RUN&lt;/code&gt; 을 발행하지 않는 경우 제어는 오류 프로 시저가 종료 될 때 표준 오류 루틴으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="a6ba10cc3bd4c97618d69ba8655b6ae4e12a9e13" translate="yes" xml:space="preserve">
          <source>the termination of program execution; should the error procedure not issue its own&lt;code&gt;STOP RUN&lt;/code&gt; control will return back to the standard error routine when the error procedure exits.</source>
          <target state="translated">프로그램 실행의 종료; 오류 절차가 자체 &lt;code&gt;STOP RUN&lt;/code&gt; 을 발행하지 않으면 오류 절차가 종료 될 때 표준 오류 루틴으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="05b8eb100f9dd5894a6458b34ff9756fd6670e69" translate="yes" xml:space="preserve">
          <source>the value will be centered</source>
          <target state="translated">값은 중앙에 위치합니다.</target>
        </trans-unit>
        <trans-unit id="a9bada5344a44baf331535415c53b5f971ed44dd" translate="yes" xml:space="preserve">
          <source>the value will be left-justified, space-filled to the right</source>
          <target state="translated">값은 왼쪽 정렬되고 오른쪽으로 공백이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="fb453c3ac0a0bae2a6728c052715337b3ee71b64" translate="yes" xml:space="preserve">
          <source>the value will be right-justified, space-filled to the left</source>
          <target state="translated">값은 오른쪽으로 정렬되고 왼쪽으로 공백이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="f9896a7eeac75d15ec5e301d11fec2de13b7cfda" translate="yes" xml:space="preserve">
          <source>the&lt;code&gt;DISPLAY&lt;/code&gt;statement gets executed, when PD-Row-No is 3 and PD-Col-No is 4 the&lt;code&gt;DISPLAY&lt;/code&gt;statement won&amp;rsquo;t be executed.</source>
          <target state="translated">&lt;code&gt;DISPLAY&lt;/code&gt; 문은 PD-행-없음이 3 일 때, 실행 및 PD-골 - 아니오 4 도착 &lt;code&gt;DISPLAY&lt;/code&gt; 문이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="19fbaeb3cccbf3301c042b84bd950f4865c8cd86" translate="yes" xml:space="preserve">
          <source>the&lt;code&gt;SEPARATE CHARACTER&lt;/code&gt;</source>
          <target state="translated">분리 &lt;code&gt;SEPARATE CHARACTER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd748a38b5c610caccec151a6f48d8e1047527ed" translate="yes" xml:space="preserve">
          <source>the&lt;code&gt;TO&lt;/code&gt; this statement will be identifying the address of &amp;lt;</source>
          <target state="translated">&lt;code&gt;TO&lt;/code&gt; 이 문의 주소를 확인하는 것입니다 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="1ea8d2f1cd68bde8a980e3dbe9c912ddb9e905f6" translate="yes" xml:space="preserve">
          <source>the&lt;code&gt;TO&lt;/code&gt;keyword with the corresponding characters from the string specified</source>
          <target state="translated">지정된 문자열의 해당 문자가 있는 &lt;code&gt;TO&lt;/code&gt; 키워드</target>
        </trans-unit>
        <trans-unit id="bf891b806423f3a78536d67e64dd38a521a37f63" translate="yes" xml:space="preserve">
          <source>the&lt;code&gt;TO&lt;/code&gt;keyword.</source>
          <target state="translated">the&lt;code&gt;TO&lt;/code&gt;keyword.</target>
        </trans-unit>
        <trans-unit id="1460929c0c47b645e55308f3833bf025fb32ab4f" translate="yes" xml:space="preserve">
          <source>there.</source>
          <target state="translated">there.</target>
        </trans-unit>
        <trans-unit id="714eea0f4c980736bde0065fe73f573487f08e3a" translate="yes" xml:space="preserve">
          <source>time</source>
          <target state="translated">time</target>
        </trans-unit>
        <trans-unit id="ef4302e4839df681347c032e7fc212c7a55ccbef" translate="yes" xml:space="preserve">
          <source>time &amp;mdash; via an &lt;code&gt;EXIT&lt;/code&gt; statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) &amp;mdash; if required.</source>
          <target state="translated">시간 &amp;mdash; &lt;code&gt;EXIT&lt;/code&gt; 문 ( &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt; 참조 )을 통해 &amp;mdash; 필요한 경우.</target>
        </trans-unit>
        <trans-unit id="c1d464db0a444b174dd7d8be04139f022d7349f7" translate="yes" xml:space="preserve">
          <source>time &amp;mdash; via an&lt;code&gt;EXIT&lt;/code&gt;statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) &amp;mdash; if required.</source>
          <target state="translated">필요한 경우 &lt;code&gt;EXIT&lt;/code&gt; 문을 통한 시간 ( &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="23b41d0c3452e9af26291764dadc8b1b1d6a277a" translate="yes" xml:space="preserve">
          <source>time unless &lt;code&gt;WITH DEBUGGING MODE&lt;/code&gt; is specified in the &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; (see &lt;a href=&quot;#SOURCE_002dCOMPUTER&quot;&gt;SOURCE-COMPUTER&lt;/a&gt;) paragraph. Neither the compiler&amp;rsquo;s</source>
          <target state="translated">&lt;code&gt;WITH DEBUGGING MODE&lt;/code&gt; 가 &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; ( &lt;a href=&quot;#SOURCE_002dCOMPUTER&quot;&gt;SOURCE-COMPUTER&lt;/a&gt; 참조 ) 단락에 지정 되지 않은 경우 시간 입니다. 둘 다 컴파일러의</target>
        </trans-unit>
        <trans-unit id="a145d1330e9c8a763559c8e46505c73885124942" translate="yes" xml:space="preserve">
          <source>time unless the</source>
          <target state="translated">시간이 아니라면</target>
        </trans-unit>
        <trans-unit id="b126251e3b4ac5888044936ffa03a6764a6b20a2" translate="yes" xml:space="preserve">
          <source>time unless the   &lt;code&gt;COB_SET_DEBUG&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) has been set to a value of &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;COB_SET_DEBUG&lt;/code&gt; 런타임 환경 변수 ( &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;런타임&lt;/a&gt; 환경 변수 참조 )가 '값으로 설정 되지 않은 경우 시간</target>
        </trans-unit>
        <trans-unit id="b044a6e5cd90fc108cda94f52dd0af692a7cad3f" translate="yes" xml:space="preserve">
          <source>time unless&lt;code&gt;WITH DEBUGGING MODE&lt;/code&gt;is specified in the&lt;code&gt;SOURCE-COMPUTER&lt;/code&gt;(see &lt;a href=&quot;#SOURCE_002dCOMPUTER&quot;&gt;SOURCE-COMPUTER&lt;/a&gt;) paragraph. Neither the compiler&amp;rsquo;s&lt;code&gt;-fdebugging-line&lt;/code&gt;switch</source>
          <target state="translated">&lt;code&gt;WITH DEBUGGING MODE&lt;/code&gt; 가 &lt;code&gt;SOURCE-COMPUTER&lt;/code&gt; ( &lt;a href=&quot;#SOURCE_002dCOMPUTER&quot;&gt;SOURCE-COMPUTER&lt;/a&gt; 참조 ) 단락에 지정되어 있지 않으면 시간 입니다. 컴파일러의 &lt;code&gt;-fdebugging-line&lt;/code&gt; 스위치도</target>
        </trans-unit>
        <trans-unit id="11a572aecafbc0f74cba80722d6c2694c9293479" translate="yes" xml:space="preserve">
          <source>times.</source>
          <target state="translated">times.</target>
        </trans-unit>
        <trans-unit id="01029925e79f8625c47170d35e01dd762bf1df59" translate="yes" xml:space="preserve">
          <source>to an 01-level data item.</source>
          <target state="translated">01 수준 데이터 항목에.</target>
        </trans-unit>
        <trans-unit id="92411bf23353b9b913bad35f42c7d4c79f042636" translate="yes" xml:space="preserve">
          <source>to appear on a new page.</source>
          <target state="translated">새 페이지에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="77799c08e21729f4a3ac743f43c361cc38ef53e6" translate="yes" xml:space="preserve">
          <source>to be specified as two-digit numbers, but every example you see in this document will take that approach!</source>
          <target state="translated">두 자리 숫자로 지정할 수 있지만이 문서에서 볼 수있는 모든 예제는 그 방법을 사용합니다!</target>
        </trans-unit>
        <trans-unit id="1e5b960fcb2c525cce542ecfbaa4980a0fc6cfe3" translate="yes" xml:space="preserve">
          <source>to be. Some, like .NET and Ruby, aren&amp;rsquo;t even</source>
          <target state="translated">되려고. .NET 및 Ruby와 같은 일부는</target>
        </trans-unit>
        <trans-unit id="3e5f899566f3bb519c87343150de6ccc084e8dd4" translate="yes" xml:space="preserve">
          <source>to create an alias for a word as well as</source>
          <target state="translated">단어에 대한 별칭을 만들고</target>
        </trans-unit>
        <trans-unit id="4efa2ec2b14abc39f6d804aa170ac871a1eeb05f" translate="yes" xml:space="preserve">
          <source>to have</source>
          <target state="translated">가지고</target>
        </trans-unit>
        <trans-unit id="ae51058b5a080e94f27f5e5b121184b6cb2f8f65" translate="yes" xml:space="preserve">
          <source>to one of those four device names.</source>
          <target state="translated">네 가지 장치 이름 중 하나에</target>
        </trans-unit>
        <trans-unit id="1ae3648868c0fa3ffcb2674209f3b79c70534550" translate="yes" xml:space="preserve">
          <source>to prematurely terminate a merge, or re-starting a previously-cancelled merge is not considered good programming style and should be avoided</source>
          <target state="translated">병합을 조기에 종료하거나 이전에 취소 한 병합을 다시 시작하는 것은 좋은 프로그래밍 스타일로 간주되지 않으므로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="b36c9931d3dfd6a525d3608efb6de0fee26b505b" translate="yes" xml:space="preserve">
          <source>to remove or add, a special register word.</source>
          <target state="translated">특수 레지스터 단어를 제거하거나 추가합니다.</target>
        </trans-unit>
        <trans-unit id="22c21821718926cad3ea911e47fa930ddd4cc6a8" translate="yes" xml:space="preserve">
          <source>to the end of the command that executes the program. This applies to both Windows (any type) or Unix versions of GnuCOBOL.</source>
          <target state="translated">프로그램을 실행하는 명령의 끝까지. 이는 Windows (모든 유형) 또는 Unix 버전의 GnuCOBOL 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8b44c248ec32b071a1a7aafa16b55a17a8feb834" translate="yes" xml:space="preserve">
          <source>to this:</source>
          <target state="translated">이에:</target>
        </trans-unit>
        <trans-unit id="d6df94276e016ba6af225219e234219c7eeae7ce" translate="yes" xml:space="preserve">
          <source>to-n</source>
          <target state="translated">to-n</target>
        </trans-unit>
        <trans-unit id="3391436a4e72f86c71993248f2fb17ffe28e56d3" translate="yes" xml:space="preserve">
          <source>tokens</source>
          <target state="translated">tokens</target>
        </trans-unit>
        <trans-unit id="93b280ea072d6f9ef45aa66865ae9275bbf96322" translate="yes" xml:space="preserve">
          <source>training subject matter.</source>
          <target state="translated">교육 주제.</target>
        </trans-unit>
        <trans-unit id="db37f2ff975bf7d9499315a0c8cd9da63c3d54d7" translate="yes" xml:space="preserve">
          <source>triggers what is referred to as an  &lt;em&gt;overflow condition&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;오버플로 조건&lt;/em&gt; 이라고하는 것을 트리거 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="58bba5e08be450bba97f20fbaee05761daad1f55" translate="yes" xml:space="preserve">
          <source>truncated option value in &lt;code&gt;opt-val&lt;/code&gt; (because &lt;code&gt;opt-val&lt;/code&gt; was too small)</source>
          <target state="translated">&lt;code&gt;opt-val&lt;/code&gt; 에서 잘린 옵션 값 ( &lt;code&gt;opt-val&lt;/code&gt; 이 너무 작기 때문에)</target>
        </trans-unit>
        <trans-unit id="f99abcfae6c3ce6d22597f95ad6ef260d31527a6" translate="yes" xml:space="preserve">
          <source>twice</source>
          <target state="translated">twice</target>
        </trans-unit>
        <trans-unit id="ad782ecdac770fc6eb9a62e44f90873fb97fb26b" translate="yes" xml:space="preserve">
          <source>two</source>
          <target state="translated">two</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="915ba93f0fecb20fc8f4c5df3de04df7d2967812" translate="yes" xml:space="preserve">
          <source>ug_CN, uk_UA, ur_PK, uz_Cyrl_UZ, uz_Latn_UZ</source>
          <target state="translated">ug_CN, uk_UA, ur_PK, uz_Cyrl_UZ, uz_Latn_UZ</target>
        </trans-unit>
        <trans-unit id="c05c3f3ac2c2f6da98639471f01414dbb833fa49" translate="yes" xml:space="preserve">
          <source>undefined or ambiguous option</source>
          <target state="translated">정의되지 않거나 모호한 옵션</target>
        </trans-unit>
        <trans-unit id="14a9d766458d6c1fabca3354d7d278f9273e3310" translate="yes" xml:space="preserve">
          <source>understanding</source>
          <target state="translated">understanding</target>
        </trans-unit>
        <trans-unit id="42e184930956d048c819e40f18f94f0094d47bc6" translate="yes" xml:space="preserve">
          <source>unless</source>
          <target state="translated">unless</target>
        </trans-unit>
        <trans-unit id="8a4bef8b14145904c7f1c63d0a2620d6b7943054" translate="yes" xml:space="preserve">
          <source>unlikely.</source>
          <target state="translated">unlikely.</target>
        </trans-unit>
        <trans-unit id="9b1fb9e82074e8aa4edc08ad23dce59c4abcd2ea" translate="yes" xml:space="preserve">
          <source>unsigned  unsigned int  unsigned short  unsigned short int</source>
          <target state="translated">부호없는 부호없는 int 부호없는 짧은 부호없는 short int</target>
        </trans-unit>
        <trans-unit id="3dc11840724e97d93a4558d0250b1f937eb7198b" translate="yes" xml:space="preserve">
          <source>unsigned char</source>
          <target state="translated">부호없는 숯</target>
        </trans-unit>
        <trans-unit id="d524cc23149567a725f674f908d6a4b0fda70f77" translate="yes" xml:space="preserve">
          <source>unsigned long  unsigned long int</source>
          <target state="translated">부호없는 long 부호없는 long int</target>
        </trans-unit>
        <trans-unit id="e4ab158d2c89a62641582afbbfca7c144d6958d8" translate="yes" xml:space="preserve">
          <source>unsigned long long  unsigned long long int</source>
          <target state="translated">부호없는 long long 부호없는 long long int</target>
        </trans-unit>
        <trans-unit id="55c5f323fcc43f8faf3bea3b23afd3bfa9811f74" translate="yes" xml:space="preserve">
          <source>upper-case names</source>
          <target state="translated">대문자 이름</target>
        </trans-unit>
        <trans-unit id="70e59eb9757e4a4b74cad1a8c4a0c6a481d909a1" translate="yes" xml:space="preserve">
          <source>usage-name</source>
          <target state="translated">usage-name</target>
        </trans-unit>
        <trans-unit id="7bfda0a48fa3b85f27581212f9f4659b44d3faf6" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;BY VALUE&lt;/code&gt; arguments when calling GnuCOBOL subroutines, but remember that those arguments are limited to being a numeric binary data item.</source>
          <target state="translated">GnuCOBOL 서브 루틴을 호출 할 때 &lt;code&gt;BY VALUE&lt;/code&gt; 인수를 사용 하십시오. 그러나 이러한 인수는 숫자 이진 데이터 항목으로 제한된다는 점을 기억하십시오.</target>
        </trans-unit>
        <trans-unit id="b91fc6f415b2403b4cb508b03e84e5ca72547203" translate="yes" xml:space="preserve">
          <source>use&lt;code&gt;BY VALUE&lt;/code&gt;arguments when calling GnuCOBOL subroutines, but remember that those arguments are limited to being a numeric binary data item.</source>
          <target state="translated">GnuCOBOL 서브 루틴을 호출 할 때 &lt;code&gt;BY VALUE&lt;/code&gt; 인수를 사용 하지만 해당 인수는 숫자 2 진 데이터 항목으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="28d65f2af16065cdcee10e149bbb1c1617524111" translate="yes" xml:space="preserve">
          <source>used the input field is cleared prior to input and this is the default but can be changed by the use of compiler steering command -faccept-with-update that can be input when starting the compiler or included in the configuration file e.g., default.conf used when selected by default</source>
          <target state="translated">입력 필드는 입력 전에 지워지고 이것이 기본값이지만 컴파일러를 시작할 때 입력 할 수 있거나 구성 파일 (예 : default.conf)에 포함될 수있는 컴파일러 조정 명령 -faccept-with-update를 사용하여 변경할 수 있습니다. 기본적으로 선택 될 때 사용됨</target>
        </trans-unit>
        <trans-unit id="571d83e9c295c853c94b6b6c1e99f2bf3b9b3c53" translate="yes" xml:space="preserve">
          <source>used, then an actual &amp;lsquo;</source>
          <target state="translated">사용 된 다음 실제 '</target>
        </trans-unit>
        <trans-unit id="c58d705882b5521eb42ef0c45c23c9b1778b3574" translate="yes" xml:space="preserve">
          <source>used, then an actual&lt;code&gt;+&lt;/code&gt;or&lt;code&gt;-&lt;/code&gt;character will be inserted into the field&amp;rsquo;s value as the first &lt;code&gt;LEADING&lt;/code&gt; or last &lt;code&gt;TRAILING&lt;/code&gt; character. Note that having this character embedded within the data item&amp;rsquo;s storage does not prevent the data item from being used as a source field in arithmetic operations.</source>
          <target state="translated">를 사용하면 실제 &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 문자가 첫 번째 &lt;code&gt;LEADING&lt;/code&gt; 또는 마지막 &lt;code&gt;TRAILING&lt;/code&gt; 문자 로 필드 값에 삽입됩니다 . 이 문자를 데이터 항목의 스토리지에 임베드해도 산술 연산에서 데이터 항목이 소스 필드로 사용되는 것을 막을 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce078807ed185488a9f1ef80dff7ce3ba512aa0a" translate="yes" xml:space="preserve">
          <source>used.</source>
          <target state="translated">used.</target>
        </trans-unit>
        <trans-unit id="c52724805c16def9e0a48a0a166e103b85569193" translate="yes" xml:space="preserve">
          <source>using the following syntactical-description techniques:</source>
          <target state="translated">다음 구문 설명 기술을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7a38d8cbd20d9932ba948efaa364bb62651d5ad4" translate="yes" xml:space="preserve">
          <source>v</source>
          <target state="translated">v</target>
        </trans-unit>
        <trans-unit id="5a7961408993b5f704b873d47c6dcdadf7dc3ef9" translate="yes" xml:space="preserve">
          <source>value from &lt;code&gt;FOOTING&lt;/code&gt; or, if that is absent, the value from &lt;code&gt;PAGE LIMIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FOOTING&lt;/code&gt; 의 값 또는없는 경우 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 의 값</target>
        </trans-unit>
        <trans-unit id="0abd69a38c45aff016af35571396fe3fea9423f1" translate="yes" xml:space="preserve">
          <source>value from &lt;code&gt;LAST DETAIL&lt;/code&gt; or, if that is absent, the value from &lt;code&gt;FOOTING&lt;/code&gt; or, if that too is absent, the value from &lt;code&gt;PAGE LIMIT&lt;/code&gt;</source>
          <target state="translated">행 값 &lt;code&gt;LAST DETAIL&lt;/code&gt; 거나, 즉, 부재의 값이면 &lt;code&gt;FOOTING&lt;/code&gt; 또는 그도의 값이 존재하지 않는 경우 &lt;code&gt;PAGE LIMIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e666f795deb0f40d243b6193c9f47f4a3fe80474" translate="yes" xml:space="preserve">
          <source>value from &lt;code&gt;LAST DETAIL&lt;/code&gt; or, if that is absent, the value from &lt;code&gt;PAGE LIMIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LAST DETAIL&lt;/code&gt; 의 값 또는없는 경우 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 의 값</target>
        </trans-unit>
        <trans-unit id="258ae467c52a08118cd8ff83c5e5d274f756794e" translate="yes" xml:space="preserve">
          <source>value is used</source>
          <target state="translated">값이 사용됨</target>
        </trans-unit>
        <trans-unit id="19d866ea299a7a3b1555d13198d2e7c9242c3a8c" translate="yes" xml:space="preserve">
          <source>value must exactly match the primary entry-point name of the main program (including upper- and lower-case letters), unless you are planning on using</source>
          <target state="translated">값은 기본 프로그램의 기본 진입 점 이름 (대문자 및 소문자 포함)과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4769646ffdd0a06140f8a61c2db86887954a3d83" translate="yes" xml:space="preserve">
          <source>value must exactly match the primary entry-point name of the main program (including upper- and lower-case letters), unless you are planning on using &quot;Call Folding&quot; (see &lt;a href=&quot;#Dynamically-Loaded-Subprograms&quot;&gt;Dynamically Loaded Subprograms&lt;/a&gt;).</source>
          <target state="translated">&quot;접기 호출&quot;을 사용할 계획이 아닌 한, 값은 기본 프로그램의 기본 진입 점 이름 (대문자 및 소문자 포함)과 정확히 일치해야합니다 ( &lt;a href=&quot;#Dynamically-Loaded-Subprograms&quot;&gt;동적로드 서브 프로그램&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="20274c2bf1dc5afa7c0b9379ae6d0a0e2b2405f4" translate="yes" xml:space="preserve">
          <source>value of the inspect subject before any replacements occur.</source>
          <target state="translated">교체하기 전에 검사 대상의 가치.</target>
        </trans-unit>
        <trans-unit id="47c4d03f2089d05631b7f682c087f60441519703" translate="yes" xml:space="preserve">
          <source>variable-arg</source>
          <target state="translated">variable-arg</target>
        </trans-unit>
        <trans-unit id="c65776097d2bb8101a9f3237c6cc7050036c7d9a" translate="yes" xml:space="preserve">
          <source>vi_VN</source>
          <target state="translated">vi_VN</target>
        </trans-unit>
        <trans-unit id="ba29bcac2c02b08eabad7eb1763f8678196cb600" translate="yes" xml:space="preserve">
          <source>via the &lt;code&gt;CALL&lt;/code&gt; statement (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;), are capable of performing the following functions:</source>
          <target state="translated">비아 &lt;code&gt;CALL&lt;/code&gt; 문 (참조 &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt; ), 다음과 같은 기능을 수행 할 수있다 :</target>
        </trans-unit>
        <trans-unit id="aff024fe4ab0fece4091de044c58c9ae4233383a" translate="yes" xml:space="preserve">
          <source>w</source>
          <target state="translated">w</target>
        </trans-unit>
        <trans-unit id="1f401c4a03630206212b48c2ea66774b8f1ae33a" translate="yes" xml:space="preserve">
          <source>wen_DE, wo_SN</source>
          <target state="translated">wen_DE, wo_SN</target>
        </trans-unit>
        <trans-unit id="484429b20b79a482156f75ef844fb3d27a396c66" translate="yes" xml:space="preserve">
          <source>were one of the built-in system subroutines.</source>
          <target state="translated">내장 시스템 서브 루틴 중 하나였습니다.</target>
        </trans-unit>
        <trans-unit id="448e43f45e02fb4cb19fb843e74c3ed38286f666" translate="yes" xml:space="preserve">
          <source>when a &lt;code&gt;READ&lt;/code&gt; statement executed against the file includes a &lt;code&gt;LOCK&lt;/code&gt; clause (this clause will be discussed shortly).</source>
          <target state="translated">파일에 대해 실행 된 &lt;code&gt;READ&lt;/code&gt; 문에 &lt;code&gt;LOCK&lt;/code&gt; 이 포함 된 경우 이 절을 (이 절은 곧 설명합니다).</target>
        </trans-unit>
        <trans-unit id="b6e7398392b5650158d464f5ef218070d8e9d9ea" translate="yes" xml:space="preserve">
          <source>where&amp;hellip;</source>
          <target state="translated">where&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="04c4299de47f718b939609956c63c2c71acbd11e" translate="yes" xml:space="preserve">
          <source>whose value denotes information content above and beyond that of the mere value itself. Some examples could be &lt;code&gt;Error-CD&lt;/code&gt;, &lt;code&gt;Status-CD&lt;/code&gt;, &lt;code&gt;Billing-CD&lt;/code&gt;</source>
          <target state="translated">그 가치는 단순한 가치 그 자체 이상의 정보 내용을 나타냅니다. 몇 가지 예로는 &lt;code&gt;Error-CD&lt;/code&gt; , &lt;code&gt;Status-CD&lt;/code&gt; , &lt;code&gt;Billing-CD&lt;/code&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="37d41699bdee4fcb969ca499eb0f8b82c60d59cc" translate="yes" xml:space="preserve">
          <source>will</source>
          <target state="translated">will</target>
        </trans-unit>
        <trans-unit id="2924624c13a9eb3fb0ce83a76b1f2dcbe5a1d9e9" translate="yes" xml:space="preserve">
          <source>will contain the procedure division C code and</source>
          <target state="translated">프로 시저 분할 C 코드를 포함하고</target>
        </trans-unit>
        <trans-unit id="48741dcef9ec8dd8c87f4338e737d8f787ce6bda" translate="yes" xml:space="preserve">
          <source>will contain the working-storage C code. Compare the generated C code for each of the three &lt;code&gt;MOVE&lt;/code&gt; statements.</source>
          <target state="translated">작업 저장 C 코드가 포함됩니다. 세 개의 &lt;code&gt;MOVE&lt;/code&gt; 문 각각에 대해 생성 된 C 코드를 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="1df91714444bb64cf37aff9300609af7c90f5590" translate="yes" xml:space="preserve">
          <source>will not</source>
          <target state="translated">~하지 않을 것이다</target>
        </trans-unit>
        <trans-unit id="c5c8a93318d6667af6ec59ccf35289495ecea8b8" translate="yes" xml:space="preserve">
          <source>will not detect other non-zero file-status values</source>
          <target state="translated">0이 아닌 다른 파일 상태 값을 감지하지 않습니다</target>
        </trans-unit>
        <trans-unit id="d520bfae6053a4febeefa90ab775e4051039d647" translate="yes" xml:space="preserve">
          <source>window.</source>
          <target state="translated">window.</target>
        </trans-unit>
        <trans-unit id="a374fc7e85a512c55d3f503b1145c840e16f1e13" translate="yes" xml:space="preserve">
          <source>with a digit.</source>
          <target state="translated">숫자로.</target>
        </trans-unit>
        <trans-unit id="f42ef62128025c7fd38f4952b8a2dc53beb818e7" translate="yes" xml:space="preserve">
          <source>within</source>
          <target state="translated">within</target>
        </trans-unit>
        <trans-unit id="463589631614617f90c798665cf3e6a248f0a48d" translate="yes" xml:space="preserve">
          <source>word-1</source>
          <target state="translated">word-1</target>
        </trans-unit>
        <trans-unit id="d02e937e32f17a3ca2159e65e830c327235daf60" translate="yes" xml:space="preserve">
          <source>work if fixed source-record format is in effect.</source>
          <target state="translated">고정 소스 레코드 형식이 유효한 경우 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f10986f8ed27506a6c481cf226994faa83a86bc6" translate="yes" xml:space="preserve">
          <source>worlds</source>
          <target state="translated">worlds</target>
        </trans-unit>
        <trans-unit id="0955dd818206a40e89101bb215630d0623e506fc" translate="yes" xml:space="preserve">
          <source>would</source>
          <target state="translated">would</target>
        </trans-unit>
        <trans-unit id="819e3a82931d458a565c17ddb5a0f65bc16262d6" translate="yes" xml:space="preserve">
          <source>would have been invoked had it been one of the many built-in intrinsic functions.</source>
          <target state="translated">많은 내장 내장 함수 중 하나 였다면 호출되었을 것입니다.</target>
        </trans-unit>
        <trans-unit id="6a0121d3ee3a0dfb2045f657e19100956bf3131c" translate="yes" xml:space="preserve">
          <source>wrench in their toolbox, but with a massive code base still in production now and for the foreseeable future, adding COBOL to a multi-lingual curriculum vitae (CV) and/or resume (yes &amp;mdash; they ARE different) is not a bad thing at all. Knowing COBOL as well as the language du-jour will make you the smartest person in the room when the discussion of migrating the current &quot;legacy&quot; environment to a &quot;modern&quot; implementation comes around.</source>
          <target state="translated">도구 상자에 렌치를 씌우고 있지만 현재는 대량의 코드 기반을 현재 생산 중이며 가까운 장래에 다국어 커리큘럼 이력서 (CV) 및 / 또는 이력서에 COBOL을 추가하는 것은 나쁘지 않습니다. 모두. 현재의 &quot;레거시&quot;환경을 &quot;현대적인&quot;구현으로 마이그레이션하는 것에 대한 논의가 이루어질 때 COBOL과 언어 뒤 주르를 알면 방에서 가장 똑똑한 사람이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="117850ee1c2a2f4c1289c27981a974c3615f0780" translate="yes" xml:space="preserve">
          <source>wrench in their toolbox, but with a massive code base still in production now and for the foreseeable future, adding COBOL to a multi-lingual curriculum vitae (CV) and/or resume (yes &amp;mdash; they ARE different) is not a bad thing at all. Knowing COBOL as well as the language du-jour will make you the smartest person in the room when the discussion of migrating the current &amp;ldquo;legacy&amp;rdquo; environment to a &amp;ldquo;modern&amp;rdquo; implementation comes around.</source>
          <target state="translated">도구 상자에 렌치가 있지만, 지금과 가까운 미래에 아직 생산중인 대규모 코드 기반으로 인해 COBOL을 다국어 이력서 (CV) 및 / 또는 이력서에 추가하는 것은 나쁜 일이 아닙니다. 모두. 현재의 &quot;레거시&quot;환경을 &quot;현대적인&quot;구현으로 마이그레이션하는 것에 대한 논의가있을 때 COBOL과 그 언어를 익히면 방에서 가장 똑똑한 사람이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="11f6ad8ec52a2984abaafd7c3b516503785c2072" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="translated">x</target>
        </trans-unit>
        <trans-unit id="2c2970423b884555655292932d2ba8f3653ca441" translate="yes" xml:space="preserve">
          <source>xh_ZA</source>
          <target state="translated">xh_ZA</target>
        </trans-unit>
        <trans-unit id="95cb0bfd2977c761298d9624e4b4d4c72a39974a" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="translated">y</target>
        </trans-unit>
        <trans-unit id="fb360f9c09ac8c5edb2f18be5de4e80ea4c430d0" translate="yes" xml:space="preserve">
          <source>yes</source>
          <target state="translated">yes</target>
        </trans-unit>
        <trans-unit id="7f96c1980791d515fb6d5f2a8e3579487b3d2916" translate="yes" xml:space="preserve">
          <source>yo_NG</source>
          <target state="translated">yo_NG</target>
        </trans-unit>
        <trans-unit id="b2a801fc1f6cdddb5df949c5126817cb5c8562ce" translate="yes" xml:space="preserve">
          <source>yy</source>
          <target state="translated">yy</target>
        </trans-unit>
        <trans-unit id="942fdb0d933772b13fcf003d49b68b7d85412fa9" translate="yes" xml:space="preserve">
          <source>yy-cutoff</source>
          <target state="translated">yy-cutoff</target>
        </trans-unit>
        <trans-unit id="0a978ff7b6598908b16da27d049c66f30d8e1fac" translate="yes" xml:space="preserve">
          <source>yyddd</source>
          <target state="translated">yyddd</target>
        </trans-unit>
        <trans-unit id="2115ce20fff1e495b24cdb4a8fef44c07ecdf0ff" translate="yes" xml:space="preserve">
          <source>yymmdd</source>
          <target state="translated">yymmdd</target>
        </trans-unit>
        <trans-unit id="a14a909b004e30d62998abe8d28cde0c9c3b9450" translate="yes" xml:space="preserve">
          <source>yyyyddd</source>
          <target state="translated">yyyyddd</target>
        </trans-unit>
        <trans-unit id="1e9f0974920ad598cfbdb47a4c6f21e035dd4bfe" translate="yes" xml:space="preserve">
          <source>yyyymmdd</source>
          <target state="translated">yyyymmdd</target>
        </trans-unit>
        <trans-unit id="395df8f7c51f007019cb30201c49e884b46b92fa" translate="yes" xml:space="preserve">
          <source>z</source>
          <target state="translated">z</target>
        </trans-unit>
        <trans-unit id="b5ddf630a603c872d298c03e7000e7ff5d1328a8" translate="yes" xml:space="preserve">
          <source>zero-out &amp;lt;</source>
          <target state="translated">제로 아웃 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="f2e6ea5d7ca50d1c406111cb4b54422f8bc11133" translate="yes" xml:space="preserve">
          <source>zero-out &lt;var&gt;identifier-2&lt;/var&gt; at the start of execution of the &lt;code&gt;INSPECT&lt;/code&gt; &amp;mdash; it is the programmer&amp;rsquo;s responsibility to ensure that all &lt;var&gt;identifier-2&lt;/var&gt; data items are properly initialized to the desired starting values prior to execution of the &lt;code&gt;INSPECT&lt;/code&gt;.</source>
          <target state="translated">제로 아웃 &lt;var&gt;identifier-2&lt;/var&gt; 의 실행의 시작은 &lt;code&gt;INSPECT&lt;/code&gt; - 모든되도록 프로그래머의 책임이다 &lt;var&gt;identifier-2&lt;/var&gt; 데이터 항목이 제대로 이전의 실행을 시작하여 원하는 값으로 초기화된다 &lt;code&gt;INSPECT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6799dd592612d2b1aa162d70c839698a8e33c587" translate="yes" xml:space="preserve">
          <source>zh_CN, zh_HK, zh_MO, zh_SG, zh_TW, zu_ZA</source>
          <target state="translated">zh_CN, zh_HK, zh_MO, zh_SG, zh_TW, zu_ZA</target>
        </trans-unit>
        <trans-unit id="3eb416223e9e69e6bb8ee19793911ad1ad2027d8" translate="yes" xml:space="preserve">
          <source>|</source>
          <target state="translated">|</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
