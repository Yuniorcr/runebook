<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="gnu_cobol">
    <body>
      <group id="gnu_cobol">
        <trans-unit id="df531e936e3cd1e756ac517d82056bd55be92760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FULL&lt;/code&gt; clause forces the user to enter data into the field it is specified on (or into all subordinate input-capable fields if specified on a group item) sufficient to fill every character position of the field.</source>
          <target state="translated">The &lt;code&gt;FULL&lt;/code&gt; clause forces the user to enter data into the field it is specified on (or into all subordinate input-capable fields if specified on a group item) sufficient to fill every character position of the field.</target>
        </trans-unit>
        <trans-unit id="8c64e52b5b21de7f0ad6be10e4db3c3f825bf025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GENERATE&lt;/code&gt; statement presents data to a report.</source>
          <target state="translated">The &lt;code&gt;GENERATE&lt;/code&gt; statement presents data to a report.</target>
        </trans-unit>
        <trans-unit id="49f38a33647afac08b4105915b5651daaefc4a5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GLOBAL&lt;/code&gt; (see &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;) option, if used, allows a declarative procedure to be used across the program containing the &lt;code&gt;USE&lt;/code&gt; statement and any subprograms nested within that program.</source>
          <target state="translated">The &lt;code&gt;GLOBAL&lt;/code&gt; (see &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;) option, if used, allows a declarative procedure to be used across the program containing the &lt;code&gt;USE&lt;/code&gt; statement and any subprograms nested within that program.</target>
        </trans-unit>
        <trans-unit id="9e192d3149fc3dddd665bb40836004ce6fe9503e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GLOBAL&lt;/code&gt; clause may only be specified at the 77 or 01 level.</source>
          <target state="translated">The &lt;code&gt;GLOBAL&lt;/code&gt; clause may only be specified at the 77 or 01 level.</target>
        </trans-unit>
        <trans-unit id="0a7587d0eece1bac2e94934815fa36cc8bbf0387" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GOBACK&lt;/code&gt; statement is used to logically terminate an executing program.</source>
          <target state="translated">The &lt;code&gt;GOBACK&lt;/code&gt; statement is used to logically terminate an executing program.</target>
        </trans-unit>
        <trans-unit id="599f20adc9d112843c95c2c1561ec28fee6c30ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GROUP INDICATE&lt;/code&gt; clause specifies that the data item in whose definition the clause appears will be presented only in very limited circumstances.</source>
          <target state="translated">The &lt;code&gt;GROUP INDICATE&lt;/code&gt; clause specifies that the data item in whose definition the clause appears will be presented only in very limited circumstances.</target>
        </trans-unit>
        <trans-unit id="45279060a42c17101e845260c6d050d4f837c4c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IDENTIFICATION DIVISION.&lt;/code&gt; header is always optional.</source>
          <target state="translated">The &lt;code&gt;IDENTIFICATION DIVISION.&lt;/code&gt; header is always optional.</target>
        </trans-unit>
        <trans-unit id="e45d1a237c9bf8561db68ada7ea61544e4baf548" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IF&lt;/code&gt; statement is used to conditionally execute an imperative statement (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;) or to select one of two different imperative statements to execute based upon the &lt;code&gt;TRUE&lt;/code&gt;/&lt;code&gt;FALSE&lt;/code&gt; value of a conditional expression.</source>
          <target state="translated">The &lt;code&gt;IF&lt;/code&gt; statement is used to conditionally execute an imperative statement (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;) or to select one of two different imperative statements to execute based upon the &lt;code&gt;TRUE&lt;/code&gt; / &lt;code&gt;FALSE&lt;/code&gt; value of a conditional expression.</target>
        </trans-unit>
        <trans-unit id="f8a0bca8d79f347f961320f2624b4ff82cb114e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INITIAL&lt;/code&gt;, &lt;code&gt;COMMON&lt;/code&gt; and &lt;code&gt;RECURSIVE&lt;/code&gt; words are used only within subprograms serving as subroutines. Their purposes are as follows:</source>
          <target state="translated">The &lt;code&gt;INITIAL&lt;/code&gt; , &lt;code&gt;COMMON&lt;/code&gt; and &lt;code&gt;RECURSIVE&lt;/code&gt; words are used only within subprograms serving as subroutines. Their purposes are as follows:</target>
        </trans-unit>
        <trans-unit id="424edd6a538587d8c66855023657e22cce88d003" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INITIALIZE&lt;/code&gt; statement initializes each &lt;var&gt;identifier-1&lt;/var&gt; with certain specific values, depending upon the options specified.</source>
          <target state="translated">The &lt;code&gt;INITIALIZE&lt;/code&gt; statement initializes each &lt;var&gt;identifier-1&lt;/var&gt; with certain specific values, depending upon the options specified.</target>
        </trans-unit>
        <trans-unit id="23e1df71616f719e440e32642b4b3e268c4eefdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INITIATE&lt;/code&gt; statement starts Report-Writer Control System (RWCS) processing for a report.</source>
          <target state="translated">The &lt;code&gt;INITIATE&lt;/code&gt; statement starts Report-Writer Control System (RWCS) processing for a report.</target>
        </trans-unit>
        <trans-unit id="8840957d5f49ed1cd90bae7d42e0b8f976107955" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INITIATE&lt;/code&gt; statement will initialize all of the following for each report named on the statement:</source>
          <target state="translated">The &lt;code&gt;INITIATE&lt;/code&gt; statement will initialize all of the following for each report named on the statement:</target>
        </trans-unit>
        <trans-unit id="ad3e90e44dc0817203843aacc10ef23c63b14175" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INPUT-OUTPUT&lt;/code&gt; section provides for the definition of any files the program will be accessing as well as control of the I/O buffering process against those files through the &lt;code&gt;FILE-CONTROL&lt;/code&gt; and &lt;code&gt;I-O-CONTROL&lt;/code&gt; paragraphs, respectively.</source>
          <target state="translated">The &lt;code&gt;INPUT-OUTPUT&lt;/code&gt; section provides for the definition of any files the program will be accessing as well as control of the I/O buffering process against those files through the &lt;code&gt;FILE-CONTROL&lt;/code&gt; and &lt;code&gt;I-O-CONTROL&lt;/code&gt; paragraphs, respectively.</target>
        </trans-unit>
        <trans-unit id="b4206b6b3f6b4c737ec9599bb624b3c6640633b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSPECT&lt;/code&gt; statement is used to perform various counting and/or data-alteration operations against strings.</source>
          <target state="translated">The &lt;code&gt;INSPECT&lt;/code&gt; statement is used to perform various counting and/or data-alteration operations against strings.</target>
        </trans-unit>
        <trans-unit id="4712f45172bbcefd9306d0cce04fca3929f2bcce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSPECT&lt;/code&gt; statement will make a single pass through the sequence of characters comprising the inspect subject. As the pointer to the current inspect target character reaches a point where it falls within the explicit or implicit target ranges specified on the operational instructions of the two clauses, the actions specified by those instructions will become eligible to be taken. As the character pointer reaches a point where it falls past the end of target ranges, the instructions belonging to those target ranges will become disabled.</source>
          <target state="translated">The &lt;code&gt;INSPECT&lt;/code&gt; statement will make a single pass through the sequence of characters comprising the inspect subject. As the pointer to the current inspect target character reaches a point where it falls within the explicit or implicit target ranges specified on the operational instructions of the two clauses, the actions specified by those instructions will become eligible to be taken. As the character pointer reaches a point where it falls past the end of target ranges, the instructions belonging to those target ranges will become disabled.</target>
        </trans-unit>
        <trans-unit id="eb2e081135284694ed70247195305b6c33039357" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTEGER&lt;/code&gt; function returns the greatest integer value that is less than or equal to &lt;var&gt;number&lt;/var&gt; (a numeric literal or data item).</source>
          <target state="translated">The &lt;code&gt;INTEGER&lt;/code&gt; function returns the greatest integer value that is less than or equal to &lt;var&gt;number&lt;/var&gt; (a numeric literal or data item).</target>
        </trans-unit>
        <trans-unit id="2519d25c0af4d5fd31b199d4901ed3c71b300e51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IS &lt;var&gt;mnemonic-name-1&lt;/var&gt;&lt;/code&gt; syntax provides a means for setting the switch to either an &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt; value via the &lt;code&gt;SET&lt;/code&gt; statement (see &lt;a href=&quot;#SET&quot;&gt;SET&lt;/a&gt;).</source>
          <target state="translated">The &lt;code&gt;IS &lt;var&gt;mnemonic-name-1&lt;/var&gt;&lt;/code&gt; syntax provides a means for setting the switch to either an &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt; value via the &lt;code&gt;SET&lt;/code&gt; statement (see &lt;a href=&quot;#SET&quot;&gt;SET&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a6a400b52301fc55d06be8764bd3e89ca82bdf12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LEFT&lt;/code&gt; and &lt;code&gt;RIGHT&lt;/code&gt; (SYNCRONIZED) clauses are syntactically recognized but are otherwise non-functional.</source>
          <target state="translated">The &lt;code&gt;LEFT&lt;/code&gt; and &lt;code&gt;RIGHT&lt;/code&gt; (SYNCRONIZED) clauses are syntactically recognized but are otherwise non-functional.</target>
        </trans-unit>
        <trans-unit id="50bad36885ac5532701b48c200c069b6e96d44c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LEFTLINE&lt;/code&gt; (see &lt;a href=&quot;#LEFTLINE&quot;&gt;LEFTLINE&lt;/a&gt;), &lt;code&gt;OVERLINE&lt;/code&gt; (see &lt;a href=&quot;#OVERLINE&quot;&gt;OVERLINE&lt;/a&gt;) and &lt;code&gt;UNDERLINE&lt;/code&gt; clauses may be used in any combination in a single field&amp;rsquo;s description.</source>
          <target state="translated">The &lt;code&gt;LEFTLINE&lt;/code&gt; (see &lt;a href=&quot;#LEFTLINE&quot;&gt;LEFTLINE&lt;/a&gt;), &lt;code&gt;OVERLINE&lt;/code&gt; (see &lt;a href=&quot;#OVERLINE&quot;&gt;OVERLINE&lt;/a&gt;) and &lt;code&gt;UNDERLINE&lt;/code&gt; clauses may be used in any combination in a single field&amp;rsquo;s description.</target>
        </trans-unit>
        <trans-unit id="3dd4759b4ec451fd64ae8a528fd95f2836a44720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LEFTLINE&lt;/code&gt; (see &lt;a href=&quot;#LEFTLINE&quot;&gt;LEFTLINE&lt;/a&gt;), &lt;code&gt;OVERLINE&lt;/code&gt; and &lt;code&gt;UNDERLINE&lt;/code&gt; (see &lt;a href=&quot;#UNDERLINE&quot;&gt;UNDERLINE&lt;/a&gt;) clauses may be used in any combination in a single field&amp;rsquo;s description.</source>
          <target state="translated">The &lt;code&gt;LEFTLINE&lt;/code&gt; (see &lt;a href=&quot;#LEFTLINE&quot;&gt;LEFTLINE&lt;/a&gt;), &lt;code&gt;OVERLINE&lt;/code&gt; and &lt;code&gt;UNDERLINE&lt;/code&gt; (see &lt;a href=&quot;#UNDERLINE&quot;&gt;UNDERLINE&lt;/a&gt;) clauses may be used in any combination in a single field&amp;rsquo;s description.</target>
        </trans-unit>
        <trans-unit id="4aaebe04b561b9798deb0f59b0e0b5a4de922f7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LEFTLINE&lt;/code&gt; clause will introduce a vertical line at the left edge of a screen field.</source>
          <target state="translated">The &lt;code&gt;LEFTLINE&lt;/code&gt; clause will introduce a vertical line at the left edge of a screen field.</target>
        </trans-unit>
        <trans-unit id="64a3f5d8787686662ab4e72a6f1cb0c4235f77b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LEFTLINE&lt;/code&gt;, &lt;code&gt;OVERLINE&lt;/code&gt; (see &lt;a href=&quot;#OVERLINE&quot;&gt;OVERLINE&lt;/a&gt;) and &lt;code&gt;UNDERLINE&lt;/code&gt; (see &lt;a href=&quot;#UNDERLINE&quot;&gt;UNDERLINE&lt;/a&gt;) clauses may be used in any combination in a single field&amp;rsquo;s description.</source>
          <target state="translated">The &lt;code&gt;LEFTLINE&lt;/code&gt; , &lt;code&gt;OVERLINE&lt;/code&gt; (see &lt;a href=&quot;#OVERLINE&quot;&gt;OVERLINE&lt;/a&gt;) and &lt;code&gt;UNDERLINE&lt;/code&gt; (see &lt;a href=&quot;#UNDERLINE&quot;&gt;UNDERLINE&lt;/a&gt;) clauses may be used in any combination in a single field&amp;rsquo;s description.</target>
        </trans-unit>
        <trans-unit id="b0055701fd5377a8a6914b8ec769f49e8c0c9116" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LENGTH OF&lt;/code&gt; clause on a literal or identifier reference may generally be used anywhere a numeric literal might be specified, with the following exceptions:</source>
          <target state="translated">The &lt;code&gt;LENGTH OF&lt;/code&gt; clause on a literal or identifier reference may generally be used anywhere a numeric literal might be specified, with the following exceptions:</target>
        </trans-unit>
        <trans-unit id="a43bff04f96e7fe673f1ad6a44e7198c658e51cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LENGTH-CHECK&lt;/code&gt; clause forces the user to enter data into the field it is specified on (or into all subordinate input-capable fields if specified on a group item) sufficient to fill every character position of the field.</source>
          <target state="translated">The &lt;code&gt;LENGTH-CHECK&lt;/code&gt; clause forces the user to enter data into the field it is specified on (or into all subordinate input-capable fields if specified on a group item) sufficient to fill every character position of the field.</target>
        </trans-unit>
        <trans-unit id="3bc0388b25d9f7b9349aaeb00bb7e28834a260f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LENGTH&lt;/code&gt; clause will produce a numeric value for &lt;var&gt;constant-name-1&lt;/var&gt; identical to that which would be returned by the &lt;code&gt;LENGTH&lt;/code&gt; intrinsic function executed against &lt;var&gt;identifier-1&lt;/var&gt; or a data item declared with a &lt;code&gt;USAGE&lt;/code&gt; of &lt;var&gt;usage-name&lt;/var&gt;.</source>
          <target state="translated">The &lt;code&gt;LENGTH&lt;/code&gt; clause will produce a numeric value for &lt;var&gt;constant-name-1&lt;/var&gt; identical to that which would be returned by the &lt;code&gt;LENGTH&lt;/code&gt; intrinsic function executed against &lt;var&gt;identifier-1&lt;/var&gt; or a data item declared with a &lt;code&gt;USAGE&lt;/code&gt; of &lt;var&gt;usage-name&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2424dd5e2d0575b10bd00e82e361b9311dfabe51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINAGE&lt;/code&gt; clause may only be specified in the &lt;code&gt;FD&lt;/code&gt; of a sequential or line sequential file. If used with a sequential file, the organization of that file will be implicitly changed to line sequential. The various components of the &lt;code&gt;LINAGE&lt;/code&gt; clause define the layout of printed pages as follows:</source>
          <target state="translated">The &lt;code&gt;LINAGE&lt;/code&gt; clause may only be specified in the &lt;code&gt;FD&lt;/code&gt; of a sequential or line sequential file. If used with a sequential file, the organization of that file will be implicitly changed to line sequential. The various components of the &lt;code&gt;LINAGE&lt;/code&gt; clause define the layout of printed pages as follows:</target>
        </trans-unit>
        <trans-unit id="78b7bbe7eeac80faee70035ad3689420539b3963" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINE ADVANCING&lt;/code&gt; device</source>
          <target state="translated">The &lt;code&gt;LINE ADVANCING&lt;/code&gt; device</target>
        </trans-unit>
        <trans-unit id="990928c95ad7691aa11a601bb3a097d2ca642062" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINE&lt;/code&gt; and &lt;code&gt;COLUMN&lt;/code&gt; clauses provide one mechanism for specifying the line and column position to which the cursor will be positioned before allowing the user to enter data. In the absence of one or the other, a value of 1 will be assumed for the one that is missing. The author&amp;rsquo;s personal preference, however, is to explicitly code both.</source>
          <target state="translated">The &lt;code&gt;LINE&lt;/code&gt; and &lt;code&gt;COLUMN&lt;/code&gt; clauses provide one mechanism for specifying the line and column position to which the cursor will be positioned before allowing the user to enter data. In the absence of one or the other, a value of 1 will be assumed for the one that is missing. The author&amp;rsquo;s personal preference, however, is to explicitly code both.</target>
        </trans-unit>
        <trans-unit id="a5cb5c4be4604a5d9000db1aadef0442cd17d691" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LOCALE-COMPARE&lt;/code&gt; function returns a character indicating the result of comparing &lt;var&gt;argument-1&lt;/var&gt; and &lt;var&gt;argument-2&lt;/var&gt; using a culturally-preferred ordering defined by a &lt;var&gt;locale&lt;/var&gt;.</source>
          <target state="translated">The &lt;code&gt;LOCALE-COMPARE&lt;/code&gt; function returns a character indicating the result of comparing &lt;var&gt;argument-1&lt;/var&gt; and &lt;var&gt;argument-2&lt;/var&gt; using a culturally-preferred ordering defined by a &lt;var&gt;locale&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="5c25c6979ca3b23c1950318b645cbf4d3cd50c21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LOWLIGHT&lt;/code&gt; clause controls the intensity of text (&lt;code&gt;FOREGROUND-COLOR&lt;/code&gt;) by setting that intensity to its lowest of three possible settings.</source>
          <target state="translated">The &lt;code&gt;LOWLIGHT&lt;/code&gt; clause controls the intensity of text ( &lt;code&gt;FOREGROUND-COLOR&lt;/code&gt; ) by setting that intensity to its lowest of three possible settings.</target>
        </trans-unit>
        <trans-unit id="c1823145ec41568c9038fafe4cb9318d618a8f7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MERGE&lt;/code&gt; statement merges the contents of two or more files that have each been pre-sorted on a set of specified identical keys.</source>
          <target state="translated">The &lt;code&gt;MERGE&lt;/code&gt; statement merges the contents of two or more files that have each been pre-sorted on a set of specified identical keys.</target>
        </trans-unit>
        <trans-unit id="61b51ed968d7baaf3d6db945cfdf17a3dbc8e814" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MIDRANGE&lt;/code&gt; (middle range) function returns a numeric value that is the arithmetic mean (average) of the values of the minimum and maximum numbers from the supplied list. Each &lt;var&gt;number-n&lt;/var&gt; may be a numeric data items or a numeric literal.</source>
          <target state="translated">The &lt;code&gt;MIDRANGE&lt;/code&gt; (middle range) function returns a numeric value that is the arithmetic mean (average) of the values of the minimum and maximum numbers from the supplied list. Each &lt;var&gt;number-n&lt;/var&gt; may be a numeric data items or a numeric literal.</target>
        </trans-unit>
        <trans-unit id="5d54d8a417d82f56f7b85373077e91eef345e010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MOVE CORRESPONDING&lt;/code&gt; statement similarly-named items from one group item to another.</source>
          <target state="translated">The &lt;code&gt;MOVE CORRESPONDING&lt;/code&gt; statement similarly-named items from one group item to another.</target>
        </trans-unit>
        <trans-unit id="29443533973c2a422fdb09a74d9cda814e32de1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MOVE&lt;/code&gt; statement will replace the contents of one or more receiving data items (&lt;var&gt;identifier-2&lt;/var&gt;) with a new value &amp;mdash; the one specified by &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt;.</source>
          <target state="translated">The &lt;code&gt;MOVE&lt;/code&gt; statement will replace the contents of one or more receiving data items ( &lt;var&gt;identifier-2&lt;/var&gt; ) with a new value &amp;mdash; the one specified by &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="793bea901646eb42168ba27df446f7d722d7519f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MULTIPLE FILE TAPE&lt;/code&gt; clause is obsolete and is therefore recognized but not functional.</source>
          <target state="translated">The &lt;code&gt;MULTIPLE FILE TAPE&lt;/code&gt; clause is obsolete and is therefore recognized but not functional.</target>
        </trans-unit>
        <trans-unit id="762734e0b85033c7dc13d433b626976431a3187f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MULTIPLY BY&lt;/code&gt; statement computes the product of one or more data items (&lt;var&gt;identifier-2&lt;/var&gt;) and either a numeric literal or another data item.</source>
          <target state="translated">The &lt;code&gt;MULTIPLY BY&lt;/code&gt; statement computes the product of one or more data items ( &lt;var&gt;identifier-2&lt;/var&gt; ) and either a numeric literal or another data item.</target>
        </trans-unit>
        <trans-unit id="4cf085420913a7590bf88d92e463c59977b26ea5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MULTIPLY GIVING&lt;/code&gt; statement computes the product of two literals and/or data items and saves that result in one or more other data items.</source>
          <target state="translated">여러 번 &lt;code&gt;MULTIPLY GIVING&lt;/code&gt; 문은 두 개의 리터럴 및 / 또는 데이터 항목의 제품을 계산하고 하나 개 이상의 다른 데이터 항목에 그 결과를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="994869416c4e1e69238321423bacad6cfb8afb97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEXT GROUP&lt;/code&gt; option cannot be specified in either a &lt;code&gt;REPORT HEADING&lt;/code&gt; or a &lt;code&gt;PAGE HEADING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NEXT GROUP&lt;/code&gt; 의 옵션은 하나로 지정 될 수 없습니다 &lt;code&gt;REPORT HEADING&lt;/code&gt; 또는 &lt;code&gt;PAGE HEADING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63e680ed61c5c1c2a23c76730c7b22c87cb5f816" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEXT PAGE&lt;/code&gt; option cannot be used in a &lt;code&gt;PAGE FOOTING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NEXT PAGE&lt;/code&gt; 옵션은 사용할 수 없습니다 &lt;code&gt;PAGE FOOTING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="862008e759d3d6133011317566256c97de90cbf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NO-ECHO&lt;/code&gt; (see &lt;a href=&quot;#NO_002dECHO&quot;&gt;NO-ECHO&lt;/a&gt;) and &lt;code&gt;SECURE&lt;/code&gt; clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;NO-ECHO&lt;/code&gt; (참조 : &lt;a href=&quot;#NO_002dECHO&quot;&gt;NO-에코&lt;/a&gt; )와 &lt;code&gt;SECURE&lt;/code&gt; 절은 상호 교환과 같은 데이터 항목 설명에서 함께 사용할 수 없다.</target>
        </trans-unit>
        <trans-unit id="6499bab82813afdba0cc6d0a12aa0a3b7a7e023b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NO-ECHO&lt;/code&gt; and &lt;code&gt;SECURE&lt;/code&gt; (see &lt;a href=&quot;#SECURE&quot;&gt;SECURE&lt;/a&gt;) clauses are interchangeable, and may not be used together in the same data item description.</source>
          <target state="translated">&lt;code&gt;NO-ECHO&lt;/code&gt; 및 &lt;code&gt;SECURE&lt;/code&gt; 는 (참조 &lt;a href=&quot;#SECURE&quot;&gt;SECURE&lt;/a&gt; ) 조항은 상호 교환과 같은 데이터 항목 설명에서 함께 사용할 수 없다.</target>
        </trans-unit>
        <trans-unit id="b164689a28bb3fa004f74779769b82caf8c8c64b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NO-ECHO&lt;/code&gt; clause will cause all data entered into the field to appear on the screen as asterisks.</source>
          <target state="translated">&lt;code&gt;NO-ECHO&lt;/code&gt; 절은 필드에 입력 한 모든 데이터가 별표로 화면에 표시하게됩니다.</target>
        </trans-unit>
        <trans-unit id="9c8c1ae8bf535e04b37b023d242458613c73120b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NOT AT END&lt;/code&gt; clause is not allowed on either form of table search.</source>
          <target state="translated">&lt;code&gt;NOT AT END&lt;/code&gt; 절은 테이블 검색 중 하나를 양식에 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="be34450cdd0bc816d476849d8974a068ea10725f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NOT&lt;/code&gt; operator has the highest precedence of all logical operators, just as a unary minus sign (which &amp;ldquo;negates&amp;rdquo; a numeric value) is the highest precedence arithmetic operator.</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; 연산자는 ( &quot;을 Negate&quot;숫자 값)이 가장 높은 우선 순위 산술 연산자 단항 마이너스 기호로, 모든 논리 연산자의 우선 순위가 가장 높습니다.</target>
        </trans-unit>
        <trans-unit id="76589632e0302662c4dc52f2eebabef66cc93938" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NOT&lt;/code&gt; option reverses the &lt;code&gt;TRUE&lt;/code&gt;/&lt;code&gt;FALSE&lt;/code&gt; value of the condition.</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; 옵션은 반전 &lt;code&gt;TRUE&lt;/code&gt; / &lt;code&gt;FALSE&lt;/code&gt; 조건의 값입니다.</target>
        </trans-unit>
        <trans-unit id="db200e0fd32b33070a174aa154df63ee2bec1d36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NUMERIC&lt;/code&gt; class test considers only the characters &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;NUMERIC&lt;/code&gt; 클래스 테스트는 '문자 만 고려</target>
        </trans-unit>
        <trans-unit id="07f64ea1a3d92f5504173ca01ecbb3ff018ba9bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NUMVAL&lt;/code&gt; function converts a &lt;var&gt;string&lt;/var&gt; (a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal) to its corresponding numeric value.</source>
          <target state="translated">&lt;code&gt;NUMVAL&lt;/code&gt; 의 함수가 변환 &lt;var&gt;string&lt;/var&gt; (그룹 항목 &lt;code&gt;USAGE DISPLAY&lt;/code&gt; 의 대응 수치에 기초 항목 또는 영숫자 리터럴).</target>
        </trans-unit>
        <trans-unit id="6d3717b63c73c98262618c4ebde36586b7921224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; paragraph is not allowed in a nested subprogram. A nested program inherits the &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; settings of its parent program.</source>
          <target state="translated">&lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; 단락은 중첩 된 서브 프로그램에서 허용되지 않습니다. 중첩 프로그램 은 상위 프로그램 의 &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; 설정을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="a2862da0bc3072f6d68e6a4192a19e9953845b93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OCCURS&lt;/code&gt; clause cannot be specified in a data description entry that has a level number of 01, 66, 77, or 88, although it is valid in data items described</source>
          <target state="translated">는 &lt;code&gt;OCCURS&lt;/code&gt; 가 기재된 데이터 항목에 유효하지만, 절 레벨 번호 01, 66, 77 또는 88을 갖는 데이터 정보 항목에 지정 될 수 없다</target>
        </trans-unit>
        <trans-unit id="0a240595684a938c309838f9b6e2837e629ebf4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OCCURS&lt;/code&gt; clause is used to create a data structure called a table, where entries in that structure repeat multiple times.</source>
          <target state="translated">은 &lt;code&gt;OCCURS&lt;/code&gt; 절은 테이블라는 데이터 구조, 그 구조를 반복 항목을 여러 번 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="82d0b9984ebb87c9f5c1394e54587bfdb3436138" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OCCURS&lt;/code&gt; clause may be used at the group level too, in which case the entire group structure repeats, as follows:</source>
          <target state="translated">는 &lt;code&gt;OCCURS&lt;/code&gt; 절이도 그룹 레벨에서 사용되는 경우, 전체 그룹 구조의 반복에서, 다음과 같은 수있다 :</target>
        </trans-unit>
        <trans-unit id="7f401eeb15b5f3cc7bf18ff271fde6f06719398a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OCCURS&lt;/code&gt; clause of &lt;var&gt;table-name-1&lt;/var&gt; must contain the following elements:</source>
          <target state="translated">&lt;var&gt;table-name-1&lt;/var&gt; 의 &lt;code&gt;OCCURS&lt;/code&gt; 절은 다음 요소를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="714c0ee11f0ad0d37799ea93b69f06f8dfacc3d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OMITTED&lt;/code&gt; class condition is used when it is necessary for a subprogram to determine whether or not a particular argument was passed to it. In such class conditions, &lt;var&gt;identifier-1&lt;/var&gt; must be a linkage section item defined on the &lt;code&gt;USING&lt;/code&gt; clause of the subprograms &lt;code&gt;PROCEDURE DIVISION&lt;/code&gt; header. See &lt;a href=&quot;#PROCEDURE-DIVISION-USING&quot;&gt;PROCEDURE DIVISION USING&lt;/a&gt;, for additional information.</source>
          <target state="translated">&lt;code&gt;OMITTED&lt;/code&gt; 서브 프로그램이 특정 인수가 전달되었는지 여부를 결정하는 것이 필요한 경우 클래스 상태가 사용됩니다. 이러한 클래스 조건에서 &lt;var&gt;identifier-1&lt;/var&gt; 은 서브 프로그램 &lt;code&gt;PROCEDURE DIVISION&lt;/code&gt; 헤더 의 &lt;code&gt;USING&lt;/code&gt; 절에 정의 된 링크 섹션 항목이어야합니다 . 추가 정보는 &lt;a href=&quot;#PROCEDURE-DIVISION-USING&quot;&gt;PROCEDURE DIVISION USING을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5df3f6f5d6b1c8c2085a54605450a706f5f0b00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OPEN&lt;/code&gt; statement makes one or more files described in your program available for use.</source>
          <target state="translated">&lt;code&gt;OPEN&lt;/code&gt; 문은 사용할 수있는 프로그램에 설명 된 하나 개 이상의 파일을 만든다.</target>
        </trans-unit>
        <trans-unit id="32922c47ceaa75b8b14a609dbfbf50fb5de3df58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ORGANIZATION&lt;/code&gt; of &lt;var&gt;file-name-1&lt;/var&gt; cannot be &lt;code&gt;ORGANIZATION LINE SEQUENTIAL&lt;/code&gt; (see &lt;a href=&quot;#ORGANIZATION-LINE-SEQUENTIAL&quot;&gt;ORGANIZATION LINE SEQUENTIAL&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;file-name-1&lt;/var&gt; 의 &lt;code&gt;ORGANIZATION&lt;/code&gt; 은 &lt;code&gt;ORGANIZATION LINE SEQUENTIAL&lt;/code&gt; 이 될 수 없습니다 ( &lt;a href=&quot;#ORGANIZATION-LINE-SEQUENTIAL&quot;&gt;ORGANIZATION LINE SEQUENTIAL&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="2c557c79f7c0ac3aecddb514575362b25b7d17e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OVERLINE&lt;/code&gt; clause will introduce a horizontal line at the top edge of a screen field.</source>
          <target state="translated">&lt;code&gt;OVERLINE&lt;/code&gt; 절은 화면 필드의 상단 가장자리에 수평 라인을 소개합니다.</target>
        </trans-unit>
        <trans-unit id="decce15b6d4600131512cd115e90049de847f43f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PADDING CHARACTER&lt;/code&gt; clause is syntactically recognized but is otherwise non-functional.</source>
          <target state="translated">&lt;code&gt;PADDING CHARACTER&lt;/code&gt; 절은 구문 적으로 인식하지만, 그렇지 않은 비 기능입니다.</target>
        </trans-unit>
        <trans-unit id="5ff5a31eda49b5bad07ff9d714e32b375b331a47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) and/or &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of the specified &lt;var&gt;identifier-1&lt;/var&gt; must be such as to define it as a numeric, unedited, preferably unsigned integer data item.</source>
          <target state="translated">&lt;code&gt;PICTURE&lt;/code&gt; (참고 &lt;a href=&quot;#PICTURE&quot;&gt;사진&lt;/a&gt; ) 및 / 또는 &lt;code&gt;USAGE&lt;/code&gt; (참조 &lt;a href=&quot;#USAGE&quot;&gt;USAGE를&lt;/a&gt; 지정된의) &lt;var&gt;identifier-1&lt;/var&gt; 숫자, 수정되지 않은, 바람직하게는 부호없는 정수로 데이터 항목을 정의하는 것이어야한다.</target>
        </trans-unit>
        <trans-unit id="8fc7c43ddce4e5165295711433e15824f8c6c859" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) of the data item only contains &lt;code&gt;A&lt;/code&gt; symbols.</source>
          <target state="translated">&lt;code&gt;PICTURE&lt;/code&gt; (참조 &lt;a href=&quot;#PICTURE&quot;&gt;영상을&lt;/a&gt; 데이터 항목의는)만을 포함 &lt;code&gt;A&lt;/code&gt; 문자.</target>
        </trans-unit>
        <trans-unit id="9d8124a6a47ac6d371f0f7066f2feddc6e9ef55c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) of the report data item must be such that it would be legal to &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) the specified literal or identifier to a data item with that &lt;code&gt;PICTURE&lt;/code&gt;.</source>
          <target state="translated">보고서 데이터 항목 의 &lt;code&gt;PICTURE&lt;/code&gt; ( &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt; 참조 )는 지정된 리터럴 또는 식별자를 해당 &lt;code&gt;PICTURE&lt;/code&gt; 가있는 데이터 항목으로 &lt;code&gt;MOVE&lt;/code&gt; ( &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt; 참조 )하는 것이 합법적이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="88f326ee4425248e087e7a4f26596c550f640d24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PICTURE&lt;/code&gt; of the data item contains nothing but the symbol &lt;code&gt;9&lt;/code&gt; and at least one of the editing symbols &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;CR&lt;/code&gt;, &lt;code&gt;DB&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;Z&lt;/code&gt;.</source>
          <target state="translated">데이터 항목 의 &lt;code&gt;PICTURE&lt;/code&gt; 에는 기호 &lt;code&gt;9&lt;/code&gt; 와 편집 기호 &lt;code&gt;$&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;CR&lt;/code&gt; , &lt;code&gt;DB&lt;/code&gt; , 중 하나 이상 만 포함 됩니다 &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;,&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; 또는 &lt;code&gt;Z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d089f25d553c0c8075f54d4cd1f7eb9d052211e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PICTURE&lt;/code&gt; of the data item contains only &lt;code&gt;X&lt;/code&gt; or a combination of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; symbols plus at least one &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; (zero) or &lt;code&gt;/&lt;/code&gt; symbol.</source>
          <target state="translated">데이터 항목 의 &lt;code&gt;PICTURE&lt;/code&gt; 에는 &lt;code&gt;X&lt;/code&gt; 또는 &lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;9&lt;/code&gt; 개의 기호와 하나 이상의 &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; (영) 또는 &lt;code&gt;/&lt;/code&gt; 기호 의 조합 만 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="14e339f8df5d95a3f27db1f326f5262e6babec59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PICTURE&lt;/code&gt; of the data item contains only &lt;code&gt;X&lt;/code&gt; or a combination of &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; symbols.</source>
          <target state="translated">데이터 항목 의 &lt;code&gt;PICTURE&lt;/code&gt; 에는 &lt;code&gt;X&lt;/code&gt; 또는 &lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;9&lt;/code&gt; 기호 의 조합 만 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="5640ae068c045083513eea49911348d14b15fc15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PICTURE&lt;/code&gt; of the report data item in who&amp;rsquo;s description this &lt;code&gt;SUM&lt;/code&gt; clause appears in must be such that it would be legal to &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) the specified &lt;var&gt;identifier-7&lt;/var&gt; or &lt;var&gt;literal-2&lt;/var&gt; value to a data item with that &lt;code&gt;PICTURE&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;SUM&lt;/code&gt; 절이 나타나는 사람의 설명에있는 보고서 데이터 항목 의 &lt;code&gt;PICTURE&lt;/code&gt; 는 지정된 &lt;var&gt;identifier-7&lt;/var&gt; 또는 &lt;var&gt;literal-2&lt;/var&gt; 값을 해당 &lt;code&gt;PICTURE&lt;/code&gt; 가있는 데이터 항목으로 &lt;code&gt;MOVE&lt;/code&gt; ( &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt; 참조 )하는 것이 합법적이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c83c372e31eba4437f407beab78f91ef47ab55eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PRESENT-VALUE&lt;/code&gt; function returns a value that approximates the present value of a series of future period-end amounts specified by the various &lt;var&gt;value-n&lt;/var&gt; arguments at a discount rate specified by the &lt;var&gt;rate&lt;/var&gt; argument.</source>
          <target state="translated">&lt;code&gt;PRESENT-VALUE&lt;/code&gt; 기능은 미래의 기간 엔드의 일련의 현재 가치에 가까운 값이 여러 가지로 지정된 배합비 반환 &lt;var&gt;value-n&lt;/var&gt; 에 의해 지정된 할인율에 인수 &lt;var&gt;rate&lt;/var&gt; 인수입니다.</target>
        </trans-unit>
        <trans-unit id="9c255b6a891e53c1199f1abb77890f6275cf65cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PREVIOUS&lt;/code&gt; option is available only for &lt;code&gt;ORGANIZATION INDEXED&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;PREVIOUS&lt;/code&gt; 옵션은 사용할 &lt;code&gt;ORGANIZATION INDEXED&lt;/code&gt; 파일입니다.</target>
        </trans-unit>
        <trans-unit id="a7384925bc8a15645104b9a8f04bcfbe199f4070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PROCEDURE DIVISION&lt;/code&gt; of any GnuCOBOL program marks the point where all executable code is written.</source>
          <target state="translated">GnuCOBOL 프로그램 의 &lt;code&gt;PROCEDURE DIVISION&lt;/code&gt; 은 모든 실행 코드가 작성되는 지점을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="498686cc0417a72f1cb8ecc9defe3319c2bde26a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PROGRAM-ID&lt;/code&gt; and &lt;code&gt;FUNCTION-ID&lt;/code&gt; paragraphs serve to identify the program to the external (i.e. operating system) environment. If there is no &lt;code&gt;AS&lt;/code&gt; clause present, the &lt;var&gt;program-id&lt;/var&gt; will serve as that external identification. If there is an &lt;code&gt;AS&lt;/code&gt; clause specified, that specified literal will serve as the external identification. For the remainder of this document, that &quot;external identification&quot; will be referred to as the primary entry-point name.</source>
          <target state="translated">&lt;code&gt;PROGRAM-ID&lt;/code&gt; 및 &lt;code&gt;FUNCTION-ID&lt;/code&gt; 단락은 외부 (예 : 운영 체제) 환경에 프로그램을 식별하는 역할을한다. &lt;code&gt;AS&lt;/code&gt; 절이 없는 경우 &lt;var&gt;program-id&lt;/var&gt; 는 해당 외부 ID로 사용됩니다. 이 생길 경우 &lt;code&gt;AS&lt;/code&gt; 의 외부 식별이 될 것입니다 문자 지정 지정된 절. 이 문서의 나머지 부분에서는 &quot;외부 식별&quot;을 기본 진입 점 이름이라고합니다.</target>
        </trans-unit>
        <trans-unit id="ed3f243ee88eaa70e224857a0c0e1f60696d7b87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PROTECTED&lt;/code&gt; extended clause will effect the specified field to be limited in size, regardless of the picture size.&lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;PROTECTED&lt;/code&gt; 특정 필드에 영향을 연장한다 절에 관계없이 화상의 크기, 크기가 제한된다. &lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a6a2927b0e99b026676b6e89c43640b7048d3af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RANGE&lt;/code&gt; function returns a value that is equal to the value of the maximum &lt;var&gt;number-n&lt;/var&gt; in the argument list minus the value of the minimum &lt;var&gt;number-n&lt;/var&gt; argument.</source>
          <target state="translated">&lt;code&gt;RANGE&lt;/code&gt; 의 함수가 최대의 값과 동일한 값을 반환 &lt;var&gt;number-n&lt;/var&gt; 인수 목록을 뺀 최소의 값의 &lt;var&gt;number-n&lt;/var&gt; 인수.</target>
        </trans-unit>
        <trans-unit id="3e4075ebea400eacc82da533f2e1f22559cd9fe0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RD&lt;/code&gt; must be followed by at least one 01-level report group definition.</source>
          <target state="translated">&lt;code&gt;RD&lt;/code&gt; 는 적어도 하나의 01 레벨 보고서 그룹 정의가 와야합니다.</target>
        </trans-unit>
        <trans-unit id="b10bbb1b1e23e368015f6421365f376bec28575b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;READY TRACE&lt;/code&gt; statement turns procedure or procedure-and-statement tracing on.</source>
          <target state="translated">&lt;code&gt;READY TRACE&lt;/code&gt; 문 회전 절차 나 과정 앤 문에 추적.</target>
        </trans-unit>
        <trans-unit id="b94fe17724a596c1de60f44153031e7e23df314d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REDEFINES&lt;/code&gt; clause causes the data item in who&amp;rsquo;s definition the &lt;code&gt;REDEFINES&lt;/code&gt; clause is specified (hereafter referred to as the redefines object) to occupy the same physical storage space as &lt;var&gt;identifier-1&lt;/var&gt; (hereafter referred to as the redefines subject).</source>
          <target state="translated">&lt;code&gt;REDEFINES&lt;/code&gt; 의 절 정의 누구의 데이터 항목 발생 &lt;code&gt;REDEFINES&lt;/code&gt; 의 같은 물리적 저장 공간을 점유하는 (이하, 재정의 객체 라 함) 절 지정된 &lt;var&gt;identifier-1&lt;/var&gt; (이하, 재정의 대상으로 함).</target>
        </trans-unit>
        <trans-unit id="c722a67617f286cb7aa77f00055a0c2efa60d69f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RELEASE&lt;/code&gt; statement adds a new record to a sort work file.</source>
          <target state="translated">&lt;code&gt;RELEASE&lt;/code&gt; 의 문은 정렬 작업 파일에 새 레코드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2a5158bcd4a89e0a9d9e0ed16b7340cfd9d61cc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RENAMES&lt;/code&gt; clause regroups previously defined items by specifying alternative, possibly overlapping, groupings of elementary data items.</source>
          <target state="translated">은 &lt;code&gt;RENAMES&lt;/code&gt; 절 재 그룹화 이전 가능성, 대안을 지정, 기본 데이터 항목의 그룹을 중복하여 항목을 정의했다.</target>
        </trans-unit>
        <trans-unit id="df86095f3c6be05538b17947a7c208f742b666c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REPLACE&lt;/code&gt; statement provides a mechanism for changing all or part of one or more GnuCOBOL statements.</source>
          <target state="translated">는 &lt;code&gt;REPLACE&lt;/code&gt; 문은 하나 이상의 GnuCOBOL 문의 전부 또는 일부를 변경하는 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="96b6c69cc3944af45f3b75de8753fccd36d20a31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REPLACING&lt;/code&gt; clause replaces one or more sub strings located in the inspect subject with a different, but equally-sized replacement sub string. If you need to replace a sub string with another of a</source>
          <target state="translated">&lt;code&gt;REPLACING&lt;/code&gt; 절은 하나 이상의 서브에있는 문자열을 다른, 그러나 동등 크기의 대체 하위 문자열로 대상을 검사를 대체합니다. 하위 문자열을 다른 문자열로 교체해야하는 경우</target>
        </trans-unit>
        <trans-unit id="bff23313100f769063e202bb4ddf2d4165288936" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REPORT SECTION&lt;/code&gt; (see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;) documentation explores the description of reports and the &lt;code&gt;PROCEDURE DIVISION&lt;/code&gt; (see &lt;a href=&quot;#PROCEDURE-DIVISION&quot;&gt;PROCEDURE DIVISION&lt;/a&gt;) chapter documents the various language statements that actually produce reports. Before reading these, you might find it helpful to read &lt;a href=&quot;#Report-Writer-Usage&quot;&gt;Report Writer Usage&lt;/a&gt;, which is dedicated to putting the pieces together for you.</source>
          <target state="translated">&lt;code&gt;REPORT SECTION&lt;/code&gt; (참조 &lt;a href=&quot;#REPORT-SECTION&quot;&gt;보고서 섹션을&lt;/a&gt; ) 문서는 보고서의 설명 탐구 &lt;code&gt;PROCEDURE DIVISION&lt;/code&gt; (참조 &lt;a href=&quot;#PROCEDURE-DIVISION&quot;&gt;절차 부문&lt;/a&gt; ) 장 문서 실제로 보고서를 다양한 언어 문을. 이를 읽기 전에 &lt;a href=&quot;#Report-Writer-Usage&quot;&gt;보고서 작성기 사용&lt;/a&gt; 을 읽어 보는 것이 도움이 될 수 있습니다.이 문서는 조각을 함께 모으는 데 전념합니다.</target>
        </trans-unit>
        <trans-unit id="b150afe7e37552018d03fd0f7150591bc02074a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REPOSITORY&lt;/code&gt; paragraph is not allowed in a nested subprogram. A nested program inherits the &lt;code&gt;REPOSITORY&lt;/code&gt; settings of its parent program.</source>
          <target state="translated">&lt;code&gt;REPOSITORY&lt;/code&gt; 단락은 중첩 된 서브 프로그램에서 허용되지 않습니다. 중첩 프로그램 은 상위 프로그램 의 &lt;code&gt;REPOSITORY&lt;/code&gt; 설정을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="57769080641cfe3605db956b641aa1f25a8c192c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RESET TRACE&lt;/code&gt; statement turns procedure or procedure-and-statement tracing off.</source>
          <target state="translated">&lt;code&gt;RESET TRACE&lt;/code&gt; 문은 프로 시저 또는 추적을 프로 시저 및 문을집니다.</target>
        </trans-unit>
        <trans-unit id="ef7d7d9c35ab4af1e51c7c3e840ed6ea6a62ca9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RETURN-CODE&lt;/code&gt; special register will not be updated (but any &lt;code&gt;RETURNING&lt;/code&gt; or &lt;code&gt;GIVING&lt;/code&gt; data item still will).</source>
          <target state="translated">&lt;code&gt;RETURN-CODE&lt;/code&gt; 의 특수 레지스터는 업데이트되지 않습니다 (그러나 어떤 &lt;code&gt;RETURNING&lt;/code&gt; 또는 &lt;code&gt;GIVING&lt;/code&gt; 데이터 항목은 여전히 것이다).</target>
        </trans-unit>
        <trans-unit id="59178035eb2d6251aa02a1c6116a8228b7cfa60e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RETURN&lt;/code&gt; statement is valid only within the &lt;code&gt;OUTPUT PROCEDURE&lt;/code&gt; of a file-based &lt;code&gt;SORT&lt;/code&gt; (see &lt;a href=&quot;#File_002dBased-SORT&quot;&gt;File-Based SORT&lt;/a&gt;) or a &lt;code&gt;MERGE&lt;/code&gt; statement (see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) statement.</source>
          <target state="translated">&lt;code&gt;RETURN&lt;/code&gt; 문은 단지 내에서 유효 &lt;code&gt;OUTPUT PROCEDURE&lt;/code&gt; 파일 기반의 &lt;code&gt;SORT&lt;/code&gt; (참조 &lt;a href=&quot;#File_002dBased-SORT&quot;&gt;파일 기반 SORT를&lt;/a&gt; ) 또는 &lt;code&gt;MERGE&lt;/code&gt; 의 문 (참조 &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt; 문을).</target>
        </trans-unit>
        <trans-unit id="134316d09f359a51f39907396366f37dca761bcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RETURN&lt;/code&gt; statement reads a record from a sort or merge work file.</source>
          <target state="translated">&lt;code&gt;RETURN&lt;/code&gt; 의 문은 정렬 또는 병합 작업 파일에서 레코드를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="fbbe2413499bfd3a52f97cd189af9db7eedbc1a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RETURNING&lt;/code&gt; clause is mandatory within a user-defined function, as all such must return a numeric result.</source>
          <target state="translated">&lt;code&gt;RETURNING&lt;/code&gt; 절은 이러한 모든이 숫자 결과를 반환해야하기 때문에, 사용자 정의 함수 내에서 필수입니다.</target>
        </trans-unit>
        <trans-unit id="3d65d1afe755db85e4ce258cacc633e16d051133" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RETURNING&lt;/code&gt; clause is optional within a subroutine, as not all subroutines return a value to their caller.</source>
          <target state="translated">&lt;code&gt;RETURNING&lt;/code&gt; 모든 서브 루틴은 자신의 호출자에게 값을 반환로 절은, 서브 루틴 내에서 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="acd11c9dff4233cb9803f2363406b6c9676a1fd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REVERSE-VIDEO&lt;/code&gt; attribute swaps the specified or implied &lt;code&gt;FOREGROUND-COLOR&lt;/code&gt; (see &lt;a href=&quot;#FOREGROUND_002dCOLOR&quot;&gt;FOREGROUND-COLOR&lt;/a&gt;) and &lt;code&gt;BACKGROUND-COLOR&lt;/code&gt; (see &lt;a href=&quot;#BACKGROUND_002dCOLOR&quot;&gt;BACKGROUND-COLOR&lt;/a&gt;) attributes for the field whose definition contains this clause (or all subordinate fields if used on a group item).</source>
          <target state="translated">&lt;code&gt;REVERSE-VIDEO&lt;/code&gt; 의 속성 스왑 지정된 또는 묵시적 &lt;code&gt;FOREGROUND-COLOR&lt;/code&gt; (참조 &lt;a href=&quot;#FOREGROUND_002dCOLOR&quot;&gt;포 그라운드-COLOR를&lt;/a&gt; ) 및 &lt;code&gt;BACKGROUND-COLOR&lt;/code&gt; (참조 &lt;a href=&quot;#BACKGROUND_002dCOLOR&quot;&gt;BACKGROUND-COLOR는&lt;/a&gt; ) 그 정의 (그룹 항목에 사용 된 경우 또는 모든 하위 필드)이 절을 포함하는 필드 속성 .</target>
        </trans-unit>
        <trans-unit id="66718d0b413cb033e942879a0d9a004d04d57dba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REWRITE&lt;/code&gt; statement replaces a logical record on a disk file.</source>
          <target state="translated">&lt;code&gt;REWRITE&lt;/code&gt; 문은 디스크 파일에 논리 레코드를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="f91307421c36d34dd7efbb90ef6009cf557c6cc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RH&lt;/code&gt; and &lt;code&gt;REPORT HEADING&lt;/code&gt; terms are interchangeable, as are &lt;code&gt;PH&lt;/code&gt; and &lt;code&gt;PAGE HEADING&lt;/code&gt;, &lt;code&gt;CH&lt;/code&gt; and &lt;code&gt;CONTROL HEADING&lt;/code&gt;, &lt;code&gt;DE&lt;/code&gt; and &lt;code&gt;DETAIL&lt;/code&gt;, &lt;code&gt;CF&lt;/code&gt; and &lt;code&gt;CONTROL FOOTING&lt;/code&gt;, &lt;code&gt;PF&lt;/code&gt; and &lt;code&gt;PAGE FOOTING&lt;/code&gt; as well as &lt;code&gt;RF&lt;/code&gt; and &lt;code&gt;REPORT FOOTING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RH&lt;/code&gt; 및 &lt;code&gt;REPORT HEADING&lt;/code&gt; 의 조건은이며, 상호 교환 &lt;code&gt;PH&lt;/code&gt; 및 &lt;code&gt;PAGE HEADING&lt;/code&gt; , &lt;code&gt;CH&lt;/code&gt; 및 &lt;code&gt;CONTROL HEADING&lt;/code&gt; , &lt;code&gt;DE&lt;/code&gt; 및 &lt;code&gt;DETAIL&lt;/code&gt; , &lt;code&gt;CF&lt;/code&gt; 및 &lt;code&gt;CONTROL FOOTING&lt;/code&gt; , &lt;code&gt;PF&lt;/code&gt; 및 &lt;code&gt;PAGE FOOTING&lt;/code&gt; 뿐만 아니라 &lt;code&gt;RF&lt;/code&gt; 및 &lt;code&gt;REPORT FOOTING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1622d90f388cc0319fc5c0d82e941d96bf0fccf3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ROLLBACK&lt;/code&gt; statement has the same effect as if an &lt;code&gt;UNLOCK&lt;/code&gt; statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;) were executed against every open file in the program.</source>
          <target state="translated">&lt;code&gt;ROLLBACK&lt;/code&gt; 것처럼 문은 같은 효과를 &lt;code&gt;UNLOCK&lt;/code&gt; 문 (참조 &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK를&lt;/a&gt; ) 프로그램의 모든 열려있는 파일에 대해 실행되었다.</target>
        </trans-unit>
        <trans-unit id="8ccb993180e74cbf0d8157f727e044248260be92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ROUNDED&lt;/code&gt; option comes into play should the number of digits to the right of an actual or assumed decimal point be different between the specified literal or identifier value (the &amp;ldquo;source value&amp;rdquo;) and the &lt;code&gt;PICTURE&lt;/code&gt; specified for the field in whose definition the &lt;code&gt;SOURCE&lt;/code&gt; clause appears (the &amp;ldquo;target field&amp;rdquo;).</source>
          <target state="translated">&lt;code&gt;ROUNDED&lt;/code&gt; 옵션은 실제 또는 가정 된 소수점 이하의 자리수가 지정 문자 또는 식별자 값 ( &quot;소스 값&quot;) 및 사이 달라야 플레이하게된다 &lt;code&gt;PICTURE&lt;/code&gt; 그 정의의 필드에 지정된 &lt;code&gt;SOURCE&lt;/code&gt; 의 절 나타납니다 ( &quot;대상 필드&quot;).</target>
        </trans-unit>
        <trans-unit id="b63b7888acac31593996cb1de69b997bfd81b84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SAME RECORD AREA&lt;/code&gt; clause allows you to specify that multiple files should share the same input and output memory buffers.</source>
          <target state="translated">&lt;code&gt;SAME RECORD AREA&lt;/code&gt; 절은 여러 파일이 같은 입력 및 출력 메모리 버퍼를 공유하도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfc5e272f38d1de8a3322d8b9b1bc404e66212e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SEARCH ALL&lt;/code&gt; statement performs a binary, or half-interval, search against a sorted table. This is generally</source>
          <target state="translated">&lt;code&gt;SEARCH ALL&lt;/code&gt; 문이 수행하는 바이너리 또는 반 간격, 정렬 된 테이블에 대해 검색 할 수 있습니다. 이것은 일반적으로</target>
        </trans-unit>
        <trans-unit id="02a22a3b6572fbf16d8e9ccb38f45d6077cc69f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SEARCH&lt;/code&gt; statement is used to sequentially search a table, stopping either once a specific value is located within the table or when the table has been completely searched.</source>
          <target state="translated">&lt;code&gt;SEARCH&lt;/code&gt; 문은 순차적으로 특정 값이 테이블 내에 위치하거나 테이블이 있었다 때 완전 검색되면 중 정지, 테이블을 검색하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2a8c67782e66a9c56dbb8a4bf5bbded85f0c5766" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SELECT&lt;/code&gt; statement creates a definition of a file and links that COBOL definition to the external operating system environment.</source>
          <target state="translated">&lt;code&gt;SELECT&lt;/code&gt; 문은 파일의 정의와 링크를 작성하는 외부 운영 체제 환경에 COBOL 정의가.</target>
        </trans-unit>
        <trans-unit id="266fa0dd29305dc27f65a427f527e8c628ffc034" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SET &lt;var&gt;Condition Name&lt;/var&gt;&lt;/code&gt; statement provides one method of specifying the &lt;code&gt;TRUE&lt;/code&gt; / &lt;code&gt;FALSE&lt;/code&gt; value of a level-88 condition name.</source>
          <target state="translated">&lt;code&gt;SET &lt;var&gt;Condition Name&lt;/var&gt;&lt;/code&gt; 문을 지정하는 하나의 방법 제공 &lt;code&gt;TRUE&lt;/code&gt; / &lt;code&gt;FALSE&lt;/code&gt; 수준-88 조건 이름의 값입니다.</target>
        </trans-unit>
        <trans-unit id="5228c0e42cbab40d766036bda7280ca5b0fcd849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SET &lt;var&gt;Program-Pointer&lt;/var&gt;&lt;/code&gt; statement allows you to retrieve the address of a procedure division code module &amp;mdash; specifically the &lt;code&gt;PROGRAM-ID&lt;/code&gt;, &lt;code&gt;FUNCTION-ID&lt;/code&gt; or an entry-point established via the &lt;code&gt;ENTRY&lt;/code&gt; statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;SET &lt;var&gt;Program-Pointer&lt;/var&gt;&lt;/code&gt; 특히 - 문은 프로 시저 분할 코드 모듈의 주소를 검색 할 수 있습니다 &lt;code&gt;PROGRAM-ID&lt;/code&gt; , &lt;code&gt;FUNCTION-ID&lt;/code&gt; 또는를 통해 설립 된 엔트리 포인트 &lt;code&gt;ENTRY&lt;/code&gt; 의 (참조 문을 &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY를&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e70177bc145626b7e5d2c1127ed5550777e2c742" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SET ADDRESS&lt;/code&gt; statement can be used to work with the addresses of data items rather than their contents.</source>
          <target state="translated">&lt;code&gt;SET ADDRESS&lt;/code&gt; 문은 데이터 항목이 아니라 그 내용의 주소와 함께 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39b935bd56d63084c61515d903c5a98581b71365" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SET ATTRIBUTE&lt;/code&gt; statement may be used to modify one or more attributes of a screen section data item at run-time.</source>
          <target state="translated">&lt;code&gt;SET ATTRIBUTE&lt;/code&gt; 문은 실행시 화면 섹션 데이터 항목의 하나 개 이상의 속성을 수정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fddba161182e41e3d8e90ff4c634b719c66c94e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SET ENVIRONMENT&lt;/code&gt; statement provides a straight-forward means of setting environment values from within a program.</source>
          <target state="translated">&lt;code&gt;SET ENVIRONMENT&lt;/code&gt; 문은 프로그램 내에서 환경 값을 설정하는 직선 앞으로 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="82eddf267e03c58028d36c3ebea99f33d6bc9a4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SET LAST EXCEPTION&lt;/code&gt; statement will set the last program exception status to indicate no exception.</source>
          <target state="translated">&lt;code&gt;SET LAST EXCEPTION&lt;/code&gt; 문은 예외를 나타 내기 위해 마지막 프로그램 예외 상태를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c5613f9a17e80d154c3eee7c37eddb5dbb09a260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHARING&lt;/code&gt; and &lt;code&gt;WITH LOCK&lt;/code&gt; clauses may not both be specified in the same &lt;code&gt;OPEN&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;SHARING&lt;/code&gt; 와 &lt;code&gt;WITH LOCK&lt;/code&gt; 조항은 모두 동일한에 지정되지 않을 수도 있습니다 &lt;code&gt;OPEN&lt;/code&gt; 문.</target>
        </trans-unit>
        <trans-unit id="a12b6199b3e356935dc7e7c80f2428538e47f54b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SIGN&lt;/code&gt; function returns a -1 if the value of &lt;var&gt;number&lt;/var&gt; (a numeric literal or numeric data item) is negative, a zero if the value of &lt;var&gt;number&lt;/var&gt; is exactly zero and a 1 if the value of &lt;var&gt;number&lt;/var&gt; if greater than 0.</source>
          <target state="translated">&lt;code&gt;SIGN&lt;/code&gt; 함수의 값 경우 -1 반환 &lt;var&gt;number&lt;/var&gt; (숫자 문자 또는 숫자 데이터 항목)이 네거티브이고, 제로가 값 경우 &lt;var&gt;number&lt;/var&gt; 정확히 제로 및 1의 경우의 값은 &lt;var&gt;number&lt;/var&gt; 큰 경우, 0보다.</target>
        </trans-unit>
        <trans-unit id="1b3ce4d0732db4dc33dec1a39c2c099c4d092022" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SOURCE&lt;/code&gt; (see &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE&lt;/a&gt;), &lt;code&gt;SUM&lt;/code&gt; (see &lt;a href=&quot;#SUM&quot;&gt;SUM&lt;/a&gt;) and &lt;code&gt;VALUE&lt;/code&gt; (see &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt;) clauses, valid only on an elementary item, are mutually-exclusive of each other.</source>
          <target state="translated">&lt;code&gt;SOURCE&lt;/code&gt; 는 (참조 &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE를&lt;/a&gt; ), &lt;code&gt;SUM&lt;/code&gt; (참조 &lt;a href=&quot;#SUM&quot;&gt;합&lt;/a&gt; )과 &lt;code&gt;VALUE&lt;/code&gt; (참조 &lt;a href=&quot;#VALUE&quot;&gt;VALUE&lt;/a&gt; 단지 기본 항목의 유효 조항), 서로 상호 배타적이다.</target>
        </trans-unit>
        <trans-unit id="e522107893eedb8d11c39567b8b804aaf210effc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; paragraph is not allowed in a nested subprogram. A nested program inherits the &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; settings of its parent program.</source>
          <target state="translated">&lt;code&gt;SPECIAL-NAMES&lt;/code&gt; 의 단락은 중첩 된 서브 프로그램에서 허용되지 않습니다. 중첩 프로그램 은 상위 프로그램 의 &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; 설정을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="58695014c50e5a2aed8a48685c17f79de416d775" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; paragraph provides a means for specifying various program and operating environment configuration options.</source>
          <target state="translated">&lt;code&gt;SPECIAL-NAMES&lt;/code&gt; 단락 환경 설정 옵션을 다양한 프로그램을 지정하고 조작하기위한 수단을 제공한다.</target>
        </trans-unit>
        <trans-unit id="6acf458c2bca035b1a7e580eb594afa0f112c57e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SQRT&lt;/code&gt; function returns a numeric value that approximates the square root of &lt;var&gt;number&lt;/var&gt; (a numeric data item or numeric literal with a non-negative value).</source>
          <target state="translated">&lt;code&gt;SQRT&lt;/code&gt; 의 기능의 제곱근에 가까운 숫자 값을 반환 &lt;var&gt;number&lt;/var&gt; (음수가 아닌 값을 가진 숫자 데이터 항목이나 숫자 리터럴).</target>
        </trans-unit>
        <trans-unit id="93b8daf13d66425a9f2a2324a99f58aa0406ab8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;START&lt;/code&gt; statement defines the logical starting point within a relative or indexed file for subsequent sequential read operations. It positions an internal logical record pointer to a particular record in the file, but does not actually transfer any of that record&amp;rsquo;s data into the record buffer.</source>
          <target state="translated">&lt;code&gt;START&lt;/code&gt; 의 문은 이후 순차적 읽기 작업을 위해 친척이나 인덱스 파일 내에서 논리적 시작점을 정의합니다. 내부 논리 레코드 포인터를 파일의 특정 레코드에 배치하지만 실제로 해당 레코드의 데이터를 레코드 버퍼로 전송하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="881cdd6bae1e32fff42237942e2b96aeaa2b578d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STDCALL&lt;/code&gt; convention will not be used.</source>
          <target state="translated">&lt;code&gt;STDCALL&lt;/code&gt; 의 규칙은 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ab9a80eeed1d1202e1cba249f42a554317dd244" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STDCALL&lt;/code&gt; convention, required to use the Microsoft Win32 API, will be used.</source>
          <target state="translated">&lt;code&gt;STDCALL&lt;/code&gt; 의 는 Microsoft에서 Win32 API를 사용하는 데 필요한 규칙, 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="40b7c3c2cb21fcae4f69bf1e20e105aa31433dad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STOP&lt;/code&gt; statement suspends program execution. Some options will allow program execution to resume while others return control to the operating system.</source>
          <target state="translated">&lt;code&gt;STOP&lt;/code&gt; 의 문 일시 중단 프로그램 실행. 일부 옵션은 프로그램 실행을 재개하고 다른 옵션은 운영 체제에 제어권을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="886229c5507dbd8b83c4ac205e6a1409bf5231f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STRING&lt;/code&gt; statement is used to concatenate all or a part of one or more strings together, forming a new string.</source>
          <target state="translated">&lt;code&gt;STRING&lt;/code&gt; 의 문은 새 문자열을 형성, 함께 하나 이상의 문자열의 전부 또는 일부를 연결하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="06e6a618fa500cfe2868b8e540266d0ee907851e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STRING&lt;/code&gt; statement&amp;rsquo;s processing is based upon a  &lt;em&gt;current character pointer&lt;/em&gt;. The initial value of the current character pointer will be the value of &lt;var&gt;identifier-4&lt;/var&gt; at the time the &lt;code&gt;STRING&lt;/code&gt; statement began execution. If no &lt;code&gt;POINTER&lt;/code&gt; clause is coded, a value of 1 (meaning &amp;ldquo;the 1&lt;sup&gt;st&lt;/sup&gt; character position&amp;rdquo;) will be assumed for the current character pointer&amp;rsquo;s initial value.</source>
          <target state="translated">&lt;code&gt;STRING&lt;/code&gt; 의 문의 처리가를 기반으로 &lt;em&gt;현재의 문자 포인터&lt;/em&gt; . 현재 문자 포인터의 초기 값은 &lt;code&gt;STRING&lt;/code&gt; 문이 실행을 시작 했을 때 의 &lt;var&gt;identifier-4&lt;/var&gt; 값이 됩니다 . &lt;code&gt;POINTER&lt;/code&gt; 절이 코딩 되지 않은 경우 현재 문자 포인터의 초기 값에 대해 값 1 ( &quot; &lt;sup&gt;첫 번째&lt;/sup&gt; 문자 위치&quot;를 의미 )이 가정됩니다.&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6a0d999080e930bbf04f401d86753a4fdd2a6066" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUBSTITUTE-CASE&lt;/code&gt; function operates the same as the &lt;code&gt;SUBSTITUTE&lt;/code&gt; (see &lt;a href=&quot;#SUBSTITUTE&quot;&gt;SUBSTITUTE&lt;/a&gt;) function, except that &lt;var&gt;from-n&lt;/var&gt; string matching is performed without regard to case.</source>
          <target state="translated">&lt;code&gt;SUBSTITUTE-CASE&lt;/code&gt; 함수는 동일한 동작 &lt;code&gt;SUBSTITUTE&lt;/code&gt; (참조 &lt;a href=&quot;#SUBSTITUTE&quot;&gt;SUBSTITUTE&lt;/a&gt; 제외시켰다 기능)이 &lt;var&gt;from-n&lt;/var&gt; 문자열 매칭의 경우에 관계없이 수행된다.</target>
        </trans-unit>
        <trans-unit id="9383c2a7436063ff268f194028581b31a3e15a09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUBTRACT CORRESPONDING&lt;/code&gt; statement generates code equivalent to individual &lt;code&gt;SUBTRACT FROM&lt;/code&gt; statements for corresponding matches of data items found subordinate to the two identifiers.</source>
          <target state="translated">&lt;code&gt;SUBTRACT CORRESPONDING&lt;/code&gt; 문 개별 해당하는 코드 생성 &lt;code&gt;SUBTRACT FROM&lt;/code&gt; 두 식별자 발견 하위 데이터 아이템들의 일치를위한 대응하는 문.</target>
        </trans-unit>
        <trans-unit id="2f1ceec051419a39625a5ae1516ad281d111a7db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUBTRACT GIVING&lt;/code&gt; statement generates the arithmetic sum of all arguments that appear before the &lt;code&gt;FROM&lt;/code&gt; (&lt;var&gt;identifier-1&lt;/var&gt; or &lt;var&gt;literal-1&lt;/var&gt;), subtracts that sum from the contents of &lt;var&gt;identifier-2&lt;/var&gt; and then replaces the contents of the identifiers listed after the  &lt;code&gt;GIVING&lt;/code&gt; (&lt;var&gt;identifier-3&lt;/var&gt;) with that result.</source>
          <target state="translated">&lt;code&gt;SUBTRACT GIVING&lt;/code&gt; 문 앞에 나타나는 모든 인자의 산술 합 생성 &lt;code&gt;FROM&lt;/code&gt; ( &lt;var&gt;identifier-1&lt;/var&gt; 또는 &lt;var&gt;literal-1&lt;/var&gt; 의 내용)에서, 감산 그 합 &lt;var&gt;identifier-2&lt;/var&gt; 후 뒤에 나열 식별자의 내용을 대체 &lt;code&gt;GIVING&lt;/code&gt; ( &lt;var&gt;identifier-3&lt;/var&gt; ) 그 결과.</target>
        </trans-unit>
        <trans-unit id="2e36e1329452a7f599e94680b512111918dbb86b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUM&lt;/code&gt; clause establishes a summation counter whose value will be arithmetically calculated whenever the field is presented.</source>
          <target state="translated">&lt;code&gt;SUM&lt;/code&gt; 절는 값 필드가 제시 될 때마다 산술적으로 계산하는 가산 계수기를 설정한다.</target>
        </trans-unit>
        <trans-unit id="a75b3aa7d129d000a2ad3636ca64305db447df30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUM&lt;/code&gt; clause may only appear in a &lt;code&gt;CONTROL FOOTING&lt;/code&gt; report group.</source>
          <target state="translated">&lt;code&gt;SUM&lt;/code&gt; 의 절에만 나타날 수 있습니다 &lt;code&gt;CONTROL FOOTING&lt;/code&gt; 보고서 그룹.</target>
        </trans-unit>
        <trans-unit id="525d945675afaa8dcc340a9434835f86e39e9edb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUM&lt;/code&gt; function returns a value that is the sum of &lt;var&gt;number-n&lt;/var&gt; arguments (these may be numeric data items or numeric literals).</source>
          <target state="translated">&lt;code&gt;SUM&lt;/code&gt; 함수의 합인 값 반환 &lt;var&gt;number-n&lt;/var&gt; 인자 (이들 숫자 데이터 항목 또는 숫자 리터럴 수있다).</target>
        </trans-unit>
        <trans-unit id="26a59dd0e9ee6c1cb7e4ff9442a8ea6dc6e64afd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUPPRESS&lt;/code&gt; statement causes the presentation of a report group to be suppressed.</source>
          <target state="translated">&lt;code&gt;SUPPRESS&lt;/code&gt; 문은 보고서 그룹의 프리젠 테이션이 억제되도록합니다.</target>
        </trans-unit>
        <trans-unit id="022c991820d017b5624fee1b9320a61aedbe70f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TALLYING&lt;/code&gt; clause counts the number of occurrences of one or more strings of characters in the inspect subject.</source>
          <target state="translated">&lt;code&gt;TALLYING&lt;/code&gt; 절 카운트는 문자 중 하나 이상의 문자열의 발생 수는 주제를 검사합니다.</target>
        </trans-unit>
        <trans-unit id="654b02fa690ea2b4ed852d95eba989a7de68d551" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TERMINATE&lt;/code&gt; statement causes the processing of the specified report(s) to be completed.</source>
          <target state="translated">&lt;code&gt;TERMINATE&lt;/code&gt; 문은 지정된 보고서 (들)의 처리가 완료되도록합니다.</target>
        </trans-unit>
        <trans-unit id="afdbb45c9470aec05a732d55dfd8a5a646af32c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TERMINATE&lt;/code&gt; statement will present each &lt;code&gt;CONTROL FOOTING&lt;/code&gt; (if any), in reverse sequence of the control hierarchy, starting with the most minor up to &lt;code&gt;FINAL&lt;/code&gt; (if any). During the presentation of these groups and the processing of any &lt;code&gt;USE BEFORE REPORTING&lt;/code&gt; procedures for those groups, the prior set of control data item values will be available, as though a control break had been detected at the most major control data name.</source>
          <target state="translated">&lt;code&gt;TERMINATE&lt;/code&gt; 문 각각 제시한다 &lt;code&gt;CONTROL FOOTING&lt;/code&gt; 에 가장 작은쪽으로부터, 상기 제어 계층의 역순으로, (만약 있다면) &lt;code&gt;FINAL&lt;/code&gt; (있는 경우). 이러한 그룹을 표시하고 해당 그룹에 대한 &lt;code&gt;USE BEFORE REPORTING&lt;/code&gt; 절차를 처리하는 동안, 대부분의 주요 제어 데이터 이름에서 제어 중단이 감지 된 것처럼 이전 제어 데이터 항목 값 세트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d649ef98f4494329c053d757d71f9b8ca5717a5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TEST-NUMVAL&lt;/code&gt; function evaluates &lt;var&gt;string&lt;/var&gt; (a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal) for being appropriate for use as the &lt;var&gt;string&lt;/var&gt; argument to a &lt;code&gt;NUMVAL&lt;/code&gt; (see &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL&lt;/a&gt;) function, returning to a integer a zero value if it is appropriate otherwise if one or more characters are in error, the position of the first character in error or the length of the field plus one for other cases such as all spaces.</source>
          <target state="translated">&lt;code&gt;TEST-NUMVAL&lt;/code&gt; 기능들을 평가의 &lt;var&gt;string&lt;/var&gt; (그룹 항목 &lt;code&gt;USAGE DISPLAY&lt;/code&gt; 기본 항목 또는 영숫자 문자)이 같은 사용에 적합한 것에 대한 &lt;var&gt;string&lt;/var&gt; (A)에 인수 &lt;code&gt;NUMVAL&lt;/code&gt; 는 (참조 &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL&lt;/a&gt; 는 달리 적절한 경우 0 값의 정수 A를 반환하는 함수) 하나 이상의 문자에 오류가있는 경우 오류가 발생한 첫 번째 문자의 위치 또는 모든 공백과 같은 다른 경우에 하나를 더한 필드 길이.</target>
        </trans-unit>
        <trans-unit id="dab765d43a55d003fd0c570f3a907060aaef300a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TIMES&lt;/code&gt; option will repeat the execution of the code within the perform scope a fixed number of times. When the &lt;code&gt;PERFORM&lt;/code&gt; statement begins execution, an internal repeat counter (not accessible to the programmer) will be set to the value of &lt;var&gt;literal-1&lt;/var&gt; or the value within &lt;var&gt;identifier-1&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;TIMES&lt;/code&gt; 의 (가) 범위를 시간의 고정을 수행 내 옵션은 코드의 실행을 반복합니다. 언제 &lt;code&gt;PERFORM&lt;/code&gt; 문의 값으로 설정 될 것이다 실행 내부 반복 카운터 (프로그래머에 액세스하지 않음)을 시작 &lt;var&gt;literal-1&lt;/var&gt; 또는 내의 값 &lt;var&gt;identifier-1&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ae5785a80474f819fdc56abc8d14ced3b883dde4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TO&lt;/code&gt; clause is used to define a data-entry field with no initial value; when a value is entered, it will be saved to the specified identifier.</source>
          <target state="translated">&lt;code&gt;TO&lt;/code&gt; 의 절은없고 초기 값으로 데이터 입력 필드를 정의하는 데 사용됩니다; 값을 입력하면 지정된 식별자에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="150d6648ce7120ca9aa3b581434fbd7176c07dcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TRANSFORM&lt;/code&gt; statement scans a data item performing a series of mono-alphabetic substitutions, defined by the arguments before and after the &lt;code&gt;TO&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;TRANSFORM&lt;/code&gt; 문은 이전과 이후의 인수에 의해 정의 된 모노 알파벳 대체하는 일련의 수행하는 데이터 항목 검색 &lt;code&gt;TO&lt;/code&gt; 의 절을.</target>
        </trans-unit>
        <trans-unit id="c8f7971de58dfc4610fdd2424098b2e022fbe7a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TRANSFORM&lt;/code&gt; statement will replace characters within &lt;var&gt;identifier-1&lt;/var&gt; that are found in the string specified</source>
          <target state="translated">&lt;code&gt;TRANSFORM&lt;/code&gt; 내에서 문자를 대체 할 문 &lt;var&gt;identifier-1&lt;/var&gt; 지정된 문자열에서 발견된다</target>
        </trans-unit>
        <trans-unit id="0ac708719f76d5c6fdb29ea0524f6f283103f1c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TYPE&lt;/code&gt; (see &lt;a href=&quot;#TYPE&quot;&gt;TYPE&lt;/a&gt;) clause specifies the type of report group being defined.</source>
          <target state="translated">&lt;code&gt;TYPE&lt;/code&gt; 은 (참조 &lt;a href=&quot;#TYPE&quot;&gt;TYPE를&lt;/a&gt; ) 절은 보고서 그룹의 유형을 지정 정의된다.</target>
        </trans-unit>
        <trans-unit id="1a8b004d64c6adb6010f214dba2f3f0cfca1e557" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tab&lt;/code&gt; and &lt;code&gt;Back-Tab&lt;/code&gt; (&lt;code&gt;Shift&lt;/code&gt;-&lt;code&gt;Tab&lt;/code&gt; on most keyboards) keys will position the cursor from field to field in the line/column sequence in which the fields occur on the screen at execution time, regardless of the sequence in which they were defined in the screen section.</source>
          <target state="translated">&lt;code&gt;Tab&lt;/code&gt; 과 &lt;code&gt;Back-Tab&lt;/code&gt; ( &lt;code&gt;Shift&lt;/code&gt; - &lt;code&gt;Tab&lt;/code&gt; 대부분의 키보드에서) 키는 관계없이 정의 된 순서의 필드는 실행 시간에 화면에 발생하는 행 / 열 순서에 필드에서 필드로 커서를 위치합니다 화면 섹션에서.</target>
        </trans-unit>
        <trans-unit id="d26107563a4347c57654937ffa67b169c965e844" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UNDERLINE&lt;/code&gt; clause will introduce a horizontal line at the bottom edge of a screen field.</source>
          <target state="translated">&lt;code&gt;UNDERLINE&lt;/code&gt; 절은 화면 필드의 아래쪽 가장자리에 수평 라인을 소개합니다.</target>
        </trans-unit>
        <trans-unit id="7522b31e3e68a854f166c68a7d1fad1f2d987a1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UNSTRING&lt;/code&gt; statement parses a string, extracting any number of sub strings from it.</source>
          <target state="translated">&lt;code&gt;UNSTRING&lt;/code&gt; 문은 그것에서 서브 문자열의 수를 추출, 문자열을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="af0990d7caca4d0d1b5b1800df9f3f9b7f14537b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UNSTRING&lt;/code&gt; statement&amp;rsquo;s processing is based upon a</source>
          <target state="translated">&lt;code&gt;UNSTRING&lt;/code&gt; 문의 처리가를 기반으로</target>
        </trans-unit>
        <trans-unit id="140ec144e0804f99992bf3cd4c47bc54319ddf3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UNTIL &lt;var&gt;conditional-expression-1&lt;/var&gt;&lt;/code&gt; option will repeat the code within the perform scope until the specified conditional expression evaluates to a &lt;code&gt;TRUE&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;UNTIL &lt;var&gt;conditional-expression-1&lt;/var&gt;&lt;/code&gt; (가) A를 조건식 평가하여 지정 될 때까지이 범위를 수행 내 옵션은 코드를 반복 할 것이다 &lt;code&gt;TRUE&lt;/code&gt; 값.</target>
        </trans-unit>
        <trans-unit id="6a4148f39632f2429197b8c697087de17c5e399c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;var&gt;identifier-1&lt;/var&gt; must be &lt;code&gt;INDEX&lt;/code&gt;, &lt;code&gt;POINTER&lt;/code&gt; or &lt;code&gt;PROGRAM-POINTER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;USAGE&lt;/code&gt; (참조 &lt;a href=&quot;#USAGE&quot;&gt;사용량&lt;/a&gt; 의) &lt;var&gt;identifier-1&lt;/var&gt; 이어야 &lt;code&gt;INDEX&lt;/code&gt; , &lt;code&gt;POINTER&lt;/code&gt; 또는 &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41c26ab5dbbc0eb9bd06b5afba543c2237217114" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;var&gt;program-pointer-1&lt;/var&gt; must be &lt;code&gt;PROGRAM-POINTER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;USAGE&lt;/code&gt; (참조 &lt;a href=&quot;#USAGE&quot;&gt;사용&lt;/a&gt; 의) &lt;var&gt;program-pointer-1&lt;/var&gt; 해야 &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c18d4ce046d3d6585620f3fe814d4778d56a568" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USAGE&lt;/code&gt; clause defines the format that will be used to store the value of a data item.</source>
          <target state="translated">&lt;code&gt;USAGE&lt;/code&gt; 절은 데이터 항목의 값을 저장하는 데 사용되는 형식을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6a2096ffcb1cb83e9c9fb2e07abfc1e5f595acb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USAGE&lt;/code&gt; specifications &lt;code&gt;FLOAT-DECIMAL-16&lt;/code&gt; and &lt;code&gt;FLOAT-DECIMAL-34&lt;/code&gt; will encode data using IEEE 754</source>
          <target state="translated">&lt;code&gt;USAGE&lt;/code&gt; 의 사양 &lt;code&gt;FLOAT-DECIMAL-16&lt;/code&gt; 및 &lt;code&gt;FLOAT-DECIMAL-34&lt;/code&gt; IEEE 754를 사용 의지 인코딩 데이터</target>
        </trans-unit>
        <trans-unit id="3c1833c2d1d0cb9ce3a6b29c48d909bd6fe7e469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USAGE&lt;/code&gt; specifications &lt;code&gt;FLOAT-LONG&lt;/code&gt; and &lt;code&gt;FLOAT-SHORT&lt;/code&gt; use the IEEE 754</source>
          <target state="translated">&lt;code&gt;USAGE&lt;/code&gt; 사양 &lt;code&gt;FLOAT-LONG&lt;/code&gt; 및 &lt;code&gt;FLOAT-SHORT&lt;/code&gt; 이 는 IEEE 754 사용</target>
        </trans-unit>
        <trans-unit id="c33165bb6757595f2ee0c17472c96a92e8050dd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USING&lt;/code&gt; clause defines the arguments that will be passed to a GnuCOBOL program which is serving as a subprogram.</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 절은 서브 역할을하는 GnuCOBOL 프로그램에 전달 될 인수를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1d1b8d57af22e624d244eb40439e2765793980f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VALUE&lt;/code&gt; clause is ignored on &lt;code&gt;EXTERNAL&lt;/code&gt; (see &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt;) data items or on any data items defines as subordinate to an &lt;code&gt;EXTERNAL&lt;/code&gt; data item.</source>
          <target state="translated">&lt;code&gt;VALUE&lt;/code&gt; 의 절은 무시됩니다 &lt;code&gt;EXTERNAL&lt;/code&gt; (참조 &lt;a href=&quot;#EXTERNAL&quot;&gt;외부를&lt;/a&gt; ) 데이터 항목 또는 종속 등의 데이터 항목을 정의에 &lt;code&gt;EXTERNAL&lt;/code&gt; 데이터 항목.</target>
        </trans-unit>
        <trans-unit id="596c341f46f695fb0e346f7066a5ecd6a06dc48d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VALUE&lt;/code&gt; clause is used to define condition names or to assign values (at compilation time) to data items.</source>
          <target state="translated">&lt;code&gt;VALUE&lt;/code&gt; 의 절은 조건 이름을 정의하거나 데이터 항목 (컴파일 시간) 값을 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7ffa332b486929bfa14f114a094f598eda466113" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VARYING&lt;/code&gt; clause, available on both formats of the &lt;code&gt;PERFORM&lt;/code&gt; statement, is a looping mechanism that allows for the specification of one or more numeric data items that will be initialized to a programmer-specified value and automatically incremented by another programmer-specified value after each loop iteration.</source>
          <target state="translated">&lt;code&gt;PERFORM&lt;/code&gt; 문의 두 형식에서 사용할 수 있는 &lt;code&gt;VARYING&lt;/code&gt; 절 은 프로그래머가 지정한 값으로 초기화되고 각 후 다른 프로그래머가 지정한 값에 의해 자동으로 증가되는 하나 이상의 숫자 데이터 항목을 지정할 수있는 루핑 메커니즘입니다. 루프 반복.</target>
        </trans-unit>
        <trans-unit id="99dba926c33c2c9bd35a8f691508b7072e63519c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHEN OTHER&lt;/code&gt; clause&amp;rsquo;s &lt;var&gt;imperative-statement-other&lt;/var&gt; will be executed, if such a clause was coded.</source>
          <target state="translated">&lt;code&gt;WHEN OTHER&lt;/code&gt; 절의 &lt;var&gt;imperative-statement-other&lt;/var&gt; 실행됩니다, 같은 절은 코딩 된 경우.</target>
        </trans-unit>
        <trans-unit id="ac95542cc807a7d7c62a3315f3683961b5f9f430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHEN-COMPILED&lt;/code&gt; intrinsic function, not to be confused with the &lt;code&gt;WHEN-COMPILED&lt;/code&gt; (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) special register, returns the date and time the program was compiled, in &lt;small&gt;ASCII&lt;/small&gt;.</source>
          <target state="translated">&lt;code&gt;WHEN-COMPILED&lt;/code&gt; 고유 기능의와 혼동하지 &lt;code&gt;WHEN-COMPILED&lt;/code&gt; 합니다 ( &lt;a href=&quot;#Special-Registers&quot;&gt;특수 레지스터&lt;/a&gt; ) 특수 레지스터에, 프로그램이 컴파일 된 날짜와 시간을 반환 &lt;small&gt;ASCII&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="a2692e9a6fd8afa60f5da38541893576092afe4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WITH FILLER&lt;/code&gt;, &lt;code&gt;REPLACING&lt;/code&gt; and &lt;code&gt;DEFAULT&lt;/code&gt; clauses are meaningful only if &lt;var&gt;identifier-1&lt;/var&gt; is a group item. They are accepted if it&amp;rsquo;s an elementary item, but will serve no purpose. The &lt;code&gt;VALUE&lt;/code&gt; clause is meaningful in both cases.</source>
          <target state="translated">&lt;code&gt;WITH FILLER&lt;/code&gt; 는 , &lt;code&gt;REPLACING&lt;/code&gt; 및 &lt;code&gt;DEFAULT&lt;/code&gt; 의 경우에만 절은 의미있는 &lt;var&gt;identifier-1&lt;/var&gt; 그룹 항목이다. 기본 항목 인 경우 허용되지만 목적은 없습니다. &lt;code&gt;VALUE&lt;/code&gt; 의 절은 두 경우 모두에서 의미가있다.</target>
        </trans-unit>
        <trans-unit id="47216d107c535d5236ea22d6402626881b9fd5f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WITH [ NO ] LOCK&lt;/code&gt; option is the only one available to &lt;code&gt;REWRITE&lt;/code&gt; or &lt;code&gt;WRITE&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;WITH [ NO ] LOCK&lt;/code&gt; 옵션에 유일하게 볼 수 있습니다 &lt;code&gt;REWRITE&lt;/code&gt; 또는 &lt;code&gt;WRITE&lt;/code&gt; 문.</target>
        </trans-unit>
        <trans-unit id="85da0471d0cb22d44e4a0a377a2f847b3fdc6b7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WRITE&lt;/code&gt; statement writes a new record to an open file.</source>
          <target state="translated">&lt;code&gt;WRITE&lt;/code&gt; 문은 열려있는 파일에 새 레코드를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="6fc35053fda790287224fffcbd93129625dfec5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;X&quot;E5&quot;&lt;/code&gt; routine will sound the PC &amp;ldquo;bell&amp;rdquo;. There are no arguments and no returned value.</source>
          <target state="translated">&lt;code&gt;X&quot;E5&quot;&lt;/code&gt; 루틴은 PC &quot;종&quot;을 울립니다. 인수와 반환 값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="27d33c089dc67ef883e9d335b4edcd68b96c3697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;longoptions&lt;/code&gt; are defined as a table of records with &lt;code&gt;oname&lt;/code&gt;, &lt;code&gt;has-value&lt;/code&gt;, &lt;code&gt;valpoint&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt;.&lt;a href=&quot;#FOOT5&quot; name=&quot;DOCF5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;longoptions&lt;/code&gt; 는 레코드의 테이블로 정의 &lt;code&gt;oname&lt;/code&gt; , &lt;code&gt;has-value&lt;/code&gt; , &lt;code&gt;valpoint&lt;/code&gt; 및 &lt;code&gt;val&lt;/code&gt; . &lt;a href=&quot;#FOOT5&quot; name=&quot;DOCF5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77cf1da087f38396c520f01bcc2781cf90e10b62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shortoptions&lt;/code&gt; are written down as an alphanumeric field (i.e., a string with arbitrary size) as follows:</source>
          <target state="translated">&lt;code&gt;shortoptions&lt;/code&gt; 는 영숫자 필드 (즉, 임의의 크기의 문자열)은 다음과 같이 써있다 :</target>
        </trans-unit>
        <trans-unit id="f511e5d705667c2720c560382ae0c7393721813a" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;Selection-Object&lt;/var&gt; is  &lt;code&gt;ANY&lt;/code&gt;</source>
          <target state="translated">&lt;var&gt;Selection-Object&lt;/var&gt; 입니다 &lt;code&gt;ANY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11b40923d6d54d1c4c6cbdb973b925ea52f414ff" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;access-mode&lt;/var&gt; argument is a numeric literal or data item with a &lt;code&gt;PIC X USAGE COMP-X&lt;/code&gt; (or &lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt;) definition; it specifies how you wish to use the file, as follows:</source>
          <target state="translated">&lt;var&gt;access-mode&lt;/var&gt; 인수는 숫자와 문자 또는 데이터 아이템 인 &lt;code&gt;PIC X USAGE COMP-X&lt;/code&gt; (또는 &lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; ) 정의; 다음과 같이 파일 사용 방법을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2205dc428ec5b3ded68997dd1567786471e3668c" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;angle&lt;/var&gt; is assumed to be a value expressed in radians. If you need to determine the sine of an angle measured in degrees, you first need to convert that angle to radians as follows:</source>
          <target state="translated">&lt;var&gt;angle&lt;/var&gt; 라디안 값으로 가정된다. 도 단위로 측정 된 각도의 사인을 결정해야하는 경우 먼저 해당 각도를 다음과 같이 라디안으로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5270a4fe56b7344f837389fff2a9771a3e442b9" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;angle&lt;/var&gt; is assumed to be a value expressed in radians. If you need to determine the tangent of an angle measured in degrees, you first need to convert that angle to radians as follows:</source>
          <target state="translated">&lt;var&gt;angle&lt;/var&gt; 라디안 값으로 가정된다. 각도로 측정 된 각도의 탄젠트를 결정해야하는 경우 먼저 해당 각도를 다음과 같이 라디안으로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="901ce8ef78afd9d6f72ef30357c325a497ff3618" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;byte-length&lt;/var&gt; argument may be a numeric literal or data item, and must be passed using &lt;code&gt;BY VALUE&lt;/code&gt; (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;byte-length&lt;/var&gt; 인수는 숫자 문자 또는 데이터 항목 수 있으며, 사용하여 전달해야 &lt;code&gt;BY VALUE&lt;/code&gt; 을 (참조 &lt;a href=&quot;#CALL&quot;&gt;CALL을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3c9c3e5873628317bc930edb0fb053d86f94b0d" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;byte-length&lt;/var&gt; argument may be a numeric literal or data item, and must be specified using &lt;code&gt;BY VALUE&lt;/code&gt; (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;byte-length&lt;/var&gt; 인수는 숫자 문자 또는 데이터 항목 수 있으며, 사용하여 지정해야 &lt;code&gt;BY VALUE&lt;/code&gt; 을 (참조 &lt;a href=&quot;#CALL&quot;&gt;CALL을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8d36390be65e6a3462e87daf97daa83d51ed71a8" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;byte&lt;/var&gt; data item need be only a single byte in size. If it is longer, the excess will be unaffected by this subroutine.</source>
          <target state="translated">&lt;var&gt;byte&lt;/var&gt; 데이터 항목의 크기는 단일 바이트가 될 필요는 없다. 더 길면 초과분은이 서브 루틴의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2ecf759b411cb1676aa0c73270f1687932572b4" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;class-name-1&lt;/var&gt; option allows you to test for a user-defined class. Here&amp;rsquo;s an example. First, assume the following &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) definition of the user-defined class &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;class-name-1&lt;/var&gt; 옵션을 사용하면 사용자 정의 클래스를 테스트 할 수 있습니다. 여기에 예가 있습니다. 먼저, 다음과 같은 가정 &lt;code&gt;SPECIAL-NAMES&lt;/code&gt; (참조 &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-이름을&lt;/a&gt; 사용자 정의 클래스 '의 정의)</target>
        </trans-unit>
        <trans-unit id="7d513e9b3cd8f5bd6a87248e659603e2cea996ea" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;computer-name&lt;/var&gt;, if specified, must immediately follow the &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; paragraph name. The remaining clauses may be coded in any sequence.</source>
          <target state="translated">&lt;var&gt;computer-name&lt;/var&gt; 지정된 경우, 즉시 따라야 &lt;code&gt;OBJECT-COMPUTER&lt;/code&gt; 단락 이름을. 나머지 절은 임의의 순서로 코딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eaf20f314711e954f73e16ab769d64605ec0fcb" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;conditional-expression-1&lt;/var&gt; is evaluated. This comparison of the key(s) against the target literal/identifier values will have one of three possible outcomes:</source>
          <target state="translated">&lt;var&gt;conditional-expression-1&lt;/var&gt; 평가된다. 대상 리터럴 / 식별자 값과 키를 비교하면 다음 세 가지 결과 중 하나가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="61095170d5af90d1d299c26353ff9c95dc0f0301" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;conditional-expression-1&lt;/var&gt; should involve the &lt;code&gt;KEY&lt;/code&gt; field(s), using the search index (the table&amp;rsquo;s &lt;code&gt;INDEXED BY&lt;/code&gt; index name) as a subscript.</source>
          <target state="translated">&lt;var&gt;conditional-expression-1&lt;/var&gt; 포함해야 &lt;code&gt;KEY&lt;/code&gt; 의 검색 인덱스 (테이블의 사용, 필드 (들) &lt;code&gt;INDEXED BY&lt;/code&gt; 첨자로 인덱스 이름).</target>
        </trans-unit>
        <trans-unit id="800232aa41a7857269992b51a2d479ea8ce722f2" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;constant-name-1&lt;/var&gt; name may not be referenced on a CDF directive.</source>
          <target state="translated">&lt;var&gt;constant-name-1&lt;/var&gt; 이름은 CDF 지시문에서 참조 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="281acb9e3a5a3d751e2b15d8cd5b775fe0f1c49f" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;convert-length&lt;/var&gt; argument must be specified &lt;code&gt;BY VALUE&lt;/code&gt; (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;). Any characters in &lt;var&gt;data-item&lt;/var&gt; after the &lt;var&gt;convert-length&lt;/var&gt; point will remain unchanged.</source>
          <target state="translated">&lt;var&gt;convert-length&lt;/var&gt; 인수를 지정해야합니다 &lt;code&gt;BY VALUE&lt;/code&gt; (참조 &lt;a href=&quot;#CALL&quot;&gt;CALL을&lt;/a&gt; ). &lt;var&gt;convert-length&lt;/var&gt; 지점 이후의 &lt;var&gt;data-item&lt;/var&gt; 모든 문자 는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da856fa208a62953345e24587b9a741ede6f9527" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;convert-length&lt;/var&gt; argument must be specified &lt;code&gt;BY VALUE&lt;/code&gt; (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;). It specifies how many (leading) characters in data-item will be converted &amp;mdash; any characters after that will remain unchanged.</source>
          <target state="translated">&lt;var&gt;convert-length&lt;/var&gt; 인수를 지정해야합니다 &lt;code&gt;BY VALUE&lt;/code&gt; (참조 &lt;a href=&quot;#CALL&quot;&gt;CALL을&lt;/a&gt; ). 변환 될 데이터 항목의 (선행) 문자 수를 지정합니다. 그 이후의 모든 문자는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3986c4504a570aea53d3f43d3702291920d292da" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;file-name-1&lt;/var&gt; file</source>
          <target state="translated">&lt;var&gt;file-name-1&lt;/var&gt; 파일</target>
        </trans-unit>
        <trans-unit id="572c2c83ced8a3f8514017a48a5295e99fdecad6" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;file-name-1&lt;/var&gt; file cannot be a sort/merge work file (a file described using a &lt;code&gt;SD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;)).</source>
          <target state="translated">&lt;var&gt;file-name-1&lt;/var&gt; 파일이 정렬 / 병합 작업 파일이 될 수 없습니다 (파일은 사용하여 설명 &lt;code&gt;SD&lt;/code&gt; 를 (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; )).</target>
        </trans-unit>
        <trans-unit id="8b5f60ccabfb27cc91b0443697e2f43d1ce418fb" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;file-name-1&lt;/var&gt; file must currently be open for &lt;code&gt;INPUT&lt;/code&gt; (see &lt;a href=&quot;#File-OPEN-Modes&quot;&gt;File OPEN Modes&lt;/a&gt;) or &lt;code&gt;I-O&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;file-name-1&lt;/var&gt; 파일은 현재 열려 있어야합니다 &lt;code&gt;INPUT&lt;/code&gt; (참조 &lt;a href=&quot;#File-OPEN-Modes&quot;&gt;파일 열기 모드&lt;/a&gt; ) 또는 &lt;code&gt;I-O&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4743e319647379e3bb5ca8667bfc77117af40928" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;file-name-1&lt;/var&gt; value that you specify will be the name by which you will reference the file within your program. This name should be formed according to the rules for user-defined names (see &lt;a href=&quot;#User_002dDefined-Words&quot;&gt;User-Defined Words&lt;/a&gt;).</source>
          <target state="translated">지정하는 &lt;var&gt;file-name-1&lt;/var&gt; 값은 프로그램 내에서 파일을 참조하는 이름이됩니다. 이 이름은 사용자 정의 이름에 대한 규칙에 따라 형성되어야합니다 ( &lt;a href=&quot;#User_002dDefined-Words&quot;&gt;사용자 정의 단어&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b9a9161ce478b10b200fe0daeeec8cfe8fc83344" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;file-path&lt;/var&gt; argument is an alphanumeric literal or data-item.</source>
          <target state="translated">&lt;var&gt;file-path&lt;/var&gt; 인수는 영숫자 문자 또는 데이터 항목입니다.</target>
        </trans-unit>
        <trans-unit id="797b9ddc35e00fc5db9bfd85057618a87509b3f2" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;format&lt;/var&gt; argument is a string (a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or an alphanumeric literal) documenting the format of &lt;var&gt;time&lt;/var&gt; using &lt;code&gt;&lt;var&gt;hh&lt;/var&gt;&lt;/code&gt;, &lt;code&gt;&lt;var&gt;mm&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;ss&lt;/var&gt;&lt;/code&gt; to denote where the respective time information can be found. Any other characters found in &lt;var&gt;format&lt;/var&gt; represent character positions that will be ignored. For example, a format of &lt;code&gt;hhmmss&lt;/code&gt; indicates that &lt;var&gt;time&lt;/var&gt; will be treated as a six-digit string value where the first two characters are the number of hours, the next two represent minutes and the last two represent seconds. A &lt;var&gt;format&lt;/var&gt; of &lt;code&gt;hh:mm:ss&lt;/code&gt;, however, describes &lt;var&gt;time&lt;/var&gt; as an eight-character string where characters 3 and 6 will be ignored.</source>
          <target state="translated">&lt;var&gt;format&lt;/var&gt; 인수는 문자열 (그룹 항목이다 &lt;code&gt;USAGE DISPLAY&lt;/code&gt; 형식 문서화 기본 항목 또는 영숫자 문자) &lt;var&gt;time&lt;/var&gt; 이용하여 &lt;code&gt;&lt;var&gt;hh&lt;/var&gt;&lt;/code&gt; , &lt;code&gt;&lt;var&gt;mm&lt;/var&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;ss&lt;/var&gt;&lt;/code&gt; 각각의 시간 정보를 찾을 수 나타내는데. &lt;var&gt;format&lt;/var&gt; 다른 문자 는 무시 될 문자 위치를 나타냅니다. 예를 들어, &lt;code&gt;hhmmss&lt;/code&gt; 형식은 &lt;var&gt;time&lt;/var&gt; 이 6 자리 문자열 값으로 처리됨을 나타냅니다. 여기서 처음 두 문자는 시간, 다음 두 문자는 분, 마지막 두 문자는 초를 나타냅니다. &lt;var&gt;format&lt;/var&gt; 의 &lt;code&gt;hh:mm:ss&lt;/code&gt; 그러나 &lt;var&gt;time&lt;/var&gt; 은 문자 3과 6이 무시되는 8 자 문자열로 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="d092542a020f4a618ff8c67f83fdbbc4a6950410" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;from-n&lt;/var&gt; strings must match sequences in &lt;var&gt;string&lt;/var&gt; exactly with regard to value and case.</source>
          <target state="translated">&lt;var&gt;from-n&lt;/var&gt; 문자열의 순서와 일치해야합니다 &lt;var&gt;string&lt;/var&gt; 정확하게 값과 사건에 관하여.</target>
        </trans-unit>
        <trans-unit id="472beddd6dc18263e00bae5853af78db51cea3a0" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;function-code&lt;/var&gt; argument must be either a numeric literal or a one-byte binary numeric data item (&lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; is recommended).</source>
          <target state="translated">&lt;var&gt;function-code&lt;/var&gt; 인수가 숫자 문자 또는 1 바이트 이진 숫자 데이터 항목이어야합니다 ( &lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; 은 권장).</target>
        </trans-unit>
        <trans-unit id="43fbe2a9395eb2bbb3878a7384ba3760d857d847" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;function-prototype-name-1&lt;/var&gt; option is required to specify the name of a user-defined function your program will be using. Optionally, should you desire, you may specify an alias name by which you will reference that user-defined function. Should you wish, you may also use the &lt;code&gt;AS&lt;/code&gt; clause to provide an alias name for a built-in intrinsic function.</source>
          <target state="translated">&lt;var&gt;function-prototype-name-1&lt;/var&gt; 옵션은 프로그램이 사용하게 될 사용자 정의 함수의 이름을 지정해야합니다. 선택적으로 원하는 경우 해당 사용자 정의 함수를 참조 할 별칭 이름을 지정할 수 있습니다. 원하는 경우 &lt;code&gt;AS&lt;/code&gt; 절을 사용하여 내장 내장 함수의 별칭 이름을 제공 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e49869a42d7054b923b049999b34b07652765d3f" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;function&lt;/var&gt; argument must be a numeric literal or a 32-bit binary data item (&lt;code&gt;USAGE BINARY-LONG&lt;/code&gt;, for example) with a value of 0 or 1. A value of 0 means that you will be registering (&amp;ldquo;installing&amp;rdquo;) an error procedure while a value of 1 indicates you&amp;rsquo;re de-registering (&amp;ldquo;uninstalling&amp;rdquo;) a previously-installed error procedure.</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; 인수 숫자 문자 나 (32 비트 이진 데이터 항목이어야 &lt;code&gt;USAGE BINARY-LONG&lt;/code&gt; 는 에러 ( &quot;설치&quot;) 가입되도록 0 수단으로 0 또는 1. 값의 값을, 예를 들면,) 프로 시저 값이 1이면 이전에 설치 한 오류 프로 시저를 등록 취소 ( &quot;제거&quot;)하고 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="911cbf975d5b992e3ce395cacf85c031d7661302" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;function&lt;/var&gt; argument must be a numeric literal or a 32-bit binary data item (&lt;code&gt;USAGE BINARY-LONG&lt;/code&gt;, for example) with a value of 0 or 1. A value of 0 means that you will be registering (&amp;ldquo;installing&amp;rdquo;) an exit procedure while a value of 1 indicates you&amp;rsquo;re deregistering (&amp;ldquo;uninstalling&amp;rdquo;) a previously-installed exit procedure.</source>
          <target state="translated">&lt;var&gt;function&lt;/var&gt; 인수 숫자 문자 나 (32 비트 이진 데이터 항목이어야 &lt;code&gt;USAGE BINARY-LONG&lt;/code&gt; 가 이탈 ( &quot;설치&quot;) 가입되도록 0 수단으로 0 또는 1. 값의 값을, 예를 들면,) 프로 시저 값이 1이면 이전에 설치된 종료 프로 시저를 등록 취소 ( &quot;제거&quot;)한다는 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e3e435020acf48ad644c3a5f1cfaf2b6b0d589c4" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;handle&lt;/var&gt; argument (&lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt;) must have been populated by a prior call to &lt;code&gt;CBL_OPEN_FILE&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILE&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;handle&lt;/var&gt; 인수 ( &lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt; 에 대한 이전 호출에 의해 채워되어 있어야합니다) &lt;code&gt;CBL_OPEN_FILE&lt;/code&gt; 가 내장 된 시스템의 서브 루틴 (참조 &lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILE을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ecbba77fd5cb71b3a6b49b3edb3cfa41daf19f8b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;handle&lt;/var&gt; argument (&lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt;) must have been populated by a prior call to CBL_OPEN_FILE. The offset argument (&lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt;) defines the location in the file of the first byte to be written to. The first byte of a file is byte offset 0.</source>
          <target state="translated">&lt;var&gt;handle&lt;/var&gt; 인수 ( &lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt; ) CBL_OPEN_FILE에 대한 이전 호출에 의해 채워되어 있어야합니다. 오프셋 인수 ( &lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt; )는 기록 될 첫 번째 바이트의 파일 위치를 정의합니다. 파일의 첫 번째 바이트는 바이트 오프셋 0입니다.</target>
        </trans-unit>
        <trans-unit id="443c7a716f3e9bf8a74949d47a4eb7551d46f5db" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;identifier-1&lt;/var&gt; &amp;hellip; field(s) must be defined as field(s) within a record of &lt;var&gt;sort-file-1&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; ... 필드 (들)의 기록에서 필드 (들)로 정의해야합니다 &lt;var&gt;sort-file-1&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c886493807dffa3621ced67e0f4509ccb038fc84" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; data items, along with all data items defined between those two data items in the program source, must all be contained within the same 01-level record description.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; 및 &lt;var&gt;identifier-2&lt;/var&gt; 데이터 항목은 프로그램 소스의 두 데이터 항목 사이에서 정의 된 모든 데이터 아이템과 함께, 모두 같은 01 레벨의 기록 정보에 포함되어야한다.</target>
        </trans-unit>
        <trans-unit id="70fc49f77cda24d6a91a4f0ea31a2b1330a9de68" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;identifier-1&lt;/var&gt; data item should be defined as a &lt;code&gt;USAGE BINARY-LONG&lt;/code&gt; data item.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; 데이터 항목이 정의되어야 &lt;code&gt;USAGE BINARY-LONG&lt;/code&gt; 데이터 항목.</target>
        </trans-unit>
        <trans-unit id="db5a850bd622530b52936aaf09042beac407c234" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;identifier-3&lt;/var&gt;) is neither automatically initialized (to spaces or any other value) at the start of a &lt;code&gt;STRING&lt;/code&gt; statement nor will it be space-filled should the total number of sending item characters copied into it be less than its size. You may explicitly initialize &lt;var&gt;identifier-3&lt;/var&gt; yourself via the &lt;code&gt;INITIALIZE&lt;/code&gt; (see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;) or &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) statements before executing the &lt;code&gt;STRING&lt;/code&gt; if you wish.</source>
          <target state="translated">&lt;var&gt;identifier-3&lt;/var&gt; ) 어느 쪽도 자동의 시작에 공백이나 다른 값)에 (초기화되지 &lt;code&gt;STRING&lt;/code&gt; 의 문 않으며 공간을 채워 그것으로 복사 된 항목 문자를 보내는 총 수의 크기보다 작아야 할 것이다. 원하는 경우 &lt;code&gt;STRING&lt;/code&gt; 을 실행하기 전에 &lt;code&gt;INITIALIZE&lt;/code&gt; ( &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt; 참조 ) 또는 &lt;code&gt;MOVE&lt;/code&gt; ( &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt; 참조 ) 문을 통해 직접 &lt;var&gt;identifier-3&lt;/var&gt; 명시 적으로 초기화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="99874de76e0bd7f39af23458b03bb21c46759700" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;imperative-statement-1&lt;/var&gt; (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;) immediately following the &amp;rsquo;</source>
          <target state="translated">' &lt;var&gt;imperative-statement-1&lt;/var&gt; '바로 뒤에 오는 &lt;a href=&quot;#Imperative-Statement&quot;&gt;명령문 &lt;/a&gt;-1 ( 명령문 참조 )</target>
        </trans-unit>
        <trans-unit id="07a45552b8fd5f21a40101211434d49167b8a838" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;imperative-statement-n&lt;/var&gt; (see &lt;a href=&quot;#Imperative-Statement&quot;&gt;Imperative Statement&lt;/a&gt;) specified on the &lt;code&gt;WHEN&lt;/code&gt; clause whose &lt;var&gt;conditional-expression-n&lt;/var&gt; evaluated to &lt;code&gt;TRUE&lt;/code&gt; will be executed; after that, the search will be considered complete and control will fall into the first executable statement following the &lt;code&gt;SEARCH&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;imperative-statement-n&lt;/var&gt; (참조 &lt;a href=&quot;#Imperative-Statement&quot;&gt;명령형 문&lt;/a&gt; )을 지정 &lt;code&gt;WHEN&lt;/code&gt; 누구 절 &lt;var&gt;conditional-expression-n&lt;/var&gt; 평가에 &lt;code&gt;TRUE&lt;/code&gt; 실행됩니다; 그 후 검색이 완료된 것으로 간주되고 제어는 &lt;code&gt;SEARCH&lt;/code&gt; 다음에 오는 첫 번째 실행 가능 명령문에 속합니다 .</target>
        </trans-unit>
        <trans-unit id="de75e3db665bf1382b275705fe23326e8c7887dc" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;item-1&lt;/var&gt; argument must be a data item. The length of &lt;var&gt;item-1&lt;/var&gt; must be at least 8*&lt;var&gt;byte-length&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;item-1&lt;/var&gt; 인수는 데이터 항목이어야합니다. &lt;var&gt;item-1&lt;/var&gt; 의 길이는 8 * &lt;var&gt;byte-length&lt;/var&gt; 이상이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d40242930987312c04ccdae67cd8918694a38073" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;length&lt;/var&gt; argument must be specified &lt;code&gt;BY VALUE&lt;/code&gt;. The &lt;var&gt;buffer&lt;/var&gt; argument must be specified &lt;code&gt;BY REFERENCE&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;length&lt;/var&gt; 인수를 지정해야합니다 &lt;code&gt;BY VALUE&lt;/code&gt; . &lt;var&gt;buffer&lt;/var&gt; 인수를 지정해야합니다 &lt;code&gt;BY REFERENCE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cb40fa639997a1897ad859fe7e7446a07eabc45" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt; value specified must name a primary entry-point name (&lt;code&gt;PROGRAM-ID&lt;/code&gt; of a subroutine or &lt;code&gt;FUNCTION-ID&lt;/code&gt; of a user-defined function) or an alternate entry-point defined via an &lt;code&gt;ENTRY&lt;/code&gt; statement within a subprogram.</source>
          <target state="translated">지정된 &lt;var&gt;literal-1&lt;/var&gt; 또는 &lt;var&gt;identifier-1&lt;/var&gt; 값은 1 차 진입 점 이름 ( 서브 루틴의 &lt;code&gt;PROGRAM-ID&lt;/code&gt; 또는 사용자 정의 함수의 &lt;code&gt;FUNCTION-ID&lt;/code&gt; ) 또는 서브 프로그램 내 &lt;code&gt;ENTRY&lt;/code&gt; 문을 통해 정의 된 대체 진입 점을 지정해야합니다. .</target>
        </trans-unit>
        <trans-unit id="c7c44e51a53da5fc6e331df1db0a182268b5f1b9" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;literal-1&lt;/var&gt; value will specify the entry-point name of the subroutine. It must be specified exactly on &lt;code&gt;CALL&lt;/code&gt; statements (with regard to the use of upper- and lower-case letters) as it is specified on the &lt;code&gt;ENTRY&lt;/code&gt; statement.</source>
          <target state="translated">&lt;var&gt;literal-1&lt;/var&gt; 값은 서브 루틴의 엔트리 포인트 이름을 지정합니다. &lt;code&gt;ENTRY&lt;/code&gt; 문 에 지정된대로 &lt;code&gt;CALL&lt;/code&gt; 문 (대문자 및 소문자 사용과 관련하여) 에 정확히 지정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a12e306801ac0519853f89ec04420837604f389d" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;literal-3&lt;/var&gt; clause displays the specified text on the &lt;code&gt;SYSOUT&lt;/code&gt;/&lt;code&gt;STDOUT&lt;/code&gt; device, waits for the user to press the Enter key and then &amp;mdash; once the key has been pressed &amp;mdash; allows the program to continue execution.</source>
          <target state="translated">&lt;var&gt;literal-3&lt;/var&gt; 상의 지정된 텍스트 절 표시 &lt;code&gt;SYSOUT&lt;/code&gt; / &lt;code&gt;STDOUT&lt;/code&gt; 의 키를 누를 된 후 - - 장치가 사용자에 대한 대기가 다음 키와 Enter 키를 누릅니다 프로그램이 실행을 계속 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c360d47eef8a8fd77145bbcc2e0eca625cfd7fd2" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;literal-3&lt;/var&gt; or &lt;var&gt;identifier-4&lt;/var&gt; value, if specified, must be a four- or six-digit value with the 1&lt;sup&gt;st&lt;/sup&gt; half of the number indicating the line where the cursor should be positioned and the second half indicating the column. You may code only one of each clause on any &lt;code&gt;ACCEPT&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;literal-3&lt;/var&gt; 또는 &lt;var&gt;identifier-4&lt;/var&gt; 값이 지정되면, 1을 가진 4 ~ 6 자리 값이어야 &lt;sup&gt;명세서&lt;/sup&gt; 커서가 위치되어야하는 라인 및 컬럼을 나타내는 후반을 나타내는 수의 절반. &lt;code&gt;ACCEPT&lt;/code&gt; 에 각 절 중 하나만 코딩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93d20454be2f6308a77d75b6d78525f47e9fbd39" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;literal-n&lt;/var&gt; values are either integers or alphanumeric quoted characters. These represent a single character in the &lt;code&gt;NATIVE&lt;/code&gt; character set, either by its actual text value (alphanumeric quoted character) or by ordinal position in the &lt;code&gt;NATIVE&lt;/code&gt; character set (integer),</source>
          <target state="translated">&lt;var&gt;literal-n&lt;/var&gt; 값은 하나의 정수 또는 숫자 인용 문자입니다. 이들은 단일 문자를 나타내는 &lt;code&gt;NATIVE&lt;/code&gt; 실제 텍스트 값 (인용 영숫자 문자)에 의해 또는 서수의 위치로 인해서, 문자 세트 &lt;code&gt;NATIVE&lt;/code&gt; , 문자 세트 (정수)</target>
        </trans-unit>
        <trans-unit id="b9a89d1058c1ef50c4b3e517781b546ec037a3c9" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;mnemonic-name-1&lt;/var&gt; /  &lt;code&gt;STATIC&lt;/code&gt; /  &lt;code&gt;STDCALL&lt;/code&gt; option, if used, affects the linkage conventions that will be used to the subroutine being called, as follows:</source>
          <target state="translated">&lt;var&gt;mnemonic-name-1&lt;/var&gt; / &lt;code&gt;STATIC&lt;/code&gt; / &lt;code&gt;STDCALL&lt;/code&gt; 의 다음과 같은 옵션을 사용할 경우, 호출되는 서브 루틴에 사용되는 연결 규칙에 영향을 미칩니다</target>
        </trans-unit>
        <trans-unit id="284c48a166b8a171ca6ea5638edd1b31dab7d32e" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;nanoseconds-to-sleep&lt;/var&gt; argument is a numeric literal or data item.</source>
          <target state="translated">&lt;var&gt;nanoseconds-to-sleep&lt;/var&gt; 인수는 숫자 문자 또는 데이터 항목입니다.</target>
        </trans-unit>
        <trans-unit id="3568b6711a3a29378097e48122bf4b7ca8026703" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;nbytes&lt;/var&gt; argument (&lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt;) specifies how many bytes (maximum) will be read. If the &lt;var&gt;flag&lt;/var&gt; argument is specified as 128, the size of the file (in bytes) will be returned into the file offset argument (argument 2) upon completion. Not all operating system/GnuCOBOL environments may be able to retrieve file sizes in such cases, a value of zero will be returned. The only other valid value for flags is 0. This argument may be specified either as a numeric literal or as a &lt;code&gt;PIC X USAGE COMP-X&lt;/code&gt; data item.</source>
          <target state="translated">&lt;var&gt;nbytes&lt;/var&gt; 의 인수 ( &lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt; 바이트 (최대) 읽기 방법)을 지정합니다. 경우] &lt;var&gt;flag&lt;/var&gt; 인수 (128)로서 지정된다 (바이트)의 파일 크기가 완료되면 파일 오프셋 인자 (인수 2)로 반환된다. 이러한 경우 모든 운영 체제 / GnuCOBOL 환경에서 파일 크기를 검색 할 수있는 것은 아니며 0 값이 반환됩니다. 플래그에 대한 유일한 다른 유효한 값은 0입니다.이 인수는 숫자 리터럴 또는 &lt;code&gt;PIC X USAGE COMP-X&lt;/code&gt; 데이터 항목 으로 지정 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5aee0c8e317032439f4017ac39430d0f3c99ee4" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;nbytes&lt;/var&gt; argument (&lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt;) specifies how many bytes (maximum) will be written.</source>
          <target state="translated">&lt;var&gt;nbytes&lt;/var&gt; 의 인수 ( &lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt; 바이트 (최대)를 작성하는 방법)을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="fc3fc48dcf33a3f3fa36cb869e9f197c90446505" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;offset&lt;/var&gt; argument (&lt;code&gt;PIC X(8) USAGE COMP-X&lt;/code&gt;) defines the location in the file of the first byte to be read. The first byte of a file is byte offset 0.</source>
          <target state="translated">&lt;var&gt;offset&lt;/var&gt; 인자 ( &lt;code&gt;PIC X(8) USAGE COMP-X&lt;/code&gt; ) 첫번째 바이트의 파일의 위치가 판독 될 정의한다. 파일의 첫 번째 바이트는 바이트 오프셋 0입니다.</target>
        </trans-unit>
        <trans-unit id="1f13b615de2f49b625c453f4be9fea8562ba2e56" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;program-pointer&lt;/var&gt; must be a data item with a &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; containing the address of your error procedure. This item should be given a value using the &lt;code&gt;SET Program-Pointer&lt;/code&gt; statement (see &lt;a href=&quot;#SET-Program_002dPointer&quot;&gt;SET Program-Pointer&lt;/a&gt;). If the error procedure is written in GnuCOBOL, it must be a subroutine, not a user-defined function.</source>
          <target state="translated">&lt;var&gt;program-pointer&lt;/var&gt; 기호가있는 데이터 항목이어야합니다 &lt;code&gt;USAGE&lt;/code&gt; (참조 &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; 의) &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; 하여 오류 프로 시저의 주소를 포함합니다. 이 항목은 &lt;code&gt;SET Program-Pointer&lt;/code&gt; 문을 사용하여 값을 제공해야합니다 ( &lt;a href=&quot;#SET-Program_002dPointer&quot;&gt;SET Program-Pointer&lt;/a&gt; 참조 ). 오류 프로 시저가 GnuCOBOL로 작성된 경우 사용자 정의 함수가 아닌 서브 루틴이어야합니다.</target>
        </trans-unit>
        <trans-unit id="09f2c78a6cead1bcf78d53f99ae71ce070c7a5ff" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;program-pointer&lt;/var&gt; must be a data item with a &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; containing the address of your exit procedure.</source>
          <target state="translated">&lt;var&gt;program-pointer&lt;/var&gt; 기호가있는 데이터 항목이어야합니다 &lt;code&gt;USAGE&lt;/code&gt; (참조 &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; 의) &lt;code&gt;PROGRAM-POINTER&lt;/code&gt; 당신의 종료 프로 시저의 주소를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="14e37f83444e24ff1617e1c68659b57a59716f2d" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;record-name-1&lt;/var&gt; specified on the statement must be defined as an 01-level record subordinate to the File Description (&lt;code&gt;FD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;)) of a file that is currently open for &lt;code&gt;I-O&lt;/code&gt; (see &lt;a href=&quot;#File-OPEN-Modes&quot;&gt;File OPEN Modes&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;record-name-1&lt;/var&gt; 문에 지정이 파일 설명에 01 레벨의 기록 종속으로 정의되어야합니다 ( &lt;code&gt;FD&lt;/code&gt; (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; )) 현재 열려있는 파일의 &lt;code&gt;I-O&lt;/code&gt; (참조 &lt;a href=&quot;#File-OPEN-Modes&quot;&gt;파일 열기 모드&lt;/a&gt; ) .</target>
        </trans-unit>
        <trans-unit id="71a02d011821165ee6d95f413457bb03dc12d5d8" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;record-name-1&lt;/var&gt; specified on the statement must be defined as an 01-level record subordinate to the File Description (&lt;code&gt;FD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;)) of a file that is currently open for &lt;code&gt;OUTPUT&lt;/code&gt; (see &lt;a href=&quot;#File-OPEN-Modes&quot;&gt;File OPEN Modes&lt;/a&gt;), &lt;code&gt;EXTEND&lt;/code&gt; or &lt;code&gt;I-O&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;record-name-1&lt;/var&gt; 문에 지정이 파일 설명에 01 레벨의 기록 종속으로 정의되어야합니다 ( &lt;code&gt;FD&lt;/code&gt; (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; )) 현재 열려있는 파일의 &lt;code&gt;OUTPUT&lt;/code&gt; (참조 &lt;a href=&quot;#File-OPEN-Modes&quot;&gt;파일 OPEN 모드는&lt;/a&gt; ) , &lt;code&gt;EXTEND&lt;/code&gt; 또는 &lt;code&gt;I-O&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a60b29a377430c7181f42812d3807b193fbdd492" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;return-code&lt;/var&gt; argument must be a one-byte binary numeric data item (&lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; is recommended). It will receive a value of 0 if the operation was successful, 1 otherwise.</source>
          <target state="translated">그만큼 &lt;var&gt;return-code&lt;/var&gt; 인수가 1 바이트 이진 숫자 데이터 항목이어야합니다 ( &lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; 은 권장). 작업이 성공하면 값 0을, 그렇지 않으면 1을받습니다.</target>
        </trans-unit>
        <trans-unit id="b57aa27735ad56305ca61e83f2d9e91773227726" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;seed&lt;/var&gt; may be any form of literal or data item. If &lt;var&gt;seed&lt;/var&gt; is numeric, its numeric value will serve as the seed value. If &lt;var&gt;seed&lt;/var&gt; is alphanumeric, a value for it will be determined as if it were used as an argument to &lt;code&gt;NUMVAL&lt;/code&gt; (see &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL&lt;/a&gt;).</source>
          <target state="translated">&lt;var&gt;seed&lt;/var&gt; 문자 또는 데이터 항목의 어떤 형태 일 수도있다. 경우 &lt;var&gt;seed&lt;/var&gt; 숫자, 그 수치는 시드 값이 될 것입니다. 경우 &lt;var&gt;seed&lt;/var&gt; 영숫자가 인수로서 사용 된 경우로서, 그 값이 결정된다 &lt;code&gt;NUMVAL&lt;/code&gt; (참조 &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL을&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="38cd820c053e92d086a0b9214f6b167b863f80c2" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;sort-file-1&lt;/var&gt; named on the &lt;code&gt;MERGE&lt;/code&gt; statement must be defined using a sort description (&lt;code&gt;SD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;)). This file is referred to in the remainder of this discussion as the</source>
          <target state="translated">&lt;var&gt;sort-file-1&lt;/var&gt; 상의 이름 &lt;code&gt;MERGE&lt;/code&gt; 의 문은 정렬 설명을 (사용하여 정의해야합니다 &lt;code&gt;SD&lt;/code&gt; 를 (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; )). 이 파일은이 토론의 나머지 부분에서</target>
        </trans-unit>
        <trans-unit id="9a26fd6758a9a92cd6aabe0d47af5dfff44e5561" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;sort-file-1&lt;/var&gt; named on the &lt;code&gt;SORT&lt;/code&gt; statement must be defined using a sort description (&lt;code&gt;SD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;)). This file is referred to in the remainder of this discussion as the</source>
          <target state="translated">&lt;var&gt;sort-file-1&lt;/var&gt; 상의 이름 &lt;code&gt;SORT&lt;/code&gt; 의 문은 정렬 설명을 (사용하여 정의해야합니다 &lt;code&gt;SD&lt;/code&gt; 를 (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; )). 이 파일은이 토론의 나머지 부분에서</target>
        </trans-unit>
        <trans-unit id="0a85def500b17e645d409ef49caf2be2c8a6b7c5" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;sort-file-name-1&lt;/var&gt; file must be a sort- or merge work file defined with a &lt;code&gt;SD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;), not an &lt;code&gt;FD&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;sort-file-name-1&lt;/var&gt; 파일은 정의 된 sort- 또는 병합 작업 파일이어야합니다 &lt;code&gt;SD&lt;/code&gt; (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; 이 아닌) &lt;code&gt;FD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7b5b070589093f7df4a9c494701a8b8e1eee3f1" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;start&lt;/var&gt; value indicates the starting character position being referenced (character position values start with 1, not 0 as is the case in some programming languages) and &lt;var&gt;length&lt;/var&gt; specifies how many characters are wanted.</source>
          <target state="translated">&lt;var&gt;start&lt;/var&gt; 값은 시작 문자 위치 참조되는 표시 (문자 위치 값은 어떤 프로그래밍 언어의 경우하지 0으로, 1로 시작)와 &lt;var&gt;length&lt;/var&gt; 많은 문자가 원하는 방법을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9e89f5920784846f78a9617a470892afd29b1778" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;string&lt;/var&gt; must have any of the following formats, where &amp;rsquo;#&amp;rsquo; represents a sequence of one or more decimal digits:</source>
          <target state="translated">그만큼 &lt;var&gt;string&lt;/var&gt; '#'은 하나 이상의 10 자리의 순서를 나타내는 다음 형식 중 하나를 가지고 있어야합니다 :</target>
        </trans-unit>
        <trans-unit id="a822eb346cc5595aa37dcffcda35affead7488ad" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;table-name-1&lt;/var&gt; data item must be a table defined in any data division section</source>
          <target state="translated">그만큼 &lt;var&gt;table-name-1&lt;/var&gt; 데이터 항목은 테이블 데이터 분할 섹션에서 정의되어야</target>
        </trans-unit>
        <trans-unit id="56b870c6e88f51464f40c89b0266c3f909db4a5a" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;table&lt;/var&gt; data item must be at least 8 bytes long. If it is longer, the excess will be ignored by this subroutine.</source>
          <target state="translated">그만큼 &lt;var&gt;table&lt;/var&gt; 데이터 항목은 최소한 8 바이트 길이 여야합니다. 더 길면이 서브 루틴에서 초과분을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="f7b55e5f6c7940cf0834e42774634a3e825b0d7f" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;time&lt;/var&gt; string must contain hours, minutes and seconds. The time argument may be specified as a group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or an alphanumeric literal.</source>
          <target state="translated">&lt;var&gt;time&lt;/var&gt; 문자열은 시간, 분, 초를 포함해야합니다. 시간 인수는 그룹 항목으로 지정 될 수 있습니다. &lt;code&gt;USAGE DISPLAY&lt;/code&gt; 기본 항목 또는 영숫자 리터럴 .</target>
        </trans-unit>
        <trans-unit id="92a56c8f4a7d882b6cf79c77704cfad9693f6d0f" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;variable-arg&lt;/var&gt; argument should be an &lt;code&gt;OCCURS 8 TIMES&lt;/code&gt; table of &lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;variable-arg&lt;/var&gt; 인수는이어야 &lt;code&gt;OCCURS 8 TIMES&lt;/code&gt; 표 &lt;code&gt;USAGE BINARY-CHAR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05aa6021c2f49629b7db2882708e394ea4cd9e11" translate="yes" xml:space="preserve">
          <source>The CDF text manipulation statements &lt;code&gt;COPY&lt;/code&gt; and &lt;code&gt;REPLACE&lt;/code&gt; are used to introduce new code into programs either with or without changes, or may be used to modify existing statements already in the program. Text manipulation statements are always terminated with a period.</source>
          <target state="translated">CDF 텍스트 조작 명령문 &lt;code&gt;COPY&lt;/code&gt; 및 &lt;code&gt;REPLACE&lt;/code&gt; 는 변경 여부에 관계없이 프로그램에 새 코드를 도입하는 데 사용되거나 이미 프로그램에있는 기존 명령문을 수정하는 데 사용될 수 있습니다. 텍스트 조작 문은 항상 마침표로 끝납니다.</target>
        </trans-unit>
        <trans-unit id="a31937604fa2e33cafeaebda8572be77f5b04f1c" translate="yes" xml:space="preserve">
          <source>The CDF text manipulation statements&lt;code&gt;COPY&lt;/code&gt;and&lt;code&gt;REPLACE&lt;/code&gt;are used to introduce new code into programs either with or without changes, or may be used to modify existing statements already in the program. Text manipulation statements are always terminated with a period.</source>
          <target state="translated">CDF 텍스트 조작 명령문 &lt;code&gt;COPY&lt;/code&gt; 및 &lt;code&gt;REPLACE&lt;/code&gt; 는 변경 여부에 관계없이 프로그램에 새 코드를 도입하거나 프로그램에 이미있는 기존 명령문을 수정하는 데 사용될 수 있습니다. 텍스트 조작 설명은 항상 마침표로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="ef597c31a91609172441d510257d499ede136d46" translate="yes" xml:space="preserve">
          <source>The COBOL 1985 standard introduced the concept of a reference modifier to facilitate references to only a portion of a data item; GnuCOBOL fully supports reference modification.</source>
          <target state="translated">COBOL 1985 표준은 데이터 항목의 일부만 참조 할 수 있도록 참조 수정 자 개념을 도입했습니다. GnuCOBOL은 참조 수정을 완벽하게 지원합니다.</target>
        </trans-unit>
        <trans-unit id="27496e8b649d8379f1f475ce7b04a1be05cf6d60" translate="yes" xml:space="preserve">
          <source>The COBOL language includes a powerful &lt;code&gt;SORT&lt;/code&gt; statement that can sort large amounts of data according to arbitrarily complex key structures. This data may originate from within the program or may be contained in one or more external files. The sorted data may be written automatically to one or more output files or may be processed, record-by-record in the sorted sequence.</source>
          <target state="translated">COBOL 언어에는 강력한 &lt;code&gt;SORT&lt;/code&gt; 가 포함됩니다. 임의로 복잡한 키 구조에 따라 대량의 데이터를 정렬 할 수 문이 있습니다. 이 데이터는 프로그램 내에서 생성되거나 하나 이상의 외부 파일에 포함될 수 있습니다. 정렬 된 데이터는 하나 이상의 출력 파일에 자동으로 기록되거나 정렬 된 순서로 레코드별로 처리 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58e5b74aa785c08556fbea40dd26bbf83cf58dd9" translate="yes" xml:space="preserve">
          <source>The COBOL2002 standard formalizes extensions to the COBOL language that allow for the definition and processing of text-based screens, as is a typical function on mainframe and midframe computers as well as on many point-of-sale (i.e. &amp;ldquo;cash register&amp;rdquo;) systems. GnuCOBOL implements virtually all the screen-handling features described by COBOL2002.</source>
          <target state="translated">COBOL2002 표준은 텍스트 기반 화면의 정의 및 처리를 허용하는 COBOL 언어에 대한 확장을 공식화합니다. 이는 메인 프레임 및 미드 프레임 컴퓨터와 여러 판매 시점 (즉, &quot;금전 등록기&quot;) 시스템의 일반적인 기능입니다. . GnuCOBOL은 COBOL2002에서 설명한 거의 모든 화면 처리 기능을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="de2089b5fe025a721f7a3d07630ad7b962ba5de9" translate="yes" xml:space="preserve">
          <source>The COBOL2002 standard has made a common extension to the COBOL language &amp;mdash; the &lt;code&gt;GOBACK&lt;/code&gt; statement (see &lt;a href=&quot;#GOBACK&quot;&gt;GOBACK&lt;/a&gt;) &amp;mdash; a standard language element; the &lt;code&gt;GOBACK&lt;/code&gt; statement should be strongly considered as the preferred alternative to both &lt;code&gt;EXIT PROGRAM&lt;/code&gt; and &lt;code&gt;EXIT FUNCTION&lt;/code&gt; for new subprograms.</source>
          <target state="translated">COBOL2002 표준은 표준 언어 요소 인 COBOL 언어 ( &lt;code&gt;GOBACK&lt;/code&gt; 문 ( &lt;a href=&quot;#GOBACK&quot;&gt;GOBACK&lt;/a&gt; 참조 ))에 대한 공통 확장을 만들었습니다 . &lt;code&gt;GOBACK&lt;/code&gt; 문은 강하게 모두 선호하는 대안으로 고려되어야한다 &lt;code&gt;EXIT PROGRAM&lt;/code&gt; 및 &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 의 새로운 서브 프로그램에 대한.</target>
        </trans-unit>
        <trans-unit id="724c19d00ff0755366c06c956a631bc7fb0aeb9b" translate="yes" xml:space="preserve">
          <source>The COBOL2002 standard has made a common extension to the COBOL language &amp;mdash; the&lt;code&gt;GOBACK&lt;/code&gt;statement (see &lt;a href=&quot;#GOBACK&quot;&gt;GOBACK&lt;/a&gt;) &amp;mdash; a standard language element; the&lt;code&gt;GOBACK&lt;/code&gt;statement should be strongly considered as the preferred alternative to both&lt;code&gt;EXIT PROGRAM&lt;/code&gt;and&lt;code&gt;EXIT FUNCTION&lt;/code&gt;for new subprograms.</source>
          <target state="translated">COBOL2002 표준은 표준 언어 요소 인 COBOL 언어 ( &lt;code&gt;GOBACK&lt;/code&gt; 문 ( &lt;a href=&quot;#GOBACK&quot;&gt;GOBACK&lt;/a&gt; 참조 )) 를 공통으로 확장했습니다 . &lt;code&gt;GOBACK&lt;/code&gt; 문은 강하게 모두 선호하는 대안으로 고려되어야한다 &lt;code&gt;EXIT PROGRAM&lt;/code&gt; 및 &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 의 새로운 서브 프로그램에 대한.</target>
        </trans-unit>
        <trans-unit id="91740eff818793cdf296434ec86fa1913d1b8e49" translate="yes" xml:space="preserve">
          <source>The COBOL2002 standard, and therefore GnuCOBOL, only covers textual user interface (TUI) screens (those comprised of ASCII characters presented using a variety of visual attributes) and not the more-advanced graphical user interface (GUI) screen design and processing capabilities built into most modern operating systems. There are subroutine-based packages available that can do full GUI presentation &amp;mdash; most of which may be called by GnuCOBOL programs, with a moderate research time investment (Tcl/Tk, for example) &amp;mdash; but none are currently included with GnuCOBOL.</source>
          <target state="translated">COBOL2002 표준 및 GnuCOBOL은 텍스트 사용자 인터페이스 (TUI) 화면 (다양한 시각적 속성을 사용하여 표시되는 ASCII 문자로 구성된 화면) 만 다루며 고급 그래픽 사용자 인터페이스 (GUI) 화면 디자인 및 처리 기능은 포함하지 않습니다. 가장 현대적인 운영 체제. 전체 GUI 프리젠 테이션을 수행 할 수있는 서브 루틴 기반 패키지가 있으며, 대부분 GnuCOBOL 프로그램에 의해 호출 될 수 있으며, 적당한 연구 시간 투자 (예 : Tcl / Tk)가 있지만 GnuCOBOL에는 현재 포함 된 패키지가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e47926a81741abff0db882e1bf1d79af925bf908" translate="yes" xml:space="preserve">
          <source>The Compiler Directing Facility, or CDF, is a means of controlling the compilation of GnuCOBOL programs. CDF provides a mechanism for dynamically setting or resetting certain compiler switches, introducing new source code from one or more source code libraries, making dynamic source code modifications and conditionally processing or ignoring source statements altogether. This is accomplished via a series of special CDF statements and directives that will appear in the program source code.</source>
          <target state="translated">컴파일러 지시 기능 (CDF)은 GnuCOBOL 프로그램의 컴파일을 제어하는 ​​수단입니다. CDF는 특정 컴파일러 스위치를 동적으로 설정하거나 재설정하는 메커니즘을 제공하고, 하나 이상의 소스 코드 라이브러리에서 새 소스 코드를 도입하고, 동적 소스 코드를 수정하고, 소스 문을 조건부로 처리하거나 모두 무시합니다. 이것은 프로그램 소스 코드에 나타날 일련의 특수 CDF 문과 지시문을 통해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="6ce145694775d74484d3a6db6a70776e0cdb802e" translate="yes" xml:space="preserve">
          <source>The GCic sample program source listing (see &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; in</source>
          <target state="translated">나열 GCic 샘플 프로그램 소스 (참조 &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="310285085e5d0b8582d6fe39676ac38f88d4deb7" translate="yes" xml:space="preserve">
          <source>The GCic sample program source listing (see &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; in</source>
          <target state="translated">GCic 샘플 프로그램 소스 목록 ( &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; 의</target>
        </trans-unit>
        <trans-unit id="b093d3f22f34d036edbf55015d2595607910033b" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL &quot;bin&quot; directory should be defined in the PATH.</source>
          <target state="translated">GnuCOBOL &quot;bin&quot;디렉토리는 PATH에 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="48de1ed892a1942dcb9a8f14fefca64d7378634a" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL Interactive Compiler, or GCic,</source>
          <target state="translated">GnuCOBOL 대화 형 컴파일러 또는 GCic,</target>
        </trans-unit>
        <trans-unit id="d51f07a50b9c54f4424b4fa7dc1e1419db192641" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler (cobc) supports both of these source line format modes, defaulting to Fixed Format Mode lacking any other information.</source>
          <target state="translated">GnuCOBOL 컴파일러 (cobc)는 이러한 소스 라인 형식 모드를 모두 지원하며 기본적으로 다른 정보가없는 고정 형식 모드로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="10227ded2c354789a05b3156b4b17afb52a6bf50" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler actually went through the following decision-making logic when generating code for the &lt;code&gt;COMPUTE&lt;/code&gt; Statement:</source>
          <target state="translated">GnuCOBOL 컴파일러는 &lt;code&gt;COMPUTE&lt;/code&gt; 문에 대한 코드를 생성 할 때 실제로 다음과 같은 의사 결정 논리를 거쳤습니다 .</target>
        </trans-unit>
        <trans-unit id="d71c894530f1ca01508b8be48df41284675e9104" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler actually went through the following decision-making logic when generating code for the&lt;code&gt;COMPUTE&lt;/code&gt;Statement:</source>
          <target state="translated">GnuCOBOL 컴파일러는 실제로 &lt;code&gt;COMPUTE&lt;/code&gt; 문에 대한 코드를 생성 할 때 다음과 같은 의사 결정 논리를 거쳤습니다 .</target>
        </trans-unit>
        <trans-unit id="06cf012289edd5cd4333fcfd1088174710d43cb0" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler can create operating-system appropriate files that may be executed directly from the operating system environment. On Windows systems, these will be</source>
          <target state="translated">GnuCOBOL 컴파일러는 운영 체제 환경에서 직접 실행할 수있는 운영 체제에 적합한 파일을 생성 할 수 있습니다. Windows 시스템에서는</target>
        </trans-unit>
        <trans-unit id="f8a1193e48ccfe20f01e1363ab3e0a2566486fa4" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler can create operating-system appropriate files that may be executed directly from the operating system environment. On Windows systems, these will be &quot;.exe&quot; files whereas on UNIX systems they will have no specific extensions. The compiler&amp;rsquo;s&lt;code&gt;-x&lt;/code&gt;switch</source>
          <target state="translated">GnuCOBOL 컴파일러는 운영 체제 환경에서 직접 실행될 수있는 운영 체제에 적합한 파일을 작성할 수 있습니다. Windows 시스템에서는 파일이 &quot;.exe&quot;가되고 UNIX 시스템에서는 특정 확장자가 없습니다. 컴파일러의 &lt;code&gt;-x&lt;/code&gt; 스위치</target>
        </trans-unit>
        <trans-unit id="03a2b7339eef188ca46dff0c726cc74fbbc37ff8" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler generates C code from your COBOL programs; that C code is then automatically compiled and linked using your system&amp;rsquo;s C compiler (typically, but not limited to, &quot;gcc&quot;).</source>
          <target state="translated">GnuCOBOL 컴파일러는 COBOL 프로그램에서 C 코드를 생성합니다. 그런 다음 C 코드는 시스템의 C 컴파일러 (일반적으로 &quot;gcc&quot;로 제한되지 않음)를 사용하여 자동으로 컴파일 및 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="74de826014119fd79d0eb2a35b40e8769f55e495" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler generates C code from your COBOL programs; that C code is then automatically compiled and linked using your system&amp;rsquo;s C compiler (typically, but not limited to, &lt;code&gt;gcc&lt;/code&gt;).</source>
          <target state="translated">GnuCOBOL 컴파일러는 COBOL 프로그램에서 C 코드를 생성합니다. 그런 다음 C 코드는 시스템의 C 컴파일러 (일반적으로 &lt;code&gt;gcc&lt;/code&gt; ) 를 사용하여 자동으로 컴파일되고 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="ea58459ca939d4566e866217668ee2d57c2d2e54" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler is named &quot;cobc&quot; (&quot;cobc.exe&quot; on a Windows system).</source>
          <target state="translated">GnuCOBOL 컴파일러의 이름은 &quot;cobc&quot;(Windows 시스템의 경우 &quot;cobc.exe&quot;)입니다.</target>
        </trans-unit>
        <trans-unit id="a8cbfdf3bd8f52dedf17ca21d00ac68d544dfa16" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler is named &lt;code&gt;cobc&lt;/code&gt; (&lt;code&gt;cobc.exe&lt;/code&gt; on a Windows system).</source>
          <target state="translated">GnuCOBOL 컴파일러의 이름은 &lt;code&gt;cobc&lt;/code&gt; ( Windows 시스템의 경우 &lt;code&gt;cobc.exe&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="670f0187bd768459766992d2c04448aaee8b87cb" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler will attempt to locate copybooks by searching for them in the following folders. The search will occur in the sequence shown below, and will terminate once a copybook is found.</source>
          <target state="translated">GnuCOBOL 컴파일러는 다음 폴더에서 카피 북을 검색하여 찾습니다. 검색은 아래 표시된 순서대로 수행되며 카피 북을 찾으면 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="9920186e56499fcc816b802a43497434d7b2e55a" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler will translate your COBOL program into C source code, compile that C source code into executable binary form using the &quot;C&quot; compiler specified when GnuCOBOL was built and link that executable binary into:</source>
          <target state="translated">GnuCOBOL 컴파일러는 COBOL 프로그램을 C 소스 코드로 변환하고, GnuCOBOL을 빌드 할 때 지정된 &quot;C&quot;컴파일러를 사용하여 해당 C 소스 코드를 실행 가능한 이진 형식으로 컴파일하고 해당 실행 가능한 바이너리를 다음에 링크합니다.</target>
        </trans-unit>
        <trans-unit id="00cddb49b8680e0b98ca604fe5611b25593568db" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL compiler will translate your COBOL program into C source code, compile that C source code into executable binary form using the C compiler specified when GnuCOBOL was built and link that executable binary into:</source>
          <target state="translated">GnuCOBOL 컴파일러는 COBOL 프로그램을 C 소스 코드로 변환하고 GnuCOBOL이 빌드 될 때 지정된 C 컴파일러를 사용하여 C 소스 코드를 실행 가능한 바이너리 형식으로 컴파일하고 실행 가능한 바이너리를 다음 위치에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cc7992ec75e03f1da65635921cf20819e91c60c1" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL implementation of RWCS does not issue any carriage-control information to the report files it produces &amp;mdash; instead, it relies upon the information coded in the &lt;code&gt;RD&lt;/code&gt; for the report (specifically the &lt;code&gt;PAGE LIMITS&lt;/code&gt; and related options) and its internally-generated and managed   &lt;code&gt;LINE-COUNTER&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) for the report to know when to issue any blank lines to the file to fill-out the end of a printed page.</source>
          <target state="translated">RWCS의 GnuCOBOL 구현은 생성하는 보고서 파일에 캐리지 제어 정보를 발행하지 않습니다. 대신 보고서 에 대해 &lt;code&gt;RD&lt;/code&gt; 에 코딩 된 정보 (특히 &lt;code&gt;PAGE LIMITS&lt;/code&gt; 및 관련 옵션) 및 내부적으로 생성 및 관리되는 정보에 의존합니다. &lt;code&gt;LINE-COUNTER&lt;/code&gt; 특수 레지스터 (참조 &lt;a href=&quot;#Special-Registers&quot;&gt;특수 레지스터&lt;/a&gt; 채우기 아웃에 인쇄 된 페이지의 끝을 파일에 빈 줄을 발행 할 때 보고서는) 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a55114b3e2544307d0b630c8fc8295c2b15771a4" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL implementation of RWCS does not issue any carriage-control information to the report files it produces &amp;mdash; instead, it relies upon the information coded in the&lt;code&gt;RD&lt;/code&gt;for the report (specifically the&lt;code&gt;PAGE LIMITS&lt;/code&gt;and related options) and it&amp;rsquo;s internally-generated and managed&lt;code&gt;LINE-COUNTER&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) for the report to know when to issue any blank lines to the file to fill-out the end of a printed page.</source>
          <target state="translated">RWCS의 GnuCOBOL 구현은 생성 된 보고서 파일에 캐리지 제어 정보를 발행하지 않습니다. 대신 &lt;code&gt;RD&lt;/code&gt; 에서 보고서에 대해 코딩 된 정보 (특히 &lt;code&gt;PAGE LIMITS&lt;/code&gt; 및 관련 옵션)에 의존하며 내부적으로 생성 및 관리됩니다. &lt;code&gt;LINE-COUNTER&lt;/code&gt; 특수 레지스터 (참조 &lt;a href=&quot;#Special-Registers&quot;&gt;특수 레지스터&lt;/a&gt; 채우기 아웃에 인쇄 된 페이지의 끝을 파일에 빈 줄을 발행 할 때 보고서는) 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8132d3b13ab83d9829344b4a4906d51ad770069" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL language specification defines over 1130  &lt;em&gt;Reserved Words&lt;/em&gt; &amp;mdash; words to which the compiler assigns a special meaning. This list and number applies to the default list which covers many implementations and that it is possible to limit the list to either a specific implementation via -std=xyz[-strict] or to manually unreserve words if they are used in existing sources as user-defined words.</source>
          <target state="translated">GnuCOBOL 언어 사양은 1130 개 이상의 &lt;em&gt;예약어 (&lt;/em&gt; 컴파일러가 특별한 의미를 할당하는 단어)를 정의합니다 . 이 목록과 번호는 많은 구현을 포함하는 기본 목록에 적용되며 -std = xyz [-strict]를 통해 특정 구현으로 목록을 제한하거나 기존 소스에서 사용자로 사용되는 경우 수동으로 예약을 해제 할 수 있습니다. 정의 된 단어.</target>
        </trans-unit>
        <trans-unit id="d08b99014e077e1a9dafb85fe81fe3254881ce10" translate="yes" xml:space="preserve">
          <source>The GnuCOBOL language specification defines over 900 &amp;rsquo;</source>
          <target state="translated">GnuCOBOL 언어 사양은 900 이상의 '</target>
        </trans-unit>
        <trans-unit id="4633e2d4da89a948dc0f58e721124c5992b20021" translate="yes" xml:space="preserve">
          <source>The MinGW approach is a personal favourite with the author of this manual because it creates a GnuCOBOL compiler and runtime library that require only a single MinGW DLL to be available for the GnuCOBOL compiler, runtime library and user programs. That DLL is freely distributable under the terms of the GNU General Public License. A MinGW build of GnuCOBOL fits easily on and runs from a 128MB flash drive with no need to install any software onto the Windows computer that will be using it. Some functionality of the language, dealing with the sharing of files between concurrently executing GnuCOBOL programs and record locking on certain types of files, is sacrificed however as the underlying operating system routines needed to implement them aren&amp;rsquo;t available to Windows and aren&amp;rsquo;t provided by MinGW. The current version for MinGW is available at the download link along with various other platforms at the GnuCOBOL &lt;a href=&quot;https://sourceforge.net/projects/open-cobol/files/gnu-cobol&quot;&gt;download website&lt;/a&gt;.</source>
          <target state="translated">MinGW 접근 방식은 GnuCOBOL 컴파일러, 런타임 라이브러리 및 사용자 프로그램에 사용할 수있는 단일 MinGW DLL 만 필요로하는 GnuCOBOL 컴파일러 및 런타임 라이브러리를 생성하기 때문에이 매뉴얼의 저자가 개인적으로 선호하는 방식입니다. 해당 DLL은 GNU General Public License 조건에 따라 무료로 배포 할 수 있습니다. GnuCOBOL의 MinGW 빌드는 쉽게 설치할 수 있으며이를 사용할 Windows 컴퓨터에 소프트웨어를 설치할 필요없이 128MB 플래시 드라이브에서 실행됩니다. 동시에 실행되는 GnuCOBOL 프로그램 간의 파일 공유 및 특정 유형의 파일에 대한 레코드 잠금을 처리하는 언어의 일부 기능은 희생되지만이를 구현하는 데 필요한 기본 운영 체제 루틴을 Windows에서 사용할 수없고 제공되지 않습니다. by MinGW.MinGW의 최신 버전은 GnuCOBOL의 다양한 다른 플랫폼과 함께 다운로드 링크에서 사용할 수 있습니다.&lt;a href=&quot;https://sourceforge.net/projects/open-cobol/files/gnu-cobol&quot;&gt;웹 사이트를 다운로드하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d28b6a161835aaf945a9a622c178a6406a35bd7a" translate="yes" xml:space="preserve">
          <source>The MinGW approach is a personal favourite with the author of this manual because it creates a GnuCOBOL compiler and runtime library that require only a single MinGW DLL to be available for the GnuCOBOL compiler, runtime library and user programs. That DLL is freely distributable under the terms of the GNU General Public License. A MinGW build of GnuCOBOL fits easily on and runs from a 128MB flash drive with no need to install any software onto the Windows computer that will be using it. Some functionality of the language, dealing with the sharing of files between concurrently executing GnuCOBOL programs and record locking on certain types of files, is sacrificed however as the underlying operating system routines needed to implement them aren&amp;rsquo;t available to Windows and aren&amp;rsquo;t provided by MinGW. The current version for MinGW is available at the download link along with various other platforms at the GnuCobol download website (https://sourceforge.net/projects/open-cobol/files/gnu-cobol/2.0/).</source>
          <target state="translated">The MinGW approach is a personal favourite with the author of this manual because it creates a GnuCOBOL compiler and runtime library that require only a single MinGW DLL to be available for the GnuCOBOL compiler, runtime library and user programs. That DLL is freely distributable under the terms of the GNU General Public License. A MinGW build of GnuCOBOL fits easily on and runs from a 128MB flash drive with no need to install any software onto the Windows computer that will be using it. Some functionality of the language, dealing with the sharing of files between concurrently executing GnuCOBOL programs and record locking on certain types of files, is sacrificed however as the underlying operating system routines needed to implement them aren&amp;rsquo;t available to Windows and aren&amp;rsquo;t provided by MinGW. The current version for MinGW is available at the download link along with various other platforms at the GnuCobol download website (https://sourceforge.net/projects/open-cobol/files/gnu-cobol/2.0/).</target>
        </trans-unit>
        <trans-unit id="2aa9bd7489598500d797fd95e91629893e798908" translate="yes" xml:space="preserve">
          <source>The PROCEDURE DIVISION of any GnuCOBOL program marks the point where all executable code is written.</source>
          <target state="translated">The PROCEDURE DIVISION of any GnuCOBOL program marks the point where all executable code is written.</target>
        </trans-unit>
        <trans-unit id="88d7f278eb6607766ea3789570e3ec98580d0966" translate="yes" xml:space="preserve">
          <source>The REPOSITORY paragraph provides a way to control access to the various built-in intrinsic functions and any user defined functions that your program will be using.</source>
          <target state="translated">REPOSITORY 단락은 다양한 내장 내장 함수 및 프로그램에서 사용할 사용자 정의 함수에 대한 액세스를 제어하는 ​​방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2020d0559c8b7fa9efac370f89abf0c398ddec8c" translate="yes" xml:space="preserve">
          <source>The RETURNING clause on the PROCEDURE DIVISION header documents that the subprogram in which the clause appears will be returning a numeric value back to the program that called it.</source>
          <target state="translated">PROCEDURE DIVISION 헤더의 RETURNING 절은 해당 절이있는 서브 프로그램이이를 호출 한 프로그램에 숫자 값을 반환 할 것임을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="c0284bfb17a26cadbaf21048267fc3ac87d357b2" translate="yes" xml:space="preserve">
          <source>The SIZE phrase specifies the size (length) of the field. After the &lt;code&gt;ACCEPT&lt;/code&gt; or &lt;code&gt;DISPLAY&lt;/code&gt; is finished, the cursor is placed immediately after the field defined by this clause, unless this would place the cursor outside of the current terminal window. In this case, the cursor is wrapped around to the beginning of the next line (scrolling the window if necessary).</source>
          <target state="translated">SIZE 구문은 필드의 크기 (길이)를 지정합니다. 애프터 &lt;code&gt;ACCEPT&lt;/code&gt; 또는 &lt;code&gt;DISPLAY&lt;/code&gt; 가 완료되면이 현재 터미널 창의 커서 외부에 배치하지 않는 한, 커서,이 조항에 의해 정의 된 필드 바로 뒤에 배치됩니다. 이 경우 커서는 다음 줄의 시작 부분으로 래핑됩니다 (필요한 경우 창 스크롤).</target>
        </trans-unit>
        <trans-unit id="55ed5559da5478e5c89338e6b69f8f56c4fcde6f" translate="yes" xml:space="preserve">
          <source>The SIZE phrase specifies the size (length) of the field. After the ACCEPT or DISPLAY is finished, the cursor is placed immediately after the field defined by this clause, unless this would place the cursor outside of the current terminal window. In this case, the cursor is wrapped around to the beginning of the next line (scrolling the window if necessary).</source>
          <target state="translated">The SIZE phrase specifies the size (length) of the field. After the ACCEPT or DISPLAY is finished, the cursor is placed immediately after the field defined by this clause, unless this would place the cursor outside of the current terminal window. In this case, the cursor is wrapped around to the beginning of the next line (scrolling the window if necessary).</target>
        </trans-unit>
        <trans-unit id="da90357a0bffb9cf55a6e70c467792148d914ab8" translate="yes" xml:space="preserve">
          <source>The STDCALL convention will not be used.</source>
          <target state="translated">The STDCALL convention will not be used.</target>
        </trans-unit>
        <trans-unit id="33be5cd3d3b8f1d09e31fe887fd4446969242e5b" translate="yes" xml:space="preserve">
          <source>The STDCALL convention, required to use the Microsoft Win32 API, will be used.</source>
          <target state="translated">The STDCALL convention, required to use the Microsoft Win32 API, will be used.</target>
        </trans-unit>
        <trans-unit id="0fe5f44ec3178a458e0d50e7aa16b2096f5aed11" translate="yes" xml:space="preserve">
          <source>The Simple &lt;code&gt;MOVE&lt;/code&gt; statement moves a specific value to one or more receiving data items.</source>
          <target state="translated">Simple &lt;code&gt;MOVE&lt;/code&gt; 문은 특정 값을 하나 이상의 수신 데이터 항목으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="8ef7ffb0f848c6b1ec77cb863709c677b79ef629" translate="yes" xml:space="preserve">
          <source>The Tab and Back-Tab (Shift-Tab on most keyboards) keys will position the cursor from field to field in the line/column sequence in which the fields occur on the screen at execution time, regardless of the sequence in which they were defined in the screen section.</source>
          <target state="translated">The Tab and Back-Tab (Shift-Tab on most keyboards) keys will position the cursor from field to field in the line/column sequence in which the fields occur on the screen at execution time, regardless of the sequence in which they were defined in the screen section.</target>
        </trans-unit>
        <trans-unit id="4f44766035702b9c7e907683d20d3b02a4d05e50" translate="yes" xml:space="preserve">
          <source>The above generates an assembler source file named</source>
          <target state="translated">위는 다음과 같은 어셈블러 소스 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="78b41a694122cd6cd0aa8873143f215d95c4371e" translate="yes" xml:space="preserve">
          <source>The above generates an assembler source file named &quot;sprog1.s&quot;. If you have multiple subprograms to compile this way, just string their file names out on the command &amp;mdash; each will be translated to it&amp;rsquo;s own assembler source file.</source>
          <target state="translated">The above generates an assembler source file named &quot;sprog1.s&quot;. If you have multiple subprograms to compile this way, just string their file names out on the command &amp;mdash; each will be translated to it&amp;rsquo;s own assembler source file.</target>
        </trans-unit>
        <trans-unit id="8ec6601cf5207680213a48bfade05ed84a60a7b6" translate="yes" xml:space="preserve">
          <source>The above is by no means an exhaustive list, but good programmers will use as few of these descriptors as possible as having too many defeats any benefits of such classification/documentation efforts.</source>
          <target state="translated">The above is by no means an exhaustive list, but good programmers will use as few of these descriptors as possible as having too many defeats any benefits of such classification/documentation efforts.</target>
        </trans-unit>
        <trans-unit id="9cbddab40c15e61138ce363aa3b960c5bb163156" translate="yes" xml:space="preserve">
          <source>The above screen was produced by the GnuCOBOL Interactive Compiler, or GCic. See &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; in</source>
          <target state="translated">위 화면은 GnuCOBOL Interactive Compiler 또는 GCic에 의해 생성되었습니다. 참조 &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="24a12188ad7a4861b4c3156578ed73d4cceae9ae" translate="yes" xml:space="preserve">
          <source>The above screen was produced by the GnuCOBOL Interactive Compiler, or GCic. See &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; in</source>
          <target state="translated">The above screen was produced by the GnuCOBOL Interactive Compiler, or GCic. See &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#GCic&quot;&gt;GCic&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="63112f49219c6c7ebd3ff9a1303efdd89091f895" translate="yes" xml:space="preserve">
          <source>The above will display &amp;lsquo;</source>
          <target state="translated">위의 '</target>
        </trans-unit>
        <trans-unit id="94be8da29904435534b48e048a367496c1878719" translate="yes" xml:space="preserve">
          <source>The above will display&lt;code&gt;102030405&lt;/code&gt;</source>
          <target state="translated">The above will display &lt;code&gt;102030405&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef3c0c4a2cb1f0ca4400fa32b563ee8fb8d54aba" translate="yes" xml:space="preserve">
          <source>The actual key pressed to generate a function key (&lt;code&gt;F&lt;var&gt;n&lt;/var&gt;&lt;/code&gt;) will depend on the type of terminal device you&amp;rsquo;re using (PC, Macintosh, VT100, etc.) and what type of enhanced display driver was configured with the version of GnuCOBOL you&amp;rsquo;re using.</source>
          <target state="translated">기능 키 ( &lt;code&gt;F&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; ) 를 생성하기 위해 누르는 실제 키 는 사용중인 터미널 장치 유형 (PC, Macintosh, VT100 등) 및 GnuCOBOL 버전에 구성된 향상된 디스플레이 드라이버 유형에 따라 다릅니다. 사용하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="8093994b75b50fc77b805afd2cf96e6c082907d2" translate="yes" xml:space="preserve">
          <source>The actual key pressed to generate a function key (Fn) will depend on the type of terminal device you&amp;rsquo;re using (PC, Macintosh, VT100, etc.) and what type of enhanced display driver was configured with the version of GnuCOBOL you&amp;rsquo;re using. For example, on a GnuCOBOL build for a Windows PC using MinGW and PDCurses, F1-F12 are the actual F-keys on the PC keyboard, F13-F24 are entered by shifting the F-keys, F25-F36 are entered by holding Ctrl while pressing an F-key and F37-F48 are entered by holding Alt while pressing an F-key. On the other hand, a GnuCOBOL implementation built for Windows using Cygwin and NCurses treats the PCs F1-F12 keys as the actual F1-F12, while shifted F-keys will enter F11-F20. With Cygwin/NCurses, Ctrl- and Alt-modified F-keys aren&amp;rsquo;t recognized. Neither are Shift-F11 or Shift-F12.</source>
          <target state="translated">The actual key pressed to generate a function key (Fn) will depend on the type of terminal device you&amp;rsquo;re using (PC, Macintosh, VT100, etc.) and what type of enhanced display driver was configured with the version of GnuCOBOL you&amp;rsquo;re using. For example, on a GnuCOBOL build for a Windows PC using MinGW and PDCurses, F1-F12 are the actual F-keys on the PC keyboard, F13-F24 are entered by shifting the F-keys, F25-F36 are entered by holding Ctrl while pressing an F-key and F37-F48 are entered by holding Alt while pressing an F-key. On the other hand, a GnuCOBOL implementation built for Windows using Cygwin and NCurses treats the PCs F1-F12 keys as the actual F1-F12, while shifted F-keys will enter F11-F20. With Cygwin/NCurses, Ctrl- and Alt-modified F-keys aren&amp;rsquo;t recognized. Neither are Shift-F11 or Shift-F12.</target>
        </trans-unit>
        <trans-unit id="72657b808919cfa65794cd54a753426b039ba862" translate="yes" xml:space="preserve">
          <source>The alternative to using multiple entry points in your subroutine, by the way, would be to include an additional argument to the primary (and only) entry point of the subroutine; this new argument might be named &lt;code&gt;STUDENT-FUNCTION&lt;/code&gt; and might have values of &amp;lsquo;</source>
          <target state="translated">그런데 서브 루틴에서 여러 진입 점을 사용하는 것의 대안은 서브 루틴의 기본 (유일한) 진입 점에 대한 추가 인수를 포함하는 것입니다. 이 새 인수의 이름은 &lt;code&gt;STUDENT-FUNCTION&lt;/code&gt; 이고 값은 '</target>
        </trans-unit>
        <trans-unit id="4b09520a9d96a745b04b503e8aa6737320588b1e" translate="yes" xml:space="preserve">
          <source>The alternative to using multiple entry points in your subroutine, by the way, would be to include an additional argument to the primary (and only) entry point of the subroutine; this new argument might be named&lt;code&gt;STUDENT-FUNCTION&lt;/code&gt;and might have values of &quot;FETCH&quot;, &quot;ADD&quot;, &quot;UPDATE&quot; or &quot;DELETE&quot;.</source>
          <target state="translated">The alternative to using multiple entry points in your subroutine, by the way, would be to include an additional argument to the primary (and only) entry point of the subroutine; this new argument might be named &lt;code&gt;STUDENT-FUNCTION&lt;/code&gt; and might have values of &quot;FETCH&quot;, &quot;ADD&quot;, &quot;UPDATE&quot; or &quot;DELETE&quot;.</target>
        </trans-unit>
        <trans-unit id="fd335250d65356599bf94acfe3725b3178032c4c" translate="yes" xml:space="preserve">
          <source>The amount of programming necessary to accomplish a given task &amp;mdash; including rework needed by any errors found during testing (testing is sometimes jokingly defined as:</source>
          <target state="translated">테스트 중에 발견 된 오류에 필요한 재 작업을 포함하여 주어진 작업을 수행하는 데 필요한 프로그래밍의 양 (테스트는 농담으로 다음과 같이 정의되는 경우가 있습니다.)</target>
        </trans-unit>
        <trans-unit id="1d5c49cb3dcdaaf4d3b3d2437e45b4539a60f9ce" translate="yes" xml:space="preserve">
          <source>The amount of programming necessary to accomplish a given task &amp;mdash; including rework needed by any errors found during testing (testing is sometimes jokingly defined as: &quot;that time during which an application is actually in production, allowing users to discover the problems&quot;) is the measure of programmer productivity. Anything that reduces that effort will therefore reduce the time spent in such activities therefore reducing the expense of same. When the expense of programming is reduced, programmer productivity is increased.</source>
          <target state="translated">The amount of programming necessary to accomplish a given task &amp;mdash; including rework needed by any errors found during testing (testing is sometimes jokingly defined as: &quot;that time during which an application is actually in production, allowing users to discover the problems&quot;) is the measure of programmer productivity. Anything that reduces that effort will therefore reduce the time spent in such activities therefore reducing the expense of same. When the expense of programming is reduced, programmer productivity is increased.</target>
        </trans-unit>
        <trans-unit id="419e8db2274630dc8c04045f91a9f1df2f9fcf6a" translate="yes" xml:space="preserve">
          <source>The amount of storage requested by an &lt;code&gt;ALLOCATE&lt;/code&gt; statement is not available</source>
          <target state="translated">&lt;code&gt;ALLOCATE&lt;/code&gt; 문에서 요청한 스토리지 양을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8e8909f4f3e02ea6ff0f8548b1efeac7f19ec54d" translate="yes" xml:space="preserve">
          <source>The amount of storage requested by an ALLOCATE statement is not available</source>
          <target state="translated">The amount of storage requested by an ALLOCATE statement is not available</target>
        </trans-unit>
        <trans-unit id="e5b290ecc08b7e03247eea53b3b8960797c77936" translate="yes" xml:space="preserve">
          <source>The application that collects data from the various cash registers at each store will generate data records that look like this to a COBOL program:</source>
          <target state="translated">The application that collects data from the various cash registers at each store will generate data records that look like this to a COBOL program:</target>
        </trans-unit>
        <trans-unit id="1a3e86c9ba7c5fa82dcd8f97b65a3b2cc5cd7c0f" translate="yes" xml:space="preserve">
          <source>The arguments to the &quot;cob_init&quot; routine are the argument count and value parameters passed to the main function when the program began execution. By passing them into the GnuCOBOL subprogram, it will be possible for that GnuCOBOL program to retrieve the command line or individual command-line arguments. If that won&amp;rsquo;t be necessary, &quot;cob_init(0,NULL);&quot; could be specified instead.</source>
          <target state="translated">The arguments to the &quot;cob_init&quot; routine are the argument count and value parameters passed to the main function when the program began execution. By passing them into the GnuCOBOL subprogram, it will be possible for that GnuCOBOL program to retrieve the command line or individual command-line arguments. If that won&amp;rsquo;t be necessary, &quot;cob_init(0,NULL);&quot; could be specified instead.</target>
        </trans-unit>
        <trans-unit id="1d27685bf30df216b66eb408e1990925dec41de1" translate="yes" xml:space="preserve">
          <source>The arguments to the &lt;code&gt;cob_init&lt;/code&gt; routine are the argument count and value parameters passed to the main function when the program began execution. By passing them into the GnuCOBOL subprogram, it will be possible for that GnuCOBOL program to retrieve the command line or individual command-line arguments. If that won&amp;rsquo;t be necessary, &lt;code&gt;cob_init(0,NULL);&lt;/code&gt; could be specified instead.</source>
          <target state="translated">받는 인수 &lt;code&gt;cob_init&lt;/code&gt; 의 루틴은 프로그램이 실행을 시작했을 때 메인 함수에 전달 된 인수의 수와 값 매개 변수입니다. 그것들을 GnuCOBOL 서브 프로그램에 전달함으로써, 그 GnuCOBOL 프로그램이 명령 행 또는 개별 명령 행 인수를 검색 할 수 있습니다. 필요하지 않다면 &lt;code&gt;cob_init(0,NULL);&lt;/code&gt; 대신 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e71e38a1cdb0300b0d12d0999405dd27a6a78252" translate="yes" xml:space="preserve">
          <source>The attributes shown in the syntax diagram are the only ones that may be altered by this statement. See &lt;a href=&quot;#Data-Description-Clauses&quot;&gt;Data Description Clauses&lt;/a&gt;, for information on their usage.</source>
          <target state="translated">The attributes shown in the syntax diagram are the only ones that may be altered by this statement. See &lt;a href=&quot;#Data-Description-Clauses&quot;&gt;Data Description Clauses&lt;/a&gt;, for information on their usage.</target>
        </trans-unit>
        <trans-unit id="5ab26e2f1e4ecd0719e97fee3748357d054220fc" translate="yes" xml:space="preserve">
          <source>The automatic numbering of printed pages.</source>
          <target state="translated">The automatic numbering of printed pages.</target>
        </trans-unit>
        <trans-unit id="a127904e5647f59d88833363a96c8d59fa8f41b3" translate="yes" xml:space="preserve">
          <source>The automatic production of a one-time notice on the first page of the report (report heading).</source>
          <target state="translated">The automatic production of a one-time notice on the first page of the report (report heading).</target>
        </trans-unit>
        <trans-unit id="7a088d8eb695a724fe4c02137d21c695dd4a8c67" translate="yes" xml:space="preserve">
          <source>The behaviour of the eight different rounding modes is defined in the following table. Note that a &quot;&amp;hellip;&quot; indicates the last digit repeats. The examples assume an integer receiving field.</source>
          <target state="translated">The behaviour of the eight different rounding modes is defined in the following table. Note that a &quot;&amp;hellip;&quot; indicates the last digit repeats. The examples assume an integer receiving field.</target>
        </trans-unit>
        <trans-unit id="8d24b6f7fddc3c88c0179d8d6a5e9144ca48873e" translate="yes" xml:space="preserve">
          <source>The behaviour of the eight different rounding modes is defined in the following table. Note that a &amp;lsquo;</source>
          <target state="translated">8 가지 반올림 모드의 동작은 다음 표에 정의되어 있습니다. '</target>
        </trans-unit>
        <trans-unit id="2deeb2f672901d38085cc5ecbcfd8815bcbbd852" translate="yes" xml:space="preserve">
          <source>The braces (&amp;lsquo;</source>
          <target state="translated">중괄호 ( '</target>
        </trans-unit>
        <trans-unit id="fd0b6bca0d0d81837dfe03a6981429fcd2dd10d6" translate="yes" xml:space="preserve">
          <source>The braces ({}) meta characters may be used to group a sequence of syntax elements together so that they may be treated as a single entity. The {} characters themselves should not be coded. These are typically used in combination with the &quot;|&quot; or &quot;...&quot; meta characters.</source>
          <target state="translated">The braces ({}) meta characters may be used to group a sequence of syntax elements together so that they may be treated as a single entity. The {} characters themselves should not be coded. These are typically used in combination with the &quot;|&quot; or &quot;...&quot; meta characters.</target>
        </trans-unit>
        <trans-unit id="c4e1ec49ff77a7356b6c1b79f916b4e2641b12dc" translate="yes" xml:space="preserve">
          <source>The called program (subroutine) will flush processed arguments from the argument stack.</source>
          <target state="translated">The called program (subroutine) will flush processed arguments from the argument stack.</target>
        </trans-unit>
        <trans-unit id="adaf8eae77b8d8ef09d8b197b627ba295cf9d989" translate="yes" xml:space="preserve">
          <source>The calling program issues a statement of the form &lt;code&gt;CALL '&lt;var&gt;entry-point&lt;/var&gt;' USING ...&lt;/code&gt; to transfer control to the subroutine.</source>
          <target state="translated">호출 프로그램은 제어를 서브 루틴으로 전송 하기 위해 &lt;code&gt;CALL '&lt;var&gt;entry-point&lt;/var&gt;' USING ...&lt;/code&gt; 양식의 명령문을 발행합니다 .</target>
        </trans-unit>
        <trans-unit id="9aac32c3778f9277ca99c13dadc7fb447aeee465" translate="yes" xml:space="preserve">
          <source>The calling program issues a statement of the form&lt;code&gt;CALL '&amp;lt;&lt;i&gt;entry-point&lt;/i&gt;&amp;gt;' USING ...&lt;/code&gt;to transfer control to the subroutine.</source>
          <target state="translated">The calling program issues a statement of the form &lt;code&gt;CALL '&amp;lt;&lt;i&gt;entry-point&lt;/i&gt;&amp;gt;' USING ...&lt;/code&gt; to transfer control to the subroutine.</target>
        </trans-unit>
        <trans-unit id="51257373760ec85ab048c382d4b584a303053368" translate="yes" xml:space="preserve">
          <source>The calling program will flush processed arguments from the argument stack.</source>
          <target state="translated">The calling program will flush processed arguments from the argument stack.</target>
        </trans-unit>
        <trans-unit id="8573662c2506adbb40ec085b7da60a6a848da8a7" translate="yes" xml:space="preserve">
          <source>The calling program will pass zero or more data items, known as arguments, to this subprogram &amp;mdash; there must be exactly as many &amp;lt;</source>
          <target state="translated">호출 프로그램은 인수로 알려진 0 개 이상의 데이터 항목을이 서브 프로그램에 전달합니다. 정확히 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="4c53854e0c6247a0f4f0bb5f6508950354b0d309" translate="yes" xml:space="preserve">
          <source>The calling program will pass zero or more data items, known as arguments, to this subprogram &amp;mdash; there must be exactly as many &lt;var&gt;identifier-1&lt;/var&gt; data items specified on the &lt;code&gt;USING&lt;/code&gt; clause as the maximum number of arguments the subprogram will ever be passed.</source>
          <target state="translated">호출 프로그램은 인수라고하는 0 개 이상의 데이터 항목을이 서브 프로그램 에 전달합니다. &lt;code&gt;USING&lt;/code&gt; 절 에 지정된 &lt;var&gt;identifier-1&lt;/var&gt; 데이터 항목 이 서브 프로그램이 전달 될 최대 인수 수만큼 정확하게 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c06b07ae0fed899b5c37763e58619f44a8cb28f7" translate="yes" xml:space="preserve">
          <source>The capability exists for an additional field to be defined as what is known as an alternate key. Alternate key fields behave just like primary keys, allowing both direct and sequential access to record data based upon the alternate key field values, with one exception. That exception is the fact that alternate keys may be allowed to have duplicate values, depending upon how the alternate key field is described to the GnuCOBOL compiler.</source>
          <target state="translated">대체 필드라고하는 추가 필드를 정의 할 수있는 기능이 있습니다. 대체 키 필드는 기본 키와 동일하게 작동하므로 대체 키 필드 값을 기반으로 데이터를 기록하는 데 직접 및 순차 액세스가 가능하지만 한 가지 예외가 있습니다. 예외 키는 대체 키 필드가 GnuCOBOL 컴파일러에 설명되는 방식에 따라 대체 키가 중복 값을 가질 수 있다는 사실입니다.</target>
        </trans-unit>
        <trans-unit id="81fe4732a39c21cedaeabef43278d74effeb568c" translate="yes" xml:space="preserve">
          <source>The character period in &lt;var&gt;argument-1&lt;/var&gt;&lt;var&gt;string&lt;/var&gt;, represents the decimal separator. The character comma in &lt;var&gt;argument-1&lt;/var&gt; represents the grouping separator. When the &lt;code&gt;DECIMAL-POINT IS COMMA&lt;/code&gt; clause is specified, the character comma shall be used in &lt;var&gt;argument-1&lt;/var&gt; to represent the decimal separator and the character period shall be used to represent the grouping separator.</source>
          <target state="translated">&lt;var&gt;argument-1&lt;/var&gt; &lt;var&gt;string&lt;/var&gt; 의 문자 마침표 는 소수점 구분 기호를 나타냅니다. &lt;var&gt;argument-1&lt;/var&gt; 의 문자 쉼표 는 그룹화 구분 기호를 나타냅니다. 때 &lt;code&gt;DECIMAL-POINT IS COMMA&lt;/code&gt; 절이 지정된 캐릭터 쉼표가 사용되어야한다 &lt;var&gt;argument-1&lt;/var&gt; 소수 구분을 나타내는 문자 및 기간은 그룹핑 구분을 나타내는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="2a3884f906bbd3aea36af2e6914ccb4738bbd4b6" translate="yes" xml:space="preserve">
          <source>The clause  &lt;code&gt;NEXT SENTENCE&lt;/code&gt; may be substituted for either imperative-statement, but not both. If control reaches a &lt;code&gt;NEXT SENTENCE&lt;/code&gt; clause due to the truth or falsehood of &lt;var&gt;conditional-expression&lt;/var&gt;, control will be transferred to the first statement of the next sentence found in the program (the first statement after the next period).</source>
          <target state="translated">&lt;code&gt;NEXT SENTENCE&lt;/code&gt; 절 은 명령문 중 하나를 대체 할 수 있지만 둘다는 아닙니다. 제어가 &lt;var&gt;conditional-expression&lt;/var&gt; 의 진실 또는 거짓으로 인해 &lt;code&gt;NEXT SENTENCE&lt;/code&gt; 절에 도달 하면 프로그램에서 찾은 다음 문장의 첫 번째 문장 (다음 마침표 이후의 첫 번째 문장)으로 제어가 이전됩니다.</target>
        </trans-unit>
        <trans-unit id="5b04c8465e3f01970c39349107b85f0ed7771205" translate="yes" xml:space="preserve">
          <source>The clause may only be specified in the &lt;code&gt;FD&lt;/code&gt; of a sequential or line sequential file. If used with a sequential file, the organization of that file will be implicitly changed to line sequential.</source>
          <target state="translated">절은 순차 또는 행 순차 파일 의 &lt;code&gt;FD&lt;/code&gt; 에서만 지정 될 수 있습니다 . 순차 파일과 함께 사용되는 경우 해당 파일의 구성은 암시 적으로 행 순차로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="4ae6f110ef61f7a12b2f22ade66af5db6244fb56" translate="yes" xml:space="preserve">
          <source>The clause may only be specified in the&lt;code&gt;FD&lt;/code&gt;of a sequential or line sequential file. If used with a sequential file, the organization of that file will be implicitly changed to line sequential.</source>
          <target state="translated">이 절은 순차 또는 행 순차 파일 의 &lt;code&gt;FD&lt;/code&gt; 에만 지정할 수 있습니다 . 순차 파일과 함께 사용하면 해당 파일의 구성이 내재적으로 행 순차로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="1b5df7cc42621acf4d2a1e91d24e2a95ce0fdafc" translate="yes" xml:space="preserve">
          <source>The clause&lt;code&gt;NEXT SENTENCE&lt;/code&gt;</source>
          <target state="translated">절이 &lt;code&gt;NEXT SENTENCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e88f5abd7fb4d8c92997c61daa631c342441bc31" translate="yes" xml:space="preserve">
          <source>The clauses &lt;code&gt;VALUE IS&lt;/code&gt; and &lt;code&gt;VALUES ARE&lt;/code&gt; are interchangeable.</source>
          <target state="translated">&lt;code&gt;VALUE IS&lt;/code&gt; 및 &lt;code&gt;VALUES ARE&lt;/code&gt; 절 은 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9349436fdebab35446653f1b91e8936037dee0b" translate="yes" xml:space="preserve">
          <source>The clauses&lt;code&gt;VALUE IS&lt;/code&gt;and&lt;code&gt;VALUES ARE&lt;/code&gt;are interchangeable.</source>
          <target state="translated">&lt;code&gt;VALUE IS&lt;/code&gt; 및 &lt;code&gt;VALUES ARE&lt;/code&gt; 절 은 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99ddc0efa0662a65831e8cf91d764929a11acaa2" translate="yes" xml:space="preserve">
          <source>The code within the handler will be executed and &amp;mdash; once the handler issues a &lt;code&gt;return&lt;/code&gt;, if it was written in C, or an &lt;code&gt;EXIT PROGRAM&lt;/code&gt; statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) or &lt;code&gt;GOBACK&lt;/code&gt; statement, if it was written in GnuCOBOL, the system-standard error handling routine will be executed.</source>
          <target state="translated">핸들러 내의 코드가 실행되고 &amp;mdash; 핸들러 가 C로 작성된 경우 &lt;code&gt;return&lt;/code&gt; , GnuCOBOL로 작성된 경우 &lt;code&gt;EXIT PROGRAM&lt;/code&gt; 문 ( &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt; 참조 ) 또는 &lt;code&gt;GOBACK&lt;/code&gt; 문을 실행하면 시스템 표준 오류 처리 루틴이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="008211cc7ad52b496143230ab11a510ed29126b7" translate="yes" xml:space="preserve">
          <source>The code within the handler will be executed and &amp;mdash; once the handler issues a&lt;code&gt;return&lt;/code&gt; if it was written in C, or an&lt;code&gt;EXIT PROGRAM&lt;/code&gt;statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) or&lt;code&gt;GOBACK&lt;/code&gt;statement, if it was written in GnuCOBOL, the system-standard error handling routine will be executed.</source>
          <target state="translated">처리기 내의 코드가 실행되고 처리기 에서 C로 작성된 경우 &lt;code&gt;return&lt;/code&gt; 발행 하거나 &lt;code&gt;EXIT PROGRAM&lt;/code&gt; 문 ( &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt; 참조 ) 또는 &lt;code&gt;GOBACK&lt;/code&gt; 문을 시스템 표준 오류 처리 루틴 인 GnuCOBOL로 작성된 경우 리턴합니다. 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="5c50efba0de4882c9b9bd2581965327e0ce65786" translate="yes" xml:space="preserve">
          <source>The coding example shown above is incomplete &amp;mdash; it only describes the data item names and their hierarchical relationships to one other. In addition, any valid data item definitions will also need to describe what type of data is to be contained in a data item (Numeric? Alphanumeric? Alphabetic?), how much data can be held in the data item and a multitude of other characteristics.</source>
          <target state="translated">위에 표시된 코딩 예제는 불완전합니다. 데이터 항목 이름과 계층 구조 간의 관계 만 설명합니다. 또한 유효한 데이터 항목 정의는 데이터 항목에 포함 할 데이터 유형 (숫자? 영숫자? 알파벳?), 데이터 항목에 보유 할 수있는 데이터 양 및 기타 여러 특성을 설명해야합니다. .</target>
        </trans-unit>
        <trans-unit id="3a12e140f10d401fc8251f59d63ac656ad961596" translate="yes" xml:space="preserve">
          <source>The coding example shown above is incomplete; it only describes the data item names and their hierarchical relationships to one other. In addition, any valid data item definitions will also need to describe what type of data is to be contained in a data item (Numeric? Alphanumeric? Alphabetic?), how much data can be held in the data item and a multitude of other characteristics.</source>
          <target state="translated">위에 표시된 코딩 예제는 불완전합니다. 데이터 항목 이름과 서로에 대한 계층 적 관계 만 설명합니다. 또한 유효한 데이터 항목 정의는 데이터 항목에 포함될 데이터 유형 (숫자? 영숫자? 알파벳?), 데이터 항목에 보관할 수있는 데이터 양 및 기타 여러 특성을 설명해야합니다. .</target>
        </trans-unit>
        <trans-unit id="3d03c998fd0596c11fb61f3b9580ea38b99ddabe" translate="yes" xml:space="preserve">
          <source>The collection of all compilation units being compiled by a single execution of the GnuCOBOL compiler.</source>
          <target state="translated">GnuCOBOL 컴파일러의 단일 실행으로 컴파일되는 모든 컴파일 단위의 콜렉션.</target>
        </trans-unit>
        <trans-unit id="214b051354d10a734ed105a17e23c32dc27ec906" translate="yes" xml:space="preserve">
          <source>The collection of compilation units supplied on a</source>
          <target state="translated">에 제공되는 컴파일 단위 모음</target>
        </trans-unit>
        <trans-unit id="6ee96246774f2016428a38d6e634c7bddc6145fd" translate="yes" xml:space="preserve">
          <source>The column coordinate of a field may be stated on an absolute basis (</source>
          <target state="translated">필드의 열 좌표는 절대 기준 (</target>
        </trans-unit>
        <trans-unit id="244bf7a6f7eb71c8ef7fc994d68ca151f6d8b1db" translate="yes" xml:space="preserve">
          <source>The column coordinate of a field may be stated on an absolute basis (i.e.&lt;code&gt;COLUMN 5&lt;/code&gt; or on a relative basis based upon the end of the previously-presented field (i.e.&lt;code&gt;COLUMN PLUS 1&lt;/code&gt;.</source>
          <target state="translated">필드의 열 좌표는 절대적으로 (즉, &lt;code&gt;COLUMN 5&lt;/code&gt; ) 또는 이전에 제시된 필드의 끝 (즉, &lt;code&gt;COLUMN PLUS 1&lt;/code&gt; )에 기초하여 상대적으로 표시 될 수있다 .</target>
        </trans-unit>
        <trans-unit id="448bc1e73a2b116ed1a91994b30abbea981bf2d0" translate="yes" xml:space="preserve">
          <source>The column location of a report item will be determined by the &lt;code&gt;COLUMN&lt;/code&gt; (see &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt;) clause.</source>
          <target state="translated">보고서 항목의 열 위치는 &lt;code&gt;COLUMN&lt;/code&gt; ( &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt; 참조 ) 절에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b93877ee9257dbc99209a5c7fb91213f8d23947" translate="yes" xml:space="preserve">
          <source>The column location of a report item will be determined by the&lt;code&gt;COLUMN&lt;/code&gt;(see &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt;) clause.</source>
          <target state="translated">보고서 항목의 열 위치는 &lt;code&gt;COLUMN&lt;/code&gt; ( &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt; 참조 ) 절에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="12fe7a74995f17e1eda816efac3e68d3893039fd" translate="yes" xml:space="preserve">
          <source>The column location of a screen section field is determined by the &lt;code&gt;COLUMN&lt;/code&gt; (see &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt;) clause.</source>
          <target state="translated">화면 섹션 필드의 열 위치는 &lt;code&gt;COLUMN&lt;/code&gt; ( &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt; 참조 ) 절에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="e0c0f041ea07da668a59e14316da54abd2b876fb" translate="yes" xml:space="preserve">
          <source>The column location of a screen section field is determined by the&lt;code&gt;COLUMN&lt;/code&gt;(see &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt;) clause.</source>
          <target state="translated">화면 섹션 필드의 열 위치는 &lt;code&gt;COLUMN&lt;/code&gt; ( &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt; 참조 ) 절에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="47f3cecb739025dfafe39a9552dda5eb3d52fdaa" translate="yes" xml:space="preserve">
          <source>The compiler can be instructed to operate in either mode in any of the following four ways:</source>
          <target state="translated">컴파일러는 다음 네 가지 방법 중 하나로 어느 모드에서나 작동하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e86e6476c70bc2f30ac79d2cdfbf94dbb51d84f3" translate="yes" xml:space="preserve">
          <source>The compiler command-line option</source>
          <target state="translated">컴파일러 명령 줄 옵션</target>
        </trans-unit>
        <trans-unit id="31e5aa86cbb8f0d27b7968900f1e70f1b17c855b" translate="yes" xml:space="preserve">
          <source>The compiler&amp;rsquo;s</source>
          <target state="translated">컴파일러의</target>
        </trans-unit>
        <trans-unit id="8d6ed42883bd12f9da0b336d2aef8d29dd50e196" translate="yes" xml:space="preserve">
          <source>The compiler&amp;rsquo;s&lt;code&gt;-Wobsolete&lt;/code&gt;switch</source>
          <target state="translated">컴파일러의 &lt;code&gt;-Wobsolete&lt;/code&gt; 스위치</target>
        </trans-unit>
        <trans-unit id="375644e682777f766599de470de6694fa6af7f58" translate="yes" xml:space="preserve">
          <source>The complete list of &lt;code&gt;WHEN&lt;/code&gt; clauses (except for the &lt;code&gt;WHEN OTHER&lt;/code&gt; clause, if any) has been exhausted. In this case, there is no &amp;rsquo;</source>
          <target state="translated">&lt;code&gt;WHEN&lt;/code&gt; 절의 전체 목록 (있는 경우 &lt;code&gt;WHEN OTHER&lt;/code&gt; 절 제외 )이 소진되었습니다. 이 경우 '</target>
        </trans-unit>
        <trans-unit id="c78816f1e06fcb7dd59c87fb9883ec962d7e7c3b" translate="yes" xml:space="preserve">
          <source>The complete list of&lt;code&gt;WHEN&lt;/code&gt;clauses (except for the&lt;code&gt;WHEN OTHER&lt;/code&gt;clause, if any) has been exhausted. In this case, there is no &amp;rsquo;</source>
          <target state="translated">&lt;code&gt;WHEN&lt;/code&gt; 절의 전체 목록 ( &lt;code&gt;WHEN OTHER&lt;/code&gt; 절 (있는 경우) 제외 )이 소진되었습니다. 이 경우 '</target>
        </trans-unit>
        <trans-unit id="79ab50e44d766a80683ec533a48f74342a8a54f9" translate="yes" xml:space="preserve">
          <source>The complete set of executable code that is run during the execution of a program. This includes the main program as well as all executed subprograms, including those that are both dynamically and statically loaded.</source>
          <target state="translated">프로그램 실행 중에 실행되는 완전한 실행 가능 코드 세트입니다. 여기에는 주 프로그램뿐만 아니라 동적 및 정적으로로드되는 서브 프로그램을 포함하여 실행 된 모든 서브 프로그램이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b954bd345ff245b036f946799f6aa10e873adc08" translate="yes" xml:space="preserve">
          <source>The condition names &lt;code&gt;TINY&lt;/code&gt;, &lt;code&gt;XS&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;XL&lt;/code&gt;, &lt;code&gt;XXL&lt;/code&gt;, &lt;code&gt;XXXL&lt;/code&gt; and &lt;code&gt;VERY-LARGE&lt;/code&gt; will have &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt; values based upon the values within their parent data item (&lt;code&gt;SHIRT-SIZE&lt;/code&gt;).</source>
          <target state="translated">조건 이름 &lt;code&gt;TINY&lt;/code&gt; , &lt;code&gt;XS&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;M&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;XL&lt;/code&gt; , &lt;code&gt;XXL&lt;/code&gt; , &lt;code&gt;XXXL&lt;/code&gt; 및 &lt;code&gt;VERY-LARGE&lt;/code&gt; 는 부모 데이터 항목 ( &lt;code&gt;SHIRT-SIZE&lt;/code&gt; ) 내의 값을 기반으로 &lt;code&gt;TRUE&lt;/code&gt; 또는 &lt;code&gt;FALSE&lt;/code&gt; 값을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="f2cbd2a54ec3b877e938cd40057327547a2b7716" translate="yes" xml:space="preserve">
          <source>The condition names&lt;code&gt;TINY&lt;/code&gt;&lt;code&gt;XS&lt;/code&gt;&lt;code&gt;S&lt;/code&gt;&lt;code&gt;M&lt;/code&gt;&lt;code&gt;L&lt;/code&gt;&lt;code&gt;XL&lt;/code&gt;&lt;code&gt;XXL&lt;/code&gt;&lt;code&gt;XXXL&lt;/code&gt;and&lt;code&gt;VERY-LARGE&lt;/code&gt;will have TRUE or FALSE values based upon the values within their parent data item (SHIRT-SIZE).</source>
          <target state="translated">조건 이름 &lt;code&gt;TINY&lt;/code&gt; &lt;code&gt;XS&lt;/code&gt; &lt;code&gt;S&lt;/code&gt; &lt;code&gt;M&lt;/code&gt; &lt;code&gt;L&lt;/code&gt; &lt;code&gt;XL&lt;/code&gt; &lt;code&gt;XXL&lt;/code&gt; &lt;code&gt;XXXL&lt;/code&gt; 및 &lt;code&gt;VERY-LARGE&lt;/code&gt; 는 상위 데이터 항목 (SHIRT-SIZE)의 값에 따라 TRUE 또는 FALSE 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a21181dbdd6357193e1899865b1e8fc13ca1ddd5" translate="yes" xml:space="preserve">
          <source>The configuration section is not allowed in a nested subprogram &amp;mdash; nested programs will inherit the configuration section settings of their parent program.</source>
          <target state="translated">중첩 서브 프로그램에서는 구성 섹션을 사용할 수 없습니다. 중첩 프로그램은 상위 프로그램의 구성 섹션 설정을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="ef9bccb057f8bacb23c62c5c4afdfc0cca3a32cd" translate="yes" xml:space="preserve">
          <source>The configuration section is not allowed in a nested subprogram. A nested program inherits the configuration section settings of its parent program.</source>
          <target state="translated">구성 섹션은 중첩 된 하위 프로그램에서 허용되지 않습니다. 중첩 프로그램은 상위 프로그램의 구성 섹션 설정을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="bcc7d4eba969466959d4facc9f0d7ee8492f5862" translate="yes" xml:space="preserve">
          <source>The contents of each &amp;lt;</source>
          <target state="translated">각 &amp;lt;의 내용</target>
        </trans-unit>
        <trans-unit id="c6edb3c30f265163ce4d426db6cd5c3557b57cb3" translate="yes" xml:space="preserve">
          <source>The contents of each &lt;var&gt;identifier-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; will remain unchanged by this statement, unless they happen to also be specified as an &lt;var&gt;identifier-3&lt;/var&gt;.</source>
          <target state="translated">각 &lt;var&gt;identifier-1&lt;/var&gt; 및 &lt;var&gt;identifier-2&lt;/var&gt; 의 내용은 &lt;var&gt;identifier-3&lt;/var&gt; 로도 지정되지 않는 한이 명령문에 의해 변경되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e3b1375e35ed7c539ddf4f3ba4fbd2125aa492cb" translate="yes" xml:space="preserve">
          <source>The contents of each &lt;var&gt;identifier-1&lt;/var&gt; will remain unchanged by this statement.</source>
          <target state="translated">각 &lt;var&gt;identifier-1&lt;/var&gt; 의 내용은 이 명령문에 의해 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff49f56349d2fd918bf85a2fd664a7da8d0619ed" translate="yes" xml:space="preserve">
          <source>The contents of the &amp;lt;</source>
          <target state="translated">&amp;lt;의 내용</target>
        </trans-unit>
        <trans-unit id="cdd4025cdff1541d2a76b959e44f2b17f8d8741f" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;var&gt;identifier-1&lt;/var&gt; data item will not be changed, unless that same data item appears as an &lt;var&gt;identifier-2&lt;/var&gt;. Note that such situations will cause a warning message to be issued by the compiler, if warning messages are enabled.</source>
          <target state="translated">동일한 데이터 항목이 &lt;var&gt;identifier-2&lt;/var&gt; 로 나타나지 않는 한 &lt;var&gt;identifier-1&lt;/var&gt; 데이터 항목 의 내용은 변경되지 않습니다 . 이러한 상황은 경고 메시지가 활성화 된 경우 컴파일러에서 경고 메시지를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="0db251041cbacb6ca7c72e0d339c02b1a66960c3" translate="yes" xml:space="preserve">
          <source>The contents of these files consist of a series of fixed-length data records prefixed with a four-byte record header. The record header contains the length of the data, in bytes. The byte-count does not include the four-byte record header.</source>
          <target state="translated">이 파일의 내용은 4 바이트 레코드 헤더가 접두어로 붙은 일련의 고정 길이 데이터 레코드로 구성됩니다. 레코드 헤더에는 데이터 길이 (바이트)가 포함됩니다. 바이트 수에는 4 바이트 레코드 헤더가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dbef177584a2393f70bf64c2347f91cf97f3f10f" translate="yes" xml:space="preserve">
          <source>The currency string if any, and any grouping separators preceding the decimal separator are ignored. Optionally, the currency string, sign convention, grouping separator and the decimal separator permitted in the character string may be specified by locale category &lt;code&gt;LC-MONETARY&lt;/code&gt;, or the currency string may be specified by &lt;var&gt;symbol&lt;/var&gt;.</source>
          <target state="translated">통화 문자열 (있는 경우)과 소수 구분 기호 앞의 그룹 구분 기호는 무시됩니다. 선택적으로 문자열에 허용되는 통화 문자열, 부호 규칙, 그룹화 구분 기호 및 소수 구분 기호는 로케일 범주 &lt;code&gt;LC-MONETARY&lt;/code&gt; 로 지정되거나 통화 문자열은 &lt;var&gt;symbol&lt;/var&gt; 로 지정 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="753f2e99cad8352a6f6d070e145896067c2792da" translate="yes" xml:space="preserve">
          <source>The current content of the process&amp;acirc; storage (including LOCAL-STORAGE) will be identical, any file handles get invalid in the new process, positions and file / record locks are only available to the original process.</source>
          <target state="translated">LOCAL-STORAGE를 포함한 프로세스 스토리지의 현재 컨텐츠는 동일하며, 새로운 프로세스에서 모든 파일 핸들이 유효하지 않으며, 위치 및 파일 / 레코드 잠금은 원래 프로세스에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9a395fc1dc3638b39cb40f91a68dfc01be9f095" translate="yes" xml:space="preserve">
          <source>The current content of the process&amp;rsquo;s storage (including LOCAL-STORAGE) will be identical, any file handles get invalid in the new process, positions and file and record locks are only available to the original process.</source>
          <target state="translated">프로세스 스토리지 (LOCAL-STORAGE 포함)의 현재 내용은 동일하며 모든 파일 핸들은 새 프로세스에서 유효하지 않으며 위치 및 파일 및 레코드 잠금은 원래 프로세스에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95adda65d9560f9807e28050afd0114faee1b345" translate="yes" xml:space="preserve">
          <source>The current page number of the report</source>
          <target state="translated">보고서의 현재 페이지 번호</target>
        </trans-unit>
        <trans-unit id="7b7886ea4cdbd69dbc9b8b803d802d2b9f25fcc5" translate="yes" xml:space="preserve">
          <source>The current value in each &amp;lt;</source>
          <target state="translated">각 &amp;lt;의 현재 값</target>
        </trans-unit>
        <trans-unit id="ce4e620ab474697cd6f44ecc9bdf0542bb64e243" translate="yes" xml:space="preserve">
          <source>The current value in each &lt;var&gt;identifier-3&lt;/var&gt; at the start of the statement&amp;rsquo;s execution is irrelevant, since the contents of each &lt;var&gt;identifier-3&lt;/var&gt; will simply be replaced with the computed sum.</source>
          <target state="translated">각각의 전류 값 &lt;var&gt;identifier-3&lt;/var&gt; 각각의 내용 때문에 명령문의 실행의 시작은 무관 &lt;var&gt;identifier-3&lt;/var&gt; 단순히 계산 된 합으로 대체된다.</target>
        </trans-unit>
        <trans-unit id="5238a4b5e07912a88eb9f8c108045e83164f93e1" translate="yes" xml:space="preserve">
          <source>The cursor or mouse position will be returned as well. The position is expressed as row and column (rrcc or rrrccc).</source>
          <target state="translated">커서 또는 마우스 위치도 반환됩니다. 위치는 행과 열 (rrcc 또는 rrrccc)로 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="28364140bbc09eff11e7073c30aa37f462dc59a8" translate="yes" xml:space="preserve">
          <source>The data division consists of six optional sections &amp;mdash; when used, those sections must be coded in the order shown in the syntax diagram.</source>
          <target state="translated">데이터 분할은 6 개의 선택 섹션으로 구성됩니다. 사용되는 경우 해당 섹션은 구문 다이어그램에 표시된 순서대로 코딩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d1bd0ffc2783d74d456d45414e4d5ca7f9d21765" translate="yes" xml:space="preserve">
          <source>The data item &amp;lt;</source>
          <target state="translated">데이터 항목 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="3ac89cbc543c1a35a6f2c48d093a47f3de87c84c" translate="yes" xml:space="preserve">
          <source>The data item &lt;var&gt;identifier-9&lt;/var&gt; must be the name of a detail group specified in the same report as the control footing group in which this &lt;code&gt;SUM&lt;/code&gt; clause appears.</source>
          <target state="translated">데이터 항목 &lt;var&gt;identifier-9&lt;/var&gt; 는이 &lt;code&gt;SUM&lt;/code&gt; 절이 표시 되는 제어 기초 그룹과 동일한 보고서에 지정된 세부 정보 그룹의 이름이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="10b292fbf4f99a6c343a4817c7d529867fa1dc3a" translate="yes" xml:space="preserve">
          <source>The data item at the top, also referred to as a</source>
          <target state="translated">맨 위에있는 데이터 항목 (또는</target>
        </trans-unit>
        <trans-unit id="509d9d5663a18fba15f9359fe80954ed18bdbe00" translate="yes" xml:space="preserve">
          <source>The data item at the top, also referred to as a &quot;record&quot;, always has a level number of 01. After that, you may assign level numbers as you wish (01&amp;ndash;02&amp;ndash;03&amp;ndash;04&amp;hellip;, 01&amp;ndash;05&amp;ndash;10&amp;ndash;15&amp;hellip;, etc.), as long as you follow these simple rules:</source>
          <target state="translated">&quot;레코드&quot;라고도하는 상단의 데이터 항목은 항상 레벨 번호가 01입니다. 그 후 원하는대로 레벨 번호를 지정할 수 있습니다 (01&amp;ndash;02&amp;ndash;03&amp;ndash;04&amp;hellip;, 01&amp;ndash;05&amp;ndash;10 다음과 같은 간단한 규칙을 따르는 한 &amp;ndash;15&amp;hellip; 등) :</target>
        </trans-unit>
        <trans-unit id="4faba7a2ce4caf8e69f020e59c10d02d6cdcf45c" translate="yes" xml:space="preserve">
          <source>The data item contains a complete or partial date (&lt;code&gt;Birth-DT&lt;/code&gt;, &lt;code&gt; Birth-Month-DT&lt;/code&gt;, &lt;code&gt; Birth-Year-DT&lt;/code&gt;, &amp;hellip;)</source>
          <target state="translated">데이터 항목에 전체 또는 부분 날짜가 포함됩니다 ( &lt;code&gt;Birth-DT&lt;/code&gt; , &lt;code&gt; Birth-Month-DT&lt;/code&gt; , &lt;code&gt; Birth-Year-DT&lt;/code&gt; ,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="51843ff37218e9751abe9a7a1bce0bd1e6557008" translate="yes" xml:space="preserve">
          <source>The data item contains a complete or partial date (Birth-DT, Birth-Month-DT, Birth-Year-DT, &amp;hellip;)</source>
          <target state="translated">데이터 항목에 완전 날짜 또는 부분 날짜 (Birth-DT, Birth-Month-DT, Birth-Year-DT 등)가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4ef7ffd4c58840deeb058caa40ee4fa0de11216f" translate="yes" xml:space="preserve">
          <source>The data item contains a complete or partial screen description (appropriate for SCREEN SECTION 01-level data items).</source>
          <target state="translated">데이터 항목은 전체 또는 부분 화면 설명을 포함합니다 (SCREEN SECTION 01 수준 데이터 항목에 적합).</target>
        </trans-unit>
        <trans-unit id="677092baab05cabea573773ec5aed72fbe5076ee" translate="yes" xml:space="preserve">
          <source>The data item contains a complete or partial time value</source>
          <target state="translated">데이터 항목에 전체 또는 부분 시간 값이 포함됨</target>
        </trans-unit>
        <trans-unit id="cf96206e6b0c1eba2d85ff199ce380ec874ab973" translate="yes" xml:space="preserve">
          <source>The data item contains all or a part of an Address (&lt;code&gt;City-ADDR&lt;/code&gt;, &lt;code&gt;State-ADDR&lt;/code&gt;, &lt;code&gt;Street-ADDR&lt;/code&gt;, &amp;hellip;)</source>
          <target state="translated">데이터 항목은 주소의 전체 또는 일부를 포함합니다 ( &lt;code&gt;City-ADDR&lt;/code&gt; , &lt;code&gt;State-ADDR&lt;/code&gt; , &lt;code&gt;Street-ADDR&lt;/code&gt; ,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="2533c9fc67129b6b982ce9bd2ce4d5ee851e5da7" translate="yes" xml:space="preserve">
          <source>The data item contains all or a part of an Address (City-ADDR, State-ADDR, Street-ADDR, &amp;hellip;)</source>
          <target state="translated">데이터 항목은 주소의 전체 또는 일부를 포함합니다 (City-ADDR, State-ADDR, Street-ADDR,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="636cb43f8ed1c547b5bb3b2fa7de9d40fdf57cb0" translate="yes" xml:space="preserve">
          <source>The data item contains generic alphanumeric text that doesn&amp;rsquo;t fit into any of the other categories.</source>
          <target state="translated">데이터 항목에 다른 범주에 맞지 않는 일반 영숫자 텍스트가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="00961ba2f26e03ca0585c914e271e4f5e3367346" translate="yes" xml:space="preserve">
          <source>The data item contains nothing but &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; symbols.</source>
          <target state="translated">데이터 항목에는 &lt;code&gt;N&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; 및 &lt;code&gt;0&lt;/code&gt; 기호 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a42dccd6fd6eb7bc17ba1f4149ae5122aa3bd569" translate="yes" xml:space="preserve">
          <source>The data item contains nothing but&lt;code&gt;N&lt;/code&gt;&lt;code&gt;B&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;and&lt;code&gt;0&lt;/code&gt;symbols.</source>
          <target state="translated">데이터 항목에는 &lt;code&gt;N&lt;/code&gt; &lt;code&gt;B&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; 및 &lt;code&gt;0&lt;/code&gt; 기호 만 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="b316078a926b39110ca00478e1b2f2ddde221a62" translate="yes" xml:space="preserve">
          <source>The data item is one containing nothing but the &lt;code&gt;N&lt;/code&gt; symbol.</source>
          <target state="translated">데이터 항목은 &lt;code&gt;N&lt;/code&gt; 기호 만 포함하는 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="bd90847c6ca5515697783a7609ebee0a691387e8" translate="yes" xml:space="preserve">
          <source>The data item is one containing nothing but the&lt;code&gt;N&lt;/code&gt;symbol.</source>
          <target state="translated">데이터 항목은 &lt;code&gt;N&lt;/code&gt; 기호 만 포함 된 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="ccef3619893c3284e2fe547c513ad6f507223ae0" translate="yes" xml:space="preserve">
          <source>The data item is one that is described with a picture less &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) or has a &lt;code&gt;PICTURE&lt;/code&gt; composed of nothing but &lt;code&gt;P&lt;/code&gt;, &lt;code&gt;9&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt; symbols.</source>
          <target state="translated">데이터 항목은 &lt;code&gt;USAGE&lt;/code&gt; ( &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; 참조 )를 제외한 &lt;code&gt;PICTURE&lt;/code&gt; 으로 설명 되거나 &lt;code&gt;P&lt;/code&gt; , &lt;code&gt;9&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; 및 &lt;code&gt;V&lt;/code&gt; 기호 로만 구성된 PICTURE를 가진 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="061132714c8674745cd158cff7651f996b099908" translate="yes" xml:space="preserve">
          <source>The data item is one that is described with a picture less&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) or has a&lt;code&gt;PICTURE&lt;/code&gt;composed of nothing but&lt;code&gt;P&lt;/code&gt;&lt;code&gt;9&lt;/code&gt;&lt;code&gt;S&lt;/code&gt;and&lt;code&gt;V&lt;/code&gt;symbols.</source>
          <target state="translated">데이터 항목은 &lt;code&gt;USAGE&lt;/code&gt; ( &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; 참조 ) 이하의 그림으로 설명 되거나 &lt;code&gt;P&lt;/code&gt; &lt;code&gt;9&lt;/code&gt; &lt;code&gt;S&lt;/code&gt; 및 &lt;code&gt;V&lt;/code&gt; 기호 &lt;code&gt;PICTURE&lt;/code&gt; 구성된 PICTURE를 갖는 항목 입니다.</target>
        </trans-unit>
        <trans-unit id="093ee7f05fc1211641ebb22093984fe7433f9c53" translate="yes" xml:space="preserve">
          <source>The data retrieved from the system and the format in which it is structured will vary, as follows:</source>
          <target state="translated">시스템에서 검색된 데이터 및 시스템 구성 형식은 다음과 같이 다양합니다.</target>
        </trans-unit>
        <trans-unit id="812dd93115bc739beb075252ce2bb8e51f04471d" translate="yes" xml:space="preserve">
          <source>The data to be sorted is loaded into the sort work file either by copying the entire contents of the file(s) named on the &lt;code&gt;USING&lt;/code&gt; clause (done automatically by the sort) or by utilizing an input procedure.</source>
          <target state="translated">정렬 할 데이터는 &lt;code&gt;USING&lt;/code&gt; 절 (정렬에 의해 자동으로 수행됨 )에 명명 된 파일의 전체 내용을 복사 하거나 입력 절차를 사용하여 정렬 작업 파일에로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3b7e1589b15e4bdfcdfd30052ff624104478aab" translate="yes" xml:space="preserve">
          <source>The data to be sorted is loaded into the sort work file either by copying the entire contents of the file(s) named on the&lt;code&gt;USING&lt;/code&gt;clause (done automatically by the sort) or by utilizing an input procedure.</source>
          <target state="translated">정렬 될 데이터는 &lt;code&gt;USING&lt;/code&gt; 절 에 이름 지정된 파일의 전체 내용을 복사하거나 (정렬에 의해 자동으로 수행됨) 입력 절차를 사용하여 정렬 작업 파일에로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="03bd14aafbf0bb2d0d90b32baade5f53e82a1873" translate="yes" xml:space="preserve">
          <source>The data within &amp;lt;</source>
          <target state="translated">&amp;lt;내의 데이터</target>
        </trans-unit>
        <trans-unit id="8454e66dee9ce8be938f6dd88e2cc9a04321afc9" translate="yes" xml:space="preserve">
          <source>The data within &lt;var&gt;table-name-1&lt;/var&gt; will be sorted in-place (i.e. no sort file is required).</source>
          <target state="translated">&lt;var&gt;table-name-1&lt;/var&gt; 내의 데이터 는 제자리에서 정렬됩니다 (즉, 정렬 파일이 필요하지 않음).</target>
        </trans-unit>
        <trans-unit id="26a1f1ee8c10998d5c8bb705837530f56120d8f6" translate="yes" xml:space="preserve">
          <source>The data-pointer specified in a &lt;code&gt;FREE&lt;/code&gt; statement does not identify currently allocated storage</source>
          <target state="translated">&lt;code&gt;FREE&lt;/code&gt; 문에 지정된 데이터 포인터 가 현재 할당 된 스토리지를 식별하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bdc2d668890fa142f4bca9eb22c5ad4bb6977c9f" translate="yes" xml:space="preserve">
          <source>The data-pointer specified in a FREE statement does not identify currently allocated storage</source>
          <target state="translated">FREE 문에 지정된 데이터 포인터가 현재 할당 된 스토리지를 식별하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0579c8205e98600e7650685aa13310c1688563f8" translate="yes" xml:space="preserve">
          <source>The date the report was generated</source>
          <target state="translated">보고서가 생성 된 날짜</target>
        </trans-unit>
        <trans-unit id="070db0540d0e286e538aa6839bd9fddf9e40b64d" translate="yes" xml:space="preserve">
          <source>The declaratives area may contain any number of declarative procedures, but no two declarative procedures should be coded to trap the same event.</source>
          <target state="translated">선언 영역에는 여러 선언 절차가 포함될 수 있지만 동일한 이벤트를 포착하기 위해 두 개의 선언 절차를 코딩해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="4fd14e124c3a504c73bc1a0840eca5de9952005e" translate="yes" xml:space="preserve">
          <source>The default prompt character, should no &lt;code&gt;CHARACTER&lt;/code&gt; specification be coded, or should the &lt;code&gt;PROMPT&lt;/code&gt; clause be absent altogether, is an underscore (&amp;lsquo;</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 사양이 코딩 되지 않았 거나 &lt;code&gt;PROMPT&lt;/code&gt; 절이 전혀없는 경우 기본 프롬프트 문자 는 밑줄 ( '</target>
        </trans-unit>
        <trans-unit id="aca339f3c37ec719e2ecda0ddafb137b677eb118" translate="yes" xml:space="preserve">
          <source>The default prompt character, should no&lt;code&gt;CHARACTER&lt;/code&gt;specification be coded, or should the&lt;code&gt;PROMPT&lt;/code&gt;clause be absent altogether, is an underscore (&quot;_&quot;).</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 스펙을 코딩 하지 않거나 &lt;code&gt;PROMPT&lt;/code&gt; 절이 모두없는 경우 기본 프롬프트 문자 는 밑줄 ( &quot;_&quot;)입니다.</target>
        </trans-unit>
        <trans-unit id="c902d33836fa0e99d672f9cd1f00b7a2a36a9c5c" translate="yes" xml:space="preserve">
          <source>The default, if this clause is absent, is &lt;code&gt;WITH TEST BEFORE&lt;/code&gt;.</source>
          <target state="translated">이 절이없는 경우 기본값은 &lt;code&gt;WITH TEST BEFORE&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="76162fd09f83782bd3efa0d736681e2507f4186e" translate="yes" xml:space="preserve">
          <source>The default, if this clause is absent, is&lt;code&gt;WITH TEST BEFORE&lt;/code&gt;</source>
          <target state="translated">이 절이 없으면 기본값은 &lt;code&gt;WITH TEST BEFORE&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="23486948cfdb6c2206b6fe6df69af3b36e2d6aa9" translate="yes" xml:space="preserve">
          <source>The development of so-called &quot;higher-level&quot; programming languages that enable a programmer to specify in a single statement of the language an action that would have required many more separate statements in a prior programming language. The standardization of such languages, making them usable on a wide variety of computers and operating systems, was a key aspect of this development. COBOL was a pioneering development in this area, being a direct descendant of the very first higher-level language (FLOW-MATIC, developed by US Naval Lieutenant Grace Hopper) and the first to become standardized.</source>
          <target state="translated">프로그래머가 이전 프로그래밍 언어에서 더 많은 별도의 명령문을 필요로하는 조치를 언어의 단일 명령문으로 지정할 수있게하는 소위 &quot;상위 레벨&quot;프로그래밍 언어의 개발. 이러한 언어의 표준화는 다양한 컴퓨터 및 운영 체제에서 사용할 수있게함으로써이 개발의 핵심 요소였습니다. COBOL은이 분야의 선구자적인 개발로, 최초의 고급 언어 (FLOW-MATIC, 미국 해군 중위 그레이스 호퍼가 개발)의 직계 자손이되었으며 최초로 표준화되었습니다.</target>
        </trans-unit>
        <trans-unit id="167493737a80cb721597d1ea1233f3e6c9826dca" translate="yes" xml:space="preserve">
          <source>The development of so-called &amp;ldquo;higher-level&amp;rdquo; programming languages that enable a programmer to specify in a single statement of the language an action that would have required many more separate statements in a prior programming language. The standardization of such languages, making them usable on a wide variety of computers and operating systems, was a key aspect of this development. COBOL was a pioneering development in this area, being a direct descendant of the very first higher-level language (FLOW-MATIC, developed by US Naval Lieutenant Grace Hopper) and the first to become standardized.</source>
          <target state="translated">프로그래머가 이전 프로그래밍 언어에서 더 많은 별도의 명령문을 필요로하는 동작을 단일 언어 명령문으로 지정할 수 있도록하는 소위 &quot;고급&quot;프로그래밍 언어의 개발입니다. 이러한 언어의 표준화를 통해 다양한 컴퓨터 및 운영 체제에서 사용할 수있게 된 것이이 개발의 핵심 요소였습니다. COBOL은이 분야에서 선구적인 개발이었으며, 최초의 상위 수준 언어 (FLOW-MATIC, 미국 해군 중위 그레이스 호퍼가 개발)의 직계 후손이며 최초로 표준화되었습니다.</target>
        </trans-unit>
        <trans-unit id="409dc90bef1df3c20d42d1c87c2cbcb0012b555e" translate="yes" xml:space="preserve">
          <source>The directive allows the program listing to be de-(activated).</source>
          <target state="translated">이 지시문은 프로그램 목록을 비활성화 (활성화) 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="fed5d6ec2002cf3c70111cfb63d054f6845dc0df" translate="yes" xml:space="preserve">
          <source>The directive allows usage of the IBM paging controls &lt;code&gt;EJECT&lt;/code&gt;, &lt;code&gt;SKIP1&lt;/code&gt;, &lt;code&gt;SKIP2&lt;/code&gt;, &lt;code&gt;SKIP3&lt;/code&gt; and &lt;code&gt;TITLE&lt;/code&gt;.</source>
          <target state="translated">지시문은 IBM 페이징 제어 &lt;code&gt;EJECT&lt;/code&gt; , &lt;code&gt;SKIP1&lt;/code&gt; , &lt;code&gt;SKIP2&lt;/code&gt; , &lt;code&gt;SKIP3&lt;/code&gt; 및 &lt;code&gt;TITLE&lt;/code&gt; 의 사용을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="3613a082ce453c368cc15bf5bd4386ee5ba42319" translate="yes" xml:space="preserve">
          <source>The directive is a v1.0 extension and will display messages during compilation.</source>
          <target state="translated">이 지시문은 v1.0 확장이며 컴파일 중에 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b27370883b2dbacb6f0633be940252ce0029062e" translate="yes" xml:space="preserve">
          <source>The directive removes all floating debug lines if debug mode not active. Otherwise will ignore the directive part of the line.</source>
          <target state="translated">이 지시문은 디버그 모드가 활성화되지 않은 경우 모든 부동 디버그 행을 제거합니다. 그렇지 않으면 라인의 지시문 부분을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="f2fd43812483db8b25efac197793aa920a3c4fbc" translate="yes" xml:space="preserve">
          <source>The directive will (de-)activate exception checks.</source>
          <target state="translated">지시문은 예외 검사를 (비) 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b2bb232847510a2f232673500b26f4b23a2d1dfd" translate="yes" xml:space="preserve">
          <source>The directory change remains in effect until the program terminates (in which the original current directory at the time the program was started will be automatically restored) or until another &lt;code&gt;C$CHDIR&lt;/code&gt; or a &lt;code&gt;CBL_CHANGE_DIR&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fCHANGE_005fDIR&quot;&gt;CBL_CHANGE_DIR&lt;/a&gt;) is executed.</source>
          <target state="translated">디렉토리 변경은 프로그램이 종료 될 때까지 (프로그램이 시작된 시점의 원래 현재 디렉토리가 자동으로 복원 될 때까지) 또는 다른 &lt;code&gt;C$CHDIR&lt;/code&gt; 또는 &lt;code&gt;CBL_CHANGE_DIR&lt;/code&gt; 내장 시스템 서브 루틴 ( &lt;a href=&quot;#CBL_005fCHANGE_005fDIR&quot;&gt;CBL_CHANGE_DIR&lt;/a&gt; 참조 )이 실행될 때까지 유효 합니다.</target>
        </trans-unit>
        <trans-unit id="1f7125104acd50d1b6770938916bee1dee953c6b" translate="yes" xml:space="preserve">
          <source>The directory change remains in effect until the program terminates (in which the original current directory at the time the program was started will be automatically restored) or until another &lt;code&gt;CBL_CHANGE_DIR&lt;/code&gt; or a &lt;code&gt;C$CHDIR&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#C_0024CHDIR&quot;&gt;C$CHDIR&lt;/a&gt;) is executed.</source>
          <target state="translated">디렉토리 변경은 프로그램이 종료 될 때까지 (프로그램이 시작된 시점의 원래 현재 디렉토리가 자동으로 복원 될 때까지) 또는 다른 &lt;code&gt;CBL_CHANGE_DIR&lt;/code&gt; 까지 유효합니다. 또는 &lt;code&gt;C$CHDIR&lt;/code&gt; 내장 시스템 서브 루틴 ( &lt;a href=&quot;#C_0024CHDIR&quot;&gt;C $ CHDIR&lt;/a&gt; 참조 )이 실행.</target>
        </trans-unit>
        <trans-unit id="d7f65f6fa8d0041b903e87080b6641df52724470" translate="yes" xml:space="preserve">
          <source>The directory change remains in effect until the program terminates (in which the original current directory at the time the program was started will be automatically restored) or until another&lt;code&gt;C$CHDIR&lt;/code&gt;or a&lt;code&gt;CBL_CHANGE_DIR&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fCHANGE_005fDIR&quot;&gt;CBL_CHANGE_DIR&lt;/a&gt;) is executed.</source>
          <target state="translated">디렉토리 변경은 프로그램이 종료 될 때까지 (프로그램이 시작될 때 원래의 현재 디렉토리가 자동으로 복원 될 때까지) 또는 다른 &lt;code&gt;C$CHDIR&lt;/code&gt; 또는 &lt;code&gt;CBL_CHANGE_DIR&lt;/code&gt; 내장 시스템 서브 루틴 ( &lt;a href=&quot;#CBL_005fCHANGE_005fDIR&quot;&gt;CBL_CHANGE_DIR&lt;/a&gt; 참조 )이 실행될 때까지 유효 합니다.</target>
        </trans-unit>
        <trans-unit id="f4dfc8592d054156d30359def5f586061b40662f" translate="yes" xml:space="preserve">
          <source>The discussion of the &lt;code&gt;MODULE-TIME&lt;/code&gt; (see &lt;a href=&quot;#MODULE_002dTIME&quot;&gt;MODULE-TIME&lt;/a&gt;) function includes a sample program that uses this function.</source>
          <target state="translated">토론 &lt;code&gt;MODULE-TIME&lt;/code&gt; (참조 &lt;a href=&quot;#MODULE_002dTIME&quot;&gt;MODULE 타임&lt;/a&gt; ) 기능이 기능을 사용하는 샘플 프로그램을 포함한다.</target>
        </trans-unit>
        <trans-unit id="47d702a74c8382865c30ba6659b7647fc532bcc7" translate="yes" xml:space="preserve">
          <source>The discussion of the&lt;code&gt;MODULE-TIME&lt;/code&gt;(see &lt;a href=&quot;#MODULE_002dTIME&quot;&gt;MODULE-TIME&lt;/a&gt;) function includes a sample program that uses this function.</source>
          <target state="translated">논의의 &lt;code&gt;MODULE-TIME&lt;/code&gt; (참조 &lt;a href=&quot;#MODULE_002dTIME&quot;&gt;MODULE 타임&lt;/a&gt; ) 기능이 기능을 사용하는 샘플 프로그램을 포함한다.</target>
        </trans-unit>
        <trans-unit id="f8f148914d26f8522b60c311a4673b0dd30c2494" translate="yes" xml:space="preserve">
          <source>The documentation of the &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) built-in subroutine illustrates the use of this function.</source>
          <target state="translated">문서 &lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; 내장 시스템 서브 루틴 ( &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt; 참조 ) 내장 서브 루틴 이 함수의 사용을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="edf6ffffc7fe722b4e216328bf864ac9991f5cdd" translate="yes" xml:space="preserve">
          <source>The documentation of the&lt;code&gt;CBL_ERROR_PROC&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) built-in subroutine illustrates the use of this function.</source>
          <target state="translated">&lt;code&gt;CBL_ERROR_PROC&lt;/code&gt; 내장 시스템 서브 루틴 ( &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt; 참조 ) 내장 서브 루틴 의 문서는 이 기능의 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3fdc91de8fcf580c1f4c2129e54ad4831b41a626" translate="yes" xml:space="preserve">
          <source>The effect of this statement will be as if the generated machine-language code for the &lt;code&gt;GO TO&lt;/code&gt; statement in &lt;var&gt;procedure-name-1&lt;/var&gt; is changed so that the &lt;code&gt;GO TO&lt;/code&gt; statement now transfers control to &lt;var&gt;procedure-name-2&lt;/var&gt;, rather than to whatever procedure name was specified in the program source code.</source>
          <target state="translated">이 명령문의 효과는 &lt;var&gt;procedure-name-1&lt;/var&gt; 에서 &lt;code&gt;GO TO&lt;/code&gt; 명령문에 대해 생성 된 기계어 코드 가 변경되어 &lt;code&gt;GO TO&lt;/code&gt; 문 이 어떤 프로 시저 이름이 아닌 &lt;var&gt;procedure-name-2&lt;/var&gt; 로 제어를 전송 . 프로그램 소스 코드에 지정되었습니다.</target>
        </trans-unit>
        <trans-unit id="9dc008342a397d791f64def930081c029113296b" translate="yes" xml:space="preserve">
          <source>The effect of this statement will be as if the generated machine-language code for the&lt;code&gt;GO TO&lt;/code&gt;statement in &amp;lt;</source>
          <target state="translated">이 명령문의 효과는 &amp;lt;에서 &lt;code&gt;GO TO&lt;/code&gt; 문의 생성 된 기계 언어 코드처럼</target>
        </trans-unit>
        <trans-unit id="8a54b81fa9b8872d2e004fe908ccaf268c5bb8a1" translate="yes" xml:space="preserve">
          <source>The effect of this statement will be to cause the specified files to share the same I/O buffer in memory. These buffers can sometimes get quite large, and by having multiple files share the same buffer memory you may significantly cut down the amount of memory the program is using (thus making &quot;room&quot; for more procedural code or data). If you do use this feature, take care to ensure that no more than one of the specified files are ever OPEN simultaneously.</source>
          <target state="translated">이 명령문의 효과는 지정된 파일이 메모리에서 동일한 I / O 버퍼를 공유하게합니다. 이러한 버퍼는 때때로 상당히 커질 수 있으며 여러 파일이 동일한 버퍼 메모리를 공유하도록하면 프로그램에서 사용중인 메모리의 양을 크게 줄일 수 있습니다 (따라서보다 절차적인 코드 또는 데이터를위한 &quot;룸&quot;만들기). 이 기능을 사용하는 경우 지정된 파일 중 하나만 동시에 열리지 않도록주의하십시오.</target>
        </trans-unit>
        <trans-unit id="58c0dca2f51a27d1bdc3b4d781e98ca3ab73c98c" translate="yes" xml:space="preserve">
          <source>The effect of this statement will be to cause the specified files to share the same I/O buffer in memory. These buffers can sometimes get quite large, and by having multiple files share the same buffer memory you may significantly cut down the amount of memory the program is using (thus making &amp;ldquo;room&amp;rdquo; for more procedural code or data). If you do use this feature, take care to ensure that no more than one of the specified files are ever OPEN simultaneously.</source>
          <target state="translated">이 명령문의 효과는 지정된 파일이 메모리에서 동일한 I / O 버퍼를 공유하게하는 것입니다. 이러한 버퍼는 때때로 상당히 커질 수 있으며 여러 파일이 동일한 버퍼 메모리를 공유하면 프로그램이 사용하는 메모리 양을 크게 줄일 수 있습니다 (따라서 더 많은 절차 코드 또는 데이터를위한 &quot;공간&quot;을 확보). 이 기능을 사용하는 경우 지정된 파일 중 하나 이상이 동시에 열리지 않도록주의하십시오.</target>
        </trans-unit>
        <trans-unit id="1bfb7711ac8de1935e9f880be51f1756b214302a" translate="yes" xml:space="preserve">
          <source>The effect of this statement will be to sort all transactions into ascending order of the date the transaction took place (oldest first, newest last). Unless the business running this program is going out of business, there are most-likely many transactions for any given date. Therefore, within each grouping of transactions all with the same date, transactions will be sub-sorted into ascending sequence of the account number the transactions apply to. Since it&amp;rsquo;s quite possible there might be multiple transactions for an account on any given date, a third level sub-sort will arrange all transactions for the same account on the same date into descending sequence of the actual amount of the transaction (largest first, smallest last). If two or more transactions of $100.00 were recorded for account #12345 on the 31&lt;sup&gt;st&lt;/sup&gt; of August 2009, those transactions will be retained in the order in which they were loaded into the sort work file.</source>
          <target state="translated">이 명령문의 효과는 모든 트랜잭션을 트랜잭션이 발생한 날짜의 오름차순으로 정렬하는 것입니다 (가장 오래된 것 먼저, 가장 최근의 것). 이 프로그램을 운영하는 사업이 폐업하지 않는 한, 주어진 날짜에 대해 대부분의 거래가있을 것입니다. 따라서 동일한 날짜의 각 거래 그룹 내에서 거래는 거래가 적용되는 계정 번호의 오름차순 순서로 하위 분류됩니다. 특정 날짜에 계정에 대해 여러 거래가있을 수 있으므로 세 번째 수준의 하위 정렬은 같은 날짜에 같은 계정에 대한 모든 거래를 실제 거래 금액의 내림차순으로 정렬합니다 (가장 큰 것 먼저, 가장 작은 것 마지막). 31 &lt;sup&gt;일&lt;/sup&gt; 에 계정 # 12345에 대해 $ 100.00의 거래가 두 번 이상 기록 된 경우&lt;sup&gt;&lt;/sup&gt; 2009 년 8 월부터 이러한 트랜잭션은 정렬 작업 파일에로드 된 순서대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="12239d80517acfbeb739c7ad78cb1d0e060e0dec" translate="yes" xml:space="preserve">
          <source>The effect of this statement will be to sort all transactions into ascending order of the date the transaction took place (oldest first, newest last). Unless the business running this program is going out of business, there are most-likely many transactions for any given date. Therefore, within each grouping of transactions all with the same date, transactions will be sub-sorted into ascending sequence of the account number the transactions apply to. Since it&amp;rsquo;s quite possible there might be multiple transactions for an account on any given date, a third level sub-sort will arrange all transactions for the same account on the same date into descending sequence of the actual amount of the transaction (largest first, smallest last). If two or more transactions of $100.00 were recorded for account #12345 on the 31st of August 2009, those transactions will be retained in the order in which they were loaded into the sort work file.</source>
          <target state="translated">이 진술의 효과는 모든 거래를 거래가 발생한 날짜 (오래된 것부터 가장 오래된 것)의 오름차순으로 정렬하는 것입니다. 이 프로그램을 운영하는 사업이 사업을 중단하지 않는 한, 주어진 날짜에 가장 많은 거래가있을 것입니다. 따라서 모든 날짜가 동일한 거래 그룹 내에서 거래는 거래가 적용되는 계좌 번호의 오름차순으로 분류됩니다. 특정 날짜에 한 계정에 대해 여러 개의 거래가있을 수 있으므로, 세 번째 수준 하위 정렬은 같은 날짜에 같은 계정에 대한 모든 거래를 실제 거래 금액의 내림차순으로 정렬합니다 (가장 큰 것부터 가장 작은 것) 마지막). 2009 년 8 월 31 일에 계정 # 12345에 대해 $ 100.00의 두 개 이상의 거래가 기록 된 경우,이러한 트랜잭션은 정렬 작업 파일에로드 된 순서대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="b09a4e8d54e81cbbc0597afbb1491af72f61fa18" translate="yes" xml:space="preserve">
          <source>The effective granularity of &amp;lt;</source>
          <target state="translated">&amp;lt;의 효과적인 입도</target>
        </trans-unit>
        <trans-unit id="3b149ef54c38054eb1424d091b8e71a3c6d89177" translate="yes" xml:space="preserve">
          <source>The effective granularity of &lt;var&gt;nanoseconds-to-sleep&lt;/var&gt; values will depend upon the granularity of the system clock your computer is using and the timing granularity of the operating system that computer is running.</source>
          <target state="translated">&lt;var&gt;nanoseconds-to-sleep&lt;/var&gt; 값 의 효과적인 단위는 컴퓨터에서 사용하는 시스템 시계의 단위와 컴퓨터가 실행중인 운영 체제의 시간 단위에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="9149b6bb86a6870ed2803491c5f8491faab144a6" translate="yes" xml:space="preserve">
          <source>The effects of &lt;code&gt;NEXT GROUP&lt;/code&gt; will be in addition to any line spacing defined by the next-presented group&amp;rsquo;s &lt;code&gt;LINE NUMBER&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;NEXT GROUP&lt;/code&gt; 의 효과는 다음에 제시된 그룹의 &lt;code&gt;LINE NUMBER&lt;/code&gt; 절에 의해 정의 된 모든 줄 간격에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="819d132e1cae0f32f83464203e1d97e1bd496c9c" translate="yes" xml:space="preserve">
          <source>The effects of&lt;code&gt;NEXT GROUP&lt;/code&gt;will be in addition to any line spacing defined by the next-presented group&amp;rsquo;s&lt;code&gt;LINE NUMBER&lt;/code&gt;clause.</source>
          <target state="translated">&lt;code&gt;NEXT GROUP&lt;/code&gt; 의 영향은 다음에 제시된 그룹의 &lt;code&gt;LINE NUMBER&lt;/code&gt; 절에 정의 된 줄 간격에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="bf6de9908ea1f1d94a644cf25bad22940fd4597e" translate="yes" xml:space="preserve">
          <source>The element being compiled does not contain the main program.</source>
          <target state="translated">컴파일중인 요소에 기본 프로그램이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7327030c21583ffcb89960cddedb6a47f13c2932" translate="yes" xml:space="preserve">
          <source>The elements of a table may be referenced either using a subscript or an index. Syntactically, this is coded using parenthesis, as per the following three examples, all of which store the letter &quot;A&quot; into the 17th occurrence of a data item named WSS-Output-Image-TXT:</source>
          <target state="translated">테이블의 요소는 아래 첨자 또는 인덱스를 사용하여 참조 할 수 있습니다. 구문 상, 이것은 다음 세 가지 예에 따라 괄호를 사용하여 코딩되며, 모두 &quot;A&quot;문자를 WSS-Output-Image-TXT라는 17 번째 데이터 항목에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="43657e7ca8e2cc14819d33b58c37c96c892199d1" translate="yes" xml:space="preserve">
          <source>The elements of a table may be referenced either using a subscript or an index. Syntactically, this is coded using parenthesis, as per the following three examples, all of which store the letter &amp;lsquo;</source>
          <target state="translated">테이블의 요소는 첨자 또는 색인을 사용하여 참조 할 수 있습니다. 구문 적으로 이것은 다음 세 가지 예에 따라 괄호를 사용하여 코딩되며 모두 문자 '</target>
        </trans-unit>
        <trans-unit id="1555f01785269fa22b78e8e757ddde1451bdf301" translate="yes" xml:space="preserve">
          <source>The end-of-record delimiter sequence will be &lt;code&gt;X&amp;lsquo;&lt;samp&gt;0A&lt;/samp&gt;&amp;rsquo;&lt;/code&gt; (an ASCII line-feed character) or a &lt;code&gt;X&amp;lsquo;&lt;samp&gt;0D0A&lt;/samp&gt;&amp;rsquo;&lt;/code&gt; (an ASCII carriage-return + line-feed sequence). The former is used on Unix implementations of GnuCOBOL (including Windows/MinGW, Windows/Cygwin and OSX implementations) while the latter would be used with native Windows implementations.</source>
          <target state="translated">레코드 끝 구분 기호 시퀀스는 다음과 같습니다. &lt;code&gt;X&amp;lsquo;&lt;samp&gt;0A&lt;/samp&gt;&amp;rsquo;&lt;/code&gt; (ASCII 줄 바꿈 문자) 또는 &lt;code&gt;X&amp;lsquo;&lt;samp&gt;0D0A&lt;/samp&gt;&amp;rsquo;&lt;/code&gt; (ASCII 캐리지 리턴 + 줄 바꿈 시퀀스). 전자는 GnuCOBOL의 Unix 구현 (Windows / MinGW, Windows / Cygwin 및 OSX 구현 포함)에서 사용되는 반면 후자는 네이티브 Windows 구현에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a21ba5e9570592ca1027bb2f7a967224830d4668" translate="yes" xml:space="preserve">
          <source>The end-of-record delimiter sequence will be X&amp;rsquo;0A&amp;rsquo; (an ASCII line-feed character) or a X&amp;rsquo;0D0A&amp;rsquo; (an ASCII carriage-return + line-feed sequence). The former is used on Unix implementations of GnuCOBOL (including Windows/MinGW, Windows/Cygwin and OSX implementations) while the latter would be used with native Windows implementations.</source>
          <target state="translated">레코드 끝 구분 기호 시퀀스는 X'0A '(ASCII 줄 바꿈 문자) 또는 X'0D0A'(ASCII 캐리지 리턴 + 줄 바꿈 시퀀스)입니다. 전자는 GnuCOBOL의 Unix 구현 (Windows / MinGW, Windows / Cygwin 및 OSX 구현 포함)에 사용되는 반면 후자는 기본 Windows 구현에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5393d59d2c5188d5bd57057ed1b7ce765115993b" translate="yes" xml:space="preserve">
          <source>The entry half-way between &quot;first&quot; and &quot;last&quot; is identified. We&amp;rsquo;ll call this the &quot;current&quot; entry, and will set its table entry location into &amp;lt;</source>
          <target state="translated">&quot;첫 번째&quot;와 &quot;마지막&quot;사이의 중간 항목이 식별됩니다. 이것을 &quot;현재&quot;항목이라고하고 테이블 항목 위치를 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="66bf381627c55bc779f337eb38e4056a9e0efc6a" translate="yes" xml:space="preserve">
          <source>The entry half-way between &amp;ldquo;first&amp;rdquo; and &amp;ldquo;last&amp;rdquo; is identified. We&amp;rsquo;ll call this the &amp;ldquo;current&amp;rdquo; entry, and will set its table entry location into &lt;var&gt;index-name-1&lt;/var&gt;.</source>
          <target state="translated">&quot;첫 번째&quot;와 &quot;마지막&quot;사이의 중간 항목이 식별됩니다. 이를 &quot;현재&quot;항목이라고 부르고 테이블 항목 위치를 &lt;var&gt;index-name-1&lt;/var&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="562eafa425d5bb9917e4277ba627641a28e9f466" translate="yes" xml:space="preserve">
          <source>The establishment of programming techniques AND the introduction of programming language capabilities to facilitate the re-usability of program code. Anything that supports code re-usability can have a profound impact to the amount of time it takes to develop new applications or to make significant changes to existing ones. In recent years, object-oriented programming (OOP) has been the industry &quot;poster child&quot; for code re-usability. By enabling program logic and the data structures that logic manipulates to be encapsulated into easily stored and retrieved (and therefore &quot;reusable&quot;) modules called classes, the object-oriented languages such as Java, C++ and C# have become the favourites of academia. Since students are being trained in these languages and only these, by and large, it&amp;rsquo;s no surprise that &amp;mdash; today &amp;mdash; object-oriented programming languages are the darlings of the industry.</source>
          <target state="translated">프로그램 코드의 재사용을 용이하게하는 프로그래밍 기술의 확립 및 프로그래밍 언어 능력의 도입. 코드 재사용 성을 지원하는 것은 새로운 응용 프로그램을 개발하거나 기존 응용 프로그램을 크게 변경하는 데 걸리는 시간에 큰 영향을 줄 수 있습니다. 최근에 객체 지향 프로그래밍 (OOP)은 코드 재사용을위한 업계 &quot;포스터 아이&quot;였습니다. 프로그램 로직과 로직이 조작하는 데이터 구조를 클래스라고하는 쉽게 저장 및 검색 (및 &quot;재사용 가능한&quot;) 모듈로 캡슐화 할 수있게함으로써 Java, C ++ 및 C #과 같은 객체 지향 언어는 학계에서 가장 선호되는 요소가되었습니다. 학생들이이 언어들과 그 밖의 언어로만 훈련을 받고 있기 때문에오늘날 객체 지향 프로그래밍 언어가 업계에서 가장 사랑받는 것은 놀라운 일이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="39f87b30dba600ad7ed2e2bb47c74ba2c05e5d56" translate="yes" xml:space="preserve">
          <source>The establishment of programming techniques AND the introduction of programming language capabilities to facilitate the re-usability of program code. Anything that supports code re-usability can have a profound impact to the amount of time it takes to develop new applications or to make significant changes to existing ones. In recent years, object-oriented programming (OOP) has been the industry &amp;ldquo;poster child&amp;rdquo; for code re-usability. By enabling program logic and the data structures that logic manipulates to be encapsulated into easily stored and retrieved (and therefore &amp;ldquo;reusable&amp;rdquo;) modules called classes, the object-oriented languages such as Java, C++ and C# have become the favourites of academia. Since students are being trained in these languages and only these, by and large, it&amp;rsquo;s no surprise that &amp;mdash; today &amp;mdash; object-oriented programming languages are the darlings of the industry.</source>
          <target state="translated">프로그래밍 기술의 확립과 프로그램 코드의 재사용을 용이하게하기위한 프로그래밍 언어 기능의 도입. 코드 재사용 성을 지원하는 모든 것은 새로운 애플리케이션을 개발하거나 기존 애플리케이션을 크게 변경하는 데 걸리는 시간에 큰 영향을 미칠 수 있습니다. 최근 몇 년 동안 객체 지향 프로그래밍 (OOP)은 코드 재사용을위한 업계 &quot;포스터 자식&quot;이었습니다. 프로그램 로직과 로직이 조작하는 데이터 구조를 클래스라고하는 쉽게 저장하고 검색 할 수있는 (따라서 &quot;재사용 가능한&quot;) 모듈로 캡슐화함으로써 Java, C ++ 및 C #과 같은 객체 지향 언어가 학계에서 선호하는 언어가되었습니다. 학생들이 이러한 언어로 훈련을 받고 있기 때문에오늘날 객체 지향 프로그래밍 언어가 업계의 사랑을 받고 있다는 것은 놀라운 일이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="3a941e78bfd44e622375d5cfbb84b9723ac379b7" translate="yes" xml:space="preserve">
          <source>The establishment of programming techniques that make programs easier to read and therefore easier to understand. Not only do such techniques reduce the amount of rework necessary simply to make a program work as designed, but they also reduce the amount of time a programmer needs to study an existing program in order how to best adapt it to changing business requirements. The foremost development in this area was structured programming. Introduced in the late 1970&amp;rsquo;s, this approach to programming spawned new programming languages (PASCAL, ALGOL, PL/1 and so forth) designed around it. With the ANSI 85 standard, COBOL embraced the principles espoused by structured programming mavens as well as any of the languages designed strictly around it.</source>
          <target state="translated">프로그램을보다 쉽게 ​​읽고 이해할 수있게하는 프로그래밍 기술의 확립 이러한 기술은 단순히 프로그램을 설계된대로 작동시키는 데 필요한 재 작업의 양을 줄일뿐만 아니라 프로그래머가 변화하는 비즈니스 요구 사항에 가장 잘 적응하는 방법으로 기존 프로그램을 연구하는 데 필요한 시간도 줄입니다. 이 분야에서 가장 발전된 것은 구조화 된 프로그래밍이었습니다. 1970 년대 후반에 도입 된이 프로그래밍 방식은 주변에 설계된 새로운 프로그래밍 언어 (PASCAL, ALGOL, PL / 1 등)를 개발했습니다. COBOL은 ANSI 85 표준을 사용하여 구조화 된 프로그래밍 Maven과 그 주위에서 엄격하게 설계된 모든 언어에 의해 채택 된 원칙을 채택했습니다.</target>
        </trans-unit>
        <trans-unit id="ea4db8e2a3ea6ae9699728ce46a3d9b27e5c43f0" translate="yes" xml:space="preserve">
          <source>The example shows how we initialize all parameters and call the routine until &lt;code&gt;CBL_GC_GETOPT&lt;/code&gt; runs out of options and returns -1.</source>
          <target state="translated">이 예제는 &lt;code&gt;CBL_GC_GETOPT&lt;/code&gt; 가 옵션을 모두 사용하고 -1을 반환 할 때까지 모든 매개 변수를 초기화하고 루틴을 호출하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c92c48309fd24df1bdfbef73b295a8c499a7ccf8" translate="yes" xml:space="preserve">
          <source>The example will display three results &amp;mdash; &amp;lsquo;</source>
          <target state="translated">이 예는 3 개의 결과를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="eb37202960698160f69c1faf432bf0473036f192" translate="yes" xml:space="preserve">
          <source>The example will display three results &amp;mdash;&lt;code&gt;34567.89&lt;/code&gt;&lt;code&gt;00019.00&lt;/code&gt;and&lt;code&gt;00007.20&lt;/code&gt;</source>
          <target state="translated">이 예는 &lt;code&gt;34567.89&lt;/code&gt; &lt;code&gt;00019.00&lt;/code&gt; 및 &lt;code&gt;00007.20&lt;/code&gt; 의 세 가지 결과를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="98edd12efda1e9feab7d1734791d6869fcfd7b89" translate="yes" xml:space="preserve">
          <source>The executable for the called program will be located and loaded into memory:</source>
          <target state="translated">호출 된 프로그램의 실행 파일은 메모리에 위치하여로드됩니다.</target>
        </trans-unit>
        <trans-unit id="51a0fdd220a75a055aa8d216bb6782803d38ef16" translate="yes" xml:space="preserve">
          <source>The exit status of the executed command will be available in the &lt;code&gt;RETURN-CODE&lt;/code&gt; special-register.</source>
          <target state="translated">실행 된 명령의 종료 상태는 &lt;code&gt;RETURN-CODE&lt;/code&gt; 특수 레지스터 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d7c04150a639c73cce5a523dc7e7453d87a6688e" translate="yes" xml:space="preserve">
          <source>The expectation is that the subroutine will eventually return control back to the calling program, at which point the &lt;code&gt;CALL&lt;/code&gt;ing program will resume execution starting with the statement immediately following the &lt;code&gt;CALL&lt;/code&gt;. Subprograms are not required to return to their callers, however, and are free to halt program execution if they wish.</source>
          <target state="translated">예상대로 서브 루틴은 결국 제어를 호출 프로그램으로 되 &lt;code&gt;CALL&lt;/code&gt; ,이 시점에서 CALL 프로그램은 &lt;code&gt;CALL&lt;/code&gt; 바로 뒤의 명령문으로 시작하여 실행을 재개합니다 . 그러나 하위 프로그램은 호출자에게 반환 할 필요가 없으며 원하는 경우 프로그램 실행을 자유롭게 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ae0543276748908a42b457ded08593a58da5ab2" translate="yes" xml:space="preserve">
          <source>The expectation is that the subroutine will eventually return control back to the calling program, at which point the CALLing program will resume execution starting with the statement immediately following the&lt;code&gt;CALL&lt;/code&gt; Subprograms are not required to return to their callers, however, and are free to halt program execution if they wish.</source>
          <target state="translated">서브 루틴은 결국 호출 프로그램으로 제어를 다시 리턴 할 것으로 예상됩니다.이 시점에서 CALLing 프로그램은 &lt;code&gt;CALL&lt;/code&gt; 바로 다음 명령문으로 시작하여 실행을 재개합니다. 그러나 서브 프로그램은 호출자에게 리턴 할 필요가 없으며 중지 할 수 있습니다. 원하는 경우 프로그램 실행.</target>
        </trans-unit>
        <trans-unit id="77533bc29dac6d31041538abf241c663e099c506" translate="yes" xml:space="preserve">
          <source>The fact that GnuCOBOL supports a full-featured two-way interface with C-language programs means that &amp;mdash; even if you cannot access a library API directly &amp;mdash; you could always do so via a small C &quot;wrapper&quot; program that is&lt;code&gt;CALL&lt;/code&gt;d by a GnuCOBOL program.</source>
          <target state="translated">GnuCOBOL이 C 언어 프로그램과의 완전한 기능을 갖춘 양방향 인터페이스를 지원한다는 사실은 라이브러리 API에 직접 액세스 할 수없는 경우라도 C &lt;code&gt;CALL&lt;/code&gt; d 인 작은 C &quot;래퍼&quot;프로그램을 통해 항상 그렇게 할 수 있음 을 의미합니다. GnuCOBOL 프로그램.</target>
        </trans-unit>
        <trans-unit id="6eac14b6414383dbf64b7d17f49c6df41d074e40" translate="yes" xml:space="preserve">
          <source>The fact that GnuCOBOL supports a full-featured two-way interface with C-language programs means that &amp;mdash; even if you cannot access a library API directly &amp;mdash; you could always do so via a small C &amp;ldquo;wrapper&amp;rdquo; program that is &lt;code&gt;CALL&lt;/code&gt;ed by a GnuCOBOL program.</source>
          <target state="translated">GnuCOBOL이 C 언어 프로그램과 함께 모든 기능을 갖춘 양방향 인터페이스를 지원한다는 사실은 라이브러리 API에 직접 액세스 할 수 없더라도 항상 &lt;code&gt;CALL&lt;/code&gt; 에 의해 호출 되는 작은 C &quot;래퍼&quot;프로그램을 통해 수행 할 수 있음 을 의미합니다. GnuCOBOL 프로그램.</target>
        </trans-unit>
        <trans-unit id="00e1fc754e20bec4cf8fa3ed7191bf9a8b68ddc6" translate="yes" xml:space="preserve">
          <source>The file in whose &lt;code&gt;FD&lt;/code&gt; (see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;) a &lt;code&gt;REPORT &lt;var&gt;report-name-1&lt;/var&gt;&lt;/code&gt; clause exists must be open for &lt;code&gt;OUTPUT&lt;/code&gt; or &lt;code&gt;EXTEND&lt;/code&gt; at the time the &lt;code&gt;INITIATE&lt;/code&gt; statement is executed. See &lt;a href=&quot;#OPEN&quot;&gt;OPEN&lt;/a&gt;, for more information on file open modes.</source>
          <target state="translated">에서 그 파일 &lt;code&gt;FD&lt;/code&gt; (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; )를 &lt;code&gt;REPORT &lt;var&gt;report-name-1&lt;/var&gt;&lt;/code&gt; 절에 대해 열려 있어야 존재 &lt;code&gt;OUTPUT&lt;/code&gt; 또는 &lt;code&gt;EXTEND&lt;/code&gt; (가)시 &lt;code&gt;INITIATE&lt;/code&gt; 문이 실행됩니다. 파일 열기 모드에 대한 자세한 내용 은 &lt;a href=&quot;#OPEN&quot;&gt;OPEN을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81670d16471549ce005c4d4b7402a706fd968342" translate="yes" xml:space="preserve">
          <source>The file in whose &lt;code&gt;FD&lt;/code&gt; a &lt;code&gt;REPORT &lt;var&gt;report-name-1&lt;/var&gt;&lt;/code&gt; clause exists must be open for &lt;code&gt;OUTPUT&lt;/code&gt; or &lt;code&gt;EXTEND&lt;/code&gt; at the time the GENERATE is executed.</source>
          <target state="translated">&lt;code&gt;FD&lt;/code&gt; a &lt;code&gt;REPORT &lt;var&gt;report-name-1&lt;/var&gt;&lt;/code&gt; 절이 있는 파일 은 GENERATE가 실행될 때 &lt;code&gt;OUTPUT&lt;/code&gt; 또는 &lt;code&gt;EXTEND&lt;/code&gt; 에 대해 열려 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="8ab5b755db857291bb20a55a00d990a4fabddc76" translate="yes" xml:space="preserve">
          <source>The file in whose &lt;code&gt;FD&lt;/code&gt; a &lt;code&gt;REPORT&lt;/code&gt; clause exists for the report in which &lt;var&gt;identifier-1&lt;/var&gt; is a detail group must be opened for &lt;code&gt;OUTPUT&lt;/code&gt; or &lt;code&gt;EXTEND&lt;/code&gt; at the time the &lt;code&gt;GENERATE&lt;/code&gt; is executed. See &lt;a href=&quot;#OPEN&quot;&gt;OPEN&lt;/a&gt;, for information on file open modes.</source>
          <target state="translated">&lt;var&gt;identifier-1&lt;/var&gt; 이 세부 그룹 인 보고서에 대한 &lt;code&gt;FD&lt;/code&gt; a &lt;code&gt;REPORT&lt;/code&gt; 절이 있는 파일 은 &lt;code&gt;GENERATE&lt;/code&gt; 가 실행될 때 &lt;code&gt;OUTPUT&lt;/code&gt; 또는 &lt;code&gt;EXTEND&lt;/code&gt; 에 대해 열려야합니다 . 파일 열기 모드에 대한 정보는 &lt;a href=&quot;#OPEN&quot;&gt;OPEN을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ee7f1abbf8b6fb2f091631e36bfcec91db5989d" translate="yes" xml:space="preserve">
          <source>The file in whose&lt;code&gt;FD&lt;/code&gt;(see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;) a&lt;code&gt;REPORT &amp;lt;&lt;i&gt;report-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt;clause exists must be open for&lt;code&gt;OUTPUT&lt;/code&gt;or&lt;code&gt;EXTEND&lt;/code&gt;at the time the&lt;code&gt;INITIATE&lt;/code&gt;statement is executed. See &lt;a href=&quot;#OPEN&quot;&gt;OPEN&lt;/a&gt;, for more information on file open modes.</source>
          <target state="translated">에서 그 파일 &lt;code&gt;FD&lt;/code&gt; (참조 &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;파일 / 정렬-설명&lt;/a&gt; )를 &lt;code&gt;REPORT &amp;lt;&lt;i&gt;report-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt; 절에 대해 열려 있어야 존재 &lt;code&gt;OUTPUT&lt;/code&gt; 또는 &lt;code&gt;EXTEND&lt;/code&gt; (가)시 &lt;code&gt;INITIATE&lt;/code&gt; 문이 실행됩니다. 파일 열기 모드에 대한 자세한 정보는 &lt;a href=&quot;#OPEN&quot;&gt;OPEN을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b362bea9b305c5aa3ad77bf2025719f107a2227b" translate="yes" xml:space="preserve">
          <source>The file in whose&lt;code&gt;FD&lt;/code&gt;a&lt;code&gt;REPORT &amp;lt;&lt;i&gt;report-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt;clause exists must be open for&lt;code&gt;OUTPUT&lt;/code&gt;or&lt;code&gt;EXTEND&lt;/code&gt;at the time the GENERATE is executed.</source>
          <target state="translated">에서 그 파일 &lt;code&gt;FD&lt;/code&gt; &lt;code&gt;REPORT &amp;lt;&lt;i&gt;report-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt; 절에 대해 열려 있어야 존재 &lt;code&gt;OUTPUT&lt;/code&gt; 또는 &lt;code&gt;EXTEND&lt;/code&gt; (가) 실행 생성 시간에.</target>
        </trans-unit>
        <trans-unit id="2b781026f528f074ebf5f226bb9fd21b9b3ab6f8" translate="yes" xml:space="preserve">
          <source>The file in whose&lt;code&gt;FD&lt;/code&gt;a&lt;code&gt;REPORT&lt;/code&gt;clause exists for the report in which &amp;lt;</source>
          <target state="translated">&lt;code&gt;FD&lt;/code&gt; a &lt;code&gt;REPORT&lt;/code&gt; 절이 있는 보고서 에 대한 파일은 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="f341f1734088d4aea02441413bb106d9cb631e7a" translate="yes" xml:space="preserve">
          <source>The file specified by &amp;lt;</source>
          <target state="translated">&amp;lt;로 지정된 파일</target>
        </trans-unit>
        <trans-unit id="fe77f6fe7881a111f85562b58f86fd54580b86ce" translate="yes" xml:space="preserve">
          <source>The file specified by &lt;var&gt;old-file-path&lt;/var&gt; will be &amp;ldquo;renamed&amp;rdquo; to the name specified as &lt;var&gt;new-file-path&lt;/var&gt;. Each argument may be an alphanumeric literal or data item.</source>
          <target state="translated">에 의해 지정된 파일 &lt;var&gt;old-file-path&lt;/var&gt; 로 지정된 이름으로 &quot;이름&quot;될 &lt;var&gt;new-file-path&lt;/var&gt; . 각 인수는 영숫자 리터럴 또는 데이터 항목 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="178bf56cbf31dc99c74827994be5369e7d3c0c4c" translate="yes" xml:space="preserve">
          <source>The filename of the source code of the program (as specified on the &lt;code&gt;cobc&lt;/code&gt; command when the program was compiled) is returned by this function.</source>
          <target state="translated">이 함수는 프로그램 소스 코드의 파일 이름 ( 프로그램이 컴파일 될 때 &lt;code&gt;cobc&lt;/code&gt; 명령 에 지정된대로 )을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9ca55d67ef6631d0e5b8e6987e024175fb708b5a" translate="yes" xml:space="preserve">
          <source>The final argument (&amp;lt;</source>
          <target state="translated">마지막 인수 (&amp;lt;</target>
        </trans-unit>
        <trans-unit id="ff23a7f1f7441b3c74eea501e167f0307651b7e3" translate="yes" xml:space="preserve">
          <source>The final argument (&lt;var&gt;handle&lt;/var&gt;) is a &lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt; item that will receive the handle to the file. That handle is used on all other byte-stream functions to reference this specific file.</source>
          <target state="translated">마지막 인수 ( &lt;var&gt;handle&lt;/var&gt; )는 파일에 대한 핸들을받을 &lt;code&gt;PIC X(4) USAGE COMP-X&lt;/code&gt; 항목입니다. 이 핸들은이 특정 파일을 참조하기 위해 다른 모든 바이트 스트림 함수에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac9970b25e0cebf39ab5c3e5bb8116f83dcdb447" translate="yes" xml:space="preserve">
          <source>The final way in which a data item may be shared between a calling program (</source>
          <target state="translated">호출 프로그램간에 데이터 항목을 공유 할 수있는 마지막 방법 (</target>
        </trans-unit>
        <trans-unit id="f99beef947d11652a06d1a2c33cf86dafe692ec6" translate="yes" xml:space="preserve">
          <source>The final way in which a data item may be shared between a calling program (&quot;A&quot;) and a called program (&quot;B&quot;) is by defining the data item (with the same name) in both programs and attaching the&lt;code&gt;EXTERNAL&lt;/code&gt;(see &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt;) clause to it (again, in both programs). This approach works regardless of whether the called program is nested within the calling program or not. It also works even if the two programs are compiled separately.</source>
          <target state="translated">호출 프로그램 ( &quot;A&quot;)과 호출 프로그램 ( &quot;B&quot;)간에 데이터 항목을 공유 할 수있는 마지막 방법은 두 프로그램 모두에서 데이터 항목 (동일한 이름으로)을 정의하고 &lt;code&gt;EXTERNAL&lt;/code&gt; 을 첨부하는 것입니다 (참조 &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt; ) 절 (두 프로그램 모두에서). 이 방법은 호출 된 프로그램이 호출 프로그램 내에 중첩되어 있는지 여부에 관계없이 작동합니다. 두 프로그램이 별도로 컴파일 된 경우에도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c783e8f712e9226b527d45386eb842a2d967006a" translate="yes" xml:space="preserve">
          <source>The first 16 characters returned by the &lt;code&gt;CURRENT-DATE&lt;/code&gt; (see &lt;a href=&quot;#CURRENT_002dDATE&quot;&gt;CURRENT-DATE&lt;/a&gt;) function will be a number in the format &lt;code&gt;&lt;var&gt;YYYYMMDDhhmmssnn&lt;/var&gt;&lt;/code&gt;, where &lt;code&gt;&lt;var&gt;YYYYMMDD&lt;/var&gt;&lt;/code&gt; is the current calendar date and &lt;code&gt;&lt;var&gt;hhmmssnn&lt;/var&gt;&lt;/code&gt; is the current time of day to the one one-hundredth of a second. Since two different executions of the program will never get identical &lt;code&gt;CURRENT-DATE&lt;/code&gt; values (unless they are executed in extremely close time frames to one another), using those first sixteen characters as the &lt;code&gt;RANDOM&lt;/code&gt; seed will guarantee that receiving a duplicate sequence of pseudo-random numbers in two different executions of the program will be</source>
          <target state="translated">에 의해 반환되는 제 16 개 문자 &lt;code&gt;CURRENT-DATE&lt;/code&gt; 는 (참조 &lt;a href=&quot;#CURRENT_002dDATE&quot;&gt;CURRENT-DATE를&lt;/a&gt; 함수 형식 번호 것) &lt;code&gt;&lt;var&gt;YYYYMMDDhhmmssnn&lt;/var&gt;&lt;/code&gt; , &lt;code&gt;&lt;var&gt;YYYYMMDD&lt;/var&gt;&lt;/code&gt; 는 현재 달력 날짜이며 &lt;code&gt;&lt;var&gt;hhmmssnn&lt;/var&gt;&lt;/code&gt; 은 제의 일대일 백에 현재 시간이고 . 프로그램의 두 가지 다른 실행은 동일한 &lt;code&gt;CURRENT-DATE&lt;/code&gt; 값을 얻지 못하므로 (서로 매우 가까운 시간 프레임에서 실행되지 않는 한) 처음 16 개의 문자를 &lt;code&gt;RANDOM&lt;/code&gt; 시드로 사용하면 의사 랜덤의 중복 시퀀스를받을 수 있습니다. 프로그램의 두 가지 다른 실행에서 숫자는</target>
        </trans-unit>
        <trans-unit id="f24ef20176344c82758443efc4bc4400faf36c4e" translate="yes" xml:space="preserve">
          <source>The first 16 characters returned by the&lt;code&gt;CURRENT-DATE&lt;/code&gt;(see &lt;a href=&quot;#CURRENT_002dDATE&quot;&gt;CURRENT-DATE&lt;/a&gt;) function will be a number in the format &quot;YYYYMMDDhhmmssnn&quot;, where &quot;YYYYMMDD&quot; is the current calendar date and &quot;hhmmssnn&quot; is the current time of day to the one one-hundredth of a second. Since two different executions of the program will never get identical&lt;code&gt;CURRENT-DATE&lt;/code&gt;values (unless they are executed in extremely close time frames to one another), using those first sixteen characters as the&lt;code&gt;RANDOM&lt;/code&gt;seed will guarantee that receiving a duplicate sequence of pseudo-random numbers in two different executions of the program will be HIGHLY unlikely.</source>
          <target state="translated">에 의해 반환되는 제 16 개 문자 &lt;code&gt;CURRENT-DATE&lt;/code&gt; 는 (참조 &lt;a href=&quot;#CURRENT_002dDATE&quot;&gt;CURRENT-DATE을&lt;/a&gt; 기능 &quot;YYYYMMDD&quot;는 현재 달력 날짜 및 &quot;hhmmssnn이&quot;포맷 &quot;YYYYMMDDhhmmssnn&quot;의 수가 될 것이다) 하나에 현재 시간은 100 분의 1 초 프로그램의 두 가지 다른 실행은 동일한 &lt;code&gt;CURRENT-DATE&lt;/code&gt; 값을 절대 얻지 못하기 때문에 (매우 근접한 시간 프레임에서 서로 실행되지 않는 한) &lt;code&gt;RANDOM&lt;/code&gt; 시드 로 처음 16자를 사용 하면 중복 된 의사 난수 시퀀스를 수신 할 수 있습니다. 두 가지 다른 프로그램 실행 번호는 거의 없을 것입니다.</target>
        </trans-unit>
        <trans-unit id="6085b87599f8ef4066605284a3bd0bc0bfc3c612" translate="yes" xml:space="preserve">
          <source>The first argument is unused, but must be specified. It must be specified &lt;code&gt;BY VALUE&lt;/code&gt; (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;).</source>
          <target state="translated">첫 번째 인수는 사용되지 않지만 지정해야합니다. &lt;code&gt;BY VALUE&lt;/code&gt; 으로 지정해야합니다 ( &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c8602aef862dc47ffdaa1ff7188c798e9adc8061" translate="yes" xml:space="preserve">
          <source>The first argument is unused, but must be specified. It must be specified&lt;code&gt;BY VALUE&lt;/code&gt;(see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;).</source>
          <target state="translated">첫 번째 인수는 사용되지 않지만 지정해야합니다. &lt;code&gt;BY VALUE&lt;/code&gt; 로 지정해야합니다 ( &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7cb234c1c08fedfe3d03e10c24a5d58a1e51ff57" translate="yes" xml:space="preserve">
          <source>The first can search a table sequentially, stopping only when either a table entry matching one of any number of search conditions is found, or when all table entries have been checked against the search criteria and none matched any of those criteria.</source>
          <target state="translated">첫 번째는 여러 검색 조건 중 하나와 일치하는 테이블 항목을 찾거나 모든 테이블 항목이 검색 기준에 대해 점검되고 해당 기준과 일치하지 않는 경우에만 테이블을 순차적으로 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="535cc2bd0974b8ddb7c125f11c0f52474355ae19" translate="yes" xml:space="preserve">
          <source>The first page you print is now a perfect template to use when designing reports &amp;mdash; it shows, given the answers to questions 1-4, every available printable character position on a page! The number of lines printed on that page becomes your &lt;code&gt;PAGE LIMIT&lt;/code&gt; value for the &lt;code&gt;RD&lt;/code&gt;.</source>
          <target state="translated">인쇄하는 첫 번째 페이지는 이제 보고서를 디자인 할 때 사용하기에 완벽한 템플릿입니다. 1-4 번 질문에 대한 답이 주어지면 페이지에서 사용 가능한 모든 인쇄 가능한 문자 위치를 보여줍니다! 해당 페이지에 인쇄 된 줄 수 는 &lt;code&gt;RD&lt;/code&gt; 의 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 값 이됩니다 .</target>
        </trans-unit>
        <trans-unit id="0985088dd31008bb9db75f00f5d8bab686edd716" translate="yes" xml:space="preserve">
          <source>The first page you print is now a perfect template to use when designing reports &amp;mdash; it shows, given the answers to questions 1-4, every available printable character position on a page! The number of lines printed on that page becomes your&lt;code&gt;PAGE LIMIT&lt;/code&gt;value for the&lt;code&gt;RD&lt;/code&gt;</source>
          <target state="translated">첫 번째로 인쇄하는 페이지는 이제 보고서를 디자인 할 때 사용할 수있는 완벽한 템플릿입니다. 질문 1-4에 대한 답변이 제공되면 페이지에서 인쇄 가능한 모든 문자 위치가 표시됩니다! 해당 페이지에 인쇄 된 줄 수가 &lt;code&gt;RD&lt;/code&gt; 의 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="4ba63c70c2bfaf1f813be75f9b14193d1d91a515" translate="yes" xml:space="preserve">
          <source>The first record of data shown below shows that the aggregated score of all benchmarks reported for the AMD A10-4600M CPU is 3145, as compared to the second record which shows that the aggregated score reported of all benchmarks reported for the Intel Core-i7-4960X CPU is 14291.</source>
          <target state="translated">아래에 표시된 데이터의 첫 번째 레코드는 AMD A10-4600M CPU에 대해보고 된 모든 벤치 마크의 집계 점수가 3145이며, ​​Intel Core-i7- 4960X CPU는 14291입니다.</target>
        </trans-unit>
        <trans-unit id="525701efa44718af6fb15021852a4228575e601f" translate="yes" xml:space="preserve">
          <source>The first reserved word of a COBOL statement.</source>
          <target state="translated">COBOL 문의 첫 번째 예약어입니다.</target>
        </trans-unit>
        <trans-unit id="60d1418a8b390e974b94b48762529a0802e56247" translate="yes" xml:space="preserve">
          <source>The first time any of the GnuCOBOL subprograms in a dynamically-loadable module are invoked, the entry-point referenced must be the one for which the</source>
          <target state="translated">동적으로로드 할 수있는 모듈에서 GnuCOBOL 하위 프로그램을 처음으로 호출 할 때 참조되는 진입 점은</target>
        </trans-unit>
        <trans-unit id="55e74ad3ff4a5c3b60b60d4dcccd41ecfb09c704" translate="yes" xml:space="preserve">
          <source>The first time any of the GnuCOBOL subprograms in a dynamically-loadable module are invoked, the entry-point referenced must be the one for which the &quot;.dll&quot;, &quot;.so&quot; or &quot;.dylib&quot; file is named.</source>
          <target state="translated">동적으로로드 가능한 모듈에서 GnuCOBOL 서브 프로그램을 처음 호출 할 때 참조 된 진입 점은 &quot;.dll&quot;, &quot;.so&quot;또는 &quot;.dylib&quot;파일의 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c0259097fd67c3400bcacc7e772ff80e85a8b326" translate="yes" xml:space="preserve">
          <source>The first two ways in which arguments may be passed (&lt;code&gt;BY REFERENCE&lt;/code&gt; and &lt;code&gt;BY CONTENT&lt;/code&gt;) are intended for use when a GnuCOBOL program is being called, while the first and third (&lt;code&gt;BY REFERENCE&lt;/code&gt; and &lt;code&gt;BY VALUE&lt;/code&gt;) are intended for use when a C program is being called. You</source>
          <target state="translated">인수를 전달할 수있는 처음 두 가지 방법 ( &lt;code&gt;BY REFERENCE&lt;/code&gt; 및 &lt;code&gt;BY CONTENT&lt;/code&gt; )은 GnuCOBOL 프로그램이 호출 될 때 사용되는 반면, 첫 번째 및 세 번째 ( &lt;code&gt;BY REFERENCE&lt;/code&gt; 및 &lt;code&gt;BY VALUE&lt;/code&gt; )는 C 프로그램이 실행될 때 사용하기위한 것입니다. 호출되고 있습니다. 당신</target>
        </trans-unit>
        <trans-unit id="a0899f5b93e9bfa829355180c29dba661359c4c3" translate="yes" xml:space="preserve">
          <source>The first two ways in which arguments may be passed &lt;code&gt;BY REFERENCE&lt;/code&gt;and&lt;code&gt;BY CONTENT&lt;/code&gt; are intended for use when a GnuCOBOL program is being called, while the first and third &lt;code&gt;BY REFERENCE&lt;/code&gt;and&lt;code&gt;BY VALUE&lt;/code&gt; are intended for use when a C program is being called. You</source>
          <target state="translated">&lt;code&gt;BY REFERENCE&lt;/code&gt; 및 &lt;code&gt;BY CONTENT&lt;/code&gt; 가 인수를 전달할 수있는 처음 두 가지 방법은 GnuCOBOL 프로그램을 호출 할 때 사용하기위한 것이며, 첫 번째 및 세 번째 &lt;code&gt;BY REFERENCE&lt;/code&gt; 및 &lt;code&gt;BY VALUE&lt;/code&gt; 는 C 프로그램을 호출 할 때 사용하기위한 것입니다. 당신</target>
        </trans-unit>
        <trans-unit id="ae33694c47cefeac6bb5748dcc1830ffb88a66ab" translate="yes" xml:space="preserve">
          <source>The flow of execution will then progress through the coding of the function as it would with any other program.</source>
          <target state="translated">실행 흐름은 다른 프로그램과 마찬가지로 함수 코딩을 통해 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="f1980f68d667a34e789cf9f54530ce801a821657" translate="yes" xml:space="preserve">
          <source>The flow of execution will then progress through the coding of the subprogram as it would with any other program.</source>
          <target state="translated">실행 흐름은 다른 프로그램과 마찬가지로 서브 프로그램의 코딩을 통해 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="f46e1d158dac406013171b950ca91dec5bc2d927" translate="yes" xml:space="preserve">
          <source>The folder in which the program being compiled resides.</source>
          <target state="translated">컴파일중인 프로그램이있는 폴더입니다.</target>
        </trans-unit>
        <trans-unit id="ee9b611bf48324c48049f5c88af85de620a27ed3" translate="yes" xml:space="preserve">
          <source>The folder named as the &amp;lt;</source>
          <target state="translated">&amp;lt;로 명명 된 폴더</target>
        </trans-unit>
        <trans-unit id="81c16f767da43df39d1d75cf4d97382649ff4afa" translate="yes" xml:space="preserve">
          <source>The folder named as the &lt;var&gt;library-name-1&lt;/var&gt; on the &lt;code&gt;COPY&lt;/code&gt; statement (see &lt;a href=&quot;#COPY&quot;&gt;COPY&lt;/a&gt;).</source>
          <target state="translated">는 AS라는 이름의 폴더 &lt;var&gt;library-name-1&lt;/var&gt; 온 &lt;code&gt;COPY&lt;/code&gt; 문 (참조 &lt;a href=&quot;#COPY&quot;&gt;COPY를&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5ca9d7777939247008f09a27311473f5b0de9cf6" translate="yes" xml:space="preserve">
          <source>The folder named on the</source>
          <target state="translated">에 이름이 지정된 폴더</target>
        </trans-unit>
        <trans-unit id="0a26396dcfdab07d7db095fc96fa5f38a8d028ee" translate="yes" xml:space="preserve">
          <source>The folder named on the&lt;code&gt;-I&lt;/code&gt;switch</source>
          <target state="translated">&lt;code&gt;-I&lt;/code&gt; 스위치 에 이름이 지정된 폴더</target>
        </trans-unit>
        <trans-unit id="a11171c3dc3fcca3cf199ba3ff908f8b2a575c0f" translate="yes" xml:space="preserve">
          <source>The following &amp;lt;</source>
          <target state="translated">다음 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="1b771c86d4bfa97441519a7ccd3067e5925e0644" translate="yes" xml:space="preserve">
          <source>The following &lt;var&gt;Attribute-Specification&lt;/var&gt; clauses are allowed on the &lt;code&gt;ACCEPT&lt;/code&gt; statement; these are the same as those allowed for &lt;code&gt;SCREEN SECTION&lt;/code&gt; data items. A particular &lt;var&gt;Attribute-Specification&lt;/var&gt; may be used only once in any &lt;code&gt;ACCEPT&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ACCEPT&lt;/code&gt; 문 에는 다음 &lt;var&gt;Attribute-Specification&lt;/var&gt; 절이 허용됩니다 . 이는 &lt;code&gt;SCREEN SECTION&lt;/code&gt; 데이터 항목에 허용 된 것과 동일 합니다. 특정 &lt;var&gt;Attribute-Specification&lt;/var&gt; 은 &lt;code&gt;ACCEPT&lt;/code&gt; 에서 한 번만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="66b9fb53b52ebf7a1c888313cb49d1cafdf721b1" translate="yes" xml:space="preserve">
          <source>The following &lt;var&gt;Attribute-Specification&lt;/var&gt; clauses are allowed on the &lt;code&gt;DISPLAY&lt;/code&gt; statement &amp;mdash; these are the same as those allowed for &lt;code&gt;SCREEN SECTION&lt;/code&gt; data items. A particular &lt;var&gt;Attribute-Specification&lt;/var&gt; may be used only once in any &lt;code&gt;DISPLAY&lt;/code&gt;:</source>
          <target state="translated">다음 &lt;var&gt;Attribute-Specification&lt;/var&gt; 절이 &lt;code&gt;DISPLAY&lt;/code&gt; 문에서 허용 됩니다. 이는 &lt;code&gt;SCREEN SECTION&lt;/code&gt; 데이터 항목에 허용되는 것과 동일 합니다. 특정 &lt;var&gt;Attribute-Specification&lt;/var&gt; 은 모든 &lt;code&gt;DISPLAY&lt;/code&gt; 에서 한 번만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="600ae2dd58ab93b2e853f329233aeba589f43c6a" translate="yes" xml:space="preserve">
          <source>The following apply when &amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="55a7c88eae8be68f69d61531a572af7fde4ce557" translate="yes" xml:space="preserve">
          <source>The following apply when &lt;var&gt;identifier-1&lt;/var&gt; is</source>
          <target state="translated">다음은 &lt;var&gt;identifier-1&lt;/var&gt; 이</target>
        </trans-unit>
        <trans-unit id="495badf9667f40b797521eb179671183a8e33c14" translate="yes" xml:space="preserve">
          <source>The following apply when &lt;var&gt;identifier-1&lt;/var&gt; is defined in the &lt;code&gt;SCREEN SECTION&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;var&gt;identifier-1&lt;/var&gt; 이 &lt;code&gt;SCREEN SECTION&lt;/code&gt; 에 정의 된 경우 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ee3b47655fcfeb31d722f10b33b467976275feac" translate="yes" xml:space="preserve">
          <source>The following are examples of keycodes that can be used:</source>
          <target state="translated">다음은 사용할 수있는 키 코드의 예입니다.</target>
        </trans-unit>
        <trans-unit id="9a930c90096e23a1a7996f44bc4a0cb3c19003c3" translate="yes" xml:space="preserve">
          <source>The following are insertion symbols. They are used to insert an extra character (two in the case of &quot;CR&quot; and &quot;DB&quot;) to signify the sign (positive or negative) of the numeric value that is moved into the field whose picture string contains one of these symbols, or the fact that the data item represents a currency (money) amount. Only one of the&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;CR&lt;/code&gt;or&lt;code&gt;DB&lt;/code&gt;symbols may be used in a picture clause. In this context, when any of these symbols are used in a &amp;lt;</source>
          <target state="translated">다음은 삽입 기호입니다. 그림 문자가이 기호 중 하나를 포함하는 필드로 이동 된 숫자 값의 부호 (양수 또는 음수)를 나타 내기 위해 추가 문자 ( &quot;CR&quot;및 &quot;DB&quot;의 경우 2)를 삽입하는 데 사용됩니다. 또는 데이터 항목이 통화 (돈) 금액을 나타내는 사실. 오직 하나 &lt;code&gt;+&lt;/code&gt; 는 &lt;code&gt;-&lt;/code&gt; &lt;code&gt;CR&lt;/code&gt; 또는 &lt;code&gt;DB&lt;/code&gt; 기호는 그림 절에 사용할 수있다. 이와 관련하여 이러한 기호 중 하나가 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="48b56281d1aec89ef3556e512590a5acebfe303f" translate="yes" xml:space="preserve">
          <source>The following are insertion symbols. They are used to insert an extra character (two in the case of &lt;code&gt;CR&lt;/code&gt; and &lt;code&gt;DB&lt;/code&gt;) to signify the sign (positive or negative) of the numeric value that is moved into the field whose picture string contains one of these symbols, or the fact that the data item represents a currency (money) amount. Only one of the &amp;lsquo;</source>
          <target state="translated">다음은 삽입 기호입니다. 그림 문자열에 이러한 기호 중 하나가 포함 된 필드로 이동되는 숫자 값의 부호 (양수 또는 음수)를 나타 내기 위해 추가 문자 ( &lt;code&gt;CR&lt;/code&gt; 및 &lt;code&gt;DB&lt;/code&gt; 의 경우 2 개)를 삽입하는 데 사용됩니다. 데이터 항목은 통화 (돈) 금액을 나타냅니다. '중 하나만</target>
        </trans-unit>
        <trans-unit id="aec8b10fb0c79dcb4fc6ad14834bd0aa7a4fd486" translate="yes" xml:space="preserve">
          <source>The following are the &lt;code&gt;CORRESPONDING&lt;/code&gt; match ups that passed rule #1 (but failed on another rule), and the reasons why they failed.</source>
          <target state="translated">다음은 규칙 # 1을 통과했지만 다른 규칙에서는 실패한 &lt;code&gt;CORRESPONDING&lt;/code&gt; 매치업과 실패한 이유입니다.</target>
        </trans-unit>
        <trans-unit id="875bba32e815a044e6881c724e77033d1b234210" translate="yes" xml:space="preserve">
          <source>The following are the CORRESPONDING match ups that passed rule #1 (but failed on another rule), and the reasons why they failed.</source>
          <target state="translated">다음은 규칙 # 1을 통과했지만 다른 규칙에서 실패한 CORRESPONDING 매치업과 실패 이유입니다.</target>
        </trans-unit>
        <trans-unit id="73e294e2e89bb0547f8d63c19bf6ab737bec2e6b" translate="yes" xml:space="preserve">
          <source>The following are the GnuCOBOL figurative constants and their respective equivalent values.</source>
          <target state="translated">다음은 GnuCOBOL 형상 상수 및 해당 값입니다.</target>
        </trans-unit>
        <trans-unit id="3d437f9b3f0e1823ef9aa4aca29cd9ea9ff8b05d" translate="yes" xml:space="preserve">
          <source>The following are the error type strings, and their corresponding exception codes and descriptions.</source>
          <target state="translated">다음은 오류 유형 문자열과 해당 예외 코드 및 설명입니다.</target>
        </trans-unit>
        <trans-unit id="d76cfe3ebe91a3169d26463a970e9cfbb5f039aa" translate="yes" xml:space="preserve">
          <source>The following are the fixed insertion editing symbols that may be specified in a picture string. Each of these editing symbols will insert a special character into the field value at the position it is specified in the picture string. These editing symbols will each introduce one extra character into the total field size for each occurrence of the symbol in the picture string.</source>
          <target state="translated">다음은 그림 문자열에 지정 될 수있는 고정 삽입 편집 기호입니다. 이러한 각 편집 기호는 그림 문자열에 지정된 위치의 필드 값에 특수 문자를 삽입합니다. 이러한 편집 기호는 각각 그림 문자열에서 기호가 나타날 때마다 총 필드 크기에 하나의 추가 문자를 도입합니다.</target>
        </trans-unit>
        <trans-unit id="6d26a12344a08e5009f441eb813038a691a7a6ad" translate="yes" xml:space="preserve">
          <source>The following are the numeric formatting symbols that may be specified in a picture string. Each of these editing symbols will insert special characters into the field value to present numbers in a &quot;friendly&quot; format. These editing symbols will each introduce one extra character into the total field size for each occurrence of the symbol in the picture string. Numeric fields whose picture clause contains these characters may neither be used as source fields in any calculation nor may they serve as source fields for the transfer of data values to any data item other than an alphanumeric field.</source>
          <target state="translated">다음은 그림 문자열에 지정할 수있는 숫자 서식 기호입니다. 이러한 각 편집 기호는 특수 문자를 필드 값에 삽입하여 숫자를 &quot;친숙한&quot;형식으로 표시합니다. 이러한 편집 기호는 각각 그림 문자열에서 기호가 나타날 때마다 총 필드 크기에 하나의 추가 문자를 도입합니다. picture 절에 이러한 문자가 포함 된 숫자 필드는 계산에서 소스 필드로 사용될 수 없으며 영숫자 필드 이외의 다른 데이터 항목으로 데이터 값을 전송하기위한 소스 필드로 사용될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="782b1fad7aef0a71c31bf30fdf97af2c39cbc67e" translate="yes" xml:space="preserve">
          <source>The following are the numeric formatting symbols that may be specified in a picture string. Each of these editing symbols will insert special characters into the field value to present numbers in a &amp;ldquo;friendly&amp;rdquo; format. These editing symbols will each introduce one extra character into the total field size for each occurrence of the symbol in the picture string. Numeric fields whose picture clause contains these characters may neither be used as source fields in any calculation nor may they serve as source fields for the transfer of data values to any data item other than an alphanumeric field.</source>
          <target state="translated">다음은 그림 문자열에 지정할 수있는 숫자 형식화 기호입니다. 이러한 각 편집 기호는 &quot;친숙한&quot;형식으로 숫자를 표시하기 위해 필드 값에 특수 문자를 삽입합니다. 이러한 편집 기호는 각각 그림 문자열에서 기호가 발생할 때마다 전체 필드 크기에 하나의 추가 문자를 도입합니다. 그림 절에 이러한 문자가 포함 된 숫자 필드는 계산에서 소스 필드로 사용되거나 영숫자 필드가 아닌 데이터 항목으로 데이터 값을 전송하기위한 소스 필드로 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe7c8772a8eebd0de2c41474c2ad31326af5eea2" translate="yes" xml:space="preserve">
          <source>The following are the valid &lt;code&gt;CORRESPONDING&lt;/code&gt; matches, assuming the statement &lt;code&gt;MOVE CORRESPONDING X TO Y&lt;/code&gt; is being executed (there are no valid corresponding matches for &lt;code&gt;ADD CORRESPONDING&lt;/code&gt; or &lt;code&gt;SUBTRACT CORRESPONDING&lt;/code&gt; because every potential match up violates rule #4):</source>
          <target state="translated">다음은 &lt;code&gt;MOVE CORRESPONDING X TO Y&lt;/code&gt; 문 이 실행되고 있다고 가정 할 때 유효한 &lt;code&gt;CORRESPONDING&lt;/code&gt; 일치입니다 ( 모든 잠재적 일치 항목이 규칙 # 4를 위반하므로 &lt;code&gt;ADD CORRESPONDING&lt;/code&gt; 또는 &lt;code&gt;SUBTRACT CORRESPONDING&lt;/code&gt; 에 대해 유효한 일치 항목이 없음 ).</target>
        </trans-unit>
        <trans-unit id="b14283b8c23d2ac4035be8dbdc534e051f84542f" translate="yes" xml:space="preserve">
          <source>The following are the valid CORRESPONDING matches, assuming the statement&lt;code&gt;MOVE CORRESPONDING X TO Y&lt;/code&gt;is being executed (there are no valid corresponding matches for&lt;code&gt;ADD CORRESPONDING&lt;/code&gt;or&lt;code&gt;SUBTRACT CORRESPONDING&lt;/code&gt;because every potential match up violates rule #4):</source>
          <target state="translated">다음은 &lt;code&gt;MOVE CORRESPONDING X TO Y&lt;/code&gt; 문 이 실행되고 있다고 가정 할 때 유효한 CORRESPONDING 일치 항목입니다 ( 모든 잠재적 일치 항목이 규칙 # 4를 위반하므로 &lt;code&gt;ADD CORRESPONDING&lt;/code&gt; 또는 &lt;code&gt;SUBTRACT CORRESPONDING&lt;/code&gt; 에 해당하는 일치 항목이 없음 ).</target>
        </trans-unit>
        <trans-unit id="887793f81bf83416cc5c43bc9fe921dfbeefeb3a" translate="yes" xml:space="preserve">
          <source>The following are the various environment variables that can play a role in the compilation of GnuCOBOL programs.</source>
          <target state="translated">다음은 GnuCOBOL 프로그램 컴파일에서 역할을 수행 할 수있는 다양한 환경 변수입니다.</target>
        </trans-unit>
        <trans-unit id="edf19a8ac31ed4664c3dc260eecd4fa47d26ad0c" translate="yes" xml:space="preserve">
          <source>The following are two different command window sessions &amp;mdash; the left on a Unix/Cygwin/OSX system and the right on a windows system &amp;mdash; that will set the switch on and then execute the</source>
          <target state="translated">다음은 두 개의 서로 다른 명령 창 세션입니다. 왼쪽은 Unix / Cygwin / OSX 시스템에 있고 오른쪽은 Windows 시스템에 있습니다.이 세션은 스위치를 켜고 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="579b33c24b4bfe811f896ba485aac36b73ac9505" translate="yes" xml:space="preserve">
          <source>The following are typical &amp;lt;</source>
          <target state="translated">다음은 일반적인 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="e5a32e55b75acf94f381973a4a789abf16732b39" translate="yes" xml:space="preserve">
          <source>The following are typical &lt;var&gt;no-of-lines&lt;/var&gt; and &lt;var&gt;no-of-columns&lt;/var&gt; definitions:</source>
          <target state="translated">다음은 일반적인 &lt;var&gt;no-of-lines&lt;/var&gt; &lt;var&gt;no-of-columns&lt;/var&gt; 및 열 없음 정의입니다.</target>
        </trans-unit>
        <trans-unit id="c08d1ceefac1b058778955fb01b957f5894d78c5" translate="yes" xml:space="preserve">
          <source>The following code is an alternative approach when you just wish to convert a number to its &lt;small&gt;ASCII&lt;/small&gt; equivalent:</source>
          <target state="translated">다음 코드는 숫자를 해당하는 &lt;small&gt;ASCII&lt;/small&gt; 로 변환하려는 경우 대체 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="b0305ddf4421c028dfe53c53ef58a064b7c1de3a" translate="yes" xml:space="preserve">
          <source>The following code is an alternative approach when you just wish to convert a number to its ASCII equivalent:</source>
          <target state="translated">다음 코드는 숫자를 ASCII로 변환하려는 대안 방법입니다.</target>
        </trans-unit>
        <trans-unit id="31c0b14b11371a1776e96dd960bd293f90ce6c39" translate="yes" xml:space="preserve">
          <source>The following code is an alternative approach when you just wish to convert an &lt;small&gt;ASCII&lt;/small&gt; character to its numeric equivalent:</source>
          <target state="translated">다음 코드는 &lt;small&gt;ASCII&lt;/small&gt; 문자를 해당 숫자 로 변환하려는 경우 대체 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="85706cabbe0ba83f9a11103f1f999f204f7aa9a9" translate="yes" xml:space="preserve">
          <source>The following code is an alternative approach when you just wish to convert an ASCII character to its numeric equivalent:</source>
          <target state="translated">다음 코드는 ASCII 문자를 숫자로 변환하려는 경우의 대체 방법입니다.</target>
        </trans-unit>
        <trans-unit id="ae82a16fa373c4311c8b34e1aea766c683689cdd" translate="yes" xml:space="preserve">
          <source>The following describes the syntax and option switches of the cobc command. This information may be displayed by entering the command &quot;cobc &amp;ndash;help&quot; or &quot;cobc -h&quot;.</source>
          <target state="translated">다음은 cobc 명령의 구문 및 옵션 스위치에 대한 설명입니다. 이 정보는 &quot;cobc &amp;ndash;help&quot;또는 &quot;cobc -h&quot;명령을 입력하여 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d811f3a2ec6535e60d93facd96500e5ff44d00e" translate="yes" xml:space="preserve">
          <source>The following describes the syntax and option switches of the cobc command. This information may be displayed by entering the command &lt;code&gt;cobc --help&lt;/code&gt; or &lt;code&gt;cobc -h&lt;/code&gt;.</source>
          <target state="translated">다음은 cobc 명령의 구문 및 옵션 스위치에 대한 설명입니다. 이 정보는 &lt;code&gt;cobc --help&lt;/code&gt; 또는 &lt;code&gt;cobc -h&lt;/code&gt; 명령을 입력하여 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8e5ca8304cf163000f5bfeac23dc6f31f6644935" translate="yes" xml:space="preserve">
          <source>The following discussion presents the various components of every GnuCOBOL source line record when the compiler is operating in Fixed Format Mode. Remember that this is the default mode for the GnuCOBOL compiler.</source>
          <target state="translated">다음은 컴파일러가 고정 형식 모드에서 작동 할 때 모든 GnuCOBOL 소스 라인 레코드의 다양한 구성 요소를 설명합니다. 이것은 GnuCOBOL 컴파일러의 기본 모드입니다.</target>
        </trans-unit>
        <trans-unit id="c007a3735ae155540da8e58372318b207994993f" translate="yes" xml:space="preserve">
          <source>The following example</source>
          <target state="translated">다음 예</target>
        </trans-unit>
        <trans-unit id="5d354bc7b37a71ce771b76dc17210fbe80f7276b" translate="yes" xml:space="preserve">
          <source>The following example enables all intrinsic functions to be specified without the use of the&lt;code&gt;FUNCTION&lt;/code&gt;keyword, (2) names two user-defined functions named &quot;MY-FUNCTION-1&quot; and &quot;MY-FUNCTION-2&quot; that will be used by the program and (3) specifies the alias names &quot;SIGMA&quot; for the intrinsic function &quot;STANDARD-DEVIATION&quot; and &quot;MF2&quot; for &quot;MY-FUNCTION-2&quot;.</source>
          <target state="translated">다음 예에서는 &lt;code&gt;FUNCTION&lt;/code&gt; 키워드를 사용하지 않고 모든 내장 함수를 지정할 수 있습니다 . (2) 프로그램에서 사용할 &quot;MY-FUNCTION-1&quot;및 &quot;MY-FUNCTION-2&quot;라는 두 개의 사용자 정의 함수 이름을 지정합니다. (3) 고유 함수 &quot;STANDARD-DEVIATION&quot;및 &quot;MF2&quot;에 대한 &quot;MY-FUNCTION-2&quot;에 대한 별명 &quot;SIGMA&quot;를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f54f96fbfb1f8aafb5a3eea5272d8dcbd5b22943" translate="yes" xml:space="preserve">
          <source>The following example may help your understanding of how the &lt;code&gt;INITIALIZE&lt;/code&gt; statement works. The sample code makes use of the &lt;code&gt;COBDUMP&lt;/code&gt; program to dump the storage that is (or is not) being initialized. See &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#COBDUMP&quot;&gt;COBDUMP&lt;/a&gt; in</source>
          <target state="translated">다음 예는 &lt;code&gt;INITIALIZE&lt;/code&gt; 문이 작동 하는 방식을 이해하는 데 도움이 될 수 있습니다 . 샘플 코드는 &lt;code&gt;COBDUMP&lt;/code&gt; 프로그램을 사용하여 초기화중인 (또는 초기화되지 않은) 스토리지를 덤프합니다. 참조 &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/gnucobsp.html#COBDUMP&quot;&gt;COBDUMP을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="3a7cf7d63f9d40da497d2ccf44920d8ab1dc3551" translate="yes" xml:space="preserve">
          <source>The following example may help your understanding of how the&lt;code&gt;INITIALIZE&lt;/code&gt;statement works. The sample code makes use of the COBDUMP program to dump the storage that is (or is not) being initialized. See &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#COBDUMP&quot;&gt;COBDUMP&lt;/a&gt; in</source>
          <target state="translated">다음 예제는 &lt;code&gt;INITIALIZE&lt;/code&gt; 문의 작동 방식을 이해하는 데 도움이 될 수 있습니다 . 샘플 코드는 COBDUMP 프로그램을 사용하여 초기화되는 (또는 초기화되지 않은) 스토리지를 덤프합니다. 참조 &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/gnucobsp.html#COBDUMP&quot;&gt;COBDUMP을&lt;/a&gt; 에</target>
        </trans-unit>
        <trans-unit id="997dd919b9d9dc15d61fb76f3b45d74b2f625a13" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;GO TO ... DEPENDING ON&lt;/code&gt; may be used in a real application situation, and compares it against an alternative &amp;mdash; &lt;code&gt;EVALUATE&lt;/code&gt; (see &lt;a href=&quot;#EVALUATE&quot;&gt;EVALUATE&lt;/a&gt;).</source>
          <target state="translated">다음 예는 실제 응용 프로그램 상황에서 &lt;code&gt;GO TO ... DEPENDING ON&lt;/code&gt; 사용 하는 방법을 보여주고 이를 대안 인 &lt;code&gt;EVALUATE&lt;/code&gt; 와 비교합니다 ( &lt;a href=&quot;#EVALUATE&quot;&gt;EVALUATE&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="160f741f972e96d920091c139d0f33bc6a75fe51" translate="yes" xml:space="preserve">
          <source>The following example shows how&lt;code&gt;GO TO ... DEPENDING ON&lt;/code&gt;may be used in a real application situation, and compares it against an alternative &amp;mdash;&lt;code&gt;EVALUATE&lt;/code&gt;(see &lt;a href=&quot;#EVALUATE&quot;&gt;EVALUATE&lt;/a&gt;).</source>
          <target state="translated">다음 예는 실제 응용 프로그램 상황에서 &lt;code&gt;GO TO ... DEPENDING ON&lt;/code&gt; 사용 하는 방법을 보여 주며 대체 방법 인 &lt;code&gt;EVALUATE&lt;/code&gt; 와 비교합니다 ( &lt;a href=&quot;#EVALUATE&quot;&gt;EVLUATE&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="bde1dec9b7ee657eb089f20a00c03dff528f1725" translate="yes" xml:space="preserve">
          <source>The following example will format a ten digit number (presumably a telephone number) into a &amp;lsquo;</source>
          <target state="translated">다음 예는 10 자리 숫자 (아마도 전화 번호)를 '</target>
        </trans-unit>
        <trans-unit id="afce75d07fc62a769c63d0437e7db51bfa8bbdda" translate="yes" xml:space="preserve">
          <source>The following example will format a ten digit number (presumably a telephone number) into a&lt;code&gt;### ### ####&lt;/code&gt;layout:</source>
          <target state="translated">다음 예제는 10 자리 숫자 (아마도 전화 번호)를 &lt;code&gt;### ### ####&lt;/code&gt; 레이아웃 으로 형식화 합니다.</target>
        </trans-unit>
        <trans-unit id="00b6f986a8985508216608ebd3973c2228200406" translate="yes" xml:space="preserve">
          <source>The following examples illustrate the behaviour of the presence and absence of the &lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt; clause when the field size is different than that of the value being stored. In these examples, the symbol</source>
          <target state="translated">다음 예 는 필드 크기가 저장되는 값의 크기와 다를 때 &lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt; 절의 존재 및 부재 동작을 보여줍니다 . 이 예에서 기호</target>
        </trans-unit>
        <trans-unit id="366e7fd08d56994a77cff5acf1e6768aab310bb0" translate="yes" xml:space="preserve">
          <source>The following examples illustrate the behaviour of the presence and absence of the&lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt;clause when the field size is different than that of the value being stored. In these examples, the symbol</source>
          <target state="translated">다음 예 는 필드 크기가 저장되는 값의 크기와 다른 경우 &lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt; 절의 존재 및 부재의 동작을 보여줍니다 . 이 예에서 기호는</target>
        </trans-unit>
        <trans-unit id="81597e319b3f830f0651705272e5a3a68d64f0ed" translate="yes" xml:space="preserve">
          <source>The following information describes how comments may be embedded into GnuCOBOL program source to provide documentation.</source>
          <target state="translated">다음 정보는 문서를 제공하기 위해 GnuCOBOL 프로그램 소스에 주석을 삽입하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="198edc7343fe5cacb637f5c86b1007d9bd6b6de7" translate="yes" xml:space="preserve">
          <source>The following intrinsic functions, known to other &quot;dialects&quot; of COBOL, are defined to GnuCOBOL as reserved words but are not otherwise implemented currently. Any attempts to use these functions will result in a compile-time error message.</source>
          <target state="translated">COBOL의 다른 &quot;방언&quot;으로 알려진 다음 내장 함수는 GnuCOBOL에 예약어로 정의되어 있지만 현재 구현되어 있지는 않습니다. 이러한 함수를 사용하려고하면 컴파일 타임 오류 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="91e5818b35c5ba09e91c8bde0ab221c391a55253" translate="yes" xml:space="preserve">
          <source>The following intrinsic functions, known to other &amp;ldquo;dialects&amp;rdquo; of COBOL, are defined to GnuCOBOL as reserved words but are not otherwise implemented currently. Any attempts to use these functions will result in a compile-time error message. However they are described at the end of this chapter.</source>
          <target state="translated">COBOL의 다른 &quot;방언&quot;으로 알려진 다음 내장 함수는 GnuCOBOL에 예약어로 정의되어 있지만 현재 달리 구현되지는 않습니다. 이러한 함수를 사용하려고하면 컴파일 타임 오류 메시지가 표시됩니다. 그러나 이들은이 장의 끝에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="85eeb5a0f2634bf880fed3f37b5d0f3b3a2c4471" translate="yes" xml:space="preserve">
          <source>The following is a list of the various environment variables that can play a role in the execution of GnuCOBOL programs.</source>
          <target state="translated">다음은 GnuCOBOL 프로그램 실행에 중요한 역할을 할 수있는 다양한 환경 변수 목록입니다.</target>
        </trans-unit>
        <trans-unit id="9d6af64493c06e9ad590615df4210c4ae73b7c98" translate="yes" xml:space="preserve">
          <source>The following is a sample GnuCOBOL program that registers an error procedure. The output of that program is shown as well. As as you can see, the error handler&amp;rsquo;s messages appear followed by the standard GnuCOBOL message.</source>
          <target state="translated">다음은 오류 절차를 등록하는 샘플 GnuCOBOL 프로그램입니다. 해당 프로그램의 출력도 표시됩니다. 보시다시피 오류 처리기의 메시지 다음에 표준 GnuCOBOL 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="23c37d98c24be8f9f8f3e0b0173b0a2ba7ec9004" translate="yes" xml:space="preserve">
          <source>The following is a sample GnuCOBOL program that registers an exit procedure. The output of that program is shown as well.</source>
          <target state="translated">다음은 종료 프로 시저를 등록하는 샘플 GnuCOBOL 프로그램입니다. 해당 프로그램의 출력도 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bd7d84b0f23f441acb6f96ca4df2ee8cfc27c43a" translate="yes" xml:space="preserve">
          <source>The following is a typical &amp;lt;</source>
          <target state="translated">다음은 일반적인 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="b142e39cf748e168fd9bc62272bbbfd64b74e9ba" translate="yes" xml:space="preserve">
          <source>The following is a typical &lt;var&gt;cursor-locn-buffer&lt;/var&gt; definition:</source>
          <target state="translated">다음은 일반적인 &lt;var&gt;cursor-locn-buffer&lt;/var&gt; 정의입니다.</target>
        </trans-unit>
        <trans-unit id="37584c1f0e6c1a0d62ffdba3c29b838fe7de98fc" translate="yes" xml:space="preserve">
          <source>The following is a verbatim listing of the &quot;default&quot; configuration file (the one used if you don&amp;rsquo;t specify the&lt;code&gt;-conf&lt;/code&gt;switch), just to show you the types of settings that may appear:</source>
          <target state="translated">다음은 &quot;기본&quot;구성 파일 ( &lt;code&gt;-conf&lt;/code&gt; 스위치를 지정하지 않은 경우에 사용되는 구성 파일)의 간단한 목록이며 표시 될 수있는 설정 유형을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0a918ad40b1b2189ce30202c939ff48db6ef128c" translate="yes" xml:space="preserve">
          <source>The following is a verbatim listing of the default configuration file (the one used if you don&amp;rsquo;t specify the</source>
          <target state="translated">다음은 기본 구성 파일의 축어 목록입니다 (지정하지 않은 경우 사용되는 파일).</target>
        </trans-unit>
        <trans-unit id="194f830014236206be81c84e0c88318e80662338" translate="yes" xml:space="preserve">
          <source>The following is an example of how a table might be defined:</source>
          <target state="translated">다음은 테이블을 정의하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="e99768abaae931d2dd8c36a6767cebae32aa9ccb" translate="yes" xml:space="preserve">
          <source>The following is an example of usage:</source>
          <target state="translated">다음은 사용법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="15f9b3c24781824b8eb01ac954dd1654feedc4c2" translate="yes" xml:space="preserve">
          <source>The following is sample output from the program:</source>
          <target state="translated">다음은 프로그램의 샘플 출력입니다.</target>
        </trans-unit>
        <trans-unit id="029f1de2b178019dfa5166a76a21f36645c9c1fe" translate="yes" xml:space="preserve">
          <source>The following is the complete list of ALL reserved words  in the July2020 build of GnuCOBOL 3.1 RC-1. Even though the functionality behind some of these words may not be implemented in this version of GnuCOBOL, none may be used as any user-defined name. This list includes ALL reserved, intrinsics, mnemonics and system and shows some 1100+ words in total. In addition there are the arithmetic and relational symbols see 1.3.15 as well as extra words that can be added and existing words removed by the use of the &amp;ndash;std file content see the specific one used for each sub-set.</source>
          <target state="translated">다음은 GnuCOBOL 3.1 RC-1의 July2020 빌드에있는 모든 예약어의 전체 목록입니다. 이러한 단어의 일부 기능은이 버전의 GnuCOBOL에서 구현되지 않을 수 있지만 사용자 정의 이름으로 사용할 수 없습니다. 이 목록에는 예약 된 모든, 내장 함수, 니모닉 및 시스템이 포함되며 총 1100 개 이상의 단어가 표시됩니다. 또한 산술 및 관계형 기호 (1.3.15 참조)가 있으며 추가 할 수있는 추가 단어와 &amp;ndash;std 파일 내용을 사용하여 제거 된 기존 단어는 각 하위 집합에 사용되는 특정 단어를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0caebdfe73618bcf5c4623305ba78cde546fecd5" translate="yes" xml:space="preserve">
          <source>The following is the complete set of input data used for this example. This is by no means the complete set of data available at &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/cpubenchmark.net&quot;&gt;cpubenchmark.net&lt;/a&gt; &amp;mdash; it is just a representative sample used for this example. For my class, I give my students a report showing the results for almost a thousand CPUs.</source>
          <target state="translated">다음은이 예제에 사용 된 전체 입력 데이터 세트입니다. 이것은 &lt;a href=&quot;https://gnucobol.sourceforge.io/HTML/cpubenchmark.net&quot;&gt;cpubenchmark.net&lt;/a&gt; 에서 사용할 수있는 완전한 데이터 집합이 아니라이 예제에 사용 된 대표적인 샘플 일뿐입니다. 수업을 위해 학생들에게 거의 천 개의 CPU에 대한 결과를 보여주는 보고서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="705f4a50e699efbb9c36b6acc593460ca788b002" translate="yes" xml:space="preserve">
          <source>The following is the complete set of input data used for this example. This is by no means the complete set of data available at &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/cpubenchmark.net&quot;&gt;cpubenchmark.net&lt;/a&gt; &amp;ndash; it is just a representative sample used for this example. For my class, I give my students a report showing the results for almost a thousand CPUs.</source>
          <target state="translated">다음은이 예제에 사용 된 전체 입력 데이터 세트입니다. 이것은 &lt;a href=&quot;https://open-cobol.sourceforge.io/HTML/cpubenchmark.net&quot;&gt;cpubenchmark.net&lt;/a&gt; 에서 사용 가능한 완전한 데이터 세트가 아닙니다. &amp;ndash;이 예제에 사용 된 대표적인 샘플 일뿐입니다. 수업 시간에 학생들에게 거의 수천 개의 CPU에 대한 결과를 보여주는 보고서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="124c21f972909f3b3b9bbd4754f1a5812c74d864" translate="yes" xml:space="preserve">
          <source>The following is the list of possible locale codes, for example, that would be available on a Windows computer running a GnuCOBOL version that was built utilizing the MinGW Unix-emulator and the GNU C compiler (gcc):</source>
          <target state="translated">예를 들어 다음은 MinGW Unix-emulator 및 GNU C 컴파일러 (gcc)를 사용하여 빌드 된 GnuCOBOL 버전을 실행하는 Windows 컴퓨터에서 사용 가능한 로케일 코드 목록입니다.</target>
        </trans-unit>
        <trans-unit id="553f94342684c15083992d4ac8e816abc018a3eb" translate="yes" xml:space="preserve">
          <source>The following picture symbols may be used with numeric data items.</source>
          <target state="translated">다음 그림 기호는 숫자 데이터 항목과 함께 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e8d804aa11df4549aa5dbc50b5937242e0276ea" translate="yes" xml:space="preserve">
          <source>The following points apply if &amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="31e053a28e114d1b01985a96388058114b6a60e4" translate="yes" xml:space="preserve">
          <source>The following points apply if &lt;var&gt;identifier-1&lt;/var&gt; is not defined in the screen section:</source>
          <target state="translated">화면 섹션에 &lt;var&gt;identifier-1&lt;/var&gt; 이 정의되지 않은 경우 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="95484c74b43e6254996fc603e4f99d89bab36cd3" translate="yes" xml:space="preserve">
          <source>The following points apply to Format 1 of the &lt;code&gt;REPLACE&lt;/code&gt; statement:</source>
          <target state="translated">&lt;code&gt;REPLACE&lt;/code&gt; 문의 형식 1에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="22bf501b411bd65ec9057e34411586b9ec8bbbbb" translate="yes" xml:space="preserve">
          <source>The following points apply to Format 1 of the&lt;code&gt;REPLACE&lt;/code&gt;statement:</source>
          <target state="translated">&lt;code&gt;REPLACE&lt;/code&gt; 문의 형식 1에 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="0bbb7197835b89bb8a367cecbd68c15b2ee1e19a" translate="yes" xml:space="preserve">
          <source>The following points apply to Format 2 of the &lt;code&gt;REPLACE&lt;/code&gt; statement:</source>
          <target state="translated">다음 사항은 &lt;code&gt;REPLACE&lt;/code&gt; 문의 형식 2에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="52ba2d6822d3084f3303f4f4cffcdd00cd6c072c" translate="yes" xml:space="preserve">
          <source>The following points apply to Format 2 of the&lt;code&gt;REPLACE&lt;/code&gt;statement:</source>
          <target state="translated">&lt;code&gt;REPLACE&lt;/code&gt; 문의 형식 2에 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b3eda38ff6a8dbca65ddf3e3bdf505b6ccbe5a4" translate="yes" xml:space="preserve">
          <source>The following points apply to an &lt;code&gt;OCCURS&lt;/code&gt; used in the report section:</source>
          <target state="translated">보고서 섹션에서 사용 되는 &lt;code&gt;OCCURS&lt;/code&gt; 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4e24411647918f526878b31ee5a3a3d64c3685a7" translate="yes" xml:space="preserve">
          <source>The following points apply to an&lt;code&gt;OCCURS&lt;/code&gt;used in the report section:</source>
          <target state="translated">보고서 섹션에 사용 된 &lt;code&gt;OCCURS&lt;/code&gt; 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9fdd63d54e872d6dd9012408ffc717fa85e68def" translate="yes" xml:space="preserve">
          <source>The following points apply to the  &lt;code&gt;RESET&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;RESET&lt;/code&gt; 옵션 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab35b3ea513c83d5b6283b3c0e17a3fc3dcfd702" translate="yes" xml:space="preserve">
          <source>The following points apply to the  &lt;code&gt;UPON&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;UPON&lt;/code&gt; 옵션 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f7fea8cde1a1493fe302f4dae1d2f03ef74efea" translate="yes" xml:space="preserve">
          <source>The following points apply to the  &lt;code&gt;USE BEFORE REPORTING&lt;/code&gt; clause:</source>
          <target state="translated">다음 사항은 &lt;code&gt;USE BEFORE REPORTING&lt;/code&gt; 절에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="227ced82fd2bff0fd2dc1832e59fdb1c5e762142" translate="yes" xml:space="preserve">
          <source>The following points apply to the  &lt;code&gt;USE FOR DEBUGGING&lt;/code&gt; clause:</source>
          <target state="translated">다음 사항은 &lt;code&gt;USE FOR DEBUGGING&lt;/code&gt; 절에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e2a0582f584c239d60461a3ef8f0ecff39fb087" translate="yes" xml:space="preserve">
          <source>The following points apply to the &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; and &lt;code&gt;EXIT SECTION&lt;/code&gt; statements:</source>
          <target state="translated">&lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; 및 &lt;code&gt;EXIT SECTION&lt;/code&gt; 문 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b575696e2e99f78534ad8b8f85d7252406b6c8a5" translate="yes" xml:space="preserve">
          <source>The following points apply to the &lt;code&gt;EXIT PERFORM&lt;/code&gt; and &lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; statements:</source>
          <target state="translated">다음 사항이 &lt;code&gt;EXIT PERFORM&lt;/code&gt; 및 &lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; 문에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="697e63fbd3aa4451558adce05798ed04b587f68b" translate="yes" xml:space="preserve">
          <source>The following points apply to the &lt;code&gt;EXIT PROGRAM&lt;/code&gt; and &lt;code&gt;EXIT FUNCTION&lt;/code&gt; statements:</source>
          <target state="translated">다음 사항은 &lt;code&gt;EXIT PROGRAM&lt;/code&gt; 및 &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 문에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="22b1a6b8cfd6b60c9b858755e0be95503bc43f05" translate="yes" xml:space="preserve">
          <source>The following points apply to the specification of &lt;code&gt;EXTERNAL&lt;/code&gt; in a data item&amp;rsquo;s definition:</source>
          <target state="translated">다음 사항 은 데이터 항목 정의에서 &lt;code&gt;EXTERNAL&lt;/code&gt; 사양에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d592c4ecf76c7417719a490ad28e534061168cf0" translate="yes" xml:space="preserve">
          <source>The following points apply to the specification of &lt;code&gt;GLOBAL&lt;/code&gt; in a data item&amp;rsquo;s definition:</source>
          <target state="translated">다음 사항 은 데이터 항목 정의에서 &lt;code&gt;GLOBAL&lt;/code&gt; 사양에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b75851f320bca3dd7e58cf365fc9c61d4dcd7fca" translate="yes" xml:space="preserve">
          <source>The following points apply to the specification of&lt;code&gt;EXTERNAL&lt;/code&gt;in a data item&amp;rsquo;s definition:</source>
          <target state="translated">다음 사항 은 데이터 항목 정의 의 &lt;code&gt;EXTERNAL&lt;/code&gt; 사양에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ba0251d82e61c3222178a2506bc7d1fb62aa013d" translate="yes" xml:space="preserve">
          <source>The following points apply to the specification of&lt;code&gt;GLOBAL&lt;/code&gt;in a data item&amp;rsquo;s definition:</source>
          <target state="translated">다음 사항 은 데이터 항목 정의에서 &lt;code&gt;GLOBAL&lt;/code&gt; 사양에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8a9bcb552db1785ed0eded1720a168da5a955db" translate="yes" xml:space="preserve">
          <source>The following points apply to the use of the &lt;code&gt;CONVERTING&lt;/code&gt; clause:</source>
          <target state="translated">&lt;code&gt;CONVERTING&lt;/code&gt; 절 사용에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9211726fb9381ed2220792d1b5897295b462cf7f" translate="yes" xml:space="preserve">
          <source>The following points apply to the use of the &lt;code&gt;REPLACING&lt;/code&gt; clause:</source>
          <target state="translated">&lt;code&gt;REPLACING&lt;/code&gt; 절 사용에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7cc2fa5d1d0c0739c66bf244d8e2b982f8d2d3a2" translate="yes" xml:space="preserve">
          <source>The following points apply to the use of the &lt;code&gt;TALLYING&lt;/code&gt; clause:</source>
          <target state="translated">&lt;code&gt;TALLYING&lt;/code&gt; 절 사용시 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="21c59e6d273d1ed46c8d42cc87af54794bf3d9be" translate="yes" xml:space="preserve">
          <source>The following points apply to the use of the&lt;code&gt;CONVERTING&lt;/code&gt;clause:</source>
          <target state="translated">&lt;code&gt;CONVERTING&lt;/code&gt; 절 사용에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d75a94cadf1c4b5adfbac0f31dcb95739589afa" translate="yes" xml:space="preserve">
          <source>The following points apply to the use of the&lt;code&gt;REPLACING&lt;/code&gt;clause:</source>
          <target state="translated">&lt;code&gt;REPLACING&lt;/code&gt; 절 사용에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d86df0f22e645629211a77bd6348475c6b50938a" translate="yes" xml:space="preserve">
          <source>The following points apply to the use of the&lt;code&gt;TALLYING&lt;/code&gt;clause:</source>
          <target state="translated">&lt;code&gt;TALLYING&lt;/code&gt; 절 사용에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c2b4d096d92eb853d660cb08f92a1cab03ed6074" translate="yes" xml:space="preserve">
          <source>The following points apply to the&lt;code&gt;EXIT PARAGRAPH&lt;/code&gt;and&lt;code&gt;EXIT SECTION&lt;/code&gt;statements:</source>
          <target state="translated">&lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; 및 &lt;code&gt;EXIT SECTION&lt;/code&gt; 문 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="42cd9d466d95cb4f3d753f2dd5a73c64ba581e1a" translate="yes" xml:space="preserve">
          <source>The following points apply to the&lt;code&gt;EXIT PERFORM&lt;/code&gt;and&lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt;statements:</source>
          <target state="translated">&lt;code&gt;EXIT PERFORM&lt;/code&gt; 및 &lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt; 문 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd15a7462798ca21e2492f22cc4c1d492afa9481" translate="yes" xml:space="preserve">
          <source>The following points apply to the&lt;code&gt;EXIT PROGRAM&lt;/code&gt;and&lt;code&gt;EXIT FUNCTION&lt;/code&gt;statements:</source>
          <target state="translated">&lt;code&gt;EXIT PROGRAM&lt;/code&gt; 및 &lt;code&gt;EXIT FUNCTION&lt;/code&gt; 문 에는 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="853fe56205a948a605bf5ca30859136430acc83b" translate="yes" xml:space="preserve">
          <source>The following points apply to the&lt;code&gt;RESET&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RESET&lt;/code&gt; 에는 다음 사항이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="dd5de0fb6dadb197d1bb40f183c0f99c48385b24" translate="yes" xml:space="preserve">
          <source>The following points apply to the&lt;code&gt;UPON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UPON&lt;/code&gt; 에 적용되는 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d08f48c6cacb6d48aece6396b67314be33704e1f" translate="yes" xml:space="preserve">
          <source>The following points apply to the&lt;code&gt;USE BEFORE REPORTING&lt;/code&gt;</source>
          <target state="translated">다음 사항은 &lt;code&gt;USE BEFORE REPORTING&lt;/code&gt; 적용됩니다</target>
        </trans-unit>
        <trans-unit id="1d8e0f2d2ad20d59349e715372f70726296e9490" translate="yes" xml:space="preserve">
          <source>The following points apply to the&lt;code&gt;USE FOR DEBUGGING&lt;/code&gt;</source>
          <target state="translated">다음은 &lt;code&gt;USE FOR DEBUGGING&lt;/code&gt; 적용되는 사항입니다.</target>
        </trans-unit>
        <trans-unit id="09ee6aaad7c3c66344e2dc8101621db9aa01d17a" translate="yes" xml:space="preserve">
          <source>The following points apply to using the &amp;lt;</source>
          <target state="translated">다음 사항은 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="bfb9147067c732457c3dbfbb31cca37fbfefe4fd" translate="yes" xml:space="preserve">
          <source>The following points apply to using the &lt;code&gt;VALUE&lt;/code&gt; clause in the definition of a condition name:</source>
          <target state="translated">조건 이름 정의에서 &lt;code&gt;VALUE&lt;/code&gt; 절 을 사용하는 경우 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b3322eccb27783026363f4b87d7f7ef4bd588a6" translate="yes" xml:space="preserve">
          <source>The following points apply to using the &lt;code&gt;VALUE&lt;/code&gt; clause in the definition of any other data item:</source>
          <target state="translated">다음 사항은 다른 데이터 항목의 정의에서 &lt;code&gt;VALUE&lt;/code&gt; 절 을 사용하는 데 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="20b5a2668f6590ccb3fb7444e4088b1bb1f91058" translate="yes" xml:space="preserve">
          <source>The following points apply to using the &lt;var&gt;literal-n&lt;/var&gt; specifications to compose a custom character set:</source>
          <target state="translated">다음 사항은 &lt;var&gt;literal-n&lt;/var&gt; 사양을 사용하여 사용자 지정 문자 집합을 구성하는 데 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="01074eaa3539802071c51ac260ee3828c1fa197a" translate="yes" xml:space="preserve">
          <source>The following points apply to using the&lt;code&gt;VALUE&lt;/code&gt;clause in the definition of a condition name:</source>
          <target state="translated">조건 이름 정의에서 &lt;code&gt;VALUE&lt;/code&gt; 절 을 사용하는 경우 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="5565a7dfe6431b09250249469dfec8e1f60e8178" translate="yes" xml:space="preserve">
          <source>The following points apply to using the&lt;code&gt;VALUE&lt;/code&gt;clause in the definition of any other data item:</source>
          <target state="translated">다른 데이터 항목의 정의에서 &lt;code&gt;VALUE&lt;/code&gt; 절 을 사용하는 경우 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a1a0d19b7116f6e1457addaa2645e2948a7f07dd" translate="yes" xml:space="preserve">
          <source>The following points apply when &amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="076bae8a7820de9888becf7bd7a60bd6c4128ce7" translate="yes" xml:space="preserve">
          <source>The following points apply when &lt;var&gt;identifier-1&lt;/var&gt; is specified:</source>
          <target state="translated">다음 사항은 &lt;var&gt;identifier-1&lt;/var&gt; 이 지정 될 때 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b71b4880f0f17ca3f6e638fc362e23071135eb97" translate="yes" xml:space="preserve">
          <source>The following points apply when &lt;var&gt;report-name-1&lt;/var&gt; is specified:</source>
          <target state="translated">&lt;var&gt;report-name-1&lt;/var&gt; 이 지정된 경우 다음 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="33f920b7696bb1b213daecf0cffded77427978ea" translate="yes" xml:space="preserve">
          <source>The following points describe the &lt;code&gt;EXIT&lt;/code&gt; statement with none of the optional clauses:</source>
          <target state="translated">다음 사항 은 선택적 절이없는 &lt;code&gt;EXIT&lt;/code&gt; 문을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="30d30ea1f691e4a4165c51c2f7ae5d1bbf5581dc" translate="yes" xml:space="preserve">
          <source>The following points describe the sequence of events that take place as a result of the &lt;code&gt;VARYING&lt;/code&gt; portion of the clause:</source>
          <target state="translated">다음 사항 은 절의 &lt;code&gt;VARYING&lt;/code&gt; 부분의 결과로 발생하는 이벤트 순서를 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="8395017877ca8cf95569c049f928580cac154ca9" translate="yes" xml:space="preserve">
          <source>The following points describe the sequence of events that take place as a result of the&lt;code&gt;VARYING&lt;/code&gt;portion of the clause:</source>
          <target state="translated">다음 사항 은 절의 &lt;code&gt;VARYING&lt;/code&gt; 부분의 결과로 발생하는 이벤트 순서를 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="86a782d35e30f2dcd8b9de269494a07a7f19cf07" translate="yes" xml:space="preserve">
          <source>The following points describe the&lt;code&gt;EXIT&lt;/code&gt;statement with none of the optional clauses:</source>
          <target state="translated">다음 은 선택적 절이없는 &lt;code&gt;EXIT&lt;/code&gt; 문에 대한 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="0de6c430bbef6fccd8c0e7d11b664ee2db71a6f6" translate="yes" xml:space="preserve">
          <source>The following points document the use for format 2 of the &lt;code&gt;LINE&lt;/code&gt; clause:</source>
          <target state="translated">다음 사항은 &lt;code&gt;LINE&lt;/code&gt; 절의 형식 2에 대한 사용을 문서화합니다 .</target>
        </trans-unit>
        <trans-unit id="e6125fe0d3b1485dfb488aa96d083e7a053607df" translate="yes" xml:space="preserve">
          <source>The following points document the use for format 2 of the&lt;code&gt;LINE&lt;/code&gt;clause:</source>
          <target state="translated">다음 사항은 &lt;code&gt;LINE&lt;/code&gt; 절의 형식 2에 대한 사용법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="a436720f5cf1007750af67c2d1229bf84f04022d" translate="yes" xml:space="preserve">
          <source>The following points document the use of format 1 of the &lt;code&gt;LINE&lt;/code&gt; clause:</source>
          <target state="translated">다음 사항은 &lt;code&gt;LINE&lt;/code&gt; 절의 형식 1 사용을 문서화합니다 .</target>
        </trans-unit>
        <trans-unit id="27f38b00f71f3382ea8a9f3630169bd6ffb1c71f" translate="yes" xml:space="preserve">
          <source>The following points document the use of format 1 of the&lt;code&gt;LINE&lt;/code&gt;clause:</source>
          <target state="translated">다음은 &lt;code&gt;LINE&lt;/code&gt; 절의 형식 1 사용에 대한 내용입니다 .</target>
        </trans-unit>
        <trans-unit id="fb3b7e1ad628074ff8337d4a757a9d1f90cb5620" translate="yes" xml:space="preserve">
          <source>The following points pertain to any &amp;lt;&amp;lt;</source>
          <target state="translated">다음 사항은 &amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7bbdc4f5d10236c7864fe447fe85ebd1308db781" translate="yes" xml:space="preserve">
          <source>The following points pertain to any &lt;var&gt;CDF-Conditional-Expression-n&lt;/var&gt;:</source>
          <target state="translated">다음 사항은 모든 &lt;var&gt;CDF-Conditional-Expression-n&lt;/var&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="7ec4ce59942060d5138deaba201f51fa189c5f8e" translate="yes" xml:space="preserve">
          <source>The following points pertain to the Input Stage:</source>
          <target state="translated">다음은 입력 단계와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb7c3e589adda8a6762f96ae75d8883b526c5b12" translate="yes" xml:space="preserve">
          <source>The following points pertain to the Output Stage:</source>
          <target state="translated">다음은 출력 단계와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea65bea84fa906ded12d92905a59cf27a5005b89" translate="yes" xml:space="preserve">
          <source>The following points pertain to the Sort Stage:</source>
          <target state="translated">다음은 정렬 단계와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4efb8d394615318137e2b4345b5811efceccbc3" translate="yes" xml:space="preserve">
          <source>The following points pertain to the data division:</source>
          <target state="translated">다음은 데이터 구분과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="062d5c2389b9841120e127eb1934d617814ac12d" translate="yes" xml:space="preserve">
          <source>The following points pertain to the environment division:</source>
          <target state="translated">다음은 환경 부문과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf3248b5f685b678cbb8e1bdf357d04a64a69741" translate="yes" xml:space="preserve">
          <source>The following points pertain to the identification division</source>
          <target state="translated">다음은 식별 부문과 관련이 있습니다</target>
        </trans-unit>
        <trans-unit id="03e269134cad365369d4486a8548afed98fa2530" translate="yes" xml:space="preserve">
          <source>The following points pertain to the procedure division:</source>
          <target state="translated">다음은 절차 부서와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b1f1362f30062c0591979059dae19410607d32a" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use (or not) of the &lt;code&gt;ADVANCING&lt;/code&gt; clause:</source>
          <target state="translated">다음 사항은 &lt;code&gt;ADVANCING&lt;/code&gt; 절의 사용 여부와 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31e3e4080390f0e787e9d90b49cd72a87e05ba13" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use (or not) of the&lt;code&gt;ADVANCING&lt;/code&gt;clause:</source>
          <target state="translated">다음은 &lt;code&gt;ADVANCING&lt;/code&gt; 절의 사용 여부와 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fd4b2c63803038035056066f68ea5879ee3db29" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of the  &lt;code&gt;EXCEPTION STATUS&lt;/code&gt; option:</source>
          <target state="translated">다음 사항은 &lt;code&gt;EXCEPTION STATUS&lt;/code&gt; 옵션 사용과 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="5496a8a13e5d5369e3cc3677afd0306b055b0356" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of the  &lt;code&gt;LINES&lt;/code&gt; and  &lt;code&gt;COLUMNS&lt;/code&gt; options:</source>
          <target state="translated">다음 사항은 &lt;code&gt;LINES&lt;/code&gt; 및 &lt;code&gt;COLUMNS&lt;/code&gt; 옵션 사용과 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="b03e34fb4abe24a578702fb8cc9c75d3c392ee91" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of the  &lt;code&gt;USER NAME&lt;/code&gt; option:</source>
          <target state="translated">다음 사항은 &lt;code&gt;USER NAME&lt;/code&gt; 옵션 사용과 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="12493d356b52d2f5bc23b1bb1571b752ffbf801b" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of the&lt;code&gt;EXCEPTION STATUS&lt;/code&gt;</source>
          <target state="translated">다음은 &lt;code&gt;EXCEPTION STATUS&lt;/code&gt; 사용과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5158e26c7b1e647978bb730d5816fde4b5dcede1" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of the&lt;code&gt;LINES&lt;/code&gt;</source>
          <target state="translated">다음은 &lt;code&gt;LINES&lt;/code&gt; 사용과 관련이 있습니다</target>
        </trans-unit>
        <trans-unit id="e440f306e0239dea81464164871f522fbb726f99" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of the&lt;code&gt;USER NAME&lt;/code&gt;</source>
          <target state="translated">다음은 &lt;code&gt;USER NAME&lt;/code&gt; 사용과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7ddf9b619a5034e422d6691043d9fc1afa096f4" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of these clauses on &lt;code&gt;READ&lt;/code&gt; (see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;) and &lt;code&gt;RETURN&lt;/code&gt; (see &lt;a href=&quot;#RETURN&quot;&gt;RETURN&lt;/a&gt;) statements:</source>
          <target state="translated">다음 사항은 &lt;code&gt;READ&lt;/code&gt; ( &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt; 참조 ) 및 &lt;code&gt;RETURN&lt;/code&gt; ( &lt;a href=&quot;#RETURN&quot;&gt;RETURN&lt;/a&gt; 참조 ) 문 에서 이러한 절을 사용하는 것과 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3eba08b0bb7f1b0e716793d972887efa64263685" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of these clauses on &lt;code&gt;SEARCH&lt;/code&gt; (see &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt;) and &lt;code&gt;SEARCH ALL&lt;/code&gt; (see &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;) statements:</source>
          <target state="translated">다음 사항은 &lt;code&gt;SEARCH&lt;/code&gt; ( &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt; 참조 ) 및 &lt;code&gt;SEARCH ALL&lt;/code&gt; ( &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt; 참조 ) 문 에서 이러한 절을 사용하는 것과 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="719d377db5055cf45363c0790dbdc00976de8f4f" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of these clauses on&lt;code&gt;READ&lt;/code&gt;(see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;) and&lt;code&gt;RETURN&lt;/code&gt;(see &lt;a href=&quot;#RETURN&quot;&gt;RETURN&lt;/a&gt;) statements:</source>
          <target state="translated">다음은 &lt;code&gt;READ&lt;/code&gt; ( &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt; 참조 ) 및 &lt;code&gt;RETURN&lt;/code&gt; ( &lt;a href=&quot;#RETURN&quot;&gt;RETURN&lt;/a&gt; 참조 ) 명령문 에서 이러한 절을 사용하는 것과 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c0dbf6b0c6b9bb3d3bfb0f3213c6629bf0aed90e" translate="yes" xml:space="preserve">
          <source>The following points pertain to the use of these clauses on&lt;code&gt;SEARCH&lt;/code&gt;(see &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt;) and&lt;code&gt;SEARCH ALL&lt;/code&gt;(see &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt;) statements:</source>
          <target state="translated">다음은 &lt;code&gt;SEARCH&lt;/code&gt; ( &lt;a href=&quot;#SEARCH&quot;&gt;SEARCH&lt;/a&gt; 참조 ) 및 &lt;code&gt;SEARCH ALL&lt;/code&gt; ( &lt;a href=&quot;#SEARCH-ALL&quot;&gt;SEARCH ALL&lt;/a&gt; 참조 ) 명령문 에서이 절을 사용하는 것과 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3c508569ee4143fe592c6c2f3650b7089d9da51f" translate="yes" xml:space="preserve">
          <source>The following program compares the performance of performing arithmetic operations (in a totally non-scientific, non-rigorous way) against data items with a &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of &lt;code&gt;DISPLAY&lt;/code&gt;, &lt;code&gt;COMP&lt;/code&gt; and &lt;code&gt;BINARY-LONG&lt;/code&gt;. It was actually my intent when I first wrote the program to merely demonstrate the relative performance differences between different types of numeric data storage, and it certainly met that objective.</source>
          <target state="translated">다음 프로그램 은 &lt;code&gt;DISPLAY&lt;/code&gt; , &lt;code&gt;COMP&lt;/code&gt; 및 &lt;code&gt;BINARY-LONG&lt;/code&gt; 의 &lt;code&gt;USAGE&lt;/code&gt; ( &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; 참조 ) 가있는 데이터 항목에 대해 산술 연산 (완전히 비과학적이고 엄격하지 않은 방식으로)을 수행하는 성능을 비교합니다 . 실제로 다른 유형의 숫자 ​​데이터 저장 장치 간의 상대적인 성능 차이를 보여주기 위해 프로그램을 처음 작성했을 때 실제로 내 의도였으며 확실히 그 목표를 충족했습니다.</target>
        </trans-unit>
        <trans-unit id="d24afbc6f2d485b7cd781b106251ce0d71291a0e" translate="yes" xml:space="preserve">
          <source>The following program compares the performance of performing arithmetic operations (in a totally non-scientific, non-rigorous way) against data items with a&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of&lt;code&gt;DISPLAY&lt;/code&gt;&lt;code&gt;COMP&lt;/code&gt;and&lt;code&gt;BINARY-LONG&lt;/code&gt; It was actually my intent when I first wrote the program to merely demonstrate the relative performance differences between different types of numeric data storage, and it certainly met that objective.</source>
          <target state="translated">다음 프로그램은 &lt;code&gt;DISPLAY&lt;/code&gt; &lt;code&gt;COMP&lt;/code&gt; 및 &lt;code&gt;BINARY-LONG&lt;/code&gt; 의 &lt;code&gt;USAGE&lt;/code&gt; ( &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; 참조 ) 가있는 데이터 항목에 대해 산술 연산 수행 성능을 완전히 과학적이지 않고 엄격하지 않은 방식으로 비교 합니다. 다른 유형의 숫자 ​​데이터 스토리지 간의 상대적인 성능 차이를 보여주기위한 프로그램으로, 그 목표를 확실히 달성했습니다.</target>
        </trans-unit>
        <trans-unit id="3ae52105c933811fb8f6f7740b69261a9c431874" translate="yes" xml:space="preserve">
          <source>The following rules apply to the files named on the &lt;code&gt;USING&lt;/code&gt; clause:</source>
          <target state="translated">다음 규칙은 &lt;code&gt;USING&lt;/code&gt; 절 에 명명 된 파일에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="599b10c8f2147b43e83dc79f5a3860b83bb649dc" translate="yes" xml:space="preserve">
          <source>The following rules apply to the files named on the&lt;code&gt;USING&lt;/code&gt;clause:</source>
          <target state="translated">다음 규칙은 &lt;code&gt;USING&lt;/code&gt; 절 에 이름이 지정된 파일에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d99382866a30c83c1ebd98e2e7af5871b1f6497a" translate="yes" xml:space="preserve">
          <source>The following rules apply to the rounding behaviour induced by this clause.</source>
          <target state="translated">이 규칙에 의해 유발 된 반올림 동작에는 다음 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="368e8232a613c17c0989c7d7b72de03d6ead63f8" translate="yes" xml:space="preserve">
          <source>The following rules establish default values for the various &lt;code&gt;PAGE LIMIT&lt;/code&gt; clauses, assuming there is one:</source>
          <target state="translated">다음 규칙 은 하나가 있다고 가정 하고 다양한 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 절에 대한 기본값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8d0bc3e2c36c1b7b5bb2959b57a45a21c7ccea5c" translate="yes" xml:space="preserve">
          <source>The following rules establish default values for the various&lt;code&gt;PAGE LIMIT&lt;/code&gt;clauses, assuming there is one:</source>
          <target state="translated">다음 규칙은 다양한 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 절에 대한 기본값을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ea2925da5622fa8ab318ecd2140c2a5e60a5a19c" translate="yes" xml:space="preserve">
          <source>The following rules must all be followed in order to use &lt;code&gt;REDEFINES&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;REDEFINES&lt;/code&gt; 를 사용하려면 다음 규칙을 모두 따라야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d23af711e1802819dacb30d086c6d8272fc1853" translate="yes" xml:space="preserve">
          <source>The following rules must all be followed in order to use REDEFINES:</source>
          <target state="translated">REDEFINES를 사용하려면 다음 규칙을 모두 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="d925a1d4012d6e6414bf2bb22ffd7a90a065a1cb" translate="yes" xml:space="preserve">
          <source>The following rules pertain to the  &lt;code&gt;CONTROL&lt;/code&gt; clause:</source>
          <target state="translated">다음 규칙은 &lt;code&gt;CONTROL&lt;/code&gt; 절 과 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="19d71fa0d8cd4560823933bd259a0dc8335049a3" translate="yes" xml:space="preserve">
          <source>The following rules pertain to the  &lt;code&gt;PAGE LIMITS&lt;/code&gt; clause:</source>
          <target state="translated">다음 규칙은 &lt;code&gt;PAGE LIMITS&lt;/code&gt; 절 과 관련됩니다 .</target>
        </trans-unit>
        <trans-unit id="b957d67ca238f31ec12f9e4f4b5aca299d504124" translate="yes" xml:space="preserve">
          <source>The following rules pertain to the&lt;code&gt;CONTROL&lt;/code&gt;</source>
          <target state="translated">다음 규칙은 &lt;code&gt;CONTROL&lt;/code&gt; 과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="356cbb94b0b66db95971a2e8a87433719a5fa086" translate="yes" xml:space="preserve">
          <source>The following rules pertain to the&lt;code&gt;PAGE LIMITS&lt;/code&gt;</source>
          <target state="translated">다음 규칙은 &lt;code&gt;PAGE LIMITS&lt;/code&gt; 와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="11e9fc18005637572dc9852fecf6d0d82d5a76b6" translate="yes" xml:space="preserve">
          <source>The following sample program illustrates the &lt;code&gt;UNSTRING&lt;/code&gt; statement statement.</source>
          <target state="translated">다음 샘플 프로그램은 &lt;code&gt;UNSTRING&lt;/code&gt; 문을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6f63eff88655fc2c5c90f78c9dd03662a00a6cf1" translate="yes" xml:space="preserve">
          <source>The following sample program illustrates the&lt;code&gt;UNSTRING&lt;/code&gt;statement statement.</source>
          <target state="translated">다음 샘플 프로그램은 &lt;code&gt;UNSTRING&lt;/code&gt; 문을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c008981e4301b9f349748592a5cf59ca960addaa" translate="yes" xml:space="preserve">
          <source>The following sample program uses all the MODULE- Functions:</source>
          <target state="translated">다음 샘플 프로그램은 모든 MODULE- 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="58196a4b8744d311885309c73371f67a9be78fee" translate="yes" xml:space="preserve">
          <source>The following sections describe the various built-in subroutines.</source>
          <target state="translated">다음 섹션에서는 다양한 내장 서브 루틴에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e04ec0ea7f3a14393306a1c0e653680a25209eb6" translate="yes" xml:space="preserve">
          <source>The following sections describe the various built-in subroutines. ALL SUBROUTINE ARGUMENTS ARE MANDATORY EXCEPT WHERE EXPLICITLY NOTED TO THE CONTRARY. Any subroutine returning a value to the&lt;code&gt;RETURN-CODE&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) could utilize the&lt;code&gt;RETURNING&lt;/code&gt;clause on the&lt;code&gt;CALL&lt;/code&gt;statement to return the result back to the full-word binary data item of your choice.</source>
          <target state="translated">다음 섹션에서는 다양한 내장 서브 루틴에 대해 설명합니다. 모든 설득력있는 주장은 그 반대로 명시 적으로 언급 된 경우를 제외하고는 필수 사항입니다. 받는 값을 반환 모든 서브 루틴 &lt;code&gt;RETURN-CODE&lt;/code&gt; 의 특수 레지스터 (참조 &lt;a href=&quot;#Special-Registers&quot;&gt;특수 레지스터를&lt;/a&gt; 활용할 수) &lt;code&gt;RETURNING&lt;/code&gt; 온 절을 &lt;code&gt;CALL&lt;/code&gt; 의 선택의 전체 단어 이진 데이터 항목에 대한 결과 등을 반환하는 문.</target>
        </trans-unit>
        <trans-unit id="a99cf75357bf1d1f77f561c6dd5725acec18e2f6" translate="yes" xml:space="preserve">
          <source>The following sets of reserved words are interchangeable:</source>
          <target state="translated">다음 예약어 세트는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ceb1e7c64d89bb65526c3c04d5359018473da5c4" translate="yes" xml:space="preserve">
          <source>The following shows how the previous example could have been coded without a &lt;code&gt;GO TO&lt;/code&gt; by utilizing an &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; statement.</source>
          <target state="translated">다음은 &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; 문 을 사용하여 &lt;code&gt;GO TO&lt;/code&gt; 없이 이전 예제를 코딩하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b2f11552ef149927418cc9293545fdf4ffa29715" translate="yes" xml:space="preserve">
          <source>The following shows how the previous example could have been coded without a&lt;code&gt;GO TO&lt;/code&gt;by utilizing an&lt;code&gt;EXIT PARAGRAPH&lt;/code&gt;statement.</source>
          <target state="translated">다음은 &lt;code&gt;EXIT PARAGRAPH&lt;/code&gt; 문 을 사용하여 &lt;code&gt;GO TO&lt;/code&gt; 없이 이전 예제를 코딩 할 수있는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="11e68624f8d941f91171efdd88731325507fd9ba" translate="yes" xml:space="preserve">
          <source>The following shows the output from using -Xref.</source>
          <target state="translated">다음은 -Xref를 사용한 출력을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="364b25b0e616839fec5c239c158cd11168e3f52d" translate="yes" xml:space="preserve">
          <source>The following shows the output from using &lt;code&gt;cobxref&lt;/code&gt; with the same program example.</source>
          <target state="translated">다음은 동일한 프로그램 예제 에서 &lt;code&gt;cobxref&lt;/code&gt; 를 사용한 출력을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ff3cb74a05e06b7673b3b83b1e344f7202ec4fb7" translate="yes" xml:space="preserve">
          <source>The following special rules apply only to sort/merge work files:</source>
          <target state="translated">다음 특수 규칙은 작업 파일 정렬 / 병합에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="33d4ca609a2f561515c740dc47a2a837e5885030" translate="yes" xml:space="preserve">
          <source>The following table summarizes the various USAGE specifications available in GnuCOBOL.</source>
          <target state="translated">다음 표는 GnuCOBOL에서 사용 가능한 다양한 USAGE 사양을 요약 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="b006600e10a9b909f25f044fdcb192c4ea44fb6d" translate="yes" xml:space="preserve">
          <source>The following two code examples define the same set of figurative constant names for five ASCII control characters (assuming that ASCII is the system&amp;rsquo;s native character set). The two examples are identical in their effects, even though the manner in which the figurative constants are defined is different.</source>
          <target state="translated">다음 두 코드 예제는 5 개의 ASCII 제어 문자 (ASCII가 시스템의 기본 문자 세트라고 가정)에 대해 동일한 형상 상수 이름 세트를 정의합니다. 형상 상수가 정의되는 방식이 다르더라도 두 예는 효과가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ff426949d19059bdb56198809600aa85220089c0" translate="yes" xml:space="preserve">
          <source>The following two code examples define the same set of figurative constant names for five ASCII control characters (assuming that ASCII is the system&amp;rsquo;s native character set). The two examples are identical in their effects, even though the way the figurative constants are defined is different.</source>
          <target state="translated">다음 두 코드 예제는 5 개의 ASCII 제어 문자에 대해 동일한 형상 상수 이름 집합을 정의합니다 (ASCII가 시스템의 기본 문자 집합이라고 가정). 두 가지 예는 형상 상수가 정의되는 방식이 다르지만 효과가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b828832010d31dee006caf2a03ff97c599bb0ab2" translate="yes" xml:space="preserve">
          <source>The following two examples illustrate two different ways a report could include four quarters worth of sales figures in it&amp;rsquo;s detail lines &amp;mdash; one doing things &amp;rsquo;the hard way&amp;rsquo; and one using the advanced&lt;code&gt;OCCURS&lt;/code&gt;capabilities of&lt;code&gt;STEP&lt;/code&gt;and&lt;code&gt;VARYING&lt;/code&gt; Both assume the definition of the following table exists in working-storage:</source>
          <target state="translated">다음 두 가지 예는 보고서가 세부 라인에 4/4 분의 판매량을 포함 할 수있는 두 가지 다른 방법을 보여줍니다. 하나는 어려운 방법을 수행하는 것과 하나 는 &lt;code&gt;STEP&lt;/code&gt; 및 &lt;code&gt;VARYING&lt;/code&gt; 의 고급 &lt;code&gt;OCCURS&lt;/code&gt; 기능을 사용하는 것 입니다. 작업 스토리지에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="907f56ebc807f81d532fa25c8f709905e7e85d96" translate="yes" xml:space="preserve">
          <source>The following two examples illustrate two different ways a report could include four quarters worth of sales figures in its detail lines &amp;mdash; one doing things &amp;rsquo;the hard way&amp;rsquo; and one using the advanced &lt;code&gt;OCCURS&lt;/code&gt; capabilities of &lt;code&gt;STEP&lt;/code&gt; and &lt;code&gt;VARYING&lt;/code&gt;. Both assume the definition of the following table exists in working-storage:</source>
          <target state="translated">다음 두 가지 예는 보고서의 세부 정보 라인에 4 분기 분량의 판매 수치를 포함 할 수있는 두 가지 방법을 보여줍니다. 하나는 '어려운 방식'을 수행하고 다른 하나 는 &lt;code&gt;STEP&lt;/code&gt; 및 &lt;code&gt;VARYING&lt;/code&gt; 의 고급 &lt;code&gt;OCCURS&lt;/code&gt; 기능을 사용합니다 . 둘 다 작업 저장소에 다음 테이블의 정의가 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ce7e9413c874d6d7ef9bb02b48c653ec1e7ce935" translate="yes" xml:space="preserve">
          <source>The following two statements produce identical results:</source>
          <target state="translated">다음 두 문장은 동일한 결과를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fae44f8b9360965e84e641ec42c733c33504e3d1" translate="yes" xml:space="preserve">
          <source>The formatting of those report lines that make up the main body of the report (detail).</source>
          <target state="translated">보고서의 본문을 구성하는 보고서 행의 형식 (세부 사항).</target>
        </trans-unit>
        <trans-unit id="5457ad50ec74e85af7981f8d5127bac6e5ce5c4b" translate="yes" xml:space="preserve">
          <source>The four paragraphs in this section may be specified in any order but if not in this order, a warning will be issued.</source>
          <target state="translated">이 섹션의 네 단락은 임의의 순서로 지정할 수 있지만이 순서가 아닌 경우 경고가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="41572e1cda3794fcffa30e523a09199a7304363d" translate="yes" xml:space="preserve">
          <source>The function argument must be a national or alphanumeric literal and the content, a combined date and time format.</source>
          <target state="translated">함수 인수는 국가 또는 영숫자 리터럴과 내용, 결합 된 날짜 및 시간 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="fb8728855219811ee7e5df2db9f0b67fab7976c2" translate="yes" xml:space="preserve">
          <source>The function of the single, mandatory,  &lt;code&gt;WHEN&lt;/code&gt; clause is to compare the key field(s) of the table, as indexed by the search index data item, against whatever literal and/or identifier values you are comparing the key field(s) to in the &lt;var&gt;conditional-expression-1&lt;/var&gt; in order to locate the desired entry in the table. The search index will be automatically varied in a manner designed to require the minimum number of tests.</source>
          <target state="translated">단일, 필수, &lt;code&gt;WHEN&lt;/code&gt; 절의 기능은 검색 인덱스 데이터 항목에 의해 인덱싱 된 테이블의 키 필드를 키 필드와 비교하는 리터럴 및 / 또는 식별자 값과 비교하는 것입니다. 에 &lt;var&gt;conditional-expression-1&lt;/var&gt; 주문 테이블에서 원하는 항목을 찾을 수있다. 검색 인덱스는 최소 테스트 횟수를 요구하도록 설계된 방식으로 자동으로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="cac937662f2d9cd67b16828a90b34f13abbc65e3" translate="yes" xml:space="preserve">
          <source>The function of the single, mandatory,&lt;code&gt;WHEN&lt;/code&gt;</source>
          <target state="translated">단일, 필수, &lt;code&gt;WHEN&lt;/code&gt; 의 기능</target>
        </trans-unit>
        <trans-unit id="b4266c5208ead97c18144069abdf96648328609e" translate="yes" xml:space="preserve">
          <source>The general usage and syntax of cobcrun is as follows as issued by running cobcrun -h (or &amp;ndash;help) :</source>
          <target state="translated">cobcrun의 일반적인 사용법과 구문은 cobcrun -h (또는 &amp;ndash;help)를 실행하여 다음과 같이 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="87e5d08cdf7802bad178974dbdfcebfce1814153" translate="yes" xml:space="preserve">
          <source>The idea is to pass two string and one full-word unsigned arguments to the subprogram, have the subprogram print them out, change all three and pass a return code of 2 back to the caller. The caller will then re-display the three arguments (showing changes only to the two &lt;code&gt;BY REFERENCE&lt;/code&gt; arguments), display the return code and halt.</source>
          <target state="translated">아이디어는 두 개의 문자열과 하나의 서명되지 않은 전체 단어 인수를 서브 프로그램에 전달하고, 서브 프로그램이이를 출력하게하고, 세 개를 모두 변경하고 2의 리턴 코드를 호출자에게 다시 전달하는 것입니다. 그런 다음 호출자는 세 개의 인수를 다시 표시하고 (두 &lt;code&gt;BY REFERENCE&lt;/code&gt; 인수에 대한 변경 사항 만 표시) 반환 코드를 표시하고 중지합니다.</target>
        </trans-unit>
        <trans-unit id="a8447b3df7f6dccacd4436e40452ddb545ba54a4" translate="yes" xml:space="preserve">
          <source>The idea is to pass two string and one full-word unsigned arguments to the subprogram, have the subprogram print them out, change all three and pass a return code of 2 back to the caller. The caller will then re-display the three arguments (showing changes only to the two&lt;code&gt;BY REFERENCE&lt;/code&gt;arguments), display the return code and halt.</source>
          <target state="translated">아이디어는 두 개의 문자열과 하나의 전체 단어 부호없는 인수를 서브 프로그램에 전달하고 서브 프로그램이 인쇄하도록하고 세 개를 모두 변경하고 리턴 코드 2를 호출자에게 다시 전달하는 것입니다. 그러면 호출자는 세 개의 인수를 다시 표시하고 (두 개의 &lt;code&gt;BY REFERENCE&lt;/code&gt; 인수에 대한 변경 사항 만 표시) 리턴 코드를 표시하고 정지합니다.</target>
        </trans-unit>
        <trans-unit id="167a838ac7eaeda5c91a5623be9b3302d79ab0b8" translate="yes" xml:space="preserve">
          <source>The identification division provides basic identification of the program by giving it a name and optionally defining some high-level characteristics via the eight pre-defined paragraphs that may be specified.</source>
          <target state="translated">식별 부서는 프로그램에 이름을 지정하고 선택적으로 지정할 수있는 8 개의 사전 정의 된 단락을 통해 일부 높은 수준의 특성을 정의함으로써 프로그램의 기본 식별을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b942ac0c09e93aa73387263edb134fcb4ccb064f" translate="yes" xml:space="preserve">
          <source>The identifiers specified on the &lt;code&gt;USING&lt;/code&gt; clause must be defined in the linkage section of the subprogram. No storage is actually allocated for those identifiers in the subprogram as the actual storage for them will exist in the calling program.</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 절 에 지정된 식별자 는 서브 프로그램의 연결 섹션에서 정의되어야합니다. 호출 프로그램에 실제 스토리지가 존재하므로 서브 프로그램에서 해당 식별자에 대해 실제로 할당 된 스토리지는 없습니다.</target>
        </trans-unit>
        <trans-unit id="568cfc51a71a7b3753b045574f68d5a3eac2629d" translate="yes" xml:space="preserve">
          <source>The identifiers specified on the&lt;code&gt;USING&lt;/code&gt;clause must be defined in the linkage section of the subprogram. No storage is actually allocated for those identifiers in the subprogram as the actual storage for them will exist in the calling program.</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 절 에 지정된 식별자 는 서브 프로그램의 링크 섹션에 정의되어야합니다. 호출 프로그램에 실제 저장 영역이 존재하기 때문에 서브 프로그램의 해당 ID에 실제로 저장 영역이 할당되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0b96324d37d75536c0ba387fd3fa8de39ee8eff8" translate="yes" xml:space="preserve">
          <source>The implied Relation Condition &lt;code&gt;&lt;var&gt;Selection-Subject&lt;/var&gt; = &lt;var&gt;Selection Object&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;TRUE&lt;/code&gt; &amp;mdash; See &lt;a href=&quot;#Relation-Conditions&quot;&gt;Relation Conditions&lt;/a&gt;, for the rules on how the comparison will be made.</source>
          <target state="translated">묵시적 관계 조건 &lt;code&gt;&lt;var&gt;Selection-Subject&lt;/var&gt; = &lt;var&gt;Selection Object&lt;/var&gt;&lt;/code&gt; 가 &lt;code&gt;TRUE&lt;/code&gt; &amp;mdash; 비교 방법에 대한 규칙 은 &lt;a href=&quot;#Relation-Conditions&quot;&gt;관계 조건을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0841b45c4b0a7c732760a76d0708f3853ce6c3b8" translate="yes" xml:space="preserve">
          <source>The implied Relation Condition&lt;code&gt;&amp;lt;&lt;i&gt;Selection-Subject&lt;/i&gt;&amp;gt; = &amp;lt;&lt;i&gt;Selection Object&lt;/i&gt;&amp;gt;&lt;/code&gt;is TRUE &amp;mdash; See &lt;a href=&quot;#Relation-Conditions&quot;&gt;Relation Conditions&lt;/a&gt;, for the rules on how the comparison will be made.</source>
          <target state="translated">묵시적 관계 조건 &lt;code&gt;&amp;lt;&lt;i&gt;Selection-Subject&lt;/i&gt;&amp;gt; = &amp;lt;&lt;i&gt;Selection Object&lt;/i&gt;&amp;gt;&lt;/code&gt; 는 참 &amp;mdash; 비교 방법에 대한 규칙 은 &lt;a href=&quot;#Relation-Conditions&quot;&gt;관계 조건을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e88e89faa4886b54ec2a9bcaa8402356b86eee3" translate="yes" xml:space="preserve">
          <source>The included file NEWS will indicate when it is.</source>
          <target state="translated">포함 된 파일 NEWS는 그것이 언제인지 표시합니다.</target>
        </trans-unit>
        <trans-unit id="cd6f74b8931aab37371a1e7aa005ff78bc6b7303" translate="yes" xml:space="preserve">
          <source>The indentation is purely at the discretion of the programmer to make things easier for humans to read (the compiler couldn&amp;rsquo;t care less). Historically, COBOL implementations that required Fixed Format Mode source programs required that the &lt;code&gt;01&lt;/code&gt; level number begin in Area A and that everything else begins in Area B. GnuCOBOL only requires that all data definition syntax occur in columns 8-72. In Free Format Mode, of course, there aren&amp;rsquo;t even those limitations.</source>
          <target state="translated">들여 쓰기는 순전히 프로그래머의 재량으로 인간이 읽기 쉽게 만들 수 있습니다 (컴파일러는 그다지 신경 쓰지 않습니다). 역사적으로 고정 형식 모드 소스 프로그램을 필요로하는 COBOL 구현에서는 &lt;code&gt;01&lt;/code&gt; 레벨 번호가 영역 A에서 시작하고 나머지는 모두 영역 B에서 시작해야합니다. GnuCOBOL은 모든 데이터 정의 구문이 8-72 열에서 발생하도록 요구합니다. 물론 자유 포맷 모드에서는 그러한 제한조차 없습니다.</target>
        </trans-unit>
        <trans-unit id="20170b11d2abfa13b8fcf8d03f512a59978802e5" translate="yes" xml:space="preserve">
          <source>The indentation is purely at the discretion of the programmer to make things easier for humans to read (the compiler couldn&amp;rsquo;t care less). Historically, COBOL implementations that required Fixed Format Mode source programs required that the&lt;code&gt;01&lt;/code&gt;level number begin in Area A and that everything else begins in Area B. GnuCOBOL only requires that all data definition syntax occur in columns 8-72. In Free Format Mode, of course, there aren&amp;rsquo;t even those limitations.</source>
          <target state="translated">들여 쓰기는 순수하게 프로그래머의 재량에 따라 사람이 쉽게 읽을 수 있도록합니다 (컴파일러는 덜 신경 쓰지 못했습니다). 역사적으로, 고정 형식 모드 소스 프로그램이 필요한 COBOL 구현에서는 &lt;code&gt;01&lt;/code&gt; 레벨 번호가 영역 A에서 시작하고 다른 모든 영역이 영역 B에서 시작해야했습니다. GnuCOBOL은 모든 데이터 정의 구문이 열 8-72에서 발생하면됩니다. 물론 자유 형식 모드에서는 이러한 제한 사항도 없습니다.</target>
        </trans-unit>
        <trans-unit id="c0c28549576b010dcd6d6416d4c34e7f4e71e3c1" translate="yes" xml:space="preserve">
          <source>The information is returned to the &amp;lt;</source>
          <target state="translated">정보는 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="f37d629441f7c7eadb4ac923b3b501584aa4e3d0" translate="yes" xml:space="preserve">
          <source>The information is returned to the &lt;var&gt;file-info&lt;/var&gt; argument, which is defined as the following 16-byte area:</source>
          <target state="translated">정보는 다음 16 바이트 영역으로 정의되는 &lt;var&gt;file-info&lt;/var&gt; 인수 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="66ea8b23a7edd458bbabdcfde262ef7b91179e04" translate="yes" xml:space="preserve">
          <source>The initial value of the current character pointer is less than 1 or greater than the number of character positions in &amp;lt;</source>
          <target state="translated">현재 문자 포인터의 초기 값이 1보다 작거나 &amp;lt;의 문자 위치 수보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="0cc73f73c290886ea28eba156cf0db188219875f" translate="yes" xml:space="preserve">
          <source>The initial value of the current character pointer is less than 1 or greater than the number of character positions in &lt;var&gt;identifier-1&lt;/var&gt;, or&amp;hellip;</source>
          <target state="translated">현재 문자 포인터의 초기 값이 1보다 작거나 &lt;var&gt;identifier-1&lt;/var&gt; 의 문자 위치 수보다 큽니다 .</target>
        </trans-unit>
        <trans-unit id="fd3c2ad4b5ef0a6e242baddeb9fc935533064328" translate="yes" xml:space="preserve">
          <source>The initial value of the current character pointer is less than 1 or greater than the number of characters in &amp;lt;</source>
          <target state="translated">현재 문자 포인터의 초기 값이 1보다 작거나 &amp;lt;의 문자 수보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="27281a0dae25c3cf04ef08afda342da2f94adc80" translate="yes" xml:space="preserve">
          <source>The initial value of the current character pointer is less than 1 or greater than the number of characters in &lt;var&gt;identifier-3&lt;/var&gt;, or&amp;hellip;</source>
          <target state="translated">현재 문자 포인터의 초기 값이 1보다 작거나 &lt;var&gt;identifier-3&lt;/var&gt; 의 문자 수보다 큽니다. 또는&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="da80edfa34bcd6ee1b7a179e95b295b53da063ab" translate="yes" xml:space="preserve">
          <source>The intent of a 77-level item is to be able to create a stand-alone elementary data item.</source>
          <target state="translated">77 레벨 항목의 목적은 독립형 기본 데이터 항목을 작성할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="59cf47d8b605c1c903a14630100471db386ab139" translate="yes" xml:space="preserve">
          <source>The internal processing of the SEARCH ALL statement begins by setting internal &quot;first&quot; and &quot;last&quot; pointers to the 1st and last entry locations of the table. Processing then proceeds as follows:</source>
          <target state="translated">SEARCH ALL 문의 내부 처리는 테이블의 첫 번째 및 마지막 항목 위치에 대한 내부 &quot;first&quot;및 &quot;last&quot;포인터를 설정하여 시작합니다. 처리는 다음과 같이 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="0b0b98f1e9198cc9f6adf5ef8b9f5e73f7ea06a9" translate="yes" xml:space="preserve">
          <source>The internal processing of the SEARCH ALL statement begins by setting internal &amp;ldquo;first&amp;rdquo; and &amp;ldquo;last&amp;rdquo; pointers to the 1&lt;sup&gt;st&lt;/sup&gt; and last entry locations of the table. Processing then proceeds as follows:</source>
          <target state="translated">SEARCH ALL 문의 내부 처리는 내부 &quot;first&quot;및 &quot;last&quot;포인터를 테이블의 &lt;sup&gt;첫 번째&lt;/sup&gt; 및 마지막 항목 위치 로 설정하는 것으로 시작됩니다 . 그런 다음 처리는 다음과 같이 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="8741c0b8c8154da05cce4e0e509a00e96a0279d1" translate="yes" xml:space="preserve">
          <source>The issue of whether to use section and/or paragraph names (collectively referred to as procedure names) within the procedure division is one of near religious significance with many COBOL programmers.</source>
          <target state="translated">프로 시저 부서 내에서 섹션 및 / 또는 단락 이름 (통칭 적으로 프로 시저 이름이라고 함)을 사용할지의 문제는 많은 COBOL 프로그래머에게 종교적으로 중요한 의미 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="00775ee2aa33ed1f4d511c941e72240e8245b5dc" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;LOCALE&lt;/code&gt; refers to the current locale (in effect at the time the program is executed)</source>
          <target state="translated">키워드 &lt;code&gt;LOCALE&lt;/code&gt; 는 현재 로케일을 참조합니다 (프로그램이 실행될 때 적용됨).</target>
        </trans-unit>
        <trans-unit id="710b785633c24ba3b116bb6fcd6048b69db5a7c0" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;SYSTEM-DEFAULT&lt;/code&gt; denotes the default locale specified for the computer upon which the program is executing.</source>
          <target state="translated">키워드 &lt;code&gt;SYSTEM-DEFAULT&lt;/code&gt; 는 프로그램이 실행되는 컴퓨터에 지정된 기본 로케일을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="49c95e034607d80e5bed3e0ad0e22241160a0e86" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;USER-DEFAULT&lt;/code&gt; references the default locale specified for the user currently executing this program.</source>
          <target state="translated">키워드 &lt;code&gt;USER-DEFAULT&lt;/code&gt; 는 현재이 프로그램을 실행중인 사용자에 대해 지정된 기본 로케일을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="56430e20c06bca7ffdc303e632fa28704fcc93de" translate="yes" xml:space="preserve">
          <source>The keyword&lt;code&gt;LOCALE&lt;/code&gt;refers to the current locale (in effect at the time the program is executed)</source>
          <target state="translated">&lt;code&gt;LOCALE&lt;/code&gt; 키워드 는 현재 로케일을 나타냅니다 (프로그램이 실행될 때 적용됨)</target>
        </trans-unit>
        <trans-unit id="5a74db450b36505a74c8f335e1232c8e7a3787ba" translate="yes" xml:space="preserve">
          <source>The keyword&lt;code&gt;SYSTEM-DEFAULT&lt;/code&gt;denotes the default locale specified for the computer upon which the program is executing.</source>
          <target state="translated">키워드 &lt;code&gt;SYSTEM-DEFAULT&lt;/code&gt; 는 프로그램이 실행되는 컴퓨터에 지정된 기본 로캘을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="01849c9ae38f5361f273e8535782a77e19d87e83" translate="yes" xml:space="preserve">
          <source>The keyword&lt;code&gt;USER-DEFAULT&lt;/code&gt;references the default locale specified for the user currently executing this program.</source>
          <target state="translated">키워드 &lt;code&gt;USER-DEFAULT&lt;/code&gt; 는 현재이 프로그램을 실행중인 사용자에 대해 지정된 기본 로캘을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="88626ed314dfa3bdd531bbfba902b23c97468028" translate="yes" xml:space="preserve">
          <source>The keywords  &lt;code&gt;NEXT&lt;/code&gt; and  &lt;code&gt;PREVIOUS&lt;/code&gt; specify what &amp;ldquo;direction of travel&amp;rdquo; the reading process will take through the file. If neither is specified, &lt;code&gt;NEXT&lt;/code&gt; is assumed.</source>
          <target state="translated">&lt;code&gt;NEXT&lt;/code&gt; 및 &lt;code&gt;PREVIOUS&lt;/code&gt; 키워드 는 읽기 프로세스가 파일을 통해 취할 &quot;여행 방향&quot;을 지정합니다. 둘 다 지정되지 않으면 &lt;code&gt;NEXT&lt;/code&gt; 로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="bcb5b2943153401d89f8aa0283d8089cdc05709e" translate="yes" xml:space="preserve">
          <source>The keywords&lt;code&gt;NEXT&lt;/code&gt;</source>
          <target state="translated">키워드 &lt;code&gt;NEXT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53d36907b0a0e3d73f76e9c186b68868b97a108a" translate="yes" xml:space="preserve">
          <source>The last program in any GnuCOBOL source file need not have an &lt;code&gt;END&lt;/code&gt; marker.</source>
          <target state="translated">GnuCOBOL 소스 파일의 마지막 프로그램에는 &lt;code&gt;END&lt;/code&gt; 마커 가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="52351b9b37a018f60982185d6f423a62de2bb7a6" translate="yes" xml:space="preserve">
          <source>The last program in any GnuCOBOL source file need not have an&lt;code&gt;END&lt;/code&gt;marker.</source>
          <target state="translated">GnuCOBOL 소스 파일의 마지막 프로그램에는 &lt;code&gt;END&lt;/code&gt; 마커 가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="606fcddbc705415fd44e12a595558c5d6a9f30ed" translate="yes" xml:space="preserve">
          <source>The last three options above are all equivalent; all three are supported by GnuCOBOL so that source code compatibility may be maintained with a wide variety of other COBOL implementations. With all three, if the compiler is</source>
          <target state="translated">위의 마지막 세 가지 옵션은 모두 동일합니다. 세 가지 모두 GnuCOBOL에서 지원되므로 다양한 다른 COBOL 구현에서 소스 코드 호환성을 유지할 수 있습니다. 컴파일러가</target>
        </trans-unit>
        <trans-unit id="598d77e9876288d29d8209ca35b42856f4137559" translate="yes" xml:space="preserve">
          <source>The last two decimal digits in the modification time will always be 00.</source>
          <target state="translated">수정 시간의 마지막 두 자리는 항상 00입니다.</target>
        </trans-unit>
        <trans-unit id="3a16d5318450ff098ae6f28e8023475ead3c8a21" translate="yes" xml:space="preserve">
          <source>The length of the returned value is 1.</source>
          <target state="translated">반환 된 값의 길이는 1입니다.</target>
        </trans-unit>
        <trans-unit id="98c989bcf5924c4554ce426802b2c700db06ff28" translate="yes" xml:space="preserve">
          <source>The length of the returned value is the number of character positions of usage display required to hold the converted argument and depends on the number of characters contained in &lt;var&gt;argument-1&lt;/var&gt;.</source>
          <target state="translated">리턴 된 값의 길이는 변환 된 인수를 보유하는 데 필요한 사용 표시의 문자 위치 수이며 &lt;var&gt;argument-1&lt;/var&gt; 에 포함 된 문자 수에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="3f54a3a71bb76fcf8569a85b0672a069dd34b5b6" translate="yes" xml:space="preserve">
          <source>The length of the returned value is the number of character positions of usage national required to hold the converted argument and depends on the number of characters contained in &lt;var&gt;argument-1&lt;/var&gt;.</source>
          <target state="translated">리턴 된 값의 길이는 변환 된 인수를 보유하는 데 필요한 국가 사용의 문자 위치 수이며 &lt;var&gt;argument-1&lt;/var&gt; 에 포함 된 문자 수에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="8981e28af3f836f69bab1d3e2981943500bab47a" translate="yes" xml:space="preserve">
          <source>The level number of both the subject and object data items must be the same.</source>
          <target state="translated">주제 및 객체 데이터 항목의 레벨 번호는 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="1834cb04bd7e282c1d1ff50847d52988b99d6ab3" translate="yes" xml:space="preserve">
          <source>The level number used for a report group definition must be 01.</source>
          <target state="translated">보고서 그룹 정의에 사용 된 레벨 번호는 01이어야합니다.</target>
        </trans-unit>
        <trans-unit id="aacb6a2c382662a59f28caab725253e9d1260183" translate="yes" xml:space="preserve">
          <source>The level numbers of both the subject and object data items cannot be 66, 78 or 88.</source>
          <target state="translated">주제 및 객체 데이터 항목의 레벨 번호는 66, 78 또는 88 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="176e51469e379b6d1088e4644c02ef508f226f8e" translate="yes" xml:space="preserve">
          <source>The line contains a valid GnuCOBOL statement that is normally treated as a comment unless the program is being compiled in debugging mode.</source>
          <target state="translated">이 행에는 프로그램이 디버깅 모드로 컴파일되지 않는 한 일반적으로 주석으로 처리되는 유효한 GnuCOBOL 문이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb3095df6525e81f3e0c95f311400eed99c1a119" translate="yes" xml:space="preserve">
          <source>The line is a comment that will also force a page eject in the compilation listing. While GnuCOBOL will honour such a line as a comment, it will not form-feed any generated listing.</source>
          <target state="translated">이 줄은 컴파일 목록에서 페이지를 강제로 배출하는 주석입니다. GnuCOBOL은 주석과 같은 행을 존중하지만 생성 된 리스팅은 양식 피드하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81ee87957fcbe2d8f7edde848ea6e3fa6b6ab5d5" translate="yes" xml:space="preserve">
          <source>The line is a comment.</source>
          <target state="translated">라인은 주석입니다.</target>
        </trans-unit>
        <trans-unit id="bd6760ee15d67fbc99eb830d997ecef08f5bea31" translate="yes" xml:space="preserve">
          <source>The line is a continuation of the previous line. These are needed only when an alphanumeric literal (quoted character string), reserved word or user-defined word are being split across lines.</source>
          <target state="translated">줄은 이전 줄의 연속입니다. 영숫자 리터럴 (인용 문자열), 예약어 또는 사용자 정의 단어가 여러 행으로 분할 될 때만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="383ac99926f33fc881d9d5cacdef4680868ff309" translate="yes" xml:space="preserve">
          <source>The line location of a report section or screen section field will be determined by the &lt;code&gt;LINE&lt;/code&gt; (see &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt;) clause.</source>
          <target state="translated">보고서 섹션 또는 화면 섹션 필드의 행 위치는 &lt;code&gt;LINE&lt;/code&gt; ( &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt; 참조 ) 절에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="74468861dc1215d9046b9e82f00bb8c9fca1b985" translate="yes" xml:space="preserve">
          <source>The line location of a report section or screen section field will be determined by the&lt;code&gt;LINE&lt;/code&gt;(see &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt;) clause.</source>
          <target state="translated">보고서 섹션 또는 화면 섹션 필드의 라인 위치는 &lt;code&gt;LINE&lt;/code&gt; ( &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt; 참조 ) 절에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="6fd4de55080d931d66f19df503ea15eaef7cbe76" translate="yes" xml:space="preserve">
          <source>The linkage section describes data within a subprogram that serves as either input arguments to or output results from the subprogram.</source>
          <target state="translated">연결 섹션은 하위 프로그램에 대한 입력 인수 또는 출력 결과로 사용되는 하위 프로그램 내의 데이터를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ca6c5539fec4ecfa014d2409f9e2cb0651ed5c80" translate="yes" xml:space="preserve">
          <source>The literal(s) specified on this clause define the possible characters that may be found in a data item&amp;rsquo;s value in order to be considered part of the class.</source>
          <target state="translated">이 절에 지정된 리터럴은 클래스의 일부로 간주되기 위해 데이터 항목 값에서 찾을 수있는 문자를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="fb8de9a69931caf2c05ab1ae78d7752c7ae1a855" translate="yes" xml:space="preserve">
          <source>The local-storage section is similar to working-storage, but describes data within a subprogram that will be dynamically allocated and initialized (automatically) each time the subprogram is executed. See &lt;a href=&quot;#Data-Initialization&quot;&gt;Data Initialization&lt;/a&gt;, for the rules of data initialization.</source>
          <target state="translated">로컬 스토리지 섹션은 작업 스토리지와 유사하지만 서브 프로그램이 실행될 때마다 동적으로 할당되고 (자동으로) 초기화되는 서브 프로그램 내의 데이터를 설명합니다. &lt;a href=&quot;#Data-Initialization&quot;&gt;데이터 초기화&lt;/a&gt; 규칙은 데이터 초기화를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="40d6854b8ce4fc3f967a31cb744fb11b42448f44" translate="yes" xml:space="preserve">
          <source>The longoption structure is immutable! You can only vary the number of records.</source>
          <target state="translated">longoption 구조는 불변입니다! 레코드 수만 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25c089056fcec52d85622a5b3e7761d1c570053a" translate="yes" xml:space="preserve">
          <source>The main program must be the first program found in the first compilation unit (</source>
          <target state="translated">주 프로그램은 첫 번째 컴파일 단위 (</target>
        </trans-unit>
        <trans-unit id="b194a1d5e90485551ac50bc24875d6de4aecaacc" translate="yes" xml:space="preserve">
          <source>The main program must be the first program found in the first compilation unit (&quot;mainprog.cbl&quot;). The remainder of that compilation unit as well as the rest of the files in the compilation group (&quot;sub1.cbl&quot; and &quot;sub2.cbl&quot;) must be independent and/or contained subprograms (see &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;Independent vs Contained vs Nested Subprograms&lt;/a&gt;).</source>
          <target state="translated">기본 프로그램은 첫 번째 컴파일 단위 ( &quot;mainprog.cbl&quot;)에서 찾은 첫 번째 프로그램이어야합니다. 컴파일 그룹의 나머지 파일뿐만 아니라 나머지 컴파일 단위 ( &quot;sub1.cbl&quot;및 &quot;sub2.cbl&quot;)는 독립 및 / 또는 포함 된 서브 프로그램이어야합니다 ( &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;독립 vs 포함 된 중첩 서브 프로그램 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="313ce3e4e3bc83dab63407f62c0b89459ecfa899" translate="yes" xml:space="preserve">
          <source>The management of paging, enforcement of the</source>
          <target state="translated">페이징 관리,</target>
        </trans-unit>
        <trans-unit id="60f4640bcac259d3da816d01a099fd611b85fcdf" translate="yes" xml:space="preserve">
          <source>The management of paging, enforcement of the &quot;groups cannot span pages&quot; rule and almost every aspect of report generation are handled entirely by the Report Writer Control System.</source>
          <target state="translated">페이징 관리, &quot;그룹은 페이지를 스팬 할 수 없음&quot;규칙의 시행 및 보고서 생성의 거의 모든 측면이 전적으로 Report Writer Control System에 의해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="0816f64c10fe5217503a596d27fab60da204d8d6" translate="yes" xml:space="preserve">
          <source>The mandatory &lt;code&gt;AT END&lt;/code&gt; clause is used to detect and react to the failure of an attempt to retrieve another record from the file due to an end-of-file (i.e. no more records) condition.</source>
          <target state="translated">필수 &lt;code&gt;AT END&lt;/code&gt; 절은 파일 끝 (즉, 더 이상 레코드 없음) 조건으로 인해 파일에서 다른 레코드를 검색하려는 시도의 실패를 감지하고 이에 대응하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a0f7f6bc9a34644414cbe201465a5cab0354e26e" translate="yes" xml:space="preserve">
          <source>The mandatory&lt;code&gt;AT END&lt;/code&gt;clause is used to detect and react to the failure of an attempt to retrieve another record from the file due to an end-of-file (i.e. no more records) condition.</source>
          <target state="translated">필수 &lt;code&gt;AT END&lt;/code&gt; 절은 파일 끝 (즉, 더 이상 레코드가 없음) 조건으로 인해 파일에서 다른 레코드를 검색하려는 시도가 실패한 것을 감지하고 실패하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6368a4bb578f8586c5b99190e9529cf59d60b64" translate="yes" xml:space="preserve">
          <source>The manipulation of data files is one of the COBOL language&amp;rsquo;s great strengths. There are features built into COBOL to deal with the possibility that multiple programs may be attempting to access the same file concurrently. Multiple program concurrent access is dealt with in two ways &amp;mdash; file sharing and record locking.</source>
          <target state="translated">데이터 파일의 조작은 COBOL 언어의 큰 강점 중 하나입니다. 여러 프로그램이 동시에 동일한 파일에 액세스를 시도 할 수있는 가능성을 처리하기 위해 COBOL에 내장 된 기능이 있습니다. 다중 프로그램 동시 액세스는 파일 공유 및 레코드 잠금의 두 가지 방법으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="aa7b605f5aeeacbafba54a69834d53d0d6d2c431" translate="yes" xml:space="preserve">
          <source>The manner in which the exit status value is interrogated by the operating system varies. Windows can use &lt;code&gt;%ERRORLEVEL%&lt;/code&gt; to query the exit status while Unix shells such as &lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;ksh&lt;/code&gt; can query the exit status as &lt;code&gt;$?&lt;/code&gt;. Other Unix shells may have different ways to access the exit status.</source>
          <target state="translated">운영 체제에서 종료 상태 값을 조사하는 방식은 다양합니다. Windows는 &lt;code&gt;%ERRORLEVEL%&lt;/code&gt; 을 사용하여 종료 상태를 쿼리 할 수 있지만 &lt;code&gt;sh&lt;/code&gt; , &lt;code&gt;bash&lt;/code&gt; 및 &lt;code&gt;ksh&lt;/code&gt; 와 같은 Unix 셸 은 종료 상태를 &lt;code&gt;$?&lt;/code&gt; . 다른 Unix 쉘은 종료 상태에 액세스하는 방법이 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15103e603dba87eee0a7a20a1451b6c7e1e94588" translate="yes" xml:space="preserve">
          <source>The meaning of  &lt;code&gt;REFERENCE&lt;/code&gt;,  &lt;code&gt;CONTENT&lt;/code&gt; and  &lt;code&gt;VALUE&lt;/code&gt; are the same as the equivalent specifications on the &lt;code&gt;CALL&lt;/code&gt; statement (see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;). Whatever specification will be used for an argument on the &lt;code&gt;CALL&lt;/code&gt; to this entry-point should match the specification used in the corresponding &lt;var&gt;ENTRY-Argument&lt;/var&gt;. The same rules regarding the presence or absence of a &lt;code&gt;BY&lt;/code&gt; clause on a &lt;code&gt;CALL&lt;/code&gt; statement apply to the presence or absence of a &lt;code&gt;BY&lt;/code&gt; clause on the corresponding argument of the &lt;code&gt;ENTRY&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;REFERENCE&lt;/code&gt; , &lt;code&gt;CONTENT&lt;/code&gt; 및 &lt;code&gt;VALUE&lt;/code&gt; 의 의미는 &lt;code&gt;CALL&lt;/code&gt; 문의 동등한 스펙과 동일 합니다 ( &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt; 참조 ). 이 진입 점 에 대한 &lt;code&gt;CALL&lt;/code&gt; 의 인수에 사용되는 사양은 해당 &lt;var&gt;ENTRY-Argument&lt;/var&gt; 에 사용 된 사양과 일치해야합니다 . &lt;code&gt;CALL&lt;/code&gt; 문 에서 &lt;code&gt;BY&lt;/code&gt; 절의 유무에 관한 동일한 규칙 이 &lt;code&gt;ENTRY&lt;/code&gt; 문의 해당 인수에서 &lt;code&gt;BY&lt;/code&gt; 절의 유무에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a768a2c1485c66cc55f6fe9a1e2d4b47f8dad17b" translate="yes" xml:space="preserve">
          <source>The meaning of&lt;code&gt;REFERENCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REFERENCE&lt;/code&gt; 의 의미</target>
        </trans-unit>
        <trans-unit id="215b43692a18b83d835beda953edecda61510c32" translate="yes" xml:space="preserve">
          <source>The meanings of the four locale specifications are as follows:</source>
          <target state="translated">네 가지 로캘 사양의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8494012d0a1aaa9f7b7e98f454a94e825a177da" translate="yes" xml:space="preserve">
          <source>The meanings of the various record locking options are as follows:</source>
          <target state="translated">다양한 레코드 잠금 옵션의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cfce23a1bb0a7fed778ebfd3a713dad7fd2dad30" translate="yes" xml:space="preserve">
          <source>The memory address of the actual data item (allocated in the calling program) that is being passed to the subprogram.</source>
          <target state="translated">서브 프로그램에 전달되는 실제 데이터 항목 (호출 프로그램에 할당)의 메모리 주소.</target>
        </trans-unit>
        <trans-unit id="cb3db2d95a847382617fcbb08869c79d2585065e" translate="yes" xml:space="preserve">
          <source>The merging process is as follows:</source>
          <target state="translated">병합 과정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9662068705720208859f2a87b7397fce5d5a0b29" translate="yes" xml:space="preserve">
          <source>The minimal statement &lt;code&gt;READ &lt;var&gt;file-name-1&lt;/var&gt;&lt;/code&gt; is perfectly legal according to</source>
          <target state="translated">최소한의 문장 &lt;code&gt;READ &lt;var&gt;file-name-1&lt;/var&gt;&lt;/code&gt; 은 다음에 따라 완벽하게 합법적입니다.</target>
        </trans-unit>
        <trans-unit id="fb24ec3d9aaaad590e0c901ccc5c49792f4fc5de" translate="yes" xml:space="preserve">
          <source>The minimal statement&lt;code&gt;READ &amp;lt;&lt;i&gt;file-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt;is perfectly legal according to</source>
          <target state="translated">최소한의 문장 &lt;code&gt;READ &amp;lt;&lt;i&gt;file-name-1&lt;/i&gt;&amp;gt;&lt;/code&gt; 은 다음과 같이 완벽하게 합법적입니다.</target>
        </trans-unit>
        <trans-unit id="ad11adb129c433bc5c5e41548ec9b9d6ebf986ad" translate="yes" xml:space="preserve">
          <source>The module being compiled contains the main program.</source>
          <target state="translated">컴파일되는 모듈에는 기본 프로그램이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d30fe8fda8800a1d9d1821951b499b52d085be4" translate="yes" xml:space="preserve">
          <source>The module being compiled does not contain the main program.</source>
          <target state="translated">컴파일중인 모듈에 기본 프로그램이 없습니다.</target>
        </trans-unit>
        <trans-unit id="035d88199282e1ca57f415d21dff0e8340d63831" translate="yes" xml:space="preserve">
          <source>The name COBOL actually says it all &amp;mdash; COBOL is an acronym that stands for &quot;(&lt;b&gt;CO&lt;/b&gt;)mmon (&lt;b&gt;B&lt;/b&gt;)usiness (&lt;b&gt;O&lt;/b&gt;)riented (&lt;b&gt;L&lt;/b&gt;)anguage&quot;. Note the fact that the word &quot;common&quot; comes before all others. The word &quot;business&quot; is a close second. Therein lies the key to Cobol&amp;rsquo;s success.</source>
          <target state="translated">COBOL이라는 이름은 실제로 모든 것을 말합니다. COBOL은 &quot;( &lt;b&gt;CO&lt;/b&gt; ) mmon ( &lt;b&gt;B&lt;/b&gt; ) usiness ( &lt;b&gt;O&lt;/b&gt; ) riented ( &lt;b&gt;L&lt;/b&gt; ) anguage&quot;의 약자 입니다. &quot;공통&quot;이라는 단어가 다른 모든 단어보다 먼저 나온다는 점에 유의하십시오. &quot;사업&quot;이라는 단어는 아주 가깝습니다. 그 안에 코볼의 성공 비결이 있습니다.</target>
        </trans-unit>
        <trans-unit id="415bfbd04061e286c7f7d6a7f04d026d5ca0fed6" translate="yes" xml:space="preserve">
          <source>The name COBOL actually says it all &amp;mdash; COBOL is an acronym that stands for &amp;ldquo;(&lt;b&gt;CO&lt;/b&gt;)mmon (&lt;b&gt;B&lt;/b&gt;)usiness (&lt;b&gt;O&lt;/b&gt;)riented (&lt;b&gt;L&lt;/b&gt;)anguage&amp;rdquo;. Note the fact that the word &amp;ldquo;common&amp;rdquo; comes before all others. The word &amp;ldquo;business&amp;rdquo; is a close second. Therein lies the key to COBOL&amp;rsquo;s success.</source>
          <target state="translated">COBOL이라는 이름은 실제로 모든 것을 말합니다. COBOL은 &quot;( &lt;b&gt;CO&lt;/b&gt; ) mmon ( &lt;b&gt;B&lt;/b&gt; ) usiness ( &lt;b&gt;O&lt;/b&gt; ) riented ( &lt;b&gt;L&lt;/b&gt; ) anguage&quot; 를 의미하는 약어입니다 . &quot;공통&quot;이라는 단어가 다른 모든 단어보다 먼저 나온다는 사실에 유의하십시오. &quot;비즈니스&quot;라는 단어는 가까운 두 번째입니다. 여기에 COBOL 성공의 열쇠가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6a80933bad7e5c70f0c5d17e6920ff09a5745e4" translate="yes" xml:space="preserve">
          <source>The name of the vendor who makes the CPU. In this data, that will either be &quot;AMD&quot; (American Micro Devices) or &quot;INTEL&quot;.</source>
          <target state="translated">CPU를 만드는 공급 업체의 이름입니다. 이 데이터에서는 &quot;AMD&quot;(American Micro Devices) 또는 &quot;INTEL&quot;이됩니다.</target>
        </trans-unit>
        <trans-unit id="06a0fd1158d9cb2c537bbef7d5b83ba872831d7b" translate="yes" xml:space="preserve">
          <source>The name of the vendor who makes the CPU. In this data, that will either be &amp;ldquo;AMD&amp;rdquo; (American Micro Devices) or &amp;ldquo;INTEL&amp;rdquo;.</source>
          <target state="translated">CPU를 만드는 공급 업체의 이름입니다. 이 데이터에서는 &quot;AMD&quot;(American Micro Devices) 또는 &quot;INTEL&quot;이됩니다.</target>
        </trans-unit>
        <trans-unit id="99b09730ad6d2456d2a7389c4b6c761c74136887" translate="yes" xml:space="preserve">
          <source>The name returned after the file status information will be returned only if the returned file status value is not 00.</source>
          <target state="translated">파일 상태 정보 이후에 리턴 된 이름은 리턴 된 파일 상태 값이 00이 아닌 경우에만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="817b3000b9cf495b786eb2fb9963f938e62a8cee" translate="yes" xml:space="preserve">
          <source>The name specified as &amp;lt;</source>
          <target state="translated">&amp;lt;로 지정된 이름</target>
        </trans-unit>
        <trans-unit id="2c4ea3eacd7cdcdc5fd825097b9112ac00e8e158" translate="yes" xml:space="preserve">
          <source>The name specified as &lt;var&gt;file-name-1&lt;/var&gt; must exactly match the name specified on the file&amp;rsquo;s &lt;code&gt;SELECT&lt;/code&gt; statement.</source>
          <target state="translated">로 지정된 이름 &lt;var&gt;file-name-1&lt;/var&gt; 정확히 파일의에 지정된 이름과 일치해야 &lt;code&gt;SELECT&lt;/code&gt; 의 문을.</target>
        </trans-unit>
        <trans-unit id="f8ea36a80640b37e55cdc80db5ba6e35d4e1a70f" translate="yes" xml:space="preserve">
          <source>The natural hierarchy of control breaks within a RWCS-controlled report based upon the manner in which the data the report is being generated from is sorted.</source>
          <target state="translated">보고서가 생성되는 데이터가 정렬되는 방식에 따라 RWCS 제어 보고서 내에서 자연스럽게 제어 계층이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="7c1c49e3dfbbfd0122865aae7889a5439b48a6c0" translate="yes" xml:space="preserve">
          <source>The net effect of the above algorithm is that only a fraction of the number of elements in the table need ever be tested in order to decide whether or not a particular entry exists. This is because the half the remaining entries in the table are discarded each time an entry is checked.</source>
          <target state="translated">위 알고리즘의 최종 효과는 특정 항목이 존재하는지 여부를 결정하기 위해 테이블에있는 요소 수의 일부만 테스트하면된다는 것입니다. 이는 항목을 확인할 때마다 테이블의 나머지 항목 중 절반이 삭제되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="5671a9d0e04c75b46fa9a7334f8e3840a7957ab4" translate="yes" xml:space="preserve">
          <source>The next (and last, in this case) break listed on the &lt;code&gt;CONTROLS&lt;/code&gt; clause will be the one that occurs even more frequently (&lt;code&gt;Sorted-Department-Number&lt;/code&gt;). The &lt;code&gt;CONTROL FOOTING&lt;/code&gt; for this control field will be the one that summarizes sales for each department within a store.</source>
          <target state="translated">&lt;code&gt;CONTROLS&lt;/code&gt; 절 에 나열된 다음 (그리고이 경우 마지막) 중단 은 훨씬 더 자주 발생하는 중단입니다 ( &lt;code&gt;Sorted-Department-Number&lt;/code&gt; ). 이 제어 필드 의 &lt;code&gt;CONTROL FOOTING&lt;/code&gt; 은 상점 내 각 부서의 판매를 요약하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5a93948aff6641cf083deb63ad68b184fbbe2108" translate="yes" xml:space="preserve">
          <source>The next (and last, in this case) break listed on the CONTROLS clause will be the one that occurs even more frequently (Sorted-Department-Number). The&lt;code&gt;CONTROL FOOTING&lt;/code&gt;for this control field will be the one that summarizes sales for each department within a store.</source>
          <target state="translated">CONTROLS 절에 나열된 다음 (이 경우 마지막) 구분은 훨씬 더 자주 발생하는 구분 (Sorted-Department-Number)입니다. &lt;code&gt;CONTROL FOOTING&lt;/code&gt; 이 제어 필드는 상점 내의 각 부서의 매출을 요약 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="34c1b241a8f86fa7f12ab8c02551fd71dd014fc0" translate="yes" xml:space="preserve">
          <source>The next break listed on the &lt;code&gt;CONTROLS&lt;/code&gt; clause will be the one that occurs next most-frequently (&lt;code&gt;Sorted-Store-Number&lt;/code&gt;). This control break will be the one that produces the summation for each entire store, and will have its own &lt;code&gt;CONTROL FOOTING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CONTROLS&lt;/code&gt; 절 에 나열된 다음 중단 은 다음으로 가장 자주 발생 하는 중단입니다 ( &lt;code&gt;Sorted-Store-Number&lt;/code&gt; ). 이 제어 구분은 각 전체 상점에 대한 합계를 생성하는 하나이며 자체 &lt;code&gt;CONTROL FOOTING&lt;/code&gt; 을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="f749eeee6491bd31e44e38198725bfee7ade27a7" translate="yes" xml:space="preserve">
          <source>The next break listed on the&lt;code&gt;CONTROLS&lt;/code&gt;clause will be the one that occurs next most-frequently (Sorted-Store-Number). This control break will be the one that produces the summation for each entire store, and will have its own&lt;code&gt;CONTROL FOOTING&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CONTROLS&lt;/code&gt; 절 에 나열된 다음 구분 은 다음에 가장 자주 발생하는 구분입니다 (Sorted-Store-Number). 이 제어 중단은 각 전체 상점에 대한 요약을 생성하는 것이며 자체 &lt;code&gt;CONTROL FOOTING&lt;/code&gt; 갖습니다.</target>
        </trans-unit>
        <trans-unit id="741b8449f16935bdc7d66ba4da7606284ae19fc6" translate="yes" xml:space="preserve">
          <source>The next most-frequently changing value is that of &lt;code&gt;Sorted-Department-Number&lt;/code&gt;, and the least-frequently changing value is that of &lt;code&gt;Sorted-Store-Number&lt;/code&gt;. remember that the program should be generating totals each time one of these two values change, plus a grand total of sales at the end of the report. These three points are the  &lt;em&gt;Control Break&lt;/em&gt; points of the report.</source>
          <target state="translated">다음으로 가장 자주 변경되는 값은 &lt;code&gt;Sorted-Department-Number&lt;/code&gt; 의 값이고 가장 적게 변경되는 값은 &lt;code&gt;Sorted-Store-Number&lt;/code&gt; 의 값입니다 . 프로그램은이 두 값 중 하나가 변경 될 때마다 총계를 생성하고 보고서 끝에 총 판매 총계를 생성해야합니다. 이 세 지점이 보고서 의 &lt;em&gt;제어 중단&lt;/em&gt; 지점입니다.</target>
        </trans-unit>
        <trans-unit id="25c9edfc200fb2645ce708c60dfdcb5081177ebd" translate="yes" xml:space="preserve">
          <source>The next most-frequently changing value is that of Sorted-Department-Number, and the least-frequently changing value is that of Sorted-Store-Number. remember that the program should be generating totals each time one of these two values change, plus a grand total of sales at the end of the report. These three points are the &amp;rsquo;</source>
          <target state="translated">다음으로 가장 자주 변경되는 값은 Sorted-Department-Number의 값이며 가장 적게 변경되는 값은 Sorted-Store-Number의 값입니다. 프로그램은이 두 값 중 하나가 변경 될 때마다 총계를 생성해야하며 보고서 끝에 총 판매량을 기록해야합니다. 이 세 점은 '</target>
        </trans-unit>
        <trans-unit id="8ac7b0daa67980c83bcc9bd8c306eb1cbb05fb98" translate="yes" xml:space="preserve">
          <source>The next sequential &lt;code&gt;READ&lt;/code&gt; statement will read the record that is pointed to by the logical record pointer.</source>
          <target state="translated">다음 순차 &lt;code&gt;READ&lt;/code&gt; 문은 논리 레코드 포인터가 가리키는 레코드를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="d4d9918ede56a5926f659f47fa0785a8c268ac9f" translate="yes" xml:space="preserve">
          <source>The next sequential&lt;code&gt;READ&lt;/code&gt;statement will read the record that is pointed to by the logical record pointer.</source>
          <target state="translated">다음 순차 &lt;code&gt;READ&lt;/code&gt; 문은 논리 레코드 포인터가 가리키는 레코드를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="f6ce86f359f58a20c64f97b0c1ff6e383539fdca" translate="yes" xml:space="preserve">
          <source>The object code for the called program (the user-defined function) will be located, as follows:</source>
          <target state="translated">호출 된 프로그램 (사용자 정의 함수)의 오브젝트 코드는 다음과 같이 위치합니다.</target>
        </trans-unit>
        <trans-unit id="1dd06dd50520e236babebb6c2bcea3680683df04" translate="yes" xml:space="preserve">
          <source>The occurrence of either event</source>
          <target state="translated">두 이벤트의 발생</target>
        </trans-unit>
        <trans-unit id="a4a64b7a4cacb09627ec92e196296d92a6e3edf3" translate="yes" xml:space="preserve">
          <source>The occurrence of either event (A) or (B) triggers what is referred to as an &amp;rsquo;</source>
          <target state="translated">이벤트 (A) 또는 (B)가 발생하면 '</target>
        </trans-unit>
        <trans-unit id="419262600fdde461be4f46da5bd7358e807476a5" translate="yes" xml:space="preserve">
          <source>The only &lt;code&gt;USAGE&lt;/code&gt; that is allowed in the report section is &lt;code&gt;USAGE DISPLAY&lt;/code&gt;.</source>
          <target state="translated">보고서 섹션에서 허용되는 유일한 &lt;code&gt;USAGE&lt;/code&gt; 는 &lt;code&gt;USAGE DISPLAY&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="22a0a64083b35233445b095657b0085df50f6d92" translate="yes" xml:space="preserve">
          <source>The only argument &amp;mdash; &amp;lt;</source>
          <target state="translated">유일한 논쟁 &amp;mdash; &amp;lt;</target>
        </trans-unit>
        <trans-unit id="cd96236242254fe3831b70e0bd407ae03b61ca04" translate="yes" xml:space="preserve">
          <source>The only argument &amp;mdash; &lt;var&gt;dir-path&lt;/var&gt; (an alphanumeric literal or identifier) &amp;mdash; is the name of the directory to be deleted.</source>
          <target state="translated">유일한 인수 인 &lt;var&gt;dir-path&lt;/var&gt; (영숫자 리터럴 또는 식별자)는 삭제할 디렉토리의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="3b23ce1f8d399531e6bf70851fb419401c688668" translate="yes" xml:space="preserve">
          <source>The only time the case used does matter is within quoted character strings, where character values will be exactly as coded.</source>
          <target state="translated">사용 된 사례가 문제가되는 유일한 시간은 인용 된 문자열 내에 있으며, 여기서 문자 값은 정확하게 코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="9f9f02741831d425327100d106b62765046fae26" translate="yes" xml:space="preserve">
          <source>The only valid level numbers are 01-49, 66, 77, 78 and 88. Level numbers 01 through 49 are used to define data items that may be part of a hierarchical structure. Level number 01 can also be used to define a constant &amp;mdash; an item with an unchangeable value specified at compilation time.</source>
          <target state="translated">유효한 수준 번호는 01-49, 66, 77, 78 및 88뿐입니다. 수준 번호 01-49는 계층 구조의 일부일 수있는 데이터 항목을 정의하는 데 사용됩니다. 레벨 번호 01은 상수 (컴파일 타임에 변경할 수없는 값을 가진 항목)를 정의하는 데에도 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a0925b59b16e2437874f003112ae9a69c526446" translate="yes" xml:space="preserve">
          <source>The only valid level numbers are 01-49, 66, 77, 78 and 88. Level numbers 66, 77, 78 and 88 all have special uses &amp;mdash; See &lt;a href=&quot;#Special-Data-Items&quot;&gt;Special Data Items&lt;/a&gt;, for details.</source>
          <target state="translated">유효한 레벨 번호는 01-49, 66, 77, 78 및 88뿐입니다. 레벨 번호 66, 77, 78 및 88은 모두 특수 용도로 사용됩니다. 자세한 내용은 &lt;a href=&quot;#Special-Data-Items&quot;&gt;특수 데이터 항목&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b0f837a05e1aff4a6aeca8f34186120c8d868c5f" translate="yes" xml:space="preserve">
          <source>The only&lt;code&gt;USAGE&lt;/code&gt;that is allowed in the report section is&lt;code&gt;USAGE DISPLAY&lt;/code&gt;</source>
          <target state="translated">보고서 섹션에서 허용되는 유일한 &lt;code&gt;USAGE&lt;/code&gt; 는 &lt;code&gt;USAGE DISPLAY&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="790575dc6fbc65dc9da459c75a61632ebe52da80" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;CLASSIFICATION&lt;/code&gt; clause may be used to specify a locale for the environment in which the program will execute, for the purpose of influencing the upper-case and lower-case mappings of characters for the &lt;code&gt;UPPER-CASE&lt;/code&gt; (see &lt;a href=&quot;#UPPER_002dCASE&quot;&gt;UPPER-CASE&lt;/a&gt;) and &lt;code&gt;LOWER-CASE&lt;/code&gt; (see &lt;a href=&quot;#LOWER_002dCASE&quot;&gt;LOWER-CASE&lt;/a&gt;) intrinsic functions and the classification of characters for the &lt;code&gt;ALPHABETIC&lt;/code&gt;, &lt;code&gt;ALPHABETIC-LOWER&lt;/code&gt; and &lt;code&gt;ALPHABETIC-UPPER&lt;/code&gt; class tests. The definitions of these classes is taken from the cultural convention specification (&lt;code&gt;LC_CTYPE&lt;/code&gt;) from the specified locale.</source>
          <target state="translated">선택적 &lt;code&gt;CLASSIFICATION&lt;/code&gt; 절은 &lt;code&gt;UPPER-CASE&lt;/code&gt; ( &lt;a href=&quot;#UPPER_002dCASE&quot;&gt;UPPER-CASE&lt;/a&gt; 참조 ) 및 &lt;code&gt;LOWER-CASE&lt;/code&gt; 대한 문자의 대문자 및 소문자 매핑에 영향을주기 위해 프로그램이 실행될 환경에 대한 로케일을 지정하는 데 사용될 수 있습니다. -CASE ( &lt;a href=&quot;#LOWER_002dCASE&quot;&gt;LOWER-CASE&lt;/a&gt; 참조 ) 내장 함수 및 &lt;code&gt;ALPHABETIC&lt;/code&gt; , &lt;code&gt;ALPHABETIC-LOWER&lt;/code&gt; 및 &lt;code&gt;ALPHABETIC-UPPER&lt;/code&gt; 클래스 테스트에 대한 문자 분류 . 이러한 클래스의 정의 는 지정된 로케일 의 문화적 규칙 스펙 ( &lt;code&gt;LC_CTYPE&lt;/code&gt; )에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="34645a5ada88e734807f489fb2678c6b33a81e41" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;DEPENDING ON&lt;/code&gt; clause can be added to an &lt;code&gt;OCCURS&lt;/code&gt; to create a variable-length table. In such cases, the value of &lt;var&gt;integer-1&lt;/var&gt; specifies what the minimum number of entries in the table will be while &lt;var&gt;integer-2&lt;/var&gt; specifies the maximum. Such tables will be allocated out to the maximum size specified as &lt;var&gt;integer-2&lt;/var&gt;. At execution time the value of &lt;var&gt;identifier-1&lt;/var&gt; will determine how many of the table elements are accessible.</source>
          <target state="translated">선택적 &lt;code&gt;DEPENDING ON&lt;/code&gt; 절을 &lt;code&gt;OCCURS&lt;/code&gt; 에 추가하여 가변 길이 테이블을 작성할 수 있습니다 . 이러한 경우 &lt;var&gt;integer-1&lt;/var&gt; 의 값은 테이블의 최소 항목 수를 지정하고 &lt;var&gt;integer-2&lt;/var&gt; 는 최대를 지정합니다. 이러한 테이블은 &lt;var&gt;integer-2&lt;/var&gt; 로 지정된 최대 크기로 할당됩니다 . 실행시 &lt;var&gt;identifier-1&lt;/var&gt; 의 값 은 액세스 할 수있는 테이블 요소의 수를 판별합니다.</target>
        </trans-unit>
        <trans-unit id="a5626567de5da05816e927781915b7f4160f738e" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;FROM&lt;/code&gt; clause will cause &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt; to be automatically moved into &lt;var&gt;record-name-1&lt;/var&gt; prior to writing &lt;var&gt;record-name-1&lt;/var&gt;&amp;rsquo;s contents to the &lt;var&gt;file-name-1&lt;/var&gt;. If this clause is not specified, it is the programmer&amp;rsquo;s responsibility to populate &lt;var&gt;record-name-1&lt;/var&gt; with the desired data prior to executing the &lt;code&gt;RELEASE&lt;/code&gt;.</source>
          <target state="translated">선택 사항 인 &lt;code&gt;FROM&lt;/code&gt; 절은 &lt;var&gt;record-name-1&lt;/var&gt; 의 내용을 &lt;var&gt;file-name-1&lt;/var&gt; 에 쓰기 전에 &lt;var&gt;literal-1&lt;/var&gt; 또는 &lt;var&gt;identifier-1&lt;/var&gt; 이 자동으로 &lt;var&gt;record-name-1&lt;/var&gt; 로 이동되도록 합니다. 이 절이 지정되지 않은 경우 &lt;code&gt;RELEASE&lt;/code&gt; 를 실행하기 전에 원하는 데이터로 &lt;var&gt;record-name-1&lt;/var&gt; 을 채우는 것은 프로그래머의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="e3b726a262c88e51e0aea8acaf59b79377369825" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;FROM&lt;/code&gt; clause will cause &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt; to be automatically moved into &lt;var&gt;record-name-1&lt;/var&gt; prior to writing &lt;var&gt;record-name-1&lt;/var&gt;&amp;rsquo;s contents to the &lt;var&gt;file-name-1&lt;/var&gt;. If this clause is not specified, it is the programmer&amp;rsquo;s responsibility to populate &lt;var&gt;record-name-1&lt;/var&gt; with the desired data prior to executing the &lt;code&gt;REWRITE&lt;/code&gt;.</source>
          <target state="translated">선택 사항 인 &lt;code&gt;FROM&lt;/code&gt; 절은 &lt;var&gt;record-name-1&lt;/var&gt; 의 내용을 &lt;var&gt;file-name-1&lt;/var&gt; 에 쓰기 전에 &lt;var&gt;literal-1&lt;/var&gt; 또는 &lt;var&gt;identifier-1&lt;/var&gt; 이 자동으로 &lt;var&gt;record-name-1&lt;/var&gt; 로 이동되도록 합니다. 이 절이 지정되지 않은 경우 &lt;code&gt;REWRITE&lt;/code&gt; 를 실행하기 전에 원하는 데이터로 &lt;var&gt;record-name-1&lt;/var&gt; 을 채우는 것은 프로그래머의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="11a565e09ca269db26b724a41f610fcec92e31ae" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;FROM&lt;/code&gt; clause will cause &lt;var&gt;literal-1&lt;/var&gt; or &lt;var&gt;identifier-1&lt;/var&gt; to be automatically moved into &lt;var&gt;record-name-1&lt;/var&gt; prior to writing &lt;var&gt;record-name-1&lt;/var&gt;&amp;rsquo;s contents to the appropriate file. If this clause is not specified, it is the programmer&amp;rsquo;s responsibility to populate &lt;var&gt;record-name-1&lt;/var&gt; with the desired data prior to executing the &lt;code&gt;WRITE&lt;/code&gt;.</source>
          <target state="translated">선택 사항 인 &lt;code&gt;FROM&lt;/code&gt; 절은 &lt;var&gt;record-name-1&lt;/var&gt; 의 내용을 적절한 파일 에 쓰기 전에 &lt;var&gt;literal-1&lt;/var&gt; 또는 &lt;var&gt;identifier-1&lt;/var&gt; 이 자동으로 &lt;var&gt;record-name-1&lt;/var&gt; 로 이동되도록 합니다. 이 절이 지정되지 않은 경우 &lt;code&gt;WRITE&lt;/code&gt; 를 실행하기 전에 원하는 데이터로 &lt;var&gt;record-name-1&lt;/var&gt; 을 채우는 것은 프로그래머의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="681c65eca127b24eb0e49bce1ca8dfa76c833db2" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;KEY&lt;/code&gt; clause tells the compiler how a record is to be located in the file.</source>
          <target state="translated">선택적 &lt;code&gt;KEY&lt;/code&gt; 절은 파일에서 레코드를 찾는 방법을 컴파일러에 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="da51418f06530fa602c95f8d9fc8b2fd381005eb" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;NEXT PAGE&lt;/code&gt; clause specifies that &amp;mdash; regardless of whether or not the report group containing this clause</source>
          <target state="translated">선택적 &lt;code&gt;NEXT PAGE&lt;/code&gt; 절은이 절을 포함하는 보고서 그룹의 여부에 관계없이 다음을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="007e1b2cb0780c91f2e6af8bf11ba66567f9d100" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;REPLACING&lt;/code&gt; clause allows for one or more of either of the following kinds of text replacements to be made:</source>
          <target state="translated">선택적 &lt;code&gt;REPLACING&lt;/code&gt; 절을 사용하면 다음 유형의 텍스트 교체 중 하나 이상을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="602222e72cbb93bfc686a555d306cfb16e66da32" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;RETURNING&lt;/code&gt; clause will return the address of the allocated memory block into the specified &lt;code&gt;USAGE POINTER&lt;/code&gt;&lt;var&gt;identifier-2&lt;/var&gt; data item. When this option is used, knowledge of the originally-requested size of the allocated memory block will be retained by the program in case a &lt;code&gt;FREE&lt;/code&gt; (see &lt;a href=&quot;#FREE&quot;&gt;FREE&lt;/a&gt;) statement is ever issued against &lt;var&gt;identifier-2&lt;/var&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;RETURNING&lt;/code&gt; 절은 할당 된 메모리 블록의 주소를 지정된 &lt;code&gt;USAGE POINTER&lt;/code&gt; &lt;var&gt;identifier-2&lt;/var&gt; 데이터 항목으로 반환합니다 . 이 옵션을 사용하면 &lt;var&gt;identifier-2&lt;/var&gt; 에 대해 &lt;code&gt;FREE&lt;/code&gt; ( &lt;a href=&quot;#FREE&quot;&gt;FREE&lt;/a&gt; 참조 ) 문이 실행되는 경우 할당 된 메모리 블록의 원래 요청 된 크기에 대한 정보가 프로그램에 의해 유지됩니다 .</target>
        </trans-unit>
        <trans-unit id="fab04316f7a794ab8d7e122254c6f34168b0fec4" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;STEP&lt;/code&gt; clause defines an incrementation value that will be added to any absolute &lt;code&gt;LINE&lt;/code&gt; (see &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt;) or &lt;code&gt;COLUMN&lt;/code&gt; (see &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt;) number specifications that may be part of or subordinate to this data item&amp;rsquo;s definition.</source>
          <target state="translated">선택적 &lt;code&gt;STEP&lt;/code&gt; 절은 이 데이터 항목의 정의에 속하거나 종속 될 수 있는 절대 &lt;code&gt;LINE&lt;/code&gt; ( &lt;a href=&quot;#LINE&quot;&gt;LINE&lt;/a&gt; 참조 ) 또는 &lt;code&gt;COLUMN&lt;/code&gt; ( &lt;a href=&quot;#COLUMN&quot;&gt;COLUMN&lt;/a&gt; 참조 ) 번호 사양에 추가되는 증분 값을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="770ba2fd210f8ab0ecd2db4493e93868b17c2cdd" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;SUPPRESS&lt;/code&gt; clause (with or without the optional  &lt;code&gt;PRINTING&lt;/code&gt; reserved word) is valid syntactically but is non-functional. It is supported to facilitate compatibility with source code written for other versions of COBOL.</source>
          <target state="translated">The optional &lt;code&gt;SUPPRESS&lt;/code&gt; clause (with or without the optional &lt;code&gt;PRINTING&lt;/code&gt; reserved word) is valid syntactically but is non-functional. It is supported to facilitate compatibility with source code written for other versions of COBOL.</target>
        </trans-unit>
        <trans-unit id="9340aa4b922026a2ede390ce69d44ac06fde686a" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;VARYING&lt;/code&gt; clause defines an identifier that may be used as a subscript for the multiple occurrences of this or any subordinate data item should the &lt;code&gt;SOURCE&lt;/code&gt; (see &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE&lt;/a&gt;) or &lt;code&gt;SUM&lt;/code&gt; (see &lt;a href=&quot;#SUM&quot;&gt;SUM&lt;/a&gt;) clause(s) on this or subordinate data items reference entries within the table. The &lt;var&gt;identifier-2&lt;/var&gt; data item is dynamically created as needed and cannot be referenced outside the scope of the report data item definition.</source>
          <target state="translated">The optional &lt;code&gt;VARYING&lt;/code&gt; clause defines an identifier that may be used as a subscript for the multiple occurrences of this or any subordinate data item should the &lt;code&gt;SOURCE&lt;/code&gt; (see &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE&lt;/a&gt;) or &lt;code&gt;SUM&lt;/code&gt; (see &lt;a href=&quot;#SUM&quot;&gt;SUM&lt;/a&gt;) clause(s) on this or subordinate data items reference entries within the table. The &lt;var&gt;identifier-2&lt;/var&gt; data item is dynamically created as needed and cannot be referenced outside the scope of the report data item definition.</target>
        </trans-unit>
        <trans-unit id="39f43397f6ff2836c871f3437f085f178d7d2352" translate="yes" xml:space="preserve">
          <source>The optional  &lt;code&gt;WITH TEST&lt;/code&gt; clause will control whether &lt;code&gt;UNTIL&lt;/code&gt; testing occurs &lt;code&gt;BEFORE&lt;/code&gt; the statements within the perform scope are executed on each iteration (creating the possibility &amp;mdash; if &lt;var&gt;conditional-expression-1&lt;/var&gt; is initially &lt;code&gt;TRUE&lt;/code&gt; &amp;mdash; that the statements within the perform scope will never be executed) or  &lt;code&gt;AFTER&lt;/code&gt; (guaranteeing the statements within the perform scope will be executed at least once).</source>
          <target state="translated">The optional &lt;code&gt;WITH TEST&lt;/code&gt; clause will control whether &lt;code&gt;UNTIL&lt;/code&gt; testing occurs &lt;code&gt;BEFORE&lt;/code&gt; the statements within the perform scope are executed on each iteration (creating the possibility &amp;mdash; if &lt;var&gt;conditional-expression-1&lt;/var&gt; is initially &lt;code&gt;TRUE&lt;/code&gt; &amp;mdash; that the statements within the perform scope will never be executed) or &lt;code&gt;AFTER&lt;/code&gt; (guaranteeing the statements within the perform scope will be executed at least once).</target>
        </trans-unit>
        <trans-unit id="c9d18cddc912d76b9dbb9c56889ed96b929fff80" translate="yes" xml:space="preserve">
          <source>The optional &amp;lt;</source>
          <target state="translated">선택적 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="080e4f75d279eed6dae454bddb2f32a61bc17e9f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&lt;var&gt;VARYING-Clause&lt;/var&gt;&lt;/code&gt; is a mechanism that creates an advanced loop-management mechanism complete with one or more numeric data items being automatically incremented (or decremented) on each loop iteration as well as the termination control of an &lt;code&gt;UNTIL&lt;/code&gt; clause. See &lt;a href=&quot;#VARYING&quot;&gt;VARYING&lt;/a&gt;, for the details.</source>
          <target state="translated">The optional &lt;code&gt;&lt;var&gt;VARYING-Clause&lt;/var&gt;&lt;/code&gt; is a mechanism that creates an advanced loop-management mechanism complete with one or more numeric data items being automatically incremented (or decremented) on each loop iteration as well as the termination control of an &lt;code&gt;UNTIL&lt;/code&gt; clause. See &lt;a href=&quot;#VARYING&quot;&gt;VARYING&lt;/a&gt;, for the details.</target>
        </trans-unit>
        <trans-unit id="c245b2a77c964ae7f378c260ff70792060cc6c73" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ASSIGN&lt;/code&gt; clause specifies how &amp;mdash; at runtime, when &lt;var&gt;file-name-1&lt;/var&gt; is opened &amp;mdash; either a logical device (&lt;code&gt;STDIN&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt;) or a file anywhere in one of the currently-mounted file systems will be associated with &lt;var&gt;file-name-1&lt;/var&gt;, as follows:</source>
          <target state="translated">The optional &lt;code&gt;ASSIGN&lt;/code&gt; clause specifies how &amp;mdash; at runtime, when &lt;var&gt;file-name-1&lt;/var&gt; is opened &amp;mdash; either a logical device ( &lt;code&gt;STDIN&lt;/code&gt; , &lt;code&gt;STDOUT&lt;/code&gt; ) or a file anywhere in one of the currently-mounted file systems will be associated with &lt;var&gt;file-name-1&lt;/var&gt; , as follows:</target>
        </trans-unit>
        <trans-unit id="2335bce8760e030e94b35aae81370b77f27329d5" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;AT END&lt;/code&gt; clause, if coded, is used to detect and react to the failure of an attempt to retrieve another record from the file due to an end-of-file (i.e. no more records) condition.</source>
          <target state="translated">The optional &lt;code&gt;AT END&lt;/code&gt; clause, if coded, is used to detect and react to the failure of an attempt to retrieve another record from the file due to an end-of-file (i.e. no more records) condition.</target>
        </trans-unit>
        <trans-unit id="f633810f758820180dda5a1cec467b17e030e360" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; clause may be used to detect exceptions from a prior arithmetic verb such as COMPUTE to recover any errors produced. These are recovered using the function &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt;.</source>
          <target state="translated">The optional &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; clause may be used to detect exceptions from a prior arithmetic verb such as COMPUTE to recover any errors produced. These are recovered using the function &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b450f51485d1c3fdcf29180c80931ef129adaf1d" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;INITIAL&lt;/code&gt; clauses may be used to limit the range of characters in the inspect subject that the &lt;code&gt;CONVERTING&lt;/code&gt;, &lt;code&gt;REPLACING&lt;/code&gt; or &lt;code&gt;TALLYING&lt;/code&gt; instruction in which they occur will apply. We call this the &amp;rsquo;</source>
          <target state="translated">The optional &lt;code&gt;INITIAL&lt;/code&gt; clauses may be used to limit the range of characters in the inspect subject that the &lt;code&gt;CONVERTING&lt;/code&gt; , &lt;code&gt;REPLACING&lt;/code&gt; or &lt;code&gt;TALLYING&lt;/code&gt; instruction in which they occur will apply. We call this the &amp;rsquo;</target>
        </trans-unit>
        <trans-unit id="5f659db6d18852916f1701a2543fc2ed4e2a51c7" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;INVALID KEY&lt;/code&gt; and &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, by detecting non-zero (typically 23 = key not found = record not found) and 00 file status codes, respectively. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;INVALID KEY&lt;/code&gt; and &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, by detecting non-zero (typically 23 = key not found = record not found) and 00 file status codes, respectively. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="5763cd2980dc8f2e637eceeaf46624f8f336d8e6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;INVALID KEY&lt;/code&gt; and &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to delete a record. See &lt;a href=&quot;#INVALID-KEY-_002b-NOT-INVALID-KEY&quot;&gt;INVALID KEY + NOT INVALID KEY&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;INVALID KEY&lt;/code&gt; and &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to delete a record. See &lt;a href=&quot;#INVALID-KEY-_002b-NOT-INVALID-KEY&quot;&gt;INVALID KEY + NOT INVALID KEY&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="e2095e4875c0c4dd027ff5402e647d4c1cdd7389" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;INVALID KEY&lt;/code&gt; and &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clauses may be used when writing to relative or indexed files to detect and react to the failure (non-zero file status code) or success (00 file status code), respectively, of the statement. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;INVALID KEY&lt;/code&gt; and &lt;code&gt;NOT INVALID KEY&lt;/code&gt; clauses may be used when writing to relative or indexed files to detect and react to the failure (non-zero file status code) or success (00 file status code), respectively, of the statement. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="6664dc66ef4fe19045293f6ad25411160d7ad5de" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;LOCK&lt;/code&gt; options may be used to manually control access to the just-written record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviour.</source>
          <target state="translated">The optional &lt;code&gt;LOCK&lt;/code&gt; options may be used to manually control access to the just-written record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviour.</target>
        </trans-unit>
        <trans-unit id="a2b04114702ae3755b79aa42cc01f76fbee400a0" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;LOCK&lt;/code&gt; options may be used to manually control access to the re-written record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviours.</source>
          <target state="translated">The optional &lt;code&gt;LOCK&lt;/code&gt; options may be used to manually control access to the re-written record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviours.</target>
        </trans-unit>
        <trans-unit id="b4c6ce2c0076962bcb88b79f371d94608432ee9a" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;LOCK&lt;/code&gt; options may be used to manually control access to the retrieved record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviours.</source>
          <target state="translated">The optional &lt;code&gt;LOCK&lt;/code&gt; options may be used to manually control access to the retrieved record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviours.</target>
        </trans-unit>
        <trans-unit id="fbc79d35956b4f1657331071318c1df6aefeacda" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;NOT AT END&lt;/code&gt; clause, if coded, will check checking for a file status value of 00. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;NOT AT END&lt;/code&gt; clause, if coded, will check checking for a file status value of 00. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="d92b2426faa4e65d2156a6c07c9c420f2dc758ef" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;NOT AT END&lt;/code&gt; clause, if coded, will check for a file status value of 00. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;NOT AT END&lt;/code&gt; clause, if coded, will check for a file status value of 00. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="e1159c3dda581ab1071038f496702f9c41e3c739" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to an attempt to retrieve the value of a non-existent environment variable or the successful retrieval of an environment variable&amp;rsquo;s value, respectively. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to an attempt to retrieve the value of a non-existent environment variable or the successful retrieval of an environment variable&amp;rsquo;s value, respectively. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="b547e8f580d9788090532ae9f7d59b60466e4e5a" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to display output to the specified device. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to display output to the specified device. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="919779506686066f195eee75b4ea208006066f17" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to display output to the specified item. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to display output to the specified item. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="c07dccd1c430c51a4dc0be5ab652b47091f3172f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to retrieve an &lt;code&gt;ARGUMENT-VALUE&lt;/code&gt;. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to retrieve an &lt;code&gt;ARGUMENT-VALUE&lt;/code&gt; . See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="d531107901fed112815365506c3bd83aeedf3644" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of the screen I/O attempt. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of the screen I/O attempt. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="9cb5a118e4770588ed2ce31f4a576fc2f0d9e50f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON OVERFLOW&lt;/code&gt; and &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; clauses (or &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; &amp;mdash; they are interchangeable) may be used to detect and react to the failure or success, respectively, of an attempt to &lt;code&gt;CALL&lt;/code&gt; the subroutine. Failure, in this context, is defined as the inability to either locate or load the object code of the subroutine at execution time. See &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON OVERFLOW&lt;/code&gt; and &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; clauses (or &lt;code&gt;ON EXCEPTION&lt;/code&gt; and &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; &amp;mdash; they are interchangeable) may be used to detect and react to the failure or success, respectively, of an attempt to &lt;code&gt;CALL&lt;/code&gt; the subroutine. Failure, in this context, is defined as the inability to either locate or load the object code of the subroutine at execution time. See &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="1736515e0d179975bf26a1082c6cfded131cc805" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON OVERFLOW&lt;/code&gt; and &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; clauses may be used to detect and react to the occurrence or not, respectively, of an overflow condition. See &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON OVERFLOW&lt;/code&gt; and &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; clauses may be used to detect and react to the occurrence or not, respectively, of an overflow condition. See &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="86bd88e4fb67221bdaf921bed99d6000c7bf8c8c" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being an &lt;var&gt;identifier-2&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point, or an attempt to divide by zero. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being an &lt;var&gt;identifier-2&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point, or an attempt to divide by zero. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="b7546cdeefd033cf20d1a77eb84251bf560f4127" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being an &lt;var&gt;identifier-2&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being an &lt;var&gt;identifier-2&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="230633b837ebb0a75a8f8930409c7ae09ea60059" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being an &lt;var&gt;identifier-3&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being an &lt;var&gt;identifier-3&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="3a0cdc9f351186be404bbdec2727db09317d44ac" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being numeric truncation caused by an &lt;var&gt;identifier-2&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point, or an attempt to divide by zero. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being numeric truncation caused by an &lt;var&gt;identifier-2&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point, or an attempt to divide by zero. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="612ffedf8e57319b2b83cbda5d8a84293e8cba38" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined either as having an &lt;var&gt;identifier-3&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point or attempting to divide by zero. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</source>
          <target state="translated">The optional &lt;code&gt;ON SIZE ERROR&lt;/code&gt; and &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined either as having an &lt;var&gt;identifier-3&lt;/var&gt; with an insufficient number of digit positions available to the left of any implied decimal point or attempting to divide by zero. See &lt;a href=&quot;#ON-SIZE-ERROR-_002b-NOT-ON-SIZE-ERROR&quot;&gt;ON SIZE ERROR + NOT ON SIZE ERROR&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="1080a5c732edfa97c84b94f65a9a7607868c1f80" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;RETURNING&lt;/code&gt; clause provides the opportunity to return a numeric value to the operating system (an &lt;em&gt;exit status&lt;/em&gt;). The manner in which the exit status may be interrogated by the operating system varies, but Windows can use &lt;code&gt;%ERRORLEVEL%&lt;/code&gt; to query the exit status while Unix shells such as sh, bash and ksh can query the exit status as &lt;code&gt;$?&lt;/code&gt;. Other Unix shells may have different ways to access return code values.</source>
          <target state="translated">The optional &lt;code&gt;RETURNING&lt;/code&gt; clause provides the opportunity to return a numeric value to the operating system (an &lt;em&gt;exit status&lt;/em&gt;). The manner in which the exit status may be interrogated by the operating system varies, but Windows can use &lt;code&gt;%ERRORLEVEL%&lt;/code&gt; to query the exit status while Unix shells such as sh, bash and ksh can query the exit status as &lt;code&gt;$?&lt;/code&gt; . Other Unix shells may have different ways to access return code values.</target>
        </trans-unit>
        <trans-unit id="d88f994038fcbe7fa376b47b1c213a97aa0a0df9" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;RETURNING&lt;/code&gt; clause provides the opportunity to return a numeric value to the operating system (technically, an</source>
          <target state="translated">The optional &lt;code&gt;RETURNING&lt;/code&gt; clause provides the opportunity to return a numeric value to the operating system (technically, an</target>
        </trans-unit>
        <trans-unit id="705fa7ca5ad0fe2d2679043e15e8b52e659ce512" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ROUNDED&lt;/code&gt; (see &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;) clause available to each &lt;var&gt;identifier-1&lt;/var&gt; will control how non-integer results will be saved.</source>
          <target state="translated">The optional &lt;code&gt;ROUNDED&lt;/code&gt; (see &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;) clause available to each &lt;var&gt;identifier-1&lt;/var&gt; will control how non-integer results will be saved.</target>
        </trans-unit>
        <trans-unit id="fe68da4d1fc12756e82e22a02d3b18a3d34c38d8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ROUNDED&lt;/code&gt; (see &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;) clause available to each &lt;var&gt;identifier-2&lt;/var&gt; will control how non-integer results will be saved.</source>
          <target state="translated">The optional &lt;code&gt;ROUNDED&lt;/code&gt; (see &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;) clause available to each &lt;var&gt;identifier-2&lt;/var&gt; will control how non-integer results will be saved.</target>
        </trans-unit>
        <trans-unit id="339cd2543e151bd508ea8185573b68ce927390fd" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;ROUNDED&lt;/code&gt; (see &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;) clause available to each &lt;var&gt;identifier-3&lt;/var&gt; will control how non-integer results will be saved.</source>
          <target state="translated">The optional &lt;code&gt;ROUNDED&lt;/code&gt; (see &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;) clause available to each &lt;var&gt;identifier-3&lt;/var&gt; will control how non-integer results will be saved.</target>
        </trans-unit>
        <trans-unit id="d8a63bb1c90fe9cf2c354b6fd3e5d1a718675d33" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;SIZE&lt;/code&gt; clause allows you to specify the number of bytes a &lt;code&gt;BY VALUE&lt;/code&gt; argument will occupy, with &lt;code&gt;SIZE DEFAULT&lt;/code&gt; specifying 4 bytes (this is the default if no &lt;code&gt;SIZE&lt;/code&gt; clause is used), &lt;code&gt;SIZE AUTO&lt;/code&gt; specifying the size of the argument in the calling program and &lt;code&gt;SIZE &lt;var&gt;integer-1&lt;/var&gt;&lt;/code&gt; specifying a specific byte count.</source>
          <target state="translated">The optional &lt;code&gt;SIZE&lt;/code&gt; clause allows you to specify the number of bytes a &lt;code&gt;BY VALUE&lt;/code&gt; argument will occupy, with &lt;code&gt;SIZE DEFAULT&lt;/code&gt; specifying 4 bytes (this is the default if no &lt;code&gt;SIZE&lt;/code&gt; clause is used), &lt;code&gt;SIZE AUTO&lt;/code&gt; specifying the size of the argument in the calling program and &lt;code&gt;SIZE &lt;var&gt;integer-1&lt;/var&gt;&lt;/code&gt; specifying a specific byte count.</target>
        </trans-unit>
        <trans-unit id="29f10b5294ae0f2de5b6cb4592f45f680e33abc7" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;THROUGH&lt;/code&gt; clause allows a range of possible &lt;code&gt;TRUE&lt;/code&gt; values to be specified.</source>
          <target state="translated">The optional &lt;code&gt;THROUGH&lt;/code&gt; clause allows a range of possible &lt;code&gt;TRUE&lt;/code&gt; values to be specified.</target>
        </trans-unit>
        <trans-unit id="0013ed917dd1f8d113996ace12cf4e36597002cc" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;UNSIGNED&lt;/code&gt; keyword, legal only if &lt;code&gt;SIZE AUTO&lt;/code&gt; or &lt;code&gt;SIZE &lt;var&gt;integer-1&lt;/var&gt;&lt;/code&gt; are coded, will add the &lt;code&gt;unsigned&lt;/code&gt; attribute to the argument&amp;rsquo;s specification in the C-language function header code generated for the subprogram. While not of any benefit when the calling program is a GnuCOBOL program, this can improve compatibility with a C-language calling program.</source>
          <target state="translated">The optional &lt;code&gt;UNSIGNED&lt;/code&gt; keyword, legal only if &lt;code&gt;SIZE AUTO&lt;/code&gt; or &lt;code&gt;SIZE &lt;var&gt;integer-1&lt;/var&gt;&lt;/code&gt; are coded, will add the &lt;code&gt;unsigned&lt;/code&gt; attribute to the argument&amp;rsquo;s specification in the C-language function header code generated for the subprogram. While not of any benefit when the calling program is a GnuCOBOL program, this can improve compatibility with a C-language calling program.</target>
        </trans-unit>
        <trans-unit id="520c33af464cdee066d173d4e91c0e82ba87a837" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;identifier-1&lt;/var&gt; specification assigns a name to this report group so that the group may be referenced either by a &lt;code&gt;GENERATE&lt;/code&gt; statement or on a &lt;code&gt;USE BEFORE REPORTING&lt;/code&gt;.</source>
          <target state="translated">The optional &lt;var&gt;identifier-1&lt;/var&gt; specification assigns a name to this report group so that the group may be referenced either by a &lt;code&gt;GENERATE&lt;/code&gt; statement or on a &lt;code&gt;USE BEFORE REPORTING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e29f903a780b46d36f9b5a59eb0863b0fd22844f" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;symbol&lt;/var&gt; argument serves the same function &amp;mdash; and has the same default and possible values &amp;mdash; as the corresponding argument of the &lt;code&gt;NUMVAL-C&lt;/code&gt; function.</source>
          <target state="translated">The optional &lt;var&gt;symbol&lt;/var&gt; argument serves the same function &amp;mdash; and has the same default and possible values &amp;mdash; as the corresponding argument of the &lt;code&gt;NUMVAL-C&lt;/code&gt; function.</target>
        </trans-unit>
        <trans-unit id="88cf1332e6eb70205fbce541849d3b4d10ba2250" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;symbol&lt;/var&gt; character represents the currency symbol (a non-space single-character group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal) that may be used as the currency character in &lt;var&gt;string&lt;/var&gt;. Any spaces including leading or trailing are ignored. If no &lt;var&gt;symbol&lt;/var&gt; is specified, the value that would be returned by the &lt;code&gt;CURRENCY-SYMBOL&lt;/code&gt; intrinsic function (see &lt;a href=&quot;#CURRENCY_002dSYMBOL&quot;&gt;CURRENCY-SYMBOL&lt;/a&gt;) will be used.</source>
          <target state="translated">The optional &lt;var&gt;symbol&lt;/var&gt; character represents the currency symbol (a non-space single-character group item, &lt;code&gt;USAGE DISPLAY&lt;/code&gt; elementary item or alphanumeric literal) that may be used as the currency character in &lt;var&gt;string&lt;/var&gt; . Any spaces including leading or trailing are ignored. If no &lt;var&gt;symbol&lt;/var&gt; is specified, the value that would be returned by the &lt;code&gt;CURRENCY-SYMBOL&lt;/code&gt; intrinsic function (see &lt;a href=&quot;#CURRENCY_002dSYMBOL&quot;&gt;CURRENCY-SYMBOL&lt;/a&gt;) will be used.</target>
        </trans-unit>
        <trans-unit id="bf1a55f3158dc4500783987062f784a64e6a23f4" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;yy-cutoff&lt;/var&gt; (a numeric integer data item or literal) argument is the year cutoff used to delineate centuries; if the year component of the date meets or exceeds this cutoff value, the result will be 19yymmdd; if the year component of the date is less than the cutoff value, the result will be 20yymmdd. The default cutoff value if no second argument is given will be 50.</source>
          <target state="translated">The optional &lt;var&gt;yy-cutoff&lt;/var&gt; (a numeric integer data item or literal) argument is the year cutoff used to delineate centuries; if the year component of the date meets or exceeds this cutoff value, the result will be 19yymmdd; if the year component of the date is less than the cutoff value, the result will be 20yymmdd. The default cutoff value if no second argument is given will be 50.</target>
        </trans-unit>
        <trans-unit id="cd5f1de2af3c50eae024efd335273b0031dff9fc" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;yy-cutoff&lt;/var&gt; argument (a numeric integer data item or literal) is the year cutoff used to delineate centuries; if the year component of the date meets or exceeds this cutoff value, the result will be 19yyddd; if the year component of the date is less than the cutoff, the result will be 20yyddd. The default cutoff value if no second argument is given will be 50.</source>
          <target state="translated">The optional &lt;var&gt;yy-cutoff&lt;/var&gt; argument (a numeric integer data item or literal) is the year cutoff used to delineate centuries; if the year component of the date meets or exceeds this cutoff value, the result will be 19yyddd; if the year component of the date is less than the cutoff, the result will be 20yyddd. The default cutoff value if no second argument is given will be 50.</target>
        </trans-unit>
        <trans-unit id="60cfcb939176041a3028a150996cbc606d2b9902" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;yy-cutoff&lt;/var&gt; argument is the year cutoff used to delineate centuries; if &lt;var&gt;yy&lt;/var&gt; meets or exceeds this cutoff value, the result will be 19yy; if &lt;var&gt;yy&lt;/var&gt; is less than the cutoff, the result will be 20yy. The default cutoff value if no second argument is given will be 50.</source>
          <target state="translated">The optional &lt;var&gt;yy-cutoff&lt;/var&gt; argument is the year cutoff used to delineate centuries; if &lt;var&gt;yy&lt;/var&gt; meets or exceeds this cutoff value, the result will be 19yy; if &lt;var&gt;yy&lt;/var&gt; is less than the cutoff, the result will be 20yy. The default cutoff value if no second argument is given will be 50.</target>
        </trans-unit>
        <trans-unit id="b6f813872fe0ac7950d75552905eaaab407d7ebd" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;yy-execution-time&lt;/var&gt; argument (a numeric integer data item or literal) The default execution time value if no third argument is given will be now equivalent to specifying (FUNCTION NUMVAL (FUNCTION CURRENT-DATE (1:4))).</source>
          <target state="translated">The optional &lt;var&gt;yy-execution-time&lt;/var&gt; argument (a numeric integer data item or literal) The default execution time value if no third argument is given will be now equivalent to specifying (FUNCTION NUMVAL (FUNCTION CURRENT-DATE (1:4))).</target>
        </trans-unit>
        <trans-unit id="ad590c843bd6f491a8a037cc46e5be1136dc01fa" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;yy-execution-time&lt;/var&gt; argument (a numeric integer data item or literal) The default execution time value if no third argument is given will be now equivalent to specifying &lt;code&gt;(FUNCTION NUMVAL (FUNCTION CURRENT-DATE (1:4)))&lt;/code&gt;.</source>
          <target state="translated">The optional &lt;var&gt;yy-execution-time&lt;/var&gt; argument (a numeric integer data item or literal) The default execution time value if no third argument is given will be now equivalent to specifying &lt;code&gt;(FUNCTION NUMVAL (FUNCTION CURRENT-DATE (1:4)))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3186175d9dd1012552e640129411e1c73b0e63d2" translate="yes" xml:space="preserve">
          <source>The optional alphanumeric &lt;var&gt;argument-2&lt;/var&gt; character represents the currency symbol (a non-space and at least one single-character item, that may be used as the currency character in &lt;var&gt;argument-1&lt;/var&gt;. Any spaces including leading or trailing are ignored. If no &lt;var&gt;argument-2&lt;/var&gt; is specified, the value that would be returned by the &lt;code&gt;CURRENCY-SYMBOL&lt;/code&gt; intrinsic function (see &lt;a href=&quot;#CURRENCY_002dSYMBOL&quot;&gt;CURRENCY-SYMBOL&lt;/a&gt;) will be used. &lt;var&gt;argument-2&lt;/var&gt; must not contain any of the digits - through 9, characters &amp;lsquo;</source>
          <target state="translated">The optional alphanumeric &lt;var&gt;argument-2&lt;/var&gt; character represents the currency symbol (a non-space and at least one single-character item, that may be used as the currency character in &lt;var&gt;argument-1&lt;/var&gt; . Any spaces including leading or trailing are ignored. If no &lt;var&gt;argument-2&lt;/var&gt; is specified, the value that would be returned by the &lt;code&gt;CURRENCY-SYMBOL&lt;/code&gt; intrinsic function (see &lt;a href=&quot;#CURRENCY_002dSYMBOL&quot;&gt;CURRENCY-SYMBOL&lt;/a&gt;) will be used. &lt;var&gt;argument-2&lt;/var&gt; must not contain any of the digits - through 9, characters &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ce39b1074bd11d696e1614a268c6ca2ea772fe9c" translate="yes" xml:space="preserve">
          <source>The optional extension of (AFTER) when used with the &lt;code&gt;CONTINUE&lt;/code&gt; statement pauses execution for a specified length of time.</source>
          <target state="translated">The optional extension of (AFTER) when used with the &lt;code&gt;CONTINUE&lt;/code&gt; statement pauses execution for a specified length of time.</target>
        </trans-unit>
        <trans-unit id="ade799e690ca94e55a73040a7f01a0ef3017d702" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ASSIGN&lt;/code&gt;clause specifies how &amp;mdash; at runtime, when &amp;lt;</source>
          <target state="translated">선택적 &lt;code&gt;ASSIGN&lt;/code&gt; 절은 런타임시 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="ce5a72c6e25354896038dc72f35bb598948d0d22" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;AT END&lt;/code&gt;clause, if coded, is used to detect and react to the failure of an attempt to retrieve another record from the file due to an end-of-file (i.e. no more records) condition.</source>
          <target state="translated">선택적 &lt;code&gt;AT END&lt;/code&gt; 절은 코드화되어 있으면 파일 끝 (즉, 더 이상 레코드 없음) 조건으로 인해 파일에서 다른 레코드를 검색하려는 시도가 실패한 것을 감지하고 이에 대응하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f4e76515260f34b7703f964af1c7d71eea2bac80" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;CLASSIFICATION&lt;/code&gt;</source>
          <target state="translated">선택적인 &lt;code&gt;CLASSIFICATION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e44a435b463299b31437b6e220402592ab756927" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;DEPENDING ON&lt;/code&gt;</source>
          <target state="translated">선택적인 &lt;code&gt;DEPENDING ON&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="497921f9804627c47e4b1dc5c3f6124d2f64e1d1" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;EXCEPTION-STATUS&lt;/code&gt;clause may be used to detect exceptions from a prior arthmetic verb such as COMPUTE to recover any errors produced. These are recovered using the function&lt;code&gt;EXCEPTION-STATUS&lt;/code&gt;</source>
          <target state="translated">선택적 &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; 절을 사용하여 COMPUTE와 같은 선행 기술 동사의 예외를 감지하여 생성 된 오류를 복구 할 수 있습니다. 이것은 &lt;code&gt;EXCEPTION-STATUS&lt;/code&gt; 함수를 사용하여 복구됩니다.</target>
        </trans-unit>
        <trans-unit id="41aa20bec3a591e7be192da3bf04dcc61ad2faf8" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;FROM&lt;/code&gt;</source>
          <target state="translated">옵션 &lt;code&gt;FROM&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee61fba3a8183e4ef19a6055ab36f9fbdedc5f4a" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;INITIAL&lt;/code&gt;clauses may be used to limit the range of characters in the inspect subject that the&lt;code&gt;CONVERTING&lt;/code&gt;&lt;code&gt;REPLACING&lt;/code&gt;or&lt;code&gt;TALLYING&lt;/code&gt;instruction in which they occur will apply. We call this the &amp;rsquo;</source>
          <target state="translated">옵션 &lt;code&gt;INITIAL&lt;/code&gt; 조항이가 그 주제 검사 문자의 범위를 제한 할 수 있습니다 &lt;code&gt;CONVERTING&lt;/code&gt; &lt;code&gt;REPLACING&lt;/code&gt; 또는 &lt;code&gt;TALLYING&lt;/code&gt; 가 적용됩니다 발생하는 명령. 우리는 이것을 '</target>
        </trans-unit>
        <trans-unit id="c3b702db4aa699fb2cd7e947ed6bc0b29bf2ad5a" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;INVALID KEY&lt;/code&gt;and&lt;code&gt;NOT INVALID KEY&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, by detecting non-zero (typically 23 = key not found = record not found) and 00 file status codes, respectively. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적 &lt;code&gt;INVALID KEY&lt;/code&gt; 및 &lt;code&gt;NOT INVALID KEY&lt;/code&gt; 절은 각각 0이 아닌 (일반적으로 23 = 키를 찾을 수 없음 = 레코드를 찾을 수 없음) 및 00 파일 상태 코드를 감지하여 실패 또는 성공을 각각 감지하고 대응하는 데 사용될 수 있습니다. 추가 정보는 &lt;a href=&quot;#File-Status-Codes&quot;&gt;파일 상태 코드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6579d3b45b2bf0fc9e7980f5c87f744c20f9bdd" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;INVALID KEY&lt;/code&gt;and&lt;code&gt;NOT INVALID KEY&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of an attempt to delete a record. See &lt;a href=&quot;#INVALID-KEY-_002b-NOT-INVALID-KEY&quot;&gt;INVALID KEY + NOT INVALID KEY&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적 &lt;code&gt;INVALID KEY&lt;/code&gt; 및 &lt;code&gt;NOT INVALID KEY&lt;/code&gt; 절은 레코드 삭제 시도의 실패 또는 성공을 각각 감지하고 이에 대응하는 데 사용될 수 있습니다. 추가 정보는 &lt;a href=&quot;#INVALID-KEY-_002b-NOT-INVALID-KEY&quot;&gt;유효하지 않은 키 + 유효하지 않은 키를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26bfd5bce5d49771038a428b0a362198a5070a77" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;INVALID KEY&lt;/code&gt;and&lt;code&gt;NOT INVALID KEY&lt;/code&gt;clauses may be used when writing to relative or indexed files to detect and react to the failure (non-zero file status code) or success (00 file status code), respectively, of the statement. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적 &lt;code&gt;INVALID KEY&lt;/code&gt; 및 &lt;code&gt;NOT INVALID KEY&lt;/code&gt; 절은 명령문의 실패 (0이 아닌 파일 상태 코드) 또는 성공 (00 파일 상태 코드)을 각각 감지하고 이에 대응하기 위해 상대 또는 색인 파일에 쓸 때 사용될 수 있습니다. 추가 정보는 &lt;a href=&quot;#File-Status-Codes&quot;&gt;파일 상태 코드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32d9832224b26001752da31cbdde2d003a102c41" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;KEY&lt;/code&gt;</source>
          <target state="translated">선택적인 &lt;code&gt;KEY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c16e54f3bc3588c2425aa5ee03deb6c585ae559e" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;LOCK&lt;/code&gt;options may be used to manually control access to the just-written record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviour.</source>
          <target state="translated">선택적 &lt;code&gt;LOCK&lt;/code&gt; 옵션을 사용하여이 프로그램이 실행되는 동안 다른 프로그램이 방금 작성한 레코드에 대한 액세스를 수동으로 제어 할 수 있습니다. 다양한 레코드 잠금 동작을 검토하려면 &lt;a href=&quot;#Record-Locking&quot;&gt;레코드 잠금을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c989c279cb3e0e670fd60bfd552d0746dd1dfcb" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;LOCK&lt;/code&gt;options may be used to manually control access to the re-written record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviours.</source>
          <target state="translated">선택적 &lt;code&gt;LOCK&lt;/code&gt; 옵션을 사용하면이 프로그램이 실행되는 동안 다른 프로그램이 다시 쓴 레코드에 대한 액세스를 수동으로 제어 할 수 있습니다. 다양한 레코드 잠금 동작을 검토하려면 &lt;a href=&quot;#Record-Locking&quot;&gt;레코드 잠금을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18ac5ebdd04e4f9dba36f5cc523e63074b42f95c" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;LOCK&lt;/code&gt;options may be used to manually control access to the retrieved record by other programs while this program is running. See &lt;a href=&quot;#Record-Locking&quot;&gt;Record Locking&lt;/a&gt;, to review the various record locking behaviours.</source>
          <target state="translated">선택적 &lt;code&gt;LOCK&lt;/code&gt; 옵션을 사용하면이 프로그램이 실행되는 동안 다른 프로그램이 검색 한 레코드에 대한 액세스를 수동으로 제어 할 수 있습니다. 다양한 레코드 잠금 동작을 검토하려면 &lt;a href=&quot;#Record-Locking&quot;&gt;레코드 잠금을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f96f6c529e0fe02ff6c01c48e6f58e1c3fb2187c" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;NEXT PAGE&lt;/code&gt;</source>
          <target state="translated">선택적인 &lt;code&gt;NEXT PAGE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9883bd500dd2c11c55a5bb54d03db8e31863a71" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;NOT AT END&lt;/code&gt;clause, if coded, will check checking for a file status value of 00. See &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택 사항 인 &lt;code&gt;NOT AT END&lt;/code&gt; 절은 코딩 된 경우 파일 상태 값 00을 검사 합니다. 추가 정보는 &lt;a href=&quot;#File-Status-Codes&quot;&gt;파일 상태 코드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5f21eadc5bb2a95de2d8d4f2d9fdaa4936a7a21" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON EXCEPTION&lt;/code&gt;and&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;clauses may be used to detect and react to an attempt to retrieve the value of a non-existent environment variable or the successful retrieval of an environment variable&amp;rsquo;s value, respectively. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적인 &lt;code&gt;ON EXCEPTION&lt;/code&gt; 및 &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; 절을 사용하여 존재하지 않는 환경 변수 값을 검색하거나 환경 변수 값을 성공적으로 검색하려는 시도를 감지하고 이에 대응할 수 있습니다. 추가 정보는 &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;예외 제외 + 예외 제외를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cfa70e6c29950b4f6846306141cdab701f5a7949" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON EXCEPTION&lt;/code&gt;and&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of an attempt to display output to the specified device. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적 &lt;code&gt;ON EXCEPTION&lt;/code&gt; 및 &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; 절을 사용하여 지정된 장치에 출력을 표시하려는 시도의 실패 또는 성공을 각각 감지하고 이에 대응할 수 있습니다. 추가 정보는 &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;예외 제외 + 예외 제외를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0b750f7bf2aba1ffe3ef95db5ebba0c41f396ac" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON EXCEPTION&lt;/code&gt;and&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of an attempt to display output to the specified item. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적 &lt;code&gt;ON EXCEPTION&lt;/code&gt; 및 &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; 절을 사용하여 지정된 항목에 출력을 표시하려는 시도의 실패 또는 성공을 각각 감지하고 이에 대응할 수 있습니다. 추가 정보는 &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;예외 제외 + 예외 제외를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="43634a237661f28b822eadabcecfc46df58f2785" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON EXCEPTION&lt;/code&gt;and&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of an attempt to retrieve an&lt;code&gt;ARGUMENT-VALUE&lt;/code&gt; See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적 &lt;code&gt;ON EXCEPTION&lt;/code&gt; 및 &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; 절을 사용하여 &lt;code&gt;ARGUMENT-VALUE&lt;/code&gt; 검색 시도의 실패 또는 성공을 각각 감지하고 이에 대응할 수 있습니다 . 추가 정보는 &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="07692f68375e5247ccbb6f915f93ebb67e06c8c1" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON EXCEPTION&lt;/code&gt;and&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of the screen I/O attempt. See &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;ON EXCEPTION + NOT ON EXCEPTION&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적인 &lt;code&gt;ON EXCEPTION&lt;/code&gt; 및 &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; 절을 사용하여 화면 I / O 시도의 실패 또는 성공을 각각 감지하고 이에 대응할 수 있습니다. 추가 정보는 &lt;a href=&quot;#ON-EXCEPTION-_002b-NOT-ON-EXCEPTION&quot;&gt;예외 제외 + 예외 제외를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="173f548db86d2860c80e68b29805d01d7cce3f9e" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON OVERFLOW&lt;/code&gt;and&lt;code&gt;NOT ON OVERFLOW&lt;/code&gt;clauses (or&lt;code&gt;ON EXCEPTION&lt;/code&gt;and&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;&amp;mdash; they are interchangeable) may be used to detect and react to the failure or success, respectively, of an attempt to&lt;code&gt;CALL&lt;/code&gt;the subroutine. Failure, in this context, is defined as the inability to either locate or load the object code of the subroutine at execution time. See &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적인 &lt;code&gt;ON OVERFLOW&lt;/code&gt; 및 &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; 절 (또는 &lt;code&gt;ON EXCEPTION&lt;/code&gt; 및 &lt;code&gt;NOT ON EXCEPTION&lt;/code&gt; - 상호 교환 가능)을 사용 하여 서브 루틴 을 &lt;code&gt;CALL&lt;/code&gt; 하려는 시도의 실패 또는 성공을 각각 감지하고 대응할 수 있습니다 . 이와 관련하여 실패는 실행시 서브 루틴의 오브젝트 코드를 찾거나로드 할 수없는 것으로 정의됩니다. 추가 정보는 &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf30a6121b5842e2cdc2748b76d4e0bf420509a0" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON OVERFLOW&lt;/code&gt;and&lt;code&gt;NOT ON OVERFLOW&lt;/code&gt;clauses may be used to detect and react to the occurrence or not, respectively, of an overflow condition. See &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW&lt;/a&gt;, for additional information.</source>
          <target state="translated">선택적 &lt;code&gt;ON OVERFLOW&lt;/code&gt; 및 &lt;code&gt;NOT ON OVERFLOW&lt;/code&gt; 절을 사용하여 오버 플로우 조건의 발생 여부를 각각 감지하고 이에 대응할 수 있습니다. 추가 정보는 &lt;a href=&quot;#ON-OVERFLOW-_002b-NOT-ON-OVERFLOW&quot;&gt;ON OVERFLOW + NOT ON OVERFLOW를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8197d232db0cee2ddd5e17330ee59b750756e66" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON SIZE ERROR&lt;/code&gt;and&lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being an &amp;lt;</source>
          <target state="translated">선택적인 &lt;code&gt;ON SIZE ERROR&lt;/code&gt; 및 &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; 절을 사용하여 계산 수행 시도의 실패 또는 성공을 각각 감지하고 이에 대응할 수 있습니다. 이 경우 실패는 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="0d9f33c091abeb67364dcd5091b9ee053d6a9555" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON SIZE ERROR&lt;/code&gt;and&lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined as being numeric truncation caused by an &amp;lt;</source>
          <target state="translated">선택적인 &lt;code&gt;ON SIZE ERROR&lt;/code&gt; 및 &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; 절을 사용하여 계산 수행 시도의 실패 또는 성공을 각각 감지하고 이에 대응할 수 있습니다. 이 경우 실패는 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="95e44c7f6a82315301193f1d03ef63d2cea06177" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ON SIZE ERROR&lt;/code&gt;and&lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt;clauses may be used to detect and react to the failure or success, respectively, of an attempt to perform a calculation. In this case, failure is defined either as having an &amp;lt;</source>
          <target state="translated">선택적인 &lt;code&gt;ON SIZE ERROR&lt;/code&gt; 및 &lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt; 절을 사용하여 계산 수행 시도의 실패 또는 성공을 각각 감지하고 이에 대응할 수 있습니다. 이 경우 실패는 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="efaa28ea69cd7254d50a1b2d4e45bae482243d98" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;REPLACING&lt;/code&gt;</source>
          <target state="translated">옵션 &lt;code&gt;REPLACING&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b418f8a8542303d5d15657366c72caa6252aec1c" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;RETURNING&lt;/code&gt;</source>
          <target state="translated">선택적인 &lt;code&gt;RETURNING&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c9bc4b3d6187450319b00ff3fb0918651f2d0aa" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;RETURNING&lt;/code&gt;clause provides the opportunity to return a numeric value to the operating system (a &quot;return code&quot;). The manner in which the return code may be interrogated by the operating system varies, but Windows can use&lt;code&gt;%ERRORLEVEL%&lt;/code&gt;to query the return code while Unix shells such as sh, bash and ksh can query the return code as&lt;code&gt;$?&lt;/code&gt; Other Unix shells may have different ways to access return code values.</source>
          <target state="translated">선택적 &lt;code&gt;RETURNING&lt;/code&gt; 절은 운영 체제에 숫자 값을 리턴 할 수있는 기회를 제공합니다 ( &quot;반환 코드&quot;). 운영 체제에서 리턴 코드를 조사하는 방법은 다양하지만 Windows는 &lt;code&gt;%ERRORLEVEL%&lt;/code&gt; 을 사용하여 리턴 코드를 쿼리 할 수 있지만 sh, bash 및 ksh와 같은 Unix 쉘은 리턴 코드를 &lt;code&gt;$?&lt;/code&gt; 다른 Unix 쉘은 리턴 코드 값에 액세스하는 다른 방법을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f622aea8916562080ee8a16271d6f8e5d208959a" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;ROUNDED&lt;/code&gt;(see &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;) clause available to each &amp;lt;</source>
          <target state="translated">옵션 &lt;code&gt;ROUNDED&lt;/code&gt; (참조 &lt;a href=&quot;#ROUNDED&quot;&gt;둥근&lt;/a&gt; 각을 사용할 절) &amp;lt;</target>
        </trans-unit>
        <trans-unit id="a7f82cc19824c82d80701c50dc59d204d3d74642" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;SIZE&lt;/code&gt;clause allows you to specify the number of bytes a&lt;code&gt;BY VALUE&lt;/code&gt;argument will occupy, with&lt;code&gt;SIZE DEFAULT&lt;/code&gt;specifying 4 bytes (this is the default if no&lt;code&gt;SIZE&lt;/code&gt;clause is used),&lt;code&gt;SIZE AUTO&lt;/code&gt;specifying the size of the argument in the calling program and&lt;code&gt;SIZE &amp;lt;&lt;i&gt;integer-1&lt;/i&gt;&amp;gt;&lt;/code&gt;specifying a specific byte count.</source>
          <target state="translated">선택적 &lt;code&gt;SIZE&lt;/code&gt; 절을 사용하면 &lt;code&gt;BY VALUE&lt;/code&gt; 인수가 차지하는 바이트 수를 지정할 수 있으며 &lt;code&gt;SIZE DEFAULT&lt;/code&gt; 는 4 바이트를 지정합니다 ( &lt;code&gt;SIZE&lt;/code&gt; 절이 사용 되지 않는 경우 기본값 임), &lt;code&gt;SIZE AUTO&lt;/code&gt; 는 호출 프로그램에서 인수의 크기를 지정합니다 및 &lt;code&gt;SIZE &amp;lt;&lt;i&gt;integer-1&lt;/i&gt;&amp;gt;&lt;/code&gt; 특정 바이트 수를 지정.</target>
        </trans-unit>
        <trans-unit id="1889b0ab1e49983e2d144d1d5ea040f355e2aba9" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;STEP&lt;/code&gt;</source>
          <target state="translated">선택적 &lt;code&gt;STEP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c16aba8833dc728c16b46a2c7c703a8220a54f1" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;SUPPRESS&lt;/code&gt;</source>
          <target state="translated">옵션 &lt;code&gt;SUPPRESS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="197e9c106ee8e4aed0227ce00d0cc12a16615a62" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;THROUGH&lt;/code&gt;clause allows a range of possible TRUE values to be specified.</source>
          <target state="translated">선택적 &lt;code&gt;THROUGH&lt;/code&gt; 절을 사용하면 가능한 TRUE 값의 범위를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abcb010cd5a4bbd5ebe410c21bb376d223f643ec" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;UNSIGNED&lt;/code&gt;keyword, legal only if&lt;code&gt;SIZE AUTO&lt;/code&gt;or&lt;code&gt;SIZE &amp;lt;&lt;i&gt;integer-1&lt;/i&gt;&amp;gt;&lt;/code&gt;are coded, will add the &quot;unsigned&quot; attribute to the argument&amp;rsquo;s specification in the C-language function header code generated for the subprogram. While not of any benefit when the calling program is a GnuCOBOL program, this can improve compatibility with a C-language calling program.</source>
          <target state="translated">&lt;code&gt;SIZE AUTO&lt;/code&gt; 또는 &lt;code&gt;SIZE &amp;lt;&lt;i&gt;integer-1&lt;/i&gt;&amp;gt;&lt;/code&gt; &lt;i&gt;integer-1&lt;/i&gt; &amp;gt; 가 코딩 된 경우에만 유효한 선택적 &lt;code&gt;UNSIGNED&lt;/code&gt; 키워드 는 서브 프로그램에 대해 생성 된 C 언어 함수 헤더 코드의 인수 스펙에 &quot;서명되지 않은&quot;속성을 추가합니다. 호출 프로그램이 GnuCOBOL 프로그램 인 경우 이점이 없지만 C 언어 호출 프로그램과의 호환성을 향상시킬 수 있습니다.&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="20fcb556fc364b0cdbb67c5adc295c101a0d531c" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;VARYING&lt;/code&gt;</source>
          <target state="translated">선택적인 &lt;code&gt;VARYING&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32abc412caa9b9d2e420e769bc790292e0ef52c8" translate="yes" xml:space="preserve">
          <source>The optional&lt;code&gt;WITH TEST&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WITH TEST&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="6d7992bd8c4595ffb85284a1b09410c2d09f9cc2" translate="yes" xml:space="preserve">
          <source>The order in which arguments are defined on the &lt;code&gt;USING&lt;/code&gt; clause must correspond to the order in which those arguments will be passed to the subprogram by the calling program.</source>
          <target state="translated">The order in which arguments are defined on the &lt;code&gt;USING&lt;/code&gt; clause must correspond to the order in which those arguments will be passed to the subprogram by the calling program.</target>
        </trans-unit>
        <trans-unit id="d4b5384934c5d86bb4aede74fc9128a13e5b5764" translate="yes" xml:space="preserve">
          <source>The order in which arguments are defined on the&lt;code&gt;USING&lt;/code&gt;clause must correspond to the order in which those arguments will be passed to the subprogram by the calling program.</source>
          <target state="translated">&lt;code&gt;USING&lt;/code&gt; 절 에 인수가 정의 된 순서는 호출 프로그램이 해당 인수가 서브 프로그램에 전달되는 순서와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="2c8af8941123c5ee66eb002403217c999e8eb6af" translate="yes" xml:space="preserve">
          <source>The original Micro Focus version of this routine is capable of providing a wide variety of functions. GnuCOBOL supports just three of them:</source>
          <target state="translated">The original Micro Focus version of this routine is capable of providing a wide variety of functions. GnuCOBOL supports just three of them:</target>
        </trans-unit>
        <trans-unit id="a84b5613e21742e1760581600b33bf9e8274a043" translate="yes" xml:space="preserve">
          <source>The original principal developers of GnuCOBOL were Keisuke Nishida and Roger While. Since then many others of the GnuCobol community are directly involved in it&amp;rsquo;s development at any one time.</source>
          <target state="translated">GnuCOBOL의 원래 주요 개발자는 Keishuke Nishida와 Roger While입니다. 그 이후로 GnuCobol 커뮤니티의 다른 많은 사람들이 언제든지 개발에 직접 참여하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b0a123ad7974c1ae5a4495b6b1a186f78aebdfd" translate="yes" xml:space="preserve">
          <source>The original principal developers of GnuCOBOL were Keisuke Nishida and Roger While. Since then, many members of the community have been involved in its development.</source>
          <target state="translated">The original principal developers of GnuCOBOL were Keisuke Nishida and Roger While. Since then, many members of the community have been involved in its development.</target>
        </trans-unit>
        <trans-unit id="02b159fdb46898c9ee580ca79107fa1848a7e763" translate="yes" xml:space="preserve">
          <source>The output of this program, on a Windows 7 system with a 32-bit MinGW build of GnuCOBOL is:</source>
          <target state="translated">GnuCOBOL의 32 비트 MinGW 빌드가있는 Windows 7 시스템에서이 프로그램의 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1694739868a365aee7f4d52e98a3445cf780db6c" translate="yes" xml:space="preserve">
          <source>The paragraphs shown above may be coded in any sequence.</source>
          <target state="translated">상기 나타낸 단락은 임의의 순서로 코딩 될 수있다.</target>
        </trans-unit>
        <trans-unit id="6441bb7de9da96157777dce203e9417d6b6b8289" translate="yes" xml:space="preserve">
          <source>The paragraphs within each section may only be coded in that section, but may be coded in any order.</source>
          <target state="translated">각 섹션 내의 단락은 해당 섹션에서만 코딩 될 수 있지만 임의의 순서로 코딩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae6509c20a2d710b3a1c60adb813b34b732826ed" translate="yes" xml:space="preserve">
          <source>The paragraphs within the sections may be coded in any order.</source>
          <target state="translated">섹션 내의 단락은 임의의 순서로 코딩 될 수있다.</target>
        </trans-unit>
        <trans-unit id="224652364c0feb28b5691c4df558e93bffb90133" translate="yes" xml:space="preserve">
          <source>The period character (&quot;.&quot;)</source>
          <target state="translated">마침표 ( &quot;.&quot;)</target>
        </trans-unit>
        <trans-unit id="ce4af1660f0389ee7b66a403a7d3d52f6ad21f57" translate="yes" xml:space="preserve">
          <source>The period character (&amp;lsquo;</source>
          <target state="translated">The period character (&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="9e89d5f24e9e53d0b0ff09e601ed28c148027432" translate="yes" xml:space="preserve">
          <source>The phrase &lt;code&gt;ORGANIZATION IS&lt;/code&gt; (and its internationalized alternative, &lt;code&gt;ORGANISATION IS&lt;/code&gt;) is optional to provide compatibility with those (few) COBOL implementations that consider &lt;code&gt;ORGANIZATION&lt;/code&gt; to be optional. Most COBOL implementations do require the word &lt;code&gt;ORGANIZATION&lt;/code&gt;, so it should be used in new programs.</source>
          <target state="translated">The phrase &lt;code&gt;ORGANIZATION IS&lt;/code&gt; (and its internationalized alternative, &lt;code&gt;ORGANISATION IS&lt;/code&gt; ) is optional to provide compatibility with those (few) COBOL implementations that consider &lt;code&gt;ORGANIZATION&lt;/code&gt; to be optional. Most COBOL implementations do require the word &lt;code&gt;ORGANIZATION&lt;/code&gt; , so it should be used in new programs.</target>
        </trans-unit>
        <trans-unit id="386736aaceca71be2aa298aed6aa508fc946446d" translate="yes" xml:space="preserve">
          <source>The phrase &lt;code&gt;ORGANIZATION IS&lt;/code&gt; (and its internationalized alternative, &lt;code&gt;ORGANISATION IS&lt;/code&gt;) is optional to provide compatibility with those (few) COBOL implementations that consider that word to be optional. Most COBOL implementations do require the word &lt;code&gt;ORGANIZATION&lt;/code&gt;, so it should be used in new programs.</source>
          <target state="translated">The phrase &lt;code&gt;ORGANIZATION IS&lt;/code&gt; (and its internationalized alternative, &lt;code&gt;ORGANISATION IS&lt;/code&gt; ) is optional to provide compatibility with those (few) COBOL implementations that consider that word to be optional. Most COBOL implementations do require the word &lt;code&gt;ORGANIZATION&lt;/code&gt; , so it should be used in new programs.</target>
        </trans-unit>
        <trans-unit id="37790684707b1ca629c69fcdd016453866229145" translate="yes" xml:space="preserve">
          <source>The phrase&lt;code&gt;ORGANIZATION IS&lt;/code&gt;(and it&amp;rsquo;s internationalized alternative,&lt;code&gt;ORGANISATION IS&lt;/code&gt; is optional to provide compatibility with those (few) COBOL implementations that consider that word to be optional. Most COBOL implementations do require the word&lt;code&gt;ORGANIZATION&lt;/code&gt; so it should be used in new programs.</source>
          <target state="translated">&lt;code&gt;ORGANIZATION IS&lt;/code&gt; 라는 문구 는 국제화 된 대안입니다. &lt;code&gt;ORGANISATION IS&lt;/code&gt; 는 해당 단어를 선택적인 것으로 간주하는 (몇 가지) COBOL 구현과의 호환성을 제공하기 위해 선택 사항입니다. 대부분의 COBOL 구현에는 &lt;code&gt;ORGANIZATION&lt;/code&gt; 이라는 단어가 필요 하므로 새 프로그램에서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3f4a77cdbc4c3e37eb033bdae11d69a1ded95e29" translate="yes" xml:space="preserve">
          <source>The phrase&lt;code&gt;ORGANIZATION IS&lt;/code&gt;(and it&amp;rsquo;s internationalized alternative,&lt;code&gt;ORGANISATION IS&lt;/code&gt; is optional to provide compatibility with those (few) COBOL implementations that consider&lt;code&gt;ORGANIZATION&lt;/code&gt;to be optional. Most COBOL implementations do require the word&lt;code&gt;ORGANIZATION&lt;/code&gt; so it should be used in new programs.</source>
          <target state="translated">&lt;code&gt;ORGANIZATION IS&lt;/code&gt; 라는 문구 는 국제화 대안입니다. &lt;code&gt;ORGANISATION IS&lt;/code&gt; 는 &lt;code&gt;ORGANIZATION&lt;/code&gt; 을 선택 사항으로 간주하는 (몇 가지) COBOL 구현과의 호환성을 제공하기 위해 선택 사항입니다. 대부분의 COBOL 구현에는 &lt;code&gt;ORGANIZATION&lt;/code&gt; 이라는 단어가 필요 하므로 새 프로그램에서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fdd215e383206dee48ac6d5c6b5bf63f427bde1b" translate="yes" xml:space="preserve">
          <source>The phrases &lt;code&gt;CONTROL IS&lt;/code&gt; and &lt;code&gt;CONTROLS ARE&lt;/code&gt; are interchangeable, as are the &lt;code&gt;PAGE LIMIT&lt;/code&gt; and &lt;code&gt;PAGE LIMITS&lt;/code&gt; phrases.</source>
          <target state="translated">The phrases &lt;code&gt;CONTROL IS&lt;/code&gt; and &lt;code&gt;CONTROLS ARE&lt;/code&gt; are interchangeable, as are the &lt;code&gt;PAGE LIMIT&lt;/code&gt; and &lt;code&gt;PAGE LIMITS&lt;/code&gt; phrases.</target>
        </trans-unit>
        <trans-unit id="111771a6addbd47ca9bced3c8d2880df6becd467" translate="yes" xml:space="preserve">
          <source>The phrases&lt;code&gt;CONTROL IS&lt;/code&gt;and&lt;code&gt;CONTROLS ARE&lt;/code&gt;are interchangeable, as are the&lt;code&gt;PAGE LIMIT&lt;/code&gt;and&lt;code&gt;PAGE LIMITS&lt;/code&gt;phrases.</source>
          <target state="translated">&lt;code&gt;CONTROL IS&lt;/code&gt; 및 &lt;code&gt;CONTROLS ARE&lt;/code&gt; 라는 문구 는 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 및 &lt;code&gt;PAGE LIMITS&lt;/code&gt; 문구 와 같이 서로 바꿔 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f997dbe85a41c34f7310b2c2c1b8a8e01815c7bf" translate="yes" xml:space="preserve">
          <source>The picture clause defines the class (numeric, alphabetic or alphanumeric), size and format of the data that may be contained by the data item being defined. Sometimes this role is assisted by the &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) clause, and in a few instances will be assumed entirely by that clause.</source>
          <target state="translated">The picture clause defines the class (numeric, alphabetic or alphanumeric), size and format of the data that may be contained by the data item being defined. Sometimes this role is assisted by the &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) clause, and in a few instances will be assumed entirely by that clause.</target>
        </trans-unit>
        <trans-unit id="6d5f0b3db282311402d103c58f3ba38960de0fb7" translate="yes" xml:space="preserve">
          <source>The picture clause defines the class (numeric, alphabetic or alphanumeric), size and format of the data that may be contained by the data item being defined. Sometimes this role is assisted by the&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) clause, and in a few instances will be assumed entirely by that clause.</source>
          <target state="translated">picture 절은 정의 된 데이터 항목에 포함될 수있는 데이터의 클래스 (숫자, 알파벳 또는 영숫자), 크기 및 형식을 정의합니다. 때로는이 역할은 도움을한다 &lt;code&gt;USAGE&lt;/code&gt; (참조 &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt; ) 절, 그리고 몇 가지 경우에 그 절에 의해 전적으로 가정한다.</target>
        </trans-unit>
        <trans-unit id="652aca95e633a0b84437fd3d2127068072a8d902" translate="yes" xml:space="preserve">
          <source>The predefined object reference EXCEPTION-OBJECT is set to null, and the last exception status is set to indicate no exception.</source>
          <target state="translated">The predefined object reference EXCEPTION-OBJECT is set to null, and the last exception status is set to indicate no exception.</target>
        </trans-unit>
        <trans-unit id="7b77ba9ef78a2ef917a9b042ad77914b54a25d16" translate="yes" xml:space="preserve">
          <source>The presence of a &lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt; clause in a data item&amp;rsquo;s definition alters the manner in which data is stored into the field from the default &amp;rsquo;left-justified, space filled&amp;rsquo; behaviour to &amp;rsquo;right justified, space filled&amp;rsquo;.</source>
          <target state="translated">The presence of a &lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt; clause in a data item&amp;rsquo;s definition alters the manner in which data is stored into the field from the default &amp;rsquo;left-justified, space filled&amp;rsquo; behaviour to &amp;rsquo;right justified, space filled&amp;rsquo;.</target>
        </trans-unit>
        <trans-unit id="30f6d3c3bdcd6e63ea7cf3bbe95daec25afcfa8e" translate="yes" xml:space="preserve">
          <source>The presence of a&lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt;clause in a data item&amp;rsquo;s definition alters the manner in which data is stored into the field from the default &amp;rsquo;left-justified, space filled&amp;rsquo; behaviour to &amp;rsquo;right justified, space filled&amp;rsquo;.</source>
          <target state="translated">a의 존재 &lt;code&gt;JUSTIFIED RIGHT&lt;/code&gt; 데이터 항목의 정의를 변경합니다 데이터가 기본에서 필드에 저장되는 방식에 절은 '왼쪽부터 공간을 채워' '오른쪽 정렬, 공간이 작성'으로 행동을.</target>
        </trans-unit>
        <trans-unit id="09183789591848a3fee4bb2498ca2e0bbadf90b5" translate="yes" xml:space="preserve">
          <source>The presence of an &lt;code&gt;UPON&lt;/code&gt; clause limits the &lt;code&gt;SUM&lt;/code&gt; clause to adding the specified numeric literal or identifier value into the sum counter only when a &lt;code&gt;GENERATE &lt;var&gt;identifier-9&lt;/var&gt;&lt;/code&gt; statement is executed.</source>
          <target state="translated">The presence of an &lt;code&gt;UPON&lt;/code&gt; clause limits the &lt;code&gt;SUM&lt;/code&gt; clause to adding the specified numeric literal or identifier value into the sum counter only when a &lt;code&gt;GENERATE &lt;var&gt;identifier-9&lt;/var&gt;&lt;/code&gt; statement is executed.</target>
        </trans-unit>
        <trans-unit id="7759a29cac575c16002a4b8b79476c259f1d7be1" translate="yes" xml:space="preserve">
          <source>The presence of an&lt;code&gt;UPON&lt;/code&gt;clause limits the&lt;code&gt;SUM&lt;/code&gt;clause to adding the specified numeric literal or identifier value into the sum counter only when a&lt;code&gt;GENERATE &amp;lt;&lt;i&gt;identifier-9&lt;/i&gt;&amp;gt;&lt;/code&gt;statement is executed.</source>
          <target state="translated">의 존재 &lt;code&gt;UPON&lt;/code&gt; 절 한계 &lt;code&gt;SUM&lt;/code&gt; A는 오직 합 카운터로 지정된 문자 나 숫자 식별자 값을 추가로 절 &lt;code&gt;GENERATE &amp;lt;&lt;i&gt;identifier-9&lt;/i&gt;&amp;gt;&lt;/code&gt; 문이 실행된다.</target>
        </trans-unit>
        <trans-unit id="4617faf32a19134b7f660bf09693fcbebe17285a" translate="yes" xml:space="preserve">
          <source>The presence or absence of this clause influences the behaviour of the &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) statement as well as the &lt;code&gt;FROM&lt;/code&gt; (see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;), &lt;code&gt;SOURCE&lt;/code&gt; (see &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE&lt;/a&gt;) and &lt;code&gt;USING&lt;/code&gt; (see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) data item description clauses.</source>
          <target state="translated">The presence or absence of this clause influences the behaviour of the &lt;code&gt;MOVE&lt;/code&gt; (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) statement as well as the &lt;code&gt;FROM&lt;/code&gt; (see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;), &lt;code&gt;SOURCE&lt;/code&gt; (see &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE&lt;/a&gt;) and &lt;code&gt;USING&lt;/code&gt; (see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) data item description clauses.</target>
        </trans-unit>
        <trans-unit id="3926f249478e4d76a63ba3b0dcf3b45dc44606bc" translate="yes" xml:space="preserve">
          <source>The presence or absence of this clause influences the behaviour of the&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) statement as well as the&lt;code&gt;FROM&lt;/code&gt;(see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;),&lt;code&gt;SOURCE&lt;/code&gt;(see &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE&lt;/a&gt;) and&lt;code&gt;USING&lt;/code&gt;(see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) data item description clauses.</source>
          <target state="translated">이 항목의 존재 또는 부재는 상기의 동작에 영향 &lt;code&gt;MOVE&lt;/code&gt; (참조 &lt;a href=&quot;#MOVE&quot;&gt;이동&lt;/a&gt; ) 문뿐만 아니라를 &lt;code&gt;FROM&lt;/code&gt; (참조 : &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt; ), &lt;code&gt;SOURCE&lt;/code&gt; (참조 &lt;a href=&quot;#SOURCE&quot;&gt;SOURCE를&lt;/a&gt; ) 및 &lt;code&gt;USING&lt;/code&gt; (참조 &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt; ) 데이터 항목 설명 조항.</target>
        </trans-unit>
        <trans-unit id="8e1032b0fdee633fd64674f0136a85102da9d176" translate="yes" xml:space="preserve">
          <source>The pressing of the &lt;code&gt;Esc&lt;/code&gt; key if</source>
          <target state="translated">The pressing of the &lt;code&gt;Esc&lt;/code&gt; key if</target>
        </trans-unit>
        <trans-unit id="21d59a00798ae176c41e3bce7815bc4ec8e5715f" translate="yes" xml:space="preserve">
          <source>The pressing of the &lt;code&gt;PgUp&lt;/code&gt; or &lt;code&gt;PgDn&lt;/code&gt; keys, if the   &lt;code&gt;COB_SCREEN_EXCEPTIONS&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) is set to any non-blank value.</source>
          <target state="translated">The pressing of the &lt;code&gt;PgUp&lt;/code&gt; or &lt;code&gt;PgDn&lt;/code&gt; keys, if the &lt;code&gt;COB_SCREEN_EXCEPTIONS&lt;/code&gt; run-time environment variable (see &lt;a href=&quot;#Run-Time-Environment-Variables&quot;&gt;Run Time Environment Variables&lt;/a&gt;) is set to any non-blank value.</target>
        </trans-unit>
        <trans-unit id="37483d7cc36bc9a17553c456b38ba275c397b616" translate="yes" xml:space="preserve">
          <source>The pressing of the &lt;code&gt;Up-arrow&lt;/code&gt;, &lt;code&gt;Down-Arrow&lt;/code&gt; or &lt;code&gt;PrtSc&lt;/code&gt; (Print Screen) keys. These keys are not detectable on Windows systems, however.</source>
          <target state="translated">The pressing of the &lt;code&gt;Up-arrow&lt;/code&gt; , &lt;code&gt;Down-Arrow&lt;/code&gt; or &lt;code&gt;PrtSc&lt;/code&gt; (Print Screen) keys. These keys are not detectable on Windows systems, however.</target>
        </trans-unit>
        <trans-unit id="419c7e80678fc23ea8a2263071299f121d0fdb79" translate="yes" xml:space="preserve">
          <source>The pressing of the Esc key if</source>
          <target state="translated">Esc 키를 누르면</target>
        </trans-unit>
        <trans-unit id="3a8f3c51516a7e138dbbedf893df1f039e11725c" translate="yes" xml:space="preserve">
          <source>The pressing of the PgUp or PgDn keys, if the</source>
          <target state="translated">PgUp 또는 PgDn 키를 누르면</target>
        </trans-unit>
        <trans-unit id="0b279064885231cc6d55b597cc63c453da9c5871" translate="yes" xml:space="preserve">
          <source>The pressing of the Up-arrow, Down-Arrow or PrtSc (Print Screen) keys. These keys are not detectable on Windows systems, however.</source>
          <target state="translated">위쪽 화살표, 아래쪽 화살표 또는 PrtSc (인쇄 화면) 키를 누릅니다. 그러나 Windows 시스템에서는 이러한 키를 감지 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="59c6aea36d9e718f0fc4d341bc885f8ecfc7b796" translate="yes" xml:space="preserve">
          <source>The primary entry-point for any subroutine is always the first executable statement following any &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) in the procedure division. The name of that entry-point (the name that will be called) is the subroutine&amp;rsquo;s &lt;code&gt;PROGRAM-ID&lt;/code&gt; (see &lt;a href=&quot;#IDENTIFICATION-DIVISION&quot;&gt;IDENTIFICATION DIVISION&lt;/a&gt;).</source>
          <target state="translated">The primary entry-point for any subroutine is always the first executable statement following any &lt;code&gt;DECLARATIVES&lt;/code&gt; (see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) in the procedure division. The name of that entry-point (the name that will be called) is the subroutine&amp;rsquo;s &lt;code&gt;PROGRAM-ID&lt;/code&gt; (see &lt;a href=&quot;#IDENTIFICATION-DIVISION&quot;&gt;IDENTIFICATION DIVISION&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="cb26c177bf377af02ce0783e171e18222be31525" translate="yes" xml:space="preserve">
          <source>The primary entry-point for any subroutine is always the first executable statement following any&lt;code&gt;DECLARATIVES&lt;/code&gt;(see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) in the procedure division. The name of that entry-point (the name that will be called) is the subroutine&amp;rsquo;s&lt;code&gt;PROGRAM-ID&lt;/code&gt;(see &lt;a href=&quot;#IDENTIFICATION-DIVISION&quot;&gt;IDENTIFICATION DIVISION&lt;/a&gt;).</source>
          <target state="translated">어떤 서브 루틴의 주 진입 점은 항상 다음 첫 번째 실행 문입니다 &lt;code&gt;DECLARATIVES&lt;/code&gt; (참조 &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES을&lt;/a&gt; 프로 시저 부문). 해당 진입 점의 이름 (호출 될 이름)은 서브 루틴의 &lt;code&gt;PROGRAM-ID&lt;/code&gt; 입니다 ( &lt;a href=&quot;#IDENTIFICATION-DIVISION&quot;&gt;식별&lt;/a&gt; 섹션 참조 ).</target>
        </trans-unit>
        <trans-unit id="10b343ad9eb5794326195c4b0531320c93f6ca13" translate="yes" xml:space="preserve">
          <source>The problem with this code is that indentation &amp;mdash; so critical to improving the human-readability of a program &amp;mdash; can provide an erroneous view of the logical flow. An &lt;code&gt;ELSE&lt;/code&gt; is always associated with the most-recently encountered &lt;code&gt;IF&lt;/code&gt;; this means the emphasized &lt;code&gt;ELSE&lt;/code&gt; will be associated with the &lt;code&gt;IF B = 1&lt;/code&gt; statement, not the &lt;code&gt;IF A = 1&lt;/code&gt; statement as the indentation would appear to imply.</source>
          <target state="translated">The problem with this code is that indentation &amp;mdash; so critical to improving the human-readability of a program &amp;mdash; can provide an erroneous view of the logical flow. An &lt;code&gt;ELSE&lt;/code&gt; is always associated with the most-recently encountered &lt;code&gt;IF&lt;/code&gt; ; this means the emphasized &lt;code&gt;ELSE&lt;/code&gt; will be associated with the &lt;code&gt;IF B = 1&lt;/code&gt; statement, not the &lt;code&gt;IF A = 1&lt;/code&gt; statement as the indentation would appear to imply.</target>
        </trans-unit>
        <trans-unit id="a5a7d8b4a66ca614cacaf247e403ec7adf08aa11" translate="yes" xml:space="preserve">
          <source>The problem with this code is that indentation &amp;mdash; so critical to improving the human-readability of a program &amp;mdash; can provide an erroneous view of the logical flow. An&lt;code&gt;ELSE&lt;/code&gt;is always associated with the most-recently encountered&lt;code&gt;IF&lt;/code&gt; this means the emphasized&lt;code&gt;ELSE&lt;/code&gt;will be associated with the&lt;code&gt;IF B = 1&lt;/code&gt;statement, not the&lt;code&gt;IF A = 1&lt;/code&gt;statement as the indentation would appear to imply.</source>
          <target state="translated">이 코드의 문제점은 프로그램의 인간 가독성을 향상시키는 데 중요한 들여 쓰기가 논리적 흐름을 잘못 볼 수 있다는 것입니다. &lt;code&gt;ELSE&lt;/code&gt; 는 항상 가장 최근에 발생과 관련된 &lt;code&gt;IF&lt;/code&gt; 강조한이 수단 &lt;code&gt;ELSE&lt;/code&gt; 가 와 연결됩니다 &lt;code&gt;IF B = 1&lt;/code&gt; 문이 아닌 &lt;code&gt;IF A = 1&lt;/code&gt; 들여 쓰기와 같은 문장이 의미하는 것처럼 보일 것입니다.</target>
        </trans-unit>
        <trans-unit id="f187f4b13651da4e01bfc26fb60d69576024e1fb" translate="yes" xml:space="preserve">
          <source>The procedure division is the only one of the COBOL divisions that allows you to create your own sections and paragraphs. These are collectively referred to as  &lt;em&gt;Procedures&lt;/em&gt;, and the names you create for those sections and paragraphs are called  &lt;em&gt;Procedure Names&lt;/em&gt;.</source>
          <target state="translated">The procedure division is the only one of the COBOL divisions that allows you to create your own sections and paragraphs. These are collectively referred to as &lt;em&gt;Procedures&lt;/em&gt;, and the names you create for those sections and paragraphs are called &lt;em&gt;Procedure Names&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="100bb7b3b335cb2b8bb3028944fdec27b8082198" translate="yes" xml:space="preserve">
          <source>The procedure division is the only one of the COBOL divisions that allows you to create your own sections and paragraphs. These are collectively referred to as &amp;rsquo;</source>
          <target state="translated">프로 시저 부서는 COBOL 부서 중 유일하게 자신 만의 섹션과 단락을 만들 수 있습니다. 이들은 총칭하여 '</target>
        </trans-unit>
        <trans-unit id="c25b61a30c2d4f4a178cd9621defc96003ff4e85" translate="yes" xml:space="preserve">
          <source>The process of establishing a unique reference to a data item whose name is duplicated in a program. This takes the form of using the duplicated data name and the name of any of its parent data items, connected by &lt;code&gt;OF&lt;/code&gt; or &lt;code&gt;IN&lt;/code&gt; such that the combination of those two data names is unique within the program.</source>
          <target state="translated">The process of establishing a unique reference to a data item whose name is duplicated in a program. This takes the form of using the duplicated data name and the name of any of its parent data items, connected by &lt;code&gt;OF&lt;/code&gt; or &lt;code&gt;IN&lt;/code&gt; such that the combination of those two data names is unique within the program.</target>
        </trans-unit>
        <trans-unit id="af4acc24cd4a35577d17e9fa02c8a07a5278c699" translate="yes" xml:space="preserve">
          <source>The process of establishing a unique reference to a data item whose name is duplicated in a program. This takes the form of using the duplicated data name and the name of any of its parent data items, connected by&lt;code&gt;OF&lt;/code&gt;or&lt;code&gt;IN&lt;/code&gt;such that the combination of those two data names is unique within the program.</source>
          <target state="translated">프로그램에서 이름이 중복 된 데이터 항목에 대한 고유 한 참조를 설정하는 프로세스입니다. 이는 복제 된 데이터 이름과 해당 상위 데이터 항목의 이름을 사용 하거나 &lt;code&gt;OF&lt;/code&gt; 또는 &lt;code&gt;IN&lt;/code&gt; 으로 연결하여 두 데이터 이름의 조합이 프로그램 내에서 고유하도록 사용합니다.</target>
        </trans-unit>
        <trans-unit id="bdac684895e583ea6dd87e5c11033fa0ab6c30ba" translate="yes" xml:space="preserve">
          <source>The process of locating dynamically-loadable modules is case-sensitive on UNIX systems; &lt;code&gt;CALL &quot;dynsub&quot;&lt;/code&gt; and &lt;code&gt;CALL &quot;DYNSUB&quot;&lt;/code&gt; will both fail to locate the &lt;code&gt;DynSub.so&lt;/code&gt; library on a UNIX system.</source>
          <target state="translated">The process of locating dynamically-loadable modules is case-sensitive on UNIX systems; &lt;code&gt;CALL &quot;dynsub&quot;&lt;/code&gt; and &lt;code&gt;CALL &quot;DYNSUB&quot;&lt;/code&gt; will both fail to locate the &lt;code&gt;DynSub.so&lt;/code&gt; library on a UNIX system.</target>
        </trans-unit>
        <trans-unit id="495a8473f4fb5381a2a17896383def5129c21a57" translate="yes" xml:space="preserve">
          <source>The process of locating dynamically-loadable modules is case-sensitive on UNIX systems;&lt;code&gt;CALL &quot;dynsub&quot;&lt;/code&gt;and&lt;code&gt;CALL &quot;DYNSUB&quot;&lt;/code&gt;will both fail to locate the&lt;code&gt;DynSub.so&lt;/code&gt;library on a UNIX system.</source>
          <target state="translated">동적으로로드 가능한 모듈을 찾는 프로세스는 UNIX 시스템에서 대소 문자를 구분합니다. &lt;code&gt;CALL &quot;dynsub&quot;&lt;/code&gt; 및 &lt;code&gt;CALL &quot;DYNSUB&quot;&lt;/code&gt; 은 UNIX 시스템 에서 &lt;code&gt;DynSub.so&lt;/code&gt; 라이브러리 를 찾지 못합니다 .</target>
        </trans-unit>
        <trans-unit id="93bc07b76ff9b112a73709a844fd29b42fc49ecb" translate="yes" xml:space="preserve">
          <source>The product of &amp;lt;</source>
          <target state="translated">&amp;lt;의 제품</target>
        </trans-unit>
        <trans-unit id="8d8705bfc034e619e9a6b4b358f104575e748acf" translate="yes" xml:space="preserve">
          <source>The product of &lt;var&gt;identifier-1&lt;/var&gt; or &lt;var&gt;literal-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; or &lt;var&gt;literal-2&lt;/var&gt; will be computed and moved to each of the &lt;var&gt;identifier-3&lt;/var&gt; data items, replacing their old contents.</source>
          <target state="translated">The product of &lt;var&gt;identifier-1&lt;/var&gt; or &lt;var&gt;literal-1&lt;/var&gt; and &lt;var&gt;identifier-2&lt;/var&gt; or &lt;var&gt;literal-2&lt;/var&gt; will be computed and moved to each of the &lt;var&gt;identifier-3&lt;/var&gt; data items, replacing their old contents.</target>
        </trans-unit>
        <trans-unit id="fdad46b1f877ffa27a3f2ed06ac21a944679549c" translate="yes" xml:space="preserve">
          <source>The product of &lt;var&gt;identifier-1&lt;/var&gt; or &lt;var&gt;literal-1&lt;/var&gt; and each &lt;var&gt;identifier-2&lt;/var&gt;, in turn, will be computed and moved to each of the &lt;var&gt;identifier-2&lt;/var&gt; data items, replacing the prior contents.</source>
          <target state="translated">The product of &lt;var&gt;identifier-1&lt;/var&gt; or &lt;var&gt;literal-1&lt;/var&gt; and each &lt;var&gt;identifier-2&lt;/var&gt; , in turn, will be computed and moved to each of the &lt;var&gt;identifier-2&lt;/var&gt; data items, replacing the prior contents.</target>
        </trans-unit>
        <trans-unit id="32e79fb7877d1d089c830694921f2394ac048f93" translate="yes" xml:space="preserve">
          <source>The production of a one-time notice at the end of the last page of a report (report footing).</source>
          <target state="translated">보고서의 마지막 페이지 끝에서 일회성 통지 생성 (보고서 기초).</target>
        </trans-unit>
        <trans-unit id="6244841ef1e95be60d860ca25aa08e7c79db30e5" translate="yes" xml:space="preserve">
          <source>The production of zero or more footer lines at the bottom of every page of the report (page footing).</source>
          <target state="translated">보고서의 모든 페이지 하단에 0 개 이상의 바닥 글 라인이 생성됩니다 (페이지 바닥 글).</target>
        </trans-unit>
        <trans-unit id="c5f8145638232293381f208796904993bd3d3989" translate="yes" xml:space="preserve">
          <source>The production of zero or more header lines at the top of every page of the report (page heading).</source>
          <target state="translated">보고서의 모든 페이지 상단에 0 개 이상의 헤더 행이 생성됩니다 (페이지 머리글).</target>
        </trans-unit>
        <trans-unit id="54e1691be6ee2d56e82d14d8cd2843a9f8b679a9" translate="yes" xml:space="preserve">
          <source>The program calling &lt;code&gt;C$CALLEDBY&lt;/code&gt; was indeed called by another program, and that program&amp;rsquo;s name has been saved in &lt;var&gt;prog-name-area&lt;/var&gt;.</source>
          <target state="translated">The program calling &lt;code&gt;C$CALLEDBY&lt;/code&gt; was indeed called by another program, and that program&amp;rsquo;s name has been saved in &lt;var&gt;prog-name-area&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="e470dcb8ca0fe0a8c4c8245fcaf4a9b0b4e83fe1" translate="yes" xml:space="preserve">
          <source>The program calling &lt;code&gt;C$CALLEDBY&lt;/code&gt; was not called by any other program (in other words, it is a main program). The &lt;var&gt;prog-name-area&lt;/var&gt; contents will be set entirely to spaces.</source>
          <target state="translated">The program calling &lt;code&gt;C$CALLEDBY&lt;/code&gt; was not called by any other program (in other words, it is a main program). The &lt;var&gt;prog-name-area&lt;/var&gt; contents will be set entirely to spaces.</target>
        </trans-unit>
        <trans-unit id="c0bee036d11ce86380c56bf92be82951c3d3ab4a" translate="yes" xml:space="preserve">
          <source>The program calling&lt;code&gt;C$CALLEDBY&lt;/code&gt;was indeed called by another program, and that program&amp;rsquo;s name has been saved in &amp;lt;</source>
          <target state="translated">&lt;code&gt;C$CALLEDBY&lt;/code&gt; 호출하는 프로그램 은 실제로 다른 프로그램에 의해 호출되었으며 해당 프로그램의 이름은 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="d73c62bfdb19e55f41134316f3617332193d54f8" translate="yes" xml:space="preserve">
          <source>The program calling&lt;code&gt;C$CALLEDBY&lt;/code&gt;was not called by any other program (in other words, it is a main program). The &amp;lt;</source>
          <target state="translated">&lt;code&gt;C$CALLEDBY&lt;/code&gt; 호출하는 프로그램 은 다른 프로그램에 의해 호출되지 않았습니다 (즉, 기본 프로그램입니다). &amp;lt;</target>
        </trans-unit>
        <trans-unit id="5b4ce93630179501aa6edd0a0ec407e07a295615" translate="yes" xml:space="preserve">
          <source>The program must be compiled with the</source>
          <target state="translated">The program must be compiled with the</target>
        </trans-unit>
        <trans-unit id="6c227c7e0fb5eb1a00760a179612f1c3046a2857" translate="yes" xml:space="preserve">
          <source>The program must be compiled with the&lt;code&gt;-debug&lt;/code&gt;switch</source>
          <target state="translated">프로그램은 &lt;code&gt;-debug&lt;/code&gt; 스위치 로 컴파일해야합니다</target>
        </trans-unit>
        <trans-unit id="c24e3351695e5be05a25b137d0fe97bb59e648fc" translate="yes" xml:space="preserve">
          <source>The program name is called as a included element and not dynamically which is the normal default.</source>
          <target state="translated">The program name is called as a included element and not dynamically which is the normal default.</target>
        </trans-unit>
        <trans-unit id="5b8bc1ee79086ae563b9767691dd8f577969831c" translate="yes" xml:space="preserve">
          <source>The program name is treated as a COBOL word that maps to the externalised name program to be called, cancelled or referenced in the program-address-identifier, applying the same mapping rules as for a program name for which no &lt;code&gt;AS&lt;/code&gt; phrase is specified. (The is the default.)</source>
          <target state="translated">The program name is treated as a COBOL word that maps to the externalised name program to be called, cancelled or referenced in the program-address-identifier, applying the same mapping rules as for a program name for which no &lt;code&gt;AS&lt;/code&gt; phrase is specified. (The is the default.)</target>
        </trans-unit>
        <trans-unit id="546b73a56b0bdcb464d6de90011c7883b79896af" translate="yes" xml:space="preserve">
          <source>The program name is treated as an external reference.</source>
          <target state="translated">The program name is treated as an external reference.</target>
        </trans-unit>
        <trans-unit id="c75a512bf9845771f752e66e3743f9f62a3b3be2" translate="yes" xml:space="preserve">
          <source>The program produces this output when executed:</source>
          <target state="translated">프로그램은 실행될 때이 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="84c229198c1d576b5129c7e3d23a3ea5fb328435" translate="yes" xml:space="preserve">
          <source>The purpose of the &lt;code&gt;AT&lt;/code&gt; clause is to define where on the screen &lt;var&gt;identifier-1&lt;/var&gt; should be displayed. See &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;, for additional information.</source>
          <target state="translated">The purpose of the &lt;code&gt;AT&lt;/code&gt; clause is to define where on the screen &lt;var&gt;identifier-1&lt;/var&gt; should be displayed. See &lt;a href=&quot;#ACCEPT-screen_002ddata_002ditem&quot;&gt;ACCEPT screen-data-item&lt;/a&gt;, for additional information.</target>
        </trans-unit>
        <trans-unit id="32db1c98b82478d3c1815c8d0557ff7ba3d8ea31" translate="yes" xml:space="preserve">
          <source>The purpose of the &lt;code&gt;WITH&lt;/code&gt; clause is to define the visual attributes that should be applied to &lt;var&gt;identifier-1&lt;/var&gt; when it is displayed on the screen as well as other presentation-control characteristics.</source>
          <target state="translated">The purpose of the &lt;code&gt;WITH&lt;/code&gt; clause is to define the visual attributes that should be applied to &lt;var&gt;identifier-1&lt;/var&gt; when it is displayed on the screen as well as other presentation-control characteristics.</target>
        </trans-unit>
        <trans-unit id="3b8e48f46c8e9f7bc2aad53bc5227750dc3730f2" translate="yes" xml:space="preserve">
          <source>The purpose of the optional &amp;lt;</source>
          <target state="translated">선택 사항의 목적 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="6676b60fb94e2293997a5ec9c2de5cc7b71d06c6" translate="yes" xml:space="preserve">
          <source>The purpose of the optional &lt;var&gt;seed&lt;/var&gt; argument, is to initialize the chain of pseudo-random numbers that will be returned by the function. Not only will calls to this function using the same &lt;var&gt;seed&lt;/var&gt; value return the same pseudo-random number, but so will all subsequent executions of the function without a &lt;var&gt;seed&lt;/var&gt;. This is actually a good thing when you are testing your program because you can rely on always receiving the same sequence of &amp;ldquo;random&amp;rdquo; numbers if you always start using the same &lt;var&gt;seed&lt;/var&gt;.</source>
          <target state="translated">The purpose of the optional &lt;var&gt;seed&lt;/var&gt; argument, is to initialize the chain of pseudo-random numbers that will be returned by the function. Not only will calls to this function using the same &lt;var&gt;seed&lt;/var&gt; value return the same pseudo-random number, but so will all subsequent executions of the function without a &lt;var&gt;seed&lt;/var&gt; . This is actually a good thing when you are testing your program because you can rely on always receiving the same sequence of &amp;ldquo;random&amp;rdquo; numbers if you always start using the same &lt;var&gt;seed&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9c887a9b65dd9a27e6702eb9a04533e2ed9dfabf" translate="yes" xml:space="preserve">
          <source>The purpose of the&lt;code&gt;AT&lt;/code&gt;clause is to define where on the screen &amp;lt;</source>
          <target state="translated">&lt;code&gt;AT&lt;/code&gt; 절의 목적은 화면에서 &amp;lt;</target>
        </trans-unit>
        <trans-unit id="922f2475747859d1fad2cff6f58275b168f906b2" translate="yes" xml:space="preserve">
          <source>The purpose of the&lt;code&gt;WITH&lt;/code&gt;clause is to define the visual attributes that should be applied to &amp;lt;</source>
          <target state="translated">&lt;code&gt;WITH&lt;/code&gt; 절의 목적은 &amp;lt;에 적용되어야하는 시각적 속성을 정의하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9c77ede2f91868b7d5a837e35779b4ef7e7af178" translate="yes" xml:space="preserve">
          <source>The reality is, however, that good programmers have been practising code re-usability for more than a half-century. Up until recently, COBOL programmers have had some of the best code re-usability tools available &amp;mdash; they&amp;rsquo;ve been doing it with copybooks and subprograms rather than classes, methods and attributes but the net results have been similar. With the COBOL2002 and the COBOL 2014 standards, the COBOL programming language has become just as &amp;ldquo;object-oriented&amp;rdquo; as the &amp;ldquo;modern&amp;rdquo; languages, while preserving the ability to support, modify, compile and execute &amp;ldquo;legacy&amp;rdquo; COBOL programs as well.</source>
          <target state="translated">The reality is, however, that good programmers have been practising code re-usability for more than a half-century. Up until recently, COBOL programmers have had some of the best code re-usability tools available &amp;mdash; they&amp;rsquo;ve been doing it with copybooks and subprograms rather than classes, methods and attributes but the net results have been similar. With the COBOL2002 and the COBOL 2014 standards, the COBOL programming language has become just as &amp;ldquo;object-oriented&amp;rdquo; as the &amp;ldquo;modern&amp;rdquo; languages, while preserving the ability to support, modify, compile and execute &amp;ldquo;legacy&amp;rdquo; COBOL programs as well.</target>
        </trans-unit>
        <trans-unit id="9358ace0fef34473647189b650a8bebd52429fc0" translate="yes" xml:space="preserve">
          <source>The reality is, however, that good programmers have been practising code re-usability for more than a half-century. Up until recently, COBOL programmers have had some of the best code re-usability tools available &amp;mdash; they&amp;rsquo;ve been doing it with copybooks and subprograms rather than classes, methods and attributes but the net results have been similar. With the COBOL2002 standard and proposed COBOL 20XX standard, the COBOL programming language has become just as &quot;object-oriented&quot; as the &quot;modern&quot; languages, while preserving the ability to support, modify, compile and execute &quot;legacy&quot; COBOL programs as well.</source>
          <target state="translated">그러나 실제로 좋은 프로그래머는 반세기 이상 동안 코드 재사용 성을 실천해 왔습니다. 최근까지 COBOL 프로그래머는 클래스, 메소드 및 속성이 아닌 카피 북 및 서브 프로그램을 사용하여 최상의 코드 재사용 도구를 사용할 수 있었지만 실제 결과는 비슷했습니다. COBOL2002 표준 및 제안 된 COBOL 20XX 표준을 통해 COBOL 프로그래밍 언어는 &quot;현대&quot;언어와 마찬가지로 &quot;개체 지향&quot;이되었으며 &quot;레거시&quot;COBOL 프로그램도 지원, 수정, 컴파일 및 실행하는 기능을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="20b5f3c35cde06c82d6d4b155e793427d042660d" translate="yes" xml:space="preserve">
          <source>The record descriptions of &amp;lt;</source>
          <target state="translated">&amp;lt;의 레코드 설명</target>
        </trans-unit>
        <trans-unit id="e50e25c0239b47d5acd5528913cab5c9d386344e" translate="yes" xml:space="preserve">
          <source>The record descriptions of &lt;var&gt;file-name-1&lt;/var&gt;, &lt;var&gt;file-name-2&lt;/var&gt;, &lt;var&gt;file-name-3&lt;/var&gt; (if any) and &lt;var&gt;sort-file-1&lt;/var&gt; are assumed to be identical in layout and size. While the actual data names used for fields in these files&amp;rsquo; records may differ, the structure of records, &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) of fields, &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of fields, size of fields and location of fields within the records should match field-by-field across all files, at least as far as the &lt;code&gt;KEY&lt;/code&gt; fields are concerned.</source>
          <target state="translated">The record descriptions of &lt;var&gt;file-name-1&lt;/var&gt; , &lt;var&gt;file-name-2&lt;/var&gt; , &lt;var&gt;file-name-3&lt;/var&gt; (if any) and &lt;var&gt;sort-file-1&lt;/var&gt; are assumed to be identical in layout and size. While the actual data names used for fields in these files&amp;rsquo; records may differ, the structure of records, &lt;code&gt;PICTURE&lt;/code&gt; (see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) of fields, &lt;code&gt;USAGE&lt;/code&gt; (see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;) of fields, size of fields and location of fields within the records should match field-by-field across all files, at least as far as the &lt;code&gt;KEY&lt;/code&gt; fields are concerned.</target>
        </trans-unit>
        <trans-unit id="5ebe8b25dc68543c716fa2320465129441b2fd61" translate="yes" xml:space="preserve">
          <source>The record to be rewritten will be the one retrieved by the most-recently executed &lt;code&gt;READ&lt;/code&gt; (see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;) of the file.</source>
          <target state="translated">The record to be rewritten will be the one retrieved by the most-recently executed &lt;code&gt;READ&lt;/code&gt; (see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;) of the file.</target>
        </trans-unit>
        <trans-unit id="1959c22fe8aea614525d775dc5927718de11032b" translate="yes" xml:space="preserve">
          <source>The record to be rewritten will be the one retrieved by the most-recently executed&lt;code&gt;READ&lt;/code&gt;(see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;) of the file.</source>
          <target state="translated">다시 쓸 레코드 는 파일 의 가장 최근에 실행 된 &lt;code&gt;READ&lt;/code&gt; ( &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt; 참조 )에 의해 검색된 레코드 입니다.</target>
        </trans-unit>
        <trans-unit id="a911596fe6ebefda1ccece1a597c9f874c2dfd69" translate="yes" xml:space="preserve">
          <source>The record will not be locked. This is the default for all statements.</source>
          <target state="translated">The record will not be locked. This is the default for all statements.</target>
        </trans-unit>
        <trans-unit id="a84e0b0325650970adbc6e2a74d0a6928e39687c" translate="yes" xml:space="preserve">
          <source>The record will not be locked. This is the default locking option in effect for all statements.</source>
          <target state="translated">레코드가 잠기지 않습니다. 모든 명령문에 적용되는 기본 잠금 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="8bb9907b73a402b4982b0a3f28668890069dbe79" translate="yes" xml:space="preserve">
          <source>The remaining &lt;code&gt;PAGE LIMIT&lt;/code&gt; values can be established as required by your report(s).</source>
          <target state="translated">The remaining &lt;code&gt;PAGE LIMIT&lt;/code&gt; values can be established as required by your report(s).</target>
        </trans-unit>
        <trans-unit id="5ac26e3e32cbdca4bcf385042743711ca74d9a5b" translate="yes" xml:space="preserve">
          <source>The remaining options of the &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDF directive provide equivalent functionality to the &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt; directives, as follows:</source>
          <target state="translated">The remaining options of the &lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDF directive provide equivalent functionality to the &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt; directives, as follows:</target>
        </trans-unit>
        <trans-unit id="894c0d927441d2bb164fa87ee9e6455aab7ca5fe" translate="yes" xml:space="preserve">
          <source>The remaining options of the&lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt;CDF directive provide equivalent functionality to the&lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt;and&lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt;directives, as follows:</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SET&lt;/code&gt; CDF 지시문 의 나머지 옵션은 다음과 같이 &lt;code&gt;&amp;gt;&amp;gt;DEFINE&lt;/code&gt; 및 &lt;code&gt;&amp;gt;&amp;gt;SOURCE&lt;/code&gt; 지시문 과 동등한 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="fa1e77e0d6d52636c5f3c767f98f2943becb9439" translate="yes" xml:space="preserve">
          <source>The remaining structures will be one or more index components. An index component is a data structure that (somehow) enables the contents of a field, called a primary key, within each data record (a customer number, an employee number, a product code, a name, etc.) to be converted to a record number so that the data record for any given primary key value can be directly read, written and/or deleted. Additionally, the index data structure is defined in such a manner as to allow the file to be processed sequentially, record-by-record, in ascending sequence of the primary key field values. Whether this index structure exists as a binary-searchable tree structure (b-tree), an elaborate hash structure or something else is pretty much irrelevant to the programmer &amp;mdash; the behaviour of the structure will be as it was just described. The actual mechanism used will depend upon the advanced file-management package was included into your GnuCOBOL implementation when it was built.</source>
          <target state="translated">나머지 구조는 하나 이상의 인덱스 구성 요소입니다. 인덱스 구성 요소는 각 데이터 레코드 (고객 번호, 직원 번호, 제품 코드, 이름 등) 내에서 기본 키라는 필드의 내용을 (어떻게) 변환 할 수있는 데이터 구조입니다. 주어진 기본 키 값에 대한 데이터 레코드를 직접 읽거나 쓰거나 삭제할 수있는 레코드 번호 또한, 인덱스 데이터 구조는 파일이 1 차 키 필드 값의 오름차순으로 파일별로 순차적으로 처리되도록하는 방식으로 정의된다. 이 인덱스 구조가 이진 검색 가능한 트리 구조 (b- 트리), 정교한 해시 구조 또는 다른 것으로 존재하는지 여부는 프로그래머와 거의 관련이 없습니다. 구조의 동작은 방금 설명한대로입니다.실제로 사용되는 메커니즘은 고급 파일 관리 패키지가 빌드 될 때 GnuCOBOL 구현에 포함 된 고급 파일 관리 패키지에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="341b005cb78203f9f5053a8c4a8e4cce82f44740" translate="yes" xml:space="preserve">
          <source>The remaining&lt;code&gt;PAGE LIMIT&lt;/code&gt;values can be established as required by your report(s).</source>
          <target state="translated">나머지 &lt;code&gt;PAGE LIMIT&lt;/code&gt; 값은 보고서에 필요한대로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89cc062c2387d5bd8fe1717a88f1c31093a31f68" translate="yes" xml:space="preserve">
          <source>The replacement string, which follows the &lt;code&gt;BY&lt;/code&gt;, is specified using the &lt;code&gt;==&lt;var&gt;pseudo-text-2&lt;/var&gt;==&lt;/code&gt; option. If &lt;code&gt;&lt;var&gt;pseudo-text-2&lt;/var&gt;&lt;/code&gt; is null (in other words, the replacement text is specified as &lt;code&gt;====&lt;/code&gt;), all encountered occurrences of the search string will be deleted.</source>
          <target state="translated">The replacement string, which follows the &lt;code&gt;BY&lt;/code&gt; , is specified using the &lt;code&gt;==&lt;var&gt;pseudo-text-2&lt;/var&gt;==&lt;/code&gt; option. If &lt;code&gt;&lt;var&gt;pseudo-text-2&lt;/var&gt;&lt;/code&gt; is null (in other words, the replacement text is specified as &lt;code&gt;====&lt;/code&gt; ), all encountered occurrences of the search string will be deleted.</target>
        </trans-unit>
        <trans-unit id="4c820b44806dfc53bb3a0c3002cf09b9c27cf9a9" translate="yes" xml:space="preserve">
          <source>The replacement string, which follows the &lt;code&gt;BY&lt;/code&gt;, may be specified using any of the four options.</source>
          <target state="translated">The replacement string, which follows the &lt;code&gt;BY&lt;/code&gt; , may be specified using any of the four options.</target>
        </trans-unit>
        <trans-unit id="bbed0d1b0997a9dff2192e93863c37c246abd489" translate="yes" xml:space="preserve">
          <source>The replacement string, which follows the&lt;code&gt;BY&lt;/code&gt; is specified using the&lt;code&gt;==&amp;lt;&lt;i&gt;pseudo-text-2&lt;/i&gt;&amp;gt;==&lt;/code&gt;option. If&lt;code&gt;&amp;lt;&lt;i&gt;pseudo-text-2&lt;/i&gt;&amp;gt;&lt;/code&gt;is null (in other words, the replacement text is specified as&lt;code&gt;====&lt;/code&gt;, all encountered occurrences of the search string will be deleted.</source>
          <target state="translated">&lt;code&gt;BY&lt;/code&gt; 뒤에 오는 대체 문자열 은 &lt;code&gt;==&amp;lt;&lt;i&gt;pseudo-text-2&lt;/i&gt;&amp;gt;==&lt;/code&gt; 옵션을 사용하여 지정됩니다 . 경우 &lt;code&gt;&amp;lt;&lt;i&gt;pseudo-text-2&lt;/i&gt;&amp;gt;&lt;/code&gt; 즉, 대체 텍스트는 다음과 같이 지정됩니다 (null 인 &lt;code&gt;====&lt;/code&gt; , 검색 문자열의 모든 발생 사건이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="6f047bad0cd66f0cadd77023cd9d4cb26bad834f" translate="yes" xml:space="preserve">
          <source>The replacement string, which follows the&lt;code&gt;BY&lt;/code&gt; may be specified using any of the four options.</source>
          <target state="translated">&lt;code&gt;BY&lt;/code&gt; 뒤에 오는 대체 문자열 은 네 가지 옵션 중 하나를 사용하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="132402f103f4c333964bd6d94681f4ca5a367a7d" translate="yes" xml:space="preserve">
          <source>The report group being defined will be a part of the most-recently coded &lt;code&gt;RD&lt;/code&gt;.</source>
          <target state="translated">The report group being defined will be a part of the most-recently coded &lt;code&gt;RD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b93f3d03723dd3ae0981e428e92128b9a26ccb7" translate="yes" xml:space="preserve">
          <source>The report group being defined will be a part of the most-recently coded&lt;code&gt;RD&lt;/code&gt;</source>
          <target state="translated">정의 된 보고서 그룹은 가장 최근에 코딩 된 &lt;code&gt;RD&lt;/code&gt; 의 일부가됩니다.</target>
        </trans-unit>
        <trans-unit id="fe6515f142f87a8cf4c1cc22633308555a339c3b" translate="yes" xml:space="preserve">
          <source>The report in which &amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="33aad1431b879e103c3f75231fb080852506dece" translate="yes" xml:space="preserve">
          <source>The report in which &lt;var&gt;identifier-1&lt;/var&gt; is a &lt;code&gt;DETAIL&lt;/code&gt; group must have been successfully initiated via the &lt;code&gt;INITIATE&lt;/code&gt; statement (see &lt;a href=&quot;#INITIATE&quot;&gt;INITIATE&lt;/a&gt;) and not yet terminated via the &lt;code&gt;TERMINATE&lt;/code&gt; statement (see &lt;a href=&quot;#TERMINATE&quot;&gt;TERMINATE&lt;/a&gt;) at the time the &lt;code&gt;GENERATE&lt;/code&gt; is executed.</source>
          <target state="translated">The report in which &lt;var&gt;identifier-1&lt;/var&gt; is a &lt;code&gt;DETAIL&lt;/code&gt; group must have been successfully initiated via the &lt;code&gt;INITIATE&lt;/code&gt; statement (see &lt;a href=&quot;#INITIATE&quot;&gt;INITIATE&lt;/a&gt;) and not yet terminated via the &lt;code&gt;TERMINATE&lt;/code&gt; statement (see &lt;a href=&quot;#TERMINATE&quot;&gt;TERMINATE&lt;/a&gt;) at the time the &lt;code&gt;GENERATE&lt;/code&gt; is executed.</target>
        </trans-unit>
        <trans-unit id="e1c515eb8270028b369743985e74373897cddd30" translate="yes" xml:space="preserve">
          <source>The report line number upon which the data item containing this clause along with any subordinate data items will be presented may be stated on an absolute basis (</source>
          <target state="translated">The report line number upon which the data item containing this clause along with any subordinate data items will be presented may be stated on an absolute basis (</target>
        </trans-unit>
        <trans-unit id="62aaa281a6b9f8385a68152ceaf7380e2d0d26e8" translate="yes" xml:space="preserve">
          <source>The report line number upon which the data item containing this clause along with any subordinate data items will be presented may be stated on an absolute basis (i.e.&lt;code&gt;LINE 5&lt;/code&gt; or on a relative basis based upon the previously-displayed line (i.e.&lt;code&gt;LINE PLUS 1&lt;/code&gt;.</source>
          <target state="translated">이 조항을 포함하는 데이터 항목과 하위 데이터 항목이 표시 될 보고서 라인 번호는 절대 기준 (예 : &lt;code&gt;LINE 5&lt;/code&gt; ) 또는 이전에 표시된 라인 (예 : &lt;code&gt;LINE PLUS 1&lt;/code&gt; )을 기준으로 상대 기준으로 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="980cbbf0acd9ab3f05bf87e9a6b005c7c5855267" translate="yes" xml:space="preserve">
          <source>The report&amp;rsquo;s   &lt;code&gt;LINE-COUNTER&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) will be set to 0</source>
          <target state="translated">The report&amp;rsquo;s &lt;code&gt;LINE-COUNTER&lt;/code&gt; special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) will be set to 0</target>
        </trans-unit>
        <trans-unit id="ecf2e739f519218356780d5893100bfe21f31b69" translate="yes" xml:space="preserve">
          <source>The report&amp;rsquo;s   &lt;code&gt;PAGE-COUNTER&lt;/code&gt; special register will be set to 1</source>
          <target state="translated">The report&amp;rsquo;s &lt;code&gt;PAGE-COUNTER&lt;/code&gt; special register will be set to 1</target>
        </trans-unit>
        <trans-unit id="fcd342d11009c2b0ab06196ecef6eea8ca405149" translate="yes" xml:space="preserve">
          <source>The report&amp;rsquo;s&lt;code&gt;LINE-COUNTER&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) will be set to 0</source>
          <target state="translated">이 보고서의 &lt;code&gt;LINE-COUNTER&lt;/code&gt; 특수 레지스터 (참조 &lt;a href=&quot;#Special-Registers&quot;&gt;특수 레지스터를&lt;/a&gt; 0으로 설정됩니다)</target>
        </trans-unit>
        <trans-unit id="6aa4f92896f674f07a14e1ec2d6c653df595f5ca" translate="yes" xml:space="preserve">
          <source>The report&amp;rsquo;s&lt;code&gt;PAGE-COUNTER&lt;/code&gt;special register will be set to 1</source>
          <target state="translated">보고서의 &lt;code&gt;PAGE-COUNTER&lt;/code&gt; 특수 레지스터는 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1145c938760ae1a72eb77564b9f9f07afa219974" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;AS&lt;/code&gt; is optional (only on the &lt;code&gt;SOURCEFORMAT&lt;/code&gt; and &lt;code&gt;FOLDCOPYNAME&lt;/code&gt; clauses) and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">The reserved word &lt;code&gt;AS&lt;/code&gt; is optional (only on the &lt;code&gt;SOURCEFORMAT&lt;/code&gt; and &lt;code&gt;FOLDCOPYNAME&lt;/code&gt; clauses) and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</target>
        </trans-unit>
        <trans-unit id="3eafaf3ee71c2fd33e981a1283d3020a1cd75049" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;AS&lt;/code&gt; is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">The reserved word &lt;code&gt;AS&lt;/code&gt; is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</target>
        </trans-unit>
        <trans-unit id="01ec09cf83e357eb9ede9420e8e5833b32b7a71c" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;AT&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">The reserved word &lt;code&gt;AT&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</target>
        </trans-unit>
        <trans-unit id="43df62c6971fe4b8af772eb1716570ba1b28e6de" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;BY&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">The reserved word &lt;code&gt;BY&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</target>
        </trans-unit>
        <trans-unit id="47bc2ffbc243303bc43dd6604fbfffd4782b3c19" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;COLUMN&lt;/code&gt; may be abbreviated as &lt;code&gt;COL&lt;/code&gt;.</source>
          <target state="translated">The reserved word &lt;code&gt;COLUMN&lt;/code&gt; may be abbreviated as &lt;code&gt;COL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="207b629387b596932284b8f902e4d034f4b2048b" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;COLUMNS&lt;/code&gt; may be abbreviated as &lt;code&gt;COLS&lt;/code&gt;.</source>
          <target state="translated">The reserved word &lt;code&gt;COLUMNS&lt;/code&gt; may be abbreviated as &lt;code&gt;COLS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edabd733ef8a1b407c9a829ac35c82b23602a001" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;CORRESPONDING&lt;/code&gt; may be abbreviated as &lt;code&gt;CORR&lt;/code&gt;.</source>
          <target state="translated">The reserved word &lt;code&gt;CORRESPONDING&lt;/code&gt; may be abbreviated as &lt;code&gt;CORR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73e3ec6436158e041685387707b36fcd9bd8e234" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;EQUAL&lt;/code&gt; is interchangeable with the use of &amp;lsquo;</source>
          <target state="translated">The reserved word &lt;code&gt;EQUAL&lt;/code&gt; is interchangeable with the use of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b19c0834da03fbe7287c98be284ceb26b54d9c61" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;IN&lt;/code&gt; may be used in lieu of &lt;code&gt;OF&lt;/code&gt;.</source>
          <target state="translated">The reserved word &lt;code&gt;IN&lt;/code&gt; may be used in lieu of &lt;code&gt;OF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9ca5aacec5409cce1237b00bb61ff18cbb983d1" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;INITIAL&lt;/code&gt; is optional and may be omitted. The presence or absence of this words has no effect upon the program.</source>
          <target state="translated">The reserved word &lt;code&gt;INITIAL&lt;/code&gt; is optional and may be omitted. The presence or absence of this words has no effect upon the program.</target>
        </trans-unit>
        <trans-unit id="dfb9da812eecee631d08c5bed48a414c779d96f2" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;IS&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76b71e136cab0496a17c851c891ed6aeb6fc2230" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;JUSTIFIED&lt;/code&gt; may be abbreviated as &lt;code&gt;JUST&lt;/code&gt;, the reserved word &lt;code&gt;PICTURE&lt;/code&gt; may be abbreviated as &lt;code&gt;PIC&lt;/code&gt; and the reserved words &lt;code&gt;SYNCRONIZED&lt;/code&gt; and &lt;code&gt;SYNCHRONISED&lt;/code&gt; may be abbreviated as &lt;code&gt;SYNC&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;JUSTIFIED&lt;/code&gt; 는 &lt;code&gt;JUST&lt;/code&gt; , 예약어 &lt;code&gt;PICTURE&lt;/code&gt; 는 &lt;code&gt;PIC&lt;/code&gt; , 예약어 &lt;code&gt;SYNCRONIZED&lt;/code&gt; 및 &lt;code&gt;SYNCHRONISED&lt;/code&gt; 는 &lt;code&gt;SYNC&lt;/code&gt; 로 축약 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b96cc2dcb16f9cef7b5b060e442ee112576487a" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;JUSTIFIED&lt;/code&gt; may be abbreviated as &lt;code&gt;JUST&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;JUSTIFIED&lt;/code&gt; 는 &lt;code&gt;JUST&lt;/code&gt; 로 축약 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="018d091d6e3fa5f3e64d59529d5960c58e106569" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;JUSTIFIED&lt;/code&gt; may be abbreviated to &lt;code&gt;JUST&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;JUSTIFIED&lt;/code&gt; 는 &lt;code&gt;JUST&lt;/code&gt; 로 축약 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34b29ce1b1076ac6a77fcfa8b3a14f9c113b772e" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;LINES&lt;/code&gt; may be abbreviated as &lt;code&gt;LINE&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;LINES&lt;/code&gt; 는 &lt;code&gt;LINE&lt;/code&gt; 으로 축약 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65554e205d1d2864f7878e251c56ea1a6e1ece3f" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;OF&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program. Here is an example. The following two GnuCOBOL statements both display the same result (27):</source>
          <target state="translated">예약어 &lt;code&gt;OF&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다. 여기에 예가 있습니다. 다음 두 GnuCOBOL 문은 모두 동일한 결과를 표시합니다 (27).</target>
        </trans-unit>
        <trans-unit id="6b777f8934c32e0189418a815949cee15140af7d" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;ON&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3564d7164021d7ce1fa5b3840f5d00ef8d641794" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;PICTURE&lt;/code&gt; may be abbreviated as &lt;code&gt;PIC&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;PICTURE&lt;/code&gt; 는 &lt;code&gt;PIC&lt;/code&gt; 로 축약 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="5e5c6ccfabeca715b68303d04359a10a4e871d0d" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;PICTURE&lt;/code&gt; may be abbreviated as &lt;code&gt;PIC&lt;/code&gt;. Most programmers prefer to use the latter.</source>
          <target state="translated">예약어 &lt;code&gt;PICTURE&lt;/code&gt; 는 &lt;code&gt;PIC&lt;/code&gt; 로 축약 될 수 있습니다. . 대부분의 프로그래머는 후자를 선호합니다.</target>
        </trans-unit>
        <trans-unit id="a1587a0d4368d684cec414ce28a6156d024a6360" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;PICTURE&lt;/code&gt; may be abbreviated to &lt;code&gt;PIC&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;PICTURE&lt;/code&gt; 는 &lt;code&gt;PIC&lt;/code&gt; 로 축약 될 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="5189453f5153b0cd259c7528b7635b0464c822f4" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;PRINTING&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;PRINTING&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3b21861a007fb7d5be7cc269ecdef2d8da2ca90d" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;RIGHT&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;RIGHT&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="72e8c8fbbbcbbf4c5c8f037b778bccc492eeadea" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;THEN&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;THEN&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a4e6553227ffe95b04ace790845fdc063f554b66" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;TO&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;TO&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e23239ae62a42b6296072ccf4f83666af10f336" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;WHEN&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;WHEN&lt;/code&gt; 은 선택적이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c1ca669ec92d10159bbc39fde9c71806f41bc21" translate="yes" xml:space="preserve">
          <source>The reserved word &lt;code&gt;WITH&lt;/code&gt; is optional and may be omitted. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bc6b0f80a683da233840608088a66d5e4a44f5e7" translate="yes" xml:space="preserve">
          <source>The reserved word and phrase &lt;code&gt;FOREVER&lt;/code&gt; and &lt;code&gt;UNTIL EXIT&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 및 구문 &lt;code&gt;FOREVER&lt;/code&gt; 및 &lt;code&gt;UNTIL EXIT&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdbaa2135baaebf171ae09637fba4c11e2a7723b" translate="yes" xml:space="preserve">
          <source>The reserved word and phrase&lt;code&gt;FOREVER&lt;/code&gt;and&lt;code&gt;UNTIL EXIT&lt;/code&gt;are interchangeable.</source>
          <target state="translated">예약어와 문구 &lt;code&gt;FOREVER&lt;/code&gt; 와 &lt;code&gt;UNTIL EXIT&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56e1c7c068d8eb1954f29a55b1c4f884aa326821" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;AS&lt;/code&gt;is optional (only on the&lt;code&gt;SOURCEFORMAT&lt;/code&gt;and&lt;code&gt;FOLDCOPYNAME&lt;/code&gt;clauses) and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AS&lt;/code&gt; 는 선택 사항이며 ( &lt;code&gt;SOURCEFORMAT&lt;/code&gt; 및 &lt;code&gt;FOLDCOPYNAME&lt;/code&gt; 절 에서만 ) 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="370ea212dd4f6ca3bb96f1681d80711b3ffc1688" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;AS&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AS&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="106fe7b60348ed755f60cbac0f2e69379233b558" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;AT&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AT&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9fecc631970ef85e6559d98e6bffbad7d2b9ff9" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;BY&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c52d31d72517229b69a76dd7e379be85b627912" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;COLUMN&lt;/code&gt;may be abbreviated as&lt;code&gt;COL&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;COLUMN&lt;/code&gt; 은 &lt;code&gt;COL&lt;/code&gt; 로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="944706e14c11c98dce65cee9da7797626b0b9699" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;COLUMNS&lt;/code&gt;may be abbreviated as&lt;code&gt;COLS&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;COLUMNS&lt;/code&gt; 는 &lt;code&gt;COLS&lt;/code&gt; 로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="0ebe5f5dc938232bf13471059915dd1e46afdc69" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;CORRESPONDING&lt;/code&gt;may be abbreviated as&lt;code&gt;CORR&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;CORRESPONDING&lt;/code&gt; 은 &lt;code&gt;CORR&lt;/code&gt; 로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="338f70dac3c6c44983b2aa10a9ede70f085f8f2d" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;EQUAL&lt;/code&gt;is interchangeable with the use of&lt;code&gt;=&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;EQUAL&lt;/code&gt; 은 &lt;code&gt;=&lt;/code&gt; 를 사용하여 서로 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="67ea1824db1e79012cfd4bd3e661b81fc3ee292e" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;IN&lt;/code&gt;may be used in lieu of&lt;code&gt;OF&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;IN&lt;/code&gt; 은 &lt;code&gt;OF&lt;/code&gt; 대신 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86b2916b532a1ec6c2728d3074e569c68e27b7db" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;INITIAL&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;INITIAL&lt;/code&gt; 은 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1f6366078b387d37446ff3238f32c71d980da478" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;IS&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="170822b5751bcb977ded5111930ebcca401c4744" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;JUSTIFIED&lt;/code&gt;may be abbreviated as&lt;code&gt;JUST&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;JUSTIFIED&lt;/code&gt; 는 &lt;code&gt;JUST&lt;/code&gt; 로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="06799a09548a56b3cbd7453f8f6b539dcd555958" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;JUSTIFIED&lt;/code&gt;may be abbreviated as&lt;code&gt;JUST&lt;/code&gt; the reserved word&lt;code&gt;PICTURE&lt;/code&gt;may be abbreviated as&lt;code&gt;PIC&lt;/code&gt;and the reserved words&lt;code&gt;SYNCRONIZED&lt;/code&gt;and&lt;code&gt;SYNCHRONISED&lt;/code&gt;may be abbreviated as&lt;code&gt;SYNC&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;JUSTIFIED&lt;/code&gt; 로 축약 할 수있다 &lt;code&gt;JUST&lt;/code&gt; 예약어 &lt;code&gt;PICTURE&lt;/code&gt; 로 축약 할 수있다 &lt;code&gt;PIC&lt;/code&gt; 와 예약어가 &lt;code&gt;SYNCRONIZED&lt;/code&gt; 및 &lt;code&gt;SYNCHRONISED&lt;/code&gt; 로 축약 할 수있다 &lt;code&gt;SYNC&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db7e8d5925d56afefbf41db4af3624cf537b533c" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;JUSTIFIED&lt;/code&gt;may be abbreviated to&lt;code&gt;JUST&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;JUSTIFIED&lt;/code&gt; 는 &lt;code&gt;JUST&lt;/code&gt; 로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="264db1af20a5317fd71db02347e28bdde1187254" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;LINES&lt;/code&gt;may be abbreviated as&lt;code&gt;LINE&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;LINES&lt;/code&gt; 는 &lt;code&gt;LINE&lt;/code&gt; 으로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d81e284b20a61cd117dda71d7b0b5574b873973a" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;OF&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;OF&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d3e204e96dfb6d8d3bc246ef6592ce1009835bc" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;ON&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf3c815eb249177423e4c35ec279f91b02845472" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;PICTURE&lt;/code&gt;may be abbreviated as&lt;code&gt;PIC&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;PICTURE&lt;/code&gt; 는 &lt;code&gt;PIC&lt;/code&gt; 로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="66315d549b6b75b9010fa51296d0b9b7280ad8cb" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;PICTURE&lt;/code&gt;may be abbreviated as&lt;code&gt;PIC&lt;/code&gt; Most programmers prefer to use the latter.</source>
          <target state="translated">예약어 &lt;code&gt;PICTURE&lt;/code&gt; 는 &lt;code&gt;PIC&lt;/code&gt; 로 축약 될 수 있습니다. 대부분의 프로그래머는 후자를 선호합니다.</target>
        </trans-unit>
        <trans-unit id="c2abe6260a3f846f135aabaf266ab41377d3b6c2" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;PICTURE&lt;/code&gt;may be abbreviated to&lt;code&gt;PIC&lt;/code&gt;</source>
          <target state="translated">예약어 &lt;code&gt;PICTURE&lt;/code&gt; 는 &lt;code&gt;PIC&lt;/code&gt; 로 축약 될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ad3c2b1bb88eefd805cacb0fd9ad241a0e72b6ae" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;PRINTING&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;PRINTING&lt;/code&gt; 은 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a0ed0dff772266b2a7838f50769c98b6b8d7b2b0" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;RIGHT&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;RIGHT&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ce0a3df3f59cca78490e53281137a55d3a4ceba" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;THEN&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;THEN&lt;/code&gt; 은 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ac3f7290c63532efbb123869a9b7d190901112dc" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;TO&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;TO&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="abfdd6cc9db86dfe74b17a1d27df190601523540" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;WHEN&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;WHEN&lt;/code&gt; 은 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ec23324f73e7b37964b9f68000abbd71339e84ed" translate="yes" xml:space="preserve">
          <source>The reserved word&lt;code&gt;WITH&lt;/code&gt;is optional and may be included, or not, at the discretion of the programmer. The presence or absence of this word has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 프로그래머의 판단에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 존재 여부는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d629c3e15b414e77c11db59c8d279dd2c93016a" translate="yes" xml:space="preserve">
          <source>The reserved words  &lt;code&gt;RETURNING&lt;/code&gt; and  &lt;code&gt;GIVING&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;RETURNING&lt;/code&gt; 및 &lt;code&gt;GIVING&lt;/code&gt; 은 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca8fdd9a5e31c5642bfaa46e3afe1eb4ce682347" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ADVANCING&lt;/code&gt;, &lt;code&gt;AT&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;LINE&lt;/code&gt;, &lt;code&gt;LINES&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ADVANCING&lt;/code&gt; , &lt;code&gt;AT&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;LINE&lt;/code&gt; , &lt;code&gt;LINES&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f4dbf7cb5de4a8d02cd2085e5537613c0d7d7197" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AFTER&lt;/code&gt;, &lt;code&gt;FOR&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, &lt;code&gt;PROCEDURE&lt;/code&gt; and &lt;code&gt;STANDARD&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AFTER&lt;/code&gt; , &lt;code&gt;FOR&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; , &lt;code&gt;PROCEDURE&lt;/code&gt; 및 &lt;code&gt;STANDARD&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c6734242102156203ae536f4185068111bdb57a" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AFTER&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AFTER&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;NUMBER&lt;/code&gt; 및 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eef069afe018cd609b349a40d926d8d76076fcf6" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AFTER&lt;/code&gt;, &lt;code&gt;LINE&lt;/code&gt;, &lt;code&gt;LINES&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AFTER&lt;/code&gt; , &lt;code&gt;LINE&lt;/code&gt; , &lt;code&gt;LINES&lt;/code&gt; , &lt;code&gt;NUMBER&lt;/code&gt; 및 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b7672176d56bd62662189dbff2c3cc45a623e7b9" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ARE&lt;/code&gt; and &lt;code&gt;IS&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ARE&lt;/code&gt; 및 &lt;code&gt;IS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="06ffae9647e73f8c7b89ba94f68de435f96c1d02" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ARE&lt;/code&gt;, &lt;code&gt;AT&lt;/code&gt;, &lt;code&gt;CHARACTERS&lt;/code&gt; (&lt;code&gt;RECORD&lt;/code&gt; clause only), &lt;code&gt;CONTAINS&lt;/code&gt;, &lt;code&gt;FROM&lt;/code&gt;, &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ARE&lt;/code&gt; , &lt;code&gt;AT&lt;/code&gt; , &lt;code&gt;CHARACTERS&lt;/code&gt; ( &lt;code&gt;RECORD&lt;/code&gt; 절만 해당), &lt;code&gt;CONTAINS&lt;/code&gt; , &lt;code&gt;FROM&lt;/code&gt; , &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 프로그래머의 재량에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2cdc3f6daee330dabe066748fa929f3284b7372d" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ARE&lt;/code&gt;, &lt;code&gt;CHARACTERS&lt;/code&gt; and &lt;code&gt;IS&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ARE&lt;/code&gt; , &lt;code&gt;CHARACTERS&lt;/code&gt; 및 &lt;code&gt;IS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1468be4698d8f13ae2e74850875b8b68904a31f4" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ARE&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt; and &lt;code&gt;NUMBERS&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ARE&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;NUMBER&lt;/code&gt; 및 &lt;code&gt;NUMBERS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="359231d76104ccbca24a60072dffe7837b653b4f" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ARE&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;SET&lt;/code&gt; and &lt;code&gt;TO&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ARE&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;SET&lt;/code&gt; 및 &lt;code&gt;TO&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="072bb32092f1635c19c98b8c8f97795d31816571" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AREA&lt;/code&gt; and &lt;code&gt;FOR&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AREA&lt;/code&gt; 및 &lt;code&gt;FOR&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6db75c03124a1d175d34908440b941ee4d5e1ba7" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AREAS&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;MODE&lt;/code&gt;, &lt;code&gt;OTHER&lt;/code&gt;, &lt;code&gt;SEQUENCE&lt;/code&gt;, &lt;code&gt;TO&lt;/code&gt;, &lt;code&gt;USING&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AREAS&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;MODE&lt;/code&gt; , &lt;code&gt;OTHER&lt;/code&gt; , &lt;code&gt;SEQUENCE&lt;/code&gt; , &lt;code&gt;TO&lt;/code&gt; , &lt;code&gt;USING&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="04c39ca871ae951b1eaf8a448a7043553565d53f" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AS&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt; and &lt;code&gt;OF&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AS&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; 및 &lt;code&gt;OF&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9a36ea3014f428b8c58bd0dd38dfe93535e2aa5a" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AS&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt; and &lt;code&gt;PROGRAM&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AS&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; 및 &lt;code&gt;PROGRAM&lt;/code&gt; 은 선택 사항이며 프로그래머의 재량에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b1a43f652467bbf20fa998601ce2fd062caffa1" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AT&lt;/code&gt; and &lt;code&gt;RECORD&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AT&lt;/code&gt; 및 &lt;code&gt;RECORD&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="95f85fb0fe1395f93ad62c7b6f83a3241edea5ed" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;AT&lt;/code&gt;, &lt;code&gt;RECORD&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;AT&lt;/code&gt; , &lt;code&gt;RECORD&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="029aa2b418a8353be6e39b11c794ee18037c3ea4" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BACKGROUND-COLOR&lt;/code&gt; and &lt;code&gt;BACKGROUND-COLOUR&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;BACKGROUND-COLOR&lt;/code&gt; 및 &lt;code&gt;BACKGROUND-COLOUR&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10348142767405486fa42a2d2448ac4f240263d9" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BINARY&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;MODE&lt;/code&gt; and &lt;code&gt;RECORD&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BINARY&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;MODE&lt;/code&gt; 및 &lt;code&gt;RECORD&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b88f403f9619826a695944cbe215e4e5e55f3f25" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt; (INDEXED), &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;TIMES&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; (INDEXED), &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; 및 &lt;code&gt;TIMES&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5dc2d3dad99e4f2d27c97e06c09a13b39f9a77e8" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt; and &lt;code&gt;IS&lt;/code&gt; are optional and may be omitted. The presence or absence of these words have no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; 및 &lt;code&gt;IS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이러한 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="665c346bed11525275bf47fce01b1264355b0d90" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt;, &lt;code&gt;CHARACTER&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;WHEN&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; , &lt;code&gt;CHARACTER&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; 및 &lt;code&gt;WHEN&lt;/code&gt; 은 선택 사항이며 프로그래머의 재량에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de1838150ef9d28ef2edc6528c5f69305d05a157" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt;, &lt;code&gt;CHARACTER&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; (JUSTIFIED), &lt;code&gt;TIMES&lt;/code&gt; and &lt;code&gt;WHEN&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; , &lt;code&gt;CHARACTER&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; , &lt;code&gt;RIGHT&lt;/code&gt; (JUSTIFIED), &lt;code&gt;TIMES&lt;/code&gt; 및 &lt;code&gt;WHEN&lt;/code&gt; 은 선택 사항이며 프로그래머의 재량에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c3c62e954a52eb17e7f8484b66820db1a55661f5" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt;, &lt;code&gt;CHARACTER&lt;/code&gt;&lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; (JUSTIFIED), &lt;code&gt;TIMES&lt;/code&gt; and &lt;code&gt;WHEN&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; , &lt;code&gt;CHARACTER&lt;/code&gt; &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; , &lt;code&gt;RIGHT&lt;/code&gt; (JUSTIFIED), &lt;code&gt;TIMES&lt;/code&gt; 및 &lt;code&gt;WHEN&lt;/code&gt; 은 선택 사항이며 프로그래머의 재량에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7c6b64b2009bb8ab32aef6d2747b3ac73c280ea" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt;, &lt;code&gt;IN&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; , &lt;code&gt;IN&lt;/code&gt; 및 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ad31a00301769c0fb2b442bf5335013907e2baf" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; 및 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9260a85a948365ebf7f80f9bee31f41f59af87fd" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;WHEN&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; 및 &lt;code&gt;WHEN&lt;/code&gt; 은 선택적이며 프로그래머의 재량에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c92f95bb44ddcf2307f180413a67a046f140606" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;BY&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;BY&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4022423f990c4fb4eb63a1ddb4faeea7fe21c9b1" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;CHARACTER&lt;/code&gt; (&lt;code&gt;SEPARATE&lt;/code&gt; clause), &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, &lt;code&gt;TIMES&lt;/code&gt; and &lt;code&gt;WHEN&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;CHARACTER&lt;/code&gt; ( &lt;code&gt;SEPARATE&lt;/code&gt; 절), &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;NUMBER&lt;/code&gt; , &lt;code&gt;RIGHT&lt;/code&gt; , &lt;code&gt;TIMES&lt;/code&gt; 및 &lt;code&gt;WHEN&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a86a723af4c37d16ae132d46020c349567d07d2" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;CHARACTER&lt;/code&gt; and &lt;code&gt;IS&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;CHARACTER&lt;/code&gt; 및 &lt;code&gt;IS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aea3c1c2edb3aceebbcf831e794ca49710b7aa36" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;CHARACTER&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt; and &lt;code&gt;MODE&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;CHARACTER&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; 및 &lt;code&gt;MODE&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="550abddf3c717173db81f38087cfab0759fedacd" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;CHARACTER&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;PROGRAM&lt;/code&gt; and &lt;code&gt;SEQUENCE&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect on the program.</source>
          <target state="translated">예약어 &lt;code&gt;CHARACTER&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;PROGRAM&lt;/code&gt; 및 &lt;code&gt;SEQUENCE&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c375fbb7091ed2a497c4a3e6bdb741af2ca1779" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;CHARACTER&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt; (JUSTIFIED) and &lt;code&gt;WHEN&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;CHARACTER&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;RIGHT&lt;/code&gt; (JUSTIFIED) 및 &lt;code&gt;WHEN&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="11bf4d98337e47b4fb20de9d015a415600fe6262" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;COLS&lt;/code&gt; and &lt;code&gt;COLUMNS&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;COLS&lt;/code&gt; 및 &lt;code&gt;COLUMNS&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="210065f824f7eddf909ee84b2aa972b217e02a5d" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;COLUMN&lt;/code&gt; and &lt;code&gt;POSITION&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;COLUMN&lt;/code&gt; 및 &lt;code&gt;POSITION&lt;/code&gt; 은 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8e1e7192788b20973e2557731774abaa653e6da" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;COLUMN&lt;/code&gt;, &lt;code&gt;COL&lt;/code&gt; and &lt;code&gt;POSITION&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;COLUMN&lt;/code&gt; , &lt;code&gt;COL&lt;/code&gt; 및 &lt;code&gt;POSITION&lt;/code&gt; 은 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56cd9d474155587ccf6a61c55759bde105e5f802" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;DATA&lt;/code&gt;, &lt;code&gt;OF&lt;/code&gt;, &lt;code&gt;THEN&lt;/code&gt;, &lt;code&gt;TO&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;DATA&lt;/code&gt; , &lt;code&gt;OF&lt;/code&gt; , &lt;code&gt;THEN&lt;/code&gt; , &lt;code&gt;TO&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2730b51d5d37e559cbeacf0d6f4f94e237654212" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;END-OF-PAGE&lt;/code&gt; and &lt;code&gt;EOP&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;END-OF-PAGE&lt;/code&gt; 및 &lt;code&gt;EOP&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32e7a43e668024e9d17cfcd3b763089bfda7edf7" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;EXCEPTION&lt;/code&gt; and &lt;code&gt;OVERFLOW&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;EXCEPTION&lt;/code&gt; 및 &lt;code&gt;OVERFLOW&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2fbca3d856b16d6442e59fc7088753b5b23e269" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;FOR&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;FOR&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="891455c105abee719748b68ccb839c0a5f03bb9f" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;FOREGROUND-COLOR&lt;/code&gt; and &lt;code&gt;FOREGROUND-COLOUR&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;FOREGROUND-COLOR&lt;/code&gt; 및 &lt;code&gt;FOREGROUND-COLOUR&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="efa4efbd0bbf3d1cd60a40b8de355dc362428002" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;FORMAT&lt;/code&gt; and &lt;code&gt;IS&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;FORMAT&lt;/code&gt; 및 &lt;code&gt;IS&lt;/code&gt; 는 선택 사항이며 프로그래머의 재량에 따라 포함되거나 포함되지 않을 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ed14162f3468792539f5dd4d4475d5dcf5b8341b" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;GIVING&lt;/code&gt; and &lt;code&gt;RETURNING&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;GIVING&lt;/code&gt; 및 &lt;code&gt;RETURNING&lt;/code&gt; 은 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1a08855d63f15f26542052c12db4a54b1604e5f" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, &lt;code&gt;ORDER&lt;/code&gt;, &lt;code&gt;SEQUENCE&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IN&lt;/code&gt; , &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; , &lt;code&gt;ORDER&lt;/code&gt; , &lt;code&gt;SEQUENCE&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3978492791c4d5399cc0a8f24b83934fafc41b89" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;INITIALIZE&lt;/code&gt; and &lt;code&gt;INITIALISE&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;INITIALIZE&lt;/code&gt; 및 &lt;code&gt;INITIALISE&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31ed622351805775e8a54da65884d90cb016e4a1" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;INITIALIZED&lt;/code&gt; and &lt;code&gt;INITIALISED&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;INITIALIZED&lt;/code&gt; 및 &lt;code&gt;INITIALISED&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b1bed414cc73fde47f689e43dfda0042901a5f2" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; 및 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f4a8da6a13cb8d8d9ef8af399fc6c97781df33f0" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt; and &lt;code&gt;STATUS&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; 및 &lt;code&gt;STATUS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f0b805e2fd6c0eb8c324d5a354d9b972c212d042" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt; (on the &lt;code&gt;INVALID&lt;/code&gt; and &lt;code&gt;NOT INVALID&lt;/code&gt; clauses), &lt;code&gt;RECORD&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; ( &lt;code&gt;INVALID&lt;/code&gt; 및 &lt;code&gt;NOT INVALID&lt;/code&gt; 절에서), &lt;code&gt;RECORD&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8fea61b27ccfe7c472e2eb23addaa046a3e8ce3a" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt; and &lt;code&gt;MODE&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; 및 &lt;code&gt;MODE&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cdd1042bb504770b08b22d48d7c3a9135c217249" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;KEY&lt;/code&gt;, &lt;code&gt;THAN&lt;/code&gt; and &lt;code&gt;TO&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;KEY&lt;/code&gt; , &lt;code&gt;THAN&lt;/code&gt; 및 &lt;code&gt;TO&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="240be0f6b03e96df16143a7ffeccab290739f4aa" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;NUMBER&lt;/code&gt; 및 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c6da3ba621a7f599cc3c8e5a2ed678b31a6c43d" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;NUMBER&lt;/code&gt;, &lt;code&gt;OF&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, &lt;code&gt;TIMES&lt;/code&gt; and &lt;code&gt;WHEN&lt;/code&gt; (BLANK) are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;NUMBER&lt;/code&gt; , &lt;code&gt;OF&lt;/code&gt; , &lt;code&gt;ON&lt;/code&gt; , &lt;code&gt;RIGHT&lt;/code&gt; , &lt;code&gt;TIMES&lt;/code&gt; 및 &lt;code&gt;WHEN&lt;/code&gt; (BLANK)은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9fe9c92ef72af8634e4b63fe8806fafb9223fdbf" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;SET&lt;/code&gt;, &lt;code&gt;TO&lt;/code&gt; and &lt;code&gt;WHEN&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;SET&lt;/code&gt; , &lt;code&gt;TO&lt;/code&gt; 및 &lt;code&gt;WHEN&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ceb48cc15e1d3dc5b9678bed1405e6af0905b54" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;THAN&lt;/code&gt; and &lt;code&gt;TO&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect on the program.</source>
          <target state="translated">예약어 &lt;code&gt;IS&lt;/code&gt; , &lt;code&gt;THAN&lt;/code&gt; 및 &lt;code&gt;TO&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d85650731e9ebf765f090f7b452f5cdbcd5e8789" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;KEY&lt;/code&gt; and &lt;code&gt;RECORD&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;KEY&lt;/code&gt; 및 &lt;code&gt;RECORD&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c82d143f471215a984601eddbfddc1deabe4e8c2" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;KEY&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;KEY&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0dc4e04fb95433f45d4de64dd75f6bed5a16e0a2" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;LINE&lt;/code&gt; and &lt;code&gt;LINES&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;LINE&lt;/code&gt; 과 &lt;code&gt;LINES&lt;/code&gt; 는 서로 바꿔서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df819284972beecabe8d0771fcfea9120f6b22c6" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;LINES&lt;/code&gt; and &lt;code&gt;LINE-NUMBER&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;LINES&lt;/code&gt; 와 &lt;code&gt;LINE-NUMBER&lt;/code&gt; 는 서로 바꿔서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e4f1ab9c4ab437bbbf94d707a7a8b7807388eaf" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;OF&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;OF&lt;/code&gt; 및 &lt;code&gt;ON&lt;/code&gt; 은 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f7edbd8fa117e07b20b5334df3ab387f5cb268f8" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ON&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;ON&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2a7d1f04b82b36d7e3dfc3c8a84b49cc50c00c2" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;ORGANIZATION&lt;/code&gt; and &lt;code&gt;ORGANISATION&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;ORGANIZATION&lt;/code&gt; 및 &lt;code&gt;ORGANISATION&lt;/code&gt; 은 서로 바꿔서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8323e470c66820fdca946196f7deebaa38b2e05b" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;OTHER&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;OTHER&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3436ff52e708fc3147e03143394426b1b923bb9a" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;PROCEED&lt;/code&gt; and &lt;code&gt;TO&lt;/code&gt; (the one</source>
          <target state="translated">예약어 &lt;code&gt;PROCEED&lt;/code&gt; 및 &lt;code&gt;TO&lt;/code&gt; (</target>
        </trans-unit>
        <trans-unit id="d9ce0badaf916aa7f58735b712377ead7791b699" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;RECORD&lt;/code&gt; and &lt;code&gt;RECORDS&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;RECORD&lt;/code&gt; 및 &lt;code&gt;RECORDS&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="72b50b91f9de0aba14ad8dde0212b66ae904aa85" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;REEL&lt;/code&gt; and &lt;code&gt;UNIT&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;REEL&lt;/code&gt; 및 &lt;code&gt;UNIT&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f4398a7b340cf58553bce204b8346fd06cfaae8" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;STATUS&lt;/code&gt; and &lt;code&gt;WITH&lt;/code&gt; are optional and may be omitted. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약어 &lt;code&gt;STATUS&lt;/code&gt; 및 &lt;code&gt;WITH&lt;/code&gt; 는 선택 사항이며 생략 할 수 있습니다. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6c595292cd5533656b827eaacd59cef0e376a05" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;SYNCRONIZED&lt;/code&gt; and &amp;ldquo;&lt;code&gt;SYNCHRONISED&lt;/code&gt;&amp;rdquo; are interchangeable. Both may be abbreviated as &lt;code&gt;SYNC&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;SYNCRONIZED&lt;/code&gt; 및 &quot; &lt;code&gt;SYNCHRONISED&lt;/code&gt; &quot;는 서로 바꿔 사용할 수 있습니다. 둘 다 &lt;code&gt;SYNC&lt;/code&gt; 로 축약 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="592df77fb8a7a9ab040622ef04f5c9d1ab00fe81" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;SYNCRONIZED&lt;/code&gt; and &lt;code&gt;SYNCHRONISED&lt;/code&gt; are interchangeable, and may be abbreviated as &lt;code&gt;SYNC&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;SYNCRONIZED&lt;/code&gt; 및 &lt;code&gt;SYNCHRONISED&lt;/code&gt; 는 상호 교환이 가능하며 &lt;code&gt;SYNC&lt;/code&gt; 로 축약 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="007c56bccad2780fad2acfaeb99fc9c5ce440729" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;SYNCRONIZED&lt;/code&gt; and &lt;code&gt;SYNCHRONISED&lt;/code&gt; are interchangeable. Both may be abbreviated as &lt;code&gt;SYNC&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;SYNCRONIZED&lt;/code&gt; 및 &lt;code&gt;SYNCHRONISED&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다. 둘 다 &lt;code&gt;SYNC&lt;/code&gt; 로 축약 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="edfbca7cacaaae04002a4f32ed61a9a16a457bcd" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;SYNCRONIZED&lt;/code&gt; and &lt;code&gt;SYNCRONIZED&lt;/code&gt; are interchangeable. Both may be abbreviated to &lt;code&gt;SYNC&lt;/code&gt;.</source>
          <target state="translated">예약어 &lt;code&gt;SYNCRONIZED&lt;/code&gt; 및 &lt;code&gt;SYNCRONIZED&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다. 둘 다 &lt;code&gt;SYNC&lt;/code&gt; 로 축약 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7e76c707e63c4dd8c0f325e7bc88bf6a42156989" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;THRU&lt;/code&gt; and &lt;code&gt;THROUGH&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;THRU&lt;/code&gt; 및 &lt;code&gt;THROUGH&lt;/code&gt; 는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c45923348338fc3acfec7f6117c4a8974f26309" translate="yes" xml:space="preserve">
          <source>The reserved words &lt;code&gt;TIMEOUT&lt;/code&gt; and &lt;code&gt;TIME-OUT&lt;/code&gt; are interchangeable.</source>
          <target state="translated">예약어 &lt;code&gt;TIMEOUT&lt;/code&gt; 및 &lt;code&gt;TIME-OUT&lt;/code&gt; 은 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="217788d44bf9bf32005536ad90688cf9607ce2e5" translate="yes" xml:space="preserve">
          <source>The reserved words&lt;code&gt;ADVANCING&lt;/code&gt;&lt;code&gt;AT&lt;/code&gt;&lt;code&gt;KEY&lt;/code&gt;&lt;code&gt;LINE&lt;/code&gt;&lt;code&gt;LINES&lt;/code&gt;and&lt;code&gt;WITH&lt;/code&gt;are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="translated">예약 된 단어 &lt;code&gt;ADVANCING&lt;/code&gt; &lt;code&gt;AT&lt;/code&gt; &lt;code&gt;KEY&lt;/code&gt; &lt;code&gt;LINE&lt;/code&gt; &lt;code&gt;LINES&lt;/code&gt; 와 &lt;code&gt;WITH&lt;/code&gt; 프로그래머의 재량에 따라 선택적이며 포함될 수있다, 또는하지. 이 단어의 유무는 프로그램에 영향을 미치지 않습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
