<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="octave">
    <body>
      <group id="octave">
        <trans-unit id="20a2adde0d428013580a70a69dfc8f97b2b514df" translate="yes" xml:space="preserve">
          <source>A cell array of the text of each match</source>
          <target state="translated">각 일치하는 텍스트의 셀형 배열</target>
        </trans-unit>
        <trans-unit id="1c10230c31340d160a0726bd737369f6d70896ca" translate="yes" xml:space="preserve">
          <source>A cell array of the text of each token matched</source>
          <target state="translated">일치하는 각 토큰의 텍스트로 구성된 셀형 배열</target>
        </trans-unit>
        <trans-unit id="804a4b969cf639438a5c9d63325c8db54b748f7c" translate="yes" xml:space="preserve">
          <source>A cell array with strings labeling each text field. This input is required.</source>
          <target state="translated">각 텍스트 필드에 레이블을 지정하는 문자열이있는 셀형 배열입니다. 이 입력이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="60768aee531853bde5980abe23be0f11e87e5e55" translate="yes" xml:space="preserve">
          <source>A character indicating a plot marker to be place at each data point, or &lt;code&gt;&quot;none&quot;&lt;/code&gt;, meaning no markers should be displayed.</source>
          <target state="translated">각 데이터 포인트에 배치 할 플롯 마커 또는 &lt;code&gt;&quot;none&quot;&lt;/code&gt; 을 나타내는 문자로 마커가 표시되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c6edc281ed7a767d350675192ea7f0f5bdaff890" translate="yes" xml:space="preserve">
          <source>A character string in Octave consists of a sequence of characters enclosed in either double-quote or single-quote marks. Internally, Octave currently stores strings as matrices of characters. All the indexing operations that work for matrix objects also work for strings.</source>
          <target state="translated">옥타브의 문자열은 큰 따옴표 또는 작은 따옴표로 묶인 일련의 문자로 구성됩니다. 내부적으로 옥타브는 현재 문자열을 문자 행렬로 저장합니다. 행렬 객체에서 작동하는 모든 인덱싱 작업은 문자열에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="454b211075f26c520aab980df4383d67fa1baa3b" translate="yes" xml:space="preserve">
          <source>A character string in Octave is just a special &lt;code&gt;Array&lt;/code&gt; class. Consider the example:</source>
          <target state="translated">Octave의 문자열은 특별한 &lt;code&gt;Array&lt;/code&gt; 클래스입니다. 예를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="55539bfd5bcc005999a972bb7993264b7c1eaac9" translate="yes" xml:space="preserve">
          <source>A character that specifies the conversion to be applied.</source>
          <target state="translated">적용 할 변환을 지정하는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="ab08ef09ce125040b510336f563f78fbbf7ff430" translate="yes" xml:space="preserve">
          <source>A class may be a child of more than one class (see &lt;a href=&quot;built_002din-data-types#XREFclass&quot;&gt;class&lt;/a&gt;), and inheritance may be nested. There is no limitation to the number of parents or the level of nesting other than memory or other physical issues.</source>
          <target state="translated">클래스는 둘 이상의 클래스의 자식 일 수 있으며 ( &lt;a href=&quot;built_002din-data-types#XREFclass&quot;&gt;class&lt;/a&gt; 참조 ) 상속이 중첩 될 수 있습니다. 메모리 나 기타 물리적 문제 이외의 부모 수나 중첩 수준에는 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a5b00e0d427b225dd79290c293d1cb5de1996835" translate="yes" xml:space="preserve">
          <source>A clear understanding might be had by considering an example of how the above applies to an example matrix. Consider the matrix</source>
          <target state="translated">위의 예가 매트릭스에 어떻게 적용되는지에 대한 예를 고려하면 분명한 이해가 이루어질 수 있습니다. 매트릭스를 고려</target>
        </trans-unit>
        <trans-unit id="b0bd76e61dd3e6e3cdf1dddfc8350238d72efdb7" translate="yes" xml:space="preserve">
          <source>A colon (&amp;lsquo;</source>
          <target state="translated">콜론 ( '</target>
        </trans-unit>
        <trans-unit id="b7c26c8ed7bedbd3585cde8eb0b3f20655c38a74" translate="yes" xml:space="preserve">
          <source>A color in HSV space is represented by hue, saturation and value (brightness) levels in a cylindrical coordinate system. Hue is the azimuth and describes the dominant color. Saturation is the radial distance and gives the amount of hue mixed into the color. Value is the height and is the amount of light in the color.</source>
          <target state="translated">HSV 공간의 색상은 원통형 좌표계의 색조, 채도 및 값 (밝기) 수준으로 표시됩니다. 색조는 방위각이며 지배적 인 색상을 나타냅니다. 채도는 방사상 거리이며 색상에 혼합 된 색조의 양을 제공합니다. 값은 높이이며 색상의 빛의 양입니다.</target>
        </trans-unit>
        <trans-unit id="0071f2555301f34a4291008ac6c84b4aa495f16a" translate="yes" xml:space="preserve">
          <source>A color in the RGB space consists of red, green, and blue intensities.</source>
          <target state="translated">RGB 공간의 색상은 빨강, 녹색 및 파랑 강도로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="55ef44c20401ef330e2bef64ba9e61d49de7fb3c" translate="yes" xml:space="preserve">
          <source>A color property. &lt;var&gt;arg&lt;/var&gt; contains the default color value. When no default color is given, the property is set to black. An optional second string argument may be given to specify an additional set of accepted string values (like a radio property).</source>
          <target state="translated">색 속성입니다. &lt;var&gt;arg&lt;/var&gt; 는 기본 색상 값을 포함합니다. 기본 색상을 지정하지 않으면 속성이 검은 색으로 설정됩니다. 라디오 속성과 같은 추가 허용 문자열 값 집합을 지정하기 위해 선택적 두 번째 문자열 인수가 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="681cdf5941055c04944bef031b35f21e027075fe" translate="yes" xml:space="preserve">
          <source>A color value setting the text color for this menu entry.</source>
          <target state="translated">이 메뉴 항목의 텍스트 색상을 설정하는 색상 값입니다.</target>
        </trans-unit>
        <trans-unit id="e117aeda74dc853cf9096341ace527e06b1086ee" translate="yes" xml:space="preserve">
          <source>A colorbar displays the current colormap along with numerical rulings so that the color scale can be interpreted.</source>
          <target state="translated">컬러 바는 컬러 스케일을 해석 할 수 있도록 현재 컬러 맵을 숫자 판결과 함께 표시합니다.</target>
        </trans-unit>
        <trans-unit id="99e38ebc894dc9f178086caddb5e36c4dbbfc049" translate="yes" xml:space="preserve">
          <source>A colormap is a real matrix, of class single or double, with 3 columns. Each row represents a single color. The 3 columns contain red, green, and blue intensities respectively.</source>
          <target state="translated">컬러 맵은 3 열의 단일 또는 이중 클래스의 실제 행렬입니다. 각 행은 단일 색상을 나타냅니다. 3 개의 열은 각각 빨강, 녹색 및 파랑 강도를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="63e76adadfa4176fdb27d7c3b89f77b12d1c091a" translate="yes" xml:space="preserve">
          <source>A colour scheme for the display of astronomical intensity images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a90888cae8288c082dc80e77ea02b777c10001c" translate="yes" xml:space="preserve">
          <source>A column array containing the objective function coefficients.</source>
          <target state="translated">목적 함수 계수를 포함하는 열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="c670cbfad4c767d752687c65b6ea608deb71e87b" translate="yes" xml:space="preserve">
          <source>A column array containing the right-hand side value for each constraint in the constraint matrix.</source>
          <target state="translated">제약 조건 행렬의 각 제약 조건에 대한 오른쪽 값을 포함하는 열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="295af7d6cafd4ae5305291a8c9c49e118f04621c" translate="yes" xml:space="preserve">
          <source>A column array containing the types of the variables.</source>
          <target state="translated">변수 유형을 포함하는 열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="2ee64cd36a1be89b46d893bdebf4a8fa151fca68" translate="yes" xml:space="preserve">
          <source>A column vector is a 2-D array for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[N,&amp;nbsp;1]&lt;/code&gt; with non-negative N.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1688403c905798b3c11fdc1a4de1bb0d3aa8893b" translate="yes" xml:space="preserve">
          <source>A common application for sparse matrices is in the solution of Finite Element Models. Finite element models allow numerical solution of partial differential equations that do not have closed form solutions, typically because of the complex shape of the domain.</source>
          <target state="translated">희소 행렬의 일반적인 적용은 유한 요소 모델의 솔루션입니다. 유한 요소 모델을 사용하면 일반적으로 복잡한 모양의 영역으로 인해 닫힌 형태 솔루션이없는 부분 미분 방정식의 수치 해를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db6a0b3e577acb16b6e2b4641575933fc96c321b" translate="yes" xml:space="preserve">
          <source>A common example of when it does become necessary to convert ranges into vectors occurs when they appear within a vector (i.e., inside square brackets). For instance, whereas</source>
          <target state="translated">범위를 벡터로 변환해야하는 경우의 일반적인 예는 벡터 내에 표시 될 때 (즉, 대괄호 안에) 발생합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="035924cb9dd2edcef395fdcbb9d8144f2f1ae083" translate="yes" xml:space="preserve">
          <source>A common text for engineering courses is G. Strang,</source>
          <target state="translated">공학 과정의 일반적인 텍스트는 G. Strang입니다.</target>
        </trans-unit>
        <trans-unit id="941a2144b9cf79bd9e39fcb22caf03af4d8df4df" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;mlock&lt;/code&gt; is to prevent persistent variables from being removed from memory, as the following example shows:</source>
          <target state="translated">&lt;code&gt;mlock&lt;/code&gt; 의 일반적인 사용은 다음 예제와 같이 영속 변수가 메모리에서 제거되지 않도록 하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="12460cbec28d2114582b2bf40cffec65ae687b22" translate="yes" xml:space="preserve">
          <source>A compatibility wrapper function that will choose between &lt;code&gt;quadv&lt;/code&gt; and &lt;code&gt;quadgk&lt;/code&gt; depending on the integrand and options chosen.</source>
          <target state="translated">선택한 &lt;code&gt;quadv&lt;/code&gt; 및 옵션에 따라 quadv 와 &lt;code&gt;quadgk&lt;/code&gt; 중에서 선택할 수있는 호환성 래퍼 기능입니다 .</target>
        </trans-unit>
        <trans-unit id="b2756815221829e67112a55f6ac1a94555374fb9" translate="yes" xml:space="preserve">
          <source>A complete description of the command line editing capability is given in this manual, see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;.</source>
          <target state="translated">명령 행 편집 기능에 대한 자세한 설명은이 설명서에 나와 참조 &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;명령 줄 편집&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee9a34a24a2aab6ef2af0e58d918b103eff51e5a" translate="yes" xml:space="preserve">
          <source>A complete example showing the capabilities of text printing using the</source>
          <target state="translated">를 사용하여 텍스트 인쇄 기능을 보여주는 완전한 예제</target>
        </trans-unit>
        <trans-unit id="ae032f00f218a6e7a6e660d5e2cfa65046112f61" translate="yes" xml:space="preserve">
          <source>A complete input file that will reproduce the bug.</source>
          <target state="translated">버그를 재현하는 완전한 입력 파일.</target>
        </trans-unit>
        <trans-unit id="dbf0ad9336807af39f4067da1d30865c58a062ef" translate="yes" xml:space="preserve">
          <source>A complete list of any modifications you have made to the interpreter source.</source>
          <target state="translated">통역사 소스에 대한 수정 사항의 전체 목록.</target>
        </trans-unit>
        <trans-unit id="b402ea3a353c36ccbf82dd88a9b4048cc948b617" translate="yes" xml:space="preserve">
          <source>A complex array class defined in</source>
          <target state="translated">에 정의 된 복잡한 배열 클래스</target>
        </trans-unit>
        <trans-unit id="942861a100c0a359877a2a51d32ac80959118251" translate="yes" xml:space="preserve">
          <source>A complex matrix class defined in</source>
          <target state="translated">에 정의 된 복잡한 행렬 클래스</target>
        </trans-unit>
        <trans-unit id="03bdafc4f6f4120fd03b1522123f0b323b4cb8f9" translate="yes" xml:space="preserve">
          <source>A complex sparse matrix class</source>
          <target state="translated">복잡한 희소 행렬 클래스</target>
        </trans-unit>
        <trans-unit id="abb63d9fc1386ec4a2bdd078f60b0bba93573864" translate="yes" xml:space="preserve">
          <source>A computational procedure for incomplete gamma functions</source>
          <target state="translated">불완전한 감마 함수에 대한 계산 절차</target>
        </trans-unit>
        <trans-unit id="2480cd5e57d5abd30562a0898aa625d2fe1ad48f" translate="yes" xml:space="preserve">
          <source>A consequence is that &amp;ldquo;pulling back&amp;rdquo; on the up vector does not pitch the camera view (as that would require changing the target). Setting the up vector is thus typically used only to roll the camera. A more intuitive command for this purpose is &lt;a href=&quot;#XREFcamroll&quot;&gt;camroll&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cffa37fefe8d6e3ef4e2be483a05804584af43" translate="yes" xml:space="preserve">
          <source>A consequence is that &amp;ldquo;pulling back&amp;rdquo; on the up vector does not pitch the camera view (as that would require changing the target). Setting the up vector is thus typically used only to roll the camera. A more intuitive command for this purpose is see &lt;a href=&quot;#XREFcamroll&quot;&gt;camroll&lt;/a&gt;.</source>
          <target state="translated">결과적으로 위쪽 벡터의 &quot;풀백&quot;은 카메라 뷰에 영향을 미치지 않습니다 (대상을 변경해야 함). 따라서 업 벡터 설정은 일반적으로 카메라 롤링에만 사용됩니다. 이 목적을위한보다 직관적 인 명령은 &lt;a href=&quot;#XREFcamroll&quot;&gt;camroll을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b1d5b2fcafe6ce128a7bb71d7101fcdab50f3dd" translate="yes" xml:space="preserve">
          <source>A constant spacing between two points can be provided by the &lt;var&gt;s&lt;/var&gt; parameter. If &lt;var&gt;s&lt;/var&gt; is a scalar, it is assumed to be the spacing for all dimensions. Otherwise, separate values of the spacing can be supplied by the &lt;var&gt;x&lt;/var&gt;, &amp;hellip; arguments. Scalar values specify an equidistant spacing. Vector values for the &lt;var&gt;x&lt;/var&gt;, &amp;hellip; arguments specify the coordinate for that dimension. The length must match their respective dimension of &lt;var&gt;m&lt;/var&gt;.</source>
          <target state="translated">두 점 사이의 일정한 간격은 &lt;var&gt;s&lt;/var&gt; 매개 변수에 의해 제공 될 수 있습니다 . 경우 &lt;var&gt;s&lt;/var&gt; 스칼라, 모든 치수의 간격 인 것으로 가정된다. 그렇지 않으면 &lt;var&gt;x&lt;/var&gt; ,&amp;hellip; 인수 를 사용하여 간격의 개별 값을 제공 할 수 있습니다 . 스칼라 값은 등거리 간격을 지정합니다. &lt;var&gt;x&lt;/var&gt; ,&amp;hellip; 인수 의 벡터 값은 해당 차원의 좌표를 지정합니다. 길이는 각각의 치수 &lt;var&gt;m&lt;/var&gt; 과 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f5a15400c0317900c62a4253f589df6fa96abee1" translate="yes" xml:space="preserve">
          <source>A continuous variable.</source>
          <target state="translated">연속 변수.</target>
        </trans-unit>
        <trans-unit id="b64015e364344274f8cc02f91e54e4ad638fe182" translate="yes" xml:space="preserve">
          <source>A dash-dot line.</source>
          <target state="translated">점선.</target>
        </trans-unit>
        <trans-unit id="c39bac862d481be037715714bb5001566351a675" translate="yes" xml:space="preserve">
          <source>A data (matrix) property. &lt;var&gt;arg&lt;/var&gt; contains the default data value. When no default value is given, the data is initialized to the empty matrix.</source>
          <target state="translated">데이터 (행렬) 속성입니다. &lt;var&gt;arg&lt;/var&gt; 는 기본 데이터 값을 포함합니다. 기본값을 지정하지 않으면 데이터가 빈 행렬로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="2b9acd744f4c58a34c5645ff2443d70f7e284e42" translate="yes" xml:space="preserve">
          <source>A data structure containing the following fields:</source>
          <target state="translated">다음 필드를 포함하는 데이터 구조 :</target>
        </trans-unit>
        <trans-unit id="31dd06d1955ff5aae1285ddded19bd64c12ac500" translate="yes" xml:space="preserve">
          <source>A date vector is a row vector with six members, representing the year, month, day, hour, minute, and seconds respectively.</source>
          <target state="translated">날짜 벡터는 연도, 월, 일,시, 분 및 초를 각각 나타내는 6 개의 멤버가있는 행 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="ba23eed9640232b83c71d3f4c038396b9054bf80" translate="yes" xml:space="preserve">
          <source>A description of the envelope of the bug.</source>
          <target state="translated">버그 봉투에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="93bbcb3bdb9e968249cd8ad1bd6b1d446a8657f2" translate="yes" xml:space="preserve">
          <source>A description of what behavior you observe that you believe is incorrect. For example, &quot;The interpreter gets a fatal signal,&quot; or, &quot;The output produced at line 208 is incorrect.&quot;</source>
          <target state="translated">당신이 옳다고 믿는 행동에 대한 설명. 예를 들어, &quot;통역사가 치명적인 신호를받습니다&quot;또는 &quot;208 행에서 생성 된 출력이 올바르지 않습니다.&quot;</target>
        </trans-unit>
        <trans-unit id="c72c5903ff9532d253711f6aafe52e9bab4ac07b" translate="yes" xml:space="preserve">
          <source>A diagonal matrix can also be transposed or conjugate-transposed, giving the expected result. Extracting a leading submatrix of a diagonal matrix, i.e., &lt;code&gt;D(1:m,1:n)&lt;/code&gt;, will produce a diagonal matrix, other indexing expressions will implicitly convert to full matrix.</source>
          <target state="translated">대각 행렬도 전치 또는 켤레 전치 될 수있어 예상 결과를 얻을 수 있습니다. 대각선 행렬의 선행 하위 행렬을 추출하면 &lt;code&gt;D(1:m,1:n)&lt;/code&gt; 즉, D (1 : m, 1 : n)) 대각선 행렬이 생성되며 다른 인덱싱 표현식은 암시 적으로 전체 행렬로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="5dbda6360c640d99bd6d7b5644dc9f5ee7efcd96" translate="yes" xml:space="preserve">
          <source>A diagonal matrix is defined as a matrix that has zero entries outside the main diagonal; that is, &lt;code&gt;D(i,j) == 0&lt;/code&gt; if &lt;code&gt;i != j&lt;/code&gt;. Most often, square diagonal matrices are considered; however, the definition can equally be applied to non-square matrices, in which case we usually speak of a rectangular diagonal matrix.</source>
          <target state="translated">대각 행렬은 주 대각 외부에 항목이없는 행렬로 정의됩니다. 즉, &lt;code&gt;D(i,j) == 0&lt;/code&gt; 경우 &lt;code&gt;i != j&lt;/code&gt; . 대부분 정사각형 행렬이 고려됩니다. 그러나 정의는 비 정사각 행렬에도 동일하게 적용 할 수 있으며,이 경우 일반적으로 직사각형 대각 행렬을 말합니다.</target>
        </trans-unit>
        <trans-unit id="cfca3ce13bc9362b43c32a9099b8825c43b2f2bd" translate="yes" xml:space="preserve">
          <source>A difference between the oct-file interface to structures and the mex-file version is that the functions to operate on structures in mex-files directly include an &lt;code&gt;index&lt;/code&gt; over the elements of the arrays of elements per &lt;code&gt;field&lt;/code&gt;; Whereas, the oct-file structure includes a Cell Array per field of the structure.</source>
          <target state="translated">oct-file 인터페이스와 구조체와 mex- 파일 버전의 차이점은 mex-file의 구조체에서 작동하는 함수가 &lt;code&gt;field&lt;/code&gt; 당 요소 배열의 요소에 대한 &lt;code&gt;index&lt;/code&gt; 를 직접 포함한다는 것 입니다. . 한편, oct 파일 구조는 구조의 필드 당 셀 어레이를 포함한다.</target>
        </trans-unit>
        <trans-unit id="37d02b4ac8a4c10741808a258ba6eb73a9256ce0" translate="yes" xml:space="preserve">
          <source>A directory name or path name</source>
          <target state="translated">디렉토리 이름 또는 경로 이름</target>
        </trans-unit>
        <trans-unit id="b9eb4d05d4e071a7937cef862c44c7090eba678c" translate="yes" xml:space="preserve">
          <source>A documentation cache is generated for all functions in &lt;var&gt;directory&lt;/var&gt; which may be a single string or a cell array of strings. The cache is used to speed up the function &lt;code&gt;lookfor&lt;/code&gt;.</source>
          <target state="translated">단일 문자열 또는 문자열의 셀 배열 일 수있는 &lt;var&gt;directory&lt;/var&gt; 모든 기능에 대해 문서 캐시가 생성 됩니다. 캐시는 함수 &lt;code&gt;lookfor&lt;/code&gt; 속도를 높이는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2db886fd458e14ab9f4f594f252e60c06844a984" translate="yes" xml:space="preserve">
          <source>A double precision array class defined in</source>
          <target state="translated">에 정의 된 배정도 배열 클래스</target>
        </trans-unit>
        <trans-unit id="a5d4b80359110471e7dab263d7d4684d6538e500" translate="yes" xml:space="preserve">
          <source>A double precision matrix class defined in</source>
          <target state="translated">에 정의 된 배정도 행렬 클래스</target>
        </trans-unit>
        <trans-unit id="801fe23c4c8b1c014fcb2fdc2a32bfd8dbbd2c77" translate="yes" xml:space="preserve">
          <source>A double precision sparse matrix class</source>
          <target state="translated">배정도 희소 행렬 클래스</target>
        </trans-unit>
        <trans-unit id="bd5395f26dc70404075523a2c5f28f31b7dccd79" translate="yes" xml:space="preserve">
          <source>A figure window.</source>
          <target state="translated">그림 창.</target>
        </trans-unit>
        <trans-unit id="f5426a4ce5b762c7a8f0e15d7381d4ba834c06ff" translate="yes" xml:space="preserve">
          <source>A filename with spaces.txt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c95ed3dfd85fe88904aa31ec2dc7b64ce95803" translate="yes" xml:space="preserve">
          <source>A filled polygon, currently limited to two dimensions.</source>
          <target state="translated">채워진 다각형으로, 현재 2 차원으로 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="054b6597c06a3e64f093740eaaddb84177f9bb63" translate="yes" xml:space="preserve">
          <source>A fixed set of functions are &lt;em&gt;built-in&lt;/em&gt;, which means they are available in every Octave program. The &lt;code&gt;sqrt&lt;/code&gt; function is one of these. In addition, you can define your own functions. See &lt;a href=&quot;functions-and-scripts#Functions-and-Scripts&quot;&gt;Functions and Scripts&lt;/a&gt;, for information about how to do this.</source>
          <target state="translated">고정 기능 세트가 &lt;em&gt;내장&lt;/em&gt; 되어있어 모든 Octave 프로그램에서 사용할 수 있습니다. &lt;code&gt;sqrt&lt;/code&gt; 기능은 다음 중 하나입니다. 또한 고유 한 기능을 정의 할 수 있습니다. 이를 수행하는 방법에 대한 정보는 &lt;a href=&quot;functions-and-scripts#Functions-and-Scripts&quot;&gt;함수 및 스크립트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="686d6532b613192ff6f34f402ab65568b8de6e7e" translate="yes" xml:space="preserve">
          <source>A free (unbounded) constraint (the constraint is ignored).</source>
          <target state="translated">자유 (무제한) 제약 조건 (제약 조건은 무시 됨)</target>
        </trans-unit>
        <trans-unit id="8ceb4c40643cf8e2d8832e436bbab55515b95210" translate="yes" xml:space="preserve">
          <source>A full format string is:</source>
          <target state="translated">전체 형식 문자열은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8f3304cc1f77c43c57e3fe820db2694782e8f15" translate="yes" xml:space="preserve">
          <source>A function file may contain secondary functions called &lt;em&gt;subfunctions&lt;/em&gt;. These secondary functions are only visible to the other functions in the same function file. For example, a file</source>
          <target state="translated">함수 파일에는 &lt;em&gt;subfunctions&lt;/em&gt; 라는 보조 함수가 포함될 수 있습니다 . 이 보조 기능은 동일한 기능 파일의 다른 기능에서만 볼 수 있습니다. 예를 들어 파일</target>
        </trans-unit>
        <trans-unit id="0ed122a887a24a515b17391f1a46a31f8869f4e4" translate="yes" xml:space="preserve">
          <source>A function handle is a pointer to another function and is defined with the syntax</source>
          <target state="translated">함수 핸들은 다른 함수에 대한 포인터이며 구문으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ab8e2ddd3b09e4f37d34d49984fa6a35df38938e" translate="yes" xml:space="preserve">
          <source>A function handle to confirm if a file is of the specified format.</source>
          <target state="translated">파일이 지정된 형식인지 확인하는 함수 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="364404b55551df46478307eeabff830759b647c7" translate="yes" xml:space="preserve">
          <source>A function handle to obtain image information of the specified format.</source>
          <target state="translated">지정된 형식의 이미지 정보를 얻기위한 함수 핸들</target>
        </trans-unit>
        <trans-unit id="24ebf279aced20dda8b5424c6d7338b7c87a0140" translate="yes" xml:space="preserve">
          <source>A function handle to open files the specified format.</source>
          <target state="translated">지정된 형식으로 파일을 여는 함수 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="e62a153b1558dc304e583a7dcb3dc3745c3a628a" translate="yes" xml:space="preserve">
          <source>A function handle to write if a file is of the specified format.</source>
          <target state="translated">파일이 지정된 형식 인 경우 쓸 함수 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="5f0a0d3602a15b2207a0cd98cc59a8c585c757b6" translate="yes" xml:space="preserve">
          <source>A function may be abstracted and referenced via a function handle acquired using the special operator &amp;lsquo;</source>
          <target state="translated">특수 연산자 '를 사용하여 얻은 함수 핸들을 통해 함수를 추상화하고 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3cad8adcf5d78ef02a7d3a21f9e080af6be1ca6" translate="yes" xml:space="preserve">
          <source>A function much similar to &lt;code&gt;fputs&lt;/code&gt; is available for writing data to the screen. The &lt;code&gt;puts&lt;/code&gt; function works just like &lt;code&gt;fputs&lt;/code&gt; except it doesn&amp;rsquo;t take a file pointer as its input.</source>
          <target state="translated">화면에 데이터를 쓰는 데 &lt;code&gt;fputs&lt;/code&gt; 와 매우 유사한 기능을 사용할 수 있습니다. &lt;code&gt;puts&lt;/code&gt; 단지 같은 작품 기능 &lt;code&gt;fputs&lt;/code&gt; 를 그것의 입력으로 파일 포인터를 고려하지 않습니다 제외.</target>
        </trans-unit>
        <trans-unit id="582e025475f6a5d02a75a22ce4c469cc52a54312" translate="yes" xml:space="preserve">
          <source>A further constraint on the sparse matrix storage used by Octave is that all elements in the rows are stored in increasing order of their row index, which makes certain operations faster. However, it imposes the need to sort the elements on the creation of sparse matrices. Having disordered elements is potentially an advantage in that it makes operations such as concatenating two sparse matrices together easier and faster, however it adds complexity and speed problems elsewhere.</source>
          <target state="translated">Octave가 사용하는 희소 행렬 스토리지에 대한 추가 제한 사항은 행의 모든 ​​요소가 행 인덱스의 순서대로 증가하므로 특정 조작이 더 빠릅니다. 그러나 희소 행렬 생성시 요소를 정렬해야합니다. 무질서한 요소가 있으면 두 희소 행렬을 더 쉽고 빠르게 연결하는 것과 같은 작업을 더 쉽고 빠르게 수행 할 수 있다는 장점이 있지만 다른 곳에서는 복잡성과 속도 문제가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e13894eaead38d53d6f36de386b8f38a0e5f74b6" translate="yes" xml:space="preserve">
          <source>A general recommendation for users unfamiliar with these techniques is to use the function &lt;code&gt;repmat&lt;/code&gt; for replicating smaller arrays into bigger ones, which uses such tricks.</source>
          <target state="translated">이러한 기술에 익숙하지 않은 사용자를위한 일반적인 권고는 함수 사용하는 것입니다 &lt;code&gt;repmat&lt;/code&gt; 을 같은 트릭을 사용하여 더 큰 사람으로 작은 배열을 복제하는.</target>
        </trans-unit>
        <trans-unit id="0dcec2ca4569b2a4e18469d3dfaa691c89b82d65" translate="yes" xml:space="preserve">
          <source>A generalization of the function &lt;code&gt;diag&lt;/code&gt;.</source>
          <target state="translated">기능 &lt;code&gt;diag&lt;/code&gt; 의 일반화 .</target>
        </trans-unit>
        <trans-unit id="3dbee173e332e5c99b2a3a1328a55f5396b45190" translate="yes" xml:space="preserve">
          <source>A global installation (package available to all users) is forced, even if the user doesn&amp;rsquo;t normally have system privileges.</source>
          <target state="translated">사용자에게 일반적으로 시스템 권한이없는 경우에도 전역 설치 (모든 사용자가 사용할 수있는 패키지)가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="19161f9604f1d61305ac7f62d8b531f0231a2100" translate="yes" xml:space="preserve">
          <source>A global variable may only be initialized once in a &lt;code&gt;global&lt;/code&gt; statement. For example, after executing the following code</source>
          <target state="translated">전역 변수는 &lt;code&gt;global&lt;/code&gt; 명령문 에서 한 번만 초기화 될 수 있습니다 . 예를 들어 다음 코드를 실행 한 후</target>
        </trans-unit>
        <trans-unit id="60dd6403b95057f8a4c43a9bfa01f90e73080ed2" translate="yes" xml:space="preserve">
          <source>A handle property. This kind of property holds the handle of a graphics object. &lt;var&gt;arg&lt;/var&gt; contains the default handle value. When no default value is given, the property is initialized to the empty matrix.</source>
          <target state="translated">핸들 속성. 이러한 종류의 속성은 그래픽스 객체의 핸들을 유지합니다. &lt;var&gt;arg&lt;/var&gt; 는 기본 핸들 값을 포함합니다. 기본값을 지정하지 않으면 속성이 빈 행렬로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="27d728422847dc3ad34dcaed93aaebf774cfa448" translate="yes" xml:space="preserve">
          <source>A legend is implemented as an additional axes object with the &lt;code&gt;tag&lt;/code&gt; property set to &lt;code&gt;&quot;legend&quot;&lt;/code&gt;. Properties of the legend object may be manipulated directly by using &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">범례는 &lt;code&gt;tag&lt;/code&gt; 속성이 &lt;code&gt;&quot;legend&quot;&lt;/code&gt; 로 설정된 추가 좌표축 객체로 구현됩니다 . 범례 객체의 속성은 &lt;code&gt;set&lt;/code&gt; 을 사용하여 직접 조작 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0975e6d34467e02bd2ab618eb1bc363017b71293" translate="yes" xml:space="preserve">
          <source>A light object has the following properties which alter the appearance of the plot.</source>
          <target state="translated">라이트 객체에는 플롯의 모양을 변경하는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1140b71d332685184ec8f6ba1bd89e6364edc19" translate="yes" xml:space="preserve">
          <source>A light object used for lighting effects on patches and surfaces.</source>
          <target state="translated">패치 및 표면의 조명 효과에 사용되는 조명 개체입니다.</target>
        </trans-unit>
        <trans-unit id="5d4a394ddc07084f1a810731b239ff11b84d8201" translate="yes" xml:space="preserve">
          <source>A line in two or three dimensions.</source>
          <target state="translated">2 차원 또는 3 차원의 선.</target>
        </trans-unit>
        <trans-unit id="81e453d39f45cba6dab10b5c9a2efcd9f9f37519" translate="yes" xml:space="preserve">
          <source>A link starting with &amp;lsquo;</source>
          <target state="translated">'로 시작하는 링크</target>
        </trans-unit>
        <trans-unit id="a23de715efb48a1650ea08a445b7572ec30627c1" translate="yes" xml:space="preserve">
          <source>A list of default values to place in each text field. It must be a cell array of strings with the same size as &lt;var&gt;prompt&lt;/var&gt;.</source>
          <target state="translated">각 텍스트 필드에 배치 할 기본값 목록. &lt;var&gt;prompt&lt;/var&gt; 와 크기가 같은 문자열의 셀형 배열이어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="237eee3248f440f14e359f0c718126f5449202ad" translate="yes" xml:space="preserve">
          <source>A list of graphic handles can also be passed as the first argument. In this case, the properties of these handles and all child &lt;code&gt;patch&lt;/code&gt; and &lt;code&gt;surface&lt;/code&gt; objects will be updated.</source>
          <target state="translated">그래픽 핸들 목록을 첫 번째 인수로 전달할 수도 있습니다. 이 경우 이러한 핸들과 모든 하위 &lt;code&gt;patch&lt;/code&gt; 및 &lt;code&gt;surface&lt;/code&gt; 객체 의 속성 이 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="aaf98d776d983431ce711c89c1cdb67f92bfb207" translate="yes" xml:space="preserve">
          <source>A list of ideas for future enhancements is distributed with Octave. See the file</source>
          <target state="translated">향후 개선 사항에 대한 아이디어 목록이 Octave와 함께 배포됩니다. 파일보기</target>
        </trans-unit>
        <trans-unit id="355f66d6e206e944e255ab0441e43c187b7dc600" translate="yes" xml:space="preserve">
          <source>A list of other Octave packages that this package depends on. This can include dependencies on particular versions, with a format</source>
          <target state="translated">이 패키지가 의존하는 다른 Octave 패키지 목록. 형식과 함께 특정 버전에 대한 종속성을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="438148b2faed871538a1b8cc93519c64df6563f6" translate="yes" xml:space="preserve">
          <source>A list of the basic &lt;code&gt;Matrix&lt;/code&gt; and &lt;code&gt;Array&lt;/code&gt; types, the methods to extract these from an &lt;code&gt;octave_value&lt;/code&gt;, and the associated header file is listed below.</source>
          <target state="translated">기본 &lt;code&gt;Matrix&lt;/code&gt; 및 &lt;code&gt;Array&lt;/code&gt; 유형 의 목록 , &lt;code&gt;octave_value&lt;/code&gt; 에서이를 추출하는 방법 및 연관된 헤더 파일이 아래에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="273a87f975fe7ab5d3fd0095e893471231d94f6f" translate="yes" xml:space="preserve">
          <source>A local installation (package available only to current user) is forced, even if the user has system privileges.</source>
          <target state="translated">사용자에게 시스템 권한이 있어도 로컬 설치 (현재 사용자에게만 제공되는 패키지)가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="84384e9e91a9afc956d6134a6ea8fa6aa3b88f58" translate="yes" xml:space="preserve">
          <source>A long description of the file format.</source>
          <target state="translated">파일 형식에 대한 자세한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="fb3cbaf97d8fc4567b42ae741142ffc40785adab" translate="yes" xml:space="preserve">
          <source>A lower triangular matrix has nonzero entries only on the main diagonal and below.</source>
          <target state="translated">낮은 삼각 행렬은 주 대각선과 그 아래에만 0이 아닌 항목이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a08d1659acd8b181d2f9942666ae5232f802c11a" translate="yes" xml:space="preserve">
          <source>A magic square is an arrangement of the integers &lt;code&gt;1:n^2&lt;/code&gt; such that the row sums, column sums, and diagonal sums are all equal to the same value.</source>
          <target state="translated">마술 정사각형은 행 합, 열 합 및 대각선 합이 모두 같은 값 이되도록 정수 &lt;code&gt;1:n^2&lt;/code&gt; 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="880abe1e4b24a17f0236bb90192357dd17501aa2" translate="yes" xml:space="preserve">
          <source>A marker is plotted at each point defined by the coordinates in the vectors &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">벡터 &lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 의 좌표로 정의 된 각 점에 마커가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="d3997dd6f656e40e3ba67b87d9a39ecb521016c8" translate="yes" xml:space="preserve">
          <source>A marker is plotted at each point defined by the coordinates in the vectors &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt;.</source>
          <target state="translated">벡터 &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; 및 &lt;var&gt;z&lt;/var&gt; 의 좌표로 정의 된 각 지점에 마커가 표시됩니다. .</target>
        </trans-unit>
        <trans-unit id="876475c07c00dc7cd4ed839842e43be39fdcfa46" translate="yes" xml:space="preserve">
          <source>A matrix containing the RGB color map for the current axes.</source>
          <target state="translated">현재 좌표축의 RGB 색상 맵이 포함 된 행렬입니다.</target>
        </trans-unit>
        <trans-unit id="876edf03a06d0eabd3dd0306688bac1841eaf4f5" translate="yes" xml:space="preserve">
          <source>A matrix containing the constraints coefficients.</source>
          <target state="translated">구속 계수를 포함하는 행렬입니다.</target>
        </trans-unit>
        <trans-unit id="802149ca824936990503708821b1fe2917189f2b" translate="yes" xml:space="preserve">
          <source>A matrix is an object with two dimensions (&lt;code&gt;ndims (&lt;var&gt;x&lt;/var&gt;) == 2&lt;/code&gt;) for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[M,&amp;nbsp;N]&lt;/code&gt; with non-negative M and N.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62846ffff2be8b38f9b545d9b1b8507ba545fb81" translate="yes" xml:space="preserve">
          <source>A matrix is skew-Hermitian if the complex conjugate transpose of the matrix is equal to the negative of the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt;. If a tolerance is given then the calculation is &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">행렬의 복소 공액 전치가 원래 행렬의 음수와 같으면 행렬은 스큐-헤르 미 티아 (Skeh-Hermitian)입니다 : &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt; . 공차가 주어지면 계산은 &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ccaf76ee0469cafe57bb22b54ef72432b3602c73" translate="yes" xml:space="preserve">
          <source>A matrix is skew-symmetric if the transpose of the matrix is equal to the negative of the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt;. If a tolerance is given then skew-symmetry is determined by &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">행렬의 전치가 원래 행렬의 음수와 같으면 행렬이 비대칭입니다. &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;-&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt; . 공차가 주어지면 비대칭은 &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1fe3ea2614e4b44da3fa3bb47dd21a91f578c695" translate="yes" xml:space="preserve">
          <source>A matrix may have one or both dimensions zero, and operations on empty matrices are handled as described by Carl de Boor in</source>
          <target state="translated">행렬은 하나 또는 둘 다의 차원을 가질 수 있으며, 빈 행렬에 대한 연산은 Carl de Boor의 설명에 따라 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="57c4e353d8dffa3d72a1b7a1522d6ed41d683ce4" translate="yes" xml:space="preserve">
          <source>A matrix type that stores only the nonzero elements is generally called sparse. It is the purpose of this document to discuss the basics of the storage and creation of sparse matrices and the fundamental operations on them.</source>
          <target state="translated">0이 아닌 요소 만 저장하는 행렬 유형을 일반적으로 스파 스라고합니다. 이 문서의 목적은 희소 행렬의 저장 및 생성에 대한 기본 사항과 그 기본 작업에 대해 논의하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5b209221a2ff70a222661f4577821f9408840c79" translate="yes" xml:space="preserve">
          <source>A maximum of &lt;code&gt;length (&lt;var&gt;y0&lt;/var&gt;)&lt;/code&gt; components between &lt;var&gt;fixed_y0&lt;/var&gt; and &lt;var&gt;fixed_yp0&lt;/var&gt; may be chosen as fixed values.</source>
          <target state="translated">&lt;var&gt;fixed_y0&lt;/var&gt; 과 &lt;var&gt;fixed_yp0&lt;/var&gt; 사이 의 최대 &lt;code&gt;length (&lt;var&gt;y0&lt;/var&gt;)&lt;/code&gt; 성분은 고정 된 값으로 선택 될 수있다.</target>
        </trans-unit>
        <trans-unit id="d0c0fc7805755a7e41eaa111621b7acc9ecbc7bc" translate="yes" xml:space="preserve">
          <source>A message will be displayed as each of the startup files is read if you invoke Octave with the</source>
          <target state="translated">다음과 같이 Octave를 호출하면 각 시작 파일을 읽을 때 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bdf5cd13fbcc80a2f7ffca2e8d21f1b78822b807" translate="yes" xml:space="preserve">
          <source>A method taking either an argument of type &lt;code&gt;dim_vector&lt;/code&gt;, or, in the case of a matrix, two arguments of type &lt;code&gt;octave_idx_type&lt;/code&gt; defining the number of rows and columns in the matrix.</source>
          <target state="translated">&lt;code&gt;dim_vector&lt;/code&gt; 유형의 인수 또는 행렬의 경우 행렬 의 행과 열 수를 정의하는 &lt;code&gt;octave_idx_type&lt;/code&gt; 유형의 두 인수를 취하는 메소드 입니다.</target>
        </trans-unit>
        <trans-unit id="a034e359305036861d8e9cdd6e40654beea0f35c" translate="yes" xml:space="preserve">
          <source>A mouse button was pressed</source>
          <target state="translated">마우스 버튼을 눌렀습니다</target>
        </trans-unit>
        <trans-unit id="25e7fa639e4ac37c46720d056922d3437f614e9a" translate="yes" xml:space="preserve">
          <source>A mouse button was released</source>
          <target state="translated">마우스 버튼이 풀렸다</target>
        </trans-unit>
        <trans-unit id="c56190b5097e09dc25cddb63e861ca133713bbc8" translate="yes" xml:space="preserve">
          <source>A movie frame is simply a struct with the fields &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; and &lt;code&gt;&quot;colormap&quot;&lt;/code&gt;.</source>
          <target state="translated">무비 프레임은 단순히 &lt;code&gt;&quot;cdata&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;colormap&quot;&lt;/code&gt; 필드를 가진 구조체입니다 .</target>
        </trans-unit>
        <trans-unit id="6613fba3ee21879a3ed0169fda0b297a558ee707" translate="yes" xml:space="preserve">
          <source>A natural part of image processing is visualization of an image. The most basic function for this is the &lt;code&gt;imshow&lt;/code&gt; function that shows the image given in the first input argument.</source>
          <target state="translated">이미지 처리의 자연스러운 부분은 이미지의 시각화입니다. 가장 기본적인 기능 은 첫 번째 입력 인수에 제공된 이미지를 표시하는 &lt;code&gt;imshow&lt;/code&gt; 기능입니다.</target>
        </trans-unit>
        <trans-unit id="8668a137df2f43e8c9c400858d8ce1881cbeda4d" translate="yes" xml:space="preserve">
          <source>A newline is not required between the &lt;code&gt;do&lt;/code&gt; keyword and the body; but using one makes the program clearer unless the body is very simple.</source>
          <target state="translated">&lt;code&gt;do&lt;/code&gt; 키워드와 본문 사이에는 줄 바꿈이 필요하지 않습니다 . 그러나 하나를 사용하면 몸이 매우 단순하지 않으면 프로그램이 더 명확 해집니다.</target>
        </trans-unit>
        <trans-unit id="da05b6bc5dc58d23df4f188ff04aba97d394bd97" translate="yes" xml:space="preserve">
          <source>A newline is not required between the condition and the body; but using one makes the program clearer unless the body is very simple.</source>
          <target state="translated">상태와 신체 사이에 줄 바꿈이 필요하지 않습니다. 그러나 하나를 사용하면 몸이 매우 단순하지 않으면 프로그램이 더 명확 해집니다.</target>
        </trans-unit>
        <trans-unit id="f06fa6dee029880a80ed3523217d7de2614a58e8" translate="yes" xml:space="preserve">
          <source>A non-negative scalar &lt;var&gt;alpha&lt;/var&gt; for incomplete Cholesky factorization of &lt;code&gt;&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;alpha&lt;/var&gt; * diag (diag (&lt;var&gt;A&lt;/var&gt;))&lt;/code&gt; instead of &lt;var&gt;A&lt;/var&gt;. This can be useful when &lt;var&gt;A&lt;/var&gt; is not positive definite. The default value is 0.</source>
          <target state="translated">음이 아닌 스칼라 &lt;var&gt;alpha&lt;/var&gt; 불완전 촐레 스키 인수 분해 &lt;code&gt;&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;alpha&lt;/var&gt; * diag (diag (&lt;var&gt;A&lt;/var&gt;))&lt;/code&gt; &lt;var&gt;alpha&lt;/var&gt; * DIAG (DIAG ( )) 대신 . 이것은 &lt;var&gt;A&lt;/var&gt; 가 양의 한정이 아닌 경우에 유용 할 수 있습니다 . 기본값은 0입니다. &lt;var&gt;A&lt;/var&gt; &lt;var&gt;A&lt;/var&gt; &lt;var&gt;A&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="9d70682b8ccf24c8c116d29a8ce361956dfb1a54" translate="yes" xml:space="preserve">
          <source>A non-negative scalar specifying the drop tolerance for factorization if performing ICT. The default value is 0 which produces the complete Cholesky factorization.</source>
          <target state="translated">ICT를 수행하는 경우 인수 분해에 대한 드롭 허용 오차를 지정하는 음이 아닌 스칼라입니다. 기본값은 0이며 완전한 Cholesky 분해를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0a5d849ccd6af7dd2503258069c7984796ee6bcf" translate="yes" xml:space="preserve">
          <source>A non-negative scalar specifying the drop tolerance for factorization. The default value is 0 which produces the complete LU factorization.</source>
          <target state="translated">인수 분해에 대한 드롭 허용 오차를 지정하는 음이 아닌 스칼라입니다. 기본값은 0이며 완전한 LU 분해를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="bdcc7a0a1176e71582f5e7fa4f965fba11a63831" translate="yes" xml:space="preserve">
          <source>A note on terminology: &amp;ldquo;broadcasting&amp;rdquo; is the term popularized by the Numpy numerical environment in the Python programming language. In other programming languages and environments, broadcasting may also be known as &lt;em&gt;binary singleton expansion&lt;/em&gt; (BSX, in &lt;small&gt;MATLAB&lt;/small&gt;, and the origin of the name of the &lt;code&gt;bsxfun&lt;/code&gt; function), &lt;em&gt;recycling&lt;/em&gt; (R programming language), &lt;em&gt;single-instruction multiple data&lt;/em&gt; (SIMD), or &lt;em&gt;replication&lt;/em&gt;.</source>
          <target state="translated">용어에 대한 메모 : &quot;방송&quot;은 Python 프로그래밍 언어로 Numpy 수치 환경에서 널리 사용되는 용어입니다. 다른 프로그래밍 언어 및 환경에서 브로드 캐스트는 &lt;em&gt;이진 싱글 톤 확장&lt;/em&gt; (BSX, &lt;small&gt;MATLAB&lt;/small&gt; , &lt;code&gt;bsxfun&lt;/code&gt; 함수 이름의 원점 ), &lt;em&gt;재활용&lt;/em&gt; (R 프로그래밍 언어), &lt;em&gt;단일 명령 다중 데이터&lt;/em&gt; (SIMD), 또는 &lt;em&gt;복제&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fef0bcaeee1b91d74a0eb68bc4ea5fa850d0ba5d" translate="yes" xml:space="preserve">
          <source>A null string (&quot;&quot;) input to &lt;code&gt;error&lt;/code&gt; will be ignored and the code will continue running as if the statement were a NOP. This is for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;. It also makes it possible to write code such as</source>
          <target state="translated">에 널 (null) 문자열 ( &quot;&quot;) 입력 &lt;code&gt;error&lt;/code&gt; 무시되고 코드는 문이 NOP 것처럼 계속 실행됩니다. 이것은 &lt;small&gt;MATLAB&lt;/small&gt; 과의 호환성을위한 것 입니다. 또한 다음과 같은 코드를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fe70b77179968f141c8807bcedbec7dd07eeab7" translate="yes" xml:space="preserve">
          <source>A number of Octave high level plot functions return groups of other graphics objects or they return graphics objects that have their properties linked in such a way that changes to one of the properties results in changes in the others. A graphic object that groups other objects is an &lt;code&gt;hggroup&lt;/code&gt;</source>
          <target state="translated">많은 Octave 고수준 플롯 함수는 다른 그래픽스 객체 그룹을 반환하거나 속성 중 하나를 변경하면 다른 그래픽스 객체가 변경되는 방식으로 속성이 연결된 그래픽스 객체를 반환합니다. 다른 객체를 그룹화하는 그래픽 객체는 &lt;code&gt;hggroup&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac9cf4841f0b266db5d9c7eec35acab8ee0b8037" translate="yes" xml:space="preserve">
          <source>A number specifying the size of the marker. The default is 1. A value of 2 is twice as large as the default, etc.</source>
          <target state="translated">마커의 크기를 지정하는 숫자입니다. 기본값은 1입니다. 값 2는 기본값 등의 두 배입니다.</target>
        </trans-unit>
        <trans-unit id="046ca79528461655d58118b4f81ceead7e9d7811" translate="yes" xml:space="preserve">
          <source>A number specifying the width of the line. The default is 1. A value of 2 is twice as wide as the default, etc.</source>
          <target state="translated">선의 너비를 지정하는 숫자입니다. 기본값은 1입니다. 값 2는 기본값 등의 두 배입니다.</target>
        </trans-unit>
        <trans-unit id="7af2a03caeaf5901efd25cd0134e5507059b9f6a" translate="yes" xml:space="preserve">
          <source>A one line description of the package.</source>
          <target state="translated">패키지의 한 줄 설명.</target>
        </trans-unit>
        <trans-unit id="0fff21ff3c5e0d1105f326c82aef44681998a1fb" translate="yes" xml:space="preserve">
          <source>A one paragraph description of the package.</source>
          <target state="translated">패키지의 한 단락 설명.</target>
        </trans-unit>
        <trans-unit id="749a452f1917958d41c1cf02c0f96234502ff3fa" translate="yes" xml:space="preserve">
          <source>A particular problem of sparse matrices comes about due to the fact that as the zeros are not stored, the sign-bit of these zeros is equally not stored. In certain cases the sign-bit of zero is important. For example:</source>
          <target state="translated">희소 행렬의 특정 문제는 0이 저장되지 않기 때문에 이러한 0의 부호 비트가 동일하게 저장되지 않기 때문에 발생합니다. 어떤 경우에는 부호 비트 0이 중요합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="59d0e965cb3e2e472eb068ed0fd7276fd890b0b9" translate="yes" xml:space="preserve">
          <source>A patch for the bug. Patches can be helpful, but if you find a bug, you should report it, even if you cannot send a fix for the problem.</source>
          <target state="translated">버그 패치. 패치는 도움이 될 수 있지만 버그를 발견하면 문제에 대한 수정 사항을 보낼 수없는 경우에도 버그를보고해야합니다.</target>
        </trans-unit>
        <trans-unit id="05df32b4928ea8e5c03620a27636a8925e40b40f" translate="yes" xml:space="preserve">
          <source>A permutation matrix can also be returned from the built-in functions &lt;em&gt;lu&lt;/em&gt; and &lt;em&gt;qr&lt;/em&gt;, if a pivoted factorization is requested.</source>
          <target state="translated">피봇 팅 인수 분해가 요청되면 내장 함수 &lt;em&gt;lu&lt;/em&gt; 및 &lt;em&gt;qr&lt;/em&gt; 에서 순열 행렬을 반환 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10f787f5f1d612987bba65895204e32619c243b1" translate="yes" xml:space="preserve">
          <source>A permutation matrix can be transposed (or conjugate-transposed, which is the same, because a permutation matrix is never complex), inverting the permutation, or equivalently, turning a row-permutation matrix into a column-permutation one. For permutation matrices, transpose is equivalent to inversion, thus &lt;code&gt;P\M&lt;/code&gt; is equivalent to &lt;code&gt;P'*M&lt;/code&gt;. Transpose of a permutation matrix (or inverse) is a constant-time operation, flipping only a flag internally, and thus the choice between the two above equivalent expressions for inverse permuting is completely up to the user&amp;rsquo;s taste.</source>
          <target state="translated">순열 행렬은 전치 (또는 순열 행렬은 결코 복잡하지 않기 때문에 동일하다), 순열을 반전 시키거나 행-열 순열 행렬을 열 순열 행렬로 변환 할 수있다. 순열 행렬의 경우, 전치사는 반전과 같으므로 &lt;code&gt;P\M&lt;/code&gt; 은 &lt;code&gt;P'*M&lt;/code&gt; 과 같습니다 . 순열 행렬 (또는 역)의 전치는 상수 시간 연산이며 내부적으로 플래그 만 뒤집기 때문에 역 순열에 대한 위의 두 등가 표현 중에서 선택하는 것은 사용자의 취향에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e81a270e124e0cef9dce12f0610418fa896b0aa" translate="yes" xml:space="preserve">
          <source>A permutation matrix is defined as a square matrix that has a single element equal to unity in each row and each column; all other elements are zero. That is, there exists a permutation (vector) &lt;code&gt;p&lt;/code&gt; such that &lt;code&gt;P(i,j) == 1&lt;/code&gt; if &lt;code&gt;j == p(i)&lt;/code&gt; and &lt;code&gt;P(i,j) == 0&lt;/code&gt; otherwise.</source>
          <target state="translated">순열 행렬은 각 행과 각 열에서 단일과 동일한 단일 요소를 갖는 정사각 행렬로 정의됩니다. 다른 모든 요소는 0입니다. 즉, 순열 (벡터)가 존재 &lt;code&gt;p&lt;/code&gt; 등이 &lt;code&gt;P(i,j) == 1&lt;/code&gt; 경우 &lt;code&gt;j == p(i)&lt;/code&gt; 및 &lt;code&gt;P(i,j) == 0&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="5172efe6bd439987aa3d770f9a060753bd1e71c0" translate="yes" xml:space="preserve">
          <source>A positive &lt;var&gt;k&lt;/var&gt; leads to a left shift; A negative value to a right shift.</source>
          <target state="translated">양수 &lt;var&gt;k&lt;/var&gt; 는 왼쪽으로 이동합니다. 오른쪽으로 이동하면 음수입니다.</target>
        </trans-unit>
        <trans-unit id="ccada10b3ac099a3cccac6c6a5278ea950e38c89" translate="yes" xml:space="preserve">
          <source>A prime number is conventionally defined as a positive integer greater than 1 (e.g., 2, 3, &amp;hellip;) which is divisible only by itself and 1. Octave extends this definition to include both negative integers and complex values. A negative integer is prime if its positive counterpart is prime. This is equivalent to &lt;code&gt;isprime (abs (x))&lt;/code&gt;.</source>
          <target state="translated">소수는 통상적으로 1보다 큰 양의 정수 (예를 들어, 2, 3,&amp;hellip;)로 정의되며, 이는 그 자체로만 나눌 수 있으며 1입니다. 옥타브는 음의 정수와 복소수 값을 모두 포함하도록이 정의를 확장합니다. 양의 정수가 소수이면 음의 정수가 소수입니다. 이것은 &lt;code&gt;isprime (abs (x))&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="894a4321b5694298a6fa7d739925292632045ff8" translate="yes" xml:space="preserve">
          <source>A radio property that can have the values &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt; that flags whether the contours to plot are to be filled.</source>
          <target state="translated">플롯 할 윤곽을 채울지 여부를 표시하는 &lt;code&gt;&quot;on&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;off&quot;&lt;/code&gt; 값을 가질 수있는 라디오 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="9f4db59002920effe685164ac31a79c68e4a38bc" translate="yes" xml:space="preserve">
          <source>A rational approximation to a floating point number is a simple fraction with numerator &lt;var&gt;N&lt;/var&gt; and denominator &lt;var&gt;D&lt;/var&gt; such that &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;N&lt;/var&gt;/&lt;var&gt;D&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7d850accb4d6fabe8a78c8431b972457d5d952" translate="yes" xml:space="preserve">
          <source>A read only property that contains the data return by &lt;code&gt;contourc&lt;/code&gt; used to create the contours of the plot.</source>
          <target state="translated">플롯의 윤곽을 만드는 데 사용 된 &lt;code&gt;contourc&lt;/code&gt; 에 의해 반환 된 데이터를 포함하는 읽기 전용 속성입니다 .</target>
        </trans-unit>
        <trans-unit id="69e04189193089ae517b20c2d237c918a44b23d2" translate="yes" xml:space="preserve">
          <source>A repeat instruction &lt;var&gt;R_j&lt;/var&gt; must either be a scalar or a vector. If the instruction is a scalar then each component of &lt;var&gt;x&lt;/var&gt; in dimension &lt;var&gt;j&lt;/var&gt; is repeated &lt;var&gt;R_j&lt;/var&gt; times. If the instruction is a vector then it must have the same number of elements as the corresponding dimension &lt;var&gt;j&lt;/var&gt; of &lt;var&gt;x&lt;/var&gt;. In this case, the &lt;var&gt;k&lt;/var&gt;th component of dimension &lt;var&gt;j&lt;/var&gt; is repeated &lt;code&gt;&lt;var&gt;R_j&lt;/var&gt;(&lt;var&gt;k&lt;/var&gt;)&lt;/code&gt; times.</source>
          <target state="translated">반복 명령어 &lt;var&gt;R_j&lt;/var&gt; 는 스칼라 또는 벡터 여야합니다. 명령어가 스칼라이면 차원 &lt;var&gt;j&lt;/var&gt; 에서 &lt;var&gt;x&lt;/var&gt; 의 각 구성 요소는 &lt;var&gt;R_j&lt;/var&gt; 번 반복 됩니다. 명령어가 벡터 인 경우 해당 치수 &lt;var&gt;j&lt;/var&gt; 의 &lt;var&gt;x&lt;/var&gt; 와 동일한 수의 요소를 가져야합니다 . 이 경우, &lt;var&gt;k&lt;/var&gt; 차원의 번째 요소 &lt;var&gt;j&lt;/var&gt; 는 반복 &lt;code&gt;&lt;var&gt;R_j&lt;/var&gt;(&lt;var&gt;k&lt;/var&gt;)&lt;/code&gt; ( &lt;var&gt;k&lt;/var&gt; ) 회.</target>
        </trans-unit>
        <trans-unit id="94218839f0f416b86774956970dc89278b1b27f3" translate="yes" xml:space="preserve">
          <source>A row vector is a 2-D array for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[1,&amp;nbsp;N]&lt;/code&gt; with non-negative N.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d45094648ec6971abaccf23276021d7fb2816eb" translate="yes" xml:space="preserve">
          <source>A row vector that selects which dimensions of the calculation will appear in the output &lt;var&gt;y&lt;/var&gt;. This is only useful when &lt;var&gt;fcn&lt;/var&gt; returns an N-dimensional array in Format 1. The default is to return all output dimensions.</source>
          <target state="translated">출력 &lt;var&gt;y&lt;/var&gt; 에 표시 될 계산의 차원을 선택하는 행 벡터입니다 . &lt;var&gt;fcn&lt;/var&gt; 이 형식 1의 N 차원 배열을 반환 할 때만 유용합니다 . 기본값은 모든 출력 차원을 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ebf103c27e763ab76f8f02db9c5ba3e5d70235e6" translate="yes" xml:space="preserve">
          <source>A sample usage of &lt;code&gt;mysparse&lt;/code&gt; is</source>
          <target state="translated">의 샘플 사용 &lt;code&gt;mysparse&lt;/code&gt; 가 있다</target>
        </trans-unit>
        <trans-unit id="c4aa2642c1fb9d6e349c04dbd562bccaab99ff75" translate="yes" xml:space="preserve">
          <source>A scalar double property. &lt;var&gt;arg&lt;/var&gt; contains the default value.</source>
          <target state="translated">스칼라 double 속성입니다. &lt;var&gt;arg&lt;/var&gt; 는 기본값을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="ea338826aab9d3ac5d3cf2db5b5dc296ed8745aa" translate="yes" xml:space="preserve">
          <source>A scalar is an object with two dimensions for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[1,&amp;nbsp;1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8fb51b130b07ce737c414d4008a1b870e3c24b" translate="yes" xml:space="preserve">
          <source>A script file also differs from a function file in that the variables named in a script file are not local variables, but are in the same scope as the other variables that are visible on the command line.</source>
          <target state="translated">스크립트 파일은 스크립트 파일에 이름이 지정된 변수가 로컬 변수가 아니라 명령 줄에 표시되는 다른 변수와 동일한 범위에 있다는 점에서 함수 파일과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8754228e7ba2fb5bfeaab5c8e64bc2d86c833015" translate="yes" xml:space="preserve">
          <source>A script file is a file containing (almost) any sequence of Octave commands. It is read and evaluated just as if you had typed each command at the Octave prompt, and provides a convenient way to perform a sequence of commands that do not logically belong inside a function.</source>
          <target state="translated">스크립트 파일은 거의 모든 Octave 명령 시퀀스를 포함하는 파일입니다. 옥타브 프롬프트에서 각 명령을 입력 한 것처럼 읽고 평가하며 함수 내에 논리적으로 속하지 않은 일련의 명령을 편리하게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06e1a90b4660ebca36e9c79a5596b38ddc22ad5e" translate="yes" xml:space="preserve">
          <source>A second use of indexing is to speed up code. Indexing is a fast operation and judicious use of it can reduce the requirement for looping over individual array elements, which is a slow operation.</source>
          <target state="translated">인덱싱의 두 번째 용도는 코드 속도를 높이는 것입니다. 인덱싱은 빠른 작업이며 신중하게 사용하면 개별 배열 요소에 대한 루프 요구 사항을 줄일 수 있으며 이는 느린 작업입니다.</target>
        </trans-unit>
        <trans-unit id="741f4f59979ad695e8715f9bbd0aa7e5c54c43b5" translate="yes" xml:space="preserve">
          <source>A section is started by typing &amp;lsquo;</source>
          <target state="translated">'를 입력하면 섹션이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="464c66725542d8fd8ec18f2c159070c499c7a82c" translate="yes" xml:space="preserve">
          <source>A section starting in the first line of the document, followed by another start of a section that might be empty, is interpreted as a document title and introduction text.</source>
          <target state="translated">문서의 첫 번째 줄에서 시작하여 비어있을 수있는 섹션이 다시 시작되는 섹션은 문서 제목 및 소개 텍스트로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="8d4602359e44015b9f8f6cf54deb5b42c08fbfa9" translate="yes" xml:space="preserve">
          <source>A set of axes. This object is a child of a figure object and may be a parent of line, text, image, patch, surface, or light objects.</source>
          <target state="translated">축 세트. 이 개체는 도형 개체의 자식이며 선, 텍스트, 이미지, 패치, 표면 또는 밝은 개체의 부모 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77c1f2b6fba48df815c63eaf3a1207fea9c4605b" translate="yes" xml:space="preserve">
          <source>A significant difference between &lt;code&gt;interpn&lt;/code&gt; and the other two multi-dimensional interpolation functions is the fashion in which the dimensions are treated. For &lt;code&gt;interp2&lt;/code&gt; and &lt;code&gt;interp3&lt;/code&gt;, the y-axis is considered to be the columns of the matrix, whereas the x-axis corresponds to the rows of the array. As Octave indexes arrays in column major order, the first dimension of any array is the columns, and so &lt;code&gt;interpn&lt;/code&gt; effectively reverses the &amp;rsquo;x&amp;rsquo; and &amp;rsquo;y&amp;rsquo; dimensions. Consider the example,</source>
          <target state="translated">&lt;code&gt;interpn&lt;/code&gt; 과 다른 두 가지 다차원 보간 함수 의 중요한 차이점 은 치수가 처리되는 방식입니다. 에 대한 &lt;code&gt;interp2&lt;/code&gt; 및 &lt;code&gt;interp3&lt;/code&gt; Y 축 배열의 행을 X 축에 대응하는 반면, 매트릭스의 열 것으로 간주된다. 옥타브는 열의 주요 순서로 배열을 인덱싱 할 때 모든 배열의 첫 번째 차원은 열이므로 &lt;code&gt;interpn&lt;/code&gt; 은 'x'와 'y'차원을 효과적으로 반대로 바꿉니다. 예를 들어 보자.</target>
        </trans-unit>
        <trans-unit id="4fe58535f02b307832ea659219b9dbefb8113607" translate="yes" xml:space="preserve">
          <source>A similar function &lt;code&gt;run&lt;/code&gt; exists for calling user script files, that are not necessarily on the user path</source>
          <target state="translated">반드시 사용자 경로에있는 것은 아닌 사용자 스크립트 파일을 호출하기위한 비슷한 기능 &lt;code&gt;run&lt;/code&gt; 이 존재합니다.</target>
        </trans-unit>
        <trans-unit id="ea2162a3f58581870b73603346de0063ada4fe71" translate="yes" xml:space="preserve">
          <source>A simple example comes from chemistry and the need to obtain balanced chemical equations. Consider the burning of hydrogen and oxygen to produce water.</source>
          <target state="translated">간단한 예는 화학과 균형 잡힌 화학 방정식을 얻을 필요성에서 비롯됩니다. 물을 생산하기 위해 수소와 산소를 태우는 것을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="366cad87b39df44591f105f809ee0e3afe252a9f" translate="yes" xml:space="preserve">
          <source>A simple example demonstrating the use of structures within oct-files is</source>
          <target state="translated">oct 파일 내에서 구조의 사용을 보여주는 간단한 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8f8e391b3304e6ad3aec99007fb937313aa2c9b" translate="yes" xml:space="preserve">
          <source>A simple way of preventing the above from happening is to create a temporary constant version of the sparse matrix. Note that only the container for the sparse matrix will be copied, while the actual representation of the data will be shared between the two versions of the sparse matrix; This is not a costly operation. The example above, re-written to prevent sparse-to-dense conversion, is</source>
          <target state="translated">위의 상황을 방지하는 간단한 방법은 임시 상수 버전의 희소 행렬을 만드는 것입니다. 희소 행렬에 대한 컨테이너 만 복사되는 반면, 실제 데이터 표현은 두 가지 희소 행렬 버전간에 공유됩니다. 이것은 비용이 많이 드는 작업이 아닙니다. 희박-밀도 변환을 방지하기 위해 다시 작성된 위의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1a232969e74ea01cbd885e3ef5912841f816e579" translate="yes" xml:space="preserve">
          <source>A single dimension of the return matrix may be left unspecified and Octave will determine its size automatically. An empty matrix ([]) is used to flag the unspecified dimension.</source>
          <target state="translated">리턴 매트릭스의 단일 차원은 지정되지 않은 채로있을 수 있으며 옥타브는 자동으로 크기를 결정합니다. 빈 행렬 ([])은 지정되지 않은 차원을 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bdb7f6d956fd1624df1e812b9d72f101f4160a36" translate="yes" xml:space="preserve">
          <source>A single dynamically linked file might define several functions. However, as Octave searches for functions based on the functions filename, Octave needs a manner in which to find each of the functions in the dynamically linked file. On operating systems that support symbolic links, it is possible to create a symbolic link to the original file for each of the functions which it contains.</source>
          <target state="translated">하나의 동적 링크 파일이 여러 기능을 정의 할 수 있습니다. 그러나 Octave는 함수 파일 이름을 기준으로 함수를 검색 할 때 동적으로 연결된 파일에서 각 함수를 찾는 방법이 필요합니다. 심볼릭 링크를 지원하는 운영 체제에서는 포함 된 각 기능에 대해 원본 파일에 대한 심볼릭 링크를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1e06450a49a0c2fe77d0fafe65d3410358b5d9a" translate="yes" xml:space="preserve">
          <source>A single file extension &lt;code&gt;&quot;*.ext&quot;&lt;/code&gt;</source>
          <target state="translated">단일 파일 확장자 &lt;code&gt;&quot;*.ext&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea54309ffd7f73d15e80b8ab8fa3e3b6c4638801" translate="yes" xml:space="preserve">
          <source>A single file extension. Example: &lt;code&gt;uiputfile (&quot;*.ext&quot;)&lt;/code&gt;</source>
          <target state="translated">단일 파일 확장자. 예 : &lt;code&gt;uiputfile (&quot;*.ext&quot;)&lt;/code&gt; . ext&quot;)</target>
        </trans-unit>
        <trans-unit id="4eadc5147d1db017fb10ae51f12569648ee5ff77" translate="yes" xml:space="preserve">
          <source>A single statement may not be enough of an example&amp;mdash;the bug might depend on other details that are missing from the single statement where the error finally occurs.</source>
          <target state="translated">하나의 문장만으로는 충분하지 않을 수 있습니다. 버그는 오류가 발생한 단일 문장에서 누락 된 다른 세부 사항에 따라 달라질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1546f7635196668d2cc7578a223310b6f38f1120" translate="yes" xml:space="preserve">
          <source>A slightly more complex example of &lt;code&gt;varargin&lt;/code&gt; is a function &lt;code&gt;print_arguments&lt;/code&gt; that prints all input arguments. Such a function can be defined like this</source>
          <target state="translated">&lt;code&gt;varargin&lt;/code&gt; 의 좀 더 복잡한 예는 모든 입력 인수를 인쇄하는 &lt;code&gt;print_arguments&lt;/code&gt; 함수 입니다. 이러한 기능은 다음과 같이 정의 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6725c15f56367c35b6d6b022eaee02395ea6105e" translate="yes" xml:space="preserve">
          <source>A sparse boolean matrix whose structure is that of the Cholesky factorization as determined by &lt;var&gt;typ&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;typ&lt;/var&gt; 에 의해 결정된 Cholesky 인수 분해의 구조 인 희소 부울 행렬입니다 .</target>
        </trans-unit>
        <trans-unit id="c62f9fa30258d36224514df212dffdadc55712fb" translate="yes" xml:space="preserve">
          <source>A special case of broadcasting that may be familiar is when all dimensions of the array being broadcast are 1, i.e., the array is a scalar. Thus for example, operations like &lt;code&gt;x - 42&lt;/code&gt; and &lt;code&gt;max
(x, 2)&lt;/code&gt; are basic examples of broadcasting.</source>
          <target state="translated">친숙 할 수있는 특별한 방송의 경우는 방송중인 어레이의 모든 차원이 1 인 경우, 즉 어레이가 스칼라 인 경우이다. 따라서 예를 들어 &lt;code&gt;x - 42&lt;/code&gt; 및 &lt;code&gt;max (x, 2)&lt;/code&gt; 와 같은 작업 이 브로드 캐스트의 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="a3597f16fbe80b50385888f4698a91512a605c27" translate="yes" xml:space="preserve">
          <source>A special form of the &lt;code&gt;for&lt;/code&gt; statement allows you to loop over all the elements of a structure:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 문의 특별한 형식을 사용하면 구조체의 모든 요소를 ​​반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b64d8733c32dbc141aae89769142ad175178cd93" translate="yes" xml:space="preserve">
          <source>A specified logical operator may be used between &lt;var&gt;prop_name&lt;/var&gt;, &lt;var&gt;prop_value&lt;/var&gt; pairs. The supported logical operators are: &lt;code&gt;&quot;-and&quot;&lt;/code&gt;, &lt;code&gt;&quot;-or&quot;&lt;/code&gt;, &lt;code&gt;&quot;-xor&quot;&lt;/code&gt;, &lt;code&gt;&quot;-not&quot;&lt;/code&gt;. Example code to locate all figure and axes objects is</source>
          <target state="translated">&lt;var&gt;prop_name&lt;/var&gt; , &lt;var&gt;prop_value&lt;/var&gt; 쌍 사이에 지정된 논리 연산자를 사용할 수 있습니다 . 지원되는 논리 연산자는 &lt;code&gt;&quot;-and&quot;&lt;/code&gt; , &lt;code&gt;&quot;-or&quot;&lt;/code&gt; , &lt;code&gt;&quot;-xor&quot;&lt;/code&gt; , &lt;code&gt;&quot;-not&quot;&lt;/code&gt; 입니다. 모든 Figure 및 axes 객체를 찾는 예제 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="247e4d8a569dfb5457d0f2ad98d12ce5e395fe3a" translate="yes" xml:space="preserve">
          <source>A square array is a 2-D object for which &lt;code&gt;size (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;[N,&amp;nbsp;N]&lt;/code&gt; where N is a non-negative integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fe009815af64c05a168911fd0e47d1c490779d" translate="yes" xml:space="preserve">
          <source>A string array is a data type that stores strings (row vectors of characters) at each element in the array. It is distinct from character arrays which are N-dimensional arrays where each element is a single 1x1 character. It is also distinct from cell arrays of strings which store strings at each element, but use cell indexing &amp;lsquo;</source>
          <target state="translated">문자열 배열은 배열의 각 요소에 문자열 (행의 문자 벡터)을 저장하는 데이터 유형입니다. 각 요소가 단일 1x1 문자 인 N 차원 배열 인 문자 배열과는 다릅니다. 또한 각 요소에 문자열을 저장하지만 셀 인덱싱을 사용하는 문자열의 셀형 배열과는 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d280177b44fc499656b8fad42980123998406840" translate="yes" xml:space="preserve">
          <source>A string containing the key combination together with CTRL to execute this menu entry (e.g., &lt;code&gt;&quot;x&quot;&lt;/code&gt; for CTRL+x).</source>
          <target state="translated">이 메뉴 항목을 실행하기 위해 CTRL과 함께 키 조합을 포함하는 문자열입니다 (예 : CTRL + x의 경우 &lt;code&gt;&quot;x&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="11473e300b42571ceb0d8860375604c7732af315" translate="yes" xml:space="preserve">
          <source>A string containing the label for this menu entry. A &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;-symbol can be used to mark the &lt;code&gt;&quot;accelerator&quot;&lt;/code&gt; character (e.g., &lt;code&gt;&quot;E&amp;amp;xit&quot;&lt;/code&gt;)</source>
          <target state="translated">이 메뉴 항목의 레이블이 포함 된 문자열입니다. (A)는 &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; -symbol 마크하는데 사용될 수있다 &lt;code&gt;&quot;accelerator&quot;&lt;/code&gt; 의 문자 (예를 들면, &lt;code&gt;&quot;E&amp;amp;xit&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="13c22056b7b7ae01c5ed4f0ef9e75034c65dac10" translate="yes" xml:space="preserve">
          <source>A string is returned if &lt;var&gt;template&lt;/var&gt; specifies only character conversions.</source>
          <target state="translated">&lt;var&gt;template&lt;/var&gt; 문자 변환 만 지정 하면 문자열이 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="c7bace0a403241de19c07a07e6cad29cdf559de0" translate="yes" xml:space="preserve">
          <source>A string property with a limited set of accepted values. The first argument must be a string with all accepted values separated by a vertical bar (&amp;rsquo;|&amp;rsquo;). The default value can be marked by enclosing it with a &amp;rsquo;{&amp;rsquo; &amp;rsquo;}&amp;rsquo; pair. The default value may also be given as an optional second string argument.</source>
          <target state="translated">허용되는 값 집합이 제한된 문자열 속성입니다. 첫 번째 인수는 모든 허용 값이 세로 막대 ( '|')로 구분 된 문자열이어야합니다. 기본값은 '{' '}'쌍으로 묶어 표시 할 수 있습니다. 기본값은 선택적 두 번째 문자열 인수로 제공 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c332a4ac079cce393ef90ca8f020101385dd42c" translate="yes" xml:space="preserve">
          <source>A string property. &lt;var&gt;arg&lt;/var&gt; contains the default string value.</source>
          <target state="translated">문자열 속성 &lt;var&gt;arg&lt;/var&gt; 는 기본 문자열 값을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="8548824d7d6d8941d5b2f200b42998797917e3d9" translate="yes" xml:space="preserve">
          <source>A string specifying the method of integration to use to solve the ODE system. Valid values are</source>
          <target state="translated">ODE 시스템을 해결하는 데 사용할 통합 방법을 지정하는 문자열입니다. 유효한 값은</target>
        </trans-unit>
        <trans-unit id="5ad885f2de5ee526d84a503678ffc0c4440dd333" translate="yes" xml:space="preserve">
          <source>A struct with geotagging information retrieved from the Exif tag.</source>
          <target state="translated">Exif 태그에서 검색된 지오 태깅 정보가있는 구조체입니다.</target>
        </trans-unit>
        <trans-unit id="29ceab86692c7428bfcf898197bedf30dc0b0fec" translate="yes" xml:space="preserve">
          <source>A struct with information retrieved from the Exif tag.</source>
          <target state="translated">Exif 태그에서 정보를 검색 한 구조체.</target>
        </trans-unit>
        <trans-unit id="01b5f6a88a72f9fe25f14d92b2a89ed4ed269c18" translate="yes" xml:space="preserve">
          <source>A structure array is a particular instance of a structure, where each of the fields of the structure is represented by a cell array. Each of these cell arrays has the same dimensions. Conceptually, a structure array can also be seen as an array of structures with identical fields. An example of the creation of a structure array is</source>
          <target state="translated">구조 배열은 구조의 특정 인스턴스이며, 구조의 각 필드는 셀형 배열로 표시됩니다. 이러한 각 셀 배열의 치수는 동일합니다. 개념적으로 구조 배열은 동일한 필드를 가진 구조의 배열로 볼 수도 있습니다. 구조 체형 배열을 만드는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00848104e76f370b94e55e23ada6df4b1ef250ee" translate="yes" xml:space="preserve">
          <source>A structure containing information on where the message occurred. This may be an empty structure if the information cannot be obtained. The fields of the structure are:</source>
          <target state="translated">메시지가 발생한 위치에 대한 정보를 포함하는 구조입니다. 정보를 얻을 수없는 경우 빈 구조 일 수 있습니다. 구조의 필드는 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="afffec128f2cec4ccdbab6d3ff3e0151670292c6" translate="yes" xml:space="preserve">
          <source>A structure containing the following parameters used to define the behavior of solver. Missing elements in the structure take on default values, so you only need to set the elements that you wish to change from the default.</source>
          <target state="translated">솔버의 동작을 정의하는 데 사용되는 다음 매개 변수를 포함하는 구조입니다. 구조에서 누락 된 요소는 기본값을 사용하므로 기본값에서 변경하려는 요소 만 설정하면됩니다.</target>
        </trans-unit>
        <trans-unit id="3622f981a8c7b590bb7be0445a118c3b23b1efad" translate="yes" xml:space="preserve">
          <source>A structure containing the system CPU time used. The structure has the elements &lt;code&gt;sec&lt;/code&gt; (seconds) &lt;code&gt;usec&lt;/code&gt; (microseconds).</source>
          <target state="translated">사용 된 시스템 CPU 시간을 포함하는 구조입니다. 구조는 &lt;code&gt;sec&lt;/code&gt; (초) &lt;code&gt;usec&lt;/code&gt; (마이크로 초) 요소를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="62f4f36a56b89f46d36b14b87481ca9e5e1836b0" translate="yes" xml:space="preserve">
          <source>A structure containing the text of each matched named token, with the name being used as the fieldname. A named token is denoted by &lt;code&gt;(?&amp;lt;name&amp;gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">일치하는 이름이 지정된 각 토큰의 텍스트를 포함하는 구조로, 이름이 fieldname으로 사용됩니다. 명명 된 토큰은 &lt;code&gt;(?&amp;lt;name&amp;gt;&amp;hellip;)&lt;/code&gt; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="026c578a70b2dba180a0a93ea57400a36403f475" translate="yes" xml:space="preserve">
          <source>A structure containing the user CPU time used. The structure has the elements &lt;code&gt;sec&lt;/code&gt; (seconds) &lt;code&gt;usec&lt;/code&gt; (microseconds).</source>
          <target state="translated">사용 된 사용자 CPU 시간을 포함하는 구조입니다. 구조는 &lt;code&gt;sec&lt;/code&gt; (초) &lt;code&gt;usec&lt;/code&gt; (마이크로 초) 요소를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="6b6219e800f7360ad148cb19ca993ed342801592" translate="yes" xml:space="preserve">
          <source>A structure in Octave is a map between a number of fields represented and their values. The Standard Template Library &lt;code&gt;map&lt;/code&gt; class is used, with the pair consisting of a &lt;code&gt;std::string&lt;/code&gt; and an Octave &lt;code&gt;Cell&lt;/code&gt; variable.</source>
          <target state="translated">옥타브의 구조는 표현 된 여러 필드와 해당 값 사이의 맵입니다. 표준 템플리트 라이브러리 &lt;code&gt;map&lt;/code&gt; 클래스가 사용되며 쌍은 &lt;code&gt;std::string&lt;/code&gt; 및 Octave &lt;code&gt;Cell&lt;/code&gt; 변수로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a49a97d83f27a99c910d665ab991a7baa42766c1" translate="yes" xml:space="preserve">
          <source>A structure or structure array &lt;var&gt;warning_struct&lt;/var&gt;, with fields &lt;code&gt;&quot;state&quot;&lt;/code&gt; and &lt;code&gt;&quot;identifier&quot;&lt;/code&gt;, may be given as an input to achieve equivalent results. The following example shows how to temporarily disable a warning and then restore its original state:</source>
          <target state="translated">&lt;code&gt;&quot;state&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;identifier&quot;&lt;/code&gt; 필드가 있는 구조 또는 구조 배열 &lt;var&gt;warning_struct&lt;/var&gt; 가 동등한 결과를 얻기 위해 입력으로 제공 될 수 있습니다. 다음 예는 일시적으로 경고를 비활성화 한 다음 원래 상태를 복원하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="61742c227154417d89297281bcce7e4e5e8fedc5" translate="yes" xml:space="preserve">
          <source>A structure returned from &lt;code&gt;optimset&lt;/code&gt; or an empty matrix to indicate that defaults should be used.</source>
          <target state="translated">기본값을 사용해야 함을 나타 내기 위해 &lt;code&gt;optimset&lt;/code&gt; 또는 빈 행렬 에서 반환 된 구조 입니다.</target>
        </trans-unit>
        <trans-unit id="77727e267c4e7dc95534c4bd88fd84e670cce812" translate="yes" xml:space="preserve">
          <source>A structure with two fields:</source>
          <target state="translated">두 개의 필드가있는 구조 :</target>
        </trans-unit>
        <trans-unit id="0dd3c12dfff1f5676697c204a39c14c0443cbab2" translate="yes" xml:space="preserve">
          <source>A summary view of a data set can be generated quickly with the &lt;code&gt;statistics&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;statistics&lt;/code&gt; 기능 을 사용하여 데이터 세트의 요약보기를 빠르게 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1654365fc4120066cc09c7c36a0dd5f8d454f221" translate="yes" xml:space="preserve">
          <source>A third boolean argument &lt;var&gt;hilev&lt;/var&gt; can be passed to specify whether the function should preserve listeners/callbacks, e.g., for legends or hggroups. The default is false.</source>
          <target state="translated">함수가 리스너 / 콜백을 유지해야하는지 (예 : 범례 또는 hggroup)를 지정하기 위해 세 번째 부울 인수 &lt;var&gt;hilev&lt;/var&gt; 를 전달할 수 있습니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="6d75f5f81f67ea31a3056ffa68bec8f8f19bac01" translate="yes" xml:space="preserve">
          <source>A third means of creating a sparse matrix is to work directly with the data in compressed row format. An example of this advanced technique might be</source>
          <target state="translated">희소 행렬을 만드는 세 번째 방법은 압축 된 행 형식으로 데이터를 직접 처리하는 것입니다. 이 고급 기술의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="362eede00ee117b0165de172e4502b345561eadc" translate="yes" xml:space="preserve">
          <source>A three-dimensional surface.</source>
          <target state="translated">입체 표면.</target>
        </trans-unit>
        <trans-unit id="7d713206f596ccf7d007e35a28a723f3a87709a4" translate="yes" xml:space="preserve">
          <source>A trivial example which redefines the &lt;code&gt;sin&lt;/code&gt; function to be the &lt;code&gt;cos&lt;/code&gt; function shows how &lt;code&gt;builtin&lt;/code&gt; works.</source>
          <target state="translated">&lt;code&gt;sin&lt;/code&gt; 함수를 &lt;code&gt;cos&lt;/code&gt; 함수 로 재정의하는 사소한 예 는 &lt;code&gt;builtin&lt;/code&gt; 작동 방식을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="24198dcd1fc096f9713d1489a3433c09f093abdc" translate="yes" xml:space="preserve">
          <source>A tube diameter of zero corresponds to the smallest scaling value along the streamline and the largest tube diameter corresponds to the largest scaling value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dd706fc8b0e02a221851a1d480f3f47ef063bc" translate="yes" xml:space="preserve">
          <source>A typical case is &lt;var&gt;A&lt;/var&gt; defined by &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt;, in which the result &lt;code&gt;&lt;var&gt;A&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; can be computed without even forming explicitly &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt; by:</source>
          <target state="translated">일반적인 경우는 &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt; ^ &lt;var&gt;m&lt;/var&gt; 으로 정의 된 &lt;var&gt;A&lt;/var&gt; 이며 , 결과적으로 &lt;code&gt;&lt;var&gt;A&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt;&lt;/code&gt; * &lt;var&gt;x&lt;/var&gt; 는 다음과 같이 명시 적으로 &lt;code&gt;&lt;var&gt;b&lt;/var&gt; ^ &lt;var&gt;m&lt;/var&gt;&lt;/code&gt; ^ &lt;var&gt;m&lt;/var&gt; 을 형성하지 않고도 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c9554a73a78de665b6f0e5b92b864e88f99cd2f9" translate="yes" xml:space="preserve">
          <source>A uibuttongroup is used to group uicontrol objects.</source>
          <target state="translated">uibuttongroup은 uicontrol 객체를 그룹화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d8bf838c2d61fd48e54d3eafee45392924c63e3d" translate="yes" xml:space="preserve">
          <source>A uicontrol object is used to create simple interactive controls such as push buttons, checkboxes, edit and list controls.</source>
          <target state="translated">uicontrol 객체는 푸시 버튼, 확인란, 편집 및 목록 컨트롤과 같은 간단한 대화 형 컨트롤을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8c6c19554ecbfcb080f1804219276384229fb304" translate="yes" xml:space="preserve">
          <source>A uitable object is used to show tables of data in a figure window.</source>
          <target state="translated">uitable 객체는 Figure 창에 데이터 테이블을 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="35bc901d80ea5d20ae94e0755c10f785b8cec64d" translate="yes" xml:space="preserve">
          <source>A user-defined function executed once per algorithm iteration.</source>
          <target state="translated">알고리즘 반복마다 한 번씩 실행되는 사용자 정의 함수입니다.</target>
        </trans-unit>
        <trans-unit id="593b4854610faabcd2c42950cb43c354620583f6" translate="yes" xml:space="preserve">
          <source>A user-defined string to label the graphics object.</source>
          <target state="translated">그래픽스 객체를 라벨링하기위한 사용자 정의 문자열.</target>
        </trans-unit>
        <trans-unit id="eab3b35792ebb0ae6fee1465a1ed36ff02a7821f" translate="yes" xml:space="preserve">
          <source>A valid function name is like a valid variable name: a sequence of letters, digits and underscores, not starting with a digit. Functions share the same pool of names as variables.</source>
          <target state="translated">유효한 함수 이름은 유효한 변수 이름과 같습니다. 숫자로 시작하지 않는 일련의 문자, 숫자 및 밑줄입니다. 함수는 변수와 동일한 이름 풀을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="26cc2105a675ed992a28eb44ca3b7b30e648efaf" translate="yes" xml:space="preserve">
          <source>A valid variable name is a sequence of letters, digits, and underscores that does not begin with a digit.</source>
          <target state="translated">유효한 변수 이름은 숫자로 시작하지 않는 일련의 문자, 숫자 및 밑줄입니다.</target>
        </trans-unit>
        <trans-unit id="e3c5ea4cc3fb875a4964217ece1831d1461100c7" translate="yes" xml:space="preserve">
          <source>A valid variable name is composed of letters, digits, and underscores (&quot;_&quot;), and the first character must not be a digit.</source>
          <target state="translated">유효한 변수 이름은 문자, 숫자 및 밑줄 ( &quot;_&quot;)로 구성되며 첫 문자는 숫자가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="53946557f5f64abe69989902436664c06811255e" translate="yes" xml:space="preserve">
          <source>A value of 1 or true instructs &lt;code&gt;textscan&lt;/code&gt; to concatenate consecutive columns of the same class in the output cell array. A value of 0 or false (default) leaves output in distinct columns.</source>
          <target state="translated">1 또는 true 값은 &lt;code&gt;textscan&lt;/code&gt; 이 출력 셀 배열에서 동일한 클래스의 연속 열을 연결 하도록 지시 합니다. 값이 0 또는 false (기본값)이면 별도의 열에 출력이 남습니다.</target>
        </trans-unit>
        <trans-unit id="34dcb175bd5d9a421d85c56f430a7a6174cd08f9" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;info = 1&lt;/code&gt; indicates that the solution has converged.</source>
          <target state="translated">&lt;code&gt;info = 1&lt;/code&gt; 값은 솔루션이 수렴되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="da4de0acd3d1feb3b3ac6044c929af6ca2da983c" translate="yes" xml:space="preserve">
          <source>A value of &lt;var&gt;zf&lt;/var&gt; larger than 1 &amp;ldquo;zooms in&amp;rdquo; such that the scene appears magnified:</source>
          <target state="translated">장면이 확대 된 것처럼 보이도록 1 &quot;zooms in&quot;보다 큰 &lt;var&gt;zf&lt;/var&gt; 값 :</target>
        </trans-unit>
        <trans-unit id="9d110e1d04f6cf5d9b6b0f0a914c44adc1362658" translate="yes" xml:space="preserve">
          <source>A value smaller than 1 &amp;ldquo;zooms out&amp;rdquo; so the camera can see more of the scene:</source>
          <target state="translated">1보다 작은 값은 &quot;줌 아웃&quot;되므로 카메라는 더 많은 장면을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15475e7f2c9146b71ba5831226c9706d2dce001e" translate="yes" xml:space="preserve">
          <source>A variable is declared global by using a &lt;code&gt;global&lt;/code&gt; declaration statement. The following statements are all global declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598ab3f2a6f2cc2835f65ec9919fd9d05793875c" translate="yes" xml:space="preserve">
          <source>A variable may be declared global using a &lt;code&gt;global&lt;/code&gt; declaration statement. The following statements are all global declarations.</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; 선언문을 사용하여 변수를 전역 선언 할 수 있습니다 . 다음 내용은 모두 글로벌 선언입니다.</target>
        </trans-unit>
        <trans-unit id="e683463cccc9697f714f248e06aa83d3db37c3f7" translate="yes" xml:space="preserve">
          <source>A variable name is a valid expression by itself. It represents the variable&amp;rsquo;s current value. Variables are given new values with &lt;em&gt;assignment operators&lt;/em&gt; and &lt;em&gt;increment operators&lt;/em&gt;. See &lt;a href=&quot;assignment-ops#Assignment-Ops&quot;&gt;Assignment Expressions&lt;/a&gt;.</source>
          <target state="translated">변수 이름은 그 자체로 유효한 표현식입니다. 변수의 현재 값을 나타냅니다. &lt;em&gt;대입 연산자&lt;/em&gt; 와 &lt;em&gt;증분 연산자를 사용&lt;/em&gt; 하여 변수에 새 값이 제공 됩니다. &lt;a href=&quot;assignment-ops#Assignment-Ops&quot;&gt;할당 표현식을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f27e18c0dfe9836e51b7b8e773d8cddd499a3397" translate="yes" xml:space="preserve">
          <source>A variable that has been declared &lt;em&gt;global&lt;/em&gt; may be accessed from within a function body without having to pass it as a formal parameter.</source>
          <target state="translated">&lt;em&gt;전역&lt;/em&gt; 으로 선언 된 변수 는 공식 매개 변수로 전달하지 않고 함수 본문 내에서 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe18d6d8a4b85c1c946678b73fe67049ae473367" translate="yes" xml:space="preserve">
          <source>A variable that has been declared &lt;em&gt;persistent&lt;/em&gt; within a function will retain its contents in memory between subsequent calls to the same function. The difference between persistent variables and global variables is that persistent variables are local in scope to a particular function and are not visible elsewhere.</source>
          <target state="translated">함수 내에서 &lt;em&gt;영속적&lt;/em&gt; 으로 선언 된 변수 는 동일한 함수에 대한 후속 호출 사이에 메모리에 내용을 유지합니다. 영속 변수와 전역 변수의 차이점은 영속 변수는 특정 기능에 대해 범위가 다르며 다른 곳에서는 볼 수 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="eea06a58e04a54c6901a0549a692694ec079119e" translate="yes" xml:space="preserve">
          <source>A vector is a 2-D array where one of the dimensions is equal to 1 (either 1xN or Nx1). As a consequence of this definition, a 1x1 array (a scalar) is also a vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81281e8d079c716bc4b2e4ef6f0ee14872d0695c" translate="yes" xml:space="preserve">
          <source>A vector is a 2-D array where one of the dimensions is equal to 1. As a consequence a 1x1 array, or scalar, is also a vector.</source>
          <target state="translated">벡터는 차원 중 하나가 1 인 2 차원 배열입니다. 결과적으로 1x1 배열 또는 스칼라도 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="682dd16f45c06577f1eb9953aeddb4234eaa1814" translate="yes" xml:space="preserve">
          <source>A vector of the following parameters that can be used to control the initial condition calculation.</source>
          <target state="translated">초기 조건 계산을 제어하는 ​​데 사용할 수있는 다음 매개 변수로 구성된 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="7ca41dd2218026e088dd1d939d575d54cede09b0" translate="yes" xml:space="preserve">
          <source>A vector of the same length as the state specifying the type of inequality constraint. Each element of the vector corresponds to an element of the state and should be assigned one of the following codes</source>
          <target state="translated">부등식 구속 조건의 유형을 지정하는 상태와 길이가 같은 벡터입니다. 벡터의 각 요소는 상태의 요소에 해당하며 다음 코드 중 하나를 할당해야합니다</target>
        </trans-unit>
        <trans-unit id="9f199fa859ed65bd938e6430f7ffca1f9ed6e086" translate="yes" xml:space="preserve">
          <source>A vector of the same length as the state vector. A nonzero element indicates that the corresponding element of the state vector is an algebraic variable (i.e., its derivative does not appear explicitly in the equation set).</source>
          <target state="translated">상태 벡터와 길이가 같은 벡터 0이 아닌 요소는 상태 벡터의 해당 요소가 대수 변수임을 나타냅니다 (즉, 해당 미분은 방정식 세트에 명시 적으로 나타나지 않음).</target>
        </trans-unit>
        <trans-unit id="a9a0eab9ea62c522fdca03fcad41d97d73edfef5" translate="yes" xml:space="preserve">
          <source>A very basic &lt;code&gt;classdef&lt;/code&gt; value class (see &lt;a href=&quot;value-classes-vs_002e-handle-classes#Value-Classes-vs_002e-Handle-Classes&quot;&gt;Value Classes vs. Handle Classes&lt;/a&gt;) is defined by:</source>
          <target state="translated">매우 기본적인 &lt;code&gt;classdef&lt;/code&gt; 값 클래스 ( &lt;a href=&quot;value-classes-vs_002e-handle-classes#Value-Classes-vs_002e-Handle-Classes&quot;&gt;Value Classes vs. Handle Classes 참조&lt;/a&gt; )는 다음에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="d64b123d4fc154f5110f49676a6f0a04ff0ba1e6" translate="yes" xml:space="preserve">
          <source>A very common programming pattern is to increment an existing variable with a given value, like this</source>
          <target state="translated">매우 일반적인 프로그래밍 패턴은 다음과 같이 주어진 값으로 기존 변수를 증가시키는 것입니다</target>
        </trans-unit>
        <trans-unit id="0443587797679798ef5c3a1d2b129a3696b67408" translate="yes" xml:space="preserve">
          <source>A very specific form of polynomial interpretation is the Pad&amp;eacute; approximant. For control systems, a continuous-time delay can be modeled very simply with the approximant.</source>
          <target state="translated">다항식 해석의 매우 구체적인 형태는 Pad&amp;eacute; 근사치입니다. 제어 시스템의 경우 연속 시간 지연을 근사값으로 간단히 모델링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="daa7f93fc1224f787fc7ef92319f6663a241012f" translate="yes" xml:space="preserve">
          <source>A waterfall plot is similar to a &lt;code&gt;meshz&lt;/code&gt; plot except only mesh lines for the rows of &lt;var&gt;z&lt;/var&gt; (x-values) are shown.</source>
          <target state="translated">폭포 그림은 &lt;var&gt;z&lt;/var&gt; (x- 값) 의 행에 대한 메쉬 선만 표시된다는 점을 제외하고 &lt;code&gt;meshz&lt;/code&gt; 그림 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="259c81bbd57f396fff94bc9cdafadf886513f1db" translate="yes" xml:space="preserve">
          <source>A-F</source>
          <target state="translated">A-F</target>
        </trans-unit>
        <trans-unit id="45f39029bce507261d4c051f0faa5cdd041338ef" translate="yes" xml:space="preserve">
          <source>A. George, J.W.H. Liu.</source>
          <target state="translated">조지, JWH 리우.</target>
        </trans-unit>
        <trans-unit id="d6b0b631033856bb20a8ad2ea0168279fbed5060" translate="yes" xml:space="preserve">
          <source>A.1 Oct-Files</source>
          <target state="translated">A.1 10 월 파일</target>
        </trans-unit>
        <trans-unit id="fa728181fe8a7c48fd7d8bf9dfdda6b29b463196" translate="yes" xml:space="preserve">
          <source>A.1.1 Getting Started with Oct-Files</source>
          <target state="translated">A.1.1 Oct 파일 시작하기</target>
        </trans-unit>
        <trans-unit id="4281b650a5a1a2fe5d556d9e6809cbca52f44955" translate="yes" xml:space="preserve">
          <source>A.1.10 Allocating Local Memory in Oct-Files</source>
          <target state="translated">A.1.10 10 월 파일에 로컬 메모리 할당</target>
        </trans-unit>
        <trans-unit id="38ab2f2b0a1074471c96948743b2320ce0f1d29b" translate="yes" xml:space="preserve">
          <source>A.1.11 Input Parameter Checking in Oct-Files</source>
          <target state="translated">A.1.11 Oct 파일에서 입력 매개 변수 확인</target>
        </trans-unit>
        <trans-unit id="1f972d102739122ee0d7da57a881169d3181f3db" translate="yes" xml:space="preserve">
          <source>A.1.12 Exception and Error Handling in Oct-Files</source>
          <target state="translated">A.1.12 10 월 파일의 예외 및 오류 처리</target>
        </trans-unit>
        <trans-unit id="cabc0c05131e93631993cd0f24a89aa0e0f4afcb" translate="yes" xml:space="preserve">
          <source>A.1.13 Documentation and Testing of Oct-Files</source>
          <target state="translated">A.1.13 Oct-file 문서화 및 테스트</target>
        </trans-unit>
        <trans-unit id="5d8d1e8ba980f935b3d669f24ff7b87043319e34" translate="yes" xml:space="preserve">
          <source>A.1.2 Matrices and Arrays in Oct-Files</source>
          <target state="translated">A.1.2 Oct 파일의 행렬과 배열</target>
        </trans-unit>
        <trans-unit id="30d30c7e055ac71f79c35ac6432524657515b570" translate="yes" xml:space="preserve">
          <source>A.1.3 Character Strings in Oct-Files</source>
          <target state="translated">A.1.3 Oct 파일의 문자열</target>
        </trans-unit>
        <trans-unit id="a613bff926cf4353392d5feaedb015143856cb91" translate="yes" xml:space="preserve">
          <source>A.1.4 Cell Arrays in Oct-Files</source>
          <target state="translated">10. 파일의 A.1.4 셀형 배열</target>
        </trans-unit>
        <trans-unit id="46bb3ce7ca344be861d81f82c586476437519d66" translate="yes" xml:space="preserve">
          <source>A.1.5 Structures in Oct-Files</source>
          <target state="translated">A.1.5 Oct 파일의 구조</target>
        </trans-unit>
        <trans-unit id="1ba145acd37d7519673a0370650a95425165fb05" translate="yes" xml:space="preserve">
          <source>A.1.6 Sparse Matrices in Oct-Files</source>
          <target state="translated">10 월 파일의 A.1.6 희소 행렬</target>
        </trans-unit>
        <trans-unit id="d524851544c0f0113d4fbb3d037e63f19156bd6b" translate="yes" xml:space="preserve">
          <source>A.1.6.1 Array and Sparse Class Differences</source>
          <target state="translated">A.1.6.1 배열과 스파 스 클래스의 차이점</target>
        </trans-unit>
        <trans-unit id="aaf330ccec1e5312f5b5c94d11a398ae63ffed01" translate="yes" xml:space="preserve">
          <source>A.1.6.2 Creating Sparse Matrices in Oct-Files</source>
          <target state="translated">A.1.6.2 10 월 파일로 희소 행렬 만들기</target>
        </trans-unit>
        <trans-unit id="c6309b0cc128cabd43e9850f98ddf5a65614aaf0" translate="yes" xml:space="preserve">
          <source>A.1.6.3 Using Sparse Matrices in Oct-Files</source>
          <target state="translated">A.1.6.3 10 진 파일에서 희소 행렬 사용</target>
        </trans-unit>
        <trans-unit id="92b830b335894c43ae499fefae7b187b77c8999a" translate="yes" xml:space="preserve">
          <source>A.1.7 Accessing Global Variables in Oct-Files</source>
          <target state="translated">A.1.7 10 월 파일에서 전역 변수에 액세스</target>
        </trans-unit>
        <trans-unit id="79db6457460d54709920892b7b2546ccbb0493d8" translate="yes" xml:space="preserve">
          <source>A.1.8 Calling Octave Functions from Oct-Files</source>
          <target state="translated">A.1.8 Oct 파일에서 Octave 함수 호출</target>
        </trans-unit>
        <trans-unit id="78c9c0806c945f0388cf61f63c02a68c1ec46f17" translate="yes" xml:space="preserve">
          <source>A.1.9 Calling External Code from Oct-Files</source>
          <target state="translated">A.1.9 10 월 파일에서 외부 코드 호출</target>
        </trans-unit>
        <trans-unit id="460b59dc11f6b741abf14b80ba426d2a41d70f8e" translate="yes" xml:space="preserve">
          <source>A.2 Mex-Files</source>
          <target state="translated">A.2 멕스 파일</target>
        </trans-unit>
        <trans-unit id="45c648501f38b62934427a88ec849017400d7eb0" translate="yes" xml:space="preserve">
          <source>A.2.1 Getting Started with Mex-Files</source>
          <target state="translated">A.2.1 Mex 파일 시작하기</target>
        </trans-unit>
        <trans-unit id="b783c3ddf67defdca89401aef2099a09ace11e73" translate="yes" xml:space="preserve">
          <source>A.2.2 Working with Matrices and Arrays in Mex-Files</source>
          <target state="translated">A.2.2 Mex 파일에서 행렬 및 배열 작업</target>
        </trans-unit>
        <trans-unit id="e254aa98863467a647154401a0d5a6a005efc472" translate="yes" xml:space="preserve">
          <source>A.2.3 Character Strings in Mex-Files</source>
          <target state="translated">A.2.3 Mex 파일의 문자열</target>
        </trans-unit>
        <trans-unit id="37e2c68053d712051f7b75a29cdd67b81735b1d4" translate="yes" xml:space="preserve">
          <source>A.2.4 Cell Arrays with Mex-Files</source>
          <target state="translated">A.2.4 Mex 파일이있는 셀형 배열</target>
        </trans-unit>
        <trans-unit id="0d9c9fb28fb61d8f1e386306ee2e1f1c800fb97d" translate="yes" xml:space="preserve">
          <source>A.2.5 Structures with Mex-Files</source>
          <target state="translated">A.2.5 Mex 파일을 가진 구조</target>
        </trans-unit>
        <trans-unit id="e2368d10b248ec8e67b1e48109353fc3a0099340" translate="yes" xml:space="preserve">
          <source>A.2.6 Sparse Matrices with Mex-Files</source>
          <target state="translated">A.2.6 Mex 파일이있는 희소 행렬</target>
        </trans-unit>
        <trans-unit id="133e5d4c69596732dbd721e36c5319b621acb930" translate="yes" xml:space="preserve">
          <source>A.2.7 Calling Other Functions in Mex-Files</source>
          <target state="translated">A.2.7 Mex 파일에서 다른 함수 호출</target>
        </trans-unit>
        <trans-unit id="25be3ec0679600c1a9518086ca072bf3113fb232" translate="yes" xml:space="preserve">
          <source>A.3 Standalone Programs</source>
          <target state="translated">A.3 독립형 프로그램</target>
        </trans-unit>
        <trans-unit id="74765498848b63cf4512d394f8bbe630ef326f97" translate="yes" xml:space="preserve">
          <source>A.4 Java Interface</source>
          <target state="translated">A.4 자바 인터페이스</target>
        </trans-unit>
        <trans-unit id="b79eddb437e87d2d095dba3c45379fbe5012a798" translate="yes" xml:space="preserve">
          <source>A.4.1 Making Java Classes Available</source>
          <target state="translated">A.4.1 Java 클래스를 사용 가능하게 만들기</target>
        </trans-unit>
        <trans-unit id="f33b832eadf7ec8b16a413a39e7cbc3e04d27517" translate="yes" xml:space="preserve">
          <source>A.4.2 How to use Java from within Octave</source>
          <target state="translated">A.4.2 Octave 내에서 Java를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="c7a5c7d825d6ffa8abbb3fc9ab3765b636264d44" translate="yes" xml:space="preserve">
          <source>A.4.3 Set up the JVM</source>
          <target state="translated">A.4.3 JVM 설정</target>
        </trans-unit>
        <trans-unit id="0b125b6c5446b02ac34845e3746c52933ea07ae8" translate="yes" xml:space="preserve">
          <source>A.4.4 Java Interface Functions</source>
          <target state="translated">A.4.4 자바 인터페이스 함수</target>
        </trans-unit>
        <trans-unit id="90c94b8aec75d497fa0d2a1de48c1a6a5fc31d26" translate="yes" xml:space="preserve">
          <source>AA = balance (A)</source>
          <target state="translated">AA = 균형 (A)</target>
        </trans-unit>
        <trans-unit id="4d5155328e7a0f5b9a25fab509b88fb27da00c1e" translate="yes" xml:space="preserve">
          <source>AA = balance (A, opt)</source>
          <target state="translated">AA = 균형 (A, opt)</target>
        </trans-unit>
        <trans-unit id="970093678b182127f60bb51b8af2c94d539eca3a" translate="yes" xml:space="preserve">
          <source>ABCDEF</source>
          <target state="translated">ABCDEF</target>
        </trans-unit>
        <trans-unit id="a85e90f9835e6411e691ebde65582614cea81732" translate="yes" xml:space="preserve">
          <source>ALT</source>
          <target state="translated">ALT</target>
        </trans-unit>
        <trans-unit id="80d305c58f97edfae92a3627f5a66d9bef4d8d46" translate="yes" xml:space="preserve">
          <source>AM</source>
          <target state="translated">AM</target>
        </trans-unit>
        <trans-unit id="31d6178a7eb20a16d12a4af4b47a5307ab8e83d9" translate="yes" xml:space="preserve">
          <source>API for portable 2-D and 3-D graphics (&lt;a href=&quot;https://www.opengl.org&quot;&gt;https://www.opengl.org&lt;/a&gt;). An OpenGL implementation can be used to provide a renderer for Octave&amp;rsquo;s graphics functions. Octave&amp;rsquo;s OpenGL-based graphics functions usually outperform the gnuplot-based graphics functions because plot data can be rendered directly instead of sending data and commands to gnuplot for interpretation and rendering. Since Octave 4.0, the default graphics renderer (&lt;code&gt;&quot;qt&quot;&lt;/code&gt;) has been OpenGL-based.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b881d2b6da4b4575dab68553d054ad1e2015236" translate="yes" xml:space="preserve">
          <source>API for portable 2-D and 3-D graphics (&lt;a href=&quot;https://www.opengl.org&quot;&gt;https://www.opengl.org&lt;/a&gt;). An OpenGL implementation is required to provide Octave&amp;rsquo;s OpenGL-based graphics functions. Octave&amp;rsquo;s OpenGL-based graphics functions usually outperform the gnuplot-based graphics functions because plot data can be rendered directly instead of sending data and commands to gnuplot for interpretation and rendering.</source>
          <target state="translated">휴대용 2D 및 3D 그래픽 용 API ( &lt;a href=&quot;https://www.opengl.org&quot;&gt;https://www.opengl.org&lt;/a&gt; ). Octave의 OpenGL 기반 그래픽 기능을 제공하려면 OpenGL 구현이 필요합니다. Octave의 OpenGL 기반 그래픽 기능은 해석 및 렌더링을 위해 gnuplot에 데이터 및 명령을 전송하는 대신 플롯 데이터를 직접 렌더링 할 수 있기 때문에 일반적으로 gnuplot 기반 그래픽 기능보다 성능이 우수합니다.</target>
        </trans-unit>
        <trans-unit id="02827c241b6c10e63aac33285f392dba4c9d9516" translate="yes" xml:space="preserve">
          <source>ARPACK</source>
          <target state="translated">ARPACK</target>
        </trans-unit>
        <trans-unit id="5ea03c1bb5afb762d11ebe051e1afc8aecb94aa2" translate="yes" xml:space="preserve">
          <source>ASCII art</source>
          <target state="translated">ASCII 아트</target>
        </trans-unit>
        <trans-unit id="7f6e23b8c1040563ad15c608f791c2b83583275f" translate="yes" xml:space="preserve">
          <source>ASCII mode is only appropriate for text files as it will convert the remote host&amp;rsquo;s newline representation to the local host&amp;rsquo;s newline representation.</source>
          <target state="translated">ASCII 모드는 원격 호스트의 개행 표현을 로컬 호스트의 개행 표현으로 변환하므로 텍스트 파일에만 적합합니다.</target>
        </trans-unit>
        <trans-unit id="30d5416e04f324c64bf4b2fe43eaafd2066316e0" translate="yes" xml:space="preserve">
          <source>ASCII table</source>
          <target state="translated">ASCII 테이블</target>
        </trans-unit>
        <trans-unit id="47e3b0927170e8b515ab89d87e624e31169ba9ae" translate="yes" xml:space="preserve">
          <source>ATLAS instead of reference &lt;small&gt;BLAS&lt;/small&gt; and &lt;small&gt;LAPACK&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;BLAS&lt;/small&gt; 및 &lt;small&gt;LAPACK&lt;/small&gt; 을 참조하는 대신 ATLAS&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="348d8b740f7c7e0db6f55b151cd3dba93727b311" translate="yes" xml:space="preserve">
          <source>AWK, sed, and other Unix utilities</source>
          <target state="translated">AWK, sed 및 기타 Unix 유틸리티</target>
        </trans-unit>
        <trans-unit id="da2dbf9d6ee8e87e354d7d154c12e5b2c6a652cc" translate="yes" xml:space="preserve">
          <source>A_LO = tril (A)</source>
          <target state="translated">A_LO = 트릴 (A)</target>
        </trans-unit>
        <trans-unit id="e8c07093389a0517d27bc9ced00aef1676005603" translate="yes" xml:space="preserve">
          <source>A_LO = tril (A, k)</source>
          <target state="translated">A_LO = 트릴 (A, k)</target>
        </trans-unit>
        <trans-unit id="1ad95f28a217e1ca7d8984230875bb6bf3302181" translate="yes" xml:space="preserve">
          <source>A_LO = tril (A, k, pack)</source>
          <target state="translated">A_LO = 트릴 (A, k, 팩)</target>
        </trans-unit>
        <trans-unit id="6b7c0d6059af0be9730ca0b2a4c34c5e500a00f7" translate="yes" xml:space="preserve">
          <source>A_UP = triu (A)</source>
          <target state="translated">A_UP = 트리 우 (A)</target>
        </trans-unit>
        <trans-unit id="7e58c7ef3126e46c2f00e5eaf7b06cdaad3cb310" translate="yes" xml:space="preserve">
          <source>A_UP = triu (A, k)</source>
          <target state="translated">A_UP = 트리 우 (A, k)</target>
        </trans-unit>
        <trans-unit id="ef7eae80e60e14c2821813d461061c334424698a" translate="yes" xml:space="preserve">
          <source>A_UP = triu (A, k, pack)</source>
          <target state="translated">A_UP = triu (A, k, 팩)</target>
        </trans-unit>
        <trans-unit id="c3b1354957064f90a14a0b8903ae1bce0e675785" translate="yes" xml:space="preserve">
          <source>Abbreviated month name</source>
          <target state="translated">약식 월 이름</target>
        </trans-unit>
        <trans-unit id="ee20eabfa2c5006473fff9d5c8e63492799e01ab" translate="yes" xml:space="preserve">
          <source>Abbreviated weekday name</source>
          <target state="translated">축약 된 요일 이름</target>
        </trans-unit>
        <trans-unit id="d0fc0c86fcd7a1b25e429341cf282cf553bde304" translate="yes" xml:space="preserve">
          <source>Absolute Central Moment. The moment about the mean ignoring sign defined as</source>
          <target state="translated">절대적인 중앙 순간. 다음과 같이 정의 된 평균 무시 부호에 대한 순간</target>
        </trans-unit>
        <trans-unit id="35b97d430a042dd803c2cb8f67aff430165b40d6" translate="yes" xml:space="preserve">
          <source>Absolute Raw Moment. The moment about zero ignoring sign defined as</source>
          <target state="translated">절대 원시 순간. 제로 무시 부호에 대한 순간</target>
        </trans-unit>
        <trans-unit id="cc6f394660f89f88adf29c49fc23e43fb09bf612" translate="yes" xml:space="preserve">
          <source>Absolute error tolerance.</source>
          <target state="translated">절대 오차 허용 오차.</target>
        </trans-unit>
        <trans-unit id="40e9a41fce87fb50f39ad6444090c076c945f2d5" translate="yes" xml:space="preserve">
          <source>Absolute tolerance for single precision; may be zero for pure relative error test.</source>
          <target state="translated">단 정밀도에 대한 절대 허용 오차; 순수 상대 오차 테스트의 경우 0 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c2e7f86ba1a6450ae36178abd54ce12cbb423f4" translate="yes" xml:space="preserve">
          <source>Absolute tolerance used to check if the current basic solution is dual feasible. It is not recommended that you change this parameter unless you have a detailed understanding of its purpose.</source>
          <target state="translated">현재 기본 솔루션의 이중 실행 가능 여부를 확인하는 데 사용되는 절대 허용 오차. 이 매개 변수의 목적에 대한 자세한 이해가 없으면이 매개 변수를 변경하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cb3f347f6a683bfecd235d44eda71cfe9ce6365c" translate="yes" xml:space="preserve">
          <source>Absolute tolerance. May be either vector or scalar. If a vector, it must match the dimension of the state vector, and the relative tolerance must also be a vector of the same length.</source>
          <target state="translated">절대 공차. 벡터 또는 스칼라 일 수 있습니다. 벡터 인 경우 벡터는 상태 벡터의 치수와 일치해야하며 상대 공차도 길이가 같은 벡터 여야합니다.</target>
        </trans-unit>
        <trans-unit id="8ced34df7d9d2c2c1c20e8ac426e28108151c8b1" translate="yes" xml:space="preserve">
          <source>Absolute tolerance. May be either vector or scalar. If a vector, it must match the dimension of the state vector.</source>
          <target state="translated">절대 공차. 벡터 또는 스칼라 일 수 있습니다. 벡터 인 경우 상태 벡터의 치수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4add528287ed1e7af2dc1c034890d6704563f0c1" translate="yes" xml:space="preserve">
          <source>Absolute tolerance; may be zero for pure relative error test.</source>
          <target state="translated">절대 허용 오차; 순수 상대 오차 테스트의 경우 0 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5dfdefe44f85179e1f26cf32a070b93b187c70a" translate="yes" xml:space="preserve">
          <source>Abstract Window Toolkit for GUIs.</source>
          <target state="translated">GUI 용 추상 창 툴킷.</target>
        </trans-unit>
        <trans-unit id="9a35b0d370c4ab723ff7fea9b08e600af198011a" translate="yes" xml:space="preserve">
          <source>Accept the current line regardless of where the cursor is. If the line is non-empty, add it to the history list. If the line was a history line, then restore the history line to its original state.</source>
          <target state="translated">커서의 위치에 관계없이 현재 행을 승인하십시오. 줄이 비어 있지 않으면 내역 목록에 추가하십시오. 라인이 히스토리 라인 인 경우 히스토리 라인을 원래 상태로 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="7c168b32789f6553d5cac525f1f61786730bbb8e" translate="yes" xml:space="preserve">
          <source>Access via Handle</source>
          <target state="translated">핸들을 통한 접근</target>
        </trans-unit>
        <trans-unit id="cc9aa0b74f357b6a47a0de409d63b615fb54a5c7" translate="yes" xml:space="preserve">
          <source>Accessing Global Variables in Oct-Files</source>
          <target state="translated">10 월 파일에서 전역 변수에 액세스</target>
        </trans-unit>
        <trans-unit id="e140449fab408364162fe133f9c2a1c9cd956b58" translate="yes" xml:space="preserve">
          <source>Accessing multiple elements of a cell array with the &amp;lsquo;</source>
          <target state="translated">'를 사용하여 셀형 배열의 여러 요소에 액세스</target>
        </trans-unit>
        <trans-unit id="4131041b474b3b65a2c3f23311e04559f53738e2" translate="yes" xml:space="preserve">
          <source>Accessing the fields of the structure can then be performed with &lt;code&gt;mxGetField&lt;/code&gt; and &lt;code&gt;mxSetField&lt;/code&gt; or alternatively with the &lt;code&gt;mxGetFieldByNumber&lt;/code&gt; and &lt;code&gt;mxSetFieldByNumber&lt;/code&gt; functions.</source>
          <target state="translated">그런 다음 &lt;code&gt;mxGetField&lt;/code&gt; 및 &lt;code&gt;mxSetField&lt;/code&gt; 또는 &lt;code&gt;mxGetFieldByNumber&lt;/code&gt; 및 &lt;code&gt;mxSetFieldByNumber&lt;/code&gt; 함수 를 사용하여 구조의 필드에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96cb4fd1198a5fe5f8986be2f436c95576818651" translate="yes" xml:space="preserve">
          <source>According to broadcasting rules, if one operand is a scalar and the other is a matrix, the scalar is compared to each element of the matrix in turn, and the result is the same size as the matrix.</source>
          <target state="translated">브로드 캐스트 규칙에 따라 한 피연산자가 스칼라이고 다른 피연산자가 행렬 인 경우 스칼라는 행렬의 각 요소와 차례로 비교되며 결과는 행렬과 동일한 크기입니다.</target>
        </trans-unit>
        <trans-unit id="20272651e1709ece1f65c33e2d84c4babba6caaa" translate="yes" xml:space="preserve">
          <source>Accordingly, with &lt;a href=&quot;java-interface-functions#XREFjava_005fset&quot;&gt;java_set&lt;/a&gt; the value of a field can be set. Note that only public Java fields are accessible from within Octave.</source>
          <target state="translated">따라서, &lt;a href=&quot;java-interface-functions#XREFjava_005fset&quot;&gt;java_set&lt;/a&gt; 으로 필드의 값을 설정할 수 있습니다. 옥타브 내에서는 공개 Java 필드 만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb406e59fc6ba0ecc95f653b5397477c34802d77" translate="yes" xml:space="preserve">
          <source>Accumulation</source>
          <target state="translated">Accumulation</target>
        </trans-unit>
        <trans-unit id="41c954926825139112b6857a16f1df9f0b98506c" translate="yes" xml:space="preserve">
          <source>Accumulation functions</source>
          <target state="translated">축적 기능</target>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Acknowledgements</target>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="0aca286f20ef283339ca9b7aaa2c65ea156c2b8b" translate="yes" xml:space="preserve">
          <source>Adaptive Quadrature - Revisited</source>
          <target state="translated">적응 쿼드 러처-재 방문</target>
        </trans-unit>
        <trans-unit id="8277c41fb8ab45c4ced9ea46bbece603fc99db57" translate="yes" xml:space="preserve">
          <source>Adaptive quadrature is used to minimize the estimate of error until the following is satisfied:</source>
          <target state="translated">적응 구적법은 다음을 만족할 때까지 오차 추정을 최소화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a150512502495212d823b60991dff9611b40a1cc" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;clspath&lt;/var&gt; to the beginning of the dynamic class path of the Java virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ce6be8ca2c86ee92b5a51e291923c59cb3d05a" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;clspath&lt;/var&gt; to the dynamic class path of the Java virtual machine.</source>
          <target state="translated">JVM (Java Virtual Machine)의 동적 클래스 경로에 &lt;var&gt;clspath&lt;/var&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="879b53ad5a722f32a68eb7064ff8d3ce3d2039fa" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;q&lt;/var&gt; amount of time (with units &lt;var&gt;f&lt;/var&gt;) to the serial datenum, &lt;var&gt;d&lt;/var&gt;.</source>
          <target state="translated">추가 &lt;var&gt;q&lt;/var&gt; (단위로 시간 량 &lt;var&gt;f&lt;/var&gt; 직렬로 datenum) &lt;var&gt;d&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="43e2ba9f12ee92e4f78e14bca5f744ed6be529cb" translate="yes" xml:space="preserve">
          <source>Add a colorbar to the current axes.</source>
          <target state="translated">현재 축에 컬러 바를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="61be8243e9fae69b929a5f59899248f5302e2e9e" translate="yes" xml:space="preserve">
          <source>Add a light object to a figure using a simple interface.</source>
          <target state="translated">간단한 인터페이스를 사용하여 그림에 밝은 물체를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="78e82477acc2b502535583ed8b0d0573ce8f814c" translate="yes" xml:space="preserve">
          <source>Add a light object to a plot</source>
          <target state="translated">플롯에 라이트 오브젝트 추가</target>
        </trans-unit>
        <trans-unit id="324ea96072bbf0b36a7b834ea4d2c0f79965a7d8" translate="yes" xml:space="preserve">
          <source>Add a light object to the current axes using spherical coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1ebbeb12fcbbcbf913bf2108dddcefc6ef637b" translate="yes" xml:space="preserve">
          <source>Add a preview to EPS files. Supported formats are:</source>
          <target state="translated">EPS 파일에 미리보기를 추가하십시오. 지원되는 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9600040742d629a96651e34887a7c5740c064915" translate="yes" xml:space="preserve">
          <source>Add date-formatted tick labels to an axis.</source>
          <target state="translated">날짜 형식의 눈금 레이블을 축에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3adaf8b35f792a489a1dcc79b2ef465b99db9ca8" translate="yes" xml:space="preserve">
          <source>Add labels to the contours of a contour plot.</source>
          <target state="translated">등고선 플롯의 등고선에 레이블을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ffad07fcac178b407fb7c82bfe7427b2c86ee525" translate="yes" xml:space="preserve">
          <source>Add named directories to the function search path.</source>
          <target state="translated">함수 검색 경로에 명명 된 디렉토리를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="98d306cc0a765430a03982138b7a8d070384e10e" translate="yes" xml:space="preserve">
          <source>Add named packages to the path. After loading a package it is possible to use the functions provided by the package. For example,</source>
          <target state="translated">경로에 명명 된 패키지를 추가하십시오. 패키지를로드 한 후 패키지에서 제공하는 기능을 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="3ca5125a3c707438e18febebf18aee97545b21a3" translate="yes" xml:space="preserve">
          <source>Add new graphic objects to the current axes. This is equivalent to &lt;code&gt;hold on&lt;/code&gt;.</source>
          <target state="translated">현재 좌표축에 새 그래픽 객체를 추가합니다. 이것은 &lt;code&gt;hold on&lt;/code&gt; 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="3283decac4594df00240d64107fe2f91443742c3" translate="yes" xml:space="preserve">
          <source>Add new graphic objects to the current figure.</source>
          <target state="translated">현재 그림에 새 그래픽 객체를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2a791b855afd05212ce0bc6d5f42921c38618676" translate="yes" xml:space="preserve">
          <source>Add path to the head of the search path for function files. The value of &lt;var&gt;path&lt;/var&gt; specified on the command line will override any value of &lt;code&gt;OCTAVE_PATH&lt;/code&gt; found in the environment, but not any commands in the system or user startup files that set the internal load path through one of the path functions.</source>
          <target state="translated">기능 파일의 검색 경로 헤드에 경로를 추가하십시오. 의 값 &lt;var&gt;path&lt;/var&gt; 의 값보다 우선합니다 명령 행에 지정된 &lt;code&gt;OCTAVE_PATH&lt;/code&gt; 은 환경에서 발견 있지만 경로 기능 중 하나를 통해 내부 부하 경로를 설정 시스템 또는 사용자의 시작 파일에있는 모든 명령.</target>
        </trans-unit>
        <trans-unit id="7a9897248425c5ea9626590b3d439db7b7dbbf4e" translate="yes" xml:space="preserve">
          <source>Add path to the head of the search path for images. The value of &lt;var&gt;path&lt;/var&gt; specified on the command line will override any value of &lt;code&gt;OCTAVE_IMAGE_PATH&lt;/code&gt; found in the environment, but not any commands in the system or user startup files that call the &lt;code&gt;IMAGE_PATH&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c543ec65ad15e531f515c8d8948cb70e028815" translate="yes" xml:space="preserve">
          <source>Add path to the head of the search path for images. The value of &lt;var&gt;path&lt;/var&gt; specified on the command line will override any value of &lt;code&gt;OCTAVE_IMAGE_PATH&lt;/code&gt; found in the environment, but not any commands in the system or user startup files that set the built-in variable &lt;code&gt;IMAGE_PATH&lt;/code&gt;.</source>
          <target state="translated">이미지 검색 경로의 헤드에 경로를 추가하십시오. 의 값 &lt;var&gt;path&lt;/var&gt; 의 값보다 우선합니다 명령 행에 지정된 &lt;code&gt;OCTAVE_IMAGE_PATH&lt;/code&gt; 은 환경에서 발견 있지만 설정 시스템 또는 사용자의 시작 파일의 모든 명령을 기본 제공 변수 &lt;code&gt;IMAGE_PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae85965efd5530db8784e81826e67076f4f8cdb2" translate="yes" xml:space="preserve">
          <source>Add the definition DEF to the compiler call.</source>
          <target state="translated">컴파일러 호출에 정의 DEF를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ad3b4ad5dbca88facc141f912bfed37f1f7cfeff" translate="yes" xml:space="preserve">
          <source>Add the include directory DIR to compile commands.</source>
          <target state="translated">include 디렉토리 DIR을 추가하여 명령을 컴파일하십시오.</target>
        </trans-unit>
        <trans-unit id="12f0d799ba7506e33276904ca250787235593693" translate="yes" xml:space="preserve">
          <source>Add the library LIB to the link command.</source>
          <target state="translated">라이브러리 LIB를 링크 명령에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="b5f536f080c667ea2399171f9fc48031a06e8890" translate="yes" xml:space="preserve">
          <source>Add the library directory DIR to the link command.</source>
          <target state="translated">라이브러리 디렉토리 DIR을 링크 명령에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="5be1e4a8ccc211070580d179fc88fbdde71cd6da" translate="yes" xml:space="preserve">
          <source>Add the named function or function handle &lt;var&gt;fcn&lt;/var&gt; to the list of functions to call periodically when Octave is waiting for input.</source>
          <target state="translated">Octave가 입력을 기다릴 때 주기적으로 호출 할 함수 목록에 이름 지정된 함수 또는 함수 핸들 &lt;var&gt;fcn&lt;/var&gt; 을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="54c6c5096f88c87560cc837ac713b736fe6c5ffd" translate="yes" xml:space="preserve">
          <source>Add the next character that you type to the line verbatim. This is how to insert things like</source>
          <target state="translated">입력 한 다음 문자를 직선 그대로 추가하십시오. 이것은 같은 것을 삽입하는 방법입니다</target>
        </trans-unit>
        <trans-unit id="e8e1b1a2971a46ddb7e3ff8664d2e0cca97e8bfa" translate="yes" xml:space="preserve">
          <source>Add the preference &lt;var&gt;pref&lt;/var&gt; and associated value &lt;var&gt;val&lt;/var&gt; to the named preference group &lt;var&gt;group&lt;/var&gt;.</source>
          <target state="translated">환경 설정 &lt;var&gt;pref&lt;/var&gt; 및 연관된 값 &lt;var&gt;val&lt;/var&gt; 을 이름 지정된 환경 설정 그룹 &lt;var&gt;group&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="de908bf0b6dcbd04ab0ef94e1df703689cbfff34" translate="yes" xml:space="preserve">
          <source>Add the run-time path to the link command.</source>
          <target state="translated">링크 명령에 런타임 경로를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="62c11c7ee6a6629ff679734433348e9c1ac4c955" translate="yes" xml:space="preserve">
          <source>Adding &amp;rsquo;*&amp;rsquo; to the start of any method above forces &lt;code&gt;interp1&lt;/code&gt; to assume that &lt;var&gt;x&lt;/var&gt; is uniformly spaced, and only &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(1)&lt;/code&gt; and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(2)&lt;/code&gt; are referenced. This is usually faster, and is never slower. The default method is &lt;code&gt;&quot;linear&quot;&lt;/code&gt;.</source>
          <target state="translated">위의 모든 메소드의 시작에 '*'를 추가하면 &lt;code&gt;interp1&lt;/code&gt; 이 &lt;var&gt;x&lt;/var&gt; 의 간격이 일정하고 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(1)&lt;/code&gt; 과 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;(2)&lt;/code&gt; 만 참조 한다고 가정합니다 . 이것은 일반적으로 더 빠르며 결코 느리지 않습니다. 기본 방법은 &lt;code&gt;&quot;linear&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4b5b5fb67d93f9117697b055a69f9c8a816d57f4" translate="yes" xml:space="preserve">
          <source>Adding a diagonal matrix to a full matrix only operates on the diagonal elements. Thus,</source>
          <target state="translated">전체 행렬에 대각선 행렬을 추가하면 대각선 요소에서만 작동합니다. 그러므로,</target>
        </trans-unit>
        <trans-unit id="b3fd2af17cba49a75302698893fdd47663d6a322" translate="yes" xml:space="preserve">
          <source>Addition. If both operands are matrices, the number of rows and columns must both agree, or they must be broadcastable to the same shape.</source>
          <target state="translated">덧셈. 두 피연산자가 모두 행렬 인 경우 행과 열의 개수가 모두 일치해야하거나 동일한 모양으로 브로드 캐스트 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0447d6bfd09800b82881120f781f5d1d3e23b435" translate="yes" xml:space="preserve">
          <source>Additional Calling Syntaxes</source>
          <target state="translated">추가 호출 구문</target>
        </trans-unit>
        <trans-unit id="c056418031dbea0f66c1f5fb72666941f6b6b787" translate="yes" xml:space="preserve">
          <source>Additional arguments &lt;var&gt;p1&lt;/var&gt;, etc., are passed directly to the function &lt;var&gt;f&lt;/var&gt;. To use default values for &lt;var&gt;tol&lt;/var&gt; and &lt;var&gt;trace&lt;/var&gt;, one may pass empty matrices ([]).</source>
          <target state="translated">추가 인수 &lt;var&gt;p1&lt;/var&gt; 등은 함수 &lt;var&gt;f&lt;/var&gt; 로 직접 전달됩니다 . &lt;var&gt;tol&lt;/var&gt; 과 &lt;var&gt;trace&lt;/var&gt; 에 기본값을 사용하기 위해 빈 행렬 ([])을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9c5027f7e50f04ff05bb5b67ba152f31fda5505" translate="yes" xml:space="preserve">
          <source>Additional arguments are summarized below.</source>
          <target state="translated">추가 인수는 아래에 요약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a049381559e8c336efe4fa460310ed899b58f5f7" translate="yes" xml:space="preserve">
          <source>Additional arguments determine the shape of the return matrix. When no arguments are specified a single random integer is returned. If one argument &lt;var&gt;n&lt;/var&gt; is specified then a square matrix (&lt;var&gt;n&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt;) is returned. Two or more arguments will return a multi-dimensional matrix (&lt;var&gt;m&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt; x &amp;hellip;).</source>
          <target state="translated">추가 인수는 반환 행렬의 모양을 결정합니다. 인수가 지정되지 않으면 단일 임의의 정수가 리턴됩니다. 하나의 인수 &lt;var&gt;n&lt;/var&gt; 이 지정되면 정사각 행렬 ( &lt;var&gt;n&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt; )이 반환됩니다. 두 개 이상의 인수는 다차원 행렬 ( &lt;var&gt;m&lt;/var&gt; x &lt;var&gt;n&lt;/var&gt; x&amp;hellip;) 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9ef9910eac39a9c0f67a9df782f0603c3119bbe0" translate="yes" xml:space="preserve">
          <source>Additional arguments name a list of parent classes from which the new class is derived.</source>
          <target state="translated">추가 인수는 새 클래스가 파생되는 상위 클래스 목록을 명명합니다.</target>
        </trans-unit>
        <trans-unit id="f4f92256872764d03337f006920f18898026ed14" translate="yes" xml:space="preserve">
          <source>Additional arguments to pass to the external plotting program may also be given. The default value is &lt;code&gt;&quot;gnuplot&quot;&lt;/code&gt; with no additional arguments. See &lt;a href=&quot;installation#Installation&quot;&gt;Installation&lt;/a&gt;.</source>
          <target state="translated">외부 플로팅 프로그램에 전달할 추가 인수도 제공 될 수 있습니다. 기본값은 추가 인수없이 &lt;code&gt;&quot;gnuplot&quot;&lt;/code&gt; 입니다. &lt;a href=&quot;installation#Installation&quot;&gt;설치를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3dcf1e434ce0ea6fd932801239e8679840dcb922" translate="yes" xml:space="preserve">
          <source>Additional arguments, are passed directly to &lt;var&gt;f&lt;/var&gt;. To use the default value for &lt;var&gt;tol&lt;/var&gt; or &lt;var&gt;quadf&lt;/var&gt; one may pass &lt;code&gt;':'&lt;/code&gt; or an empty matrix ([]).</source>
          <target state="translated">추가 인수는 &lt;var&gt;f&lt;/var&gt; 로 직접 전달됩니다 . 디폴트 값을 사용하려면 &lt;var&gt;tol&lt;/var&gt; 또는 &lt;var&gt;quadf&lt;/var&gt; 하나가 통과 할 수 &lt;code&gt;':'&lt;/code&gt; 또는 빈 매트릭스 ([]).</target>
        </trans-unit>
        <trans-unit id="be5674f80d63a4d9c55960001e7afefb5cbae95f" translate="yes" xml:space="preserve">
          <source>Additional devices are supported by Ghostscript. Some examples are:</source>
          <target state="translated">Ghostscript는 추가 장치를 지원합니다. 몇 가지 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8388cd8f249e3ebcce51ac26721d45380f0470f" translate="yes" xml:space="preserve">
          <source>Additional information about the size of the facets of a Voronoi diagram, and which points of a set of points is in a polygon can be had with the &lt;code&gt;polyarea&lt;/code&gt; and &lt;code&gt;inpolygon&lt;/code&gt; functions respectively.</source>
          <target state="translated">Voronoi 다이어그램의 패싯 크기 및 다각형에있는 점 세트의 점에 대한 추가 정보는 각각 &lt;code&gt;polyarea&lt;/code&gt; 및 &lt;code&gt;inpolygon&lt;/code&gt; 함수 를 통해 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d53bc593ae8a7a39ddeafe46e37c20844631bcdf" translate="yes" xml:space="preserve">
          <source>Additional name/value argument pairs may be used to specify the following options:</source>
          <target state="translated">추가 이름 / 값 인수 쌍을 사용하여 다음 옵션을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ccdb138a5a80e383ad88458acf2e7443dcfb0f1" translate="yes" xml:space="preserve">
          <source>Additional optional parameters can be specified using &lt;code&gt;&quot;&lt;var&gt;property&lt;/var&gt;&quot;, &lt;var&gt;value&lt;/var&gt;&lt;/code&gt; pairs. Valid properties are:</source>
          <target state="translated">추가 옵션 매개 변수는 &lt;code&gt;&quot;&lt;var&gt;property&lt;/var&gt;&quot;, &lt;var&gt;value&lt;/var&gt;&lt;/code&gt; 쌍을 사용하여 지정할 수 있습니다 . 유효한 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9f11388a950a6d807a292ab20b4aff4c6c9992d8" translate="yes" xml:space="preserve">
          <source>Additional options can be passed for &lt;small&gt;MATLAB&lt;/small&gt; compatibility, but are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa496df3eabaf4a93148f5ed3ede5535f297f1d" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying axes object.</source>
          <target state="translated">추가 속성 / 값 쌍은 기본 좌표축 개체로 직접 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="e6a2f7d27a832e29a53a29343dcd1bd24a09ea3f" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying axes object. The full list of properties is documented at &lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;Axes Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d4f6fad9867c22a5c45d5b7658eddf4cc2e764" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying patch object.</source>
          <target state="translated">추가 속성 / 값 쌍이 기본 패치 객체로 직접 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="e573914d7ded986fc344a5caaeb065a05a6922f0" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed directly to the underlying patch object. The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398a9dc30f978f6d3a9ee61f7cdcb15641aa76bc" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed to the underlying patch command.</source>
          <target state="translated">추가 속성 / 값 쌍이 기본 패치 명령으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2a901691ad810b6de416ad21da1d924a87067d6b" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs are passed to the underlying patch command. The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6d5d74b09fadf8c28b8a4eee3a50a0129e0f07" translate="yes" xml:space="preserve">
          <source>Additional property/value pairs that are valid properties of text objects can be given and are passed to the underlying text objects. Moreover, the contour group property &lt;code&gt;&quot;LabelSpacing&quot;&lt;/code&gt; is available which determines the spacing between labels on a contour to be specified. The default is 144 points, or 2 inches.</source>
          <target state="translated">텍스트 개체의 유효한 속성 인 추가 속성 / 값 쌍을 제공하여 기본 텍스트 개체에 전달할 수 있습니다. 또한 형상 그룹 속성 &lt;code&gt;&quot;LabelSpacing&quot;&lt;/code&gt; 을 사용하여 지정할 형상의 레이블 간격을 결정할 수 있습니다. 기본값은 144 포인트 또는 2 인치입니다.</target>
        </trans-unit>
        <trans-unit id="7d78329de6560cff7813a234a9c28a35edcc5234" translate="yes" xml:space="preserve">
          <source>Additional supported options: &lt;code&gt;milu&lt;/code&gt;, &lt;code&gt;droptol&lt;/code&gt;, &lt;code&gt;udiag&lt;/code&gt;, &lt;code&gt;thresh&lt;/code&gt;.</source>
          <target state="translated">추가 지원 옵션 : &lt;code&gt;milu&lt;/code&gt; , &lt;code&gt;droptol&lt;/code&gt; , &lt;code&gt;udiag&lt;/code&gt; , &lt;code&gt;thresh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c745654b9906d5c131c23d43944958f3034f969" translate="yes" xml:space="preserve">
          <source>Additional supported options: &lt;code&gt;milu&lt;/code&gt;, &lt;code&gt;droptol&lt;/code&gt;.</source>
          <target state="translated">추가 지원 옵션 : &lt;code&gt;milu&lt;/code&gt; , &lt;code&gt;droptol&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b14ce03e4375fad9f8983abe7abff68737ed8482" translate="yes" xml:space="preserve">
          <source>Additional supported options: &lt;code&gt;milu&lt;/code&gt;.</source>
          <target state="translated">추가 지원 옵션 : &lt;code&gt;milu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d54f28fc0f350be5930e3fd10c6ac11b27a91c4c" translate="yes" xml:space="preserve">
          <source>Additional user arguments can be passed to callback functions, and will be passed after the two default arguments. For example:</source>
          <target state="translated">추가 사용자 인수는 콜백 함수에 전달 될 수 있으며 두 개의 기본 인수 뒤에 전달됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="515ad67c1542a0d57511a34069d52ed97b7d9edb" translate="yes" xml:space="preserve">
          <source>Additionally two trademark symbols are supported, just embrace the letters &amp;lsquo;</source>
          <target state="translated">또한 두 개의 상표 기호가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c022cd87e430568a7ae691aefd7f5a998252aba2" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;cellfun&lt;/code&gt; accepts an arbitrary function &lt;var&gt;func&lt;/var&gt; in the form of an inline function, function handle, or the name of a function (in a character string). The function can take one or more arguments, with the inputs arguments given by &lt;var&gt;C&lt;/var&gt;, &lt;var&gt;D&lt;/var&gt;, etc. Equally the function can return one or more output arguments. For example:</source>
          <target state="translated">또한 &lt;code&gt;cellfun&lt;/code&gt; 은 인라인 함수, 함수 핸들 또는 함수 이름 (문자열)의 형태로 임의의 함수 &lt;var&gt;func&lt;/var&gt; 를 허용합니다 . 이 함수는 &lt;var&gt;C&lt;/var&gt; , &lt;var&gt;D&lt;/var&gt; 에 의해 주어진 입력 인수와 함께 하나 이상의 인수를 취할 수 있습니다. 등에 . 마찬가지로 함수는 하나 이상의 출력 인수를 리턴 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9be1fcff9ad8364f038df91bcf677fdc5c68732" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;material&lt;/code&gt; can be called with a single output argument. If called without input arguments, a column cell vector &lt;var&gt;mtypes&lt;/var&gt; with the strings for all available materials is returned. If the one input argument &lt;var&gt;mtype_string&lt;/var&gt; is the name of a material, a 1x5 cell vector &lt;var&gt;refl_props&lt;/var&gt; with the reflectance properties of that material is returned. In both cases, no graphic properties are changed.</source>
          <target state="translated">또한 단일 출력 인수로 &lt;code&gt;material&lt;/code&gt; 를 호출 할 수 있습니다. 입력 인수없이 호출되면 사용 가능한 모든 재료에 대한 문자열이 포함 된 열 셀 벡터 &lt;var&gt;mtypes&lt;/var&gt; 이 반환됩니다. 하나의 입력 인수 &lt;var&gt;mtype_string&lt;/var&gt; 이 재료의 이름 인 경우 해당 재료 의 반사 특성을 가진 &lt;var&gt;refl_props&lt;/var&gt; 셀 벡터 refl_props 가 반환됩니다. 두 경우 모두 그래픽 속성이 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fcf6256a04236645edd2c3597571bb4e474cd348" translate="yes" xml:space="preserve">
          <source>Additionally, class methods can be defined as functions in a folder of the same name as the class prepended with the &amp;lsquo;</source>
          <target state="translated">또한 클래스 메소드는 '가 앞에 붙은 클래스와 동일한 이름의 폴더에서 함수로 정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab22ed17a10b08a585d69a547c574f55303cb3c3" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;code&gt;sparse_auto_mutate&lt;/code&gt; is true, all sparse functions test the amount of memory occupied by the sparse matrix to see if the amount of storage used is larger than the amount used by the full equivalent. Therefore &lt;code&gt;speye (2) * 1&lt;/code&gt; will return a full matrix as the memory used is smaller for the full version than the sparse version.</source>
          <target state="translated">또한 &lt;code&gt;sparse_auto_mutate&lt;/code&gt; 가 true 인 경우 모든 스파 스 함수는 스파 스 매트릭스가 차지하는 메모리 크기를 테스트하여 사용 된 스토리지 용량이 전체 용량이 사용하는 용량보다 큰지 확인합니다. 따라서 &lt;code&gt;speye (2) * 1&lt;/code&gt; 은 사용 된 메모리가 희소 버전보다 정식 버전보다 작으므로 전체 행렬을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8f87b2c82d9d62268375625d6e240de0e96cd08b" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;var&gt;i&lt;/var&gt; is a requested output then one of &lt;code&gt;&quot;first&quot;&lt;/code&gt; or &lt;code&gt;&quot;last&quot;&lt;/code&gt; may be given as an input. If &lt;code&gt;&quot;last&quot;&lt;/code&gt; is specified, return the highest possible indices in &lt;var&gt;i&lt;/var&gt;, otherwise, if &lt;code&gt;&quot;first&quot;&lt;/code&gt; is specified, return the lowest. The default is &lt;code&gt;&quot;last&quot;&lt;/code&gt;.</source>
          <target state="translated">또한 &lt;var&gt;i&lt;/var&gt; 가 요청 된 출력 인 경우 &lt;code&gt;&quot;first&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;last&quot;&lt;/code&gt; 중 하나가 입력으로 제공 될 수 있습니다. 경우 &lt;code&gt;&quot;last&quot;&lt;/code&gt; 지정되어에서 가장 높은 인덱스를 반환 &lt;var&gt;i&lt;/var&gt; , 그렇지 않으면, &lt;code&gt;&quot;first&quot;&lt;/code&gt; 지정된 최저를 반환합니다. 기본값은 &lt;code&gt;&quot;last&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f66573b3453b3713e434a873e0d31da28a29f6b6" translate="yes" xml:space="preserve">
          <source>Additionally, if &lt;var&gt;i&lt;/var&gt; is a requested output then one of the flags &lt;code&gt;&quot;first&quot;&lt;/code&gt; or &lt;code&gt;&quot;last&quot;&lt;/code&gt; may be given. If &lt;code&gt;&quot;last&quot;&lt;/code&gt; is specified, return the highest possible indices in &lt;var&gt;i&lt;/var&gt;, otherwise, if &lt;code&gt;&quot;first&quot;&lt;/code&gt; is specified, return the lowest. The default is &lt;code&gt;&quot;first&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d78940b21ee1dd185d630447ba0dc0de8b771b3" translate="yes" xml:space="preserve">
          <source>Additionally, index expressions also use lazy copying when Octave can determine that the indexed portion is contiguous in memory. For example:</source>
          <target state="translated">또한 Octave가 인덱스 된 부분이 메모리에서 연속적임을 결정할 수있는 경우 인덱스 표현식은 지연 복사도 사용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ada3ae8d5c162a74f6cacc83c9333bbf64090272" translate="yes" xml:space="preserve">
          <source>Additionally, the following libraries use &lt;code&gt;int&lt;/code&gt; internally, so maximum problem sizes are always limited:</source>
          <target state="translated">또한 다음 라이브러리는 내부적으로 &lt;code&gt;int&lt;/code&gt; 를 사용 하므로 최대 문제 크기는 항상 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="f42b9f41d68a0c627b7960f7f3b335fb5ea2fba1" translate="yes" xml:space="preserve">
          <source>Additionally, the following tools may be needed:</source>
          <target state="translated">또한 다음 도구가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b16d8a8319cfdc2d14b5c7422ef0c5cd635ce76" translate="yes" xml:space="preserve">
          <source>Additionally, there are dialog boxes for displaying help messages, warnings, or errors, and for getting text input from the user.</source>
          <target state="translated">또한 도움말 메시지, 경고 또는 오류를 표시하고 사용자로부터 텍스트를 입력하기위한 대화 상자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="5989a9e3e7f0c0f12db2d04ad60c803606686d4c" translate="yes" xml:space="preserve">
          <source>Additionally, you may append a &lt;code&gt;&quot;z&quot;&lt;/code&gt; to the mode string to open a gzipped file for reading or writing. For this to be successful, you must also open the file in binary mode.</source>
          <target state="translated">또한 모드 문자열에 &lt;code&gt;&quot;z&quot;&lt;/code&gt; 를 추가하여 읽거나 쓸 수 있도록 gzip 파일을 열 수 있습니다. 이 작업을 성공적으로 수행하려면 파일을 이진 모드로 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="962125c11e58f2ce0df60653f29ed2ecfc7c2353" translate="yes" xml:space="preserve">
          <source>Administrating Packages</source>
          <target state="translated">패키지 관리</target>
        </trans-unit>
        <trans-unit id="844469f2b8d8412b5a4567e479daba7bde6a4013" translate="yes" xml:space="preserve">
          <source>Adobe Illustrator (obsolete for Gnuplot versions &amp;gt; 4.2)</source>
          <target state="translated">Adobe Illustrator (Gnuplot 버전&amp;gt; 4.2 이상)</target>
        </trans-unit>
        <trans-unit id="e4a9df64655f2d3ba6fe67579fc92c420e65f624" translate="yes" xml:space="preserve">
          <source>Advanced Indexing</source>
          <target state="translated">고급 인덱싱</target>
        </trans-unit>
        <trans-unit id="1f295b836324624013c2fbd24b9174c066cc0e28" translate="yes" xml:space="preserve">
          <source>Advanced Plotting</source>
          <target state="translated">고급 플로팅</target>
        </trans-unit>
        <trans-unit id="788fdafb40ba6d1020611357d53041215158e1c3" translate="yes" xml:space="preserve">
          <source>After a successful computation, the value of &lt;var&gt;istate&lt;/var&gt; will be 2 (consistent with the Fortran version of &lt;small&gt;LSODE&lt;/small&gt;).</source>
          <target state="translated">성공적인 계산 후 &lt;var&gt;istate&lt;/var&gt; 값은 2입니다 (Fortran 버전의 &lt;small&gt;LSODE&lt;/small&gt; 와 일치 ).</target>
        </trans-unit>
        <trans-unit id="55f6c75e576a28a1e5cf7461b47f52b55d9ce764" translate="yes" xml:space="preserve">
          <source>After a successful computation, the value of &lt;var&gt;istate&lt;/var&gt; will be greater than zero (consistent with the Fortran version of &lt;small&gt;DASPK&lt;/small&gt;).</source>
          <target state="translated">성공적으로 계산 한 결과, 값 &lt;var&gt;istate&lt;/var&gt; 는 (포트란의 버전과 일치 이상 0이된다 &lt;small&gt;DASPK&lt;/small&gt; ).</target>
        </trans-unit>
        <trans-unit id="dbcfce5ac023b52cbebc3cff1463b5bd3e886e83" translate="yes" xml:space="preserve">
          <source>After a successful computation, the value of &lt;var&gt;istate&lt;/var&gt; will be greater than zero (consistent with the Fortran version of &lt;small&gt;DASSL&lt;/small&gt;).</source>
          <target state="translated">성공적인 계산 후 &lt;var&gt;istate&lt;/var&gt; 값은 0보다 큽니다 ( &lt;small&gt;DASSL&lt;/small&gt; 의 포트란 버전과 &lt;small&gt;일치&lt;/small&gt; ).</target>
        </trans-unit>
        <trans-unit id="8a5225740c7352fc38d6ca22b150550b62db8195" translate="yes" xml:space="preserve">
          <source>After all of the calling forms have been enumerated, the next line is a concise one-sentence summary of the function.</source>
          <target state="translated">모든 호출 양식이 열거 된 후 다음 행은 기능에 대한 간결한 한 문장 요약입니다.</target>
        </trans-unit>
        <trans-unit id="641a80d7ffb9950b564ac7e884afdbc9b019fcde" translate="yes" xml:space="preserve">
          <source>After being marked as deprecated for two major releases, the following functions have been removed from Octave. The third column of the table shows the version of Octave in which the function was removed. Prior to removal, each function in the list was marked as deprecated for at least two major releases. All deprecated functions issue warnings explaining that they will be removed in a future version of Octave, and which function should be used instead.</source>
          <target state="translated">두 가지 주요 릴리스에서 더 이상 사용되지 않는 것으로 표시된 후 다음 기능이 Octave에서 제거되었습니다. 표의 세 번째 열에는 함수가 제거 된 Octave 버전이 표시됩니다. 제거하기 전에 목록의 각 기능은 2 개 이상의 주요 릴리스에서 더 이상 사용되지 않는 것으로 표시되었습니다. 더 이상 사용되지 않는 모든 기능은 이후 버전의 Octave에서 제거 될 예정이며 대신 어떤 기능을 사용해야하는지 설명하는 경고를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="abc1edab849dacf46a1cba1b85f77fed9b76108a" translate="yes" xml:space="preserve">
          <source>After defining the function API with these methods, the supplied arguments can be parsed with the &lt;code&gt;parse&lt;/code&gt; method and the parsing results accessed with the &lt;code&gt;Results&lt;/code&gt; accessor.</source>
          <target state="translated">이러한 방법으로 함수 API를 정의한 후, 제공된 인수는 함께 구문 분석 할 수 &lt;code&gt;parse&lt;/code&gt; 방법과 함께 액세스 할 수있는 구문 분석 결과 &lt;code&gt;Results&lt;/code&gt; 액세서.</target>
        </trans-unit>
        <trans-unit id="99b07fc25798c1fd795d08592620f454adfcdc79" translate="yes" xml:space="preserve">
          <source>After importing, the data may need to be transformed before further analysis. The &lt;code&gt;rescale&lt;/code&gt; function can shift and normalize a data set to a specified range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839498171800fa5ea000f805ff788ab3e54e1f07" translate="yes" xml:space="preserve">
          <source>After the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; arguments there can be 1, 2, or 4 parameters specifying the error values depending on the nature of the error values and the plot format &lt;var&gt;fmt&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 인수 뒤에는 오류 값의 특성 및 플롯 형식 &lt;var&gt;fmt&lt;/var&gt; 에 따라 오류 값을 지정하는 1, 2 또는 4 개의 매개 변수가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1419b4e9c9752e71c3a8086c187f2b0e48163032" translate="yes" xml:space="preserve">
          <source>After the summary there may be documentation on the inputs and outputs, examples of function usage, notes about the algorithm used, and references to related functions.</source>
          <target state="translated">요약 후 입력 및 출력, 함수 사용 예, 사용 된 알고리즘에 대한 참고 사항 및 관련 함수에 대한 문서가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0cf853f06f2de9c5afaa1218c6eb1669049f05f" translate="yes" xml:space="preserve">
          <source>After this expression is executed, the variable &lt;code&gt;z&lt;/code&gt; has the value 1. Whatever old value &lt;code&gt;z&lt;/code&gt; had before the assignment is forgotten. The &amp;lsquo;</source>
          <target state="translated">이 표현식이 실행 된 후 변수 &lt;code&gt;z&lt;/code&gt; 는 값 1을 갖습니다 . 대입을 잊기 전에 이전 값 &lt;code&gt;z&lt;/code&gt; 가 있던 값 . '</target>
        </trans-unit>
        <trans-unit id="4525c3bb93922857e95ef3a494c6d62d6903eeeb" translate="yes" xml:space="preserve">
          <source>After this it is possible to evaluate &lt;em&gt;f&lt;/em&gt; at any &lt;em&gt;x&lt;/em&gt; by writing &lt;code&gt;f(x)&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;code&gt;f(x)&lt;/code&gt; 작성 하여 모든 &lt;em&gt;x&lt;/em&gt; 에서 &lt;em&gt;f&lt;/em&gt; 를 평가할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb8ec5278747e54be417fa72b0b6c6cb050b1b57" translate="yes" xml:space="preserve">
          <source>After this the directory &amp;lsquo;</source>
          <target state="translated">이 후 디렉토리 '</target>
        </trans-unit>
        <trans-unit id="3434417a8e169ae6812ea314999d1fcfdbeb322e" translate="yes" xml:space="preserve">
          <source>Algebraic eigenvalue balancing uses standard &lt;small&gt;LAPACK&lt;/small&gt; routines.</source>
          <target state="translated">대수 고유 값 밸런싱은 표준 &lt;small&gt;LAPACK&lt;/small&gt; 루틴을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="6a038ebb6b16de1f4f549a1da48813e0c5e468a5" translate="yes" xml:space="preserve">
          <source>Algorithm Note: &lt;code&gt;condest&lt;/code&gt; uses a randomized algorithm to approximate the 1-norms. Therefore, if consistent results are required, the &lt;code&gt;&quot;state&quot;&lt;/code&gt; of the random generator should be fixed before invoking &lt;code&gt;condest&lt;/code&gt;.</source>
          <target state="translated">알고리즘 참고 : &lt;code&gt;condest&lt;/code&gt; 는 무작위 알고리즘을 사용하여 1- 노름을 근사화합니다. 따라서 일관된 결과가 필요한 경우 무작위 발생기 의 &lt;code&gt;&quot;state&quot;&lt;/code&gt; 는 &lt;code&gt;condest&lt;/code&gt; 를 호출하기 전에 고정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1a14c3f1cf2d2b159d6561496ca82e4227c694b1" translate="yes" xml:space="preserve">
          <source>Algorithm Note: &lt;code&gt;normest1&lt;/code&gt; uses random numbers during evaluation. Therefore, if consistent results are required, the &lt;code&gt;&quot;state&quot;&lt;/code&gt; of the random generator should be fixed before invoking &lt;code&gt;normest1&lt;/code&gt;.</source>
          <target state="translated">알고리즘 참고 : &lt;code&gt;normest1&lt;/code&gt; 은 평가 중에 난수를 사용합니다. 따라서 일관된 결과가 필요하면 &lt;code&gt;normest1&lt;/code&gt; 을 호출하기 전에 랜덤 생성기 의 &lt;code&gt;&quot;state&quot;&lt;/code&gt; 를 수정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6806c0072d1a259c2daf56e6e8cc3c76d85a0ec3" translate="yes" xml:space="preserve">
          <source>Algorithm Notes: The &lt;small&gt;LAPACK&lt;/small&gt; library provides two routines for calculating the full singular value decomposition (left and right singular matrices as well as singular values). When calculating just the singular values the following discussion is not relevant.</source>
          <target state="translated">알고리즘 참고 사항 : &lt;small&gt;LAPACK&lt;/small&gt; 라이브러리는 전체 특이 값 분해를 계산하기위한 두 가지 루틴을 제공합니다 (왼쪽 및 오른쪽 특이점 행렬과 특이 값). 단수 값만 계산할 때 다음 설명은 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="371282deef3cff30ed747af4d31c617cf9bce453" translate="yes" xml:space="preserve">
          <source>Algorithm Notes: When calculating the full decomposition (left and right singular matrices in addition to singular values) there is a choice of two routines in &lt;small&gt;LAPACK&lt;/small&gt;. The default routine used by Octave is &lt;code&gt;gesvd&lt;/code&gt;. The alternative is &lt;code&gt;gesdd&lt;/code&gt; which is 5X faster, but may use more memory and may be inaccurate for some input matrices. See the documentation for &lt;code&gt;svd_driver&lt;/code&gt; for more information on choosing a driver.</source>
          <target state="translated">알고리즘 참고 사항 : 전체 분해 (단수 값 외에 왼쪽 및 오른쪽 특이 행렬)를 계산할 때 &lt;small&gt;LAPACK&lt;/small&gt; 에는 두 가지 루틴이 있습니다. Octave에서 사용하는 기본 루틴은 &lt;code&gt;gesvd&lt;/code&gt; 입니다. 대안은 &lt;code&gt;gesdd&lt;/code&gt; 입니다 로 5 배 빠르지 만 더 많은 메모리를 사용하고 일부 입력 행렬에 대해 부정확 할 수 있습니다. 드라이버 선택에 대한 자세한 내용 은 &lt;code&gt;svd_driver&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="661238701f984d64e82da00db553696522487eb6" translate="yes" xml:space="preserve">
          <source>Algorithm taken from Golub and Van Loan,</source>
          <target state="translated">Golub과 Van Loan에서 가져온 알고리즘</target>
        </trans-unit>
        <trans-unit id="04f7320c8d82a21ae8fd727c2ed0cf8b44ef5bd2" translate="yes" xml:space="preserve">
          <source>Algorithm terminated by &lt;code&gt;OutputFcn&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OutputFcn&lt;/code&gt; 에 의해 종료 된 알고리즘 .</target>
        </trans-unit>
        <trans-unit id="3b0e292233723cf707d87dc7097f15f9c24a5c28" translate="yes" xml:space="preserve">
          <source>Algorithm: The normal vectors are calculated by taking the cross product of the diagonals of each of the quadrilateral faces in the meshgrid to find the normal vectors at the center of each face. Next, for each meshgrid point the four nearest normal vectors are averaged to obtain the final normal to the surface at the meshgrid point.</source>
          <target state="translated">알고리즘 : 법선 벡터는 메쉬 그리드에서 각 사변형의 대각선의 교차 곱을 취하여 각면의 중심에서 법선 벡터를 찾아 계산됩니다. 다음으로, 각 메쉬 그리드 점에 대해 메쉬 그리드 점의 표면에 대한 최종 법선을 얻기 위해 가장 가까운 4 개의 법선 벡터를 평균화합니다.</target>
        </trans-unit>
        <trans-unit id="7f119bec6d5a8e053f754a7e2b1d94bbd4f0d3c3" translate="yes" xml:space="preserve">
          <source>All Java-based routines are run in the JVM&amp;rsquo;s shared memory pool, a dedicated and separate part of memory claimed by the JVM from your computer&amp;rsquo;s total memory (which comprises physical RAM and virtual memory / swap space on hard disk).</source>
          <target state="translated">모든 Java 기반 루틴은 JVM의 공유 메모리 풀에서 실행되며, JVM이 컴퓨터의 전체 메모리 (하드 디스크의 가상 메모리 / 스왑 공간을 포함하는 총 메모리)에서 요구하는 전용 메모리 부분입니다.</target>
        </trans-unit>
        <trans-unit id="59fd70f263ae2af6687c8d258c203bd2b5cf3aa4" translate="yes" xml:space="preserve">
          <source>All annotation objects share two properties:</source>
          <target state="translated">모든 주석 객체는 두 가지 속성을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="834c6527da85cf6750d2cd832415588861b48472" translate="yes" xml:space="preserve">
          <source>All arguments must be numeric and either two-dimensional matrices or scalars. If any argument is of type sparse, the output will also be sparse.</source>
          <target state="translated">모든 인수는 숫자이고 2 차원 행렬 또는 스칼라 여야합니다. 인수가 sparse 유형 인 경우 출력도 드문 것입니다.</target>
        </trans-unit>
        <trans-unit id="0444ce038e1824a2bbbf841fa9363a2c73719f6a" translate="yes" xml:space="preserve">
          <source>All arguments must be the same size or scalar. For arrays, the greatest common divisor is calculated for each element individually. All elements must be ordinary or Gaussian (complex) integers. Note that for Gaussian integers, the gcd is only unique up to a phase factor (multiplication by 1, -1, i, or -i), so an arbitrary greatest common divisor among the four possible is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c2f9d97ae998668068d4dda3ca7d062aaea08e" translate="yes" xml:space="preserve">
          <source>All characters in the pattern, including whitespace, are significant and are used in pattern matching. (default)</source>
          <target state="translated">공백을 포함하여 패턴의 모든 문자는 중요하며 패턴 일치에 사용됩니다. (기본)</target>
        </trans-unit>
        <trans-unit id="5b67bcc8a9ffbfd036fb1d77f059428298340caf" translate="yes" xml:space="preserve">
          <source>All class methods must be defined within &lt;code&gt;methods&lt;/code&gt; blocks. An exception to this rule is described at the end of this subsection. Those &lt;code&gt;methods&lt;/code&gt; blocks can have additional attributes specifying the access rights or whether the methods are static, i.e., methods that can be called without creating an object of that class.</source>
          <target state="translated">모든 클래스 메소드는 &lt;code&gt;methods&lt;/code&gt; 블록 내에 정의되어야합니다 . 이 규칙의 예외는이 하위 섹션의 끝에 설명되어 있습니다. 이러한 &lt;code&gt;methods&lt;/code&gt; 블록은 액세스 권한을 지정하거나 메소드가 정적인지 여부, 즉 해당 클래스의 오브젝트를 작성하지 않고 호출 할 수있는 메소드를 지정하는 추가 속성을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd937bc3ec90d0214bccf9fd40e16800778c571c" translate="yes" xml:space="preserve">
          <source>All class properties must be defined within &lt;code&gt;properties&lt;/code&gt; blocks. The definition of a default value for a property is optional and can be omitted. The default initial value for each class property is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">모든 클래스 속성은 &lt;code&gt;properties&lt;/code&gt; 블록 내에 정의해야합니다 . 속성의 기본값 정의는 선택 사항이므로 생략 할 수 있습니다. 각 클래스 속성의 기본 초기 값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f2c5033a0a28630bdbcea0a3d524ec7bb330533" translate="yes" xml:space="preserve">
          <source>All device formats accepted by &lt;code&gt;print&lt;/code&gt; may be used. Common formats are:</source>
          <target state="translated">&lt;code&gt;print&lt;/code&gt; 가 허용하는 모든 장치 형식을 사용할 수 있습니다. 일반적인 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="187e841129e58a6f630d680147332484c236c093" translate="yes" xml:space="preserve">
          <source>All elements must be numeric and of the same size or scalar.</source>
          <target state="translated">모든 요소는 숫자 여야하며 동일한 크기 또는 스칼라 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6ee94ae72ac7689fd84fe05054a6972bcb4baa33" translate="yes" xml:space="preserve">
          <source>All future commands issued during the current Octave session will be written to this new file (if the current setting of &lt;code&gt;history_save&lt;/code&gt; allows for this).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eab0b3414ce217c15c996c14a9def3a23a65d5a" translate="yes" xml:space="preserve">
          <source>All key-value pairs given (&lt;var&gt;name1&lt;/var&gt;, &lt;var&gt;value1&lt;/var&gt;, &amp;hellip;) are added as pairs of query parameters to the body of request method (&lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61352eadb23427b1379bd7a6751c258363778c1" translate="yes" xml:space="preserve">
          <source>All key-value pairs given (&lt;var&gt;name1&lt;/var&gt;, &lt;var&gt;value1&lt;/var&gt;, &amp;hellip;) are appended as query parameters to &lt;var&gt;url&lt;/var&gt;. To place a query in the body of the message, use &lt;code&gt;webwrite&lt;/code&gt;. The web service defines the acceptable query parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce23de831afed44b2b7ba24a9661a822cce05c80" translate="yes" xml:space="preserve">
          <source>All libraries and header files will be installed in subdirectories of &lt;code&gt;$prefix64&lt;/code&gt; (you must choose the location of this directory).</source>
          <target state="translated">모든 라이브러리와 헤더 파일은 &lt;code&gt;$prefix64&lt;/code&gt; 하위 디렉토리에 설치됩니다 (이 디렉토리의 위치를 ​​선택해야합니다).</target>
        </trans-unit>
        <trans-unit id="b2c6271553eaf5a21eda5e02fb3f713d1aff5bcc" translate="yes" xml:space="preserve">
          <source>All of Octave&amp;rsquo;s comparison operators return a value of 1 if the comparison is true, or 0 if it is false. For matrix values, they all work on an element-by-element basis. Broadcasting rules apply. See &lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;Broadcasting&lt;/a&gt;. For example:</source>
          <target state="translated">Octave의 모든 비교 연산자는 비교가 참이면 1의 값을 리턴하고 거짓이면 0을 리턴합니다. 행렬 값의 경우 모두 요소별로 작동합니다. 방송 규칙이 적용됩니다. &lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;방송을&lt;/a&gt; 참조하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="281a4cde8876e88cd9eebce4d5efcd73c817ef21" translate="yes" xml:space="preserve">
          <source>All of the file formats supported by &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;load&lt;/code&gt; are supported. In certain circumstances a user class might contain a field that it doesn&amp;rsquo;t make sense to save, or a field that needs to be initialized before it is saved. This can be done with the &lt;code&gt;saveobj&lt;/code&gt; method of the class.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 및 &lt;code&gt;load&lt;/code&gt; 가 지원 하는 모든 파일 형식 이 지원됩니다. 경우에 따라 사용자 클래스에 저장하기에 적합하지 않은 필드 또는 저장하기 전에 초기화해야하는 필드가있을 수 있습니다. 이것은 클래스 의 &lt;code&gt;saveobj&lt;/code&gt; 메소드 로 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c3cd487c3023f1c9dc2910a66a26a1c36ab61d6" translate="yes" xml:space="preserve">
          <source>All of the group objects contain data source parameters. There are string parameters that contain an expression that is evaluated to update the relevant data property of the group when the &lt;code&gt;refreshdata&lt;/code&gt; function is called.</source>
          <target state="translated">모든 그룹 개체에는 데이터 소스 매개 변수가 포함됩니다. &lt;code&gt;refreshdata&lt;/code&gt; 함수가 호출 될 때 그룹의 관련 데이터 속성을 업데이트하기 위해 평가되는 표현식이 포함 된 문자열 매개 변수가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfed15f906c112b3880ca4df1723f046f6353c24" translate="yes" xml:space="preserve">
          <source>All of the solvers above, can calculate an estimate of the condition number. This can be used to detect numerical stability problems in the solution and force a minimum norm solution to be used. However, for narrow banded, triangular or diagonal matrices, the cost of calculating the condition number is significant, and can in fact exceed the cost of factoring the matrix. Therefore the condition number is not calculated in these cases, and Octave relies on simpler techniques to detect singular matrices or the underlying &lt;small&gt;LAPACK&lt;/small&gt; code in the case of banded matrices.</source>
          <target state="translated">위의 모든 솔버에서 조건 수의 추정치를 계산할 수 있습니다. 이것은 솔루션에서 수치 안정성 문제를 감지하고 최소 표준 솔루션을 사용하도록 강제하는 데 사용할 수 있습니다. 그러나, 좁은 밴딩, 삼각 또는 대각 행렬의 경우 조건 수를 계산하는 비용이 상당하며 실제로 행렬 분해 비용을 초과 할 수 있습니다. 따라서 이러한 경우 조건 번호가 계산되지 않으며 옥타브는 더 간단한 기술을 사용하여 단일 행렬 또는 밴딩 된 행렬의 경우 기본 &lt;small&gt;LAPACK&lt;/small&gt; 코드 를 감지 합니다.</target>
        </trans-unit>
        <trans-unit id="65d916acd80875a1f75263b4d97e9982475eb7f7" translate="yes" xml:space="preserve">
          <source>All of these classes inherit from the &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; template class, and so all have similar capabilities and usage. The &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; class was based on Octave&amp;rsquo;s &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; class and users familiar with Octave&amp;rsquo;s &lt;code&gt;Array&lt;/code&gt; classes will be comfortable with the use of the sparse classes.</source>
          <target state="translated">이러한 모든 클래스는 &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; 템플릿 클래스 에서 상속 되므로 유사한 기능과 사용법을 갖습니다. &lt;code&gt;Sparse&amp;lt;T&amp;gt;&lt;/code&gt; 클래스는 옥타브의에 기반 &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; 옥타브의 익숙 클래스와 사용자가 &lt;code&gt;Array&lt;/code&gt; 클래스는 스파 스 클래스의 사용과 편안하게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="ad08aebcd0b52cdeb1bb4bef053c641e7119e568" translate="yes" xml:space="preserve">
          <source>All string concatenation functions except &lt;code&gt;cstrcat&lt;/code&gt; also accept cell array data (see &lt;a href=&quot;cell-arrays#Cell-Arrays&quot;&gt;Cell Arrays&lt;/a&gt;). &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;strvcat&lt;/code&gt; convert cell arrays into character arrays, while &lt;code&gt;strcat&lt;/code&gt; concatenates within the cells of the cell arrays:</source>
          <target state="translated">제외한 모든 문자열 연결 기능 &lt;code&gt;cstrcat&lt;/code&gt; 은 또한 셀 어레이 데이터 (참조 받아 &lt;a href=&quot;cell-arrays#Cell-Arrays&quot;&gt;셀 어레이&lt;/a&gt; ). &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;strvcat&lt;/code&gt; 은 셀형 배열을 문자형 배열로 변환하는 반면 &lt;code&gt;strcat&lt;/code&gt; 은셀형 배열 의 셀 내에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="0f3a40951eeb78de3cc90cdef1849350b6fe743f" translate="yes" xml:space="preserve">
          <source>All string concatenation functions except &lt;code&gt;cstrcat&lt;/code&gt; convert numerical input into character data by taking the corresponding UTF-8 character for each element (or multi-byte sequence), as in the following example:</source>
          <target state="translated">&lt;code&gt;cstrcat&lt;/code&gt; 을 제외한 모든 문자열 연결 함수 는 다음 예와 같이 각 요소 (또는 멀티 바이트 시퀀스)에 해당하는 UTF-8 문자를 사용하여 숫자 입력을 문자 데이터로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="799f25a17379f0338e26cde214b90d45b7a39777" translate="yes" xml:space="preserve">
          <source>All strings must be UTF-8 encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5b3bfcb21e33f16f7c1137c09da9ee8b201fe9" translate="yes" xml:space="preserve">
          <source>All text objects&amp;mdash;such as titles, labels, legends, and text&amp;mdash;include the property &lt;code&gt;&quot;interpreter&quot;&lt;/code&gt; that determines the manner in which special control sequences in the text are rendered.</source>
          <target state="translated">제목, 레이블, 범례 및 텍스트와 같은 모든 텍스트 개체에는 텍스트의 특수 제어 시퀀스가 ​​렌더링되는 방식을 결정하는 속성 &lt;code&gt;&quot;interpreter&quot;&lt;/code&gt; 가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3177ef5712b612668b1bb2519090db4503fe8aec" translate="yes" xml:space="preserve">
          <source>All values are either 1 or 0.</source>
          <target state="translated">모든 값은 1 또는 0입니다.</target>
        </trans-unit>
        <trans-unit id="7634a12ac1795ba0fd2c8722648167afc44cd883" translate="yes" xml:space="preserve">
          <source>All values are even numbers.</source>
          <target state="translated">모든 값은 짝수입니다.</target>
        </trans-unit>
        <trans-unit id="08e42afd3636a4a42ff70f3cfc33a46392064073" translate="yes" xml:space="preserve">
          <source>All values are finite.</source>
          <target state="translated">모든 값은 유한합니다.</target>
        </trans-unit>
        <trans-unit id="72531d05a4ed320e3eb62d70eccfd94e5ebe5e41" translate="yes" xml:space="preserve">
          <source>All values are greater than or equal to the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">모든 값은 &lt;var&gt;attributes&lt;/var&gt; 의 다음 값보다 크거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c9cfb4ca92ebfc6ccc3ef997938f87f1cd9b232e" translate="yes" xml:space="preserve">
          <source>All values are greater than the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">모든 값이 &lt;var&gt;attributes&lt;/var&gt; 의 다음 값보다 큽니다 .</target>
        </trans-unit>
        <trans-unit id="8571946361c12f538f21f309d8adfc2c5e7e8d6b" translate="yes" xml:space="preserve">
          <source>All values are integer. This is different than using &lt;code&gt;isinteger&lt;/code&gt; which only checks its an integer type. This checks that each value in &lt;var&gt;A&lt;/var&gt; is an integer value, i.e., it has no decimal part.</source>
          <target state="translated">모든 값은 정수입니다. 이것은 정수 유형 만 검사 하는 &lt;code&gt;isinteger&lt;/code&gt; 를 사용하는 것과 다릅니다 . 이는 &lt;var&gt;A&lt;/var&gt; 의 각 값 이 정수 값인지 확인합니다. 즉, 소수 부분이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b51b7ea97a42119fcc4c6acfcf6b6c26f528095a" translate="yes" xml:space="preserve">
          <source>All values are less than or equal to the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">모든 값은 &lt;var&gt;attributes&lt;/var&gt; 의 다음 값보다 작거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="16dcd2c824855921381f915bd9097c09997cdade" translate="yes" xml:space="preserve">
          <source>All values are less than the following value in &lt;var&gt;attributes&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;attributes&lt;/var&gt; 에서 모든 값이 다음 값보다 작습니다 .</target>
        </trans-unit>
        <trans-unit id="d8905c18a451acd417d9df1f3a25516a544eeac9" translate="yes" xml:space="preserve">
          <source>All values are non negative.</source>
          <target state="translated">모든 값은 음수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="2f2130b8e346bf5e611f2a322630572f7bc35a34" translate="yes" xml:space="preserve">
          <source>All values are odd numbers.</source>
          <target state="translated">모든 값은 홀수입니다.</target>
        </trans-unit>
        <trans-unit id="89302b20f7e0a4c0b29d3ec66e02189044cf67ee" translate="yes" xml:space="preserve">
          <source>All values are positive.</source>
          <target state="translated">모든 값은 양수입니다.</target>
        </trans-unit>
        <trans-unit id="37bcbd071270436c045c69cafd051dd84716b227" translate="yes" xml:space="preserve">
          <source>All values in a colormap should be in the [0 1] range but this is not enforced. Each function must decide what to do for values outside this range.</source>
          <target state="translated">컬러 맵의 모든 값은 [0 1] 범위 내에 있어야하지만 적용되지는 않습니다. 각 함수는이 범위 밖의 값에 대해 수행 할 작업을 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="00a5abeb88bf1a5568fa6d95d30ba0ef21681182" translate="yes" xml:space="preserve">
          <source>All versions of Octave include a number of built-in data types, including real and complex scalars and matrices, character strings, a data structure type, and an array that can contain all data types.</source>
          <target state="translated">모든 버전의 Octave에는 실수 형 및 복잡한 스칼라 및 행렬, 문자열, 데이터 구조 유형 및 모든 데이터 유형을 포함 할 수있는 배열을 포함하여 여러 내장 데이터 유형이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="186e070f6498d226f60012137d4651bef8700d48" translate="yes" xml:space="preserve">
          <source>Allocating Local Memory in Oct-Files</source>
          <target state="translated">10 월 파일에 로컬 메모리 할당</target>
        </trans-unit>
        <trans-unit id="33ee4043a19743c4727e0be61554857ca54d83e6" translate="yes" xml:space="preserve">
          <source>Allocating memory within an oct-file might seem easy, as the C++ new/delete operators can be used. However, in that case great care must be taken to avoid memory leaks. The preferred manner in which to allocate memory for use locally is to use the &lt;code&gt;OCTAVE_LOCAL_BUFFER&lt;/code&gt; macro. An example of its use is</source>
          <target state="translated">C ++ new / delete 연산자를 사용할 수 있으므로 oct 파일 내에 메모리를 할당하는 것이 쉬워 보일 수 있습니다. 그러나이 경우 메모리 누수를 피하기 위해 세심한주의를 기울여야합니다. 로컬로 사용하기 위해 메모리를 할당하는 바람직한 방법은 &lt;code&gt;OCTAVE_LOCAL_BUFFER&lt;/code&gt; 매크로 를 사용하는 것 입니다. 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b8449c23501a6b1b8a83c9b4fb3bd94c67025210" translate="yes" xml:space="preserve">
          <source>Allows for printing transparent graphics objects in PDF format. For PostScript formats the presence of any transparent object will cause the output to be rasterized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58061aa544398a798e33181a443b15b7746fab16" translate="yes" xml:space="preserve">
          <source>Alpha</source>
          <target state="translated">Alpha</target>
        </trans-unit>
        <trans-unit id="f981014fd674358f8df4fcacb07ecca0179e92d7" translate="yes" xml:space="preserve">
          <source>Alpha (transparency) channel for the image. This must be a matrix with same class, and number of rows and columns of &lt;var&gt;img&lt;/var&gt;. In case of a multipage image, the size of the 4th dimension must also match and the third dimension must be a singleton. By default, image will be completely opaque.</source>
          <target state="translated">이미지의 알파 (투명도) 채널. 이것은 동일한 클래스와 &lt;var&gt;img&lt;/var&gt; 의 행과 열 수를 가진 행렬이어야합니다 . 여러 페이지 이미지의 경우 4 차원의 크기도 일치해야하며 3 차원은 단일 톤이어야합니다. 기본적으로 이미지는 완전히 불투명합니다.</target>
        </trans-unit>
        <trans-unit id="41f2f9040e936dcce2fc219a26f2e349dd4eae0b" translate="yes" xml:space="preserve">
          <source>Also exploit broadcasting in these elementwise operators both to avoid looping and unnecessary intermediate memory allocations. See &lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;Broadcasting&lt;/a&gt;.</source>
          <target state="translated">또한 이러한 요소 별 연산자로 브로드 캐스트를 활용하여 루핑 및 불필요한 중간 메모리 할당을 피하십시오. &lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;방송을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9a42fc813c916de0c4c0023f6e182425878fd0f" translate="yes" xml:space="preserve">
          <source>Also for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, return the right-hand side of the range (10^&lt;var&gt;b&lt;/var&gt;) when just a single value is requested.</source>
          <target state="translated">또한 &lt;small&gt;MATLAB&lt;/small&gt; 과의 호환성을 위해 단일 값만 요청 하면 범위의 오른쪽 (10 ^ &lt;var&gt;b&lt;/var&gt; )을 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="4dac732148aff2a880ecbec9bebd1c58a571c34c" translate="yes" xml:space="preserve">
          <source>Also included in Octave&amp;rsquo;s geometry functions are primitive functions to enable vector rotations in 3-dimensional space. Separate functions are provided for rotation about each of the principle axes, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt;. According to Euler&amp;rsquo;s rotation theorem, any arbitrary rotation, &lt;var&gt;R&lt;/var&gt;, of any vector, &lt;var&gt;p&lt;/var&gt;, can be expressed as a product of the three principle rotations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e30f44f4edbcd99dceb62c1073e3f8920289606" translate="yes" xml:space="preserve">
          <source>Also, a diagonal matrix &lt;var&gt;D&lt;/var&gt; can be multiplied or divided by a scalar, or raised to a scalar power if it is square, producing diagonal matrix result in all cases.</source>
          <target state="translated">또한, 대각 행렬 &lt;var&gt;D&lt;/var&gt; 에 스칼라를 곱하거나 나누거나, 정사각형 인 경우 스칼라 제곱으로 올릴 수있어 모든 경우에 대각 행렬 결과가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b006a81485382ac577a1c2e330c78bb0395d8867" translate="yes" xml:space="preserve">
          <source>Also, note that Octave always reserves storage for at least one value. Thus, for empty matrices &lt;code&gt;nnz&lt;/code&gt; will report 0, but &lt;code&gt;nzmax&lt;/code&gt; will report 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95178adf4329231651fa8791e5df4b1025cdd224" translate="yes" xml:space="preserve">
          <source>Also, the test for positive definiteness is a low-cost test for a Hermitian matrix with a real positive diagonal. This does not guarantee that the matrix is positive definite, but only that it is a probable candidate. When such a matrix is factorized, a Cholesky factorization is first attempted, and if that fails the matrix is then treated with an LU factorization. Once the matrix has been factorized, &lt;code&gt;matrix_type&lt;/code&gt; will return the correct classification of the matrix.</source>
          <target state="translated">또한 양의 유한도에 대한 검정은 양의 대각선을 가진 허미 시안 행렬에 대한 저비용 검정입니다. 이것은 행렬이 양의 명확한 것을 보장하지는 않지만 가능한 후보 일뿐입니다. 이러한 행렬을 인수 분해하면 Cholesky 인수 분해가 먼저 시도되고, 실패하면 행렬이 LU 인수 분해로 처리됩니다. 행렬이 인수 분해되면 &lt;code&gt;matrix_type&lt;/code&gt; 은 행렬의 올바른 분류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1fc7e3b04227eb297b02088cb371c91dbb89a143" translate="yes" xml:space="preserve">
          <source>Alternate Names</source>
          <target state="translated">대체 이름</target>
        </trans-unit>
        <trans-unit id="121a637fc5053be9a698bd7d66175550da00821c" translate="yes" xml:space="preserve">
          <source>Alternation operator. Match one of a choice of regular expressions. The alternatives must be delimited by the grouping operator &lt;code&gt;()&lt;/code&gt; above.</source>
          <target state="translated">대체 연산자. 선택한 정규식 중 하나와 일치하십시오. 대안은 위 의 그룹화 연산자 &lt;code&gt;()&lt;/code&gt; 로 구분해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fa9500290cf4dd90d9eac7daf3711abcb335db5d" translate="yes" xml:space="preserve">
          <source>Alternatively the multiplicity may be defined explicitly, for example,</source>
          <target state="translated">대안 적으로, 다중도는 예를 들어</target>
        </trans-unit>
        <trans-unit id="bf4115bd0824a2245809f545062b162e83d91b94" translate="yes" xml:space="preserve">
          <source>Alternatively, a value of 128 (&lt;code&gt;GLP_SF_AUTO&lt;/code&gt;) may be also specified, in which case the routine chooses the scaling options automatically.</source>
          <target state="translated">또는 128 ( &lt;code&gt;GLP_SF_AUTO&lt;/code&gt; ) 값을 지정할 수도 있습니다.이 경우 루틴은 스케일링 옵션을 자동으로 선택합니다.</target>
        </trans-unit>
        <trans-unit id="077ed198293526ca5fecdf1bccfe48248ddd0aef" translate="yes" xml:space="preserve">
          <source>Alternatively, properties of &lt;code&gt;quadgk&lt;/code&gt; can be passed to the function as pairs &lt;code&gt;&quot;&lt;var&gt;prop&lt;/var&gt;&quot;, &lt;var&gt;val&lt;/var&gt;&lt;/code&gt;. Valid properties are</source>
          <target state="translated">또는 &lt;code&gt;quadgk&lt;/code&gt; 의 속성을 쌍 &lt;code&gt;&quot;&lt;var&gt;prop&lt;/var&gt;&quot;, &lt;var&gt;val&lt;/var&gt;&lt;/code&gt; 로 함수에 전달할 수 있습니다 . 유효한 속성은</target>
        </trans-unit>
        <trans-unit id="d3bd9811e9bbfc37c76498323081f47ef77de878" translate="yes" xml:space="preserve">
          <source>Alternatively, the output of the &lt;code&gt;lasterror&lt;/code&gt; function can be found in a variable indicated immediately after the &lt;code&gt;catch&lt;/code&gt; keyword, as in the example below showing how to redirect an error as a warning:</source>
          <target state="translated">또는 &lt;code&gt;lasterror&lt;/code&gt; 함수 의 출력은 &lt;code&gt;catch&lt;/code&gt; 키워드 바로 다음에 표시된 변수에서 찾을 수 있습니다. 아래 예와 같이 오류를 경고로 리디렉션하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="71502ea642ba0592772df69eb88dac6cb37b6257" translate="yes" xml:space="preserve">
          <source>Alternatively, to process the data in a structure, the structure might be converted to another type of container before being treated.</source>
          <target state="translated">또는 구조에서 데이터를 처리하기 위해 구조를 처리하기 전에 다른 유형의 컨테이너로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0f05f40e955d7c8bb417fb376c9feb031d2915f" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-i) in the pattern.</source>
          <target state="translated">또는 패턴에 (? -i)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="824fa3406fb2c65537840c88d54d28700ee16049" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-m) in the pattern.</source>
          <target state="translated">또는 패턴에 (? -m)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8a14f17eee4fd5d9bedd432119f8f1bc2d745487" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-s) in the pattern.</source>
          <target state="translated">또는 패턴에 (? -s)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f81375a4a22742fd5705b3dd28b44b88da68c4fb" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?-x) in the pattern.</source>
          <target state="translated">또는 패턴에 (? -x)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="77ddcef3cfee78cc188521debfcc5abe7a4488ea" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?i) in the pattern.</source>
          <target state="translated">또는 패턴에 (? i)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7c19c090750b7f6f6c86e5c6dae6cb53ec549aca" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?m) in the pattern.</source>
          <target state="translated">또는 패턴에 (? m)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cde05e446744374d61ff29b661cec22696621784" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?s) in the pattern.</source>
          <target state="translated">또는 패턴에 (? s)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ceae955858dc811f18b53f87b25096ee16409252" translate="yes" xml:space="preserve">
          <source>Alternatively, use (?x) in the pattern.</source>
          <target state="translated">또는 패턴에 (? x)를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="121468f624f9ae46c7a35ed43b80d3f3b4ab7ce1" translate="yes" xml:space="preserve">
          <source>Alternatively, we can concatenate &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;B&lt;/var&gt; along the second dimension in the following way:</source>
          <target state="translated">또는 다음과 같은 방법으로 2 차원을 따라 &lt;var&gt;A&lt;/var&gt; 와 &lt;var&gt;B&lt;/var&gt; 를 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fee23f60853bbef76a80126789cfed098beb343c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can write the full or relative path to the file.</source>
          <target state="translated">또는 파일의 전체 또는 상대 경로를 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="223c53cb8047eab49ffd374fddce0f029f7cea43" translate="yes" xml:space="preserve">
          <source>Alternatively, you can write the full path to the graphic.</source>
          <target state="translated">또는 그래픽의 전체 경로를 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a558192348c479f96efbe53d84a57d9061633caf" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;quad&lt;/code&gt; returns a nonzero value for &lt;var&gt;ier&lt;/var&gt;, the result is reasonably accurate (to see why, examine what happens to the result if you move the lower bound to 0.1, then 0.01, then 0.001, etc.).</source>
          <target state="translated">&lt;code&gt;quad&lt;/code&gt; 는 &lt;var&gt;ier&lt;/var&gt; 에 대해 0이 아닌 값을 반환 하지만 결과는 합리적으로 정확합니다 (하위 경계를 0.1, 0.01, 0.001 등으로 이동하면 결과에 어떤 영향을 미치는지 확인).</target>
        </trans-unit>
        <trans-unit id="8b3b4062d69d5d309d82bfeb03464c53dd22722a" translate="yes" xml:space="preserve">
          <source>Although Octave does not automatically report an error if you call a function with more arguments than expected, doing so probably indicates that something is wrong. Octave also does not automatically report an error if a function is called with too few arguments, but any attempt to use a variable that has not been given a value will result in an error. To avoid such problems and to provide useful messages, we check for both possibilities and issue our own error message.</source>
          <target state="translated">Octave가 예상보다 많은 인수를 가진 함수를 호출하면 오류를 자동으로보고하지 않지만 그렇게하면 무언가 잘못되었음을 나타냅니다. 함수가 너무 적은 인수로 호출 된 경우 Octave는 자동으로 오류를보고하지 않지만 값이 제공되지 않은 변수를 사용하려고하면 오류가 발생합니다. 이러한 문제를 피하고 유용한 메시지를 제공하기 위해 두 가지 가능성을 모두 확인하고 자체 오류 메시지를 발행합니다.</target>
        </trans-unit>
        <trans-unit id="9f6dd2601f20dff450738b52b2b8965bf7c1010f" translate="yes" xml:space="preserve">
          <source>Although Octave normally executes commands from script files that have the name</source>
          <target state="translated">Octave는 일반적으로 이름이있는 스크립트 파일에서 명령을 실행하지만</target>
        </trans-unit>
        <trans-unit id="64d02394d8491d30ebf55b85a1780be43be7c00f" translate="yes" xml:space="preserve">
          <source>Although Octave uses a compressed column format, it should be noted that compressed row formats are equally possible. However, in the context of mixed operations between mixed sparse and dense matrices, it makes sense that the elements of the sparse matrices are in the same order as the dense matrices. Octave stores dense matrices in column major ordering, and so sparse matrices are equally stored in this manner.</source>
          <target state="translated">Octave는 압축 열 형식을 사용하지만 압축 된 행 형식도 동일하게 사용할 수 있습니다. 그러나, 혼합 희소 행렬과 고밀도 행렬 사이의 혼합 연산의 맥락에서, 희소 행렬의 요소는 고밀도 행렬과 동일한 순서로 존재하는 것이 합리적입니다. 옥타브는 조밀 한 행렬을 열 주요 순서대로 저장하므로 희소 행렬은이 방식으로 동일하게 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="4aae2b32782cb9c195decaa2c9b384ce48d2fdf4" translate="yes" xml:space="preserve">
          <source>Although a range constant specifies a row vector, Octave does &lt;em&gt;not&lt;/em&gt; normally convert range constants to vectors unless it is necessary to do so. This allows you to write a constant like &lt;code&gt;1 : 10000&lt;/code&gt; without using 80,000 bytes of storage on a typical 32-bit workstation.</source>
          <target state="translated">범위 상수는 행 벡터를 지정하지만 옥타브는 일반적으로 범위 상수를 벡터로 변환 하지 &lt;em&gt;않습니다&lt;/em&gt; . 이를 통해 일반적인 32 비트 워크 스테이션에서 80,000 바이트의 스토리지를 사용하지 않고 &lt;code&gt;1 : 10000&lt;/code&gt; 과 같은 상수를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ab40642a93ef7bf8976394282eb6975e7eb06296" translate="yes" xml:space="preserve">
          <source>Although accepted, the argument &lt;var&gt;-completenames&lt;/var&gt; is silently ignored. Octave always returns absolute filenames.</source>
          <target state="translated">수락되었지만 인수 &lt;var&gt;-completenames&lt;/var&gt; 는 자동으로 무시됩니다. 옥타브는 항상 절대 파일 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0116371776f0f1e5b4fa4d80259bf73f34e7857b" translate="yes" xml:space="preserve">
          <source>Although default values may be set for any object, they are set in parent objects and apply to child objects, of the specified object type. For example, setting the default &lt;code&gt;color&lt;/code&gt; property of &lt;code&gt;line&lt;/code&gt; objects to &lt;code&gt;&quot;green&quot;&lt;/code&gt;, for the &lt;code&gt;root&lt;/code&gt; object, will result in all &lt;code&gt;line&lt;/code&gt; objects inheriting the &lt;code&gt;color&lt;/code&gt;&lt;code&gt;&quot;green&quot;&lt;/code&gt; as the default value.</source>
          <target state="translated">기본값은 모든 객체에 대해 설정 될 수 있지만 부모 객체로 설정되어 지정된 객체 유형의 하위 객체에 적용됩니다. 예를 들어, &lt;code&gt;root&lt;/code&gt; 객체에 대해 &lt;code&gt;line&lt;/code&gt; 객체 의 기본 &lt;code&gt;color&lt;/code&gt; 속성 을 &lt;code&gt;&quot;green&quot;&lt;/code&gt; 으로 설정하면 모든 &lt;code&gt;line&lt;/code&gt; 객체가 &lt;code&gt;&quot;green&quot;&lt;/code&gt; &lt;code&gt;color&lt;/code&gt; 기본값으로 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="7fcea970358542f476aee95176a7850810f9a3c9" translate="yes" xml:space="preserve">
          <source>Although it is possible to put comment lines into keyboard-composed, throw-away Octave programs, it usually isn&amp;rsquo;t very useful because the purpose of a comment is to help you or another person understand the program at a later time.</source>
          <target state="translated">주석 행을 키보드로 작성되고 버려지는 Octave 프로그램에 넣을 수는 있지만 주석의 목적은 나중에 다른 사람이 프로그램을 이해하도록 돕는 것이기 때문에 일반적으로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="582d8065b739806feefdb65885c8b86b11703a75" translate="yes" xml:space="preserve">
          <source>Although it is possible to rewrite all &lt;code&gt;for&lt;/code&gt; loops as &lt;code&gt;while&lt;/code&gt; loops, the Octave language has both statements because often a &lt;code&gt;for&lt;/code&gt; loop is both less work to type and more natural to think of. Counting the number of iterations is very common in loops and it can be easier to think of this counting as part of looping rather than as something to do inside the loop.</source>
          <target state="translated">이 모든 재 작성 할 수 있지만 &lt;code&gt;for&lt;/code&gt; 로 루프를 &lt;code&gt;while&lt;/code&gt; 루프 종종 있기 때문에, 옥타브 언어는 모두 문을 가지고 &lt;code&gt;for&lt;/code&gt; 루프가 덜 입력하는 작업과 생각하는 것이 더 자연 모두이다. 반복 횟수를 계산하는 것은 루프에서 매우 일반적이며이 계산을 루프 내에서 수행하는 것이 아니라 반복의 일부로 생각하는 것이 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="037be7fedd216678bd6b4094e017b9c5e7410e1c" translate="yes" xml:space="preserve">
          <source>Although the user should only include</source>
          <target state="translated">사용자는 포함해야하지만</target>
        </trans-unit>
        <trans-unit id="ce6def5ca0362c3fd7df452292e849eb426c7480" translate="yes" xml:space="preserve">
          <source>Although there cannot be multiple entry points in a single mex-file, one can use the &lt;code&gt;mexFunctionName&lt;/code&gt; function to determine what name the mex-file was called with. This can be used to alter the behavior of the mex-file based on the function name. For example, if</source>
          <target state="translated">단일 mex 파일에 여러 개의 진입 점이있을 수는 없지만 &lt;code&gt;mexFunctionName&lt;/code&gt; 을 사용할 수 있습니다. 함수를 사용하여 mex 파일이 호출 된 이름을 확인할 . 함수 이름에 따라 mex 파일의 동작을 변경하는 데 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="5c036b3e5ba98c506a21c362ad281332a2e1bffc" translate="yes" xml:space="preserve">
          <source>Although this is inconsistent with the normal behavior of Octave&amp;rsquo;s lexer, which usually prefers to break the input into tokens by preferring the longest possible match at any given point, it is more useful in this case.</source>
          <target state="translated">이것은 옥타브 어휘 분석기의 정상적인 행동과 일치하지 않지만, 일반적으로 주어진 시점에서 가능한 가장 긴 일치를 선호하여 입력을 토큰으로 나누는 것을 선호하지만,이 경우에 더 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e326bab85042418bda6a4b4504b5fe93f49ba59a" translate="yes" xml:space="preserve">
          <source>Always include a plus or minus sign in the result.</source>
          <target state="translated">항상 결과에 더하기 또는 빼기 부호를 포함 시키십시오.</target>
        </trans-unit>
        <trans-unit id="2327a47c9dcd85492cbba0eeb5581a7188ee36e9" translate="yes" xml:space="preserve">
          <source>Always include a proper bug report for the problem you think you have fixed. We need to convince ourselves that the change is right before installing it. Even if it is right, we might have trouble judging it if we don&amp;rsquo;t have a way to reproduce the problem.</source>
          <target state="translated">수정했다고 생각하는 문제에 대한 적절한 버그 보고서를 항상 포함하십시오. 설치하기 전에 변경 사항이 있음을 확신해야합니다. 그것이 옳더라도, 우리는 문제를 재현 할 방법이 없다면 그것을 판단하는 데 어려움을 겪을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ab8cf4009eb348e2778d880e86ec80daf370091" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;assignment&lt;/em&gt; is an expression that stores a new value into a variable. For example, the following expression assigns the value 1 to the variable &lt;code&gt;z&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;할당&lt;/em&gt; 변수에 새로운 값을 저장하는 식이다. 예를 들어, 다음 표현식은 값 1을 변수 &lt;code&gt;z&lt;/code&gt; 에 지정합니다. .</target>
        </trans-unit>
        <trans-unit id="731ae279391efa26177273a2bf8dea62a48f4444" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;element-by-element boolean expression&lt;/em&gt; is a combination of comparison expressions using the boolean operators &amp;ldquo;or&amp;rdquo; (&amp;lsquo;</source>
          <target state="translated">&lt;em&gt;원소 별 부울 표현식&lt;/em&gt; '(부울 연산자 &quot;또는&quot;을 사용하여 비교 식의 조합</target>
        </trans-unit>
        <trans-unit id="af9d6714f31a689d6ebcfc7ac7ed41c91234e7b2" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;index expression&lt;/em&gt; allows you to reference or extract selected elements of a vector, a matrix (2-D), or a higher-dimensional array.</source>
          <target state="translated">&lt;em&gt;인덱스 발현&lt;/em&gt; 벡터의 참조 또는 추출물 선택된 요소를 허용 매트릭스 (2-D) 또는 더 높은 차원 어레이.</target>
        </trans-unit>
        <trans-unit id="c83ea985af8c01cb3c8ab65bb7cc6794d16ed1c1" translate="yes" xml:space="preserve">
          <source>An Empty Exercise</source>
          <target state="translated">빈 운동</target>
        </trans-unit>
        <trans-unit id="34db31be21bf71bd1bf88901949c545c6d5a2176" translate="yes" xml:space="preserve">
          <source>An Improved Incomplete Cholesky Factorization</source>
          <target state="translated">불완전한 Cholesky Factorization 개선</target>
        </trans-unit>
        <trans-unit id="ae03158082cb06cd288fa53135959985a4bb2758" translate="yes" xml:space="preserve">
          <source>An additional input argument &lt;var&gt;thres&lt;/var&gt;, that defines the pivoting threshold can be given. &lt;var&gt;thres&lt;/var&gt; can be a scalar, in which case it defines the &lt;small&gt;UMFPACK&lt;/small&gt; pivoting tolerance for both symmetric and unsymmetric cases. If &lt;var&gt;thres&lt;/var&gt; is a 2-element vector, then the first element defines the pivoting tolerance for the unsymmetric &lt;small&gt;UMFPACK&lt;/small&gt; pivoting strategy and the second for the symmetric strategy. By default, the values defined by &lt;code&gt;spparms&lt;/code&gt; are used ([0.1, 0.001]).</source>
          <target state="translated">피벗 임계 값을 정의 하는 추가 입력 인수 &lt;var&gt;thres&lt;/var&gt; 가 제공 될 수 있습니다. &lt;var&gt;thres&lt;/var&gt; 그것이 정의하는 경우 스칼라 될 수 &lt;small&gt;UMFPACK의&lt;/small&gt; 대칭과 비대칭의 경우에 대한 회전 허용합니다. 경우 &lt;var&gt;thres&lt;/var&gt; 2 요소 벡터가 다음 첫 번째 요소는 비대칭의 회전 허용 정의 &lt;small&gt;UMFPACK의&lt;/small&gt; 회전 전략과 대칭 전략에 대한 두 번째. 기본적으로 &lt;code&gt;spparms&lt;/code&gt; 에 의해 정의 된 값 이 사용됩니다 ([0.1, 0.001]).</target>
        </trans-unit>
        <trans-unit id="042dbd2774917a28c326141303c32522dc08fa71" translate="yes" xml:space="preserve">
          <source>An additional input argument &lt;var&gt;thresh&lt;/var&gt; that defines the pivoting threshold can be given. &lt;var&gt;thresh&lt;/var&gt; can be a scalar, in which case it defines the &lt;small&gt;UMFPACK&lt;/small&gt; pivoting tolerance for both symmetric and unsymmetric cases. If &lt;var&gt;thresh&lt;/var&gt; is a 2-element vector, then the first element defines the pivoting tolerance for the unsymmetric &lt;small&gt;UMFPACK&lt;/small&gt; pivoting strategy and the second for the symmetric strategy. By default, the values defined by &lt;code&gt;spparms&lt;/code&gt; are used ([0.1, 0.001]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edab744da9cb281c04ed05b0101a7f26d1614d6" translate="yes" xml:space="preserve">
          <source>An alternative expression to evaluate, so that the speed of two expressions can be directly compared. The default is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">두 표현식의 속도를 직접 비교할 수 있도록 평가할 대체 표현식입니다. 기본값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cc8a046f7cd194a75b4487f3e9b7b50b571aa0e0" translate="yes" xml:space="preserve">
          <source>An alternative is to convert the data to a different container, such as a matrix or a data structure. Depending on the data this is possible using the &lt;code&gt;cell2mat&lt;/code&gt; and &lt;code&gt;cell2struct&lt;/code&gt; functions.</source>
          <target state="translated">대안은 데이터를 매트릭스 또는 데이터 구조와 같은 다른 컨테이너로 변환하는 것입니다. 데이터에 따라 &lt;code&gt;cell2mat&lt;/code&gt; 및 &lt;code&gt;cell2struct&lt;/code&gt; 함수를 사용하여 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="9f78da024542da3774bad17477031346178f0048" translate="yes" xml:space="preserve">
          <source>An array containing the lower bound on each of the variables. If &lt;var&gt;lb&lt;/var&gt; is not supplied, the default lower bound for the variables is zero.</source>
          <target state="translated">각 변수의 하한을 포함하는 배열입니다. 경우 &lt;var&gt;lb&lt;/var&gt; 제공되지 않으면 기본이 변수 하한 제로이다.</target>
        </trans-unit>
        <trans-unit id="2d255ad15690054d728f93115349d3f600dd0515" translate="yes" xml:space="preserve">
          <source>An array containing the upper bound on each of the variables. If &lt;var&gt;ub&lt;/var&gt; is not supplied, the default upper bound is assumed to be infinite.</source>
          <target state="translated">각 변수의 상한을 포함하는 배열입니다. 경우 &lt;var&gt;ub&lt;/var&gt; 제공되지 않습니다, 상한 기본은 무한한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="62b2647e5df91ccc118cc5e116c8952eb7abf652" translate="yes" xml:space="preserve">
          <source>An array of characters containing the sense of each constraint in the constraint matrix. Each element of the array may be one of the following values</source>
          <target state="translated">제약 조건 매트릭스에서 각 제약 조건의 의미를 포함하는 문자 배열입니다. 배열의 각 요소는 다음 값 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8a7732b6ec6b1bf76e5763d812ceef942ebf0d0" translate="yes" xml:space="preserve">
          <source>An array of pointers to input arguments.</source>
          <target state="translated">입력 인수에 대한 포인터 배열입니다.</target>
        </trans-unit>
        <trans-unit id="dcb0cfdf3e9f6d25482bdcbdfb9b945b63084f5b" translate="yes" xml:space="preserve">
          <source>An array of pointers to return arguments.</source>
          <target state="translated">인수를 돌려주는 포인터의 배열.</target>
        </trans-unit>
        <trans-unit id="61f3b3d1e2d9fee505e437056e292c18f010fd8e" translate="yes" xml:space="preserve">
          <source>An array with &amp;lsquo;</source>
          <target state="translated">'가있는 배열</target>
        </trans-unit>
        <trans-unit id="20cd1faa36fe658299e37385173eb8e20247a122" translate="yes" xml:space="preserve">
          <source>An assignment is an expression, so it has a value. Thus, &lt;code&gt;z = 1&lt;/code&gt; as an expression has the value 1. One consequence of this is that you can write multiple assignments together:</source>
          <target state="translated">대입은 표현식이므로 값이 있습니다. 따라서 식으로서의 &lt;code&gt;z = 1&lt;/code&gt; 은 값 1을 갖습니다. 이것의 결과는 여러 할당을 함께 쓸 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="adb423ef1f1253007a9e6bdcfc772c9224db76bd" translate="yes" xml:space="preserve">
          <source>An attempt is made to approximate the cost of individual operations, but it is wildly inaccurate. You can improve the stability somewhat by doing more work for each &lt;code&gt;n&lt;/code&gt;. For example:</source>
          <target state="translated">개별 작업 비용을 근사하려고했지만 실제로 부정확합니다. 각 &lt;code&gt;n&lt;/code&gt; 에 대해 더 많은 작업을 수행하여 안정성을 다소 향상시킬 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d322d7aad27d5ff129532e6d9d788a38d33983e3" translate="yes" xml:space="preserve">
          <source>An easy way to get an overview over the collected data is &lt;code&gt;profshow&lt;/code&gt;. This function takes the profiler data returned by &lt;code&gt;profile&lt;/code&gt; as input and prints a flat profile, for instance:</source>
          <target state="translated">수집 된 데이터에 대한 개요를 얻는 쉬운 방법은 &lt;code&gt;profshow&lt;/code&gt; 입니다. 이 함수는 프로파일이 리턴 한 &lt;code&gt;profile&lt;/code&gt; 러 데이터 를 입력으로 가져 와서 플랫 프로파일을 인쇄합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="6f14f47bbd2f72d2b8ff1fc96a133d299eaf0475" translate="yes" xml:space="preserve">
          <source>An equality constraint (&lt;code&gt;A(i,:)*x = b(i)&lt;/code&gt;).</source>
          <target state="translated">동등 구속 조건 ( &lt;code&gt;A(i,:)*x = b(i)&lt;/code&gt; :) * x = b (i) ).</target>
        </trans-unit>
        <trans-unit id="930632f11da558ed2d8ce54cb74b171e78f8577b" translate="yes" xml:space="preserve">
          <source>An equivalent definition is</source>
          <target state="translated">동등한 정의는</target>
        </trans-unit>
        <trans-unit id="142edce8df3f66c69797450fc3cb15d161f5463b" translate="yes" xml:space="preserve">
          <source>An equivalent form of the equation is:</source>
          <target state="translated">등가 형태의 방정식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a0894e26fe38065d5c7303590f648361f46fceb" translate="yes" xml:space="preserve">
          <source>An error is something that occurs when a program is in a state where it doesn&amp;rsquo;t make sense to continue. An example is when a function is called with too few input arguments. In this situation the function should abort with an error message informing the user of the lacking input arguments.</source>
          <target state="translated">오류는 프로그램이 계속 이해되지 않는 상태에있을 때 발생하는 것입니다. 입력 인수가 너무 적은 함수를 호출하는 경우를 예로들 수 있습니다. 이 상황에서 사용자에게 입력 인수가 부족하다는 오류 메시지가 표시되면 함수가 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="4ad0088143ec609dfada6eac9ccb16f329ccb23e" translate="yes" xml:space="preserve">
          <source>An error message is printed if the dimensions of the arguments do not agree, or if either argument is complex.</source>
          <target state="translated">인수의 차원이 일치하지 않거나 인수가 복잡한 경우 오류 메시지가 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="3a2dbd11f236c7b267f6afb505591963ca2e57bb" translate="yes" xml:space="preserve">
          <source>An error results if the dimensions of the arguments do not agree, or if either of the arguments is complex.</source>
          <target state="translated">인수의 차원이 일치하지 않거나 인수 중 하나가 복잡한 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d9feda69a1da376b6e0e4db8b529ba427c6c8f84" translate="yes" xml:space="preserve">
          <source>An event such as &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;interrupt&lt;/code&gt;, or &lt;code&gt;warning&lt;/code&gt; (see &lt;a href=&quot;#XREFdbstop&quot;&gt;dbstop&lt;/a&gt; for details).</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; , &lt;code&gt;interrupt&lt;/code&gt; 또는 &lt;code&gt;warning&lt;/code&gt; 과 같은 이벤트 ( &lt;a href=&quot;#XREFdbstop&quot;&gt;dbstop&lt;/a&gt; 참조) 입니다 (자세한 내용 참조).</target>
        </trans-unit>
        <trans-unit id="eb10238ee462a2f0aa005bda9a15e4dcbf2f8632" translate="yes" xml:space="preserve">
          <source>An example &lt;code&gt;mtimes&lt;/code&gt; method for the polynomial class might look like</source>
          <target state="translated">&lt;code&gt;mtimes&lt;/code&gt; 의 예다항식 클래스 메소드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b454614c1d6c2080c5f1e40e570f6d2183d56bb4" translate="yes" xml:space="preserve">
          <source>An example from Octave&amp;rsquo;s built-in char class demonstrates the interpreter behavior when &lt;code&gt;isnull&lt;/code&gt; is used correctly.</source>
          <target state="translated">Octave의 내장 char 클래스의 예는 &lt;code&gt;isnull&lt;/code&gt; 때 인터프리터 동작을 보여줍니다. 이 올바르게 사용될 .</target>
        </trans-unit>
        <trans-unit id="f7c9154e4f3285c20cd1a5698154cdc3f62be239" translate="yes" xml:space="preserve">
          <source>An example of a &lt;code&gt;disp&lt;/code&gt; method for the polynomial class might be</source>
          <target state="translated">다항식 클래스에 대한 &lt;code&gt;disp&lt;/code&gt; 메소드 의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8c60bb5baf993c4cb06b1af2b784e8dbfe22c95d" translate="yes" xml:space="preserve">
          <source>An example of a Delaunay triangulation of a set of points is</source>
          <target state="translated">점 집합의 들로네 삼각 분할의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="837bfa09b234102e6c7d3771546315554d5e1920" translate="yes" xml:space="preserve">
          <source>An example of an isosurface geometry with different additional coloring:</source>
          <target state="translated">추가 색상이 다른 등면 형상의 예 :</target>
        </trans-unit>
        <trans-unit id="509dc5e401ec88e5e90de15e1f97d0383d9abafe" translate="yes" xml:space="preserve">
          <source>An example of calling &lt;code&gt;sqp&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;sqp&lt;/code&gt; 를 호출하는 예 :</target>
        </trans-unit>
        <trans-unit id="9110feebb8525ae98a7cc49cd865d4159823f02b" translate="yes" xml:space="preserve">
          <source>An example of creating and filling a matrix might be</source>
          <target state="translated">행렬을 만들고 채우는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d29901b0350f56d61f67a45a13ed1402e93e174" translate="yes" xml:space="preserve">
          <source>An example of its expected output is</source>
          <target state="translated">예상되는 출력의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3864d6aa35fadbf8e9dc09e20c865e4e8c7e4a07" translate="yes" xml:space="preserve">
          <source>An example of its use is</source>
          <target state="translated">사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f5ac892548f98118376dd81f4bbb59c86c71888b" translate="yes" xml:space="preserve">
          <source>An example of its use is:</source>
          <target state="translated">사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="409f2f44e66e502812d8921c06692c5a6e500b5c" translate="yes" xml:space="preserve">
          <source>An example of the behavior of this function within Octave is then</source>
          <target state="translated">Octave 내에서이 함수의 동작의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="71b2e01c80ae1ba47a9a2b9a4b57b92ad4fea99f" translate="yes" xml:space="preserve">
          <source>An example of the inclusion of a Fortran function in an oct-file is given in the following example, where the C++ wrapper is</source>
          <target state="translated">oct 파일에 Fortran 함수를 포함하는 예는 다음 예에서 제공되며 C ++ 래퍼는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="87e3592bfdace1c7b422f27f4990371a0bf8150b" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;accumdim&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;accumdim&lt;/code&gt; 을 사용하는 예는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a67251afc115dd65cea7e7c1326d709077ca77bc" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;clabel&lt;/code&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;clabel&lt;/code&gt; 은 이다</target>
        </trans-unit>
        <trans-unit id="ed89fd614b170c06b8247ab69d595cdbabe9b1ba" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;convhull&lt;/code&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;convhull&lt;/code&gt; 은 이다</target>
        </trans-unit>
        <trans-unit id="f667bc9d7aac151bc55a892698052921ed010e92" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;dsearch&lt;/code&gt;, using the above values of &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;tri&lt;/var&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;dsearch&lt;/code&gt; 상기 값 사용하여 &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; 및 &lt;var&gt;tri&lt;/var&gt; 이다</target>
        </trans-unit>
        <trans-unit id="ec9d5d0b295584ff0cbe9a78c27d1475a2833d38" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;inpolygon&lt;/code&gt; might be</source>
          <target state="translated">&lt;code&gt;inpolygon&lt;/code&gt; 사용의 예는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e17fa3fbc9e340be225536aac353a461f1bc8640" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;interp1&lt;/code&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;interp1&lt;/code&gt; 은 이다</target>
        </trans-unit>
        <trans-unit id="a1a00245455632973f90d8cd5f2cb5b23e3f4c6e" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;linkprop&lt;/code&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;linkprop&lt;/code&gt; 은 이다</target>
        </trans-unit>
        <trans-unit id="c551479e132bb0d8b94ed78e7ad695423a28f3fd" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;pareto&lt;/code&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;pareto&lt;/code&gt; 있다</target>
        </trans-unit>
        <trans-unit id="e0ea37a407a3591b5629fabed57792f08d7bc2fa" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;polyarea&lt;/code&gt; might be</source>
          <target state="translated">&lt;code&gt;polyarea&lt;/code&gt; 를 사용하는 예는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="90304dbd4871b7c21f3a2f65a9636ab2aa0e1440" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;refreshdata&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;refreshdata&lt;/code&gt; 사용의 예 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7d725df488235c39bc14945aa7cc2331adfb83c3" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;surfnorm&lt;/code&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;surfnorm&lt;/code&gt; 은 이다</target>
        </trans-unit>
        <trans-unit id="2d964c1b35cbe8b074de009746a8edc9d797bdfb" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;tsearch&lt;/code&gt; can be seen with the simple triangulation</source>
          <target state="translated">간단한 삼각 측량 으로 &lt;code&gt;tsearch&lt;/code&gt; 사용 예를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a266f1e02f6e56c7faf177f8e3ec712d79dea077" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;voronoi&lt;/code&gt; is</source>
          <target state="translated">사용의 예 &lt;code&gt;voronoi&lt;/code&gt; 것입니다</target>
        </trans-unit>
        <trans-unit id="0a69badd1d9b3e2b8ad1cacd573ac218fe45a03d" translate="yes" xml:space="preserve">
          <source>An example of the use of the &lt;code&gt;griddata&lt;/code&gt; function is</source>
          <target state="translated">&lt;code&gt;griddata&lt;/code&gt; 함수 사용의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8709434c4a8bed9b2de2f98b92218806ddbc2204" translate="yes" xml:space="preserve">
          <source>An example of the use of these two functions might be</source>
          <target state="translated">이 두 기능을 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2de686f5f3f72b2597d8174b321d5366d86dfc04" translate="yes" xml:space="preserve">
          <source>An example of the use of this function is</source>
          <target state="translated">이 기능을 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="78eb9063c36130840abd2e2b1a281ea8dd8277ef" translate="yes" xml:space="preserve">
          <source>An example of the use of typecast on a little-endian machine is</source>
          <target state="translated">리틀 엔디안 머신에서 타입 캐스트를 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b06adcc3821076a34254fd6d22054cddc4202082" translate="yes" xml:space="preserve">
          <source>An example that demonstrates how to work with arbitrary real or complex double precision arrays is given by the file</source>
          <target state="translated">임의의 실수 또는 복잡한 배정도 배열로 작업하는 방법을 보여주는 예제는 파일에서 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d45ab12c55f50c7b6036aef936964903bab65d69" translate="yes" xml:space="preserve">
          <source>An example that demonstrates the use of structures in a mex-file can be found in the file</source>
          <target state="translated">mex 파일에서 구조를 사용하는 방법을 보여주는 예제는 파일에서 찾을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="92ca08f5090c863887d83f6aa6fa69ab7ddf4323" translate="yes" xml:space="preserve">
          <source>An explicit conversion to a full matrix can be requested using the built-in function &lt;em&gt;full&lt;/em&gt;. It should also be noted that the diagonal and permutation matrix objects will cache the result of the conversion after it is first requested (explicitly or implicitly), so that subsequent conversions will be very cheap.</source>
          <target state="translated">내장 함수 &lt;em&gt;full을&lt;/em&gt; 사용하여 전체 행렬로의 명시 적 변환을 요청할 수 있습니다 . 대각 및 순열 행렬 객체는 변환이 처음 요청 된 후 (명시 적으로 또는 암시 적으로) 변환 결과를 캐시하므로 후속 변환은 매우 저렴합니다.</target>
        </trans-unit>
        <trans-unit id="8a647a9b2cb7446677be2c2e03adb32604edea60" translate="yes" xml:space="preserve">
          <source>An expression can serve as a statement on its own. Most other kinds of statements contain one or more expressions which specify data to be operated on. As in other languages, expressions in Octave include variables, array references, constants, and function calls, as well as combinations of these with various operators.</source>
          <target state="translated">식은 자체적으로 진술로 사용될 수 있습니다. 대부분의 다른 종류의 명령문에는 조작 할 데이터를 지정하는 하나 이상의 표현식이 있습니다. 다른 언어와 마찬가지로 Octave의 표현식에는 변수, 배열 참조, 상수 및 함수 호출뿐만 아니라 다양한 연산자와 이들의 조합이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="aceccf2b5118f99183fabf6f1bbb59ce6f86536f" translate="yes" xml:space="preserve">
          <source>An important use of the Delaunay tessellation is that it can be used to interpolate from scattered data to an arbitrary set of points. To do this the N-simplex of the known set of points is calculated with &lt;code&gt;delaunay&lt;/code&gt; or &lt;code&gt;delaunayn&lt;/code&gt;. Then the simplices in to which the desired points are found are identified. Finally the vertices of the simplices are used to interpolate to the desired points. The functions that perform this interpolation are &lt;code&gt;griddata&lt;/code&gt;, &lt;code&gt;griddata3&lt;/code&gt; and &lt;code&gt;griddatan&lt;/code&gt;.</source>
          <target state="translated">들로네 테셀레이션의 중요한 용도는 흩어진 데이터에서 임의의 점 세트로 보간하는 데 사용할 수 있다는 것입니다. 이를 위해 알려진 포인트 세트의 N-simplex는 &lt;code&gt;delaunay&lt;/code&gt; 또는 &lt;code&gt;delaunayn&lt;/code&gt; 으로 계산됩니다 . 그런 다음 원하는 점이 발견되는 단순화가 식별됩니다. 마지막으로 간체의 꼭짓점을 사용하여 원하는 점으로 보간합니다. 이 보간을 수행하는 기능은 &lt;code&gt;griddata&lt;/code&gt; , &lt;code&gt;griddata3&lt;/code&gt; 및 &lt;code&gt;griddatan&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="97a62449540788f87f3332ffd1e6de5d004e5d9c" translate="yes" xml:space="preserve">
          <source>An index expression consists of a set of parentheses enclosing &lt;em&gt;M&lt;/em&gt; expressions separated by commas. Each individual index value, or component, is used for the respective dimension of the object that it is applied to. In other words, the first index component is used for the first dimension (rows) of the object, the second index component is used for the second dimension (columns) of the object, and so on. The number of index components &lt;em&gt;M&lt;/em&gt; defines the dimensionality of the index expression. An index with two components would be referred to as a 2-D index because it has two dimensions.</source>
          <target state="translated">인덱스 표현식은 쉼표로 구분 된 &lt;em&gt;M&lt;/em&gt; 표현식을 묶는 괄호 세트로 구성됩니다 . 각 개별 색인 값 또는 구성 요소는 적용되는 오브젝트의 각 차원에 사용됩니다. 즉, 첫 번째 인덱스 구성 요소는 개체의 첫 번째 차원 (행)에 사용되고 두 번째 인덱스 구성 요소는 개체의 두 번째 차원 (열)에 사용됩니다. 인덱스 구성 요소의 수 &lt;em&gt;M&lt;/em&gt; 은 인덱스 표현식의 차원을 정의합니다. 두 개의 구성 요소가있는 인덱스는 2 차원이므로 2D 인덱스라고합니다.</target>
        </trans-unit>
        <trans-unit id="43071e6b301277959a8ecebda1b2fc0137866f8e" translate="yes" xml:space="preserve">
          <source>An indexed image consists of an M-by-N matrix of integers and a C-by-3 color map. Each integer corresponds to an index in the color map, and each row in the color map corresponds to an RGB color. The color map must be of class &lt;code&gt;double&lt;/code&gt; with values between 0 and 1.</source>
          <target state="translated">인덱싱 된 이미지는 M x N 정수형 정수와 C x 3 컬러 맵으로 구성됩니다. 각 정수는 컬러 맵의 인덱스에 해당하고 컬러 맵의 각 행은 RGB 색에 해당합니다. 색상 표 는 0과 1 사이의 값을 가진 클래스 &lt;code&gt;double&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="0bc591c08ea4625b4a1edd2d524b93a18ebff480" translate="yes" xml:space="preserve">
          <source>An indicator of convergence. 0 indicates that the iteration count was exceeded, and therefore convergence was not reached; &amp;gt;0 indicates that the algorithm converged. (The algorithm is stable and will converge given enough iterations.)</source>
          <target state="translated">수렴의 지표. 0은 반복 횟수가 초과되어 수렴에 도달하지 않았 음을 나타냅니다. &amp;gt; 0은 알고리즘이 수렴되었음을 나타냅니다. (알고리즘은 안정적이며 반복이 충분하면 수렴됩니다.)</target>
        </trans-unit>
        <trans-unit id="2d78f78b406be5883f7e5f4d01420a36f33502e1" translate="yes" xml:space="preserve">
          <source>An inequality constraint with an upper bound (&lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt;).</source>
          <target state="translated">상한이있는 부등식 제약 조건 ( &lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb13a8f3ed331d6062cd91596eed788516ca9d25" translate="yes" xml:space="preserve">
          <source>An inequality constraint with both upper and lower bounds (&lt;code&gt;A(i,:)*x &amp;gt;= -b(i)&lt;/code&gt;) &lt;em&gt;and&lt;/em&gt; (&lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt;).</source>
          <target state="translated">상한 및 하한 ( &lt;code&gt;A(i,:)*x &amp;gt;= -b(i)&lt;/code&gt; ) &lt;em&gt;및&lt;/em&gt; ( &lt;code&gt;A(i,:)*x &amp;lt;= b(i)&lt;/code&gt; ) 이 모두있는 부등식 제약 조건</target>
        </trans-unit>
        <trans-unit id="9735e0e8646b14c8606582272c81a4187878afed" translate="yes" xml:space="preserve">
          <source>An inequality with a lower bound (&lt;code&gt;A(i,:)*x &amp;gt;= b(i)&lt;/code&gt;).</source>
          <target state="translated">하한이있는 불평등 ( &lt;code&gt;A(i,:)*x &amp;gt;= b(i)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf0d4cab65ebdaaefaa3a62a11750262388b909a" translate="yes" xml:space="preserve">
          <source>An inline function is created from a string containing the function body using the &lt;code&gt;inline&lt;/code&gt; function. The following code defines the function &lt;em&gt;f(x) = x^2 + 2&lt;/em&gt;.</source>
          <target state="translated">인라인 함수는 사용 기능 체를 포함하는 문자열로부터 생성 &lt;code&gt;inline&lt;/code&gt; 기능. 다음 코드는 함수 &lt;em&gt;f (x) = x ^ 2 + 2를&lt;/em&gt; 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="f92075a96bc69dd2dc303414b3df4a2d10476b33" translate="yes" xml:space="preserve">
          <source>An integer indicating the status of the solution.</source>
          <target state="translated">솔루션 상태를 나타내는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="9e68ee25eeccb1070cf40b7dd826c54506897963" translate="yes" xml:space="preserve">
          <source>An integer variable.</source>
          <target state="translated">정수 변수.</target>
        </trans-unit>
        <trans-unit id="53b0d72a404885a677a811eb0275069b7a662974" translate="yes" xml:space="preserve">
          <source>An isosurface connects points with the same value and is analogous to a contour plot, but in three dimensions.</source>
          <target state="translated">등가 곡면은 점을 동일한 값으로 연결하고 등고선 플롯과 유사하지만 3 차원으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="438e3383149f3b2a6ee11a52edd5b51c17f9a6bc" translate="yes" xml:space="preserve">
          <source>An m-file for the differential equation used above is included with the Octave distribution in the examples directory under the name</source>
          <target state="translated">위에서 사용 된 미분 방정식에 대한 m 파일은 예제 디렉토리의 옥타브 분포에 이름으로 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0d1fed9943ed5cc011442277da5a18974af0d16" translate="yes" xml:space="preserve">
          <source>An object can be resized to more dimensions than it has; in such case the missing dimensions are assumed to be 1. Resizing an object to fewer dimensions is not possible.</source>
          <target state="translated">객체는 기존보다 더 많은 크기로 크기를 조정할 수 있습니다. 이러한 경우 누락 된 치수는 1로 가정됩니다. 더 작은 치수로 객체의 크기를 조정할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="642809894817d6eb67f19198707729fc951a942c" translate="yes" xml:space="preserve">
          <source>An object of class &lt;code&gt;polynomial2&lt;/code&gt; is created by calling the class constructor:</source>
          <target state="translated">클래스 생성자를 호출하여 &lt;code&gt;polynomial2&lt;/code&gt; 클래스의 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="5bdff866fbf225060652ab613dc4adba83d1bafc" translate="yes" xml:space="preserve">
          <source>An obvious way to do this is by storing the elements of the matrix as triplets, with two elements being their position in the array (rows and column) and the third being the data itself. This is conceptually easy to grasp, but requires more storage than is strictly needed.</source>
          <target state="translated">이 작업을 수행하는 확실한 방법은 행렬의 요소를 삼중 항으로 저장하는 것입니다. 두 요소는 배열의 위치 (행 및 열)이고 세 번째 요소는 데이터 자체입니다. 이것은 개념적으로 이해하기 쉽지만, 꼭 필요한 것보다 더 많은 저장 공간이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="42aa0b746728e1e7e403f4aad1dee1fdbefc1f49" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;flag character&lt;/em&gt; &amp;lsquo;</source>
          <target state="translated">선택적 &lt;em&gt;플래그 문자&lt;/em&gt; '</target>
        </trans-unit>
        <trans-unit id="6142a364090dc92b87518e7550aa380d074220b5" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;precision&lt;/em&gt; to specify the number of digits to be written for the numeric conversions. If the precision is specified, it consists of a period (&amp;lsquo;</source>
          <target state="translated">숫자 변환에 쓸 자릿수를 지정 하는 선택적 &lt;em&gt;정밀도&lt;/em&gt; 입니다. 정밀도가 지정되면 마침표 ( '</target>
        </trans-unit>
        <trans-unit id="2f068cbd116007a9236a7ec48d88483acfbf4ed7" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;type modifier character&lt;/em&gt;. This character is ignored by Octave&amp;rsquo;s &lt;code&gt;printf&lt;/code&gt; function, but is recognized to provide compatibility with the C language &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;em&gt;유형 수정 자 문자&lt;/em&gt; 입니다. 이 문자는 Octave의 &lt;code&gt;printf&lt;/code&gt; 함수에서 무시 되지만 C 언어 &lt;code&gt;printf&lt;/code&gt; 와 호환되는 것으로 인식됩니다 .</target>
        </trans-unit>
        <trans-unit id="7464ea666c2917755eaaaa559c0b87c25aea84a1" translate="yes" xml:space="preserve">
          <source>An optional decimal integer specifying the &lt;em&gt;minimum field width&lt;/em&gt;. If the normal conversion produces fewer characters than this, the field is padded with spaces to the specified width. This is a &lt;em&gt;minimum&lt;/em&gt; value; if the normal conversion produces more characters than this, the field is &lt;em&gt;not&lt;/em&gt; truncated. Normally, the output is right-justified within the field.</source>
          <target state="translated">&lt;em&gt;최소 필드 너비를&lt;/em&gt; 지정하는 선택적 10 진 정수 입니다. 일반 변환이 이보다 적은 문자를 생성하면 필드에 지정된 너비의 공백이 채워집니다. 이것은 &lt;em&gt;최소값&lt;/em&gt; 입니다. 정상적인 변환이이보다 더 많은 문자를 생성하는 경우, 필드는되어 &lt;em&gt;있지&lt;/em&gt; 립니다. 일반적으로 출력은 필드 내에서 오른쪽 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="717908376056e6eb6e0056decb5b94860998a095" translate="yes" xml:space="preserve">
          <source>An optional decimal integer that specifies the &lt;em&gt;maximum field width&lt;/em&gt;. Reading of characters from the input stream stops either when this maximum is reached or when a non-matching character is found, whichever happens first. Most conversions discard initial whitespace characters, and these discarded characters don&amp;rsquo;t count towards the maximum field width. Conversions that do not discard initial whitespace are explicitly documented.</source>
          <target state="translated">&lt;em&gt;최대 필드 너비&lt;/em&gt; 를 지정하는 선택적 10 진수 정수입니다 . 입력 스트림에서 문자 읽기는이 최대 값에 도달하거나 일치하지 않는 문자가 발견 될 때 중지됩니다. 대부분의 변환은 초기 공백 문자를 삭제하며이 버려진 문자는 최대 필드 너비에 포함되지 않습니다. 초기 공백을 버리지 않는 변환은 명시 적으로 문서화됩니다.</target>
        </trans-unit>
        <trans-unit id="b97540ec7eb22ec0a6570303acc7d52393482fde" translate="yes" xml:space="preserve">
          <source>An optional directory containing any files that are directly installed by the package. Typically this will include any &lt;code&gt;m&lt;/code&gt;-files.</source>
          <target state="translated">패키지에서 직접 설치 한 파일이 포함 된 선택적 디렉토리입니다. 일반적으로 여기에는 모든 &lt;code&gt;m&lt;/code&gt; 파일 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="62fb6180f16181388a0e3b8b832282927d75f39c" translate="yes" xml:space="preserve">
          <source>An optional directory containing code that must be built prior to the packages installation. The Octave package manager will execute</source>
          <target state="translated">패키지 설치 전에 빌드해야하는 코드가 포함 된 선택적 디렉토리입니다. Octave 패키지 관리자가 실행됩니다</target>
        </trans-unit>
        <trans-unit id="7ed92f9bc81d3a174dd3a8039d26b014d0f436ee" translate="yes" xml:space="preserve">
          <source>An optional directory containing documentation for the package. The files in this directory will be directly installed in a sub-directory of the installed package for future reference.</source>
          <target state="translated">패키지에 대한 설명서가 포함 된 선택적 디렉토리입니다. 이 디렉토리의 파일은 나중에 참조 할 수 있도록 설치된 패키지의 하위 디렉토리에 직접 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="c8a8cab7c0dcb0249b3adf2ee850ad1beabd76ac" translate="yes" xml:space="preserve">
          <source>An optional directory containing files that will be added to the Octave &lt;code&gt;EXEC_PATH&lt;/code&gt; when the package is loaded. This might contain external scripts, etc., called by functions within the package.</source>
          <target state="translated">패키지가로드 될 때 Octave &lt;code&gt;EXEC_PATH&lt;/code&gt; 에 추가 될 파일이 포함 된 선택적 디렉토리 입니다. 패키지 내의 함수에 의해 호출되는 외부 스크립트 등이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d64675f8404b546961006103bae24c4a9f5c8762" translate="yes" xml:space="preserve">
          <source>An optional field with the column number at which the error occurred</source>
          <target state="translated">오류가 발생한 열 번호가있는 선택적 필드</target>
        </trans-unit>
        <trans-unit id="34b3e4f70e08888b7529e1b0e7e6a44d3b5a78da" translate="yes" xml:space="preserve">
          <source>An optional file that includes commands that are run when the package is added to the users path. Note that &lt;code&gt;PKG_ADD&lt;/code&gt; directives in the source code of the package will also be added to this file by the Octave package manager. Note that symbolic links are to be avoided in packages, as symbolic links do not exist on some file systems, and so a typical use for this file is the replacement of the symbolic link</source>
          <target state="translated">패키지가 사용자 경로에 추가 될 때 실행되는 명령이 포함 된 선택적 파일입니다. 참고 &lt;code&gt;PKG_ADD&lt;/code&gt; 패키지의 소스 코드에서 지시도 옥타브 패키지 관리자가이 파일에 추가됩니다. 일부 파일 시스템에는 심볼릭 링크가 없으므로 심볼릭 링크는 패키지에서 사용하지 않아야하므로이 파일의 일반적인 용도는 심볼릭 링크를 대체하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c16664f3c7fca472009141fd6268917393cf3e17" translate="yes" xml:space="preserve">
          <source>An optional file that includes commands that are run when the package is removed from the users path. Note that &lt;code&gt;PKG_DEL&lt;/code&gt; directives in the source code of the package will also be added to this file by the Octave package manager. See &lt;a href=&quot;pkg_005fadd-and-pkg_005fdel-directives#PKG_005fADD-and-PKG_005fDEL-Directives&quot;&gt;PKG_ADD and PKG_DEL Directives&lt;/a&gt;, for details on &lt;code&gt;PKG_DEL&lt;/code&gt; directives.</source>
          <target state="translated">패키지가 사용자 경로에서 제거 될 때 실행되는 명령이 포함 된 선택적 파일입니다. 참고 &lt;code&gt;PKG_DEL&lt;/code&gt; 의 패키지의 소스 코드에서 지시도 옥타브 패키지 관리자가이 파일에 추가됩니다. 참조 &lt;a href=&quot;pkg_005fadd-and-pkg_005fdel-directives#PKG_005fADD-and-PKG_005fDEL-Directives&quot;&gt;pkg_add 실행 및 PKG_DEL 지침&lt;/a&gt; 에 대한 자세한 내용은, &lt;code&gt;PKG_DEL&lt;/code&gt; 의 지시.</target>
        </trans-unit>
        <trans-unit id="068eb6236dd6baf0de6e501c8582dd69f4f99f0e" translate="yes" xml:space="preserve">
          <source>An optional final argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default option is &lt;code&gt;{&quot;Qt&quot;}&lt;/code&gt;.</source>
          <target state="translated">선택적 최종 인수는 문자열 또는 문자열의 셀형 배열이어야하며 기본 qhull 명령에 전달 된 옵션을 포함합니다. 자세한 내용은 &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options에&lt;/a&gt; 대한 Qhull 라이브러리 설명서를 참조 하십시오 . 기본 옵션은 &lt;code&gt;{&quot;Qt&quot;}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5e6f7da8e817a925653db04505f5c8e9fc9a57a1" translate="yes" xml:space="preserve">
          <source>An optional final argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default options are &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;, &quot;Qz&quot;}&lt;/code&gt;.</source>
          <target state="translated">선택적 최종 인수는 문자열 또는 문자열의 셀형 배열이어야하며 기본 qhull 명령에 전달 된 옵션을 포함합니다. 자세한 내용은 &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options에&lt;/a&gt; 대한 Qhull 라이브러리 설명서를 참조 하십시오 . 기본 옵션은 &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;, &quot;Qz&quot;}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1756db6c076589390ea7feae8740428d259acb83" translate="yes" xml:space="preserve">
          <source>An optional final argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default options are &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;}&lt;/code&gt;. If Qhull fails for 2-D input the triangulation is attempted again with the options &lt;code&gt;{&quot;Qt&quot;, &quot;Qbb&quot;, &quot;Qc&quot;, &quot;Qz&quot;}&lt;/code&gt; which may result in reduced accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d4fc1a31ba9bfdd10ea16cd2c5f1133f518935" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;var&gt;property&lt;/var&gt;/&lt;var&gt;value&lt;/var&gt; pairs can be used to change the appearance of the created title text object.</source>
          <target state="translated">선택적인 &lt;var&gt;property&lt;/var&gt; / &lt;var&gt;value&lt;/var&gt; 쌍 목록을 사용하여 생성 된 제목 텍스트 객체의 모양을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e27fd7425ff27ee8e5036a98f16b4d71e0309998" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;var&gt;property&lt;/var&gt;/&lt;var&gt;value&lt;/var&gt; pairs can be used to change the properties of the created text label.</source>
          <target state="translated">&lt;var&gt;property&lt;/var&gt; / &lt;var&gt;value&lt;/var&gt; 쌍 의 선택적 목록을 사용하여 생성 된 텍스트 레이블의 속성을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5124ee277bc9953f09bc1515165ec9e36203c28" translate="yes" xml:space="preserve">
          <source>An optional range specification can be used to list only a portion of the file. The special keyword &lt;code&gt;&quot;end&quot;&lt;/code&gt; is a valid line number specification for the last line of the file.</source>
          <target state="translated">선택적 범위 지정을 사용하여 파일의 일부만 나열 할 수 있습니다. 특수 키워드 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 는 파일의 마지막 행에 유효한 행 번호 스펙입니다.</target>
        </trans-unit>
        <trans-unit id="b5c3072cff6c2e3fb063cacff763796433e946cf" translate="yes" xml:space="preserve">
          <source>An optional second argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;.</source>
          <target state="translated">선택적인 두 번째 인수는 문자열 또는 문자열의 셀형 배열이어야하며 기본 qhull 명령에 전달 된 옵션을 포함합니다. 자세한 내용은 &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options에&lt;/a&gt; 대한 Qhull 라이브러리 설명서를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="913971c06348ec643be6bf4d8cab8a7fd6bd6447" translate="yes" xml:space="preserve">
          <source>An optional second argument, which must be a string or cell array of strings, contains options passed to the underlying qhull command. See the documentation for the Qhull library for details &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options&lt;/a&gt;. The default options depend on the dimension of the input:</source>
          <target state="translated">선택적인 두 번째 인수는 문자열 또는 문자열의 셀형 배열이어야하며 기본 qhull 명령에 전달 된 옵션을 포함합니다. 자세한 내용은 &lt;a href=&quot;http://www.qhull.org/html/qh-quick.htm#options&quot;&gt;http://www.qhull.org/html/qh-quick.htm#options에&lt;/a&gt; 대한 Qhull 라이브러리 설명서를 참조 하십시오 . 기본 옵션은 입력 차원에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="18cd347d8ff985aa6c0071db16eea4aa7e30be3c" translate="yes" xml:space="preserve">
          <source>An optional short description of the used license (e.g., GPL version 3 or newer). This is optional since the file</source>
          <target state="translated">사용 된 라이센스에 대한 간단한 설명 (예 : GPL 버전 3 이상). 파일 이후 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="0a13b61661ef4d1d1a783560533fe5b4794934c3" translate="yes" xml:space="preserve">
          <source>An optional sixth argument specifies the specular exponent (spread) &lt;var&gt;se&lt;/var&gt;. If not given, &lt;var&gt;se&lt;/var&gt; defaults to 10.</source>
          <target state="translated">선택적인 여섯 번째 인수는 specular exponent (spread) &lt;var&gt;se&lt;/var&gt; 를 지정합니다 . 지정하지 않으면 &lt;var&gt;se&lt;/var&gt; 의 기본값은 10입니다.</target>
        </trans-unit>
        <trans-unit id="d8c492d0e2298093b9ff194505a48e7623726ad9" translate="yes" xml:space="preserve">
          <source>An optional structure containing the following parameter(s) used to define the behavior of the solver. Missing elements in the structure take on default values, so you only need to set the elements that you wish to change from the default.</source>
          <target state="translated">솔버의 동작을 정의하는 데 사용되는 다음 매개 변수를 포함하는 선택적 구조입니다. 구조에서 누락 된 요소는 기본값을 사용하므로 기본값에서 변경하려는 요소 만 설정하면됩니다.</target>
        </trans-unit>
        <trans-unit id="a2208ee04c913e350c4fd5b07ddd2d2d229ee32d" translate="yes" xml:space="preserve">
          <source>An optional third argument &lt;code&gt;&quot;enable&quot;&lt;/code&gt; or &lt;code&gt;&quot;disable&quot;&lt;/code&gt; is accepted but ignored.</source>
          <target state="translated">선택적인 세 번째 인수 &lt;code&gt;&quot;enable&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;disable&quot;&lt;/code&gt; 은 허용되지만 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1a51cad8576067be21e3c9672827d40116a05f56" translate="yes" xml:space="preserve">
          <source>An optional timeout can be specified using the property &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;. This timeout value is the number of seconds to wait for the condition to be true. &lt;var&gt;timeout&lt;/var&gt; must be at least 1. If a smaller value is specified, a warning is issued and a value of 1 is used instead. If the timeout value is not an integer, it is truncated towards 0.</source>
          <target state="translated">&lt;code&gt;&quot;timeout&quot;&lt;/code&gt; 특성을 사용하여 선택적 시간 종료를 지정할 수 있습니다 . 이 시간 종료 값은 조건이 true가 될 때까지 대기하는 시간 (초)입니다. &lt;var&gt;timeout&lt;/var&gt; 는 1 이상이어야합니다. 더 작은 값을 지정하면 경고가 발행되고 대신 1 값이 사용됩니다. 시간 종료 값이 정수가 아닌 경우 0을 향해 잘립니다.</target>
        </trans-unit>
        <trans-unit id="042a17c1ea683e5b80e4f43c8e0533a31b65c058" translate="yes" xml:space="preserve">
          <source>An optional type modifier character. This character is ignored by Octave&amp;rsquo;s &lt;code&gt;scanf&lt;/code&gt; function, but is recognized to provide compatibility with the C language &lt;code&gt;scanf&lt;/code&gt;.</source>
          <target state="translated">선택적 유형 수정 자 문자입니다. 이 문자는 Octave의 &lt;code&gt;scanf&lt;/code&gt; 함수에서 무시 되지만 C 언어 &lt;code&gt;scanf&lt;/code&gt; 와 호환되는 것으로 인식됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f805701f60830df81d1bd20c5335d7cd8eaea1c" translate="yes" xml:space="preserve">
          <source>An scalar value containing the relative menu position. The entry with the lowest value is at the first position starting from left or top.</source>
          <target state="translated">상대 메뉴 위치를 포함하는 스칼라 값입니다. 가장 낮은 값을 가진 항목은 왼쪽에서 시작하여 첫 번째 위치에 있습니다.</target>
        </trans-unit>
        <trans-unit id="26e308e8f3909aeff9873f75e92c3d168a850719" translate="yes" xml:space="preserve">
          <source>An un-typed property. This kind of property can hold any octave value. &lt;var&gt;args&lt;/var&gt; contains the default value.</source>
          <target state="translated">형식화되지 않은 속성입니다. 이러한 종류의 속성은 모든 옥타브 값을 보유 할 수 있습니다. &lt;var&gt;args&lt;/var&gt; 는 기본값을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7e328161ae176b367a2dd68c96a3f87166c5d4c9" translate="yes" xml:space="preserve">
          <source>An upper triangular matrix has nonzero entries only on the main diagonal and above.</source>
          <target state="translated">상단 삼각 행렬은 주 대각선에만 0이 아닌 항목이 있습니다.</target>
        </trans-unit>
        <trans-unit id="88ff5d2ec4d3de1bf4958c2936f676d71d7b9337" translate="yes" xml:space="preserve">
          <source>Anchoring operators. Requires pattern to occur at the start (&lt;code&gt;^&lt;/code&gt;) or end (&lt;code&gt;$&lt;/code&gt;) of the string.</source>
          <target state="translated">정박 연산자. 문자열 의 시작 ( &lt;code&gt;^&lt;/code&gt; ) 또는 끝 ( &lt;code&gt;$&lt;/code&gt; ) 에서 패턴이 발생 해야합니다.</target>
        </trans-unit>
        <trans-unit id="bd8dc56a79af20a3be2a63f12609fb0c43443053" translate="yes" xml:space="preserve">
          <source>And to compute the hash value of a file, e.g., &lt;code&gt;file = &quot;file.txt&quot;&lt;/code&gt;, call &lt;code&gt;hash&lt;/code&gt; in combination with the &lt;code&gt;fileread&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;file = &quot;file.txt&quot;&lt;/code&gt; 와 같이 파일의 해시 값을 계산 하려면 &lt;code&gt;fileread&lt;/code&gt; 와 함께 &lt;code&gt;hash&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f01b669a536a4f381b943a718310d3ef2819edc9" translate="yes" xml:space="preserve">
          <source>And, here is how to &lt;em&gt;yank&lt;/em&gt; the text back into the line. Yanking means to copy the most-recently-killed text from the kill buffer.</source>
          <target state="translated">그리고, 여기에 어떻게 &lt;em&gt;꺼낼&lt;/em&gt; 줄에 텍스트 다시. Yanking은 가장 최근에 살해 된 텍스트를 킬 버퍼에서 복사하는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d3b8cad38b939ab2e626fb472109be3b187ccb54" translate="yes" xml:space="preserve">
          <source>Anonymous Function Handle</source>
          <target state="translated">익명 함수 핸들</target>
        </trans-unit>
        <trans-unit id="6f497993755de46018a5ff1778be3f6bc999629d" translate="yes" xml:space="preserve">
          <source>Anonymous Functions</source>
          <target state="translated">익명 함수</target>
        </trans-unit>
        <trans-unit id="abc1203d9d051a13ccc429e49cded3efce0acb17" translate="yes" xml:space="preserve">
          <source>Anonymous functions are defined using the syntax</source>
          <target state="translated">익명 함수는 구문을 사용하여 정의됩니다</target>
        </trans-unit>
        <trans-unit id="86c8d4349d09fa2b8df21b3095b8e1bc53f536f4" translate="yes" xml:space="preserve">
          <source>Another advanced use of linear indexing is to create arrays filled with a single value. This can be done by using an index of ones on a scalar value. The result is an object with the dimensions of the index expression and every element equal to the original scalar. For example, the following statements</source>
          <target state="translated">선형 인덱싱의 또 다른 고급 사용은 단일 값으로 채워진 배열을 만드는 것입니다. 스칼라 값에 대한 인덱스를 사용하여이를 수행 할 수 있습니다. 결과는 인덱스 표현식의 차원과 모든 요소가 원래 스칼라와 같은 오브젝트입니다. 예를 들어, 다음 문장</target>
        </trans-unit>
        <trans-unit id="f5938799b5dc9e3884a33e90847c72f62cc781de" translate="yes" xml:space="preserve">
          <source>Another class of error message occurs at evaluation time. These errors are called &lt;em&gt;run-time errors&lt;/em&gt;, or sometimes &lt;em&gt;evaluation errors&lt;/em&gt;, because they occur when your program is being &lt;em&gt;run&lt;/em&gt;, or &lt;em&gt;evaluated&lt;/em&gt;. For example, if after correcting the mistake in the previous function definition, you type</source>
          <target state="translated">평가시 다른 종류의 오류 메시지가 발생합니다. 이러한 오류는 프로그램을 &lt;em&gt;실행&lt;/em&gt; 하거나 &lt;em&gt;평가할&lt;/em&gt; 때 발생하기 때문에 &lt;em&gt;런타임 오류&lt;/em&gt; 또는 때로는 &lt;em&gt;평가 오류&lt;/em&gt; 라고합니다 . 예를 들어, 이전 함수 정의에서 실수를 수정 한 후 다음을 입력하면&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d7e751e171bca6d4def5f9f2f251f6cfa35eaaf" translate="yes" xml:space="preserve">
          <source>Another example for decomposition is a finite difference matrix used to solve a boundary value problem on the unit square.</source>
          <target state="translated">분해의 다른 예는 단위 제곱의 경계 값 문제를 해결하는 데 사용되는 유한 차분 행렬입니다.</target>
        </trans-unit>
        <trans-unit id="20869813e88a7246f9c4ab8972c8ea0386ef40b3" translate="yes" xml:space="preserve">
          <source>Another example of where comma separated lists are used is in the creation of a new array with &lt;code&gt;[]&lt;/code&gt; (see &lt;a href=&quot;matrices#Matrices&quot;&gt;Matrices&lt;/a&gt;) or the creation of a cell array with &lt;code&gt;{}&lt;/code&gt; (see &lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;Basic Usage of Cell Arrays&lt;/a&gt;). In the expressions</source>
          <target state="translated">쉼표로 구분 된 목록이 사용되는 또 다른 예는 &lt;code&gt;[]&lt;/code&gt; 를 사용하여 새 배열을 작성하거나 ( &lt;a href=&quot;matrices#Matrices&quot;&gt;행렬&lt;/a&gt; 참조 ) &lt;code&gt;{}&lt;/code&gt; 를&lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;사용하여 셀형 배열을&lt;/a&gt; 작성하는 것입니다 (셀 배열의 기본 사용법 참조 ). 표현에서</target>
        </trans-unit>
        <trans-unit id="5a150d3d73ac2c4a70a02ece534874375a79ee79" translate="yes" xml:space="preserve">
          <source>Another example, where the result is a multi-dimensional 3-D array and the default value (zero) appears in the output:</source>
          <target state="translated">결과가 다차원 3 차원 배열이고 기본값 (영)이 출력에 나타나는 다른 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b0b1b9a16e9d0cd5f189e3bfcbdfdc320a8fe838" translate="yes" xml:space="preserve">
          <source>Another important feature of Octave is its ability to react to the user typing</source>
          <target state="translated">Octave의 또 다른 중요한 기능은 사용자 입력에 반응하는 기능입니다</target>
        </trans-unit>
        <trans-unit id="c628bf874c9da9a656dccc9a2da73737ea87690f" translate="yes" xml:space="preserve">
          <source>Another possible workaround is to use the command</source>
          <target state="translated">또 다른 가능한 해결 방법은 명령을 사용하는 것입니다</target>
        </trans-unit>
        <trans-unit id="b685e1b321be84b2b89601415b342394207d8f67" translate="yes" xml:space="preserve">
          <source>Another set of command-line editing functions use Meta characters. To type</source>
          <target state="translated">다른 명령 줄 편집 기능 세트는 메타 문자를 사용합니다. 입력하려면</target>
        </trans-unit>
        <trans-unit id="ddc2e1f929a1740efcc02657b7c4bebe6386189b" translate="yes" xml:space="preserve">
          <source>Another simple way of setting a breakpoint in an Octave script is the use of the &lt;code&gt;keyboard&lt;/code&gt; function.</source>
          <target state="translated">Octave 스크립트에서 중단 점을 설정하는 또 다른 간단한 방법은 &lt;code&gt;keyboard&lt;/code&gt; 기능을 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="82ee445a41ce8c5b0fdfe756f72683a3adc6ea9d" translate="yes" xml:space="preserve">
          <source>Another typical sparse matrix that is often needed is a random distribution of random elements. The functions &lt;em&gt;sprand&lt;/em&gt; and &lt;em&gt;sprandn&lt;/em&gt; perform this for uniform and normal random distributions of elements. They have exactly the same calling convention, where &lt;code&gt;sprand (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;,
&lt;var&gt;d&lt;/var&gt;)&lt;/code&gt;, creates an &lt;var&gt;r&lt;/var&gt;-by-&lt;var&gt;c&lt;/var&gt; sparse matrix with a density of filled elements of &lt;var&gt;d&lt;/var&gt;.</source>
          <target state="translated">종종 필요한 또 다른 일반적인 희소 행렬은 임의 요소의 임의 분포입니다. &lt;em&gt;sprand&lt;/em&gt; 및 &lt;em&gt;sprandn&lt;/em&gt; 함수 는 요소의 균일하고 정상적인 랜덤 분포를 위해 &lt;em&gt;이를&lt;/em&gt; 수행합니다. &lt;code&gt;sprand (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;, &lt;var&gt;d&lt;/var&gt;)&lt;/code&gt; 는 &lt;var&gt;d&lt;/var&gt; 의 채워진 요소 밀도로 &lt;var&gt;r&lt;/var&gt; x &lt;var&gt;c&lt;/var&gt; 희소 행렬을 만드는 동일한 호출 규칙을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="bea9d6275b6d0486e6c4c0c421ca6bb891756eee" translate="yes" xml:space="preserve">
          <source>Another use of the hashing function is to check for file integrity. The user can check the hash of the file against a known value and find if the file they have is the same as the one that the original hash was produced with.</source>
          <target state="translated">해싱 함수의 다른 용도는 파일 무결성을 확인하는 것입니다. 사용자는 알려진 값에 대해 파일의 해시를 검사하고 파일의 파일이 원래 해시와 동일한 파일인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab5127e2f8647249a1274dabfef6a2cd5b20b5e7" translate="yes" xml:space="preserve">
          <source>Another very basic function is &lt;em&gt;nnz&lt;/em&gt; that returns the number of nonzero entries there are in a sparse matrix, while the function &lt;em&gt;nzmax&lt;/em&gt; returns the amount of storage allocated to the sparse matrix. Note that Octave tends to crop unused memory at the first opportunity for sparse objects. There are some cases of user created sparse objects where the value returned by &lt;em&gt;nzmax&lt;/em&gt; will not be the same as &lt;em&gt;nnz&lt;/em&gt;, but in general they will give the same result. The function &lt;em&gt;spstats&lt;/em&gt; returns some basic statistics on the columns of a sparse matrix including the number of elements, the mean and the variance of each column.</source>
          <target state="translated">또 매우 기본적인 함수이다 &lt;em&gt;nnz&lt;/em&gt; 함수 동안 0이 아닌 엔트리들의 개수가 희소 행렬에 존재하는 복귀 &lt;em&gt;nzmax&lt;/em&gt; 저장 복귀 량이 희소 행렬에 할당. 옥타브는 스파 스 객체를 처음 사용할 때 사용하지 않는 메모리를 자르는 경향이 있습니다. 이에 의해 반환되는 값 사용자가 만든 스파 스 오브젝트의 경우입니다 &lt;em&gt;nzmax가&lt;/em&gt; 동일하지 않습니다 &lt;em&gt;nnz는&lt;/em&gt; 있지만, 일반적으로 그들은 같은 결과를 줄 것이다. &lt;em&gt;spstats&lt;/em&gt; 함수 는 요소 수, 각 열의 평균 및 분산을 포함하여 희소 행렬의 열에 대한 몇 가지 기본 통계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df5d7576073476e3cf0aefde52193d31e110d60f" translate="yes" xml:space="preserve">
          <source>Another way to add files to the &lt;var&gt;dynamic classpath&lt;/var&gt; exclusively for your user account is to use the file</source>
          <target state="translated">사용자 계정 전용으로 &lt;var&gt;dynamic classpath&lt;/var&gt; 에 파일을 추가하는 또 다른 방법 은 파일을 사용하는 것입니다</target>
        </trans-unit>
        <trans-unit id="d8b2bc932226a4af3e7938621b793728c8c67dc3" translate="yes" xml:space="preserve">
          <source>Any &lt;var&gt;y&lt;/var&gt; values that use a window extending beyond the original data array are deleted. For example, with a 10-element data vector and a window of length 3, the output will contain only 8 elements. The first element would require calculating the function over indices &lt;code&gt;[0,&amp;nbsp;1,&amp;nbsp;2]&lt;/code&gt; and is therefore discarded. The last element would require calculating the function over indices &lt;code&gt;[9,&amp;nbsp;10,&amp;nbsp;11]&lt;/code&gt; and is therefore discarded.</source>
          <target state="translated">원래 데이터 배열을 넘어 확장 된 창을 사용하는 모든 &lt;var&gt;y&lt;/var&gt; 값이 삭제됩니다. 예를 들어, 요소가 10 개인 데이터 벡터와 길이가 3 인 창에는 출력에 요소가 8 개만 포함됩니다. 첫 번째 요소는 인덱스 &lt;code&gt;[0,&amp;nbsp;1,&amp;nbsp;2]&lt;/code&gt; 대한 함수 계산이 필요 하므로 버려집니다. 마지막 요소는 인덱스 &lt;code&gt;[9,&amp;nbsp;10,&amp;nbsp;11]&lt;/code&gt; 대한 함수 계산을 요구 하므로 버려집니다.</target>
        </trans-unit>
        <trans-unit id="1ebd88c689dc0c3bd33e1f9bb4231364709e1c8f" translate="yes" xml:space="preserve">
          <source>Any Octave function can be overloaded, and this allows an object-specific version of a function to be called as needed. A pertinent example for the polynomial class might be to overload the &lt;code&gt;polyval&lt;/code&gt; function.</source>
          <target state="translated">모든 Octave 함수는 오버로드 될 수 있으며, 필요에 따라 객체 별 버전의 함수를 호출 할 수 있습니다. 다항식 클래스에 적절한 예는 &lt;code&gt;polyval&lt;/code&gt; 함수 를 오버로드하는 것일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a88c127406cff3937549e2d49dccd696c5c9e288" translate="yes" xml:space="preserve">
          <source>Any additional arguments are passed directly to &lt;var&gt;func&lt;/var&gt;. The total number of arguments to call &lt;var&gt;func&lt;/var&gt; with can be passed in &lt;var&gt;ntot&lt;/var&gt;; by default &lt;var&gt;ntot&lt;/var&gt; is &lt;var&gt;n&lt;/var&gt;. The input &lt;var&gt;n&lt;/var&gt; can also be a vector of indices of the output, in which case the output will be a cell array of the requested output arguments.</source>
          <target state="translated">추가 인수는 &lt;var&gt;func&lt;/var&gt; 에 직접 전달됩니다 . 호출 인수의 총 수 &lt;var&gt;func&lt;/var&gt; 에 전달 될 수 있습니다와 &lt;var&gt;ntot&lt;/var&gt; ; 기본적으로 &lt;var&gt;ntot&lt;/var&gt; 는 &lt;var&gt;n&lt;/var&gt; 입니다. 입력 &lt;var&gt;n&lt;/var&gt; 은 또한 출력의 인덱스 벡터 일 수 있으며,이 경우 출력은 요청 된 출력 인수의 셀형 배열이됩니다.</target>
        </trans-unit>
        <trans-unit id="0e7449b87fb3fd68fbea28e1f5bac142702612d6" translate="yes" xml:space="preserve">
          <source>Any additional arguments are passed to the &lt;code&gt;error&lt;/code&gt; function for processing.</source>
          <target state="translated">추가 인수는 처리 를 위해 &lt;code&gt;error&lt;/code&gt; 함수 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1c41e909fb699ad44338933b2cd674782306f70" translate="yes" xml:space="preserve">
          <source>Any arguments after the first are passed as inputs to the named function. For example,</source>
          <target state="translated">첫 번째 이후의 모든 인수는 명명 된 함수에 대한 입력으로 전달됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="7f04b6b12506a51de23e7d02e2cb5c92a77fd09b" translate="yes" xml:space="preserve">
          <source>Any arguments which follow &lt;var&gt;x0&lt;/var&gt; are treated as parameters, and passed in an appropriate manner to any of the functions (&lt;var&gt;Afun&lt;/var&gt; or &lt;var&gt;Mfun&lt;/var&gt;) or that have been given to &lt;code&gt;bicg&lt;/code&gt;.</source>
          <target state="translated">뒤에 이어지는 인수 &lt;var&gt;x0&lt;/var&gt; 기능 (임의의 매개 변수로 처리하고, 적절한 방식으로 전달 &lt;var&gt;Afun&lt;/var&gt; 또는 &lt;var&gt;Mfun&lt;/var&gt; 부여되었거나) &lt;code&gt;bicg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03a620864a775100876d3a42459eb790ac0334b6" translate="yes" xml:space="preserve">
          <source>Any bound (&lt;var&gt;A&lt;/var&gt;, &lt;var&gt;b&lt;/var&gt;, &lt;var&gt;lb&lt;/var&gt;, &lt;var&gt;ub&lt;/var&gt;, &lt;var&gt;A_in&lt;/var&gt;, &lt;var&gt;A_lb&lt;/var&gt;, &lt;var&gt;A_ub&lt;/var&gt;) may be set to the empty matrix (&lt;code&gt;[]&lt;/code&gt;) if not present. The constraints &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;A_in&lt;/var&gt; are matrices with each row representing a single constraint. The other bounds are scalars or vectors depending on the number of constraints. The algorithm is faster if the initial guess is feasible.</source>
          <target state="translated">존재하지 않는 경우 임의의 바운드 ( &lt;var&gt;A&lt;/var&gt; , &lt;var&gt;b&lt;/var&gt; , &lt;var&gt;lb&lt;/var&gt; , &lt;var&gt;ub&lt;/var&gt; , &lt;var&gt;A_in&lt;/var&gt; , &lt;var&gt;A_lb&lt;/var&gt; , &lt;var&gt;A_ub&lt;/var&gt; )는 빈 행렬 ( &lt;code&gt;[]&lt;/code&gt; ) 로 설정 될 수 있습니다 . 제약 조건 &lt;var&gt;A&lt;/var&gt; 및 &lt;var&gt;A_in&lt;/var&gt; 은 각 행이 단일 제약 조건을 나타내는 행렬입니다. 다른 범위는 제약 조건의 수에 따라 스칼라 또는 벡터입니다. 초기 추측이 가능하면 알고리즘이 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="5b536e07023e0802f82108dd15d02c6c7ef1ae27" translate="yes" xml:space="preserve">
          <source>Any character in &lt;var&gt;value&lt;/var&gt; will be interpreted as whitespace and trimmed; The default value for whitespace is &lt;code&gt;&quot;
\b\r\n\t&quot;&lt;/code&gt; (note the space). Unless whitespace is set to &lt;code&gt;&quot;&quot;&lt;/code&gt; (empty) AND at least one &lt;code&gt;&quot;%s&quot;&lt;/code&gt; format conversion specifier is supplied, a space is always part of whitespace.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 가있는 모든 문자는 공백으로 해석되어 잘립니다. 공백의 기본값은 &lt;code&gt;&quot; \b\r\n\t&quot;&lt;/code&gt; (공백 참조). 공백이 &lt;code&gt;&quot;&quot;&lt;/code&gt; (빈)으로 설정되고 하나 이상의 &lt;code&gt;&quot;%s&quot;&lt;/code&gt; 형식 변환 지정자가 제공 되지 않으면 공백은 항상 공백의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="4cd0890a6e81f8088b353f70802b4d6e93844150" translate="yes" xml:space="preserve">
          <source>Any character in &lt;var&gt;value&lt;/var&gt; will be interpreted as whitespace and trimmed; the string defining whitespace must be enclosed in double quotes for proper processing of special characters like &lt;code&gt;&quot;\t&quot;&lt;/code&gt;. In each data field, multiple consecutive whitespace characters are collapsed into one space and leading and trailing whitespace is removed. The default value for whitespace is &lt;code&gt;&quot;
\b\r\n\t&quot;&lt;/code&gt; (note the space). Whitespace is always added to the set of delimiter characters unless at least one &lt;code&gt;&quot;%s&quot;&lt;/code&gt; format conversion specifier is supplied; in that case only whitespace explicitly specified in &lt;code&gt;&quot;delimiter&quot;&lt;/code&gt; is retained as delimiter and removed from the set of whitespace characters. If whitespace characters are to be kept as-is (in e.g., strings), specify an empty value (i.e., &lt;code&gt;&quot;&quot;&lt;/code&gt;) for &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt;; obviously, whitespace cannot be a delimiter then.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 가있는 모든 문자는 공백으로 해석되어 잘립니다. 공백을 정의하는 문자열은 &lt;code&gt;&quot;\t&quot;&lt;/code&gt; 와 같은 특수 문자를 올바르게 처리하려면 큰 따옴표로 묶어야합니다 . 각 데이터 필드에서 여러 개의 연속 공백 문자가 하나의 공백으로 축소되고 선행 및 후행 공백이 제거됩니다. 공백의 기본값은 &lt;code&gt;&quot; \b\r\n\t&quot;&lt;/code&gt; (공백 참조). 하나 이상의 &lt;code&gt;&quot;%s&quot;&lt;/code&gt; 형식 변환 지정자가 제공 되지 않으면 공백은 항상 구분 기호 문자 세트에 추가됩니다 . 이 경우 &lt;code&gt;&quot;delimiter&quot;&lt;/code&gt; 명시 적으로 지정된 공백 만는 분리 문자로 유지되며 공백 문자 세트에서 제거됩니다. 공백 문자를 그대로 (예 : 문자열) 유지하려면 &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; 에 빈 값 (예 : &lt;code&gt;&quot;&quot;&lt;/code&gt; )을 지정하십시오 . 분명히 공백은 구분 기호가 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a01fae8061435d03e635d9c720ad45690d9251ed" translate="yes" xml:space="preserve">
          <source>Any character in &lt;var&gt;value&lt;/var&gt; will be used to split &lt;var&gt;str&lt;/var&gt; into words (default value = any whitespace). Note that whitespace is implicitly added to the set of delimiter characters unless a &lt;code&gt;&quot;%s&quot;&lt;/code&gt; format conversion specifier is supplied; see &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; parameter below. The set of delimiter characters cannot be empty; if needed Octave substitutes a space as delimiter.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 모든 문자는 &lt;var&gt;str&lt;/var&gt; 을 단어 로 나누는 데 사용됩니다 (기본값 = 공백). &lt;code&gt;&quot;%s&quot;&lt;/code&gt; 형식 변환 지정자가 제공 되지 않으면 공백이 구분 기호 문자 세트에 내재적으로 추가됩니다 . 아래의 &lt;code&gt;&quot;whitespace&quot;&lt;/code&gt; 매개 변수를 참조하십시오. 분리 문자 세트는 비워 둘 수 없습니다. 필요한 경우 Octave는 공백을 구분 기호로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="2a80ee399af36d7665d0593f6cd0078fe204a785" translate="yes" xml:space="preserve">
          <source>Any function that the nested function&amp;rsquo;s parent can call</source>
          <target state="translated">중첩 함수의 부모가 호출 할 수있는 모든 함수</target>
        </trans-unit>
        <trans-unit id="bedeae656f4af1d698b0042d8c29ef0ed92e6300" translate="yes" xml:space="preserve">
          <source>Any names identified are returned in a cell array of strings. The array is empty if no variables were found.</source>
          <target state="translated">식별 된 이름은 문자열의 셀형 배열로 반환됩니다. 변수를 찾지 못하면 배열이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7acc98c5dc330351bbfb90cdd130301b1a52997b" translate="yes" xml:space="preserve">
          <source>Any nonzero values will be converted to true (1) while zero values will be converted to false (0). The non-numeric value NaN cannot be converted and will produce an error.</source>
          <target state="translated">0이 아닌 값은 true (1)로 변환되고 0이 아닌 값은 false (0)로 변환됩니다. 숫자가 아닌 값 NaN은 변환 할 수 없으며 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0d2f42c46053e6b98b6c5c0616ed1fa0043207f7" translate="yes" xml:space="preserve">
          <source>Any number of &lt;code&gt;elseif&lt;/code&gt; clauses may appear. Each condition is tested in turn, and if one is found to be true, its corresponding &lt;var&gt;body&lt;/var&gt; is executed. If none of the conditions are true and the &lt;code&gt;else&lt;/code&gt; clause is present, its body is executed. Only one &lt;code&gt;else&lt;/code&gt; clause may appear, and it must be the last part of the statement.</source>
          <target state="translated">많은 &lt;code&gt;elseif&lt;/code&gt; 절이 나타날 수 있습니다. 각 조건은 차례로 테스트되며, 조건이 참인 경우 해당 &lt;var&gt;body&lt;/var&gt; 이 실행됩니다. 조건이 하나도없고 &lt;code&gt;else&lt;/code&gt; 절이 있으면 해당 본문이 실행됩니다. &lt;code&gt;else&lt;/code&gt; 절이 하나만 나타날 수 있으며 명령문의 마지막 부분이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0f14dd003c7de0dcdd66407a267bdab5b34bbe03" translate="yes" xml:space="preserve">
          <source>Any number of data sets (&lt;var&gt;x1&lt;/var&gt;,&lt;var&gt;y1&lt;/var&gt;, &lt;var&gt;x2&lt;/var&gt;,&lt;var&gt;y2&lt;/var&gt;, &amp;hellip;) may appear as long as they are separated by a format string &lt;var&gt;fmt&lt;/var&gt;.</source>
          <target state="translated">형식 문자열 &lt;var&gt;fmt&lt;/var&gt; 로 분리되어있는 한 여러 데이터 세트 ( &lt;var&gt;x1&lt;/var&gt; , &lt;var&gt;y1&lt;/var&gt; , &lt;var&gt;x2&lt;/var&gt; , &lt;var&gt;y2&lt;/var&gt; ,&amp;hellip;)가 나타날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3fb9213059a07c930a988c14846db1d8f9d9944" translate="yes" xml:space="preserve">
          <source>Any numeric entries in a cell array will be converted to text using &lt;code&gt;sprintf (&quot;%g&quot;)&lt;/code&gt;. For more precise control of the appearance convert any numeric entries to strings using &lt;code&gt;num2str&lt;/code&gt;, &lt;code&gt;sprintf&lt;/code&gt;, etc., before calling &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1f34477633978630c1fe3e0bba850b6e5566f2" translate="yes" xml:space="preserve">
          <source>Any optional &lt;var&gt;format&lt;/var&gt; specified by the programmer is used without modification. This is in contrast to &lt;small&gt;MATLAB&lt;/small&gt; which tampers with the &lt;var&gt;format&lt;/var&gt; based on internal heuristics.</source>
          <target state="translated">프로그래머가 지정한 선택적 &lt;var&gt;format&lt;/var&gt; 은 수정없이 사용됩니다. 이는 내부 휴리스틱을 기반으로 하는 &lt;var&gt;format&lt;/var&gt; 을 변경하는 &lt;small&gt;MATLAB&lt;/small&gt; 과 대조적 입니다.</target>
        </trans-unit>
        <trans-unit id="fe5402275658b415e4102e7f053526b6bcfe3f47" translate="yes" xml:space="preserve">
          <source>Any optional arguments are passed directly to &lt;code&gt;dlmread&lt;/code&gt; (see &lt;a href=&quot;#XREFdlmread&quot;&gt;dlmread&lt;/a&gt;).</source>
          <target state="translated">선택적 인수는 &lt;code&gt;dlmread&lt;/code&gt; 에 직접 전달됩니다 ( &lt;a href=&quot;#XREFdlmread&quot;&gt;dlmread&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="8c1fc66e01e41afc838d723175933fea8e364187" translate="yes" xml:space="preserve">
          <source>Any optional arguments are passed directly to &lt;code&gt;dlmwrite&lt;/code&gt; (see &lt;a href=&quot;#XREFdlmwrite&quot;&gt;dlmwrite&lt;/a&gt;).</source>
          <target state="translated">선택적 인수는 &lt;code&gt;dlmwrite&lt;/code&gt; 에 직접 전달됩니다 ( &lt;a href=&quot;#XREFdlmwrite&quot;&gt;dlmwrite&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="05e72ae03c5ea858f40fd99676376ddf8bfb9feb" translate="yes" xml:space="preserve">
          <source>Any parameter whose name contains the name of a type (e.g., &lt;var&gt;integer&lt;/var&gt; or &lt;var&gt;matrix&lt;/var&gt;) is expected to be of that type. Parameters named &lt;var&gt;object&lt;/var&gt; may be of any type. Parameters with other sorts of names (e.g., &lt;var&gt;new_file&lt;/var&gt;) are discussed specifically in the description of the function. In some sections, features common to parameters of several functions are described at the beginning.</source>
          <target state="translated">이름에 유형의 이름 (예 : &lt;var&gt;integer&lt;/var&gt; 또는 &lt;var&gt;matrix&lt;/var&gt; )이 포함 된 모든 매개 변수 는 해당 유형이어야합니다. 이름이 &lt;var&gt;object&lt;/var&gt; 인 매개 변수 는 모든 유형이 될 수 있습니다. 다른 종류의 이름을 가진 매개 변수 (예 : &lt;var&gt;new_file&lt;/var&gt; )는 함수 설명에서 구체적으로 설명됩니다. 일부 섹션에서는 여러 기능의 매개 변수에 공통적 인 기능이 처음에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0752ca92310b35f0f03538b641f4008591a7342" translate="yes" xml:space="preserve">
          <source>Any previously existing axes that would be (partly) covered by the newly created axes are deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd20b1575ab57d02ef4606acf85cbc3344433e0" translate="yes" xml:space="preserve">
          <source>Any property/value input pairs are assigned to the surface object.</source>
          <target state="translated">모든 속성 / 값 입력 쌍이 표면 객체에 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="266d5ce5eecf16d546468d7ab0379244e2371bef" translate="yes" xml:space="preserve">
          <source>Any property/value input pairs are assigned to the surface object. The full list of properties is documented at &lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;Surface Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c46413cb45e4b0a5aa4b3a95b3806f405beb90b" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying axes object.</source>
          <target state="translated">모든 속성 / 값 쌍은 기본 좌표축 개체로 직접 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="517aa74f8db8319afe61080f9fa4b0c0d900b70d" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying axes object. The full list of properties is documented at &lt;a href=&quot;axes-properties#Axes-Properties&quot;&gt;Axes Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea6c4b21c98787ef5fe1c21062b107c262c74a3" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying patch object.</source>
          <target state="translated">모든 속성 / 값 쌍은 기본 패치 객체로 직접 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="577243ed587c2daae7a3168422a4514d6aa32c38" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying patch object. The full list of properties is documented at &lt;a href=&quot;patch-properties#Patch-Properties&quot;&gt;Patch Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de4c5a09fa7d7626ba5a3e6376d14aa5379781a" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying surface object.</source>
          <target state="translated">모든 속성 / 값 쌍은 기본 표면 객체로 직접 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2272817ca585cb65830e0f74399d87ba475fde84" translate="yes" xml:space="preserve">
          <source>Any property/value pairs are passed directly to the underlying surface object. The full list of properties is documented at &lt;a href=&quot;surface-properties#Surface-Properties&quot;&gt;Surface Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e884eb9afce20f4c0a05ec8a451867948b52dcff" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uibuttongroup object.</source>
          <target state="translated">제공된 속성 값 쌍은 생성 된 uibuttongroup 객체의 기본값보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="91e0163f5226495a134001b955499540b9bfe7ed" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uicontextmenu object.</source>
          <target state="translated">제공된 특성 값 쌍은 작성된 uicontextmenu 오브젝트의 기본값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="33ac3f23f17fd7c53bccf7b6768616e40a3c4e86" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uicontrol object.</source>
          <target state="translated">제공된 특성 값 쌍은 작성된 uicontrol 오브젝트의 기본값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="8ce214aa7effbdb8123633c5f0f09bfe7dda598b" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uipanel object.</source>
          <target state="translated">제공된 특성 값 쌍은 작성된 uipanel 오브젝트의 기본값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="6778f392d0a91a7c5bd06f7c55c30e80ac4c9634" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uipushtool object.</source>
          <target state="translated">제공된 특성 값 쌍은 작성된 uipushtool 오브젝트의 기본값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="683babd9c3b4fc92f8149efb9152304712e22ff9" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uitable object.</source>
          <target state="translated">제공된 특성 값 쌍은 작성된 uitable 오브젝트의 기본값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="3453097880a525558fa32f268ec0850ffbe385e8" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uitoggletool object.</source>
          <target state="translated">제공된 특성 값 쌍은 작성된 uitoggletool 오브젝트의 기본값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="d4a8d9efa0cf1951967ee91ac6ff2a8fa329ed79" translate="yes" xml:space="preserve">
          <source>Any provided property value pairs will override the default values of the created uitoolbar object.</source>
          <target state="translated">제공된 특성 값 쌍은 작성된 uitoolbar 오브젝트의 기본값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="ab55b769bb01999de6283227ebfa868bc3d035a0" translate="yes" xml:space="preserve">
          <source>Any regular function can be used as a command if it accepts string input arguments. For example:</source>
          <target state="translated">문자열 입력 인수를 허용하면 일반 함수를 명령으로 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a2ae784793c90209ea4152a82cf5e08cf0046fb5" translate="yes" xml:space="preserve">
          <source>Any string arguments must be passed after the other arguments.</source>
          <target state="translated">문자열 인수는 다른 인수 뒤에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="0a70576cb2454ee72de24e1de2a08d1467072aca" translate="yes" xml:space="preserve">
          <source>Any string input arguments must be passed after all other arguments.</source>
          <target state="translated">모든 문자열 입력 인수는 다른 모든 인수 뒤에 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7f8b6dc0ff4763144265beae30c349e123255d1d" translate="yes" xml:space="preserve">
          <source>Any text between the continuation marker and the newline character is ignored. For example, the statement</source>
          <target state="translated">연속 표시 자와 줄 바꾸기 문자 사이의 텍스트는 무시됩니다. 예를 들어,</target>
        </trans-unit>
        <trans-unit id="03b413c82483754433f6a032c4981c78f267979e" translate="yes" xml:space="preserve">
          <source>Any variables that are not found in the argument list are inherited from the enclosing scope. Anonymous functions are useful for creating simple unnamed functions from expressions or for wrapping calls to other functions to adapt them for use by functions like &lt;code&gt;quad&lt;/code&gt;. For example,</source>
          <target state="translated">인수 목록에없는 변수는 둘러싸는 범위에서 상속됩니다. 익명 함수는 표현식에서 이름없는 간단한 함수를 만들거나 &lt;code&gt;quad&lt;/code&gt; 와 같은 함수에서 사용할 수 있도록 다른 함수에 대한 호출을 래핑하는 데 유용합니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="fee9be0b919e26eb4b29a40a0875f59884b4a380" translate="yes" xml:space="preserve">
          <source>Any whitespace character in the template causes any number of whitespace characters in the input stream to be read and discarded. The whitespace characters that are matched need not be exactly the same whitespace characters that appear in the template string. For example, write &amp;lsquo;</source>
          <target state="translated">템플릿의 공백 문자는 입력 스트림의 공백 문자를 읽고 버립니다. 일치하는 공백 문자는 템플릿 문자열에 나타나는 공백 문자와 정확히 같을 필요는 없습니다. 예를 들어 '</target>
        </trans-unit>
        <trans-unit id="d87445df0d78a575f5a3fac67957013479640f05" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;var&gt;fcn&lt;/var&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 &lt;var&gt;y&lt;/var&gt; 가 경계에 &lt;code&gt;NaN&lt;/code&gt; 값을 가지도록하지만 &lt;var&gt;fcn&lt;/var&gt; 이 &lt;code&gt;NaN&lt;/code&gt; 을 처리 하는 방법 과 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 속성에 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="c36cb0bc63ca0870744281bb42821bd4eebb1535" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;mad&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 이고 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 &lt;var&gt;y&lt;/var&gt; 가 경계에 &lt;code&gt;NaN&lt;/code&gt; 값을 가지도록하지만, &lt;code&gt;mad&lt;/code&gt; 가 &lt;code&gt;NaN&lt;/code&gt; 을 처리 하는 방식 과 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 속성에 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="11a545da923049093680f7389acfd80be1da6388" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;max&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 &lt;var&gt;y&lt;/var&gt; 가 경계에 &lt;code&gt;NaN&lt;/code&gt; 값을 가지도록하지만 &lt;code&gt;max&lt;/code&gt; 는 &lt;code&gt;NaN&lt;/code&gt; 을 처리 하는 방법 과 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 속성에 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="e4d30f02f495a07cf81f13b0f53b5cff48ca3bc1" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;mean&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 결과 &lt;var&gt;y&lt;/var&gt; 가진 &lt;code&gt;NaN&lt;/code&gt; 이 방법에 의해 영향을 받는다하더라도, 경계에서 값을 &lt;code&gt;mean&lt;/code&gt; 핸들 &lt;code&gt;NaN&lt;/code&gt; 의 , 또한 속성에 의해 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d47fa88fbec15348aa10f30e2ac76e889442020" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;min&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 이고 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 &lt;var&gt;y&lt;/var&gt; 가 경계에 &lt;code&gt;NaN&lt;/code&gt; 값을 가지도록하지만 &lt;code&gt;min&lt;/code&gt; 은 &lt;code&gt;NaN&lt;/code&gt; 을 처리 하는 방법 과 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 속성에 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="65aafdb27d1d064a76017620684968c6048f938d" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movmedian&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 &lt;var&gt;y&lt;/var&gt; 가 경계에 &lt;code&gt;NaN&lt;/code&gt; 값을 가지도록하지만 &lt;code&gt;movmedian&lt;/code&gt; 이 &lt;code&gt;NaN&lt;/code&gt; 을 처리 하는 방법 과 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 속성에 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="515fe98706e10f237bea9bdc49e9992cae09aaa3" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movprod&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 결과 &lt;var&gt;y&lt;/var&gt; 가진 &lt;code&gt;NaN&lt;/code&gt; 이 방법에 의해 영향을 받는다하더라도, 경계에서 값을 &lt;code&gt;movprod&lt;/code&gt; 의 핸들 &lt;code&gt;NaN&lt;/code&gt; 의 , 또한 속성에 의해 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e011efc6ffab8709546427830ac228a7b6938a8d" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movstd&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 &lt;var&gt;y&lt;/var&gt; 가 경계에 &lt;code&gt;NaN&lt;/code&gt; 값을 가지도록하지만 &lt;code&gt;movstd&lt;/code&gt; 가 &lt;code&gt;NaN&lt;/code&gt; 을 처리 하는 방법 과 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 속성에 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="84e87b2e0a6ebe9258d2d7c74d2e0ad596d14013" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;movsum&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 결과 &lt;var&gt;y&lt;/var&gt; 는 가진 &lt;code&gt;NaN&lt;/code&gt; 이 방법에 의해 영향을 받는다하더라도, 경계에서 값을 &lt;code&gt;movsum&lt;/code&gt; 가 처리 &lt;code&gt;NaN&lt;/code&gt; 이를 숙박 시설도하고, &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e89560fa0199ae349fcac5e0c527b18e30c12dd" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by &lt;code&gt;NaN&lt;/code&gt;. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt;. This option usually results in &lt;var&gt;y&lt;/var&gt; having &lt;code&gt;NaN&lt;/code&gt; values at the boundaries, although it is influenced by how &lt;code&gt;var&lt;/code&gt; handles &lt;code&gt;NaN&lt;/code&gt;, and also by the property &lt;code&gt;&quot;nancond&quot;&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소는 &lt;code&gt;NaN&lt;/code&gt; 으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([NaN, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), NaN])&lt;/code&gt; . 이 옵션은 일반적으로 &lt;var&gt;y&lt;/var&gt; 가 경계에 &lt;code&gt;NaN&lt;/code&gt; 값을 가지도록하지만 &lt;code&gt;var&lt;/code&gt; 가 &lt;code&gt;NaN&lt;/code&gt; 을 처리 하는 방법 과 &lt;code&gt;&quot;nancond&quot;&lt;/code&gt; 속성에 영향을받습니다 .</target>
        </trans-unit>
        <trans-unit id="3b94420e0085284480c2e238c9ee0b237e5c2d70" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="977733638e3c21088f20de9db4b65e4ddcd835c3" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="b68064036ed699ad1e76bb311cad85c803452e34" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="3ef90177bb1de3bda627e83ddac5074a03a8f492" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="23eb80fb927c7da1ab295362edfc03a239fd527b" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="d7283e1d47832eff3f7bfd27e81f7b8efc25b565" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="04013ec3b0d3d58c3e3ff09f8dab2baa41b6245e" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="8b19cbd6e368c9e9ed7a5179b9a0e6b5a973dc24" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="315607fc12097f7e35d0777f9140e1d41569b812" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="fa1be8814eefc11fdf75a52c5d61e5714474442a" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the specified value &lt;var&gt;user_value&lt;/var&gt; which must be a numeric scalar. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt;. A common choice for &lt;var&gt;user_value&lt;/var&gt; is 0.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 숫자 스칼라 여야 하는 지정된 값 &lt;var&gt;user_value&lt;/var&gt; 로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;user_value&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;user_value&lt;/var&gt;])&lt;/code&gt; . &lt;var&gt;user_value&lt;/var&gt; 의 일반적인 선택 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="cf511c880116f88bbea251680131f1fd6974234d" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cd5893382406b6e4c450d76d1a9d4e3abe9990c" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="730462b50a4a7d6e71ecfd1c9b8fcbce1d7cf213" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b214b07a0d58cd526a32ea652f0d96375f9e839" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c1397db3476234e9136f784be193ea6692bcfc5" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="160e488f1edd0c0a1d93c206f81ae18700b55302" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b32fbe3c2b888f1d8074aaa1be3ecbd59e13ad8" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bde744ba860d983f73301c06b1969ceac63a076" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab36fc5bb5b9c563dc1202c2981dfd0d111244b1" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14171bb1b91b98c410779fc56ba49f330a2dd3d5" translate="yes" xml:space="preserve">
          <source>Any window elements outside the data array are replaced by the value of &lt;var&gt;x&lt;/var&gt; at the boundary. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt;.</source>
          <target state="translated">데이터 배열 외부의 모든 창 요소 는 경계에서 &lt;var&gt;x&lt;/var&gt; 값으로 대체됩니다 . 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(1), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(end)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="545c638e77e6f6dba64f975a55126c1183566af5" translate="yes" xml:space="preserve">
          <source>Apart from the string concatenation functions (see &lt;a href=&quot;concatenating-strings#Concatenating-Strings&quot;&gt;Concatenating Strings&lt;/a&gt;) which cast numerical data to the corresponding UTF-8 encoded characters, there are several functions that format numerical data as strings. &lt;code&gt;mat2str&lt;/code&gt; and &lt;code&gt;num2str&lt;/code&gt; convert real or complex matrices, while &lt;code&gt;int2str&lt;/code&gt; converts integer matrices. &lt;code&gt;int2str&lt;/code&gt; takes the real part of complex values and round fractional values to integer. A more flexible way to format numerical data as strings is the &lt;code&gt;sprintf&lt;/code&gt; function (see &lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;Formatted Output&lt;/a&gt;, &lt;a href=&quot;formatted-output#XREFsprintf&quot;&gt;sprintf&lt;/a&gt;).</source>
          <target state="translated">별도로 문자열 연결 기능에서 (참조 &lt;a href=&quot;concatenating-strings#Concatenating-Strings&quot;&gt;연접 문자열&lt;/a&gt; 대응 UTF-8 인코딩 자로 수치 데이터 캐스팅), 문자열로 포맷 수치 데이터 그 여러 가지 기능이있다. &lt;code&gt;mat2str&lt;/code&gt; 과 &lt;code&gt;num2str&lt;/code&gt; 은 실수 또는 복소수 행렬을 변환 하는 반면 &lt;code&gt;int2str&lt;/code&gt; 은 정수 행렬을 변환합니다. &lt;code&gt;int2str&lt;/code&gt; 은 복소수 값의 실제 부분을 취하고 분수 값을 정수로 반올림합니다. 숫자 데이터를 문자열로 형식화하는보다 유연한 방법은 &lt;code&gt;sprintf&lt;/code&gt; 함수입니다 ( &lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;Formatted Output&lt;/a&gt; , &lt;a href=&quot;formatted-output#XREFsprintf&quot;&gt;sprintf&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="785a6da4cd10e6657994c3b3db962696d27c8392" translate="yes" xml:space="preserve">
          <source>Append PostScript or PDF output to an existing file of the same type.</source>
          <target state="translated">PostScript 또는 PDF 출력을 동일한 유형의 기존 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="fca25ad0c003bd064eefcf4ae7631b81f01f034d" translate="yes" xml:space="preserve">
          <source>Append a &lt;code&gt;&quot;t&quot;&lt;/code&gt; to the mode string to open the file in text mode or a &lt;code&gt;&quot;b&quot;&lt;/code&gt; to open in binary mode. On Windows systems, text mode reading and writing automatically converts linefeeds to the appropriate line end character for the system (carriage-return linefeed on Windows). The default when no mode is specified is binary.</source>
          <target state="translated">텍스트 문자열로 파일을 열려면 모드 문자열에 &lt;code&gt;&quot;t&quot;&lt;/code&gt; 를 추가하고 이진 모드로 열려면 &lt;code&gt;&quot;b&quot;&lt;/code&gt; 를 추가하십시오. Windows 시스템에서 텍스트 모드 읽기 및 쓰기는 줄 바꿈을 시스템에 적합한 줄 끝 문자 (Windows의 캐리지 리턴 줄 바꿈)로 자동 변환합니다. 모드가 지정되지 않은 경우 기본값은 2 진입니다.</target>
        </trans-unit>
        <trans-unit id="76e04db00f9d563e8a44f8584d52d9de84897e3e" translate="yes" xml:space="preserve">
          <source>Append on each write.</source>
          <target state="translated">각 쓰기에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="fcd15fbe76d1ad70f714f8e23c265874bb25a2bb" translate="yes" xml:space="preserve">
          <source>Append the scalar value &lt;var&gt;c&lt;/var&gt; to the vector &lt;var&gt;x&lt;/var&gt; until it is of length &lt;var&gt;l&lt;/var&gt;. If &lt;var&gt;c&lt;/var&gt; is not given, a value of 0 is used.</source>
          <target state="translated">스칼라 값 추가 &lt;var&gt;c&lt;/var&gt; 벡터로 &lt;var&gt;x&lt;/var&gt; 가 길이로 될 때까지 &lt;var&gt;l&lt;/var&gt; . 경우에 &lt;var&gt;c&lt;/var&gt; 부여하지 않고, 0의 값이 사용된다.</target>
        </trans-unit>
        <trans-unit id="cc9f1bb350cd58ad799225f61b97f0b24ad0032e" translate="yes" xml:space="preserve">
          <source>Append to the destination instead of overwriting.</source>
          <target state="translated">덮어 쓰지 않고 대상에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f7054aac1696ded8ac9bfacb9f5cf76d334f375f" translate="yes" xml:space="preserve">
          <source>Appendix A External Code Interface</source>
          <target state="translated">부록 A 외부 코드 인터페이스</target>
        </trans-unit>
        <trans-unit id="b21f037da0ba45a7ed4e479dbfd59644ad04ab9e" translate="yes" xml:space="preserve">
          <source>Appendix B Test and Demo Functions</source>
          <target state="translated">부록 B 테스트 및 데모 기능</target>
        </trans-unit>
        <trans-unit id="08d70a0baa22ef5ef39c2d25e1fddab95e34397c" translate="yes" xml:space="preserve">
          <source>Appendix C Obsolete Functions</source>
          <target state="translated">부록 C 더 이상 사용되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="04ef7133e2155dd4201b5a2afeb50c4f04292dc6" translate="yes" xml:space="preserve">
          <source>Appendix D Known Causes of Trouble</source>
          <target state="translated">부록 D 알려진 문제의 원인</target>
        </trans-unit>
        <trans-unit id="c61a2f23d53216631bdfee427af8b5e03b525002" translate="yes" xml:space="preserve">
          <source>Appendix E Installing Octave</source>
          <target state="translated">부록 E 옥타브 설치</target>
        </trans-unit>
        <trans-unit id="797e750e19093eb16b699bdddb57638dfd00d35d" translate="yes" xml:space="preserve">
          <source>Appendix F Grammar and Parser</source>
          <target state="translated">부록 F 문법과 파서</target>
        </trans-unit>
        <trans-unit id="c17a2ab66c214e2003d542184dcb51e72a9bf238" translate="yes" xml:space="preserve">
          <source>Appendix G GNU GENERAL PUBLIC LICENSE</source>
          <target state="translated">부록 G GNU 일반 공중 사용 허가서</target>
        </trans-unit>
        <trans-unit id="54f6630ceb611f3fceceda2a230f65f7f5a6ff1e" translate="yes" xml:space="preserve">
          <source>Application Note: If &lt;var&gt;x&lt;/var&gt; is not specified then unit spacing will be used. To scale the integral to the correct value you must multiply by the actual spacing value (deltaX).</source>
          <target state="translated">응용 참고 사항 : &lt;var&gt;x&lt;/var&gt; 를 지정하지 않으면 단위 간격이 사용됩니다. 적분을 올바른 값으로 조정하려면 실제 간격 값 (deltaX)을 곱해야합니다.</target>
        </trans-unit>
        <trans-unit id="816c84617b41a721d5f438b924dd8db1e9c51d20" translate="yes" xml:space="preserve">
          <source>Application Note: If &lt;var&gt;x&lt;/var&gt; is not specified then unit spacing will be used. To scale the integral to the correct value you must multiply by the actual spacing value (deltaX). As an example, the integral of &lt;em&gt;x^3&lt;/em&gt; over the range [0, 1] is &lt;em&gt;x^4/4&lt;/em&gt; or 0.25. The following code uses &lt;code&gt;trapz&lt;/code&gt; to calculate the integral in three different ways.</source>
          <target state="translated">응용 참고 사항 : &lt;var&gt;x&lt;/var&gt; 를 지정하지 않으면 단위 간격이 사용됩니다. 적분을 올바른 값으로 조정하려면 실제 간격 값 (deltaX)을 곱해야합니다. 예를 들어 [0, 1] 범위 에서 &lt;em&gt;x ^ 3&lt;/em&gt; 의 적분 은 &lt;em&gt;x ^ 4 / 4&lt;/em&gt; 또는 0.25입니다. 다음 코드는 &lt;code&gt;trapz&lt;/code&gt; 를 사용 하여 세 가지 다른 방식으로 적분을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="f3f8827aa94cef2d328ca131ad741f65913d0c4f" translate="yes" xml:space="preserve">
          <source>Application Notes: If the objective function is a single nonlinear equation of one variable then using &lt;code&gt;fminbnd&lt;/code&gt; is usually a better choice.</source>
          <target state="translated">애플리케이션 노트 : 목적 함수가 하나의 변수에 대한 단일 비선형 방정식 인 경우 일반적으로 &lt;code&gt;fminbnd&lt;/code&gt; 를 사용 하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d46a5f93b7313f2025a9e027bed811a2cfd7f7e8" translate="yes" xml:space="preserve">
          <source>Application-defined Data</source>
          <target state="translated">응용 프로그램 정의 데이터</target>
        </trans-unit>
        <trans-unit id="135e357067c784380e6421d4b046311ab5356ea1" translate="yes" xml:space="preserve">
          <source>Applied Numerical Linear Algebra</source>
          <target state="translated">적용되는 수치 선형 대수</target>
        </trans-unit>
        <trans-unit id="70a4c7664dad814e1c6749b6e9505c00d073333c" translate="yes" xml:space="preserve">
          <source>Apply a 1-D digital filter to the data &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">데이터 &lt;var&gt;x&lt;/var&gt; 에 1 차원 디지털 필터를 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="e73565dee1a1f7600c0f54242050730fa35c87c8" translate="yes" xml:space="preserve">
          <source>Apply a binary function &lt;var&gt;f&lt;/var&gt; element-by-element to two array arguments &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;B&lt;/var&gt;, expanding singleton dimensions in either input argument as necessary.</source>
          <target state="translated">이진 함수 적용 &lt;var&gt;f&lt;/var&gt; 개의 배열 인수로 엘리먼트별로를 및 &lt;var&gt;B&lt;/var&gt; 필요에 따라 하나의 입력 인수 차원 단일 확장. &lt;var&gt;A&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="aa781854fb0fdffb9cfdc7526b54d027900e556f" translate="yes" xml:space="preserve">
          <source>Apply function &lt;var&gt;fcn&lt;/var&gt; to a moving window of length &lt;var&gt;wlen&lt;/var&gt; on data &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">데이터 &lt;var&gt;x&lt;/var&gt; 에서 길이 &lt;var&gt;wlen&lt;/var&gt; 의 이동 창에 &lt;var&gt;fcn&lt;/var&gt; 함수를 적용하십시오 .</target>
        </trans-unit>
        <trans-unit id="66dc3ae413a56066aedc7ced05df36a683878e28" translate="yes" xml:space="preserve">
          <source>Apply the 2-D FIR filter &lt;var&gt;b&lt;/var&gt; to &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">2 차원 FIR 필터 &lt;var&gt;b&lt;/var&gt; 를 &lt;var&gt;x&lt;/var&gt; 에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="f8e284d58526d8b58ca23cc14b15ae04fa4f7c79" translate="yes" xml:space="preserve">
          <source>Applying functions to arrays, cells, and structs</source>
          <target state="translated">배열, 셀 및 구조체에 함수 적용</target>
        </trans-unit>
        <trans-unit id="db74573c6b8ecf6daef655a0518bb6cb43617e62" translate="yes" xml:space="preserve">
          <source>Architecture-independent data files.</source>
          <target state="translated">아키텍처 독립적 인 데이터 파일.</target>
        </trans-unit>
        <trans-unit id="b1fa1729ef721d04daf66856816f1037c664412f" translate="yes" xml:space="preserve">
          <source>Area Series</source>
          <target state="translated">지역 시리즈</target>
        </trans-unit>
        <trans-unit id="166c8b53c91f66554c4fa75df1e6cc3ea15ab01b" translate="yes" xml:space="preserve">
          <source>Area plot of the columns of &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;y&lt;/var&gt; 열의 면적 그림 .</target>
        </trans-unit>
        <trans-unit id="7dff5f4d0b9314271352bb4fb936d10262b72e8a" translate="yes" xml:space="preserve">
          <source>Area series objects are created by the &lt;code&gt;area&lt;/code&gt; function. Each of the &lt;code&gt;hggroup&lt;/code&gt; elements contains a single patch object. The properties of the area series are</source>
          <target state="translated">면적 시리즈 객체는 &lt;code&gt;area&lt;/code&gt; 기능에 의해 생성됩니다 . 각 &lt;code&gt;hggroup&lt;/code&gt; 요소에는 단일 패치 객체가 포함되어 있습니다. 지역 시리즈의 속성은</target>
        </trans-unit>
        <trans-unit id="b3c989acda843efdf73d28fc1e1a6b325fe930d3" translate="yes" xml:space="preserve">
          <source>Arguments are</source>
          <target state="translated">인수는</target>
        </trans-unit>
        <trans-unit id="05a731380a967a2c5a3851a4eb179164e25c5d3b" translate="yes" xml:space="preserve">
          <source>Arguments are concatenated vertically. The returned values are padded with blanks as needed to make each row of the string array have the same length. Empty input strings are significant and will concatenated in the output.</source>
          <target state="translated">인수는 세로로 연결됩니다. 반환 된 값은 문자열 배열의 각 행을 동일한 길이로 만들기 위해 필요에 따라 공백으로 채워집니다. 빈 입력 문자열은 중요하며 출력에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="3e5b8fb05cf7b99948f41362471af5904f8067a7" translate="yes" xml:space="preserve">
          <source>Arguments are concatenated vertically. The returned values are padded with blanks as needed to make each row of the string array have the same length. Unlike &lt;code&gt;char&lt;/code&gt;, empty strings are removed and will not appear in the output.</source>
          <target state="translated">인수는 세로로 연결됩니다. 반환 된 값은 문자열 배열의 각 행을 동일한 길이로 만들기 위해 필요에 따라 공백으로 채워집니다. &lt;code&gt;char&lt;/code&gt; 과 달리 빈 문자열은 제거되어 출력에 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f61143896c17a8c7fc42c21ffd016d48186d390c" translate="yes" xml:space="preserve">
          <source>Arguments may also be given in groups of three as</source>
          <target state="translated">인수는 다음과 같이 3 개의 그룹으로 제공 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="45f053dc732762c8c17889da40821807b746247b" translate="yes" xml:space="preserve">
          <source>Arithmetic</source>
          <target state="translated">Arithmetic</target>
        </trans-unit>
        <trans-unit id="6104f39ed22a2cd32e98536a3447a01c4b9f4781" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators</source>
          <target state="translated">산술 연산자</target>
        </trans-unit>
        <trans-unit id="b33de5df78f2a08fc527ef7f0d1ac51c58e59944" translate="yes" xml:space="preserve">
          <source>Arithmetic Ops</source>
          <target state="translated">산술 작전</target>
        </trans-unit>
        <trans-unit id="86b945e8e0a46c9e60aa419ec1c8956ece4c3997" translate="yes" xml:space="preserve">
          <source>Array and Sparse Class Differences</source>
          <target state="translated">배열과 희소 클래스 차이</target>
        </trans-unit>
        <trans-unit id="b2b28ba6fc9eb24544f23790c336166701491eeb" translate="yes" xml:space="preserve">
          <source>Array.cc</source>
          <target state="translated">Array.cc</target>
        </trans-unit>
        <trans-unit id="6dd6586b554db2bae862864e25cb2fbf8353d787" translate="yes" xml:space="preserve">
          <source>ArrayFormat</source>
          <target state="translated">ArrayFormat</target>
        </trans-unit>
        <trans-unit id="be3537a50fe2a3161040eaf751da1bb42cb54fed" translate="yes" xml:space="preserve">
          <source>Arrays may also be concatenated horizontally using the syntax for creating new matrices. For example:</source>
          <target state="translated">배열은 새 행렬 생성 구문을 사용하여 가로로 연결할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cf220baf3f296541731fd734637bb91c7b88290d" translate="yes" xml:space="preserve">
          <source>Arrays may also be concatenated vertically using the syntax for creating new matrices. For example:</source>
          <target state="translated">배열은 새 행렬 생성 구문을 사용하여 세로로 연결할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0cf604cb001bdc6112fda3affb0c7674d1c4481b" translate="yes" xml:space="preserve">
          <source>Arrows</source>
          <target state="translated">Arrows</target>
        </trans-unit>
        <trans-unit id="6c3f3d3203630ce74ffd9609307833fc4f052892" translate="yes" xml:space="preserve">
          <source>Artist</source>
          <target state="translated">Artist</target>
        </trans-unit>
        <trans-unit id="1c89f3a885dfe7cece78890101c6b0af957926e4" translate="yes" xml:space="preserve">
          <source>Artist name.</source>
          <target state="translated">아티스트 이름.</target>
        </trans-unit>
        <trans-unit id="2f29c23a7415d1170721d53776b5b3c6caa40e96" translate="yes" xml:space="preserve">
          <source>As a complex example consider a parent function &lt;code&gt;ex_top&lt;/code&gt; with two child functions, &lt;code&gt;ex_a&lt;/code&gt; and &lt;code&gt;ex_b&lt;/code&gt;. In addition, &lt;code&gt;ex_a&lt;/code&gt; has two more child functions, &lt;code&gt;ex_aa&lt;/code&gt; and &lt;code&gt;ex_ab&lt;/code&gt;. For example:</source>
          <target state="translated">복잡한 예로 , &lt;code&gt;ex_a&lt;/code&gt; 및 &lt;code&gt;ex_b&lt;/code&gt; 라는 두 개의 하위 함수가 있는 상위 함수 &lt;code&gt;ex_top&lt;/code&gt; 을 고려하십시오 . 또한 &lt;code&gt;ex_a&lt;/code&gt; 에는 &lt;code&gt;ex_aa&lt;/code&gt; 및 &lt;code&gt;ex_ab&lt;/code&gt; 의 두 가지 하위 함수가 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="09ec4198a968407eb1f63463fd157b6dbada87fc" translate="yes" xml:space="preserve">
          <source>As a consequence of using &lt;code&gt;quadcc&lt;/code&gt;, &lt;code&gt;quadgk&lt;/code&gt;, and &lt;code&gt;quadv&lt;/code&gt;, certain option combinations are not supported. Currently, &lt;code&gt;&quot;ArrayValued&quot;&lt;/code&gt; cannot be combined with &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; or &lt;code&gt;&quot;Waypoints&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quadcc&lt;/code&gt; , &lt;code&gt;quadgk&lt;/code&gt; 사용의 결과 및 &lt;code&gt;quadv&lt;/code&gt; 을 특정 옵션 조합은 지원되지 않습니다. 현재 &lt;code&gt;&quot;ArrayValued&quot;&lt;/code&gt; 는 &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;Waypoints&quot;&lt;/code&gt; 와 함께 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="fc3435493aefa988b7deecd5e677269bd49effa1" translate="yes" xml:space="preserve">
          <source>As a general rule, functions should already be written with matrix arguments in mind and should consider whole matrix operations in a vectorized manner. Sometimes, writing functions in this way appears difficult or impossible for various reasons. For those situations, Octave provides facilities for applying a function to each element of an array, cell, or struct.</source>
          <target state="translated">일반적으로 함수는 이미 매트릭스 인수를 사용하여 작성해야하며 벡터화 된 방식으로 전체 매트릭스 연산을 고려해야합니다. 때때로 이런 방식으로 함수를 작성하는 것은 여러 가지 이유로 어렵거나 불가능 해 보입니다. 이러한 상황에서 Octave는 배열, 셀 또는 구조체의 각 요소에 함수를 적용하기위한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3b32bbe19e2dd11f2f004787fd53ae11b98e11b8" translate="yes" xml:space="preserve">
          <source>As a less trivial example, instead of</source>
          <target state="translated">덜 사소한 예로서</target>
        </trans-unit>
        <trans-unit id="12a7a92c9e870593841c1a9c287f8a16df89aa1e" translate="yes" xml:space="preserve">
          <source>As a measure of dispersion, &lt;code&gt;mad&lt;/code&gt; is less affected by outliers than &lt;code&gt;std&lt;/code&gt;.</source>
          <target state="translated">분산 측정 기준으로 &lt;code&gt;mad&lt;/code&gt; 는 &lt;code&gt;std&lt;/code&gt; 보다 특이 치의 영향을 덜받습니다. .</target>
        </trans-unit>
        <trans-unit id="9e9ca23be9dfdfe1fc501b7f10e1ed9abc725a52" translate="yes" xml:space="preserve">
          <source>As a measure of dispersion, the interquartile range is less affected by outliers than either &lt;code&gt;range&lt;/code&gt; or &lt;code&gt;std&lt;/code&gt;.</source>
          <target state="translated">분산의 척도로서 사 분위 간 범위는 어느 쪽보다 특이 치의 영향을 덜받습니다. &lt;code&gt;range&lt;/code&gt; 또는 &lt;code&gt;std&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6c3df4bf76c8b43914248e395aa4103e7fce5b4" translate="yes" xml:space="preserve">
          <source>As a simple example, consider a function &lt;code&gt;func1&lt;/code&gt;, that calls a helper function &lt;code&gt;func2&lt;/code&gt; to do much of the work. For example:</source>
          <target state="translated">간단한 예로, 함수를 고려하십시오 &lt;code&gt;func1&lt;/code&gt; 많은 기능 을 수행하기 위해 도우미 함수 &lt;code&gt;func2&lt;/code&gt; 를 호출하는 func1을 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b2e2b18eaa83e0c9d5290952ead6863c5c9e120f" translate="yes" xml:space="preserve">
          <source>As a simple example, consider a parent function &lt;code&gt;foo&lt;/code&gt;, that calls a nested child function &lt;code&gt;bar&lt;/code&gt;, with a shared variable &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">간단한 예로, 중첩 된 자식 함수를 호출하는 부모 함수 &lt;code&gt;foo&lt;/code&gt; 를 고려하십시오. &lt;code&gt;bar&lt;/code&gt; 공유 변수 &lt;var&gt;x&lt;/var&gt; 와 함께 모음 .</target>
        </trans-unit>
        <trans-unit id="f29cc37901037889138af15eb06b84a6120281cb" translate="yes" xml:space="preserve">
          <source>As a trivial example of an executable Octave script, you might create a text file named</source>
          <target state="translated">실행 가능한 Octave 스크립트의 간단한 예를 들어, 텍스트 파일을 만들 수 있습니다</target>
        </trans-unit>
        <trans-unit id="987a2d94e278347043dcf1e864584af5459d7426" translate="yes" xml:space="preserve">
          <source>As a trivial example of the use of &lt;em&gt;gplot&lt;/em&gt; consider the example,</source>
          <target state="translated">&lt;em&gt;gplot&lt;/em&gt; 사용에 대한 간단한 예를 들어,</target>
        </trans-unit>
        <trans-unit id="0ef7f30ad482324293bea5ddd1ea783efb60f8e0" translate="yes" xml:space="preserve">
          <source>As all of the mixed operators and functions between full and sparse matrices exist, in general this does not cause any problems. However, one area where it does cause a problem is where a sparse matrix is promoted to a full matrix, where subsequent operations would resparsify the matrix. Such cases are rare, but can be artificially created, for example &lt;code&gt;(fliplr (speye (3)) + speye (3)) - speye (3)&lt;/code&gt; gives a full matrix when it should give a sparse one. In general, where such cases occur, they impose only a small memory penalty.</source>
          <target state="translated">전체 행렬과 희소 행렬 사이의 모든 혼합 연산자와 함수가 존재하기 때문에 일반적으로 문제가 발생하지 않습니다. 그러나 문제를 일으키는 한 가지 영역은 희소 행렬이 전체 행렬로 승격되어 후속 작업이 행렬을 재분석하는 것입니다. 이러한 경우는 드물지만 인공적으로 생성 될 수 있습니다 &lt;code&gt;(fliplr (speye (3)) + speye (3)) - speye (3)&lt;/code&gt; 예 : (flplr (speye (3)) + speye (3))-speye (3)). 는 저밀도를 주어야 전체 매트릭스를 제공한다. 일반적으로 이러한 경우가 발생하면 작은 메모리 페널티 만 부과합니다.</target>
        </trans-unit>
        <trans-unit id="5ec435e47be535a5e7479891777d2962b2024622" translate="yes" xml:space="preserve">
          <source>As alternatives to &lt;code&gt;validateattributes&lt;/code&gt; there are several shorter convenience functions to check for individual properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d74dbc515358047da0f33d8e47e4b89affc242c" translate="yes" xml:space="preserve">
          <source>As an alternative to creating empty cell arrays, and then filling them, it is possible to convert numerical arrays into cell arrays using the &lt;code&gt;num2cell&lt;/code&gt;, &lt;code&gt;mat2cell&lt;/code&gt; and &lt;code&gt;cellslices&lt;/code&gt; functions.</source>
          <target state="translated">빈 &lt;code&gt;num2cell&lt;/code&gt; 배열을 만든 다음 채우는 대신 num2cell , &lt;code&gt;mat2cell&lt;/code&gt; 및 &lt;code&gt;cellslices&lt;/code&gt; 사용하여 숫자 형 배열을 셀형 배열로 변환 할 수 있습니다 함수를 .</target>
        </trans-unit>
        <trans-unit id="379aa916a20c78330871da39b87e0b4765e1ff6d" translate="yes" xml:space="preserve">
          <source>As an example the following code creates a 3-by-3 matrix and saves it to the file &amp;lsquo;</source>
          <target state="translated">예를 들어 다음 코드는 3x3 행렬을 만들어 파일 '</target>
        </trans-unit>
        <trans-unit id="7b07da704fff56fc5dbbf8c170487299b278b2a0" translate="yes" xml:space="preserve">
          <source>As an example the following function sets the first output argument to 1, the second to 2, and so on.</source>
          <target state="translated">예를 들어 다음 함수는 첫 번째 출력 인수를 1로 설정하고 두 번째 출력 인수를 2로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1cc9ba3f444ef5f2a70c370287d23a7b3c9d81c8" translate="yes" xml:space="preserve">
          <source>As an example,</source>
          <target state="translated">예로서,</target>
        </trans-unit>
        <trans-unit id="8781fd74ffb5a82423179e7699ae05335023ee73" translate="yes" xml:space="preserve">
          <source>As an example, the first sentence of this help text is</source>
          <target state="translated">예를 들어,이 도움말 텍스트의 첫 번째 문장은</target>
        </trans-unit>
        <trans-unit id="a6e146d6547e763a1564126ef2e5e76827e3fdcb" translate="yes" xml:space="preserve">
          <source>As an example, the following code creates a cell array containing a string and a 2-by-2 random matrix</source>
          <target state="translated">예를 들어 다음 코드는 문자열과 2x2 랜덤 행렬을 포함하는 셀형 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="4b8262ecba7c8ac34e193390f08964eaf8160da3" translate="yes" xml:space="preserve">
          <source>As an example, the following code finds the roots of the quadratic polynomial</source>
          <target state="translated">예를 들어 다음 코드는 2 차 다항식의 근을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="83a4883d1f70e4af48bb29539be1c969656831d9" translate="yes" xml:space="preserve">
          <source>As an example, the following function implements a variant of the classic &amp;ldquo;Hello, World&amp;rdquo; program.</source>
          <target state="translated">예를 들어, 다음 함수는 고전적인 &quot;Hello, World&quot;프로그램의 변형을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="8cc35a062b942448fb52571461dfcdfa78da8558" translate="yes" xml:space="preserve">
          <source>As before, the leading comments provide documentation for the class constructor. This constructor is very similar to the polynomial class constructor, except that a polynomial object is passed as the third argument to the &lt;code&gt;class&lt;/code&gt; function, telling Octave that the &lt;code&gt;FIRfilter&lt;/code&gt; class will be derived from the polynomial class. The FIR filter class itself does not have any data fields, but it must provide a struct to the &lt;code&gt;class&lt;/code&gt; function. Given that the &lt;code&gt;@polynomial&lt;/code&gt; constructor will add an element named &lt;var&gt;polynomial&lt;/var&gt; to the object struct, the &lt;code&gt;@FIRfilter&lt;/code&gt; just initializes a struct with a dummy field &lt;var&gt;polynomial&lt;/var&gt; which will later be overwritten.</source>
          <target state="translated">이전과 마찬가지로 주석은 클래스 생성자에 대한 문서를 제공합니다. 이 생성자는 다항식 객체가 &lt;code&gt;class&lt;/code&gt; 함수 의 세 번째 인수로 전달되어 옥타브에게 &lt;code&gt;FIRfilter&lt;/code&gt; 클래스가 다항식 클래스에서 파생 된다는 점을 제외하고 다항식 클래스 생성자와 매우 유사합니다 . FIR 필터 클래스 자체에는 데이터 필드가 없지만 &lt;code&gt;class&lt;/code&gt; 함수에 구조체를 제공해야합니다 . 점을 감안 &lt;code&gt;@polynomial&lt;/code&gt; 생성자라는 요소를 추가합니다 &lt;var&gt;polynomial&lt;/var&gt; 오브젝트 구조체에을의 &lt;code&gt;@FIRfilter&lt;/code&gt; 는 단지 더미 필드와 구조체 초기화 &lt;var&gt;polynomial&lt;/var&gt; 나중에 덮어 쓰게됩니다.</target>
        </trans-unit>
        <trans-unit id="ef77266db1a7e956b160d5a034980e268cc5d556" translate="yes" xml:space="preserve">
          <source>As can be seen in the example:</source>
          <target state="translated">예제에서 볼 수 있듯이</target>
        </trans-unit>
        <trans-unit id="bb51504a0135ec8118149cf2a323900588425f5a" translate="yes" xml:space="preserve">
          <source>As can be seen, floating point values are rounded to the nearest integer when converted.</source>
          <target state="translated">보다시피, 부동 소수점 값은 변환 될 때 가장 가까운 정수로 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="951e6deb900be2bc2c48a839c097a70a85f60b8a" translate="yes" xml:space="preserve">
          <source>As can be seen, the &lt;a href=&quot;object-sizes#XREFsize&quot;&gt;size&lt;/a&gt; function also works for cell arrays. As do other functions describing the size of an object, such as &lt;a href=&quot;object-sizes#XREFlength&quot;&gt;length&lt;/a&gt;, &lt;a href=&quot;object-sizes#XREFnumel&quot;&gt;numel&lt;/a&gt;, &lt;a href=&quot;object-sizes#XREFrows&quot;&gt;rows&lt;/a&gt;, and &lt;a href=&quot;object-sizes#XREFcolumns&quot;&gt;columns&lt;/a&gt;.</source>
          <target state="translated">알 수 있듯이 &lt;a href=&quot;object-sizes#XREFsize&quot;&gt;size&lt;/a&gt; 함수는 셀형 배열에도 적용됩니다. &lt;a href=&quot;object-sizes#XREFlength&quot;&gt;length&lt;/a&gt; , &lt;a href=&quot;object-sizes#XREFnumel&quot;&gt;numel&lt;/a&gt; , &lt;a href=&quot;object-sizes#XREFrows&quot;&gt;rows&lt;/a&gt; 및 &lt;a href=&quot;object-sizes#XREFcolumns&quot;&gt;columns&lt;/a&gt; 와 같은 객체의 크기를 설명하는 다른 함수와 마찬가지로 .</target>
        </trans-unit>
        <trans-unit id="8ad090857abf167623bfedd4c309920b078b23d1" translate="yes" xml:space="preserve">
          <source>As discussed in the chapter on Sparse Matrices, the values of the sparse matrix are stored in increasing column-major ordering. Although the data passed by the user need not respect this requirement, pre-sorting the data will significantly speed up creation of the sparse matrix.</source>
          <target state="translated">희소 행렬에 관한 장에서 논의 된 바와 같이, 희소 행렬의 값은 증가하는 열 주요 순서로 저장됩니다. 사용자가 전달한 데이터가이 요구 사항을 준수 할 필요는 없지만 데이터를 미리 정렬하면 희소 행렬의 생성 속도가 크게 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="b05f183977f05cc10b2363b5caf182097847fbac" translate="yes" xml:space="preserve">
          <source>As for struct arrays and numerical arrays, the empty matrix &amp;lsquo;</source>
          <target state="translated">구조체 배열과 숫자 배열은 빈 행렬 '</target>
        </trans-unit>
        <trans-unit id="5515685ad20e9e32a72430b92df394f9069c45d3" translate="yes" xml:space="preserve">
          <source>As has been already said, diagonal and permutation matrices make it possible to use efficient algorithms while preserving natural linear algebra syntax. This section describes in detail the operations that are treated specially when performed on these special matrix objects.</source>
          <target state="translated">이미 언급했듯이 대각선 및 순열 행렬을 사용하면 자연스러운 선형 대수 구문을 유지하면서 효율적인 알고리즘을 사용할 수 있습니다. 이 섹션에서는 이러한 특수 행렬 객체에서 수행 될 때 특별히 처리되는 작업에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8563818455d8e7fee883f075fb938f0a421a6fe6" translate="yes" xml:space="preserve">
          <source>As has been mentioned above (see &lt;a href=&quot;indexing-cell-arrays#Indexing-Cell-Arrays&quot;&gt;Indexing Cell Arrays&lt;/a&gt;), elements of a cell array can be extracted into a comma separated list with the &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; operators. By surrounding this list with &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;, it can be concatenated into an array. For example:</source>
          <target state="translated">위에서 언급했듯이 ( &lt;a href=&quot;indexing-cell-arrays#Indexing-Cell-Arrays&quot;&gt;셀 배열 인덱싱&lt;/a&gt; 참조 ) 셀 배열의 요소는 &lt;code&gt;{&lt;/code&gt; 및 &lt;code&gt;}&lt;/code&gt; 연산자 를 사용하여 쉼표로 구분 된 목록으로 추출 할 수 있습니다 . 이 목록을 &lt;code&gt;[&lt;/code&gt; 및 &lt;code&gt;]&lt;/code&gt; 로 묶으면 배열로 연결될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d8065d12669ae3cf310f671a0e8017f4d4d84ca5" translate="yes" xml:space="preserve">
          <source>As in form 2 above, but allows ordering of generalized eigenpairs for, e.g., solution of discrete time algebraic Riccati equations. Form 3 is not available for complex matrices, and does not compute the generalized eigenvectors &lt;var&gt;V&lt;/var&gt;, &lt;var&gt;W&lt;/var&gt;, nor the orthogonal matrix &lt;var&gt;Q&lt;/var&gt;.</source>
          <target state="translated">상기 형태 2에서와 같이, 예를 들어 이산 시간 대수 리카 티 방정식의 해에 대한 일반 고유 쌍의 순서를 허용한다. 형식 3은 복잡한 행렬에 사용할 수 없으며 일반화 된 고유 벡터 &lt;var&gt;V&lt;/var&gt; , &lt;var&gt;W&lt;/var&gt; 또는 직교 행렬 &lt;var&gt;Q&lt;/var&gt; 를 계산하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8109571f660c3a1b3b14c6ffc15c030649b059cd" translate="yes" xml:space="preserve">
          <source>As mentioned before, method and constructor parameters are converted automatically between Octave and Java types, if appropriate. For functions this is also true with return values, whereas for constructors this is not.</source>
          <target state="translated">앞에서 언급했듯이 메소드 및 생성자 매개 변수는 적절한 경우 Octave와 Java 유형간에 자동으로 변환됩니다. 함수의 경우 반환 값에서도 마찬가지이지만 생성자의 경우 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="83ad02a5a78c66e6c9c4352b3dace5b9a3aab261" translate="yes" xml:space="preserve">
          <source>As mex-files do not make the distinction between single and double quoted strings that Octave does, there is perhaps less complexity in the use of strings and character matrices. An example of their use that parallels the demo in</source>
          <target state="translated">Mex 파일은 Octave와 같이 작은 따옴표와 큰 따옴표로 묶인 문자열을 구분하지 않으므로 문자열과 문자 매트릭스를 사용하는 데 복잡성이 적습니다. 데모와 유사한 사용 예</target>
        </trans-unit>
        <trans-unit id="3989ecc58210427e176a5c4bca0e9ce6297d4176" translate="yes" xml:space="preserve">
          <source>As run-time measurement of the algorithm can be expensive, this is a compromise where &lt;code&gt;&quot;measure&quot;&lt;/code&gt; is used for transforms up to the size of 8192 and beyond that the &lt;code&gt;&quot;estimate&quot;&lt;/code&gt; method is used.</source>
          <target state="translated">알고리즘의 런타임 측정은 비용이 많이들 수 있기 때문에 이는 &lt;code&gt;&quot;measure&quot;&lt;/code&gt; 이 최대 8192의 크기로 변환되고 &lt;code&gt;&quot;estimate&quot;&lt;/code&gt; 초과하는 경우에 &quot;측정&quot; 이 사용되는 절충안입니다. 방법이 사용되는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="5b971e6a2999aebf3e2ceb0c7d0b5ccbfc39ee02" translate="yes" xml:space="preserve">
          <source>As shown in see &lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;Basic Usage of Cell Arrays&lt;/a&gt; elements can be extracted from cell arrays using the &amp;lsquo;</source>
          <target state="translated">&lt;a href=&quot;basic-usage-of-cell-arrays#Basic-Usage-of-Cell-Arrays&quot;&gt;셀 배열의 기본 사용법을&lt;/a&gt; 참조하십시오 . '를 사용하여 셀 배열에서 요소를 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1344418f2df1ee3d5e1b95eda82961e19d5fd03" translate="yes" xml:space="preserve">
          <source>As the example shows, a variable may be declared persistent using a &lt;code&gt;persistent&lt;/code&gt; declaration statement. The following statements are all persistent declarations.</source>
          <target state="translated">예제에서 볼 수 있듯이 변수는 영속성을 사용하여 &lt;code&gt;persistent&lt;/code&gt; 으로 선언 될 수 있습니다 선언문을 선언 . 다음은 모두 영구 선언입니다.</target>
        </trans-unit>
        <trans-unit id="52ff63ef2fe86f645fff04de5bf44d5bb07a7b55" translate="yes" xml:space="preserve">
          <source>As the matrix &lt;var&gt;s&lt;/var&gt; is symmetric indefinite it can be factorized with &lt;code&gt;lu&lt;/code&gt;, and the minimum norm solution can therefore be found without the need for a &lt;code&gt;qr&lt;/code&gt; factorization. As the residual error will be &lt;code&gt;zeros (&lt;var&gt;m&lt;/var&gt;, &lt;var&gt;m&lt;/var&gt;)&lt;/code&gt; for underdetermined problems, and example can be</source>
          <target state="translated">행렬 &lt;var&gt;s&lt;/var&gt; 는 무한대 대칭이므로 &lt;code&gt;lu&lt;/code&gt; 로 인수 분해 할 수 있으므로 &lt;code&gt;qr&lt;/code&gt; 인수 분해 없이도 최소 표준 솔루션을 찾을 수 있습니다 . 잔차 오차가 &lt;code&gt;zeros (&lt;var&gt;m&lt;/var&gt;, &lt;var&gt;m&lt;/var&gt;)&lt;/code&gt; 불확실한 문제의 이므로 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5fed57584402eae9a5ca127620d2ea585be8c82" translate="yes" xml:space="preserve">
          <source>As the maximum value that can be represented by a number is important for bit manipulation, particularly when forming masks, Octave supplies two utility functions: &lt;code&gt;flintmax&lt;/code&gt; for floating point integers, and &lt;code&gt;intmax&lt;/code&gt; for integer objects (&lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, etc.).</source>
          <target state="translated">숫자로 표현 될 수있는 최대 값은, 비트 조작 중요하다 마스크를 형성 할 때, 특히, 옥타브 개의 유틸리티 함수 공급 같이 &lt;code&gt;flintmax&lt;/code&gt; 부동 소수점 정수 용 및 &lt;code&gt;intmax&lt;/code&gt; 정수 개체 (대 &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 등).</target>
        </trans-unit>
        <trans-unit id="004a63bcbd1917bb95c20299c83a11a6f5543261" translate="yes" xml:space="preserve">
          <source>As with all other specific &lt;code&gt;end&lt;/code&gt; keywords, &lt;code&gt;endswitch&lt;/code&gt; may be replaced by &lt;code&gt;end&lt;/code&gt;, but you can get better diagnostics if you use the specific forms.</source>
          <target state="translated">다른 모든 특정 &lt;code&gt;end&lt;/code&gt; 키워드 와 마찬가지로 종료 &lt;code&gt;endswitch&lt;/code&gt; 는 &lt;code&gt;end&lt;/code&gt; 로 대체 될 수 있습니다 있지만 특정 양식을 사용하면 더 나은 진단을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7beeea040a3fdcaf58f04dd8cf4a4b4bad772bc9" translate="yes" xml:space="preserve">
          <source>As with numerical arrays several elements of a cell array can be extracted by indexing with a vector of indexes</source>
          <target state="translated">숫자 형 배열과 마찬가지로 인덱스 벡터로 색인을 생성하여 셀형 배열의 여러 요소를 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30037aa3f29274ac3c5a68a87b1c28efd3ffd30d" translate="yes" xml:space="preserve">
          <source>As with subfunctions, only the first nested function in a file may be called from the outside. Inside a function the rules are more complicated. In general a nested function may call:</source>
          <target state="translated">하위 기능과 마찬가지로 파일의 첫 번째 중첩 함수 만 외부에서 호출 할 수 있습니다. 함수 안에서 규칙은 더 복잡합니다. 일반적으로 중첩 함수는 다음을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2911d4f8ac8d2b9cc855ef63de94b8204fe9e01b" translate="yes" xml:space="preserve">
          <source>As with the &amp;lsquo;</source>
          <target state="translated">'와 마찬가지로</target>
        </trans-unit>
        <trans-unit id="6b4ffb649f660d620e5f4267e473537468861ee4" translate="yes" xml:space="preserve">
          <source>As you can see in the table below, now we have both profiles mixed together.</source>
          <target state="translated">아래 표에서 볼 수 있듯이 이제 두 프로필이 혼합되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec2350003bc172557bf248c9cdfb5600698542b9" translate="yes" xml:space="preserve">
          <source>Ask the user a yes-or-no question.</source>
          <target state="translated">사용자에게 예 또는 아니오 질문을합니다.</target>
        </trans-unit>
        <trans-unit id="531353464a67c31ead2961c722aaed6b017db968" translate="yes" xml:space="preserve">
          <source>Aspect Ratio</source>
          <target state="translated">종횡비</target>
        </trans-unit>
        <trans-unit id="a306c153c190c90e2673adae89cd26c750e56db2" translate="yes" xml:space="preserve">
          <source>Assign &lt;var&gt;value&lt;/var&gt; to &lt;var&gt;varname&lt;/var&gt; in context &lt;var&gt;context&lt;/var&gt;, which may be either &lt;code&gt;&quot;base&quot;&lt;/code&gt; or &lt;code&gt;&quot;caller&quot;&lt;/code&gt;.</source>
          <target state="translated">할당 &lt;var&gt;value&lt;/var&gt; 에 &lt;var&gt;varname&lt;/var&gt; 문맥에서 &lt;var&gt;context&lt;/var&gt; 이어도, &lt;code&gt;&quot;base&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;caller&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fd686cd9d6a1f044e1fb6823c1198d0fd31e1c0" translate="yes" xml:space="preserve">
          <source>Assign the next lowest unused integer as the Figure number.</source>
          <target state="translated">사용되지 않은 다음으로 가장 낮은 정수를 숫자로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ca57d608b20067757de8d38388702587d3d125a7" translate="yes" xml:space="preserve">
          <source>Assigning an empty matrix &amp;lsquo;</source>
          <target state="translated">빈 행렬 할당</target>
        </trans-unit>
        <trans-unit id="189a360acd54a816d97440bd5b81415301add5c9" translate="yes" xml:space="preserve">
          <source>Assigning an object of that class to another variable essentially creates a new object:</source>
          <target state="translated">해당 클래스의 객체를 다른 변수에 할당하면 본질적으로 새로운 객체가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6cd6e2e234bfd5cae202f1db73fd1b75ebb021d4" translate="yes" xml:space="preserve">
          <source>Assignment Expressions</source>
          <target state="translated">할당 식</target>
        </trans-unit>
        <trans-unit id="cc0f1fc15c1c09c7dd76f2ac6a4133ca9c6cebce" translate="yes" xml:space="preserve">
          <source>Assignment Ops</source>
          <target state="translated">배정 작전</target>
        </trans-unit>
        <trans-unit id="03d091b0430c54456baa7987eab19ac12846440b" translate="yes" xml:space="preserve">
          <source>Assignment of a scalar to an indexed matrix sets all of the elements that are referenced by the indices to the scalar value. For example, if &lt;code&gt;a&lt;/code&gt; is a matrix with at least two columns,</source>
          <target state="translated">스칼라를 인덱스 행렬에 할당하면 인덱스에서 참조하는 모든 요소가 스칼라 값으로 설정됩니다. 예를 들어, &lt;code&gt;a&lt;/code&gt; 가 2 개 이상의 열이있는 행렬 인 경우 ,</target>
        </trans-unit>
        <trans-unit id="f2d1ffae68fd99613a8c968ea146c836d4a790ae" translate="yes" xml:space="preserve">
          <source>Assignments can store string values also. For example, the following expression would store the value &lt;code&gt;&quot;this food is good&quot;&lt;/code&gt; in the variable &lt;code&gt;message&lt;/code&gt;:</source>
          <target state="translated">할당은 문자열 값도 저장할 수 있습니다. 예를 들어 다음 표현식은 변수 &lt;code&gt;message&lt;/code&gt; 에 &lt;code&gt;&quot;this food is good&quot;&lt;/code&gt; 값을 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="7540b4571015a49362deccfc856f6dcba31b5caa" translate="yes" xml:space="preserve">
          <source>Assume &lt;var&gt;D&lt;/var&gt; is a diagonal matrix. If &lt;var&gt;M&lt;/var&gt; is a full matrix, then &lt;code&gt;D*M&lt;/code&gt; will scale the rows of &lt;var&gt;M&lt;/var&gt;. That means, if &lt;code&gt;S = D*M&lt;/code&gt;, then for each pair of indices i,j it holds</source>
          <target state="translated">&lt;var&gt;D&lt;/var&gt; 가 대각 행렬 이라고 가정합니다 . 경우 &lt;var&gt;M&lt;/var&gt; 은 전체 행렬이고, 다음 &lt;code&gt;D*M&lt;/code&gt; 의 열 확장 할 수 &lt;var&gt;M&lt;/var&gt; 을 . 즉, &lt;code&gt;S = D*M&lt;/code&gt; 이면 이면 각 인덱스 쌍 i, j에 대해</target>
        </trans-unit>
        <trans-unit id="3b7b9da2443e1642f6cb527f563ed76edd29fbbc" translate="yes" xml:space="preserve">
          <source>Assume creation of a MEX file. Set the default output extension to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65fbe94af9801d238e23d6ca5e58cfd5ae7c1a3" translate="yes" xml:space="preserve">
          <source>Assume we are creating a MEX file. Set the default output extension to &quot;.mex&quot;.</source>
          <target state="translated">MEX 파일을 작성한다고 가정하십시오. 기본 출력 확장자를 &quot;.mex&quot;로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ec9215947e20c196f3797afb25e4e824ce1f8a38" translate="yes" xml:space="preserve">
          <source>Assuming &lt;var&gt;data&lt;/var&gt; is the structure with profile data returned by &lt;code&gt;profile (&lt;code&gt;&quot;info&quot;&lt;/code&gt;)&lt;/code&gt;, this command opens an interactive prompt that can be used to explore the call-tree. Type</source>
          <target state="translated">&lt;var&gt;data&lt;/var&gt; 가 &lt;code&gt;profile (&lt;code&gt;&quot;info&quot;&lt;/code&gt;)&lt;/code&gt; 의해 리턴 된 프로파일 데이터 가있는 구조 라고 가정하면 이 명령은 호출 트리를 탐색하는 데 사용할 수있는 대화식 프롬프트를 엽니 다. 유형</target>
        </trans-unit>
        <trans-unit id="f2ebba349727e4c4f6b8ebc85273cbce8485acce" translate="yes" xml:space="preserve">
          <source>Assuming a package is available in the file</source>
          <target state="translated">패키지가 파일에서 사용 가능하다고 가정</target>
        </trans-unit>
        <trans-unit id="907707adf71d7f167381e8aa25ed55b4a31f509f" translate="yes" xml:space="preserve">
          <source>Assuming one of the two versions is in xcorr_orig, this would compare their speed and their output values. Note that the FFT version is not exact, so one must specify an acceptable tolerance on the comparison &lt;code&gt;100*eps&lt;/code&gt;. In this case, the comparison should be computed relatively, as &lt;code&gt;abs ((&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;) ./ &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; rather than absolutely as &lt;code&gt;abs (&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">두 버전 중 하나가 xcorr_orig에 있다고 가정하면 속도와 출력 값을 비교합니다. FFT 버전은 정확하지 않으므로 &lt;code&gt;100*eps&lt;/code&gt; 비교에서 허용 가능한 공차를 지정해야합니다 . 이 경우 비교는 절대적으로 &lt;code&gt;abs (&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; &lt;code&gt;abs ((&lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt;) ./ &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 아닌 abs &lt;var&gt;x&lt;/var&gt; - &lt;var&gt;y&lt;/var&gt; )가.</target>
        </trans-unit>
        <trans-unit id="659d6578c4bbe51b3949d9acadfb353fbc527198" translate="yes" xml:space="preserve">
          <source>Asymptotic expansions of integrals</source>
          <target state="translated">적분의 점근 확장</target>
        </trans-unit>
        <trans-unit id="489e70109e67cf9da0e282567e7dfa75ecfec0d5" translate="yes" xml:space="preserve">
          <source>Asynchronous I/O.</source>
          <target state="translated">비동기 I / O</target>
        </trans-unit>
        <trans-unit id="dc391cc3f13c2d1ba43b1d05210efcc2205b3c63" translate="yes" xml:space="preserve">
          <source>At boundary points a linear extrapolation is applied. Interior points are calculated with the first approximation of the numerical gradient</source>
          <target state="translated">경계점에서 선형 외삽 법이 적용됩니다. 내부 점은 숫자 구배의 첫 번째 근사값으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="e09e4cfa5c6d67d985bdecbc93e768bedc36c136" translate="yes" xml:space="preserve">
          <source>At the Octave prompt, you can recall, edit, and reissue previous commands using Emacs- or vi-style editing commands. The default keybindings use Emacs-style commands. For example, to recall the previous command, press</source>
          <target state="translated">옥타브 프롬프트에서 Emacs 또는 vi 스타일 편집 명령을 사용하여 이전 명령을 호출, 편집 및 재발행 할 수 있습니다. 기본 키 바인딩은 Emacs 스타일 명령을 사용합니다. 예를 들어, 이전 명령을 불러 오려면</target>
        </trans-unit>
        <trans-unit id="1ba0ebd253393b46f7f37dd3cb7b73c7ba2bd295" translate="yes" xml:space="preserve">
          <source>Attempt to do completion on the text before the cursor. Octave can complete the names of commands and variables.</source>
          <target state="translated">커서 앞의 텍스트를 완료하려고합니다. 옥타브는 명령과 변수의 이름을 완성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc9a688c50df2134fab59236d1d7d6111fd51b6d" translate="yes" xml:space="preserve">
          <source>Attr</source>
          <target state="translated">Attr</target>
        </trans-unit>
        <trans-unit id="e71a2208ed5bc70195d4f4557e27c46db0f46753" translate="yes" xml:space="preserve">
          <source>Attributes of the listed variable. Possible attributes are:</source>
          <target state="translated">나열된 변수의 속성 가능한 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6112bb3d4f536eeddaffe62936110e516b6dc2d4" translate="yes" xml:space="preserve">
          <source>Audio Data Processing</source>
          <target state="translated">오디오 데이터 처리</target>
        </trans-unit>
        <trans-unit id="d0173f060cb84f63aa0413b729d6ffc2add577da" translate="yes" xml:space="preserve">
          <source>Audio Device Information</source>
          <target state="translated">오디오 장치 정보</target>
        </trans-unit>
        <trans-unit id="080f79316949a9e07dc0883ac20f46acd6e0a11f" translate="yes" xml:space="preserve">
          <source>Audio File Utilities</source>
          <target state="translated">오디오 파일 유틸리티</target>
        </trans-unit>
        <trans-unit id="d1a38ff5778dfebcee2d83b7a439ca8af36cf609" translate="yes" xml:space="preserve">
          <source>Audio Player</source>
          <target state="translated">오디오 플레이어</target>
        </trans-unit>
        <trans-unit id="71d679f85c0c8c94a04689538a1ebabad48f5f78" translate="yes" xml:space="preserve">
          <source>Audio Processing</source>
          <target state="translated">오디오 프로세싱</target>
        </trans-unit>
        <trans-unit id="b617b95518631fb1c6bd28a5dbb483e86328deed" translate="yes" xml:space="preserve">
          <source>Audio Recorder</source>
          <target state="translated">오디오 레코더</target>
        </trans-unit>
        <trans-unit id="090dd204be937031f0583112c2868975f6ec34fb" translate="yes" xml:space="preserve">
          <source>Audio bit rate. Unused, only present for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="translated">오디오 비트 레이트. 미사용, &lt;small&gt;MATLAB&lt;/small&gt; 과의 호환성을 위해서만 제공&lt;small&gt;&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="966e1c01b68c2a16eb1aa2d30f83acb9d15ba557" translate="yes" xml:space="preserve">
          <source>Audio compression method. Unused, only present for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="translated">오디오 압축 방법. 미사용, &lt;small&gt;MATLAB&lt;/small&gt; 과의 호환성을 위해서만 제공&lt;small&gt;&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="b04aeef845e3861638e504adcb4f668cf12abe2a" translate="yes" xml:space="preserve">
          <source>AutoCAD</source>
          <target state="translated">AutoCAD</target>
        </trans-unit>
        <trans-unit id="b01b9fec9455ce34ab215dbec35d30eb12df4dcf" translate="yes" xml:space="preserve">
          <source>AutoScaling</source>
          <target state="translated">AutoScaling</target>
        </trans-unit>
        <trans-unit id="b7c5b72aa8a6927d492531b41a0e0c02361f3f2e" translate="yes" xml:space="preserve">
          <source>Autoconf</source>
          <target state="translated">Autoconf</target>
        </trans-unit>
        <trans-unit id="5c63f189bfa4620322275fe623ef650118078ebf" translate="yes" xml:space="preserve">
          <source>Autoload function A function that is marked as autoloaded with See &lt;a href=&quot;overloading-and-autoloading#XREFautoload&quot;&gt;autoload&lt;/a&gt;.</source>
          <target state="translated">참조로 자동으로 적재로 표시되어 자동로드 기능 A 기능 &lt;a href=&quot;overloading-and-autoloading#XREFautoload&quot;&gt;자동로드&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3421d4a78809d07993dde32b7c98e16e2ccaec4" translate="yes" xml:space="preserve">
          <source>Automake</source>
          <target state="translated">Automake</target>
        </trans-unit>
        <trans-unit id="d7ff22d92e3a987c11769ecfc151156e0cecc1e3" translate="yes" xml:space="preserve">
          <source>Automatic Variable: ans</source>
          <target state="translated">자동 변수 : ans</target>
        </trans-unit>
        <trans-unit id="fd5bc0d1730bfbb7199bbd6f0496869d55478ae4" translate="yes" xml:space="preserve">
          <source>Automatic variable. An automatic variable is one created by the interpreter, for example &lt;code&gt;argn&lt;/code&gt;.</source>
          <target state="translated">자동 변수. 자동 변수는 인터프리터가 만든 변수입니다 (예 : &lt;code&gt;argn&lt;/code&gt; ). .</target>
        </trans-unit>
        <trans-unit id="83e2fa299a5fe4eca74b46c1ef20ea54fac2731a" translate="yes" xml:space="preserve">
          <source>Available commands:</source>
          <target state="translated">사용 가능한 명령 :</target>
        </trans-unit>
        <trans-unit id="50394b9343099c6412f9782fe8989b9e0006bf6a" translate="yes" xml:space="preserve">
          <source>Avoid calling &lt;code&gt;eval&lt;/code&gt; or &lt;code&gt;feval&lt;/code&gt; excessively. Parsing input or looking up the name of a function in the symbol table are relatively expensive operations.</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; 또는 &lt;code&gt;feval&lt;/code&gt; 을 과도하게 호출하지 마십시오 . 기호 테이블에서 입력을 구문 분석하거나 함수 이름을 찾는 것은 비교적 비싼 작업입니다.</target>
        </trans-unit>
        <trans-unit id="ff8112ba81d3bb955ad3f67e3515c7357c915ffc" translate="yes" xml:space="preserve">
          <source>Avoid computing costly intermediate results multiple times. Octave currently does not eliminate common subexpressions. Also, certain internal computation results are cached for variables. For instance, if a matrix variable is used multiple times as an index, checking the indices (and internal conversion to integers) is only done once.</source>
          <target state="translated">값 비싼 중간 결과를 여러 번 계산하지 마십시오. 옥타브는 현재 일반적인 하위 표현식을 제거하지 않습니다. 또한 특정 내부 계산 결과는 변수에 대해 캐시됩니다. 예를 들어, 행렬 변수가 인덱스로 여러 번 사용되는 경우 인덱스 검사 (및 정수로 내부 변환)는 한 번만 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="472cff45d0b0c70e9519038fcbd6de38a9f430c9" translate="yes" xml:space="preserve">
          <source>Avoid deep recursion. Function calls to m-file functions carry a relatively significant overhead, so rewriting a recursion as a loop often helps. Also, note that the maximum level of recursion is limited.</source>
          <target state="translated">깊은 재귀를 피하십시오. m-file 함수에 대한 함수 호출은 상대적으로 상당한 오버 헤드를 전달하므로 루프를 자주 재귀로 작성하면 도움이됩니다. 또한 최대 재귀 수준이 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0556ca1d709248ee926a8bec8dc3258822f05cca" translate="yes" xml:space="preserve">
          <source>Avoid resizing matrices unnecessarily. When building a single result matrix from a series of calculations, set the size of the result matrix first, then insert values into it. Write</source>
          <target state="translated">불필요하게 행렬 크기를 조정하지 마십시오. 일련의 계산에서 단일 결과 행렬을 작성할 때 먼저 결과 행렬의 크기를 설정 한 다음 값을 삽입하십시오. 쓰다</target>
        </trans-unit>
        <trans-unit id="c103ede19b013bb4a32e10aaa64c58a55fa93a1e" translate="yes" xml:space="preserve">
          <source>Axes NextPlot</source>
          <target state="translated">축 NextPlot</target>
        </trans-unit>
        <trans-unit id="7de316d49deb5ccab36aebd65a0be58a16c62a1a" translate="yes" xml:space="preserve">
          <source>Axes Properties</source>
          <target state="translated">축 속성</target>
        </trans-unit>
        <trans-unit id="0dc0548be57f1a671655372582948b6ecb8792e2" translate="yes" xml:space="preserve">
          <source>Axis Configuration</source>
          <target state="translated">축 구성</target>
        </trans-unit>
        <trans-unit id="dd3b5cebd43f7c9a1446a99cde28692621195356" translate="yes" xml:space="preserve">
          <source>A~spaces.txt</source>
          <target state="translated">A~spaces.txt</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="9fc88ae6272f67a869d2dbb01436ad99b0ba5b02" translate="yes" xml:space="preserve">
          <source>B = rescale (&amp;hellip;, &quot;inputmax&quot;, inmax)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3359712613ab7d5863c2affed6709d9b7e9fd783" translate="yes" xml:space="preserve">
          <source>B = rescale (&amp;hellip;, &quot;inputmin&quot;, inmin)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c463d6c5fd9704a3bb08ecbeb44cdcee883745ab" translate="yes" xml:space="preserve">
          <source>B = rescale (A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10685ffbb9b9ccc7d09ac0ef06cdb0ab690e1ec3" translate="yes" xml:space="preserve">
          <source>B = rescale (A, l, u)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c70185da8e36a4190565c01ff3c846d72ed5de" translate="yes" xml:space="preserve">
          <source>B = spdiags (A)</source>
          <target state="translated">B = 스피디 아스 (A)</target>
        </trans-unit>
        <trans-unit id="a08d8c4286c3416e30d8afcaa554bc33cf5bcc2e" translate="yes" xml:space="preserve">
          <source>B = spdiags (A, d)</source>
          <target state="translated">B = 스피디 아스 (A, d)</target>
        </trans-unit>
        <trans-unit id="ffdd9097b8d95cfcaa4687dc68aba4f8af1b5829" translate="yes" xml:space="preserve">
          <source>B.1 Test Functions</source>
          <target state="translated">B.1 시험 기능</target>
        </trans-unit>
        <trans-unit id="b6d102d7fc931aaf9968a1bf73fea9155bd264c7" translate="yes" xml:space="preserve">
          <source>B.2 Demonstration Functions</source>
          <target state="translated">B.2 데모 기능</target>
        </trans-unit>
        <trans-unit id="fcdb4dba5c8e978271b1486512050573279d7d90" translate="yes" xml:space="preserve">
          <source>BACKSPACE</source>
          <target state="translated">BACKSPACE</target>
        </trans-unit>
        <trans-unit id="7067ed76949bf39af33598b214b1f9a97c9257df" translate="yes" xml:space="preserve">
          <source>BDemonstration Functions</source>
          <target state="translated">BDemonstration 기능</target>
        </trans-unit>
        <trans-unit id="c7243d04c977df0309eee7b50ccaddc2665154ee" translate="yes" xml:space="preserve">
          <source>BLAS</source>
          <target state="translated">BLAS</target>
        </trans-unit>
        <trans-unit id="62d5aeef9ec51abb2a106e7d794566b651ddbe62" translate="yes" xml:space="preserve">
          <source>BSD-style license without advertising clause.</source>
          <target state="translated">광고 조항이없는 BSD 스타일 라이센스.</target>
        </trans-unit>
        <trans-unit id="4db3729812553d37ad47bfa7e32aa86c887a9a40" translate="yes" xml:space="preserve">
          <source>BTest Functions</source>
          <target state="translated">B 테스트 기능</target>
        </trans-unit>
        <trans-unit id="726c946b4e4b045dde2893b0fca04a81b3904c76" translate="yes" xml:space="preserve">
          <source>Background Information: This function is called by an ode solver function if it was specified in the &lt;code&gt;&quot;OutputFcn&quot;&lt;/code&gt; property of an options structure created with &lt;code&gt;odeset&lt;/code&gt;. The ode solver will initially call the function with the syntax &lt;code&gt;odeplot ([&lt;var&gt;tfirst&lt;/var&gt;, &lt;var&gt;tlast&lt;/var&gt;], &lt;var&gt;y0&lt;/var&gt;, &quot;init&quot;)&lt;/code&gt;. The function initializes internal variables, creates a new figure window, and sets the x limits of the plot. Subsequently, at each time step during the integration the ode solver calls &lt;code&gt;odeplot (&lt;var&gt;t&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, [])&lt;/code&gt;. At the end of the solution the ode solver calls &lt;code&gt;odeplot ([], [], &quot;done&quot;)&lt;/code&gt; so that odeplot can perform any clean-up actions required.</source>
          <target state="translated">배경 정보 :이 함수는 &lt;code&gt;odeset&lt;/code&gt; 으로 작성된 옵션 구조 의 &lt;code&gt;&quot;OutputFcn&quot;&lt;/code&gt; 특성에 지정된 경우 ode 솔버 함수에 의해 호출됩니다 . ODE 솔버 처음 구문과 함수 호출 &lt;code&gt;odeplot ([&lt;var&gt;tfirst&lt;/var&gt;, &lt;var&gt;tlast&lt;/var&gt;], &lt;var&gt;y0&lt;/var&gt;, &quot;init&quot;)&lt;/code&gt; &lt;var&gt;tfirst&lt;/var&gt; , &lt;var&gt;tlast&lt;/var&gt; , &lt;var&gt;y0&lt;/var&gt; , &quot;초기화&quot;) . 이 함수는 내부 변수를 초기화하고 새 Figure 창을 만들고 플롯의 x 한계를 설정합니다. 이어서, 적분 동안 각 시간 단계에서, ode 솔버는 &lt;code&gt;odeplot (&lt;var&gt;t&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, [])&lt;/code&gt; &lt;var&gt;t&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; , [])을 호출합니다 . 솔루션의 끝에서 Ode 솔버는 &lt;code&gt;odeplot ([], [], &quot;done&quot;)&lt;/code&gt; 호출합니다. 을 호출하여 odeplot이 필요한 정리 조치를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ecc6ca439d6c5e58174068ccc0bd9b416174b53" translate="yes" xml:space="preserve">
          <source>Background: A matrix is Hermitian if the complex conjugate transpose of the matrix is equal to the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt;. If a tolerance is given then the calculation is &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">배경 : 행렬의 복소 공액 전치가 원래 행렬과 같으면 행렬은 에르 미트입니다 : &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;'&lt;/code&gt; . 공차가 주어지면 계산은 &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="67c3a16132d003dc408b34c6ab620faee5509e26" translate="yes" xml:space="preserve">
          <source>Background: A matrix is symmetric if the transpose of the matrix is equal to the original matrix: &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt;. If a tolerance is given then symmetry is determined by &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">배경 : 행렬의 전치 행렬이 원래 행렬과 동일하면 행렬은 대칭입니다. &lt;code&gt;&lt;var&gt;A&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;A&lt;/var&gt;.'&lt;/code&gt; . 공차가 주어지면 대칭은 &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt; - &lt;var&gt;A&lt;/var&gt;.', Inf) / norm (&lt;var&gt;A&lt;/var&gt;, Inf) &amp;lt; &lt;var&gt;tol&lt;/var&gt;&lt;/code&gt; 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="525fc4c444936301ffe7b85e39191ca3a8af59a9" translate="yes" xml:space="preserve">
          <source>Background: A positive definite matrix has eigenvalues which are all greater than zero. A positive semi-definite matrix has eigenvalues which are all greater than or equal to zero. The matrix &lt;var&gt;A&lt;/var&gt; is very likely to be positive semi-definite if the following two conditions hold for a suitably small tolerance &lt;var&gt;tol&lt;/var&gt;.</source>
          <target state="translated">배경 : 양의 한정 행렬에는 고유 값이 모두 0보다 큽니다. 양의 반 정규 행렬에는 고유 값이 모두 0보다 크거나 같습니다. 다음 두 가지 조건이 적합하게 작은 공차 &lt;var&gt;tol&lt;/var&gt; 을 유지하는 경우 행렬 &lt;var&gt;A&lt;/var&gt; 는 양의 반정의 일 가능성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="2f8b7aa251aa0adb65af89ded753ff22c8abf8b2" translate="yes" xml:space="preserve">
          <source>Background: Array elements can be specified either by a linear index which starts at 1 and runs through the number of elements in the array, or they may be specified with subscripts for the row, column, page, etc. The functions &lt;code&gt;ind2sub&lt;/code&gt; and &lt;code&gt;sub2ind&lt;/code&gt; interconvert between the two forms.</source>
          <target state="translated">배경 : 배열 요소는 1에서 시작하여 배열의 요소 수를 통해 실행되는 선형 인덱스로 지정하거나 행, 열, 페이지 등의 첨자로 지정할 수 있습니다. &lt;code&gt;ind2sub&lt;/code&gt; 및 &lt;code&gt;sub2ind&lt;/code&gt; 상호 변환 함수 두 형태 사이.</target>
        </trans-unit>
        <trans-unit id="8a072b76d13bf1b21aef3b62c0c5a52ce4df96e5" translate="yes" xml:space="preserve">
          <source>Background: The QR factorization has applications in the solution of least squares problems</source>
          <target state="translated">배경 : QR 분해에는 최소 제곱 문제를 해결하는 데 응용 프로그램이 있습니다.</target>
        </trans-unit>
        <trans-unit id="375e6cef116c18815d1f3cc43298cfb82ef22dc2" translate="yes" xml:space="preserve">
          <source>Backtracking technique option (for MIP only):</source>
          <target state="translated">역 추적 기술 옵션 (MIP에만 해당) :</target>
        </trans-unit>
        <trans-unit id="9c63fe664ee19ec45f508543d1a17026f2d840be" translate="yes" xml:space="preserve">
          <source>Balance the matrix &lt;var&gt;A&lt;/var&gt; to reduce numerical errors in future calculations.</source>
          <target state="translated">향후 계산에서 수치 오류를 줄이기 위해 행렬 &lt;var&gt;A&lt;/var&gt; 의 균형을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="60d394246b3915d97f9bf77cf001892566876bc6" translate="yes" xml:space="preserve">
          <source>Banded matrix with the band size of &lt;var&gt;nl&lt;/var&gt; below the diagonal and &lt;var&gt;nu&lt;/var&gt; above it. If &lt;var&gt;nl&lt;/var&gt; and &lt;var&gt;nu&lt;/var&gt; are 1, then the matrix is tridiagonal and treated with specialized code. In addition the matrix can be marked as probably a positive definite. (Sparse matrices only)</source>
          <target state="translated">대각선 아래 &lt;var&gt;nl&lt;/var&gt; 의 밴드 크기와 그 위의 &lt;var&gt;nu&lt;/var&gt; 를 갖는 밴딩 행렬 . 경우 &lt;var&gt;nl&lt;/var&gt; 및 &lt;var&gt;nu&lt;/var&gt; 1이며, 그 삼중 대각 행렬 및 특수 코드로 처리된다. 또한 행렬은 아마도 양의 명확한 것으로 표시 될 수 있습니다. (희소 행렬 만)</target>
        </trans-unit>
        <trans-unit id="cf220ef7bb90a13a328a54e14da11c5a5b7eb35c" translate="yes" xml:space="preserve">
          <source>Bar Series</source>
          <target state="translated">바 시리즈</target>
        </trans-unit>
        <trans-unit id="b28939a2097a9143a4110936db75a6a1b204e4df" translate="yes" xml:space="preserve">
          <source>Bar series objects are created by the &lt;code&gt;bar&lt;/code&gt; or &lt;code&gt;barh&lt;/code&gt; functions. Each &lt;code&gt;hggroup&lt;/code&gt; element contains a single patch object. The properties of the bar series are</source>
          <target state="translated">바 시리즈 객체에 의해 생성되는 &lt;code&gt;bar&lt;/code&gt; 또는 &lt;code&gt;barh&lt;/code&gt; 기능. 각 &lt;code&gt;hggroup&lt;/code&gt; 요소는 단일 패치 객체를 포함합니다. 바 시리즈의 속성은</target>
        </trans-unit>
        <trans-unit id="961bc31035eeda2aab252fceeb567cc8d9b8ef59" translate="yes" xml:space="preserve">
          <source>Barber, C.B., Dobkin, D.P., and Huhdanpaa, H.T.,</source>
          <target state="translated">Barber, CB, Dobkin, DP 및 Huhdanpaa, HT,</target>
        </trans-unit>
        <trans-unit id="2bce76b8ced092d41b9c4af738e6086a1ffa555e" translate="yes" xml:space="preserve">
          <source>Bars are stacked so that each X value has a single bar composed of multiple segments.</source>
          <target state="translated">막대는 각 X 값이 여러 세그먼트로 구성된 단일 막대를 갖도록 쌓입니다.</target>
        </trans-unit>
        <trans-unit id="879797c59c373c24d42462664c63c4671c26107b" translate="yes" xml:space="preserve">
          <source>Bars are stacked so that each Y value has a single bar composed of multiple segments.</source>
          <target state="translated">막대는 각 Y 값이 여러 세그먼트로 구성된 단일 막대를 갖도록 쌓입니다.</target>
        </trans-unit>
        <trans-unit id="e58ccf8eaf93e1479e91be552e6a5c6a5fadedeb" translate="yes" xml:space="preserve">
          <source>Base64 and Binary Data Transmission</source>
          <target state="translated">Base64 및 이진 데이터 전송</target>
        </trans-unit>
        <trans-unit id="8de5c4a92b32357c9851e6825f043d685887e0f2" translate="yes" xml:space="preserve">
          <source>Basic Input and Output</source>
          <target state="translated">기본 입출력</target>
        </trans-unit>
        <trans-unit id="2d2e27808a28441dbbed0d3390417aa95ef3b5ce" translate="yes" xml:space="preserve">
          <source>Basic Linear Algebra Subroutine library. Accelerated &lt;small&gt;BLAS&lt;/small&gt; libraries such as OpenBLAS (&lt;a href=&quot;https://www.openblas.net/&quot;&gt;https://www.openblas.net/&lt;/a&gt;) or ATLAS (&lt;a href=&quot;http://math-atlas.sourceforge.net&quot;&gt;http://math-atlas.sourceforge.net&lt;/a&gt;) are recommended for best performance. The reference implementation (&lt;a href=&quot;http://www.netlib.org/blas&quot;&gt;http://www.netlib.org/blas&lt;/a&gt;) is slow, unmaintained, and suffers from certain bugs in corner case inputs.</source>
          <target state="translated">기본 선형 대수 서브 루틴 라이브러리. 최상의 성능 을 위해서는 OpenBLAS ( &lt;a href=&quot;https://www.openblas.net/&quot;&gt;https://www.openblas.net/&lt;/a&gt; ) 또는 ATLAS ( &lt;a href=&quot;http://math-atlas.sourceforge.net&quot;&gt;http://math-atlas.sourceforge.net&lt;/a&gt; ) 와 같은 가속 &lt;small&gt;BLAS&lt;/small&gt; 라이브러리 가 권장됩니다. 참조 구현 ( &lt;a href=&quot;http://www.netlib.org/blas&quot;&gt;http://www.netlib.org/blas&lt;/a&gt; )은 느리고 유지 관리되지 않으며 코너 입력에 특정 버그가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a00c0a675f6cf3eab4ed98155c65341a29a0926" translate="yes" xml:space="preserve">
          <source>Basic Matrix Functions</source>
          <target state="translated">기본 매트릭스 기능</target>
        </trans-unit>
        <trans-unit id="c998c3676e25ae6bc1531d84a9285f62330786f3" translate="yes" xml:space="preserve">
          <source>Basic Operators and Functions on Sparse Matrices</source>
          <target state="translated">희소 행렬의 기본 연산자 및 함수</target>
        </trans-unit>
        <trans-unit id="b2987ea9019eddd834b7476d352eb69a8b1eb45c" translate="yes" xml:space="preserve">
          <source>Basic Statistical Functions</source>
          <target state="translated">기본 통계 함수</target>
        </trans-unit>
        <trans-unit id="41db8258da7fde0c1376c29ef7b86dbb4249ec41" translate="yes" xml:space="preserve">
          <source>Basic Unix system utilities are required for building Octave. All will be available with any modern Unix system and also on Windows with either Cygwin or MinGW and MSYS.</source>
          <target state="translated">Octave를 빌드하려면 기본 Unix 시스템 유틸리티가 필요합니다. 모든 최신 Unix 시스템과 Cygwin 또는 MinGW 및 MSYS가 설치된 Windows에서도 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="f28c73652a86f7f4c93d8081035c91de8f764946" translate="yes" xml:space="preserve">
          <source>Basic Usage and Examples</source>
          <target state="translated">기본 사용법 및 예</target>
        </trans-unit>
        <trans-unit id="4581904814b3b721f0fd83a306bff03d8e2f02a9" translate="yes" xml:space="preserve">
          <source>Basic Usage of Cell Arrays</source>
          <target state="translated">셀형 배열의 기본 사용법</target>
        </trans-unit>
        <trans-unit id="f8ff45cb27924860bb94b463bdbabcc29c6ecac1" translate="yes" xml:space="preserve">
          <source>Basic Vectorization</source>
          <target state="translated">기본 벡터화</target>
        </trans-unit>
        <trans-unit id="eb606240d1882d7b20153d872bcf546ce6bc40bf" translate="yes" xml:space="preserve">
          <source>Basic techniques for code optimization</source>
          <target state="translated">코드 최적화를위한 기본 기술</target>
        </trans-unit>
        <trans-unit id="8fdc2bc9c7ca828f912becc5b6df272b3ca27c9a" translate="yes" xml:space="preserve">
          <source>Basic text formatting is supported inside sections, see the example given below:</source>
          <target state="translated">섹션 내에서 기본 텍스트 형식이 지원됩니다 (아래 예 참조).</target>
        </trans-unit>
        <trans-unit id="3b90776a06e35fdd0d053b9cf250b3c723736571" translate="yes" xml:space="preserve">
          <source>Basically, a URL is written between an opening &amp;lsquo;</source>
          <target state="translated">기본적으로 URL은 오프닝 사이에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="ddff41080993b42afb80e7f106d3cccf60d73d7d" translate="yes" xml:space="preserve">
          <source>Batch mode is enabled by either 1) specifying a logfile using the third argument &lt;var&gt;fname&lt;/var&gt; or &lt;var&gt;fid&lt;/var&gt;, or 2) requesting an output argument such as &lt;var&gt;success&lt;/var&gt;, &lt;var&gt;n&lt;/var&gt;, etc.</source>
          <target state="translated">배치 모드는 1) 세 번째 인수 &lt;var&gt;fname&lt;/var&gt; 또는 &lt;var&gt;fid&lt;/var&gt; 를 사용하여 로그 파일을 지정 하거나 2) &lt;var&gt;success&lt;/var&gt; , &lt;var&gt;n&lt;/var&gt; 등과 같은 출력 인수를 요청하여 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="7fbdf661d49afafc5ac40d42d8c5cced3a494bf9" translate="yes" xml:space="preserve">
          <source>Be aware of lazy copies (copy-on-write).    When a copy of an object is created, the data is not immediately copied, but rather shared. The actual copying is postponed until the copied data needs to be modified. For example:</source>
          <target state="translated">게으른 사본에주의하십시오 (기록 중 복사). 개체의 복사본이 만들어지면 데이터가 즉시 복사되지 않고 공유됩니다. 실제 복사는 복사 된 데이터를 수정해야 할 때까지 연기됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c9722830db1ba306da44ceeb175c4bc642edee1e" translate="yes" xml:space="preserve">
          <source>Be precise about these changes&amp;mdash;show a context diff for them.</source>
          <target state="translated">이러한 변경 사항에 대해 정확하게 파악하십시오. 변경 내용에 대한 내용을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ab37523154499435330c8f82a80275c72a272d97" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;assert&lt;/code&gt; is so frequently used alone in a test block, there is a shorthand form:</source>
          <target state="translated">&lt;code&gt;assert&lt;/code&gt; 는 테스트 블록에서 단독으로 자주 사용 되기 때문에 축약 형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="42dda19769c5c356f0388a32203b0d98be01da14" translate="yes" xml:space="preserve">
          <source>Because compilation is a costly operation it does not make sense to employ JIT when the loop count is low. By default only loops with greater than 1000 iterations will be accelerated.</source>
          <target state="translated">컴파일은 비용이 많이 드는 작업이기 때문에 루프 수가 적은 경우 JIT를 사용하는 것은 의미가 없습니다. 기본적으로 반복 횟수가 1000보다 큰 루프 만 가속됩니다.</target>
        </trans-unit>
        <trans-unit id="eac75969a1a296933f78fe6e0c8a80815a058e6f" translate="yes" xml:space="preserve">
          <source>Because many other languages provide C or C++ APIs it is relatively simple to build bridges between Octave and other languages. This is also a way to bridge to hardware resources which often have device drivers written in C.</source>
          <target state="translated">다른 많은 언어가 C 또는 C ++ API를 제공하기 때문에 Octave와 다른 언어 사이에 브리지를 구축하는 것이 비교적 간단합니다. 또한 종종 C로 작성된 장치 드라이버가있는 하드웨어 리소스에 브리지하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="a16518a59e5cc57cf848762028e4f35fe263ce42" translate="yes" xml:space="preserve">
          <source>Because oct-files are compiled functions they open up the possibility of crashing Octave through careless function calls or memory faults. It is quite important that each and every function have a sufficient level of parameter checking to ensure that Octave behaves well.</source>
          <target state="translated">oct 파일은 컴파일 된 함수이기 때문에 부주의 한 함수 호출이나 메모리 오류를 통해 Octave가 충돌 할 가능성이 있습니다. 옥타브가 제대로 작동하기 위해서는 각각의 모든 기능에 충분한 수준의 파라미터 검사가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="722617bc35c223f610ad609bf73304b8577676f5" translate="yes" xml:space="preserve">
          <source>Because there is a space after &amp;lsquo;</source>
          <target state="translated">'뒤에 공백이 있기 때문에</target>
        </trans-unit>
        <trans-unit id="e260bc2cd21931564989aa55e80e5554ca25fd19" translate="yes" xml:space="preserve">
          <source>Because there may be output waiting to be displayed by the pager, it is a good idea to always call &lt;code&gt;fflush (stdout)&lt;/code&gt; before calling &lt;code&gt;input&lt;/code&gt;. This will ensure that all pending output is written to the screen before your prompt.</source>
          <target state="translated">호출기에 의해 표시되기를 기다리는 출력이있을 수 있으므로 &lt;code&gt;input&lt;/code&gt; 을 호출하기 전에 항상 &lt;code&gt;fflush (stdout)&lt;/code&gt; 를 호출 하는 것이 좋습니다 . 그러면 프롬프트 전에 대기중인 모든 출력이 화면에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="ac8ac8470b9e50cf881db223202bb12df8b79ca7" translate="yes" xml:space="preserve">
          <source>Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) The New S Language. Wadsworth &amp;amp; Brooks/Cole.</source>
          <target state="translated">Becker, RA, Chambers, JM and Wilks, AR (1988) The New S Language. Wadsworth &amp;amp; Brooks / Cole.</target>
        </trans-unit>
        <trans-unit id="65eb0a4917174ca38ad73262aa449fba60bad620" translate="yes" xml:space="preserve">
          <source>Before computing the Fourier transform, one of the following windows is applied:</source>
          <target state="translated">푸리에 변환을 계산하기 전에 다음 창 중 하나가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="1f070b7123334f4e6a5ee75e3105b5f059e00d1c" translate="yes" xml:space="preserve">
          <source>Before going further, you should first determine if you really need to bother writing code outside of Octave.</source>
          <target state="translated">더 나아 가기 전에 먼저 Octave 외부에서 코드 작성을 방해해야하는지 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c43eb48bf7018313ef9a06f84908d66a01c79c4" translate="yes" xml:space="preserve">
          <source>Before you evaluate an expression you need to substitute the values of the variables used in the expression. These are stored in the symbol table. Whenever the interpreter starts a new function it saves the current symbol table and creates a new one, initializing it with the list of function parameters and a couple of predefined variables such as &lt;code&gt;nargin&lt;/code&gt;. Expressions inside the function use the new symbol table.</source>
          <target state="translated">표현식을 평가하기 전에 표현식에 사용 된 변수 값을 대체해야합니다. 이들은 심볼 테이블에 저장됩니다. 인터프리터가 새 함수를 시작할 때마다 현재 기호 테이블을 저장하고 새 기호 테이블을 작성하여 함수 매개 변수 목록과 &lt;code&gt;nargin&lt;/code&gt; 과 같은 사전 정의 된 변수로 초기화합니다 . 함수 내부의 표현식은 새로운 심볼 테이블을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="69385ac472d5822d09bb47bdba028415397cf7c6" translate="yes" xml:space="preserve">
          <source>Begins a new line by printing the equivalent of a carriage return followed by a line feed.</source>
          <target state="translated">캐리지 리턴과 동일하게 줄 바꿈을 인쇄하여 새 줄을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="7c89f79fedb780dc8797d572949970af2bd3bf91" translate="yes" xml:space="preserve">
          <source>Below is an example of creating a small sparse matrix using the first technique</source>
          <target state="translated">아래는 첫 번째 기술을 사용하여 작은 희소 행렬을 만드는 예입니다.</target>
        </trans-unit>
        <trans-unit id="8b890884bb782672a4e1cbc2450c921c4c0a7525" translate="yes" xml:space="preserve">
          <source>Below, we will give a short example of a profiler session. See &lt;a href=&quot;profiling#Profiling&quot;&gt;Profiling&lt;/a&gt;, for the documentation of the profiler functions in detail. Consider the code:</source>
          <target state="translated">다음은 프로파일 러 세션의 간단한 예입니다. &lt;a href=&quot;profiling#Profiling&quot;&gt;프로파일&lt;/a&gt; 러 기능에 대한 자세한 내용은 프로파일 링을 참조하십시오 . 코드를 고려하십시오 :</target>
        </trans-unit>
        <trans-unit id="92c4bb4aa69642ea28c3f4bd8479c0e6dac8a18e" translate="yes" xml:space="preserve">
          <source>Besides common arithmetic operations, several functions of two arguments also broadcast. The full list of functions and operators that broadcast is</source>
          <target state="translated">일반적인 산술 연산 외에도 두 인수의 여러 함수도 브로드 캐스트됩니다. 방송하는 기능과 운영자의 전체 목록은</target>
        </trans-unit>
        <trans-unit id="f37822362fd6ce4c84d3d2504319c2f2326368c0" translate="yes" xml:space="preserve">
          <source>Besides line properties, the arrowhead can be customized using &lt;code&gt;&quot;headlength&quot;&lt;/code&gt;, &lt;code&gt;&quot;headwidth&quot;&lt;/code&gt;, and &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; properties. Supported values for &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; property are: [&lt;code&gt;&quot;diamond&quot;&lt;/code&gt; | &lt;code&gt;&quot;ellipse&quot;&lt;/code&gt; | &lt;code&gt;&quot;plain&quot;&lt;/code&gt; | &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback1&quot;&lt;/code&gt; | &lt;code&gt;&quot;{vback2}&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback3&quot;&lt;/code&gt;]</source>
          <target state="translated">선 속성 외에도 화살촉은 &lt;code&gt;&quot;headlength&quot;&lt;/code&gt; , &lt;code&gt;&quot;headwidth&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; 속성을 사용하여 사용자 지정할 수 있습니다 . &lt;code&gt;&quot;headstyle&quot;&lt;/code&gt; 속성에 지원되는 값 은 다음과 같습니다. [ &lt;code&gt;&quot;diamond&quot;&lt;/code&gt; | &lt;code&gt;&quot;ellipse&quot;&lt;/code&gt; | &lt;code&gt;&quot;plain&quot;&lt;/code&gt; | &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback1&quot;&lt;/code&gt; | &lt;code&gt;&quot;{vback2}&quot;&lt;/code&gt; | &lt;code&gt;&quot;vback3&quot;&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d9ea4ce1f533fd02f131ae77908d593a8054c60" translate="yes" xml:space="preserve">
          <source>Besides special glyphs, the formatting of the text can be changed within the string by using the codes</source>
          <target state="translated">특수 글리프 외에도 코드를 사용하여 문자열 내에서 텍스트 서식을 변경할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6590782bb7d4e4a3e1b487c0373613995a013879" translate="yes" xml:space="preserve">
          <source>Besides the above mentioned files, a package can also contain one or more of the following directories:</source>
          <target state="translated">위에서 언급 한 파일 외에도 패키지에는 다음 디렉토리 중 하나 이상이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cff9d15874f2e14a910c8161aeb7ed33a01f47b5" translate="yes" xml:space="preserve">
          <source>Besides the index operator &lt;code&gt;&quot;.&quot;&lt;/code&gt;, Octave can use dynamic naming &lt;code&gt;&quot;(var)&quot;&lt;/code&gt; or the &lt;code&gt;struct&lt;/code&gt; function to create structures. Dynamic naming uses the string value of a variable as the field name. For example:</source>
          <target state="translated">색인 연산자 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 외에 Octave는 동적 이름 지정 &lt;code&gt;&quot;(var)&quot;&lt;/code&gt; 또는 &lt;code&gt;struct&lt;/code&gt; 함수를 사용하여 구조를 작성할 수 있습니다. 동적 이름 지정은 변수의 문자열 값을 필드 이름으로 사용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6cd55df52e8edd7615ca160e37f6cae69c7c3b1e" translate="yes" xml:space="preserve">
          <source>Besides the least-squares estimate matrix &lt;var&gt;x&lt;/var&gt; (p-by-k), the function also returns &lt;var&gt;stdx&lt;/var&gt; (p-by-k), the error standard deviation of estimated &lt;var&gt;x&lt;/var&gt;; &lt;var&gt;mse&lt;/var&gt; (k-by-1), the estimated data error covariance scale factors (&lt;em&gt;\sigma^2&lt;/em&gt;); and &lt;var&gt;S&lt;/var&gt; (p-by-p, or p-by-p-by-k if k &amp;gt; 1), the error covariance of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">최소 제곱 추정 행렬 &lt;var&gt;x&lt;/var&gt; (p-by-k) &lt;var&gt;stdx&lt;/var&gt; , 함수는 추정 된 &lt;var&gt;x&lt;/var&gt; 의 오차 표준 편차 인 stdx (p-by-k) 도 반환합니다 . 추정 된 데이터 에러 공분산 스케일 팩터 인 &lt;var&gt;mse&lt;/var&gt; (k-by-1) ( &lt;em&gt;\ sigma ^ 2&lt;/em&gt; ); 및 &lt;var&gt;S&lt;/var&gt; (기준-P-P 또는 P-P 바이 바이 경우 K K&amp;gt; 1) 오차의 공분산 &lt;var&gt;x&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="43d40388e2c253600caf75ba2177cf52b4f83ae6" translate="yes" xml:space="preserve">
          <source>Besides the number of arguments, inputs can be checked for various properties. &lt;code&gt;validatestring&lt;/code&gt; is used for string arguments and &lt;code&gt;validateattributes&lt;/code&gt; for numeric arguments.</source>
          <target state="translated">인수 수 외에도 다양한 속성에 대한 입력을 확인할 수 있습니다. &lt;code&gt;validatestring&lt;/code&gt; 는 문자열 인수 및 사용되는 &lt;code&gt;validateattributes&lt;/code&gt; 숫자 인수.</target>
        </trans-unit>
        <trans-unit id="0c94f17566f6c0360163dd66cd409d45c71e1c72" translate="yes" xml:space="preserve">
          <source>Best local bound.</source>
          <target state="translated">최고의 현지 경계.</target>
        </trans-unit>
        <trans-unit id="54e1cc05c077025217a7482d3305fb438fd3160d" translate="yes" xml:space="preserve">
          <source>Best projection heuristic.</source>
          <target state="translated">최고의 투영 휴리스틱.</target>
        </trans-unit>
        <trans-unit id="7fd543cab75c3d933ad6279566277ef039895cdb" translate="yes" xml:space="preserve">
          <source>Beware of resorting to broadcasting if a simpler operation will suffice. For matrices &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;, consider the following:</source>
          <target state="translated">간단한 조작만으로도 방송에 의지하십시오. 행렬 &lt;var&gt;a&lt;/var&gt; 와 &lt;var&gt;b&lt;/var&gt; 의 경우 다음을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="0006711ce28b361c5dc45f3fb2a1b35e309ab1b2" translate="yes" xml:space="preserve">
          <source>Beyond speed and memory issues, there have been instances where some input matrices were not accurately decomposed by &lt;code&gt;gesdd&lt;/code&gt;. See currently active bug &lt;a href=&quot;https://savannah.gnu.org/bugs/?55564&quot;&gt;https://savannah.gnu.org/bugs/?55564&lt;/a&gt;. Until these accuracy issues are resolved in a new version of the &lt;small&gt;LAPACK&lt;/small&gt; library, the default driver in Octave has been set to &lt;code&gt;&quot;gesvd&quot;&lt;/code&gt;.</source>
          <target state="translated">속도 및 메모리 문제 외에도 일부 입력 행렬이 &lt;code&gt;gesdd&lt;/code&gt; 에 의해 정확하게 분해되지 않은 경우가 있었습니다 . 현재 활성화 된 버그 &lt;a href=&quot;https://savannah.gnu.org/bugs/?55564&quot;&gt;https://savannah.gnu.org/bugs/?55564를 참조하십시오&lt;/a&gt; . &lt;small&gt;LAPACK&lt;/small&gt; 라이브러리 의 새 버전에서 이러한 정확성 문제가 해결 될 때까지 Octave의 기본 드라이버는 &lt;code&gt;&quot;gesvd&quot;&lt;/code&gt; 로 설정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="077a15b13db556c78b4bfbf28994d6f478f129e0" translate="yes" xml:space="preserve">
          <source>Binary I/O</source>
          <target state="translated">이진 I / O</target>
        </trans-unit>
        <trans-unit id="e00df53002d6983ff503c9df80c8975eaf3cd2ab" translate="yes" xml:space="preserve">
          <source>Binary Operators</source>
          <target state="translated">이진 연산자</target>
        </trans-unit>
        <trans-unit id="41bcf8d0c84c0854259a1353a132c4c559c54d2b" translate="yes" xml:space="preserve">
          <source>Binary addition</source>
          <target state="translated">이진 추가</target>
        </trans-unit>
        <trans-unit id="c78e01e2df9d76ad94ccfa1ca5c9239d5818c7de" translate="yes" xml:space="preserve">
          <source>Binary subtraction</source>
          <target state="translated">이진 빼기</target>
        </trans-unit>
        <trans-unit id="4915a22bd9a4e5302c4d2d785671382b8a5d633f" translate="yes" xml:space="preserve">
          <source>Bison</source>
          <target state="translated">Bison</target>
        </trans-unit>
        <trans-unit id="6bcf5eeb72876c131fd59448a2cc74c116262fe0" translate="yes" xml:space="preserve">
          <source>Bit Manipulations</source>
          <target state="translated">비트 조작</target>
        </trans-unit>
        <trans-unit id="208abe95f61bdca28d01c97a63d789ede7dec51c" translate="yes" xml:space="preserve">
          <source>BitDepth</source>
          <target state="translated">BitDepth</target>
        </trans-unit>
        <trans-unit id="444f408bc523de1ebe62775a099237e6a577819f" translate="yes" xml:space="preserve">
          <source>BitRate</source>
          <target state="translated">BitRate</target>
        </trans-unit>
        <trans-unit id="57332e55aa80ed1cac49621fb28fcd571f920a7c" translate="yes" xml:space="preserve">
          <source>Bits that are shifted out of either end of the value are lost. Octave also uses arithmetic shifts, where the sign bit of the value is kept during a right shift. For example:</source>
          <target state="translated">값의 한쪽 끝에서 벗어난 비트는 손실됩니다. 옥타브는 또한 산술 시프트를 사용하는데, 여기서 오른쪽 시프트 동안 값의 부호 비트가 유지됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dfa0da40dfa459d5e0371427f8a8d6065ad539cb" translate="yes" xml:space="preserve">
          <source>BitsPerSample</source>
          <target state="translated">BitsPerSample</target>
        </trans-unit>
        <trans-unit id="c1b38fad085dd3509a88635aa132e51044b4666a" translate="yes" xml:space="preserve">
          <source>Block Comments</source>
          <target state="translated">댓글 차단</target>
        </trans-unit>
        <trans-unit id="5dffd0bdb173cfa60dace4ab47d5ffd8318adfce" translate="yes" xml:space="preserve">
          <source>Block type summary:</source>
          <target state="translated">블록 유형 요약 :</target>
        </trans-unit>
        <trans-unit id="7d44bc449c2a26374800a503f10f3d8949505f40" translate="yes" xml:space="preserve">
          <source>Blue</source>
          <target state="translated">Blue</target>
        </trans-unit>
        <trans-unit id="bf04002b0249875f43eaf26f9729ac08bdbee8a3" translate="yes" xml:space="preserve">
          <source>Bold font</source>
          <target state="translated">볼드체</target>
        </trans-unit>
        <trans-unit id="c9ac379f83771407fb1e0d78aaf3f7b5adc6706f" translate="yes" xml:space="preserve">
          <source>Boolean Expressions</source>
          <target state="translated">부울 식</target>
        </trans-unit>
        <trans-unit id="021e8c0cb1cf42de5aefc725da1276c9e67ad800" translate="yes" xml:space="preserve">
          <source>Boolean. &lt;code&gt;idx(i)&lt;/code&gt; is a logical 1 or 0, indicating whether &lt;code&gt;y(i)&lt;/code&gt; is contained in table or not.</source>
          <target state="translated">부울. &lt;code&gt;idx(i)&lt;/code&gt; 는 논리 1 또는 0이며, &lt;code&gt;y(i)&lt;/code&gt; 가 테이블에 포함 되는지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="722d7d26114bf5209d2a70ccadac37a8f4e15e24" translate="yes" xml:space="preserve">
          <source>Both &lt;small&gt;GLPK&lt;/small&gt; and Qhull use &lt;code&gt;int&lt;/code&gt; internally so maximum problem sizes may be limited.</source>
          <target state="translated">&lt;small&gt;GLPK&lt;/small&gt; 와 Qhull은 모두 내부적으로 &lt;code&gt;int&lt;/code&gt; 를 사용 하므로 최대 문제 크기가 제한 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b903c35898c83e85af4a489c32799aabf17f53db" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;dim&lt;/var&gt; and &lt;var&gt;opt&lt;/var&gt; are optional. If both are supplied, either may appear first.</source>
          <target state="translated">모두 &lt;var&gt;dim&lt;/var&gt; 및 &lt;var&gt;opt&lt;/var&gt; 선택 사항입니다. 둘 다 제공되면 둘 중 하나가 먼저 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71499a4de5921f796e800de6bbc78afa630df957" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;minargs&lt;/var&gt; and &lt;var&gt;maxargs&lt;/var&gt; must be numeric scalars. Zero, Inf, and negative are all valid, and they can have the same value.</source>
          <target state="translated">두 &lt;var&gt;minargs&lt;/var&gt; 및 &lt;var&gt;maxargs&lt;/var&gt; 은 숫자 스칼라해야합니다. Zero, Inf 및 negative는 모두 유효하며 동일한 값을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b01a758d9ebdf7327fb3ea751d38958b41778df" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;minargs&lt;/var&gt; and &lt;var&gt;maxargs&lt;/var&gt; must be scalar numeric values. Zero, Inf, and negative values are all allowed, and &lt;var&gt;minargs&lt;/var&gt; and &lt;var&gt;maxargs&lt;/var&gt; may be equal.</source>
          <target state="translated">두 &lt;var&gt;minargs&lt;/var&gt; 및 &lt;var&gt;maxargs&lt;/var&gt; 는 스칼라 숫자 값이어야합니다. 0, Inf 및 음수 값이 모두 허용되며 &lt;var&gt;minargs&lt;/var&gt; 및 &lt;var&gt;maxargs&lt;/var&gt; 는 동일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff52f594471b0880a2ec0ed17a669501e3810285" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;val&lt;/var&gt; and &lt;var&gt;type&lt;/var&gt; are typically one of the following built-in classes:</source>
          <target state="translated">두 &lt;var&gt;val&lt;/var&gt; 과 &lt;var&gt;type&lt;/var&gt; 일반적으로 다음과 같은 내장의 클래스 중 하나입니다 :</target>
        </trans-unit>
        <trans-unit id="ab2f4ecf9c471b68979ea9dacaba1f0a8fce1bdf" translate="yes" xml:space="preserve">
          <source>Both Ends, with one more from the high-end if &lt;var&gt;k&lt;/var&gt; is odd (valid only for real symmetric problems).</source>
          <target state="translated">&lt;var&gt;k&lt;/var&gt; 가 홀수 인 경우 하이 엔드에서 하나 이상을 가진 두 끝 (실제 대칭 문제에만 유효).</target>
        </trans-unit>
        <trans-unit id="e6a83418918232199a380993f16406c3b736545a" translate="yes" xml:space="preserve">
          <source>Both arrays can be broadcast across each other, for example, all pairwise differences of the elements of a vector with itself:</source>
          <target state="translated">두 배열 모두 서로에 걸쳐 브로드 캐스트 될 수 있습니다 (예 : 벡터 요소 자체와의 모든 쌍별 차이).</target>
        </trans-unit>
        <trans-unit id="ceae212444a6d3257be5ec168eded3328930237e" translate="yes" xml:space="preserve">
          <source>Both function files and script files end with an extension of .m, for &lt;small&gt;MATLAB&lt;/small&gt; compatibility. If you want more than one independent functions in a file, it must be a script file (see &lt;a href=&quot;script-files#Script-Files&quot;&gt;Script Files&lt;/a&gt;), and to use these functions you must execute the script file before you can use the functions that are in the script file.</source>
          <target state="translated">함수 파일과 스크립트 파일 모두 &lt;small&gt;MATLAB&lt;/small&gt; 호환성을 위해 확장자가 .m으로 끝납니다 . 당신이 파일에 하나 개 이상의 독립적 인 기능을 원하는 경우, 스크립트 파일을 (참조해야 &lt;a href=&quot;script-files#Script-Files&quot;&gt;스크립트 파일&lt;/a&gt; ) 및 스크립트 파일에있는 함수를 사용하기 전에이 스크립트 파일을 실행해야이 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f56dd23b94f903210d7d506fc9594ca3e84f09ec" translate="yes" xml:space="preserve">
          <source>Both parameters are optional. The default cycle time is 5 seconds and the default increment is 2. If the option &lt;code&gt;&quot;inf&quot;&lt;/code&gt; is given then cycle continuously until</source>
          <target state="translated">두 매개 변수는 모두 선택 사항입니다. 기본주기 시간은 5 초이고 기본 증분은 2입니다. &lt;code&gt;&quot;inf&quot;&lt;/code&gt; 옵션 이 제공 될 때까지 계속 순환하십시오.</target>
        </trans-unit>
        <trans-unit id="9a888bd8c11a9db6c604f8bfa7eb4320f863b828" translate="yes" xml:space="preserve">
          <source>Both the class of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;class&lt;/var&gt; must be one of the built-in numeric classes:</source>
          <target state="translated">모두의 클래스 &lt;var&gt;x&lt;/var&gt; 와 &lt;var&gt;class&lt;/var&gt; 중 하나 여야합니다 내장 숫자 클래스 :</target>
        </trans-unit>
        <trans-unit id="25854a99e6b80e1bb8ca35c4d2b39c25d82a1fd8" translate="yes" xml:space="preserve">
          <source>Bottom center of the screen.</source>
          <target state="translated">화면 하단 중앙.</target>
        </trans-unit>
        <trans-unit id="c116fa7ee9cd5f76e854c7be300e0ac5ae08731e" translate="yes" xml:space="preserve">
          <source>Bottom left of the screen.</source>
          <target state="translated">화면의 왼쪽 하단</target>
        </trans-unit>
        <trans-unit id="41c31aff3bdb356f51c0334d6484dd4810f1ba65" translate="yes" xml:space="preserve">
          <source>Bottom right of the screen.</source>
          <target state="translated">화면의 오른쪽 하단</target>
        </trans-unit>
        <trans-unit id="234ddc71255560f5941e6823ac161189e2dd916b" translate="yes" xml:space="preserve">
          <source>Branching technique option (for MIP only):</source>
          <target state="translated">분기 기술 옵션 (MIP에만 해당) :</target>
        </trans-unit>
        <trans-unit id="4783e8f8fb67f8a1efa54f0096e73e1b6c14414c" translate="yes" xml:space="preserve">
          <source>Breadth first search.</source>
          <target state="translated">너비 첫 검색.</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="6b48ce4f975aaaf9874e30444b8700ed9a99ff23" translate="yes" xml:space="preserve">
          <source>Breakpoints and events can be removed using the &lt;code&gt;dbclear&lt;/code&gt; command with the same syntax.</source>
          <target state="translated">동일한 구문으로 &lt;code&gt;dbclear&lt;/code&gt; 명령을 사용하여 중단 점 및 이벤트를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8ec9debbea70409e7c84058d4d402587950524b" translate="yes" xml:space="preserve">
          <source>Breakpoints can be set in any m-file function by using the &lt;code&gt;dbstop&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;dbstop&lt;/code&gt; 함수 를 사용하여 모든 m 파일 함수에서 중단 점을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="258c704e79dc1bf48a7380f4c49adc52c02becd6" translate="yes" xml:space="preserve">
          <source>Breakpoints in class methods are also supported (e.g., &lt;code&gt;dbstop (&quot;@class/method&quot;)&lt;/code&gt;). However, breakpoints cannot be set in built-in functions (e.g., &lt;code&gt;sin&lt;/code&gt;, etc.) or dynamically loaded functions (i.e., oct-files).</source>
          <target state="translated">클래스 메소드의 중단 점도 지원됩니다 (예 : &lt;code&gt;dbstop (&quot;@class/method&quot;)&lt;/code&gt; ). 그러나 내장 함수 (예 : &lt;code&gt;sin&lt;/code&gt; 등) 또는 동적으로로드 된 함수 (즉, oct 파일) 에서는 중단 점을 설정할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0942bb5a4441b343a13f41ebf4c66d8c71ce141e" translate="yes" xml:space="preserve">
          <source>Brighten or darken a colormap.</source>
          <target state="translated">컬러 맵을 밝게하거나 어둡게합니다.</target>
        </trans-unit>
        <trans-unit id="ba459229366746c447e3cdf752eb917433152cfe" translate="yes" xml:space="preserve">
          <source>Broadcasting</source>
          <target state="translated">Broadcasting</target>
        </trans-unit>
        <trans-unit id="2daf09a1afcb280d9158a2e1d494316ef2d65c85" translate="yes" xml:space="preserve">
          <source>Broadcasting is only applied if either of the two broadcasting conditions hold. As usual, however, broadcasting does not apply when two dimensions differ and neither is 1:</source>
          <target state="translated">방송은 두 방송 조건 중 하나가 유지되는 경우에만 적용됩니다. 그러나 평소와 같이 2 차원이 다르고 1도 아닌 경우 브로드 캐스트가 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4bb44b8fcd5f972d66798a325e6edfcf831b4545" translate="yes" xml:space="preserve">
          <source>Broadcasting operations</source>
          <target state="translated">방송 운영</target>
        </trans-unit>
        <trans-unit id="7998a199dad89184b0d7f47d9b8c768ff088a18e" translate="yes" xml:space="preserve">
          <source>Broadcasting refers to how Octave binary operators and functions behave when their matrix or array operands or arguments differ in size. Since version 3.6.0, Octave now automatically broadcasts vectors, matrices, and arrays when using elementwise binary operators and functions. Broadly speaking, smaller arrays are &amp;ldquo;broadcast&amp;rdquo; across the larger one, until they have a compatible shape. The rule is that corresponding array dimensions must either</source>
          <target state="translated">브로드 캐스팅은 매트릭스 또는 배열 피연산자 또는 인수의 크기가 다른 경우 Octave 이진 연산자 및 함수의 동작을 나타냅니다. 버전 3.6.0부터 Octave는 이제 요소 별 이진 연산자 및 함수를 사용할 때 벡터, 행렬 및 배열을 자동으로 브로드 캐스트합니다. 대체로 작은 배열은 호환 가능한 모양이 될 때까지 더 큰 배열에서 &quot;방송&quot;됩니다. 규칙은 해당 배열 차원이</target>
        </trans-unit>
        <trans-unit id="c3fa58ef984bb622b8d7739cec913fac4ccb7e05" translate="yes" xml:space="preserve">
          <source>Bug Criteria</source>
          <target state="translated">버그 기준</target>
        </trans-unit>
        <trans-unit id="cb16822f3ab4a4b7c7befbf6b7a12d0f7072950e" translate="yes" xml:space="preserve">
          <source>Bug Reporting</source>
          <target state="translated">버그보고</target>
        </trans-unit>
        <trans-unit id="5affe70bdb77ae83462885545ace5d26f56e1f9a" translate="yes" xml:space="preserve">
          <source>Bug Tracker</source>
          <target state="translated">버그 추적기</target>
        </trans-unit>
        <trans-unit id="654ffe48f6054af226250c2aa3867b5fc4c80bcc" translate="yes" xml:space="preserve">
          <source>Bugs we will fix later.</source>
          <target state="translated">나중에 고칠 버그.</target>
        </trans-unit>
        <trans-unit id="b12796477825be21e0fc36e92270e069f8d1cb37" translate="yes" xml:space="preserve">
          <source>Build a binary form of a package or packages. The binary file produced will itself be an Octave package that can be installed normally with &lt;code&gt;pkg&lt;/code&gt;. The form of the command to build a binary package is</source>
          <target state="translated">이진 형태의 패키지를 만듭니다. 생성 된 이진 파일 자체는 &lt;code&gt;pkg&lt;/code&gt; 과 함께 정상적으로 설치할 수있는 Octave 패키지입니다 . 바이너리 꾸러미를 만드는 명령의 형태는</target>
        </trans-unit>
        <trans-unit id="a0a0b4f30ab735572d6583fa2a8ab076525f9f12" translate="yes" xml:space="preserve">
          <source>Build a block diagonal matrix from &lt;var&gt;A&lt;/var&gt;, &lt;var&gt;B&lt;/var&gt;, &lt;var&gt;C&lt;/var&gt;, &amp;hellip;</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; , &lt;var&gt;B&lt;/var&gt; , &lt;var&gt;C&lt;/var&gt; , ... 에서 블록 대각 행렬을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c5c66e57bb624e27f930330c3f8f24e51e9b9350" translate="yes" xml:space="preserve">
          <source>Build complete filename from separate parts.</source>
          <target state="translated">별도의 부품으로 완전한 파일 이름을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="9f84d190c99bd0598c321d2cd6819d63839611df" translate="yes" xml:space="preserve">
          <source>Built-in Data Types</source>
          <target state="translated">내장 데이터 타입</target>
        </trans-unit>
        <trans-unit id="11c3f8cf90856dbe699ea2937502614fba4e9278" translate="yes" xml:space="preserve">
          <source>Built-in function A function that is a part of core Octave such as &lt;code&gt;numel&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, etc.</source>
          <target state="translated">내장 기능 &lt;code&gt;numel&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 등과 같은 코어 옥타브의 일부인 기능입니다 .</target>
        </trans-unit>
        <trans-unit id="d705258c54e6079321beb65fed2aa198e0303783" translate="yes" xml:space="preserve">
          <source>Bulleted Lists</source>
          <target state="translated">글 머리 기호 목록</target>
        </trans-unit>
        <trans-unit id="7d4cb0e146f77e11529c9b57fd08de6a7d684954" translate="yes" xml:space="preserve">
          <source>Bulleted list item 1</source>
          <target state="translated">글 머리 기호 목록 항목 1</target>
        </trans-unit>
        <trans-unit id="f066ae62705afea5aae04013092815d6e76c8d4d" translate="yes" xml:space="preserve">
          <source>Bulleted list item 2</source>
          <target state="translated">글 머리 기호 목록 항목 2</target>
        </trans-unit>
        <trans-unit id="34e548126447e7062d73743793702d1807c4d367" translate="yes" xml:space="preserve">
          <source>But it is if you preallocate the cell array &lt;code&gt;y&lt;/code&gt;:</source>
          <target state="translated">그러나 셀 배열 &lt;code&gt;y&lt;/code&gt; 를 사전 할당하는 경우입니다 .</target>
        </trans-unit>
        <trans-unit id="f119e0c4d55a5dfec8b9cdba7d14582da7a325f4" translate="yes" xml:space="preserve">
          <source>But that also means that you might have to assign the output of a method that changes properties back to the object manually:</source>
          <target state="translated">그러나 이는 속성을 객체로 다시 수동으로 변경하는 메소드의 출력을 할당해야 할 수도 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="23b7ac3eea6a52085a1485e9bf3b47956be7d286" translate="yes" xml:space="preserve">
          <source>But this does not give much information about where this time is spent; for instance, whether the single call to &lt;code&gt;expm&lt;/code&gt; is more expensive or the recursive time-stepping itself. To get a more detailed picture, we can use the profiler.</source>
          <target state="translated">그러나 이것은이 시간이 어디에 소비되는지에 대한 많은 정보를 제공하지는 않습니다. 예를 들어 &lt;code&gt;expm&lt;/code&gt; 에 대한 단일 호출 이 더 비쌉니다. 더 자세한 사진을 얻기 위해 프로파일 러를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d38d9e471d0fb0266f6b23abbd19a5209ba07580" translate="yes" xml:space="preserve">
          <source>ButtonDownFcn: called if a mouse button is pressed while the pointer is over this object. Note, that the gnuplot interface does not implement this callback.</source>
          <target state="translated">ButtonDownFcn : 포인터가이 객체 위에있는 동안 마우스 버튼을 누르면 호출됩니다. gnuplot 인터페이스는이 콜백을 구현하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="015c5677e1c1704f69ec1b0d0d2c2df7a5e2fa0a" translate="yes" xml:space="preserve">
          <source>By convention,</source>
          <target state="translated">관례에 따라</target>
        </trans-unit>
        <trans-unit id="00146ce017cc4b6620457111ff066e8e709ef408" translate="yes" xml:space="preserve">
          <source>By default (&lt;var&gt;c&lt;/var&gt; omitted, or a particular column unspecified in &lt;var&gt;c&lt;/var&gt;) an ascending sort order is used. However, if elements of &lt;var&gt;c&lt;/var&gt; are negative then the corresponding column is sorted in descending order. If the elements of &lt;var&gt;A&lt;/var&gt; are strings then a lexicographical sort is used.</source>
          <target state="translated">기본적으로 ( &lt;var&gt;c&lt;/var&gt; 생략 또는 &lt;var&gt;c&lt;/var&gt; 로 지정되지 않은 특정 열 ) 오름차순 정렬 순서가 사용됩니다. 그러나 &lt;var&gt;c&lt;/var&gt; 의 요소 가 음수이면 해당 열이 내림차순으로 정렬됩니다. &lt;var&gt;A&lt;/var&gt; 의 요소 가 문자열 인 경우 사전 식 정렬이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="798056cb67e6778b14d87df0411474bab87fb92b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;accumarray&lt;/code&gt; returns a full matrix. If &lt;var&gt;issparse&lt;/var&gt; is logically true, then a sparse matrix is returned instead.</source>
          <target state="translated">기본적으로 &lt;code&gt;accumarray&lt;/code&gt; 는 전체 행렬을 반환합니다. 경우 &lt;var&gt;issparse&lt;/var&gt; 가 논리적으로 참, 다음 희소 행렬 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="911638c977b41d139e84fa7812600964e2105884" translate="yes" xml:space="preserve">
          <source>By default &lt;var&gt;S&lt;/var&gt; is assumed to be symmetric and the symmetric elimination tree is returned. The argument &lt;var&gt;typ&lt;/var&gt; controls whether a symmetric or column elimination tree is returned. Valid values of &lt;var&gt;typ&lt;/var&gt; are &lt;code&gt;&quot;sym&quot;&lt;/code&gt; or &lt;code&gt;&quot;col&quot;&lt;/code&gt;, for symmetric or column elimination tree respectively.</source>
          <target state="translated">기본적으로 &lt;var&gt;S&lt;/var&gt; 는 대칭으로 가정되며 대칭 제거 트리가 반환됩니다. &lt;var&gt;typ&lt;/var&gt; 인수 는 대칭 또는 열 제거 트리의 반환 여부를 제어합니다. 의 유효한 값은 &lt;var&gt;typ&lt;/var&gt; 있다 &lt;code&gt;&quot;sym&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;col&quot;&lt;/code&gt; 각각 대칭 또는 열 제거 트리를.</target>
        </trans-unit>
        <trans-unit id="c5143ed57319349283a1f8a77fb3839c1fe085c0" translate="yes" xml:space="preserve">
          <source>By default callback functions are queued (they are executed one after the other in the event queue) unless the &lt;code&gt;drawnow&lt;/code&gt;, &lt;code&gt;figure&lt;/code&gt;, &lt;code&gt;waitfor&lt;/code&gt;, &lt;code&gt;getframe&lt;/code&gt;, or &lt;code&gt;pause&lt;/code&gt; functions are used. If an executing callback invokes one of those functions, it causes Octave to flush the event queue, which results in the executing callback being interrupted.</source>
          <target state="translated">&lt;code&gt;drawnow&lt;/code&gt; , &lt;code&gt;figure&lt;/code&gt; , &lt;code&gt;waitfor&lt;/code&gt; , &lt;code&gt;getframe&lt;/code&gt; 또는 &lt;code&gt;pause&lt;/code&gt; 함수가 사용 되지 않는 한 기본적으로 콜백 함수는 큐에 대기됩니다 ​​(이벤트 큐에서 차례로 실행 됨) . 실행 콜백이 해당 함수 중 하나를 호출하면 Octave가 이벤트 큐를 플러시하여 실행 콜백이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="a56364265536193758c75afd28c9b94f8360dfb7" translate="yes" xml:space="preserve">
          <source>By default installed packages are not available from the Octave prompt, but it is possible to control this using the &lt;code&gt;pkg load&lt;/code&gt; and &lt;code&gt;pkg unload&lt;/code&gt; commands. The functions from a package can be added to the Octave path by typing</source>
          <target state="translated">기본적으로 설치된 패키지는 Octave 프롬프트에서 사용할 수 없지만 &lt;code&gt;pkg load&lt;/code&gt; 및 &lt;code&gt;pkg unload&lt;/code&gt; 명령을 사용하여 패키지 를 제어 할 수 있습니다 . 다음을 입력하여 패키지의 기능을 옥타브 경로에 추가 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a0f43f0328e9708b882c4896f046a6014fdf97f5" translate="yes" xml:space="preserve">
          <source>By default the arguments are evaluated with &lt;code&gt;feval (@plot, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. However the type of plot can be modified with the &lt;var&gt;fun&lt;/var&gt; argument, in which case the plots are generated by &lt;code&gt;feval (&lt;var&gt;fun&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;fun&lt;/var&gt; can be a function handle, an inline function, or a string of a function name.</source>
          <target state="translated">기본적으로 인수는 &lt;code&gt;feval (@plot, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 로 평가됩니다 . 그러나 &lt;var&gt;fun&lt;/var&gt; 인수를 사용하여 플롯 유형을 수정할 수 있으며 ,이 경우 플롯은 &lt;code&gt;feval (&lt;var&gt;fun&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 로 생성됩니다 . &lt;var&gt;fun&lt;/var&gt; 은 함수 핸들, 인라인 함수 또는 함수 이름의 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f59e43a905190e7beb0413e84a6573138a05215" translate="yes" xml:space="preserve">
          <source>By default the complex pairs are sorted along the first non-singleton dimension of &lt;var&gt;z&lt;/var&gt;. If &lt;var&gt;dim&lt;/var&gt; is specified, then the complex pairs are sorted along this dimension.</source>
          <target state="translated">기본적으로 복소수 쌍은 첫 번째 비단 일 치수 &lt;var&gt;z&lt;/var&gt; 에 따라 정렬됩니다 . &lt;var&gt;dim&lt;/var&gt; 을 지정 하면 이 쌍을 따라 복소수 쌍이 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="0bda86c3cd61039ba6b9a4b1a6a08fa849229b39" translate="yes" xml:space="preserve">
          <source>By default the values are displayed with the name of the variable &lt;var&gt;c&lt;/var&gt;. However, this name can be replaced with the variable &lt;var&gt;name&lt;/var&gt;. For example:</source>
          <target state="translated">기본적으로 값은 변수 &lt;var&gt;c&lt;/var&gt; 의 이름으로 표시됩니다 . 그러나이 이름은 변수 &lt;var&gt;name&lt;/var&gt; 바꿀 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f0cc2c3dfa642100bcdb50d982ffbb73ce3005c" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 2&lt;/code&gt; is used which implies a (relatively slow) singular value decomposition. Other possible selections are &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 1, Inf, &quot;fro&quot;&lt;/code&gt; which are generally faster. See &lt;code&gt;norm&lt;/code&gt; for a full discussion of possible &lt;var&gt;p&lt;/var&gt; values.</source>
          <target state="translated">기본적으로 &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 2&lt;/code&gt; 가 사용되며 (상대적으로 느린) 특이 값 분해를 의미합니다. 다른 가능한 선택은 &lt;code&gt;&lt;var&gt;p&lt;/var&gt; = 1, Inf, &quot;fro&quot;&lt;/code&gt; 이며 일반적으로 더 빠릅니다. 가능한 &lt;var&gt;p&lt;/var&gt; 값에 대한 자세한 내용은 &lt;code&gt;norm&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d9170dd699561c9ab7aba216d9995243893c298" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;eigs&lt;/code&gt; solve the equation where is the corresponding eigenvector. If given the positive definite matrix &lt;var&gt;B&lt;/var&gt; then &lt;code&gt;eigs&lt;/code&gt; solves the general eigenvalue equation</source>
          <target state="translated">기본적으로 &lt;code&gt;eigs&lt;/code&gt; 는 해당 고유 벡터가있는 방정식을 해결합니다. 포지티브 명확한 매트릭스 주어진 경우 &lt;var&gt;B&lt;/var&gt; 다음 &lt;code&gt;eigs&lt;/code&gt; 로 해결할에게 일반 고유치 방정식</target>
        </trans-unit>
        <trans-unit id="e7ebccfa3e2c0399c46601b4c99a927c2dad3626" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ichol&lt;/code&gt; uses only the lower triangle of &lt;var&gt;A&lt;/var&gt; and produces a lower triangular factor &lt;var&gt;L&lt;/var&gt; such that &lt;code&gt;L*L'&lt;/code&gt; approximates &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">기본적으로, &lt;code&gt;ichol&lt;/code&gt; 은 &lt;var&gt;A&lt;/var&gt; 의 아래쪽 삼각형 만 사용 하고 &lt;code&gt;L*L'&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; 와 근사 하도록 삼각형 요소 &lt;var&gt;L&lt;/var&gt; 을 낮 춥니 다 .</target>
        </trans-unit>
        <trans-unit id="54099468baa3e6972f8efbd022985d80fa0d109e" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;lookfor&lt;/code&gt; looks for &lt;var&gt;str&lt;/var&gt; in just the first sentence of the help string for each function found. The entire help text of each function can be searched by using the &lt;code&gt;&quot;-all&quot;&lt;/code&gt; argument. All searches are case insensitive.</source>
          <target state="translated">기본적으로 &lt;code&gt;lookfor&lt;/code&gt; 는 찾은 각 함수에 대한 도움말 문자열의 첫 번째 문장에서 &lt;var&gt;str&lt;/var&gt; 을 찾습니다 . &lt;code&gt;&quot;-all&quot;&lt;/code&gt; 인수를 사용하여 각 함수의 전체 도움말 텍스트를 검색 할 수 있습니다 . 모든 검색은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4245eb185865c1d9d2b01ec31984d659e850cf27" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ode23&lt;/code&gt; uses an adaptive timestep with the &lt;code&gt;integrate_adaptive&lt;/code&gt; algorithm. The tolerance for the timestep computation may be changed by using the options &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; and &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;ode23&lt;/code&gt; 은 &lt;code&gt;integrate_adaptive&lt;/code&gt; 알고리즘 과 함께 적응 형 시간 단계를 사용합니다 . &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt; 옵션을 사용하여 타임 스텝 계산에 대한 허용 오차를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6e7d49b7c2225c2a5fb05f109668206696fb5ae" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ode23s&lt;/code&gt; uses an adaptive timestep with the &lt;code&gt;integrate_adaptive&lt;/code&gt; algorithm. The tolerance for the timestep computation may be changed by using the options &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; and &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a060989155db8cdee80642f11c52faf944240b" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ode45&lt;/code&gt; uses an adaptive timestep with the &lt;code&gt;integrate_adaptive&lt;/code&gt; algorithm. The tolerance for the timestep computation may be changed by using the options &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; and &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;ode45&lt;/code&gt; 는 &lt;code&gt;integrate_adaptive&lt;/code&gt; _ 적응 알고리즘 과 함께 적응 형 시간 단계를 사용합니다 . &lt;code&gt;&quot;RelTol&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;AbsTol&quot;&lt;/code&gt; 옵션을 사용하여 타임 스텝 계산에 대한 허용 오차를 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2690c437693dc3d9d7db3f328bad57c86d05518a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;rande&lt;/code&gt; uses the Marsaglia and Tsang &amp;ldquo;Ziggurat technique&amp;rdquo; to transform from a uniform to an exponential distribution.</source>
          <target state="translated">&lt;code&gt;rande&lt;/code&gt; 는 기본적으로 Marsaglia 및 Tsang&amp;ldquo;Ziggurat 기술&amp;rdquo;을 사용하여 균일 분포에서 지수 분포로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2f57bce0568aba3827b242d08bdc5806545b452d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;randn&lt;/code&gt; uses the Marsaglia and Tsang &amp;ldquo;Ziggurat technique&amp;rdquo; to transform from a uniform to a normal distribution.</source>
          <target state="translated">기본적으로 &lt;code&gt;randn&lt;/code&gt; 은 Marsaglia 및 Tsang&amp;ldquo;Ziggurat 기술&amp;rdquo;을 사용하여 균일 분포에서 정규 분포로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="771057781c712bb823f17511b113b57a83ae32d5" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;filename&lt;/var&gt; is &lt;code&gt;&quot;Untitled.fig&quot;&lt;/code&gt;. If a full path is not specified, the file opened will be the first one encountered in the load path. If &lt;var&gt;filename&lt;/var&gt; is not found and does not have an extension, a search will take place for the first file in the load path with extension &lt;code&gt;&quot;.fig&quot;&lt;/code&gt; or &lt;code&gt;&quot;.ofig&quot;&lt;/code&gt;, in that order.</source>
          <target state="translated">기본적으로 &lt;var&gt;filename&lt;/var&gt; 은 &lt;code&gt;&quot;Untitled.fig&quot;&lt;/code&gt; 입니다. 전체 경로를 지정하지 않으면 열린 파일이로드 경로에서 처음 발견됩니다. 경우 &lt;var&gt;filename&lt;/var&gt; 발견되지 않는 및 확장이없는, 검색이 확장자를 가진 부하 경로의 첫 번째 파일 일어날 것이다 &lt;code&gt;&quot;.fig&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;.ofig&quot;&lt;/code&gt; 이 순서대로.</target>
        </trans-unit>
        <trans-unit id="45871410def70663d261c62363fb4f54949d2622" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;format&lt;/var&gt; is</source>
          <target state="translated">기본적으로 &lt;var&gt;format&lt;/var&gt; 은</target>
        </trans-unit>
        <trans-unit id="c748c4c7f2122f0a5b33e4ea60f964d04c4a81e0" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;&quot;ascend&quot;&lt;/code&gt;. NaNs are treated in the same manner as &lt;code&gt;sort&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e381c3192c19cd2c093bc57365d36ecbea474c" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;&quot;ascending&quot;&lt;/code&gt;. NaNs are treated in the same manner as &lt;code&gt;sort&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;var&gt;mode&lt;/var&gt; 는 &lt;code&gt;&quot;ascending&quot;&lt;/code&gt; 입니다. NaN은 &lt;code&gt;sort&lt;/code&gt; 와 동일한 방식으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="962e7405ade926a43a02d49216368a102fe31670" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the incomplete beta function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt; then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to 1 is calculated. The two choices are related by</source>
          <target state="translated">기본적으로 &lt;var&gt;tail&lt;/var&gt; 은 &lt;code&gt;&quot;lower&quot;&lt;/code&gt; 이며 0에서 &lt;var&gt;x&lt;/var&gt; 까지 통합 된 불완전한 베타 기능 이 계산됩니다. 경우 &lt;var&gt;tail&lt;/var&gt; 이며 &lt;code&gt;&quot;upper&quot;&lt;/code&gt; 다음에서 통합 상보 함수 &lt;var&gt;x&lt;/var&gt; (1)이 산출된다. 두 가지 선택은</target>
        </trans-unit>
        <trans-unit id="8fda712be761f4b66125d33d2d184d2fdcabba1f" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the incomplete gamma function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt; then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to infinity is calculated.</source>
          <target state="translated">기본적으로 &lt;var&gt;tail&lt;/var&gt; 은 &lt;code&gt;&quot;lower&quot;&lt;/code&gt; 이며 0에서 &lt;var&gt;x&lt;/var&gt; 까지 통합 된 불완전한 감마 함수 가 계산됩니다. 경우 &lt;var&gt;tail&lt;/var&gt; 이며 &lt;code&gt;&quot;upper&quot;&lt;/code&gt; 다음에서 통합 상보 함수 &lt;var&gt;x&lt;/var&gt; 무한대로 산출한다.</target>
        </trans-unit>
        <trans-unit id="77aaf68055c6e56c3400b712e43ffbc0c79469a0" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the inverse of the incomplete beta function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt; then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to 1 is inverted.</source>
          <target state="translated">기본적으로 &lt;var&gt;tail&lt;/var&gt; 은 &lt;code&gt;&quot;lower&quot;&lt;/code&gt; 이며 0에서 &lt;var&gt;x&lt;/var&gt; 로 통합 된 불완전한 베타 함수의 역수 가 계산됩니다. 경우 &lt;var&gt;tail&lt;/var&gt; 이며 &lt;code&gt;&quot;upper&quot;&lt;/code&gt; 다음에서 통합 상보 함수 &lt;var&gt;x&lt;/var&gt; (1)가 반전된다.</target>
        </trans-unit>
        <trans-unit id="960e5788edd8f03b5140d1f398117baa0b86b060" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; and the inverse of the incomplete gamma function integrated from 0 to &lt;var&gt;x&lt;/var&gt; is computed. If &lt;var&gt;tail&lt;/var&gt; is &lt;code&gt;&quot;upper&quot;&lt;/code&gt;, then the complementary function integrated from &lt;var&gt;x&lt;/var&gt; to infinity is inverted.</source>
          <target state="translated">기본적으로 &lt;var&gt;tail&lt;/var&gt; 은 &lt;code&gt;&quot;lower&quot;&lt;/code&gt; 이며 0에서 &lt;var&gt;x&lt;/var&gt; 로 통합 된 불완전한 감마 함수의 역수 가 계산됩니다. 경우 &lt;var&gt;tail&lt;/var&gt; 이며 &lt;code&gt;&quot;upper&quot;&lt;/code&gt; , 다음에서 통합 상보 함수 &lt;var&gt;x&lt;/var&gt; 무한대가 반전된다.</target>
        </trans-unit>
        <trans-unit id="27ad8a664f24c5645d584b7da4b1e8d378a867b2" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;y&lt;/var&gt; is automatically normalized to the range [-1, 1]. If the range [&lt;var&gt;ymin&lt;/var&gt;, &lt;var&gt;ymax&lt;/var&gt;] is given, then elements of &lt;var&gt;y&lt;/var&gt; that fall within the range &lt;var&gt;ymin&lt;/var&gt; &amp;le; &lt;var&gt;y&lt;/var&gt; &amp;le; &lt;var&gt;ymax&lt;/var&gt; are scaled to the range [-1, 1] instead.</source>
          <target state="translated">기본적으로 &lt;var&gt;y&lt;/var&gt; 는 [-1, 1] 범위로 자동 정규화됩니다. [ &lt;var&gt;ymin&lt;/var&gt; , &lt;var&gt;ymax&lt;/var&gt; ] 범위 가 제공되면, &lt;var&gt;ymin&lt;/var&gt; &amp;le; &lt;var&gt;y&lt;/var&gt; &amp;le; &lt;var&gt;ymax&lt;/var&gt; 범위에 속하는 &lt;var&gt;y&lt;/var&gt; 의 요소는 대신 [-1, 1] 범위로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="99f84dc3782311b359b3fffc87181c379a31df75" translate="yes" xml:space="preserve">
          <source>By default, Octave displays 5 significant digits in a human readable form (option &amp;lsquo;</source>
          <target state="translated">기본적으로 Octave는 사람이 읽을 수있는 형태로 5 자리 유효 숫자를 표시합니다 (옵션 '</target>
        </trans-unit>
        <trans-unit id="05063acf2fe1c0cb572eb7c9e74c0154d501fcb0" translate="yes" xml:space="preserve">
          <source>By default, Octave refreshes the plot window when a prompt is printed, or when waiting for input. The &lt;code&gt;drawnow&lt;/code&gt; function is used to cause a plot window to be updated.</source>
          <target state="translated">기본적으로 옥타브는 프롬프트가 인쇄되거나 입력을 기다릴 때 플롯 창을 새로 고칩니다. &lt;code&gt;drawnow&lt;/code&gt; 의 기능은 플롯 윈도우 업데이트되도록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9992b8aea62671d12e43172ccacc3f47113d0b07" translate="yes" xml:space="preserve">
          <source>By default, Octave&amp;rsquo;s image IO functions (&lt;code&gt;imread&lt;/code&gt;, &lt;code&gt;imwrite&lt;/code&gt;, and &lt;code&gt;imfinfo&lt;/code&gt;) use the &lt;code&gt;GraphicsMagick&lt;/code&gt; library for their operations. This means a vast number of image formats is supported but considering the large amount of image formats in science and its commonly closed nature, it is impossible to have a library capable of reading them all. Because of this, the function &lt;code&gt;imformats&lt;/code&gt; keeps a configurable list of available formats, their extensions, and what functions should the image IO functions use. This allows one to expand Octave&amp;rsquo;s image IO capabilities by creating functions aimed at acting on specific file formats.</source>
          <target state="translated">기본적으로 Octave의 이미지 IO 함수 ( &lt;code&gt;imread&lt;/code&gt; , &lt;code&gt;imwrite&lt;/code&gt; 및 &lt;code&gt;imfinfo&lt;/code&gt; ) 는 해당 작업에 &lt;code&gt;GraphicsMagick&lt;/code&gt; 라이브러리를 사용합니다 . 이는 방대한 수의 이미지 형식이 지원되지만 과학에서 많은 양의 이미지 형식과 일반적으로 닫힌 특성을 고려할 때 모든 이미지를 읽을 수있는 라이브러리를 갖는 것은 불가능합니다. 따라서 &lt;code&gt;imformats&lt;/code&gt; 함수 는 사용 가능한 형식, 확장명 및 이미지 IO 함수가 사용해야하는 기능의 구성 가능한 목록을 유지합니다. 이를 통해 특정 파일 형식으로 작동하는 기능을 만들어 Octave의 이미지 IO 기능을 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21de4a7ffd6af095ca4fad3f748e62bc3d65fda2" translate="yes" xml:space="preserve">
          <source>By default, PDF inherits the same limitations as PostScript. For an enhanced output with complete text support and basic transparency, use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90b2e0839829076fd1af76568f267aa7e4d66fc" translate="yes" xml:space="preserve">
          <source>By default, all contours are labeled. However, the contours to label can be specified by the vector &lt;var&gt;v&lt;/var&gt;. If the &lt;code&gt;&quot;manual&quot;&lt;/code&gt; argument is given then the contours to label can be selected with the mouse.</source>
          <target state="translated">기본적으로 모든 윤곽선에는 레이블이 지정되어 있습니다. 그러나 레이블을 지정할 윤곽은 벡터 &lt;var&gt;v&lt;/var&gt; 로 지정할 수 있습니다 . 경우 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 인수가 지정되어 레이블 윤곽은 마우스로 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34d9754aafa7435658c5a76b6aff00e485aba87d" translate="yes" xml:space="preserve">
          <source>By default, configure looks for the best &lt;small&gt;BLAS&lt;/small&gt; matrix libraries on your system, including optimized implementations such as the free ATLAS 3.0, as well as vendor-tuned libraries. (The use of an optimized &lt;small&gt;BLAS&lt;/small&gt; will generally result in several-times faster matrix operations.) Use this option to specify a particular &lt;small&gt;BLAS&lt;/small&gt; library that Octave should use.</source>
          <target state="translated">기본적으로 configure는 무료 ATLAS 3.0과 같은 최적화 된 구현 및 공급 업체 조정 라이브러리를 포함하여 시스템 에서 최상의 &lt;small&gt;BLAS&lt;/small&gt; 매트릭스 라이브러리를 찾습니다 . (최적화 된 &lt;small&gt;BLAS를 사용&lt;/small&gt; 하면 일반적으로 몇 배 더 빠른 매트릭스 연산이 발생합니다.) Octave가 사용해야 하는 특정 &lt;small&gt;BLAS&lt;/small&gt; 라이브러리 를 지정하려면이 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="705ae32b51a1b1945fa2fc7ac0aaae142c0de76d" translate="yes" xml:space="preserve">
          <source>By default, configure looks for the best &lt;small&gt;LAPACK&lt;/small&gt; matrix libraries on your system, including optimized implementations such as the free ATLAS 3.0, as well as vendor-tuned libraries. (The use of an optimized &lt;small&gt;LAPACK&lt;/small&gt; will generally result in several-times faster matrix operations.) Use this option to specify a particular &lt;small&gt;LAPACK&lt;/small&gt; library that Octave should use.</source>
          <target state="translated">기본적으로 configure는 무료 ATLAS 3.0과 같은 최적화 된 구현 및 공급 업체 조정 라이브러리를 포함하여 시스템 에서 최상의 &lt;small&gt;LAPACK&lt;/small&gt; 매트릭스 라이브러리를 찾습니다 . (최적화 된 &lt;small&gt;LAPACK을 사용&lt;/small&gt; 하면 일반적으로 몇 배 더 빠른 매트릭스 작업이 발생합니다.) Octave가 사용해야 하는 특정 &lt;small&gt;LAPACK&lt;/small&gt; 라이브러리 를 지정하려면이 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6ca2e87d532774d938b9da16a847665c9e9163ab" translate="yes" xml:space="preserve">
          <source>By default, dimensions of the empty matrix are printed along with the empty matrix symbol, &amp;lsquo;</source>
          <target state="translated">기본적으로 빈 행렬의 크기는 빈 행렬 기호 '</target>
        </trans-unit>
        <trans-unit id="b6816a83578a0690161e75de3a0d133670e8ab9a" translate="yes" xml:space="preserve">
          <source>By default, high level plotting functions such as &lt;code&gt;plot&lt;/code&gt; reset and redefine axes properties independently from the defaults. An example of such property is the axes &lt;code&gt;box&lt;/code&gt; property: it is set &lt;code&gt;on&lt;/code&gt; by high level 2-D graphics functions regardless of the property &lt;code&gt;&quot;defaultaxesbox&quot;&lt;/code&gt;. Use the &lt;code&gt;hold&lt;/code&gt; function to prevent this behavior:</source>
          <target state="translated">기본적으로 &lt;code&gt;plot&lt;/code&gt; 재설정 및 축 속성 재정의와 같은 높은 수준의 플로팅 기능 은 기본값과 독립적입니다. 이러한 특성의 예는 축이 &lt;code&gt;box&lt;/code&gt; 속성 : 이는 설정 &lt;code&gt;on&lt;/code&gt; 관계없이 하이 레벨의 속성 2-D 그래픽 기능에 의해 &lt;code&gt;&quot;defaultaxesbox&quot;&lt;/code&gt; . 사용 &lt;code&gt;hold&lt;/code&gt; 이 문제를 방지하는 기능을 :</target>
        </trans-unit>
        <trans-unit id="671bfd99983ad0f62c56aee5bdaaef606eaba638" translate="yes" xml:space="preserve">
          <source>By default, if there is only one input argument, &lt;var&gt;format&lt;/var&gt; is</source>
          <target state="translated">기본적으로 입력 인수가 하나만 있으면 &lt;var&gt;format&lt;/var&gt; 은</target>
        </trans-unit>
        <trans-unit id="4c8ab8ebab05f4de3892eb2b5a0cd876413a08d3" translate="yes" xml:space="preserve">
          <source>By default, in the example &lt;var&gt;prop4&lt;/var&gt;, properties are not constant and have public read and write access.</source>
          <target state="translated">기본적으로 &lt;var&gt;prop4&lt;/var&gt; 예제 에서 특성은 상수가 아니며 공용 읽기 및 쓰기 액세스 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cd04ebbeb34449f4ca033db3c8023f7e5f6a6ea" translate="yes" xml:space="preserve">
          <source>By default, integers are read as 32-bit quantities. With the &amp;lsquo;</source>
          <target state="translated">기본적으로 정수는 32 비트 수량으로 읽습니다. 이랑 '</target>
        </trans-unit>
        <trans-unit id="a778586cc92007126dab49bd24000a45ad2eff82" translate="yes" xml:space="preserve">
          <source>By default, only variables visible in the local scope are displayed.</source>
          <target state="translated">기본적으로 로컬 범위에서 볼 수있는 변수 만 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d002bc66f22ec4aab067d6f7808f3cfa269450c3" translate="yes" xml:space="preserve">
          <source>By default, recognized file types are</source>
          <target state="translated">기본적으로 인식되는 파일 형식은</target>
        </trans-unit>
        <trans-unit id="49f69b060c5ed1ed2a65a686a7f1152fe8a92811" translate="yes" xml:space="preserve">
          <source>By default, return an empty string if the &lt;var&gt;n&lt;/var&gt;-th argument is not a valid variable name. If the optional argument &lt;var&gt;ids_only&lt;/var&gt; is false, return the text of the argument even if it is not a valid variable name.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 번째 인수가 유효한 변수 이름이 아닌 경우 기본적으로 빈 문자열을 반환하십시오 . 선택적 인수 &lt;var&gt;ids_only&lt;/var&gt; 가 false 인 경우 유효한 변수 이름이 아니더라도 인수의 텍스트를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="903f4f5babb2c841da82c2520f28144fbb2488e7" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;&quot;closerequestfcn&quot;&lt;/code&gt; property of a new plot figure points to this function.</source>
          <target state="translated">기본적 으로 새 플롯 도형 의 &lt;code&gt;&quot;closerequestfcn&quot;&lt;/code&gt; 속성은이 함수를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="53f66db3502863ae4dd3d11c7110cc7b185b83dd" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:abbreviated-property-match&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:abbreviated-property-match&lt;/code&gt; 경고가 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="332aa18004c12617323ed812f41a8b94880dfa78" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:assign-as-truth-value&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:assign-as-truth-value&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0d79b932ac250e11cad8e0baeaae0e1a5f807d69" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:built-in-variable-assignment&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:built-in-variable-assignment&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="83aa9346bf7eb6dabc6891a94ca3f1d13e9f2ada" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:glyph-render&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:glyph-render&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fbe06b60aa6cc0728710e1111b011062dec73da2" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:logical-conversion&lt;/code&gt; warning is enabled.</source>
          <target state="translated">&lt;code&gt;Octave:logical-conversion&lt;/code&gt; 경고는 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="38ec8bc6aecb9ef8458702bea5a486faa9dd7324" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:missing-glyph&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:missing-glyph&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="863d3f4558135a7d484b08579eb4d1f2c580920d" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:neg-dim-as-zero&lt;/code&gt; warning is disabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:neg-dim-as-zero&lt;/code&gt; 경고는 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="88c1718bdd9aeaa3071ee3a4bbc60e2da024a065" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:nested-functions-coerced&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:nested-functions-coerced&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bc31875ba86dec477a9d9822f3a870c3b5668982" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:noninteger-range-as-index&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:noninteger-range-as-index&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6ba074f81796bab81d04489e79994a5f8786ac29" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:recursive-path-search&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:recursive-path-search&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="609a28d01f6efc0ff571b55dd83d004da305eb7f" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:shadowed-function&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:shadowed-function&lt;/code&gt; 경고가 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5fb7de433e437c3badc922d3019334ebf403252" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Octave:sqrtm:SingularMatrix&lt;/code&gt; warning is enabled.</source>
          <target state="translated">기본적으로 &lt;code&gt;Octave:sqrtm:SingularMatrix&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c14280ad33dcc143fb9089c26ad09de0daf18b09" translate="yes" xml:space="preserve">
          <source>By default, the camera is oriented so that &amp;ldquo;up&amp;rdquo; corresponds to the positive z-axis:</source>
          <target state="translated">기본적으로 카메라는 &quot;위&quot;가 양의 z 축에 해당하도록 방향이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a9c6919b997095d5b36131a897e4c0a83ae76d24" translate="yes" xml:space="preserve">
          <source>By default, the generator is initialized from &lt;code&gt;/dev/urandom&lt;/code&gt; if it is available, otherwise from CPU time, wall clock time, and the current fraction of a second. Note that this differs from &lt;small&gt;MATLAB&lt;/small&gt;, which always initializes the state to the same state at startup. To obtain behavior comparable to &lt;small&gt;MATLAB&lt;/small&gt;, initialize with a deterministic state vector in Octave&amp;rsquo;s startup files (see &lt;a href=&quot;startup-files#Startup-Files&quot;&gt;Startup Files&lt;/a&gt;).</source>
          <target state="translated">기본적으로 생성기는 사용 가능한 경우 &lt;code&gt;/dev/urandom&lt;/code&gt; 에서 초기화되고 , 그렇지 않으면 CPU 시간, 벽시계 시간 및 현재의 초 단위로 초기화됩니다 . 이는 시작시 항상 상태를 동일한 상태로 초기화하는 &lt;small&gt;MATLAB&lt;/small&gt; 과 다릅니다 . &lt;small&gt;MATLAB&lt;/small&gt; 과 유사한 동작을 얻으려면 Octave 시작 파일에서 결정 성 상태 벡터로 초기화하십시오 ( &lt;a href=&quot;startup-files#Startup-Files&quot;&gt;시작 파일&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f47378aa96931f9ba6708afb4f2c89fa56e1321d" translate="yes" xml:space="preserve">
          <source>By default, the input array is interpreted as a hexadecimal number representing a double precision value. If fewer than 16 characters are given the strings are right padded with &lt;code&gt;'0'&lt;/code&gt; characters.</source>
          <target state="translated">기본적으로 입력 배열은 배정 밀도 값을 나타내는 16 진수로 해석됩니다. 16 자 미만이 제공되면 문자열은 오른쪽에 &lt;code&gt;'0'&lt;/code&gt; 문자로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="176a5672060ec46f89dea6759cd36615efb0a697" translate="yes" xml:space="preserve">
          <source>By default, the option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a5fcdb9f3c330ee418cac02ea34df92f250c8a" translate="yes" xml:space="preserve">
          <source>By default, these commands affect the current axis; alternatively, an axis can be specified by the optional argument &lt;var&gt;ax&lt;/var&gt;.</source>
          <target state="translated">기본적으로이 명령은 현재 축에 영향을줍니다. 대안 적으로 축은 선택적 인수 &lt;var&gt;ax&lt;/var&gt; 로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3803a40c878156f4d9d1817b93326275e04f6f01" translate="yes" xml:space="preserve">
          <source>By default, this command affects the current axis; alternatively, an axis can be specified by the optional argument &lt;var&gt;hax&lt;/var&gt;.</source>
          <target state="translated">기본적으로이 명령은 현재 축에 영향을줍니다. 또는 선택적 인수 &lt;var&gt;hax&lt;/var&gt; 로 축을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a45cdc61d443f1d99e6a8e08a1a5cac63e13810" translate="yes" xml:space="preserve">
          <source>ByteOrder</source>
          <target state="translated">ByteOrder</target>
        </trans-unit>
        <trans-unit id="8e5fdab92dece79d7629d6d901687613ddc6ab5a" translate="yes" xml:space="preserve">
          <source>Bytes</source>
          <target state="translated">Bytes</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="0bc3ee1876a596878e3b6f64a584499448527564" translate="yes" xml:space="preserve">
          <source>C = bitset (A, n)</source>
          <target state="translated">C = 비트 세트 (A, n)</target>
        </trans-unit>
        <trans-unit id="6a14e061408d2bf9ce4fa57907726c8da1da7eb6" translate="yes" xml:space="preserve">
          <source>C = bitset (A, n, val)</source>
          <target state="translated">C = 비트 세트 (A, n, val)</target>
        </trans-unit>
        <trans-unit id="e49d4ba5e4f8e74b8eccb88ded467291b3d8cdea" translate="yes" xml:space="preserve">
          <source>C = convn (A, B)</source>
          <target state="translated">C = 연속 (A, B)</target>
        </trans-unit>
        <trans-unit id="2ee56f1597039f0b9837b8eacbd7f39c2bc0e447" translate="yes" xml:space="preserve">
          <source>C = convn (A, B, shape)</source>
          <target state="translated">C = convn (A, B, 모양)</target>
        </trans-unit>
        <trans-unit id="a9cff0dea4c5615f3d244f70fc41d49a166f30d0" translate="yes" xml:space="preserve">
          <source>C = mat2cell (A, dim1, dim2, &amp;hellip;, dimi, &amp;hellip;, dimn)</source>
          <target state="translated">C = mat2cell (A, dim1, dim2,&amp;hellip;, dimi,&amp;hellip;, dimn)</target>
        </trans-unit>
        <trans-unit id="eff896167a3787020f945f29769f29ee26792001" translate="yes" xml:space="preserve">
          <source>C = mat2cell (A, rowdim)</source>
          <target state="translated">C = mat2cell (A, 행 차원)</target>
        </trans-unit>
        <trans-unit id="6d5936ed6831a60d9118acd6694b3c622d5cc3a3" translate="yes" xml:space="preserve">
          <source>C = num2cell (A)</source>
          <target state="translated">C = num2 셀 (A)</target>
        </trans-unit>
        <trans-unit id="aee17e6afe750b9904c9af574c8dcf51e245e12c" translate="yes" xml:space="preserve">
          <source>C = num2cell (A, dim)</source>
          <target state="translated">C = num2 셀 (A, 희미)</target>
        </trans-unit>
        <trans-unit id="c2ff6b3bd4be98cd506086c628c6692a3c32651f" translate="yes" xml:space="preserve">
          <source>C = pol2cart (&amp;hellip;)</source>
          <target state="translated">C = pol2cart (&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="91ad1dcb0e3c947d73baf8f19711b26e69e8ffee" translate="yes" xml:space="preserve">
          <source>C = sph2cart (&amp;hellip;)</source>
          <target state="translated">C = sph2cart (&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="dc6905c704e24a018f82d99af5a9d4f63edd339b" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format)</source>
          <target state="translated">C = 텍스트 스캔 (fid, 형식)</target>
        </trans-unit>
        <trans-unit id="c74328f8d7d2c9eb405920deafc77f983d267db9" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format, param, value, &amp;hellip;)</source>
          <target state="translated">C = 텍스트 스캔 (fid, format, param, value,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="5330c52434a7a542d487b2fefe26a4e93bf25efd" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format, repeat)</source>
          <target state="translated">C = 텍스트 스캔 (fid, 형식, 반복)</target>
        </trans-unit>
        <trans-unit id="1e860ebaeca49904601901c0a83c1d94888d6d51" translate="yes" xml:space="preserve">
          <source>C = textscan (fid, format, repeat, param, value, &amp;hellip;)</source>
          <target state="translated">C = 텍스트 스캔 (fid, 형식, 반복, 매개 변수, 값 등)</target>
        </trans-unit>
        <trans-unit id="0ec7dec0586e51e6953d05dbeca4355dde4cff31" translate="yes" xml:space="preserve">
          <source>C = textscan (str, &amp;hellip;)</source>
          <target state="translated">C = 텍스트 스캔 (str,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="b3779eb92018083a391f9b20829772ba736116c7" translate="yes" xml:space="preserve">
          <source>C = who (&quot;pattern&quot;, &amp;hellip;)</source>
          <target state="translated">C = who ( &quot;패턴&quot;,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="80bcac8adff318084c8e98ed8e46417354a83b80" translate="yes" xml:space="preserve">
          <source>C++, C, and Fortran compilers</source>
          <target state="translated">C ++, C 및 Fortran 컴파일러</target>
        </trans-unit>
        <trans-unit id="17c711c5f24857e82930fb87a0780c4e69756903" translate="yes" xml:space="preserve">
          <source>C-/</source>
          <target state="translated">C-/</target>
        </trans-unit>
        <trans-unit id="84a189415a8ed8940815fea4b9d77692a6ff22eb" translate="yes" xml:space="preserve">
          <source>C-Style I/O Functions</source>
          <target state="translated">C 스타일 I / O 기능</target>
        </trans-unit>
        <trans-unit id="5ec9d3dadc7abaeb1f5f16db2365b2aeb6a2f74b" translate="yes" xml:space="preserve">
          <source>C-_</source>
          <target state="translated">C-_</target>
        </trans-unit>
        <trans-unit id="3bff8fb1aa290267671b1c50e3b32db24f00b295" translate="yes" xml:space="preserve">
          <source>C-a</source>
          <target state="translated">C-a</target>
        </trans-unit>
        <trans-unit id="c204a76fc3c1123c96b13dd7ec922d02d4b00e91" translate="yes" xml:space="preserve">
          <source>C-b</source>
          <target state="translated">C-b</target>
        </trans-unit>
        <trans-unit id="b3b7965656c0921692a30673d7781acd51c4eed9" translate="yes" xml:space="preserve">
          <source>C-c</source>
          <target state="translated">C-c</target>
        </trans-unit>
        <trans-unit id="1d8e75405de8be939b05db3eef9ab4daa516674d" translate="yes" xml:space="preserve">
          <source>C-d</source>
          <target state="translated">C-d</target>
        </trans-unit>
        <trans-unit id="a7ef1e89e28b60bd53a0a5ab746fbcd131fdf224" translate="yes" xml:space="preserve">
          <source>C-e</source>
          <target state="translated">C-e</target>
        </trans-unit>
        <trans-unit id="dd71d43937255c2ba419c077fa824865f8267186" translate="yes" xml:space="preserve">
          <source>C-f</source>
          <target state="translated">C-f</target>
        </trans-unit>
        <trans-unit id="a8d14a9f4bc55d9a8a84935ad37682321efb17a6" translate="yes" xml:space="preserve">
          <source>C-h</source>
          <target state="translated">C-h</target>
        </trans-unit>
        <trans-unit id="d5eeac2f32301e2b964f421e02a44c5afa000881" translate="yes" xml:space="preserve">
          <source>C-k</source>
          <target state="translated">C-k</target>
        </trans-unit>
        <trans-unit id="2fef5b5a274737535a312ecc5d6b8de717c1cb77" translate="yes" xml:space="preserve">
          <source>C-l</source>
          <target state="translated">C-l</target>
        </trans-unit>
        <trans-unit id="aa3408adf600065cf33c17971e8cdd9f76e5d785" translate="yes" xml:space="preserve">
          <source>C-n</source>
          <target state="translated">C-n</target>
        </trans-unit>
        <trans-unit id="332268c029d8126391ff9151361238bdf44870d8" translate="yes" xml:space="preserve">
          <source>C-p</source>
          <target state="translated">C-p</target>
        </trans-unit>
        <trans-unit id="1666955c646a9bb3fabdb2404112bd45b66ccb34" translate="yes" xml:space="preserve">
          <source>C-q</source>
          <target state="translated">C-q</target>
        </trans-unit>
        <trans-unit id="74b18abb702cb69395f60707416dd8e1f9e92a32" translate="yes" xml:space="preserve">
          <source>C-r</source>
          <target state="translated">C-r</target>
        </trans-unit>
        <trans-unit id="78540d990eb5e51e46b3d550d8999b517398872e" translate="yes" xml:space="preserve">
          <source>C-s</source>
          <target state="translated">C-s</target>
        </trans-unit>
        <trans-unit id="68b4cf03a08cd7bf7acc0d39d68cca6ef0f409f3" translate="yes" xml:space="preserve">
          <source>C-t</source>
          <target state="translated">C-t</target>
        </trans-unit>
        <trans-unit id="0a23d9de112f4305bbf7d308788b4615cc11e2a2" translate="yes" xml:space="preserve">
          <source>C-v</source>
          <target state="translated">C-v</target>
        </trans-unit>
        <trans-unit id="8e0be97e2cc76979d93e15014888863a6e79a7af" translate="yes" xml:space="preserve">
          <source>C-w</source>
          <target state="translated">C-w</target>
        </trans-unit>
        <trans-unit id="f286461016d3e4db77e8a575a1f55b2d71886961" translate="yes" xml:space="preserve">
          <source>C-y</source>
          <target state="translated">C-y</target>
        </trans-unit>
        <trans-unit id="acbbb692ba3dcc7f0dd54066ac8990ff1950dc9c" translate="yes" xml:space="preserve">
          <source>C-z</source>
          <target state="translated">C-z</target>
        </trans-unit>
        <trans-unit id="43180da43f2637477932872d2d5fc136913ff600" translate="yes" xml:space="preserve">
          <source>C.T. Kelley,</source>
          <target state="translated">CT 켈리,</target>
        </trans-unit>
        <trans-unit id="45eeb8d006b7750ef8b9a5c95a126e79ee0a3130" translate="yes" xml:space="preserve">
          <source>C:\Octave\Octave-&lt;var&gt;version&lt;/var&gt;</source>
          <target state="translated">C:\Octave\Octave-&lt;var&gt;version&lt;/var&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
