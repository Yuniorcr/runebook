<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="octave">
    <body>
      <group id="octave">
        <trans-unit id="d8cb935bd696fba52ceb0acbe48e4e3aff3c8f73" translate="yes" xml:space="preserve">
          <source>The string is written to the file with no additional formatting. Use &lt;code&gt;fdisp&lt;/code&gt; instead to automatically append a newline character appropriate for the local machine.</source>
          <target state="translated">문자열은 추가 형식없이 파일에 기록됩니다. 대신 로컬 시스템에 적합한 줄 바꾸기 문자를 자동으로 추가 하려면 &lt;code&gt;fdisp&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fdcf603d8f4548f603e553134aaf223621f400f8" translate="yes" xml:space="preserve">
          <source>The string is written verbatim to the standard output. Use &lt;code&gt;disp&lt;/code&gt; to automatically append a newline character appropriate for the local machine.</source>
          <target state="translated">문자열은 표준 출력에 그대로 쓰여집니다. &lt;code&gt;disp&lt;/code&gt; 를 사용 하여 로컬 시스템에 적합한 개행 문자를 자동으로 추가 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d81426525d2e27f04523b286cb21b46da40ddd01" translate="yes" xml:space="preserve">
          <source>The string must be in one of the following formats where a and b are real numbers and the complex unit is &lt;code&gt;'i'&lt;/code&gt; or &lt;code&gt;'j'&lt;/code&gt;:</source>
          <target state="translated">문자열은 a 및 b가 실수이고 복소수 단위가 &lt;code&gt;'i'&lt;/code&gt; 또는 &lt;code&gt;'j'&lt;/code&gt; 인 다음 형식 중 하나 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="f790ee92e81eb7bab3a0391efa2229a45beeb350" translate="yes" xml:space="preserve">
          <source>The string representation used by Octave is an array of characters, so internally the string &lt;code&gt;&quot;dddddddddd&quot;&lt;/code&gt; is actually a row vector of length 10 containing the value 100 in all places (100 is the ASCII code of &lt;code&gt;&quot;d&quot;&lt;/code&gt;). This lends itself to the obvious generalization to character matrices. Using a matrix of characters, it is possible to represent a collection of same-length strings in one variable. The convention used in Octave is that each row in a character matrix is a separate string, but letting each column represent a string is equally possible.</source>
          <target state="translated">Octave에서 사용하는 문자열 표현은 문자 배열이므로 내부적으로 문자열 &lt;code&gt;&quot;dddddddddd&quot;&lt;/code&gt; 는 실제로 모든 위치에서 값 100을 포함하는 길이 10의 행 벡터입니다 (100은 &lt;code&gt;&quot;d&quot;&lt;/code&gt; 의 ASCII 코드 임 ). 이것은 문자 행렬에 대한 명백한 일반화에 적합합니다. 문자 행렬을 사용하면 하나의 변수에 같은 길이의 문자열 모음을 나타낼 수 있습니다. 옥타브에서 사용되는 규칙은 문자 행렬의 각 행이 별도의 문자열이지만 각 열이 문자열을 나타내도록 허용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b4dec5e13b2e4a9899d984ff77c21a0c66627fd9" translate="yes" xml:space="preserve">
          <source>The string to use for the help text of the function.</source>
          <target state="translated">함수의 도움말 텍스트에 사용할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="1f0357cd0c45ef9a85aa49ea092e295d04833f3b" translate="yes" xml:space="preserve">
          <source>The structure &lt;var&gt;options&lt;/var&gt; can have the following field names. If a field name is not specified, the default value is used:</source>
          <target state="translated">구조 &lt;var&gt;options&lt;/var&gt; 은 다음과 같은 필드 이름을 가질 수 있습니다. 필드 이름을 지정하지 않으면 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fce167b4f185646e4efdca9062bbc6c28bf4678b" translate="yes" xml:space="preserve">
          <source>The structure &lt;var&gt;s&lt;/var&gt; always contains these three fields:</source>
          <target state="translated">구조는 &lt;var&gt;s&lt;/var&gt; 는 항상이 세 가지 필드를 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="f3a578d85e8680807a6c4fa79a365330fb9d53d9" translate="yes" xml:space="preserve">
          <source>The structure must contain the fields &lt;code&gt;&quot;handle&quot;&lt;/code&gt;, &lt;code&gt;&quot;type&quot;&lt;/code&gt;, &lt;code&gt;&quot;children&quot;&lt;/code&gt;, &lt;code&gt;&quot;properties&quot;&lt;/code&gt;, and &lt;code&gt;&quot;special&quot;&lt;/code&gt;.</source>
          <target state="translated">구조에는 &lt;code&gt;&quot;handle&quot;&lt;/code&gt; , &lt;code&gt;&quot;type&quot;&lt;/code&gt; , &lt;code&gt;&quot;children&quot;&lt;/code&gt; , &lt;code&gt;&quot;properties&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;special&quot;&lt;/code&gt; 필드가 포함되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="071fec8f51538c9f8d58b707bcdfec79ee509004" translate="yes" xml:space="preserve">
          <source>The style to use for the plot can be defined with a line style &lt;var&gt;style&lt;/var&gt; of the same format as the &lt;code&gt;plot&lt;/code&gt; command.</source>
          <target state="translated">플롯에 사용할 &lt;var&gt;style&lt;/var&gt; 은 &lt;code&gt;plot&lt;/code&gt; 명령 과 동일한 형식의 선 스타일 스타일 로 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="defc2f90616739c78331a0dc859d222b7d97e01e" translate="yes" xml:space="preserve">
          <source>The style to use for the plot can be defined with a line style &lt;var&gt;style&lt;/var&gt; of the same format as the &lt;code&gt;plot&lt;/code&gt; command. If a marker is specified then the markers are drawn at the origin of the vectors (which are the grid points defined by &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;). When a marker is specified, the arrowhead is not drawn. If the argument &lt;code&gt;&quot;filled&quot;&lt;/code&gt; is given then the markers are filled.</source>
          <target state="translated">플롯에 사용할 &lt;var&gt;style&lt;/var&gt; 은 &lt;code&gt;plot&lt;/code&gt; 명령 과 동일한 형식의 선 스타일 스타일 로 정의 할 수 있습니다 . 마커가 지정되면 벡터의 원점 ( &lt;var&gt;x&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 로 정의 된 그리드 점)에 마커가 그려집니다 . 마커가 지정되면 화살촉이 그려지지 않습니다. 인수 &lt;code&gt;&quot;filled&quot;&lt;/code&gt; 가 주어지면 마커가 채워집니다.</target>
        </trans-unit>
        <trans-unit id="46f2218573cc529b9daf8940f089ee62acbed084" translate="yes" xml:space="preserve">
          <source>The style to use for the plot can be defined with a line style &lt;var&gt;style&lt;/var&gt; of the same format as the &lt;code&gt;plot&lt;/code&gt; command. If a marker is specified then the markers are drawn at the origin of the vectors (which are the grid points defined by &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;). When a marker is specified, the arrowhead is not drawn. If the argument &lt;code&gt;&quot;filled&quot;&lt;/code&gt; is given then the markers are filled.</source>
          <target state="translated">플롯에 사용할 &lt;var&gt;style&lt;/var&gt; 은 &lt;code&gt;plot&lt;/code&gt; 명령 과 동일한 형식의 선 스타일 스타일 로 정의 할 수 있습니다 . 마커가 지정된 경우 마커는 벡터의 원점 ( &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; , &lt;var&gt;z&lt;/var&gt; 로 정의 된 그리드 점)에 그려집니다 . 마커가 지정되면 화살촉이 그려지지 않습니다. 인수 &lt;code&gt;&quot;filled&quot;&lt;/code&gt; 가 주어지면 마커가 채워집니다.</target>
        </trans-unit>
        <trans-unit id="e69b5228ec98932f9c88fb08909411da5b171487" translate="yes" xml:space="preserve">
          <source>The subscript &lt;var&gt;idx&lt;/var&gt; must be a structure array with fields &amp;lsquo;</source>
          <target state="translated">아래 첨자 &lt;var&gt;idx&lt;/var&gt; 는 '</target>
        </trans-unit>
        <trans-unit id="ebd882cdae4a1432551f63e32dcdd850b276a307" translate="yes" xml:space="preserve">
          <source>The subscripts are defined by the index vector &lt;var&gt;subs&lt;/var&gt;. The dimension is specified by &lt;var&gt;dim&lt;/var&gt;. If not given, it defaults to the first non-singleton dimension. The length of &lt;var&gt;subs&lt;/var&gt; must be equal to &lt;code&gt;size (&lt;var&gt;vals&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">첨자는 인덱스 벡터 &lt;var&gt;subs&lt;/var&gt; 에 의해 정의됩니다 . 차원은 &lt;var&gt;dim&lt;/var&gt; 으로 지정됩니다 . 지정하지 않으면 기본값은 단일 비단 일 치수입니다. &lt;var&gt;subs&lt;/var&gt; 의 길이는 &lt;code&gt;size (&lt;var&gt;vals&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt; 같아야합니다 .</target>
        </trans-unit>
        <trans-unit id="2738d8f0358bba0414e17d3259943d1c961429a8" translate="yes" xml:space="preserve">
          <source>The subscripts are defined by the rows of the matrix &lt;var&gt;subs&lt;/var&gt; and the values by &lt;var&gt;vals&lt;/var&gt;. Each row of &lt;var&gt;subs&lt;/var&gt; corresponds to one of the values in &lt;var&gt;vals&lt;/var&gt;. If &lt;var&gt;vals&lt;/var&gt; is a scalar, it will be used for each of the row of &lt;var&gt;subs&lt;/var&gt;. If &lt;var&gt;subs&lt;/var&gt; is a cell array of vectors, all vectors must be of the same length, and the subscripts in the &lt;var&gt;k&lt;/var&gt;th vector must correspond to the &lt;var&gt;k&lt;/var&gt;th dimension of the result.</source>
          <target state="translated">아래 첨자는 행렬 &lt;var&gt;subs&lt;/var&gt; 의 행 과 &lt;var&gt;vals&lt;/var&gt; 의 값으로 정의됩니다 . 각 &lt;var&gt;subs&lt;/var&gt; 행은 &lt;var&gt;vals&lt;/var&gt; 값 중 하나에 해당합니다 . 경우 &lt;var&gt;vals&lt;/var&gt; 스칼라이고, 그것의 로우들 각각에 대해 사용되는 &lt;var&gt;subs&lt;/var&gt; . 경우 &lt;var&gt;subs&lt;/var&gt; 벡터의 세포 배열이며, 모든 벡터는 동일한 길이를 선택할 수 없으며,의 첨자 &lt;var&gt;k&lt;/var&gt; 받는 번째 벡터에 대응해야 &lt;var&gt;k&lt;/var&gt; 번째의 측정 결과.</target>
        </trans-unit>
        <trans-unit id="c1d7c9f091299f7d5240522941525c63dbcf791c" translate="yes" xml:space="preserve">
          <source>The supported property types are:</source>
          <target state="translated">지원되는 속성 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b3759abd9097afb7f24aca1f4c09e62f3bd86ed6" translate="yes" xml:space="preserve">
          <source>The surface mesh is plotted using shaded rectangles. The vertices of the rectangles [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;] are typically the output of &lt;code&gt;meshgrid&lt;/code&gt;. over a 2-D rectangular region in the x-y plane. &lt;var&gt;z&lt;/var&gt; determines the height above the plane of each vertex. If only a single &lt;var&gt;z&lt;/var&gt; matrix is given, then it is plotted over the meshgrid &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;. Thus, columns of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;x&lt;/var&gt; values and rows of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;y&lt;/var&gt; values.</source>
          <target state="translated">표면 메쉬는 음영 처리 된 사각형을 사용하여 플로팅됩니다. 사각형의 정점 [ &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; ]는 일반적으로 &lt;code&gt;meshgrid&lt;/code&gt; 의 출력입니다 . xy 평면의 2 차원 직사각형 영역에 &lt;var&gt;z&lt;/var&gt; 는 각 정점의 평면 위의 높이를 결정합니다. 단일 &lt;var&gt;z&lt;/var&gt; 행렬 만 제공되는 경우 meshgrid &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; 위에 그려집니다 . 따라서 &lt;var&gt;z&lt;/var&gt; 의 열은 다른 &lt;var&gt;x&lt;/var&gt; 값에 해당하고 &lt;var&gt;z&lt;/var&gt; 의 행은 다른 &lt;var&gt;y&lt;/var&gt; 값에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="b46769f6b104ec8be6304814a4bfdace40f1cbda" translate="yes" xml:space="preserve">
          <source>The switch Statement</source>
          <target state="translated">스위치 문</target>
        </trans-unit>
        <trans-unit id="a000ebc0540c2a1fa2d4f1bb6f8896b4ea004fb6" translate="yes" xml:space="preserve">
          <source>The symbol &lt;code&gt;~&lt;/code&gt; may be used as a placeholder in the list of lvalues, indicating that the corresponding return value should be ignored and not stored anywhere:</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; 기호 는 lvalue 목록에서 자리 표시 자로 사용되어 해당 반환 값을 무시하고 어디에도 저장하지 않아야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0455834c2f0ae49c31cadd564a4076068d7325a3" translate="yes" xml:space="preserve">
          <source>The symbol &lt;var&gt;ret-var&lt;/var&gt; is the name of the variable that will hold the value to be returned by the function. This variable must be defined before the end of the function body in order for the function to return a value.</source>
          <target state="translated">&lt;var&gt;ret-var&lt;/var&gt; 기호 는 함수가 리턴 할 값을 보유 할 변수의 이름입니다. 함수가 값을 리턴하려면 함수 본문이 끝나기 전에이 변수를 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="e8d41ccd19673e226ad418333099b911b400fcc7" translate="yes" xml:space="preserve">
          <source>The system matrix acts like the conductivity &lt;code&gt;S&lt;/code&gt; in Ohm&amp;rsquo;s law &lt;code&gt;S * V = I&lt;/code&gt;. Based on the Dirichlet and Neumann boundary conditions, we are able to solve for the voltages at each vertex &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">시스템 매트릭스는 옴의 법칙 &lt;code&gt;S * V = I&lt;/code&gt; 에서 전도도 &lt;code&gt;S&lt;/code&gt; 와 같은 역할을합니다 . Dirichlet 및 Neumann 경계 조건을 기반으로 각 정점 &lt;code&gt;V&lt;/code&gt; 의 전압을 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4340e678261da2ae0696ac57455b249900e4283" translate="yes" xml:space="preserve">
          <source>The tab width is specified by &lt;var&gt;tw&lt;/var&gt;, and defaults to eight.</source>
          <target state="translated">탭 너비는 &lt;var&gt;tw&lt;/var&gt; 로 지정되며 기본값은 8입니다.</target>
        </trans-unit>
        <trans-unit id="fe71437fad332115a6795a9a5ce07c1b04e570dc" translate="yes" xml:space="preserve">
          <source>The table below lists all of the sparse functions of Octave. Note that the names of the specific sparse forms of the functions are typically the same as the general versions with a &lt;em&gt;sp&lt;/em&gt; prefix. In the table below, and in the rest of this article, the specific sparse versions of functions are used.</source>
          <target state="translated">아래 표에는 Octave의 모든 스파 스 기능이 나열되어 있습니다. 특정 희소 형식의 함수 이름은 일반적으로 &lt;em&gt;sp&lt;/em&gt; 접두사 가있는 일반 버전과 동일 합니다. 아래 표와이 기사의 나머지 부분에서는 특정 희소 버전의 함수가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c5ba6afc25060b21f2f5b95c9e6214c1e1081541" translate="yes" xml:space="preserve">
          <source>The table can be customized to display more or less information through the function &lt;code&gt;whos_line_format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;whos_line_format&lt;/code&gt; 함수를 통해 더 많거나 적은 정보를 표시하도록 테이블을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7c908f6d50f20d69b31bc367e1898f1fcf6316b" translate="yes" xml:space="preserve">
          <source>The text is defined by the string &lt;var&gt;s&lt;/var&gt;. If &lt;var&gt;s&lt;/var&gt; is a cell string organized as a row vector then each string of the cell array is written to a separate line. If &lt;var&gt;s&lt;/var&gt; is organized as a column vector then one string element of the cell array is placed for every mouse click.</source>
          <target state="translated">텍스트는 문자열 &lt;var&gt;s&lt;/var&gt; 로 정의됩니다 . 경우 &lt;var&gt;s&lt;/var&gt; 다음 셀 어레이의 각 스트링은 별도의 행에 기록 행 벡터로 조직 된 셀 스트링이다. &lt;var&gt;s&lt;/var&gt; 가 열 벡터로 구성된 경우 셀 배열의 하나의 문자열 요소가 마우스를 클릭 할 때마다 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="4c2096c13db5d95e57700bc34ea49a53d15578d1" translate="yes" xml:space="preserve">
          <source>The text object string content.</source>
          <target state="translated">텍스트 객체 문자열 내용입니다.</target>
        </trans-unit>
        <trans-unit id="e62ae6961e7bcaa29bfe5e8622f6c0cf9bfeae23" translate="yes" xml:space="preserve">
          <source>The text of the last error message</source>
          <target state="translated">마지막 오류 메시지의 텍스트</target>
        </trans-unit>
        <trans-unit id="4c277092e5ffe5403c79898a8eede2c5a48eb0d0" translate="yes" xml:space="preserve">
          <source>The third and fourth arguments &lt;var&gt;g&lt;/var&gt; and &lt;var&gt;h&lt;/var&gt; are function handles pointing to functions that compute the equality constraints and the inequality constraints, respectively. If the problem does not have equality (or inequality) constraints, then use an empty matrix ([]) for &lt;var&gt;g&lt;/var&gt; (or &lt;var&gt;h&lt;/var&gt;). When supplied, these equality and inequality constraint functions must accept one vector argument and return a vector.</source>
          <target state="translated">세 번째와 네 번째 인수 &lt;var&gt;g&lt;/var&gt; 와 &lt;var&gt;h&lt;/var&gt; 는 각각 등식 제약 조건과 불평등 제약 조건을 계산하는 함수를 가리키는 함수 핸들입니다. 문제에 등식 (또는 부등식) 제약 조건이없는 경우 &lt;var&gt;g&lt;/var&gt; (또는 &lt;var&gt;h&lt;/var&gt; )에 빈 행렬 ([])을 사용하십시오 . 제공된 경우, 이러한 동등성 및 불평등 제약 조건 함수는 하나의 벡터 인수를 허용하고 벡터를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b02349905a85d2446dd0f7de0c81ebb008dfdee" translate="yes" xml:space="preserve">
          <source>The third and fourth arguments may also be 2-element cell arrays of function handles. The first element should point to the constraint function and the second should point to a function that computes the gradient of the constraint function:</source>
          <target state="translated">세 번째 및 네 번째 인수는 함수 핸들로 구성된 2 요소 셀형 배열 일 수도 있습니다. 첫 번째 요소는 제약 함수를 가리켜 야하고 두 번째 요소는 제약 함수의 기울기를 계산하는 함수를 가리켜 야합니다.</target>
        </trans-unit>
        <trans-unit id="7195b4719f77b116da398a1a1c0edac3c80b38d3" translate="yes" xml:space="preserve">
          <source>The third and fourth arguments to &lt;code&gt;dasrt&lt;/code&gt; specify the initial condition of the states and their derivatives, and the fourth argument specifies a vector of output times at which the solution is desired, including the time corresponding to the initial condition.</source>
          <target state="translated">&lt;code&gt;dasrt&lt;/code&gt; 에 대한 세 번째 및 네 번째 인수 는 상태 및 그 파생물의 초기 조건을 지정 하고 네 번째 인수 는 초기 조건에 해당하는 시간을 포함하여 솔루션이 필요한 출력 시간의 벡터를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d64fcb3e439188d55a4c16261d51085d7e637847" translate="yes" xml:space="preserve">
          <source>The third and most general form of the &lt;code&gt;if&lt;/code&gt; statement allows multiple decisions to be combined in a single statement. It looks like this:</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; 문의 세 번째이자 가장 일반적인 형태 는 여러 결정을 단일 명령문으로 결합 할 수있게합니다. 다음과 같이 보입니다 :</target>
        </trans-unit>
        <trans-unit id="24a4c0df0b808a20ba080137519e5a48feb220c0" translate="yes" xml:space="preserve">
          <source>The third argument is also optional and defines the plane of the rotation. If present, &lt;var&gt;plane&lt;/var&gt; is a two element vector containing two different valid dimensions of the matrix. When &lt;var&gt;plane&lt;/var&gt; is not given the first two non-singleton dimensions are used.</source>
          <target state="translated">세 번째 인수는 선택 사항이며 회전 평면을 정의합니다. 존재하는 경우, &lt;var&gt;plane&lt;/var&gt; 은 행렬의 서로 다른 두 개의 유효한 차원을 포함하는 두 요소 벡터입니다. 경우 &lt;var&gt;plane&lt;/var&gt; 주어지지 처음 두 개의 비 - 싱글 크기가 사용된다.</target>
        </trans-unit>
        <trans-unit id="a3316908c5ebe0362b237dbbb7104323e8f938db" translate="yes" xml:space="preserve">
          <source>The third calling form of &lt;code&gt;drawnow&lt;/code&gt; is for debugging and is undocumented.</source>
          <target state="translated">&lt;code&gt;drawnow&lt;/code&gt; 의 세 번째 호출 양식은 디버깅 용이며 문서화되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9fa92cab0022b515af585d0811574891a87808ec" translate="yes" xml:space="preserve">
          <source>The third form of the &lt;code&gt;fopen&lt;/code&gt; function returns information about the open file given its file id.</source>
          <target state="translated">&lt;code&gt;fopen&lt;/code&gt; 함수 의 세 번째 형식은 파일 ID가 주어진 열린 파일에 대한 정보를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c1ff0c6d96d5595fa4e80c7081bddfed8b293c22" translate="yes" xml:space="preserve">
          <source>The third optional argument &lt;var&gt;opt&lt;/var&gt; controls the behavior of the dialog. See &lt;code&gt;msgbox&lt;/code&gt; for details.</source>
          <target state="translated">세 번째 선택적 인수 &lt;var&gt;opt&lt;/var&gt; 는 대화 상자의 동작을 제어합니다. 자세한 내용은 &lt;code&gt;msgbox&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9c1fba0c17d0f4cd869b5b4c57308b9c9a3af764" translate="yes" xml:space="preserve">
          <source>The third output &lt;var&gt;exitflag&lt;/var&gt; reports whether the algorithm succeeded and may take one of the following values:</source>
          <target state="translated">세 번째 출력 &lt;var&gt;exitflag&lt;/var&gt; 는 알고리즘의 성공 여부를보고하며 다음 값 중 하나를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be21c86c3e0ec2732b9dc2176602d8ab26daa7cd" translate="yes" xml:space="preserve">
          <source>The third output &lt;var&gt;info&lt;/var&gt; reports whether the algorithm succeeded and may take one of the following values:</source>
          <target state="translated">세 번째 출력 &lt;var&gt;info&lt;/var&gt; 는 알고리즘의 성공 여부를보고하며 다음 값 중 하나를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2555a24f899c28f99431108b5d78d1c31465b431" translate="yes" xml:space="preserve">
          <source>The third way to create structures is the &lt;code&gt;struct&lt;/code&gt; command. &lt;code&gt;struct&lt;/code&gt; takes pairs of arguments, where the first argument in the pair is the fieldname to include in the structure and the second is a scalar or cell array, representing the values to include in the structure or structure array. For example:</source>
          <target state="translated">구조를 만드는 세 번째 방법은 &lt;code&gt;struct&lt;/code&gt; 명령입니다. &lt;code&gt;struct&lt;/code&gt; 는 인수 쌍을 취합니다. 여기서 쌍의 첫 번째 인수는 구조에 포함 할 필드 이름이고 두 번째 인수는 스칼라 또는 셀형 배열로, 구조 또는 구조 배열에 포함 할 값을 나타냅니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bc1cbc3f7b94324fcf7e6b2faaf4b7f4f65ba95c" translate="yes" xml:space="preserve">
          <source>The time complexity of the expression &lt;em&gt;O(a*n^p)&lt;/em&gt;. This is a structure with fields &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">표현식 &lt;em&gt;O (a * n ^ p)&lt;/em&gt; 의 시간 복잡도입니다 . 이것은 필드 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;p&lt;/code&gt; 가있는 구조입니다 .</target>
        </trans-unit>
        <trans-unit id="b5836c6d66c24029e6fc162eda2f01323f9b84c9" translate="yes" xml:space="preserve">
          <source>The time.</source>
          <target state="translated">시간.</target>
        </trans-unit>
        <trans-unit id="d28b1820c21d788bf541e792a7751315825c2dd1" translate="yes" xml:space="preserve">
          <source>The title of the image as defined by the Exif standard.</source>
          <target state="translated">Exif 표준에 의해 정의 된 이미지의 제목입니다.</target>
        </trans-unit>
        <trans-unit id="8e01af0401babfdb6b6b103d569e910fb0203908" translate="yes" xml:space="preserve">
          <source>The tolerance &lt;var&gt;tol&lt;/var&gt; defaults to &lt;code&gt;sqrt (eps)&lt;/code&gt;.</source>
          <target state="translated">공차 &lt;var&gt;tol&lt;/var&gt; 의 기본값은 &lt;code&gt;sqrt (eps)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="020db12bc9cda5fe6b12ba4824100139d6dd62a5" translate="yes" xml:space="preserve">
          <source>The top level of the hierarchy and the parent of all figure objects. Use &lt;code&gt;groot&lt;/code&gt; to obtain the handle of the root graphics object.</source>
          <target state="translated">계층의 최상위 수준 및 모든 그림 개체의 부모입니다. &lt;code&gt;groot&lt;/code&gt; 를 사용 하여 루트 그래픽스 객체의 핸들을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c8f18f0280895cf4825cb560b5e8ff49d65953d7" translate="yes" xml:space="preserve">
          <source>The total number of elements in the matrix or array.</source>
          <target state="translated">행렬 또는 배열의 총 요소 수입니다.</target>
        </trans-unit>
        <trans-unit id="1a1e2954fb0ea009bd827fbd1a514306af525918" translate="yes" xml:space="preserve">
          <source>The total number of returned values is the product of the number of elements returned for each index component. In the example above, the total is 2*1*1 = 2 elements.</source>
          <target state="translated">반환 된 총 값 수는 각 인덱스 구성 요소에 대해 반환 된 요소 수의 곱입니다. 위의 예에서 총계는 2 * 1 * 1 = 2 개의 요소입니다.</target>
        </trans-unit>
        <trans-unit id="a30001a043cdcb2e8ac959391732bb011f2011d6" translate="yes" xml:space="preserve">
          <source>The trust region radius became excessively small.</source>
          <target state="translated">트러스트 영역 반경이 너무 작아졌습니다.</target>
        </trans-unit>
        <trans-unit id="26b9ec20825c14e84d161ea58253e1a371198ca0" translate="yes" xml:space="preserve">
          <source>The truth table for the xor operation is</source>
          <target state="translated">xor 연산의 진리표는</target>
        </trans-unit>
        <trans-unit id="2ce0b7af9a0d01674c5d28383bc77e0118acbfbd" translate="yes" xml:space="preserve">
          <source>The try Statement</source>
          <target state="translated">try 문</target>
        </trans-unit>
        <trans-unit id="52aa7313cfb4bf1b0b6c3b71de70f4a2c2aa2794" translate="yes" xml:space="preserve">
          <source>The two basic reasons to use sparse matrices are to reduce the memory usage and to not have to do calculations on zero elements. The two are closely related in that the computation time on a sparse matrix operator or function is roughly linear with the number of nonzero elements.</source>
          <target state="translated">희소 행렬을 사용하는 두 가지 기본 이유는 메모리 사용량을 줄이고 0 요소에 대한 계산을 수행 할 필요가 없기 때문입니다. 이 둘은 희소 행렬 연산자 또는 함수의 계산 시간이 0이 아닌 요소 수와 거의 선형이라는 점에서 밀접한 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9618f4a4a63ba22192bb89074d7622fe30a7e308" translate="yes" xml:space="preserve">
          <source>The two definitions are related, for positive real values of &lt;var&gt;x&lt;/var&gt;, by &lt;code&gt;E_1&amp;nbsp;(-x)&amp;nbsp;=&amp;nbsp;-Ei&amp;nbsp;(x)&amp;nbsp;-&amp;nbsp;i*pi&lt;/code&gt;.</source>
          <target state="translated">두개의 정의는 양의 실수 값에 관련되는 &lt;var&gt;x&lt;/var&gt; 의해 &lt;code&gt;E_1&amp;nbsp;(-x)&amp;nbsp;=&amp;nbsp;-Ei&amp;nbsp;(x)&amp;nbsp;-&amp;nbsp;i*pi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1560ec7416c3bc7b85993552ffc63904882e8eda" translate="yes" xml:space="preserve">
          <source>The type of machine you are using, and the operating system name and version number.</source>
          <target state="translated">사용중인 시스템 유형 및 운영 체제 이름 및 버전 번호</target>
        </trans-unit>
        <trans-unit id="ad725f8fbec700b46ff946709d82c735f805d4ca" translate="yes" xml:space="preserve">
          <source>The type of symmetry to check may be specified with the additional input &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; (default) for regular Hermitian or &lt;code&gt;&quot;skew&quot;&lt;/code&gt; for skew-Hermitian.</source>
          <target state="translated">검사에 대칭의 형태는 추가 입력으로 지정 될 수있다 &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; 일반 에르 미트 나에 대한 (기본값) &lt;code&gt;&quot;skew&quot;&lt;/code&gt; 스큐 - 에르 미트합니다.</target>
        </trans-unit>
        <trans-unit id="113dea0c1abc9393e2b92d3cb715124cf7063305" translate="yes" xml:space="preserve">
          <source>The type of symmetry to check may be specified with the additional input &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; (default) for regular symmetry or &lt;code&gt;&quot;skew&quot;&lt;/code&gt; for skew-symmetry.</source>
          <target state="translated">확인할 대칭 유형은 일반 대칭의 경우 추가 입력 &lt;code&gt;&quot;nonskew&quot;&lt;/code&gt; (기본값) 또는 &lt;code&gt;&quot;skew&quot;&lt;/code&gt; 대칭의 경우 &quot;skew&quot; 를 사용하여 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5204ceff27386ae6ed6133ef36c034b0518a0cea" translate="yes" xml:space="preserve">
          <source>The type of uicontrol created is specified by the &lt;var&gt;style&lt;/var&gt; property. If no style property is provided, a push button will be created.</source>
          <target state="translated">작성된 uicontrol의 유형은 &lt;var&gt;style&lt;/var&gt; 특성으로 지정됩니다 . 스타일 속성이 제공되지 않으면 푸시 버튼이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="f94f32e2aa2b76134f40165cc09d9e4f13e41d02" translate="yes" xml:space="preserve">
          <source>The types and values of the input parameters &lt;var&gt;t&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; depend on the input &lt;var&gt;flag&lt;/var&gt; that is of type string. Valid values of &lt;var&gt;flag&lt;/var&gt; are:</source>
          <target state="translated">입력 매개 변수 &lt;var&gt;t&lt;/var&gt; 및 &lt;var&gt;y&lt;/var&gt; 의 유형 및 값은 문자열 유형 의 입력 &lt;var&gt;flag&lt;/var&gt; 에 따라 다릅니다 . 유효한 &lt;var&gt;flag&lt;/var&gt; 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8adbd269c331c77c96db37b97c6c4f211c8deae2" translate="yes" xml:space="preserve">
          <source>The typical way to extract a matrix or array from the input arguments of &lt;code&gt;DEFUN_DLD&lt;/code&gt; function is as follows</source>
          <target state="translated">&lt;code&gt;DEFUN_DLD&lt;/code&gt; 함수 의 입력 인수에서 행렬 또는 배열을 추출하는 일반적인 방법 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f7f01dd63e93e2db097948ad9ee913627c8dd5d8" translate="yes" xml:space="preserve">
          <source>The ui* series of functions work best with the &lt;code&gt;qt&lt;/code&gt; graphics toolkit, although some functionality is available with the &lt;code&gt;fltk&lt;/code&gt; toolkit. There is no support for the &lt;code&gt;gnuplot&lt;/code&gt; toolkit.</source>
          <target state="translated">&lt;code&gt;fltk&lt;/code&gt; 툴킷 에서 일부 기능을 사용할 수 있지만 ui * 시리즈 함수는 &lt;code&gt;qt&lt;/code&gt; 그래픽 툴킷에서 가장 잘 작동 합니다 . &lt;code&gt;gnuplot&lt;/code&gt; 툴킷 은 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="51e7c0cae6c48943a280e888819155962b0bd492" translate="yes" xml:space="preserve">
          <source>The underlying Fortran code should use the &lt;code&gt;XSTOPX&lt;/code&gt; function to replace the Fortran &lt;code&gt;STOP&lt;/code&gt; function. &lt;code&gt;XSTOPX&lt;/code&gt; uses the Octave exception handler to treat failing cases in the Fortran code explicitly. Note that Octave supplies its own replacement &lt;small&gt;BLAS&lt;/small&gt;&lt;code&gt;XERBLA&lt;/code&gt; function, which uses &lt;code&gt;XSTOPX&lt;/code&gt;.</source>
          <target state="translated">기본 포트란 코드는 &lt;code&gt;XSTOPX&lt;/code&gt; 함수를 사용 하여 포트란 &lt;code&gt;STOP&lt;/code&gt; 기능 을 대체해야 합니다. &lt;code&gt;XSTOPX&lt;/code&gt; 는 Octave 예외 핸들러를 사용하여 Fortran 코드에서 실패한 사례를 명시 적으로 처리합니다. Octave 는 &lt;code&gt;XSTOPX&lt;/code&gt; 를 사용하는 자체 교체 &lt;small&gt;BLAS &lt;/small&gt; &lt;code&gt;XERBLA&lt;/code&gt; 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7b88f6c3542660147f24745a70df859b574d5c9f" translate="yes" xml:space="preserve">
          <source>The unit used to compute the &lt;code&gt;paperposition&lt;/code&gt; property. For &lt;code&gt;paperunits&lt;/code&gt; set to &lt;code&gt;&quot;pixels&quot;&lt;/code&gt;, the conversion between physical units (ex: &lt;code&gt;&quot;inches&quot;&lt;/code&gt;) and &lt;code&gt;&quot;pixels&quot;&lt;/code&gt; is dependent on the &lt;code&gt;screenpixelsperinch&lt;/code&gt; property of the root object.</source>
          <target state="translated">&lt;code&gt;paperposition&lt;/code&gt; 속성 을 계산하는 데 사용되는 단위 입니다. &lt;code&gt;paperunits&lt;/code&gt; &lt;code&gt;&quot;pixels&quot;&lt;/code&gt; 가 &quot;pixels&quot;로 설정된 경우 물리적 단위 (예 : &lt;code&gt;&quot;inches&quot;&lt;/code&gt; )와 &lt;code&gt;&quot;pixels&quot;&lt;/code&gt; 간의 변환 은 루트 객체 의 &lt;code&gt;screenpixelsperinch&lt;/code&gt; 속성에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="fadea35915740be5ea17b31b04b8311ea21f8c0c" translate="yes" xml:space="preserve">
          <source>The unit used to compute the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;outerposition&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 및 &lt;code&gt;outerposition&lt;/code&gt; 위치 속성 을 계산하는 데 사용되는 단위 입니다.</target>
        </trans-unit>
        <trans-unit id="60bcf22fd0ac0eed7dd0721b4a1b44c720fca343" translate="yes" xml:space="preserve">
          <source>The unscaled covariance matrix, formally equal to the inverse of &lt;var&gt;x&amp;rsquo;&lt;/var&gt;*&lt;var&gt;x&lt;/var&gt;, but computed in a way minimizing roundoff error propagation.</source>
          <target state="translated">비 규모 공분산 행렬은 공식적으로 &lt;var&gt;x&amp;rsquo;&lt;/var&gt; * &lt;var&gt;x&lt;/var&gt; 의 역수와 같지만 반올림 오차 전파를 최소화하는 방식으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="2c0b1d3083ad9ca2a7e0b82183bf71fb74340068" translate="yes" xml:space="preserve">
          <source>The unwind_protect Statement</source>
          <target state="translated">unwind_protect 문</target>
        </trans-unit>
        <trans-unit id="76c55179bfcdb299275b3656e06ab94a12a99b03" translate="yes" xml:space="preserve">
          <source>The upper Cholesky factor &lt;var&gt;R&lt;/var&gt; is computed by using the upper triangular part of matrix &lt;var&gt;A&lt;/var&gt; and is defined by</source>
          <target state="translated">상부 hole 레 스키 계수 &lt;var&gt;R&lt;/var&gt; 은 행렬 &lt;var&gt;A&lt;/var&gt; 의 상부 삼각형 부분을 사용하여 계산되며 다음 과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="1890c9701c39eef1aa6b83be16efe7e9d38cd499" translate="yes" xml:space="preserve">
          <source>The use of the &lt;code&gt;maybe_compress&lt;/code&gt; function should be avoided if possible as it will slow the creation of the matrix.</source>
          <target state="translated">가능한 경우 &lt;code&gt;maybe_compress&lt;/code&gt; 함수 의 사용을 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="486810d1bef8c37ffa8f90b03cb329153a311618" translate="yes" xml:space="preserve">
          <source>The user can directly create the sparse matrix within an oct-file.</source>
          <target state="translated">사용자는 oct 파일 내에서 희소 행렬을 직접 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44ac378cb2a3bf5b9d40bd2c7fa0d9f1fa750b24" translate="yes" xml:space="preserve">
          <source>The user can force the type of the matrix with the &lt;code&gt;matrix_type&lt;/code&gt; function. This overcomes the cost of discovering the type of the matrix. However, it should be noted that identifying the type of the matrix incorrectly will lead to unpredictable results, and so &lt;code&gt;matrix_type&lt;/code&gt; should be used with care.</source>
          <target state="translated">사용자는 &lt;code&gt;matrix_type&lt;/code&gt; 함수 를 사용하여 행렬의 유형을 강제 할 수 있습니다 . 이것은 매트릭스의 유형을 발견하는 비용을 극복합니다. 그러나 행렬 유형을 잘못 식별하면 예기치 않은 결과가 &lt;code&gt;matrix_type&lt;/code&gt; 수 있으므로 matrix_type 을주의 해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="933d42a738b2099466f4c26608378ca0e112f281" translate="yes" xml:space="preserve">
          <source>The user can select points on a plot with the &lt;code&gt;ginput&lt;/code&gt; function or select the position at which to place text on the plot with the &lt;code&gt;gtext&lt;/code&gt; function using the mouse.</source>
          <target state="translated">사용자는 &lt;code&gt;ginput&lt;/code&gt; 함수 를 사용하여 플롯에서 점을 선택 하거나 마우스를 사용하여 &lt;code&gt;gtext&lt;/code&gt; 함수를 사용하여 플롯에 텍스트를 배치 할 위치를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="133defcf2a8cc85d6e89379280e237838c74e0ae" translate="yes" xml:space="preserve">
          <source>The user name.</source>
          <target state="translated">사용자 이름</target>
        </trans-unit>
        <trans-unit id="ff955a1de3f03a21fca8ad8b7504d2f3da2a59f4" translate="yes" xml:space="preserve">
          <source>The username of the current user.</source>
          <target state="translated">현재 사용자의 사용자 이름</target>
        </trans-unit>
        <trans-unit id="b7f941f8364bdda7976f96778d1a2f6cd046401b" translate="yes" xml:space="preserve">
          <source>The uses of &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; are further explained in &lt;a href=&quot;graphics-objects#XREFget&quot;&gt;get&lt;/a&gt;, &lt;a href=&quot;graphics-objects#XREFset&quot;&gt;set&lt;/a&gt;.</source>
          <target state="translated">의 사용 &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 추가에 설명되어 &lt;a href=&quot;graphics-objects#XREFget&quot;&gt;GET&lt;/a&gt; , &lt;a href=&quot;graphics-objects#XREFset&quot;&gt;세트를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3879d4dd1203ae34ab58ae828a21583678af3718" translate="yes" xml:space="preserve">
          <source>The validity of this formula can easily be checked by expanding the binomial coefficients in both formulas as factorials. It can be derived more directly via the theory of Cauchy matrices. See J. W. Demmel,</source>
          <target state="translated">이 수식의 유효성은 두 수식의 이항 계수를 계승으로 확장하여 쉽게 확인할 수 있습니다. 그것은 코시 행렬의 이론을 통해 더 직접적으로 도출 될 수 있습니다. JW Demmel,</target>
        </trans-unit>
        <trans-unit id="dfaa81e76c370c75c591c2d91156e8dc305309b0" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;n&lt;/var&gt; must be a real non-negative integer.</source>
          <target state="translated">값 &lt;var&gt;n&lt;/var&gt; 은 음이 아닌 실수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="987eae05835fc50217ab9ec5a201d8873975cf0d" translate="yes" xml:space="preserve">
          <source>The value &lt;var&gt;val&lt;/var&gt; may be modified to fit within the range of the new type.</source>
          <target state="translated">값 &lt;var&gt;val&lt;/var&gt; 은 새로운 유형의 범위 내에 맞도록 수정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="217ed1d8201a3760885ef024ee2d49ba760c6d6c" translate="yes" xml:space="preserve">
          <source>The value for the &lt;code&gt;papersize&lt;/code&gt;, and &lt;code&gt;paperposition&lt;/code&gt; properties depends upon &lt;code&gt;paperorientation&lt;/code&gt;. The horizontal and vertical values for &lt;code&gt;papersize&lt;/code&gt; and &lt;code&gt;paperposition&lt;/code&gt; reverse order when &lt;code&gt;paperorientation&lt;/code&gt; is switched between &lt;code&gt;&quot;portrait&quot;&lt;/code&gt; and &lt;code&gt;&quot;landscape&quot;&lt;/code&gt;.</source>
          <target state="translated">의 값 &lt;code&gt;papersize&lt;/code&gt; 및 &lt;code&gt;paperposition&lt;/code&gt; 의 특성에 따라 달라집니다 &lt;code&gt;paperorientation&lt;/code&gt; . &lt;code&gt;paperorientation&lt;/code&gt; 이 &lt;code&gt;&quot;portrait&quot;&lt;/code&gt; 와 &lt;code&gt;&quot;landscape&quot;&lt;/code&gt; 사이에서 전환 될 때 &lt;code&gt;papersize&lt;/code&gt; 및 &lt;code&gt;paperposition&lt;/code&gt; 의 가로 및 세로 값은 역순 입니다.</target>
        </trans-unit>
        <trans-unit id="ca30babe0da725344857665459f7bd6f3883e78c" translate="yes" xml:space="preserve">
          <source>The value must be &lt;code&gt;&quot;non-modal&quot;&lt;/code&gt;, &lt;code&gt;&quot;modal&quot;&lt;/code&gt;, or &lt;code&gt;&quot;replace&quot;&lt;/code&gt;. See above.</source>
          <target state="translated">값은 &lt;code&gt;&quot;non-modal&quot;&lt;/code&gt; , &lt;code&gt;&quot;modal&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;replace&quot;&lt;/code&gt; 여야합니다 . 위 참조.</target>
        </trans-unit>
        <trans-unit id="f10c1cc5436e834c29308d925fbd8c9cf65a09b1" translate="yes" xml:space="preserve">
          <source>The value must be a single character and the default is &lt;code&gt;&quot; &quot;&lt;/code&gt; (a single space). For example:</source>
          <target state="translated">값은 단일 문자 여야하며 기본값은 &lt;code&gt;&quot; &quot;&lt;/code&gt; (단일 공백)입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="11865d873c7ce3cac98ac13067f50829858a6662" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;history_control&lt;/code&gt; is a colon-separated list of values controlling how commands are saved on the history list. If the list of values includes &lt;code&gt;ignorespace&lt;/code&gt;, lines which begin with a space character are not saved in the history list. A value of &lt;code&gt;ignoredups&lt;/code&gt; causes lines matching the previous history entry to not be saved. A value of &lt;code&gt;ignoreboth&lt;/code&gt; is shorthand for &lt;code&gt;ignorespace&lt;/code&gt; and &lt;code&gt;ignoredups&lt;/code&gt;. A value of &lt;code&gt;erasedups&lt;/code&gt; causes all previous lines matching the current line to be removed from the history list before that line is saved. Any value not in the above list is ignored. If &lt;code&gt;history_control&lt;/code&gt; is the empty string, all commands are saved on the history list, subject to the value of &lt;code&gt;history_save&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;history_control&lt;/code&gt; 의 값은 명령이 기록 목록에 저장되는 방법을 제어하는 ​​콜론으로 구분 된 값 목록입니다. 값 목록에 &lt;code&gt;ignorespace&lt;/code&gt; 가 포함 된 경우 공백 문자로 시작하는 행은 히스토리 목록에 저장되지 않습니다. &lt;code&gt;ignoredups&lt;/code&gt; 값은 이전 히스토리 항목과 일치하는 행을 저장하지 않습니다. 값 &lt;code&gt;ignoreboth&lt;/code&gt; 은 속기이다 &lt;code&gt;ignorespace&lt;/code&gt; 및 &lt;code&gt;ignoredups&lt;/code&gt; . &lt;code&gt;erasedups&lt;/code&gt; 값은 해당 행이 저장되기 전에 현재 행과 일치하는 모든 이전 행이 히스토리 목록에서 제거되도록합니다. 위 목록에없는 값은 무시됩니다. &lt;code&gt;history_control&lt;/code&gt; 인 경우는 빈 문자열이며 모든 명령은 &lt;code&gt;history_save&lt;/code&gt; 값에 따라 히스토리 목록에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="b70a6f050d3664cfcadad45b2d85f7af1a189ffc" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;nargin&lt;/code&gt; is not affected by using this declaration.</source>
          <target state="translated">&lt;code&gt;nargin&lt;/code&gt; 값은 이 선언을 사용하여 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b2560ed14f20c168583e3d5ee6a83cc5479a7fa9" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;octave_core_file_options&lt;/code&gt; should follow the same format as the options for the &lt;code&gt;save&lt;/code&gt; function. The default value is Octave&amp;rsquo;s binary format.</source>
          <target state="translated">&lt;code&gt;octave_core_file_options&lt;/code&gt; 의 값은 &lt;code&gt;save&lt;/code&gt; 기능 옵션과 동일한 형식을 따라야합니다 . 기본값은 Octave의 이진 형식입니다.</target>
        </trans-unit>
        <trans-unit id="6a0edac6314484525401f004fcf21d540e424949" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;c&lt;/var&gt; specifies the number of delimiters to prepend to each line of data.</source>
          <target state="translated">&lt;var&gt;c&lt;/var&gt; 의 값은 각 데이터 행 앞에 추가 할 분리 문자 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="9d41cbdf4d04fb99498b993acc38ddf77a10e1e0" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;d&lt;/var&gt; is simply the mean of &lt;var&gt;dd&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;d&lt;/var&gt; 의 값 은 단순히 &lt;var&gt;dd&lt;/var&gt; 의 평균입니다 .</target>
        </trans-unit>
        <trans-unit id="e6a8eed2f72af66c2ea117d16634b3838d1c168c" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;mode&lt;/var&gt; is assumed to be returned from a call to &lt;code&gt;stat&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;mode&lt;/var&gt; 의 값은 &lt;code&gt;stat&lt;/code&gt; 에 대한 호출에서 리턴 된 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="fe5fcc19e2496658d8b7bf06a6fc3a1e59d190e4" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;nu&lt;/var&gt; is the dimension of the span of the Krylov subspace (based on &lt;var&gt;eps1&lt;/var&gt;).</source>
          <target state="translated">&lt;var&gt;nu&lt;/var&gt; 값은 Krylov 부분 공간의 범위 ( &lt;var&gt;eps1&lt;/var&gt; 기준)의 차원입니다 .</target>
        </trans-unit>
        <trans-unit id="6badb163d678b9d7ea64016d920aeca40506cdc7" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;ok&lt;/var&gt; is 1 if the user closed the box with the OK button, otherwise it is 0 and &lt;var&gt;sel&lt;/var&gt; is empty.</source>
          <target state="translated">사용자가 확인 버튼으로 상자를 닫은 경우 &lt;var&gt;ok&lt;/var&gt; 값 은 1이고, 그렇지 않으면 0이고 &lt;var&gt;sel&lt;/var&gt; 은 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ddc82eb372ba285482f1959574e9340a3077262" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;path&lt;/var&gt; should be a colon-separated list of directories in the format described for &lt;code&gt;path&lt;/code&gt;. If no file is found, return an empty character string. For example:</source>
          <target state="translated">값의 &lt;var&gt;path&lt;/var&gt; 에 대해 기술 한 포맷의 디렉토리 콜론로 구분되어야 &lt;code&gt;path&lt;/code&gt; . 파일이 없으면 빈 문자열을 반환합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6159679474a3cfb785e1a0e13e6aca3afa146eb0" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;r&lt;/var&gt; specifies the number of delimiter-only lines to add to the start of the file.</source>
          <target state="translated">&lt;var&gt;r&lt;/var&gt; 값은 파일 시작 부분에 추가 할 분리 문자 전용 행 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="eaf379ba4831db17018b5da34d82fb0e8bbb64ec" translate="yes" xml:space="preserve">
          <source>The value of &lt;var&gt;u&lt;/var&gt; may be complex. The value of &lt;var&gt;m&lt;/var&gt; must be 0 &amp;le; &lt;var&gt;m&lt;/var&gt; &amp;le; 1.</source>
          <target state="translated">&lt;var&gt;u&lt;/var&gt; 의 값은 복잡 할 수 있습니다. &lt;var&gt;m&lt;/var&gt; 의 값은 0 &amp;le; &lt;var&gt;m&lt;/var&gt; &amp;le; 1 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="b27bd3d4a0750f7dc10fd97135cd75cffe28b4c1" translate="yes" xml:space="preserve">
          <source>The value of a persistent variable is kept in memory until it is explicitly cleared. Assuming that the implementation of &lt;code&gt;count_calls&lt;/code&gt; is saved on disk, we get the following behavior.</source>
          <target state="translated">지속적 변수의 값은 명시 적으로 지워질 때까지 메모리에 유지됩니다. &lt;code&gt;count_calls&lt;/code&gt; 의 구현이 디스크에 저장되어 있다고 가정하면 다음과 같은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1d13b3ab437a2f13ce5276ab7aca8f547dfc0dd6" translate="yes" xml:space="preserve">
          <source>The value of a polynomial represented by the vector &lt;var&gt;c&lt;/var&gt; can be evaluated at the point &lt;var&gt;x&lt;/var&gt; very easily, as the following example shows:</source>
          <target state="translated">벡터 &lt;var&gt;c&lt;/var&gt; 로 표시되는 다항식의 값은 다음 예와 같이 &lt;var&gt;x&lt;/var&gt; 지점에서 매우 쉽게 평가할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2cd93da190b89bfd6fce36f02d511cf8d7ebf4c" translate="yes" xml:space="preserve">
          <source>The value of individual keys can be set with &lt;code&gt;spparms (&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt;. The default values can be restored with the special keyword &lt;code&gt;&quot;default&quot;&lt;/code&gt;. The special keyword &lt;code&gt;&quot;tight&quot;&lt;/code&gt; can be used to set the mmd solvers to attempt a sparser solution at the potential cost of longer running time.</source>
          <target state="translated">개별 키의 값은 &lt;code&gt;spparms (&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt; 로 설정할 수 있습니다 . 특수 키워드 &lt;code&gt;&quot;default&quot;&lt;/code&gt; 로 기본값을 복원 할 수 있습니다 . 특수 키워드 &lt;code&gt;&quot;tight&quot;&lt;/code&gt; 를 사용하면 실행 시간이 길어질 수있는 잠재적 비용으로 스파 저 솔루션을 시도하도록 mmd 솔버를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9888fbe6ea02af30ade4d41d63e06da6a98d504" translate="yes" xml:space="preserve">
          <source>The value of this property can then be retrieved as a string by a Java object or in Octave:</source>
          <target state="translated">이 속성 값은 Java 객체 또는 Octave에서 문자열로 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39a8526875e22862a90371678f6218a0b89dabc4" translate="yes" xml:space="preserve">
          <source>The value returned in &lt;var&gt;info&lt;/var&gt; may be one of the following:</source>
          <target state="translated">&lt;var&gt;info&lt;/var&gt; 에 반환 된 값 은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fcd411f2d76bf5edaeac7ab5a3087121d53c600" translate="yes" xml:space="preserve">
          <source>The value where the base of the area plot is drawn.</source>
          <target state="translated">면적 플롯의 밑이 그려지는 값입니다.</target>
        </trans-unit>
        <trans-unit id="03db772d1c03de14dd99076830558058d72fd555" translate="yes" xml:space="preserve">
          <source>The values &lt;var&gt;n&lt;/var&gt; for which the expression was calculated &lt;strong&gt;AND&lt;/strong&gt; the execution time was greater than zero.</source>
          <target state="translated">값은 &lt;var&gt;n&lt;/var&gt; 하는 표현을 산출 하였다 &lt;strong&gt;AND&lt;/strong&gt; 실행 시간보다 제로였다.</target>
        </trans-unit>
        <trans-unit id="7e95950eca2cf40f59b9cd37ebe0a3de539e19d5" translate="yes" xml:space="preserve">
          <source>The values &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;c&lt;/var&gt; can be derived by</source>
          <target state="translated">값 &lt;var&gt;y&lt;/var&gt; 와 &lt;var&gt;c&lt;/var&gt; 은</target>
        </trans-unit>
        <trans-unit id="2f48fc2552230b0460e5714873efe32f54fde993" translate="yes" xml:space="preserve">
          <source>The values in &lt;var&gt;c&lt;/var&gt; are scaled to span the range of the current colormap. Limits may be placed on the color axis by the command &lt;code&gt;caxis&lt;/code&gt;, or by setting the &lt;code&gt;clim&lt;/code&gt; property of the parent axis.</source>
          <target state="translated">&lt;var&gt;c&lt;/var&gt; 의 값 은 현재 컬러 맵의 범위에 걸쳐 조정됩니다. &lt;code&gt;caxis&lt;/code&gt; 명령을 사용 하거나 &lt;code&gt;clim&lt;/code&gt; 을 설정하여 색상 축에 제한을 둘 수 있습니다. 부모 축의 속성을 .</target>
        </trans-unit>
        <trans-unit id="d784a318a0365ec6426f6a5480c3c888c0f74ee0" translate="yes" xml:space="preserve">
          <source>The values of the polynomial for each value of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 의 각 값에 대한 다항식의 값 .</target>
        </trans-unit>
        <trans-unit id="a196ed89c6a9030351dfa64f851941d32e033084" translate="yes" xml:space="preserve">
          <source>The values of the vector field to plot.</source>
          <target state="translated">플롯 할 벡터 필드의 값입니다.</target>
        </trans-unit>
        <trans-unit id="712f143fe2ecc6f4e2bf349e09971d6a6dc633e4" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(1:2)&lt;/code&gt; defines the lower left-hand corner of the patch and &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(3:4)&lt;/code&gt; defines its width and height. By default, the value of &lt;var&gt;pos&lt;/var&gt; is &lt;code&gt;[0, 0, 1, 1]&lt;/code&gt;.</source>
          <target state="translated">변수 &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(1:2)&lt;/code&gt; 는 패치의 왼쪽 아래 모서리를 정의 하고 &lt;code&gt;&lt;var&gt;pos&lt;/var&gt;(3:4)&lt;/code&gt; 는 너비와 높이를 정의합니다. 기본적으로 &lt;var&gt;pos&lt;/var&gt; 값 은 &lt;code&gt;[0, 0, 1, 1]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ee33085a7be59b0b90b275f89e41f6eef168e5a0" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;curv&lt;/var&gt; defines the curvature of the sides of the rectangle and may be a scalar or two-element vector with values between 0 and 1. A value of 0 represents no curvature of the side, whereas a value of 1 means that the side is entirely curved into the arc of a circle. If &lt;var&gt;curv&lt;/var&gt; is a two-element vector, then the first element is the curvature along the x-axis of the patch and the second along y-axis.</source>
          <target state="translated">변수 &lt;var&gt;curv&lt;/var&gt; 는 사각형의 변의 곡률을 정의하며 값이 0과 1 사이 인 스칼라 또는 요소를 2 개 가진 벡터 일 수 있습니다. 값 0은 변의 곡률을 나타내지 않지만 값 1은 변이 원호로 완전히 구부러졌습니다. 만약 &lt;var&gt;curv&lt;/var&gt; 두 개의 요소 벡터가 다음의 첫 번째 요소는 패치의 x 축 및 y 축 방향을 따라 상기 제 곡률이다.</target>
        </trans-unit>
        <trans-unit id="f5effbd7e360435b9761b8b011561ea91da0ce20" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;k&lt;/var&gt; is the constant of integration, which by default is set to zero.</source>
          <target state="translated">변수 &lt;var&gt;k&lt;/var&gt; 는 적분 상수이며 기본적으로 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="1cb40fca01bfb5bb2d6f518e21e509a6a1d40a74" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;rootkey&lt;/var&gt; must be a string with a valid root key identifier:</source>
          <target state="translated">변수 &lt;var&gt;rootkey&lt;/var&gt; 는 유효한 루트 키 식별자가있는 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c2e77dabc2f5b26fb9dd32b36133ada17755b089" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;s&lt;/var&gt; is accepted for compatibility but is ignored.</source>
          <target state="translated">변수 &lt;var&gt;s&lt;/var&gt; 는 호환성을 위해 허용되지만 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9479566f6af39dde47954d13fa03e6d7716e6906" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;success&lt;/var&gt; is 1 if the download was successful, otherwise it is 0 in which case &lt;var&gt;message&lt;/var&gt; contains an error message.</source>
          <target state="translated">변수의 &lt;var&gt;success&lt;/var&gt; 다운로드가 성공하면, 그렇지 않으면 0, 1 인 경우 &lt;var&gt;message&lt;/var&gt; 에 오류 메시지 포함 .</target>
        </trans-unit>
        <trans-unit id="20822c6dd4af2da5b5764b7a28bacde24c60932d" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;x&lt;/var&gt; must be a strictly monotonic vector (either increasing or decreasing) of length &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">변수 &lt;var&gt;x&lt;/var&gt; 는 길이 &lt;var&gt;n&lt;/var&gt; 의 엄격하게 단조로운 벡터 (증가 또는 감소) 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="f0c83ebe4a804185f26c2ec9bb975b44111c0f8a" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;x&lt;/var&gt; must be a vector of length &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">변수 &lt;var&gt;x&lt;/var&gt; 는 길이 &lt;var&gt;n&lt;/var&gt; 의 벡터 여야합니다. .</target>
        </trans-unit>
        <trans-unit id="4bf6e16002f8115e7c1af465625ba03491c13ca0" translate="yes" xml:space="preserve">
          <source>The variable &lt;var&gt;y&lt;/var&gt; must be in the interval [0,1], while &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; must be real and strictly positive.</source>
          <target state="translated">변수 &lt;var&gt;y&lt;/var&gt; 는 [0,1] 간격에 있어야하며 &lt;var&gt;a&lt;/var&gt; 와 &lt;var&gt;b&lt;/var&gt; 실제 엄격히 긍정적이어야한다.</target>
        </trans-unit>
        <trans-unit id="b1ee684f133e88648b3dc8d4fd362350327687a0" translate="yes" xml:space="preserve">
          <source>The variables &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; define the vertex pairs, and must therefore have the same shape. They can be either vectors or arrays. If they are arrays then the columns of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are treated separately and an area returned for each.</source>
          <target state="translated">변수 &lt;var&gt;x&lt;/var&gt; 와 &lt;var&gt;y&lt;/var&gt; 는 꼭짓점 쌍을 정의하므로 모양이 같아야합니다. 이들은 벡터 또는 배열 일 수 있습니다. 이들이 배열이면 &lt;var&gt;x&lt;/var&gt; 와 &lt;var&gt;y&lt;/var&gt; 의 열 개별적으로 처리되고 각각에 대한 영역이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f557fc738fa4e999bb41037f46ac3513ff27a24e" translate="yes" xml:space="preserve">
          <source>The variance is defined as</source>
          <target state="translated">분산은 다음과 같이 정의됩니다</target>
        </trans-unit>
        <trans-unit id="383f48dabdd5b59824f4c792f0f4fdaa2194bac1" translate="yes" xml:space="preserve">
          <source>The variant with no input and output argument is an alias for the function &lt;code&gt;OCTAVE_VERSION&lt;/code&gt; provided for compatibility.</source>
          <target state="translated">입력 및 출력 인수가없는 변형 은 호환성을 위해 제공된 &lt;code&gt;OCTAVE_VERSION&lt;/code&gt; 함수의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="712b62bd841673aa2e7546d29f733a43a1bf9811" translate="yes" xml:space="preserve">
          <source>The vector &lt;var&gt;C&lt;/var&gt; specifies the color of each tetrahedron as an index into the current colormap. The default value is 1:m where m is the number of tetrahedrons; the indices are scaled to map to the full range of the colormap. If there are more tetrahedrons than colors in the colormap then the values in &lt;var&gt;C&lt;/var&gt; are cyclically repeated.</source>
          <target state="translated">벡터 &lt;var&gt;C&lt;/var&gt; 는 각 4 면체의 색상을 현재 컬러 맵의 색인으로 지정합니다. 기본값은 1 : m이며 여기서 m은 4 면체의 수입니다. 인덱스는 전체 범위의 컬러 맵에 매핑되도록 크기가 조정됩니다. 컬러 맵의 색상보다 4 면체가 더 많으면 &lt;var&gt;C&lt;/var&gt; 의 값 이 주기적으로 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="d82493b5b4a87c99d1dfed44a515f1a9231254cb" translate="yes" xml:space="preserve">
          <source>The vector &lt;var&gt;c&lt;/var&gt; specifies the autocovariances &lt;code&gt;[gamma_0, &amp;hellip;, gamma_t]&lt;/code&gt; from lag 0 to &lt;var&gt;t&lt;/var&gt;, &lt;var&gt;oldphi&lt;/var&gt; specifies the coefficients based on &lt;var&gt;c&lt;/var&gt;(&lt;var&gt;t&lt;/var&gt;-1) and &lt;var&gt;oldv&lt;/var&gt; specifies the corresponding error.</source>
          <target state="translated">벡터 &lt;var&gt;c&lt;/var&gt; 는 지연 0에서 &lt;var&gt;t&lt;/var&gt; 까지 의 자기 공분산 &lt;code&gt;[gamma_0, &amp;hellip;, gamma_t]&lt;/code&gt; 을 지정하고 , &lt;var&gt;oldphi&lt;/var&gt; 는 &lt;var&gt;c&lt;/var&gt; ( &lt;var&gt;t&lt;/var&gt; -1) 에 따라 계수를 지정 하고 &lt;var&gt;oldv&lt;/var&gt; 는 해당 오차를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ee45235748cdc5458fbe6de11cad0931bd45dc97" translate="yes" xml:space="preserve">
          <source>The vector &lt;var&gt;t&lt;/var&gt; provides an upper limit on the length of the integration. If the stopping condition is met, the vector &lt;var&gt;t_out&lt;/var&gt; will be shorter than &lt;var&gt;t&lt;/var&gt;, and the final element of &lt;var&gt;t_out&lt;/var&gt; will be the point at which the stopping condition was met, and may not correspond to any element of the vector &lt;var&gt;t&lt;/var&gt;.</source>
          <target state="translated">벡터 &lt;var&gt;t&lt;/var&gt; 는 적분 길이의 상한을 제공합니다. 정지 조건이 충족되는 경우, 벡터 &lt;var&gt;t_out&lt;/var&gt; 는 보다 짧아 질 것이다 &lt;var&gt;t&lt;/var&gt; , 그리고 최종 요소 &lt;var&gt;t_out&lt;/var&gt; 는 정지 조건이 충족 된 시점 것이며, 벡터의 요소에 대응하지 않을 수 &lt;var&gt;t&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="889e674a23e5a725c6b09cf10b575fef201732b9" translate="yes" xml:space="preserve">
          <source>The vector argument specifying limits is optional, and additional string arguments may be used to specify various axis properties.</source>
          <target state="translated">벡터 인수 지정 한계는 선택 사항이며 추가 문자열 인수를 사용하여 다양한 축 속성을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77f0db12997d81f43c39f216670fef21b3112826" translate="yes" xml:space="preserve">
          <source>The vector specifies the coordinates (x0,y0) of the origin of the annotation object, its width, and its height. The width and height may be negative, depending on the orientation of the object.</source>
          <target state="translated">벡터는 주석 객체 원점의 좌표 (x0, y0), 너비 및 높이를 지정합니다. 객체의 방향에 따라 너비와 높이가 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2402be7f90f4f452f0911fd8d544a02b9bb06d98" translate="yes" xml:space="preserve">
          <source>The version is first split into numeric and character portions and then the parts are padded to be the same length (i.e., &lt;code&gt;&quot;1.1&quot;&lt;/code&gt; would be padded to be &lt;code&gt;&quot;1.1.0&quot;&lt;/code&gt; when being compared with &lt;code&gt;&quot;1.1.1&quot;&lt;/code&gt;, and separately, the character parts of the strings are padded with nulls).</source>
          <target state="translated">버전은 먼저 숫자 및 문자 부분으로 분할 된 다음 부분이 동일한 길이로 채워집니다 (즉, &lt;code&gt;&quot;1.1.1&quot;&lt;/code&gt; 과 비교할 때 &lt;code&gt;&quot;1.1&quot;&lt;/code&gt; 은 &lt;code&gt;&quot;1.1.0&quot;&lt;/code&gt; 으로 채워짐 ). 문자열의 문자 부분은 널로 채워집니다).</target>
        </trans-unit>
        <trans-unit id="ee912b8cbf5cfa1d2a9396f359a036398ce4e546" translate="yes" xml:space="preserve">
          <source>The version of Octave. You can get this by noting the version number that is printed when Octave starts, or running it with the &amp;lsquo;</source>
          <target state="translated">Octave의 버전입니다. Octave가 시작될 때 인쇄되는 버전 번호를 기록하거나 '</target>
        </trans-unit>
        <trans-unit id="2fe743faeb5ea6c705519f07347da952639e73c3" translate="yes" xml:space="preserve">
          <source>The versions listed below are the versions used for testing. If newer versions of these packages are available, you should try to use them, although there may be some differences.</source>
          <target state="translated">아래에 나열된 버전은 테스트에 사용 된 버전입니다. 이러한 패키지의 최신 버전이 사용 가능한 경우 약간의 차이가있을 수 있지만 사용하려고 시도해야합니다.</target>
        </trans-unit>
        <trans-unit id="43607882fc94097837d7475698a05ebd85e7c18f" translate="yes" xml:space="preserve">
          <source>The vertex normals &lt;var&gt;vn&lt;/var&gt; are calculated from the gradient of the 3-dimensional array &lt;var&gt;val&lt;/var&gt; (size: lxmxn) containing the data for an isosurface geometry. The normals point towards smaller values in &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">정점 법선 &lt;var&gt;vn&lt;/var&gt; 은 등면 형상에 대한 데이터를 포함하는 3 차원 배열 &lt;var&gt;val&lt;/var&gt; (크기 : lxmxn) 의 기울기에서 계산됩니다 . 법선은 &lt;var&gt;val&lt;/var&gt; 의 작은 값을 가리 킵니다 .</target>
        </trans-unit>
        <trans-unit id="9415437c4fe5edb7588071c3a34c6acea36c5a6d" translate="yes" xml:space="preserve">
          <source>The waitbar is filled to fraction &lt;var&gt;frac&lt;/var&gt; which must be in the range [0, 1].</source>
          <target state="translated">waitbar이 분획을 충전 &lt;var&gt;frac&lt;/var&gt; 범위 [0, 1]에 있어야한다.</target>
        </trans-unit>
        <trans-unit id="54b516272b5a69fa1a5ae89488462d7efa26b186" translate="yes" xml:space="preserve">
          <source>The warning for division by zero (and in fact all warnings) are disabled in the &lt;code&gt;unwinddemo&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;unwinddemo&lt;/code&gt; 기능 에서 0으로 나누기위한 경고 (및 실제로 모든 경고)는 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c247a07c2b56c5e11198047fefa4e7ecab63606" translate="yes" xml:space="preserve">
          <source>The warning id &lt;code&gt;Octave:language-extension&lt;/code&gt; can be enabled to warn about this usage. See &lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;warning_ids&lt;/a&gt;.</source>
          <target state="translated">이 사용법에 대해 경고하기 위해 경고 ID &lt;code&gt;Octave:language-extension&lt;/code&gt; 을 활성화 할 수 있습니다. &lt;a href=&quot;issuing-warnings#XREFwarning_005fids&quot;&gt;warning_ids를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f15f28629b8cabc6cf49c64afff2f08344750dd1" translate="yes" xml:space="preserve">
          <source>The warning message may have multiple lines separated by newline characters (&quot;\n&quot;), or it may be a cellstr array with one element for each line.</source>
          <target state="translated">경고 메시지에는 줄 바꿈 문자 ( &quot;\ n&quot;)로 구분 된 여러 줄이 있거나 각 줄에 대해 하나의 요소가있는 cellstr 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cec88cd9ae39731a1a3b954b4757f1cdffe38e2a" translate="yes" xml:space="preserve">
          <source>The way to use a function is with a &lt;em&gt;function call&lt;/em&gt; expression, which consists of the function name followed by a list of &lt;em&gt;arguments&lt;/em&gt; in parentheses. The arguments are expressions which give the raw materials for the calculation that the function will do. When there is more than one argument, they are separated by commas. If there are no arguments, you can omit the parentheses, but it is a good idea to include them anyway, to clearly indicate that a function call was intended. Here are some examples:</source>
          <target state="translated">함수를 사용하는 방법 은 함수 이름 과 괄호 안의 &lt;em&gt;인수&lt;/em&gt; 목록으로 구성된 &lt;em&gt;함수 호출&lt;/em&gt; 표현식 을 사용하는 것입니다 . 인수는 함수가 수행 할 계산에 원자재를 제공하는 표현식입니다. 둘 이상의 인수가 있으면 쉼표로 구분됩니다. 인수가없는 경우 괄호를 생략 할 수 있지만 어쨌든 함수 호출이 의도되었음을 명확하게 나타 내기 위해 포함하는 것이 좋습니다. 여기 몇 가지 예가 있어요.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efae1904c240d3de25a8d0d556af95aec2f4ef59" translate="yes" xml:space="preserve">
          <source>The while Statement</source>
          <target state="translated">while 문</target>
        </trans-unit>
        <trans-unit id="9afdcc17b54a70ad06bc509d67eb44b6feb569b6" translate="yes" xml:space="preserve">
          <source>The width of the stem. (Default: 0.5)</source>
          <target state="translated">줄기의 너비. (기본값 : 0.5)</target>
        </trans-unit>
        <trans-unit id="7738275b9740c237517aa877fb16b1edbcec8880" translate="yes" xml:space="preserve">
          <source>The wildcard characters &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt; are replaced with wildcards that are appropriate for a regular expression. For example:</source>
          <target state="translated">와일드 카드 문자 &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; 및 &lt;code&gt;?&lt;/code&gt; 정규식에 적합한 와일드 카드로 바뀝니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="265fd67b21492e2d095e2bb4319bbe615bea860f" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ead8bdae2d358cccd162e33a04ad2d916e2bd474" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6f314a6a7b54e7bcd1af1dc02c75c80544787640" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d8edfa17fa6cd0ef76a40f0245157efbbdc18b8e" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0497d66c276c106cd4d9573279c3bbec9b00702c" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="85709db97ca1139b6a108fdc232abbf377595aba" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 이고 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7aceb82057c8605a86d51975c7003662145976d5" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e50f690dc61725c755d31a70a70cd58169b757f1" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04704464256e45546a548e64c371098b04932848" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e356190dfcfa579c2322589c8ae00cbbf1292718" translate="yes" xml:space="preserve">
          <source>The window is truncated at the beginning and end of the array to exclude elements for which there is no source data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt;.</source>
          <target state="translated">소스 데이터가없는 요소를 제외하기 위해 배열의 시작과 끝에서 창이 잘립니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var (&lt;var&gt;x&lt;/var&gt;(1:2))&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var (&lt;var&gt;x&lt;/var&gt;(end-1:end))&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="337005695f34e07da0e6502d3472f7c1ee82ef4d" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = &lt;var&gt;fcn&lt;/var&gt; ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b4b4c5f5cf8f378ce799132473024ac77f5defe" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mad ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mad ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf5ade5299c09cf8ab3fbc80ced530c325c85e66" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = max ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = max ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff4b7dff5c24acb56ff24fa4597036de3a7a7f01" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = mean ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = mean ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4ff8e1a3e9c2eb9e3a8d7cd99632c6f10a23aef" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = min ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = min ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66d2fdbd7ebf1c2a4021180594127639c85e777e" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movmedian ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8551dc23b83c53cd9b791d61b399a1815bf01ffd" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movprod ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movprod ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbfdf87afb6362996f2a3e535b281ffab7eba709" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movstd ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movstd ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a996789faeaed440ba1759f0f22b8312d63b1d91" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = movsum ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = movsum ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4723edde62a9609f9cbbada572562d13b9d8569" translate="yes" xml:space="preserve">
          <source>The window is wrapped so that any missing data elements are taken from the other side of the data. For example, with a window of length 3, &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt;.</source>
          <target state="translated">누락 된 데이터 요소를 데이터의 다른 쪽에서 가져 오도록 창을 래핑합니다. 예를 들어, 길이가 3 인 창에서 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(1) = var ([&lt;var&gt;x&lt;/var&gt;(end), &lt;var&gt;x&lt;/var&gt;(1:2)])&lt;/code&gt; 및 &lt;code&gt;&lt;var&gt;y&lt;/var&gt;(end) = var ([&lt;var&gt;x&lt;/var&gt;(end-1:end), &lt;var&gt;x&lt;/var&gt;(1)])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1af586283478033dc4945ae38514e333a7eb0acf" translate="yes" xml:space="preserve">
          <source>The window name, e.g., &lt;code&gt;&quot;triangle&quot;&lt;/code&gt; or &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; is used to search for a function called &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_lw&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;triangle&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; 과 같은 창 이름 은 &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_lw&lt;/code&gt; 라는 함수를 검색하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ed037e71c66dc1e9250e2872cf4553224c6e1541" translate="yes" xml:space="preserve">
          <source>The window name, e.g., &lt;code&gt;&quot;triangle&quot;&lt;/code&gt; or &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; is used to search for a function called &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_sw&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;triangle&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;rectangle&quot;&lt;/code&gt; 과 같은 창 이름 은 &lt;code&gt;&lt;var&gt;win&lt;/var&gt;_sw&lt;/code&gt; 라는 함수를 검색하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="8df05b212dee45c9da4c449f22ac9c05318e0f4f" translate="yes" xml:space="preserve">
          <source>The window names can be passed as strings or by the &lt;var&gt;win_type&lt;/var&gt; number.</source>
          <target state="translated">창 이름은 문자열 또는 &lt;var&gt;win_type&lt;/var&gt; 번호 로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9f16206783ccac98dcbce0ceef34d6668855fedd" translate="yes" xml:space="preserve">
          <source>The window style of a figure. One of the following values:</source>
          <target state="translated">그림의 창 스타일. 다음 값 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="f453e84da2fec824ab9a7c84c3eecd535ce844cb" translate="yes" xml:space="preserve">
          <source>The wireframe mesh is plotted using rectangles. The vertices of the rectangles [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;] are typically the output of &lt;code&gt;meshgrid&lt;/code&gt;. over a 2-D rectangular region in the x-y plane. &lt;var&gt;z&lt;/var&gt; determines the height above the plane of each vertex. If only a single &lt;var&gt;z&lt;/var&gt; matrix is given, then it is plotted over the meshgrid &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;. Thus, columns of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;x&lt;/var&gt; values and rows of &lt;var&gt;z&lt;/var&gt; correspond to different &lt;var&gt;y&lt;/var&gt; values.</source>
          <target state="translated">와이어 프레임 메쉬는 사각형을 사용하여 플로팅됩니다. 사각형 [ &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; ] 의 정점 은 일반적으로 &lt;code&gt;meshgrid&lt;/code&gt; 의 출력입니다 . xy 평면의 2 차원 직사각형 영역에 &lt;var&gt;z&lt;/var&gt; 는 각 정점의 평면 위의 높이를 결정합니다. 단일 &lt;var&gt;z&lt;/var&gt; 행렬 만 제공되는 경우 meshgrid &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = 1:columns (&lt;var&gt;z&lt;/var&gt;), &lt;var&gt;y&lt;/var&gt; = 1:rows (&lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; 위에 그려집니다 . 따라서 &lt;var&gt;z&lt;/var&gt; 의 열은 다른 &lt;var&gt;x&lt;/var&gt; 값에 해당하고 &lt;var&gt;z&lt;/var&gt; 의 행은 다른 &lt;var&gt;y&lt;/var&gt; 값에 해당 합니다.</target>
        </trans-unit>
        <trans-unit id="6eb3e560b2f2428aa15ebd70e05c4ef13ad26212" translate="yes" xml:space="preserve">
          <source>The word is parsed as a &quot;quoted string&quot;. If the first character of the string is a double quote (&quot;) then the string includes everything until a matching double quote&amp;mdash;including whitespace, delimiters, and end-of-line characters. If a pair of consecutive double quotes appears in the input, it is replaced in the output by a single double quote. For examples, the input &quot;He said &quot;&quot;Hello&quot;&quot;&quot; would return the value &amp;rsquo;He said &quot;Hello&quot;&amp;rsquo;.</source>
          <target state="translated">단어는 &quot;인용 문자열&quot;로 구문 분석됩니다. 문자열의 첫 문자가 큰 따옴표 ( &quot;)이면 문자열에는 공백, 구분 기호 및 줄 끝 문자를 포함하여 일치하는 큰 따옴표까지 모든 것이 포함됩니다. 연속 된 큰 따옴표 쌍이 입력에 나타나면, 예를 들어, &quot;He said&quot; &quot;Hello&quot; &quot;&quot;값은 'He said &quot;Hello&quot;'값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="12418b6549dfa5072acea0b8cd8ff6eff0f2d06c" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to double.</source>
          <target state="translated">단어는 숫자로 구문 분석되어 두 배로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="48a6f0a0afa203e91666c86669c0894fc9514d94" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to int32.</source>
          <target state="translated">단어는 숫자로 구문 분석되어 int32로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="248f11b9fbaf3f2841cf281340efa1e45f9d1462" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to int8, int16, int32, or int64. If no size is specified then int32 is used.</source>
          <target state="translated">단어는 숫자로 구문 분석되어 int8, int16, int32 또는 int64로 변환됩니다. 크기를 지정하지 않으면 int32가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="57c9c1f648f8cafd5c7545bddf01209fc988d236" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to single (float).</source>
          <target state="translated">단어는 숫자로 구문 분석되고 단일 (부동)로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="1822f8a66c09e956db4acd6c8070f64003a36469" translate="yes" xml:space="preserve">
          <source>The word is parsed as a number and converted to uint8, uint16, uint32, or uint64. If no size is specified then uint32 is used.</source>
          <target state="translated">단어는 숫자로 구문 분석되어 uint8, uint16, uint32 또는 uint64로 변환됩니다. 크기를 지정하지 않으면 uint32가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9e32f77b25ad8753b803b583bcea3d23a669ec5f" translate="yes" xml:space="preserve">
          <source>The word is parsed as a string ending at the last character before whitespace, an end-of-line, or a delimiter specified in the options.</source>
          <target state="translated">단어는 공백, 행 끝 또는 옵션에 지정된 구분 기호 앞의 마지막 문자로 끝나는 문자열로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="4d8336ecaeb40aa1d5097dde96e918c38d144caa" translate="yes" xml:space="preserve">
          <source>The word is parsed as a string.</source>
          <target state="translated">단어가 문자열로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="f03e746dc661bb2b5e9b3b91f182ad2d52d18a58" translate="yes" xml:space="preserve">
          <source>The word is skipped.</source>
          <target state="translated">단어를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="244182dc5a0001a0185b5a8f89a7f141bd2a771f" translate="yes" xml:space="preserve">
          <source>The word specified by the remainder of the conversion specifier is skipped.</source>
          <target state="translated">나머지 변환 지정자에 의해 지정된 단어는 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="159f88833ab382c059b737b674ffba5cf22b3de6" translate="yes" xml:space="preserve">
          <source>The x and y coordinates of the original columns of the data passed to &lt;code&gt;area&lt;/code&gt; prior to the cumulative summation used in the &lt;code&gt;area&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;area&lt;/code&gt; 함수에 사용 된 누적 합산 전에 &lt;code&gt;area&lt;/code&gt; 전달 된 데이터의 원래 열의 x 및 y 좌표입니다 .</target>
        </trans-unit>
        <trans-unit id="3165940f41a372dc35f37ce09db96b33d64f03cd" translate="yes" xml:space="preserve">
          <source>The y value of the bars in the &lt;code&gt;hggroup&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hggroup&lt;/code&gt; 에있는 막대의 y 값입니다 .</target>
        </trans-unit>
        <trans-unit id="7fa3f5982b1eeb1201392b26a374775b18f08b19" translate="yes" xml:space="preserve">
          <source>The y-value where the baseline is drawn. (Default: 0)</source>
          <target state="translated">기준선이 그려지는 y 값입니다. (기본값 : 0)</target>
        </trans-unit>
        <trans-unit id="1fc722af7b27264af3c41be85ee66321a6ee30c8" translate="yes" xml:space="preserve">
          <source>Then if the path to &lt;code&gt;func1&lt;/code&gt; is &lt;code&gt;&amp;lt;directory&amp;gt;/func1.m&lt;/code&gt;, and if &lt;code&gt;func2&lt;/code&gt; is found in the directory &lt;code&gt;&amp;lt;directory&amp;gt;/private/func2.m&lt;/code&gt;, then &lt;code&gt;func2&lt;/code&gt; is only available for use of the functions, like &lt;code&gt;func1&lt;/code&gt;, that are found in &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">경로 경우 &lt;code&gt;func1&lt;/code&gt; 있다 &lt;code&gt;&amp;lt;directory&amp;gt;/func1.m&lt;/code&gt; , 그리고 경우 &lt;code&gt;func2&lt;/code&gt; 디렉토리에서 발견되는 &lt;code&gt;&amp;lt;directory&amp;gt;/private/func2.m&lt;/code&gt; 다음 &lt;code&gt;func2&lt;/code&gt; 같은 기능의 사용에 대해서만 사용할 수 있습니다 &lt;code&gt;func1&lt;/code&gt; 발견, 에서 &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f47cf9b5d978dd8923138721acc094642ae853b" translate="yes" xml:space="preserve">
          <source>Then the solution at the roots &lt;var&gt;r&lt;/var&gt; is</source>
          <target state="translated">그런 다음 뿌리의 해결책 &lt;var&gt;r&lt;/var&gt; 의 해 는</target>
        </trans-unit>
        <trans-unit id="18a7080fd8254086cc0399e5bba079cdf26729b6" translate="yes" xml:space="preserve">
          <source>Then, call &lt;code&gt;fsolve&lt;/code&gt; with a specified initial condition to find the roots of the system of equations. For example, given the function &lt;code&gt;f&lt;/code&gt; defined above,</source>
          <target state="translated">그런 다음 지정된 초기 조건으로 &lt;code&gt;fsolve&lt;/code&gt; 를 호출 하여 방정식 시스템의 근을 찾습니다. 예를 들어, 위에서 정의한 함수 &lt;code&gt;f&lt;/code&gt; 가 주어지면</target>
        </trans-unit>
        <trans-unit id="7a66d2465ae5277677f88bca5637f141af59f245" translate="yes" xml:space="preserve">
          <source>There are a couple of important considerations in the choice of function name. First, it must be a valid Octave function name and so must be a sequence of letters, digits, and underscores not starting with a digit. Second, as Octave uses the function name to define the filename it attempts to find the function in, the function name in the &lt;code&gt;DEFUN_DLD&lt;/code&gt; macro must match the filename of the oct-file. Therefore, the above function should be in a file</source>
          <target state="translated">기능 이름 선택에는 몇 가지 중요한 고려 사항이 있습니다. 먼저 유효한 옥타브 함수 이름이어야하며 숫자로 시작하지 않는 문자, 숫자 및 밑줄 시퀀스 여야합니다. 둘째, Octave는 함수 이름을 사용하여 함수를 찾으려고하는 파일 이름을 정의하므로 &lt;code&gt;DEFUN_DLD&lt;/code&gt; 의 함수 이름 매크로 은 oct 파일의 파일 이름과 일치해야합니다. 따라서 위의 기능은 파일에 있어야합니다</target>
        </trans-unit>
        <trans-unit id="1645c497a7650d167e84dcf1ce0d1cc2ec3e6935" translate="yes" xml:space="preserve">
          <source>There are a few further points to note about this method of creating a sparse matrix. First, it is possible to create a sparse matrix with fewer elements than are actually inserted in the matrix. Therefore,</source>
          <target state="translated">희소 행렬을 만드는이 방법에 대해 몇 가지 추가 사항이 있습니다. 먼저, 실제로 행렬에 삽입 된 것보다 적은 수의 요소로 희소 행렬을 만들 수 있습니다. 따라서,</target>
        </trans-unit>
        <trans-unit id="e1555dc02e713bdbf994aaa4e1d1d8f45cbda957" translate="yes" xml:space="preserve">
          <source>There are a number of basic class methods that can (and should) be defined to allow the contents of the classes to be queried and set. The most basic of these is the &lt;code&gt;disp&lt;/code&gt; method. The &lt;code&gt;disp&lt;/code&gt; method is used by Octave whenever a class should be displayed on the screen. Usually this is the result of an Octave expression that doesn&amp;rsquo;t end with a semicolon. If this method is not defined, then Octave won&amp;rsquo;t print anything when displaying the contents of a class which can be confusing.</source>
          <target state="translated">클래스의 내용을 쿼리하고 설정할 수 있도록 정의 할 수있는 많은 기본 클래스 메서드가 있습니다. 가장 기본적인 방법 은 &lt;code&gt;disp&lt;/code&gt; 방법입니다. &lt;code&gt;disp&lt;/code&gt; 클래스가 화면에 표시해야 할 때마다 방법 옥타브 사용된다. 일반적으로 이것은 세미콜론으로 끝나지 않는 옥타브 식의 결과입니다. 이 방법을 정의하지 않으면 옥타브는 혼동 될 수있는 클래스의 내용을 표시 할 때 아무 것도 인쇄하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b138b7c0cb096c3691596544f6284479965cf209" translate="yes" xml:space="preserve">
          <source>There are a number of functions available for checking to see if the elements of a matrix meet some condition, and for rearranging the elements of a matrix. For example, Octave can easily tell you if all the elements of a matrix are finite, or are less than some specified value. Octave can also rotate the elements, extract the upper- or lower-triangular parts, or sort the columns of a matrix.</source>
          <target state="translated">행렬의 요소가 어떤 조건을 충족하는지 확인하고 행렬의 요소를 다시 정렬하는 데 사용할 수있는 여러 기능이 있습니다. 예를 들어, 옥타브는 행렬의 모든 요소가 유한하거나 특정 값보다 작은 지 쉽게 알 수 있습니다. 옥타브는 요소를 회전 시키거나 상부 또는 하부 삼각 부분을 추출하거나 행렬의 열을 정렬 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="07a7e8dda6f5d69563a2994a985d31cd75ef5c05" translate="yes" xml:space="preserve">
          <source>There are a number of functions that allow information concerning sparse matrices to be obtained. The most basic of these is &lt;em&gt;issparse&lt;/em&gt; that identifies whether a particular Octave object is in fact a sparse matrix.</source>
          <target state="translated">희소 행렬에 관한 정보를 얻을 수있는 여러 기능이 있습니다. 이러한 가장 기본적인이다 &lt;em&gt;issparse&lt;/em&gt; 식별 특정 옥타브 객체가 실제로 희소 행렬인지있다.</target>
        </trans-unit>
        <trans-unit id="4d155015acb65f9e1995f6488ef38a076dbe648c" translate="yes" xml:space="preserve">
          <source>There are also conversions for printing an integer argument as an unsigned value in octal, decimal, or hexadecimal radix (&amp;lsquo;</source>
          <target state="translated">정수 인수를 8 진수, 10 진수 또는 16 진수 기수의 부호없는 값으로 인쇄하기위한 변환도 있습니다 ( '</target>
        </trans-unit>
        <trans-unit id="5b706061abf63ef4a6694855e26a15528c3a46e6" translate="yes" xml:space="preserve">
          <source>There are also many ways in which a function could be given as input. It might be passed as one of</source>
          <target state="translated">함수를 입력으로 제공 할 수있는 여러 가지 방법이 있습니다. 다음 중 하나로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c482e22c95a4929da153c6824babf917ca75c0b7" translate="yes" xml:space="preserve">
          <source>There are also the functions &lt;code&gt;mxSetPr&lt;/code&gt;, etc., that perform the inverse, and set the data of an array to use the block of memory pointed to by the argument of &lt;code&gt;mxSetPr&lt;/code&gt;.</source>
          <target state="translated">함수가 또한 &lt;code&gt;mxSetPr&lt;/code&gt; 역을 수행하는 등, 그리고의 인수에 의해 지정된 메모리 블록을 사용하여 어레이의 데이터를 설정 &lt;code&gt;mxSetPr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3b9c3a94df61326b2ce0e75cdaf70e3756c9c58" translate="yes" xml:space="preserve">
          <source>There are currently three options for plotting in Octave: the external program gnuplot, the internal graphics engine using OpenGL coupled with either FLTK or Qt widgets. Gnuplot is a command-driven interactive function plotting program.</source>
          <target state="translated">옥타브에는 플로팅을위한 3 가지 옵션이 있습니다 : 외부 프로그램 gnuplot, FLTK 또는 Qt 위젯과 함께 OpenGL을 사용하는 내부 그래픽 엔진. Gnuplot은 명령 중심 대화식 함수 플로팅 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="8928dbb2cae046213eb080dcc0d78e4447288119" translate="yes" xml:space="preserve">
          <source>There are many classes of mathematical problems which give rise to matrices, where a large number of the elements are zero. In this case it makes sense to have a special matrix type to handle this class of problems where only the nonzero elements of the matrix are stored. Not only does this reduce the amount of memory to store the matrix, but it also means that operations on this type of matrix can take advantage of the a priori knowledge of the positions of the nonzero elements to accelerate their calculations.</source>
          <target state="translated">많은 수의 요소가 0 인 행렬을 야기하는 많은 수의 수학 문제 클래스가 있습니다. 이 경우 행렬의 0이 아닌 요소 만 저장되는이 클래스의 문제를 처리하기 위해 특수 행렬 유형을 갖는 것이 좋습니다. 이렇게하면 행렬을 저장하는 메모리 양이 줄어들뿐만 아니라 이러한 유형의 행렬에 대한 연산이 0이 아닌 요소의 위치에 대한 사전 지식을 활용하여 계산 속도를 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fc1040e188950da7dc34f76d66c0a14d4f8352b" translate="yes" xml:space="preserve">
          <source>There are many different formats for representing such data. Currently, only the two most popular, &lt;em&gt;linear encoding&lt;/em&gt; and &lt;em&gt;mu-law encoding&lt;/em&gt;, are supported by Octave. There is an excellent FAQ on audio formats by Guido van Rossum &lt;a href=&quot;mailto:guido@cwi.nl&quot;&gt;guido@cwi.nl&lt;/a&gt; which can be found at any FAQ ftp site, in particular in the directory</source>
          <target state="translated">이러한 데이터를 나타내는 데에는 여러 가지 형식이 있습니다. 현재 가장 널리 사용되는 두 가지 &lt;em&gt;선형 인코딩&lt;/em&gt; 과 &lt;em&gt;mu-law 인코딩 만&lt;/em&gt; Octave에서 지원됩니다. Guido van Rossum의 오디오 형식에 대한 훌륭한 FAQ 가 있습니다 &lt;a href=&quot;mailto:guido@cwi.nl&quot;&gt;guido@cwi.nl&lt;/a&gt; 은 FAQ 디렉토리, 특히 디렉토리에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91b72cd6e53863779c1c8a43dd8950e080a2cd9d" translate="yes" xml:space="preserve">
          <source>There are many different means of storing sparse matrix data. What all of the methods have in common is that they attempt to reduce the complexity and storage given a priori knowledge of the particular class of problems that will be solved. A good summary of the available techniques for storing sparse matrix is given by Saad &lt;a href=&quot;#FOOT8&quot; name=&quot;DOCF8&quot;&gt;&lt;sup&gt;8&lt;/sup&gt;&lt;/a&gt;. With full matrices, knowledge of the point of an element of the matrix within the matrix is implied by its position in the computers memory. However, this is not the case for sparse matrices, and so the positions of the nonzero elements of the matrix must equally be stored.</source>
          <target state="translated">희소 행렬 데이터를 저장하는 방법에는 여러 가지가 있습니다. 모든 방법의 공통점은 해결 될 특정 종류의 문제에 대한 사전 지식이 주어지면 복잡성과 스토리지를 줄이려고한다는 것입니다. 희소 행렬을 저장하기 위해 이용 가능한 기술에 대한 요약은 Saad &lt;a href=&quot;#FOOT8&quot; name=&quot;DOCF8&quot;&gt;&lt;sup&gt;8에&lt;/sup&gt;&lt;/a&gt; 의해 제공됩니다 . 풀 매트릭스를 사용하면, 매트릭스 내의 매트릭스 요소의 포인트에 대한 지식은 컴퓨터 메모리에서의 위치에 의해 암시됩니다. 그러나 이는 희소 행렬의 경우에는 해당되지 않으므로 행렬의 0이 아닌 요소의 위치는 동일하게 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="824b3fbb5f8225fa6f2f70f5535f67ea4f163f11" translate="yes" xml:space="preserve">
          <source>There are many different variable types in Octave, but only ones created through &lt;code&gt;javaObject&lt;/code&gt; can use Java functions. Before using Java with an unknown object the type can be checked with &lt;code&gt;isjava&lt;/code&gt;.</source>
          <target state="translated">옥타브에는 다양한 변수 유형이 있지만 &lt;code&gt;javaObject&lt;/code&gt; 를 통해 작성된 변수 유형 만 Java 함수를 사용할 수 있습니다. 알 수없는 객체로 Java를 사용하기 전에 &lt;code&gt;isjava&lt;/code&gt; 로 유형을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bcbd373f86f2ee06e41efe99927f5c0b9d3c8b93" translate="yes" xml:space="preserve">
          <source>There are many functions that directly return sparse matrices. These include &lt;em&gt;speye&lt;/em&gt;, &lt;em&gt;sprand&lt;/em&gt;, &lt;em&gt;diag&lt;/em&gt;, etc.</source>
          <target state="translated">희소 행렬을 직접 반환하는 많은 함수가 있습니다. 여기에는 &lt;em&gt;speye&lt;/em&gt; , &lt;em&gt;sprand&lt;/em&gt; , &lt;em&gt;diag&lt;/em&gt; 등 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="2942de5de3cf5ff24e7ec57482acb77f6304d417" translate="yes" xml:space="preserve">
          <source>There are seven different things covered in this section.</source>
          <target state="translated">이 섹션에서는 7 가지 다른 사항을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="edd888b06834fc2508cfbf2a9d41eb69e6b056d1" translate="yes" xml:space="preserve">
          <source>There are several basic functions to return specific sparse matrices. For example the sparse identity matrix, is a matrix that is often needed. It therefore has its own function to create it as &lt;code&gt;speye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;speye (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;)&lt;/code&gt;, which creates an &lt;var&gt;n&lt;/var&gt;-by-&lt;var&gt;n&lt;/var&gt; or &lt;var&gt;r&lt;/var&gt;-by-&lt;var&gt;c&lt;/var&gt; sparse identity matrix.</source>
          <target state="translated">특정 희소 행렬을 반환하는 몇 가지 기본 기능이 있습니다. 예를 들어, 희소 항등 행렬은 종종 필요한 행렬입니다. 그러므로으로 만드는 기능 자체 보유 &lt;code&gt;speye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; 또는 &lt;code&gt;speye (&lt;var&gt;r&lt;/var&gt;, &lt;var&gt;c&lt;/var&gt;)&lt;/code&gt; 생성 &lt;var&gt;n&lt;/var&gt; -by- &lt;var&gt;n&lt;/var&gt; 또는 &lt;var&gt;r&lt;/var&gt; -by- &lt;var&gt;c&lt;/var&gt; 희소 행렬을.</target>
        </trans-unit>
        <trans-unit id="46eb10a778bcc48fafd3816fbebfeee11b38b61e" translate="yes" xml:space="preserve">
          <source>There are several basic ways of constructing matrices or multi-dimensional arrays. Using the class &lt;code&gt;Matrix&lt;/code&gt; as an example one can</source>
          <target state="translated">행렬 또는 다차원 배열을 구성하는 몇 가지 기본 방법이 있습니다. 예를 들어 &lt;code&gt;Matrix&lt;/code&gt; 클래스를 사용하면</target>
        </trans-unit>
        <trans-unit id="7d0c70cc7f3e5e6fb5c02526ea8caa6d494fa58d" translate="yes" xml:space="preserve">
          <source>There are several functions within Octave that can be useful for the purposes of parameter checking. These include the methods of the &lt;code&gt;octave_value&lt;/code&gt; class like &lt;code&gt;is_real_matrix&lt;/code&gt;, &lt;code&gt;is_numeric_type&lt;/code&gt;, etc. (see</source>
          <target state="translated">옥타브에는 몇 가지 기능이 있으며 파라미터 점검에 유용합니다. 이들은의 방법을 포함 &lt;code&gt;octave_value&lt;/code&gt; 같은 클래스 &lt;code&gt;is_real_matrix&lt;/code&gt; , &lt;code&gt;is_numeric_type&lt;/code&gt; 등 (참조</target>
        </trans-unit>
        <trans-unit id="410cf12f0d30c93339401cc3545818d844e3b9b4" translate="yes" xml:space="preserve">
          <source>There are several graphical means of finding out information about sparse matrices. The first is the &lt;em&gt;spy&lt;/em&gt; command, which displays the structure of the nonzero elements of the matrix. See &lt;a href=&quot;#fig_003aspmatrix&quot;&gt;Figure 22.1&lt;/a&gt;, for an example of the use of &lt;em&gt;spy&lt;/em&gt;. More advanced graphical information can be obtained with the &lt;em&gt;treeplot&lt;/em&gt;, &lt;em&gt;etreeplot&lt;/em&gt; and &lt;em&gt;gplot&lt;/em&gt; commands.</source>
          <target state="translated">희소 행렬에 대한 정보를 찾는 여러 가지 그래픽 수단이 있습니다. 첫 번째는 &lt;em&gt;spy&lt;/em&gt; 명령으로 행렬의 0이 아닌 요소의 구조를 표시합니다. &lt;em&gt;spy&lt;/em&gt; 사용 예는 &lt;a href=&quot;#fig_003aspmatrix&quot;&gt;그림 22.1을&lt;/a&gt; 참조하십시오 . &lt;em&gt;treeplot&lt;/em&gt; , &lt;em&gt;etreeplot&lt;/em&gt; 및 &lt;em&gt;gplot&lt;/em&gt; 명령으로 보다 고급 그래픽 정보를 얻을 수 있습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae53f59d6869944d32d5828c8e09b275dc8a74a0" translate="yes" xml:space="preserve">
          <source>There are several means to create sparse matrix.</source>
          <target state="translated">희소 행렬을 만드는 몇 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0679add9d01f865d61f920d7e3021c4295068cd2" translate="yes" xml:space="preserve">
          <source>There are some important differences between the various interpolation methods. The &lt;code&gt;&quot;spline&quot;&lt;/code&gt; method enforces that both the first and second derivatives of the interpolated values have a continuous derivative, whereas the other methods do not. This means that the results of the &lt;code&gt;&quot;spline&quot;&lt;/code&gt; method are generally smoother. If the function to be interpolated is in fact smooth, then &lt;code&gt;&quot;spline&quot;&lt;/code&gt; will give excellent results. However, if the function to be evaluated is in some manner discontinuous, then &lt;code&gt;&quot;pchip&quot;&lt;/code&gt; interpolation might give better results.</source>
          <target state="translated">다양한 보간 방법에는 몇 가지 중요한 차이점이 있습니다. &lt;code&gt;&quot;spline&quot;&lt;/code&gt; 다른 방법 그렇지 반면 방법이 강제 시행은 보간 된 값들의 제 1 및 제 2 유도체 연속 유도체가있다. 이것은 &lt;code&gt;&quot;spline&quot;&lt;/code&gt; 방법 의 결과 가 일반적으로 더 매끄럽다는 것을 의미합니다 . 보간 할 함수가 실제로 매끄럽다면 &lt;code&gt;&quot;spline&quot;&lt;/code&gt; 은 훌륭한 결과를 제공합니다. 그러나 평가할 함수가 어떤 방식으로 불연속적인 경우 &lt;code&gt;&quot;pchip&quot;&lt;/code&gt; 보간이 더 나은 결과를 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91d560ddeec5a2587817ef2cd84c542f8ea882c0" translate="yes" xml:space="preserve">
          <source>There are three additional support functions that allow the user to find out where in the execution of a script Octave entered the debug mode, and to print the code in the script surrounding the point where Octave entered debug mode.</source>
          <target state="translated">사용자가 스크립트 실행에서 Octave가 디버그 모드로 진입 한 위치를 찾고 Octave가 디버그 모드로 진입 한 지점을 둘러싼 스크립트에서 코드를 인쇄 할 수있는 세 가지 추가 지원 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce19aa7b04e3e500ecb3038050383ea6c918ad18" translate="yes" xml:space="preserve">
          <source>There are three calling forms of the function:</source>
          <target state="translated">이 함수에는 세 가지 호출 형식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="687a16741963749084aeb2ccc09916562d74e4dd" translate="yes" xml:space="preserve">
          <source>There are three classes of sparse objects that are of interest to the user.</source>
          <target state="translated">사용자가 관심을 갖는 희소 객체에는 세 가지 클래스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="eefaa87f3b5146a111dfb03cb6ffcdf3ee130faa" translate="yes" xml:space="preserve">
          <source>There are three files that are always available. Although these files can be accessed using their corresponding numeric file ids, you should always use the symbolic names given in the table below, since it will make your programs easier to understand.</source>
          <target state="translated">항상 사용할 수있는 세 개의 파일이 있습니다. 이러한 파일은 해당 숫자 파일 ID를 사용하여 액세스 할 수 있지만 프로그램을보다 쉽게 ​​이해할 수 있도록 항상 아래 표에 제공된 기호 이름을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b8391bc5129634e3cc859ba23f17ea472d5602fa" translate="yes" xml:space="preserve">
          <source>There are three functions that modify the behavior of &lt;code&gt;save&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 동작을 수정하는 세 가지 기능이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="50ba6ca1444cd09db2ab6ced2e204a22e264da62" translate="yes" xml:space="preserve">
          <source>There are three multi-dimensional interpolation functions in Octave, with similar capabilities. Methods using Delaunay tessellation are described in &lt;a href=&quot;interpolation-on-scattered-data#Interpolation-on-Scattered-Data&quot;&gt;Interpolation on Scattered Data&lt;/a&gt;.</source>
          <target state="translated">옥타브에는 비슷한 기능을 가진 3 차원의 다차원 보간 함수가 있습니다. 들로네 테셀레이션을 사용하는 방법 &lt;a href=&quot;interpolation-on-scattered-data#Interpolation-on-Scattered-Data&quot;&gt;은 분산 데이터에 대한 보간에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a0627b1daf19be2819a9d6efc89075a3058c3ef" translate="yes" xml:space="preserve">
          <source>There are three ways to give the property names and values:</source>
          <target state="translated">속성 이름과 값을 지정하는 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e14f29cff5fc2e3313b1e95dda6ce6fb872d605" translate="yes" xml:space="preserve">
          <source>There are times when it is useful to write code that contains assignments within the condition of a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;if&lt;/code&gt; statement. For example, statements like</source>
          <target state="translated">&lt;code&gt;while&lt;/code&gt; 또는 &lt;code&gt;if&lt;/code&gt; 문의 조건 내에 할당이 포함 된 코드를 작성하는 것이 유용한 경우가 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="0dcfc4320981585f5b3ce4e6c05c601d0b1fdc5d" translate="yes" xml:space="preserve">
          <source>There are two basic means of interrupting the execution of an Octave script. These are breakpoints (see &lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;Breakpoints&lt;/a&gt;), discussed in the next section, and interruption based on some condition.</source>
          <target state="translated">옥타브 스크립트의 실행을 방해하는 두 가지 기본 수단이 있습니다. 다음 섹션에서 설명하는 &lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;중단&lt;/a&gt; 점 ( 중단 점 참조 ) 및 일부 조건에 따른 중단입니다.</target>
        </trans-unit>
        <trans-unit id="47bd155efcb3a1f9c8b1a57817bc82244931ec9c" translate="yes" xml:space="preserve">
          <source>There are two important things to know in this case. First, the number of input arguments to the user function is fixed, and in the above example is a single argument. Second, to avoid leaving the temporary function in the Octave symbol table it should be cleared after use. Also, by convention all internal function names begin and end with the character sequence &amp;lsquo;</source>
          <target state="translated">이 경우 알아야 할 두 가지 중요한 사항이 있습니다. 먼저, 사용자 함수에 대한 입력 인수 수는 고정되어 있으며 위의 예에서는 단일 인수입니다. 둘째, Octave 기호 테이블에 임시 기능을 남기지 않으려면 사용 후 삭제해야합니다. 또한, 모든 내부 함수 이름은 일반적으로 문자 시퀀스로 시작하고 끝납니다.</target>
        </trans-unit>
        <trans-unit id="15658fe932976cfb0a3fc6f59ae14aa060162557" translate="yes" xml:space="preserve">
          <source>There are two intrinsically different types of &lt;code&gt;classdef&lt;/code&gt; classes, whose major difference is the behavior regarding variable assignment. The first type are &lt;b&gt;value classes&lt;/b&gt;:</source>
          <target state="translated">본질적으로 다른 두 종류의 &lt;code&gt;classdef&lt;/code&gt; 클래스가 있으며, 그 주요 차이점은 변수 할당과 관련된 동작입니다. 첫 번째 유형은 &lt;b&gt;가치 클래스입니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="d61fd6d7a7896d31872b471cce24825be9fd322a" translate="yes" xml:space="preserve">
          <source>There are two significant limitations on Fourier interpolation. First, the function signal is assumed to be periodic, and so non-periodic signals will be poorly represented at the edges. Second, both the signal and its interpolation are required to be sampled at equispaced points. An example of the use of &lt;code&gt;interpft&lt;/code&gt; is</source>
          <target state="translated">푸리에 보간에는 두 가지 중요한 제한이 있습니다. 첫째, 기능 신호는 주기적으로 가정되므로 비 주기적 신호는 가장자리에 제대로 표시되지 않습니다. 둘째, 신호와 그 보간 모두 동일 간격의 지점에서 샘플링해야합니다. 사용의 예 &lt;code&gt;interpft&lt;/code&gt; 은 이다</target>
        </trans-unit>
        <trans-unit id="3965a46796224da3a2635d002810c63d9be8d804" translate="yes" xml:space="preserve">
          <source>There are two useful strategies for creating a sparse matrix. The first is to create three vectors representing the row index, column index, and data values, and from these create the matrix. The second alternative is to create a sparse matrix with the appropriate amount of space, and then fill in the values. Both techniques have their advantages and disadvantages.</source>
          <target state="translated">희소 행렬을 만드는 데 유용한 두 가지 전략이 있습니다. 첫 번째는 행 인덱스, 열 인덱스 및 데이터 값을 나타내는 세 개의 벡터를 만들고 이로부터 행렬을 만듭니다. 두 번째 대안은 적절한 양의 공간이있는 희소 행렬을 만든 다음 값을 채우는 것입니다. 두 기술 모두 장단점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8225d3040eedccf36dba4859768df1cf6ea0e73" translate="yes" xml:space="preserve">
          <source>There is however one known case where this behavior of Octave&amp;rsquo;s sparse matrices will cause a problem. That is in the handling of the &lt;em&gt;diag&lt;/em&gt; function. Whether &lt;em&gt;diag&lt;/em&gt; returns a sparse or full matrix depending on the type of its input arguments. So</source>
          <target state="translated">그러나 Octave의 희소 행렬의이 동작이 문제를 일으키는 알려진 사례가 있습니다. 그것은 &lt;em&gt;diag&lt;/em&gt; 기능을 다루는 것입니다 . &lt;em&gt;diag&lt;/em&gt; 가 입력 인수의 유형에 따라 희소 또는 전체 행렬을 리턴 하는지 여부 그래서</target>
        </trans-unit>
        <trans-unit id="84edc28bec2443f8e6d77afe10c4123b4b2daf35" translate="yes" xml:space="preserve">
          <source>There is no great harm in using &lt;code&gt;F77_XFCN&lt;/code&gt; in all cases, except that for Fortran code that is short running and executes a large number of times, there is potentially an overhead in doing so. However, if &lt;code&gt;F77_FCN&lt;/code&gt; is used with code that calls &lt;code&gt;XSTOP&lt;/code&gt;, Octave can generate a segmentation fault.</source>
          <target state="translated">실행 시간이 짧고 많은 시간을 실행하는 포트란 코드의 경우 오버 헤드가 발생할 수 있다는 점을 제외하고는 모든 경우에 &lt;code&gt;F77_XFCN&lt;/code&gt; 을 사용 하면 큰 해를 끼치 지 않습니다 . 그러나 &lt;code&gt;F77_FCN&lt;/code&gt; 가 호출하는 코드와 함께 사용 &lt;code&gt;XSTOP&lt;/code&gt; 를 , 옥타브 세그먼트 오류를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a516eb3045062bca577c0035bd8321aac76dced" translate="yes" xml:space="preserve">
          <source>There is often a need to be able to call another Octave function from within an oct-file, and there are many examples of such within Octave itself. For example, the &lt;code&gt;quad&lt;/code&gt; function is an oct-file that calculates the definite integral by quadrature over a user-supplied function.</source>
          <target state="translated">oct 파일 내에서 다른 Octave 함수를 호출 할 필요가있는 경우가 종종 있으며 Octave 자체 내에 그러한 예가 많이 있습니다. 예를 들어, &lt;code&gt;quad&lt;/code&gt; 함수는 사용자 제공 함수에 대해 직교 법으로 명확한 적분을 계산하는 옥텟 파일입니다.</target>
        </trans-unit>
        <trans-unit id="492b91c15b54939ff80441f6a984931f82eb8089" translate="yes" xml:space="preserve">
          <source>There is one built-in variable with a special meaning. The &lt;code&gt;ans&lt;/code&gt; variable always contains the result of the last computation, where the output wasn&amp;rsquo;t assigned to any variable. The code &lt;code&gt;a = cos (pi)&lt;/code&gt; will assign the value -1 to the variable &lt;code&gt;a&lt;/code&gt;, but will not change the value of &lt;code&gt;ans&lt;/code&gt;. However, the code &lt;code&gt;cos (pi)&lt;/code&gt; will set the value of &lt;code&gt;ans&lt;/code&gt; to -1.</source>
          <target state="translated">특별한 의미를 가진 내장 변수가 하나 있습니다. &lt;code&gt;ans&lt;/code&gt; 변수는 항상 출력이 모든 변수에 할당되지 않은 마지막 계산의 결과를 포함한다. 코드 &lt;code&gt;a = cos (pi)&lt;/code&gt; 는 값 -1을 변수 &lt;code&gt;a&lt;/code&gt; 에 할당 하지만 &lt;code&gt;ans&lt;/code&gt; 값은 변경하지 않습니다 . 그러나 코드 &lt;code&gt;cos (pi)&lt;/code&gt; 는 &lt;code&gt;ans&lt;/code&gt; 의 값 을 -1로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7594ce386124a8cc625777db8203b513bd8b4a86" translate="yes" xml:space="preserve">
          <source>There is still one additional problem with this function. What if it is called without an argument? Without additional error checking, Octave will probably print an error message that won&amp;rsquo;t really help you track down the source of the error. To allow you to catch errors like this, Octave provides each function with an automatic variable called &lt;code&gt;nargin&lt;/code&gt;. Each time a function is called, &lt;code&gt;nargin&lt;/code&gt; is automatically initialized to the number of arguments that have actually been passed to the function. For example, we might rewrite the &lt;code&gt;avg&lt;/code&gt; function like this:</source>
          <target state="translated">이 기능에는 여전히 하나의 추가 문제가 있습니다. 인수없이 호출되면 어떻게됩니까? 추가 오류 검사없이 옥타브는 오류의 원인을 추적하는 데 실제로 도움이되지 않는 오류 메시지를 인쇄합니다. 이와 같은 오류를 잡을 수 있도록 Octave는 각 함수에 &lt;code&gt;nargin&lt;/code&gt; 이라는 자동 변수를 제공합니다 . 함수가 호출 될 때마다 &lt;code&gt;nargin&lt;/code&gt; 은 실제로 함수에 전달 된 인수 수로 자동 초기화됩니다. 예를 들어 다음 과 같이 &lt;code&gt;avg&lt;/code&gt; 함수를 다시 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="466b74f976ca2c1251705226e1cc4c1c663ad583" translate="yes" xml:space="preserve">
          <source>Therefore, the test in &lt;code&gt;tsearch&lt;/code&gt; and &lt;code&gt;tsearchn&lt;/code&gt; essentially only needs to express each point in terms of the Barycentric coordinates of each of the simplices of the N-simplex and test the values of &lt;var&gt;beta&lt;/var&gt;. This is exactly the implementation used in &lt;code&gt;tsearchn&lt;/code&gt;. &lt;code&gt;tsearch&lt;/code&gt; is optimized for 2-dimensions and the Barycentric coordinates are not explicitly formed.</source>
          <target state="translated">따라서 &lt;code&gt;tsearch&lt;/code&gt; 및 &lt;code&gt;tsearchn&lt;/code&gt; 의 테스트는 기본적으로 N-simplex의 각 단순화의 Barycentric 좌표로 각 포인트를 표시하고 &lt;var&gt;beta&lt;/var&gt; 값을 테스트하면됩니다 . 이것은 &lt;code&gt;tsearchn&lt;/code&gt; 에서 사용 된 구현 입니다. &lt;code&gt;tsearch&lt;/code&gt; 는 2 차원에 최적화되어 있으며 Barycentric 좌표는 명시 적으로 형성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2c3c26b6149fb034d92c53a1de76948132a8e40" translate="yes" xml:space="preserve">
          <source>Therefore, there is a certain density of nonzero elements of a matrix where it no longer makes sense to store it as a sparse matrix, but rather as a full matrix. For this reason operators and functions that have a high probability of returning a full matrix will always return one. For example adding a scalar constant to a sparse matrix will almost always make it a full matrix, and so the example,</source>
          <target state="translated">따라서, 행렬의 밀도가 0이 아닌 희소 행렬로 저장하는 것이 더 이상 의미가 없으며 전체 행렬로 저장하는 것이 더 이상 합리적입니다. 이러한 이유로 전체 행렬을 반환 할 확률이 높은 연산자와 함수는 항상 1을 반환합니다. 예를 들어, 희소 행렬에 스칼라 상수를 추가하면 거의 항상 정수 행렬이됩니다.</target>
        </trans-unit>
        <trans-unit id="331cf903e951701328f89f9230cad091eb6c976f" translate="yes" xml:space="preserve">
          <source>These are the basic two-dimensional matrix types of Octave. In addition there are a number of multi-dimensional array types including</source>
          <target state="translated">이들은 옥타브의 기본 2 차원 매트릭스 유형입니다. 또한 다음과 같은 여러 가지 다차원 배열 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="22cd5043bcfb95309cae4942d5bf63fb208c135b" translate="yes" xml:space="preserve">
          <source>These are the external build dependencies of the package and are not checked by the package manager. This is here as a hint to the distribution packager. They follow the same conventions as the &lt;code&gt;Depends&lt;/code&gt; keyword. Note that in general, packaging systems such as &lt;code&gt;rpm&lt;/code&gt; or &lt;code&gt;deb&lt;/code&gt; autoprobe the install dependencies from the build dependencies, and therefore a &lt;code&gt;BuildRequires&lt;/code&gt; dependency usually removes the need for a &lt;code&gt;SystemRequirements&lt;/code&gt; dependency.</source>
          <target state="translated">이들은 패키지의 외부 빌드 종속성이며 패키지 관리자가 확인하지 않습니다. 이것은 배포 패키지 프로그램에 대한 힌트입니다. &lt;code&gt;Depends&lt;/code&gt; 키워드 와 동일한 규칙을 따릅니다 . 일반적으로 &lt;code&gt;rpm&lt;/code&gt; 또는 &lt;code&gt;deb&lt;/code&gt; 와 같은 패키징 시스템 은 빌드 종속성에서 설치 종속성을 자동 &lt;code&gt;BuildRequires&lt;/code&gt; 하므로 BuildRequires 종속성은 일반적으로 &lt;code&gt;SystemRequirements&lt;/code&gt; 종속성 의 필요성을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="516c1af866d51d2fdff4b0d6f94bfa815675f767" translate="yes" xml:space="preserve">
          <source>These are the external install dependencies of the package and are not checked by the package manager. This is here as a hint to the distribution packager. They follow the same conventions as the &lt;code&gt;Depends&lt;/code&gt; keyword.</source>
          <target state="translated">이들은 패키지의 외부 설치 종속성이며 패키지 관리자가 확인하지 않습니다. 이것은 배포 패키지 프로그램에 대한 힌트입니다. &lt;code&gt;Depends&lt;/code&gt; 키워드 와 동일한 규칙을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="76a2ee1f74b324a27d5cf79a2c29a6906b8dd1e5" translate="yes" xml:space="preserve">
          <source>These capabilities are used in a number of basic graphics objects. The &lt;code&gt;hggroup&lt;/code&gt; objects created by the functions of Octave contain one or more graphics object and are used to:</source>
          <target state="translated">이러한 기능은 많은 기본 그래픽 객체에 사용됩니다. &lt;code&gt;hggroup&lt;/code&gt; 의 옥타브의 기능에 의해 생성 된 객체는 하나 이상의 그래픽 오브젝트하는데 사용된다 포함 :</target>
        </trans-unit>
        <trans-unit id="77180f5e7b9500bc083a4f119de56fa8e271e19c" translate="yes" xml:space="preserve">
          <source>These codes may be used in conjunction with the { and } characters to limit the change to a part of the string. For example,</source>
          <target state="translated">이러한 코드는 {및} 문자와 함께 사용하여 문자열의 일부로 변경을 제한 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="98f074e49aad02fdf334b6d02cca69d88d572c30" translate="yes" xml:space="preserve">
          <source>These functions are rarely used in practice. One example is the &lt;code&gt;fail (&amp;lsquo;&lt;samp&gt;code&lt;/samp&gt;&amp;rsquo;, &amp;lsquo;&lt;samp&gt;pattern&lt;/samp&gt;&amp;rsquo;)&lt;/code&gt; function which evaluates &amp;lsquo;</source>
          <target state="translated">이러한 기능은 실제로 거의 사용되지 않습니다. 한 가지 예는 &lt;code&gt;fail (&amp;lsquo;&lt;samp&gt;code&lt;/samp&gt;&amp;rsquo;, &amp;lsquo;&lt;samp&gt;pattern&lt;/samp&gt;&amp;rsquo;)&lt;/code&gt; 를 평가하는 ') 함수</target>
        </trans-unit>
        <trans-unit id="f6f242f2f73e40e468f04100d6a0ccceffa4a9f3" translate="yes" xml:space="preserve">
          <source>These functions do not implement a GUI element but are useful when developing programs that do. The functions &lt;code&gt;uiwait&lt;/code&gt;, &lt;code&gt;uiresume&lt;/code&gt;, and &lt;code&gt;waitfor&lt;/code&gt; are only available with the &lt;code&gt;qt&lt;/code&gt; or &lt;code&gt;fltk&lt;/code&gt; toolkits.</source>
          <target state="translated">이러한 기능은 GUI 요소를 구현하지 않지만 프로그램을 개발할 때 유용합니다. &lt;code&gt;uiwait&lt;/code&gt; , &lt;code&gt;uiresume&lt;/code&gt; 및 &lt;code&gt;waitfor&lt;/code&gt; 함수 는 &lt;code&gt;qt&lt;/code&gt; 또는 &lt;code&gt;fltk&lt;/code&gt; 툴킷 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d8019c6589e6cf4ca1496dd0d3d75fd9acce0e7" translate="yes" xml:space="preserve">
          <source>These lists of function calls make it fairly easy to trace the path your program took before the error occurred, and to correct the error before trying again.</source>
          <target state="translated">이러한 함수 호출 목록을 사용하면 오류가 발생하기 전에 프로그램이 수행 한 경로를 쉽게 추적하고 다시 시도하기 전에 오류를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89d5f1b227db73e91b393e0028b5569c63f68b74" translate="yes" xml:space="preserve">
          <source>These operators group right to left.</source>
          <target state="translated">이 연산자는 오른쪽에서 왼쪽으로 그룹화됩니다.</target>
        </trans-unit>
        <trans-unit id="a854e78a3e0d930cdd2b056ddef26cc233245776" translate="yes" xml:space="preserve">
          <source>These operators work on an element-by-element basis. For example, the expression</source>
          <target state="translated">이 연산자는 요소별로 작동합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="57ac34382fadfc67c830a52b20fd23a6b3b68189" translate="yes" xml:space="preserve">
          <source>These rotations are centered around the camera target (see &lt;a href=&quot;#XREFcamtarget&quot;&gt;camtarget&lt;/a&gt;). First the camera position is pitched up or down by rotating it &lt;var&gt;phi&lt;/var&gt; degrees around an axis orthogonal to both the viewing direction (specifically &lt;code&gt;camtarget() - campos()&lt;/code&gt;) and the camera &amp;ldquo;up vector&amp;rdquo; (see &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt;). Example:</source>
          <target state="translated">이러한 회전은 카메라 대상을 중심으로합니다 ( &lt;a href=&quot;#XREFcamtarget&quot;&gt;camtarget&lt;/a&gt; 참조 ). 먼저 카메라 위치는 보기 방향 (특히 &lt;code&gt;camtarget() - campos()&lt;/code&gt; )과 카메라 &quot;위 벡터&quot;( &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt; 참조 )에 직교하는 축을 중심으로 &lt;var&gt;phi&lt;/var&gt; 도 회전하여 위 또는 아래로 피치됩니다 . 예:</target>
        </trans-unit>
        <trans-unit id="60805c7b6bd0842c8bcdda9d4de849b0d534f7bd" translate="yes" xml:space="preserve">
          <source>These routines are highly optimized and many do not carry the overhead of being interpreted.</source>
          <target state="translated">이러한 루틴은 고도로 최적화되어 있으며 많은 사람들이 해석되는 오버 헤드를 가지고 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f3cd139378dd80fccd1ba3c76f09ba5eaafa810d" translate="yes" xml:space="preserve">
          <source>These types all share a number of basic methods and operators. Many bear a resemblance to functions that exist in the interpreter. A selection of useful methods include</source>
          <target state="translated">이러한 유형은 모두 여러 가지 기본 방법과 연산자를 공유합니다. 많은 사람들이 인터프리터에 존재하는 함수와 유사합니다. 유용한 방법의 선택은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ac1bb402d49b1a35ff04a2c063f40a0588aa5b17" translate="yes" xml:space="preserve">
          <source>These warnings are emitted if a (nearly) singular matrix is inverted. By default, the &lt;code&gt;Octave:nearly-singular-matrix&lt;/code&gt; and &lt;code&gt;Octave:singular-matrix&lt;/code&gt; warnings are enabled.</source>
          <target state="translated">(거의) 특이 행렬이 반전되면 이러한 경고가 발생합니다. 기본적으로 &lt;code&gt;Octave:nearly-singular-matrix&lt;/code&gt; 및 &lt;code&gt;Octave:singular-matrix&lt;/code&gt; 경고가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c78f8f82db1e4ddf507a02ca7de09b2ee880f9b9" translate="yes" xml:space="preserve">
          <source>This allows more rapid solutions of linear equations involving &lt;var&gt;A&lt;/var&gt; to be performed.</source>
          <target state="translated">이를 통해 &lt;var&gt;A&lt;/var&gt; 와 관련된 선형 방정식의 더 빠른 솔루션을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="114d33926dc55d70ed6fb4c5dffd47b70df2af5e" translate="yes" xml:space="preserve">
          <source>This allows the cost of determining the matrix type to be avoided. However, incorrectly defining the matrix type will result in incorrect results from solutions of linear equations, and so it is entirely the responsibility of the user to correctly identify the matrix type</source>
          <target state="translated">이것은 매트릭스 타입을 결정하는 비용을 피할 수있게한다. 그러나 행렬 유형을 잘못 정의하면 선형 방정식의 솔루션에서 잘못된 결과가 발생하므로 행렬 유형을 올바르게 식별하는 것은 전적으로 사용자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="9032d9741099a355cfb52ff095d5eccc4587e6e9" translate="yes" xml:space="preserve">
          <source>This allows you to view one screenful at a time. Some pagers (such as &lt;code&gt;less&lt;/code&gt;&amp;mdash;see &lt;a href=&quot;installation#Installation&quot;&gt;Installation&lt;/a&gt;) are also capable of moving backward on the output.</source>
          <target state="translated">이를 통해 한 번에 한 화면 씩 볼 수 있습니다. (예컨대 일부 호출기 &lt;code&gt;less&lt;/code&gt; 이따 &lt;a href=&quot;installation#Installation&quot;&gt;설치&lt;/a&gt; )도 출력을 후진시킬 수있다.</target>
        </trans-unit>
        <trans-unit id="ce3bdf687e04e1138c7ae08f9b74b69db8e7517b" translate="yes" xml:space="preserve">
          <source>This appendix will eventually contain a semi-formal description of Octave&amp;rsquo;s language.</source>
          <target state="translated">이 부록에는 결국 Octave 언어에 대한 반 정형 설명이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="40e2801127f754f45136424c94122dc01595e8cb" translate="yes" xml:space="preserve">
          <source>This applies to arrays (matrices), cell arrays, and structs indexed using &amp;lsquo;</source>
          <target state="translated">이것은 배열 (행렬), 셀 배열 및 ''</target>
        </trans-unit>
        <trans-unit id="0b8547225adb0b322654638d6ce5a5b8542cc4cd" translate="yes" xml:space="preserve">
          <source>This behavior is consistent with the other logical functions. See &lt;a href=&quot;logical-values#Logical-Values&quot;&gt;Logical Values&lt;/a&gt;. The behavior differs from the C language function which returns nonzero if the sign bit is set.</source>
          <target state="translated">이 동작은 다른 논리 기능과 일치합니다. &lt;a href=&quot;logical-values#Logical-Values&quot;&gt;논리 값을&lt;/a&gt; 참조하십시오 . 동작은 부호 비트가 설정된 경우 0이 아닌 값을 반환하는 C 언어 함수와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a3e74c97a50c32e12f34831e8a63583aea04f1eb" translate="yes" xml:space="preserve">
          <source>This behavior is necessary for the boolean operators to work as described for matrix-valued operands.</source>
          <target state="translated">부울 연산자가 행렬 값 피연산자에 대해 설명 된대로 작동하려면이 동작이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8ffa8b0148502639eadd3acddb1fc5d60065929f" translate="yes" xml:space="preserve">
          <source>This behavior not only facilitates the most straightforward and efficient implementation of algorithms, but also preserves certain useful invariants, like:</source>
          <target state="translated">이 동작은 가장 간단하고 효율적인 알고리즘 구현을 용이하게 할뿐만 아니라 다음과 같은 유용한 불변량을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="c37c09d162d5ffa4f1738f98cc1abcaa14fdd8e8" translate="yes" xml:space="preserve">
          <source>This can be accomplished with the following functions by</source>
          <target state="translated">이것은 다음과 같은 기능으로 수행 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="404c1b065822b1654232a85e29ab366f7eb5d2e9" translate="yes" xml:space="preserve">
          <source>This can be computed exactly using</source>
          <target state="translated">이것은 정확하게 사용하여 계산할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="fdab6097b81d07628e46c33c3c9f51c5c1410461" translate="yes" xml:space="preserve">
          <source>This can be demonstrated by the code</source>
          <target state="translated">이것은 코드로 설명 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ec51b5a3283d6ddeea00a35b9ade8f2a2948ae80" translate="yes" xml:space="preserve">
          <source>This can be used by Octave packages to extend the image reading capabilities Octave, through use of the PKG_ADD and PKG_DEL commands.</source>
          <target state="translated">PKG_ADD 및 PKG_DEL 명령을 사용하여 Octave 패키지에서 이미지 판독 기능 Octave를 확장하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f256c11b92144e23214d4f33ad7389498d135553" translate="yes" xml:space="preserve">
          <source>This can be used for all matrix and array types.</source>
          <target state="translated">모든 매트릭스 및 배열 유형에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b14bbaea156f1c5bd006b45fc83550693bb4100f" translate="yes" xml:space="preserve">
          <source>This can be used to generate many distributions:</source>
          <target state="translated">이것은 많은 분포를 생성하는데 사용될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="885fee0ae890bb804c4686fb2c6d30e9078052bc" translate="yes" xml:space="preserve">
          <source>This can be used to write somewhat more concise code. For example, it is possible write</source>
          <target state="translated">좀 더 간결한 코드를 작성하는 데 사용할 수 있습니다. 예를 들어 쓰기 가능</target>
        </trans-unit>
        <trans-unit id="8fd66c1d53ba2ceb4d4f1de5f0b148ec8ecab1f3" translate="yes" xml:space="preserve">
          <source>This can be useful for packagers that may split the Octave installation into multiple sub-packages, for example, to provide a hint to users for how to install the missing components.</source>
          <target state="translated">이는 Octave 설치를 여러 하위 패키지로 분할 할 수있는 패키저에 유용합니다. 예를 들어 누락 된 구성 요소를 설치하는 방법에 대한 힌트를 사용자에게 제공합니다.</target>
        </trans-unit>
        <trans-unit id="287ae4e82e924e1ba767e0b529fcbe7176538188" translate="yes" xml:space="preserve">
          <source>This can be written in a clearer and more condensed form using the &lt;code&gt;+=&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt; 연산자를 사용하여보다 명확하고 간결한 형식으로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e72eaea8571e4fa0d755737df12accfcc9681ebf" translate="yes" xml:space="preserve">
          <source>This can then be associated with an object either at the object&amp;rsquo;s creation, or later with the &lt;code&gt;set&lt;/code&gt; function. For example,</source>
          <target state="translated">그러면 객체를 만들 때 또는 나중에 &lt;code&gt;set&lt;/code&gt; 함수를 사용하여 객체와 연결할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="4935cbc1e2ef3c661f74a0215fa6666a3367e512" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions that are available to allow you to get information about what is happening outside of Octave, while it is still running, and use this information in your program. For example, you can get information about environment variables, the current time, and even start other programs from the Octave prompt.</source>
          <target state="translated">이 장에서는 옥타브 외부에서 발생하는 상황에 대한 정보를 얻을 수있는 기능에 대해 설명합니다.이 정보는 프로그램에서 사용됩니다. 예를 들어, 환경 변수, 현재 시간에 대한 정보를 얻거나 옥타브 프롬프트에서 다른 프로그램을 시작할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bc58e0d4ec5aadfefd10d5da01cf97d830bba70" translate="yes" xml:space="preserve">
          <source>This chapter describes the signal processing and fast Fourier transform functions available in Octave. Fast Fourier transforms are computed with the &lt;small&gt;FFTW&lt;/small&gt; or &lt;small&gt;FFTPACK&lt;/small&gt; libraries depending on how Octave is built.</source>
          <target state="translated">이 장에서는 옥타브에서 사용할 수있는 신호 처리 및 고속 푸리에 변환 기능에 대해 설명합니다. 고속 푸리에 변환은 Octave의 구축 방법에 따라 &lt;small&gt;FFTW&lt;/small&gt; 또는 &lt;small&gt;FFTPACK&lt;/small&gt; 라이브러리를 사용하여 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="9694693adb5d638fb4cf3658a951a2cc7c4472ca" translate="yes" xml:space="preserve">
          <source>This chapter discusses the means of constructing a user class, how to query and set the properties of a class, and how to overload operators and functions. Throughout this chapter real code examples are given using a class designed for polynomials.</source>
          <target state="translated">이 장에서는 사용자 클래스 구성 방법, 클래스 속성을 쿼리 및 설정하는 방법, 연산자 및 함수를 오버로드하는 방법에 대해 설명합니다. 이 장에서 실제 코드 예제는 다항식을 위해 설계된 클래스를 사용하여 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="06310114a27e9e9841c8a855bb2a3d118572a348" translate="yes" xml:space="preserve">
          <source>This chapter discusses vectorization and other techniques for writing faster code.</source>
          <target state="translated">이 장에서는 빠른 코드 작성을위한 벡터화 및 기타 기술에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7ca6bd6b318f77496e33892f2c28ef84b9dbf6da" translate="yes" xml:space="preserve">
          <source>This chapter documents the linear algebra functions provided in Octave. Reference material for many of these functions may be found in Golub and Van Loan,</source>
          <target state="translated">이 장에서는 Octave에서 제공되는 선형 대수 함수를 설명합니다. 이러한 여러 기능에 대한 참조 자료는 Golub 및 Van Loan,</target>
        </trans-unit>
        <trans-unit id="7d525aa2dea5c949b943bc3772fe57aaaa0d30e1" translate="yes" xml:space="preserve">
          <source>This chapter explains some of Octave&amp;rsquo;s basic features, including how to start an Octave session, get help at the command prompt, edit the command line, and write Octave programs that can be executed as commands from your shell.</source>
          <target state="translated">이 장에서는 Octave 세션을 시작하고 명령 프롬프트에서 도움을 받고 명령 줄을 편집하며 쉘에서 명령으로 실행할 수있는 Octave 프로그램을 작성하는 방법을 포함하여 Octave의 기본 기능 중 일부에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f870b3b1cd9baf34cf54a90e4fb969929abdd9b1" translate="yes" xml:space="preserve">
          <source>This chapter illustrates user-defined classes and object oriented programming through a custom class designed for polynomials. This class was chosen for its simplicity which does not distract unnecessarily from the discussion of the programming features of Octave. Even so, a bit of background on the goals of the polynomial class is necessary before the syntax and techniques of Octave object oriented programming are introduced.</source>
          <target state="translated">이 장에서는 다항식을 위해 설계된 사용자 정의 클래스를 통한 사용자 정의 클래스 및 객체 지향 프로그래밍에 대해 설명합니다. 이 클래스는 Octave의 프로그래밍 기능에 대한 논의에서 불필요하게 방해받지 않는 단순성을 위해 선택되었습니다. 그럼에도 불구하고 Octave 객체 지향 프로그래밍의 구문과 기술이 도입되기 전에 다항식 클래스의 목표에 대한 약간의 배경 지식이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6223d5152e7bd8810b922a69df306af3d062bb6c" translate="yes" xml:space="preserve">
          <source>This class is designed to allow easy parsing of function arguments. The class supports four types of arguments:</source>
          <target state="translated">이 클래스는 함수 인수를 쉽게 구문 분석 할 수 있도록 설계되었습니다. 이 클래스는 네 가지 유형의 인수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="28b4bb88f5904d5f0303192b52d6e89deae84e1e" translate="yes" xml:space="preserve">
          <source>This code makes the repetitive structure of the problem more explicit, making the code easier to read, and hence maintain. Also, if the variable &lt;code&gt;X&lt;/code&gt; should change its name, only one line would need changing compared to one line per case when &lt;code&gt;if&lt;/code&gt; statements are used.</source>
          <target state="translated">이 코드는 문제의 반복적 인 구조를보다 명확하게하여 코드를보다 쉽게 ​​읽고 유지 관리 할 수있게합니다. 또한 변수 &lt;code&gt;X&lt;/code&gt; 가 이름을 변경해야하는 경우 &lt;code&gt;if&lt;/code&gt; 문을 사용하는 경우 한 줄에 비해 한 줄만 변경하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="a8e22f90874a1bc576fc1dc09b9d917c9145109f" translate="yes" xml:space="preserve">
          <source>This code works by first evaluating the expression &lt;code&gt;3:10&lt;/code&gt;, to produce a range of values from 3 to 10 inclusive. Then the variable &lt;code&gt;i&lt;/code&gt; is assigned the first element of the range and the body of the loop is executed once. When the end of the loop body is reached, the next value in the range is assigned to the variable &lt;code&gt;i&lt;/code&gt;, and the loop body is executed again. This process continues until there are no more elements to assign.</source>
          <target state="translated">이 코드는 먼저 &lt;code&gt;3:10&lt;/code&gt; 식을 평가하여 3에서 10 사이의 값 범위를 생성합니다. 그런 다음 변수 &lt;code&gt;i&lt;/code&gt; 에 범위의 첫 번째 요소가 할당되고 루프 본문이 한 번 실행됩니다. 루프 본문의 끝에 도달하면 범위의 다음 값이 변수 &lt;code&gt;i&lt;/code&gt; 에 할당되고 루프 본문이 다시 실행됩니다. 할당 할 요소가 더 이상 없을 때까지이 프로세스가 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="01ddb9d51a79b3eee57efcdbe2e6af77b1ab3d1e" translate="yes" xml:space="preserve">
          <source>This colormap gives a sepia tone when used on grayscale images.</source>
          <target state="translated">이 컬러 맵은 회색조 이미지에 사용될 때 세피아 톤을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="35f79e5d7dcd2ee2e1e0c3cc83c15c90f925b763" translate="yes" xml:space="preserve">
          <source>This colormap varies from black to white going though blue, green, and red tones while maintaining a monotonically increasing perception of intensity. This is achieved by traversing a color cube from black to white through a helix, hence the name cubehelix, while taking into account the perceived brightness of each channel according to the NTSC specifications from 1953.</source>
          <target state="translated">이 컬러 맵은 단조롭게 증가하는 강도 인식을 유지하면서 파랑에서 녹색, 빨강 톤을 통해 검정에서 흰색으로 다양합니다. 이것은 1953 년의 NTSC 사양에 따라 각 채널의인지되는 밝기를 고려하면서, 컬러 큐브를 나선을 통해 검은 색에서 흰색으로 가로 지르기 때문에 cubehelix라는 이름으로 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="8a77be10bf36a565bd9fc7ded86acc85d5471b79" translate="yes" xml:space="preserve">
          <source>This command fixes the camera&amp;rsquo;s viewing direction (&lt;code&gt;camtarget() - campos()&lt;/code&gt;), camera up vector (see &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt;) and viewing angle (see &lt;a href=&quot;#XREFcamva&quot;&gt;camva&lt;/a&gt;). The camera target (see &lt;a href=&quot;#XREFcamtarget&quot;&gt;camtarget&lt;/a&gt;) and camera position (see &lt;a href=&quot;#XREFcampos&quot;&gt;campos&lt;/a&gt;) are changed.</source>
          <target state="translated">이 명령은 카메라의 시야 방향 ( &lt;code&gt;camtarget() - campos()&lt;/code&gt; ), 카메라 업 벡터 ( &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt; 참조 ) 및 시야각 ( &lt;a href=&quot;#XREFcamva&quot;&gt;camva&lt;/a&gt; 참조 )을 수정합니다. 카메라 대상 ( &lt;a href=&quot;#XREFcamtarget&quot;&gt;camtarget&lt;/a&gt; 참조 )과 카메라 위치 ( &lt;a href=&quot;#XREFcampos&quot;&gt;campos&lt;/a&gt; 참조 )가 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="85c2ddd5459091af861d15b2542c6f75c5bebad3" translate="yes" xml:space="preserve">
          <source>This command only affects the display of numbers, but not how they are stored or computed. To change the internal representation from the default double use one of the conversion functions such as &lt;code&gt;single&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, etc.</source>
          <target state="translated">이 명령은 숫자 표시에만 영향을 주지만 숫자를 저장하거나 계산하는 방법에는 영향을 미치지 않습니다. 내부 double을 기본 double에서 변경하려면 &lt;code&gt;single&lt;/code&gt; , &lt;code&gt;uint8&lt;/code&gt; , &lt;code&gt;int64&lt;/code&gt; 등과 같은 변환 함수 중 하나를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef83f665a777e09c4d0332b38ffe2ab0696f6840" translate="yes" xml:space="preserve">
          <source>This command will plot &lt;code&gt;y&lt;/code&gt; with red circles, &lt;code&gt;y2&lt;/code&gt; with solid lines, &lt;code&gt;y3&lt;/code&gt; with solid magenta lines, and &lt;code&gt;y4&lt;/code&gt; with points displayed as &amp;lsquo;</source>
          <target state="translated">이 명령은 &lt;code&gt;y&lt;/code&gt; 를 빨간색 원으로, &lt;code&gt;y2&lt;/code&gt; 로 실선을, &lt;code&gt;y3&lt;/code&gt; 을 실선으로 마젠타 선을, &lt;code&gt;y4&lt;/code&gt; 를 점으로 '</target>
        </trans-unit>
        <trans-unit id="b89fc65079ce5c365a410663a8cb27b013122a6f" translate="yes" xml:space="preserve">
          <source>This command will plot the data in the variable &lt;code&gt;b&lt;/code&gt;, with points displayed as &amp;lsquo;</source>
          <target state="translated">이 명령은 변수 &lt;code&gt;b&lt;/code&gt; 에 데이터를 표시하고 점은 '</target>
        </trans-unit>
        <trans-unit id="f9e0b2f4fb9e85bc0a24fb8b505fbdb26c5efcf6" translate="yes" xml:space="preserve">
          <source>This constructor can &lt;strong&gt;only&lt;/strong&gt; be used with matrix types.</source>
          <target state="translated">이 생성자는 행렬 유형 &lt;strong&gt;에만&lt;/strong&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6ca34c6a6d73e0be34178d17a77b09b20fec1fd" translate="yes" xml:space="preserve">
          <source>This creates a 2-by-9 character matrix.</source>
          <target state="translated">2x9 문자 매트릭스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b4c579a421dde4b1ff1d65d848faf52434d90927" translate="yes" xml:space="preserve">
          <source>This creates a N-by-2 matrix &lt;code&gt;nodes&lt;/code&gt; and a E-by-3 matrix &lt;code&gt;elems&lt;/code&gt; with values, which define finite element triangles:</source>
          <target state="translated">이것은 유한 요소 삼각형을 정의하는 값으로 &lt;code&gt;elems&lt;/code&gt; 행렬 &lt;code&gt;nodes&lt;/code&gt; 와 Ex3 행렬 요소를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f6f80779c20357a3c006d8af99d3e93eed172ce5" translate="yes" xml:space="preserve">
          <source>This creates a sparse matrix with the same structure as &lt;var&gt;S&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;S&lt;/var&gt; 와 동일한 구조로 희소 행렬을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="368c29fa95f88ae6085ee0f8a616841ed0c224e6" translate="yes" xml:space="preserve">
          <source>This creates the same matrix as previously. Again, although not strictly necessary, it is significantly faster if the sparse matrix is created and the elements are added in column-major ordering. The reason for this is that when elements are inserted at the end of the current list of known elements then no element in the matrix needs to be moved to allow the new element to be inserted; Only the column indices need to be updated.</source>
          <target state="translated">이것은 이전과 같은 행렬을 만듭니다. 꼭 필요한 것은 아니지만, 희소 행렬이 생성되고 요소가 열 주요 순서로 추가되면 훨씬 빠릅니다. 그 이유는 현재 알려진 요소 목록의 끝에 요소를 삽입 할 때 새 요소를 삽입 할 수 있도록 매트릭스의 요소를 이동할 필요가 없기 때문입니다. 열 인덱스 만 업데이트하면됩니다.</target>
        </trans-unit>
        <trans-unit id="68a76a0355b8244c80d1f4f8994318433cf2289e" translate="yes" xml:space="preserve">
          <source>This document corresponds to Octave version 5.1.0.</source>
          <target state="translated">이 문서는 Octave 버전 5.1.0에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="0dba264891b29494dd04eb559595a8439c1ffe3a" translate="yes" xml:space="preserve">
          <source>This error message has several parts, and gives quite a bit of information to help you locate the source of the error. The messages are generated from the point of the innermost error, and provide a traceback of enclosing expressions and function calls.</source>
          <target state="translated">이 오류 메시지는 여러 부분으로 구성되어 있으며 오류의 원인을 찾는 데 도움이되는 많은 정보를 제공합니다. 메시지는 가장 안쪽의 오류 지점에서 생성되며 둘러싸는 표현식 및 함수 호출의 역 추적을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e8025934018a52607bf3043b6efc0a3dbb3ed587" translate="yes" xml:space="preserve">
          <source>This example creates a variable &lt;code&gt;fib&lt;/code&gt; that contains the first ten elements of the Fibonacci sequence.</source>
          <target state="translated">이 예에서는 피보나치 시퀀스의 처음 10 개 요소를 포함 하는 변수 &lt;code&gt;fib&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="24ec35f8bdb301c66d9e8a3c551cf69d6e3f0c72" translate="yes" xml:space="preserve">
          <source>This example demonstrates most of the features needed to link to an external Fortran function, including passing arrays and strings, as well as exception handling. Both the Fortran and C++ files need to be compiled in order for the example to work.</source>
          <target state="translated">이 예제는 예외 처리는 물론 배열 및 문자열 전달을 포함하여 외부 Fortran 함수에 연결하는 데 필요한 대부분의 기능을 보여줍니다. 예제가 작동하려면 Fortran 및 C ++ 파일을 모두 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="d8034d960b3a8d6b0a787be5990d26c53f95d716" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &amp;lsquo;</source>
          <target state="translated">이 예는 '</target>
        </trans-unit>
        <trans-unit id="e34d37e3027e2f20d2b9bde7e69a748813c5c633" translate="yes" xml:space="preserve">
          <source>This example uses ILU as preconditioner for a random FEM-Matrix, which has a large condition number. Without &lt;var&gt;L&lt;/var&gt; and &lt;var&gt;U&lt;/var&gt; BICG would not converge.</source>
          <target state="translated">이 예는 조건 번호가 큰 임의의 FEM- 매트릭스에 대한 전제 조건으로 ILU를 사용합니다. &lt;var&gt;L&lt;/var&gt; 과 &lt;var&gt;U&lt;/var&gt; 가 없으면 BICG는 수렴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8861b43d9e0b36e78fe97958252da3e75b803943" translate="yes" xml:space="preserve">
          <source>This expression causes the variable &lt;var&gt;x&lt;/var&gt; to be decremented. The value of the expression is the &lt;em&gt;old&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">이 표현식은 변수 &lt;var&gt;x&lt;/var&gt; 를 감소시킵니다. 표현식의 값은 &lt;var&gt;x&lt;/var&gt; 의 &lt;em&gt;이전&lt;/em&gt; 값입니다 .</target>
        </trans-unit>
        <trans-unit id="905adfc818f95047998ed251dfccb30a8000fd8f" translate="yes" xml:space="preserve">
          <source>This expression causes the variable &lt;var&gt;x&lt;/var&gt; to be incremented. The value of the expression is the &lt;em&gt;old&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">이 표현식은 변수 &lt;var&gt;x&lt;/var&gt; 가 증가되도록합니다. 표현식의 값은 &lt;var&gt;x&lt;/var&gt; 의 &lt;em&gt;이전&lt;/em&gt; 값입니다 .</target>
        </trans-unit>
        <trans-unit id="ac2dd45958c46ba44b43d4288d2be6ba1394d831" translate="yes" xml:space="preserve">
          <source>This expression decrements the variable &lt;var&gt;x&lt;/var&gt;. The value of the expression is the &lt;em&gt;new&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;. It is equivalent to the expression &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; - 1&lt;/code&gt;.</source>
          <target state="translated">이 표현식은 변수 &lt;var&gt;x&lt;/var&gt; 를 감소시킵니다 . 표현식의 값은 &lt;var&gt;x&lt;/var&gt; 의 &lt;em&gt;새로운&lt;/em&gt; 값입니다 . 표현식 &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; - 1&lt;/code&gt; = &lt;var&gt;x&lt;/var&gt; -1과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4411c11bd8911487c2a8c91de5217c561d2269da" translate="yes" xml:space="preserve">
          <source>This expression increments the variable &lt;var&gt;x&lt;/var&gt;. The value of the expression is the &lt;em&gt;new&lt;/em&gt; value of &lt;var&gt;x&lt;/var&gt;. It is equivalent to the expression &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; + 1&lt;/code&gt;.</source>
          <target state="translated">이 표현식은 변수 &lt;var&gt;x&lt;/var&gt; 를 증가시킵니다 . 표현식의 값은 &lt;var&gt;x&lt;/var&gt; 의 &lt;em&gt;새로운&lt;/em&gt; 값입니다 . 표현식 &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; + 1&lt;/code&gt; = &lt;var&gt;x&lt;/var&gt; + 1과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d855e2588465e6a87fabb7c93db299a96a10dbd3" translate="yes" xml:space="preserve">
          <source>This file can be used to make changes to the default Octave environment for a particular project. Octave searches for this file in the current directory after it reads</source>
          <target state="translated">이 파일은 특정 프로젝트의 기본 옥타브 환경을 변경하는 데 사용할 수 있습니다. Octave는이 파일을 읽은 후 현재 디렉토리에서이 파일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="6fca94dcfb1a84b3188885421364803978a9a0e7" translate="yes" xml:space="preserve">
          <source>This file is used to make personal changes to the default Octave environment.</source>
          <target state="translated">이 파일은 기본 Octave 환경을 개인적으로 변경하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5387b8274b29c3b4898ea2a5175adee99f0f1e14" translate="yes" xml:space="preserve">
          <source>This file is used to make personal changes to the default Octave environment. It is executed for &lt;small&gt;MATLAB&lt;/small&gt; compatibility, but</source>
          <target state="translated">이 파일은 기본 Octave 환경을 개인적으로 변경하는 데 사용됩니다. &lt;small&gt;MATLAB&lt;/small&gt; 호환성을 위해 실행 되지만</target>
        </trans-unit>
        <trans-unit id="0eba4c00e4a70470d102786523461a7aac2d462d" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;+&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 기능과 &lt;code&gt;+&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9061137764d54615d6b00791b1367a1a8771017f" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;-&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 기능 &lt;code&gt;-&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c3a9212bac9f7f38d0343a51a92ffeab8a127a33" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent. If more arguments are given, the multiplication is applied cumulatively from left to right:</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다. 더 많은 인수가 제공되면 곱셈이 왼쪽에서 오른쪽으로 누적 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="efe25524b3986ac4749449f1edde81f9aa972463" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;+&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 기능과 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;+&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="502ec151ce326acafbe295a62526a913d76dcccf" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b72721c8e0e2af9938c55881abd1e83329d9251f" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent. If more arguments are given, the multiplication is applied cumulatively from left to right:</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.*&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다. 더 많은 인수가 제공되면 곱셈이 왼쪽에서 오른쪽으로 누적 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="47a128d1142a02dd25266bbaba1c7a38cbae851a" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;./&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;./&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="3c7c73d2fc97c9f3ff07417b16c6dd41ecd097f5" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="54c600f0e787b7ecb3bdaacab80d7904763c8376" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c459916747246315e0f3ac5bb29b9745585ec08f" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;/&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 기능과 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;/&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9661eda327ed8f45b65de6c3fce16d7e93bd21a4" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;\&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="c86f55580b5b4ee4e9f0e68ce1b6379ddb593aef" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0ba20393866ff4f18aa7c9ae264ba08ee0d49277" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;'&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;'&lt;/code&gt; 는 같습니다.</target>
        </trans-unit>
        <trans-unit id="aac2aa22d8b348a1058a67b71f0cc9fb9a86e746" translate="yes" xml:space="preserve">
          <source>This function and &lt;code&gt;&lt;var&gt;x&lt;/var&gt;.'&lt;/code&gt; are equivalent.</source>
          <target state="translated">이 함수와 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;.'&lt;/code&gt; 동일합니다.</target>
        </trans-unit>
        <trans-unit id="69576a5d7245b4ceff07f872710a90ac5b9ebdc8" translate="yes" xml:space="preserve">
          <source>This function assumes that versions &lt;var&gt;v1&lt;/var&gt; and &lt;var&gt;v2&lt;/var&gt; are arbitrarily long strings made of numeric and period characters possibly followed by an arbitrary string (e.g., &lt;code&gt;&quot;1.2.3&quot;&lt;/code&gt;, &lt;code&gt;&quot;0.3&quot;&lt;/code&gt;, &lt;code&gt;&quot;0.1.2+&quot;&lt;/code&gt;, or &lt;code&gt;&quot;1.2.3.4-test1&quot;&lt;/code&gt;).</source>
          <target state="translated">이 함수는 버전 &lt;var&gt;v1&lt;/var&gt; 및 &lt;var&gt;v2&lt;/var&gt; 가 임의의 문자열 (예 : &lt;code&gt;&quot;1.2.3&quot;&lt;/code&gt; , &lt;code&gt;&quot;0.3&quot;&lt;/code&gt; , &lt;code&gt;&quot;0.1.2+&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;1.2.3.4-test1&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f2fe5d9756a0b4efa0a5a37bae9dabd0261333f" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;eval&lt;/code&gt;, but any output or warning messages which would normally be written to the console are captured and returned in the string &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;eval&lt;/code&gt; 처럼 동작합니다 하지만 일반적으로 콘솔에 기록되는 출력 또는 경고 메시지는 캡처되어 문자열 &lt;var&gt;s&lt;/var&gt; 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e130b7059bc26fcfdb5f1aec75a8a18446ebfe15" translate="yes" xml:space="preserve">
          <source>This function can be used, for example, to reduce the impact of noise in &lt;var&gt;data&lt;/var&gt; before calculating isosurfaces.</source>
          <target state="translated">예를 들어이 기능을 사용하면 노이즈의 영향을 줄일 수 있습니다. &lt;var&gt;data&lt;/var&gt; 등면을 계산하기 전에 데이터 .</target>
        </trans-unit>
        <trans-unit id="89389586442a798b213664a0be2956ff33bece7e" translate="yes" xml:space="preserve">
          <source>This function changes the ambient, diffuse, and specular strengths, as well as the specular exponent and specular color reflectance, of all &lt;code&gt;patch&lt;/code&gt; and &lt;code&gt;surface&lt;/code&gt; objects in the current axes. This can be used to simulate, to some extent, the reflectance properties of certain materials when used with &lt;code&gt;light&lt;/code&gt;.</source>
          <target state="translated">이 함수 는 현재 축에있는 모든 &lt;code&gt;patch&lt;/code&gt; 및 &lt;code&gt;surface&lt;/code&gt; 객체 의 주변 지수, 확산 강도 및 반사 강도뿐만 아니라 반사 지수 및 반사 색상 반사도를 변경합니다 . 이것은 &lt;code&gt;light&lt;/code&gt; 과 함께 사용될 때 특정 재료의 반사 특성을 어느 정도 시뮬레이션하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="485c01d8d415e14668fa53c075f8f1fb428028b0" translate="yes" xml:space="preserve">
          <source>This function does not support sparse matrices.</source>
          <target state="translated">이 함수는 희소 행렬을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e82c42972d595cef53627a7913726034f0080796" translate="yes" xml:space="preserve">
          <source>This function is based on the &lt;small&gt;ARPACK&lt;/small&gt; package, written by R. Lehoucq, K. Maschhoff, D. Sorensen, and C. Yang. For more information see &lt;a href=&quot;http://www.caam.rice.edu/software/ARPACK/&quot;&gt;http://www.caam.rice.edu/software/ARPACK/&lt;/a&gt;.</source>
          <target state="translated">이 기능은 R. Lehoucq, K. Maschhoff, D. Sorensen 및 C. Yang이 작성한 &lt;small&gt;ARPACK&lt;/small&gt; 패키지를 기반으로합니다 . 자세한 내용은&lt;a href=&quot;http://www.caam.rice.edu/software/ARPACK/&quot;&gt; http://www.caam.rice.edu/software/ARPACK/을 하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d52082903ed87115fef9c4bd6acfa99774a1568" translate="yes" xml:space="preserve">
          <source>This function is called at the beginning of all high-level plotting functions. It is not normally required in user programs. &lt;code&gt;newplot&lt;/code&gt; queries the &lt;code&gt;&quot;NextPlot&quot;&lt;/code&gt; field of the current figure and axes to determine what to do.</source>
          <target state="translated">이 기능은 모든 고급 플로팅 기능의 시작 부분에서 호출됩니다. 일반적으로 사용자 프로그램에는 필요하지 않습니다. &lt;code&gt;newplot&lt;/code&gt; 은 &lt;code&gt;&quot;NextPlot&quot;&lt;/code&gt; 을 쿼리합니다 은 현재 그림 및 축의 필드를 수행 할 작업을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="8cadc07d5c458fb5398ca1957aaed4995b4f5986" translate="yes" xml:space="preserve">
          <source>This function is conceptually equivalent to computing</source>
          <target state="translated">이 기능은 개념적으로 컴퓨팅과 동일합니다</target>
        </trans-unit>
        <trans-unit id="6a407a4acf44b51b7f06ab276d65b770d356d3c3" translate="yes" xml:space="preserve">
          <source>This function is equivalent to</source>
          <target state="translated">이 기능은</target>
        </trans-unit>
        <trans-unit id="c9f2d8c132f1fb4272b67f2dd07a04e95c181cdb" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;!=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;!=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="03e8142690b30ab8ee2375ae53bc04739d5b7bc1" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="965c566254024329ba6e560bba108135ecd0948d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;gt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; &amp;nbsp;&amp;gt; =&amp;nbsp; &lt;var&gt;y&lt;/var&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="322a5ca85cd6cde4528bf410bd84e825764039da" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; &amp;nbsp;&amp;lt;&amp;nbsp; &lt;var&gt;y&lt;/var&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="b37704d0e472b913b67b1bf7986caec52e66aa22" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;lt;=&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; &amp;nbsp;&amp;lt;=&amp;nbsp; &lt;var&gt;y&lt;/var&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="a772fd74394d4ca009594cfac3633f0219c6a98f" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;==&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; &amp;nbsp;==&amp;nbsp; &lt;var&gt;y&lt;/var&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="bf7b55057628c26f0f7501f1f7891505c6acdfb8" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;arg (complex (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;arg (complex (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;))&lt;/code&gt; 와 같습니다 (복잡한 ( &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; )) .</target>
        </trans-unit>
        <trans-unit id="44a9df5f4d2c8f1121ad8d9b7e12617e4c91198d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;printf&lt;/code&gt;, except that the output is written to the file descriptor &lt;var&gt;fid&lt;/var&gt; instead of &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">이 함수는 출력이 &lt;code&gt;stdout&lt;/code&gt; 대신 파일 디스크립터 &lt;var&gt;fid&lt;/var&gt; 에 기록된다는 점을 제외하고 &lt;code&gt;printf&lt;/code&gt; 와 동일합니다. .</target>
        </trans-unit>
        <trans-unit id="cdb5a1519dbd62fdc2d8fb08ec1997e09cbf75ca" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;!&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 연산자 구문과 동일합니다 &lt;code&gt;!&amp;nbsp;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bf6f1af0d2c495fa6f5299e4e6d860072308f5c" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;increment&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이 함수는 연산자 구문 &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;increment&lt;/var&gt;&amp;nbsp;:&amp;nbsp;&lt;var&gt;limit&lt;/var&gt;&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="60e32178600854dc3b6926a1d3f5877c45875e36" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;. If more than two arguments are given, the logical AND is applied cumulatively from left to right:</source>
          <target state="translated">이 함수는 연산자 구문 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;&amp;amp;&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; . 두 개 이상의 인수가 제공되면 논리 AND가 왼쪽에서 오른쪽으로 누적 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="713a76dcc5dee8c8a56e5720658db27d81f1ae5d" translate="yes" xml:space="preserve">
          <source>This function is equivalent to the operator syntax &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;|&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;. If more than two arguments are given, the logical OR is applied cumulatively from left to right:</source>
          <target state="translated">이 함수는 연산자 구문과 같습니다. &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;|&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; . 둘 이상의 인수가 제공되면 논리 OR이 왼쪽에서 오른쪽으로 누적 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9d50d4ef6c9bbf5b3c82759706bb2ceeacdd89ec" translate="yes" xml:space="preserve">
          <source>This function is intended to facilitate manipulation of the output of functions such as &lt;code&gt;stemleaf&lt;/code&gt;.</source>
          <target state="translated">이 기능은 &lt;code&gt;stemleaf&lt;/code&gt; 와 같은 기능의 출력 조작을 용이하게하기위한 것입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="7a2b2cd29ce436f30e98be5253a0584e01836b04" translate="yes" xml:space="preserve">
          <source>This function is not recommended. Use &lt;code&gt;isfolder&lt;/code&gt; or &lt;code&gt;file_in_loadpath&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 권장하지 않습니다. 사용 &lt;code&gt;isfolder&lt;/code&gt; 또는 &lt;code&gt;file_in_loadpath&lt;/code&gt; 대신 를 .</target>
        </trans-unit>
        <trans-unit id="da7aa68fdd24f94a542efe2b851233b3a9635c15" translate="yes" xml:space="preserve">
          <source>This function is not very flexible. For better control over the results, use &lt;code&gt;sprintf&lt;/code&gt; (see &lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;Formatted Output&lt;/a&gt;).</source>
          <target state="translated">이 기능은 매우 유연하지 않습니다. 결과를보다 잘 제어하려면 &lt;code&gt;sprintf&lt;/code&gt; 를 사용 하십시오 ( &lt;a href=&quot;formatted-output#Formatted-Output&quot;&gt;서식 화 된 출력&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="58588d93b1010db10c43468002c403be39551cd4" translate="yes" xml:space="preserve">
          <source>This function is obsolete. Use &lt;code&gt;strfind&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 &lt;code&gt;strfind&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff343f03b63aa88810a00f38fa99f7f366c80f77" translate="yes" xml:space="preserve">
          <source>This function is obsolete. Use &lt;code&gt;textscan&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 &lt;code&gt;textscan&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="54d2f7e6b128e70a101098ff754f2c105cb9af17" translate="yes" xml:space="preserve">
          <source>This function is obsolete. Use an alternative such as &lt;code&gt;strncmp&lt;/code&gt; or &lt;code&gt;strcmp&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 &lt;code&gt;strncmp&lt;/code&gt; 또는 &lt;code&gt;strcmp&lt;/code&gt; 와 같은 대안을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e816148b054fbd5a75979c7bd416badb069989c2" translate="yes" xml:space="preserve">
          <source>This function is patterned after the equivalent function in Perl.</source>
          <target state="translated">이 함수는 Perl에서 동등한 함수 후에 패턴 화됩니다.</target>
        </trans-unit>
        <trans-unit id="e6e0e7f4113048cfa832c29901fb4c6f81a9857a" translate="yes" xml:space="preserve">
          <source>This function is provided for compatibility, but does nothing in Octave.</source>
          <target state="translated">이 기능은 호환성을 위해 제공되지만 Octave에서는 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e56d60684d360d3041124f93c5154cbd8f11aec9" translate="yes" xml:space="preserve">
          <source>This function is provided for the benefit of programs like Emacs which might be controlling Octave and handling user input. The current command number is not incremented when this function is called. This is a feature, not a bug.</source>
          <target state="translated">이 기능은 옥타브를 제어하고 사용자 입력을 처리 할 수있는 Emacs와 같은 프로그램의 이점을 위해 제공됩니다. 이 함수가 호출 될 때 현재 명령 번호가 증가하지 않습니다. 이것은 버그가 아닌 기능입니다.</target>
        </trans-unit>
        <trans-unit id="d0631c944331a1916eb41f0d1e7cea5c967d2720" translate="yes" xml:space="preserve">
          <source>This function is recursive because it calls itself directly. It eventually terminates because each time it calls itself, it uses an argument that is one less than was used for the previous call. Once the argument is no longer greater than zero, it does not call itself, and the recursion ends.</source>
          <target state="translated">이 함수는 직접 호출하기 때문에 재귀 적입니다. 결국 호출 할 때마다 이전 호출에 사용 된 것보다 하나 적은 인수를 사용하기 때문에 종료됩니다. 인수가 더 이상 0보다 크지 않으면 자체 호출하지 않고 재귀가 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="8dfdacb5909f2bc8beb1855d10dc5886984707cb" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;get (h, &quot;children&quot;)&lt;/code&gt;, but also returns hidden objects (HandleVisibility = &lt;code&gt;&quot;off&quot;&lt;/code&gt;).</source>
          <target state="translated">이 함수는 &lt;code&gt;get (h, &quot;children&quot;)&lt;/code&gt; 과 비슷하지만 숨겨진 객체 (HandleVisibility = &lt;code&gt;&quot;off&quot;&lt;/code&gt; ) 도 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b8a9ca609d3326c85e3a29796d5209c75b7279d1" translate="yes" xml:space="preserve">
          <source>This function is the inverse of &lt;code&gt;mkpp&lt;/code&gt;: it extracts the inputs to &lt;code&gt;mkpp&lt;/code&gt; needed to create the piecewise polynomial structure &lt;var&gt;PP&lt;/var&gt;. The code below makes this relation explicit:</source>
          <target state="translated">이 함수는 &lt;code&gt;mkpp&lt;/code&gt; 의 역함수입니다 . 그것은 부분 다항식 구조 &lt;var&gt;PP&lt;/var&gt; 를 만드는 데 필요한 &lt;code&gt;mkpp&lt;/code&gt; 에 대한 입력을 추출합니다. . 아래 코드는이 관계를 명시 적으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6fcdb60ee55688c4ab79c14d90aa09757b781d1f" translate="yes" xml:space="preserve">
          <source>This function is useful for interactive programs. There is no limit to the number of options that may be passed in, but it may be confusing to present more than will fit easily on one screen.</source>
          <target state="translated">이 기능은 대화식 프로그램에 유용합니다. 전달 될 수있는 옵션의 수에는 제한이 없지만 한 화면에 쉽게 들어갈 수있는 것보다 더 많은 것을 제시하는 것은 혼란 스러울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="100ba22a9f31e38ddf2db2e79f05fa086f3e5e61" translate="yes" xml:space="preserve">
          <source>This function is usually used as a prelude to interpolation.</source>
          <target state="translated">이 기능은 일반적으로 보간의 전주곡으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c0557e6dba45b599e93144c9fdcd80cc14623877" translate="yes" xml:space="preserve">
          <source>This function just hands off the work to the normal Octave &lt;code&gt;polyval&lt;/code&gt; function. Another interesting example of an overloaded function for the polynomial class is the &lt;code&gt;plot&lt;/code&gt; function.</source>
          <target state="translated">이 함수는 작업을 일반 옥타브 &lt;code&gt;polyval&lt;/code&gt; 함수로 전달 합니다. 다항식 클래스의 오버로드 된 함수의 또 다른 흥미로운 예는 &lt;code&gt;plot&lt;/code&gt; 함수입니다.</target>
        </trans-unit>
        <trans-unit id="2a1d60b3e05a8755795b9c8c8a26ac67db8e29bd" translate="yes" xml:space="preserve">
          <source>This function makes the current figure visible, and places it on top of of all other plot windows.</source>
          <target state="translated">이 함수는 현재 그림을 표시하고 다른 모든 플롯 창 위에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="0ec40d2305f984b9a498f843498f53c0c6e107ae" translate="yes" xml:space="preserve">
          <source>This function places caps at the open ends of isosurfaces.</source>
          <target state="translated">이 기능은 등면의 열린 끝에 캡을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="6a3e36c8902085b1cf06c2d709abcfccee6d67f3" translate="yes" xml:space="preserve">
          <source>This function produces output like this</source>
          <target state="translated">이 함수는 다음과 같은 출력을 생성합니다</target>
        </trans-unit>
        <trans-unit id="950a880010049a2c6e660dab28350d77ef591420" translate="yes" xml:space="preserve">
          <source>This function sends the alarm character &lt;code&gt;&quot;\a&quot;&lt;/code&gt; to the terminal. Depending on the user&amp;rsquo;s configuration this may produce an audible beep, a visual bell, or nothing at all.</source>
          <target state="translated">이 기능은 알람 문자 &lt;code&gt;&quot;\a&quot;&lt;/code&gt; 를 터미널로 보냅니다 . 사용자의 구성에 따라 경고음이 들리거나 벨이 울리거나 전혀 소리가 나지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56f9771e861d52f00afe7fafae376f4882a4cfff" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFEXITED&lt;/code&gt; returned true.</source>
          <target state="translated">이 함수는 &lt;code&gt;WIFEXITED&lt;/code&gt; 가 true를 반환 한 경우에만 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2f43bd1a913e366ca04f5a4a2d71345ccd02ede8" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFSIGNALED&lt;/code&gt; returned true.</source>
          <target state="translated">이 함수는 &lt;code&gt;WIFSIGNALED&lt;/code&gt; 가 true를 리턴 한 경우에만 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1ab0b5bb018569a7408c5a764116dce9a98ee3c8" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFSIGNALED&lt;/code&gt; returned true. The macro used to implement this function is not specified in POSIX.1-2001 and is not available on some Unix implementations (e.g., AIX, SunOS).</source>
          <target state="translated">이 함수는 &lt;code&gt;WIFSIGNALED&lt;/code&gt; 가 true를 리턴 한 경우에만 사용해야 합니다. 이 기능을 구현하는 데 사용되는 매크로는 POSIX.1-2001에 지정되어 있지 않으며 일부 Unix 구현 (예 : AIX, SunOS)에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="94d7cf3030bbf4b29b0484a5f051f6be1be10092" translate="yes" xml:space="preserve">
          <source>This function should only be employed if &lt;code&gt;WIFSTOPPED&lt;/code&gt; returned true.</source>
          <target state="translated">이 함수는 &lt;code&gt;WIFSTOPPED&lt;/code&gt; 가 true를 반환 한 경우에만 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="312e56f7a2ff98fdfa316eaaaf45bf392ea92170" translate="yes" xml:space="preserve">
          <source>This function uses libcurl. Curl supports, among others, the HTTP, FTP, and FILE protocols. Username and password may be specified in the URL, for example:</source>
          <target state="translated">이 함수는 libcurl을 사용합니다. Curl은 특히 HTTP, FTP 및 FILE 프로토콜을 지원합니다. URL에 사용자 이름과 비밀번호를 지정할 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="d911d917acf58063348aa01b9d721a4f9bd4635c" translate="yes" xml:space="preserve">
          <source>This function uses libcurl. Curl supports, among others, the HTTP, FTP, and FILE protocols. Username and password may be specified in the URL. For example:</source>
          <target state="translated">이 함수는 libcurl을 사용합니다. Curl은 특히 HTTP, FTP 및 FILE 프로토콜을 지원합니다. 사용자 이름과 비밀번호는 URL에 지정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4936ed4237c54e8c291494e9cf986c1a4e043ffa" translate="yes" xml:space="preserve">
          <source>This gives:</source>
          <target state="translated">이것은 다음을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0ed95294888156eff35bf9cdd540cb2bf6e36ad3" translate="yes" xml:space="preserve">
          <source>This has uses in matrix calculus where the underlying matrix is symmetric and it would be pointless to keep values above the main diagonal.</source>
          <target state="translated">이것은 기본 행렬이 대칭 인 행렬 미적분학에서 사용되며 주 대각선 위에 값을 유지하는 것은 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f199c2dc4d4e42d9d89e9c3a2a20b04edd3ea921" translate="yes" xml:space="preserve">
          <source>This implementation behaves in exactly the same way as the previous implementation of &lt;code&gt;count_calls&lt;/code&gt;.</source>
          <target state="translated">이 구현은 이전 구현 &lt;code&gt;count_calls&lt;/code&gt; 와 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="e9bf15ef093ec055bd54d1f1bb0b29db3999eb25" translate="yes" xml:space="preserve">
          <source>This implementation handles any number of input arguments, but it&amp;rsquo;s also a very simple solution to the problem.</source>
          <target state="translated">이 구현은 많은 수의 입력 인수를 처리하지만 문제에 대한 매우 간단한 해결책이기도합니다.</target>
        </trans-unit>
        <trans-unit id="3cd1472bf6083e344aac915ac3a6e87e940d7163" translate="yes" xml:space="preserve">
          <source>This is a difficult test case used to evaluate eigenvalue algorithms.</source>
          <target state="translated">이것은 고유 값 알고리즘을 평가하는 데 사용되는 어려운 테스트 사례입니다.</target>
        </trans-unit>
        <trans-unit id="fdfc38c23b9ba1b809a2c472a36ae6aedc6e4b10" translate="yes" xml:space="preserve">
          <source>This is a fairly difficult integration (plot the function over the range of integration to see why).</source>
          <target state="translated">이것은 상당히 어려운 통합입니다 (통합 범위에 함수를 표시하여 이유를 확인하십시오).</target>
        </trans-unit>
        <trans-unit id="902dce5711f992f5c5164bd3f49fa0c28129570c" translate="yes" xml:space="preserve">
          <source>This is a permutation such that the Cholesky factorization of &lt;code&gt;&lt;var&gt;S&lt;/var&gt; (&lt;var&gt;p&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; tends to be sparser than the Cholesky factorization of &lt;var&gt;S&lt;/var&gt; itself. &lt;code&gt;amd&lt;/code&gt; is typically faster than &lt;code&gt;symamd&lt;/code&gt; but serves a similar purpose.</source>
          <target state="translated">이것은 &lt;code&gt;&lt;var&gt;S&lt;/var&gt; (&lt;var&gt;p&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; 의 Cholesky 인수 분해 ( p , p ) 가 &lt;var&gt;S&lt;/var&gt; 의 Cholesky 인수 분해보다 희박 해지는 경향 이있는 순열 입니다. &lt;code&gt;amd&lt;/code&gt; 는 일반적으로 &lt;code&gt;symamd&lt;/code&gt; 보다 빠르지 만 비슷한 용도로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d5f8458c4e4012dee126a2b65d6f309a793b9ada" translate="yes" xml:space="preserve">
          <source>This is a required file containing information about the package. See &lt;a href=&quot;the-description-file#The-DESCRIPTION-File&quot;&gt;The DESCRIPTION File&lt;/a&gt;, for details on this file.</source>
          <target state="translated">패키지에 대한 정보가 들어있는 필수 파일입니다. &lt;a href=&quot;the-description-file#The-DESCRIPTION-File&quot;&gt;이 파일&lt;/a&gt; 에 대한 자세한 내용 은 DESCRIPTION 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6beec94d6433ed157df8ae45d1f1735528e3849" translate="yes" xml:space="preserve">
          <source>This is a required file containing the license of the package. No restrictions is made on the license in general. If however the package contains dynamically linked functions the license must be compatible with the GNU General Public License.</source>
          <target state="translated">패키지 라이센스가 포함 된 필수 파일입니다. 라이센스에는 일반적으로 제한이 없습니다. 그러나 패키지에 동적으로 연결된 기능이 포함 된 경우 라이센스는 GNU General Public License와 호환 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="52d57dbf23250f58f48b480c2405d99a4f4166a1" translate="yes" xml:space="preserve">
          <source>This is a sufficient specification to begin writing the constructor for the polynomial class. All object oriented classes in Octave must be located in a directory that is the name of the class prepended with the &amp;lsquo;</source>
          <target state="translated">다항식 클래스의 생성자를 작성하기에 충분한 사양입니다. 옥타브의 모든 객체 지향 클래스는 '가 앞에 붙은 클래스 이름 인 디렉토리에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="77f06266a1027636742f8afaf97830f05ff1f14b" translate="yes" xml:space="preserve">
          <source>This is also true of assignments to lists of values, so the following is a valid expression</source>
          <target state="translated">이는 값 목록에 대한 할당에도 적용되므로 다음은 유효한 표현식입니다.</target>
        </trans-unit>
        <trans-unit id="538ed8bc43e28a6d55cffb1c0208a3d8f8c3bea4" translate="yes" xml:space="preserve">
          <source>This is am optional file describing instructions on how to cite the package for publication. It will be displayed verbatim by the function &lt;code&gt;citation&lt;/code&gt;.</source>
          <target state="translated">이것은 게시 할 패키지를 인용하는 방법에 대한 지침을 설명하는 선택적 파일입니다. 함수 &lt;code&gt;citation&lt;/code&gt; 의해 그대로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="847d391fe3beddb3aaedeb808d38f046cafc5506" translate="yes" xml:space="preserve">
          <source>This is an alias for the &lt;code&gt;isalpha&lt;/code&gt; function.</source>
          <target state="translated">이것은 &lt;code&gt;isalpha&lt;/code&gt; 함수 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="2520d264989a662ea106833745280031de8a83e2" translate="yes" xml:space="preserve">
          <source>This is an alias for the function &lt;code&gt;OCTAVE_HOME&lt;/code&gt; provided for compatibility.</source>
          <target state="translated">이것은 함수의 별명입니다. &lt;code&gt;OCTAVE_HOME&lt;/code&gt; 호환성을 위해 제공된 OCTAVE_HOME .</target>
        </trans-unit>
        <trans-unit id="3282d80bc0dfb1dd5535a8ca5a47c09c15574b81" translate="yes" xml:space="preserve">
          <source>This is an alternative method to specify &lt;var&gt;idx&lt;/var&gt;. When specifying it in this way, its value can also be the string &lt;code&gt;&quot;all&quot;&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;var&gt;idx&lt;/var&gt; 를 지정하는 다른 방법입니다 입니다. 이런 식으로 지정하면 해당 값은 &lt;code&gt;&quot;all&quot;&lt;/code&gt; 문자열 일 수도 있습니다. .</target>
        </trans-unit>
        <trans-unit id="0ecad9c53df7a67876faaa7a5d922e353da6830a" translate="yes" xml:space="preserve">
          <source>This is an optional file describing all the changes made to the package source files.</source>
          <target state="translated">패키지 소스 파일의 모든 변경 사항을 설명하는 선택적 파일입니다.</target>
        </trans-unit>
        <trans-unit id="c84f74ee9cfd0170075c80e8eabfab77189e15dc" translate="yes" xml:space="preserve">
          <source>This is an optional file describing all user-visible changes worth mentioning. As this file increases on size, old entries can be moved into</source>
          <target state="translated">이것은 언급 할 가치가있는 모든 사용자가 볼 수있는 변경 사항을 설명하는 선택적 파일입니다. 이 파일의 크기가 커지면 이전 항목을</target>
        </trans-unit>
        <trans-unit id="826430352946b01b627a61764759f22ba1f33d67" translate="yes" xml:space="preserve">
          <source>This is an optional file describing old entries from the</source>
          <target state="translated">이 파일은</target>
        </trans-unit>
        <trans-unit id="12bf56c2abcf463dde94d6ed94c155d77dbf29ae" translate="yes" xml:space="preserve">
          <source>This is an optional file describing the functions provided by the package. If this file is not given then one with be created automatically from the functions in the package and the &lt;code&gt;Categories&lt;/code&gt; keyword in the</source>
          <target state="translated">패키지에서 제공하는 기능을 설명하는 선택적 파일입니다. 이 파일을 제공하지 않으면 패키지의 기능 및 &lt;code&gt;Categories&lt;/code&gt; 에서 자동으로 생성됩니다. 에 키워드</target>
        </trans-unit>
        <trans-unit id="70c9330cb7f9cc5636b0cbebe0fdd5f378d653d9" translate="yes" xml:space="preserve">
          <source>This is an optional function that is run after the installation of a package. This function is called with a single argument, a struct with fields names after the data in the</source>
          <target state="translated">패키지 설치 후 실행되는 선택적 기능입니다. 이 함수는 단일 인수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e1accb88b1a443eda36a5cc6facc96a35ecd7124" translate="yes" xml:space="preserve">
          <source>This is an optional function that is run prior to the installation of a package. This function is called with a single argument, a struct with fields names after the data in the</source>
          <target state="translated">이것은 패키지를 설치하기 전에 실행되는 선택적 기능입니다. 이 함수는 단일 인수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4fd4089ef0ffa6598067b0d1145f7ee698b611ae" translate="yes" xml:space="preserve">
          <source>This is an optional function that is run prior to the removal of a package. This function is called with a single argument, a struct with fields names after the data in the</source>
          <target state="translated">이것은 패키지를 제거하기 전에 실행되는 선택적 기능입니다. 이 함수는 단일 인수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="391800e5160cd1ce1c8fa8c22bc1d122ae33b5d8" translate="yes" xml:space="preserve">
          <source>This is cleaner and more memory efficient than using a dummy variable. The &lt;code&gt;nargout&lt;/code&gt; value for the right-hand side expression is not affected. If the assignment is used as an expression, the return value is a comma-separated list with the ignored values dropped.</source>
          <target state="translated">이것은 더미 변수를 사용하는 것보다 깨끗하고 메모리 효율적입니다. 오른쪽 표현식 의 &lt;code&gt;nargout&lt;/code&gt; 값은 영향을받지 않습니다. 대입이 표현식으로 사용되면 리턴 값은 쉼표로 구분 된 목록이며 무시 된 값은 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="5814f2e01ed3bbc2e7ae923183b221c05580a6ab" translate="yes" xml:space="preserve">
          <source>This is conceptually equivalent to &lt;code&gt;inv (A) * b&lt;/code&gt;, but avoids computing the inverse of a matrix directly.</source>
          <target state="translated">이것은 개념적으로 &lt;code&gt;inv (A) * b&lt;/code&gt; 와 동일하지만 행렬의 역을 직접 계산하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c5c89b0912454ed85fcc78d9c40a247275d4a17" translate="yes" xml:space="preserve">
          <source>This is consistent with the ordering used by &lt;em&gt;max&lt;/em&gt;, &lt;em&gt;min&lt;/em&gt; and &lt;em&gt;sort&lt;/em&gt;, but is not consistent with &lt;small&gt;MATLAB&lt;/small&gt;, which only compares the real parts.</source>
          <target state="translated">이는 &lt;em&gt;max&lt;/em&gt; , &lt;em&gt;min&lt;/em&gt; 및 &lt;em&gt;sort가&lt;/em&gt; 사용하는 순서와 일치 하지만 &lt;small&gt;MATLAB&lt;/small&gt; 과는 일치하지 않습니다&lt;small&gt;&lt;/small&gt; 실제 부품 만 비교하는 .</target>
        </trans-unit>
        <trans-unit id="e5fefbd13aaa4e19a3b034bb880ebcdb919420b9" translate="yes" xml:space="preserve">
          <source>This is defined as</source>
          <target state="translated">이것은 다음과 같이 정의됩니다</target>
        </trans-unit>
        <trans-unit id="57d7667ecc9371386935ac73cc49b470544fbed9" translate="yes" xml:space="preserve">
          <source>This is defined as, &lt;var&gt;theta&lt;/var&gt; = &lt;code&gt;atan2 (&lt;var&gt;y&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;, in radians.</source>
          <target state="translated">이것은 &lt;var&gt;theta&lt;/var&gt; = &lt;code&gt;atan2 (&lt;var&gt;y&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; 로 라디안으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="64ad3c2cd6f4b5e2641bfc0bc092458ad97a0597" translate="yes" xml:space="preserve">
          <source>This is defined block by block as</source>
          <target state="translated">이것은 블록 단위로 정의됩니다</target>
        </trans-unit>
        <trans-unit id="0e75165bd6c0c435e57a13f622ac0560e9f8aea5" translate="yes" xml:space="preserve">
          <source>This is equivalent to</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="78f8d59bba718b21fc029b9a6984be15a644ce92" translate="yes" xml:space="preserve">
          <source>This is equivalent to (&lt;code&gt;isalpha (&lt;var&gt;s&lt;/var&gt;) | isdigit (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt;).</source>
          <target state="translated">이는 ( &lt;code&gt;isalpha (&lt;var&gt;s&lt;/var&gt;) | isdigit (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt; )와 같습니다.</target>
        </trans-unit>
        <trans-unit id="4399ca1de81bbc6e805f1b676f44110de2d70a4f" translate="yes" xml:space="preserve">
          <source>This is equivalent to (&lt;code&gt;islower (&lt;var&gt;s&lt;/var&gt;) | isupper (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt;).</source>
          <target state="translated">이는 ( &lt;code&gt;islower (&lt;var&gt;s&lt;/var&gt;) | isupper (&lt;var&gt;s&lt;/var&gt;)&lt;/code&gt; )와 같습니다.</target>
        </trans-unit>
        <trans-unit id="e06bf2b532df667906e9eb9b8c2ca8f960fe2fd3" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;, except that &lt;code&gt;realpow&lt;/code&gt; reports an error if any return value is complex.</source>
          <target state="translated">이것은 &lt;code&gt;realpow&lt;/code&gt; 를 제외하고 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&amp;nbsp;.^&amp;nbsp;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt; 와 같습니다 .&amp;nbsp; 반환 값이 복잡한 경우 가 오류를보고 .</target>
        </trans-unit>
        <trans-unit id="aca6bd432826f4ee785cd488ecdca027d13d8986" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;ctime (time ())&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;ctime (time ())&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="463ea821d6b25208bd2d64388ded9ab655746372" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;mkoctfile --mex [options] file&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;mkoctfile --mex [options] file&lt;/code&gt; 과 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="3915ec730b64eb7324334c55ee083d59f80bbce3" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;sqrt (&lt;var&gt;x&lt;/var&gt;.^2 + &lt;var&gt;y&lt;/var&gt;.^2)&lt;/code&gt;, but is calculated in a manner that avoids overflows for large values of &lt;var&gt;x&lt;/var&gt; or &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;sqrt (&lt;var&gt;x&lt;/var&gt;.^2 + &lt;var&gt;y&lt;/var&gt;.^2)&lt;/code&gt; 와 동일하지만 큰 값의 &lt;var&gt;x&lt;/var&gt; 또는 &lt;var&gt;y&lt;/var&gt; 에 대한 오버플로를 피하는 방식으로 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="e19d51f5c2d1a1ec72f794c0fe0edf943ba2c4d8" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;sum (conj (&lt;var&gt;X&lt;/var&gt;) .* &lt;var&gt;Y&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt;, but avoids forming a temporary array and is faster. When &lt;var&gt;X&lt;/var&gt; and &lt;var&gt;Y&lt;/var&gt; are column vectors, the result is equivalent to &lt;code&gt;&lt;var&gt;X&lt;/var&gt;' * &lt;var&gt;Y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;sum (conj (&lt;var&gt;X&lt;/var&gt;) .* &lt;var&gt;Y&lt;/var&gt;, &lt;var&gt;dim&lt;/var&gt;)&lt;/code&gt; 과 동일하지만 임시 배열 형성을 피하고 더 빠릅니다. 때 &lt;var&gt;X&lt;/var&gt; 와 &lt;var&gt;Y&lt;/var&gt; 는 열 벡터이고, 그 결과는 동일하다 &lt;code&gt;&lt;var&gt;X&lt;/var&gt;' * &lt;var&gt;Y&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90995851ac36a2b8648eb3ced1380e7572539384" translate="yes" xml:space="preserve">
          <source>This is equivalent to calling &lt;code&gt;fscanf&lt;/code&gt; with &lt;var&gt;fid&lt;/var&gt; = &lt;code&gt;stdin&lt;/code&gt;.</source>
          <target state="translated">이것은 전화하는 것과 같습니다. &lt;code&gt;fscanf&lt;/code&gt; 와 &lt;var&gt;fid&lt;/var&gt; = &lt;code&gt;stdin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a28c5d500d2ae7986a2210df59107bfd15fd69e" translate="yes" xml:space="preserve">
          <source>This is equivalent to rounding towards negative infinity. If &lt;var&gt;x&lt;/var&gt; is complex, return &lt;code&gt;floor (real (&lt;var&gt;x&lt;/var&gt;)) + floor (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt;.</source>
          <target state="translated">음의 무한대로 반올림하는 것과 같습니다. &lt;var&gt;x&lt;/var&gt; 가 복소수 인 경우 &lt;code&gt;floor (real (&lt;var&gt;x&lt;/var&gt;)) + floor (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b17ef95948b73ac2ba2561576c02e4112fd4d8c9" translate="yes" xml:space="preserve">
          <source>This is equivalent to rounding towards positive infinity.</source>
          <target state="translated">양의 무한대로 반올림하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="910889def20e09d983d17db9f230c48eacd45a44" translate="yes" xml:space="preserve">
          <source>This is equivalent to rounding towards zero. If &lt;var&gt;x&lt;/var&gt; is complex, return &lt;code&gt;fix (real (&lt;var&gt;x&lt;/var&gt;)) + fix (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt;.</source>
          <target state="translated">이것은 0으로 반올림하는 것과 같습니다. &lt;var&gt;x&lt;/var&gt; 가 복소수 인 경우 &lt;code&gt;fix (real (&lt;var&gt;x&lt;/var&gt;)) + fix (imag (&lt;var&gt;x&lt;/var&gt;)) * I&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86ca11ed808ba71955b6b702d42b5be523bec9f1" translate="yes" xml:space="preserve">
          <source>This is equivalent to the polynomial found by multiplying together all the common roots. Together with deconv, you can reduce a ratio of two polynomials.</source>
          <target state="translated">이것은 모든 공통 근을 곱한 다항식과 같습니다. deconv와 함께 두 다항식의 비율을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7760e11dfd39f96a4705664ec9e9d140d6a38333" translate="yes" xml:space="preserve">
          <source>This is especially important for loops with &quot;cheap&quot; bodies. Often it suffices to vectorize just the innermost loop to get acceptable performance. A general rule of thumb is that the &quot;order&quot; of the vectorized body should be greater or equal to the &quot;order&quot; of the enclosing loop.</source>
          <target state="translated">이것은 &quot;저렴한&quot;바디가있는 루프에 특히 중요합니다. 허용 가능한 성능을 얻기 위해 가장 안쪽의 루프 만 벡터화하면 충분합니다. 일반적으로 벡터화 된 바디의 &quot;순서&quot;는 둘러싸는 루프의 &quot;순서&quot;보다 크거나 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="8583958409847ec94b7f38558c384b6bab578d5a" translate="yes" xml:space="preserve">
          <source>This is given by</source>
          <target state="translated">이것은에 의해 주어진다</target>
        </trans-unit>
        <trans-unit id="2ca2d7b971aaaf4f270a39d529b10a7ca73916bd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;fscanf&lt;/code&gt;, except that the characters are taken from the string &lt;var&gt;string&lt;/var&gt; instead of from a stream.</source>
          <target state="translated">문자가 문자열 &lt;var&gt;string&lt;/var&gt; 에서 &lt;code&gt;fscanf&lt;/code&gt; 는 점을 제외하면 fscanf 와 같습니다. 스트림 대신 .</target>
        </trans-unit>
        <trans-unit id="b70b563899d45ada181a3ccae1a5f8bc46d7c232" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;printf&lt;/code&gt;, except that the output is returned as a string.</source>
          <target state="translated">이것은 &lt;code&gt;printf&lt;/code&gt; 와 같습니다출력이 문자열로 리턴된다는 점을 제외하면 .</target>
        </trans-unit>
        <trans-unit id="a6e81a14de059aefb36b3ad6707c89a3cbb869aa" translate="yes" xml:space="preserve">
          <source>This is most easily demonstrated by example. Suppose the programmer needs a FIR filter, i.e., a filter with a numerator polynomial but a denominator of 1. In traditional Octave programming this would be performed as follows.</source>
          <target state="translated">이것은 예를 통해 가장 쉽게 설명됩니다. 프로그래머가 FIR 필터, 즉 분자 다항식을 갖지만 분모가 1 인 필터가 필요하다고 가정합니다. 전통적인 옥타브 프로그래밍에서는 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="2681eae7cb935fdd23a554241797cb1f7b3d98b6" translate="yes" xml:space="preserve">
          <source>This is normally useful when doing object-oriented programming and there is a requirement to call one of Octave&amp;rsquo;s base functions rather than the overloaded one of a new class.</source>
          <target state="translated">이것은 일반적으로 객체 지향 프로그래밍을 수행 할 때 유용하며 오버로드 된 새 클래스가 아닌 Octave의 기본 함수 중 하나를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c642a946a5ef20b9c56cdcfcd3abbff58c71153" translate="yes" xml:space="preserve">
          <source>This is not a practical example of the &lt;code&gt;continue&lt;/code&gt; statement, but it should give you a clear understanding of how it works. Normally, one would probably write the loop like this:</source>
          <target state="translated">이것은 &lt;code&gt;continue&lt;/code&gt; 문의 실제적인 예는 아니지만 작동 방식에 대한 명확한 이해를 제공해야합니다. 일반적으로 다음과 같이 루프를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="c8237ab5ad04922df4b3b733248c61ea2229a849" translate="yes" xml:space="preserve">
          <source>This is not the same as &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt;, because IEEE 754 floating point allows zero to be signed. The comparison &lt;code&gt;-0.0 &amp;lt; 0.0&lt;/code&gt; is false, but &lt;code&gt;signbit (-0.0)&lt;/code&gt; will return a nonzero value.</source>
          <target state="translated">IEEE 754 부동 소수점은 0을 서명 할 수 있기 때문에 &lt;code&gt;x &amp;lt; 0.0&lt;/code&gt; 과 동일하지 않습니다 . &lt;code&gt;-0.0 &amp;lt; 0.0&lt;/code&gt; 비교 는 거짓이지만 &lt;code&gt;signbit (-0.0)&lt;/code&gt; 는 0이 아닌 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9bbbb13bd3f943450f4a13ecfbc59acced034840" translate="yes" xml:space="preserve">
          <source>This is one way to normalize columns of a matrix &lt;var&gt;X&lt;/var&gt; to unit norm:</source>
          <target state="translated">이것은 행렬 &lt;var&gt;X&lt;/var&gt; 의 열 을 단위 규범 으로 정규화하는 한 가지 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="5159c4fda56a596f883293c7e62f46536ff3e86c" translate="yes" xml:space="preserve">
          <source>This is only possible if the call was done using &lt;code&gt;WUNTRACED&lt;/code&gt; or when the child is being traced (see ptrace(2)).</source>
          <target state="translated">&lt;code&gt;WUNTRACED&lt;/code&gt; 를 사용하여 호출을 수행 했거나 하위를 추적하는 경우에만 가능합니다 (ptrace (2) 참조).</target>
        </trans-unit>
        <trans-unit id="ac5c53eadf685f560de5b22f92b00966ccaa21b0" translate="yes" xml:space="preserve">
          <source>This is related to the least squares solution of &lt;code&gt;&lt;var&gt;A&lt;/var&gt; \ &lt;var&gt;b&lt;/var&gt;&lt;/code&gt;, by</source>
          <target state="translated">이는 최소의 제곱 해 관련된 &lt;code&gt;&lt;var&gt;A&lt;/var&gt; \ &lt;var&gt;b&lt;/var&gt;&lt;/code&gt; &lt;var&gt;b&lt;/var&gt; 에 의해, &lt;var&gt;A&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="2ef9623dd5fcb1f13c1c2608fc898fefdf1091fb" translate="yes" xml:space="preserve">
          <source>This is the e-mail address to list after the name in the author field. By default it guesses &lt;code&gt;&amp;lt;$LOGNAME@$HOSTNAME&amp;gt;&lt;/code&gt;, and if &lt;code&gt;$HOSTNAME&lt;/code&gt; is not defined it uses &lt;code&gt;uname -n&lt;/code&gt;. You probably want to override this. Be sure to use the format &lt;code&gt;&lt;a href=&quot;mailto:user@host&quot;&gt;user@host&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">작성자 필드에 이름 다음에 나열 할 이메일 주소입니다. 기본적으로 &lt;code&gt;&amp;lt;$LOGNAME@$HOSTNAME&amp;gt;&lt;/code&gt; 추측 하고 &lt;code&gt;$HOSTNAME&lt;/code&gt; 이 정의되지 않은 경우 &lt;code&gt;uname -n&lt;/code&gt; 을 사용합니다 . 아마도 이것을 무시하고 싶을 것입니다. &lt;code&gt;&lt;a href=&quot;mailto:user@host&quot;&gt;user@host&lt;/a&gt;&lt;/code&gt; 형식을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e16b59e4bd6319aca01f3f1a7598c864a4a334c" translate="yes" xml:space="preserve">
          <source>This is the location of user local m-files. Be sure it is in your path. The default is</source>
          <target state="translated">사용자 로컬 m 파일의 위치입니다. 그것이 당신의 길에 있는지 확인하십시오. 디폴트는</target>
        </trans-unit>
        <trans-unit id="4860f9f14464f9d40dfc198a17cb16007b93fe54" translate="yes" xml:space="preserve">
          <source>This is the name to put after the &quot;## Author:&quot; field of new functions. By default it guesses from the &lt;code&gt;gecos&lt;/code&gt; field of the password database.</source>
          <target state="translated">새 기능의 &quot;## Author :&quot;필드 뒤에 붙일 이름입니다. 기본적으로 비밀번호 데이터베이스 의 &lt;code&gt;gecos&lt;/code&gt; 필드 에서 추측 합니다.</target>
        </trans-unit>
        <trans-unit id="40513e3c57ee73e4bc7ea5bb85b4a6f917e6875b" translate="yes" xml:space="preserve">
          <source>This is the number of combinations of &lt;var&gt;n&lt;/var&gt; items taken in groups of size &lt;var&gt;k&lt;/var&gt;.</source>
          <target state="translated">크기가 &lt;var&gt;k&lt;/var&gt; 인 그룹에서 취한 &lt;var&gt;n&lt;/var&gt; 개의 항목 조합 수입니다 .</target>
        </trans-unit>
        <trans-unit id="41a9d9c19d4a0d0397a5bece099769288b72ea2f" translate="yes" xml:space="preserve">
          <source>This is typically used for large matrices, where the cost of calculating &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt;)&lt;/code&gt; is prohibitive and an approximation to the 2-norm is acceptable.</source>
          <target state="translated">이것은 일반적으로 계산 행렬 &lt;code&gt;norm (&lt;var&gt;A&lt;/var&gt;)&lt;/code&gt; 이 엄청나고 2- 노름에 대한 근사가 허용되는 큰 행렬에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2d708a1e34b9fae20e2e8dc26b1e77c8f8f94d40" translate="yes" xml:space="preserve">
          <source>This is useful for building a matrix incrementally by a sequence of indexed assignments. Subsequent indexed assignments after &lt;code&gt;spalloc&lt;/code&gt; will reuse the pre-allocated memory, provided they are of one of the simple forms</source>
          <target state="translated">인덱스 된 할당 순서에 따라 점진적으로 행렬을 작성하는 데 유용합니다. &lt;code&gt;spalloc&lt;/code&gt; 이후의 후속 인덱스 할당 은 간단한 형식 중 하나 인 경우 사전 할당 된 메모리를 재사용합니다.</target>
        </trans-unit>
        <trans-unit id="57dcd591bd63accba00855fb5db3583a910f0104" translate="yes" xml:space="preserve">
          <source>This is useful for checking to that the number of output arguments supplied to a function is within an acceptable range.</source>
          <target state="translated">함수에 제공되는 출력 인수의 수가 허용 범위 내에 있는지 확인하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d00fff40673009e7a584512281ef6b03924ecd38" translate="yes" xml:space="preserve">
          <source>This is useful for functions that do not accept array arguments. If the function does accept array arguments it is better to call the function directly.</source>
          <target state="translated">배열 인수를 허용하지 않는 함수에 유용합니다. 함수가 배열 인수를 허용하면 함수를 직접 호출하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f2b166094f1268d8f4dd00beba0aca1a10482696" translate="yes" xml:space="preserve">
          <source>This is useful for implementing functions where arguments can either be scalars or of common size.</source>
          <target state="translated">이는 인수가 스칼라이거나 공통 크기 일 수있는 함수를 구현하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dd37002f9ad750dd8755a9a0a0216da1a84ce4ed" translate="yes" xml:space="preserve">
          <source>This is useful to protect temporary changes to global variables from possible errors. For example, the following code will always restore the original value of the global variable &lt;code&gt;frobnosticate&lt;/code&gt; even if an error occurs in the first part of the &lt;code&gt;unwind_protect&lt;/code&gt; block.</source>
          <target state="translated">이는 전역 변수에 대한 임시 변경 사항을 가능한 오류로부터 보호하는 데 유용합니다. 예를 들어, 다음 코드는 &lt;code&gt;unwind_protect&lt;/code&gt; 블록 의 첫 번째 부분에서 오류가 발생하더라도 항상 전역 변수 &lt;code&gt;frobnosticate&lt;/code&gt; 의 원래 값을 복원합니다 .</target>
        </trans-unit>
        <trans-unit id="931728f491e43285a80d7eb161d43c1b74ce9d3b" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t merely easier to write; it is also internally much easier to optimize. Octave delegates this operation to an underlying implementation which, among other optimizations, may use special vector hardware instructions or could conceivably even perform the additions in parallel. In general, if the code is vectorized, the underlying implementation has more freedom about the assumptions it can make in order to achieve faster execution.</source>
          <target state="translated">이것은 작성하기가 쉽지 않습니다. 내부적으로 최적화하는 것이 훨씬 쉽습니다. 옥타브는이 최적화를 다른 최적화 중에서도 특수한 벡터 하드웨어 명령어를 사용하거나 병렬로 추가를 수행 할 수있는 기본 구현으로 위임합니다. 일반적으로 코드가 벡터화되는 경우 기본 구현은 더 빠른 실행을 달성하기 위해 만들 수있는 가정에 대해 더 많은 자유를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="b9c188673f6794fa0d8938c6935f41599d09470e" translate="yes" xml:space="preserve">
          <source>This kind of code can however be very cumbersome to both write and maintain. To overcome this problem Octave supports the &lt;code&gt;switch&lt;/code&gt; statement. Using this statement, the above example becomes</source>
          <target state="translated">그러나 이러한 종류의 코드는 작성 및 유지 관리가 매우 번거로울 수 있습니다. 이 문제를 극복하기 위해 Octave는 &lt;code&gt;switch&lt;/code&gt; 문을 지원합니다 . 이 문장을 사용하면 위의 예는</target>
        </trans-unit>
        <trans-unit id="df9effc0619fb194648cb4137318e241924cb378" translate="yes" xml:space="preserve">
          <source>This linear transformation of &lt;var&gt;x&lt;/var&gt; improves the numerical stability of the fit.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 의이 선형 변환은 피팅의 수치 안정성을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="fe36d35ff625c5712b1f388de402aad57ff9c364" translate="yes" xml:space="preserve">
          <source>This manual provides comprehensive documentation on how to install, run, use, and extend GNU Octave. Additional chapters describe how to report bugs and help contribute code.</source>
          <target state="translated">이 매뉴얼은 GNU Octave를 설치, 실행, 사용 및 확장하는 방법에 대한 포괄적 인 문서를 제공합니다. 추가 장에서는 버그를보고하고 코드를 제공하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="4df057d216be9b11b191fc3f61bc96ed8fbe68d0" translate="yes" xml:space="preserve">
          <source>This matches a literal &amp;lsquo;</source>
          <target state="translated">이것은 리터럴과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="91a8024a2838aca58f702e884ebf87149c4d8884" translate="yes" xml:space="preserve">
          <source>This may be useful, for example, when using inline functions with numerical integration or optimization where a vector-valued function is expected.</source>
          <target state="translated">예를 들어 벡터 값 함수가 필요한 경우 수치 적분 또는 최적화 기능이있는 인라인 함수를 사용할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47bcbc9ade661d71a8aa437e3218b0e1fcb295a6" translate="yes" xml:space="preserve">
          <source>This may include either wildcard replacement or special character escaping.</source>
          <target state="translated">와일드 카드 대체 또는 특수 문자 이스케이프가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd969aaa3e2122735da57a2f88112183fcb66a9d" translate="yes" xml:space="preserve">
          <source>This means, for example, adding new objects to the scene will not retarget the camera:</source>
          <target state="translated">예를 들어 장면에 새 객체를 추가하면 카메라의 대상이 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0466d142ab5a94a94ed1ffa6367ad2166f2b386b" translate="yes" xml:space="preserve">
          <source>This method is also called when an object appears as lvalue with cs-list indexing, i.e., &lt;code&gt;object{&amp;hellip;}&lt;/code&gt; or &lt;code&gt;object(&amp;hellip;).field&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 객체가 cs-list 색인과 함께 lvalue로 표시 될 때도 호출됩니다 (예 : &lt;code&gt;object{&amp;hellip;}&lt;/code&gt; 또는 &lt;code&gt;object(&amp;hellip;).field&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20f7601e2f2d604a7db9d3fa1be3992815f39fa5" translate="yes" xml:space="preserve">
          <source>This method returns a pointer to the underlying data of the matrix or array so that it can be manipulated directly, either within Octave or by an external library.</source>
          <target state="translated">이 메소드는 매트릭스 또는 배열의 기본 데이터에 대한 포인터를 리턴하여 옥타브 내에서 또는 외부 라이브러리에서 직접 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c21ade32556b2bcbc8936ce6f1c9d3614362fb97" translate="yes" xml:space="preserve">
          <source>This of course assumes that the file &amp;lsquo;</source>
          <target state="translated">이것은 물론 파일 '</target>
        </trans-unit>
        <trans-unit id="07ccfdeddc514ddc4afc039110443b0e2f9e0fa1" translate="yes" xml:space="preserve">
          <source>This operation broadcasts the two matrices with permuted dimensions across each other during elementwise multiplication in order to obtain a larger 3-D array, and this array is then summed along the third dimension. A moment of thought will prove that this operation is simply the much faster ordinary matrix multiplication, &lt;code&gt;&lt;var&gt;c&lt;/var&gt; = &lt;var&gt;a&lt;/var&gt;*&lt;var&gt;b&lt;/var&gt;;&lt;/code&gt;.</source>
          <target state="translated">이 연산은 더 큰 3 차원 배열을 얻기 위해 요소 단위 곱셈 동안 서로에 걸쳐 치환 된 차원을 갖는 2 개의 행렬을 브로드 캐스트하고,이 배열은 3 차원을 따라 합산된다. 생각의 순간은이 연산이 단순히 훨씬 빠른 일반 행렬 곱셈임을 증명할 것입니다. &lt;code&gt;&lt;var&gt;c&lt;/var&gt; = &lt;var&gt;a&lt;/var&gt;*&lt;var&gt;b&lt;/var&gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92890cb4ff062d1984bd9e01f84a608d45f3393a" translate="yes" xml:space="preserve">
          <source>This option allows for truncation of intermediate floating point results in calculations. It is only necessary for certain platforms.</source>
          <target state="translated">이 옵션을 사용하면 중간 부동 소수점 결과를 잘라낼 수 있습니다. 특정 플랫폼에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="53e23a978befb4936d6e391d300380ff9390479a" translate="yes" xml:space="preserve">
          <source>This option exists for &lt;small&gt;MATLAB&lt;/small&gt; compatibility, but has no effect. For maximum performance when reading multiple images from a single file, use the &lt;code&gt;&quot;Index&quot;&lt;/code&gt; option.</source>
          <target state="translated">이 옵션은 &lt;small&gt;MATLAB&lt;/small&gt; 호환성을 위해 존재 하지만 효과가 없습니다. 단일 파일에서 여러 이미지를 읽을 때 성능을 최대화하려면 &lt;code&gt;&quot;Index&quot;&lt;/code&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e644feab9ff0894c365d73a8253872fc87042080" translate="yes" xml:space="preserve">
          <source>This option is accepted for backward compatibility but is ignored. Octave can now support multi-dimensional HDF data and automatically modifies variable names if they are invalid Octave identifiers.</source>
          <target state="translated">이 옵션은 이전 버전과의 호환성을 위해 허용되지만 무시됩니다. Octave는 이제 다차원 HDF 데이터를 지원하고 변수 이름이 유효하지 않은 경우 변수 이름을 자동으로 수정합니다.</target>
        </trans-unit>
        <trans-unit id="69e185983f7d5425a9d88bfd6cdaf4202b637592" translate="yes" xml:space="preserve">
          <source>This option is accepted for backward compatibility but is ignored. Octave now overwrites variables currently in memory with those of the same name found in the file.</source>
          <target state="translated">이 옵션은 이전 버전과의 호환성을 위해 허용되지만 무시됩니다. Octave는 현재 메모리에있는 변수를 파일에서 찾은 이름과 동일한 변수로 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="d88fbf7a9d970663b5f06747296769ec947efdfb" translate="yes" xml:space="preserve">
          <source>This option is present for compatibility but is ignored.</source>
          <target state="translated">이 옵션은 호환성을 위해 존재하지만 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c598f6d597af0ece6ee5f781cde8ecae080243ff" translate="yes" xml:space="preserve">
          <source>This option is required by the &lt;code&gt;&quot;compute consistent initial condition&quot;&lt;/code&gt; and &lt;code&gt;&quot;exclude algebraic variables from error test&quot;&lt;/code&gt; options.</source>
          <target state="translated">이 옵션은 &lt;code&gt;&quot;compute consistent initial condition&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;exclude algebraic variables from error test&quot;&lt;/code&gt; 옵션에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4b250ff69dc9d2fb715b6eedd8e3583420117c17" translate="yes" xml:space="preserve">
          <source>This option only affects PDF outputs, unless it is combined with</source>
          <target state="translated">이 옵션은 PDF 출력과 결합되지 않은 경우에만 PDF 출력에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="8c8f086bac8d4edf68b8c45d3af8cf2d35445e8f" translate="yes" xml:space="preserve">
          <source>This option only has an effect if the &lt;code&gt;&quot;enforce inequality constraints&quot;&lt;/code&gt; option is nonzero.</source>
          <target state="translated">이 옵션은 &lt;code&gt;&quot;enforce inequality constraints&quot;&lt;/code&gt; 옵션이 0이 아닌 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a2ca295340b0d5086f31cabc79e412b0e857e059" translate="yes" xml:space="preserve">
          <source>This plot shows the contributions of each column value to the row sum. It is functionally similar to &lt;code&gt;plot (&lt;var&gt;x&lt;/var&gt;, cumsum (&lt;var&gt;y&lt;/var&gt;, 2))&lt;/code&gt;, except that the area under the curve is shaded.</source>
          <target state="translated">이 그림은 각 열 값이 행 합에 기여한 것을 보여줍니다. 곡선 아래 영역이 음영 처리된다는 점을 제외하면 &lt;code&gt;plot (&lt;var&gt;x&lt;/var&gt;, cumsum (&lt;var&gt;y&lt;/var&gt;, 2))&lt;/code&gt; 과 기능적으로 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="6f31038bf004fced8eee2887d4b642b3036a10ed" translate="yes" xml:space="preserve">
          <source>This prevents long and confusing output from large deeply nested structures. The number of levels to print for nested structures may be set with the function &lt;code&gt;struct_levels_to_print&lt;/code&gt;, and the function &lt;code&gt;print_struct_array_contents&lt;/code&gt; may be used to enable printing of the contents of structure arrays.</source>
          <target state="translated">이것은 큰 중첩 구조에서 길고 혼란스러운 출력을 방지합니다. 중첩 구조에 대해 인쇄 할 레벨 수는 &lt;code&gt;struct_levels_to_print&lt;/code&gt; 함수로 &lt;code&gt;print_struct_array_contents&lt;/code&gt; 수 있으며 print_struct_array_contents 함수를 사용하여 구조 배열의 컨텐츠를 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="458a406d885108ae10c1a7952dcfc1fa9af06c81" translate="yes" xml:space="preserve">
          <source>This prints a table like:</source>
          <target state="translated">이것은 다음과 같은 표를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="61c6a33772a2804b49b4494cce6bcdda72f1fb72" translate="yes" xml:space="preserve">
          <source>This property controls how results are calculated at the boundaries (endpoints) of the window. Possible values are:</source>
          <target state="translated">이 속성은 창의 경계 (끝점)에서 결과를 계산하는 방법을 제어합니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fb1882bc9875a4b265f0e76a5e942cfd7e0879a0" translate="yes" xml:space="preserve">
          <source>This property controls the size of the head of the arrows in the quiver series. The default value is 0.2.</source>
          <target state="translated">이 속성은 떨림 시리즈의 화살표 머리 크기를 제어합니다. 기본값은 0.2입니다.</target>
        </trans-unit>
        <trans-unit id="90846bc55e5a9761aa2098305bb151bd6437bc66" translate="yes" xml:space="preserve">
          <source>This results in a sparse matrix with the same structure as &lt;var&gt;S&lt;/var&gt;. The function &lt;var&gt;f&lt;/var&gt; can be passed as a string, a function handle, or an inline function.</source>
          <target state="translated">결과적으로 &lt;var&gt;S&lt;/var&gt; 와 동일한 구조의 희소 행렬이 생성됩니다 . 함수 &lt;var&gt;f&lt;/var&gt; 는 문자열, 함수 핸들 또는 인라인 함수로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bd7630bf44e145b16f71092ecf074e49a8af201" translate="yes" xml:space="preserve">
          <source>This returns a column vector &lt;var&gt;v&lt;/var&gt; of length 625. Later, you can restore the random number generator to the state &lt;var&gt;v&lt;/var&gt; using the form</source>
          <target state="translated">이렇게하면 길이가 625 인 열 벡터 &lt;var&gt;v&lt;/var&gt; 가 반환됩니다 . 나중에 다음 형식을 사용하여 난수 생성기를 상태 &lt;var&gt;v&lt;/var&gt; 로 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dd4de32dadb489fb89b1b0408759854aa9168a2" translate="yes" xml:space="preserve">
          <source>This rule can lead to some strange looking names, for example &lt;code&gt;defaultlinelinewidth&quot;&lt;/code&gt; specifies the default &lt;code&gt;linewidth&lt;/code&gt; property for &lt;code&gt;line&lt;/code&gt; objects.</source>
          <target state="translated">이 규칙은 이상한 이름으로 이어질 수 있습니다. 예를 들어 &lt;code&gt;defaultlinelinewidth&quot;&lt;/code&gt; 는 &lt;code&gt;line&lt;/code&gt; 객체 의 기본 &lt;code&gt;linewidth&lt;/code&gt; 속성을 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="d0f97049556217db3f98ca0e21b55c56ca605d26" translate="yes" xml:space="preserve">
          <source>This section contains a list of problems (and some apparent problems that don&amp;rsquo;t really mean anything is wrong) that may show up during installation of Octave.</source>
          <target state="translated">이 섹션에는 Octave를 설치하는 동안 나타날 수있는 문제 목록 (실제로 잘못된 것을 의미하지 않는 일부 명백한 문제)이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff89efc0f282d78b3f48a2260537983e9114ae8e" translate="yes" xml:space="preserve">
          <source>This section describes how to call &lt;code&gt;printf&lt;/code&gt; and related functions.</source>
          <target state="translated">이 절에서는 &lt;code&gt;printf&lt;/code&gt; 및 관련 함수 를 호출하는 방법에 대해 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="258e0da7ac4bea4439c457d5bec4ea8f71d2525c" translate="yes" xml:space="preserve">
          <source>This section describes known problems that affect users of Octave. Most of these are not Octave bugs per se&amp;mdash;if they were, we would fix them. But the result for a user may be like the result of a bug.</source>
          <target state="translated">이 섹션에서는 Octave 사용자에게 영향을 미치는 알려진 문제점에 대해 설명합니다. 이들 중 대부분은 옥타브 버그 자체가 아닙니다. 만약 그렇다면 버그를 고치겠습니다. 그러나 사용자의 결과는 버그의 결과와 유사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f82727987eb8cf7d8f10e24467a664f2cd97b25" translate="yes" xml:space="preserve">
          <source>This section describes miscellaneous conversions for &lt;code&gt;printf&lt;/code&gt;.</source>
          <target state="translated">이 섹션에서는 &lt;code&gt;printf&lt;/code&gt; 의 기타 변환에 대해 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="6804f4290260c794db828ec722edf1fbf7d7a054" translate="yes" xml:space="preserve">
          <source>This section describes the &lt;code&gt;scanf&lt;/code&gt; conversions for reading numeric values.</source>
          <target state="translated">이 섹션에서는 숫자 값을 읽기위한 &lt;code&gt;scanf&lt;/code&gt; 변환에 대해 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="8857b01c76f62d904d12ba835ed44a8e3a2d8090" translate="yes" xml:space="preserve">
          <source>This section describes the &lt;code&gt;scanf&lt;/code&gt; input conversions for reading string and character values: &amp;lsquo;</source>
          <target state="translated">이 섹션에서는 문자열 및 문자 값을 읽기위한 &lt;code&gt;scanf&lt;/code&gt; 입력 변환에 대해 설명 합니다. '</target>
        </trans-unit>
        <trans-unit id="2a03049dfdebee5590b1c8ef36d09e2693d77e3f" translate="yes" xml:space="preserve">
          <source>This section describes the options for the &amp;lsquo;</source>
          <target state="translated">이 섹션에서는 '</target>
        </trans-unit>
        <trans-unit id="ddf2adf3abf91c5ab0851cd80159c11789438336" translate="yes" xml:space="preserve">
          <source>This section discusses the conversion specifications for floating-point numbers: the &amp;lsquo;</source>
          <target state="translated">이 섹션에서는 부동 소수점 숫자의 변환 사양 인 '</target>
        </trans-unit>
        <trans-unit id="543a60f850a6c6ddc23fa3e11c03781fb662fe63" translate="yes" xml:space="preserve">
          <source>This section explains the notation conventions that are used in this manual. You may want to skip this section and refer back to it later.</source>
          <target state="translated">이 단원에서는이 설명서에 사용 된 표기법에 대해 설명합니다. 이 섹션을 건너 뛰고 나중에 다시 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da61a6b4f10c1fb183586f2f1f2b8827ac47ae81" translate="yes" xml:space="preserve">
          <source>This section lists the built-in functions that are aware of diagonal and permutation matrices on input, or can return them as output. Passed to other functions, these matrices will in general trigger an implicit conversion. (Of course, user-defined dynamically linked functions may also work with diagonal or permutation matrices).</source>
          <target state="translated">이 섹션에는 입력시 대각선 및 순열 행렬을 인식하거나 출력으로 반환 할 수있는 내장 함수가 나열되어 있습니다. 다른 함수에 전달 된 이러한 행렬은 일반적으로 암시 적 변환을 트리거합니다. 물론 사용자 정의 동적 링크 함수는 대각선 또는 순열 행렬과 함께 작동 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8aa9f714b23e897534ee34836d15f7592d21b6c9" translate="yes" xml:space="preserve">
          <source>This section provides details about the precise syntax of conversion specifications that can appear in a &lt;code&gt;printf&lt;/code&gt; template string.</source>
          <target state="translated">이 섹션에서는 &lt;code&gt;printf&lt;/code&gt; 템플릿 문자열에 나타날 수있는 변환 사양의 정확한 구문에 대해 자세히 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="127682d7c8dd74079602711374cee7c955c1d9c2" translate="yes" xml:space="preserve">
          <source>This shows a problem with character matrices. It simply isn&amp;rsquo;t possible to represent strings of different lengths. The solution is to use a cell array of strings, which is described in &lt;a href=&quot;cell-arrays-of-strings#Cell-Arrays-of-Strings&quot;&gt;Cell Arrays of Strings&lt;/a&gt;.</source>
          <target state="translated">이것은 문자 행렬에 문제가 있음을 나타냅니다. 길이가 다른 문자열을 나타내는 것은 불가능합니다. 해결책은 문자열 &lt;a href=&quot;cell-arrays-of-strings#Cell-Arrays-of-Strings&quot;&gt;의 셀형 배열에&lt;/a&gt; 설명 된 문자열의 셀형 배열을 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4e3833a5fbdb4d270079e2d2e7c57bc0ed17fac8" translate="yes" xml:space="preserve">
          <source>This shows an important general concept about using arrays for indexing instead of looping over an index variable. See &lt;a href=&quot;index-expressions#Index-Expressions&quot;&gt;Index Expressions&lt;/a&gt;. Also use boolean indexing generously. If a condition needs to be tested, this condition can also be written as a boolean index. For instance, instead of</source>
          <target state="translated">이것은 인덱스 변수를 반복하는 대신 인덱스를 위해 배열을 사용하는 것에 대한 중요한 일반적인 개념을 보여줍니다. &lt;a href=&quot;index-expressions#Index-Expressions&quot;&gt;인덱스 표현식을&lt;/a&gt; 참조하십시오 . 부울 색인을 관대하게 사용하십시오. 조건을 테스트해야하는 경우이 조건을 부울 인덱스로 쓸 수도 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="bbbb1fc366235468ec84d6f5c8603025fef89654" translate="yes" xml:space="preserve">
          <source>This shows that &lt;var&gt;A&lt;/var&gt; has 7,840 nonzeros, the complete LU factorization has 126,478 nonzeros, and the incomplete LU factorization, with 0 level of fill-in, has 7,840 nonzeros, the same amount as &lt;var&gt;A&lt;/var&gt;. Taken from: &lt;a href=&quot;http://www.mathworks.com/help/matlab/ref/ilu.html&quot;&gt;http://www.mathworks.com/help/matlab/ref/ilu.html&lt;/a&gt;</source>
          <target state="translated">이는 &lt;var&gt;A&lt;/var&gt; 에 0 이 아닌 7,840이 있고 완전한 LU 인수 분해에 0이 아닌 126,478이 있으며 0 레벨의 채우기가있는 불완전한 LU 인수가 &lt;var&gt;A&lt;/var&gt; 와 같은 7,0이 아닌 0이 있음을 나타냅니다 . &lt;a href=&quot;http://www.mathworks.com/help/matlab/ref/ilu.html&quot;&gt;http://www.mathworks.com/help/matlab/ref/ilu.html&lt;/a&gt; 에서 가져옴</target>
        </trans-unit>
        <trans-unit id="2a3e4a97557e9e50cd8e1b6807e5e87f34946598" translate="yes" xml:space="preserve">
          <source>This shows that most of the run time was spent executing the function &amp;lsquo;</source>
          <target state="translated">이것은 대부분의 런타임이 '</target>
        </trans-unit>
        <trans-unit id="d134bec285d423d2eaf361f33716b9046cd311d8" translate="yes" xml:space="preserve">
          <source>This space saving optimization may be disabled using the function &lt;em&gt;disable_range&lt;/em&gt;.</source>
          <target state="translated">이 공간 절약 최적화는 &lt;em&gt;disable_range&lt;/em&gt; 함수를 사용하여 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e449fea8b0332a86ca2c7f5a1c5c86c84b7bbafd" translate="yes" xml:space="preserve">
          <source>This specifies the number of bytes to use for the internal buffer. A modest speed improvement may be obtained by setting this to a large value when reading a large file, especially if the input contains long strings. The default is 4096, or a value dependent on &lt;var&gt;n&lt;/var&gt; if that is specified.</source>
          <target state="translated">내부 버퍼에 사용할 바이트 수를 지정합니다. 특히 입력에 긴 문자열이 포함 된 경우 큰 파일을 읽을 때이 값을 큰 값으로 설정하면 적당한 속도 향상을 얻을 수 있습니다. 기본값은 4096이거나 지정된 경우 &lt;var&gt;n&lt;/var&gt; 에 종속되는 값 입니다.</target>
        </trans-unit>
        <trans-unit id="f2ee14197f75644a7bc0dd9eabb7ca91f8f00faa" translate="yes" xml:space="preserve">
          <source>This string defines whether the light emanates from a light source at infinite distance (&lt;code&gt;&quot;infinite&quot;&lt;/code&gt;) or from a local point source (&lt;code&gt;&quot;local&quot;&lt;/code&gt;).</source>
          <target state="translated">이 문자열은 광원이 광원에서 무한 거리 ( &lt;code&gt;&quot;infinite&quot;&lt;/code&gt; ) 에서 나오는지 로컬 지점에서 나오는지 ( &lt;code&gt;&quot;local&quot;&lt;/code&gt; )를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0d4f342b409fde8a717a08f9756c999456f8ddfd" translate="yes" xml:space="preserve">
          <source>This value determines whether the editor should be started in async mode (editor is started in the background and Octave continues) or sync mode (Octave waits until the editor exits). Set it to &lt;code&gt;&quot;sync&quot;&lt;/code&gt; to start the editor in sync mode. The default is &lt;code&gt;&quot;async&quot;&lt;/code&gt; (see &lt;a href=&quot;controlling-subprocesses#XREFsystem&quot;&gt;system&lt;/a&gt;).</source>
          <target state="translated">이 값은 편집기를 비동기 모드로 시작해야하는지 (백그라운드에서 편집기를 시작하고 옥타브가 계속됨) 또는 동기화 모드 (Octave가 편집기가 종료 될 때까지 대기 함)를 결정합니다. 동기화 모드에서 편집기를 시작하려면 &lt;code&gt;&quot;sync&quot;&lt;/code&gt; 로 설정하십시오 . 기본값은 &lt;code&gt;&quot;async&quot;&lt;/code&gt; ( &lt;a href=&quot;controlling-subprocesses#XREFsystem&quot;&gt;시스템&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="bf0863240ad29017f670600f9736199a8c715501" translate="yes" xml:space="preserve">
          <source>This will also inhibit printing of the normal traceback message (you will only see the top-level error message).</source>
          <target state="translated">또한 일반적인 역 추적 메시지가 인쇄되지 않습니다 (최상위 오류 메시지 만 표시됨).</target>
        </trans-unit>
        <trans-unit id="bd99a47d2e6ea16983d010aada7f51914e3c3e27" translate="yes" xml:space="preserve">
          <source>This will be faster than using regexp in most cases.</source>
          <target state="translated">대부분의 경우 정규 표현식을 사용하는 것보다 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="9dd8223ba3d56417dc3cb7a954ba049f4911f0ee" translate="yes" xml:space="preserve">
          <source>This will be stored as three vectors &lt;var&gt;cidx&lt;/var&gt;, &lt;var&gt;ridx&lt;/var&gt; and &lt;var&gt;data&lt;/var&gt;, representing the column indexing, row indexing and data respectively. The contents of these three vectors for the above matrix will be</source>
          <target state="translated">이것은 각각 열 인덱싱, 행 인덱싱 및 데이터를 나타내는 3 개의 벡터 &lt;var&gt;cidx&lt;/var&gt; , &lt;var&gt;ridx&lt;/var&gt; 및 &lt;var&gt;data&lt;/var&gt; 로 저장됩니다 . 위의 행렬에 대한이 세 벡터의 내용은</target>
        </trans-unit>
        <trans-unit id="bf317a81f21337bfd0c167bbfeb4c03b065c1c99" translate="yes" xml:space="preserve">
          <source>This will create a file called</source>
          <target state="translated">이것은라는 파일을 생성합니다</target>
        </trans-unit>
        <trans-unit id="a1580e8f082962c59618c6e86ec9f8f178bbda90" translate="yes" xml:space="preserve">
          <source>This will install a copy of Octave, its libraries, and its documentation in the destination directory. As distributed, Octave is installed in the following directories. In the table below, &lt;var&gt;prefix&lt;/var&gt; defaults to</source>
          <target state="translated">그러면 옥타브 사본, 라이브러리 및 문서가 대상 디렉토리에 설치됩니다. 분배되면 Octave는 다음 디렉토리에 설치됩니다. 아래 표에서 &lt;var&gt;prefix&lt;/var&gt; 기본적으로</target>
        </trans-unit>
        <trans-unit id="d82c31911b6d4e8b23da7918c939441a33b3b054" translate="yes" xml:space="preserve">
          <source>This will plot the cosine and sine functions and label them accordingly in the legend.</source>
          <target state="translated">코사인 및 사인 함수를 플로팅하고 범례에서 적절하게 레이블을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a2f1b2df09a1c701cf2208a510768ccb52d2584b" translate="yes" xml:space="preserve">
          <source>This will produce an error about nonconformant arguments.</source>
          <target state="translated">부적합한 인수에 대한 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3d3e5f93df7acf9454dc5b54fb252ac8a91f88c9" translate="yes" xml:space="preserve">
          <source>This workaround description will not appear when listing functions in the package with &lt;code&gt;pkg describe&lt;/code&gt; but they will be published in the HTML documentation online. Workaround descriptions can use any HTML markup, but keep in mind that it will be enclosed in a bold-italic environment. For the special case of:</source>
          <target state="translated">이 해결 방법 설명은 &lt;code&gt;pkg describe&lt;/code&gt; 가 포함 된 패키지의 기능을 나열 할 때는 나타나지 않지만 온라인으로 HTML 설명서에 게시됩니다. 해결 방법 설명은 HTML 마크 업을 사용할 수 있지만 굵은 기울임 꼴 환경으로 묶어야합니다. 특별한 경우 :</target>
        </trans-unit>
        <trans-unit id="3713b384bb63571b47b4994b96e381d043d5ce97" translate="yes" xml:space="preserve">
          <source>This works well as long as it is acceptable to have the name of the variable (or &amp;lsquo;</source>
          <target state="translated">변수 이름을 갖는 것이 허용되는 한 (또는 '</target>
        </trans-unit>
        <trans-unit id="65323958d3048890f3132eab72c06aa910100d26" translate="yes" xml:space="preserve">
          <source>Three element range</source>
          <target state="translated">세 가지 요소 범위</target>
        </trans-unit>
        <trans-unit id="5c7747c575f1d0ec8256555e20610d72fcff4c12" translate="yes" xml:space="preserve">
          <source>Three functions are available for setting and determining the position of the file pointer for a given file.</source>
          <target state="translated">주어진 파일에 대한 파일 포인터의 위치를 ​​설정하고 결정하기 위해 세 가지 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e74c3c69d4583b7e238b4cddd79c2fc0732f13f" translate="yes" xml:space="preserve">
          <source>Three-Dimensional Plots</source>
          <target state="translated">3 차원 도표</target>
        </trans-unit>
        <trans-unit id="d0a5925b4e675444eee06b4908ab7b4e2e44d2c5" translate="yes" xml:space="preserve">
          <source>Three-dimensional Function Plotting</source>
          <target state="translated">3 차원 함수 플로팅</target>
        </trans-unit>
        <trans-unit id="82ef08ad1ef7bedcca7aaac7ddddcf65a5b54d17" translate="yes" xml:space="preserve">
          <source>Three-dimensional Geometric Shapes</source>
          <target state="translated">입체 도형</target>
        </trans-unit>
        <trans-unit id="d015c41ade78cde491f126789680280edc24655e" translate="yes" xml:space="preserve">
          <source>Three-dimensional interpolation.</source>
          <target state="translated">3 차원 보간.</target>
        </trans-unit>
        <trans-unit id="3593ccd96f6c0fad4e362d18ac37226707f2ea46" translate="yes" xml:space="preserve">
          <source>Thu</source>
          <target state="translated">Thu</target>
        </trans-unit>
        <trans-unit id="76031ddf92450ba52c1e3945097079807a9065c2" translate="yes" xml:space="preserve">
          <source>Thursday</source>
          <target state="translated">Thursday</target>
        </trans-unit>
        <trans-unit id="e38f4f305df35e4db9c55bb8ad4bf4dcecd25211" translate="yes" xml:space="preserve">
          <source>Thus,</source>
          <target state="translated">Thus,</target>
        </trans-unit>
        <trans-unit id="f87ff9412739e7b3ab09dcc61b0f2cb9cd69fc30" translate="yes" xml:space="preserve">
          <source>Thus, for example:</source>
          <target state="translated">따라서 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e849577fc0133c83af9390dce4d9680899cfe629" translate="yes" xml:space="preserve">
          <source>Tilde expansion is performed on each of the patterns before looking for matching filenames. For example:</source>
          <target state="translated">일치하는 파일 이름을 찾기 전에 각 패턴에 대해 틸드 확장이 수행됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e3a19b8b3f0a50482bfe492d3ae8081ad87bf778" translate="yes" xml:space="preserve">
          <source>Time (in seconds) used for solving LP/MIP problem.</source>
          <target state="translated">LP / MIP 문제를 해결하는 데 사용되는 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="4f3f471024a31d26e7d63d04fc03146892c87ab9" translate="yes" xml:space="preserve">
          <source>Time Series: Theory and Methods</source>
          <target state="translated">시계열 : 이론 및 방법</target>
        </trans-unit>
        <trans-unit id="b2529252de262a437d9f27bd7bda373dc8b2d105" translate="yes" xml:space="preserve">
          <source>Time fields:</source>
          <target state="translated">시간 필드 :</target>
        </trans-unit>
        <trans-unit id="aa0948c6820022957d32ea97fd608e1a2fa0e6ce" translate="yes" xml:space="preserve">
          <source>Time in 1/100ths of a second (0 to 65535) which must expire before displaying the next image in an animated sequence.</source>
          <target state="translated">애니메이션 시퀀스로 다음 이미지를 표시하기 전에 만료되어야하는 1/100 초 (0 ~ 65535)의 시간입니다.</target>
        </trans-unit>
        <trans-unit id="31f01ac2170a2f81355994cf10fc1444023c1d96" translate="yes" xml:space="preserve">
          <source>Time in seconds since 00:00:00, Jan 1, 1970 (a nonstandard extension).</source>
          <target state="translated">1970 년 1 월 1 일 00:00:00 (비표준 확장) 이후의 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="eebae61e2d116d63e897de6f6371b8c29e18b5ce" translate="yes" xml:space="preserve">
          <source>Time limit exhausted.</source>
          <target state="translated">시간 제한이 소진되었습니다.</target>
        </trans-unit>
        <trans-unit id="86e70eee03e968558f825f38301c680910164573" translate="yes" xml:space="preserve">
          <source>Time of last access in the same form as time values returned from &lt;code&gt;time&lt;/code&gt;. See &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;Timing Utilities&lt;/a&gt;.</source>
          <target state="translated">time에서 반환 된 &lt;code&gt;time&lt;/code&gt; 값과 동일한 형식의 마지막 액세스 시간 . &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;타이밍 유틸리티를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7fc8c21257764c7948111532cec7b25dfd35ec90" translate="yes" xml:space="preserve">
          <source>Time of last file status change in the same form as time values returned from &lt;code&gt;time&lt;/code&gt;. See &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;Timing Utilities&lt;/a&gt;.</source>
          <target state="translated">마지막 파일 상태 시간은 &lt;code&gt;time&lt;/code&gt; 에서 반환 된 시간 값과 같은 형식으로 변경됩니다 . &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;타이밍 유틸리티를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d18f25183bb11e770b37d20545ea06945241c988" translate="yes" xml:space="preserve">
          <source>Time of last modification in the same form as time values returned from &lt;code&gt;time&lt;/code&gt;. See &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;Timing Utilities&lt;/a&gt;.</source>
          <target state="translated">time에서 반환 된 &lt;code&gt;time&lt;/code&gt; 값과 같은 형식으로 마지막 수정 시간 입니다. &lt;a href=&quot;timing-utilities#Timing-Utilities&quot;&gt;타이밍 유틸리티를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce1f0f99aac0d33a876e6dae78dcd4225a32ab98" translate="yes" xml:space="preserve">
          <source>Time zone (EDT), or nothing if no time zone is determinable.</source>
          <target state="translated">시간대 (EDT) 또는 시간대를 결정할 수없는 경우 아무것도 없습니다.</target>
        </trans-unit>
        <trans-unit id="a0a4abcaa4a3ea9e90792df1a73c737deb94760c" translate="yes" xml:space="preserve">
          <source>Time zone.</source>
          <target state="translated">시간대.</target>
        </trans-unit>
        <trans-unit id="4995d29b8959a8e7f603c03cdeca33b68f8bba73" translate="yes" xml:space="preserve">
          <source>Time, 12-hour (hh:mm:ss [AP]M).</source>
          <target state="translated">시간, 12 시간 (hh : mm : ss [AP] M).</target>
        </trans-unit>
        <trans-unit id="8bbf83b25a01e3ac34616016ed10189e7aba10fa" translate="yes" xml:space="preserve">
          <source>Time, 24-hour (hh:mm).</source>
          <target state="translated">시간, 24 시간 (hh : mm).</target>
        </trans-unit>
        <trans-unit id="3a7adef133b797c4c0011b2961ada2fe4ba4284d" translate="yes" xml:space="preserve">
          <source>Time, 24-hour (hh:mm:ss).</source>
          <target state="translated">시간, 24 시간 (hh : mm : ss).</target>
        </trans-unit>
        <trans-unit id="b16c9424b0393814b0c439485c48a56cbb257469" translate="yes" xml:space="preserve">
          <source>Timestamp of file modification (string value).</source>
          <target state="translated">파일 수정 타임 스탬프 (문자열 값)</target>
        </trans-unit>
        <trans-unit id="b31aea78b01ef0e41cd22fc3b109124771ecfeb5" translate="yes" xml:space="preserve">
          <source>Timestamp of file modification as serial date number (double).</source>
          <target state="translated">일련 날짜 번호 (이중)로 파일 수정 시간 소인.</target>
        </trans-unit>
        <trans-unit id="455760175aa175b98349ebdd215e186952f19536" translate="yes" xml:space="preserve">
          <source>Timing Utilities</source>
          <target state="translated">타이밍 유틸리티</target>
        </trans-unit>
        <trans-unit id="3a6e1ca1b04a63f5015ca1442a91a25156cabb18" translate="yes" xml:space="preserve">
          <source>Timing, however, is not the only information available from the profile. The attribute column shows us that &lt;code&gt;timesteps&lt;/code&gt; calls itself recursively. This may not be that remarkable in this example (since it&amp;rsquo;s clear anyway), but could be helpful in a more complex setting. As to the question of why is there a &amp;lsquo;</source>
          <target state="translated">그러나 타이밍이 프로파일에서 사용 가능한 유일한 정보는 아닙니다. 속성 열은 &lt;code&gt;timesteps&lt;/code&gt; 가 재귀 적으로 호출 한다는 것을 보여줍니다 . 이 예에서는 그렇게 눈에 띄지 않을 수도 있지만 (어쨌든 분명하기 때문에)보다 복잡한 설정에서 도움이 될 수 있습니다. 왜 '에 관한 질문에'</target>
        </trans-unit>
        <trans-unit id="768e0c1c69573fb588f61f1308a015c11468e05f" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Title</target>
        </trans-unit>
        <trans-unit id="bcc1ce99199ce8f64af33c739b5c52c06e462ebf" translate="yes" xml:space="preserve">
          <source>Title for the audio file.</source>
          <target state="translated">오디오 파일의 제목입니다.</target>
        </trans-unit>
        <trans-unit id="5b8631c25f1cfd154f4169b7231a6814b336e0e2" translate="yes" xml:space="preserve">
          <source>To a very good first approximation, the goal in vectorization is to write code that avoids loops and uses whole-array operations. As a trivial example, consider</source>
          <target state="translated">아주 좋은 첫 번째 근사화를 위해 벡터화의 목표는 루프를 피하고 전체 배열 연산을 사용하는 코드를 작성하는 것입니다. 사소한 예로서, 고려</target>
        </trans-unit>
        <trans-unit id="01ea5104fe9cd9ded6f021374a8210a0c9494fc5" translate="yes" xml:space="preserve">
          <source>To access the elements of a cell array, it can be indexed with the { and } operators. Thus, the variable created in the previous example can be indexed like this:</source>
          <target state="translated">셀형 배열의 요소에 액세스하기 위해 {및} 연산자로 색인을 생성 할 수 있습니다. 따라서 이전 예제에서 작성된 변수는 다음과 같이 색인화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a99b4248f083dbfa3b7cf325da157f9382205f18" translate="yes" xml:space="preserve">
          <source>To avoid degrading performance unnecessarily by checking the time stamps on functions that are not likely to change, Octave assumes that function files in the directory tree</source>
          <target state="translated">Octave는 변경되지 않을 함수의 타임 스탬프를 확인하여 불필요하게 성능 저하를 피하기 위해 디렉토리 트리의 함수 파일을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="3e19220939af9ea2a5a0cf5d0fc6e7a27b8495ef" translate="yes" xml:space="preserve">
          <source>To avoid segmentation faults causing Octave to abort, this function explicitly checks that there are sufficient arguments available before accessing these arguments. It then obtains two multi-dimensional arrays of type &lt;code&gt;NDArray&lt;/code&gt; and adds these together. Note that the &lt;code&gt;array_value&lt;/code&gt; method is called without using the &lt;code&gt;is_matrix_type&lt;/code&gt; method. If an error occurs when attempting to extract the value, Octave will print a message and throw an exception. The reason to prefer this coding structure is that the arguments might be a type which is not an &lt;code&gt;NDArray&lt;/code&gt;, but for which it would make sense to convert them to one. The &lt;code&gt;array_value&lt;/code&gt; method allows this conversion to be performed transparently when possible. If you need to catch errors like this, and perform some kind of cleanup or other operation, you can catch the &lt;code&gt;octave_execution_error&lt;/code&gt; exception.</source>
          <target state="translated">Octave가 중단되는 세그먼트 오류를 ​​피하기 위해이 함수는 이러한 인수에 액세스하기 전에 사용 가능한 충분한 인수가 있는지 명시 적으로 확인합니다. 그런 다음 &lt;code&gt;NDArray&lt;/code&gt; 유형의 2 차원 다차원 배열을 가져 와서 함께 추가합니다. 있습니다 &lt;code&gt;array_value&lt;/code&gt; 방법은 사용하지 않고라고 &lt;code&gt;is_matrix_type&lt;/code&gt; 의 방법을. 값을 추출하려고 할 때 오류가 발생하면 Octave는 메시지를 인쇄하고 예외를 발생시킵니다. 이 코딩 구조를 선호하는 이유는 인수가 &lt;code&gt;NDArray&lt;/code&gt; 가 아닌 유형 일 수 있지만 인수 로 변환하는 것이 타당하기 때문입니다. &lt;code&gt;array_value&lt;/code&gt; 이 방법을 사용하면 가능한 경우이 변환을 투명하게 수행 할 수 있습니다. 이와 같은 오류를 잡아서 정리 또는 다른 작업을 수행 &lt;code&gt;octave_execution_error&lt;/code&gt; 경우 octave_execution_error 예외를 잡아낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb627a7b9620b32c7cd5b554a1c1797211681da5" translate="yes" xml:space="preserve">
          <source>To be consistent with the Octave graphic handle classes, a class should also define the &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods. The &lt;code&gt;get&lt;/code&gt; method accepts one or two arguments. The first argument is an object of the appropriate class. If no second argument is given then the method should return a structure with all the properties of the class. If the optional second argument is given it should be a property name and the specified property should be retrieved.</source>
          <target state="translated">Octave 그래픽 핸들 클래스와 일치하려면 클래스가 &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 메소드 도 정의해야 합니다. &lt;code&gt;get&lt;/code&gt; 방법은 하나 개 또는 두 개의 인수를 받아들입니다. 첫 번째 인수는 적절한 클래스의 객체입니다. 두 번째 인수가 제공되지 않으면 메소드는 클래스의 모든 특성을 가진 구조를 리턴해야합니다. 선택적 두 번째 인수가 제공되면 특성 이름이어야하며 지정된 특성을 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="8150c779e1199a8484f3a60ee81e1ba9652950f7" translate="yes" xml:space="preserve">
          <source>To be more clear, the approximation &lt;var&gt;x&lt;/var&gt; is computed at the iteration &lt;code&gt;(&lt;var&gt;iter(1)&lt;/var&gt; - 1) * &lt;var&gt;restart&lt;/var&gt; + &lt;var&gt;iter(2)&lt;/var&gt;&lt;/code&gt;. Since the output &lt;var&gt;x&lt;/var&gt; corresponds to the minimal preconditioned residual solution, the total number of iterations that the method performed is given by &lt;code&gt;length (resvec) - 1&lt;/code&gt;.</source>
          <target state="translated">더 명확하게하기 위해 근사 &lt;var&gt;x&lt;/var&gt; 는 반복에서 계산됩니다 &lt;code&gt;(&lt;var&gt;iter(1)&lt;/var&gt; - 1) * &lt;var&gt;restart&lt;/var&gt; + &lt;var&gt;iter(2)&lt;/var&gt;&lt;/code&gt; . 출력 &lt;var&gt;x&lt;/var&gt; 는 최소 사전 조정 된 잔차 솔루션에 해당하므로, 방법이 수행 한 총 반복 횟수는 &lt;code&gt;length (resvec) - 1&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="4ee70055ea05297ef67b9cda4f7fddc4c866a0f9" translate="yes" xml:space="preserve">
          <source>To calculate for example the MD5 hash value of the string &lt;code&gt;&quot;abc&quot;&lt;/code&gt; the &lt;code&gt;hash&lt;/code&gt; function is called as follows:</source>
          <target state="translated">예를 들어 문자열의 MD5 해시 값 계산하려면 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; &lt;code&gt;hash&lt;/code&gt; 함수는 다음과 같이 호출됩니다 :</target>
        </trans-unit>
        <trans-unit id="b4e0f4b09d7ea0942a71e01a13f532ba2c901ccc" translate="yes" xml:space="preserve">
          <source>To call a method of an object the same structure indexing operator &amp;lsquo;</source>
          <target state="translated">동일한 구조 인덱싱 연산자 '개체의 메서드를 호출하려면</target>
        </trans-unit>
        <trans-unit id="f82993e1ff555800963f63a0a9c8a9a481b73f4f" translate="yes" xml:space="preserve">
          <source>To check whether a variable belongs to a user class, the &lt;code&gt;isobject&lt;/code&gt; and &lt;code&gt;isa&lt;/code&gt; functions can be used. For example:</source>
          <target state="translated">변수가 사용자 클래스에 속하는지 확인하기 위해 &lt;code&gt;isobject&lt;/code&gt; 및 &lt;code&gt;isa&lt;/code&gt; 함수를 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="49f7b828e5188337e322cf22041c6712962ac0d4" translate="yes" xml:space="preserve">
          <source>To clear the current figure, call the &lt;code&gt;clf&lt;/code&gt; function. To clear the current axis, call the &lt;code&gt;cla&lt;/code&gt; function. To bring the current figure to the top of the window stack, call the &lt;code&gt;shg&lt;/code&gt; function. To delete a graphics object, call &lt;code&gt;delete&lt;/code&gt; on its index. To close the figure window, call the &lt;code&gt;close&lt;/code&gt; function.</source>
          <target state="translated">현재 수치를 지우려면 &lt;code&gt;clf&lt;/code&gt; 함수를 호출하십시오 . 현재 축을 지우려면 &lt;code&gt;cla&lt;/code&gt; 함수를 호출하십시오 . 현재 그림을 창 스택의 맨 위로 가져 오려면 &lt;code&gt;shg&lt;/code&gt; 함수를 호출하십시오 . 그래픽스 객체를 삭제하려면 인덱스에서 &lt;code&gt;delete&lt;/code&gt; 를 호출하십시오 . 그림 창을 닫으려면 전화 &lt;code&gt;close&lt;/code&gt; 기능을.</target>
        </trans-unit>
        <trans-unit id="5f7872e426359190e0e4f9d3d2f248875ba6acc8" translate="yes" xml:space="preserve">
          <source>To compile Octave, you will need a recent version of &lt;code&gt;g++&lt;/code&gt; or other ANSI C++ compiler. In addition, you will need a Fortran 77 compiler or &lt;code&gt;f2c&lt;/code&gt;. If you use &lt;code&gt;f2c&lt;/code&gt;, you will need a script like &lt;code&gt;fort77&lt;/code&gt; that works like a normal Fortran compiler by combining &lt;code&gt;f2c&lt;/code&gt; with your C compiler in a single script.</source>
          <target state="translated">Octave를 컴파일하려면 최신 버전의 &lt;code&gt;g++&lt;/code&gt; 또는 다른 ANSI C ++ 컴파일러 가 필요합니다 . 또한 Fortran 77 컴파일러 또는 &lt;code&gt;f2c&lt;/code&gt; 가 필요합니다 . &lt;code&gt;f2c&lt;/code&gt; 를 사용 하는 경우 단일 스크립트에서 &lt;code&gt;f2c&lt;/code&gt; 를 C 컴파일러와 결합하여 일반 Fortran 컴파일러처럼 작동하는 &lt;code&gt;fort77&lt;/code&gt; 과 같은 스크립트가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="6a2db47897bfaeb2a31f04ec5f535821cedb8557" translate="yes" xml:space="preserve">
          <source>To compute the matrix exponential, see &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;Linear Algebra&lt;/a&gt;.</source>
          <target state="translated">행렬 지수를 계산하려면 &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;선형 대수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b72f37efd9b7233b34d438e336cef3944ee8040" translate="yes" xml:space="preserve">
          <source>To compute the matrix logarithm, see &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;Linear Algebra&lt;/a&gt;.</source>
          <target state="translated">행렬 로그를 계산하려면 &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;선형 대수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08d99842644781a5b2b3fcd5c69b785245c0f4a9" translate="yes" xml:space="preserve">
          <source>To compute the matrix square root, see &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;Linear Algebra&lt;/a&gt;.</source>
          <target state="translated">행렬 제곱근을 계산하려면 &lt;a href=&quot;linear-algebra#Linear-Algebra&quot;&gt;선형 대수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="daf3b6941424b6001fff695bc23b4325a956d174" translate="yes" xml:space="preserve">
          <source>To compute the pseudo-random sequence, &lt;code&gt;rand&lt;/code&gt; uses the Mersenne Twister with a period of &lt;em&gt;2^{19937}-1&lt;/em&gt; (See M. Matsumoto and T. Nishimura,</source>
          <target state="translated">의사 무작위 시퀀스를 계산하기 위해 &lt;code&gt;rand&lt;/code&gt; 는 &lt;em&gt;2 ^ {19937} -1&lt;/em&gt; 의 기간으로 Mersenne Twister를 사용합니다.&lt;em&gt;&lt;/em&gt; (M. Matsumoto 및 T. Nishimura,</target>
        </trans-unit>
        <trans-unit id="7b17fc55ec118d2056f643d8ffa7e17f844b4530" translate="yes" xml:space="preserve">
          <source>To control the grid lines for an individual axes use the &lt;code&gt;set&lt;/code&gt; function. For example:</source>
          <target state="translated">개별 축의 그리드 선을 제어하려면 &lt;code&gt;set&lt;/code&gt; 기능을 사용하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="99329f88f214841bf40ca0549e895d2c60e09e07" translate="yes" xml:space="preserve">
          <source>To convert back from a cellstr to a character array use &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">cellstr에서 문자형 배열로 다시 변환하려면 &lt;code&gt;char&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6371a92b906eb6440ff363f1dd20af7f34103b7" translate="yes" xml:space="preserve">
          <source>To correct this behavior would mean that zero elements with a negative sign-bit would need to be stored in the matrix to ensure that their sign-bit was respected. This is not done at this time, for reasons of efficiency, and so the user is warned that calculations where the sign-bit of zero is important must not be done using sparse matrices.</source>
          <target state="translated">이 동작을 수정하려면 부호 비트가 음수 인 0 개의 요소를 행렬에 저장하여 부호 비트가 존중되도록해야합니다. 현재로서는 효율성상의 이유로이 작업이 수행되지 않으므로 부호 비트 0이 중요한 계산은 희소 행렬을 사용해서는 안된다는 경고가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ab4a3c7e0f6eec9d68a75fc7ab73a4672cf8278a" translate="yes" xml:space="preserve">
          <source>To create a bulleted list, type</source>
          <target state="translated">글 머리 기호 목록을 작성하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="e5cdbeac1c691a014ef0d0f6c146ec07441b687d" translate="yes" xml:space="preserve">
          <source>To create a constant matrix whose values are all the same use an expression such as</source>
          <target state="translated">값이 모두 같은 상수 행렬을 만들려면 다음과 같은 표현식을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c28efdab5f7c4b4688fa7cec850f56788de71fc9" translate="yes" xml:space="preserve">
          <source>To create a numbered list, type</source>
          <target state="translated">번호 매기기 목록을 만들려면</target>
        </trans-unit>
        <trans-unit id="4b6727688c2b2c73d8be20a80b9e80cab6266720" translate="yes" xml:space="preserve">
          <source>To define a condition on a property named &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, use the string &lt;code&gt;'\timeout'&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;&quot;timeout&quot;&lt;/code&gt; 이라는 속성에 조건을 정의하려면 대신 &lt;code&gt;'\timeout'&lt;/code&gt; 문자열을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="20426685284854f24c6689b6878e8926eee7acbb" translate="yes" xml:space="preserve">
          <source>To determine if two strings are identical it is necessary to use the &lt;code&gt;strcmp&lt;/code&gt; function. It compares complete strings and is case sensitive. &lt;code&gt;strncmp&lt;/code&gt; compares only the first &lt;code&gt;N&lt;/code&gt; characters (with &lt;code&gt;N&lt;/code&gt; given as a parameter). &lt;code&gt;strcmpi&lt;/code&gt; and &lt;code&gt;strncmpi&lt;/code&gt; are the corresponding functions for case-insensitive comparison.</source>
          <target state="translated">두 개의 문자열이 동일한 지 확인하려면 &lt;code&gt;strcmp&lt;/code&gt; 함수 를 사용해야합니다 . 완전한 문자열을 비교하며 대소 문자를 구분합니다. &lt;code&gt;strncmp&lt;/code&gt; 는 첫 번째 &lt;code&gt;N&lt;/code&gt; 문자 만 비교합니다 ( &lt;code&gt;N&lt;/code&gt; 은 매개 변수로 제공됨). &lt;code&gt;strcmpi&lt;/code&gt; 및 &lt;code&gt;strncmpi&lt;/code&gt; 는 대소 문자를 구분하지 않는 비교를위한 해당 기능입니다.</target>
        </trans-unit>
        <trans-unit id="f4fd25e14496762d01914b4fedfba5364c64eae3" translate="yes" xml:space="preserve">
          <source>To determine whether a variable is a graphics object index, or an index to an axes or figure, use the functions &lt;code&gt;ishghandle&lt;/code&gt;, &lt;code&gt;isgraphics&lt;/code&gt;, &lt;code&gt;isaxes&lt;/code&gt;, and &lt;code&gt;isfigure&lt;/code&gt;.</source>
          <target state="translated">변수가 그래픽스 객체 인덱스인지 축 또는 그림에 대한 인덱스인지 확인하려면 &lt;code&gt;ishghandle&lt;/code&gt; , &lt;code&gt;isgraphics&lt;/code&gt; , &lt;code&gt;isaxes&lt;/code&gt; 및 &lt;code&gt;isfigure&lt;/code&gt; 함수를 사용하십시오. .</target>
        </trans-unit>
        <trans-unit id="bc60f7177f77a64d62a9da84a4de61716016217e" translate="yes" xml:space="preserve">
          <source>To display the solution of the previous example graphically, use the command</source>
          <target state="translated">이전 예제의 솔루션을 그래픽으로 표시하려면 다음 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b0bab3aeb671c84a4d01c3aa9737ca0e27b67c83" translate="yes" xml:space="preserve">
          <source>To display the value of a variable, simply type the name of the variable at the prompt. For example, to display the value stored in the matrix &lt;code&gt;B&lt;/code&gt;, type the command</source>
          <target state="translated">변수 값을 표시하려면 프롬프트에서 변수 이름을 입력하십시오. 예를 들어, 행렬 &lt;code&gt;B&lt;/code&gt; 에 저장된 값을 표시 하려면 명령을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="e35e4418e2f17214b67f1aacdd55280d40ca2ce5" translate="yes" xml:space="preserve">
          <source>To enable someone to investigate the bug, you should include all these things:</source>
          <target state="translated">누군가 버그를 조사 할 수있게하려면 다음 사항을 모두 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="27281b8c3aba75ee64c905ff62c9f6283cfcf3b1" translate="yes" xml:space="preserve">
          <source>To enforce both options 1 and 2.</source>
          <target state="translated">옵션 1과 2를 모두 적용하려면</target>
        </trans-unit>
        <trans-unit id="22345badaf6e32f490fd1c4935a2673d7b546dd2" translate="yes" xml:space="preserve">
          <source>To enforce constraint checking during the integration.</source>
          <target state="translated">통합 중에 제약 조건 검사를 시행합니다.</target>
        </trans-unit>
        <trans-unit id="018eaa1297a14319f8db3485e4816833d1586222" translate="yes" xml:space="preserve">
          <source>To exit Octave, type</source>
          <target state="translated">Octave를 종료하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="84c09314545da3990f0a32852c19eea9d87a78bf" translate="yes" xml:space="preserve">
          <source>To facilitate smooth mixing with full matrices, backward compatibility, and compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, the diagonal and permutation matrices should allow any operation that works on full matrices, and will either treat it specially, or implicitly convert themselves to full matrices.</source>
          <target state="translated">풀 매트릭스와의 원활한 혼합, 역 호환성 및 &lt;small&gt;MATLAB&lt;/small&gt; 과의 호환성&lt;small&gt;&lt;/small&gt; 대각 행렬과 순열 행렬은 완전 행렬에서 작동하는 모든 연산을 허용해야하며, 특수하게 처리하거나 암시 적으로 완전 행렬로 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="9e1aef56f7cbe1add671305b24384f0d93ad3a59" translate="yes" xml:space="preserve">
          <source>To find the solution of an overdetermined problem needs an estimate of the residual error &lt;var&gt;r&lt;/var&gt; and so it is more complex to formulate a minimum norm solution using the &lt;code&gt;spaugment&lt;/code&gt; function.</source>
          <target state="translated">과도하게 결정된 문제의 해를 구하려면 잔차 오차 &lt;var&gt;r&lt;/var&gt; 의 추정치가 필요 하므로 &lt;code&gt;spaugment&lt;/code&gt; 함수를 사용하여 최소 규범 해를 공식화하는 것이 더 복잡 합니다.</target>
        </trans-unit>
        <trans-unit id="55daf9baa1dfa62fd975d56b72ef8b8611d37fc0" translate="yes" xml:space="preserve">
          <source>To function properly the package manager needs to keep some information about the installed packages. For per-user packages this information is by default stored in the file</source>
          <target state="translated">제대로 작동하려면 패키지 관리자가 설치된 패키지에 대한 정보를 유지해야합니다. 사용자 별 패키지의 경우이 정보는 기본적으로 파일에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="d28c1fa9a3c7e3ed0e982b4026dc0dd6611f610e" translate="yes" xml:space="preserve">
          <source>To get a wider-angle view, we could double the viewing angle. This will also set the mode to manual:</source>
          <target state="translated">더 넓은 시야를 얻기 위해 시야각을 두 배로 늘릴 수 있습니다. 또한 모드를 수동으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="a4b8a79990b63c894cf01d5980fb6d625d3a3269" translate="yes" xml:space="preserve">
          <source>To give another example for indexing cell arrays with &amp;lsquo;</source>
          <target state="translated">'을 사용하여 셀형 배열을 인덱싱하는 또 다른 예를 제공하려면</target>
        </trans-unit>
        <trans-unit id="f866715d6e17c0ebbf7594d63991aacbd9fda5b3" translate="yes" xml:space="preserve">
          <source>To have Octave read and compile these functions into an internal form, you need to make sure that the file is in Octave&amp;rsquo;s load path (accessible through the &lt;code&gt;path&lt;/code&gt; function), then simply type the base name of the file that contains the commands. (Octave uses the same rules to search for script files as it does to search for function files.)</source>
          <target state="translated">Octave가이 함수들을 읽고 내부 형식으로 컴파일하게하려면 파일이 Octave의로드 경로 ( &lt;code&gt;path&lt;/code&gt; 함수를 통해 액세스 가능)에 있는지 확인한 다음 명령이 포함 된 파일의 기본 이름을 입력하면됩니다. (Octave는 함수 파일을 검색 할 때와 동일한 규칙을 사용하여 스크립트 파일을 검색합니다.)</target>
        </trans-unit>
        <trans-unit id="0b3b16fe30ad8e97cde247410f1894b56bf8296e" translate="yes" xml:space="preserve">
          <source>To have constraint checking only in the initial condition calculation.</source>
          <target state="translated">초기 조건 계산에서만 구속 조건 검사를합니다.</target>
        </trans-unit>
        <trans-unit id="1d2c3e2377b9c5d47b381d162672449aea714f0e" translate="yes" xml:space="preserve">
          <source>To identify whether a particular point represented by a vector &lt;var&gt;p&lt;/var&gt; falls within one of the simplices of an N-simplex, we can write the Cartesian coordinates of the point in a parametric form with respect to the N-simplex. This parametric form is called the Barycentric Coordinates of the point. If the points defining the N-simplex are given by &lt;var&gt;N&lt;/var&gt; + 1 vectors &lt;code&gt;&lt;var&gt;t&lt;/var&gt;(&lt;var&gt;i&lt;/var&gt;,:)&lt;/code&gt;, then the Barycentric coordinates defining the point &lt;var&gt;p&lt;/var&gt; are given by</source>
          <target state="translated">벡터 &lt;var&gt;p&lt;/var&gt; 로 표시되는 특정 점이 N-simplex의 단순 중 하나에 속 하는지 여부를 식별하기 위해 N-simplex와 관련하여 점의 직교 좌표를 파라 메트릭 형태로 쓸 수 있습니다. 이 파라 메트릭 형식을 포인트의 무게 중심 좌표라고합니다. N- 심플 렉스를 정의하는 점이 &lt;var&gt;N&lt;/var&gt; + 1 벡터 &lt;code&gt;&lt;var&gt;t&lt;/var&gt;(&lt;var&gt;i&lt;/var&gt;,:)&lt;/code&gt; 로 주어지면 점 &lt;var&gt;p&lt;/var&gt; 를 정의하는 중심 중심 좌표 는</target>
        </trans-unit>
        <trans-unit id="ba6e99d73af463ea61512d44464030e606ddea98" translate="yes" xml:space="preserve">
          <source>To include external graphics, e.g., a graphic called &amp;lsquo;</source>
          <target state="translated">외부 그래픽을 포함하려면 (예 : '</target>
        </trans-unit>
        <trans-unit id="2a152a419b0153d2b7e3be32500477f6a774e0e7" translate="yes" xml:space="preserve">
          <source>To include the content of an external file, e.g., a file called &amp;lsquo;</source>
          <target state="translated">외부 파일의 내용을 포함하려면 (예 : '</target>
        </trans-unit>
        <trans-unit id="7216f59d79922aca5609cf533481b44216614df1" translate="yes" xml:space="preserve">
          <source>To inquire whether a particular method exists for a user class, the &lt;code&gt;ismethod&lt;/code&gt; function can be used.</source>
          <target state="translated">사용자 클래스에 대해 특정 메소드가 존재하는지 확인하기 위해 &lt;code&gt;ismethod&lt;/code&gt; 함수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53412e16a4ede43e4888ea940d9dc33be9887c9b" translate="yes" xml:space="preserve">
          <source>To insert printing characters (letters, digits, symbols, etc.), simply type the character. Octave will insert the character at the cursor and advance the cursor forward.</source>
          <target state="translated">인쇄 문자 (문자, 숫자, 기호 등)를 삽입하려면 문자를 입력하십시오. 옥타브는 커서에 문자를 삽입하고 커서를 앞으로 이동시킵니다.</target>
        </trans-unit>
        <trans-unit id="322ed7c266fbe3f83fd522dd43c2a0dc348a5daa" translate="yes" xml:space="preserve">
          <source>To make the process easier, use the &lt;code&gt;assert&lt;/code&gt; function. For example, with &lt;code&gt;assert&lt;/code&gt; the previous test is reduced to:</source>
          <target state="translated">프로세스를보다 쉽게하려면 &lt;code&gt;assert&lt;/code&gt; 기능을 사용하십시오 . 예를 들어 &lt;code&gt;assert&lt;/code&gt; 를 사용 하면 이전 테스트가 다음과 같이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="19e10d9f2a2f4445bdca31f7751c655e38fef5fd" translate="yes" xml:space="preserve">
          <source>To minimize the amount of code duplication between packages it is possible that one package depends on another one. If a package depends on another, it will check if that package is installed during installation. If it is not, an error will be reported and the package will not be installed. This behavior can be disabled by passing the</source>
          <target state="translated">패키지 간 코드 중복을 최소화하기 위해 한 패키지가 다른 패키지에 종속 될 수 있습니다. 패키지가 다른 패키지에 종속 된 경우 설치 중에 해당 패키지가 설치되어 있는지 확인합니다. 그렇지 않으면 오류가보고되고 패키지가 설치되지 않습니다. 이 동작은</target>
        </trans-unit>
        <trans-unit id="a7e26d855bf964a10e32969dbd76e05897cffbf8" translate="yes" xml:space="preserve">
          <source>To multiply the two matrices &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, type the command</source>
          <target state="translated">두 행렬 &lt;code&gt;A&lt;/code&gt; 와 &lt;code&gt;B&lt;/code&gt; 를 곱하려면 다음 명령을 입력하십시오</target>
        </trans-unit>
        <trans-unit id="02d6afbce5dedc95d133307591112cffdbbb57d3" translate="yes" xml:space="preserve">
          <source>To obtain a single index for each matrix element, Octave pretends that the columns of a matrix form one long vector (like Fortran arrays are stored). For example:</source>
          <target state="translated">각 행렬 요소에 대해 단일 인덱스를 얻기 위해 옥타브는 행렬의 열이 하나의 긴 벡터를 형성한다고 가정합니다 (Fortran 배열이 저장된 것처럼). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="967c4339ef1767934e05f1f3b8ec60b550599290" translate="yes" xml:space="preserve">
          <source>To partially solve the problem Octave uses a special optimization for user-defined &lt;code&gt;subsasgn&lt;/code&gt; methods coded as m-files. When the method gets called as a result of the built-in assignment syntax (not a direct &lt;code&gt;subsasgn&lt;/code&gt; call as shown above), i.e., &lt;code&gt;x(1)&amp;nbsp;=&amp;nbsp;1&lt;/code&gt;, &lt;b&gt;AND&lt;/b&gt; if the &lt;code&gt;subsasgn&lt;/code&gt; method is declared with identical input and output arguments, as in the example above, then Octave will ignore the copy of &lt;code&gt;x&lt;/code&gt; inside the caller&amp;rsquo;s scope; therefore, any changes made to &lt;code&gt;x&lt;/code&gt; during the method execution will directly affect the caller&amp;rsquo;s copy as well. This allows, for instance, defining a polynomial class where modifying a single element takes constant time.</source>
          <target state="translated">Octave는 문제를 부분적으로 해결하기 위해 m 파일로 코딩 된 사용자 정의 &lt;code&gt;subsasgn&lt;/code&gt; 메소드에 대해 특수 최적화를 사용 합니다. 내장 할당 구문의 결과로 메소드가 호출 될 때 ( 위에 표시된 직접 &lt;code&gt;subsasgn&lt;/code&gt; 호출이 아님 ), 즉 &lt;code&gt;x(1)&amp;nbsp;=&amp;nbsp;1&lt;/code&gt; 이고 &lt;code&gt;subsasgn&lt;/code&gt; 메소드가 동일한 입력 및 출력 인수로 선언 된 경우 &lt;b&gt;AND&lt;/b&gt; 위의 예에서 Octave는 호출자의 범위 내에서 &lt;code&gt;x&lt;/code&gt; 의 복사본을 무시합니다 . 따라서 메소드 실행 중에 &lt;code&gt;x&lt;/code&gt; 를 변경 하면 호출자의 사본에도 직접 영향을 미칩니다. 예를 들어 단일 요소를 수정하는 데 일정한 시간이 걸리는 다항식 클래스를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69e67b694a9e184ebe1e265607bd929cd78de517" translate="yes" xml:space="preserve">
          <source>To plot multiple one- or two-argument groups, separate each group with an empty format string, as</source>
          <target state="translated">여러 개의 하나 또는 두 개의 인수 그룹을 플로팅하려면 각 그룹을 빈 형식 문자열로 구분하십시오.</target>
        </trans-unit>
        <trans-unit id="e4b40ffdfb7b1e4f734a0b147d1e22845ddf57fa" translate="yes" xml:space="preserve">
          <source>To post-increment a variable &lt;var&gt;x&lt;/var&gt;, you would write &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt;. This adds one to the variable &lt;var&gt;x&lt;/var&gt;, but returns the value that &lt;var&gt;x&lt;/var&gt; had prior to incrementing it. For example, if &lt;var&gt;x&lt;/var&gt; is equal to 2, the result of the expression &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt; is 2, and the new value of &lt;var&gt;x&lt;/var&gt; is 3.</source>
          <target state="translated">변수의 후행 증가하기 위해 &lt;var&gt;x&lt;/var&gt; , 당신은 작성합니다 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt; . 변수 &lt;var&gt;x&lt;/var&gt; 에 1을 더 하지만 &lt;var&gt;x&lt;/var&gt; 가 증가하기 전에 가지고 있던 값을 반환 합니다. 예를 들어, &lt;var&gt;x&lt;/var&gt; 가 2와 같으면 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;++&lt;/code&gt; 표현식의 결과 는 2이고 &lt;var&gt;x&lt;/var&gt; 의 새로운 값 은 3입니다.</target>
        </trans-unit>
        <trans-unit id="3ae53ddf16568d7175a57a7effbca387ebcbda11" translate="yes" xml:space="preserve">
          <source>To print a message along with ringing the bell, you might modify the &lt;code&gt;wakeup&lt;/code&gt; to look like this:</source>
          <target state="translated">벨 울림과 함께 메시지를 인쇄하려면 다음과 같이 &lt;code&gt;wakeup&lt;/code&gt; 을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="cdf46235aefe7162f38fd162cc2ed9fe7cdc1e98" translate="yes" xml:space="preserve">
          <source>To publish this script file, type &lt;code&gt;publish (&quot;pub_example.m&quot;)&lt;/code&gt;.</source>
          <target state="translated">이 스크립트 파일을 공개하려면 publish &lt;code&gt;publish (&quot;pub_example.m&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b3accda122d29501fa6092dcacf176145045310" translate="yes" xml:space="preserve">
          <source>To query the current hold state use the &lt;code&gt;ishold&lt;/code&gt; function.</source>
          <target state="translated">현재 보류 상태를 쿼리하려면 &lt;code&gt;ishold&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8683b14f43fbfc051f35bbeb9bf8a3ca8171ca0e" translate="yes" xml:space="preserve">
          <source>To quit debug mode and return directly to the prompt without executing any additional code use &lt;code&gt;dbquit&lt;/code&gt;.</source>
          <target state="translated">디버그 모드를 종료하고 추가 코드를 실행하지 않고 프롬프트로 직접 돌아가려면 &lt;code&gt;dbquit&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="956d7474c6a7ae0c4d6951679c81c325d71d1aa3" translate="yes" xml:space="preserve">
          <source>To read a line and discard the terminating newline see &lt;code&gt;fgetl&lt;/code&gt;.</source>
          <target state="translated">줄을 읽고 종료하는 줄 바꿈을 삭제하려면 &lt;code&gt;fgetl&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c7c245e8b204521695926ab939157f9d1e93eb1" translate="yes" xml:space="preserve">
          <source>To read a line and return the terminating newline see &lt;code&gt;fgets&lt;/code&gt;.</source>
          <target state="translated">줄을 읽고 종료하는 줄 바꿈을 반환하려면 &lt;code&gt;fgets&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="75f17fd0082590f5ee3dbb7b57cad47bebf2d79e" translate="yes" xml:space="preserve">
          <source>To read from a file it must be opened for reading using &lt;code&gt;fopen&lt;/code&gt;. Then a line can be read from the file using &lt;code&gt;fgetl&lt;/code&gt; as the following code illustrates</source>
          <target state="translated">파일에서 읽으려면 &lt;code&gt;fopen&lt;/code&gt; 을 사용하여 읽을 수 있도록 파일을 열어야합니다 . 다음 코드와 같이 &lt;code&gt;fgetl&lt;/code&gt; 을 사용하여 파일에서 행을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5085c740bfbaf7440d1a890d895691fa9de58fb3" translate="yes" xml:space="preserve">
          <source>To remove a colorbar from a plot use any one of the following keywords for the &lt;var&gt;delete_option&lt;/var&gt;: &lt;code&gt;&quot;off&quot;&lt;/code&gt;, &lt;code&gt;&quot;delete&quot;&lt;/code&gt;, &lt;code&gt;&quot;hide&quot;&lt;/code&gt;.</source>
          <target state="translated">플롯 사용에 대한 다음 키워드 중 하나에서 년 Colorbar 제거하려면 &lt;var&gt;delete_option&lt;/var&gt; 를 : &lt;code&gt;&quot;off&quot;&lt;/code&gt; , &lt;code&gt;&quot;delete&quot;&lt;/code&gt; , &lt;code&gt;&quot;hide&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d743f79a41bb1db7c95c070a74d7b5e8aba74853" translate="yes" xml:space="preserve">
          <source>To remove a user-defined default setting, set the default property to the value &lt;code&gt;&quot;remove&quot;&lt;/code&gt;. For example,</source>
          <target state="translated">사용자 정의 기본 설정을 제거하려면 기본 특성을 &lt;code&gt;&quot;remove&quot;&lt;/code&gt; 값으로 설정하십시오 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="05512d2a4465299fffa947cc9ebcb7c5887b636d" translate="yes" xml:space="preserve">
          <source>To report a bug in Octave, submit a bug report to the Octave bug tracker &lt;a href=&quot;https://bugs.octave.org&quot;&gt;https://bugs.octave.org&lt;/a&gt;.</source>
          <target state="translated">Octave에서 버그를보고하려면 Octave 버그 추적기 &lt;a href=&quot;https://bugs.octave.org&quot;&gt;https://bugs.octave.org에&lt;/a&gt; 버그 보고서를 제출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="17facb74e3cc5a2a2bbe9a7e548917415f3859b5" translate="yes" xml:space="preserve">
          <source>To save a plot once it has been displayed on the screen, use the print command. For example,</source>
          <target state="translated">화면에 플롯이 표시되면 플롯을 저장하려면 print 명령을 사용하십시오. 예를 들어</target>
        </trans-unit>
        <trans-unit id="816d1124469611895137e6bb82f1ef139eafc781" translate="yes" xml:space="preserve">
          <source>To save a plot, in one of several image formats such as PostScript or PNG, use the &lt;code&gt;print&lt;/code&gt; command.</source>
          <target state="translated">PostScript 또는 PNG와 같은 여러 이미지 형식 중 하나로 플롯을 저장하려면 &lt;code&gt;print&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1fead3c3bbe617561dea73888cbbb85b773ea5ff" translate="yes" xml:space="preserve">
          <source>To see what functions can be called with an object use &lt;code&gt;methods&lt;/code&gt;. For example, using the previously created &lt;var&gt;dobj&lt;/var&gt;:</source>
          <target state="translated">객체로 어떤 함수를 호출 할 수 있는지 보려면 &lt;code&gt;methods&lt;/code&gt; 사용하십시오 . 예를 들어, 이전에 만든 사용 &lt;var&gt;dobj&lt;/var&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="f8477c93422bf91b5d040582ce2e8c0f82f1bebb" translate="yes" xml:space="preserve">
          <source>To see what is new in the current release of Octave, use the &lt;code&gt;news&lt;/code&gt; function.</source>
          <target state="translated">현재 Octave 릴리스의 새로운 기능을 보려면 &lt;code&gt;news&lt;/code&gt; 기능을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e1c39a78b256b693266f1f88230d33c2a06b1178" translate="yes" xml:space="preserve">
          <source>To see which packages are installed type</source>
          <target state="translated">설치된 패키지를 확인하려면</target>
        </trans-unit>
        <trans-unit id="2cc406ac437288e0ead36df62f635562ea38bc5f" translate="yes" xml:space="preserve">
          <source>To set a breakpoint immediately upon entering a function use line number 1, or omit the line number entirely and just give the function name. When setting the breakpoint Octave will ignore the leading comment block, and the breakpoint will be set on the first executable statement in the function. For example:</source>
          <target state="translated">함수를 입력 할 때 즉시 중단 점을 설정하려면 행 번호 1을 사용하거나 행 번호를 완전히 생략하고 함수 이름 만 지정하십시오. 중단 점을 설정하면 Octave는 선행 주석 블록을 무시하고 중단 점은 함수의 첫 번째 실행 문에서 설정됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f68ca937b3f957db6c96d0fadd4f286aa578829f" translate="yes" xml:space="preserve">
          <source>To set graphics object properties, use the set function. For example,</source>
          <target state="translated">그래픽스 객체 속성을 설정하려면 set 함수를 사용하십시오. 예를 들어</target>
        </trans-unit>
        <trans-unit id="aeea726cf84ea4add8c063071f42f1a60b8e426f" translate="yes" xml:space="preserve">
          <source>To test if an object is a cell array, use the &lt;code&gt;iscell&lt;/code&gt; function. For example:</source>
          <target state="translated">객체가 &lt;code&gt;iscell&lt;/code&gt; 배열인지 테스트하려면 iscell 함수를 사용하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dfef518512cdb20c448529e8fef7b73a48983d9b" translate="yes" xml:space="preserve">
          <source>To test if an object is a string (i.e., a 1xN row vector of characters and not a character matrix) you can use the &lt;code&gt;ischar&lt;/code&gt; function in combination with the &lt;code&gt;isrow&lt;/code&gt; function as in the following example:</source>
          <target state="translated">테스트하는 객체는 문자열 인 경우 (즉, 1xN 행 문자의 벡터가 아닌 문자 매트릭스) 당신이 사용할 수있는 &lt;code&gt;ischar&lt;/code&gt; 와 함께 기능을 &lt;code&gt;isrow&lt;/code&gt; 다음 예제와 같이 기능 :</target>
        </trans-unit>
        <trans-unit id="06f4bcabf8ff9efabc81e5fb11c2c5472459473e" translate="yes" xml:space="preserve">
          <source>To update a single package use &lt;code&gt;pkg install -forge&lt;/code&gt;</source>
          <target state="translated">단일 패키지를 업데이트하려면 &lt;code&gt;pkg install -forge&lt;/code&gt; 를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="05a1df9ce61a15b9290c9fc8342992566656692a" translate="yes" xml:space="preserve">
          <source>To use Publishing Markup, start by typing &amp;lsquo;</source>
          <target state="translated">게시 마크 업을 사용하려면 '</target>
        </trans-unit>
        <trans-unit id="b03e81e2492e8986e936f40a219d6bd3d60a6515" translate="yes" xml:space="preserve">
          <source>To write preformatted code inside a section, indent the code by three spaces after &amp;lsquo;</source>
          <target state="translated">섹션 내부에 미리 형식이 지정된 코드를 작성하려면 '다음에 3 칸씩 코드를 들여 씁니다.</target>
        </trans-unit>
        <trans-unit id="2d6f87382ce9c4f2be73101dd357cd12d2ebdec7" translate="yes" xml:space="preserve">
          <source>To write preformatted text inside a section, indent the code by two spaces after &amp;lsquo;</source>
          <target state="translated">섹션 안에 미리 형식이 지정된 텍스트를 작성하려면 '다음에 공백 두 개를 사용하여 코드를 들여 씁니다.</target>
        </trans-unit>
        <trans-unit id="782a926a7b6def185a7455ea882dfdbff074e7e9" translate="yes" xml:space="preserve">
          <source>Toggle between &lt;code&gt;&quot;hide&quot;&lt;/code&gt; and &lt;code&gt;&quot;show&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;hide&quot;&lt;/code&gt; 와 &lt;code&gt;&quot;show&quot;&lt;/code&gt; 간 전환</target>
        </trans-unit>
        <trans-unit id="6ca6d7a4de5ed7544ab183fa5f74f64b1627ddd9" translate="yes" xml:space="preserve">
          <source>Toggle or set the &lt;code&gt;&quot;hold&quot;&lt;/code&gt; state of the plotting engine which determines whether new graphic objects are added to the plot or replace the existing objects.</source>
          <target state="translated">플로팅 엔진 의 &lt;code&gt;&quot;hold&quot;&lt;/code&gt; 상태를 전환하거나 설정하여 새 그래픽 객체가 플롯에 추가되는지 또는 기존 객체를 교체할지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="851dc22c2287326545098ec89826eb32e0af64de" translate="yes" xml:space="preserve">
          <source>Toggle the current hold state.</source>
          <target state="translated">현재 보류 상태를 토글합니다.</target>
        </trans-unit>
        <trans-unit id="fb33e88b3d8add0fdeb38bd281e1ad17bb760e0f" translate="yes" xml:space="preserve">
          <source>TolFun</source>
          <target state="translated">TolFun</target>
        </trans-unit>
        <trans-unit id="3e8b0b3d2764ec6fe08d04bf930a19bc81402b9a" translate="yes" xml:space="preserve">
          <source>TolX</source>
          <target state="translated">TolX</target>
        </trans-unit>
        <trans-unit id="4bf72a4dfd30c58593093805996071aab781547b" translate="yes" xml:space="preserve">
          <source>Tolerance used to compare the results of expression &lt;var&gt;f&lt;/var&gt; and expression &lt;var&gt;f2&lt;/var&gt;. If &lt;var&gt;tol&lt;/var&gt; is positive, the tolerance is an absolute one. If &lt;var&gt;tol&lt;/var&gt; is negative, the tolerance is a relative one. The default is &lt;code&gt;eps&lt;/code&gt;. If &lt;var&gt;tol&lt;/var&gt; is &lt;code&gt;Inf&lt;/code&gt;, then no comparison will be made.</source>
          <target state="translated">식 &lt;var&gt;f&lt;/var&gt; 와 식 &lt;var&gt;f2&lt;/var&gt; 의 결과를 비교하는 데 사용되는 공차 입니다. 경우 &lt;var&gt;tol&lt;/var&gt; 긍정적이며, 허용 오차는 절대입니다. 경우 &lt;var&gt;tol&lt;/var&gt; 부의 경우, 허용 오차는 상대적이다. 기본값은 &lt;code&gt;eps&lt;/code&gt; 입니다. 경우 &lt;var&gt;tol&lt;/var&gt; 있다 &lt;code&gt;Inf&lt;/code&gt; 를 , 다음 더 비교가 이루어지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f7e6dd42d3873b28ac15971476acd8afd9bfa3cc" translate="yes" xml:space="preserve">
          <source>Tool for building software (&lt;a href=&quot;https://www.gnu.org/software/make&quot;&gt;https://www.gnu.org/software/make&lt;/a&gt;). Octave&amp;rsquo;s build system requires GNU Make. Other versions of Make will not work. Fortunately, GNU Make is highly portable and easy to install.</source>
          <target state="translated">소프트웨어 구축 도구 ( &lt;a href=&quot;https://www.gnu.org/software/make&quot;&gt;https://www.gnu.org/software/make&lt;/a&gt; ) Octave의 빌드 시스템에는 GNU Make가 필요합니다. 다른 버전의 Make는 작동하지 않습니다. 다행스럽게도 GNU Make는 이식성이 뛰어나고 설치가 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="021a88183a84b1b9899c7dda4862aa097ba4f53f" translate="yes" xml:space="preserve">
          <source>Top center of the screen.</source>
          <target state="translated">화면 상단 중앙.</target>
        </trans-unit>
        <trans-unit id="7a6e818e9e728e10f8d8422b38d5140630e8bf57" translate="yes" xml:space="preserve">
          <source>Top left of the screen.</source>
          <target state="translated">화면 왼쪽 상단</target>
        </trans-unit>
        <trans-unit id="c33b724a700895efa54e8c073d666894609960ac" translate="yes" xml:space="preserve">
          <source>Top right of the screen.</source>
          <target state="translated">화면 오른쪽 상단</target>
        </trans-unit>
        <trans-unit id="c2eee3cb2d0afa8c3b1ba022e1db77df29aa739f" translate="yes" xml:space="preserve">
          <source>TotalSamples</source>
          <target state="translated">TotalSamples</target>
        </trans-unit>
        <trans-unit id="985375d93146caa8bf0a799971285d3fee3bd9c0" translate="yes" xml:space="preserve">
          <source>Trailing singleton dimensions are ignored. When called with a single argument, or no argument, &lt;code&gt;size_equal&lt;/code&gt; returns true.</source>
          <target state="translated">후행 싱글 톤 치수는 무시됩니다. 단일 인수로 또는 인수없이 호출하면 &lt;code&gt;size_equal&lt;/code&gt; 은 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="73bb90c8db568738efd87e2d15f12bc0e3e06a59" translate="yes" xml:space="preserve">
          <source>Transform Cartesian coordinates to polar or cylindrical coordinates.</source>
          <target state="translated">직교 좌표를 극좌표 또는 원통형 좌표로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="cb798949844baa1e880cdacf66b5e0ac9391b149" translate="yes" xml:space="preserve">
          <source>Transform Cartesian coordinates to spherical coordinates.</source>
          <target state="translated">직교 좌표를 구형 좌표로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5e3f940647ff7ac908ea6e31b7e04ab14cb6bcf9" translate="yes" xml:space="preserve">
          <source>Transform Groups</source>
          <target state="translated">그룹 변환</target>
        </trans-unit>
        <trans-unit id="37e8f23f296bb5a6967ca279f5d97aa11248498d" translate="yes" xml:space="preserve">
          <source>Transform a colormap or image from HSV to RGB color space.</source>
          <target state="translated">컬러 맵 또는 이미지를 HSV에서 RGB 색 공간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6b0c64543a08785d2ccf22f6aec8740358997ca0" translate="yes" xml:space="preserve">
          <source>Transform a colormap or image from RGB to HSV color space.</source>
          <target state="translated">컬러 맵 또는 이미지를 RGB에서 HSV 색 공간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d433bef3cfcf79c1466ba64b05b482c0df7c8747" translate="yes" xml:space="preserve">
          <source>Transform an image or colormap from red-green-blue (RGB) color space to a grayscale intensity image.</source>
          <target state="translated">이미지 또는 컬러 맵을 RGB (Red-Green-Blue) 색 공간에서 회색조 강도 이미지로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="fe3bb8bbc59ab7a56f1037ac1aded6108aaa7f84" translate="yes" xml:space="preserve">
          <source>Transform polar or cylindrical coordinates to Cartesian coordinates.</source>
          <target state="translated">극좌표 또는 원통형 좌표를 직교 좌표로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e6f1b70c8c353a3361c81d63929dd38c046eef5c" translate="yes" xml:space="preserve">
          <source>Transform spherical coordinates to Cartesian coordinates.</source>
          <target state="translated">구면 좌표를 직교 좌표로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="62dd106cf4c734fa50e4399a18930d15377ea584" translate="yes" xml:space="preserve">
          <source>Translate a string for use in a regular expression.</source>
          <target state="translated">정규식에 사용할 문자열을 번역하십시오.</target>
        </trans-unit>
        <trans-unit id="03980bc3bccb3a8dcac5ae14d66c32f78a0b28c7" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for axes objects. &lt;code&gt;alim&lt;/code&gt; is unused.</source>
          <target state="translated">좌표축 개체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;alim&lt;/code&gt; 은 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8eb0059c6c53112f3ca2dbee367b914928b98ea1" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for axes objects. &lt;code&gt;gridalpha&lt;/code&gt; is unused.</source>
          <target state="translated">좌표축 개체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;gridalpha&lt;/code&gt; 는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0efe4e89fc7bba0bb1657f4ec6d3582896fa58e1" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for axes objects. &lt;code&gt;minorgridalpha&lt;/code&gt; is unused.</source>
          <target state="translated">좌표축 개체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;minorgridalpha&lt;/code&gt; 는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="43e6a57e55a28b72286174f1f34617c4003d19d3" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for figure objects. &lt;code&gt;alphamap&lt;/code&gt; is unused.</source>
          <target state="translated">그림 개체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;alphamap&lt;/code&gt; 이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5625c719816061d79da45f3b0e010b39e0dff225" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for image objects. &lt;code&gt;alphadata&lt;/code&gt; is unused.</source>
          <target state="translated">이미지 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;alphadata&lt;/code&gt; 는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bf67f864341b16ca99016febfc01322338f64708" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for image objects. &lt;code&gt;alphadatamapping&lt;/code&gt; is unused.</source>
          <target state="translated">이미지 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;alphadatamapping&lt;/code&gt; 이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3377fc1557c160519ba79eb226992c1016a2a820" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for patch objects. &lt;code&gt;alphadatamapping&lt;/code&gt; is unused.</source>
          <target state="translated">패치 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;alphadatamapping&lt;/code&gt; 이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d8fc611db8da702d0342f0b01e229e24d08276db" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for patch objects. &lt;code&gt;edgealpha&lt;/code&gt; is unused.</source>
          <target state="translated">패치 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;edgealpha&lt;/code&gt; 는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0c2637437fde178f67a4f27f4a420301bfcb4a39" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for patch objects. &lt;code&gt;facevertexalphadata&lt;/code&gt; is unused.</source>
          <target state="translated">패치 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;facevertexalphadata&lt;/code&gt; 는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d18b4bbff06b1c99bd898b415a7a8bc57b08d62" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for surface objects. &lt;code&gt;alphadata&lt;/code&gt; is unused.</source>
          <target state="translated">표면 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;alphadata&lt;/code&gt; 는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f79b7f9657d75f5b6b575d6e9ef67a20d306478e" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for surface objects. &lt;code&gt;alphadatamapping&lt;/code&gt; is unused.</source>
          <target state="translated">표면 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;alphadatamapping&lt;/code&gt; 이 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b10d7cc4160e1c679a3e5251fc31b55a97d82b86" translate="yes" xml:space="preserve">
          <source>Transparency is not yet implemented for surface objects. &lt;code&gt;edgealpha&lt;/code&gt; is unused.</source>
          <target state="translated">표면 객체에 대해서는 아직 투명도가 구현되지 않았습니다. &lt;code&gt;edgealpha&lt;/code&gt; 는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f3c1b72e3670f9ba3a8b60d508526cfeed5575f9" translate="yes" xml:space="preserve">
          <source>Transparency level of the faces of the patch object. Only double values are supported at present where a value of 0 means complete transparency and a value of 1 means solid faces without transparency. Setting the property to &lt;code&gt;&quot;flat&quot;&lt;/code&gt; or &lt;code&gt;&quot;interp&quot;&lt;/code&gt; causes the faces to not being rendered. Additionally, the faces are not sorted from back to front which might lead to unexpected results when rendering layered transparent faces.</source>
          <target state="translated">패치 객체면의 투명도 수준입니다. 값이 0이면 완전한 투명도를 의미하고 값이 1이면 투명도가없는 솔리드면을 의미하는 이중 값만 지원됩니다. 속성을 &lt;code&gt;&quot;flat&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;interp&quot;&lt;/code&gt; 로 설정 로 설정하면면이 렌더링되지 않습니다. 또한면은 앞뒤로 정렬되지 않으므로 레이어가있는 투명한면을 렌더링 할 때 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b109d14c772c6ab87d4489d96f23e580fc2e5eee" translate="yes" xml:space="preserve">
          <source>Transparency level of the faces of the surface object. Only double values are supported at present where a value of 0 means complete transparency and a value of 1 means solid faces without transparency. Setting the property to &lt;code&gt;&quot;flat&quot;&lt;/code&gt;, &lt;code&gt;&quot;interp&quot;&lt;/code&gt; or &lt;code&gt;&quot;texturemap&quot;&lt;/code&gt; causes the faces to not being rendered. Additionally, the faces are not sorted from back to front which might lead to unexpected results when rendering layered transparent faces.</source>
          <target state="translated">표면 객체의면의 투명도 수준입니다. 값이 0이면 완전한 투명도를 의미하고 값이 1이면 투명도가없는 솔리드면을 의미하는 이중 값만 지원됩니다. 속성을 &lt;code&gt;&quot;flat&quot;&lt;/code&gt; , &lt;code&gt;&quot;interp&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;texturemap&quot;&lt;/code&gt; 으로 설정하면면이 렌더링되지 않습니다. 또한면은 앞뒤로 정렬되지 않으므로 레이어가있는 투명한면을 렌더링 할 때 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa257429d8539a08df2ef78919507d4169cac2c8" translate="yes" xml:space="preserve">
          <source>Transpose</source>
          <target state="translated">Transpose</target>
        </trans-unit>
        <trans-unit id="5aac140fd36da4e5820d9b69c3d2eadc3ed127c5" translate="yes" xml:space="preserve">
          <source>Transpose.</source>
          <target state="translated">Transpose.</target>
        </trans-unit>
        <trans-unit id="c6f1bb9ad85fdf4c969e94ae6fd19f8e89a9a439" translate="yes" xml:space="preserve">
          <source>Treat a series of consecutive delimiters, without whitespace in between, as a single delimiter. Consecutive delimiter series need not be vertically &lt;code&gt;&quot;aligned&quot;&lt;/code&gt;.</source>
          <target state="translated">공백없이 일련의 연속 구분 기호를 단일 구분 기호로 취급하십시오. 연속적인 분리 문자 계열은 수직으로 &lt;code&gt;&quot;aligned&quot;&lt;/code&gt; 될 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="340f8a1eabb50f94aade40ea1c2d51db10294b4b" translate="yes" xml:space="preserve">
          <source>Treat single occurrences (surrounded by delimiters or whitespace) of the string(s) in &lt;var&gt;value&lt;/var&gt; as missing values.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 에서 문자열의 단일 발생 (구분 기호 또는 공백으로 묶음)을 결 측값으로 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="65e79e90951a33ef74a7c0218c7a227712201c03" translate="yes" xml:space="preserve">
          <source>Triangular factor R from the QR decomposition.</source>
          <target state="translated">QR 분해의 삼각 계수 R</target>
        </trans-unit>
        <trans-unit id="89225146f512abd9863323c7f96ee652306f95de" translate="yes" xml:space="preserve">
          <source>Trigonometry</source>
          <target state="translated">Trigonometry</target>
        </trans-unit>
        <trans-unit id="476a3279e92ac61227a751a7f22112e4f00a93d6" translate="yes" xml:space="preserve">
          <source>Trouble</source>
          <target state="translated">Trouble</target>
        </trans-unit>
        <trans-unit id="513425e03d675823b21a620a61823652c522f64d" translate="yes" xml:space="preserve">
          <source>True and false values are assigned a value of 0 and 1 respectively.</source>
          <target state="translated">참과 거짓 값에는 각각 0과 1의 값이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="e9814baf733d0337fce5dc37f10452eea9f57e66" translate="yes" xml:space="preserve">
          <source>True for characters that are alphabetic (letters).</source>
          <target state="translated">알파벳 (문자) 인 문자에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="88bc37774b0679094e58c0f04cb2b9e085dbef61" translate="yes" xml:space="preserve">
          <source>True for characters that are alphabetic or digits.</source>
          <target state="translated">알파벳 또는 숫자 인 문자에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="754ead1293725d83a240f0cce5d5b111fc74812c" translate="yes" xml:space="preserve">
          <source>True for characters that are in the range of ASCII encoding.</source>
          <target state="translated">ASCII 인코딩 범위에있는 문자에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="3b9996ab2a5885f0988d412e6f4068ea4d1f50d7" translate="yes" xml:space="preserve">
          <source>True for control characters.</source>
          <target state="translated">제어 문자에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="1ef7b4145ced15b3415a7d5c626c69f161ff77cf" translate="yes" xml:space="preserve">
          <source>True for decimal digits (0-9).</source>
          <target state="translated">10 진수 (0-9)의 경우 true입니다.</target>
        </trans-unit>
        <trans-unit id="765e00e38c1350f7cc90003c1cebf6e674d63502" translate="yes" xml:space="preserve">
          <source>True for hexadecimal digits (a-fA-F0-9).</source>
          <target state="translated">16 진수 (a-fA-F0-9)에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="195284cd3453c77eeddb923ea4f9813668f36865" translate="yes" xml:space="preserve">
          <source>True for lowercase letters.</source>
          <target state="translated">소문자에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="e30d65db3ede6cb6ab591df74af6449ffc993a16" translate="yes" xml:space="preserve">
          <source>True for printing characters except space.</source>
          <target state="translated">공백을 제외한 문자를 인쇄 할 때 적합합니다.</target>
        </trans-unit>
        <trans-unit id="35d72887027ba8e9841928cc7199cf30ee480385" translate="yes" xml:space="preserve">
          <source>True for printing characters including space.</source>
          <target state="translated">공백을 포함한 문자를 인쇄 할 때 적합합니다.</target>
        </trans-unit>
        <trans-unit id="e2b45c0faa10e894b23b216c8f8ae1efba3fe891" translate="yes" xml:space="preserve">
          <source>True for punctuation characters (printing characters except space or letter or digit).</source>
          <target state="translated">문장 부호 문자 (공백 또는 문자 또는 숫자를 제외한 문자 인쇄)에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="16121af0eb6c5e5a29e455b188175495b8b7a429" translate="yes" xml:space="preserve">
          <source>True for uppercase letters.</source>
          <target state="translated">대문자에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="89f99c6915ee6a7ed35c685fe0b1a0d2a23e76d7" translate="yes" xml:space="preserve">
          <source>True for whitespace characters (space, formfeed, newline, carriage return, tab, vertical tab).</source>
          <target state="translated">공백 문자 (공백, 용지 공급, 줄 바꿈, 캐리지 리턴, 탭, 세로 탭)에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="6574a7b23d2506b69e0a196c0869b02f11b640b2" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is a directory.</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 디렉토리 이면 참 입니다.</target>
        </trans-unit>
        <trans-unit id="362c61fbb1eb2bf1168feb34f97296a6898358df" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is a hidden file (Windows).</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 숨겨진 파일 인 경우 참입니다 (Windows).</target>
        </trans-unit>
        <trans-unit id="a477aa3c04827360b7d61b405b7bab7ab905dfe3" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is a system file (Windows).</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 시스템 파일 인 경우 참입니다 (Windows).</target>
        </trans-unit>
        <trans-unit id="ae5184508c9e79234f15f2c785c5e6b3c4961c57" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;file&lt;/var&gt; is an archive (Windows).</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt; 이 아카이브 인 경우 참입니다 (Windows).</target>
        </trans-unit>
        <trans-unit id="4040a30e389464b000b73f86aa334ed994d5e421" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 가 &lt;var&gt;y&lt;/var&gt; 와 같으면 참 입니다.</target>
        </trans-unit>
        <trans-unit id="48019603bf1b6957588ab398ab832073c7831c9a" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is greater than &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 가 &lt;var&gt;y&lt;/var&gt; 보다 크면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="0b48c57a409a55efbccb5833fc5f99c0614dfc96" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is greater than or equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 가 &lt;var&gt;y&lt;/var&gt; 보다 크거나 같으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="5c691d4f0433fd593fe19f505ff9e37d46ccf6f7" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is less than &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 가 &lt;var&gt;y&lt;/var&gt; 보다 작은 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="95dfe10f0b556b8b28a9af2dd86c5651fdc5a338" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is less than or equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 가 &lt;var&gt;y&lt;/var&gt; 보다 작거나 같은 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="a8ef19b588be27e33f0ecf773475e0219f826569" translate="yes" xml:space="preserve">
          <source>True if &lt;var&gt;x&lt;/var&gt; is not equal to &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 가 &lt;var&gt;y&lt;/var&gt; 와 같지 않으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="cb07b12b13498ac5927c2d36166704c1df3f3de1" translate="yes" xml:space="preserve">
          <source>True if name is a directory.</source>
          <target state="translated">이름이 디렉토리이면 참입니다.</target>
        </trans-unit>
        <trans-unit id="f56fdd2e459690b0714be72bfd0f84bf3c33d440" translate="yes" xml:space="preserve">
          <source>True if the user (group; other users) has execute permission for &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="translated">사용자 (그룹; 다른 사용자)가 &lt;var&gt;file&lt;/var&gt; 에 대한 실행 권한을 가지고 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="5f96bf948a773513bff7cc39fdef990326aff975" translate="yes" xml:space="preserve">
          <source>True if the user (group; other users) has read permission for &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="translated">사용자 (그룹; 다른 사용자)에게 &lt;var&gt;file&lt;/var&gt; 에 대한 읽기 권한이있는 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="c61c9a07e89854384ce7600c3212784a9f262228" translate="yes" xml:space="preserve">
          <source>True if the user (group; other users) has write permission for &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="translated">사용자 (그룹; 다른 사용자)가 &lt;var&gt;file&lt;/var&gt; 에 대한 쓰기 권한을 가지고 있으면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="e6fe70740b6c0b7c2135045faba80f6be500ede0" translate="yes" xml:space="preserve">
          <source>Truncate fractional portion of &lt;var&gt;x&lt;/var&gt; and return the integer portion.</source>
          <target state="translated">&lt;var&gt;x&lt;/var&gt; 의 소수 부분을 자르고 정수 부분을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="4bce8a252db3c52d9712f9d58ff45256a4781e7c" translate="yes" xml:space="preserve">
          <source>Truncate the character string &lt;var&gt;s&lt;/var&gt; to length &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="translated">문자열 &lt;var&gt;s&lt;/var&gt; 를 길이 &lt;var&gt;n&lt;/var&gt; 으로 자릅니다 .</target>
        </trans-unit>
        <trans-unit id="a1c84009570e834bc385a529ddbbd3e7e7403540" translate="yes" xml:space="preserve">
          <source>Try &lt;code&gt;demo humps&lt;/code&gt; to see a plot of the &lt;code&gt;humps&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;humps&lt;/code&gt; 기능 의 플롯을 보려면 &lt;code&gt;demo humps&lt;/code&gt; 를 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="720d8d86151cd903f03d39e74f04335c962274e2" translate="yes" xml:space="preserve">
          <source>Try to make your bug report self-contained. If we have to ask you for more information, it is best if you include all the previous information in your response, as well as the information that was missing.</source>
          <target state="translated">버그 보고서를 독립적으로 만드십시오. 추가 정보를 요청해야하는 경우 누락 된 정보뿐만 아니라 이전의 모든 정보를 응답에 포함시키는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="529541bb390c76152e313351d89de3cd30a1c4bd" translate="yes" xml:space="preserve">
          <source>Tue</source>
          <target state="translated">Tue</target>
        </trans-unit>
        <trans-unit id="42e43b612a5dfae57ddf5929f0fb945ae83cbf61" translate="yes" xml:space="preserve">
          <source>Tuesday</source>
          <target state="translated">Tuesday</target>
        </trans-unit>
        <trans-unit id="26da77a3b5d6276683e184048e1d3bb94557d77e" translate="yes" xml:space="preserve">
          <source>Turn off linking</source>
          <target state="translated">연결 해제</target>
        </trans-unit>
        <trans-unit id="e02fb26e189ff5304b60504b8fa86dfec64deea2" translate="yes" xml:space="preserve">
          <source>Turn on verbose output.</source>
          <target state="translated">상세 출력을 켭니다.</target>
        </trans-unit>
        <trans-unit id="b8639bbd522580f1f3da1eae390925659141fb86" translate="yes" xml:space="preserve">
          <source>Turn output pagination on or off.</source>
          <target state="translated">출력 페이지 매김을 켜거나 끕니다.</target>
        </trans-unit>
        <trans-unit id="5bcc224aee2cb21fbac23a180b7fa6d6741a2868" translate="yes" xml:space="preserve">
          <source>Turn tick labels off for all axes.</source>
          <target state="translated">모든 축에 대해 눈금 레이블을 끕니다.</target>
        </trans-unit>
        <trans-unit id="b8e9407e307969ed38aaf00fe6663f9e11cde214" translate="yes" xml:space="preserve">
          <source>Turn tick labels on for all axes, or turn them on for the specified axes and off for the remainder.</source>
          <target state="translated">모든 축에 눈금 레이블을 설정하거나 지정된 축에 대해 눈금 레이블을 설정하고 나머지 축에 대해서는 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="578be54e22aaba9aaf2ef686c2f9442a992995cd" translate="yes" xml:space="preserve">
          <source>Turn tick marks on for all axes, or turn them on for the specified axes and off for the remainder.</source>
          <target state="translated">모든 축에 눈금 표시를 설정하거나 지정된 축에 대해 눈금 표시를 설정하고 나머지 축에 대해서는 해제합니다.</target>
        </trans-unit>
        <trans-unit id="37900a5dd13430b19eed55c998696c2face16a2f" translate="yes" xml:space="preserve">
          <source>Turn warnings identified by &lt;var&gt;id&lt;/var&gt; into errors and optionally return their previous state &lt;var&gt;stout&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;id&lt;/var&gt; 로 식별 된 경고 를 오류로 바꾸고 선택적으로 이전 상태 &lt;var&gt;stout&lt;/var&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9b0e89b43c695591eb4d828f81a3d74510c7f6df" translate="yes" xml:space="preserve">
          <source>Two different &lt;var&gt;style&lt;/var&gt;s are available for displaying the &lt;var&gt;cmap&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;cmap&lt;/var&gt; 표시를 위해 두 가지 &lt;var&gt;style&lt;/var&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a6abc063d19a6ae560ab051ead276b24ebf2870" translate="yes" xml:space="preserve">
          <source>Two element range</source>
          <target state="translated">두 가지 요소 범위</target>
        </trans-unit>
        <trans-unit id="9e2df59fae088f606b5b80ba9dea5ba90e049511" translate="yes" xml:space="preserve">
          <source>Two permutation matrices can be multiplied or divided (if their sizes match), performing a composition of permutations. Also a permutation matrix can be indexed by a permutation vector (or two vectors), giving again a permutation matrix. Any other operations do not generally yield a permutation matrix and will thus trigger the implicit conversion.</source>
          <target state="translated">두 개의 순열 행렬을 곱하거나 나누거나 (크기가 일치하는 경우) 순열을 구성 할 수 있습니다. 또한 순열 행렬은 순열 벡터 (또는 2 개의 벡터)에 의해 인덱싱되어 순열 행렬을 다시 제공 할 수있다. 다른 연산은 일반적으로 순열 행렬을 생성하지 않으므로 암시 적 변환을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="2c7d7d1d216a7c5ada3740cac522d8a85f742c56" translate="yes" xml:space="preserve">
          <source>Two-Dimensional Plots</source>
          <target state="translated">2 차원 도표</target>
        </trans-unit>
        <trans-unit id="b36dc04d70113568275e2e03d274fe32d8dc2552" translate="yes" xml:space="preserve">
          <source>Two-digit year</source>
          <target state="translated">두 자리 연도</target>
        </trans-unit>
        <trans-unit id="f4bb9b2a28a8551bb1e1fd6ef195ff40e88c5225" translate="yes" xml:space="preserve">
          <source>Two-dimensional Function Plotting</source>
          <target state="translated">2 차원 함수 플로팅</target>
        </trans-unit>
        <trans-unit id="e79a3b187e1931882e00955f72a4645fecbbabea" translate="yes" xml:space="preserve">
          <source>Two-dimensional Geometric Shapes</source>
          <target state="translated">2 차원 기하 도형</target>
        </trans-unit>
        <trans-unit id="d2b642896980c2e36603d2bb0955bcc4bad32308" translate="yes" xml:space="preserve">
          <source>Two-dimensional interpolation.</source>
          <target state="translated">2 차원 보간.</target>
        </trans-unit>
        <trans-unit id="fdcb67de975c894f0cdda0662d3bde38721b92fc" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[2Dlen 3Dlen]&lt;/code&gt; specifying the length of the tickmarks relative to the longest visible axis.</source>
          <target state="translated">가장 긴 가시 축을 기준으로 눈금 표시의 길이를 지정하는 요소를 2 개 가진 벡터 &lt;code&gt;[2Dlen 3Dlen]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cb137eb6380c82f86e625ebeaee7595c879942b5" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[azimuth elevation]&lt;/code&gt; specifying the viewpoint for three-dimensional plots</source>
          <target state="translated">3 차원 플롯에 대한 관측점을 지정하는 요소를 2 개 가진 벡터 &lt;code&gt;[azimuth elevation]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02f30c43b9c2dc2e2a75efeebc1d714e4f4bac98" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[xfirst xlast]&lt;/code&gt; specifying the x coordinates of the centers of the first and last columns of the image.</source>
          <target state="translated">이미지의 첫 번째 열과 마지막 열의 중심 x 좌표를 지정하는 요소를 2 개 가진 벡터 &lt;code&gt;[xfirst xlast]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="527f40f75707ed523f358c7e30a64e37ff733101" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[xmin xmax]&lt;/code&gt; specifying the limits for the x-axis. Setting &lt;code&gt;xlim&lt;/code&gt; also forces the &lt;code&gt;xlimmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;. See &lt;a href=&quot;axis-configuration#XREFxlim&quot;&gt;xlim function&lt;/a&gt;.</source>
          <target state="translated">x 축의 한계를 지정하는 요소를 2 개 가진 벡터 &lt;code&gt;[xmin xmax]&lt;/code&gt; 입니다. &lt;code&gt;xlim&lt;/code&gt; 을 설정 하면 &lt;code&gt;xlimmode&lt;/code&gt; 속성이 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 로 설정됩니다 . &lt;a href=&quot;axis-configuration#XREFxlim&quot;&gt;xlim 함수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f030a454788025bc9a365072ff3e068167655b7" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[yfirst ylast]&lt;/code&gt; specifying the y coordinates of the centers of the first and last rows of the image.</source>
          <target state="translated">이미지의 첫 번째 행과 마지막 행의 중심의 y 좌표를 지정하는 요소를 2 개 가진 벡터 &lt;code&gt;[yfirst ylast]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ef6d7668ef9eb14a983f03ed252c5aa8b5d22940" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[ymin ymax]&lt;/code&gt; specifying the limits for the y-axis. Setting &lt;code&gt;ylim&lt;/code&gt; also forces the &lt;code&gt;ylimmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;. See &lt;a href=&quot;axis-configuration#XREFylim&quot;&gt;ylim function&lt;/a&gt;.</source>
          <target state="translated">y 축의 한계를 지정하는 요소를 2 개 가진 벡터 &lt;code&gt;[ymin ymax]&lt;/code&gt; 입니다. &lt;code&gt;ylim&lt;/code&gt; 을 설정 하면 &lt;code&gt;ylimmode&lt;/code&gt; 속성이 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 로 설정됩니다 . &lt;a href=&quot;axis-configuration#XREFylim&quot;&gt;ylim 기능을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a15479a5f1f50599fa910cbfaec50ac567e7679" translate="yes" xml:space="preserve">
          <source>Two-element vector &lt;code&gt;[zmin zmaz]&lt;/code&gt; specifying the limits for the z-axis. Setting &lt;code&gt;zlim&lt;/code&gt; also forces the &lt;code&gt;zlimmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;. See &lt;a href=&quot;axis-configuration#XREFzlim&quot;&gt;zlim function&lt;/a&gt;.</source>
          <target state="translated">z 축의 한계를 지정하는 요소를 2 개 가진 벡터 &lt;code&gt;[zmin zmaz]&lt;/code&gt; 입니다. &lt;code&gt;zlim&lt;/code&gt; 을 설정 하면 &lt;code&gt;zlimmode&lt;/code&gt; 속성이 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 로 설정됩니다 . &lt;a href=&quot;axis-configuration#XREFzlim&quot;&gt;zlim 함수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="e505d82596690256605fb5ee75e0ac61c0cc9de2" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;demo tetramesh&lt;/code&gt; to see examples on using &lt;code&gt;tetramesh&lt;/code&gt;.</source>
          <target state="translated">입력 &lt;code&gt;demo tetramesh&lt;/code&gt; 사용에 대한 예를 볼 수 &lt;code&gt;tetramesh&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="7b42d081b224ffaca6767c757779426eeaeb3323" translate="yes" xml:space="preserve">
          <source>Type of factorization.</source>
          <target state="translated">인수 분해 유형.</target>
        </trans-unit>
        <trans-unit id="339ff9d749a6625fac574198f87913d71eedb702" translate="yes" xml:space="preserve">
          <source>Type of the function.</source>
          <target state="translated">기능의 유형.</target>
        </trans-unit>
        <trans-unit id="0c6bad9ffc74961e0a71f96d77fb9e12fb47f331" translate="yes" xml:space="preserve">
          <source>Typecast a hexadecimal character array or cell array of strings to an array of numbers.</source>
          <target state="translated">16 진 문자형 배열 또는 문자열의 셀형 배열을 숫자 형 배열로 타입 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="0d5826d4a0483e959dfbc05bebcd563ad3fd2259" translate="yes" xml:space="preserve">
          <source>TypicalX</source>
          <target state="translated">TypicalX</target>
        </trans-unit>
        <trans-unit id="20111781c8f81f71d9e54b22fab8055128111833" translate="yes" xml:space="preserve">
          <source>Typically only the magnitude data &lt;var&gt;y&lt;/var&gt; is present in which case &lt;var&gt;x&lt;/var&gt; is taken to be the range &lt;code&gt;1 : length (&lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;. If &lt;var&gt;x&lt;/var&gt; is given it may be a string array, a cell array of strings, or a numerical vector.</source>
          <target state="translated">일반적으로 크기 데이터 &lt;var&gt;y&lt;/var&gt; 만 존재하며,이 경우 &lt;var&gt;x&lt;/var&gt; 는 &lt;code&gt;1 : length (&lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 범위로 간주 됩니다. 경우 &lt;var&gt;x&lt;/var&gt; 주어진다는 문자열 배열, 스트링의 셀 어레이, 숫자 또는 벡터 일 수있다.</target>
        </trans-unit>
        <trans-unit id="8d94d680baf9c48041367a9822f6e804902b8773" translate="yes" xml:space="preserve">
          <source>Typing in a function at the command prompt.</source>
          <target state="translated">명령 프롬프트에서 함수를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="85ef7b3eed88b2f45d813168d5ef3c1597e87ad6" translate="yes" xml:space="preserve">
          <source>UHESS</source>
          <target state="translated">UHESS</target>
        </trans-unit>
        <trans-unit id="828b5505ff4402471cfbb7fe32a6613ec912c004" translate="yes" xml:space="preserve">
          <source>UI Elements</source>
          <target state="translated">UI 요소</target>
        </trans-unit>
        <trans-unit id="1726b1b17e8f6d8ddea9cfc4af226dd6b4e3233a" translate="yes" xml:space="preserve">
          <source>URL Manipulation</source>
          <target state="translated">URL 조작</target>
        </trans-unit>
        <trans-unit id="a7439191c89664de7a10466c332328c275669705" translate="yes" xml:space="preserve">
          <source>UT</source>
          <target state="translated">UT</target>
        </trans-unit>
        <trans-unit id="fac2ff66572220e192befaa230c070ee0bbb4720" translate="yes" xml:space="preserve">
          <source>Uibuttongroup Properties</source>
          <target state="translated">UI 단추 속성</target>
        </trans-unit>
        <trans-unit id="9546f3bf223bafac33c155ec0b7f04ff27d98627" translate="yes" xml:space="preserve">
          <source>Uicontextmenu Properties</source>
          <target state="translated">Uicontextmenu 속성</target>
        </trans-unit>
        <trans-unit id="2c4f441186f82c356a04f87f995210c8104dbdb2" translate="yes" xml:space="preserve">
          <source>Uicontextmenu properties are documented at &lt;a href=&quot;uicontextmenu-properties#Uicontextmenu-Properties&quot;&gt;Uicontextmenu Properties&lt;/a&gt;.</source>
          <target state="translated">Uicontextmenu의 특성에 설명되어 있습니다 &lt;a href=&quot;uicontextmenu-properties#Uicontextmenu-Properties&quot;&gt;Uicontextmenu 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="093bab7c3746dcd0de92f6769cd0e092854e9520" translate="yes" xml:space="preserve">
          <source>Uicontrol Properties</source>
          <target state="translated">Uicontrol 속성</target>
        </trans-unit>
        <trans-unit id="8a6d49bea4230f99be4cd116e7030509e4fae408" translate="yes" xml:space="preserve">
          <source>Uimenu Properties</source>
          <target state="translated">UI 메뉴 속성</target>
        </trans-unit>
        <trans-unit id="316cf62a863e6622de4d6644c1c5aaf270b5071c" translate="yes" xml:space="preserve">
          <source>Uipanel Properties</source>
          <target state="translated">Uipanel 속성</target>
        </trans-unit>
        <trans-unit id="7322c2a424766118f5a3ee0e87f99d4e60a371b9" translate="yes" xml:space="preserve">
          <source>Uipanel properties are documented at &lt;a href=&quot;uipanel-properties#Uipanel-Properties&quot;&gt;Uipanel Properties&lt;/a&gt;.</source>
          <target state="translated">Uipanel의 특성에 설명되어 있습니다 &lt;a href=&quot;uipanel-properties#Uipanel-Properties&quot;&gt;Uipanel 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93d29997f57b94cd7daa0a1f1a6783168635b6a7" translate="yes" xml:space="preserve">
          <source>Uipushtool Properties</source>
          <target state="translated">Uipushtool 속성</target>
        </trans-unit>
        <trans-unit id="87f4432ed30de2250b830d86d67ce07811081f9f" translate="yes" xml:space="preserve">
          <source>Uipushtool properties are documented at &lt;a href=&quot;uipushtool-properties#Uipushtool-Properties&quot;&gt;Uipushtool Properties&lt;/a&gt;.</source>
          <target state="translated">Uipushtool의 특성에 설명되어 있습니다 &lt;a href=&quot;uipushtool-properties#Uipushtool-Properties&quot;&gt;Uipushtool 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1257b4dc5403661c5a839fe358738f7630c41ed" translate="yes" xml:space="preserve">
          <source>Uitable Properties</source>
          <target state="translated">Uitable 속성</target>
        </trans-unit>
        <trans-unit id="4017aac152db9643d92b0f41138fdb73a25e436a" translate="yes" xml:space="preserve">
          <source>Uitoggletool Properties</source>
          <target state="translated">Uitoggletool 속성</target>
        </trans-unit>
        <trans-unit id="d0f5e9b710586ca45e0a4822dee412100f3f5eb8" translate="yes" xml:space="preserve">
          <source>Uitoggletool properties are documented at &lt;a href=&quot;uitoggletool-properties#Uitoggletool-Properties&quot;&gt;Uitoggletool Properties&lt;/a&gt;.</source>
          <target state="translated">Uitoggletool의 특성에 설명되어 있습니다 &lt;a href=&quot;uitoggletool-properties#Uitoggletool-Properties&quot;&gt;Uitoggletool 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="918659e41c78a7fa55ad1176dab48339fded69c2" translate="yes" xml:space="preserve">
          <source>Uitoolbar Properties</source>
          <target state="translated">UI 툴바 속성</target>
        </trans-unit>
        <trans-unit id="d6cd9102e9400a50f6d9222f0b8e78dbdc58e9d0" translate="yes" xml:space="preserve">
          <source>Uitoolbar properties are documented at &lt;a href=&quot;uitoolbar-properties#Uitoolbar-Properties&quot;&gt;Uitoolbar Properties&lt;/a&gt;.</source>
          <target state="translated">Uitoolbar 특성에 설명되어 있습니다 &lt;a href=&quot;uitoolbar-properties#Uitoolbar-Properties&quot;&gt;Uitoolbar 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="967e229462f186ba40b09901daf0c8b11dc42d86" translate="yes" xml:space="preserve">
          <source>Unary addition</source>
          <target state="translated">단항 추가</target>
        </trans-unit>
        <trans-unit id="7764c45e364f87d6b4cbbd353a8db14125b6ae0a" translate="yes" xml:space="preserve">
          <source>Unary plus. This operator has no effect on the operand.</source>
          <target state="translated">단항 플러스. 이 연산자는 피연산자에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="394608ecc0b81513d7ec644fcd3a5bb32e2fc685" translate="yes" xml:space="preserve">
          <source>Unary subtraction</source>
          <target state="translated">단항 빼기</target>
        </trans-unit>
        <trans-unit id="7053c3c9630696c02fef74f3fb0fea9e0aa3856c" translate="yes" xml:space="preserve">
          <source>Under the null, LM approximately has a chisquare distribution with &lt;var&gt;p&lt;/var&gt; degrees of freedom and &lt;var&gt;pval&lt;/var&gt; is the &lt;em&gt;p&lt;/em&gt;-value (1 minus the CDF of this distribution at LM) of the test.</source>
          <target state="translated">널 (null)에서 LM은 대략 &lt;var&gt;p&lt;/var&gt; 자유도를 &lt;var&gt;pval&lt;/var&gt; 분포를 가지며 pval 은 검정 의 &lt;em&gt;p-&lt;/em&gt; 값 (1에서 LM에서이 분포의 CDF를 뺀 값)입니다.</target>
        </trans-unit>
        <trans-unit id="af4b3f21c25f80c43bdb2f7aba91d185863d8751" translate="yes" xml:space="preserve">
          <source>Undo all changes made to this line. This is like typing the &amp;lsquo;undo&amp;rsquo; command enough times to get back to the beginning.</source>
          <target state="translated">이 줄의 모든 변경 사항을 취소하십시오. 이것은 'undo'명령을 입력하여 처음으로 돌아갈 수있는 시간과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3473f776025ef87402164587c0c6d527a9bf6c29" translate="yes" xml:space="preserve">
          <source>Undo the action of the &lt;code&gt;fftshift&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;fftshift&lt;/code&gt; 기능 의 작업을 취소하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b9ad1e6d2255ad844f522eaf9aae703b9ae00ae" translate="yes" xml:space="preserve">
          <source>Undo the last action. You can undo all the way back to an empty line.</source>
          <target state="translated">마지막 동작을 취소하십시오. 빈 줄로 되돌릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5305cf0fc7c1c3a7538f85014bb0870bf475309" translate="yes" xml:space="preserve">
          <source>Undocumented output</source>
          <target state="translated">문서화되지 않은 출력</target>
        </trans-unit>
        <trans-unit id="bd1cd578f352b9fb0ada8bdc1cb83a4ff6ab7c50" translate="yes" xml:space="preserve">
          <source>Undocumented.</source>
          <target state="translated">Undocumented.</target>
        </trans-unit>
        <trans-unit id="eac6722ddd55a8b7172d57779e8d8370c018d66b" translate="yes" xml:space="preserve">
          <source>Uniform Distribution</source>
          <target state="translated">균등 분포</target>
        </trans-unit>
        <trans-unit id="d4fe6de72881468e19ecbcccb86833501bd8312c" translate="yes" xml:space="preserve">
          <source>Uniform Distribution (integers)</source>
          <target state="translated">균일 분포 (정수)</target>
        </trans-unit>
        <trans-unit id="8dfbfa51f9a9b3175fe5101b0d9f46b7d475fe1d" translate="yes" xml:space="preserve">
          <source>Uninstall named packages. For example,</source>
          <target state="translated">명명 된 패키지를 제거합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="4c0b8e3c14bad2ddacb97a98e18c0761fe529fbe" translate="yes" xml:space="preserve">
          <source>Units of image resolution. Value is &lt;code&gt;&quot;Inch&quot;&lt;/code&gt;, &lt;code&gt;&quot;Centimeter&quot;&lt;/code&gt;, or &lt;code&gt;&quot;undefined&quot;&lt;/code&gt;.</source>
          <target state="translated">이미지 해상도 단위. 값은 &lt;code&gt;&quot;Inch&quot;&lt;/code&gt; , &lt;code&gt;&quot;Centimeter&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;undefined&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="09e102ac95dfb09396aca55c8a19a1429069b35b" translate="yes" xml:space="preserve">
          <source>Units used to interpret the &lt;code&gt;&quot;fontsize&quot;&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;&quot;fontsize&quot;&lt;/code&gt; 속성 을 해석하는 데 사용되는 단위 입니다.</target>
        </trans-unit>
        <trans-unit id="f8ab200f3e7bbc4e90c1f09194af6521d544a66b" translate="yes" xml:space="preserve">
          <source>Units used to interpret the &lt;code&gt;&quot;position&quot;&lt;/code&gt;, &lt;code&gt;&quot;outerposition&quot;&lt;/code&gt;, and &lt;code&gt;&quot;tightinset&quot;&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;&quot;position&quot;&lt;/code&gt; , &lt;code&gt;&quot;outerposition&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;tightinset&quot;&lt;/code&gt; 속성 을 해석하는 데 사용되는 단위 입니다.</target>
        </trans-unit>
        <trans-unit id="d7c231f4aa55861e6bc06aed776ddfe9f50c48ee" translate="yes" xml:space="preserve">
          <source>Univariate Discrete Distribution</source>
          <target state="translated">일 변량 이산 분포</target>
        </trans-unit>
        <trans-unit id="8ee79a99ca6a8cf3d3cdc01a21d8c20609777099" translate="yes" xml:space="preserve">
          <source>Unix-style man pages describing Octave.</source>
          <target state="translated">옥타브를 설명하는 유닉스 스타일 매뉴얼 페이지.</target>
        </trans-unit>
        <trans-unit id="e310cc73c863ad310b27c72c0bd1c8824a10ac9f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, all of the functions described in this chapter will work for real and complex scalar, vector, or matrix arguments. Functions described as &lt;em&gt;mapping functions&lt;/em&gt; apply the given operation individually to each element when given a matrix argument. For example:</source>
          <target state="translated">달리 언급하지 않는 한,이 장에서 설명하는 모든 함수는 실수 형 및 복잡한 스칼라, 벡터 또는 행렬 인수에 사용할 수 있습니다. &lt;em&gt;매핑 함수&lt;/em&gt; 로 설명 된 &lt;em&gt;함수&lt;/em&gt; 는 행렬 인수가 제공 될 때 각 요소에 지정된 작업을 개별적으로 적용합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3db2d6fe1c66e3f832e7f6d83935a5e5efc72b20" translate="yes" xml:space="preserve">
          <source>Unless you specify &amp;lsquo;</source>
          <target state="translated">'를 지정하지 않으면</target>
        </trans-unit>
        <trans-unit id="3c47b0525cbcfd17ac07b7554aaeb8a0a5befd4d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;var&gt;x&lt;/var&gt;^(1/3)&lt;/code&gt;, the result will be negative if &lt;var&gt;x&lt;/var&gt; is negative.</source>
          <target state="translated">달리 &lt;code&gt;&lt;var&gt;x&lt;/var&gt;^(1/3)&lt;/code&gt; 이면 결과 부정적인 것 &lt;var&gt;x&lt;/var&gt; 가 음수이다.</target>
        </trans-unit>
        <trans-unit id="ef3ac4eedc59d0967f44a2d80f2e700fc832ab93" translate="yes" xml:space="preserve">
          <source>Unlike a function file, a script file must &lt;em&gt;not&lt;/em&gt; begin with the keyword &lt;code&gt;function&lt;/code&gt;. If it does, Octave will assume that it is a function file, and that it defines a single function that should be evaluated as soon as it is defined.</source>
          <target state="translated">함수 파일과 달리 스크립트 파일은 키워드 &lt;code&gt;function&lt;/code&gt; 으로 시작 해서는 &lt;em&gt;안됩니다&lt;/em&gt; . 그렇다면 Octave는 함수 파일이라고 가정하고 정의 되 자마자 평가해야하는 단일 함수를 정의한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="9e2ba5b2336e48d35ba1078813b639f84df67276" translate="yes" xml:space="preserve">
          <source>Unlike many other computer languages, Octave allows you to define functions that return more than one value. The syntax for defining functions that return multiple values is</source>
          <target state="translated">다른 많은 컴퓨터 언어와 달리 Octave를 사용하면 둘 이상의 값을 반환하는 함수를 정의 할 수 있습니다. 여러 값을 반환하는 함수를 정의하는 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3411b45c32c798e6cd4acefc08313818d4e0c229" translate="yes" xml:space="preserve">
          <source>Unlike most languages, functions in Octave may return multiple values. For example, the following statement</source>
          <target state="translated">대부분의 언어와 달리 Octave의 함수는 여러 값을 반환 할 수 있습니다. 예를 들어, 다음 문장</target>
        </trans-unit>
        <trans-unit id="62b7d3cb889c3cf3d2102a8aa0fda113b72cb989" translate="yes" xml:space="preserve">
          <source>Unlike most programming languages, complex numeric constants are denoted as the sum of real and imaginary parts. The imaginary part is denoted by a real-valued numeric constant followed immediately by a complex value indicator (&amp;lsquo;</source>
          <target state="translated">대부분의 프로그래밍 언어와 달리 복잡한 숫자 상수는 실수 부와 허수 부의 합으로 표시됩니다. 허수 부분은 실수 값 상수로 표시되고 그 뒤에 복잡한 값 표시기 ( '</target>
        </trans-unit>
        <trans-unit id="349c3d3b08b4bb0edf7d468ffbe18cbd9c9311bc" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;return&lt;/code&gt; statement in C, Octave&amp;rsquo;s &lt;code&gt;return&lt;/code&gt; statement cannot be used to return a value from a function. Instead, you must assign values to the list of return variables that are part of the &lt;code&gt;function&lt;/code&gt; statement. The &lt;code&gt;return&lt;/code&gt; statement simply makes it easier to exit a function from a deeply nested loop or conditional statement.</source>
          <target state="translated">C 의 &lt;code&gt;return&lt;/code&gt; 문과 달리 Octave의 &lt;code&gt;return&lt;/code&gt; 문은 함수에서 값을 반환하는 데 사용할 수 없습니다. 대신, &lt;code&gt;function&lt;/code&gt; 명령문의 일부인 리턴 변수 목록에 값을 지정해야합니다 . &lt;code&gt;return&lt;/code&gt; 문은 단순히 쉽게 중첩 루프 또는 조건문에서 기능을 종료 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f9e72a9cdb83ef4389c77765004e9406894f647" translate="yes" xml:space="preserve">
          <source>Unlike the C library function, which requires you to provide a suitably sized string as an argument, Octave&amp;rsquo;s &lt;code&gt;sprintf&lt;/code&gt; function returns the string, automatically sized to hold all of the items converted.</source>
          <target state="translated">적절한 크기의 문자열을 인수로 제공해야하는 C 라이브러리 함수와 달리 Octave의 &lt;code&gt;sprintf&lt;/code&gt; 함수는 변환 된 모든 항목을 보유하도록 자동으로 크기가 지정된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="12409e65640a45620469ad87f2a31c339cb8b8cc" translate="yes" xml:space="preserve">
          <source>Unlock the named function &lt;var&gt;fcn&lt;/var&gt; so that it may be removed from memory with &lt;code&gt;clear&lt;/code&gt;.</source>
          <target state="translated">이름이 지정된 함수 &lt;var&gt;fcn&lt;/var&gt; 을 잠금 해제하여 &lt;code&gt;clear&lt;/code&gt; 에서 메모리에서 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca2353864432721ac043aecd2f43c7b16e3d11fd" translate="yes" xml:space="preserve">
          <source>Unpack the TAR archive &lt;var&gt;tarfile&lt;/var&gt;.</source>
          <target state="translated">TAR 아카이브 &lt;var&gt;tarfile&lt;/var&gt; 의 압축을 푸십시오 .</target>
        </trans-unit>
        <trans-unit id="ac87271628c4b6361d26f0bfbf90c02570f632fc" translate="yes" xml:space="preserve">
          <source>Unpack the ZIP archive &lt;var&gt;zipfile&lt;/var&gt;.</source>
          <target state="translated">우편 아카이브의 포장을 풀고 &lt;var&gt;zipfile&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6ce3c5c4d04d3ca618755eff7332594df8bd6dad" translate="yes" xml:space="preserve">
          <source>Unpack the archive &lt;var&gt;file&lt;/var&gt; based on its extension to the directory &lt;var&gt;dir&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt; 디렉토리의 확장자에 따라 아카이브 &lt;var&gt;file&lt;/var&gt; 압축을 푸십시오 .</target>
        </trans-unit>
        <trans-unit id="ed8516f26bf4a4add88a8854d7689a150a246054" translate="yes" xml:space="preserve">
          <source>Unpack the bzip2 archive &lt;var&gt;bzfile&lt;/var&gt;.</source>
          <target state="translated">bzip2 아카이브 &lt;var&gt;bzfile&lt;/var&gt; 의 압축을 푸십시오 .</target>
        </trans-unit>
        <trans-unit id="c2f2b471b5ca598dcacbb3072da527dd4a20a83e" translate="yes" xml:space="preserve">
          <source>Unpack the gzip archive &lt;var&gt;gzfile&lt;/var&gt;.</source>
          <target state="translated">gzip 아카이브 &lt;var&gt;gzfile&lt;/var&gt; 의 압축을 푸십시오 .</target>
        </trans-unit>
        <trans-unit id="c1ac088b8a7a60a97ae6c77f21b7d317ce3a2df8" translate="yes" xml:space="preserve">
          <source>Unshared data size.</source>
          <target state="translated">공유되지 않은 데이터 크기</target>
        </trans-unit>
        <trans-unit id="29488daa32604b9aa3d0697ff060d2f63e1a0816" translate="yes" xml:space="preserve">
          <source>Unshared stack size.</source>
          <target state="translated">공유되지 않은 스택 크기.</target>
        </trans-unit>
        <trans-unit id="e84f9be33a662e14f95dbc34ac24c539487ae713" translate="yes" xml:space="preserve">
          <source>Unsurprisingly, &lt;code&gt;bar&lt;/code&gt; is also recursive. It has been called 13,529 times in the course of recursively calculating the Fibonacci number in a suboptimal way, and most of the time was spent in &lt;code&gt;bar&lt;/code&gt; itself.</source>
          <target state="translated">놀랍게도 &lt;code&gt;bar&lt;/code&gt; 는 재귀 적입니다. 피보나치 수를 차선책으로 재귀 적으로 계산하는 과정에서 13,529 회 호출되었으며, 대부분의 시간은 &lt;code&gt;bar&lt;/code&gt; 자체 에 소비되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e9774e1d95d7f365ea8f27cb1ead81eb915de4d3" translate="yes" xml:space="preserve">
          <source>Unwrap radian phases by adding or subtracting multiples of 2*pi as appropriate to remove jumps greater than &lt;var&gt;tol&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;tol&lt;/var&gt; 보다 큰 점프를 제거하기 위해 적절하게 2 * pi의 배수를 더하거나 빼서 라디안 단계를 풉니 다 .</target>
        </trans-unit>
        <trans-unit id="bd14ddc042bb3f7c865b6d0b09619ab201c06cb8" translate="yes" xml:space="preserve">
          <source>Unwrap will work along the dimension &lt;var&gt;dim&lt;/var&gt;. If &lt;var&gt;dim&lt;/var&gt; is unspecified it defaults to the first non-singleton dimension.</source>
          <target state="translated">둘러싸 기 해제는 치수 &lt;var&gt;dim&lt;/var&gt; 을 따라 작동합니다 . 경우 &lt;var&gt;dim&lt;/var&gt; 첫 번째 싱글 톤이 아닌 치수에 지정되지 않은 것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="6bab2c594f05fdf90c82b1eba8de8f002b201812" translate="yes" xml:space="preserve">
          <source>Up to eight light objects are supported per axes. (Implementation dependent)</source>
          <target state="translated">축당 최대 8 개의 조명 개체가 지원됩니다. (구현에 따라 다름)</target>
        </trans-unit>
        <trans-unit id="0e8ccf0e38b27b3a4d19962dd10be4866e218db4" translate="yes" xml:space="preserve">
          <source>Update a Cholesky factorization given a range of columns to shift in the original factored matrix.</source>
          <target state="translated">원래 인수 분해 행렬에서 이동할 열 범위가 주어진 Cholesky 인수 분해를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="7299a988235f1f5e8c1ffbad3eabfd1e61b47055" translate="yes" xml:space="preserve">
          <source>Update a Cholesky factorization given a row or column to delete from the original factored matrix.</source>
          <target state="translated">원래 인수 분해 된 행렬에서 삭제할 행 또는 열이 지정된 Cholesky 인수 분해를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="eb6a155b1d377e5037a6234f3325adda3199c71d" translate="yes" xml:space="preserve">
          <source>Update a Cholesky factorization given a row or column to insert in the original factored matrix.</source>
          <target state="translated">원래 인수 분해 행렬에 삽입 할 행 또는 열이 지정된 Cholesky 분해를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="08036a5e3748177caac1c6a8f416d6b1fb40a89a" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given a range of columns to shift in the original factored matrix.</source>
          <target state="translated">원래 인수 분해 행렬에서 이동할 열 범위가 지정된 QR 인수 분해를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="51d6381da907b1796cbd300743d5aa77b23f9e2e" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given a row or column to delete from the original factored matrix.</source>
          <target state="translated">원래 인수 분해 행렬에서 삭제할 행 또는 열이 지정된 QR 분해를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="8ecac67f9f02117bbdaa4b3232cd6bd6349283fc" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given a row or column to insert in the original factored matrix.</source>
          <target state="translated">원래 인수 분해 행렬에 삽입 할 행 또는 열이 지정된 QR 분해를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="b5e58760960195e06e1f6c05b8a2838232aeb395" translate="yes" xml:space="preserve">
          <source>Update a QR factorization given update vectors or matrices.</source>
          <target state="translated">업데이트 벡터 또는 행렬이 지정된 QR 분해를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="1772adc8be64c620cfd9f42c036cd02e2abd6bfa" translate="yes" xml:space="preserve">
          <source>Update figure windows and their children.</source>
          <target state="translated">그림 창과 자녀를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="58842c43cfdcb35b43ddcc05ea601a2c01111e89" translate="yes" xml:space="preserve">
          <source>Update or downdate a Cholesky factorization.</source>
          <target state="translated">hole 레 스키 인수 분해를 업데이트하거나 다운 데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">Updating</target>
        </trans-unit>
        <trans-unit id="5e876c69c2e6d3aeb7ca0cd98f1eb7a92aa613f7" translate="yes" xml:space="preserve">
          <source>Upload local files</source>
          <target state="translated">로컬 파일 업로드</target>
        </trans-unit>
        <trans-unit id="ded728b3d7aaa54017e04f25067f5a6e5371a444" translate="yes" xml:space="preserve">
          <source>Upload the local file &lt;var&gt;file&lt;/var&gt; into the current remote directory on the FTP connection &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="translated">로컬 파일 &lt;var&gt;file&lt;/var&gt; 을 FTP 연결의 현재 원격 디렉토리에 업로드하십시오 . &lt;var&gt;f&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="20ff0f8102bd5b7728c35f95d8528d7f64f56769" translate="yes" xml:space="preserve">
          <source>Upper limit of the objective function. If the objective function reaches this limit and continues increasing, the solver stops the search. This parameter is used in the dual simplex only.</source>
          <target state="translated">목적 함수의 상한. 목적 함수가이 한계에 도달하고 계속 증가하면 솔버가 검색을 중지합니다. 이 매개 변수는 이중 심플 렉스에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="299dc50bce7a3af9d50b415a5a9dd86c7c7ee8c2" translate="yes" xml:space="preserve">
          <source>Upper triangular. If the optional third argument &lt;var&gt;perm&lt;/var&gt; is given, the matrix is assumed to be a permuted upper triangular with the permutations defined by the vector &lt;var&gt;perm&lt;/var&gt;.</source>
          <target state="translated">위 삼각형. 선택적인 세 번째 인수 &lt;var&gt;perm&lt;/var&gt; 이 제공되면 행렬은 벡터 &lt;var&gt;perm&lt;/var&gt; 에 의해 정의 된 순열을 갖는 순열 된 상부 삼각형 인 것으로 가정됩니다 .</target>
        </trans-unit>
        <trans-unit id="fc549ac546843e2b778358de1dd573e1fbad283c" translate="yes" xml:space="preserve">
          <source>Uppercase the character following the cursor (or the beginning of the next word if the cursor is between words), moving the cursor to the end of the word.</source>
          <target state="translated">커서 다음에 오는 문자 (또는 커서가 단어 사이에있는 경우 다음 단어의 시작)를 대문자로 커서를 단어의 끝으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="a505a6766696bfb23ae8d5feabd44804068b29f9" translate="yes" xml:space="preserve">
          <source>Uppercase the characters following the cursor to the end of the current (or following) word, moving the cursor to the end of the word.</source>
          <target state="translated">커서 뒤의 현재 (또는 뒤 따르는) 단어의 끝까지 커서를 움직여 단어의 끝으로 커서를 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="b6dffb93f99547ed517fd76301b35202f33b1f1c" translate="yes" xml:space="preserve">
          <source>Use &amp;lsquo;</source>
          <target state="translated">사용하다 '</target>
        </trans-unit>
        <trans-unit id="736fe455c57cf4505349772d4b05307037a88b41" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;char&amp;gt; as the path separation character. This option can help when running Octave on non-Unix systems.</source>
          <target state="translated">경로 구분 문자로 &amp;lt;char&amp;gt;을 사용하십시오. 이 옵션은 비 유닉스 시스템에서 Octave를 실행할 때 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="c28ce88c41a4ad0639b3a842a341fd945201b9f9" translate="yes" xml:space="preserve">
          <source>Use 12-hour time format</source>
          <target state="translated">12 시간 형식 사용</target>
        </trans-unit>
        <trans-unit id="8e0c432beb071041971dc552dc0387cf5c793e09" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cellfun&lt;/code&gt; intelligently. The &lt;code&gt;cellfun&lt;/code&gt; function is a useful tool for avoiding loops. It is often used with anonymous function handles; however, calling an anonymous function involves an overhead quite comparable to the overhead of an m-file function. Passing a handle to a built-in function is faster, because the interpreter is not involved in the internal loop. For example:</source>
          <target state="translated">&lt;code&gt;cellfun&lt;/code&gt; 을 지능적으로 사용하십시오 . &lt;code&gt;cellfun&lt;/code&gt; 의 기능은 루프를 피하기위한 유용한 도구입니다. 종종 익명 함수 핸들과 함께 사용됩니다. 그러나 익명 함수를 호출하면 m 파일 함수의 오버 헤드와 상당히 비슷한 오버 헤드가 포함됩니다. 인터프리터가 내부 루프에 관여하지 않기 때문에 내장 함수에 핸들을 전달하는 것이 더 빠릅니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="55307d71a1e63a2ae0e7a218248227ee090f6bb1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ignore_function_time_stamp&lt;/code&gt; when appropriate. If you are calling lots of functions, and none of them will need to change during your run, set the variable &lt;code&gt;ignore_function_time_stamp&lt;/code&gt; to &lt;code&gt;&quot;all&quot;&lt;/code&gt;. This will stop Octave from checking the time stamp of a function file to see if it has been updated while the program is being run.</source>
          <target state="translated">적절한 경우 &lt;code&gt;ignore_function_time_stamp&lt;/code&gt; 를 사용하십시오 . 많은 함수를 호출하고 실행 중에 변경할 필요가없는 경우 &lt;code&gt;ignore_function_time_stamp&lt;/code&gt; 변수 를 &lt;code&gt;&quot;all&quot;&lt;/code&gt; 로 설정하십시오 . 그러면 Octave가 함수 파일의 타임 스탬프를 검사하여 프로그램이 실행되는 동안 업데이트되었는지 확인하지 못하게됩니다.</target>
        </trans-unit>
        <trans-unit id="1c68bdd835376d383faf2bb558f097da51846472" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;fontname&lt;/var&gt; and/or &lt;var&gt;fontsize&lt;/var&gt; for all text. &lt;var&gt;fontname&lt;/var&gt; is ignored for some devices: dxf, fig, hpgl, etc.</source>
          <target state="translated">사용 &lt;var&gt;fontname&lt;/var&gt; 및 / 또는 &lt;var&gt;fontsize&lt;/var&gt; 모든 텍스트. dxf, fig, hpgl 등 일부 장치에서는 &lt;var&gt;fontname&lt;/var&gt; 이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="92c57054a3e8eec2ade6b1f833e028c02eefa2fd" translate="yes" xml:space="preserve">
          <source>Use BDF formulas in implicit multistep methods. &lt;em&gt;Note&lt;/em&gt;: This option is not yet implemented.</source>
          <target state="translated">암시 적 다단계 방법에서 BDF 수식을 사용하십시오. &lt;em&gt;참고&lt;/em&gt; :이 옵션은 아직 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="67b713d028d90dfff729d7977c923a40822309ed" translate="yes" xml:space="preserve">
          <source>Use built-in and library functions if possible. Built-in and compiled functions are very fast. Even with an m-file library function, chances are good that it is already optimized, or will be optimized more in a future release.</source>
          <target state="translated">가능하면 내장 및 라이브러리 기능을 사용하십시오. 내장 및 컴파일 된 기능은 매우 빠릅니다. m 파일 라이브러리 기능을 사용하더라도 이미 최적화되었거나 다음 릴리스에서 더 최적화 될 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="6292cfacecdbf80fb8b4056e20e161c2c317ffd1" translate="yes" xml:space="preserve">
          <source>Use dash-dotted lines.</source>
          <target state="translated">점선을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b752d092671139b4ba8981cae8852ab031f6d43a" translate="yes" xml:space="preserve">
          <source>Use dashed lines.</source>
          <target state="translated">점선을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="875439e1b36a8e50b811dae2b6c94f25a359c083" translate="yes" xml:space="preserve">
          <source>Use dotted lines.</source>
          <target state="translated">점선을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b7ad63f1318b93e8495d1a93a29689dc00dcfae9" translate="yes" xml:space="preserve">
          <source>Use either &lt;code&gt;dbcont&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt; to leave the debug mode and continue the normal execution of the script.</source>
          <target state="translated">&lt;code&gt;dbcont&lt;/code&gt; 또는 &lt;code&gt;return&lt;/code&gt; 을 사용 하여 디버그 모드를 종료하고 스크립트의 정상적인 실행을 계속하십시오.</target>
        </trans-unit>
        <trans-unit id="b0f892d0c034533d2319a8e4b07159cb1d60b657" translate="yes" xml:space="preserve">
          <source>Use elementwise vector operators whenever possible to avoid looping (operators like &lt;code&gt;.*&lt;/code&gt; and &lt;code&gt;.^&lt;/code&gt;). See &lt;a href=&quot;arithmetic-ops#Arithmetic-Ops&quot;&gt;Arithmetic Ops&lt;/a&gt;. For simple inline functions, the &lt;code&gt;vectorize&lt;/code&gt; function can do this automatically.</source>
          <target state="translated">루핑을 피하기 위해 가능하면 요소 별 벡터 연산자를 사용하십시오 ( &lt;code&gt;.*&lt;/code&gt; 및 &lt;code&gt;.^&lt;/code&gt; 와 같은 연산자 ). &lt;a href=&quot;arithmetic-ops#Arithmetic-Ops&quot;&gt;산술 연산을&lt;/a&gt; 참조하십시오 . 간단한 인라인 함수의 경우 &lt;code&gt;vectorize&lt;/code&gt; 함수가이를 자동으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d86872e8bf273036285506f87ffa89511d3480b" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;interpreter&lt;/code&gt; Property</source>
          <target state="translated">의 사용 &lt;code&gt;interpreter&lt;/code&gt; 재산권</target>
        </trans-unit>
        <trans-unit id="703f7c7517134044bdeba6e79c432006631bb36a" translate="yes" xml:space="preserve">
          <source>Use of the interpreter Property</source>
          <target state="translated">통역사 속성 사용</target>
        </trans-unit>
        <trans-unit id="35881ff96b5615dfa69ec9c777caae34d0816ca2" translate="yes" xml:space="preserve">
          <source>Use only the lower triangle of &lt;var&gt;A&lt;/var&gt; and return a lower triangular factor &lt;var&gt;L&lt;/var&gt; such that &lt;code&gt;L*L'&lt;/code&gt; approximates &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 의 아래쪽 삼각형 만 사용 하고 &lt;code&gt;L*L'&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; 에 가까워 지도록 낮은 삼각 계수 &lt;var&gt;L&lt;/var&gt; 을 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="01501f0804f399ffb27c9eacda862a2d76ab7ef8" translate="yes" xml:space="preserve">
          <source>Use only the upper triangle of &lt;var&gt;A&lt;/var&gt; and return an upper triangular factor &lt;var&gt;U&lt;/var&gt; such that &lt;code&gt;U'*U&lt;/code&gt; approximates &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;A&lt;/var&gt; 의 상단 삼각형 만 사용 하고 &lt;code&gt;U'*U&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; 와 근사 하도록 상단 삼각 계수 &lt;var&gt;U&lt;/var&gt; 를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="f55e280c0cc2779eacb42d9d9071e0ed7f403d5e" translate="yes" xml:space="preserve">
          <source>Use smoothing techniques to reduce the appearance of jagged lines.</source>
          <target state="translated">들쭉날쭉 한 선의 모양을 줄이려면 스무딩 기술을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7f56bf664f41841f0780b77777bfbee0360ea999" translate="yes" xml:space="preserve">
          <source>Use solid lines (default).</source>
          <target state="translated">실선을 사용하십시오 (기본값).</target>
        </trans-unit>
        <trans-unit id="a93c12f2901fee8a3910889bd9c00614689808bc" translate="yes" xml:space="preserve">
          <source>Use stiff backward differentiation formula (BDF) method. If a function to compute the Jacobian is not supplied, &lt;code&gt;lsode&lt;/code&gt; will compute a finite difference approximation of the Jacobian matrix.</source>
          <target state="translated">뻣뻣한 역 분화 공식 (BDF) 방법을 사용하십시오. Jacobian을 계산하는 함수가 제공되지 않으면 &lt;code&gt;lsode&lt;/code&gt; 는 Jacobian 행렬의 유한 차분 근사값을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="6985f86b2c8e56e8983df6db4607d6b96d4ce8ec" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&quot;string&quot;&lt;/code&gt; property to change the text string. The line and the arrowhead can be customized as for arrow annotations, and the text can be customized using the same properties as &lt;code&gt;text&lt;/code&gt; graphics objects. Note, however, that some text property names are prefixed with &quot;text&quot; to distinguish them from arrow properties: &lt;code&gt;&quot;textbackgroundcolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;textcolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;textedgecolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;textlinewidth&quot;&lt;/code&gt;, &lt;code&gt;&quot;textmargin&quot;&lt;/code&gt;, &lt;code&gt;&quot;textrotation&quot;&lt;/code&gt;.</source>
          <target state="translated">사용 &lt;code&gt;&quot;string&quot;&lt;/code&gt; 텍스트 문자열을 변경하는 속성을. 화살표 주석과 마찬가지로 선과 화살촉을 사용자 정의 할 수 있으며 &lt;code&gt;text&lt;/code&gt; 그래픽 객체 와 동일한 속성을 사용하여 텍스트를 사용자 정의 할 수 있습니다 . 단, 일부 텍스트 속성 이름이 화살표의 속성과 구별하기 위해 &quot;텍스트&quot;로 시작됩니다 : &lt;code&gt;&quot;textbackgroundcolor&quot;&lt;/code&gt; , &lt;code&gt;&quot;textcolor&quot;&lt;/code&gt; , &lt;code&gt;&quot;textedgecolor&quot;&lt;/code&gt; , &lt;code&gt;&quot;textlinewidth&quot;&lt;/code&gt; , &lt;code&gt;&quot;textmargin&quot;&lt;/code&gt; , &lt;code&gt;&quot;textrotation&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c7d002a0d0213202785ce53dc1aeabeec1236f8" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&quot;string&quot;&lt;/code&gt; property to change the text string. You may use &lt;code&gt;&quot;backgroundcolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;edgecolor&quot;&lt;/code&gt;, &lt;code&gt;&quot;linestyle&quot;&lt;/code&gt;, and &lt;code&gt;&quot;linewidth&quot;&lt;/code&gt; properties to customize the box background color and edge appearance. A limited set of &lt;code&gt;text&lt;/code&gt; objects properties are also available; Besides &lt;code&gt;&quot;font&amp;hellip;&quot;&lt;/code&gt; properties, you may also use &lt;code&gt;&quot;horizontalalignment&quot;&lt;/code&gt; and &lt;code&gt;&quot;verticalalignment&quot;&lt;/code&gt; to position the text inside the box.</source>
          <target state="translated">사용 &lt;code&gt;&quot;string&quot;&lt;/code&gt; 텍스트 문자열을 변경하는 속성을. 당신은 사용할 수 있습니다 &lt;code&gt;&quot;backgroundcolor&quot;&lt;/code&gt; , &lt;code&gt;&quot;edgecolor&quot;&lt;/code&gt; , &lt;code&gt;&quot;linestyle&quot;&lt;/code&gt; , 및 &lt;code&gt;&quot;linewidth&quot;&lt;/code&gt; 상자의 배경 색상과 가장자리 모양을 사용자 정의 속성을. 제한된 &lt;code&gt;text&lt;/code&gt; 개체 속성 집합 도 사용할 수 있습니다. &lt;code&gt;&quot;font&amp;hellip;&quot;&lt;/code&gt; 속성 외에도 &quot; &lt;code&gt;&quot;horizontalalignment&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;verticalalignment&quot;&lt;/code&gt; 를 사용하여 텍스트를 상자 안에 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a1df931d3a7fcda3eb6c9a88c55cd660b2924fa" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fftw&lt;/code&gt; function to generate and save wisdom. Using the utilities provided together with the &lt;small&gt;FFTW&lt;/small&gt; libraries (&lt;code&gt;fftw-wisdom&lt;/code&gt; on Unix systems), you can even add wisdom generated by Octave to the system-wide wisdom file.</source>
          <target state="translated">&lt;code&gt;fftw&lt;/code&gt; 기능을 사용하여 지혜를 생성하고 저장하십시오. &lt;small&gt;FFTW&lt;/small&gt; 라이브러리 와 함께 제공되는 유틸리티 ( Unix 시스템에서는 &lt;code&gt;fftw-wisdom&lt;/code&gt; )를 사용하여 Octave에서 생성 한 지혜를 시스템 전체의 지혜 파일에 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="178dc4171548dffa72bfecec2b4c233482bc1963" translate="yes" xml:space="preserve">
          <source>Use the Cholesky factorization of B. (default if &lt;var&gt;A&lt;/var&gt; is symmetric (Hermitian) and &lt;var&gt;B&lt;/var&gt; is symmetric (Hermitian) positive definite)</source>
          <target state="translated">C의 Cholesky 인수 분해를 사용하십시오 ( &lt;var&gt;A&lt;/var&gt; 가 대칭 (Hermitian)이고 &lt;var&gt;B&lt;/var&gt; 가 대칭 (Hermitian) 양의 명확한 경우 기본값 )</target>
        </trans-unit>
        <trans-unit id="93864ea3e0ee1e46cc7071f091379cfc332dcbaa" translate="yes" xml:space="preserve">
          <source>Use the QZ algorithm. (used whenever &lt;var&gt;A&lt;/var&gt; or &lt;var&gt;B&lt;/var&gt; are not symmetric)</source>
          <target state="translated">QZ 알고리즘을 사용하십시오. ( &lt;var&gt;A&lt;/var&gt; 또는 &lt;var&gt;B&lt;/var&gt; 가 대칭이 아닐 때 사용 )</target>
        </trans-unit>
        <trans-unit id="a86311111875c92d698b87d50b4813d957478609" translate="yes" xml:space="preserve">
          <source>Use the gzip algorithm to compress the file. This works on files that are compressed with gzip outside of Octave, and gzip can also be used to convert the files for backward compatibility. This option is only available if Octave was built with a link to the zlib libraries.</source>
          <target state="translated">gzip 알고리즘을 사용하여 파일을 압축하십시오. 이는 옥타브 외부에서 gzip으로 압축 된 파일에서 작동하며 gzip을 사용하여 파일을 이전 버전과의 호환성을 위해 변환 할 수도 있습니다. 이 옵션은 Octave가 zlib 라이브러리에 대한 링크로 빌드 된 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="632af614e02b09419ed5d35d423919206dc56633" translate="yes" xml:space="preserve">
          <source>Use the included &lt;small&gt;FFTPACK&lt;/small&gt; library for computing Fast Fourier Transforms instead of the &lt;small&gt;FFTW3&lt;/small&gt; library when operating on single precision (float) values.</source>
          <target state="translated">단 정밀도 (float) 값으로 작동 할 때 &lt;small&gt;FFTW3&lt;/small&gt; 라이브러리 대신 고속 푸리에 변환을 계산하기 위해 포함 된 &lt;small&gt;FFTPACK&lt;/small&gt; 라이브러리를 사용하십시오 .&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d6b2b3a74049e2f751314235dd5d9ae4ee1f2125" translate="yes" xml:space="preserve">
          <source>Use the included &lt;small&gt;FFTPACK&lt;/small&gt; library for computing Fast Fourier Transforms instead of the &lt;small&gt;FFTW3&lt;/small&gt; library.</source>
          <target state="translated">&lt;small&gt;FFTW3&lt;/small&gt; 라이브러리 대신 고속 푸리에 변환을 계산하기 위해 포함 된 &lt;small&gt;FFTPACK&lt;/small&gt; 라이브러리를 사용하십시오 .&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0d778f859aa1dcf54d516b4601d4b26369c2a9ba" translate="yes" xml:space="preserve">
          <source>Use the package name &lt;var&gt;package&lt;/var&gt; or Octave to limit the listing to a desired component.</source>
          <target state="translated">패키지 이름 &lt;var&gt;package&lt;/var&gt; 또는 Octave를 사용하여 목록을 원하는 구성 요소로 제한하십시오.</target>
        </trans-unit>
        <trans-unit id="70a508011f23aea1812880f8e8641bb6e191209b" translate="yes" xml:space="preserve">
          <source>Use the readline library to provide for editing of the command line in terminal environments. This option is on by default.</source>
          <target state="translated">readline 라이브러리를 사용하여 터미널 환경에서 명령 행을 편집하십시오. 이 옵션은 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="c495bb1d30025d586f2668e5c40798af79ed4966" translate="yes" xml:space="preserve">
          <source>Use two-phase dual simplex, and if it fails, switch to the primal simplex.</source>
          <target state="translated">2 상 이중 심플 렉스를 사용하고 실패하면 기본 심플 렉스로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="2c29bc6a8ba0b2a91a060e281bfe792739acaf46" translate="yes" xml:space="preserve">
          <source>Use two-phase dual simplex.</source>
          <target state="translated">2 상 이중 심플 렉스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c9cb612bd88dbdf40ce89107f7f9c496dfb08419" translate="yes" xml:space="preserve">
          <source>Use two-phase primal simplex.</source>
          <target state="translated">2 단계 기본 심플 렉스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="964c605b1ab0c74f15e9696e137d26bda2ff59c6" translate="yes" xml:space="preserve">
          <source>User ID of file&amp;rsquo;s owner.</source>
          <target state="translated">파일 소유자의 사용자 ID</target>
        </trans-unit>
        <trans-unit id="d869866a4817bc95e7dcc7e27def41c48093b72d" translate="yes" xml:space="preserve">
          <source>User-Defined Preferences</source>
          <target state="translated">사용자 정의 환경 설정</target>
        </trans-unit>
        <trans-unit id="6cd3be909847beb0291e90fccf60c063936659cd" translate="yes" xml:space="preserve">
          <source>User-defined Data Types</source>
          <target state="translated">사용자 정의 데이터 유형</target>
        </trans-unit>
        <trans-unit id="3f0380965c08a38688a7ccb1db3f37c3f5a6f4ae" translate="yes" xml:space="preserve">
          <source>User-defined data to associate with the graphics object.</source>
          <target state="translated">그래픽스 객체와 연관시킬 사용자 정의 데이터.</target>
        </trans-unit>
        <trans-unit id="d9b869e2d0fc8a470e332e1be4a28818cf0bde2f" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;java-interface-functions#XREFisjava&quot;&gt;isjava&lt;/a&gt;, it is possible to check whether a variable is a Java object and its class can be determined as well. In addition to the previous example:</source>
          <target state="translated">&lt;a href=&quot;java-interface-functions#XREFisjava&quot;&gt;isjava를&lt;/a&gt; 사용하면 변수가 Java 객체인지 여부와 클래스를 확인할 수 있습니다. 이전 예 외에도</target>
        </trans-unit>
        <trans-unit id="705ae1d21f8a9ae183e4e9eefc6de0735ba279f2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;dbstep in&lt;/code&gt; will cause execution of the next line to step into any m-files defined on the next line.</source>
          <target state="translated">&lt;code&gt;dbstep in&lt;/code&gt; 을 사용 하면 다음 행을 실행하여 다음 행에 정의 된 m 파일로 들어갑니다.</target>
        </trans-unit>
        <trans-unit id="15fc4f456dbd053da29e28c4d7bbf241fe2f9455" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;dbstep out&lt;/code&gt; will cause execution to continue until the current function returns.</source>
          <target state="translated">&lt;code&gt;dbstep out&lt;/code&gt; 을 사용 하면 현재 함수가 반환 될 때까지 실행이 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="c673b98e7a78bc34931556e31f2790d58e0a2deb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;publish (&lt;var&gt;file&lt;/var&gt;, &lt;var&gt;output_format&lt;/var&gt;)&lt;/code&gt; is equivalent to the function call using a structure</source>
          <target state="translated">사용 &lt;code&gt;publish (&lt;var&gt;file&lt;/var&gt;, &lt;var&gt;output_format&lt;/var&gt;)&lt;/code&gt; 구조를 이용하여 함수 호출에 상당</target>
        </trans-unit>
        <trans-unit id="a066825bfc4237b320cee2f4d8f802040fb3f699" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;quadgk&lt;/code&gt; in the example below, a double integration can be performed. (Note that any of the 1-D quadrature functions can be used in this fashion except for &lt;code&gt;quad&lt;/code&gt; since it is written in Fortran and cannot be called recursively.)</source>
          <target state="translated">아래 예에서 &lt;code&gt;quadgk&lt;/code&gt; 를 사용 하여 이중 통합을 수행 할 수 있습니다. (1D 쿼드 러처 함수는 Fortran으로 작성되고 재귀 적으로 호출 될 수 없으므로 &lt;code&gt;quad&lt;/code&gt; 제외하고 이러한 방식으로 사용될 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="af984b2184e30a490dcce136c877ecd629f46590" translate="yes" xml:space="preserve">
          <source>Using Packages</source>
          <target state="translated">패키지 사용</target>
        </trans-unit>
        <trans-unit id="37063b833ff56f48219796db374c71a9fbaa347f" translate="yes" xml:space="preserve">
          <source>Using Publishing Markup in Script Files</source>
          <target state="translated">스크립트 파일에서 게시 마크 업 사용</target>
        </trans-unit>
        <trans-unit id="58b26d26e0baec90054be9d5c0e8f0944aceeb13" translate="yes" xml:space="preserve">
          <source>Using Sparse Matrices</source>
          <target state="translated">희소 행렬 사용</target>
        </trans-unit>
        <trans-unit id="45b7be92ae1423421a9275acb2b98fa65e0e4187" translate="yes" xml:space="preserve">
          <source>Using Sparse Matrices in Oct-Files</source>
          <target state="translated">10 월 파일에서 희소 행렬 사용</target>
        </trans-unit>
        <trans-unit id="1aa46225eba8ca89d2ffb1f5134dcb2dd69ec707" translate="yes" xml:space="preserve">
          <source>Using a first order FEM, we approximate the electrical conductivity distribution in Omega as constant on each simplex (represented by the vector &lt;code&gt;conductivity&lt;/code&gt;). Based on the finite element geometry, we first calculate a system (or stiffness) matrix for each simplex (represented as 3-by-3 elements on the diagonal of the element-wise system matrix &lt;code&gt;SE&lt;/code&gt;). Based on &lt;code&gt;SE&lt;/code&gt; and a N-by-DE connectivity matrix &lt;code&gt;C&lt;/code&gt;, representing the connections between simplices and vertices, the global connectivity matrix &lt;code&gt;S&lt;/code&gt; is calculated.</source>
          <target state="translated">1 차 FEM을 사용하여 각 심플 렉스 (벡터 &lt;code&gt;conductivity&lt;/code&gt; ) 에서 상수로 오메가의 전기 전도도 분포를 추정합니다 . 유한 요소 형상을 기반으로, 먼저 각 심플 렉스 (요소 별 시스템 행렬 &lt;code&gt;SE&lt;/code&gt; 의 대각선에 3x3 요소로 표시)에 대한 시스템 (또는 강성) 행렬을 계산합니다 . 단순화와 정점 사이의 연결을 나타내는 &lt;code&gt;SE&lt;/code&gt; 와 N-by-DE 연결성 매트릭스 &lt;code&gt;C&lt;/code&gt; 에 기초하여 , 글로벌 연결성 매트릭스 &lt;code&gt;S&lt;/code&gt; 가 계산된다.</target>
        </trans-unit>
        <trans-unit id="87ff81b8fa01ff5cc9f640ba773dfd125a8f1938" translate="yes" xml:space="preserve">
          <source>Using classes to build new classes is supported by Octave through the use of both inheritance and aggregation.</source>
          <target state="translated">Octave는 클래스를 사용하여 상속 및 집계를 통해 새로운 클래스를 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8daf2571ad5958a7ce76ca8eb0cbecd9d73a8c" translate="yes" xml:space="preserve">
          <source>Using just one number, such as the mean, to represent an entire data set may not give an accurate picture of the data. One way to characterize the fit is to measure the dispersion of the data. Octave provides several functions for measuring dispersion.</source>
          <target state="translated">평균과 같이 하나의 숫자 만 사용하여 전체 데이터 세트를 나타내면 정확한 데이터 그림이 제공되지 않을 수 있습니다. 적합을 특성화하는 한 가지 방법은 데이터의 분산을 측정하는 것입니다. 옥타브는 분산 측정을위한 몇 가지 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="34625b6ffe5d09779c6241c85c135333070330d4" translate="yes" xml:space="preserve">
          <source>Using the &amp;lsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="3b403dfed4b3fbb780df3846b4ba5f498805f6ca" translate="yes" xml:space="preserve">
          <source>Using zero as an increment in the colon notation, as &lt;code&gt;1:0:1&lt;/code&gt; is not allowed, because a division by zero would occur in determining the number of range elements. However, ranges with zero increment (i.e., all elements equal) are useful, especially in indexing, and Octave allows them to be constructed using the built-in function &lt;code&gt;ones&lt;/code&gt;. Note that because a range must be a row vector, &lt;code&gt;ones (1, 10)&lt;/code&gt; produces a range, while &lt;code&gt;ones (10, 1)&lt;/code&gt; does not.</source>
          <target state="translated">범위 요소의 수를 결정할 때 0으로 나누기가 발생하므로 &lt;code&gt;1:0:1&lt;/code&gt; 로 콜론 표기법에서 증분으로 0을 사용할 수 없습니다. 그러나 인덱싱에서 증분이 0 인 (즉, 모든 요소가 동일한) 범위가 유용하며 옥타브는 내장 함수를 사용하여 구성 할 수 &lt;code&gt;ones&lt;/code&gt; . 범위는 행 벡터 여야하므로 &lt;code&gt;ones (1, 10)&lt;/code&gt; 은 범위를 생성하지만 &lt;code&gt;ones (10, 1)&lt;/code&gt; 은 범위를 생성 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="395cb7ac7348436581ca3432b9d29a2880c5e083" translate="yes" xml:space="preserve">
          <source>Usually Octave will manage the memory, but sometimes it can be practical to remove variables from memory manually. This is usually needed when working with large variables that fill a substantial part of the memory. On a computer that uses the IEEE floating point format, the following program allocates a matrix that requires around 128 MB memory.</source>
          <target state="translated">일반적으로 Octave는 메모리를 관리하지만 때로는 메모리에서 변수를 수동으로 제거하는 것이 실용적 일 수 있습니다. 이것은 대개 메모리의 상당 부분을 채우는 큰 변수로 작업 할 때 필요합니다. IEEE 부동 소수점 형식을 사용하는 컴퓨터에서 다음 프로그램은 약 128MB 메모리가 필요한 매트릭스를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="8bf056ede57539fe7ab422f88b516c58223a0adf" translate="yes" xml:space="preserve">
          <source>Utility Functions</source>
          <target state="translated">유틸리티 기능</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="6a5d2de0b79911d1458325b1a51447cf1d0db2b4" translate="yes" xml:space="preserve">
          <source>Valid &lt;var&gt;key&lt;/var&gt; and &lt;var&gt;value&lt;/var&gt; pairs are:</source>
          <target state="translated">유효한 &lt;var&gt;key&lt;/var&gt; 및 &lt;var&gt;value&lt;/var&gt; 쌍은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="13182ff3e08aab3361f693667e8dcb74887661ed" translate="yes" xml:space="preserve">
          <source>Valid annotation types and their specific properties are described below:</source>
          <target state="translated">유효한 주석 유형 및 특정 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7d1f4870038d7cf81ccd51d08da1417f970ff2b2" translate="yes" xml:space="preserve">
          <source>Valid argument name, but ignored. Left for compatibility with &lt;small&gt;MATLAB&lt;/small&gt;.</source>
          <target state="translated">유효한 인수 이름이지만 무시됩니다. &lt;small&gt;MATLAB&lt;/small&gt; 과의 호환성을 위해 &lt;small&gt;남았습니다&lt;/small&gt; .</target>
        </trans-unit>
        <trans-unit id="3171e3b93408d08fcdaca0fd893752b2e6b77e3d" translate="yes" xml:space="preserve">
          <source>Valid arguments for &lt;var&gt;type&lt;/var&gt; are</source>
          <target state="translated">&lt;var&gt;type&lt;/var&gt; 유효한 인수 는</target>
        </trans-unit>
        <trans-unit id="7551da498d0ef060fe8d63ef855ebf37b74ac651" translate="yes" xml:space="preserve">
          <source>Valid filetype extensions:</source>
          <target state="translated">유효한 파일 형식 확장자 :</target>
        </trans-unit>
        <trans-unit id="3b089b3e5e3d6bc5af0a709991d48fb144d30543" translate="yes" xml:space="preserve">
          <source>Valid formats for floating point numbers are listed in the following table.</source>
          <target state="translated">부동 소수점 숫자의 올바른 형식은 다음 표에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c480965357466d29d7070e0a855321899877d8a8" translate="yes" xml:space="preserve">
          <source>Valid indices are either positive integers (although possibly of real data type), or logical arrays.</source>
          <target state="translated">유효한 인덱스는 양의 정수 (실제 데이터 유형 일지라도)이거나 논리 형 배열입니다.</target>
        </trans-unit>
        <trans-unit id="123ee2fdc2efc6c40bcd8dcd85325f7aa9fb54a9" translate="yes" xml:space="preserve">
          <source>Valid options are:</source>
          <target state="translated">유효한 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c15f10cc48f2360e7750c09307868d78d11667a" translate="yes" xml:space="preserve">
          <source>Valid options for &lt;code&gt;load&lt;/code&gt; are listed in the following table.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; 유효한 옵션 은 다음 표에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a650167421f09e9606b04e7b9aafe05d8b9092f5" translate="yes" xml:space="preserve">
          <source>Valid options for the &lt;code&gt;save&lt;/code&gt; command are listed in the following table. Options that modify the output format override the format specified by &lt;code&gt;save_default_options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 명령에 유효한 옵션 은 다음 표에 나열되어 있습니다. 출력 형식을 수정하는 옵션은 &lt;code&gt;save_default_options&lt;/code&gt; 로 지정된 형식을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="7036f227274f2da9fc72b35ee54b3299893b720d" translate="yes" xml:space="preserve">
          <source>Valid parameters are:</source>
          <target state="translated">유효한 매개 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="59b95219725d48889242f1a8136ebe784276218c" translate="yes" xml:space="preserve">
          <source>Valid pattern syntax is the same as described for the &lt;code&gt;clear&lt;/code&gt; command. If no patterns are supplied, all variables are listed.</source>
          <target state="translated">유효한 패턴 구문은 &lt;code&gt;clear&lt;/code&gt; 명령에 대해 설명한 것과 동일 합니다. 패턴이 제공되지 않으면 모든 변수가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="cb1d545cc82828c7c0bdc2b86a77aabaccb9096f" translate="yes" xml:space="preserve">
          <source>Valid styles for uicontrol are:</source>
          <target state="translated">uicontrol의 유효한 스타일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ecba74e32beb8c420920d690734ab1699a9bbfb3" translate="yes" xml:space="preserve">
          <source>Valid values for &lt;var&gt;orientation&lt;/var&gt; are &lt;code&gt;&quot;portrait&quot;&lt;/code&gt;, &lt;code&gt;&quot;landscape&quot;&lt;/code&gt;, and &lt;code&gt;&quot;tall&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;orientation&lt;/var&gt; 유효한 값 은 &lt;code&gt;&quot;portrait&quot;&lt;/code&gt; , &lt;code&gt;&quot;landscape&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;tall&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="560315ec81e0dafe8e9d36882afad9b1c1048c4a" translate="yes" xml:space="preserve">
          <source>Value Classes vs. Handle Classes</source>
          <target state="translated">가치 클래스와 핸들 클래스</target>
        </trans-unit>
        <trans-unit id="fea2433a27294f172e09384e561fc5b5ac92fbc3" translate="yes" xml:space="preserve">
          <source>Value is a 1x8 Matrix with the x,y chromaticity values for white, red, green, and blue points, in that order.</source>
          <target state="translated">값은 흰색, 빨간색, 녹색 및 파란색 점에 대한 x, y 색도 값이 순서대로 1x8 매트릭스입니다.</target>
        </trans-unit>
        <trans-unit id="de122bdfe0a3137e2639218255d65d9f606c4c66" translate="yes" xml:space="preserve">
          <source>Value is a diagonal matrix.</source>
          <target state="translated">값은 대각선 행렬입니다.</target>
        </trans-unit>
        <trans-unit id="ea0616b80a505ea5580d50478724758cdfd953c3" translate="yes" xml:space="preserve">
          <source>Value to return for empty numeric values in non-whitespace delimited data. The default is NaN. When the data type does not support NaN (int32 for example), then default is zero.</source>
          <target state="translated">공백으로 구분되지 않은 데이터에서 빈 숫자 값을 반환하는 값입니다. 기본값은 NaN입니다. 데이터 유형이 NaN을 지원하지 않는 경우 (예 : int32) 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="b0baf0efd1ba53cf2cd047ef828d0775507afef6" translate="yes" xml:space="preserve">
          <source>Value to return for empty numeric values in non-whitespace delimited data. The default is NaN. When the data type does not support NaN (int32 for example), then the default is zero.</source>
          <target state="translated">공백으로 구분되지 않은 데이터에서 빈 숫자 값을 반환하는 값입니다. 기본값은 NaN입니다. 데이터 유형이 NaN을 지원하지 않는 경우 (예 : int32) 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="3caee89e422d8b14349dfd91179d68f5bf83f941" translate="yes" xml:space="preserve">
          <source>Values are arranged in a single column.</source>
          <target state="translated">단일 열에 값이 배열됩니다.</target>
        </trans-unit>
        <trans-unit id="6b05271f29360283ea57832481b5d2414e24da34" translate="yes" xml:space="preserve">
          <source>Values are arranged in a single row.</source>
          <target state="translated">값은 단일 행으로 배열됩니다.</target>
        </trans-unit>
        <trans-unit id="bea8d5e308edcad1aa41d1eaa8c1da30651c7a09" translate="yes" xml:space="preserve">
          <source>Values are arranged in a single vector (column or vector).</source>
          <target state="translated">값은 단일 벡터 (열 또는 벡터)로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="7abecc70ce621891ed365aa4fe0e0c15db5a2f6d" translate="yes" xml:space="preserve">
          <source>Values are cast to double.</source>
          <target state="translated">값은 두 배로 캐스트됩니다.</target>
        </trans-unit>
        <trans-unit id="7335ad719780d655a19cae00aef676f04b1b897b" translate="yes" xml:space="preserve">
          <source>Variable in local scope</source>
          <target state="translated">로컬 범위의 변수</target>
        </trans-unit>
        <trans-unit id="aa7ff342d87790ec00ab223d9572f4bf32f49c70" translate="yes" xml:space="preserve">
          <source>Variable inheritance leads to a problem for &lt;code&gt;eval&lt;/code&gt; and scripts. If a new variable is created in a parent function, it is not clear what should happen in nested child functions. For example, consider a parent function &lt;code&gt;foo&lt;/code&gt; with a nested child function &lt;code&gt;bar&lt;/code&gt;:</source>
          <target state="translated">변수 상속은 &lt;code&gt;eval&lt;/code&gt; 및 스크립트에 문제를 일으 킵니다 . 부모 함수에서 새 변수를 만들면 중첩 자식 함수에서 어떤 일이 발생해야하는지 명확하지 않습니다. 예를 들어, 중첩 된 하위 기능 &lt;code&gt;bar&lt;/code&gt; 있는 상위 기능 &lt;code&gt;foo&lt;/code&gt; 를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="39232a9bb6d29d0ddc4ece303bfd34215b99c76f" translate="yes" xml:space="preserve">
          <source>Variable is either 6 or 7</source>
          <target state="translated">변수는 6 또는 7입니다</target>
        </trans-unit>
        <trans-unit id="4f921c45e3d6f1dfe800d0b286b0c3e665d98ac8" translate="yes" xml:space="preserve">
          <source>Variable of complex type.</source>
          <target state="translated">복잡한 유형의 변수.</target>
        </trans-unit>
        <trans-unit id="4b64410ac0390ce8fe1c8c3fe239ab494e8ce014" translate="yes" xml:space="preserve">
          <source>Variable with global scope.</source>
          <target state="translated">글로벌 범위를 갖는 변수.</target>
        </trans-unit>
        <trans-unit id="dc1a40fb65a9f98813fbe2e15dddb14ad8d21fc5" translate="yes" xml:space="preserve">
          <source>Variable-length Argument Lists</source>
          <target state="translated">가변 길이 인수 목록</target>
        </trans-unit>
        <trans-unit id="ec54138d6ad78a448eaa5e53cb1c539e6baf44a9" translate="yes" xml:space="preserve">
          <source>Variable-length Return Lists</source>
          <target state="translated">가변 길이 리턴리스트</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="a6572dd5d3ba28ab74d38e34c8b53b8587adb9e8" translate="yes" xml:space="preserve">
          <source>Variables in Octave do not have fixed types, so it is possible to first store a numeric value in a variable and then to later use the same name to hold a string value in the same program. Variables may not be used before they have been given a value. Doing so results in an error.</source>
          <target state="translated">옥타브의 변수에는 고정 유형이 없으므로 먼저 변수에 숫자 값을 저장 한 다음 나중에 같은 이름을 사용하여 같은 프로그램에서 문자열 값을 보유 할 수 있습니다. 변수는 값을 받기 전에는 사용할 수 없습니다. 그렇게하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8d531727f10a370fe03501ccab4d5a456f1c2e5b" translate="yes" xml:space="preserve">
          <source>Variables let you give names to values and refer to them later. You have already seen variables in many of the examples. The name of a variable must be a sequence of letters, digits and underscores, but it may not begin with a digit. Octave does not enforce a limit on the length of variable names, but it is seldom useful to have variables with names longer than about 30 characters. The following are all valid variable names</source>
          <target state="translated">변수를 사용하면 값에 이름을 지정하고 나중에 참조 할 수 있습니다. 많은 예제에서 이미 변수를 보았습니다. 변수 이름은 일련의 문자, 숫자 및 밑줄이어야하지만 숫자로 시작할 수 없습니다. 옥타브는 변수 이름의 길이에 제한을 두지 않지만 이름이 약 30 자보다 긴 변수를 갖는 것은 거의 유용하지 않습니다. 다음은 모두 유효한 변수 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1acba110170dc557bfef24339e229d77929d8eb3" translate="yes" xml:space="preserve">
          <source>Variables used in the body of a function are local to the function. Variables named in &lt;var&gt;arg-list&lt;/var&gt; and &lt;var&gt;ret-var&lt;/var&gt; are also local to the function. See &lt;a href=&quot;global-variables#Global-Variables&quot;&gt;Global Variables&lt;/a&gt;, for information about how to access global variables inside a function.</source>
          <target state="translated">함수 본문에 사용 된 변수는 함수에 국한됩니다. &lt;var&gt;arg-list&lt;/var&gt; 및 &lt;var&gt;ret-var&lt;/var&gt; 에 이름이 지정된 변수 도 함수의 로컬입니다. 함수 내에서 글로벌 변수에 액세스하는 방법에 대한 정보는 &lt;a href=&quot;global-variables#Global-Variables&quot;&gt;글로벌 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44957886e63e8fb6234dceff776611e3b84a79d9" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[X0 Y0 Z0]&lt;/code&gt; where X0, Y0 and Z0 indicate the position of the text anchor as defined by &lt;code&gt;verticalalignment&lt;/code&gt; and &lt;code&gt;horizontalalignment&lt;/code&gt;.</source>
          <target state="translated">벡터 &lt;code&gt;[X0 Y0 Z0]&lt;/code&gt; 여기서 X0, Y0 및 Z0은 &lt;code&gt;verticalalignment&lt;/code&gt; 정렬 및 &lt;code&gt;horizontalalignment&lt;/code&gt; 정렬로 정의 된 텍스트 앵커의 위치를 ​​나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="97f54acbd6e7286e089af944589f3dec2394d6f3" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[left bottom width height]&lt;/code&gt; defining the position and size of the figure (in &lt;code&gt;paperunits&lt;/code&gt; units) on the printed page. The position &lt;code&gt;[left bottom]&lt;/code&gt; defines the lower left corner of the figure on the page, and the size is defined by &lt;code&gt;[width height]&lt;/code&gt;. For output formats not implicitly rendered on paper, &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; define the size of the image and the position information is ignored. Setting &lt;code&gt;paperposition&lt;/code&gt; also forces the &lt;code&gt;paperpositionmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">인쇄 된 페이지 에서 그림의 위치와 크기 ( &lt;code&gt;paperunits&lt;/code&gt; 단위)를 정의하는 벡터 &lt;code&gt;[left bottom width height]&lt;/code&gt; . &lt;code&gt;[left bottom]&lt;/code&gt; 위치 는 페이지에서 그림의 왼쪽 아래 모서리를 정의하고 크기는 &lt;code&gt;[width height]&lt;/code&gt; 로 정의됩니다 . 종이에 암시 적으로 렌더링되지 않는 출력 형식의 경우 &lt;code&gt;width&lt;/code&gt; 와 &lt;code&gt;height&lt;/code&gt; 이미지의 크기를 정의하며 위치 정보는 무시됩니다. &lt;code&gt;paperposition&lt;/code&gt; 을 설정 하면 &lt;code&gt;paperpositionmode&lt;/code&gt; 속성이 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="2aa1d9038ff8a2dab6e94ca0b40bf554d7acbe74" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[width height]&lt;/code&gt; defining the size of the paper for printing. Setting the &lt;code&gt;papersize&lt;/code&gt; property to a value, not associated with one of the defined &lt;code&gt;papertypes&lt;/code&gt; and consistent with the setting for &lt;code&gt;paperorientation&lt;/code&gt;, forces the &lt;code&gt;papertype&lt;/code&gt; property to the value &lt;code&gt;&quot;&amp;lt;custom&amp;gt;&quot;&lt;/code&gt;. If &lt;code&gt;papersize&lt;/code&gt; is set to a value associated with a supported &lt;code&gt;papertype&lt;/code&gt; and consistent with the &lt;code&gt;paperorientation&lt;/code&gt;, the &lt;code&gt;papertype&lt;/code&gt; value is modified to the associated value.</source>
          <target state="translated">인쇄 할 용지의 크기를 정의하는 벡터 &lt;code&gt;[width height]&lt;/code&gt; . 설정 &lt;code&gt;papersize&lt;/code&gt; 이 아니라 정의 중 하나와 관련된 값으로 속성을 &lt;code&gt;papertypes&lt;/code&gt; 와의 설정과 일치 &lt;code&gt;paperorientation&lt;/code&gt; , 힘 &lt;code&gt;papertype&lt;/code&gt; 의 값 재산 &lt;code&gt;&quot;&amp;lt;custom&amp;gt;&quot;&lt;/code&gt; . 경우 &lt;code&gt;papersize&lt;/code&gt; 지원에 관련된 값으로 설정된다 &lt;code&gt;papertype&lt;/code&gt; 와 일치 &lt;code&gt;paperorientation&lt;/code&gt; 상기 &lt;code&gt;papertype&lt;/code&gt; 의 값은 연관된 값으로 변경된다.</target>
        </trans-unit>
        <trans-unit id="67699038122522bc2797537c29ca192d7af648ab" translate="yes" xml:space="preserve">
          <source>Vector &lt;code&gt;[x0 y0 width height]&lt;/code&gt; indicating the size and location of the text string.</source>
          <target state="translated">텍스트 문자열의 크기와 위치를 나타내는 벡터 &lt;code&gt;[x0 y0 width height]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c53abc884f54defa3ea68e7e4522b307846ca54a" translate="yes" xml:space="preserve">
          <source>Vector Formats</source>
          <target state="translated">벡터 형식</target>
        </trans-unit>
        <trans-unit id="0ad23280346c75fb000d733c0d2ee44f5a061494" translate="yes" xml:space="preserve">
          <source>Vector of the x-locations of the constraints.</source>
          <target state="translated">구속 조건의 x 위치 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="fe571c6e6beb571f8c03c757ff0aa2d3e93d7c04" translate="yes" xml:space="preserve">
          <source>Vector of x data to be plotted.</source>
          <target state="translated">플롯 할 x 데이터의 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="897e5b459141a66fb93741f122af3945d7a86aeb" translate="yes" xml:space="preserve">
          <source>Vector of y data to be plotted.</source>
          <target state="translated">플롯 할 y 데이터의 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="fa4cb8c084fa4f18a1fb16f8ff06d0277fea0a62" translate="yes" xml:space="preserve">
          <source>Vector of z data to be plotted.</source>
          <target state="translated">플롯 할 z 데이터의 벡터입니다.</target>
        </trans-unit>
        <trans-unit id="b364f229fad911735ff66df179b4739ee434117d" translate="yes" xml:space="preserve">
          <source>Vectorization and Faster Code Execution</source>
          <target state="translated">벡터화 및 더 빠른 코드 실행</target>
        </trans-unit>
        <trans-unit id="30e078f2b8dd5d172495b6d91ae09398ccb51d5c" translate="yes" xml:space="preserve">
          <source>Vectorization is a programming technique that uses vector operations instead of element-by-element loop-based operations. Besides frequently producing more succinct Octave code, vectorization also allows for better optimization in the subsequent implementation. The optimizations may occur either in Octave&amp;rsquo;s own Fortran, C, or C++ internal implementation, or even at a lower level depending on the compiler and external numerical libraries used to build Octave. The ultimate goal is to make use of your hardware&amp;rsquo;s vector instructions if possible or to perform other optimizations in software.</source>
          <target state="translated">벡터화는 요소 별 루프 기반 연산 대신 벡터 연산을 사용하는 프로그래밍 기술입니다. 더 간결한 Octave 코드를 자주 생성하는 것 외에도 벡터화를 통해 후속 구현에서 더 나은 최적화가 가능합니다. 최적화는 Octave의 자체 Fortran, C 또는 C ++ 내부 구현에서 수행되거나 Octave를 빌드하는 데 사용되는 컴파일러 및 외부 숫자 라이브러리에 따라 더 낮은 수준에서 발생할 수 있습니다. 궁극적 인 목표는 가능한 경우 하드웨어의 벡터 명령어를 사용하거나 소프트웨어에서 다른 최적화를 수행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d695d1236e1c651e8339eaef4a93939bcc52add0" translate="yes" xml:space="preserve">
          <source>Vectorization is not a concept unique to Octave, but it is particularly important because Octave is a matrix-oriented language. Vectorized Octave code will see a dramatic speed up (10X&amp;ndash;100X) in most cases.</source>
          <target state="translated">벡터화는 옥타브 고유의 개념은 아니지만 옥타브는 매트릭스 중심 언어이므로 특히 중요합니다. 벡터화 된 옥타브 코드는 대부분의 경우 10 배에서 100 배까지 빠른 속도를 보입니다.</target>
        </trans-unit>
        <trans-unit id="eb0af7e607a41324c9b4fb8ff3889109f3420c49" translate="yes" xml:space="preserve">
          <source>Vectorization is the preferred technique for eliminating loops and speeding up code. Nevertheless, it is not always possible to replace every loop. In such situations it may be worth trying Octave&amp;rsquo;s &lt;strong&gt;experimental&lt;/strong&gt; Just-In-Time (JIT) compiler.</source>
          <target state="translated">벡터화는 루프를 제거하고 코드 속도를 높이기 위해 선호되는 기술입니다. 그럼에도 불구하고 항상 모든 루프를 교체 할 수있는 것은 아닙니다. 이러한 상황에서는 Octave의 &lt;strong&gt;실험적&lt;/strong&gt; JIT (Just-In-Time) 컴파일러를 사용해 볼 가치가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfc0de63a87d87b4d6a24bb59c00ffe547bc8062" translate="yes" xml:space="preserve">
          <source>Vectorized arithmetic</source>
          <target state="translated">벡터화 된 산술</target>
        </trans-unit>
        <trans-unit id="906c0839a0ca512e1dfed0330564f49decf915ef" translate="yes" xml:space="preserve">
          <source>Vectors and matrices are the basic building blocks for numerical analysis. To create a new matrix and store it in a variable so that you can refer to it later, type the command</source>
          <target state="translated">벡터와 행렬은 수치 분석을위한 기본 구성 요소입니다. 나중에 참조 할 수 있도록 새 행렬을 만들어 변수에 저장하려면 다음 명령을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="8b7269fd52b69344cd4968a81696c09d1777f236" translate="yes" xml:space="preserve">
          <source>Verify that &lt;var&gt;str&lt;/var&gt; is an element, or substring of an element, in &lt;var&gt;strarray&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;strarray&lt;/var&gt; 에서 &lt;var&gt;str&lt;/var&gt; 이 요소 또는 요소의 하위 문자열인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="f28423aaef9c47032fe0ca2dabfc79f89b9a394e" translate="yes" xml:space="preserve">
          <source>Version of the package.</source>
          <target state="translated">패키지 버전.</target>
        </trans-unit>
        <trans-unit id="c7b9f12a190027c01c17052262e20d68fec7db28" translate="yes" xml:space="preserve">
          <source>Version of the package. A package version must be 3 numbers separated by dots.</source>
          <target state="translated">패키지 버전. 패키지 버전은 점으로 구분 된 3 개의 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="0e5bd7fc6a6706c0cd191404a654c5b501da8680" translate="yes" xml:space="preserve">
          <source>Vertex normals are used for lighting the edges or faces if the &lt;code&gt;edgelighting&lt;/code&gt; or &lt;code&gt;facelighting&lt;/code&gt; properties are set to &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt;. Setting &lt;code&gt;vertexnormals&lt;/code&gt; also forces the &lt;code&gt;vertexnormalsmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;</source>
          <target state="translated">정점 법선이 경우 에지 또는면을 조명 사용 &lt;code&gt;edgelighting&lt;/code&gt; 또는 &lt;code&gt;facelighting&lt;/code&gt; 속성으로 설정되는 &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; . &lt;code&gt;vertexnormals&lt;/code&gt; 을 설정 하면 &lt;code&gt;vertexnormalsmode&lt;/code&gt; 속성이 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="56b84d353d030d76594610924975f8ee4b318fcd" translate="yes" xml:space="preserve">
          <source>Vertical concatenation</source>
          <target state="translated">수직 연결</target>
        </trans-unit>
        <trans-unit id="679fc22f6747c468b572db6cb37e1452c05bfa2d" translate="yes" xml:space="preserve">
          <source>Via &lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObject&lt;/a&gt; one may create all kinds of Java objects but arrays. The latter are created through &lt;a href=&quot;java-interface-functions#XREFjavaArray&quot;&gt;javaArray&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;java-interface-functions#XREFjavaObject&quot;&gt;javaObject를&lt;/a&gt; 통해 배열을 제외한 모든 종류의 Java 오브젝트를 작성할 수 있습니다. 후자는 &lt;a href=&quot;java-interface-functions#XREFjavaArray&quot;&gt;javaArray를&lt;/a&gt; 통해 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e081ddeebc0690e5ed15d32123395a1da2626bfd" translate="yes" xml:space="preserve">
          <source>Voronoi Diagrams</source>
          <target state="translated">보로 노이 다이어그램</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="140917b714ce92e12d625053d6439ef7f783033e" translate="yes" xml:space="preserve">
          <source>W. Gautschi,</source>
          <target state="translated">W. Gautschi,</target>
        </trans-unit>
        <trans-unit id="8104eece38fcafda62ae9771ed3a38d5235875ca" translate="yes" xml:space="preserve">
          <source>W. H. Press, S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery,</source>
          <target state="translated">WH Press, SA Teukolsky, WT Vetterling 및 BP Flannery,</target>
        </trans-unit>
        <trans-unit id="e1bd81fd4e7add04c8589e9082d43b35cc08cbfe" translate="yes" xml:space="preserve">
          <source>W.H. Press, et al.,</source>
          <target state="translated">WH Press 등</target>
        </trans-unit>
        <trans-unit id="e1de3c1bc26c3633d304b416268f343189478036" translate="yes" xml:space="preserve">
          <source>WAV file</source>
          <target state="translated">WAV 파일</target>
        </trans-unit>
        <trans-unit id="064d699833935c584387ceca7de7f7ccdbec1825" translate="yes" xml:space="preserve">
          <source>WCONTINUE</source>
          <target state="translated">WCONTINUE</target>
        </trans-unit>
        <trans-unit id="076b297a10e9e8ac4bd3118b5753a370ada58faf" translate="yes" xml:space="preserve">
          <source>WCONTINUE ()</source>
          <target state="translated">계속 ()</target>
        </trans-unit>
        <trans-unit id="c29ccc7ab63074d02e790522a29d34b4c915cf86" translate="yes" xml:space="preserve">
          <source>WCOREDUMP</source>
          <target state="translated">WCOREDUMP</target>
        </trans-unit>
        <trans-unit id="fde9ddb1c6ad423eadc29a88cd1e19ebd6d9b9eb" translate="yes" xml:space="preserve">
          <source>WCOREDUMP (status)</source>
          <target state="translated">WCOREDUMP (상태)</target>
        </trans-unit>
        <trans-unit id="2bf1b97f2fc5265d0f7b0dd544056c7b69c3408a" translate="yes" xml:space="preserve">
          <source>WEXITSTATUS</source>
          <target state="translated">WEXITSTATUS</target>
        </trans-unit>
        <trans-unit id="2b200a6a1fb94ab463527efea9a6730322fb6a43" translate="yes" xml:space="preserve">
          <source>WEXITSTATUS (status)</source>
          <target state="translated">WEXITSTATUS (상태)</target>
        </trans-unit>
        <trans-unit id="cb30a8ff398e22c99931f32ecedf848a74b0149b" translate="yes" xml:space="preserve">
          <source>WIFCONTINUED</source>
          <target state="translated">WIFCONTINUED</target>
        </trans-unit>
        <trans-unit id="1302bcfb606a59a19245c066605aa0cc267f9579" translate="yes" xml:space="preserve">
          <source>WIFCONTINUED (status)</source>
          <target state="translated">WIFCONTINUED (상태)</target>
        </trans-unit>
        <trans-unit id="43044f54881faf0daf8e7ae1041687abfeebf5cb" translate="yes" xml:space="preserve">
          <source>WIFEXITED</source>
          <target state="translated">WIFEXITED</target>
        </trans-unit>
        <trans-unit id="c3b70e377fbf9ce88eb16148aed6d6f6a04062a1" translate="yes" xml:space="preserve">
          <source>WIFEXITED (status)</source>
          <target state="translated">WIFEXITED (상태)</target>
        </trans-unit>
        <trans-unit id="b38ae0ecf527f08e52210be925bf7bff13828dda" translate="yes" xml:space="preserve">
          <source>WIFSIGNALED</source>
          <target state="translated">WIFSIGNALED</target>
        </trans-unit>
        <trans-unit id="9e27a2a79367ed2139ec8712afcd5d01b5f2446d" translate="yes" xml:space="preserve">
          <source>WIFSIGNALED (status)</source>
          <target state="translated">WIFSIGNALED (상태)</target>
        </trans-unit>
        <trans-unit id="831f27b69c3adbdd25e1ac1a506c0b83abecbf5a" translate="yes" xml:space="preserve">
          <source>WIFSTOPPED</source>
          <target state="translated">WIFSTOPPED</target>
        </trans-unit>
        <trans-unit id="7423ab81504b5f4611464b67ad44073f196add4c" translate="yes" xml:space="preserve">
          <source>WIFSTOPPED (status)</source>
          <target state="translated">WIFSTOPPED (상태)</target>
        </trans-unit>
        <trans-unit id="2e31950e28a56c4fe6e7025b187b2fd4fefe4871" translate="yes" xml:space="preserve">
          <source>WINDOWS</source>
          <target state="translated">WINDOWS</target>
        </trans-unit>
        <trans-unit id="24c16f3291fd5a896a52fda5bcd7de9db4347df5" translate="yes" xml:space="preserve">
          <source>WNOHANG</source>
          <target state="translated">WNOHANG</target>
        </trans-unit>
        <trans-unit id="b09a74f262b47843101d1ab0729eff20f8aa8aae" translate="yes" xml:space="preserve">
          <source>WNOHANG ()</source>
          <target state="translated">노항 ()</target>
        </trans-unit>
        <trans-unit id="afd661bac1a8453aa3fae2861aaefbd7cafed675" translate="yes" xml:space="preserve">
          <source>WSTOPSIG</source>
          <target state="translated">WSTOPSIG</target>
        </trans-unit>
        <trans-unit id="a72d916fcdbfad9c081cb6dbe6baee55ab64a905" translate="yes" xml:space="preserve">
          <source>WSTOPSIG (status)</source>
          <target state="translated">WSTOPSIG (상태)</target>
        </trans-unit>
        <trans-unit id="62f4cb0ba7a925a5af714a1b21832001dffc25f5" translate="yes" xml:space="preserve">
          <source>WTERMSIG</source>
          <target state="translated">WTERMSIG</target>
        </trans-unit>
        <trans-unit id="000db3610bd3c8f4fcec8cbac8a287cecacbd71e" translate="yes" xml:space="preserve">
          <source>WTERMSIG (status)</source>
          <target state="translated">WTERMSIG (상태)</target>
        </trans-unit>
        <trans-unit id="030716508efb8b454e7fc70f999cc9c2690237e9" translate="yes" xml:space="preserve">
          <source>WUNTRACED</source>
          <target state="translated">WUNTRACED</target>
        </trans-unit>
        <trans-unit id="28435378a70e9f5ca97472f94b7f1db01d443bc1" translate="yes" xml:space="preserve">
          <source>WUNTRACED ()</source>
          <target state="translated">부정확 한 ()</target>
        </trans-unit>
        <trans-unit id="468ea8df2e1056b92e0bd8fa3299f565f90f97ee" translate="yes" xml:space="preserve">
          <source>Wait for any child process whose process group ID is equal to that of the Octave interpreter process.</source>
          <target state="translated">프로세스 그룹 ID가 Octave 인터프리터 프로세스의 프로세스 그룹 ID와 동일한 하위 프로세스를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="fbcec1b99dd4daf7031c5c0382bdd8238a2aeca1" translate="yes" xml:space="preserve">
          <source>Wait for any child process.</source>
          <target state="translated">자식 프로세스를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="a2a355abfe2c1aec648ce2d33f2cb0cc05a74e9d" translate="yes" xml:space="preserve">
          <source>Wait for mouse click or key press over the current figure window.</source>
          <target state="translated">현재 Figure 창에서 마우스 클릭 또는 키 누르기를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="452c7be077c586f18264a112ddb602c32810761f" translate="yes" xml:space="preserve">
          <source>Wait for process &lt;var&gt;pid&lt;/var&gt; to terminate.</source>
          <target state="translated">프로세스 &lt;var&gt;pid&lt;/var&gt; 가 종료 될 때까지 기다리십시오 .</target>
        </trans-unit>
        <trans-unit id="20b3952e5cee3e6ed958189dad26aa203a5decaa" translate="yes" xml:space="preserve">
          <source>Wait for termination of the child process with ID &lt;var&gt;pid&lt;/var&gt;.</source>
          <target state="translated">ID가 &lt;var&gt;pid&lt;/var&gt; 인 하위 프로세스가 종료 될 때까지 기다리십시오 .</target>
        </trans-unit>
        <trans-unit id="f605571af26352c56568bf4d89ad06344637c184" translate="yes" xml:space="preserve">
          <source>Wait for writes to complete.</source>
          <target state="translated">쓰기가 완료 될 때까지 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="49e115bb0fe7992e795f1a87645453a4c80623cb" translate="yes" xml:space="preserve">
          <source>Wait until signal is received or a child process exits (this is the default if the &lt;var&gt;options&lt;/var&gt; argument is missing).</source>
          <target state="translated">신호가 수신되거나 하위 프로세스가 종료 될 때까지 기다리십시오 ( &lt;var&gt;options&lt;/var&gt; 인수가 누락 된 경우 이것이 기본값 임).</target>
        </trans-unit>
        <trans-unit id="ee5ef2a91787b6f6be7393f1015ba70adf5fb44a" translate="yes" xml:space="preserve">
          <source>We can check for the existence of the &lt;code&gt;roots&lt;/code&gt;-method by calling:</source>
          <target state="translated">우리는 다음을 호출 하여 &lt;code&gt;roots&lt;/code&gt; -method 의 존재를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79c09bc369800f63ffc52df2e701ffa415aee783" translate="yes" xml:space="preserve">
          <source>We can reset it to be automatic:</source>
          <target state="translated">자동으로 재설정 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e30a7250e6458d65ee5a93c590faaa9a3039071e" translate="yes" xml:space="preserve">
          <source>We can set it back to automatic:</source>
          <target state="translated">다시 자동으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e53261564d68c5bd5857f91f39aa8b3e0d84e757" translate="yes" xml:space="preserve">
          <source>We can then move the camera further up the z-axis:</source>
          <target state="translated">그런 다음 카메라를 z 축 위로 더 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53cb3235557fd8a287032b9d976a495bf11a5ab7" translate="yes" xml:space="preserve">
          <source>We can turn the camera to point at a new target:</source>
          <target state="translated">새로운 대상을 가리 키도록 카메라를 돌릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="642a3b9920da70082a9f192e94403b16c854e10f" translate="yes" xml:space="preserve">
          <source>We only know it is the binary multiplication operator, but fortunately this operator appears only at one place in the code and thus we know which occurrence takes so much time. If there were multiple places, we would have to use the hierarchical profile to find out the exact place which uses up the time which is not covered in this example.</source>
          <target state="translated">우리는 그것이 이진수 곱셈 연산자라는 것을 알고 있지만, 운 좋게도이 연산자는 코드의 한 곳에만 나타나므로 어떤 발생이 많은 시간이 걸리는지 알고 있습니다. 여러 장소가있는 경우이 예제에서 다루지 않은 시간을 사용하는 정확한 장소를 찾으려면 계층 적 프로파일을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="23408b19b29e8e8495bb4b68733ada5f85fc2fd6" translate="yes" xml:space="preserve">
          <source>Wed</source>
          <target state="translated">Wed</target>
        </trans-unit>
        <trans-unit id="5656b9b79b0316fc611a9c30d2ffac25228b8371" translate="yes" xml:space="preserve">
          <source>Wednesday</source>
          <target state="translated">Wednesday</target>
        </trans-unit>
        <trans-unit id="c6edc7e26dc1a7f5b6823df1eddaac3ce4524caa" translate="yes" xml:space="preserve">
          <source>Week number of year with Monday as first day of week (00-53).</source>
          <target state="translated">월요일을 요일의 첫 번째 요일 (00-53)로 한 주 수입니다.</target>
        </trans-unit>
        <trans-unit id="70f74d2223f1c342ef962202c70c0da63c220737" translate="yes" xml:space="preserve">
          <source>Week number of year with Sunday as first day of week (00-53).</source>
          <target state="translated">일요일을 요일의 첫 번째 요일 (00-53)로 한 주 수입니다.</target>
        </trans-unit>
        <trans-unit id="ee45cb5a8bcaa82a716eb53485973b59915e1d52" translate="yes" xml:space="preserve">
          <source>What are the possible pairs?</source>
          <target state="translated">가능한 쌍은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="e2ce0061fb83880468b9b4664309a8b5d786eef1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&lt;var&gt;t&lt;/var&gt; = 1&lt;/code&gt;, return the pseudo-lower triangular Cholesky factor of the Pascal matrix (The sign of some columns may be negative). This matrix is its own inverse, that is &lt;code&gt;pascal (&lt;var&gt;n&lt;/var&gt;, 1) ^ 2 == eye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">하면 &lt;code&gt;&lt;var&gt;t&lt;/var&gt; = 1&lt;/code&gt; , (일부 열의 부호가 음수 일 수 있음) 파스칼 행렬의 의사 - 하 삼각 촐레 스키 인자를 반환한다. 이 행렬은 자체 역수입니다. 즉 &lt;code&gt;pascal (&lt;var&gt;n&lt;/var&gt;, 1) ^ 2 == eye (&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="de737b1bfe2b6c4124dd61165620e44b451901b1" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; are the coefficient vectors of two polynomials, the convolution represents the coefficient vector of the product polynomial.</source>
          <target state="translated">경우 및 &lt;var&gt;b&lt;/var&gt; 두 다항식의 계수 벡터이고,는 컨벌루션 제품 다항식의 계수 벡터를 나타낸다. &lt;var&gt;a&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4995c075b5e02832b91c4fb30e2511a97e8d3ca6" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;coorsys&lt;/var&gt; is set to &lt;code&gt;&quot;camera&quot;&lt;/code&gt;, the camera is moved left or right by rotating it around an axis parallel to the camera up vector (see &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt;). The input &lt;var&gt;dir&lt;/var&gt; should not be specified in this case. Example:</source>
          <target state="translated">&lt;var&gt;coorsys&lt;/var&gt; 가 &lt;code&gt;&quot;camera&quot;&lt;/code&gt; 로 설정 되면 카메라는 카메라 위로 벡터와 평행 한 축을 중심으로 카메라를 왼쪽 또는 오른쪽으로 움직입니다 ( &lt;a href=&quot;#XREFcamup&quot;&gt;camup&lt;/a&gt; 참조 ). 이 경우 입력 &lt;var&gt;dir&lt;/var&gt; 를 지정하지 않아야합니다. 예:</target>
        </trans-unit>
        <trans-unit id="fd3f6f263f14ef3b22f57692477e108fc9df95b0" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;file&lt;/var&gt; is already an absolute name, the name is checked against the file system instead of Octave&amp;rsquo;s loadpath. In this case, if &lt;var&gt;file&lt;/var&gt; exists it will be returned in &lt;var&gt;fname&lt;/var&gt;, otherwise an empty string is returned.</source>
          <target state="translated">때 &lt;var&gt;file&lt;/var&gt; 이미 절대 이름이며, 이름은 파일 시스템 대신 옥타브의 loadpath에 대해 확인됩니다. 이 경우 &lt;var&gt;file&lt;/var&gt; 이 존재하면 &lt;var&gt;fname&lt;/var&gt; 으로 반환되고 , 그렇지 않으면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2b9e49aba6e37fdfe93d1a16912c975867862b7c" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;filename&lt;/var&gt; does not have an extension the default filename extension</source>
          <target state="translated">때 &lt;var&gt;filename&lt;/var&gt; 기본 파일 확장명 확장이없는</target>
        </trans-unit>
        <trans-unit id="3b0bbce7bdb120458ad715afda62bec7454df6fe" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;m&lt;/var&gt; is the polynomial order &lt;var&gt;coefs&lt;/var&gt; must be of size: &lt;var&gt;ni&lt;/var&gt;-by-(&lt;var&gt;m&lt;/var&gt; + 1).</source>
          <target state="translated">경우 &lt;var&gt;m&lt;/var&gt; 은 인 다항식 차수 &lt;var&gt;coefs&lt;/var&gt; 는 : 크기 여야 &lt;var&gt;ni&lt;/var&gt; -by- ( &lt;var&gt;m&lt;/var&gt; + 1).</target>
        </trans-unit>
        <trans-unit id="694e49f1fd6c72fceedb93678a43e079cbc74cb5" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;method&lt;/var&gt; is &lt;code&gt;&quot;gaussian&quot;&lt;/code&gt;, &lt;var&gt;std_dev&lt;/var&gt; defines the standard deviation of the trivariate normal distribution function. &lt;var&gt;std_dev&lt;/var&gt; is either a vector of 3 elements representing the standard deviation of the Gaussian convolution kernel in x-, y- and z-directions or a scalar, in which case the same value is used in all three dimensions. The default value is 0.65.</source>
          <target state="translated">때는 &lt;var&gt;method&lt;/var&gt; 인 &lt;code&gt;&quot;gaussian&quot;&lt;/code&gt; , &lt;var&gt;std_dev&lt;/var&gt; 는 trivariate 정규 분포 함수의 표준 편차를 정의한다. &lt;var&gt;std_dev&lt;/var&gt; 는 x, y 및 z 방향으로 가우스 컨볼 루션 커널의 표준 편차를 나타내는 3 개의 요소로 구성된 벡터이거나 스칼라이며,이 경우 3 차원 모두에서 동일한 값이 사용됩니다. 기본값은 0.65입니다.</target>
        </trans-unit>
        <trans-unit id="6ecc1bc6c135afabcc544fed0475ca8f5b9ab546" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;mode&lt;/var&gt; is unspecified return the Cholesky factorization for &lt;var&gt;R&lt;/var&gt;. If &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;&quot;lower&quot;&lt;/code&gt; or &lt;code&gt;&quot;L&quot;&lt;/code&gt; then return the conjugate transpose &lt;code&gt;&lt;var&gt;R&lt;/var&gt;'&lt;/code&gt; which is a lower triangular factor. The conjugate transpose version is faster and uses less memory, but still returns the same values for all other outputs: &lt;var&gt;count&lt;/var&gt;, &lt;var&gt;h&lt;/var&gt;, &lt;var&gt;parent&lt;/var&gt;, and &lt;var&gt;post&lt;/var&gt;.</source>
          <target state="translated">시 &lt;var&gt;mode&lt;/var&gt; 의 콜레 인수 분해 지정되지 않은 수익이다 &lt;var&gt;R&lt;/var&gt; . 경우 &lt;var&gt;mode&lt;/var&gt; 있다 &lt;code&gt;&quot;lower&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;L&quot;&lt;/code&gt; 다음 켤레 전치의 반환 &lt;code&gt;&lt;var&gt;R&lt;/var&gt;'&lt;/code&gt; 낮은 삼각형 요소이다. 켤레 전치 버전은 더 빠르고 메모리를 적게 사용하지만 다른 모든 출력에 대해 동일한 값을 반환합니다. &lt;var&gt;count&lt;/var&gt; , &lt;var&gt;h&lt;/var&gt; , &lt;var&gt;parent&lt;/var&gt; 및 &lt;var&gt;post&lt;/var&gt; 와 .</target>
        </trans-unit>
        <trans-unit id="7488d9a9c93bc51549fe8079d976e327325bc29a" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;mu&lt;/var&gt; is present, evaluate the polynomial for (&lt;var&gt;x&lt;/var&gt;-&lt;var&gt;mu&lt;/var&gt;(1))/&lt;var&gt;mu&lt;/var&gt;(2).</source>
          <target state="translated">&lt;var&gt;mu&lt;/var&gt; 때 가 존재 ( &lt;var&gt;x&lt;/var&gt; - &lt;var&gt;mu&lt;/var&gt; (1)) / &lt;var&gt;mu&lt;/var&gt; (2)에 대한 다항식을 평가하십시오 .</target>
        </trans-unit>
        <trans-unit id="26ecedb3043c4886e7200e0345222f9f5de26946" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;n&lt;/var&gt; is positive, the dimensions of &lt;var&gt;x&lt;/var&gt; are shifted to the left, with the leading dimensions circulated to the end. If &lt;var&gt;n&lt;/var&gt; is negative, then the dimensions of &lt;var&gt;x&lt;/var&gt; are shifted to the right, with &lt;var&gt;n&lt;/var&gt; leading singleton dimensions added.</source>
          <target state="translated">하면 &lt;var&gt;n&lt;/var&gt; 의 크기, 양수 &lt;var&gt;x&lt;/var&gt; 끝에 순환의 주요 치수가 왼쪽으로 시프트된다. 경우 &lt;var&gt;n&lt;/var&gt; 은 마이너스, 다음의 치수 &lt;var&gt;x&lt;/var&gt; 함께 우측으로 시프트 &lt;var&gt;n&lt;/var&gt; 이 추가 차원 단일 선도.</target>
        </trans-unit>
        <trans-unit id="d14006ef50698960879a2803ad8dd919f78fab02" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;obj&lt;/var&gt; is a class object defined with a class constructor, then &lt;code&gt;subsindex&lt;/code&gt; is the overloading method that allows the conversion of this class object to a valid indexing vector. It is important to note that &lt;code&gt;subsindex&lt;/code&gt; must return a zero-based real integer vector of the class &lt;code&gt;&quot;double&quot;&lt;/code&gt;. For example, if the class constructor were</source>
          <target state="translated">때 &lt;var&gt;obj&lt;/var&gt; 클래스 생성자에 정의 된 클래스 오브젝트는,이다 &lt;code&gt;subsindex&lt;/code&gt; 유효한 벡터 인덱싱이 클래스 오브젝트의 변환을 허용하는 오버 방법. 그것은 것이 중요합니다 &lt;code&gt;subsindex&lt;/code&gt; 이 클래스의 0부터 실제 정수 벡터 반환해야 &lt;code&gt;&quot;double&quot;&lt;/code&gt; . 예를 들어 클래스 생성자가</target>
        </trans-unit>
        <trans-unit id="4567fb823ae76170233ac040de870155c18eb478" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;obj&lt;/var&gt; is a regular Java object, structure-like indexing can be used as a shortcut syntax. For instance, the following two statements are equivalent</source>
          <target state="translated">때 &lt;var&gt;obj&lt;/var&gt; 가 일반 자바 객체이며, 구조와 같은 색인 바로 가기 구문로 사용할 수 있습니다. 예를 들어, 다음 두 문장은 동일합니다</target>
        </trans-unit>
        <trans-unit id="f64e190e2c1a7c030df19bb530c4129cb6ee59d7" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;obj&lt;/var&gt; is a regular Java object, structure-like indexing can be used as a shortcut syntax. For instance, the two following statements are equivalent</source>
          <target state="translated">때 &lt;var&gt;obj&lt;/var&gt; 가 일반 자바 객체이며, 구조와 같은 색인 바로 가기 구문로 사용할 수 있습니다. 예를 들어, 다음 두 문장은 동일합니다</target>
        </trans-unit>
        <trans-unit id="c9ef636cdcb53552b8c8c4e3e8dbe072ad50d26f" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;str&lt;/var&gt; is a character string to be tested, and &lt;var&gt;strarray&lt;/var&gt; is a cellstr of valid values, then &lt;var&gt;validstr&lt;/var&gt; will be the validated form of &lt;var&gt;str&lt;/var&gt; where validation is defined as &lt;var&gt;str&lt;/var&gt; being a member or substring of &lt;var&gt;validstr&lt;/var&gt;. This is useful for both verifying and expanding short options, such as &lt;code&gt;&quot;r&quot;&lt;/code&gt;, to their longer forms, such as &lt;code&gt;&quot;red&quot;&lt;/code&gt;. If &lt;var&gt;str&lt;/var&gt; is a substring of &lt;var&gt;validstr&lt;/var&gt;, and there are multiple matches, the shortest match will be returned if all matches are substrings of each other. Otherwise, an error will be raised because the expansion of &lt;var&gt;str&lt;/var&gt; is ambiguous. All comparisons are case insensitive.</source>
          <target state="translated">경우 &lt;var&gt;str&lt;/var&gt; 테스트 될 수있는 문자열이며, &lt;var&gt;strarray&lt;/var&gt; 유효한 값이다 cellstr 다음 &lt;var&gt;validstr&lt;/var&gt; 은 의 형태 검증 것이다 &lt;var&gt;str&lt;/var&gt; 검증은 다음과 같이 정의된다 &lt;var&gt;str&lt;/var&gt; 구성원 인 또는 서브 스트링 &lt;var&gt;validstr&lt;/var&gt; . 이것은 &lt;code&gt;&quot;r&quot;&lt;/code&gt; 과 같은 짧은 옵션을 확인하고 &lt;code&gt;&quot;red&quot;&lt;/code&gt; 와 같은 더 긴 형식 으로 확장하는 데 유용합니다 . 경우 &lt;var&gt;str&lt;/var&gt; 의 문자열입니다 &lt;var&gt;validstr&lt;/var&gt; 는 , 다수의 일치가 가장 짧은 경기는 모든 경기가 서로의 문자열 경우 반환됩니다. 그렇지 않으면 &lt;var&gt;str&lt;/var&gt; 의 확장으로 인해 오류가 발생합니다.모호합니다. 모든 비교는 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f1fcac4821a81cc2e9378f58ccfb6fa8bf664ca" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;x&lt;/var&gt; is a vector, the function counts the number of elements of &lt;var&gt;x&lt;/var&gt; that fall in the histogram bins defined by &lt;var&gt;edges&lt;/var&gt;. This must be a vector of monotonically increasing values that define the edges of the histogram bins. &lt;code&gt;&lt;var&gt;n&lt;/var&gt;(k)&lt;/code&gt; contains the number of elements in &lt;var&gt;x&lt;/var&gt; for which &lt;code&gt;&lt;var&gt;edges&lt;/var&gt;(k) &amp;lt;= &lt;var&gt;x&lt;/var&gt; &amp;lt; &lt;var&gt;edges&lt;/var&gt;(k+1)&lt;/code&gt;. The final element of &lt;var&gt;n&lt;/var&gt; contains the number of elements of &lt;var&gt;x&lt;/var&gt; exactly equal to the last element of &lt;var&gt;edges&lt;/var&gt;.</source>
          <target state="translated">경우 &lt;var&gt;x&lt;/var&gt; 벡터는, 함수의 원소 개수 계산 &lt;var&gt;x&lt;/var&gt; 에 의해 정의 된 히스토그램 빈들에 빠지게 &lt;var&gt;edges&lt;/var&gt; . 이것은 히스토그램 빈의 가장자리를 정의하는 단조 증가하는 값으로 구성된 벡터 여야합니다. &lt;code&gt;&lt;var&gt;n&lt;/var&gt;(k)&lt;/code&gt; 는 &lt;var&gt;x&lt;/var&gt; 에서 &lt;code&gt;&lt;var&gt;edges&lt;/var&gt;(k) &amp;lt;= &lt;var&gt;x&lt;/var&gt; &amp;lt; &lt;var&gt;edges&lt;/var&gt;(k+1)&lt;/code&gt; 의 요소 수를 포함합니다 . &lt;var&gt;n&lt;/var&gt; 의 마지막 요소 에는 &lt;var&gt;x&lt;/var&gt; 의 요소 수가 &lt;var&gt;edges&lt;/var&gt; 의 마지막 요소와 정확히 같습니다 .</target>
        </trans-unit>
        <trans-unit id="61b6b915264e56a8aa3a5fdaf1395b5cabe4ff08" translate="yes" xml:space="preserve">
          <source>When &lt;var&gt;x&lt;/var&gt; is an &lt;em&gt;N&lt;/em&gt;-dimensional array, the computation is carried out along dimension &lt;var&gt;dim&lt;/var&gt;. If not specified &lt;var&gt;dim&lt;/var&gt; defaults to the first non-singleton dimension.</source>
          <target state="translated">경우 &lt;var&gt;x&lt;/var&gt; 인 &lt;em&gt;N&lt;/em&gt; 차원 배열 계산이 치수를 따라 수행된다 &lt;var&gt;dim&lt;/var&gt; . 지정하지 않으면 &lt;var&gt;dim&lt;/var&gt; 아닌 첫 번째 싱글 차원 기본값을.</target>
        </trans-unit>
        <trans-unit id="c79138aad94ef5bf99510e193da45bcf0b2f6e6c" translate="yes" xml:space="preserve">
          <source>When Ghostscript output is sent to a printer the size is determined by the figure&amp;rsquo;s &lt;code&gt;&quot;papersize&quot;&lt;/code&gt; property. When the output is sent to a file the size is determined by the plot box defined by the figure&amp;rsquo;s &lt;code&gt;&quot;paperposition&quot;&lt;/code&gt; property.</source>
          <target state="translated">Ghostscript 출력이 프린터로 전송 될 때 크기는 그림의 &lt;code&gt;&quot;papersize&quot;&lt;/code&gt; 속성에 의해 결정됩니다 . 출력이 파일로 전송 될 때 크기는 Figure의 &lt;code&gt;&quot;paperposition&quot;&lt;/code&gt; 속성으로 정의 된 플롯 상자에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="e5e70b5d527754991a7b4c09d7ec4c32805d272e" translate="yes" xml:space="preserve">
          <source>When Octave defines a function from a function file, it saves the full name of the file it read and the time stamp on the file. If the time stamp on the file changes, Octave may reload the file. When Octave is running interactively, time stamp checking normally happens at most once each time Octave prints the prompt. Searching for new function definitions also occurs if the current working directory changes.</source>
          <target state="translated">Octave는 함수 파일에서 함수를 정의 할 때 읽은 파일의 전체 이름과 타임 스탬프를 파일에 저장합니다. 파일의 타임 스탬프가 변경되면 Octave가 파일을 다시로드 할 수 있습니다. Octave가 대화식으로 실행되는 경우 일반적으로 Octave가 프롬프트를 인쇄 할 때마다 타임 스탬프 검사가 최대 한 번 발생합니다. 현재 작업 디렉토리가 변경되면 새 기능 정의 검색도 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="52ec4b8ffaa4ca3fafb4c2891c8b6ac8cd603ab1" translate="yes" xml:space="preserve">
          <source>When Octave encounters an identifier that is undefined, it first looks for variables or functions that are already compiled and currently listed in its symbol table. If it fails to find a definition there, it searches a list of directories (the &lt;em&gt;path&lt;/em&gt;) for files ending in</source>
          <target state="translated">Octave는 정의되지 않은 식별자를 발견하면 먼저 기호 테이블에 이미 컴파일되어 현재 나열된 변수 또는 함수를 찾습니다. 정의를 찾지 못하면 디렉토리 목록 ( &lt;em&gt;경로&lt;/em&gt; )에서 끝나는 파일을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="4c520daa9f795df05e8b6c6f9770633544ec7321" translate="yes" xml:space="preserve">
          <source>When Octave encounters the keyword &lt;code&gt;return&lt;/code&gt; inside a function or script, it returns control to the caller immediately. At the top level, the return statement is ignored. A &lt;code&gt;return&lt;/code&gt; statement is assumed at the end of every function definition.</source>
          <target state="translated">Octave 는 함수 나 스크립트 내 에서 키워드 &lt;code&gt;return&lt;/code&gt; 발견하면 즉시 호출자에게 제어를 리턴합니다. 최상위 레벨에서는 return 문이 무시됩니다. &lt;code&gt;return&lt;/code&gt; 문은 모든 함수 정의의 끝에서 가정한다.</target>
        </trans-unit>
        <trans-unit id="c7900268707201e3cdd5a5c57165b76abb483872" translate="yes" xml:space="preserve">
          <source>When Octave is used interactively, stdin is filtered through the command line editing functions.</source>
          <target state="translated">Octave가 대화식으로 사용될 때 stdin은 명령 행 편집 기능을 통해 필터링됩니다.</target>
        </trans-unit>
        <trans-unit id="baa175ac51214c83f1dcb0d708aeb733664bdb6e" translate="yes" xml:space="preserve">
          <source>When Octave parses a matrix expression, it examines the elements of the list to determine whether they are all constants. If they are, it replaces the list with a single matrix constant.</source>
          <target state="translated">Octave는 행렬 표현식을 구문 분석 할 때 목록의 요소를 검사하여 모두 상수인지 판별합니다. 일치하면 목록을 단일 행렬 상수로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="7c9f706844a8f031dd2fc78d4d1114f517a2bd23" translate="yes" xml:space="preserve">
          <source>When Octave parses a range expression, it examines the elements of the expression to determine whether they are all constants. If they are, it replaces the range expression with a single range constant.</source>
          <target state="translated">Octave는 범위 표현식을 구문 분석 할 때 표현식의 요소가 모두 상수인지 판별합니다. 만약 그렇다면, 범위 표현식을 단일 범위 상수로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="4e0224789b6c270f9b4e588e3465fcdb57c391b8" translate="yes" xml:space="preserve">
          <source>When Octave starts, it looks for commands to execute from the files in the following list. These files may contain any valid Octave commands, including function definitions.</source>
          <target state="translated">Octave가 시작되면 다음 목록의 파일에서 실행할 명령을 찾습니다. 이 파일에는 기능 정의를 포함하여 유효한 Octave 명령이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e96f3b7349824078503e874ace920f192463a21" translate="yes" xml:space="preserve">
          <source>When a &lt;em&gt;matching failure&lt;/em&gt; occurs, &lt;code&gt;scanf&lt;/code&gt; returns immediately, leaving the first non-matching character as the next character to be read from the stream, and &lt;code&gt;scanf&lt;/code&gt; returns all the items that were successfully converted.</source>
          <target state="translated">&lt;em&gt;일치하는 실패&lt;/em&gt; 가 발생하면 &lt;code&gt;scanf&lt;/code&gt; 는 즉시 반환 하고 &lt;em&gt;일치하지&lt;/em&gt; 않는 첫 번째 문자는 스트림에서 읽을 다음 문자로 남겨두고 &lt;code&gt;scanf&lt;/code&gt; 는 성공적으로 변환 된 모든 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da49fdf676149f6aed230750772287e9985419b3" translate="yes" xml:space="preserve">
          <source>When a colon is used in the special case of 1-D indexing the result is always a column vector. Creating column vectors with a colon index is a very frequently encountered code idiom and is faster and generally clearer than calling &lt;code&gt;reshape&lt;/code&gt; for this case.</source>
          <target state="translated">1 차원 인덱싱의 특수한 경우 콜론을 사용하면 결과는 항상 열 벡터입니다. 콜론 인덱스를 사용하여 열 벡터를 생성하는 것은 코드 관용구에서 자주 발생 &lt;code&gt;reshape&lt;/code&gt; 경우에는 형태 변경을 호출하는 것보다 빠르고 명확 합니다.</target>
        </trans-unit>
        <trans-unit id="99ca90ea19dc3cda312567b4253b71262f867fde" translate="yes" xml:space="preserve">
          <source>When a file is re-parsed, such as when it is modified outside the GUI, all breakpoints within the file are cleared.</source>
          <target state="translated">GUI 외부에서 파일을 수정하는 등 파일을 다시 구문 분석하면 파일 내의 모든 중단 점이 지워집니다.</target>
        </trans-unit>
        <trans-unit id="847a89195b78ad6eb45989f810811c217341b094" translate="yes" xml:space="preserve">
          <source>When a function is called, Octave searches a list of directories for a file that contains the function declaration. This list of directories is known as the load path. By default the load path contains a list of directories distributed with Octave plus the current working directory. To see your current load path call the &lt;code&gt;path&lt;/code&gt; function without any input or output arguments.</source>
          <target state="translated">함수가 호출되면 Octave는 함수 선언이 포함 된 파일의 디렉토리 목록을 검색합니다. 이 디렉토리 목록을로드 경로라고합니다. 기본적으로로드 경로에는 Octave와 함께 배포 된 디렉토리 및 현재 작업 디렉토리가 포함됩니다. 현재로드 경로를 보려면 입력 또는 출력 인수없이 &lt;code&gt;path&lt;/code&gt; 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f045d0b3d7eb731dd6846eb395ba5c8f430a0ca" translate="yes" xml:space="preserve">
          <source>When a light object is present in an axes object, and the properties &lt;code&gt;&quot;EdgeLighting&quot;&lt;/code&gt; or &lt;code&gt;&quot;FaceLighting&quot;&lt;/code&gt; of a &lt;code&gt;patch&lt;/code&gt; or &lt;code&gt;surface&lt;/code&gt; object are set to a value other than &lt;code&gt;&quot;none&quot;&lt;/code&gt;, these objects are drawn with lighting effects. Supported values for Lighting properties are &lt;code&gt;&quot;none&quot;&lt;/code&gt; (no lighting effects), &lt;code&gt;&quot;flat&quot;&lt;/code&gt; (faceted look of the objects), and &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; (linear interpolation of the lighting effects between the vertices). If the lighting mode is set to &lt;code&gt;&quot;flat&quot;&lt;/code&gt;, the &lt;code&gt;&quot;FaceNormals&quot;&lt;/code&gt; property is used for lighting. For &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt;, the &lt;code&gt;&quot;VertexNormals&quot;&lt;/code&gt; property is used.</source>
          <target state="translated">광선 오브젝트가 좌표축 오브젝트 에 있고 &lt;code&gt;patch&lt;/code&gt; 또는 &lt;code&gt;surface&lt;/code&gt; 오브젝트 의 &lt;code&gt;&quot;EdgeLighting&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;FaceLighting&quot;&lt;/code&gt; 특성 이 &lt;code&gt;&quot;none&quot;&lt;/code&gt; 이외의 값으로 설정된 경우 이러한 오브젝트는 조명 효과로 그려집니다. 조명 속성에 지원되는 값은 &lt;code&gt;&quot;none&quot;&lt;/code&gt; (조명 효과 없음), &lt;code&gt;&quot;flat&quot;&lt;/code&gt; (객체의 표면 모양) 및 &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; (정점 사이의 조명 효과의 선형 보간)입니다. 조명 모드가 &lt;code&gt;&quot;flat&quot;&lt;/code&gt; 으로 설정 되면 &lt;code&gt;&quot;FaceNormals&quot;&lt;/code&gt; 속성이 조명에 사용됩니다. 들어 &lt;code&gt;&quot;gouraud&quot;&lt;/code&gt; 는 &lt;code&gt;&quot;VertexNormals&quot;&lt;/code&gt; 속성이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3b89d458e581074fb64619088ee0b2a2dc4efab5" translate="yes" xml:space="preserve">
          <source>When a second output argument is requested an index matrix is also returned. The &lt;var&gt;idx&lt;/var&gt; matrix has the same size as &lt;var&gt;x&lt;/var&gt;. Each element of &lt;var&gt;idx&lt;/var&gt; contains the index of the histogram bin in which the corresponding element of &lt;var&gt;x&lt;/var&gt; was counted.</source>
          <target state="translated">두 번째 출력 인수가 요청되면 인덱스 매트릭스도 리턴됩니다. &lt;var&gt;idx&lt;/var&gt; 매트릭스와 동일한 크기를 갖는 &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;idx&lt;/var&gt; 의 각 요소는 &lt;var&gt;x&lt;/var&gt; 의 해당 요소 가 계산 된 히스토그램 빈의 색인을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="3a0ced3835eb9e85e77a6614ba80c927315d2723" translate="yes" xml:space="preserve">
          <source>When a test fails, you will see something like:</source>
          <target state="translated">테스트가 실패하면 다음과 같은 내용이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="89801f7a126b1478d4820e2e71f4e68d005c8fdf" translate="yes" xml:space="preserve">
          <source>When adding a scalar to a range, subtracting a scalar from it (or subtracting a range from a scalar) and multiplying by scalar, Octave will attempt to avoid unpacking the range and keep the result as a range, too, if it can determine that it is safe to do so. For instance, doing</source>
          <target state="translated">스칼라를 범위에 추가하고 스칼라를 빼거나 (또는 ​​스칼라에서 범위를 빼기) 스칼라를 곱하면 옥타브는 범위를 풀지 않고 결과를 범위로 유지하려고 시도합니다. 그렇게하는 것이 안전합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="fcce64ef5e4993e4795757b8304569a85a8b6b34" translate="yes" xml:space="preserve">
          <source>When an error has been handled it is possible to raise it again. This can be useful when an error needs to be detected, but the program should still abort. This is possible using the &lt;code&gt;rethrow&lt;/code&gt; function. The previous example can now be changed to count the number of errors related to the &amp;lsquo;</source>
          <target state="translated">오류가 처리되면 다시 제기 할 수 있습니다. 이것은 오류를 감지해야 할 때 유용하지만 프로그램은 여전히 ​​중단되어야합니다. 이것은 다시 &lt;code&gt;rethrow&lt;/code&gt; 기능을 사용하여 가능 합니다. 앞의 예를 변경하여 '</target>
        </trans-unit>
        <trans-unit id="859fa22eb96df5664bbd8a907389e5c7f95a2470" translate="yes" xml:space="preserve">
          <source>When an error occurs, it can be detected and handled using the &lt;code&gt;try&lt;/code&gt; statement as described in &lt;a href=&quot;the-try-statement#The-try-Statement&quot;&gt;The try Statement&lt;/a&gt;. As an example, the following piece of code counts the number of errors that occurs during a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">오류가 발생하면, 그것은 감지하고 사용하여 처리 할 수 있습니다 &lt;code&gt;try&lt;/code&gt; 에 설명 된대로 문 &lt;a href=&quot;the-try-statement#The-try-Statement&quot;&gt;은 try 문&lt;/a&gt; . 예를 들어, 다음 코드는 &lt;code&gt;for&lt;/code&gt; 루프 중에 발생하는 오류 수를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="c59e5a4f88ba50e51b0b56eb5d9e33f7a7c17b69" translate="yes" xml:space="preserve">
          <source>When applied to an array (possibly multi-dimensional) with &lt;var&gt;n&lt;/var&gt; columns, &lt;var&gt;fcn&lt;/var&gt; may return a result in either of two formats: Format 1) an array of size 1-by-&lt;var&gt;n&lt;/var&gt;-by-&lt;var&gt;dim3&lt;/var&gt;-by-&amp;hellip;-by-&lt;var&gt;dimN&lt;/var&gt;. This is the typical output format from Octave core functions. Type &lt;code&gt;demo (&quot;movfun&quot;, 5)&lt;/code&gt; for an example of this use case. Format 2) a row vector of length &lt;code&gt;&lt;var&gt;n&lt;/var&gt; * &lt;var&gt;numel_higher_dims&lt;/var&gt;&lt;/code&gt; where &lt;var&gt;numel_higher_dims&lt;/var&gt; is &lt;code&gt;prod&amp;nbsp;(size&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;)(3:end))&lt;/code&gt;. The output of &lt;var&gt;fcn&lt;/var&gt; for the i-th input column must be found in the output at indices &lt;code&gt;i:&lt;var&gt;n&lt;/var&gt;:(&lt;var&gt;n&lt;/var&gt;*&lt;var&gt;numel_higher_dims&lt;/var&gt;)&lt;/code&gt;. This format is useful when concatenating functions into arrays, or when using &lt;code&gt;nthargout&lt;/code&gt;. Type &lt;code&gt;demo (&quot;movfun&quot;, 6)&lt;/code&gt; for an example of this case.</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt; 개의 열 이있는 배열 (다차원 일 수도 있음)에 적용 할 경우 &lt;var&gt;fcn&lt;/var&gt; 은 다음 두 가지 형식 중 하나로 결과를 반환 할 수 있습니다. 형식 1) 1 x &lt;var&gt;n&lt;/var&gt; x &lt;var&gt;dim3&lt;/var&gt; x x ... x &lt;var&gt;dimN&lt;/var&gt; n 크기의 배열 . 이것은 Octave 핵심 기능의 일반적인 출력 형식입니다. 입력 &lt;code&gt;demo (&quot;movfun&quot;, 5)&lt;/code&gt; 이 사용 사례의 예. 형식 2) 길이 &lt;code&gt;&lt;var&gt;n&lt;/var&gt; * &lt;var&gt;numel_higher_dims&lt;/var&gt;&lt;/code&gt; 의 행 벡터 여기서 &lt;var&gt;numel_higher_dims&lt;/var&gt; 는 &lt;code&gt;prod&amp;nbsp;(size&amp;nbsp;(&lt;var&gt;x&lt;/var&gt;)(3:end))&lt;/code&gt; 입니다. 출력 &lt;var&gt;fcn&lt;/var&gt; i 번째 열에 대한 입력은 인덱스에서의 출력에서 발견되어야 &lt;code&gt;i:&lt;var&gt;n&lt;/var&gt;:(&lt;var&gt;n&lt;/var&gt;*&lt;var&gt;numel_higher_dims&lt;/var&gt;)&lt;/code&gt; . 이 형식은 함수를 배열로 연결하거나 &lt;code&gt;nthargout&lt;/code&gt; 을 사용할 때 유용 합니다. 입력 &lt;code&gt;demo (&quot;movfun&quot;, 6)&lt;/code&gt; 이 경우의 예.</target>
        </trans-unit>
        <trans-unit id="824638cd2a745728fa51a300c39faf125f21b35f" translate="yes" xml:space="preserve">
          <source>When called from a class constructor, mark the object currently constructed as having a higher precedence than &lt;var&gt;class_name&lt;/var&gt;.</source>
          <target state="translated">클래스 생성자에서 호출 될 때 현재 생성 된 객체를 &lt;var&gt;class_name&lt;/var&gt; 보다 우선 순위가 높은 것으로 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="039a7dd9eb9ffffd64e5c4c034f79ee9f16f87d0" translate="yes" xml:space="preserve">
          <source>When called from a class constructor, mark the object currently constructed as having a lower precedence than &lt;var&gt;class_name&lt;/var&gt;.</source>
          <target state="translated">클래스 생성자에서 호출 될 때 현재 생성 된 객체를 &lt;var&gt;class_name&lt;/var&gt; 보다 우선 순위가 낮은 것으로 표시하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c2a1679f85b4d75684ac4fc31eabdd3d1631dd6" translate="yes" xml:space="preserve">
          <source>When called from an m-file function, the error is prefixed with the name of the caller function.</source>
          <target state="translated">m 파일 함수에서 호출하면 오류 앞에 호출자 함수 이름이 붙습니다.</target>
        </trans-unit>
        <trans-unit id="96a0116fd9380c88cb0ba8c36cf13ad9b13623fa" translate="yes" xml:space="preserve">
          <source>When called from inside a function with the &lt;code&gt;&quot;local&quot;&lt;/code&gt; option, the variable is changed locally for the function and any subroutines it calls. The original variable value is restored when exiting the function.</source>
          <target state="translated">&lt;code&gt;&quot;local&quot;&lt;/code&gt; 옵션을 사용하여 함수 내부에서 호출 하면 함수 및 함수가 호출하는 서브 루틴에 대해 변수가 로컬로 변경됩니다. 기능을 종료하면 원래 변수 값이 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="9c17b861f4d3587e1da85197e81e2b1159332e7b" translate="yes" xml:space="preserve">
          <source>When called this function returns values like this</source>
          <target state="translated">이 함수를 호출하면 다음과 같은 값을 반환합니다</target>
        </trans-unit>
        <trans-unit id="2d914b672c64d0b023edc1d1407d6e96642eab89" translate="yes" xml:space="preserve">
          <source>When called with &lt;code&gt;&quot;KeyType&quot;&lt;/code&gt; and &lt;code&gt;&quot;ValueType&quot;&lt;/code&gt; arguments, create an empty map with the specified types. The inputs &lt;var&gt;kt&lt;/var&gt; and &lt;var&gt;vt&lt;/var&gt; are the types for the keys and values of the map respectively. Allowed values for &lt;var&gt;kt&lt;/var&gt; are &lt;code&gt;&quot;char&quot;&lt;/code&gt;, &lt;code&gt;&quot;double&quot;&lt;/code&gt;, &lt;code&gt;&quot;single&quot;&lt;/code&gt;, &lt;code&gt;&quot;int32&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint32&quot;&lt;/code&gt;, &lt;code&gt;&quot;int64&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint64&quot;&lt;/code&gt;. Allowed values for &lt;var&gt;vt&lt;/var&gt; are &lt;code&gt;&quot;any&quot;&lt;/code&gt;, &lt;code&gt;&quot;char&quot;&lt;/code&gt;, &lt;code&gt;&quot;double&quot;&lt;/code&gt;, &lt;code&gt;&quot;single&quot;&lt;/code&gt;, &lt;code&gt;&quot;int32&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint32&quot;&lt;/code&gt;, &lt;code&gt;&quot;int64&quot;&lt;/code&gt;, &lt;code&gt;&quot;uint64&quot;&lt;/code&gt;, &lt;code&gt;&quot;logical&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;KeyType&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;ValueType&quot;&lt;/code&gt; 인수 와 함께 호출되면 지정된 유형의 빈 맵을 작성하십시오. 입력 &lt;var&gt;kt&lt;/var&gt; 와 &lt;var&gt;vt&lt;/var&gt; 는 각각 맵의 키와 값에 대한 유형입니다. &lt;var&gt;kt&lt;/var&gt; 에 허용되는 값 은 &lt;code&gt;&quot;char&quot;&lt;/code&gt; , &lt;code&gt;&quot;double&quot;&lt;/code&gt; , &lt;code&gt;&quot;single&quot;&lt;/code&gt; , &lt;code&gt;&quot;int32&quot;&lt;/code&gt; , &lt;code&gt;&quot;uint32&quot;&lt;/code&gt; , &lt;code&gt;&quot;int64&quot;&lt;/code&gt; , &lt;code&gt;&quot;uint64&quot;&lt;/code&gt; 입니다. &lt;var&gt;vt&lt;/var&gt; 에 허용되는 값 은 &lt;code&gt;&quot;any&quot;&lt;/code&gt; , &lt;code&gt;&quot;char&quot;&lt;/code&gt; , &lt;code&gt;&quot;double&quot;&lt;/code&gt; , &lt;code&gt;&quot;single&quot;&lt;/code&gt; 입니다., &lt;code&gt;&quot;int32&quot;&lt;/code&gt; , &lt;code&gt;&quot;uint32&quot;&lt;/code&gt; , &lt;code&gt;&quot;int64&quot;&lt;/code&gt; , &lt;code&gt;&quot;uint64&quot;&lt;/code&gt; , &lt;code&gt;&quot;logical&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e0e3a11e352213adb3532928a8e434f165ac739" translate="yes" xml:space="preserve">
          <source>When called with a character string &lt;var&gt;name&lt;/var&gt;, return the numeric value of errno which corresponds to the specified error code. If &lt;var&gt;name&lt;/var&gt; is not a recognized error code then -1 is returned.</source>
          <target state="translated">문자열 &lt;var&gt;name&lt;/var&gt; 과 함께 호출되면 지정된 오류 코드에 해당하는 errno의 숫자 값을 리턴하십시오. &lt;var&gt;name&lt;/var&gt; 이 인식 된 오류 코드가 아닌 경우 -1이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5bfea2121297bd44aeb812ca1127ccf61ad46c4f" translate="yes" xml:space="preserve">
          <source>When called with a complex-valued argument, the function &lt;code&gt;f&lt;/code&gt; returns the data structure containing the real and imaginary parts of the original function argument.</source>
          <target state="translated">복소수 인수로 호출하면 함수 &lt;code&gt;f&lt;/code&gt; 는 원래 함수 인수의 실수 부와 허수 부를 포함하는 데이터 구조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="edbf4e93968442f70206d0de673d69ae64a06572" translate="yes" xml:space="preserve">
          <source>When called with a list of parameter/value pairs, return an options structure with only the named parameters initialized.</source>
          <target state="translated">매개 변수 / 값 쌍의 목록과 함께 호출되면 이름 지정된 매개 변수 만 초기화 된 옵션 구조를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="0e14d8b4461d46b6d55b9662b41e8e1a76d1d7df" translate="yes" xml:space="preserve">
          <source>When called with a numeric input &lt;var&gt;val&lt;/var&gt;, set the current value of errno to the specified value. The previous value of errno is returned as &lt;var&gt;err&lt;/var&gt;.</source>
          <target state="translated">숫자 입력 &lt;var&gt;val&lt;/var&gt; 로 호출 할 때 errno의 현재 값을 지정된 값으로 설정하십시오. errno의 이전 값은 &lt;var&gt;err&lt;/var&gt; 로 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="62cba9190ba370e806424f801982f0fe0a6cbf9d" translate="yes" xml:space="preserve">
          <source>When called with a second output argument, return the handle of the figure containing the object whose callback is currently executing. If no callback is executing the second output is also set to the empty matrix.</source>
          <target state="translated">두 번째 출력 인수와 함께 호출되면 콜백이 현재 실행중인 객체가 포함 된 Figure의 핸들을 반환합니다. 콜백이 실행되고 있지 않으면 두 번째 출력도 빈 행렬로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7844c88f0ba438fd5924714a1164282cad9c4fba" translate="yes" xml:space="preserve">
          <source>When called with a single argument &lt;var&gt;h&lt;/var&gt; which is a handle to an existing uibuttongroup object, switch the focus to the specified uibuttongroup. This functionality is not currently implemented.</source>
          <target state="translated">기존 uibuttongroup 객체에 대한 핸들 인 단일 인수 &lt;var&gt;h&lt;/var&gt; 를 사용하여 호출 하면 포커스를 지정된 uibuttongroup으로 전환합니다. 이 기능은 현재 구현되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f3a552c9f39f9927a6b71b217f4fb0c29db4b163" translate="yes" xml:space="preserve">
          <source>When called with a single argument &lt;var&gt;h&lt;/var&gt; which is a handle to an existing uicontrol object, switch the keyboard focus to the specified uicontrol. As a result, the uicontrol object will receive keyboard events that can be processed using the &lt;code&gt;&quot;keypressfcn&quot;&lt;/code&gt; callback.</source>
          <target state="translated">기존 uicontrol 객체에 대한 핸들 인 단일 인수 &lt;var&gt;h&lt;/var&gt; 를 사용하여 호출 하면 키보드 포커스를 지정된 uicontrol로 전환합니다. 결과적으로 uicontrol 객체는 &lt;code&gt;&quot;keypressfcn&quot;&lt;/code&gt; 콜백을 사용하여 처리 할 수있는 키보드 이벤트를 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="63b8ce3e0181a98a42c07267817da95c9fe9b529" translate="yes" xml:space="preserve">
          <source>When called with a single argument &lt;var&gt;x&lt;/var&gt; this is equivalent to</source>
          <target state="translated">단일 인수 &lt;var&gt;x&lt;/var&gt; 로 호출하면 이것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b82cbbab95e9006e69472b0f62b9c34d0913a47c" translate="yes" xml:space="preserve">
          <source>When called with a single argument, return a square matrix with the dimension specified.</source>
          <target state="translated">단일 인수로 호출하면 지정된 차원을 가진 정사각 행렬을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6f6988cfd88535d9cdec6191dbfec261b7174068" translate="yes" xml:space="preserve">
          <source>When called with a single input &lt;var&gt;name&lt;/var&gt; set the default graphics toolkit to &lt;var&gt;name&lt;/var&gt;. If the toolkit is not already loaded, it is initialized by calling the function &lt;code&gt;__init_&lt;var&gt;name&lt;/var&gt;__&lt;/code&gt;. If the first input is a list of figure handles, &lt;var&gt;hlist&lt;/var&gt;, then the graphics toolkit is set to &lt;var&gt;name&lt;/var&gt; for these figures only.</source>
          <target state="translated">단일 입력 &lt;var&gt;name&lt;/var&gt; 호출되면 기본 그래픽 툴킷을 &lt;var&gt;name&lt;/var&gt; 으로 설정하십시오 . 툴킷이 아직로드되지 않은 경우 &lt;code&gt;__init_&lt;var&gt;name&lt;/var&gt;__&lt;/code&gt; 함수를 호출하여 초기화됩니다 . 첫 번째 입력이 그림 핸들 목록 &lt;var&gt;hlist&lt;/var&gt; 이면 그래픽 툴킷은 이러한 그림의 &lt;var&gt;name&lt;/var&gt; 으로 만 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="196b200950ccf8fceca4cd270194995b78d12736" translate="yes" xml:space="preserve">
          <source>When called with a single input the current waitbar, if it exists, is updated to the new value &lt;var&gt;frac&lt;/var&gt;. If there are multiple outstanding waitbars they can be updated individually by passing the handle &lt;var&gt;h&lt;/var&gt; of the specific waitbar to modify.</source>
          <target state="translated">단일 입력으로 호출되면 현재 대기 막대가있는 경우 새 값 &lt;var&gt;frac&lt;/var&gt; 로 업데이트됩니다 . 미해결 대기 막대가 여러 개인 경우 특정 대기 막대 의 핸들 &lt;var&gt;h&lt;/var&gt; 를 전달하여 개별적으로 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a9bd05b3be9e5cac31684e9c6dc122df02eeb69" translate="yes" xml:space="preserve">
          <source>When called with a single output argument &lt;code&gt;isosurface&lt;/code&gt; returns a structure array &lt;var&gt;fv&lt;/var&gt; that contains the fields &lt;var&gt;faces&lt;/var&gt; and &lt;var&gt;vertices&lt;/var&gt; computed at the points &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; where &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt;. The output &lt;var&gt;fv&lt;/var&gt; can be used directly as input to the &lt;code&gt;patch&lt;/code&gt; function.</source>
          <target state="translated">단일 출력 인자로 호출 할 때 &lt;code&gt;isosurface&lt;/code&gt; 반환 구조 배열 &lt;var&gt;fv&lt;/var&gt; 필드에 포함 된 &lt;var&gt;faces&lt;/var&gt; 과 &lt;var&gt;vertices&lt;/var&gt; 포인트에서 계산을 &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; . 출력 &lt;var&gt;fv&lt;/var&gt; 는 &lt;code&gt;patch&lt;/code&gt; 기능 에 대한 입력으로 직접 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53fa03358bb6263852d175fd396a7d5d0eba9215" translate="yes" xml:space="preserve">
          <source>When called with a single output argument, &lt;code&gt;isocaps&lt;/code&gt; returns a structure array &lt;var&gt;fvc&lt;/var&gt; with the fields: &lt;code&gt;faces&lt;/code&gt;, &lt;code&gt;vertices&lt;/code&gt;, and &lt;code&gt;facevertexcdata&lt;/code&gt;. The results are computed at the points &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; where &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt;. The output &lt;var&gt;fvc&lt;/var&gt; can be used directly as input to the &lt;code&gt;patch&lt;/code&gt; function.</source>
          <target state="translated">단일 출력 인수로 호출하면 &lt;code&gt;isocaps&lt;/code&gt; 는 &lt;code&gt;faces&lt;/code&gt; , &lt;code&gt;vertices&lt;/code&gt; 및 &lt;code&gt;facevertexcdata&lt;/code&gt; 필드와 함께 구조 배열 &lt;var&gt;fvc&lt;/var&gt; 를 반환합니다 . 결과는 &lt;code&gt;[&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] = meshgrid (1:l, 1:m, 1:n)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; , &lt;var&gt;z&lt;/var&gt; ] = meshgrid (1 : l, 1 : m, 1 : n) 지점에서 계산되며, 여기서 &lt;code&gt;[l, m, n] = size (&lt;var&gt;v&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;v&lt;/var&gt; ) 입니다. 출력 &lt;var&gt;fvc&lt;/var&gt; 는 &lt;code&gt;patch&lt;/code&gt; 기능 에 대한 입력으로 직접 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f978f0a6bde183600f1928fa08d2c756d463324" translate="yes" xml:space="preserve">
          <source>When called with a single size argument, return a square matrix with the dimension specified. When called with more than one scalar argument the first two arguments are taken as the number of rows and columns and any further arguments specify additional matrix dimensions. The size may also be specified with a vector of dimensions &lt;var&gt;sz&lt;/var&gt;.</source>
          <target state="translated">단일 크기 인수로 호출되면 지정된 차원을 가진 정사각 행렬을 반환합니다. 둘 이상의 스칼라 인수와 함께 호출되면 처음 두 인수는 행과 열 수로 간주되며 추가 인수는 추가 행렬 차원을 지정합니다. 크기는 치수 &lt;var&gt;sz&lt;/var&gt; 의 벡터로 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c7107e3eb99b5b158c13498594476ab20c9500c3" translate="yes" xml:space="preserve">
          <source>When called with a single vector argument, produce a pie chart of the elements in &lt;var&gt;x&lt;/var&gt;. The size of the ith slice is the percentage that the element &lt;var&gt;x&lt;/var&gt;i represents of the total sum of &lt;var&gt;x&lt;/var&gt;: &lt;code&gt;pct = &lt;var&gt;x&lt;/var&gt;(i) / sum (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">단일 벡터 인수로 호출되면 &lt;var&gt;x&lt;/var&gt; 의 요소에 대한 원형 차트를 생성하십시오 . i 번째 슬라이스의 크기는 요소 &lt;var&gt;x&lt;/var&gt; i가 &lt;var&gt;x&lt;/var&gt; 의 총합 중 x : &lt;code&gt;pct = &lt;var&gt;x&lt;/var&gt;(i) / sum (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; 나타내는 백분율입니다 .</target>
        </trans-unit>
        <trans-unit id="6617d16dfc00ea47813d28158662ed96c170ffc8" translate="yes" xml:space="preserve">
          <source>When called with a string, the aforementioned properties are set according to the values in the following table:</source>
          <target state="translated">문자열로 호출하면 위에서 언급 한 속성이 다음 표의 값에 따라 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d690c22db89da0b74129cbd0b6958bf0614ae0eb" translate="yes" xml:space="preserve">
          <source>When called with a third input argument, &lt;code&gt;pchip&lt;/code&gt; evaluates the pchip polynomial at the points &lt;var&gt;xi&lt;/var&gt;. The third calling form is equivalent to &lt;code&gt;ppval (pchip (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">세 번째 입력 인수로 &lt;code&gt;pchip&lt;/code&gt; 하면 pchip은 &lt;var&gt;xi&lt;/var&gt; 지점에서 pchip 다항식을 평가합니다 . 세 번째 호출 양식은 &lt;code&gt;ppval (pchip (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9f7d1797c7b845b0a05013676bcd62443e2eca7" translate="yes" xml:space="preserve">
          <source>When called with a third input argument, &lt;code&gt;spline&lt;/code&gt; evaluates the spline at the points &lt;var&gt;xi&lt;/var&gt;. The third calling form &lt;code&gt;spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; is equivalent to &lt;code&gt;ppval (spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">세 번째 입력 인수로 호출되면 spline은 &lt;var&gt;xi&lt;/var&gt; 점에서 &lt;code&gt;spline&lt;/code&gt; 평가합니다 . 세 번째 호출 양식 &lt;code&gt;spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; , &lt;var&gt;xi&lt;/var&gt; ) 은 &lt;code&gt;ppval (spline (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;), &lt;var&gt;xi&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; ), &lt;var&gt;xi&lt;/var&gt; )과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5912c7a13039c8d7d84632b0ae09bb7d8ad47702" translate="yes" xml:space="preserve">
          <source>When called with a vector of three elements, the ambient, diffuse, and specular strengths of all &lt;code&gt;patch&lt;/code&gt; and &lt;code&gt;surface&lt;/code&gt; objects in the current axes are updated. An optional fourth vector element updates the specular exponent, and an optional fifth vector element updates the specular color reflectance.</source>
          <target state="translated">세 요소로 구성된 벡터를 사용하여 호출 하면 현재 축의 모든 &lt;code&gt;patch&lt;/code&gt; 및 &lt;code&gt;surface&lt;/code&gt; 객체 의 주변, 확산 및 반사 강도 가 업데이트됩니다. 선택적 네 번째 벡터 요소는 반사 지수를 업데이트하고 선택적 다섯 번째 벡터 요소는 반사 컬러 반사율을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="0571e1e72364c30079cc11ecea5bcc5aca254db1" translate="yes" xml:space="preserve">
          <source>When called with an optional third argument the order of colors in the new colormap is defined by &lt;var&gt;index&lt;/var&gt;.</source>
          <target state="translated">선택적 세 번째 인수를 사용하여 호출하면 새 컬러 맵의 색상 순서는 &lt;var&gt;index&lt;/var&gt; 에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="f6106003e90857a731661b66bf2a42e53b8d2426" translate="yes" xml:space="preserve">
          <source>When called with an output argument, return a vector of structures describing Octave and each installed package. The structure includes the following fields.</source>
          <target state="translated">출력 인수와 함께 호출되면 Octave 및 설치된 각 패키지를 설명하는 구조 벡터를 반환하십시오. 구조에는 다음 필드가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b12f91c889dc385b75571e85ec5067e3eb1ba4bc" translate="yes" xml:space="preserve">
          <source>When called with argument &lt;code&gt;&quot;mode&quot;&lt;/code&gt;, &lt;code&gt;xticklabels&lt;/code&gt; returns the current value of the axes property &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt;. This property can be changed by calling &lt;code&gt;xticklabels&lt;/code&gt; with either &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (algorithm determines tick labels) or &lt;code&gt;&quot;manual&quot;&lt;/code&gt; (tick labels remain fixed). Note: Specifying xticklabel values will also set the &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt; and &lt;code&gt;&quot;xticks&quot;&lt;/code&gt; properties to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">인수로 호출하면 &lt;code&gt;&quot;mode&quot;&lt;/code&gt; , &lt;code&gt;xticklabels&lt;/code&gt; 반환을 축 속성의 현재 값 &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt; . 이 속성은 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (알고리즘이 눈금 레이블을 결정) 또는 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; (틱 레이블이 고정 된 상태)로 &lt;code&gt;xticklabels&lt;/code&gt; 을 호출하여 변경할 수 있습니다 . 참고 : xticklabel 값을 지정하면 &lt;code&gt;&quot;xticklabelmode&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;xticks&quot;&lt;/code&gt; 속성도 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; 로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="1543ee478100234577c8472a5902511002d06b8f" translate="yes" xml:space="preserve">
          <source>When called with argument &lt;code&gt;&quot;mode&quot;&lt;/code&gt;, &lt;code&gt;xticks&lt;/code&gt; returns the current value of the axes property &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt;. This property can be changed by calling &lt;code&gt;xticks&lt;/code&gt; with either &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (algorithm determines tick positions) or &lt;code&gt;&quot;manual&quot;&lt;/code&gt; (tick values remain fixed regardless of axes resizing or rotation). Note: Specifying xtick values will also set the property &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt; to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;.</source>
          <target state="translated">인수로 호출하면 &lt;code&gt;&quot;mode&quot;&lt;/code&gt; , &lt;code&gt;xticks&lt;/code&gt; 의 축 속성의 반환 현재 값 &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt; . 이 속성은 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; (알고리즘이 눈금 위치를 결정) 또는 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; (축 크기 조정 또는 회전에 관계없이 눈금 값이 고정 된 상태 )으로 &lt;code&gt;xticks&lt;/code&gt; 를 호출하여 변경할 수 있습니다 . 참고 : 지정 XTICK 값은 속성 설정합니다 &lt;code&gt;&quot;xtickmode&quot;&lt;/code&gt; 에 &lt;code&gt;&quot;manual&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec208446d249f8b8a00c1b178efc0411bed34153" translate="yes" xml:space="preserve">
          <source>When called with just a single output argument &lt;var&gt;success&lt;/var&gt;, &lt;code&gt;test&lt;/code&gt; returns true if all of the tests were successful. If called with more than one output argument then the number of successful tests (&lt;var&gt;n&lt;/var&gt;), the total number of tests in the file (&lt;var&gt;nmax&lt;/var&gt;), the number of xtest failures (&lt;var&gt;nxfail&lt;/var&gt;), the number of tests failed due known bugs (&lt;var&gt;nbug&lt;/var&gt;), the number of tests skipped due to missing features (&lt;var&gt;nskip&lt;/var&gt;), the number of tests skipped due to run-time conditions (&lt;var&gt;nrtskip&lt;/var&gt;), and the number of regressions (&lt;var&gt;nregression&lt;/var&gt;) are returned.</source>
          <target state="translated">하나의 출력 인수 &lt;var&gt;success&lt;/var&gt; 로만 호출 하면 모든 &lt;code&gt;test&lt;/code&gt; 가 성공 하면 test 가 true를 리턴합니다. 하나 이상의 출력 인수로 호출 된 경우 성공한 테스트 수 ( &lt;var&gt;n&lt;/var&gt; ), 파일의 총 테스트 수 ( &lt;var&gt;nmax&lt;/var&gt; ), xtest 실패 수 ( &lt;var&gt;nxfail&lt;/var&gt; ), 알려진 버그로 인해 실패한 테스트 수 ( &lt;var&gt;nbug&lt;/var&gt; ) , 누락 된 기능으로 인해 건너 뛴 테스트 수 ( &lt;var&gt;nskip&lt;/var&gt; ), 런타임 조건으로 인해 건너 뛴 테스트 수 ( &lt;var&gt;nrtskip&lt;/var&gt; ) 및 회귀 횟수 ( &lt;var&gt;nregression&lt;/var&gt; )가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="58d8def1603dc8cebe37a653914f28a8493adda2" translate="yes" xml:space="preserve">
          <source>When called with more than one argument the first two arguments are taken as the number of rows and columns and any further arguments specify additional matrix dimensions. The optional argument &lt;var&gt;class&lt;/var&gt; specifies the return type and may be either &lt;code&gt;&quot;double&quot;&lt;/code&gt; or &lt;code&gt;&quot;single&quot;&lt;/code&gt;.</source>
          <target state="translated">둘 이상의 인수로 호출되면 처음 두 인수는 행 및 열 수로 간주되며 추가 인수는 추가 행렬 차원을 지정합니다. 선택적 인수 &lt;var&gt;class&lt;/var&gt; 는 반환 유형을 지정하며 &lt;code&gt;&quot;double&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;single&quot;&lt;/code&gt; 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b7967a7b99e6fe25e27b9568a376336b12bd6d3" translate="yes" xml:space="preserve">
          <source>When called with more than one scalar argument the first two arguments are taken as the number of rows and columns and any further arguments specify additional matrix dimensions.</source>
          <target state="translated">둘 이상의 스칼라 인수와 함께 호출되면 처음 두 인수는 행과 열의 수로 간주되며 추가 인수는 추가 행렬 차원을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="27c8c8897b326272181e0f10c49e41641ede726a" translate="yes" xml:space="preserve">
          <source>When called with no argument the hidden line removal state is toggled.</source>
          <target state="translated">인수없이 호출되면 은선 제거 상태가 토글됩니다.</target>
        </trans-unit>
        <trans-unit id="a1363c6dafefb968186423c28e913a77b16c7949" translate="yes" xml:space="preserve">
          <source>When called with no arguments in debugging mode, display the script file currently being debugged.</source>
          <target state="translated">디버깅 모드에서 인수없이 호출하면 현재 디버깅중인 스크립트 파일을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="defb9134f86f75925317687f0beb96c27163f857" translate="yes" xml:space="preserve">
          <source>When called with no arguments, &lt;code&gt;clearvars&lt;/code&gt; deletes all local variables.</source>
          <target state="translated">인수없이 호출하면 &lt;code&gt;clearvars&lt;/code&gt; 가 모든 로컬 변수를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="2e2a2e6dc93d3488539ba440cf12f4f0d7471de1" translate="yes" xml:space="preserve">
          <source>When called with no arguments, a light object is added to the current plot and is placed slightly above and to the right of the camera&amp;rsquo;s current position: this is equivalent to &lt;code&gt;camlight right&lt;/code&gt;. The commands &lt;code&gt;camlight left&lt;/code&gt; and &lt;code&gt;camlight headlight&lt;/code&gt; behave similarly with the placement being either left of the camera position or centered on the camera position.</source>
          <target state="translated">인수없이 호출하면 라이트 오브젝트가 현재 플롯에 추가되고 카메라의 현재 위치의 약간 위와 오른쪽에 배치됩니다. 이것은 &lt;code&gt;camlight right&lt;/code&gt; 와 같습니다 . &lt;code&gt;camlight left&lt;/code&gt; 및 &lt;code&gt;camlight headlight&lt;/code&gt; 명령 은 배치가 카메라 위치의 왼쪽이거나 카메라 위치의 중앙에있는 것과 유사하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ada31907fdf98e527ec4009238d62d2981120809" translate="yes" xml:space="preserve">
          <source>When called with no arguments, close the current figure. This is equivalent to &lt;code&gt;close (gcf)&lt;/code&gt;. If the input &lt;var&gt;h&lt;/var&gt; is a graphic handle, or vector of graphics handles, then close each figure in &lt;var&gt;h&lt;/var&gt;. The figure to close may also be specified by name &lt;var&gt;figname&lt;/var&gt; which is matched against the &lt;code&gt;&quot;Name&quot;&lt;/code&gt; property of all figures.</source>
          <target state="translated">인수없이 호출되면 현재 그림을 닫습니다. 이것은 &lt;code&gt;close (gcf)&lt;/code&gt; 와 동일합니다 . 입력 &lt;var&gt;h&lt;/var&gt; 가 그래픽 핸들 또는 그래픽 핸들 벡터 인 경우 각 그림을 &lt;var&gt;h&lt;/var&gt; 로 닫습니다 . 닫기 그림 은 모든 그림 의 &lt;code&gt;&quot;Name&quot;&lt;/code&gt; 속성 과 일치 하는 이름 &lt;var&gt;figname&lt;/var&gt; 으로 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ee97b13a0c53d178aae93f61429c363272e5d5e" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &amp;lsquo;</source>
          <target state="translated">인수없이 호출되면 값이 '인 스칼라를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="67e5d5585b35896e308f0362bbe0ed87cd7b7cfa" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;code&gt;eps (1.0)&lt;/code&gt;.</source>
          <target state="translated">인수없이 호출하면 값이 &lt;code&gt;eps (1.0)&lt;/code&gt; 인 스칼라를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6b1d3209fc138f0a15331e0127085378e20d0f98" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;code&gt;realmax (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt;.</source>
          <target state="translated">인수없이 호출되면 값이 &lt;code&gt;realmax (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt; 스칼라를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9eccb9d1dece6f0bee8a8e059fec4080954757f8" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;code&gt;realmin (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt;.</source>
          <target state="translated">인수없이 호출되면 값 &lt;code&gt;realmin (&lt;code&gt;&quot;double&quot;&lt;/code&gt;)&lt;/code&gt; 가진 스칼라를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="790dbfd1008015554eb09d1ba9dc1ce49a4e2cfe" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">인수없이 호출하면 값이 &lt;em&gt;e 인&lt;/em&gt; 스칼라를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="53c42adc9631c6b59e9912d3acf278930762ee7f" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value &lt;em&gt;i&lt;/em&gt;.</source>
          <target state="translated">인수없이 호출되면 값이 &lt;em&gt;i 인&lt;/em&gt; 스칼라를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="8403587fed92e1d80a9619e52261d742a9f843f6" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return a scalar with the value of pi.</source>
          <target state="translated">인수없이 호출하면 pi 값을 가진 스칼라를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f8ae78521b95f284039298bd86b1652455cb1d7c" translate="yes" xml:space="preserve">
          <source>When called with no arguments, return the current print orientation.</source>
          <target state="translated">인수없이 호출하면 현재 인쇄 방향을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c6bbd68342dead75b74b7683e0ab6b66eb131cf4" translate="yes" xml:space="preserve">
          <source>When called with no arguments, the names of all available options and their current values are displayed.</source>
          <target state="translated">인수없이 호출하면 사용 가능한 모든 옵션의 이름과 현재 값이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="68c3679768318677d3528dc001462951b48b2cf2" translate="yes" xml:space="preserve">
          <source>When called with no extra input arguments, it returns the Octave license, otherwise the first input defines the operation mode and must be one of the following strings: &lt;code&gt;inuse&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, and &lt;code&gt;checkout&lt;/code&gt;. The optional &lt;var&gt;feature&lt;/var&gt; argument can either be &lt;code&gt;&quot;octave&quot;&lt;/code&gt; (core), or an Octave package.</source>
          <target state="translated">추가 입력 인수없이 호출되면 Octave 라이센스를 리턴합니다. 그렇지 않으면 첫 번째 입력이 조작 모드를 정의하며 &lt;code&gt;inuse&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; 및 &lt;code&gt;checkout&lt;/code&gt; 문자열 중 하나 여야합니다 . 선택적 &lt;var&gt;feature&lt;/var&gt; 인수는 &lt;code&gt;&quot;octave&quot;&lt;/code&gt; (코어) 또는 Octave 패키지 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1046ed4c0ab71423c2c66a0d04c8b4e47abe3f41" translate="yes" xml:space="preserve">
          <source>When called with no input argument and one output argument, return a new ODE options structure that contains all possible fields initialized to their default values. If no output argument is requested, display a list of the common ODE solver options along with their default value.</source>
          <target state="translated">입력 인수와 출력 인수없이 호출되면 기본값으로 초기화 된 가능한 모든 필드를 포함하는 새로운 ODE 옵션 구조를 반환합니다. 출력 인수가 요청되지 않은 경우 공통 ODE 솔버 옵션 목록을 기본값과 함께 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="5b8babe9cd4a499630a96f7080d453d7852ecd7b" translate="yes" xml:space="preserve">
          <source>When called with no input arguments a default map is created with strings as the key type and &lt;code&gt;&quot;any&quot;&lt;/code&gt; as the value type.</source>
          <target state="translated">입력 인수없이 호출되면 문자열이 키 유형으로, &lt;code&gt;&quot;any&quot;&lt;/code&gt; 가 값 유형 으로 기본 맵이 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="038c50cb5ee80f5e177a1157dfd51547500463c9" translate="yes" xml:space="preserve">
          <source>When called with no input arguments the &lt;code&gt;print_usage&lt;/code&gt; function displays the usage message of the currently executing function.</source>
          <target state="translated">입력 인수없이 호출하면 &lt;code&gt;print_usage&lt;/code&gt; 함수는 현재 실행중인 함수의 사용법 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="6d0c3de4496e5bdcfffd98edaaba1068b52856d9" translate="yes" xml:space="preserve">
          <source>When called with no input or output arguments, print the list of all functions with breakpoints and the line numbers where those breakpoints are set.</source>
          <target state="translated">입력 또는 출력 인수없이 호출되면 중단 점과 함께 모든 함수 목록과 해당 중단 점이 설정된 행 번호를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="c5a2532a39d5863238c58042658f24ca1694fda0" translate="yes" xml:space="preserve">
          <source>When called with no inputs, return the current value of errno.</source>
          <target state="translated">입력없이 호출되면 errno의 현재 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3c0809b24158073b6eb69b2444d61369643686cf" translate="yes" xml:space="preserve">
          <source>When called with no output argument, or the &lt;code&gt;&quot;-echo&quot;&lt;/code&gt; argument is given, then &lt;var&gt;text&lt;/var&gt; is also sent to standard output.</source>
          <target state="translated">출력 인수없이 호출되거나 &lt;code&gt;&quot;-echo&quot;&lt;/code&gt; 인수가 제공되면 &lt;var&gt;text&lt;/var&gt; 도 표준 출력으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="4f5e1bfbb63747ecbdd45c801f9d2e18c2c0113e" translate="yes" xml:space="preserve">
          <source>When called with no output arguments, &lt;code&gt;lookfor&lt;/code&gt; prints the list of matching functions to the terminal. Otherwise, the output argument &lt;var&gt;fcns&lt;/var&gt; contains the function names and &lt;var&gt;help1str&lt;/var&gt; contains the first sentence from the help string of each function.</source>
          <target state="translated">출력 인수없이 호출되면 &lt;code&gt;lookfor&lt;/code&gt; 는 일치하는 함수 목록을 터미널에 인쇄합니다. 그렇지 않으면 출력 인수 &lt;var&gt;fcns&lt;/var&gt; 에 함수 이름이 포함 되고 &lt;var&gt;help1str&lt;/var&gt; 에는 각 함수의 도움말 문자열에서 첫 번째 문장이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0c229f92e8bcab895e90b1d9478e717228759365" translate="yes" xml:space="preserve">
          <source>When called with no output arguments, &lt;code&gt;methods&lt;/code&gt; prints the list of method names to the screen. Otherwise, the output argument &lt;var&gt;mtds&lt;/var&gt; contains the list in a cell array of strings.</source>
          <target state="translated">출력 인수없이 호출되면 &lt;code&gt;methods&lt;/code&gt; 는 메소드 이름 목록을 화면에 인쇄합니다. 그렇지 않으면 출력 인수 &lt;var&gt;mtds&lt;/var&gt; 에 문자열의 셀형 배열로 목록이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2d0f0cbf1c2e5c2ba41d40bcbd031320e12aa44d" translate="yes" xml:space="preserve">
          <source>When called with no outputs the periodogram is immediately plotted in the current figure window.</source>
          <target state="translated">출력없이 호출하면 주기도는 현재 그림 창에 즉시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="40c37fe4d1f4eb5f2c40666a593fdbde3f6f98c5" translate="yes" xml:space="preserve">
          <source>When called with one of the modes &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt; the state is set accordingly.</source>
          <target state="translated">&lt;code&gt;&quot;on&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;off&quot;&lt;/code&gt; 모드 중 하나를 사용하여 호출 하면 상태가 그에 따라 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="801cb8b8eb0a80525e372c0d33f75a965ce381ce" translate="yes" xml:space="preserve">
          <source>When called with one output and no inputs, return an options structure with all valid option parameters initialized to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">하나의 출력과 입력없이 호출되면 모든 유효한 옵션 매개 변수가 &lt;code&gt;[]&lt;/code&gt; 로 초기화 된 옵션 구조를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a0423ee323d4b89a177010dfd6e35bec40ae839" translate="yes" xml:space="preserve">
          <source>When called with one output argument, return a string containing a continued fraction expansion (multiple terms).</source>
          <target state="translated">하나의 출력 인수로 호출되면 연속 분수 확장 (여러 항)이 포함 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d5602fdad04b15911922e484f855824d3ae8c32" translate="yes" xml:space="preserve">
          <source>When called with one output only elliptic integrals of the first kind are returned.</source>
          <target state="translated">하나의 출력으로 호출되면 첫 번째 종류의 타원 적분 만 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9a4a8be83eba5e6e8172f63fc9a17991eab3acc9" translate="yes" xml:space="preserve">
          <source>When called with only two arguments, &lt;code&gt;cmpermute&lt;/code&gt; randomly rearranges the colormap &lt;var&gt;map&lt;/var&gt; and returns a new colormap &lt;var&gt;newmap&lt;/var&gt;. It also returns the indexed image &lt;var&gt;Y&lt;/var&gt; which is the equivalent of the original input image &lt;var&gt;X&lt;/var&gt; when displayed using &lt;var&gt;newmap&lt;/var&gt;.</source>
          <target state="translated">두 개의 인수만으로 호출하면 &lt;code&gt;cmpermute&lt;/code&gt; 는 컬러 맵 &lt;var&gt;map&lt;/var&gt; 임의로 재정렬하고 새 &lt;var&gt;newmap&lt;/var&gt; 맵 newmap을 반환합니다 . 또한 &lt;var&gt;newmap&lt;/var&gt; 을 사용하여 표시 될 때 원래 입력 이미지 &lt;var&gt;X&lt;/var&gt; 와 동등한 인덱스 이미지 &lt;var&gt;Y&lt;/var&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="de134f154d591d57d0d5c8f4e905cefde039f211" translate="yes" xml:space="preserve">
          <source>When called with output arguments, return the data for the function evaluated over the meshgrid. This can subsequently be plotted with &lt;code&gt;surf (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">출력 인수와 함께 호출되면 메쉬 그리드에서 평가 된 함수의 데이터를 반환합니다. 이것은 &lt;code&gt;surf (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;)&lt;/code&gt; 로 플로팅 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b7723bf9e0b7fe31676258acb6f558e5b6b83bc" translate="yes" xml:space="preserve">
          <source>When called with output arguments, the examples are returned in the form of a string &lt;var&gt;s&lt;/var&gt;, with &lt;var&gt;idx&lt;/var&gt; indicating the ending position of the various examples.</source>
          <target state="translated">출력 인수와 함께 호출되면 예제는 문자열 &lt;var&gt;s&lt;/var&gt; 형식으로 리턴 되며 &lt;var&gt;idx&lt;/var&gt; 는 다양한 예제의 종료 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3f75551ed0ec52d20e8ccc65f9ef6b65e61cb567" translate="yes" xml:space="preserve">
          <source>When called with the &lt;code&gt;&quot;warning&quot;&lt;/code&gt; option &lt;code&gt;fail&lt;/code&gt; will produce an error if executing the code produces no warning.</source>
          <target state="translated">&lt;code&gt;&quot;warning&quot;&lt;/code&gt; 옵션을 사용하여 호출 하면 코드를 실행해도 경고가 없으면 &lt;code&gt;fail&lt;/code&gt; 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bf6d49a0d08ec7dbf2f9641f794f790234bb2d09" translate="yes" xml:space="preserve">
          <source>When called with the name of a function, list that script file with line numbers.</source>
          <target state="translated">함수 이름으로 호출되면 해당 스크립트 파일을 줄 번호와 함께 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="108489bab7c0283a92553b349ad16454f35da5ea" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;daspk_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">두 개의 인수로 호출하면 &lt;code&gt;daspk_options&lt;/code&gt; 는 &lt;var&gt;opt&lt;/var&gt; 옵션 을 &lt;var&gt;val&lt;/var&gt; 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="0d575a4047d1f6fd1a15bb0a822be02cbfc8ede4" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;dasrt_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">두 개의 인수로 호출하면 &lt;code&gt;dasrt_options&lt;/code&gt; 는 &lt;var&gt;opt&lt;/var&gt; 옵션 을 &lt;var&gt;val&lt;/var&gt; 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c180fba300e0412405277d7a041d3981a479c65c" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;dassl_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">두 개의 인수로 호출하면 &lt;code&gt;dassl_options&lt;/code&gt; 는 &lt;var&gt;opt&lt;/var&gt; 옵션 을 &lt;var&gt;val&lt;/var&gt; 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="6cdd317d616c3c6e2e52de90cc18b823a8fe3eeb" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;lsode_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">두 개의 인수로 호출하면 &lt;code&gt;lsode_options&lt;/code&gt; 는 &lt;var&gt;opt&lt;/var&gt; 옵션 을 &lt;var&gt;val&lt;/var&gt; 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="4e581c84e05fb0619029d7b17b606052a2365ca1" translate="yes" xml:space="preserve">
          <source>When called with two arguments, &lt;code&gt;quad_options&lt;/code&gt; sets the option &lt;var&gt;opt&lt;/var&gt; to value &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">두 개의 인수로 호출하면 &lt;code&gt;quad_options&lt;/code&gt; 는 &lt;var&gt;opt&lt;/var&gt; 옵션 을 &lt;var&gt;val&lt;/var&gt; 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ca8bd71d2d4e1bf36ca82c18bdeaecac9c084cde" translate="yes" xml:space="preserve">
          <source>When called with two arguments, return the piecewise polynomial &lt;var&gt;pp&lt;/var&gt; that may be used with &lt;code&gt;ppval&lt;/code&gt; to evaluate the polynomial at specific points.</source>
          <target state="translated">두 개의 인수를 사용하여 호출하면 특정 지점에서 다항식을 평가하기 위해 &lt;code&gt;ppval&lt;/code&gt; 과 함께 사용할 수있는 부분 다항식 &lt;var&gt;pp&lt;/var&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="851e4e7cb65856707fbbac1b46eeed3c6b093c1a" translate="yes" xml:space="preserve">
          <source>When called with two input ODE options structures &lt;var&gt;oldstruct&lt;/var&gt; and &lt;var&gt;newstruct&lt;/var&gt; overwrite all values from the structure &lt;var&gt;oldstruct&lt;/var&gt; with new values from the structure &lt;var&gt;newstruct&lt;/var&gt;. Empty values in &lt;var&gt;newstruct&lt;/var&gt; will not overwrite values in &lt;var&gt;oldstruct&lt;/var&gt;.</source>
          <target state="translated">두 개의 입력 ODE 옵션 구조로 불리는 경우 &lt;var&gt;oldstruct&lt;/var&gt; 및 &lt;var&gt;newstruct&lt;/var&gt; 덮어 구조에서 모든 값 &lt;var&gt;oldstruct&lt;/var&gt; 구조의 새로운 값 &lt;var&gt;newstruct&lt;/var&gt; . 빈 값 &lt;var&gt;newstruct&lt;/var&gt; 은 에하지 덮어 쓰기 값 것이다 &lt;var&gt;oldstruct&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="461821e048c20c8bf9f0e07f52f20887f1932070" translate="yes" xml:space="preserve">
          <source>When called with two or three output arguments and a sparse input matrix, &lt;code&gt;lu&lt;/code&gt; does not attempt to perform sparsity preserving column permutations. Called with a fourth output argument, the sparsity preserving column transformation &lt;var&gt;Q&lt;/var&gt; is returned, such that &lt;code&gt;&lt;var&gt;P&lt;/var&gt; * &lt;var&gt;A&lt;/var&gt; * &lt;var&gt;Q&lt;/var&gt; = &lt;var&gt;L&lt;/var&gt; * &lt;var&gt;U&lt;/var&gt;&lt;/code&gt;. This is the &lt;strong&gt;preferred&lt;/strong&gt; way to call &lt;code&gt;lu&lt;/code&gt; with sparse input matrices.</source>
          <target state="translated">두 개 또는 세 개의 출력 인수와 희소 입력 행렬을 사용하여 호출하면 &lt;code&gt;lu&lt;/code&gt; 는 희소성 보존 열 순열을 수행하지 않습니다. 네 번째 출력 인수로 호출되면 희소성 보존 열 변환 &lt;var&gt;Q&lt;/var&gt; 가 리턴되어 &lt;code&gt;&lt;var&gt;P&lt;/var&gt; * &lt;var&gt;A&lt;/var&gt; * &lt;var&gt;Q&lt;/var&gt; = &lt;var&gt;L&lt;/var&gt; * &lt;var&gt;U&lt;/var&gt;&lt;/code&gt; 됩니다. 이것은 희소 입력 행렬로 &lt;code&gt;lu&lt;/code&gt; 를 호출 하는 &lt;strong&gt;선호되는&lt;/strong&gt; 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="2355dbace9ea2a76c3d61c4fbbe0b59cc3e3b2f2" translate="yes" xml:space="preserve">
          <source>When called with two output arguments, [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;], &lt;var&gt;x&lt;/var&gt; will contain the input values, and &lt;var&gt;y&lt;/var&gt; will contain the output from &lt;code&gt;humps&lt;/code&gt;.</source>
          <target state="translated">두 개의 출력 인수 인 [ &lt;var&gt;x&lt;/var&gt; , &lt;var&gt;y&lt;/var&gt; ] 와 함께 호출하면 &lt;var&gt;x&lt;/var&gt; 는 입력 값 을 포함 하고 &lt;var&gt;y&lt;/var&gt; 는 &lt;code&gt;humps&lt;/code&gt; 의 출력을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="288c13363c859382a9729a7dbadf247ccd305a68" translate="yes" xml:space="preserve">
          <source>When called with two output arguments, return numeric matrices for the numerator and denominator of a fractional representation of &lt;var&gt;x&lt;/var&gt; such that &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;n&lt;/var&gt; ./ &lt;var&gt;d&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">두 출력 인자로 호출 할 때의 분수 표시의 분자와 분모를위한 숫자 매트릭스 리턴 &lt;var&gt;x&lt;/var&gt; 되도록 &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;n&lt;/var&gt; ./ &lt;var&gt;d&lt;/var&gt;&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
