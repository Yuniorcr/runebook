<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="47df027bbb0f9ec6b7274ab066797ca51237a860" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() may be used to access the system-wide random number generator, which is cryptographically-safe on all systems that Qt runs on. This function will use hardware facilities to generate random numbers where available. On such systems, those facilities are true Random Number Generators. However, if they are true RNGs, those facilities have finite entropy sources and thus may fail to produce any results if their entropy pool is exhausted.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt; ()은 Qt가 실행되는 모든 시스템에서 암호로 안전한 시스템 전체 난수 생성기에 액세스하는 데 사용될 수 있습니다. 이 기능은 하드웨어 기능을 사용하여 가능한 경우 난수를 생성합니다. 이러한 시스템에서 이러한 기능은 진정한 난수 생성기입니다. 그러나 이들이 실제 RNG 인 경우 이러한 시설에는 유한 엔트로피 소스가 있으므로 엔트로피 풀이 소진되면 결과를 얻지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="615882f99d1d45e55b9a11eea8a046e0aa43db72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() uses the operating system facilities to obtain random numbers, which attempt to collect real entropy from the surrounding environment to produce true random numbers. However, it's possible that the entropy pool becomes exhausted, in which case the operating system will fall back to a pseudo-random engine for a time. Under no circumstances will &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() block, waiting for more entropy to be collected.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt; ()은 운영 체제 기능을 사용하여 난수를 얻습니다.이 난수는 주변 환경에서 실제 엔트로피를 수집하여 진정한 난수를 생성합니다. 그러나 엔트로피 풀이 소진 될 수 있으며,이 경우 운영 체제는 시간 동안 의사 랜덤 엔진으로 대체됩니다. 어떠한 경우 &lt;a href=&quot;qrandomgenerator#system&quot;&gt;에도 QRandomGenerator :: system&lt;/a&gt; () 블록은 더 많은 엔트로피가 수집되기를 기다리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a7c7141f083bbee961a3050a3bf677f30d14e00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator#system&quot;&gt;system&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#system&quot;&gt;system&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f89911d5de8118eb4a724a8afb0179c395376aee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator64&quot;&gt;QRandomGenerator64&lt;/a&gt; is a simple adaptor class around &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;, making the &lt;a href=&quot;qrandomgenerator#generate64&quot;&gt;QRandomGenerator::generate64&lt;/a&gt;() function the default for &lt;a href=&quot;qrandomgenerator64#operator-28-29&quot;&gt;operator&lt;/a&gt;()(), instead of the function that returns 32-bit quantities. This class is intended to be used in conjunction with Standard Library algorithms that need 64-bit quantities instead of 32-bit ones.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator64&quot;&gt;QRandomGenerator64는&lt;/a&gt; 주위에 간단한 어댑터 클래스입니다 &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; 만들기, &lt;a href=&quot;qrandomgenerator#generate64&quot;&gt;QRandomGenerator :: generate64을&lt;/a&gt; 위한 기본 () 함수 &lt;a href=&quot;qrandomgenerator64#operator-28-29&quot;&gt;연산자&lt;/a&gt; () () 대신 반환 32 비트 수량이 함수의. 이 클래스는 32 비트 대신 64 비트 수량이 필요한 표준 라이브러리 알고리즘과 함께 사용하도록 고안되었습니다.</target>
        </trans-unit>
        <trans-unit id="7881ec3c6f73a3aeca15d6e7be5565cb32a965b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrandomgenerator64#result_type-typedef&quot;&gt;QRandomGenerator64::result_type&lt;/a&gt; QRandomGenerator64::operator()()</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator64#result_type-typedef&quot;&gt;QRandomGenerator64 :: result_type&lt;/a&gt; QRandomGenerator64 :: operator () ()</target>
        </trans-unit>
        <trans-unit id="1949091b316ec108d4c37affb101c1acecae87be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt; is a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; with a raster-based, non-OpenGL surface. On top of the functionality offered by &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, &lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt; adds a virtual &lt;a href=&quot;qpaintdevicewindow#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() function and the possibility to open a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; on itself. The underlying paint engine will be the raster one, meaning that all drawing will happen on the CPU. For performing accelerated, OpenGL-based drawing, use &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt; 는 래스터 기반 비 OpenGL 표면 이있는 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 입니다. 에 의해 제공되는 기능의 위에 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; , &lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow는&lt;/a&gt; 가상 추가 &lt;a href=&quot;qpaintdevicewindow#paintEvent&quot;&gt;paintEvent&lt;/a&gt; () 함수 및 열 가능성 &lt;a href=&quot;qpainter&quot;&gt;QPainter가를&lt;/a&gt; 자체에있다. 기본 페인트 엔진은 래스터 엔진이되므로 모든 드로잉이 CPU에서 발생합니다. 가속화 된 OpenGL 기반 드로잉을 수행하려면 대신 &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="03906d8cf44173bf89c3afcee1b94b7fb26438fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt; is a convenience class for using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; on a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow은&lt;/a&gt; 사용의 편의를 클래스입니다 &lt;a href=&quot;qpainter&quot;&gt;QPainter를을&lt;/a&gt; A의 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="969b2c199ccfa1a2ee2e2826627aa49750023d6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; can be constructed in a number of ways:</source>
          <target state="translated">&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; 는 여러 가지 방법으로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97d1ab99419458f8645a39738c5fa767f075cea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; is considered local to the thread in which it is constructed (either using a constructor, or by calling &lt;a href=&quot;qrawfont#loadFromData&quot;&gt;loadFromData&lt;/a&gt;() or &lt;a href=&quot;qrawfont#loadFromFile&quot;&gt;loadFromFile&lt;/a&gt;()). The &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; cannot be moved to a different thread, but will have to be recreated in the thread in question.</source>
          <target state="translated">&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; 는 생성자를 사용하거나 &lt;a href=&quot;qrawfont#loadFromData&quot;&gt;loadFromData&lt;/a&gt; () 또는 &lt;a href=&quot;qrawfont#loadFromFile&quot;&gt;loadFromFile&lt;/a&gt; () 을 호출하여 생성 된 스레드의 로컬로 간주됩니다 . &lt;a href=&quot;qrawfont&quot;&gt;QRawFont는&lt;/a&gt; 다른 스레드로 이동할 수 없습니다 만, 문제의 스레드에서 다시해야합니다.</target>
        </trans-unit>
        <trans-unit id="6ab5b28457a5b90ee9156c0b77a317ed74617e92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; only provides support for the main font technologies: GDI and DirectWrite on Windows platforms, &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-attribution-freetype.html#freetype&quot;&gt;FreeType&lt;/a&gt; on Linux platforms and CoreText on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. For other font back-ends, the APIs will be disabled.</source>
          <target state="translated">&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; 는 기본 글꼴 기술 (Windows 플랫폼의 GDI 및 DirectWrite, Linux 플랫폼의 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-attribution-freetype.html#freetype&quot;&gt;FreeType&lt;/a&gt; 및 &lt;a href=&quot;internationalization#macos&quot;&gt;macOS의 &lt;/a&gt;CoreText) 만 지원합니다 . 다른 글꼴 백엔드의 경우 API가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="95f9782bdc9e6dd580d4a4568107d31b98bd052f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;QRawFont::operator=(const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp; QRawFont :: operator = (const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8567b79e10e969ff7945c95cfe5dae5dc195f668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; *QReadLocker::readWriteLock() const</source>
          <target state="translated">&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; * QReadLocker :: readWriteLock () const</target>
        </trans-unit>
        <trans-unit id="093dfa4406eeddffdb392d4daf9a964cb922fd84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; *QWriteLocker::readWriteLock() const</source>
          <target state="translated">&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; * QWriteLocker :: readWriteLock () const</target>
        </trans-unit>
        <trans-unit id="bd9d232b238d189b14c5057f303a2b52d0f48bfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; is similar to &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;, except that it distinguishes between &quot;read&quot; and &quot;write&quot; access. When a piece of data is not being written to, it is safe for multiple threads to read from it simultaneously. A &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; forces multiple readers to take turns to read shared data, but a &lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; allows simultaneous reading, thus improving parallelism.</source>
          <target state="translated">&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; 은 &quot;읽기&quot;와 &quot;쓰기&quot;액세스를 구분한다는 점을 제외하고 &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; 와 유사합니다 . 데이터 조각을 쓰지 않을 때는 여러 스레드가 동시에 읽을 수 있습니다. &lt;a href=&quot;qmutex&quot;&gt;QMutex의&lt;/a&gt; 힘 다수의 독자가 공유 데이터를 읽을 교대로 할 수 있지만, &lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock은&lt;/a&gt; 따라서 병렬 처리를 개선, 동시 읽기를 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97330c043bad9ecda79661000934f87e4962743f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QDragMoveEvent::answerRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QDragMoveEvent :: answerRect () const</target>
        </trans-unit>
        <trans-unit id="69d41be9ee0b3272d2dbe05d89dff85131882699" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8411e252a50c55f747aceebd87255c5f10f1a906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ac1dec70c0966229e836444efb8128f916cd9930" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="92930c18dc613ac02d25258dca16d9730f42dac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::boundingRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: boundingRect (int</target>
        </trans-unit>
        <trans-unit id="afdcd08112393f42a3b72647d5e876c2d1bf67f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics::tightBoundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QFontMetrics :: tightBoundingRect (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="81381c203badb86c9ed863a2cbdc1f0235cae02e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGraphicsView::rubberBandRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGraphicsView :: rubberBandRect () const</target>
        </trans-unit>
        <trans-unit id="11aa6dbf8922777938de8acc6d3054b1ad781ba0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGridLayout::cellRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QGridLayout :: cellRect (int</target>
        </trans-unit>
        <trans-unit id="226448ca4a538a59953f8057109f30ee690cb4c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImage::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImage :: rect () const</target>
        </trans-unit>
        <trans-unit id="84b2fd80b2f4c004e0b1f02a433b6c254a08b628" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader::clipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader :: clipRect () const</target>
        </trans-unit>
        <trans-unit id="93cda42302b19c652bd2c214497b6830d8b1c6c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader::currentImageRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader :: currentImageRect () const</target>
        </trans-unit>
        <trans-unit id="2c8c3db3ce54dd3251b7f239140930797d83bfea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader::scaledClipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QImageReader :: scaledClipRect () const</target>
        </trans-unit>
        <trans-unit id="3bff84527f8df22ae7a09d81de685bccf3ec95f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QLayout::contentsRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QLayout :: contentsRect () const</target>
        </trans-unit>
        <trans-unit id="f42c19e46a3cd9121423b57c215418f2f6c5af14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QListWidget::visualItemRect(const &lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QListWidget :: visualItemRect (const &lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ad7ceee4ee2f269aea7eb7255eb709588bf9ef27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix4x4::mapRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix4x4 :: mapRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a44ace12f79b743cf4242a061f0b79f01601c16f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix::mapRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMatrix :: mapRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; 및</target>
        </trans-unit>
        <trans-unit id="d9d014365e4051fb7da95c5c9c4b1ac26b7d3010" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenu::actionGeometry(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenu :: actionGeometry ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="22efa9238d96a659d34cf62bb6531cf383174a45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenuBar::actionGeometry(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMenuBar :: actionGeometry ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0c5ec74acee4feebc78305a27ef57bcd7015192a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMovie::frameRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QMovie :: frameRect () const</target>
        </trans-unit>
        <trans-unit id="28631b33523e55824d05e8521277ecccd7ff43f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::fullRectPixels(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: fullRectPixels (int</target>
        </trans-unit>
        <trans-unit id="efd8d1ac4159a883d06e6a57c1757ffd8ab3a9cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::fullRectPoints() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: fullRectPoints () const</target>
        </trans-unit>
        <trans-unit id="297f7f9be57d6108ba1596b5aa12c8ba9e92345e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::paintRectPixels(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: paintRectPixels (int</target>
        </trans-unit>
        <trans-unit id="be710c62e60cc73271bebd9adcafe46e5d17672b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout::paintRectPoints() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageLayout :: paintRectPoints () const</target>
        </trans-unit>
        <trans-unit id="f3090d20c044a5240590ec995a4ce04bbc90f056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize::rectPixels(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize :: rectPixels (int</target>
        </trans-unit>
        <trans-unit id="1078ff65515d7f7cfad4007388f8c4e3fff81414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize::rectPoints() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPageSize :: rectPoints () const</target>
        </trans-unit>
        <trans-unit id="199596785626e3f28bfbec2725f70904636b4f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::boundingRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: boundingRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9346406c7ef160e637112db2e6f63a02c70038bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::boundingRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: boundingRect (int</target>
        </trans-unit>
        <trans-unit id="66ee7b9cd4aed57557fca817beab2a5e3b446087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::viewport() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: viewport () const</target>
        </trans-unit>
        <trans-unit id="b24610d66a64c490d6550d31c05e256e818a65bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter::window() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPainter :: window () const</target>
        </trans-unit>
        <trans-unit id="5bb187e1bd384b4084b12c0fa35d17d1e4bd4f40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPdfDocumentRenderOptions::scaledClipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPdfDocumentRenderOptions :: scaledClipRect () const</target>
        </trans-unit>
        <trans-unit id="ce4721095fd5104c578f8b9045e5e5dda4792853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPicture::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPicture :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="bc6c23aa3b50c3ff064753a5fbb38420c00bd329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPixmap::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPixmap :: rect () const</target>
        </trans-unit>
        <trans-unit id="873fb953de79f6386d82a0348948ff7aff54bd6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit::cursorRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit :: cursorRect () const</target>
        </trans-unit>
        <trans-unit id="3efb25e4af77f17b5462702af99fa58a8dc0c199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit::cursorRect(const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPlainTextEdit :: cursorRect (const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4772b60e7716d1e6834d5c05ec0f162d243628db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPolygon::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QPolygon :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="3edc1845118dcf08d8291fd10dda0a1613971645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF::toAlignedRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF :: toAlignedRect () const</target>
        </trans-unit>
        <trans-unit id="270b6307b2ead5b5860fbbeeb57baa87334366b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF::toRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRectF :: toRect () const</target>
        </trans-unit>
        <trans-unit id="aef4f7a22da1b8cb86babac5a1cbb348119389a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRegion::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QRegion :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="327e882a439cb1d8a69f23979262db7edfa3c045" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer::deviceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer :: deviceRect () const</target>
        </trans-unit>
        <trans-unit id="28ce502dd0d366a33254d882f1d86878dd81915c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer::viewportRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSGAbstractRenderer :: viewportRect () const</target>
        </trans-unit>
        <trans-unit id="00ab235ce697092211b334f50e59dfd1573ff2ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QScreen::mapBetween(&lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt::ScreenOrientation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QScreen :: mapBetween ( &lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt :: ScreenOrientation)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b48eab4c0cbbb7c2be5cf2e17b84dc61e43a8bf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOption::rect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOption :: rect</target>
        </trans-unit>
        <trans-unit id="b9ee3529a508e301cc17356db25e429e8efc9ad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionComboBox::popupRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionComboBox :: popupRect</target>
        </trans-unit>
        <trans-unit id="2d2a117b22b9040979df9460b43511aaa0846fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionMenuItem::menuRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionMenuItem :: menuRect</target>
        </trans-unit>
        <trans-unit id="6c51de2060a31f22f7d98e4918f7c552a8d6a5c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase::selectedTabRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase :: selectedTabRect</target>
        </trans-unit>
        <trans-unit id="88a0140f17b436c80b81f19d191dc4b2706cc39a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase::tabBarRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabBarBase :: tabBarRect</target>
        </trans-unit>
        <trans-unit id="b763b7d0e8c1b6afc0c25b9001a5b201fc30f5d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame::selectedTabRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame :: selectedTabRect</target>
        </trans-unit>
        <trans-unit id="705b1a60915dcfb87b453e10e4a74b673ebf2f56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame::tabBarRect</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyleOptionTabWidgetFrame :: tabBarRect</target>
        </trans-unit>
        <trans-unit id="6b991e94cb8d820b9fad00d228d1964493eb086e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgGenerator::viewBox() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgGenerator :: viewBox () const</target>
        </trans-unit>
        <trans-unit id="1bfe3fa0ce8cad167b36675d2d257031a71e5a93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgRenderer::viewBox() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSvgRenderer :: viewBox () const</target>
        </trans-unit>
        <trans-unit id="f9d494cd9a2ee0a8b641bbfbd32132b913a18ecb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSystemTrayIcon::geometry() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QSystemTrayIcon :: geometry () const</target>
        </trans-unit>
        <trans-unit id="4fbd599e166463d64b9dfc8b0c5f34a794e1abd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTabBar::tabRect(int</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTabBar :: tabRect (int</target>
        </trans-unit>
        <trans-unit id="33c7608a31260115dfad0cce570b8c5168c1b082" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTableWidget::visualItemRect(const &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTableWidget :: visualItemRect (const &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="60ac31db93a99c73c762d4140662f61ec897fd30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit::cursorRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit :: cursorRect () const</target>
        </trans-unit>
        <trans-unit id="a7afb99bfaba43583da537c36c96d3778b643d22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit::cursorRect(const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTextEdit :: cursorRect (const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e3f8209c285c430b43ab9e7a19c770a871aed552" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTransform::mapRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTransform :: mapRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; 및</target>
        </trans-unit>
        <trans-unit id="4c4726662a11558d4b66dc32aa3ea30500b40660" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTreeWidget::visualItemRect(const &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QTreeWidget :: visualItemRect (const &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="39a479f8107fabfffa91338bdfb858c474f0c3c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVariant::toRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVariant :: toRect () const</target>
        </trans-unit>
        <trans-unit id="249541468e07e6388069cb5eb6e90b3fa1efb780" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVideoSurfaceFormat::viewport() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVideoSurfaceFormat :: viewport () const</target>
        </trans-unit>
        <trans-unit id="2a28e44e81a1429a14e79de86421322a8f2a1159" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWidget::contentsRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWidget :: contentsRect () const</target>
        </trans-unit>
        <trans-unit id="b592fc66ae60df4c69efc520f80e24ed1be6f0a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow::frameGeometry() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow :: frameGeometry () const</target>
        </trans-unit>
        <trans-unit id="de39cae76060ef9b26fdbd99f93cae21b287b1b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow::geometry() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QWindow :: geometry () const</target>
        </trans-unit>
        <trans-unit id="35e522d0e171b33a210adbaf68054efa1bed3951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState::deviceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState :: deviceRect () const</target>
        </trans-unit>
        <trans-unit id="6132e473f11a1a147e9da48532b6fed638508632" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState::viewportRect() const</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; RenderState :: viewportRect () const</target>
        </trans-unit>
        <trans-unit id="2ac15a68d6a76343c50bee80b3f0d1672da40e95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; is limited to the minimum and maximum values for the &lt;code&gt;int&lt;/code&gt; type. Operations on a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; that could potentially result in values outside this range will result in undefined behavior.</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; 는 &lt;code&gt;int&lt;/code&gt; 유형 의 최소값과 최대 값으로 제한됩니다 . 이 범위 밖의 값을 초래할 수 있는 &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; 에서의 조작 은 정의되지 않은 동작을 초래합니다.</target>
        </trans-unit>
        <trans-unit id="dc7a0c0529eb96e4a20a02b14658b87ceee15112" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="a7090fe01390af6093676623871ef661c78cb5f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;'s &lt;a href=&quot;qrect#right&quot;&gt;right()&lt;/a&gt; function returns &lt;a href=&quot;qrect#left&quot;&gt;left()&lt;/a&gt; + &lt;a href=&quot;qrect#width&quot;&gt;width()&lt;/a&gt; - 1 and the &lt;a href=&quot;qrect#bottom&quot;&gt;bottom()&lt;/a&gt; function returns &lt;a href=&quot;qrect#top&quot;&gt;top()&lt;/a&gt; + &lt;a href=&quot;qrect#height&quot;&gt;height()&lt;/a&gt; - 1. The bottom-right green point in the diagrams shows the return coordinates of these functions.</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; 의 &lt;a href=&quot;qrect#right&quot;&gt;right ()&lt;/a&gt; 함수는 &lt;a href=&quot;qrect#left&quot;&gt;left ()&lt;/a&gt; + &lt;a href=&quot;qrect#width&quot;&gt;width ()&lt;/a&gt; -1을 리턴 하고 &lt;a href=&quot;qrect#bottom&quot;&gt;bottom ()&lt;/a&gt; 함수는 &lt;a href=&quot;qrect#top&quot;&gt;top ()&lt;/a&gt; + &lt;a href=&quot;qrect#height&quot;&gt;height ()&lt;/a&gt; -1을 리턴합니다. 다이어그램의 오른쪽 아래 녹색 점은 이러한 함수의 리턴 좌표를 보여줍니다. .</target>
        </trans-unit>
        <trans-unit id="acddd6ea12198f38002f40255b31189a68d4212b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(1, 2, 6, 4)</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; (1, 2, 6, 4)</target>
        </trans-unit>
        <trans-unit id="0c8594f8c1816d5ba768305da79fd9f8c493cb39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(1, 2), &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(7, 6))</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; ( &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; (1, 2), &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; (7, 6))</target>
        </trans-unit>
        <trans-unit id="b391ce423b2c666c4cb9352337bc5d8571562a75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(1, 2), &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;(6, 4))</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; ( &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; (1, 2), &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; (6, 4))</target>
        </trans-unit>
        <trans-unit id="6796f924e86f94b50df2bc6d7b2acd71734a8218" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; , &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2b8a284c7156c7e0507ef4223fd2e76561926dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; -&amp;gt; vec4 - Qt.rect(x, y, w, h) becomes vec4(x, y, w, h) in the shader.</source>
          <target state="translated">&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; , &lt;a href=&quot;qrectf&quot;&gt;QRectF-&lt;/a&gt; &amp;gt; vec4-Qt.rect (x, y, w, h)는 쉐이더에서 vec4 (x, y, w, h)가됩니다.</target>
        </trans-unit>
        <trans-unit id="68e28ca83e76242dd6397b47bca4baa4d678971b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator&amp;amp;=(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp; QRect :: 연산자 &amp;amp; = (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b75adf0e95713dad7af5dc637a95c7131cebeeb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator+=(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp; QRect :: operator + = (const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="20473b43edbf0558f1c8e027f48a499b97528325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator-=(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp; QRect :: operator-= (const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="df268ef665a8aa07323fd264211bb38b6e166ce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;QRect::operator|=(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp; QRect :: 연산자 | = (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="499bee59c484d11e003e7c7358e222bbdf6e539c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::adjusted(int</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 조정 (int</target>
        </trans-unit>
        <trans-unit id="45dec08bff198c82be6238bb41dc66009a438ba8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::intersected(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 교차 (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ead85c04353fcc5febc41586e37d6fb1c808a2c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::marginsAdded(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 여백 방문자 (const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cd894081146bbfa88689054d96c9fddb4edc9b7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::marginsRemoved(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 여백 제거 (const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b69b5cda4341e171669e36c95a24f3f692836726" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::normalized() const</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: normalized () const</target>
        </trans-unit>
        <trans-unit id="3cd29ed371e26f6a953f43fd90c2c6e51aa68596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator&amp;amp;(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 연산자 &amp;amp; (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3bbff4b33f3a0ee214c25c8533c0a5c405220426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator+(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 연산자 + (const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="93521e8703219cc2717e6d0d961df548a5ab27f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator+(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 연산자 + (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c4004dc9cdc180b3001cef3cebbe26fbb6ff882b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator-(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 연산자-(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="90d2618653f038c0f3657583648ea70a2c84fa5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::operator|(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 연산자 | (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b0b9037d886ad6414ea667f28a8f7632aebf5a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::translated(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 번역됨 (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0abda71f4201abae5a38e0dd8848a5b7b0a994c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::translated(int</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 번역됨 (INT</target>
        </trans-unit>
        <trans-unit id="db2f3e07af1c51585fbbf9094f4b5bc82d8c8058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: transposed () const</target>
        </trans-unit>
        <trans-unit id="35420a9b76d933faa8e05472b68855dd56a51e39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect::united(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; QRect :: 단위 (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="63907f85e71d9ad66ffe2769db1439d78086ba77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator+(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator+(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8d5572e220a23a2083672eafed235ecc2e70a420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator+(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator+(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1189adf13c9e35a00b0a4c3a57a1dff8ce613806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator-(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt;operator-(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e989ca1440b20498c74cf2ee2c6ee78287a143fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#intersected&quot;&gt;intersected&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrect#intersected&quot;&gt;intersected&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="86e52c5b7666bf9d0d61a90a6de9b15c38b50080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#left&quot;&gt;left&lt;/a&gt;() + &lt;a href=&quot;qrect#width&quot;&gt;width&lt;/a&gt;() - 1</source>
          <target state="translated">&lt;a href=&quot;qrect#left&quot;&gt;왼쪽&lt;/a&gt; () + &lt;a href=&quot;qrect#width&quot;&gt;너비&lt;/a&gt; ()-1</target>
        </trans-unit>
        <trans-unit id="70de9cee71348d865ff6d234e77bca88e12d75dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#top&quot;&gt;top&lt;/a&gt;() &amp;lt;= &lt;a href=&quot;qrect#bottom&quot;&gt;bottom&lt;/a&gt;(). A null rectangle (&lt;a href=&quot;qrect#isNull&quot;&gt;isNull&lt;/a&gt;() == true) on the other hand, has both width and height set to 0.</source>
          <target state="translated">&lt;a href=&quot;qrect#top&quot;&gt;상단&lt;/a&gt; () &amp;lt;= &lt;a href=&quot;qrect#bottom&quot;&gt;하단&lt;/a&gt; (). 반면 널 사각형 ( &lt;a href=&quot;qrect#isNull&quot;&gt;isNull&lt;/a&gt; () == true)은 너비와 높이가 모두 0으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="43b357a63265b6cf7907c71e6e98b40856e0b368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#top&quot;&gt;top&lt;/a&gt;() + &lt;a href=&quot;qrect#height&quot;&gt;height&lt;/a&gt;() - 1</source>
          <target state="translated">&lt;a href=&quot;qrect#top&quot;&gt;상단&lt;/a&gt; () + &lt;a href=&quot;qrect#height&quot;&gt;높이&lt;/a&gt; ()-1</target>
        </trans-unit>
        <trans-unit id="ad0f9a77443e620052f00fa33e2533f750771e43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrect#united&quot;&gt;united&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrect#united&quot;&gt;united&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="dc3620b3f68b3b14df68829fbb9dfeb143b5cdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; PaintContext::clip</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; PaintContext :: 클립</target>
        </trans-unit>
        <trans-unit id="0360fd34278e13c1542a1b9c53d3941d492eb1ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer::destinationRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer :: destinationRect () const</target>
        </trans-unit>
        <trans-unit id="e22178a7e21938f3798f22cb0e36ab7137eab159" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer::sourceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QBlitFramebuffer :: sourceRect () const</target>
        </trans-unit>
        <trans-unit id="ccb8dabd3bfd2d2d5396c6f9d179a834c61c818c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QCameraFocusZone::area() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QCameraFocusZone :: area () const</target>
        </trans-unit>
        <trans-unit id="2b7b5840595b517eea238ef9bcbff6de52a6b83d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::boundingRect(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: boundingRect ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b628d947c40dd757a8c41476ad32fe859dd4e6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::boundingRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: boundingRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e644c61dc7b3112dc76661ebdff04d3ade47c2b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::boundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: boundingRect (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a23d1ffec5ac8cb6d3f0376c905c3e94a232270" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF::tightBoundingRect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QFontMetricsF :: tightBoundingRect (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fcc2fa7d1424f213261c4cfcea51730e5d8ed4fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEffect::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEffect :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="9f0a603120729e1a6dc18586d24471f4bef2d4aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEllipseItem::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsEllipseItem :: rect () const</target>
        </trans-unit>
        <trans-unit id="03f9b4aa5cac7478b3f280fd64de3705c04b2024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::childrenBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: childrenBoundingRect () const</target>
        </trans-unit>
        <trans-unit id="be429103ef5ad23c6c598bfc703c219be49c0029" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromItem (const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="82a00ecbc32656e5ca31fc3bc952e368c05f0416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromParent ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dd9f5b741ccfa305ce5740dd8bf09db39e3c8ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a0720f6d5d3e91f956a89d5a3c41f511f43652a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromParent(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromParent (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a3b5cc4853438333caa80fc2a1b2dd445f88214d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromScene ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e937c54c5f1b3f5a1e89567ea393238605af6c59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a6eb1c1baeb52ddf6266f641216ce3ea1c703da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectFromScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectFromScene (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d14a2bfb319c2908053b3ff1628f8eb2628c78f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToItem (const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5efb8104a2f3aa31644d6ab6f0ef3663755a6aec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToParent ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d19191c804b745c6fb514c8d397848b1d8d0104" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dce5605c567a85e588fd2513d9c8fad07e252d84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToParent(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToParent (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9c18770b3314866888a15b3a753a6de945880871" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToScene ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b67c144684e0b14143b620757faf9935435ecdda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ebaf0f4a0233a9d8b142550f70f1c3b7c5c8883" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::mapRectToScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: mapRectToScene (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a9cd02406a8b4704b67d041441448d45e6e7d501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::sceneBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: sceneBoundingRect () const</target>
        </trans-unit>
        <trans-unit id="7b4123a025d8bc90af693707b510bc6918a6bb4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem::contentsRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem :: contentsRect () const</target>
        </trans-unit>
        <trans-unit id="9c83ab2754e9fd522ff00ec757ff52f9dd155771" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem::geometry() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsLayoutItem :: geometry () const</target>
        </trans-unit>
        <trans-unit id="7e3f7dfc69b90de5c2e50e865c5d0c0574c495f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsProxyWidget::subWidgetRect(const &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsProxyWidget :: subWidgetRect (const &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eda40b16be8fe5eb765cd31aba00b81d27b67acb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsRectItem::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsRectItem :: rect () const</target>
        </trans-unit>
        <trans-unit id="34040194c47977663af0e1e41404f16a666890c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsScene::itemsBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsScene :: itemsBoundingRect () const</target>
        </trans-unit>
        <trans-unit id="78bc68b32b75483cbd7b00915c2bf7d045de89f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget :: rect () const</target>
        </trans-unit>
        <trans-unit id="b88bee27d7653027e81e09cdc0d0a84f4505c532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget::windowFrameGeometry() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget :: windowFrameGeometry () const</target>
        </trans-unit>
        <trans-unit id="53b91ec51eb82bb52c15598c7e77961bee334984" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget::windowFrameRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsWidget :: windowFrameRect () const</target>
        </trans-unit>
        <trans-unit id="054ef6928a066489882c4772e86c86aa25c79dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QInputMethod::inputItemRectangle() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QInputMethod :: inputItemRectangle () const</target>
        </trans-unit>
        <trans-unit id="30af511bda94d3a077dbf215a3e481b006599915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix4x4::mapRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix4x4 :: mapRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="699f99a0b21bd0a8cccb329a6372dea93c4676d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix::mapRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QMatrix :: mapRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="40172116281dea5ecad222bdabdd33acbf8a0da2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::fullRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: fullRect () const</target>
        </trans-unit>
        <trans-unit id="b51f79127cb22a79ac6766a474e1ceaf6a3b0485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::fullRect(&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: fullRect ( &lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout :: 단위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1de9adf8571c929e10d73170e64d814175ff5153" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::paintRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: paintRect () const</target>
        </trans-unit>
        <trans-unit id="a056f293fbb64359bd556be44008ddf0783d4a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout::paintRect(&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageLayout :: paintRect ( &lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout :: 단위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33eae70a88995f120c5c9b84da3b7187f6ce2cfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageSize::rect(&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPageSize :: rect ( &lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize :: 단위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b77c67bafe2360e1ec639c7b2822ba1c512e96d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter::boundingRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter :: boundingRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09b7d8d4443582649d42d305edaeb38293c55053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter::clipBoundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainter :: clipBoundingRect () const</target>
        </trans-unit>
        <trans-unit id="116f4a07ec1bee8184aa2765844390da62acf1f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="1dde1e1e27479f35c8ac00a06eae54b79606e9ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath::controlPointRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPainterPath :: controlPointRect () const</target>
        </trans-unit>
        <trans-unit id="1d315831282b58e948f2dc0247b31d0fdbff0870" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPolygonF::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPolygonF :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="a6957d12f7296852e8b7766f47388b3ca2d972bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter::pageRect(&lt;a href=&quot;qprinter#Unit-enum&quot;&gt;QPrinter::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter :: pageRect ( &lt;a href=&quot;qprinter#Unit-enum&quot;&gt;QPrinter :: 단위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c954227edb1003f125bf9070866e4e275cbf00b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter::paperRect(&lt;a href=&quot;qprinter#Unit-enum&quot;&gt;QPrinter::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QPrinter :: paperRect ( &lt;a href=&quot;qprinter#Unit-enum&quot;&gt;Q 프린터 :: 단위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d0e7d803d4211beec700529abcd70d526ceddc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectFromItem(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectFromItem (const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1c3d43b7924a14416a339b2cbad3c6f4b6689c01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectFromScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectFromScene (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a0062b6dab86695f2732966b5f27aee6e1f1f7fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectToItem(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectToItem (const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9efcefdf0bb653f8dd2df5729d10074e2f947455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem::mapRectToScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QQuickItem :: mapRectToScene (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="59db90fdbfca89d4f2960a704a5c84f7c7ea40ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont::boundingRect(&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont :: boundingRect ( &lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a136a1a6f53b83e7adf59a6e3f65db848129f38d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont::boundingRect(&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QRawFont::boundingRect(&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7797becdcf638cad3462aced540dd5b7e2532ea1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGClipNode::clipRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGClipNode :: clipRect () const</target>
        </trans-unit>
        <trans-unit id="6d9a0061687d726a9f8f34ad5474e4f2e4ae3834" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleRectNode::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleRectNode :: rect () const</target>
        </trans-unit>
        <trans-unit id="e02127be8b5cd6e3c0780cd19b8f60566a9f1ed3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode :: rect () const</target>
        </trans-unit>
        <trans-unit id="1382829dc504db6e4108c6d6f9e76bef285bd651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode::sourceRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGSimpleTextureNode :: sourceRect () const</target>
        </trans-unit>
        <trans-unit id="d61b40fca05fb79b53c0d2d5a5e961fb556c8f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGTexture::convertToNormalizedSourceRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGTexture :: convertToNormalizedSourceRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="930e7571110f8b325045c05322f32a1c08be2075" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QScrollPrepareEvent::contentPosRange() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QScrollPrepareEvent :: contentPosRange () const</target>
        </trans-unit>
        <trans-unit id="03d203a2f6f049db6e133df37f5af6c7a1844717" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QStyleOptionGraphicsItem::exposedRect</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QStyleOptionGraphicsItem :: exposedRect</target>
        </trans-unit>
        <trans-unit id="4e7e694b288d08120ee3d2f016019fc313b37b9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSvgRenderer::boundsOnElement(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSvgRenderer :: boundsOnElement (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="51e1cfdb5886b5cfd0dbc979bb5cee246d8d1038" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextInlineObject::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextInlineObject :: rect () const</target>
        </trans-unit>
        <trans-unit id="c53a66007a65d85b409d378149243f0783485695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLayout::boundingRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLayout :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="cb6f0ba1128376f1c9852b38eb4dd77322311249" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine::naturalTextRect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine :: naturalTextRect () const</target>
        </trans-unit>
        <trans-unit id="70947e5c8bebae6a56aba9ea1033a19a65b18992" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine::rect() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTextLine :: rect () const</target>
        </trans-unit>
        <trans-unit id="ba65d08cf5c1d0553123caae0101c444fcfe7317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTransform::mapRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QTransform :: mapRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; 및</target>
        </trans-unit>
        <trans-unit id="692c1500ec59ab50e47e71ee893bb7926f542365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QVariant::toRectF() const</source>
          <target state="translated">&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QVariant :: toRectF () const</target>
        </trans-unit>
        <trans-unit id="3ce7fbdcf8806ab9f341276be9910dc1aeddd727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator&amp;amp;=(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp; QRectF :: 연산자 &amp;amp; = (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fa87dc39b78f4b1fb7a86e385dae9176d9ed359a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator+=(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp; QRectF :: operator + = (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44e3a88375d68f1384325ce661e66bf631640f4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator-=(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp; QRectF :: operator-= (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="05195f7ebf466477ada4fc060d1578613b82127c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;QRectF::operator|=(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp; QRectF :: 연산자 | = (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="67b3b1a03bc6ef70d4bd30fb29f83675704d769e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::adjusted(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 조정 ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b4eb61215056feb35a5c2ef203de6d5d9f504a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::intersected(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 교차 (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bd36b7b8bacf97b41083ce63a9ecacf1ee93cde3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::marginsAdded(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 여백 방문자 (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9946bb2c3dfa8f023a499b6a447f26bf90ed8105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::marginsRemoved(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 여백 제거 (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="31733679496fe4f6f7e88e1646c4b552df297131" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::normalized() const</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: normalized () const</target>
        </trans-unit>
        <trans-unit id="d426a3de03bc4b4ced1f2f2b7d928a09b0169064" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator&amp;amp;(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 연산자 &amp;amp; (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="86b9994bd227972c91a96e62688b4be225eac2f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator+(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 연산자 + (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="614a60cdd6d95a410c8fceece14b360b22d93eb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator+(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 연산자 + (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cda82fdeca88afef5d017bc508cb01c3c9f128a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator-(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 연산자-(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="71300304b3a7ce87fde345d552a11873ba0aac7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::operator|(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 연산자 | (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a9e52c2972012df3c7ed5fa7f3ac963bc2c21a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::translated(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 번역됨 ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="292305632ad64f5e170c0838fc5aea520e995f2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::translated(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 번역됨 (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a17b418b568f339ba1a9cf0642b5657331ac956" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: transposed () const</target>
        </trans-unit>
        <trans-unit id="dda394dd1cee6f5c3c91a00b27a995ac0641787d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF::united(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; QRectF :: 단위 (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="983d5433383494c340010e80fa9acb9015d589c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator+(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator+(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="57d281c1b40857500f10076d70f812072d26f99e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator+(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator+(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3a6ce36d658a84ed89eb104464bd77495ac034b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator-(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt;operator-(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b9954a414d1f88767e8f5aa3ff2676c99bf7ab53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#intersected&quot;&gt;intersected&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrectf#intersected&quot;&gt;intersected&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="88487205b19d1ca7f316a831b5f9f8514a8850a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrectf#united&quot;&gt;united&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qrectf#united&quot;&gt;united&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="2b68ee4592e74fec64c0ab6107fc5758ed24781b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; QVariant::toRegExp() const</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; QVariant :: toRegExp () const</target>
        </trans-unit>
        <trans-unit id="5ace9fd40ccc5da8e8c4d8e62581f367b97b9879" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; by default does Unicode-aware matching, while QRegularExpression requires a separate option; see below for more details.</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; by default does Unicode-aware matching, while QRegularExpression requires a separate option; see below for more details.</target>
        </trans-unit>
        <trans-unit id="7a033791b055b36d597406d760eb44cf4e2f4919" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; can match case insensitively using &lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;(), and can use non-greedy matching, see &lt;a href=&quot;qregexp#setMinimal&quot;&gt;setMinimal&lt;/a&gt;(). By default &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; uses full regexps but this can be changed with &lt;a href=&quot;qregexp#setPatternSyntax&quot;&gt;setPatternSyntax&lt;/a&gt;(). Searching can be done forward with &lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt;() or backward with &lt;a href=&quot;qregexp#lastIndexIn&quot;&gt;lastIndexIn&lt;/a&gt;(). Captured text can be accessed using &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt;() which returns a string list of all captured strings, or using &lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;() which returns the captured string for the given index. The &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt;() function takes a match index and returns the position in the string where the match was made (or -1 if there was no match).</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; 는 &lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt; ()를 사용하여 대소 문자를 구분하지 않고 일치 시킬 수 있으며 욕심이없는 일치를 사용할 수 있습니다 ( &lt;a href=&quot;qregexp#setMinimal&quot;&gt;setMinimal&lt;/a&gt; () 참조 ). 기본적으로 &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; 는 전체 정규 표현식을 사용하지만 &lt;a href=&quot;qregexp#setPatternSyntax&quot;&gt;setPatternSyntax&lt;/a&gt; () 로 변경할 수 있습니다 . 검색은 &lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt; () 또는 &lt;a href=&quot;qregexp#lastIndexIn&quot;&gt;lastIndexIn&lt;/a&gt; ()을 사용 하여 뒤로 수행 할 수 있습니다 . 캡처 된 텍스트는 캡처 된 모든 문자열의 문자열 목록을 반환하는 &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt; () 또는 주어진 인덱스에 대해 캡처 된 문자열을 반환하는 &lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt; ()을 사용하여 액세스 할 수 있습니다 . &lt;a href=&quot;qregexp#pos&quot;&gt;POS&lt;/a&gt; () 함수는 일치 인덱스를 받아 경기가 만든 (-1 일치 없었다 경우) 된 문자열의 위치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3989c2bd1d2a541322cb14341bfdd5953f39fe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;'s quantifiers are the same as Perl's greedy quantifiers (but see the &lt;a href=&quot;qregexp#greedy-quantifiers&quot;&gt;note above&lt;/a&gt;). Non-greedy matching cannot be applied to individual quantifiers, but can be applied to all the quantifiers in the pattern. For example, to match the Perl regexp &lt;b&gt;ro+?m&lt;/b&gt; requires:</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; 의 수량 화기 는 Perl의 욕심 많은 수량 화기 와 동일합니다 (그러나 &lt;a href=&quot;qregexp#greedy-quantifiers&quot;&gt;위&lt;/a&gt; 의 참고 참조 ). 욕심없는 매칭은 개별 수량 자에는 적용 할 수 없지만 패턴의 모든 수량 자에는 적용 할 수 있습니다. 예를 들어, Perl regexp &lt;b&gt;ro +? m&lt;/b&gt; 과 일치 하려면 다음이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="886d682a3dfc085367817a62f515f0723369456e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#PatternSyntax-enum&quot;&gt;QRegExp::PatternSyntax&lt;/a&gt; QRegExp::patternSyntax() const</source>
          <target state="translated">&lt;a href=&quot;qregexp#PatternSyntax-enum&quot;&gt;QRegExp :: PatternSyntax&lt;/a&gt; QRegExp :: patternSyntax () const</target>
        </trans-unit>
        <trans-unit id="95eec49df4e1e76c879e50f418c4142219a97b16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;QRegExp::operator=(&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp; QRegExp :: operator = ( &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="4b0b5f39e47b8fa9416578f345b9247993e49ddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;QRegExp::operator=(const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp; QRegExp :: operator = (const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ccd7fb0ed213d720f3091fc21e9354545e7c6641" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="876745f22d7a949bdcbd06ec71c9432fb0d3c7ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;() in Qt 4 served two purposes: it exactly matched a regular expression against a subject string, and it implemented partial matching.</source>
          <target state="translated">&lt;a href=&quot;qregexp#exactMatch&quot;&gt;&lt;/a&gt;Qt 4의 QRegExp :: exactMatch ()는 두 가지 용도로 사용되었습니다. 제목 문자열과 정규 표현식을 정확하게 일치 시켰으며 부분 일치를 구현했습니다.</target>
        </trans-unit>
        <trans-unit id="35b53dffbef0d4f4fcdbf38813ef48531c35ac42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;() implemented minimal matching by simply reversing the greediness of the quantifiers (&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; did not support lazy quantifiers, like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, etc.). &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; instead does support greedy, lazy and possessive quantifiers. The &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption&lt;/a&gt; pattern option can be useful to emulate the effects of &lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;(): if enabled, it inverts the greediness of quantifiers (greedy ones become lazy and vice versa).</source>
          <target state="translated">&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal는&lt;/a&gt; () 단순히 한정사의 탐욕을 (반대로하여 최소한의 일치를 구현 &lt;a href=&quot;qregexp&quot;&gt;QRegExp이&lt;/a&gt; 같은 게으른 한정사를 지원하지 &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt; 등). &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 은 욕심 많고 게으른 소유주의 정량 자를 지원합니다. &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption의&lt;/a&gt; 패턴 옵션의 효과를 모방하는 것이 유용 할 수 있습니다 &lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp :: setMinimal을&lt;/a&gt; () : 활성화 된 경우, 그것은 한정사의 탐욕 (욕심 많은 사람은 게으른되고 그 반대의 경우도 마찬가지)를 반전시킵니다.</target>
        </trans-unit>
        <trans-unit id="7ac1a42aad780c1616708dde5ba8825f353149ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;() implemented minimal matching by simply reversing the greediness of the quantifiers (&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; did not support lazy quantifiers, like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;+?&lt;/code&gt;, etc.). QRegularExpression instead does support greedy, lazy and possessive quantifiers. The &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption&lt;/a&gt; pattern option can be useful to emulate the effects of &lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;(): if enabled, it inverts the greediness of quantifiers (greedy ones become lazy and vice versa).</source>
          <target state="translated">&lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;() implemented minimal matching by simply reversing the greediness of the quantifiers (&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; did not support lazy quantifiers, like &lt;code&gt;*?&lt;/code&gt; , &lt;code&gt;+?&lt;/code&gt; , etc.). QRegularExpression instead does support greedy, lazy and possessive quantifiers. The &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;InvertedGreedinessOption&lt;/a&gt; pattern option can be useful to emulate the effects of &lt;a href=&quot;qregexp#setMinimal&quot;&gt;QRegExp::setMinimal&lt;/a&gt;(): if enabled, it inverts the greediness of quantifiers (greedy ones become lazy and vice versa).</target>
        </trans-unit>
        <trans-unit id="4b105bd5d88e0d9b5835b53240a379c0fe39eec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt; uses a regular expression (regexp) to determine whether an input string is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, or &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;. The regexp can either be supplied when the &lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt; is constructed, or at a later time.</source>
          <target state="translated">&lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt; 는 정규식 (regexp)을 사용하여 입력 문자열이 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt; , &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt; 또는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt; 인지 판별합니다 . 정규식은 &lt;a href=&quot;qregexpvalidator&quot;&gt;QRegExpValidator&lt;/a&gt; 가 구성 될 때 또는 나중에 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a233868cacdb55f05ced5ce7cd18308803c5434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QBackingStore::staticContents() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QBackingStore :: staticContents () const</target>
        </trans-unit>
        <trans-unit id="08bc28c62ec5b5767a8b2c27a91cb5b17076e45f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QGraphicsItem::boundingRegion(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QGraphicsItem :: boundingRegion (const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b2129964ce330fd633b1067220d69112e64e8083" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix::map(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix :: map (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8fd89f69011feddfc83c6759887570ede63a6fb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix::operator*(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QMatrix :: 연산자 * (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5f101ed8a80623d0d70026d2a77bb4b5c59ee03c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPaintEngineState::clipRegion() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPaintEngineState :: clipRegion () const</target>
        </trans-unit>
        <trans-unit id="4f54f27e2f06ebfb17afef43fc6aa0dfc803aaee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPainter::clipRegion() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QPainter :: clipRegion () const</target>
        </trans-unit>
        <trans-unit id="73b652c7f18620e216560111055a89bca369e4f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QStyleHintReturnMask::region</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QStyleHintReturnMask :: region</target>
        </trans-unit>
        <trans-unit id="786e12322ff2af25561a3fe09c270d0750d47ea7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform::map(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform :: map (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1637bf72755090dc7b628013cbd8924b2caaca6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform::operator*(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QTransform :: 연산자 * (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4054a7902c84d061594a3d5fcfa6457ef72b9ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget::mask() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget :: mask () const</target>
        </trans-unit>
        <trans-unit id="5971e99f59df129813261ed554f446e550f777c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget::visibleRegion() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWidget :: visibleRegion () const</target>
        </trans-unit>
        <trans-unit id="4df62398a8407f08eb829ff38ca9cd2e70cab692" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWindow::mask() const</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QWindow :: mask () const</target>
        </trans-unit>
        <trans-unit id="a13eb22bac6bc06f3de9daf89f667caeac4238e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; does not offer mutable iterators.</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; 은 변경 가능한 반복자를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="156fb181a9281c97d13dba3b3adb5787ea02bd20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; is an &lt;a href=&quot;implicit-sharing&quot;&gt;implicitly shared&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; 은 &lt;a href=&quot;implicit-sharing&quot;&gt;암시 적으로 공유 된&lt;/a&gt; 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a0bd00783bf5bddc5f768fa8b0c92bc212b5cd3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; is used with &lt;a href=&quot;qpainter#setClipRegion&quot;&gt;QPainter::setClipRegion&lt;/a&gt;() to limit the paint area to what needs to be painted. There is also a &lt;a href=&quot;qwidget#repaint&quot;&gt;QWidget::repaint&lt;/a&gt;() function that takes a &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; parameter. &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; is the best tool for minimizing the amount of screen area to be updated by a repaint.</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; 은 &lt;a href=&quot;qpainter#setClipRegion&quot;&gt;QPainter :: setClipRegion&lt;/a&gt; () 과 함께 사용되어 페인트 영역을 페인트해야 할 영역으로 제한합니다. 도있다 &lt;a href=&quot;qwidget#repaint&quot;&gt;는 QWidget :: 칠하고&lt;/a&gt; 소요 () 함수 &lt;a href=&quot;qregion&quot;&gt;QRegion의&lt;/a&gt; 매개 변수. &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; 은 다시 그리기로 업데이트 할 화면 영역의 양을 최소화하는 가장 좋은 도구입니다.</target>
        </trans-unit>
        <trans-unit id="92b7d269deea19bb02c35ba5ecb691cf789bcf8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;operator*(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;operator*(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ba9ddf5ad869cfd45ea6f7715f1821ea1a003015" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator&amp;amp;=(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: 연산자 &amp;amp; = (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8a64e9a8bd28baea2c50eba0dfade41065e1307b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator&amp;amp;=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: 연산자 &amp;amp; = (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e9f72e2a96fb4a6b0c6f5e7ab57b5852a67f826e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator+=(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: 연산자 + = (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="549a2068be5145bedfdc597f7c58c93be489db1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator+=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: operator + = (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b53ebcda332324d798053d13f401f7099d448df3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator-=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: 연산자-= (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="64e4ffb97f12a17699862f7101ec8e03014d3c95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator=(&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: operator = ( &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="91637b23069abac9bb985e1f173a161cf52d57fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: operator = (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f136813a7fb2bc58f0a51b40504867557fda0b13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator^=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: 연산자 ^ = (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bfb03667b40495dfa710188c1b21881cac40f6e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;QRegion::operator|=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp; QRegion :: 연산자 | = (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d87dd52c27de4432921ea1c739765fa8c57d757" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::intersected(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: 교차 (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ff153826b0728e92caf44248a3b28306206c32a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::intersected(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: 교차 (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="46737f5eb49aeb11caac4017f2c612ed4ad91545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::subtracted(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: 빼기 (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="21ab62552ab50c44c7aa1834952f89d5a8afce26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::translated(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: 번역됨 (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="520790ff9bfb2416fc15ba4bac1c02019b1f2217" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::translated(int</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: 번역됨 (int</target>
        </trans-unit>
        <trans-unit id="e45bdcdcc1b834e7709b8c4add8c709e072b2043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::united(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: 단위 (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5a664c6f5ecb96d4eb70fedd549bc4cfbbbe2471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::united(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: 단위 (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b008dfbce355ab4c7f80467b03d6cece1774a462" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion::xored(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; QRegion :: xored (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c2f64537736b9f6ed9a837658359dc2db6865d54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::begin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: begin () const</target>
        </trans-unit>
        <trans-unit id="09d2bd37fdbf213963130cc9ae4a02874e1dcf22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::cbegin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: cbegin () const</target>
        </trans-unit>
        <trans-unit id="ecec35e3c05def2e8945be7da951fc262f04e4ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::cend() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: cend () const</target>
        </trans-unit>
        <trans-unit id="d46ebdaea5f174b1edc24978010ba7cb66b86bfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion::const_iterator&lt;/a&gt; QRegion::end() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_iterator-typedef&quot;&gt;QRegion :: const_iterator&lt;/a&gt; QRegion :: end () const</target>
        </trans-unit>
        <trans-unit id="829c4345440a3f80d023b7969e6f1c2bc54509c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::crbegin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: crbegin () const</target>
        </trans-unit>
        <trans-unit id="c89684bc86f93b703a213f669a448299c49ef1e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::crend() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: crend ​​() const</target>
        </trans-unit>
        <trans-unit id="80d5dba3def5c628d93ae84e049cbd58bccd1356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::rbegin() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: rbegin () const</target>
        </trans-unit>
        <trans-unit id="6fb5aab1a09a55ee6ec5d055551841da9e789258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion::const_reverse_iterator&lt;/a&gt; QRegion::rend() const</source>
          <target state="translated">&lt;a href=&quot;qregion#const_reverse_iterator-typedef&quot;&gt;QRegion :: const_reverse_iterator&lt;/a&gt; QRegion :: rend () const</target>
        </trans-unit>
        <trans-unit id="5d596831a55af8ef611230bf2e6d287c9c0429e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QCborValue::toRegularExpression(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QCborValue :: toRegularExpression (const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b5c31667a91bb1baf936583c8b6545924838e5bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatch::regularExpression() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatch :: regularExpression () const</target>
        </trans-unit>
        <trans-unit id="d99f771677316c347592bf8e818f7db1bf117343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatchIterator::regularExpression() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QRegularExpressionMatchIterator :: regularExpression () const</target>
        </trans-unit>
        <trans-unit id="a77de0ccb6a4f0c0ec8aad7121fac96b751bc977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QVariant::toRegularExpression() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; QVariant :: toRegularExpression () const</target>
        </trans-unit>
        <trans-unit id="5bd4a69398bc34c4d2e5edc520164634b7aaf904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; does not support all the features available in Perl-compatible regular expressions. The most notable one is the fact that duplicated names for capturing groups are not supported, and using them can lead to undefined behaviour.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 은 Perl 호환 정규식에서 사용 가능한 모든 기능을 지원하지 않습니다. 가장 주목할만한 점은 그룹 캡처를 위해 중복 된 이름이 지원되지 않으며이를 사용하면 정의되지 않은 동작이 발생할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="85205d044caf4b48e98585a4cf51afdc93bf510f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; implements Perl-compatible regular expressions. It fully supports Unicode. For an overview of the regular expression syntax supported by &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;, please refer to the aforementioned pcrepattern(3) man page. A regular expression is made up of two things: a &lt;b&gt;pattern string&lt;/b&gt; and a set of &lt;b&gt;pattern options&lt;/b&gt; that change the meaning of the pattern string.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 은 Perl 호환 정규식을 구현합니다. 유니 코드를 완벽하게 지원합니다. &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression이&lt;/a&gt; 지원하는 정규식 구문에 대한 개요 는 앞에서 설명한 pcrepattern (3) 매뉴얼 페이지를 참조하십시오. 정규식은 &lt;b&gt;패턴 문자열&lt;/b&gt; 과 &lt;b&gt;패턴 문자열&lt;/b&gt; 의 의미를 변경하는 &lt;b&gt;패턴 옵션&lt;/b&gt; 세트 의 두 가지로 구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="d9bc678af7fb25cd82c0d7d29313f446ed8fae31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; implements this behaviour when using the &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;PartialPreferFirstMatch&lt;/a&gt; match type. This match type reports a partial match as soon as it is found, and other match alternatives are not tried (even if they could lead to a complete match). For instance:</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 은 &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;PartialPreferFirstMatch&lt;/a&gt; 일치 유형을 사용할 때이 동작을 구현 합니다. 이 일치 유형은 부분 일치가 발견되는 즉시보고하며 다른 일치 대안은 시도되지 않습니다 (완전한 일치로 이어질 수 있음에도 불구하고). 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="15bf1fe9bbec41dd30e1cfc75b0b48e515eaf988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; internally uses a just in time compiler (JIT) to optimize the execution of the matching algorithm. The JIT makes extensive usage of self-modifying code, which can lead debugging tools such as Valgrind to crash. You must enable all checks for self-modifying code if you want to debug programs using &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; (f.i., see Valgrind's &lt;code&gt;--smc-check&lt;/code&gt; command line option). The downside of enabling such checks is that your program will run considerably slower.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression은&lt;/a&gt; 내부적으로 JIT (Just In Time) 컴파일러를 사용하여 일치 알고리즘의 실행을 최적화합니다. JIT는 자체 수정 코드를 광범위하게 사용하므로 Valgrind와 같은 디버깅 도구가 충돌 할 수 있습니다. &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression을&lt;/a&gt; 사용하여 프로그램을 디버그하려면 자체 수정 코드에 대한 모든 검사를 활성화해야합니다 (fi, Valgrind의 &lt;code&gt;--smc-check&lt;/code&gt; 명령 행 옵션 참조). 이러한 검사를 사용하는 단점은 프로그램이 상당히 느리게 실행된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f12d43f1d6bfafd829eaa5a9b5f113a17a464b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; supports only Perl-compatible regular expressions.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 은 Perl 호환 정규식 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="cadc463a822091aa314890c9ab8d0a57bb1943fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; supports partial matching explicitly by means of the appropriate &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;MatchType&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 은 적절한 &lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;MatchType&lt;/a&gt; 을 통해 명시 적으로 부분 일치를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="c0ed4446e761f2b24d2ab9fecd0adb445e7461fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;: the pattern of a regular expression</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; : 정규식의 패턴</target>
        </trans-unit>
        <trans-unit id="365077492edef9c7887e287816e3348750b4c28f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression::MatchOptions&lt;/a&gt; QRegularExpressionMatch::matchOptions() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression :: MatchOptions&lt;/a&gt; QRegularExpressionMatch :: matchOptions () const</target>
        </trans-unit>
        <trans-unit id="4b006e0f83aba2ce7640bbc139fba7b14861cd93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression::MatchOptions&lt;/a&gt; QRegularExpressionMatchIterator::matchOptions() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchOption-enum&quot;&gt;QRegularExpression :: MatchOptions&lt;/a&gt; QRegularExpressionMatchIterator :: matchOptions () const</target>
        </trans-unit>
        <trans-unit id="2695e485c5f85fc0004046d6d8cb16ab184a11a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression::MatchType&lt;/a&gt; QRegularExpressionMatch::matchType() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression :: MatchType&lt;/a&gt; QRegularExpressionMatch :: matchType () const</target>
        </trans-unit>
        <trans-unit id="4f883d0368f687216a750e8358bded0f9a53a8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression::MatchType&lt;/a&gt; QRegularExpressionMatchIterator::matchType() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#MatchType-enum&quot;&gt;QRegularExpression :: MatchType&lt;/a&gt; QRegularExpressionMatchIterator :: matchType () const</target>
        </trans-unit>
        <trans-unit id="1f9df7eb2b55a5e58a677e8e7a54ea58e578f10d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression::PatternOptions&lt;/a&gt; QRegularExpression::patternOptions() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression :: PatternOptions&lt;/a&gt; QRegularExpression :: patternOptions () const</target>
        </trans-unit>
        <trans-unit id="7ab1c61ffaf59df8e9d0da39c217204f7c2b064e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;QRegularExpression::operator=(&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp; QRegularExpression :: operator = ( &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="8db4c33a888d68e86a697e36c71273169ff2b878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;QRegularExpression::operator=(const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp; QRegularExpression :: operator = (const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ad0a1c271ce81c530364c152665b88a75cf90e3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression::globalMatch&lt;/a&gt; returns a &lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt;, which is a Java-like forward iterator that can be used to iterate over the results. For instance:</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression :: globalMatch는&lt;/a&gt; 반환 &lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; 자바가-처럼 앞으로 반복자 결과를 반복하는 데 사용할 수 있습니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="7a69be019abea85bd2bbd4cf102a7e35ffff371f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression::globalMatch&lt;/a&gt;() implements Perl global match correctly, and the returned iterator can be used to examine each result.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;QRegularExpression :: globalMatch&lt;/a&gt; ()는 Perl 전역 일치를 올바르게 구현하며 반환 된 반복자를 사용하여 각 결과를 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39710968085670c6cf3ae3e357672d031e97217e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression::match(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression :: match (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="545b53966e667fb3872d212d0953323be39aa14c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression::match(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpression :: match (const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e8e7a27021ca4af4b38ff0c9a7b4e866ae84c365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator::next()</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator :: next ()</target>
        </trans-unit>
        <trans-unit id="44186683aea2b9d1e1bc35bf0c266e7981c906eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator::peekNext() const</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; QRegularExpressionMatchIterator :: peekNext () const</target>
        </trans-unit>
        <trans-unit id="b5306babe7e974d2fb34499acc530b9790e8e6ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;QRegularExpressionMatch::operator=(&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp; QRegularExpressionMatch :: operator = ( &lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="1519f3d7a97b2170522c9b71cac806e104091367" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;QRegularExpressionMatch::operator=(const &lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp; QRegularExpressionMatch :: operator = (const &lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ba3a64b65f6eec2b70ccffbfec2db2f9ee7b249c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatch#hasMatch&quot;&gt;QRegularExpressionMatch::hasMatch&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch#hasMatch&quot;&gt;QRegularExpressionMatch::hasMatch&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="71be822e1ca159763dae56d37c6d04bf364a784b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression::globalMatch(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression :: globalMatch (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4bcccd959118376f22bb8d113828f367abb4d90b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression::globalMatch(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; QRegularExpression :: globalMatch (const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5b96b272a9c5da9ee487725bf580a9317adc3f90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;QRegularExpressionMatchIterator::operator=(&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp; QRegularExpressionMatchIterator :: operator = ( &lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="32144fdaaedd6868eef38130f69a8467756752ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;QRegularExpressionMatchIterator::operator=(const &lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp; QRegularExpressionMatchIterator :: operator = (const &lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a3b9cd48a628ebad4593ea970d555983218546f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; automatically wraps the regular expression in the &lt;code&gt;\\A&lt;/code&gt; and &lt;code&gt;\\z&lt;/code&gt; anchors; in other words, it always attempts to do an exact match.</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; 는 &lt;code&gt;\\A&lt;/code&gt; 및 &lt;code&gt;\\z&lt;/code&gt; 앵커 에서 정규식을 자동으로 래핑합니다 . 즉, 항상 정확히 일치하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="fdd85f50056de1516010dafd7bc7ede5a2703990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; uses a regular expression (regexp) to determine whether an input string is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, or &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;. The regexp can either be supplied when the &lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; is constructed, or at a later time.</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; 는 정규식 (regexp)을 사용하여 입력 문자열이 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt; , &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt; 또는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt; 인지 판별합니다 . 정규 표현식은 &lt;a href=&quot;qregularexpressionvalidator&quot;&gt;QRegularExpressionValidator&lt;/a&gt; 가 구성 될 때 또는 나중에 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2355d0f4dd1c1e877ee984152b54aeb4bc08ea29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt; *QRemoteObjectNode::acquireDynamic(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt; * QRemoteObjectNode :: acquireDynamic (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0dc7a2d0b647abdc4f46512e7bd8acf2d1653910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt; and &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt; 및 &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76a87842f3c0f0504542c839514343c207902150" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt; and &lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;QRemoteObjectRegistryHost&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt; 및 &lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;QRemoteObjectRegistryHost&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de26cce7c20238c0963c594fdff3b0a569d72834" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjecthostbase&quot;&gt;QRemoteObjectHostBase&lt;/a&gt; is a base class that cannot be instantiated directly. It provides the &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;enableRemoting&lt;/a&gt; and &lt;a href=&quot;qremoteobjecthostbase#disableRemoting&quot;&gt;disableRemoting&lt;/a&gt; functionality shared by all host nodes (&lt;a href=&quot;qremoteobjecthost&quot;&gt;Host&lt;/a&gt; and &lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;RegistryHost&lt;/a&gt;) as well as the logic required to expose &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects on the Remote Objects network.</source>
          <target state="translated">&lt;a href=&quot;qremoteobjecthostbase&quot;&gt;QRemoteObjectHostBase&lt;/a&gt; 는 직접 인스턴스화 할 수없는 기본 클래스입니다. 원격 객체 네트워크에서 &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;소스&lt;/a&gt; 객체 를 노출하는 데 필요한 로직뿐만 아니라 모든 호스트 노드 ( &lt;a href=&quot;qremoteobjecthost&quot;&gt;Host&lt;/a&gt; 및 &lt;a href=&quot;qremoteobjectregistryhost&quot;&gt;RegistryHost&lt;/a&gt; )가 공유 하는 &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;enableRemoting&lt;/a&gt; 및 &lt;a href=&quot;qremoteobjecthostbase#disableRemoting&quot;&gt;disableRemoting&lt;/a&gt; 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="e193e82cdbfb531c5897b9cff2487253a8c63d89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; connected to a {&lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;} {Registry}. A Node constructed in this manner can not be connected to, and thus can not expose Source objects on the network. Finding and connecting to other (Host) Nodes is handled by the &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt; specified by</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; 가 { &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt; } {Registry}에 연결되었습니다 . 이러한 방식으로 구성된 노드는 연결할 수 없으므로 네트워크에서 소스 오브젝트를 노출 할 수 없습니다. 다른 (호스트) 노드 찾기 및 연결은 다음에 의해 지정된 &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry에&lt;/a&gt; 의해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="e64160eef91e607c5b337ae623076ab145d6f111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectnode#ErrorCode-enum&quot;&gt;QRemoteObjectNode::ErrorCode&lt;/a&gt; QRemoteObjectNode::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectnode#ErrorCode-enum&quot;&gt;QRemoteObjectNode :: ErrorCode&lt;/a&gt; QRemoteObjectNode :: lastError () const</target>
        </trans-unit>
        <trans-unit id="0d0cfc1541e5756d20a118ff695bea7d84d0616c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectpendingcall#Error-enum&quot;&gt;QRemoteObjectPendingCall::Error&lt;/a&gt; QRemoteObjectPendingCall::error() const</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectpendingcall#Error-enum&quot;&gt;QRemoteObjectPendingCall::Error&lt;/a&gt; QRemoteObjectPendingCall::error() const</target>
        </trans-unit>
        <trans-unit id="b0e7913826857355cf5d0a6e819a16c547bec76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectpendingcallwatcher&quot;&gt;QRemoteObjectPendingCallWatcher&lt;/a&gt; and &lt;a href=&quot;qremoteobjectpendingreply&quot;&gt;QRemoteObjectPendingReply&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectpendingcallwatcher&quot;&gt;QRemoteObjectPendingCallWatcher&lt;/a&gt; and &lt;a href=&quot;qremoteobjectpendingreply&quot;&gt;QRemoteObjectPendingReply&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ff6085b2e1ef5c1a96ac85349d3351d9de2691e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qremoteobjectreplica#State-enum&quot;&gt;QRemoteObjectReplica::State&lt;/a&gt; QRemoteObjectReplica::state() const</source>
          <target state="translated">&lt;a href=&quot;qremoteobjectreplica#State-enum&quot;&gt;QRemoteObjectReplica :: State&lt;/a&gt; QRemoteObjectReplica :: state () const</target>
        </trans-unit>
        <trans-unit id="43024f491e8a21b0e3d4fc9ae8188e3ac5878295" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; is an object that represents a set of data (and possibly children) relating to a single resource entity. &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; gives direct access to the bytes in their raw format. In this way direct access allows reading data without buffer copying or indirection. Indirection is often useful when interacting with the resource entity as if it is a file, this can be achieved with &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;. The data and children behind a &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; are normally compiled into an application/library, but it is also possible to load a resource at runtime. When loaded at run time the resource file will be loaded as one big set of data and then given out in pieces via references into the resource tree.</source>
          <target state="translated">&lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; 는 단일 자원 엔티티와 관련된 데이터 세트 (및 가능한 하위)를 나타내는 오브젝트입니다. &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; 는 원시 형식으로 바이트에 직접 액세스합니다. 이러한 방식으로 직접 액세스를 통해 버퍼 복사 나 간접적 인 데이터없이 데이터를 읽을 수 있습니다. 자원 엔티티가 파일 인 것처럼 자원 엔티티와 상호 작용할 때 종종 간접이 유용합니다. 이는 &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; 로 달성 할 수 있습니다 . &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; 뒤의 데이터와 자식 은 일반적으로 응용 프로그램 / 라이브러리로 컴파일되지만 런타임에 리소스를로드 할 수도 있습니다. 런타임에로드 될 때 리소스 파일은 하나의 큰 데이터 세트로로드 된 다음 참조를 통해 리소스 트리에 조각으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2ac4d89fb1914384ef40e3400839c47dce131509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qresource#Compression-enum&quot;&gt;QResource::Compression&lt;/a&gt; QResource::compressionAlgorithm() const</source>
          <target state="translated">&lt;a href=&quot;qresource#Compression-enum&quot;&gt;QResource :: Compression&lt;/a&gt; QResource :: compressionAlgorithm () const</target>
        </trans-unit>
        <trans-unit id="ddce5811d122cbb3ede12e4f30bc5c24791938bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qPremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64 Q 컬러&lt;/a&gt; :: qPremultiply ( &lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a8284b785dc3d5b1260f571efb6a64f6f9965a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qRgba64(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64 Q 컬러&lt;/a&gt; :: qRgba64 ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c30005398327fb9e79e6d11d5d40ca6555134985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qRgba64(&lt;a href=&quot;#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64 Q 컬러&lt;/a&gt; :: qRgba64 ( &lt;a href=&quot;#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2b1ca76c25be746f7a556e5699a3dd86e00d83a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::qUnpremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64 Q 컬러&lt;/a&gt; :: qUnpremultiply ( &lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5db3f9d7f861e410c648d8fff53e3e919ccb7a4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor::rgba64() const</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColor :: rgba64 () const</target>
        </trans-unit>
        <trans-unit id="d673152b0b8a6e0ba5cb07bb4b291a224f41e405" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColorTransform::map(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; QColorTransform::map(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3890ff19dbf04f46a79b3656453745c42538b7fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; can be used as a replacement for &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; when higher precision is needed. In particular a premultiplied &lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; can operate on unpremultiplied &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; without loss of precision except for alpha 0.</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; 는 높은 정밀도가 필요할 때 &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb를&lt;/a&gt; 대체 할 수 있습니다 . 특히 A의 미리 곱셈 &lt;a href=&quot;qrgba64&quot;&gt;QRgba64이&lt;/a&gt; unpremultiplied에서 작동 할 수 &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; 알파 0을 제외하고 정밀도의 손실없이.</target>
        </trans-unit>
        <trans-unit id="02efb2ec621dce6dc365d02d2c8060cf1bd8dd19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; is a 64-bit data-structure containing four 16-bit color channels: Red, green, blue and alpha.</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt; 는 4 개의 16 비트 컬러 채널 (빨강, 녹색, 파랑 및 알파)을 포함하는 64 비트 데이터 구조입니다.</target>
        </trans-unit>
        <trans-unit id="507dd213bef0ed893229f0864b62607c13d1a39e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qPremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qPremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c696869900e99fb98f7c6f3218d358a91874c9da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b920900f15211e8040b232bb46d1bca809cc045b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qRgba64(&lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37025f686df53a1b45302595890664a651565a7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qUnpremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;qUnpremultiply(&lt;a href=&quot;qrgba64&quot;&gt;QRgba64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50a7b0b570c8878bbd6e04dfc883c69cfa1b0bf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrhi&quot;&gt;QRhi&lt;/a&gt; *RenderState::rhi()</source>
          <target state="translated">&lt;a href=&quot;qrhi&quot;&gt;QRhi&lt;/a&gt; *RenderState::rhi()</target>
        </trans-unit>
        <trans-unit id="54de41b0212bf4d3eef56f73b4cb17bb41b9de6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrhiresourceupdatebatch&quot;&gt;QRhiResourceUpdateBatch&lt;/a&gt; *RenderState::resourceUpdateBatch()</source>
          <target state="translated">&lt;a href=&quot;qrhiresourceupdatebatch&quot;&gt;QRhiResourceUpdateBatch&lt;/a&gt; *RenderState::resourceUpdateBatch()</target>
        </trans-unit>
        <trans-unit id="230cea2c7ce06afd4879a1b963e6384bd9a88f63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; *QRotationSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; * QRotationSensor :: reading () const</target>
        </trans-unit>
        <trans-unit id="690105f63648d53b675dd4eee57b74337b4660e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand::Shape&lt;/a&gt; QRubberBand::shape() const</source>
          <target state="translated">&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand :: Shape&lt;/a&gt; QRubberBand :: shape () const</target>
        </trans-unit>
        <trans-unit id="b79383903304a3ac0a73a133a478d7156d195aaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand::Shape&lt;/a&gt; QStyleOptionRubberBand::shape</source>
          <target state="translated">&lt;a href=&quot;qrubberband#Shape-enum&quot;&gt;QRubberBand :: Shape&lt;/a&gt; QStyleOptionRubberBand :: shape</target>
        </trans-unit>
        <trans-unit id="6c7b2a832f0bb86aa9058259fb80cde93950796e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; and &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; 및 &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d425ab0bbf5801a3d171c07f253e6ad3632cfd49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; virtual destructor.</source>
          <target state="translated">&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; 가상 소멸자.</target>
        </trans-unit>
        <trans-unit id="a71eb0a472a087e7728173a6eb004dd2882af367" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; automatically detects errors while writing, such as the full partition situation, where &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() cannot write all the bytes. It will remember that an error happened, and will discard the temporary file in &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; 은 &lt;a href=&quot;qiodevice#write&quot;&gt;쓰기&lt;/a&gt; ()가 모든 바이트를 쓸 수없는 전체 파티션 상황과 같은 쓰기 중 오류를 자동으로 감지합니다 . 오류가 발생했음을 기억하고 &lt;a href=&quot;qsavefile#commit&quot;&gt;커밋&lt;/a&gt; () 에서 임시 파일을 버립니다 .</target>
        </trans-unit>
        <trans-unit id="447557ac270b18f6c3822d760cb1d5b3357f40b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; creates a temporary file in the same directory as the final file and atomically renames it. However this is not possible if the directory permissions do not allow creating new files. In order to preserve atomicity guarantees, &lt;a href=&quot;qsavefile#open&quot;&gt;open&lt;/a&gt;() fails when it cannot create the temporary file.</source>
          <target state="translated">&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; 은 최종 파일과 동일한 디렉토리에 임시 파일을 작성하고 원자 이름을 바꿉니다. 그러나 디렉토리 권한이 새 파일 작성을 허용하지 않으면 불가능합니다. 원 자성 보장을 유지하기 위해 임시 파일을 만들 수 없으면 &lt;a href=&quot;qsavefile#open&quot;&gt;open&lt;/a&gt; ()이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="acb2492c1d3ead710dd24a79035fe7b29a2bc7b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; is an I/O device for writing text and binary files, without losing existing data if the writing operation fails.</source>
          <target state="translated">&lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; 은 쓰기 작업이 실패하더라도 기존 데이터를 잃지 않고 텍스트 및 이진 파일을 쓰기위한 I / O 장치입니다.</target>
        </trans-unit>
        <trans-unit id="934f09b917da584cdeb77625dfbad42a431a7259" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt; supports the following format tags for &lt;a href=&quot;qabstract3dseries#itemLabelFormat-prop&quot;&gt;QAbstract3DSeries::setItemLabelFormat&lt;/a&gt;():</source>
          <target state="translated">&lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt; 는 &lt;a href=&quot;qabstract3dseries#itemLabelFormat-prop&quot;&gt;QAbstract3DSeries :: setItemLabelFormat&lt;/a&gt; ()에 대해 다음 형식 태그를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="61fba3f6350a1d182217ca998f140ac5f1365b45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt; &amp;amp;QScatterDataItem::operator=(const &lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt; &amp;amp; QScatterDataItem :: operator = (const &lt;a href=&quot;qscatterdataitem#QScatterDataItem&quot;&gt;QScatterDataItem&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d28393680aa7b20a679e03a69fa87e0ee8235b81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt; takes ownership of all QtDataVisualization::QScatterDataArray and &lt;a href=&quot;qscatterdataitem&quot;&gt;QScatterDataItem&lt;/a&gt; objects passed to it.</source>
          <target state="translated">&lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt; 는 전달 된 모든 QtDataVisualization :: QScatterDataArray 및 &lt;a href=&quot;qscatterdataitem&quot;&gt;QScatterDataItem&lt;/a&gt; 오브젝트의 소유권을 갖 습니다.</target>
        </trans-unit>
        <trans-unit id="a11e6d430aa22a3e9f2a19a5343ebb3d40c894a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; guarantees that the object pointed to will get deleted when the current scope disappears.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; 는 현재 범위가 사라지면 지정된 객체가 삭제되도록합니다.</target>
        </trans-unit>
        <trans-unit id="f5e8a1f1c7f8545e68837a11e1d1363f9ce6fc9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; simply holds a pointer to a heap allocated object and deletes it in its destructor. This class is useful when an object needs to be heap allocated and deleted, but no more. &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; is lightweight, it makes no use of additional structure or reference counting.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer는&lt;/a&gt; 단순히 힙 할당 객체에 대한 포인터를 보유하고 소멸자에서 삭제합니다. 이 클래스는 객체를 힙 할당 및 삭제해야하지만 더 이상 필요하지 않은 경우에 유용합니다. &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; 는 가벼우므로 추가 구조 나 참조 카운팅을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74393e6fc5c934cea29b04b13766f2f6c691b931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointerarraydeleter&quot;&gt;QScopedPointerArrayDeleter&lt;/a&gt; - deletes the pointer using &lt;code&gt;delete []&lt;/code&gt;. Use this handler for pointers that were allocated with &lt;code&gt;new []&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointerarraydeleter&quot;&gt;QScopedPointerArrayDeleter&lt;/a&gt; - &lt;code&gt;delete []&lt;/code&gt; 를 사용하여 포인터를 삭제 합니다. &lt;code&gt;new []&lt;/code&gt; 로 할당 된 포인터에는이 핸들러를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="24dd5759ca4b518ede243946c68d80857c2835ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointerdeleter&quot;&gt;QScopedPointerDeleter&lt;/a&gt; - the default, deletes the pointer using &lt;code&gt;delete&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;qscopedpointerdeleter&quot;&gt;QScopedPointerDeleter-&lt;/a&gt; 기본값은 &lt;code&gt;delete&lt;/code&gt; 를 사용하여 포인터를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="619df3ef85246fad1a6f9715b2f096c02f310d2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopedpointerpoddeleter&quot;&gt;QScopedPointerPodDeleter&lt;/a&gt; - deletes the pointer using &lt;code&gt;free()&lt;/code&gt;. Use this handler for pointers that were allocated with &lt;code&gt;malloc()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qscopedpointerpoddeleter&quot;&gt;QScopedPointerPodDeleter&lt;/a&gt; - &lt;code&gt;free()&lt;/code&gt; 사용하여 포인터를 삭제합니다 . &lt;code&gt;malloc()&lt;/code&gt; 로 할당 된 포인터에이 핸들러를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="aecaefe7236c8d8d21961cb343eea30de0f26d4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscopeguard&quot;&gt;QScopeGuard&lt;/a&gt;&amp;lt;F&amp;gt; is a class which sole purpose is to run a function</source>
          <target state="translated">&lt;a href=&quot;qscopeguard&quot;&gt;QScopeGuard&lt;/a&gt; &amp;lt;F&amp;gt;는 기능을 실행하는 것이 유일한 목적인 클래스입니다</target>
        </trans-unit>
        <trans-unit id="70970bf9a3b8857d721053ed4e83945d65ff9f07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QOffscreenSurface::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; * QOffscreenSurface :: screen () const</target>
        </trans-unit>
        <trans-unit id="952cf0cc9fef10d376cb34997be7c87022f93a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QOpenGLContext::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; * QOpenGLContext :: screen () const</target>
        </trans-unit>
        <trans-unit id="672ae639a55aa65fc59edb26a812f8b26e8424e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QWidget::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QWidget::screen() const</target>
        </trans-unit>
        <trans-unit id="79a452e0f5ae62989775205804ec814bedc74847" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *QWindow::screen() const</source>
          <target state="translated">&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; * QWindow :: screen () const</target>
        </trans-unit>
        <trans-unit id="39647249bac6233af26a445d5d5c5a87e03dc051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;, which inherits &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;, provides smooth scrolling for any &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (i.e., the widget is scrolled pixel by pixel). You only need to subclass &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; if you need more specialized behavior. This is, for instance, true if the entire contents of the area is not suitable for being drawn on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or if you do not want smooth scrolling.</source>
          <target state="translated">&lt;a href=&quot;qscrollarea&quot;&gt;&lt;/a&gt;&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; 를 상속하는 QScrollArea 는 모든 &lt;a href=&quot;qwidget&quot;&gt;QWidget에&lt;/a&gt; 대해 부드러운 스크롤을 제공합니다 (즉, 위젯은 픽셀 단위로 스크롤됩니다). 보다 특수한 동작이 필요한 경우 &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; 를 서브 클래스 만 있으면됩니다 . 예를 들어, 영역의 전체 내용이 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 에서 작성하기에 적합 하지 않거나 부드러운 스크롤을 원하지 않는 경우에 해당됩니다.</target>
        </trans-unit>
        <trans-unit id="f865d90288ca7bbaae8b3e145e9adc3570ce6b50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;, which inherits QAbstractScrollArea, provides smooth scrolling for any &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (i.e., the widget is scrolled pixel by pixel). You only need to subclass QAbstractScrollArea if you need more specialized behavior. This is, for instance, true if the entire contents of the area is not suitable for being drawn on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or if you do not want smooth scrolling.</source>
          <target state="translated">&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;, which inherits QAbstractScrollArea, provides smooth scrolling for any &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (i.e., the widget is scrolled pixel by pixel). You only need to subclass QAbstractScrollArea if you need more specialized behavior. This is, for instance, true if the entire contents of the area is not suitable for being drawn on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or if you do not want smooth scrolling.</target>
        </trans-unit>
        <trans-unit id="ee9a4b85e5782ee17d915d7246d0c0c0525f7351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; (6) provides a vertical or horizontal scroll bar.</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; (6)는 세로 또는 가로 스크롤 막대를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b62518d550fc078468138de3240eeac53735872b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; *QAbstractScrollArea::horizontalScrollBar() const</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; * QAbstractScrollArea :: horizontalScrollBar () const</target>
        </trans-unit>
        <trans-unit id="72e35410276304179639e706c1a5e8ff9109f9f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; *QAbstractScrollArea::verticalScrollBar() const</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; * QAbstractScrollArea :: verticalScrollBar () const</target>
        </trans-unit>
        <trans-unit id="b081b31c110bd36c96049ed10a809323027d5d7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; only provides integer ranges. Note that although &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; handles very large numbers, scroll bars on current screens cannot usefully represent ranges above about 100,000 pixels. Beyond that, it becomes difficult for the user to control the slider using either the keyboard or the mouse, and the scroll arrows will have limited use.</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; 는 정수 범위 만 제공합니다. &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; 는 매우 큰 숫자를 처리 하지만 현재 화면의 스크롤 막대는 약 100,000 픽셀 이상의 범위를 유용하게 나타낼 수 없습니다. 그 외에도 사용자가 키보드 나 마우스를 사용하여 슬라이더를 제어하는 ​​것이 어려워지고 스크롤 화살표의 사용이 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="901aaedba0fc102c0f36744d533d9dac31337405" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; simply creates its style option and then draws &lt;code&gt;CC_ScrollBar&lt;/code&gt;. Some styles draw the background of add page and sub page with &lt;code&gt;PE_PanelButtonBevel&lt;/code&gt;, and also use indicator arrows to draw the arrows in the next and previous line indicators; we have not included these in the tree as their use is up to the individual style. The style's &lt;code&gt;PM_MaximumDragDistance&lt;/code&gt; is the maximum distance in pixels the mouse can move from the bounds of the scroll bar and still move the handle.</source>
          <target state="translated">&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar는&lt;/a&gt; 단순히 스타일 옵션을 만든 다음 &lt;code&gt;CC_ScrollBar&lt;/code&gt; 를 그립니다 . 일부 스타일은 &lt;code&gt;PE_PanelButtonBevel&lt;/code&gt; 으로 페이지 및 하위 페이지 추가의 배경을 그리고 표시기 화살표를 사용하여 다음 및 이전 선 표시기에서 화살표를 그립니다. 우리는 그것들의 사용이 개인 스타일에 달려 있기 때문에 트리에 포함시키지 않았습니다. 스타일의 &lt;code&gt;PM_MaximumDragDistance&lt;/code&gt; 는 스크롤 막대의 경계에서 마우스를 움직일 수있는 최대 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="38234c7498abc29bb4117db01f2d13d556440f3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; emits this signal whenever its scroller properties change.</source>
          <target state="translated">&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; 는 스크롤러 특성이 변경 될 때 마다이 신호를 방출합니다.</target>
        </trans-unit>
        <trans-unit id="25015f7a4dc6f3f62c59e8f2234c90825b4da636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; emits this signal whenever the state changes.</source>
          <target state="translated">&lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; 는 상태가 변경 될 때 마다이 신호를 방출합니다.</target>
        </trans-unit>
        <trans-unit id="5206a215d6a7b3dd8ea1a7a67752c47afd38d059" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt; &amp;amp;QScrollerProperties::operator=(const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt; 및 QScrollerProperties :: operator = (const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScroller 속성&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dd45468095ebacffd6672301bc138c8237f471a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscrollevent#ScrollState-enum&quot;&gt;QScrollEvent::ScrollState&lt;/a&gt; QScrollEvent::scrollState() const</source>
          <target state="translated">&lt;a href=&quot;qscrollevent#ScrollState-enum&quot;&gt;QScrollEvent :: ScrollState&lt;/a&gt; QScrollEvent :: scrollState () const</target>
        </trans-unit>
        <trans-unit id="64c0824516a053873ceac18e09b2672cc9f8317c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpserver&quot;&gt;QSctpServer&lt;/a&gt; is a convenience subclass of &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; that allows you to accept incoming SCTP socket connections either in TCP emulation or in datagram mode.</source>
          <target state="translated">&lt;a href=&quot;qsctpserver&quot;&gt;QSctpServer&lt;/a&gt; 는 TCP 에뮬레이션 또는 데이터 그램 모드에서 들어오는 SCTP 소켓 연결을 허용 할 수 있는 &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; 의 편리한 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="16d0dd9bcdc9ec4c9cb1cc80f8d6c4b186bdd56a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; *QSctpServer::nextPendingDatagramConnection()</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; * QSctpServer :: nextPendingDatagramConnection ()</target>
        </trans-unit>
        <trans-unit id="ce50d26501a8c6a4aebd6bd9dd7e5c1cb138fa5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; and &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; 및 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdcf1b754c34173af171bb8df15990a328c63d9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; can operate in one of two possible modes:</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; 은 다음 두 가지 모드 중 하나로 작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f43f55deb4235765ff3d804f1f0c571b06742440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; is a convenience subclass of &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; that allows you to emulate TCP data stream over SCTP or establish an SCTP connection for reliable datagram service.</source>
          <target state="translated">&lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket는&lt;/a&gt; 의 편의 서브 클래스입니다 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; 당신이 SCTP를 통해 TCP 데이터 스트림을 모방 또는 신뢰할 수있는 데이터 그램 서비스에 대한 SCTP 연결을 설정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6dcfb26592512d20b0ce2579cb3c72e6b3ff255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt; *QScxmlCompiler::loader() const</source>
          <target state="translated">&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: Loader&lt;/a&gt; * QScxmlCompiler :: loader () const</target>
        </trans-unit>
        <trans-unit id="6a14bb1e7aaf3343935a4cc78b9f782f1a6368e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlcppdatamodel&quot;&gt;QScxmlCppDataModel&lt;/a&gt;, &lt;a href=&quot;qscxmlecmascriptdatamodel&quot;&gt;QScxmlEcmaScriptDataModel&lt;/a&gt;, and &lt;a href=&quot;qscxmlnulldatamodel&quot;&gt;QScxmlNullDataModel&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qscxmlcppdatamodel&quot;&gt;QScxmlCppDataModel&lt;/a&gt; , &lt;a href=&quot;qscxmlecmascriptdatamodel&quot;&gt;QScxmlEcmaScriptDataModel&lt;/a&gt; 및 &lt;a href=&quot;qscxmlnulldatamodel&quot;&gt;QScxmlNullDataModel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d0a2cbee521a7ff4a0bfda162271e0543176c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmldatamodel&quot;&gt;QScxmlDataModel&lt;/a&gt; *QScxmlStateMachine::dataModel() const</source>
          <target state="translated">&lt;a href=&quot;qscxmldatamodel&quot;&gt;QScxmlDataModel&lt;/a&gt; * QScxmlStateMachine :: dataModel () const</target>
        </trans-unit>
        <trans-unit id="4c0f2ca7a9b466024247bb6c50408d378201e113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmldynamicscxmlservicefactory&quot;&gt;QScxmlDynamicScxmlServiceFactory&lt;/a&gt; and &lt;a href=&quot;qscxmlstaticscxmlservicefactory&quot;&gt;QScxmlStaticScxmlServiceFactory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qscxmldynamicscxmlservicefactory&quot;&gt;QScxmlDynamicScxmlServiceFactory&lt;/a&gt; 및 &lt;a href=&quot;qscxmlstaticscxmlservicefactory&quot;&gt;QScxmlStaticScxmlServiceFactory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="786d921637fdde3f0e5b1d78b9f787e11ad31da2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt; &amp;amp;QScxmlError::operator=(const &lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt; &amp;amp; QScxmlError :: operator = (const &lt;a href=&quot;qscxmlerror#QScxmlError&quot;&gt;QScxmlError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c5a497687ab9815920f45ba53e1709ce09bed670" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlevent#EventType-enum&quot;&gt;QScxmlEvent::EventType&lt;/a&gt; QScxmlEvent::eventType() const</source>
          <target state="translated">&lt;a href=&quot;qscxmlevent#EventType-enum&quot;&gt;QScxmlEvent :: EventType&lt;/a&gt; QScxmlEvent :: eventType () const</target>
        </trans-unit>
        <trans-unit id="8a09bf5cd873de1bc7dd3b0fb3a41da3f062e89e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt; &amp;amp;QScxmlEvent::operator=(const &lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt; &amp;amp; QScxmlEvent :: operator = (const &lt;a href=&quot;qscxmlevent#QScxmlEvent&quot;&gt;QScxmlEvent&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d0fbd3b9936df4b2c2db27257a94cc011ceb7358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;ContainerId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;ContainerId&lt;/a&gt; 를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="61217ec4ba9c656a424b61b25b812606881e4292" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;QScxmlExecutableContent::ContainerId&lt;/a&gt; InvokeInfo::finalize</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;QScxmlExecutableContent :: ContainerId&lt;/a&gt; InvokeInfo :: finalize</target>
        </trans-unit>
        <trans-unit id="e35b208b56b9fa755453c46f5f045847d18a4368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;EvaluatorId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;EvaluatorId&lt;/a&gt; 를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c5afccbca92f0dabc7f90ed9e65a878e2ceeb751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt; InvokeInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent :: EvaluatorId&lt;/a&gt; InvokeInfo :: expr</target>
        </trans-unit>
        <trans-unit id="0ccb59e154fa220debc71f28b154f59c8f3557df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt; ParameterInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent :: EvaluatorId&lt;/a&gt; ParameterInfo :: expr</target>
        </trans-unit>
        <trans-unit id="c6da2d0068c5a484ea6a1944ad32c79fe7d440a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#InstructionId-typedef&quot;&gt;InstructionId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#InstructionId-typedef&quot;&gt;InstructionId&lt;/a&gt; 를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dd42cd781132b6a3dfc35d6e36fa9088ecd5532c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; AssignmentInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; AssignmentInfo :: context</target>
        </trans-unit>
        <trans-unit id="dd115557a4aaf5d7fcd032f89bcadc74854b08e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; AssignmentInfo::dest</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; AssignmentInfo :: dest</target>
        </trans-unit>
        <trans-unit id="76c45d644045abf03e23cab708db9b0b7a6dcdf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; AssignmentInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; AssignmentInfo :: expr</target>
        </trans-unit>
        <trans-unit id="6f94b045318d04b7cac68f16e797cce41912aebd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; EvaluatorInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; EvaluatorInfo :: context</target>
        </trans-unit>
        <trans-unit id="6e99c9da0573f48ed6f4ebe1f6c3da422b9905b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; EvaluatorInfo::expr</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; EvaluatorInfo :: expr</target>
        </trans-unit>
        <trans-unit id="297f044b0e62b693bde395859e25004e2bb1e94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::array</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: array</target>
        </trans-unit>
        <trans-unit id="2795de50a63f386202054fb998d4454d2807d773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: context</target>
        </trans-unit>
        <trans-unit id="3750cb86e4b3c3fe74b9c4cab2e66da11af6e3ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::index</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: index</target>
        </trans-unit>
        <trans-unit id="8752713a6bde421061da0937c6748d441e324908" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ForeachInfo::item</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ForeachInfo :: item</target>
        </trans-unit>
        <trans-unit id="091d264af4530bd10c0447226ac9a5543c08b05a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::context</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: context</target>
        </trans-unit>
        <trans-unit id="8b7b15411c820cfe57db43473f401c7d71e980a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::id</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: id</target>
        </trans-unit>
        <trans-unit id="0c7ed452ad96f4c5bbdc71463e4ff32e10b7ed8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::location</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: location</target>
        </trans-unit>
        <trans-unit id="2c99085946262aede3b1466bad3f795da59686ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; InvokeInfo::prefix</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; InvokeInfo :: prefix</target>
        </trans-unit>
        <trans-unit id="c1ebee5c026cc01fb29e7e75a491511476126b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ParameterInfo::location</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ParameterInfo :: location</target>
        </trans-unit>
        <trans-unit id="5b635280d20013aef0b080b7088caf4a7045d845" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; ParameterInfo::name</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; ParameterInfo :: name</target>
        </trans-unit>
        <trans-unit id="b849c8c351a3147292eef2d57d3bda7019523c19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;StringId&lt;/a&gt; is unknown.</source>
          <target state="translated">&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;StringId&lt;/a&gt; 를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f4b7be098631cd36589b89694b353567790d36d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *QScxmlCompiler::compile()</source>
          <target state="translated">&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; * QScxmlCompiler :: compile ()</target>
        </trans-unit>
        <trans-unit id="7a6965ad60608605cc2343f81a5c519df8e7cc2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *QScxmlDataModel::stateMachine() const</source>
          <target state="translated">&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; * QScxmlDataModel :: stateMachine () const</target>
        </trans-unit>
        <trans-unit id="d2d24be23f76de59fd25a194e34101eb8d3a2243" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; is an implementation of the &lt;a href=&quot;http://www.w3.org/TR/scxml/#&quot;&gt;State Chart XML (SCXML)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; 은 &lt;a href=&quot;http://www.w3.org/TR/scxml/#&quot;&gt;SCXML (State Chart XML&lt;/a&gt; )의 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="c3bdee3ae55566142c1251ceb6143320622209b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qscxmltabledata&quot;&gt;QScxmlTableData&lt;/a&gt; is the interface to the compiled representation of SCXML state machines. It should only be used internally and by state machines compiled from SCXML documents.</source>
          <target state="translated">&lt;a href=&quot;qscxmltabledata&quot;&gt;QScxmlTableData&lt;/a&gt; 는 SCXML 상태 머신의 컴파일 된 표현에 대한 인터페이스입니다. 내부 및 SCXML 문서에서 컴파일 된 상태 머신에서만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1700181184c0498e36ece6d64eb42a0ff952e2e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; *QSemaphoreReleaser::cancel()</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; * QSemaphoreReleaser :: cancel ()</target>
        </trans-unit>
        <trans-unit id="e4f8da8fa4a20de984bd63dfb993de5922d02997" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; *QSemaphoreReleaser::semaphore() const</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; * QSemaphoreReleaser :: semaphore () const</target>
        </trans-unit>
        <trans-unit id="1d9a7774e4244cab8e196f38e5f9af2dad020f2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; is a generalization of &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; that protects a certain number of identical resources. In contrast, a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; protects exactly one resource. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-semaphores-example.html&quot;&gt;Semaphores Example&lt;/a&gt; shows a typical application of semaphores: synchronizing access to a circular buffer between a producer and a consumer.</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; 는 특정 수의 동일한 리소스를 보호하는 &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; 의 일반화입니다 . 반대로 &lt;a href=&quot;qmutex&quot;&gt;QMutex는&lt;/a&gt; 정확히 하나의 리소스를 보호합니다. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-semaphores-example.html&quot;&gt;세마포어 예&lt;/a&gt; 세마포어의 전형적인 애플리케이션을 도시한다 : 생산자와 소비자 사이에 원형 버퍼에 대한 액세스를 동기화.</target>
        </trans-unit>
        <trans-unit id="6d9ea9bcbc14545e807f08991569f513a1f8fe88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; is a generalization of &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; that protects a certain number of identical resources. In contrast, a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; protects exactly one resource. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-semaphores-example.html&quot;&gt;Semaphores Example&lt;/a&gt; shows a typical application of semaphores: synchronizing access to a circular buffer between a producer and a consumer.</source>
          <target state="translated">&lt;a href=&quot;qsemaphore&quot;&gt;QSemaphore&lt;/a&gt; is a generalization of &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; that protects a certain number of identical resources. In contrast, a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; protects exactly one resource. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-semaphores-example.html&quot;&gt;Semaphores Example&lt;/a&gt; shows a typical application of semaphores: synchronizing access to a circular buffer between a producer and a consumer.</target>
        </trans-unit>
        <trans-unit id="0b24703d72a4f53534e18bc6ee39ab43e6c31471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; can be used wherever you would otherwise use &lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore::release&lt;/a&gt;(). Constructing a &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; defers the release() call on the semaphore until the &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; is destroyed (see &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII pattern&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; 는 &lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore :: release&lt;/a&gt; ()를 사용하는 모든 곳에서 사용할 수 있습니다 . 건설 &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser이&lt;/a&gt; 때까지 세마포어의 분리 () 호출을 연기 &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser이&lt;/a&gt; 파괴된다 ( &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII 패턴&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="eedbfa44bc5453cd6872b17b16427ca85bdc4e4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; is a &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII&lt;/a&gt; wrapper around this function.</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; 는 이 함수를 둘러싼 &lt;a href=&quot;http://en.cppreference.com/w/cpp/language/raii&quot;&gt;RAII&lt;/a&gt; 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="83936a7012752e34c8a2148bc10243927ed931a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; is move-enabled and can therefore be returned from functions to transfer responsibility for releasing a semaphore out of a function or a scope:</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; 는 이동이 가능하므로 함수 또는 범위에서 세마포를 해제하는 책임을 전달하기 위해 함수에서 리턴 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d831ce0f3b0e0e3cc3db86dc9edf866379245b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;QSemaphoreReleaser::operator=(&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp; QSemaphoreReleaser :: operator = ( &lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="e93f6f7f86c9b9f7e5d53300b1e77a3627a781cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; *QSensorBackend::sensor() const</source>
          <target state="translated">&lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; * QSensorBackend :: 센서 () CONST</target>
        </trans-unit>
        <trans-unit id="1f00db4e1a06785cb2861bd25555b7941c061240" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt; : for connecting the sensor gesture signals.</source>
          <target state="translated">&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt; : 센서 제스처 신호를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cba49407f0caa8c4fd9941e4a569c4b538803d4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt; recognizer developers should sub-class this to implement their own recognizer.</source>
          <target state="translated">&lt;a href=&quot;qsensorgesture&quot;&gt;QSensorGesture&lt;/a&gt; 인식기 개발자는이를 인식하여 자체 인식기를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="533a7820028f3d573ab3a93504de4e28295a74ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorgesturemanager&quot;&gt;QSensorGestureManager&lt;/a&gt;: can be used for determining which sensor gestures are available.</source>
          <target state="translated">&lt;a href=&quot;qsensorgesturemanager&quot;&gt;QSensorGestureManager&lt;/a&gt; : 사용 가능한 센서 제스처를 결정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ee8472cdf68599d78453d2492a87198c76f2466" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt; *QSensorBackend::reading() const</source>
          <target state="translated">&lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt; * QSensorBackend :: reading () const</target>
        </trans-unit>
        <trans-unit id="ed14b545dea49a04c9bf78af9fad707d72749cd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt; emits this signal when &lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt; has been changed.</source>
          <target state="translated">&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;&lt;/a&gt;&lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt; 이 변경 되면 QSequentialAnimationGroup 에서이 신호를 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="4e83c036ebdeabce5f0104d372f91a88c7009241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt; is a &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; that runs its animations in sequence, i.e., it starts one animation after another has finished playing. The animations are played in the order they are added to the group (using &lt;a href=&quot;qanimationgroup#addAnimation&quot;&gt;addAnimation()&lt;/a&gt; or &lt;a href=&quot;qanimationgroup#insertAnimation&quot;&gt;insertAnimation()&lt;/a&gt;). The animation group finishes when its last animation has finished.</source>
          <target state="translated">&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt; 은 애니메이션을 순서대로 실행 하는 &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; 입니다. 즉, 다른 재생이 끝나면 한 애니메이션이 시작됩니다. 애니메이션은 그룹에 추가 된 순서대로 ( &lt;a href=&quot;qanimationgroup#addAnimation&quot;&gt;addAnimation ()&lt;/a&gt; 또는 &lt;a href=&quot;qanimationgroup#insertAnimation&quot;&gt;insertAnimation () 사용&lt;/a&gt; ) 재생됩니다. 애니메이션 그룹은 마지막 애니메이션이 완료되면 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="4c7dd36705361f1ab9e4afec034cd4510ea5f375" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable::const_iterator&lt;/a&gt; QSequentialIterable::begin() const</source>
          <target state="translated">&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable :: const_iterator&lt;/a&gt; QSequentialIterable :: begin () const</target>
        </trans-unit>
        <trans-unit id="b70c7bd912f21dddc4cadf36a5bd8c81f861b0dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable::const_iterator&lt;/a&gt; QSequentialIterable::end() const</source>
          <target state="translated">&lt;a href=&quot;qsequentialiterable-const-iterator&quot;&gt;QSequentialIterable :: const_iterator&lt;/a&gt; QSequentialIterable :: end () const</target>
        </trans-unit>
        <trans-unit id="5ffe96e26183c18852f0eef0c0fc2a13d58cceee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; provides a set of functions that suspend the calling thread until certain signals are emitted. These functions can be used to implement blocking serial ports:</source>
          <target state="translated">&lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; 는 특정 신호가 방출 될 때까지 호출 스레드를 일시 중단시키는 기능 세트를 제공합니다. 이 기능들은 블로킹 시리얼 포트를 구현하는데 사용될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ac7d609ac0ea8c14d0c59f0e67d9a706e688321d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport#PinoutSignal-enum&quot;&gt;QSerialPort::PinoutSignals&lt;/a&gt; QSerialPort::pinoutSignals()</source>
          <target state="translated">&lt;a href=&quot;qserialport#PinoutSignal-enum&quot;&gt;QSerialPort :: PinoutSignals&lt;/a&gt; QSerialPort :: pinoutSignals ()</target>
        </trans-unit>
        <trans-unit id="8250238c79aeca9fec674b8d959e64239db6754b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;() blocks calls until one payload of data has been written to the serial port.</source>
          <target state="translated">&lt;a href=&quot;qserialport#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt; ()은 하나의 데이터 페이로드가 직렬 포트에 기록 될 때까지 호출을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="bfac952d903a7088d95ec44263230942c11edd75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialport#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;() blocks calls until new data is available for reading.</source>
          <target state="translated">&lt;a href=&quot;qserialport#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt; ()는 새 데이터를 읽을 수있을 때까지 호출을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="db6911ec3879178a968987a65b76ca49c5618fec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;QSerialPortInfo::operator=(const &lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp; QSerialPortInfo :: operator = (const &lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="512eddc820a509339cddfb0495f5777b6a1871f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; provides an interface between the application and the platform's session manager. In Qt, session management requests for action are handled by the two signals &lt;a href=&quot;qguiapplication#commitDataRequest&quot;&gt;QGuiApplication::commitDataRequest&lt;/a&gt;() and &lt;a href=&quot;qguiapplication#saveStateRequest&quot;&gt;QGuiApplication::saveStateRequest&lt;/a&gt;(). Both provide a reference to a &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; object as argument. The session manager can only be accessed in slots invoked by these signals.</source>
          <target state="translated">&lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; 는 응용 프로그램과 플랫폼의 세션 관리자 사이의 인터페이스를 제공합니다. Qt에서 동작에 대한 세션 관리 요청은 두 가지 신호 &lt;a href=&quot;qguiapplication#commitDataRequest&quot;&gt;QGuiApplication :: commitDataRequest&lt;/a&gt; () 및 &lt;a href=&quot;qguiapplication#saveStateRequest&quot;&gt;QGuiApplication :: saveStateRequest&lt;/a&gt; ()에 의해 처리됩니다 . 둘 다 &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; 객체에 대한 참조를 인수로 제공합니다. 세션 관리자는이 신호에 의해 호출 된 슬롯에서만 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65f22647a015c26dc6d9fe297dd3629c5322bdda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsessionmanager#RestartHint-enum&quot;&gt;QSessionManager::RestartHint&lt;/a&gt; QSessionManager::restartHint() const</source>
          <target state="translated">&lt;a href=&quot;qsessionmanager#RestartHint-enum&quot;&gt;QSessionManager :: RestartHint&lt;/a&gt; QSessionManager :: restartHint () const</target>
        </trans-unit>
        <trans-unit id="cdaf0dc89222173967bcc48e7e1714e5115572e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; features both &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;. The STL-style iterators are more low-level and more cumbersome to use; on the other hand, they are slightly faster and, for developers who already know STL, have the advantage of familiarity.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 은 &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL 스타일 반복자&lt;/a&gt; 와 &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java &lt;/a&gt;스타일 반복자를 모두 갖추고 있습니다 . STL 스타일 이터레이터는 사용하기에 더 저수준이고 성가시다. 반면에 STL을 이미 알고있는 개발자에게는 친숙 함이라는 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a245d805a34e73582bfca611cbc277f22bba2715" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; has both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are more high-level and easier to use than the STL-style iterators; on the other hand, they are slightly less efficient.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 에는 &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java 스타일 반복자&lt;/a&gt; 와 &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL &lt;/a&gt;스타일 반복자 가 모두 있습니다. Java 스타일 이터레이터는 STL 스타일 이터레이터보다 수준이 높고 사용하기 쉽습니다. 반면에, 그들은 약간 덜 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="bed608e42410cb463e19a5be359e383328e09ce6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; is unordered, so an iterator's sequence cannot be assumed to be predictable. If ordering by key is required, use a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 은 순서가 없으므로 반복자의 시퀀스를 예측할 수 있다고 가정 할 수 없습니다. &lt;a href=&quot;qmap&quot;&gt;키별&lt;/a&gt; 주문이 필요한 경우 QMap을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="520617276b235b5c1c851ae547500ce54fa9db52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; supports both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are more high-level and easier to use than the STL-style iterators; on the other hand, they are slightly less efficient.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 은 &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java 스타일 반복자&lt;/a&gt; 와 &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL &lt;/a&gt;스타일 반복자를 모두 지원 합니다 . Java 스타일 이터레이터는 STL 스타일 이터레이터보다 수준이 높고 사용하기 쉽습니다. 반면에, 그들은 약간 덜 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="820f94cbc4f28bcece6442b4899b5dba43a7b5d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *&amp;gt; QStateMachine::configuration() const</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt; &lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *&amp;gt; QStateMachine :: configuration () const</target>
        </trans-unit>
        <trans-unit id="789d6aeb819646cec56d57cb01426f7870e6e29f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QOpenGLContext::extensions() const</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt; QOpenGLContext :: extensions () const</target>
        </trans-unit>
        <trans-unit id="7e15776b402bc9bee24b6e9addb41b71183303cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;Key&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;Key&amp;gt;</target>
        </trans-unit>
        <trans-unit id="735dd604cc4b14a8d21b926b4b82949a43136351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;Key, T&amp;gt;::const_iterator allows you to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;. If you want to modify the &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; as you iterate over it, you must use &lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; instead. It is generally good practice to use &lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; on a non-const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; as well, unless you need to change the &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; through the iterator. Const iterators are slightly faster, and can improve code readability.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;Key, T&amp;gt; :: const_iterator를 사용하면 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 을 반복 할 수 있습니다 . 반복 할 때 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 을 수정하려면 대신 &lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt; 를 사용해야합니다 . 반복자를 통해 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 을 변경해야하는 경우가 아니라면 비 const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 에서도 &lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; 를 사용하는 것이 좋습니다 . Const 반복자는 약간 더 빠르며 코드 가독성을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5670ec5b13e8d9c9132e3b9a8a33127a99dc3b3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="19c360b5565471c7cc1d5010d6ab837369a26426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QList::toSet() const</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QList :: toSet () const</target>
        </trans-unit>
        <trans-unit id="88ecef6fcabe6c157555063d9647aaa97ad5edc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; is one of Qt's generic &lt;a href=&quot;containers#&quot;&gt;container classes&lt;/a&gt;. It stores values in an unspecified order and provides very fast lookup of the values. Internally, &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; is implemented as a &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;는 Qt의 일반 &lt;a href=&quot;containers#&quot;&gt;컨테이너 클래스&lt;/a&gt; 중 하나입니다 . 값을 지정되지 않은 순서로 저장하고 매우 빠른 값 조회를 제공합니다. 내부적으로 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;는 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc9d4b2cbadfc0602f605307ea7e103c20187f05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::const_iterator</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::const_iterator</target>
        </trans-unit>
        <trans-unit id="3c38cc5d516c384c2f81b34f4560589d6c83fe07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::iterator</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::iterator</target>
        </trans-unit>
        <trans-unit id="a2b76562dccc9832460fe0c9f2b0fabcca3baedd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;::iterator allows you to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; and to remove items (using &lt;a href=&quot;qset#erase&quot;&gt;QSet::erase&lt;/a&gt;()) while you iterate. (&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; doesn't let you</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; :: iterator를 사용하면 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 을 반복하고 반복하는 동안 &lt;a href=&quot;qset#erase&quot;&gt;QSet :: erase&lt;/a&gt; ()를 사용하여 항목을 제거 할 수 있습니다. ( &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 은 당신을 허용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="444792da0efa459c8dd9cce6a8bf99cc9ca3fb6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;'s value data type must be an &lt;a href=&quot;containers#assignable-data-type&quot;&gt;assignable data type&lt;/a&gt;. You cannot, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value; instead, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *. In addition, the type must provide &lt;code&gt;operator==()&lt;/code&gt;, and there must also be a global &lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt;() function that returns a hash value for an argument of the key's type. See the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; documentation for a list of types supported by &lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 의 값 데이터 유형은 &lt;a href=&quot;containers#assignable-data-type&quot;&gt;할당 가능한 데이터 유형&lt;/a&gt; 이어야합니다 . 예를 들어 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 을 값으로 저장할 수 없습니다 . 대신 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *를 저장하십시오 . 또한 형식은 &lt;code&gt;operator==()&lt;/code&gt; 제공 해야 하며 키 형식의 인수에 대한 해시 값을 반환하는 전역 &lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt; () 함수도 있어야합니다. &lt;a href=&quot;qhash#qHash&quot;&gt;qHash&lt;/a&gt; ()가 지원하는 유형 목록은 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c71298fba5142b69648cdb1b60e8a0292fabcbe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::intersect(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: intersect (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0e937862aa82e80d41c63122267747e7d7f61f48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator&amp;amp;=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator &amp;amp; = (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b4da4f2f021c759ef5b454cac44b5430feb8dc98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator&amp;amp;=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator &amp;amp; = (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="30fda9023c8d196009430e1b9e23cc424709892c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator&amp;lt;&amp;lt;(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: 연산자 &amp;lt;&amp;lt; (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4406afa39238df424ea24bcedabd1bdd86640d05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator+=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator + = (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="028154fc70bf581a02d8a671684bb5ff71341b22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator+=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator + = (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9a7af435d321252952571d6d29b922153adfcf96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator-=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator-= (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5eacbf52609545e4b27a1aab9d20644a0b5da6dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator-=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator-= (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3df94a9cdad5f1961791a64531fd99057f2ae4c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator|=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator | = (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="106a3c141027bddbb54bd2b0afc88e4d08995440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::operator|=(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: operator | = (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88bfa12c77c73412a714742591651a76541225af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::subtract(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: subtract (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1339bc3c6087c96d99413d88f42e8da386e63370" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSet::unite(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSet :: unite (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c2e611f2655b949ecb5a348c5c93c88f7720ec75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator&amp;amp;(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: operator &amp;amp; (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="81bb749b62fd6a27b1fb648062c8e4d4916bb0b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator+(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: operator + (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="857b81781b91fbd4b4bcda61c4abbe224205e5b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator-(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: 연산자-(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="137efa0f92a93c85aa4d3ce3a7d00046b5f3f57e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; QSet::operator|(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; QSet :: operator | (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a9efbd38a7b76f60dc3fed6eb45dd7cbd87c7716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::crbegin() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: crbegin () const</target>
        </trans-unit>
        <trans-unit id="84b4d0f52e69028814cbb05db41c6caec7b41dcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::crend() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: crend ​​() const</target>
        </trans-unit>
        <trans-unit id="b82e3f3fb88beebe47d52904e0c8e216dca95147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::rbegin() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: rbegin () const</target>
        </trans-unit>
        <trans-unit id="aa8ce9a094026f517804874fa0f701ebed74f798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet::const_reverse_iterator&lt;/a&gt; QSet::rend() const</source>
          <target state="translated">&lt;a href=&quot;qset#const_reverse_iterator-typedef&quot;&gt;QSet :: const_reverse_iterator&lt;/a&gt; QSet :: rend () const</target>
        </trans-unit>
        <trans-unit id="412a24bf4640b641eca7d089425483b1c53f8e01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet::reverse_iterator&lt;/a&gt; QSet::rbegin()</source>
          <target state="translated">&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet :: reverse_iterator&lt;/a&gt; QSet :: rbegin ()</target>
        </trans-unit>
        <trans-unit id="a09630604937aa50cc8585c78f7b975d6e9b5372" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet::reverse_iterator&lt;/a&gt; QSet::rend()</source>
          <target state="translated">&lt;a href=&quot;qset#reverse_iterator-typedef&quot;&gt;QSet :: reverse_iterator&lt;/a&gt; QSet :: rend ()</target>
        </trans-unit>
        <trans-unit id="9873d47e4fe644f80681bccd6873fae108505a65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::begin() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: begin () const</target>
        </trans-unit>
        <trans-unit id="cb5358311aa12c030870e555e3db77315029b59e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::cbegin() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: cbegin () const</target>
        </trans-unit>
        <trans-unit id="d9e7929dbaf20f55a4add06ec9d7a57a3b01c165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::cend() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: cend () const</target>
        </trans-unit>
        <trans-unit id="d5a0e5a198bbb07510eafcc415ac07daf75cba38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::constBegin() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: constBegin () const</target>
        </trans-unit>
        <trans-unit id="ed06e6c6c0ee71755bb344dbfdfd8e9bcc7e298f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::constEnd() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: constEnd () const</target>
        </trans-unit>
        <trans-unit id="230c057e3fb8ec8c1b81c60089e7257443e8d019" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::constFind(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: constFind (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a3a398853bef583c8b253633a8a517e3610f3043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::end() const</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: end () const</target>
        </trans-unit>
        <trans-unit id="73ab660fab4461ac957ebd5814b51526ece70eb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt; QSet::find(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt; QSet :: 찾기 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b3e404b53dc91fefe55c41bcd893b8d26f95add3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator++()</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp; const_iterator :: operator ++ ()</target>
        </trans-unit>
        <trans-unit id="1685db8bd9a51c955a8a1419008f64d4777f7adb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator+=(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp; const_iterator :: operator + = (int</target>
        </trans-unit>
        <trans-unit id="8364a14c689713f0129848db1fe95e9e7eabd679" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator--()</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp; const_iterator :: operator-()</target>
        </trans-unit>
        <trans-unit id="fbdf0de411989ebb83445036902b5682bbd2b76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator-=(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp; const_iterator :: operator-= (int</target>
        </trans-unit>
        <trans-unit id="b674ea223887c729a29b2c5905ecb490894cb360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;const_iterator::operator=(const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp; const_iterator :: operator = (const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0b67301831ffdc9476a3025b3cf638bb32373953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator+(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator + (int</target>
        </trans-unit>
        <trans-unit id="66c9ad54dc18d149b16186ad1eab43ebe3b81bab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator++(</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator ++ (</target>
        </trans-unit>
        <trans-unit id="5bb76abf70dbb9b8da225cbef3ebc280a36e5d3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator-(int</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator- (int</target>
        </trans-unit>
        <trans-unit id="fcdcfabc4e5dc93458fba24a7c31b96bbbaf589b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator::operator--(</source>
          <target state="translated">&lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; const_iterator :: operator-(</target>
        </trans-unit>
        <trans-unit id="f8c952cadb51100feabd182861cbeb7b0e98b37c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::begin()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: 반복자&lt;/a&gt; QSet :: begin ()</target>
        </trans-unit>
        <trans-unit id="e6e307646937b48435ed968d80d03dfd65949e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::end()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: 반복자&lt;/a&gt; QSet :: end ()</target>
        </trans-unit>
        <trans-unit id="9517335277bdaaf8865cf210162944a6e63f78e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::erase(&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: 반복기&lt;/a&gt; QSet :: erase ( &lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27ed6fb64ce658d9f97602f541e10d2ff6ff96a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::erase(&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: 반복자&lt;/a&gt; QSet :: erase ( &lt;a href=&quot;qset-iterator&quot;&gt;QSet :: 반복자&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3873ccd80fe3cf8fce7abd4aeb46153436dcad85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::find(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: 반복자&lt;/a&gt; QSet :: find (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="90c2de2a37219be77b83fbea31c5c596cc5cc866" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; QSet::insert(const T &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: 반복자&lt;/a&gt; QSet :: 삽입 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9a1e4ff5aca220709b7d226ef3cf0edd1581f747" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator++()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;이터레이터&lt;/a&gt; &amp;amp; iterator :: operator ++ ()</target>
        </trans-unit>
        <trans-unit id="bd50cc586a98633f4468963c66f5898f625ede69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator+=(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; 및 반복자 :: operator + = (int</target>
        </trans-unit>
        <trans-unit id="287d6f197d007556d1d8739c4c3068df69903b09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator--()</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; 및 반복자 :: 연산자-()</target>
        </trans-unit>
        <trans-unit id="e12746850e0709df50af8b7d94a785ac86b771d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator-=(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; 및 반복자 :: operator-= (int</target>
        </trans-unit>
        <trans-unit id="d78a11bb4b6797f2dd7d93274c615e534e9813c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;iterator::operator=(const &lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; &amp;amp; iterator :: operator = (const &lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d3334ebda0563ae8370c505d7918c7140be922e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator+(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; 반복자 :: 연산자 + (int</target>
        </trans-unit>
        <trans-unit id="297e8924e93d3cd37dd72839458e9a567c5a7d4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator++(</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; 반복자 :: operator ++ (</target>
        </trans-unit>
        <trans-unit id="9ef7d463be80fb9028c0d14e72faeff498f07b66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator-(int</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; 반복자 :: 연산자-(int</target>
        </trans-unit>
        <trans-unit id="84bd830bdbcf7e919fabe55ce026a29437969c8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qset-iterator#iterator&quot;&gt;iterator&lt;/a&gt; iterator::operator--(</source>
          <target state="translated">&lt;a href=&quot;qset-iterator#iterator&quot;&gt;반복자&lt;/a&gt; 반복자 :: 연산자-(</target>
        </trans-unit>
        <trans-unit id="107dbbad326d24d28eddbf2868795f411ac9c468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b36e47f0e299eaf10f62c7c52c598403ef093125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt; allows you to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;. If you want to modify the set as you iterate over it, use &lt;a href=&quot;qmutablesetiterator&quot;&gt;QMutableSetIterator&lt;/a&gt;&amp;lt;T&amp;gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt; &amp;lt;T&amp;gt;은 반복 당신을 수 있습니다 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;. 반복 할 때 세트를 수정하려면 대신 &lt;a href=&quot;qmutablesetiterator&quot;&gt;QMutableSetIterator&lt;/a&gt; &amp;lt;T&amp;gt;를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fdefd0948d72ef486bd352b478a469c45eca4b79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsetiterator#QSetIterator&quot;&gt;QSetIterator&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSetIterator::operator=(const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsetiterator#QSetIterator&quot;&gt;QSetIterator&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSetIterator :: operator = (const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e54a0e083ce8570718b7502ce028047c10840720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; always treats backslash as a special character and provides no API for reading or writing such entries.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings는&lt;/a&gt; 항상 백 슬래시를 특수 문자로 취급하며 이러한 항목을 읽거나 쓰는 데 필요한 API를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a993cdb685a3f29e399295817dc8ff7562dcbe05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; can safely be used from different processes (which can be different instances of your application running at the same time or different applications altogether) to read and write to the same system locations, provided certain conditions are met. For &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::IniFormat&lt;/a&gt;, it uses advisory file locking and a smart merging algorithm to ensure data integrity. The condition for that to work is that the writeable configuration file must be a regular file and must reside in a directory that the current user can create new, temporary files in. If that is not the case, then one must use &lt;a href=&quot;qsettings#setAtomicSyncRequired&quot;&gt;setAtomicSyncRequired&lt;/a&gt;() to turn the safety off.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;&lt;/a&gt;특정 조건이 충족되는 경우 다른 프로세스 (동시에 실행되는 응용 프로그램의 다른 인스턴스 또는 다른 응용 프로그램이 될 수 있음)에서 동일한 시스템 위치를 읽고 쓰는 데 QSettings 를 안전하게 사용할 수 있습니다. 들어 &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: IniFormat&lt;/a&gt; , 그것은 자문 파일 잠금 및 데이터 무결성을 보장하기 위해 스마트 병합 알고리즘을 사용합니다. 작동하려면 쓰기 가능한 구성 파일이 일반 파일이어야하고 현재 사용자가 새 임시 파일을 만들 수있는 디렉토리에 있어야합니다. 그렇지 않은 경우 &lt;a href=&quot;qsettings#setAtomicSyncRequired&quot;&gt;setAtomicSyncRequired&lt;/a&gt; ()를 사용 하여 안전을 끄십시오.</target>
        </trans-unit>
        <trans-unit id="bb5801d4acf0ed5d7cec99387ea6f3a63b90ecc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is &lt;a href=&quot;threads-reentrancy&quot;&gt;reentrant&lt;/a&gt;. This means that you can use distinct &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object in different threads simultaneously. This guarantee stands even when the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; objects refer to the same files on disk (or to the same entries in the system registry). If a setting is modified through one &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object, the change will immediately be visible in any other &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; objects that operate on the same location and that live in the same process.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 가 &lt;a href=&quot;threads-reentrancy&quot;&gt;재진입&lt;/a&gt; 됩니다. 이것은 다른 스레드에서 다른 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체를 동시에 사용할 수 있음을 의미합니다 . 이 보증은 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체가 디스크의 동일한 파일 (또는 시스템 레지스트리의 동일한 항목)을 참조하는 경우에도 유효 합니다. 하나의 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체를 통해 설정을 수정 하면 동일한 위치에서 작동하고 동일한 프로세스 에있는 다른 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체 에 변경 내용이 즉시 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="263b6387b81b4e953afc4e3692fa584b567c1388" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is an abstraction around these technologies, enabling you to save and restore application settings in a portable manner. It also supports &lt;a href=&quot;qsettings#registerFormat&quot;&gt;custom storage formats&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 는 이러한 기술에 대한 추상화로, 휴대용 방식으로 응용 프로그램 설정을 저장하고 복원 할 수 있습니다. 또한 &lt;a href=&quot;qsettings#registerFormat&quot;&gt;사용자 지정 스토리지 형식을&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="a892ff6c917b67d09ea13c2b16ce1f2a1987b4a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is often used to store the state of a GUI application. The following example illustrates how to use &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to save and restore the geometry of an application's main window.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 는 종종 GUI 응용 프로그램의 상태를 저장하는 데 사용됩니다. 다음 예제는 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 를 사용 하여 응용 프로그램 기본 창의 지오메트리를 저장하고 복원하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c29cfb8f2c897af65cec51c1ea228902c6fb14ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; objects can be created either on the stack or on the heap (i.e. using &lt;code&gt;new&lt;/code&gt;). Constructing and destroying a &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object is very fast.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체는 스택 또는 힙에 생성 할 수 있습니다 (예 : &lt;code&gt;new&lt;/code&gt; 사용 ). &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체를 생성 하고 파괴하는 것은 매우 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="09ab91018f40183c46f1ecd4edd39920024048bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; provides no way of reading INI &quot;path&quot; entries, i.e., entries with unescaped slash characters. (This is because these entries are ambiguous and cannot be resolved automatically.)</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 는 INI &quot;경로&quot;항목, 즉 이스케이프되지 않은 슬래시 문자가있는 항목을 읽는 방법을 제공하지 않습니다. (이러한 항목은 모호하여 자동으로 해결할 수 없기 때문입니다.)</target>
        </trans-unit>
        <trans-unit id="6f31c66236bc338458a06f7d22e115fcad7606c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; stores settings. Each setting consists of a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; that specifies the setting's name (the</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 는 설정을 저장합니다. 각 설정은 설정 이름을 지정 하는 &lt;a href=&quot;qstring&quot;&gt;QString으로&lt;/a&gt; 구성됩니다 (</target>
        </trans-unit>
        <trans-unit id="4703ae5390b4914ecac0155910507b8fe755848e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;'s API is based on &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;, allowing you to save most value-based types, such as &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, and &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, with the minimum of effort.</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 의 API는 &lt;a href=&quot;qvariant&quot;&gt;QVariant를&lt;/a&gt; 기반으로 하므로 최소한의 노력 으로 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; , &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; 및 &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 와 같은 대부분의 값 기반 유형을 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c625f6e27ad20bc984ead5751597733e7a733658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;, &lt;a href=&quot;qsettings#Format-enum&quot;&gt;IniFormat&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt; , &lt;a href=&quot;qsettings#Format-enum&quot;&gt;IniFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8af68cd9f690c14f84fd0acc452a41142b94bd8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::Format&lt;/a&gt; QSettings::format() const</source>
          <target state="translated">&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: Format&lt;/a&gt; QSettings :: format () const</target>
        </trans-unit>
        <trans-unit id="6f10a768726beccbe0260add32dedb7c959ab68f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings::Scope&lt;/a&gt; QSettings::scope() const</source>
          <target state="translated">&lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings :: Scope&lt;/a&gt; QSettings :: scope () const</target>
        </trans-unit>
        <trans-unit id="135456b532d1259c20345c339028dd01ba47b451" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#Status-enum&quot;&gt;QSettings::Status&lt;/a&gt; QSettings::status() const</source>
          <target state="translated">&lt;a href=&quot;qsettings#Status-enum&quot;&gt;QSettings :: Status&lt;/a&gt; QSettings :: status () const</target>
        </trans-unit>
        <trans-unit id="8d30048b71005d521b5c6aa1dccaa2534c172fd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsettings#registerFormat&quot;&gt;registerFormat&lt;/a&gt;(const QString &amp;amp;extension, QSettings::ReadFunc readFunc, QSettings::WriteFunc writeFunc, Qt::CaseSensitivity caseSensitivity)</source>
          <target state="translated">&lt;a href=&quot;qsettings#registerFormat&quot;&gt;registerFormat&lt;/a&gt; (const QString &amp;amp; extension, QSettings :: ReadFunc readFunc, QSettings :: WriteFunc writeFunc, Qt :: CaseSensitivity caseSensitivity)</target>
        </trans-unit>
        <trans-unit id="54c746f7c83fbed9bfeeab893058c9c15199baa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt; *QSGEngine::createRenderer() const</source>
          <target state="translated">&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt; * QSGEngine :: createRenderer () const</target>
        </trans-unit>
        <trans-unit id="05f0f3eec68f027a34524465d9028e314b7bd575" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt; gives access to the scene graph nodes and rendering of a &lt;a href=&quot;qsgengine&quot;&gt;QSGEngine&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt; 는 장면 그래프 노드 및 &lt;a href=&quot;qsgengine&quot;&gt;QSGEngine&lt;/a&gt; 렌더링에 대한 액세스를 제공합니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c9c1a75fa97c69b508a8d2d6612fc3394fab020" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgabstractrenderer#ClearModeBit-enum&quot;&gt;QSGAbstractRenderer::ClearMode&lt;/a&gt; QSGAbstractRenderer::clearMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgabstractrenderer#ClearModeBit-enum&quot;&gt;QSGAbstractRenderer :: ClearMode&lt;/a&gt; QSGAbstractRenderer :: clearMode () const</target>
        </trans-unit>
        <trans-unit id="fdc4154ddc267b90cbcadaf25b70352713cc99c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgbasicgeometrynode&quot;&gt;QSGBasicGeometryNode&lt;/a&gt;, &lt;a href=&quot;qsgopacitynode&quot;&gt;QSGOpacityNode&lt;/a&gt;, &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt;, and &lt;a href=&quot;qsgtransformnode&quot;&gt;QSGTransformNode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgbasicgeometrynode&quot;&gt;QSGBasicGeometryNode&lt;/a&gt; , &lt;a href=&quot;qsgopacitynode&quot;&gt;QSGOpacityNode&lt;/a&gt; , &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt; 및 &lt;a href=&quot;qsgtransformnode&quot;&gt;QSGTransformNode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e00c3f8f8dc7ce5afb06cc4f2a4b2d02ec3118d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgclipnode&quot;&gt;QSGClipNode&lt;/a&gt; and &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgclipnode&quot;&gt;QSGClipNode&lt;/a&gt; 및 &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2aab2015070e4b1cc704a29556ae3dcec106044e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgflatcolormaterial&quot;&gt;QSGFlatColorMaterial&lt;/a&gt;, &lt;a href=&quot;qsgopaquetexturematerial&quot;&gt;QSGOpaqueTextureMaterial&lt;/a&gt;, &lt;a href=&quot;qsgsimplematerial&quot;&gt;QSGSimpleMaterial&lt;/a&gt;, and &lt;a href=&quot;qsgvertexcolormaterial&quot;&gt;QSGVertexColorMaterial&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgflatcolormaterial&quot;&gt;QSGFlatColorMaterial&lt;/a&gt; , &lt;a href=&quot;qsgopaquetexturematerial&quot;&gt;QSGOpaqueTextureMaterial&lt;/a&gt; , &lt;a href=&quot;qsgsimplematerial&quot;&gt;QSGSimpleMaterial&lt;/a&gt; 및 &lt;a href=&quot;qsgvertexcolormaterial&quot;&gt;QSGVertexColorMaterial&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="956bc1307dc738f051b2f15a06fd3de87c751b64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; *QSGBasicGeometryNode::geometry()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; * QSGBasicGeometryNode :: geometry ()</target>
        </trans-unit>
        <trans-unit id="fabaa501b87b7bb0ac6a47bcfa4d2068a45b47d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry::DataPattern&lt;/a&gt; QSGGeometry::indexDataPattern() const</source>
          <target state="translated">&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry :: DataPattern&lt;/a&gt; QSGGeometry :: indexDataPattern () const</target>
        </trans-unit>
        <trans-unit id="8651005a6081de4ba9648a0a2a7491aff372fbbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry::DataPattern&lt;/a&gt; QSGGeometry::vertexDataPattern() const</source>
          <target state="translated">&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry :: DataPattern&lt;/a&gt; QSGGeometry :: vertexDataPattern () const</target>
        </trans-unit>
        <trans-unit id="5d498567675b04c8ca358c1d4437ab73e0ab7f3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry#defaultAttributes_ColoredPoint2D&quot;&gt;QSGGeometry::defaultAttributes_ColoredPoint2D&lt;/a&gt;() can be used to construct an attribute set that is compatible with this material.</source>
          <target state="translated">&lt;a href=&quot;qsggeometry#defaultAttributes_ColoredPoint2D&quot;&gt;QSGGeometry :: defaultAttributes_ColoredPoint2D&lt;/a&gt; ()를 사용하여이 머티리얼과 호환되는 속성 세트를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3874aafd653f344a196ac7ef88651e6248301c57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry-coloredpoint2d&quot;&gt;QSGGeometry::ColoredPoint2D&lt;/a&gt; *QSGGeometry::vertexDataAsColoredPoint2D()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry-coloredpoint2d&quot;&gt;QSGGeometry :: ColoredPoint2D&lt;/a&gt; * QSGGeometry :: vertexDataAsColoredPoint2D ()</target>
        </trans-unit>
        <trans-unit id="d98463a90dc54bcdcccfa37efbf4411310c9898f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry-point2d&quot;&gt;QSGGeometry::Point2D&lt;/a&gt; *QSGGeometry::vertexDataAsPoint2D()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry-point2d&quot;&gt;QSGGeometry :: Point2D&lt;/a&gt; * QSGGeometry :: vertexDataAsPoint2D ()</target>
        </trans-unit>
        <trans-unit id="4f5bcd8e5dfb5390e14b1fc428b6fa2a4c3d6429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsggeometry-texturedpoint2d&quot;&gt;QSGGeometry::TexturedPoint2D&lt;/a&gt; *QSGGeometry::vertexDataAsTexturedPoint2D()</source>
          <target state="translated">&lt;a href=&quot;qsggeometry-texturedpoint2d&quot;&gt;QSGGeometry :: TexturedPoint2D&lt;/a&gt; * QSGGeometry :: vertexDataAsTexturedPoint2D ()</target>
        </trans-unit>
        <trans-unit id="a6320bd3185894e9d26a5c3d71ecbc2029fa73aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; *QQuickWindow::createImageNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; * QQuickWindow :: createImageNode () const</target>
        </trans-unit>
        <trans-unit id="a0e516d9a81c068b1432cac59228ebe585f79b40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; *QSGEngine::createImageNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; * QSGEngine :: createImageNode () const</target>
        </trans-unit>
        <trans-unit id="f26403b78eeb6e5df60b6b4972d2d2976caa3d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt;, &lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt;, &lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode&lt;/a&gt;, and &lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgimagenode&quot;&gt;QSGImageNode&lt;/a&gt; , &lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; , &lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode&lt;/a&gt; 및 &lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bee17b83328d9cf5248ece229b37279964065242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *QSGGeometryNode::material() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; * QSGGeometryNode :: material () const</target>
        </trans-unit>
        <trans-unit id="8c38f1c6fc601171832a09d6a2ce34a96e090d62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *QSGGeometryNode::opaqueMaterial() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; * QSGGeometryNode :: opaqueMaterial () const</target>
        </trans-unit>
        <trans-unit id="3334e56f7c2f18ad9a77b18d43777aa7bf2e69c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial::Flags&lt;/a&gt; QSGMaterial::flags() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial :: Flags&lt;/a&gt; QSGMaterial :: flags () const</target>
        </trans-unit>
        <trans-unit id="f3d547569b968d3f5a91fae5fb52098b10171cd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialrhishader&quot;&gt;QSGMaterialRhiShader&lt;/a&gt; and &lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShader&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialrhishader&quot;&gt;QSGMaterialRhiShader&lt;/a&gt; and &lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShader&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6685fabeed989ace492d6d1c219c52eda3b41e53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialrhishader#Flag-enum&quot;&gt;QSGMaterialRhiShader::Flags&lt;/a&gt; QSGMaterialRhiShader::flags() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialrhishader#Flag-enum&quot;&gt;QSGMaterialRhiShader::Flags&lt;/a&gt; QSGMaterialRhiShader::flags() const</target>
        </trans-unit>
        <trans-unit id="361c190e589c617b1f78a51f4a61029c34c796f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialshader#vertexShader&quot;&gt;QSGSimpleMaterialShader::vertexShader&lt;/a&gt;() and &lt;a href=&quot;qsgmaterialshader#fragmentShader&quot;&gt;QSGSimpleMaterialShader::fragmentShader&lt;/a&gt;() are used to specify the actual shader source code. The names of the vertex attributes should be listed in the &lt;a href=&quot;qsgsimplematerialshader#attributes&quot;&gt;QSGSimpleMaterialShader::attributes&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader#vertexShader&quot;&gt;QSGSimpleMaterialShader :: vertexShader&lt;/a&gt; () 및 &lt;a href=&quot;qsgmaterialshader#fragmentShader&quot;&gt;QSGSimpleMaterialShader :: fragmentShader&lt;/a&gt; ()는 실제 셰이더 소스 코드를 지정하는 데 사용됩니다. 꼭짓점 속성의 이름은 &lt;a href=&quot;qsgsimplematerialshader#attributes&quot;&gt;QSGSimpleMaterialShader :: attributes&lt;/a&gt; ()에 나열되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b9367bb01a82b8ff0ab11f7c7e969a9f6ff60708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgmaterialshader-renderstate#DirtyState-enum&quot;&gt;RenderState::DirtyStates&lt;/a&gt; RenderState::dirtyStates() const</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader-renderstate#DirtyState-enum&quot;&gt;RenderState :: DirtyStates&lt;/a&gt; RenderState :: dirtyStates () const</target>
        </trans-unit>
        <trans-unit id="5cf4f1d53e671979bf28f5301dbbd5e1321e607e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::Flags&lt;/a&gt; QSGNode::flags() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: Flags&lt;/a&gt; QSGNode :: flags () const</target>
        </trans-unit>
        <trans-unit id="0500d9aee1c7191b890c0ddc5ab63bdc1f3b5bde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#NodeType-enum&quot;&gt;QSGNode::NodeType&lt;/a&gt; QSGNode::type() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#NodeType-enum&quot;&gt;QSGNode :: NodeType&lt;/a&gt; QSGNode :: type () const</target>
        </trans-unit>
        <trans-unit id="1cf31e85c8ba5a1154e7310238e83738bfb55c5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::childAtIndex(int</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: childAtIndex (int</target>
        </trans-unit>
        <trans-unit id="5b7bf5d66434c98d945f468eb2b8e7880d61d6e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::firstChild() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: firstChild () const</target>
        </trans-unit>
        <trans-unit id="3315527b0a07a0e1d5459b16c89e6c75fdfaa652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::lastChild() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: lastChild () const</target>
        </trans-unit>
        <trans-unit id="478d3132781845d205a87e025ddb79305d5bde54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::nextSibling() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: nextSibling () const</target>
        </trans-unit>
        <trans-unit id="5833e86b83abfcfd1d35ec4ea3cf7c0b8b3a88af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::parent() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: parent () const</target>
        </trans-unit>
        <trans-unit id="fc396e0d484567ac39881f6d0c9bb2e21111f6da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *QSGNode::previousSibling() const</source>
          <target state="translated">&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; * QSGNode :: previousSibling () const</target>
        </trans-unit>
        <trans-unit id="ebfbd9c68b643d018a608de05ff75223ac985672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; *QQuickWindow::createRectangleNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; * QQuickWindow :: createRectangleNode () const</target>
        </trans-unit>
        <trans-unit id="718ff69c2a315dfe49e249457e0ae37a4644a54d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; *QSGEngine::createRectangleNode() const</source>
          <target state="translated">&lt;a href=&quot;qsgrectanglenode&quot;&gt;QSGRectangleNode&lt;/a&gt; * QSGEngine :: createRectangleNode () const</target>
        </trans-unit>
        <trans-unit id="aa5b57e4b5adeb59cf9a16323b60f5121ed68651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; *QQuickWindow::rendererInterface() const</source>
          <target state="translated">&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; * QQuickWindow :: rendererInterface () const</target>
        </trans-unit>
        <trans-unit id="f9b1aebbe395f440e4b761d507143b030b5f3ecf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; *QSGEngine::rendererInterface() const</source>
          <target state="translated">&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; * QSGEngine :: rendererInterface () const</target>
        </trans-unit>
        <trans-unit id="448004372068db15997d9d40ef8d666d4fd39cbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;'s functions have varying availability. API and language queries, like &lt;a href=&quot;qsgrendererinterface#graphicsApi&quot;&gt;graphicsApi&lt;/a&gt;() or &lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt;() are always available, meaning it is sufficient to construct a &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, and the graphics API or shading language in use can be queried right after via &lt;a href=&quot;qquickwindow#rendererInterface&quot;&gt;QQuickWindow::rendererInterface&lt;/a&gt;(). This guarantees that utilities like the &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; QML type are able to report the correct values as early as possible, without having conditional property values - depending on for instance &lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt;() - evaluate to unexpected values.</source>
          <target state="translated">&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; 의 기능은 가용성이 다양합니다. &lt;a href=&quot;qsgrendererinterface#graphicsApi&quot;&gt;graphicsApi&lt;/a&gt; () 또는 &lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt; () 과 같은 API 및 언어 쿼리를 항상 사용할 수 있습니다. 즉, &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; 또는 &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; 를 생성하기에 충분하며 사용중인 그래픽 API 또는 음영 처리 언어를 &lt;a href=&quot;qquickwindow#rendererInterface&quot;&gt;QQuickWindow :: rendererInterface&lt;/a&gt; () 를 통해 바로 쿼리 할 수 ​​있습니다 . 이를 통해 &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; QML 유형 과 같은 유틸리티가 예 를 들어 &lt;a href=&quot;qsgrendererinterface#shaderType&quot;&gt;shaderType&lt;/a&gt; () 에 따라 조건부 속성 값을 가지지 않고 예상치 못한 값으로 평가 하지 않고 가능한 한 빨리 올바른 값을보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="585fb2f61d128d07d8f8728dc795d65ba8f67f8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;BlendState&lt;/a&gt; - blend enabled, blend function</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;BlendState-&lt;/a&gt; 블렌드 활성화, 블렌드 기능</target>
        </trans-unit>
        <trans-unit id="f455f1ea741df3b4fd0855ef980ad23bc5dbd0b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ColorState&lt;/a&gt; - clear color, color write mask</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ColorState-&lt;/a&gt; 선명한 색상, 색상 쓰기 마스크</target>
        </trans-unit>
        <trans-unit id="ff97281285684b06bf13d36e7e69da4b8605c7da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;CullState&lt;/a&gt; - front face, cull face enabled</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;CullState-&lt;/a&gt; 앞면, 앞면 활성화</target>
        </trans-unit>
        <trans-unit id="9d406d4fe0adfc7bbe1487b6b69c10fcfeb9b6d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;DepthState&lt;/a&gt; - depth write mask, depth test enabled, depth comparison function</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;DepthState-&lt;/a&gt; 깊이 쓰기 마스크, 깊이 테스트 가능, 깊이 비교 기능</target>
        </trans-unit>
        <trans-unit id="8fb4880f10ebb0565b5d7283facb360a05e7221c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;RenderTargetState&lt;/a&gt; - render target</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;RenderTargetState-&lt;/a&gt; 렌더 타겟</target>
        </trans-unit>
        <trans-unit id="4358f4106f0508da627808b7a9f40c187afcd067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ScissorState&lt;/a&gt; - scissor enabled, scissor test enabled</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ScissorState-&lt;/a&gt; 시저 활성화, 시저 테스트 활성화</target>
        </trans-unit>
        <trans-unit id="43fc6b9928f131e08899322179ab4ff7eac9a78b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StencilState&lt;/a&gt; - stencil write masks, stencil test enabled, stencil operations, stencil comparison functions</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StencilState-&lt;/a&gt; 스텐실 쓰기 마스크, 스텐실 테스트 가능, 스텐실 작업, 스텐실 비교 기능</target>
        </trans-unit>
        <trans-unit id="a5b5e37c45f16443962a726dd2e4fb6e435cb7d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ViewportState&lt;/a&gt; - viewport</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;ViewportState-&lt;/a&gt; 뷰포트</target>
        </trans-unit>
        <trans-unit id="66dbbe4cf7e540ed33461be38ed0efe1d1cb5d91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changedStates&lt;/a&gt;() should return which states this function changes. If a state is not covered by &lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StateFlags&lt;/a&gt;, the state should be set to the default value according to the OpenGL specification. For other APIs, see the documentation for &lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changedStates&lt;/a&gt;() for more information.</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changedStates&lt;/a&gt; ()는이 함수가 변경된 상태를 반환해야합니다. 상태가 &lt;a href=&quot;qsgrendernode#StateFlag-enum&quot;&gt;StateFlags에&lt;/a&gt; 포함되지 않으면 OpenGL 사양에 따라 상태를 기본값으로 설정해야합니다. 다른 API의 경우 자세한 내용은 &lt;a href=&quot;qsgrendernode#changedStates&quot;&gt;changedStates&lt;/a&gt; () 설명서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5ec1dec4ab34cb03ff7d6fc7350450a524f79579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimplematerialshader#updateState-1&quot;&gt;QSGSimpleMaterialShader::updateState&lt;/a&gt;() is used to push the material state to the OpenGL shader program.</source>
          <target state="translated">&lt;a href=&quot;qsgsimplematerialshader#updateState-1&quot;&gt;QSGSimpleMaterialShader :: updateState&lt;/a&gt; ()는 재질 상태를 OpenGL 셰이더 프로그램으로 푸시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5a4ca04997a30a6edafa31f8952337b504a51315" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode&lt;/a&gt; - a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; subclass which defines a rectangular geometry with a solid color material.</source>
          <target state="translated">&lt;a href=&quot;qsgsimplerectnode&quot;&gt;QSGSimpleRectNode-&lt;/a&gt; 단색 재질로 직사각형 기하학을 정의 하는 &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; 서브 클래스.</target>
        </trans-unit>
        <trans-unit id="bb467126716248869c18abb3a2e86f4bec81e586" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode&lt;/a&gt; - a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; subclass which defines a rectangular geometry with a texture material.</source>
          <target state="translated">&lt;a href=&quot;qsgsimpletexturenode&quot;&gt;QSGSimpleTextureNode-&lt;/a&gt; 텍스처 재질로 직사각형 기하학을 정의 하는 &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; 서브 클래스.</target>
        </trans-unit>
        <trans-unit id="90de7288295249ecab3edf7e8b835ce748ab9596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgsimpletexturenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGSimpleTextureNode::TextureCoordinatesTransformMode&lt;/a&gt; QSGSimpleTextureNode::textureCoordinatesTransform() const</source>
          <target state="translated">&lt;a href=&quot;qsgsimpletexturenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGSimpleTextureNode :: TextureCoordinatesTransformMode&lt;/a&gt; QSGSimpleTextureNode :: textureCoordinatesTransform () const</target>
        </trans-unit>
        <trans-unit id="c439da306406e6b437aba6afcd1b096241a7d7bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromId(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QQuickWindow :: createTextureFromId ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="844e499fae97d8f79a8d03e7017acb234d79bd86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromImage(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QQuickWindow :: createTextureFromImage (const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="21e8b6b4c63df3b1c7284c240353078e2250a861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromNativeObject(&lt;a href=&quot;qquickwindow#NativeObjectType-enum&quot;&gt;QQuickWindow::NativeObjectType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickWindow::createTextureFromNativeObject(&lt;a href=&quot;qquickwindow#NativeObjectType-enum&quot;&gt;QQuickWindow::NativeObjectType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="345ea0d49d1fd75fe49d799670d85e1fbf338b00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromId(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGEngine :: createTextureFromId ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00b474272d5e7508ec02b5e26599d2175fed8c2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromId(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromId(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f36991a922311ee6dbe68e9adf312b473a72e1a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGEngine::createTextureFromImage(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGEngine :: createTextureFromImage (const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9c7c921e3c1cb0c96edc0d7e7e625b2c822b55d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGOpaqueTextureMaterial::texture() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGOpaqueTextureMaterial :: texture () const</target>
        </trans-unit>
        <trans-unit id="dbd46393c7557a7ee22eb849f7710949d27b80d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGSimpleTextureNode::texture() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGSimpleTextureNode :: texture () const</target>
        </trans-unit>
        <trans-unit id="45b77cc87424fd5a6264b9e66ebfb101d013a5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture::AnisotropyLevel&lt;/a&gt; QSGOpaqueTextureMaterial::anisotropyLevel() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture :: 이방성&lt;/a&gt; 레벨 QSGOpaqueTextureMaterial :: anisotropyLevel () const</target>
        </trans-unit>
        <trans-unit id="a341a3e8893e1449d61c5e125ab5ec0c4832981d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture::AnisotropyLevel&lt;/a&gt; QSGTexture::anisotropyLevel() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture :: 이방성&lt;/a&gt; 레벨 QSGTexture :: anisotropyLevel () const</target>
        </trans-unit>
        <trans-unit id="8e79018fab9ac22f4ba358d479de949461e202e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGOpaqueTextureMaterial::filtering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGOpaqueTextureMaterial :: filtering () const</target>
        </trans-unit>
        <trans-unit id="7350df14f39fe06a9e00f76372ae5613f4717617" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGOpaqueTextureMaterial::mipmapFiltering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGOpaqueTextureMaterial :: mipmapFiltering () const</target>
        </trans-unit>
        <trans-unit id="21d7de9819b343ad523f454dd0c1942f82930130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGSimpleTextureNode::filtering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGSimpleTextureNode :: filtering () const</target>
        </trans-unit>
        <trans-unit id="5a0fd316a473d3ec56c0cb3ebb79e8f82535a549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGTexture::filtering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGTexture :: filtering () const</target>
        </trans-unit>
        <trans-unit id="c975f8aa642c14d69ba37344a74b6eee5b5341ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGTexture::mipmapFiltering() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGTexture :: mipmapFiltering () const</target>
        </trans-unit>
        <trans-unit id="2b8a8ffa8cbef92ffee5b5ae0a00cc4531334421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGOpaqueTextureMaterial::horizontalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt; QSGOpaqueTextureMaterial :: horizontalWrapMode () const</target>
        </trans-unit>
        <trans-unit id="434802c1dfafc7de943fe0e3c3596a5633e23c32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGOpaqueTextureMaterial::verticalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt; QSGOpaqueTextureMaterial :: verticalWrapMode () const</target>
        </trans-unit>
        <trans-unit id="d8f45c92247efa4b0c075b1f9b97b7f62a328d81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGTexture::horizontalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt; QSGTexture :: horizontalWrapMode () const</target>
        </trans-unit>
        <trans-unit id="b48909e1a2b47e56405d5749d0f19f1c854d8a17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt; QSGTexture::verticalWrapMode() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt; QSGTexture :: verticalWrapMode () const</target>
        </trans-unit>
        <trans-unit id="9fbef34455887053c464fb93f4cd83c03ed45e0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsgtexture-nativetexture&quot;&gt;QSGTexture::NativeTexture&lt;/a&gt; QSGTexture::nativeTexture() const</source>
          <target state="translated">&lt;a href=&quot;qsgtexture-nativetexture&quot;&gt;QSGTexture::NativeTexture&lt;/a&gt; QSGTexture::nativeTexture() const</target>
        </trans-unit>
        <trans-unit id="032d07c6f583c795ed6530518cec95e3d1a58b9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; is designed to be used with &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; or &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; to implement custom &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly shared&lt;/a&gt; or explicitly shared classes. &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; provides &lt;a href=&quot;threads-reentrancy&quot;&gt;thread-safe&lt;/a&gt; reference counting.</source>
          <target state="translated">&lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; 는 &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; 또는 &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; 와 함께 사용하여 &lt;a href=&quot;implicit-sharing#&quot;&gt;암시 적으로 공유&lt;/a&gt; 되거나 명시 적으로 공유 된 사용자 정의 클래스 를 구현 하도록 설계되었습니다 . &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; 는 &lt;a href=&quot;threads-reentrancy&quot;&gt;스레드 안전&lt;/a&gt; 참조 카운팅을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="ad05146d76fa126e94935a8f07d791fb99340c5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; makes writing your own &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly shared&lt;/a&gt; classes easy. &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; implements &lt;a href=&quot;threads-reentrancy&quot;&gt;thread-safe&lt;/a&gt; reference counting, ensuring that adding QSharedDataPointers to your &lt;a href=&quot;threads-reentrancy&quot;&gt;reentrant&lt;/a&gt; classes won't make them non-reentrant.</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt;를 사용하면 &lt;a href=&quot;implicit-sharing#&quot;&gt;내재적으로 공유 된&lt;/a&gt; 클래스를 쉽게 작성할 수 있습니다. &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; 는 &lt;a href=&quot;threads-reentrancy&quot;&gt;스레드 안전&lt;/a&gt; 참조 카운팅을 구현 하여 &lt;a href=&quot;threads-reentrancy&quot;&gt;재진입&lt;/a&gt; 클래스에 QSharedDataPointer를 추가해도 재진입 이되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="37180e9643873e9e89c178efc519a93548d9bb15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;, on the other hand, holds a pointer to shared data (i.e., a class derived from &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt;). It does so by means of an internal reference count, placed in the &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; base class. This class can, therefore, detach based on the type of access made to the data being guarded: if it's a non-const access, it creates a copy atomically for the operation to complete.</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer&quot;&gt;반면 QSharedDataPointer&lt;/a&gt; 는 공유 데이터 (즉, &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; 에서 파생 된 클래스)에 대한 포인터를 보유합니다 . &lt;a href=&quot;qshareddata&quot;&gt;QSharedData&lt;/a&gt; 기본 클래스에 배치 된 내부 참조 카운트를 통해 수행 됩니다. 따라서이 클래스는 보호되는 데이터에 대한 액세스 유형을 기반으로 분리 할 수 ​​있습니다. 비 const 액세스 인 경우 작업을 완료하기 위해 원자 적으로 사본을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="156d66c9c9e12921b057ec6da3d308559619bf20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedDataPointer::operator=(&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSharedDataPointer :: operator = ( &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="dfa9bcf53e62c219cbc566f9bd47a2108049b182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedDataPointer::operator=(T *</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSharedDataPointer :: operator = (T *</target>
        </trans-unit>
        <trans-unit id="b1784fa9c941c8204c101a11a2f2c82f8d352e3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedDataPointer::operator=(const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSharedDataPointer :: operator = (const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b70a6a626cb5a99e13b32b3ff8dd20bce9f0f4b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; automatically destroys the shared memory segment when the last instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; is detached from the segment, and no references to the segment remain.</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; 는 &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; 의 마지막 인스턴스가 세그먼트에서 분리되고 세그먼트에 대한 참조가 남아 있지 않으면 공유 메모리 세그먼트를 자동으로 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="5bf554a83f1e3f7cace403533397cbdd846531ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; provides access to a shared memory segment by multiple threads and processes. It also provides a way for a single thread or process to lock the memory for exclusive access.</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; 는 여러 스레드 및 프로세스를 통해 공유 메모리 세그먼트에 대한 액세스를 제공합니다. 또한 단일 스레드 또는 프로세스가 독점 액세스를 위해 메모리를 잠글 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e2d050f16cc62bb17847fc73a2108c45dccbac77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedmemory#SharedMemoryError-enum&quot;&gt;QSharedMemory::SharedMemoryError&lt;/a&gt; QSharedMemory::error() const</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory#SharedMemoryError-enum&quot;&gt;QSharedMemory :: SharedMemoryError&lt;/a&gt; QSharedMemory :: error () const</target>
        </trans-unit>
        <trans-unit id="fb74fd83fd5d6d51d1c2f53afad3d85742247cc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; and &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; are reentrant classes. This means that, in general, a given &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; or &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; object &lt;b&gt;cannot&lt;/b&gt; be accessed by multiple threads at the same time without synchronization.</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 및 &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; 는 재진입 클래스입니다. 이는 일반적으로 주어진 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 또는 &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; 객체에 동기화없이 여러 스레드가 동시에 액세스 할 &lt;b&gt;수 없음을&lt;/b&gt; 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a3a887d5cc0ca8ef9f5a6b6d3e87546839954491" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; holds a shared pointer by means of an external reference count (i.e., a reference counter placed outside the object). Like its name indicates, the pointer value is shared among all instances of &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; and &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;. The contents of the object pointed to by the pointer should not be considered shared, however: there is only one object. For that reason, &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; does not provide a way to detach or make copies of the pointed object.</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 는 외부 참조 카운트 (즉, 객체 외부에 위치한 참조 카운터)를 통해 공유 포인터를 보유합니다. 이름에서 알 수 있듯이 포인터 값은 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 및 &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; 의 모든 인스턴스에서 공유 됩니다. 포인터가 가리키는 객체의 내용은 공유 된 것으로 간주되어서는 안됩니다. 단 하나의 객체 만 있습니다. 이러한 이유로, &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer는&lt;/a&gt; 뾰족한 객체의 복사본을 분리하거나 만들 수있는 방법을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d40bb9b3539411f72ff21a9fe93f138b6a49f4dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; will delete the pointer it is holding when it goes out of scope, provided no other &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; objects are referencing it.</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 객체가 참조하는 다른 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 객체가 없는 경우 QSharedPointer 는 포인터가 범위를 벗어날 때 보유하고있는 포인터를 삭제 합니다.</target>
        </trans-unit>
        <trans-unit id="69f1e6940f0a4b164cd1ef56b20f9442690eb609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;&lt;a href=&quot;qquickitemgrabresult&quot;&gt;QQuickItemGrabResult&lt;/a&gt;&amp;gt; QQuickItem::grabToImage(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt; &lt;a href=&quot;qquickitemgrabresult&quot;&gt;QQuickItemGrabResult&lt;/a&gt; &amp;gt; QQuickItem :: grabToImage (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="08c673d61c2bcbca9786ebc343f692f92190e5ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtemporarydir&quot;&gt;QTemporaryDir&lt;/a&gt;&amp;gt; QTest::qExtractTestData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt; &lt;a href=&quot;qtemporarydir&quot;&gt;QTemporaryDir&lt;/a&gt; &amp;gt; QTest :: qExtractTestData (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="566c103d8aa5df20801c561e1ea67edc520aa65b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; QEnableSharedFromThis::sharedFromThis()</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; QEnableSharedFromThis :: sharedFromThis ()</target>
        </trans-unit>
        <trans-unit id="aefdbfeeed98595443a3e4efafcd4287a7fe5e8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; QWeakPointer::lock() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; QWeakPointer :: lock () const</target>
        </trans-unit>
        <trans-unit id="c872b2a413db6fda86ae51f70b3f719919bf836d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; QWeakPointer::toStrongRef() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; QWeakPointer :: toStrongRef () const</target>
        </trans-unit>
        <trans-unit id="3c7ee0923be891eddffc94c9b65ea65b49a86b80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;const T&amp;gt; QEnableSharedFromThis::sharedFromThis() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;const T&amp;gt; QEnableSharedFromThis :: sharedFromThis () const</target>
        </trans-unit>
        <trans-unit id="01da38062bcdc5a6371726860c91b0fb81d5487c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedPointer::operator=(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSharedPointer :: operator = (const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ac9555c9b1a7429aed0f21048b862bb48258b4d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QSharedPointer::operator=(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QSharedPointer :: operator = (const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="263d3eea160efbd3170c6164bf7d94df2a8ec522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::constCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: constCast () const</target>
        </trans-unit>
        <trans-unit id="baf339c831b019b7304409d05ff4aef12f3f8982" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::dynamicCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: dynamicCast () const</target>
        </trans-unit>
        <trans-unit id="64592f32c596e15668c229e9a5ce7c9914f488bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::objectCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: objectCast () const</target>
        </trans-unit>
        <trans-unit id="dedcb49b28bbe4c3112bdf9bf2df1256cc6bc8ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerCast (const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="06baf5b0ee691bb82bb724c0a0887bd3403ec9ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerCast (const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2c7c559f61ffaa4ee9f2519c1ea455df4ef590e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerConstCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerConstCast (const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6d2e3cc01fcb2fb88d40cefb95e1781ad192fa25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerConstCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerConstCast (const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f068797c0592101a6de8dcf8ddb8490e775321ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerDynamicCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerDynamicCast (const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ccf7e849fbb9602f3b9bb166d3ac6285dfcc92c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerDynamicCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerDynamicCast (const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1426057e21e37892d5fc1401b9cb7d4026404624" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerObjectCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerObjectCast (const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="17084660120a7e8e1e59574593141502e68880c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::qSharedPointerObjectCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: qSharedPointerObjectCast (const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="58e619ab5506d0e26e9fdca090a5830138fa1575" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::staticCast() const</source>
          <target state="translated">&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;X&amp;gt; QSharedPointer :: staticCast () const</target>
        </trans-unit>
        <trans-unit id="69a3611162d0e698ce37d8a8bac09a99b2cdf4c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignalblocker&quot;&gt;QSignalBlocker&lt;/a&gt; can be used wherever you would otherwise use a pair of calls to blockSignals(). It blocks signals in its constructor and in the destructor it resets the state to what it was before the constructor ran.</source>
          <target state="translated">&lt;a href=&quot;qsignalblocker&quot;&gt;QSignalBlocker&lt;/a&gt; 는 blockSignals ()에 대한 호출 쌍을 사용하는 모든 곳에서 사용할 수 있습니다. 생성자 및 소멸자에서 신호를 차단하여 생성자가 실행되기 이전 상태로 상태를 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="43659160aa57bf6543c8eb860bf13818a0d3debb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt; &amp;amp;QSignalBlocker::operator=(&lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt; &amp;amp; QSignalBlocker :: operator = ( &lt;a href=&quot;qsignalblocker#QSignalBlocker&quot;&gt;QSignalBlocker&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="6bd2ec9151b0a5a56794f478016b3e9244243471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; can connect to any signal of any object and records its emission. &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; itself is a list of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; lists. Each emission of the signal will append one item to the list, containing the arguments of the signal.</source>
          <target state="translated">&lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; 는 모든 객체의 모든 신호에 연결하여 방출을 기록 할 수 있습니다. &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; 자체는 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 목록의 목록입니다. 신호의 각 방출은 신호의 인수를 포함하는 하나의 항목을 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8a2c20df5d9004bb618907bd6d2215fc47def40f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; *QState::addTransition(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; * QState :: addTransition (const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="afb3dc5882f9f4f7a03dae27c71ba129ba2566cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel&lt;/a&gt; eliminates the need to handle redundant corner cases by guaranteeing that it will never ask for:</source>
          <target state="translated">&lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel&lt;/a&gt; 은 다음을 요구 하지 않도록 보장하여 중복 코너 케이스를 처리 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="35e57d1c787dee2e177705c62d8f2d3ca931cfe4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractItemView::sizeHintForIndex(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractItemView :: sizeHintForIndex (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="460388a430de76f3f5e69e34ef68fa9d349e09a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractScrollArea::maximumViewportSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractScrollArea :: maximumViewportSize () const</target>
        </trans-unit>
        <trans-unit id="af1e0d5cca231058ac669f410dcc3cb9bd46ef85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QBackingStore::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QBackingStore :: size () const</target>
        </trans-unit>
        <trans-unit id="56c875754c7c54f13a5bc1f6b2ebcc4638f80924" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings::pixelAspectRatio() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings :: pixelAspectRatio () const</target>
        </trans-unit>
        <trans-unit id="e4f8b0501ddd853df7ea225f356f5b30a1e863d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QCameraViewfinderSettings :: resolution () const</target>
        </trans-unit>
        <trans-unit id="4ad7cadc727bb4093b07184fb819bd6ee95f78b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QFontMetrics::size(int</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QFontMetrics :: size (int</target>
        </trans-unit>
        <trans-unit id="bc405ea7e2a7fd42efef2d7e8733f262da7b105f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QGraphicsSvgItem::maximumCacheSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QGraphicsSvgItem :: maximumCacheSize () const</target>
        </trans-unit>
        <trans-unit id="ecb89612b33cba629a5dfe21bf87b12e3fcb4842" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon::actualSize(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon :: actualSize ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e97c9fa5ed373d96aab2694ff4ab758074c21ee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon::actualSize(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QIcon :: 실제 크기 (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="89a0debb0bde453151b65b1947a521dc77e9524f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImage::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImage :: size () const</target>
        </trans-unit>
        <trans-unit id="85a86a7846f05e5da0ca1d7d72fb53d7aafd474f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageEncoderSettings::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageEncoderSettings :: resolution () const</target>
        </trans-unit>
        <trans-unit id="dd5b8e189ea247bc1154b0546ec648d113d82c49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader::scaledSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader :: scaledSize () const</target>
        </trans-unit>
        <trans-unit id="db8fe29697fb0297f5b6b206f1a2c5d3fd3bacf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QImageReader :: size () const</target>
        </trans-unit>
        <trans-unit id="29ca797cd29304ad727b835f00c07a562287cbe7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QListWidgetItem::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QListWidgetItem :: sizeHint () const</target>
        </trans-unit>
        <trans-unit id="5420360796cd53b734e3eaa877ffc3308278e20b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMediaResource::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMediaResource :: resolution () const</target>
        </trans-unit>
        <trans-unit id="2cc1e3038ac433bd37342791b216f102287c707c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMovie::scaledSize()</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QMovie :: scaledSize ()</target>
        </trans-unit>
        <trans-unit id="89edd4f307b4984d24b5af3e2a8909be2172ef15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLFramebufferObject::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLFramebufferObject :: size () const</target>
        </trans-unit>
        <trans-unit id="993387bd91c22f8db172834d219866c391ee5377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLPaintDevice::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QOpenGLPaintDevice :: size () const</target>
        </trans-unit>
        <trans-unit id="bf884c519c9ea97b34d1b041e87df01fd126a2d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize::sizePixels(int</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize :: sizePixels (int</target>
        </trans-unit>
        <trans-unit id="2e5c6e320caa6ecd563445bb143a6d2b81449f6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize::sizePoints() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPageSize :: sizePoints () const</target>
        </trans-unit>
        <trans-unit id="4ddb9e0d376959e8ea980bb796abc6094c6fbd6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPdfDocumentRenderOptions::scaledSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPdfDocumentRenderOptions::scaledSize() const</target>
        </trans-unit>
        <trans-unit id="be7d83e85f549db546d30478438934f8bd15d768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPixmap::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QPixmap :: size () const</target>
        </trans-unit>
        <trans-unit id="6d7a0a5e08232f9e80d0b4fb0f51bdd9ce3f84b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickView::initialSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickView :: initialSize () const</target>
        </trans-unit>
        <trans-unit id="f981f22c004714d2ef454b2f6a27bc0b0914258a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWidget::initialSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWidget :: initialSize () const</target>
        </trans-unit>
        <trans-unit id="8478ee61668b65ca4f58d0cdc3f5a66b8da0eec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWindow::renderTargetSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickWindow :: renderTargetSize () const</target>
        </trans-unit>
        <trans-unit id="5d63aa4b2eaa71da4edb75628ea95021222d75c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QRect::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QRect :: size () const</target>
        </trans-unit>
        <trans-unit id="4fd852074c9f6cfe1666350dc427c916a55b9ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSizeF::toSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSizeF :: toSize () const</target>
        </trans-unit>
        <trans-unit id="c5ce9be2ba99bc8295ebacb08b2a8a2f2ddb034e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStandardItem::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize QStandardItem&lt;/a&gt; :: sizeHint () const</target>
        </trans-unit>
        <trans-unit id="1ecb1cf5612af857733f9da2ddb431f632c1e8b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionButton::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionButton :: iconSize</target>
        </trans-unit>
        <trans-unit id="929c8853455da27ee5588d3f76527a10822332be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionComboBox::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionComboBox :: iconSize</target>
        </trans-unit>
        <trans-unit id="6002f04e4ac1a205d2476ff7b5a730c664d5a41c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab :: iconSize</target>
        </trans-unit>
        <trans-unit id="090e3b75321ac0f1807cbc2c84ad9850c41ddb23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab::leftButtonSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab :: leftButtonSize</target>
        </trans-unit>
        <trans-unit id="1297c9a21a295fd12b71ad9f2fd04e11d526c44e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab::rightButtonSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTab :: rightButtonSize</target>
        </trans-unit>
        <trans-unit id="4a75f339d502e75a3dfffd4b17b10346322ac35b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame::leftCornerWidgetSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame :: leftCornerWidgetSize</target>
        </trans-unit>
        <trans-unit id="77ee7b654de4b2066c81f034a0806db25a3d3705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame::rightCornerWidgetSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame :: rightCornerWidgetSize</target>
        </trans-unit>
        <trans-unit id="aa9db39b639ba31837646148b27d801559fe3cbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame::tabBarSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionTabWidgetFrame :: tabBarSize</target>
        </trans-unit>
        <trans-unit id="43e4d40185fbbb077a0070ffc9eb1e3fec365821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionToolButton::iconSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionToolButton :: iconSize</target>
        </trans-unit>
        <trans-unit id="f118aae79aed5f636a4a89d294084ffb97da4282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionViewItem::decorationSize</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyleOptionViewItem :: decorationSize</target>
        </trans-unit>
        <trans-unit id="e063149677b0f603f4da57ccf9c4c810ccf59e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSvgRenderer::defaultSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSvgRenderer :: defaultSize () const</target>
        </trans-unit>
        <trans-unit id="1dfbcbfda57fce484e47a9bb361cd5c1f2972ea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTableWidgetItem::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTableWidgetItem :: sizeHint () const</target>
        </trans-unit>
        <trans-unit id="2f096d2cf1f9bcc4b81c20d4004200177faac4ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTreeWidgetItem::sizeHint(int</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QTreeWidgetItem :: sizeHint (int</target>
        </trans-unit>
        <trans-unit id="c99d1e5bfe00b2c2b679a643c08192ecb683f207" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVariant::toSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVariant :: toSize () const</target>
        </trans-unit>
        <trans-unit id="d75dd210853dcd4e81911107908a7f4aabb1f4a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoEncoderSettings::resolution() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoEncoderSettings :: resolution () const</target>
        </trans-unit>
        <trans-unit id="12a17b06599a3cf93d30f1fa3a2004010edf761e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoFrame::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoFrame :: size () const</target>
        </trans-unit>
        <trans-unit id="040363761d7c5c600909e9b1d2dc69db426108a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat::frameSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat :: frameSize () const</target>
        </trans-unit>
        <trans-unit id="f73ae2c6aa6e0fc4837dc9f265943ef4556476f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat::pixelAspectRatio() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat :: pixelAspectRatio () const</target>
        </trans-unit>
        <trans-unit id="9a4aef78ac9e72740ff7b92a22cd7b43ee364a10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat::sizeHint() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoSurfaceFormat :: sizeHint () const</target>
        </trans-unit>
        <trans-unit id="5f1b38c4c6b7804fedde69341da36a934b2d8b83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVulkanWindow::swapChainImageSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVulkanWindow :: swapChainImageSize () const</target>
        </trans-unit>
        <trans-unit id="6ccd53619f0f7b2b34f1606b1a388a836e34dac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandBufferRef::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandBufferRef :: size () const</target>
        </trans-unit>
        <trans-unit id="6f5ec228e64614eb84f4c9909ad9ca64e45a95e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandOutputMode::size() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandOutputMode :: size () const</target>
        </trans-unit>
        <trans-unit id="0b5efc0ea2a67cbf7f25d5e9ed159a2a944d88e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevel::sizeForResize(const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevel :: sizeForResize (const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4d7f9ecac689527d99c8c38e8926e7279887fb4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevelV6::sizeForResize(const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWaylandXdgToplevelV6 :: sizeForResize (const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6b4d01007d42a69df7960350bc02d63ad4c4a0c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::baseSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: baseSize () const</target>
        </trans-unit>
        <trans-unit id="fe1de23f560764a8b81feca92c07f610bc2e15b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::maximumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: maximumSize () const</target>
        </trans-unit>
        <trans-unit id="278fb3b4b742d3c2c407e0211e612c294c968de3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::minimumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: minimumSize () const</target>
        </trans-unit>
        <trans-unit id="bbe24f89705690740668717565b308f6682c671a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow::sizeIncrement() const</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QWindow :: sizeIncrement () const</target>
        </trans-unit>
        <trans-unit id="f9243d9ff4d6db28876b93493dbfc82a3564d859" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; ScaledPixmapArgument::size</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; ScaledPixmapArgument :: size</target>
        </trans-unit>
        <trans-unit id="53327226c6a73e50f6619e08846761292d32b5bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; objects can be streamed as well as compared.</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; 객체를 스트리밍하고 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad18a0517cd05caca4d05f672effca91685f2e73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="ddd25b9597483d4f8ea752381bd7ad6980b279d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; , &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24a1977f05561317327e4eda732686fde9de2203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator*=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp; QSize :: 연산자 * = ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8d59bdca33250ddac3defa13d62557c0a788567" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator+=(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp; QSize :: 연산자 + = (const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d6a2783af75f1679d0f347848553e35a779b94b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator-=(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp; QSize :: 연산자-= (const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4f14f146c34ab8de572e8cd645b2dab222afe79a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;QSize::operator/=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp; QSize :: 연산자 / = ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c802d602270a6ed698a542d187ede4c50e6631a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::boundedTo(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: boundedTo (const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="aff17287b65f1b6807071401423a819a53e9327f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::expandedTo(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: expandedTo (const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc0471be5baa06b4e6c8cee3202eb5f4f982188f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::grownBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::grownBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a59afdf08a9925ffe2656b8e9c931c7ac199dde1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::scaled(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: 확장 (const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5364b4991598e9e64be22f71b319f656b9f2528e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::scaled(int</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: 확장 (int</target>
        </trans-unit>
        <trans-unit id="544e44d8aeea517d2f14363f6e95ef5e5b73c9dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::shrunkBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::shrunkBy(&lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e567a92bcdf7c888462be9c530f177e2918748af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; QSize :: transposed () const</target>
        </trans-unit>
        <trans-unit id="12ef3371887c9560e2109dfa998451b5d4490a2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QFontMetricsF::size(int</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QFontMetricsF :: size (int</target>
        </trans-unit>
        <trans-unit id="cbf75f605dfa85f14f4ea2df59c7c0c6738e45cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::effectiveSizeHint(&lt;a href=&quot;qt#SizeHint-enum&quot;&gt;Qt::SizeHint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: effectiveSizeHint ( &lt;a href=&quot;qt#SizeHint-enum&quot;&gt;Qt :: SizeHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ff99b2445f8ab9594105ef8d5a671b4549868b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::maximumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: maximumSize () const</target>
        </trans-unit>
        <trans-unit id="dc4261ae31f5f79b1ea88086826c82ea22d6773b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::minimumSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: minimumSize () const</target>
        </trans-unit>
        <trans-unit id="f426e6670b940e8f1a1a0f69662f8fdec1a4b61f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::preferredSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: preferredSize () const</target>
        </trans-unit>
        <trans-unit id="132e8702fe77eedcfec7d07f46c14f68e9e8af24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent::newSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent :: newSize () const</target>
        </trans-unit>
        <trans-unit id="0fa162cd01112a0c08307f00eb753fa1880a20d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent::oldSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsSceneResizeEvent :: oldSize () const</target>
        </trans-unit>
        <trans-unit id="020588c59b9225144488baf3531e0e55136765bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize::definitionSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize :: definitionSize () const</target>
        </trans-unit>
        <trans-unit id="e504ca05aea062a68396946a9c5b3f1f0245202e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize::size(&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize::Unit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPageSize :: size ( &lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize :: 단위&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b618d85aa2def6e8936d653f0276c79575d3e6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPagedPaintDevice::pageSizeMM() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QPagedPaintDevice :: pageSizeMM () const</target>
        </trans-unit>
        <trans-unit id="b3b865e9810672d6779334acd903715a58489dda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QQuickItem::size() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QQuickItem :: size () const</target>
        </trans-unit>
        <trans-unit id="dda0f3dcde3e1760a9dc371eba2fcf1fdaab7940" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QRectF::size() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QRectF :: size () const</target>
        </trans-unit>
        <trans-unit id="f5039348eb0883ae0ffa41b98c981616e063cdef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QScrollPrepareEvent::viewportSize() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QScrollPrepareEvent :: viewportSize () const</target>
        </trans-unit>
        <trans-unit id="338b838fafb30eae141a6117a8ab1818f3cc0eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QStaticText::size() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QStaticText :: size () const</target>
        </trans-unit>
        <trans-unit id="0bd27709c81b8fbb777da201cfc353a321eb5d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QVariant::toSizeF() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QVariant :: toSizeF () const</target>
        </trans-unit>
        <trans-unit id="15aa181df0fd2ffd29a2aa6beb3925bec6707c37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; TouchPoint::ellipseDiameters() const</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; TouchPoint :: ellipseDiameters () const</target>
        </trans-unit>
        <trans-unit id="972c4b95384474492aa78baeb6ffaad968e4008b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; objects can be streamed as well as compared.</source>
          <target state="translated">&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; 객체를 스트리밍하고 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8f23e2bd7d9134d0be1ed2e8d1fe2e16a94cfab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator*=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp; QSizeF :: 연산자 * = ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ddd32f08b31dc5a5d3a4e252ec5abd7f139a306" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator+=(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp; QSizeF :: 연산자 + = (const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f7f2574d45f43133787491b5264296e248fb0974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator-=(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp; QSizeF :: 연산자-= (const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="922b013a249a2a227ac793579a08f9fb8ba8f401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;QSizeF::operator/=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp; QSizeF :: 연산자 / = ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c74e89fc1d54e35b3ec427edbca825fdf3d66a0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::boundedTo(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: boundedTo (const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="719d809f1647c9c4a9bbdbf6732f10c01128500a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::expandedTo(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: expandedTo (const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a3629726969de28c4f1e3da361c7ce01fb44765b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::grownBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::grownBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6f46383dce0f5f5b5fe101373e6b2a99bf7a522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::scaled(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: scaled ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8718aca74ac59200c0e0d9781a4909792c2f98a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::scaled(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: 스케일 (const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="153fc2bc23c573d49fbdd29b584e89ad83879182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::shrunkBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::shrunkBy(&lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4078e03282e7e7693fd5321c65b2f3f8fef54489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; QSizeF :: transposed () const</target>
        </trans-unit>
        <trans-unit id="3ff710ec28ebab36ffbcf86d79f81a18886a8e44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QGraphicsLayoutItem::sizePolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QGraphicsLayoutItem :: sizePolicy () const</target>
        </trans-unit>
        <trans-unit id="c604b01f289a1065b4a8c4277cffd63f8b6efda8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSpacerItem::sizePolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSpacerItem :: sizePolicy () const</target>
        </trans-unit>
        <trans-unit id="b6068d5c84704dbd2f574474f362be2cb8ccabe1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; contains two independent &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt; values and two stretch factors; one describes the widgets's horizontal size policy, and the other describes its vertical size policy. It also contains a flag to indicate whether the height and width of its preferred size are related.</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy&quot;&gt;QSizePolicy&lt;/a&gt; 에는 두 개의 독립적 인 &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Policy&lt;/a&gt; 값과 두 개의 확장 요소가 있습니다. 하나는 위젯의 가로 크기 정책을 설명하고 다른 하나는 세로 크기 정책을 설명합니다. 또한 선호하는 크기의 높이와 너비가 관련되어 있는지 여부를 나타내는 플래그가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfdfb01c964a394fc5192503322a7ed860bcd42b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy::ControlType&lt;/a&gt; QSizePolicy::controlType() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy :: ControlType&lt;/a&gt; QSizePolicy :: controlType () const</target>
        </trans-unit>
        <trans-unit id="32dca606082490a41b65a33ef6b1ab683b217ccf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt; QSizePolicy::horizontalPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Policy&lt;/a&gt; QSizePolicy :: horizontalPolicy () const</target>
        </trans-unit>
        <trans-unit id="805827c71e084cdb8d1c4694c4ffada5d3f1684c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt; QSizePolicy::verticalPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Policy&lt;/a&gt; QSizePolicy :: verticalPolicy () const</target>
        </trans-unit>
        <trans-unit id="cacfd6f254863837d1396f553867fc17ec80a64d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#PolicyFlag-enum&quot;&gt;QSizePolicy::ExpandFlag&lt;/a&gt; is not respected.</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#PolicyFlag-enum&quot;&gt;QSizePolicy :: ExpandFlag&lt;/a&gt; 는 존중되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="91098a3df5c9f78dacf78c0c22a39ec33dfade9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSizePolicy::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; QSizePolicy :: transposed () const</target>
        </trans-unit>
        <trans-unit id="945e0298fb4dcdc9a466260d0c62384a15cb0fd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; (9) provides a vertical or horizontal slider.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; (9)는 수직 또는 수평 슬라이더를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5b1381259e3a6e438c020d452ce883d8b2015f1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; has very few of its own functions; most of the functionality is in &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;. The most useful functions are &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue&lt;/a&gt;() to set the slider directly to some value; &lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;triggerAction&lt;/a&gt;() to simulate the effects of clicking (useful for shortcut keys); &lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;setSingleStep&lt;/a&gt;(), &lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;setPageStep&lt;/a&gt;() to set the steps; and &lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;() and &lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;() to define the range of the scroll bar.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 는 자체 기능이 거의 없습니다. 대부분의 기능은 &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider에&lt;/a&gt; 있습니다. 가장 유용한 함수는 슬라이더를 직접 값으로 설정하는 &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue&lt;/a&gt; ()입니다. 클릭 효과를 시뮬레이트하는 &lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;triggerAction&lt;/a&gt; () (단축키에 유용); 단계를 설정하려면 &lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;setSingleStep&lt;/a&gt; (), &lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;setPageStep&lt;/a&gt; (); 및 &lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;setMinimum&lt;/a&gt; () 및 &lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;setMaximum&lt;/a&gt; ()는 스크롤 바의 범위를 정의한다.</target>
        </trans-unit>
        <trans-unit id="14c78374462543ad255f6b55f455c7f2e0101f63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; inherits a comprehensive set of signals:</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 는 포괄적 인 신호 세트를 상속합니다.</target>
        </trans-unit>
        <trans-unit id="956094ef066e18ba0a06258ebb80deeb059bea89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; only provides integer ranges. Note that although &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; handles very large numbers, it becomes difficult for users to use a slider accurately for very large ranges.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 는 정수 범위 만 제공합니다. &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 는 매우 많은 수를 처리 하지만 사용자가 매우 넓은 범위에서 슬라이더를 정확하게 사용하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="620911fa7851ba5bfcb92ff34577127161ffde24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; provides methods for controlling tickmarks. You can use &lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;setTickPosition&lt;/a&gt;() to indicate where you want the tickmarks to be, &lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;setTickInterval&lt;/a&gt;() to indicate how many of them you want. the currently set tick position and interval can be queried using the &lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;tickPosition&lt;/a&gt;() and &lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt;() functions, respectively.</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 는 눈금을 제어하는 ​​방법을 제공합니다. &lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;setTickPosition&lt;/a&gt; ()을 사용 하여 눈금을 표시 할 위치를 표시하고 &lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;setTickInterval&lt;/a&gt; ()을 사용 하여 원하는 수를 표시 할 수 있습니다 . &lt;a href=&quot;qslider#tickPosition-prop&quot;&gt;tickPosition&lt;/a&gt; () 및 &lt;a href=&quot;qslider#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; () 함수를 각각 사용하여 현재 설정된 틱 위치 및 간격을 쿼리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="be88962681ea749ea68650568cabef915f858b0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; uses &lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; as all &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;s do. We present a table with the members that affect &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 는 모든 &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; 와 마찬가지로 &lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; 를 사용합니다 . &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 에 영향을주는 멤버가있는 테이블을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b91e48772b07631a0ea6edcb925eac97fa474503" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qslider#TickPosition-enum&quot;&gt;QSlider::TickPosition&lt;/a&gt; QStyleOptionSlider::tickPosition</source>
          <target state="translated">&lt;a href=&quot;qslider#TickPosition-enum&quot;&gt;QSlider :: TickPosition&lt;/a&gt; QStyleOptionSlider :: tickPosition</target>
        </trans-unit>
        <trans-unit id="01ad39f4ac83bac7d3966771e4af2e4845870c68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;QSocketNotifier::Type&lt;/a&gt; QSocketNotifier::type() const</source>
          <target state="translated">&lt;a href=&quot;qsocketnotifier#Type-enum&quot;&gt;QSocketNotifier :: Type&lt;/a&gt; QSocketNotifier :: type () const</target>
        </trans-unit>
        <trans-unit id="e71468bd87c07b4dae01425f7ac182512225ee11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; can be sorted by column -1, in which case it returns to the sort order of the underlying source model.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; 은 -1 열로 정렬 될 수 있으며,이 경우 기본 소스 모델의 정렬 순서로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="de48040df2fffefc1f4fd78c8c442a48dbf576ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; can be used for sorting items, filtering out items, or both. The model transforms the structure of a source model by mapping the model indexes it supplies to new indexes, corresponding to different locations, for views to use. This approach allows a given source model to be restructured as far as views are concerned without requiring any transformations on the underlying data, and without duplicating the data in memory.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; 은 항목 정렬, 항목 필터링 또는 둘 다에 사용할 수 있습니다. 모델은 뷰가 사용할 다른 위치에 해당하는 새 모델에 공급하는 모델 색인을 맵핑하여 소스 모델의 구조를 변환합니다. 이 방법을 사용하면 기본 데이터를 변환 할 필요없이 메모리에서 데이터를 복제하지 않고도 뷰가 관련되는 한 지정된 소스 모델을 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02753aa8970763375b0d8e0f51b7fb393fdc4630" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; enables data from a source model to be filtered before being supplied to views, and also allows the contents of a source model to be supplied to views as pre-sorted data.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel을&lt;/a&gt; 사용하면 소스 모델의 데이터를 뷰에 제공하기 전에 필터링 할 수 있으며 소스 모델의 내용을 미리 정렬 된 데이터로 뷰에 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="167aad1cf92b1c0ac75315036f4bd672e8f0d338" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; instances use Qt's built-in qStableSort() function to set up mappings between items in the source model and those in the proxy model, allowing a sorted hierarchy of items to be exposed to views without modifying the structure of the source model. To provide custom sorting behavior, reimplement the &lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan()&lt;/a&gt; function to perform custom comparisons.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; 인스턴스는 Qt의 내장 qStableSort () 함수를 사용하여 소스 모델의 항목과 프록시 모델의 항목 간 맵핑을 설정하여 정렬 된 항목 계층 구조가 소스 모델의 구조를 수정하지 않고보기에 노출되도록합니다. 사용자 지정 정렬 동작을 제공하려면 &lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan ()&lt;/a&gt; 함수를 다시 구현하여 사용자 지정 비교를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="173c066c0e3e07e463c24a515af87f6c91e49d00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; instances use std::stable_sort() function to set up mappings between items in the source model and those in the proxy model, allowing a sorted hierarchy of items to be exposed to views without modifying the structure of the source model. To provide custom sorting behavior, reimplement the &lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan()&lt;/a&gt; function to perform custom comparisons.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; instances use std::stable_sort() function to set up mappings between items in the source model and those in the proxy model, allowing a sorted hierarchy of items to be exposed to views without modifying the structure of the source model. To provide custom sorting behavior, reimplement the &lt;a href=&quot;qsortfilterproxymodel#lessThan&quot;&gt;lessThan()&lt;/a&gt; function to perform custom comparisons.</target>
        </trans-unit>
        <trans-unit id="7e90d898e8feccad1dbde8a9180c944b90609f2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsColumn&quot;&gt;filterAcceptsColumn()&lt;/a&gt; is used to filter specific columns from part of the source model.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsColumn&quot;&gt;filterAcceptsColumn ()&lt;/a&gt; 은 소스 모델의 일부에서 특정 열을 필터링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28ea8e826707ed3dddb88e4afece5572372720d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsRow&quot;&gt;filterAcceptsRow()&lt;/a&gt; is used to filter specific rows from part of the source model.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel#filterAcceptsRow&quot;&gt;filterAcceptsRow ()&lt;/a&gt; 는 소스 모델의 일부에서 특정 행을 필터링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1d2e1b7106cea709197f7bab70bb52252de53035" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsoundeffect#Status-enum&quot;&gt;QSoundEffect::Status&lt;/a&gt; QSoundEffect::status() const</source>
          <target state="translated">&lt;a href=&quot;qsoundeffect#Status-enum&quot;&gt;QSoundEffect :: Status&lt;/a&gt; QSoundEffect :: status () const</target>
        </trans-unit>
        <trans-unit id="ac9f3b2dd4cbcf6272c3f6cbe5f99b364b07c4cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; QAbstractXmlNodeModel::sourceLocation(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; QAbstractXmlNodeModel :: sourceLocation (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2abb90315f0a603f01dbdd951cc15460cc04027e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; instances for which &lt;a href=&quot;qsourcelocation#isNull&quot;&gt;isNull&lt;/a&gt;() returns true are considered equal.</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation&quot;&gt;&lt;/a&gt;&lt;a href=&quot;qsourcelocation#isNull&quot;&gt;isNull&lt;/a&gt; ()이 true를 리턴 하는 QSourceLocation 인스턴스 는 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="65cc54e69fca8d21d9a843b0976614cd79b0a8fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; is a simple value based class that has three properties, &lt;a href=&quot;qsourcelocation#uri&quot;&gt;uri&lt;/a&gt;(), &lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt;(), and &lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt;(), that, taken together, identify a certain point in a resource, e.g., a file or an in-memory document.</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; 은 &lt;a href=&quot;qsourcelocation#uri&quot;&gt;uri&lt;/a&gt; (), &lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt; () 및 &lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt; () 이라는 세 가지 속성을 가진 간단한 값 기반 클래스 로, 리소스 나 파일 등의 리소스에서 특정 지점을 식별합니다.</target>
        </trans-unit>
        <trans-unit id="d0ab70fc0029267279719c2e3f5355ec2a2d5dbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;QSourceLocation::operator=(const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp; QSourceLocation :: operator = (const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="635ed938ed74cdd46ee9d8889d8913a255875455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsourcelocation#line&quot;&gt;line&lt;/a&gt;() and &lt;a href=&quot;qsourcelocation#column&quot;&gt;column&lt;/a&gt;() refer to character counts (not byte counts), and they both start from 1, as opposed to 0.</source>
          <target state="translated">&lt;a href=&quot;qsourcelocation#line&quot;&gt;행&lt;/a&gt; () 및 &lt;a href=&quot;qsourcelocation#column&quot;&gt;열&lt;/a&gt; ()은 바이트 수가 아닌 문자 수를 나타내며 둘 다 0이 아닌 1부터 시작합니다.</target>
        </trans-unit>
        <trans-unit id="938e70dc528f962c7f324ee1eab2edb3faa3f05b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; allows the user to choose a value by clicking the up/down buttons or pressing up/down on the keyboard to increase/decrease the value currently displayed. The user can also type the value in manually. The spin box supports integer values but can be extended to use different strings with &lt;a href=&quot;qspinbox#validate&quot;&gt;validate&lt;/a&gt;(), &lt;a href=&quot;qspinbox#textFromValue&quot;&gt;textFromValue&lt;/a&gt;() and &lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox를&lt;/a&gt; 사용하면 위 / 아래 버튼을 클릭하거나 키보드에서 위 / 아래를 눌러 현재 표시된 값을 증가 / 감소시켜 값을 선택할 수 있습니다. 사용자는 수동으로 값을 입력 할 수도 있습니다. 스핀 상자는 정수 값을 지원하지만 &lt;a href=&quot;qspinbox#validate&quot;&gt;validate&lt;/a&gt; (), &lt;a href=&quot;qspinbox#textFromValue&quot;&gt;textFromValue&lt;/a&gt; () 및 &lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt; () 와 함께 다른 문자열을 사용하도록 확장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fbdf3cd60ac204643193316ad2e1b077e4a268d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; is designed to handle integers and discrete sets of values (e.g., month names); use &lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt; for floating point values.</source>
          <target state="translated">&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; 는 정수 및 이산 값 세트 (예 : 월 이름)를 처리하도록 설계되었습니다. 부동 소수점 값에 &lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9eb6e480e574d111f106f1729d0e2e62e2fcedf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt; supports this with the &lt;a href=&quot;qsplashscreen#showMessage&quot;&gt;showMessage&lt;/a&gt;() function. If you wish to do your own drawing you can get a pointer to the pixmap used in the splash screen with &lt;a href=&quot;qsplashscreen#pixmap&quot;&gt;pixmap&lt;/a&gt;(). Alternatively, you can subclass &lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt; and reimplement &lt;a href=&quot;qsplashscreen#drawContents&quot;&gt;drawContents&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt; 은 &lt;a href=&quot;qsplashscreen#showMessage&quot;&gt;showMessage&lt;/a&gt; () 기능으로 이를 지원 합니다. 당신이 당신의 자신의 그림을하고 싶다면 &lt;a href=&quot;qsplashscreen#pixmap&quot;&gt;pixmap&lt;/a&gt; ()으로 스플래시 화면에서 사용되는 pixmap에 대한 포인터를 얻을 수 있습니다 . 또는 &lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt; 을 서브 클래 싱 하고 &lt;a href=&quot;qsplashscreen#drawContents&quot;&gt;drawContents&lt;/a&gt; ()를 다시 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae0fe18e9809b7d63d1888cb2dbf89c3b984ee8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; *QSplitterHandle::splitter() const</source>
          <target state="translated">&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; * QSplitterHandle :: splitter () const</target>
        </trans-unit>
        <trans-unit id="f0551905556907d38189a2513f62a7dbec1b5e36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; does not use &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;initFrom()&lt;/a&gt; to set up its option; it sets the &lt;code&gt;State_MouseOver&lt;/code&gt; and &lt;code&gt;State_Disabled&lt;/code&gt; flags itself.</source>
          <target state="translated">&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; 는 &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;initFrom ()&lt;/a&gt; 을 사용 하여 옵션을 설정 하지 않습니다 . &lt;code&gt;State_MouseOver&lt;/code&gt; 및 &lt;code&gt;State_Disabled&lt;/code&gt; 플래그 자체를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="84e8e7490ad2f2684075d932de3cc8fffd65e782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; resizes its children dynamically by default. If you would rather have &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; resize the children only at the end of a resize operation, call &lt;a href=&quot;qsplitter#opaqueResize-prop&quot;&gt;setOpaqueResize&lt;/a&gt;(false).</source>
          <target state="translated">&lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; 는 기본적으로 자식의 크기를 동적으로 조정합니다. 크기 조정 조작이 끝날 때만 &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; 가 하위 크기를 조정하도록하려면 &lt;a href=&quot;qsplitter#opaqueResize-prop&quot;&gt;setOpaqueResize&lt;/a&gt; (false)를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f38b0724105a95ad685f4e954515d092485e23a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; *QSplitter::handle(int</source>
          <target state="translated">&lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; * QSplitter :: handle (int</target>
        </trans-unit>
        <trans-unit id="cadbda1d8e44741faa0b9049de4727ea91cd2f01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; is typically what people think about when they think about a splitter. It is the handle that is used to resize the widgets.</source>
          <target state="translated">&lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; 은 일반적으로 사람들이 스플리터에 대해 생각할 때 생각하는 것입니다. 위젯 크기를 조정하는 데 사용되는 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="73e310f7df805337ea589b909612a5b246e9d09b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt; QSqlDatabase::numericalPrecisionPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt; QSqlDatabase :: numericalPrecisionPolicy () const</target>
        </trans-unit>
        <trans-unit id="39757399f03b71a6b52e4a536ff70dbcac768560" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt; QSqlDriver::numericalPrecisionPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt; QSqlDriver :: numericalPrecisionPolicy () const</target>
        </trans-unit>
        <trans-unit id="0f7b54a3d0bd6654b891dcd69e8b0f0d4afb678e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt; QSqlQuery::numericalPrecisionPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt; QSqlQuery :: numericalPrecisionPolicy () const</target>
        </trans-unit>
        <trans-unit id="5926c8fc91ae5bdb86fec1bf294857de2d27a99e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; QSqlTableModel::database() const</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; QSqlTableModel :: database () const</target>
        </trans-unit>
        <trans-unit id="4632d2ee4ff9a123b31758873f96d098caba3352" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; is a value class. Changes made to a database connection via one instance of &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; will affect other instances of &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; that represent the same connection. Use &lt;a href=&quot;qsqldatabase#cloneDatabase&quot;&gt;cloneDatabase&lt;/a&gt;() to create an independent database connection based on an existing one.</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 는 값 클래스입니다. 하나의 &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 인스턴스를 통해 데이터베이스 연결을 변경 하면 동일한 연결을 나타내는 다른 &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 인스턴스에 영향을줍니다 . &lt;a href=&quot;qsqldatabase#cloneDatabase&quot;&gt;cloneDatabase&lt;/a&gt; ()를 사용하여 기존 연결을 기반으로 독립 데이터베이스 연결을 작성 하십시오 .</target>
        </trans-unit>
        <trans-unit id="26c7d90690aede4680a7247868eeb9fec380ed7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; is responsible for loading and managing database driver plugins. When a database is added (see &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;QSqlDatabase::addDatabase&lt;/a&gt;()), the appropriate driver plugin is loaded (using &lt;a href=&quot;qsqldriverplugin&quot;&gt;QSqlDriverPlugin&lt;/a&gt;). &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; relies on the driver plugin to provide interfaces for &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; and &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 는 데이터베이스 드라이버 플러그인을로드하고 관리합니다. 데이터베이스가 추가되면 ( &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;QSqlDatabase :: addDatabase&lt;/a&gt; () 참조) 적절한 드라이버 플러그인이로드됩니다 ( &lt;a href=&quot;qsqldriverplugin&quot;&gt;QSqlDriverPlugin&lt;/a&gt; 사용 ). &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 는 드라이버 플러그인을 사용하여 &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; 및 &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; 에 대한 인터페이스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="6750c3e84dee4386c673e85cd600aeaf98593311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; takes ownership of the</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 는</target>
        </trans-unit>
        <trans-unit id="365fdfb92d8507fc35cb089fbbed37df1f2eea12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt; &amp;amp;QSqlDatabase::operator=(const &lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt; &amp;amp; QSqlDatabase :: operator = (const &lt;a href=&quot;qsqldatabase#QSqlDatabase&quot;&gt;QSqlDatabase&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4f8ea0e430c79ffb460bbf039910d0fd22901ea5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#commit&quot;&gt;commit&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#commit&quot;&gt;commit&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="42cfc60f341c479de9ef02cde9dd7a8b90cea599" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#drivers&quot;&gt;drivers&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#drivers&quot;&gt;drivers&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4339bcdbae6add0ae5b510afc717f0dd6fe982e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#isDriverAvailable&quot;&gt;isDriverAvailable&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#isDriverAvailable&quot;&gt;isDriverAvailable&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="052e6880be1714a6e817eaed38ba3ef28dc4aba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#lastError&quot;&gt;lastError&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#lastError&quot;&gt;lastError&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="92769bca27b647e547b3f0c3963f4d3916440b91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#primaryIndex&quot;&gt;primaryIndex&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#primaryIndex&quot;&gt;primaryIndex&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="81160b97c0da63a62fa4fe0e948af1948e63f664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#record&quot;&gt;record&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#record&quot;&gt;record&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b10b8bb95676f914fbe592f50105ccb0d8606b43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#registerSqlDriver&quot;&gt;registerSqlDriver&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#registerSqlDriver&quot;&gt;registerSqlDriver&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f7606c82bf6531d0b7f7a0b0ab8df69c260b131b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#rollback&quot;&gt;rollback&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#rollback&quot;&gt;rollback&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5f0a90390e9d45e9fe46a13d223f111d507f2075" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#tables&quot;&gt;tables&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#tables&quot;&gt;tables&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="0755f5670f4dff3c4a1dfb64555bf9c4d323665a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldatabase#transaction&quot;&gt;transaction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqldatabase#transaction&quot;&gt;transaction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="31c949735095af4571d4fc8a4b9aef52bccdc5b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *QSqlDatabase::driver() const</source>
          <target state="translated">&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; * QSqlDatabase :: driver () const</target>
        </trans-unit>
        <trans-unit id="0e864db9d05f0d7cd8a66bef244260d2a8273037" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; and &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; are closely connected. When implementing a Qt SQL driver, both of these classes must to be subclassed and the abstract virtual methods in each class must be implemented.</source>
          <target state="translated">&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; 와 &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; 는 밀접하게 연결되어 있습니다. Qt SQL 드라이버를 구현할 때는이 두 클래스를 모두 서브 클래 싱해야하며 각 클래스의 추상 가상 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="3ed60047945e02c8b7dfb893e0443a738087b077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; is an abstract base class which defines the functionality of a SQL database driver. This includes functions such as &lt;a href=&quot;qsqldriver#open&quot;&gt;QSqlDriver::open&lt;/a&gt;() and &lt;a href=&quot;qsqldriver#close&quot;&gt;QSqlDriver::close&lt;/a&gt;(). &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; is responsible for connecting to a database, establish the proper environment, etc. In addition, &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; can create &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; objects appropriate for the particular database API. &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; forwards many of its function calls directly to &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; which provides the concrete implementation.</source>
          <target state="translated">&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; 는 SQL 데이터베이스 드라이버의 기능을 정의하는 추상 기본 클래스입니다. 여기에는 &lt;a href=&quot;qsqldriver#open&quot;&gt;QSqlDriver :: open&lt;/a&gt; () 및 &lt;a href=&quot;qsqldriver#close&quot;&gt;QSqlDriver :: close&lt;/a&gt; () 와 같은 기능이 포함됩니다 . &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; 는 데이터베이스 연결, 적절한 환경 설정 등을 담당합니다. 또한 &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; 는 특정 데이터베이스 API에 적합한 &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 오브젝트를 작성할 수 있습니다 . &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 는 많은 함수 호출을 &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; 로 직접 전달 하여 구체적인 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="580e5a7a0139014a127bf400e6a905612b978eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqldrivercreator&quot;&gt;QSqlDriverCreator&lt;/a&gt;&amp;lt;T&amp;gt; instantiates objects of type T, where T is a &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; subclass.</source>
          <target state="translated">&lt;a href=&quot;qsqldrivercreator&quot;&gt;QSqlDriverCreator&lt;/a&gt; &amp;lt;T&amp;gt;는 T 유형의 오브젝트를 인스턴스화합니다. 여기서 T는 &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; 서브 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c12b2dc0da66eebd9d0b137e8b7d223c748d15ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDatabase::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDatabase :: lastError () const</target>
        </trans-unit>
        <trans-unit id="b3249ac1ea18793e51e96dd78c0073b0f0be7d47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDriver::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlDriver :: lastError () const</target>
        </trans-unit>
        <trans-unit id="58eb3b3cb28b9197d35ee70ae85be88785bdc706" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQuery::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQuery :: lastError () const</target>
        </trans-unit>
        <trans-unit id="bf834951ee4f34d82b89c1faea877917cd1c6d1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQueryModel::lastError() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; QSqlQueryModel :: lastError () const</target>
        </trans-unit>
        <trans-unit id="2d9e82bfea93dc4953d3efceb527eab685fa335a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlerror#ErrorType-enum&quot;&gt;QSqlError::ErrorType&lt;/a&gt; QSqlError::type() const</source>
          <target state="translated">&lt;a href=&quot;qsqlerror#ErrorType-enum&quot;&gt;QSqlError :: ErrorType&lt;/a&gt; QSqlError :: type () const</target>
        </trans-unit>
        <trans-unit id="522e5f0c2b410afdf5dbb9a7324317dba72be272" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord::field(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord :: field (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6eaca2bffdf11742023557833060837ab019973c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord::field(int</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; QSqlRecord :: field (int</target>
        </trans-unit>
        <trans-unit id="7f4a7c7e43349260ff6d2fd7d7b629d41a21c476" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; objects are rarely created explicitly in application code. They are usually accessed indirectly through &lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt;s that already contain a list of fields. For example:</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; 객체는 응용 프로그램 코드에서 명시 적으로 생성되는 경우가 거의 없습니다. 이들은 일반적으로 이미 필드 목록이 포함 된 &lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord를&lt;/a&gt; 통해 간접적으로 액세스 됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="799393b2f6eb4182cf6c33975fc6ddd753847fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; represents the characteristics of a single column in a database table or view, such as the data type and column name. A field also contains the value of the database column, which can be viewed or changed.</source>
          <target state="translated">&lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; 는 데이터베이스 테이블 또는 뷰에서 데이터 유형 및 열 이름과 같은 단일 열의 특성을 나타냅니다. 필드에는 보거나 변경할 수있는 데이터베이스 열의 값도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fca1f5d5a05c18a8746b4cdbf1cbf607686d8485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;QSqlField::operator=(const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp; QSqlField :: operator = (const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d8c624d17cee02e9d9122464589f9e4fd1193f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlfield#RequiredStatus-enum&quot;&gt;QSqlField::RequiredStatus&lt;/a&gt; QSqlField::requiredStatus() const</source>
          <target state="translated">&lt;a href=&quot;qsqlfield#RequiredStatus-enum&quot;&gt;QSqlField :: RequiredStatus&lt;/a&gt; QSqlField :: requiredStatus () const</target>
        </trans-unit>
        <trans-unit id="da0aa372a2591466aca3104a656ae55ab9abacb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlDatabase::primaryIndex(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlDatabase :: primaryIndex (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ab149f907a33dd4cf269987196389ddf086dea42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlTableModel::primaryKey() const</source>
          <target state="translated">&lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; QSqlTableModel :: primaryKey () const</target>
        </trans-unit>
        <trans-unit id="0e16c3fb04a6847ed36ee2c521a6ce86a5b3bf2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;QSqlIndex&lt;/a&gt; &amp;amp;QSqlIndex::operator=(const &lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;QSqlIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;QSqlIndex&lt;/a&gt; &amp;amp; QSqlIndex :: operator = ( &lt;a href=&quot;qsqlindex#QSqlIndex&quot;&gt;상수 QSqlIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a5f54859e64a5dfe8e3aad80f1749a107ee12e2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlDatabase::exec(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlDatabase :: exec (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dd4095b514c21e955cea0046de844895d618e32e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlQueryModel::query() const</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; QSqlQueryModel :: query () const</target>
        </trans-unit>
        <trans-unit id="92a6a467a83e345724451ea46464dd142199f830" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; can execute arbitrary SQL statements, not just &lt;code&gt;SELECT&lt;/code&gt;s. The following example inserts a record into a table using &lt;code&gt;INSERT&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 는 &lt;code&gt;SELECT&lt;/code&gt; 뿐만 아니라 임의의 SQL 문을 실행할 수 있습니다 . 다음 예제는 &lt;code&gt;INSERT&lt;/code&gt; 를 사용하여 테이블에 레코드를 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="e70ed5d0dfc4ab341dd24c8dbf6d7ed0a4f4ada3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; encapsulates the functionality involved in creating, navigating and retrieving data from SQL queries which are executed on a &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;. It can be used to execute DML (data manipulation language) statements, such as &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt;, as well as DDL (data definition language) statements, such as &lt;code&gt;CREATE&lt;/code&gt;&lt;code&gt;TABLE&lt;/code&gt;. It can also be used to execute database-specific commands which are not standard SQL (e.g. &lt;code&gt;SET DATESTYLE=ISO&lt;/code&gt; for PostgreSQL).</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery가&lt;/a&gt; 생성 탐색과에서 실행되는 SQL 쿼리에서 데이터 검색에 관련된 기능 캡슐화 &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase을&lt;/a&gt; . &lt;code&gt;SELECT&lt;/code&gt; , &lt;code&gt;INSERT&lt;/code&gt; , &lt;code&gt;UPDATE&lt;/code&gt; 및 &lt;code&gt;DELETE&lt;/code&gt; 와 같은 DML (데이터 조작 언어) 문과 &lt;code&gt;CREATE&lt;/code&gt; &lt;code&gt;TABLE&lt;/code&gt; 과 같은 DDL (데이터 정의 언어) 문 을 실행하는 데 사용할 수 있습니다 . 표준 SQL이 아닌 데이터베이스 특정 명령을 실행하는 데 사용될 수도 있습니다 (예 : PostgreSQL의 경우 &lt;code&gt;SET DATESTYLE=ISO&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7086d448886f05de11e68dedac467c31a03abb40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; provides access to the result set one record at a time. After the call to &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;exec()&lt;/a&gt;, &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;'s internal pointer is located one position</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 는 한 번에 하나씩 레코드 세트에 대한 액세스를 제공합니다. 호출하면 &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;간부 ()&lt;/a&gt; , &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 의 내부 포인터는 하나의 위치에 위치해</target>
        </trans-unit>
        <trans-unit id="535a4f3d9e20b1bd7c6a2ac2fb69f0f839eb1117" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; supports prepared query execution and the binding of parameter values to placeholders. Some databases don't support these features, so for those, Qt emulates the required functionality. For example, the Oracle and ODBC drivers have proper prepared query support, and Qt makes use of it; but for databases that don't have this support, Qt implements the feature itself, e.g. by replacing placeholders with actual values when a query is executed. Use &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;() to find out how many rows were affected by a non-&lt;code&gt;SELECT&lt;/code&gt; query, and &lt;a href=&quot;qsqlquery#size&quot;&gt;size&lt;/a&gt;() to find how many were retrieved by a &lt;code&gt;SELECT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 는 준비된 쿼리 실행 및 자리 표시 자에 매개 변수 값 바인딩을 지원합니다. 일부 데이터베이스는 이러한 기능을 지원하지 않으므로 Qt는 필요한 기능을 에뮬레이트합니다. 예를 들어, Oracle 및 ODBC 드라이버에는 적절한 준비된 쿼리 지원이 있으며 Qt는이를 사용합니다. 그러나이 지원이없는 데이터베이스의 경우 Qt는 쿼리 자체 실행시 자리 표시자를 실제 값으로 대체하여 기능 자체를 구현합니다. &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt; ()를 사용 하여 비 &lt;code&gt;SELECT&lt;/code&gt; 쿼리에 의해 영향을받는 행 수를 확인 하고 &lt;a href=&quot;qsqlquery#size&quot;&gt;size&lt;/a&gt; ()를 사용하여 &lt;code&gt;SELECT&lt;/code&gt; 에 의해 검색된 행 수를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="ad00eb31356a6286bee78d4a59dc28c4c52b5cb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;QSqlQuery::operator=(const &lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp; QSqlQuery :: operator = (const &lt;a href=&quot;qsqlquery#QSqlQuery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4ed1bf590aa3ca6e8dbb9830d0564d4b541b77a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#first&quot;&gt;first&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#first&quot;&gt;first&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f7972c5dc3ce7da5766435bb68873b9cc0132a28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#last&quot;&gt;last&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#last&quot;&gt;last&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="2c51379ddec59029304ff0d3fbe427156ebac507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#next&quot;&gt;next&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#next&quot;&gt;next&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="cc84dcce8e21593b791db737e187d136b9573439" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#previous&quot;&gt;previous&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#previous&quot;&gt;previous&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4e019d5543b0e77ad14b3830aa4eaca5de8645e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquery#seek&quot;&gt;seek&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#seek&quot;&gt;seek&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="df2b553993da5e1901efcb751c1597a74fd946d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; can also be used to access a database programmatically, without binding it to a view:</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; 을 사용하여 뷰에 바인딩하지 않고도 프로그래밍 방식으로 데이터베이스에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bac268f4374b49e1fcb83a4d8a7d4325db40f76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; is a high-level interface for executing SQL statements and traversing the result set. It is built on top of the lower-level &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; and can be used to provide data to view classes such as &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; 은 SQL 문을 실행하고 결과 세트를 순회하기위한 고급 인터페이스입니다. 이 낮은 레벨의 상단에 구축 &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 과 같은 클래스를 확인하는 데이터를 제공하는데 사용될 수 &lt;a href=&quot;qtableview&quot;&gt;QTableView를&lt;/a&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c344f67dad348cb5c428b26dd203a465e4c52f86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; offers a read-only model based on an SQL query.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; 은 SQL 쿼리를 기반으로하는 읽기 전용 모델을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5dd02ed1eb6bb6c05c73250aa769b5de8fe274c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;, and &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; are used to access databases using model/view conventions.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; , &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 및 &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; 은 모델 / 뷰 규칙을 사용하여 데이터베이스에 액세스하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c2a7ad7fb13111d9a4e7543e720f5315d35c0d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel#data&quot;&gt;data&lt;/a&gt;() to expose SQL data to the QML frontend. For example, the following implementation returns data for the given model index:</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel#data&quot;&gt;&lt;/a&gt;QML 프론트 엔드에 SQL 데이터를 노출시키기 위해 data (). 예를 들어 다음 구현은 주어진 모델 인덱스에 대한 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb83808560f0ef25e5b3f9775d935a5efd00c33c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel#lastError&quot;&gt;lastError&lt;/a&gt;() can be used to retrieve verbose information if there was an error setting the query.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel#lastError&quot;&gt;&lt;/a&gt;쿼리 설정 오류가있는 경우 lastError ()를 사용하여 자세한 정보를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="176b42ac91fc936206a766c426fd67cfe53cc7ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlquerymodel#query&quot;&gt;query&lt;/a&gt;() returns the new query.</source>
          <target state="translated">&lt;a href=&quot;qsqlquerymodel#query&quot;&gt;query&lt;/a&gt; ()는 새 쿼리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="65325a8955e02265838fb91bcbfb8c53c1c56a7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlDatabase::record(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlDatabase :: record (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7f5e2ff74d179bc41527d58be31cea773831b2c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQuery::record() const</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQuery :: record () const</target>
        </trans-unit>
        <trans-unit id="3913e68b671d27a2ad940bd5fab552c6be09d3b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel::record() const</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel :: record () const</target>
        </trans-unit>
        <trans-unit id="3c09c9afb1656b988479a53e2c6ceda98d2f6282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel::record(int</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlQueryModel :: 레코드 (int</target>
        </trans-unit>
        <trans-unit id="4ad6588f486c9e1856cea1d9c02864c5d375a38e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel::record() const</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel :: record () const</target>
        </trans-unit>
        <trans-unit id="2158691330d54a278c3122402f6f34213496cf8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel::record(int</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlTableModel :: record (INT</target>
        </trans-unit>
        <trans-unit id="56b1965d12ca2a4d199e6988041cb03526894b9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; is &lt;a href=&quot;implicit-sharing&quot;&gt;implicitly shared&lt;/a&gt;. This means you can make copies of a record in &lt;a href=&quot;containers#constant-time&quot;&gt;constant time&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; 는 &lt;a href=&quot;implicit-sharing&quot;&gt;내재적으로 공유&lt;/a&gt; 됩니다. 즉, &lt;a href=&quot;containers#constant-time&quot;&gt;일정한 시간에&lt;/a&gt; 레코드를 복사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2329c3229d49d4a45bd69ba18dfca67203185477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;QSqlRecord::operator=(const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp; QSqlRecord :: operator = (const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="135eceebcd1caa40e3c79616dba63cb700a62fa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlRecord::keyValues(const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; QSqlRecord :: keyValues ​​(const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5e097749c9707e0ee04421d902929dee974bd45a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt; QSqlRelationalTableModel::relation(int</source>
          <target state="translated">&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt; QSqlRelationalTableModel :: relation (int</target>
        </trans-unit>
        <trans-unit id="4ec43bce0f6acb50230811b385d5b9d98887a7a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt; is a helper class for &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;. See &lt;a href=&quot;qsqlrelationaltablemodel#setRelation&quot;&gt;QSqlRelationalTableModel::setRelation&lt;/a&gt;() and &lt;a href=&quot;qsqlrelationaltablemodel#relation&quot;&gt;QSqlRelationalTableModel::relation&lt;/a&gt;() for details.</source>
          <target state="translated">&lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation을&lt;/a&gt; 위한 도우미 클래스입니다 &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; . 자세한 내용은 &lt;a href=&quot;qsqlrelationaltablemodel#setRelation&quot;&gt;QSqlRelationalTableModel :: setRelation&lt;/a&gt; () 및 &lt;a href=&quot;qsqlrelationaltablemodel#relation&quot;&gt;QSqlRelationalTableModel :: relation&lt;/a&gt; ()을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2155678b149c2062a3f064aa4c537acfa7481891" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; acts like &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;, but allows columns to be set as foreign keys into other database tables.</source>
          <target state="translated">&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel는&lt;/a&gt; 같은 역할을 &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 하지만, 열이 다른 데이터베이스 테이블에 외래 키로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7c5e5eb9c2967e5e230f4fc71cbd8d2d9a780c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; extends &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; to provide support for foreign keys. A foreign key is a 1-to-1 mapping between a field in one table and the primary key field of another table. For example, if a &lt;code&gt;book&lt;/code&gt; table has a field called &lt;code&gt;authorid&lt;/code&gt; that refers to the author table's &lt;code&gt;id&lt;/code&gt; field, we say that &lt;code&gt;authorid&lt;/code&gt; is a foreign key.</source>
          <target state="translated">&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; 은 외래 키 지원을 제공하기 위해 &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 을 확장 합니다. 외래 키는 한 테이블의 필드와 다른 테이블의 기본 키 필드 사이의 일대일 매핑입니다. 예를 들어, &lt;code&gt;book&lt;/code&gt; 테이블 에 저자 테이블의 &lt;code&gt;id&lt;/code&gt; 필드 를 나타내는 &lt;code&gt;authorid&lt;/code&gt; 라는 필드가 &lt;code&gt;authorid&lt;/code&gt; 는 외래 키 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="96b0a3bcd39ccf9634ae429f682574c3d7ee5560" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; is an abstract base class which defines the functionality of a SQL database query. This includes statements such as &lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;ALTER&lt;/code&gt;&lt;code&gt;TABLE&lt;/code&gt;. &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; contains functions such as QSqlResult::next() and QSqlResult::value(). &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; is responsible for sending queries to the database, returning result data, etc. &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; forwards many of its function calls directly to &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; which provides the concrete implementation.</source>
          <target state="translated">&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; 는 SQL 데이터베이스 쿼리의 기능을 정의하는 추상 기본 클래스입니다. 여기에는 &lt;code&gt;SELECT&lt;/code&gt; , &lt;code&gt;UPDATE&lt;/code&gt; 및 &lt;code&gt;ALTER&lt;/code&gt; &lt;code&gt;TABLE&lt;/code&gt; 과 같은 문이 포함됩니다 . &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; 에는 QSqlResult :: next () 및 QSqlResult :: value ()와 같은 함수가 포함됩니다. &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; 는 데이터베이스로 쿼리를 전송하고 결과 데이터를 반환합니다. &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 는 많은 함수 호출을 &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; 로 직접 전달 하여 구체적으로 구현합니다.</target>
        </trans-unit>
        <trans-unit id="4a5e23b0da9a19a313a99c60287eb5a22b1f7ce2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; can also be used to access a database programmatically, without binding it to a view:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 을 사용하여 뷰에 바인딩하지 않고 프로그래밍 방식으로 데이터베이스에 액세스 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e90cefa034a845f0f9a9ceec73fd97e14b5bb573" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; is a high-level alternative to &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; for navigating and modifying individual SQL tables. It typically results in less code and requires no knowledge of SQL syntax.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 은 개별 SQL 테이블을 탐색하고 수정하기위한 &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery의&lt;/a&gt; 고급 대안 입니다. 일반적으로 코드가 적고 SQL 구문에 대한 지식이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="174cd5066dced9dd446e9624b0ea7a1d2a14e206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; is a high-level interface for reading and writing database records from a single table. It is built on top of the lower-level &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; and can be used to provide data to view classes such as &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 은 단일 테이블에서 데이터베이스 레코드를 읽고 쓰는 데 사용되는 고급 인터페이스입니다. 이 낮은 레벨의 상단에 구축 &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 과 같은 클래스를 확인하는 데이터를 제공하는데 사용될 수 &lt;a href=&quot;qtableview&quot;&gt;QTableView를&lt;/a&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8c67389b7016abaea4041472ef85d3328f8e1eb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; is optimized to operate on a single table at a time. If you need a read-write model that operates on an arbitrary result set, you can subclass &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; and reimplement &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData()&lt;/a&gt; to make it read-write. The following two functions make fields 1 and 2 of a query model editable:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 은 한 번에 단일 테이블에서 작동하도록 최적화되었습니다. 임의의 결과 세트에서 작동하는 읽기 / 쓰기 모델이 필요한 경우 &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; 을 서브 클래 싱 하고 &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags ()&lt;/a&gt; 및 &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData ()&lt;/a&gt; 를 다시 작성하여 읽기 / 쓰기로 만들 수 있습니다. 다음 두 함수는 쿼리 모델의 필드 1과 2를 편집 가능하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="73e3bcb4fc8249eda4290557b0372dfb735133ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; offers a read-write model that works on a single SQL table at a time.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 은 한 번에 하나의 SQL 테이블에서 작동하는 읽기-쓰기 모델을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f64090d0f8342ae7186387e4a75da6589f3b6b6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; provides no direct support for foreign keys. Use the &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; and &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; if you want to resolve foreign keys.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; 은 외래 키를 직접 지원하지 않습니다. 외래 키를 해결 하려면 &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; 및 &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fd84e58d658e006228e8d8a9177f359333f65725" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel::EditStrategy&lt;/a&gt; QSqlTableModel::editStrategy() const</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel :: EditStrategy&lt;/a&gt; QSqlTableModel :: editStrategy () const</target>
        </trans-unit>
        <trans-unit id="95fdc2d0980a83f825126265cc149b35f1ac5902" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel::OnFieldChange&lt;/a&gt; seems to deliver the promise that you never need to call submitAll() explicitly. There are two pitfalls, though:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;QSqlTableModel :: OnFieldChange&lt;/a&gt; 는 submitAll ()을 명시 적으로 호출 할 필요가 없다는 약속을 전달하는 것 같습니다. 그러나 두 가지 함정이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7da0b3376398e679a757852522a96463cd0fa89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#KeyAlgorithm-enum&quot;&gt;QSsl::KeyAlgorithm&lt;/a&gt; QSslKey::algorithm() const</source>
          <target state="translated">&lt;a href=&quot;qssl#KeyAlgorithm-enum&quot;&gt;QSsl :: KeyAlgorithm&lt;/a&gt; QSslKey :: algorithm () const</target>
        </trans-unit>
        <trans-unit id="550198c6b4b70027165a006956d370a800dd6e93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#KeyType-enum&quot;&gt;QSsl::KeyType&lt;/a&gt; QSslKey::type() const</source>
          <target state="translated">&lt;a href=&quot;qssl#KeyType-enum&quot;&gt;QSsl :: KeyType&lt;/a&gt; QSslKey :: type () const</target>
        </trans-unit>
        <trans-unit id="ab7cef9bfb32d9351a580859ebd75eda8dd45922" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QDtls::sessionProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QDtls :: sessionProtocol () const</target>
        </trans-unit>
        <trans-unit id="9759783da490b9ac87aa35b97b8d0a96531090ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslCipher::protocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslCipher :: protocol () const</target>
        </trans-unit>
        <trans-unit id="53764d858ff00cb4347e7d48b35cf8eb39443dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslConfiguration::protocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslConfiguration :: protocol () const</target>
        </trans-unit>
        <trans-unit id="fd8b6e0a4bc77cf42030724a865b3bb464438986" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslConfiguration::sessionProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslConfiguration :: sessionProtocol () const</target>
        </trans-unit>
        <trans-unit id="b55767447d1cb81270fd22b9eca38723f51a3654" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslSocket::protocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslSocket :: protocol () const</target>
        </trans-unit>
        <trans-unit id="d1d4b12f201d9dcb77e96054b724af7684f584d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt; QSslSocket::sessionProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt; QSslSocket :: sessionProtocol () const</target>
        </trans-unit>
        <trans-unit id="1583b96cfb08e9021c462f7bfb476d7985c783bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QOcspResponse::subject() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QOcspResponse :: subject () const</target>
        </trans-unit>
        <trans-unit id="d13180432c29f20aa2cc3cad066b8e0be535fa8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration::localCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration :: localCertificate () const</target>
        </trans-unit>
        <trans-unit id="4cadfa7ab7ce3fef1e0710bbc1beb27354f471b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration::peerCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslConfiguration :: peerCertificate () const</target>
        </trans-unit>
        <trans-unit id="63f018111f20a0bd83cf643772e427f57cba8f12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslError::certificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslError :: certificate () const</target>
        </trans-unit>
        <trans-unit id="4f889d82e9795ea46682979b98faad27b5ee07bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket::localCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket :: localCertificate () const</target>
        </trans-unit>
        <trans-unit id="06c4bf757ba22fc7568771ef6aecac18ec931006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket::peerCertificate() const</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; QSslSocket :: peerCertificate () const</target>
        </trans-unit>
        <trans-unit id="64ebf5bf26afcda241df97cec318a477e8737219" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; stores an X509 certificate, and is commonly used to verify the identity and store information about the local host, a remotely connected peer, or a trusted third party Certificate Authority.</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; 는 X509 인증서를 저장하며 일반적으로 로컬 호스트, 원격으로 연결된 피어 또는 신뢰할 수있는 타사 인증 기관에 대한 ID를 확인하고 정보를 저장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="af05f36a752c6ec3ada3a1480a55dc16bb915861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;QSslCertificate::operator=(const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp; QSslCertificate :: operator = (const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSsl 인증서&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7fb4642572561d60220aa0180b01851cd5c2e1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificateextension&quot;&gt;QSslCertificateExtension&lt;/a&gt; provides access to an extension stored in an X509 certificate. The information available depends on the type of extension being accessed.</source>
          <target state="translated">&lt;a href=&quot;qsslcertificateextension&quot;&gt;QSslCertificateExtension&lt;/a&gt; 은 X509 인증서에 저장된 확장에 대한 액세스를 제공합니다. 사용 가능한 정보는 액세스하는 확장 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6c92cf48f63e553e70e9ee7012b9e2f9bc5ceef5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt; &amp;amp;QSslCertificateExtension::operator=(const &lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt; &amp;amp; QSslCertificateExtension :: operator = ( &lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;상수 QSslCertificateExtension&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9e6ae00c5c1062f51066f72b31419fb50c0f7952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QDtls::sessionCipher() const</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QDtls :: sessionCipher () const</target>
        </trans-unit>
        <trans-unit id="8a5549519c5e13bd890cf4217c83b04ad6cfccb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslConfiguration::sessionCipher() const</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslConfiguration :: sessionCipher () const</target>
        </trans-unit>
        <trans-unit id="91a97b2b3e41e69a52d240fd9d3a83d92e68bafb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslSocket::sessionCipher() const</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; QSslSocket :: sessionCipher () const</target>
        </trans-unit>
        <trans-unit id="22442ff9cf136ad8ff195996dd6f289b28dd48bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; stores information about one cryptographic cipher. It is most commonly used with &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;, either for configuring which ciphers the socket can use, or for displaying the socket's ciphers to the user.</source>
          <target state="translated">&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; 는 하나의 암호화 암호에 대한 정보를 저장합니다. 소켓이 사용할 수있는 암호를 구성하거나 소켓 암호를 사용자에게 표시하기 위해 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 과 함께 가장 일반적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="79e0848e96ebb253a179813a3d5fdef0a7921501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;QSslCipher::operator=(const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp; QSslCipher :: operator = (const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="33a283c4101c860af0643bd0178d431fadd624a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QDtls::dtlsConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QDtls :: dtlsConfiguration () const</target>
        </trans-unit>
        <trans-unit id="cecef9e779bd5e1b783667692205ffcf28a00c3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkReply::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkReply :: sslConfiguration () const</target>
        </trans-unit>
        <trans-unit id="a39b380f564d9879e78f3c62393ea5b360f1e3e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkRequest::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QNetworkRequest :: sslConfiguration () const</target>
        </trans-unit>
        <trans-unit id="49e5ca5744f6caff0e76d84c6905de07d18a1e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QSslSocket::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QSslSocket :: sslConfiguration () const</target>
        </trans-unit>
        <trans-unit id="2d3342184e9e1c6c54a7b0f0d6a0b37710ebd0a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocket::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocket :: sslConfiguration () const</target>
        </trans-unit>
        <trans-unit id="155a00ace7e7dd7b2fdbd536ae4d992f481af0ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocketServer::sslConfiguration() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; QWebSocketServer :: sslConfiguration () const</target>
        </trans-unit>
        <trans-unit id="f18404303c4d415cbef77e0824779628e903ab5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; can be used with &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; and the Network Access API.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; 은 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 및 네트워크 액세스 API와 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfb6965f33f6bb89e119489e21e47f0c7d609199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; is used by Qt networking classes to relay information about an open SSL connection and to allow the application to control certain features of that connection.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;Qtsl&lt;/a&gt; 클래스는 QSslConfiguration 을 사용하여 열린 SSL 연결에 대한 정보를 중계하고 애플리케이션이 해당 연결의 특정 기능을 제어 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="386cf8ba99387936207f6bbee5e918a070b248bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; provides functions for setting the ordered list of ciphers from which the handshake phase will eventually select the session cipher. This ordered list must be in place before the handshake phase begins.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; 은 핸드 쉐이크 단계가 결국 세션 암호를 선택할 순서화 된 암호 목록을 설정하는 기능을 제공합니다. 이 순서 목록은 핸드 셰이크 단계가 시작되기 전에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8c4cc661a756b5118171e42b0b4e3a95a2548356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration#NextProtocolNegotiationStatus-enum&quot;&gt;QSslConfiguration::NextProtocolNegotiationStatus&lt;/a&gt; QSslConfiguration::nextProtocolNegotiationStatus() const</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration#NextProtocolNegotiationStatus-enum&quot;&gt;QSslConfiguration :: NextProtocolNegotiationStatus&lt;/a&gt; QSslConfiguration :: nextProtocolNegotiationStatus () const</target>
        </trans-unit>
        <trans-unit id="eb430a24e86811f156fc36e755e40a8f632d8bd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;QSslConfiguration::operator=(const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp; QSslConfiguration :: operator = (const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="efdfb1c50bf66fd381fc65095440b6dae5eacd6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; QSslConfiguration::diffieHellmanParameters() const</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; QSslConfiguration :: diffieHellmanParameters () const</target>
        </trans-unit>
        <trans-unit id="5ef2123faf9afb04ba67a2a8bc4679ff169017e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; provides an interface for setting Diffie-Hellman parameters to servers based on &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; 는 Diffie-Hellman 매개 변수를 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 기반 서버로 설정하기위한 인터페이스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="98753eb091897eb29c425cd83b74d8e6d500ce50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters#Error-enum&quot;&gt;QSslDiffieHellmanParameters::Error&lt;/a&gt; QSslDiffieHellmanParameters::error() const</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters#Error-enum&quot;&gt;QSslDiffieHellmanParameters :: Error&lt;/a&gt; QSslDiffieHellmanParameters :: error () const</target>
        </trans-unit>
        <trans-unit id="3dc1f28e49b1b6131f78a685590a76a42ef424cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;QSslDiffieHellmanParameters::operator=(&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp; QSslDiffieHellmanParameters :: operator = ( &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="878a9717446d93d48a3d14c4503a1f04fc4d8d23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;QSslDiffieHellmanParameters::operator=(const &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp; QSslDiffieHellmanParameters :: operator = (const &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f58377e4e19cf22688f9a4073ff4ebfe26d85eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslellipticcurve&quot;&gt;QSslEllipticCurve&lt;/a&gt; instances can be compared for equality and can be used as keys in &lt;a href=&quot;qhash-proxy&quot;&gt;QHash&lt;/a&gt; and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;. They cannot be used as key in a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsslellipticcurve&quot;&gt;QSslEllipticCurve&lt;/a&gt; 인스턴스는 동등성을 비교할 수 있으며 &lt;a href=&quot;qhash-proxy&quot;&gt;QHash&lt;/a&gt; 및 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 에서 키로 사용될 수 있습니다 . &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 에서는 키로 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="bb3b88086db26e915362bc14be78eb85f37fc1be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslerror&quot;&gt;QSslError&lt;/a&gt; provides a simple API for managing errors during &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;'s SSL handshake.</source>
          <target state="translated">&lt;a href=&quot;qsslerror&quot;&gt;QSslError&lt;/a&gt; 는 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 의 SSL 핸드 셰이크 중에 오류를 관리하기위한 간단한 API를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5978ddabd746b96f7805e8de06779de6c5ef733c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;QSslError::operator=(const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp; QSslError :: operator = (const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="238eb5eed2616de710be6de841fdfea0ce0d6070" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslerror#SslError-enum&quot;&gt;QSslError::SslError&lt;/a&gt; QSslError::error() const</source>
          <target state="translated">&lt;a href=&quot;qsslerror#SslError-enum&quot;&gt;QSslError :: SslError&lt;/a&gt; QSslError :: error () const</target>
        </trans-unit>
        <trans-unit id="4aed1167ce3152669697329be12ec85b12c1f1be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslCertificate::publicKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslCertificate :: publicKey () const</target>
        </trans-unit>
        <trans-unit id="508b0a418cd6fb34d432f01ef96d61d400e793d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration::ephemeralServerKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration :: ephemeralServerKey () const</target>
        </trans-unit>
        <trans-unit id="935f19d91d90548d52f4a88a01ebf514e59382c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration::privateKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslConfiguration :: privateKey () const</target>
        </trans-unit>
        <trans-unit id="edb7c48a815adeaec97cb3663f2139613b3873b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslSocket::privateKey() const</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; QSslSocket :: privateKey () const</target>
        </trans-unit>
        <trans-unit id="302afa7aaa23a13aecbb2de984cca5a3a1e7da55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; provides a simple API for managing keys.</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; 는 키 관리를위한 간단한 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9d64242561d8ec8f02985c1017b6f8ef2a03f0f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; will take ownership for this key and you must not free the key using the native library.</source>
          <target state="translated">&lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; 는이 키의 소유권을 가지므로 기본 라이브러리를 사용하여 키를 해제해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="8c57e2243129455628623d742e901296803812f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;QSslKey::operator=(const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp; QSslKey :: operator = (const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3258d579f5795935a8883bb38d370824177291b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;QSslPreSharedKeyAuthenticator::operator=(&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp; QSslPreSharedKeyAuthenticator :: operator = ( &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="6e018493406b60d5694e9e29135f9879fa4f52e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;QSslPreSharedKeyAuthenticator::operator=(const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp; QSslPreSharedKeyAuthenticator :: operator = (const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cbf2000881665bb4bb76476b924aeaa8702a5e95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; also provides functions for setting the ordered list of ciphers from which the handshake phase will eventually select the session cipher. This ordered list must be in place before the handshake phase begins.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 또한 핸드 쉐이크 단계가 결국 세션 암호를 선택할 순서화 된 암호 목록을 설정하는 기능을 제공합니다. 이 순서 목록은 핸드 셰이크 단계가 시작되기 전에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1a4d2f1369663c1a9b13c9994db3a87242b92f9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; can emit this signal several times during the SSL handshake, before encryption has been established, to indicate that an error has occurred while establishing the identity of the peer. The</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 암호화가 설정되기 전에 SSL 데이터 교환 중에이 신호를 여러 번 방출하여 피어의 ID를 설정하는 동안 오류가 발생했음을 표시 할 수 있습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="ceebcf7931ad8bd1b4e35cfbce07cc4aa9ed083a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;() when it enters encrypted mode.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;암호화&lt;/a&gt; 모드로 들어갈 때 암호화 된 ()을 방출 합니다.</target>
        </trans-unit>
        <trans-unit id="7c33b1a414c31b92b45b5f1dc6f48fcf99af8281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits this signal after the SSL handshake to indicate that one or more errors have occurred while establishing the identity of the peer. The errors are usually an indication that &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; is unable to securely identify the peer. Unless any action is taken, the connection will be dropped after this signal has been emitted.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 SSL 데이터 교환 후 피어의 ID를 설정하는 동안 하나 이상의 오류가 발생했음을 표시하기 위해이 신호를 방출합니다. 오류는 일반적으로 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 이 피어를 안전하게 식별 할 수 없음을 나타냅니다 . 조치를 취하지 않으면이 신호가 방출 된 후 연결이 끊어집니다.</target>
        </trans-unit>
        <trans-unit id="2e99b7e8a435ac1a7b0eadc1298920e7930bf384" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits this signal when it negotiates a PSK ciphersuite, and therefore a PSK authentication is then required.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 PSK 암호를 협상 할 때이 신호를 방출하므로 PSK 인증이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9f07daf1496507e2a06e2278650aeedf9b4e38c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; establishes a secure, encrypted TCP connection you can use for transmitting encrypted data. It can operate in both client and server mode, and it supports modern SSL protocols, including SSL 3 and TLS 1.2. By default, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; uses only SSL protocols which are considered to be secure (&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SecureProtocols&lt;/a&gt;), but you can change the SSL protocol by calling &lt;a href=&quot;qsslsocket#setProtocol&quot;&gt;setProtocol&lt;/a&gt;() as long as you do it before the handshake has started.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 암호화 된 데이터 전송에 사용할 수있는 안전한 암호화 된 TCP 연결을 설정합니다. 클라이언트 및 서버 모드 모두에서 작동 할 수 있으며 SSL 3 및 TLS 1.2를 포함한 최신 SSL 프로토콜을 지원합니다. 기본적으로 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 안전한 것으로 간주되는 SSL 프로토콜 ( &lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SecureProtocols&lt;/a&gt; ) 만 사용하지만 핸드 셰이크가 시작되기 전에 &lt;a href=&quot;qsslsocket#setProtocol&quot;&gt;setProtocol&lt;/a&gt; ()을 호출하여 SSL 프로토콜을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aeefc6c86793c1c70dc8d5340bfe1aec1d5c214a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; first enters the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;. Then, after entering either the event loop or one of the waitFor...() functions, it enters the &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;, emits &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;(), and then initiates the SSL client handshake. At each state change, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits signal &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket이&lt;/a&gt; 먼저 입사 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState를&lt;/a&gt; . 그런 다음 이벤트 루프 또는 waitFor ... () 함수 중 하나를 입력 한 후 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState에&lt;/a&gt; 들어가서 &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt; ()를 방출 한 다음 SSL 클라이언트 핸드 셰이크를 시작합니다. 각 상태 변경시 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt; () 신호를 방출 합니다.</target>
        </trans-unit>
        <trans-unit id="34841703f83bc4982886dd41702bf08aa13f82b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; provides an extensive, easy-to-use API for handling cryptographic ciphers, private keys, and local, peer, and Certification Authority (CA) certificates. It also provides an API for handling errors that occur during the handshake phase.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 암호화 암호, 개인 키 및 로컬, 피어 및 인증 기관 (CA) 인증서를 처리하기위한 광범위하고 사용하기 쉬운 API를 제공합니다. 또한 핸드 셰이크 단계에서 발생하는 오류를 처리하기위한 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8843f76ba699f509b7a6f1655fd962f6a5ff1592" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will automatically use QueryPeer for server sockets and VerifyPeer for client sockets.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 자동으로 서버 소켓에 QueryPeer를 사용하고 클라이언트 소켓에 대해서는 VerifyPeer를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ecdd057da2061c33bec517547e5b239472d6470f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will not request a certificate from the peer. You can set this mode if you are not interested in the identity of the other side of the connection. The connection will still be encrypted, and your socket will still send its local certificate to the peer if it's requested.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 피어에게 인증서를 요청하지 않습니다. 연결의 다른 쪽 ID에 관심이없는 경우이 모드를 설정할 수 있습니다. 연결은 여전히 ​​암호화되며 소켓은 요청이있을 경우 여전히 로컬 인증서를 피어에게 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d426dd5fbede1c7f144c0eb9d127eae56fd59cef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will request a certificate from the peer during the SSL handshake phase, and requires that this certificate is valid. On failure, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will emit the &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;QSslSocket::sslErrors&lt;/a&gt;() signal. This mode is the default for clients.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 SSL 핸드 셰이크 단계 중에 피어로부터 인증서를 요청 하며이 인증서가 유효해야합니다. 실패시 &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;QSslSocket :: sslErrors&lt;/a&gt; () 신호를 방출합니다 . 이 모드는 클라이언트의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="77a2aee233f3fc782085a1bde4198e0a6c8151d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will request a certificate from the peer during the SSL handshake phase, and requires that this certificate is valid. On failure, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will emit the QSslSocket::sslErrors() signal. This mode is the default for clients.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will request a certificate from the peer during the SSL handshake phase, and requires that this certificate is valid. On failure, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will emit the QSslSocket::sslErrors() signal. This mode is the default for clients.</target>
        </trans-unit>
        <trans-unit id="f5757fc5bafc22e475884277d0081947ce53faae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will request a certificate from the peer, but does not require this certificate to be valid. This is useful when you want to display peer certificate details to the user without affecting the actual SSL handshake. This mode is the default for servers. Note: In Schannel this value acts the same as VerifyNone.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; 은 피어로부터 인증서를 요청하지만이 인증서가 유효하지 않아도됩니다. 실제 SSL 핸드 셰이크에 영향을주지 않고 피어 인증서 세부 정보를 사용자에게 표시하려는 경우에 유용합니다. 이 모드는 서버의 기본값입니다. 참고 : Schannel에서이 값은 VerifyNone과 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f83e0fd3ddd3664e94b7be16864ca5a43d17249e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket::PeerVerifyMode&lt;/a&gt; QSslConfiguration::peerVerifyMode() const</source>
          <target state="translated">&lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket :: PeerVerifyMode&lt;/a&gt; QSslConfiguration :: peerVerifyMode () const</target>
        </trans-unit>
        <trans-unit id="eba545561a6174d1a967fce384660f5edecfb078" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket::PeerVerifyMode&lt;/a&gt; QSslSocket::peerVerifyMode() const</source>
          <target state="translated">&lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket :: PeerVerifyMode&lt;/a&gt; QSslSocket :: peerVerifyMode () const</target>
        </trans-unit>
        <trans-unit id="448193eddb559021e36c35c057d1ed84da8869d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket::SslMode&lt;/a&gt; QDtls::sslMode() const</source>
          <target state="translated">&lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket :: SslMode&lt;/a&gt; QDtls :: sslMode () const</target>
        </trans-unit>
        <trans-unit id="44696d842241a1b9d845b63568596d48bd6fd797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket::SslMode&lt;/a&gt; QSslSocket::mode() const</source>
          <target state="translated">&lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket :: SslMode&lt;/a&gt; QSslSocket :: mode () const</target>
        </trans-unit>
        <trans-unit id="277014619884aa7834f41c6624562a82c23774ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; and &lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; 및 &lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="150b50fb7037d0967e09e9ef4c7034ef845708f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; inherits from &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;. All of &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;. For example, you can use &lt;a href=&quot;qvector#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the stack is empty, and you can traverse a &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; using &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;'s iterator classes (for example, &lt;a href=&quot;qvectoriterator&quot;&gt;QVectorIterator&lt;/a&gt;). But in addition, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; provides three convenience functions that make it easy to implement LIFO semantics: &lt;a href=&quot;qstack#push&quot;&gt;push&lt;/a&gt;(), &lt;a href=&quot;qstack#pop&quot;&gt;pop&lt;/a&gt;(), and &lt;a href=&quot;qstack#top&quot;&gt;top&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; 은 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 에서 상속 합니다. 모든 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 의 기능도 적용 &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; . 예를 들어, &lt;a href=&quot;qvector#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 사용 하여 스택이 비어 있는지 테스트하고 &lt;a href=&quot;qstack&quot;&gt;QVector&lt;/a&gt; 반복자 클래스 (예 : &lt;a href=&quot;qvectoriterator&quot;&gt;QVectorIterator&lt;/a&gt; ) 를 사용하여 &lt;a href=&quot;qvector&quot;&gt;QStack을&lt;/a&gt; 순회 할 수 있습니다 . 또한 &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; 은 LIFO 시맨틱을 쉽게 구현할 수있는 3 가지 편의 기능인 &lt;a href=&quot;qstack#push&quot;&gt;push&lt;/a&gt; (), &lt;a href=&quot;qstack#pop&quot;&gt;pop&lt;/a&gt; () 및 &lt;a href=&quot;qstack#top&quot;&gt;top&lt;/a&gt; ()을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9ca4ea93df58cce82d7ea4c25173814892dc7187" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="881dc45b4093622e5db987b2c5fcf405613c745c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;&amp;lt;T&amp;gt; is one of Qt's generic &lt;a href=&quot;containers#&quot;&gt;container classes&lt;/a&gt;. It implements a stack data structure for items of a same type.</source>
          <target state="translated">&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; &amp;lt;T&amp;gt;는 Qt의 일반 &lt;a href=&quot;containers#&quot;&gt;컨테이너 클래스&lt;/a&gt; 중 하나입니다 . 동일한 유형의 항목에 대한 스택 데이터 구조를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="204a4c6079ca8a6cb60e81f27a7bde9d8149fdfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;'s value type must be an &lt;a href=&quot;containers#assignable-data-type&quot;&gt;assignable data type&lt;/a&gt;. This covers most data types that are commonly used, but the compiler won't let you, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value; instead, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *.</source>
          <target state="translated">&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; 의 값 유형은 &lt;a href=&quot;containers#assignable-data-type&quot;&gt;지정 가능한 데이터 유형&lt;/a&gt; 이어야합니다 . 여기에는 일반적으로 사용되는 대부분의 데이터 유형이 포함되지만 컴파일러에서는 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 을 값으로 저장할 수 없습니다 . 대신 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *를 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c406f9a41233c72a5e112b1d6fd3f9ffbed5bd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; can be used to create a user interface similar to the one provided by &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;. There is also a convenience &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; class built on top of &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout는&lt;/a&gt; 에 의해 제공되는 것과 유사한 사용자 인터페이스를 생성하는 데 사용될 수 &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget를&lt;/a&gt; . 편의도있다 &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget의&lt;/a&gt; 위에 구축 된 클래스 &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37ed170950425d079c24c694820765430336033a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; provides no intrinsic means for the user to switch page. This is typically done through a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; or a &lt;a href=&quot;qlistwidget&quot;&gt;QListWidget&lt;/a&gt; that stores the titles of the &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt;'s pages. For example:</source>
          <target state="translated">&lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; 은 사용자가 페이지를 전환 할 수있는 본질적인 수단을 제공하지 않습니다. 이것은 일반적으로 &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; 페이지 의 제목을 저장 하는 &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; 또는 &lt;a href=&quot;qlistwidget&quot;&gt;QListWidget&lt;/a&gt; 을 통해 수행됩니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="be294b5bbe4d4bd070244000769212ab0e8437fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstackedlayout#addWidget&quot;&gt;addWidget()&lt;/a&gt;, &lt;a href=&quot;qstackedlayout#insertWidget&quot;&gt;insertWidget()&lt;/a&gt;, &lt;a href=&quot;qstackedlayout#currentWidget&quot;&gt;currentWidget()&lt;/a&gt;, &lt;a href=&quot;qstackedlayout#setCurrentWidget&quot;&gt;setCurrentWidget()&lt;/a&gt;, &lt;a href=&quot;qstackedlayout#widget&quot;&gt;widget()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qstackedlayout#addWidget&quot;&gt;addWidget ()&lt;/a&gt; , &lt;a href=&quot;qstackedlayout#insertWidget&quot;&gt;insertWidget ()&lt;/a&gt; , &lt;a href=&quot;qstackedlayout#currentWidget&quot;&gt;currentWidget ()&lt;/a&gt; , &lt;a href=&quot;qstackedlayout#setCurrentWidget&quot;&gt;setCurrentWidget ()&lt;/a&gt; , &lt;a href=&quot;qstackedlayout#widget&quot;&gt;widget ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5599d1f1b736aa6e83eb363b480d15c981d1b0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; can be used to create a user interface similar to the one provided by &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;. It is a convenience layout widget built on top of the &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; 을 사용하여 &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget에서&lt;/a&gt; 제공하는 것과 유사한 사용자 인터페이스를 작성할 수 있습니다 . &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; 클래스 위에 빌드 된 편리한 레이아웃 위젯 입니다.</target>
        </trans-unit>
        <trans-unit id="b58073ec805cdcc034c60518abdc6415d2b99c0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; provides no intrinsic means for the user to switch page. This is typically done through a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; or a &lt;a href=&quot;qlistwidget&quot;&gt;QListWidget&lt;/a&gt; that stores the titles of the &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt;'s pages. For example:</source>
          <target state="translated">&lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; 은 사용자가 페이지를 전환 할 수있는 본질적인 수단을 제공하지 않습니다. 이것은 일반적으로 &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; 페이지 의 제목을 저장 하는 &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; 또는 &lt;a href=&quot;qlistwidget&quot;&gt;QListWidget&lt;/a&gt; 을 통해 수행됩니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6dd0c232afaf58b372e104d05b1d572bb03bf27a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::horizontalHeaderItem(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: horizontalHeaderItem (int</target>
        </trans-unit>
        <trans-unit id="81ae5c8ba81cc3ccdc90dc22694c2dbac40a0491" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::invisibleRootItem() const</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: invisibleRootItem () const</target>
        </trans-unit>
        <trans-unit id="9a666639e88331ec1a0b1ad35a5687dacc137974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::item(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: item (int</target>
        </trans-unit>
        <trans-unit id="5c8abf93e0bd2c72316b63bd85958d444e6eafc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::itemFromIndex(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: itemFromIndex (const를 &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="76a5934477c3c0abf25b665fef0d79a19d4ab0a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::takeHorizontalHeaderItem(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: takeHorizontalHeaderItem (INT</target>
        </trans-unit>
        <trans-unit id="d715067e55250207dcef0e1f22b3bb649a463a78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::takeItem(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: takeItem (INT</target>
        </trans-unit>
        <trans-unit id="151efc91be4a7b37ea9fc97ec27a09aa70be5c0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::takeVerticalHeaderItem(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: takeVerticalHeaderItem (INT</target>
        </trans-unit>
        <trans-unit id="877966dda045b1d2552bb0dc81ae98f8b972c245" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItemModel::verticalHeaderItem(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItemModel :: verticalHeaderItem (int</target>
        </trans-unit>
        <trans-unit id="c937e4c0204ae09e6a7c655269af432f18df7f4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItem::child(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItem :: child (int</target>
        </trans-unit>
        <trans-unit id="0f88a1ce8cc5553c33ca711f82abb60a5e9e31e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItem::parent() const</source>
          <target state="translated">&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItem :: parent () const</target>
        </trans-unit>
        <trans-unit id="4e9c16a42cdeaa3738f865ba42e61427b999b776" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *QStandardItem::takeChild(int</source>
          <target state="translated">&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; * QStandardItem :: takeChild (INT</target>
        </trans-unit>
        <trans-unit id="a3506e1d8244e792f19100dd5fc181830ced6ae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditem#sortChildren&quot;&gt;sortChildren&lt;/a&gt;() and &lt;a href=&quot;qstandarditemmodel#sort&quot;&gt;QStandardItemModel::sort&lt;/a&gt;() use this function when sorting items. If you want custom sorting, you can subclass &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; and reimplement this function.</source>
          <target state="translated">&lt;a href=&quot;qstandarditem#sortChildren&quot;&gt;sortChildren&lt;/a&gt; () 및 QStandardItemModel &lt;a href=&quot;qstandarditemmodel#sort&quot;&gt;:: sort&lt;/a&gt; ()는 항목을 정렬 할 때이 함수를 사용합니다. 사용자 정의 정렬을 원하면 &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; 을 서브 클래스 화 하고이 함수를 다시 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0dabd0384e9a37f21adb9103dcfbe15bb7dedd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemeditorcreator&quot;&gt;QStandardItemEditorCreator&lt;/a&gt; is a convenience template class that can be used to register widgets without the need to subclass &lt;a href=&quot;qitemeditorcreatorbase&quot;&gt;QItemEditorCreatorBase&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstandarditemeditorcreator&quot;&gt;QStandardItemEditorCreator은&lt;/a&gt; 서브 클래 싱 할 필요없이 위젯을 등록하는 데 사용할 수있는 편리한 템플릿 클래스입니다 &lt;a href=&quot;qitemeditorcreatorbase&quot;&gt;QItemEditorCreatorBase을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e543c3d5b1387437b71a216528f7dfbb27a8a75f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemeditorcreator&quot;&gt;QStandardItemEditorCreator&lt;/a&gt; is a convenience template class that can be used to register widgets without the need to subclass QItemEditorCreatorBase.</source>
          <target state="translated">&lt;a href=&quot;qstandarditemeditorcreator&quot;&gt;QStandardItemEditorCreator&lt;/a&gt; is a convenience template class that can be used to register widgets without the need to subclass QItemEditorCreatorBase.</target>
        </trans-unit>
        <trans-unit id="c16afe49921495da574973aa814fed9bc168f20c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; *QStandardItem::model() const</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; * QStandardItem :: model () const</target>
        </trans-unit>
        <trans-unit id="f061664de9cb9ed7604355dab86ed975109285b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; can be used as a repository for standard Qt data types. It is one of the &lt;a href=&quot;model-view-programming#model-view-classes&quot;&gt;Model/View Classes&lt;/a&gt; and is part of Qt's &lt;a href=&quot;model-view-programming&quot;&gt;model/view&lt;/a&gt; framework.</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; 은 표준 Qt 데이터 유형의 저장소로 사용될 수 있습니다. &lt;a href=&quot;model-view-programming#model-view-classes&quot;&gt;모델 / 뷰 클래스&lt;/a&gt; 중 하나이며 Qt의 &lt;a href=&quot;model-view-programming&quot;&gt;모델 / 뷰&lt;/a&gt; 프레임 워크 의 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="4bd60e2cc2874e14e6bbe61c8be6b8977bcc8862" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; implements the &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; interface, which means that the model can be used to provide data in any view that supports that interface (such as &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;, &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; and &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;, and your own custom views). For performance and flexibility, you may want to subclass &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; to provide support for different kinds of data repositories. For example, the QDirModel provides a model interface to the underlying file system.</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; 은 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 인터페이스를 구현합니다. 즉, 모델을 사용하여 해당 인터페이스를 지원하는 모든보기 (예 : &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; , &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; 및 &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; 및 사용자 정의보기) 에서 데이터를 제공 할 수 있습니다 . 성능과 유연성 을 위해 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 을 서브 클래 싱 하여 다양한 종류의 데이터 리포지토리를 지원할 수 있습니다. 예를 들어, QDirModel은 기본 파일 시스템에 모델 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6071a2445e4511b5bafbee8918b578460ebffef2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; manages more complex tree structures of items, each of which can contain arbitrary data.</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; 은 항목의보다 복잡한 트리 구조를 관리하며 각 항목은 임의의 데이터를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f517206f8b1fd02e17b89c2349a41a1a1a04164" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; provides a classic item-based approach to working with the model. The items in a &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; are provided by &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; 은 모델 작업에 대한 고전적인 항목 기반 접근 방식을 제공합니다. A의 항목 &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel은&lt;/a&gt; 에 의해 제공됩니다 &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8fe73dcfa6999b339ddaccef066df02acddfa87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; supports both copy and move.</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; 은 복사와 이동을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="719a983bc6b6217dfb09f980c0da1f178e40839e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; *QAbstractState::parentState() const</source>
          <target state="translated">&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; * QAbstractState :: parentState () const</target>
        </trans-unit>
        <trans-unit id="6a08f9939873efa9cfc73c13353d0f9995b5297e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; *QAbstractTransition::sourceState() const</source>
          <target state="translated">&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; * QAbstractTransition :: sourceState () const</target>
        </trans-unit>
        <trans-unit id="3eb29769c6047a3b9af8bb1e1cc7b0abdd5cb960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; objects can have child states, and can have transitions to other states. &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; is part of &lt;a href=&quot;statemachine-api#&quot;&gt;The State Machine Framework&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; 객체는 자식 상태를 가질 수 있으며 다른 상태로 전환 할 수 있습니다. &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; 는 &lt;a href=&quot;statemachine-api#&quot;&gt;State Machine Framework의&lt;/a&gt; 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="3b4a9fc88af7eaa23a611736692b95d91993c530" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.DontRestoreProperties The state machine should not save the initial values of properties and restore them later.</source>
          <target state="translated">&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; .DontRestoreProperties 상태 시스템은 속성의 초기 값을 저장하고 나중에 복원해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="3cd2cacdf7ddb55ad8b2d46e457226c669dc5433" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.ExclusiveStates The child states are mutually exclusive and an initial state must be set by setting &lt;a href=&quot;qml-qtqml-statemachine-state#initialState-prop&quot;&gt;initialState&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; .ExclusiveStates 자식 상태는 상호 배타적이며 &lt;a href=&quot;qml-qtqml-statemachine-state#initialState-prop&quot;&gt;initialState&lt;/a&gt; 속성 을 설정하여 초기 상태를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e82264cafed6884826df8f4ac9c226fee69842c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.ParallelStates The child states are parallel. When the parent state is entered, all its child states are entered in parallel.</source>
          <target state="translated">&lt;a href=&quot;qstate&quot;&gt;QState .ParallelStates&lt;/a&gt; 자식 상태는 병렬입니다. 부모 상태가 입력되면 모든 자식 상태가 동시에 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="e9d5d12bc3bccddb0a9ebe1e6ed2ef13435688bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.RestoreProperties The state machine should save the initial values of properties and restore them later.</source>
          <target state="translated">&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; .RestoreProperties 상태 시스템은 속성의 초기 값을 저장하고 나중에 복원해야합니다.</target>
        </trans-unit>
        <trans-unit id="fc62cf241be7065e9e4712f66bcbc8e92f3f66da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState::ChildMode&lt;/a&gt; QState::childMode() const</source>
          <target state="translated">&lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState :: ChildMode&lt;/a&gt; QState :: childMode () const</target>
        </trans-unit>
        <trans-unit id="093bdf2e4581c3561d7e35e8ec72f087533c4183" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstate#RestorePolicy-enum&quot;&gt;QState::RestorePolicy&lt;/a&gt; QStateMachine::globalRestorePolicy() const</source>
          <target state="translated">&lt;a href=&quot;qstate#RestorePolicy-enum&quot;&gt;QState :: RestorePolicy&lt;/a&gt; QStateMachine :: globalRestorePolicy () const</target>
        </trans-unit>
        <trans-unit id="b8a8dc71bec80ef42c85a699e3e0cfa8b115a28e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; *QAbstractState::machine() const</source>
          <target state="translated">&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; * QAbstractState :: machine () const</target>
        </trans-unit>
        <trans-unit id="ffb8cc408fd36ee63ef30f4831f30fa07f9a5ee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; *QAbstractTransition::machine() const</source>
          <target state="translated">&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; * QAbstractTransition :: machine () const</target>
        </trans-unit>
        <trans-unit id="22ab7be14c406dc16675746d0157735928455953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; is a subclass of &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;. This allows for a state machine to be a child state of another machine. &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; reimplements &lt;a href=&quot;qstate#onEntry&quot;&gt;QState::onEntry&lt;/a&gt;() and calls &lt;a href=&quot;qstatemachine#start&quot;&gt;QStateMachine::start&lt;/a&gt;(), so that when the child state machine is entered, it will automatically start running.</source>
          <target state="translated">&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; 은 &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; 의 서브 클래스입니다 . 이것은 상태 머신이 다른 머신의 자식 상태가되도록합니다. &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine은 &lt;/a&gt;&lt;a href=&quot;qstate#onEntry&quot;&gt;QState :: onEntry&lt;/a&gt; ()를 다시 구현 하고 &lt;a href=&quot;qstatemachine#start&quot;&gt;QStateMachine :: start&lt;/a&gt; ()를 호출 하여 자식 상태 시스템이 입력 될 때 자동으로 실행을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="6a5751be8d968fe2690c27e778d0f3952a620b3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; is based on the concepts and notation of &lt;a href=&quot;http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/Statecharts.pdf&quot;&gt;Statecharts&lt;/a&gt;. &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; is part of &lt;a href=&quot;statemachine-api#&quot;&gt;The State Machine Framework&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; 은 &lt;a href=&quot;http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/Statecharts.pdf&quot;&gt;Statecharts&lt;/a&gt; 의 개념과 표기법을 기반으로합니다 . &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; 은 &lt;a href=&quot;statemachine-api#&quot;&gt;State Machine Framework의&lt;/a&gt; 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="2da7c7b9874d96e8d4cc1fc5ac5de6b3b3ba3ade" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine#Error-enum&quot;&gt;QStateMachine::Error&lt;/a&gt; QStateMachine::error() const</source>
          <target state="translated">&lt;a href=&quot;qstatemachine#Error-enum&quot;&gt;QStateMachine :: 오류&lt;/a&gt; QStateMachine :: error () const</target>
        </trans-unit>
        <trans-unit id="8489a278f34cc66a870e9c91f41d553dddaad7d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine#cancelDelayedEvent&quot;&gt;cancelDelayedEvent&lt;/a&gt;(int id)</source>
          <target state="translated">&lt;a href=&quot;qstatemachine#cancelDelayedEvent&quot;&gt;cancelDelayedEvent&lt;/a&gt; (int id)</target>
        </trans-unit>
        <trans-unit id="72e4bf859dd943b4aed93abbc4f853da231738bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine#postDelayedEvent&quot;&gt;postDelayedEvent&lt;/a&gt;(QEvent *event, int delay)</source>
          <target state="translated">&lt;a href=&quot;qstatemachine#postDelayedEvent&quot;&gt;postDelayedEvent&lt;/a&gt; (QEvent * 이벤트, int 지연)</target>
        </trans-unit>
        <trans-unit id="d7f9ab62251ba5f3c461c1782b2f4357df1d20da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine#postDelayedEvent-1&quot;&gt;postDelayedEvent&lt;/a&gt;(QEvent *event, std::chrono::milliseconds delay)</source>
          <target state="translated">&lt;a href=&quot;qstatemachine#postDelayedEvent-1&quot;&gt;postDelayedEvent&lt;/a&gt;(QEvent *event, std::chrono::milliseconds delay)</target>
        </trans-unit>
        <trans-unit id="568a0c888128c8b260555325ce18bac5bc6cb485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatemachine#postEvent&quot;&gt;postEvent&lt;/a&gt;(QEvent *event, QStateMachine::EventPriority priority)</source>
          <target state="translated">&lt;a href=&quot;qstatemachine#postEvent&quot;&gt;postEvent&lt;/a&gt; (QEvent * 이벤트, QStateMachine :: EventPriority 우선 순위)</target>
        </trans-unit>
        <trans-unit id="54aaa99740466c8f1ae658ff8d9d61fbb079b63a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstaticplugin&quot;&gt;QStaticPlugin&lt;/a&gt; is a struct containing a reference to a static plugin instance together with its meta data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qstaticplugin&quot;&gt;QStaticPlugin&lt;/a&gt; 은 메타 데이터와 함께 정적 플러그인 인스턴스에 대한 참조를 포함하는 구조체입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b58539ce9f9539741cb563d616fc89db16eca892" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; can only represent text, so only HTML tags which alter the layout or appearance of the text will be respected. Adding an image to the input HTML, for instance, will cause the image to be included as part of the layout, affecting the positions of the text glyphs, but it will not be displayed. The result will be an empty area the size of the image in the output. Similarly, using tables will cause the text to be laid out in table format, but the borders will not be drawn.</source>
          <target state="translated">&lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; 는 텍스트 만 나타낼 수 있으므로 텍스트의 레이아웃이나 모양을 변경하는 HTML 태그 만 존중됩니다. 예를 들어, 입력 HTML에 이미지를 추가하면 이미지가 레이아웃의 일부로 포함되어 텍스트 글리프의 위치에 영향을 주지만 표시되지는 않습니다. 결과는 출력에서 ​​이미지 크기의 빈 영역이됩니다. 마찬가지로 표를 사용하면 텍스트가 표 형식으로 배치되지만 테두리가 그려지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8f79eb75b2a5dae48459a86455064352f2f494a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; provides a way to cache layout data for a block of text so that it can be drawn more efficiently than by using &lt;a href=&quot;qpainter#drawText&quot;&gt;QPainter::drawText&lt;/a&gt;() in which the layout information is recalculated with every call.</source>
          <target state="translated">&lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; 는 모든 호출에서 레이아웃 정보를 다시 계산하는 &lt;a href=&quot;qpainter#drawText&quot;&gt;QPainter :: drawText&lt;/a&gt; ()를 사용하는 것보다 더 효율적으로 그릴 수 있도록 텍스트 블록의 레이아웃 데이터를 캐시하는 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="bca94dc6ee77c3091245e602137150102c7dfe90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatictext#PerformanceHint-enum&quot;&gt;QStaticText::PerformanceHint&lt;/a&gt; QStaticText::performanceHint() const</source>
          <target state="translated">&lt;a href=&quot;qstatictext#PerformanceHint-enum&quot;&gt;QStaticText :: PerformanceHint&lt;/a&gt; QStaticText :: performanceHint () const</target>
        </trans-unit>
        <trans-unit id="f5c95a34489a5956c60256925c84b423b6bba41b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;QStaticText::operator=(const &lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp; QStaticText :: operator = (const &lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d2c3cdce5f1b54e34d25d48d914e0144b31a3bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; *QMainWindow::statusBar() const</source>
          <target state="translated">&lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; * QMainWindow :: statusBar () const</target>
        </trans-unit>
        <trans-unit id="af2ea130a533a3800c747d5e61153ee7a5e4fa49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; lets you display all three types of indicators.</source>
          <target state="translated">&lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar를&lt;/a&gt; 사용하면 세 가지 유형의 지표를 모두 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec0d7886de05d9b0c115ef1f2ead95fd1a0c205e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; always caches the retrieved information, but you can call &lt;a href=&quot;qstorageinfo#refresh&quot;&gt;refresh&lt;/a&gt;() to invalidate the cache.</source>
          <target state="translated">&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo는&lt;/a&gt; 항상 검색된 정보를 캐시하지만 &lt;a href=&quot;qstorageinfo#refresh&quot;&gt;refresh&lt;/a&gt; ()를 호출 하여 캐시를 무효화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f785c7e2a6a9c57fb2516bbf33a118fb1dadf7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; caches information about storage to speed up performance. &lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; retrieves information during object construction and/or when calling the &lt;a href=&quot;qstorageinfo#setPath&quot;&gt;setPath&lt;/a&gt;() method. You have to manually reset the cache by calling this function to update storage information.</source>
          <target state="translated">&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; 는 스토리지에 대한 정보를 캐시하여 성능을 향상시킵니다. &lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; 는 오브젝트 구성 중 및 / 또는 &lt;a href=&quot;qstorageinfo#setPath&quot;&gt;setPath&lt;/a&gt; () 메소드를 호출 할 때 정보를 검색합니다 . 스토리지 정보를 업데이트하려면이 기능을 호출하여 캐시를 수동으로 재설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="8a6f1183db0736a5eac8942cc07d4972f6129cd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; object refers to a different drive or volume than the</source>
          <target state="translated">&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; 객체는 드라이브와 다른 드라이브 또는 볼륨을 나타냅니다</target>
        </trans-unit>
        <trans-unit id="4f991b4d00775014a15816c7b26c93324636fed1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; object refers to the same drive or volume as the</source>
          <target state="translated">&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; 객체는</target>
        </trans-unit>
        <trans-unit id="165c5f4911e02c45a72d76b014789718fe560051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="b2b2a13fae30deb7f4cc1c1842ebb04c3c17fe9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;QStorageInfo::operator=(&lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp; QStorageInfo :: operator = ( &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d444306848d65ce868c573033092c9384bd4e62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;QStorageInfo::operator=(const &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp; QStorageInfo :: operator = (const &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ddff8c2b4e2ed0067ef57ab84e62b893ec689ca6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *QTextStream::string() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; * QTextStream :: string () const</target>
        </trans-unit>
        <trans-unit id="ed1b7b1ec5cceed82bf7a4a06a02a00c12ce02d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractFormBuilder::errorString() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractFormBuilder :: errorString () const</target>
        </trans-unit>
        <trans-unit id="83f849b72d6f4b54f85a5f135e9c945aff47eb21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth2::refreshToken() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth2 :: refreshToken () const</target>
        </trans-unit>
        <trans-unit id="c81580c7c772cad677cc6a3c7ae6d4758107c76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth2::responseType() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth2 :: responseType () const</target>
        </trans-unit>
        <trans-unit id="45a7ec1b86f19c56871b5c6d8b7d7fe12644542c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth::clientIdentifier() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth :: clientIdentifier () const</target>
        </trans-unit>
        <trans-unit id="bd6e01d6685df34996e17b15926ef777542bf171" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth::token() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuth :: token () const</target>
        </trans-unit>
        <trans-unit id="4cb871351e06901ce920e5ba87fdd3a535026890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractSocket::peerName() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractSocket :: peerName () const</target>
        </trans-unit>
        <trans-unit id="a9b802439eb5f685c7b13e2c3f3319f9e25a0045" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractSocket::protocolTag() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractSocket :: protocolTag () const</target>
        </trans-unit>
        <trans-unit id="6e26ff2114b49b2950133d83ab59b6ec394f57ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractTextDocumentLayout::anchorAt(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractTextDocumentLayout :: anchorAt (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="01b0755f0ea5e6be48b0a1804bdb5bf532af7d8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractTextDocumentLayout::imageAt(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractTextDocumentLayout :: imageAt (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="75059582f570289794eebe9484212c72e3bb4e9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextInsertEvent::textInserted() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextInsertEvent :: textInserted () const</target>
        </trans-unit>
        <trans-unit id="44e3311eeb842b4653ea3b44ad97ad1de6414f11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextRemoveEvent::textRemoved() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextRemoveEvent :: textRemoved () const</target>
        </trans-unit>
        <trans-unit id="c7521f0fb94e00d84e9b82fb07d87e0e962bac16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextUpdateEvent::textInserted() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextUpdateEvent :: textInserted () const</target>
        </trans-unit>
        <trans-unit id="ffbf5347c9f07d4dbe7d6bd40ea45469c093bda0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextUpdateEvent::textRemoved() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextUpdateEvent :: textRemoved () const</target>
        </trans-unit>
        <trans-unit id="9af8f2c5bdcd961f84802b3114ab8e67d71bca76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAndroidJniObject::toString() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAndroidJniObject :: toString () const</target>
        </trans-unit>
        <trans-unit id="243bc448d2b2cb10030ceda022d4028072715686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDecoder::sourceFilename() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDecoder :: sourceFilename () const</target>
        </trans-unit>
        <trans-unit id="aa9b261bb633300d214a2185041046133c5204ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDeviceInfo::deviceName() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDeviceInfo :: deviceName () const</target>
        </trans-unit>
        <trans-unit id="9ea2a5a891865667fac1cf9675b3e55d3e70374e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDeviceInfo::realm() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDeviceInfo::realm() const</target>
        </trans-unit>
        <trans-unit id="8172e5c242563456df59582c0a162922ab2c0361" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioEncoderSettings::codec() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioEncoderSettings :: codec () const</target>
        </trans-unit>
        <trans-unit id="e406e77e78d1b660590ecb0835ff9b5eed342c88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioFormat::codec() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioFormat :: codec () const</target>
        </trans-unit>
        <trans-unit id="f3d3b074c18ef1a7735d7cfb5c493db09969695c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutput::category() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutput :: category () const</target>
        </trans-unit>
        <trans-unit id="be153542028f898e5b4f6baec43d165e62328d3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioRecorder::audioInput() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioRecorder :: audioInput () const</target>
        </trans-unit>
        <trans-unit id="e1a99bb10873136ae82966d76022ad96df70a431" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioRecorder::audioInputDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioRecorder :: audioInputDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c7532ca0d9224140aa777831f8df44c597e84fb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioRecorder::defaultAudioInput() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioRecorder :: defaultAudioInput () const</target>
        </trans-unit>
        <trans-unit id="3e12eb3415c4804cc23799746ad5359aa80745df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAuthenticator::password() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAuthenticator :: password () const</target>
        </trans-unit>
        <trans-unit id="05aa082448d4e6755bd90d032478e57fd1063a27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAuthenticator::realm() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAuthenticator :: realm () const</target>
        </trans-unit>
        <trans-unit id="452cab43809341b51306402f97801de6c4b56f58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAuthenticator::user() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAuthenticator :: user () const</target>
        </trans-unit>
        <trans-unit id="b8310562d29729972024a69d05c84f4a2dd6cede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxBase::generateDocumentation()</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxBase :: generateDocumentation ()</target>
        </trans-unit>
        <trans-unit id="dcf1f1f5ab00a569d3380847328d643a176fa3bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxScript::scriptCode() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxScript :: scriptCode () const</target>
        </trans-unit>
        <trans-unit id="0fc917de7206e038c995cb40aeca54e83bdef57c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxScript::scriptName() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxScript :: scriptName () const</target>
        </trans-unit>
        <trans-unit id="9e7e382809c3e4cd666b69c62fd2f8de8bdf226a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxScriptEngine::scriptLanguage() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxScriptEngine :: scriptLanguage () const</target>
        </trans-unit>
        <trans-unit id="645d55e7b7b56172d963ea3fff511152f7b9bec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxSelect::clsid() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAxSelect :: clsid () const</target>
        </trans-unit>
        <trans-unit id="83da22835d3bb446f985343035569d2a8c588370" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarCategoryAxis::at(int</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarCategoryAxis :: at (int</target>
        </trans-unit>
        <trans-unit id="870e087d0eea05280ef800be9fe6909e90b5b198" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarCategoryAxis::max() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarCategoryAxis :: max () const</target>
        </trans-unit>
        <trans-unit id="15bb4bedca1cd3a91e2e21f0c7a15acb7d8e0319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarCategoryAxis::min() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarCategoryAxis :: min () const</target>
        </trans-unit>
        <trans-unit id="7b961d0041a2f00eb4293351482e76a8da06e47f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarSet::label() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBarSet :: label () const</target>
        </trans-unit>
        <trans-unit id="54d02fe9b3c366bd545684858c540afc5eb02ca0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothAddress::toString() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothAddress :: toString () const</target>
        </trans-unit>
        <trans-unit id="b935139b5987118344b4af88a3668a769a7c50ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothDeviceDiscoveryAgent::errorString() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothDeviceDiscoveryAgent :: errorString () const</target>
        </trans-unit>
        <trans-unit id="53727e9644f635248b3049b7e7980e2e7bb46910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothDeviceInfo::name() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothDeviceInfo :: name () const</target>
        </trans-unit>
        <trans-unit id="ade308127b65331f03ce28401f81cdcf8c81cd73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothHostInfo::name() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothHostInfo :: name () const</target>
        </trans-unit>
        <trans-unit id="bd2c47f3394eab548347ed038b5ca26790a50661" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothLocalDevice::name() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothLocalDevice :: name () const</target>
        </trans-unit>
        <trans-unit id="54ec2c56cbc993ca828e6e96a8d9eec752a50076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceDiscoveryAgent::errorString() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceDiscoveryAgent :: errorString () const</target>
        </trans-unit>
        <trans-unit id="030e02b27370dfdfa67c93e357c45c95c0d773c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceInfo::serviceDescription() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceInfo :: serviceDescription () const</target>
        </trans-unit>
        <trans-unit id="1b6bb00011a678bad29102c54025a68d07028818" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceInfo::serviceName() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceInfo :: serviceName () const</target>
        </trans-unit>
        <trans-unit id="f1f8af10a45a050411fb205733451ea5ad51c19e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceInfo::serviceProvider() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothServiceInfo :: serviceProvider () const</target>
        </trans-unit>
        <trans-unit id="688d6bdbc124facbacaeca7eb7a38348924edb76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothSocket::errorString() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothSocket :: errorString () const</target>
        </trans-unit>
        <trans-unit id="daf81bde4f27bfcdb6e415217da911213eee2b2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothSocket::localName() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothSocket :: localName () const</target>
        </trans-unit>
        <trans-unit id="dabb39cc2cf9db56cf9b1b1000d1fe5e4aebf1c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothSocket::peerName() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothSocket :: peerName () const</target>
        </trans-unit>
        <trans-unit id="dd09048ac17ca407347b1daaa6048895686e1e2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBoxSet::label() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBoxSet :: label () const</target>
        </trans-unit>
        <trans-unit id="adda3730c77d7b89fd971a12dba9cfa7f2f6c63b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::dateTimeToString(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::dateTimeToString(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6d196a4fa6e77d0e008a8c831c2bbdb5905979a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::monthName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::monthName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="389f37360f3e93ee39401a2ad5a3714ea3403abb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::name() const</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::name() const</target>
        </trans-unit>
        <trans-unit id="d4cbe611f12ad1213365fe887179fde328443e63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::standaloneMonthName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::standaloneMonthName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0d943d90fcd3ae6721fa038b9711d31c125137ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::standaloneWeekDayName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::standaloneWeekDayName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5b91a681a1e089ea7a8a27f477041cc068371041" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::weekDayName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCalendar::weekDayName(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
