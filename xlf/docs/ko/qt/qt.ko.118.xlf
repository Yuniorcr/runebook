<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="16383562d0595df73165cf4c3b5af38dfe5b5bb6" translate="yes" xml:space="preserve">
          <source>Aggregatable</source>
          <target state="translated">Aggregatable</target>
        </trans-unit>
        <trans-unit id="c3d36dcc6ab4a5b9ad798ed803923c38e6b6b756" translate="yes" xml:space="preserve">
          <source>Aggregates access to services which provide geographical information</source>
          <target state="translated">지리적 정보를 제공하는 서비스에 대한 액세스를 집계합니다.</target>
        </trans-unit>
        <trans-unit id="2a94de1f9599ab6c712cd35bf0a9849c97475228" translate="yes" xml:space="preserve">
          <source>Agner Fog's excellent manuals on optimizing C++ applications at: &lt;a href=&quot;http://www.agner.org/optimize/&quot;&gt;http://www.agner.org/optimize/&lt;/a&gt;.</source>
          <target state="translated">:에서 C ++ 애플리케이션을 최적화에 Agner 안개의 훌륭한 매뉴얼 &lt;a href=&quot;http://www.agner.org/optimize/&quot;&gt;http://www.agner.org/optimize/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25f8c55de811edc2de6f3ed75740fcb5cc026a34" translate="yes" xml:space="preserve">
          <source>Alarm</source>
          <target state="translated">Alarm</target>
        </trans-unit>
        <trans-unit id="84ae24b32e0757ffd869a13cd09b220f64cde619" translate="yes" xml:space="preserve">
          <source>AlarmRole - alarm.</source>
          <target state="translated">AlarmRole-경보.</target>
        </trans-unit>
        <trans-unit id="626e2c8b18fd2e15f69d93d94822e265cf5c0305" translate="yes" xml:space="preserve">
          <source>AlarmTest</source>
          <target state="translated">AlarmTest</target>
        </trans-unit>
        <trans-unit id="d71c45b3d8a817df46d53626270c2cc92e52793f" translate="yes" xml:space="preserve">
          <source>Albanian</source>
          <target state="translated">Albanian</target>
        </trans-unit>
        <trans-unit id="7df59902809eeb4e4a1839cd506ddaaa23974eb3" translate="yes" xml:space="preserve">
          <source>Albanian Layout</source>
          <target state="translated">알바니아 레이아웃</target>
        </trans-unit>
        <trans-unit id="035d51ecaddbf637d23d4cbf5e58ebc58bf90c74" translate="yes" xml:space="preserve">
          <source>AlbumArtist</source>
          <target state="translated">AlbumArtist</target>
        </trans-unit>
        <trans-unit id="ef036156b1031815f72e564d911843c78ec9a8e8" translate="yes" xml:space="preserve">
          <source>AlbumTitle</source>
          <target state="translated">AlbumTitle</target>
        </trans-unit>
        <trans-unit id="cab0d78fb0b493300ab3055642e1eb2e4893ce6b" translate="yes" xml:space="preserve">
          <source>Alert Notification UUID (service). The Alert Notification service exposes alert information on a device.</source>
          <target state="translated">경고 알림 UUID (서비스). 경고 알림 서비스는 장치에 대한 경고 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="32a9f3f3bca2e5375f9e6c266cfd6aa3762876c2" translate="yes" xml:space="preserve">
          <source>Algorithmic Complexity</source>
          <target state="translated">알고리즘 복잡성</target>
        </trans-unit>
        <trans-unit id="ee4adfabffeac002e9880f514fa23dd2ae4be0b0" translate="yes" xml:space="preserve">
          <source>Algorithmic complexity attacks</source>
          <target state="translated">알고리즘 복잡성 공격</target>
        </trans-unit>
        <trans-unit id="dee12adf940a4866d13c69ce6826a54c2a6df502" translate="yes" xml:space="preserve">
          <source>Algorithmic complexity is concerned about how fast (or slow) each function is as the number of items in the container grow. For example, inserting an item in the middle of a &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt; is an extremely fast operation, irrespective of the number of items stored in the &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;. On the other hand, inserting an item in the middle of a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; is potentially very expensive if the &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; contains many items, since half of the items must be moved one position in memory.</source>
          <target state="translated">알고리즘의 복잡성은 컨테이너의 항목 수가 증가함에 따라 각 기능이 얼마나 빠르거나 느린 지에 관한 것입니다. 예를 들어, 중간에 아이템을 삽입 &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList하면&lt;/a&gt; 무관에 저장된 항목의 수, 매우 빠른 동작이다 &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt; . 반면, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 의 중간에 항목을 삽입 하면 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 에 많은 항목이 포함되어 있으면 항목의 절반이 메모리에서 한 위치로 이동해야하므로 비용이 많이 듭니다 .</target>
        </trans-unit>
        <trans-unit id="e859fc1c6a2e6fa54d019915679609c38bab57d4" translate="yes" xml:space="preserve">
          <source>Algorithmic complexity is concerned about how fast (or slow) each function is as the number of items in the container grow. For example, inserting an item in the middle of a QLinkedList is an extremely fast operation, irrespective of the number of items stored in the QLinkedList. On the other hand, inserting an item in the middle of a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; is potentially very expensive if the &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; contains many items, since half of the items must be moved one position in memory.</source>
          <target state="translated">알고리즘 복잡성은 컨테이너의 항목 수가 증가함에 따라 각 기능이 얼마나 빠르거나 느린 지에 관한 것입니다. 예를 들어, QLinkedList의 중간에 항목을 삽입하는 것은 QLinkedList에 저장된 항목 수에 관계없이 매우 빠른 작업입니다. 반면에 , &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 에 많은 항목이 포함되어있는 경우 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 중간에 항목을 삽입하는 것은 항목의 절반을 메모리에서 한 위치로 이동해야하기 때문에 잠재적으로 매우 비쌉니다 .</target>
        </trans-unit>
        <trans-unit id="94d101eb6060911e0e5f8a621798c4d68a34815b" translate="yes" xml:space="preserve">
          <source>Algorithmic complexity is concerned about how fast (or slow) each function is as the number of items in the container grow. For example, inserting an item in the middle of a std::list is an extremely fast operation, irrespective of the number of items stored in the list. On the other hand, inserting an item in the middle of a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is potentially very expensive if the &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; contains many items, since half of the items must be moved one position in memory.</source>
          <target state="translated">알고리즘의 복잡성은 컨테이너의 항목 수가 증가함에 따라 각 기능이 얼마나 빠르거나 느린 지에 관한 것입니다. 예를 들어, std :: list 중간에 항목을 삽입하는 것은 목록에 저장된 항목 수에 관계없이 매우 빠른 작업입니다. 반면에 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 에 항목이 많이 포함되어있는 경우 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 중간에 항목을 삽입하는 것은 항목의 절반을 메모리에서 한 위치로 이동해야하기 때문에 잠재적으로 매우 비쌉니다 .</target>
        </trans-unit>
        <trans-unit id="200c3a24676882b8154ff00dd327a21c65fbb806" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;(). Returns the world transformation matrix.</source>
          <target state="translated">&lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform의&lt;/a&gt; 별칭 () 월드 변환 행렬을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2d86bb50e114dd0141f5042df262e4c7d95b8092" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;char16_t&lt;/code&gt; for non-Windows or if Q_COMPILER_UNICODE_STRINGS is defined. Otherwise, alias for &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="translated">에 대한 별칭 &lt;code&gt;char16_t&lt;/code&gt; Q_COMPILER_UNICODE_STRINGS 비 Windows 또는 경우가 정의됩니다. 그렇지 않으면 &lt;code&gt;wchar_t&lt;/code&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="fcf82b22d4ea248dfb6d33d59adc220267376fbe" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;char16_t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;char16_t&lt;/code&gt; 의 별칭 .</target>
        </trans-unit>
        <trans-unit id="874c3dd37af3882af478e56f5f96162b3d7d9674" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 의 별칭 .</target>
        </trans-unit>
        <trans-unit id="490c2c407635d0244071608d900e09a705dbfa43" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;const QChar&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;const QChar&lt;/code&gt; 의 별명 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="eea407f0a6a49e7c6caccab56757f20504a520b1" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;const QStringView&lt;/code&gt; or &lt;code&gt;const QLatin1String&lt;/code&gt;, depending on the tokenizer's &lt;code&gt;Haystack&lt;/code&gt; template argument.</source>
          <target state="translated">토크 나이저의 &lt;code&gt;Haystack&lt;/code&gt; 템플릿 인수 에 따라 &lt;code&gt;const QStringView&lt;/code&gt; 또는 &lt;code&gt;const QLatin1String&lt;/code&gt; 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="5ec623e0461ea14eb9628f09c85d919e993acce4" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;const char&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;const char&lt;/code&gt; 의 별명 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="50ff20f3a90ecc8ee1e1833cc51493aa9f49fb64" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;doc&lt;/code&gt;.</source>
          <target state="translated">에 대한 별칭 &lt;code&gt;doc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cfffb021e626f1d2457a4ae8de6f380bd8280be" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;int&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 의 별칭입니다 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b9f9a27883a9ced4a2adbfae331ca950d346a72e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;qmltype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;qmltype&lt;/code&gt; 의 별명 .</target>
        </trans-unit>
        <trans-unit id="c9da89f8bdba7996c02f75eb32ed3a64da747b53" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;qsizetype&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;qsizetype&lt;/code&gt; 의 별칭 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="87d43f00e137bfc41021f330feb3c11372748926" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;reference&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;reference&lt;/code&gt; 용 별칭 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5819fa179a9ccd748ee7c972613227469246a578" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;std::ptrdiff_t&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;std::ptrdiff_t&lt;/code&gt; 별명입니다 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2d072341a56c13d2dc5097d37ee10d7bad1b1c4e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;value_type &amp;amp;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value_type &amp;amp;&lt;/code&gt; 에 대한 별칭 .</target>
        </trans-unit>
        <trans-unit id="792ee24dece0f77ad1263df9b7a9dd91c8863cef" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;value_type &amp;amp;&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;value_type &amp;amp;&lt;/code&gt; 의 별명 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="d13f7e0380a80cac6584dec40d0e4f8f64206fd9" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;value_type *&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value_type *&lt;/code&gt; 의 별칭 .</target>
        </trans-unit>
        <trans-unit id="af0ee0197c0a387144fedde9808f2bdf7d154bf6" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;value_type *&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="translated">&lt;code&gt;value_type *&lt;/code&gt; 의 별명 . STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="d487200a9649c73be3381606574ae62a9ff8d2fa" translate="yes" xml:space="preserve">
          <source>Alias for Name</source>
          <target state="translated">이름의 별칭</target>
        </trans-unit>
        <trans-unit id="e814912be91828d0c61be8d2b49588ef0655f85e" translate="yes" xml:space="preserve">
          <source>Alias for qsizetype.</source>
          <target state="translated">qsizetype의 별칭.</target>
        </trans-unit>
        <trans-unit id="2d805e3cc858dda6026dbaf8670e924b298140d4" translate="yes" xml:space="preserve">
          <source>Alias for qsizetype. Provided for compatibility with the STL.</source>
          <target state="translated">qsizetype의 별명. STL과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9bc0bf905c236b42eeb835ddcb5bb0c215aa415c" translate="yes" xml:space="preserve">
          <source>Aliased Painting</source>
          <target state="translated">Aliased Painting</target>
        </trans-unit>
        <trans-unit id="d51b7920c2719e285d28d19a3d360306ec7c369b" translate="yes" xml:space="preserve">
          <source>Aliases are only activated once a component has been fully initialized. An error is generated when an uninitialized alias is referenced. Likewise, aliasing an aliasing property will also result in an error.</source>
          <target state="translated">별명은 구성 요소가 완전히 초기화 된 후에 만 ​​활성화됩니다. 초기화되지 않은 별명이 참조되면 오류가 생성됩니다. 마찬가지로, 앨리어싱 속성의 앨리어싱도 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8d5b904a05287fa5c265b809cc53f5d95c4fc709" translate="yes" xml:space="preserve">
          <source>Aliasing is caused when there is more</source>
          <target state="translated">앨리어싱은 더 많은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="490b7b5691b0bb5c0f88b43b25ec42bf90a79d82" translate="yes" xml:space="preserve">
          <source>AlignHCenter</source>
          <target state="translated">AlignHCenter</target>
        </trans-unit>
        <trans-unit id="94aa0f37574161ba1dbceadad9e47a91d18671d3" translate="yes" xml:space="preserve">
          <source>AlignLeft</source>
          <target state="translated">AlignLeft</target>
        </trans-unit>
        <trans-unit id="1daeb4002b81e8892b03491dcd5cbf01ad1b80a0" translate="yes" xml:space="preserve">
          <source>AlignTop</source>
          <target state="translated">AlignTop</target>
        </trans-unit>
        <trans-unit id="ecd9b7b370093de4c957d8941a2867ddbe9d0a29" translate="yes" xml:space="preserve">
          <source>AlignVCenter</source>
          <target state="translated">AlignVCenter</target>
        </trans-unit>
        <trans-unit id="7f8c5176c3f03b97659161923f2b6492f7de7e73" translate="yes" xml:space="preserve">
          <source>Alignment</source>
          <target state="translated">Alignment</target>
        </trans-unit>
        <trans-unit id="cfe2a90af777e880090dde7a8b3440112c4c02ea" translate="yes" xml:space="preserve">
          <source>Aligns</source>
          <target state="translated">Aligns</target>
        </trans-unit>
        <trans-unit id="0091ce96c8923400116eed1eea4cc7b887aa636f" translate="yes" xml:space="preserve">
          <source>Aligns the lines containing the selection or the cursor at the center. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">선택 영역이나 커서를 중앙에 배치하는 선을 정렬합니다. &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 가 필요합니다 . (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="ca7ada7b68a158888cda78d8b0d362e5487dfecc" translate="yes" xml:space="preserve">
          <source>Aligns the lines containing the selection or the cursor to the left. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">선택 영역이나 커서가 포함 된 줄을 왼쪽에 맞 춥니 다. &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 가 필요합니다 . (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="33c6f516c8ba691a51dc11db116ebbfc7895b4a4" translate="yes" xml:space="preserve">
          <source>Aligns the lines containing the selection or the cursor to the right. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">선택 영역이나 커서가있는 줄을 오른쪽에 맞 춥니 다. &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 가 필요합니다 . (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="71ab4748eca1f0fa0eb3323e8287b4d03da222bd" translate="yes" xml:space="preserve">
          <source>Aligns with the baseline.</source>
          <target state="translated">기준선에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="15a244f626bf58052ead8b6fe59a1461fbccd1e3" translate="yes" xml:space="preserve">
          <source>Aligns with the bottom.</source>
          <target state="translated">바닥에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="925c7896fcf1eeab5eaad692ccdf728460fe3a1f" translate="yes" xml:space="preserve">
          <source>Aligns with the left edge.</source>
          <target state="translated">왼쪽 가장자리에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="a8cdf68e4c63c04974b8504d5d9cb862471b1bd1" translate="yes" xml:space="preserve">
          <source>Aligns with the right edge.</source>
          <target state="translated">오른쪽 가장자리에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="939e533f8fd5c98ef1211644b7f98e7d531264be" translate="yes" xml:space="preserve">
          <source>Aligns with the top.</source>
          <target state="translated">상단과 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="06c9cee6afcd2c2d349c4b3481b5e4b928c13747" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;-based objects have a &lt;code&gt;state&lt;/code&gt; property, and can specify additional states by adding new &lt;code&gt;State&lt;/code&gt; objects to the item's &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property. Each state within a component has a unique &lt;code&gt;name&lt;/code&gt;, an empty string being the default. To change the current state of an item, set the &lt;a href=&quot;qml-qtquick-item#state-prop&quot;&gt;state&lt;/a&gt; property to the name of the state.</source>
          <target state="translated">모든 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 기반 객체에는 &lt;code&gt;state&lt;/code&gt; 속성 이 있으며 항목의 &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;상태&lt;/a&gt; 속성에 새 &lt;code&gt;State&lt;/code&gt; 객체를 추가하여 추가 상태를 지정할 수 있습니다 . 구성 요소 내의 각 상태에는 고유 한 &lt;code&gt;name&lt;/code&gt; 이 있으며 빈 문자열이 기본값입니다. 항목의 현재 상태를 변경하려면 &lt;a href=&quot;qml-qtquick-item#state-prop&quot;&gt;state&lt;/a&gt; 속성을 상태 이름으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d27fc6dba1503e60ba3da8d2f7daf9c7e479878" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses support Qt's translation features, making it possible to translate an application's user interface into different languages.</source>
          <target state="translated">모든 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 서브 클래스는 Qt의 번역 기능을 지원하므로 응용 프로그램의 사용자 인터페이스를 다른 언어로 번역 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9134060aba49cce392ec6960a0127ae400b72017" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; subclasses can use layouts to manage their children. The &lt;a href=&quot;qwidget#setLayout&quot;&gt;QWidget::setLayout&lt;/a&gt;() function applies a layout to a widget. When a layout is set on a widget in this way, it takes charge of the following tasks:</source>
          <target state="translated">모든 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 서브 클래스는 레이아웃을 사용하여 자식을 관리 할 수 ​​있습니다. &lt;a href=&quot;qwidget#setLayout&quot;&gt;는 QWidget :: setLayout의&lt;/a&gt; () 함수는 위젯에 레이아웃을 적용합니다. 이러한 방식으로 위젯에 레이아웃이 설정되면 다음 작업을 담당합니다.</target>
        </trans-unit>
        <trans-unit id="f294f858fce6ff7241a876dc68004ec3943c51b1" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; subclasses can use layouts to manage their children. The &lt;a href=&quot;qwidget#setLayout&quot;&gt;QWidget::setLayout&lt;/a&gt;() function applies a layout to a widget. When a layout is set on a widget in this way, it takes charge of the following tasks:</source>
          <target state="translated">모든 &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; 서브 클래스는 레이아웃을 사용하여 자식을 관리 할 수 ​​있습니다. &lt;a href=&quot;qwidget#setLayout&quot;&gt;는 QWidget :: setLayout의&lt;/a&gt; () 함수는 위젯에 레이아웃을 적용합니다. 이러한 방식으로 위젯에 레이아웃이 설정되면 다음 작업을 담당합니다.</target>
        </trans-unit>
        <trans-unit id="641eb7a3a31f04922612e724dee54e1e6b9cecfd" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;sqldrivers&lt;/code&gt; plugins are excluded from automatic importing.</source>
          <target state="translated">모든 &lt;code&gt;sqldrivers&lt;/code&gt; 플러그인은 자동 가져 오기에서 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="f31305ebe6c332d5742400744d19083d30c4dd40" translate="yes" xml:space="preserve">
          <source>All CSS 2.1 selector classes are supported except pseudo-class selectors such as &lt;code&gt;:first-child&lt;/code&gt;, &lt;code&gt;:visited&lt;/code&gt; and &lt;code&gt;:hover&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:first-child&lt;/code&gt; , &lt;code&gt;:visited&lt;/code&gt; 및 &lt;code&gt;:hover&lt;/code&gt; 와 같은 의사 클래스 선택기를 제외한 모든 CSS 2.1 선택기 클래스가 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e75c6a2260ca48552cd58cc7cd818490dfa5c52" translate="yes" xml:space="preserve">
          <source>All Classes</source>
          <target state="translated">모든 수업</target>
        </trans-unit>
        <trans-unit id="9bfbc0de54100d4a1172ffd3b39dd3e46f51cdc9" translate="yes" xml:space="preserve">
          <source>All DOM nodes in the document tree are subclasses of &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;. The document itself is represented as a &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; object.</source>
          <target state="translated">문서 트리의 모든 DOM 노드는 &lt;a href=&quot;qdomnode&quot;&gt;QDomNode의&lt;/a&gt; 서브 클래스입니다 . 문서 자체는 &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; 오브젝트 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="9991c9f5f8170918ccd97d1e2e3e1fb63fb96027" translate="yes" xml:space="preserve">
          <source>All East Asian languages (Chinese, Japanese and Korean)</source>
          <target state="translated">모든 동아시아 언어 (중국어, 일본어 및 한국어)</target>
        </trans-unit>
        <trans-unit id="6044f1335d33799082c7ce7a1cef7dcb510092f3" translate="yes" xml:space="preserve">
          <source>All Examples</source>
          <target state="translated">모든 예</target>
        </trans-unit>
        <trans-unit id="fefca82ac15c0ca101c2d83e216617ed55f2769f" translate="yes" xml:space="preserve">
          <source>All HTML5 2D context pixel operations are supported. In order to ensure improved pixel reading/writing performance the</source>
          <target state="translated">모든 HTML5 2D 컨텍스트 픽셀 작업이 지원됩니다. 개선 된 픽셀 판독 / 기록 성능을 보장하기 위해</target>
        </trans-unit>
        <trans-unit id="1356546c5ed2507e88250ff18acdfd18fa52fa78" translate="yes" xml:space="preserve">
          <source>All JSON classes are value based, &lt;a href=&quot;implicit-sharing&quot;&gt;implicitly shared classes&lt;/a&gt;.</source>
          <target state="translated">모든 JSON 클래스는 값 기반의 &lt;a href=&quot;implicit-sharing&quot;&gt;암시 적으로 공유되는 클래스&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="79006cdc62df4171b1770297aabf4d9e0ab1a2a4" translate="yes" xml:space="preserve">
          <source>All JSON classes are value based, &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly shared classes&lt;/a&gt;.</source>
          <target state="translated">모든 JSON 클래스는 값 기반의 &lt;a href=&quot;implicit-sharing#&quot;&gt;암시 적으로 공유 된 클래스&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4f9811b71ae7e65dd7ed9d8ee28f6ab9952eeffa" translate="yes" xml:space="preserve">
          <source>All Layouts</source>
          <target state="translated">모든 레이아웃</target>
        </trans-unit>
        <trans-unit id="3414548f8739b658119012bc5a437c65f919cdbe" translate="yes" xml:space="preserve">
          <source>All Platforms</source>
          <target state="translated">모든 플랫폼</target>
        </trans-unit>
        <trans-unit id="5c4f3778ceb4114e0c9cca0223f35919a08ee7bb" translate="yes" xml:space="preserve">
          <source>All QGraphicsWidgets have a list of &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;s, however they can be represented graphically in many different ways. The default use of the &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; list (as returned by &lt;a href=&quot;qgraphicswidget#actions&quot;&gt;actions&lt;/a&gt;()) is to create a context &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="translated">모든 QGraphicsWidgets에는 &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; 목록이 있지만 다양한 방법으로 그래픽으로 표현할 수 있습니다. &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; 목록 의 기본 사용 ( &lt;a href=&quot;qgraphicswidget#actions&quot;&gt;actions&lt;/a&gt; ()에 의해 리턴 됨)은 컨텍스트 &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; 를 작성하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="dd203a667bda51cf093647d6ae18384fd07ca279" translate="yes" xml:space="preserve">
          <source>All QML APIs by Module</source>
          <target state="translated">모듈 별 모든 QML API</target>
        </trans-unit>
        <trans-unit id="f297fa2cb93dacbe97eb73d31d50868b2877c3dc" translate="yes" xml:space="preserve">
          <source>All QML Types</source>
          <target state="translated">모든 QML 유형</target>
        </trans-unit>
        <trans-unit id="3528223454d5c66e2df25c350a55eeffd8453e09" translate="yes" xml:space="preserve">
          <source>All QML applications can be extended from C++ in order to use additional functionality implemented in C++ code or to provide a C++ based QML plugin. This topic of extending QML from C++ is covered in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt; documentation.</source>
          <target state="translated">C ++ 코드로 구현 된 추가 기능을 사용하거나 C ++ 기반 QML 플러그인을 제공하기 위해 모든 QML 애플리케이션을 C ++에서 확장 할 수 있습니다. C ++에서 QML을 확장하는이 주제는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;QML 및 C ++ 통합&lt;/a&gt; 문서 에서 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="25bb39711d91af515b5109d22de326906f95f3f4" translate="yes" xml:space="preserve">
          <source>All QML applications can be extended from C++ in order to use additional functionality implemented in C++ code or to provide a C++ based QML plugin. This topic of extending QML from C++ is covered in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt; documentation.</source>
          <target state="translated">모든 QML 애플리케이션은 C ++ 코드로 구현 된 추가 기능을 사용하거나 C ++ 기반 QML 플러그인을 제공하기 위해 C ++에서 확장 될 수 있습니다. C ++에서 QML을 확장하는이 주제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-cppintegration-topic.html&quot;&gt;QML 및 C ++ 통합&lt;/a&gt; 문서 에서 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="74951ab08049ad716493cebe391b73e675bad66f" translate="yes" xml:space="preserve">
          <source>All QML applications can be extended from C++ in order to use additional functionality implemented in C++ code or to provide a C++ based QML plugin. This topic of extending QML from C++ is covered in the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt; documentation.</source>
          <target state="translated">모든 QML 애플리케이션은 C ++ 코드로 구현 된 추가 기능을 사용하거나 C ++ 기반 QML 플러그인을 제공하기 위해 C ++에서 확장 될 수 있습니다. C ++에서 QML을 확장하는이 주제는 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-cppintegration-topic.html&quot;&gt;QML 및 C ++ 통합&lt;/a&gt; 문서 에서 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="20901d1a275c93271219973f43ab360df5ff7d66" translate="yes" xml:space="preserve">
          <source>All QML methods are exposed to the meta-object system and can be called from C++ using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;(). Method parameters and return values passed from QML are always translated into &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; values in C++.</source>
          <target state="translated">모든 QML 메소드는 메타 오브젝트 시스템에 노출되며 &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt; ()를 사용하여 C ++에서 호출 할 수 있습니다 . QML에서 전달 된 메소드 매개 변수 및 리턴 값은 항상 C ++에서 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 값으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="85940342c0a0b8c6de25dada8d7e6085b9fda2ca" translate="yes" xml:space="preserve">
          <source>All QML methods are exposed to the meta-object system and can be called from C++ using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;(). You can specify types for the parameters and the return value after the colon character, as shown in the code snippet below. This can be useful, for example, when you want to connect a signal in C++ with a certain signature to a QML-defined method. If you omit the types, the C++ signature will use &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="translated">모든 QML 메소드는 메타 오브젝트 시스템에 노출되며 &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt; ()를 사용하여 C ++에서 호출 할 수 있습니다 . 아래 코드 스 니펫에 표시된대로 콜론 문자 뒤에 매개 변수 유형과 반환 값을 지정할 수 있습니다. 예를 들어 특정 서명이있는 C ++의 신호를 QML 정의 메서드에 연결하려는 경우에 유용 할 수 있습니다. 유형을 생략하면 C ++ 서명은 &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="8b47351d1a35ac81e4ee275f0297e42c49395563" translate="yes" xml:space="preserve">
          <source>All QML methods are exposed to the meta-object system and can be called from C++ using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;(). You can specify types for the parameters and the return value after the colon character, as shown in the code snippet below. This can be useful, for example, when you want to connect a signal in C++ with a certain signature to a QML-defined method. If you omit the types, the C++ signature will use &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="translated">모든 QML 메소드는 메타 오브젝트 시스템에 노출되며 &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt; ()를 사용하여 C ++에서 호출 할 수 있습니다 . 아래 코드 스 니펫에 표시된대로 콜론 문자 뒤에 매개 변수 유형과 반환 값을 지정할 수 있습니다. 예를 들어 특정 서명이있는 C ++의 신호를 QML 정의 메서드에 연결하려는 경우에 유용 할 수 있습니다. 유형을 생략하면 C ++ 서명은 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="5037f611ca28a898e17d1f9c632cc16d77f7c816" translate="yes" xml:space="preserve">
          <source>All QML object types are &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived types, whether they are internally implemented by the engine or &lt;a href=&quot;qtqml-cppintegration-definetypes&quot;&gt;defined by third-party sources&lt;/a&gt;. This means the QML engine can use the Qt &lt;a href=&quot;metaobjects&quot;&gt;Meta Object System&lt;/a&gt; to dynamically instantiate any QML object type and inspect the created objects.</source>
          <target state="translated">모든 QML 객체 유형은 엔진에 의해 내부적으로 구현되거나 &lt;a href=&quot;qtqml-cppintegration-definetypes&quot;&gt;타사 소스에 의해 정의&lt;/a&gt; 되었는지 여부에 관계없이 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 파생 유형 입니다. 즉, QML 엔진은 Qt &lt;a href=&quot;metaobjects&quot;&gt;Meta Object System&lt;/a&gt; 을 사용하여 모든 QML 개체 유형을 동적으로 인스턴스화하고 생성 된 개체를 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d85c28704f525440ca275a2cb8f881379c7ce2a" translate="yes" xml:space="preserve">
          <source>All QML object types are &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived types, whether they are internally implemented by the engine or &lt;a href=&quot;qtqml-cppintegration-definetypes#&quot;&gt;defined by third-party sources&lt;/a&gt;. This means the QML engine can use the Qt &lt;a href=&quot;metaobjects&quot;&gt;Meta Object System&lt;/a&gt; to dynamically instantiate any QML object type and inspect the created objects.</source>
          <target state="translated">모든 QML 객체 유형은 엔진에 의해 내부적으로 구현되거나 &lt;a href=&quot;qtqml-cppintegration-definetypes#&quot;&gt;타사 소스에 의해 정의 된 &lt;/a&gt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 파생 유형 입니다. 이는 QML 엔진이 Qt &lt;a href=&quot;metaobjects&quot;&gt;메타 오브젝트 시스템&lt;/a&gt; 을 사용하여 QML 오브젝트 유형을 동적으로 인스턴스화하고 작성된 오브젝트를 검사 할 수 있음을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="4ace84d8328f1f008a3e2ce6760eb84bfe6470e5" translate="yes" xml:space="preserve">
          <source>All QML signals are automatically available to C++, and can be connected to using &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;() like any ordinary Qt C++ signal. In return, any C++ signal can be received by a QML object using &lt;a href=&quot;qtqml-syntax-signals&quot;&gt;signal handlers&lt;/a&gt;.</source>
          <target state="translated">모든 QML 신호는 C ++에서 자동으로 사용할 수 있으며 일반 Qt C ++ 신호와 마찬가지로 &lt;a href=&quot;qobject#connect&quot;&gt;QObject :: connect&lt;/a&gt; () 를 사용하여 연결할 수 있습니다 . 그 대가로 모든 C ++ 신호는 &lt;a href=&quot;qtqml-syntax-signals&quot;&gt;신호 핸들러를&lt;/a&gt; 사용하여 QML 객체에 의해 수신 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a25051290aab349c156d9e37de9a5c672eb53127" translate="yes" xml:space="preserve">
          <source>All QML signals are automatically available to C++, and can be connected to using &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;() like any ordinary Qt C++ signal. In return, any C++ signal can be received by a QML object using &lt;a href=&quot;qtqml-syntax-signals#&quot;&gt;signal handlers&lt;/a&gt;.</source>
          <target state="translated">모든 QML 신호는 C ++에서 자동으로 사용할 수 있으며 일반적인 Qt C ++ 신호와 같이 &lt;a href=&quot;qobject#connect&quot;&gt;QObject :: connect&lt;/a&gt; () 를 사용하여 연결할 수 있습니다 . 그에 따라 &lt;a href=&quot;qtqml-syntax-signals#&quot;&gt;신호 핸들러를&lt;/a&gt; 사용하여 QML 오브젝트가 C ++ 신호를 수신 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5188df4a727ea9d6125a4aa0845c4e4804982fdb" translate="yes" xml:space="preserve">
          <source>All QObject subclasses support Qt's translation features, making it possible to translate an application's user interface into different languages.</source>
          <target state="translated">모든 QObject 서브 클래스는 Qt의 번역 기능을 지원하므로 애플리케이션의 사용자 인터페이스를 다른 언어로 번역 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d6ade11ad92fee39ace3369b6d4dcfd00896efe" translate="yes" xml:space="preserve">
          <source>All QObjects must live in the same thread as their parent. Consequently:</source>
          <target state="translated">모든 QObject는 부모와 동일한 스레드에 있어야합니다. 따라서:</target>
        </trans-unit>
        <trans-unit id="e2f76f4553f8e91cb169616221132ae2d30ba38c" translate="yes" xml:space="preserve">
          <source>All QRhi backends will choose the system default GPU adapter or physical device, unless overridden by &lt;code&gt;QSG_RHI_PREFER_SOFTWARE_RENDERER&lt;/code&gt; or a backend-specific variable, such as, &lt;code&gt;QT_D3D_ADAPTER_INDEX&lt;/code&gt; or &lt;code&gt;QT_VK_PHYSICAL_DEVICE_INDEX&lt;/code&gt;. No further adapter configurability is provided at this time.</source>
          <target state="translated">모든 QRhi 백엔드는 &lt;code&gt;QSG_RHI_PREFER_SOFTWARE_RENDERER&lt;/code&gt; 또는 &lt;code&gt;QT_D3D_ADAPTER_INDEX&lt;/code&gt; 또는 &lt;code&gt;QT_VK_PHYSICAL_DEVICE_INDEX&lt;/code&gt; 와 같은 백엔드 관련 변수로 재정의되지 않는 한 시스템 기본 GPU 어댑터 또는 물리적 장치를 선택합니다 . 현재 추가 어댑터 구성 기능은 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c401286c7c2ef58949febdf87c66da75390b74b" translate="yes" xml:space="preserve">
          <source>All QWidgets have a list of &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;s, however they can be represented graphically in many different ways. The default use of the &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; list (as returned by &lt;a href=&quot;qwidget#actions&quot;&gt;actions&lt;/a&gt;()) is to create a context &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="translated">모든 QWidgets은 목록이 &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; 그러나 그들은 여러 가지 방법으로 그래픽으로 표현 될 수들. &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; 목록 의 기본 사용 ( &lt;a href=&quot;qwidget#actions&quot;&gt;actions&lt;/a&gt; ()에 의해 리턴 됨)은 컨텍스트 &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; 를 작성하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e5a1b4e1f348bd3fbcc92b613c91abb4af393513" translate="yes" xml:space="preserve">
          <source>All Qt APIs use &lt;code&gt;q_no_char8_t::QUtf8StringView&lt;/code&gt; due to binary compatibility, but these APIs accept &lt;code&gt;q_has_char8_t::QUtf8StringView&lt;/code&gt; as well, since the latter implicitly converts into the former, and vice versa.</source>
          <target state="translated">모든 Qt API는 바이너리 호환성으로 인해 &lt;code&gt;q_no_char8_t::QUtf8StringView&lt;/code&gt; 사용 하지만 이러한 API는 &lt;code&gt;q_has_char8_t::QUtf8StringView&lt;/code&gt; 도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="4333d5550a12e590d50ad7cbf989db47b4b8865b" translate="yes" xml:space="preserve">
          <source>All Qt Quick Controls 2 QML Types</source>
          <target state="translated">모든 Qt 퀵 컨트롤 2 가지 QML 유형</target>
        </trans-unit>
        <trans-unit id="f57363bfb37a124db7430ac828421629f5f50a9d" translate="yes" xml:space="preserve">
          <source>All Qt Quick Controls QML Types</source>
          <target state="translated">모든 Qt 빠른 제어 QML 유형</target>
        </trans-unit>
        <trans-unit id="b0d657c2ec0dee29b01abcdd9f1845f5d9d48e23" translate="yes" xml:space="preserve">
          <source>All Qt programs automatically support a set of command-line options that allow modifying the way Qt will interact with the windowing system. Some of the options are also accessible via environment variables, which are the preferred form if the application can launch GUI sub-processes or other applications (environment variables will be inherited by child processes). When in doubt, use the environment variables.</source>
          <target state="translated">모든 Qt 프로그램은 Qt가 윈도우 시스템과 상호 작용하는 방식을 수정할 수있는 일련의 명령 줄 옵션을 자동으로 지원합니다. 일부 옵션은 환경 변수를 통해 액세스 할 수도 있습니다. 환경 변수는 응용 프로그램이 GUI 하위 프로세스 또는 다른 응용 프로그램을 시작할 수있는 경우 선호되는 형식입니다 (환경 변수는 자식 프로세스에 의해 상 속됨). 확실하지 않은 경우 환경 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0d16bba2f71c8a291696a348faace13fe47c3542" translate="yes" xml:space="preserve">
          <source>All Qt programs automatically support the following command line options:</source>
          <target state="translated">모든 Qt 프로그램은 다음 명령 줄 옵션을 자동으로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b3cb8c34b5ffcc43fd5ddcb13047802d6c45b309" translate="yes" xml:space="preserve">
          <source>All Qt widgets inherit &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. The convenience function &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt;() returns whether an object is actually a widget. It is much faster than &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;&amp;lt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt;(</source>
          <target state="translated">모든 Qt 위젯은 &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; 상속 합니다 . 편의 기능 &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt; ()은 객체가 실제로 위젯인지 여부를 반환합니다. &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; &amp;lt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt; ( 보다 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="30ea02ef3bdf4c99888b346305831fb89b68b0fd" translate="yes" xml:space="preserve">
          <source>All Qt widgets inherit QObject. The convenience function &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt;() returns whether an object is actually a widget. It is much faster than &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;&amp;lt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt;(</source>
          <target state="translated">모든 Qt 위젯은 QObject를 상속합니다. 편의 함수 &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt; ()은 객체가 실제로 위젯인지 여부를 반환합니다. 그것은보다 훨씬 빠른 &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; &amp;lt; &lt;a href=&quot;qwidget&quot;&gt;는 QWidget&lt;/a&gt; *&amp;gt; (</target>
        </trans-unit>
        <trans-unit id="549fef074bf0e5607b5edad97eaefaab99daa31b" translate="yes" xml:space="preserve">
          <source>All Qt widgets inherit QObject. The convenience function &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt;() returns whether an object is actually a widget. It is much faster than &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;&amp;lt;&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt;(</source>
          <target state="translated">모든 Qt 위젯은 QObject를 상속합니다. 편의 함수 &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt; ()은 객체가 실제로 위젯인지 여부를 반환합니다. 그것은보다 훨씬 빠른 &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; &amp;lt; &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;는 QWidget&lt;/a&gt; *&amp;gt; (</target>
        </trans-unit>
        <trans-unit id="cb5746be52330331844dea750bf452c0618aecb3" translate="yes" xml:space="preserve">
          <source>All Rights Reserved</source>
          <target state="translated">판권 소유</target>
        </trans-unit>
        <trans-unit id="79c50fe1f643fd6f7dc26edb3a77acc113e396a4" translate="yes" xml:space="preserve">
          <source>All Tonemapping is bypassed. This mode is useful when performing post processing effects.</source>
          <target state="translated">모든 Tonemapping은 우회됩니다. 이 모드는 후 처리 효과를 수행 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="24ac522c0b18067e029e39af37f65fbf8df2f469" translate="yes" xml:space="preserve">
          <source>All Vulkan resources are initialized and ready when this function is invoked. The current framebuffer and main command buffer can be retrieved via &lt;a href=&quot;qvulkanwindow#currentFramebuffer&quot;&gt;QVulkanWindow::currentFramebuffer&lt;/a&gt;() and &lt;a href=&quot;qvulkanwindow#currentCommandBuffer&quot;&gt;QVulkanWindow::currentCommandBuffer&lt;/a&gt;(). The logical device and the active graphics queue are available via &lt;a href=&quot;qvulkanwindow#device&quot;&gt;QVulkanWindow::device&lt;/a&gt;() and &lt;a href=&quot;qvulkanwindow#graphicsQueue&quot;&gt;QVulkanWindow::graphicsQueue&lt;/a&gt;(). Implementations can create additional command buffers from the pool returned by &lt;a href=&quot;qvulkanwindow#graphicsCommandPool&quot;&gt;QVulkanWindow::graphicsCommandPool&lt;/a&gt;(). For convenience, the index of a host visible and device local memory type index are exposed via &lt;a href=&quot;qvulkanwindow#hostVisibleMemoryIndex&quot;&gt;QVulkanWindow::hostVisibleMemoryIndex&lt;/a&gt;() and &lt;a href=&quot;qvulkanwindow#deviceLocalMemoryIndex&quot;&gt;QVulkanWindow::deviceLocalMemoryIndex&lt;/a&gt;(). All these accessors are safe to be called from any thread.</source>
          <target state="translated">이 함수가 호출되면 모든 Vulkan 리소스가 초기화되고 준비됩니다. 현재 프레임 버퍼 및 기본 명령 버퍼는 &lt;a href=&quot;qvulkanwindow#currentFramebuffer&quot;&gt;QVulkanWindow :: currentFramebuffer&lt;/a&gt; () 및 &lt;a href=&quot;qvulkanwindow#currentCommandBuffer&quot;&gt;QVulkanWindow :: currentCommandBuffer&lt;/a&gt; () 를 통해 검색 할 수 있습니다 . 논리 장치 및 활성 그래픽 대기열은 &lt;a href=&quot;qvulkanwindow#device&quot;&gt;QVulkanWindow :: device&lt;/a&gt; () 및 &lt;a href=&quot;qvulkanwindow#graphicsQueue&quot;&gt;QVulkanWindow :: graphicsQueue&lt;/a&gt; () 를 통해 사용할 수 있습니다 . 구현은 &lt;a href=&quot;qvulkanwindow#graphicsCommandPool&quot;&gt;QVulkanWindow :: graphicsCommandPool&lt;/a&gt; ()에 의해 반환 된 풀에서 추가 명령 버퍼를 만들 수 있습니다 . 편의를 위해 호스트 가시 및 장치 로컬 메모리 유형 인덱스의 인덱스는 &lt;a href=&quot;qvulkanwindow#hostVisibleMemoryIndex&quot;&gt;QVulkanWindow :: hostVisibleMemoryIndex&lt;/a&gt; () 및 &lt;a href=&quot;qvulkanwindow#deviceLocalMemoryIndex&quot;&gt;QVulkanWindow :: deviceLocalMemoryIndex&lt;/a&gt; 를 통해 노출됩니다.(). 이러한 모든 접근자는 모든 스레드에서 호출해도 안전합니다.</target>
        </trans-unit>
        <trans-unit id="054759dd0f88f4a6d65988964ca0122a1345ca67" translate="yes" xml:space="preserve">
          <source>All Western languages (using Latin script)</source>
          <target state="translated">모든 서구 언어 (라틴어 스크립트 사용)</target>
        </trans-unit>
        <trans-unit id="b96bb005ed098d342224dd966c97eadee1f75a4f" translate="yes" xml:space="preserve">
          <source>All X11 desktop environments that implement the D-Bus &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&quot;&gt;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&lt;/a&gt; specification, including recent versions of KDE and Unity.</source>
          <target state="translated">최신 버전의 KDE 및 Unity를 포함 하여 D-Bus &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&quot;&gt;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&lt;/a&gt; 사양 을 구현하는 모든 X11 데스크탑 환경 .</target>
        </trans-unit>
        <trans-unit id="a0de42665fa37ddd3e31da36f68b5444a27cbc09" translate="yes" xml:space="preserve">
          <source>All X509 certificate extensions have the following properties:</source>
          <target state="translated">모든 X509 인증서 확장에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7847db66076433d5d227e87645514a4c0a8a5b7a" translate="yes" xml:space="preserve">
          <source>All accessible objects have a role.</source>
          <target state="translated">접근 가능한 모든 객체에는 역할이 있습니다.</target>
        </trans-unit>
        <trans-unit id="18e630e44260e292549a468699dde9763a51f513" translate="yes" xml:space="preserve">
          <source>All accessible objects have a state.</source>
          <target state="translated">액세스 가능한 모든 객체는 상태를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e1a3f865b7785e1c7d69d02f61f46cc52dc4f51a" translate="yes" xml:space="preserve">
          <source>All animation types are enabled in the chart.</source>
          <target state="translated">차트에서 모든 애니메이션 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de3c1761311741919a532fb6b4796ae4d4d28a35" translate="yes" xml:space="preserve">
          <source>All animation types inherit from the &lt;a href=&quot;qml-qtquick-animation&quot;&gt;Animation&lt;/a&gt; type. It is not possible to create &lt;a href=&quot;qml-qtquick-animation&quot;&gt;Animation&lt;/a&gt; objects; instead, this type provides the essential properties and methods for animation types. Animation types have &lt;code&gt;start()&lt;/code&gt;, &lt;code&gt;stop()&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt;, &lt;code&gt;pause()&lt;/code&gt;, &lt;code&gt;restart()&lt;/code&gt;, and &lt;code&gt;complete()&lt;/code&gt; -- all of these methods control the execution of animations.</source>
          <target state="translated">모든 애니메이션 유형은 상속 &lt;a href=&quot;qml-qtquick-animation&quot;&gt;애니메이션&lt;/a&gt; 유형입니다. &lt;a href=&quot;qml-qtquick-animation&quot;&gt;애니메이션&lt;/a&gt; 객체 를 만들 수 없습니다 . 대신이 유형은 애니메이션 유형의 필수 속성과 방법을 제공합니다. 애니메이션 유형에는 &lt;code&gt;start()&lt;/code&gt; , &lt;code&gt;stop()&lt;/code&gt; , &lt;code&gt;resume()&lt;/code&gt; , &lt;code&gt;pause()&lt;/code&gt; , &lt;code&gt;restart()&lt;/code&gt; 및 &lt;code&gt;complete()&lt;/code&gt; 가 있습니다. 이러한 모든 메서드는 애니메이션의 실행을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="17c9e7aca332c7a31ce029e20fd74e5e7c4703d9" translate="yes" xml:space="preserve">
          <source>All attributes can be specified for any window or item, and they automatically propagate to children in the same manner as &lt;a href=&quot;qml-qtquick-controls2-control#font-prop&quot;&gt;fonts&lt;/a&gt;. In the following example, the window and all three radio buttons appear in the dark theme using a purple accent color:</source>
          <target state="translated">모든 속성은 모든 창 또는 항목에 대해 지정 될 수 있으며 &lt;a href=&quot;qml-qtquick-controls2-control#font-prop&quot;&gt;fonts&lt;/a&gt; 와 동일한 방식으로 자동으로 자식에 전파됩니다 . 다음 예제에서 창과 세 개의 라디오 버튼은 모두 자주색 악센트 색상을 사용하여 어두운 테마로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="1bb6ed2fd64b7c6bfc462cd7367822697dc93750" translate="yes" xml:space="preserve">
          <source>All changes to the model will be applied immediately to the database.</source>
          <target state="translated">모델에 대한 모든 변경 사항은 데이터베이스에 즉시 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="3863ccdef026680d2591d4be1161d9476ef7acc9" translate="yes" xml:space="preserve">
          <source>All changes will be cached in the model until either &lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;submitAll&lt;/a&gt;() or &lt;a href=&quot;qsqltablemodel#revertAll&quot;&gt;revertAll&lt;/a&gt;() is called.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;submitAll&lt;/a&gt; () 또는 &lt;a href=&quot;qsqltablemodel#revertAll&quot;&gt;revertAll&lt;/a&gt; ()이 호출 될 때까지 모든 변경 사항이 모델에 캐시됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc02a3624da69f2a93cfcf3530643d1b4fd4c32f" translate="yes" xml:space="preserve">
          <source>All classes in the namespace are tagged with a macro that allows you to export or import them from a DLL. To do that, declare the macro to expand to &lt;code&gt;__declspec(dllimport/export)&lt;/code&gt; before including the header file.</source>
          <target state="translated">네임 스페이스의 모든 클래스에는 DLL에서 내보내거나 가져올 수있는 매크로가 표시됩니다. 이렇게하려면 헤더 파일을 포함하기 전에 매크로를 &lt;code&gt;__declspec(dllimport/export)&lt;/code&gt; 으로 확장하도록 선언 하십시오.</target>
        </trans-unit>
        <trans-unit id="83ab4a7ffa0fef6e290da3310a5aec6d384012a5" translate="yes" xml:space="preserve">
          <source>All classes that contain signals or slots must mention &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; at the top of their declaration. They must also derive (directly or indirectly) from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="translated">신호 또는 슬롯을 포함하는 모든 클래스는 선언 맨 위에 &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; 를 언급해야합니다 . 또한 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 에서 (직접 또는 간접적으로) 파생되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4ecaccb102dda801f0791c5cacf89e48a61dfa24" translate="yes" xml:space="preserve">
          <source>All classes that inherit from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or one of its subclasses (e.g., &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;) can contain signals and slots. Signals are emitted by objects when they change their state in a way that may be interesting to other objects. This is all the object does to communicate. It does not know or care whether anything is receiving the signals it emits. This is true information encapsulation, and ensures that the object can be used as a software component.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 또는 해당 서브 클래스 중 하나 (예 : &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; ) 에서 상속되는 모든 클래스 에는 신호와 슬롯이 포함될 수 있습니다. 신호는 다른 물체에 흥미로운 방식으로 상태가 변경 될 때 물체에 의해 방출됩니다. 이것이 모든 객체가 의사 소통하는 것입니다. 신호를 수신하는 것이 있는지 여부를 알지 못하거나 신경 쓰지 않습니다. 이것은 진정한 정보 캡슐화이며 객체를 소프트웨어 구성 요소로 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="c8b238b6ee472041fc0265406e12fa9767f3343b" translate="yes" xml:space="preserve">
          <source>All classes that inherit from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or one of its subclasses (e.g., &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;) can contain signals and slots. Signals are emitted by objects when they change their state in a way that may be interesting to other objects. This is all the object does to communicate. It does not know or care whether anything is receiving the signals it emits. This is true information encapsulation, and ensures that the object can be used as a software component.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 또는 하위 클래스 중 하나 (예 : &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; ) 에서 상속하는 모든 클래스 는 신호와 슬롯을 포함 할 수 있습니다. 신호는 다른 객체에 흥미로울 수있는 방식으로 상태를 변경할 때 객체에 의해 방출됩니다. 이것은 개체가 통신을 위해 수행하는 모든 것입니다. 그것이 방출하는 신호를 수신하고 있는지 여부를 알거나 신경 쓰지 않습니다. 이것은 진정한 정보 캡슐화이며 객체가 소프트웨어 구성 요소로 사용될 수 있음을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="f2f2eb58c79a172b5791faea76942cd2450777a3" translate="yes" xml:space="preserve">
          <source>All coclass wrappers also have one constructors taking an interface wrapper class for each interface implemented.</source>
          <target state="translated">모든 코 클래스 래퍼에는 구현 된 각 인터페이스에 대한 인터페이스 래퍼 클래스를 사용하는 생성자가 하나 있습니다.</target>
        </trans-unit>
        <trans-unit id="2563afea5e8720f890a2b08372bb348d6939b27c" translate="yes" xml:space="preserve">
          <source>All columns/cells must be present in &lt;code&gt;row&lt;/code&gt;, and in the correct order.</source>
          <target state="translated">모든 열 / 셀은 &lt;code&gt;row&lt;/code&gt; 에 올바른 순서로 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0be30f1a42f2631f8ace11fb5382afc231e58aff" translate="yes" xml:space="preserve">
          <source>All concepts described above for OpenGL and GLSL apply to Direct3D and HLSL as well. There are however a number of notable practical differences, which are the following:</source>
          <target state="translated">OpenGL 및 GLSL에 대해 위에서 설명한 모든 개념은 Direct3D 및 HLSL에도 적용됩니다. 그러나 다음과 같은 여러 가지 실질적인 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b637d557837c893f37be55fe90c64429e32ef97" translate="yes" xml:space="preserve">
          <source>All controls exposed can be created with nothing but a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; instance being present</source>
          <target state="translated">&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 인스턴스 만 있으면 노출 된 모든 컨트롤을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="244c69f652526a268ad082597223778b9b788ddb" translate="yes" xml:space="preserve">
          <source>All controls, except non-interactive indicators, do not let clicks and touches through to items below them. For example, the &lt;code&gt;console.log()&lt;/code&gt; call in the example below will never be executed when clicking on the Pane, because the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; is below it in the scene:</source>
          <target state="translated">비 대화식 표시기를 제외한 모든 컨트롤은 그 아래의 항목을 클릭하거나 터치 할 수 없습니다. 예를 들어, 아래 예제에서 &lt;code&gt;console.log()&lt;/code&gt; 호출 은 장면에서 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 가 그 아래에 있기 때문에 Pane을 클릭 할 때 실행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="944475dd79cf49c96ea212d8e19dc0a7ca2c4a15" translate="yes" xml:space="preserve">
          <source>All dates strictly between these two years are also representable. Note, however, that the Gregorian Calendar has no year zero.</source>
          <target state="translated">이 2 년 사이의 모든 날짜도 표시 가능합니다. 그러나 그레고리력에는 0 년이 없습니다.</target>
        </trans-unit>
        <trans-unit id="41f2991bab257c59650309ad19daaea5b6a353d5" translate="yes" xml:space="preserve">
          <source>All declarations reported through &lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt; or &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt; appear between the startDTD() and &lt;a href=&quot;qxmllexicalhandler#endDTD&quot;&gt;endDTD&lt;/a&gt;() calls.</source>
          <target state="translated">&lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt; 또는 &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler를&lt;/a&gt; 통해보고 된 모든 선언 은 startDTD ()와 &lt;a href=&quot;qxmllexicalhandler#endDTD&quot;&gt;endDTD&lt;/a&gt; () 호출 사이에 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="918d14240a4387bc538f50853e8ae22a2ca5fa98" translate="yes" xml:space="preserve">
          <source>All declarations reported through QXmlDTDHandler or QXmlDeclHandler appear between the startDTD() and &lt;a href=&quot;qxmllexicalhandler#endDTD&quot;&gt;endDTD&lt;/a&gt;() calls.</source>
          <target state="translated">QXmlDTDHandler 또는 QXmlDeclHandler를 통해보고 된 모든 선언은 startDTD () 및 &lt;a href=&quot;qxmllexicalhandler#endDTD&quot;&gt;endDTD&lt;/a&gt; () 호출 사이에 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="4885ddb0cf8c65aade0b449cf9320d0d2760ed4f" translate="yes" xml:space="preserve">
          <source>All dependencies required to run the server are in the system path (or in the path used by the calling environment; note that Visual Studio has its own set of environment variables listed in the Tools|Options|Directories dialog).</source>
          <target state="translated">서버를 실행하는 데 필요한 모든 종속성은 시스템 경로 (또는 호출 환경에서 사용하는 경로)에 있습니다. Visual Studio에는 Tools | Options | Directories 대화 상자에 나열된 고유 한 환경 변수 세트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="69d6e51e5d0dd6ba8a2170fc62cf2ef3effed133" translate="yes" xml:space="preserve">
          <source>All derivatives of &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;, including &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, and &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; (all item view classes), support scrollable backgrounds using &lt;a href=&quot;#background-attachment-prop&quot;&gt;background-attachment&lt;/a&gt;. Setting the background-attachment to &lt;code&gt;fixed&lt;/code&gt; provides a background-image that does not scroll with the viewport. Setting the background-attachment to &lt;code&gt;scroll&lt;/code&gt;, scrolls the background-image when the scroll bars move.</source>
          <target state="translated">&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; 및 &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; (모든 항목 뷰 클래스)를 포함하여 &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea의&lt;/a&gt; 모든 파생물은 &lt;a href=&quot;#background-attachment-prop&quot;&gt;background-attachment를&lt;/a&gt; 사용하여 스크롤 가능한 배경을 지원 합니다 . 배경 부착을 &lt;code&gt;fixed&lt;/code&gt; 설정하면 뷰포트와 함께 스크롤되지 않는 배경 이미지가 제공됩니다. background-attachment를 &lt;code&gt;scroll&lt;/code&gt; 으로 설정하면 스크롤 막대가 움직일 때 배경 이미지가 스크롤됩니다.</target>
        </trans-unit>
        <trans-unit id="a495e7dafaf82cdb22f269dc45e31a31f87a9bf4" translate="yes" xml:space="preserve">
          <source>All derivatives of &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;, including &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, and &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; (all item view classes), support scrollable backgrounds using &lt;a href=&quot;stylesheet-reference#background-attachment-prop&quot;&gt;background-attachment&lt;/a&gt;. Setting the background-attachment to &lt;code&gt;fixed&lt;/code&gt; provides a background-image that does not scroll with the viewport. Setting the background-attachment to &lt;code&gt;scroll&lt;/code&gt;, scrolls the background-image when the scroll bars move.</source>
          <target state="translated">All derivatives of &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;, including &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, and &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; (all item view classes), support scrollable backgrounds using &lt;a href=&quot;stylesheet-reference#background-attachment-prop&quot;&gt;background-attachment&lt;/a&gt;. Setting the background-attachment to &lt;code&gt;fixed&lt;/code&gt; provides a background-image that does not scroll with the viewport. Setting the background-attachment to &lt;code&gt;scroll&lt;/code&gt; , scrolls the background-image when the scroll bars move.</target>
        </trans-unit>
        <trans-unit id="197d9b1f1a83439237d062921f3e1d6f5981ce84" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic requests towards the same remote device are serialised. A queue is employed when issuing multiple requests at the same time. The queue does not eliminate duplicated read requests for the same characteristic.</source>
          <target state="translated">동일한 원격 장치에 대한 모든 설명자 및 특성 요청이 직렬화됩니다. 여러 요청을 동시에 발행 할 때 큐가 사용됩니다. 큐는 동일한 특성에 대한 중복 된 읽기 요청을 제거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="920ab9a3004bf529704002449bc30aadf848ef42" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic requests towards the same remote device are serialised. A queue is employed when issuing multiple requests at the same time. The queue does not eliminate duplicated read requests for the same descriptor.</source>
          <target state="translated">동일한 원격 장치에 대한 모든 설명자 및 특성 요청이 직렬화됩니다. 여러 요청을 동시에 발행 할 때 큐가 사용됩니다. 큐는 동일한 디스크립터에 대한 중복 된 읽기 요청을 제거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c090e02b8cf82526a0ff17d4940fbb9d53711ca2" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic requests towards the same remote device are serialised. A queue is employed when issuing multiple write requests at the same time. The queue does not eliminate duplicated write requests for the same descriptor. For example, if the same descriptor is set to the value A and immediately afterwards to B, the two write request are executed in the given order.</source>
          <target state="translated">동일한 원격 장치에 대한 모든 설명자 및 특성 요청이 직렬화됩니다. 여러 쓰기 요청을 동시에 발행 할 때 큐가 사용됩니다. 큐는 동일한 디스크립터에 대한 중복 된 쓰기 요청을 제거하지 않습니다. 예를 들어, 동일한 디스크립터가 값 A로 설정되고 바로 직후 B로 설정되면 두 개의 쓰기 요청이 지정된 순서로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="f33c67b5fc9f3167949ee217c65405e54413e095" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic write requests towards the same remote device are serialised. A queue is employed when issuing multiple write requests at the same time. The queue does not eliminate duplicated write requests for the same characteristic. For example, if the same descriptor is set to the value A and immediately afterwards to B, the two write request are executed in the given order.</source>
          <target state="translated">동일한 원격 장치에 대한 모든 디스크립터 및 특성 쓰기 요청이 직렬화됩니다. 여러 쓰기 요청을 동시에 발행 할 때 큐가 사용됩니다. 큐는 동일한 특성에 대한 중복 된 쓰기 요청을 제거하지 않습니다. 예를 들어, 동일한 디스크립터가 값 A로 설정되고 바로 직후 B로 설정되면 두 개의 쓰기 요청이 지정된 순서로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="562b1d6ea074f881acd7fae5d4b160bc4495ad01" translate="yes" xml:space="preserve">
          <source>All desktop environments that implement the &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&quot;&gt;freedesktop.org D-Bus StatusNotifierItem specification&lt;/a&gt;, including recent versions of KDE and Unity.</source>
          <target state="translated">최신 버전의 KDE 및 Unity를 포함 하여 &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&quot;&gt;freedesktop.org D-Bus StatusNotifierItem 사양&lt;/a&gt; 을 구현하는 모든 데스크탑 환경 .</target>
        </trans-unit>
        <trans-unit id="04835be53c604b2459a0ef5ee507e9c066d9a6e3" translate="yes" xml:space="preserve">
          <source>All details fetched during search</source>
          <target state="translated">검색 중에 가져온 모든 세부 사항</target>
        </trans-unit>
        <trans-unit id="96c2b48dcfd5e1cf5e6c2145b9f423d1ae133310" translate="yes" xml:space="preserve">
          <source>All dialogs created while this attribute is set to true won't use the native dialogs provided by the platform. This value was added in Qt 5.7.</source>
          <target state="translated">이 속성이 true로 설정된 동안 작성된 모든 대화 상자는 플랫폼에서 제공하는 기본 대화 상자를 사용하지 않습니다. 이 값은 Qt 5.7에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="a5f7fddc727945f093f01840598a07fcff5a3227" translate="yes" xml:space="preserve">
          <source>All elements are set to zero except &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt; (specifying the scale) and &lt;code&gt;m33&lt;/code&gt; which are set to 1.</source>
          <target state="translated">1로 설정된 &lt;code&gt;m11&lt;/code&gt; 및 &lt;code&gt;m22&lt;/code&gt; (스케일 지정) 및 &lt;code&gt;m33&lt;/code&gt; 을 제외한 모든 요소가 0 으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="cacef9f7c4e57d5ee3e754166626d2e56f5aef1e" translate="yes" xml:space="preserve">
          <source>All elements are set to zero except &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt; (specifying the scale), which are set to 1.</source>
          <target state="translated">&lt;code&gt;m11&lt;/code&gt; 및 &lt;code&gt;m22&lt;/code&gt; (스케일 지정)를 제외한 모든 요소는 0 으로 설정되며 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="36528285495ab368a7b369eaafcf97a3cf195c61" translate="yes" xml:space="preserve">
          <source>All elements have the same bounding rectangles in the Plastique style as well as the other built-in Qt styles.</source>
          <target state="translated">모든 요소는 Plastique 스타일과 다른 내장 Qt 스타일에서 동일한 경계 사각형을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="81bf3a60279731b99b2e8a41f8fc447f5c051cf9" translate="yes" xml:space="preserve">
          <source>All elements of &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; are used for the comparison.</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat의&lt;/a&gt; 모든 요소가 비교에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fd02533324cad0cf0c15e46ca3479cd181981065" translate="yes" xml:space="preserve">
          <source>All elements that the user can interact with should have focusable set to &lt;code&gt;true&lt;/code&gt; and set &lt;code&gt;focus&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; when they have the focus. This is important even for applications that run on touch-only devices since screen readers often implement a virtual focus that can be moved from item to item.</source>
          <target state="translated">사용자와 상호 작용 할 수있는 모든 요소에 포커스를 설정해야 &lt;code&gt;true&lt;/code&gt; 및 설정 &lt;code&gt;focus&lt;/code&gt; 에 &lt;code&gt;true&lt;/code&gt; 그들은 초점이있을 때. 화면 판독기는 종종 항목마다 이동할 수있는 가상 초점을 구현하기 때문에 터치 전용 장치에서 실행되는 응용 프로그램에서도 중요합니다.</target>
        </trans-unit>
        <trans-unit id="e5e4df6067bd937288d219803ae1e1f833646dbc" translate="yes" xml:space="preserve">
          <source>All entities that intersect the picking ray are picked.</source>
          <target state="translated">피킹 광선과 교차하는 모든 도면 요소가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="58970538f694f76bb9039b2d59566e8f13dffc0b" translate="yes" xml:space="preserve">
          <source>All event filters for this object are automatically removed when this object is destroyed.</source>
          <target state="translated">이 객체가 파괴되면이 객체에 대한 모든 이벤트 필터가 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="95d0b5b8d24f482df57484ffd39af5db803b5ef8" translate="yes" xml:space="preserve">
          <source>All events. Note that &lt;a href=&quot;qevent#Type-enum&quot;&gt;DeferredDelete&lt;/a&gt; events are processed specially. See &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject::deleteLater&lt;/a&gt;() for more details.</source>
          <target state="translated">모든 이벤트. 참고 &lt;a href=&quot;qevent#Type-enum&quot;&gt;DeferredDelete의&lt;/a&gt; 이벤트가 특별히 처리됩니다. 자세한 내용은 &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject :: deleteLater&lt;/a&gt; ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="82247f42c1a5367c9f53cf0c28401138d3a12426" translate="yes" xml:space="preserve">
          <source>All examples</source>
          <target state="translated">모든 예</target>
        </trans-unit>
        <trans-unit id="02d15c774c2a6adde57abb463de29b65bf7e9eb9" translate="yes" xml:space="preserve">
          <source>All features which are required for QtWidget applications, and in addition the following:</source>
          <target state="translated">QtWidget 애플리케이션에 필요한 모든 기능 및 다음과 같은 기능 :</target>
        </trans-unit>
        <trans-unit id="c065b7c4fed963a87c68cc4b67822578a42c0ce5" translate="yes" xml:space="preserve">
          <source>All fields with a size policy that allows them to grow will grow to fill the available space. This is the default policy for most styles.</source>
          <target state="translated">성장할 수있는 크기 정책을 가진 모든 필드는 사용 가능한 공간을 채우기 위해 커집니다. 대부분의 스타일에 대한 기본 정책입니다.</target>
        </trans-unit>
        <trans-unit id="741f310ac34be5c0614276a5f3d9d568a8b4f89b" translate="yes" xml:space="preserve">
          <source>All flags are disabled by default.</source>
          <target state="translated">모든 플래그는 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="da21416c5c0799ee47f2a050e5d88e44dce44147" translate="yes" xml:space="preserve">
          <source>All floating point numbers in the data stream have 32-bit precision.</source>
          <target state="translated">데이터 스트림의 모든 부동 소수점 숫자는 32 비트 정밀도입니다.</target>
        </trans-unit>
        <trans-unit id="b0bc3b1dd5e570544cb37e08053462497c6c79b2" translate="yes" xml:space="preserve">
          <source>All floating point numbers in the data stream have 64-bit precision.</source>
          <target state="translated">데이터 스트림의 모든 부동 소수점 숫자는 64 비트 정밀도입니다.</target>
        </trans-unit>
        <trans-unit id="b9a2d991f0c9996f6acc587262fb73caf07fb316" translate="yes" xml:space="preserve">
          <source>All following alphabetic characters are lowercased.</source>
          <target state="translated">다음의 모든 알파벳 문자는 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="e1128898a5ac2053f4a827d6f1a04f55b8c02f58" translate="yes" xml:space="preserve">
          <source>All following alphabetic characters are uppercased.</source>
          <target state="translated">다음의 모든 알파벳 문자는 대문자입니다.</target>
        </trans-unit>
        <trans-unit id="61e929baa5f129651a805721afd32452b1197340" translate="yes" xml:space="preserve">
          <source>All frames are cached.</source>
          <target state="translated">모든 프레임이 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="45caffe4107c8a70c756e3dd52805a26fbbd93d2" translate="yes" xml:space="preserve">
          <source>All functions except &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;() treat null bit arrays the same as empty bit arrays; for example, &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt;() compares equal to &lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt;(0). We recommend that you always use &lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() and avoid &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt; ()을 제외한 모든 함수 는 널 비트 배열을 빈 비트 배열과 동일하게 취급합니다. 예를 들어, &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; ()는 &lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; (0)와 같습니다. 항상 &lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 사용하고 &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt; ()을 피하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a83e98fe86c66db8348fb72218831e0f33f55d07" translate="yes" xml:space="preserve">
          <source>All functions except &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;() treat null bit arrays the same as empty bit arrays; for example, QBitArray() compares equal to QBitArray(0). We recommend that you always use &lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() and avoid &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;().</source>
          <target state="translated">All functions except &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;() treat null bit arrays the same as empty bit arrays; for example, QBitArray() compares equal to QBitArray(0). We recommend that you always use &lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() and avoid &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="3763439dad83b23da7b0342b27dfe9dcbe912c5e" translate="yes" xml:space="preserve">
          <source>All functions except &lt;a href=&quot;qbytearray#isNull&quot;&gt;isNull&lt;/a&gt;() treat null byte arrays the same as empty byte arrays. For example, &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;() returns a valid pointer (</source>
          <target state="translated">&lt;a href=&quot;qbytearray#isNull&quot;&gt;isNull&lt;/a&gt; ()을 제외한 모든 함수 는 널 바이트 배열을 빈 바이트 배열과 동일하게 취급합니다. 예를 들어 &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt; ()는 유효한 포인터 (</target>
        </trans-unit>
        <trans-unit id="3159d862a90239a0e1d7f5e6b65aa717faa78153" translate="yes" xml:space="preserve">
          <source>All functions except &lt;a href=&quot;qstring#isNull&quot;&gt;isNull&lt;/a&gt;() treat null strings the same as empty strings. For example, &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;().&lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;() returns a valid pointer (</source>
          <target state="translated">&lt;a href=&quot;qstring#isNull&quot;&gt;isNull&lt;/a&gt; ()을 제외한 모든 함수 는 null 문자열을 빈 문자열과 동일하게 취급합니다. 예를 들면 &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt; ()입니다. &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt; ()는 유효한 포인터 (</target>
        </trans-unit>
        <trans-unit id="437c7721db25e27b0b868c3f40d1303bffea4a07" translate="yes" xml:space="preserve">
          <source>All hash tables are vulnerable to a particular class of denial of service attacks, in which the attacker carefully pre-computes a set of different keys that are going to be hashed in the same bucket of a hash table (or even have the very same hash value). The attack aims at getting the worst-case algorithmic behavior (O(n) instead of amortized O(1), see &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for the details) when the data is fed into the table.</source>
          <target state="translated">모든 해시 테이블은 특정 클래스의 서비스 거부 공격에 취약합니다.이 경우 공격자는 해시 테이블의 동일한 버킷에서 해시 될 다른 키 집합을 신중하게 미리 계산하거나 심지어 동일한 해시를 갖습니다. 값). 공격은 데이터가 테이블에 공급 될 때 최악의 알고리즘 동작 (O (n) 대신 상각 된 O (1) 대신 세부 정보는 &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;알고리즘 복잡성&lt;/a&gt; 을 참조)을 얻는 것을 목표로 합니다.</target>
        </trans-unit>
        <trans-unit id="beb63a2be05ec664b7a5e51720c8932e0c5c6b52" translate="yes" xml:space="preserve">
          <source>All indexes will be expanded to span columns.</source>
          <target state="translated">모든 인덱스가 열에 걸쳐 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="9b64c9a7b90a1b66ec430b5490ae2a2c52f57ba6" translate="yes" xml:space="preserve">
          <source>All indexes will be expanded to span rows.</source>
          <target state="translated">모든 인덱스가 행으로 확장되도록 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="38314b6ecf20083d0cfdc06b72320b013eef34ff" translate="yes" xml:space="preserve">
          <source>All interactive elements</source>
          <target state="translated">모든 대화식 요소</target>
        </trans-unit>
        <trans-unit id="59caf15741c62c34f833af915149471e52e40724" translate="yes" xml:space="preserve">
          <source>All interfaces are managed by an internal cache and should not be deleted.</source>
          <target state="translated">모든 인터페이스는 내부 캐시로 관리되며 삭제해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cc9f6b035c61d1eea4399117daaf216c47b3a046" translate="yes" xml:space="preserve">
          <source>All item models are based on the &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; class. This class defines an interface that is used by views and delegates to access data. The data itself does not have to be stored in the model; it can be held in a data structure or repository provided by a separate class, a file, a database, or some other application component.</source>
          <target state="translated">모든 아이템 모델은 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 클래스를 기반으로합니다 . 이 클래스는 뷰 및 대리자가 데이터에 액세스하는 데 사용하는 인터페이스를 정의합니다. 데이터 자체는 모델에 저장 될 필요가 없습니다. 별도의 클래스, 파일, 데이터베이스 또는 다른 응용 프로그램 구성 요소에서 제공하는 데이터 구조 또는 리포지토리에 보관할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebf1182ed3068f5f678ab1c5edbf56d9ae85fe92" translate="yes" xml:space="preserve">
          <source>All items are drawn in a defined, stable order, and this same order decides which items will receive mouse input first when you click on the scene. Normally you don't have to worry about sorting, as the items follow a &quot;natural order&quot;, following the logical structure of the scene.</source>
          <target state="translated">모든 항목은 정의 된 안정된 순서로 그려지며, 동일한 순서로 장면을 클릭 할 때 마우스 입력을받을 항목을 결정합니다. 일반적으로 장면의 논리적 구조에 따라 항목이 &quot;자연 순서&quot;를 따르므로 정렬에 대해 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d7a5187ebc31c5def7d82916a830b08918ee1262" translate="yes" xml:space="preserve">
          <source>All items are guaranteed to be valid during the emission of the &lt;a href=&quot;qml-qtwebengine-webengineprofile#downloadRequested-signal&quot;&gt;downloadRequested&lt;/a&gt; signal. If &lt;a href=&quot;qml-qtwebengine-webenginedownloaditem#accept-method&quot;&gt;accept()&lt;/a&gt; is</source>
          <target state="translated">&lt;a href=&quot;qml-qtwebengine-webengineprofile#downloadRequested-signal&quot;&gt;downloadRequested&lt;/a&gt; 신호 가 방출되는 동안 모든 항목이 유효합니다 . 만약 &lt;a href=&quot;qml-qtwebengine-webenginedownloaditem#accept-method&quot;&gt;) (동의&lt;/a&gt; 하다</target>
        </trans-unit>
        <trans-unit id="bc7b08c3ec25d9e76a44bcdbb8279471b533c18a" translate="yes" xml:space="preserve">
          <source>All items are guaranteed to be valid during the emission of the &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;downloadRequested&lt;/a&gt; signal. If &lt;a href=&quot;qwebenginedownloaditem#accept&quot;&gt;accept&lt;/a&gt;() is</source>
          <target state="translated">&lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;downloadRequested&lt;/a&gt; 신호 가 방출되는 동안 모든 항목이 유효합니다 . 만약 &lt;a href=&quot;qwebenginedownloaditem#accept&quot;&gt;동의&lt;/a&gt; 입니다) (</target>
        </trans-unit>
        <trans-unit id="e169264bf7770b3eb45c9c6c5cf73b517d3ccfc5" translate="yes" xml:space="preserve">
          <source>All items have a default state that defines the default configuration of objects and property values. New states can be defined by adding State items to the &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property to allow items to switch between different configurations. These configurations can, for example, be used to apply different sets of property values or execute different scripts.</source>
          <target state="translated">모든 항목의 기본 상태는 객체 및 속성 값의 기본 구성을 정의합니다. 새로운 상태는 주립 항목을 추가하여 정의 할 수 있습니다 &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;상태의&lt;/a&gt; 항목이 다른 구성 사이를 전환 할 수 있도록하는 속성입니다. 예를 들어, 이러한 구성을 사용하면 다른 속성 값 집합을 적용하거나 다른 스크립트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="877be2faa0a69b22f2f031f4e6640f92ae0035c5" translate="yes" xml:space="preserve">
          <source>All items returned by create are added to the &lt;a href=&quot;qml-qtqml-models-delegatemodel#persistedItems-prop&quot;&gt;persistedItems&lt;/a&gt; group. Items in this group remain instantiated when not referenced by any view.</source>
          <target state="translated">create에 의해 반환 된 모든 항목이 &lt;a href=&quot;qml-qtqml-models-delegatemodel#persistedItems-prop&quot;&gt;persistedItems&lt;/a&gt; 그룹에 추가됩니다 . 이 그룹의 항목은 어떤 보기로도 참조되지 않은 경우 인스턴스화 된 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0eb7c4252b8824831224bdbe27bccff0b55c06ef" translate="yes" xml:space="preserve">
          <source>All items should have the text and icon properites set, or have the &lt;a href=&quot;qmactoolbaritem#standardItem-prop&quot;&gt;standardItem&lt;/a&gt; property set to something else than &lt;a href=&quot;qmactoolbaritem#StandardItem-enum&quot;&gt;NoStandardItem&lt;/a&gt;.</source>
          <target state="translated">모든 항목에는 텍스트 및 아이콘 속성이 설정되어 있거나 &lt;a href=&quot;qmactoolbaritem#standardItem-prop&quot;&gt;standardItem&lt;/a&gt; 속성이 &lt;a href=&quot;qmactoolbaritem#StandardItem-enum&quot;&gt;NoStandardItem&lt;/a&gt; 이외의 것으로 설정되어 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="1e5b7c4d02954cc0b2f57389bda2724c3a80fe55" translate="yes" xml:space="preserve">
          <source>All keycodes</source>
          <target state="translated">모든 키 코드</target>
        </trans-unit>
        <trans-unit id="8c3d759c867ea09debefd6252595d9da1db2d495" translate="yes" xml:space="preserve">
          <source>All layers; this value represents a combination of all three layers.</source>
          <target state="translated">모든 층; 이 값은 세 계층 모두의 조합을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="edd97dfd60bb0e2cc6b7bb6e09a371a57a05c2bd" translate="yes" xml:space="preserve">
          <source>All menubars created while this attribute is set to true won't be used as a native menubar (e.g, the menubar at the top of the main screen on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;).</source>
          <target state="translated">이 속성이 true로 설정된 동안 작성된 모든 메뉴 막대는 기본 메뉴 막대 (예 : &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 기본 화면 상단의 메뉴 막대)로 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="bb0d07a8d1d465954eef56274fce02b94052c384" translate="yes" xml:space="preserve">
          <source>All menubars created while this attribute is set to true won't be used as a native menubar (e.g, the menubar at the top of the main screen on macOS).</source>
          <target state="translated">All menubars created while this attribute is set to true won't be used as a native menubar (e.g, the menubar at the top of the main screen on macOS).</target>
        </trans-unit>
        <trans-unit id="3d9c612cf3751e33b4721bd03f85a683cd295af0" translate="yes" xml:space="preserve">
          <source>All messages can also be accessed through the Qt WebEngine developer tools.</source>
          <target state="translated">모든 메시지는 Qt WebEngine 개발자 도구를 통해 액세스 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="969a92d3f964a309116ab37f4a3a66f4d3a05b73" translate="yes" xml:space="preserve">
          <source>All mouse events are delivered to the current</source>
          <target state="translated">모든 마우스 이벤트가 현재로 전달됩니다</target>
        </trans-unit>
        <trans-unit id="9cad2bfc04b1cc1ed70716d22c2463f661d80eb5" translate="yes" xml:space="preserve">
          <source>All mouse events that are not accepted by the application will be translated to touch events instead.</source>
          <target state="translated">응용 프로그램에서 승인하지 않은 모든 마우스 이벤트는 대신 터치 이벤트로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="c243072fcf018c6ce627343099a8f2b1c7e3d6c8" translate="yes" xml:space="preserve">
          <source>All new items that are instantiated from the delegate are parented to the &lt;a href=&quot;qml-qtquick-flickable#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; with the &lt;code&gt;z&lt;/code&gt; value, &lt;code&gt;1&lt;/code&gt;. You can add your own items inside the Tableview, as child items of the Flickable. By controlling their &lt;code&gt;z&lt;/code&gt; value, you can make them be on top of or underneath the table items.</source>
          <target state="translated">All new items that are instantiated from the delegate are parented to the &lt;a href=&quot;qml-qtquick-flickable#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; with the &lt;code&gt;z&lt;/code&gt; value, &lt;code&gt;1&lt;/code&gt; . You can add your own items inside the Tableview, as child items of the Flickable. By controlling their &lt;code&gt;z&lt;/code&gt; value, you can make them be on top of or underneath the table items.</target>
        </trans-unit>
        <trans-unit id="2148c1c72c06379653b21a8a3257da9c7ff64b81" translate="yes" xml:space="preserve">
          <source>All object types are returned as a &lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt;.</source>
          <target state="translated">모든 객체 유형은 &lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="914f8f95115910727cd6fa59c619c2152262b48d" translate="yes" xml:space="preserve">
          <source>All object types are returned as a QAndroidJniObject.</source>
          <target state="translated">All object types are returned as a QAndroidJniObject.</target>
        </trans-unit>
        <trans-unit id="e03f1d1c2e079cc1083d55ead14517fb609e30cd" translate="yes" xml:space="preserve">
          <source>All objects and arrays are copied to the &lt;code&gt;message&lt;/code&gt;. With the exception of &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; objects, any modifications by the other thread to an object passed in &lt;code&gt;message&lt;/code&gt; will not be reflected in the original object.</source>
          <target state="translated">모든 객체와 배열이 &lt;code&gt;message&lt;/code&gt; 복사됩니다 . &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; 객체를 제외 하고 다른 스레드가 &lt;code&gt;message&lt;/code&gt; 전달 된 객체를 수정 하면 원래 객체에 반영되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b9f601f22ae8db57348d5b8fd16670ded486cfa3" translate="yes" xml:space="preserve">
          <source>All objects and arrays are copied to the &lt;code&gt;message&lt;/code&gt;. With the exception of ListModel objects, any modifications by the other thread to an object passed in &lt;code&gt;message&lt;/code&gt; will not be reflected in the original object.</source>
          <target state="translated">All objects and arrays are copied to the &lt;code&gt;message&lt;/code&gt; . With the exception of ListModel objects, any modifications by the other thread to an object passed in &lt;code&gt;message&lt;/code&gt; will not be reflected in the original object.</target>
        </trans-unit>
        <trans-unit id="d54627ccead45fb23fae2555e7bf2d49e26064c0" translate="yes" xml:space="preserve">
          <source>All objects are meant to be configured by a common registry (see also &lt;a href=&quot;qloggingcategory#configuring-categories&quot;&gt;Configuring Categories&lt;/a&gt;). Different objects can also represent the same category. It is therefore not recommended to export objects across module boundaries, nor to manipulate the objects directly, nor to inherit from &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;.</source>
          <target state="translated">모든 객체는 공통 레지스트리로 구성됩니다 ( &lt;a href=&quot;qloggingcategory#configuring-categories&quot;&gt;범주 구성&lt;/a&gt; 참조 ). 다른 객체도 같은 범주를 나타낼 수 있습니다. 따라서 모듈 경계를 넘어 객체를 내보내거나 객체를 직접 조작하거나 &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; 에서 상속하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="86560f97168ae4545fcaa89ba4b39c61c214ec4b" translate="yes" xml:space="preserve">
          <source>All objects are meant to be configured by a common registry, as described in &lt;a href=&quot;qloggingcategory#configuring-categories&quot;&gt;Configuring Categories&lt;/a&gt;. Different objects can also represent the same category. Therefore, it's &lt;b&gt;not&lt;/b&gt; recommended to export objects across module boundaries, to manipulate the objects directly, or to inherit from QLoggingCategory.</source>
          <target state="translated">All objects are meant to be configured by a common registry, as described in &lt;a href=&quot;qloggingcategory#configuring-categories&quot;&gt;Configuring Categories&lt;/a&gt;. Different objects can also represent the same category. Therefore, it's &lt;b&gt;not&lt;/b&gt; recommended to export objects across module boundaries, to manipulate the objects directly, or to inherit from QLoggingCategory.</target>
        </trans-unit>
        <trans-unit id="2459c2113544e07123e2ac3f5088777efbcd1e23" translate="yes" xml:space="preserve">
          <source>All objects provide a string for &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible::Name&lt;/a&gt;.</source>
          <target state="translated">모든 객체는 &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible :: Name&lt;/a&gt; 의 문자열을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="8653eda61e7fc673c3b5bcaeeae56c8df3f96ae2" translate="yes" xml:space="preserve">
          <source>All objects provide this information about their children.</source>
          <target state="translated">모든 개체는 자녀에 대한이 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="efabe50ebbbdb2f5cbdc6d6cdad80c4ce4851da6" translate="yes" xml:space="preserve">
          <source>All objects provide this information.</source>
          <target state="translated">모든 객체가이 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="34fb5f85c7ff5b7b9d7a001af6c8e974ef2f133d" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt;. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt;. In addition, &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; provides several &lt;a href=&quot;qbytearraylist#join&quot;&gt;join&lt;/a&gt;() methods for concatenating the list into a single &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 의 모든 기능은 &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; 에도 적용됩니다 . 예를 들어, &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 사용 하여 목록이 비어 있는지 테스트 할 수 있으며 &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt; (), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt; (), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt; (), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt; (), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt; (), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt; (), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt; () 와 같은 함수를 호출 할 수 있습니다. &lt;a href=&quot;qlist#removeOne&quot;&gt;QByteArrayList&lt;/a&gt; 를 수정하려면 , &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt; () 및 removeOne ()을 사용 &lt;a href=&quot;qbytearraylist&quot;&gt;하십시오&lt;/a&gt; . 또한 &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; 는 목록을 단일 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 로 연결하기위한 몇 가지 &lt;a href=&quot;qbytearraylist#join&quot;&gt;join&lt;/a&gt; () 메소드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="749f1ecd9ab7fb58081c317996f1771bdf45be09" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;. In addition, &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; provides a few convenience functions that make handling lists of strings easier:</source>
          <target state="translated">&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 의 모든 기능은 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 에도 적용됩니다 . 예를 들어, &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 사용 하여 목록이 비어 있는지 테스트 할 수 있으며 &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt; (), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt; (), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt; (), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt; (), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt; (), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt; (), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt; () 와 같은 함수를 호출 할 수 있습니다. , &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt; () 및 &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt; ()을 사용하여 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 를 수정하십시오 . 또한 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 는 문자열 목록을보다 쉽게 ​​처리 할 수있는 몇 가지 편리한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ec9e97bee249cac844c4d56ef0f0e5a29587cb9b" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to QByteArrayList. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a QByteArrayList. In addition, QByteArrayList provides several &lt;a href=&quot;qbytearraylist#join&quot;&gt;join&lt;/a&gt;() methods for concatenating the list into a single &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="translated">All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to QByteArrayList. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a QByteArrayList. In addition, QByteArrayList provides several &lt;a href=&quot;qbytearraylist#join&quot;&gt;join&lt;/a&gt;() methods for concatenating the list into a single &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aaf23217bf4d2be7ce6108df2cacfc0582e4df0c" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to QStringList. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a QStringList. In addition, QStringList provides a few convenience functions that make handling lists of strings easier:</source>
          <target state="translated">All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to QStringList. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a QStringList. In addition, QStringList provides a few convenience functions that make handling lists of strings easier:</target>
        </trans-unit>
        <trans-unit id="6e9a09ad53eed42eba20e9cedcb014351b361bfa" translate="yes" xml:space="preserve">
          <source>All of an item's geometric information is based on its local coordinate system. The item's position, &lt;a href=&quot;qgraphicsitem#pos&quot;&gt;pos&lt;/a&gt;(), is the only function that does not operate in local coordinates, as it returns a position in parent coordinates. &lt;a href=&quot;graphicsview#the-graphics-view-coordinate-system&quot;&gt;The Graphics View Coordinate System&lt;/a&gt; describes the coordinate system in detail.</source>
          <target state="translated">아이템의 모든 기하학적 정보는 로컬 좌표계를 기반으로합니다. 항목의 위치 &lt;a href=&quot;qgraphicsitem#pos&quot;&gt;pos&lt;/a&gt; ()는 위치를 부모 좌표로 반환하기 때문에 로컬 좌표에서 작동하지 않는 유일한 함수입니다. &lt;a href=&quot;graphicsview#the-graphics-view-coordinate-system&quot;&gt;기하 창 좌표 시스템&lt;/a&gt; 은 좌표 시스템을 자세하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="185a10ac95b26db04f2778e65afd8d30b128b308" translate="yes" xml:space="preserve">
          <source>All of the QML view classes, such as &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;, behave in a similar manner to allow key handling in their respective delegates.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt; 와 같은 모든 QML 뷰 클래스 는 각각의 델리게이트에서 키를 처리 할 수 ​​있도록 유사한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="58cb046eba5cb756bc7b0fe0fbe3ee3e33959e3b" translate="yes" xml:space="preserve">
          <source>All of the Qt D-Bus types (primitives and user-defined alike) can be used to send and receive messages of all types over the bus.</source>
          <target state="translated">모든 Qt D- 버스 유형 (프리미티브 및 사용자 정의 모두)을 사용하여 버스를 통해 모든 유형의 메시지를 보내고받을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56df8feaf73f87c54526814abcb53ffc118e747e" translate="yes" xml:space="preserve">
          <source>All of the above accept just the first value, so you must assign to it just one value that will be used throughout your project file. There are two variables that accept a list of values:</source>
          <target state="translated">위의 모든 것은 첫 번째 값만 허용하므로 프로젝트 파일 전체에서 사용될 하나의 값만 지정해야합니다. 값 목록을 허용하는 두 가지 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd29ae7d374de10b6d31367833f19fc55b2a5b37" translate="yes" xml:space="preserve">
          <source>All of the above actions (apart from cloning) can be accessed via both the &lt;b&gt;Edit&lt;/b&gt; menu and the form's context menu. These menus also provide funcitons for laying out objects as well as a &lt;b&gt;Select All&lt;/b&gt; function to select all the objects on the form.</source>
          <target state="translated">위의 모든 작업 (복제 제외)은 &lt;b&gt;편집&lt;/b&gt; 메뉴와 양식의 상황에 맞는 메뉴 를 통해 액세스 할 수 있습니다 . 이 메뉴는 잘 같은 물체를 배치하기위한 funcitons을 제공 &lt;b&gt;선택 모든&lt;/b&gt; 형태의 모든 개체를 선택하는 기능.</target>
        </trans-unit>
        <trans-unit id="2f65ec777cfc77dea48e297e16f8efe62e9bc992" translate="yes" xml:space="preserve">
          <source>All of the above features. This enum value is usually used as a bit mask.</source>
          <target state="translated">위의 모든 기능 이 열거 형 값은 일반적으로 비트 마스크로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e963123ae4ee166de73fb6fa8c1a51e4336a12f5" translate="yes" xml:space="preserve">
          <source>All of the above.</source>
          <target state="translated">무엇보다도.</target>
        </trans-unit>
        <trans-unit id="c504f575c5cdd72809591f07fd32e9501888d8ea" translate="yes" xml:space="preserve">
          <source>All of the buttons are checked.</source>
          <target state="translated">모든 버튼이 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="c9cbb490d4eda0eb44d4185c5cd8aac00ef5ad17" translate="yes" xml:space="preserve">
          <source>All of the existing ways to &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;run an application with a specific style&lt;/a&gt; are still supported.</source>
          <target state="translated">&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;특정 스타일&lt;/a&gt; 로 애플리케이션 을 실행하는 기존의 모든 방법 이 계속 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c8983e20a9a510d71d2cf616fbf527e1da8b3f40" translate="yes" xml:space="preserve">
          <source>All of the getter methods in &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; support an optional parameter of type &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::ComponentFormattingOptions&lt;/a&gt;, including &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;(), which dictate how to encode the data in question. Except for &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt;, the returned value must still be considered a percent-encoded string, as there are certain values which cannot be expressed in decoded form (like control characters, byte sequences not decodable to UTF-8). For that reason, the percent character is always represented by the string &quot;%25&quot;.</source>
          <target state="translated">&lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; 의 모든 getter 메소드는 해당 데이터를 인코딩하는 방법을 지시하는 &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt; ()를 포함하여 &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: ComponentFormattingOptions&lt;/a&gt; 유형의 선택적 매개 변수를 지원합니다 . &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: FullyDecoded를&lt;/a&gt; 제외하고 , 리턴 된 값은 디코딩 된 형태로 표현할 수없는 특정 값 (제어 문자, UTF-8로 디코딩 할 수없는 바이트 시퀀스)이 있기 때문에 여전히 퍼센트 인코딩 된 문자열로 간주되어야합니다. 따라서 퍼센트 문자는 항상 문자열 &quot;% 25&quot;로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8043e5c620e71307603b82f5ee5c44a4b85ff73b" translate="yes" xml:space="preserve">
          <source>All of the getter methods in QUrlQuery support an optional parameter of type &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::ComponentFormattingOptions&lt;/a&gt;, including &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;(), which dictate how to encode the data in question. Except for &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt;, the returned value must still be considered a percent-encoded string, as there are certain values which cannot be expressed in decoded form (like control characters, byte sequences not decodable to UTF-8). For that reason, the percent character is always represented by the string &quot;%25&quot;.</source>
          <target state="translated">All of the getter methods in QUrlQuery support an optional parameter of type &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::ComponentFormattingOptions&lt;/a&gt;, including &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;(), which dictate how to encode the data in question. Except for &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt;, the returned value must still be considered a percent-encoded string, as there are certain values which cannot be expressed in decoded form (like control characters, byte sequences not decodable to UTF-8). For that reason, the percent character is always represented by the string &quot;%25&quot;.</target>
        </trans-unit>
        <trans-unit id="479d165e1b275455562e561b427c0649f5ed3836" translate="yes" xml:space="preserve">
          <source>All of these functions have an overload taking a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; as a parameter in order to extract</source>
          <target state="translated">이러한 모든 함수에는 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 추출하기 위해 매개 변수로 사용 하는 과부하 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="caa8d3d9f9fac89cea6dc0db23775ca2f928103d" translate="yes" xml:space="preserve">
          <source>All of these functions have both integer and floating point versions.</source>
          <target state="translated">이러한 모든 함수에는 정수 및 부동 소수점 버전이 있습니다.</target>
        </trans-unit>
        <trans-unit id="819bac1e6d59d7fe33cbc7cb43860375c057db0c" translate="yes" xml:space="preserve">
          <source>All of these problems can typically be solved by the judicious use of virtualisation.</source>
          <target state="translated">All of these problems can typically be solved by the judicious use of virtualisation.</target>
        </trans-unit>
        <trans-unit id="7ce239071ada0bfc3c9b0d9855727ddd7e5c9447" translate="yes" xml:space="preserve">
          <source>All of these would work:</source>
          <target state="translated">이 모든 것이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="877141cb7f03b65a2bb8cd10b404b7e58322edf1" translate="yes" xml:space="preserve">
          <source>All official Qt binary builds use this configuration.</source>
          <target state="translated">All official Qt binary builds use this configuration.</target>
        </trans-unit>
        <trans-unit id="bcf3e606308704965e120675f74ed5666b33b6bf" translate="yes" xml:space="preserve">
          <source>All other change events should be passed on by calling the default implementation of the function.</source>
          <target state="translated">다른 모든 변경 이벤트는 함수의 기본 구현을 호출하여 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="508f3f96cf7f0473212f2cf9085dfc58db3527f9" translate="yes" xml:space="preserve">
          <source>All other characters are regarded as immutable separators</source>
          <target state="translated">All other characters are regarded as immutable separators</target>
        </trans-unit>
        <trans-unit id="4c0e7729a0866b438f4ecf2662393b40858b9495" translate="yes" xml:space="preserve">
          <source>All other classes can only be created by passing an IDispatch interface pointer to the constructor; those classes should however not be created explicitly. Instead, use the appropriate API of already created objects.</source>
          <target state="translated">다른 모든 클래스는 IDispatch 인터페이스 포인터를 생성자에 전달해야만 만들 수 있습니다. 그러나 이러한 클래스는 명시 적으로 작성해서는 안됩니다. 대신 이미 생성 된 객체의 적절한 API를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8d5a37852b7bdacf5d486c2a01ee0ce1e3fbfef7" translate="yes" xml:space="preserve">
          <source>All other flags are ignored. Host names cannot contain control or percent characters, so the returned value can be considered fully decoded.</source>
          <target state="translated">다른 모든 플래그는 무시됩니다. 호스트 이름은 제어 또는 퍼센트 문자를 포함 할 수 없으므로 반환 된 값은 완전히 디코딩 된 것으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa833661f9cc3385b474e1746e77bb2b7e78b8b5" translate="yes" xml:space="preserve">
          <source>All other input characters will be ignored. Any sequence of characters that are enclosed in single quotes will be treated as text and not be used as an expression. Two consecutive single quotes (&quot;''&quot;) are replaced by a single quote in the output.</source>
          <target state="translated">다른 모든 입력 문자는 무시됩니다. 작은 따옴표로 묶인 모든 문자는 텍스트로 취급되며 표현식으로 사용되지 않습니다. 두 개의 연속적인 작은 따옴표 ( &quot; ''&quot;)는 출력에서 ​​작은 따옴표로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="6c14d1a33faa1f2df9dfec112a8e680874b8fa41" translate="yes" xml:space="preserve">
          <source>All other input characters will be ignored. Any sequence of characters that are enclosed in singlequotes will be treated as text and not be used as an expression. Two consecutive singlequotes (&quot;''&quot;) are replaced by a singlequote in the output.</source>
          <target state="translated">다른 모든 입력 문자는 무시됩니다. 작은 따옴표로 묶인 모든 문자는 텍스트로 취급되며 표현식으로 사용되지 않습니다. 두 개의 연속 된 작은 따옴표 ( &quot; ''&quot;)는 출력에서 ​​작은 따옴표로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="a396977d9a47bf9bb51741ff84854e64331beeae" translate="yes" xml:space="preserve">
          <source>All other input characters will be treated as text. Any non-empty sequence of characters enclosed in single quotes will also be treated (stripped of the quotes) as text and not be interpreted as expressions.</source>
          <target state="translated">All other input characters will be treated as text. Any non-empty sequence of characters enclosed in single quotes will also be treated (stripped of the quotes) as text and not be interpreted as expressions.</target>
        </trans-unit>
        <trans-unit id="9f08c9b09542360a151f8079c2ade591b0dd8bf1" translate="yes" xml:space="preserve">
          <source>All other input characters will be treated as text. Any non-empty sequence of characters enclosed in single quotes will also be treated (stripped of the quotes) as text and not be interpreted as expressions. For example:</source>
          <target state="translated">All other input characters will be treated as text. Any non-empty sequence of characters enclosed in single quotes will also be treated (stripped of the quotes) as text and not be interpreted as expressions. For example:</target>
        </trans-unit>
        <trans-unit id="533b9f15315be3791912963cfef0ecc1d5677745" translate="yes" xml:space="preserve">
          <source>All other input characters will be treated as text. Any sequence of characters that are enclosed in single quotes will also be treated as text and not be used as an expression.</source>
          <target state="translated">다른 모든 입력 문자는 텍스트로 취급됩니다. 작은 따옴표로 묶인 모든 문자는 텍스트로 취급되며 표현식으로 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="724b067671eb0144fbf21a63f1a7370fc596d833" translate="yes" xml:space="preserve">
          <source>All other input characters will be treated as text. Any sequence of characters that are enclosed in single quotes will also be treated as text and will not be used as an expression. For example:</source>
          <target state="translated">다른 모든 입력 문자는 텍스트로 취급됩니다. 작은 따옴표로 묶인 모든 문자는 텍스트로 취급되며 표현식으로 사용되지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5dea746df85b697b3cfe766e8edb89638a51799d" translate="yes" xml:space="preserve">
          <source>All other platforms: &lt;a href=&quot;qtquickcontrols2-basic&quot;&gt;Basic Style&lt;/a&gt;</source>
          <target state="translated">기타 모든 플랫폼 : &lt;a href=&quot;qtquickcontrols2-basic&quot;&gt;기본 스타일&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="448e0c099069b8595f5345c0e3d1910aa04ade34" translate="yes" xml:space="preserve">
          <source>All other properties of the &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; object are ignored.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; 객체 의 다른 모든 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="6be9aa66ae249793bbf17a23fbcf43161375a492" translate="yes" xml:space="preserve">
          <source>All other properties of the &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt; object are ignored.</source>
          <target state="translated">&lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt; 객체 의 다른 모든 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1774498cebd9eb873eb8d1cb35a556b555059deb" translate="yes" xml:space="preserve">
          <source>All pages are rendered in a separate worker thread.</source>
          <target state="translated">All pages are rendered in a separate worker thread.</target>
        </trans-unit>
        <trans-unit id="71417e45d6ad668fcd2173cee6a4393bfa46540d" translate="yes" xml:space="preserve">
          <source>All pages are rendered in the main UI thread (default).</source>
          <target state="translated">All pages are rendered in the main UI thread (default).</target>
        </trans-unit>
        <trans-unit id="f4fdb0cd2c896b056a50cc3f009a7d68eaaf26d2" translate="yes" xml:space="preserve">
          <source>All pages should be printed.</source>
          <target state="translated">모든 페이지를 인쇄해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5956bcea4e872eb888b48fdaf16d25c0bccce01" translate="yes" xml:space="preserve">
          <source>All pages that belong to the profile share a common &lt;a href=&quot;qwebenginesettings&quot;&gt;QWebEngineSettings&lt;/a&gt; instance, which can be accessed with the &lt;a href=&quot;qwebengineprofile#settings&quot;&gt;settings&lt;/a&gt;() method. Likewise, the &lt;a href=&quot;qwebengineprofile#scripts&quot;&gt;scripts&lt;/a&gt;() method provides access to a common &lt;a href=&quot;qwebenginescriptcollection&quot;&gt;QWebEngineScriptCollection&lt;/a&gt; instance.</source>
          <target state="translated">프로파일에 속하는 모든 페이지는 공통 &lt;a href=&quot;qwebenginesettings&quot;&gt;QWebEngineSettings&lt;/a&gt; 인스턴스를 공유하며 &lt;a href=&quot;qwebengineprofile#settings&quot;&gt;settings&lt;/a&gt; () 메소드 로 액세스 할 수 있습니다 . 마찬가지로 &lt;a href=&quot;qwebengineprofile#scripts&quot;&gt;scripts&lt;/a&gt; () 메소드는 일반적인 &lt;a href=&quot;qwebenginescriptcollection&quot;&gt;QWebEngineScriptCollection&lt;/a&gt; 인스턴스에 대한 액세스를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="93443454c9eac57d86f55cd2ac1658c38cb9bbfc" translate="yes" xml:space="preserve">
          <source>All painting is done directly onto the viewport.</source>
          <target state="translated">모든 페인팅은 뷰포트에서 직접 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c079f53472bc41a01174a86a94b863b2daa3fdea" translate="yes" xml:space="preserve">
          <source>All painting is done in</source>
          <target state="translated">모든 그림은</target>
        </trans-unit>
        <trans-unit id="c2d6b609ad703c1e6ba6a6f84bd19974c5cb5020" translate="yes" xml:space="preserve">
          <source>All painting is done in local coordinates.</source>
          <target state="translated">모든 페인팅은 로컬 좌표로 이루어집니다.</target>
        </trans-unit>
        <trans-unit id="6f3f7bda48ad688fd155292a7d29730bb12c8bc8" translate="yes" xml:space="preserve">
          <source>All parameters are passed as strings; it depends on the control whether they are interpreted correctly, and is slower than using the prototype with correctly typed parameters.</source>
          <target state="translated">모든 매개 변수는 문자열로 전달됩니다. 제어가 올바르게 해석되는지 여부에 따라 제어에 따라 달라지며 올바르게 입력 된 매개 변수가있는 프로토 타입을 사용하는 것보다 느립니다.</target>
        </trans-unit>
        <trans-unit id="f76f95280dce699e866bef99394341623bb16f79" translate="yes" xml:space="preserve">
          <source>All pixmaps inserted by the Qt library have a key starting with &quot;$qt&quot;, so your own pixmap keys should never begin &quot;$qt&quot;.</source>
          <target state="translated">Qt 라이브러리에 의해 삽입 된 모든 픽스맵에는 &quot;$ qt&quot;로 시작하는 키가 있으므로 자신의 픽스맵 키는 &quot;$ qt&quot;로 시작해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="86662c20ddb1f832a918ac8e7f6803ddc2b0a3b1" translate="yes" xml:space="preserve">
          <source>All places functionality is facilitated by a &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; instance. One must specify a &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt; in order to create the &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; 인스턴스를 통해 모든 작업 공간 기능이 용이 해집니다 . 하나는 지정해야합니다 &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider을&lt;/a&gt; 만들기 위해 &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="955ef5469c5abba76dfc6df5038fd41f820983de" translate="yes" xml:space="preserve">
          <source>All platform and plugin implementations should provide support for:</source>
          <target state="translated">모든 플랫폼 및 플러그인 구현은 다음을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="928515d309e0121699495ad7284ef636a590eb20" translate="yes" xml:space="preserve">
          <source>All platforms are expected to provide a unique system ID for each device.</source>
          <target state="translated">모든 플랫폼은 각 장치에 대해 고유 한 시스템 ID를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="7db624a857f584467c0d51b86e0eb6ac8ce93770" translate="yes" xml:space="preserve">
          <source>All plugins must implement the functions provided by this factory class.</source>
          <target state="translated">모든 플러그인은이 팩토리 클래스가 제공하는 기능을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="a5f185aa7ab3acd6c2b8b79e4d218edb6e652156" translate="yes" xml:space="preserve">
          <source>All position APIs are part of the &lt;a href=&quot;qml-qtpositioning-qtpositioning&quot;&gt;QtPositioning&lt;/a&gt; module. The basic piece of position information is the &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt;. A coordinate encapsulates data for the latitude, longitude and altitude of the location. Altitude is in meters. It also has a method to determine distance to another &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt;. The &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; type may also be held within a &lt;a href=&quot;qml-qtpositioning-location&quot;&gt;Location&lt;/a&gt; element, this will also have information on a bounding box size to determine sufficient proximity to the location and a location address.</source>
          <target state="translated">모든 위치 API는 &lt;a href=&quot;qml-qtpositioning-qtpositioning&quot;&gt;QtPositioning&lt;/a&gt; 모듈의 일부입니다 . 위치 정보의 기본 부분은 &lt;a href=&quot;qml-coordinate&quot;&gt;좌표&lt;/a&gt; 입니다. 좌표는 위치의 위도, 경도 및 고도에 대한 데이터를 캡슐화합니다. 고도는 미터입니다. 또한 다른 &lt;a href=&quot;qml-coordinate&quot;&gt;좌표&lt;/a&gt; 까지의 거리를 결정하는 방법이 있습니다 . &lt;a href=&quot;qml-coordinate&quot;&gt;좌표&lt;/a&gt; 유형이 또한 내에서 유지 될 수있다 &lt;a href=&quot;qml-qtpositioning-location&quot;&gt;위치&lt;/a&gt; 요소,이 또한 위치와 위치 주소에 충분한 근접을 결정하는 경계 상자 크기에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1fb2083cec954119802001e89e0485df93fe670a" translate="yes" xml:space="preserve">
          <source>All possible completions are displayed in a popup window with the most likely suggestion indicated as current.</source>
          <target state="translated">가능한 모든 완료는 팝업 창에 표시되며 가장 가능성이 높은 제안은 현재로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3e654e1ca52fecdfee4af83a6404c186129eee97" translate="yes" xml:space="preserve">
          <source>All products should have a handler for onPurchaseSucceeded. This handler should in turn save information about the purchased product and when the information has been stored and verified, it should call finalize() on the</source>
          <target state="translated">모든 제품에는 onPurchaseSucceeded에 대한 핸들러가 있어야합니다. 이 핸들러는 구매 한 제품에 대한 정보를 저장해야하며 정보가 저장되고 확인되면 finalize ()를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="a25a5d5e136adef357a9125f13f1396dd7820ede" translate="yes" xml:space="preserve">
          <source>All products should have an &lt;code&gt;onPurchaseFailed&lt;/code&gt; handler.</source>
          <target state="translated">모든 제품에는 &lt;code&gt;onPurchaseFailed&lt;/code&gt; 핸들러 가 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="916469c83c417ba663913130ff8d7c8921b69587" translate="yes" xml:space="preserve">
          <source>All properties added explicitly by &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;() take precedence over the context object's properties.</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt; ()에 의해 명시 적으로 추가 된 모든 속성 은 컨텍스트 객체의 속성보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="05804319a94ba141e90fb7e035dda3798a9f9822" translate="yes" xml:space="preserve">
          <source>All properties of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class are accessible from QML.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 파생 클래스 의 모든 속성은 QML에서 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b239b9983bae6328e2cd6f2ea8b43e24c8cfb78f" translate="yes" xml:space="preserve">
          <source>All queries sent by &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; will have type &lt;a href=&quot;qnetworkproxyquery#QueryType-enum&quot;&gt;QNetworkProxyQuery::UrlRequest&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; 가 전송 한 모든 쿼리는 &lt;a href=&quot;qnetworkproxyquery#QueryType-enum&quot;&gt;QNetworkProxyQuery :: UrlRequest&lt;/a&gt; 유형을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="3be247d61e53392f19e63ccd93d987837a984718" translate="yes" xml:space="preserve">
          <source>All readers use the class &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; to read the input document. Since you are normally interested in particular content in the XML document, the reader reports the content through special handler classes (&lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt;, &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt;, &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt;, &lt;a href=&quot;qxmlentityresolver&quot;&gt;QXmlEntityResolver&lt;/a&gt;, &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt; and &lt;a href=&quot;qxmllexicalhandler&quot;&gt;QXmlLexicalHandler&lt;/a&gt;), which you must subclass, if you want to process the contents.</source>
          <target state="translated">모든 독자는 &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; 클래스를 사용 하여 입력 문서를 읽습니다. 일반적으로 XML 문서의 특정 컨텐츠에 관심이 있으므로 독자는 컨텐츠 를 처리하려는 경우 서브 클래스 화 &lt;a href=&quot;qxmldtdhandler&quot;&gt;해야하는&lt;/a&gt; 특수 핸들러 클래스 ( QXmlDTDHandler , &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt; , &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; , &lt;a href=&quot;qxmlentityresolver&quot;&gt;QXmlEntityResolver&lt;/a&gt; , &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt; 및 &lt;a href=&quot;qxmllexicalhandler&quot;&gt;QXmlLexicalHandler&lt;/a&gt; )를 통해 컨텐츠를보고합니다.</target>
        </trans-unit>
        <trans-unit id="f5da15d0e1891e69483d7fb0efe5d57a2da6221f" translate="yes" xml:space="preserve">
          <source>All rectangles with a given top coordinate must have the same height.</source>
          <target state="translated">주어진 상단 좌표를 가진 모든 사각형의 높이는 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="d01ad37b83d2fb7463ae3a761f92d03c6054dbff" translate="yes" xml:space="preserve">
          <source>All rendering happens into an OpenGL framebuffer object. &lt;a href=&quot;qopenglwidget#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() ensure that it is bound in the context. Keep this in mind when creating and binding additional framebuffer objects in the rendering code in &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;(). Never re-bind the framebuffer with ID 0. Instead, call &lt;a href=&quot;qopenglwidget#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;() to get the ID that should be bound.</source>
          <target state="translated">모든 렌더링은 OpenGL 프레임 버퍼 객체로 발생합니다. &lt;a href=&quot;qopenglwidget#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt; ()는 컨텍스트에 바인딩되어 있는지 확인합니다. &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt; () 의 렌더링 코드에서 추가 프레임 버퍼 객체를 만들고 바인딩 할 때이 점을 명심하십시오 . 프레임 버퍼를 ID 0으로 다시 바인드하지 마십시오. 대신 바인딩해야 할 ID를 얻으려면 &lt;a href=&quot;qopenglwidget#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt; ()를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="f754f2057d1bde42e9044920a02e7ecabe4a00a3" translate="yes" xml:space="preserve">
          <source>All requests are serialised based on First-In First-Out principle. For example, issuing a second write request, before the previous write request has finished, is delayed until the first write request has finished.</source>
          <target state="translated">모든 요청은 선입 선출 원칙에 따라 직렬화됩니다. 예를 들어, 이전 쓰기 요청이 완료되기 전에 두 번째 쓰기 요청을 발행하는 것은 첫 번째 쓰기 요청이 완료 될 때까지 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="ff5f165d1826499e6d2fa4cab8f667c1d0c4d4d1" translate="yes" xml:space="preserve">
          <source>All required image providers should be added to the engine before any QML sources files are loaded.</source>
          <target state="translated">QML 소스 파일을로드하기 전에 모든 필수 이미지 제공자를 엔진에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="3230537aa9e5bc486ba8856ee079a2a660aba7ea" translate="yes" xml:space="preserve">
          <source>All rotations will be done relative to this point (i.e., this point will stay fixed, relative to the parent, when the item is rotated).</source>
          <target state="translated">모든 회전은이 점을 기준으로 수행됩니다 (즉,이 점은 항목이 회전 할 때 부모를 기준으로 고정 된 상태로 유지됨).</target>
        </trans-unit>
        <trans-unit id="462d3391323ae042621b330e1abd04c14c9faefc" translate="yes" xml:space="preserve">
          <source>All rows must have the same number of items.</source>
          <target state="translated">모든 행은 같은 수의 항목을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="9b3e4e3556abfa48cd3953b7393775f126aeb2f4" translate="yes" xml:space="preserve">
          <source>All scaling will be done relative to this point (i.e., this point will stay fixed, relative to the parent, when the item is scaled).</source>
          <target state="translated">모든 스케일링은이 점을 기준으로 수행됩니다 (즉,이 점은 항목이 스케일링 될 때 부모에 대해 고정 된 상태를 유지함).</target>
        </trans-unit>
        <trans-unit id="b4facf70abe205eadad53fbc44f0a79af90f925c" translate="yes" xml:space="preserve">
          <source>All screens reported by the DRM layer will be treated as one big virtual desktop by default. The mouse cursor implementation will take this into account and move across the screens as expected. Although not recommended, the virtual desktop mode can be disabled by setting &lt;code&gt;separateScreens&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the configuration, if desired.</source>
          <target state="translated">DRM 계층에서보고 한 모든 화면은 기본적으로 하나의 큰 가상 데스크톱으로 취급됩니다. 마우스 커서 구현은이를 고려하여 예상대로 화면을 가로 질러 움직입니다. 권장하지는 않지만 구성에서 &lt;code&gt;separateScreens&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하여 가상 데스크톱 모드를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37dde8c31a2e10e73d6b2f73d19479c807e9ba61" translate="yes" xml:space="preserve">
          <source>All scripts in Unicode 6.2 that do not require special processing</source>
          <target state="translated">특수 처리가 필요하지 않은 유니 코드 6.2의 모든 스크립트</target>
        </trans-unit>
        <trans-unit id="f1f4c9eb5d15c03bad3971d00ef5ecb9e8f5925c" translate="yes" xml:space="preserve">
          <source>All sensor gesture recognizers have a detected(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;) signal. Implementors can use this and send recognizer specific gestures, such as detected(&quot;shake_left&quot;) or implement custom signals such as shakeLeft().</source>
          <target state="translated">모든 센서 제스처 인식기는 감지 된 ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; ) 신호를 가지고 있습니다. 구현자는이를 사용하여 detect ( &quot;shake_left&quot;)와 같은 인식 자 특정 제스처를 보내거나 shakeLeft ()와 같은 사용자 정의 신호를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e14695275922132233efbce1a4734d745b92d446" translate="yes" xml:space="preserve">
          <source>All signals associated with a click are emitted as appropriate.</source>
          <target state="translated">클릭과 관련된 모든 신호는 적절하게 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="2d99a9a7c24c116a1d3d0867157d2ac8d851f5d7" translate="yes" xml:space="preserve">
          <source>All signals to and from the object are automatically disconnected, and any pending posted events for the object are removed from the event queue. However, it is often safer to use &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;() rather than deleting a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass directly.</source>
          <target state="translated">오브젝트와의 모든 신호는 자동으로 연결이 끊어지며 오브젝트에 대해 보류중인 게시 된 모든 이벤트가 이벤트 큐에서 제거됩니다. 그러나 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 서브 클래스를 직접 삭제하는 대신 &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt; () 를 사용하는 것이 더 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="c5523af6361b2de388b4d472af9e7903b3eda5f3" translate="yes" xml:space="preserve">
          <source>All size hint functionality from the embedded widget is forwarded by the proxy.</source>
          <target state="translated">임베디드 위젯의 모든 크기 힌트 기능은 프록시에 의해 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="52474739abdef46ea93c1488599ac240840c1220" translate="yes" xml:space="preserve">
          <source>All sizes and positions in QAnyStringView functions are in the encoding's code points (that is, UTF-16 surrogate pairs count as two for the purposes of these functions, the same as in &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and UTF-8 multibyte sequences count as two, three or four, depending on their length).</source>
          <target state="translated">QAnyStringView 함수의 모든 크기와 위치는 인코딩의 코드 포인트에 있습니다 (즉, UTF-16 서로 게이트 쌍은 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 에서와 동일하게 이러한 함수의 목적을 위해 2 개로 계산 되고 UTF-8 멀티 바이트 시퀀스는 2 개, 3 개 또는 길이에 따라 4 개).</target>
        </trans-unit>
        <trans-unit id="d95477e1d33fa5f55e2cd0ae057ebf4d7e5dffff" translate="yes" xml:space="preserve">
          <source>All sizes and positions in QUtf8StringView functions are in UTF-8 code points (that is, UTF-8 multibyte sequences count as two, three or four, depending on their length). QUtf8StringView does not an attempt to detect or prevent slicing right through UTF-8 multibyte sequences. This is similar to the situation with &lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; and surrogate pairs.</source>
          <target state="translated">QUtf8StringView 함수의 모든 크기와 위치는 UTF-8 코드 포인트에 있습니다 (즉, UTF-8 멀티 바이트 시퀀스는 길이에 따라 2 개, 3 개 또는 4 개로 계산 됨). QUtf8StringView는 UTF-8 멀티 바이트 시퀀스를 통해 슬라이싱을 감지하거나 방지하지 않습니다. 이것은 &lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; 및 서로 게이트 쌍 의 상황과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="6e58bec5bd47708d280790efb6305e90aa9e9a79" translate="yes" xml:space="preserve">
          <source>All spatial Objects are subclasses of the Node component, which contains the properties defining the position, rotation, and scale in 3D space.</source>
          <target state="translated">모든 공간 개체는 3D 공간에서 위치, 회전 및 배율을 정의하는 속성을 포함하는 노드 구성 요소의 하위 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b6709382c1dbe321a37f71e8254a9c5aa9deb05c" translate="yes" xml:space="preserve">
          <source>All specified indexes will be deselected.</source>
          <target state="translated">지정된 모든 인덱스가 선택 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="9360365e547857d1b09f43e01c14c19a5caceaa5" translate="yes" xml:space="preserve">
          <source>All specified indexes will be selected or deselected depending on their current state.</source>
          <target state="translated">지정된 모든 인덱스는 현재 상태에 따라 선택되거나 선택 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="fb6e192820485bfc964d4d810dabbb19906a1c73" translate="yes" xml:space="preserve">
          <source>All specified indexes will be selected.</source>
          <target state="translated">지정된 모든 인덱스가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="e16e3b08f62a531234c1499e444948cf9d2d6ac9" translate="yes" xml:space="preserve">
          <source>All standard proxy models are derived from the &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; class. If you need to create a new proxy model class, it is usually better to subclass an existing class that provides the closest behavior to the one you want to provide.</source>
          <target state="translated">모든 표준 프록시 모델은 &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; 클래스 에서 파생됩니다 . 새 프록시 모델 클래스를 작성해야하는 경우 일반적으로 제공하려는 클래스와 가장 가까운 동작을 제공하는 기존 클래스를 서브 클래 싱하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9537c7d35d6b3764d686d09a990a048b5c7f7076" translate="yes" xml:space="preserve">
          <source>All standard proxy models are derived from the QAbstractProxyModel class. If you need to create a new proxy model class, it is usually better to subclass an existing class that provides the closest behavior to the one you want to provide.</source>
          <target state="translated">All standard proxy models are derived from the QAbstractProxyModel class. If you need to create a new proxy model class, it is usually better to subclass an existing class that provides the closest behavior to the one you want to provide.</target>
        </trans-unit>
        <trans-unit id="219d73905c4d493dd39393137c65c49f7186dc09" translate="yes" xml:space="preserve">
          <source>All states that are defined in the SCXML file are accessible as properties of &lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt;. These properties are boolean values and indicate whether the state is active or inactive.</source>
          <target state="translated">SCXML 파일에 정의 된 모든 상태는 &lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine의&lt;/a&gt; 특성으로 액세스 할 수 있습니다 . 이러한 속성은 부울 값이며 상태가 활성인지 비활성인지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="427a7dcc780d36ea90862d19543de65001761b73" translate="yes" xml:space="preserve">
          <source>All states that are defined in the SCXML file are accessible as properties of QScxmlStateMachine. These properties are boolean values and indicate whether the state is active or inactive.</source>
          <target state="translated">All states that are defined in the SCXML file are accessible as properties of QScxmlStateMachine. These properties are boolean values and indicate whether the state is active or inactive.</target>
        </trans-unit>
        <trans-unit id="d37370602e36973ac64ceb451c16a5216c1f9807" translate="yes" xml:space="preserve">
          <source>All states that are defined in the SCXML file are accessible as properties of this type. These properties are boolean values and indicate whether the state is active or inactive.</source>
          <target state="translated">SCXML 파일에 정의 된 모든 상태는이 유형의 특성으로 액세스 할 수 있습니다. 이러한 속성은 부울 값이며 상태가 활성인지 비활성인지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d6e9fa93c147a44d004ee667d2e42e4486333963" translate="yes" xml:space="preserve">
          <source>All steps of the Post Processing phase are optional, and if none exist, the output of the scene render is what is used by the final render target.</source>
          <target state="translated">사후 처리 단계의 모든 단계는 선택 사항이며, 존재하지 않는 경우 장면 렌더링의 출력은 최종 렌더링 대상에서 사용되는 것입니다.</target>
        </trans-unit>
        <trans-unit id="20ec24a0ee31d540239637e506a6a5a75774bda4" translate="yes" xml:space="preserve">
          <source>All strings processed by the query must be valid &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; strings, which means they must contain only XML 1.0 characters. However, this requirement is not checked. If the query processes an invalid string, the behavior is undefined.</source>
          <target state="translated">All strings processed by the query must be valid &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; strings, which means they must contain only XML 1.0 characters. However, this requirement is not checked. If the query processes an invalid string, the behavior is undefined.</target>
        </trans-unit>
        <trans-unit id="5a8e43d6b89437d4338a9abb8c1561727f3816cc" translate="yes" xml:space="preserve">
          <source>All strings processed by the query must be valid &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; strings, which means they must contain only XML 1.0 characters. However, this requirement is not checked. If the query processes an invalid string, the behavior is undefined.</source>
          <target state="translated">쿼리에서 처리되는 모든 문자열은 유효한 &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; 문자열이어야합니다. 즉, XML 1.0 문자 만 포함해야합니다. 그러나이 요구 사항은 점검되지 않습니다. 쿼리가 유효하지 않은 문자열을 처리하면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f9ef1613f0e045e8d20fd6a37116527ba043443" translate="yes" xml:space="preserve">
          <source>All subclasses must reimplement this pure virtual function.</source>
          <target state="translated">모든 서브 클래스는이 순수한 가상 함수를 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="a539999f94eed7f376345a814ad2b5bca5e2ed57" translate="yes" xml:space="preserve">
          <source>All subclasses of &lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt; read the input XML document from this class.</source>
          <target state="translated">&lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader의&lt;/a&gt; 모든 서브 클래스는 이 클래스에서 입력 XML 문서를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="4513d728f20331104361568059c7df569e0c3f23" translate="yes" xml:space="preserve">
          <source>All supported fonts use the Unicode character encoding. Most fonts available today do, but they usually don't contain</source>
          <target state="translated">지원되는 모든 글꼴은 유니 코드 문자 인코딩을 사용합니다. 오늘날 사용 가능한 대부분의 글꼴은 있지만 일반적으로 포함하지 않습니다</target>
        </trans-unit>
        <trans-unit id="26d15a5ff7ea62ba201b08530046dc6c581720ca" translate="yes" xml:space="preserve">
          <source>All supported versions of &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="translated">지원되는 모든 버전의 &lt;a href=&quot;internationalization#macos&quot;&gt;맥 OS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bba220579d4bc507104b65dcf8959c52dc7a84e5" translate="yes" xml:space="preserve">
          <source>All supported versions of &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. Note that the Growl notification system must be installed for &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt; to display messages on OS X prior to 10.8 (Mountain Lion).</source>
          <target state="translated">지원되는 모든 버전의 &lt;a href=&quot;internationalization#macos&quot;&gt;맥 OS&lt;/a&gt; . &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage ()&lt;/a&gt; 가 10.8 (Mountain Lion) 이전 OS X에서 메시지를 표시 하려면 Growl 알림 시스템을 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c94ab166e9adc840f10f85946b0701ba3353d7f9" translate="yes" xml:space="preserve">
          <source>All supported versions of Windows.</source>
          <target state="translated">지원되는 모든 버전의 Windows.</target>
        </trans-unit>
        <trans-unit id="6db1d96bf104333db1f40ced87b34f30358e02e1" translate="yes" xml:space="preserve">
          <source>All supported versions of macOS.</source>
          <target state="translated">All supported versions of macOS.</target>
        </trans-unit>
        <trans-unit id="eff1c6042adbc99b768754a1f46360584dd5b6d1" translate="yes" xml:space="preserve">
          <source>All supported versions of macOS. Note that the Growl notification system must be installed for &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt; to display messages on OS X prior to 10.8 (Mountain Lion).</source>
          <target state="translated">All supported versions of macOS. Note that the Growl notification system must be installed for &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt; to display messages on OS X prior to 10.8 (Mountain Lion).</target>
        </trans-unit>
        <trans-unit id="b1df71708f97ac11a6ae7f28a4a6023b811fccc6" translate="yes" xml:space="preserve">
          <source>All tablet events that are not accepted by the application will be translated to mouse events instead. This attribute is enabled by default. This value was added in Qt 5.7.</source>
          <target state="translated">응용 프로그램에서 승인하지 않은 모든 태블릿 이벤트는 대신 마우스 이벤트로 변환됩니다. 이 속성은 기본적으로 활성화되어 있습니다. 이 값은 Qt 5.7에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f527a6b8b80b51e520be1358a21eef246a8697d3" translate="yes" xml:space="preserve">
          <source>All textures are unique. If you instantiate twice the same texture this will create 2 identical textures on the GPU, no sharing will take place.</source>
          <target state="translated">All textures are unique. If you instantiate twice the same texture this will create 2 identical textures on the GPU, no sharing will take place.</target>
        </trans-unit>
        <trans-unit id="d5c28722ac162ad6ce99c0c591c9c338edc9cac1" translate="yes" xml:space="preserve">
          <source>All that's needed to group states is to specify the proper parent when the state is created. You also need to specify which of the child states is the initial one (i.e. which child state the state machine should enter when the parent state is the target of a transition).</source>
          <target state="translated">상태를 그룹화하는 데 필요한 것은 상태가 생성 될 때 적절한 부모를 지정하는 것입니다. 또한 어떤 하위 상태가 초기 상태인지 지정해야합니다 (즉, 상위 상태가 전환 대상 일 때 상태 시스템이 어떤 하위 상태를 입력해야하는지).</target>
        </trans-unit>
        <trans-unit id="a5320bfdb2c816626046b2ff955abfbb8070bd26" translate="yes" xml:space="preserve">
          <source>All that's needed to group states is to specify the proper parent when the state is created. You also need to specify which of the child states is the initial one (the child state the state machine should enter when the parent state is the target of a transition).</source>
          <target state="translated">상태를 그룹화하는 데 필요한 것은 상태가 생성 될 때 적절한 부모를 지정하는 것입니다. 또한 어떤 하위 상태가 초기 상태인지 지정해야합니다 (부모 상태가 전이의 대상 일 때 상태 시스템이 입력해야하는 하위 상태).</target>
        </trans-unit>
        <trans-unit id="1bcbb517acfc67680820985837022b288244fad6" translate="yes" xml:space="preserve">
          <source>All the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#qt-essentials&quot;&gt;Qt Essentials&lt;/a&gt; modules are supported in Qt for QNX.</source>
          <target state="translated">모든 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#qt-essentials&quot;&gt;Qt Essentials&lt;/a&gt; 모듈은 Qt for QNX에서 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="2017e6e7f15dc2c700f7e3dd81deb33db0db950e" translate="yes" xml:space="preserve">
          <source>All the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtmodules.html#qt-essentials&quot;&gt;Qt Essentials&lt;/a&gt; modules are supported in Qt for QNX.</source>
          <target state="translated">All the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtmodules.html#qt-essentials&quot;&gt;Qt Essentials&lt;/a&gt; modules are supported in Qt for QNX.</target>
        </trans-unit>
        <trans-unit id="9253888911600692beace099f2afc0d5393e2a92" translate="yes" xml:space="preserve">
          <source>All the buttons provided by Qt (&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;, &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, and &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt;) can display both &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#icon&quot;&gt;icons&lt;/a&gt;.</source>
          <target state="translated">Qt에서 제공하는 모든 버튼 ( &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; , &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; , &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt; 및 &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt; )은 &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;텍스트&lt;/a&gt; 와 &lt;a href=&quot;stylesheet-reference#icon&quot;&gt;아이콘을&lt;/a&gt; 모두 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bda8b5ad84fd2696e48cc545276b1e27a71023af" translate="yes" xml:space="preserve">
          <source>All the data in the series is discarded when it is set to the mapper. When a new series is specified, the old series is disconnected (but it preserves its data).</source>
          <target state="translated">매퍼로 설정하면 계열의 모든 데이터가 삭제됩니다. 새 시리즈를 지정하면 이전 시리즈의 연결이 끊어 지지만 데이터는 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="4c8a4414f243959a83c9a840f91ca2c1014c7608" translate="yes" xml:space="preserve">
          <source>All the data in the series is discarded when it is set to the mapper. When a new series is specified, the old series is disconnected (preserving its data).</source>
          <target state="translated">매퍼로 설정하면 계열의 모든 데이터가 삭제됩니다. 새 시리즈가 지정되면 이전 시리즈의 연결이 끊어집니다 (데이터 유지).</target>
        </trans-unit>
        <trans-unit id="a41a2df894416e6366bc3488aec563cf31c3ba22" translate="yes" xml:space="preserve">
          <source>All the examples so far used the simplest type of selector, the Type Selector. Qt Style Sheets support all the &lt;a href=&quot;http://www.w3.org/TR/REC-CSS2/selector.html#q1&quot;&gt;selectors defined in CSS2&lt;/a&gt;. The table below summarizes the most useful types of selectors.</source>
          <target state="translated">지금까지의 모든 예제는 가장 간단한 유형의 선택기 인 유형 선택기를 사용했습니다. Qt 스타일 시트 &lt;a href=&quot;http://www.w3.org/TR/REC-CSS2/selector.html#q1&quot;&gt;는 CSS2에 정의 된&lt;/a&gt; 모든 선택기를 지원합니다 . 아래 표에는 가장 유용한 유형의 선택기가 요약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d38594e594be4b7459fa08fe38097c803c1752da" translate="yes" xml:space="preserve">
          <source>All the function arguments in Qt that may be user-visible strings, &lt;a href=&quot;qlabel#text-prop&quot;&gt;QLabel::setText&lt;/a&gt;() and a many others, take &lt;code&gt;const QString &amp;amp;&lt;/code&gt;s. &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides implicit casting from &lt;code&gt;const char *&lt;/code&gt; so that things like</source>
          <target state="translated">Qt에서 사용자가 볼 수있는 문자열, &lt;a href=&quot;qlabel#text-prop&quot;&gt;QLabel :: setText&lt;/a&gt; () 및 기타 많은 함수 인수는 &lt;code&gt;const QString &amp;amp;&lt;/code&gt; s를 사용합니다. &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 은 &lt;code&gt;const char *&lt;/code&gt; 에서 암시 적 캐스팅을 제공 하므로</target>
        </trans-unit>
        <trans-unit id="1f87d6464084c73a97e56d60280152440660f105" translate="yes" xml:space="preserve">
          <source>All the information about using &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; as a display widget also applies here.</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; 를 디스플레이 위젯으로 사용하는 방법에 대한 모든 정보 도 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="8b35d4ed99e540cba335ac9b3a82d4908f80fd5c" translate="yes" xml:space="preserve">
          <source>All the information about using &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; as a display widget also applies here.</source>
          <target state="translated">&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; 을 디스플레이 위젯으로 사용하는 것에 대한 모든 정보 도 여기에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="16db2acf74f6bd13431f526faac02c654b5fa351" translate="yes" xml:space="preserve">
          <source>All the information about using QPlainTextEdit as a display widget also applies here.</source>
          <target state="translated">All the information about using QPlainTextEdit as a display widget also applies here.</target>
        </trans-unit>
        <trans-unit id="0b8bf3e4df592597235cb16b0560ac0ed87bd4bf" translate="yes" xml:space="preserve">
          <source>All the information about using QTextEdit as a display widget also applies here.</source>
          <target state="translated">All the information about using QTextEdit as a display widget also applies here.</target>
        </trans-unit>
        <trans-unit id="d9d984db48bd431e6ef4e6812c95e4301425f7a6" translate="yes" xml:space="preserve">
          <source>All the joints must be contained inside a Skeleton, and each joint must have a &lt;a href=&quot;qml-qtquick3d-joint#skeletonRoot-prop&quot;&gt;skeletonRoot&lt;/a&gt; pointing back to that skeleton.</source>
          <target state="translated">모든 관절은 스켈레톤 내부에 포함되어야하며 각 관절에는 해당 &lt;a href=&quot;qml-qtquick3d-joint#skeletonRoot-prop&quot;&gt;스켈레톤을&lt;/a&gt; 다시 가리키는 skeletonRoot 가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ddb5a956cc5847ea699ddeefafad82744eaa5d44" translate="yes" xml:space="preserve">
          <source>All the key delegates provided by the style should be based on this type.</source>
          <target state="translated">스타일에서 제공하는 모든 주요 대리자는이 유형을 기반으로해야합니다.</target>
        </trans-unit>
        <trans-unit id="25c1b870e82dbd0548be9e65de0be54f6de714d8" translate="yes" xml:space="preserve">
          <source>All the limitations when using &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; are implied when using this technique to interoperate with .NET, e.g. the datatypes we can use in the APIs can only be those supported by &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; and COM. However, since this includes subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; we can wrap any of our datatypes into a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass to make its API available to .NET. This has the positive side effect that the same API is automatically available when using &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtscript-index.html&quot;&gt;Qt Script&lt;/a&gt; to automate Qt applications and to COM clients in general.</source>
          <target state="translated">All the limitations when using &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; are implied when using this technique to interoperate with .NET, e.g. the datatypes we can use in the APIs can only be those supported by &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; and COM. However, since this includes subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; we can wrap any of our datatypes into a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass to make its API available to .NET. This has the positive side effect that the same API is automatically available when using &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtscript-index.html&quot;&gt;Qt Script&lt;/a&gt; to automate Qt applications and to COM clients in general.</target>
        </trans-unit>
        <trans-unit id="a5869b8e4ad0d9d5d860c56c61109d2e40996bcf" translate="yes" xml:space="preserve">
          <source>All the limitations when using &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; are implied when using this technique to interoperate with .NET, e.g. the datatypes we can use in the APIs can only be those supported by &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; and COM. However, since this includes subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; we can wrap any of our datatypes into a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass to make its API available to .NET. This has the positive side effect that the same API is automatically available when using &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtscript-index.html&quot;&gt;Qt Script&lt;/a&gt; to automate Qt applications and to COM clients in general.</source>
          <target state="translated">이 기술을 사용하여 .NET과 상호 운용 할 때 &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt를&lt;/a&gt; 사용할 때의 모든 제한 사항 이 암시됩니다. 예를 들어 API에서 사용할 수있는 데이터 유형은 &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; 및 COM에서 지원하는 데이터 유형일 수 있습니다 . 그러나 여기에는 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 및 &lt;a href=&quot;qwidget&quot;&gt;QWidget의&lt;/a&gt; 서브 클래스가 포함되므로 모든 데이터 유형을 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 서브 클래스 로 랩핑 하여 API를 .NET에서 사용할 수 있습니다. 이는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtscript-index.html&quot;&gt;Qt 스크립트&lt;/a&gt; 를 사용하여 Qt 응용 프로그램 및 COM 클라이언트를 자동화 할 때 동일한 API를 자동으로 사용할 수 있다는 긍정적 인 부작용이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="518da6526f450823c5e3dbbb334066a78d9290cd" translate="yes" xml:space="preserve">
          <source>All the metric and layout calculations will be done in terms of the paint device,</source>
          <target state="translated">모든 미터법 및 레이아웃 계산은 페인트 장치 측면에서 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="9082f6b91352b6e1548d6e08db6d81a576790b6f" translate="yes" xml:space="preserve">
          <source>All the objects's children are destroyed immediately after this signal is emitted.</source>
          <target state="translated">이 신호가 방출 된 직후 모든 객체의 자식이 파괴됩니다.</target>
        </trans-unit>
        <trans-unit id="cafbd7e6a453a2ad792ef5ad4a9605345b608417" translate="yes" xml:space="preserve">
          <source>All the operations on data are performed through the interface provided by &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. This makes the delegate mostly independent from the type of data it manipulates, but some assumptions must be made in order to use certain types of editor widgets. In this example, we have assumed that the model always contains integer values, but we can still use this delegate with different kinds of models because &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; provides sensible default values for unexpected data.</source>
          <target state="translated">데이터에 대한 모든 작업은 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel에서&lt;/a&gt; 제공하는 인터페이스를 통해 수행됩니다 . 이는 델리게이트가 조작하는 데이터 유형과 거의 독립적으로 만들지 만 특정 유형의 편집기 위젯을 사용하려면 몇 가지 가정을해야합니다. 이 예에서는 모델에 항상 정수 값이 포함되어 있다고 가정했지만 &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; 가 예상치 못한 데이터에 대해 합리적인 기본값을 제공 하기 때문에 다른 종류의 모델에이 대리자를 계속 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a140566c97471e667b79d56a55bfc6b54bed184" translate="yes" xml:space="preserve">
          <source>All the operations on data are performed through the interface provided by &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. This makes the delegate mostly independent from the type of data it manipulates, but some assumptions must be made in order to use certain types of editor widgets. In this example, we have assumed that the model always contains integer values, but we can still use this delegate with different kinds of models because &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; provides sensible default values for unexpected data.</source>
          <target state="translated">데이터에 대한 모든 작업은 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel에서&lt;/a&gt; 제공하는 인터페이스를 통해 수행됩니다 . 이렇게하면 대리자가 처리하는 데이터 형식과 대부분 독립적이되지만 특정 유형의 편집기 위젯을 사용하려면 몇 가지 가정을해야합니다. 이 예에서는 모델에 항상 정수 값이 포함되어 있다고 가정했지만 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 가 예기치 않은 데이터에 대해 합리적인 기본값을 제공 하기 때문에이 모델을 다른 종류의 모델과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f3dbd325c7d7b3e7ac05c340f8c5419d84352dc" translate="yes" xml:space="preserve">
          <source>All the other subclasses do not have a node value and will return an empty string.</source>
          <target state="translated">다른 모든 서브 클래스는 노드 값을 가지지 않으며 빈 문자열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f155d9d0b01b0aaa34307153c2d0bba3a6355609" translate="yes" xml:space="preserve">
          <source>All the particle system types act on &quot;logical particles&quot;. Every particle has a logical representation inside the particle system, and this is what the types act upon. Not every logical particle needs to be visualized, and some logical particles could lead to multiple visual particles being drawn on screen.</source>
          <target state="translated">모든 파티클 시스템 유형은 &quot;논리 파티클&quot;에 작용합니다. 모든 파티클은 파티클 시스템 내부에 논리적으로 표시되며, 이것이 유형에 따라 달라집니다. 모든 논리 입자를 시각화 할 필요는 없으며 일부 논리 입자는 화면에 여러 개의 시각적 입자를 그릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c3d878e6cd2e9a5974755cc9ffe9a27fd4c908f" translate="yes" xml:space="preserve">
          <source>All the registry entries that appear under the specified path can be read or written through the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object as usual (using forward slashes instead of backslashes). For example:</source>
          <target state="translated">지정된 경로 아래에 나타나는 모든 레지스트리 항목은 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체를 통해 평소와 같이 읽거나 쓸 수 있습니다 (백 슬래시 대신 슬래시 사용). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="70ef5176896de78bac32887285417b16f54f6d0e" translate="yes" xml:space="preserve">
          <source>All the registry entries that appear under the specified path can be read or written through the QSettings object as usual (using forward slashes instead of backslashes). For example:</source>
          <target state="translated">All the registry entries that appear under the specified path can be read or written through the QSettings object as usual (using forward slashes instead of backslashes). For example:</target>
        </trans-unit>
        <trans-unit id="f52e8bcf264eba0a97f2713ac1b1f06d3ad42b9b" translate="yes" xml:space="preserve">
          <source>All the standard roles are handled by the default delegate used by the standard views. The way these are interpreted is described in the &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; documentation.</source>
          <target state="translated">모든 표준 역할은 표준보기에서 사용되는 기본 대리자가 처리합니다. 이를 해석하는 방법은 &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; 문서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e167b9d1684b72a1efdd280e2752df3c82f279f4" translate="yes" xml:space="preserve">
          <source>All the tables visible to the user.</source>
          <target state="translated">모든 테이블이 사용자에게 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c205f5f6409bb201734ad2082ef709d7c86db18c" translate="yes" xml:space="preserve">
          <source>All the tranformation operations operate on the transformation &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;(). A matrix transforms a point in the plane to another point. For more information about the transformation matrix, see the &lt;a href=&quot;coordsys&quot;&gt;Coordinate System&lt;/a&gt; and &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; documentation.</source>
          <target state="translated">All the tranformation operations operate on the transformation &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;(). A matrix transforms a point in the plane to another point. For more information about the transformation matrix, see the &lt;a href=&quot;coordsys&quot;&gt;Coordinate System&lt;/a&gt; and &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; documentation.</target>
        </trans-unit>
        <trans-unit id="b96bbcf2d749bb2062e3ca169d60085592d77bb0" translate="yes" xml:space="preserve">
          <source>All the tranformation operations operate on the transformation &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;(). A matrix transforms a point in the plane to another point. For more information about the transformation matrix, see the &lt;a href=&quot;coordsys#&quot;&gt;Coordinate System&lt;/a&gt; and &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; documentation.</source>
          <target state="translated">모든 변환 작업은 변환 &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt; () 에서 작동합니다 . 행렬은 평면의 한 점을 다른 점으로 변환합니다. 변환 행렬에 대한 자세한 내용은 &lt;a href=&quot;coordsys#&quot;&gt;좌표계&lt;/a&gt; 및 &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50c7b08eb5a9d28f153acbcdc9c2279f4de5253a" translate="yes" xml:space="preserve">
          <source>All the usual signals associated with a click are emitted as appropriate. If the button is checkable, the state of the button is toggled.</source>
          <target state="translated">클릭과 관련된 모든 일반적인 신호가 적절하게 방출됩니다. 버튼을 확인할 수 있으면 버튼 상태가 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="2740adc2b9d801bb2ac9e2b50c3fd01be8049466" translate="yes" xml:space="preserve">
          <source>All the values must be in the range 0-255.</source>
          <target state="translated">모든 값은 0-255 범위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="be769db4518e38ee8ad7d85e313a5bb4786ac13d" translate="yes" xml:space="preserve">
          <source>All the values must be in the range 0.0-1.0.</source>
          <target state="translated">모든 값은 0.0-1.0 범위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="abb2c3f8837dfa341e5458102be1ed8fa3c8038f" translate="yes" xml:space="preserve">
          <source>All the views visible to the user.</source>
          <target state="translated">모든보기가 사용자에게 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="278c160788c6503444bdfd24c0015367f1515c7e" translate="yes" xml:space="preserve">
          <source>All the widgets will initially be allocated an amount of space in accordance with their &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;QWidget::sizePolicy&lt;/a&gt;() and &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;QWidget::sizeHint&lt;/a&gt;().</source>
          <target state="translated">모든 위젯에는 처음에 &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;QWidget :: sizePolicy&lt;/a&gt; () 및 &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;QWidget :: sizeHint&lt;/a&gt; () 에 따라 일정량의 공간이 할당 됩니다.</target>
        </trans-unit>
        <trans-unit id="32182ce85e112cdc9d367af2949d35832a3605f3" translate="yes" xml:space="preserve">
          <source>All these properties are read-only, as are their C++ counterparts.</source>
          <target state="translated">All these properties are read-only, as are their C++ counterparts.</target>
        </trans-unit>
        <trans-unit id="a61ac5163d08f2ac34bf1af256c3b67278bfc119" translate="yes" xml:space="preserve">
          <source>All these properties are read-only, as are their C++ counterparts. In addition, we also expose the following functions:</source>
          <target state="translated">All these properties are read-only, as are their C++ counterparts. In addition, we also expose the following functions:</target>
        </trans-unit>
        <trans-unit id="1840c758e83b97523da989c7b9528e807b4716a4" translate="yes" xml:space="preserve">
          <source>All this widget's children are deleted first. The application exits if this widget is the main widget.</source>
          <target state="translated">이 위젯의 ​​모든 하위 항목이 먼저 삭제됩니다. 이 위젯이 기본 위젯이면 애플리케이션이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="3b2ed4aa092770d223d3d839ad11918e0eeb3492" translate="yes" xml:space="preserve">
          <source>All three arguments are optional.</source>
          <target state="translated">세 가지 인수는 모두 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="c6991439ed6933475ba0ec43fb01816cc0a30204" translate="yes" xml:space="preserve">
          <source>All timer types may time out later than expected if the system is busy or unable to provide the requested accuracy. In such a case of timeout overrun, Qt will emit &lt;a href=&quot;qtimer#timeout&quot;&gt;timeout&lt;/a&gt;() only once, even if multiple timeouts have expired, and then will resume the original interval.</source>
          <target state="translated">시스템이 사용 중이거나 요청 된 정확도를 제공 할 수없는 경우 모든 타이머 유형이 예상보다 늦게 종료 될 수 있습니다. 이러한 시간 초과 오버런의 경우 Qt는 여러 시간 초과가 만료 된 경우에도 &lt;a href=&quot;qtimer#timeout&quot;&gt;시간 초과&lt;/a&gt; ()를 한 번만 방출 한 다음 원래 간격을 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="50b0672eb2a1e45d121a003a2c859e7593f4f914" translate="yes" xml:space="preserve">
          <source>All touch events are of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchUpdate&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchEnd&lt;/a&gt; or &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchCancel&lt;/a&gt;. Reimplement &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() or &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;QAbstractScrollArea::viewportEvent&lt;/a&gt;() for widgets and &lt;a href=&quot;qgraphicsitem#sceneEvent&quot;&gt;QGraphicsItem::sceneEvent&lt;/a&gt;() for items in a graphics view to receive touch events.</source>
          <target state="translated">모든 터치 이벤트는 &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchBegin&lt;/a&gt; , &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchUpdate&lt;/a&gt; , &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchEnd&lt;/a&gt; 또는 &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchCancel 유형&lt;/a&gt; 입니다. 터치 이벤트를 수신하기 위해 그래픽보기의 항목에 대해서는 &lt;a href=&quot;qwidget#event&quot;&gt;QWidget :: event&lt;/a&gt; () 또는 &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;QAbstractScrollArea :: viewportEvent&lt;/a&gt; ()를, 위젯에 대해서는 &lt;a href=&quot;qgraphicsitem#sceneEvent&quot;&gt;QGraphicsItem :: sceneEvent&lt;/a&gt; ()를 다시 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6b6eb1db3275c16e2e5e07843cd9006a84ccc62" translate="yes" xml:space="preserve">
          <source>All touch events that are not accepted by the application will be translated to left button mouse events instead. This attribute is enabled by default.</source>
          <target state="translated">응용 프로그램에서 허용하지 않는 모든 터치 이벤트는 대신 왼쪽 버튼 마우스 이벤트로 변환됩니다. 이 속성은 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8abd72772314b49ecc7e059aa64ff50eb24ec1d6" translate="yes" xml:space="preserve">
          <source>All types of model can support the insertion and removal of rows. Table models and hierarchical models can also support the insertion and removal of columns. It is important to notify other components about changes to the model's dimensions both</source>
          <target state="translated">모든 유형의 모델은 행 삽입 및 제거를 지원할 수 있습니다. 테이블 모델 및 계층 모델은 열 삽입 및 제거를 지원할 수도 있습니다. 모델 치수의 변경 사항에 대해 다른 구성 요소에 알리는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="1b4742f8053eb6a5abe78377e6307069eeb1f99e" translate="yes" xml:space="preserve">
          <source>All unspecified addresses will compare equal, namely &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;AnyIPv4&lt;/a&gt;, &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;AnyIPv6&lt;/a&gt; and Any.</source>
          <target state="translated">지정되지 않은 모든 주소는 동일합니다 (즉, &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;AnyIPv4&lt;/a&gt; , &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;AnyIPv6&lt;/a&gt; 및 Any).</target>
        </trans-unit>
        <trans-unit id="fa3b182e5f854c10d11f900ae88628ec770f8fc1" translate="yes" xml:space="preserve">
          <source>All values are displayed with the prefix and suffix (if set),</source>
          <target state="translated">모든 값은 접두사와 접미사 (설정된 경우)와 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5b590e6dd6697697a4b98292a14c46116f4091b0" translate="yes" xml:space="preserve">
          <source>All values must be in the range 0.0-1.0.</source>
          <target state="translated">모든 값은 0.0-1.0 범위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c04e47159a69c3d00f716619918198f46ed105f3" translate="yes" xml:space="preserve">
          <source>All values other than 0 have the same impact to the performance.</source>
          <target state="translated">All values other than 0 have the same impact to the performance.</target>
        </trans-unit>
        <trans-unit id="d5b0647561ad3af327939493b43a63a4fb59455d" translate="yes" xml:space="preserve">
          <source>All versioned &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclasses are consolidated, and the version numbers are reset to 1.</source>
          <target state="translated">버전이 지정된 모든 &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; 하위 클래스가 통합되고 버전 번호가 1로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="be2504748cf3d1bf0af1189b7756b161df0cfcbf" translate="yes" xml:space="preserve">
          <source>All video surfaces must support at least one shared &lt;code&gt;QVideoFrame::PixelFormat&lt;/code&gt;.</source>
          <target state="translated">All video surfaces must support at least one shared &lt;code&gt;QVideoFrame::PixelFormat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f46b0947bb0d0c9759359e4b47ce328bdd7584d2" translate="yes" xml:space="preserve">
          <source>All visual QML items are rendered using the scene graph, the default implementation of which is a low-level, high-performance rendering stack, closely tied to OpenGL. It is possible for subclasses of &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; to add their own custom content into the scene graph by setting the &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::ItemHasContents&lt;/a&gt; flag and reimplementing the &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem::updatePaintNode&lt;/a&gt;() function.</source>
          <target state="translated">모든 시각적 QML 항목은 장면 그래프를 사용하여 렌더링되며 기본 구현은 OpenGL과 밀접한 관련이있는 저수준의 고성능 렌더링 스택입니다. &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem의&lt;/a&gt; 서브 클래스가 QQuickItem &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;:: ItemHasContents&lt;/a&gt; 플래그 를 설정 하고 &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem :: updatePaintNode&lt;/a&gt; () 함수를 다시 구현하여 자체 사용자 정의 컨텐츠를 장면 그래프에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c0d1dead17602701bd8f5069c3476c704eda47d" translate="yes" xml:space="preserve">
          <source>All visual QML items are rendered using the scene graph, the default implementation of which is a low-level, high-performance rendering stack, closely tied to OpenGL. It is possible for subclasses of QQuickItem to add their own custom content into the scene graph by setting the &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::ItemHasContents&lt;/a&gt; flag and reimplementing the &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem::updatePaintNode&lt;/a&gt;() function.</source>
          <target state="translated">All visual QML items are rendered using the scene graph, the default implementation of which is a low-level, high-performance rendering stack, closely tied to OpenGL. It is possible for subclasses of QQuickItem to add their own custom content into the scene graph by setting the &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::ItemHasContents&lt;/a&gt; flag and reimplementing the &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem::updatePaintNode&lt;/a&gt;() function.</target>
        </trans-unit>
        <trans-unit id="2e8c77fd4b4df64d555f51d512e10f3747cc5c83" translate="yes" xml:space="preserve">
          <source>All visual QML items are rendered using the scene graph, the default implementation of which is a low-level, high-performance rendering stack, closely tied to accelerated graphics APIs, such as OpenGL, Vulkan, Metal, or Direct 3D. It is possible for subclasses of QQuickItem to add their own custom content into the scene graph by setting the &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::ItemHasContents&lt;/a&gt; flag and reimplementing the &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem::updatePaintNode&lt;/a&gt;() function.</source>
          <target state="translated">모든 시각적 QML 항목은 장면 그래프를 사용하여 렌더링되며, 기본 구현은 OpenGL, Vulkan, Metal 또는 Direct 3D와 같은 가속 그래픽 API에 밀접하게 연결된 저수준 고성능 렌더링 스택입니다. &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem :: ItemHasContents&lt;/a&gt; 플래그 를 설정 하고 &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem :: updatePaintNode&lt;/a&gt; () 함수를 다시 구현하여 QQuickItem의 하위 클래스가 자신의 사용자 지정 콘텐츠를 장면 그래프에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b71fba1ece7436075f04e624149cf025756ec8a9" translate="yes" xml:space="preserve">
          <source>All visual items in Qt Quick inherit from &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;. Although a &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; instance has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors#&quot;&gt;anchoring&lt;/a&gt; and key handling support.</source>
          <target state="translated">Qt Quick의 모든 시각적 항목은 &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; 에서 상속됩니다 . 있지만 &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem의&lt;/a&gt; 인스턴스가 더 외관이없는, 이러한 X 및 Y 위치, 폭, 높이 등의 시각적 인 항목에 공통적 인 모든 속성 정의 &lt;a href=&quot;qtquick-positioning-anchors#&quot;&gt;고정&lt;/a&gt; 키 처리를 지원한다.</target>
        </trans-unit>
        <trans-unit id="7acd87b15fe26e119e210c8638de60ee68bb4e93" translate="yes" xml:space="preserve">
          <source>All visual items in Qt Quick inherit from Item. Although an Item object has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors&quot;&gt;anchoring&lt;/a&gt; and key handling support.</source>
          <target state="translated">All visual items in Qt Quick inherit from Item. Although an Item object has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors&quot;&gt;anchoring&lt;/a&gt; and key handling support.</target>
        </trans-unit>
        <trans-unit id="b0ceb60a2abd9996e1827019a7364bf3806e21e6" translate="yes" xml:space="preserve">
          <source>All visual items in Qt Quick inherit from Item. Although an Item object has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors#&quot;&gt;anchoring&lt;/a&gt; and key handling support.</source>
          <target state="translated">Qt Quick의 모든 시각적 항목은 Item에서 상속됩니다. Item 객체는 시각적으로 보이지 않지만 x 및 y 위치, 너비 및 높이, &lt;a href=&quot;qtquick-positioning-anchors#&quot;&gt;고정&lt;/a&gt; 및 키 처리 지원 과 같이 시각적 항목에서 공통적 인 모든 속성을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="1be445c87ece14aa114aaf7942ad960ab4c45f9a" translate="yes" xml:space="preserve">
          <source>All visual items in Qt Quick inherit from QQuickItem. Although a QQuickItem instance has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors&quot;&gt;anchoring&lt;/a&gt; and key handling support.</source>
          <target state="translated">All visual items in Qt Quick inherit from QQuickItem. Although a QQuickItem instance has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors&quot;&gt;anchoring&lt;/a&gt; and key handling support.</target>
        </trans-unit>
        <trans-unit id="7509cd78402db3c0fcab23012cc495f8a5cc41e6" translate="yes" xml:space="preserve">
          <source>All visual objects provide this information.</source>
          <target state="translated">모든 시각적 개체는이 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ca1ecb02ca51664a81c06e7ad4d16ced6f62b161" translate="yes" xml:space="preserve">
          <source>All visual primitives support key handling via the Keys attached property. Keys can be handled via the onPressed and onReleased signal properties.</source>
          <target state="translated">모든 비주얼 프리미티브는 키 첨부 특성을 통한 키 처리를 지원합니다. 키는 onPressed 및 onReleased 신호 속성을 통해 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="c86ecc85afb83b911ca20cefedecdc260a9d9814" translate="yes" xml:space="preserve">
          <source>All visualization types support selecting a single data item - a bar, a scatter item, or a surface vertex - using mouse, touch, and programmatically via the series APIs. The selected item is highlighted in the rendered graph, and selecting causes emission of a series specific signal for this purpose, for example, &lt;a href=&quot;qbar3dseries#selectedBar-prop&quot;&gt;QBar3DSeries::selectedBarChanged&lt;/a&gt;(), which the application can handle.</source>
          <target state="translated">모든 시각화 유형은 마우스, 터치 및 시리즈 API를 통해 프로그래밍 방식으로 단일 데이터 항목 (막대, 산란 항목 또는 표면 정점) 선택을 지원합니다. 선택한 항목이 렌더링 된 그래프에서 강조 표시 &lt;a href=&quot;qbar3dseries#selectedBar-prop&quot;&gt;되고이 항목을 선택&lt;/a&gt; 하면 응용 프로그램에서 처리 할 수있는 QBar3DSeries :: selectedBarChanged ()와 같은 이러한 목적으로 시리즈 특정 신호가 방출 됩니다.</target>
        </trans-unit>
        <trans-unit id="80e9a0a96f2540f82989b4b6d6500e2b78e088ae" translate="yes" xml:space="preserve">
          <source>All widget attributes are supported.</source>
          <target state="translated">모든 위젯 속성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="95a0e3ab45ccc4630d86d4626eb44cd3e33eabfd" translate="yes" xml:space="preserve">
          <source>All widgets and layouts on the form can be connected together. However, spacers just provide spacing hints to layouts, so they cannot be connected to other objects.</source>
          <target state="translated">양식의 모든 위젯과 레이아웃을 함께 연결할 수 있습니다. 그러나 스페이서는 레이아웃에 간격 힌트를 제공하기 때문에 다른 객체에 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="080a84f1cda47a756460e92093ec46a069cb5f6c" translate="yes" xml:space="preserve">
          <source>All widgets and other user interface elements should have interfaces and plugins. If you want your application to support accessibility, you will need to consider the following:</source>
          <target state="translated">모든 위젯 및 기타 사용자 인터페이스 요소에는 인터페이스 및 플러그인이 있어야합니다. 응용 프로그램이 내게 필요한 옵션을 지원하도록하려면 다음을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7b9e7cb193efb846a36e889eb203f54ec563281" translate="yes" xml:space="preserve">
          <source>All widgets are visible. The current widget is merely raised.</source>
          <target state="translated">모든 위젯이 표시됩니다. 현재 위젯은 단순히 올려집니다.</target>
        </trans-unit>
        <trans-unit id="beaed580447d7352860a239657a1a8f54a8f04e8" translate="yes" xml:space="preserve">
          <source>All widgets have a default property sheet which populates</source>
          <target state="translated">모든 위젯에는 기본 속성 시트가 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="9a9ac9d2951042c6493bde23cb9eb531024ab442" translate="yes" xml:space="preserve">
          <source>All widgets set here will be deleted by the scroll area when it is destroyed unless you separately reparent the widget after setting some other corner widget (or &lt;code&gt;nullptr&lt;/code&gt;).</source>
          <target state="translated">여기에 설정 한 모든 위젯은 다른 코너 위젯 (또는 &lt;code&gt;nullptr&lt;/code&gt; ) 을 설정 한 후 위젯을 별도로 다시 지정하지 않는 한 스크롤 영역이 삭제되면 스크롤 영역에 의해 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="04e9eff0ffe5c35b6710d3a24f386bb6fd21f365" translate="yes" xml:space="preserve">
          <source>All widgets set here will be deleted by the tab widget when it is destroyed unless you separately reparent the widget after setting some other corner widget (or &lt;code&gt;nullptr&lt;/code&gt;).</source>
          <target state="translated">여기에 설정된 모든 위젯은 다른 코너 위젯 (또는 &lt;code&gt;nullptr&lt;/code&gt; ) 을 설정 한 후 위젯을 별도로 다시 지정하지 않는 한 탭 위젯에 의해 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="c4f4259711f867c3c155d6fbe2b3cf66758ca973" translate="yes" xml:space="preserve">
          <source>All widgets set here will be deleted by the wizard when it is destroyed unless you separately reparent the widget after setting some other side widget (or &lt;code&gt;nullptr&lt;/code&gt;).</source>
          <target state="translated">여기에 설정 한 모든 위젯은 다른 사이드 위젯 (또는 &lt;code&gt;nullptr&lt;/code&gt; ) 을 설정 한 후 위젯을 별도로 다시 지정하지 않는 한 마법사가 삭제되면 마법사에 의해 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="f31833641561f8571d955a9ba44d0b4064976f87" translate="yes" xml:space="preserve">
          <source>All widgets that are currently managed by</source>
          <target state="translated">현재 관리하고있는 모든 위젯</target>
        </trans-unit>
        <trans-unit id="d46fa61b2166642c1504433b8aaba2fecb594e0e" translate="yes" xml:space="preserve">
          <source>All window managers and independent tray implementations for X11 that implement the &lt;a href=&quot;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html&quot;&gt;freedesktop.org XEmbed system tray specification&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html&quot;&gt;freedesktop.org XEmbed 시스템 트레이 사양&lt;/a&gt; 을 구현하는 X11의 모든 창 관리자 및 독립 트레이 구현 .</target>
        </trans-unit>
        <trans-unit id="ccffd89e5ea12449bfaee1861506664a29bca1e0" translate="yes" xml:space="preserve">
          <source>All window managers and independent tray implementations for X11 that implement the &lt;a href=&quot;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html%20freedesktop.org&quot;&gt;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html freedesktop.org&lt;/a&gt; XEmbed system tray specification.</source>
          <target state="translated">&lt;a href=&quot;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html%20freedesktop.org&quot;&gt;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html freedesktop.org&lt;/a&gt; XEmbed 시스템 트레이 사양 을 구현하는 X11의 모든 창 관리자 및 독립 트레이 구현 .</target>
        </trans-unit>
        <trans-unit id="3830bbcad4ecb8123cf869f566a4725819c9687e" translate="yes" xml:space="preserve">
          <source>All you need is the &quot;Instant Client Package - Basic&quot; and &quot;Instant Client Package - SDK&quot;.</source>
          <target state="translated">&quot;인스턴트 클라이언트 패키지-기본&quot;및 &quot;인스턴트 클라이언트 패키지-SDK&quot;만 있으면됩니다.</target>
        </trans-unit>
        <trans-unit id="ea0caa46fb814990087f07d03eccc29d7d14c466" translate="yes" xml:space="preserve">
          <source>All you need to do to introduce a final state in the graph is create a &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; object and use it as the target of one or more transitions.</source>
          <target state="translated">그래프에 최종 상태를 도입하려면 &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; 객체를 생성하여 하나 이상의 전환 대상으로 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="b2364fed5420e0771bc46586693e0779bb05ce47" translate="yes" xml:space="preserve">
          <source>All you need to do to introduce a final state in the graph is create a &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; object and use it as the target of one or more transitions.</source>
          <target state="translated">그래프에 최종 상태를 도입하려면 &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; 객체를 만들어 하나 이상의 전환 대상으로 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="688777d4497ad91d4bcb60139b185bcba4f706fd" translate="yes" xml:space="preserve">
          <source>Allocate the server-side storage</source>
          <target state="translated">서버 측 스토리지 할당</target>
        </trans-unit>
        <trans-unit id="010ee53c1a98de15d1c57efdc897078fcc89ea95" translate="yes" xml:space="preserve">
          <source>Allocates</source>
          <target state="translated">Allocates</target>
        </trans-unit>
        <trans-unit id="3c47894000886307ac6285109adc2f18d51d364a" translate="yes" xml:space="preserve">
          <source>Allocates server-side storage for this texture object taking into account, the format, dimensions, mipmap levels, array layers and cubemap faces.</source>
          <target state="translated">형식, 크기, 밉맵 수준, 배열 레이어 및 큐브 맵면을 고려하여이 텍스처 개체에 서버 측 저장소를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="420c9d5412bc17db56591ea50a8ab3e500e193fa" translate="yes" xml:space="preserve">
          <source>Allocates space for a copy of</source>
          <target state="translated">사본을위한 공간을 할당합니다</target>
        </trans-unit>
        <trans-unit id="22de7284d73ea025813096e915d42f3e9d3f00f5" translate="yes" xml:space="preserve">
          <source>Allocates the platform resources associated with the offscreen surface.</source>
          <target state="translated">오프 스크린 화면과 관련된 플랫폼 리소스를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="97ab690f92529d8be1131c37129188d049c11931" translate="yes" xml:space="preserve">
          <source>Allocates the platform resources associated with the window.</source>
          <target state="translated">창과 관련된 플랫폼 리소스를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="33ef6f8854276b4aa3eb5f381c3d2e938325b1d1" translate="yes" xml:space="preserve">
          <source>Allocating the Selection Lists</source>
          <target state="translated">선택 목록 할당</target>
        </trans-unit>
        <trans-unit id="149ebf5a5b0454c1ee752ec77824d0805587309b" translate="yes" xml:space="preserve">
          <source>Allow characteristic values without responses to be written.</source>
          <target state="translated">응답이없는 특성 값을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39ea0cf7080b864afbe3d65599b10179efb62715" translate="yes" xml:space="preserve">
          <source>Allow for characteristic values to be written.</source>
          <target state="translated">특성 값을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57c1ece58c3cab85af909ddab15bb6598ac3e17c" translate="yes" xml:space="preserve">
          <source>Allow for the broadcasting of Generic Attributes (GATT) characteristic values.</source>
          <target state="translated">일반 속성 (GATT) 특성 값을 브로드 캐스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab3c7b37e41b31c703bd3b267d5953e5ea9a194d" translate="yes" xml:space="preserve">
          <source>Allow other applications to replace us with the &lt;a href=&quot;qdbusconnectioninterface#ServiceQueueOptions-enum&quot;&gt;ReplaceExistingService&lt;/a&gt; option to &lt;a href=&quot;qdbusconnectioninterface#registerService&quot;&gt;registerService&lt;/a&gt;() without intervention. If that happens, the &lt;a href=&quot;qdbusconnectioninterface#serviceUnregistered&quot;&gt;serviceUnregistered&lt;/a&gt;() signal will be emitted.</source>
          <target state="translated">다른 애플리케이션이 우리를 &lt;a href=&quot;qdbusconnectioninterface#ServiceQueueOptions-enum&quot;&gt;ReplaceExistingService&lt;/a&gt; 옵션 으로 대체하여 개입없이 service () 를 &lt;a href=&quot;qdbusconnectioninterface#registerService&quot;&gt;등록&lt;/a&gt; 할 수 있도록합니다. 이 경우 &lt;a href=&quot;qdbusconnectioninterface#serviceUnregistered&quot;&gt;serviceUnregistered&lt;/a&gt; () 신호가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d3d947b4b44126c4dbfd0c5ff0baea458aad616" translate="yes" xml:space="preserve">
          <source>Allow other services to bind to the same address and port. This is useful when multiple processes share the load of a single service by listening to the same address and port (e.g., a web server with several pre-forked listeners can greatly improve response time). However, because any service is allowed to rebind, this option is subject to certain security considerations. Note that by combining this option with ReuseAddressHint, you will also allow your service to rebind an existing shared address. On Unix, this is equivalent to the SO_REUSEADDR socket option. On Windows, this is the default behavior, so this option is ignored.</source>
          <target state="translated">다른 서비스가 동일한 주소 및 포트에 바인딩되도록 허용하십시오. 이는 여러 프로세스가 동일한 주소와 포트를 수신하여 단일 서비스의로드를 공유 할 때 유용합니다 (예 : 사전 포크 된 리스너가 여러 개인 웹 서버가 응답 시간을 크게 향상시킬 수 있음). 그러나 모든 서비스를 리 바인드 할 수 있으므로이 옵션에는 특정 보안 고려 사항이 적용됩니다. 이 옵션을 ReuseAddressHint와 결합하면 서비스에서 기존 공유 주소를 리 바인드 할 수도 있습니다. 유닉스에서 이것은 SO_REUSEADDR 소켓 옵션과 동일합니다. Windows에서는 이것이 기본 동작이므로이 옵션은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7602209e4f442497ae4815572528a26fef6da8ce" translate="yes" xml:space="preserve">
          <source>Allow the characteristic values to be read.</source>
          <target state="translated">특성 값을 읽도록 허용하십시오.</target>
        </trans-unit>
        <trans-unit id="4a15d2b1d78fdf944af24b44432a3ce05bba8f57" translate="yes" xml:space="preserve">
          <source>Allow the process hosting the bound service to go through its normal memory management. See &lt;a href=&quot;https://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT&quot;&gt;BIND_ALLOW_OOM_MANAGEMENT&lt;/a&gt; documentation for more details.</source>
          <target state="translated">바인딩 된 서비스를 호스팅하는 프로세스가 정상적인 메모리 관리를 거치도록합니다. 자세한 내용은 &lt;a href=&quot;https://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT&quot;&gt;BIND_ALLOW_OOM_MANAGEMENT&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9d39874c41b83942a48f4b3711d586a0a4b70112" translate="yes" xml:space="preserve">
          <source>Allow the user to select the alpha component of a color.</source>
          <target state="translated">사용자가 색상의 알파 구성 요소를 선택할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="b9414693b2c2f058521c91d9f398a1514132a462" translate="yes" xml:space="preserve">
          <source>Allow to query if this engine represents a null icon. The</source>
          <target state="translated">이 엔진이 널 아이콘을 나타내는 지 조회 할 수 있습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="1fc3c73677c9882f3fdd015472725fe4a23339d6" translate="yes" xml:space="preserve">
          <source>Allowed hue values</source>
          <target state="translated">허용되는 색조 값</target>
        </trans-unit>
        <trans-unit id="3dab90474b73d659ae550ccaa7a71ab8c17b8dc9" translate="yes" xml:space="preserve">
          <source>Allowed values are between -inf and inf. By default these properties are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">허용되는 값은 -inf와 inf 사이입니다. 기본적으로 이러한 특성은 &lt;code&gt;0&lt;/code&gt; 으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6320dab211f63cc04288a086ddbdb11adc4cea1e" translate="yes" xml:space="preserve">
          <source>Allowed values are between 0 and inf (practical maximum depends on GPU). By default the property is set to &lt;code&gt;0&lt;/code&gt; (no samples).</source>
          <target state="translated">허용되는 값은 0과 inf 사이입니다 (실제 최대 값은 GPU에 따라 다름). 기본적으로이 속성은 &lt;code&gt;0&lt;/code&gt; (샘플 없음)으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff4cf19a204ceea06af4bcd43ec4363d5c932e7b" translate="yes" xml:space="preserve">
          <source>Allowed values are between 0.0 and 360.0. By default the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="translated">허용되는 값은 0.0과 360.0 사이입니다. 기본적 &lt;code&gt;0.0&lt;/code&gt; 속성은 0.0 으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dae76a1d477bf5d8f7a13fb6d7dc9744cc935dd" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to open popup windows without user interaction.</source>
          <target state="translated">JavaScript 프로그램이 사용자 상호 작용없이 팝업 창을 열 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="da7b8c390875fe2958d570e7e1c4972150d7f065" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to open popup windows without user interaction. Enabled by default.</source>
          <target state="translated">JavaScript 프로그램이 사용자 상호 작용없이 팝업 창을 열 수 있도록합니다. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="3faf9a6b43c34eea359e2b65d3f3fa0233b0be01" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to read from and write to the clipboard. Writing to the clipboard is always allowed if it is specifically requested by the user. See JavascriptCanPaste to also allow pasting the content of the clipboard content from JavaScript. Disabled by default.</source>
          <target state="translated">JavaScript 프로그램이 클립 보드에서 읽고 클립 보드에 쓸 수 있도록합니다. 클립 보드에 쓰기는 사용자가 특별히 요청한 경우 항상 허용됩니다. JavaScript에서 클립 보드 컨텐츠의 컨텐츠를 붙여 넣을 수있게하려면 JavascriptCanPaste를 참조하십시오. 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="98f526954fa2ca885d39c124a17927da2102d4ff" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to read from or write to the clipboard. Writing to the clipboard is always allowed if it is specifically requested by the user.</source>
          <target state="translated">JavaScript 프로그램이 클립 보드에서 읽거나 클립 보드에 쓸 수 있도록합니다. 클립 보드에 쓰기는 사용자가 특별히 요청한 경우 항상 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="a5c5bd043365e2c0a3d1a93acf55b216a5dcdfe7" translate="yes" xml:space="preserve">
          <source>Allows OpenGL shader programs to be linked and used</source>
          <target state="translated">OpenGL 쉐이더 프로그램을 링크하여 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="24107efcbd01551be8d84bad57ef84fbae8e6307" translate="yes" xml:space="preserve">
          <source>Allows OpenGL shaders to be compiled</source>
          <target state="translated">OpenGL 쉐이더를 컴파일 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="cde3f14b48be48a9af5309662e15187b2cce4697" translate="yes" xml:space="preserve">
          <source>Allows a HID Host to map information from the Report Map characteristic value for Input Report, Output Report or Feature Report data to the Characteristic UUID of external service characteristics used to transfer the associated data.</source>
          <target state="translated">HID 호스트가 입력 보고서, 출력 보고서 또는 기능 보고서 데이터에 대한 보고서 맵 특성 값의 정보를 연관된 데이터를 전송하는 데 사용되는 외부 서비스 특성의 특성 UUID에 맵핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56fe6194f63466e401b407c7534a1b5173ce9602" translate="yes" xml:space="preserve">
          <source>Allows a property to smoothly track a value. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">속성이 값을 부드럽게 추적 할 수 있도록합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d727fe43118361a803833820cc3199622a75beb5" translate="yes" xml:space="preserve">
          <source>Allows a property to track a value in a spring-like motion. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">속성이 스프링과 같은 동작으로 값을 추적 할 수 있도록합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3cd72381be2cc45921bacfad8e45287d3c826af" translate="yes" xml:space="preserve">
          <source>Allows a view to use different delegates for different types of items in the model. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">뷰에서 모델의 다른 유형의 항목에 대해 다른 대리자를 사용할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7327e3b63816a2dfb68527365ba55678f030a54f" translate="yes" xml:space="preserve">
          <source>Allows activating windows by using the window.focus() JavaScript method. Disabled by default. (Added in Qt 5.10)</source>
          <target state="translated">window.focus () JavaScript 메서드를 사용하여 창을 활성화 할 수 있습니다. 기본적으로 비활성화되어 있습니다. (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="48d74160074c23d9eff4f248f39fd18c0154b2d8" translate="yes" xml:space="preserve">
          <source>Allows all navigation requests to URLs with unknown schemes.</source>
          <target state="translated">알 수없는 체계의 URL에 대한 모든 탐색 요청을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="430f50d57a745fa76924e43cfb8fc574842cfd64" translate="yes" xml:space="preserve">
          <source>Allows an observer to monitor for any of the above changes.</source>
          <target state="translated">관찰자가 위의 변경 사항을 모니터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="981a48dcf7f8c3c7f81d585ab7837e3334b0be76" translate="yes" xml:space="preserve">
          <source>Allows animations to be run sequentially. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">애니메이션을 순차적으로 실행할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54cef98a7e9452399fb30c8ec38f5dbb0ebbe55e" translate="yes" xml:space="preserve">
          <source>Allows any ignored gesture events to be propagated to parent widgets which have specified this hint. By default only gestures that are in the &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureStarted&lt;/a&gt; state are propagated and the widget always gets the full gesture sequence starting with a gesture in the &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureStarted&lt;/a&gt; state and ending with a gesture in the &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureFinished&lt;/a&gt; or &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureCanceled&lt;/a&gt; states.</source>
          <target state="translated">무시 된 제스처 이벤트를이 힌트를 지정한 상위 위젯으로 전파 할 수 있습니다. 기본적으로 &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt :: GestureStarted&lt;/a&gt; 상태 인 제스처 만 전파되며 위젯은 항상 &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt :: GestureStarted&lt;/a&gt; 상태의 제스처로 시작하고 &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt :: GestureFinished&lt;/a&gt; 또는 &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt ::&lt;/a&gt; 에서 제스처로 끝나는 전체 제스처 시퀀스를 가져옵니다. 제스처 취소 상태.</target>
        </trans-unit>
        <trans-unit id="e98f5d00657b90722d8a238255cff1d2b7d89537" translate="yes" xml:space="preserve">
          <source>Allows configuration of browser properties and attributes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">브라우저 속성 및 속성을 구성 할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4e8c367c9b6117ea2701afe92e9b76c3389f8b1" translate="yes" xml:space="preserve">
          <source>Allows controlling the scene camera along orbital path</source>
          <target state="translated">궤도 경로를 따라 장면 카메라를 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="db74cbe5fec1ef85fb931f5281151b18a82db85c" translate="yes" xml:space="preserve">
          <source>Allows controlling the scene camera from the first person perspective</source>
          <target state="translated">1 인칭 시점에서 장면 카메라를 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2e9b13c69dc1c7d59190b313b4b2a67033f3b2ad" translate="yes" xml:space="preserve">
          <source>Allows creation of a 2D text in 3D space</source>
          <target state="translated">3D 공간에서 2D 텍스트를 만들 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d1dadc965e0827cd49056f19a179c3a6d3c102a5" translate="yes" xml:space="preserve">
          <source>Allows creation of a 3D extruded text in 3D space</source>
          <target state="translated">3D 공간에서 3D 돌출 텍스트를 만들 수 있습니다</target>
        </trans-unit>
        <trans-unit id="c6512098e511e5aabc2ce2b2efca82f763c414b8" translate="yes" xml:space="preserve">
          <source>Allows creation of a cone in 3D space. * * * * * The QConeGeometry class is most commonly used internally by the QConeMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses. The class * allows for creation of both a cone and a truncated cone</source>
          <target state="translated">3D 공간에서 원뿔을 만들 수 있습니다. * * * * * QConeGeometry 클래스는 QConeMesh에서 가장 일반적으로 사용하지만 사용자 정의 Qt3DRender :: QGeometryRenderer 서브 클래스에서도 사용할 수 있습니다. 클래스 *는 원추형과 원추형 원뿔을 모두 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85e9472ea71b72e615ec0e7d23f8503eddb7f867" translate="yes" xml:space="preserve">
          <source>Allows creation of a cuboid in 3D space. * * * * * The QCuboidGeometry class is most commonly used internally by the QCuboidMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="translated">3D 공간에서 직육면체를 만들 수 있습니다. * * * * * QCuboidGeometry 클래스는 QCuboidMesh에서 가장 일반적으로 사용되지만 사용자 정의 Qt3DRender :: QGeometryRenderer 서브 클래스에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3933c967ac4248802d920744d5051d0437f93802" translate="yes" xml:space="preserve">
          <source>Allows creation of a cylinder in 3D space. * * * * * The QCylinderGeometry class is most commonly used internally by the QCylinderMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="translated">3D 공간에서 원통을 만들 수 있습니다. * * * * * QCylinderGeometry 클래스는 QCylinderMesh에서 가장 일반적으로 사용하지만 사용자 정의 Qt3DRender :: QGeometryRenderer 서브 클래스에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d146511c50842659d403c41e5890b09c2ecdea0c" translate="yes" xml:space="preserve">
          <source>Allows creation of a plane in 3D space. * * * * The QPlaneGeometry class is most commonly used internally by the QPlaneMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="translated">3D 공간에서 평면을 만들 수 있습니다. * * * * QPlaneGeometry 클래스는 QPlaneMesh에서 가장 일반적으로 사용하지만 사용자 정의 Qt3DRender :: QGeometryRenderer 서브 클래스에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b13225268ea4632d37751a1a8f110a0b0d868d74" translate="yes" xml:space="preserve">
          <source>Allows creation of a sphere in 3D space. * * * * * The QSphereGeometry class is most commonly used internally by the QSphereMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="translated">3D 공간에서 구를 만들 수 있습니다. * * * * * QSphereGeometry 클래스는 QSphereMesh에서 가장 일반적으로 사용하지만 사용자 정의 Qt3DRender :: QGeometryRenderer 서브 클래스에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="428151aae2d73798ad8f11cc7fd1922e1834ad2e" translate="yes" xml:space="preserve">
          <source>Allows creation of a torus in 3D space. * * * * * The QTorusGeometry class is most commonly used internally by the QTorusMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="translated">3D 공간에서 원환 체를 만들 수 있습니다. * * * * * QTorusGeometry 클래스는 QTorusMesh에서 가장 일반적으로 사용하지만 사용자 정의 Qt3DRender :: QGeometryRenderer 서브 클래스에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4a3475a41cf4e455d880ad3e3fc0d6b7f8b6ba2" translate="yes" xml:space="preserve">
          <source>Allows data from drag and drop operations to be dropped onto the widget (see &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;QWidget::setAcceptDrops&lt;/a&gt;()).</source>
          <target state="translated">끌어서 놓기 조작의 데이터를 위젯으로 끌어 놓을 수 있습니다 ( &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;QWidget :: setAcceptDrops&lt;/a&gt; () 참조).</target>
        </trans-unit>
        <trans-unit id="2e1cfaeb6770e85b818d14296e1ab3a86c36ae5a" translate="yes" xml:space="preserve">
          <source>Allows defining a custom easing curve using a TCB spline</source>
          <target state="translated">TCB 스플라인을 사용하여 사용자 정의 여유 곡선을 정의 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a36ad2aab18b063cfa56ac098db537b0785fb7ab" translate="yes" xml:space="preserve">
          <source>Allows defining a custom easing curve using a cubic bezier spline</source>
          <target state="translated">3 차 베 지어 스플라인을 사용하여 사용자 정의 여유 곡선을 정의 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="7083517f1ca2c0e0c2e1769195a408c3eb1117d3" translate="yes" xml:space="preserve">
          <source>Allows disabled menu items to be active.</source>
          <target state="translated">비활성화 된 메뉴 항목을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34ea4eaf99599f6e96c13f695135d150db5bebf7" translate="yes" xml:space="preserve">
          <source>Allows dynamic loading of a 3D subtree from a URL or Component. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Allows dynamic loading of a 3D subtree from a URL or Component. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="393cb1ccf21af7cb8f5a68bf4a1386cfdd38eb18" translate="yes" xml:space="preserve">
          <source>Allows dynamic loading of a subtree from a URL or Component. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">URL 또는 구성 요소에서 하위 트리를 동적으로로드 할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f00ba24ff9bdfca09333e2efc51efd2cedd6a516" translate="yes" xml:space="preserve">
          <source>Allows dynamic loading of keyboard layout. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">키보드 레이아웃을 동적으로로드 할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d500bb605e5a631bf6508d5a5dbecc1a9b9bee4a" translate="yes" xml:space="preserve">
          <source>Allows fonts to be loaded by URL. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">URL로 글꼴을로드 할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e446183775a9435eed9856efad6a90ef02553f1" translate="yes" xml:space="preserve">
          <source>Allows fonts to be loaded by name or URL. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">이름이나 URL로 글꼴을로드 할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c4e3c60c7aae5b9fe6ebf4aed4fa233ca7487e4" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent lines in a line list</source>
          <target state="translated">지오메트리 셰이더가 라인리스트에서 인접한 라인에 액세스 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="62f64f629eead280dd689f5256ec7277cd72fdab" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent lines in a line strip</source>
          <target state="translated">지오메트리 셰이더가 선 스트립의 인접한 선에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa41c28862a3f88b99156a8acc62be19060c1562" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent triangles in a triangle list</source>
          <target state="translated">지오메트리 셰이더가 삼각형 목록에서 인접한 삼각형에 액세스 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4ac30ba47b930243e611e265a96695bea730bffc" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent triangles in a triangle strip</source>
          <target state="translated">기하 셰이더가 삼각형 스트립에서 인접한 삼각형에 접근 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="83119efa442c40da476592e2b4de51f20219f3c9" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to access other local URLs.</source>
          <target state="translated">로컬로로드 된 문서가 다른 로컬 URL에 액세스 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="b8f81cecebb2ffe23baa2d19463d205668775606" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to access other local URLs. Enabled by default.</source>
          <target state="translated">로컬로로드 된 문서가 다른 로컬 URL에 액세스 할 수 있도록합니다. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="47161d24b0a1d1c43e123856e25757fdaba5c50f" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to access remote URLs.</source>
          <target state="translated">로컬로로드 된 문서가 원격 URL에 액세스 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="0aab686cd8e566239295851a3d72e3b809e65ee1" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to ignore cross-origin rules so that they can access remote resources that would normally be blocked, because all remote resources are considered cross-origin for a local file. Remote access that would not be blocked by cross-origin rules is still possible when this setting is disabled (default). Note that disabling this setting does not stop XMLHttpRequests or media elements in local files from accessing remote content. Basically, it only stops some HTML subresources, such as scripts, and therefore disabling this setting is not a safety mechanism.</source>
          <target state="translated">로컬로로드 된 문서가 원본 간 규칙을 무시하여 모든 원격 자원이 로컬 파일에 대해 원본 간으로 간주되므로 일반적으로 차단되는 원격 자원에 액세스 할 수 있습니다. 이 설정을 사용하지 않으면 (원본) 교차 출처 규칙에 의해 차단되지 않은 원격 액세스가 여전히 가능합니다. 이 설정을 사용 안함으로 설정해도 로컬 파일의 XMLHttpRequests 또는 미디어 요소가 원격 컨텐츠에 액세스하는 것을 막을 수는 없습니다. 기본적으로 스크립트와 같은 일부 HTML 하위 리소스 만 중지하므로이 설정을 비활성화하는 것은 안전 메커니즘이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1ed350f3f8641620d8d324af34b2d248ea5e2e30" translate="yes" xml:space="preserve">
          <source>Allows manipulating the window's thumbnail toolbar. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">창의 축소판 도구 모음을 조작 할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08ab0259330e156b87551af95435e07ddb7e6a29" translate="yes" xml:space="preserve">
          <source>Allows monitoring a QFuture using signals and slots</source>
          <target state="translated">신호 및 슬롯을 사용하여 QFuture를 모니터링 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="f280a2b655920c224bc38db4631d94965f46b74d" translate="yes" xml:space="preserve">
          <source>Allows navigation requests to URLs with unknown schemes that are issued from user-interaction (like a mouse-click), whereas other navigation requests (for example from JavaScript) are suppressed.</source>
          <target state="translated">사용자 상호 작용 (마우스 클릭과 같은)으로 발행 된 알 수없는 체계를 가진 URL에 대한 탐색 요청을 허용하는 반면, JavaScript와 같은 다른 탐색 요청은 억제됩니다.</target>
        </trans-unit>
        <trans-unit id="80fd508149a095da83d0de44eb3771675f23e48c" translate="yes" xml:space="preserve">
          <source>Allows or disallows the origin. Setting</source>
          <target state="translated">원점을 허용하거나 허용하지 않습니다. 환경</target>
        </trans-unit>
        <trans-unit id="170cc8b9f53eb410fa37308fc9c3215281bba344" translate="yes" xml:space="preserve">
          <source>Allows popups as a combobox drop-down menu.</source>
          <target state="translated">팝업을 콤보 박스 드롭 다운 메뉴로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="882db9e14947aa8c2e36a4575846d1f24bc2470a" translate="yes" xml:space="preserve">
          <source>Allows replica &lt;a href=&quot;qtremoteobjects-repc#prop&quot;&gt;PROP&lt;/a&gt; members with the PERSISTED trait to save their current value when the replica is deleted and restore a stored value the next time the replica is started.</source>
          <target state="translated">PERSISTED 특성이있는 복제본 &lt;a href=&quot;qtremoteobjects-repc#prop&quot;&gt;PROP&lt;/a&gt; 구성원이 복제본을 삭제할 때 현재 값을 저장하고 다음에 복제본을 시작할 때 저장된 값을 복원 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca03f2e53a8f934b2eca2a77ef346ebacf0b3734" translate="yes" xml:space="preserve">
          <source>Allows retrieving information about the volume's space, its mount point, label, and filesystem name.</source>
          <target state="translated">볼륨 공간, 마운트 지점, 레이블 및 파일 시스템 이름에 대한 정보를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91608b74b7828a20db93568e1bb64255e3b06058" translate="yes" xml:space="preserve">
          <source>Allows setting a &lt;a href=&quot;qremoteobjectabstractpersistedstore&quot;&gt;QRemoteObjectAbstractPersistedStore&lt;/a&gt; instance for the node.</source>
          <target state="translated">노드에 대한 &lt;a href=&quot;qremoteobjectabstractpersistedstore&quot;&gt;QRemoteObjectAbstractPersistedStore&lt;/a&gt; 인스턴스를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8df79570d4b0cebb6d575f064012bebb79331469" translate="yes" xml:space="preserve">
          <source>Allows setting a reference to the</source>
          <target state="translated">에 대한 참조를 설정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6950f1b7e260d6f44d71699c1ca99f948628c43c" translate="yes" xml:space="preserve">
          <source>Allows setting the spot metering point to</source>
          <target state="translated">스팟 측광 점을</target>
        </trans-unit>
        <trans-unit id="c79b0469826ed15e37f2e3b64fd6e422ba1f25c7" translate="yes" xml:space="preserve">
          <source>Allows specifying which color components should be written to the currently bound frame buffer</source>
          <target state="translated">현재 바인딩 된 프레임 버퍼에 기록 할 색상 구성 요소를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b722802b56aca1ad716b32d80003256ee09f7dd7" translate="yes" xml:space="preserve">
          <source>Allows specifying which color components should be written to the currently bound frame buffer. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">현재 바인딩 된 프레임 버퍼에 기록 할 색상 구성 요소를 지정할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1eb5369cb9e661b44d703a1903eddff10791498c" translate="yes" xml:space="preserve">
          <source>Allows specifying which color components should be written to the currently bound frame buffer. &lt;a href=&quot;qt3drender-qcolormask#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">현재 바인딩 된 프레임 버퍼에 기록 할 색상 구성 요소를 지정할 수 있습니다. &lt;a href=&quot;qt3drender-qcolormask#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c80503f05787d4871ce11a18217cbab13b17172" translate="yes" xml:space="preserve">
          <source>Allows the application to run setuid on UNIX platforms if</source>
          <target state="translated">애플리케이션이 UNIX 플랫폼에서 setuid를 실행할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="cd4b2fe39b27cb12ecfe76530143b3b87fa5fbe2" translate="yes" xml:space="preserve">
          <source>Allows the file name of the library to specify a particular object file within an archive file. If this hint is given, the filename of the library consists of a path, which is a reference to an archive file, followed by a reference to the archive member.</source>
          <target state="translated">라이브러리의 파일 이름이 아카이브 파일 내에서 특정 오브젝트 파일을 지정할 수 있도록합니다. 이 힌트가 제공되면 라이브러리의 파일 이름은 아카이브 파일에 대한 참조 인 경로와 아카이브 멤버에 대한 참조로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="10280a14999cf5a57dea72d26b9c22bb678ec339" translate="yes" xml:space="preserve">
          <source>Allows the new rows and columns to be populated with items.</source>
          <target state="translated">새 행과 열을 항목으로 채울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16a5941a3c3e9e207029ea3b7b284a1831a50ba3" translate="yes" xml:space="preserve">
          <source>Allows the parent axis to have a zero value if</source>
          <target state="translated">다음과 같은 경우 부모 축이 0 값을 갖도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="decf27545afa0fce767d47984e8b3de43788aa25" translate="yes" xml:space="preserve">
          <source>Allows the parent axis to have negative values if</source>
          <target state="translated">다음과 같은 경우 부모 축이 음수 값을 갖도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="90b02b4a4621e462eeed3821150f17b889456dc5" translate="yes" xml:space="preserve">
          <source>Allows the specification of an attachment of a render target (whether it is a color texture, a depth texture, etc... )</source>
          <target state="translated">렌더링 대상의 첨부 파일을 지정할 수 있습니다 (컬러 텍스처, 깊이 텍스처 등).</target>
        </trans-unit>
        <trans-unit id="1e96fe35114bda2288ed7e255760b8e23fae97c4" translate="yes" xml:space="preserve">
          <source>Allows the user to define a set of actions that they wish to use within an application</source>
          <target state="translated">사용자가 응용 프로그램 내에서 사용하려는 일련의 작업을 정의 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="fc28293dbbc9611b55bd034296005681a9181522" translate="yes" xml:space="preserve">
          <source>Allows the user to define a set of actions that they wish to use within an application.</source>
          <target state="translated">사용자가 응용 프로그램 내에서 사용하려는 일련의 작업을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39a3cdedd42141b1820ed26528563fd480acf005" translate="yes" xml:space="preserve">
          <source>Allows the user to select from a set of preset values</source>
          <target state="translated">사용자가 일련의 사전 설정 값 중에서 선택할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="876fce6b47915bfb9f6240b4893c70ff083dab1b" translate="yes" xml:space="preserve">
          <source>Allows the user to select from a set of preset values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">사용자가 일련의 사전 설정 값 중에서 선택할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47057f29748ab5af8c9ea30a285fa0aa13576f2c" translate="yes" xml:space="preserve">
          <source>Allows the user to switch between different views or subtasks</source>
          <target state="translated">사용자가 다른보기 또는 하위 작업간에 전환 할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="156a0b2561fef85c582030c2701fddf66a2dd61a" translate="yes" xml:space="preserve">
          <source>Allows the user to switch between different views or subtasks. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">사용자가 다른보기 또는 하위 작업간에 전환 할 수 있습니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f215110ecd50ba8a353808c3f2901c739ff3d11f" translate="yes" xml:space="preserve">
          <source>Allows the window.focus() method in JavaScript. Disallowed by default.</source>
          <target state="translated">JavaScript에서 window.focus () 메서드를 허용합니다. 기본적으로 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7745583a5b3116b4e638393948417abe5addc8e3" translate="yes" xml:space="preserve">
          <source>Allows to map the channels within the clip onto an invocation of a callback object</source>
          <target state="translated">Allows to map the channels within the clip onto an invocation of a callback object</target>
        </trans-unit>
        <trans-unit id="bee1ea2e6528125bf382f962c84063fd9f4b7bed" translate="yes" xml:space="preserve">
          <source>Allows to map the channels within the clip onto an invocation of a callback object. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Allows to map the channels within the clip onto an invocation of a callback object. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7666331be8c269be7f8c0fb11a480fe13f6e8266" translate="yes" xml:space="preserve">
          <source>Allows to map the channels within the clip onto an invocation of a callback object. &lt;a href=&quot;qt3danimation-qcallbackmapping#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Allows to map the channels within the clip onto an invocation of a callback object. &lt;a href=&quot;qt3danimation-qcallbackmapping#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22bc1e2209e5bd4f700803dbf1f4af0cd8f3b639" translate="yes" xml:space="preserve">
          <source>Allows to map the channels within the clip onto properties of objects in the application</source>
          <target state="translated">Allows to map the channels within the clip onto properties of objects in the application</target>
        </trans-unit>
        <trans-unit id="060f6a5ad92bb9739c9b07c66d30058c2c256a68" translate="yes" xml:space="preserve">
          <source>Allows to map the channels within the clip onto properties of objects in the application. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Allows to map the channels within the clip onto properties of objects in the application. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dca72691353c8473e561134c748067ab0150d00c" translate="yes" xml:space="preserve">
          <source>Allows to map the channels within the clip onto properties of objects in the application. &lt;a href=&quot;qt3danimation-qchannelmapper#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Allows to map the channels within the clip onto properties of objects in the application. &lt;a href=&quot;qt3danimation-qchannelmapper#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f975e4128fdfcafde89d6b6cea581eb6c8433b8" translate="yes" xml:space="preserve">
          <source>Allows to map the channels within the clip onto properties of objects in the application. &lt;a href=&quot;qt3danimation-qchannelmapping#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Allows to map the channels within the clip onto properties of objects in the application. &lt;a href=&quot;qt3danimation-qchannelmapping#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="685253d2d001f09edb12fff437a78d1f183e60d3" translate="yes" xml:space="preserve">
          <source>Allows to query the name used to create the icon, for example when instantiating an icon using &lt;a href=&quot;qicon#fromTheme&quot;&gt;QIcon::fromTheme&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qicon#fromTheme&quot;&gt;QIcon :: fromTheme&lt;/a&gt; ()를 사용하여 아이콘을 인스턴스화 할 때와 같이 아이콘을 작성하는 데 사용되는 이름을 조회 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c0af5de5c074c92007a5d8cd20365af17e2deb5d" translate="yes" xml:space="preserve">
          <source>Allows to query the sizes of the contained pixmaps for pixmap-based engines. The</source>
          <target state="translated">픽스맵 기반 엔진에 포함 된 픽스맵의 크기를 쿼리 할 수 ​​있습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="16bb399d3a44df470593f428efce09a6fd3b3881" translate="yes" xml:space="preserve">
          <source>Allows to tweak the output of &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qInfo&quot;&gt;qInfo&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qCritical&quot;&gt;qCritical&lt;/a&gt;(), and &lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt;(). The category logging output of &lt;a href=&quot;qloggingcategory#qCDebug&quot;&gt;qCDebug&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#qCInfo&quot;&gt;qCInfo&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#qCWarning&quot;&gt;qCWarning&lt;/a&gt;(), and &lt;a href=&quot;qloggingcategory#qCCritical&quot;&gt;qCCritical&lt;/a&gt;() is formatted, too.</source>
          <target state="translated">&lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt; (), &lt;a href=&quot;qtglobal#qInfo&quot;&gt;qInfo&lt;/a&gt; (), &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt; (), &lt;a href=&quot;qtglobal#qCritical&quot;&gt;qCritical&lt;/a&gt; () 및 &lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt; () 의 출력을 조정할 수 있습니다. &lt;a href=&quot;qloggingcategory#qCDebug&quot;&gt;qCDebug&lt;/a&gt; (), &lt;a href=&quot;qloggingcategory#qCInfo&quot;&gt;qCInfo&lt;/a&gt; (), &lt;a href=&quot;qloggingcategory#qCWarning&quot;&gt;qCWarning&lt;/a&gt; () 및 &lt;a href=&quot;qloggingcategory#qCCritical&quot;&gt;qCCritical&lt;/a&gt; () 의 범주 로깅 출력 도 형식화됩니다.</target>
        </trans-unit>
        <trans-unit id="a8d275b9c520d8383a01595e9e52facbee3f2e52" translate="yes" xml:space="preserve">
          <source>Allows to use a &lt;a href=&quot;qml-qt3d-render-sharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; from a separate OpenGL context in a Qt 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Allows to use a &lt;a href=&quot;qml-qt3d-render-sharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; from a separate OpenGL context in a Qt 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ce20a31a104abd9f4f79ad6bac9ca847cd4ef2b" translate="yes" xml:space="preserve">
          <source>Allows to use a &lt;a href=&quot;qt3drender-qsharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; from a separate OpenGL context in a Qt 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Qt 3D 장면에서 별도의 OpenGL 컨텍스트에서 &lt;a href=&quot;qt3drender-qsharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; 를 사용할 수 있습니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c9627ff0e7f7f96a0ebc81f802da28240ce98a3" translate="yes" xml:space="preserve">
          <source>Allows to use a &lt;a href=&quot;qt3drender-qsharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; from a separate OpenGL context in a Qt 3D scene. &lt;a href=&quot;qt3drender-qsharedgltexture#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Qt 3D 장면에서 별도의 OpenGL 컨텍스트에서 &lt;a href=&quot;qt3drender-qsharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; 를 사용할 수 있습니다 . &lt;a href=&quot;qt3drender-qsharedgltexture#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e78d9bd75897aedc314c35390b70a3710c0f49f" translate="yes" xml:space="preserve">
          <source>Allows to use a textureId from a separate OpenGL context in a Qt 3D scene</source>
          <target state="translated">Allows to use a textureId from a separate OpenGL context in a Qt 3D scene</target>
        </trans-unit>
        <trans-unit id="87c7ffff8ff8688a2efb2dd3d1f522920f4d74ad" translate="yes" xml:space="preserve">
          <source>Allows touch events (see &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;) to be sent to the widget. Must be set on all widgets that can handle touch events. Without this attribute set, events from a touch device will be sent as mouse events.</source>
          <target state="translated">터치 이벤트 ( &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; 참조 )가 위젯으로 전송되도록 허용합니다 . 터치 이벤트를 처리 할 수있는 모든 위젯에 설정해야합니다. 이 속성을 설정하지 않으면 터치 장치의 이벤트가 마우스 이벤트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="1aa4c73ad716a938c1fdb4e8d802b13da24f3092" translate="yes" xml:space="preserve">
          <source>Allows touchpad single touch events to be sent to the widget.</source>
          <target state="translated">터치 패드 단일 터치 이벤트를 위젯으로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9031d64fcc2931829cc1514b77adec856257d72" translate="yes" xml:space="preserve">
          <source>Allows type erased access to sequential containers</source>
          <target state="translated">순차 컨테이너에 대한 유형 삭제 액세스 허용</target>
        </trans-unit>
        <trans-unit id="7f351217e1c5887e3b9117dffc0032d8fddbb0b9" translate="yes" xml:space="preserve">
          <source>Allows users to specify a non-existing file. If an existing file is selected, the users should be informed that the file is going to be overwritten.</source>
          <target state="translated">사용자가 존재하지 않는 파일을 지정할 수 있도록합니다. 기존 파일을 선택하면 파일을 덮어 쓸 것임을 사용자에게 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="29e03358709da74eb974d8289a50ce4962f24940" translate="yes" xml:space="preserve">
          <source>Allows users to specify a single existing file.</source>
          <target state="translated">사용자가 기존의 단일 파일을 지정할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="14a64aa1fd89ff901073bc6a38988be0e66db1a1" translate="yes" xml:space="preserve">
          <source>Allows users to specify a single existing folder for upload.</source>
          <target state="translated">사용자가 업로드 할 기존 단일 폴더를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20e9ddf9c492b90e06995ab7ceb2064cc74da429" translate="yes" xml:space="preserve">
          <source>Allows users to specify multiple existing files.</source>
          <target state="translated">사용자가 여러 기존 파일을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a85fccf34c7ba9eea4f1591e0144a374e010cde3" translate="yes" xml:space="preserve">
          <source>Allows writing over the existing file if necessary.</source>
          <target state="translated">필요한 경우 기존 파일을 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a7aa8ea2c368e88414ddfb601e3750b908ffe21" translate="yes" xml:space="preserve">
          <source>Allows you to define syntax highlighting rules, and in addition you can use the class to query a document's current formatting or user data</source>
          <target state="translated">구문 강조 규칙을 정의 할 수 있으며 클래스를 사용하여 문서의 현재 형식 또는 사용자 데이터를 쿼리 할 수 ​​있습니다</target>
        </trans-unit>
        <trans-unit id="968855b5755a23b50801ee90a59f66350e193964" translate="yes" xml:space="preserve">
          <source>Allows you to deform the particle image when drawn. The rectangular image will be deformed so that the horizontal sides are in the shape of this vector instead of (1,0).</source>
          <target state="translated">그릴 때 입자 이미지를 변형 할 수 있습니다. 직사각형 이미지는 수평면이 (1,0) 대신이 벡터의 모양이되도록 변형됩니다.</target>
        </trans-unit>
        <trans-unit id="bfc476845610968190f61dd080e6d21e8e044102" translate="yes" xml:space="preserve">
          <source>Allows you to deform the particle image when drawn. The rectangular image will be deformed so that the vertical sides are in the shape of this vector instead of (0,1).</source>
          <target state="translated">그릴 때 입자 이미지를 변형 할 수 있습니다. 직사각형 이미지는 수직면이 (0,1) 대신이 벡터의 모양이되도록 변형됩니다.</target>
        </trans-unit>
        <trans-unit id="8e867bdcd99008320023e64949a7307b07007a94" translate="yes" xml:space="preserve">
          <source>Allows you to set a text validator for an editable &lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox&lt;/a&gt;. When a validator is set, the text field will only accept input which leaves the text property in an intermediate state. The accepted signal will only be sent if the text is in an acceptable state when enter is pressed.</source>
          <target state="translated">편집 가능한 &lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox에&lt;/a&gt; 대한 텍스트 유효성 검사기를 설정할 수 있습니다 . 유효성 검사기가 설정되면 텍스트 필드는 텍스트 속성을 중간 상태로 유지하는 입력 만 허용합니다. 승인 된 신호는 Enter 키를 눌렀을 때 텍스트가 허용 가능한 상태 인 경우에만 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="73a10f8f7cda3dd36bcf065d426d41470042f08f" translate="yes" xml:space="preserve">
          <source>Allows you to set a validator on the &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt;. When a validator is set, the &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; will only accept input which leaves the text property in an intermediate state. The accepted signal will only be sent if the text is in an acceptable state when enter is pressed.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; 에서 유효성 검사기를 설정할 수 있습니다 . 검사기가 설정되면 &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; 는 text 속성을 중간 상태로 유지하는 입력 만 허용합니다. 승인 된 신호는 Enter 키를 눌렀을 때 텍스트가 허용 가능한 상태 인 경우에만 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="23c1788273163ed762a05b764b58d2e878128b47" translate="yes" xml:space="preserve">
          <source>Allows you to set a validator on the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;. When a validator is set the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; will only accept input which leaves the text property in an acceptable or intermediate state. The accepted signal will only be sent if the text is in an acceptable state when enter is pressed.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput에&lt;/a&gt; 유효성 검사기를 설정할 수 있습니다 . 유효성 검사기가 설정되면 &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; 은 text 속성을 허용 또는 중간 상태로 유지하는 입력 만 허용합니다. 승인 된 신호는 Enter 키를 눌렀을 때 텍스트가 허용 가능한 상태 인 경우에만 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="9c7c0939c08182ad4746ecc7e29d72ede3f86562" translate="yes" xml:space="preserve">
          <source>Allows you to set an input mask on the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;, restricting the allowable text inputs. See &lt;a href=&quot;qlineedit#inputMask-prop&quot;&gt;QLineEdit::inputMask&lt;/a&gt; for further details, as the exact same mask strings are used by &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;.</source>
          <target state="translated">허용 가능한 텍스트 입력을 제한하여 &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; 에 입력 마스크를 설정할 수 있습니다. &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; 에서 정확히 동일한 마스크 문자열을 사용 &lt;a href=&quot;qlineedit#inputMask-prop&quot;&gt;하므로&lt;/a&gt; 자세한 내용은 QLineEdit :: inputMask 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9c90443ac0d58a3421ed41bf06cac16d23cf8c0" translate="yes" xml:space="preserve">
          <source>Almost all essential &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#&quot;&gt;Qt modules&lt;/a&gt; and some add-on modules supported.</source>
          <target state="translated">거의 모든 필수 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#&quot;&gt;Qt 모듈&lt;/a&gt; 과 일부 애드온 모듈이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="68c5702c9137560ea1a57f77c04ab03182277405" translate="yes" xml:space="preserve">
          <source>Almost all essential &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtmodules.html&quot;&gt;Qt modules&lt;/a&gt; and some add-on modules supported.</source>
          <target state="translated">Almost all essential &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtmodules.html&quot;&gt;Qt modules&lt;/a&gt; and some add-on modules supported.</target>
        </trans-unit>
        <trans-unit id="e7db91e3c99e8f144748bc6cc8d097f28130b2ab" translate="yes" xml:space="preserve">
          <source>Along with &lt;a href=&quot;qml-qt3d-render-camera#aspectRatio-prop&quot;&gt;aspectRatio&lt;/a&gt;, this property determines how much of the scene is visible to the camera. In that respect you might think of it as analogous to choosing a wide angle (wide horizontal field of view) or telephoto (narrow horizontal field of view) lens, depending on how much of a scene you want to capture.</source>
          <target state="translated">Along with &lt;a href=&quot;qml-qt3d-render-camera#aspectRatio-prop&quot;&gt;aspectRatio&lt;/a&gt;, this property determines how much of the scene is visible to the camera. In that respect you might think of it as analogous to choosing a wide angle (wide horizontal field of view) or telephoto (narrow horizontal field of view) lens, depending on how much of a scene you want to capture.</target>
        </trans-unit>
        <trans-unit id="b7f93536290e2f98eb43ba4f7eb47737848c8f8e" translate="yes" xml:space="preserve">
          <source>Along with &lt;a href=&quot;qt3drender-qcamera#aspectRatio-prop&quot;&gt;aspectRatio&lt;/a&gt;, this property determines how much of the scene is visible to the camera. In that respect you might think of it as analogous to choosing a wide angle (wide horizontal field of view) or telephoto (narrow horizontal field of view) lens depending on how much of a scene you want to capture.</source>
          <target state="translated">Along with &lt;a href=&quot;qt3drender-qcamera#aspectRatio-prop&quot;&gt;aspectRatio&lt;/a&gt;, this property determines how much of the scene is visible to the camera. In that respect you might think of it as analogous to choosing a wide angle (wide horizontal field of view) or telephoto (narrow horizontal field of view) lens depending on how much of a scene you want to capture.</target>
        </trans-unit>
        <trans-unit id="114d475a4d31ff07211b487ce173657886bf2ba6" translate="yes" xml:space="preserve">
          <source>Alpha Blended Primitives</source>
          <target state="translated">알파 블렌드 프리미티브</target>
        </trans-unit>
        <trans-unit id="7effd04b4039dcbf67bc21821a51f8efd2496314" translate="yes" xml:space="preserve">
          <source>Alpha component</source>
          <target state="translated">알파 성분</target>
        </trans-unit>
        <trans-unit id="b9941e59c0128b3ba03adc96eb5f97f35ead781f" translate="yes" xml:space="preserve">
          <source>Alpha is measured from 0.0 to 1.0.</source>
          <target state="translated">알파는 0.0에서 1.0까지 측정됩니다.</target>
        </trans-unit>
        <trans-unit id="307a262822d5a7722a7706d989a4c3479922596a" translate="yes" xml:space="preserve">
          <source>Alpha is the transparency of the surface between 0 (fully transparent) and 1 (opaque).</source>
          <target state="translated">알파는 0 (완전 투명)과 1 (불투명) 사이의 표면 투명도입니다.</target>
        </trans-unit>
        <trans-unit id="9fa0acff3f700657de4fa6eb2a3eded1b9c1f0b0" translate="yes" xml:space="preserve">
          <source>Alpha-Blended Drawing</source>
          <target state="translated">알파 블렌딩 드로잉</target>
        </trans-unit>
        <trans-unit id="ffa8707a8dedd05660705f2bafb53d0eedcc14c6" translate="yes" xml:space="preserve">
          <source>AlphaCoverage</source>
          <target state="translated">AlphaCoverage</target>
        </trans-unit>
        <trans-unit id="c33e6527a4fab2664005b527bc1f6e7e919b5fce" translate="yes" xml:space="preserve">
          <source>AlphaCoverage (QML type)</source>
          <target state="translated">AlphaCoverage (QML 유형)</target>
        </trans-unit>
        <trans-unit id="6dcf2f18a71cb4b48dba38e7c1a86e0bf19b6a81" translate="yes" xml:space="preserve">
          <source>AlphaCoverage QML Type</source>
          <target state="translated">AlphaCoverage QML 유형</target>
        </trans-unit>
        <trans-unit id="a05bc930c30e2eea1c8fb2dd2313751e8adc9c49" translate="yes" xml:space="preserve">
          <source>AlphaTest</source>
          <target state="translated">AlphaTest</target>
        </trans-unit>
        <trans-unit id="e3a4de2362fbbfeb2449fc9a756ab279b7aa19f5" translate="yes" xml:space="preserve">
          <source>AlphaTest (QML type)</source>
          <target state="translated">AlphaTest (QML 유형)</target>
        </trans-unit>
        <trans-unit id="bf4cc291d1c581d9439481bd107d17d648b7a845" translate="yes" xml:space="preserve">
          <source>AlphaTest QML Type</source>
          <target state="translated">AlphaTest QML 유형</target>
        </trans-unit>
        <trans-unit id="f275e8d72e74daf8dc69873fa883228573647251" translate="yes" xml:space="preserve">
          <source>AlphaTest.alphaFunction</source>
          <target state="translated">AlphaTest.alphaFunction</target>
        </trans-unit>
        <trans-unit id="7783139a4eff5de2459f983b5d75e63e14045b3f" translate="yes" xml:space="preserve">
          <source>AlphaTest.referenceValue</source>
          <target state="translated">AlphaTest.referenceValue</target>
        </trans-unit>
        <trans-unit id="61784bccf726c3549c1b2c787c9db4056d2772e9" translate="yes" xml:space="preserve">
          <source>Alphabetic ordering of places according to name is relevant to the user.</source>
          <target state="translated">이름에 따른 장소의 알파벳 순서는 사용자와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb87a8bce03a6e3bc11731edaee7a1d9e05b65a4" translate="yes" xml:space="preserve">
          <source>Already active/running timeouts are not affected by such timeout duration changes.</source>
          <target state="translated">이미 활성 / 실행 시간 초과는 이러한 시간 초과 기간 변경의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dab791a62398c716cde4f1ecd1bdb07426fd93a9" translate="yes" xml:space="preserve">
          <source>Also affects the label border, if enabled. Defaults to &lt;code&gt;Qt::white&lt;/code&gt;.</source>
          <target state="translated">활성화 된 경우 레이블 경계에도 영향을줍니다. 기본값은 &lt;code&gt;Qt::white&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f8e868ed33264a993b835e771bc1b79fc38d2a9" translate="yes" xml:space="preserve">
          <source>Also be aware that providers may vary by which parameters they support for example some providers may not support paging while others do, some providers may honor relevance hints while others may completely ignore them, see the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin documentation&lt;/a&gt; for more details.</source>
          <target state="translated">또한 업체들은 예를 들어 다른 사람이 할 동안 일부 업체는 다른 사람들이 완전히 그들을 무시 볼 수있는 반면 일부 업체는 관련 힌트를 공경, 페이징을 지원하지 않을 수 있습니다 위해 지원하는 매개 변수에 따라 다를 수 있음을 인식 &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;플러그인 설명서를&lt;/a&gt; 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="b1aecdb61a3d65026218ee8327889267b235f7c8" translate="yes" xml:space="preserve">
          <source>Also keep in mind that the combined alpha value is the &lt;a href=&quot;qml-qtquick3d-node#opacity-prop&quot;&gt;Node opacity&lt;/a&gt; multiplied by the material alpha.</source>
          <target state="translated">또한 결합 된 알파 값은 &lt;a href=&quot;qml-qtquick3d-node#opacity-prop&quot;&gt;노드 불투명도&lt;/a&gt; 에 재질 알파를 곱한 것입니다.</target>
        </trans-unit>
        <trans-unit id="c7a2254bb2a2835db6ca428a8a25b88bc0ff7844" translate="yes" xml:space="preserve">
          <source>Also note shipping OpenSSL might cause &lt;a href=&quot;ssl#import-and-export-restrictions&quot;&gt;Import and Export Restrictions&lt;/a&gt; to apply.</source>
          <target state="translated">OpenSSL 운송시 &lt;a href=&quot;ssl#import-and-export-restrictions&quot;&gt;가져 오기 및 내보내기 제한&lt;/a&gt; 이 적용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ffc88a606731e1d1d088a502d5d1c5982f0d34b" translate="yes" xml:space="preserve">
          <source>Also note that IPv6 site-local addresses are deprecated and should be considered as global in new applications. This function returns true for site-local addresses too.</source>
          <target state="translated">또한 IPv6 사이트 로컬 주소는 더 이상 사용되지 않으며 새 응용 프로그램에서는 전역 주소로 간주해야합니다. 이 함수는 사이트 로컬 주소에도 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="432ac25b25aacdb470cd65cd83599e6d7175feff" translate="yes" xml:space="preserve">
          <source>Also note that a number of the important concepts covered in this document are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-tutorials-extending-qml-example.html#&quot;&gt;Writing QML Extensions with C++&lt;/a&gt; tutorial.</source>
          <target state="translated">또한이 문서에서 다루는 여러 가지 중요한 개념 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-tutorials-extending-qml-example.html#&quot;&gt;은 C ++로 QML 확장 작성&lt;/a&gt; 자습서에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="75b7e1bbac61bdd172e733ca3731d99e042cbc00" translate="yes" xml:space="preserve">
          <source>Also note that a number of the important concepts covered in this document are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-tutorials-extending-qml-example.html&quot;&gt;Writing QML Extensions with C++&lt;/a&gt; tutorial.</source>
          <target state="translated">Also note that a number of the important concepts covered in this document are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-tutorials-extending-qml-example.html&quot;&gt;Writing QML Extensions with C++&lt;/a&gt; tutorial.</target>
        </trans-unit>
        <trans-unit id="47c9fbc88d61fce6c776778fb66ab375fa8f81f2" translate="yes" xml:space="preserve">
          <source>Also note that a number of the important concepts covered in this document are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-tutorials-extending-qml-example.html&quot;&gt;Writing QML Extensions with C++&lt;/a&gt; tutorial.</source>
          <target state="translated">또한이 문서에서 다루는 여러 가지 중요한 개념이 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-tutorials-extending-qml-example.html&quot;&gt;C ++로 QML 확장 작성&lt;/a&gt; 자습서에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="63ce027e8de4b948101eaffaecfc38523b6d8089" translate="yes" xml:space="preserve">
          <source>Also note that readings are not immediately available after &lt;a href=&quot;qsensor#start&quot;&gt;start&lt;/a&gt;() is called. Applications must wait for the &lt;a href=&quot;qsensor#readingChanged&quot;&gt;readingChanged&lt;/a&gt;() signal to be emitted.</source>
          <target state="translated">또한 &lt;a href=&quot;qsensor#start&quot;&gt;시작&lt;/a&gt; ()을 호출 한 후에는 판독 값을 즉시 사용할 수 없습니다 . 응용 프로그램은 &lt;a href=&quot;qsensor#readingChanged&quot;&gt;readingChanged&lt;/a&gt; () 신호가 방출 될 때까지 기다려야합니다 .</target>
        </trans-unit>
        <trans-unit id="bce151f260872e0c019830200ff1e436557f12ed" translate="yes" xml:space="preserve">
          <source>Also note that the types &lt;code&gt;void*&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;unsigned&lt;/code&gt;&lt;code&gt;long&lt;/code&gt;, &lt;code&gt;unsigned&lt;/code&gt;&lt;code&gt;short&lt;/code&gt;, &lt;code&gt;unsigned&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;QObject*&lt;/code&gt;, and &lt;code&gt;QWidget*&lt;/code&gt; are represented in &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::Type&lt;/a&gt; but not in QVariant::Type, and they can be returned by this function. However, they are considered to be user defined types when tested against QVariant::Type.</source>
          <target state="translated">또한 &lt;code&gt;void*&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;unsigned&lt;/code&gt; &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;unsigned&lt;/code&gt; &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;unsigned&lt;/code&gt; &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;QObject*&lt;/code&gt; 및 &lt;code&gt;QWidget*&lt;/code&gt; &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;유형&lt;/a&gt; 은 QMetaType :: Type으로 표시 되지만 QVariant :: Type 에서는 표시되지 않으며 다음으로 리턴 될 수 있습니다. 이 기능. 그러나 QVariant :: Type에 대해 테스트 할 때 사용자 정의 유형으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="c97594e311c6f082c1fdaadde28b13e45aef3992" translate="yes" xml:space="preserve">
          <source>Also note that you shouldn't set the application default proxy (&lt;a href=&quot;qnetworkproxy#setApplicationProxy&quot;&gt;setApplicationProxy&lt;/a&gt;()) to a proxy that doesn't have the &lt;a href=&quot;qnetworkproxy#Capability-enum&quot;&gt;TunnelingCapability&lt;/a&gt; capability. If you do, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; will not know how to open connections.</source>
          <target state="translated">또한 응용 프로그램 기본 프록시 ( &lt;a href=&quot;qnetworkproxy#setApplicationProxy&quot;&gt;setApplicationProxy&lt;/a&gt; ())를 &lt;a href=&quot;qnetworkproxy#Capability-enum&quot;&gt;TunnelingCapability&lt;/a&gt; 기능 이없는 프록시로 설정해서는 안됩니다 . 그렇게하면 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; 은 연결을 여는 방법을 모릅니다.</target>
        </trans-unit>
        <trans-unit id="b914fa8fa8f6a8264df1d844005e69a7f14821ef" translate="yes" xml:space="preserve">
          <source>Also remember that you can avoid doing composition work at run-time by providing the pre-composed image resource with your application (for example, providing elements with shadow effects).</source>
          <target state="translated">또한 사전 구성된 이미지 리소스를 응용 프로그램과 함께 제공하면 (예 : 그림자 효과가있는 요소 제공) 런타임에 컴포지션 작업을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="adeef290e51dfcd8dd7ec509af464a105b453b50" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; documentation for more information.</source>
          <target state="translated">자세한 내용 은 &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2770fa2be0441a33285eb72c080c129176cce29d" translate="yes" xml:space="preserve">
          <source>Also supported are exported enums and flags (see Q_ENUMS() and Q_FLAGS()). The in-parameter types are also supported as return values.</source>
          <target state="translated">또한 반출 된 열거 형 및 플래그도 지원됩니다 (Q_ENUMS () 및 Q_FLAGS () 참조). 매개 변수 내 유형도 반환 값으로 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b999df51681c34aaad0d25b2666bd70099886033" translate="yes" xml:space="preserve">
          <source>Also the data() function needs to be changed to add the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt; test:</source>
          <target state="translated">또한 &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt; 테스트 를 추가하려면 data () 함수를 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="54a372d3e5754080eb7da2fb7bb9a57f5ded6143" translate="yes" xml:space="preserve">
          <source>Also the scene has flag for tracking if the secondary 2D slicing view is currently active or not.</source>
          <target state="translated">또한 2 차 2D 슬라이싱 뷰가 현재 활성화되어 있는지 여부를 추적하기 위해 플래그에 장면이 있습니다.</target>
        </trans-unit>
        <trans-unit id="83001f7248d9d55e1e52bfd0210d859ba9c0a901" translate="yes" xml:space="preserve">
          <source>Also, &lt;a href=&quot;qdate#dayOfWeek-1&quot;&gt;dayOfWeek&lt;/a&gt;() and &lt;a href=&quot;qdate#dayOfYear-1&quot;&gt;dayOfYear&lt;/a&gt;() functions are provided. The same information is provided in textual format by &lt;a href=&quot;qdate#toString&quot;&gt;toString&lt;/a&gt;(). &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; can map the day numbers to names, &lt;a href=&quot;qcalendar&quot;&gt;QCalendar&lt;/a&gt; can map month numbers to names.</source>
          <target state="translated">또한 &lt;a href=&quot;qdate#dayOfWeek-1&quot;&gt;dayOfWeek&lt;/a&gt; () 및 &lt;a href=&quot;qdate#dayOfYear-1&quot;&gt;dayOfYear&lt;/a&gt; () 함수가 제공됩니다. 동일한 정보가 &lt;a href=&quot;qdate#toString&quot;&gt;toString&lt;/a&gt; ()에 의해 텍스트 형식으로 제공됩니다 . &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; 은 일 번호를 이름에 &lt;a href=&quot;qcalendar&quot;&gt;매핑&lt;/a&gt; 할 수 있고 , QCalendar 는 월 번호를 이름에 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f656b23dd27db41bea582cdb118c3590155ebfe1" translate="yes" xml:space="preserve">
          <source>Also, &lt;a href=&quot;qdate#dayOfWeek-1&quot;&gt;dayOfWeek&lt;/a&gt;() and &lt;a href=&quot;qdate#dayOfYear-1&quot;&gt;dayOfYear&lt;/a&gt;() functions are provided. The same information is provided in textual format by &lt;a href=&quot;qdate#toString-1&quot;&gt;toString&lt;/a&gt;(). &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; can map the day numbers to names, &lt;a href=&quot;qcalendar&quot;&gt;QCalendar&lt;/a&gt; can map month numbers to names.</source>
          <target state="translated">Also, &lt;a href=&quot;qdate#dayOfWeek-1&quot;&gt;dayOfWeek&lt;/a&gt;() and &lt;a href=&quot;qdate#dayOfYear-1&quot;&gt;dayOfYear&lt;/a&gt;() functions are provided. The same information is provided in textual format by &lt;a href=&quot;qdate#toString-1&quot;&gt;toString&lt;/a&gt;(). &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; can map the day numbers to names, &lt;a href=&quot;qcalendar&quot;&gt;QCalendar&lt;/a&gt; can map month numbers to names.</target>
        </trans-unit>
        <trans-unit id="7d576e6a0dccf64674ae31d7e01facf65412f48b" translate="yes" xml:space="preserve">
          <source>Also, &lt;a href=&quot;qnetworkcookiejar&quot;&gt;QNetworkCookieJar&lt;/a&gt; does not have a maximum cookie jar size. Reimplement this function to discard older cookies to create room for new ones.</source>
          <target state="translated">또한 &lt;a href=&quot;qnetworkcookiejar&quot;&gt;QNetworkCookieJar&lt;/a&gt; 에는 최대 쿠키 자르 크기가 없습니다. 새로운 쿠키를위한 공간을 만들기 위해 오래된 쿠키를 버릴 수 있도록이 기능을 다시 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="de431426f9c01c9573364b9f295e048c1ecbaf77" translate="yes" xml:space="preserve">
          <source>Also, add the &lt;code&gt;receiver&lt;/code&gt; definition in the body of the &lt;code&gt;&amp;lt;application&amp;gt;&lt;/code&gt; section:</source>
          <target state="translated">Also, add the &lt;code&gt;receiver&lt;/code&gt; definition in the body of the &lt;code&gt;&amp;lt;application&amp;gt;&lt;/code&gt; section:</target>
        </trans-unit>
        <trans-unit id="86eb1e9e5601b7cb049b2c0f637e16ca28bdf795" translate="yes" xml:space="preserve">
          <source>Also, an item using a layer can not be &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#batching&quot;&gt;batched&lt;/a&gt; during rendering. This means that a scene with many layered items may have performance problems.</source>
          <target state="translated">또한 렌더링 중에 레이어를 사용하는 항목을 &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#batching&quot;&gt;일괄 처리&lt;/a&gt; 할 수 없습니다 . 즉, 레이어 항목이 많은 장면에는 성능 문제가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e673f382e572fbce3873f5dcdd293256df13046" translate="yes" xml:space="preserve">
          <source>Also, anchor-based layouts cannot be mixed with absolute positioning. If an item specifies its &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; position and also sets &lt;a href=&quot;qml-qtquick-item#anchors.left-prop&quot;&gt;anchors.left&lt;/a&gt;, or anchors its left and right edges but additionally sets a &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt;, the result is undefined, as it would not be clear whether the item should use anchoring or absolute positioning. The same can be said for setting an item's &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; with &lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;anchors.top&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#anchors.bottom-prop&quot;&gt;anchors.bottom&lt;/a&gt;, or setting &lt;a href=&quot;qml-qtquick-item#anchors.fill-prop&quot;&gt;anchors.fill&lt;/a&gt; as well as &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt;. The same applies when using positioners such as Row and Grid, which may set the item's &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; properties. If you wish to change from using anchor-based to absolute positioning, you can clear an anchor value by setting it to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">또한 앵커 기반 레이아웃을 절대 위치와 혼합 할 수 없습니다. 항목이 &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; 위치를 지정하고 &lt;a href=&quot;qml-qtquick-item#anchors.left-prop&quot;&gt;anchors.left&lt;/a&gt; 도 설정 하거나 왼쪽 및 오른쪽 모서리를 고정하지만 &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;너비를&lt;/a&gt; 추가로 설정 하면 항목이 고정 또는 절대 위치 지정을 사용해야하는지 명확하지 않으므로 결과가 정의되지 않습니다. &lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;anchors.top&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#anchors.bottom-prop&quot;&gt;anchors.bottom으로&lt;/a&gt; 항목의 &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;높이&lt;/a&gt; 를 설정 하거나 &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;너비&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;높이&lt;/a&gt; 뿐만 아니라 &lt;a href=&quot;qml-qtquick-item#anchors.fill-prop&quot;&gt;anchors.fill&lt;/a&gt; 을 설정하는 경우 에도 마찬가지 입니다. 행과 그리드와 같은 포지셔너를 사용할 때도 마찬가지입니다. 이로 인해 항목의 &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; 와&lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; 속성. 앵커 기반 사용에서 절대 위치로 변경하려면 앵커 값을 &lt;code&gt;undefined&lt;/code&gt; 로 설정하여 앵커 값을 지울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2887e036de658203ed138fd7cb7b90e9dc602119" translate="yes" xml:space="preserve">
          <source>Also, any property declared with &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; will be automatically exposed over the Properties interface on D-Bus. Since the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; property system does not allow for non-readable properties, it is not possible to declare write-only properties using adaptors.</source>
          <target state="translated">또한 &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY로&lt;/a&gt; 선언 된 모든 속성은 D-Bus의 속성 인터페이스를 통해 자동으로 노출됩니다. 부터 &lt;a href=&quot;qobject&quot;&gt;QObject를의&lt;/a&gt; 속성 시스템이 읽을 수없는 속성을 허용하지 않는,이 어댑터를 사용하여 쓰기 전용 속성을 선언 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3fa367eb827b7be49bbe9effd06eddb450b8f85a" translate="yes" xml:space="preserve">
          <source>Also, note that Repeater is &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;-based, and can only repeat &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;-derived objects. For example, it cannot be used to repeat QtObjects:</source>
          <target state="translated">또한 Repeater는 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 기반이며 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 파생 객체 만 반복 할 수 있습니다 . 예를 들어, QtObject를 반복하는 데 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b90998cfa38ea31ba619a9027d98acd8f1d9f3e2" translate="yes" xml:space="preserve">
          <source>Also, note that while dynamically created objects may be used the same as other objects, they do not have an id in QML.</source>
          <target state="translated">또한 동적으로 생성 된 객체는 다른 객체와 동일하게 사용될 수 있지만 QML에는 ID가 없습니다.</target>
        </trans-unit>
        <trans-unit id="23e624cbcf13c311aaf75fb44abd8b7c67e65b24" translate="yes" xml:space="preserve">
          <source>Also, note the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; will be rotated around its default &lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt; (which is &lt;code&gt;Item.Center&lt;/code&gt;). To use a different transform origin, set the origin in the &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object and apply the change at the start of the animation using &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt;. See the &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt; documentation for more details.</source>
          <target state="translated">또한 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 은 기본 &lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt; ( &lt;code&gt;Item.Center&lt;/code&gt; )을 중심으로 회전 합니다. 의 다른 변환 원점을 사용하려면 원점을 설정 &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges은&lt;/a&gt; 객체 및 사용하여 애니메이션의 시작 부분에 변경 사항을 적용 &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction을&lt;/a&gt; . 자세한 내용은 &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b35a93e4e5324ee31b5462b76b9f6f99b7119b4d" translate="yes" xml:space="preserve">
          <source>Also, starting a timer makes it valid again.</source>
          <target state="translated">또한 타이머를 시작하면 다시 유효하게됩니다.</target>
        </trans-unit>
        <trans-unit id="a33c7e43f3ea7aa61d5a8a44335a967d2556141c" translate="yes" xml:space="preserve">
          <source>Also, the generated HTML files can have a prefix and a suffix following the QML module name, specified in the QDoc configuration file.</source>
          <target state="translated">또한 생성 된 HTML 파일은 QDoc 구성 파일에 지정된 QML 모듈 이름 다음에 접 두부 및 접미 부를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="613b6dcf3db6aec140b4cfb711ee6e139535c18b" translate="yes" xml:space="preserve">
          <source>Also, the manifest embedding for DLLs can be removed with the following assignment to the &lt;code&gt;CONFIG&lt;/code&gt; variable:</source>
          <target state="translated">또한 &lt;code&gt;CONFIG&lt;/code&gt; 변수에 다음을 지정하여 DLL에 대한 매니페스트 임베딩을 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bea70b70467e3eb59ab1e6e535fa4ad76816f195" translate="yes" xml:space="preserve">
          <source>Also, to make it more obvious to see that the custom style is actually being loaded and used, set the keyboard background to a different color:</source>
          <target state="translated">또한 사용자 정의 스타일이 실제로로드되어 사용되고 있음을보다 명확하게 나타내려면 키보드 배경을 다른 색상으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="cfdfba4bebb29422145ce0aaa1c4c58446a2ea91" translate="yes" xml:space="preserve">
          <source>Also, to use type &lt;code&gt;T&lt;/code&gt; with the &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() API, &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; must be called before it is used, typically in the constructor of the class that uses &lt;code&gt;T&lt;/code&gt;, or in the &lt;code&gt;main()&lt;/code&gt; function.</source>
          <target state="translated">또한 &lt;a href=&quot;qobject#property&quot;&gt;QObject :: property&lt;/a&gt; () API 와 함께 &lt;code&gt;T&lt;/code&gt; 유형을 사용하려면 일반적으로 &lt;code&gt;T&lt;/code&gt; 를 사용하는 클래스의 생성자 또는 &lt;code&gt;main()&lt;/code&gt; 함수 에서 사용하기 전에 &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="728e97a48db2764fd8d99beb7ef75fedef6d50fd" translate="yes" xml:space="preserve">
          <source>Alt key</source>
          <target state="translated">Alt 키</target>
        </trans-unit>
        <trans-unit id="a3aff2f0ba099ec3249aab7b7f0ff7e5f90e70dc" translate="yes" xml:space="preserve">
          <source>Alt+A</source>
          <target state="translated">Alt+A</target>
        </trans-unit>
        <trans-unit id="3f1d49e2c9f7278fd80b98a77041a0c748cbc877" translate="yes" xml:space="preserve">
          <source>Alt+Backspace</source>
          <target state="translated">Alt+Backspace</target>
        </trans-unit>
        <trans-unit id="e03e0d826ab2903a1d279112bf254a834058b27f" translate="yes" xml:space="preserve">
          <source>Alt+D</source>
          <target state="translated">Alt+D</target>
        </trans-unit>
        <trans-unit id="2717cc5ddcf51809a16693472e1c0f9d270f47cf" translate="yes" xml:space="preserve">
          <source>Alt+Down, Meta+E</source>
          <target state="translated">Alt + Down, Meta + E</target>
        </trans-unit>
        <trans-unit id="9c43e6b7df81aec9f8fd5495a82c7e188910a39c" translate="yes" xml:space="preserve">
          <source>Alt+Left</source>
          <target state="translated">Alt+Left</target>
        </trans-unit>
        <trans-unit id="d22d75311912132e1a6c7eb539a01ff0785e258b" translate="yes" xml:space="preserve">
          <source>Alt+Left Arrow</source>
          <target state="translated">Alt + 왼쪽 화살표</target>
        </trans-unit>
        <trans-unit id="5cd625b8a2fe32470bd799aacce1c5bae7db51bc" translate="yes" xml:space="preserve">
          <source>Alt+Left, Backspace</source>
          <target state="translated">Alt + 왼쪽, 백 스페이스</target>
        </trans-unit>
        <trans-unit id="0938c500ffd1724d6e365f4b8c43187a032e6a69" translate="yes" xml:space="preserve">
          <source>Alt+Right</source>
          <target state="translated">Alt+Right</target>
        </trans-unit>
        <trans-unit id="7abaff068a974f54e98365d176f3533aafc363bd" translate="yes" xml:space="preserve">
          <source>Alt+Right Arrow</source>
          <target state="translated">Alt + 오른쪽 화살표</target>
        </trans-unit>
        <trans-unit id="fd1b9ca8531edf4fead48fe251a838cd15f50bef" translate="yes" xml:space="preserve">
          <source>Alt+Right, Shift+Backspace</source>
          <target state="translated">Alt + 오른쪽, Shift + 백 스페이스</target>
        </trans-unit>
        <trans-unit id="2172096fba799643db2bd5e7c9bd4335a2ac39e1" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Down, Meta+Shift+E</source>
          <target state="translated">Alt + Shift + 아래쪽, Meta + Shift + E</target>
        </trans-unit>
        <trans-unit id="dc812168f4bd3aea59cf8b55b0fdfa7b849bb81e" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Left</source>
          <target state="translated">Alt+Shift+Left</target>
        </trans-unit>
        <trans-unit id="51bb91a616f21414ab10369bdcd1b542ccf8f10c" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Right</source>
          <target state="translated">Alt+Shift+Right</target>
        </trans-unit>
        <trans-unit id="f767ad1b638cc8a47cd55eff931971e48e3f4adb" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Up, Meta+Shift+A</source>
          <target state="translated">Alt + Shift + 위로, Meta + Shift + A</target>
        </trans-unit>
        <trans-unit id="0ffeadde47021248d13e68c7888feb7bd429f230" translate="yes" xml:space="preserve">
          <source>Alt+Up Arrow</source>
          <target state="translated">Alt + 위쪽 화살표</target>
        </trans-unit>
        <trans-unit id="924321f04f4f5de115c2799a5a975112d47621ec" translate="yes" xml:space="preserve">
          <source>Alt+Up, Meta+A</source>
          <target state="translated">Alt + 위로, Meta + A</target>
        </trans-unit>
        <trans-unit id="a8ad87f2c176257576e5f42ca8d923d99d4ee9cc" translate="yes" xml:space="preserve">
          <source>Alt+Wheel</source>
          <target state="translated">Alt+Wheel</target>
        </trans-unit>
        <trans-unit id="42067d9d74bbc067847a30164e23954aca55ff0a" translate="yes" xml:space="preserve">
          <source>Alt+c</source>
          <target state="translated">Alt+c</target>
        </trans-unit>
        <trans-unit id="a72257bc95d4261e7297d5b795d5bcc4bb2f3b0f" translate="yes" xml:space="preserve">
          <source>Alternate dots and dashes.</source>
          <target state="translated">다른 점과 대시.</target>
        </trans-unit>
        <trans-unit id="887345b5bc00b53431fac34eb2447b61600fb9cc" translate="yes" xml:space="preserve">
          <source>Alternative Class</source>
          <target state="translated">대체 수업</target>
        </trans-unit>
        <trans-unit id="3ca9570fd2c62058d9831d086ef75c4e962d2d09" translate="yes" xml:space="preserve">
          <source>Alternative Identifier Cross-Referencing</source>
          <target state="translated">대체 식별자 상호 참조</target>
        </trans-unit>
        <trans-unit id="c15ca617f234d80080798c420b525f36080277ea" translate="yes" xml:space="preserve">
          <source>Alternative Keys</source>
          <target state="translated">대체 키</target>
        </trans-unit>
        <trans-unit id="9b38b61238292577ebb9249200fb1e68d441674c" translate="yes" xml:space="preserve">
          <source>Alternative::Alternative()</source>
          <target state="translated">Alternative::Alternative()</target>
        </trans-unit>
        <trans-unit id="7648b5f066492b47a709f1a90291a1fefe63bb71" translate="yes" xml:space="preserve">
          <source>Alternative::Alternative(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">대안 :: 대체 (const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="858414b9aeca968135756faef3b1b3006c8412cc" translate="yes" xml:space="preserve">
          <source>Alternatively &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; can represent a playlist and contain a pointer to a valid &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt; object. In this case URL is optional and can either be empty or point to the playlist URL.</source>
          <target state="translated">또는 &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; 는 재생 목록을 나타내며 유효한 &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt; 객체에 대한 포인터를 포함 할 수 있습니다 . 이 경우 URL은 선택 사항이며 비어 있거나 재생 목록 URL을 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c64cf3fd278e2eb9367aeea434a794dae217c91" translate="yes" xml:space="preserve">
          <source>Alternatively QMediaContent can represent a playlist and contain a pointer to a valid &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt; object. In this case URL is optional and can either be empty or point to the playlist URL.</source>
          <target state="translated">Alternatively QMediaContent can represent a playlist and contain a pointer to a valid &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt; object. In this case URL is optional and can either be empty or point to the playlist URL.</target>
        </trans-unit>
        <trans-unit id="0e8d218c6aa7f1e65b05622a52a2b889cac7dcca" translate="yes" xml:space="preserve">
          <source>Alternatively a function can be called passing the parameters embedded in the string, e.g. above function can also be invoked using</source>
          <target state="translated">또는 문자열에 포함 된 매개 변수를 전달하여 함수를 호출 할 수 있습니다. 예를 들어 위의 함수를 사용하여 호출 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fd9abd8f4adf44b5921f028683e26ed9a4781c7" translate="yes" xml:space="preserve">
          <source>Alternatively if the IId of the control has been declared using &lt;a href=&quot;qmediacontrol#Q_MEDIA_DECLARE_CONTROL&quot;&gt;Q_MEDIA_DECLARE_CONTROL&lt;/a&gt; the template version of &lt;a href=&quot;qmediaservice#requestControl-1&quot;&gt;QMediaService::requestControl&lt;/a&gt;() can be used to request the service without explicitly passing the IId or using &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;().</source>
          <target state="translated">또는 &lt;a href=&quot;qmediacontrol#Q_MEDIA_DECLARE_CONTROL&quot;&gt;Q_MEDIA_DECLARE_CONTROL을&lt;/a&gt; 사용하여 제어의 IId를 선언 한 경우 &lt;a href=&quot;qmediaservice#requestControl-1&quot;&gt;QMediaService :: requestControl&lt;/a&gt; () 의 템플리트 버전을 사용하여 IId를 명시 적으로 전달하거나 &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; ()를 사용하지 않고 서비스를 요청할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e424f43e4759a8909dcb00efb7feaadeed5fa72" translate="yes" xml:space="preserve">
          <source>Alternatively it is possible to bind &lt;a href=&quot;qml-qtquick-dialogs-dialog#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; to a custom Item, in which case there will be no buttons, no margins, and the custom content will fill the whole dialog. This is much like creating a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;, except that on platforms which do not support showing multiple windows, the window borders will be simulated and it will be shown in same scene.</source>
          <target state="translated">또는 &lt;a href=&quot;qml-qtquick-dialogs-dialog#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; 을 사용자 정의 항목 에 바인딩 할 수 있습니다.이 경우 단추와 여백이 없으며 사용자 정의 컨텐츠가 전체 대화 상자를 채 웁니다. 이것은 여러 개의 창 표시를 지원하지 않는 플랫폼에서 창 경계가 시뮬레이션되고 동일한 장면에 표시된다는 점을 제외하고 는 &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;창&lt;/a&gt; 만들기와 매우 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="4362db09a208dfb1c538b5a368483530ac7ac59e" translate="yes" xml:space="preserve">
          <source>Alternatively the shadergen tool can be invoked manually from the command line, like this:</source>
          <target state="translated">또는 shadergen 도구는 다음과 같이 명령 줄에서 수동으로 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ca01df2ef401c13750114182ad12a529f2e8f5a" translate="yes" xml:space="preserve">
          <source>Alternatively you can set or bind &lt;a href=&quot;qml-qtquick-window-window#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-window-window#y-prop&quot;&gt;y&lt;/a&gt; to position the Window explicitly on the screen.</source>
          <target state="translated">또는 &lt;a href=&quot;qml-qtquick-window-window#x-prop&quot;&gt;x&lt;/a&gt; 와 &lt;a href=&quot;qml-qtquick-window-window#y-prop&quot;&gt;y&lt;/a&gt; 를 설정하거나 바인딩 하여 창을 화면에 명시 적으로 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ca2cb03092d86f6ec220190b317958c6d2142dc" translate="yes" xml:space="preserve">
          <source>Alternatively you can set or bind &lt;a href=&quot;qml-window#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-window#y-prop&quot;&gt;y&lt;/a&gt; to position the Window explicitly on the screen.</source>
          <target state="translated">또는 &lt;a href=&quot;qml-window#x-prop&quot;&gt;x&lt;/a&gt; 와 &lt;a href=&quot;qml-window#y-prop&quot;&gt;y&lt;/a&gt; 를 설정하거나 바인딩 하여 창을 화면에 명시 적으로 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e05969267fbf4f86aa1c4134f9786ecef99c01f2" translate="yes" xml:space="preserve">
          <source>Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a plain rectangle:</source>
          <target state="translated">Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a plain rectangle:</target>
        </trans-unit>
        <trans-unit id="e12848cbc276cb5296150061b0030ac5f99e5109" translate="yes" xml:space="preserve">
          <source>Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a shaded line:</source>
          <target state="translated">Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a shaded line:</target>
        </trans-unit>
        <trans-unit id="fc0a18d3c774ebf401d14f8b9aa8c08e798ace9c" translate="yes" xml:space="preserve">
          <source>Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a shaded panel:</source>
          <target state="translated">Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a shaded panel:</target>
        </trans-unit>
        <trans-unit id="00c152ebaf5b0bdb760c26a5c67ed9d7dd515444" translate="yes" xml:space="preserve">
          <source>Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a shaded rectangle:</source>
          <target state="translated">Alternatively you can use a &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; widget and apply the &lt;a href=&quot;qframe#setFrameStyle&quot;&gt;QFrame::setFrameStyle&lt;/a&gt;() function to display a shaded rectangle:</target>
        </trans-unit>
        <trans-unit id="db2687e0275ac92854fc1c530fa092de7ee54892" translate="yes" xml:space="preserve">
          <source>Alternatively you may convert your &lt;code&gt;url&lt;/code&gt; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt; object in order to access and modify its components:</source>
          <target state="translated">또는 당신은 당신 변환 할 수 있습니다 &lt;code&gt;url&lt;/code&gt; A와 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URL&quot;&gt;URL에&lt;/a&gt; 액세스하기 위해 객체 및 해당 구성 요소를 수정 :</target>
        </trans-unit>
        <trans-unit id="eb5ccfd876976b1f8a66da10b2e4fd1bf1e5654d" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt; provides several standard buttons (e.g. OK, Cancel, Save) that you can use. They exist as flags so you can OR them together in the constructor.</source>
          <target state="translated">또는 &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt; 는 사용할 수있는 몇 가지 표준 버튼 (예 : 확인, 취소, 저장)을 제공합니다. 그것들은 플래그로 존재하므로 생성자에서 함께 OR 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32b0bce1bc5887ef0fba4e50cad7e1f847476bb4" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;qwebengineview#url-prop&quot;&gt;setUrl&lt;/a&gt;() can be used to load a web site. If you have the HTML content readily available, you can use &lt;a href=&quot;qwebengineview#setHtml&quot;&gt;setHtml&lt;/a&gt;() instead.</source>
          <target state="translated">또는 &lt;a href=&quot;qwebengineview#url-prop&quot;&gt;setUrl&lt;/a&gt; ()을 사용하여 웹 사이트를로드 할 수 있습니다. HTML 컨텐츠를 쉽게 사용할 수있는 경우 대신 &lt;a href=&quot;qwebengineview#setHtml&quot;&gt;setHtml&lt;/a&gt; ()을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef24fc854f2a9f573c6ebc81e3a5a5d83ebd30a9" translate="yes" xml:space="preserve">
          <source>Alternatively, QDialogButtonBox provides several standard buttons (e.g. OK, Cancel, Save) that you can use. They exist as flags so you can OR them together in the constructor.</source>
          <target state="translated">Alternatively, QDialogButtonBox provides several standard buttons (e.g. OK, Cancel, Save) that you can use. They exist as flags so you can OR them together in the constructor.</target>
        </trans-unit>
        <trans-unit id="23a7cbe9b06c89c0c69606eadec99b98a7bf9ba8" translate="yes" xml:space="preserve">
          <source>Alternatively, a default sized icon can be specified like so:</source>
          <target state="translated">또는 다음과 같이 기본 크기의 아이콘을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0d2f4e1e0cc6a78de6a5e5e9775a16fdd55a4ec" translate="yes" xml:space="preserve">
          <source>Alternatively, an environment variable &lt;code&gt;QT_AUTO_SCREEN_SCALE_FACTOR=1&lt;/code&gt; can be set to enable automatic high-DPI scaling.</source>
          <target state="translated">또는 환경 변수 &lt;code&gt;QT_AUTO_SCREEN_SCALE_FACTOR=1&lt;/code&gt; 을 설정하여 자동 높은 DPI 스케일링을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8175fffd4484d629c121b29bb8dfdf66c769331c" translate="yes" xml:space="preserve">
          <source>Alternatively, buttons and their roles can be specified by hand:</source>
          <target state="translated">또는 버튼과 해당 역할을 직접 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a59378399e82f9217527d6727f5bd71b1721cdaa" translate="yes" xml:space="preserve">
          <source>Alternatively, create a &lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt; object from the sound file first and then call the &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;() slot:</source>
          <target state="translated">또는 사운드 파일에서 &lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt; 객체를 먼저 만든 다음 &lt;a href=&quot;qsound#play-1&quot;&gt;재생&lt;/a&gt; () 슬롯 을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="f10d9777dfbbfe7958148f5231badac3ce3fc973" translate="yes" xml:space="preserve">
          <source>Alternatively, create a QSound object from the sound file first and then call the &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;() slot:</source>
          <target state="translated">Alternatively, create a QSound object from the sound file first and then call the &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;() slot:</target>
        </trans-unit>
        <trans-unit id="d010fc54348b1816334478fc888f3d493491527c" translate="yes" xml:space="preserve">
          <source>Alternatively, forms can be processed at run time, producing dynamically- generated user interfaces. This can be done using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt; module that provides the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class to handle forms created with</source>
          <target state="translated">또는 런타임에 양식을 처리하여 동적으로 생성 된 사용자 인터페이스를 생성 할 수 있습니다. 이 작업은 사용하여 수행 할 수 있습니다 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-module.html&quot;&gt;QtUiTools의&lt;/a&gt; 제공 모듈 &lt;a href=&quot;quiloader&quot;&gt;QUiLoader의&lt;/a&gt; 로 만든 손잡이 형태로 클래스를</target>
        </trans-unit>
        <trans-unit id="cebb04492906b3c835b335238573b88fbe70a3ff" translate="yes" xml:space="preserve">
          <source>Alternatively, forms can be processed at run time, producing dynamically- generated user interfaces. This can be done using the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt; module that provides the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class to handle forms created with</source>
          <target state="translated">Alternatively, forms can be processed at run time, producing dynamically- generated user interfaces. This can be done using the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt; module that provides the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class to handle forms created with</target>
        </trans-unit>
        <trans-unit id="3bf8872cee6c521e855d87ce6fc881ce0057cc21" translate="yes" xml:space="preserve">
          <source>Alternatively, forms can be processed at run time, producing dynamically- generated user interfaces. This can be done using the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt; module that provides the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class to handle forms created with</source>
          <target state="translated">또는 런타임에 양식을 처리하여 동적으로 생성 된 사용자 인터페이스를 생성 할 수 있습니다. 이 작업은 사용하여 수행 할 수 있습니다 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtuitools-module.html&quot;&gt;QtUiTools의&lt;/a&gt; 제공 모듈 &lt;a href=&quot;quiloader&quot;&gt;QUiLoader의&lt;/a&gt; 로 만든 손잡이 형태로 클래스를</target>
        </trans-unit>
        <trans-unit id="6421893c3d5288e0a13c0e63ca1b9eb6ec0c9699" translate="yes" xml:space="preserve">
          <source>Alternatively, if &lt;a href=&quot;qml-qtquick-wheelhandler#property-prop&quot;&gt;property&lt;/a&gt; is not set or &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;target&lt;/a&gt; is null, WheelHandler will not automatically manipulate anything; but the &lt;a href=&quot;qml-qtquick-wheelhandler#rotation-prop&quot;&gt;rotation&lt;/a&gt; property can be used in a binding to manipulate another property, or you can implement &lt;code&gt;onWheel&lt;/code&gt; and handle the wheel event directly.</source>
          <target state="translated">Alternatively, if &lt;a href=&quot;qml-qtquick-wheelhandler#property-prop&quot;&gt;property&lt;/a&gt; is not set or &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;target&lt;/a&gt; is null, WheelHandler will not automatically manipulate anything; but the &lt;a href=&quot;qml-qtquick-wheelhandler#rotation-prop&quot;&gt;rotation&lt;/a&gt; property can be used in a binding to manipulate another property, or you can implement &lt;code&gt;onWheel&lt;/code&gt; and handle the wheel event directly.</target>
        </trans-unit>
        <trans-unit id="15ca78870b7dd2bfcea277145e79c89ea50df4eb" translate="yes" xml:space="preserve">
          <source>Alternatively, if you want the widget to have a fixed size based on its contents, you can call &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;QLayout::setSizeConstraint&lt;/a&gt;(&lt;a href=&quot;qlayout#SizeConstraint-enum&quot;&gt;QLayout::SetFixedSize&lt;/a&gt;);</source>
          <target state="translated">또는 위젯의 내용에 따라 위젯의 크기가 고정되도록하려면 &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;QLayout :: setSizeConstraint&lt;/a&gt; ( &lt;a href=&quot;qlayout#SizeConstraint-enum&quot;&gt;QLayout :: SetFixedSize&lt;/a&gt; )를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c080b9a586c88dcd1fb5a40f42f32690946bb34d" translate="yes" xml:space="preserve">
          <source>Alternatively, it can simply make sure not to call &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;().</source>
          <target state="translated">또는 &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt; () 을 호출하지 않도록 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a74475f0fdfdf18f19050c6f0db82477f2bbde2" translate="yes" xml:space="preserve">
          <source>Alternatively, it is possible to access the conversion status and the decoded data directly:</source>
          <target state="translated">Alternatively, it is possible to access the conversion status and the decoded data directly:</target>
        </trans-unit>
        <trans-unit id="fd3838db1c972989ce813b637fc5fd805bea502a" translate="yes" xml:space="preserve">
          <source>Alternatively, list items can also be created without a parent widget, and later inserted into a list using &lt;a href=&quot;qlistwidget#insertItem&quot;&gt;QListWidget::insertItem&lt;/a&gt;().</source>
          <target state="translated">또는 상위 위젯없이 목록 항목을 작성한 다음 나중에 &lt;a href=&quot;qlistwidget#insertItem&quot;&gt;QListWidget :: insertItem&lt;/a&gt; ()을 사용하여 목록에 삽입 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9b507f5cfee9c1fd98f1b0538c387befabccec3" translate="yes" xml:space="preserve">
          <source>Alternatively, objects can be selected in the &lt;a href=&quot;#the-object-inspector&quot;&gt;Object Inspector&lt;/a&gt;.</source>
          <target state="translated">또는 &lt;a href=&quot;#the-object-inspector&quot;&gt;Object Inspector&lt;/a&gt; 에서 객체를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f65e15afdeb30efac9068dea03f0dcce3075d879" translate="yes" xml:space="preserve">
          <source>Alternatively, objects can be selected in the &lt;a href=&quot;designer-widget-mode#the-object-inspector&quot;&gt;Object Inspector&lt;/a&gt;.</source>
          <target state="translated">Alternatively, objects can be selected in the &lt;a href=&quot;designer-widget-mode#the-object-inspector&quot;&gt;Object Inspector&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="29bcf362f34e8bf855f6d7e52bc138ead7ec0173" translate="yes" xml:space="preserve">
          <source>Alternatively, since &lt;code&gt;MyItem.qml&lt;/code&gt; is loaded within the scope of the Loader, it could also directly call any function defined in the Loader or its parent &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;.</source>
          <target state="translated">또는 &lt;code&gt;MyItem.qml&lt;/code&gt; 이 Loader 범위 내에로드되므로 Loader 또는 해당 상위 &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item에&lt;/a&gt; 정의 된 함수를 직접 호출 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc72d2fa35dd599daf47c795700a7fdc009e50fd" translate="yes" xml:space="preserve">
          <source>Alternatively, slices can be added to a pie series by using the &lt;a href=&quot;qml-qtcharts-pieseries#append-method&quot;&gt;PieSeries.append()&lt;/a&gt; method.</source>
          <target state="translated">또는 &lt;a href=&quot;qml-qtcharts-pieseries#append-method&quot;&gt;PieSeries.append ()&lt;/a&gt; 메서드를 사용하여 슬라이스를 파이 시리즈에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ee19810abf7c0a43123af559c91c2b290bed9d7" translate="yes" xml:space="preserve">
          <source>Alternatively, tables can be constructed without a given size and resized later:</source>
          <target state="translated">또는 주어진 크기없이 테이블을 구성하고 나중에 크기를 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d9c78a99f6583f62780471bdb49415c23f22d87" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication::translate&lt;/a&gt;() function can be called with a specific context, and this will be recognized by &lt;code&gt;lupdate&lt;/code&gt; and Qt Linguist.</source>
          <target state="translated">또는 &lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication :: translate&lt;/a&gt; () 함수를 특정 컨텍스트로 호출 할 수 있으며 이는 &lt;code&gt;lupdate&lt;/code&gt; 및 Qt Linguist에 의해 인식됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd7467ceb909df684d0f3a1ae4f97cfc555c0d23" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;qml-qt-labs-settings-settings#value-method&quot;&gt;value()&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-settings-settings#setValue-method&quot;&gt;setValue()&lt;/a&gt; functions of &lt;a href=&quot;qpainter#settings&quot;&gt;Settings&lt;/a&gt; can be used:</source>
          <target state="translated">대안 적으로, &lt;a href=&quot;qml-qt-labs-settings-settings#value-method&quot;&gt;값 ()&lt;/a&gt; 과 &lt;a href=&quot;qml-qt-labs-settings-settings#setValue-method&quot;&gt;의 setValue ()&lt;/a&gt; 의 기능 &lt;a href=&quot;qpainter#settings&quot;&gt;설정을&lt;/a&gt; 사용할 수있다 :</target>
        </trans-unit>
        <trans-unit id="c572f301f256b99c0b45c3aa5d520633dd92698a" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;qml-qtquick-controls2-actiongroup#group-attached-prop&quot;&gt;group&lt;/a&gt; attached property allows declaring the actions elsewhere and assigning them to a specific group.</source>
          <target state="translated">또는 &lt;a href=&quot;qml-qtquick-controls2-actiongroup#group-attached-prop&quot;&gt;그룹&lt;/a&gt; 연결 속성을 통해 다른 곳에서 작업을 선언하고 특정 그룹에 작업을 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4674d0076a934d3596e8dfe3b43347d2b6de796" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;Ui::CalculatorForm&lt;/code&gt; structure can be made a pointer member of the class. The header then looks as follows:</source>
          <target state="translated">또는 &lt;code&gt;Ui::CalculatorForm&lt;/code&gt; 구조를 클래스의 포인터 멤버로 만들 수 있습니다. 그런 다음 헤더는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="addebb9dd1b2b2dd9d63ab8b5937085343cc69a6" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;application.qml&lt;/code&gt; could have destroyed the created object by calling &lt;code&gt;object.destroy()&lt;/code&gt;.</source>
          <target state="translated">또는 &lt;code&gt;application.qml&lt;/code&gt; 이 &lt;code&gt;object.destroy()&lt;/code&gt; 를 호출하여 작성된 오브젝트를 파기했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da1b681a739fe03a1f9dab3c5338b93673fc2bd3" translate="yes" xml:space="preserve">
          <source>Alternatively, the environment variable QTWEBENGINE_CHROMIUM_FLAGS can be set. For example, the following value could be set to disable logging while debugging an application called</source>
          <target state="translated">또는 환경 변수 QTWEBENGINE_CHROMIUM_FLAGS를 설정할 수 있습니다. 예를 들어, 호출 된 응용 프로그램을 디버깅하는 동안 로깅을 비활성화하도록 다음 값을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c3aed3e9a16f8b5b483d26125ce1e6e97706df0" translate="yes" xml:space="preserve">
          <source>Alternatively, the environment variable QTWEBENGINE_REMOTE_DEBUGGING can be set. It can be set as either just a port working similarly to &lt;code&gt;--remote-debugging-port&lt;/code&gt; or given both a host address and a port. The latter can be used to control which network interface to export the interface on, so that you can access the developer tools from a remote device.</source>
          <target state="translated">또는 환경 변수 QTWEBENGINE_REMOTE_DEBUGGING을 설정할 수 있습니다. &lt;code&gt;--remote-debugging-port&lt;/code&gt; 와 유사하게 작동하는 포트 또는 호스트 주소와 포트를 모두 제공 하는 포트로 설정할 수 있습니다 . 후자는 인터페이스를 내보낼 네트워크 인터페이스를 제어하여 원격 장치에서 개발자 도구에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7244d9bfff1f39deb3ba10f625ddb0b784850b5" translate="yes" xml:space="preserve">
          <source>Alternatively, the function may be called with a single argument where that argument is a JavaScript array which contains the sixteen matrix values.</source>
          <target state="translated">Alternatively, the function may be called with a single argument where that argument is a JavaScript array which contains the sixteen matrix values.</target>
        </trans-unit>
        <trans-unit id="18a948ac8361b7e2e3e1217a688cc2ed2569cc32" translate="yes" xml:space="preserve">
          <source>Alternatively, the prefixing of each and every OpenGL call can be avoided by deriving from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; instead:</source>
          <target state="translated">또는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; 에서 파생하여 각 OpenGL 호출의 접두사를 피할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7298e615706d302abbb953c7e09b1f3f6ac679c0" translate="yes" xml:space="preserve">
          <source>Alternatively, the prefixing of each and every OpenGL call can be avoided by deriving from &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; instead:</source>
          <target state="translated">Alternatively, the prefixing of each and every OpenGL call can be avoided by deriving from &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; instead:</target>
        </trans-unit>
        <trans-unit id="2e066369c6556f0840efe44db01f49957caa4a8a" translate="yes" xml:space="preserve">
          <source>Alternatively, the prefixing of each and every OpenGL call can be avoided by deriving from &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; instead:</source>
          <target state="translated">또는 각각의 모든 OpenGL 호출의 접두사를 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; 에서 파생시켜 피할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a87094edd3528f083099c1e1401f048c62e55c9e" translate="yes" xml:space="preserve">
          <source>Alternatively, they can be extracted from an existing editor:</source>
          <target state="translated">또는 기존 편집기에서 추출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7d2f7e730179452e2405aae6966cc4a6f0ee6b5" translate="yes" xml:space="preserve">
          <source>Alternatively, this effect can be achieved by providing message, key and method to &lt;a href=&quot;qmessageauthenticationcode#hash&quot;&gt;hash&lt;/a&gt;() method.</source>
          <target state="translated">또는 메시지, 키 및 방법을 &lt;a href=&quot;qmessageauthenticationcode#hash&quot;&gt;해시&lt;/a&gt; () 방법 으로 제공하여이 효과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc8ab04e0bf46aa2c429345f48f7a719b6db05b1" translate="yes" xml:space="preserve">
          <source>Alternatively, use the offscreen plugin:</source>
          <target state="translated">Alternatively, use the offscreen plugin:</target>
        </trans-unit>
        <trans-unit id="6c912db920371c85e82150c3489c220e01b112bf" translate="yes" xml:space="preserve">
          <source>Alternatively, using &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, apply &lt;a href=&quot;qrect#x&quot;&gt;x()&lt;/a&gt; + &lt;a href=&quot;qrect#width&quot;&gt;width()&lt;/a&gt; and &lt;a href=&quot;qrect#y&quot;&gt;y()&lt;/a&gt; + &lt;a href=&quot;qrect#height&quot;&gt;height()&lt;/a&gt; to find the bottom-right corner, and avoid the &lt;a href=&quot;qrect#right&quot;&gt;right()&lt;/a&gt; and &lt;a href=&quot;qrect#bottom&quot;&gt;bottom()&lt;/a&gt; functions.</source>
          <target state="translated">대안 적으로, 사용 &lt;a href=&quot;qrect&quot;&gt;QRect을&lt;/a&gt; 적용 &lt;a href=&quot;qrect#x&quot;&gt;(X)를 ()&lt;/a&gt; + &lt;a href=&quot;qrect#width&quot;&gt;폭 ()&lt;/a&gt; 와 &lt;a href=&quot;qrect#y&quot;&gt;Y ()&lt;/a&gt; + &lt;a href=&quot;qrect#height&quot;&gt;높이 ()&lt;/a&gt; 오른쪽 하단을 발견하고 회피 &lt;a href=&quot;qrect#right&quot;&gt;오른쪽 ()&lt;/a&gt; 및 &lt;a href=&quot;qrect#bottom&quot;&gt;바닥 ()&lt;/a&gt; 함수.</target>
        </trans-unit>
        <trans-unit id="167f707ea75e78bdcb9c25adc5c46d163b89adc9" translate="yes" xml:space="preserve">
          <source>Alternatively, we can make the first rule more specific:</source>
          <target state="translated">또는 첫 번째 규칙을 더 구체적으로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e43a042fe7153bf933f891be56f30819486958b" translate="yes" xml:space="preserve">
          <source>Alternatively, we can obtain a cursor directly from a document:</source>
          <target state="translated">또는 문서에서 직접 커서를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc71165a92d0d495662fdb79eb4f3536be70d67b" translate="yes" xml:space="preserve">
          <source>Alternatively, we could also have referred to a file containing the source of the effect instead of the compiled bytecode version.</source>
          <target state="translated">또는 컴파일 된 바이트 코드 버전 대신 효과 소스를 포함하는 파일을 참조 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e42567dbf71f71d701fd94f69c91ee851f1b08a" translate="yes" xml:space="preserve">
          <source>Alternatively, with CMake the equivalent is:</source>
          <target state="translated">또는 CMake를 사용하면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="99e88b6e5b0e4f0bdb4921d075c7b71a8001cab3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can also forward a &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::LanguageChange&lt;/a&gt; event to your application's &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; instance or connect your own signal to &lt;a href=&quot;qqmlengine#retranslate&quot;&gt;QQmlEngine::retranslate&lt;/a&gt;().</source>
          <target state="translated">또는 &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: LanguageChange&lt;/a&gt; 이벤트를 애플리케이션의 &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; 인스턴스로 전달하거나 자체 신호를 &lt;a href=&quot;qqmlengine#retranslate&quot;&gt;QQmlEngine :: retranslate&lt;/a&gt; ()에 연결할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ccc06e86758dee97f8a532078c9e3a1574aa440" translate="yes" xml:space="preserve">
          <source>Alternatively, you can cast the object to its actual type and call methods with compile-time safety. In this case the base object of &lt;code&gt;MyItem.qml&lt;/code&gt; is an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;, which is defined by the &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; class:</source>
          <target state="translated">또는 컴파일 타임 안전을 통해 객체를 실제 유형으로 캐스팅하고 메서드를 호출 할 수 있습니다. 이 경우 &lt;code&gt;MyItem.qml&lt;/code&gt; 의 기본 객체 는 &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; 이며 &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; 클래스에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="f388a7e84ed2f7e34913cf953eb7f4102ec6032f" translate="yes" xml:space="preserve">
          <source>Alternatively, you can configure the default filter via &lt;a href=&quot;qloggingcategory#setFilterRules&quot;&gt;setFilterRules&lt;/a&gt;().</source>
          <target state="translated">Alternatively, you can configure the default filter via &lt;a href=&quot;qloggingcategory#setFilterRules&quot;&gt;setFilterRules&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="6d2a52153e0648e44addd6c44906ddfadbf4a658" translate="yes" xml:space="preserve">
          <source>Alternatively, you can either use the Qt for Android variable &lt;a href=&quot;qmake-variable-reference#android-extra-libs&quot;&gt;ANDROID_EXTRA_LIBS&lt;/a&gt; to add extra libraries, mainly &lt;code&gt;libcrypto&lt;/code&gt; and &lt;code&gt;libssl&lt;/code&gt;. For &lt;a href=&quot;qmake-manual&quot;&gt;QMake&lt;/a&gt; use:</source>
          <target state="translated">Alternatively, you can either use the Qt for Android variable &lt;a href=&quot;qmake-variable-reference#android-extra-libs&quot;&gt;ANDROID_EXTRA_LIBS&lt;/a&gt; to add extra libraries, mainly &lt;code&gt;libcrypto&lt;/code&gt; and &lt;code&gt;libssl&lt;/code&gt; . For &lt;a href=&quot;qmake-manual&quot;&gt;QMake&lt;/a&gt; use:</target>
        </trans-unit>
        <trans-unit id="31839465cca6f9f84f510e9d5845271607538eb9" translate="yes" xml:space="preserve">
          <source>Alternatively, you can import</source>
          <target state="translated">또는 가져올 수 있습니다</target>
        </trans-unit>
        <trans-unit id="5b3e56d5b14769440d0a306d0d81d9ac9b152e4d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can insert images using the HTML &lt;code&gt;img&lt;/code&gt; tag:</source>
          <target state="translated">또는 HTML &lt;code&gt;img&lt;/code&gt; 태그를 사용하여 이미지를 삽입 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6151e50ba9c38e7e1dfce25f705f9f18c9a1e3d1" translate="yes" xml:space="preserve">
          <source>Alternatively, you can modify the install name using the &lt;code&gt;install_name_tool(1)&lt;/code&gt; on the command line.</source>
          <target state="translated">또는 명령 행에서 &lt;code&gt;install_name_tool(1)&lt;/code&gt; 을 사용하여 설치 이름을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23ae3475fb33d41e5352690b85ebd62a28cc3b34" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass an instance of &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; to the constructor to &lt;a href=&quot;qradiodata&quot;&gt;QRadioData&lt;/a&gt;.</source>
          <target state="translated">또는 &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; 인스턴스를 생성자에 &lt;a href=&quot;qradiodata&quot;&gt;QRadioData&lt;/a&gt; 로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecb49c33b4b474d431988dceb5f3ec1550aeccf6" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass an instance of &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; to the constructor to QRadioData.</source>
          <target state="translated">Alternatively, you can pass an instance of &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; to the constructor to QRadioData.</target>
        </trans-unit>
        <trans-unit id="61771b3b35c36488be0067987000480e5135ec0e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can preview custom style sheet created with Qt Style Sheets. The figure below shows an example of Qt Style Sheet syntax and the corresponding output.</source>
          <target state="translated">또는 Qt 스타일 시트로 만든 사용자 정의 스타일 시트를 미리 볼 수 있습니다. 아래 그림은 Qt 스타일 시트 구문의 예와 해당 출력을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e557621a8cd8b4dc724c840297858d24a08ec601" translate="yes" xml:space="preserve">
          <source>Alternatively, you can restore your work tree to a clean state on 5.14: &lt;code&gt;git checkout HEAD -- tests/auto/corelib/time/qdatetime/tst_qdatetime.cpp&lt;/code&gt;</source>
          <target state="translated">Alternatively, you can restore your work tree to a clean state on 5.14: &lt;code&gt;git checkout HEAD -- tests/auto/corelib/time/qdatetime/tst_qdatetime.cpp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a88281dc1e24eeb51a1d706e40dd6987044f6a8" translate="yes" xml:space="preserve">
          <source>Alternatively, you can set the program to run with &lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;() and &lt;a href=&quot;qprocess#setArguments&quot;&gt;setArguments&lt;/a&gt;(), and then call &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;() or &lt;a href=&quot;qprocess#open&quot;&gt;open&lt;/a&gt;().</source>
          <target state="translated">또는 &lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt; () 및 &lt;a href=&quot;qprocess#setArguments&quot;&gt;setArguments&lt;/a&gt; () 로 실행되도록 프로그램을 설정 한 다음 &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt; () 또는 &lt;a href=&quot;qprocess#open&quot;&gt;open&lt;/a&gt; () 을 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8bc899b80d74fbdb9bcd10cd07f72cb2b0a8268" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify a &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; instead of a &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt;; the &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; constructor (taking a &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; argument) will automatically create a solid pattern brush.</source>
          <target state="translated">또는 &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; 대신 &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; 를 지정할 수 있습니다 . &lt;a href=&quot;qbrush&quot;&gt;QBrush의&lt;/a&gt; 생성자 (복용하는 &lt;a href=&quot;qcolor&quot;&gt;QColor의&lt;/a&gt; 인수는) 자동으로 솔리드 패턴 브러시를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="b07cfac2a244b6e4f6a3ac989a01ec6db3a2692a" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify a relative path to a .pro file in any directory. It is strongly recommended that you specify only paths in the current project's parent directory or its subdirectories.</source>
          <target state="translated">또는 모든 디렉토리에서 .pro 파일의 상대 경로를 지정할 수 있습니다. 현재 프로젝트의 상위 디렉토리 또는 하위 디렉토리에 경로 만 지정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5091bda74671b133565480b7b4ae9f8ba27e908b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can start by creating a new &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; item, and then call &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt;() to embed a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; later. The &lt;a href=&quot;qgraphicsproxywidget#widget&quot;&gt;widget&lt;/a&gt;() function returns a pointer to the embedded widget. &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; shares ownership with &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, so if either of the two widgets are destroyed, the other widget will be automatically destroyed as well.</source>
          <target state="translated">또는 새 &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; 항목을 만든 다음 &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt; ()을 호출 하여 나중에 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 을 포함시킬 수 있습니다 . &lt;a href=&quot;qgraphicsproxywidget#widget&quot;&gt;위젯&lt;/a&gt; () 함수는 내장 된 위젯에 대한 포인터를 반환합니다. &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; 은 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 과 소유권을 공유 하므로 두 위젯 중 하나가 파괴되면 다른 위젯도 자동으로 파괴됩니다.</target>
        </trans-unit>
        <trans-unit id="f11602b0f34bfdc8c0427546b07a3adfac521f13" translate="yes" xml:space="preserve">
          <source>Alternatively, you can start by creating a new QGraphicsProxyWidget item, and then call &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt;() to embed a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; later. The &lt;a href=&quot;qgraphicsproxywidget#widget&quot;&gt;widget&lt;/a&gt;() function returns a pointer to the embedded widget. QGraphicsProxyWidget shares ownership with &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, so if either of the two widgets are destroyed, the other widget will be automatically destroyed as well.</source>
          <target state="translated">Alternatively, you can start by creating a new QGraphicsProxyWidget item, and then call &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt;() to embed a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; later. The &lt;a href=&quot;qgraphicsproxywidget#widget&quot;&gt;widget&lt;/a&gt;() function returns a pointer to the embedded widget. QGraphicsProxyWidget shares ownership with &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, so if either of the two widgets are destroyed, the other widget will be automatically destroyed as well.</target>
        </trans-unit>
        <trans-unit id="f4b7a8c7e2698e5d8dc037d0374fbad2f88fc55a" translate="yes" xml:space="preserve">
          <source>Alternatively, you can start by creating a new QGraphicsProxyWidget item, and then call &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt;() to embed a &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; later. The &lt;a href=&quot;qgraphicsproxywidget#widget&quot;&gt;widget&lt;/a&gt;() function returns a pointer to the embedded widget. QGraphicsProxyWidget shares ownership with &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;, so if either of the two widgets are destroyed, the other widget will be automatically destroyed as well.</source>
          <target state="translated">또는 새 QGraphicsProxyWidget 항목을 만든 다음 &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt; ()을 호출 하여 나중에 &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; 을 포함 할 수 있습니다 . &lt;a href=&quot;qgraphicsproxywidget#widget&quot;&gt;위젯&lt;/a&gt; () 함수는 내장 된 위젯에 대한 포인터를 반환합니다. QGraphicsProxyWidget은 &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; 과 소유권을 공유 하므로 두 위젯 중 하나가 파괴되면 다른 위젯도 자동으로 파괴됩니다.</target>
        </trans-unit>
        <trans-unit id="5341c61deccf887137cce3fe048d2ec0b183dbc6" translate="yes" xml:space="preserve">
          <source>Alternatively, you can temporarily swap your debug and release versions, which is documented in &lt;a href=&quot;http://developer.apple.com/technotes/tn2004/tn2124.html#SECJUSTONELIB&quot;&gt;Apple's &quot;Debugging Magic&quot; technical note&lt;/a&gt;.</source>
          <target state="translated">또는 &lt;a href=&quot;http://developer.apple.com/technotes/tn2004/tn2124.html#SECJUSTONELIB&quot;&gt;Apple의 &quot;Debugging Magic&quot;기술 노트에&lt;/a&gt; 설명되어있는 디버그 및 릴리스 버전을 임시로 교환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65370ae6bbae8c2cc3116b13a1f2544e6f7ce92b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;) if you just want to read from a byte array.</source>
          <target state="translated">또는 바이트 배열에서 읽으려는 경우 &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;)을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01a32bfddfff53eb644fbc8ba0728b693250d9c9" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use QDataStream(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;) if you just want to read from a byte array.</source>
          <target state="translated">Alternatively, you can use QDataStream(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;) if you just want to read from a byte array.</target>
        </trans-unit>
        <trans-unit id="18cd89fe40e760050834a5999e2482aebe07843c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use a C++11 lambda:</source>
          <target state="translated">또는 C ++ 11 람다를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f582d71cae6a211cc74af1711124f62225b132d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;a href=&quot;qml-qtgraphicaleffects-coloroverlay&quot;&gt;ColorOverlay&lt;/a&gt; effect to colorize the source item in the RGBA color space.</source>
          <target state="translated">또는 &lt;a href=&quot;qml-qtgraphicaleffects-coloroverlay&quot;&gt;ColorOverlay&lt;/a&gt; 효과를 사용 하여 RGBA 색상 공간에서 소스 항목을 채색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="875ae8f91aff238ab7e77d18afd53a9d1f329e0a" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;a href=&quot;qregularexpression#setPatternOptions&quot;&gt;setPatternOptions&lt;/a&gt;() function on an existing QRegularExpressionObject:</source>
          <target state="translated">또는 기존 QRegularExpressionObject 에서 &lt;a href=&quot;qregularexpression#setPatternOptions&quot;&gt;setPatternOptions&lt;/a&gt; () 함수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6e7f6543fcd82cea1f26d1a60351130e66eccd8" translate="yes" xml:space="preserve">
          <source>Alternatively, you could download the Qt sources in the Downloads section, and build Qt from it.</source>
          <target state="translated">Alternatively, you could download the Qt sources in the Downloads section, and build Qt from it.</target>
        </trans-unit>
        <trans-unit id="c6614410629e0ec64ebb18116ad0fb4336adb058" translate="yes" xml:space="preserve">
          <source>Alternatively, you may use type casting and cast everything to &lt;code&gt;int&lt;/code&gt; or to &lt;code&gt;qsizetype&lt;/code&gt;.</source>
          <target state="translated">또는 유형 캐스팅을 사용하고 모든 것을 &lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;qsizetype&lt;/code&gt; 으로 캐스팅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">Alternatives</target>
        </trans-unit>
        <trans-unit id="8f2b2c92ea95d5f5c42c52e7b95de65a9c10baf3" translate="yes" xml:space="preserve">
          <source>Alternatives to QTimer</source>
          <target state="translated">QTimer의 대안</target>
        </trans-unit>
        <trans-unit id="c2b7867ac20fe02d876e64ca0c757f23f38c808b" translate="yes" xml:space="preserve">
          <source>Alters the colors of the source item by applying an overlay color</source>
          <target state="translated">오버레이 색상을 적용하여 소스 항목의 색상을 변경합니다</target>
        </trans-unit>
        <trans-unit id="e09f932906d2bc63547495fae85330b38f0e06bc" translate="yes" xml:space="preserve">
          <source>Alters the colors of the source item by applying an overlay color. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">오버레이 색상을 적용하여 소스 항목의 색상을 변경합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34255d56232d0a72bf0a079e3697d7f91788bee2" translate="yes" xml:space="preserve">
          <source>Alters the luminance of the source item</source>
          <target state="translated">소스 항목의 휘도를 변경합니다</target>
        </trans-unit>
        <trans-unit id="cbf6d31a21cc5d6d57a388faba1b189b7629f1fc" translate="yes" xml:space="preserve">
          <source>Alters the luminance of the source item. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">소스 항목의 광도를 변경합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd78877be5d6e20edfabd346a46aae106eb53800" translate="yes" xml:space="preserve">
          <source>Alters the source item colors in the HSL color space</source>
          <target state="translated">HSL 색상 공간에서 소스 항목 색상을 변경합니다</target>
        </trans-unit>
        <trans-unit id="9f0f122fd78e25c6b4c9d73eec9cd6c23109d7a3" translate="yes" xml:space="preserve">
          <source>Alters the source item colors in the HSL color space. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">HSL 색상 공간에서 소스 항목 색상을 변경합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15febe87211e7752db2f5bb9859e4d07f0a3fe02" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered in all lowercase type.</source>
          <target state="translated">모든 소문자 유형으로 렌더링 할 텍스트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="5432a5d92c4f97cbde61824aef4f22546e1de125" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered in all uppercase type.</source>
          <target state="translated">모든 대문자 유형으로 렌더링 할 텍스트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="3d99113e7a102e3142c38f8e702548cdea29672a" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered in small-caps type.</source>
          <target state="translated">작은 대문자로 렌더링 할 텍스트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="6fa942721f99001934425a24fb5127b6017b6c5e" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered with the first character of each word as an uppercase character.</source>
          <target state="translated">각 단어의 첫 문자를 대문자로 사용하여 렌더링 할 텍스트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="657d445772eda12dc2c400c14f0bf35d94315b87" translate="yes" xml:space="preserve">
          <source>Although</source>
          <target state="translated">Although</target>
        </trans-unit>
        <trans-unit id="d3c2cf86288beebe48f74d5e65045fbe4d6c0648" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; inherits from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, you should use the functions provided by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;,</source>
          <target state="translated">하지만 &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget이&lt;/a&gt; 모두 상속 &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; 하고 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; , 당신은에 의해 제공되는 기능을 사용해야합니다 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem을&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="2fa1a29998820b5abe31b6091118610e9a73a2e9" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</source>
          <target state="translated">&lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; 는 이벤트 루프와 함께 사용하도록 설계 되었지만 이벤트 루프없이 사용할 수 있습니다. 이 경우 연결을 사용할 수 있거나 시간 초과가 만료 될 때까지 차단되는 &lt;a href=&quot;qlocalserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt; ()을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b5c00985f5e4c5b9777b0f9ce7dfcabdb8b5e712" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;(), and &lt;a href=&quot;qlocalsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;() which blocks until the operation is complete or the timeout expires.</source>
          <target state="translated">&lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; 은 이벤트 루프와 함께 사용하도록 설계 되었지만 이벤트 루프없이 사용할 수 있습니다. 이 경우 작업이 완료되거나 시간 초과가 만료 될 때까지 차단 하는 &lt;a href=&quot;qlocalsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt; (), &lt;a href=&quot;qlocalsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt; (), &lt;a href=&quot;qlocalsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt; () 및 &lt;a href=&quot;qlocalsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt; ()를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1bf821133e41ed980ae8628b2b72bafbd95fe5bf" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qml-qtquick-controls2-menuitem&quot;&gt;MenuItems&lt;/a&gt; are most commonly used with Menu, it can contain any type of item.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls2-menuitem&quot;&gt;MenuItems&lt;/a&gt; 는 Menu와 함께 가장 일반적으로 사용 되지만 모든 유형의 항목을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd57b9fa8a01047afd2f64f5c7dccc9c2e384dd9" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is reentrant, the GUI classes, notably &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and all its subclasses, are not reentrant. They can only be used from the main thread. As noted earlier, &lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication::exec&lt;/a&gt;() must also be called from that thread.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 는 재진입 가능 하지만 GUI 클래스, 특히 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 및 모든 서브 클래스는 재진입되지 않습니다. 메인 스레드에서만 사용할 수 있습니다. 앞에서 언급했듯이 &lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication :: exec&lt;/a&gt; ()도 해당 스레드에서 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a72d6c6bf647029ef6ee6aecf85b77c69b9a20d" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is reentrant, the GUI classes, notably &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; and all its subclasses, are not reentrant. They can only be used from the main thread. As noted earlier, &lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication::exec&lt;/a&gt;() must also be called from that thread.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 가 재진입 가능 하지만 GUI 클래스, 특히 &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; 및 모든 하위 클래스는 재진입이 아닙니다. 메인 스레드에서만 사용할 수 있습니다. 앞서 언급했듯이 &lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication :: exec&lt;/a&gt; ()도 해당 스레드에서 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="4f8dba4a11205c258600d7d2fa0d3ffec962b25b" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; objects can be constructed and set up without requiring user input, printing is often performed as a result of a request by the user; for example, when the user selects the &lt;b&gt;File|Print...&lt;/b&gt; menu item in a GUI application. In such cases, a newly-constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object is supplied to a &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt;, allowing the user to specify the printer to use, paper size, and other printing properties.</source>
          <target state="translated">사용자의 입력 없이도 &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; 객체를 구성하고 설정할 수 있지만 인쇄는 종종 사용자의 요청에 따라 수행됩니다. 예를 들어, 사용자 가 GUI 응용 프로그램에서 &lt;b&gt;File | Print ...&lt;/b&gt; 메뉴 항목을 선택한 경우 . 이러한 경우에, 새로 생성 &lt;a href=&quot;qprinter&quot;&gt;QPrinter의&lt;/a&gt; 목적은 공급된다 &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt; 사용자가 사용하는 프린터, 용지 크기 등의 인쇄 속성을 지정할 수.</target>
        </trans-unit>
        <trans-unit id="9a5cfef5adedd6e579cf3f8062e436156f237e28" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; has traditionally been used to display QML files in a C++ application, doing this means you can only set window properties from C++.</source>
          <target state="translated">&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; 는 전통적으로 C ++ 응용 프로그램에서 QML 파일을 표시하는 데 사용 되었지만 , 이렇게하면 C ++에서 창 속성 만 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="044fd8ff3177b77d3970d09eb6328a950f5dcd3e" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; is a container widget,</source>
          <target state="translated">하지만 &lt;a href=&quot;qsplitter&quot;&gt;QSplitter은&lt;/a&gt; 컨테이너 위젯입니다,</target>
        </trans-unit>
        <trans-unit id="f1db04d2ad55920af0f27dea5c726b85c629aa47" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; is mostly designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qtcpserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</source>
          <target state="translated">&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; 는 주로 이벤트 루프와 함께 사용하도록 설계 되었지만 이벤트 루프없이 사용할 수 있습니다. 이 경우 연결을 사용할 수 있거나 시간 초과가 만료 될 때까지 차단되는 &lt;a href=&quot;qtcpserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt; ()을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="75bdc49404890f8106c66558029a8f886b1a9490" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; makes it easy to display and edit rich text, documents can also be used independently of any editor widget, for example:</source>
          <target state="translated">하지만 &lt;a href=&quot;qtextedit&quot;&gt;은 QTextEdit가&lt;/a&gt; 쉽게 표시하고 편집 서식있는 텍스트 할 수 있습니다, 문서는 또한 예를 들어, 어떤 편집기 위젯 독립적으로 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4ccc84da4d29b1d8040e6620c9fcb9f952f7988f" translate="yes" xml:space="preserve">
          <source>Although QDoc will use the encoding to read source and documentation files, limitations of C++ compilers may prevent you from using non-ASCII characters in source code comments. In cases like these, it is possible to write API documentation completely in documentation files.</source>
          <target state="translated">Although QDoc will use the encoding to read source and documentation files, limitations of C++ compilers may prevent you from using non-ASCII characters in source code comments. In cases like these, it is possible to write API documentation completely in documentation files.</target>
        </trans-unit>
        <trans-unit id="76c4d2a677aa7efae38dfdf9f9afc5b5c831a291" translate="yes" xml:space="preserve">
          <source>Although QGraphicsWidget inherits from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, you should use the functions provided by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;,</source>
          <target state="translated">Although QGraphicsWidget inherits from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, you should use the functions provided by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="ea1e0243df98216fe6ae3a7a25122875137acdac" translate="yes" xml:space="preserve">
          <source>Although QLocalServer is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</source>
          <target state="translated">Although QLocalServer is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</target>
        </trans-unit>
        <trans-unit id="338e8c1eae97fd34f52ea28dbd6ed0fbc56118b8" translate="yes" xml:space="preserve">
          <source>Although QLocalSocket is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;(), and &lt;a href=&quot;qlocalsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;() which blocks until the operation is complete or the timeout expires.</source>
          <target state="translated">Although QLocalSocket is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;(), and &lt;a href=&quot;qlocalsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;() which blocks until the operation is complete or the timeout expires.</target>
        </trans-unit>
        <trans-unit id="0e8e034ae811487e95375d1b0a03608895baf7ab" translate="yes" xml:space="preserve">
          <source>Although QTcpServer is mostly designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qtcpserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</source>
          <target state="translated">Although QTcpServer is mostly designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qtcpserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</target>
        </trans-unit>
        <trans-unit id="10726a2e934457cf612c6f1ecb079a8b7e8c31ca" translate="yes" xml:space="preserve">
          <source>Although Qt enables you to manipulate QML from C++, it is not recommended to do so. To explain why, let's take a look at a simplified example.</source>
          <target state="translated">Qt를 사용하면 C ++에서 QML을 조작 할 수 있지만 그렇게하지 않는 것이 좋습니다. 이유를 설명하기 위해 간단한 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="57527e3e7ade42d3b70aaf429c7eb0c3c99fe909" translate="yes" xml:space="preserve">
          <source>Although Qt provides facilities to handle and display resources, such as &lt;a href=&quot;qimageiohandler&quot;&gt;common image formats&lt;/a&gt; and &lt;a href=&quot;qtextdocument&quot;&gt;HTML&lt;/a&gt;, it is sometimes necessary to open files and external resources using external applications.</source>
          <target state="translated">Qt는 &lt;a href=&quot;qimageiohandler&quot;&gt;일반적인 이미지 형식&lt;/a&gt; 및 &lt;a href=&quot;qtextdocument&quot;&gt;HTML&lt;/a&gt; 과 같은 리소스를 처리하고 표시하는 기능을 제공하지만 외부 응용 프로그램을 사용하여 파일 및 외부 리소스를 열어야하는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="44655c28b3eda8d3702e45ec301e410a163ad1d9" translate="yes" xml:space="preserve">
          <source>Although a document can be edited using many cursors at once, a &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; only displays a single cursor at a time. Therefore, if we want to update the editor to display a particular cursor or its selection, we need to set the editor's cursor after we have modified the document:</source>
          <target state="translated">한 번에 많은 커서를 사용하여 문서를 편집 할 수 있지만 &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; 는 한 번 에 하나의 커서 만 표시합니다. 따라서 특정 커서 나 선택 항목을 표시하도록 편집기를 업데이트하려면 문서를 수정 한 후 편집기 커서를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5e798e54edda61f110d729af8a6a7484fb21471" translate="yes" xml:space="preserve">
          <source>Although a given document may contain complex structures, once we have a reference to a valid block in the document, we can navigate between each of the text blocks in the order in which they were written:</source>
          <target state="translated">주어진 문서에 복잡한 구조가 포함되어있을 수 있지만 문서에 유효한 블록에 대한 참조가 있으면 작성된 순서대로 각 텍스트 블록 사이를 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d54035e63623f85c8d4f7cb18bc0993cb248ef2" translate="yes" xml:space="preserve">
          <source>Although a popup menu is always a top-level widget, if a parent is passed the popup menu will be deleted when that parent is destroyed (as with any other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;).</source>
          <target state="translated">팝업 메뉴는 항상 최상위 위젯이지만 부모가 전달되면 부모 메뉴가 파괴 될 때 팝업 메뉴가 삭제됩니다 (다른 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 와 마찬가지로 ).</target>
        </trans-unit>
        <trans-unit id="d272d9666bc5983ca04224f2cd1ad21acf633002" translate="yes" xml:space="preserve">
          <source>Although aliasing is a useful tool in rendering graphics, it could affect performance of your application if not used wisely. The following sections summarize the different aliasing techniques to choose from. Understanding which technology best targets your problems will help balance visual quality with sufficient rendering speed.</source>
          <target state="translated">Although aliasing is a useful tool in rendering graphics, it could affect performance of your application if not used wisely. The following sections summarize the different aliasing techniques to choose from. Understanding which technology best targets your problems will help balance visual quality with sufficient rendering speed.</target>
        </trans-unit>
        <trans-unit id="b2802798553f7fae660d413f7e20b1a789e6dd4a" translate="yes" xml:space="preserve">
          <source>Although all of the standard items have one or both flags set for drag and drop, you generally need to set various properties in the view itself to take advantage of the built-in support for drag and drop:</source>
          <target state="translated">모든 표준 항목에 끌어서 놓기에 대해 설정된 플래그 중 하나 또는 둘 다가 있지만 일반적으로 끌어서 놓기에 대한 내장 지원을 활용하려면보기 자체에서 다양한 속성을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="89a215bbacf9b7715d00cada0738921a12587c7d" translate="yes" xml:space="preserve">
          <source>Although any combination of values from &lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt::DropActions&lt;/a&gt; can be given, the model needs to be written to support them. For example, to allow &lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt::MoveAction&lt;/a&gt; to be used properly with a list model, the model must provide an implementation of &lt;a href=&quot;qabstractitemmodel#removeRows&quot;&gt;QAbstractItemModel::removeRows&lt;/a&gt;(), either directly or by inheriting the implementation from its base class.</source>
          <target state="translated">&lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt :: DropActions&lt;/a&gt; 의 값 조합을 제공 할 수 있지만이를 지원하려면 모델을 작성해야합니다. 예를 들어 &lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt :: MoveAction&lt;/a&gt; 을 목록 모델과 함께 올바르게 사용하려면 모델이 &lt;a href=&quot;qabstractitemmodel#removeRows&quot;&gt;QAbstractItemModel :: removeRows&lt;/a&gt; () 구현을 직접 제공하거나 기본 클래스에서 구현을 상속해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb92122141046e9e05af16b460e129015d7cb501" translate="yes" xml:space="preserve">
          <source>Although backslash is a special character in INI files, most Windows applications don't escape backslashes (&lt;code&gt;\&lt;/code&gt;) in file paths:</source>
          <target state="translated">백 슬래시는 INI 파일에서 특수 문자이지만 대부분의 Windows 응용 프로그램은 파일 경로에서 백 슬래시 ( &lt;code&gt;\&lt;/code&gt; )를 이스케이프 처리하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a6037938ed96c0c9d71c3355201e9b1b781eb8ec" translate="yes" xml:space="preserve">
          <source>Although command compression and macros appear to have the same effect to the user, they often have different uses in an application. Commands that perform small changes to a document may be usefully compressed if there is no need to individually record them, and if only larger changes are relevant to the user. However, for commands that need to be recorded individually, or those that cannot be compressed, it is useful to use macros to provide a more convenient user experience while maintaining a record of each command.</source>
          <target state="translated">명령 압축과 매크로가 사용자에게 동일한 영향을 미치는 것처럼 보이지만 응용 프로그램에서 종종 다른 용도로 사용됩니다. 문서를 약간 변경하는 명령은 개별적으로 기록 할 필요가없고 큰 변경 만 사용자와 관련이있는 경우 유용하게 압축 될 수 있습니다. 그러나 개별적으로 기록해야하거나 명령을 압축 할 수없는 명령의 경우 매크로를 사용하여 각 명령의 기록을 유지하면서보다 편리한 사용자 경험을 제공하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="74e686245896d7cc497bfb8beac612cdc2530351" translate="yes" xml:space="preserve">
          <source>Although const, this function sets &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt;(), &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt;() and &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt;().</source>
          <target state="translated">const이지만이 함수는 &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt; (), &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt; () 및 &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt; ()를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="098816e4f657a78f9ac0e35689a36c35c28185f2" translate="yes" xml:space="preserve">
          <source>Although const, this function sets &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt;(), &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt;(), and &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt;().</source>
          <target state="translated">const이지만이 함수는 &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt; (), &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt; () 및 &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt; ()를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4fffa97bf6ee09234796b1fa7ed83a44b769292e" translate="yes" xml:space="preserve">
          <source>Although dock widgets can be added to any type of form, they are typically used with forms created from the &lt;a href=&quot;designer-creating-mainwindows&quot;&gt;main window template&lt;/a&gt;.</source>
          <target state="translated">Although dock widgets can be added to any type of form, they are typically used with forms created from the &lt;a href=&quot;designer-creating-mainwindows&quot;&gt;main window template&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1a78a2d268bf00e8ff4cebd22124ae566fff345f" translate="yes" xml:space="preserve">
          <source>Although dock widgets can be added to any type of form, they are typically used with forms created from the &lt;a href=&quot;designer-creating-mainwindows#&quot;&gt;main window template&lt;/a&gt;.</source>
          <target state="translated">도크 위젯은 모든 유형의 양식에 추가 할 수 있지만 일반적으로 &lt;a href=&quot;designer-creating-mainwindows#&quot;&gt;기본 창 템플리트&lt;/a&gt; 에서 작성된 양식과 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="87c3194014dc4941227c367c41a8070f6bbb3b75" translate="yes" xml:space="preserve">
          <source>Although it is convenient that the view classes provide their own selection models by default, when we use more than one view onto the same model it is often desirable that both the model's data and the user's selection are shown consistently in all views. Since the view classes allow their internal selection models to be replaced, we can achieve a unified selection between views with the following line:</source>
          <target state="translated">뷰 클래스는 기본적으로 자체 선택 모델을 제공하는 것이 편리하지만 동일한 모델에 둘 이상의 뷰를 사용하는 경우 모델 데이터와 사용자 선택이 모두 모든 뷰에 일관되게 표시되는 것이 바람직합니다. 뷰 클래스는 내부 선택 모델을 대체 할 수 있으므로 다음 행을 사용하여 뷰간에 통합 선택을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a23caf9a33e7ec52625277ac64d6de41928d115" translate="yes" xml:space="preserve">
          <source>Although it is easy to implement a custom slot in the dialog and connect it in the constructor, we could instead use &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;'s auto-connection facilities to connect the &lt;b&gt;OK&lt;/b&gt; button's clicked() signal to a slot in our subclass. &lt;code&gt;uic&lt;/code&gt; automatically generates code in the dialog's &lt;code&gt;setupUi()&lt;/code&gt; function to do this, so we only need to declare and implement a slot with a name that follows a standard convention:</source>
          <target state="translated">대화 상자에서 커스텀 슬롯을 구현하고 생성자에서 연결하는 것은 &lt;a href=&quot;qmetaobject&quot;&gt;쉽지만&lt;/a&gt; , 대신 QMetaObject 의 자동 연결 기능을 사용하여 &lt;b&gt;OK&lt;/b&gt; 버튼의 clicked () 신호를 서브 클래스의 슬롯에 연결할 수 있습니다 . &lt;code&gt;uic&lt;/code&gt; 자동으로 대화 상자의 코드 생성 &lt;code&gt;setupUi()&lt;/code&gt; 우리는 단지 선언하고 표준 규칙을 따르는 이름을 가진 슬롯을 구현해야하므로,이 작업을 수행하는 기능을 :</target>
        </trans-unit>
        <trans-unit id="335f92283583cdd2fcc6e1780f3b4e580284b1b0" translate="yes" xml:space="preserve">
          <source>Although it seems appropriate to perform sorting and filtering operations as internal functions of views, this approach does not allow multiple views to share the results of such potentially costly operations. The alternative approach, involving sorting within the model itself, leads to the similar problem where each view has to display items of data that are organized according to the most recent processing operation.</source>
          <target state="translated">정렬 및 필터링 작업을 뷰의 내부 함수로 수행하는 것이 적절 해 보이지만이 방법을 사용하면 여러 뷰에서 이러한 잠재적으로 비용이 많이 드는 작업의 결과를 공유 할 수 없습니다. 모델 자체 내에서의 정렬을 포함하는 대체 접근 방식은 각 뷰가 최신 처리 작업에 따라 구성된 데이터 항목을 표시해야하는 유사한 문제를 유발합니다.</target>
        </trans-unit>
        <trans-unit id="809a71ff393c21e20ce85f960cdfd1aa54a26856" translate="yes" xml:space="preserve">
          <source>Although keys from all four locations are available for reading, only the first file (the user-specific location for the application at hand) is accessible for writing. To write to any of the other files, omit the application name and/or specify &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings::SystemScope&lt;/a&gt; (as opposed to &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings::UserScope&lt;/a&gt;, the default).</source>
          <target state="translated">4 개 위치 모두에서 키를 읽을 수 있지만 첫 번째 파일 (응용 프로그램의 사용자 별 위치) 만 액세스 할 수 있습니다. 다른 파일에 쓰려면 응용 프로그램 이름을 생략하거나 &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings :: SystemScope를&lt;/a&gt; 지정 하십시오 (기본값 &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;: QSettings :: UserScope&lt;/a&gt; 와 반대 ).</target>
        </trans-unit>
        <trans-unit id="d4b2c4f121fe365e03d030f8812f028c7a3a9854" translate="yes" xml:space="preserve">
          <source>Although models and views should respond to these hints in appropriate ways, custom components may ignore any or all of them if they are not relevant.</source>
          <target state="translated">모델과 뷰가 이러한 힌트에 적절한 방식으로 응답해야하지만 사용자 지정 구성 요소는 관련이없는 경우 일부 또는 전부를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5f2f4be5b5d0e6bd5994f6c6495d424ecd87a85" translate="yes" xml:space="preserve">
          <source>Although most of its functions work asynchronously, it's possible to use &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; synchronously (i.e., blocking). To get blocking behavior, call &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;'s waitFor...() functions; these suspend the calling thread until a signal has been emitted. For example, after calling the non-blocking &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;QTcpSocket::connectToHost&lt;/a&gt;() function, call &lt;a href=&quot;qabstractsocket#waitForConnected&quot;&gt;QTcpSocket::waitForConnected&lt;/a&gt;() to block the thread until the &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected()&lt;/a&gt; signal has been emitted.</source>
          <target state="translated">대부분의 기능은 비동기 적으로 작동하지만 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket을&lt;/a&gt; 동 기적 으로 사용할 수 있습니다 (예 : 차단). 차단 동작을 얻으려면 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; 의 waitFor ... () 함수를 호출하십시오. 신호가 방출 될 때까지 호출 스레드를 일시 중단합니다. 예를 들어, 비 차단 &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;QTcpSocket :: connectToHost&lt;/a&gt; () 함수를 호출 한 후 &lt;a href=&quot;qabstractsocket#waitForConnected&quot;&gt;QTcpSocket :: waitForConnected&lt;/a&gt; ()를 호출 하여 &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected ()&lt;/a&gt; 신호가 생성 될 때까지 스레드를 차단합니다 .</target>
        </trans-unit>
        <trans-unit id="706a2a1f75903ef0054654a053e46b947b8e385a" translate="yes" xml:space="preserve">
          <source>Although only four indexes are supplied to the selection model, the use of the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Columns&lt;/a&gt; and &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Rows&lt;/a&gt; selection flags means that two columns and two rows are selected. The following image shows the result of these two selections:</source>
          <target state="translated">선택 모델에 4 개의 인덱스 만 제공되지만 &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;열&lt;/a&gt; 및 &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;행&lt;/a&gt; 선택 플래그를 사용하면 두 개의 열과 두 개의 행이 선택됩니다. 다음 이미지는이 두 가지 선택의 결과를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2e1f75daf255387aaee14e67dbe3f48d78ec6d5d" translate="yes" xml:space="preserve">
          <source>Although qdoc will use the encoding to read source and documentation files, limitations of C++ compilers may prevent you from using non-ASCII characters in source code comments. In cases like these, it is possible to write API documentation completely in documentation files.</source>
          <target state="translated">qdoc은 소스 및 문서 파일을 읽는 데 인코딩을 사용하지만 C ++ 컴파일러의 제한으로 인해 소스 코드 주석에 ASCII가 아닌 문자를 사용하지 못할 수 있습니다. 이러한 경우 문서 파일에 API 문서를 완전히 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6ed7292879d6d01e683045c761ced86a1dcd6bf" translate="yes" xml:space="preserve">
          <source>Although shading is not supported by all styles, this function will still show the subwindow as shaded, regardless of whether support for shading is available. However, when used with styles without shading support, the user will be unable to return from shaded mode through the user interface (e.g., through a shade button in the title bar).</source>
          <target state="translated">쉐이딩이 모든 스타일에서 지원되는 것은 아니지만,이 기능은 쉐이딩 지원 가능 여부에 관계없이 서브 윈도우를 음영으로 표시합니다. 그러나 음영을 지원하지 않는 스타일과 함께 사용하는 경우 사용자 인터페이스를 통해 (예 : 제목 표시 줄의 음영 버튼을 통해) 음영 모드에서 돌아올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3bba6d30b47b6fd9058a42b506d8f9b5bcd80391" translate="yes" xml:space="preserve">
          <source>Although some developers might resort to fully specifying all the modifiers they use on their keyboards to activate a shortcut, this will also result in unexpected behavior for users of different keyboard layouts.</source>
          <target state="translated">일부 개발자는 단축키를 활성화하기 위해 키보드에서 사용하는 모든 수정자를 완전히 지정해야하지만 키보드 레이아웃이 다른 사용자에게는 예기치 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6bce7f8daf650a956b898aab29b5f8859980f92e" translate="yes" xml:space="preserve">
          <source>Although some platforms may differ the socket must generally be connected to guarantee the return of a valid address. In particular, this is true when dealing with platforms that support multiple local Bluetooth adapters.</source>
          <target state="translated">일부 플랫폼은 다를 수 있지만 유효한 주소의 반환을 보장하려면 일반적으로 소켓을 연결해야합니다. 특히, 여러 로컬 Bluetooth 어댑터를 지원하는 플랫폼을 다룰 때 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="195caf5c017f91a63f595836e2b33ef58d257dd7" translate="yes" xml:space="preserve">
          <source>Although some platforms may differ the socket must generally be connected to guarantee the return of a valid name. In particular, this is true when dealing with platforms that support multiple local Bluetooth adapters.</source>
          <target state="translated">일부 플랫폼은 다를 수 있지만 유효한 이름의 반환을 보장하려면 일반적으로 소켓을 연결해야합니다. 특히, 여러 로컬 Bluetooth 어댑터를 지원하는 플랫폼을 다룰 때 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="df3a70a35d79fcb3c52a703377a931796c5a4e83" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;qbytearray#size&quot;&gt;size&lt;/a&gt;() is 5, the byte array also maintains an extra '\0' byte at the end so that if a function is used that asks for a pointer to the underlying data (e.g. a call to &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;()), the data pointed to is guaranteed to be '\0'-terminated.</source>
          <target state="translated">있지만 &lt;a href=&quot;qbytearray#size&quot;&gt;크기&lt;/a&gt; () 5, 바이트 어레이가 별도의 '\ 0'마지막 바이트가 유지되도록하는 기능 (에 예 전화 기본 데이터에 대한 포인터를 요청하는 데 사용되는 경우, &lt;a href=&quot;qbytearray#data&quot;&gt;데이터&lt;/a&gt; ())의 가리키는 데이터는 '\ 0'으로 끝나는 것이 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="4212fef983062793bca123609b83e3636ee41724" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;qbytearray#size&quot;&gt;size&lt;/a&gt;() is 5, the byte array also maintains an extra '\0' character at the end so that if a function is used that asks for a pointer to the underlying data (e.g. a call to &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;()), the data pointed to is guaranteed to be '\0'-terminated.</source>
          <target state="translated">있지만 &lt;a href=&quot;qbytearray#size&quot;&gt;크기&lt;/a&gt; () 5, 바이트 어레이가 별도의 '\ 0'끝 문자 유지되도록하는 기능 (에 예 전화 기본 데이터에 대한 포인터를 요청하는 데 사용되는 경우, &lt;a href=&quot;qbytearray#data&quot;&gt;데이터&lt;/a&gt; ())의 지정된 데이터는 '\ 0'으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="ff74351f5ee429b3e7ddea87400434bac549c23e" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; language was designed for querying XML, with Qt XML Patterns one can use &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; for querying any data that can be modeled to look like XML. Non-XML data is modeled to look like XML by loading it into a custom subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;, where it is then presented to the Qt XML Patterns &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; engine via the same API the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; engine uses for querying XML.</source>
          <target state="translated">Although the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; language was designed for querying XML, with Qt XML Patterns one can use &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; for querying any data that can be modeled to look like XML. Non-XML data is modeled to look like XML by loading it into a custom subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;, where it is then presented to the Qt XML Patterns &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; engine via the same API the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; engine uses for querying XML.</target>
        </trans-unit>
        <trans-unit id="4ccbcb3af0dc8002f774f46d0ec67c27db4a460f" translate="yes" xml:space="preserve">
          <source>Although the C++ classes provide complete feature sets to operate on SQL data, they do not provide data access to QML. So you must implement a C++ custom data model as a subclass of one of these classes, and expose it to QML either as a type or context property.</source>
          <target state="translated">C ++ 클래스는 SQL 데이터에서 작동하기위한 완전한 기능 세트를 제공하지만 QML에 대한 데이터 액세스는 제공하지 않습니다. 따라서 이러한 클래스 중 하나의 서브 클래스로 C ++ 사용자 정의 데이터 모델을 구현하고이를 유형 또는 컨텍스트 특성으로 QML에 노출해야합니다.</target>
        </trans-unit>
        <trans-unit id="b03b5594afa35b4a2bbaa8a1c663c19153850f11" translate="yes" xml:space="preserve">
          <source>Although the Canvas item provides an HTML5-like API, HTML5 canvas applications need to be modified to run in the Canvas item:</source>
          <target state="translated">Canvas 항목은 HTML5와 유사한 API를 제공하지만 Canvas 항목에서 실행되도록 HTML5 캔버스 응용 프로그램을 수정해야합니다.</target>
        </trans-unit>
        <trans-unit id="8c087170cf7fb650bc48c949da42f871fe9f641c" translate="yes" xml:space="preserve">
          <source>Although the XQuery language was designed for querying XML, with Qt XML Patterns one can use XQuery for querying any data that can be modeled to look like XML. Non-XML data is modeled to look like XML by loading it into a custom subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;, where it is then presented to the Qt XML Patterns XQuery engine via the same API the XQuery engine uses for querying XML.</source>
          <target state="translated">XQuery 언어는 XML 쿼리 용으로 설계되었지만 Qt XML 패턴에서는 XQuery를 사용하여 XML처럼 보이도록 모델링 할 수있는 모든 데이터를 쿼리 할 수 ​​있습니다. 비 XML 데이터는 &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; 의 사용자 정의 서브 클래스에로드하여 XML처럼 보이도록 모델링 한 다음 XQuery 엔진이 XML 쿼리에 사용하는 것과 동일한 API를 통해 Qt XML Patterns XQuery 엔진에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="693fd6d0532b4180ad525d96c75df7e48fa7bb16" translate="yes" xml:space="preserve">
          <source>Although the current picture formats supported by Qt ignore the parameters string, it may be used in future extensions or by contributions (for example, JPEG).</source>
          <target state="translated">Qt에서 지원하는 현재 그림 형식은 매개 변수 문자열을 무시하지만 향후 확장 또는 컨트 리뷰 션 (예 : JPEG)에서 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d19750ef65dbc5f67fb8328a876af3ae9bb703c" translate="yes" xml:space="preserve">
          <source>Although the declaration in the previous section makes the type available for use in direct signal-slot connections, it cannot be used for queued signal-slot connections, such as those that are made between objects in different threads. This is because the meta-object system does not know how to handle creation and destruction of objects of the custom type at run-time.</source>
          <target state="translated">이전 섹션의 선언으로 유형을 직접 신호 슬롯 연결에 사용할 수있게 만들었지 만 다른 스레드의 객체간에 만들어진 대기열 같은 신호 슬롯 연결에는 사용할 수 없습니다. 메타 오브젝트 시스템은 런타임시 사용자 정의 유형의 오브젝트 작성 및 소멸을 처리하는 방법을 모르기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="fae03c096f3ddb6073886279214b23c22fa37bd2" translate="yes" xml:space="preserve">
          <source>Although the declaration order of the FrameGraph is important, Qt 3D is able to process each RenderView in parallel as each RenderView is independent of the others for the purposes of generating a set of RenderCommands to be submitted whilst the RenderView's state is in effect.</source>
          <target state="translated">FrameGraph의 선언 순서가 중요하지만 Qt 3D는 RenderView의 상태가 유효한 동안 제출할 RenderCommand 세트를 생성하기 위해 각 RenderView가 다른 RenderView와 독립적이기 때문에 각 RenderView를 병렬로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="c4985ea823cd2ec3920efdbbaa0f21156f529264" translate="yes" xml:space="preserve">
          <source>Although the example uses &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to produce the sequence of callbacks to functions in &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt;, you can call the callback functions directly as long as your sequence of calls represents a valid &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;XQuery sequence&lt;/a&gt;.</source>
          <target state="translated">이 예제에서는 &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; 를 사용하여 &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver의&lt;/a&gt; 함수에 대한 콜백 시퀀스를 생성 하지만 호출 시퀀스가 ​​유효한 &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;XQuery 시퀀스를&lt;/a&gt; 나타내는 한 콜백 함수를 직접 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1335f252f97851ead427459eacdd412b0d6facf2" translate="yes" xml:space="preserve">
          <source>Although the example uses &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to produce the sequence of callbacks to functions in QAbstractXmlReceiver, you can call the callback functions directly as long as your sequence of calls represents a valid &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;XQuery sequence&lt;/a&gt;.</source>
          <target state="translated">Although the example uses &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to produce the sequence of callbacks to functions in QAbstractXmlReceiver, you can call the callback functions directly as long as your sequence of calls represents a valid &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;XQuery sequence&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3519414ebf22e871393c22897164fa940200ea22" translate="yes" xml:space="preserve">
          <source>Although the item's shape can be arbitrary, the bounding rect is always rectangular, and it is unaffected by the items' transformation.</source>
          <target state="translated">항목의 모양은 임의적 일 수 있지만 경계 사각형은 항상 직사각형이며 항목 변환의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b625ed09ac9b86c1781030549ee77fb8e5f55929" translate="yes" xml:space="preserve">
          <source>Although the previous example would work, it is not optimal. Real world incubation controllers should try and maximize the amount of idle time they consume - rather than a static amount like 5 milliseconds - while not disturbing the application.</source>
          <target state="translated">이전 예제는 작동하지만 최적이 아닙니다. 실제 인큐베이션 컨트롤러는 응용 프로그램을 방해하지 않으면 서 5 밀리 초와 같은 정적 양이 아니라 소비하는 유휴 시간을 최대화하려고 노력해야합니다.</target>
        </trans-unit>
        <trans-unit id="9fa00925f42ed659a7ea346292c00bcdc24e2042" translate="yes" xml:space="preserve">
          <source>Although the second name has the prefix</source>
          <target state="translated">두 번째 이름에는 접두사가 있습니다</target>
        </trans-unit>
        <trans-unit id="2ca3311aa78f9bb13ba363d3ebc17b088a93eac7" translate="yes" xml:space="preserve">
          <source>Although the user may take some time to complete the dragging operation, as far as the application is concerned the exec() function is a blocking function that returns with &lt;a href=&quot;qt#DropAction-enum&quot;&gt;one of several values&lt;/a&gt;. These indicate how the operation ended, and are described in more detail below.</source>
          <target state="translated">응용 프로그램에 관한 한 exec () 함수는 &lt;a href=&quot;qt#DropAction-enum&quot;&gt;여러 값 중 하나&lt;/a&gt; 를 반환하는 차단 함수입니다 . 이것들은 작업이 어떻게 끝났는지를 나타내며 아래에 더 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="207dcae7a61a09d0654dbb1b1109559c39aa3ce3" translate="yes" xml:space="preserve">
          <source>Although these functions are very convenient, it can be more efficient to build a &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt; and call &lt;a href=&quot;https://doc.qt.io/qt-5.13/qpainter-obsolete.html#setMatrix&quot;&gt;QPainter::setMatrix&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</source>
          <target state="translated">이러한 함수는 매우 편리하지만 하나 이상의 변환 작업을 수행하려는 경우 &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt; 를 빌드하고 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qpainter-obsolete.html#setMatrix&quot;&gt;QPainter :: setMatrix&lt;/a&gt; ()를 호출 하는 것이 더 효율적일 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a56eadb45bc0d262599b7f6649ced30c4d8f505c" translate="yes" xml:space="preserve">
          <source>Although these functions are very convenient, it can be more efficient to build a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; and call &lt;a href=&quot;qpainter#setTransform&quot;&gt;QPainter::setTransform&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</source>
          <target state="translated">이러한 함수는 매우 편리하지만 하나 이상의 변환 작업을 수행하려는 경우 &lt;a href=&quot;qtransform&quot;&gt;QTransform을 작성&lt;/a&gt; 하고 &lt;a href=&quot;qpainter#setTransform&quot;&gt;QPainter :: setTransform&lt;/a&gt; ()을 호출 하는 것이 더 효율적일 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bfc1096eab176bd1a7d66898de271bb0de3a2374" translate="yes" xml:space="preserve">
          <source>Although these functions are very convenient, it can be more efficient to build a QMatrix and call &lt;a href=&quot;https://doc.qt.io/qt-5.15/qpainter-obsolete.html#setMatrix&quot;&gt;QPainter::setMatrix&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</source>
          <target state="translated">Although these functions are very convenient, it can be more efficient to build a QMatrix and call &lt;a href=&quot;https://doc.qt.io/qt-5.15/qpainter-obsolete.html#setMatrix&quot;&gt;QPainter::setMatrix&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</target>
        </trans-unit>
        <trans-unit id="aa136c064bd1d67471e00c01370274eb3d7b21f8" translate="yes" xml:space="preserve">
          <source>Although these functions are very convenient, it can be more efficient to build a QTransform and call &lt;a href=&quot;qpainter#setTransform&quot;&gt;QPainter::setTransform&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</source>
          <target state="translated">Although these functions are very convenient, it can be more efficient to build a QTransform and call &lt;a href=&quot;qpainter#setTransform&quot;&gt;QPainter::setTransform&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</target>
        </trans-unit>
        <trans-unit id="c3c21f08ef5ff7d7c971a71591e2de37fd72ecb2" translate="yes" xml:space="preserve">
          <source>Although they sound similar, they have different purposes. Consider the example below:</source>
          <target state="translated">비슷하게 들리지만 목적이 다릅니다. 아래 예를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="9f40ae6b5396c2df7ba05bc8cd19bd267166ff33" translate="yes" xml:space="preserve">
          <source>Although we do not need to handle the conversion between logical and physical coordinates ourselves, we still need to apply transformations to painting operations because the pixel measurements used to draw on screen are often too small for the higher resolutions of typical printers.</source>
          <target state="translated">논리적 좌표와 물리적 좌표 간의 변환을 직접 처리 할 필요는 없지만 화면에 그리는 데 사용되는 픽셀 측정 값이 너무 작아 일반 프린터의 높은 해상도를 나타 내기 때문에 페인팅 작업에 변환을 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0194c305e527a397a43dfc5063dcc552cbcf7de3" translate="yes" xml:space="preserve">
          <source>Altimeter (QML type)</source>
          <target state="translated">고도계 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="ac4df62f1941b395724183b678112311fddd9558" translate="yes" xml:space="preserve">
          <source>Altimeter QML Type</source>
          <target state="translated">고도계 QML 유형</target>
        </trans-unit>
        <trans-unit id="5cb1a1ce4fee83103ccdf8a101a08507f2419324" translate="yes" xml:space="preserve">
          <source>AltimeterReading (QML type)</source>
          <target state="translated">고도계 판독 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="84735604d9a0667042153fa744c4796438803c6a" translate="yes" xml:space="preserve">
          <source>AltimeterReading QML Type</source>
          <target state="translated">고도계 판독 QML 유형</target>
        </trans-unit>
        <trans-unit id="f00c1cbc854d22aafd25ca2d90a4f6877d3ffd51" translate="yes" xml:space="preserve">
          <source>AltimeterReading.altitude</source>
          <target state="translated">AltimeterReading.altitude</target>
        </trans-unit>
        <trans-unit id="efcebe1440bfab2ea3ef532618f60c1b2456788f" translate="yes" xml:space="preserve">
          <source>Altix - Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications Version 8.1 Build 20050406 Package ID: l_cc_pc_8.1.030</source>
          <target state="translated">Altix - Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications Version 8.1 Build 20050406 Package ID: l_cc_pc_8.1.030</target>
        </trans-unit>
        <trans-unit id="6033d93e15c8fb0cf61ef715b1cb400cf5a0eabf" translate="yes" xml:space="preserve">
          <source>Aluminum material. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Aluminum material. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70c705a9cb04b6bedd42a7333e05bc2c03ea2e68" translate="yes" xml:space="preserve">
          <source>Aluminum with emissive properties. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Aluminum with emissive properties. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33c6020a2d40f4068b07172fe04624124e05cf2c" translate="yes" xml:space="preserve">
          <source>AluminumAnodizedEmissiveMaterial</source>
          <target state="translated">AluminumAnodizedEmissiveMaterial</target>
        </trans-unit>
        <trans-unit id="fd23e1117b4e4e63608812c76b9f4233407e09e9" translate="yes" xml:space="preserve">
          <source>AluminumAnodizedEmissiveMaterial (QML type)</source>
          <target state="translated">AluminumAnodizedEmissiveMaterial (QML type)</target>
        </trans-unit>
        <trans-unit id="caa254a9722285e575d056443fb3cbdafbafe604" translate="yes" xml:space="preserve">
          <source>AluminumAnodizedEmissiveMaterial QML Type</source>
          <target state="translated">AluminumAnodizedEmissiveMaterial QML Type</target>
        </trans-unit>
        <trans-unit id="8e56758346876729dacbdce65631727731b33d49" translate="yes" xml:space="preserve">
          <source>AluminumAnodizedMaterial</source>
          <target state="translated">AluminumAnodizedMaterial</target>
        </trans-unit>
        <trans-unit id="d3e08b9a4b24b2f9f3a1bfaacb775d73567c55dc" translate="yes" xml:space="preserve">
          <source>AluminumAnodizedMaterial (QML type)</source>
          <target state="translated">AluminumAnodizedMaterial (QML type)</target>
        </trans-unit>
        <trans-unit id="5e041d7b63d52d748ee450fbbe346679243347f9" translate="yes" xml:space="preserve">
          <source>AluminumAnodizedMaterial QML Type</source>
          <target state="translated">AluminumAnodizedMaterial QML Type</target>
        </trans-unit>
        <trans-unit id="6f5bfa850b38324987c46422d476a06f5affbc2b" translate="yes" xml:space="preserve">
          <source>AluminumBrushedMaterial</source>
          <target state="translated">AluminumBrushedMaterial</target>
        </trans-unit>
        <trans-unit id="46d8f5decd86162d500933f4ee48b9bd9755f9a3" translate="yes" xml:space="preserve">
          <source>AluminumBrushedMaterial (QML type)</source>
          <target state="translated">AluminumBrushedMaterial (QML type)</target>
        </trans-unit>
        <trans-unit id="77a88eeb11ccffbbab3e1993df69ce8d8c5edfe6" translate="yes" xml:space="preserve">
          <source>AluminumBrushedMaterial QML Type</source>
          <target state="translated">AluminumBrushedMaterial QML Type</target>
        </trans-unit>
        <trans-unit id="e5a899087f82f12a0bc0dbd729d981fea5bafd3e" translate="yes" xml:space="preserve">
          <source>AluminumEmissiveMaterial</source>
          <target state="translated">AluminumEmissiveMaterial</target>
        </trans-unit>
        <trans-unit id="9d518124d3eb43fdc08dd2329a233e9f50336aa2" translate="yes" xml:space="preserve">
          <source>AluminumEmissiveMaterial (QML type)</source>
          <target state="translated">AluminumEmissiveMaterial (QML type)</target>
        </trans-unit>
        <trans-unit id="552c86ab69f7fad3b7e823d3081f0ca87d44b649" translate="yes" xml:space="preserve">
          <source>AluminumEmissiveMaterial QML Type</source>
          <target state="translated">AluminumEmissiveMaterial QML Type</target>
        </trans-unit>
        <trans-unit id="1dad79853def9d902d3da3b597c3edb31af998a1" translate="yes" xml:space="preserve">
          <source>AluminumMaterial</source>
          <target state="translated">AluminumMaterial</target>
        </trans-unit>
        <trans-unit id="91e0dc597870a4347280f8a892d23352b9588686" translate="yes" xml:space="preserve">
          <source>AluminumMaterial (QML type)</source>
          <target state="translated">AluminumMaterial (QML type)</target>
        </trans-unit>
        <trans-unit id="cfe2474f90192fb5eb62b4b1c5f53c14fdca148f" translate="yes" xml:space="preserve">
          <source>AluminumMaterial QML Type</source>
          <target state="translated">AluminumMaterial QML Type</target>
        </trans-unit>
        <trans-unit id="74b849101080f30b3ee13e1b3683df599cfa0d40" translate="yes" xml:space="preserve">
          <source>Always dither images when converting to smaller color-spaces.</source>
          <target state="translated">더 작은 색 공간으로 변환 할 때는 항상 이미지를 디더링하십시오.</target>
        </trans-unit>
        <trans-unit id="9674d90cbb9ee2ff09a5249ebeaecced4686ed18" translate="yes" xml:space="preserve">
          <source>Always pass alpha test</source>
          <target state="translated">항상 알파 테스트를 통과</target>
        </trans-unit>
        <trans-unit id="5dc300a8198f7df0524b44f951607ab605c148ea" translate="yes" xml:space="preserve">
          <source>Always pass depth test</source>
          <target state="translated">항상 깊이 테스트를 통과</target>
        </trans-unit>
        <trans-unit id="364fdce92ec66b6c1f5f4ab043db24c2a3add013" translate="yes" xml:space="preserve">
          <source>Always pass stencil test</source>
          <target state="translated">항상 스텐실 테스트를 통과</target>
        </trans-unit>
        <trans-unit id="409f3b2e00ceaf1c21fd32652c2cadea51382e02" translate="yes" xml:space="preserve">
          <source>Always put the decimal separator in numbers, even if there are no decimals.</source>
          <target state="translated">소수점이없는 경우에도 항상 소수점 구분 기호를 숫자로 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="9540efeefaa6f3f6fcce6713e7ea96a4a41cb7c4" translate="yes" xml:space="preserve">
          <source>Always put the sign in numbers, even for positive numbers.</source>
          <target state="translated">양수의 경우에도 항상 부호를 숫자로 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="d9e9001304c7d756196476301ff8254af7e9cf58" translate="yes" xml:space="preserve">
          <source>Always refer to the same key using the same case. For example, if you refer to a key as &quot;text fonts&quot; in one place in your code, don't refer to it as &quot;Text Fonts&quot; somewhere else.</source>
          <target state="translated">항상 동일한 대소 문자를 사용하여 동일한 키를 참조하십시오. 예를 들어, 코드의 한 위치에서 키를 &quot;텍스트 글꼴&quot;이라고하는 경우 다른 곳에서는 &quot;텍스트 글꼴&quot;이라고하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="323ee3fc84a70b6930ebe3daba0118f81472678a" translate="yes" xml:space="preserve">
          <source>Always respect QCOMPARE() parameter semantics. The first parameter passed to it should always be the actual value produced by the code-under-test, while the second parameter should always be the expected value. When the values don't match, QCOMPARE() prints them with the labels</source>
          <target state="translated">Always respect QCOMPARE() parameter semantics. The first parameter passed to it should always be the actual value produced by the code-under-test, while the second parameter should always be the expected value. When the values don't match, QCOMPARE() prints them with the labels</target>
        </trans-unit>
        <trans-unit id="9ee288e27729090b3ee3717de3c86e51bab7f065" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt;. The serial port is a sequential device.</source>
          <target state="translated">항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 직렬 포트는 순차적 장치입니다.</target>
        </trans-unit>
        <trans-unit id="415cc1135e13fa3848983c866cd4833bbdcf70d6" translate="yes" xml:space="preserve">
          <source>Always returns a default constructed &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; instance, regardless of</source>
          <target state="translated">상관없이 항상 기본 생성 된 &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="554ea886f9d069fc8ebea433a91a9012a0e8645b" translate="yes" xml:space="preserve">
          <source>Always returns an empty &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;. This signals that no namespace bindings are in scope for</source>
          <target state="translated">항상 빈 &lt;a href=&quot;qvector&quot;&gt;QVector를&lt;/a&gt; 반환합니다 . 이것은 네임 스페이스 바인딩이 범위 내에 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3b72117e88c42cf575f76fa5305b270e317622b5" translate="yes" xml:space="preserve">
          <source>Always returns an empty vector, regardless of</source>
          <target state="translated">상관없이 항상 빈 벡터를 반환</target>
        </trans-unit>
        <trans-unit id="7b6ac25f288bfd84a19f95b3306de0d893a706f1" translate="yes" xml:space="preserve">
          <source>Always round down.</source>
          <target state="translated">Always round down.</target>
        </trans-unit>
        <trans-unit id="45614cd6f665e0e37f92be020d0af4da57bef605" translate="yes" xml:space="preserve">
          <source>Always round up.</source>
          <target state="translated">Always round up.</target>
        </trans-unit>
        <trans-unit id="113fc209e202a975cf4ded0a77e12fa9c7bd4ff4" translate="yes" xml:space="preserve">
          <source>Always succeeds, and displays &lt;code&gt;string&lt;/code&gt; as a general message to the user. Unlike the &lt;code&gt;error()&lt;/code&gt; function, this function allows processing to continue.</source>
          <target state="translated">항상 성공 하고 사용자에게 일반 메시지로 &lt;code&gt;string&lt;/code&gt; 을 표시 합니다 . &lt;code&gt;error()&lt;/code&gt; 함수 와 달리이 함수를 사용하면 처리를 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d79321d54bb3e427c888719ec9901b7d0a6eee3" translate="yes" xml:space="preserve">
          <source>Always succeeds, and displays &lt;code&gt;string&lt;/code&gt; as a warning message to the user.</source>
          <target state="translated">항상 성공 하고 사용자에게 &lt;code&gt;string&lt;/code&gt; 을 경고 메시지로 표시 합니다 .</target>
        </trans-unit>
        <trans-unit id="e529573eacbaa748de2a343a86659e061154401b" translate="yes" xml:space="preserve">
          <source>Always use halftones for rendering if the output image is stretched.</source>
          <target state="translated">출력 이미지가 늘어난 경우 렌더링에 항상 중간색을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cb5a5a434c6df53c15e0e51708fd8e4f3aedb0ce" translate="yes" xml:space="preserve">
          <source>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup cause a big performance impact over network or removable drives.</source>
          <target state="translated">항상 기본 디렉토리 아이콘을 사용하십시오. 일부 플랫폼에서는 사용자가 다른 아이콘을 설정할 수 있습니다. 사용자 정의 아이콘 조회는 네트워크 또는 이동식 드라이브에 큰 성능 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="76acf4a3b365e8531acc0c6141c764abf0aede71" translate="yes" xml:space="preserve">
          <source>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup cause a big performance impact over network or removable drives. Setting this will enable the &lt;a href=&quot;qabstractfileiconprovider#Option-enum&quot;&gt;QFileIconProvider::DontUseCustomDirectoryIcons&lt;/a&gt; option in the icon provider. This enum value was added in Qt 5.2.</source>
          <target state="translated">항상 기본 디렉토리 아이콘을 사용하십시오. 일부 플랫폼에서는 사용자가 다른 아이콘을 설정할 수 있습니다. 사용자 지정 아이콘 조회는 네트워크 또는 이동식 드라이브에 큰 성능 영향을줍니다. 이를 설정 하면 아이콘 공급자에서 &lt;a href=&quot;qabstractfileiconprovider#Option-enum&quot;&gt;QFileIconProvider :: DontUseCustomDirectoryIcons&lt;/a&gt; 옵션 이 활성화됩니다 . 이 열거 형 값은 Qt 5.2에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4b7b5e0ca9483ed190398f4660aeab4eaee209fb" translate="yes" xml:space="preserve">
          <source>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup cause a big performance impact over network or removable drives. Setting this will enable the &lt;a href=&quot;qfileiconprovider#Option-enum&quot;&gt;QFileIconProvider::DontUseCustomDirectoryIcons&lt;/a&gt; option in the icon provider. This enum value was added in Qt 5.2.</source>
          <target state="translated">항상 기본 디렉토리 아이콘을 사용하십시오. 일부 플랫폼에서는 사용자가 다른 아이콘을 설정할 수 있습니다. 사용자 정의 아이콘 조회는 네트워크 또는 이동식 드라이브에 큰 성능 영향을 미칩니다. 이를 설정 하면 아이콘 제공자에서 &lt;a href=&quot;qfileiconprovider#Option-enum&quot;&gt;QFileIconProvider :: DontUseCustomDirectoryIcons&lt;/a&gt; 옵션을 사용할 수 있습니다. 이 열거 형 값은 Qt 5.2에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="1b09c86367d1edc9aab24cde3f8fabf3d27658ea" translate="yes" xml:space="preserve">
          <source>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup causes a big performance impact over network or removable drives. This sets the &lt;a href=&quot;qabstractfileiconprovider#Option-enum&quot;&gt;QFileIconProvider::DontUseCustomDirectoryIcons&lt;/a&gt; option in the icon provider accordingly.</source>
          <target state="translated">항상 기본 디렉토리 아이콘을 사용하십시오. 일부 플랫폼에서는 사용자가 다른 아이콘을 설정할 수 있습니다. 사용자 지정 아이콘 조회는 네트워크 또는 이동식 드라이브에 큰 성능 영향을줍니다. 그러면 아이콘 공급자 의 &lt;a href=&quot;qabstractfileiconprovider#Option-enum&quot;&gt;QFileIconProvider :: DontUseCustomDirectoryIcons&lt;/a&gt; 옵션 이 적절하게 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="d52398e4a5ac40780db82487e042fb14b8773eb6" translate="yes" xml:space="preserve">
          <source>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup causes a big performance impact over network or removable drives. This sets the &lt;a href=&quot;qfileiconprovider#Option-enum&quot;&gt;QFileIconProvider::DontUseCustomDirectoryIcons&lt;/a&gt; option in the icon provider accordingly.</source>
          <target state="translated">항상 기본 디렉토리 아이콘을 사용하십시오. 일부 플랫폼에서는 사용자가 다른 아이콘을 설정할 수 있습니다. 사용자 지정 아이콘 조회는 네트워크 또는 이동식 드라이브에 큰 성능 영향을줍니다. 그러면 아이콘 공급자 의 &lt;a href=&quot;qfileiconprovider#Option-enum&quot;&gt;QFileIconProvider :: DontUseCustomDirectoryIcons&lt;/a&gt; 옵션 이 적절하게 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="0a9f0a3ab5c049c9fb8ee0b82d960d956f75292f" translate="yes" xml:space="preserve">
          <source>Always use the qreal versions of the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; drawing API.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 드로잉 API 의 qreal 버전을 항상 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d62c194a0af6ec0621ecea19aea45c82ed6c24c9" translate="yes" xml:space="preserve">
          <source>Ambient Light Sensor</source>
          <target state="translated">주변 광 센서</target>
        </trans-unit>
        <trans-unit id="85f6a58d1ac19dcd7bb7c0bd39e3f83bac0c79f9" translate="yes" xml:space="preserve">
          <source>Ambient is the color that is emitted by an object without any other light source.</source>
          <target state="translated">앰비언트는 다른 광원없이 물체가 방출하는 색상입니다.</target>
        </trans-unit>
        <trans-unit id="71d070c83fd83994a0865c8dd80439e3973053d2" translate="yes" xml:space="preserve">
          <source>AmbientLightReading (QML type)</source>
          <target state="translated">AmbientLightReading (QML 유형)</target>
        </trans-unit>
        <trans-unit id="c6f549443c0b6b4e5ff90105fb6e80c4cd68c446" translate="yes" xml:space="preserve">
          <source>AmbientLightReading QML Type</source>
          <target state="translated">AmbientLightReading QML 유형</target>
        </trans-unit>
        <trans-unit id="2701c37917298ce69b08ae6804b91f05eefce9e9" translate="yes" xml:space="preserve">
          <source>AmbientLightReading.lightLevel</source>
          <target state="translated">AmbientLightReading.lightLevel</target>
        </trans-unit>
        <trans-unit id="bc4ab1f8338c872d2b21ebc43845c1e4b57a7bcb" translate="yes" xml:space="preserve">
          <source>AmbientLightSensor (QML type)</source>
          <target state="translated">AmbientLightSensor (QML 유형)</target>
        </trans-unit>
        <trans-unit id="03d5232aa7a9c1d0a79a344a28076704bb92aa4a" translate="yes" xml:space="preserve">
          <source>AmbientLightSensor QML Type</source>
          <target state="translated">AmbientLightSensor QML 유형</target>
        </trans-unit>
        <trans-unit id="69070ef05a38d6fbd8eca133faabd1c08d275756" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureReading (QML type)</source>
          <target state="translated">주변 온도 판독 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="885f52d21d6806f46578f896aba78e346864ea51" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureReading QML Type</source>
          <target state="translated">AmbientTemperatureReading QML 유형</target>
        </trans-unit>
        <trans-unit id="47cc58f1fadb287fd2ee1896f246f12e634cbaf8" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureReading.temperature</source>
          <target state="translated">AmbientTemperatureReading.temperature</target>
        </trans-unit>
        <trans-unit id="99cb9f0d205fb7602f1746cd2b297954a41f1526" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureSensor (QML type)</source>
          <target state="translated">AmbientTemperatureSensor (QML 유형)</target>
        </trans-unit>
        <trans-unit id="2d57823412ff87067626ee8b533b883e22d3137e" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureSensor QML Type</source>
          <target state="translated">AmbientTemperatureSensor QML 유형</target>
        </trans-unit>
        <trans-unit id="6fc78caded0a796011c0c20778f67225df8b3d05" translate="yes" xml:space="preserve">
          <source>Ambigous name overloads</source>
          <target state="translated">모호한 이름 과부하</target>
        </trans-unit>
        <trans-unit id="21fd91d45b905cc176d7819381a1f9b6fdcb2a94" translate="yes" xml:space="preserve">
          <source>Among other things, this means its collation order is based on the ASCII values of letters, so that (for case-sensitive sorting) all upper-case letters sort before any lower-case one (rather than each letter's upper- and lower-case forms sorting adjacent to one another, before the next letter's two forms).</source>
          <target state="translated">무엇보다도 이것은 데이터 정렬 순서가 문자의 ASCII 값을 기반으로 함을 의미하므로 (대소 문자 구분 정렬의 경우) 모든 대문자는 소문자보다 먼저 정렬됩니다 (각 문자의 대문자 및 소문자 대신) 다음 문자의 두 가지 형식 이전에 서로 인접한 양식 정렬).</target>
        </trans-unit>
        <trans-unit id="1c352b29c227ac52e343090da70453576b12eea4" translate="yes" xml:space="preserve">
          <source>Among the significant properties of group boxes are &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;flat&lt;/code&gt;, &lt;code&gt;checkable&lt;/code&gt;, and &lt;code&gt;checked&lt;/code&gt;. These are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-groupbox-example.html&quot;&gt;Group Box&lt;/a&gt; example, and described in the &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; class documentation. Each group box can contain its own layout, and this is necessary if it contains other widgets. To add a layout to the group box, click inside it and apply the layout as usual.</source>
          <target state="translated">그룹 상자의 중요한 속성 중에는 &lt;code&gt;title&lt;/code&gt; , &lt;code&gt;flat&lt;/code&gt; , &lt;code&gt;checkable&lt;/code&gt; 및 &lt;code&gt;checked&lt;/code&gt; 가 있습니다. 이것들은 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-groupbox-example.html&quot;&gt;그룹 박스&lt;/a&gt; 예제에서 설명되고 &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; 클래스 문서에 설명되어 있습니다. 각 그룹 상자에는 자체 레이아웃이 포함될 수 있으며 다른 위젯이 포함 된 경우 필요합니다. 그룹 상자에 레이아웃을 추가하려면 내부를 클릭하고 평소대로 레이아웃을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="be56a6e920b987adfd665cac95c667f7a3e9f9a4" translate="yes" xml:space="preserve">
          <source>Among the significant properties of group boxes are &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;flat&lt;/code&gt;, &lt;code&gt;checkable&lt;/code&gt;, and &lt;code&gt;checked&lt;/code&gt;. These are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-groupbox-example.html&quot;&gt;Group Box&lt;/a&gt; example, and described in the &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; class documentation. Each group box can contain its own layout, and this is necessary if it contains other widgets. To add a layout to the group box, click inside it and apply the layout as usual.</source>
          <target state="translated">그룹 상자의 중요한 속성 중에는 &lt;code&gt;title&lt;/code&gt; , &lt;code&gt;flat&lt;/code&gt; , &lt;code&gt;checkable&lt;/code&gt; 및 &lt;code&gt;checked&lt;/code&gt; 가 있습니다. 이것들은 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-groupbox-example.html&quot;&gt;Group Box&lt;/a&gt; 예제에서 설명되고 &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; 클래스 문서 에서 설명됩니다 . 각 그룹 상자는 자체 레이아웃을 포함 할 수 있으며 다른 위젯이 포함 된 경우 필요합니다. 그룹 상자에 레이아웃을 추가하려면 내부를 클릭하고 평소와 같이 레이아웃을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="ddce54c764f19f8e56f3f5f615e8476df3cfde75" translate="yes" xml:space="preserve">
          <source>Among the significant properties of group boxes are &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;flat&lt;/code&gt;, &lt;code&gt;checkable&lt;/code&gt;, and &lt;code&gt;checked&lt;/code&gt;. These are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-widgets-groupbox-example.html&quot;&gt;Group Box&lt;/a&gt; example, and described in the &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; class documentation. Each group box can contain its own layout, and this is necessary if it contains other widgets. To add a layout to the group box, click inside it and apply the layout as usual.</source>
          <target state="translated">그룹 상자의 중요한 속성 중에는 &lt;code&gt;title&lt;/code&gt; , &lt;code&gt;flat&lt;/code&gt; , &lt;code&gt;checkable&lt;/code&gt; 및 &lt;code&gt;checked&lt;/code&gt; 가 있습니다. 이는 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-widgets-groupbox-example.html&quot;&gt;Group Box&lt;/a&gt; 예제에서 설명되고 &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; 클래스 문서에 설명되어 있습니다. 각 그룹 상자는 자체 레이아웃을 포함 할 수 있으며 다른 위젯이 포함 된 경우 필요합니다. 그룹 상자에 레이아웃을 추가하려면 내부를 클릭하고 평소와 같이 레이아웃을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="f0289e8557c3be205466aeb0ea8573f6e6b8ce83" translate="yes" xml:space="preserve">
          <source>Amort. O(1)</source>
          <target state="translated">할부. O (1)</target>
        </trans-unit>
        <trans-unit id="d357c41ba010d2d680161fa56674d5276941fd07" translate="yes" xml:space="preserve">
          <source>Amount of aberration. A negative value inverses the effect. &lt;code&gt;50&lt;/code&gt; by default.</source>
          <target state="translated">수차의 양. 음수 값은 효과를 반전시킵니다. 기본적으로 &lt;code&gt;50&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6c65cea090e37b9e016bed1e0fc1b39e3726ac1c" translate="yes" xml:space="preserve">
          <source>Amount of blurring behind the glass. Range is &lt;code&gt;[0, 50]&lt;/code&gt;. Default is &lt;code&gt;8.0&lt;/code&gt;.</source>
          <target state="translated">유리 뒤의 흐림 정도입니다. 범위는 &lt;code&gt;[0, 50]&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;8.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9868bcca89e7345ccd3ac57be5bf0e4adb828385" translate="yes" xml:space="preserve">
          <source>Amount of denoising applied.</source>
          <target state="translated">노이즈 제거 금액이 적용되었습니다.</target>
        </trans-unit>
        <trans-unit id="db9932c13e1199107109162f56044e04529d4551" translate="yes" xml:space="preserve">
          <source>Amount of sharpening applied.</source>
          <target state="translated">선명하게하는 양이 적용되었습니다.</target>
        </trans-unit>
        <trans-unit id="7cc09cad87a527cbdeefb78153bcd378c7c7c058" translate="yes" xml:space="preserve">
          <source>Amount of time in milliseconds the media will play.</source>
          <target state="translated">미디어가 재생되는 시간 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="62f3406b3f3d4442165a9cc339e7f22effbdb839" translate="yes" xml:space="preserve">
          <source>Amount of whitespace between dock widget's title bar button labels and the frame.</source>
          <target state="translated">도크 위젯의 제목 표시 줄 단추 레이블과 프레임 사이의 공백입니다.</target>
        </trans-unit>
        <trans-unit id="fb42f67a629e59dbd0e4e95f3bc4f238d8282f41" translate="yes" xml:space="preserve">
          <source>Amount of whitespace between push button labels and the frame.</source>
          <target state="translated">누름 버튼 레이블과 프레임 사이의 공백 양.</target>
        </trans-unit>
        <trans-unit id="91508f3d3c29ed246ec04fdb6d7afc311787ecff" translate="yes" xml:space="preserve">
          <source>Amount to rotate the brush noise texture. &lt;code&gt;45&lt;/code&gt; by default.</source>
          <target state="translated">브러시 노이즈 텍스처를 회전하는 양입니다. 기본적으로 &lt;code&gt;45&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="translated">An</target>
        </trans-unit>
        <trans-unit id="8d355d2d89ec6dd113134c3da3e5173346ad4651" translate="yes" xml:space="preserve">
          <source>An &quot;Abort&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;RejectRole로&lt;/a&gt; 정의 된 &quot;Abort&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="b02da82411a3332cfcb07eb4ded46eaa711eded1" translate="yes" xml:space="preserve">
          <source>An &quot;Abort&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole로&lt;/a&gt; 정의 된 &quot;Abort&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="f1ef86f821838992127c8fd2b087f89d3e97d8eb" translate="yes" xml:space="preserve">
          <source>An &quot;Abort&quot; button defined with the &lt;code&gt;RejectRole&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RejectRole&lt;/code&gt; 로 정의 된 &quot;Abort&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="96527528acaee4f934606f048914c35fad2a09b1" translate="yes" xml:space="preserve">
          <source>An &quot;Apply&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt;.</source>
          <target state="translated">에 정의 된 &quot;적용&quot;버튼 &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c75cca671ab9b63c92556bab44e289534ce80c58" translate="yes" xml:space="preserve">
          <source>An &quot;Apply&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt;.</source>
          <target state="translated">에 정의 된 &quot;적용&quot;버튼 &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2917ffeff54d5d092cdc743f385ac7f7ab2f9675" translate="yes" xml:space="preserve">
          <source>An &quot;Apply&quot; button defined with the &lt;code&gt;ApplyRole&lt;/code&gt;.</source>
          <target state="translated">에 정의 된 &quot;적용&quot;버튼 &lt;code&gt;ApplyRole&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72f08d4335af5bf5a95098f5979c4072c601507b" translate="yes" xml:space="preserve">
          <source>An &quot;Ignore&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">에 정의 된 &quot;무시&quot;버튼을 &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27cc1e166eda6a4e6535dcb22b221c442ee421f5" translate="yes" xml:space="preserve">
          <source>An &quot;Ignore&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">에 정의 된 &quot;무시&quot;버튼을 &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b98609eb162bba4fe21541585cc2155b052884a" translate="yes" xml:space="preserve">
          <source>An &quot;Ignore&quot; button defined with the &lt;code&gt;AcceptRole&lt;/code&gt;.</source>
          <target state="translated">에 정의 된 &quot;무시&quot;버튼을 &lt;code&gt;AcceptRole&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cc7d213c07ff8655e47c381b8f3efcc50c8d7c5" translate="yes" xml:space="preserve">
          <source>An &quot;OK&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole로&lt;/a&gt; 정의 된 &quot;확인&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="e0b4526798eaeaaaab8123f81a9efd558c032940" translate="yes" xml:space="preserve">
          <source>An &quot;OK&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole로&lt;/a&gt; 정의 된 &quot;확인&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="37a18cc443a1c603cd0604df35f778e7dc6a7d95" translate="yes" xml:space="preserve">
          <source>An &quot;OK&quot; button defined with the &lt;code&gt;AcceptRole&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AcceptRole&lt;/code&gt; 로 정의 된 &quot;확인&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="50c5d7f92ec59aa403036e2b97184ed0b94a0b41" translate="yes" xml:space="preserve">
          <source>An &quot;Open&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole로&lt;/a&gt; 정의 된 &quot;열기&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="0ea22bc97beb38223382d64b4c0a165786b59220" translate="yes" xml:space="preserve">
          <source>An &quot;Open&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole로&lt;/a&gt; 정의 된 &quot;열기&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="bb6a7f55d572b0186f0d898c42b7c4f38b637c66" translate="yes" xml:space="preserve">
          <source>An &quot;Open&quot; button defined with the &lt;code&gt;AcceptRole&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AcceptRole&lt;/code&gt; 로 정의 된 &quot;열기&quot;버튼 .</target>
        </trans-unit>
        <trans-unit id="13e7f2ea87e8ef42acdb00e0a9149f394a194493" translate="yes" xml:space="preserve">
          <source>An &quot;other&quot; subresource.</source>
          <target state="translated">&quot;기타&quot;하위 리소스</target>
        </trans-unit>
        <trans-unit id="84c078c136c4ef30f89539e8422330655ca7886c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qabstractitemmodel#insertColumns&quot;&gt;insertColumns&lt;/a&gt;() implementation must call &lt;a href=&quot;qabstractitemmodel#beginInsertColumns&quot;&gt;beginInsertColumns&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#insertColumns&quot;&gt;insertColumns&lt;/a&gt; () 구현을 호출해야합니다 &lt;a href=&quot;qabstractitemmodel#beginInsertColumns&quot;&gt;beginInsertColumns을&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="3f4f755206f5e1902fa7a146b1881d258da3f4a1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qabstractitemmodel#insertRows&quot;&gt;insertRows&lt;/a&gt;() implementation must call &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#insertRows&quot;&gt;insertRows&lt;/a&gt; () 구현을 호출해야합니다 &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows을&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="c7a42fb02359ec91c9dacc58c1d9810811970a23" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qbuttongroup#exclusive-prop&quot;&gt;exclusive&lt;/a&gt; button group switches off all checkable (toggle) buttons except the one that has been clicked. By default, a button group is exclusive. The buttons in a button group are usually checkable &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;s, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;es (normally for non-exclusive button groups), or &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt;s. If you create an exclusive button group, you should ensure that one of the buttons in the group is initially checked; otherwise, the group will initially be in a state where no buttons are checked.</source>
          <target state="translated">&lt;a href=&quot;qbuttongroup#exclusive-prop&quot;&gt;전용&lt;/a&gt; 버튼 그룹이 클릭되었는지 제외한 모든 체크 가능한 (토글) 버튼 꺼진다. 기본적으로 버튼 그룹은 배타적입니다. 버튼 그룹의 버튼은 일반적으로 확인 가능한 &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; , &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt; es (일반적으로 비 배타적 버튼 그룹의 경우) 또는 &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt; 입니다. 단독 버튼 그룹을 생성하는 경우 그룹의 버튼 중 하나가 처음에 선택되어 있는지 확인해야합니다. 그렇지 않으면 그룹은 처음에 버튼을 확인하지 않은 상태에있게됩니다.</target>
        </trans-unit>
        <trans-unit id="680268c051c2fecf959d61eb599077c7bfeffa0a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qgeopositioninfosource#updateTimeout&quot;&gt;updateTimeout&lt;/a&gt;() signal will be emitted if this &lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt; subclass determines that it will not be able to provide regular updates. This could happen if a satellite fix is lost or if a hardware error is detected. Position updates will recommence if the data becomes available later on. The &lt;a href=&quot;qgeopositioninfosource#updateTimeout&quot;&gt;updateTimeout&lt;/a&gt;() signal will not be emitted again until after the periodic updates resume.</source>
          <target state="translated">&lt;a href=&quot;qgeopositioninfosource#updateTimeout&quot;&gt;updateTimeout&lt;/a&gt; 이 경우 () 신호를 방출한다 &lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource의&lt;/a&gt; 서브 클래스는 정기적 인 업데이트를 제공 할 수 없다는 것을 결정한다. 위성 수정이 유실되거나 하드웨어 오류가 감지되는 경우 발생할 수 있습니다. 나중에 데이터를 사용할 수있게되면 위치 업데이트가 다시 시작됩니다. &lt;a href=&quot;qgeopositioninfosource#updateTimeout&quot;&gt;updateTimeout&lt;/a&gt; () 신호는주기적인 갱신을 재개 할 때까지 다시 방출되지 않을 것이다.</target>
        </trans-unit>
        <trans-unit id="01d00283f15b768b5f5d3622cee017c3aa00db0d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-core-entityloader&quot;&gt;EntityLoader&lt;/a&gt; provides the facitily to load predefined set of entities from qml source file. &lt;a href=&quot;qml-qt3d-core-entityloader&quot;&gt;EntityLoader&lt;/a&gt; itself is an entity and the loaded entity tree is set as a child of the loader. The loaded entity tree root can be accessed with &lt;a href=&quot;qml-qt3d-core-entityloader#entity-prop&quot;&gt;EntityLoader::entity&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qml-qt3d-core-entityloader&quot;&gt;EntityLoader는&lt;/a&gt; QML 소스 파일에서 개체의 facitily 미리 정의 된로드를 제공합니다. &lt;a href=&quot;qml-qt3d-core-entityloader&quot;&gt;EntityLoader&lt;/a&gt; 자체는 엔터티이며로드 된 엔터티 트리는 로더의 자식으로 설정됩니다. 로드 된 엔티티 트리 루트는 &lt;a href=&quot;qml-qt3d-core-entityloader#entity-prop&quot;&gt;EntityLoader :: entity&lt;/a&gt; 특성을 사용 하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8603f84a07d877d83491bccad3d2a6bdb3dbf61" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a Target1D target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Target1D 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f95df80a3f11645462ea82ef1eb0dc673e381f12" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a Target1DArray target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Target1DArray 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3438fa9c1d2e96e4fd28b04930e938ca31b63567" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a Target2D target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Target2D 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08527237bbef0407a713e5669994214ad4c62c82" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a Target2DArray target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Target2DArray 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c07ff0561773116cc4551ca942d47b943b2a5b04" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a Target2DMultisample target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Target2DMultisample 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7bfda7cf30a771cd4be1480009dd88845c3805c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a Target2DMultisampleArray target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Target2DMultisampleArray 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd58742879ab1e37529674a5b1113d43134eb020" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a Target3D target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Target3D 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e66f32d92cb1f12d38fb6411307c3b854d35aca" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a TargetBuffer target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">TargetBuffer 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcdf0b64cc0c7cb69b180662eadb54584d3788bc" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a TargetCubeMap target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">TargetCubeMap 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32c2f34602add1913f832faa9c6f9c0a7d809ef5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a TargetCubeMapArray target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">TargetCubeMapArray 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce9989468c0cf04d8e0468957a636d7ed10be202" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; with a TargetRectangle target format. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">TargetRectangle 대상 형식이 있는 &lt;a href=&quot;qml-qt3d-render-abstracttexture&quot;&gt;AbstractTexture&lt;/a&gt; 입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31c21032215fd103d878feddad24eaefc8e2eb2f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-alphacoverage&quot;&gt;AlphaCoverage&lt;/a&gt; type enables alpha-to-coverage multisampling mode. When enabled, the fragment alpha value is used as a coverage for the sample and combined with fragment coverage value. &lt;a href=&quot;qml-qt3d-render-alphacoverage&quot;&gt;AlphaCoverage&lt;/a&gt; does nothing if multisampling is disabled. Alpha-to-coverage is most useful when order independent blending is required, for example when rendering leaves, grass and other rich vegetation.</source>
          <target state="translated">&lt;a href=&quot;qml-qt3d-render-alphacoverage&quot;&gt;AlphaCoverage의&lt;/a&gt; 유형은 알파 - 투 - 범위 모드 멀티 샘플링을 할 수 있습니다. 활성화되면 조각 알파 값이 샘플의 적용 범위로 사용되며 조각 적용 범위 값과 결합됩니다. 멀티 샘플링이 비활성화 된 경우 &lt;a href=&quot;qml-qt3d-render-alphacoverage&quot;&gt;AlphaCoverage&lt;/a&gt; 는 아무 작업도 수행하지 않습니다. 알파 투 커버리지는 주문 독립 블렌딩이 필요한 경우, 예를 들어 잎, 잔디 및 기타 풍부한 초목을 렌더링 할 때 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3742e14c2076228acd6ae4f098f52b79bc9025ae" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;ObjectModel&lt;/a&gt; contains the visual items to be used in a view. When an &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;ObjectModel&lt;/a&gt; is used in a view, the view does not require a delegate since the &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;ObjectModel&lt;/a&gt; already contains the visual delegate (items).</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;objectModel를는&lt;/a&gt; 시각적 항목 뷰에서 사용될 포함한다. 때 &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;objectModel를이&lt;/a&gt; 도면에 사용 된 이후, 뷰 대리자를 필요로하지 않는다 &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;objectModel를는&lt;/a&gt; 이미 영상 대리자 (상품)을 포함한다.</target>
        </trans-unit>
        <trans-unit id="1a0792775de521d7a25b5482ec3d3325f282b638" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtqml-string#arg-method&quot;&gt;arg()&lt;/a&gt; function is added to the &lt;a href=&quot;qml-qtqml-string&quot;&gt;String&lt;/a&gt; prototype.</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-string#arg-method&quot;&gt;인수 ()&lt;/a&gt; 함수가 추가됩니다 &lt;a href=&quot;qml-qtqml-string&quot;&gt;문자열의&lt;/a&gt; 프로토 타입.</target>
        </trans-unit>
        <trans-unit id="1787fff0e1cad1a5b5dc65c7ad59aa2ebfb12d3a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; requests focus by setting the &lt;code&gt;focus&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 요청은 설정하여 초점을 &lt;code&gt;focus&lt;/code&gt; 에 속성을 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4853a556eb25a3fdc41db1de27c82411868d00cb" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtquick3d-effect&quot;&gt;Effect&lt;/a&gt; may consist of multiple render passes. Each render pass has a setup phase where the list of &lt;a href=&quot;qml-qtquick3d-pass#commands-prop&quot;&gt;render commands&lt;/a&gt; are executed, a &lt;a href=&quot;qml-qtquick3d-pass#output-prop&quot;&gt;output buffer&lt;/a&gt; and a list of &lt;a href=&quot;qml-qtquick3d-pass#shaders-prop&quot;&gt;shaders&lt;/a&gt; to use for rendering the effect.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick3d-effect&quot;&gt;효과&lt;/a&gt; 렌더링 다중 패스 구성 될 수있다. 각 렌더 패스에는 &lt;a href=&quot;qml-qtquick3d-pass#commands-prop&quot;&gt;렌더 명령&lt;/a&gt; 목록 이 실행 되는 설정 단계 , &lt;a href=&quot;qml-qtquick3d-pass#output-prop&quot;&gt;출력 버퍼&lt;/a&gt; 및 효과를 렌더링하는 데 사용할 &lt;a href=&quot;qml-qtquick3d-pass#shaders-prop&quot;&gt;셰이더&lt;/a&gt; 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee336648836013551f4e0cefb895b99a7312b90a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest&quot;&gt;AuthenticationDialogRequest&lt;/a&gt; is passed as an argument of the &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView::authenticationDialogRequested&lt;/a&gt; signal. It is generated when basic HTTP or proxy authentication is required. The type of authentication can be checked with the &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest#type-prop&quot;&gt;type&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest&quot;&gt;AuthenticationDialogRequest은&lt;/a&gt; 의 인수로 전달됩니다 &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView :: authenticationDialogRequested&lt;/a&gt; 신호. 기본 HTTP 또는 프록시 인증이 필요할 때 생성됩니다. 인증 유형은 &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest#type-prop&quot;&gt;type&lt;/a&gt; 속성 으로 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18b349411d8699ae20b00ed8822197f55a38d427" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qnearfieldtarget#ndefMessageRead&quot;&gt;ndefMessageRead&lt;/a&gt;() signal will be emitted for each NDEF message. The &lt;a href=&quot;qnearfieldtarget#requestCompleted&quot;&gt;requestCompleted&lt;/a&gt;() signal will be emitted was all NDEF messages have been read. The &lt;a href=&quot;qnearfieldtarget#error&quot;&gt;error&lt;/a&gt;() signal is emitted if an error occurs.</source>
          <target state="translated">&lt;a href=&quot;qnearfieldtarget#ndefMessageRead&quot;&gt;ndefMessageRead&lt;/a&gt; () 신호는 각각 NDEF 메시지를 방출한다. &lt;a href=&quot;qnearfieldtarget#requestCompleted&quot;&gt;requestCompleted&lt;/a&gt; () 신호 모두 NDEF 메시지를 읽은 하였다 방출한다. &lt;a href=&quot;qnearfieldtarget#error&quot;&gt;오류&lt;/a&gt; 에러가 발생하면 () 신호가 방출된다.</target>
        </trans-unit>
        <trans-unit id="ab7ca2f8922606d27af640f20bc14dc8a81b55bf" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qsharedmemory#attach&quot;&gt;attach&lt;/a&gt;() failed because a shared memory segment with the specified key could not be found.</source>
          <target state="translated">은 &lt;a href=&quot;qsharedmemory#attach&quot;&gt;첨부&lt;/a&gt; 지정된 키를 가진 공유 메모리 세그먼트를 찾을 수 없기 때문에 (가) 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="7b5d37ff57679830b3561725ea0889fee8f04924" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qt3drender-qeffect&quot;&gt;QEffect&lt;/a&gt; instance should be shared among several &lt;a href=&quot;qt3drender-qmaterial&quot;&gt;QMaterial&lt;/a&gt; instances when possible.</source>
          <target state="translated">&lt;a href=&quot;qt3drender-qeffect&quot;&gt;QEffect의&lt;/a&gt; 인스턴스가 여러 공유해야 &lt;a href=&quot;qt3drender-qmaterial&quot;&gt;QMaterial의&lt;/a&gt; 경우 인스턴스 수.</target>
        </trans-unit>
        <trans-unit id="edc4057c823458a452630b86bd7d06109e1af492" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qtqml-javascript-qmlglobalobject#xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qtqml-javascript-qmlglobalobject#xmlhttprequest&quot;&gt;XMLHttpRequest의&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e4f8ff46801c256388fc0137b0c0e29b9a299e1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qtqml-syntax-basics#object-declarations&quot;&gt;object declaration&lt;/a&gt; in a QML document defines a new type. It also declares an object hierarchy that will be instantiated should an instance of that newly defined type be created.</source>
          <target state="translated">QML 문서 의 &lt;a href=&quot;qtqml-syntax-basics#object-declarations&quot;&gt;객체 선언&lt;/a&gt; 은 새로운 유형을 정의합니다. 또한 새로 정의 된 유형의 인스턴스가 작성 될 때 인스턴스화 될 객체 계층을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="893fc70ea9d397355d9a11a3f36c558d1c338f20" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;attached signal handler&lt;/a&gt; receives a signal from an</source>
          <target state="translated">&lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;핸들러 연결된 신호&lt;/a&gt; 로부터 신호를 수신하여</target>
        </trans-unit>
        <trans-unit id="c3d8cab592de860a0dbaeaa7a9fc3f1eaf28d140" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qwindow#exposeEvent&quot;&gt;exposeEvent&lt;/a&gt;() is sent every time this value changes.</source>
          <target state="translated">&lt;a href=&quot;qwindow#exposeEvent&quot;&gt;exposeEvent는&lt;/a&gt; () 값이 변화 할 때마다 전송된다.</target>
        </trans-unit>
        <trans-unit id="1ff2e81de4ec15f958cc084034e25310dbaf82b4" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b33483f12c4d72a1f19d7dbf7eb3cd6aa7e25ba8" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; expression can also be enclosed in curly braces and embedded in another &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; expression. This &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; has a document expression embedded in a node expression:</source>
          <target state="translated">&lt;a href=&quot;xmlprocessing&quot;&gt;는 XQuery&lt;/a&gt; 표현은 중괄호로 둘러싼 또 다른에 포함 할 수 &lt;a href=&quot;xmlprocessing&quot;&gt;는 XQuery&lt;/a&gt; 식입니다. 이 &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; 에는 노드 표현식에 포함 된 문서 표현식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4ce5a7cdbbfd28ac50a3f10f8ab8545c25409cd" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="713d741277c2cd566c35d7e8db95edd140d56523" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; expression can also be enclosed in curly braces and embedded in another &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; expression. This &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; has a document expression embedded in a node expression:</source>
          <target state="translated">&lt;a href=&quot;xmlprocessing#&quot;&gt;는 XQuery&lt;/a&gt; 표현은 중괄호로 둘러싼 또 다른에 포함 할 수 &lt;a href=&quot;xmlprocessing#&quot;&gt;는 XQuery&lt;/a&gt; 식입니다. 이 &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; 에는 노드 표현식에 포함 된 문서 표현식이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f941320398dd5036a69803d3ef8d097fb090f974" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Abort&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;중단의&lt;/b&gt; 정의 버튼 &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a92dea9de0a8e042edaa44aa58d15717ce43c033" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Apply&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt;.</source>
          <target state="translated">는 &lt;b&gt;적용&lt;/b&gt; 정의 버튼 &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ApplyRole을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a8ecbd48d1434ad373dc0eacb000a54b99e79124" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Ignore&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">는 &lt;b&gt;무시&lt;/b&gt; 정의 버튼 &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c96b240bf6dc0c7f3bcfb4a67381822a35adcfca" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;OK&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;OK의&lt;/b&gt; 정의 버튼 &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b028d2b56a7de8fdf334454d05bdf9010ee4e76" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Open&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="translated">&lt;b&gt;열기&lt;/b&gt; 정의 버튼 &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95a6897feb41c341b2cf3e2ed574f603ca21404b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;.aff&lt;/code&gt; file that defines the meaning of special flags in the dictionary</source>
          <target state="translated">사전에서 특수 플래그의 의미를 정의 하는 &lt;code&gt;.aff&lt;/code&gt; 파일</target>
        </trans-unit>
        <trans-unit id="a3b834dc576abdfb54e036f6eea272b8e6eb3ef5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Encrypt0&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="translated">&lt;code&gt;Encrypt0&lt;/code&gt; 가 지정한대로 매핑 &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR 개체 서명 및 암호화).</target>
        </trans-unit>
        <trans-unit id="32709ad321fbab24da2659b6ffc4b344eb76232c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Encrypt&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="translated">&lt;code&gt;Encrypt&lt;/code&gt; 지정한대로 매핑 &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR 개체 서명 및 암호화).</target>
        </trans-unit>
        <trans-unit id="2078e1556771456c95ce49def023aceae07b63bb" translate="yes" xml:space="preserve">
          <source>An ARGB quadruplet on the format #AARRGGBB, equivalent to an unsigned int.</source>
          <target state="translated">부호없는 int에 해당하는 #AARRGGBB 형식의 ARGB 쿼드 렛.</target>
        </trans-unit>
        <trans-unit id="47898d0d0f4efd96afe2b0642ebb82d102b4dfa6" translate="yes" xml:space="preserve">
          <source>An Abstract base type for custom geometry. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">사용자 지정 지오메트리의 추상 기본 유형입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85241382b424734e1ee719b85324e5c6de64ae91" translate="yes" xml:space="preserve">
          <source>An Address is used as a unit of data for queries such as (Reverse) Geocoding or Places searches -- many of these operations either accept an Address or return one.</source>
          <target state="translated">주소는 (리버스) 지오 코딩 또는 장소 검색과 같은 쿼리에 대한 데이터 단위로 사용됩니다. 이러한 많은 작업은 주소를 수락하거나 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7d6072e5fd4c77f2e8e19fe156e2460a887e0717" translate="yes" xml:space="preserve">
          <source>An AlphaCoverage type enables alpha-to-coverage multisampling mode. When enabled, the fragment alpha value is used as a coverage for the sample and combined with fragment coverage value. AlphaCoverage does nothing if multisampling is disabled. Alpha-to-coverage is most useful when order independent blending is required, for example when rendering leaves, grass and other rich vegetation.</source>
          <target state="translated">AlphaCoverage 유형은 alpha-to-coverage 멀티 샘플링 모드를 활성화합니다. 활성화되면 조각 알파 값이 샘플에 대한 범위로 사용되며 조각 범위 값과 결합됩니다. AlphaCoverage는 멀티 샘플링이 비활성화 된 경우 아무 작업도 수행하지 않습니다. Alpha-to-coverage는 잎, 풀 및 기타 풍부한 초목을 렌더링 할 때와 같이 주문 독립적 블렌딩이 필요할 때 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="35b0f576be97fde3eca9f121d8da804736b8105d" translate="yes" xml:space="preserve">
          <source>An Alt key on the keyboard is pressed.</source>
          <target state="translated">키보드의 Alt 키를 눌렀습니다.</target>
        </trans-unit>
        <trans-unit id="98dd676e8ce69b4227aa3969becb46e53fa15d0b" translate="yes" xml:space="preserve">
          <source>An Alt key on the keyboard must be pressed.</source>
          <target state="translated">키보드의 Alt 키를 눌러야합니다.</target>
        </trans-unit>
        <trans-unit id="0dad08667a9cf27e121131946e515f9e7c9c6251" translate="yes" xml:space="preserve">
          <source>An AuthenticationDialogRequest is passed as an argument of the &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView::authenticationDialogRequested&lt;/a&gt; signal. It is generated when basic HTTP or proxy authentication is required. The type of authentication can be checked with the &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest#type-prop&quot;&gt;type&lt;/a&gt; property.</source>
          <target state="translated">AuthenticationDialogRequest는 &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView :: authenticationDialogRequested&lt;/a&gt; 신호 의 인수로 전달됩니다 . 기본 HTTP 또는 프록시 인증이 필요할 때 생성됩니다. 인증 유형은 &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest#type-prop&quot;&gt;type&lt;/a&gt; 속성 으로 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="773232ebf88b40e4a4b1374cc66672862c0565dd" translate="yes" xml:space="preserve">
          <source>An Axis reports the current position of an axis on an input device. When the axis is returned to its neutral position the value of that axis returns to 0. Often, it is required to have the input from an axis control a variable in other ways, for example treating the value from the Axis as a velocity (first derivative with respect to time) or as an acceleration (second derivative with respect to time). This can be done with user code or with a &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction&lt;/a&gt; but those approached are not ideal as they add more work to the main thread and are inherently imperative. The &lt;a href=&quot;qml-qt3d-input-axisaccumulator&quot;&gt;AxisAccumulator&lt;/a&gt; class allows for this common task to be performed on the Qt 3D backend and be specified in a declarative manner.</source>
          <target state="translated">축은 입력 장치에서 축의 현재 위치를보고합니다. 축이 중립 위치로 돌아 오면 축의 값이 0으로 돌아갑니다. 축의 입력을 다른 방법으로 변수를 제어해야합니다. 예를 들어 축의 값을 속도 (첫 번째) 시간에 대한 미분) 또는 가속도 (시간에 대한 2 차 미분). 이것은 사용자 코드 또는 &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction&lt;/a&gt; 으로 수행 할 수 있지만 접근 한 것은 기본 스레드에 더 많은 작업을 추가하고 본질적으로 필수적이므로 이상적이지 않습니다. &lt;a href=&quot;qml-qt3d-input-axisaccumulator&quot;&gt;AxisAccumulator의&lt;/a&gt; 이 일반적인 작업은 Qt는 3D 백엔드에서 수행하고 선언적인 방법으로 지정을위한 클래스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="925417524b5eb5039c7dc12b8cd5ff6d82de0c0b" translate="yes" xml:space="preserve">
          <source>An Axis reports the current position of an axis on an input device. When the axis is returned to its neutral position the value of that axis returns to 0. Often, it is required to have the input from an axis control a variable in other ways, for example treating the value from the Axis as a velocity (first derivative with respect to time) or as an acceleration (second derivative with respect to time). This can be done with user code or with a &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction&lt;/a&gt; but those approached are not ideal as they add more work to the main thread and are inherently imperative. The AxisAccumulator class allows for this common task to be performed on the Qt 3D backend and be specified in a declarative manner.</source>
          <target state="translated">축은 입력 장치에서 축의 현재 위치를보고합니다. 축이 중립 위치로 돌아 오면 해당 축의 값이 0으로 돌아갑니다. 종종 축의 입력이 다른 방식으로 변수를 제어하도록해야합니다 (예 : 축의 값을 속도로 처리) (첫 번째 시간에 대한 미분) 또는 가속도 (시간에 대한 2 차 미분). 이것은 사용자 코드 또는 &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction을&lt;/a&gt; 사용하여 수행 할 수 있지만 접근하는 방법은 기본 스레드에 더 많은 작업을 추가하고 본질적으로 필수적이므로 이상적이지 않습니다. AxisAccumulator 클래스를 사용하면이 일반적인 작업을 Qt 3D 백엔드에서 수행하고 선언적 방식으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5535f27dba264d93b85ef9a856551f63ee6b5aad" translate="yes" xml:space="preserve">
          <source>An Effect instance should be shared among several Material instances when possible.</source>
          <target state="translated">가능한 경우 Effect 인스턴스는 여러 Material 인스턴스간에 공유되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6e9a2c975b57ea48999f080675f7b61d34926d93" translate="yes" xml:space="preserve">
          <source>An EntityLoader provides the facitily to load predefined set of entities from qml source file. EntityLoader itself is an entity and the loaded entity tree is set as a child of the loader. The loaded entity tree root can be accessed with &lt;a href=&quot;qml-qt3d-core-entityloader#entity-prop&quot;&gt;EntityLoader::entity&lt;/a&gt; property.</source>
          <target state="translated">EntityLoader는 qml 소스 파일에서 사전 정의 된 엔티티 세트를 쉽게로드 할 수 있도록합니다. EntityLoader 자체는 엔티티이며로드 된 엔티티 트리는 로더의 하위로 설정됩니다. 로드 된 엔티티 트리 루트는 &lt;a href=&quot;qml-qt3d-core-entityloader#entity-prop&quot;&gt;EntityLoader :: entity&lt;/a&gt; 속성을 사용 하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dcd29613666219a97f2491f0610be4945ceed298" translate="yes" xml:space="preserve">
          <source>An Example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="7fd92418b18790d3984c9150e7b1411b62b3d82c" translate="yes" xml:space="preserve">
          <source>An Example Ditamap Page</source>
          <target state="translated">예시 Ditamap 페이지</target>
        </trans-unit>
        <trans-unit id="d4d3cbecc1e6fff975945f988991e534ac60592f" translate="yes" xml:space="preserve">
          <source>An Example Toolchain File</source>
          <target state="translated">도구 체인 파일의 예</target>
        </trans-unit>
        <trans-unit id="c29b72c61f239ced719fa7805aab06497450a6e7" translate="yes" xml:space="preserve">
          <source>An HTML document is loaded in a</source>
          <target state="translated">HTML 문서는</target>
        </trans-unit>
        <trans-unit id="85413f5ddb8d97dfb6c7f8135a9bc16a9ba69c30" translate="yes" xml:space="preserve">
          <source>An I/O error occurred when a resource becomes unavailable, e.g. when the device is unexpectedly removed from the system.</source>
          <target state="translated">리소스를 사용할 수 없게되면 (예 : 시스템에서 장치가 예기치 않게 제거 될 때) I / O 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="ab1b55066fc2884b559ba16b1828d8b17223acfd" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while reading the data.</source>
          <target state="translated">데이터를 읽는 중 I / O 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="d31be7d3d67cd21912d28e524fd4dea6cc253c4f" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the data.</source>
          <target state="translated">데이터를 쓰는 중 I / O 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="25611d6d88875f63266236225888c4a5da8d4023" translate="yes" xml:space="preserve">
          <source>An I/O error with the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; occurred.</source>
          <target state="translated">&lt;a href=&quot;qiodevice&quot;&gt;QIODevice에&lt;/a&gt; 대한 I / O 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="526899559a686d9aeae34b8c946f44fdc0f9ff8b" translate="yes" xml:space="preserve">
          <source>An IO failure occurred during device discovery</source>
          <target state="translated">장치 검색 중 IO 오류가 발생했습니다</target>
        </trans-unit>
        <trans-unit id="91a22d013327bc7c867159d025afe96871982e2c" translate="yes" xml:space="preserve">
          <source>An IP address entry; the entry contains an IP address entry that the certificate is valid for, introduced in Qt 5.13.</source>
          <target state="translated">IP 주소 항목 Qt 5.13에 도입 된 인증서가 유효한 IP 주소 항목이 항목에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f1fd92b1476fae39abb8b927155183ac751690c5" translate="yes" xml:space="preserve">
          <source>An IP is considered to belong to a subnet if it is contained between the lowest and the highest address in that subnet. In the case of IP version 4, the lowest address is the network address, while the highest address is the broadcast address.</source>
          <target state="translated">IP가 해당 서브넷에서 가장 낮은 주소와 가장 높은 주소 사이에 포함되어 있으면 서브넷에 속하는 것으로 간주됩니다. IP 버전 4의 경우 가장 낮은 주소는 네트워크 주소이고 가장 높은 주소는 브로드 캐스트 주소입니다.</target>
        </trans-unit>
        <trans-unit id="672429c323676f7a1e476a849b31b9764ba9387a" translate="yes" xml:space="preserve">
          <source>An IPv4 link-local address is an address in the network 169.254.0.0/16. An IPv6 link-local address is one in the network fe80::/10. See the &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 Address Space&lt;/a&gt; registry for more information.</source>
          <target state="translated">IPv4 링크 로컬 주소는 네트워크 169.254.0.0/16의 주소입니다. IPv6 링크 로컬 주소는 fe80 :: / 10 네트워크의 주소입니다. 자세한 정보는 &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 주소 공간&lt;/a&gt; 레지스트리를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4141e1a54b1c15d3a66d3eba8397996972605dc4" translate="yes" xml:space="preserve">
          <source>An IPv6 site-local address is one in the network fec0::/10. See the &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 Address Space&lt;/a&gt; registry for more information.</source>
          <target state="translated">IPv6 사이트 로컬 주소는 네트워크 fec0 :: / 10에있는 주소입니다. 자세한 정보는 &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 주소 공간&lt;/a&gt; 레지스트리를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d1e5eafc5df5a57d8cfa7d11dce1fcacde96d05f" translate="yes" xml:space="preserve">
          <source>An IPv6 unique local unicast address is one in the network fc00::/7. See the &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 Address Space&lt;/a&gt; registry for more information.</source>
          <target state="translated">IPv6 고유 로컬 유니 캐스트 주소는 네트워크 fc00 :: / 7의 주소입니다. 자세한 정보는 &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 주소 공간&lt;/a&gt; 레지스트리를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b16e6d4b608923f8305e2ee561b626ed98c986b1" translate="yes" xml:space="preserve">
          <source>An Introduction to Database Systems</source>
          <target state="translated">데이터베이스 시스템 소개</target>
        </trans-unit>
        <trans-unit id="241fbc175d8e4e92f514f703141326951d1f6e36" translate="yes" xml:space="preserve">
          <source>An Introduction to Namespaces</source>
          <target state="translated">네임 스페이스 소개</target>
        </trans-unit>
        <trans-unit id="00e8225928b1d93b0af2536d09648c624ea1e4c1" translate="yes" xml:space="preserve">
          <source>An Item for which the application does not have a reference can be found by calling &lt;a href=&quot;qml-qtquick-controls2-stackview#find-method&quot;&gt;find()&lt;/a&gt;. The method needs a callback function, which is invoked for each item in the stack (starting at the top) until a match is found. If the callback returns &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#find-method&quot;&gt;find()&lt;/a&gt; stops and returns the matching item, otherwise &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls2-stackview#find-method&quot;&gt;find ()&lt;/a&gt; 를 호출하여 애플리케이션에 참조가없는 항목을 찾을 수 있습니다 . 이 메소드에는 콜백 함수가 필요합니다.이 함수는 일치하는 항목을 찾을 때까지 스택의 각 항목 (위에서 시작)에 대해 호출됩니다. 콜백이 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 &lt;a href=&quot;qml-qtquick-controls2-stackview#find-method&quot;&gt;find ()&lt;/a&gt; 는 중지하고 일치하는 항목을 반환합니다. 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7c36bce291adb4ba9f7bcaa4ada6615d3b323c03" translate="yes" xml:space="preserve">
          <source>An Item will normally be rendered directly into the window it belongs to. However, by setting &lt;a href=&quot;qml-qtquick-item#layer.enabled-prop&quot;&gt;layer.enabled&lt;/a&gt;, it is possible to delegate the item and its entire subtree into an offscreen surface. Only the offscreen surface, a texture, will be then drawn into the window.</source>
          <target state="translated">항목은 일반적으로 해당 창에 직접 렌더링됩니다. 그러나 &lt;a href=&quot;qml-qtquick-item#layer.enabled-prop&quot;&gt;layer.enabled&lt;/a&gt; 를 설정 하면 항목과 전체 하위 트리를 화면 외부 표면에 위임 할 수 있습니다. 그런 다음 오프 스크린 표면 인 텍스처 만 창에 그려집니다.</target>
        </trans-unit>
        <trans-unit id="2f87e8880e8c668330f233a3691ae70fffab5ca1" translate="yes" xml:space="preserve">
          <source>An NFC tag type 1 target.</source>
          <target state="translated">NFC 태그 유형 1 대상</target>
        </trans-unit>
        <trans-unit id="108eb2dd69af55eeddae43159c1939e707374e4f" translate="yes" xml:space="preserve">
          <source>An NFC tag type 2 target.</source>
          <target state="translated">NFC 태그 유형 2 대상</target>
        </trans-unit>
        <trans-unit id="83a849dea3fc166195fbab28f7476cbe34293cc7" translate="yes" xml:space="preserve">
          <source>An NFC tag type 3 target.</source>
          <target state="translated">NFC 태그 유형 3 대상</target>
        </trans-unit>
        <trans-unit id="782d2d51e5280e52f88d86b1acce93eb1da39b5e" translate="yes" xml:space="preserve">
          <source>An NFC tag type 4 target.</source>
          <target state="translated">NFC 태그 유형 4 대상</target>
        </trans-unit>
        <trans-unit id="6e0919de4439a06d07951baec09d20e9ec29bb1f" translate="yes" xml:space="preserve">
          <source>An Object of this class provides a characteristic to be added to a &lt;a href=&quot;qlowenergyservicedata&quot;&gt;QLowEnergyServiceData&lt;/a&gt; object via &lt;a href=&quot;qlowenergyservicedata#addCharacteristic&quot;&gt;QLowEnergyServiceData::addCharacteristic&lt;/a&gt;().</source>
          <target state="translated">이 클래스의 개체 특성이 추가 될 제공 &lt;a href=&quot;qlowenergyservicedata&quot;&gt;QLowEnergyServiceData를&lt;/a&gt; 통해 객체 &lt;a href=&quot;qlowenergyservicedata#addCharacteristic&quot;&gt;QLowEnergyServiceData :: addCharacteristic&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="7a6f5178fd9f3cef54c5c06035aa3a130df80dd8" translate="yes" xml:space="preserve">
          <source>An Object of this class provides a service to be added to a GATT server via &lt;a href=&quot;qlowenergycontroller#addService&quot;&gt;QLowEnergyController::addService&lt;/a&gt;().</source>
          <target state="translated">이 클래스의 Object는 &lt;a href=&quot;qlowenergycontroller#addService&quot;&gt;QLowEnergyController :: addService&lt;/a&gt; () 를 통해 GATT 서버에 추가 될 서비스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0e29f83ee3cf51ef857cc40ad3542fb33ab5f9f6" translate="yes" xml:space="preserve">
          <source>An ObjectModel contains the visual items to be used in a view. When an ObjectModel is used in a view, the view does not require a delegate since the ObjectModel already contains the visual delegate (items).</source>
          <target state="translated">ObjectModel은 뷰에서 사용할 시각적 항목을 포함합니다. ObjectModel이 뷰에서 사용되는 경우 ObjectModel에 이미 시각적 델리게이트 (항목)가 포함되어 있으므로 뷰에 델리게이트가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c5f6bdd9d66b700516768a026447a7a082a1f32d" translate="yes" xml:space="preserve">
          <source>An QEffect instance should be shared among several &lt;a href=&quot;qt3drender-qmaterial&quot;&gt;QMaterial&lt;/a&gt; instances when possible.</source>
          <target state="translated">가능한 경우 QEffect 인스턴스는 여러 &lt;a href=&quot;qt3drender-qmaterial&quot;&gt;QMaterial&lt;/a&gt; 인스턴스 간에 공유되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="05fda20e0fae9b4072bf48a22c8c8b7efcd3e069" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;DELETE&lt;/code&gt; statement (e.g., &lt;code&gt;DELETE FROM t&lt;/code&gt;).</source>
          <target state="translated">SQL &lt;code&gt;DELETE&lt;/code&gt; 문 (예 : &lt;code&gt;DELETE FROM t&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1e2b172b1f478d3b9894026b083e72946644ee81" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;INSERT&lt;/code&gt; statement (e.g., &lt;code&gt;INSERT INTO t (f) values (1)&lt;/code&gt;).</source>
          <target state="translated">SQL &lt;code&gt;INSERT&lt;/code&gt; 문 (예 : &lt;code&gt;INSERT INTO t (f) values (1)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dfd129d206e7ce6b7268556cb1391881424c566d" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;SELECT&lt;/code&gt; statement (e.g., &lt;code&gt;SELECT f FROM t&lt;/code&gt;).</source>
          <target state="translated">SQL &lt;code&gt;SELECT&lt;/code&gt; 문 (예 : &lt;code&gt;SELECT f FROM t&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4bfba477b57a621077e980eb09e6eb605cb0da30" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;UPDATE&lt;/code&gt; statement (e.g., &lt;code&gt;UPDATE TABLE t set f = 1&lt;/code&gt;).</source>
          <target state="translated">SQL &lt;code&gt;UPDATE&lt;/code&gt; 문 (예 : &lt;code&gt;UPDATE TABLE t set f = 1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d7b3ad81f40cc10f692ef72f4a58bd55175abae2" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;WHERE&lt;/code&gt; statement (e.g., &lt;code&gt;WHERE f = 5&lt;/code&gt;).</source>
          <target state="translated">SQL &lt;code&gt;WHERE&lt;/code&gt; 문 (예 : &lt;code&gt;WHERE f = 5&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4fb2e2bc10a48c3c73d54c8c092eb83fae483770" translate="yes" xml:space="preserve">
          <source>An XHTML document which is the actual message. It is translated into the current language.</source>
          <target state="translated">실제 메시지 인 XHTML 문서. 현재 언어로 번역됩니다.</target>
        </trans-unit>
        <trans-unit id="dd02e39b32736b24c3f9b9f94e31888506546dea" translate="yes" xml:space="preserve">
          <source>An XML file that contains references to the compressed help files that should be included in the help collection. In addition, it may contain information for customizing Qt Assistant. This file can be passed to the help generator for creating a help collection file.</source>
          <target state="translated">도움말 콜렉션에 포함되어야하는 압축 된 도움말 파일에 대한 참조가 포함 된 XML 파일입니다. 또한 Qt Assistant를 사용자 정의하기위한 정보를 포함 할 수 있습니다. 이 파일은 도움말 콜렉션 파일을 작성하기 위해 도움말 생성기로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4655dadfea4f75c99da5ea3fbfb01c883037ebbf" translate="yes" xml:space="preserve">
          <source>An XML file that contains references to the compressed help files that should be included in the help collection. This file can be passed to the help generator for creating a help collection file.</source>
          <target state="translated">도움말 모음에 포함되어야하는 압축 된 도움말 파일에 대한 참조가 포함 된 XML 파일입니다. 이 파일은 도움말 콜렉션 파일을 작성하기 위해 도움말 생성기로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ca323742a8de75aff3cad7cb55c3d3b9ac91bb5" translate="yes" xml:space="preserve">
          <source>An XY legend marker is related to &lt;a href=&quot;qxyseries&quot;&gt;QXYSeries&lt;/a&gt; derived classes: &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt;, &lt;a href=&quot;qsplineseries&quot;&gt;QSplineSeries&lt;/a&gt;, and &lt;a href=&quot;qscatterseries&quot;&gt;QScatterSeries&lt;/a&gt;. Each marker is related to one series.</source>
          <target state="translated">XY 범례 마커는 &lt;a href=&quot;qxyseries&quot;&gt;QXYSeries&lt;/a&gt; 파생 클래스 &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt; , &lt;a href=&quot;qsplineseries&quot;&gt;QSplineSeries&lt;/a&gt; 및 &lt;a href=&quot;qscatterseries&quot;&gt;QScatterSeries&lt;/a&gt; 와 관련이 있습니다. 각 마커는 하나의 시리즈와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="472869adb40027fced89e9f9f6065ed6d345c016" translate="yes" xml:space="preserve">
          <source>An absolute XPath query representing the base query for creating model items from this model's &lt;a href=&quot;qml-qtquick-xmllistmodel-xmlrole&quot;&gt;XmlRole&lt;/a&gt; objects. The query should start with '/' or '//'.</source>
          <target state="translated">이 모델의 &lt;a href=&quot;qml-qtquick-xmllistmodel-xmlrole&quot;&gt;XmlRole&lt;/a&gt; 개체 에서 모델 항목을 만들기위한 기본 쿼리를 나타내는 절대 XPath 쿼리 입니다. 쿼리는 '/'또는 '//'로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="98628520d960cf9ff3590470522a84020b768214" translate="yes" xml:space="preserve">
          <source>An abstract base class for Qt3D animations</source>
          <target state="translated">Qt3D 애니메이션을위한 추상 기본 클래스</target>
        </trans-unit>
        <trans-unit id="725d324e7f6a8bf6de32132c75cf29338f3fbc02" translate="yes" xml:space="preserve">
          <source>An abstract base class for Qt3D animations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Qt3D 애니메이션에 대한 추상 기본 클래스입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="197a3bb195018ee047bcafefb7b267a3893f9969" translate="yes" xml:space="preserve">
          <source>An abstract base class for Qt3D animations. &lt;a href=&quot;qt3danimation-qabstractanimation#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Qt3D 애니메이션에 대한 추상 기본 클래스입니다. &lt;a href=&quot;qt3danimation-qabstractanimation#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aaf887c3354d43aefc471dbfb959e73522d219cc" translate="yes" xml:space="preserve">
          <source>An abstract base class for all render states</source>
          <target state="translated">모든 렌더링 상태에 대한 추상 기본 클래스</target>
        </trans-unit>
        <trans-unit id="777adcb26d35956ba220cb45d5f1cb23db56fbe8" translate="yes" xml:space="preserve">
          <source>An abstract base class for all render states. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 렌더링 상태에 대한 추상 기본 클래스입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9320d810ff4bf74f2ba19fee7d69622f56b12d02" translate="yes" xml:space="preserve">
          <source>An abstract base class for all render states. &lt;a href=&quot;qt3drender-qrenderstate#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 렌더링 상태에 대한 추상 기본 클래스입니다. &lt;a href=&quot;qt3drender-qrenderstate#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da4a894c086f73e0f3959e2795a8559a6b7a9c25" translate="yes" xml:space="preserve">
          <source>An abstract base class for ray casting in 3d scenes</source>
          <target state="translated">3D 장면에서 레이 캐스팅을위한 추상 기본 클래스</target>
        </trans-unit>
        <trans-unit id="c15d5394643d1c3bf4e09bde87bebd981b04d90f" translate="yes" xml:space="preserve">
          <source>An abstract base class for ray casting in 3d scenes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">3D 장면에서 레이 캐스팅을위한 추상 기본 클래스입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6afbbe6133d23773f605c2a0fa5af9021c3945e" translate="yes" xml:space="preserve">
          <source>An abstract base class for ray casting in 3d scenes. &lt;a href=&quot;qt3drender-qabstractraycaster#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">3D 장면에서 레이 캐스팅을위한 추상 기본 클래스입니다. &lt;a href=&quot;qt3drender-qabstractraycaster#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8a5de37d0c53201f29b2dd93599f25e699569d8" translate="yes" xml:space="preserve">
          <source>An abstract base type for Qt3D animations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Qt3D 애니메이션의 추상 기본 유형입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e116ca1be79b7d0d3deaa55e831a61e1f9fabc49" translate="yes" xml:space="preserve">
          <source>An abstract base type for all render states. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 렌더링 상태에 대한 추상 기본 유형입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="138d935011f481f77979dffaafe7d9f7bec76223" translate="yes" xml:space="preserve">
          <source>An abstract parent type for all bar series types. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 막대 계열 유형에 대한 추상 상위 유형입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ce62117e28e35c5e669e92f4a3434dfa97b26ad" translate="yes" xml:space="preserve">
          <source>An access error occurred (e.g. trying to write to a read-only file).</source>
          <target state="translated">액세스 오류가 발생했습니다 (예 : 읽기 전용 파일에 쓰려고 시도 중).</target>
        </trans-unit>
        <trans-unit id="5b12873c2e20a1af8f5b63c61e33103e45916e80" translate="yes" xml:space="preserve">
          <source>An accessible object's &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible::Description&lt;/a&gt; provides textual information about an object's visual appearance. The description is primarily used to provide greater context for vision-impaired users, but is also used for context searching or other applications. Not all objects have a description. An &quot;OK&quot; button would not need a description, but a tool button that shows a picture of a smiley would.</source>
          <target state="translated">액세스 가능한 객체의 &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible :: Description&lt;/a&gt; 은 객체의 시각적 모양에 대한 텍스트 정보를 제공합니다. 이 설명은 주로 시각 장애가있는 사용자에게 더 큰 컨텍스트를 제공하는 데 사용되지만 컨텍스트 검색 또는 다른 응용 프로그램에도 사용됩니다. 모든 객체에 설명이있는 것은 아닙니다. &quot;확인&quot;버튼은 설명이 필요하지 않지만 스마일리 그림을 보여주는 도구 버튼입니다.</target>
        </trans-unit>
        <trans-unit id="e55a3b504e5d9a6fa6c5d9852ba9a90f27e38326" translate="yes" xml:space="preserve">
          <source>An action can be bound to a menu item and a toolbar button, and it will automatically keep them in sync. For example, in a word processor, if the user presses a Bold toolbar button, the Bold menu item will automatically be checked.</source>
          <target state="translated">작업은 메뉴 항목 및 도구 모음 단추에 바인딩 될 수 있으며 자동으로 동기화 상태를 유지합니다. 예를 들어 워드 프로세서에서 사용자가 굵게 도구 모음 단추를 누르면 굵게 메뉴 항목이 자동으로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="b8320b821624ac687e1b95dcdfd3d6c9e47fe1d6" translate="yes" xml:space="preserve">
          <source>An action has been changed (&lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt;).</source>
          <target state="translated">조치가 변경되었습니다 ( &lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e1070292389d710477f59e5c0298b7f45ba7d317" translate="yes" xml:space="preserve">
          <source>An action has been changed.</source>
          <target state="translated">동작이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="07828f33d80bb86e6585dbc7869f13d9d1da5819" translate="yes" xml:space="preserve">
          <source>An action has been removed (&lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt;).</source>
          <target state="translated">조치가 제거되었습니다 ( &lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="50578cb4d1997443cf5f55b6e43113df03bb56e8" translate="yes" xml:space="preserve">
          <source>An action that represents a &lt;a href=&quot;qml-qtwebengine-webengineview#WebAction-prop&quot;&gt;WebEngineView::WebAction&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qml-qtwebengine-webengineview#WebAction-prop&quot;&gt;WebEngineView :: WebAction&lt;/a&gt; 을 나타내는 조치입니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ada287a3a61eba673759fdf718b9145d60defc4f" translate="yes" xml:space="preserve">
          <source>An action will be disabled when all widgets to which it is added (with &lt;a href=&quot;qwidget#addAction&quot;&gt;QWidget::addAction&lt;/a&gt;()) are disabled or not visible. When an action is disabled, it is not possible to trigger it through its shortcut.</source>
          <target state="translated">조치가 추가 된 모든 위젯 ( &lt;a href=&quot;qwidget#addAction&quot;&gt;QWidget :: addAction&lt;/a&gt; () 사용)이 사용 불가능하거나 표시되지 않으면 조치가 사용 불가능 합니다. 작업이 비활성화되면 바로 가기를 통해 트리거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8bb9a375e693483d342559b0435c93b5d99a6ef1" translate="yes" xml:space="preserve">
          <source>An active monitor was started via &lt;a href=&quot;qgeoareamonitorsource#startMonitoring&quot;&gt;startMonitoring&lt;/a&gt;() and the source object will emit the required signals such as &lt;a href=&quot;qgeoareamonitorsource#areaEntered&quot;&gt;areaEntered&lt;/a&gt;() or &lt;a href=&quot;qgeoareamonitorsource#areaExited&quot;&gt;areaExited&lt;/a&gt;(). Multiple &lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; instances within the same application share the same monitor objects.</source>
          <target state="translated">활성 모니터는 &lt;a href=&quot;qgeoareamonitorsource#startMonitoring&quot;&gt;startMonitoring&lt;/a&gt; ()을 통해 시작되었으며 소스 오브젝트는 &lt;a href=&quot;qgeoareamonitorsource#areaEntered&quot;&gt;areaEntered&lt;/a&gt; () 또는 &lt;a href=&quot;qgeoareamonitorsource#areaExited&quot;&gt;areaExited&lt;/a&gt; () 와 같은 필수 신호를 방출합니다 . 동일한 애플리케이션 내의 여러 &lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; 인스턴스는 동일한 모니터 오브젝트를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="fde9956cb8d93984c41a23c53deb43589f9ee7e3" translate="yes" xml:space="preserve">
          <source>An active monitor was started via &lt;a href=&quot;qgeoareamonitorsource#startMonitoring&quot;&gt;startMonitoring&lt;/a&gt;() the source object will emit the required signals such as &lt;a href=&quot;qgeoareamonitorsource#areaEntered&quot;&gt;areaEntered&lt;/a&gt;() or &lt;a href=&quot;qgeoareamonitorsource#areaExited&quot;&gt;areaExited&lt;/a&gt;(). Multiple &lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; instances within the same application share the same active monitor objects.</source>
          <target state="translated">&lt;a href=&quot;qgeoareamonitorsource#startMonitoring&quot;&gt;startMonitoring&lt;/a&gt; ()을 통해 활성 모니터가 시작되었습니다 . 소스 객체는 &lt;a href=&quot;qgeoareamonitorsource#areaEntered&quot;&gt;areaEntered&lt;/a&gt; () 또는 &lt;a href=&quot;qgeoareamonitorsource#areaExited&quot;&gt;areaExited&lt;/a&gt; () 와 같은 필요한 신호를 방출합니다 . 동일한 애플리케이션 내의 여러 &lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; 인스턴스는 동일한 활성 모니터 오브젝트를 공유합니다.</target>
        </trans-unit>
        <trans-unit id="04574181d82f93d6c2ad9b3b6f32e4877acd2777" translate="yes" xml:space="preserve">
          <source>An active window is a visible top-level window that has the keyboard input focus.</source>
          <target state="translated">활성 창은 키보드 입력 포커스가있는 보이는 최상위 창입니다.</target>
        </trans-unit>
        <trans-unit id="f18d3a10b5213f4a97e63797f5f00ba634f4c42e" translate="yes" xml:space="preserve">
          <source>An added benefit of these three methods is that it's not necessary to implement the template from scratch.</source>
          <target state="translated">이 세 가지 방법의 또 다른 이점은 템플릿을 처음부터 구현할 필요가 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="298eb5c1236aef2bd46edfce9a660180c12548cb" translate="yes" xml:space="preserve">
          <source>An additional feature of the &lt;code&gt;domXml()&lt;/code&gt; function is that, if it returns an empty string, the widget will not be installed in</source>
          <target state="translated">&lt;code&gt;domXml()&lt;/code&gt; 함수 의 추가 기능은 빈 문자열을 반환하면 위젯이 설치되지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fddf7cac57def86f09b5b63b89aaf9408375d7d1" translate="yes" xml:space="preserve">
          <source>An advanced feature of &lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt; is the ability to define functions in the fragment shader that reimplement the lighting equations that are used to calculate the fragment color. A light processor function, when present, is called once per each light in the scene, for each fragment. There is a dedicated function for different light types, as well as the ambient and specular contribution. When no corresponding light processor function is present, the standard calculations are used, just like a &lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt; would do. When a light processor is present, but the function body is empty, it means there will be no contribution from a given type of lights in the scene.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt; 의 고급 기능은 조각 색상을 계산하는 데 사용되는 조명 방정식을 다시 구현하는 조각 셰이더에서 함수를 정의하는 기능입니다. 라이트 프로세서 함수가있는 경우 각 조각에 대해 장면의 각 라이트마다 한 번씩 호출됩니다. 다양한 조명 유형과 주변 및 반사 기여도에 대한 전용 기능이 있습니다. 해당하는 라이트 프로세서 기능이 없으면 &lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt; 처럼 표준 계산이 사용됩니다 . 라이트 프로세서가 있지만 함수 본체가 비어있는 경우 장면에 지정된 유형의 라이트가 기여하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="02de926884642866367acee40a6777438e3703ce" translate="yes" xml:space="preserve">
          <source>An affine matrix is a 4x4 matrix with row 3 equal to (0, 0, 0, 1), e.g. no projective coefficients.</source>
          <target state="translated">아핀 행렬은 행 3이 (0, 0, 0, 1)과 같은 4x4 행렬로, 예를 들어 투영 계수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="328b3ad462233296ffece216c6704bb9db8581ac" translate="yes" xml:space="preserve">
          <source>An airbrush</source>
          <target state="translated">에어 브러시</target>
        </trans-unit>
        <trans-unit id="55eb9726a34c374b4d3bc22d9192ca5b08c53f8f" translate="yes" xml:space="preserve">
          <source>An alert of unknown level of severity.</source>
          <target state="translated">알 수없는 심각도 수준의 경고입니다.</target>
        </trans-unit>
        <trans-unit id="63f6ec32ed396d828f9dad312673e791cbc82735" translate="yes" xml:space="preserve">
          <source>An alias for WiFi.</source>
          <target state="translated">WiFi의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="e422de3ae68424d4ce2593ab78e3bdaa405ecb37" translate="yes" xml:space="preserve">
          <source>An alias to ByteArray.</source>
          <target state="translated">ByteArray의 별명입니다.</target>
        </trans-unit>
        <trans-unit id="220893ad6f76b6d5dbe9198f2c3f0069e0aeab83" translate="yes" xml:space="preserve">
          <source>An alias to Float16.</source>
          <target state="translated">Float16의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="b83181f382d08143ead32e05b2d658c53ce748ae" translate="yes" xml:space="preserve">
          <source>An alias to String</source>
          <target state="translated">문자열의 별칭</target>
        </trans-unit>
        <trans-unit id="149899c8183007aaca3213541ffea0caeb7e830c" translate="yes" xml:space="preserve">
          <source>An alpha to be applied to the image. This value is multiplied by the value in the image, and the value in the color property.</source>
          <target state="translated">이미지에 적용 할 알파입니다. 이 값에는 이미지의 값과 color 속성의 값이 곱해집니다.</target>
        </trans-unit>
        <trans-unit id="4ea4c959294c69eada086a18467f3d0d11064b6c" translate="yes" xml:space="preserve">
          <source>An alternate alphabet, called &quot;base64url&quot;, which replaces two characters in the alphabet to be more friendly to URLs.</source>
          <target state="translated">&quot;base64url&quot;이라는 대체 알파벳은 알파벳의 두 문자를 대체하여 URL에 더 친숙합니다.</target>
        </trans-unit>
        <trans-unit id="34ac94fcc3f890b5ed519d07c207f51167e4159b" translate="yes" xml:space="preserve">
          <source>An alternative approach is to add spacing using &lt;a href=&quot;qgridlayout#addItem&quot;&gt;addItem&lt;/a&gt;() with a &lt;a href=&quot;qspaceritem&quot;&gt;QSpacerItem&lt;/a&gt;.</source>
          <target state="translated">다른 방법은 &lt;a href=&quot;qspaceritem&quot;&gt;QSpacerItem&lt;/a&gt; 과 함께 &lt;a href=&quot;qgridlayout#addItem&quot;&gt;addItem&lt;/a&gt; ()을 사용하여 간격을 추가 하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="68dee7e0d95f9364664c905afe36e2f6ef7bb528" translate="yes" xml:space="preserve">
          <source>An alternative approach is to use the</source>
          <target state="translated">다른 방법은</target>
        </trans-unit>
        <trans-unit id="bf4cfcaa75471668099220b285caa07e062a1ce0" translate="yes" xml:space="preserve">
          <source>An alternative approach is to use the &lt;code&gt;evdev&lt;/code&gt; keyboard handler's &lt;code&gt;grab&lt;/code&gt; parameter by passing &lt;code&gt;grab=1&lt;/code&gt; in &lt;code&gt;QT_QPA_EVDEV_KEYBOARD_PARAMETERS&lt;/code&gt;. This results in trying to get a grab on the input device. If the &lt;code&gt;grab&lt;/code&gt; is successful, no other components in the system receive events from it, as long as the Qt application is running. This approach is more suitable for applications that start remotely as it doesn't need access to the tty device.</source>
          <target state="translated">다른 방법은 &lt;code&gt;evdev&lt;/code&gt; &lt;code&gt;grab=1&lt;/code&gt; 을 전달 하여 evdev 키보드 핸들러의 &lt;code&gt;grab&lt;/code&gt; 매개 변수 를 사용하는 &lt;code&gt;QT_QPA_EVDEV_KEYBOARD_PARAMETERS&lt;/code&gt; 입니다. 이로 인해 입력 장치를 확보하려고합니다. 는 IF &lt;code&gt;grab&lt;/code&gt; 성공적으로 시스템의 다른 구성 요소는 한 Qt는 응용 프로그램이 실행되고, 그것에서 이벤트를 수신하지 않습니다. 이 접근 방식은 tty 장치에 액세스 할 필요가 없기 때문에 원격으로 시작하는 애플리케이션에 더 적합합니다.</target>
        </trans-unit>
        <trans-unit id="544366121c4ed24a7bab37bd75cfa0fa9e1ec5ed" translate="yes" xml:space="preserve">
          <source>An alternative approach to sorting is to disable sorting on the view and to impose a certain order to the user. This is done by explicitly calling &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() with the desired column and order as arguments on the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; (or on the original model if it implements &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;()). For example:</source>
          <target state="translated">정렬에 대한 다른 방법은보기에서 정렬을 비활성화하고 사용자에게 특정 순서를 적용하는 것입니다. &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; (또는 &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt; ()를 구현하는 경우 원래 모델 )에서 원하는 열과 순서로 &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt; ()를 명시 적으로 호출 하여이를 수행 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1739da937bc3373f091c4f0e5231f7c07d2a437e" translate="yes" xml:space="preserve">
          <source>An alternative approach to sorting is to disable sorting on the view and to impose a certain order to the user. This is done by explicitly calling &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() with the desired column and order as arguments on the QSortFilterProxyModel (or on the original model if it implements &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;()). For example:</source>
          <target state="translated">정렬에 대한 또 다른 접근 방식은 뷰에서 정렬을 비활성화하고 사용자에게 특정 순서를 부과하는 것입니다. 이는 QSortFilterProxyModel (또는 &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt; ()를 구현하는 경우 원래 모델에서)의 인수로 원하는 열과 순서를 사용하여 &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt; ()를 명시 적으로 호출하여 수행됩니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="e77e782971ba4c029b258ccc1efc3b4a4059ba08" translate="yes" xml:space="preserve">
          <source>An alternative identifier which identifies the place from the perspective of the specified provider.</source>
          <target state="translated">지정된 제공자의 관점에서 장소를 식별하는 대체 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="3cde85e64cefc7e6fc3755ade7fa0fa555d34004" translate="yes" xml:space="preserve">
          <source>An alternative is to call &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) or &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;setWindowModality&lt;/a&gt;(), then &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;(). Unlike &lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt;(), &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() returns control to the caller immediately. Calling &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) is especially useful for progress dialogs, where the user must have the ability to interact with the dialog, e.g. to cancel a long running operation. If you use &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() and &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) together to perform a long operation, you must call &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QApplication::processEvents&lt;/a&gt;() periodically during processing to enable the user to interact with the dialog. (See &lt;a href=&quot;qprogressdialog&quot;&gt;QProgressDialog&lt;/a&gt;.)</source>
          <target state="translated">대안은 &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt; (true) 또는 &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;setWindowModality&lt;/a&gt; () 를 호출 한 다음 &lt;a href=&quot;qwidget#show&quot;&gt;표시&lt;/a&gt; ()하는 것입니다. &lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt; () 와 달리 &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt; ()는 즉시 제어를 호출자에게 반환합니다. &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt; (true)을 호출 하면 진행률 대화 상자에 특히 유용합니다. 사용자는 대화 상자와 상호 작용할 수 있어야합니다 (예 : 장기 실행 작업 취소). 당신이 사용하는 경우 &lt;a href=&quot;qwidget#show&quot;&gt;쇼&lt;/a&gt; ()와 &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt; 긴 작업을 수행하기 위해 함께 (true)를, 당신은 호출해야합니다 &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;의 QApplication :: processEvents를&lt;/a&gt; 정기적으로 대화와 상호 작용하는 사용자 수 있도록 처리 중 (). ( &lt;a href=&quot;qprogressdialog&quot;&gt;QProgressDialog&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="a118ac9f67ce4bfa940b7e71fc16d0af9fe0943b" translate="yes" xml:space="preserve">
          <source>An alternative is to call &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) or &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;setWindowModality&lt;/a&gt;(), then &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;(). Unlike &lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt;(), &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() returns control to the caller immediately. Calling &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) is especially useful for progress dialogs, where the user must have the ability to interact with the dialog, e.g. to cancel a long running operation. If you use &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() and &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) together to perform a long operation, you must call &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication::processEvents&lt;/a&gt;() periodically during processing to enable the user to interact with the dialog. (See &lt;a href=&quot;qprogressdialog&quot;&gt;QProgressDialog&lt;/a&gt;.)</source>
          <target state="translated">대안은 &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt; (true) 또는 &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;setWindowModality&lt;/a&gt; () 를 호출 한 다음 &lt;a href=&quot;qwidget#show&quot;&gt;표시&lt;/a&gt; ()하는 것입니다. &lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt; () 와 달리 &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt; ()는 호출자에게 즉시 제어를 반환합니다. &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt; (true) 호출 은 특히 ​​사용자가 대화 상자와 상호 작용할 수 있어야하는 진행률 대화 상자 (예 : 장기 실행 작업 취소)에 유용합니다. 당신이 사용하는 경우 &lt;a href=&quot;qwidget#show&quot;&gt;쇼&lt;/a&gt; ()와 &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt; 긴 작업을 수행하기 위해 함께 (true)를, 당신은 호출해야 &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication :: processEvents를&lt;/a&gt; 정기적으로 대화와 상호 작용하는 사용자 수 있도록 처리 중 (). ( &lt;a href=&quot;qprogressdialog&quot;&gt;QProgressDialog&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="5f2ed550578681081c551aa46c2bf02c2872ddb3" translate="yes" xml:space="preserve">
          <source>An alternative is to use &lt;a href=&quot;qlatin1char&quot;&gt;QLatin1Char&lt;/a&gt;.</source>
          <target state="translated">대안은 &lt;a href=&quot;qlatin1char&quot;&gt;QLatin1Char&lt;/a&gt; 을 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="fe59449fffee047bc144df40d5ea59f40e7f675d" translate="yes" xml:space="preserve">
          <source>An alternative method for constructing a &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; object is by specifying the locale name.</source>
          <target state="translated">&lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; 오브젝트 를 구성하는 대체 방법 은 로케일 이름을 지정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c66edbe489d15ee5d5a4427237e43aed09febb0a" translate="yes" xml:space="preserve">
          <source>An alternative method for constructing a QLocale object is by specifying the locale name.</source>
          <target state="translated">QLocale 오브젝트를 구성하는 다른 방법은 로케일 이름을 지정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bb6fff32e1db824f79efa08270713207ef5302a0" translate="yes" xml:space="preserve">
          <source>An alternative to Qt's &lt;code&gt;foreach&lt;/code&gt; loop is the range-based &lt;code&gt;for&lt;/code&gt; that is part of C++ 11 and newer. However, keep in mind that the range-based &lt;code&gt;for&lt;/code&gt; might force a Qt container to &lt;a href=&quot;implicit-sharing&quot;&gt;detach&lt;/a&gt;, whereas &lt;code&gt;foreach&lt;/code&gt; would not. But using &lt;code&gt;foreach&lt;/code&gt; always copies the container, which is usually not cheap for STL containers. If in doubt, prefer &lt;code&gt;foreach&lt;/code&gt; for Qt containers, and range based &lt;code&gt;for&lt;/code&gt; for STL ones.</source>
          <target state="translated">Qt의 &lt;code&gt;foreach&lt;/code&gt; 루프에 대한 대안 은 C ++ 11 이상에 포함 된 범위 기반 &lt;code&gt;for&lt;/code&gt; . 그러나 범위 기반 &lt;code&gt;for&lt;/code&gt; 는 Qt 컨테이너가 &lt;a href=&quot;implicit-sharing&quot;&gt;분리&lt;/a&gt; 되도록 강제 할 수 있지만 &lt;code&gt;foreach&lt;/code&gt; 는 그렇지 않을 수 있습니다. 그러나 &lt;code&gt;foreach&lt;/code&gt; 를 사용하면 항상 컨테이너가 복사되며 일반적으로 STL 컨테이너에는 저렴하지 않습니다. 의심스러운 경우 선호 &lt;code&gt;foreach&lt;/code&gt; 는 Qt는 용기, 그리고 기반의 수신 거리 &lt;code&gt;for&lt;/code&gt; STL의 사람을위한.</target>
        </trans-unit>
        <trans-unit id="e222f6c2cd8e3b971968c5be01a32db77cff5382" translate="yes" xml:space="preserve">
          <source>An alternative to Qt's &lt;code&gt;foreach&lt;/code&gt; loop is the range-based &lt;code&gt;for&lt;/code&gt; that is part of C++ 11 and newer. However, keep in mind that the range-based &lt;code&gt;for&lt;/code&gt; might force a Qt container to &lt;a href=&quot;implicit-sharing#&quot;&gt;detach&lt;/a&gt;, whereas &lt;code&gt;foreach&lt;/code&gt; would not. But using &lt;code&gt;foreach&lt;/code&gt; always copies the container, which is usually not cheap for STL containers. If in doubt, prefer &lt;code&gt;foreach&lt;/code&gt; for Qt containers, and range based &lt;code&gt;for&lt;/code&gt; for STL ones.</source>
          <target state="translated">Qt의 &lt;code&gt;foreach&lt;/code&gt; 루프에 대한 대안 은 C ++ 11 이상에 &lt;code&gt;for&lt;/code&gt; 범위 기반 입니다 . 그러나 명심 범위 기반 &lt;code&gt;for&lt;/code&gt; 에 Qt는 컨테이너 강제 할 수 &lt;a href=&quot;implicit-sharing#&quot;&gt;분리를&lt;/a&gt; 하는 반면, &lt;code&gt;foreach&lt;/code&gt; 문이 없다. 그러나 &lt;code&gt;foreach&lt;/code&gt; 를 사용 하면 컨테이너가 항상 복사되므로 STL 컨테이너에 비해 저렴하지 않습니다. 의심스러운 경우 선호 &lt;code&gt;foreach&lt;/code&gt; 는 Qt는 용기, 그리고 기반의 수신 거리 &lt;code&gt;for&lt;/code&gt; STL의 사람을위한.</target>
        </trans-unit>
        <trans-unit id="b2dd90e49ca3dacccc5f9af5a78593837f664a0c" translate="yes" xml:space="preserve">
          <source>An alternative to Qt's &lt;code&gt;foreach&lt;/code&gt; loop is the range-based &lt;code&gt;for&lt;/code&gt; that is part of C++11 and newer. However, keep in mind that the range-based &lt;code&gt;for&lt;/code&gt; might force a Qt container to &lt;a href=&quot;implicit-sharing&quot;&gt;detach&lt;/a&gt;, whereas &lt;code&gt;foreach&lt;/code&gt; would not. But using &lt;code&gt;foreach&lt;/code&gt; always copies the container, which is usually not cheap for STL containers. If in doubt, prefer &lt;code&gt;foreach&lt;/code&gt; for Qt containers, and range based &lt;code&gt;for&lt;/code&gt; for STL ones.</source>
          <target state="translated">Qt의 &lt;code&gt;foreach&lt;/code&gt; 루프에 대한 대안 은 C ++ 11 이상에 포함 된 범위 기반 &lt;code&gt;for&lt;/code&gt; . 그러나 범위 기반 &lt;code&gt;for&lt;/code&gt; 는 Qt 컨테이너가 &lt;a href=&quot;implicit-sharing&quot;&gt;분리&lt;/a&gt; 되도록 강제 할 수 있지만 &lt;code&gt;foreach&lt;/code&gt; 는 그렇지 않습니다. 그러나 &lt;code&gt;foreach&lt;/code&gt; 를 사용하면 항상 컨테이너를 복사하므로 일반적으로 STL 컨테이너에는 저렴하지 않습니다. 의심스러운 경우 선호 &lt;code&gt;foreach&lt;/code&gt; 는 Qt는 용기, 그리고 기반의 수신 거리 &lt;code&gt;for&lt;/code&gt; STL의 사람을위한.</target>
        </trans-unit>
        <trans-unit id="f41e44de785b74371efa43a77f4260c2c3ae1d05" translate="yes" xml:space="preserve">
          <source>An alternative to calling this function is to pass this widget to the layout's constructor.</source>
          <target state="translated">이 함수를 호출하는 대신이 위젯을 레이아웃 생성자로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7af9da31b563f6a50234800bc6ab68ae07dee02b" translate="yes" xml:space="preserve">
          <source>An alternative to manual layout is to write your own layout manager by subclassing &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;Flow Layout&lt;/a&gt; examples show how to do this.</source>
          <target state="translated">수동 레이아웃의 대안은 &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; 을 서브 클래 싱하여 자체 레이아웃 관리자를 작성하는 것 입니다. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;테두리 레이아웃&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;플로우 레이아웃&lt;/a&gt; 예는이 작업을 수행하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5e86185aaff18087b00fc15485e0b3dd9ed76d27" translate="yes" xml:space="preserve">
          <source>An alternative to manual layout is to write your own layout manager by subclassing &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-borderlayout-example.html&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-flowlayout-example.html&quot;&gt;Flow Layout&lt;/a&gt; examples show how to do this.</source>
          <target state="translated">수동 레이아웃의 대안은 &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; 을 서브 클래 싱하여 자신 만의 레이아웃 관리자를 작성하는 것 입니다. &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-borderlayout-example.html&quot;&gt;테두리 레이아웃&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-flowlayout-example.html&quot;&gt;플로우 레이아웃&lt;/a&gt; 예는이 작업을 수행하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="226b2af827c374a6992feb245628ce2049b3808c" translate="yes" xml:space="preserve">
          <source>An alternative to manual layout is to write your own layout manager by subclassing &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;. The &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-layouts-borderlayout-example.html&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-layouts-flowlayout-example.html&quot;&gt;Flow Layout&lt;/a&gt; examples show how to do this.</source>
          <target state="translated">수동 레이아웃의 대안은 &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; 을 서브 클래 싱하여 자신 만의 레이아웃 관리자를 작성하는 것 입니다. &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-layouts-borderlayout-example.html&quot;&gt;테두리 레이아웃&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-layouts-flowlayout-example.html&quot;&gt;플로우 레이아웃&lt;/a&gt; 예는이 작업을 수행하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a749763a0640301ed0fb83ee9865babcdd14e748" translate="yes" xml:space="preserve">
          <source>An alternative to reserve() is calling &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;(). Whether or not that is faster than reserve() depends on the element type, because &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;() default-constructs all elements, and requires assignment to existing entries rather than calling &lt;a href=&quot;qvector#append&quot;&gt;append&lt;/a&gt;(), which copy- or move-constructs. For simple types, like &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;, &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;() is typically faster, but for anything more complex, you should prefer reserve().</source>
          <target state="translated">reserve ()의 대안은 &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt; ()를 호출하는 것 입니다. &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt; ()는 기본적으로 모든 요소를 ​​구성하고 copy 또는 move-constructs 인 &lt;a href=&quot;qvector#append&quot;&gt;append&lt;/a&gt; ()를 호출하는 대신 기존 항목에 지정해야 하므로 reserve ()보다 빠른지 여부는 요소 유형에 따라 다릅니다 . 같은 단순한 유형의 경우, &lt;code&gt;int&lt;/code&gt; 또는 &lt;code&gt;double&lt;/code&gt; , &lt;a href=&quot;qvector#resize&quot;&gt;크기 조정&lt;/a&gt; () 일반적으로 빠르지 만, 더 복잡한 아무것도, 당신이 예약을 선호한다 ().</target>
        </trans-unit>
        <trans-unit id="28c7487d190c339a6df6ddfd7494810a675e0b7d" translate="yes" xml:space="preserve">
          <source>An alternative to setting an application wide proxy is to specify the proxy for individual sockets using &lt;a href=&quot;qabstractsocket#setProxy&quot;&gt;QAbstractSocket::setProxy&lt;/a&gt;() and &lt;a href=&quot;qtcpserver#setProxy&quot;&gt;QTcpServer::setProxy&lt;/a&gt;(). In this way, it is possible to disable the use of a proxy for specific sockets using the following code:</source>
          <target state="translated">응용 프로그램 전체 프록시를 설정하는 대신 &lt;a href=&quot;qabstractsocket#setProxy&quot;&gt;QAbstractSocket :: setProxy&lt;/a&gt; () 및 &lt;a href=&quot;qtcpserver#setProxy&quot;&gt;QTcpServer :: setProxy&lt;/a&gt; ()를 사용하여 개별 소켓에 대한 프록시를 지정할 수 있습니다. 이런 식으로 다음 코드를 사용하여 특정 소켓에 프록시 사용을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fff6ab5e2be4bc97645e75939d6ad643d610f391" translate="yes" xml:space="preserve">
          <source>An alternative to setting the DBus AT-SPI properties is to set the QT_LINUX_ACCESSIBILITY_ALWAYS_ON environment variable.</source>
          <target state="translated">DBus AT-SPI 특성 설정에 대한 대안은 QT_LINUX_ACCESSIBILITY_ALWAYS_ON 환경 변수를 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ab95bc6b5ca78da636a530c17ab55ceefa5c025f" translate="yes" xml:space="preserve">
          <source>An alternative to the default &lt;code&gt;dynamic&lt;/code&gt; OpenGL builds is to depend directly on opengl32.dll. For this mode, pass pass the command line options &lt;code&gt;-opengl desktop&lt;/code&gt; to the configure script.</source>
          <target state="translated">기본 &lt;code&gt;dynamic&lt;/code&gt; OpenGL 빌드에 대한 대안 은 opengl32.dll에 직접 의존하는 것입니다. 이 모드의 경우 명령 줄 옵션 &lt;code&gt;-opengl desktop&lt;/code&gt; 을 configure 스크립트에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="8b3a7990cbf200360451c22b94b03657580c9d8d" translate="yes" xml:space="preserve">
          <source>An alternative to using &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; is to call &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;() for your object and reimplement the &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;() event handler in your class (which must inherit &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;). The disadvantage is that &lt;a href=&quot;qtimer#timerEvent&quot;&gt;timerEvent&lt;/a&gt;() does not support such high-level features as single-shot timers or signals.</source>
          <target state="translated">&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 을 사용하는 대신 객체에 대해 &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject :: startTimer&lt;/a&gt; () 를 호출 하고 클래스에서 &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject :: timerEvent&lt;/a&gt; () 이벤트 핸들러를 다시 구현할 수 있습니다 ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 를 상속해야 함 ). 단점은 &lt;a href=&quot;qtimer#timerEvent&quot;&gt;timerEvent&lt;/a&gt; ()가 싱글 샷 타이머 또는 신호와 같은 고급 기능을 지원하지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d2c086a13b06af125811695cdf7e702571eb16c8" translate="yes" xml:space="preserve">
          <source>An alternative to using QTimer is to call &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;() for your object and reimplement the &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;() event handler in your class (which must inherit &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;). The disadvantage is that &lt;a href=&quot;qtimer#timerEvent&quot;&gt;timerEvent&lt;/a&gt;() does not support such high-level features as single-shot timers or signals.</source>
          <target state="translated">QTimer를 사용하는 대신 호출하는 것입니다 &lt;a href=&quot;qobject#startTimer&quot;&gt;있는 QObject ::가 startTimer을&lt;/a&gt; 개체에 대한 ()과 재 구현 &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject를 :: TimerEvent를&lt;/a&gt; 클래스에서 () 이벤트 핸들러를 (상속 할 필요가 &lt;a href=&quot;qobject&quot;&gt;있는 QObject를&lt;/a&gt; ). 단점은 &lt;a href=&quot;qtimer#timerEvent&quot;&gt;timerEvent&lt;/a&gt; ()가 싱글 샷 타이머 또는 신호와 같은 고급 기능을 지원하지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9f2b2b53eead3c7afaba0a5d7bb78928056f511d" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Most &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; member functions take an index as their first parameter, making it possible to access, insert, and remove items without using iterators.</source>
          <target state="translated">반복자를 사용하는 대신 인덱스 위치를 사용할 수 있습니다. 대부분의 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 멤버 함수는 인덱스를 첫 번째 매개 변수로 사용하므로 반복자를 사용하지 않고 항목에 액세스, 삽입 및 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="addb35b329e9cdad45cd0a747e4b90f71ee62da7" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Most &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; member functions take an index as their first parameter, making it possible to access, modify, and remove items without using iterators.</source>
          <target state="translated">반복자를 사용하는 대신 인덱스 위치를 사용할 수 있습니다. 대부분의 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 멤버 함수는 인덱스를 첫 번째 매개 변수로 사용하므로 반복자를 사용하지 않고 항목에 액세스하고 수정하고 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77b347db4bedae4e238917d7c161cad8fec7d8b9" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Most &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; member functions take an index as their first parameter, making it possible to access, insert, and remove items without using iterators.</source>
          <target state="translated">반복자를 사용하는 대신 인덱스 위치를 사용할 수 있습니다. 대부분의 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 멤버 함수는 인덱스를 첫 번째 매개 변수로 사용하므로 반복자를 사용하지 않고도 항목에 액세스하고 삽입하고 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2439f811211113a22ffb83c8e69b1ad3ea57dca3" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Some &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; member functions take an index as their first parameter, making it possible to access results without using iterators.</source>
          <target state="translated">반복자를 사용하는 대신 인덱스 위치를 사용할 수 있습니다. 일부 &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; 멤버 함수는 인덱스를 첫 번째 매개 변수로 사용하므로 반복자를 사용하지 않고 결과에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aa1579f7317a1e21a030baf4d98ab16321fad33" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Some &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; member functions take an index as their first parameter, making it possible to access results without using iterators.</source>
          <target state="translated">반복기 사용에 대한 대안은 인덱스 위치를 사용하는 것입니다. 일부 &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; 멤버 함수는 인덱스를 첫 번째 매개 변수로 사용하므로 반복기를 사용하지 않고도 결과에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e2e6f14e57176b662466cb97cdfbe352a07fd3c" translate="yes" xml:space="preserve">
          <source>An alternative way of configuring the default filter is via &lt;a href=&quot;qloggingcategory#setFilterRules&quot;&gt;setFilterRules&lt;/a&gt;().</source>
          <target state="translated">기본 필터를 구성하는 다른 방법은 &lt;a href=&quot;qloggingcategory#setFilterRules&quot;&gt;setFilterRules&lt;/a&gt; ()를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1aaa0f937c6df87d0d1ee8cb66eebde56e19608f" translate="yes" xml:space="preserve">
          <source>An alternative way to attach meta-data is to use the following syntax:</source>
          <target state="translated">메타 데이터를 첨부하는 다른 방법은 다음 구문을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fbe350d116e8ada0dc5f4a183a3feb610d7fb0fb" translate="yes" xml:space="preserve">
          <source>An alternative way to enter &quot;What's This?&quot; mode is to call &lt;a href=&quot;qwhatsthis#createAction&quot;&gt;createAction&lt;/a&gt;(), and add the returned &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; to either a menu or a tool bar. By invoking this context help action (in the picture below, the button with the arrow and question mark icon) the user switches into &quot;What's This?&quot; mode. If they now click on a widget the appropriate help text is shown. The mode is left when help is given or when the user presses Esc.</source>
          <target state="translated">&quot;What 's This?&quot;를 입력하는 다른 방법입니다. mode는 &lt;a href=&quot;qwhatsthis#createAction&quot;&gt;createAction&lt;/a&gt; () 을 호출 하고 반환 된 &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; 을 메뉴 나 도구 모음에 추가하는 것입니다. 이 상황에 맞는 도움말 작업 (아래 그림에서 화살표 및 물음표 아이콘이있는 단추)을 호출하면 사용자가 &quot;What 's This?&quot;로 전환됩니다. 양식. 이제 위젯을 클릭하면 적절한 도움말 텍스트가 표시됩니다. 도움말이 제공되거나 사용자가 Esc 키를 누르면 모드가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="6807e345b243c543a083605f3dee5989a259574c" translate="yes" xml:space="preserve">
          <source>An alternative way to specify hard-coded key codes is to use the Unicode code point of the character; for example, 'A' gives the same key sequence as &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key_A&lt;/a&gt;.</source>
          <target state="translated">하드 코드 된 키 코드를 지정하는 다른 방법은 문자의 유니 코드 코드 포인트를 사용하는 것입니다. 예를 들어, 'A'는 &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key_A&lt;/a&gt; 와 동일한 키 시퀀스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4b009e440ce09b0efb0e7ce2915abbcd0ba69de6" translate="yes" xml:space="preserve">
          <source>An alternative would be to bypass the window manager entirely and create a window with the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::X11BypassWindowManagerHint&lt;/a&gt; flag. This has other severe problems though, like totally broken keyboard focus and very strange effects on desktop changes or when the user raises other windows.</source>
          <target state="translated">다른 방법은 창 관리자를 완전히 무시하고 &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: X11BypassWindowManagerHint&lt;/a&gt; 플래그를 사용하여 창을 작성하는 것 입니다. 키보드 포커스가 완전히 깨지고 데스크탑 변경에 대한 이상한 효과 또는 사용자가 다른 창을 올릴 때와 같은 다른 심각한 문제가 있습니다.</target>
        </trans-unit>
        <trans-unit id="411b8039bc3b3df8e558a7892915c0bbd0e74475" translate="yes" xml:space="preserve">
          <source>An amount consisting of up to 3 numbers before the decimal point, and 1 to 2 after the decimal point:</source>
          <target state="translated">소수점 앞에 최대 3 개의 숫자와 소수점 뒤에 1에서 2까지의 양 :</target>
        </trans-unit>
        <trans-unit id="333fc58da331895121f6102d0311442d8c30d3b2" translate="yes" xml:space="preserve">
          <source>An anchor of an element in the viewport for which the form validation message should be displayed.</source>
          <target state="translated">양식 유효성 검사 메시지가 표시 될 뷰포트의 요소 앵커입니다.</target>
        </trans-unit>
        <trans-unit id="4822a3484a91d2af28473944190385a6153d3d6d" translate="yes" xml:space="preserve">
          <source>An ancient Roman calendar with too few leap years.</source>
          <target state="translated">윤년이 너무 적은 고대 로마 달력.</target>
        </trans-unit>
        <trans-unit id="5d037af561fd700f42cd5eb3661a2090473e4101" translate="yes" xml:space="preserve">
          <source>An angular axis, where the values are placed around the chart.</source>
          <target state="translated">값이 차트 주위에 배치되는 각도 축입니다.</target>
        </trans-unit>
        <trans-unit id="a2c23474949a2bf2f0748fd542026d8152e7aeea" translate="yes" xml:space="preserve">
          <source>An animation can loop any number of times by setting the &lt;a href=&quot;qabstractanimation#loopCount-prop&quot;&gt;loopCount&lt;/a&gt; property. When an animation's current time reaches its &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt;(), it will reset the current time and keep running. A loop count of 1 (the default value) means that the animation will run one time. Note that a duration of -1 means that the animation will run until stopped; the current time will increase indefinitely. When the current time equals &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt;() and the animation is in its final loop, the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt; state is entered, and the &lt;a href=&quot;qabstractanimation#finished&quot;&gt;finished&lt;/a&gt;() signal is emitted.</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation#loopCount-prop&quot;&gt;loopCount&lt;/a&gt; 속성 을 설정하여 애니메이션을 여러 번 반복 할 수 있습니다. 애니메이션의 현재 시간이 &lt;a href=&quot;qabstractanimation#duration&quot;&gt;지속 시간&lt;/a&gt; ()에 도달하면 현재 시간이 재설정되고 계속 실행됩니다. 루프 카운트 1 (기본값)은 애니메이션이 한 번만 실행됨을 의미합니다. 지속 시간이 -1이면 애니메이션이 중지 될 때까지 실행됩니다. 현재 시간이 무한정 증가합니다. 현재 시간이 &lt;a href=&quot;qabstractanimation#duration&quot;&gt;지속 시간&lt;/a&gt; ()과 같고 애니메이션이 최종 루프 인 경우 &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;중지&lt;/a&gt; 상태가되고 &lt;a href=&quot;qabstractanimation#finished&quot;&gt;완료&lt;/a&gt; () 신호가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="93af4743b154a1700637b663d99e42509c3dc74c" translate="yes" xml:space="preserve">
          <source>An animation group is a container for animations (subclasses of &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;). A group is usually responsible for managing the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;state&lt;/a&gt; of its animations, i.e., it decides when to start, stop, resume, and pause them. Currently, Qt provides two such groups: &lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; and &lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;. Look up their class descriptions for details.</source>
          <target state="translated">애니메이션 그룹은 애니메이션 컨테이너 ( &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation의&lt;/a&gt; 서브 클래스 )입니다. 그룹은 일반적으로 애니메이션 &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;상태&lt;/a&gt; 를 관리합니다 . 즉, 애니메이션 시작, 중지, 재개 및 일시 정지를 결정합니다. 현재 Qt는 &lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; 과 &lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup의&lt;/a&gt; 두 그룹을 제공합니다 . 자세한 내용은 수업 설명을 찾아보십시오.</target>
        </trans-unit>
        <trans-unit id="406e8db23f3056daa560e78ef360163a763b6b9a" translate="yes" xml:space="preserve">
          <source>An application can have only &lt;b&gt;one&lt;/b&gt; menu bar, but &lt;b&gt;several&lt;/b&gt; toolbars.</source>
          <target state="translated">응용 프로그램은 &lt;b&gt;하나의&lt;/b&gt; 메뉴 표시 줄 만 가질 수 있지만 &lt;b&gt;여러&lt;/b&gt; 도구 모음을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d5bc89be862ea45a7acd1f4ae61342f68703fe8" translate="yes" xml:space="preserve">
          <source>An application can load pages into the &lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineView&lt;/a&gt;, using either the &lt;a href=&quot;qml-qtwebengine-webengineview#url-prop&quot;&gt;url&lt;/a&gt; property or the &lt;a href=&quot;qml-qtwebengine-webengineview#loadHtml-method&quot;&gt;loadHtml&lt;/a&gt; method and navigate within the view's session history. The GET method is always used to load URLs.</source>
          <target state="translated">응용 프로그램은에 페이지를로드 할 수 있습니다 &lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineView&lt;/a&gt; 중 하나를 사용하여 &lt;a href=&quot;qml-qtwebengine-webengineview#url-prop&quot;&gt;URL의&lt;/a&gt; 속성 또는 &lt;a href=&quot;qml-qtwebengine-webengineview#loadHtml-method&quot;&gt;loadHtml의&lt;/a&gt; 뷰의 세션 기록에서 방법 이동합니다. GET 메소드는 항상 URL을로드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ade2de2d29bfdf43cace07ae637b3d7170bf1820" translate="yes" xml:space="preserve">
          <source>An application can load pages into the WebEngineView, using either the &lt;a href=&quot;qml-qtwebengine-webengineview#url-prop&quot;&gt;url&lt;/a&gt; property or the &lt;a href=&quot;qml-qtwebengine-webengineview#loadHtml-method&quot;&gt;loadHtml&lt;/a&gt; method and navigate within the view's session history. The GET method is always used to load URLs.</source>
          <target state="translated">애플리케이션은 &lt;a href=&quot;qml-qtwebengine-webengineview#url-prop&quot;&gt;url&lt;/a&gt; 속성 또는 &lt;a href=&quot;qml-qtwebengine-webengineview#loadHtml-method&quot;&gt;loadHtml&lt;/a&gt; 메서드를 사용 하여 WebEngineView에 페이지를로드 하고보기의 세션 기록 내에서 탐색 할 수 있습니다. GET 메서드는 항상 URL을로드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a0104e5ec75e1fef59d2670b1d73e35613d1a28a" translate="yes" xml:space="preserve">
          <source>An application can use Jump Lists to provide users with faster access to files or to display shortcuts to tasks or commands.</source>
          <target state="translated">응용 프로그램은 점프 목록을 사용하여 파일에 더 빠르게 액세스하거나 작업 또는 명령에 대한 바로 가기를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9095ad4edc124512b65a112bda5457072127adeb" translate="yes" xml:space="preserve">
          <source>An application has an &lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;applicationDirPath&lt;/a&gt;() and an &lt;a href=&quot;qcoreapplication#applicationFilePath&quot;&gt;applicationFilePath&lt;/a&gt;(). Library paths (see &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;) can be retrieved with &lt;a href=&quot;qcoreapplication#libraryPaths&quot;&gt;libraryPaths&lt;/a&gt;() and manipulated by &lt;a href=&quot;qcoreapplication#setLibraryPaths&quot;&gt;setLibraryPaths&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#addLibraryPath&quot;&gt;addLibraryPath&lt;/a&gt;(), and &lt;a href=&quot;qcoreapplication#removeLibraryPath&quot;&gt;removeLibraryPath&lt;/a&gt;().</source>
          <target state="translated">응용 프로그램에는 &lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;applicationDirPath&lt;/a&gt; () 및 &lt;a href=&quot;qcoreapplication#applicationFilePath&quot;&gt;applicationFilePath&lt;/a&gt; ()가 있습니다. 라이브러리 경로 ( &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt; 참조 )는 &lt;a href=&quot;qcoreapplication#libraryPaths&quot;&gt;libraryPaths&lt;/a&gt; ()를 사용하여 검색 하고 &lt;a href=&quot;qcoreapplication#setLibraryPaths&quot;&gt;setLibraryPaths&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#addLibraryPath&quot;&gt;addLibraryPath&lt;/a&gt; () 및 &lt;a href=&quot;qcoreapplication#removeLibraryPath&quot;&gt;removeLibraryPath&lt;/a&gt; ()로 조작 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="efc5c5460ee10d22d60dadf0b653520db3a4f0d7" translate="yes" xml:space="preserve">
          <source>An application manager would typically implement additional features such as application life cycle, virtual keyboard input, security, and Inter-Process Communication (IPC). Qt provides the APIs that can be used to develop the remaining parts of an application manager in other modules. The &lt;a href=&quot;https://www.qt.io/qt-automotive-suite/&quot;&gt;Qt Automotive Suite&lt;/a&gt; provides &lt;a href=&quot;https://doc.qt.io/QtApplicationManager&quot;&gt;Qt Application Manager&lt;/a&gt;, which is a complete application manager that includes a compositor developed using Qt Wayland Compositor.</source>
          <target state="translated">응용 프로그램 관리자는 일반적으로 응용 프로그램 수명주기, 가상 키보드 입력, 보안 및 IPC (Inter-Process Communication)와 같은 추가 기능을 구현합니다. Qt는 다른 모듈에서 애플리케이션 관리자의 나머지 부분을 개발하는 데 사용할 수있는 API를 제공합니다. &lt;a href=&quot;https://www.qt.io/qt-automotive-suite/&quot;&gt;Qt는 자동차 Suite는&lt;/a&gt; 제공 &lt;a href=&quot;https://doc.qt.io/QtApplicationManager&quot;&gt;Qt는 응용 프로그램 관리자&lt;/a&gt; Qt는 WAYLAND 컴포 지터를 사용하여 개발 된 컴포 지터를 포함하는 완벽한 애플리케이션 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="844d2ab68aad7cece06433c28212175e038df3f3" translate="yes" xml:space="preserve">
          <source>An application manager would typically implement additional features such as application life cycle, virtual keyboard input, security, and Inter-Process Communication (IPC). Qt provides the APIs that can be used to develop the remaining parts of an application manager in other modules. The &lt;a href=&quot;https://www.qt.io/qt-automotive-suite/&quot;&gt;Qt Automotive Suite&lt;/a&gt; provides Qt Application Manager, which is a complete application manager that includes a compositor developed using Qt Wayland Compositor.</source>
          <target state="translated">응용 프로그램 관리자는 일반적으로 응용 프로그램 수명주기, 가상 키보드 입력, 보안 및 프로세스 간 통신 (IPC)과 같은 추가 기능을 구현합니다. Qt는 다른 모듈에서 응용 프로그램 관리자의 나머지 부분을 개발하는 데 사용할 수있는 API를 제공합니다. &lt;a href=&quot;https://www.qt.io/qt-automotive-suite/&quot;&gt;Qt는 자동차 Suite는&lt;/a&gt; Qt는 WAYLAND 컴포 지터를 사용하여 개발 된 컴포 지터를 포함하는 완벽한 애플리케이션 관리자입니다 Qt는 응용 프로그램 관리자를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c55bfece566c1574ef38c819b6dd404851f6d6c1" translate="yes" xml:space="preserve">
          <source>An application often has multiple undo stacks, one for each opened document. At the same time, an application usually has one undo action and one redo action, which triggers undo or redo in the active document.</source>
          <target state="translated">응용 프로그램에는 종종 열린 각 문서마다 하나씩 여러 개의 실행 취소 스택이 있습니다. 동시에 응용 프로그램에는 일반적으로 실행 취소 작업과 다시 실행 작업이 하나씩있어 활성 문서에서 실행 취소 또는 다시 실행을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="95b33de46c65604f741a09af5c371b9ca2e5e9c0" translate="yes" xml:space="preserve">
          <source>An application often has multiple undo stacks, one for each opened document. The active stack is the one associated with the currently active document. If the stack belongs to a &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt;, calls to &lt;a href=&quot;qundogroup#undo&quot;&gt;QUndoGroup::undo&lt;/a&gt;() or &lt;a href=&quot;qundogroup#redo&quot;&gt;QUndoGroup::redo&lt;/a&gt;() will be forwarded to this stack when it is active. If the &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt; is watched by a &lt;a href=&quot;qundoview&quot;&gt;QUndoView&lt;/a&gt;, the view will display the contents of this stack when it is active. If the stack does not belong to a &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt;, making it active has no effect.</source>
          <target state="translated">응용 프로그램에는 종종 열린 각 문서마다 하나씩 여러 개의 실행 취소 스택이 있습니다. 활성 스택은 현재 활성 문서와 관련된 스택입니다. 스택이 &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup에&lt;/a&gt; 속하는 경우 &lt;a href=&quot;qundogroup#undo&quot;&gt;QUndoGroup :: undo&lt;/a&gt; () 또는 &lt;a href=&quot;qundogroup#redo&quot;&gt;QUndoGroup :: redo&lt;/a&gt; ()에 대한 호출 이 활성화 될 때이 스택으로 전달됩니다. 경우] &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup가&lt;/a&gt; a로 시청되는 &lt;a href=&quot;qundoview&quot;&gt;QUndoView&lt;/a&gt; 가 활성화되는 경우, 도면이 스택의 내용을 표시한다. 스택이 &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt; 에 속하지 않으면 스택 을 활성화해도 아무런 영향이 없습니다.</target>
        </trans-unit>
        <trans-unit id="22800bc02c77f2a034bc58ceb674527a1182fc95" translate="yes" xml:space="preserve">
          <source>An application on Windows can assume one of the following levels of &quot;DPI Awareness&quot;:</source>
          <target state="translated">Windows 응용 프로그램은 다음 수준의 &quot;DPI 인식&quot;중 하나를 가정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2d83f8d084323569c7120740fef903fab1fe03f" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt; to perform some time-consuming tasks in a separate thread in order to avoid stalling the main rendering thread. Resources created in the &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt;'s context can be shared with the main OpenGL context. Some common use cases are asynchronous texture uploads or rendering into a &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램은 일반적으로 &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt; 를 사용 하여 기본 렌더링 스레드가 중단 되는 것을 피하기 위해 별도의 스레드에서 시간이 많이 걸리는 작업을 수행합니다. &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt; 컨텍스트 에서 생성 된 리소스 는 기본 OpenGL 컨텍스트와 공유 할 수 있습니다. 일반적인 사용 사례로는 비동기 텍스처 업로드 또는 &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; 로 렌더링이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0fa557c725b7141cca1da076d6c847977184fc49" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; for its UI, and not &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; directly. Still, it is possible to render directly to a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; with &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; or &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, when wanting to keep dependencies to a minimum or when wanting to use OpenGL directly. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-rasterwindow-example.html#&quot;&gt;Raster Window Example&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-openglwindow-example.html#&quot;&gt;OpenGL Window Example&lt;/a&gt; are useful reference examples for how to render to a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; using either approach.</source>
          <target state="translated">응용 프로그램은 일반적으로 사용하는 것이다 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget&lt;/a&gt; 또는 &lt;a href=&quot;qquickview&quot;&gt;QQuickView을&lt;/a&gt; 하지 자사의 UI를 위해, 그리고 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 직접. 그럼에도 불구하고, 직접 렌더링 할 수 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 와 &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; 또는 &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; 최소한으로 종속성을 유지하고자 할 때 또는 직접 OpenGL을 사용하고자 할 때. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-rasterwindow-example.html#&quot;&gt;래스터 창 예&lt;/a&gt; 와 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-openglwindow-example.html#&quot;&gt;OpenGL은 윈도우 예&lt;/a&gt; (A)에 렌더링하는 방법에 대한 유용한 참고 예 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 어느 방법을 사용.</target>
        </trans-unit>
        <trans-unit id="82fa382a3a65100961dfe43c6fb7613922f42636" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; for its UI, and not QWindow directly. Still, it is possible to render directly to a QWindow with &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; or &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, when wanting to keep dependencies to a minimum or when wanting to use OpenGL directly. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-rasterwindow-example.html&quot;&gt;Raster Window Example&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-openglwindow-example.html&quot;&gt;OpenGL Window Example&lt;/a&gt; are useful reference examples for how to render to a QWindow using either approach.</source>
          <target state="translated">응용 프로그램은 일반적으로 &lt;a href=&quot;qquickview&quot;&gt;QWindow&lt;/a&gt; 가 아닌 UI에 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 또는 QQuickView 를 직접 사용합니다. 그래도 종속성을 최소로 유지하거나 OpenGL을 직접 사용하고 &lt;a href=&quot;qopenglcontext&quot;&gt;싶을&lt;/a&gt; 때 &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; 또는 QOpenGLContext 를 사용하여 QWindow에 직접 렌더링 할 수 있습니다. &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-rasterwindow-example.html&quot;&gt;래스터 창 예&lt;/a&gt; 와 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-openglwindow-example.html&quot;&gt;OpenGL은 윈도우 예&lt;/a&gt; 중 어느 방식을 사용 QWindow에 렌더링하는 방법에 대한 유용한 참고 예이다.</target>
        </trans-unit>
        <trans-unit id="ad02409f577813201457e3bbe9f87e76338833e8" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; for its UI, and not QWindow directly. Still, it is possible to render directly to a QWindow with &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; or &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, when wanting to keep dependencies to a minimum or when wanting to use OpenGL directly. The &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtgui-rasterwindow-example.html&quot;&gt;Raster Window Example&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtopengl-openglwindow-example.html&quot;&gt;OpenGL Window Example&lt;/a&gt; are useful reference examples for how to render to a QWindow using either approach.</source>
          <target state="translated">응용 프로그램은 일반적으로 &lt;a href=&quot;qquickview&quot;&gt;QWindow&lt;/a&gt; 가 아닌 UI에 &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; 또는 QQuickView 를 직접 사용합니다. 그래도 종속성을 최소로 유지하거나 OpenGL을 직접 사용하려는 경우 &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; 또는 &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; 를 사용하여 QWindow에 직접 렌더링 할 수 있습니다. &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtgui-rasterwindow-example.html&quot;&gt;래스터 창 예&lt;/a&gt; 와 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtopengl-openglwindow-example.html&quot;&gt;OpenGL은 윈도우 예&lt;/a&gt; 중 어느 방식을 사용 QWindow에 렌더링하는 방법에 대한 유용한 참고 예이다.</target>
        </trans-unit>
        <trans-unit id="8a0c798433a5029e60ca31e91a08406954e43dfe" translate="yes" xml:space="preserve">
          <source>An application will typically use QOffscreenSurface to perform some time-consuming tasks in a separate thread in order to avoid stalling the main rendering thread. Resources created in the QOffscreenSurface's context can be shared with the main OpenGL context. Some common use cases are asynchronous texture uploads or rendering into a &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램은 일반적으로 QOffscreenSurface를 사용하여 기본 렌더링 스레드가 지연되는 것을 방지하기 위해 별도의 스레드에서 시간이 많이 걸리는 작업을 수행합니다. QOffscreenSurface의 컨텍스트에서 생성 된 리소스는 기본 OpenGL 컨텍스트와 공유 할 수 있습니다. 몇 가지 일반적인 사용 사례는 비동기 텍스처 업로드 또는 &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject 로의&lt;/a&gt; 렌더링 입니다.</target>
        </trans-unit>
        <trans-unit id="cf4294785feaf4a0d34ca5e84cd3419d53d7a9fa" translate="yes" xml:space="preserve">
          <source>An application written in QML uses memory from both the C++ heap and an automatically managed JavaScript heap. The application developer needs to be aware of the subtleties of each in order to maximise performance.</source>
          <target state="translated">QML로 작성된 응용 프로그램은 C ++ 힙 및 자동 관리 JavaScript 힙 모두에서 메모리를 사용합니다. 응용 프로그램 개발자는 성능을 최대화하기 위해 각각의 미묘한 점을 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a0bd48e35b229c8b0aee9f479288b38faf86db0b" translate="yes" xml:space="preserve">
          <source>An application written in QML will (most likely) require garbage collection to be performed at some stage. While garbage collection will be automatically triggered by the JavaScript engine when the amount of available free memory is low, it is occasionally better if the application developer makes decisions about when to invoke the garbage collector manually (although usually this is not the case).</source>
          <target state="translated">QML로 작성된 응용 프로그램은 대개 가비지 수집을 수행해야합니다. 사용 가능한 여유 메모리 양이 적 으면 JavaScript 엔진에 의해 가비지 콜렉션이 자동으로 트리거되지만, 애플리케이션 개발자가 가비지 콜렉터를 수동으로 호출 할시기를 결정하는 것이 더 나은 경우가 있습니다 (보통 그렇지는 않지만).</target>
        </trans-unit>
        <trans-unit id="71f952814762ed2d86ec77b40538eb3dbe72489c" translate="yes" xml:space="preserve">
          <source>An aqua filter.</source>
          <target state="translated">아쿠아 필터.</target>
        </trans-unit>
        <trans-unit id="ac279cbcf6ad018cdfe7880166dd3b31fa872f67" translate="yes" xml:space="preserve">
          <source>An arc is a section of circles or ellipses. Given the radius and the start and end points, there are two ellipses that connect the points. This property defines the rotation of the X axis of these ellipses.</source>
          <target state="translated">호는 원 또는 타원의 한 부분입니다. 반지름과 시작점과 끝 점이 주어지면 점을 연결하는 두 개의 타원이 있습니다. 이 속성은 이러한 타원의 X 축 회전을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="f3fffbc7d36476d687c9603a52d82d05a4ca295e" translate="yes" xml:space="preserve">
          <source>An area chart.</source>
          <target state="translated">영역 차트.</target>
        </trans-unit>
        <trans-unit id="5900d6486142c27545002757b4d6d48cd96a3ac6" translate="yes" xml:space="preserve">
          <source>An area legend marker is related to a &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; object, so that one area series results in one marker.</source>
          <target state="translated">영역 범례 마커는 &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; 객체 와 관련이 있으므로 하나의 영역 시리즈가 하나의 마커를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="fc191ab16f6b2a68f59964e9dc73b5f3d4ed4132" translate="yes" xml:space="preserve">
          <source>An area series is used to show quantitative data. It is based on a line series, in the way that the area between the boundary lines is emphasized with color. Since the area series is based on the line series, the &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; constructor needs a &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt; instance, which defines the</source>
          <target state="translated">영역 계열은 정량적 데이터를 표시하는 데 사용됩니다. 경계선 사이의 영역이 색상으로 강조되는 방식으로 일련의 선을 기반으로합니다. 영역 계열은 선 계열을 기반으로하기 때문에 &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; 생성자는 &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt; 인스턴스를 필요로 합니다.</target>
        </trans-unit>
        <trans-unit id="38948ad91b20aec997f827ebdc6ab7420cba9e05" translate="yes" xml:space="preserve">
          <source>An area series is used to show quantitative data. It is based on a line series, in the way that the area between the boundary lines is emphasized with color. Since the area series is based on the line series, the QAreaSeries constructor needs a &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt; instance, which defines the</source>
          <target state="translated">영역 시리즈는 정량적 데이터를 표시하는 데 사용됩니다. 경계선 사이의 영역이 색상으로 강조되는 방식으로 선 시리즈를 기반으로합니다. 영역 시리즈는 라인 시리즈를 기반으로하기 때문에 QAreaSeries 생성자 는 다음을 정의 하는 &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt; 인스턴스가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="b6a77dfe4bd9cf669e9baf5ad12bf473bf84eee0" translate="yes" xml:space="preserve">
          <source>An area series is used to show quantitative data. It is based on a line series, in the way that the area between the boundary lines is emphasized with color. The &lt;a href=&quot;qml-qtcharts-lineseries&quot;&gt;LineSeries&lt;/a&gt; type defines the</source>
          <target state="translated">영역 계열은 정량적 데이터를 표시하는 데 사용됩니다. 경계선 사이의 영역이 색상으로 강조되는 방식으로 일련의 선을 기반으로합니다. &lt;a href=&quot;qml-qtcharts-lineseries&quot;&gt;LineSeries의는&lt;/a&gt; 정의를 입력</target>
        </trans-unit>
        <trans-unit id="edd107a85616b1d03e635766dbf545107f383119" translate="yes" xml:space="preserve">
          <source>An area series.</source>
          <target state="translated">지역 시리즈.</target>
        </trans-unit>
        <trans-unit id="bd0b0f311058c867f2fd65c539475a64b2ff15ef" translate="yes" xml:space="preserve">
          <source>An argument can sometimes contain whitespaces, for example:</source>
          <target state="translated">인수는 때때로 공백을 포함 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="67fec9ae00ba828ffe146b3146a401e2aed27455" translate="yes" xml:space="preserve">
          <source>An argument must be provided in curly braces, as in the QDoc comment shown below. The argument is not interpreted but is used as attribute(s) of the tag that is output by QDoc.</source>
          <target state="translated">인수는 아래 표시된 QDoc 주석에서와 같이 중괄호로 제공되어야합니다. 인수는 해석되지 않지만 QDoc에서 출력하는 태그의 속성으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="deeb45ba3ea1824e58ffa151e4559cb8217d436c" translate="yes" xml:space="preserve">
          <source>An argument must be provided in curly braces, as in the qdoc comment shown below. The argument is not interpreted but is used as attribute(s) of the tag that is output by qdoc.</source>
          <target state="translated">아래에 표시된 qdoc 주석에서와 같이 중괄호로 인수를 제공해야합니다. 인수는 해석되지 않지만 qdoc에 의해 출력되는 태그의 속성으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6785b8edfcc2fedc4fbf486fc401d2299c3c1a8a" translate="yes" xml:space="preserve">
          <source>An array containing the descriptions of all connected screens. The elements of the array are objects with the same properties as the &lt;a href=&quot;https://doc.qt.io/qt-6.0/screen-qmlmodule.html&quot;&gt;Screen&lt;/a&gt; attached object. In practice the array corresponds to the screen list returned by &lt;a href=&quot;qguiapplication#screens&quot;&gt;QGuiApplication::screens()&lt;/a&gt;. In addition to examining properties like name, width, height, etc., the array elements can also be assigned to the screen property of Window items, thus serving as an alternative to the C++ side's &lt;a href=&quot;qwindow#setScreen&quot;&gt;QWindow::setScreen()&lt;/a&gt;. This property has been added in Qt 5.9.</source>
          <target state="translated">연결된 모든 화면에 대한 설명이 포함 된 배열입니다. 배열의 요소는 &lt;a href=&quot;https://doc.qt.io/qt-6.0/screen-qmlmodule.html&quot;&gt;Screen&lt;/a&gt; 연결 개체 와 동일한 속성을 가진 개체입니다. 실제로 배열은 &lt;a href=&quot;qguiapplication#screens&quot;&gt;QGuiApplication :: screens ()에&lt;/a&gt; 의해 반환 된 화면 목록에 해당합니다 . 이름, 너비, 높이 등과 같은 속성을 검사하는 것 외에도 배열 요소를 Window 항목의 화면 속성에 할당 할 수 있으므로 C ++ 측의 &lt;a href=&quot;qwindow#setScreen&quot;&gt;QWindow :: setScreen () 대신 사용할 수&lt;/a&gt; 있습니다. 이 속성은 Qt 5.9에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="cc31384b55d97af7ac506d02f8f8a4be6c6ab2b2" translate="yes" xml:space="preserve">
          <source>An array containing the descriptions of all connected screens. The elements of the array are objects with the same properties as the &lt;a href=&quot;qml-qtquick-window-screen&quot;&gt;Screen&lt;/a&gt; attached object. In practice the array corresponds to the screen list returned by &lt;a href=&quot;qguiapplication#screens&quot;&gt;QGuiApplication::screens()&lt;/a&gt;. In addition to examining properties like name, width, height, etc., the array elements can also be assigned to the screen property of Window items, thus serving as an alternative to the C++ side's &lt;a href=&quot;qwindow#setScreen&quot;&gt;QWindow::setScreen()&lt;/a&gt;. This property has been added in Qt 5.9.</source>
          <target state="translated">연결된 모든 화면에 대한 설명이 포함 된 배열입니다. 배열의 요소는 &lt;a href=&quot;qml-qtquick-window-screen&quot;&gt;스크린&lt;/a&gt; 연결 객체 와 동일한 속성을 가진 객체입니다. 실제로 배열은 &lt;a href=&quot;qguiapplication#screens&quot;&gt;QGuiApplication :: screens ()에서&lt;/a&gt; 반환 한 화면 목록에 해당합니다 . 이름, 너비, 높이 등과 같은 속성을 검사하는 것 외에도 배열 요소를 Window 항목의 screen 속성에 할당하여 C ++ 쪽의 &lt;a href=&quot;qwindow#setScreen&quot;&gt;QWindow :: setScreen () 대신 사용할 수&lt;/a&gt; 있습니다. 이 부동산은 Qt 5.9에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="76e100d905150466e6264959726cf729dcff88f0" translate="yes" xml:space="preserve">
          <source>An array element, usually represented by &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; or &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;. Note: &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and associative maps are not considered arrays, even if the D-Bus protocol transports them as such.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; 또는 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;로 표시되는 배열 요소 입니다. 참고 : &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 및 연관 맵은 D 버스 프로토콜이 그대로 전송하더라도 배열로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ecce66a40106b03b95d13a48aa97f9dd9bc64e4" translate="yes" xml:space="preserve">
          <source>An array element, usually represented by &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt;. Note: &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and associative maps are not considered arrays, even if the D-Bus protocol transports them as such.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt;로 표시되는 배열 요소 입니다. 참고 : &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 및 연관 맵은 D-Bus 프로토콜이 그대로 전송하더라도 배열로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="77b003a24336b6cf78493fdfecc963c8cedb0b2d" translate="yes" xml:space="preserve">
          <source>An array of 1-dimensional textures. Equivalent to GL_TEXTURE_1D_ARRAY</source>
          <target state="translated">1 차원 텍스처의 배열입니다. GL_TEXTURE_1D_ARRAY와 동일</target>
        </trans-unit>
        <trans-unit id="a07e4287e083be753249b934ef2306e50dbfb014" translate="yes" xml:space="preserve">
          <source>An array of 1-dimensional textures. Equivalent to GL_TEXTURE_2D_ARRAY</source>
          <target state="translated">1 차원 텍스처의 배열입니다. GL_TEXTURE_2D_ARRAY와 동일</target>
        </trans-unit>
        <trans-unit id="ab4fbb2956be423856d564aa937165f2d350fa12" translate="yes" xml:space="preserve">
          <source>An array of 2-dimensional textures with multisample support. Equivalent to GL_TEXTURE_2D_MULTISAMPLE_ARRAY</source>
          <target state="translated">다중 샘플을 지원하는 2 차원 텍스처 배열입니다. GL_TEXTURE_2D_MULTISAMPLE_ARRAY와 동일</target>
        </trans-unit>
        <trans-unit id="9ce9a4ac9df3cfb6492b9ace4a1cbd42834c3ea7" translate="yes" xml:space="preserve">
          <source>An array of 2-dimensional textures. Equivalent to GL_TEXTURE_2D_ARRAY</source>
          <target state="translated">2 차원 텍스처의 배열입니다. GL_TEXTURE_2D_ARRAY와 동일</target>
        </trans-unit>
        <trans-unit id="6ba257639a98608bf773106ba6ac1b0c3377a4da" translate="yes" xml:space="preserve">
          <source>An array of &lt;a href=&quot;qtqml-typesystem-basictypes&quot;&gt;basic type&lt;/a&gt; values</source>
          <target state="translated">&lt;a href=&quot;qtqml-typesystem-basictypes&quot;&gt;기본 유형&lt;/a&gt; 값 의 배열</target>
        </trans-unit>
        <trans-unit id="e841d209dfc187aea7fb56d5f90cddaae19549fa" translate="yes" xml:space="preserve">
          <source>An array of &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;basic type&lt;/a&gt; values</source>
          <target state="translated">&lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;기본 유형&lt;/a&gt; 값 의 배열</target>
        </trans-unit>
        <trans-unit id="71e4eaa2fe09814df8448b3fa384c0f8a1302e21" translate="yes" xml:space="preserve">
          <source>An array of cubemap textures. Equivalent to GL_TEXTURE_CUBE_MAP_ARRAY</source>
          <target state="translated">큐브 맵 텍스처의 배열입니다. GL_TEXTURE_CUBE_MAP_ARRAY와 동일</target>
        </trans-unit>
        <trans-unit id="2e0b84112dab170968082bd5d0c4d96e27feb4ab" translate="yes" xml:space="preserve">
          <source>An array. Use &lt;a href=&quot;qjsonvalue#toArray-1&quot;&gt;toArray&lt;/a&gt;() to convert to a &lt;a href=&quot;qjsonarray&quot;&gt;QJsonArray&lt;/a&gt;.</source>
          <target state="translated">배열. &lt;a href=&quot;qjsonvalue#toArray-1&quot;&gt;toArray&lt;/a&gt; ()를 사용 하여 &lt;a href=&quot;qjsonarray&quot;&gt;QJsonArray&lt;/a&gt; 로 변환 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae10ce3da95a918eb363a48fbab774c7401b0346" translate="yes" xml:space="preserve">
          <source>An arrow in a &lt;a href=&quot;qcolumnview&quot;&gt;QColumnView&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qcolumnview&quot;&gt;QColumnView&lt;/a&gt; 의 화살표입니다 .</target>
        </trans-unit>
        <trans-unit id="e67c08e3656776974198d5f2030ce99155b5eb56" translate="yes" xml:space="preserve">
          <source>An arrow pointing upwards toward the top of the screen.</source>
          <target state="translated">화면 상단을 향한 화살표.</target>
        </trans-unit>
        <trans-unit id="54461e7e418bc2b0e04bcf05c6da786aea6197b6" translate="yes" xml:space="preserve">
          <source>An arrow with a question mark, typically used to indicate the presence of What's This? help for a widget.</source>
          <target state="translated">일반적으로 What 's This?의 존재를 나타내는 데 사용되는 물음표가있는 화살표 위젯에 대한 도움말.</target>
        </trans-unit>
        <trans-unit id="6b0cef097494d2b4cdedc19fb39d0b6d9e9f50a5" translate="yes" xml:space="preserve">
          <source>An article is created using &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The first argument is the HTML file that QDoc will create. The topic is supplemented with context commands, the &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\title&lt;/a&gt; and &lt;a href=&quot;15-qdoc-commands-navigation#nextpage-command&quot;&gt;\nextpage&lt;/a&gt; commands. There are several other QDoc commands such as the &lt;a href=&quot;10-qdoc-commands-tablesandlists#list-command&quot;&gt;\list&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt; 명령을 사용하여 기사를 만듭니다. 첫 번째 인수는 QDoc이 작성할 HTML 파일입니다. 이 주제는 컨텍스트 명령 인 &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\ title&lt;/a&gt; 및 &lt;a href=&quot;15-qdoc-commands-navigation#nextpage-command&quot;&gt;\ nextpage&lt;/a&gt; 명령으로 보완됩니다 . &lt;a href=&quot;10-qdoc-commands-tablesandlists#list-command&quot;&gt;\ list&lt;/a&gt; 명령 과 같은 몇 가지 다른 QDoc 명령이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7191609b2c997e3b1e9be1692ad68391da6d71c9" translate="yes" xml:space="preserve">
          <source>An article is created using &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The first argument is the HTML file that QDoc will create. The topic is supplemented with context commands, the &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\title&lt;/a&gt; and &lt;a href=&quot;15-qdoc-commands-navigation#nextpage-command&quot;&gt;\nextpage&lt;/a&gt; commands. There are several other QDoc commands such as the &lt;a href=&quot;10-qdoc-commands-tablesandlists#list-command&quot;&gt;\list&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt; 명령을 사용하여 기사가 생성됩니다 . 첫 번째 인수는 QDoc이 생성 할 HTML 파일입니다. 이 주제는 컨텍스트 명령, &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\ title&lt;/a&gt; 및 &lt;a href=&quot;15-qdoc-commands-navigation#nextpage-command&quot;&gt;\ nextpage&lt;/a&gt; 명령으로 보완됩니다 . &lt;a href=&quot;10-qdoc-commands-tablesandlists#list-command&quot;&gt;\ list&lt;/a&gt; 명령 과 같은 몇 가지 다른 QDoc 명령이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14059429025c9aa5b3bdd04931657ed1e0c5bd52" translate="yes" xml:space="preserve">
          <source>An article is created using &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The first argument is the HTML file that QDoc will create. The topic is supplemented with context commands, the &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\title&lt;/a&gt; and &lt;a href=&quot;15-qdoc-commands-navigation#nextpage-command&quot;&gt;\nextpage&lt;/a&gt; commands. There are several other QDoc commands such as the &lt;a href=&quot;10-qdoc-commands-tablesandlists#list-command&quot;&gt;\list&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt; 명령을 사용하여 기사가 생성됩니다 . 첫 번째 인수는 QDoc이 생성 할 HTML 파일입니다. 이 주제는 컨텍스트 명령, &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\ title&lt;/a&gt; 및 &lt;a href=&quot;15-qdoc-commands-navigation#nextpage-command&quot;&gt;\ nextpage&lt;/a&gt; 명령으로 보완됩니다 . &lt;a href=&quot;10-qdoc-commands-tablesandlists#list-command&quot;&gt;\ list&lt;/a&gt; 명령 과 같은 몇 가지 다른 QDoc 명령이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88105a5c9962a7604f158eee3ed478778a4e08a3" translate="yes" xml:space="preserve">
          <source>An associative container, like &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, Value&amp;gt; or &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, Value&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key, Value&amp;gt; 또는 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key, Value&amp;gt; 와 같은 연관 컨테이너</target>
        </trans-unit>
        <trans-unit id="cb074552922e14aa8a6f8e8cd8af5e86b782d814" translate="yes" xml:space="preserve">
          <source>An asynchronous method invocation via &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt; () 를 통한 비동기 메소드 호출</target>
        </trans-unit>
        <trans-unit id="9f74a593936d4a640998967c041a60c9a394594f" translate="yes" xml:space="preserve">
          <source>An asynchronous request is generally handled as follows:</source>
          <target state="translated">비동기 요청은 일반적으로 다음과 같이 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="a95985f0e31c76ba51316cc36dbee1792370ebb6" translate="yes" xml:space="preserve">
          <source>An attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; re-parents itself to the target Flickable. A vertically attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; resizes itself to the height of the Flickable, and positions itself to either side of it based on the &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;layout direction&lt;/a&gt;. A horizontally attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; resizes itself to the width of the Flickable, and positions itself to the bottom. The automatic geometry management can be disabled by specifying another parent for the attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;. This can be useful, for example, if the &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; should be placed outside a clipping Flickable. This is demonstrated by the following example:</source>
          <target state="translated">첨부 된 &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; 는 대상 Flickable로 자신을 다시 보호합니다. 세로로 연결된 &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; 는 Flickable의 높이로 크기가 조정되고 &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;레이아웃 방향&lt;/a&gt; 에 따라 양쪽으로 배치됩니다 . 가로로 연결된 &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; 는 Flickable의 너비에 맞게 크기가 조정되고 아래쪽에 배치됩니다. 연결된 &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar에&lt;/a&gt; 다른 부모를 지정하여 자동 지오메트리 관리를 비활성화 할 수 있습니다 . 예를 들어 &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; 를 클리핑 Flickable 외부에 배치해야하는 경우에 유용합니다 . 이것은 다음 예제에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2a45f77830a51755df6becbfc33790377912e008" translate="yes" xml:space="preserve">
          <source>An attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; re-parents itself to the target Flickable. A vertically attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; resizes itself to the height of the Flickable, and positions itself to either side of it based on the &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;layout direction&lt;/a&gt;. A horizontally attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; resizes itself to the width of the Flickable, and positions itself to the bottom. The automatic geometry management can be disabled by specifying another parent for the attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt;. This can be useful, for example, if the &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; should be placed outside a clipping Flickable. This is demonstrated by the following example:</source>
          <target state="translated">첨부 된 &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; 는 대상 Flickable로 자신을 재 부모합니다. 세로로 연결된 &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; 는 Flickable의 높이로 크기를 조정하고 &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;레이아웃 방향&lt;/a&gt; 에 따라 양쪽으로 배치합니다 . 가로로 연결된 &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; 는 Flickable의 너비에 맞게 크기가 조정되고 아래쪽에 배치됩니다. 연결된 &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator에&lt;/a&gt; 다른 부모를 지정하여 자동 지오메트리 관리를 비활성화 할 수 있습니다 . 예를 들어 &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; 를 클리핑 Flickable 외부에 배치해야하는 경우에 유용합니다 . 이것은 다음 예제에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="5b5eb119f605eb7ed7ea92610325787c3b541adb" translate="yes" xml:space="preserve">
          <source>An attached ScrollBar re-parents itself to the target Flickable. A vertically attached ScrollBar resizes itself to the height of the Flickable, and positions itself to either side of it based on the &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;layout direction&lt;/a&gt;. A horizontally attached ScrollBar resizes itself to the width of the Flickable, and positions itself to the bottom. The automatic geometry management can be disabled by specifying another parent for the attached ScrollBar. This can be useful, for example, if the ScrollBar should be placed outside a clipping Flickable. This is demonstrated by the following example:</source>
          <target state="translated">연결된 ScrollBar는 대상 Flickable의 부모가됩니다. 세로로 연결된 ScrollBar는 Flickable의 높이에 맞게 크기가 조정되고 &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;레이아웃 방향&lt;/a&gt; 에 따라 양쪽에 위치합니다 . 가로로 연결된 ScrollBar는 Flickable의 너비에 맞게 크기가 조정되고 아래쪽에 위치합니다. 첨부 된 ScrollBar에 대해 다른 부모를 지정하여 자동 지오메트리 관리를 비활성화 할 수 있습니다. 예를 들어 ScrollBar를 클리핑 Flickable 외부에 배치해야하는 경우 유용 할 수 있습니다. 이것은 다음 예에서 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="2caf0f2ec42a2e6fb99a0f53fe5780106087c341" translate="yes" xml:space="preserve">
          <source>An attached ScrollIndicator re-parents itself to the target Flickable. A vertically attached ScrollIndicator resizes itself to the height of the Flickable, and positions itself to either side of it based on the &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;layout direction&lt;/a&gt;. A horizontally attached ScrollIndicator resizes itself to the width of the Flickable, and positions itself to the bottom. The automatic geometry management can be disabled by specifying another parent for the attached ScrollIndicator. This can be useful, for example, if the ScrollIndicator should be placed outside a clipping Flickable. This is demonstrated by the following example:</source>
          <target state="translated">연결된 ScrollIndicator는 대상 Flickable의 부모가됩니다. 세로로 연결된 ScrollIndicator는 Flickable의 높이에 맞게 크기가 조정되고 &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;레이아웃 방향&lt;/a&gt; 에 따라 양쪽에 위치합니다 . 가로로 연결된 ScrollIndicator는 Flickable의 너비에 맞게 크기가 조정되고 아래쪽에 위치합니다. 첨부 된 ScrollIndicator에 대해 다른 부모를 지정하여 자동 지오메트리 관리를 비활성화 할 수 있습니다. 예를 들어 ScrollIndicator가 클리핑 Flickable 외부에 배치되어야하는 경우 유용 할 수 있습니다. 이것은 다음 예에서 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="0179e358af4ef33b21925cc31f16bd639bb4265e" translate="yes" xml:space="preserve">
          <source>An attached signal handler is referred to in the same way. For example, the &lt;a href=&quot;qml-qtqml-component#completed-signal&quot;&gt;Component.onCompleted&lt;/a&gt; attached signal handler is commonly used to execute some JavaScript code when a component's creation process has been completed. In the example below, once the &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; has been fully created, its &lt;code&gt;Component.onCompleted&lt;/code&gt; signal handler will automatically be invoked to populate the model:</source>
          <target state="translated">연결된 신호 핸들러도 같은 방식으로 참조됩니다. 예를 들어 &lt;a href=&quot;qml-qtqml-component#completed-signal&quot;&gt;Component.onCompleted&lt;/a&gt; 첨부 신호 처리기는 일반적으로 구성 요소 생성 프로세스가 완료되면 일부 JavaScript 코드를 실행하는 데 사용됩니다. 아래 예제에서 &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; 이 완전히 생성되면 &lt;code&gt;Component.onCompleted&lt;/code&gt; 신호 처리기가 자동으로 호출되어 모델을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="e5f08ce99a65f2ecbc65e0066f9a2976f55844e6" translate="yes" xml:space="preserve">
          <source>An attacker transmits a series of handshake initiation requests with a forged source of the victim, making the server act as an amplifier. Normally, the server would reply to the victim machine with a Certificate message, which can be quite large, thus flooding the victim machine with datagrams.</source>
          <target state="translated">공격자는 위조 된 희생자 소스와 함께 일련의 핸드 셰이크 시작 요청을 전송하여 서버를 증폭기로 작동시킵니다. 일반적으로 서버는 인증서 메시지를 사용하여 대상 컴퓨터에 응답 할 수 있으며, 이는 상당히 클 수 있으므로 대상 컴퓨터에 데이터 그램이 넘치게됩니다.</target>
        </trans-unit>
        <trans-unit id="ebf5467a70ea10c26697b5d91fafd3b6544ec433" translate="yes" xml:space="preserve">
          <source>An attacker transmits a series of handshake initiation requests, causing a server to allocate excessive resources and potentially perform expensive cryptographic operations.</source>
          <target state="translated">공격자는 일련의 핸드 셰이크 시작 요청을 전송하여 서버가 과도한 리소스를 할당하고 값 비싼 암호화 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b18056b45bd189d69370485c9dcb8316fd10590c" translate="yes" xml:space="preserve">
          <source>An attempt to check the safety of the download failed due to unexpected reasons.</source>
          <target state="translated">예기치 않은 이유로 다운로드의 안전성을 확인하려는 시도가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="e1920e43cf9b6b84b8eccdea32ffbd9d2043d6f9" translate="yes" xml:space="preserve">
          <source>An attempt to read a characteristic value failed. For example, it might be triggered in response to a call to &lt;a href=&quot;qlowenergyservice#readCharacteristic&quot;&gt;readCharacteristic&lt;/a&gt;(). This value was introduced by Qt 5.5.</source>
          <target state="translated">특성 값을 읽으려는 시도가 실패했습니다. 예를 들어 &lt;a href=&quot;qlowenergyservice#readCharacteristic&quot;&gt;readCharacteristic&lt;/a&gt; () 호출에 대한 응답으로 트리거 될 수 있습니다 . 이 값은 Qt 5.5에 의해 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="42c365b756f00c11ef70c0544eb8966261d72e3c" translate="yes" xml:space="preserve">
          <source>An attempt to read a descriptor value failed. For example, it might be triggered in response to a call to &lt;a href=&quot;qlowenergyservice#readDescriptor&quot;&gt;readDescriptor&lt;/a&gt;(). This value was introduced by Qt 5.5.</source>
          <target state="translated">설명자 값을 읽으려는 시도가 실패했습니다. 예를 들어 &lt;a href=&quot;qlowenergyservice#readDescriptor&quot;&gt;readDescriptor&lt;/a&gt; () 호출에 대한 응답으로 트리거 될 수 있습니다 . 이 값은 Qt 5.5에 의해 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="86c52a0ca116050b1b09ba02be9c9f5ab0c7163d" translate="yes" xml:space="preserve">
          <source>An attempt to set a frequency or band that is not supported by radio device.</source>
          <target state="translated">무선 장치에서 지원하지 않는 주파수 또는 대역을 설정하려고했습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
