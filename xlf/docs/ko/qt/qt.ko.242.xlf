<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="33d0dc7fdf1ca60e5ef54fed2b0b5fd279f534ac" translate="yes" xml:space="preserve">
          <source>Writes the regular expression</source>
          <target state="translated">정규식을 씁니다.</target>
        </trans-unit>
        <trans-unit id="3337d35c7ef43b0efcc870a2967ca85cefbf79f1" translate="yes" xml:space="preserve">
          <source>Writes the server's IDL to the specified file. The type library will have version x.y</source>
          <target state="translated">서버의 IDL을 지정된 파일에 씁니다. 형식 라이브러리의 버전은 xy입니다.</target>
        </trans-unit>
        <trans-unit id="c19b19f7c8d235b9b075e819068b67eca6b8633a" translate="yes" xml:space="preserve">
          <source>Writes the set of Diffie-Hellman parameters in</source>
          <target state="translated">Diffie-Hellman 매개 변수 세트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="5aac077604aa282b70dfc583eecc6ddf6b3a428f" translate="yes" xml:space="preserve">
          <source>Writes the severity</source>
          <target state="translated">심각도를 씁니다.</target>
        </trans-unit>
        <trans-unit id="ead2b1002f5667562815e4f585a55bb3290cbbf1" translate="yes" xml:space="preserve">
          <source>Writes the signed 64-bit integer,</source>
          <target state="translated">부호있는 64 비트 정수를 씁니다.</target>
        </trans-unit>
        <trans-unit id="68b9a0fa6776b20b6d69d131d8eccb57573bb736" translate="yes" xml:space="preserve">
          <source>Writes the signed int</source>
          <target state="translated">부호있는 int를 씁니다.</target>
        </trans-unit>
        <trans-unit id="28dbb3c064c786a8bc537f88672d2a515397f830" translate="yes" xml:space="preserve">
          <source>Writes the signed integer,</source>
          <target state="translated">부호있는 정수를 씁니다.</target>
        </trans-unit>
        <trans-unit id="7fc6de7cffaa5d7b31fbf0853c6cdf202418ba5f" translate="yes" xml:space="preserve">
          <source>Writes the signed long</source>
          <target state="translated">긴 서명을 쓴다</target>
        </trans-unit>
        <trans-unit id="3d1f0c776206594b0b6ceb65dab3974d36193110" translate="yes" xml:space="preserve">
          <source>Writes the signed long integer,</source>
          <target state="translated">부호있는 긴 정수를 쓰고</target>
        </trans-unit>
        <trans-unit id="f86a7cf00c84f67d7e8edad1a97567b6b0927001" translate="yes" xml:space="preserve">
          <source>Writes the signed short integer,</source>
          <target state="translated">부호있는 짧은 정수를 쓰고</target>
        </trans-unit>
        <trans-unit id="9d3df5d3867b2c6d23aa26ffee9a2bbbc65a7a6e" translate="yes" xml:space="preserve">
          <source>Writes the size</source>
          <target state="translated">크기를 씁니다</target>
        </trans-unit>
        <trans-unit id="22bb1f0b8112426da03f2a0774b613dd2a71cf1b" translate="yes" xml:space="preserve">
          <source>Writes the source</source>
          <target state="translated">소스를 쓴다</target>
        </trans-unit>
        <trans-unit id="bfaa4ab797cc6812f709879b144cf2d06a598e79" translate="yes" xml:space="preserve">
          <source>Writes the string</source>
          <target state="translated">문자열을 씁니다</target>
        </trans-unit>
        <trans-unit id="3e771e32b4dc041b8627ecb715da1eb1c35df38b" translate="yes" xml:space="preserve">
          <source>Writes the string view,</source>
          <target state="translated">문자열 뷰를 씁니다.</target>
        </trans-unit>
        <trans-unit id="5b84fd428fa3b663e3102bd8b8100acd55aa2a3c" translate="yes" xml:space="preserve">
          <source>Writes the string,</source>
          <target state="translated">문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="af33abba9d4dbcac8d96209a69443cc4a9ad8a8b" translate="yes" xml:space="preserve">
          <source>Writes the table widget item</source>
          <target state="translated">테이블 위젯 항목을 씁니다.</target>
        </trans-unit>
        <trans-unit id="2b6ae9cbcf6751cc32a4d53a301cdde9ac6b0690" translate="yes" xml:space="preserve">
          <source>Writes the texture border color into the first four elements of the array pointed to by</source>
          <target state="translated">텍스쳐 테두리 색상을으로 지정된 배열의 처음 네 요소에 씁니다.</target>
        </trans-unit>
        <trans-unit id="64d0205b1bcf274edff889a0c62e3e20245ab18f" translate="yes" xml:space="preserve">
          <source>Writes the tree widget item</source>
          <target state="translated">트리 위젯 항목을 씁니다.</target>
        </trans-unit>
        <trans-unit id="788c2d732547cf55a23a281364ca6e872d1a1f10" translate="yes" xml:space="preserve">
          <source>Writes the type</source>
          <target state="translated">타입을 쓴다</target>
        </trans-unit>
        <trans-unit id="145d2f7c1123081204cd3e1587a1f89b0c3e8b0b" translate="yes" xml:space="preserve">
          <source>Writes the unsigned int</source>
          <target state="translated">부호없는 int를 씁니다.</target>
        </trans-unit>
        <trans-unit id="30d2f666cacf508f3812c0148d67514a78dde8f0" translate="yes" xml:space="preserve">
          <source>Writes the unsigned long</source>
          <target state="translated">부호없는 long을 씁니다.</target>
        </trans-unit>
        <trans-unit id="51b723ee219b1d7d1e85e9618e0be8a75242ac04" translate="yes" xml:space="preserve">
          <source>Writes the unsigned short</source>
          <target state="translated">부호없는 short를 씁니다.</target>
        </trans-unit>
        <trans-unit id="26c8a1505e957d439d1a972d904486d9c17d09d9" translate="yes" xml:space="preserve">
          <source>Writes the values of &lt;code&gt;variablename&lt;/code&gt; to a file with the name &lt;code&gt;filename&lt;/code&gt;, each value on a separate line. If &lt;code&gt;variablename&lt;/code&gt; is not specified, creates an empty file. If &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;append&lt;/code&gt; and the file already exists, appends to it instead of replacing it.</source>
          <target state="translated">&lt;code&gt;variablename&lt;/code&gt; 값을 &lt;code&gt;filename&lt;/code&gt; 이라는 이름의 파일 에 각 값을 별도의 행에 씁니다 . 경우 &lt;code&gt;variablename&lt;/code&gt; 지정되지 않은 빈 파일을 만듭니다. 경우 &lt;code&gt;mode&lt;/code&gt; 입니다 &lt;code&gt;append&lt;/code&gt; 및 파일이 이미 존재하는, 그것을 대체하는 대신에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5fe42d65c24a7934ad2209f811aaa759328747e1" translate="yes" xml:space="preserve">
          <source>Writes the vector</source>
          <target state="translated">벡터를 씁니다</target>
        </trans-unit>
        <trans-unit id="3a1fd72a711ddaa5b912f95994f964de76a468f9" translate="yes" xml:space="preserve">
          <source>Writes the version number</source>
          <target state="translated">버전 번호를 씁니다</target>
        </trans-unit>
        <trans-unit id="498fab632878e50fbd0bf02861ad4fef7ee07fec" translate="yes" xml:space="preserve">
          <source>Writes then unsigned 64-bit integer,</source>
          <target state="translated">그런 다음 부호없는 64 비트 정수를 쓰고</target>
        </trans-unit>
        <trans-unit id="6892c81df39097cab7fa18494eb6471b90da7c15" translate="yes" xml:space="preserve">
          <source>Writes then unsigned integer,</source>
          <target state="translated">그런 다음 부호없는 정수를 쓰고</target>
        </trans-unit>
        <trans-unit id="4baa1c48b27d0ed1432b1ffbd802a3a5de83b469" translate="yes" xml:space="preserve">
          <source>Writes then unsigned long integer,</source>
          <target state="translated">그런 다음 부호없는 긴 정수를 쓰고</target>
        </trans-unit>
        <trans-unit id="17dfc1409067b67d9c847709d51d2fdeba54a677" translate="yes" xml:space="preserve">
          <source>Writes then unsigned short integer,</source>
          <target state="translated">그런 다음 부호없는 짧은 정수를 쓰고</target>
        </trans-unit>
        <trans-unit id="5942a1aef15ef89b940c959eab8fe51c6697d64a" translate="yes" xml:space="preserve">
          <source>Writes up to</source>
          <target state="translated">최대 쓰기</target>
        </trans-unit>
        <trans-unit id="7e42b6760f325866079129e54bcf7ae70dadf960" translate="yes" xml:space="preserve">
          <source>Writes url</source>
          <target state="translated">URL 쓰기</target>
        </trans-unit>
        <trans-unit id="aaa6468cd30d9d842ea9a46786aa401ad44de066" translate="yes" xml:space="preserve">
          <source>Write|Read</source>
          <target state="translated">Write|Read</target>
        </trans-unit>
        <trans-unit id="29f055e135597bcdc084a3a94070a10d076bcc22" translate="yes" xml:space="preserve">
          <source>Writing Custom Types to a Stream</source>
          <target state="translated">스트림에 사용자 정의 유형 작성</target>
        </trans-unit>
        <trans-unit id="469b1f8873498de485e6c8f565f8f7d313eb6b92" translate="yes" xml:space="preserve">
          <source>Writing Documentation</source>
          <target state="translated">문서 작성</target>
        </trans-unit>
        <trans-unit id="ef4b29e5dab91f312910e3670b761147a12b9996" translate="yes" xml:space="preserve">
          <source>Writing Make Rules for Invoking &lt;code&gt;moc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 호출을위한 작성 규칙 작성</target>
        </trans-unit>
        <trans-unit id="875507c37e67131f5c33815a6836f224c904e859" translate="yes" xml:space="preserve">
          <source>Writing Portable Shaders</source>
          <target state="translated">휴대용 쉐이더 작성</target>
        </trans-unit>
        <trans-unit id="8aa7fa6f6753923159ac432b486441a173db4905" translate="yes" xml:space="preserve">
          <source>Writing Reliable Tests</source>
          <target state="translated">신뢰할 수있는 테스트 작성</target>
        </trans-unit>
        <trans-unit id="7afa316d0704e1409580ccc58294f1b89d4a3e57" translate="yes" xml:space="preserve">
          <source>Writing Source Code for Translation</source>
          <target state="translated">번역을위한 소스 코드 작성</target>
        </trans-unit>
        <trans-unit id="8c2198697b7ac33b561f084d30817c777b83cebe" translate="yes" xml:space="preserve">
          <source>Writing Testable Code</source>
          <target state="translated">테스트 가능한 코드 작성</target>
        </trans-unit>
        <trans-unit id="d64b67494dcdc32f9bef58631be9df6229f11e72" translate="yes" xml:space="preserve">
          <source>Writing a Custom Layout</source>
          <target state="translated">사용자 정의 레이아웃 작성</target>
        </trans-unit>
        <trans-unit id="b03d7974d29e2e7585188a29518eb954d5d496c3" translate="yes" xml:space="preserve">
          <source>Writing a SQL plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qsqldriverplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. See the SQL plugins that come with Qt for example implementations (in the &lt;code&gt;plugins/src/sqldrivers&lt;/code&gt; subdirectory of the source distribution).</source>
          <target state="translated">이 기본 클래스를 서브 클래 싱하고 순수한 가상 함수 &lt;a href=&quot;qsqldriverplugin#create&quot;&gt;create&lt;/a&gt; ()를 다시 구현 하고 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용 하여 클래스를 내 보내면 SQL 플러그인을 작성할 수 있습니다 . 구현 예 ( 소스 배포 의 &lt;code&gt;plugins/src/sqldrivers&lt;/code&gt; 서브 디렉토리)에 대해서는 Qt와 함께 제공되는 SQL 플러그인을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="77687d5d4834efa9b7973b3b4330300a2712dc26" translate="yes" xml:space="preserve">
          <source>Writing a SQL plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qsqldriverplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. See the SQL plugins that come with Qt for example implementations (in the &lt;code&gt;plugins/src/sqldrivers&lt;/code&gt; subdirectory of the source distribution).</source>
          <target state="translated">Writing a SQL plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qsqldriverplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. See the SQL plugins that come with Qt for example implementations (in the &lt;code&gt;plugins/src/sqldrivers&lt;/code&gt; subdirectory of the source distribution).</target>
        </trans-unit>
        <trans-unit id="c522c9d8512934c6300f1beb33e3e19b9d3c2a76" translate="yes" xml:space="preserve">
          <source>Writing a audio plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qaudiosystemplugin#availableDevices&quot;&gt;availableDevices&lt;/a&gt;(), &lt;a href=&quot;qaudiosystemplugin#createInput&quot;&gt;createInput&lt;/a&gt;(), &lt;a href=&quot;qaudiosystemplugin#createOutput&quot;&gt;createOutput&lt;/a&gt;() and &lt;a href=&quot;qaudiosystemplugin#createDeviceInfo&quot;&gt;createDeviceInfo&lt;/a&gt;() then exporting the class with the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">오디오 플러그인을 작성하려면이 기본 클래스를 서브 클래 싱하고 순수한 가상 함수 &lt;a href=&quot;qaudiosystemplugin#availableDevices&quot;&gt;availableDevices&lt;/a&gt; (), &lt;a href=&quot;qaudiosystemplugin#createInput&quot;&gt;createInput&lt;/a&gt; (), &lt;a href=&quot;qaudiosystemplugin#createOutput&quot;&gt;createOutput&lt;/a&gt; () 및 &lt;a href=&quot;qaudiosystemplugin#createDeviceInfo&quot;&gt;createDeviceInfo&lt;/a&gt; ()를 다시 구현 한 다음 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용 하여 클래스를 내 보내면 됩니다.</target>
        </trans-unit>
        <trans-unit id="2f548c55a18f59937a3102c1c88cc1a1c17d3701" translate="yes" xml:space="preserve">
          <source>Writing a audio plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qaudiosystemplugin#availableDevices&quot;&gt;availableDevices&lt;/a&gt;(), &lt;a href=&quot;qaudiosystemplugin#createInput&quot;&gt;createInput&lt;/a&gt;(), &lt;a href=&quot;qaudiosystemplugin#createOutput&quot;&gt;createOutput&lt;/a&gt;() and &lt;a href=&quot;qaudiosystemplugin#createDeviceInfo&quot;&gt;createDeviceInfo&lt;/a&gt;() then exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">Writing a audio plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qaudiosystemplugin#availableDevices&quot;&gt;availableDevices&lt;/a&gt;(), &lt;a href=&quot;qaudiosystemplugin#createInput&quot;&gt;createInput&lt;/a&gt;(), &lt;a href=&quot;qaudiosystemplugin#createOutput&quot;&gt;createOutput&lt;/a&gt;() and &lt;a href=&quot;qaudiosystemplugin#createDeviceInfo&quot;&gt;createDeviceInfo&lt;/a&gt;() then exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</target>
        </trans-unit>
        <trans-unit id="becf9cc14b42e7a9b854ba702086f0f903eaf48b" translate="yes" xml:space="preserve">
          <source>Writing a icon engine plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qiconengineplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">아이콘 엔진 플러그인을 작성하려면이 기본 클래스를 서브 클래 싱하고 순수한 가상 함수 &lt;a href=&quot;qiconengineplugin#create&quot;&gt;create&lt;/a&gt; ()를 다시 구현 하고 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용 하여 클래스를 내 보내면 됩니다.</target>
        </trans-unit>
        <trans-unit id="a24480924181e95b73d5c25bfd32fb41f23f4a65" translate="yes" xml:space="preserve">
          <source>Writing a icon engine plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qiconengineplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">Writing a icon engine plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qiconengineplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</target>
        </trans-unit>
        <trans-unit id="8c187f718980ec1ffb275b1f30ca4a6c03873ca3" translate="yes" xml:space="preserve">
          <source>Writing a plugin involves these steps:</source>
          <target state="translated">플러그인 작성에는 다음 단계가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5277b29e19e389b13f36e85812eb20117c883b65" translate="yes" xml:space="preserve">
          <source>Writing a plugin that extends Qt itself is achieved by subclassing the appropriate plugin base class, implementing a few functions, and adding a macro.</source>
          <target state="translated">Qt 자체를 확장하는 플러그인을 작성하려면 적절한 플러그인 기본 클래스를 서브 클래 싱하고 몇 가지 기능을 구현하며 매크로를 추가하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5412023178caaadd5b04ef891a72f8fbfe24f7cc" translate="yes" xml:space="preserve">
          <source>Writing a style plugin is achieved by subclassing this base class, reimplementing the pure virtual &lt;a href=&quot;qstyleplugin#create&quot;&gt;create&lt;/a&gt;() function, and exporting the class using the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">스타일 플러그인 작성은이 기본 클래스를 서브 클래 싱하고 순수한 가상 &lt;a href=&quot;qstyleplugin#create&quot;&gt;작성&lt;/a&gt; () 함수를 다시 구현 하고 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용하여 클래스를 내보내는 방식으로 수행 됩니다.</target>
        </trans-unit>
        <trans-unit id="c140a8a86ad8803e58a0300a7923ae1972a22a60" translate="yes" xml:space="preserve">
          <source>Writing a style plugin is achieved by subclassing this base class, reimplementing the pure virtual &lt;a href=&quot;qstyleplugin#create&quot;&gt;create&lt;/a&gt;() function, and exporting the class using the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">Writing a style plugin is achieved by subclassing this base class, reimplementing the pure virtual &lt;a href=&quot;qstyleplugin#create&quot;&gt;create&lt;/a&gt;() function, and exporting the class using the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</target>
        </trans-unit>
        <trans-unit id="d1bd1ff0c450ab1caff43ec3e071a5a613dfba7d" translate="yes" xml:space="preserve">
          <source>Writing an accessibility plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qaccessibleplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">이 기본 클래스를 서브 클래 싱하고 순수한 가상 함수 &lt;a href=&quot;qaccessibleplugin#create&quot;&gt;create&lt;/a&gt; ()를 다시 구현 하고 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용 하여 클래스를 내 보내면 내게 필요한 옵션 플러그인을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9aceda473b12c8ea585645567e671f0e8f1b4ed" translate="yes" xml:space="preserve">
          <source>Writing an accessibility plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qaccessibleplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">Writing an accessibility plugin is achieved by subclassing this base class, reimplementing the pure virtual function &lt;a href=&quot;qaccessibleplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</target>
        </trans-unit>
        <trans-unit id="e26bf6ad6c6020f5f4873d9ea9678c5594acae14" translate="yes" xml:space="preserve">
          <source>Writing an image I/O plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qimageioplugin#capabilities&quot;&gt;capabilities&lt;/a&gt;() and &lt;a href=&quot;qimageioplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. See &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for details.</source>
          <target state="translated">이미지 I / O 플러그인 작성은이 기본 클래스를 서브 클래 싱하고 순수한 가상 함수 &lt;a href=&quot;qimageioplugin#capabilities&quot;&gt;기능&lt;/a&gt; () 및 &lt;a href=&quot;qimageioplugin#create&quot;&gt;작성&lt;/a&gt; ()을 다시 구현 하고 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용 하여 클래스를 내 보내면 됩니다. 자세한 내용은 &lt;a href=&quot;plugins-howto&quot;&gt;Qt 플러그인 생성 방법을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="decd2d3883621a87d2bf08d2cd792f1db3dd7e20" translate="yes" xml:space="preserve">
          <source>Writing an image I/O plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qimageioplugin#capabilities&quot;&gt;capabilities&lt;/a&gt;() and &lt;a href=&quot;qimageioplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. See &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for details.</source>
          <target state="translated">Writing an image I/O plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qimageioplugin#capabilities&quot;&gt;capabilities&lt;/a&gt;() and &lt;a href=&quot;qimageioplugin#create&quot;&gt;create&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. See &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="fed6af8a3a083a10466728d1f1afc199e3a3487d" translate="yes" xml:space="preserve">
          <source>Writing an picture format plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qpictureformatplugin#loadPicture&quot;&gt;loadPicture&lt;/a&gt;(), &lt;a href=&quot;qpictureformatplugin#savePicture&quot;&gt;savePicture&lt;/a&gt;(), and &lt;a href=&quot;qpictureformatplugin#installIOHandler&quot;&gt;installIOHandler&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">이 기본 클래스를 서브 클래 싱하고 순수한 가상 함수 &lt;a href=&quot;qpictureformatplugin#loadPicture&quot;&gt;loadPicture&lt;/a&gt; (), &lt;a href=&quot;qpictureformatplugin#savePicture&quot;&gt;savePicture&lt;/a&gt; () 및 &lt;a href=&quot;qpictureformatplugin#installIOHandler&quot;&gt;installIOHandler&lt;/a&gt; ()를 다시 구현 하고 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용 하여 클래스를 내 보내면 그림 형식 플러그인을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35b8b4b90d8e4535dc65c7a94cdb8d447997c62c" translate="yes" xml:space="preserve">
          <source>Writing an picture format plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qpictureformatplugin#loadPicture&quot;&gt;loadPicture&lt;/a&gt;(), &lt;a href=&quot;qpictureformatplugin#savePicture&quot;&gt;savePicture&lt;/a&gt;(), and &lt;a href=&quot;qpictureformatplugin#installIOHandler&quot;&gt;installIOHandler&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</source>
          <target state="translated">Writing an picture format plugin is achieved by subclassing this base class, reimplementing the pure virtual functions &lt;a href=&quot;qpictureformatplugin#loadPicture&quot;&gt;loadPicture&lt;/a&gt;(), &lt;a href=&quot;qpictureformatplugin#savePicture&quot;&gt;savePicture&lt;/a&gt;(), and &lt;a href=&quot;qpictureformatplugin#installIOHandler&quot;&gt;installIOHandler&lt;/a&gt;(), and exporting the class with the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro.</target>
        </trans-unit>
        <trans-unit id="7de6cb1fd38303e5e608ef4b1428fd02bf54c255" translate="yes" xml:space="preserve">
          <source>Writing axis steps using the longhand form with axis specifiers and node tests is semantically clear but syntactically verbose. The shorthand form is easy to learn and, once you learn it, just as easy to read. In the shorthand form, the axis specifier and node test are implied by the syntax. XQueries are normally written in the shorthand form. Here is a table of some frequently used shorthand forms:</source>
          <target state="translated">축 지정자 및 노드 테스트와 함께 Longhand 형식을 사용하여 축 단계를 작성하는 것은 의미 적으로 명확하지만 구문 상 자세합니다. 속기 양식은 배우기 쉽고, 일단 배우면 읽기 쉽습니다. 축약 형으로 축 지정자와 노드 테스트는 구문으로 암시됩니다. XQueries는 일반적으로 속기 형태로 작성됩니다. 다음은 자주 사용되는 속기 형식의 표입니다.</target>
        </trans-unit>
        <trans-unit id="f7d2dad5c15fc256704acd26e9c40c582a9b8825" translate="yes" xml:space="preserve">
          <source>Writing cross-platform international software with Qt is a gentle, incremental process. Your software can become internationalized in the stages described in the following sections. For more information about internalizing Qt Quick application, see &lt;a href=&quot;qtquick-internationalization&quot;&gt;Internationalization and Localization with Qt Quick&lt;/a&gt;.</source>
          <target state="translated">Writing cross-platform international software with Qt is a gentle, incremental process. Your software can become internationalized in the stages described in the following sections. For more information about internalizing Qt Quick application, see &lt;a href=&quot;qtquick-internationalization&quot;&gt;Internationalization and Localization with Qt Quick&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="47d805905509ed856e82734c5f3408335202ab43" translate="yes" xml:space="preserve">
          <source>Writing cross-platform international software with Qt is a gentle, incremental process. Your software can become internationalized in the stages described in the following sections. For more information about internalizing Qt Quick application, see &lt;a href=&quot;qtquick-internationalization#&quot;&gt;Internationalization and Localization with Qt Quick&lt;/a&gt;.</source>
          <target state="translated">Qt로 크로스 플랫폼 국제 소프트웨어를 작성하는 것은 온화하고 점진적인 프로세스입니다. 다음 섹션에 설명 된 단계에서 소프트웨어를 국제화 할 수 있습니다. Qt Quick 애플리케이션 내부화에 대한 자세한 정보는 Qt Quick을 &lt;a href=&quot;qtquick-internationalization#&quot;&gt;사용한 국제화 및 현지화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a71c2938c286d22ff60ff3d3a4d268ba18ec8c7b" translate="yes" xml:space="preserve">
          <source>Writing or reading from the device resulted in an error.</source>
          <target state="translated">장치에서 쓰거나 읽을 때 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="f9dee0249af03911723455d5b554202517ccd7e2" translate="yes" xml:space="preserve">
          <source>Writing the Code</source>
          <target state="translated">코드 작성</target>
        </trans-unit>
        <trans-unit id="562b8762941efe82a0fd8cbac4b46bedbf14a326" translate="yes" xml:space="preserve">
          <source>Wu Yi &amp;lt;wuyi@hancom.com&amp;gt; ported the HKSCS-1999 QBig5hkscsCodec to Qt-3.0.1 in March 2002.</source>
          <target state="translated">Wu Yi &amp;lt;wuyi@hancom.com&amp;gt;은 2002 년 3 월 HKSCS-1999 QBig5hkscsCodec를 Qt-3.0.1로 포팅했습니다.</target>
        </trans-unit>
        <trans-unit id="57634a456dec1dd5d1923105a9ef1676398ff473" translate="yes" xml:space="preserve">
          <source>X C Binding library</source>
          <target state="translated">XC 바인딩 라이브러리</target>
        </trans-unit>
        <trans-unit id="f567d05b2bfdf094f84302e0adbb86851f7af932" translate="yes" xml:space="preserve">
          <source>X C Bindings for Fixes Extension</source>
          <target state="translated">수정 사항 확장을위한 XC 바인딩</target>
        </trans-unit>
        <trans-unit id="cdaa78c179d81f0793f9764e63d76e04e11dfb61" translate="yes" xml:space="preserve">
          <source>X C Bindings for ICCCM Protocol</source>
          <target state="translated">ICCCM 프로토콜에 대한 XC 바인딩</target>
        </trans-unit>
        <trans-unit id="bfb07eb80f7b5b3d894f8a082ea053901a5a1540" translate="yes" xml:space="preserve">
          <source>X C Bindings for Render extension</source>
          <target state="translated">렌더 확장을위한 XC 바인딩</target>
        </trans-unit>
        <trans-unit id="3ed2766ecf08c97ae7dcbcb02bdb8cb2bc8964ad" translate="yes" xml:space="preserve">
          <source>X C Bindings for Resize and Rotate Extension</source>
          <target state="translated">크기 조정 및 회전 확장을위한 XC 바인딩</target>
        </trans-unit>
        <trans-unit id="b5a3ab3144424b57827a23c7deb798d8e06c42a6" translate="yes" xml:space="preserve">
          <source>X C Bindings for Shape extension</source>
          <target state="translated">도형 확장을위한 XC 바인딩</target>
        </trans-unit>
        <trans-unit id="2dc9c20d7a173db9da6e99b31684d8cdf967e0ae" translate="yes" xml:space="preserve">
          <source>X C Bindings for Shared Memory Extension</source>
          <target state="translated">공유 메모리 확장을위한 XC 바인딩</target>
        </trans-unit>
        <trans-unit id="887b74e110fa0d0befa749483885b17677e3f0eb" translate="yes" xml:space="preserve">
          <source>X C Bindings for Sync Extension</source>
          <target state="translated">동기화 확장을위한 XC 바인딩</target>
        </trans-unit>
        <trans-unit id="381f4b64eab246bd64e6fc8ace5e5142def141b2" translate="yes" xml:space="preserve">
          <source>X Extensions</source>
          <target state="translated">X 확장</target>
        </trans-unit>
        <trans-unit id="58c33d932eb71455a0ea9ed90786cf3e777a0894" translate="yes" xml:space="preserve">
          <source>X Rendering Extension; used for anti-aliasing and alpha cursor support</source>
          <target state="translated">X 렌더링 확장; 앤티 앨리어싱 및 알파 커서 지원에 사용</target>
        </trans-unit>
        <trans-unit id="b17d18b1b9b653d4bc22000c22798990293db509" translate="yes" xml:space="preserve">
          <source>X Server helper</source>
          <target state="translated">X Server helper</target>
        </trans-unit>
        <trans-unit id="aaccf7573b3fb1abf8e6c09cb5d02d417c103e50" translate="yes" xml:space="preserve">
          <source>X Session Management</source>
          <target state="translated">X 세션 관리</target>
        </trans-unit>
        <trans-unit id="5c554909390dbd01167ea64ad99b6e834939a344" translate="yes" xml:space="preserve">
          <source>X Window System (X11) support</source>
          <target state="translated">X 윈도우 시스템 (X11) 지원</target>
        </trans-unit>
        <trans-unit id="cec6777cbce64a84f53021184e25536182d95ebb" translate="yes" xml:space="preserve">
          <source>X-axis: pixel original luminance</source>
          <target state="translated">X 축 : 픽셀 원래 휘도</target>
        </trans-unit>
        <trans-unit id="4554bb23249db29d38bb731caf4c64faaa060ba4" translate="yes" xml:space="preserve">
          <source>X11</source>
          <target state="translated">X11</target>
        </trans-unit>
        <trans-unit id="82da9db2c590f108c94e361614919c6e5ba7505d" translate="yes" xml:space="preserve">
          <source>X11 Bitmap</source>
          <target state="translated">X11 비트 맵</target>
        </trans-unit>
        <trans-unit id="e7f8788005e5861a3270af9d6cfa5cdc6e7adbe6" translate="yes" xml:space="preserve">
          <source>X11 Input Extensions</source>
          <target state="translated">X11 입력 확장</target>
        </trans-unit>
        <trans-unit id="4cff310adc9dbdd6199def0e9ba052ed0257bdc7" translate="yes" xml:space="preserve">
          <source>X11 License and Historical Permission Notice and Disclaimer</source>
          <target state="translated">X11 License and Historical Permission Notice and Disclaimer</target>
        </trans-unit>
        <trans-unit id="2cb0c1ce051db62ae323443f18c9d56172884299" translate="yes" xml:space="preserve">
          <source>X11 Peculiarities</source>
          <target state="translated">X11 특징</target>
        </trans-unit>
        <trans-unit id="50b45badd91a34d3a80211700b8e9d9495273349" translate="yes" xml:space="preserve">
          <source>X11 Pixmap</source>
          <target state="translated">X11 Pixmap</target>
        </trans-unit>
        <trans-unit id="d6f81a77d163226e377308772be815321e78e08e" translate="yes" xml:space="preserve">
          <source>X11 also has the concept of ownership; if you change the selection within a window, X11 will only notify the owner and the previous owner of the change, i.e. it will not notify all applications that the selection or clipboard data changed.</source>
          <target state="translated">X11은 또한 소유권 개념을 가지고 있습니다. 창 내에서 선택을 변경하면 X11은 소유자와 이전 소유자에게만 변경 사항을 통지합니다. 즉, 모든 응용 프로그램에 선택 또는 클립 보드 데이터가 변경되었음을 알리지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="017d28f38cd1cefd1e2fcbe314d53ad405b52bf8" translate="yes" xml:space="preserve">
          <source>X11 and QWS (Qt for Embedded Linux): none.</source>
          <target state="translated">X11 및 QWS (내장 Linux 용 Qt) : 없음</target>
        </trans-unit>
        <trans-unit id="09cb7f4f9631cc0de3c6cc38df3921984179de0a" translate="yes" xml:space="preserve">
          <source>X11 client-side library</source>
          <target state="translated">X11 클라이언트 측 라이브러리</target>
        </trans-unit>
        <trans-unit id="a595725324057791df6652927f8d9fafd47bd64c" translate="yes" xml:space="preserve">
          <source>X11 only (unless activated on Windows by a command line argument). A Mode_switch key on the keyboard is pressed.</source>
          <target state="translated">X11 전용 (Windows에서 명령 행 인수로 활성화하지 않은 경우). 키보드의 Mode_switch 키가 눌려 있습니다.</target>
        </trans-unit>
        <trans-unit id="c27b7cdc103184eb25644c3ae648b9b1cb4dd875" translate="yes" xml:space="preserve">
          <source>X11 only (unless activated on Windows by a command line argument). A Mode_switch key on the keyboard must be pressed.</source>
          <target state="translated">X11 only (unless activated on Windows by a command line argument). A Mode_switch key on the keyboard must be pressed.</target>
        </trans-unit>
        <trans-unit id="277d72a6f5f9a6f870ad4edae82bae9103e4f6b8" translate="yes" xml:space="preserve">
          <source>X11 provides no standard or easy way to get the frame geometry once the window is decorated. Qt solves this problem with nifty heuristics and clever code that works on a wide range of window managers that exist today. Don't be surprised if you find one where &lt;a href=&quot;qwidget#frameGeometry-prop&quot;&gt;QWidget::frameGeometry&lt;/a&gt;() returns wrong results though.</source>
          <target state="translated">X11은 일단 창을 장식 한 후에 프레임 지오메트리를 얻는 표준적인 방법이나 쉬운 방법을 제공하지 않습니다. Qt는 오늘날 존재하는 광범위한 창 관리자에서 작동하는 멋진 휴리스틱 및 영리한 코드로이 문제를 해결합니다. &lt;a href=&quot;qwidget#frameGeometry-prop&quot;&gt;QWidget :: frameGeometry&lt;/a&gt; ()가 잘못된 결과를 반환 하는 것을 찾으면 놀라지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="d5d38fcbab56951f13dd379ca5c0a8f3bf2a3522" translate="yes" xml:space="preserve">
          <source>X11 window managers that follow modern post-ICCCM specifications support full-screen mode properly.</source>
          <target state="translated">최신 ICCCM 규격을 따르는 X11 창 관리자는 전체 화면 모드를 올바르게 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ff8fe2a82c3d2c04789dafb9c7b93327e95367aa" translate="yes" xml:space="preserve">
          <source>X11, a desktop protocol from the 80s, no longer fits with how graphics hardware works today. It is large, complex, and lacks customizability. In fact, it is difficult to run a client fluidly with X11, and reach 60 fps without tearing. Wayland, in contrast, is easier to implement, has better performance, and contains all the necessary parts to run efficiently on modern graphics hardware. For embedded, multi-process systems on Linux, Wayland is the standard.</source>
          <target state="translated">80 년대 데스크톱 프로토콜 인 X11은 오늘날 그래픽 하드웨어 작동 방식에 더 이상 맞지 않습니다. 크고 복잡하며 사용자 정의 기능이 없습니다. 실제로 X11을 사용하여 클라이언트를 유동적으로 실행하기가 어려우며 찢지 않고 60fps에 도달합니다. 반면 Wayland는 구현하기 쉽고 성능이 우수하며 최신 그래픽 하드웨어에서 효율적으로 실행하는 데 필요한 모든 부품을 포함합니다. Linux의 임베디드 다중 프로세스 시스템의 경우 Wayland가 표준입니다.</target>
        </trans-unit>
        <trans-unit id="5693399258b96c1a388061172fb2bd6c11b126c0" translate="yes" xml:space="preserve">
          <source>X11-xcb</source>
          <target state="translated">X11-xcb</target>
        </trans-unit>
        <trans-unit id="1f2faaf3adf7d99d2aa19b99f3e4a838762e3a85" translate="yes" xml:space="preserve">
          <source>X11: This feature relies on the use of an X server that supports ARGB visuals and a compositing window manager.</source>
          <target state="translated">X11 :이 기능은 ARGB 비주얼을 지원하는 X 서버 및 합성 창 관리자를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="db63b785e6c4aae3fcffd92d4721b5d8c34a78d7" translate="yes" xml:space="preserve">
          <source>XAnimator (QML type)</source>
          <target state="translated">XAnimator (QML 유형)</target>
        </trans-unit>
        <trans-unit id="eac50d91b922f5b082025b7f78a72ffaa5348870" translate="yes" xml:space="preserve">
          <source>XAnimator QML Type</source>
          <target state="translated">XAnimator QML 유형</target>
        </trans-unit>
        <trans-unit id="a5de011c5990defae6a3ef0d0d63f0f9500b6c06" translate="yes" xml:space="preserve">
          <source>XBM</source>
          <target state="translated">XBM</target>
        </trans-unit>
        <trans-unit id="eee3887a0f50fc6c59805aa2c0e154ce90334d41" translate="yes" xml:space="preserve">
          <source>XBox One</source>
          <target state="translated">XBox One</target>
        </trans-unit>
        <trans-unit id="ca73dbab3d266853cc5649e233ffd845b5a52ba3" translate="yes" xml:space="preserve">
          <source>XCB</source>
          <target state="translated">XCB</target>
        </trans-unit>
        <trans-unit id="43584cc6bbc7d9379fafc3fe6465551bb2e6733d" translate="yes" xml:space="preserve">
          <source>XCB-XInput</source>
          <target state="translated">XCB-XInput</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="95ae68c898663c3a2d4bd002672b5144421f2aaa" translate="yes" xml:space="preserve">
          <source>XML 1.0 and XML Namespaces 1.0 are supported, as opposed to the 1.1 versions. When a strings is passed to a query as a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, the characters must be XML 1.0 characters. Otherwise, the behavior is undefined. This is not checked.</source>
          <target state="translated">1.1 버전과 달리 XML 1.0 및 XML 네임 스페이스 1.0이 지원됩니다. 문자열이 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 으로 쿼리에 전달 되면 문자는 XML 1.0 문자 여야합니다. 그렇지 않으면 동작이 정의되지 않습니다. 이것은 점검되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d552208cdd1ead9008c1dcf3e6b83311ab65213" translate="yes" xml:space="preserve">
          <source>XML Model</source>
          <target state="translated">XML 모델</target>
        </trans-unit>
        <trans-unit id="d647f348ffbbc7a4d48d8ae4bec579637ae0ee51" translate="yes" xml:space="preserve">
          <source>XML Processing</source>
          <target state="translated">XML 처리</target>
        </trans-unit>
        <trans-unit id="186b8e7fe1ccfe27858b12117d8aeef51ef87896" translate="yes" xml:space="preserve">
          <source>XML Schema 1.0</source>
          <target state="translated">XML 스키마 1.0</target>
        </trans-unit>
        <trans-unit id="b753c24568a8b5f367a44fe13c9ceb1e1d7a4d89" translate="yes" xml:space="preserve">
          <source>XML Schema Version</source>
          <target state="translated">XML 스키마 버전</target>
        </trans-unit>
        <trans-unit id="13fbfb619ca2d055214115cab0c82644371837d9" translate="yes" xml:space="preserve">
          <source>XML Schema, version 2007/08</source>
          <target state="translated">XML 스키마, 버전 2007/08</target>
        </trans-unit>
        <trans-unit id="db988da9046c02185ba28222ac1c510bbcf8dba0" translate="yes" xml:space="preserve">
          <source>XML Streaming</source>
          <target state="translated">XML 스트리밍</target>
        </trans-unit>
        <trans-unit id="90d310d394ad74af91e7d5e0b80b47680359f097" translate="yes" xml:space="preserve">
          <source>XML attributes</source>
          <target state="translated">XML 속성</target>
        </trans-unit>
        <trans-unit id="434522424a8976a4187ab93399f2ce3b17a49a2c" translate="yes" xml:space="preserve">
          <source>XML compiler (qdbusxml2cpp)</source>
          <target state="translated">XML 컴파일러 (qdbusxml2cpp)</target>
        </trans-unit>
        <trans-unit id="821bce5d139f38f077bc5f2f2727452cf29d3cb8" translate="yes" xml:space="preserve">
          <source>XML file</source>
          <target state="translated">XML 파일</target>
        </trans-unit>
        <trans-unit id="e628e3e0f678152f07c2af120e6f0290caff1bac" translate="yes" xml:space="preserve">
          <source>XML receiver</source>
          <target state="translated">XML 수신기</target>
        </trans-unit>
        <trans-unit id="dc8ef7671c80dd20a848b0e20ac7fe899f9a42a2" translate="yes" xml:space="preserve">
          <source>XML writer with a simple streaming API</source>
          <target state="translated">간단한 스트리밍 API가 포함 된 XML 작성기</target>
        </trans-unit>
        <trans-unit id="1a1dc754a10525066d7d47c74e38c2ea14cb7e3f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest</target>
        </trans-unit>
        <trans-unit id="b5424a87f3eef1889304805a5ca94f46f596caa2" translate="yes" xml:space="preserve">
          <source>XPM</source>
          <target state="translated">XPM</target>
        </trans-unit>
        <trans-unit id="4c7cf0638dfc6ee32ce9ab91efe799ca3d12ffcb" translate="yes" xml:space="preserve">
          <source>XPath 2.0</source>
          <target state="translated">XPath 2.0</target>
        </trans-unit>
        <trans-unit id="35c3e9e82ea362b96cf5149f4c7076c3d38fef42" translate="yes" xml:space="preserve">
          <source>XPath Conformance</source>
          <target state="translated">XPath 적합성</target>
        </trans-unit>
        <trans-unit id="268ee6a84c69b814af2eeb99ca0a94b424e8cd00" translate="yes" xml:space="preserve">
          <source>XPath is a subset of &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; and the implementation of Qt XML Patterns uses XPath 2.0 with &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; 1.0.</source>
          <target state="translated">XPath is a subset of &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; and the implementation of Qt XML Patterns uses XPath 2.0 with &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; 1.0.</target>
        </trans-unit>
        <trans-unit id="09fc5f6b2500316c49efe34fb739a016c09ce1b8" translate="yes" xml:space="preserve">
          <source>XPath is a subset of XQuery and the implementation of Qt XML Patterns uses XPath 2.0 with XQuery 1.0.</source>
          <target state="translated">XPath는 XQuery의 하위 집합이며 Qt XML 패턴 구현은 XPath 1.0과 함께 XPath 2.0을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="02208a38d993e35ccaf0aa68dcc9f69ac5b2e20d" translate="yes" xml:space="preserve">
          <source>XQuery</source>
          <target state="translated">XQuery</target>
        </trans-unit>
        <trans-unit id="619403c963a480d2c5262e0edce783868768dd68" translate="yes" xml:space="preserve">
          <source>XQuery $variable type</source>
          <target state="translated">XQuery $ 변수 유형</target>
        </trans-unit>
        <trans-unit id="6c9019f8ea52a12dc7e51b230403c8088440701f" translate="yes" xml:space="preserve">
          <source>XQuery 1.0</source>
          <target state="translated">XQuery 1.0</target>
        </trans-unit>
        <trans-unit id="c7eba13ca1ef6ffebeaac1da9abce6608cd6d432" translate="yes" xml:space="preserve">
          <source>XQuery Sequences</source>
          <target state="translated">XQuery 시퀀스</target>
        </trans-unit>
        <trans-unit id="da0bea06c41b55849cad7de2d73aa327ce0a4649" translate="yes" xml:space="preserve">
          <source>XQuery is a language for traversing XML documents to select and aggregate items of interest and to transform them for output as XML or some other format. XPath is the</source>
          <target state="translated">XQuery는 XML 문서를 순회하여 관심있는 항목을 선택 및 집계하고 XML 또는 기타 형식으로 출력하도록 변환합니다. XPath는</target>
        </trans-unit>
        <trans-unit id="dbf1c8c3910b46d01447abb919d2023cf2ba937f" translate="yes" xml:space="preserve">
          <source>XQuery is vulnerable to &lt;a href=&quot;http://en.wikipedia.org/wiki/Code_injection&quot;&gt;code injection attacks&lt;/a&gt; in the same way as the SQL language. If an XQuery is constructed by concatenating strings, and the strings come from user input, the constructed XQuery could be malevolent. The best way to prevent code injection attacks is to not construct XQueries from user-written strings, but only accept user data input using &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; and variable bindings. See &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;().</source>
          <target state="translated">XQuery는 SQL 언어와 같은 방식으로 &lt;a href=&quot;http://en.wikipedia.org/wiki/Code_injection&quot;&gt;코드 삽입 공격&lt;/a&gt; 에 취약합니다 . 문자열을 연결하여 XQuery를 구성하고 사용자 입력에서 문자열을 가져 오는 경우 생성 된 XQuery는 악의적 일 수 있습니다. 코드 삽입 공격을 방지하는 가장 좋은 방법은 사용자 작성 문자열에서 XQueries를 구성하지 않고 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 및 변수 바인딩을 사용하여 사용자 데이터 입력 만 허용하는 것 입니다. &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery :: bindVariable&lt;/a&gt; ()을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a10dcd1c8678922bb7279c014bea62be07d798c0" translate="yes" xml:space="preserve">
          <source>XQuery represents data items as</source>
          <target state="translated">XQuery는 데이터 항목을 다음과 같이 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bc9553446abaeec0aaefda783a8d1effcba1188c" translate="yes" xml:space="preserve">
          <source>XQuery result item type</source>
          <target state="translated">XQuery 결과 항목 유형</target>
        </trans-unit>
        <trans-unit id="1d9a64d52cf6743cf951d8852412a2a79f2d7d40" translate="yes" xml:space="preserve">
          <source>XRender</source>
          <target state="translated">XRender</target>
        </trans-unit>
        <trans-unit id="f0bd3420a03b103b7cf087aed2e5ab306767cd60" translate="yes" xml:space="preserve">
          <source>XSL Feature</source>
          <target state="translated">XSL 기능</target>
        </trans-unit>
        <trans-unit id="258ad782ec1926f5004c5750504f4d5d4bc8bb15" translate="yes" xml:space="preserve">
          <source>XSLT 2.0</source>
          <target state="translated">XSLT 2.0</target>
        </trans-unit>
        <trans-unit id="49f085d81dc36fbae227a8ff3e110ffde11747db" translate="yes" xml:space="preserve">
          <source>XSLT 2.0 The selector, the restricted XPath pattern found in W3C XML Schema 1.1 for uniqueness contraints. Apart from restricting the syntax, the type check stage for the expression assumes a sequence of nodes to be the focus. The field, the restricted XPath pattern found in W3C XML Schema 1.1 for uniqueness contraints. Apart from restricting the syntax, the type check stage for the expression assumes a sequence of nodes to be the focus. Signifies XPath 2.0. Has no effect in the public API, it's used internally. As With XmlSchema11IdentityConstraintSelector and XmlSchema11IdentityConstraintField, the type check stage for the expression assumes a sequence of nodes to be the focus.</source>
          <target state="translated">XSLT 2.0 W3C XML Schema 1.1에서 발견 된 제한 XPath 패턴 인 셀렉터는 고유성 제약 조건입니다. 구문을 제한하는 것 외에도 표현식의 유형 검사 단계에서는 일련의 노드가 초점이된다고 가정합니다. 고유성 제약 조건을 위해 W3C XML Schema 1.1에있는 제한된 XPath 패턴 필드입니다. 구문 제한과는 별도로 표현식의 유형 검사 단계에서는 일련의 노드가 초점이된다고 가정합니다. XPath 2.0을 나타냅니다. 공개 API에는 영향을 미치지 않으며 내부적으로 사용됩니다. XmlSchema11IdentityConstraintSelector 및 XmlSchema11IdentityConstraintField와 마찬가지로 표현식의 유형 검사 단계에서는 일련의 노드가 초점이된다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="11ee7d5c786672ec7728c241c7480fb8e9208cc0" translate="yes" xml:space="preserve">
          <source>XSVG</source>
          <target state="translated">XSVG</target>
        </trans-unit>
        <trans-unit id="737486c7616cd3dc0e3517a6e1656c28c1533b8f" translate="yes" xml:space="preserve">
          <source>XYPoint (QML type)</source>
          <target state="translated">XYPoint (QML 유형)</target>
        </trans-unit>
        <trans-unit id="9d30cff9309c778490dd9e626bf91e8c108cee89" translate="yes" xml:space="preserve">
          <source>XYPoint QML Type</source>
          <target state="translated">XYPoint QML 유형</target>
        </trans-unit>
        <trans-unit id="0d1bdd1b2df05f7656115f9f020c678ba0f016bc" translate="yes" xml:space="preserve">
          <source>XYPoint.x</source>
          <target state="translated">XYPoint.x</target>
        </trans-unit>
        <trans-unit id="33df39b3d7138464daae0168eaafd6e43f9d02bb" translate="yes" xml:space="preserve">
          <source>XYPoint.y</source>
          <target state="translated">XYPoint.y</target>
        </trans-unit>
        <trans-unit id="67d65485c1706aa544097dde90ff2ab470f5cf3e" translate="yes" xml:space="preserve">
          <source>XYSeries</source>
          <target state="translated">XYSeries</target>
        </trans-unit>
        <trans-unit id="4a46a999767a0b120349f6316a4bd39f9c6506d1" translate="yes" xml:space="preserve">
          <source>XYSeries (QML type)</source>
          <target state="translated">XYSeries (QML 유형)</target>
        </trans-unit>
        <trans-unit id="d929891a7c5fc762cec0578231e55f4d545eaef8" translate="yes" xml:space="preserve">
          <source>XYSeries QML Type</source>
          <target state="translated">XYSeries QML 유형</target>
        </trans-unit>
        <trans-unit id="971c47f56bde1f43b389767788646ae819c4e5bb" translate="yes" xml:space="preserve">
          <source>XYSeries.append()</source>
          <target state="translated">XYSeries.append()</target>
        </trans-unit>
        <trans-unit id="8ed575352fba4e8a4ae40c88e01cea9afbf1bfe7" translate="yes" xml:space="preserve">
          <source>XYSeries.at()</source>
          <target state="translated">XYSeries.at()</target>
        </trans-unit>
        <trans-unit id="d29258aa7ddfe9b6a1def08b14c1a7056ed0275d" translate="yes" xml:space="preserve">
          <source>XYSeries.axisAngular</source>
          <target state="translated">XYSeries.axisAngular</target>
        </trans-unit>
        <trans-unit id="668e238cbc999797a3b1e72fa54024fa946514e1" translate="yes" xml:space="preserve">
          <source>XYSeries.axisRadial</source>
          <target state="translated">XYSeries.axisRadial</target>
        </trans-unit>
        <trans-unit id="06167749766f64510deb3a338ccad91c3db56008" translate="yes" xml:space="preserve">
          <source>XYSeries.axisX</source>
          <target state="translated">XYSeries.axisX</target>
        </trans-unit>
        <trans-unit id="a72de6b962334adedb6dbce58787268e2488bf21" translate="yes" xml:space="preserve">
          <source>XYSeries.axisXTop</source>
          <target state="translated">XYSeries.axisXTop</target>
        </trans-unit>
        <trans-unit id="48c5ca46a29eb303c1e28133272df5496e476318" translate="yes" xml:space="preserve">
          <source>XYSeries.axisY</source>
          <target state="translated">XYSeries.axisY</target>
        </trans-unit>
        <trans-unit id="b2fdea52ebb09146455ed332b369448eb35639fb" translate="yes" xml:space="preserve">
          <source>XYSeries.axisYRight</source>
          <target state="translated">XYSeries.axisYRight</target>
        </trans-unit>
        <trans-unit id="370a4221f94266b3e941ec7ceb9b351d2bdf218c" translate="yes" xml:space="preserve">
          <source>XYSeries.clicked()</source>
          <target state="translated">XYSeries.clicked()</target>
        </trans-unit>
        <trans-unit id="5730daa5c01071a450da5909516577afa93e319e" translate="yes" xml:space="preserve">
          <source>XYSeries.color</source>
          <target state="translated">XYSeries.color</target>
        </trans-unit>
        <trans-unit id="1f4dc406019936cf1f11dd720d8c16aac8308173" translate="yes" xml:space="preserve">
          <source>XYSeries.doubleClicked()</source>
          <target state="translated">XYSeries.doubleClicked()</target>
        </trans-unit>
        <trans-unit id="d63a16f16a87fd4b2d7af28846e8b0dca42c4c11" translate="yes" xml:space="preserve">
          <source>XYSeries.hovered()</source>
          <target state="translated">XYSeries.hovered()</target>
        </trans-unit>
        <trans-unit id="dd9e277ade1421f71f696bca6d17b5a1dd0c7a52" translate="yes" xml:space="preserve">
          <source>XYSeries.insert()</source>
          <target state="translated">XYSeries.insert()</target>
        </trans-unit>
        <trans-unit id="bc737e94e12aad8b2b015831ead6c982594ccc3c" translate="yes" xml:space="preserve">
          <source>XYSeries.pointAdded()</source>
          <target state="translated">XYSeries.pointAdded()</target>
        </trans-unit>
        <trans-unit id="378cec3d645ebef04c6ce06d6ca7fb7d0a401e13" translate="yes" xml:space="preserve">
          <source>XYSeries.pointLabelsClipping</source>
          <target state="translated">XYSeries.pointLabelsClipping</target>
        </trans-unit>
        <trans-unit id="405dcc53aba43ab6e1d5c5c89ae252d29720ff8c" translate="yes" xml:space="preserve">
          <source>XYSeries.pointLabelsColor</source>
          <target state="translated">XYSeries.pointLabelsColor</target>
        </trans-unit>
        <trans-unit id="23d51365f86a594292cb6ee8e3c538ed34a29c4f" translate="yes" xml:space="preserve">
          <source>XYSeries.pointLabelsFont</source>
          <target state="translated">XYSeries.pointLabelsFont</target>
        </trans-unit>
        <trans-unit id="e5bad906a58314fc5704a915171b726677ea41a8" translate="yes" xml:space="preserve">
          <source>XYSeries.pointLabelsFormat</source>
          <target state="translated">XYSeries.pointLabelsFormat</target>
        </trans-unit>
        <trans-unit id="d7cf99c873cbd922a9828dc0e82d66dc435d01e4" translate="yes" xml:space="preserve">
          <source>XYSeries.pointLabelsVisible</source>
          <target state="translated">XYSeries.pointLabelsVisible</target>
        </trans-unit>
        <trans-unit id="fc490f369467f5b39c0c776eb2e16fcee50e7b4e" translate="yes" xml:space="preserve">
          <source>XYSeries.pointRemoved()</source>
          <target state="translated">XYSeries.pointRemoved()</target>
        </trans-unit>
        <trans-unit id="5c0432121193938c35a606858991cbbe1ebf0b92" translate="yes" xml:space="preserve">
          <source>XYSeries.pointReplaced()</source>
          <target state="translated">XYSeries.pointReplaced()</target>
        </trans-unit>
        <trans-unit id="66106f5c1a705da67431940200c45b0a4262d46c" translate="yes" xml:space="preserve">
          <source>XYSeries.pointsRemoved()</source>
          <target state="translated">XYSeries.pointsRemoved()</target>
        </trans-unit>
        <trans-unit id="7328782f17836c5a37bbcc8ccf3e4c4c8b02b18e" translate="yes" xml:space="preserve">
          <source>XYSeries.pointsReplaced()</source>
          <target state="translated">XYSeries.pointsReplaced()</target>
        </trans-unit>
        <trans-unit id="bb87487be824f2c79d1bb39e828a0d26003cd977" translate="yes" xml:space="preserve">
          <source>XYSeries.pointsVisible</source>
          <target state="translated">XYSeries.pointsVisible</target>
        </trans-unit>
        <trans-unit id="ec8ea24fb75ca4ee2295c39257902b944326e2ba" translate="yes" xml:space="preserve">
          <source>XYSeries.pressed()</source>
          <target state="translated">XYSeries.pressed()</target>
        </trans-unit>
        <trans-unit id="5be9d88f249a7120e1811e3ef39decf28dd008c4" translate="yes" xml:space="preserve">
          <source>XYSeries.released()</source>
          <target state="translated">XYSeries.released()</target>
        </trans-unit>
        <trans-unit id="c2d99692330a3ec8600cb4f22e4ebf56bba4ece4" translate="yes" xml:space="preserve">
          <source>XYSeries.remove()</source>
          <target state="translated">XYSeries.remove()</target>
        </trans-unit>
        <trans-unit id="ef840b57a60a23899ef4680327918c1a5312576a" translate="yes" xml:space="preserve">
          <source>XYSeries.removePoints()</source>
          <target state="translated">XYSeries.removePoints()</target>
        </trans-unit>
        <trans-unit id="7854239ede6717bef6e035d2974e865945f7cd12" translate="yes" xml:space="preserve">
          <source>XYSeries.replace()</source>
          <target state="translated">XYSeries.replace()</target>
        </trans-unit>
        <trans-unit id="64d36ae69ab9210cfc1f0a43d303686988db04f8" translate="yes" xml:space="preserve">
          <source>Xcode</source>
          <target state="translated">Xcode</target>
        </trans-unit>
        <trans-unit id="64c33473833277994313273727dd28923b640723" translate="yes" xml:space="preserve">
          <source>Xcode 10.0 or later</source>
          <target state="translated">Xcode 10.0 or later</target>
        </trans-unit>
        <trans-unit id="77e3fde3f9225ce8f1c5b625fd3204f6490e9dad" translate="yes" xml:space="preserve">
          <source>Xcode 11 (10.15 SDK)</source>
          <target state="translated">Xcode 11 (10.15 SDK)</target>
        </trans-unit>
        <trans-unit id="62ab202d79138ba19899144c7f732afd20abf831" translate="yes" xml:space="preserve">
          <source>Xcode 11 (tvOS 13 SDK)</source>
          <target state="translated">Xcode 11 (tvOS 13 SDK)</target>
        </trans-unit>
        <trans-unit id="516aa9b342cd9539cf5dcadec6b56b824056f424" translate="yes" xml:space="preserve">
          <source>Xcode 11 (watchOS 6 SDK)</source>
          <target state="translated">Xcode 11 (watchOS 6 SDK)</target>
        </trans-unit>
        <trans-unit id="d51c001255547f24d9d36ad501e109f763f75a70" translate="yes" xml:space="preserve">
          <source>Xcode 8.3.3 or later</source>
          <target state="translated">Xcode 8.3.3 이상</target>
        </trans-unit>
        <trans-unit id="735588274ef149064cd26f3917454c9068d1495f" translate="yes" xml:space="preserve">
          <source>Xcode can be downloaded from Apple's &lt;a href=&quot;https://developer.apple.com/download/&quot;&gt;developer website&lt;/a&gt; (including older versions of Xcode). Once installed, choosing an Xcode installation is done using the &lt;code&gt;xcode-select&lt;/code&gt; tool.</source>
          <target state="translated">Xcode는 Apple &lt;a href=&quot;https://developer.apple.com/download/&quot;&gt;개발자 웹 사이트&lt;/a&gt; (이전 버전의 Xcode 포함) 에서 다운로드 할 수 있습니다 . 일단 설치되면 &lt;code&gt;xcode-select&lt;/code&gt; 도구를 사용하여 Xcode 설치를 선택합니다 .</target>
        </trans-unit>
        <trans-unit id="176bda37b06043310846e8e278d1592f9353fde5" translate="yes" xml:space="preserve">
          <source>Xcode on does not matter. As long as Apple ships a given Xcode version that runs on your operating system, the build environment will be defined by that Xcode version.</source>
          <target state="translated">Xcode on은 중요하지 않습니다. Apple이 운영 체제에서 실행되는 지정된 Xcode 버전을 제공하는 한 빌드 환경은 해당 Xcode 버전으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="33be511091c341bb02c09cb0651c80de6340841d" translate="yes" xml:space="preserve">
          <source>XdgDecorationManagerV1 (QML type)</source>
          <target state="translated">XdgDecorationManagerV1 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="1ff7b687bcafb138ffc9956a956281b2efd911de" translate="yes" xml:space="preserve">
          <source>XdgDecorationManagerV1 QML Type</source>
          <target state="translated">XdgDecorationManagerV1 QML 유형</target>
        </trans-unit>
        <trans-unit id="6e6d06ac9a95782e5465253e9afcd039549f53c7" translate="yes" xml:space="preserve">
          <source>XdgDecorationManagerV1 corresponds to the Wayland interface, &lt;code&gt;zxdg_decoration_manager_v1&lt;/code&gt;.</source>
          <target state="translated">XdgDecorationManagerV1 corresponds to the Wayland interface, &lt;code&gt;zxdg_decoration_manager_v1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdf528f70e2397c6a0dcf07947b88a9e91214022" translate="yes" xml:space="preserve">
          <source>XdgDecorationManagerV1.preferredMode</source>
          <target state="translated">XdgDecorationManagerV1.preferredMode</target>
        </trans-unit>
        <trans-unit id="b352dd5dcee370a1ef4ee869b4a44d2faf03048b" translate="yes" xml:space="preserve">
          <source>XdgOutputManagerV1 (QML type)</source>
          <target state="translated">XdgOutputManagerV1 (QML type)</target>
        </trans-unit>
        <trans-unit id="aaa6fbcc0525b37bbedd386306f2b24e72327537" translate="yes" xml:space="preserve">
          <source>XdgOutputManagerV1 QML Type</source>
          <target state="translated">XdgOutputManagerV1 QML Type</target>
        </trans-unit>
        <trans-unit id="45eca8986c6feec96bda80d0c8494c73a9a5dc8b" translate="yes" xml:space="preserve">
          <source>XdgOutputManagerV1 corresponds to the Wayland interface, &lt;code&gt;zxdg_output_manager_v1&lt;/code&gt;.</source>
          <target state="translated">XdgOutputManagerV1 corresponds to the Wayland interface, &lt;code&gt;zxdg_output_manager_v1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8989ed048584ce1ec89039a9f0356bc980f019e7" translate="yes" xml:space="preserve">
          <source>XdgPopup (QML type)</source>
          <target state="translated">XdgPopup (QML 유형)</target>
        </trans-unit>
        <trans-unit id="311e12df3be17dc7cbb450104e7316abe7122b2c" translate="yes" xml:space="preserve">
          <source>XdgPopup QML Type</source>
          <target state="translated">XdgPopup QML 유형</target>
        </trans-unit>
        <trans-unit id="b496cc1fd8ffaac846a423f47d229dc7a43dbccd" translate="yes" xml:space="preserve">
          <source>XdgPopup represents the popup specific parts of and xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">XdgPopup represents the popup specific parts of and xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6464a3a3889db17a530d719a9fab382364e4bffd" translate="yes" xml:space="preserve">
          <source>XdgPopup.anchorEdges</source>
          <target state="translated">XdgPopup.anchorEdges</target>
        </trans-unit>
        <trans-unit id="a0f90db53a203cfac2d98a36be1939eaaae9e554" translate="yes" xml:space="preserve">
          <source>XdgPopup.anchorRect</source>
          <target state="translated">XdgPopup.anchorRect</target>
        </trans-unit>
        <trans-unit id="e7740fbf0cd7ddd597f4382704bf06443cf0d7b9" translate="yes" xml:space="preserve">
          <source>XdgPopup.configuredGeometry</source>
          <target state="translated">XdgPopup.configuredGeometry</target>
        </trans-unit>
        <trans-unit id="834853f1aa6a19ffb46ea0b4a8b9ac8bab173b3e" translate="yes" xml:space="preserve">
          <source>XdgPopup.flipConstraints</source>
          <target state="translated">XdgPopup.flipConstraints</target>
        </trans-unit>
        <trans-unit id="506c50fcc18ffb1c58cf98b452564f5d0582e273" translate="yes" xml:space="preserve">
          <source>XdgPopup.gravityEdges</source>
          <target state="translated">XdgPopup.gravityEdges</target>
        </trans-unit>
        <trans-unit id="a2482e771685a0a90b57de841b81eaa18e8a5a96" translate="yes" xml:space="preserve">
          <source>XdgPopup.offset</source>
          <target state="translated">XdgPopup.offset</target>
        </trans-unit>
        <trans-unit id="ba206edd3f2eff85189de86188873f2c3dcec1ab" translate="yes" xml:space="preserve">
          <source>XdgPopup.parentXdgSurface</source>
          <target state="translated">XdgPopup.parentXdgSurface</target>
        </trans-unit>
        <trans-unit id="c5e4a9733af0ffe7fb64f981f4de0e4e39a62464" translate="yes" xml:space="preserve">
          <source>XdgPopup.positionerSize</source>
          <target state="translated">XdgPopup.positionerSize</target>
        </trans-unit>
        <trans-unit id="65d1ba497be800d04d19ce84e84b0bbbcde417d8" translate="yes" xml:space="preserve">
          <source>XdgPopup.resizeConstraints</source>
          <target state="translated">XdgPopup.resizeConstraints</target>
        </trans-unit>
        <trans-unit id="bd281a16222cac6b8dffaa375ce397f04b4e0a0d" translate="yes" xml:space="preserve">
          <source>XdgPopup.sendConfigure()</source>
          <target state="translated">XdgPopup.sendConfigure()</target>
        </trans-unit>
        <trans-unit id="d257fd29f307fe97d494c62cb3508a6b3367a9aa" translate="yes" xml:space="preserve">
          <source>XdgPopup.sendPopupDone()</source>
          <target state="translated">XdgPopup.sendPopupDone()</target>
        </trans-unit>
        <trans-unit id="62b228f19dabd6ac433976dbe81a533981c16c6e" translate="yes" xml:space="preserve">
          <source>XdgPopup.slideConstraints</source>
          <target state="translated">XdgPopup.slideConstraints</target>
        </trans-unit>
        <trans-unit id="9073568e6dcfbb64256da11f0101fcec38bc4129" translate="yes" xml:space="preserve">
          <source>XdgPopup.unconstrainedPosition</source>
          <target state="translated">XdgPopup.unconstrainedPosition</target>
        </trans-unit>
        <trans-unit id="9173f3b97eb178ad6fb7210e43a6d85588482383" translate="yes" xml:space="preserve">
          <source>XdgPopup.xdgSurface</source>
          <target state="translated">XdgPopup.xdgSurface</target>
        </trans-unit>
        <trans-unit id="5e0557e123b5805a57d21c31a142d5de7e663e2f" translate="yes" xml:space="preserve">
          <source>XdgPopupV5 (QML type)</source>
          <target state="translated">XdgPopupV5 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="b3e9af3059bab81863940d3eea5e709ce9e22c28" translate="yes" xml:space="preserve">
          <source>XdgPopupV5 QML Type</source>
          <target state="translated">XdgPopupV5 QML 유형</target>
        </trans-unit>
        <trans-unit id="e50968de535ff28aba88ca7640355fa3f0e277f6" translate="yes" xml:space="preserve">
          <source>XdgPopupV5.initialize()</source>
          <target state="translated">XdgPopupV5.initialize()</target>
        </trans-unit>
        <trans-unit id="b34332d4b144f3e64596d044fea6f5aedeaf1c3b" translate="yes" xml:space="preserve">
          <source>XdgPopupV5.parentSurface</source>
          <target state="translated">XdgPopupV5.parentSurface</target>
        </trans-unit>
        <trans-unit id="85d9837137ad3cbd84d93e2d7c13d2166d5cbcdb" translate="yes" xml:space="preserve">
          <source>XdgPopupV5.position</source>
          <target state="translated">XdgPopupV5.position</target>
        </trans-unit>
        <trans-unit id="f2b1c218007cf8816c5511f9abd22ea25cc5ce71" translate="yes" xml:space="preserve">
          <source>XdgPopupV5.shell</source>
          <target state="translated">XdgPopupV5.shell</target>
        </trans-unit>
        <trans-unit id="31ca9c5437fac748ea1ea4ec18347f4c363dd3d3" translate="yes" xml:space="preserve">
          <source>XdgPopupV5.surface</source>
          <target state="translated">XdgPopupV5.surface</target>
        </trans-unit>
        <trans-unit id="6fb32dc122ff62a06f42aa3b89e5b68305c44888" translate="yes" xml:space="preserve">
          <source>XdgPopupV6 (QML type)</source>
          <target state="translated">XdgPopupV6 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="a6686e510fcd25221293efa8da66f5ef50d10c10" translate="yes" xml:space="preserve">
          <source>XdgPopupV6 QML Type</source>
          <target state="translated">XdgPopupV6 QML 유형</target>
        </trans-unit>
        <trans-unit id="5460a72257e3b537359c731a2dfd5e06ad202422" translate="yes" xml:space="preserve">
          <source>XdgPopupV6 represents the popup specific parts of and xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">XdgPopupV6 represents the popup specific parts of and xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="555fb29f34387e4ea7a6002e7ff667762968d444" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.anchorEdges</source>
          <target state="translated">XdgPopupV6.anchorEdges</target>
        </trans-unit>
        <trans-unit id="d67c31ea9a8c9145ca86ac17f5d8530b52a6bfb2" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.anchorRect</source>
          <target state="translated">XdgPopupV6.anchorRect</target>
        </trans-unit>
        <trans-unit id="8491afffffdf052ad667875e74608e4e1bc46b15" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.configuredGeometry</source>
          <target state="translated">XdgPopupV6.configuredGeometry</target>
        </trans-unit>
        <trans-unit id="dd23f1ae07c8c83d28f1a7341be47079768232dc" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.flipConstraints</source>
          <target state="translated">XdgPopupV6.flipConstraints</target>
        </trans-unit>
        <trans-unit id="33b913cf34b9a9462e3a85297478c055086db2cd" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.gravityEdges</source>
          <target state="translated">XdgPopupV6.gravityEdges</target>
        </trans-unit>
        <trans-unit id="845ee639958753efa8f1d48904f59c607f912668" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.offset</source>
          <target state="translated">XdgPopupV6.offset</target>
        </trans-unit>
        <trans-unit id="83c95943b40b41c05fb99375133b8f5321f72b35" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.parentXdgSurface</source>
          <target state="translated">XdgPopupV6.parentXdgSurface</target>
        </trans-unit>
        <trans-unit id="3fbaeb24286926b0576cb8c8ecd059c7fd4b7ed3" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.positionerSize</source>
          <target state="translated">XdgPopupV6.positionerSize</target>
        </trans-unit>
        <trans-unit id="3403c3f844fb684de6d26fa78320c4ecb7b891ee" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.resizeConstraints</source>
          <target state="translated">XdgPopupV6.resizeConstraints</target>
        </trans-unit>
        <trans-unit id="a8c3d6bfeb48c757587fe4fde49b489170646988" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.sendConfigure()</source>
          <target state="translated">XdgPopupV6.sendConfigure()</target>
        </trans-unit>
        <trans-unit id="6ea1a5a91251c92ad5c65b8c4f747a2bf4c3aea8" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.sendPopupDone()</source>
          <target state="translated">XdgPopupV6.sendPopupDone()</target>
        </trans-unit>
        <trans-unit id="f1ad5b4b93b6dc429182ae588fd2643688c44374" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.slideConstraints</source>
          <target state="translated">XdgPopupV6.slideConstraints</target>
        </trans-unit>
        <trans-unit id="f1d4046697f05170d5801fd0f50a086ef381c8a4" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.unconstrainedPosition</source>
          <target state="translated">XdgPopupV6.unconstrainedPosition</target>
        </trans-unit>
        <trans-unit id="fa5323759629df91b836b23b2e16e32cbf3699c3" translate="yes" xml:space="preserve">
          <source>XdgPopupV6.xdgSurface</source>
          <target state="translated">XdgPopupV6.xdgSurface</target>
        </trans-unit>
        <trans-unit id="34e28c503681b397b07a79d4ef912521b264b185" translate="yes" xml:space="preserve">
          <source>XdgShell (QML type)</source>
          <target state="translated">XdgShell (QML 유형)</target>
        </trans-unit>
        <trans-unit id="e29d6f2550afe78219ecee91587b10e5bb4811a8" translate="yes" xml:space="preserve">
          <source>XdgShell QML Type</source>
          <target state="translated">XdgShell QML 유형</target>
        </trans-unit>
        <trans-unit id="ce89271f77d14a79a84d4ffe3e46acad73143d79" translate="yes" xml:space="preserve">
          <source>XdgShell corresponds to the Wayland interface, &lt;code&gt;xdg_shell&lt;/code&gt;.</source>
          <target state="translated">XdgShell corresponds to the Wayland interface, &lt;code&gt;xdg_shell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cccd58ef610cf93e4a49fb4c4f92be8650fcc75" translate="yes" xml:space="preserve">
          <source>XdgShell.ping()</source>
          <target state="translated">XdgShell.ping()</target>
        </trans-unit>
        <trans-unit id="b05267c95d4a8d0f4cedeef80c662eba35368735" translate="yes" xml:space="preserve">
          <source>XdgShell.pong()</source>
          <target state="translated">XdgShell.pong()</target>
        </trans-unit>
        <trans-unit id="a313bc962307fa49ccb7d4d2eccadaf23c692c7e" translate="yes" xml:space="preserve">
          <source>XdgShell.popupCreated()</source>
          <target state="translated">XdgShell.popupCreated()</target>
        </trans-unit>
        <trans-unit id="3b4a45eb5d6fd6deb11b9050aae25b42b2da8649" translate="yes" xml:space="preserve">
          <source>XdgShell.toplevelCreated()</source>
          <target state="translated">XdgShell.toplevelCreated()</target>
        </trans-unit>
        <trans-unit id="009630eaca912339411601d9b2b30c116efd1926" translate="yes" xml:space="preserve">
          <source>XdgShell.xdgSurfaceCreated()</source>
          <target state="translated">XdgShell.xdgSurfaceCreated()</target>
        </trans-unit>
        <trans-unit id="2f9cf436df9e7322613fbd41fc0e6e63c9bf8e38" translate="yes" xml:space="preserve">
          <source>XdgShellV5 (QML type)</source>
          <target state="translated">XdgShellV5 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="4ec22b904e6190c89bda9716c8ec995c492f19e1" translate="yes" xml:space="preserve">
          <source>XdgShellV5 QML Type</source>
          <target state="translated">XdgShellV5 QML 유형</target>
        </trans-unit>
        <trans-unit id="9c788e0c957244a62160dd26ae75abe520b5499f" translate="yes" xml:space="preserve">
          <source>XdgShellV5 corresponds to the Wayland interface &lt;code&gt;xdg_shell&lt;/code&gt;.</source>
          <target state="translated">XdgShellV5 corresponds to the Wayland interface &lt;code&gt;xdg_shell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3d4587fe5588998f113d6cc6d7fd21bd998b99f" translate="yes" xml:space="preserve">
          <source>XdgShellV5.ping()</source>
          <target state="translated">XdgShellV5.ping()</target>
        </trans-unit>
        <trans-unit id="537d2a88dc3bdb22cb64f0204dfa365812211629" translate="yes" xml:space="preserve">
          <source>XdgShellV5.pong()</source>
          <target state="translated">XdgShellV5.pong()</target>
        </trans-unit>
        <trans-unit id="85eddfebbc4b7802ca5c1f15095f365e9826f384" translate="yes" xml:space="preserve">
          <source>XdgShellV5.xdgPopupCreated()</source>
          <target state="translated">XdgShellV5.xdgPopupCreated()</target>
        </trans-unit>
        <trans-unit id="0abf72ee113cddc2dac1964ba67e18772f89fbc2" translate="yes" xml:space="preserve">
          <source>XdgShellV5.xdgPopupRequested()</source>
          <target state="translated">XdgShellV5.xdgPopupRequested()</target>
        </trans-unit>
        <trans-unit id="e9776fa32c79a94e612355c13c10b44c2da306e9" translate="yes" xml:space="preserve">
          <source>XdgShellV5.xdgSurfaceCreated()</source>
          <target state="translated">XdgShellV5.xdgSurfaceCreated()</target>
        </trans-unit>
        <trans-unit id="44600b2b75004b9683afe1564c49a41f2fc9133a" translate="yes" xml:space="preserve">
          <source>XdgShellV5.xdgSurfaceRequested()</source>
          <target state="translated">XdgShellV5.xdgSurfaceRequested()</target>
        </trans-unit>
        <trans-unit id="770457c6593d6a8f2cdceb2763741cba93f62a1a" translate="yes" xml:space="preserve">
          <source>XdgShellV6 (QML type)</source>
          <target state="translated">XdgShellV6 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="083bd52dfded9e90e1a24ba8bf9d11a69135bb6b" translate="yes" xml:space="preserve">
          <source>XdgShellV6 QML Type</source>
          <target state="translated">XdgShellV6 QML 유형</target>
        </trans-unit>
        <trans-unit id="738919ea66ea597dae846edc603933f0922e5951" translate="yes" xml:space="preserve">
          <source>XdgShellV6 corresponds to the Wayland interface, &lt;code&gt;zxdg_shell_v6&lt;/code&gt;.</source>
          <target state="translated">XdgShellV6 corresponds to the Wayland interface, &lt;code&gt;zxdg_shell_v6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40b1df5597eb9025327010205d802c715fafee51" translate="yes" xml:space="preserve">
          <source>XdgShellV6.ping()</source>
          <target state="translated">XdgShellV6.ping()</target>
        </trans-unit>
        <trans-unit id="a875334aa652ec3aaccada751b526b7ce1e226cc" translate="yes" xml:space="preserve">
          <source>XdgShellV6.pong()</source>
          <target state="translated">XdgShellV6.pong()</target>
        </trans-unit>
        <trans-unit id="790fee2d11ff17cc037ac82a303686f41a6ada90" translate="yes" xml:space="preserve">
          <source>XdgShellV6.popupCreated()</source>
          <target state="translated">XdgShellV6.popupCreated()</target>
        </trans-unit>
        <trans-unit id="3a8f5da43ce0e932b584dfd0512a802f0c99112a" translate="yes" xml:space="preserve">
          <source>XdgShellV6.toplevelCreated()</source>
          <target state="translated">XdgShellV6.toplevelCreated()</target>
        </trans-unit>
        <trans-unit id="c8c535d36be34d4818dca19dcc6472fb6de911db" translate="yes" xml:space="preserve">
          <source>XdgShellV6.xdgSurfaceCreated()</source>
          <target state="translated">XdgShellV6.xdgSurfaceCreated()</target>
        </trans-unit>
        <trans-unit id="c6a13bbf1274fb87d4bae073146e6119ad8af6c7" translate="yes" xml:space="preserve">
          <source>XdgSurface (QML type)</source>
          <target state="translated">XdgSurface (QML 유형)</target>
        </trans-unit>
        <trans-unit id="3557f83a6b3d421d77e35efedcbb8d898e5987cd" translate="yes" xml:space="preserve">
          <source>XdgSurface QML Type</source>
          <target state="translated">XdgSurface QML 유형</target>
        </trans-unit>
        <trans-unit id="4898ad592beabce5260face26973ac2d1d1e9c31" translate="yes" xml:space="preserve">
          <source>XdgSurface provides desktop-style compositor-specific features to an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">XdgSurface provides desktop-style compositor-specific features to an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1645f7be468e9a06fb67937353e62290abc9e47" translate="yes" xml:space="preserve">
          <source>XdgSurface.initialize()</source>
          <target state="translated">XdgSurface.initialize()</target>
        </trans-unit>
        <trans-unit id="3fd6335df7ce0088fb74adff0461380177935493" translate="yes" xml:space="preserve">
          <source>XdgSurface.popup</source>
          <target state="translated">XdgSurface.popup</target>
        </trans-unit>
        <trans-unit id="21d356b0eba9a1886ad43a3d9fa637ec172cefd1" translate="yes" xml:space="preserve">
          <source>XdgSurface.shell</source>
          <target state="translated">XdgSurface.shell</target>
        </trans-unit>
        <trans-unit id="e686fd91e5b80521532fa01b37953bd05ddd93cc" translate="yes" xml:space="preserve">
          <source>XdgSurface.surface</source>
          <target state="translated">XdgSurface.surface</target>
        </trans-unit>
        <trans-unit id="ce52251e33e8a2699204073f6fb743dbe81de6a0" translate="yes" xml:space="preserve">
          <source>XdgSurface.toplevel</source>
          <target state="translated">XdgSurface.toplevel</target>
        </trans-unit>
        <trans-unit id="49943dc2c3ff51394f1c16b49502967235d1c822" translate="yes" xml:space="preserve">
          <source>XdgSurface.windowGeometry</source>
          <target state="translated">XdgSurface.windowGeometry</target>
        </trans-unit>
        <trans-unit id="0211f0c0e7fdde85235d37f1bb33c61dd921143e" translate="yes" xml:space="preserve">
          <source>XdgSurface.windowType</source>
          <target state="translated">XdgSurface.windowType</target>
        </trans-unit>
        <trans-unit id="6e3c6dd80e7b33e2d08435adf6f14cd94fec2674" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5 (QML type)</source>
          <target state="translated">XdgSurfaceV5 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="f13276b35f5b081377e7a931d03c429c0e0e21b7" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5 QML Type</source>
          <target state="translated">XdgSurfaceV5 QML 유형</target>
        </trans-unit>
        <trans-unit id="46256378be988cadc2a752c853aaf9d0b55b6fe3" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.ackConfigure()</source>
          <target state="translated">XdgSurfaceV5.ackConfigure()</target>
        </trans-unit>
        <trans-unit id="d86aee984ff8f5d3d1666860a110bc43d81efb52" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.initialize()</source>
          <target state="translated">XdgSurfaceV5.initialize()</target>
        </trans-unit>
        <trans-unit id="de7e6349ef55a32224172b4b413b0dd76a735dfa" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.parentSurface</source>
          <target state="translated">XdgSurfaceV5.parentSurface</target>
        </trans-unit>
        <trans-unit id="e1f809cc27ca3d17a2e7bbe6c4b8dd429a7f2eaf" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.sendClose()</source>
          <target state="translated">XdgSurfaceV5.sendClose()</target>
        </trans-unit>
        <trans-unit id="fd2313c0ca1c33e3e1d6d022e561074a94222b5e" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.sendConfigure()</source>
          <target state="translated">XdgSurfaceV5.sendConfigure()</target>
        </trans-unit>
        <trans-unit id="8217258b6b3a0948243699dbc26c6ff03a551ce1" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.setFullscreen()</source>
          <target state="translated">XdgSurfaceV5.setFullscreen()</target>
        </trans-unit>
        <trans-unit id="e577cabf1b5ea40ed30eb4109ca338b5d56d1da7" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.setMaximized()</source>
          <target state="translated">XdgSurfaceV5.setMaximized()</target>
        </trans-unit>
        <trans-unit id="cb9358121b05f9ac7bfe353fc97fd5d331772dfe" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.setMinimized()</source>
          <target state="translated">XdgSurfaceV5.setMinimized()</target>
        </trans-unit>
        <trans-unit id="d04691d8aa6bed5110c032dd5e1be267f465ef39" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.setTopLevel()</source>
          <target state="translated">XdgSurfaceV5.setTopLevel()</target>
        </trans-unit>
        <trans-unit id="6d7675359d1209a7386336a99e0e34045379273e" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.setTransient()</source>
          <target state="translated">XdgSurfaceV5.setTransient()</target>
        </trans-unit>
        <trans-unit id="0394e50bee2aa7fe0d27a9cf417973acfd75d374" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.shell</source>
          <target state="translated">XdgSurfaceV5.shell</target>
        </trans-unit>
        <trans-unit id="b479b8cfdff86dca5dddf029d64377a62968e871" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.showWindowMenu()</source>
          <target state="translated">XdgSurfaceV5.showWindowMenu()</target>
        </trans-unit>
        <trans-unit id="74ba6e87e6b6e16559ed73df1c9cad26ab2ef15b" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.startMove()</source>
          <target state="translated">XdgSurfaceV5.startMove()</target>
        </trans-unit>
        <trans-unit id="cd8555354728c8273311bd559870fedbe5bb70a5" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.startResize()</source>
          <target state="translated">XdgSurfaceV5.startResize()</target>
        </trans-unit>
        <trans-unit id="acee30c89c06ddb06e8f1178afde28c3b6c394e2" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.surface</source>
          <target state="translated">XdgSurfaceV5.surface</target>
        </trans-unit>
        <trans-unit id="749905199b349e91ce4ac24a236f5e422a47381c" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.title</source>
          <target state="translated">XdgSurfaceV5.title</target>
        </trans-unit>
        <trans-unit id="4babc1c2b51a67c33f9db73dfac5973258f1911e" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.unsetFullscreen()</source>
          <target state="translated">XdgSurfaceV5.unsetFullscreen()</target>
        </trans-unit>
        <trans-unit id="1dfe757f04f91207a56d87120bd0e4df0b1098b0" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.unsetMaximized()</source>
          <target state="translated">XdgSurfaceV5.unsetMaximized()</target>
        </trans-unit>
        <trans-unit id="f5b20cffafc89e3ea2eb461656a4b3f73901ff3d" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV5.windowType</source>
          <target state="translated">XdgSurfaceV5.windowType</target>
        </trans-unit>
        <trans-unit id="5390f0c80119e77eb8f898b1ce010a6da5ec6b2a" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6 (QML type)</source>
          <target state="translated">XdgSurfaceV6 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="868a55e71f1ce1a277e17920edd0adc1fd7bf8b8" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6 QML Type</source>
          <target state="translated">XdgSurfaceV6 QML 유형</target>
        </trans-unit>
        <trans-unit id="f7d8d69957cd69684457d5aebd21b1edc534ada7" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6 provides desktop-style compositor-specific features to an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">XdgSurfaceV6 provides desktop-style compositor-specific features to an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a121fd01401716c3cc09a1b014515f82e64175e3" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6.initialize()</source>
          <target state="translated">XdgSurfaceV6.initialize()</target>
        </trans-unit>
        <trans-unit id="dc10b1935363ffb04318067ee4ddcdab756161f9" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6.popup</source>
          <target state="translated">XdgSurfaceV6.popup</target>
        </trans-unit>
        <trans-unit id="d8d0cfdc18d435a9a4e60d27cd9cdeb301af23d9" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6.shell</source>
          <target state="translated">XdgSurfaceV6.shell</target>
        </trans-unit>
        <trans-unit id="f2b8e2a2c9cf816f15e18df1ee644d06fd170b2e" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6.surface</source>
          <target state="translated">XdgSurfaceV6.surface</target>
        </trans-unit>
        <trans-unit id="14d92dacd367404cbd43e9acf0a6bc02bea120fd" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6.toplevel</source>
          <target state="translated">XdgSurfaceV6.toplevel</target>
        </trans-unit>
        <trans-unit id="a68dd769b78c02e1912cb0e6f3ea09c38363f541" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6.windowGeometry</source>
          <target state="translated">XdgSurfaceV6.windowGeometry</target>
        </trans-unit>
        <trans-unit id="4faee35dff98b0c1b5e1be495b27b3d4fd90301c" translate="yes" xml:space="preserve">
          <source>XdgSurfaceV6.windowType</source>
          <target state="translated">XdgSurfaceV6.windowType</target>
        </trans-unit>
        <trans-unit id="833a8429238f4670386ef9b9256a5e8669479d2f" translate="yes" xml:space="preserve">
          <source>XdgToplevel (QML type)</source>
          <target state="translated">XdgToplevel (QML 유형)</target>
        </trans-unit>
        <trans-unit id="99cc4a580244c6327976ce9759a1430fc51c81d6" translate="yes" xml:space="preserve">
          <source>XdgToplevel QML Type</source>
          <target state="translated">XdgToplevel QML 유형</target>
        </trans-unit>
        <trans-unit id="ac6d7493940a3cc81a30ed8e62b98c59c8be9ef7" translate="yes" xml:space="preserve">
          <source>XdgToplevel represents the toplevel window specific parts of an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">XdgToplevel represents the toplevel window specific parts of an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e48ef1e166955dbc966fb47ef632451ebc6a1a73" translate="yes" xml:space="preserve">
          <source>XdgToplevel.activated</source>
          <target state="translated">XdgToplevel.activated</target>
        </trans-unit>
        <trans-unit id="bb909d87e5cb8c718cbae03b136b2320c7e5406f" translate="yes" xml:space="preserve">
          <source>XdgToplevel.appId</source>
          <target state="translated">XdgToplevel.appId</target>
        </trans-unit>
        <trans-unit id="3f344e20c8a10528e82f5ab13c59cbcf616c3eba" translate="yes" xml:space="preserve">
          <source>XdgToplevel.decorationMode</source>
          <target state="translated">XdgToplevel.decorationMode</target>
        </trans-unit>
        <trans-unit id="d0f98e22590fbfc2aa4715012fb4f0c03ff4f9ca" translate="yes" xml:space="preserve">
          <source>XdgToplevel.fullscreen</source>
          <target state="translated">XdgToplevel.fullscreen</target>
        </trans-unit>
        <trans-unit id="e47954b4b1a9c2c1ec961f8d559c29cf64ba9762" translate="yes" xml:space="preserve">
          <source>XdgToplevel.maxSize</source>
          <target state="translated">XdgToplevel.maxSize</target>
        </trans-unit>
        <trans-unit id="e092843b026b93016ebca523ffbe6311b6ec609a" translate="yes" xml:space="preserve">
          <source>XdgToplevel.maximized</source>
          <target state="translated">XdgToplevel.maximized</target>
        </trans-unit>
        <trans-unit id="bfa9ef1f0db5438053d2cace5ffa8a9bf64b6c3a" translate="yes" xml:space="preserve">
          <source>XdgToplevel.minSize</source>
          <target state="translated">XdgToplevel.minSize</target>
        </trans-unit>
        <trans-unit id="003c1870bf420f58c0b13433deb8bd0314dc5068" translate="yes" xml:space="preserve">
          <source>XdgToplevel.parentToplevel</source>
          <target state="translated">XdgToplevel.parentToplevel</target>
        </trans-unit>
        <trans-unit id="7fcb3da92381bcaa3ce4e7700c09dba4df72b87b" translate="yes" xml:space="preserve">
          <source>XdgToplevel.resizing</source>
          <target state="translated">XdgToplevel.resizing</target>
        </trans-unit>
        <trans-unit id="a1830e61bbbc0ea21059ea225c800e600c27f413" translate="yes" xml:space="preserve">
          <source>XdgToplevel.sendClose()</source>
          <target state="translated">XdgToplevel.sendClose()</target>
        </trans-unit>
        <trans-unit id="a4909f3102bdf2e48d78a5652ed3ca668ce72e82" translate="yes" xml:space="preserve">
          <source>XdgToplevel.sendConfigure()</source>
          <target state="translated">XdgToplevel.sendConfigure()</target>
        </trans-unit>
        <trans-unit id="9edfca10c2c1854640ce683d6edb3731a5810e20" translate="yes" xml:space="preserve">
          <source>XdgToplevel.sendFullscreen()</source>
          <target state="translated">XdgToplevel.sendFullscreen()</target>
        </trans-unit>
        <trans-unit id="4da58b1646c36f8619cadcb390bffe1929921f95" translate="yes" xml:space="preserve">
          <source>XdgToplevel.sendMaximized()</source>
          <target state="translated">XdgToplevel.sendMaximized()</target>
        </trans-unit>
        <trans-unit id="5917e06a5567cd1b9a1c82a2230922439a041dd3" translate="yes" xml:space="preserve">
          <source>XdgToplevel.sendResizing()</source>
          <target state="translated">XdgToplevel.sendResizing()</target>
        </trans-unit>
        <trans-unit id="9bdbb7705bd8d2e3778f03f32efa819f2623c5f3" translate="yes" xml:space="preserve">
          <source>XdgToplevel.sendUnmaximized()</source>
          <target state="translated">XdgToplevel.sendUnmaximized()</target>
        </trans-unit>
        <trans-unit id="7d2558504d8e073beeee810dda036ee4cab5e3df" translate="yes" xml:space="preserve">
          <source>XdgToplevel.sizeForResize()</source>
          <target state="translated">XdgToplevel.sizeForResize()</target>
        </trans-unit>
        <trans-unit id="3c23cf1ccabe27c98fddeac9f1c9e4640b31f467" translate="yes" xml:space="preserve">
          <source>XdgToplevel.title</source>
          <target state="translated">XdgToplevel.title</target>
        </trans-unit>
        <trans-unit id="b8fe6342b3c031cde30469a54649f379df1ebb25" translate="yes" xml:space="preserve">
          <source>XdgToplevel.xdgSurface</source>
          <target state="translated">XdgToplevel.xdgSurface</target>
        </trans-unit>
        <trans-unit id="f1791606de55f45bb427773a5f712b7518e960f9" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6 (QML type)</source>
          <target state="translated">XdgToplevelV6 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="40b8a9ba5c8482dfb2fe18edd156863b10a91bd0" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6 QML Type</source>
          <target state="translated">XdgToplevelV6 QML 유형</target>
        </trans-unit>
        <trans-unit id="3660c88129891f77903bd6b2b2cd389c6b48bdb1" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6 represents the toplevel window specific parts of an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">XdgToplevelV6 represents the toplevel window specific parts of an xdg surface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3b9056d61f4de8f13f1c5f651117a04da4d78d7" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.activated</source>
          <target state="translated">XdgToplevelV6.activated</target>
        </trans-unit>
        <trans-unit id="2ecc2c9247587f6bc3dbc7abcda388867bdeba9e" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.appId</source>
          <target state="translated">XdgToplevelV6.appId</target>
        </trans-unit>
        <trans-unit id="a21f3d512c2ed182fa36335783fed28d65afe5e4" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.fullscreen</source>
          <target state="translated">XdgToplevelV6.fullscreen</target>
        </trans-unit>
        <trans-unit id="1e6561e34e6cd25e5f068fcc935afcfa7355f333" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.maxSize</source>
          <target state="translated">XdgToplevelV6.maxSize</target>
        </trans-unit>
        <trans-unit id="0a847a96bf4dacb504aa93dbf48916fed71bd92a" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.maximized</source>
          <target state="translated">XdgToplevelV6.maximized</target>
        </trans-unit>
        <trans-unit id="54f75480aa4e797f68194ebc589e0f2318ae3104" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.minSize</source>
          <target state="translated">XdgToplevelV6.minSize</target>
        </trans-unit>
        <trans-unit id="9e9d1d574dffc53b1d843b1ffadf7af7f835b84f" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.parentToplevel</source>
          <target state="translated">XdgToplevelV6.parentToplevel</target>
        </trans-unit>
        <trans-unit id="9a404d23208ce214204da365f753edd18ba0596b" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.resizing</source>
          <target state="translated">XdgToplevelV6.resizing</target>
        </trans-unit>
        <trans-unit id="516741961ac6ff371784f6360fe390ff4cb2dcf4" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.sendClose()</source>
          <target state="translated">XdgToplevelV6.sendClose()</target>
        </trans-unit>
        <trans-unit id="f7ddd67781de884dc845fccc5cae652454340b48" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.sendConfigure()</source>
          <target state="translated">XdgToplevelV6.sendConfigure()</target>
        </trans-unit>
        <trans-unit id="4017d438c6242eb56dc3b9ce85d56660e99cd5dc" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.sendFullscreen()</source>
          <target state="translated">XdgToplevelV6.sendFullscreen()</target>
        </trans-unit>
        <trans-unit id="941e536db856e32b665e2731b6e9b1b2f546edc5" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.sendMaximized()</source>
          <target state="translated">XdgToplevelV6.sendMaximized()</target>
        </trans-unit>
        <trans-unit id="a96d4720b0fa1c25f6592122f58f9454efc3f313" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.sendResizing()</source>
          <target state="translated">XdgToplevelV6.sendResizing()</target>
        </trans-unit>
        <trans-unit id="64f458940dd8a26a5d0d33e84c716773b6faf670" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.sendUnmaximized()</source>
          <target state="translated">XdgToplevelV6.sendUnmaximized()</target>
        </trans-unit>
        <trans-unit id="eb26393f647534796f3161cf0a89327d975f6c00" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.sizeForResize()</source>
          <target state="translated">XdgToplevelV6.sizeForResize()</target>
        </trans-unit>
        <trans-unit id="40c7fca31a02e5f030ad97e7d67185674190ce6f" translate="yes" xml:space="preserve">
          <source>XdgToplevelV6.title</source>
          <target state="translated">XdgToplevelV6.title</target>
        </trans-unit>
        <trans-unit id="58913c7b7cfaf8152a75a6a8c56103abcbaf61ec" translate="yes" xml:space="preserve">
          <source>Xext</source>
          <target state="translated">Xext</target>
        </trans-unit>
        <trans-unit id="d39676264f702d3adc0513db3c634e7fea3a4679" translate="yes" xml:space="preserve">
          <source>Xi</source>
          <target state="translated">Xi</target>
        </trans-unit>
        <trans-unit id="549fbefe86ea7542c426ed1b6b0f827287e5ea54" translate="yes" xml:space="preserve">
          <source>Xlib/XCB interface library</source>
          <target state="translated">Xlib / XCB 인터페이스 라이브러리</target>
        </trans-unit>
        <trans-unit id="37df1d5dd461e4e334cf413302b1e8894aa58d65" translate="yes" xml:space="preserve">
          <source>XmlListModel (QML type)</source>
          <target state="translated">XmlListModel (QML 유형)</target>
        </trans-unit>
        <trans-unit id="39289add00767e23dfde7d6148fba9e8df299bc8" translate="yes" xml:space="preserve">
          <source>XmlListModel QML Type</source>
          <target state="translated">XmlListModel QML 유형</target>
        </trans-unit>
        <trans-unit id="7d89a08667c9b81e316be65917e05c5139b62f9e" translate="yes" xml:space="preserve">
          <source>XmlListModel is used to create a read-only model from XML data. It can be used as a data source for view elements (such as &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;) and other elements that interact with model data (such as &lt;a href=&quot;qml-qtquick-repeater&quot;&gt;Repeater&lt;/a&gt;).</source>
          <target state="translated">XmlListModel is used to create a read-only model from XML data. It can be used as a data source for view elements (such as &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;) and other elements that interact with model data (such as &lt;a href=&quot;qml-qtquick-repeater&quot;&gt;Repeater&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="ba5e1a66556d49be840093280132fdf99a036812" translate="yes" xml:space="preserve">
          <source>XmlListModel.count</source>
          <target state="translated">XmlListModel.count</target>
        </trans-unit>
        <trans-unit id="33f6b2b3eec6b580f7e04d6ed44bd68289261446" translate="yes" xml:space="preserve">
          <source>XmlListModel.errorString()</source>
          <target state="translated">XmlListModel.errorString()</target>
        </trans-unit>
        <trans-unit id="d7f0f26d89e70f1d58acdc763f705b46e610174c" translate="yes" xml:space="preserve">
          <source>XmlListModel.get()</source>
          <target state="translated">XmlListModel.get()</target>
        </trans-unit>
        <trans-unit id="aa93a2c8dd76d7feaed11d3d4e951e3041c021d2" translate="yes" xml:space="preserve">
          <source>XmlListModel.namespaceDeclarations</source>
          <target state="translated">XmlListModel.namespaceDeclarations</target>
        </trans-unit>
        <trans-unit id="78cf3332bbdcf59cd92fc4fb8c61e45556bdea12" translate="yes" xml:space="preserve">
          <source>XmlListModel.progress</source>
          <target state="translated">XmlListModel.progress</target>
        </trans-unit>
        <trans-unit id="f4cfac0ab691ab73d7a98f1176fb2ed3ed86bc80" translate="yes" xml:space="preserve">
          <source>XmlListModel.query</source>
          <target state="translated">XmlListModel.query</target>
        </trans-unit>
        <trans-unit id="1592a4f7c85716f2f10a0ffc7579ccefe9cd0bed" translate="yes" xml:space="preserve">
          <source>XmlListModel.reload()</source>
          <target state="translated">XmlListModel.reload()</target>
        </trans-unit>
        <trans-unit id="ae2c33f63fd0e8746a74d4f6d7c4ffa7ee28ea86" translate="yes" xml:space="preserve">
          <source>XmlListModel.roles</source>
          <target state="translated">XmlListModel.roles</target>
        </trans-unit>
        <trans-unit id="988487c4378f362280685031016f14c15b6bba22" translate="yes" xml:space="preserve">
          <source>XmlListModel.source</source>
          <target state="translated">XmlListModel.source</target>
        </trans-unit>
        <trans-unit id="175c53b04ee764b677bdd28267a06890abe6b02d" translate="yes" xml:space="preserve">
          <source>XmlListModel.status</source>
          <target state="translated">XmlListModel.status</target>
        </trans-unit>
        <trans-unit id="ea331d3a472e28755be56dac6dc02d3d278d3cde" translate="yes" xml:space="preserve">
          <source>XmlListModel.xml</source>
          <target state="translated">XmlListModel.xml</target>
        </trans-unit>
        <trans-unit id="25a492471903bb06a85f4270e065380e37f2fef0" translate="yes" xml:space="preserve">
          <source>XmlRole (QML type)</source>
          <target state="translated">XmlRole (QML 유형)</target>
        </trans-unit>
        <trans-unit id="075f5a23810cf7d1009af1b6f7154b33040ab5ce" translate="yes" xml:space="preserve">
          <source>XmlRole QML Type</source>
          <target state="translated">XmlRole QML 유형</target>
        </trans-unit>
        <trans-unit id="9890c7078775a2f2da2f131e269990bdb27b8baf" translate="yes" xml:space="preserve">
          <source>XmlRole.isKey</source>
          <target state="translated">XmlRole.isKey</target>
        </trans-unit>
        <trans-unit id="03da30af25d4eb1535443e4f8b7c5dbfa5407305" translate="yes" xml:space="preserve">
          <source>XmlRole.name</source>
          <target state="translated">XmlRole.name</target>
        </trans-unit>
        <trans-unit id="905475ae4b25ccbdc45d2fb9635efcead66af27d" translate="yes" xml:space="preserve">
          <source>XmlRole.query</source>
          <target state="translated">XmlRole.query</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="c1710d3d0b0f56f27f1a7e1cb8d6fe8542934e42" translate="yes" xml:space="preserve">
          <source>Y-axis: color channel luminance with effect applied</source>
          <target state="translated">Y 축 : 효과가 적용된 색상 채널 휘도</target>
        </trans-unit>
        <trans-unit id="1e6b3be5cdd8e0b3409e4867d41c6e6922cf9e6b" translate="yes" xml:space="preserve">
          <source>Y-axis: pixel luminance with effect applied</source>
          <target state="translated">Y 축 : 효과가 적용된 픽셀 휘도</target>
        </trans-unit>
        <trans-unit id="29bdb232c0538b2988775b9d97867e6d6e233362" translate="yes" xml:space="preserve">
          <source>YACCSOURCES</source>
          <target state="translated">YACCSOURCES</target>
        </trans-unit>
        <trans-unit id="448077818fea215ba380777d645da6427112264b" translate="yes" xml:space="preserve">
          <source>YAnimator (QML type)</source>
          <target state="translated">YAnimator (QML 타입)</target>
        </trans-unit>
        <trans-unit id="b6349114da4d582fc6f06a87476c5ff19669eea6" translate="yes" xml:space="preserve">
          <source>YAnimator QML Type</source>
          <target state="translated">YAnimator QML 유형</target>
        </trans-unit>
        <trans-unit id="c0f0cadca077341656948de09d8670971ee5641b" translate="yes" xml:space="preserve">
          <source>YEAR</source>
          <target state="translated">YEAR</target>
        </trans-unit>
        <trans-unit id="8950dbdc07cdfd7ff881e7c0db4609138b09ed64" translate="yes" xml:space="preserve">
          <source>YUV is not represented by describing the size of the color channels. This is because YUV often use macro pixels, making the concept of sperate color channels invalid. Instead the different YUV layouts are described with this enum.</source>
          <target state="translated">YUV는 컬러 채널의 크기를 나타내는 것으로 표현되지 않습니다. YUV는 종종 매크로 픽셀을 사용하기 때문에 별도의 색상 채널 개념이 유효하지 않기 때문입니다. 대신이 열거 형으로 다른 YUV 레이아웃을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="879e32326c5217968ac8e3a14e4a8a5214957264" translate="yes" xml:space="preserve">
          <source>Year</source>
          <target state="translated">Year</target>
        </trans-unit>
        <trans-unit id="234d9387958532e916ef39542505ecacedc31440" translate="yes" xml:space="preserve">
          <source>Year (int)</source>
          <target state="translated">연도 (int)</target>
        </trans-unit>
        <trans-unit id="fc45350ab7c6b3615f5847a5fd3f6c39af69fb78" translate="yes" xml:space="preserve">
          <source>Year, month, and day values of date, as well as hour, minute, and second values of time</source>
          <target state="translated">날짜의 년, 월 및 일 값과 시간, 분 및 초 시간 값</target>
        </trans-unit>
        <trans-unit id="3526f607bcd4f51ad0bc05f814579a42c2c0ba57" translate="yes" xml:space="preserve">
          <source>Yellow</source>
          <target state="translated">Yellow</target>
        </trans-unit>
        <trans-unit id="efe9620055636bd0b5069b204b68b4ae79e66fc5" translate="yes" xml:space="preserve">
          <source>Yellow curve: effect applied</source>
          <target state="translated">노란색 곡선 : 효과 적용</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="5ce7e259020fe1c34cbe494b8185d3936e414544" translate="yes" xml:space="preserve">
          <source>Yes (&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; range)</source>
          <target state="translated">예 ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; 범위)</target>
        </trans-unit>
        <trans-unit id="e46f23e27abbe09e6d64ecd0756f1e1914f40d92" translate="yes" xml:space="preserve">
          <source>Yes (Not bundled)</source>
          <target state="translated">예 (동봉되지 않음)</target>
        </trans-unit>
        <trans-unit id="436048676b9ef56822ca094add30b46654703d04" translate="yes" xml:space="preserve">
          <source>Yes (arbitrary)</source>
          <target state="translated">예 (임의)</target>
        </trans-unit>
        <trans-unit id="1b43332482f2278b23be3c7fd8aa5726e28a3518" translate="yes" xml:space="preserve">
          <source>Yes (bundled)</source>
          <target state="translated">예 (동봉)</target>
        </trans-unit>
        <trans-unit id="9d7985b06a3a417e7221880b4da5191f2b773bc1" translate="yes" xml:space="preserve">
          <source>Yes (full range)</source>
          <target state="translated">예 (전체 범위)</target>
        </trans-unit>
        <trans-unit id="f0f93fa569f1c070e9373c86171aab80c08bcdc5" translate="yes" xml:space="preserve">
          <source>Yes (received by &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;)</source>
          <target state="translated">예 ( &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; 수신 )</target>
        </trans-unit>
        <trans-unit id="0fd918dccabf946bfc1bcc8be3de59d43700debe" translate="yes" xml:space="preserve">
          <source>Yes (received by &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt;)</source>
          <target state="translated">예 ( &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript에&lt;/a&gt; 의해 수신 됨 )</target>
        </trans-unit>
        <trans-unit id="dec20ffec186805ca8160705b12f2f44d7495560" translate="yes" xml:space="preserve">
          <source>Yes (received by &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt;)</source>
          <target state="translated">Yes (received by &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="e20f571e90e3a8355939d4e8d14d3a57e5a3c8b8" translate="yes" xml:space="preserve">
          <source>Yes (received by &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;)</source>
          <target state="translated">예 ( &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; 수신 )</target>
        </trans-unit>
        <trans-unit id="c732f7156e94033f44e752c6ea0378a1f3b54a6f" translate="yes" xml:space="preserve">
          <source>Yes (received by a worker &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;)</source>
          <target state="translated">예 (작업자 &lt;a href=&quot;qobject&quot;&gt;QObject에&lt;/a&gt; 의해 수신 됨 )</target>
        </trans-unit>
        <trans-unit id="3735a33b49efa2998541590751e4f9c66cb8f04e" translate="yes" xml:space="preserve">
          <source>Yes &lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">예 &lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6db7084bf5d9415bbaf96a3dbffcb5455dd06689" translate="yes" xml:space="preserve">
          <source>Yes &lt;sup&gt;2&lt;/sup&gt;</source>
          <target state="translated">예 &lt;sup&gt;2&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4ce975a04d16b720d9bc54f9fb3e5618742dc8ba" translate="yes" xml:space="preserve">
          <source>Yes &lt;sup&gt;3&lt;/sup&gt;</source>
          <target state="translated">예 &lt;sup&gt;3&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1696149c59259541ba3a1d3a3c3c107fc68c94e9" translate="yes" xml:space="preserve">
          <source>Yes*</source>
          <target state="translated">Yes*</target>
        </trans-unit>
        <trans-unit id="f3b5a8ebfc9a3977de3fe0550875694447f58d93" translate="yes" xml:space="preserve">
          <source>Yields execution of the current thread to another runnable thread, if any. Note that the operating system decides to which thread to switch.</source>
          <target state="translated">현재 스레드를 다른 실행 가능한 스레드 (있는 경우)로 실행합니다. 운영 체제는 전환 할 스레드를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="8c548ea44296aef993ca0d9061d2a0ede9480fca" translate="yes" xml:space="preserve">
          <source>You almost never have to reimplement the setVisible() function. If you need to change some settings before a widget is shown, use &lt;a href=&quot;qwidget#showEvent&quot;&gt;showEvent&lt;/a&gt;() instead. If you need to do some delayed initialization use the Polish event delivered to the &lt;a href=&quot;qwidget#event&quot;&gt;event&lt;/a&gt;() function.</source>
          <target state="translated">setVisible () 함수를 다시 구현할 필요가 거의 없습니다. 위젯이 표시되기 전에 일부 설정을 변경해야하는 경우 &lt;a href=&quot;qwidget#showEvent&quot;&gt;showEvent&lt;/a&gt; ()를 대신 사용하십시오. 지연된 초기화를 수행해야하는 경우 &lt;a href=&quot;qwidget#event&quot;&gt;이벤트&lt;/a&gt; () 함수에 전달 된 Polish 이벤트를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c83d25feb73bbf23ce773ce86734828ace6f192" translate="yes" xml:space="preserve">
          <source>You also get the document (</source>
          <target state="translated">또한 문서를 얻습니다 (</target>
        </trans-unit>
        <trans-unit id="03096927b13317f76aed26e721affc84bce66bfa" translate="yes" xml:space="preserve">
          <source>You are now given an option to choose the App ID to use for this profile, which will be the unique App ID you created in the previous section. Once again make sure that the App ID does not contain any wildcard characters (&amp;ldquo;*&amp;rdquo;) as it is not be possible to use the In-App Purchasing service with such an App ID.</source>
          <target state="translated">이제이 프로필에 사용할 앱 ID를 선택할 수있는 옵션이 제공됩니다.이 옵션은 이전 섹션에서 생성 한 고유 한 앱 ID입니다. 앱 ID와 함께 인앱 구매 서비스를 사용할 수 없으므로 앱 ID에 와일드 카드 문자 ( &quot;*&quot;)가 포함되어 있지 않은지 다시 한 번 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dd787bde2ea0a343c6121011cf8988ba82786d30" translate="yes" xml:space="preserve">
          <source>You are, of course, not required to use the item-based approach; you could instead rely entirely on the &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; interface when working with the model, or use a combination of the two as appropriate.</source>
          <target state="translated">물론 항목 기반 접근 방식을 사용할 필요는 없습니다. 대신 모델 작업시 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 인터페이스 에 전적으로 의존 하거나 두 가지를 적절히 조합하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59e2ce4559ac695c70aa7c9a4db5e4adec27d432" translate="yes" xml:space="preserve">
          <source>You call &lt;a href=&quot;qsgengine#initialize&quot;&gt;initialize&lt;/a&gt;() first with the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; that you want to use with this renderer. This will return a null renderer otherwise.</source>
          <target state="translated">이 렌더러와 함께 사용하려는 &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; 를 사용하여 &lt;a href=&quot;qsgengine#initialize&quot;&gt;initialize&lt;/a&gt; ()를 먼저 호출 합니다. 그렇지 않으면 null 렌더러를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="22db993ffd75400a71285eb29619e00206a2a6ee" translate="yes" xml:space="preserve">
          <source>You can abandon the connection at any point while you are dragging the connection path by pressing &lt;b&gt;Esc&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;Esc 키&lt;/b&gt; 를 눌러 연결 경로를 드래그하는 동안 언제든지 연결을 포기할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5f36ad4d6284d1c923e088789ea255cfc6b7533" translate="yes" xml:space="preserve">
          <source>You can access the attributes of an element with code like this:</source>
          <target state="translated">다음과 같은 코드를 사용하여 요소의 속성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a1a8cdc7100f27e7b3a5c98b4aea304a21105c5" translate="yes" xml:space="preserve">
          <source>You can access the entity's &lt;a href=&quot;qdomentity#publicId&quot;&gt;publicId&lt;/a&gt;(), &lt;a href=&quot;qdomentity#systemId&quot;&gt;systemId&lt;/a&gt;() and &lt;a href=&quot;qdomentity#notationName&quot;&gt;notationName&lt;/a&gt;() when available.</source>
          <target state="translated">사용 가능한 경우 엔티티의 &lt;a href=&quot;qdomentity#publicId&quot;&gt;publicId&lt;/a&gt; (), &lt;a href=&quot;qdomentity#systemId&quot;&gt;systemId&lt;/a&gt; () 및 &lt;a href=&quot;qdomentity#notationName&quot;&gt;notationName&lt;/a&gt; ()에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee180b49ad904224443a00822af8d3cec4d33434" translate="yes" xml:space="preserve">
          <source>You can access the following state properties:</source>
          <target state="translated">다음과 같은 상태 속성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9f7015bd8c1e2fd1b92a364ede98e66d53dbb51" translate="yes" xml:space="preserve">
          <source>You can access the handle position through the &lt;code&gt;styleData.handlePosition&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;styleData.handlePosition&lt;/code&gt; 속성을 통해 핸들 위치에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f76dced9a858ca5177fa63307af910727f824d37" translate="yes" xml:space="preserve">
          <source>You can access the handle width through the &lt;code&gt;styleData.handleWidth&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;styleData.handleWidth&lt;/code&gt; 속성을 통해 핸들 너비에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9507bc9d3a2b87831cc3ddd7b2e5377522211a53" translate="yes" xml:space="preserve">
          <source>You can add a file extension to the filter using '+='. For example:</source>
          <target state="translated">'+ ='를 사용하여 파일 확장자를 필터에 추가 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c2c5de29a86bb6a9471af7db153f3adbb856b562" translate="yes" xml:space="preserve">
          <source>You can add a page before or after the</source>
          <target state="translated">이전 또는 이후에 페이지를 추가 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="6602600ace7514786f325c34c08ef29c7b4a5cbf" translate="yes" xml:space="preserve">
          <source>You can add an optional border to a rectangle with its own color and thickness by setting the &lt;a href=&quot;qml-qtquick-rectangle#border.color-prop&quot;&gt;border.color&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-rectangle#border.width-prop&quot;&gt;border.width&lt;/a&gt; properties. Set the color to &quot;transparent&quot; to paint a border without a fill color.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-rectangle#border.color-prop&quot;&gt;border.color&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-rectangle#border.width-prop&quot;&gt;border.width&lt;/a&gt; 속성 을 설정하여 고유 한 색상 및 두께를 가진 사각형에 선택적 테두리를 추가 할 수 있습니다 . 채우기 색상없이 테두리를 페인트하려면 색상을 &quot;투명&quot;으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="21f5dadb6338bb14bb572806ca494a54470c8512" translate="yes" xml:space="preserve">
          <source>You can add comments to project files. Comments begin with the &lt;code&gt;#&lt;/code&gt; character and continue to the end of the same line. For example:</source>
          <target state="translated">프로젝트 파일에 주석을 추가 할 수 있습니다. 주석은 &lt;code&gt;#&lt;/code&gt; 문자로 시작 하고 같은 줄의 끝까지 계속됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fe532ce94de371ca3ac16dd7d03807c40f81f955" translate="yes" xml:space="preserve">
          <source>You can add more data by calling &lt;a href=&quot;qcborstreamreader#addData&quot;&gt;addData&lt;/a&gt;() or by setting a different source device using &lt;a href=&quot;qcborstreamreader#setDevice&quot;&gt;setDevice&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qcborstreamreader#addData&quot;&gt;addData&lt;/a&gt; () 를 호출 하거나 &lt;a href=&quot;qcborstreamreader#setDevice&quot;&gt;setDevice&lt;/a&gt; ()를 사용하여 다른 소스 장치를 설정하여 더 많은 데이터를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="69dbafc2ce960f628ecaff623b7d0fcbe941d004" translate="yes" xml:space="preserve">
          <source>You can add new menus to the main window's menu bar by calling &lt;code&gt;menuBar()&lt;/code&gt;, which returns the &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; for the window, and then add a menu with &lt;a href=&quot;qmenubar#addMenu&quot;&gt;QMenuBar::addMenu&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qmenubar&quot;&gt;windowBar에&lt;/a&gt; 대한 QMenuBar 를 반환 하는 &lt;code&gt;menuBar()&lt;/code&gt; 를 호출하여 주 메뉴의 메뉴 표시 줄에 새 메뉴를 추가 한 다음 &lt;a href=&quot;qmenubar#addMenu&quot;&gt;QMenuBar :: addMenu를 사용&lt;/a&gt; 하여 메뉴를 추가 할 수 있습니다. ()를 사용 .</target>
        </trans-unit>
        <trans-unit id="184c8d88fbd8de99bab8fa703b04797c31a59c58" translate="yes" xml:space="preserve">
          <source>You can add specializations or overloads of this function to your test to enable verbose output.</source>
          <target state="translated">이 기능의 전문화 또는 과부하를 테스트에 추가하여 상세 출력을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5e121c1205788f8c7e08ca84fcd4fea81f6f72b" translate="yes" xml:space="preserve">
          <source>You can add widgets, layouts, stretches (&lt;a href=&quot;qgraphicslinearlayout#addStretch&quot;&gt;addStretch&lt;/a&gt;(), &lt;a href=&quot;qgraphicslinearlayout#insertStretch&quot;&gt;insertStretch&lt;/a&gt;() or &lt;a href=&quot;qgraphicslinearlayout#setStretchFactor&quot;&gt;setStretchFactor&lt;/a&gt;()), and spacings (&lt;a href=&quot;qgraphicslinearlayout#setItemSpacing&quot;&gt;setItemSpacing&lt;/a&gt;()) to a linear layout. The layout takes ownership of the items. In some cases when the layout item also inherits from &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; (such as &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;) there will be a ambiguity in ownership because the layout item belongs to two ownership hierarchies. See the documentation of &lt;a href=&quot;qgraphicslayoutitem#setOwnedByLayout&quot;&gt;QGraphicsLayoutItem::setOwnedByLayout&lt;/a&gt;() how to handle this. You can access each item in the layout by calling &lt;a href=&quot;qgraphicslinearlayout#count&quot;&gt;count&lt;/a&gt;() and &lt;a href=&quot;qgraphicslinearlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;(). Calling &lt;a href=&quot;qgraphicslinearlayout#removeAt&quot;&gt;removeAt&lt;/a&gt;() or &lt;a href=&quot;qgraphicslinearlayout#removeItem&quot;&gt;removeItem&lt;/a&gt;() will remove an item from the layout, without destroying it.</source>
          <target state="translated">위젯, 레이아웃, 스트레치 ( &lt;a href=&quot;qgraphicslinearlayout#addStretch&quot;&gt;addStretch&lt;/a&gt; (), &lt;a href=&quot;qgraphicslinearlayout#insertStretch&quot;&gt;insertStretch&lt;/a&gt; () 또는 &lt;a href=&quot;qgraphicslinearlayout#setStretchFactor&quot;&gt;setStretchFactor&lt;/a&gt; ()) 및 간격 ( &lt;a href=&quot;qgraphicslinearlayout#setItemSpacing&quot;&gt;setItemSpacing&lt;/a&gt; ())을 선형 레이아웃에 추가 할 수 있습니다. 레이아웃은 항목의 소유권을 갖습니다. 레이아웃 항목이 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; (예 : &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; ) 에서 상속되는 경우 레이아웃 항목이 두 개의 소유권 계층 구조에 속하기 때문에 소유권이 모호 할 수 있습니다. 이를 처리하는 방법 은 &lt;a href=&quot;qgraphicslayoutitem#setOwnedByLayout&quot;&gt;QGraphicsLayoutItem :: setOwnedByLayout&lt;/a&gt; () 문서를 참조하십시오 . &lt;a href=&quot;qgraphicslinearlayout#count&quot;&gt;count&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicslinearlayout#itemAt&quot;&gt;itemAt&lt;/a&gt; () 를 호출하여 레이아웃의 각 항목에 액세스 할 수 있습니다 . &lt;a href=&quot;qgraphicslinearlayout#removeAt&quot;&gt;removeAt&lt;/a&gt; () 호출 또는&lt;a href=&quot;qgraphicslinearlayout#removeItem&quot;&gt; removeItem&lt;/a&gt;()는 항목을 손상시키지 않고 레이아웃에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="cab33edd305a0eca1d0ad5f811878fdd1f93a72a" translate="yes" xml:space="preserve">
          <source>You can adjust a number of parameters that will affect images and video taken with the corresponding &lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; object - see the &lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;ExposureParameter&lt;/a&gt; enumeration.</source>
          <target state="translated">해당 &lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; 객체로 촬영 한 이미지 및 비디오에 영향을 미치는 여러 매개 변수를 조정할 수 있습니다 ( &lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;ExposureParameter&lt;/a&gt; 열거 참조) .</target>
        </trans-unit>
        <trans-unit id="cd67f19ca725aa499dc5fe6a264c0f996212ec1f" translate="yes" xml:space="preserve">
          <source>You can adjust the effective size hint by reimplementing &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;() in a &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; subclass, or by calling one of the following functions: &lt;a href=&quot;qgraphicslayoutitem#setMinimumSize&quot;&gt;setMinimumSize&lt;/a&gt;(), &lt;a href=&quot;qgraphicslayoutitem#setPreferredSize&quot;&gt;setPreferredSize&lt;/a&gt;, or &lt;a href=&quot;qgraphicslayoutitem#setMaximumSize&quot;&gt;setMaximumSize&lt;/a&gt;() (or a combination of both).</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; 서브 클래스 에서 &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt; ()를 다시 구현 하거나 &lt;a href=&quot;qgraphicslayoutitem#setMinimumSize&quot;&gt;setMinimumSize&lt;/a&gt; (), &lt;a href=&quot;qgraphicslayoutitem#setPreferredSize&quot;&gt;setPreferredSize&lt;/a&gt; 또는 &lt;a href=&quot;qgraphicslayoutitem#setMaximumSize&quot;&gt;setMaximumSize&lt;/a&gt; () (또는 둘의 조합) 중 하나를 호출 하여 유효 크기 힌트를 조정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc0ac0d15800321965d2ef81c93365fe9557a4bd" translate="yes" xml:space="preserve">
          <source>You can affect the currently playing sprite in two ways. You can arbitrarily force it to immediately start playing any sprite, or you can tell it to gradually transition to a given sprite. If you instruct it to gradually transition, then it will reach the target sprite by going through valid state transitions using the fewest number of intervening sprites (but ignoring relative weightings). This allows you to easily insert a transitional animation between two different sprites.</source>
          <target state="translated">현재 재생중인 스프라이트에 두 가지 방법으로 영향을 줄 수 있습니다. 임의로 스프라이트 재생을 시작하도록 임의로 강제로 설정하거나 주어진 스프라이트로 점차 전환하도록 지시 할 수 있습니다. 점진적으로 전환하도록 지시하면 개입 스프라이트가 가장 적지 만 상대 가중치는 무시하고 유효한 상태 전환을 통해 대상 스프라이트에 도달합니다. 이를 통해 서로 다른 두 스프라이트 사이에 전환 애니메이션을 쉽게 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a20b1a26e93e5e6234b41fc4c10bf59f88e29f33" translate="yes" xml:space="preserve">
          <source>You can also access a property by name. To do this you must call &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;().</source>
          <target state="translated">이름으로 속성에 액세스 할 수도 있습니다. 이렇게하려면 &lt;a href=&quot;qobject#property&quot;&gt;QObject :: property&lt;/a&gt; ()를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2f7d6b48d88914cc7389fd7bb3359be6920d312f" translate="yes" xml:space="preserve">
          <source>You can also add extra selectors at runtime for custom behavior. These will be used in any future calls to &lt;a href=&quot;qfileselector#select&quot;&gt;select&lt;/a&gt;(). If the extra selectors list has been changed, calls to &lt;a href=&quot;qfileselector#select&quot;&gt;select&lt;/a&gt;() will use the new list and may return differently.</source>
          <target state="translated">사용자 정의 동작을 위해 런타임시 추가 선택기를 추가 할 수도 있습니다. 이것들은 () 를 &lt;a href=&quot;qfileselector#select&quot;&gt;선택&lt;/a&gt; 하기 위해 앞으로의 호출에서 사용될 것 입니다. 추가 선택기 목록이 변경된 경우 &lt;a href=&quot;qfileselector#select&quot;&gt;select&lt;/a&gt; ()를 호출 하면 새 목록이 사용되며 다르게 반환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1bbcd1ec398593379dc5e4778ecda28a23f5d65" translate="yes" xml:space="preserve">
          <source>You can also alter the margin and spacing properties for the form's default layout (&lt;b&gt;Layout Default&lt;/b&gt;). These default layout properties will be replaced by the corresponding &lt;b&gt;Layout Function&lt;/b&gt;, if the function is specified, when &lt;code&gt;uic&lt;/code&gt; generates code for the form. The form settings dialog lets you specify functions for both the margin and the spacing.</source>
          <target state="translated">양식의 기본 레이아웃 ( &lt;b&gt;레이아웃 기본값&lt;/b&gt; )에 대한 여백 및 간격 속성을 변경할 수도 있습니다 . &lt;code&gt;uic&lt;/code&gt; 가 양식의 코드를 생성 할 때 함수가 지정되면 이러한 기본 레이아웃 특성이 해당 &lt;b&gt;Layout Function&lt;/b&gt; 으로 대체됩니다 . 양식 설정 대화 상자에서 여백과 간격에 대한 기능을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fefef54ed356b7e6f5ca858de560dc0170088bc" translate="yes" xml:space="preserve">
          <source>You can also ask questions on &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; mail lists:</source>
          <target state="translated">You can also ask questions on &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; mail lists:</target>
        </trans-unit>
        <trans-unit id="aa14b20660aa43b560cc69c27ff76d90c07630ae" translate="yes" xml:space="preserve">
          <source>You can also ask questions on &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; mail lists:</source>
          <target state="translated">&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; 메일 목록 에 대해 질문 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb8bab0d84b23ac838424e24410ec99f98596932" translate="yes" xml:space="preserve">
          <source>You can also assign the value of a current variable to another variable by prefixing $$ to the variable name. For example:</source>
          <target state="translated">변수 이름 앞에 $$를 접두어로 붙여서 현재 변수의 값을 다른 변수에 할당 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ef32fdcf080790d21d90c05d943087e0f4b687fa" translate="yes" xml:space="preserve">
          <source>You can also build Qt 5 from the source package and configure it according to your target platform. The source packages are obtained from &lt;a href=&quot;http://www.qt.io/download/&quot;&gt;http://www.qt.io/download/&lt;/a&gt;.</source>
          <target state="translated">소스 패키지에서 Qt 5를 빌드하고 대상 플랫폼에 따라 구성 할 수도 있습니다. 소스 패키지는 &lt;a href=&quot;http://www.qt.io/download/&quot;&gt;http://www.qt.io/download/&lt;/a&gt; 에서 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="757428cd661ba56358615f30b8797618d09973cc" translate="yes" xml:space="preserve">
          <source>You can also call &lt;a href=&quot;qvector#fill&quot;&gt;fill&lt;/a&gt;() at any time to fill the vector with a value.</source>
          <target state="translated">언제든지 &lt;a href=&quot;qvector#fill&quot;&gt;채우기&lt;/a&gt; ()를 호출 하여 벡터를 값으로 채울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b701cc84318343902158279c29b1a61cf36b3ab8" translate="yes" xml:space="preserve">
          <source>You can also call this function after &lt;a href=&quot;qdtls#doHandshake&quot;&gt;doHandshake&lt;/a&gt;() encountered the QDtlsError::PeerVerificationError error, and then resume the handshake by calling &lt;a href=&quot;qdtls#resumeHandshake&quot;&gt;resumeHandshake&lt;/a&gt;().</source>
          <target state="translated">또한 후이 함수를 호출 할 수 있습니다 &lt;a href=&quot;qdtls#doHandshake&quot;&gt;doHandshake&lt;/a&gt; QDtlsError :: PeerVerificationError 오류가 발생했습니다 ()를 다음 호출하여 핸드 셰이크를 다시 시작 &lt;a href=&quot;qdtls#resumeHandshake&quot;&gt;resumeHandshake을&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="51135e1450494f190767361eaa5181478ea869c9" translate="yes" xml:space="preserve">
          <source>You can also change the active window with the keyboard. By pressing the control and tab keys at the same time, the next (using the current &lt;a href=&quot;qmdiarea#WindowOrder-enum&quot;&gt;WindowOrder&lt;/a&gt;) subwindow will be activated. By pressing control, shift, and tab, you will activate the previous window. This is equivalent to calling &lt;a href=&quot;qmdiarea#activateNextSubWindow&quot;&gt;activateNextSubWindow()&lt;/a&gt; and &lt;a href=&quot;qmdiarea#activatePreviousSubWindow&quot;&gt;activatePreviousSubWindow()&lt;/a&gt;. Note that these shortcuts overrides global shortcuts, but not the &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt;s shortcuts.</source>
          <target state="translated">키보드로 활성 창을 변경할 수도 있습니다. 컨트롤과 탭 키를 동시에 누르면 다음 (현재 &lt;a href=&quot;qmdiarea#WindowOrder-enum&quot;&gt;WindowOrder 사용&lt;/a&gt; ) 하위 창이 활성화됩니다. 컨트롤, 시프트 및 탭을 누르면 이전 창이 활성화됩니다. 이것은 &lt;a href=&quot;qmdiarea#activateNextSubWindow&quot;&gt;activateNextSubWindow ()&lt;/a&gt; 및 &lt;a href=&quot;qmdiarea#activatePreviousSubWindow&quot;&gt;activatePreviousSubWindow ()&lt;/a&gt; 를 호출하는 것과 같습니다 . 이 단축키는 &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt; 단축키가 아닌 글로벌 단축키를 대체 합니다.</target>
        </trans-unit>
        <trans-unit id="1ad837168cd24930a6fcdeb8e09c2a6a4693b546" translate="yes" xml:space="preserve">
          <source>You can also connect to any signals or call methods defined in the component using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;() and &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;(). See &lt;a href=&quot;#invoking-qml-methods&quot;&gt;Invoking QML Methods&lt;/a&gt; and &lt;a href=&quot;#connecting-to-qml-signals&quot;&gt;Connecting to QML Signals&lt;/a&gt; below for further details.</source>
          <target state="translated">&lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt; () 및 &lt;a href=&quot;qobject#connect&quot;&gt;QObject :: connect&lt;/a&gt; ()를 사용하여 컴포넌트에 정의 된 신호 또는 호출 메소드에 연결할 수도 있습니다 . 자세한 내용은 아래의 &lt;a href=&quot;#invoking-qml-methods&quot;&gt;QML 메소드 호출&lt;/a&gt; 및 &lt;a href=&quot;#connecting-to-qml-signals&quot;&gt;QML 신호에 연결을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3cd795831afdd1edc7920f9486e122916f8f32b9" translate="yes" xml:space="preserve">
          <source>You can also connect to any signals or call methods defined in the component using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;() and &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;(). See &lt;a href=&quot;qtqml-cppintegration-interactqmlfromcpp#invoking-qml-methods&quot;&gt;Invoking QML Methods&lt;/a&gt; and &lt;a href=&quot;qtqml-cppintegration-interactqmlfromcpp#connecting-to-qml-signals&quot;&gt;Connecting to QML Signals&lt;/a&gt; below for further details.</source>
          <target state="translated">You can also connect to any signals or call methods defined in the component using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;() and &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;(). See &lt;a href=&quot;qtqml-cppintegration-interactqmlfromcpp#invoking-qml-methods&quot;&gt;Invoking QML Methods&lt;/a&gt; and &lt;a href=&quot;qtqml-cppintegration-interactqmlfromcpp#connecting-to-qml-signals&quot;&gt;Connecting to QML Signals&lt;/a&gt; below for further details.</target>
        </trans-unit>
        <trans-unit id="77f0d52258e0e2c0f80f798d40d8485b14b989f1" translate="yes" xml:space="preserve">
          <source>You can also connect to functors or C++11 lambdas:</source>
          <target state="translated">functors 또는 C ++ 11 람다에 연결할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9aeee35f3af494ab1218cf878db5db0cfbd49d8a" translate="yes" xml:space="preserve">
          <source>You can also control the miter limit for the generated outline using the &lt;a href=&quot;qpainterpathstroker#setMiterLimit&quot;&gt;setMiterLimit&lt;/a&gt;() function. The miter limit describes how far from each join the miter join can extend. The limit is specified in the units of width so the pixelwise miter limit will be &lt;code&gt;miterlimit * width&lt;/code&gt;. This value is only used if the join style is &lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt::MiterJoin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qpainterpathstroker#setMiterLimit&quot;&gt;setMiterLimit&lt;/a&gt; () 함수를 사용하여 생성 된 아웃 라인의 연귀 제한을 제어 할 수도 있습니다. 연귀 한계는 연귀 결합이 연장 될 수있는 각 결합으로부터 얼마나 멀리 떨어져 있는지를 설명합니다. 픽셀 단위 마이 터 제한은 &lt;code&gt;miterlimit * width&lt;/code&gt; 입니다. 이 값은 결합 스타일이 &lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt :: MiterJoin 인&lt;/a&gt; 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1c3ffebe27332a842a253fa58bd9c91bb961f299" translate="yes" xml:space="preserve">
          <source>You can also create a list-like data structure by constructing a &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; using &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;(). Such a JavaScript array does not need any conversion when passing it between QML and C++. See &lt;a href=&quot;qjsvalue#working-with-arrays&quot;&gt;QJSValue#Working With Arrays&lt;/a&gt; for details on how to manipulate JavaScript arrays from C++.</source>
          <target state="translated">You can also create a list-like data structure by constructing a &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; using &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;(). Such a JavaScript array does not need any conversion when passing it between QML and C++. See &lt;a href=&quot;qjsvalue#working-with-arrays&quot;&gt;QJSValue#Working With Arrays&lt;/a&gt; for details on how to manipulate JavaScript arrays from C++.</target>
        </trans-unit>
        <trans-unit id="cf8153b5c325e1f3e20dfe7e3eab27a15ba9aa5b" translate="yes" xml:space="preserve">
          <source>You can also create rounded rectangles using the &lt;a href=&quot;qml-qtquick-rectangle#radius-prop&quot;&gt;radius&lt;/a&gt; property. Since this introduces curved edges to the corners of a rectangle, it may be appropriate to set the &lt;a href=&quot;qml-qtquick-item#antialiasing-prop&quot;&gt;Item::antialiasing&lt;/a&gt; property to improve its appearance.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-rectangle#radius-prop&quot;&gt;반경&lt;/a&gt; 속성을 사용하여 둥근 사각형을 만들 수도 있습니다 . 이렇게하면 사각형 모서리에 곡선 가장자리가 &lt;a href=&quot;qml-qtquick-item#antialiasing-prop&quot;&gt;생겨&lt;/a&gt; 외관을 개선하기 위해 Item :: antialiasing 속성을 설정하는 것이 적절할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7bc12180f5a6c33416c3d13f249ba5ae2cc49ba9" translate="yes" xml:space="preserve">
          <source>You can also define custom page sizes with custom names in any units you want and this unit size will be preserved and used as the base for all other unit size calculations.</source>
          <target state="translated">원하는 단위로 사용자 정의 이름을 사용하여 사용자 정의 페이지 크기를 정의 할 수 있으며이 단위 크기가 유지되고 다른 모든 단위 크기 계산의 기본으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2964105a778e84b7b791b5acca8317ba6d2e5416" translate="yes" xml:space="preserve">
          <source>You can also define preprocessor symbols manually on the command line using the -D option. For example:</source>
          <target state="translated">-D 옵션을 사용하여 명령 행에서 사전 처리기 기호를 수동으로 정의 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="495677794f3b89ace45908b5ac29307e19ec7aee" translate="yes" xml:space="preserve">
          <source>You can also define slots to be virtual, which we have found quite useful in practice.</source>
          <target state="translated">또한 슬롯을 가상으로 정의 할 수 있으며 실제로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5881f7dec3753692040a2095190a6d39972da2bb" translate="yes" xml:space="preserve">
          <source>You can also define the preprocessor symbol manually on the command line. For more information see the documentation of the &lt;a href=&quot;22-qdoc-configuration-generalvariables#defines-variable&quot;&gt;defines&lt;/a&gt; variable.</source>
          <target state="translated">명령 행에서 사전 처리기 기호를 수동으로 정의 할 수도 있습니다. 자세한 정보는 &lt;a href=&quot;22-qdoc-configuration-generalvariables#defines-variable&quot;&gt;define&lt;/a&gt; 변수 의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8f1f08cd0cdd7d9805078cddef27cc9df95e659" translate="yes" xml:space="preserve">
          <source>You can also delete child objects yourself, and they will remove themselves from their parents. For example, when the user removes a toolbar it may lead to the application deleting one of its &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; objects, in which case the tool bar's &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; parent would detect the change and reconfigure its screen space accordingly.</source>
          <target state="translated">자식 개체를 직접 삭제할 수도 있으며 부모에서 자신을 제거 할 수도 있습니다. 예를 들어, 사용자가 툴바를 제거하면 애플리케이션이 &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; 객체 중 하나를 삭제하도록 할 수 있습니다 .이 경우 툴바의 &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; 부모가 변경 사항을 감지하고 그에 따라 화면 공간을 재구성합니다.</target>
        </trans-unit>
        <trans-unit id="9f5a76dd53b217d36d4a6e63be4032e9bb5343af" translate="yes" xml:space="preserve">
          <source>You can also directly specify a format string.</source>
          <target state="translated">You can also directly specify a format string.</target>
        </trans-unit>
        <trans-unit id="c95cb6f23f06302d6c55586b3d2cce2debaf6184" translate="yes" xml:space="preserve">
          <source>You can also enable or disable hover effects for all Qt Quick Controls 2 applications by setting the &lt;code&gt;QT_QUICK_CONTROLS_HOVER_ENABLED&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QT_QUICK_CONTROLS_HOVER_ENABLED&lt;/code&gt; &lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;환경 변수를&lt;/a&gt; 설정하여 모든 Qt Quick Controls 2 애플리케이션에 대한 호버 효과를 활성화 또는 비활성화 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae48603cfdfb56cd149aae3eeb10ea5b57df0c87" translate="yes" xml:space="preserve">
          <source>You can also enable or disable hover effects for all Qt Quick Controls applications by setting the &lt;code&gt;QT_QUICK_CONTROLS_HOVER_ENABLED&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">You can also enable or disable hover effects for all Qt Quick Controls applications by setting the &lt;code&gt;QT_QUICK_CONTROLS_HOVER_ENABLED&lt;/code&gt; &lt;a href=&quot;qtquickcontrols2-environment&quot;&gt;environment variable&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="72afa4c9ec40747de29dd7d96f5b0501426360e4" translate="yes" xml:space="preserve">
          <source>You can also get to an item in the stack using &lt;a href=&quot;qml-qtquick-controls-stackview#get-method&quot;&gt;get(index)&lt;/a&gt;. You should use this function if your item depends on another item in the stack, as the function will ensure that the item at the given index gets loaded before it is returned.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-stackview#get-method&quot;&gt;get (index)를&lt;/a&gt; 사용하여 스택의 항목을 가져올 수도 있습니다 . 아이템이 스택의 다른 아이템에 의존하는 경우,이 함수는 주어진 인덱스의 아이템이 반환되기 전에로드되도록 보장하므로이 함수를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4a33f696fc2285d8d9e8ab8699aee0ffa6967f4" translate="yes" xml:space="preserve">
          <source>You can also get to an item in the stack using &lt;a href=&quot;qml-qtquick-controls2-stackview#get-method&quot;&gt;get(index)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls2-stackview#get-method&quot;&gt;get (index)를&lt;/a&gt; 사용하여 스택의 항목을 가져올 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93e9e063bf84db05a18d5971f8741a44387b433c" translate="yes" xml:space="preserve">
          <source>You can also insert new data into the model by calling &lt;a href=&quot;qsqltablemodel#insertRecord&quot;&gt;QSqlTableModel::insertRecord&lt;/a&gt;(). In the following example snippet, a &lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; is populated with book details and appended to the model:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#insertRecord&quot;&gt;QSqlTableModel :: insertRecord&lt;/a&gt; ()를 호출하여 모델에 새 데이터를 삽입 할 수도 있습니다 . 다음 예제 스 니펫에서 &lt;a href=&quot;qsqlrecord&quot;&gt;QSqlRecord&lt;/a&gt; 는 책 세부 사항으로 채워지고 모델에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c501deaed579413e49d6adf5ad78878b81b429ba" translate="yes" xml:space="preserve">
          <source>You can also limit the maximum &lt;a href=&quot;qml-qtquick-springanimation#velocity-prop&quot;&gt;velocity&lt;/a&gt; of the animation.</source>
          <target state="translated">애니메이션 의 최대 &lt;a href=&quot;qml-qtquick-springanimation#velocity-prop&quot;&gt;속도&lt;/a&gt; 를 제한 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6718aedb8da51303c93933a9bce250fffde1fa96" translate="yes" xml:space="preserve">
          <source>You can also load the Pepper Flash player from a specific location by using command line arguments:</source>
          <target state="translated">명령 행 인수를 사용하여 특정 위치에서 Pepper Flash 플레이어를로드 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="90610525b32f72962bc25df3630f6b0293f18e18" translate="yes" xml:space="preserve">
          <source>You can also make cells span several rows and columns. For example:</source>
          <target state="translated">셀을 여러 행과 열로 확장 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5f9ee9285506588657a6eb420b07d260f59d75d2" translate="yes" xml:space="preserve">
          <source>You can also make namespaces tagged with &lt;a href=&quot;qobject#Q_NAMESPACE&quot;&gt;Q_NAMESPACE&lt;/a&gt; available this way, in order to expose any enums tagged with &lt;a href=&quot;qobject#Q_ENUM_NS&quot;&gt;Q_ENUM_NS&lt;/a&gt; they contain.</source>
          <target state="translated">You can also make namespaces tagged with &lt;a href=&quot;qobject#Q_NAMESPACE&quot;&gt;Q_NAMESPACE&lt;/a&gt; available this way, in order to expose any enums tagged with &lt;a href=&quot;qobject#Q_ENUM_NS&quot;&gt;Q_ENUM_NS&lt;/a&gt; they contain.</target>
        </trans-unit>
        <trans-unit id="e226768b1d716b4795bc5591a3c92f9af6d2ad31" translate="yes" xml:space="preserve">
          <source>You can also make the listing start at any character or number by simply provide the number or character you want to start at. For example:</source>
          <target state="translated">시작하려는 숫자 나 문자를 제공하여 문자 나 숫자로 목록을 시작할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d0a6623b2478ee740b1552506030425d2261cb8" translate="yes" xml:space="preserve">
          <source>You can also mix and match normal buttons and standard buttons.</source>
          <target state="translated">일반 버튼과 표준 버튼을 혼합하여 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd7e8b3087da3cf47c673f2fcc30fd91295ecb0" translate="yes" xml:space="preserve">
          <source>You can also pass string literals to functions that take QStrings as arguments, invoking the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;(const char *) constructor. Similarly, you can pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to a function that takes a &lt;code&gt;const char *&lt;/code&gt; argument using the &lt;a href=&quot;qtglobal#qPrintable&quot;&gt;qPrintable&lt;/a&gt;() macro which returns the given &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; as a &lt;code&gt;const char *&lt;/code&gt;. This is equivalent to calling &amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt;.&lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;().&lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; (const char *) 생성자를 호출하여 QString 을 인수로 사용하는 함수에 문자열 리터럴을 전달할 수도 있습니다 . 유사하게, 주어진 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 &lt;code&gt;const char *&lt;/code&gt; 로 리턴하는 &lt;a href=&quot;qtglobal#qPrintable&quot;&gt;qPrintable&lt;/a&gt; () 매크로를 사용하여 &lt;code&gt;const char *&lt;/code&gt; 인수를 취하는 함수에 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 전달할 수 있습니다 . 이것은 &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt; 을 호출하는 것과 같습니다 . &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt; (). &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="99c450e59dc57987c307c2d8c340429fc8aca4b5" translate="yes" xml:space="preserve">
          <source>You can also pass string literals to functions that take QStrings as arguments, invoking the QString(const char *) constructor. Similarly, you can pass a QString to a function that takes a &lt;code&gt;const char *&lt;/code&gt; argument using the &lt;a href=&quot;qtglobal#qPrintable&quot;&gt;qPrintable&lt;/a&gt;() macro which returns the given QString as a &lt;code&gt;const char *&lt;/code&gt;. This is equivalent to calling &amp;lt;QString&amp;gt;.&lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;().&lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;().</source>
          <target state="translated">You can also pass string literals to functions that take QStrings as arguments, invoking the QString(const char *) constructor. Similarly, you can pass a QString to a function that takes a &lt;code&gt;const char *&lt;/code&gt; argument using the &lt;a href=&quot;qtglobal#qPrintable&quot;&gt;qPrintable&lt;/a&gt;() macro which returns the given QString as a &lt;code&gt;const char *&lt;/code&gt; . This is equivalent to calling &amp;lt;QString&amp;gt;.&lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;().&lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="b991e25f8827867f24c7f5249caf8015e4a1e5f9" translate="yes" xml:space="preserve">
          <source>You can also provide alternative declarations to those within a scope by using an &lt;code&gt;else&lt;/code&gt; scope. Each &lt;code&gt;else&lt;/code&gt; scope is processed if the conditions for the preceding scopes are false. This allows you to write complex tests when combined with other scopes (separated by the &lt;code&gt;:&lt;/code&gt; operator as above). For example:</source>
          <target state="translated">&lt;code&gt;else&lt;/code&gt; 범위 를 사용하여 범위 내의 선언에 대한 대체 선언을 제공 할 수도 있습니다 . 서로 &lt;code&gt;else&lt;/code&gt; 선행 범위의 조건이 거짓 인 경우 범위는 처리된다. 이를 통해 다른 범위와 결합 할 때 복잡한 테스트를 작성할 수 있습니다 ( 위 의 &lt;code&gt;:&lt;/code&gt; 연산자로 구분 ). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e6d0774eca1a1bf95fb68001e70ffbcfbee6d1c" translate="yes" xml:space="preserve">
          <source>You can also provide string data as an array of &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;s:</source>
          <target state="translated">문자열 데이터를 &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; 배열로 제공 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60d82f617096e1fdc4d66d4406245613cf35796e" translate="yes" xml:space="preserve">
          <source>You can also provide your own custom scene interaction, by creating a subclass of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;, and reimplementing the mouse and key event handlers. To simplify how you programmatically interact with items in the view, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides the mapping functions &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() and &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;(), and the item accessors &lt;a href=&quot;qgraphicsview#items&quot;&gt;items&lt;/a&gt;() and &lt;a href=&quot;qgraphicsview#itemAt&quot;&gt;itemAt&lt;/a&gt;(). These functions allow you to map points, rectangles, polygons and paths between view coordinates and scene coordinates, and to find items on the scene using view coordinates.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 의 서브 클래스를 작성 하고 마우스 및 키 이벤트 핸들러를 다시 구현 하여 고유 한 사용자 정의 장면 상호 작용을 제공 할 수도 있습니다 . 뷰에서 항목과 프로그래밍 방식으로 상호 작용하는 방법을 단순화하기 위해 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 는 &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt; () 및 항목 접근 자 &lt;a href=&quot;qgraphicsview#items&quot;&gt;항목&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsview#itemAt&quot;&gt;itemAt&lt;/a&gt; () 맵핑 기능을 제공합니다 . 이 기능을 사용하면 뷰 좌표와 장면 좌표 사이의 점, 사각형, 다각형 및 경로를 매핑하고 뷰 좌표를 사용하여 장면에서 항목을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a89da95d5e933472c099c82579055c02a814f3ee" translate="yes" xml:space="preserve">
          <source>You can also provide your own custom scene interaction, by creating a subclass of QGraphicsView, and reimplementing the mouse and key event handlers. To simplify how you programmatically interact with items in the view, QGraphicsView provides the mapping functions &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() and &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;(), and the item accessors &lt;a href=&quot;qgraphicsview#items&quot;&gt;items&lt;/a&gt;() and &lt;a href=&quot;qgraphicsview#itemAt&quot;&gt;itemAt&lt;/a&gt;(). These functions allow you to map points, rectangles, polygons and paths between view coordinates and scene coordinates, and to find items on the scene using view coordinates.</source>
          <target state="translated">You can also provide your own custom scene interaction, by creating a subclass of QGraphicsView, and reimplementing the mouse and key event handlers. To simplify how you programmatically interact with items in the view, QGraphicsView provides the mapping functions &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() and &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;(), and the item accessors &lt;a href=&quot;qgraphicsview#items&quot;&gt;items&lt;/a&gt;() and &lt;a href=&quot;qgraphicsview#itemAt&quot;&gt;itemAt&lt;/a&gt;(). These functions allow you to map points, rectangles, polygons and paths between view coordinates and scene coordinates, and to find items on the scene using view coordinates.</target>
        </trans-unit>
        <trans-unit id="8ef938f0ccb2c7c1ceaa0721861944de7db14f17" translate="yes" xml:space="preserve">
          <source>You can also push an array of items (property lists) if you need to push several items in one go. A transition will then only occur between the current item and the last item in the list. Loading the other items will be deferred until needed.</source>
          <target state="translated">여러 항목을 한 번에 밀어야하는 경우 항목 목록 (속성 목록)을 밀어 넣을 수도 있습니다. 그러면 전환은 현재 항목과 목록의 마지막 항목 사이에서만 발생합니다. 다른 항목을로드하는 작업은 필요할 때까지 연기됩니다.</target>
        </trans-unit>
        <trans-unit id="bf46c1c7bd044d1c6d0f2a1cb3299668d6ded843" translate="yes" xml:space="preserve">
          <source>You can also query each device for the formats it supports. A format in this context is a set consisting of a specific byte order, channel, codec, frequency, sample rate, and sample type. A format is represented by the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; class.</source>
          <target state="translated">각 장치에서 지원하는 형식을 쿼리 할 수도 있습니다. 이 컨텍스트의 형식은 특정 바이트 순서, 채널, 코덱, 주파수, 샘플 속도 및 샘플 유형으로 구성된 집합입니다. 형식은 &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; 클래스로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="cb3875ff963bbbe45e51c9421287518368f8326f" translate="yes" xml:space="preserve">
          <source>You can also reimplement &lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren&lt;/a&gt;() to provide special behavior for models where the implementation of &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() is expensive. This makes it possible for models to restrict the amount of data requested by views, and can be used as a way to implement lazy population of model data.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren&lt;/a&gt; ()을 다시 구현하여 &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt; () 구현 이 비싼 모델에 특별한 동작을 제공 할 수도 있습니다 . 이를 통해 모델은 뷰에 의해 요청 된 데이터의 양을 제한 할 수 있으며 모델 데이터의 지연 모집을 구현하는 방법으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4749cffbb9b66288d1fa435add580c87bbd307f8" translate="yes" xml:space="preserve">
          <source>You can also retrieve information about where the form is stored using &lt;a href=&quot;qdesignerformwindowinterface#absoluteDir&quot;&gt;absoluteDir&lt;/a&gt;(), its include files using &lt;a href=&quot;qdesignerformwindowinterface#includeHints&quot;&gt;includeHints&lt;/a&gt;(), and its layout and pixmap functions using &lt;a href=&quot;qdesignerformwindowinterface#layoutDefault&quot;&gt;layoutDefault&lt;/a&gt;(), &lt;a href=&quot;qdesignerformwindowinterface#layoutFunction&quot;&gt;layoutFunction&lt;/a&gt;() and &lt;a href=&quot;qdesignerformwindowinterface#pixmapFunction&quot;&gt;pixmapFunction&lt;/a&gt;(). You can find out whether the form window has been modified (but not saved) or not, using the &lt;a href=&quot;qdesignerformwindowinterface#isDirty&quot;&gt;isDirty&lt;/a&gt;() function. You can retrieve its &lt;a href=&quot;qdesignerformwindowinterface#author&quot;&gt;author&lt;/a&gt;(), its &lt;a href=&quot;qdesignerformwindowinterface#contents&quot;&gt;contents&lt;/a&gt;(), its &lt;a href=&quot;qdesignerformwindowinterface#fileName&quot;&gt;fileName&lt;/a&gt;(), associated &lt;a href=&quot;qdesignerformwindowinterface#comment&quot;&gt;comment&lt;/a&gt;() and &lt;a href=&quot;qdesignerformwindowinterface#exportMacro&quot;&gt;exportMacro&lt;/a&gt;(), its mainContainer(), its &lt;a href=&quot;qdesignerformwindowinterface#features&quot;&gt;features&lt;/a&gt;(), its &lt;a href=&quot;qdesignerformwindowinterface#grid&quot;&gt;grid&lt;/a&gt;() and its &lt;a href=&quot;qdesignerformwindowinterface#resourceFiles&quot;&gt;resourceFiles&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdesignerformwindowinterface#absoluteDir&quot;&gt;absoluteDir&lt;/a&gt; ()을 사용하여 양식이 저장된 위치, &lt;a href=&quot;qdesignerformwindowinterface#includeHints&quot;&gt;includeHints&lt;/a&gt; ()를 사용하는 포함 파일 및 &lt;a href=&quot;qdesignerformwindowinterface#layoutDefault&quot;&gt;layoutDefault&lt;/a&gt; (), &lt;a href=&quot;qdesignerformwindowinterface#layoutFunction&quot;&gt;layoutFunction&lt;/a&gt; () 및 &lt;a href=&quot;qdesignerformwindowinterface#pixmapFunction&quot;&gt;pixmapFunction&lt;/a&gt; ()을 사용하여 해당 레이아웃 및 픽스맵 함수를 사용하여 양식이 저장된 위치에 대한 정보를 검색 할 수도 있습니다 . &lt;a href=&quot;qdesignerformwindowinterface#isDirty&quot;&gt;isDirty&lt;/a&gt; () 함수를 사용하여 양식 윈도우가 수정되었는지 (저장되지는 ​​않았는지) 여부를 확인할 수 있습니다 . 당신은 검색 할 수 있습니다 &lt;a href=&quot;qdesignerformwindowinterface#author&quot;&gt;저자&lt;/a&gt; )의 ( &lt;a href=&quot;qdesignerformwindowinterface#contents&quot;&gt;내용&lt;/a&gt; (), 그 &lt;a href=&quot;qdesignerformwindowinterface#fileName&quot;&gt;fileName에&lt;/a&gt; (), 관련 &lt;a href=&quot;qdesignerformwindowinterface#comment&quot;&gt;코멘트&lt;/a&gt; ()와 &lt;a href=&quot;qdesignerformwindowinterface#exportMacro&quot;&gt;exportMacro&lt;/a&gt; (), 그 mainContainer ()의 &lt;a href=&quot;qdesignerformwindowinterface#features&quot;&gt;기능&lt;/a&gt; (), 자사의 &lt;a href=&quot;qdesignerformwindowinterface#grid&quot;&gt;그리드&lt;/a&gt; ()와 자사의&lt;a href=&quot;qdesignerformwindowinterface#resourceFiles&quot;&gt;resourceFiles&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="5c126bedaa418ec54c942d869c3284fb56e31a0a" translate="yes" xml:space="preserve">
          <source>You can also set a custom shortcut key using the &lt;a href=&quot;qabstractbutton#shortcut-prop&quot;&gt;setShortcut&lt;/a&gt;() function. This is useful mostly for buttons that do not have any text, and therefore can't have any automatic shortcut.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#shortcut-prop&quot;&gt;setShortcut&lt;/a&gt; () 함수를 사용하여 사용자 정의 단축키를 설정할 수도 있습니다. 이것은 텍스트가없는 버튼에 주로 유용하므로 자동 단축키를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="776d36442ba8c212d6868d1db6f17da4d853951d" translate="yes" xml:space="preserve">
          <source>You can also set a default cursor directly on the view by calling &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QGraphicsView::setCursor&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QGraphicsView :: setCursor&lt;/a&gt; ()를 호출하여 뷰에서 직접 기본 커서를 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d747adec72177b9f934103a1016b19735ae1591b" translate="yes" xml:space="preserve">
          <source>You can also set default values for some of the tags in the DITA &lt;code&gt;&amp;lt;prolog&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;metadata&amp;gt;&lt;/code&gt; elements:</source>
          <target state="translated">DITA &lt;code&gt;&amp;lt;prolog&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;metadata&amp;gt;&lt;/code&gt; 요소 에서 일부 태그의 기본값을 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17aa1f3299752e452109617b553b87040cb4b0f7" translate="yes" xml:space="preserve">
          <source>You can also specify &lt;code&gt;CONFIG += qtquickcompiler&lt;/code&gt; in your &lt;code&gt;.pro&lt;/code&gt; file to perform the compilation ahead of time and integrate the resulting byte code directly into your executable. For more information, see &lt;a href=&quot;http://doc.qt.io/QtQuickCompiler&quot;&gt;Qt Quick Compiler&lt;/a&gt;.</source>
          <target state="translated">You can also specify &lt;code&gt;CONFIG += qtquickcompiler&lt;/code&gt; in your &lt;code&gt;.pro&lt;/code&gt; file to perform the compilation ahead of time and integrate the resulting byte code directly into your executable. For more information, see &lt;a href=&quot;http://doc.qt.io/QtQuickCompiler&quot;&gt;Qt Quick Compiler&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c122cf445df339f82cac6dd51fba92d0bb88d7f4" translate="yes" xml:space="preserve">
          <source>You can also specify the .qml source files with a wildcard match. The search is not recursive so you need to specify each directory where there are user interface strings in the source code:</source>
          <target state="translated">와일드 카드 일치로 .qml 소스 파일을 지정할 수도 있습니다. 검색은 재귀 적이 지 않으므로 소스 코드에 사용자 인터페이스 문자열이있는 각 디렉토리를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2837828315926b39628f791f19c61ae0299bddd2" translate="yes" xml:space="preserve">
          <source>You can also specify the form's &lt;b&gt;Include Hints&lt;/b&gt;; i.e., provide a list of the header files which will then be included in the form window's associated UI file. Header files may be local, i.e., relative to the project's directory, &lt;code&gt;&quot;mywidget.h&quot;&lt;/code&gt;, or global, i.e. part of Qt or the compilers standard libraries: &lt;code&gt;&amp;lt;QtWidgets/QWidget&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">양식의 &lt;b&gt;힌트 포함을&lt;/b&gt; 지정할 수도 있습니다 . 즉, 헤더 파일의 목록을 제공 한 다음 양식 창의 관련 UI 파일에 포함시킵니다. 헤더 파일은 로컬 (즉, 프로젝트 디렉토리 &lt;code&gt;&quot;mywidget.h&quot;&lt;/code&gt; 또는 Qt 또는 컴파일러 표준 라이브러리의 &lt;code&gt;&amp;lt;QtWidgets/QWidget&amp;gt;&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="df5d1819a1307d5494b6da26356b6ae06bd6e11a" translate="yes" xml:space="preserve">
          <source>You can also twist the coordinate system around the origin using the &lt;a href=&quot;qpainter#shear&quot;&gt;QPainter::shear&lt;/a&gt;() function. All the transformation operations operate on &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s transformation matrix that you can retrieve using the &lt;a href=&quot;qpainter#worldTransform&quot;&gt;QPainter::worldTransform&lt;/a&gt;() function. A matrix transforms a point in the plane to another point.</source>
          <target state="translated">&lt;a href=&quot;qpainter#shear&quot;&gt;QPainter :: shear&lt;/a&gt; () 함수를 사용하여 원점을 중심으로 좌표계를 비틀 수도 있습니다. 모든 변환 작업에서 작동 &lt;a href=&quot;qpainter&quot;&gt;QPainter를&lt;/a&gt; 사용하면 사용하여 검색 할 수의 변환 행렬 &lt;a href=&quot;qpainter#worldTransform&quot;&gt;QPainter를 :: worldTransform&lt;/a&gt; () 함수를. 행렬은 평면의 한 점을 다른 점으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="4d5c11dae8a79264f797e9207813f80f77e79d05" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qcamerainfo&quot;&gt;QCameraInfo&lt;/a&gt; to get general information about a camera device such as description, physical position on the system, or camera sensor orientation.</source>
          <target state="translated">&lt;a href=&quot;qcamerainfo&quot;&gt;QCameraInfo&lt;/a&gt; 를 사용 하여 설명, 시스템의 물리적 위치 또는 카메라 센서 방향과 같은 카메라 장치에 대한 일반 정보를 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b715ab75bed6d356a7c7ef6bbd3fc1c8954e989b" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; with &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;, if you are not using any QML modules which require a &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; (such as &lt;code&gt;QtQuick&lt;/code&gt;).</source>
          <target state="translated">당신은 또한 사용할 수 있습니다 &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication을&lt;/a&gt; 함께 &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt; 당신이 필요한 모든 QML 모듈을 사용하지 않는 경우, &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; (예 : &lt;code&gt;QtQuick&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="b6af91b6a606144049ad27abedc87807cfb42968" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; with QQmlApplicationEngine, if you are not using any QML modules which require a &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; (such as &lt;code&gt;QtQuick&lt;/code&gt;).</source>
          <target state="translated">You can also use &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; with QQmlApplicationEngine, if you are not using any QML modules which require a &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; (such as &lt;code&gt;QtQuick&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="138170115677d805bc8e9dcdcf51405105492b30" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qlibraryinfo#location&quot;&gt;QLibraryInfo::location&lt;/a&gt;() to locate the translations for the Qt modules used. You can request the path to the translations at run-time by passing &lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo::TranslationsPath&lt;/a&gt; to this function.</source>
          <target state="translated">You can also use &lt;a href=&quot;qlibraryinfo#location&quot;&gt;QLibraryInfo::location&lt;/a&gt;() to locate the translations for the Qt modules used. You can request the path to the translations at run-time by passing &lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo::TranslationsPath&lt;/a&gt; to this function.</target>
        </trans-unit>
        <trans-unit id="9adce45cacc80c5e505a29cae9a44d0970cf35e6" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qmodbusreply#isFinished&quot;&gt;isFinished&lt;/a&gt;() to check if a QNetworkReply has finished even before you receive the finished() signal.</source>
          <target state="translated">&lt;a href=&quot;qmodbusreply#isFinished&quot;&gt;isFinished&lt;/a&gt; ()를 사용 하여 finished () 신호를 받기 전에도 QNetworkReply가 완료되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae390658db8eb2fb14dd0ab7f977ff35e2a6b236" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qnetworkreply#isFinished&quot;&gt;isFinished&lt;/a&gt;() to check if a &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; has finished even before you receive the finished() signal.</source>
          <target state="translated">&lt;a href=&quot;qnetworkreply#isFinished&quot;&gt;isFinished&lt;/a&gt; ()를 사용 하여 finished () 신호를 받기 전에도 &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; 가 완료 되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3786e8c874b0b3baeb15b0f97a53c8080a74dce3" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qregularexpressionmatchiterator#peekNext&quot;&gt;peekNext()&lt;/a&gt; to get the next result without advancing the iterator.</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator#peekNext&quot;&gt;peekNext ()&lt;/a&gt; 를 사용 하여 반복자를 진행하지 않고 다음 결과를 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c464f518a3d126e3d8ae5eb18ad568dfed3fa4c1" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;qsqltablemodel#data&quot;&gt;QSqlTableModel::data&lt;/a&gt;() and &lt;a href=&quot;qsqltablemodel#setData&quot;&gt;QSqlTableModel::setData&lt;/a&gt;(), which are inherited from &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, to access the data. For example, here's how to update a record using &lt;a href=&quot;qsqltablemodel#setData&quot;&gt;setData()&lt;/a&gt;:</source>
          <target state="translated">당신은 또한 사용할 수 있습니다 &lt;a href=&quot;qsqltablemodel#data&quot;&gt;QSqlTableModel :: 데이터&lt;/a&gt; ()와 &lt;a href=&quot;qsqltablemodel#setData&quot;&gt;QSqlTableModel :: 사항 setData&lt;/a&gt; 에서 상속 (), &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel을&lt;/a&gt; 데이터에 액세스 할 수. 예를 들어, &lt;a href=&quot;qsqltablemodel#setData&quot;&gt;setData ()를&lt;/a&gt; 사용하여 레코드를 업데이트하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8f20c7585eb7be0ada5570b57fabf5fbacfa0a21" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;-opengl dynamic&lt;/code&gt;, which enable applications to dynamically switch between the available options at runtime. For more details about the benefits of using dynamic GL-switching, see &lt;a href=&quot;windows-requirements#graphics-drivers&quot;&gt;Graphics Drivers&lt;/a&gt;.</source>
          <target state="translated">You can also use &lt;code&gt;-opengl dynamic&lt;/code&gt; , which enable applications to dynamically switch between the available options at runtime. For more details about the benefits of using dynamic GL-switching, see &lt;a href=&quot;windows-requirements#graphics-drivers&quot;&gt;Graphics Drivers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c61937b948022dc4fb6c09f7b42b4e90bb5731ed" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;-opengl dynamic&lt;/code&gt;, which enable applications to dynamically switch between the available options at runtime. For more details about the benefits of using dynamic GL-switching, see Graphics Drivers.</source>
          <target state="translated">당신은 또한 사용할 수 있습니다 &lt;code&gt;-opengl dynamic&lt;/code&gt; 런타임에 사용할 수있는 옵션 사이에 동적으로 스위치 애플리케이션을 가능하게. 동적 GL 전환 사용의 이점에 대한 자세한 내용은 그래픽 드라이버를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="efbdbead93b080f83c2948576aa5b3be9f7384a5" translate="yes" xml:space="preserve">
          <source>You can also use QCameraInfo to get general information about a camera device such as description, physical position on the system, or camera sensor orientation.</source>
          <target state="translated">You can also use QCameraInfo to get general information about a camera device such as description, physical position on the system, or camera sensor orientation.</target>
        </trans-unit>
        <trans-unit id="d493bf3a199a27a17796ddcea05a4b9d65fb783e" translate="yes" xml:space="preserve">
          <source>You can also use a &lt;code&gt;qt.conf&lt;/code&gt; file to override the hard-coded paths that are compiled into the Qt library. For more information, see the &lt;a href=&quot;qt-conf&quot;&gt;Using qt.conf&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;code&gt;qt.conf&lt;/code&gt; 파일을 사용 하여 Qt 라이브러리로 컴파일 된 하드 코드 된 경로를 대체 할 수도 있습니다 . 자세한 내용은 &lt;a href=&quot;qt-conf&quot;&gt;qt.conf 사용&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d2596f8a608f4b6e3ff7ef89f087753b414ee38" translate="yes" xml:space="preserve">
          <source>You can also use a data stream to read/write &lt;a href=&quot;qdatastream#raw&quot;&gt;raw unencoded binary data&lt;/a&gt;. If you want a &quot;parsing&quot; input stream, see &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">데이터 스트림을 사용하여 읽고 쓸 수도 있습니다 &lt;a href=&quot;qdatastream#raw&quot;&gt; 인코딩되지 않은 원시 이진 데이터&lt;/a&gt; . &quot;파싱&quot;입력 스트림을 원하면 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="df1628e7e9cc33d71e1e6618f9663af951c44604" translate="yes" xml:space="preserve">
          <source>You can also use a traditional model with roles:</source>
          <target state="translated">역할이있는 기존 모델을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c21790a89c55f7c7d82c2d327eb88e50ef0794b3" translate="yes" xml:space="preserve">
          <source>You can also use conditionals on the type of the message using &lt;code&gt;%{if-debug}&lt;/code&gt;, &lt;code&gt;%{if-info}&lt;/code&gt;&lt;code&gt;%{if-warning}&lt;/code&gt;, &lt;code&gt;%{if-critical}&lt;/code&gt; or &lt;code&gt;%{if-fatal}&lt;/code&gt; followed by an &lt;code&gt;%{endif}&lt;/code&gt;. What is inside the &lt;code&gt;%{if-*}&lt;/code&gt; and &lt;code&gt;%{endif}&lt;/code&gt; will only be printed if the type matches.</source>
          <target state="translated">또한 사용하여 메시지의 종류에 조건문을 사용할 수 있습니다 &lt;code&gt;%{if-debug}&lt;/code&gt; , &lt;code&gt;%{if-info}&lt;/code&gt; &lt;code&gt;%{if-warning}&lt;/code&gt; , &lt;code&gt;%{if-critical}&lt;/code&gt; 또는 &lt;code&gt;%{if-fatal}&lt;/code&gt; 다음 &lt;code&gt;%{endif}&lt;/code&gt; . 안에 무엇입니까 &lt;code&gt;%{if-*}&lt;/code&gt; 및 &lt;code&gt;%{endif}&lt;/code&gt; 유형이 일치하는 경우에만 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="f2a4db4e9e78ba36bdd80f5060f2a5dc0036c16d" translate="yes" xml:space="preserve">
          <source>You can also use configuration variables to get QDoc to support &lt;a href=&quot;25-qdoc-configuration-derivedprojects&quot;&gt;derived projects&lt;/a&gt;, i.e QDoc can generate links in your project's documentation to elements in the Qt online documentation. See the &lt;a href=&quot;25-qdoc-configuration-derivedprojects&quot;&gt;Supporting Derived projects&lt;/a&gt; section.</source>
          <target state="translated">You can also use configuration variables to get QDoc to support &lt;a href=&quot;25-qdoc-configuration-derivedprojects&quot;&gt;derived projects&lt;/a&gt;, i.e QDoc can generate links in your project's documentation to elements in the Qt online documentation. See the &lt;a href=&quot;25-qdoc-configuration-derivedprojects&quot;&gt;Supporting Derived projects&lt;/a&gt; section.</target>
        </trans-unit>
        <trans-unit id="d8935b6113cbd66982105a347744d7f4a2caa6d6" translate="yes" xml:space="preserve">
          <source>You can also use configuration variables to get QDoc to support &lt;a href=&quot;25-qdoc-configuration-derivedprojects#&quot;&gt;derived projects&lt;/a&gt;, i.e QDoc can generate links in your project's documentation to elements in the Qt online documentation. See the &lt;a href=&quot;25-qdoc-configuration-derivedprojects#&quot;&gt;Supporting Derived projects&lt;/a&gt; section.</source>
          <target state="translated">QDoc이 &lt;a href=&quot;25-qdoc-configuration-derivedprojects#&quot;&gt;파생 프로젝트&lt;/a&gt; 를 지원하도록 구성 변수를 사용할 수도 있습니다. 하도록 할 수 있습니다. 즉, QDoc은 프로젝트 문서에서 Qt 온라인 문서의 요소에 대한 링크를 생성 할 수 있습니다. &lt;a href=&quot;25-qdoc-configuration-derivedprojects#&quot;&gt;파생 프로젝트 지원&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12d14a6f5f5d767ff504c0c870c6ef2700611094" translate="yes" xml:space="preserve">
          <source>You can also use named or positional binding to associate parameters to actual values.</source>
          <target state="translated">명명 된 또는 위치 바인딩을 사용하여 매개 변수를 실제 값에 연결할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="44d1f1db299087fff54ac5faa2a8dad069ba19bf" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;CONSTANT&lt;/code&gt;, &lt;code&gt;READONLY&lt;/code&gt;, &lt;code&gt;PERSISTED&lt;/code&gt;, &lt;code&gt;READWRITE&lt;/code&gt;, &lt;code&gt;READPUSH&lt;/code&gt;, or &lt;code&gt;SOURCEONLYSETTER&lt;/code&gt; keywords in the PROP declaration, which affects how the property is implemented. READPUSH is the default value if no value used.</source>
          <target state="translated">당신은 또한 사용할 수있는 &lt;code&gt;CONSTANT&lt;/code&gt; , &lt;code&gt;READONLY&lt;/code&gt; , &lt;code&gt;PERSISTED&lt;/code&gt; , &lt;code&gt;READWRITE&lt;/code&gt; , &lt;code&gt;READPUSH&lt;/code&gt; , 또는 &lt;code&gt;SOURCEONLYSETTER&lt;/code&gt; 의 속성이 구현되는 방법에 영향을주는 법안 선언에 키워드를. 값을 사용하지 않으면 READPUSH가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="96090252c3cecd3d557607834316f0fb11545d37" translate="yes" xml:space="preserve">
          <source>You can also use this element to group particle system elements related to the logical particle group. Emitters, Affectors and Painters set as direct children of a &lt;a href=&quot;qml-qtquick-particles-particlegroup&quot;&gt;ParticleGroup&lt;/a&gt; will automatically apply to that logical particle group. TrailEmitters will automatically follow the group.</source>
          <target state="translated">이 요소를 사용하여 논리 파티클 그룹과 관련된 파티클 시스템 요소를 그룹화 할 수도 있습니다. 이미 터, Affectors 및 Painters는 &lt;a href=&quot;qml-qtquick-particles-particlegroup&quot;&gt;ParticleGroup의&lt;/a&gt; 직접적인 자식으로 설정 자동으로 논리적 입자 그룹에 적용됩니다. TrailEmitters는 자동으로 그룹을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="46ec71e07dd2738f1c3f4ac72f6a2ac497ef11a3" translate="yes" xml:space="preserve">
          <source>You can also use this element to group particle system elements related to the logical particle group. Emitters, Affectors and Painters set as direct children of a ParticleGroup will automatically apply to that logical particle group. TrailEmitters will automatically follow the group.</source>
          <target state="translated">You can also use this element to group particle system elements related to the logical particle group. Emitters, Affectors and Painters set as direct children of a ParticleGroup will automatically apply to that logical particle group. TrailEmitters will automatically follow the group.</target>
        </trans-unit>
        <trans-unit id="29dc22aa4ebbd9c300c2c1f76286e6abe9884b07" translate="yes" xml:space="preserve">
          <source>You can apply a different style to the controls by setting the</source>
          <target state="translated">컨트롤을 설정하여 다른 스타일을 적용 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e6f9c01988364bc66a6f8ebd1cb941c6d029c008" translate="yes" xml:space="preserve">
          <source>You can apply toLocaleString() directly to constants, provided the decimal is included in the constant, e.g.</source>
          <target state="translated">소수가 상수에 포함되어 있으면 상수에 직접 LocaleString ()을 적용 할 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="bca5115f615392fdd7a0ebf6de0c8504c7f3b7fc" translate="yes" xml:space="preserve">
          <source>You can assign a stretch factor to each item to control how much space it will get compared to the other items. By default, two identical widgets arranged in a linear layout will have the same size, but if the first widget has a stretch factor of 1 and the second widget has a stretch factor of 2, the first widget will get 1/3 of the available space, and the second will get 2/3.</source>
          <target state="translated">각 항목에 신축 계수를 지정하여 다른 항목과 비교할 공간의 양을 제어 할 수 있습니다. 기본적으로 선형 레이아웃으로 배열 된 두 개의 동일한 위젯은 크기가 동일하지만 첫 번째 위젯의 신축 계수가 1이고 두 번째 위젯의 신축 계수가 2 인 경우 첫 번째 위젯은 사용 가능한 것의 1/3을 얻습니다. 공간, 두 번째는 2/3를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f962db6e4de61c03427276ffba512c1bc3d3e0e5" translate="yes" xml:space="preserve">
          <source>You can assign any number of Transforms to an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;. Each Transform is applied in order, one at a time.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item에&lt;/a&gt; 원하는 수의 변형을 할당 할 수 있습니다 . 각 변환은 한 번에 하나씩 순서대로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="68e6f31bb44eaa43128a71587e635c9bedd38311" translate="yes" xml:space="preserve">
          <source>You can assign menu items by declaring them as children of &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt;:</source>
          <target state="translated">메뉴 항목을 &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu의&lt;/a&gt; 하위 항목으로 선언하여 메뉴 항목을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="348406ea7ebb30a248237d61de7bce3af70521c6" translate="yes" xml:space="preserve">
          <source>You can at any time save the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s state by calling the &lt;a href=&quot;qpainter#save&quot;&gt;save&lt;/a&gt;() function which saves all the available settings on an internal stack. The &lt;a href=&quot;qpainter#restore&quot;&gt;restore&lt;/a&gt;() function pops them back.</source>
          <target state="translated">언제든지 save 를 호출하여 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 의 상태를 &lt;a href=&quot;qpainter#save&quot;&gt;저장할 수 있습니다&lt;/a&gt;사용 가능한 모든 설정을 내부 스택에 저장 () 함수를 수 있습니다. &lt;a href=&quot;qpainter#restore&quot;&gt;복원&lt;/a&gt; () 함수는 그들을 다시 나타납니다.</target>
        </trans-unit>
        <trans-unit id="e42f8397d4527b4472d3bc5abc5b5c2c59627623" translate="yes" xml:space="preserve">
          <source>You can at any time save the QPainter's state by calling the &lt;a href=&quot;qpainter#save&quot;&gt;save&lt;/a&gt;() function which saves all the available settings on an internal stack. The &lt;a href=&quot;qpainter#restore&quot;&gt;restore&lt;/a&gt;() function pops them back.</source>
          <target state="translated">You can at any time save the QPainter's state by calling the &lt;a href=&quot;qpainter#save&quot;&gt;save&lt;/a&gt;() function which saves all the available settings on an internal stack. The &lt;a href=&quot;qpainter#restore&quot;&gt;restore&lt;/a&gt;() function pops them back.</target>
        </trans-unit>
        <trans-unit id="066c2c3b5aa97e479bb07c773815f0f79a12f3fd" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication::setStyle&lt;/a&gt;() at any time, but by calling it before the constructor, you ensure that the user's preference, set using the &lt;code&gt;-style&lt;/code&gt; command-line option, is respected.</source>
          <target state="translated">당신은 호출 할 수 &lt;a href=&quot;qapplication#setStyle&quot;&gt;의 QApplication ::의 setStyle을&lt;/a&gt; 언제든지 ()하지만, 생성자 전에를 호출하여, 사용자의 선호의 사용 설정했는지 확인 &lt;code&gt;-style&lt;/code&gt; 명령 줄 옵션을 존중한다.</target>
        </trans-unit>
        <trans-unit id="fac5a316bb13c54ebea716edcd6e5b21a6121108" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qdiriterator#fileName&quot;&gt;fileName&lt;/a&gt;() or &lt;a href=&quot;qdiriterator#filePath&quot;&gt;filePath&lt;/a&gt;() to get the current entry file name or path, or &lt;a href=&quot;qdiriterator#fileInfo&quot;&gt;fileInfo&lt;/a&gt;() to get a &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; for the current entry.</source>
          <target state="translated">&lt;a href=&quot;qdiriterator#fileName&quot;&gt;fileName&lt;/a&gt; () 또는 &lt;a href=&quot;qdiriterator#filePath&quot;&gt;filePath&lt;/a&gt; ()를 호출 하여 현재 항목 파일 이름 또는 경로 를 얻 거나 &lt;a href=&quot;qdiriterator#fileInfo&quot;&gt;fileInfo&lt;/a&gt; ()를 가져와&lt;a href=&quot;qfileinfo&quot;&gt;&lt;/a&gt; 하여 현재 항목에 대한 QFileInfo 있습니다.</target>
        </trans-unit>
        <trans-unit id="266f811d77cf96083ca0c9773a5fbb3a68e46fbd" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qgraphicsitem#setZValue&quot;&gt;setZValue&lt;/a&gt;() on an item to explicitly stack it on top of, or under, other sibling items. The default Z value for an item is 0. Items with the same Z value are stacked by insertion order.</source>
          <target state="translated">전화해도됩니다 &lt;a href=&quot;qgraphicsitem#setZValue&quot;&gt;&lt;/a&gt;항목에서 setZValue ()를 하여 다른 형제 항목 위에 또는 아래에 명시 적으로 쌓을 수 있습니다. 항목의 기본 Z 값은 0입니다. Z 값이 동일한 항목은 게재 신청서에 따라 누적됩니다.</target>
        </trans-unit>
        <trans-unit id="85e553d405e43bcbe0178efe2b65b5520cb5e16e" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qgraphicsitem#stackBefore&quot;&gt;stackBefore&lt;/a&gt;() to reorder the list of children. This will directly modify the insertion order.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#stackBefore&quot;&gt;stackBefore&lt;/a&gt; 를 호출 할 수 있습니다 ()를 하여 자식 목록의 순서를 바꿀 . 게재 신청서를 직접 수정합니다.</target>
        </trans-unit>
        <trans-unit id="bd2d92f4af01239d0a2da4c00a805ff1699ee6c0" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;supportedImageFormats&lt;/a&gt;() for the full list of formats &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; supports.</source>
          <target state="translated">&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; 의 전체 형식 목록은 &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;supportedImageFormats&lt;/a&gt; ()를 호출 할 수 있습니다. 지원 .</target>
        </trans-unit>
        <trans-unit id="8eee8553cf46fa7c1568af9977a0cc4b58cb9b6f" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;supportedImageFormats&lt;/a&gt;() for the full list of formats &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; supports.</source>
          <target state="translated">&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter가&lt;/a&gt; 지원 하는 전체 형식 목록을 보려면 &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;supportedImageFormats&lt;/a&gt; ()를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a054baf5aa3e3dc4f313ac8e48f100d267cb953" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qmovie#supportedFormats&quot;&gt;supportedFormats&lt;/a&gt;() for the full list of formats &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; supports.</source>
          <target state="translated">&lt;a href=&quot;qmovie&quot;&gt;QMovie가&lt;/a&gt; 지원 하는 전체 형식 목록을 보려면 &lt;a href=&quot;qmovie#supportedFormats&quot;&gt;supportedFormats&lt;/a&gt; ()를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad0e5220d58e34d95a1d7170b2d86e8871111711" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qsharedmemory#key&quot;&gt;key&lt;/a&gt;() to retrieve the platform independent key. Internally, &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; converts this key into a platform specific key. If you instead call &lt;a href=&quot;qsharedmemory#nativeKey&quot;&gt;nativeKey&lt;/a&gt;(), you will get the platform specific, converted key.</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory#key&quot;&gt;키&lt;/a&gt; ()를 호출 하여 플랫폼 독립 키를 검색 할 수 있습니다 . 내부적으로 &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; 는이 키를 플랫폼 특정 키로 변환합니다. 대신 전화하면&lt;a href=&quot;qsharedmemory#nativeKey&quot;&gt; nativeKey&lt;/a&gt; () 하면 플랫폼 별 변환 키를 얻게됩니다.</target>
        </trans-unit>
        <trans-unit id="0468d4a2a98289709e622f5d5523a0fb86e87fd8" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qsharedmemory#nativeKey&quot;&gt;nativeKey&lt;/a&gt;() to retrieve the native key. If a native key has been assigned, calling &lt;a href=&quot;qsharedmemory#key&quot;&gt;key&lt;/a&gt;() will return a null string.</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory#nativeKey&quot;&gt;nativeKey&lt;/a&gt; ()를 호출 하여 기본 키를 검색 할 수 있습니다 . 기본 키가 할당 된 경우 호출 &lt;a href=&quot;qsharedmemory#key&quot;&gt;키&lt;/a&gt; ()를 하면 null 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="869f7bc8d5f0cae422fd3a3b496f9d5dde0b1ae0" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qsslcertificate#isNull&quot;&gt;isNull&lt;/a&gt;() to check if your certificate is null. By default, &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; constructs a null certificate. A null certificate is invalid, but an invalid certificate is not necessarily null. If you want to reset all contents in a certificate, call &lt;a href=&quot;qsslcertificate#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsslcertificate#isNull&quot;&gt;isNull&lt;/a&gt; ()을 호출 하여 인증서가 null인지 확인할 수 있습니다. 기본적으로 &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; 는 널 인증서를 구성합니다. 널 인증서는 유효하지 않지만 유효하지 않은 인증서가 반드시 널인 것은 아닙니다. 인증서의 모든 내용을 재설정하려면 &lt;a href=&quot;qsslcertificate#clear&quot;&gt;clear&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="47ea142b61e6d29fc3528a176fa1f132fc1582ed" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qsslcertificate#isNull&quot;&gt;isNull&lt;/a&gt;() to check if your certificate is null. By default, QSslCertificate constructs a null certificate. A null certificate is invalid, but an invalid certificate is not necessarily null. If you want to reset all contents in a certificate, call &lt;a href=&quot;qsslcertificate#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="translated">You can call &lt;a href=&quot;qsslcertificate#isNull&quot;&gt;isNull&lt;/a&gt;() to check if your certificate is null. By default, QSslCertificate constructs a null certificate. A null certificate is invalid, but an invalid certificate is not necessarily null. If you want to reset all contents in a certificate, call &lt;a href=&quot;qsslcertificate#clear&quot;&gt;clear&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="11c14248084cd80c2e7e3c44a1b1da3e59b73c4c" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qsslcipher#isNull&quot;&gt;isNull&lt;/a&gt;() after construction to check if</source>
          <target state="translated">전화해도됩니다 &lt;a href=&quot;qsslcipher#isNull&quot;&gt;&lt;/a&gt;생성 후 isNull ()을 하여</target>
        </trans-unit>
        <trans-unit id="d53daf6e6fbe231ffde65b65f224194cc96add9e" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qsslsocket#sessionCipher&quot;&gt;sessionCipher&lt;/a&gt;() to find which cryptographic cipher is used to encrypt and decrypt your data.</source>
          <target state="translated">&lt;a href=&quot;qsslsocket#sessionCipher&quot;&gt;sessionCipher&lt;/a&gt; 를 호출 할 수 있습니다 ()를 하여 데이터를 암호화하고 해독하는 데 사용되는 암호화 암호를 찾을 .</target>
        </trans-unit>
        <trans-unit id="6d1be65e79672ab83c546ff945871bfb88e693ec" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qtextdocumentwriter#supportedDocumentFormats&quot;&gt;supportedDocumentFormats&lt;/a&gt;() for the full list of formats &lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt; supports.</source>
          <target state="translated">&lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt; 의 전체 형식 목록은 &lt;a href=&quot;qtextdocumentwriter#supportedDocumentFormats&quot;&gt;supportedDocumentFormats&lt;/a&gt; ()를 호출 할 수 있습니다. 지원 .</target>
        </trans-unit>
        <trans-unit id="6df04995b0df6d53463591dd8840108d7fb8753c" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qwidget#mapFromGlobal&quot;&gt;QWidget::mapFromGlobal&lt;/a&gt;() to translate it to widget coordinates.</source>
          <target state="translated">&lt;a href=&quot;qwidget#mapFromGlobal&quot;&gt;QWidget :: mapFromGlobal을&lt;/a&gt; 호출 할 수 있습니다 ()을 하여 위젯 좌표로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="971bd83e30d19c61ef8cfd53ddfb855c2961aaea" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;qwidget#mapToGlobal&quot;&gt;QWidget::mapToGlobal&lt;/a&gt;() to translate widget coordinates to global screen coordinates.</source>
          <target state="translated">&lt;a href=&quot;qwidget#mapToGlobal&quot;&gt;QWidget :: mapToGlobal을&lt;/a&gt; 호출 할 수 있습니다 ()을 하여 위젯 좌표를 전역 화면 좌표로 변환 .</target>
        </trans-unit>
        <trans-unit id="ff659b75af49abcaa2834d479bcb38b060e5bb80" translate="yes" xml:space="preserve">
          <source>You can call peekEventQueue() periodically, when your program is busy performing a long-running operation, to peek into the buffered native event queue. The more time the long-running operation blocks the program from returning control to the main event loop, the more events will accumulate in the buffered XCB event queue. Once control returns to the main event loop these events will be flushed to Qt's event queue, which is a separate event queue from the queue this function is peeking into.</source>
          <target state="translated">프로그램이 장기 실행 작업을 수행중인 경우 peekEventQueue ()를 주기적으로 호출하여 버퍼링 된 기본 이벤트 큐를 들여다 볼 수 있습니다. 장기 실행 조작이 프로그램이 제어를 기본 이벤트 루프로 리턴하는 것을 차단할수록 버퍼링 된 XCB 이벤트 큐에 더 많은 이벤트가 누적됩니다. 컨트롤이 메인 이벤트 루프로 돌아 오면이 이벤트는 Qt의 이벤트 큐로 플러시됩니다.이 이벤트 큐는이 함수가 엿보기하는 큐와 별도의 이벤트 큐입니다.</target>
        </trans-unit>
        <trans-unit id="70c102681f3fb809d63dcac13c3ffdbdea7956cb" translate="yes" xml:space="preserve">
          <source>You can call this function after assigning a device to the reader to determine the format of the device. For example:</source>
          <target state="translated">장치를 리더에 할당 한 후이 기능을 호출하여 장치의 형식을 결정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2ad9b189954a02d4c6f15de6851f8564844351d3" translate="yes" xml:space="preserve">
          <source>You can call this function in a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; to change the return value of the &lt;a href=&quot;qabstractsocket#localAddress&quot;&gt;localAddress&lt;/a&gt;() function after a connection has been established. This feature is commonly used by proxy connections for virtual connection settings.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 의 서브 클래스에서이 함수를 호출 하여 &lt;a href=&quot;qabstractsocket#localAddress&quot;&gt;localAddress&lt;/a&gt; 의 리턴 값을 변경할 수 있습니다. 하여 연결이 설정된 후 () 함수 . 이 기능은 가상 연결 설정을 위해 프록시 연결에서 일반적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2a99e2348344094859a3345e5e879e722a81973b" translate="yes" xml:space="preserve">
          <source>You can call this function in a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; to change the return value of the &lt;a href=&quot;qabstractsocket#localPort&quot;&gt;localPort&lt;/a&gt;() function after a connection has been established. This feature is commonly used by proxy connections for virtual connection settings.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 의 서브 클래스에서이 함수를 호출 하여 연결이 설정된 후 &lt;a href=&quot;qabstractsocket#localPort&quot;&gt;localPort&lt;/a&gt; () 함수 의 리턴 값을 변경할 수 있습니다 . 이 기능은 가상 연결 설정을 위해 프록시 연결에서 일반적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="98d56e2dcb1138760e990e125476e1daaa3f28f2" translate="yes" xml:space="preserve">
          <source>You can call this function in a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; to change the return value of the &lt;a href=&quot;qabstractsocket#peerAddress&quot;&gt;peerAddress&lt;/a&gt;() function after a connection has been established. This feature is commonly used by proxy connections for virtual connection settings.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 의 서브 클래스에서이 함수를 호출 하여 &lt;a href=&quot;qabstractsocket#peerAddress&quot;&gt;peerAddress&lt;/a&gt; 의 리턴 값을 변경할 수 있습니다. 하여 연결이 설정된 후 () 함수 . 이 기능은 가상 연결 설정을 위해 프록시 연결에서 일반적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="437b57a197e2aecb22a98d4a95f24dadf5359875" translate="yes" xml:space="preserve">
          <source>You can call this function in a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; to change the return value of the &lt;a href=&quot;qabstractsocket#peerName&quot;&gt;peerName&lt;/a&gt;() function after a connection has been established. This feature is commonly used by proxy connections for virtual connection settings.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 의 서브 클래스에서이 함수를 호출 하여 연결이 설정된 후 &lt;a href=&quot;qabstractsocket#peerName&quot;&gt;peerName&lt;/a&gt; () 함수 의 리턴 값을 변경할 수 있습니다 . 이 기능은 가상 연결 설정을 위해 프록시 연결에서 일반적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0cab67ed1f4650a038d334c5e25161798cf32ae5" translate="yes" xml:space="preserve">
          <source>You can call this function in a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; to change the return value of the &lt;a href=&quot;qabstractsocket#peerPort&quot;&gt;peerPort&lt;/a&gt;() function after a connection has been established. This feature is commonly used by proxy connections for virtual connection settings.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 의 서브 클래스에서이 함수를 호출 하여 연결이 설정된 후 &lt;a href=&quot;qabstractsocket#peerPort&quot;&gt;peerPort&lt;/a&gt; () 함수 의 리턴 값을 변경할 수 있습니다 . 이 기능은 가상 연결 설정을 위해 프록시 연결에서 일반적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ea6d7e0e7f86cc7e624580c1b939add280aec065" translate="yes" xml:space="preserve">
          <source>You can call this function occasionally when your program is busy doing a long operation (e.g. copying a file).</source>
          <target state="translated">프로그램이 긴 작업을 수행하는 중일 때 (예 : 파일 복사)이 기능을 가끔 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af151fcabedbc9aa30701c67105488402f740beb" translate="yes" xml:space="preserve">
          <source>You can call this function occasionally when your program is busy performing a long operation (e.g. copying a file).</source>
          <target state="translated">프로그램이 긴 작업을 수행하는 중일 때 (예 : 파일 복사)이 기능을 가끔 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66ec3f185c0749bf1366ce1f13417588f46fae86" translate="yes" xml:space="preserve">
          <source>You can call this function to notify &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; of changes to the background or the foreground of the scene. It is commonly used for scenes with tile-based backgrounds to notify changes when &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; has enabled background caching.</source>
          <target state="translated">이 함수를 호출 하여 장면의 배경 또는 전경 변경을 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 에 알릴 수 있습니다 . &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 가 백그라운드 캐싱을 활성화 했을 때 변경 사항을 알리기 위해 타일 기반 배경이있는 장면에 일반적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="85368f788c53ae9779e8196241d7f5b5993f1227" translate="yes" xml:space="preserve">
          <source>You can change a tab's text and icon using &lt;a href=&quot;qtabwidget#setTabText&quot;&gt;setTabText&lt;/a&gt;() or &lt;a href=&quot;qtabwidget#setTabIcon&quot;&gt;setTabIcon&lt;/a&gt;(). A tab and its associated page can be removed with &lt;a href=&quot;qtabwidget#removeTab&quot;&gt;removeTab&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtabwidget#setTabText&quot;&gt;setTabText&lt;/a&gt; () 또는 &lt;a href=&quot;qtabwidget#setTabIcon&quot;&gt;setTabIcon&lt;/a&gt; ()을 사용하여 탭의 텍스트와 아이콘을 변경할 수 있습니다 . &lt;a href=&quot;qtabwidget#removeTab&quot;&gt;removeTab&lt;/a&gt; ()을 사용 하여 탭과 관련 페이지를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4077001c128e497c2a59571080d70d4c81f6ce3c" translate="yes" xml:space="preserve">
          <source>You can change between the frequency bands using &lt;a href=&quot;qradiotuner#setBand&quot;&gt;setBand&lt;/a&gt;() however it is recommended that you check to make sure the band is available first using &lt;a href=&quot;qradiotuner#isBandSupported&quot;&gt;isBandSupported&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qradiotuner#setBand&quot;&gt;setBand&lt;/a&gt; ()를 사용하여 주파수 대역을 변경할 수 있지만 &lt;a href=&quot;qradiotuner#isBandSupported&quot;&gt;isBandSupported&lt;/a&gt; ()를 사용하여 먼저 대역을 사용할 수 있는지 확인하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4a71bffb5b5ae071e33978a71be49d3bcd43d88b" translate="yes" xml:space="preserve">
          <source>You can change the default class name by passing &lt;code&gt;classname&lt;/code&gt; as the sixth argument.</source>
          <target state="translated">&lt;code&gt;classname&lt;/code&gt; 을 여섯 번째 인수로 전달하여 기본 클래스 이름을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="235d25f60e037655ef416b056c9c1eb400337feb" translate="yes" xml:space="preserve">
          <source>You can change the filenames as long as the Info.plist and filenames stay in sync.</source>
          <target state="translated">Info.plist와 파일 이름이 동기화되어 있으면 파일 이름을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d14f27ac7c5293fdd55e2ad274298193ecff2646" translate="yes" xml:space="preserve">
          <source>You can change the language that Qt translation functions use by adding and removing translators with &lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;QCoreApplication::installTranslator&lt;/a&gt;() and &lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;QCoreApplication::removeTranslator&lt;/a&gt;(). Afterwards you can call &lt;a href=&quot;qqmlengine#retranslate&quot;&gt;QQmlEngine::retranslate&lt;/a&gt;() to trigger a refresh of all bindings that use translations. As a result, your user interface will switch, dynamically, to the newly selected language.</source>
          <target state="translated">&lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;QCoreApplication :: installTranslator&lt;/a&gt; () 및 &lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;QCoreApplication :: removeTranslator&lt;/a&gt; ()를 사용하여 번역기를 추가 및 제거하여 Qt 변환 함수가 사용하는 언어를 변경할 수 있습니다 . 나중에 &lt;a href=&quot;qqmlengine#retranslate&quot;&gt;QQmlEngine :: retranslate&lt;/a&gt; ()를 호출 하여 번역을 사용하는 모든 바인딩의 새로 고침을 트리거 할 수 있습니다 . 결과적으로 사용자 인터페이스가 새로 선택된 언어로 동적으로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="eba446120ef49ca1e35de1ac0bb1d5f7d2dbd162" translate="yes" xml:space="preserve">
          <source>You can change the name of the header file to be generated by passing &lt;code&gt;basename&lt;/code&gt; as the fifth argument. The &lt;code&gt;.h&lt;/code&gt; suffix is always added.</source>
          <target state="translated">&lt;code&gt;basename&lt;/code&gt; 을 다섯 번째 인수로 전달하여 생성 될 헤더 파일의 이름을 변경할 수 있습니다 . &lt;code&gt;.h&lt;/code&gt; 접미사는 항상 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="433ead8a5fd65d81847908050064fedc452a2eb4" translate="yes" xml:space="preserve">
          <source>You can change the text with &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt;() or &lt;a href=&quot;qlineedit#insert&quot;&gt;insert&lt;/a&gt;(). The text is retrieved with &lt;a href=&quot;qlineedit#text-prop&quot;&gt;text&lt;/a&gt;(); the displayed text (which may be different, see &lt;a href=&quot;qlineedit#EchoMode-enum&quot;&gt;EchoMode&lt;/a&gt;) is retrieved with &lt;a href=&quot;qlineedit#displayText-prop&quot;&gt;displayText&lt;/a&gt;(). Text can be selected with &lt;a href=&quot;qlineedit#setSelection&quot;&gt;setSelection&lt;/a&gt;() or &lt;a href=&quot;qlineedit#selectAll&quot;&gt;selectAll&lt;/a&gt;(), and the selection can be &lt;a href=&quot;qlineedit#cut&quot;&gt;cut&lt;/a&gt;(), &lt;a href=&quot;qlineedit#copy&quot;&gt;copy&lt;/a&gt;()ied and &lt;a href=&quot;qlineedit#paste&quot;&gt;paste&lt;/a&gt;()d. The text can be aligned with &lt;a href=&quot;qlineedit#alignment-prop&quot;&gt;setAlignment&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt; () 또는 &lt;a href=&quot;qlineedit#insert&quot;&gt;insert&lt;/a&gt; ()를 사용하여 텍스트를 변경할 수 있습니다 . 텍스트는 &lt;a href=&quot;qlineedit#text-prop&quot;&gt;텍스트&lt;/a&gt; ()로 검색됩니다 . 표시된 텍스트 (다를 수 있음, &lt;a href=&quot;qlineedit#EchoMode-enum&quot;&gt;EchoMode&lt;/a&gt; 참조 )는 &lt;a href=&quot;qlineedit#displayText-prop&quot;&gt;displayText&lt;/a&gt; ()를 사용 하여 검색됩니다 . &lt;a href=&quot;qlineedit#setSelection&quot;&gt;setSelection&lt;/a&gt; () 또는 &lt;a href=&quot;qlineedit#selectAll&quot;&gt;selectAll&lt;/a&gt; ()을 사용 하여 텍스트를 선택할 수 있으며, &lt;a href=&quot;qlineedit#cut&quot;&gt;잘라 내기&lt;/a&gt; (), &lt;a href=&quot;qlineedit#copy&quot;&gt;복사&lt;/a&gt; (), &lt;a href=&quot;qlineedit#paste&quot;&gt;붙여 넣기&lt;/a&gt; () 할 수 있습니다 . 텍스트는 &lt;a href=&quot;qlineedit#alignment-prop&quot;&gt;setAlignment&lt;/a&gt; () 로 정렬 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ac0de248d63673a9a7a19a1800ca89ba50a6f08" translate="yes" xml:space="preserve">
          <source>You can change the value for a key by using value() on the left side of an assignment.</source>
          <target state="translated">할당 왼쪽의 value ()를 사용하여 키 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22d2343121df2500d135119a5eb809939c4a42df" translate="yes" xml:space="preserve">
          <source>You can change the value of an item by using operator*() on the left side of an assignment, for example:</source>
          <target state="translated">배정 왼쪽에서 operator * ()를 사용하여 항목 값을 변경할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b2ad1d81119e3ac96ce8f06f90dea239850b58c5" translate="yes" xml:space="preserve">
          <source>You can change the value of an item by using operator*() on the left side of an assignment.</source>
          <target state="translated">할당 왼쪽에서 operator * ()를 사용하여 항목 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1cb0ad31b338e50966943b1a224a679a7b192068" translate="yes" xml:space="preserve">
          <source>You can change the value of an item by using value() on the left side of an assignment, for example:</source>
          <target state="translated">과제의 왼쪽에있는 value ()를 사용하여 항목의 값을 변경할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="71ea80baf7b4910c7c2b05276a05cd852e400087" translate="yes" xml:space="preserve">
          <source>You can change the value of an item by using value() on the left side of an assignment.</source>
          <target state="translated">과제의 왼쪽에있는 value ()를 사용하여 항목의 값을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4324051185b351a36ed300d336d169d964d5ff63" translate="yes" xml:space="preserve">
          <source>You can check at compile time which features are supported on your hardware using various macros. These will tell you if your hardware always, sometimes, or does not support a particular operation. The macros have the form Q_ATOMIC_INT</source>
          <target state="translated">컴파일시 다양한 매크로를 사용하여 하드웨어에서 지원되는 기능을 확인할 수 있습니다. 하드웨어가 항상, 때로는 특정 작업을 지원하지 않는지 알려줍니다. 매크로는 Q_ATOMIC_INT 형식입니다.</target>
        </trans-unit>
        <trans-unit id="8b488a9bd1be27ba5816390ec995b4e682b463a9" translate="yes" xml:space="preserve">
          <source>You can check at compile time which features are supported on your hardware using various macros. These will tell you if your hardware always, sometimes, or does not support a particular operation. The macros have the form Q_ATOMIC_POINTER_</source>
          <target state="translated">컴파일시 다양한 매크로를 사용하여 하드웨어에서 지원되는 기능을 확인할 수 있습니다. 하드웨어가 항상, 때로는 또는 특정 작업을 지원하지 않는지 알려줍니다. 매크로는 Q_ATOMIC_POINTER_ 형식입니다.</target>
        </trans-unit>
        <trans-unit id="745ef729e308309bca469dcb14b8dcbb77539c8b" translate="yes" xml:space="preserve">
          <source>You can check for a file's existence using &lt;a href=&quot;qfile#exists-1&quot;&gt;exists&lt;/a&gt;(), and remove a file using &lt;a href=&quot;qfile#remove&quot;&gt;remove&lt;/a&gt;(). (More advanced file system related operations are provided by &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; and &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;.)</source>
          <target state="translated">&lt;a href=&quot;qfile#exists-1&quot;&gt;exist&lt;/a&gt; ()를 사용하여 파일의 존재를 확인하고 &lt;a href=&quot;qfile#remove&quot;&gt;remove&lt;/a&gt; ()를 사용하여 파일을 제거 할 수 있습니다. (고급 파일 시스템 관련 작업은 &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; 및 &lt;a href=&quot;qdir&quot;&gt;QDir에서&lt;/a&gt; 제공합니다 .)</target>
        </trans-unit>
        <trans-unit id="e2c13ec37aa1c876ee4a825efa34056f7b06bf83" translate="yes" xml:space="preserve">
          <source>You can check if a MIME type is convertible using &lt;a href=&quot;qwinmime#canConvertFromMime&quot;&gt;canConvertFromMime&lt;/a&gt;() and can perform conversions with &lt;a href=&quot;qwinmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;() and &lt;a href=&quot;qwinmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qwinmime#canConvertFromMime&quot;&gt;canConvertFromMime&lt;/a&gt; ()을 사용하여 MIME 유형을 변환 할 수 있는지 확인 하고 &lt;a href=&quot;qwinmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt; () 및 &lt;a href=&quot;qwinmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt; ()을 사용하여 변환을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2ebf9dc37d433f1d673ad561e225f836415d6b9" translate="yes" xml:space="preserve">
          <source>You can check the return value of this function using a scope.</source>
          <target state="translated">범위를 사용하여이 함수의 반환 값을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdb024d1249f2b042fc18b570055da80b0b4a320" translate="yes" xml:space="preserve">
          <source>You can check whether the file was included by using this function as the condition for a scope. For example:</source>
          <target state="translated">이 기능을 범위 조건으로 사용하여 파일이 포함되었는지 확인할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b4b418f86f5b02114541cb76c8c268a298097ecc" translate="yes" xml:space="preserve">
          <source>You can choose which device to use with a &lt;a href=&quot;qml-multimedia#camera&quot;&gt;Camera&lt;/a&gt; object by setting its &lt;a href=&quot;qml-qtmultimedia-camera#deviceId-prop&quot;&gt;deviceId&lt;/a&gt; property to this value.</source>
          <target state="translated">&lt;a href=&quot;qml-qtmultimedia-camera#deviceId-prop&quot;&gt;deviceId&lt;/a&gt; 속성을이 값 으로 설정 하여 &lt;a href=&quot;qml-multimedia#camera&quot;&gt;Camera&lt;/a&gt; 객체 와 함께 사용할 장치를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c84431d3d79a6ce79fb96997856a8b0d05f40ea" translate="yes" xml:space="preserve">
          <source>You can configure a factory to use the system proxy's settings. Call the &lt;a href=&quot;qnetworkproxyfactory#setUseSystemConfiguration&quot;&gt;setUseSystemConfiguration&lt;/a&gt;() function with true to enable this behavior, or false to disable it.</source>
          <target state="translated">시스템 프록시 설정을 사용하도록 팩토리를 구성 할 수 있습니다. 이 동작을 활성화 하려면 &lt;a href=&quot;qnetworkproxyfactory#setUseSystemConfiguration&quot;&gt;setUseSystemConfiguration&lt;/a&gt; () 함수를 true로 호출하고 , 비활성화하려면 false를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b37e3c73973874c6c531b08b7ab6fe00f93f860" translate="yes" xml:space="preserve">
          <source>You can connect as many signals as you want to a single slot, and a signal can be connected to as many slots as you need. It is even possible to connect a signal directly to another signal. (This will emit the second signal immediately whenever the first is emitted.)</source>
          <target state="translated">단일 슬롯에 원하는 수의 신호를 연결할 수 있으며 필요한 수의 슬롯에 신호를 연결할 수 있습니다. 신호를 다른 신호에 직접 연결할 수도 있습니다. (이것은 첫 번째가 방출 될 때마다 두 번째 신호를 즉시 방출합니다.)</target>
        </trans-unit>
        <trans-unit id="51f04c04e2b9621974034cc2338f595b1ee5c4f8" translate="yes" xml:space="preserve">
          <source>You can connect this signal to other components to help maintain a consistent appearance for your application.</source>
          <target state="translated">이 신호를 다른 구성 요소에 연결하면 응용 프로그램에 일관된 모양을 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2dc1f6e5be1897666cb61d3a64694f7609f1f79" translate="yes" xml:space="preserve">
          <source>You can construct a &lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt; with an existing &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, or you can have &lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt; create one for you, which will be the system default printer.</source>
          <target state="translated">기존 &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt; 를 구성하거나 QPrintPreviewDialog 가 시스템 기본 프린터 인 &lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog를&lt;/a&gt; 생성하도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ceb61a4fdb19aabe342fe487b03be311fee1266c" translate="yes" xml:space="preserve">
          <source>You can construct a QPrintPreviewDialog with an existing &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, or you can have QPrintPreviewDialog create one for you, which will be the system default printer.</source>
          <target state="translated">You can construct a QPrintPreviewDialog with an existing &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, or you can have QPrintPreviewDialog create one for you, which will be the system default printer.</target>
        </trans-unit>
        <trans-unit id="2236fd9e00a2663ce03e2a9c51bc9ea15f97b9d7" translate="yes" xml:space="preserve">
          <source>You can construct an audio input with the system's &lt;a href=&quot;qaudiodeviceinfo#defaultInputDevice&quot;&gt;default audio input device&lt;/a&gt;. It is also possible to create &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; with a specific &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;. When you create the audio input, you should also send in the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; to be used for the recording (see the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; class description for details).</source>
          <target state="translated">시스템의 &lt;a href=&quot;qaudiodeviceinfo#defaultInputDevice&quot;&gt;기본 오디오 입력 장치&lt;/a&gt; 로 오디오 입력을 구성 할 수 있습니다 . 특정 &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo로 &lt;/a&gt;&lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; 을 생성 할 수도 있습니다 . 오디오 입력을 만들 때 녹음에 사용할 &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; 도 보내야 합니다 (자세한 내용은 &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; 클래스 설명 참조).</target>
        </trans-unit>
        <trans-unit id="de67e5d04dacf57885c131a343310af8f29552a5" translate="yes" xml:space="preserve">
          <source>You can construct an audio input with the system's &lt;a href=&quot;qaudiodeviceinfo#defaultInputDevice&quot;&gt;default audio input device&lt;/a&gt;. It is also possible to create QAudioInput with a specific &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;. When you create the audio input, you should also send in the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; to be used for the recording (see the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; class description for details).</source>
          <target state="translated">You can construct an audio input with the system's &lt;a href=&quot;qaudiodeviceinfo#defaultInputDevice&quot;&gt;default audio input device&lt;/a&gt;. It is also possible to create QAudioInput with a specific &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;. When you create the audio input, you should also send in the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; to be used for the recording (see the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; class description for details).</target>
        </trans-unit>
        <trans-unit id="5508bd242e71c3ff3fd70bd2ee29416209c60c3e" translate="yes" xml:space="preserve">
          <source>You can construct an audio output with the system's &lt;a href=&quot;qaudiodeviceinfo#defaultOutputDevice&quot;&gt;default audio output device&lt;/a&gt;. It is also possible to create &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; with a specific &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;. When you create the audio output, you should also send in the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; to be used for the playback (see the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; class description for details).</source>
          <target state="translated">시스템의 &lt;a href=&quot;qaudiodeviceinfo#defaultOutputDevice&quot;&gt;기본 오디오 출력 장치를&lt;/a&gt; 사용하여 오디오 출력을 구성 할 수 있습니다 . 특정 &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; 를 사용하여 &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; 을 작성할 수도 있습니다 . 오디오 출력을 만들 때 재생에 사용할 &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; 도 보내야 합니다 (자세한 내용은 &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; 클래스 설명 참조).</target>
        </trans-unit>
        <trans-unit id="cd951ae887c6dc2bb1dbb0f3fc012e03a2320387" translate="yes" xml:space="preserve">
          <source>You can construct an audio output with the system's &lt;a href=&quot;qaudiodeviceinfo#defaultOutputDevice&quot;&gt;default audio output device&lt;/a&gt;. It is also possible to create QAudioOutput with a specific &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;. When you create the audio output, you should also send in the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; to be used for the playback (see the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; class description for details).</source>
          <target state="translated">You can construct an audio output with the system's &lt;a href=&quot;qaudiodeviceinfo#defaultOutputDevice&quot;&gt;default audio output device&lt;/a&gt;. It is also possible to create QAudioOutput with a specific &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;. When you create the audio output, you should also send in the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; to be used for the playback (see the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; class description for details).</target>
        </trans-unit>
        <trans-unit id="fd63ec74cc7070408c64f2a429a3c266f3e8ad29" translate="yes" xml:space="preserve">
          <source>You can control the selection behavior and mode by manipulating their view properties; see &lt;a href=&quot;qabstractitemview#selectionMode-prop&quot;&gt;QAbstractItemView::selectionMode&lt;/a&gt; and &lt;a href=&quot;qabstractitemview#selectionBehavior-prop&quot;&gt;QAbstractItemView::selectionBehavior&lt;/a&gt;.</source>
          <target state="translated">뷰 속성을 조작하여 선택 동작 및 모드를 제어 할 수 있습니다. &lt;a href=&quot;qabstractitemview#selectionMode-prop&quot;&gt;QAbstractItemView :: selectionMode&lt;/a&gt; 및 &lt;a href=&quot;qabstractitemview#selectionBehavior-prop&quot;&gt;QAbstractItemView :: selectionBehavior를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ba126d7806492f01cba0ea66c4894b19b17bf78" translate="yes" xml:space="preserve">
          <source>You can control the speed of the movie playback by calling &lt;a href=&quot;qmovie#speed-prop&quot;&gt;setSpeed&lt;/a&gt;(), which takes the percentage of the original speed as an argument. Pause the movie by calling &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt;(true). &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will then enter &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;Paused&lt;/a&gt; state and emit &lt;a href=&quot;qmovie#stateChanged&quot;&gt;stateChanged&lt;/a&gt;(). If you call &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt;(false), &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will reenter &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;Running&lt;/a&gt; state and start the movie again. To stop the movie, call &lt;a href=&quot;qmovie#stop&quot;&gt;stop&lt;/a&gt;().</source>
          <target state="translated">원래 속도의 백분율을 인수로 사용하는 &lt;a href=&quot;qmovie#speed-prop&quot;&gt;setSpeed&lt;/a&gt; () 를 호출하여 동영상 재생 속도를 제어 할 수 있습니다 . &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt; (true) 를 호출하여 동영상을 일시 정지합니다 . &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; 는 &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;일시 정지&lt;/a&gt; 상태가되고 &lt;a href=&quot;qmovie#stateChanged&quot;&gt;stateChanged&lt;/a&gt; ()를 내 보냅니다 . &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt; (false) 를 호출하면 &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; 는 &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;실행 중&lt;/a&gt; 상태로 다시 들어가서 영화를 다시 시작합니다. 영화, 통화 중지하려면 &lt;a href=&quot;qmovie#stop&quot;&gt;정지&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="c57b8446db790006d785db9489905a7e840b763d" translate="yes" xml:space="preserve">
          <source>You can control the speed of the movie playback by calling &lt;a href=&quot;qmovie#speed-prop&quot;&gt;setSpeed&lt;/a&gt;(), which takes the percentage of the original speed as an argument. Pause the movie by calling &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt;(true). QMovie will then enter &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;Paused&lt;/a&gt; state and emit &lt;a href=&quot;qmovie#stateChanged&quot;&gt;stateChanged&lt;/a&gt;(). If you call &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt;(false), QMovie will reenter &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;Running&lt;/a&gt; state and start the movie again. To stop the movie, call &lt;a href=&quot;qmovie#stop&quot;&gt;stop&lt;/a&gt;().</source>
          <target state="translated">You can control the speed of the movie playback by calling &lt;a href=&quot;qmovie#speed-prop&quot;&gt;setSpeed&lt;/a&gt;(), which takes the percentage of the original speed as an argument. Pause the movie by calling &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt;(true). QMovie will then enter &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;Paused&lt;/a&gt; state and emit &lt;a href=&quot;qmovie#stateChanged&quot;&gt;stateChanged&lt;/a&gt;(). If you call &lt;a href=&quot;qmovie#setPaused&quot;&gt;setPaused&lt;/a&gt;(false), QMovie will reenter &lt;a href=&quot;qmovie#MovieState-enum&quot;&gt;Running&lt;/a&gt; state and start the movie again. To stop the movie, call &lt;a href=&quot;qmovie#stop&quot;&gt;stop&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="1ea40f64071fd16d6a450de1ba0fa0a48419dc2b" translate="yes" xml:space="preserve">
          <source>You can control the systems analog radio device using this interface, for example:</source>
          <target state="translated">이 인터페이스를 사용하여 시스템 아날로그 무선 장치를 제어 할 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="a15050275c513ddbb8e160cdbe632043155a2206" translate="yes" xml:space="preserve">
          <source>You can control the various design aspects (width, cap styles, join styles and dash pattern) of the outlining using the following functions:</source>
          <target state="translated">다음 기능을 사용하여 개요의 다양한 디자인 측면 (너비, 캡 스타일, 결합 스타일 및 대시 패턴)을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18fb77b8d3ff8b9950448366531c3b16d4fc0514" translate="yes" xml:space="preserve">
          <source>You can control which actions that are available in the action editor's window using the &lt;a href=&quot;qdesigneractioneditorinterface#manageAction&quot;&gt;manageAction&lt;/a&gt;() and &lt;a href=&quot;qdesigneractioneditorinterface#unmanageAction&quot;&gt;unmanageAction&lt;/a&gt;() functions. An action that is managed by</source>
          <target state="translated">&lt;a href=&quot;qdesigneractioneditorinterface#manageAction&quot;&gt;manageAction&lt;/a&gt; () 및 &lt;a href=&quot;qdesigneractioneditorinterface#unmanageAction&quot;&gt;unmanageAction&lt;/a&gt; () 함수를 사용하여 조치 편집기 창에서 사용 가능한 조치를 제어 할 수 있습니다 . 에 의해 관리되는 작업</target>
        </trans-unit>
        <trans-unit id="05fdfa14509c27d7b3469b1865d70bf2c1573e2f" translate="yes" xml:space="preserve">
          <source>You can convert from item to scene coordinates using the functions on the item whose coordinate system you are interested in. See &lt;a href=&quot;qml-qtquick-item#mapFromItem-method&quot;&gt;Item::mapFromItem&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#mapToItem-method&quot;&gt;Item::mapToItem&lt;/a&gt; for converting to scene coordinates, or another item's coordinates.</source>
          <target state="translated">좌표계에 관심이있는 항목의 함수를 사용하여 항목에서 장면 좌표로 변환 할 수 있습니다. 장면 좌표 또는 다른 항목의 좌표로 변환하려면 &lt;a href=&quot;qml-qtquick-item#mapFromItem-method&quot;&gt;Item :: mapFromItem&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#mapToItem-method&quot;&gt;Item :: mapToItem&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec12fe6bcb43434a5e72dcb05675f7f6c2d3afdc" translate="yes" xml:space="preserve">
          <source>You can convert the array to and from text based JSON through &lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument를&lt;/a&gt; 통해 배열을 텍스트 기반 JSON과 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bcec33921c6082ebc72b39b589f478ce1490c440" translate="yes" xml:space="preserve">
          <source>You can convert the object to and from text based JSON through &lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument를&lt;/a&gt; 통해 오브젝트를 텍스트 기반 JSON과 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="534b270f6f128c1e4836fc556bc45c0cc022686f" translate="yes" xml:space="preserve">
          <source>You can copy a palette using the copy constructor and test to see if two palettes are</source>
          <target state="translated">복사 생성자를 사용하여 팔레트를 복사하고 두 팔레트가 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="bf004a49a18182ff698395a30478fa756037d680" translate="yes" xml:space="preserve">
          <source>You can create DITA map files using three new qdoc commands, the &lt;a href=&quot;#ditamap-command&quot;&gt;ditamap&lt;/a&gt; command, the &lt;a href=&quot;#topicref-command&quot;&gt;topicref&lt;/a&gt; command, and the &lt;a href=&quot;#mapref-command&quot;&gt;mapref&lt;/a&gt; command. How these DITA maps will be used automatically or manually by the documentation build process is still under consideration. This section will be updated as the decisions are made.</source>
          <target state="translated">당신은 세 개의 새로운 QDOC 명령의 사용 DITA 맵 파일을 만들 수 있습니다 &lt;a href=&quot;#ditamap-command&quot;&gt;ditamap의&lt;/a&gt; 명령의 &lt;a href=&quot;#topicref-command&quot;&gt;topicref의&lt;/a&gt; 명령과 &lt;a href=&quot;#mapref-command&quot;&gt;mapref의&lt;/a&gt; 명령을 사용합니다. 문서 작성 프로세스에서 이러한 DITA 맵을 자동 또는 수동으로 사용하는 방법은 여전히 ​​고려 중입니다. 이 섹션은 결정이 내려지면 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="2527a8a35ed3c09d4e7992a6eeb9496635e8dd48" translate="yes" xml:space="preserve">
          <source>You can create a &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt; whenever you need to render a rubber band around a given area (or to represent a single line), then call &lt;a href=&quot;qrubberband#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qrubberband#move&quot;&gt;move&lt;/a&gt;() or &lt;a href=&quot;qrubberband#resize&quot;&gt;resize&lt;/a&gt;() to position and size it. A common pattern is to do this in conjunction with mouse events. For example:</source>
          <target state="translated">지정된 영역 주위에 고무 밴드를 렌더링하거나 단일 선을 표시해야 할 때마다 &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt; 를 작성한 다음 &lt;a href=&quot;qrubberband#setGeometry&quot;&gt;setGeometry&lt;/a&gt; () 를 호출 하고 &lt;a href=&quot;qrubberband#move&quot;&gt;이동&lt;/a&gt; () 또는 &lt;a href=&quot;qrubberband#resize&quot;&gt;크기 조정&lt;/a&gt; ()하여 위치 및 크기를 조정할 수 있습니다. 일반적인 패턴은 마우스 이벤트와 함께이를 수행하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1eae2bbcbe031086449c1ba6f304b10e7e4818c9" translate="yes" xml:space="preserve">
          <source>You can create a QRubberBand whenever you need to render a rubber band around a given area (or to represent a single line), then call &lt;a href=&quot;qrubberband#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qrubberband#move&quot;&gt;move&lt;/a&gt;() or &lt;a href=&quot;qrubberband#resize&quot;&gt;resize&lt;/a&gt;() to position and size it. A common pattern is to do this in conjunction with mouse events. For example:</source>
          <target state="translated">You can create a QRubberBand whenever you need to render a rubber band around a given area (or to represent a single line), then call &lt;a href=&quot;qrubberband#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qrubberband#move&quot;&gt;move&lt;/a&gt;() or &lt;a href=&quot;qrubberband#resize&quot;&gt;resize&lt;/a&gt;() to position and size it. A common pattern is to do this in conjunction with mouse events. For example:</target>
        </trans-unit>
        <trans-unit id="5d2670db6e847784fdcef92193ea5051294ab5ae" translate="yes" xml:space="preserve">
          <source>You can create a busy indicator by replacing the &quot;indicator&quot; delegate of the &lt;a href=&quot;qml-qtquick-controls-styles-busyindicatorstyle&quot;&gt;BusyIndicatorStyle&lt;/a&gt; with a custom design.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-busyindicatorstyle&quot;&gt;BusyIndicatorStyle&lt;/a&gt; 의 &quot;표시기&quot;대리자를 사용자 지정 디자인 으로 바꾸어 통화 중 표시기를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="725e5d93dd03c3006f985f1ccb1a3be3346434f3" translate="yes" xml:space="preserve">
          <source>You can create a busy indicator by replacing the &quot;indicator&quot; delegate of the BusyIndicatorStyle with a custom design.</source>
          <target state="translated">You can create a busy indicator by replacing the &quot;indicator&quot; delegate of the BusyIndicatorStyle with a custom design.</target>
        </trans-unit>
        <trans-unit id="2f8c9b5d6813b3fe906612f0153008ac364a1ff6" translate="yes" xml:space="preserve">
          <source>You can create a custom &lt;a href=&quot;qml-qtquick-extras-delaybutton&quot;&gt;DelayButton&lt;/a&gt; by replacing the following delegates:</source>
          <target state="translated">다음 대리자를 교체하여 사용자 지정 &lt;a href=&quot;qml-qtquick-extras-delaybutton&quot;&gt;DelayButton&lt;/a&gt; 을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3e4dad5fb309a294cb7ab5fcfa660a13b321d0d" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for Calendar by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-calendarstyle&quot;&gt;CalendarStyle&lt;/a&gt;.</source>
          <target state="translated">CalendarStyle을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-calendarstyle&quot;&gt;Calendar에&lt;/a&gt; 대한 사용자 정의 모양을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="edc6bdc2b0031b7c8ff9fde1bd78600a470546fe" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-checkbox&quot;&gt;CheckBox&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-checkboxstyle&quot;&gt;CheckBoxStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-checkbox&quot;&gt;CheckBoxStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-checkboxstyle&quot;&gt;CheckBox에&lt;/a&gt; 대한 사용자 정의 모양을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7c86259fa4020a6af2293632f4f81548c150677" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-comboboxstyle&quot;&gt;ComboBoxStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBoxStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-comboboxstyle&quot;&gt;ComboBox에&lt;/a&gt; 대한 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="425175a08a6c00a16a8f200dea693bbf724eeb08" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-progressbar&quot;&gt;ProgressBar&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-progressbarstyle&quot;&gt;ProgressBarStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-progressbar&quot;&gt;ProgressBarStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-progressbarstyle&quot;&gt;ProgressBar에&lt;/a&gt; 대한 사용자 정의 모양을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77755c5f81167251d51f793b1ce873508b3e87bf" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-radiobutton&quot;&gt;RadioButton&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-radiobuttonstyle&quot;&gt;RadioButtonStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-radiobutton&quot;&gt;RadioButtonStyle&lt;/a&gt; 을 할당하여 &lt;a href=&quot;qml-qtquick-controls-styles-radiobuttonstyle&quot;&gt;RadioButton에&lt;/a&gt; 대한 사용자 정의 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0bcbfb6951c375b6b09c521a205071b75285c5d" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-scrollviewstyle&quot;&gt;ScrollViewStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollViewStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-scrollviewstyle&quot;&gt;ScrollView에&lt;/a&gt; 대한 사용자 정의 모양을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b557750bf1bce5bfc683b6ef6eab51cf250d6e78" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-tableview&quot;&gt;TableView&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-tableviewstyle&quot;&gt;TableViewStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-tableview&quot;&gt;TableViewStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-tableviewstyle&quot;&gt;TableView에&lt;/a&gt; 대한 사용자 정의 모양을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d34839eb43d85719dfe000a0a467dd06c983c580" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-textareastyle&quot;&gt;TextAreaStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextAreaStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-textareastyle&quot;&gt;TextArea에&lt;/a&gt; 대한 사용자 정의 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="70cab762458317eecf67b8cf58ad950f691271e7" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-textfieldstyle&quot;&gt;TextFieldStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextFieldStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-textfieldstyle&quot;&gt;TextField에&lt;/a&gt; 대한 사용자 정의 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13298eea13591a8dd5bde4fc9f11db5851f46643" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-toolbutton&quot;&gt;ToolButton&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-toolbutton&quot;&gt;ButtonStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ToolButton에&lt;/a&gt; 대한 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90634d6512c54b070e89d16ca8fd8a676ca9522b" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-controls-treeview&quot;&gt;TreeView&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-treeviewstyle&quot;&gt;TreeViewStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-treeview&quot;&gt;TreeViewStyle&lt;/a&gt; 을 할당하여 &lt;a href=&quot;qml-qtquick-controls-styles-treeviewstyle&quot;&gt;TreeView&lt;/a&gt; 의 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="207fa05a27bb39b32fdf3b6975686dab8faea0dd" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-extras-circulargauge&quot;&gt;CircularGauge&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle&quot;&gt;CircularGaugeStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-extras-circulargauge&quot;&gt;CircularGaugeStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle&quot;&gt;CircularGauge에&lt;/a&gt; 대한 사용자 정의 모양을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d0799d5bc855daeb97366dbeadf7fd9716e2e84" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-extras-delaybutton&quot;&gt;DelayButton&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-delaybuttonstyle&quot;&gt;DelayButtonStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-extras-delaybutton&quot;&gt;DelayButtonStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-delaybuttonstyle&quot;&gt;DelayButton에&lt;/a&gt; 대한 사용자 정의 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b90d069d4cde873fd5a76ca3ad43ad1a01414e6" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle&quot;&gt;PieMenuStyle&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenuStyle&lt;/a&gt; 을 할당하여 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle&quot;&gt;PieMenu에&lt;/a&gt; 대한 사용자 정의 모양을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09ecb5b4d700dab832e6064968f0cd250eac6716" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-extras-statusindicator&quot;&gt;StatusIndicator&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-statusindicatorstyle&quot;&gt;StatusIndicatorStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-extras-statusindicator&quot;&gt;StatusIndicatorStyle&lt;/a&gt; 을 지정하여 &lt;a href=&quot;qml-qtquick-controls-styles-statusindicatorstyle&quot;&gt;StatusIndicator에&lt;/a&gt; 대한 사용자 정의 모양을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b21c07c1bb899acf2b6830c423c293a787e9aa01" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a &lt;a href=&quot;qml-qtquick-extras-togglebutton&quot;&gt;ToggleButton&lt;/a&gt; by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-togglebuttonstyle&quot;&gt;ToggleButtonStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-extras-togglebutton&quot;&gt;ToggleButtonStyle&lt;/a&gt; 을 할당하여 &lt;a href=&quot;qml-qtquick-controls-styles-togglebuttonstyle&quot;&gt;ToggleButton에&lt;/a&gt; 대한 사용자 정의 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40cd5c71732a12a28e97d47e0310f3f8d323bec2" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Busy Indicator by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-busyindicatorstyle&quot;&gt;BusyIndicatorStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-busyindicatorstyle&quot;&gt;BusyIndicatorStyle&lt;/a&gt; 을 지정하여 통화 중 표시기의 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b9ff5df7ef46649e6f0fa6064f30e9dc79d66c7" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Button by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt; 을 지정하여 Button에 대한 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1fa28606ced773de422422f127fe754a2a2c44c5" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a CheckBox by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-checkboxstyle&quot;&gt;CheckBoxStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a CheckBox by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-checkboxstyle&quot;&gt;CheckBoxStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a709d5e0489806af39de2ebcd0b09bf42e55115b" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a CircularGauge by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle&quot;&gt;CircularGaugeStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a CircularGauge by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle&quot;&gt;CircularGaugeStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3904e3e52201993e4487358463aad051a22b0bf7" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a ComboBox by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-comboboxstyle&quot;&gt;ComboBoxStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a ComboBox by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-comboboxstyle&quot;&gt;ComboBoxStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="bddff933eada3c9dcbf21392028fec8420e302e3" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a DelayButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-delaybuttonstyle&quot;&gt;DelayButtonStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a DelayButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-delaybuttonstyle&quot;&gt;DelayButtonStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="360cde1e8397907d7860c55ee510269abe0bf8eb" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Dial by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-dialstyle&quot;&gt;DialStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-dialstyle&quot;&gt;DialStyle&lt;/a&gt; 을 지정하여 다이얼에 대한 사용자 정의 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25e868d5ce747952060f0419f0520f4cb3392160" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Gauge by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle&quot;&gt;GaugeStyle&lt;/a&gt; 을 지정하여 게이지에 대한 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bcd8f92de9d4888790dce220fafa2f1f9e66a627" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a PieMenu by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle&quot;&gt;PieMenuStyle&lt;/a&gt;</source>
          <target state="translated">You can create a custom appearance for a PieMenu by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle&quot;&gt;PieMenuStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf1db70ac039378ac06ecd5190e3f214ed10f34b" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a ProgressBar by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-progressbarstyle&quot;&gt;ProgressBarStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a ProgressBar by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-progressbarstyle&quot;&gt;ProgressBarStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3445628cfdf29f97bd8e293eb29aac5c15371442" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a RadioButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-radiobuttonstyle&quot;&gt;RadioButtonStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a RadioButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-radiobuttonstyle&quot;&gt;RadioButtonStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0b0b8fae3480c8c73fc96bb244f2cb7e1d8dc8df" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a ScrollView by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-scrollviewstyle&quot;&gt;ScrollViewStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a ScrollView by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-scrollviewstyle&quot;&gt;ScrollViewStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d8cc85aba958c1a16aea02faf9561ca9ecac4e38" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Slider by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-sliderstyle&quot;&gt;SliderStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-sliderstyle&quot;&gt;SliderStyle&lt;/a&gt; 을 지정하여 슬라이더에 대한 사용자 정의 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45766121c017e0185994cbc9d75c981bbc0b60e1" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a StatusIndicator by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-statusindicatorstyle&quot;&gt;StatusIndicatorStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a StatusIndicator by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-statusindicatorstyle&quot;&gt;StatusIndicatorStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="13bbb4bd341d6dfe7b8dd1516ccb16cdfb671028" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Switch by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-switchstyle&quot;&gt;SwitchStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-switchstyle&quot;&gt;SwitchStyle&lt;/a&gt; 을 할당하여 스위치에 대한 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="797f9075230c23a90d38334896f26d8c81aa7e18" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a TableView by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-tableviewstyle&quot;&gt;TableViewStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a TableView by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-tableviewstyle&quot;&gt;TableViewStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6a5c9801c93675169a87afc6d878ff03a0a4ae6d" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a TextArea by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-textareastyle&quot;&gt;TextAreaStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a TextArea by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-textareastyle&quot;&gt;TextAreaStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e41f3c63539f02d32de59c9e990d61e51fc06eb5" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a TextField by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-textfieldstyle&quot;&gt;TextFieldStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a TextField by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-textfieldstyle&quot;&gt;TextFieldStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9e463cd66ee7b28f836f85db14ec87469c657781" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a ToggleButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-togglebuttonstyle&quot;&gt;ToggleButtonStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a ToggleButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-togglebuttonstyle&quot;&gt;ToggleButtonStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="eda3e7da3ddcc1d3e4f8f7353047fc46cd0938c9" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a ToolButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a ToolButton by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="120006fc00c06ba71162b10c8e13e1b01b8175f4" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a TreeView by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-treeviewstyle&quot;&gt;TreeViewStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom appearance for a TreeView by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-treeviewstyle&quot;&gt;TreeViewStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="effdfaa7edc6c55db444699c591536647cf46ae1" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Tumbler by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle&quot;&gt;TumblerStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle&quot;&gt;TumblerStyle&lt;/a&gt; 을 지정하여 Tumbler에 대한 사용자 지정 모양을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="446a6686179da97187584fcd091ad5312c4a7891" translate="yes" xml:space="preserve">
          <source>You can create a custom appearance for a Tumbler by assigning a &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle&quot;&gt;TumblerStyle&lt;/a&gt;. To style individual columns, use the &lt;a href=&quot;qml-qtquick-extras-tumblercolumn#delegate-prop&quot;&gt;delegate&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-extras-tumblercolumn#highlight-prop&quot;&gt;highlight&lt;/a&gt; properties of &lt;a href=&quot;qml-qtquick-extras-tumblercolumn&quot;&gt;TumblerColumn&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle&quot;&gt;TumblerStyle&lt;/a&gt; 을 지정하여 Tumbler에 대한 사용자 지정 모양을 만들 수 있습니다 . 개별 열의 스타일을 지정하려면 &lt;a href=&quot;qml-qtquick-extras-tumblercolumn&quot;&gt;TumblerColumn&lt;/a&gt; 의 &lt;a href=&quot;qml-qtquick-extras-tumblercolumn#delegate-prop&quot;&gt;대리자&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-extras-tumblercolumn#highlight-prop&quot;&gt;강조&lt;/a&gt; 속성을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="11f66f4cd70e27326922e3cbf75c3fc9031799d0" translate="yes" xml:space="preserve">
          <source>You can create a custom button by replacing the &quot;background&quot; delegate of the &lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt; with a custom design.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt; 의 &quot;배경&quot;대리자를 사용자 지정 디자인 으로 바꾸어 사용자 지정 단추를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61761f08fb5051592a7a5e6b9958628f1f334f82" translate="yes" xml:space="preserve">
          <source>You can create a custom button by replacing the &quot;background&quot; delegate of the ButtonStyle with a custom design.</source>
          <target state="translated">You can create a custom button by replacing the &quot;background&quot; delegate of the ButtonStyle with a custom design.</target>
        </trans-unit>
        <trans-unit id="1355810e0721ce2f345d9ebbdd3b644440d3d30f" translate="yes" xml:space="preserve">
          <source>You can create a custom circular gauge by replacing the following delegates:</source>
          <target state="translated">다음 대리자를 교체하여 사용자 정의 원형 게이지를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24e3a5ae9673a23f2d216b68444a89f39971c3c6" translate="yes" xml:space="preserve">
          <source>You can create a custom dial by replacing the following delegates:</source>
          <target state="translated">다음 대리인을 교체하여 사용자 지정 다이얼을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5c2a01d22c9afff963dd6e5b43bda42c2211920" translate="yes" xml:space="preserve">
          <source>You can create a custom gauge by replacing the following delegates:</source>
          <target state="translated">다음 대리자를 교체하여 사용자 지정 게이지를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="288f6b2162f9f91ebae9649414c55e69f0696b3d" translate="yes" xml:space="preserve">
          <source>You can create a custom look and feel for your application by creating a custom style. There are two approaches to creating a custom style. In the static approach, you either choose an existing &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class, subclass it, and reimplement virtual functions to provide the custom behavior, or you create an entire &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class from scratch. In the dynamic approach, you modify the behavior of your system style at runtime. The static approach is described below. The dynamic approach is described in &lt;a href=&quot;qproxystyle&quot;&gt;QProxyStyle&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 스타일을 작성하여 애플리케이션에 대한 사용자 정의 모양과 느낌을 작성할 수 있습니다. 사용자 정의 스타일을 생성하는 데는 두 가지 방법이 있습니다. 정적 접근 방식에서는 기존 &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; 클래스를 선택하고 서브 클래스로 만들고 가상 함수를 다시 구현하여 사용자 정의 동작을 제공하거나 전체 &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; 클래스를 처음부터 작성합니다. 동적 접근 방식에서는 런타임시 시스템 스타일의 동작을 수정합니다. 정적 접근 방식은 아래에 설명되어 있습니다. 동적 접근 방식은 &lt;a href=&quot;qproxystyle&quot;&gt;QProxyStyle에&lt;/a&gt; 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="00d75720f504f5d3335638014088df05f116b2ac" translate="yes" xml:space="preserve">
          <source>You can create a custom look and feel for your application by creating a custom style. There are two approaches to creating a custom style. In the static approach, you either choose an existing QStyle class, subclass it, and reimplement virtual functions to provide the custom behavior, or you create an entire QStyle class from scratch. In the dynamic approach, you modify the behavior of your system style at runtime. The static approach is described below. The dynamic approach is described in &lt;a href=&quot;qproxystyle&quot;&gt;QProxyStyle&lt;/a&gt;.</source>
          <target state="translated">You can create a custom look and feel for your application by creating a custom style. There are two approaches to creating a custom style. In the static approach, you either choose an existing QStyle class, subclass it, and reimplement virtual functions to provide the custom behavior, or you create an entire QStyle class from scratch. In the dynamic approach, you modify the behavior of your system style at runtime. The static approach is described below. The dynamic approach is described in &lt;a href=&quot;qproxystyle&quot;&gt;QProxyStyle&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a1ad3e34d9b4d656aeac2ab49fc410627f27d535" translate="yes" xml:space="preserve">
          <source>You can create a custom pie menu by replacing the following delegates:</source>
          <target state="translated">다음 대리자를 교체하여 사용자 지정 파이 메뉴를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77f6778610cd0e656475c75c216bdb7ded741c91" translate="yes" xml:space="preserve">
          <source>You can create a custom status indicator by defining the &lt;a href=&quot;qml-qtquick-controls-styles-statusindicatorstyle#indicator-prop&quot;&gt;indicator&lt;/a&gt; component.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-statusindicatorstyle#indicator-prop&quot;&gt;표시기&lt;/a&gt; 구성 요소 를 정의하여 사용자 정의 상태 표시기를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f121f629d5c081c76f6ecaa60a870a58d00065fb" translate="yes" xml:space="preserve">
          <source>You can create a custom toggle button by replacing the same delegates that &lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle&lt;/a&gt; provides.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-buttonstyle&quot;&gt;ButtonStyle이&lt;/a&gt; 제공 하는 것과 동일한 대리자를 교체하여 사용자 지정 토글 단추를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="20f6695b9e3930c0ec7ca889c36ed33c9e251062" translate="yes" xml:space="preserve">
          <source>You can create a custom tumbler by replacing the following delegates:</source>
          <target state="translated">다음 대리자를 교체하여 사용자 지정 텀블러를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb4b9744696dc275ccca76cc20bde69c216fe08b" translate="yes" xml:space="preserve">
          <source>You can create a custom window background by replacing the &quot;background&quot; delegate of &lt;a href=&quot;qml-qtquick-controls-styles-applicationwindowstyle&quot;&gt;ApplicationWindowStyle&lt;/a&gt; with a custom design.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-applicationwindowstyle&quot;&gt;ApplicationWindowStyle&lt;/a&gt; 의 &quot;배경&quot;대리자를 사용자 지정 디자인 으로 바꾸어 사용자 지정 창 배경을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="48f49081a21a5fadea9fb1bedd40065695c19159" translate="yes" xml:space="preserve">
          <source>You can create a custom window background by replacing the &quot;background&quot; delegate of ApplicationWindowStyle with a custom design.</source>
          <target state="translated">You can create a custom window background by replacing the &quot;background&quot; delegate of ApplicationWindowStyle with a custom design.</target>
        </trans-unit>
        <trans-unit id="6591a2ee3f63c45eca9283ae71c70e96d4908bbd" translate="yes" xml:space="preserve">
          <source>You can create a new document type with &lt;a href=&quot;qdomimplementation#createDocumentType&quot;&gt;createDocumentType&lt;/a&gt;() and a new document with &lt;a href=&quot;qdomimplementation#createDocument&quot;&gt;createDocument&lt;/a&gt;().</source>
          <target state="translated">당신이 새로운 문서 유형 만들 수 있습니다 &lt;a href=&quot;qdomimplementation#createDocumentType&quot;&gt;createDocumentType&lt;/a&gt; ()와 가진 새 문서 &lt;a href=&quot;qdomimplementation#createDocument&quot;&gt;createDocument을&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="ab58b6f8b94d91f4f77db9a074d0fb8c71072b4f" translate="yes" xml:space="preserve">
          <source>You can create a service by extending the class &lt;code&gt;QtService&lt;/code&gt; or &lt;a href=&quot;https://developer.android.com/reference/android/app/Service&quot;&gt;Android: Service&lt;/a&gt; to your Java class. Depending on whether you want to use Qt features in your service or call native C++ functions from Java, you need to extend either &lt;code&gt;QtService&lt;/code&gt; or &lt;code&gt;Service&lt;/code&gt;. Let's start with a simple service, as follows:</source>
          <target state="translated">You can create a service by extending the class &lt;code&gt;QtService&lt;/code&gt; or &lt;a href=&quot;https://developer.android.com/reference/android/app/Service&quot;&gt;Android: Service&lt;/a&gt; to your Java class. Depending on whether you want to use Qt features in your service or call native C++ functions from Java, you need to extend either &lt;code&gt;QtService&lt;/code&gt; or &lt;code&gt;Service&lt;/code&gt; . Let's start with a simple service, as follows:</target>
        </trans-unit>
        <trans-unit id="6623e1e3b490c5318077522a0a5cee2a39473068" translate="yes" xml:space="preserve">
          <source>You can create an instance of &lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; by passing the path to the volume's mount point as a constructor parameter, or you can set it using the &lt;a href=&quot;qstorageinfo#setPath&quot;&gt;setPath&lt;/a&gt;() method. The static &lt;a href=&quot;qstorageinfo#mountedVolumes&quot;&gt;mountedVolumes&lt;/a&gt;() method can be used to get the list of all mounted filesystems.</source>
          <target state="translated">볼륨의 마운트 포인트에 경로를 생성자 매개 변수로 전달하여 &lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; 의 인스턴스를 작성 하거나 &lt;a href=&quot;qstorageinfo#setPath&quot;&gt;setPath&lt;/a&gt; () 메소드를 사용하여 설정할 수 있습니다 . 정적 &lt;a href=&quot;qstorageinfo#mountedVolumes&quot;&gt;mountVolumes&lt;/a&gt; () 메소드를 사용하여 마운트 된 모든 파일 시스템 목록을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d06f756c8b9b6aa8503c130afc54a29fa5fc57ca" translate="yes" xml:space="preserve">
          <source>You can create an instance of QStorageInfo by passing the path to the volume's mount point as a constructor parameter, or you can set it using the &lt;a href=&quot;qstorageinfo#setPath&quot;&gt;setPath&lt;/a&gt;() method. The static &lt;a href=&quot;qstorageinfo#mountedVolumes&quot;&gt;mountedVolumes&lt;/a&gt;() method can be used to get the list of all mounted filesystems.</source>
          <target state="translated">You can create an instance of QStorageInfo by passing the path to the volume's mount point as a constructor parameter, or you can set it using the &lt;a href=&quot;qstorageinfo#setPath&quot;&gt;setPath&lt;/a&gt;() method. The static &lt;a href=&quot;qstorageinfo#mountedVolumes&quot;&gt;mountedVolumes&lt;/a&gt;() method can be used to get the list of all mounted filesystems.</target>
        </trans-unit>
        <trans-unit id="829480e50daca9a93a34fda88700af2a26b33b08" translate="yes" xml:space="preserve">
          <source>You can create your own &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt; without using the static functions. By calling &lt;a href=&quot;qfiledialog#fileMode-prop&quot;&gt;setFileMode&lt;/a&gt;(), you can specify what the user must select in the dialog:</source>
          <target state="translated">정적 함수를 사용하지 않고 자체 &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt; 를 만들 수 있습니다 . &lt;a href=&quot;qfiledialog#fileMode-prop&quot;&gt;setFileMode&lt;/a&gt; () 를 호출 하여 대화 상자에서 사용자가 선택해야하는 내용을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc90c3568ae9cf348aebd2b6cd9886b9b1dfecc6" translate="yes" xml:space="preserve">
          <source>You can create your own QFileDialog without using the static functions. By calling &lt;a href=&quot;qfiledialog#fileMode-prop&quot;&gt;setFileMode&lt;/a&gt;(), you can specify what the user must select in the dialog:</source>
          <target state="translated">You can create your own QFileDialog without using the static functions. By calling &lt;a href=&quot;qfiledialog#fileMode-prop&quot;&gt;setFileMode&lt;/a&gt;(), you can specify what the user must select in the dialog:</target>
        </trans-unit>
        <trans-unit id="48a3838f1dbb4a734c690ddc098064a2a810fa1f" translate="yes" xml:space="preserve">
          <source>You can customize the look by overriding the &lt;a href=&quot;qml-qtquick-controls-tableview#itemDelegate-prop&quot;&gt;itemDelegate&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-tableview#rowDelegate-prop&quot;&gt;rowDelegate&lt;/a&gt;, or &lt;a href=&quot;qml-qtquick-controls-tableview#headerDelegate-prop&quot;&gt;headerDelegate&lt;/a&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-tableview#itemDelegate-prop&quot;&gt;itemDelegate&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls-tableview#rowDelegate-prop&quot;&gt;rowDelegate&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls-tableview#headerDelegate-prop&quot;&gt;headerDelegate&lt;/a&gt; 속성 을 재정 의하여 모양을 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="079d65c3f00934f6ea5929308e9e21672ae6a4cd" translate="yes" xml:space="preserve">
          <source>You can customize the look by overriding the &lt;a href=&quot;qml-qtquick-controls-treeview#itemDelegate-prop&quot;&gt;itemDelegate&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-treeview#rowDelegate-prop&quot;&gt;rowDelegate&lt;/a&gt;, or &lt;a href=&quot;qml-qtquick-controls-treeview#headerDelegate-prop&quot;&gt;headerDelegate&lt;/a&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-treeview#itemDelegate-prop&quot;&gt;itemDelegate&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls-treeview#rowDelegate-prop&quot;&gt;rowDelegate&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls-treeview#headerDelegate-prop&quot;&gt;headerDelegate&lt;/a&gt; 속성 을 재정 의하여 모양을 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f5e3403c5ea7901c382aea548cf58c09c12f593" translate="yes" xml:space="preserve">
          <source>You can customize the look by overriding the &lt;a href=&quot;qml-qtquick-controls-treeview#itemDelegate-prop&quot;&gt;itemDelegate&lt;/a&gt;, rowDelegate, or headerDelegate properties.</source>
          <target state="translated">You can customize the look by overriding the &lt;a href=&quot;qml-qtquick-controls-treeview#itemDelegate-prop&quot;&gt;itemDelegate&lt;/a&gt;, rowDelegate, or headerDelegate properties.</target>
        </trans-unit>
        <trans-unit id="463567a5e106b6ad2daf8c1ac13fb6c876b1ad2d" translate="yes" xml:space="preserve">
          <source>You can customize the tab order using &lt;a href=&quot;qwidget#setTabOrder&quot;&gt;QWidget::setTabOrder&lt;/a&gt;(). (If you don't, &lt;b&gt;Tab&lt;/b&gt; generally moves focus in the order of widget construction.) Qt Designer provides a means of visually changing the tab order.</source>
          <target state="translated">&lt;a href=&quot;qwidget#setTabOrder&quot;&gt;QWidget :: setTabOrder&lt;/a&gt; ()를 사용하여 탭 순서를 사용자 정의 할 수 있습니다 . (그렇지 않으면 &lt;b&gt;Tab은&lt;/b&gt; 일반적으로 위젯 구성 순서대로 포커스를 이동합니다.) Qt Designer는 탭 순서를 시각적으로 변경하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7b1ae55e2c86572a71f138384b075905674185ff" translate="yes" xml:space="preserve">
          <source>You can declare &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; as the root item of your application, and run it by using &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;. In this way you can control the window's properties, appearance and layout from QML.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow를 애플리케이션&lt;/a&gt; 의 루트 항목으로 선언 하고 &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt; 을 사용하여 실행할 수 있습니다. 이러한 방식으로 QML에서 창의 속성, 모양 및 레이아웃을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fb64881294e6deee4cb91f1a17a12f271906463" translate="yes" xml:space="preserve">
          <source>You can declare ApplicationWindow as the root item of your application, and run it by using &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;. In this way you can control the window's properties, appearance and layout from QML.</source>
          <target state="translated">You can declare ApplicationWindow as the root item of your application, and run it by using &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;. In this way you can control the window's properties, appearance and layout from QML.</target>
        </trans-unit>
        <trans-unit id="81fe2f82d050ac05ad8277a4f8afc0e7a2bda752" translate="yes" xml:space="preserve">
          <source>You can define a sub-set of particle groups in this property in order to provide them with stochastic state transitions.</source>
          <target state="translated">확률 적 상태 전이를 제공하기 위해이 속성에서 파티클 그룹의 하위 세트를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5fb08e749435934740d56b5c570f0d70397fd01" translate="yes" xml:space="preserve">
          <source>You can define any number of custom filters in a help project file. It is important to know that you do not have to specify the filter attributes in the same project file. These attributes can be defined in any help file, in a filter section.</source>
          <target state="translated">도움말 프로젝트 파일에서 원하는 수의 사용자 정의 필터를 정의 할 수 있습니다. 동일한 프로젝트 파일에서 필터 속성을 지정할 필요는 없습니다. 이 속성은 모든 도움말 파일의 필터 섹션에서 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="825abcc7172d8b4646fcc6ea8b8d936a74cf6d60" translate="yes" xml:space="preserve">
          <source>You can define certain roles as &quot;keys&quot; so that when &lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel#reload-method&quot;&gt;reload()&lt;/a&gt; is called, the model will only add and refresh data that contains new values for these keys.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel#reload-method&quot;&gt;reload ()&lt;/a&gt; 가 호출 될 때 모델이이 키에 대한 새 값을 포함하는 데이터 만 추가하고 새로 고치 도록 특정 역할을 &quot;키&quot;로 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eaeecd6b9bd486c0633fd7717f2fe7af318d5bcd" translate="yes" xml:space="preserve">
          <source>You can define new user types in &lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; subclasses to ensure that custom items are treated specially.</source>
          <target state="translated">&lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; 서브 클래스 에서 새 사용자 유형 을 정의하여 사용자 정의 항목이 특별히 처리되도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b29cad43996e1f240cad32a7921bad64dddff95" translate="yes" xml:space="preserve">
          <source>You can define new user types in &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; subclasses to ensure that custom items are treated specially; for example, when items are sorted.</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; 서브 클래스 에서 새로운 사용자 유형 을 정의하여 사용자 정의 항목이 특별히 처리되도록 할 수 있습니다 . 예를 들어 항목을 정렬 할 때</target>
        </trans-unit>
        <trans-unit id="5eea3a81e8b5b97414f3a597634db4da81f784d9" translate="yes" xml:space="preserve">
          <source>You can define new user types in &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; subclasses to ensure that custom items are treated specially.</source>
          <target state="translated">&lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; 서브 클래스 에서 새 사용자 유형 을 정의하여 사용자 정의 항목이 특별히 처리되도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ff0f62525f56eceeb0913301f820ac7ea9ae312" translate="yes" xml:space="preserve">
          <source>You can define new user types in &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; subclasses to ensure that custom items are treated specially; for example, when items are sorted.</source>
          <target state="translated">&lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; 서브 클래스 에서 새로운 사용자 유형 을 정의하여 사용자 정의 항목이 특별히 처리되도록 할 수 있습니다 . 예를 들어 항목을 정렬 할 때</target>
        </trans-unit>
        <trans-unit id="37a6792f56ceb68eebda15bfc8b7cdd1eb0378d5" translate="yes" xml:space="preserve">
          <source>You can define your own functions for processing the contents of variables as follows:</source>
          <target state="translated">다음과 같이 변수 내용을 처리하기위한 고유 한 함수를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb68bdde305e41912c0b86c92a19fc6b0e9a9005" translate="yes" xml:space="preserve">
          <source>You can determine whether a given model item lies within a particular range by using the &lt;a href=&quot;qitemselectionrange#contains&quot;&gt;contains&lt;/a&gt;() function. Ranges can also be compared using the overloaded operators for equality and inequality, and the &lt;a href=&quot;qitemselectionrange#intersects&quot;&gt;intersects&lt;/a&gt;() function allows you to determine whether two ranges overlap.</source>
          <target state="translated">&lt;a href=&quot;qitemselectionrange#contains&quot;&gt;contains&lt;/a&gt; () 함수를 사용하여 주어진 모델 항목이 특정 범위 내에 있는지 확인할 수 있습니다 . 오버로드 된 연산자를 사용하여 등식과 불평등에 대해 범위를 비교할 수 있으며 &lt;a href=&quot;qitemselectionrange#intersects&quot;&gt;교차&lt;/a&gt; () 함수를 사용하면 두 범위가 겹치는 지 여부를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14c3a796133e1fe8525e7174d7ab574f91acd989" translate="yes" xml:space="preserve">
          <source>You can develop applications for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; just as any other Qt applications. Use your favorite editor or IDE (such as Qt Creator) and create your application or load a Qt example. Then run &lt;code&gt;qmake&lt;/code&gt; and &lt;code&gt;nmake/jom&lt;/code&gt; to build your application.</source>
          <target state="translated">다른 Qt 애플리케이션과 마찬가지로 &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; 용 애플리케이션을 개발할 수 있습니다 . 자주 사용하는 편집기 또는 IDE (예 : Qt Creator)를 사용하고 응용 프로그램을 만들거나 Qt 예제를로드하십시오. 그런 다음 &lt;code&gt;qmake&lt;/code&gt; 및 &lt;code&gt;nmake/jom&lt;/code&gt; 을 실행 하여 애플리케이션을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="79d4b4961e3a8bfe10087d77e5edcfe6ae1de5ef" translate="yes" xml:space="preserve">
          <source>You can develop applications for UWP just as any other Qt applications. Use your favorite editor or IDE (such as Qt Creator) and create your application or load a Qt example. Then run &lt;code&gt;qmake&lt;/code&gt; and &lt;code&gt;nmake/jom&lt;/code&gt; to build your application.</source>
          <target state="translated">You can develop applications for UWP just as any other Qt applications. Use your favorite editor or IDE (such as Qt Creator) and create your application or load a Qt example. Then run &lt;code&gt;qmake&lt;/code&gt; and &lt;code&gt;nmake/jom&lt;/code&gt; to build your application.</target>
        </trans-unit>
        <trans-unit id="8a9f407e0ee144396544745de86fbe1a0a719f76" translate="yes" xml:space="preserve">
          <source>You can disable the workaround by setting the &lt;code&gt;QT_ANDROID_DISABLE_GLYPH_CACHE_WORKAROUND&lt;/code&gt; environment variable to</source>
          <target state="translated">You can disable the workaround by setting the &lt;code&gt;QT_ANDROID_DISABLE_GLYPH_CACHE_WORKAROUND&lt;/code&gt; environment variable to</target>
        </trans-unit>
        <trans-unit id="c340cc2579d4b0afc54c8aa2e461b156b99f1760" translate="yes" xml:space="preserve">
          <source>You can disable the workaround by setting the &lt;code&gt;QT_ANDROID_DISABLE_GLYPH_CACHE_WORKAROUND&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;. You should do so only after verifying that text appears correctly on all targeted devices.</source>
          <target state="translated">&lt;code&gt;QT_ANDROID_DISABLE_GLYPH_CACHE_WORKAROUND&lt;/code&gt; 환경 변수를 &lt;code&gt;1&lt;/code&gt; 로 설정하여 임시 해결책을 비활성화 할 수 있습니다 . 모든 대상 장치에서 텍스트가 올바르게 나타나는지 확인한 후에 만 ​​수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b70aa67f30c45d022d1ea8d0526be3228755aa52" translate="yes" xml:space="preserve">
          <source>You can disable this constructor by defining &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; when you compile your applications.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 를 정의 하여이 생성자를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b782a21efcc3961e99ef872172df243bdf3f8f4" translate="yes" xml:space="preserve">
          <source>You can disable this constructor by defining &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; when you compile your applications. This can be useful if you want to ensure that all user-visible strings go through &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;(), for example.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 를 정의 하여이 생성자를 비활성화 할 수 있습니다 . 예를 들어, 사용자가 볼 수있는 모든 문자열이 &lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt; ()을 통과하도록하려면 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="655ac5df2fba1455a6e2024db82b692a418b8c06" translate="yes" xml:space="preserve">
          <source>You can disable this function by defining &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; when you compile your applications. This can be useful if you want to ensure that all user-visible strings go through &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;(), for example.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 를 정의 하여이 기능을 사용하지 않을 수 있습니다 . 예를 들어, 사용자가 볼 수있는 모든 문자열이 &lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt; ()을 통과하도록하려면 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a62ea86a32a3875b8280f86a1076987edf289cf" translate="yes" xml:space="preserve">
          <source>You can disable this function by defining &lt;code&gt;QT_NO_CAST_TO_ASCII&lt;/code&gt; when you compile your applications. You then need to call &lt;a href=&quot;qstring#toUtf8&quot;&gt;QString::toUtf8&lt;/a&gt;() (or &lt;a href=&quot;qstring#toLatin1&quot;&gt;QString::toLatin1&lt;/a&gt;() or &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;QString::toLocal8Bit&lt;/a&gt;()) explicitly if you want to convert the data to &lt;code&gt;const char *&lt;/code&gt;.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_TO_ASCII&lt;/code&gt; 를 정의 하여이 기능을 사용하지 않을 수 있습니다 . 그런 다음 데이터를 &lt;code&gt;const char *&lt;/code&gt; 로 변환하려면 명시 적으로 &lt;a href=&quot;qstring#toUtf8&quot;&gt;QString :: toUtf8&lt;/a&gt; () (또는 &lt;a href=&quot;qstring#toLatin1&quot;&gt;QString :: toLatin1&lt;/a&gt; () 또는 &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;QString :: toLocal8Bit&lt;/a&gt; ()) 을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cca5fa33c277e170ba30b3f220205f25f4854972" translate="yes" xml:space="preserve">
          <source>You can disable this operator by defining &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; or &lt;code&gt;QT_RESTRICTED_CAST_FROM_ASCII&lt;/code&gt; when you compile your applications. This can be useful if you want to ensure that all user-visible strings go through &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;(), for example.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 또는 &lt;code&gt;QT_RESTRICTED_CAST_FROM_ASCII&lt;/code&gt; 를 정의 하여이 연산자를 사용하지 않을 수 있습니다 . 예를 들어, 사용자가 볼 수있는 모든 문자열이 &lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt; ()을 통과하도록하려면 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e13de9983d70a45392e98cb44cd7a7d07ecf6e2d" translate="yes" xml:space="preserve">
          <source>You can disable this operator by defining &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; when you compile your applications.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 를 정의 하여이 연산자를 사용하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="be53c328125fbf55aef9e57cfadf8c455ef4425a" translate="yes" xml:space="preserve">
          <source>You can disable this operator by defining &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; when you compile your applications. This can be useful if you want to ensure that all user-visible strings go through &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;(), for example.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 를 정의 하여이 연산자를 사용하지 않을 수 있습니다 . 예를 들어, 사용자가 볼 수있는 모든 문자열이 &lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt; ()을 통과하도록하려면 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17acb1630204a6c07628881f7b722f617ed4161e" translate="yes" xml:space="preserve">
          <source>You can disable this operator by defining &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; when you compile your applications. You then need to call &lt;a href=&quot;qstring#fromUtf8&quot;&gt;QString::fromUtf8&lt;/a&gt;(), &lt;a href=&quot;qstring#fromLatin1&quot;&gt;QString::fromLatin1&lt;/a&gt;(), or &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString::fromLocal8Bit&lt;/a&gt;() explicitly if you want to convert the byte array to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; before doing the comparison.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; 를 정의 하여이 연산자를 사용하지 않을 수 있습니다 . 그런 다음 비교하기 전에 바이트 배열을 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 으로 변환하려면 &lt;a href=&quot;qstring#fromUtf8&quot;&gt;QString :: fromUtf8&lt;/a&gt; (), &lt;a href=&quot;qstring#fromLatin1&quot;&gt;QString :: fromLatin1&lt;/a&gt; () 또는 &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString :: fromLocal8Bit&lt;/a&gt; ()를 명시 적으로 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f45b617a893384b0c81a0e3b6904da8ca6cd5fd" translate="yes" xml:space="preserve">
          <source>You can disable this overload by defining &lt;code&gt;QT_NO_PROCESS_COMBINED_ARGUMENT_START&lt;/code&gt; when you compile your applications. This can be useful if you want to ensure that you are not splitting arguments unintentionally, for example. In virtually all cases, using the other overload is the preferred method.</source>
          <target state="translated">애플리케이션을 컴파일 할 때 &lt;code&gt;QT_NO_PROCESS_COMBINED_ARGUMENT_START&lt;/code&gt; 를 정의 하여이 과부하를 비활성화 할 수 있습니다 . 예를 들어 인수를 실수로 분할하지 않도록하려면이 방법이 유용 할 수 있습니다. 사실상 모든 경우에 다른 과부하를 사용하는 것이 선호되는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="4ec8aa9bcdca63995eb1f6068f6834165271a65f" translate="yes" xml:space="preserve">
          <source>You can discover all of this information at runtime too. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsensors-sensor-explorer-example.html#&quot;&gt;sensor_explorer&lt;/a&gt; example shows you information about available sensors.</source>
          <target state="translated">런타임에도이 정보를 모두 찾을 수 있습니다. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsensors-sensor-explorer-example.html#&quot;&gt;sensor_explorer의&lt;/a&gt; 사용 가능한 센서에 대한 예를 보여줍니다은 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2e3694fd72083161b851da727ebb53d9b57bc276" translate="yes" xml:space="preserve">
          <source>You can discover all of this information at runtime too. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-sensor-explorer-example.html&quot;&gt;sensor_explorer&lt;/a&gt; example shows you information about available sensors.</source>
          <target state="translated">You can discover all of this information at runtime too. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-sensor-explorer-example.html&quot;&gt;sensor_explorer&lt;/a&gt; example shows you information about available sensors.</target>
        </trans-unit>
        <trans-unit id="c26e5c9050c9c943d67d5bf870c4b9f080f5c989" translate="yes" xml:space="preserve">
          <source>You can display all of the available objects in a category by clicking on the handle next to the category label. When in &lt;a href=&quot;designer-widget-mode&quot;&gt;Widget Editing Mode&lt;/a&gt;, you can add objects to a form by dragging the appropriate items from the widget box onto the form, and dropping them in the required locations.</source>
          <target state="translated">You can display all of the available objects in a category by clicking on the handle next to the category label. When in &lt;a href=&quot;designer-widget-mode&quot;&gt;Widget Editing Mode&lt;/a&gt;, you can add objects to a form by dragging the appropriate items from the widget box onto the form, and dropping them in the required locations.</target>
        </trans-unit>
        <trans-unit id="6332251bed1418cff9b50e436ec690bcee278c1d" translate="yes" xml:space="preserve">
          <source>You can display all of the available objects in a category by clicking on the handle next to the category label. When in &lt;a href=&quot;designer-widget-mode#&quot;&gt;Widget Editing Mode&lt;/a&gt;, you can add objects to a form by dragging the appropriate items from the widget box onto the form, and dropping them in the required locations.</source>
          <target state="translated">범주 레이블 옆에있는 핸들을 클릭하여 범주에서 사용 가능한 모든 개체를 표시 할 수 있습니다. 경우에 &lt;a href=&quot;designer-widget-mode#&quot;&gt;위젯 편집 모드&lt;/a&gt; , 폼에 위젯 상자에서 적절한 항목을 드래그하여 필요한 위치에 놓아 폼에 개체를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45fa89ee409210859cd37edf22b01a492b1e1899" translate="yes" xml:space="preserve">
          <source>You can do this by first introducing this line</source>
          <target state="translated">먼저이 줄을 소개하면됩니다</target>
        </trans-unit>
        <trans-unit id="193d4e085157430e7c393f2a7293bc889813cdca" translate="yes" xml:space="preserve">
          <source>You can download the Qt 5 installers and source packages from the &lt;a href=&quot;http://qt.io/download&quot;&gt;Downloads&lt;/a&gt; page. For more information, visit the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">You can download the Qt 5 installers and source packages from the &lt;a href=&quot;http://qt.io/download&quot;&gt;Downloads&lt;/a&gt; page. For more information, visit the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</target>
        </trans-unit>
        <trans-unit id="342707da85b9587161ad6c37354c2cb988b57e6d" translate="yes" xml:space="preserve">
          <source>You can download the Qt 5 installers and source packages from the &lt;a href=&quot;http://qt.io/download#&quot;&gt;Downloads&lt;/a&gt; page. For more information, visit the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">&lt;a href=&quot;http://qt.io/download#&quot;&gt;다운로드&lt;/a&gt; 페이지 에서 Qt 5 설치 프로그램 및 소스 패키지를 다운로드 할 수 있습니다 . 자세한 내용 &lt;a href=&quot;gettingstarted#&quot;&gt;은 Qt 시작하기&lt;/a&gt; 페이지를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="69f3632c5628b33569a51ecd03c1004b1d3e51f3" translate="yes" xml:space="preserve">
          <source>You can download the Qt 5 installers and sources from the &lt;a href=&quot;http://qt.io/download&quot;&gt;Downloads&lt;/a&gt; page. For more information, visit the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">You can download the Qt 5 installers and sources from the &lt;a href=&quot;http://qt.io/download&quot;&gt;Downloads&lt;/a&gt; page. For more information, visit the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</target>
        </trans-unit>
        <trans-unit id="20b7b2680be91819b64e4ffea2ebd785ab9b6fdd" translate="yes" xml:space="preserve">
          <source>You can download the Qt 5 installers and sources from the &lt;a href=&quot;http://qt.io/download#&quot;&gt;Downloads&lt;/a&gt; page. For more information, visit the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">&lt;a href=&quot;http://qt.io/download#&quot;&gt;다운로드&lt;/a&gt; 페이지 에서 Qt 5 설치 프로그램 및 소스를 다운로드 할 수 있습니다 . 자세한 내용 &lt;a href=&quot;gettingstarted#&quot;&gt;은 Qt 시작하기&lt;/a&gt; 페이지를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="3a91d1458bf15abad0f43ea8b9179176d6ed71bb" translate="yes" xml:space="preserve">
          <source>You can download the Qt 5 installers from the &lt;a href=&quot;http://qt.io/download&quot;&gt;Downloads&lt;/a&gt; page. For more information, see &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt;.</source>
          <target state="translated">You can download the Qt 5 installers from the &lt;a href=&quot;http://qt.io/download&quot;&gt;Downloads&lt;/a&gt; page. For more information, see &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="95d3a9c35e6f34a195c2f2bc349fb8c1542328c5" translate="yes" xml:space="preserve">
          <source>You can download the Qt 5 installers from the &lt;a href=&quot;http://qt.io/download#&quot;&gt;Downloads&lt;/a&gt; page. For more information, see &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://qt.io/download#&quot;&gt;다운로드&lt;/a&gt; 페이지 에서 Qt 5 설치 프로그램을 다운로드 할 수 있습니다 . 자세한 내용 &lt;a href=&quot;gettingstarted#&quot;&gt;은 Qt 시작하기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60b048f917e049ce7df4972ef22ec26890be389c" translate="yes" xml:space="preserve">
          <source>You can either create a new &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; and reimplement the &lt;a href=&quot;qextensionfactory#createExtension&quot;&gt;QExtensionFactory::createExtension&lt;/a&gt;() function. For example:</source>
          <target state="translated">새 &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; 를 작성 하고 &lt;a href=&quot;qextensionfactory#createExtension&quot;&gt;QExtensionFactory :: createExtension&lt;/a&gt; () 함수를 다시 구현할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb5a6f6611eaff68939f365add513a8b2f955f1f" translate="yes" xml:space="preserve">
          <source>You can either create a new &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; and reimplement the &lt;a href=&quot;qextensionfactory#createExtension&quot;&gt;QExtensionFactory::createExtension&lt;/a&gt;() function:</source>
          <target state="translated">새 &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; 를 작성 하고 &lt;a href=&quot;qextensionfactory#createExtension&quot;&gt;QExtensionFactory :: createExtension&lt;/a&gt; () 함수를 다시 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0915a57bd426961f802a1a5e2b519b354dfe7bc1" translate="yes" xml:space="preserve">
          <source>You can either create a new QExtensionFactory and reimplement the &lt;a href=&quot;qextensionfactory#createExtension&quot;&gt;QExtensionFactory::createExtension&lt;/a&gt;() function. For example:</source>
          <target state="translated">You can either create a new QExtensionFactory and reimplement the &lt;a href=&quot;qextensionfactory#createExtension&quot;&gt;QExtensionFactory::createExtension&lt;/a&gt;() function. For example:</target>
        </trans-unit>
        <trans-unit id="08497d416d81d10ab1f246d84dda8dc5e11112d2" translate="yes" xml:space="preserve">
          <source>You can either use the DB-Library supplied by Microsoft or the Sybase Open Client (&lt;a href=&quot;https://support.sap.com&quot;&gt;https://support.sap.com&lt;/a&gt;). Configure will try to find NTWDBLIB.LIB to build the plugin:</source>
          <target state="translated">Microsoft 또는 Sybase Open Client ( &lt;a href=&quot;https://support.sap.com&quot;&gt;https://support.sap.com&lt;/a&gt; ) 에서 제공 한 DB-Library를 사용할 수 있습니다 . Configure는 플러그인을 빌드하기 위해 NTWDBLIB.LIB를 찾으려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="4f7f1b945ab32ff73c4872230e3cde9c091a56d2" translate="yes" xml:space="preserve">
          <source>You can enable clipping by setting the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemClipsToShape&lt;/a&gt; or &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemClipsChildrenToShape&lt;/a&gt; flags. The item's clip path is calculated by intersecting all clipping ancestors' shapes. If the item sets &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemClipsToShape&lt;/a&gt;, the final clip is intersected with the item's own shape.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemClipsToShape&lt;/a&gt; 또는 &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemClipsChildrenToShape&lt;/a&gt; 플래그를 설정하여 클리핑을 사용할 수 있습니다 . 항목의 클립 경로는 모든 클리핑 조상의 모양을 교차시켜 계산됩니다. 항목이 &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemClipsToShape를&lt;/a&gt; 설정 하면 최종 클립은 항목의 자체 모양과 교차됩니다.</target>
        </trans-unit>
        <trans-unit id="01a43b52db653157e75e9c5a767f9c167a720e38" translate="yes" xml:space="preserve">
          <source>You can enable layout mirroring for a particular &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;:</source>
          <target state="translated">특정 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목에&lt;/a&gt; 대해 레이아웃 미러링을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b176cbf4bb241ae04730bd9d7c7233660c30428" translate="yes" xml:space="preserve">
          <source>You can enter &quot;What's This?&quot; mode programmatically with &lt;a href=&quot;qwhatsthis#enterWhatsThisMode&quot;&gt;enterWhatsThisMode&lt;/a&gt;(), check the mode with &lt;a href=&quot;qwhatsthis#inWhatsThisMode&quot;&gt;inWhatsThisMode&lt;/a&gt;(), and return to normal mode with &lt;a href=&quot;qwhatsthis#leaveWhatsThisMode&quot;&gt;leaveWhatsThisMode&lt;/a&gt;().</source>
          <target state="translated">&quot;What 's This?&quot;를 입력 할 수 있습니다. &lt;a href=&quot;qwhatsthis#enterWhatsThisMode&quot;&gt;enterWhatsThisMode&lt;/a&gt; ()를 사용 하여 프로그래밍 방식으로 모드에서 &lt;a href=&quot;qwhatsthis#inWhatsThisMode&quot;&gt;inWhatsThisMode로&lt;/a&gt; 모드를 확인하십시오. (), 및 정상 모드로 돌아 &lt;a href=&quot;qwhatsthis#leaveWhatsThisMode&quot;&gt;leaveWhatsThisMode&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="fefbceee99f62497031283759451c5114c239850" translate="yes" xml:space="preserve">
          <source>You can even change the order of the wizard buttons to any arbitrary order using &lt;a href=&quot;qwizard#setButtonLayout&quot;&gt;setButtonLayout&lt;/a&gt;(), and you can add up to three custom buttons (e.g., a &lt;b&gt;Print&lt;/b&gt; button) to the button row. This is achieved by calling &lt;a href=&quot;qwizard#setButton&quot;&gt;setButton&lt;/a&gt;() or &lt;a href=&quot;qwizard#setButtonText&quot;&gt;setButtonText&lt;/a&gt;() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt;, or &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt; to set up the button, and by enabling the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt;, or &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options. Whenever the user clicks a custom button, &lt;a href=&quot;qwizard#customButtonClicked&quot;&gt;customButtonClicked&lt;/a&gt;() is emitted. For example:</source>
          <target state="translated">&lt;a href=&quot;qwizard#setButtonLayout&quot;&gt;setButtonLayout&lt;/a&gt; ()을 사용하여 마법사 버튼의 순서를 임의의 순서로 변경할 수 있으며 버튼 행 에 최대 3 개의 사용자 정의 버튼 (예 : &lt;b&gt;인쇄&lt;/b&gt; 버튼)을 추가 할 수 있습니다 . 버튼을 설정하기 위해 &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt; , &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt; 또는 &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt; 과 함께 &lt;a href=&quot;qwizard#setButton&quot;&gt;setButton&lt;/a&gt; () 또는 &lt;a href=&quot;qwizard#setButtonText&quot;&gt;setButtonText&lt;/a&gt; ()를 호출 하고 &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; , &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt; 또는 &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; 옵션 을 활성화하면 됩니다. 사용자가 맞춤 검색 버튼을 클릭 할 때마다&lt;a href=&quot;qwizard#customButtonClicked&quot;&gt; customButtonClicked&lt;/a&gt; ()가 발생합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7e51bb3d45d30673dc1756f13b7d25bc9b186578" translate="yes" xml:space="preserve">
          <source>You can even store &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt; and &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt; values in a variant, so you can easily construct arbitrarily complex data structures of arbitrary types. This is very powerful and versatile, but may prove less memory and speed efficient than storing specific types in standard data structures.</source>
          <target state="translated">&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;gt; 및 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString을&lt;/a&gt; 저장할 수도 있습니다 .&lt;a href=&quot;qvariant&quot;&gt; QVariant&lt;/a&gt; &amp;gt; 변형의 값, 당신은 쉽게 임의의 종류의 임의의 복잡한 데이터 구조를 구성 할 수 있습니다. 이것은 매우 강력하고 다목적이지만 표준 데이터 구조에 특정 유형을 저장하는 것보다 메모리와 속도가 덜 효과적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2db274604ab6cff29b0a53d06d6b96f2108efba0" translate="yes" xml:space="preserve">
          <source>You can even store &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;QVariant&amp;gt; and &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, QVariant&amp;gt; values in a variant, so you can easily construct arbitrarily complex data structures of arbitrary types. This is very powerful and versatile, but may prove less memory and speed efficient than storing specific types in standard data structures.</source>
          <target state="translated">You can even store &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;QVariant&amp;gt; and &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, QVariant&amp;gt; values in a variant, so you can easily construct arbitrarily complex data structures of arbitrary types. This is very powerful and versatile, but may prove less memory and speed efficient than storing specific types in standard data structures.</target>
        </trans-unit>
        <trans-unit id="c6e8602e56188c2f469e5fd91155df67edd0a918" translate="yes" xml:space="preserve">
          <source>You can examine the contents of the element that was inserted through the cursor interface.</source>
          <target state="translated">커서 인터페이스를 통해 삽입 된 요소의 내용을 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="743d1180470ab7ee2935120f0238fa816024e4c0" translate="yes" xml:space="preserve">
          <source>You can expect the default values listed in &lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest::Attribute&lt;/a&gt; to be applied to the values returned by this function.</source>
          <target state="translated">&lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest :: Attribute&lt;/a&gt; 에 나열된 기본값 이이 함수가 리턴 한 값에 적용될 것으로 예상 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94477ef9e012d30ddae118a7d9dbd6833777cb71" translate="yes" xml:space="preserve">
          <source>You can explicitly scroll to any position on the scene by using the scroll bars, or by calling &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt;(). By passing a point to &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt;(), &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; will scroll its viewport to ensure that the point is centered in the view. An overload is provided for scrolling to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, in which case &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; will see to that the center of the item is centered in the view. If all you want is to ensure that a certain area is visible, (but not necessarily centered,) you can call &lt;a href=&quot;qgraphicsview#ensureVisible&quot;&gt;ensureVisible&lt;/a&gt;() instead.</source>
          <target state="translated">스크롤 막대를 사용하거나 &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt; () 을 호출하여 장면의 임의의 위치로 명시 적으로 스크롤 할 수 있습니다 . 점을 &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt; ()으로 전달하면 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 는 해당 점이 뷰의 중앙에 오도록 뷰포트를 스크롤합니다. &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem으로&lt;/a&gt; 스크롤하기 위해 과부하가 제공되며 ,이 경우 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 는 항목의 중심이 뷰의 중앙에 있음을 알 수 있습니다. 원하는 부분이 특정 영역이 보이도록하는 것이지만 반드시 중앙에 위치 할 필요는 없습니다.&lt;a href=&quot;qgraphicsview#ensureVisible&quot;&gt; 없음&lt;/a&gt; ) 대신 ensureVisible ()을 .</target>
        </trans-unit>
        <trans-unit id="46e354d566c7d6678b9e7f4df9657a75a82d4fc3" translate="yes" xml:space="preserve">
          <source>You can explicitly scroll to any position on the scene by using the scroll bars, or by calling &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt;(). By passing a point to &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt;(), QGraphicsView will scroll its viewport to ensure that the point is centered in the view. An overload is provided for scrolling to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, in which case QGraphicsView will see to that the center of the item is centered in the view. If all you want is to ensure that a certain area is visible, (but not necessarily centered,) you can call &lt;a href=&quot;qgraphicsview#ensureVisible&quot;&gt;ensureVisible&lt;/a&gt;() instead.</source>
          <target state="translated">You can explicitly scroll to any position on the scene by using the scroll bars, or by calling &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt;(). By passing a point to &lt;a href=&quot;qgraphicsview#centerOn&quot;&gt;centerOn&lt;/a&gt;(), QGraphicsView will scroll its viewport to ensure that the point is centered in the view. An overload is provided for scrolling to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, in which case QGraphicsView will see to that the center of the item is centered in the view. If all you want is to ensure that a certain area is visible, (but not necessarily centered,) you can call &lt;a href=&quot;qgraphicsview#ensureVisible&quot;&gt;ensureVisible&lt;/a&gt;() instead.</target>
        </trans-unit>
        <trans-unit id="1bea389ee5e53821cbe8e4cae9932f393760bd58" translate="yes" xml:space="preserve">
          <source>You can explicitly set the look to use using &lt;a href=&quot;qwizard#wizardStyle-prop&quot;&gt;setWizardStyle&lt;/a&gt;() (e.g., if you want the same look on all platforms).</source>
          <target state="translated">&lt;a href=&quot;qwizard#wizardStyle-prop&quot;&gt;setWizardStyle&lt;/a&gt; 을 사용하여 룩을 명시 적으로 설정할 수 있습니다 () (예 : 모든 플랫폼에서 동일한 룩을 원할 경우).</target>
        </trans-unit>
        <trans-unit id="71680afa8fe58075c56ab22e52cba49299baef2a" translate="yes" xml:space="preserve">
          <source>You can explicitly tell the moc not to parse parts of a header file. &lt;code&gt;moc&lt;/code&gt; defines the preprocessor symbol &lt;code&gt;Q_MOC_RUN&lt;/code&gt;. Any code surrounded by</source>
          <target state="translated">헤더 파일의 일부를 구문 분석하지 않도록 moc에 명시 적으로 지시 할 수 있습니다. &lt;code&gt;moc&lt;/code&gt; 는 전 처리기 기호 &lt;code&gt;Q_MOC_RUN&lt;/code&gt; 을 정의합니다 . 모든 코드는</target>
        </trans-unit>
        <trans-unit id="fc0841c1bd9475f80738f9a67467476beb0c267d" translate="yes" xml:space="preserve">
          <source>You can export lights of any type from Blender to use in Qt Quick 3D.</source>
          <target state="translated">You can export lights of any type from Blender to use in Qt Quick 3D.</target>
        </trans-unit>
        <trans-unit id="7fdd7ae2e1d3c575e27ef0c140aeb55a6d917b74" translate="yes" xml:space="preserve">
          <source>You can export perspective and orthographic cameras from Blender to use in Qt Quick 3D.</source>
          <target state="translated">You can export perspective and orthographic cameras from Blender to use in Qt Quick 3D.</target>
        </trans-unit>
        <trans-unit id="21b5b99f6c0101d5ea6f57d41d985e50be00d452" translate="yes" xml:space="preserve">
          <source>You can filter events for any other item by installing event filters. This functionality is separate from Qt's regular event filters (see &lt;a href=&quot;qobject#installEventFilter&quot;&gt;QObject::installEventFilter&lt;/a&gt;()), which only work on subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. After installing your item as an event filter for another item by calling &lt;a href=&quot;qgraphicsitem#installSceneEventFilter&quot;&gt;installSceneEventFilter&lt;/a&gt;(), the filtered events will be received by the virtual function &lt;a href=&quot;qgraphicsitem#sceneEventFilter&quot;&gt;sceneEventFilter&lt;/a&gt;(). You can remove item event filters by calling &lt;a href=&quot;qgraphicsitem#removeSceneEventFilter&quot;&gt;removeSceneEventFilter&lt;/a&gt;().</source>
          <target state="translated">이벤트 필터를 설치하여 다른 항목에 대한 이벤트를 필터링 할 수 있습니다. 이 기능은 Qt의 일반 이벤트 필터 ( &lt;a href=&quot;qobject#installEventFilter&quot;&gt;QObject :: installEventFilter&lt;/a&gt; () 참조)와 별개 로 &lt;a href=&quot;qobject&quot;&gt;QObject의&lt;/a&gt; 서브 클래스에서만 작동 합니다 . &lt;a href=&quot;qgraphicsitem#installSceneEventFilter&quot;&gt;installSceneEventFilter&lt;/a&gt; () 를 호출하여 다른 항목의 이벤트 필터로 항목을 설치 한 후 필터링 된 이벤트는 가상 함수 &lt;a href=&quot;qgraphicsitem#sceneEventFilter&quot;&gt;sceneEventFilter&lt;/a&gt; ()에 의해 수신됩니다 . &lt;a href=&quot;qgraphicsitem#removeSceneEventFilter&quot;&gt;removeSceneEventFilter&lt;/a&gt; () 를 호출하여 항목 이벤트 필터를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b4e31b628ea9c971340bb05343af8ba6442fe24" translate="yes" xml:space="preserve">
          <source>You can filter the images in an image directory using the &lt;a href=&quot;#images-fileextensions&quot;&gt;&lt;code&gt;images.fileextensions&lt;/code&gt;&lt;/a&gt; variable. The general idea behind the &lt;a href=&quot;#images-fileextensions&quot;&gt;&lt;code&gt;images.fileextensions&lt;/code&gt;&lt;/a&gt; variable is to enable different image format for different output format.</source>
          <target state="translated">&lt;a href=&quot;#images-fileextensions&quot;&gt; &lt;code&gt;images.fileextensions&lt;/code&gt; &lt;/a&gt; 변수를 사용하여 이미지 디렉토리에서 이미지를 필터링 할 수 있습니다 . 뒤에서 일반적인 생각 &lt;a href=&quot;#images-fileextensions&quot;&gt; &lt;code&gt;images.fileextensions&lt;/code&gt; &lt;/a&gt; 변수 은 다른 출력 형식에 대해 다른 이미지 형식을 활성화하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3a9734a8e4c2504489f9d5c0ca5bd53fe7cfcdde" translate="yes" xml:space="preserve">
          <source>You can filter the images in an image directory using the &lt;a href=&quot;22-qdoc-configuration-generalvariables#images-fileextensions&quot;&gt;&lt;code&gt;images.fileextensions&lt;/code&gt;&lt;/a&gt; variable. The general idea behind the &lt;a href=&quot;22-qdoc-configuration-generalvariables#images-fileextensions&quot;&gt;&lt;code&gt;images.fileextensions&lt;/code&gt;&lt;/a&gt; variable is to enable different image format for different output format.</source>
          <target state="translated">You can filter the images in an image directory using the &lt;a href=&quot;22-qdoc-configuration-generalvariables#images-fileextensions&quot;&gt; &lt;code&gt;images.fileextensions&lt;/code&gt; &lt;/a&gt; variable. The general idea behind the &lt;a href=&quot;22-qdoc-configuration-generalvariables#images-fileextensions&quot;&gt; &lt;code&gt;images.fileextensions&lt;/code&gt; &lt;/a&gt; variable is to enable different image format for different output format.</target>
        </trans-unit>
        <trans-unit id="eb7b6cc22df3903654af6c06f4fb64a5df4863bc" translate="yes" xml:space="preserve">
          <source>You can find an object by name (and type) using &lt;a href=&quot;qobject#findChild&quot;&gt;findChild&lt;/a&gt;(). You can find a set of objects with &lt;a href=&quot;qobject#findChildren&quot;&gt;findChildren&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qobject#findChild&quot;&gt;findChild&lt;/a&gt; ()를 사용하여 이름 및 유형별로 객체를 찾을 수 있습니다 . &lt;a href=&quot;qobject#findChildren&quot;&gt;findChildren&lt;/a&gt; 으로 일련의 객체를 찾을 수 있습니다 ()을 .</target>
        </trans-unit>
        <trans-unit id="a27e4072df77d51a4f759620b4588659d0186387" translate="yes" xml:space="preserve">
          <source>You can find information about &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; on &lt;a href=&quot;http://www.sqlite.org&quot;&gt;http://www.sqlite.org&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.sqlite.org&quot;&gt;http://www.sqlite.org에서 &lt;/a&gt;&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 에 대한 정보를 찾을 수 있습니다 . .</target>
        </trans-unit>
        <trans-unit id="b86853c5b9d0bfcb1c7bf5f52a0ac52bb927ad9d" translate="yes" xml:space="preserve">
          <source>You can find information about &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; on &lt;a href=&quot;http://www.sqlite.org&quot;&gt;http://www.sqlite.org&lt;/a&gt;.</source>
          <target state="translated">You can find information about &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; on &lt;a href=&quot;http://www.sqlite.org&quot;&gt;http://www.sqlite.org&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="65cadf37cdd89a457daa526360ae18d0215c76f5" translate="yes" xml:space="preserve">
          <source>You can find information on how to set up and run Apple mobile device applications in Qt Creator's manual:</source>
          <target state="translated">Qt Creator 설명서에서 Apple 모바일 장치 응용 프로그램을 설정하고 실행하는 방법에 대한 정보를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f511af27f61478fc7a1cf5a9996b2ccc82c74608" translate="yes" xml:space="preserve">
          <source>You can find out the type of a node using &lt;a href=&quot;qdomnode#isAttr&quot;&gt;isAttr&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isCDATASection&quot;&gt;isCDATASection&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isDocumentFragment&quot;&gt;isDocumentFragment&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isDocument&quot;&gt;isDocument&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isDocumentType&quot;&gt;isDocumentType&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isElement&quot;&gt;isElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isEntityReference&quot;&gt;isEntityReference&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isText&quot;&gt;isText&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isEntity&quot;&gt;isEntity&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isNotation&quot;&gt;isNotation&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isProcessingInstruction&quot;&gt;isProcessingInstruction&lt;/a&gt;(), &lt;a href=&quot;qdomnode#isCharacterData&quot;&gt;isCharacterData&lt;/a&gt;() and &lt;a href=&quot;qdomnode#isComment&quot;&gt;isComment&lt;/a&gt;().</source>
          <target state="translated">당신은 사용하여 노드의 종류를 확인 할 수 &lt;a href=&quot;qdomnode#isAttr&quot;&gt;isAttr&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isCDATASection&quot;&gt;isCDATASection&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isDocumentFragment&quot;&gt;isDocumentFragment&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isDocument&quot;&gt;isDocument&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isDocumentType&quot;&gt;isDocumentType&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isElement&quot;&gt;isElement&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isEntityReference&quot;&gt;isEntityReference&lt;/a&gt; () &lt;a href=&quot;qdomnode#isText&quot;&gt;ISTEXT&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isEntity&quot;&gt;isEntity&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isNotation&quot;&gt;isNotation을&lt;/a&gt; () &lt;a href=&quot;qdomnode#isProcessingInstruction&quot;&gt;isProcessingInstruction&lt;/a&gt; (), &lt;a href=&quot;qdomnode#isCharacterData&quot;&gt;isCharacterData&lt;/a&gt; () 및 &lt;a href=&quot;qdomnode#isComment&quot;&gt;isComment&lt;/a&gt; ()입니다.</target>
        </trans-unit>
        <trans-unit id="be91d1b09ccd4739e11393f7132dd5b94de20ae9" translate="yes" xml:space="preserve">
          <source>You can find the following source code in the &lt;code&gt;examples/qmake/precompile&lt;/code&gt; directory in the Qt distribution:</source>
          <target state="translated">&lt;code&gt;examples/qmake/precompile&lt;/code&gt; 에서 다음 소스 코드를 찾을 수 있습니다.Qt 배포판 디렉토리에서 .</target>
        </trans-unit>
        <trans-unit id="efd719b1d92debe8198ac6a6121364dceab07c61" translate="yes" xml:space="preserve">
          <source>You can find the native, platform specific, key used by the operating system by calling &lt;a href=&quot;qsharedmemory#nativeKey&quot;&gt;nativeKey&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsharedmemory#nativeKey&quot;&gt;nativeKey&lt;/a&gt; 를 호출하여 운영 체제에서 사용하는 기본 플랫폼 별 키를 찾을 수 있습니다. () .</target>
        </trans-unit>
        <trans-unit id="2dc45a09fdbc546002ffeee7c5f01237dfdb7fc4" translate="yes" xml:space="preserve">
          <source>You can form hierarchical keys using the '/' character as a separator, similar to Unix file paths. For example:</source>
          <target state="translated">Unix 파일 경로와 유사한 '/'문자를 구분 기호로 사용하여 계층 키를 구성 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86092ad278cb722cdb5844912e024fd95e1e5583" translate="yes" xml:space="preserve">
          <source>You can get a &lt;a href=&quot;qradiodata&quot;&gt;QRadioData&lt;/a&gt; instance fromt the &lt;a href=&quot;qradiotuner#radioData-prop&quot;&gt;radioData&lt;/a&gt; property from a &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; instance.</source>
          <target state="translated">당신은 얻을 수 &lt;a href=&quot;qradiodata&quot;&gt;QRadioData의&lt;/a&gt; fromt 예를 &lt;a href=&quot;qradiotuner#radioData-prop&quot;&gt;radioData의&lt;/a&gt; A로부터 속성을 &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="042eaf6f43cc626b20393aff71abbcf501425571" translate="yes" xml:space="preserve">
          <source>You can get a QRadioData instance fromt the &lt;a href=&quot;qradiotuner#radioData-prop&quot;&gt;radioData&lt;/a&gt; property from a &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; instance.</source>
          <target state="translated">You can get a QRadioData instance fromt the &lt;a href=&quot;qradiotuner#radioData-prop&quot;&gt;radioData&lt;/a&gt; property from a &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; instance.</target>
        </trans-unit>
        <trans-unit id="fc581ea62e4a9c41309cd0802ec870ce390cab4a" translate="yes" xml:space="preserve">
          <source>You can get a list of all the decendents of an element which have a specified tag name with &lt;a href=&quot;qdomelement#elementsByTagName&quot;&gt;elementsByTagName&lt;/a&gt;() or &lt;a href=&quot;qdomelement#elementsByTagNameNS&quot;&gt;elementsByTagNameNS&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdomelement#elementsByTagName&quot;&gt;elementsByTagName&lt;/a&gt; () 또는 &lt;a href=&quot;qdomelement#elementsByTagNameNS&quot;&gt;elementsByTagNameNS&lt;/a&gt; 로 지정된 태그 이름을 가진 요소 의 모든 종속 항목 목록을 가져올 수 있습니다. () .</target>
        </trans-unit>
        <trans-unit id="27bf1365e9cd96f7167a61d7d69894b5644c4d10" translate="yes" xml:space="preserve">
          <source>You can get a particular node from the list with &lt;a href=&quot;qdomnodelist#item&quot;&gt;item&lt;/a&gt;(). The number of items in the list is returned by &lt;a href=&quot;qdomnodelist#length&quot;&gt;length&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist#item&quot;&gt;항목&lt;/a&gt; () 을 사용하여 목록에서 특정 노드를 얻을 수 있습니다 . 목록의 항목 수는 &lt;a href=&quot;qdomnodelist#length&quot;&gt;길이&lt;/a&gt; 로 반환됩니다. () .</target>
        </trans-unit>
        <trans-unit id="5b481b93af9fd37dfe026c942051ae37f6c6f434" translate="yes" xml:space="preserve">
          <source>You can get a setting's value back using &lt;a href=&quot;qsettings#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">다음을 사용하여 설정 값을 다시 얻을 수있는 &lt;a href=&quot;qsettings#value&quot;&gt;가치를&lt;/a&gt; ()를 .</target>
        </trans-unit>
        <trans-unit id="6610b51642a55e940a1e20625bc25b4711deb67b" translate="yes" xml:space="preserve">
          <source>You can get all available device IDs from &lt;a href=&quot;qml-qtmultimedia-qtmultimedia#availableCameras-prop&quot;&gt;QtMultimedia.availableCameras&lt;/a&gt;. If no value is provided or if set to an empty string, the system's default camera will be used.</source>
          <target state="translated">&lt;a href=&quot;qml-qtmultimedia-qtmultimedia#availableCameras-prop&quot;&gt;QtMultimedia&lt;/a&gt; 에서 사용 가능한 모든 장치 ID를 얻을 수 있습니다. . 값을 제공하지 않거나 빈 문자열로 설정하면 시스템의 기본 카메라가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="45c254ad19c2ceb6ca319dfc3024d270c7aea6a6" translate="yes" xml:space="preserve">
          <source>You can get information about the available serial ports using the &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; helper class, which allows an enumeration of all the serial ports in the system. This is useful to obtain the correct name of the serial port you want to use. You can pass an object of the helper class as an argument to the &lt;a href=&quot;qserialport#setPort&quot;&gt;setPort&lt;/a&gt;() or &lt;a href=&quot;qserialport#setPortName&quot;&gt;setPortName&lt;/a&gt;() methods to assign the desired serial device.</source>
          <target state="translated">시스템의 모든 직렬 포트를 열거 할 수있는 &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; 도우미 클래스를 사용하여 사용 가능한 직렬 포트에 대한 정보를 얻을 수 있습니다 . 이것은 사용하려는 직렬 포트의 올바른 이름을 얻는 데 유용합니다. 헬퍼 클래스의 오브젝트를 &lt;a href=&quot;qserialport#setPort&quot;&gt;setPort&lt;/a&gt; () 또는 &lt;a href=&quot;qserialport#setPortName&quot;&gt;setPortName&lt;/a&gt; () 메소드에 인수로 전달 하여 원하는 직렬 장치를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d44fbc8d4088ca7180c6eeefd02c5f3ea72a0958" translate="yes" xml:space="preserve">
          <source>You can get more information about the specific error by calling the &lt;a href=&quot;qregularexpression#errorString&quot;&gt;errorString&lt;/a&gt;() function; moreover, the &lt;a href=&quot;qregularexpression#patternErrorOffset&quot;&gt;patternErrorOffset&lt;/a&gt;() function will return the offset inside the pattern string</source>
          <target state="translated">&lt;a href=&quot;qregularexpression#errorString&quot;&gt;errorString&lt;/a&gt; () 함수를 호출하여 특정 오류에 대한 자세한 정보를 얻을 수 있습니다 . 또한 &lt;a href=&quot;qregularexpression#patternErrorOffset&quot;&gt;patternErrorOffset&lt;/a&gt; () 함수는 패턴 문자열 내부의 오프셋을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b251df5df3dab400dddd4e46a66f88b61f0d3705" translate="yes" xml:space="preserve">
          <source>You can give hints on how the symbols in the plugin are resolved. By default since Qt 5.7, &lt;a href=&quot;qlibrary#LoadHint-enum&quot;&gt;QLibrary::PreventUnloadHint&lt;/a&gt; is set.</source>
          <target state="translated">플러그인의 심볼이 어떻게 해결되는지 힌트를 줄 수 있습니다. Qt 5.7 이후 기본적으로 &lt;a href=&quot;qlibrary#LoadHint-enum&quot;&gt;QLibrary :: PreventUnloadHint&lt;/a&gt; 가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="d67823c0c56a9337167069e592a28c0720c48343" translate="yes" xml:space="preserve">
          <source>You can give some hints on how the symbols are resolved. Usually, the symbols are not resolved at load time, but resolved lazily, (that is, when &lt;a href=&quot;qlibrary#resolve&quot;&gt;resolve&lt;/a&gt;() is called). If you set the loadHints to &lt;a href=&quot;qlibrary#LoadHint-enum&quot;&gt;ResolveAllSymbolsHint&lt;/a&gt;, then all symbols will be resolved at load time if the platform supports it.</source>
          <target state="translated">심볼이 어떻게 해결되는지에 대한 힌트를 줄 수 있습니다. 일반적으로 심볼은로드 타임에 확인되지 않지만 느리게 (즉, &lt;a href=&quot;qlibrary#resolve&quot;&gt;resolve&lt;/a&gt; ()가 호출 될 때 ) 확인됩니다. loadHints를 &lt;a href=&quot;qlibrary#LoadHint-enum&quot;&gt;ResolveAllSymbolsHint로&lt;/a&gt; 설정 하면 플랫폼에서 지원하는 경우 모든 심볼이로드시 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="4a208573b9e71261d2161af0e73d5e8329897d8e" translate="yes" xml:space="preserve">
          <source>You can handle this signal in order to add the newly entered item to the model, for example:</source>
          <target state="translated">You can handle this signal in order to add the newly entered item to the model, for example:</target>
        </trans-unit>
        <trans-unit id="46c2b5f35d4ba875649c2322a03c3f7cf580cc7a" translate="yes" xml:space="preserve">
          <source>You can hide individual menu items by setting their visible property to &lt;code&gt;false&lt;/code&gt;. Hiding items does not affect the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#startAngle-prop&quot;&gt;startAngle&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#endAngle-prop&quot;&gt;endAngle&lt;/a&gt;; the remaining items will grow to consume the available space.</source>
          <target state="translated">visible 속성을 &lt;code&gt;false&lt;/code&gt; 로 설정하여 개별 메뉴 항목을 숨길 수 있습니다 . 항목을 숨기는 것은 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#startAngle-prop&quot;&gt;startAngle&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#endAngle-prop&quot;&gt;endAngle에&lt;/a&gt; 영향을 미치지 않습니다 . 남은 항목은 사용 가능한 공간을 소비하도록 커집니다.</target>
        </trans-unit>
        <trans-unit id="b5fee4f429750d5e233fb0527e5cbbb53ec03c4a" translate="yes" xml:space="preserve">
          <source>You can identify a section using the &lt;a href=&quot;qheaderview#logicalIndex&quot;&gt;logicalIndex&lt;/a&gt;() and &lt;a href=&quot;qheaderview#logicalIndexAt&quot;&gt;logicalIndexAt&lt;/a&gt;() functions, or by its index position, using the &lt;a href=&quot;qheaderview#visualIndex&quot;&gt;visualIndex&lt;/a&gt;() and &lt;a href=&quot;qheaderview#visualIndexAt&quot;&gt;visualIndexAt&lt;/a&gt;() functions. The visual index will change if a section is moved, but the logical index will not change.</source>
          <target state="translated">&lt;a href=&quot;qheaderview#logicalIndex&quot;&gt;logicalIndex&lt;/a&gt; () 및 &lt;a href=&quot;qheaderview#logicalIndexAt&quot;&gt;logicalIndexAt&lt;/a&gt; () 함수를 사용하거나 &lt;a href=&quot;qheaderview#visualIndex&quot;&gt;visualIndex&lt;/a&gt; () 및 &lt;a href=&quot;qheaderview#visualIndexAt&quot;&gt;visualIndexAt&lt;/a&gt; () 함수를 사용하여 색인 위치 로 섹션을 식별 할 수 있습니다 . 섹션이 이동하면 시각적 색인은 변경되지만 논리적 색인은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c2c84f2e2684f60fa0ed2742cccf66474b268d17" translate="yes" xml:space="preserve">
          <source>You can implement onAfterAnimating to do additional processing after each animation step.</source>
          <target state="translated">You can implement onAfterAnimating to do additional processing after each animation step.</target>
        </trans-unit>
        <trans-unit id="80ed69b9286c92e9b398abb4837a774bcbb70d00" translate="yes" xml:space="preserve">
          <source>You can implement onSceneGraphError(error, message) to handle errors, such as graphics context creation failures, in a custom way. If no handler is connected to this signal, Quick will print the</source>
          <target state="translated">You can implement onSceneGraphError(error, message) to handle errors, such as graphics context creation failures, in a custom way. If no handler is connected to this signal, Quick will print the</target>
        </trans-unit>
        <trans-unit id="ffadf5b7f79675a45d8da6d25c9455f6bfa478e0" translate="yes" xml:space="preserve">
          <source>You can implement the stream operator used by &lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt;() to provide debugging support for your classes. The class that implements the stream is &lt;code&gt;QDebug&lt;/code&gt;. Use &lt;code&gt;QDebugStateSaver&lt;/code&gt; to temporarily save the formatting options of the stream. Use &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace()&lt;/a&gt; and &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream manipulators&lt;/a&gt; to further customize the formatting.</source>
          <target state="translated">&lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt; ()에서 사용하는 스트림 연산자를 구현 하여 클래스에 대한 디버깅 지원을 제공 할 수 있습니다. 스트림을 구현하는 클래스는 &lt;code&gt;QDebug&lt;/code&gt; 입니다. &lt;code&gt;QDebugStateSaver&lt;/code&gt; 를 사용 하여 스트림의 형식화 옵션을 임시로 저장하십시오. 사용 &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace ()&lt;/a&gt; 및 &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream 조작자&lt;/a&gt; 를 하여 형식을 추가로 사용자 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="24259b19c50c5d1082d79a8374cb50a4aec7ed72" translate="yes" xml:space="preserve">
          <source>You can implement the stream operator used by &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;() to provide debugging support for your classes. The class that implements the stream is &lt;code&gt;QDebug&lt;/code&gt;. Use &lt;code&gt;QDebugStateSaver&lt;/code&gt; to temporarily save the formatting options of the stream. Use &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace()&lt;/a&gt; and &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream manipulators&lt;/a&gt; to further customize the formatting.</source>
          <target state="translated">You can implement the stream operator used by &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;() to provide debugging support for your classes. The class that implements the stream is &lt;code&gt;QDebug&lt;/code&gt; . Use &lt;code&gt;QDebugStateSaver&lt;/code&gt; to temporarily save the formatting options of the stream. Use &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace()&lt;/a&gt; and &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream manipulators&lt;/a&gt; to further customize the formatting.</target>
        </trans-unit>
        <trans-unit id="73e714693ffab6791b5c1b4a692d6f144b878a5f" translate="yes" xml:space="preserve">
          <source>You can include the function name plus '()' as a parameter to the &lt;b&gt;\overload&lt;/b&gt; command, which will include a standard</source>
          <target state="translated">You can include the function name plus '()' as a parameter to the &lt;b&gt;\overload&lt;/b&gt; command, which will include a standard</target>
        </trans-unit>
        <trans-unit id="a5cfb14481ac35f69c033fc6c71dcae4326f6394" translate="yes" xml:space="preserve">
          <source>You can increment (or decrement) a date by a given number of days using &lt;a href=&quot;qdate#addDays&quot;&gt;addDays&lt;/a&gt;(). Similarly you can use &lt;a href=&quot;qdate#addMonths&quot;&gt;addMonths&lt;/a&gt;() and &lt;a href=&quot;qdate#addYears&quot;&gt;addYears&lt;/a&gt;(). The &lt;a href=&quot;qdate#daysTo&quot;&gt;daysTo&lt;/a&gt;() function returns the number of days between two dates.</source>
          <target state="translated">&lt;a href=&quot;qdate#addDays&quot;&gt;addDays&lt;/a&gt; ()를 사용하여 지정된 일 수만큼 날짜를 늘리거나 줄일 수 있습니다 . 마찬가지로 &lt;a href=&quot;qdate#addMonths&quot;&gt;addMonths&lt;/a&gt; () 및 &lt;a href=&quot;qdate#addYears&quot;&gt;addYears&lt;/a&gt; ()를 사용할 수 있습니다 . &lt;a href=&quot;qdate#daysTo&quot;&gt;일 시간&lt;/a&gt; () 함수는 두 날짜 사이의 일 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d8e8e09509de9c6020b0ead4e4cd34431327cb23" translate="yes" xml:space="preserve">
          <source>You can increment (or decrement) a datetime by a given number of milliseconds using &lt;a href=&quot;qdatetime#addMSecs&quot;&gt;addMSecs&lt;/a&gt;(), seconds using &lt;a href=&quot;qdatetime#addSecs&quot;&gt;addSecs&lt;/a&gt;(), or days using &lt;a href=&quot;qdatetime#addDays&quot;&gt;addDays&lt;/a&gt;(). Similarly, you can use &lt;a href=&quot;qdatetime#addMonths&quot;&gt;addMonths&lt;/a&gt;() and &lt;a href=&quot;qdatetime#addYears&quot;&gt;addYears&lt;/a&gt;(). The &lt;a href=&quot;qdatetime#daysTo&quot;&gt;daysTo&lt;/a&gt;() function returns the number of days between two datetimes, &lt;a href=&quot;qdatetime#secsTo&quot;&gt;secsTo&lt;/a&gt;() returns the number of seconds between two datetimes, and &lt;a href=&quot;qdatetime#msecsTo&quot;&gt;msecsTo&lt;/a&gt;() returns the number of milliseconds between two datetimes. These operations are aware of daylight-saving time (DST) and other time-zone transitions, where applicable.</source>
          <target state="translated">당신은 사용하여 밀리 초 지정된 번호로 날짜를 증가 (또는 감소) 할 수 &lt;a href=&quot;qdatetime#addMSecs&quot;&gt;addMSecs을&lt;/a&gt; 초 사용) ( &lt;a href=&quot;qdatetime#addSecs&quot;&gt;addSecs&lt;/a&gt; 사용 (), 또는 일을 &lt;a href=&quot;qdatetime#addDays&quot;&gt;addDays을&lt;/a&gt; (). 마찬가지로 &lt;a href=&quot;qdatetime#addMonths&quot;&gt;addMonths&lt;/a&gt; () 및 &lt;a href=&quot;qdatetime#addYears&quot;&gt;addYears&lt;/a&gt; ()를 사용할 수 있습니다 . &lt;a href=&quot;qdatetime#daysTo&quot;&gt;일 시간&lt;/a&gt; () 함수는 두 날짜 시간과 일수는, 반환 &lt;a href=&quot;qdatetime#secsTo&quot;&gt;secsTo는&lt;/a&gt; () 두 날짜 시간 사이의 시간 (초)을 반환하고 &lt;a href=&quot;qdatetime#msecsTo&quot;&gt;msecsTo&lt;/a&gt; () 두 날짜 시간 (밀리 초)을 반환한다. 이러한 작업은 일광 절약 시간 (DST) 및 기타 시간대 전환 (해당되는 경우)을 인식합니다.</target>
        </trans-unit>
        <trans-unit id="ce2c368f1adb81cbc10989de38070bb27fe9a78f" translate="yes" xml:space="preserve">
          <source>You can inherit this class when you need to create a &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; from any instance of a class; for instance, from within the object itself. The key point is that the technique of just returning &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt;(this) cannot be used, because this winds up creating multiple distinct &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; objects with separate reference counts. For this reason you must never create more than one &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; from the same raw pointer.</source>
          <target state="translated">클래스의 인스턴스에서 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 를 생성해야 할 때이 클래스를 상속 할 수 있습니다 . 예를 들어, 객체 자체 내에서. 요점은 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; (this)를 반환하는 기술을 사용할 수 없다는 것입니다. 이는 별도의 참조 카운트를 가진 여러 개의 고유 한 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 객체를 생성하기 때문 입니다. 이러한 이유로 동일한 원시 포인터에서 둘 이상의 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 를 작성해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="77e080bc02276519387caab0a2f671fa3cc56e82" translate="yes" xml:space="preserve">
          <source>You can insert custom objects into a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;; see the &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt; class description for details.</source>
          <target state="translated">&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument에&lt;/a&gt; 커스텀 객체를 삽입 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt; 클래스 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="60120a33d25a490700ace525e56ea27a76e1ded4" translate="yes" xml:space="preserve">
          <source>You can inspect the globally selected Xcode installation using the same tool.</source>
          <target state="translated">동일한 도구를 사용하여 전체적으로 선택된 Xcode 설치를 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="263b76dc6f5ddcf814258ea40c17ae40a21fc431" translate="yes" xml:space="preserve">
          <source>You can install the Qt Framework and tools by using an &lt;a href=&quot;#online-installation&quot;&gt;online&lt;/a&gt; or &lt;a href=&quot;#offline-installation&quot;&gt;offline&lt;/a&gt; installer, or by &lt;a href=&quot;build-sources#&quot;&gt;building the source packages yourself&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#online-installation&quot;&gt;온라인&lt;/a&gt; 또는 &lt;a href=&quot;#offline-installation&quot;&gt;오프라인&lt;/a&gt; 설치 프로그램을 사용하거나 &lt;a href=&quot;build-sources#&quot;&gt;소스 패키지를 직접 빌드&lt;/a&gt; 하여 Qt 프레임 워크 및 도구를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ffa3b042e6c92d9ad0d7747fd4ab6ac2afda3d66" translate="yes" xml:space="preserve">
          <source>You can install the Qt Framework and tools by using an &lt;a href=&quot;gettingstarted#online-installation&quot;&gt;online&lt;/a&gt; or &lt;a href=&quot;gettingstarted#offline-installation&quot;&gt;offline&lt;/a&gt; installer, or by &lt;a href=&quot;build-sources&quot;&gt;building the source packages yourself&lt;/a&gt;.</source>
          <target state="translated">You can install the Qt Framework and tools by using an &lt;a href=&quot;gettingstarted#online-installation&quot;&gt;online&lt;/a&gt; or &lt;a href=&quot;gettingstarted#offline-installation&quot;&gt;offline&lt;/a&gt; installer, or by &lt;a href=&quot;build-sources&quot;&gt;building the source packages yourself&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="088ec724e405d6e57cbc14f6038e39dce593de92" translate="yes" xml:space="preserve">
          <source>You can install the interceptor on a profile via &lt;a href=&quot;qwebengineprofile#setUrlRequestInterceptor&quot;&gt;QWebEngineProfile::setUrlRequestInterceptor&lt;/a&gt;() or &lt;a href=&quot;qquickwebengineprofile#setUrlRequestInterceptor&quot;&gt;QQuickWebEngineProfile::setUrlRequestInterceptor&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qwebengineprofile#setUrlRequestInterceptor&quot;&gt;QWebEngineProfile :: setUrlRequestInterceptor&lt;/a&gt; () 또는 &lt;a href=&quot;qquickwebengineprofile#setUrlRequestInterceptor&quot;&gt;QQuickWebEngineProfile :: setUrlRequestInterceptor&lt;/a&gt; () 를 통해 프로파일에 인터셉터를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a6146720ffc65231a4e3c2e8e58c086752078ff" translate="yes" xml:space="preserve">
          <source>You can instantiate multiple copies of the same replica. All replicas of the same source from a single node will share a private data member which handles the network communication. This means multiple instances of a &lt;a href=&quot;#replica&quot;&gt;Replica&lt;/a&gt; do not introduce additional network traffic, although there will be some additional processing overhead. Failing to delete replicas will prevent the reference count on this private object from reaching 0, and cause unnecessary network communication until the calling process exits. For this reason, it is recommended that &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; or &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; be used to help track replica lifetime.</source>
          <target state="translated">동일한 복제본의 여러 사본을 인스턴스화 할 수 있습니다. 단일 노드에서 동일한 소스의 모든 복제본은 네트워크 통신을 처리하는 개인 데이터 멤버를 공유합니다. 이는 일부 추가 처리 오버 헤드가 있지만 &lt;a href=&quot;#replica&quot;&gt;복제본&lt;/a&gt; 의 여러 인스턴스가 추가 네트워크 트래픽을 발생시키지 않음을 의미합니다 . 복제본을 삭제하지 않으면이 개인용 개체의 참조 수가 0에 도달하지 못하며 호출 프로세스가 종료 될 때까지 불필요한 네트워크 통신이 발생합니다. 이러한 이유로 &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; 또는 &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; 를 사용하여 복제본 수명을 추적하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="e5017159a6242813d3120410910f644dbb3c13e0" translate="yes" xml:space="preserve">
          <source>You can instantiate multiple copies of the same replica. All replicas of the same source from a single node will share a private data member which handles the network communication. This means multiple instances of a replica do not introduce additional network traffic, although there will be some additional processing overhead. Failing to delete replicas will prevent the reference count on this private object from reaching 0, and cause unnecessary network communication until the calling process exits. For this reason, it is recommended to use &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; or &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; to help track the lifetime of replicas.</source>
          <target state="translated">You can instantiate multiple copies of the same replica. All replicas of the same source from a single node will share a private data member which handles the network communication. This means multiple instances of a replica do not introduce additional network traffic, although there will be some additional processing overhead. Failing to delete replicas will prevent the reference count on this private object from reaching 0, and cause unnecessary network communication until the calling process exits. For this reason, it is recommended to use &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; or &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; to help track the lifetime of replicas.</target>
        </trans-unit>
        <trans-unit id="8ca42318541f51c4204c44df92c7b260383062ab" translate="yes" xml:space="preserve">
          <source>You can interact with the items on the scene by using the mouse and keyboard. &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; translates the mouse and key events into</source>
          <target state="translated">마우스와 키보드를 사용하여 장면의 항목과 상호 작용할 수 있습니다. &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 는 마우스 및 키 이벤트를</target>
        </trans-unit>
        <trans-unit id="01b433a29209d1d68b39452b6848dfae4701f4fb" translate="yes" xml:space="preserve">
          <source>You can interact with the items on the scene by using the mouse and keyboard. QGraphicsView translates the mouse and key events into</source>
          <target state="translated">You can interact with the items on the scene by using the mouse and keyboard. QGraphicsView translates the mouse and key events into</target>
        </trans-unit>
        <trans-unit id="6930880ad8157d1c2613af9db0f436ceec64354b" translate="yes" xml:space="preserve">
          <source>You can interface with non-Qt clients in a multi-process system, as long as your clients understand Wayland or X11. For example, if you use gstreamer for video or if you want to use a navigation application built with another UI toolkit, you can run these clients alongside your other Qt-based clients.</source>
          <target state="translated">고객이 Wayland 또는 X11을 이해하는 한 다중 프로세스 시스템에서 비 Qt 클라이언트와 인터페이스 할 수 있습니다. 예를 들어, 비디오에 gstreamer를 사용하거나 다른 UI 툴킷으로 빌드 된 탐색 애플리케이션을 사용하려는 경우 이러한 클라이언트를 다른 Qt 기반 클라이언트와 함께 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f48274fb4eb7bb901b1c3a9abf77608df4ea606a" translate="yes" xml:space="preserve">
          <source>You can iterate over a frame's contents using the &lt;a href=&quot;qtextframe-iterator&quot;&gt;QTextFrame::iterator&lt;/a&gt; class: this provides read-only access to its internal list of text blocks and child frames.</source>
          <target state="translated">&lt;a href=&quot;qtextframe-iterator&quot;&gt;QTextFrame :: iterator&lt;/a&gt; 클래스를 사용하여 프레임의 내용을 반복 할 수 있습니다 . 내부 텍스트 블록 및 자식 프레임 목록에 대한 읽기 전용 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="45802f2b550c98d35b5865c5c450ba253f0bd3dc" translate="yes" xml:space="preserve">
          <source>You can localize numbers by using appropriate tr() strings:</source>
          <target state="translated">적절한 tr () 문자열을 사용하여 숫자를 지역화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29ce903f9b0e6c328bafcc51acb0edd78f63eccf" translate="yes" xml:space="preserve">
          <source>You can make a combo box editable by setting the &lt;a href=&quot;qml-qtquick-controls-combobox#editable-prop&quot;&gt;editable&lt;/a&gt; property. An editable combo box will autocomplete its text based on what is available in the model.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-combobox#editable-prop&quot;&gt;편집 가능한&lt;/a&gt; 속성 을 설정하여 콤보 상자를 편집 가능하게 만들 수 있습니다 . 편집 가능한 콤보 상자는 모델에서 사용 가능한 내용에 따라 텍스트를 자동 완성합니다.</target>
        </trans-unit>
        <trans-unit id="d2a59004768716022ca74ad06b5e8db54664409f" translate="yes" xml:space="preserve">
          <source>You can make as many connections as you like between objects on the form; it is possible to connect signals from objects to slots in the form itself. As a result, the signal and slot connections in many dialogs can be completely configured from within</source>
          <target state="translated">폼의 개체간에 원하는만큼 연결할 수 있습니다. 객체 자체에서 슬롯으로 신호를 신호 자체에 연결할 수 있습니다. 결과적으로 많은 대화 상자의 신호 및 슬롯 연결을 내부에서 완전히 구성 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="0d97646c36ee3f3398d37da5607c0120c2b91ea8" translate="yes" xml:space="preserve">
          <source>You can make the cells fill the available space by stretching the last header section. Access the relevant header using &lt;a href=&quot;qtableview#horizontalHeader&quot;&gt;horizontalHeader&lt;/a&gt;() or &lt;a href=&quot;qtableview#verticalHeader&quot;&gt;verticalHeader&lt;/a&gt;() and set the header's &lt;a href=&quot;qheaderview#stretchLastSection-prop&quot;&gt;stretchLastSection&lt;/a&gt; property.</source>
          <target state="translated">마지막 머리글 섹션을 늘려 셀이 사용 가능한 공간을 채우도록 만들 수 있습니다. &lt;a href=&quot;qtableview#horizontalHeader&quot;&gt;horizontalHeader&lt;/a&gt; () 또는 &lt;a href=&quot;qtableview#verticalHeader&quot;&gt;verticalHeader&lt;/a&gt; ()를 사용하여 관련 헤더에 액세스하고 헤더의 &lt;a href=&quot;qheaderview#stretchLastSection-prop&quot;&gt;stretchLastSection&lt;/a&gt; 속성을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e9198e18e387109c5cb95a7a5b98418c02fbb56" translate="yes" xml:space="preserve">
          <source>You can manually post events to any object in any thread at any time using the thread-safe function &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;QCoreApplication::postEvent&lt;/a&gt;(). The events will automatically be dispatched by the event loop of the thread where the object was created.</source>
          <target state="translated">스레드 안전 함수 &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;QCoreApplication :: postEvent&lt;/a&gt; ()를 사용하여 언제든지 스레드의 객체에 이벤트를 수동으로 게시 할 수 있습니다 . 이벤트는 객체가 생성 된 스레드의 이벤트 루프에 의해 자동으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="39b97ba5edf019033f01dbe6c178f39300ec5dc6" translate="yes" xml:space="preserve">
          <source>You can map coordinates and shapes to and from an item's scene by calling &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;QGraphicsItem::mapToScene&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;QGraphicsItem::mapFromScene&lt;/a&gt;(). You can also map to an item's parent item by calling &lt;a href=&quot;qgraphicsitem#mapToParent&quot;&gt;QGraphicsItem::mapToParent&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#mapFromParent&quot;&gt;QGraphicsItem::mapFromParent&lt;/a&gt;(), or between items by calling &lt;a href=&quot;qgraphicsitem#mapToItem&quot;&gt;QGraphicsItem::mapToItem&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#mapFromItem&quot;&gt;QGraphicsItem::mapFromItem&lt;/a&gt;(). All mapping functions can map both points, rectangles, polygons and paths.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;QGraphicsItem :: mapToScene&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;QGraphicsItem :: mapFromScene&lt;/a&gt; () 을 호출하여 항목 장면에 좌표와 모양을 매핑 할 수 있습니다 . &lt;a href=&quot;qgraphicsitem#mapToParent&quot;&gt;QGraphicsItem :: mapToParent&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsitem#mapFromParent&quot;&gt;QGraphicsItem :: mapFromParent&lt;/a&gt; ()를 호출하거나 &lt;a href=&quot;qgraphicsitem#mapToItem&quot;&gt;QGraphicsItem :: mapToItem&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsitem#mapFromItem&quot;&gt;QGraphicsItem :: mapFromItem&lt;/a&gt; () 을 호출하여 항목간에 상위 항목에 맵핑 할 수도 있습니다 . 모든 매핑 기능은 점, 사각형, 다각형 및 경로를 모두 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b1c9bee0650fda07b2432573af6a5499ab9bb6" translate="yes" xml:space="preserve">
          <source>You can minimize the space consumption of a group box by enabling the &lt;a href=&quot;qgroupbox#flat-prop&quot;&gt;flat&lt;/a&gt; property. In most &lt;a href=&quot;qstyle&quot;&gt;styles&lt;/a&gt;, enabling this property results in the removal of the left, right and bottom edges of the frame.</source>
          <target state="translated">&lt;a href=&quot;qgroupbox#flat-prop&quot;&gt;flat&lt;/a&gt; 속성 을 사용하면 그룹 상자의 공간 소비를 최소화 할 수 있습니다 . 대부분의 &lt;a href=&quot;qstyle&quot;&gt;스타일&lt;/a&gt; 에서이 속성을 사용하면 프레임의 왼쪽, 오른쪽 및 아래쪽 가장자리가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="2df3c4428820197ccaaae88afad09cab36b58b77" translate="yes" xml:space="preserve">
          <source>You can minimize the space consumption of a group box by enabling the flat property. In most styles, enabling this property results in the removal of the left, right and bottom edges of the frame.</source>
          <target state="translated">flat 속성을 사용하면 그룹 상자의 공간 소비를 최소화 할 수 있습니다. 대부분의 스타일에서이 속성을 사용하면 프레임의 왼쪽, 오른쪽 및 아래쪽 가장자리가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="f3efdee97259ddddf930e0b0fa6ce9e0c3686342" translate="yes" xml:space="preserve">
          <source>You can mix and match normal buttons and standard buttons.</source>
          <target state="translated">일반 버튼과 표준 버튼을 혼합하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df32299980cf9adee810ff696e632079ebefca46" translate="yes" xml:space="preserve">
          <source>You can monitor the rendering performance by turning on two logging categories:</source>
          <target state="translated">두 가지 로깅 범주를 설정하여 렌더링 성능을 모니터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea319678ba6717f36c6be48fdb9b29cad30abb64" translate="yes" xml:space="preserve">
          <source>You can navigate the cells in the table by clicking on a cell with the mouse, or by using the arrow keys. Because &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; enables &lt;a href=&quot;qabstractitemview#tabKeyNavigation-prop&quot;&gt;tabKeyNavigation&lt;/a&gt; by default, you can also hit Tab and Backtab to move from cell to cell.</source>
          <target state="translated">마우스로 셀을 클릭하거나 화살표 키를 사용하여 테이블의 셀을 탐색 할 수 있습니다. 때문에 &lt;a href=&quot;qtableview&quot;&gt;QTableView이&lt;/a&gt; 가능 &lt;a href=&quot;qabstractitemview#tabKeyNavigation-prop&quot;&gt;tabKeyNavigation을&lt;/a&gt; 기본적으로, 당신은 또한 셀에서 셀로 이동 탭 뒤로 탭을 칠 수있다.</target>
        </trans-unit>
        <trans-unit id="a0f9a22c00684c02adeb07a80bdfab5f8a6bff15" translate="yes" xml:space="preserve">
          <source>You can navigate the cells in the table by clicking on a cell with the mouse, or by using the arrow keys. Because QTableView enables &lt;a href=&quot;qabstractitemview#tabKeyNavigation-prop&quot;&gt;tabKeyNavigation&lt;/a&gt; by default, you can also hit Tab and Backtab to move from cell to cell.</source>
          <target state="translated">마우스로 셀을 클릭하거나 화살표 키를 사용하여 테이블의 셀을 탐색 할 수 있습니다. &lt;a href=&quot;qabstractitemview#tabKeyNavigation-prop&quot;&gt;QTableView&lt;/a&gt; 는 기본적으로 tabKeyNavigation을 활성화 하므로 Tab 및 Backtab을 눌러 셀에서 셀로 이동할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e24585dd81f43f2a08793a84e6661a8d69621d6" translate="yes" xml:space="preserve">
          <source>You can navigate through the entire setting hierarchy using &lt;a href=&quot;qsettings#childKeys&quot;&gt;childKeys&lt;/a&gt;() and childGroups() recursively.</source>
          <target state="translated">&lt;a href=&quot;qsettings#childKeys&quot;&gt;childKeys&lt;/a&gt; () 및 childGroups ()를 재귀 적으로 사용하여 전체 설정 계층 구조를 탐색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86acffaddb4b6f1bfb9bb9b224917c8346dadb1e" translate="yes" xml:space="preserve">
          <source>You can navigate through the entire setting hierarchy using childKeys() and &lt;a href=&quot;qsettings#childGroups&quot;&gt;childGroups&lt;/a&gt;() recursively.</source>
          <target state="translated">childKeys () 및 &lt;a href=&quot;qsettings#childGroups&quot;&gt;childGroups&lt;/a&gt; ()를 재귀 적으로 사용하여 전체 설정 계층 구조를 탐색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="def587ee6c7279da9b6c417dff58863f1c9ff1cd" translate="yes" xml:space="preserve">
          <source>You can navigate within the dataset using &lt;a href=&quot;qsqlquery#next&quot;&gt;QSqlQuery::next&lt;/a&gt;(), &lt;a href=&quot;qsqlquery#previous&quot;&gt;QSqlQuery::previous&lt;/a&gt;(), &lt;a href=&quot;qsqlquery#first&quot;&gt;QSqlQuery::first&lt;/a&gt;(), &lt;a href=&quot;qsqlquery#last&quot;&gt;QSqlQuery::last&lt;/a&gt;(), and &lt;a href=&quot;qsqlquery#seek&quot;&gt;QSqlQuery::seek&lt;/a&gt;(). The current row index is returned by &lt;a href=&quot;qsqlquery#at&quot;&gt;QSqlQuery::at&lt;/a&gt;(), and the total number of rows in the result set is available as &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery::size&lt;/a&gt;() for databases that support it.</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#next&quot;&gt;QSqlQuery :: next&lt;/a&gt; (), &lt;a href=&quot;qsqlquery#previous&quot;&gt;QSqlQuery :: previous&lt;/a&gt; (), &lt;a href=&quot;qsqlquery#first&quot;&gt;QSqlQuery :: first&lt;/a&gt; (), &lt;a href=&quot;qsqlquery#last&quot;&gt;QSqlQuery :: last&lt;/a&gt; () 및 &lt;a href=&quot;qsqlquery#seek&quot;&gt;QSqlQuery :: seek&lt;/a&gt; ()를 사용하여 데이터 세트 내에서 탐색 할 수 있습니다 . 현재 행 인덱스는 &lt;a href=&quot;qsqlquery#at&quot;&gt;QSqlQuery :: at&lt;/a&gt; ()에 의해 리턴되며 결과 세트의 총 행 수는이 를 지원하는 데이터베이스에 대해 &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery :: size&lt;/a&gt; () 로 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="bf5c13089967016dd95eb2ceeb3187e9039636ea" translate="yes" xml:space="preserve">
          <source>You can nest layouts using &lt;code&gt;addLayout()&lt;/code&gt; on a layout; the inner layout then becomes a child of the layout it is inserted into.</source>
          <target state="translated">레이아웃에서 &lt;code&gt;addLayout()&lt;/code&gt; 을 사용하여 레이아웃을 중첩 할 수 있습니다 . 내부 레이아웃은 삽입 된 레이아웃의 자식이됩니다.</target>
        </trans-unit>
        <trans-unit id="d9311a7dc91bf32d9bf8b01b2fd33389654452bb" translate="yes" xml:space="preserve">
          <source>You can now return to the fix branch: &lt;code&gt;git checkout fix-branch&lt;/code&gt;</source>
          <target state="translated">이제 수정 브랜치로 돌아갈 수 있습니다. &lt;code&gt;git checkout fix-branch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ceaef82fda8c62d732471ed68aed9ee2a317c741" translate="yes" xml:space="preserve">
          <source>You can obtain a list of all the elements that have a particular tag with &lt;a href=&quot;qdomdocument#elementsByTagName&quot;&gt;elementsByTagName&lt;/a&gt;() or with &lt;a href=&quot;qdomdocument#elementsByTagNameNS&quot;&gt;elementsByTagNameNS&lt;/a&gt;().</source>
          <target state="translated">당신이 가진 특정 태그있는 모든 요소의 목록 얻을 수 있습니다 &lt;a href=&quot;qdomdocument#elementsByTagName&quot;&gt;elementsByTagName을&lt;/a&gt; () 또는와 &lt;a href=&quot;qdomdocument#elementsByTagNameNS&quot;&gt;elementsByTagNameNS&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="b1e7127990aeb06f3e2998b096aa1f46d5ba9a6a" translate="yes" xml:space="preserve">
          <source>You can obtain audio formats compatible with the audio device used through functions in &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt;. This class also lets you query available parameter values for a device, so that you can set the parameters yourself. See the &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; class description for details. You need to know the format of the audio streams you wish to play or record.</source>
          <target state="translated">&lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo의&lt;/a&gt; 기능을 통해 사용되는 오디오 장치와 호환되는 오디오 형식을 얻을 수 있습니다 . 이 클래스를 사용하면 장치에 사용 가능한 매개 변수 값을 쿼리하여 매개 변수를 직접 설정할 수 있습니다. 자세한 내용은 &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; 클래스 설명을 참조하십시오. 재생하거나 녹음하려는 오디오 스트림의 형식을 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="79154f5f27c79b24bae629a814469195149324e5" translate="yes" xml:space="preserve">
          <source>You can of course use the IDispatch* returned directly, in which case you have to call &lt;code&gt;Release()&lt;/code&gt; when finished with the interface.</source>
          <target state="translated">물론 직접 반환 된 IDispatch *를 사용할 수 있습니다.이 경우 인터페이스가 끝나면 &lt;code&gt;Release()&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b910d1cbee0426c010e5e25fd7a59721c26fc9df" translate="yes" xml:space="preserve">
          <source>You can omit specifying the texture properties, Qt 3D will try at runtime to determine what they are. If you know them, you can of course provide them, avoid additional work for Qt 3D.</source>
          <target state="translated">텍스처 속성 지정을 생략 할 수 있습니다. Qt 3D는 런타임에 그 속성을 확인하려고 시도합니다. 당신이 그들을 알고 있다면, 당신은 그들을 제공 할 수 있습니다, Qt 3D에 대한 추가 작업을 피하십시오.</target>
        </trans-unit>
        <trans-unit id="6c93e78c31fd7af5eee1cca543c77319bc06122d" translate="yes" xml:space="preserve">
          <source>You can only choose one or the other mode.</source>
          <target state="translated">하나 또는 다른 모드 만 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="080fe633fb2b534bea08c07f5d55ced59448c9af" translate="yes" xml:space="preserve">
          <source>You can only post events when the state machine is running or when it is starting up.</source>
          <target state="translated">상태 시스템이 실행 중이거나 시작 중일 때만 이벤트를 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e1f5dada85dd3abbd7578c190318f83b65445d9" translate="yes" xml:space="preserve">
          <source>You can only post events when the state machine is running.</source>
          <target state="translated">상태 머신이 실행 중일 때만 이벤트를 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="813294996951f237c108ab6d494099169c7924b9" translate="yes" xml:space="preserve">
          <source>You can only specify either a source filename or a source &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;. Setting one will unset the other.</source>
          <target state="translated">소스 파일 이름 또는 소스 &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; 만 지정할 수 있습니다 . 하나를 설정하면 다른 하나는 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="15e2e0bd1fe3b3b18e65b448974e55c5b0cebc50" translate="yes" xml:space="preserve">
          <source>You can only specify one of the first four.</source>
          <target state="translated">처음 네 개 중 하나만 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="850d96f90efb2fc1fbf68b2743c91966cf18eea4" translate="yes" xml:space="preserve">
          <source>You can open the resource selector by clicking &lt;b&gt;Choose Resource...&lt;/b&gt; to add resources any time during the design process.</source>
          <target state="translated">자원 선택 &lt;b&gt;...&lt;/b&gt; 을 클릭하여 자원 선택기를 열 수 있습니다 &lt;b&gt;.&lt;/b&gt; 을 하여 디자인 프로세스 중에 언제든지 리소스를 추가 .</target>
        </trans-unit>
        <trans-unit id="5b58047004b7de1127c5c3b4a35e6bc0799faabe" translate="yes" xml:space="preserve">
          <source>You can override the default configuration for categories either by setting logging rules, or by installing a custom filter.</source>
          <target state="translated">로깅 규칙을 설정하거나 사용자 지정 필터를 설치하여 범주에 대한 기본 구성을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa146a3eb96020cc6395e2646a92c6ef339fadbf" translate="yes" xml:space="preserve">
          <source>You can override this behavior by using the &lt;a href=&quot;qaction#menuRole-prop&quot;&gt;QAction::menuRole&lt;/a&gt;() property.</source>
          <target state="translated">&lt;a href=&quot;qaction#menuRole-prop&quot;&gt;QAction :: menuRole&lt;/a&gt; () 속성 을 사용하여이 동작을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="693ae0cff166b9813c29a9dc05566c9005d58c85" translate="yes" xml:space="preserve">
          <source>You can override this function for your delegate if you need extra logic to decide which transition to return. You could for example introspect the items, and return different animations depending on the their internal state. &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; will expect you to return a Component that contains a StackViewTransition, or a StackViewTransition directly. The former is easier, as &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; will then create the transition and later destroy it when it's done, while avoiding any side effects caused by the transition being alive long after it has run. Returning a StackViewTransition directly can be useful if you need to write some sort of transition caching for performance reasons. As an optimization, you can also return &lt;code&gt;null&lt;/code&gt; to signal that you just want to show/hide the items immediately without creating or running any transitions. You can also override this function if you need to alter the items in any way before the transition starts.</source>
          <target state="translated">반환 할 전환을 결정하기 위해 추가 로직이 필요한 경우 델리게이트에 대해이 기능을 재정의 할 수 있습니다. 예를 들어 항목을 검사하고 내부 상태에 따라 다른 애니메이션을 반환 할 수 있습니다. &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; 는 StackViewTransition 이 포함 된 Component 또는 StackViewTransition을 직접 반환해야합니다. &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; 는 전환을 생성 한 다음 완료되면 나중에 전환을 실행하면서 전환이 실행 된 후 오래 지속되는 부작용을 피하기 때문에 전자가 더 쉽습니다 . 성능상의 이유로 일종의 전환 캐싱을 작성해야하는 경우 StackViewTransition을 직접 반환하면 유용 할 수 있습니다. 최적화로 다음을 반환 할 수도 있습니다. &lt;code&gt;null&lt;/code&gt; 전환을 만들거나 실행하지 않고 항목을 즉시 표시하거나 숨기고 싶다는 신호를 보냅니다. 전환이 시작되기 전에 어떤 방식 으로든 항목을 변경해야하는 경우이 기능을 무시할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e438464c8f39e942fc9b32ad7a73ae3c8a49923e" translate="yes" xml:space="preserve">
          <source>You can override this function for your delegate if you need extra logic to decide which transition to return. You could for example introspect the items, and return different animations depending on the their internal state. StackView will expect you to return a Component that contains a StackViewTransition, or a StackViewTransition directly. The former is easier, as StackView will then create the transition and later destroy it when it's done, while avoiding any side effects caused by the transition being alive long after it has run. Returning a StackViewTransition directly can be useful if you need to write some sort of transition caching for performance reasons. As an optimization, you can also return &lt;code&gt;null&lt;/code&gt; to signal that you just want to show/hide the items immediately without creating or running any transitions. You can also override this function if you need to alter the items in any way before the transition starts.</source>
          <target state="translated">반환 할 전환을 결정하기 위해 추가 논리가 필요한 경우 대리자에 대해이 함수를 재정의 할 수 있습니다. 예를 들어 항목을 검사하고 내부 상태에 따라 다른 애니메이션을 반환 할 수 있습니다. StackView는 StackViewTransition 또는 StackViewTransition을 직접 포함하는 구성 요소를 반환 할 것으로 예상합니다. 이전은 StackView가 전환을 생성하고 나중에 완료되면이를 파괴하는 반면 전환이 실행 된 후 오래 살아남아 발생하는 부작용을 방지하기 때문에 더 쉽습니다. 성능상의 이유로 일종의 전환 캐싱을 작성해야하는 경우 StackViewTransition을 직접 반환하는 것이 유용 할 수 있습니다. 최적화로 &lt;code&gt;null&lt;/code&gt; 을 반환 할 수도 있습니다.전환을 생성하거나 실행하지 않고 즉시 항목을 표시 / 숨기기를 원한다는 신호를 보냅니다. 전환이 시작되기 전에 어떤 식 으로든 항목을 변경해야하는 경우이 기능을 재정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb8a6e1514b3c2e720011021427c0b15276649db" translate="yes" xml:space="preserve">
          <source>You can pass your own classes as handlers, provided that they have a public static function &lt;code&gt;void cleanup(T *pointer)&lt;/code&gt;.</source>
          <target state="translated">공용 정적 함수 &lt;code&gt;void cleanup(T *pointer)&lt;/code&gt; 가있는 경우 자체 클래스를 핸들러로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee99b10b7e176178c45f850e70a3025025972fdb" translate="yes" xml:space="preserve">
          <source>You can post your own events to the state machine using &lt;a href=&quot;qstatemachine#postEvent&quot;&gt;QStateMachine::postEvent&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstatemachine#postEvent&quot;&gt;QStateMachine :: postEvent&lt;/a&gt; ()를 사용하여 자신의 이벤트를 상태 머신에 게시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d36d4d1f944ee8d7f2546c86c05d1cc7ce336f2" translate="yes" xml:space="preserve">
          <source>You can provide custom editors by using a &lt;a href=&quot;qitemeditorfactory&quot;&gt;QItemEditorFactory&lt;/a&gt;. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-itemviews-coloreditorfactory-example.html#&quot;&gt;Color Editor Factory Example&lt;/a&gt; shows how a custom editor can be made available to delegates with the default item editor factory. This way, there is no need to subclass &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt;. An alternative is to reimplement &lt;a href=&quot;qitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt;(), &lt;a href=&quot;qitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt;(), &lt;a href=&quot;qitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt;(), and &lt;a href=&quot;qitemdelegate#updateEditorGeometry&quot;&gt;updateEditorGeometry&lt;/a&gt;(). This process is described in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-itemviews-spinboxdelegate-example.html#&quot;&gt;Spin Box Delegate Example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qitemeditorfactory&quot;&gt;QItemEditorFactory&lt;/a&gt; 를 사용하여 사용자 정의 편집기를 제공 할 수 있습니다. . &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-itemviews-coloreditorfactory-example.html#&quot;&gt;색상 편집기 공장 예&lt;/a&gt; 사용자 정의 편집기가 기본 항목 편집기 공장 대표에게 제공 될 수있는 방법을 보여줍니다. 이런 식으로 &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt; 를 서브 클래스 화할 필요가 없습니다 . 다른 방법은 &lt;a href=&quot;qitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt; (), &lt;a href=&quot;qitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt; (), &lt;a href=&quot;qitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt; () 및 &lt;a href=&quot;qitemdelegate#updateEditorGeometry&quot;&gt;updateEditorGeometry&lt;/a&gt; () 를 다시 구현하는 것입니다 . 이 프로세스는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-itemviews-spinboxdelegate-example.html#&quot;&gt;스핀 상자 위임 예제에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="01de1bd91d074948ee57c2a725ed33b89ea3b9db" translate="yes" xml:space="preserve">
          <source>You can provide custom editors by using a &lt;a href=&quot;qitemeditorfactory&quot;&gt;QItemEditorFactory&lt;/a&gt;. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-itemviews-coloreditorfactory-example.html&quot;&gt;Color Editor Factory Example&lt;/a&gt; shows how a custom editor can be made available to delegates with the default item editor factory. This way, there is no need to subclass QItemDelegate. An alternative is to reimplement &lt;a href=&quot;qitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt;(), &lt;a href=&quot;qitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt;(), &lt;a href=&quot;qitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt;(), and &lt;a href=&quot;qitemdelegate#updateEditorGeometry&quot;&gt;updateEditorGeometry&lt;/a&gt;(). This process is described in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-itemviews-spinboxdelegate-example.html&quot;&gt;Spin Box Delegate Example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qitemeditorfactory&quot;&gt;QItemEditorFactory&lt;/a&gt; 를 사용하여 사용자 정의 편집기를 제공 할 수 있습니다 . &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-itemviews-coloreditorfactory-example.html&quot;&gt;색상 편집기 공장 예&lt;/a&gt; 사용자 정의 편집기가 기본 항목 편집기 공장 대표에게 제공 될 수있는 방법을 보여줍니다. 이렇게하면 QItemDelegate를 서브 클래스 할 필요가 없습니다. 대안은 &lt;a href=&quot;qitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt; (), &lt;a href=&quot;qitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt; (), &lt;a href=&quot;qitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt; () 및 &lt;a href=&quot;qitemdelegate#updateEditorGeometry&quot;&gt;updateEditorGeometry&lt;/a&gt; () 를 다시 구현하는 것입니다 . 이 프로세스는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-itemviews-spinboxdelegate-example.html&quot;&gt;Spin Box Delegate Example에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed68a0d3d727917efe0f081557a36e2feb316808" translate="yes" xml:space="preserve">
          <source>You can provide substitutions for font family names using &lt;a href=&quot;qfont#insertSubstitution&quot;&gt;insertSubstitution&lt;/a&gt;() and &lt;a href=&quot;qfont#insertSubstitutions&quot;&gt;insertSubstitutions&lt;/a&gt;(). Substitutions can be removed with &lt;a href=&quot;qfont#removeSubstitutions&quot;&gt;removeSubstitutions&lt;/a&gt;(). Use &lt;a href=&quot;qfont#substitute&quot;&gt;substitute&lt;/a&gt;() to retrieve a family's first substitute, or the family name itself if it has no substitutes. Use &lt;a href=&quot;qfont#substitutes&quot;&gt;substitutes&lt;/a&gt;() to retrieve a list of a family's substitutes (which may be empty).</source>
          <target state="translated">&lt;a href=&quot;qfont#insertSubstitution&quot;&gt;insertSubstitution&lt;/a&gt; () 및 &lt;a href=&quot;qfont#insertSubstitutions&quot;&gt;insertSubstitutions&lt;/a&gt; ()를 사용하여 글꼴 패밀리 이름을 대체 할 수 있습니다 . &lt;a href=&quot;qfont#removeSubstitutions&quot;&gt;removeSubstitutions&lt;/a&gt; ()로 대체를 제거 할 수 있습니다 . &lt;a href=&quot;qfont#substitute&quot;&gt;대용품&lt;/a&gt; ()을 사용 하여 가족의 첫 대용품 또는 대용품이없는 경우 가족 이름을 검색합니다. &lt;a href=&quot;qfont#substitutes&quot;&gt;대용품&lt;/a&gt; ()을 사용 하여 가족 대용품 목록을 가져옵니다 (비어있을 수 있음).</target>
        </trans-unit>
        <trans-unit id="5354be6b85bea93ec3b99c77676f24789032ee2d" translate="yes" xml:space="preserve">
          <source>You can provide substitutions for font family names using &lt;a href=&quot;qfont#insertSubstitution&quot;&gt;insertSubstitution&lt;/a&gt;() and &lt;a href=&quot;qfont#insertSubstitutions&quot;&gt;insertSubstitutions&lt;/a&gt;(). Substitutions can be removed with &lt;a href=&quot;qfont#removeSubstitutions&quot;&gt;removeSubstitutions&lt;/a&gt;(). Use &lt;a href=&quot;qfont#substitute&quot;&gt;substitute&lt;/a&gt;() to retrieve a family's first substitute, or the family name itself if it has no substitutes. Use &lt;a href=&quot;qfont#substitutes&quot;&gt;substitutes&lt;/a&gt;() to retrieve a list of a family's substitutes (which may be empty). After substituting a font, you must trigger the updating of the font by destroying and re-creating all QFont objects.</source>
          <target state="translated">&lt;a href=&quot;qfont#insertSubstitution&quot;&gt;insertSubstitution&lt;/a&gt; () 및 &lt;a href=&quot;qfont#insertSubstitutions&quot;&gt;insertSubstitutions&lt;/a&gt; ()를 사용하여 글꼴 패밀리 이름에 대한 대체를 제공 할 수 있습니다 . &lt;a href=&quot;qfont#removeSubstitutions&quot;&gt;removeSubstitutions&lt;/a&gt; ()를 사용 하여 대체를 제거 할 수 있습니다 . &lt;a href=&quot;qfont#substitute&quot;&gt;대리&lt;/a&gt; ()를 사용 하여 가족의 첫 대리를 검색하거나 대용이없는 경우 성 자체를 검색합니다. &lt;a href=&quot;qfont#substitutes&quot;&gt;대리자&lt;/a&gt; ()를 사용 하여 가족의 대리자 목록 (비어있을 수 있음)을 검색합니다. 글꼴을 대체 한 후에는 모든 QFont 개체를 제거하고 다시 만들어 글꼴 업데이트를 트리거해야합니다.</target>
        </trans-unit>
        <trans-unit id="5f59728dd21ff20bd739dfd2b08e91627e5c49e2" translate="yes" xml:space="preserve">
          <source>You can provide the ABIs as a qmake argument:</source>
          <target state="translated">ABI를 qmake 인수로 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fca706fce9452d71652fc3206c53f1c8ab26343f" translate="yes" xml:space="preserve">
          <source>You can provide the desired axis by assigning a &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; to the axis property or by passing a member if &lt;a href=&quot;qt#Axis-enum&quot;&gt;Qt::Axis&lt;/a&gt; to the &lt;a href=&quot;qgraphicsrotation#axis-prop&quot;&gt;setAxis&lt;/a&gt; convenience function. By default the axis is (0, 0, 1) i.e., rotation around the Z axis.</source>
          <target state="translated">&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; 를 축 속성 에 할당 하거나 &lt;a href=&quot;qt#Axis-enum&quot;&gt;Qt :: Axis 인&lt;/a&gt; 경우 멤버 를 &lt;a href=&quot;qgraphicsrotation#axis-prop&quot;&gt;setAxis&lt;/a&gt; 편의 함수 에 전달 하여 원하는 축을 제공 할 수 있습니다 . 기본적으로 축은 (0, 0, 1), 즉 Z 축을 중심으로 한 회전입니다.</target>
        </trans-unit>
        <trans-unit id="9d34566448dca6113c3f5d86d6964301c099e5c5" translate="yes" xml:space="preserve">
          <source>You can push several items in one go by using an array of property lists. This is more efficient than pushing items one by one, as &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; can then load only the last item in the list. The rest will be loaded as they are about to become the current item (which happens when the stack is popped). The following example shows how to push an array of items:</source>
          <target state="translated">속성 목록 배열을 사용하여 여러 항목을 한 번에 푸시 할 수 있습니다. &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; 는 목록의 마지막 항목 만로드 할 수 있으므로 항목을 하나씩 밀어내는 것보다 효율적 입니다. 나머지는 현재 항목이 될 때로드됩니다 (스택이 튀어 나올 때 발생 함). 다음 예제는 항목 배열을 푸시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="946684f4c4dd65759fb182599b645b641ec4d536" translate="yes" xml:space="preserve">
          <source>You can push several items in one go by using an array of property lists. This is more efficient than pushing items one by one, as StackView can then load only the last item in the list. The rest will be loaded as they are about to become the current item (which happens when the stack is popped). The following example shows how to push an array of items:</source>
          <target state="translated">속성 목록 배열을 사용하여 한 번에 여러 항목을 푸시 할 수 있습니다. StackView는 목록의 마지막 항목 만로드 할 수 있으므로 항목을 하나씩 푸시하는 것보다 효율적입니다. 나머지는 현재 항목이 되려고 할 때로드됩니다 (스택이 터질 때 발생). 다음 예제는 항목 배열을 푸시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1853b093340b0ecf27c6c7bd54970e24932b20df" translate="yes" xml:space="preserve">
          <source>You can query the values of properties in a project file as follows:</source>
          <target state="translated">다음과 같이 프로젝트 파일에서 속성 값을 쿼리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="a4074e115059408c53834aad0603e4cad6cce13e" translate="yes" xml:space="preserve">
          <source>You can react to application state changes to perform actions such as stopping/resuming CPU-intensive tasks, freeing/loading resources or saving/restoring application data.</source>
          <target state="translated">CPU 사용량이 많은 작업 중지 / 다시 시작, 리소스 해제 /로드 또는 응용 프로그램 데이터 저장 / 복원과 같은 작업을 수행하기 위해 응용 프로그램 상태 변경에 반응 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7976a476369247861bb2381468b2a0639c1349c" translate="yes" xml:space="preserve">
          <source>You can read more about the different cache modes in the &lt;a href=&quot;qgraphicsitem#CacheMode-enum&quot;&gt;CacheMode&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#CacheMode-enum&quot;&gt;CacheMode&lt;/a&gt; 설명서 에서 다른 캐시 모드에 대한 자세한 내용을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe8ded86413500e0a98aba9e6dd0ac3f2781fedb" translate="yes" xml:space="preserve">
          <source>You can reduce the amount of blocks in a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; with &lt;a href=&quot;qtextdocument#maximumBlockCount-prop&quot;&gt;maximumBlockCount()&lt;/a&gt;. The document is only as large as the number of blocks as far as &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; is concerned.</source>
          <target state="translated">당신은 블록의 양을 줄일 수 있습니다 &lt;a href=&quot;qtextdocument&quot;&gt; QTextDocument&lt;/a&gt; 와 &lt;a href=&quot;qtextdocument#maximumBlockCount-prop&quot;&gt;maximumBlockCount ()&lt;/a&gt; . &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; 에 관한 한 문서는 블록 수만큼 큽니다 .</target>
        </trans-unit>
        <trans-unit id="0b3196388b43fe3d734b5e24d7b979363fc744a2" translate="yes" xml:space="preserve">
          <source>You can reimplement this event handler to detect when your widget has been resized. Calling &lt;a href=&quot;qevent#accept&quot;&gt;QEvent::accept&lt;/a&gt;() or &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;() on</source>
          <target state="translated">위젯의 크기가 조정 된시기를 감지하기 위해이 이벤트 핸들러를 다시 구현할 수 있습니다. 부름&lt;a href=&quot;qevent#accept&quot;&gt; QEvent :: accept&lt;/a&gt; () 또는 &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="99fd7d9561d4a5ad9daf7612920394ed35f42c8a" translate="yes" xml:space="preserve">
          <source>You can reimplement this event handler to detect when your widget has moved. Calling &lt;a href=&quot;qevent#accept&quot;&gt;QEvent::accept&lt;/a&gt;() or &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;() on</source>
          <target state="translated">위젯이 언제 이동했는지 감지하도록이 이벤트 핸들러를 다시 구현할 수 있습니다. 부름&lt;a href=&quot;qevent#accept&quot;&gt; QEvent :: accept&lt;/a&gt; () 또는 &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="9d6400b5d318bc5e43263e1da234f3fa830e6c76" translate="yes" xml:space="preserve">
          <source>You can reimplement this event handler to detect when your widget is hidden. Calling &lt;a href=&quot;qevent#accept&quot;&gt;QEvent::accept&lt;/a&gt;() or &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;() on</source>
          <target state="translated">위젯이 숨겨진시기를 감지하도록이 이벤트 핸들러를 다시 구현할 수 있습니다. 부름&lt;a href=&quot;qevent#accept&quot;&gt; QEvent :: accept&lt;/a&gt; () 또는 &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="8d646cc6b98e079b873bc2fda6639e16fd394533" translate="yes" xml:space="preserve">
          <source>You can reimplement this event handler to detect when your widget is shown. Calling &lt;a href=&quot;qevent#accept&quot;&gt;QEvent::accept&lt;/a&gt;() or &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;() on</source>
          <target state="translated">위젯이 표시되는시기를 감지하기 위해이 이벤트 핸들러를 다시 구현할 수 있습니다. 부름&lt;a href=&quot;qevent#accept&quot;&gt; QEvent :: accept&lt;/a&gt; () 또는 &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt; ()</target>
        </trans-unit>
        <trans-unit id="d4a9fade7015d7c1ef9068a3b0bed8a3cf45ee86" translate="yes" xml:space="preserve">
          <source>You can reimplement this event handler to track similar events for your own custom layout.</source>
          <target state="translated">이 이벤트 핸들러를 다시 구현하여 사용자 정의 레이아웃과 유사한 이벤트를 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec64e1154fa50b68afb57c9a58bf722c7a3e609c" translate="yes" xml:space="preserve">
          <source>You can reimplement this function if you want to customize how a window can be interactively moved or resized. For instance, if you only want to allow a window to be resized by the bottom right corner, you can reimplement this function to return &lt;a href=&quot;qt#WindowFrameSection-enum&quot;&gt;Qt::NoSection&lt;/a&gt; for all sections except &lt;a href=&quot;qt#WindowFrameSection-enum&quot;&gt;Qt::BottomRightSection&lt;/a&gt;.</source>
          <target state="translated">대화식으로 창을 이동하거나 크기를 조정할 수있는 방법을 사용자 정의하려는 경우이 기능을 다시 구현할 수 있습니다. 예를 들어, 오른쪽 하단 모서리에서만 창 크기를 조정하려는 경우이 함수를 다시 구현하여 &lt;a href=&quot;qt#WindowFrameSection-enum&quot;&gt;Qt :: NoSection&lt;/a&gt; 을 반환 할 수 있습니다.&lt;a href=&quot;qt#WindowFrameSection-enum&quot;&gt; Qt :: BottomRightSection을&lt;/a&gt; 제외한 모든 섹션에 대해 .</target>
        </trans-unit>
        <trans-unit id="d0415ec2196ce0ca5be47dce1043749c1b3a7cdb" translate="yes" xml:space="preserve">
          <source>You can reimplement this function in a subclass of &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; to provide custom rendering of the widget's window frame.</source>
          <target state="translated">서브 클래스에서이 함수를 다시 구현할 수 있습니다. &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; 하여 위젯의 창 프레임에 대한 사용자 정의 렌더링을 제공 .</target>
        </trans-unit>
        <trans-unit id="3949fdff8ab7a6623f16ff9b64bd52420b7cc9fd" translate="yes" xml:space="preserve">
          <source>You can reimplement this function in a subclass of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; to provide fine-grained control over how tab focus passes inside your scene. The default implementation is based on the tab focus chain defined by &lt;a href=&quot;qgraphicswidget#setTabOrder&quot;&gt;QGraphicsWidget::setTabOrder&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 의 서브 클래스에서이 함수를 다시 구현할 수 있습니다 하여 장면 내에서 탭 포커스가 통과하는 방식을 세밀하게 제어 할 수 있습니다. 기본 구현은 &lt;a href=&quot;qgraphicswidget#setTabOrder&quot;&gt;QGraphicsWidget :: setTabOrder&lt;/a&gt; ()에 의해 정의 된 탭 포커스 체인을 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="a044276a13e7e1ec4cdcecf2b72b2744f4d1e799" translate="yes" xml:space="preserve">
          <source>You can reimplement this function in a subclass, but we recommend using one of the specialized event handlers instead.</source>
          <target state="translated">서브 클래스에서이 함수를 다시 구현할 수 있지만 대신 특수 이벤트 핸들러 중 하나를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5797b8b3649903f16534216372385dc78e19ba84" translate="yes" xml:space="preserve">
          <source>You can reimplement this function to facilitate advanced thread management. Returning from this method will end the execution of the thread.</source>
          <target state="translated">고급 스레드 관리를 용이하게하기 위해이 기능을 다시 구현할 수 있습니다. 이 메소드에서 리턴하면 스레드 실행이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="cc879377cf31232ea1562359160ece9e31ad39ca" translate="yes" xml:space="preserve">
          <source>You can reimplement this function to provide a custom algorithm for determining whether this item is obscured by</source>
          <target state="translated">이 함수를 다시 구현하여이 항목이 가려져 있는지 여부를 판별하기위한 사용자 정의 알고리즘을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87b26e8689d9fdaa567e1d90cd08d84c894f73da" translate="yes" xml:space="preserve">
          <source>You can reimplement this handler in a subclass of &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; to provide your own custom window frame interaction support.</source>
          <target state="translated">&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; 의 서브 클래스에서이 핸들러를 다시 구현할 수 있습니다. 하여 고유 한 사용자 정의 창 프레임 상호 작용 지원을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18003905fdd2a09a20d3eb43228ca2d0dfa8540f" translate="yes" xml:space="preserve">
          <source>You can remove resources by selecting the corresponding entry in the resource editor, and pressing the</source>
          <target state="translated">리소스 편집기에서 해당 항목을 선택하고을 눌러 리소스를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58b098186fd91581c2d6d656972fc7047b2c7e27" translate="yes" xml:space="preserve">
          <source>You can restrict the list of curves used for choosing the session cipher for this socket by calling &lt;a href=&quot;qsslconfiguration#setEllipticCurves&quot;&gt;setEllipticCurves&lt;/a&gt;() with a subset of the supported ciphers. You can revert to using the entire set by calling &lt;a href=&quot;qsslconfiguration#setEllipticCurves&quot;&gt;setEllipticCurves&lt;/a&gt;() with the list returned by QSslSocket::supportedEllipticCurves().</source>
          <target state="translated">지원되는 암호의 서브 세트로 &lt;a href=&quot;qsslconfiguration#setEllipticCurves&quot;&gt;setEllipticCurves&lt;/a&gt; ()를 호출 하여이 소켓의 세션 암호를 선택하는 데 사용되는 곡선 목록을 제한 할 수 있습니다 . QSslSocket :: supportedEllipticCurves ()에 의해 리턴 된 목록과 함께 &lt;a href=&quot;qsslconfiguration#setEllipticCurves&quot;&gt;setEllipticCurves&lt;/a&gt; ()를 호출하여 전체 세트 사용으로 되돌릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a2c1d549609c058101d975e148c68af364ceeca1" translate="yes" xml:space="preserve">
          <source>You can retrieve any of</source>
          <target state="translated">당신은 중 하나를 검색 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="a2739baad109e35d1b38f8bc5f28bec146eb3b6f" translate="yes" xml:space="preserve">
          <source>You can retrieve any of the form window's widgets using the &lt;a href=&quot;qdesignerformwindowcursorinterface#widget&quot;&gt;widget&lt;/a&gt;() function, and check if a widget is selected using the &lt;a href=&quot;qdesignerformwindowcursorinterface#isWidgetSelected&quot;&gt;isWidgetSelected&lt;/a&gt;() function. You can use the &lt;a href=&quot;qdesignerformwindowcursorinterface#setProperty&quot;&gt;setProperty&lt;/a&gt;() function to set the selected widget's properties, and the &lt;a href=&quot;qdesignerformwindowcursorinterface#setWidgetProperty&quot;&gt;setWidgetProperty&lt;/a&gt;() or &lt;a href=&quot;qdesignerformwindowcursorinterface#resetWidgetProperty&quot;&gt;resetWidgetProperty&lt;/a&gt;() functions to modify the properties of any given widget.</source>
          <target state="translated">&lt;a href=&quot;qdesignerformwindowcursorinterface#widget&quot;&gt;widget&lt;/a&gt; () 함수를 사용하여 양식 창의 위젯을 검색 하고 &lt;a href=&quot;qdesignerformwindowcursorinterface#isWidgetSelected&quot;&gt;isWidgetSelected&lt;/a&gt; () 함수를 사용하여 위젯이 선택되었는지 확인할 수 있습니다. 당신은 사용할 수 있습니다 &lt;a href=&quot;qdesignerformwindowcursorinterface#setProperty&quot;&gt;setProperty는&lt;/a&gt; 선택한 위젯의 속성을 설정 () 함수를, 그리고 &lt;a href=&quot;qdesignerformwindowcursorinterface#setWidgetProperty&quot;&gt;setWidgetProperty&lt;/a&gt; () 또는 &lt;a href=&quot;qdesignerformwindowcursorinterface#resetWidgetProperty&quot;&gt;resetWidgetProperty&lt;/a&gt; () 함수는 특정 위젯의 속성을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90a95075ea9032efde58041366f7c9b36561808b" translate="yes" xml:space="preserve">
          <source>You can retrieve the &lt;a href=&quot;qdomnotation#publicId&quot;&gt;publicId&lt;/a&gt;() and &lt;a href=&quot;qdomnotation#systemId&quot;&gt;systemId&lt;/a&gt;() from a notation node.</source>
          <target state="translated">표기법 노드에서 &lt;a href=&quot;qdomnotation#publicId&quot;&gt;publicId&lt;/a&gt; () 및 &lt;a href=&quot;qdomnotation#systemId&quot;&gt;systemId&lt;/a&gt; ()를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d429a9f76507450e05482ca3d711a0e8e5a6021" translate="yes" xml:space="preserve">
          <source>You can retrieve the &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; object the subject string was matched against by calling the &lt;a href=&quot;qregularexpressionmatch#regularExpression&quot;&gt;regularExpression&lt;/a&gt;() function; the match type and the match options are available as well by calling the &lt;a href=&quot;qregularexpressionmatch#matchType&quot;&gt;matchType&lt;/a&gt;() and the &lt;a href=&quot;qregularexpressionmatch#matchOptions&quot;&gt;matchOptions&lt;/a&gt;() respectively.</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatch#regularExpression&quot;&gt;regularExpression&lt;/a&gt; () 함수를 호출하여 주제 문자열과 일치 하는 &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 오브젝트를 검색 할 수 있습니다 . &lt;a href=&quot;qregularexpressionmatch#matchType&quot;&gt;matchType&lt;/a&gt; () 및 &lt;a href=&quot;qregularexpressionmatch#matchOptions&quot;&gt;matchOptions&lt;/a&gt; ()를 각각 호출하여 일치 유형 및 일치 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fabcfd946f8b79f77e90ededd395eccf9af8b292" translate="yes" xml:space="preserve">
          <source>You can retrieve the &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; object the subject string was matched against by calling the &lt;a href=&quot;qregularexpressionmatchiterator#regularExpression&quot;&gt;regularExpression&lt;/a&gt;() function; the match type and the match options are available as well by calling the &lt;a href=&quot;qregularexpressionmatchiterator#matchType&quot;&gt;matchType&lt;/a&gt;() and the &lt;a href=&quot;qregularexpressionmatchiterator#matchOptions&quot;&gt;matchOptions&lt;/a&gt;() respectively.</source>
          <target state="translated">&lt;a href=&quot;qregularexpressionmatchiterator#regularExpression&quot;&gt;regularExpression&lt;/a&gt; () 함수를 호출하여 주제 문자열과 일치 하는 &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 오브젝트를 검색 할 수 있습니다 . &lt;a href=&quot;qregularexpressionmatchiterator#matchType&quot;&gt;matchType&lt;/a&gt; () 및 &lt;a href=&quot;qregularexpressionmatchiterator#matchOptions&quot;&gt;matchOptions&lt;/a&gt; ()를 각각 호출하여 일치 유형 및 일치 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8801910cf2a18b905bcaeedf1a732ee6222ff6b2" translate="yes" xml:space="preserve">
          <source>You can retrieve the child widget using the &lt;a href=&quot;qscrollarea#widget&quot;&gt;widget&lt;/a&gt;() function. The view can be made to be resizable with the &lt;a href=&quot;qscrollarea#widgetResizable-prop&quot;&gt;setWidgetResizable&lt;/a&gt;() function. The alignment of the widget can be specified with &lt;a href=&quot;qscrollarea#alignment-prop&quot;&gt;setAlignment&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qscrollarea#widget&quot;&gt;widget&lt;/a&gt; () 함수를 사용하여 하위 위젯을 검색 할 수 있습니다 . &lt;a href=&quot;qscrollarea#widgetResizable-prop&quot;&gt;setWidgetResizable&lt;/a&gt; () 함수를 사용하여 뷰의 크기를 조정할 수 있습니다 . 위젯의 정렬은 &lt;a href=&quot;qscrollarea#alignment-prop&quot;&gt;setAlignment&lt;/a&gt; () 로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="518cb8bf2417f4f08c161a9bb0661d89cb1a6280" translate="yes" xml:space="preserve">
          <source>You can retrieve the document from the text edit using the document() function. The document can then be edited programmatically using the &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; class. This class is modeled after a screen cursor, and editing operations follow the same semantics. The following code changes the first line of the document to a bold font, leaving all other font properties untouched. The editor will be automatically updated to reflect the changes made to the underlying document data.</source>
          <target state="translated">document () 함수를 사용하여 텍스트 편집에서 문서를 검색 할 수 있습니다. 그런 다음 &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; 클래스를 사용하여 프로그래밍 방식으로 문서를 편집 할 수 있습니다 . 이 클래스는 스크린 커서를 모델로하며 편집 작업은 동일한 의미를 따릅니다. 다음 코드는 문서의 첫 줄을 굵은 글꼴로 변경하고 다른 모든 글꼴 속성은 그대로 유지합니다. 기본 문서 데이터의 변경 사항을 반영하도록 편집기가 자동으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="375f24b36f314905e503e5fd88dde678bcd44a98" translate="yes" xml:space="preserve">
          <source>You can retrieve the values of all the fields in a single variable (a map) using &lt;a href=&quot;qsqlquery#boundValues&quot;&gt;boundValues&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#boundValues&quot;&gt;boundValues&lt;/a&gt; ()를 사용하여 단일 변수 (맵)에서 모든 필드의 값을 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba858fa3b9de5cbb88b42db30d7f6468bea17866" translate="yes" xml:space="preserve">
          <source>You can retrieve this class from an instance of a &lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; 객체 의 인스턴스에서이 클래스를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43dbfaaf136f2e51a430c766a3200ffb761f18e2" translate="yes" xml:space="preserve">
          <source>You can retrieve this control from the camera object in the usual way:</source>
          <target state="translated">일반적인 방법으로 카메라 객체에서이 컨트롤을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce902d0ce235f9d8eb50b66354d8e68bdf7f39f5" translate="yes" xml:space="preserve">
          <source>You can retrieve this information back from qmake as follows:</source>
          <target state="translated">다음과 같이 qmake에서이 정보를 다시 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf89f4fbdd2c9e4a45d676425e5c01058f433b28" translate="yes" xml:space="preserve">
          <source>You can scale the coordinate system by a given offset using the &lt;a href=&quot;qpainter#scale&quot;&gt;QPainter::scale&lt;/a&gt;() function, you can rotate it clockwise using the &lt;a href=&quot;qpainter#rotate&quot;&gt;QPainter::rotate&lt;/a&gt;() function and you can translate it (i.e. adding a given offset to the points) using the &lt;a href=&quot;qpainter#translate&quot;&gt;QPainter::translate&lt;/a&gt;() function.</source>
          <target state="translated">&lt;a href=&quot;qpainter#scale&quot;&gt;QPainter :: scale&lt;/a&gt; () 함수를 사용하여 주어진 오프셋으로 좌표계를 스케일링 할 수 있고, &lt;a href=&quot;qpainter#rotate&quot;&gt;QPainter :: rotate&lt;/a&gt; () 함수를 사용하여 시계 방향으로 회전시킬 수 있으며이를 사용하여 좌표계 를 변환 할 수 있습니다 (예 : 주어진 오프셋을 포인트에 추가). &lt;a href=&quot;qpainter#translate&quot;&gt;QPainter를 번역 ::&lt;/a&gt; () 함수를.</target>
        </trans-unit>
        <trans-unit id="d3e2011a56d65d453cbdded0d1ce1e0b52b4ff82" translate="yes" xml:space="preserve">
          <source>You can search for items in the model with &lt;a href=&quot;qstandarditemmodel#findItems&quot;&gt;findItems&lt;/a&gt;(), and sort the model by calling &lt;a href=&quot;qstandarditemmodel#sort&quot;&gt;sort&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel#findItems&quot;&gt;findItems&lt;/a&gt; () 를 사용하여 모델에서 항목을 검색하고 &lt;a href=&quot;qstandarditemmodel#sort&quot;&gt;sort&lt;/a&gt; () 를 호출하여 모델을 정렬 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="030ac24eb570187a537200715656719342bd2ef1" translate="yes" xml:space="preserve">
          <source>You can select which byte order to use when serializing data. The default setting is big endian (MSB first). Changing it to little endian breaks the portability (unless the reader also changes to little endian). We recommend keeping this setting unless you have special requirements.</source>
          <target state="translated">데이터를 직렬화 할 때 사용할 바이트 순서를 선택할 수 있습니다. 기본 설정은 빅 엔디안입니다 (MSB 우선). 리틀 엔디안으로 변경하면 이식성이 손상됩니다 (리더가 리틀 엔디안으로 변경하지 않는 한). 특별한 요구 사항이없는 한이 설정을 유지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="5edb325270fce538f37483411c9763e929da1d23" translate="yes" xml:space="preserve">
          <source>You can set a status bar with &lt;code&gt;setStatusBar()&lt;/code&gt;, but one is created the first time &lt;code&gt;statusBar()&lt;/code&gt; (which returns the main window's status bar) is called. See &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; for information on how to use it.</source>
          <target state="translated">&lt;code&gt;setStatusBar()&lt;/code&gt; 로 상태 표시 줄을 설정할 수 있지만 처음 상태 표시 줄 &lt;code&gt;statusBar()&lt;/code&gt; (메인 창의 상태 표시 줄을 반환 함)이 호출 될 때 작성됩니다. &lt;a href=&quot;qstatusbar&quot;&gt;사용법에&lt;/a&gt; 대한 정보는 QStatusBar 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d36233d4d433c8e44fb312cf6adac09866340d3c" translate="yes" xml:space="preserve">
          <source>You can set a timer to time out only once by calling &lt;a href=&quot;qtimer#singleShot-prop&quot;&gt;setSingleShot&lt;/a&gt;(true). You can also use the static &lt;a href=&quot;qtimer#singleShot&quot;&gt;QTimer::singleShot&lt;/a&gt;() function to call a slot after a specified interval:</source>
          <target state="translated">&lt;a href=&quot;qtimer#singleShot-prop&quot;&gt;setSingleShot&lt;/a&gt; (true) 을 호출하여 타이머가 한 번만 시간 초과되도록 설정할 수 있습니다 . 정적 &lt;a href=&quot;qtimer#singleShot&quot;&gt;QTimer :: singleShot&lt;/a&gt; () 함수를 사용하여 지정된 간격 후에 슬롯을 호출 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97bb7b4216ccd830d531e418171576d00026c59d" translate="yes" xml:space="preserve">
          <source>You can set additional &lt;code&gt;OPTIONS&lt;/code&gt; that should be added to the &lt;code&gt;moc&lt;/code&gt; calls. You can find possible options in the &lt;a href=&quot;moc&quot;&gt;moc documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;moc&lt;/code&gt; 호출에 추가해야하는 추가 &lt;code&gt;OPTIONS&lt;/code&gt; 을 설정할 수 있습니다 . &lt;a href=&quot;moc&quot;&gt;moc 문서&lt;/a&gt; 에서 가능한 옵션을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="128c78f3f53d1b9921f8ac2d13cf42f86c3468d4" translate="yes" xml:space="preserve">
          <source>You can set additional &lt;code&gt;OPTIONS&lt;/code&gt; that should be added to the &lt;code&gt;rcc&lt;/code&gt; calls. You can find possible options in the &lt;a href=&quot;rcc&quot;&gt;rcc documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rcc&lt;/code&gt; 호출에 추가해야하는 추가 &lt;code&gt;OPTIONS&lt;/code&gt; 을 설정할 수 있습니다 . &lt;a href=&quot;rcc&quot;&gt;rcc 문서&lt;/a&gt; 에서 가능한 옵션을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08f2c9e8d68af3668eef7c11057712c630e82c86" translate="yes" xml:space="preserve">
          <source>You can set additional &lt;code&gt;OPTIONS&lt;/code&gt; that should be added to the &lt;code&gt;uic&lt;/code&gt; calls. You can find possible options in the &lt;a href=&quot;uic&quot;&gt;uic documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;uic&lt;/code&gt; 호출에 추가해야하는 추가 &lt;code&gt;OPTIONS&lt;/code&gt; 을 설정할 수 있습니다 . &lt;a href=&quot;uic&quot;&gt;uic 문서&lt;/a&gt; 에서 가능한 옵션을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfcb8b03dca5017d5b9a5ad80b3d0a309d7158b3" translate="yes" xml:space="preserve">
          <source>You can set an explicit &lt;code&gt;TARGET&lt;/code&gt;. This will make sure that the target properties &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; and &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; are also used when scanning the source files with &lt;code&gt;moc&lt;/code&gt;.</source>
          <target state="translated">명시 적 &lt;code&gt;TARGET&lt;/code&gt; 을 설정할 수 있습니다 . 그러면 &lt;code&gt;moc&lt;/code&gt; 로 소스 파일을 스캔 할 때 대상 속성 &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 및 &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; 도 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="07a95c8091fad73ff6dadff70224a4134289138d" translate="yes" xml:space="preserve">
          <source>You can set expiry time and host name for this policy, and control whether it applies to subdomains, either in the constructor or by calling &lt;a href=&quot;qhstspolicy#setExpiry&quot;&gt;setExpiry&lt;/a&gt;(), &lt;a href=&quot;qhstspolicy#setHost&quot;&gt;setHost&lt;/a&gt;() and setIncludesSubdomains().</source>
          <target state="translated">이 정책의 만료 시간과 호스트 이름을 설정하고 생성자에서 또는 &lt;a href=&quot;qhstspolicy#setExpiry&quot;&gt;setExpiry&lt;/a&gt; (), &lt;a href=&quot;qhstspolicy#setHost&quot;&gt;setHost&lt;/a&gt; () 및 setIncludesSubdomains () 를 호출하여 하위 도메인에 적용되는지 여부를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73160a331050705e32f9ec3627960f9e4e734bc6" translate="yes" xml:space="preserve">
          <source>You can set the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemStacksBehindParent&lt;/a&gt; flag to stack a child item behind its parent.</source>
          <target state="translated">하위 항목을 상위 항목 뒤에 쌓 도록 &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemStacksBehindParent&lt;/a&gt; 플래그를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b572a619096b3c99c04b6745abfc01836764d226" translate="yes" xml:space="preserve">
          <source>You can set the acceptable range in one call with &lt;a href=&quot;qdoublevalidator#setRange&quot;&gt;setRange&lt;/a&gt;(), or with &lt;a href=&quot;qdoublevalidator#bottom-prop&quot;&gt;setBottom&lt;/a&gt;() and &lt;a href=&quot;qdoublevalidator#top-prop&quot;&gt;setTop&lt;/a&gt;(). Set the number of decimal places with &lt;a href=&quot;qdoublevalidator#decimals-prop&quot;&gt;setDecimals&lt;/a&gt;(). The &lt;a href=&quot;qdoublevalidator#validate&quot;&gt;validate&lt;/a&gt;() function returns the validation state.</source>
          <target state="translated">&lt;a href=&quot;qdoublevalidator#setRange&quot;&gt;setRange&lt;/a&gt; () 또는 &lt;a href=&quot;qdoublevalidator#bottom-prop&quot;&gt;setBottom&lt;/a&gt; () 및 &lt;a href=&quot;qdoublevalidator#top-prop&quot;&gt;setTop&lt;/a&gt; ()을 사용 하여 한 번의 호출로 허용 범위를 설정할 수 있습니다 . &lt;a href=&quot;qdoublevalidator#decimals-prop&quot;&gt;setDecimals&lt;/a&gt; () 로 소수점 이하 자릿수를 설정하십시오 . &lt;a href=&quot;qdoublevalidator#validate&quot;&gt;의 validate&lt;/a&gt; () 함수는 유효성 검사 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2283ca57039d1610f44e06ead3a8896e2cc78306" translate="yes" xml:space="preserve">
          <source>You can set the actual version string by using &lt;a href=&quot;qcoreapplication#applicationVersion-prop&quot;&gt;QCoreApplication::setApplicationVersion&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qcoreapplication#applicationVersion-prop&quot;&gt;QCoreApplication :: setApplicationVersion&lt;/a&gt; () 을 사용하여 실제 버전 문자열을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94b0207cb2b435b38996d8de2708e06db859e2fb" translate="yes" xml:space="preserve">
          <source>You can set the background color to &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::transparent&lt;/a&gt; or to a translucent color to see through the document, or you can set it to match your web content in a hybrid application to prevent the white flashes that may appear during loading.</source>
          <target state="translated">배경색을 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: transparent&lt;/a&gt; 또는 반투명 색으로 설정하여 문서를 보거나 하이브리드 응용 프로그램의 웹 컨텐츠와 일치하도록 설정하여로드 중에 나타날 수있는 흰색 깜박임을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4cc6f2f9ad984ebc6d3d2447add71bb62647b8d" translate="yes" xml:space="preserve">
          <source>You can set the declaration handler with &lt;a href=&quot;qxmlreader#setDeclHandler&quot;&gt;QXmlReader::setDeclHandler&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qxmlreader#setDeclHandler&quot;&gt;QXmlReader :: setDeclHandler&lt;/a&gt; ()를 사용하여 선언 핸들러를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05912145b63c521292f33bf7559ee4928d827835" translate="yes" xml:space="preserve">
          <source>You can set the error handler with &lt;a href=&quot;qxmlreader#setErrorHandler&quot;&gt;QXmlReader::setErrorHandler&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qxmlreader#setErrorHandler&quot;&gt;QXmlReader :: setErrorHandler&lt;/a&gt; ()를 사용하여 오류 처리기를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b7cc3dbbd6fc0fb532d3b7160e390edd2a0fdc3" translate="yes" xml:space="preserve">
          <source>You can set the header labels of your model with &lt;a href=&quot;qstandarditemmodel#setHorizontalHeaderLabels&quot;&gt;setHorizontalHeaderLabels&lt;/a&gt;() and &lt;a href=&quot;qstandarditemmodel#setVerticalHeaderLabels&quot;&gt;setVerticalHeaderLabels&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstandarditemmodel#setHorizontalHeaderLabels&quot;&gt;setHorizontalHeaderLabels&lt;/a&gt; () 및 &lt;a href=&quot;qstandarditemmodel#setVerticalHeaderLabels&quot;&gt;setVerticalHeaderLabels&lt;/a&gt; () 를 사용하여 모델의 헤더 레이블을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8c5f5af6d81f24c0b9d7dc3dd149d19238e582b" translate="yes" xml:space="preserve">
          <source>You can set the lexical handler with &lt;a href=&quot;qxmlreader#setLexicalHandler&quot;&gt;QXmlReader::setLexicalHandler&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qxmlreader#setLexicalHandler&quot;&gt;QXmlReader :: setLexicalHandler&lt;/a&gt; ()를 사용하여 어휘 처리기를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f27c9772e5bf00c79a7ade341ac144ab67cff39" translate="yes" xml:space="preserve">
          <source>You can set the options by passing them to the &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; constructor, as in:</source>
          <target state="translated">다음과 같이 &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 생성자에 옵션을 전달하여 옵션을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="525ed87f242a2dfc97affbdc14a377fd2d47b9b6" translate="yes" xml:space="preserve">
          <source>You can set the options by passing them to the QRegularExpression constructor, as in:</source>
          <target state="translated">다음과 같이 QRegularExpression 생성자에 옵션을 전달하여 옵션을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8a2f1a56512120a51e815ff918b318d618f0c80" translate="yes" xml:space="preserve">
          <source>You can set the pattern string by passing a string to the &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; constructor:</source>
          <target state="translated">문자열을 &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; 생성자 에 전달하여 패턴 문자열을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f9094d563d0b4c029cf44fd319978a7dafbce61" translate="yes" xml:space="preserve">
          <source>You can set the pattern string by passing a string to the QRegularExpression constructor:</source>
          <target state="translated">QRegularExpression 생성자에 문자열을 전달하여 패턴 문자열을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bb831a239682c635328787f18c6699c62d03731" translate="yes" xml:space="preserve">
          <source>You can set the pixmap's transformation mode by calling &lt;a href=&quot;qgraphicspixmapitem#setTransformationMode&quot;&gt;setTransformationMode&lt;/a&gt;(). By default, &lt;a href=&quot;qt#TransformationMode-enum&quot;&gt;Qt::FastTransformation&lt;/a&gt; is used, which provides fast, non-smooth scaling. &lt;a href=&quot;qt#TransformationMode-enum&quot;&gt;Qt::SmoothTransformation&lt;/a&gt; enables &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::SmoothPixmapTransform&lt;/a&gt; on the painter, and the quality depends on the platform and viewport. The result is usually not as good as calling QPixmap::scale() directly. Call &lt;a href=&quot;qgraphicspixmapitem#transformationMode&quot;&gt;transformationMode&lt;/a&gt;() to get the current transformation mode for the item.</source>
          <target state="translated">&lt;a href=&quot;qgraphicspixmapitem#setTransformationMode&quot;&gt;setTransformationMode&lt;/a&gt; () 를 호출하여 픽스맵의 변환 모드를 설정할 수 있습니다 . 기본적으로 &lt;a href=&quot;qt#TransformationMode-enum&quot;&gt;Qt :: FastTransformation&lt;/a&gt; 이 사용되어 빠르고 부드러운 스케일링을 제공합니다. &lt;a href=&quot;qt#TransformationMode-enum&quot;&gt;Qt :: SmoothTransformation&lt;/a&gt; 은 페인터에서 &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: SmoothPixmapTransform&lt;/a&gt; 을 활성화 하며 품질은 플랫폼 및 뷰포트에 따라 다릅니다. 결과는 일반적으로 QPixmap :: scale ()을 직접 호출하는 것만 큼 좋지 않습니다. 이 항목의 현재 변형 모드를 얻으려면 &lt;a href=&quot;qgraphicspixmapitem#transformationMode&quot;&gt;transformationMode&lt;/a&gt; ()를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="501d972f0c763a1f23530002b75262ac3522ba33" translate="yes" xml:space="preserve">
          <source>You can set the prefix for the current namespace with &lt;a href=&quot;qxmlnamespacesupport#setPrefix&quot;&gt;setPrefix&lt;/a&gt;(), and get the list of current prefixes (or those for a given URI) with &lt;a href=&quot;qxmlnamespacesupport#prefixes&quot;&gt;prefixes&lt;/a&gt;(). The namespace URI is available from &lt;a href=&quot;qxmlnamespacesupport#uri&quot;&gt;uri&lt;/a&gt;(). Use &lt;a href=&quot;qxmlnamespacesupport#pushContext&quot;&gt;pushContext&lt;/a&gt;() to start a new namespace context, and &lt;a href=&quot;qxmlnamespacesupport#popContext&quot;&gt;popContext&lt;/a&gt;() to return to the previous namespace context. Use &lt;a href=&quot;qxmlnamespacesupport#splitName&quot;&gt;splitName&lt;/a&gt;() or &lt;a href=&quot;qxmlnamespacesupport#processName&quot;&gt;processName&lt;/a&gt;() to split a name into its prefix and local name.</source>
          <target state="translated">당신이 현재 네임 스페이스 접두사를 설정할 수 &lt;a href=&quot;qxmlnamespacesupport#setPrefix&quot;&gt;의 setPrefix&lt;/a&gt; ()와 함께 현재 접두사의 목록 (또는 지정된 URI에 대한 것) 얻을 &lt;a href=&quot;qxmlnamespacesupport#prefixes&quot;&gt;접두사를&lt;/a&gt; (). 네임 스페이스 URI는 &lt;a href=&quot;qxmlnamespacesupport#uri&quot;&gt;uri&lt;/a&gt; () 에서 사용 가능 합니다. &lt;a href=&quot;qxmlnamespacesupport#pushContext&quot;&gt;pushContext&lt;/a&gt; ()를 사용 하여 새 네임 스페이스 컨텍스트를 시작하고 &lt;a href=&quot;qxmlnamespacesupport#popContext&quot;&gt;popContext&lt;/a&gt; ()를 사용하여 이전 네임 스페이스 컨텍스트로 돌아갑니다. 사용 &lt;a href=&quot;qxmlnamespacesupport#splitName&quot;&gt;splitName&lt;/a&gt; () 또는 &lt;a href=&quot;qxmlnamespacesupport#processName&quot;&gt;processName는&lt;/a&gt; ()의 접두사와 로컬 이름에 이름을 분할합니다.</target>
        </trans-unit>
        <trans-unit id="e4fc45a6b2473832877a160ab302d6807988e85f" translate="yes" xml:space="preserve">
          <source>You can set the title of the current tab by changing the &lt;code&gt;currentTabText&lt;/code&gt; property in the &lt;b&gt;Property Editor&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;속성 편집기&lt;/b&gt; 에서 &lt;code&gt;currentTabText&lt;/code&gt; 속성 을 변경하여 현재 탭의 제목을 설정할 수 있습니다 .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="74535e003ccc9ba2595fed7caa1700c7b6eccdd2" translate="yes" xml:space="preserve">
          <source>You can set the type of flash effect used when an image is captured, and test to see if the flash hardware is ready to fire.</source>
          <target state="translated">이미지를 캡처 할 때 사용되는 플래시 효과 유형을 설정하고 플래시 하드웨어가 발광 할 준비가되었는지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f137e9e57f52d2939669adbf087cc5a5bbf48e31" translate="yes" xml:space="preserve">
          <source>You can set the value freely and use it in bindings. It is recommended to set it after installing translators in your application. By convention, an empty string means no translation from the language used in the source code is intended to occur.</source>
          <target state="translated">값을 자유롭게 설정하여 바인딩에 사용할 수 있습니다. 응용 프로그램에 변환기를 설치 한 후 설정하는 것이 좋습니다. 관례 상 빈 문자열은 소스 코드에 사용 된 언어의 번역이 발생하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f9b0cf759e143691dd680999440aa96acb9f13dc" translate="yes" xml:space="preserve">
          <source>You can set whether an item should be visible (i.e., drawn, and accepting events), by calling &lt;a href=&quot;qgraphicsitem#setVisible&quot;&gt;setVisible&lt;/a&gt;(). Hiding an item will also hide its children. Similarly, you can enable or disable an item by calling &lt;a href=&quot;qgraphicsitem#setEnabled&quot;&gt;setEnabled&lt;/a&gt;(). If you disable an item, all its children will also be disabled. By default, items are both visible and enabled. To toggle whether an item is selected or not, first enable selection by setting the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsSelectable&lt;/a&gt; flag, and then call &lt;a href=&quot;qgraphicsitem#setSelected&quot;&gt;setSelected&lt;/a&gt;(). Normally, selection is toggled by the scene, as a result of user interaction.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#setVisible&quot;&gt;setVisible&lt;/a&gt; () 을 호출하여 항목을 표시할지 (즉, 그리거나 이벤트를 수락할지) 여부를 설정할 수 있습니다 . 항목을 숨기면 해당 항목도 숨겨집니다. 마찬가지로 &lt;a href=&quot;qgraphicsitem#setEnabled&quot;&gt;setEnabled&lt;/a&gt; () 를 호출하여 항목을 활성화하거나 비활성화 할 수 있습니다 . 항목을 비활성화하면 모든 하위 항목도 비활성화됩니다. 기본적으로 항목은 표시되고 활성화되어 있습니다. 항목 선택 여부를 전환하려면 먼저 &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsSelectable&lt;/a&gt; 플래그 를 설정하여 선택을 활성화 한 다음 &lt;a href=&quot;qgraphicsitem#setSelected&quot;&gt;setSelected&lt;/a&gt; () 를 호출하십시오 . 일반적으로 사용자 상호 작용의 결과로 장면에 따라 선택이 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="537594b2231f28a3deecfdbc21909f1ef8f6f406" translate="yes" xml:space="preserve">
          <source>You can show the camera image in the correct orientation by rotating it by this value in the anti-clockwise direction.</source>
          <target state="translated">시계 반대 방향으로이 값을 돌려 카메라 이미지를 올바른 방향으로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe59b6e3ca32ebe78d47049b408385cf393e784a" translate="yes" xml:space="preserve">
          <source>You can simplify this as follows:</source>
          <target state="translated">다음과 같이이를 단순화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a06404eddddf8e8e822598e42ceb34ce5b362fb7" translate="yes" xml:space="preserve">
          <source>You can specify a background for the widget using the &lt;a href=&quot;stylesheet-reference#background-image-prop&quot;&gt;background-image&lt;/a&gt; property. By default, the background-image is drawn only for the area inside the border. This can be changed using the &lt;a href=&quot;stylesheet-reference#background-clip-prop&quot;&gt;background-clip&lt;/a&gt; property. You can use &lt;a href=&quot;stylesheet-reference#background-repeat-prop&quot;&gt;background-repeat&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#background-origin-prop&quot;&gt;background-origin&lt;/a&gt; to control the repetition and origin of the background image.</source>
          <target state="translated">&lt;a href=&quot;stylesheet-reference#background-image-prop&quot;&gt;background-image&lt;/a&gt; 특성을 사용하여 위젯의 배경을 지정할 수 있습니다 . 기본적으로 배경 이미지는 테두리 내부 영역에만 그려집니다. &lt;a href=&quot;stylesheet-reference#background-clip-prop&quot;&gt;background-clip&lt;/a&gt; 속성을 사용하여 변경할 수 있습니다 . &lt;a href=&quot;stylesheet-reference#background-repeat-prop&quot;&gt;background-repeat&lt;/a&gt; 및 &lt;a href=&quot;stylesheet-reference#background-origin-prop&quot;&gt;background-origin&lt;/a&gt; 을 사용하여 배경 이미지의 반복 및 원점을 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="718e160db2946755702f19463f17af150b18e133" translate="yes" xml:space="preserve">
          <source>You can specify additional attributes for each of your classes; see &lt;a href=&quot;#class-information-and-tuning&quot;&gt;Class Information and Tuning&lt;/a&gt; for details.</source>
          <target state="translated">각 클래스에 대한 추가 속성을 지정할 수 있습니다. 자세한 내용은 &lt;a href=&quot;#class-information-and-tuning&quot;&gt;수업 정보 및 조정&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8d2090cd25c3e8afd529dddbe52edb308c1bc274" translate="yes" xml:space="preserve">
          <source>You can specify additional attributes for each of your classes; see &lt;a href=&quot;activeqt-server#class-information-and-tuning&quot;&gt;Class Information and Tuning&lt;/a&gt; for details.</source>
          <target state="translated">각 클래스에 대해 추가 속성을 지정할 수 있습니다. 자세한 내용은 &lt;a href=&quot;activeqt-server#class-information-and-tuning&quot;&gt;클래스 정보 및 조정&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b5af68db237a73640f182aa7b9aa13362d81caee" translate="yes" xml:space="preserve">
          <source>You can specify at which point in a transition you want a &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt; to occur by using a &lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt; 을 사용하여 전환에서 &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt; 가 발생 하는 시점을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d9476a617816766245f880396d7d238125fcd37" translate="yes" xml:space="preserve">
          <source>You can specify at which point in a transition you want a ParentChange to occur by using a &lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt; 을 사용하여 전환에서 ParentChange를 발생시킬 지점을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40c520dc906259f6b7056389b23651a67bc1a89a" translate="yes" xml:space="preserve">
          <source>You can specify horizontal stretches in the layout using &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;Stretch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;Stretch를&lt;/a&gt; 사용하여 레이아웃에서 가로 스트레치를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="954c0bb4df9a1e5d02676daba55a5501f0cc67ed" translate="yes" xml:space="preserve">
          <source>You can specify multiple anchors. For example:</source>
          <target state="translated">여러 개의 앵커를 지정할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="649b8f026d76187333ff635ba408ca95c3825037" translate="yes" xml:space="preserve">
          <source>You can specify multiple import paths in the &lt;code&gt;QML2_IMPORT_PATH&lt;/code&gt; environment variable by joining them using the path separator. On Windows the path separator is a semicolon (;), on other platforms it is a colon (:). This means that you cannot specify resource paths or URLs in QML2_IMPORT_PATH, as they contain colons themselves. However, you can add resource paths and URLs by calling &lt;a href=&quot;qqmlengine#addImportPath&quot;&gt;QQmlEngine::addImportPath&lt;/a&gt;() programatically.</source>
          <target state="translated">경로 구분 기호를 사용하여 결합 하여 &lt;code&gt;QML2_IMPORT_PATH&lt;/code&gt; 환경 변수에 여러 가져 오기 경로를 지정할 수 있습니다 . Windows에서 경로 구분 기호는 세미콜론 (;)이고 다른 플랫폼에서는 콜론 (:)입니다. 즉, 콜론 자체가 포함되어 있으므로 QML2_IMPORT_PATH에 리소스 경로 또는 URL을 지정할 수 없습니다. 그러나 &lt;a href=&quot;qqmlengine#addImportPath&quot;&gt;QQmlEngine :: addImportPath&lt;/a&gt; ()를 프로그래밍 방식 으로 호출하여 리소스 경로 및 URL을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba992f5efd2aa266d426f02019458ae9bdacbac0" translate="yes" xml:space="preserve">
          <source>You can specify platform-specific arguments for the &lt;code&gt;-platform&lt;/code&gt; option. Place them after the platform plugin name following a colon as a comma-separated list. For example, &lt;code&gt;-platform windows:dialogs=xp,fontengine=freetype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-platform&lt;/code&gt; 옵션에 플랫폼 별 인수를 지정할 수 있습니다 . 콜론 뒤에 쉼표로 구분 된 목록으로 플랫폼 플러그인 이름 뒤에 배치하십시오. 예를 들어 &lt;code&gt;-platform windows:dialogs=xp,fontengine=freetype&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="72c855128b0a258b518be62635129d87b0262ff3" translate="yes" xml:space="preserve">
          <source>You can specify the foundry you want in the family name. The font f in the above example will be set to &quot;Helvetica [Cronyx]&quot;.</source>
          <target state="translated">가족 이름으로 원하는 파운드리를 지정할 수 있습니다. 위 예에서 글꼴 f는 &quot;Helvetica [Cronyx]&quot;로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="97d7388b49e277b7fa064eedd28dcd036aafece9" translate="yes" xml:space="preserve">
          <source>You can specify the minimum and maximum number of steps with &lt;a href=&quot;qprogressbar#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;() and &lt;a href=&quot;qprogressbar#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;. The current number of steps is set with &lt;a href=&quot;qprogressbar#value-prop&quot;&gt;setValue&lt;/a&gt;(). The progress bar can be rewound to the beginning with &lt;a href=&quot;qprogressbar#reset&quot;&gt;reset&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qprogressbar#minimum-prop&quot;&gt;setMinimum&lt;/a&gt; () 및 &lt;a href=&quot;qprogressbar#maximum-prop&quot;&gt;setMaximum으로&lt;/a&gt; 최소 및 최대 단계 수를 지정할 수 있습니다 . 현재 단계 수는 &lt;a href=&quot;qprogressbar#value-prop&quot;&gt;setValue&lt;/a&gt; ()로 설정됩니다 . 진행률 표시 줄은 &lt;a href=&quot;qprogressbar#reset&quot;&gt;재설정&lt;/a&gt; ()으로 시작 부분으로 되 감길 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="09db19075ad8b156e966f1e041867dcce11e53fd" translate="yes" xml:space="preserve">
          <source>You can specify which cell you want an item to occupy by setting the &lt;a href=&quot;qml-qtquick-layouts-layout#row-attached-prop&quot;&gt;Layout.row&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-layouts-layout#column-attached-prop&quot;&gt;Layout.column&lt;/a&gt; properties. You can also specify the row span or column span by setting the &lt;a href=&quot;qml-qtquick-layouts-layout#rowSpan-attached-prop&quot;&gt;Layout.rowSpan&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-layouts-layout#columnSpan-attached-prop&quot;&gt;Layout.columnSpan&lt;/a&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-layouts-layout#row-attached-prop&quot;&gt;Layout.row&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-layouts-layout#column-attached-prop&quot;&gt;Layout.column&lt;/a&gt; 속성 을 설정하여 항목을 차지할 셀을 지정할 수 있습니다 . &lt;a href=&quot;qml-qtquick-layouts-layout#rowSpan-attached-prop&quot;&gt;Layout.rowSpan&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-layouts-layout#columnSpan-attached-prop&quot;&gt;Layout.columnSpan&lt;/a&gt; 속성 을 설정하여 행 범위 또는 열 범위를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="75525ef430a89020b354daa9f8532488b21b4c78" translate="yes" xml:space="preserve">
          <source>You can split the text in a &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; object over two &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; objecs with &lt;a href=&quot;qdomtext#splitText&quot;&gt;splitText&lt;/a&gt;().</source>
          <target state="translated">당신은 텍스트 분할 할 수 있습니다 &lt;a href=&quot;qdomtext&quot;&gt;QDomText의&lt;/a&gt; 두 통해 개체를 &lt;a href=&quot;qdomtext&quot;&gt;QDomText의&lt;/a&gt; 와 objecs &lt;a href=&quot;qdomtext#splitText&quot;&gt;splitText&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="c2b3851c61fd6612d55d7ccd2804bd71bb43ee5a" translate="yes" xml:space="preserve">
          <source>You can split the text in a QDomText object over two QDomText objecs with &lt;a href=&quot;qdomtext#splitText&quot;&gt;splitText&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdomtext#splitText&quot;&gt;splitText&lt;/a&gt; () 를 사용하여 QDomText 개체의 텍스트를 두 개의 QDomText 개체에 걸쳐 분할 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad327e88a974203046ca8781003e7e7683bc02eb" translate="yes" xml:space="preserve">
          <source>You can start by reimplementing important functions: the protected &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;() function, as well as the public &lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;setGeometry&lt;/a&gt;() function. If you want your items to be aware of immediate geometry changes, you can also reimplement &lt;a href=&quot;qgraphicslayoutitem#updateGeometry&quot;&gt;updateGeometry&lt;/a&gt;().</source>
          <target state="translated">중요한 함수 인 protected &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt; () 함수와 public &lt;a href=&quot;qgraphicslayoutitem#setGeometry&quot;&gt;setGeometry&lt;/a&gt; () 함수 를 다시 구현하여 시작할 수 있습니다 . 항목에 즉각적인 지오메트리 변경 사항을 &lt;a href=&quot;qgraphicslayoutitem#updateGeometry&quot;&gt;알리려면 updateGeometry&lt;/a&gt; ()를 다시 구현할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f48dcea0a42f8ab8543a808b28c783a091b7108" translate="yes" xml:space="preserve">
          <source>You can start the service in the following ways:</source>
          <target state="translated">다음과 같은 방법으로 서비스를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de9fb3e5dc4bdb11bfd848fbd7aec0dcecfc0d5f" translate="yes" xml:space="preserve">
          <source>You can stop the thread by calling &lt;a href=&quot;qthread#exit&quot;&gt;exit&lt;/a&gt;() or &lt;a href=&quot;qthread#quit&quot;&gt;quit&lt;/a&gt;(). In extreme cases, you may want to forcibly &lt;a href=&quot;qthread#terminate&quot;&gt;terminate&lt;/a&gt;() an executing thread. However, doing so is dangerous and discouraged. Please read the documentation for &lt;a href=&quot;qthread#terminate&quot;&gt;terminate&lt;/a&gt;() and &lt;a href=&quot;qthread#setTerminationEnabled&quot;&gt;setTerminationEnabled&lt;/a&gt;() for detailed information.</source>
          <target state="translated">&lt;a href=&quot;qthread#exit&quot;&gt;exit&lt;/a&gt; () 또는 &lt;a href=&quot;qthread#quit&quot;&gt;quit&lt;/a&gt; () 를 호출하여 스레드를 중지 할 수 있습니다 . 극단적 인 경우 실행중인 스레드 를 강제로 &lt;a href=&quot;qthread#terminate&quot;&gt;종료&lt;/a&gt; () 할 수 있습니다 . 그러나 그렇게하는 것은 위험하고 낙담합니다. 자세한 내용은 &lt;a href=&quot;qthread#terminate&quot;&gt;종료&lt;/a&gt; () 및 &lt;a href=&quot;qthread#setTerminationEnabled&quot;&gt;setTerminationEnabled&lt;/a&gt; () 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be2c4b0caeedac7395bd8b3c6ff81289ac930fe1" translate="yes" xml:space="preserve">
          <source>You can store application-specific data in an item by calling &lt;a href=&quot;qstandarditem#setData&quot;&gt;setData&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstandarditem#setData&quot;&gt;setData&lt;/a&gt; () 를 호출하여 애플리케이션 특정 데이터를 항목에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b910a601c4af7fd7212a950bc191201daf6337da" translate="yes" xml:space="preserve">
          <source>You can subclass &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; to provide your own custom visual item that inherits these features.</source>
          <target state="translated">&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; 을 서브 클래 싱 하여 이러한 기능을 상속하는 사용자 지정 시각적 항목을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f3a170421f38c4dc3adb40ba9646a6aadb70ca9" translate="yes" xml:space="preserve">
          <source>You can subclass &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; and reimplement &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt;() to make a signal transition conditional; the event object passed to &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt;() will be a &lt;a href=&quot;qstatemachine-signalevent&quot;&gt;QStateMachine::SignalEvent&lt;/a&gt; object. Example:</source>
          <target state="translated">&lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; 을 서브 클래 싱 하고 &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt; ()를 다시 구현 하여 신호 전이를 조건부로 만들 수 있습니다. &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt; ()에 전달 된 이벤트 객체 는 &lt;a href=&quot;qstatemachine-signalevent&quot;&gt;QStateMachine :: SignalEvent&lt;/a&gt; 객체입니다. 예:</target>
        </trans-unit>
        <trans-unit id="fea1430e95c40f706f22596ff64ebaffe4075da2" translate="yes" xml:space="preserve">
          <source>You can subclass QQuickItem to provide your own custom visual item that inherits these features.</source>
          <target state="translated">QQuickItem을 하위 클래스로 지정하여 이러한 기능을 상속하는 사용자 지정 시각적 항목을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db4759b8997ff09d95ae714226235814cd6592db" translate="yes" xml:space="preserve">
          <source>You can subclass QSignalTransition and reimplement &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt;() to make a signal transition conditional; the event object passed to &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt;() will be a &lt;a href=&quot;qstatemachine-signalevent&quot;&gt;QStateMachine::SignalEvent&lt;/a&gt; object. Example:</source>
          <target state="translated">QSignalTransition을 하위 클래스로 만들고 &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt; ()를 다시 구현 하여 신호 전환을 조건부로 만들 수 있습니다. &lt;a href=&quot;qsignaltransition#eventTest&quot;&gt;eventTest&lt;/a&gt; ()에 전달 된 이벤트 객체 는 &lt;a href=&quot;qstatemachine-signalevent&quot;&gt;QStateMachine :: SignalEvent&lt;/a&gt; 객체가됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="58f239f2f830069c1c4d77bb69444a8db1a2fff0" translate="yes" xml:space="preserve">
          <source>You can subclass this item to provide a simple base implementation of accessors for the item's pen and brush.</source>
          <target state="translated">이 항목을 서브 클래 싱하여 항목의 펜 및 브러시에 대한 간단한 기본 접근자를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60c716caad8e7d2778e18e40ad7e38c076f85640" translate="yes" xml:space="preserve">
          <source>You can subclass this to create your own node Removed types for communication between your &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; and &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;QBackendNode&lt;/a&gt; subclasses when writing your own aspects.</source>
          <target state="translated">자신 만의 측면을 작성할 때 &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; 와 &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;QBackendNode&lt;/a&gt; 서브 클래스 간의 통신을 위해 제거 된 유형을 작성하기 위해 이를 서브 클래스 화할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acc75fdd8fd6afa45be93edac77d2458fc04e69e" translate="yes" xml:space="preserve">
          <source>You can subclass this to create your own node added types for communication between your &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; and &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;QBackendNode&lt;/a&gt; subclasses when writing your own aspects.</source>
          <target state="translated">자신의 측면을 작성할 때 &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; 와 &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;QBackendNode&lt;/a&gt; 서브 클래스 간의 통신을 위해 자체 노드 추가 유형을 작성하기 위해이 서브 클래스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0412b1c5b6731592d9d3200b77ab38d043ec4660" translate="yes" xml:space="preserve">
          <source>You can subclass this to create your own node update types for communication between your &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; and &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;QBackendNode&lt;/a&gt; subclasses when writing your own aspects.</source>
          <target state="translated">자신의 측면을 작성할 때 &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; 와 &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;QBackendNode&lt;/a&gt; 서브 클래스 간의 통신을 위해 고유 한 노드 업데이트 유형을 작성하기 위해 이를 서브 클래스 화할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aa069c1240eefe38bbb167743a5863f14ef57c7" translate="yes" xml:space="preserve">
          <source>You can test for any other platform-compiler combination as long as a specification exists for it in the &lt;code&gt;mkspecs&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;mkspecs&lt;/code&gt; 디렉토리 에 스펙이 존재하는 한 다른 플랫폼 컴파일러 조합을 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87ec76341e942e802dab1dee8381efdaeaec080a" translate="yes" xml:space="preserve">
          <source>You can test for the presence of a directory with a given name by using &lt;a href=&quot;qdir#exists-1&quot;&gt;exists&lt;/a&gt;(), and the properties of a directory can be tested with &lt;a href=&quot;qdir#isReadable&quot;&gt;isReadable&lt;/a&gt;(), &lt;a href=&quot;qdir#isAbsolute&quot;&gt;isAbsolute&lt;/a&gt;(), &lt;a href=&quot;qdir#isRelative&quot;&gt;isRelative&lt;/a&gt;(), and &lt;a href=&quot;qdir#isRoot&quot;&gt;isRoot&lt;/a&gt;().</source>
          <target state="translated">당신은 사용하여 지정된 이름의 디렉토리의 존재를 테스트 할 수 &lt;a href=&quot;qdir#exists-1&quot;&gt;있는&lt;/a&gt; () 및 디렉터리의 속성을 테스트 할 수 &lt;a href=&quot;qdir#isReadable&quot;&gt;있다 IsReadable&lt;/a&gt; (), &lt;a href=&quot;qdir#isAbsolute&quot;&gt;isAbsolute&lt;/a&gt; (), &lt;a href=&quot;qdir#isRelative&quot;&gt;isRelative&lt;/a&gt; () 및 &lt;a href=&quot;qdir#isRoot&quot;&gt;isRoot&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="15fb9de78ec7782b6466149f5b87497248fc96ae" translate="yes" xml:space="preserve">
          <source>You can test that the layout direction works as expected by running your Qt Quick application with the compiled translation file:</source>
          <target state="translated">컴파일 된 번역 파일로 Qt Quick 응용 프로그램을 실행하여 레이아웃 방향이 예상대로 작동하는지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00812d0f8c11f3fc3516aa7e70f42b843243429b" translate="yes" xml:space="preserve">
          <source>You can test to see if a filename matches a filter using the &lt;a href=&quot;qdir#match&quot;&gt;match&lt;/a&gt;() function.</source>
          <target state="translated">&lt;a href=&quot;qdir#match&quot;&gt;match&lt;/a&gt; () 함수를 사용하여 파일 이름이 필터와 일치하는지 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6312531000d3da9a533f9ddf0815740986d7d2d" translate="yes" xml:space="preserve">
          <source>You can test whether a region &lt;a href=&quot;qregion#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() or if it &lt;a href=&quot;qregion#contains&quot;&gt;contains&lt;/a&gt;() a &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; or &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;. The bounding rectangle can be found with &lt;a href=&quot;qregion#boundingRect&quot;&gt;boundingRect&lt;/a&gt;().</source>
          <target state="translated">당신은 테스트 할 수있는 지역 여부 &lt;a href=&quot;qregion#isEmpty&quot;&gt;IsEmpty 함수&lt;/a&gt; () 또는이 경우에 &lt;a href=&quot;qregion#contains&quot;&gt;포함&lt;/a&gt; ()는 &lt;a href=&quot;qpoint&quot;&gt;의 QPoint&lt;/a&gt; 또는 &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; . 경계 사각형은 &lt;a href=&quot;qregion#boundingRect&quot;&gt;boundingRect&lt;/a&gt; () 로 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c1c4315c0bc378bf62ac23e13b48e267fcbcc19" translate="yes" xml:space="preserve">
          <source>You can test your application in right-to-left layout direction simply by executing qmlscene with a command-line parameter &quot;-reverse&quot;:</source>
          <target state="translated">명령 줄 매개 변수 &quot;-reverse&quot;를 사용하여 qmlscene을 실행하여 오른쪽에서 왼쪽으로 레이아웃 방향으로 응용 프로그램을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f3f1ae19325fd4b0d6c991d5669344fa3e06604" translate="yes" xml:space="preserve">
          <source>You can test-run your application in the following way:</source>
          <target state="translated">다음과 같은 방법으로 애플리케이션을 테스트 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0273f1505901c477fe222bef8b3b97bb366d1206" translate="yes" xml:space="preserve">
          <source>You can then set start and end values for the property by calling &lt;a href=&quot;qvariantanimation#startValue-prop&quot;&gt;setStartValue&lt;/a&gt;() and &lt;a href=&quot;qvariantanimation#endValue-prop&quot;&gt;setEndValue&lt;/a&gt;(), and finally call &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;() to start the animation. &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; will interpolate the property of the target object and emit &lt;a href=&quot;qvariantanimation#valueChanged&quot;&gt;valueChanged&lt;/a&gt;(). To react to a change in the current value you have to reimplement the &lt;a href=&quot;qvariantanimation#updateCurrentValue&quot;&gt;updateCurrentValue&lt;/a&gt;() virtual function or connect to said signal.</source>
          <target state="translated">그런 다음 &lt;a href=&quot;qvariantanimation#startValue-prop&quot;&gt;setStartValue&lt;/a&gt; () 및 &lt;a href=&quot;qvariantanimation#endValue-prop&quot;&gt;setEndValue&lt;/a&gt; () 를 호출하여 속성의 시작 및 종료 값을 설정 하고 마지막으로 &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt; ()를 호출 하여 애니메이션을 시작할 수 있습니다. &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; 은 대상 객체의 속성을 보간하고 &lt;a href=&quot;qvariantanimation#valueChanged&quot;&gt;valueChanged&lt;/a&gt; ()를 내 보냅니다 . 현재 값의 변화에 ​​반응하려면 &lt;a href=&quot;qvariantanimation#updateCurrentValue&quot;&gt;updateCurrentValue&lt;/a&gt; () 가상 함수 를 다시 구현 하거나 해당 신호에 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="533a19ceaed0c55041bc2b762f87aeabe01beb53" translate="yes" xml:space="preserve">
          <source>You can then set start and end values for the property by calling &lt;a href=&quot;qvariantanimation#startValue-prop&quot;&gt;setStartValue&lt;/a&gt;() and &lt;a href=&quot;qvariantanimation#endValue-prop&quot;&gt;setEndValue&lt;/a&gt;(), and finally call &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;() to start the animation. QVariantAnimation will interpolate the property of the target object and emit &lt;a href=&quot;qvariantanimation#valueChanged&quot;&gt;valueChanged&lt;/a&gt;(). To react to a change in the current value you have to reimplement the &lt;a href=&quot;qvariantanimation#updateCurrentValue&quot;&gt;updateCurrentValue&lt;/a&gt;() virtual function or connect to said signal.</source>
          <target state="translated">그런 다음 &lt;a href=&quot;qvariantanimation#startValue-prop&quot;&gt;setStartValue&lt;/a&gt; () 및 &lt;a href=&quot;qvariantanimation#endValue-prop&quot;&gt;setEndValue&lt;/a&gt; () 를 호출하여 속성의 시작 및 종료 값을 설정 하고 마지막으로 &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt; ()를 호출 하여 애니메이션을 시작할 수 있습니다. QVariantAnimation은 대상 객체의 속성을 보간하고 &lt;a href=&quot;qvariantanimation#valueChanged&quot;&gt;valueChanged&lt;/a&gt; ()를 내 보냅니다 . 현재 값의 변화에 ​​대응하려면 &lt;a href=&quot;qvariantanimation#updateCurrentValue&quot;&gt;updateCurrentValue&lt;/a&gt; () 가상 함수 를 다시 구현 하거나 해당 신호에 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c616e87f19ac5c0914a43499950066248d36dd1" translate="yes" xml:space="preserve">
          <source>You can then use the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object to read and write settings in the file.</source>
          <target state="translated">그런 다음 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 객체를 사용 하여 파일의 설정을 읽고 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e17d147eac18331c21a5af0be0163f5314a47823" translate="yes" xml:space="preserve">
          <source>You can then use the &lt;code&gt;MyClass::Options&lt;/code&gt; type to store combinations of &lt;code&gt;MyClass::Option&lt;/code&gt; values.</source>
          <target state="translated">그런 다음 &lt;code&gt;MyClass::Options&lt;/code&gt; 유형을 사용하여 &lt;code&gt;MyClass::Option&lt;/code&gt; 값의 조합을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79ccb79478a6e43c454f01db587b37fb7a5498cd" translate="yes" xml:space="preserve">
          <source>You can then use the QSettings object to read and write settings in the file.</source>
          <target state="translated">그런 다음 QSettings 개체를 사용하여 파일의 설정을 읽고 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55032dcaa46022f2d15b540b9f30df6bf54bf111" translate="yes" xml:space="preserve">
          <source>You can then visualize the scene using &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;. When the scene changes, (e.g., when an item moves or is transformed) &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; emits the &lt;a href=&quot;qgraphicsscene#changed&quot;&gt;changed&lt;/a&gt;() signal. To remove an item, call &lt;a href=&quot;qgraphicsscene#removeItem&quot;&gt;removeItem&lt;/a&gt;().</source>
          <target state="translated">그런 다음 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView를&lt;/a&gt; 사용하여 장면을 시각화 할 수 있습니다 . 장면이 변경 될 때 (예 : 항목이 이동하거나 변형 될 때) &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 은 &lt;a href=&quot;qgraphicsscene#changed&quot;&gt;변경된&lt;/a&gt; () 신호를 내 보냅니다. 항목을 제거하려면 &lt;a href=&quot;qgraphicsscene#removeItem&quot;&gt;removeItem&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c5f7797fecb723a6aa2674097619c4d72f8ec92" translate="yes" xml:space="preserve">
          <source>You can then visualize the scene using &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;. When the scene changes, (e.g., when an item moves or is transformed) QGraphicsScene emits the &lt;a href=&quot;qgraphicsscene#changed&quot;&gt;changed&lt;/a&gt;() signal. To remove an item, call &lt;a href=&quot;qgraphicsscene#removeItem&quot;&gt;removeItem&lt;/a&gt;().</source>
          <target state="translated">그런 다음 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView를&lt;/a&gt; 사용하여 장면을 시각화 할 수 있습니다 . 장면이 변경되면 (예 : 항목이 이동하거나 변형 될 때) QGraphicsScene은 &lt;a href=&quot;qgraphicsscene#changed&quot;&gt;변경된&lt;/a&gt; () 신호를 내 보냅니다. 항목을 제거하려면 &lt;a href=&quot;qgraphicsscene#removeItem&quot;&gt;removeItem&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="21deb3744a2c5a790f179b8085dfab6eaec5b399" translate="yes" xml:space="preserve">
          <source>You can translate between cursor positions (characters from the start of the document) and pixel points using &lt;a href=&quot;qml-qtquick-controls-textarea#positionAt-method&quot;&gt;positionAt()&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-textarea#positionToRectangle-method&quot;&gt;positionToRectangle()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-textarea#positionAt-method&quot;&gt;positionAt ()&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls-textarea#positionToRectangle-method&quot;&gt;positionToRectangle ()을&lt;/a&gt; 사용하여 커서 위치 (문서 시작 부분의 문자)와 픽셀 지점 사이를 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7edba05df22b68fa9989704d404f68b2ae0d7832" translate="yes" xml:space="preserve">
          <source>You can translate between cursor positions (characters from the start of the document) and pixel points using &lt;a href=&quot;qml-qtquick-textedit#positionAt-method&quot;&gt;positionAt()&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-textedit#positionToRectangle-method&quot;&gt;positionToRectangle()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textedit#positionAt-method&quot;&gt;positionAt ()&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-textedit#positionToRectangle-method&quot;&gt;positionToRectangle ()을&lt;/a&gt; 사용하여 커서 위치 (문서 시작 부분의 문자)와 픽셀 지점 사이를 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fab47d620223f32c42ab9bd1208b60198c76d517" translate="yes" xml:space="preserve">
          <source>You can treat &lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; as any other &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, e.g., pause, resume, or add it to other animation groups.</source>
          <target state="translated">&lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; 을 다른 &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; 으로 취급 할 수 있습니다 ( 예 : 일시 중지, 재개 또는 다른 애니메이션 그룹에 추가).</target>
        </trans-unit>
        <trans-unit id="2be89812cc6c6e38a3453f69ebac178ce3c02cd3" translate="yes" xml:space="preserve">
          <source>You can treat QParallelAnimationGroup as any other &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, e.g., pause, resume, or add it to other animation groups.</source>
          <target state="translated">QParallelAnimationGroup을 다른 &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; 으로 취급 할 수 있습니다 ( 예 : 일시 중지, 재개 또는 다른 애니메이션 그룹에 추가).</target>
        </trans-unit>
        <trans-unit id="d7061251935593a0ad9ab3b56f3b978594cd4f18" translate="yes" xml:space="preserve">
          <source>You can try to abort the shutdown process by calling &lt;a href=&quot;qsessionmanager#cancel&quot;&gt;cancel&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsessionmanager#cancel&quot;&gt;cancel&lt;/a&gt; () 을 호출하여 종료 프로세스를 중단 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9b6e40539bcb8f70cb64e6937a16b41b28e5a84" translate="yes" xml:space="preserve">
          <source>You can tweak these options through the &lt;a href=&quot;qdebug#space&quot;&gt;space&lt;/a&gt;(), &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace&lt;/a&gt;() and &lt;a href=&quot;qdebug#quote&quot;&gt;quote&lt;/a&gt;(), &lt;a href=&quot;qdebug#noquote&quot;&gt;noquote&lt;/a&gt;() methods. Furthermore, &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream manipulators&lt;/a&gt; can be piped into a &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; stream.</source>
          <target state="translated">&lt;a href=&quot;qdebug#space&quot;&gt;space&lt;/a&gt; (), &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace&lt;/a&gt; () 및 &lt;a href=&quot;qdebug#quote&quot;&gt;quote&lt;/a&gt; (), &lt;a href=&quot;qdebug#noquote&quot;&gt;noquote&lt;/a&gt; () 메소드를 통해 이러한 옵션을 조정할 수 있습니다 . 또한 &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream 조작&lt;/a&gt; 자는 &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; 스트림 으로 파이프 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b43ce6b374982e39c03378ac0c36eecc37aba49" translate="yes" xml:space="preserve">
          <source>You can tweak these options through the &lt;a href=&quot;qdebug#space&quot;&gt;space&lt;/a&gt;(), &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace&lt;/a&gt;() and &lt;a href=&quot;qdebug#quote&quot;&gt;quote&lt;/a&gt;(), &lt;a href=&quot;qdebug#noquote&quot;&gt;noquote&lt;/a&gt;() methods. Furthermore, &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream manipulators&lt;/a&gt; can be piped into a QDebug stream.</source>
          <target state="translated">이러한 옵션은 &lt;a href=&quot;qdebug#space&quot;&gt;space&lt;/a&gt; (), &lt;a href=&quot;qdebug#nospace&quot;&gt;nospace&lt;/a&gt; () 및 &lt;a href=&quot;qdebug#quote&quot;&gt;quote&lt;/a&gt; (), &lt;a href=&quot;qdebug#noquote&quot;&gt;noquote&lt;/a&gt; () 메서드를 통해 조정할 수 있습니다 . 또한 &lt;a href=&quot;qtextstream#qtextstream-manipulators&quot;&gt;QTextStream 조작기&lt;/a&gt; 는 QDebug 스트림으로 파이프 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03e2a14e66cf60b677b4a2b39a6817c3ca8c8d53" translate="yes" xml:space="preserve">
          <source>You can unset the filter with a &lt;code&gt;nullptr&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;nullptr&lt;/code&gt; 인수를 사용 하여 필터를 설정 해제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ed7872149790215ce674d9307d0b6b25f7ce8c6e" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#config&quot;&gt;CONFIG += lrelease&lt;/a&gt; to automatically compile the files during the build, and &lt;a href=&quot;#config&quot;&gt;CONFIG += lrelease embed_translations&lt;/a&gt; to make them available in &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#config&quot;&gt;CONFIG + = lrelease&lt;/a&gt; 를 사용 하여 빌드 중에 파일을 자동으로 컴파일하고 &lt;a href=&quot;#config&quot;&gt;CONFIG + = lrelease embed_translations&lt;/a&gt; 를 사용하여 &lt;a href=&quot;resources&quot;&gt;Qt 자원 시스템&lt;/a&gt; 에서 파일 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29a450c775fd50d1338cdcb13fcca25beca8496b" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt;(), &lt;a href=&quot;#qInfo&quot;&gt;qInfo&lt;/a&gt;(), or &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;() to output errors to the console. This method will attempt to open the file indicated by the error and include additional contextual information.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt; (), &lt;a href=&quot;#qInfo&quot;&gt;qInfo&lt;/a&gt; () 또는 &lt;a href=&quot;#qWarning&quot;&gt;qWarning를&lt;/a&gt; 콘솔에 출력 오류 (). 이 메소드는 오류로 표시된 파일을 열려고 시도하며 추가 컨텍스트 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="e22b24a58103d556c2dba3733a03dc0fd1e8601a" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; as a base to write your own custom layout (e.g., a flowlayout), but it is more common to use one of its subclasses instead - &lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; or &lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;. When creating a custom layout, the following functions must be reimplemented as a bare minimum:</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout를&lt;/a&gt; 사용자 정의 레이아웃 (예를 들어, FlowLayout의)를 작성하는 기본으로하지만, 대신 그 서브 클래스 중 하나를 사용하는 것이 더 일반적이다 - &lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; 또는 &lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout을&lt;/a&gt; . 사용자 정의 레이아웃을 만들 때 다음 기능을 최소한으로 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4654d78a956150eda5d57c4ad822c1d465e2bf5" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qcamerainfo&quot;&gt;QCameraInfo&lt;/a&gt; to list available cameras and choose which one to use.</source>
          <target state="translated">&lt;a href=&quot;qcamerainfo&quot;&gt;QCameraInfo&lt;/a&gt; 를 사용하여 사용 가능한 카메라를 나열하고 사용할 카메라를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="039d558cfa5b1cf756fb3f81cb82a13cdb29919a" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; to provide auto completions in any Qt widget, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;. When the user starts typing a word, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; suggests possible ways of completing the word, based on a word list. The word list is provided as a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. (For simple applications, where the word list is static, you can pass a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; to &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;'s constructor.)</source>
          <target state="translated">&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 를 사용 하여 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 및 &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; 와 같은 Qt 위젯에서 자동 완성을 제공 할 수 있습니다 . 사용자가 단어를 입력하기 시작하면 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 는 단어 목록을 기반으로 단어를 완성 할 수있는 방법을 제안합니다. 단어 목록은 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 로 제공됩니다 . 단어 목록이 정적 인 간단한 응용 프로그램의 경우 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 를 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 의 생성자에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c35ea3d23034184a0b8efab2b0ab4cbe268b9c1" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qdiriterator&quot;&gt;QDirIterator&lt;/a&gt; to navigate entries of a directory one at a time. It is similar to &lt;a href=&quot;qdir#entryList&quot;&gt;QDir::entryList&lt;/a&gt;() and &lt;a href=&quot;qdir#entryInfoList&quot;&gt;QDir::entryInfoList&lt;/a&gt;(), but because it lists entries one at a time instead of all at once, it scales better and is more suitable for large directories. It also supports listing directory contents recursively, and following symbolic links. Unlike &lt;a href=&quot;qdir#entryList&quot;&gt;QDir::entryList&lt;/a&gt;(), &lt;a href=&quot;qdiriterator&quot;&gt;QDirIterator&lt;/a&gt; does not support sorting.</source>
          <target state="translated">&lt;a href=&quot;qdiriterator&quot;&gt;QDirIterator&lt;/a&gt; 를 사용하여 한 번에 하나씩 디렉토리 항목을 탐색 할 수 있습니다 . 그것은 유사하다 &lt;a href=&quot;qdir#entryList&quot;&gt;QDir :: entryList&lt;/a&gt; ()와 &lt;a href=&quot;qdir#entryInfoList&quot;&gt;QDir :: entryInfoList&lt;/a&gt; ()하지만, 한 번에 대신 모두 한 번에 항목을 나열하기 때문에, 더 나은 확장 및 대형 디렉토리에 더 적합합니다. 또한 디렉토리 내용을 재귀 적으로 나열하고 기호 링크를 따르는 것을 지원합니다. &lt;a href=&quot;qdir#entryList&quot;&gt;QDir :: entryList&lt;/a&gt; () 와 달리 &lt;a href=&quot;qdiriterator&quot;&gt;QDirIterator&lt;/a&gt; 는 정렬을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc8d467028b4b7cf14ea03c4ba582d933ccd4dd0" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;QImageWriter::supportedImageFormats&lt;/a&gt;() to find out which image formats are available to you.</source>
          <target state="translated">당신이 사용할 수있는 &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;QImageWriter :: supportedImageFormats을&lt;/a&gt; () 이미지 형식이 당신에게 사용할 수있는 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e436c4f4c27307cfef506f12630ba043633fa942" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qiodevice#isSequential&quot;&gt;isSequential&lt;/a&gt;() to determine the type of device.</source>
          <target state="translated">&lt;a href=&quot;qiodevice#isSequential&quot;&gt;isSequential&lt;/a&gt; ()을 사용하여 장치 유형을 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f3e1782106efe8a11932240ab047f8b05772534" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG += lrelease&lt;/a&gt; to automatically compile the files during the build, and &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG += lrelease embed_translations&lt;/a&gt; to make them available in &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG + = lrelease&lt;/a&gt; 를 사용 하여 빌드 중에 파일을 자동으로 컴파일하고 &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG + = lrelease embed_translations&lt;/a&gt; 를 사용하여 &lt;a href=&quot;resources&quot;&gt;Qt 리소스 시스템&lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c172e71b88bdd99f7775715d01673dd916af57a" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qml-qtmultimedia-mediaplayer&quot;&gt;MediaPlayer&lt;/a&gt; by itself to play audio content (like &lt;a href=&quot;qml-multimedia#audio&quot;&gt;Audio&lt;/a&gt;), or you can use it in conjunction with a &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; for rendering video.</source>
          <target state="translated">&lt;a href=&quot;qml-qtmultimedia-mediaplayer&quot;&gt;MediaPlayer&lt;/a&gt; 자체를 사용 하여 오디오 콘텐츠 (예 : &lt;a href=&quot;qml-multimedia#audio&quot;&gt;Audio&lt;/a&gt; ) 를 재생 하거나 비디오를 렌더링하기 위해 &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="467cd009dbad9b41621c4aadf86f232bd43a0916" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qtest#QVERIFY2&quot;&gt;QVERIFY2&lt;/a&gt;() when it is practical and valuable to put additional information into the test failure report.</source>
          <target state="translated">테스트 실패 보고서에 추가 정보를 입력하는 것이 실용적이고 가치있는 경우 &lt;a href=&quot;qtest#QVERIFY2&quot;&gt;QVERIFY2&lt;/a&gt; ()를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5f13cd0bcca7b9abf83a31f3599994c335304fa" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qInfo&quot;&gt;qInfo&lt;/a&gt;(), or &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt;() to output errors to the console. This method will attempt to open the file indicated by the error and include additional contextual information.</source>
          <target state="translated">당신은 사용할 수 있습니다 &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt; (), &lt;a href=&quot;qtglobal#qInfo&quot;&gt;qInfo&lt;/a&gt; () 또는 &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning를&lt;/a&gt; 콘솔에 출력 오류 (). 이 메서드는 오류로 표시된 파일을 열려고 시도하고 추가 컨텍스트 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="cbec7f2e94a58bf5fc22ff082a804745fd795648" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; to execute your code in a separate thread. &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; deletes the &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; automatically if &lt;a href=&quot;qrunnable#autoDelete&quot;&gt;autoDelete&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; (the default). Use &lt;a href=&quot;qrunnable#setAutoDelete&quot;&gt;setAutoDelete&lt;/a&gt;() to change the auto-deletion flag.</source>
          <target state="translated">&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 을 사용 하여 별도의 스레드에서 코드를 실행할 수 있습니다 . &lt;a href=&quot;qrunnable#autoDelete&quot;&gt;autoDelete&lt;/a&gt; ()가 &lt;code&gt;true&lt;/code&gt; (기본값)를 리턴 하면 &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 이 &lt;a href=&quot;qrunnable&quot;&gt;QRunnable을&lt;/a&gt; 자동으로 삭제합니다 . 자동 삭제 플래그를 변경 하려면 &lt;a href=&quot;qrunnable#setAutoDelete&quot;&gt;setAutoDelete&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ed6d4c97dcad47a9c398fd3f107013c60a2512b7" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; to execute your code in a separate thread. &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; deletes the QRunnable automatically if &lt;a href=&quot;qrunnable#autoDelete&quot;&gt;autoDelete&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; (the default). Use &lt;a href=&quot;qrunnable#setAutoDelete&quot;&gt;setAutoDelete&lt;/a&gt;() to change the auto-deletion flag.</source>
          <target state="translated">&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 을 사용 하여 별도의 스레드에서 코드를 실행할 수 있습니다 . &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 은 &lt;a href=&quot;qrunnable#autoDelete&quot;&gt;autoDelete&lt;/a&gt; ()가 &lt;code&gt;true&lt;/code&gt; (기본값)를 반환 하면 QRunnable을 자동으로 삭제합니다 . 사용 &lt;a href=&quot;qrunnable#setAutoDelete&quot;&gt;setAutoDelete는&lt;/a&gt; () 자동 삭제 플래그를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="3d684f30e46ebf4a7b9eec5c98b34f9d62f504a9" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;qwizard#setDefaultProperty&quot;&gt;QWizard::setDefaultProperty&lt;/a&gt;() to add entries to this table or to override existing entries.</source>
          <target state="translated">&lt;a href=&quot;qwizard#setDefaultProperty&quot;&gt;QWizard :: setDefaultProperty&lt;/a&gt; ()를 사용 하여이 테이블에 항목을 추가하거나 기존 항목을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cad13dd3a57f68ae879d203b503bdb0b29345cb" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Camera&lt;/code&gt; to capture images and movies from a camera, and manipulate the capture and processing settings that get applied to the images. To display the viewfinder you can use &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; with the Camera set as the source.</source>
          <target state="translated">&lt;code&gt;Camera&lt;/code&gt; 를 사용하여 카메라 에서 이미지와 동영상을 캡처하고 이미지에 적용되는 캡처 및 처리 설정을 조작 할 수 있습니다. 뷰 파인더를 표시하려면 카메라를 소스로 설정 한 상태에서 &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;비디오 출력&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="837838e2ce820bf75ab121ccec0f05d1c9892a5a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Radio&lt;/code&gt; to tune the radio and get information about the signal. You can also use the Radio to get information about tuning, for instance the frequency steps supported for tuning.</source>
          <target state="translated">&lt;code&gt;Radio&lt;/code&gt; 를 사용하여 라디오 를 조정하고 신호에 대한 정보를 얻을 수 있습니다 . 라디오를 사용하여 튜닝에 대한 정보 (예 : 튜닝에 지원되는 주파수 단계)를 얻을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="42340f1a42510869e329f5643655d9dcdad2ac62" translate="yes" xml:space="preserve">
          <source>You can use MediaPlayer by itself to play audio content (like &lt;a href=&quot;qml-multimedia#audio&quot;&gt;Audio&lt;/a&gt;), or you can use it in conjunction with a &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; for rendering video.</source>
          <target state="translated">MediaPlayer 자체를 사용하여 오디오 콘텐츠 (예 : &lt;a href=&quot;qml-multimedia#audio&quot;&gt;Audio&lt;/a&gt; ) 를 재생 하거나 &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; 과 함께 사용하여 비디오를 렌더링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6eee2299416722c87635a9898387fe74a8759e89" translate="yes" xml:space="preserve">
          <source>You can use QCompleter to provide auto completions in any Qt widget, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;. When the user starts typing a word, QCompleter suggests possible ways of completing the word, based on a word list. The word list is provided as a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. (For simple applications, where the word list is static, you can pass a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; to QCompleter's constructor.)</source>
          <target state="translated">QCompleter를 사용하여 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 및 &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; 와 같은 Qt 위젯에서 자동 완성을 제공 할 수 있습니다 . 사용자가 단어를 입력하기 시작하면 QCompleter는 단어 목록을 기반으로 가능한 단어 완성 방법을 제안합니다. 단어 목록은 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 로 제공됩니다 . (단어 목록이 정적 인 간단한 애플리케이션의 경우 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 를 QCompleter의 생성자에 전달할 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="e935719e9e34245ec9f8c11f6b03a7d9276fda83" translate="yes" xml:space="preserve">
          <source>You can use QDirIterator to navigate entries of a directory one at a time. It is similar to &lt;a href=&quot;qdir#entryList&quot;&gt;QDir::entryList&lt;/a&gt;() and &lt;a href=&quot;qdir#entryInfoList&quot;&gt;QDir::entryInfoList&lt;/a&gt;(), but because it lists entries one at a time instead of all at once, it scales better and is more suitable for large directories. It also supports listing directory contents recursively, and following symbolic links. Unlike &lt;a href=&quot;qdir#entryList&quot;&gt;QDir::entryList&lt;/a&gt;(), QDirIterator does not support sorting.</source>
          <target state="translated">QDirIterator를 사용하여 한 번에 하나씩 디렉토리 항목을 탐색 할 수 있습니다. 그것은 유사하다 &lt;a href=&quot;qdir#entryList&quot;&gt;QDir :: entryList&lt;/a&gt; ()와 &lt;a href=&quot;qdir#entryInfoList&quot;&gt;QDir :: entryInfoList&lt;/a&gt; ()하지만, 한 번에 대신 모두 한 번에 항목을 나열하기 때문에, 더 나은 확장 및 대형 디렉토리에 더 적합합니다. 또한 디렉토리 내용을 재귀 적으로 나열하고 기호 링크를 따르는 것을 지원합니다. &lt;a href=&quot;qdir#entryList&quot;&gt;QDir :: entryList&lt;/a&gt; () 와 달리 QDirIterator는 정렬을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="35ed8ef359dbf2399021a3a3484fa262c335556a" translate="yes" xml:space="preserve">
          <source>You can use QGraphicsLayout as a base to write your own custom layout (e.g., a flowlayout), but it is more common to use one of its subclasses instead - &lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; or &lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;. When creating a custom layout, the following functions must be reimplemented as a bare minimum:</source>
          <target state="translated">QGraphicsLayout을 기본으로 사용하여 사용자 정의 레이아웃 (예 : flowlayout)을 작성할 수 있지만 대신 하위 클래스 중 하나 인 &lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; 또는 &lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt; 을 사용하는 것이 더 일반적 입니다. 사용자 지정 레이아웃을 만들 때 다음 기능을 최소한으로 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="15e419a7bd733f4b5a68098a9b1fe7121c42462e" translate="yes" xml:space="preserve">
          <source>You can use QT_VERSION to use the latest Qt features where available.</source>
          <target state="translated">QT_VERSION을 사용하여 가능한 경우 최신 Qt 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fce60d65db5a6d85b7d46fd3bbc969f26eda0bb" translate="yes" xml:space="preserve">
          <source>You can use a</source>
          <target state="translated">당신은 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ad600827e05387796964ee3ecd86698c0f9c8c9c" translate="yes" xml:space="preserve">
          <source>You can use any combination of those values.</source>
          <target state="translated">이러한 값의 조합을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d07643d1c18dae7111d1158337941d6a4dd757f9" translate="yes" xml:space="preserve">
          <source>You can use any image file for IBL, but it is recommended to use 360&amp;ordm; HDR (High Dynamic Range) images. HDR images have a much higher dynamic range than for example JPEG or PNG images. A higher dynamic range provides more realistic lighting through a great range of luminance levels from very bright to very dark.</source>
          <target state="translated">IBL에는 모든 이미지 파일을 사용할 수 있지만 360&amp;ordm; HDR (High Dynamic Range) 이미지를 사용하는 것이 좋습니다. HDR 이미지는 예를 들어 JPEG 또는 PNG 이미지보다 훨씬 더 높은 동적 범위를 갖습니다. 더 높은 다이나믹 레인지는 매우 밝은 것부터 매우 어두운 것까지 광범위한 휘도 레벨을 통해보다 사실적인 조명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="49a645f65aac0f8256e6a17c73ba170356bb330d" translate="yes" xml:space="preserve">
          <source>You can use as many modifier flags as you want, except that Qt::TextSingleLine and Qt::TextWordWrap cannot be combined.</source>
          <target state="translated">Qt :: TextSingleLine 및 Qt :: TextWordWrap을 결합 할 수 없다는 점을 제외하고 원하는만큼 수정 자 플래그를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be1730e7d3a5d9ecff6c003e4ce1805bf265db70" translate="yes" xml:space="preserve">
          <source>You can use at most one horizontal and one vertical flag at a time. Qt::AlignCenter counts as both horizontal and vertical.</source>
          <target state="translated">한 번에 최대 하나의 가로 및 하나의 세로 플래그를 사용할 수 있습니다. Qt :: AlignCenter는 가로 및 세로로 계산합니다.</target>
        </trans-unit>
        <trans-unit id="d87ab61d5819f380ffa26baf7f50d51af942c083" translate="yes" xml:space="preserve">
          <source>You can use it to query information about the</source>
          <target state="translated">이 정보를 사용하여</target>
        </trans-unit>
        <trans-unit id="f1237401dace9a667726afffaa88d71c7cf2b859" translate="yes" xml:space="preserve">
          <source>You can use only one of the horizontal flags at a time. There is one two-dimensional flag:</source>
          <target state="translated">한 번에 하나의 가로 플래그 만 사용할 수 있습니다. 하나의 2 차원 플래그가 있습니다.</target>
        </trans-unit>
        <trans-unit id="002768cdff151f115bcdda2e619dd8a504d19c2c" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;qdesignerobjectinspectorinterface&quot;&gt;QDesignerObjectInspectorInterface&lt;/a&gt; to change the current form window selection. For example, when implementing a custom widget plugin:</source>
          <target state="translated">&lt;a href=&quot;qdesignerobjectinspectorinterface&quot;&gt;QDesignerObjectInspectorInterface&lt;/a&gt; 를 사용하여 현재 양식 창 선택을 변경할 수 있습니다 . 예를 들어, 사용자 정의 위젯 플러그인을 구현할 때 :</target>
        </trans-unit>
        <trans-unit id="5c9cb4d7d976aa600bf6fd7bb621062aedb827b7" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;qdir#isRelative&quot;&gt;isRelative&lt;/a&gt;() or &lt;a href=&quot;qdir#isAbsolute&quot;&gt;isAbsolute&lt;/a&gt;() functions to check if a &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; is using a relative or an absolute file path. Call &lt;a href=&quot;qdir#makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;() to convert a relative &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; to an absolute one.</source>
          <target state="translated">사용자는 사용 &lt;a href=&quot;qdir#isRelative&quot;&gt;isRelative&lt;/a&gt; () 또는 &lt;a href=&quot;qdir#isAbsolute&quot;&gt;isAbsolute&lt;/a&gt; 있는지 확인하는 () 함수 &lt;a href=&quot;qdir&quot;&gt;QDir는&lt;/a&gt; 상대 또는 절대 파일 경로를 사용한다. 상대 &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; 을 절대 값 으로 변환하려면 &lt;a href=&quot;qdir#makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="746a4b768bb57567a5c76949d903d88458dd83a3" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;qdir#isRelative&quot;&gt;isRelative&lt;/a&gt;() or &lt;a href=&quot;qdir#isAbsolute&quot;&gt;isAbsolute&lt;/a&gt;() functions to check if a QDir is using a relative or an absolute file path. Call &lt;a href=&quot;qdir#makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;() to convert a relative QDir to an absolute one.</source>
          <target state="translated">사용자는 사용 &lt;a href=&quot;qdir#isRelative&quot;&gt;isRelative&lt;/a&gt; () 또는 &lt;a href=&quot;qdir#isAbsolute&quot;&gt;isAbsolute&lt;/a&gt; QDir 상대 또는 절대 파일 경로를 사용하고 있는지 확인하는 () 함수. 상대 QDir을 절대 값으로 변환하려면 &lt;a href=&quot;qdir#makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="37ca6bd391b9ceecc6745b092b16d3419901ecf5" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;qml-qt3d-core-nodeinstantiator#objectAdded-signal&quot;&gt;objectAdded&lt;/a&gt; signal to respond to items being created.</source>
          <target state="translated">&lt;a href=&quot;qml-qt3d-core-nodeinstantiator#objectAdded-signal&quot;&gt;objectAdded&lt;/a&gt; 신호를 사용하여 작성중인 항목에 응답 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d4bee85bd664536d47a7ee70bc9c709eb3dd7e8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;qml-qtqml-instantiator#objectAdded-signal&quot;&gt;objectAdded&lt;/a&gt; signal to respond to items being created.</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-instantiator#objectAdded-signal&quot;&gt;objectAdded&lt;/a&gt; 신호를 사용하여 작성중인 항목에 응답 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f000d12484dae5c783a7da903de62c2af11dc0c" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;qml-qtqml-models-instantiator#objectAdded-signal&quot;&gt;objectAdded&lt;/a&gt; signal to respond to items being created.</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-models-instantiator#objectAdded-signal&quot;&gt;objectAdded&lt;/a&gt; 신호를 사용하여 생성중인 항목에 응답 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af6d16ffa1ac76df2cec7edbe655eebe0cb21f50" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;qsslsocket#supportsSsl&quot;&gt;QSslSocket::supportsSsl&lt;/a&gt;() static function to check for SSL support on the target device. First include the header:</source>
          <target state="translated">&lt;a href=&quot;qsslsocket#supportsSsl&quot;&gt;QSslSocket :: supportsSsl&lt;/a&gt; () 정적 함수를 사용하여 대상 장치에서 SSL 지원을 확인할 수 있습니다 . 먼저 헤더를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="88b99403d49c775c7e3654e599b46022213935c8" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;options&lt;/code&gt; to specify both general and mode-specific settings. Options that only apply to the Makefile mode are described in the &lt;a href=&quot;#makefilemode&quot;&gt;Makefile Mode Options&lt;/a&gt; section, whereas options that influence the creation of project files are described in the &lt;a href=&quot;#projectmode&quot;&gt;Project Mode Options&lt;/a&gt; section.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 을 사용하여 일반 및 모드 별 설정을 모두 지정할 수 있습니다 . Makefile 모드에만 적용되는 &lt;a href=&quot;#makefilemode&quot;&gt;옵션&lt;/a&gt; 은 Makefile 모드 옵션 섹션에 설명되어 있지만 프로젝트 파일 작성에 영향을주는 옵션은 &lt;a href=&quot;#projectmode&quot;&gt;프로젝트 모드 옵션&lt;/a&gt; 섹션에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ef51b30bf90c0f07ce1e4c6a480841cfcfd72d6" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;options&lt;/code&gt; to specify both general and mode-specific settings. Options that only apply to the Makefile mode are described in the &lt;a href=&quot;qmake-running#makefilemode&quot;&gt;Makefile Mode Options&lt;/a&gt; section, whereas options that influence the creation of project files are described in the &lt;a href=&quot;qmake-running#projectmode&quot;&gt;Project Mode Options&lt;/a&gt; section.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 을 사용하여 일반 및 모드 별 설정을 모두 지정할 수 있습니다 . Makefile 모드에만 적용되는 &lt;a href=&quot;qmake-running#makefilemode&quot;&gt;옵션&lt;/a&gt; 은 Makefile 모드 옵션 섹션에 설명되어있는 반면, 프로젝트 파일 생성에 영향을주는 옵션은 &lt;a href=&quot;qmake-running#projectmode&quot;&gt;프로젝트 모드 옵션&lt;/a&gt; 섹션에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e4b4f8afea973238dcec7489f4d0010ebba697b" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;qt.conf&lt;/code&gt; file to override paths or to specify arguments to be passed to the platform plugins.</source>
          <target state="translated">&lt;code&gt;qt.conf&lt;/code&gt; 파일을 사용하여 경로를 대체하거나 플랫폼 플러그인에 전달할 인수를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a1893fc4f4dfc3b01fdcc0c632cc5eea4a20265" translate="yes" xml:space="preserve">
          <source>You can use the QDesignerObjectInspectorInterface to change the current form window selection. For example, when implementing a custom widget plugin:</source>
          <target state="translated">QDesignerObjectInspectorInterface를 사용하여 현재 양식 창 선택을 변경할 수 있습니다. 예를 들어 사용자 정의 위젯 플러그인을 구현하는 경우 :</target>
        </trans-unit>
        <trans-unit id="15ddde95c04fab25abe51cbd99c6cab65a9e4a5e" translate="yes" xml:space="preserve">
          <source>You can use the build system to register the type in the type namespace</source>
          <target state="translated">빌드 시스템을 사용하여 유형 네임 스페이스에 유형을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fe9ec466f1fd6717fc31bec6cb3e9588d43b157" translate="yes" xml:space="preserve">
          <source>You can use the following command-line arguments while debugging to provide input for bug reports:</source>
          <target state="translated">디버깅하는 동안 다음 명령 줄 인수를 사용하여 버그 보고서에 대한 입력을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb2d9341e9000e4111d81fa279a5778c2940c008" translate="yes" xml:space="preserve">
          <source>You can use the keyword</source>
          <target state="translated">당신은 키워드를 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="d0b754cac208dba25f60ab395cece3752f16a8a1" translate="yes" xml:space="preserve">
          <source>You can use the mouse wheel to adjust any numeric property. For example if &lt;code&gt;property&lt;/code&gt; is set to &lt;code&gt;x&lt;/code&gt;, the &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;target&lt;/a&gt; will move horizontally as the wheel is rotated. The following properties have special behavior:</source>
          <target state="translated">마우스 휠을 사용하여 숫자 속성을 조정할 수 있습니다. 예를 들어 &lt;code&gt;property&lt;/code&gt; 이 &lt;code&gt;x&lt;/code&gt; 로 설정된 경우 바퀴가 회전 할 때 &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;대상&lt;/a&gt; 이 수평으로 이동합니다. 다음 속성에는 특별한 동작이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0d17032cb431c0614b6f37e8cd3b5adaf726b03" translate="yes" xml:space="preserve">
          <source>You can use the native key to access shared memory segments that have not been created by Qt, or to grant shared memory access to non-Qt applications.</source>
          <target state="translated">기본 키를 사용하여 Qt에 의해 생성되지 않은 공유 메모리 세그먼트에 액세스하거나 Qt 이외의 응용 프로그램에 공유 메모리 액세스를 부여 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef2008c6ca44aec7f010182734b257a26d6a8cd5" translate="yes" xml:space="preserve">
          <source>You can use the object returned to connect signals to the script functions, or to access the script engine directly.</source>
          <target state="translated">리턴 된 오브젝트를 사용하여 신호를 스크립트 기능에 연결하거나 스크립트 엔진에 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86729f5800a15fcaeb45f5d04bd8b4d85fb3f126" translate="yes" xml:space="preserve">
          <source>You can use the properties of &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; to change the appearance of the text as desired:</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-text&quot;&gt;텍스트&lt;/a&gt; 속성을 사용하여 원하는대로 텍스트 모양을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ef67821eca4cfab7748a951a5b6ec60ee117bfa" translate="yes" xml:space="preserve">
          <source>You can use the returned pointer to call functions directly through &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript::call&lt;/a&gt;(), to access the script engine directly, or to delete and thus unload the script.</source>
          <target state="translated">리턴 된 포인터를 사용하여 &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript :: call&lt;/a&gt; ()을 통해 직접 함수를 호출 하거나 스크립트 엔진에 직접 액세스하거나 스크립트를 삭제하여 언로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b76a623990e97980aae4083f33deda4c0551a65d" translate="yes" xml:space="preserve">
          <source>You can use the same model as a data source for multiple views. If the user edits the model through one of the views, the other views will reflect the changes immediately. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-tablemodel-example.html#&quot;&gt;Table Model&lt;/a&gt; example shows how it works.</source>
          <target state="translated">여러보기의 데이터 소스와 동일한 모델을 사용할 수 있습니다. 사용자가 뷰 중 하나를 통해 모델을 편집하면 다른 뷰에 변경 사항이 즉시 반영됩니다. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-tablemodel-example.html#&quot;&gt;표 모델&lt;/a&gt; 이 어떻게 작동하는지 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7687fe47652d668eefbeb693719e4fd64452abbd" translate="yes" xml:space="preserve">
          <source>You can use the same model as a data source for multiple views. If the user edits the model through one of the views, the other views will reflect the changes immediately. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-tablemodel-example.html&quot;&gt;Table Model&lt;/a&gt; example shows how it works.</source>
          <target state="translated">여러보기의 데이터 소스로 동일한 모델을 사용할 수 있습니다. 사용자가보기 중 하나를 통해 모델을 편집하면 다른보기에 변경 사항이 즉시 반영됩니다. &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-tablemodel-example.html&quot;&gt;표 모델&lt;/a&gt; 이 어떻게 작동하는지 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="494420d3c7f20a394cde468fb4da1ac76d866b8d" translate="yes" xml:space="preserve">
          <source>You can use the screenshot below as a guide to selecting the correct signal and slot.</source>
          <target state="translated">올바른 신호 및 슬롯을 선택하기위한 지침으로 아래 스크린 샷을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91937103458791ef2ad567f66cbed2b14c9fa655" translate="yes" xml:space="preserve">
          <source>You can use the services provided by Esri's ArcGIS Platform by subscribing to the ArcGIS Developer Program, at no charge. See the &quot;Essentials&quot; plan details here: {https://developers.arcgis.com/pricing/}{ArcGIS Developer Program Pricing}.</source>
          <target state="translated">Esri의 ArcGIS 플랫폼에서 제공하는 서비스는 ArcGIS Developer Program에 무료로 가입하여 사용할 수 있습니다. 여기에서 &quot;필수&quot;계획 세부 사항을 참조하십시오 : {https://developers.arcgis.com/pricing/}{ArcGIS 개발자 프로그램 가격}.</target>
        </trans-unit>
        <trans-unit id="cfac5ce6e4ff4cb41b45a30b5848877c3deaa285" translate="yes" xml:space="preserve">
          <source>You can use these keys with &lt;a href=&quot;qimage#text&quot;&gt;text&lt;/a&gt;() to list the image text for a certain key.</source>
          <target state="translated">이 키를 &lt;a href=&quot;qimage#text&quot;&gt;텍스트&lt;/a&gt; () 와 함께 사용 하여 특정 키의 이미지 텍스트를 나열 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="215f48184dda7508549b6a0f9b8c93ad14e2bfb8" translate="yes" xml:space="preserve">
          <source>You can use this function overload to notify &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; of changes to the background or the foreground of the scene. This function is commonly used for scenes with tile-based backgrounds to notify changes when &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; has enabled &lt;a href=&quot;qgraphicsview#CacheModeFlag-enum&quot;&gt;CacheBackground&lt;/a&gt;.</source>
          <target state="translated">이 기능 과부하를 사용하여 &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 에 장면의 배경 또는 전경 변경 사항을 알릴 수 있습니다 . 이 기능은 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 가 &lt;a href=&quot;qgraphicsview#CacheModeFlag-enum&quot;&gt;CacheBackground&lt;/a&gt; 를 활성화 했을 때 변경 사항을 알리기 위해 타일 기반 배경이있는 장면에 일반적으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="dedcab0cbbab74f2885c5821657419d34bed22ff" translate="yes" xml:space="preserve">
          <source>You can use this function to undo a previous &lt;a href=&quot;qformlayout#addRow&quot;&gt;addRow&lt;/a&gt;() or &lt;a href=&quot;qformlayout#insertRow&quot;&gt;insertRow&lt;/a&gt;():</source>
          <target state="translated">이 함수를 사용하여 이전 &lt;a href=&quot;qformlayout#addRow&quot;&gt;addRow&lt;/a&gt; () 또는 &lt;a href=&quot;qformlayout#insertRow&quot;&gt;insertRow&lt;/a&gt; () 를 실행 취소 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="33aa27fff52eaf54de650686d8d7070c00fcceb1" translate="yes" xml:space="preserve">
          <source>You can use this handle together with the native API to access extended information about the key.</source>
          <target state="translated">이 핸들을 기본 API와 함께 사용하여 키에 대한 확장 정보에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8e80ec48f32b10345a04b4265b0a9d538bd6747" translate="yes" xml:space="preserve">
          <source>You can use this handle, together with the native API, to access extended information about the certificate.</source>
          <target state="translated">이 핸들을 기본 API와 함께 사용하여 인증서에 대한 확장 정보에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78818a4894af933a98c19e423433ea329708ab81" translate="yes" xml:space="preserve">
          <source>You can use this information to present visual feedback - for example, drawing rectangles around areas of the camera frame that are in focus, or changing the color of a zone as it comes into focus.</source>
          <target state="translated">이 정보를 사용하여 초점이 맞은 카메라 프레임 영역 주위에 사각형을 그리거나 초점이 맞을 때 영역의 색을 변경하는 등 시각적 피드백을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="318efe2ac01df1e616a52b585fb318f7674800b7" translate="yes" xml:space="preserve">
          <source>You can use this macro in your own adaptors by placing it before your method's return value (which must be &quot;void&quot;) in the class declaration, as shown in the example:</source>
          <target state="translated">예제와 같이 클래스 선언에서 메소드의 반환 값 ( &quot;void&quot;여야 함) 앞에이 매크로를 배치하여 자체 어댑터에서이 매크로를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dc140c3120426223c0a9d65a82346f7c427fc7e" translate="yes" xml:space="preserve">
          <source>You can use this macro to specify information about a custom type</source>
          <target state="translated">이 매크로를 사용하여 사용자 정의 유형에 대한 정보를 지정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="c5e1cb12b367d7573d1ce8118c7607995942c481" translate="yes" xml:space="preserve">
          <source>You can use this property to display the name of the camera in a user interface.</source>
          <target state="translated">이 속성을 사용하여 사용자 인터페이스에 카메라 이름을 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95b7d97b36ebde6277680c400f87036276e39822" translate="yes" xml:space="preserve">
          <source>You can use this to pause the system, keeping it from spending any time updating, but you will need to resume it in order for additional particles to be generated by the system.</source>
          <target state="translated">이를 사용하여 시스템을 일시 중지하여 업데이트하는 데 시간이 걸리지 않도록 할 수 있지만 시스템에서 추가 입자를 생성하려면 시스템을 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="3e94d8030d7609d631ec79128d0a640be0b8a61a" translate="yes" xml:space="preserve">
          <source>You can use this to reliably release a semaphore to avoid dead-lock in the face of exceptions or early returns:</source>
          <target state="translated">예외 또는 조기 반품시 교착 상태를 피하기 위해이를 사용하여 세마포어를 안정적으로 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52928e5d11cae53f0d0e6a599f2ce9d5c104153c" translate="yes" xml:space="preserve">
          <source>You can use this variable if the meta objects have not changed and you still want to import a QML module with a newer minor version number. For example, &lt;code&gt;MyModule&lt;/code&gt; metaobjects are at &lt;code&gt;1.1&lt;/code&gt; level, but you want to import the module as &lt;code&gt;1.3&lt;/code&gt;.</source>
          <target state="translated">메타 객체가 변경되지 않았는데도 새로운 부 버전 번호로 QML 모듈을 가져 오려는 경우이 변수를 사용할 수 있습니다. 예를 들어, &lt;code&gt;MyModule&lt;/code&gt; MetaObjects는 &lt;code&gt;1.1&lt;/code&gt; 레벨이지만 모듈을 &lt;code&gt;1.3&lt;/code&gt; 으로 가져 오려고합니다 .</target>
        </trans-unit>
        <trans-unit id="ef32f71d29995dc099e9e0550352a64fa91741dd" translate="yes" xml:space="preserve">
          <source>You can use this variant of the &lt;code&gt;system&lt;/code&gt; function to obtain stdout from the command and assign it to a variable.</source>
          <target state="translated">이 &lt;code&gt;system&lt;/code&gt; 기능 변형을 사용 하여 명령에서 stdout을 가져 와서 변수에 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="982edc5a7c4569f697b00764fa7d2ed0fb303eb2" translate="yes" xml:space="preserve">
          <source>You can use worker objects by moving them to the thread using &lt;a href=&quot;qobject#moveToThread&quot;&gt;QObject::moveToThread&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qobject#moveToThread&quot;&gt;QObject :: moveToThread&lt;/a&gt; ()를 사용하여 작업자 객체를 스레드로 이동하여 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22b7f217850e078a70f38cfcd7d5beae14602e94" translate="yes" xml:space="preserve">
          <source>You can work around this restriction like this:</source>
          <target state="translated">이 제한을 다음과 같이 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59c20b6e45324db279a6473fdc62babbf88aac8f" translate="yes" xml:space="preserve">
          <source>You can write the XML representation of the node to a text stream with &lt;a href=&quot;qdomnode#save&quot;&gt;save&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qdomnode#save&quot;&gt;save&lt;/a&gt; () 를 사용하여 노드의 XML 표현을 텍스트 스트림에 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d713178f0a53a7626ecde7d683f77ac136abc280" translate="yes" xml:space="preserve">
          <source>You can, but not by just using the names &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; directly, because they are &lt;a href=&quot;#name-tests&quot;&gt;name tests&lt;/a&gt; although they look like boolean constants. The simple way to create the boolean values is to use the builtin functions &lt;code&gt;true()&lt;/code&gt; and &lt;code&gt;false()&lt;/code&gt; wherever you want to use &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. The other way is to invoke the boolean constructor:</source>
          <target state="translated">부울 상수처럼 보이지만 &lt;a href=&quot;#name-tests&quot;&gt;이름 테스트&lt;/a&gt; 이기 때문에 &lt;code&gt;true&lt;/code&gt; 및 &lt;code&gt;false&lt;/code&gt; 라는 이름을 직접 사용하는 것은 아닙니다 . 부울 값을 작성하는 간단한 방법은 &lt;code&gt;true&lt;/code&gt; 및 &lt;code&gt;false&lt;/code&gt; 를 사용하려는 경우 내장 함수 &lt;code&gt;true()&lt;/code&gt; 및 &lt;code&gt;false()&lt;/code&gt; 를 사용하는 것 입니다. 다른 방법은 부울 생성자를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ddb4147328438e465f695a90d1e3cb93097bbd40" translate="yes" xml:space="preserve">
          <source>You can, but not by just using the names &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; directly, because they are &lt;a href=&quot;xquery-introduction#name-tests&quot;&gt;name tests&lt;/a&gt; although they look like boolean constants. The simple way to create the boolean values is to use the builtin functions &lt;code&gt;true()&lt;/code&gt; and &lt;code&gt;false()&lt;/code&gt; wherever you want to use &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. The other way is to invoke the boolean constructor:</source>
          <target state="translated">부울 상수처럼 보이지만 &lt;a href=&quot;xquery-introduction#name-tests&quot;&gt;이름 테스트&lt;/a&gt; 이기 때문에 &lt;code&gt;true&lt;/code&gt; 및 &lt;code&gt;false&lt;/code&gt; 이름을 직접 사용하는 것만으로는 불가능합니다 . 부울 값을 만드는 간단한 방법은 &lt;code&gt;true&lt;/code&gt; 및 &lt;code&gt;false&lt;/code&gt; 를 사용할 때마다 내장 함수 &lt;code&gt;true()&lt;/code&gt; 및 &lt;code&gt;false()&lt;/code&gt; 를 사용하는 것 입니다. 다른 방법은 부울 생성자를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e3917f35dd7176257a89fe9a66ac1003457ea19d" translate="yes" xml:space="preserve">
          <source>You cannot directly instantiate &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; objects. Use &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; functions to do that.</source>
          <target state="translated">&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; 객체를 직접 인스턴스화 할 수 없습니다 . &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;이를&lt;/a&gt; 위해 QNetworkAccessManager 기능을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fcba05e7c2a297961f8a64b22e196f0b5fbf93b4" translate="yes" xml:space="preserve">
          <source>You cannot directly instantiate QNetworkReply objects. Use &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; functions to do that.</source>
          <target state="translated">QNetworkReply 객체를 직접 인스턴스화 할 수 없습니다. &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;이를&lt;/a&gt; 위해 QNetworkAccessManager 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e68e75a362caf08306d1cad0db2c07ffd09ae48" translate="yes" xml:space="preserve">
          <source>You cannot exit the process (by calling exit(), for instance) from this function. If you need to stop the program before it starts execution, your workaround is to emit &lt;a href=&quot;qprocess#finished&quot;&gt;finished&lt;/a&gt;() and then call exit().</source>
          <target state="translated">이 함수에서 프로세스를 종료 할 수 없습니다 (예 : exit ()를 호출하여). 프로그램이 실행을 시작하기 전에 중지해야하는 경우, 해결 방법은 &lt;a href=&quot;qprocess#finished&quot;&gt;finished&lt;/a&gt; () 를 방출 한 다음 exit ()를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ac1cb3a31f2882ed0dd1dcd455071ab7ac8c88cf" translate="yes" xml:space="preserve">
          <source>You cannot initialize</source>
          <target state="translated">초기화 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="e9ed8d7dbb21bc250ca01562d0251e74f6a99ebc" translate="yes" xml:space="preserve">
          <source>You cannot register an object as a child object of an object that was registered with &lt;a href=&quot;qdbusconnection#RegisterOption-enum&quot;&gt;ExportChildObjects&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qdbusconnection#RegisterOption-enum&quot;&gt;ExportChildObjects&lt;/a&gt; 에 등록 된 개체의 자식 개체로 개체를 등록 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="92e22994aa7f1ea4ab4c883ddfc7966ceb0cdae3" translate="yes" xml:space="preserve">
          <source>You cannot register an object as a child object of an object that was registered with &lt;a href=&quot;qdbusconnection#RegisterOption-enum&quot;&gt;QDBusConnection::ExportChildObjects&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qdbusconnection#RegisterOption-enum&quot;&gt;QDBusConnection :: ExportChildObjects&lt;/a&gt; 에 등록 된 오브젝트의 하위 오브젝트로 오브젝트를 등록 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="499027c2146be8f663f007e4f859ea2ab712d7a8" translate="yes" xml:space="preserve">
          <source>You cannot scroll while there is an active painter on the pixmap.</source>
          <target state="translated">픽스맵에 활성 화가가있는 동안에는 스크롤 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d04c1da56364eaa18395f05226c41ab34f5bc6cd" translate="yes" xml:space="preserve">
          <source>You clear a menu with &lt;a href=&quot;qmenu#clear&quot;&gt;clear&lt;/a&gt;() and remove individual action items with &lt;a href=&quot;qwidget#removeAction&quot;&gt;removeAction&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qmenu#clear&quot;&gt;clear&lt;/a&gt; ()를 사용 하여 메뉴를 지우고 &lt;a href=&quot;qwidget#removeAction&quot;&gt;removeAction&lt;/a&gt; ()을 사용 하여 개별 작업 항목을 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="55f26be15fd6b16bd1644e4555435460d34a9575" translate="yes" xml:space="preserve">
          <source>You control the initial position of toolbars by assigning them to a specific &lt;a href=&quot;qt#ToolBarArea-enum&quot;&gt;Qt::ToolBarArea&lt;/a&gt;. You can split an area by inserting a toolbar break - think of this as a line break in text editing - with &lt;code&gt;addToolBarBreak()&lt;/code&gt; or &lt;code&gt;insertToolBarBreak()&lt;/code&gt;. You can also restrict placement by the user with &lt;a href=&quot;qtoolbar#allowedAreas-prop&quot;&gt;QToolBar::setAllowedAreas&lt;/a&gt;() and &lt;a href=&quot;qtoolbar#movable-prop&quot;&gt;QToolBar::setMovable&lt;/a&gt;().</source>
          <target state="translated">툴바를 특정 &lt;a href=&quot;qt#ToolBarArea-enum&quot;&gt;Qt :: ToolBarArea&lt;/a&gt; 에 할당하여 툴바의 초기 위치를 제어합니다 . &lt;code&gt;addToolBarBreak()&lt;/code&gt; 또는 &lt;code&gt;insertToolBarBreak()&lt;/code&gt; 하여 도구 모음 나누기를 삽입하여 영역을 분할 할 수 있습니다. 텍스트 편집에서이를 줄 바꿈으로 생각하십시오 . &lt;a href=&quot;qtoolbar#allowedAreas-prop&quot;&gt;QToolBar :: setAllowedAreas&lt;/a&gt; () 및 &lt;a href=&quot;qtoolbar#movable-prop&quot;&gt;QToolBar :: setMovable&lt;/a&gt; () 을 사용하여 사용자가 배치를 제한 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f2409a7e98203e72bb811f61a7dc0f47474a8f1" translate="yes" xml:space="preserve">
          <source>You create a message handler by subclassing &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; and implementing &lt;a href=&quot;qabstractmessagehandler#handleMessage&quot;&gt;handleMessage&lt;/a&gt;(). You then pass a pointer to an instance of your subclass to any classes that must generate messages. The messages are sent to the message handler via the &lt;a href=&quot;qabstractmessagehandler#message&quot;&gt;message&lt;/a&gt;() function, which forwards them to your handleMessge().</source>
          <target state="translated">&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; 를 서브 클래 싱 하고 &lt;a href=&quot;qabstractmessagehandler#handleMessage&quot;&gt;handleMessage&lt;/a&gt; ()를 구현 하여 메시지 핸들러를 작성합니다 . 그런 다음 서브 클래스 인스턴스에 대한 포인터를 메시지를 생성해야하는 모든 클래스에 전달합니다. 메시지는 &lt;a href=&quot;qabstractmessagehandler#message&quot;&gt;message&lt;/a&gt; () 함수 를 통해 메시지 핸들러로 전송되며,이 메시지는 handleMessge ()로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="9fb7837b4830d03ee2b4525881487245ec84f6b3" translate="yes" xml:space="preserve">
          <source>You create a message handler by subclassing QAbstractMessageHandler and implementing &lt;a href=&quot;qabstractmessagehandler#handleMessage&quot;&gt;handleMessage&lt;/a&gt;(). You then pass a pointer to an instance of your subclass to any classes that must generate messages. The messages are sent to the message handler via the &lt;a href=&quot;qabstractmessagehandler#message&quot;&gt;message&lt;/a&gt;() function, which forwards them to your handleMessge().</source>
          <target state="translated">QAbstractMessageHandler를 서브 클래 싱하고 &lt;a href=&quot;qabstractmessagehandler#handleMessage&quot;&gt;handleMessage&lt;/a&gt; ()를 구현하여 메시지 핸들러를 만듭니다 . 그런 다음 메시지를 생성해야하는 모든 클래스에 하위 클래스의 인스턴스에 대한 포인터를 전달합니다. 메시지는 &lt;a href=&quot;qabstractmessagehandler#message&quot;&gt;message&lt;/a&gt; () 함수 를 통해 메시지 핸들러로 전송되며 ,이 함수는 handleMessge ()로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="5df10e3457edf29658b60a0211b9b020079eda81" translate="yes" xml:space="preserve">
          <source>You create user interface components with</source>
          <target state="translated">당신은 사용자 인터페이스 구성 요소를 만들</target>
        </trans-unit>
        <trans-unit id="c7d4ad3cfdb79a5c40b925e94376ef9f121ca51c" translate="yes" xml:space="preserve">
          <source>You do not need to use this function to build file paths. If you always use &quot;/&quot;, Qt will translate your paths to conform to the underlying operating system. If you want to display paths to the user using their operating system's separator use &lt;a href=&quot;qdir#toNativeSeparators&quot;&gt;toNativeSeparators&lt;/a&gt;().</source>
          <target state="translated">파일 경로를 빌드하기 위해이 기능을 사용할 필요는 없습니다. 항상 &quot;/&quot;를 사용하면 Qt는 기본 운영 체제에 맞게 경로를 변환합니다. 운영 체제의 구분 기호를 사용하여 사용자에게 경로를 표시하려면 &lt;a href=&quot;qdir#toNativeSeparators&quot;&gt;toNativeSeparators&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ca713e537b7e2c8567d7ddcf3875eb2f4d1516b" translate="yes" xml:space="preserve">
          <source>You don't</source>
          <target state="translated">당신은하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b86c42109ee1b8326a8d006159abb691a68b6d86" translate="yes" xml:space="preserve">
          <source>You don't normally need to use this class; &lt;a href=&quot;qpicture#load&quot;&gt;QPicture::load&lt;/a&gt;(), &lt;a href=&quot;qpicture#save&quot;&gt;QPicture::save&lt;/a&gt;().</source>
          <target state="translated">일반적으로이 클래스를 사용할 필요는 없습니다. &lt;a href=&quot;qpicture#load&quot;&gt;QPicture :: load&lt;/a&gt; (), &lt;a href=&quot;qpicture#save&quot;&gt;QPicture :: save&lt;/a&gt; ()입니다.</target>
        </trans-unit>
        <trans-unit id="9f7ce3e0227782dd79c5088ece448fcb5e59897d" translate="yes" xml:space="preserve">
          <source>You don't normally need to use this function if you use &lt;a href=&quot;qxmlinputsource#next&quot;&gt;next&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qxmlinputsource#next&quot;&gt;다음&lt;/a&gt; () 을 사용하는 경우 일반적으로이 기능을 사용할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="0e50c9ac77ae9190750c02fa799472fb6f5e2c29" translate="yes" xml:space="preserve">
          <source>You have fully transparent pixels in your image next to rather opaque pixels.</source>
          <target state="translated">이미지에 불투명 한 픽셀 옆에 완전히 투명한 픽셀이 있습니다.</target>
        </trans-unit>
        <trans-unit id="12c8681f37bda8cd65bcfb3bf444b46a940d4a0c" translate="yes" xml:space="preserve">
          <source>You have to create coclasses to be able to connect to signals of the subobject. Note that the constructor deletes the interface object, so the following will cause a segmentation fault:</source>
          <target state="translated">하위 오브젝트의 신호에 연결할 수 있도록 코 클래스를 작성해야합니다. 생성자가 인터페이스 객체를 삭제하므로 다음과 같은 경우 세그먼트 화 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0cc079a71e9ba96ed6db5dfb63635f981c368e49" translate="yes" xml:space="preserve">
          <source>You have to support legacy applications that depend on features that are absent in the Wayland protocol for security and simplicity.</source>
          <target state="translated">보안 및 단순성을 위해 Wayland 프로토콜에없는 기능에 의존하는 레거시 애플리케이션을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="f1458d52b0c6aa2d0b3340a300d77b286ae089f0" translate="yes" xml:space="preserve">
          <source>You have to support legacy applications that use a UI toolkit that doesn't run on Wayland at all. In some cases, you may be able to work around this by running those applications on &lt;a href=&quot;https://wayland.freedesktop.org/xserver.html&quot;&gt;XWayland&lt;/a&gt; instead.</source>
          <target state="translated">Wayland에서 전혀 실행되지 않는 UI 툴킷을 사용하는 레거시 애플리케이션을 지원해야합니다. 경우에 따라 &lt;a href=&quot;https://wayland.freedesktop.org/xserver.html&quot;&gt;XWayland&lt;/a&gt; 에서 해당 응용 프로그램을 실행 하여이 문제 를 해결할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2a7878f65b4c8423d6636f8dc85003cac5247c8" translate="yes" xml:space="preserve">
          <source>You may also pass assignments on the command line in this mode. When doing so, these assignments will be placed last in the generated project file.</source>
          <target state="translated">이 모드에서 명령 행에 할당을 전달할 수도 있습니다. 이렇게하면 이러한 할당이 생성 된 프로젝트 파일의 마지막에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="dd42a9eef443d8c4d140e12b74e41c4862eed097" translate="yes" xml:space="preserve">
          <source>You may also pass qmake assignments on the command line. They are processed before all of the files specified. For example, the following command generates a Makefile from test.pro:</source>
          <target state="translated">명령 행에서 qmake 할당을 전달할 수도 있습니다. 지정된 모든 파일보다 먼저 처리됩니다. 예를 들어 다음 명령은 test.pro에서 Makefile을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2c99d27b47bf697104f70eb05b8e7f5a51dd8cb7" translate="yes" xml:space="preserve">
          <source>You may also register the revision of a base class that your type depends upon using the &lt;a href=&quot;qqmlengine#qmlRegisterRevision&quot;&gt;qmlRegisterRevision&lt;/a&gt;() function:</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#qmlRegisterRevision&quot;&gt;qmlRegisterRevision&lt;/a&gt; () 함수를 사용하여 유형에 따라 달라지는 기본 클래스의 개정판을 등록 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a109df35ddb507cef40a0f29f2cf72055cb5aed" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;:&lt;/code&gt; operator to perform single line conditional assignments. For example:</source>
          <target state="translated">&lt;code&gt;:&lt;/code&gt; 연산자를 사용하여 한 줄 조건부 할당을 수행 할 수도 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="52c18bdf4a878437501d162fdd12d45385d7ee1f" translate="yes" xml:space="preserve">
          <source>You may be confused about how the different pixel metrics, sub element rectangles, and sub control rectangles should be used when examining the trees. If you are in doubt after reading the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; enum descriptions, we suggest that you examine the &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; implementation.</source>
          <target state="translated">트리를 검사 할 때 다른 픽셀 메트릭, 하위 요소 사각형 및 하위 제어 사각형을 어떻게 사용해야하는지 혼동 될 수 있습니다. &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; 열거 형 설명 을 읽은 후에 확실하지 않은 경우 &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; 구현 을 검사하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="2171a359ff76ce0b9770c322b0d597c593fd19f2" translate="yes" xml:space="preserve">
          <source>You may be required to also reimplement some of the less common event handlers:</source>
          <target state="translated">덜 일반적인 이벤트 처리기 중 일부를 다시 구현해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a95926d1863e8204c9c12cfdfab08548871cd2ea" translate="yes" xml:space="preserve">
          <source>You may call setCornerWidget() with the same widget at different times.</source>
          <target state="translated">다른 시간에 동일한 위젯으로 setCornerWidget ()을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d549a1251c3732046f6775fc70f600886a5d0da" translate="yes" xml:space="preserve">
          <source>You may call setSideWidget() with the same widget at different times.</source>
          <target state="translated">다른 시간에 동일한 위젯으로 setSideWidget ()을 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edecf9608d62563ba0fb6d3cd0b11319fcd5e7c8" translate="yes" xml:space="preserve">
          <source>You may have as many ParticleSystems as you want subject to this constraint, so the logical separation is to have one &lt;a href=&quot;qml-qtquick-particles-particlesystem&quot;&gt;ParticleSystem&lt;/a&gt; for all the types that you want to interact, or just one if the number of types is small and they are easily kept under control..</source>
          <target state="translated">이 제약 조건에 따라 원하는 수의 ParticleSystem을 가질 수 있으므로 논리적 분리는 상호 작용하려는 모든 유형에 대해 하나의 &lt;a href=&quot;qml-qtquick-particles-particlesystem&quot;&gt;ParticleSystem&lt;/a&gt; 을 갖거나 유형의 수가 적고 쉽게 제어 할 수있는 경우에 하나의 ParticleSystem 을 갖는 것입니다. ..</target>
        </trans-unit>
        <trans-unit id="24b407e3c31fd85799a3ada190394cc19217d40a" translate="yes" xml:space="preserve">
          <source>You may need to also check if any specific features are supported.</source>
          <target state="translated">특정 기능이 지원되는지 확인해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="58d5d0e07849cce2d508d2c56f794c1a5a69cda2" translate="yes" xml:space="preserve">
          <source>You may notice that the scrollbar is slightly different from Java's, as it has two line up indicators. We have done this to show that you can have two separate bounding rectangles for a single sub control. The scroll bar is an example of a widget that is entirely implemented by the Java style - &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; is not involved in the drawing.</source>
          <target state="translated">스크롤 막대에는 두 개의 라인업 표시기가 있으므로 Java와 약간 다릅니다. 단일 하위 컨트롤에 대해 두 개의 별도 경계 사각형을 가질 수 있음을 보여주기 위해이 작업을 수행했습니다. 스크롤 막대는 Java 스타일로 완전히 구현 된 위젯의 예입니다. &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; 은 도면에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="25da71464a9939162b90ac50f46f21d56c8bd0ae" translate="yes" xml:space="preserve">
          <source>You may set the &lt;code&gt;cacheBuffer&lt;/code&gt; property of a view to allow asynchronous creation and buffering of delegates outside of the visible area. Utilizing a &lt;code&gt;cacheBuffer&lt;/code&gt; is recommended for view delegates that are non-trivial and unlikely to be created within a single frame.</source>
          <target state="translated">표시 영역 외부에서 대리자의 비동기 생성 및 버퍼링을 허용하도록 뷰 의 &lt;code&gt;cacheBuffer&lt;/code&gt; 속성을 설정할 수 있습니다. 사소하지 않고 단일 프레임 내에 생성 될 가능성이없는 뷰 델리게이트 에는 &lt;code&gt;cacheBuffer&lt;/code&gt; 를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6719227d9cf4b840163caac6ddbe47efcd89dbb3" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;qsensorgesturemanager&quot;&gt;QSensorGestureManager&lt;/a&gt; to obtain the systems known sensor gesture ids.</source>
          <target state="translated">&lt;a href=&quot;qsensorgesturemanager&quot;&gt;QSensorGestureManager&lt;/a&gt; 를 사용하여 시스템에 알려진 센서 제스처 ID를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee945d5da5e2810e70ce35e83db3f801660d8df1" translate="yes" xml:space="preserve">
          <source>You may want to make your custom style available for use in other applications, which may not be yours and hence not available for you to recompile. The Qt Plugin system makes it possible to create styles as plugins. Styles created as plugins are loaded as shared objects at runtime by Qt itself. Please refer to the &lt;a href=&quot;plugins-howto&quot;&gt;Qt Plugin&lt;/a&gt; documentation for more information on how to go about creating a style plugin.</source>
          <target state="translated">다른 응용 프로그램에서 사용자 정의 스타일을 사용 가능하게 만들 수 있습니다.이 스타일은 사용자의 스타일이 아니므로 다시 컴파일 할 수 없습니다. Qt 플러그인 시스템을 사용하면 스타일을 플러그인으로 만들 수 있습니다. 플러그인으로 생성 된 스타일은 Qt 자체에 의해 런타임에 공유 객체로로드됩니다. 스타일 플러그인 생성 방법에 대한 자세한 내용 은 &lt;a href=&quot;plugins-howto&quot;&gt;Qt 플러그인&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="643abeae8bf01648c0c3915b57f89242ef09e500" translate="yes" xml:space="preserve">
          <source>You may wish to read/write your own raw binary data to/from the data stream directly. Data may be read from the stream into a preallocated &lt;code&gt;char *&lt;/code&gt; using &lt;a href=&quot;qdatastream#readRawData&quot;&gt;readRawData&lt;/a&gt;(). Similarly data can be written to the stream using &lt;a href=&quot;qdatastream#writeRawData&quot;&gt;writeRawData&lt;/a&gt;(). Note that any encoding/decoding of the data must be done by you.</source>
          <target state="translated">데이터 스트림에서 직접 또는 자신의 원시 이진 데이터를 읽고 쓸 수 있습니다. &lt;a href=&quot;qdatastream#readRawData&quot;&gt;readRawData&lt;/a&gt; ()를 사용하여 스트림에서 미리 할당 된 &lt;code&gt;char *&lt;/code&gt; 로 데이터를 읽을 수 있습니다 . 마찬가지로 &lt;a href=&quot;qdatastream#writeRawData&quot;&gt;writeRawData&lt;/a&gt; ()를 사용하여 스트림에 데이터를 쓸 수 있습니다 . 데이터의 모든 인코딩 / 디코딩은 사용자가 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="023b7411c041871a6ae4ff0b52b5dca039b6dc78" translate="yes" xml:space="preserve">
          <source>You might also make use of the &lt;code&gt;Active&lt;/code&gt; mode, perhaps making your widget &lt;code&gt;Active&lt;/code&gt; when the mouse is over the widget (see &lt;a href=&quot;qwidget#enterEvent&quot;&gt;QWidget::enterEvent&lt;/a&gt;()), while the mouse is pressed pending the release that will activate the function, or when it is the currently selected item. If the widget can be toggled, the &quot;On&quot; mode might be used to draw a different icon.</source>
          <target state="translated">마우스가 위젯 위에있을 때 ( &lt;a href=&quot;qwidget#enterEvent&quot;&gt;QWidget :: enterEvent&lt;/a&gt; () 참조), 기능을 활성화 할 릴리스를 마우스가 눌렀을 때 또는 활성화 될 때 위젯을 &lt;code&gt;Active&lt;/code&gt; 상태로 만드는 &lt;code&gt;Active&lt;/code&gt; 모드를 사용할 수도 있습니다. 현재 선택된 항목 위젯을 토글 할 수있는 경우 &quot;켜기&quot;모드를 사용하여 다른 아이콘을 그릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec69a9566d2e2b67277f6ba7d1de741cdf227b79" translate="yes" xml:space="preserve">
          <source>You might prefer to use &lt;a href=&quot;qstring#indexOf&quot;&gt;QString::indexOf&lt;/a&gt;(), &lt;a href=&quot;qstring#contains&quot;&gt;QString::contains&lt;/a&gt;(), or even &lt;a href=&quot;qstringlist#filter&quot;&gt;QStringList::filter&lt;/a&gt;(). To replace matches use &lt;a href=&quot;qstring#replace&quot;&gt;QString::replace&lt;/a&gt;().</source>
          <target state="translated">당신이 사용하는 것을 선호 할 수 &lt;a href=&quot;qstring#indexOf&quot;&gt;QString :: 같이 IndexOf&lt;/a&gt; () &lt;a href=&quot;qstring#contains&quot;&gt;QString이 :: 포함&lt;/a&gt; ) (, 또는 &lt;a href=&quot;qstringlist#filter&quot;&gt;QStringList :: 필터&lt;/a&gt; (). 일치하는 내용을 바꾸려면 &lt;a href=&quot;qstring#replace&quot;&gt;QString :: replace&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fac973584cf53b5fa0ce8a36ec517a019d5d6ac6" translate="yes" xml:space="preserve">
          <source>You must add all the necessary objects before loading any scripts.</source>
          <target state="translated">스크립트를로드하기 전에 필요한 모든 개체를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="d0b15a6d630a0e020d9efa04f0d4a1c4a1cce567" translate="yes" xml:space="preserve">
          <source>You must add all the objects necessary (using &lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;addObject&lt;/a&gt;())</source>
          <target state="translated">&lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;addObject&lt;/a&gt; ()를 사용하여 필요한 모든 객체를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="2cb643710309a8a9b3d476cb8db07a5db6d969d4" translate="yes" xml:space="preserve">
          <source>You must add the prepared target manually to &lt;a href=&quot;qmake-variable-reference#qmake-extra-targets&quot;&gt;QMAKE_EXTRA_TARGETS&lt;/a&gt;:</source>
          <target state="translated">준비된 대상을 &lt;a href=&quot;qmake-variable-reference#qmake-extra-targets&quot;&gt;QMAKE_EXTRA_TARGETS에&lt;/a&gt; 수동으로 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fcb62d050fdcbb01b6593b686bbb081ba33477ac" translate="yes" xml:space="preserve">
          <source>You must also remember to add &lt;code&gt;moc_foo.cpp&lt;/code&gt; to your &lt;code&gt;SOURCES&lt;/code&gt; (substitute your favorite name) variable and &lt;code&gt;moc_foo.o&lt;/code&gt; or &lt;code&gt;moc_foo.obj&lt;/code&gt; to your &lt;code&gt;OBJECTS&lt;/code&gt; variable.</source>
          <target state="translated">또한 추가 기억해야 &lt;code&gt;moc_foo.cpp&lt;/code&gt; 을 당신에게 &lt;code&gt;SOURCES&lt;/code&gt; 변수 (당신의 마음에 드는 이름으로 대체) &lt;code&gt;moc_foo.o&lt;/code&gt; 또는 &lt;code&gt;moc_foo.obj&lt;/code&gt; 당신에 &lt;code&gt;OBJECTS&lt;/code&gt; 의 변수입니다.</target>
        </trans-unit>
        <trans-unit id="44fd2f68b89616a6c0c1fdc1581c3f6eb5a31934" translate="yes" xml:space="preserve">
          <source>You must also remember to add &lt;code&gt;ui_foo.h&lt;/code&gt; to your &lt;code&gt;HEADERS&lt;/code&gt; (substitute your favorite name).</source>
          <target state="translated">또한 추가 기억해야 &lt;code&gt;ui_foo.h&lt;/code&gt; 당신에 &lt;code&gt;HEADERS&lt;/code&gt; (당신의 마음에 드는 이름으로 대체).</target>
        </trans-unit>
        <trans-unit id="e4b719d446e78ae5695647b72003bc520a7e9491" translate="yes" xml:space="preserve">
          <source>You must call &lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;() or &lt;a href=&quot;qsettings#beginWriteArray&quot;&gt;beginWriteArray&lt;/a&gt;() before you can call this function.</source>
          <target state="translated">당신은 호출해야합니다 &lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt; () 또는 &lt;a href=&quot;qsettings#beginWriteArray&quot;&gt;beginWriteArray&lt;/a&gt; 이 함수를 호출하기 전에 ()을.</target>
        </trans-unit>
        <trans-unit id="fad4a42f9fd59feedbf732f86a4a821d7f3d63e6" translate="yes" xml:space="preserve">
          <source>You must call this function after resetting any internal data structure in your model or proxy model.</source>
          <target state="translated">모델 또는 프록시 모델에서 내부 데이터 구조를 재설정 한 후이 함수를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="34fb6c2ea50c3f5ce1acf9eb79a4be7dc1b2aa90" translate="yes" xml:space="preserve">
          <source>You must call this function before resetting any internal data structures in your model or proxy model.</source>
          <target state="translated">모델 또는 프록시 모델에서 내부 데이터 구조를 재설정하기 전에이 함수를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="025712ed10202f9a7a7bc91c9b6373a2814f5eff" translate="yes" xml:space="preserve">
          <source>You must enable keyboard focus for a widget if it processes keyboard events. This is normally done from the widget's constructor. For instance, the &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; constructor calls setFocusPolicy(&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::StrongFocus&lt;/a&gt;).</source>
          <target state="translated">키보드 이벤트를 처리하는 경우 위젯에 대한 키보드 초점을 활성화해야합니다. 이것은 일반적으로 위젯의 생성자에서 수행됩니다. 예를 들어, &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 생성자는 setFocusPolicy ( &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt :: StrongFocus&lt;/a&gt; )를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4e096aea0878ab55798e9c4949f5e0774568dae1" translate="yes" xml:space="preserve">
          <source>You must ensure that</source>
          <target state="translated">당신은 확인해야합니다</target>
        </trans-unit>
        <trans-unit id="9180a697ab0330eaa5a2d85e93ebb3a92ceb545d" translate="yes" xml:space="preserve">
          <source>You must ensure that all objects created in a thread are deleted before you delete the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qthread&quot;&gt;QThread를&lt;/a&gt; 삭제하기 전에 스레드에서 작성된 모든 오브젝트가 삭제되었는지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4e8b52711a635a63dcae09e6d84e83c1b51be4f8" translate="yes" xml:space="preserve">
          <source>You must initialize the iterator using a &lt;a href=&quot;qcbormap&quot;&gt;QCborMap&lt;/a&gt; function like &lt;a href=&quot;qcbormap#begin&quot;&gt;QCborMap::begin&lt;/a&gt;(), &lt;a href=&quot;qcbormap#end&quot;&gt;QCborMap::end&lt;/a&gt;(), or &lt;a href=&quot;qcbormap#find&quot;&gt;QCborMap::find&lt;/a&gt;() before you can start iterating..</source>
          <target state="translated">반복을 &lt;a href=&quot;qcbormap#begin&quot;&gt;시작하기 전에 QCborMap :: begin&lt;/a&gt; (), &lt;a href=&quot;qcbormap#end&quot;&gt;QCborMap :: end&lt;/a&gt; () 또는 &lt;a href=&quot;qcbormap#find&quot;&gt;QCborMap :: find&lt;/a&gt; () 와 같은 &lt;a href=&quot;qcbormap&quot;&gt;QCborMap&lt;/a&gt; 함수를 사용하여 반복자를 초기화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="150cdf5a53857d7f2318c06c456c85702284dbe8" translate="yes" xml:space="preserve">
          <source>You must insert this grid into another layout. You can insert widgets and layouts into this layout at any time, but laying out will not be performed before this is inserted into another layout.</source>
          <target state="translated">이 그리드를 다른 레이아웃에 삽입해야합니다. 언제든지이 레이아웃에 위젯과 레이아웃을 삽입 할 수 있지만 다른 레이아웃에 삽입하기 전에 레이아웃이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fcc269df905b5e22b0d94562c9dea6da8181de13" translate="yes" xml:space="preserve">
          <source>You must reimplement several functions to enable</source>
          <target state="translated">활성화하려면 여러 기능을 다시 구현해야합니다</target>
        </trans-unit>
        <trans-unit id="8a967b081c3eaf06e04560678556f83711a67439" translate="yes" xml:space="preserve">
          <source>You must reimplement the &lt;a href=&quot;qdesignertaskmenuextension#taskActions&quot;&gt;taskActions&lt;/a&gt;() function to return a list of actions that will be included in</source>
          <target state="translated">에 포함될 조치 목록을 리턴 하려면 &lt;a href=&quot;qdesignertaskmenuextension#taskActions&quot;&gt;taskActions&lt;/a&gt; () 함수를 다시 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="524b6dc4c14314c03c4440492b7d3b561c81d652" translate="yes" xml:space="preserve">
          <source>You must reimplement this function in a subclass of &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; to receive geometry updates. The layout will call this function when it does a rearrangement.</source>
          <target state="translated">지오메트리 업데이트를 수신하려면 &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; 의 서브 클래스에서이 함수를 다시 구현해야 합니다. 레이아웃은 재 배열시이 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="0f4635bd61638ea7ad9c3a219bacfc1e26d07967" translate="yes" xml:space="preserve">
          <source>You must use the &lt;code&gt;SIGNAL()&lt;/code&gt; and &lt;code&gt;SLOT()&lt;/code&gt; macros when specifying the</source>
          <target state="translated">당신은 사용해야합니다 &lt;code&gt;SIGNAL()&lt;/code&gt; 와 &lt;code&gt;SLOT()&lt;/code&gt; 매크로 지정</target>
        </trans-unit>
        <trans-unit id="d40600e33266851a3e2288342e1be3f429de89e3" translate="yes" xml:space="preserve">
          <source>You need the InterBase/Firebird development headers and libraries to build this plugin.</source>
          <target state="translated">이 플러그인을 빌드하려면 InterBase / Firebird 개발 헤더 및 라이브러리가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1a05f28ec070d88b3d997f36b25618dfce4dfb54" translate="yes" xml:space="preserve">
          <source>You need the MySQL / MariaDB header files, as well as the shared library &lt;code&gt;libmysqlclient.so&lt;/code&gt; / &lt;code&gt;libmariadb.so&lt;/code&gt;. Depending on your Linux distribution, you may need to install a package which is usually called &quot;mysql-devel&quot; or &quot;mariadb-devel&quot;.</source>
          <target state="translated">MySQL / MariaDB 헤더 파일과 공유 라이브러리 &lt;code&gt;libmysqlclient.so&lt;/code&gt; / &lt;code&gt;libmariadb.so&lt;/code&gt; 가 필요 합니다. Linux 배포판에 따라 일반적으로 &quot;mysql-devel&quot;또는 &quot;mariadb-devel&quot;이라는 패키지를 설치해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45b8c99ca5f396f11aa12684ab86ca5a7e56f713" translate="yes" xml:space="preserve">
          <source>You need the MySQL header files, as well as the shared library &lt;code&gt;libmysqlclient.so&lt;/code&gt;. Depending on your Linux distribution, you may need to install a package which is usually called &quot;mysql-devel&quot;.</source>
          <target state="translated">공유 라이브러리 &lt;code&gt;libmysqlclient.so&lt;/code&gt; 뿐만 아니라 MySQL 헤더 파일이 필요합니다 . Linux 배포판에 따라 일반적으로 &quot;mysql-devel&quot;이라는 패키지를 설치해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99be7e31185304b7d7efc7b80dff7cffa95e6289" translate="yes" xml:space="preserve">
          <source>You need the PostgreSQL client library and headers installed.</source>
          <target state="translated">PostgreSQL 클라이언트 라이브러리 및 헤더가 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4659abd66ed8ec0ffbe5ec7e98ce02a9c283331b" translate="yes" xml:space="preserve">
          <source>You need to enable support for console applications in order to use the stdin, stdout and stderr streams at the console. To do this, add the following declaration to your application's project file:</source>
          <target state="translated">콘솔에서 stdin, stdout 및 stderr 스트림을 사용하려면 콘솔 응용 프로그램을 지원해야합니다. 이렇게하려면 응용 프로그램의 프로젝트 파일에 다음 선언을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="81ee8576851527806716c277172296b44e921efe" translate="yes" xml:space="preserve">
          <source>You need to get the MySQL installation files (e.g. &lt;a href=&quot;https://dev.mysql.com/downloads/installer/&quot;&gt;mysql-installer-web-community-8.0.18.0.msi&lt;/a&gt;) or &lt;a href=&quot;https://downloads.mariadb.org/connector-c/3.1.5/&quot;&gt;mariadb-connector-c-3.1.5-win64.msi&lt;/a&gt;. Run the installer, select custom installation and install the MySQL C Connector which matches your Qt installation (x86 or x64). After installation check that the needed files are there:</source>
          <target state="translated">MySQL 설치 파일 (예 : &lt;a href=&quot;https://dev.mysql.com/downloads/installer/&quot;&gt;mysql-installer-web-community-8.0.18.0.msi&lt;/a&gt; ) 또는 &lt;a href=&quot;https://downloads.mariadb.org/connector-c/3.1.5/&quot;&gt;mariadb-connector-c-3.1.5-win64.msi를 가져와야&lt;/a&gt; 합니다. 설치 프로그램을 실행하고 사용자 지정 설치를 선택한 다음 Qt 설치 (x86 또는 x64)와 일치하는 MySQL C 커넥터를 설치합니다. 설치 후 필요한 파일이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="80aeccf0a7d4b8abd3063962044543386360c256" translate="yes" xml:space="preserve">
          <source>You need to get the MySQL installation files. Run &lt;code&gt;SETUP.EXE&lt;/code&gt; and choose &quot;Custom Install&quot;. Install the &quot;Libs &amp;amp; Include Files&quot; Module. Build the plugin as follows (here it is assumed that MySQL is installed in &lt;code&gt;C:\MySQL&lt;/code&gt;):</source>
          <target state="translated">MySQL 설치 파일이 필요합니다. &lt;code&gt;SETUP.EXE&lt;/code&gt; 를 실행 하고 &quot;Custom Install&quot;을 선택 하십시오 . &quot;Libs &amp;amp; Include Files&quot;모듈을 설치하십시오. 다음과 같이 플러그인을 빌드하십시오 (여기서는 MySQL이 &lt;code&gt;C:\MySQL&lt;/code&gt; 설치된 것으로 가정 ).</target>
        </trans-unit>
        <trans-unit id="ca269f36d93d9c2124a2fc4f222f38dd86068782" translate="yes" xml:space="preserve">
          <source>You need to have an event loop to be running, connect the &lt;a href=&quot;qprogressdialog#canceled&quot;&gt;canceled&lt;/a&gt;() signal to a slot that stops the operation, and call &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue&lt;/a&gt;() at intervals. For example:</source>
          <target state="translated">이벤트 루프가 실행 중이어야하고, &lt;a href=&quot;qprogressdialog#canceled&quot;&gt;취소 된&lt;/a&gt; () 신호를 작업을 중지하는 슬롯에 연결하고 , 간격을두고 &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue&lt;/a&gt; ()를 호출 해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1d65fc763faca7d967f2620529844b475752bb6e" translate="yes" xml:space="preserve">
          <source>You need to re-implement &lt;a href=&quot;qaccessibleactioninterface#actionNames&quot;&gt;actionNames()&lt;/a&gt; to return a list of all actions that the object supports. This list should not be localized.</source>
          <target state="translated">오브젝트가 지원하는 모든 조치 목록을 리턴하려면 &lt;a href=&quot;qaccessibleactioninterface#actionNames&quot;&gt;actionNames ()&lt;/a&gt; 를 다시 구현해야 합니다. 이 목록은 현지화되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="d762c22d395e6a998591ad7d68b7635f2cabcf6c" translate="yes" xml:space="preserve">
          <source>You need to send accessibility events from the custom user interface elements that you implement.</source>
          <target state="translated">구현 한 사용자 정의 사용자 인터페이스 요소에서 내게 필요한 옵션 이벤트를 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="28d2f6c6a10b743583160b0d1761424f14288a2e" translate="yes" xml:space="preserve">
          <source>You need to specify the target name for cross-compilation when configuring a Qt build:</source>
          <target state="translated">Qt 빌드를 구성 할 때 교차 컴파일을위한 대상 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="ab02614522d7934e3fe8aace05c736c12d21b321" translate="yes" xml:space="preserve">
          <source>You never have to call this explicitly. Qt destroys a plugin automatically when it is no longer used.</source>
          <target state="translated">이를 명시 적으로 호출 할 필요는 없습니다. Qt는 더 이상 사용하지 않으면 자동으로 플러그인을 파괴합니다.</target>
        </trans-unit>
        <trans-unit id="fdc6dd77ef3c9743783fbcedd180309c8cda5d90" translate="yes" xml:space="preserve">
          <source>You normally only need to call this function if you have subclassed &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; and reimplemented &lt;a href=&quot;qstandarditem#data&quot;&gt;data&lt;/a&gt;() and/or &lt;a href=&quot;qstandarditem#setData&quot;&gt;setData&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; 을 서브 클래 싱 하고 다시 구현 된 &lt;a href=&quot;qstandarditem#data&quot;&gt;데이터&lt;/a&gt; () 및 / 또는 &lt;a href=&quot;qstandarditem#setData&quot;&gt;setData&lt;/a&gt; () 가있는 경우 일반적으로이 함수를 호출하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="67cfd07ede57ee11ea18aa59e022fa51b6b86165" translate="yes" xml:space="preserve">
          <source>You normally only need to call this function if you have subclassed &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; and reimplemented &lt;a href=&quot;qtreewidgetitem#data&quot;&gt;data&lt;/a&gt;() and/or &lt;a href=&quot;qtreewidgetitem#setData&quot;&gt;setData&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; 을 서브 클래 싱 하고 &lt;a href=&quot;qtreewidgetitem#data&quot;&gt;데이터&lt;/a&gt; () 및 / 또는 &lt;a href=&quot;qtreewidgetitem#setData&quot;&gt;setData&lt;/a&gt; ()를 다시 구현 한 경우 일반적으로이 함수를 호출하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9062d899a9578693fcfccebc6c4db0d909d750f" translate="yes" xml:space="preserve">
          <source>You only need to call this function if you wish to send a specific type of change in place of the automatic handling.</source>
          <target state="translated">자동 처리 대신 특정 유형의 변경 사항을 보내려는 경우에만이 함수를 호출하면됩니다.</target>
        </trans-unit>
        <trans-unit id="73fccbb17da0866f270114c4b4d4e5dd651f2a72" translate="yes" xml:space="preserve">
          <source>You only need to pass the name of the signal or slot to this function, not the entire signature. For example, to asynchronously invoke the &lt;a href=&quot;qthread#quit&quot;&gt;quit()&lt;/a&gt; slot on a &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;, use the following code:</source>
          <target state="translated">신호 또는 슬롯 이름 만 전체 서명이 아닌이 기능에 전달하면됩니다. 예를 들어, &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; 에서 &lt;a href=&quot;qthread#quit&quot;&gt;quit ()&lt;/a&gt; 슬롯 을 비동기 적으로 호출 하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="be1ad281d7ff5ca79281324c8e41a0be0d9918cc" translate="yes" xml:space="preserve">
          <source>You only need to use the system variables that you have values for. For example, if you do not have any extra INCLUDEPATHs then you do not need to specify any. qmake will add the necessary default values. An example project file might look like this:</source>
          <target state="translated">값이있는 시스템 변수 만 사용해야합니다. 예를 들어, 추가 INCLUDEPATH가없는 경우에는 지정할 필요가 없습니다. qmake는 필요한 기본값을 추가합니다. 예제 프로젝트 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1a3f7a32ab9899f2b85604a4bbee868f65150cbf" translate="yes" xml:space="preserve">
          <source>You probably misplaced some curly braces. When you want an expression evaluated inside an element constructor, enclose the expression in curly braces. Without the curly braces, the expression will be interpreted as text. Here is a &lt;code&gt;sum()&lt;/code&gt; expression used in an &lt;code&gt;&amp;lt;e&amp;gt;&lt;/code&gt; element. The table shows cases where the curly braces are missing, misplaced, and placed correctly:</source>
          <target state="translated">당신은 아마도 중괄호를 잘못 배치했을 것입니다. 요소 생성자 안에서 식을 평가하려면 식을 중괄호로 묶습니다. 중괄호가 없으면 표현식은 텍스트로 해석됩니다. 다음은 &lt;code&gt;&amp;lt;e&amp;gt;&lt;/code&gt; 요소에 사용 된 &lt;code&gt;sum()&lt;/code&gt; 표현식 입니다. 이 표는 중괄호가 누락되고 잘못 배치되어 올바르게 배치 된 경우를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="261edfc02e53bf0555e896df132a951560d22e71" translate="yes" xml:space="preserve">
          <source>You probably need to write an onAccepted handler if you wish to change a color after the user has pressed the OK button, or an onCurrentColorChanged handler if you wish to react to every change the user makes while the dialog is open.</source>
          <target state="translated">사용자가 확인 버튼을 누른 후 색상을 변경하려면 onAccepted 핸들러를 작성하거나 대화 상자가 열려있는 동안 사용자가 변경 한 모든 내용에 반응하려면 onCurrentColorChanged 핸들러를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="3da58ade0307e17345af2b3a965c3a131359a127" translate="yes" xml:space="preserve">
          <source>You probably need to write an onAccepted handler if you wish to change a font after the user has pressed the OK button, or an onCurrentFontChanged handler if you wish to react to every change the user makes while the dialog is open.</source>
          <target state="translated">사용자가 확인 버튼을 누른 후 글꼴을 변경하려면 onAccepted 핸들러를 작성해야하거나 대화 상자가 열려있는 동안 사용자가 변경 한 모든 내용에 반응하려면 onCurrentFontChanged 핸들러를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="ec2c3b40d2bfc47f633b056ecab0d6772e4349ad" translate="yes" xml:space="preserve">
          <source>You probably want to call &lt;a href=&quot;qtextcursor#positionInBlock&quot;&gt;positionInBlock&lt;/a&gt;() instead.</source>
          <target state="translated">대신 &lt;a href=&quot;qtextcursor#positionInBlock&quot;&gt;positionInBlock&lt;/a&gt; () 을 호출하고 싶을 것입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
